
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

000123f0 <.init>:
   123f0:	push	{r3, lr}
   123f4:	bl	1257c <_start@@Base+0x3c>
   123f8:	pop	{r3, pc}

Disassembly of section .plt:

000123fc <raise@plt-0x14>:
   123fc:	push	{lr}		; (str lr, [sp, #-4]!)
   12400:	ldr	lr, [pc, #4]	; 1240c <raise@plt-0x4>
   12404:	add	lr, pc, lr
   12408:	ldr	pc, [lr, #8]!
   1240c:	strdeq	pc, [r1], -r4

00012410 <raise@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #126976	; 0x1f000
   12418:	ldr	pc, [ip, #3060]!	; 0xbf4

0001241c <strcmp@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #126976	; 0x1f000
   12424:	ldr	pc, [ip, #3052]!	; 0xbec

00012428 <fopen@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #126976	; 0x1f000
   12430:	ldr	pc, [ip, #3044]!	; 0xbe4

00012434 <memmove@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #126976	; 0x1f000
   1243c:	ldr	pc, [ip, #3036]!	; 0xbdc

00012440 <free@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #126976	; 0x1f000
   12448:	ldr	pc, [ip, #3028]!	; 0xbd4

0001244c <memcpy@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #126976	; 0x1f000
   12454:	ldr	pc, [ip, #3020]!	; 0xbcc

00012458 <ftell@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #126976	; 0x1f000
   12460:	ldr	pc, [ip, #3012]!	; 0xbc4

00012464 <memcmp@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #126976	; 0x1f000
   1246c:	ldr	pc, [ip, #3004]!	; 0xbbc

00012470 <rewind@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #126976	; 0x1f000
   12478:	ldr	pc, [ip, #2996]!	; 0xbb4

0001247c <realloc@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #126976	; 0x1f000
   12484:	ldr	pc, [ip, #2988]!	; 0xbac

00012488 <fwrite@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #126976	; 0x1f000
   12490:	ldr	pc, [ip, #2980]!	; 0xba4

00012494 <fread@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #126976	; 0x1f000
   1249c:	ldr	pc, [ip, #2972]!	; 0xb9c

000124a0 <puts@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #126976	; 0x1f000
   124a8:	ldr	pc, [ip, #2964]!	; 0xb94

000124ac <malloc@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #126976	; 0x1f000
   124b4:	ldr	pc, [ip, #2956]!	; 0xb8c

000124b8 <__libc_start_main@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #126976	; 0x1f000
   124c0:	ldr	pc, [ip, #2948]!	; 0xb84

000124c4 <__gmon_start__@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #126976	; 0x1f000
   124cc:	ldr	pc, [ip, #2940]!	; 0xb7c

000124d0 <exit@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #126976	; 0x1f000
   124d8:	ldr	pc, [ip, #2932]!	; 0xb74

000124dc <fprintf@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #126976	; 0x1f000
   124e4:	ldr	pc, [ip, #2924]!	; 0xb6c

000124e8 <memset@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #126976	; 0x1f000
   124f0:	ldr	pc, [ip, #2916]!	; 0xb64

000124f4 <strncpy@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #126976	; 0x1f000
   124fc:	ldr	pc, [ip, #2908]!	; 0xb5c

00012500 <fclose@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #126976	; 0x1f000
   12508:	ldr	pc, [ip, #2900]!	; 0xb54

0001250c <sprintf@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #126976	; 0x1f000
   12514:	ldr	pc, [ip, #2892]!	; 0xb4c

00012518 <fseek@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #126976	; 0x1f000
   12520:	ldr	pc, [ip, #2884]!	; 0xb44

00012524 <abort@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #126976	; 0x1f000
   1252c:	ldr	pc, [ip, #2876]!	; 0xb3c

00012530 <__assert_fail@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #126976	; 0x1f000
   12538:	ldr	pc, [ip, #2868]!	; 0xb34

Disassembly of section .text:

00012540 <_start@@Base>:
   12540:	mov	fp, #0
   12544:	mov	lr, #0
   12548:	pop	{r1}		; (ldr r1, [sp], #4)
   1254c:	mov	r2, sp
   12550:	push	{r2}		; (str r2, [sp, #-4]!)
   12554:	push	{r0}		; (str r0, [sp, #-4]!)
   12558:	ldr	ip, [pc, #16]	; 12570 <_start@@Base+0x30>
   1255c:	push	{ip}		; (str ip, [sp, #-4]!)
   12560:	ldr	r0, [pc, #12]	; 12574 <_start@@Base+0x34>
   12564:	ldr	r3, [pc, #12]	; 12578 <_start@@Base+0x38>
   12568:	bl	124b8 <__libc_start_main@plt>
   1256c:	bl	12524 <abort@plt>
   12570:	strdeq	r0, [r2], -r4
   12574:	andeq	r3, r1, r8, lsl #21
   12578:	muleq	r2, r4, ip
   1257c:	ldr	r3, [pc, #20]	; 12598 <_start@@Base+0x58>
   12580:	ldr	r2, [pc, #20]	; 1259c <_start@@Base+0x5c>
   12584:	add	r3, pc, r3
   12588:	ldr	r2, [r3, r2]
   1258c:	cmp	r2, #0
   12590:	bxeq	lr
   12594:	b	124c4 <__gmon_start__@plt>
   12598:	andeq	pc, r1, r4, ror sl	; <UNPREDICTABLE>
   1259c:	andeq	r0, r0, r0, ror r0
   125a0:	ldr	r3, [pc, #28]	; 125c4 <_start@@Base+0x84>
   125a4:	ldr	r0, [pc, #28]	; 125c8 <_start@@Base+0x88>
   125a8:	sub	r3, r3, r0
   125ac:	cmp	r3, #6
   125b0:	bxls	lr
   125b4:	ldr	r3, [pc, #16]	; 125cc <_start@@Base+0x8c>
   125b8:	cmp	r3, #0
   125bc:	bxeq	lr
   125c0:	bx	r3
   125c4:	andeq	r2, r3, r7, lsl #1
   125c8:	andeq	r2, r3, r4, lsl #1
   125cc:	andeq	r0, r0, r0
   125d0:	ldr	r1, [pc, #36]	; 125fc <_start@@Base+0xbc>
   125d4:	ldr	r0, [pc, #36]	; 12600 <_start@@Base+0xc0>
   125d8:	sub	r1, r1, r0
   125dc:	asr	r1, r1, #2
   125e0:	add	r1, r1, r1, lsr #31
   125e4:	asrs	r1, r1, #1
   125e8:	bxeq	lr
   125ec:	ldr	r3, [pc, #16]	; 12604 <_start@@Base+0xc4>
   125f0:	cmp	r3, #0
   125f4:	bxeq	lr
   125f8:	bx	r3
   125fc:	andeq	r2, r3, r4, lsl #1
   12600:	andeq	r2, r3, r4, lsl #1
   12604:	andeq	r0, r0, r0
   12608:	push	{r4, lr}
   1260c:	ldr	r4, [pc, #24]	; 1262c <_start@@Base+0xec>
   12610:	ldrb	r3, [r4]
   12614:	cmp	r3, #0
   12618:	popne	{r4, pc}
   1261c:	bl	125a0 <_start@@Base+0x60>
   12620:	mov	r3, #1
   12624:	strb	r3, [r4]
   12628:	pop	{r4, pc}
   1262c:	muleq	r3, r0, r0
   12630:	ldr	r0, [pc, #40]	; 12660 <_start@@Base+0x120>
   12634:	ldr	r3, [r0]
   12638:	cmp	r3, #0
   1263c:	bne	12644 <_start@@Base+0x104>
   12640:	b	125d0 <_start@@Base+0x90>
   12644:	ldr	r3, [pc, #24]	; 12664 <_start@@Base+0x124>
   12648:	cmp	r3, #0
   1264c:	beq	12640 <_start@@Base+0x100>
   12650:	push	{r4, lr}
   12654:	blx	r3
   12658:	pop	{r4, lr}
   1265c:	b	125d0 <_start@@Base+0x90>
   12660:	andeq	r1, r3, r4, lsl pc
   12664:	andeq	r0, r0, r0
   12668:	bx	lr
   1266c:	bx	lr
   12670:	push	{r4, r5, r6, lr}
   12674:	sub	sp, sp, #8
   12678:	mov	r4, r0
   1267c:	mov	r5, r1
   12680:	ldr	r3, [pc, #96]	; 126e8 <_start@@Base+0x1a8>
   12684:	str	r3, [sp, #4]
   12688:	mov	r3, #21
   1268c:	str	r3, [sp]
   12690:	ldr	r3, [pc, #84]	; 126ec <_start@@Base+0x1ac>
   12694:	mov	r2, #0
   12698:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   1269c:	ldr	r3, [pc, #76]	; 126f0 <_start@@Base+0x1b0>
   126a0:	str	r3, [sp, #4]
   126a4:	mov	r6, #22
   126a8:	str	r6, [sp]
   126ac:	ldr	r3, [pc, #64]	; 126f4 <_start@@Base+0x1b4>
   126b0:	mov	r2, #1
   126b4:	mov	r1, r5
   126b8:	mov	r0, r4
   126bc:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   126c0:	ldr	r3, [pc, #48]	; 126f8 <_start@@Base+0x1b8>
   126c4:	str	r3, [sp, #4]
   126c8:	str	r6, [sp]
   126cc:	ldr	r3, [pc, #40]	; 126fc <_start@@Base+0x1bc>
   126d0:	mov	r2, #2
   126d4:	mov	r1, r5
   126d8:	mov	r0, r4
   126dc:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   126e0:	add	sp, sp, #8
   126e4:	pop	{r4, r5, r6, pc}
   126e8:	andeq	r2, r1, ip, ror #15
   126ec:	andeq	r0, r2, r4, lsr #28
   126f0:	andeq	r2, r1, ip, lsl #15
   126f4:	andeq	r0, r2, ip, lsr lr
   126f8:	andeq	r2, r1, ip, lsr #14
   126fc:	andeq	r0, r2, r4, asr lr
   12700:	push	{lr}		; (str lr, [sp, #-4]!)
   12704:	sub	sp, sp, #12
   12708:	mov	r2, #0
   1270c:	str	r2, [sp, #4]
   12710:	mov	r3, #19
   12714:	str	r3, [sp]
   12718:	ldr	r3, [pc, #8]	; 12728 <_start@@Base+0x1e8>
   1271c:	bl	17470 <flatcc_json_printer_int32_field@@Base>
   12720:	add	sp, sp, #12
   12724:	pop	{pc}		; (ldr pc, [sp], #4)
   12728:	andeq	r0, r2, ip, ror #28
   1272c:	push	{r4, r5, lr}
   12730:	sub	sp, sp, #20
   12734:	mov	r4, r0
   12738:	mov	r5, r1
   1273c:	mov	r2, #0
   12740:	mov	r3, #0
   12744:	strd	r2, [sp, #8]
   12748:	mov	r3, #15
   1274c:	str	r3, [sp]
   12750:	ldr	r3, [pc, #44]	; 12784 <_start@@Base+0x244>
   12754:	bl	17658 <flatcc_json_printer_int64_field@@Base>
   12758:	mov	r3, #0
   1275c:	str	r3, [sp, #4]
   12760:	mov	r3, #21
   12764:	str	r3, [sp]
   12768:	ldr	r3, [pc, #24]	; 12788 <_start@@Base+0x248>
   1276c:	mov	r2, #1
   12770:	mov	r1, r5
   12774:	mov	r0, r4
   12778:	bl	16cc8 <flatcc_json_printer_uint32_field@@Base>
   1277c:	add	sp, sp, #20
   12780:	pop	{r4, r5, pc}
   12784:	andeq	r0, r2, r0, lsl #29
   12788:	muleq	r2, r0, lr
   1278c:	push	{r4, r5, lr}
   12790:	sub	sp, sp, #20
   12794:	mov	r4, r0
   12798:	mov	r5, r1
   1279c:	mov	r2, #0
   127a0:	mov	r3, #0
   127a4:	strd	r2, [sp, #8]
   127a8:	mov	r3, #15
   127ac:	str	r3, [sp]
   127b0:	ldr	r3, [pc, #44]	; 127e4 <_start@@Base+0x2a4>
   127b4:	bl	17658 <flatcc_json_printer_int64_field@@Base>
   127b8:	mov	r3, #0
   127bc:	str	r3, [sp, #4]
   127c0:	mov	r3, #16
   127c4:	str	r3, [sp]
   127c8:	ldr	r3, [pc, #24]	; 127e8 <_start@@Base+0x2a8>
   127cc:	mov	r2, #1
   127d0:	mov	r1, r5
   127d4:	mov	r0, r4
   127d8:	bl	16cc8 <flatcc_json_printer_uint32_field@@Base>
   127dc:	add	sp, sp, #20
   127e0:	pop	{r4, r5, pc}
   127e4:	andeq	r0, r2, r0, lsl #29
   127e8:	andeq	r0, r2, r8, lsr #29
   127ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127f0:	sub	sp, sp, #20
   127f4:	mov	r4, r0
   127f8:	mov	r5, r1
   127fc:	mov	r7, #4
   12800:	str	r7, [sp]
   12804:	ldr	r3, [pc, #248]	; 12904 <_start@@Base+0x3c4>
   12808:	mov	r2, #0
   1280c:	bl	16430 <flatcc_json_printer_string_field@@Base>
   12810:	mov	fp, #0
   12814:	str	fp, [sp, #4]
   12818:	mov	sl, #9
   1281c:	str	sl, [sp]
   12820:	ldr	r3, [pc, #224]	; 12908 <_start@@Base+0x3c8>
   12824:	mov	r2, #1
   12828:	mov	r1, r5
   1282c:	mov	r0, r4
   12830:	bl	16cc8 <flatcc_json_printer_uint32_field@@Base>
   12834:	str	r7, [sp]
   12838:	ldr	r3, [pc, #204]	; 1290c <_start@@Base+0x3cc>
   1283c:	mov	r2, #2
   12840:	mov	r1, r5
   12844:	mov	r0, r4
   12848:	bl	16430 <flatcc_json_printer_string_field@@Base>
   1284c:	mov	r8, #0
   12850:	mov	r9, #0
   12854:	strd	r8, [sp, #8]
   12858:	mov	r6, #8
   1285c:	str	r6, [sp]
   12860:	ldr	r3, [pc, #168]	; 12910 <_start@@Base+0x3d0>
   12864:	mov	r2, #3
   12868:	mov	r1, r5
   1286c:	mov	r0, r4
   12870:	bl	17658 <flatcc_json_printer_int64_field@@Base>
   12874:	str	r7, [sp]
   12878:	ldr	r3, [pc, #148]	; 12914 <_start@@Base+0x3d4>
   1287c:	mov	r2, r7
   12880:	mov	r1, r5
   12884:	mov	r0, r4
   12888:	bl	16430 <flatcc_json_printer_string_field@@Base>
   1288c:	strd	r8, [sp, #8]
   12890:	str	r6, [sp]
   12894:	ldr	r3, [pc, #124]	; 12918 <_start@@Base+0x3d8>
   12898:	mov	r2, #5
   1289c:	mov	r1, r5
   128a0:	mov	r0, r4
   128a4:	bl	17658 <flatcc_json_printer_int64_field@@Base>
   128a8:	str	fp, [sp, #4]
   128ac:	str	sl, [sp]
   128b0:	ldr	r3, [pc, #100]	; 1291c <_start@@Base+0x3dc>
   128b4:	mov	r2, #6
   128b8:	mov	r1, r5
   128bc:	mov	r0, r4
   128c0:	bl	16cc8 <flatcc_json_printer_uint32_field@@Base>
   128c4:	strd	r8, [sp, #8]
   128c8:	str	r6, [sp]
   128cc:	ldr	r3, [pc, #76]	; 12920 <_start@@Base+0x3e0>
   128d0:	mov	r2, #7
   128d4:	mov	r1, r5
   128d8:	mov	r0, r4
   128dc:	bl	17658 <flatcc_json_printer_int64_field@@Base>
   128e0:	str	fp, [sp, #4]
   128e4:	str	sl, [sp]
   128e8:	ldr	r3, [pc, #52]	; 12924 <_start@@Base+0x3e4>
   128ec:	mov	r2, r6
   128f0:	mov	r1, r5
   128f4:	mov	r0, r4
   128f8:	bl	16cc8 <flatcc_json_printer_uint32_field@@Base>
   128fc:	add	sp, sp, #20
   12900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12904:			; <UNDEFINED> instruction: 0x00020ebc
   12908:	andeq	r0, r2, r4, asr #29
   1290c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   12910:	ldrdeq	r0, [r2], -r8
   12914:	andeq	r0, r2, r4, ror #29
   12918:	andeq	r0, r2, ip, ror #29
   1291c:	strdeq	r0, [r2], -r8
   12920:	andeq	r0, r2, r4, lsl #30
   12924:	andeq	r0, r2, r0, lsl pc
   12928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1292c:	sub	sp, sp, #20
   12930:	mov	r4, r0
   12934:	mov	r5, r1
   12938:	ldr	r3, [pc, #1096]	; 12d88 <_start@@Base+0x848>
   1293c:	str	r3, [sp, #4]
   12940:	mov	r6, #3
   12944:	str	r6, [sp]
   12948:	ldr	r3, [pc, #1084]	; 12d8c <_start@@Base+0x84c>
   1294c:	mov	r2, #0
   12950:	bl	1ff28 <flatcc_json_printer_struct_field@@Base>
   12954:	mov	r3, #150	; 0x96
   12958:	str	r3, [sp, #4]
   1295c:	mov	r7, #4
   12960:	str	r7, [sp]
   12964:	ldr	r3, [pc, #1060]	; 12d90 <_start@@Base+0x850>
   12968:	mov	r2, #1
   1296c:	mov	r1, r5
   12970:	mov	r0, r4
   12974:	bl	17288 <flatcc_json_printer_int16_field@@Base>
   12978:	mov	r3, #100	; 0x64
   1297c:	str	r3, [sp, #4]
   12980:	mov	r2, #2
   12984:	str	r2, [sp]
   12988:	ldr	r3, [pc, #1028]	; 12d94 <_start@@Base+0x854>
   1298c:	mov	r1, r5
   12990:	mov	r0, r4
   12994:	bl	17288 <flatcc_json_printer_int16_field@@Base>
   12998:	str	r7, [sp]
   1299c:	ldr	r3, [pc, #1012]	; 12d98 <_start@@Base+0x858>
   129a0:	mov	r2, r6
   129a4:	mov	r1, r5
   129a8:	mov	r0, r4
   129ac:	bl	16430 <flatcc_json_printer_string_field@@Base>
   129b0:	mov	r8, #9
   129b4:	str	r8, [sp]
   129b8:	ldr	r3, [pc, #988]	; 12d9c <_start@@Base+0x85c>
   129bc:	mov	r2, #5
   129c0:	mov	r1, r5
   129c4:	mov	r0, r4
   129c8:	bl	1b184 <flatcc_json_printer_uint8_vector_field@@Base>
   129cc:	ldr	r3, [pc, #972]	; 12da0 <_start@@Base+0x860>
   129d0:	str	r3, [sp, #8]
   129d4:	mov	fp, #8
   129d8:	str	fp, [sp, #4]
   129dc:	mov	r9, #5
   129e0:	str	r9, [sp]
   129e4:	ldr	r3, [pc, #952]	; 12da4 <_start@@Base+0x864>
   129e8:	mov	r2, #6
   129ec:	mov	r1, r5
   129f0:	mov	r0, r4
   129f4:	bl	18634 <flatcc_json_printer_int8_enum_field@@Base>
   129f8:	ldr	r3, [pc, #936]	; 12da8 <_start@@Base+0x868>
   129fc:	str	r3, [sp, #8]
   12a00:	ldr	r3, [pc, #932]	; 12dac <_start@@Base+0x86c>
   12a04:	str	r3, [sp, #4]
   12a08:	str	r7, [sp]
   12a0c:	ldr	r3, [pc, #924]	; 12db0 <_start@@Base+0x870>
   12a10:	mov	r2, fp
   12a14:	mov	r1, r5
   12a18:	mov	r0, r4
   12a1c:	bl	1f850 <flatcc_json_printer_union_field@@Base>
   12a20:	ldr	r3, [pc, #908]	; 12db4 <_start@@Base+0x874>
   12a24:	str	r3, [sp, #8]
   12a28:	str	r7, [sp, #4]
   12a2c:	str	r9, [sp]
   12a30:	ldr	r3, [pc, #896]	; 12db8 <_start@@Base+0x878>
   12a34:	mov	r2, r8
   12a38:	mov	r1, r5
   12a3c:	mov	r0, r4
   12a40:	bl	1e6d0 <flatcc_json_printer_struct_vector_field@@Base>
   12a44:	mov	r6, #17
   12a48:	str	r6, [sp]
   12a4c:	ldr	r3, [pc, #872]	; 12dbc <_start@@Base+0x87c>
   12a50:	mov	r2, #10
   12a54:	mov	r1, r5
   12a58:	mov	r0, r4
   12a5c:	bl	1ea44 <flatcc_json_printer_string_vector_field@@Base>
   12a60:	ldr	sl, [pc, #856]	; 12dc0 <_start@@Base+0x880>
   12a64:	str	sl, [sp, #4]
   12a68:	str	r6, [sp]
   12a6c:	ldr	r3, [pc, #848]	; 12dc4 <_start@@Base+0x884>
   12a70:	mov	r2, #11
   12a74:	mov	r1, r5
   12a78:	mov	r0, r4
   12a7c:	bl	1ee30 <flatcc_json_printer_table_vector_field@@Base>
   12a80:	str	sl, [sp, #4]
   12a84:	str	r9, [sp]
   12a88:	ldr	r3, [pc, #824]	; 12dc8 <_start@@Base+0x888>
   12a8c:	mov	r2, #12
   12a90:	mov	r1, r5
   12a94:	mov	r0, r4
   12a98:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   12a9c:	str	sl, [sp, #8]
   12aa0:	mov	sl, #0
   12aa4:	str	sl, [sp, #4]
   12aa8:	mov	r3, #20
   12aac:	str	r3, [sp]
   12ab0:	ldr	r3, [pc, #788]	; 12dcc <_start@@Base+0x88c>
   12ab4:	mov	r2, #13
   12ab8:	mov	r1, r5
   12abc:	mov	r0, r4
   12ac0:	bl	20584 <flatcc_json_printer_table_as_nested_root@@Base>
   12ac4:	ldr	r3, [pc, #772]	; 12dd0 <_start@@Base+0x890>
   12ac8:	str	r3, [sp, #4]
   12acc:	str	r8, [sp]
   12ad0:	ldr	r3, [pc, #764]	; 12dd4 <_start@@Base+0x894>
   12ad4:	mov	r2, #14
   12ad8:	mov	r1, r5
   12adc:	mov	r0, r4
   12ae0:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   12ae4:	mov	r3, #1
   12ae8:	str	r3, [sp, #4]
   12aec:	str	fp, [sp]
   12af0:	ldr	r3, [pc, #736]	; 12dd8 <_start@@Base+0x898>
   12af4:	mov	r2, #15
   12af8:	mov	r1, r5
   12afc:	mov	r0, r4
   12b00:	bl	17848 <flatcc_json_printer_bool_field@@Base>
   12b04:	str	sl, [sp, #4]
   12b08:	mov	r8, #16
   12b0c:	str	r8, [sp]
   12b10:	ldr	r3, [pc, #708]	; 12ddc <_start@@Base+0x89c>
   12b14:	mov	r2, r8
   12b18:	mov	r1, r5
   12b1c:	mov	r0, r4
   12b20:	bl	17470 <flatcc_json_printer_int32_field@@Base>
   12b24:	str	sl, [sp, #4]
   12b28:	str	r8, [sp]
   12b2c:	ldr	r3, [pc, #684]	; 12de0 <_start@@Base+0x8a0>
   12b30:	mov	r2, r6
   12b34:	mov	r1, r5
   12b38:	mov	r0, r4
   12b3c:	bl	16cc8 <flatcc_json_printer_uint32_field@@Base>
   12b40:	mov	r2, #0
   12b44:	mov	r3, #0
   12b48:	strd	r2, [sp, #8]
   12b4c:	str	r8, [sp]
   12b50:	ldr	r3, [pc, #652]	; 12de4 <_start@@Base+0x8a4>
   12b54:	mov	r2, #18
   12b58:	mov	r1, r5
   12b5c:	mov	r0, r4
   12b60:	bl	17658 <flatcc_json_printer_int64_field@@Base>
   12b64:	mov	r2, #0
   12b68:	mov	r3, #0
   12b6c:	strd	r2, [sp, #8]
   12b70:	str	r8, [sp]
   12b74:	ldr	r3, [pc, #620]	; 12de8 <_start@@Base+0x8a8>
   12b78:	mov	r2, #19
   12b7c:	mov	r1, r5
   12b80:	mov	r0, r4
   12b84:	bl	16eb0 <flatcc_json_printer_uint64_field@@Base>
   12b88:	str	sl, [sp, #4]
   12b8c:	str	r6, [sp]
   12b90:	ldr	r3, [pc, #596]	; 12dec <_start@@Base+0x8ac>
   12b94:	mov	r2, #20
   12b98:	mov	r1, r5
   12b9c:	mov	r0, r4
   12ba0:	bl	17470 <flatcc_json_printer_int32_field@@Base>
   12ba4:	str	sl, [sp, #4]
   12ba8:	str	r6, [sp]
   12bac:	ldr	r3, [pc, #572]	; 12df0 <_start@@Base+0x8b0>
   12bb0:	mov	r2, #21
   12bb4:	mov	r1, r5
   12bb8:	mov	r0, r4
   12bbc:	bl	16cc8 <flatcc_json_printer_uint32_field@@Base>
   12bc0:	mov	r2, #0
   12bc4:	mov	r3, #0
   12bc8:	strd	r2, [sp, #8]
   12bcc:	str	r6, [sp]
   12bd0:	ldr	r3, [pc, #540]	; 12df4 <_start@@Base+0x8b4>
   12bd4:	mov	r2, #22
   12bd8:	mov	r1, r5
   12bdc:	mov	r0, r4
   12be0:	bl	17658 <flatcc_json_printer_int64_field@@Base>
   12be4:	mov	r2, #0
   12be8:	mov	r3, #0
   12bec:	strd	r2, [sp, #8]
   12bf0:	str	r6, [sp]
   12bf4:	ldr	r3, [pc, #508]	; 12df8 <_start@@Base+0x8b8>
   12bf8:	mov	r2, #23
   12bfc:	mov	r1, r5
   12c00:	mov	r0, r4
   12c04:	bl	16eb0 <flatcc_json_printer_uint64_field@@Base>
   12c08:	str	r8, [sp]
   12c0c:	ldr	r3, [pc, #488]	; 12dfc <_start@@Base+0x8bc>
   12c10:	mov	r2, #24
   12c14:	mov	r1, r5
   12c18:	mov	r0, r4
   12c1c:	bl	1c644 <flatcc_json_printer_bool_vector_field@@Base>
   12c20:	str	r9, [sp]
   12c24:	vldr	s0, [pc, #336]	; 12d7c <_start@@Base+0x83c>
   12c28:	ldr	r3, [pc, #464]	; 12e00 <_start@@Base+0x8c0>
   12c2c:	mov	r2, #25
   12c30:	mov	r1, r5
   12c34:	mov	r0, r4
   12c38:	bl	17a30 <flatcc_json_printer_float_field@@Base>
   12c3c:	mov	r8, #6
   12c40:	str	r8, [sp]
   12c44:	vldr	s0, [pc, #308]	; 12d80 <_start@@Base+0x840>
   12c48:	ldr	r3, [pc, #436]	; 12e04 <_start@@Base+0x8c4>
   12c4c:	mov	r2, #26
   12c50:	mov	r1, r5
   12c54:	mov	r0, r4
   12c58:	bl	17a30 <flatcc_json_printer_float_field@@Base>
   12c5c:	str	r8, [sp]
   12c60:	vldr	s0, [pc, #284]	; 12d84 <_start@@Base+0x844>
   12c64:	ldr	r3, [pc, #412]	; 12e08 <_start@@Base+0x8c8>
   12c68:	mov	r2, #27
   12c6c:	mov	r1, r5
   12c70:	mov	r0, r4
   12c74:	bl	17a30 <flatcc_json_printer_float_field@@Base>
   12c78:	mov	r3, #18
   12c7c:	str	r3, [sp]
   12c80:	ldr	r3, [pc, #388]	; 12e0c <_start@@Base+0x8cc>
   12c84:	mov	r2, #28
   12c88:	mov	r1, r5
   12c8c:	mov	r0, r4
   12c90:	bl	1ea44 <flatcc_json_printer_string_vector_field@@Base>
   12c94:	ldr	r3, [pc, #372]	; 12e10 <_start@@Base+0x8d0>
   12c98:	str	r3, [sp, #8]
   12c9c:	str	fp, [sp, #4]
   12ca0:	mov	r3, #23
   12ca4:	str	r3, [sp]
   12ca8:	ldr	r3, [pc, #356]	; 12e14 <_start@@Base+0x8d4>
   12cac:	mov	r2, #29
   12cb0:	mov	r1, r5
   12cb4:	mov	r0, r4
   12cb8:	bl	1e6d0 <flatcc_json_printer_struct_vector_field@@Base>
   12cbc:	str	r7, [sp]
   12cc0:	ldr	r3, [pc, #336]	; 12e18 <_start@@Base+0x8d8>
   12cc4:	mov	r2, #30
   12cc8:	mov	r1, r5
   12ccc:	mov	r0, r4
   12cd0:	bl	1b184 <flatcc_json_printer_uint8_vector_field@@Base>
   12cd4:	ldr	r3, [pc, #216]	; 12db4 <_start@@Base+0x874>
   12cd8:	str	r3, [sp, #8]
   12cdc:	str	r7, [sp, #4]
   12ce0:	str	r9, [sp]
   12ce4:	ldr	r3, [pc, #304]	; 12e1c <_start@@Base+0x8dc>
   12ce8:	mov	r2, #31
   12cec:	mov	r1, r5
   12cf0:	mov	r0, r4
   12cf4:	bl	1e6d0 <flatcc_json_printer_struct_vector_field@@Base>
   12cf8:	mov	r3, #15
   12cfc:	str	r3, [sp]
   12d00:	ldr	r3, [pc, #280]	; 12e20 <_start@@Base+0x8e0>
   12d04:	mov	r2, #32
   12d08:	mov	r1, r5
   12d0c:	mov	r0, r4
   12d10:	bl	1c3d0 <flatcc_json_printer_int64_vector_field@@Base>
   12d14:	str	r6, [sp]
   12d18:	ldr	r3, [pc, #260]	; 12e24 <_start@@Base+0x8e4>
   12d1c:	mov	r2, #33	; 0x21
   12d20:	mov	r1, r5
   12d24:	mov	r0, r4
   12d28:	bl	1cb2c <flatcc_json_printer_double_vector_field@@Base>
   12d2c:	ldr	r3, [pc, #244]	; 12e28 <_start@@Base+0x8e8>
   12d30:	str	r3, [sp, #4]
   12d34:	mov	r3, #21
   12d38:	str	r3, [sp]
   12d3c:	ldr	r3, [pc, #232]	; 12e2c <_start@@Base+0x8ec>
   12d40:	mov	r2, #34	; 0x22
   12d44:	mov	r1, r5
   12d48:	mov	r0, r4
   12d4c:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   12d50:	ldr	r3, [pc, #216]	; 12e30 <_start@@Base+0x8f0>
   12d54:	str	r3, [sp, #4]
   12d58:	mov	r3, #10
   12d5c:	str	r3, [sp]
   12d60:	ldr	r3, [pc, #204]	; 12e34 <_start@@Base+0x8f4>
   12d64:	mov	r2, #35	; 0x23
   12d68:	mov	r1, r5
   12d6c:	mov	r0, r4
   12d70:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   12d74:	add	sp, sp, #20
   12d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d7c:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   12d80:	submi	r0, r0, r0
   12d84:	andeq	r0, r0, r0
   12d88:	andeq	r3, r1, r0, lsr #11
   12d8c:	andeq	r0, r2, ip, lsl pc
   12d90:	andeq	r0, r2, r0, lsr #30
   12d94:	andeq	r0, r2, r8, lsr #30
   12d98:	andeq	r0, r2, ip, lsr #30
   12d9c:	andeq	r0, r2, r4, lsr pc
   12da0:	ldrdeq	r3, [r1], -r4
   12da4:	andeq	r0, r2, r0, asr #30
   12da8:	andeq	r3, r1, r0
   12dac:	andeq	r3, r1, r0, lsr #7
   12db0:	andeq	r0, r2, r8, asr #30
   12db4:	andeq	r2, r1, r0, lsr #31
   12db8:	andeq	r0, r2, r0, asr pc
   12dbc:	andeq	r0, r2, r8, asr pc
   12dc0:	andeq	r2, r1, r8, lsr #18
   12dc4:	andeq	r0, r2, ip, ror #30
   12dc8:	andeq	r0, r2, r0, lsl #31
   12dcc:	andeq	r0, r2, r8, lsl #31
   12dd0:	andeq	r2, r1, ip, lsl pc
   12dd4:	andeq	r0, r2, r0, lsr #31
   12dd8:	andeq	r0, r2, ip, lsr #31
   12ddc:			; <UNDEFINED> instruction: 0x00020fb8
   12de0:	andeq	r0, r2, ip, asr #31
   12de4:	andeq	r0, r2, r0, ror #31
   12de8:	strdeq	r0, [r2], -r4
   12dec:	andeq	r1, r2, r8
   12df0:	andeq	r1, r2, ip, lsl r0
   12df4:	andeq	r1, r2, r0, lsr r0
   12df8:	andeq	r1, r2, r4, asr #32
   12dfc:	andeq	r1, r2, r8, asr r0
   12e00:	andeq	r1, r2, ip, rrx
   12e04:	andeq	r1, r2, r4, ror r0
   12e08:	andeq	r1, r2, ip, ror r0
   12e0c:	andeq	r1, r2, r4, lsl #1
   12e10:			; <UNDEFINED> instruction: 0x00012eb8
   12e14:	muleq	r2, r8, r0
   12e18:	strheq	r1, [r2], -r0
   12e1c:	strheq	r1, [r2], -r8
   12e20:	andeq	r1, r2, r0, asr #1
   12e24:	ldrdeq	r1, [r2], -r0
   12e28:	andeq	r2, r1, r8, ror #12
   12e2c:	andeq	r1, r2, r4, ror #1
   12e30:	andeq	r2, r1, r8, lsr lr
   12e34:	strdeq	r1, [r2], -ip
   12e38:	push	{r4, r5, r6, lr}
   12e3c:	sub	sp, sp, #8
   12e40:	mov	r5, r0
   12e44:	mov	r6, r1
   12e48:	mov	r4, #0
   12e4c:	str	r4, [sp, #4]
   12e50:	mov	r3, #4
   12e54:	str	r3, [sp]
   12e58:	ldr	r3, [pc, #76]	; 12eac <_start@@Base+0x96c>
   12e5c:	mov	r2, r4
   12e60:	bl	165e8 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12e64:	mov	r2, #1
   12e68:	str	r2, [sp, #4]
   12e6c:	mov	r3, #7
   12e70:	str	r3, [sp]
   12e74:	ldr	r3, [pc, #52]	; 12eb0 <_start@@Base+0x970>
   12e78:	mov	r1, r6
   12e7c:	mov	r0, r5
   12e80:	bl	165e8 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12e84:	str	r4, [sp, #4]
   12e88:	mov	r3, #6
   12e8c:	str	r3, [sp]
   12e90:	ldr	r3, [pc, #28]	; 12eb4 <_start@@Base+0x974>
   12e94:	mov	r2, #2
   12e98:	mov	r1, r6
   12e9c:	mov	r0, r5
   12ea0:	bl	165e8 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12ea4:	add	sp, sp, #8
   12ea8:	pop	{r4, r5, r6, pc}
   12eac:	strdeq	r1, [r2], -r8
   12eb0:	andeq	r1, r2, r8, lsl #2
   12eb4:	andeq	r1, r2, r0, lsl r1
   12eb8:	push	{r4, r5, lr}
   12ebc:	sub	sp, sp, #12
   12ec0:	mov	r5, r0
   12ec4:	mov	r4, r1
   12ec8:	mov	r3, #2
   12ecc:	str	r3, [sp, #4]
   12ed0:	ldr	r3, [pc, #60]	; 12f14 <_start@@Base+0x9d4>
   12ed4:	str	r3, [sp]
   12ed8:	mov	r3, #0
   12edc:	mov	r2, r1
   12ee0:	mov	r1, r3
   12ee4:	bl	19358 <flatcc_json_printer_uint32_struct_field@@Base>
   12ee8:	mov	r3, #8
   12eec:	str	r3, [sp, #4]
   12ef0:	ldr	r3, [pc, #32]	; 12f18 <_start@@Base+0x9d8>
   12ef4:	str	r3, [sp]
   12ef8:	mov	r3, #4
   12efc:	mov	r2, r4
   12f00:	mov	r1, #1
   12f04:	mov	r0, r5
   12f08:	bl	19358 <flatcc_json_printer_uint32_struct_field@@Base>
   12f0c:	add	sp, sp, #12
   12f10:	pop	{r4, r5, pc}
   12f14:	andeq	r1, r2, r8, lsl r1
   12f18:	andeq	r1, r2, ip, lsl r1
   12f1c:	push	{r4, r5, r6, lr}
   12f20:	sub	sp, sp, #16
   12f24:	mov	r4, r0
   12f28:	mov	r5, r1
   12f2c:	mov	r6, #2
   12f30:	str	r6, [sp]
   12f34:	ldr	r3, [pc, #88]	; 12f94 <_start@@Base+0xa54>
   12f38:	mov	r2, #0
   12f3c:	bl	16430 <flatcc_json_printer_string_field@@Base>
   12f40:	mov	r2, #0
   12f44:	mov	r3, #0
   12f48:	strd	r2, [sp, #8]
   12f4c:	mov	r3, #3
   12f50:	str	r3, [sp]
   12f54:	ldr	r3, [pc, #60]	; 12f98 <_start@@Base+0xa58>
   12f58:	mov	r2, #1
   12f5c:	mov	r1, r5
   12f60:	mov	r0, r4
   12f64:	bl	17658 <flatcc_json_printer_int64_field@@Base>
   12f68:	mov	r3, #0
   12f6c:	str	r3, [sp, #4]
   12f70:	mov	r3, #5
   12f74:	str	r3, [sp]
   12f78:	ldr	r3, [pc, #28]	; 12f9c <_start@@Base+0xa5c>
   12f7c:	mov	r2, r6
   12f80:	mov	r1, r5
   12f84:	mov	r0, r4
   12f88:	bl	16ae0 <flatcc_json_printer_uint16_field@@Base>
   12f8c:	add	sp, sp, #16
   12f90:	pop	{r4, r5, r6, pc}
   12f94:	andeq	r1, r2, r8, lsl r1
   12f98:	andeq	r1, r2, r8, lsr #2
   12f9c:	andeq	r1, r2, ip, lsr #2
   12fa0:	push	{r4, r5, r6, lr}
   12fa4:	sub	sp, sp, #8
   12fa8:	mov	r6, r0
   12fac:	mov	r5, r1
   12fb0:	mov	r4, #1
   12fb4:	str	r4, [sp, #4]
   12fb8:	ldr	r3, [pc, #56]	; 12ff8 <_start@@Base+0xab8>
   12fbc:	str	r3, [sp]
   12fc0:	mov	r3, #0
   12fc4:	mov	r2, r1
   12fc8:	mov	r1, r3
   12fcc:	bl	197c4 <flatcc_json_printer_int16_struct_field@@Base>
   12fd0:	str	r4, [sp, #4]
   12fd4:	ldr	r3, [pc, #32]	; 12ffc <_start@@Base+0xabc>
   12fd8:	str	r3, [sp]
   12fdc:	mov	r3, #2
   12fe0:	mov	r2, r5
   12fe4:	mov	r1, r4
   12fe8:	mov	r0, r6
   12fec:	bl	1964c <flatcc_json_printer_int8_struct_field@@Base>
   12ff0:	add	sp, sp, #8
   12ff4:	pop	{r4, r5, r6, pc}
   12ff8:	andeq	r1, r2, r8, lsl r0
   12ffc:	andeq	r1, r2, r4, lsr r1
   13000:	push	{r4, lr}
   13004:	ldrb	r3, [r1, #8]
   13008:	sub	r3, r3, #1
   1300c:	cmp	r3, #3
   13010:	ldrls	pc, [pc, r3, lsl #2]
   13014:	b	13054 <_start@@Base+0xb14>
   13018:	andeq	r3, r1, r8, lsr #32
   1301c:	andeq	r3, r1, r4, lsr r0
   13020:	andeq	r3, r1, r0, asr #32
   13024:	andeq	r3, r1, ip, asr #32
   13028:	ldr	r2, [pc, #40]	; 13058 <_start@@Base+0xb18>
   1302c:	bl	1fb10 <flatcc_json_printer_union_table@@Base>
   13030:	pop	{r4, pc}
   13034:	ldr	r2, [pc, #32]	; 1305c <_start@@Base+0xb1c>
   13038:	bl	1fb10 <flatcc_json_printer_union_table@@Base>
   1303c:	pop	{r4, pc}
   13040:	ldr	r2, [pc, #24]	; 13060 <_start@@Base+0xb20>
   13044:	bl	1fb10 <flatcc_json_printer_union_table@@Base>
   13048:	pop	{r4, pc}
   1304c:	ldr	r2, [pc, #16]	; 13064 <_start@@Base+0xb24>
   13050:	bl	1fb10 <flatcc_json_printer_union_table@@Base>
   13054:	pop	{r4, pc}
   13058:	andeq	r2, r1, r8, lsr #18
   1305c:	andeq	r3, r1, r8, lsr #8
   13060:	andeq	r2, r1, ip, ror #12
   13064:	andeq	r3, r1, r8, rrx
   13068:	push	{r4, r5, lr}
   1306c:	sub	sp, sp, #20
   13070:	mov	r4, r0
   13074:	mov	r5, r1
   13078:	ldr	r3, [pc, #108]	; 130ec <_start@@Base+0xbac>
   1307c:	str	r3, [sp, #4]
   13080:	mov	r3, #6
   13084:	str	r3, [sp]
   13088:	ldr	r3, [pc, #96]	; 130f0 <_start@@Base+0xbb0>
   1308c:	mov	r2, #0
   13090:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   13094:	ldr	r3, [pc, #88]	; 130f4 <_start@@Base+0xbb4>
   13098:	str	r3, [sp, #4]
   1309c:	mov	r3, #5
   130a0:	str	r3, [sp]
   130a4:	ldr	r3, [pc, #76]	; 130f8 <_start@@Base+0xbb8>
   130a8:	mov	r2, #1
   130ac:	mov	r1, r5
   130b0:	mov	r0, r4
   130b4:	bl	1f5a0 <flatcc_json_printer_table_field@@Base>
   130b8:	ldr	r3, [pc, #60]	; 130fc <_start@@Base+0xbbc>
   130bc:	str	r3, [sp, #8]
   130c0:	ldr	r3, [pc, #56]	; 13100 <_start@@Base+0xbc0>
   130c4:	str	r3, [sp, #4]
   130c8:	mov	r3, #7
   130cc:	str	r3, [sp]
   130d0:	ldr	r3, [pc, #44]	; 13104 <_start@@Base+0xbc4>
   130d4:	mov	r2, #3
   130d8:	mov	r1, r5
   130dc:	mov	r0, r4
   130e0:	bl	1f290 <flatcc_json_printer_union_vector_field@@Base>
   130e4:	add	sp, sp, #20
   130e8:	pop	{r4, r5, pc}
   130ec:	andeq	r2, r1, r0, ror r6
   130f0:	andeq	r1, r2, r8, lsr r1
   130f4:	andeq	r3, r1, r8, lsl #2
   130f8:	andeq	r1, r2, r0, asr #2
   130fc:	andeq	r3, r1, r0
   13100:	andeq	r3, r1, r0, lsr #7
   13104:	andeq	r1, r2, r8, asr #2
   13108:	push	{r4, r5, r6, r7, r8, r9, lr}
   1310c:	sub	sp, sp, #20
   13110:	mov	r6, r0
   13114:	mov	r7, r1
   13118:	ldr	r5, [pc, #176]	; 131d0 <_start@@Base+0xc90>
   1311c:	str	r5, [sp, #8]
   13120:	ldr	r4, [pc, #172]	; 131d4 <_start@@Base+0xc94>
   13124:	str	r4, [sp, #4]
   13128:	mov	r3, #14
   1312c:	str	r3, [sp]
   13130:	ldr	r3, [pc, #160]	; 131d8 <_start@@Base+0xc98>
   13134:	mov	r2, #1
   13138:	bl	1f850 <flatcc_json_printer_union_field@@Base>
   1313c:	str	r5, [sp, #8]
   13140:	str	r4, [sp, #4]
   13144:	mov	r9, #10
   13148:	str	r9, [sp]
   1314c:	ldr	r3, [pc, #136]	; 131dc <_start@@Base+0xc9c>
   13150:	mov	r2, #3
   13154:	mov	r1, r7
   13158:	mov	r0, r6
   1315c:	bl	1f850 <flatcc_json_printer_union_field@@Base>
   13160:	str	r5, [sp, #8]
   13164:	str	r4, [sp, #4]
   13168:	mov	r8, #9
   1316c:	str	r8, [sp]
   13170:	ldr	r3, [pc, #104]	; 131e0 <_start@@Base+0xca0>
   13174:	mov	r2, #5
   13178:	mov	r1, r7
   1317c:	mov	r0, r6
   13180:	bl	1f850 <flatcc_json_printer_union_field@@Base>
   13184:	str	r5, [sp, #8]
   13188:	str	r4, [sp, #4]
   1318c:	mov	r3, #5
   13190:	str	r3, [sp]
   13194:	ldr	r3, [pc, #72]	; 131e4 <_start@@Base+0xca4>
   13198:	mov	r2, #7
   1319c:	mov	r1, r7
   131a0:	mov	r0, r6
   131a4:	bl	1f850 <flatcc_json_printer_union_field@@Base>
   131a8:	str	r5, [sp, #8]
   131ac:	str	r4, [sp, #4]
   131b0:	str	r9, [sp]
   131b4:	ldr	r3, [pc, #44]	; 131e8 <_start@@Base+0xca8>
   131b8:	mov	r2, r8
   131bc:	mov	r1, r7
   131c0:	mov	r0, r6
   131c4:	bl	1f290 <flatcc_json_printer_union_vector_field@@Base>
   131c8:	add	sp, sp, #20
   131cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   131d0:	andeq	r3, r1, ip, ror #3
   131d4:	andeq	r3, r1, r0, ror #5
   131d8:	andeq	r1, r2, r0, asr r1
   131dc:	andeq	r1, r2, r0, ror #2
   131e0:	andeq	r1, r2, ip, ror #2
   131e4:	andeq	r1, r2, r8, ror r1
   131e8:	andeq	r1, r2, r0, lsl #3
   131ec:	push	{r4, lr}
   131f0:	ldrb	r3, [r1, #8]
   131f4:	cmp	r3, #9
   131f8:	beq	1324c <_start@@Base+0xd0c>
   131fc:	bls	1321c <_start@@Base+0xcdc>
   13200:	cmp	r3, #11
   13204:	beq	13264 <_start@@Base+0xd24>
   13208:	bcc	13258 <_start@@Base+0xd18>
   1320c:	cmp	r3, #255	; 0xff
   13210:	bne	1323c <_start@@Base+0xcfc>
   13214:	bl	1fcec <flatcc_json_printer_union_string@@Base>
   13218:	pop	{r4, pc}
   1321c:	cmp	r3, #2
   13220:	beq	13240 <_start@@Base+0xd00>
   13224:	cmp	r3, #8
   13228:	bne	13238 <_start@@Base+0xcf8>
   1322c:	ldr	r2, [pc, #56]	; 1326c <_start@@Base+0xd2c>
   13230:	bl	1fc28 <flatcc_json_printer_union_struct@@Base>
   13234:	pop	{r4, pc}
   13238:	pop	{r4, pc}
   1323c:	pop	{r4, pc}
   13240:	ldr	r2, [pc, #40]	; 13270 <_start@@Base+0xd30>
   13244:	bl	1fb10 <flatcc_json_printer_union_table@@Base>
   13248:	pop	{r4, pc}
   1324c:	ldr	r2, [pc, #32]	; 13274 <_start@@Base+0xd34>
   13250:	bl	1fc28 <flatcc_json_printer_union_struct@@Base>
   13254:	pop	{r4, pc}
   13258:	ldr	r2, [pc, #20]	; 13274 <_start@@Base+0xd34>
   1325c:	bl	1fc28 <flatcc_json_printer_union_struct@@Base>
   13260:	pop	{r4, pc}
   13264:	bl	1fcec <flatcc_json_printer_union_string@@Base>
   13268:	pop	{r4, pc}
   1326c:	andeq	r3, r1, ip, lsr #5
   13270:	andeq	r2, r1, r0, lsl #14
   13274:	andeq	r3, r1, r8, ror r2
   13278:	push	{lr}		; (str lr, [sp, #-4]!)
   1327c:	sub	sp, sp, #12
   13280:	mov	r3, #10
   13284:	str	r3, [sp, #4]
   13288:	ldr	r3, [pc, #24]	; 132a8 <_start@@Base+0xd68>
   1328c:	str	r3, [sp]
   13290:	mov	r3, #0
   13294:	mov	r2, r1
   13298:	mov	r1, r3
   1329c:	bl	1993c <flatcc_json_printer_int32_struct_field@@Base>
   132a0:	add	sp, sp, #12
   132a4:	pop	{pc}		; (ldr pc, [sp], #4)
   132a8:	andeq	r1, r2, ip, lsl #3
   132ac:	push	{lr}		; (str lr, [sp, #-4]!)
   132b0:	sub	sp, sp, #12
   132b4:	mov	r3, #11
   132b8:	str	r3, [sp, #4]
   132bc:	ldr	r3, [pc, #24]	; 132dc <_start@@Base+0xd9c>
   132c0:	str	r3, [sp]
   132c4:	mov	r3, #0
   132c8:	mov	r2, r1
   132cc:	mov	r1, r3
   132d0:	bl	191e0 <flatcc_json_printer_uint16_struct_field@@Base>
   132d4:	add	sp, sp, #12
   132d8:	pop	{pc}		; (ldr pc, [sp], #4)
   132dc:	muleq	r2, r8, r1
   132e0:	push	{r4, lr}
   132e4:	cmp	r1, #9
   132e8:	beq	13344 <_start@@Base+0xe04>
   132ec:	bls	13314 <_start@@Base+0xdd4>
   132f0:	cmp	r1, #11
   132f4:	beq	13364 <_start@@Base+0xe24>
   132f8:	bcc	13354 <_start@@Base+0xe14>
   132fc:	cmp	r1, #255	; 0xff
   13300:	bne	13374 <_start@@Base+0xe34>
   13304:	mov	r2, #6
   13308:	ldr	r1, [pc, #116]	; 13384 <_start@@Base+0xe44>
   1330c:	bl	1630c <flatcc_json_printer_enum@@Base>
   13310:	pop	{r4, pc}
   13314:	cmp	r1, #2
   13318:	beq	13334 <_start@@Base+0xdf4>
   1331c:	cmp	r1, #8
   13320:	bne	13374 <_start@@Base+0xe34>
   13324:	mov	r2, #8
   13328:	ldr	r1, [pc, #88]	; 13388 <_start@@Base+0xe48>
   1332c:	bl	1630c <flatcc_json_printer_enum@@Base>
   13330:	pop	{r4, pc}
   13334:	mov	r2, #5
   13338:	ldr	r1, [pc, #76]	; 1338c <_start@@Base+0xe4c>
   1333c:	bl	1630c <flatcc_json_printer_enum@@Base>
   13340:	pop	{r4, pc}
   13344:	mov	r2, #5
   13348:	ldr	r1, [pc, #64]	; 13390 <_start@@Base+0xe50>
   1334c:	bl	1630c <flatcc_json_printer_enum@@Base>
   13350:	pop	{r4, pc}
   13354:	mov	r2, #7
   13358:	ldr	r1, [pc, #52]	; 13394 <_start@@Base+0xe54>
   1335c:	bl	1630c <flatcc_json_printer_enum@@Base>
   13360:	pop	{r4, pc}
   13364:	mov	r2, #5
   13368:	ldr	r1, [pc, #40]	; 13398 <_start@@Base+0xe58>
   1336c:	bl	1630c <flatcc_json_printer_enum@@Base>
   13370:	pop	{r4, pc}
   13374:	mov	r2, #4
   13378:	ldr	r1, [pc, #28]	; 1339c <_start@@Base+0xe5c>
   1337c:	bl	1630c <flatcc_json_printer_enum@@Base>
   13380:	pop	{r4, pc}
   13384:	ldrdeq	r1, [r2], -r0
   13388:	andeq	r1, r2, ip, lsr #3
   1338c:	andeq	r1, r2, r4, lsr #3
   13390:			; <UNDEFINED> instruction: 0x000211b8
   13394:	andeq	r1, r2, r0, asr #3
   13398:	andeq	r1, r2, r8, asr #3
   1339c:	ldrdeq	r1, [r2], -r8
   133a0:	push	{r4, lr}
   133a4:	sub	r1, r1, #1
   133a8:	cmp	r1, #3
   133ac:	ldrls	pc, [pc, r1, lsl #2]
   133b0:	b	13404 <_start@@Base+0xec4>
   133b4:	andeq	r3, r1, r4, asr #7
   133b8:	ldrdeq	r3, [r1], -r4
   133bc:	andeq	r3, r1, r4, ror #7
   133c0:	strdeq	r3, [r1], -r4
   133c4:	mov	r2, #7
   133c8:	ldr	r1, [pc, #68]	; 13414 <_start@@Base+0xed4>
   133cc:	bl	1630c <flatcc_json_printer_enum@@Base>
   133d0:	pop	{r4, pc}
   133d4:	mov	r2, #23
   133d8:	ldr	r1, [pc, #56]	; 13418 <_start@@Base+0xed8>
   133dc:	bl	1630c <flatcc_json_printer_enum@@Base>
   133e0:	pop	{r4, pc}
   133e4:	mov	r2, #8
   133e8:	ldr	r1, [pc, #44]	; 1341c <_start@@Base+0xedc>
   133ec:	bl	1630c <flatcc_json_printer_enum@@Base>
   133f0:	pop	{r4, pc}
   133f4:	mov	r2, #3
   133f8:	ldr	r1, [pc, #32]	; 13420 <_start@@Base+0xee0>
   133fc:	bl	1630c <flatcc_json_printer_enum@@Base>
   13400:	pop	{r4, pc}
   13404:	mov	r2, #4
   13408:	ldr	r1, [pc, #20]	; 13424 <_start@@Base+0xee4>
   1340c:	bl	1630c <flatcc_json_printer_enum@@Base>
   13410:	pop	{r4, pc}
   13414:	andeq	r1, r2, r0, ror #3
   13418:	andeq	r1, r2, r8, ror #3
   1341c:	andeq	r1, r2, r0, lsl #4
   13420:	andeq	r1, r2, ip, lsl #4
   13424:	ldrdeq	r1, [r2], -r8
   13428:	push	{r4, r5, r6, r7, lr}
   1342c:	sub	sp, sp, #20
   13430:	mov	r5, r0
   13434:	mov	r6, r1
   13438:	ldr	r7, [pc, #128]	; 134c0 <_start@@Base+0xf80>
   1343c:	str	r7, [sp, #8]
   13440:	mov	r4, #2
   13444:	str	r4, [sp, #4]
   13448:	mov	r3, #5
   1344c:	str	r3, [sp]
   13450:	ldr	r3, [pc, #108]	; 134c4 <_start@@Base+0xf84>
   13454:	mov	r2, #0
   13458:	bl	18634 <flatcc_json_printer_int8_enum_field@@Base>
   1345c:	str	r7, [sp, #8]
   13460:	str	r4, [sp, #4]
   13464:	mov	r3, #6
   13468:	str	r3, [sp]
   1346c:	ldr	r3, [pc, #84]	; 134c8 <_start@@Base+0xf88>
   13470:	mov	r2, #1
   13474:	mov	r1, r6
   13478:	mov	r0, r5
   1347c:	bl	18634 <flatcc_json_printer_int8_enum_field@@Base>
   13480:	str	r4, [sp, #4]
   13484:	str	r4, [sp]
   13488:	ldr	r3, [pc, #60]	; 134cc <_start@@Base+0xf8c>
   1348c:	mov	r2, r4
   13490:	mov	r1, r6
   13494:	mov	r0, r5
   13498:	bl	168f8 <flatcc_json_printer_uint8_field@@Base>
   1349c:	str	r4, [sp, #4]
   134a0:	mov	r2, #3
   134a4:	str	r2, [sp]
   134a8:	ldr	r3, [pc, #32]	; 134d0 <_start@@Base+0xf90>
   134ac:	mov	r1, r6
   134b0:	mov	r0, r5
   134b4:	bl	168f8 <flatcc_json_printer_uint8_field@@Base>
   134b8:	add	sp, sp, #20
   134bc:	pop	{r4, r5, r6, r7, pc}
   134c0:	ldrdeq	r3, [r1], -r4
   134c4:	andeq	r0, r2, r0, asr #30
   134c8:	andeq	r1, r2, r0, lsl r2
   134cc:	andeq	r1, r2, r8, lsl r2
   134d0:	andeq	r1, r2, ip, lsl r2
   134d4:	push	{r4, r5, r6, r7, r8, lr}
   134d8:	mov	r5, r0
   134dc:	uxtb	r4, r1
   134e0:	tst	r4, #244	; 0xf4
   134e4:	movne	r3, #1
   134e8:	moveq	r3, #0
   134ec:	cmp	r4, #0
   134f0:	orreq	r3, r3, #1
   134f4:	cmp	r3, #0
   134f8:	beq	13504 <_start@@Base+0xfc4>
   134fc:	bl	16234 <flatcc_json_printer_int8@@Base>
   13500:	pop	{r4, r5, r6, r7, r8, pc}
   13504:	sub	r3, r4, #1
   13508:	tst	r3, r4
   1350c:	movne	r6, #1
   13510:	moveq	r6, #0
   13514:	mov	r1, r6
   13518:	bl	16390 <flatcc_json_printer_delimit_enum_flags@@Base>
   1351c:	tst	r4, #1
   13520:	moveq	r1, #0
   13524:	bne	13548 <_start@@Base+0x1008>
   13528:	tst	r4, #2
   1352c:	bne	13564 <_start@@Base+0x1024>
   13530:	tst	r4, #8
   13534:	bne	13580 <_start@@Base+0x1040>
   13538:	mov	r1, r6
   1353c:	mov	r0, r5
   13540:	bl	16390 <flatcc_json_printer_delimit_enum_flags@@Base>
   13544:	pop	{r4, r5, r6, r7, r8, pc}
   13548:	mov	r3, #3
   1354c:	ldr	r2, [pc, #64]	; 13594 <_start@@Base+0x1054>
   13550:	mov	r1, #0
   13554:	mov	r0, r5
   13558:	bl	163c4 <flatcc_json_printer_enum_flag@@Base>
   1355c:	mov	r1, #1
   13560:	b	13528 <_start@@Base+0xfe8>
   13564:	add	r7, r1, #1
   13568:	mov	r3, #5
   1356c:	ldr	r2, [pc, #36]	; 13598 <_start@@Base+0x1058>
   13570:	mov	r0, r5
   13574:	bl	163c4 <flatcc_json_printer_enum_flag@@Base>
   13578:	mov	r1, r7
   1357c:	b	13530 <_start@@Base+0xff0>
   13580:	mov	r3, #4
   13584:	ldr	r2, [pc, #16]	; 1359c <_start@@Base+0x105c>
   13588:	mov	r0, r5
   1358c:	bl	163c4 <flatcc_json_printer_enum_flag@@Base>
   13590:	b	13538 <_start@@Base+0xff8>
   13594:	andeq	r1, r2, r0, lsr #4
   13598:	andeq	r1, r2, r4, lsr #4
   1359c:	andeq	r1, r2, ip, lsr #4
   135a0:	push	{r4, r5, r6, lr}
   135a4:	sub	sp, sp, #16
   135a8:	mov	r5, r0
   135ac:	mov	r4, r1
   135b0:	mov	r6, #1
   135b4:	str	r6, [sp, #4]
   135b8:	ldr	r3, [pc, #204]	; 1368c <_start@@Base+0x114c>
   135bc:	str	r3, [sp]
   135c0:	mov	r3, #0
   135c4:	mov	r2, r1
   135c8:	mov	r1, r3
   135cc:	bl	19da8 <flatcc_json_printer_float_struct_field@@Base>
   135d0:	str	r6, [sp, #4]
   135d4:	ldr	r3, [pc, #180]	; 13690 <_start@@Base+0x1150>
   135d8:	str	r3, [sp]
   135dc:	mov	r3, #4
   135e0:	mov	r2, r4
   135e4:	mov	r1, r6
   135e8:	mov	r0, r5
   135ec:	bl	19da8 <flatcc_json_printer_float_struct_field@@Base>
   135f0:	str	r6, [sp, #4]
   135f4:	ldr	r3, [pc, #152]	; 13694 <_start@@Base+0x1154>
   135f8:	str	r3, [sp]
   135fc:	mov	r3, #8
   13600:	mov	r2, r4
   13604:	mov	r1, #2
   13608:	mov	r0, r5
   1360c:	bl	19da8 <flatcc_json_printer_float_struct_field@@Base>
   13610:	mov	r6, #5
   13614:	str	r6, [sp, #4]
   13618:	ldr	r3, [pc, #120]	; 13698 <_start@@Base+0x1158>
   1361c:	str	r3, [sp]
   13620:	mov	r3, #16
   13624:	mov	r2, r4
   13628:	mov	r1, #3
   1362c:	mov	r0, r5
   13630:	bl	19f2c <flatcc_json_printer_double_struct_field@@Base>
   13634:	ldr	r3, [pc, #96]	; 1369c <_start@@Base+0x115c>
   13638:	str	r3, [sp, #8]
   1363c:	str	r6, [sp, #4]
   13640:	ldr	r3, [pc, #88]	; 136a0 <_start@@Base+0x1160>
   13644:	str	r3, [sp]
   13648:	mov	r3, #24
   1364c:	mov	r2, r4
   13650:	mov	r1, #4
   13654:	mov	r0, r5
   13658:	bl	1a718 <flatcc_json_printer_int8_enum_struct_field@@Base>
   1365c:	ldr	r3, [pc, #64]	; 136a4 <_start@@Base+0x1164>
   13660:	str	r3, [sp, #8]
   13664:	str	r6, [sp, #4]
   13668:	ldr	r3, [pc, #56]	; 136a8 <_start@@Base+0x1168>
   1366c:	str	r3, [sp]
   13670:	mov	r3, #26
   13674:	mov	r2, r4
   13678:	mov	r1, r6
   1367c:	mov	r0, r5
   13680:	bl	1fd0c <flatcc_json_printer_embedded_struct_field@@Base>
   13684:	add	sp, sp, #16
   13688:	pop	{r4, r5, r6, pc}
   1368c:	andeq	r1, r2, r4, lsr r2
   13690:	andeq	r0, r2, r4, lsl #31
   13694:	andeq	r1, r2, r8, lsr r2
   13698:	andeq	r1, r2, ip, lsr r2
   1369c:	ldrdeq	r3, [r1], -r4
   136a0:	andeq	r1, r2, r4, asr #4
   136a4:	andeq	r2, r1, r0, lsr #31
   136a8:	andeq	r1, r2, ip, asr #4
   136ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   136b0:	sub	sp, sp, #12
   136b4:	mov	r4, r1
   136b8:	subs	r9, r2, #0
   136bc:	addeq	r9, sp, #4
   136c0:	ldr	r1, [pc, #208]	; 13798 <_start@@Base+0x1258>
   136c4:	bl	12428 <fopen@plt>
   136c8:	subs	r6, r0, #0
   136cc:	beq	13760 <_start@@Base+0x1220>
   136d0:	mov	r2, #2
   136d4:	mov	r1, #0
   136d8:	mov	r0, r6
   136dc:	bl	12518 <fseek@plt>
   136e0:	mov	r0, r6
   136e4:	bl	12458 <ftell@plt>
   136e8:	mov	r5, r0
   136ec:	str	r0, [r9]
   136f0:	cmp	r4, #0
   136f4:	cmpne	r0, r4
   136f8:	bhi	13768 <_start@@Base+0x1228>
   136fc:	mov	r0, r6
   13700:	bl	12470 <rewind@plt>
   13704:	cmp	r5, #0
   13708:	movne	r0, r5
   1370c:	moveq	r0, #1
   13710:	bl	124ac <malloc@plt>
   13714:	subs	r7, r0, #0
   13718:	beq	1376c <_start@@Base+0x122c>
   1371c:	mov	r4, #0
   13720:	mov	r8, #1
   13724:	b	1372c <_start@@Base+0x11ec>
   13728:	add	r4, r4, r0
   1372c:	mov	r3, r6
   13730:	sub	r2, r5, r4
   13734:	mov	r1, r8
   13738:	add	r0, r7, r4
   1373c:	bl	12494 <fread@plt>
   13740:	cmp	r0, #0
   13744:	bne	13728 <_start@@Base+0x11e8>
   13748:	cmp	r4, r5
   1374c:	bne	1376c <_start@@Base+0x122c>
   13750:	mov	r0, r6
   13754:	bl	12500 <fclose@plt>
   13758:	str	r4, [r9]
   1375c:	b	1378c <_start@@Base+0x124c>
   13760:	mov	r5, #0
   13764:	b	13784 <_start@@Base+0x1244>
   13768:	mov	r7, #0
   1376c:	mov	r0, r6
   13770:	bl	12500 <fclose@plt>
   13774:	cmp	r7, #0
   13778:	beq	13784 <_start@@Base+0x1244>
   1377c:	mov	r0, r7
   13780:	bl	12440 <free@plt>
   13784:	str	r5, [r9]
   13788:	mov	r7, #0
   1378c:	mov	r0, r7
   13790:	add	sp, sp, #12
   13794:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13798:	andeq	r1, r2, r4, asr r2

0001379c <test_print@@Base>:
   1379c:	push	{r4, r5, r6, r7, r8, lr}
   137a0:	sub	sp, sp, #72	; 0x48
   137a4:	mov	r3, #0
   137a8:	str	r3, [sp, #68]	; 0x44
   137ac:	str	r3, [sp, #64]	; 0x40
   137b0:	str	r3, [sp, #60]	; 0x3c
   137b4:	ldr	r1, [pc, #656]	; 13a4c <test_print@@Base+0x2b0>
   137b8:	ldr	r3, [pc, #656]	; 13a50 <test_print@@Base+0x2b4>
   137bc:	ldr	r0, [r3]
   137c0:	bl	12428 <fopen@plt>
   137c4:	subs	r4, r0, #0
   137c8:	beq	1392c <test_print@@Base+0x190>
   137cc:	mov	r1, r4
   137d0:	add	r0, sp, #12
   137d4:	bl	206f0 <flatcc_json_printer_init@@Base>
   137d8:	mov	r3, #2
   137dc:	strb	r3, [sp, #37]	; 0x25
   137e0:	mov	r3, #1
   137e4:	strb	r3, [sp, #38]	; 0x26
   137e8:	mov	r3, #0
   137ec:	strb	r3, [sp, #39]	; 0x27
   137f0:	ldr	r3, [pc, #604]	; 13a54 <test_print@@Base+0x2b8>
   137f4:	ldr	r5, [r3]
   137f8:	cmp	r5, #0
   137fc:	beq	13814 <test_print@@Base+0x78>
   13800:	ldr	r1, [pc, #592]	; 13a58 <test_print@@Base+0x2bc>
   13804:	mov	r0, r5
   13808:	bl	1241c <strcmp@plt>
   1380c:	cmp	r0, #0
   13810:	bne	1394c <test_print@@Base+0x1b0>
   13814:	mov	r3, #288	; 0x120
   13818:	str	r3, [sp, #68]	; 0x44
   1381c:	ldr	r6, [pc, #568]	; 13a5c <test_print@@Base+0x2c0>
   13820:	add	r2, sp, #64	; 0x40
   13824:	mov	r1, #10240	; 0x2800
   13828:	ldr	r3, [pc, #544]	; 13a50 <test_print@@Base+0x2b4>
   1382c:	ldr	r0, [r3, #4]
   13830:	bl	136ac <_start@@Base+0x116c>
   13834:	subs	r7, r0, #0
   13838:	beq	139a4 <test_print@@Base+0x208>
   1383c:	ldr	r3, [pc, #540]	; 13a60 <test_print@@Base+0x2c4>
   13840:	str	r3, [sp]
   13844:	ldr	r3, [pc, #536]	; 13a64 <test_print@@Base+0x2c8>
   13848:	ldr	r2, [sp, #68]	; 0x44
   1384c:	mov	r1, r6
   13850:	add	r0, sp, #12
   13854:	bl	202bc <flatcc_json_printer_table_as_root@@Base>
   13858:	mov	r1, #1
   1385c:	add	r0, sp, #12
   13860:	ldr	r3, [sp, #56]	; 0x38
   13864:	blx	r3
   13868:	ldr	r3, [sp, #48]	; 0x30
   1386c:	cmp	r3, #0
   13870:	bne	139e0 <test_print@@Base+0x244>
   13874:	mov	r0, r4
   13878:	bl	12500 <fclose@plt>
   1387c:	add	r2, sp, #60	; 0x3c
   13880:	mov	r1, #10240	; 0x2800
   13884:	ldr	r3, [pc, #452]	; 13a50 <test_print@@Base+0x2b4>
   13888:	ldr	r0, [r3]
   1388c:	bl	136ac <_start@@Base+0x116c>
   13890:	subs	r5, r0, #0
   13894:	beq	139ec <test_print@@Base+0x250>
   13898:	ldr	r2, [sp, #60]	; 0x3c
   1389c:	ldr	r3, [sp, #64]	; 0x40
   138a0:	cmp	r2, r3
   138a4:	beq	13a0c <test_print@@Base+0x270>
   138a8:	ldr	r3, [pc, #440]	; 13a68 <test_print@@Base+0x2cc>
   138ac:	ldr	r3, [r3]
   138b0:	mov	r2, #54	; 0x36
   138b4:	mov	r1, #1
   138b8:	ldr	r0, [pc, #428]	; 13a6c <test_print@@Base+0x2d0>
   138bc:	bl	12488 <fwrite@plt>
   138c0:	mvn	r8, #0
   138c4:	add	r0, sp, #12
   138c8:	bl	208dc <flatcc_json_printer_clear@@Base>
   138cc:	ldr	r3, [pc, #384]	; 13a54 <test_print@@Base+0x2b8>
   138d0:	ldr	r3, [r3]
   138d4:	cmp	r3, #0
   138d8:	beq	13a3c <test_print@@Base+0x2a0>
   138dc:	cmp	r6, #0
   138e0:	beq	13a44 <test_print@@Base+0x2a8>
   138e4:	mov	r4, #0
   138e8:	mov	r0, r6
   138ec:	bl	12440 <free@plt>
   138f0:	cmp	r7, #0
   138f4:	beq	13900 <test_print@@Base+0x164>
   138f8:	mov	r0, r7
   138fc:	bl	12440 <free@plt>
   13900:	cmp	r5, #0
   13904:	beq	13910 <test_print@@Base+0x174>
   13908:	mov	r0, r5
   1390c:	bl	12440 <free@plt>
   13910:	cmp	r4, #0
   13914:	beq	13920 <test_print@@Base+0x184>
   13918:	mov	r0, r4
   1391c:	bl	12500 <fclose@plt>
   13920:	mov	r0, r8
   13924:	add	sp, sp, #72	; 0x48
   13928:	pop	{r4, r5, r6, r7, r8, pc}
   1392c:	ldr	r3, [pc, #284]	; 13a50 <test_print@@Base+0x2b4>
   13930:	ldr	r2, [r3]
   13934:	ldr	r1, [pc, #308]	; 13a70 <test_print@@Base+0x2d4>
   13938:	ldr	r3, [pc, #296]	; 13a68 <test_print@@Base+0x2cc>
   1393c:	ldr	r0, [r3]
   13940:	bl	124dc <fprintf@plt>
   13944:	mvn	r8, #0
   13948:	b	13920 <test_print@@Base+0x184>
   1394c:	add	r2, sp, #68	; 0x44
   13950:	mov	r1, #10240	; 0x2800
   13954:	mov	r0, r5
   13958:	bl	136ac <_start@@Base+0x116c>
   1395c:	subs	r5, r0, #0
   13960:	movne	r6, r5
   13964:	bne	13820 <test_print@@Base+0x84>
   13968:	ldr	r6, [pc, #228]	; 13a54 <test_print@@Base+0x2b8>
   1396c:	ldr	r2, [r6]
   13970:	ldr	r1, [pc, #252]	; 13a74 <test_print@@Base+0x2d8>
   13974:	ldr	r3, [pc, #236]	; 13a68 <test_print@@Base+0x2cc>
   13978:	ldr	r0, [r3]
   1397c:	bl	124dc <fprintf@plt>
   13980:	add	r0, sp, #12
   13984:	bl	208dc <flatcc_json_printer_clear@@Base>
   13988:	ldr	r3, [r6]
   1398c:	cmp	r3, #0
   13990:	mvnne	r8, #0
   13994:	bne	13900 <test_print@@Base+0x164>
   13998:	mov	r5, #0
   1399c:	mvn	r8, #0
   139a0:	b	13900 <test_print@@Base+0x164>
   139a4:	ldr	r3, [pc, #164]	; 13a50 <test_print@@Base+0x2b4>
   139a8:	ldr	r2, [r3, #4]
   139ac:	ldr	r1, [pc, #196]	; 13a78 <test_print@@Base+0x2dc>
   139b0:	ldr	r3, [pc, #176]	; 13a68 <test_print@@Base+0x2cc>
   139b4:	ldr	r0, [r3]
   139b8:	bl	124dc <fprintf@plt>
   139bc:	add	r0, sp, #12
   139c0:	bl	208dc <flatcc_json_printer_clear@@Base>
   139c4:	ldr	r3, [pc, #136]	; 13a54 <test_print@@Base+0x2b8>
   139c8:	ldr	r3, [r3]
   139cc:	cmp	r3, #0
   139d0:	beq	13998 <test_print@@Base+0x1fc>
   139d4:	mov	r5, r7
   139d8:	mvn	r8, #0
   139dc:	b	138e8 <test_print@@Base+0x14c>
   139e0:	ldr	r0, [pc, #148]	; 13a7c <test_print@@Base+0x2e0>
   139e4:	bl	124a0 <puts@plt>
   139e8:	b	13874 <test_print@@Base+0xd8>
   139ec:	ldr	r3, [pc, #92]	; 13a50 <test_print@@Base+0x2b4>
   139f0:	ldr	r2, [r3]
   139f4:	ldr	r1, [pc, #132]	; 13a80 <test_print@@Base+0x2e4>
   139f8:	ldr	r3, [pc, #104]	; 13a68 <test_print@@Base+0x2cc>
   139fc:	ldr	r0, [r3]
   13a00:	bl	124dc <fprintf@plt>
   13a04:	mvn	r8, #0
   13a08:	b	138c4 <test_print@@Base+0x128>
   13a0c:	mov	r1, r7
   13a10:	mov	r0, r5
   13a14:	bl	12464 <memcmp@plt>
   13a18:	subs	r8, r0, #0
   13a1c:	bne	138a8 <test_print@@Base+0x10c>
   13a20:	ldr	r3, [pc, #64]	; 13a68 <test_print@@Base+0x2cc>
   13a24:	ldr	r3, [r3]
   13a28:	mov	r2, #26
   13a2c:	mov	r1, #1
   13a30:	ldr	r0, [pc, #76]	; 13a84 <test_print@@Base+0x2e8>
   13a34:	bl	12488 <fwrite@plt>
   13a38:	b	138c4 <test_print@@Base+0x128>
   13a3c:	mov	r4, #0
   13a40:	b	138f8 <test_print@@Base+0x15c>
   13a44:	mov	r4, #0
   13a48:	b	138f8 <test_print@@Base+0x15c>
   13a4c:	andeq	r1, r2, r8, asr r2
   13a50:	andeq	r2, r3, ip, ror r0
   13a54:	muleq	r3, r4, r0
   13a58:	andeq	r1, r2, ip, ror r2
   13a5c:	andeq	r0, r2, r4, lsl #26
   13a60:	andeq	r2, r1, r8, lsr #18
   13a64:	ldrdeq	r1, [r2], -r8
   13a68:	andeq	r2, r3, r8, lsl #1
   13a6c:	andeq	r1, r2, r8, lsr #6
   13a70:	andeq	r1, r2, ip, asr r2
   13a74:	andeq	r1, r2, r0, lsl #5
   13a78:	andeq	r1, r2, ip, lsr #5
   13a7c:	andeq	r1, r2, r0, ror #5
   13a80:	andeq	r1, r2, r0, lsl #6
   13a84:	andeq	r1, r2, r0, ror #6

00013a88 <main@@Base>:
   13a88:	push	{r4, r5, r6, lr}
   13a8c:	mov	r4, r0
   13a90:	mov	r5, r1
   13a94:	ldr	r3, [pc, #112]	; 13b0c <main@@Base+0x84>
   13a98:	ldr	r3, [r3]
   13a9c:	mov	r2, #24
   13aa0:	mov	r1, #1
   13aa4:	ldr	r0, [pc, #100]	; 13b10 <main@@Base+0x88>
   13aa8:	bl	12488 <fwrite@plt>
   13aac:	cmp	r4, #1
   13ab0:	cmpne	r4, #4
   13ab4:	bne	13ac8 <main@@Base+0x40>
   13ab8:	cmp	r4, #4
   13abc:	beq	13ae8 <main@@Base+0x60>
   13ac0:	bl	1379c <test_print@@Base>
   13ac4:	pop	{r4, r5, r6, pc}
   13ac8:	ldr	r3, [pc, #60]	; 13b0c <main@@Base+0x84>
   13acc:	ldr	r3, [r3]
   13ad0:	mov	r2, #191	; 0xbf
   13ad4:	mov	r1, #1
   13ad8:	ldr	r0, [pc, #52]	; 13b14 <main@@Base+0x8c>
   13adc:	bl	12488 <fwrite@plt>
   13ae0:	mov	r0, #1
   13ae4:	bl	124d0 <exit@plt>
   13ae8:	ldr	r2, [r5, #4]
   13aec:	ldr	r3, [pc, #36]	; 13b18 <main@@Base+0x90>
   13af0:	str	r2, [r3]
   13af4:	ldr	r3, [pc, #32]	; 13b1c <main@@Base+0x94>
   13af8:	ldr	r2, [r5, #8]
   13afc:	str	r2, [r3, #4]
   13b00:	ldr	r2, [r5, #12]
   13b04:	str	r2, [r3]
   13b08:	b	13ac0 <main@@Base+0x38>
   13b0c:	andeq	r2, r3, r8, lsl #1
   13b10:	andeq	r1, r2, ip, ror r3
   13b14:	muleq	r2, r8, r3
   13b18:	muleq	r3, r4, r0
   13b1c:	andeq	r2, r3, ip, ror r0
   13b20:	cmp	r0, #99	; 0x63
   13b24:	bls	13b74 <main@@Base+0xec>
   13b28:	mov	r3, #0
   13b2c:	strb	r3, [r1, #3]
   13b30:	ldr	ip, [pc, #160]	; 13bd8 <main@@Base+0x150>
   13b34:	ldr	r3, [pc, #160]	; 13bdc <main@@Base+0x154>
   13b38:	umull	r2, r3, r3, r0
   13b3c:	lsr	r3, r3, #5
   13b40:	mov	r2, #100	; 0x64
   13b44:	mul	r2, r2, r3
   13b48:	sub	r0, r0, r2
   13b4c:	uxtb	r0, r0
   13b50:	add	r2, ip, r0, lsl #1
   13b54:	ldrb	r0, [ip, r0, lsl #1]
   13b58:	strb	r0, [r1, #1]
   13b5c:	ldrb	r2, [r2, #1]
   13b60:	strb	r2, [r1, #2]
   13b64:	add	r3, r3, #48	; 0x30
   13b68:	strb	r3, [r1]
   13b6c:	mov	r0, #3
   13b70:	bx	lr
   13b74:	cmp	r0, #9
   13b78:	bls	13bc0 <main@@Base+0x138>
   13b7c:	mov	r3, #0
   13b80:	strb	r3, [r1, #2]
   13b84:	ldr	ip, [pc, #76]	; 13bd8 <main@@Base+0x150>
   13b88:	ldr	r3, [pc, #76]	; 13bdc <main@@Base+0x154>
   13b8c:	umull	r2, r3, r3, r0
   13b90:	lsr	r2, r3, #5
   13b94:	mov	r3, #100	; 0x64
   13b98:	mul	r3, r3, r2
   13b9c:	sub	r0, r0, r3
   13ba0:	uxtb	r0, r0
   13ba4:	add	r3, ip, r0, lsl #1
   13ba8:	ldrb	r2, [ip, r0, lsl #1]
   13bac:	strb	r2, [r1]
   13bb0:	ldrb	r3, [r3, #1]
   13bb4:	strb	r3, [r1, #1]
   13bb8:	mov	r0, #2
   13bbc:	bx	lr
   13bc0:	mov	r3, #0
   13bc4:	strb	r3, [r1, #1]
   13bc8:	add	r0, r0, #48	; 0x30
   13bcc:	strb	r0, [r1]
   13bd0:	mov	r0, #1
   13bd4:	bx	lr
   13bd8:	muleq	r2, r0, r4
   13bdc:	mvnpl	r8, pc, lsl r5
   13be0:	push	{r4, r5, lr}
   13be4:	mov	r3, r0
   13be8:	cmp	r0, #1000	; 0x3e8
   13bec:	bcc	13c7c <main@@Base+0x1f4>
   13bf0:	ldr	r2, [pc, #352]	; 13d58 <main@@Base+0x2d0>
   13bf4:	cmp	r0, r2
   13bf8:	bhi	13cf8 <main@@Base+0x270>
   13bfc:	mov	r2, #0
   13c00:	strb	r2, [r1, #4]
   13c04:	add	ip, r1, #2
   13c08:	ldr	lr, [pc, #332]	; 13d5c <main@@Base+0x2d4>
   13c0c:	ldr	r2, [pc, #332]	; 13d60 <main@@Base+0x2d8>
   13c10:	umull	r0, r2, r2, r3
   13c14:	lsr	r2, r2, #5
   13c18:	mov	r0, #100	; 0x64
   13c1c:	mul	r0, r0, r2
   13c20:	sub	r0, r3, r0
   13c24:	uxth	r0, r0
   13c28:	add	r4, lr, r0, lsl #1
   13c2c:	uxth	r3, r2
   13c30:	ldrb	r2, [lr, r0, lsl #1]
   13c34:	strb	r2, [r1, #2]
   13c38:	ldrb	r2, [r4, #1]
   13c3c:	strb	r2, [r1, #3]
   13c40:	mov	r0, #4
   13c44:	ldr	lr, [pc, #272]	; 13d5c <main@@Base+0x2d4>
   13c48:	ldr	r2, [pc, #272]	; 13d60 <main@@Base+0x2d8>
   13c4c:	umull	r1, r2, r2, r3
   13c50:	lsr	r1, r2, #5
   13c54:	mov	r2, #100	; 0x64
   13c58:	mul	r2, r2, r1
   13c5c:	sub	r3, r3, r2
   13c60:	uxth	r3, r3
   13c64:	add	r2, lr, r3, lsl #1
   13c68:	ldrb	r3, [lr, r3, lsl #1]
   13c6c:	strb	r3, [ip, #-2]
   13c70:	ldrb	r3, [r2, #1]
   13c74:	strb	r3, [ip, #-1]
   13c78:	pop	{r4, r5, pc}
   13c7c:	cmp	r0, #99	; 0x63
   13c80:	bls	13cdc <main@@Base+0x254>
   13c84:	add	ip, r1, #3
   13c88:	mov	r2, #0
   13c8c:	strb	r2, [r1, #3]
   13c90:	mov	r0, #3
   13c94:	sub	r4, ip, #2
   13c98:	ldr	lr, [pc, #188]	; 13d5c <main@@Base+0x2d4>
   13c9c:	ldr	r1, [pc, #188]	; 13d60 <main@@Base+0x2d8>
   13ca0:	umull	r2, r1, r1, r3
   13ca4:	lsr	r1, r1, #5
   13ca8:	mov	r2, #100	; 0x64
   13cac:	mul	r2, r2, r1
   13cb0:	sub	r3, r3, r2
   13cb4:	uxth	r2, r3
   13cb8:	add	r5, lr, r2, lsl #1
   13cbc:	uxth	r3, r1
   13cc0:	ldrb	r2, [lr, r2, lsl #1]
   13cc4:	strb	r2, [ip, #-2]
   13cc8:	ldrb	r2, [r5, #1]
   13ccc:	strb	r2, [ip, #-1]
   13cd0:	add	r3, r3, #48	; 0x30
   13cd4:	strb	r3, [r4, #-1]
   13cd8:	pop	{r4, r5, pc}
   13cdc:	cmp	r0, #9
   13ce0:	bls	13d44 <main@@Base+0x2bc>
   13ce4:	add	ip, r1, #2
   13ce8:	mov	r2, #0
   13cec:	strb	r2, [r1, #2]
   13cf0:	mov	r0, #2
   13cf4:	b	13c44 <main@@Base+0x1bc>
   13cf8:	mov	r2, #0
   13cfc:	strb	r2, [r1, #5]
   13d00:	add	ip, r1, #3
   13d04:	ldr	lr, [pc, #80]	; 13d5c <main@@Base+0x2d4>
   13d08:	ldr	r2, [pc, #80]	; 13d60 <main@@Base+0x2d8>
   13d0c:	umull	r0, r2, r2, r3
   13d10:	lsr	r2, r2, #5
   13d14:	mov	r0, #100	; 0x64
   13d18:	mul	r0, r0, r2
   13d1c:	sub	r0, r3, r0
   13d20:	uxth	r0, r0
   13d24:	add	r4, lr, r0, lsl #1
   13d28:	uxth	r3, r2
   13d2c:	ldrb	r2, [lr, r0, lsl #1]
   13d30:	strb	r2, [r1, #3]
   13d34:	ldrb	r2, [r4, #1]
   13d38:	strb	r2, [r1, #4]
   13d3c:	mov	r0, #5
   13d40:	b	13c94 <main@@Base+0x20c>
   13d44:	add	r4, r1, #1
   13d48:	mov	r2, #0
   13d4c:	strb	r2, [r1, #1]
   13d50:	mov	r0, #1
   13d54:	b	13cd0 <main@@Base+0x248>
   13d58:	andeq	r2, r0, pc, lsl #14
   13d5c:	muleq	r2, r0, r4
   13d60:	mvnpl	r8, pc, lsl r5
   13d64:	push	{r4, r5, lr}
   13d68:	mov	r3, r0
   13d6c:	ldr	r2, [pc, #784]	; 14084 <main@@Base+0x5fc>
   13d70:	cmp	r0, r2
   13d74:	bls	13fc0 <main@@Base+0x538>
   13d78:	ldr	r2, [pc, #776]	; 14088 <main@@Base+0x600>
   13d7c:	cmp	r0, r2
   13d80:	bls	13ed0 <main@@Base+0x448>
   13d84:	ldr	r2, [pc, #768]	; 1408c <main@@Base+0x604>
   13d88:	cmp	r0, r2
   13d8c:	bls	13eb0 <main@@Base+0x428>
   13d90:	mov	r2, #0
   13d94:	strb	r2, [r1, #10]
   13d98:	add	lr, r1, #8
   13d9c:	ldr	ip, [pc, #748]	; 14090 <main@@Base+0x608>
   13da0:	ldr	r0, [pc, #748]	; 14094 <main@@Base+0x60c>
   13da4:	umull	r2, r0, r0, r3
   13da8:	lsr	r0, r0, #5
   13dac:	mov	r2, #100	; 0x64
   13db0:	mul	r2, r2, r0
   13db4:	sub	r2, r3, r2
   13db8:	add	r4, ip, r2, lsl #1
   13dbc:	mov	r3, r0
   13dc0:	ldrb	r2, [ip, r2, lsl #1]
   13dc4:	strb	r2, [r1, #8]
   13dc8:	ldrb	r2, [r4, #1]
   13dcc:	strb	r2, [r1, #9]
   13dd0:	mov	r0, #10
   13dd4:	sub	ip, lr, #2
   13dd8:	ldr	r4, [pc, #688]	; 14090 <main@@Base+0x608>
   13ddc:	ldr	r1, [pc, #688]	; 14094 <main@@Base+0x60c>
   13de0:	umull	r2, r1, r1, r3
   13de4:	lsr	r1, r1, #5
   13de8:	mov	r2, #100	; 0x64
   13dec:	mul	r2, r2, r1
   13df0:	sub	r2, r3, r2
   13df4:	add	r5, r4, r2, lsl #1
   13df8:	mov	r3, r1
   13dfc:	ldrb	r2, [r4, r2, lsl #1]
   13e00:	strb	r2, [lr, #-2]
   13e04:	ldrb	r2, [r5, #1]
   13e08:	strb	r2, [lr, #-1]
   13e0c:	sub	lr, ip, #2
   13e10:	ldr	r4, [pc, #632]	; 14090 <main@@Base+0x608>
   13e14:	ldr	r1, [pc, #632]	; 14094 <main@@Base+0x60c>
   13e18:	umull	r2, r1, r1, r3
   13e1c:	lsr	r1, r1, #5
   13e20:	mov	r2, #100	; 0x64
   13e24:	mul	r2, r2, r1
   13e28:	sub	r2, r3, r2
   13e2c:	add	r5, r4, r2, lsl #1
   13e30:	mov	r3, r1
   13e34:	ldrb	r2, [r4, r2, lsl #1]
   13e38:	strb	r2, [ip, #-2]
   13e3c:	ldrb	r2, [r5, #1]
   13e40:	strb	r2, [ip, #-1]
   13e44:	sub	ip, lr, #2
   13e48:	ldr	r4, [pc, #576]	; 14090 <main@@Base+0x608>
   13e4c:	ldr	r1, [pc, #576]	; 14094 <main@@Base+0x60c>
   13e50:	umull	r2, r1, r1, r3
   13e54:	lsr	r1, r1, #5
   13e58:	mov	r2, #100	; 0x64
   13e5c:	mul	r2, r2, r1
   13e60:	sub	r2, r3, r2
   13e64:	add	r5, r4, r2, lsl #1
   13e68:	mov	r3, r1
   13e6c:	ldrb	r2, [r4, r2, lsl #1]
   13e70:	strb	r2, [lr, #-2]
   13e74:	ldrb	r2, [r5, #1]
   13e78:	strb	r2, [lr, #-1]
   13e7c:	ldr	lr, [pc, #524]	; 14090 <main@@Base+0x608>
   13e80:	ldr	r2, [pc, #524]	; 14094 <main@@Base+0x60c>
   13e84:	umull	r1, r2, r2, r3
   13e88:	lsr	r1, r2, #5
   13e8c:	mov	r2, #100	; 0x64
   13e90:	mul	r2, r2, r1
   13e94:	sub	r3, r3, r2
   13e98:	add	r2, lr, r3, lsl #1
   13e9c:	ldrb	r3, [lr, r3, lsl #1]
   13ea0:	strb	r3, [ip, #-2]
   13ea4:	ldrb	r3, [r2, #1]
   13ea8:	strb	r3, [ip, #-1]
   13eac:	pop	{r4, r5, pc}
   13eb0:	ldr	r2, [pc, #480]	; 14098 <main@@Base+0x610>
   13eb4:	cmp	r0, r2
   13eb8:	bhi	14014 <main@@Base+0x58c>
   13ebc:	add	lr, r1, #8
   13ec0:	mov	r2, #0
   13ec4:	strb	r2, [r1, #8]
   13ec8:	mov	r0, #8
   13ecc:	b	13dd4 <main@@Base+0x34c>
   13ed0:	ldr	r2, [pc, #452]	; 1409c <main@@Base+0x614>
   13ed4:	cmp	r0, r2
   13ed8:	bls	13fa0 <main@@Base+0x518>
   13edc:	add	ip, r1, #7
   13ee0:	mov	r2, #0
   13ee4:	strb	r2, [r1, #7]
   13ee8:	mov	r0, #7
   13eec:	sub	lr, ip, #2
   13ef0:	ldr	r4, [pc, #408]	; 14090 <main@@Base+0x608>
   13ef4:	ldr	r1, [pc, #408]	; 14094 <main@@Base+0x60c>
   13ef8:	umull	r2, r1, r1, r3
   13efc:	lsr	r1, r1, #5
   13f00:	mov	r2, #100	; 0x64
   13f04:	mul	r2, r2, r1
   13f08:	sub	r2, r3, r2
   13f0c:	add	r5, r4, r2, lsl #1
   13f10:	mov	r3, r1
   13f14:	ldrb	r2, [r4, r2, lsl #1]
   13f18:	strb	r2, [ip, #-2]
   13f1c:	ldrb	r2, [r5, #1]
   13f20:	strb	r2, [ip, #-1]
   13f24:	sub	ip, lr, #2
   13f28:	ldr	r4, [pc, #352]	; 14090 <main@@Base+0x608>
   13f2c:	ldr	r1, [pc, #352]	; 14094 <main@@Base+0x60c>
   13f30:	umull	r2, r1, r1, r3
   13f34:	lsr	r1, r1, #5
   13f38:	mov	r2, #100	; 0x64
   13f3c:	mul	r2, r2, r1
   13f40:	sub	r2, r3, r2
   13f44:	add	r5, r4, r2, lsl #1
   13f48:	mov	r3, r1
   13f4c:	ldrb	r2, [r4, r2, lsl #1]
   13f50:	strb	r2, [lr, #-2]
   13f54:	ldrb	r2, [r5, #1]
   13f58:	strb	r2, [lr, #-1]
   13f5c:	sub	r4, ip, #2
   13f60:	ldr	lr, [pc, #296]	; 14090 <main@@Base+0x608>
   13f64:	ldr	r1, [pc, #296]	; 14094 <main@@Base+0x60c>
   13f68:	umull	r2, r1, r1, r3
   13f6c:	lsr	r1, r1, #5
   13f70:	mov	r2, #100	; 0x64
   13f74:	mul	r2, r2, r1
   13f78:	sub	r2, r3, r2
   13f7c:	add	r5, lr, r2, lsl #1
   13f80:	mov	r3, r1
   13f84:	ldrb	r2, [lr, r2, lsl #1]
   13f88:	strb	r2, [ip, #-2]
   13f8c:	ldrb	r2, [r5, #1]
   13f90:	strb	r2, [ip, #-1]
   13f94:	add	r3, r3, #48	; 0x30
   13f98:	strb	r3, [r4, #-1]
   13f9c:	pop	{r4, r5, pc}
   13fa0:	ldr	r2, [pc, #248]	; 140a0 <main@@Base+0x618>
   13fa4:	cmp	r0, r2
   13fa8:	bhi	14070 <main@@Base+0x5e8>
   13fac:	add	lr, r1, #5
   13fb0:	mov	r2, #0
   13fb4:	strb	r2, [r1, #5]
   13fb8:	mov	r0, #5
   13fbc:	b	13f24 <main@@Base+0x49c>
   13fc0:	cmp	r0, #99	; 0x63
   13fc4:	bls	13fe4 <main@@Base+0x55c>
   13fc8:	cmp	r0, #1000	; 0x3e8
   13fcc:	bcs	14000 <main@@Base+0x578>
   13fd0:	add	ip, r1, #3
   13fd4:	mov	r2, #0
   13fd8:	strb	r2, [r1, #3]
   13fdc:	mov	r0, #3
   13fe0:	b	13f5c <main@@Base+0x4d4>
   13fe4:	cmp	r0, #9
   13fe8:	bls	1405c <main@@Base+0x5d4>
   13fec:	add	ip, r1, #2
   13ff0:	mov	r2, #0
   13ff4:	strb	r2, [r1, #2]
   13ff8:	mov	r0, #2
   13ffc:	b	13e7c <main@@Base+0x3f4>
   14000:	add	lr, r1, #4
   14004:	mov	r2, #0
   14008:	strb	r2, [r1, #4]
   1400c:	mov	r0, #4
   14010:	b	13e44 <main@@Base+0x3bc>
   14014:	mov	r2, #0
   14018:	strb	r2, [r1, #9]
   1401c:	add	ip, r1, #7
   14020:	ldr	lr, [pc, #104]	; 14090 <main@@Base+0x608>
   14024:	ldr	r0, [pc, #104]	; 14094 <main@@Base+0x60c>
   14028:	umull	r2, r0, r0, r3
   1402c:	lsr	r0, r0, #5
   14030:	mov	r2, #100	; 0x64
   14034:	mul	r2, r2, r0
   14038:	sub	r2, r3, r2
   1403c:	add	r4, lr, r2, lsl #1
   14040:	mov	r3, r0
   14044:	ldrb	r2, [lr, r2, lsl #1]
   14048:	strb	r2, [r1, #7]
   1404c:	ldrb	r2, [r4, #1]
   14050:	strb	r2, [r1, #8]
   14054:	mov	r0, #9
   14058:	b	13eec <main@@Base+0x464>
   1405c:	add	r4, r1, #1
   14060:	mov	r2, #0
   14064:	strb	r2, [r1, #1]
   14068:	mov	r0, #1
   1406c:	b	13f94 <main@@Base+0x50c>
   14070:	add	ip, r1, #6
   14074:	mov	r2, #0
   14078:	strb	r2, [r1, #6]
   1407c:	mov	r0, #6
   14080:	b	13e0c <main@@Base+0x384>
   14084:	andeq	r2, r0, pc, lsl #14
   14088:	addseq	r9, r8, pc, ror r6
   1408c:	blcc	fe6c6890 <__bss_end__@@Base+0xfe6947f8>
   14090:	muleq	r2, r0, r4
   14094:	mvnpl	r8, pc, lsl r5
   14098:	ldrbeq	lr, [r5, #255]!	; 0xff
   1409c:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   140a0:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   140a4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140a8:	mov	r4, r0
   140ac:	mov	r6, r2
   140b0:	add	r3, pc, #816	; 0x330
   140b4:	ldrd	r2, [r3]
   140b8:	cmp	r1, r3
   140bc:	cmpeq	r0, r2
   140c0:	bls	142d4 <main@@Base+0x84c>
   140c4:	mov	r5, r1
   140c8:	add	r3, pc, #800	; 0x320
   140cc:	ldrd	r2, [r3]
   140d0:	cmp	r1, r3
   140d4:	cmpeq	r0, r2
   140d8:	bls	14348 <main@@Base+0x8c0>
   140dc:	add	r3, pc, #788	; 0x314
   140e0:	ldrd	r2, [r3]
   140e4:	cmp	r1, r3
   140e8:	cmpeq	r0, r2
   140ec:	bls	1430c <main@@Base+0x884>
   140f0:	add	r3, pc, #776	; 0x308
   140f4:	ldrd	r2, [r3]
   140f8:	cmp	r1, r3
   140fc:	cmpeq	r0, r2
   14100:	bls	142e4 <main@@Base+0x85c>
   14104:	add	r3, pc, #764	; 0x2fc
   14108:	ldrd	r2, [r3]
   1410c:	cmp	r1, r3
   14110:	cmpeq	r0, r2
   14114:	bhi	1444c <main@@Base+0x9c4>
   14118:	mov	r3, #0
   1411c:	strb	r3, [r6, #19]
   14120:	add	r9, r6, #17
   14124:	ldr	r7, [pc, #788]	; 14440 <main@@Base+0x9b8>
   14128:	mov	r2, #100	; 0x64
   1412c:	mov	r3, #0
   14130:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14134:	mov	r8, r2
   14138:	add	sl, r7, r2, lsl #1
   1413c:	mov	r2, #100	; 0x64
   14140:	mov	r3, #0
   14144:	mov	r0, r4
   14148:	mov	r1, r5
   1414c:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14150:	mov	r4, r0
   14154:	mov	r5, r1
   14158:	ldrb	r3, [r7, r8, lsl #1]
   1415c:	strb	r3, [r6, #17]
   14160:	ldrb	r3, [sl, #1]
   14164:	strb	r3, [r6, #18]
   14168:	mov	r7, #19
   1416c:	sub	r8, r9, #2
   14170:	ldr	r6, [pc, #712]	; 14440 <main@@Base+0x9b8>
   14174:	mov	r2, #100	; 0x64
   14178:	mov	r3, #0
   1417c:	mov	r0, r4
   14180:	mov	r1, r5
   14184:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14188:	mov	sl, r2
   1418c:	add	fp, r6, r2, lsl #1
   14190:	mov	r2, #100	; 0x64
   14194:	mov	r3, #0
   14198:	mov	r0, r4
   1419c:	mov	r1, r5
   141a0:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   141a4:	mov	r4, r0
   141a8:	mov	r5, r1
   141ac:	ldrb	r3, [r6, sl, lsl #1]
   141b0:	strb	r3, [r9, #-2]
   141b4:	ldrb	r3, [fp, #1]
   141b8:	strb	r3, [r9, #-1]
   141bc:	sub	r9, r8, #2
   141c0:	ldr	r6, [pc, #632]	; 14440 <main@@Base+0x9b8>
   141c4:	mov	r2, #100	; 0x64
   141c8:	mov	r3, #0
   141cc:	mov	r0, r4
   141d0:	mov	r1, r5
   141d4:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   141d8:	mov	sl, r2
   141dc:	add	fp, r6, r2, lsl #1
   141e0:	mov	r2, #100	; 0x64
   141e4:	mov	r3, #0
   141e8:	mov	r0, r4
   141ec:	mov	r1, r5
   141f0:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   141f4:	mov	r4, r0
   141f8:	mov	r5, r1
   141fc:	ldrb	r3, [r6, sl, lsl #1]
   14200:	strb	r3, [r8, #-2]
   14204:	ldrb	r3, [fp, #1]
   14208:	strb	r3, [r8, #-1]
   1420c:	sub	r8, r9, #2
   14210:	ldr	r6, [pc, #552]	; 14440 <main@@Base+0x9b8>
   14214:	mov	r2, #100	; 0x64
   14218:	mov	r3, #0
   1421c:	mov	r0, r4
   14220:	mov	r1, r5
   14224:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14228:	mov	sl, r2
   1422c:	add	fp, r6, r2, lsl #1
   14230:	mov	r2, #100	; 0x64
   14234:	mov	r3, #0
   14238:	mov	r0, r4
   1423c:	mov	r1, r5
   14240:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14244:	mov	r4, r0
   14248:	mov	r5, r1
   1424c:	ldrb	r3, [r6, sl, lsl #1]
   14250:	strb	r3, [r9, #-2]
   14254:	ldrb	r3, [fp, #1]
   14258:	strb	r3, [r9, #-1]
   1425c:	ldr	r6, [pc, #476]	; 14440 <main@@Base+0x9b8>
   14260:	mov	r2, #100	; 0x64
   14264:	mov	r3, #0
   14268:	mov	r0, r4
   1426c:	mov	r1, r5
   14270:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14274:	add	r3, r6, r2, lsl #1
   14278:	ldrb	r2, [r6, r2, lsl #1]
   1427c:	strb	r2, [r8, #-2]
   14280:	ldrb	r3, [r3, #1]
   14284:	strb	r3, [r8, #-1]
   14288:	sub	r6, r8, #3
   1428c:	mov	r2, #100	; 0x64
   14290:	mov	r3, #0
   14294:	mov	r0, r4
   14298:	mov	r1, r5
   1429c:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   142a0:	mov	r2, #10
   142a4:	mov	r3, #0
   142a8:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   142ac:	add	r2, r2, #48	; 0x30
   142b0:	strb	r2, [r8, #-3]
   142b4:	mov	r2, #1000	; 0x3e8
   142b8:	mov	r3, #0
   142bc:	mov	r0, r4
   142c0:	mov	r1, r5
   142c4:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   142c8:	mov	r4, r0
   142cc:	mov	r5, r1
   142d0:	b	14630 <main@@Base+0xba8>
   142d4:	mov	r1, r6
   142d8:	bl	13d64 <main@@Base+0x2dc>
   142dc:	mov	r7, r0
   142e0:	b	146f8 <main@@Base+0xc70>
   142e4:	add	r3, pc, #292	; 0x124
   142e8:	ldrd	r2, [r3]
   142ec:	cmp	r1, r3
   142f0:	cmpeq	r0, r2
   142f4:	bhi	14700 <main@@Base+0xc78>
   142f8:	add	r9, r6, #17
   142fc:	mov	r3, #0
   14300:	strb	r3, [r6, #17]
   14304:	mov	r7, #17
   14308:	b	1416c <main@@Base+0x6e4>
   1430c:	add	r3, pc, #260	; 0x104
   14310:	ldrd	r2, [r3]
   14314:	cmp	r1, r3
   14318:	cmpeq	r0, r2
   1431c:	bhi	14714 <main@@Base+0xc8c>
   14320:	add	r3, pc, #248	; 0xf8
   14324:	ldrd	r2, [r3]
   14328:	cmp	r1, r3
   1432c:	cmpeq	r0, r2
   14330:	bhi	143ac <main@@Base+0x924>
   14334:	add	r8, r6, #14
   14338:	mov	r3, #0
   1433c:	strb	r3, [r6, #14]
   14340:	mov	r7, #14
   14344:	b	14540 <main@@Base+0xab8>
   14348:	add	r3, pc, #216	; 0xd8
   1434c:	ldrd	r2, [r3]
   14350:	cmp	r1, r3
   14354:	cmpeq	r0, r2
   14358:	bls	14384 <main@@Base+0x8fc>
   1435c:	add	r3, pc, #204	; 0xcc
   14360:	ldrd	r2, [r3]
   14364:	cmp	r1, r3
   14368:	cmpeq	r0, r2
   1436c:	bhi	143c0 <main@@Base+0x938>
   14370:	add	r9, r6, #12
   14374:	mov	r3, #0
   14378:	strb	r3, [r6, #12]
   1437c:	mov	r7, #12
   14380:	b	14590 <main@@Base+0xb08>
   14384:	add	r3, pc, #172	; 0xac
   14388:	ldrd	r2, [r3]
   1438c:	cmp	r1, r3
   14390:	cmpeq	r0, r2
   14394:	bhi	143d4 <main@@Base+0x94c>
   14398:	add	r8, r6, #10
   1439c:	mov	r3, #0
   143a0:	strb	r3, [r6, #10]
   143a4:	mov	r7, #10
   143a8:	b	145e0 <main@@Base+0xb58>
   143ac:	add	r8, r6, #15
   143b0:	mov	r3, #0
   143b4:	strb	r3, [r6, #15]
   143b8:	mov	r7, #15
   143bc:	b	141bc <main@@Base+0x734>
   143c0:	add	r9, r6, #13
   143c4:	mov	r3, #0
   143c8:	strb	r3, [r6, #13]
   143cc:	mov	r7, #13
   143d0:	b	1420c <main@@Base+0x784>
   143d4:	add	r8, r6, #11
   143d8:	mov	r3, #0
   143dc:	strb	r3, [r6, #11]
   143e0:	mov	r7, #11
   143e4:	b	1425c <main@@Base+0x7d4>
   143e8:	blcc	fe6c6bec <__bss_end__@@Base+0xfe694b54>
   143ec:	andeq	r0, r0, r0
   143f0:	mrcmi	15, 3, r9, cr2, cr15, {7}
   143f4:	andeq	r0, r0, r8, lsl r9
   143f8:	svcvs	0x00c0ffff
   143fc:	strdeq	r8, [r3], -r2	; <UNPREDICTABLE>
   14400:			; <UNDEFINED> instruction: 0xa763ffff
   14404:	stcleq	6, cr11, [r0, #716]!	; 0x2cc
   14408:	stmibhi	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   1440c:	bhi	ff1dd024 <__bss_end__@@Base+0xff1aaf8c>
   14410:	stcpl	15, cr15, [r9, #1020]	; 0x3fc
   14414:	smceq	13400	; 0x3458
   14418:	strbge	r7, [r6], #4095	; 0xfff
   1441c:	andeq	r8, r3, lr, ror sp
   14420:	ldrshtne	r3, [sl], #-255	; 0xffffff01
   14424:	strdeq	r5, [r0], -r3
   14428:	ldmdami	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}^
   1442c:	andeq	r0, r0, r7, lsl r0
   14430:	strtle	r0, [r5], #4095	; 0xfff
   14434:	andeq	r0, r0, r8, ror #1
   14438:	strpl	lr, [fp], #-1023	; 0xfffffc01
   1443c:	andeq	r0, r0, r2
   14440:	muleq	r2, r0, r4
   14444:	andeq	r2, r0, r0, lsl r7
   14448:	andeq	r4, pc, r0, asr #4
   1444c:	mov	r3, #0
   14450:	strb	r3, [r6, #20]
   14454:	add	r8, r6, #18
   14458:	ldr	r7, [pc, #-32]	; 14440 <main@@Base+0x9b8>
   1445c:	mov	r2, #100	; 0x64
   14460:	mov	r3, #0
   14464:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14468:	mov	r9, r2
   1446c:	add	sl, r7, r2, lsl #1
   14470:	mov	r2, #100	; 0x64
   14474:	mov	r3, #0
   14478:	mov	r0, r4
   1447c:	mov	r1, r5
   14480:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14484:	mov	r4, r0
   14488:	mov	r5, r1
   1448c:	ldrb	r3, [r7, r9, lsl #1]
   14490:	strb	r3, [r6, #18]
   14494:	ldrb	r3, [sl, #1]
   14498:	strb	r3, [r6, #19]
   1449c:	mov	r7, #20
   144a0:	sub	r9, r8, #2
   144a4:	ldr	r6, [pc, #-108]	; 14440 <main@@Base+0x9b8>
   144a8:	mov	r2, #100	; 0x64
   144ac:	mov	r3, #0
   144b0:	mov	r0, r4
   144b4:	mov	r1, r5
   144b8:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   144bc:	mov	sl, r2
   144c0:	add	fp, r6, r2, lsl #1
   144c4:	mov	r2, #100	; 0x64
   144c8:	mov	r3, #0
   144cc:	mov	r0, r4
   144d0:	mov	r1, r5
   144d4:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   144d8:	mov	r4, r0
   144dc:	mov	r5, r1
   144e0:	ldrb	r3, [r6, sl, lsl #1]
   144e4:	strb	r3, [r8, #-2]
   144e8:	ldrb	r3, [fp, #1]
   144ec:	strb	r3, [r8, #-1]
   144f0:	sub	r8, r9, #2
   144f4:	ldr	r6, [pc, #-188]	; 14440 <main@@Base+0x9b8>
   144f8:	mov	r2, #100	; 0x64
   144fc:	mov	r3, #0
   14500:	mov	r0, r4
   14504:	mov	r1, r5
   14508:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   1450c:	mov	sl, r2
   14510:	add	fp, r6, r2, lsl #1
   14514:	mov	r2, #100	; 0x64
   14518:	mov	r3, #0
   1451c:	mov	r0, r4
   14520:	mov	r1, r5
   14524:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14528:	mov	r4, r0
   1452c:	mov	r5, r1
   14530:	ldrb	r3, [r6, sl, lsl #1]
   14534:	strb	r3, [r9, #-2]
   14538:	ldrb	r3, [fp, #1]
   1453c:	strb	r3, [r9, #-1]
   14540:	sub	r9, r8, #2
   14544:	ldr	r6, [pc, #-268]	; 14440 <main@@Base+0x9b8>
   14548:	mov	r2, #100	; 0x64
   1454c:	mov	r3, #0
   14550:	mov	r0, r4
   14554:	mov	r1, r5
   14558:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   1455c:	mov	sl, r2
   14560:	add	fp, r6, r2, lsl #1
   14564:	mov	r2, #100	; 0x64
   14568:	mov	r3, #0
   1456c:	mov	r0, r4
   14570:	mov	r1, r5
   14574:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14578:	mov	r4, r0
   1457c:	mov	r5, r1
   14580:	ldrb	r3, [r6, sl, lsl #1]
   14584:	strb	r3, [r8, #-2]
   14588:	ldrb	r3, [fp, #1]
   1458c:	strb	r3, [r8, #-1]
   14590:	sub	r8, r9, #2
   14594:	ldr	r6, [pc, #-348]	; 14440 <main@@Base+0x9b8>
   14598:	mov	r2, #100	; 0x64
   1459c:	mov	r3, #0
   145a0:	mov	r0, r4
   145a4:	mov	r1, r5
   145a8:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   145ac:	mov	sl, r2
   145b0:	add	fp, r6, r2, lsl #1
   145b4:	mov	r2, #100	; 0x64
   145b8:	mov	r3, #0
   145bc:	mov	r0, r4
   145c0:	mov	r1, r5
   145c4:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   145c8:	mov	r4, r0
   145cc:	mov	r5, r1
   145d0:	ldrb	r3, [r6, sl, lsl #1]
   145d4:	strb	r3, [r9, #-2]
   145d8:	ldrb	r3, [fp, #1]
   145dc:	strb	r3, [r9, #-1]
   145e0:	sub	r6, r8, #2
   145e4:	ldr	sl, [pc, #-428]	; 14440 <main@@Base+0x9b8>
   145e8:	mov	r2, #100	; 0x64
   145ec:	mov	r3, #0
   145f0:	mov	r0, r4
   145f4:	mov	r1, r5
   145f8:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   145fc:	mov	r9, r2
   14600:	add	fp, sl, r2, lsl #1
   14604:	mov	r2, #100	; 0x64
   14608:	mov	r3, #0
   1460c:	mov	r0, r4
   14610:	mov	r1, r5
   14614:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14618:	mov	r4, r0
   1461c:	mov	r5, r1
   14620:	ldrb	r3, [sl, r9, lsl #1]
   14624:	strb	r3, [r8, #-2]
   14628:	ldrb	r3, [fp, #1]
   1462c:	strb	r3, [r8, #-1]
   14630:	ldr	r8, [pc, #-504]	; 14440 <main@@Base+0x9b8>
   14634:	mov	r2, #100	; 0x64
   14638:	mov	r3, #0
   1463c:	mov	r0, r4
   14640:	mov	r1, r5
   14644:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14648:	add	r3, r8, r2, lsl #1
   1464c:	ldrb	r2, [r8, r2, lsl #1]
   14650:	strb	r2, [r6, #-2]
   14654:	ldrb	r3, [r3, #1]
   14658:	strb	r3, [r6, #-1]
   1465c:	mov	r2, #100	; 0x64
   14660:	mov	r3, #0
   14664:	mov	r0, r4
   14668:	mov	r1, r5
   1466c:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   14670:	mov	r2, #100	; 0x64
   14674:	mov	r3, #0
   14678:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   1467c:	add	r3, r8, r2, lsl #1
   14680:	ldrb	r2, [r8, r2, lsl #1]
   14684:	strb	r2, [r6, #-4]
   14688:	ldrb	r3, [r3, #1]
   1468c:	strb	r3, [r6, #-3]
   14690:	ldr	r2, [pc, #-596]	; 14444 <main@@Base+0x9bc>
   14694:	mov	r3, #0
   14698:	mov	r0, r4
   1469c:	mov	r1, r5
   146a0:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   146a4:	mov	r2, #100	; 0x64
   146a8:	mov	r3, #0
   146ac:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   146b0:	add	r3, r8, r2, lsl #1
   146b4:	ldrb	r2, [r8, r2, lsl #1]
   146b8:	strb	r2, [r6, #-6]
   146bc:	ldrb	r3, [r3, #1]
   146c0:	strb	r3, [r6, #-5]
   146c4:	ldr	r2, [pc, #-644]	; 14448 <main@@Base+0x9c0>
   146c8:	mov	r3, #0
   146cc:	mov	r0, r4
   146d0:	mov	r1, r5
   146d4:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   146d8:	mov	r2, #100	; 0x64
   146dc:	mov	r3, #0
   146e0:	bl	20b20 <flatcc_json_printer_clear@@Base+0x244>
   146e4:	add	r3, r8, r2, lsl #1
   146e8:	ldrb	r2, [r8, r2, lsl #1]
   146ec:	strb	r2, [r6, #-8]
   146f0:	ldrb	r3, [r3, #1]
   146f4:	strb	r3, [r6, #-7]
   146f8:	mov	r0, r7
   146fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14700:	add	r8, r6, #18
   14704:	mov	r3, #0
   14708:	strb	r3, [r6, #18]
   1470c:	mov	r7, #18
   14710:	b	144a0 <main@@Base+0xa18>
   14714:	add	r9, r6, #16
   14718:	mov	r3, #0
   1471c:	strb	r3, [r6, #16]
   14720:	mov	r7, #16
   14724:	b	144f0 <main@@Base+0xa68>
   14728:	push	{r4, lr}
   1472c:	lsr	r4, r0, #31
   14730:	cmp	r0, #0
   14734:	movlt	r3, #45	; 0x2d
   14738:	strblt	r3, [r1]
   1473c:	rsblt	r0, r0, #0
   14740:	sxtblt	r0, r0
   14744:	addlt	r1, r1, #1
   14748:	uxtb	r0, r0
   1474c:	bl	13b20 <main@@Base+0x98>
   14750:	add	r0, r4, r0
   14754:	pop	{r4, pc}
   14758:	push	{r4, lr}
   1475c:	lsr	r4, r0, #31
   14760:	cmp	r0, #0
   14764:	movlt	r3, #45	; 0x2d
   14768:	strblt	r3, [r1]
   1476c:	rsblt	r0, r0, #0
   14770:	sxthlt	r0, r0
   14774:	addlt	r1, r1, #1
   14778:	uxth	r0, r0
   1477c:	bl	13be0 <main@@Base+0x158>
   14780:	add	r0, r4, r0
   14784:	pop	{r4, pc}
   14788:	push	{r4, lr}
   1478c:	lsr	r4, r0, #31
   14790:	cmp	r0, #0
   14794:	movlt	r3, #45	; 0x2d
   14798:	strblt	r3, [r1]
   1479c:	rsblt	r0, r0, #0
   147a0:	addlt	r1, r1, #1
   147a4:	bl	13d64 <main@@Base+0x2dc>
   147a8:	add	r0, r4, r0
   147ac:	pop	{r4, pc}
   147b0:	push	{r4, lr}
   147b4:	lsr	r4, r1, #31
   147b8:	cmp	r0, #0
   147bc:	sbcs	r3, r1, #0
   147c0:	blt	147d0 <main@@Base+0xd48>
   147c4:	bl	140a4 <main@@Base+0x61c>
   147c8:	add	r0, r4, r0
   147cc:	pop	{r4, pc}
   147d0:	mov	r3, #45	; 0x2d
   147d4:	strb	r3, [r2]
   147d8:	rsbs	r0, r0, #0
   147dc:	rsc	r1, r1, #0
   147e0:	add	r2, r2, #1
   147e4:	b	147c4 <main@@Base+0xd3c>
   147e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147ec:	sub	sp, sp, #20
   147f0:	str	r0, [sp]
   147f4:	str	r1, [sp, #4]
   147f8:	strd	r2, [sp, #8]
   147fc:	ldrd	sl, [sp, #64]	; 0x40
   14800:	ldrd	r4, [sp, #72]	; 0x48
   14804:	ldrd	r6, [sp, #80]	; 0x50
   14808:	subs	r2, r2, r6
   1480c:	sbc	r3, r3, r7
   14810:	cmp	r3, fp
   14814:	cmpeq	r2, sl
   14818:	bls	14864 <main@@Base+0xddc>
   1481c:	mov	lr, r0
   14820:	mov	ip, r1
   14824:	mov	r0, r2
   14828:	mov	r1, r3
   1482c:	ldrd	r2, [sp, #56]	; 0x38
   14830:	subs	r2, r2, sl
   14834:	sbc	r3, r3, fp
   14838:	cmp	r5, r3
   1483c:	cmpeq	r4, r2
   14840:	bhi	149b4 <main@@Base+0xf2c>
   14844:	ldrd	r6, [sp, #56]	; 0x38
   14848:	subs	r6, r6, r4
   1484c:	sbc	r7, r7, r5
   14850:	subs	r6, r6, sl
   14854:	sbc	r7, r7, fp
   14858:	sub	ip, ip, #1
   1485c:	add	ip, lr, ip
   14860:	b	148a0 <main@@Base+0xe18>
   14864:	mov	r2, sl
   14868:	mov	r3, fp
   1486c:	b	148f0 <main@@Base+0xe68>
   14870:	ldrb	lr, [ip]
   14874:	sub	lr, lr, #1
   14878:	strb	lr, [ip]
   1487c:	subs	r8, r6, r4
   14880:	sbc	r9, r7, r5
   14884:	mov	sl, r2
   14888:	mov	fp, r3
   1488c:	cmp	r5, r7
   14890:	cmpeq	r4, r6
   14894:	bhi	1495c <main@@Base+0xed4>
   14898:	mov	r6, r8
   1489c:	mov	r7, r9
   148a0:	adds	r2, r4, sl
   148a4:	adc	r3, r5, fp
   148a8:	cmp	r1, r3
   148ac:	cmpeq	r0, r2
   148b0:	bhi	14870 <main@@Base+0xde8>
   148b4:	subs	r8, r0, sl
   148b8:	sbc	r9, r1, fp
   148bc:	subs	r6, r2, r0
   148c0:	sbc	r7, r3, r1
   148c4:	cmp	r9, r7
   148c8:	cmpeq	r8, r6
   148cc:	movcc	r2, sl
   148d0:	movcc	r3, fp
   148d4:	bcc	148f0 <main@@Base+0xe68>
   148d8:	ldr	r1, [sp, #4]
   148dc:	sub	r1, r1, #1
   148e0:	ldr	r0, [sp]
   148e4:	ldrb	ip, [r0, r1]
   148e8:	sub	ip, ip, #1
   148ec:	strb	ip, [r0, r1]
   148f0:	ldrd	r0, [sp, #8]
   148f4:	ldrd	r6, [sp, #80]	; 0x50
   148f8:	adds	r0, r0, r6
   148fc:	adc	r1, r1, r7
   14900:	cmp	r1, r3
   14904:	cmpeq	r0, r2
   14908:	bls	1495c <main@@Base+0xed4>
   1490c:	ldrd	r6, [sp, #56]	; 0x38
   14910:	subs	r6, r6, r2
   14914:	sbc	r7, r7, r3
   14918:	cmp	r5, r7
   1491c:	cmpeq	r4, r6
   14920:	bhi	1495c <main@@Base+0xed4>
   14924:	adds	r4, r4, r2
   14928:	adc	r5, r5, r3
   1492c:	cmp	r1, r5
   14930:	cmpeq	r0, r4
   14934:	movhi	r0, #0
   14938:	bhi	149ac <main@@Base+0xf24>
   1493c:	subs	r6, r0, r2
   14940:	sbc	r7, r1, r3
   14944:	subs	r4, r4, r0
   14948:	sbc	r5, r5, r1
   1494c:	cmp	r7, r5
   14950:	cmpeq	r6, r4
   14954:	movhi	r0, #0
   14958:	bhi	149ac <main@@Base+0xf24>
   1495c:	ldrd	r0, [sp, #80]	; 0x50
   14960:	adds	r0, r0, r0
   14964:	adc	r1, r1, r1
   14968:	cmp	r1, r3
   1496c:	cmpeq	r0, r2
   14970:	movhi	r0, #0
   14974:	bhi	149ac <main@@Base+0xf24>
   14978:	ldr	ip, [sp, #84]	; 0x54
   1497c:	lsl	r1, ip, #2
   14980:	ldr	ip, [sp, #80]	; 0x50
   14984:	orr	r1, r1, ip, lsr #30
   14988:	lsl	r0, ip, #2
   1498c:	ldrd	r4, [sp, #56]	; 0x38
   14990:	subs	r4, r4, r0
   14994:	sbc	r5, r5, r1
   14998:	mov	r0, r4
   1499c:	cmp	r5, r3
   149a0:	cmpeq	r4, r2
   149a4:	movcs	r0, #1
   149a8:	movcc	r0, #0
   149ac:	add	sp, sp, #20
   149b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149b4:	mov	r2, sl
   149b8:	mov	r3, fp
   149bc:	b	1495c <main@@Base+0xed4>
   149c0:	push	{r4, r5, lr}
   149c4:	cmp	r0, #0
   149c8:	addlt	r4, r1, #1
   149cc:	movlt	r3, #45	; 0x2d
   149d0:	strblt	r3, [r1]
   149d4:	rsblt	r0, r0, #0
   149d8:	movge	r4, r1
   149dc:	mov	r2, r4
   149e0:	ldr	r5, [pc, #108]	; 14a54 <main@@Base+0xfcc>
   149e4:	mvn	lr, #9
   149e8:	smull	r3, ip, r5, r0
   149ec:	asr	r3, r0, #31
   149f0:	rsb	r3, r3, ip, asr #2
   149f4:	mla	r0, lr, r3, r0
   149f8:	add	r0, r0, #48	; 0x30
   149fc:	strb	r0, [r2], #1
   14a00:	mov	r0, r3
   14a04:	cmp	r3, #0
   14a08:	bne	149e8 <main@@Base+0xf60>
   14a0c:	strb	r3, [r2]
   14a10:	mov	r0, r2
   14a14:	sub	r3, r2, r4
   14a18:	add	r3, r3, r3, lsr #31
   14a1c:	asr	lr, r3, #1
   14a20:	cmp	lr, #0
   14a24:	ble	14a4c <main@@Base+0xfc4>
   14a28:	mov	ip, r4
   14a2c:	mov	r3, r2
   14a30:	add	r4, r4, lr
   14a34:	ldrb	r2, [ip]
   14a38:	ldrb	lr, [r3, #-1]
   14a3c:	strb	lr, [ip], #1
   14a40:	strb	r2, [r3, #-1]!
   14a44:	cmp	ip, r4
   14a48:	bne	14a34 <main@@Base+0xfac>
   14a4c:	sub	r0, r0, r1
   14a50:	pop	{r4, r5, pc}
   14a54:	strbtvs	r6, [r6], -r7, ror #12
   14a58:	lsl	r3, r0, #2
   14a5c:	ldr	r2, [pc, #68]	; 14aa8 <main@@Base+0x1020>
   14a60:	umull	r2, r3, r2, r3
   14a64:	lsr	r3, r3, #1
   14a68:	add	r3, r3, #3
   14a6c:	bic	r3, r3, #3
   14a70:	tst	r1, #128	; 0x80
   14a74:	bne	14aa0 <main@@Base+0x1018>
   14a78:	ldr	r2, [pc, #40]	; 14aa8 <main@@Base+0x1020>
   14a7c:	umull	r1, r2, r2, r0
   14a80:	lsr	r2, r2, #1
   14a84:	add	r2, r2, r2, lsl #1
   14a88:	sub	r2, r0, r2
   14a8c:	cmp	r2, #1
   14a90:	subeq	r3, r3, #2
   14a94:	beq	14aa0 <main@@Base+0x1018>
   14a98:	cmp	r2, #2
   14a9c:	subeq	r3, r3, #1
   14aa0:	mov	r0, r3
   14aa4:	bx	lr
   14aa8:	bge	feabf55c <__bss_end__@@Base+0xfea8d4c4>
   14aac:	push	{r4, r5, r6, r7, r8, r9, lr}
   14ab0:	mov	r8, r0
   14ab4:	ldr	r9, [sp, #28]
   14ab8:	cmp	r3, #0
   14abc:	beq	14c60 <main@@Base+0x11d8>
   14ac0:	ldr	r6, [r3]
   14ac4:	bics	r0, r9, #224	; 0xe0
   14ac8:	beq	14bc0 <main@@Base+0x1138>
   14acc:	cmp	r0, #1
   14ad0:	bne	14c24 <main@@Base+0x119c>
   14ad4:	ldr	r5, [pc, #416]	; 14c7c <main@@Base+0x11f4>
   14ad8:	cmp	r6, #2
   14adc:	bls	14bc8 <main@@Base+0x1140>
   14ae0:	add	r4, r8, #4
   14ae4:	add	ip, r1, #3
   14ae8:	mov	r1, ip
   14aec:	mov	r7, r4
   14af0:	ldrb	r0, [ip, #-3]
   14af4:	ldrb	r0, [r5, r0, lsr #2]
   14af8:	strb	r0, [r4, #-4]
   14afc:	ldrb	r0, [ip, #-3]
   14b00:	lsl	r0, r0, #4
   14b04:	and	r0, r0, #48	; 0x30
   14b08:	ldrb	lr, [ip, #-2]
   14b0c:	orr	r0, r0, lr, lsr #4
   14b10:	ldrb	r0, [r5, r0]
   14b14:	strb	r0, [r4, #-3]
   14b18:	ldrb	lr, [ip, #-2]
   14b1c:	lsl	lr, lr, #2
   14b20:	and	lr, lr, #60	; 0x3c
   14b24:	ldrb	r0, [ip, #-1]
   14b28:	orr	lr, lr, r0, lsr #6
   14b2c:	ldrb	r0, [r5, lr]
   14b30:	strb	r0, [r4, #-2]
   14b34:	ldrb	r0, [ip, #-1]
   14b38:	and	r0, r0, #63	; 0x3f
   14b3c:	ldrb	r0, [r5, r0]
   14b40:	strb	r0, [r4, #-1]
   14b44:	sub	r6, r6, #3
   14b48:	add	r4, r4, #4
   14b4c:	add	ip, ip, #3
   14b50:	cmp	r6, #2
   14b54:	bhi	14ae8 <main@@Base+0x1060>
   14b58:	and	r9, r9, #128	; 0x80
   14b5c:	cmp	r6, #1
   14b60:	beq	14bd0 <main@@Base+0x1148>
   14b64:	cmp	r6, #2
   14b68:	bne	14c54 <main@@Base+0x11cc>
   14b6c:	ldrb	r0, [r1]
   14b70:	ldrb	r0, [r5, r0, lsr #2]
   14b74:	strb	r0, [r7]
   14b78:	ldrb	r0, [r1]
   14b7c:	lsl	r0, r0, #4
   14b80:	and	r0, r0, #48	; 0x30
   14b84:	ldrb	ip, [r1, #1]
   14b88:	orr	r0, r0, ip, lsr #4
   14b8c:	ldrb	r0, [r5, r0]
   14b90:	strb	r0, [r7, #1]
   14b94:	ldrb	r1, [r1, #1]
   14b98:	lsl	r1, r1, #2
   14b9c:	and	r1, r1, #60	; 0x3c
   14ba0:	ldrb	r1, [r5, r1]
   14ba4:	strb	r1, [r7, #2]
   14ba8:	cmp	r9, #0
   14bac:	addeq	r7, r7, #3
   14bb0:	movne	r1, #61	; 0x3d
   14bb4:	strbne	r1, [r7, #3]
   14bb8:	addne	r7, r7, #4
   14bbc:	b	14c08 <main@@Base+0x1180>
   14bc0:	ldr	r5, [pc, #184]	; 14c80 <main@@Base+0x11f8>
   14bc4:	b	14ad8 <main@@Base+0x1050>
   14bc8:	mov	r7, r8
   14bcc:	b	14b58 <main@@Base+0x10d0>
   14bd0:	ldrb	r0, [r1]
   14bd4:	ldrb	r0, [r5, r0, lsr #2]
   14bd8:	strb	r0, [r7]
   14bdc:	ldrb	r1, [r1]
   14be0:	lsl	r1, r1, #4
   14be4:	and	r1, r1, #48	; 0x30
   14be8:	ldrb	r1, [r5, r1]
   14bec:	strb	r1, [r7, #1]
   14bf0:	cmp	r9, #0
   14bf4:	addeq	r7, r7, #2
   14bf8:	movne	r1, #61	; 0x3d
   14bfc:	strbne	r1, [r7, #2]
   14c00:	strbne	r1, [r7, #3]
   14c04:	addne	r7, r7, #4
   14c08:	cmp	r2, #0
   14c0c:	moveq	r0, #0
   14c10:	moveq	r6, r0
   14c14:	beq	14c44 <main@@Base+0x11bc>
   14c18:	mov	r0, #0
   14c1c:	mov	r6, r0
   14c20:	b	14c34 <main@@Base+0x11ac>
   14c24:	mov	r7, r8
   14c28:	mov	r0, #3
   14c2c:	cmp	r2, #0
   14c30:	beq	14c44 <main@@Base+0x11bc>
   14c34:	sub	r7, r7, r8
   14c38:	str	r7, [r2]
   14c3c:	cmp	r3, #0
   14c40:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   14c44:	ldr	r2, [r3]
   14c48:	sub	r6, r2, r6
   14c4c:	str	r6, [r3]
   14c50:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14c54:	mov	r0, #0
   14c58:	mov	r6, r0
   14c5c:	b	14c2c <main@@Base+0x11a4>
   14c60:	cmp	r2, #0
   14c64:	movne	r7, r0
   14c68:	movne	r0, #2
   14c6c:	movne	r6, #0
   14c70:	bne	14c34 <main@@Base+0x11ac>
   14c74:	mov	r0, #2
   14c78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14c7c:	andeq	r1, r2, r0, lsl ip
   14c80:	andeq	r1, r2, ip, asr #23
   14c84:	ldr	r3, [r0, #20]
   14c88:	ldr	r2, [r0, #16]
   14c8c:	cmp	r3, r2
   14c90:	bcc	14cbc <main@@Base+0x1234>
   14c94:	ldr	r2, [r0, #36]	; 0x24
   14c98:	cmp	r2, #0
   14c9c:	moveq	r2, #3
   14ca0:	streq	r2, [r0, #36]	; 0x24
   14ca4:	ldr	r1, [r0]
   14ca8:	sub	r3, r3, r1
   14cac:	ldr	r2, [r0, #12]
   14cb0:	add	r3, r2, r3
   14cb4:	str	r3, [r0, #12]
   14cb8:	str	r1, [r0, #20]
   14cbc:	ldr	r3, [r0, #20]
   14cc0:	mov	r2, #0
   14cc4:	strb	r2, [r3]
   14cc8:	bx	lr
   14ccc:	sub	sp, sp, #8
   14cd0:	push	{r4, r5, r6, lr}
   14cd4:	add	r1, sp, #12
   14cd8:	stmib	r1, {r2, r3}
   14cdc:	ldrd	r2, [sp, #16]
   14ce0:	ldr	r6, [sp, #24]
   14ce4:	orrs	r1, r2, r3
   14ce8:	beq	14d98 <main@@Base+0x1310>
   14cec:	mov	lr, r0
   14cf0:	mov	r0, #0
   14cf4:	ldr	r1, [pc, #176]	; 14dac <main@@Base+0x1324>
   14cf8:	and	r0, r0, r2
   14cfc:	and	r1, r1, r3
   14d00:	orrs	r1, r0, r1
   14d04:	subeq	ip, r6, #10
   14d08:	bne	14d40 <main@@Base+0x12b8>
   14d0c:	lsl	r1, r3, #10
   14d10:	orr	r1, r1, r2, lsr #22
   14d14:	lsl	r0, r2, #10
   14d18:	mov	r2, r0
   14d1c:	mov	r3, r1
   14d20:	mov	r6, ip
   14d24:	mov	r0, #0
   14d28:	ldr	r1, [pc, #124]	; 14dac <main@@Base+0x1324>
   14d2c:	and	r0, r0, r2
   14d30:	and	r1, r1, r3
   14d34:	sub	ip, ip, #10
   14d38:	orrs	r1, r0, r1
   14d3c:	beq	14d0c <main@@Base+0x1284>
   14d40:	cmp	r2, #0
   14d44:	sbcs	r1, r3, #0
   14d48:	blt	14d74 <main@@Base+0x12ec>
   14d4c:	sub	r1, r6, #1
   14d50:	adds	r4, r2, r2
   14d54:	adc	r5, r3, r3
   14d58:	mov	r2, r4
   14d5c:	mov	r3, r5
   14d60:	mov	r6, r1
   14d64:	sub	r1, r1, #1
   14d68:	cmp	r4, #0
   14d6c:	sbcs	r0, r5, #0
   14d70:	bge	14d50 <main@@Base+0x12c8>
   14d74:	strd	r2, [sp, #16]
   14d78:	str	r6, [sp, #24]
   14d7c:	add	r3, sp, #12
   14d80:	ldmib	r3, {r0, r1, r2, r3}
   14d84:	stm	lr, {r0, r1, r2, r3}
   14d88:	mov	r0, lr
   14d8c:	pop	{r4, r5, r6, lr}
   14d90:	add	sp, sp, #8
   14d94:	bx	lr
   14d98:	ldr	r3, [pc, #16]	; 14db0 <main@@Base+0x1328>
   14d9c:	mov	r2, #260	; 0x104
   14da0:	ldr	r1, [pc, #12]	; 14db4 <main@@Base+0x132c>
   14da4:	ldr	r0, [pc, #12]	; 14db8 <main@@Base+0x1330>
   14da8:	bl	12530 <__assert_fail@plt>
   14dac:			; <UNDEFINED> instruction: 0xffc00000
   14db0:	andeq	r1, r2, ip, asr r5
   14db4:	andeq	r1, r2, r4, asr ip
   14db8:	andeq	r1, r2, ip, lsr #25
   14dbc:	push	{r4, r5, r6, r7, r8, lr}
   14dc0:	mov	r5, r0
   14dc4:	mov	r7, r1
   14dc8:	mov	r6, r2
   14dcc:	ldr	r2, [r0, #20]
   14dd0:	ldr	r3, [r0, #16]
   14dd4:	cmp	r2, r3
   14dd8:	bcs	14e5c <main@@Base+0x13d4>
   14ddc:	ldr	r4, [r5, #16]
   14de0:	ldr	r3, [r5, #20]
   14de4:	sub	r4, r4, r3
   14de8:	cmp	r4, r6
   14dec:	bcs	14e3c <main@@Base+0x13b4>
   14df0:	mov	r8, #0
   14df4:	mov	r2, r4
   14df8:	mov	r1, r7
   14dfc:	ldr	r0, [r5, #20]
   14e00:	bl	1244c <memcpy@plt>
   14e04:	ldr	r3, [r5, #20]
   14e08:	add	r3, r3, r4
   14e0c:	str	r3, [r5, #20]
   14e10:	add	r7, r7, r4
   14e14:	sub	r6, r6, r4
   14e18:	ldr	r3, [r5, #44]	; 0x2c
   14e1c:	mov	r1, r8
   14e20:	mov	r0, r5
   14e24:	blx	r3
   14e28:	ldr	r4, [r5, #16]
   14e2c:	ldr	r3, [r5, #20]
   14e30:	sub	r4, r4, r3
   14e34:	cmp	r6, r4
   14e38:	bhi	14df4 <main@@Base+0x136c>
   14e3c:	mov	r2, r6
   14e40:	mov	r1, r7
   14e44:	ldr	r0, [r5, #20]
   14e48:	bl	1244c <memcpy@plt>
   14e4c:	ldr	r3, [r5, #20]
   14e50:	add	r6, r3, r6
   14e54:	str	r6, [r5, #20]
   14e58:	pop	{r4, r5, r6, r7, r8, pc}
   14e5c:	ldr	r3, [r0, #44]	; 0x2c
   14e60:	mov	r1, #0
   14e64:	blx	r3
   14e68:	b	14ddc <main@@Base+0x1354>
   14e6c:	cmp	r0, #0
   14e70:	ldr	r3, [pc, #40]	; 14ea0 <main@@Base+0x1418>
   14e74:	ldrne	r0, [r3, #228]	; 0xe4
   14e78:	strne	r0, [r1]
   14e7c:	ldrbne	r3, [r3, #232]	; 0xe8
   14e80:	strbne	r3, [r1, #4]
   14e84:	movne	r0, #4
   14e88:	ldreq	r0, [r3, #236]	; 0xec
   14e8c:	streq	r0, [r1]
   14e90:	ldrheq	r3, [r3, #240]	; 0xf0
   14e94:	strheq	r3, [r1, #4]
   14e98:	moveq	r0, #5
   14e9c:	bx	lr
   14ea0:	muleq	r2, r0, r4
   14ea4:	push	{r4, r5, r6, r7, r8, lr}
   14ea8:	mov	r4, r0
   14eac:	mov	r6, r1
   14eb0:	ldr	r2, [r0, #20]
   14eb4:	ldr	r3, [r0, #16]
   14eb8:	cmp	r2, r3
   14ebc:	bcs	14f40 <main@@Base+0x14b8>
   14ec0:	ldr	r5, [r4, #16]
   14ec4:	ldr	r3, [r4, #20]
   14ec8:	sub	r5, r5, r3
   14ecc:	cmp	r5, r6
   14ed0:	bcs	14f20 <main@@Base+0x1498>
   14ed4:	mov	r8, #32
   14ed8:	mov	r7, #0
   14edc:	mov	r2, r5
   14ee0:	mov	r1, r8
   14ee4:	ldr	r0, [r4, #20]
   14ee8:	bl	124e8 <memset@plt>
   14eec:	ldr	r3, [r4, #20]
   14ef0:	add	r3, r3, r5
   14ef4:	str	r3, [r4, #20]
   14ef8:	sub	r6, r6, r5
   14efc:	ldr	r3, [r4, #44]	; 0x2c
   14f00:	mov	r1, r7
   14f04:	mov	r0, r4
   14f08:	blx	r3
   14f0c:	ldr	r5, [r4, #16]
   14f10:	ldr	r3, [r4, #20]
   14f14:	sub	r5, r5, r3
   14f18:	cmp	r6, r5
   14f1c:	bhi	14edc <main@@Base+0x1454>
   14f20:	mov	r2, r6
   14f24:	mov	r1, #32
   14f28:	ldr	r0, [r4, #20]
   14f2c:	bl	124e8 <memset@plt>
   14f30:	ldr	r3, [r4, #20]
   14f34:	add	r6, r3, r6
   14f38:	str	r6, [r4, #20]
   14f3c:	pop	{r4, r5, r6, r7, r8, pc}
   14f40:	ldr	r3, [r0, #44]	; 0x2c
   14f44:	mov	r1, #0
   14f48:	blx	r3
   14f4c:	b	14ec0 <main@@Base+0x1438>
   14f50:	push	{r4, r5, r6, lr}
   14f54:	mov	r4, r0
   14f58:	ldrb	r3, [r0, #25]
   14f5c:	ldr	r5, [r0, #32]
   14f60:	mul	r5, r5, r3
   14f64:	ldr	r0, [r0, #20]
   14f68:	add	r3, r0, r5
   14f6c:	ldr	r2, [r4, #16]
   14f70:	cmp	r2, r3
   14f74:	bcc	14f94 <main@@Base+0x150c>
   14f78:	mov	r2, r5
   14f7c:	mov	r1, #32
   14f80:	bl	124e8 <memset@plt>
   14f84:	ldr	r3, [r4, #20]
   14f88:	add	r5, r3, r5
   14f8c:	str	r5, [r4, #20]
   14f90:	pop	{r4, r5, r6, pc}
   14f94:	mov	r1, r5
   14f98:	mov	r0, r4
   14f9c:	bl	14ea4 <main@@Base+0x141c>
   14fa0:	pop	{r4, r5, r6, pc}
   14fa4:	push	{r4, r5, lr}
   14fa8:	sub	sp, sp, #12
   14fac:	mov	r5, r0
   14fb0:	mov	r0, #0
   14fb4:	str	r0, [sp, #4]
   14fb8:	cmp	r1, r0
   14fbc:	cmpne	r2, #7
   14fc0:	bls	15000 <main@@Base+0x1578>
   14fc4:	mov	r4, r1
   14fc8:	cmp	r3, #0
   14fcc:	beq	14ff4 <main@@Base+0x156c>
   14fd0:	mov	r2, #4
   14fd4:	mov	r1, r3
   14fd8:	add	r0, sp, r2
   14fdc:	bl	124f4 <strncpy@plt>
   14fe0:	ldr	r3, [sp, #4]
   14fe4:	ldr	r2, [r4, #4]
   14fe8:	cmp	r2, r3
   14fec:	cmpne	r3, #0
   14ff0:	bne	15024 <main@@Base+0x159c>
   14ff4:	mov	r0, #1
   14ff8:	add	sp, sp, #12
   14ffc:	pop	{r4, r5, pc}
   15000:	ldr	r3, [r5, #36]	; 0x24
   15004:	cmp	r3, r0
   15008:	moveq	r3, #1
   1500c:	streq	r3, [r5, #36]	; 0x24
   15010:	ldr	r3, [pc, #48]	; 15048 <main@@Base+0x15c0>
   15014:	ldr	r2, [pc, #48]	; 1504c <main@@Base+0x15c4>
   15018:	ldr	r1, [pc, #48]	; 15050 <main@@Base+0x15c8>
   1501c:	ldr	r0, [pc, #48]	; 15054 <main@@Base+0x15cc>
   15020:	bl	12530 <__assert_fail@plt>
   15024:	ldr	r3, [r5, #36]	; 0x24
   15028:	cmp	r3, #0
   1502c:	moveq	r3, #1
   15030:	streq	r3, [r5, #36]	; 0x24
   15034:	ldr	r3, [pc, #12]	; 15048 <main@@Base+0x15c0>
   15038:	ldr	r2, [pc, #24]	; 15058 <main@@Base+0x15d0>
   1503c:	ldr	r1, [pc, #12]	; 15050 <main@@Base+0x15c8>
   15040:	ldr	r0, [pc, #20]	; 1505c <main@@Base+0x15d4>
   15044:	bl	12530 <__assert_fail@plt>
   15048:	andeq	r1, r2, r4, lsl #11
   1504c:	strdeq	r0, [r0], -fp
   15050:			; <UNDEFINED> instruction: 0x00021cb8
   15054:	andeq	r1, r2, r4, lsl #26
   15058:	andeq	r0, r0, r4, lsl #8
   1505c:	andeq	r1, r2, r4, lsr #26
   15060:	push	{r4, r5, r6, lr}
   15064:	mov	r4, r0
   15068:	cmp	r1, #0
   1506c:	bne	15080 <main@@Base+0x15f8>
   15070:	ldr	r3, [r0, #20]
   15074:	ldr	r5, [r0, #16]
   15078:	cmp	r3, r5
   1507c:	bcs	150c0 <main@@Base+0x1638>
   15080:	ldr	r0, [r4]
   15084:	ldr	r5, [r4, #20]
   15088:	sub	r5, r5, r0
   1508c:	ldr	r3, [r4, #40]	; 0x28
   15090:	mov	r2, #1
   15094:	mov	r1, r5
   15098:	bl	12488 <fwrite@plt>
   1509c:	ldr	r3, [r4]
   150a0:	str	r3, [r4, #20]
   150a4:	ldr	r3, [r4, #12]
   150a8:	add	r5, r3, r5
   150ac:	str	r5, [r4, #12]
   150b0:	ldr	r3, [r4, #20]
   150b4:	mov	r2, #0
   150b8:	strb	r2, [r3]
   150bc:	pop	{r4, r5, r6, pc}
   150c0:	sub	r5, r3, r5
   150c4:	ldr	r3, [r0, #40]	; 0x28
   150c8:	mov	r2, #1
   150cc:	ldr	r1, [r0, #8]
   150d0:	ldr	r0, [r0]
   150d4:	bl	12488 <fwrite@plt>
   150d8:	ldr	r0, [r4]
   150dc:	ldr	r1, [r4, #8]
   150e0:	mov	r2, r5
   150e4:	add	r1, r0, r1
   150e8:	bl	1244c <memcpy@plt>
   150ec:	ldr	r3, [r4]
   150f0:	add	r3, r3, r5
   150f4:	str	r3, [r4, #20]
   150f8:	ldr	r3, [r4, #12]
   150fc:	ldr	r2, [r4, #8]
   15100:	add	r3, r3, r2
   15104:	str	r3, [r4, #12]
   15108:	b	150b0 <main@@Base+0x1628>
   1510c:	push	{r4, r5, r6, lr}
   15110:	ldr	r3, [r0, #20]
   15114:	ldr	r5, [r0]
   15118:	mov	r2, #0
   1511c:	strb	r2, [r3]
   15120:	ldr	r1, [r0, #20]
   15124:	ldr	r2, [r0, #16]
   15128:	cmp	r1, r2
   1512c:	popcc	{r4, r5, r6, pc}
   15130:	mov	r4, r0
   15134:	sub	r5, r3, r5
   15138:	ldr	r1, [r0, #4]
   1513c:	lsl	r1, r1, #1
   15140:	ldr	r0, [r0]
   15144:	bl	1247c <realloc@plt>
   15148:	cmp	r0, #0
   1514c:	beq	15188 <main@@Base+0x1700>
   15150:	ldr	r3, [r4, #4]
   15154:	lsl	r3, r3, #1
   15158:	str	r3, [r4, #4]
   1515c:	sub	r3, r3, #64	; 0x40
   15160:	str	r3, [r4, #8]
   15164:	str	r0, [r4]
   15168:	add	r5, r0, r5
   1516c:	str	r5, [r4, #20]
   15170:	add	r0, r0, r3
   15174:	str	r0, [r4, #16]
   15178:	ldr	r3, [r4, #20]
   1517c:	mov	r2, #0
   15180:	strb	r2, [r3]
   15184:	pop	{r4, r5, r6, pc}
   15188:	ldr	r3, [r4, #36]	; 0x24
   1518c:	cmp	r3, #0
   15190:	moveq	r3, #3
   15194:	streq	r3, [r4, #36]	; 0x24
   15198:	ldr	r3, [r4, #12]
   1519c:	add	r3, r3, r5
   151a0:	str	r3, [r4, #12]
   151a4:	ldr	r3, [r4]
   151a8:	str	r3, [r4, #20]
   151ac:	b	15178 <main@@Base+0x16f0>
   151b0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151b4:	mov	r8, r0
   151b8:	mov	r7, r2
   151bc:	ldr	r3, [r0, #20]
   151c0:	add	r2, r3, #1
   151c4:	str	r2, [r0, #20]
   151c8:	mov	r2, #34	; 0x22
   151cc:	strb	r2, [r3]
   151d0:	mov	r9, #92	; 0x5c
   151d4:	mov	fp, #102	; 0x66
   151d8:	mov	sl, #48	; 0x30
   151dc:	b	15244 <main@@Base+0x17bc>
   151e0:	mov	r5, r1
   151e4:	b	15298 <main@@Base+0x1810>
   151e8:	mov	r2, r6
   151ec:	mov	r0, r8
   151f0:	bl	14dbc <main@@Base+0x1334>
   151f4:	b	152c4 <main@@Base+0x183c>
   151f8:	cmp	r4, #34	; 0x22
   151fc:	beq	15228 <main@@Base+0x17a0>
   15200:	cmp	r4, #92	; 0x5c
   15204:	beq	15380 <main@@Base+0x18f8>
   15208:	cmp	r4, #13
   1520c:	bne	15300 <main@@Base+0x1878>
   15210:	ldr	r3, [r8, #20]
   15214:	add	r2, r3, #1
   15218:	str	r2, [r8, #20]
   1521c:	mov	r2, #114	; 0x72
   15220:	strb	r2, [r3]
   15224:	b	1523c <main@@Base+0x17b4>
   15228:	ldr	r3, [r8, #20]
   1522c:	add	r2, r3, #1
   15230:	str	r2, [r8, #20]
   15234:	mov	r2, #34	; 0x22
   15238:	strb	r2, [r3]
   1523c:	sub	r7, r7, #1
   15240:	add	r1, r5, #1
   15244:	ldrb	r4, [r1]
   15248:	cmp	r4, #34	; 0x22
   1524c:	cmpne	r4, #31
   15250:	movhi	r3, #1
   15254:	movls	r3, #0
   15258:	cmp	r4, #92	; 0x5c
   1525c:	moveq	r3, #0
   15260:	andne	r3, r3, #1
   15264:	cmp	r3, #0
   15268:	beq	151e0 <main@@Base+0x1758>
   1526c:	mov	r5, r1
   15270:	ldrb	r4, [r5, #1]!
   15274:	cmp	r4, #34	; 0x22
   15278:	cmpne	r4, #31
   1527c:	movhi	r3, #1
   15280:	movls	r3, #0
   15284:	cmp	r4, #92	; 0x5c
   15288:	moveq	r3, #0
   1528c:	andne	r3, r3, #1
   15290:	cmp	r3, #0
   15294:	bne	15270 <main@@Base+0x17e8>
   15298:	sub	r6, r5, r1
   1529c:	ldr	r0, [r8, #20]
   152a0:	add	r3, r0, r6
   152a4:	ldr	r2, [r8, #16]
   152a8:	cmp	r2, r3
   152ac:	bls	151e8 <main@@Base+0x1760>
   152b0:	mov	r2, r6
   152b4:	bl	1244c <memcpy@plt>
   152b8:	ldr	r3, [r8, #20]
   152bc:	add	r3, r3, r6
   152c0:	str	r3, [r8, #20]
   152c4:	subs	r7, r7, r6
   152c8:	beq	153f0 <main@@Base+0x1968>
   152cc:	ldr	r3, [r8, #20]
   152d0:	add	r2, r3, #1
   152d4:	str	r2, [r8, #20]
   152d8:	strb	r9, [r3]
   152dc:	cmp	r4, #12
   152e0:	beq	153ac <main@@Base+0x1924>
   152e4:	bhi	151f8 <main@@Base+0x1770>
   152e8:	cmp	r4, #9
   152ec:	beq	15394 <main@@Base+0x190c>
   152f0:	cmp	r4, #10
   152f4:	beq	153c0 <main@@Base+0x1938>
   152f8:	cmp	r4, #8
   152fc:	beq	153d8 <main@@Base+0x1950>
   15300:	ldr	r3, [r8, #20]
   15304:	add	r2, r3, #1
   15308:	str	r2, [r8, #20]
   1530c:	mov	r2, #117	; 0x75
   15310:	strb	r2, [r3]
   15314:	ldr	r3, [r8, #20]
   15318:	add	r2, r3, #1
   1531c:	str	r2, [r8, #20]
   15320:	strb	sl, [r3]
   15324:	ldr	r3, [r8, #20]
   15328:	add	r2, r3, #1
   1532c:	str	r2, [r8, #20]
   15330:	strb	sl, [r3]
   15334:	lsr	r1, r4, #4
   15338:	cmp	r1, #9
   1533c:	movls	r3, #48	; 0x30
   15340:	movhi	r3, #87	; 0x57
   15344:	ldr	r2, [r8, #20]
   15348:	add	r0, r2, #1
   1534c:	str	r0, [r8, #20]
   15350:	add	r3, r3, r1
   15354:	strb	r3, [r2]
   15358:	and	r4, r4, #15
   1535c:	cmp	r4, #9
   15360:	movls	r3, #48	; 0x30
   15364:	movhi	r3, #87	; 0x57
   15368:	ldr	r2, [r8, #20]
   1536c:	add	r1, r2, #1
   15370:	str	r1, [r8, #20]
   15374:	add	r4, r3, r4
   15378:	strb	r4, [r2]
   1537c:	b	1523c <main@@Base+0x17b4>
   15380:	ldr	r3, [r8, #20]
   15384:	add	r2, r3, #1
   15388:	str	r2, [r8, #20]
   1538c:	strb	r9, [r3]
   15390:	b	1523c <main@@Base+0x17b4>
   15394:	ldr	r3, [r8, #20]
   15398:	add	r2, r3, #1
   1539c:	str	r2, [r8, #20]
   153a0:	mov	r2, #116	; 0x74
   153a4:	strb	r2, [r3]
   153a8:	b	1523c <main@@Base+0x17b4>
   153ac:	ldr	r3, [r8, #20]
   153b0:	add	r2, r3, #1
   153b4:	str	r2, [r8, #20]
   153b8:	strb	fp, [r3]
   153bc:	b	1523c <main@@Base+0x17b4>
   153c0:	ldr	r3, [r8, #20]
   153c4:	add	r2, r3, #1
   153c8:	str	r2, [r8, #20]
   153cc:	mov	r2, #110	; 0x6e
   153d0:	strb	r2, [r3]
   153d4:	b	1523c <main@@Base+0x17b4>
   153d8:	ldr	r3, [r8, #20]
   153dc:	add	r2, r3, #1
   153e0:	str	r2, [r8, #20]
   153e4:	mov	r2, #98	; 0x62
   153e8:	strb	r2, [r3]
   153ec:	b	1523c <main@@Base+0x17b4>
   153f0:	ldr	r3, [r8, #20]
   153f4:	add	r2, r3, #1
   153f8:	str	r2, [r8, #20]
   153fc:	mov	r2, #34	; 0x22
   15400:	strb	r2, [r3]
   15404:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15408:	push	{r4, r5, r6, r7, r8, lr}
   1540c:	mov	r4, r0
   15410:	mov	r6, r1
   15414:	mov	r5, r2
   15418:	ldrb	r3, [r0, #25]
   1541c:	cmp	r3, #0
   15420:	bne	15478 <main@@Base+0x19f0>
   15424:	ldr	r2, [r0, #20]
   15428:	ldr	r3, [r0, #16]
   1542c:	cmp	r2, r3
   15430:	bcs	154d8 <main@@Base+0x1a50>
   15434:	ldr	r3, [r4, #20]
   15438:	mov	r2, #34	; 0x22
   1543c:	strb	r2, [r3]
   15440:	ldrb	r3, [r4, #26]
   15444:	ldr	r0, [r4, #20]
   15448:	cmp	r3, #0
   1544c:	addeq	r0, r0, #1
   15450:	str	r0, [r4, #20]
   15454:	add	r3, r0, r5
   15458:	ldr	r2, [r4, #16]
   1545c:	cmp	r2, r3
   15460:	bhi	154e8 <main@@Base+0x1a60>
   15464:	mov	r2, r5
   15468:	mov	r1, r6
   1546c:	mov	r0, r4
   15470:	bl	14dbc <main@@Base+0x1334>
   15474:	b	15500 <main@@Base+0x1a78>
   15478:	ldr	r3, [r0, #20]
   1547c:	add	r2, r3, #1
   15480:	str	r2, [r0, #20]
   15484:	mov	r2, #10
   15488:	strb	r2, [r3]
   1548c:	ldrb	r3, [r0, #25]
   15490:	ldr	r7, [r0, #32]
   15494:	mul	r7, r7, r3
   15498:	ldr	r0, [r0, #20]
   1549c:	add	r3, r0, r7
   154a0:	ldr	r2, [r4, #16]
   154a4:	cmp	r2, r3
   154a8:	bcc	154c8 <main@@Base+0x1a40>
   154ac:	mov	r2, r7
   154b0:	mov	r1, #32
   154b4:	bl	124e8 <memset@plt>
   154b8:	ldr	r3, [r4, #20]
   154bc:	add	r7, r3, r7
   154c0:	str	r7, [r4, #20]
   154c4:	b	15434 <main@@Base+0x19ac>
   154c8:	mov	r1, r7
   154cc:	mov	r0, r4
   154d0:	bl	14ea4 <main@@Base+0x141c>
   154d4:	b	15434 <main@@Base+0x19ac>
   154d8:	ldr	r3, [r0, #44]	; 0x2c
   154dc:	mov	r1, #0
   154e0:	blx	r3
   154e4:	b	15434 <main@@Base+0x19ac>
   154e8:	mov	r2, r5
   154ec:	mov	r1, r6
   154f0:	bl	1244c <memcpy@plt>
   154f4:	ldr	r3, [r4, #20]
   154f8:	add	r5, r3, r5
   154fc:	str	r5, [r4, #20]
   15500:	ldr	r3, [r4, #20]
   15504:	mov	r2, #34	; 0x22
   15508:	strb	r2, [r3]
   1550c:	ldrb	r3, [r4, #26]
   15510:	clz	r3, r3
   15514:	lsr	r3, r3, #5
   15518:	ldr	r1, [r4, #20]
   1551c:	add	r2, r1, r3
   15520:	add	r2, r2, #1
   15524:	str	r2, [r4, #20]
   15528:	mov	r2, #58	; 0x3a
   1552c:	strb	r2, [r1, r3]
   15530:	ldr	r3, [r4, #20]
   15534:	mov	r2, #32
   15538:	strb	r2, [r3]
   1553c:	ldrb	r2, [r4, #25]
   15540:	ldr	r3, [r4, #20]
   15544:	cmp	r2, #0
   15548:	addne	r3, r3, #1
   1554c:	str	r3, [r4, #20]
   15550:	pop	{r4, r5, r6, r7, r8, pc}
   15554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15558:	sub	sp, sp, #212	; 0xd4
   1555c:	vmov	r2, r3, d0
   15560:	vstr	d0, [sp, #80]	; 0x50
   15564:	mov	r5, r3
   15568:	subs	r3, r0, #0
   1556c:	str	r3, [sp, #112]	; 0x70
   15570:	beq	15c00 <main@@Base+0x2178>
   15574:	vmov	r4, s0
   15578:	adds	r0, r4, r4
   1557c:	adc	r1, r5, r5
   15580:	mov	r2, #0
   15584:	ldr	r3, [pc, #1188]	; 15a30 <main@@Base+0x1fa8>
   15588:	cmp	r1, r3
   1558c:	cmpeq	r0, r2
   15590:	bhi	15c14 <main@@Base+0x218c>
   15594:	cmp	r4, #0
   15598:	sbcs	r3, r5, #0
   1559c:	blt	15c2c <main@@Base+0x21a4>
   155a0:	ldr	r3, [sp, #112]	; 0x70
   155a4:	str	r3, [sp, #76]	; 0x4c
   155a8:	orrs	r3, r4, r5
   155ac:	beq	15c54 <main@@Base+0x21cc>
   155b0:	mov	r2, #0
   155b4:	ldr	r3, [pc, #1144]	; 15a34 <main@@Base+0x1fac>
   155b8:	cmp	r5, r3
   155bc:	cmpeq	r4, r2
   155c0:	beq	15c78 <main@@Base+0x21f0>
   155c4:	ldrd	r8, [sp, #80]	; 0x50
   155c8:	mov	sl, #0
   155cc:	ldr	fp, [pc, #1120]	; 15a34 <main@@Base+0x1fac>
   155d0:	and	sl, sl, r8
   155d4:	and	fp, fp, r9
   155d8:	orrs	r3, sl, fp
   155dc:	beq	15ca8 <main@@Base+0x2220>
   155e0:	mvn	r6, #0
   155e4:	ldr	r7, [pc, #1124]	; 15a50 <main@@Base+0x1fc8>
   155e8:	and	r6, r6, r8
   155ec:	and	r7, r7, r9
   155f0:	adds	r6, r6, #0
   155f4:	adc	r7, r7, #1048576	; 0x100000
   155f8:	lsl	r5, r9, #1
   155fc:	lsr	r5, r5, #21
   15600:	sub	r5, r5, #1072	; 0x430
   15604:	sub	r5, r5, #3
   15608:	strd	r6, [sp, #144]	; 0x90
   1560c:	str	r5, [sp, #152]	; 0x98
   15610:	add	r3, sp, #152	; 0x98
   15614:	ldm	r3, {r0, r1}
   15618:	stm	sp, {r0, r1}
   1561c:	add	r3, sp, #144	; 0x90
   15620:	ldm	r3, {r2, r3}
   15624:	add	r0, sp, #160	; 0xa0
   15628:	bl	14ccc <main@@Base+0x1244>
   1562c:	ldrd	r2, [sp, #160]	; 0xa0
   15630:	strd	r2, [sp, #40]	; 0x28
   15634:	ldr	r3, [sp, #168]	; 0xa8
   15638:	str	r3, [sp, #56]	; 0x38
   1563c:	adds	r2, r6, r6
   15640:	adc	r3, r7, r7
   15644:	strd	r2, [sp, #32]
   15648:	adds	r2, r2, #1
   1564c:	adc	r3, r3, #0
   15650:	strd	r2, [sp, #176]	; 0xb0
   15654:	sub	r4, r5, #1
   15658:	str	r4, [sp, #184]	; 0xb8
   1565c:	add	r3, sp, #184	; 0xb8
   15660:	ldm	r3, {r0, r1}
   15664:	stm	sp, {r0, r1}
   15668:	add	r3, sp, #176	; 0xb0
   1566c:	ldm	r3, {r2, r3}
   15670:	add	r0, sp, #192	; 0xc0
   15674:	bl	14ccc <main@@Base+0x1244>
   15678:	ldr	ip, [sp, #200]	; 0xc8
   1567c:	vldr	d7, [sp, #80]	; 0x50
   15680:	vcmpe.f64	d7, #0.0
   15684:	vmrs	APSR_nzcv, fpscr
   15688:	ble	15cc0 <main@@Base+0x2238>
   1568c:	vldr	d7, [pc, #908]	; 15a20 <main@@Base+0x1f98>
   15690:	vldr	d6, [sp, #80]	; 0x50
   15694:	vcmpe.f64	d6, d7
   15698:	vmrs	APSR_nzcv, fpscr
   1569c:	bhi	15cc0 <main@@Base+0x2238>
   156a0:	mvn	r2, #0
   156a4:	ldr	r3, [pc, #932]	; 15a50 <main@@Base+0x1fc8>
   156a8:	and	r2, r2, r8
   156ac:	and	r3, r3, r9
   156b0:	orrs	r3, r2, r3
   156b4:	moveq	r3, #1
   156b8:	movne	r3, #0
   156bc:	orrs	r2, sl, fp
   156c0:	moveq	r3, #0
   156c4:	andne	r3, r3, #1
   156c8:	cmp	r3, #0
   156cc:	bne	15cd4 <main@@Base+0x224c>
   156d0:	ldrd	r2, [sp, #32]
   156d4:	subs	r2, r2, #1
   156d8:	sbc	r3, r3, #0
   156dc:	sub	r4, r4, ip
   156e0:	sub	r0, r4, #32
   156e4:	rsb	r1, r4, #32
   156e8:	lsl	fp, r3, r4
   156ec:	orr	fp, fp, r2, lsl r0
   156f0:	orr	fp, fp, r2, lsr r1
   156f4:	lsl	sl, r2, r4
   156f8:	mvn	r3, #60	; 0x3c
   156fc:	ldr	r2, [sp, #56]	; 0x38
   15700:	sub	r3, r3, r2
   15704:	vmov	s15, r3
   15708:	vcvt.f64.s32	d7, s15
   1570c:	vldr	d6, [pc, #788]	; 15a28 <main@@Base+0x1fa0>
   15710:	vmul.f64	d7, d7, d6
   15714:	vcvt.s32.f64	s13, d7
   15718:	vmov	r3, s13
   1571c:	vcmpe.f64	d7, #0.0
   15720:	vmrs	APSR_nzcv, fpscr
   15724:	bmi	1573c <main@@Base+0x1cb4>
   15728:	vcvt.f64.s32	d6, s13
   1572c:	vsub.f64	d7, d7, d6
   15730:	vcmp.f64	d7, #0.0
   15734:	vmrs	APSR_nzcv, fpscr
   15738:	addne	r3, r3, #1
   1573c:	add	r3, r3, #344	; 0x158
   15740:	adds	r2, r3, #3
   15744:	addmi	r2, r3, #10
   15748:	asr	r2, r2, #3
   1574c:	add	r2, r2, #1
   15750:	ldr	r1, [pc, #736]	; 15a38 <main@@Base+0x1fb0>
   15754:	lsl	r2, r2, #4
   15758:	add	r3, r1, r2
   1575c:	ldrd	r8, [r1, r2]
   15760:	ldrsh	lr, [r3, #8]
   15764:	ldrsh	r3, [r3, #10]
   15768:	str	r3, [sp, #132]	; 0x84
   1576c:	ldrd	r0, [sp, #40]	; 0x28
   15770:	mov	r4, r0
   15774:	mov	r5, #0
   15778:	mov	r2, r8
   1577c:	mov	r3, #0
   15780:	umull	r6, r7, r0, r9
   15784:	strd	r6, [sp, #32]
   15788:	mla	r6, r9, r5, r7
   1578c:	str	r6, [sp, #36]	; 0x24
   15790:	umull	r6, r7, r1, r8
   15794:	mla	r7, r1, r3, r7
   15798:	mul	r1, r0, r3
   1579c:	mla	r1, r8, r5, r1
   157a0:	umull	r4, r5, r4, r8
   157a4:	add	r5, r1, r5
   157a8:	mov	r1, #0
   157ac:	adds	r0, r5, r6
   157b0:	adc	r1, r1, #0
   157b4:	adds	r0, r0, #-2147483648	; 0x80000000
   157b8:	adc	r1, r1, #0
   157bc:	ldr	r5, [sp, #32]
   157c0:	adds	r0, r0, r5
   157c4:	adc	r1, r1, #0
   157c8:	str	r1, [sp, #48]	; 0x30
   157cc:	mov	r1, #0
   157d0:	str	r1, [sp, #52]	; 0x34
   157d4:	ldr	r0, [sp, #36]	; 0x24
   157d8:	adds	r0, r0, r7
   157dc:	adc	r1, r1, r1
   157e0:	ldr	r4, [sp, #44]	; 0x2c
   157e4:	umlal	r0, r1, r9, r4
   157e8:	ldrd	r4, [sp, #48]	; 0x30
   157ec:	adds	r4, r4, r0
   157f0:	adc	r5, r5, r1
   157f4:	strd	r4, [sp, #120]	; 0x78
   157f8:	ldr	r1, [sp, #56]	; 0x38
   157fc:	add	r8, r1, lr
   15800:	add	r1, r8, #64	; 0x40
   15804:	str	r1, [sp, #128]	; 0x80
   15808:	mov	r0, sl
   1580c:	mov	r1, #0
   15810:	umull	r4, r5, sl, r9
   15814:	strd	r4, [sp, #40]	; 0x28
   15818:	mla	r4, r9, r1, r5
   1581c:	str	r4, [sp, #44]	; 0x2c
   15820:	umull	r4, r5, fp, r2
   15824:	strd	r4, [sp, #48]	; 0x30
   15828:	mla	r4, fp, r3, r5
   1582c:	str	r4, [sp, #52]	; 0x34
   15830:	add	ip, ip, lr
   15834:	add	ip, ip, #64	; 0x40
   15838:	str	ip, [sp, #116]	; 0x74
   1583c:	ldrd	r6, [sp, #192]	; 0xc0
   15840:	mov	r7, #0
   15844:	umull	r4, r5, r6, r9
   15848:	strd	r4, [sp, #64]	; 0x40
   1584c:	mla	ip, r9, r7, r5
   15850:	str	ip, [sp, #68]	; 0x44
   15854:	ldr	ip, [sp, #196]	; 0xc4
   15858:	umull	r4, r5, ip, r2
   1585c:	strd	r4, [sp, #32]
   15860:	mla	ip, ip, r3, r5
   15864:	str	ip, [sp, #36]	; 0x24
   15868:	mul	ip, sl, r3
   1586c:	mla	ip, r2, r1, ip
   15870:	umull	r0, r1, r0, r2
   15874:	add	r1, ip, r1
   15878:	mov	r4, r1
   1587c:	mov	r5, #0
   15880:	ldr	r1, [sp, #48]	; 0x30
   15884:	adds	r4, r4, r1
   15888:	adc	r5, r5, #0
   1588c:	adds	r4, r4, #-2147483648	; 0x80000000
   15890:	adc	r5, r5, #0
   15894:	ldr	r1, [sp, #40]	; 0x28
   15898:	adds	r4, r4, r1
   1589c:	adc	r5, r5, #0
   158a0:	str	r5, [sp, #56]	; 0x38
   158a4:	mov	r1, #0
   158a8:	str	r1, [sp, #60]	; 0x3c
   158ac:	umull	r4, r5, fp, r9
   158b0:	subs	r4, r4, #1
   158b4:	sbc	r5, r5, #0
   158b8:	ldr	r0, [sp, #52]	; 0x34
   158bc:	mov	r1, #0
   158c0:	adds	r0, r0, r4
   158c4:	adc	r1, r1, r5
   158c8:	ldr	r4, [sp, #44]	; 0x2c
   158cc:	mov	r5, #0
   158d0:	adds	r4, r4, r0
   158d4:	adc	r5, r5, r1
   158d8:	ldrd	r0, [sp, #56]	; 0x38
   158dc:	adds	r0, r0, r4
   158e0:	adc	r1, r1, r5
   158e4:	mov	r4, r0
   158e8:	mov	r5, r1
   158ec:	mul	r1, r6, r3
   158f0:	mla	r1, r2, r7, r1
   158f4:	umull	r2, r3, r6, r2
   158f8:	add	r3, r1, r3
   158fc:	mov	r0, r3
   15900:	mov	r1, #0
   15904:	ldr	r3, [sp, #32]
   15908:	adds	r0, r0, r3
   1590c:	adc	r1, r1, #0
   15910:	adds	r0, r0, #-2147483648	; 0x80000000
   15914:	adc	r1, r1, #0
   15918:	ldrd	sl, [sp, #64]	; 0x40
   1591c:	adds	r0, r0, sl
   15920:	adc	r1, r1, #0
   15924:	mov	r6, r1
   15928:	mov	r7, #0
   1592c:	ldr	r3, [sp, #196]	; 0xc4
   15930:	umull	r0, r1, r3, r9
   15934:	adds	r0, r0, #1
   15938:	adc	r1, r1, #0
   1593c:	ldr	r2, [sp, #36]	; 0x24
   15940:	adds	r2, r2, r0
   15944:	adc	r3, r7, r1
   15948:	adds	r2, r2, fp
   1594c:	adc	r3, r3, r7
   15950:	adds	r0, r6, r2
   15954:	adc	r1, r7, r3
   15958:	strd	r0, [sp, #104]	; 0x68
   1595c:	subs	sl, r0, r4
   15960:	sbc	fp, r1, r5
   15964:	cmp	r5, r1
   15968:	cmpeq	r4, r0
   1596c:	bhi	15cf0 <main@@Base+0x2268>
   15970:	mvn	r9, #63	; 0x3f
   15974:	sub	r9, r9, r8
   15978:	mov	r3, #1
   1597c:	sub	r2, r9, #32
   15980:	rsb	r1, r9, #32
   15984:	lsl	r0, r3, r2
   15988:	orr	r0, r0, r3, lsr r1
   1598c:	str	r0, [sp, #100]	; 0x64
   15990:	lsl	r3, r3, r9
   15994:	str	r3, [sp, #96]	; 0x60
   15998:	ldrd	r6, [sp, #104]	; 0x68
   1599c:	lsr	r5, r6, r9
   159a0:	orr	r5, r5, r7, lsl r1
   159a4:	mov	r0, r6
   159a8:	mov	r1, r7
   159ac:	orr	r5, r5, r7, lsr r2
   159b0:	ldrd	r2, [sp, #96]	; 0x60
   159b4:	subs	r2, r2, #1
   159b8:	sbc	r3, r3, #0
   159bc:	mov	r6, r2
   159c0:	mov	r7, r3
   159c4:	strd	r6, [sp, #88]	; 0x58
   159c8:	mov	r2, r0
   159cc:	mov	r3, r1
   159d0:	and	r2, r2, r6
   159d4:	and	r3, r3, r7
   159d8:	strd	r2, [sp, #40]	; 0x28
   159dc:	add	r8, r8, #129	; 0x81
   159e0:	add	r3, r8, r8, lsl #4
   159e4:	add	r8, r8, r3, lsl #3
   159e8:	add	r8, r8, r8, lsl #3
   159ec:	asr	r8, r8, #12
   159f0:	add	r6, r8, #1
   159f4:	ldr	r3, [pc, #64]	; 15a3c <main@@Base+0x1fb4>
   159f8:	add	r3, r3, r6, lsl #2
   159fc:	ldr	r3, [r3, #1700]	; 0x6a4
   15a00:	cmp	r5, r3
   15a04:	movcc	r6, r8
   15a08:	ldr	r3, [pc, #44]	; 15a3c <main@@Base+0x1fb4>
   15a0c:	add	r3, r3, r6, lsl #2
   15a10:	ldr	r4, [r3, #1700]	; 0x6a4
   15a14:	cmp	r6, #0
   15a18:	ble	15e84 <main@@Base+0x23fc>
   15a1c:	b	15a74 <main@@Base+0x1fec>
   15a20:			; <UNDEFINED> instruction: 0xffffffff
   15a24:	svcvc	0x00efffff
   15a28:			; <UNDEFINED> instruction: 0x509f79fe
   15a2c:	svccc	0x00d34413
   15a30:			; <UNDEFINED> instruction: 0xffe00000
   15a34:	svcvc	0x00f00000	; IMB
   15a38:			; <UNDEFINED> instruction: 0x000215b0
   15a3c:	muleq	r2, r0, r4
   15a40:	stclgt	12, cr12, [ip], {205}	; 0xcd
   15a44:	muleq	r2, r4, r5
   15a48:	muleq	r2, r8, sp
   15a4c:	muleq	r2, ip, sp
   15a50:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   15a54:			; <UNDEFINED> instruction: 0xfffffbce
   15a58:	andeq	r1, r2, r8, lsr #11
   15a5c:	andeq	r1, r2, r0, asr #26
   15a60:	andeq	r1, r2, ip, lsr #27
   15a64:	andeq	r1, r2, r0, lsr #22
   15a68:	andeq	r1, r2, r4, asr ip
   15a6c:	ldrdeq	r1, [r2], -r4
   15a70:	strdeq	r1, [r2], -r0
   15a74:	mov	r1, r4
   15a78:	mov	r0, r5
   15a7c:	bl	20914 <flatcc_json_printer_clear@@Base+0x38>
   15a80:	add	r0, r0, #48	; 0x30
   15a84:	ldr	r3, [sp, #76]	; 0x4c
   15a88:	strb	r0, [r3]
   15a8c:	mov	r1, r4
   15a90:	mov	r0, r5
   15a94:	bl	20b00 <flatcc_json_printer_clear@@Base+0x224>
   15a98:	mov	r5, r1
   15a9c:	sub	r6, r6, #1
   15aa0:	sub	r0, r9, #32
   15aa4:	rsb	r1, r9, #32
   15aa8:	lsl	r3, r5, r0
   15aac:	orr	r3, r3, r5, lsr r1
   15ab0:	lsl	r2, r5, r9
   15ab4:	ldrd	r0, [sp, #40]	; 0x28
   15ab8:	adds	r0, r0, r2
   15abc:	adc	r1, r1, r3
   15ac0:	mov	r2, r0
   15ac4:	mov	r3, r1
   15ac8:	strd	r2, [sp, #32]
   15acc:	cmp	r1, fp
   15ad0:	cmpeq	r0, sl
   15ad4:	bcc	15d04 <main@@Base+0x227c>
   15ad8:	ldr	r8, [sp, #76]	; 0x4c
   15adc:	mov	r7, #1
   15ae0:	sub	r3, r9, #32
   15ae4:	str	r3, [sp, #56]	; 0x38
   15ae8:	rsb	r3, r9, #32
   15aec:	str	r3, [sp, #64]	; 0x40
   15af0:	str	r8, [sp, #32]
   15af4:	str	r9, [sp, #48]	; 0x30
   15af8:	ldr	r3, [pc, #-192]	; 15a40 <main@@Base+0x1fb8>
   15afc:	umull	r3, r4, r3, r4
   15b00:	lsr	r4, r4, #3
   15b04:	cmp	r6, #0
   15b08:	beq	15d20 <main@@Base+0x2298>
   15b0c:	mov	r1, r4
   15b10:	mov	r0, r5
   15b14:	bl	20914 <flatcc_json_printer_clear@@Base+0x38>
   15b18:	add	r0, r0, #48	; 0x30
   15b1c:	ldr	r3, [sp, #32]
   15b20:	strb	r0, [r3, #1]!
   15b24:	str	r3, [sp, #32]
   15b28:	add	r7, r7, #1
   15b2c:	mov	r1, r4
   15b30:	mov	r0, r5
   15b34:	bl	20b00 <flatcc_json_printer_clear@@Base+0x224>
   15b38:	mov	r5, r1
   15b3c:	sub	r6, r6, #1
   15b40:	ldr	r3, [sp, #56]	; 0x38
   15b44:	lsl	r9, r1, r3
   15b48:	ldr	r3, [sp, #64]	; 0x40
   15b4c:	orr	r9, r9, r1, lsr r3
   15b50:	ldr	r3, [sp, #48]	; 0x30
   15b54:	lsl	r8, r1, r3
   15b58:	ldrd	r2, [sp, #40]	; 0x28
   15b5c:	adds	r2, r2, r8
   15b60:	adc	r3, r3, r9
   15b64:	cmp	r3, fp
   15b68:	cmpeq	r2, sl
   15b6c:	bcs	15af8 <main@@Base+0x2070>
   15b70:	ldr	r9, [sp, #48]	; 0x30
   15b74:	strd	r2, [sp, #32]
   15b78:	ldrd	r0, [sp, #104]	; 0x68
   15b7c:	ldrd	r2, [sp, #120]	; 0x78
   15b80:	subs	r0, r0, r2
   15b84:	sbc	r1, r1, r3
   15b88:	strd	r0, [sp, #40]	; 0x28
   15b8c:	ldrd	r0, [sp, #104]	; 0x68
   15b90:	cmp	r1, r3
   15b94:	cmpeq	r0, r2
   15b98:	movcc	ip, #1
   15b9c:	movcs	ip, #0
   15ba0:	ldr	r3, [sp, #116]	; 0x74
   15ba4:	ldr	r2, [sp, #128]	; 0x80
   15ba8:	cmp	r3, r2
   15bac:	orrne	ip, ip, #1
   15bb0:	cmp	ip, #0
   15bb4:	bne	15d0c <main@@Base+0x2284>
   15bb8:	mov	r0, #1
   15bbc:	mov	r1, #0
   15bc0:	strd	r0, [sp, #24]
   15bc4:	sub	r1, r9, #32
   15bc8:	rsb	r0, r9, #32
   15bcc:	lsl	r1, r4, r1
   15bd0:	orr	r1, r1, r4, lsr r0
   15bd4:	lsl	r4, r4, r9
   15bd8:	str	r4, [sp, #16]
   15bdc:	str	r1, [sp, #20]
   15be0:	ldrd	r2, [sp, #32]
   15be4:	strd	r2, [sp, #8]
   15be8:	strd	sl, [sp]
   15bec:	ldrd	r2, [sp, #40]	; 0x28
   15bf0:	mov	r1, r7
   15bf4:	ldr	r0, [sp, #76]	; 0x4c
   15bf8:	bl	147e8 <main@@Base+0xd60>
   15bfc:	b	15e14 <main@@Base+0x238c>
   15c00:	ldr	r3, [pc, #-452]	; 15a44 <main@@Base+0x1fbc>
   15c04:	mov	r2, #189	; 0xbd
   15c08:	ldr	r1, [pc, #-436]	; 15a5c <main@@Base+0x1fd4>
   15c0c:	ldr	r0, [pc, #-460]	; 15a48 <main@@Base+0x1fc0>
   15c10:	bl	12530 <__assert_fail@plt>
   15c14:	vmov	r3, s0
   15c18:	mov	r2, r5
   15c1c:	ldr	r1, [pc, #-472]	; 15a4c <main@@Base+0x1fc4>
   15c20:	ldr	r0, [sp, #112]	; 0x70
   15c24:	bl	1250c <sprintf@plt>
   15c28:	b	15c70 <main@@Base+0x21e8>
   15c2c:	ldr	r2, [sp, #112]	; 0x70
   15c30:	add	r3, r2, #1
   15c34:	str	r3, [sp, #76]	; 0x4c
   15c38:	mov	r3, #45	; 0x2d
   15c3c:	strb	r3, [r2]
   15c40:	vldr	d7, [sp, #80]	; 0x50
   15c44:	vneg.f64	d7, d7
   15c48:	vstr	d7, [sp, #80]	; 0x50
   15c4c:	add	r5, r5, #-2147483648	; 0x80000000
   15c50:	b	155a8 <main@@Base+0x1b20>
   15c54:	mov	r3, #48	; 0x30
   15c58:	ldr	r0, [sp, #76]	; 0x4c
   15c5c:	strb	r3, [r0]
   15c60:	mov	r3, #0
   15c64:	strb	r3, [r0, #1]!
   15c68:	ldr	r3, [sp, #112]	; 0x70
   15c6c:	sub	r0, r0, r3
   15c70:	add	sp, sp, #212	; 0xd4
   15c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c78:	mov	r3, #105	; 0x69
   15c7c:	ldr	r0, [sp, #76]	; 0x4c
   15c80:	strb	r3, [r0]
   15c84:	mov	r3, #110	; 0x6e
   15c88:	strb	r3, [r0, #1]
   15c8c:	mov	r3, #102	; 0x66
   15c90:	strb	r3, [r0, #2]
   15c94:	mov	r3, #0
   15c98:	strb	r3, [r0, #3]!
   15c9c:	ldr	r3, [sp, #112]	; 0x70
   15ca0:	sub	r0, r0, r3
   15ca4:	b	15c70 <main@@Base+0x21e8>
   15ca8:	mvn	r6, #0
   15cac:	ldr	r7, [pc, #-612]	; 15a50 <main@@Base+0x1fc8>
   15cb0:	and	r6, r6, r8
   15cb4:	and	r7, r7, r9
   15cb8:	ldr	r5, [pc, #-620]	; 15a54 <main@@Base+0x1fcc>
   15cbc:	b	15608 <main@@Base+0x1b80>
   15cc0:	ldr	r3, [pc, #-624]	; 15a58 <main@@Base+0x1fd0>
   15cc4:	mov	r2, #138	; 0x8a
   15cc8:	ldr	r1, [pc, #-628]	; 15a5c <main@@Base+0x1fd4>
   15ccc:	ldr	r0, [pc, #-628]	; 15a60 <main@@Base+0x1fd8>
   15cd0:	bl	12530 <__assert_fail@plt>
   15cd4:	lsl	r3, r7, #2
   15cd8:	orr	r3, r3, r6, lsr #30
   15cdc:	lsl	r2, r6, #2
   15ce0:	subs	r2, r2, #1
   15ce4:	sbc	r3, r3, #0
   15ce8:	sub	r4, r5, #2
   15cec:	b	156dc <main@@Base+0x1c54>
   15cf0:	ldr	r3, [pc, #-660]	; 15a64 <main@@Base+0x1fdc>
   15cf4:	mov	r2, #239	; 0xef
   15cf8:	ldr	r1, [pc, #-664]	; 15a68 <main@@Base+0x1fe0>
   15cfc:	ldr	r0, [pc, #-664]	; 15a6c <main@@Base+0x1fe4>
   15d00:	bl	12530 <__assert_fail@plt>
   15d04:	mov	r7, #1
   15d08:	b	15b78 <main@@Base+0x20f0>
   15d0c:	ldr	r3, [pc, #-688]	; 15a64 <main@@Base+0x1fdc>
   15d10:	mov	r2, #239	; 0xef
   15d14:	ldr	r1, [pc, #-692]	; 15a68 <main@@Base+0x1fe0>
   15d18:	ldr	r0, [pc, #-692]	; 15a6c <main@@Base+0x1fe4>
   15d1c:	bl	12530 <__assert_fail@plt>
   15d20:	ldr	r9, [sp, #48]	; 0x30
   15d24:	ldr	r3, [sp, #76]	; 0x4c
   15d28:	add	lr, r3, r7
   15d2c:	mov	r0, #1
   15d30:	mov	r1, #0
   15d34:	mov	ip, #10
   15d38:	rsb	r5, r9, #32
   15d3c:	sub	r4, r9, #32
   15d40:	str	r4, [sp, #32]
   15d44:	mov	r4, r9
   15d48:	ldrd	r8, [sp, #40]	; 0x28
   15d4c:	umull	r2, r3, r8, ip
   15d50:	mla	r3, ip, r9, r3
   15d54:	mul	r8, ip, r1
   15d58:	umull	r0, r1, r0, ip
   15d5c:	add	r1, r8, r1
   15d60:	mul	r8, ip, fp
   15d64:	umull	sl, fp, sl, ip
   15d68:	add	fp, r8, fp
   15d6c:	lsr	r8, r2, r4
   15d70:	orr	r8, r8, r3, lsl r5
   15d74:	ldr	r9, [sp, #32]
   15d78:	orr	r8, r8, r3, lsr r9
   15d7c:	add	r8, r8, #48	; 0x30
   15d80:	strb	r8, [lr], #1
   15d84:	add	r7, r7, #1
   15d88:	ldrd	r8, [sp, #88]	; 0x58
   15d8c:	and	r8, r8, r2
   15d90:	and	r9, r9, r3
   15d94:	sub	r6, r6, #1
   15d98:	cmp	fp, r9
   15d9c:	cmpeq	sl, r8
   15da0:	bls	15d4c <main@@Base+0x22c4>
   15da4:	strd	r8, [sp, #40]	; 0x28
   15da8:	ldrd	r4, [sp, #104]	; 0x68
   15dac:	ldrd	r8, [sp, #120]	; 0x78
   15db0:	subs	r2, r4, r8
   15db4:	sbc	r3, r5, r9
   15db8:	cmp	r5, r9
   15dbc:	cmpeq	r4, r8
   15dc0:	movcc	ip, #1
   15dc4:	movcs	ip, #0
   15dc8:	ldr	lr, [sp, #116]	; 0x74
   15dcc:	ldr	r4, [sp, #128]	; 0x80
   15dd0:	cmp	lr, r4
   15dd4:	orrne	ip, ip, #1
   15dd8:	cmp	ip, #0
   15ddc:	bne	15e8c <main@@Base+0x2404>
   15de0:	mul	ip, r0, r3
   15de4:	mla	ip, r2, r1, ip
   15de8:	umull	r2, r3, r0, r2
   15dec:	add	r3, ip, r3
   15df0:	strd	r0, [sp, #24]
   15df4:	ldrd	r0, [sp, #96]	; 0x60
   15df8:	strd	r0, [sp, #16]
   15dfc:	ldrd	r0, [sp, #40]	; 0x28
   15e00:	strd	r0, [sp, #8]
   15e04:	strd	sl, [sp]
   15e08:	mov	r1, r7
   15e0c:	ldr	r0, [sp, #76]	; 0x4c
   15e10:	bl	147e8 <main@@Base+0xd60>
   15e14:	ldr	r3, [sp, #132]	; 0x84
   15e18:	sub	r6, r6, r3
   15e1c:	cmp	r0, #0
   15e20:	beq	15ea0 <main@@Base+0x2418>
   15e24:	cmp	r6, #0
   15e28:	blt	15ec4 <main@@Base+0x243c>
   15e2c:	cmp	r6, #2
   15e30:	bhi	15fc0 <main@@Base+0x2538>
   15e34:	cmp	r6, #0
   15e38:	ble	15e68 <main@@Base+0x23e0>
   15e3c:	sub	r1, r6, #1
   15e40:	ldr	r2, [sp, #76]	; 0x4c
   15e44:	add	r3, r2, r7
   15e48:	add	r6, r6, r7
   15e4c:	add	r6, r2, r6
   15e50:	mov	r2, #48	; 0x30
   15e54:	strb	r2, [r3], #1
   15e58:	cmp	r6, r3
   15e5c:	bne	15e54 <main@@Base+0x23cc>
   15e60:	add	r7, r7, #1
   15e64:	add	r7, r7, r1
   15e68:	ldr	r2, [sp, #76]	; 0x4c
   15e6c:	add	r0, r2, r7
   15e70:	mov	r3, #0
   15e74:	strb	r3, [r2, r7]
   15e78:	ldr	r3, [sp, #112]	; 0x70
   15e7c:	sub	r0, r0, r3
   15e80:	b	15c70 <main@@Base+0x21e8>
   15e84:	mov	r7, #0
   15e88:	b	15d24 <main@@Base+0x229c>
   15e8c:	ldr	r3, [pc, #-1072]	; 15a64 <main@@Base+0x1fdc>
   15e90:	mov	r2, #239	; 0xef
   15e94:	ldr	r1, [pc, #-1076]	; 15a68 <main@@Base+0x1fe0>
   15e98:	ldr	r0, [pc, #-1076]	; 15a6c <main@@Base+0x1fe4>
   15e9c:	bl	12530 <__assert_fail@plt>
   15ea0:	ldrd	r2, [sp, #80]	; 0x50
   15ea4:	ldr	r1, [pc, #-1084]	; 15a70 <main@@Base+0x1fe8>
   15ea8:	ldr	r4, [sp, #76]	; 0x4c
   15eac:	mov	r0, r4
   15eb0:	bl	1250c <sprintf@plt>
   15eb4:	ldr	r2, [sp, #112]	; 0x70
   15eb8:	sub	r3, r4, r2
   15ebc:	add	r0, r3, r0
   15ec0:	b	15c70 <main@@Base+0x21e8>
   15ec4:	rsb	r1, r6, #0
   15ec8:	add	r3, r6, r7
   15ecc:	cmp	r1, r7
   15ed0:	cmnge	r3, #2
   15ed4:	bge	15f5c <main@@Base+0x24d4>
   15ed8:	cmp	r7, #1
   15edc:	ble	15e2c <main@@Base+0x23a4>
   15ee0:	sub	r3, r7, #1
   15ee4:	cmp	r3, #1
   15ee8:	movlt	r3, #1
   15eec:	cmp	r3, r1
   15ef0:	movlt	r1, r3
   15ef4:	cmp	r1, #0
   15ef8:	ble	15f1c <main@@Base+0x2494>
   15efc:	ldr	r2, [sp, #76]	; 0x4c
   15f00:	add	r3, r2, r7
   15f04:	sub	r0, r7, r1
   15f08:	add	r0, r2, r0
   15f0c:	ldrb	r2, [r3, #-1]
   15f10:	strb	r2, [r3], #-1
   15f14:	cmp	r0, r3
   15f18:	bne	15f0c <main@@Base+0x2484>
   15f1c:	add	ip, r7, #1
   15f20:	sub	r3, r7, r1
   15f24:	mov	r2, #46	; 0x2e
   15f28:	ldr	r0, [sp, #76]	; 0x4c
   15f2c:	strb	r2, [r0, r3]
   15f30:	adds	r0, r1, r6
   15f34:	moveq	r7, ip
   15f38:	beq	15e68 <main@@Base+0x23e0>
   15f3c:	add	r7, r7, #2
   15f40:	mov	r3, #101	; 0x65
   15f44:	ldr	r2, [sp, #76]	; 0x4c
   15f48:	strb	r3, [r2, ip]
   15f4c:	add	r1, r2, r7
   15f50:	bl	149c0 <main@@Base+0xf38>
   15f54:	add	r7, r7, r0
   15f58:	b	15e68 <main@@Base+0x23e0>
   15f5c:	rsb	r0, r7, #2
   15f60:	sub	r0, r0, r6
   15f64:	mov	r2, r7
   15f68:	ldr	r4, [sp, #76]	; 0x4c
   15f6c:	mov	r1, r4
   15f70:	add	r0, r4, r0
   15f74:	bl	12434 <memmove@plt>
   15f78:	mov	r3, #48	; 0x30
   15f7c:	strb	r3, [r4]
   15f80:	mov	r3, #46	; 0x2e
   15f84:	strb	r3, [r4, #1]
   15f88:	rsb	r6, r6, #2
   15f8c:	sub	r0, r6, r7
   15f90:	cmp	r0, #2
   15f94:	ble	15fb8 <main@@Base+0x2530>
   15f98:	add	r3, r4, #2
   15f9c:	add	r1, r4, r0
   15fa0:	mov	r2, #48	; 0x30
   15fa4:	strb	r2, [r3], #1
   15fa8:	cmp	r3, r1
   15fac:	bne	15fa4 <main@@Base+0x251c>
   15fb0:	add	r7, r7, r0
   15fb4:	b	15e68 <main@@Base+0x23e0>
   15fb8:	mov	r0, #2
   15fbc:	b	15fb0 <main@@Base+0x2528>
   15fc0:	add	r4, r7, #1
   15fc4:	mov	r3, #101	; 0x65
   15fc8:	ldr	r2, [sp, #76]	; 0x4c
   15fcc:	strb	r3, [r2, r7]
   15fd0:	add	r1, r2, r4
   15fd4:	mov	r0, r6
   15fd8:	bl	149c0 <main@@Base+0xf38>
   15fdc:	add	r7, r4, r0
   15fe0:	b	15e68 <main@@Base+0x23e0>

00015fe4 <flatcc_json_printer_error_string@@Base>:
   15fe4:	cmp	r0, #3
   15fe8:	ldrls	pc, [pc, r0, lsl #2]
   15fec:	b	16018 <flatcc_json_printer_error_string@@Base+0x34>
   15ff0:	andeq	r6, r1, r0, lsr #32
   15ff4:	andeq	r6, r1, r0
   15ff8:	andeq	r6, r1, r8
   15ffc:	andeq	r6, r1, r0, lsl r0
   16000:	ldr	r0, [pc, #32]	; 16028 <flatcc_json_printer_error_string@@Base+0x44>
   16004:	bx	lr
   16008:	ldr	r0, [pc, #28]	; 1602c <flatcc_json_printer_error_string@@Base+0x48>
   1600c:	bx	lr
   16010:	ldr	r0, [pc, #24]	; 16030 <flatcc_json_printer_error_string@@Base+0x4c>
   16014:	bx	lr
   16018:	ldr	r0, [pc, #20]	; 16034 <flatcc_json_printer_error_string@@Base+0x50>
   1601c:	bx	lr
   16020:	ldr	r0, [pc, #16]	; 16038 <flatcc_json_printer_error_string@@Base+0x54>
   16024:	bx	lr
   16028:	strdeq	r1, [r2], -ip
   1602c:	andeq	r1, r2, r8, lsl #28
   16030:	andeq	r1, r2, r8, lsl lr
   16034:	andeq	r1, r2, r4, lsr #28
   16038:	strdeq	r1, [r2], -r8

0001603c <flatcc_json_printer_fmt_float@@Base>:
   1603c:	push	{r4, lr}
   16040:	vcvt.f64.f32	d0, s0
   16044:	bl	15554 <main@@Base+0x1acc>
   16048:	pop	{r4, pc}

0001604c <flatcc_json_printer_fmt_double@@Base>:
   1604c:	push	{r4, lr}
   16050:	bl	15554 <main@@Base+0x1acc>
   16054:	pop	{r4, pc}

00016058 <flatcc_json_printer_fmt_bool@@Base>:
   16058:	mov	r3, r0
   1605c:	cmp	r1, #0
   16060:	ldrne	r2, [pc, #36]	; 1608c <flatcc_json_printer_fmt_bool@@Base+0x34>
   16064:	ldrne	r0, [r2]
   16068:	strne	r0, [r3]
   1606c:	movne	r0, #4
   16070:	ldreq	r2, [pc, #24]	; 16090 <flatcc_json_printer_fmt_bool@@Base+0x38>
   16074:	ldreq	r0, [r2]
   16078:	streq	r0, [r3]
   1607c:	ldrbeq	r2, [r2, #4]
   16080:	strbeq	r2, [r3, #4]
   16084:	moveq	r0, #5
   16088:	bx	lr
   1608c:	andeq	r1, r2, ip, lsr #28
   16090:	andeq	r1, r2, r4, lsr lr

00016094 <flatcc_json_printer_string@@Base>:
   16094:	push	{r4, lr}
   16098:	bl	151b0 <main@@Base+0x1728>
   1609c:	pop	{r4, pc}

000160a0 <flatcc_json_printer_write@@Base>:
   160a0:	push	{r4, r5, r6, lr}
   160a4:	mov	r4, r0
   160a8:	mov	r5, r2
   160ac:	ldr	r0, [r0, #20]
   160b0:	add	r3, r0, r2
   160b4:	ldr	r2, [r4, #16]
   160b8:	cmp	r2, r3
   160bc:	bls	160d8 <flatcc_json_printer_write@@Base+0x38>
   160c0:	mov	r2, r5
   160c4:	bl	1244c <memcpy@plt>
   160c8:	ldr	r3, [r4, #20]
   160cc:	add	r5, r3, r5
   160d0:	str	r5, [r4, #20]
   160d4:	pop	{r4, r5, r6, pc}
   160d8:	mov	r2, r5
   160dc:	mov	r0, r4
   160e0:	bl	14dbc <main@@Base+0x1334>
   160e4:	pop	{r4, r5, r6, pc}

000160e8 <flatcc_json_printer_nl@@Base>:
   160e8:	ldr	r3, [r0, #20]
   160ec:	add	r2, r3, #1
   160f0:	str	r2, [r0, #20]
   160f4:	mov	r2, #10
   160f8:	strb	r2, [r3]
   160fc:	ldr	r2, [r0, #20]
   16100:	ldr	r3, [r0, #16]
   16104:	cmp	r2, r3
   16108:	bxcc	lr
   1610c:	push	{r4, lr}
   16110:	ldr	r3, [r0, #44]	; 0x2c
   16114:	mov	r1, #0
   16118:	blx	r3
   1611c:	pop	{r4, pc}

00016120 <flatcc_json_printer_char@@Base>:
   16120:	ldr	r3, [r0, #20]
   16124:	add	r2, r3, #1
   16128:	str	r2, [r0, #20]
   1612c:	strb	r1, [r3]
   16130:	bx	lr

00016134 <flatcc_json_printer_indent@@Base>:
   16134:	push	{r4, r5, r6, lr}
   16138:	mov	r4, r0
   1613c:	ldrb	r3, [r0, #25]
   16140:	ldr	r5, [r0, #32]
   16144:	mul	r5, r5, r3
   16148:	ldr	r0, [r0, #20]
   1614c:	add	r3, r0, r5
   16150:	ldr	r2, [r4, #16]
   16154:	cmp	r2, r3
   16158:	bcc	16178 <flatcc_json_printer_indent@@Base+0x44>
   1615c:	mov	r2, r5
   16160:	mov	r1, #32
   16164:	bl	124e8 <memset@plt>
   16168:	ldr	r3, [r4, #20]
   1616c:	add	r5, r3, r5
   16170:	str	r5, [r4, #20]
   16174:	pop	{r4, r5, r6, pc}
   16178:	mov	r1, r5
   1617c:	mov	r0, r4
   16180:	bl	14ea4 <main@@Base+0x141c>
   16184:	pop	{r4, r5, r6, pc}

00016188 <flatcc_json_printer_add_level@@Base>:
   16188:	ldr	r3, [r0, #32]
   1618c:	add	r1, r3, r1
   16190:	str	r1, [r0, #32]
   16194:	bx	lr

00016198 <flatcc_json_printer_get_level@@Base>:
   16198:	ldr	r0, [r0, #32]
   1619c:	bx	lr

000161a0 <flatcc_json_printer_uint8@@Base>:
   161a0:	push	{r4, lr}
   161a4:	mov	r4, r0
   161a8:	mov	r0, r1
   161ac:	ldr	r1, [r4, #20]
   161b0:	bl	13b20 <main@@Base+0x98>
   161b4:	ldr	r3, [r4, #20]
   161b8:	add	r0, r3, r0
   161bc:	str	r0, [r4, #20]
   161c0:	pop	{r4, pc}

000161c4 <flatcc_json_printer_uint16@@Base>:
   161c4:	push	{r4, lr}
   161c8:	mov	r4, r0
   161cc:	mov	r0, r1
   161d0:	ldr	r1, [r4, #20]
   161d4:	bl	13be0 <main@@Base+0x158>
   161d8:	ldr	r3, [r4, #20]
   161dc:	add	r0, r3, r0
   161e0:	str	r0, [r4, #20]
   161e4:	pop	{r4, pc}

000161e8 <flatcc_json_printer_uint32@@Base>:
   161e8:	push	{r4, lr}
   161ec:	mov	r4, r0
   161f0:	mov	r0, r1
   161f4:	ldr	r1, [r4, #20]
   161f8:	bl	13d64 <main@@Base+0x2dc>
   161fc:	ldr	r3, [r4, #20]
   16200:	add	r0, r3, r0
   16204:	str	r0, [r4, #20]
   16208:	pop	{r4, pc}

0001620c <flatcc_json_printer_uint64@@Base>:
   1620c:	push	{r4, lr}
   16210:	mov	r4, r0
   16214:	mov	r0, r2
   16218:	mov	r1, r3
   1621c:	ldr	r2, [r4, #20]
   16220:	bl	140a4 <main@@Base+0x61c>
   16224:	ldr	r3, [r4, #20]
   16228:	add	r0, r3, r0
   1622c:	str	r0, [r4, #20]
   16230:	pop	{r4, pc}

00016234 <flatcc_json_printer_int8@@Base>:
   16234:	push	{r4, lr}
   16238:	mov	r4, r0
   1623c:	mov	r0, r1
   16240:	ldr	r1, [r4, #20]
   16244:	bl	14728 <main@@Base+0xca0>
   16248:	ldr	r3, [r4, #20]
   1624c:	add	r0, r3, r0
   16250:	str	r0, [r4, #20]
   16254:	pop	{r4, pc}

00016258 <flatcc_json_printer_int16@@Base>:
   16258:	push	{r4, lr}
   1625c:	mov	r4, r0
   16260:	mov	r0, r1
   16264:	ldr	r1, [r4, #20]
   16268:	bl	14758 <main@@Base+0xcd0>
   1626c:	ldr	r3, [r4, #20]
   16270:	add	r0, r3, r0
   16274:	str	r0, [r4, #20]
   16278:	pop	{r4, pc}

0001627c <flatcc_json_printer_int32@@Base>:
   1627c:	push	{r4, lr}
   16280:	mov	r4, r0
   16284:	mov	r0, r1
   16288:	ldr	r1, [r4, #20]
   1628c:	bl	14788 <main@@Base+0xd00>
   16290:	ldr	r3, [r4, #20]
   16294:	add	r0, r3, r0
   16298:	str	r0, [r4, #20]
   1629c:	pop	{r4, pc}

000162a0 <flatcc_json_printer_int64@@Base>:
   162a0:	push	{r4, lr}
   162a4:	mov	r4, r0
   162a8:	mov	r0, r2
   162ac:	mov	r1, r3
   162b0:	ldr	r2, [r4, #20]
   162b4:	bl	147b0 <main@@Base+0xd28>
   162b8:	ldr	r3, [r4, #20]
   162bc:	add	r0, r3, r0
   162c0:	str	r0, [r4, #20]
   162c4:	pop	{r4, pc}

000162c8 <flatcc_json_printer_float@@Base>:
   162c8:	push	{r4, lr}
   162cc:	mov	r4, r0
   162d0:	ldr	r0, [r0, #20]
   162d4:	vcvt.f64.f32	d0, s0
   162d8:	bl	15554 <main@@Base+0x1acc>
   162dc:	ldr	r3, [r4, #20]
   162e0:	add	r0, r3, r0
   162e4:	str	r0, [r4, #20]
   162e8:	pop	{r4, pc}

000162ec <flatcc_json_printer_double@@Base>:
   162ec:	push	{r4, lr}
   162f0:	mov	r4, r0
   162f4:	ldr	r0, [r0, #20]
   162f8:	bl	15554 <main@@Base+0x1acc>
   162fc:	ldr	r3, [r4, #20]
   16300:	add	r0, r3, r0
   16304:	str	r0, [r4, #20]
   16308:	pop	{r4, pc}

0001630c <flatcc_json_printer_enum@@Base>:
   1630c:	push	{r4, r5, r6, lr}
   16310:	mov	r4, r0
   16314:	mov	r5, r2
   16318:	ldr	r3, [r0, #20]
   1631c:	mov	r2, #34	; 0x22
   16320:	strb	r2, [r3]
   16324:	ldrb	r3, [r0, #26]
   16328:	ldr	r0, [r0, #20]
   1632c:	cmp	r3, #0
   16330:	addeq	r0, r0, #1
   16334:	str	r0, [r4, #20]
   16338:	add	r3, r0, r5
   1633c:	ldr	r2, [r4, #16]
   16340:	cmp	r2, r3
   16344:	bhi	16358 <flatcc_json_printer_enum@@Base+0x4c>
   16348:	mov	r2, r5
   1634c:	mov	r0, r4
   16350:	bl	14dbc <main@@Base+0x1334>
   16354:	b	1636c <flatcc_json_printer_enum@@Base+0x60>
   16358:	mov	r2, r5
   1635c:	bl	1244c <memcpy@plt>
   16360:	ldr	r3, [r4, #20]
   16364:	add	r5, r3, r5
   16368:	str	r5, [r4, #20]
   1636c:	ldr	r3, [r4, #20]
   16370:	mov	r2, #34	; 0x22
   16374:	strb	r2, [r3]
   16378:	ldrb	r2, [r4, #26]
   1637c:	ldr	r3, [r4, #20]
   16380:	cmp	r2, #0
   16384:	addeq	r3, r3, #1
   16388:	str	r3, [r4, #20]
   1638c:	pop	{r4, r5, r6, pc}

00016390 <flatcc_json_printer_delimit_enum_flags@@Base>:
   16390:	ldrb	r3, [r0, #26]
   16394:	adds	r1, r1, #0
   16398:	movne	r1, #1
   1639c:	cmp	r3, #0
   163a0:	movne	r3, r1
   163a4:	orreq	r3, r1, #1
   163a8:	ldr	r2, [r0, #20]
   163ac:	mov	r1, #34	; 0x22
   163b0:	strb	r1, [r2]
   163b4:	ldr	r1, [r0, #20]
   163b8:	add	r1, r1, r3
   163bc:	str	r1, [r0, #20]
   163c0:	bx	lr

000163c4 <flatcc_json_printer_enum_flag@@Base>:
   163c4:	push	{r4, r5, r6, lr}
   163c8:	mov	r4, r0
   163cc:	mov	ip, r2
   163d0:	mov	r5, r3
   163d4:	ldr	r3, [r0, #20]
   163d8:	mov	r2, #32
   163dc:	strb	r2, [r3]
   163e0:	ldr	r0, [r0, #20]
   163e4:	cmp	r1, #0
   163e8:	addgt	r0, r0, #1
   163ec:	str	r0, [r4, #20]
   163f0:	add	r3, r0, r5
   163f4:	ldr	r2, [r4, #16]
   163f8:	cmp	r2, r3
   163fc:	bls	1641c <flatcc_json_printer_enum_flag@@Base+0x58>
   16400:	mov	r2, r5
   16404:	mov	r1, ip
   16408:	bl	1244c <memcpy@plt>
   1640c:	ldr	r3, [r4, #20]
   16410:	add	r5, r3, r5
   16414:	str	r5, [r4, #20]
   16418:	pop	{r4, r5, r6, pc}
   1641c:	mov	r2, r5
   16420:	mov	r1, ip
   16424:	mov	r0, r4
   16428:	bl	14dbc <main@@Base+0x1334>
   1642c:	pop	{r4, r5, r6, pc}

00016430 <flatcc_json_printer_string_field@@Base>:
   16430:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16434:	ldr	r8, [sp, #32]
   16438:	add	r2, r2, #2
   1643c:	lsl	r2, r2, #1
   16440:	ldr	ip, [r1, #8]
   16444:	cmp	r2, ip
   16448:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   1644c:	ldr	ip, [r1, #4]
   16450:	ldrh	r5, [ip, r2]
   16454:	cmp	r5, #0
   16458:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1645c:	ldr	r7, [r1]
   16460:	adds	r6, r7, r5
   16464:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16468:	ldr	r2, [r1, #16]
   1646c:	add	ip, r2, #1
   16470:	str	ip, [r1, #16]
   16474:	cmp	r2, #0
   16478:	ldrne	r2, [r0, #20]
   1647c:	addne	r1, r2, #1
   16480:	strne	r1, [r0, #20]
   16484:	movne	r1, #44	; 0x2c
   16488:	strbne	r1, [r2]
   1648c:	mov	r9, r3
   16490:	mov	r4, r0
   16494:	ldrb	r3, [r0, #25]
   16498:	cmp	r3, #0
   1649c:	bne	164f4 <flatcc_json_printer_string_field@@Base+0xc4>
   164a0:	ldr	r2, [r0, #20]
   164a4:	ldr	r3, [r0, #16]
   164a8:	cmp	r2, r3
   164ac:	bcs	16554 <flatcc_json_printer_string_field@@Base+0x124>
   164b0:	ldr	r3, [r4, #20]
   164b4:	mov	r2, #34	; 0x22
   164b8:	strb	r2, [r3]
   164bc:	ldrb	r3, [r4, #26]
   164c0:	ldr	r0, [r4, #20]
   164c4:	cmp	r3, #0
   164c8:	addeq	r0, r0, #1
   164cc:	str	r0, [r4, #20]
   164d0:	add	r3, r0, r8
   164d4:	ldr	r2, [r4, #16]
   164d8:	cmp	r2, r3
   164dc:	bhi	16564 <flatcc_json_printer_string_field@@Base+0x134>
   164e0:	mov	r2, r8
   164e4:	mov	r1, r9
   164e8:	mov	r0, r4
   164ec:	bl	14dbc <main@@Base+0x1334>
   164f0:	b	1657c <flatcc_json_printer_string_field@@Base+0x14c>
   164f4:	ldr	r3, [r0, #20]
   164f8:	add	r2, r3, #1
   164fc:	str	r2, [r0, #20]
   16500:	mov	r2, #10
   16504:	strb	r2, [r3]
   16508:	ldrb	r3, [r0, #25]
   1650c:	ldr	sl, [r0, #32]
   16510:	mul	sl, sl, r3
   16514:	ldr	r0, [r0, #20]
   16518:	add	r3, r0, sl
   1651c:	ldr	r2, [r4, #16]
   16520:	cmp	r2, r3
   16524:	bcc	16544 <flatcc_json_printer_string_field@@Base+0x114>
   16528:	mov	r2, sl
   1652c:	mov	r1, #32
   16530:	bl	124e8 <memset@plt>
   16534:	ldr	r3, [r4, #20]
   16538:	add	sl, r3, sl
   1653c:	str	sl, [r4, #20]
   16540:	b	164b0 <flatcc_json_printer_string_field@@Base+0x80>
   16544:	mov	r1, sl
   16548:	mov	r0, r4
   1654c:	bl	14ea4 <main@@Base+0x141c>
   16550:	b	164b0 <flatcc_json_printer_string_field@@Base+0x80>
   16554:	ldr	r3, [r0, #44]	; 0x2c
   16558:	mov	r1, #0
   1655c:	blx	r3
   16560:	b	164b0 <flatcc_json_printer_string_field@@Base+0x80>
   16564:	mov	r2, r8
   16568:	mov	r1, r9
   1656c:	bl	1244c <memcpy@plt>
   16570:	ldr	r3, [r4, #20]
   16574:	add	r8, r3, r8
   16578:	str	r8, [r4, #20]
   1657c:	ldr	r3, [r4, #20]
   16580:	mov	r2, #34	; 0x22
   16584:	strb	r2, [r3]
   16588:	ldrb	r3, [r4, #26]
   1658c:	clz	r3, r3
   16590:	lsr	r3, r3, #5
   16594:	ldr	r1, [r4, #20]
   16598:	add	r2, r1, r3
   1659c:	add	r2, r2, #1
   165a0:	str	r2, [r4, #20]
   165a4:	mov	r2, #58	; 0x3a
   165a8:	strb	r2, [r1, r3]
   165ac:	ldr	r3, [r4, #20]
   165b0:	mov	r2, #32
   165b4:	strb	r2, [r3]
   165b8:	ldrb	r2, [r4, #25]
   165bc:	ldr	r3, [r4, #20]
   165c0:	cmp	r2, #0
   165c4:	addne	r3, r3, #1
   165c8:	str	r3, [r4, #20]
   165cc:	ldr	r3, [r7, r5]
   165d0:	add	r1, r6, r3
   165d4:	ldr	r2, [r6, r3]
   165d8:	add	r1, r1, #4
   165dc:	mov	r0, r4
   165e0:	bl	151b0 <main@@Base+0x1728>
   165e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000165e8 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   165e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165ec:	sub	sp, sp, #28
   165f0:	ldr	r7, [sp, #64]	; 0x40
   165f4:	add	r2, r2, #2
   165f8:	lsl	r2, r2, #1
   165fc:	ldr	ip, [r1, #8]
   16600:	cmp	r2, ip
   16604:	bge	168e0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2f8>
   16608:	ldr	ip, [r1, #4]
   1660c:	ldrh	r8, [ip, r2]
   16610:	cmp	r8, #0
   16614:	beq	168e0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2f8>
   16618:	ldr	sl, [r1]
   1661c:	ldr	r5, [sp, #68]	; 0x44
   16620:	adds	r5, r5, #0
   16624:	movne	r5, #1
   16628:	orr	r6, r5, #128	; 0x80
   1662c:	adds	r9, sl, r8
   16630:	beq	168e0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2f8>
   16634:	ldr	r2, [r1, #16]
   16638:	add	ip, r2, #1
   1663c:	str	ip, [r1, #16]
   16640:	cmp	r2, #0
   16644:	ldrne	r2, [r0, #20]
   16648:	addne	r1, r2, #1
   1664c:	strne	r1, [r0, #20]
   16650:	movne	r1, #44	; 0x2c
   16654:	strbne	r1, [r2]
   16658:	str	r3, [sp, #12]
   1665c:	mov	r4, r0
   16660:	ldrb	r3, [r0, #25]
   16664:	cmp	r3, #0
   16668:	bne	166c0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xd8>
   1666c:	ldr	r2, [r0, #20]
   16670:	ldr	r3, [r0, #16]
   16674:	cmp	r2, r3
   16678:	bcs	16720 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x138>
   1667c:	ldr	r3, [r4, #20]
   16680:	mov	r2, #34	; 0x22
   16684:	strb	r2, [r3]
   16688:	ldrb	r3, [r4, #26]
   1668c:	ldr	r0, [r4, #20]
   16690:	cmp	r3, #0
   16694:	addeq	r0, r0, #1
   16698:	str	r0, [r4, #20]
   1669c:	add	r3, r0, r7
   166a0:	ldr	r2, [r4, #16]
   166a4:	cmp	r2, r3
   166a8:	bhi	16730 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x148>
   166ac:	mov	r2, r7
   166b0:	ldr	r1, [sp, #12]
   166b4:	mov	r0, r4
   166b8:	bl	14dbc <main@@Base+0x1334>
   166bc:	b	16748 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x160>
   166c0:	ldr	r3, [r0, #20]
   166c4:	add	r2, r3, #1
   166c8:	str	r2, [r0, #20]
   166cc:	mov	r2, #10
   166d0:	strb	r2, [r3]
   166d4:	ldrb	r3, [r0, #25]
   166d8:	ldr	fp, [r0, #32]
   166dc:	mul	fp, fp, r3
   166e0:	ldr	r0, [r0, #20]
   166e4:	add	r3, r0, fp
   166e8:	ldr	r2, [r4, #16]
   166ec:	cmp	r2, r3
   166f0:	bcc	16710 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x128>
   166f4:	mov	r2, fp
   166f8:	mov	r1, #32
   166fc:	bl	124e8 <memset@plt>
   16700:	ldr	r3, [r4, #20]
   16704:	add	fp, r3, fp
   16708:	str	fp, [r4, #20]
   1670c:	b	1667c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x94>
   16710:	mov	r1, fp
   16714:	mov	r0, r4
   16718:	bl	14ea4 <main@@Base+0x141c>
   1671c:	b	1667c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x94>
   16720:	ldr	r3, [r0, #44]	; 0x2c
   16724:	mov	r1, #0
   16728:	blx	r3
   1672c:	b	1667c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x94>
   16730:	mov	r2, r7
   16734:	ldr	r1, [sp, #12]
   16738:	bl	1244c <memcpy@plt>
   1673c:	ldr	r3, [r4, #20]
   16740:	add	r7, r3, r7
   16744:	str	r7, [r4, #20]
   16748:	ldr	r3, [r4, #20]
   1674c:	mov	r1, #34	; 0x22
   16750:	strb	r1, [r3]
   16754:	ldrb	r3, [r4, #26]
   16758:	clz	r3, r3
   1675c:	lsr	r3, r3, #5
   16760:	ldr	r0, [r4, #20]
   16764:	add	r2, r0, r3
   16768:	add	r2, r2, #1
   1676c:	str	r2, [r4, #20]
   16770:	mov	r2, #58	; 0x3a
   16774:	strb	r2, [r0, r3]
   16778:	ldr	r3, [r4, #20]
   1677c:	mov	r2, #32
   16780:	strb	r2, [r3]
   16784:	ldrb	r3, [r4, #25]
   16788:	adds	r3, r3, #0
   1678c:	movne	r3, #1
   16790:	ldr	r0, [r4, #20]
   16794:	add	r2, r0, r3
   16798:	str	r2, [r4, #20]
   1679c:	ldr	ip, [sl, r8]
   167a0:	add	r8, r9, ip
   167a4:	bic	r5, r5, #128	; 0x80
   167a8:	ldr	ip, [r9, ip]
   167ac:	str	ip, [sp, #16]
   167b0:	add	r8, r8, #4
   167b4:	add	r2, r2, #1
   167b8:	str	r2, [r4, #20]
   167bc:	strb	r1, [r0, r3]
   167c0:	mov	r1, r6
   167c4:	ldr	r0, [sp, #16]
   167c8:	bl	14a58 <main@@Base+0xfd0>
   167cc:	mov	sl, r0
   167d0:	ldr	r3, [r4, #20]
   167d4:	add	r3, r3, r0
   167d8:	ldr	r2, [r4, #16]
   167dc:	cmp	r2, r3
   167e0:	bls	168a0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2b8>
   167e4:	ldr	r0, [r4, #20]
   167e8:	ldr	r7, [r4, #16]
   167ec:	add	r3, r0, sl
   167f0:	cmp	r7, r3
   167f4:	bcs	168b4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2cc>
   167f8:	sub	r7, r7, r0
   167fc:	bic	r7, r7, #3
   16800:	add	sl, r7, r7, lsl #1
   16804:	lsrs	sl, sl, #2
   16808:	beq	1688c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2a4>
   1680c:	mov	r9, #0
   16810:	str	sl, [sp, #20]
   16814:	str	r5, [sp]
   16818:	add	r3, sp, #20
   1681c:	mov	r2, r9
   16820:	mov	r1, r8
   16824:	bl	14aac <main@@Base+0x1024>
   16828:	ldr	r3, [r4, #20]
   1682c:	add	r7, r3, r7
   16830:	str	r7, [r4, #20]
   16834:	add	r8, r8, sl
   16838:	ldr	r3, [sp, #16]
   1683c:	sub	sl, r3, sl
   16840:	str	sl, [sp, #16]
   16844:	ldr	r3, [r4, #44]	; 0x2c
   16848:	mov	r1, r9
   1684c:	mov	r0, r4
   16850:	blx	r3
   16854:	mov	r1, r6
   16858:	ldr	r0, [sp, #16]
   1685c:	bl	14a58 <main@@Base+0xfd0>
   16860:	mov	sl, r0
   16864:	ldr	r0, [r4, #20]
   16868:	ldr	r7, [r4, #16]
   1686c:	add	r3, r0, sl
   16870:	cmp	r7, r3
   16874:	bcs	168b4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2cc>
   16878:	sub	r7, r7, r0
   1687c:	bic	r7, r7, #3
   16880:	add	sl, r7, r7, lsl #1
   16884:	lsrs	sl, sl, #2
   16888:	bne	16810 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x228>
   1688c:	ldr	r3, [pc, #84]	; 168e8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x300>
   16890:	ldr	r2, [pc, #84]	; 168ec <flatcc_json_printer_uint8_vector_base64_field@@Base+0x304>
   16894:	ldr	r1, [pc, #84]	; 168f0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x308>
   16898:	ldr	r0, [pc, #84]	; 168f4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x30c>
   1689c:	bl	12530 <__assert_fail@plt>
   168a0:	ldr	r3, [r4, #44]	; 0x2c
   168a4:	mov	r1, #0
   168a8:	mov	r0, r4
   168ac:	blx	r3
   168b0:	b	167e4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1fc>
   168b4:	str	r6, [sp]
   168b8:	add	r3, sp, #16
   168bc:	mov	r2, #0
   168c0:	mov	r1, r8
   168c4:	bl	14aac <main@@Base+0x1024>
   168c8:	ldr	r2, [r4, #20]
   168cc:	add	r3, r2, sl
   168d0:	add	r3, r3, #1
   168d4:	str	r3, [r4, #20]
   168d8:	mov	r3, #34	; 0x22
   168dc:	strb	r3, [r2, sl]
   168e0:	add	sp, sp, #28
   168e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168e8:	andeq	r1, r2, r0, ror #22
   168ec:	andeq	r0, r0, r5, lsl r1
   168f0:			; <UNDEFINED> instruction: 0x00021cb8
   168f4:	andeq	r1, r2, ip, lsr lr

000168f8 <flatcc_json_printer_uint8_field@@Base>:
   168f8:	push	{r4, r5, r6, r7, r8, lr}
   168fc:	ldr	r6, [sp, #24]
   16900:	ldrb	lr, [sp, #28]
   16904:	add	r2, r2, #2
   16908:	lsl	r2, r2, #1
   1690c:	ldr	ip, [r1, #8]
   16910:	cmp	r2, ip
   16914:	bge	169dc <flatcc_json_printer_uint8_field@@Base+0xe4>
   16918:	ldr	ip, [r1, #4]
   1691c:	ldrh	r2, [ip, r2]
   16920:	cmp	r2, #0
   16924:	beq	169dc <flatcc_json_printer_uint8_field@@Base+0xe4>
   16928:	ldr	ip, [r1]
   1692c:	cmn	ip, r2
   16930:	beq	169dc <flatcc_json_printer_uint8_field@@Base+0xe4>
   16934:	ldrb	r5, [ip, r2]
   16938:	cmp	lr, r5
   1693c:	beq	169cc <flatcc_json_printer_uint8_field@@Base+0xd4>
   16940:	ldr	r2, [r1, #16]
   16944:	add	ip, r2, #1
   16948:	str	ip, [r1, #16]
   1694c:	cmp	r2, #0
   16950:	ldrne	r2, [r0, #20]
   16954:	addne	r1, r2, #1
   16958:	strne	r1, [r0, #20]
   1695c:	movne	r1, #44	; 0x2c
   16960:	strbne	r1, [r2]
   16964:	mov	r7, r3
   16968:	mov	r4, r0
   1696c:	ldrb	r3, [r0, #25]
   16970:	cmp	r3, #0
   16974:	bne	169f0 <flatcc_json_printer_uint8_field@@Base+0xf8>
   16978:	ldr	r2, [r0, #20]
   1697c:	ldr	r3, [r0, #16]
   16980:	cmp	r2, r3
   16984:	bcs	16a50 <flatcc_json_printer_uint8_field@@Base+0x158>
   16988:	ldr	r3, [r4, #20]
   1698c:	mov	r2, #34	; 0x22
   16990:	strb	r2, [r3]
   16994:	ldrb	r3, [r4, #26]
   16998:	ldr	r0, [r4, #20]
   1699c:	cmp	r3, #0
   169a0:	addeq	r0, r0, #1
   169a4:	str	r0, [r4, #20]
   169a8:	add	r3, r0, r6
   169ac:	ldr	r2, [r4, #16]
   169b0:	cmp	r2, r3
   169b4:	bhi	16a60 <flatcc_json_printer_uint8_field@@Base+0x168>
   169b8:	mov	r2, r6
   169bc:	mov	r1, r7
   169c0:	mov	r0, r4
   169c4:	bl	14dbc <main@@Base+0x1334>
   169c8:	b	16a78 <flatcc_json_printer_uint8_field@@Base+0x180>
   169cc:	ldrb	r2, [r0, #28]
   169d0:	cmp	r2, #0
   169d4:	beq	16940 <flatcc_json_printer_uint8_field@@Base+0x48>
   169d8:	pop	{r4, r5, r6, r7, r8, pc}
   169dc:	ldrb	r2, [r0, #29]
   169e0:	cmp	r2, #0
   169e4:	popeq	{r4, r5, r6, r7, r8, pc}
   169e8:	mov	r5, lr
   169ec:	b	16940 <flatcc_json_printer_uint8_field@@Base+0x48>
   169f0:	ldr	r3, [r0, #20]
   169f4:	add	r2, r3, #1
   169f8:	str	r2, [r0, #20]
   169fc:	mov	r2, #10
   16a00:	strb	r2, [r3]
   16a04:	ldrb	r3, [r0, #25]
   16a08:	ldr	r8, [r0, #32]
   16a0c:	mul	r8, r8, r3
   16a10:	ldr	r0, [r0, #20]
   16a14:	add	r3, r0, r8
   16a18:	ldr	r2, [r4, #16]
   16a1c:	cmp	r2, r3
   16a20:	bcc	16a40 <flatcc_json_printer_uint8_field@@Base+0x148>
   16a24:	mov	r2, r8
   16a28:	mov	r1, #32
   16a2c:	bl	124e8 <memset@plt>
   16a30:	ldr	r3, [r4, #20]
   16a34:	add	r8, r3, r8
   16a38:	str	r8, [r4, #20]
   16a3c:	b	16988 <flatcc_json_printer_uint8_field@@Base+0x90>
   16a40:	mov	r1, r8
   16a44:	mov	r0, r4
   16a48:	bl	14ea4 <main@@Base+0x141c>
   16a4c:	b	16988 <flatcc_json_printer_uint8_field@@Base+0x90>
   16a50:	ldr	r3, [r0, #44]	; 0x2c
   16a54:	mov	r1, #0
   16a58:	blx	r3
   16a5c:	b	16988 <flatcc_json_printer_uint8_field@@Base+0x90>
   16a60:	mov	r2, r6
   16a64:	mov	r1, r7
   16a68:	bl	1244c <memcpy@plt>
   16a6c:	ldr	r3, [r4, #20]
   16a70:	add	r6, r3, r6
   16a74:	str	r6, [r4, #20]
   16a78:	ldr	r3, [r4, #20]
   16a7c:	mov	r2, #34	; 0x22
   16a80:	strb	r2, [r3]
   16a84:	ldrb	r3, [r4, #26]
   16a88:	clz	r3, r3
   16a8c:	lsr	r3, r3, #5
   16a90:	ldr	r1, [r4, #20]
   16a94:	add	r2, r1, r3
   16a98:	add	r2, r2, #1
   16a9c:	str	r2, [r4, #20]
   16aa0:	mov	r2, #58	; 0x3a
   16aa4:	strb	r2, [r1, r3]
   16aa8:	ldr	r3, [r4, #20]
   16aac:	mov	r2, #32
   16ab0:	strb	r2, [r3]
   16ab4:	ldrb	r3, [r4, #25]
   16ab8:	ldr	r1, [r4, #20]
   16abc:	cmp	r3, #0
   16ac0:	addne	r1, r1, #1
   16ac4:	str	r1, [r4, #20]
   16ac8:	mov	r0, r5
   16acc:	bl	13b20 <main@@Base+0x98>
   16ad0:	ldr	r3, [r4, #20]
   16ad4:	add	r0, r3, r0
   16ad8:	str	r0, [r4, #20]
   16adc:	pop	{r4, r5, r6, r7, r8, pc}

00016ae0 <flatcc_json_printer_uint16_field@@Base>:
   16ae0:	push	{r4, r5, r6, r7, r8, lr}
   16ae4:	ldr	r6, [sp, #24]
   16ae8:	ldrh	lr, [sp, #28]
   16aec:	add	r2, r2, #2
   16af0:	lsl	r2, r2, #1
   16af4:	ldr	ip, [r1, #8]
   16af8:	cmp	r2, ip
   16afc:	bge	16bc4 <flatcc_json_printer_uint16_field@@Base+0xe4>
   16b00:	ldr	ip, [r1, #4]
   16b04:	ldrh	r2, [ip, r2]
   16b08:	cmp	r2, #0
   16b0c:	beq	16bc4 <flatcc_json_printer_uint16_field@@Base+0xe4>
   16b10:	ldr	ip, [r1]
   16b14:	cmn	ip, r2
   16b18:	beq	16bc4 <flatcc_json_printer_uint16_field@@Base+0xe4>
   16b1c:	ldrh	r5, [ip, r2]
   16b20:	cmp	lr, r5
   16b24:	beq	16bb4 <flatcc_json_printer_uint16_field@@Base+0xd4>
   16b28:	ldr	r2, [r1, #16]
   16b2c:	add	ip, r2, #1
   16b30:	str	ip, [r1, #16]
   16b34:	cmp	r2, #0
   16b38:	ldrne	r2, [r0, #20]
   16b3c:	addne	r1, r2, #1
   16b40:	strne	r1, [r0, #20]
   16b44:	movne	r1, #44	; 0x2c
   16b48:	strbne	r1, [r2]
   16b4c:	mov	r7, r3
   16b50:	mov	r4, r0
   16b54:	ldrb	r3, [r0, #25]
   16b58:	cmp	r3, #0
   16b5c:	bne	16bd8 <flatcc_json_printer_uint16_field@@Base+0xf8>
   16b60:	ldr	r2, [r0, #20]
   16b64:	ldr	r3, [r0, #16]
   16b68:	cmp	r2, r3
   16b6c:	bcs	16c38 <flatcc_json_printer_uint16_field@@Base+0x158>
   16b70:	ldr	r3, [r4, #20]
   16b74:	mov	r2, #34	; 0x22
   16b78:	strb	r2, [r3]
   16b7c:	ldrb	r3, [r4, #26]
   16b80:	ldr	r0, [r4, #20]
   16b84:	cmp	r3, #0
   16b88:	addeq	r0, r0, #1
   16b8c:	str	r0, [r4, #20]
   16b90:	add	r3, r0, r6
   16b94:	ldr	r2, [r4, #16]
   16b98:	cmp	r2, r3
   16b9c:	bhi	16c48 <flatcc_json_printer_uint16_field@@Base+0x168>
   16ba0:	mov	r2, r6
   16ba4:	mov	r1, r7
   16ba8:	mov	r0, r4
   16bac:	bl	14dbc <main@@Base+0x1334>
   16bb0:	b	16c60 <flatcc_json_printer_uint16_field@@Base+0x180>
   16bb4:	ldrb	r2, [r0, #28]
   16bb8:	cmp	r2, #0
   16bbc:	beq	16b28 <flatcc_json_printer_uint16_field@@Base+0x48>
   16bc0:	pop	{r4, r5, r6, r7, r8, pc}
   16bc4:	ldrb	r2, [r0, #29]
   16bc8:	cmp	r2, #0
   16bcc:	popeq	{r4, r5, r6, r7, r8, pc}
   16bd0:	mov	r5, lr
   16bd4:	b	16b28 <flatcc_json_printer_uint16_field@@Base+0x48>
   16bd8:	ldr	r3, [r0, #20]
   16bdc:	add	r2, r3, #1
   16be0:	str	r2, [r0, #20]
   16be4:	mov	r2, #10
   16be8:	strb	r2, [r3]
   16bec:	ldrb	r3, [r0, #25]
   16bf0:	ldr	r8, [r0, #32]
   16bf4:	mul	r8, r8, r3
   16bf8:	ldr	r0, [r0, #20]
   16bfc:	add	r3, r0, r8
   16c00:	ldr	r2, [r4, #16]
   16c04:	cmp	r2, r3
   16c08:	bcc	16c28 <flatcc_json_printer_uint16_field@@Base+0x148>
   16c0c:	mov	r2, r8
   16c10:	mov	r1, #32
   16c14:	bl	124e8 <memset@plt>
   16c18:	ldr	r3, [r4, #20]
   16c1c:	add	r8, r3, r8
   16c20:	str	r8, [r4, #20]
   16c24:	b	16b70 <flatcc_json_printer_uint16_field@@Base+0x90>
   16c28:	mov	r1, r8
   16c2c:	mov	r0, r4
   16c30:	bl	14ea4 <main@@Base+0x141c>
   16c34:	b	16b70 <flatcc_json_printer_uint16_field@@Base+0x90>
   16c38:	ldr	r3, [r0, #44]	; 0x2c
   16c3c:	mov	r1, #0
   16c40:	blx	r3
   16c44:	b	16b70 <flatcc_json_printer_uint16_field@@Base+0x90>
   16c48:	mov	r2, r6
   16c4c:	mov	r1, r7
   16c50:	bl	1244c <memcpy@plt>
   16c54:	ldr	r3, [r4, #20]
   16c58:	add	r6, r3, r6
   16c5c:	str	r6, [r4, #20]
   16c60:	ldr	r3, [r4, #20]
   16c64:	mov	r2, #34	; 0x22
   16c68:	strb	r2, [r3]
   16c6c:	ldrb	r3, [r4, #26]
   16c70:	clz	r3, r3
   16c74:	lsr	r3, r3, #5
   16c78:	ldr	r1, [r4, #20]
   16c7c:	add	r2, r1, r3
   16c80:	add	r2, r2, #1
   16c84:	str	r2, [r4, #20]
   16c88:	mov	r2, #58	; 0x3a
   16c8c:	strb	r2, [r1, r3]
   16c90:	ldr	r3, [r4, #20]
   16c94:	mov	r2, #32
   16c98:	strb	r2, [r3]
   16c9c:	ldrb	r3, [r4, #25]
   16ca0:	ldr	r1, [r4, #20]
   16ca4:	cmp	r3, #0
   16ca8:	addne	r1, r1, #1
   16cac:	str	r1, [r4, #20]
   16cb0:	mov	r0, r5
   16cb4:	bl	13be0 <main@@Base+0x158>
   16cb8:	ldr	r3, [r4, #20]
   16cbc:	add	r0, r3, r0
   16cc0:	str	r0, [r4, #20]
   16cc4:	pop	{r4, r5, r6, r7, r8, pc}

00016cc8 <flatcc_json_printer_uint32_field@@Base>:
   16cc8:	push	{r4, r5, r6, r7, r8, lr}
   16ccc:	ldr	r6, [sp, #24]
   16cd0:	add	r2, r2, #2
   16cd4:	lsl	r2, r2, #1
   16cd8:	ldr	ip, [r1, #8]
   16cdc:	cmp	r2, ip
   16ce0:	bge	16dac <flatcc_json_printer_uint32_field@@Base+0xe4>
   16ce4:	ldr	ip, [r1, #4]
   16ce8:	ldrh	r2, [ip, r2]
   16cec:	cmp	r2, #0
   16cf0:	beq	16dac <flatcc_json_printer_uint32_field@@Base+0xe4>
   16cf4:	ldr	ip, [r1]
   16cf8:	cmn	ip, r2
   16cfc:	beq	16dac <flatcc_json_printer_uint32_field@@Base+0xe4>
   16d00:	ldr	r5, [ip, r2]
   16d04:	ldr	r2, [sp, #28]
   16d08:	cmp	r2, r5
   16d0c:	beq	16d9c <flatcc_json_printer_uint32_field@@Base+0xd4>
   16d10:	ldr	r2, [r1, #16]
   16d14:	add	ip, r2, #1
   16d18:	str	ip, [r1, #16]
   16d1c:	cmp	r2, #0
   16d20:	ldrne	r2, [r0, #20]
   16d24:	addne	r1, r2, #1
   16d28:	strne	r1, [r0, #20]
   16d2c:	movne	r1, #44	; 0x2c
   16d30:	strbne	r1, [r2]
   16d34:	mov	r7, r3
   16d38:	mov	r4, r0
   16d3c:	ldrb	r3, [r0, #25]
   16d40:	cmp	r3, #0
   16d44:	bne	16dc0 <flatcc_json_printer_uint32_field@@Base+0xf8>
   16d48:	ldr	r2, [r0, #20]
   16d4c:	ldr	r3, [r0, #16]
   16d50:	cmp	r2, r3
   16d54:	bcs	16e20 <flatcc_json_printer_uint32_field@@Base+0x158>
   16d58:	ldr	r3, [r4, #20]
   16d5c:	mov	r2, #34	; 0x22
   16d60:	strb	r2, [r3]
   16d64:	ldrb	r3, [r4, #26]
   16d68:	ldr	r0, [r4, #20]
   16d6c:	cmp	r3, #0
   16d70:	addeq	r0, r0, #1
   16d74:	str	r0, [r4, #20]
   16d78:	add	r3, r0, r6
   16d7c:	ldr	r2, [r4, #16]
   16d80:	cmp	r2, r3
   16d84:	bhi	16e30 <flatcc_json_printer_uint32_field@@Base+0x168>
   16d88:	mov	r2, r6
   16d8c:	mov	r1, r7
   16d90:	mov	r0, r4
   16d94:	bl	14dbc <main@@Base+0x1334>
   16d98:	b	16e48 <flatcc_json_printer_uint32_field@@Base+0x180>
   16d9c:	ldrb	r2, [r0, #28]
   16da0:	cmp	r2, #0
   16da4:	beq	16d10 <flatcc_json_printer_uint32_field@@Base+0x48>
   16da8:	pop	{r4, r5, r6, r7, r8, pc}
   16dac:	ldrb	r2, [r0, #29]
   16db0:	cmp	r2, #0
   16db4:	popeq	{r4, r5, r6, r7, r8, pc}
   16db8:	ldr	r5, [sp, #28]
   16dbc:	b	16d10 <flatcc_json_printer_uint32_field@@Base+0x48>
   16dc0:	ldr	r3, [r0, #20]
   16dc4:	add	r2, r3, #1
   16dc8:	str	r2, [r0, #20]
   16dcc:	mov	r2, #10
   16dd0:	strb	r2, [r3]
   16dd4:	ldrb	r3, [r0, #25]
   16dd8:	ldr	r8, [r0, #32]
   16ddc:	mul	r8, r8, r3
   16de0:	ldr	r0, [r0, #20]
   16de4:	add	r3, r0, r8
   16de8:	ldr	r2, [r4, #16]
   16dec:	cmp	r2, r3
   16df0:	bcc	16e10 <flatcc_json_printer_uint32_field@@Base+0x148>
   16df4:	mov	r2, r8
   16df8:	mov	r1, #32
   16dfc:	bl	124e8 <memset@plt>
   16e00:	ldr	r3, [r4, #20]
   16e04:	add	r8, r3, r8
   16e08:	str	r8, [r4, #20]
   16e0c:	b	16d58 <flatcc_json_printer_uint32_field@@Base+0x90>
   16e10:	mov	r1, r8
   16e14:	mov	r0, r4
   16e18:	bl	14ea4 <main@@Base+0x141c>
   16e1c:	b	16d58 <flatcc_json_printer_uint32_field@@Base+0x90>
   16e20:	ldr	r3, [r0, #44]	; 0x2c
   16e24:	mov	r1, #0
   16e28:	blx	r3
   16e2c:	b	16d58 <flatcc_json_printer_uint32_field@@Base+0x90>
   16e30:	mov	r2, r6
   16e34:	mov	r1, r7
   16e38:	bl	1244c <memcpy@plt>
   16e3c:	ldr	r3, [r4, #20]
   16e40:	add	r6, r3, r6
   16e44:	str	r6, [r4, #20]
   16e48:	ldr	r3, [r4, #20]
   16e4c:	mov	r2, #34	; 0x22
   16e50:	strb	r2, [r3]
   16e54:	ldrb	r3, [r4, #26]
   16e58:	clz	r3, r3
   16e5c:	lsr	r3, r3, #5
   16e60:	ldr	r1, [r4, #20]
   16e64:	add	r2, r1, r3
   16e68:	add	r2, r2, #1
   16e6c:	str	r2, [r4, #20]
   16e70:	mov	r2, #58	; 0x3a
   16e74:	strb	r2, [r1, r3]
   16e78:	ldr	r3, [r4, #20]
   16e7c:	mov	r2, #32
   16e80:	strb	r2, [r3]
   16e84:	ldrb	r3, [r4, #25]
   16e88:	ldr	r1, [r4, #20]
   16e8c:	cmp	r3, #0
   16e90:	addne	r1, r1, #1
   16e94:	str	r1, [r4, #20]
   16e98:	mov	r0, r5
   16e9c:	bl	13d64 <main@@Base+0x2dc>
   16ea0:	ldr	r3, [r4, #20]
   16ea4:	add	r0, r3, r0
   16ea8:	str	r0, [r4, #20]
   16eac:	pop	{r4, r5, r6, r7, r8, pc}

00016eb0 <flatcc_json_printer_uint64_field@@Base>:
   16eb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16eb4:	ldr	r5, [sp, #32]
   16eb8:	add	r2, r2, #2
   16ebc:	lsl	r2, r2, #1
   16ec0:	ldr	ip, [r1, #8]
   16ec4:	cmp	r2, ip
   16ec8:	bge	16f98 <flatcc_json_printer_uint64_field@@Base+0xe8>
   16ecc:	ldr	ip, [r1, #4]
   16ed0:	ldrh	r2, [ip, r2]
   16ed4:	cmp	r2, #0
   16ed8:	beq	16f98 <flatcc_json_printer_uint64_field@@Base+0xe8>
   16edc:	ldr	ip, [r1]
   16ee0:	cmn	ip, r2
   16ee4:	beq	16f98 <flatcc_json_printer_uint64_field@@Base+0xe8>
   16ee8:	ldrd	r6, [ip, r2]
   16eec:	ldrd	r8, [sp, #40]	; 0x28
   16ef0:	cmp	r9, r7
   16ef4:	cmpeq	r8, r6
   16ef8:	beq	16f88 <flatcc_json_printer_uint64_field@@Base+0xd8>
   16efc:	ldr	r2, [r1, #16]
   16f00:	add	ip, r2, #1
   16f04:	str	ip, [r1, #16]
   16f08:	cmp	r2, #0
   16f0c:	ldrne	r2, [r0, #20]
   16f10:	addne	r1, r2, #1
   16f14:	strne	r1, [r0, #20]
   16f18:	movne	r1, #44	; 0x2c
   16f1c:	strbne	r1, [r2]
   16f20:	mov	r8, r3
   16f24:	mov	r4, r0
   16f28:	ldrb	r3, [r0, #25]
   16f2c:	cmp	r3, #0
   16f30:	bne	16fac <flatcc_json_printer_uint64_field@@Base+0xfc>
   16f34:	ldr	r2, [r0, #20]
   16f38:	ldr	r3, [r0, #16]
   16f3c:	cmp	r2, r3
   16f40:	bcs	1700c <flatcc_json_printer_uint64_field@@Base+0x15c>
   16f44:	ldr	r3, [r4, #20]
   16f48:	mov	r2, #34	; 0x22
   16f4c:	strb	r2, [r3]
   16f50:	ldrb	r3, [r4, #26]
   16f54:	ldr	r0, [r4, #20]
   16f58:	cmp	r3, #0
   16f5c:	addeq	r0, r0, #1
   16f60:	str	r0, [r4, #20]
   16f64:	add	r3, r0, r5
   16f68:	ldr	r2, [r4, #16]
   16f6c:	cmp	r2, r3
   16f70:	bhi	1701c <flatcc_json_printer_uint64_field@@Base+0x16c>
   16f74:	mov	r2, r5
   16f78:	mov	r1, r8
   16f7c:	mov	r0, r4
   16f80:	bl	14dbc <main@@Base+0x1334>
   16f84:	b	17034 <flatcc_json_printer_uint64_field@@Base+0x184>
   16f88:	ldrb	r2, [r0, #28]
   16f8c:	cmp	r2, #0
   16f90:	beq	16efc <flatcc_json_printer_uint64_field@@Base+0x4c>
   16f94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f98:	ldrb	r2, [r0, #29]
   16f9c:	cmp	r2, #0
   16fa0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16fa4:	ldrd	r6, [sp, #40]	; 0x28
   16fa8:	b	16efc <flatcc_json_printer_uint64_field@@Base+0x4c>
   16fac:	ldr	r3, [r0, #20]
   16fb0:	add	r2, r3, #1
   16fb4:	str	r2, [r0, #20]
   16fb8:	mov	r2, #10
   16fbc:	strb	r2, [r3]
   16fc0:	ldrb	r3, [r0, #25]
   16fc4:	ldr	r9, [r0, #32]
   16fc8:	mul	r9, r9, r3
   16fcc:	ldr	r0, [r0, #20]
   16fd0:	add	r3, r0, r9
   16fd4:	ldr	r2, [r4, #16]
   16fd8:	cmp	r2, r3
   16fdc:	bcc	16ffc <flatcc_json_printer_uint64_field@@Base+0x14c>
   16fe0:	mov	r2, r9
   16fe4:	mov	r1, #32
   16fe8:	bl	124e8 <memset@plt>
   16fec:	ldr	r3, [r4, #20]
   16ff0:	add	r9, r3, r9
   16ff4:	str	r9, [r4, #20]
   16ff8:	b	16f44 <flatcc_json_printer_uint64_field@@Base+0x94>
   16ffc:	mov	r1, r9
   17000:	mov	r0, r4
   17004:	bl	14ea4 <main@@Base+0x141c>
   17008:	b	16f44 <flatcc_json_printer_uint64_field@@Base+0x94>
   1700c:	ldr	r3, [r0, #44]	; 0x2c
   17010:	mov	r1, #0
   17014:	blx	r3
   17018:	b	16f44 <flatcc_json_printer_uint64_field@@Base+0x94>
   1701c:	mov	r2, r5
   17020:	mov	r1, r8
   17024:	bl	1244c <memcpy@plt>
   17028:	ldr	r3, [r4, #20]
   1702c:	add	r5, r3, r5
   17030:	str	r5, [r4, #20]
   17034:	ldr	r3, [r4, #20]
   17038:	mov	r2, #34	; 0x22
   1703c:	strb	r2, [r3]
   17040:	ldrb	r3, [r4, #26]
   17044:	clz	r3, r3
   17048:	lsr	r3, r3, #5
   1704c:	ldr	r1, [r4, #20]
   17050:	add	r2, r1, r3
   17054:	add	r2, r2, #1
   17058:	str	r2, [r4, #20]
   1705c:	mov	r2, #58	; 0x3a
   17060:	strb	r2, [r1, r3]
   17064:	ldr	r3, [r4, #20]
   17068:	mov	r2, #32
   1706c:	strb	r2, [r3]
   17070:	ldrb	r3, [r4, #25]
   17074:	ldr	r2, [r4, #20]
   17078:	cmp	r3, #0
   1707c:	addne	r2, r2, #1
   17080:	str	r2, [r4, #20]
   17084:	mov	r0, r6
   17088:	mov	r1, r7
   1708c:	bl	140a4 <main@@Base+0x61c>
   17090:	ldr	r3, [r4, #20]
   17094:	add	r0, r3, r0
   17098:	str	r0, [r4, #20]
   1709c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000170a0 <flatcc_json_printer_int8_field@@Base>:
   170a0:	push	{r4, r5, r6, r7, r8, lr}
   170a4:	ldr	r6, [sp, #24]
   170a8:	ldrsb	lr, [sp, #28]
   170ac:	add	r2, r2, #2
   170b0:	lsl	r2, r2, #1
   170b4:	ldr	ip, [r1, #8]
   170b8:	cmp	r2, ip
   170bc:	bge	17184 <flatcc_json_printer_int8_field@@Base+0xe4>
   170c0:	ldr	ip, [r1, #4]
   170c4:	ldrh	r2, [ip, r2]
   170c8:	cmp	r2, #0
   170cc:	beq	17184 <flatcc_json_printer_int8_field@@Base+0xe4>
   170d0:	ldr	ip, [r1]
   170d4:	cmn	ip, r2
   170d8:	beq	17184 <flatcc_json_printer_int8_field@@Base+0xe4>
   170dc:	ldrsb	r5, [ip, r2]
   170e0:	cmp	lr, r5
   170e4:	beq	17174 <flatcc_json_printer_int8_field@@Base+0xd4>
   170e8:	ldr	r2, [r1, #16]
   170ec:	add	ip, r2, #1
   170f0:	str	ip, [r1, #16]
   170f4:	cmp	r2, #0
   170f8:	ldrne	r2, [r0, #20]
   170fc:	addne	r1, r2, #1
   17100:	strne	r1, [r0, #20]
   17104:	movne	r1, #44	; 0x2c
   17108:	strbne	r1, [r2]
   1710c:	mov	r7, r3
   17110:	mov	r4, r0
   17114:	ldrb	r3, [r0, #25]
   17118:	cmp	r3, #0
   1711c:	bne	17198 <flatcc_json_printer_int8_field@@Base+0xf8>
   17120:	ldr	r2, [r0, #20]
   17124:	ldr	r3, [r0, #16]
   17128:	cmp	r2, r3
   1712c:	bcs	171f8 <flatcc_json_printer_int8_field@@Base+0x158>
   17130:	ldr	r3, [r4, #20]
   17134:	mov	r2, #34	; 0x22
   17138:	strb	r2, [r3]
   1713c:	ldrb	r3, [r4, #26]
   17140:	ldr	r0, [r4, #20]
   17144:	cmp	r3, #0
   17148:	addeq	r0, r0, #1
   1714c:	str	r0, [r4, #20]
   17150:	add	r3, r0, r6
   17154:	ldr	r2, [r4, #16]
   17158:	cmp	r2, r3
   1715c:	bhi	17208 <flatcc_json_printer_int8_field@@Base+0x168>
   17160:	mov	r2, r6
   17164:	mov	r1, r7
   17168:	mov	r0, r4
   1716c:	bl	14dbc <main@@Base+0x1334>
   17170:	b	17220 <flatcc_json_printer_int8_field@@Base+0x180>
   17174:	ldrb	r2, [r0, #28]
   17178:	cmp	r2, #0
   1717c:	beq	170e8 <flatcc_json_printer_int8_field@@Base+0x48>
   17180:	pop	{r4, r5, r6, r7, r8, pc}
   17184:	ldrb	r2, [r0, #29]
   17188:	cmp	r2, #0
   1718c:	popeq	{r4, r5, r6, r7, r8, pc}
   17190:	mov	r5, lr
   17194:	b	170e8 <flatcc_json_printer_int8_field@@Base+0x48>
   17198:	ldr	r3, [r0, #20]
   1719c:	add	r2, r3, #1
   171a0:	str	r2, [r0, #20]
   171a4:	mov	r2, #10
   171a8:	strb	r2, [r3]
   171ac:	ldrb	r3, [r0, #25]
   171b0:	ldr	r8, [r0, #32]
   171b4:	mul	r8, r8, r3
   171b8:	ldr	r0, [r0, #20]
   171bc:	add	r3, r0, r8
   171c0:	ldr	r2, [r4, #16]
   171c4:	cmp	r2, r3
   171c8:	bcc	171e8 <flatcc_json_printer_int8_field@@Base+0x148>
   171cc:	mov	r2, r8
   171d0:	mov	r1, #32
   171d4:	bl	124e8 <memset@plt>
   171d8:	ldr	r3, [r4, #20]
   171dc:	add	r8, r3, r8
   171e0:	str	r8, [r4, #20]
   171e4:	b	17130 <flatcc_json_printer_int8_field@@Base+0x90>
   171e8:	mov	r1, r8
   171ec:	mov	r0, r4
   171f0:	bl	14ea4 <main@@Base+0x141c>
   171f4:	b	17130 <flatcc_json_printer_int8_field@@Base+0x90>
   171f8:	ldr	r3, [r0, #44]	; 0x2c
   171fc:	mov	r1, #0
   17200:	blx	r3
   17204:	b	17130 <flatcc_json_printer_int8_field@@Base+0x90>
   17208:	mov	r2, r6
   1720c:	mov	r1, r7
   17210:	bl	1244c <memcpy@plt>
   17214:	ldr	r3, [r4, #20]
   17218:	add	r6, r3, r6
   1721c:	str	r6, [r4, #20]
   17220:	ldr	r3, [r4, #20]
   17224:	mov	r2, #34	; 0x22
   17228:	strb	r2, [r3]
   1722c:	ldrb	r3, [r4, #26]
   17230:	clz	r3, r3
   17234:	lsr	r3, r3, #5
   17238:	ldr	r1, [r4, #20]
   1723c:	add	r2, r1, r3
   17240:	add	r2, r2, #1
   17244:	str	r2, [r4, #20]
   17248:	mov	r2, #58	; 0x3a
   1724c:	strb	r2, [r1, r3]
   17250:	ldr	r3, [r4, #20]
   17254:	mov	r2, #32
   17258:	strb	r2, [r3]
   1725c:	ldrb	r3, [r4, #25]
   17260:	ldr	r1, [r4, #20]
   17264:	cmp	r3, #0
   17268:	addne	r1, r1, #1
   1726c:	str	r1, [r4, #20]
   17270:	mov	r0, r5
   17274:	bl	14728 <main@@Base+0xca0>
   17278:	ldr	r3, [r4, #20]
   1727c:	add	r0, r3, r0
   17280:	str	r0, [r4, #20]
   17284:	pop	{r4, r5, r6, r7, r8, pc}

00017288 <flatcc_json_printer_int16_field@@Base>:
   17288:	push	{r4, r5, r6, r7, r8, lr}
   1728c:	ldr	r6, [sp, #24]
   17290:	ldrsh	lr, [sp, #28]
   17294:	add	r2, r2, #2
   17298:	lsl	r2, r2, #1
   1729c:	ldr	ip, [r1, #8]
   172a0:	cmp	r2, ip
   172a4:	bge	1736c <flatcc_json_printer_int16_field@@Base+0xe4>
   172a8:	ldr	ip, [r1, #4]
   172ac:	ldrh	r2, [ip, r2]
   172b0:	cmp	r2, #0
   172b4:	beq	1736c <flatcc_json_printer_int16_field@@Base+0xe4>
   172b8:	ldr	ip, [r1]
   172bc:	cmn	ip, r2
   172c0:	beq	1736c <flatcc_json_printer_int16_field@@Base+0xe4>
   172c4:	ldrsh	r5, [ip, r2]
   172c8:	cmp	lr, r5
   172cc:	beq	1735c <flatcc_json_printer_int16_field@@Base+0xd4>
   172d0:	ldr	r2, [r1, #16]
   172d4:	add	ip, r2, #1
   172d8:	str	ip, [r1, #16]
   172dc:	cmp	r2, #0
   172e0:	ldrne	r2, [r0, #20]
   172e4:	addne	r1, r2, #1
   172e8:	strne	r1, [r0, #20]
   172ec:	movne	r1, #44	; 0x2c
   172f0:	strbne	r1, [r2]
   172f4:	mov	r7, r3
   172f8:	mov	r4, r0
   172fc:	ldrb	r3, [r0, #25]
   17300:	cmp	r3, #0
   17304:	bne	17380 <flatcc_json_printer_int16_field@@Base+0xf8>
   17308:	ldr	r2, [r0, #20]
   1730c:	ldr	r3, [r0, #16]
   17310:	cmp	r2, r3
   17314:	bcs	173e0 <flatcc_json_printer_int16_field@@Base+0x158>
   17318:	ldr	r3, [r4, #20]
   1731c:	mov	r2, #34	; 0x22
   17320:	strb	r2, [r3]
   17324:	ldrb	r3, [r4, #26]
   17328:	ldr	r0, [r4, #20]
   1732c:	cmp	r3, #0
   17330:	addeq	r0, r0, #1
   17334:	str	r0, [r4, #20]
   17338:	add	r3, r0, r6
   1733c:	ldr	r2, [r4, #16]
   17340:	cmp	r2, r3
   17344:	bhi	173f0 <flatcc_json_printer_int16_field@@Base+0x168>
   17348:	mov	r2, r6
   1734c:	mov	r1, r7
   17350:	mov	r0, r4
   17354:	bl	14dbc <main@@Base+0x1334>
   17358:	b	17408 <flatcc_json_printer_int16_field@@Base+0x180>
   1735c:	ldrb	r2, [r0, #28]
   17360:	cmp	r2, #0
   17364:	beq	172d0 <flatcc_json_printer_int16_field@@Base+0x48>
   17368:	pop	{r4, r5, r6, r7, r8, pc}
   1736c:	ldrb	r2, [r0, #29]
   17370:	cmp	r2, #0
   17374:	popeq	{r4, r5, r6, r7, r8, pc}
   17378:	mov	r5, lr
   1737c:	b	172d0 <flatcc_json_printer_int16_field@@Base+0x48>
   17380:	ldr	r3, [r0, #20]
   17384:	add	r2, r3, #1
   17388:	str	r2, [r0, #20]
   1738c:	mov	r2, #10
   17390:	strb	r2, [r3]
   17394:	ldrb	r3, [r0, #25]
   17398:	ldr	r8, [r0, #32]
   1739c:	mul	r8, r8, r3
   173a0:	ldr	r0, [r0, #20]
   173a4:	add	r3, r0, r8
   173a8:	ldr	r2, [r4, #16]
   173ac:	cmp	r2, r3
   173b0:	bcc	173d0 <flatcc_json_printer_int16_field@@Base+0x148>
   173b4:	mov	r2, r8
   173b8:	mov	r1, #32
   173bc:	bl	124e8 <memset@plt>
   173c0:	ldr	r3, [r4, #20]
   173c4:	add	r8, r3, r8
   173c8:	str	r8, [r4, #20]
   173cc:	b	17318 <flatcc_json_printer_int16_field@@Base+0x90>
   173d0:	mov	r1, r8
   173d4:	mov	r0, r4
   173d8:	bl	14ea4 <main@@Base+0x141c>
   173dc:	b	17318 <flatcc_json_printer_int16_field@@Base+0x90>
   173e0:	ldr	r3, [r0, #44]	; 0x2c
   173e4:	mov	r1, #0
   173e8:	blx	r3
   173ec:	b	17318 <flatcc_json_printer_int16_field@@Base+0x90>
   173f0:	mov	r2, r6
   173f4:	mov	r1, r7
   173f8:	bl	1244c <memcpy@plt>
   173fc:	ldr	r3, [r4, #20]
   17400:	add	r6, r3, r6
   17404:	str	r6, [r4, #20]
   17408:	ldr	r3, [r4, #20]
   1740c:	mov	r2, #34	; 0x22
   17410:	strb	r2, [r3]
   17414:	ldrb	r3, [r4, #26]
   17418:	clz	r3, r3
   1741c:	lsr	r3, r3, #5
   17420:	ldr	r1, [r4, #20]
   17424:	add	r2, r1, r3
   17428:	add	r2, r2, #1
   1742c:	str	r2, [r4, #20]
   17430:	mov	r2, #58	; 0x3a
   17434:	strb	r2, [r1, r3]
   17438:	ldr	r3, [r4, #20]
   1743c:	mov	r2, #32
   17440:	strb	r2, [r3]
   17444:	ldrb	r3, [r4, #25]
   17448:	ldr	r1, [r4, #20]
   1744c:	cmp	r3, #0
   17450:	addne	r1, r1, #1
   17454:	str	r1, [r4, #20]
   17458:	mov	r0, r5
   1745c:	bl	14758 <main@@Base+0xcd0>
   17460:	ldr	r3, [r4, #20]
   17464:	add	r0, r3, r0
   17468:	str	r0, [r4, #20]
   1746c:	pop	{r4, r5, r6, r7, r8, pc}

00017470 <flatcc_json_printer_int32_field@@Base>:
   17470:	push	{r4, r5, r6, r7, r8, lr}
   17474:	ldr	r6, [sp, #24]
   17478:	add	r2, r2, #2
   1747c:	lsl	r2, r2, #1
   17480:	ldr	ip, [r1, #8]
   17484:	cmp	r2, ip
   17488:	bge	17554 <flatcc_json_printer_int32_field@@Base+0xe4>
   1748c:	ldr	ip, [r1, #4]
   17490:	ldrh	r2, [ip, r2]
   17494:	cmp	r2, #0
   17498:	beq	17554 <flatcc_json_printer_int32_field@@Base+0xe4>
   1749c:	ldr	ip, [r1]
   174a0:	cmn	ip, r2
   174a4:	beq	17554 <flatcc_json_printer_int32_field@@Base+0xe4>
   174a8:	ldr	r5, [ip, r2]
   174ac:	ldr	r2, [sp, #28]
   174b0:	cmp	r2, r5
   174b4:	beq	17544 <flatcc_json_printer_int32_field@@Base+0xd4>
   174b8:	ldr	r2, [r1, #16]
   174bc:	add	ip, r2, #1
   174c0:	str	ip, [r1, #16]
   174c4:	cmp	r2, #0
   174c8:	ldrne	r2, [r0, #20]
   174cc:	addne	r1, r2, #1
   174d0:	strne	r1, [r0, #20]
   174d4:	movne	r1, #44	; 0x2c
   174d8:	strbne	r1, [r2]
   174dc:	mov	r7, r3
   174e0:	mov	r4, r0
   174e4:	ldrb	r3, [r0, #25]
   174e8:	cmp	r3, #0
   174ec:	bne	17568 <flatcc_json_printer_int32_field@@Base+0xf8>
   174f0:	ldr	r2, [r0, #20]
   174f4:	ldr	r3, [r0, #16]
   174f8:	cmp	r2, r3
   174fc:	bcs	175c8 <flatcc_json_printer_int32_field@@Base+0x158>
   17500:	ldr	r3, [r4, #20]
   17504:	mov	r2, #34	; 0x22
   17508:	strb	r2, [r3]
   1750c:	ldrb	r3, [r4, #26]
   17510:	ldr	r0, [r4, #20]
   17514:	cmp	r3, #0
   17518:	addeq	r0, r0, #1
   1751c:	str	r0, [r4, #20]
   17520:	add	r3, r0, r6
   17524:	ldr	r2, [r4, #16]
   17528:	cmp	r2, r3
   1752c:	bhi	175d8 <flatcc_json_printer_int32_field@@Base+0x168>
   17530:	mov	r2, r6
   17534:	mov	r1, r7
   17538:	mov	r0, r4
   1753c:	bl	14dbc <main@@Base+0x1334>
   17540:	b	175f0 <flatcc_json_printer_int32_field@@Base+0x180>
   17544:	ldrb	r2, [r0, #28]
   17548:	cmp	r2, #0
   1754c:	beq	174b8 <flatcc_json_printer_int32_field@@Base+0x48>
   17550:	pop	{r4, r5, r6, r7, r8, pc}
   17554:	ldrb	r2, [r0, #29]
   17558:	cmp	r2, #0
   1755c:	popeq	{r4, r5, r6, r7, r8, pc}
   17560:	ldr	r5, [sp, #28]
   17564:	b	174b8 <flatcc_json_printer_int32_field@@Base+0x48>
   17568:	ldr	r3, [r0, #20]
   1756c:	add	r2, r3, #1
   17570:	str	r2, [r0, #20]
   17574:	mov	r2, #10
   17578:	strb	r2, [r3]
   1757c:	ldrb	r3, [r0, #25]
   17580:	ldr	r8, [r0, #32]
   17584:	mul	r8, r8, r3
   17588:	ldr	r0, [r0, #20]
   1758c:	add	r3, r0, r8
   17590:	ldr	r2, [r4, #16]
   17594:	cmp	r2, r3
   17598:	bcc	175b8 <flatcc_json_printer_int32_field@@Base+0x148>
   1759c:	mov	r2, r8
   175a0:	mov	r1, #32
   175a4:	bl	124e8 <memset@plt>
   175a8:	ldr	r3, [r4, #20]
   175ac:	add	r8, r3, r8
   175b0:	str	r8, [r4, #20]
   175b4:	b	17500 <flatcc_json_printer_int32_field@@Base+0x90>
   175b8:	mov	r1, r8
   175bc:	mov	r0, r4
   175c0:	bl	14ea4 <main@@Base+0x141c>
   175c4:	b	17500 <flatcc_json_printer_int32_field@@Base+0x90>
   175c8:	ldr	r3, [r0, #44]	; 0x2c
   175cc:	mov	r1, #0
   175d0:	blx	r3
   175d4:	b	17500 <flatcc_json_printer_int32_field@@Base+0x90>
   175d8:	mov	r2, r6
   175dc:	mov	r1, r7
   175e0:	bl	1244c <memcpy@plt>
   175e4:	ldr	r3, [r4, #20]
   175e8:	add	r6, r3, r6
   175ec:	str	r6, [r4, #20]
   175f0:	ldr	r3, [r4, #20]
   175f4:	mov	r2, #34	; 0x22
   175f8:	strb	r2, [r3]
   175fc:	ldrb	r3, [r4, #26]
   17600:	clz	r3, r3
   17604:	lsr	r3, r3, #5
   17608:	ldr	r1, [r4, #20]
   1760c:	add	r2, r1, r3
   17610:	add	r2, r2, #1
   17614:	str	r2, [r4, #20]
   17618:	mov	r2, #58	; 0x3a
   1761c:	strb	r2, [r1, r3]
   17620:	ldr	r3, [r4, #20]
   17624:	mov	r2, #32
   17628:	strb	r2, [r3]
   1762c:	ldrb	r3, [r4, #25]
   17630:	ldr	r1, [r4, #20]
   17634:	cmp	r3, #0
   17638:	addne	r1, r1, #1
   1763c:	str	r1, [r4, #20]
   17640:	mov	r0, r5
   17644:	bl	14788 <main@@Base+0xd00>
   17648:	ldr	r3, [r4, #20]
   1764c:	add	r0, r3, r0
   17650:	str	r0, [r4, #20]
   17654:	pop	{r4, r5, r6, r7, r8, pc}

00017658 <flatcc_json_printer_int64_field@@Base>:
   17658:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1765c:	ldr	r5, [sp, #32]
   17660:	add	r2, r2, #2
   17664:	lsl	r2, r2, #1
   17668:	ldr	ip, [r1, #8]
   1766c:	cmp	r2, ip
   17670:	bge	17740 <flatcc_json_printer_int64_field@@Base+0xe8>
   17674:	ldr	ip, [r1, #4]
   17678:	ldrh	r2, [ip, r2]
   1767c:	cmp	r2, #0
   17680:	beq	17740 <flatcc_json_printer_int64_field@@Base+0xe8>
   17684:	ldr	ip, [r1]
   17688:	cmn	ip, r2
   1768c:	beq	17740 <flatcc_json_printer_int64_field@@Base+0xe8>
   17690:	ldrd	r6, [ip, r2]
   17694:	ldrd	r8, [sp, #40]	; 0x28
   17698:	cmp	r9, r7
   1769c:	cmpeq	r8, r6
   176a0:	beq	17730 <flatcc_json_printer_int64_field@@Base+0xd8>
   176a4:	ldr	r2, [r1, #16]
   176a8:	add	ip, r2, #1
   176ac:	str	ip, [r1, #16]
   176b0:	cmp	r2, #0
   176b4:	ldrne	r2, [r0, #20]
   176b8:	addne	r1, r2, #1
   176bc:	strne	r1, [r0, #20]
   176c0:	movne	r1, #44	; 0x2c
   176c4:	strbne	r1, [r2]
   176c8:	mov	r8, r3
   176cc:	mov	r4, r0
   176d0:	ldrb	r3, [r0, #25]
   176d4:	cmp	r3, #0
   176d8:	bne	17754 <flatcc_json_printer_int64_field@@Base+0xfc>
   176dc:	ldr	r2, [r0, #20]
   176e0:	ldr	r3, [r0, #16]
   176e4:	cmp	r2, r3
   176e8:	bcs	177b4 <flatcc_json_printer_int64_field@@Base+0x15c>
   176ec:	ldr	r3, [r4, #20]
   176f0:	mov	r2, #34	; 0x22
   176f4:	strb	r2, [r3]
   176f8:	ldrb	r3, [r4, #26]
   176fc:	ldr	r0, [r4, #20]
   17700:	cmp	r3, #0
   17704:	addeq	r0, r0, #1
   17708:	str	r0, [r4, #20]
   1770c:	add	r3, r0, r5
   17710:	ldr	r2, [r4, #16]
   17714:	cmp	r2, r3
   17718:	bhi	177c4 <flatcc_json_printer_int64_field@@Base+0x16c>
   1771c:	mov	r2, r5
   17720:	mov	r1, r8
   17724:	mov	r0, r4
   17728:	bl	14dbc <main@@Base+0x1334>
   1772c:	b	177dc <flatcc_json_printer_int64_field@@Base+0x184>
   17730:	ldrb	r2, [r0, #28]
   17734:	cmp	r2, #0
   17738:	beq	176a4 <flatcc_json_printer_int64_field@@Base+0x4c>
   1773c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17740:	ldrb	r2, [r0, #29]
   17744:	cmp	r2, #0
   17748:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1774c:	ldrd	r6, [sp, #40]	; 0x28
   17750:	b	176a4 <flatcc_json_printer_int64_field@@Base+0x4c>
   17754:	ldr	r3, [r0, #20]
   17758:	add	r2, r3, #1
   1775c:	str	r2, [r0, #20]
   17760:	mov	r2, #10
   17764:	strb	r2, [r3]
   17768:	ldrb	r3, [r0, #25]
   1776c:	ldr	r9, [r0, #32]
   17770:	mul	r9, r9, r3
   17774:	ldr	r0, [r0, #20]
   17778:	add	r3, r0, r9
   1777c:	ldr	r2, [r4, #16]
   17780:	cmp	r2, r3
   17784:	bcc	177a4 <flatcc_json_printer_int64_field@@Base+0x14c>
   17788:	mov	r2, r9
   1778c:	mov	r1, #32
   17790:	bl	124e8 <memset@plt>
   17794:	ldr	r3, [r4, #20]
   17798:	add	r9, r3, r9
   1779c:	str	r9, [r4, #20]
   177a0:	b	176ec <flatcc_json_printer_int64_field@@Base+0x94>
   177a4:	mov	r1, r9
   177a8:	mov	r0, r4
   177ac:	bl	14ea4 <main@@Base+0x141c>
   177b0:	b	176ec <flatcc_json_printer_int64_field@@Base+0x94>
   177b4:	ldr	r3, [r0, #44]	; 0x2c
   177b8:	mov	r1, #0
   177bc:	blx	r3
   177c0:	b	176ec <flatcc_json_printer_int64_field@@Base+0x94>
   177c4:	mov	r2, r5
   177c8:	mov	r1, r8
   177cc:	bl	1244c <memcpy@plt>
   177d0:	ldr	r3, [r4, #20]
   177d4:	add	r5, r3, r5
   177d8:	str	r5, [r4, #20]
   177dc:	ldr	r3, [r4, #20]
   177e0:	mov	r2, #34	; 0x22
   177e4:	strb	r2, [r3]
   177e8:	ldrb	r3, [r4, #26]
   177ec:	clz	r3, r3
   177f0:	lsr	r3, r3, #5
   177f4:	ldr	r1, [r4, #20]
   177f8:	add	r2, r1, r3
   177fc:	add	r2, r2, #1
   17800:	str	r2, [r4, #20]
   17804:	mov	r2, #58	; 0x3a
   17808:	strb	r2, [r1, r3]
   1780c:	ldr	r3, [r4, #20]
   17810:	mov	r2, #32
   17814:	strb	r2, [r3]
   17818:	ldrb	r3, [r4, #25]
   1781c:	ldr	r2, [r4, #20]
   17820:	cmp	r3, #0
   17824:	addne	r2, r2, #1
   17828:	str	r2, [r4, #20]
   1782c:	mov	r0, r6
   17830:	mov	r1, r7
   17834:	bl	147b0 <main@@Base+0xd28>
   17838:	ldr	r3, [r4, #20]
   1783c:	add	r0, r3, r0
   17840:	str	r0, [r4, #20]
   17844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00017848 <flatcc_json_printer_bool_field@@Base>:
   17848:	push	{r4, r5, r6, r7, r8, lr}
   1784c:	ldr	r6, [sp, #24]
   17850:	ldrb	lr, [sp, #28]
   17854:	add	r2, r2, #2
   17858:	lsl	r2, r2, #1
   1785c:	ldr	ip, [r1, #8]
   17860:	cmp	r2, ip
   17864:	bge	1792c <flatcc_json_printer_bool_field@@Base+0xe4>
   17868:	ldr	ip, [r1, #4]
   1786c:	ldrh	r2, [ip, r2]
   17870:	cmp	r2, #0
   17874:	beq	1792c <flatcc_json_printer_bool_field@@Base+0xe4>
   17878:	ldr	ip, [r1]
   1787c:	cmn	ip, r2
   17880:	beq	1792c <flatcc_json_printer_bool_field@@Base+0xe4>
   17884:	ldrb	r5, [ip, r2]
   17888:	cmp	lr, r5
   1788c:	beq	1791c <flatcc_json_printer_bool_field@@Base+0xd4>
   17890:	ldr	r2, [r1, #16]
   17894:	add	ip, r2, #1
   17898:	str	ip, [r1, #16]
   1789c:	cmp	r2, #0
   178a0:	ldrne	r2, [r0, #20]
   178a4:	addne	r1, r2, #1
   178a8:	strne	r1, [r0, #20]
   178ac:	movne	r1, #44	; 0x2c
   178b0:	strbne	r1, [r2]
   178b4:	mov	r7, r3
   178b8:	mov	r4, r0
   178bc:	ldrb	r3, [r0, #25]
   178c0:	cmp	r3, #0
   178c4:	bne	17940 <flatcc_json_printer_bool_field@@Base+0xf8>
   178c8:	ldr	r2, [r0, #20]
   178cc:	ldr	r3, [r0, #16]
   178d0:	cmp	r2, r3
   178d4:	bcs	179a0 <flatcc_json_printer_bool_field@@Base+0x158>
   178d8:	ldr	r3, [r4, #20]
   178dc:	mov	r2, #34	; 0x22
   178e0:	strb	r2, [r3]
   178e4:	ldrb	r3, [r4, #26]
   178e8:	ldr	r0, [r4, #20]
   178ec:	cmp	r3, #0
   178f0:	addeq	r0, r0, #1
   178f4:	str	r0, [r4, #20]
   178f8:	add	r3, r0, r6
   178fc:	ldr	r2, [r4, #16]
   17900:	cmp	r2, r3
   17904:	bhi	179b0 <flatcc_json_printer_bool_field@@Base+0x168>
   17908:	mov	r2, r6
   1790c:	mov	r1, r7
   17910:	mov	r0, r4
   17914:	bl	14dbc <main@@Base+0x1334>
   17918:	b	179c8 <flatcc_json_printer_bool_field@@Base+0x180>
   1791c:	ldrb	r2, [r0, #28]
   17920:	cmp	r2, #0
   17924:	beq	17890 <flatcc_json_printer_bool_field@@Base+0x48>
   17928:	pop	{r4, r5, r6, r7, r8, pc}
   1792c:	ldrb	r2, [r0, #29]
   17930:	cmp	r2, #0
   17934:	popeq	{r4, r5, r6, r7, r8, pc}
   17938:	mov	r5, lr
   1793c:	b	17890 <flatcc_json_printer_bool_field@@Base+0x48>
   17940:	ldr	r3, [r0, #20]
   17944:	add	r2, r3, #1
   17948:	str	r2, [r0, #20]
   1794c:	mov	r2, #10
   17950:	strb	r2, [r3]
   17954:	ldrb	r3, [r0, #25]
   17958:	ldr	r8, [r0, #32]
   1795c:	mul	r8, r8, r3
   17960:	ldr	r0, [r0, #20]
   17964:	add	r3, r0, r8
   17968:	ldr	r2, [r4, #16]
   1796c:	cmp	r2, r3
   17970:	bcc	17990 <flatcc_json_printer_bool_field@@Base+0x148>
   17974:	mov	r2, r8
   17978:	mov	r1, #32
   1797c:	bl	124e8 <memset@plt>
   17980:	ldr	r3, [r4, #20]
   17984:	add	r8, r3, r8
   17988:	str	r8, [r4, #20]
   1798c:	b	178d8 <flatcc_json_printer_bool_field@@Base+0x90>
   17990:	mov	r1, r8
   17994:	mov	r0, r4
   17998:	bl	14ea4 <main@@Base+0x141c>
   1799c:	b	178d8 <flatcc_json_printer_bool_field@@Base+0x90>
   179a0:	ldr	r3, [r0, #44]	; 0x2c
   179a4:	mov	r1, #0
   179a8:	blx	r3
   179ac:	b	178d8 <flatcc_json_printer_bool_field@@Base+0x90>
   179b0:	mov	r2, r6
   179b4:	mov	r1, r7
   179b8:	bl	1244c <memcpy@plt>
   179bc:	ldr	r3, [r4, #20]
   179c0:	add	r6, r3, r6
   179c4:	str	r6, [r4, #20]
   179c8:	ldr	r3, [r4, #20]
   179cc:	mov	r2, #34	; 0x22
   179d0:	strb	r2, [r3]
   179d4:	ldrb	r3, [r4, #26]
   179d8:	clz	r3, r3
   179dc:	lsr	r3, r3, #5
   179e0:	ldr	r1, [r4, #20]
   179e4:	add	r2, r1, r3
   179e8:	add	r2, r2, #1
   179ec:	str	r2, [r4, #20]
   179f0:	mov	r2, #58	; 0x3a
   179f4:	strb	r2, [r1, r3]
   179f8:	ldr	r3, [r4, #20]
   179fc:	mov	r2, #32
   17a00:	strb	r2, [r3]
   17a04:	ldrb	r3, [r4, #25]
   17a08:	ldr	r1, [r4, #20]
   17a0c:	cmp	r3, #0
   17a10:	addne	r1, r1, #1
   17a14:	str	r1, [r4, #20]
   17a18:	mov	r0, r5
   17a1c:	bl	14e6c <main@@Base+0x13e4>
   17a20:	ldr	r3, [r4, #20]
   17a24:	add	r0, r3, r0
   17a28:	str	r0, [r4, #20]
   17a2c:	pop	{r4, r5, r6, r7, r8, pc}

00017a30 <flatcc_json_printer_float_field@@Base>:
   17a30:	push	{r4, r5, r6, r7, r8, lr}
   17a34:	vpush	{d8}
   17a38:	ldr	r5, [sp, #32]
   17a3c:	add	r2, r2, #2
   17a40:	lsl	r2, r2, #1
   17a44:	ldr	ip, [r1, #8]
   17a48:	cmp	r2, ip
   17a4c:	bge	17b14 <flatcc_json_printer_float_field@@Base+0xe4>
   17a50:	ldr	ip, [r1, #4]
   17a54:	ldrh	ip, [ip, r2]
   17a58:	cmp	ip, #0
   17a5c:	beq	17b14 <flatcc_json_printer_float_field@@Base+0xe4>
   17a60:	ldr	r2, [r1]
   17a64:	adds	r2, r2, ip
   17a68:	beq	17b14 <flatcc_json_printer_float_field@@Base+0xe4>
   17a6c:	vldr	s16, [r2]
   17a70:	vcmp.f32	s0, s16
   17a74:	vmrs	APSR_nzcv, fpscr
   17a78:	bne	17a88 <flatcc_json_printer_float_field@@Base+0x58>
   17a7c:	ldrb	r2, [r0, #28]
   17a80:	cmp	r2, #0
   17a84:	bne	17c14 <flatcc_json_printer_float_field@@Base+0x1e4>
   17a88:	ldr	r2, [r1, #16]
   17a8c:	add	ip, r2, #1
   17a90:	str	ip, [r1, #16]
   17a94:	cmp	r2, #0
   17a98:	ldrne	r2, [r0, #20]
   17a9c:	addne	r1, r2, #1
   17aa0:	strne	r1, [r0, #20]
   17aa4:	movne	r1, #44	; 0x2c
   17aa8:	strbne	r1, [r2]
   17aac:	mov	r6, r3
   17ab0:	mov	r4, r0
   17ab4:	ldrb	r3, [r0, #25]
   17ab8:	cmp	r3, #0
   17abc:	bne	17b28 <flatcc_json_printer_float_field@@Base+0xf8>
   17ac0:	ldr	r2, [r0, #20]
   17ac4:	ldr	r3, [r0, #16]
   17ac8:	cmp	r2, r3
   17acc:	bcs	17b88 <flatcc_json_printer_float_field@@Base+0x158>
   17ad0:	ldr	r3, [r4, #20]
   17ad4:	mov	r2, #34	; 0x22
   17ad8:	strb	r2, [r3]
   17adc:	ldrb	r3, [r4, #26]
   17ae0:	ldr	r0, [r4, #20]
   17ae4:	cmp	r3, #0
   17ae8:	addeq	r0, r0, #1
   17aec:	str	r0, [r4, #20]
   17af0:	add	r3, r0, r5
   17af4:	ldr	r2, [r4, #16]
   17af8:	cmp	r2, r3
   17afc:	bhi	17b98 <flatcc_json_printer_float_field@@Base+0x168>
   17b00:	mov	r2, r5
   17b04:	mov	r1, r6
   17b08:	mov	r0, r4
   17b0c:	bl	14dbc <main@@Base+0x1334>
   17b10:	b	17bb0 <flatcc_json_printer_float_field@@Base+0x180>
   17b14:	ldrb	r2, [r0, #29]
   17b18:	cmp	r2, #0
   17b1c:	beq	17c14 <flatcc_json_printer_float_field@@Base+0x1e4>
   17b20:	vmov.f32	s16, s0
   17b24:	b	17a88 <flatcc_json_printer_float_field@@Base+0x58>
   17b28:	ldr	r3, [r0, #20]
   17b2c:	add	r2, r3, #1
   17b30:	str	r2, [r0, #20]
   17b34:	mov	r2, #10
   17b38:	strb	r2, [r3]
   17b3c:	ldrb	r3, [r0, #25]
   17b40:	ldr	r7, [r0, #32]
   17b44:	mul	r7, r7, r3
   17b48:	ldr	r0, [r0, #20]
   17b4c:	add	r3, r0, r7
   17b50:	ldr	r2, [r4, #16]
   17b54:	cmp	r2, r3
   17b58:	bcc	17b78 <flatcc_json_printer_float_field@@Base+0x148>
   17b5c:	mov	r2, r7
   17b60:	mov	r1, #32
   17b64:	bl	124e8 <memset@plt>
   17b68:	ldr	r3, [r4, #20]
   17b6c:	add	r7, r3, r7
   17b70:	str	r7, [r4, #20]
   17b74:	b	17ad0 <flatcc_json_printer_float_field@@Base+0xa0>
   17b78:	mov	r1, r7
   17b7c:	mov	r0, r4
   17b80:	bl	14ea4 <main@@Base+0x141c>
   17b84:	b	17ad0 <flatcc_json_printer_float_field@@Base+0xa0>
   17b88:	ldr	r3, [r0, #44]	; 0x2c
   17b8c:	mov	r1, #0
   17b90:	blx	r3
   17b94:	b	17ad0 <flatcc_json_printer_float_field@@Base+0xa0>
   17b98:	mov	r2, r5
   17b9c:	mov	r1, r6
   17ba0:	bl	1244c <memcpy@plt>
   17ba4:	ldr	r3, [r4, #20]
   17ba8:	add	r5, r3, r5
   17bac:	str	r5, [r4, #20]
   17bb0:	ldr	r3, [r4, #20]
   17bb4:	mov	r2, #34	; 0x22
   17bb8:	strb	r2, [r3]
   17bbc:	ldrb	r3, [r4, #26]
   17bc0:	clz	r3, r3
   17bc4:	lsr	r3, r3, #5
   17bc8:	ldr	r1, [r4, #20]
   17bcc:	add	r2, r1, r3
   17bd0:	add	r2, r2, #1
   17bd4:	str	r2, [r4, #20]
   17bd8:	mov	r2, #58	; 0x3a
   17bdc:	strb	r2, [r1, r3]
   17be0:	ldr	r3, [r4, #20]
   17be4:	mov	r2, #32
   17be8:	strb	r2, [r3]
   17bec:	ldrb	r3, [r4, #25]
   17bf0:	ldr	r0, [r4, #20]
   17bf4:	cmp	r3, #0
   17bf8:	addne	r0, r0, #1
   17bfc:	str	r0, [r4, #20]
   17c00:	vcvt.f64.f32	d0, s16
   17c04:	bl	15554 <main@@Base+0x1acc>
   17c08:	ldr	r3, [r4, #20]
   17c0c:	add	r0, r3, r0
   17c10:	str	r0, [r4, #20]
   17c14:	vpop	{d8}
   17c18:	pop	{r4, r5, r6, r7, r8, pc}

00017c1c <flatcc_json_printer_double_field@@Base>:
   17c1c:	push	{r4, r5, r6, r7, r8, lr}
   17c20:	vpush	{d8}
   17c24:	ldr	r5, [sp, #32]
   17c28:	add	r2, r2, #2
   17c2c:	lsl	r2, r2, #1
   17c30:	ldr	ip, [r1, #8]
   17c34:	cmp	r2, ip
   17c38:	bge	17d00 <flatcc_json_printer_double_field@@Base+0xe4>
   17c3c:	ldr	ip, [r1, #4]
   17c40:	ldrh	ip, [ip, r2]
   17c44:	cmp	ip, #0
   17c48:	beq	17d00 <flatcc_json_printer_double_field@@Base+0xe4>
   17c4c:	ldr	r2, [r1]
   17c50:	adds	r2, r2, ip
   17c54:	beq	17d00 <flatcc_json_printer_double_field@@Base+0xe4>
   17c58:	vldr	d8, [r2]
   17c5c:	vcmp.f64	d0, d8
   17c60:	vmrs	APSR_nzcv, fpscr
   17c64:	bne	17c74 <flatcc_json_printer_double_field@@Base+0x58>
   17c68:	ldrb	r2, [r0, #28]
   17c6c:	cmp	r2, #0
   17c70:	bne	17e00 <flatcc_json_printer_double_field@@Base+0x1e4>
   17c74:	ldr	r2, [r1, #16]
   17c78:	add	ip, r2, #1
   17c7c:	str	ip, [r1, #16]
   17c80:	cmp	r2, #0
   17c84:	ldrne	r2, [r0, #20]
   17c88:	addne	r1, r2, #1
   17c8c:	strne	r1, [r0, #20]
   17c90:	movne	r1, #44	; 0x2c
   17c94:	strbne	r1, [r2]
   17c98:	mov	r6, r3
   17c9c:	mov	r4, r0
   17ca0:	ldrb	r3, [r0, #25]
   17ca4:	cmp	r3, #0
   17ca8:	bne	17d14 <flatcc_json_printer_double_field@@Base+0xf8>
   17cac:	ldr	r2, [r0, #20]
   17cb0:	ldr	r3, [r0, #16]
   17cb4:	cmp	r2, r3
   17cb8:	bcs	17d74 <flatcc_json_printer_double_field@@Base+0x158>
   17cbc:	ldr	r3, [r4, #20]
   17cc0:	mov	r2, #34	; 0x22
   17cc4:	strb	r2, [r3]
   17cc8:	ldrb	r3, [r4, #26]
   17ccc:	ldr	r0, [r4, #20]
   17cd0:	cmp	r3, #0
   17cd4:	addeq	r0, r0, #1
   17cd8:	str	r0, [r4, #20]
   17cdc:	add	r3, r0, r5
   17ce0:	ldr	r2, [r4, #16]
   17ce4:	cmp	r2, r3
   17ce8:	bhi	17d84 <flatcc_json_printer_double_field@@Base+0x168>
   17cec:	mov	r2, r5
   17cf0:	mov	r1, r6
   17cf4:	mov	r0, r4
   17cf8:	bl	14dbc <main@@Base+0x1334>
   17cfc:	b	17d9c <flatcc_json_printer_double_field@@Base+0x180>
   17d00:	ldrb	r2, [r0, #29]
   17d04:	cmp	r2, #0
   17d08:	beq	17e00 <flatcc_json_printer_double_field@@Base+0x1e4>
   17d0c:	vmov.f64	d8, d0
   17d10:	b	17c74 <flatcc_json_printer_double_field@@Base+0x58>
   17d14:	ldr	r3, [r0, #20]
   17d18:	add	r2, r3, #1
   17d1c:	str	r2, [r0, #20]
   17d20:	mov	r2, #10
   17d24:	strb	r2, [r3]
   17d28:	ldrb	r3, [r0, #25]
   17d2c:	ldr	r7, [r0, #32]
   17d30:	mul	r7, r7, r3
   17d34:	ldr	r0, [r0, #20]
   17d38:	add	r3, r0, r7
   17d3c:	ldr	r2, [r4, #16]
   17d40:	cmp	r2, r3
   17d44:	bcc	17d64 <flatcc_json_printer_double_field@@Base+0x148>
   17d48:	mov	r2, r7
   17d4c:	mov	r1, #32
   17d50:	bl	124e8 <memset@plt>
   17d54:	ldr	r3, [r4, #20]
   17d58:	add	r7, r3, r7
   17d5c:	str	r7, [r4, #20]
   17d60:	b	17cbc <flatcc_json_printer_double_field@@Base+0xa0>
   17d64:	mov	r1, r7
   17d68:	mov	r0, r4
   17d6c:	bl	14ea4 <main@@Base+0x141c>
   17d70:	b	17cbc <flatcc_json_printer_double_field@@Base+0xa0>
   17d74:	ldr	r3, [r0, #44]	; 0x2c
   17d78:	mov	r1, #0
   17d7c:	blx	r3
   17d80:	b	17cbc <flatcc_json_printer_double_field@@Base+0xa0>
   17d84:	mov	r2, r5
   17d88:	mov	r1, r6
   17d8c:	bl	1244c <memcpy@plt>
   17d90:	ldr	r3, [r4, #20]
   17d94:	add	r5, r3, r5
   17d98:	str	r5, [r4, #20]
   17d9c:	ldr	r3, [r4, #20]
   17da0:	mov	r2, #34	; 0x22
   17da4:	strb	r2, [r3]
   17da8:	ldrb	r3, [r4, #26]
   17dac:	clz	r3, r3
   17db0:	lsr	r3, r3, #5
   17db4:	ldr	r1, [r4, #20]
   17db8:	add	r2, r1, r3
   17dbc:	add	r2, r2, #1
   17dc0:	str	r2, [r4, #20]
   17dc4:	mov	r2, #58	; 0x3a
   17dc8:	strb	r2, [r1, r3]
   17dcc:	ldr	r3, [r4, #20]
   17dd0:	mov	r2, #32
   17dd4:	strb	r2, [r3]
   17dd8:	ldrb	r3, [r4, #25]
   17ddc:	ldr	r0, [r4, #20]
   17de0:	cmp	r3, #0
   17de4:	addne	r0, r0, #1
   17de8:	str	r0, [r4, #20]
   17dec:	vmov.f64	d0, d8
   17df0:	bl	15554 <main@@Base+0x1acc>
   17df4:	ldr	r3, [r4, #20]
   17df8:	add	r0, r3, r0
   17dfc:	str	r0, [r4, #20]
   17e00:	vpop	{d8}
   17e04:	pop	{r4, r5, r6, r7, r8, pc}

00017e08 <flatcc_json_printer_uint8_enum_field@@Base>:
   17e08:	push	{r4, r5, r6, r7, r8, lr}
   17e0c:	ldr	r6, [sp, #24]
   17e10:	ldrb	lr, [sp, #28]
   17e14:	add	r2, r2, #2
   17e18:	lsl	r2, r2, #1
   17e1c:	ldr	ip, [r1, #8]
   17e20:	cmp	r2, ip
   17e24:	bge	17eec <flatcc_json_printer_uint8_enum_field@@Base+0xe4>
   17e28:	ldr	ip, [r1, #4]
   17e2c:	ldrh	r2, [ip, r2]
   17e30:	cmp	r2, #0
   17e34:	beq	17eec <flatcc_json_printer_uint8_enum_field@@Base+0xe4>
   17e38:	ldr	ip, [r1]
   17e3c:	cmn	ip, r2
   17e40:	beq	17eec <flatcc_json_printer_uint8_enum_field@@Base+0xe4>
   17e44:	ldrb	r5, [ip, r2]
   17e48:	cmp	lr, r5
   17e4c:	beq	17edc <flatcc_json_printer_uint8_enum_field@@Base+0xd4>
   17e50:	ldr	r2, [r1, #16]
   17e54:	add	ip, r2, #1
   17e58:	str	ip, [r1, #16]
   17e5c:	cmp	r2, #0
   17e60:	ldrne	r2, [r0, #20]
   17e64:	addne	r1, r2, #1
   17e68:	strne	r1, [r0, #20]
   17e6c:	movne	r1, #44	; 0x2c
   17e70:	strbne	r1, [r2]
   17e74:	mov	r7, r3
   17e78:	mov	r4, r0
   17e7c:	ldrb	r3, [r0, #25]
   17e80:	cmp	r3, #0
   17e84:	bne	17f00 <flatcc_json_printer_uint8_enum_field@@Base+0xf8>
   17e88:	ldr	r2, [r0, #20]
   17e8c:	ldr	r3, [r0, #16]
   17e90:	cmp	r2, r3
   17e94:	bcs	17f60 <flatcc_json_printer_uint8_enum_field@@Base+0x158>
   17e98:	ldr	r3, [r4, #20]
   17e9c:	mov	r2, #34	; 0x22
   17ea0:	strb	r2, [r3]
   17ea4:	ldrb	r3, [r4, #26]
   17ea8:	ldr	r0, [r4, #20]
   17eac:	cmp	r3, #0
   17eb0:	addeq	r0, r0, #1
   17eb4:	str	r0, [r4, #20]
   17eb8:	add	r3, r0, r6
   17ebc:	ldr	r2, [r4, #16]
   17ec0:	cmp	r2, r3
   17ec4:	bhi	17f70 <flatcc_json_printer_uint8_enum_field@@Base+0x168>
   17ec8:	mov	r2, r6
   17ecc:	mov	r1, r7
   17ed0:	mov	r0, r4
   17ed4:	bl	14dbc <main@@Base+0x1334>
   17ed8:	b	17f88 <flatcc_json_printer_uint8_enum_field@@Base+0x180>
   17edc:	ldrb	r2, [r0, #28]
   17ee0:	cmp	r2, #0
   17ee4:	beq	17e50 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   17ee8:	pop	{r4, r5, r6, r7, r8, pc}
   17eec:	ldrb	r2, [r0, #29]
   17ef0:	cmp	r2, #0
   17ef4:	popeq	{r4, r5, r6, r7, r8, pc}
   17ef8:	mov	r5, lr
   17efc:	b	17e50 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   17f00:	ldr	r3, [r0, #20]
   17f04:	add	r2, r3, #1
   17f08:	str	r2, [r0, #20]
   17f0c:	mov	r2, #10
   17f10:	strb	r2, [r3]
   17f14:	ldrb	r3, [r0, #25]
   17f18:	ldr	r8, [r0, #32]
   17f1c:	mul	r8, r8, r3
   17f20:	ldr	r0, [r0, #20]
   17f24:	add	r3, r0, r8
   17f28:	ldr	r2, [r4, #16]
   17f2c:	cmp	r2, r3
   17f30:	bcc	17f50 <flatcc_json_printer_uint8_enum_field@@Base+0x148>
   17f34:	mov	r2, r8
   17f38:	mov	r1, #32
   17f3c:	bl	124e8 <memset@plt>
   17f40:	ldr	r3, [r4, #20]
   17f44:	add	r8, r3, r8
   17f48:	str	r8, [r4, #20]
   17f4c:	b	17e98 <flatcc_json_printer_uint8_enum_field@@Base+0x90>
   17f50:	mov	r1, r8
   17f54:	mov	r0, r4
   17f58:	bl	14ea4 <main@@Base+0x141c>
   17f5c:	b	17e98 <flatcc_json_printer_uint8_enum_field@@Base+0x90>
   17f60:	ldr	r3, [r0, #44]	; 0x2c
   17f64:	mov	r1, #0
   17f68:	blx	r3
   17f6c:	b	17e98 <flatcc_json_printer_uint8_enum_field@@Base+0x90>
   17f70:	mov	r2, r6
   17f74:	mov	r1, r7
   17f78:	bl	1244c <memcpy@plt>
   17f7c:	ldr	r3, [r4, #20]
   17f80:	add	r6, r3, r6
   17f84:	str	r6, [r4, #20]
   17f88:	ldr	r3, [r4, #20]
   17f8c:	mov	r2, #34	; 0x22
   17f90:	strb	r2, [r3]
   17f94:	ldrb	r3, [r4, #26]
   17f98:	clz	r3, r3
   17f9c:	lsr	r3, r3, #5
   17fa0:	ldr	r1, [r4, #20]
   17fa4:	add	r2, r1, r3
   17fa8:	add	r2, r2, #1
   17fac:	str	r2, [r4, #20]
   17fb0:	mov	r2, #58	; 0x3a
   17fb4:	strb	r2, [r1, r3]
   17fb8:	ldr	r3, [r4, #20]
   17fbc:	mov	r2, #32
   17fc0:	strb	r2, [r3]
   17fc4:	ldrb	r3, [r4, #25]
   17fc8:	ldr	r1, [r4, #20]
   17fcc:	cmp	r3, #0
   17fd0:	addne	r1, r1, #1
   17fd4:	str	r1, [r4, #20]
   17fd8:	ldrb	r3, [r4, #27]
   17fdc:	cmp	r3, #0
   17fe0:	bne	17ff8 <flatcc_json_printer_uint8_enum_field@@Base+0x1f0>
   17fe4:	mov	r1, r5
   17fe8:	mov	r0, r4
   17fec:	ldr	r3, [sp, #32]
   17ff0:	blx	r3
   17ff4:	pop	{r4, r5, r6, r7, r8, pc}
   17ff8:	mov	r0, r5
   17ffc:	bl	13b20 <main@@Base+0x98>
   18000:	ldr	r3, [r4, #20]
   18004:	add	r0, r3, r0
   18008:	str	r0, [r4, #20]
   1800c:	pop	{r4, r5, r6, r7, r8, pc}

00018010 <flatcc_json_printer_uint16_enum_field@@Base>:
   18010:	push	{r4, r5, r6, r7, r8, lr}
   18014:	ldr	r6, [sp, #24]
   18018:	ldrh	lr, [sp, #28]
   1801c:	add	r2, r2, #2
   18020:	lsl	r2, r2, #1
   18024:	ldr	ip, [r1, #8]
   18028:	cmp	r2, ip
   1802c:	bge	180f4 <flatcc_json_printer_uint16_enum_field@@Base+0xe4>
   18030:	ldr	ip, [r1, #4]
   18034:	ldrh	r2, [ip, r2]
   18038:	cmp	r2, #0
   1803c:	beq	180f4 <flatcc_json_printer_uint16_enum_field@@Base+0xe4>
   18040:	ldr	ip, [r1]
   18044:	cmn	ip, r2
   18048:	beq	180f4 <flatcc_json_printer_uint16_enum_field@@Base+0xe4>
   1804c:	ldrh	r5, [ip, r2]
   18050:	cmp	lr, r5
   18054:	beq	180e4 <flatcc_json_printer_uint16_enum_field@@Base+0xd4>
   18058:	ldr	r2, [r1, #16]
   1805c:	add	ip, r2, #1
   18060:	str	ip, [r1, #16]
   18064:	cmp	r2, #0
   18068:	ldrne	r2, [r0, #20]
   1806c:	addne	r1, r2, #1
   18070:	strne	r1, [r0, #20]
   18074:	movne	r1, #44	; 0x2c
   18078:	strbne	r1, [r2]
   1807c:	mov	r7, r3
   18080:	mov	r4, r0
   18084:	ldrb	r3, [r0, #25]
   18088:	cmp	r3, #0
   1808c:	bne	18108 <flatcc_json_printer_uint16_enum_field@@Base+0xf8>
   18090:	ldr	r2, [r0, #20]
   18094:	ldr	r3, [r0, #16]
   18098:	cmp	r2, r3
   1809c:	bcs	18168 <flatcc_json_printer_uint16_enum_field@@Base+0x158>
   180a0:	ldr	r3, [r4, #20]
   180a4:	mov	r2, #34	; 0x22
   180a8:	strb	r2, [r3]
   180ac:	ldrb	r3, [r4, #26]
   180b0:	ldr	r0, [r4, #20]
   180b4:	cmp	r3, #0
   180b8:	addeq	r0, r0, #1
   180bc:	str	r0, [r4, #20]
   180c0:	add	r3, r0, r6
   180c4:	ldr	r2, [r4, #16]
   180c8:	cmp	r2, r3
   180cc:	bhi	18178 <flatcc_json_printer_uint16_enum_field@@Base+0x168>
   180d0:	mov	r2, r6
   180d4:	mov	r1, r7
   180d8:	mov	r0, r4
   180dc:	bl	14dbc <main@@Base+0x1334>
   180e0:	b	18190 <flatcc_json_printer_uint16_enum_field@@Base+0x180>
   180e4:	ldrb	r2, [r0, #28]
   180e8:	cmp	r2, #0
   180ec:	beq	18058 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   180f0:	pop	{r4, r5, r6, r7, r8, pc}
   180f4:	ldrb	r2, [r0, #29]
   180f8:	cmp	r2, #0
   180fc:	popeq	{r4, r5, r6, r7, r8, pc}
   18100:	mov	r5, lr
   18104:	b	18058 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   18108:	ldr	r3, [r0, #20]
   1810c:	add	r2, r3, #1
   18110:	str	r2, [r0, #20]
   18114:	mov	r2, #10
   18118:	strb	r2, [r3]
   1811c:	ldrb	r3, [r0, #25]
   18120:	ldr	r8, [r0, #32]
   18124:	mul	r8, r8, r3
   18128:	ldr	r0, [r0, #20]
   1812c:	add	r3, r0, r8
   18130:	ldr	r2, [r4, #16]
   18134:	cmp	r2, r3
   18138:	bcc	18158 <flatcc_json_printer_uint16_enum_field@@Base+0x148>
   1813c:	mov	r2, r8
   18140:	mov	r1, #32
   18144:	bl	124e8 <memset@plt>
   18148:	ldr	r3, [r4, #20]
   1814c:	add	r8, r3, r8
   18150:	str	r8, [r4, #20]
   18154:	b	180a0 <flatcc_json_printer_uint16_enum_field@@Base+0x90>
   18158:	mov	r1, r8
   1815c:	mov	r0, r4
   18160:	bl	14ea4 <main@@Base+0x141c>
   18164:	b	180a0 <flatcc_json_printer_uint16_enum_field@@Base+0x90>
   18168:	ldr	r3, [r0, #44]	; 0x2c
   1816c:	mov	r1, #0
   18170:	blx	r3
   18174:	b	180a0 <flatcc_json_printer_uint16_enum_field@@Base+0x90>
   18178:	mov	r2, r6
   1817c:	mov	r1, r7
   18180:	bl	1244c <memcpy@plt>
   18184:	ldr	r3, [r4, #20]
   18188:	add	r6, r3, r6
   1818c:	str	r6, [r4, #20]
   18190:	ldr	r3, [r4, #20]
   18194:	mov	r2, #34	; 0x22
   18198:	strb	r2, [r3]
   1819c:	ldrb	r3, [r4, #26]
   181a0:	clz	r3, r3
   181a4:	lsr	r3, r3, #5
   181a8:	ldr	r1, [r4, #20]
   181ac:	add	r2, r1, r3
   181b0:	add	r2, r2, #1
   181b4:	str	r2, [r4, #20]
   181b8:	mov	r2, #58	; 0x3a
   181bc:	strb	r2, [r1, r3]
   181c0:	ldr	r3, [r4, #20]
   181c4:	mov	r2, #32
   181c8:	strb	r2, [r3]
   181cc:	ldrb	r3, [r4, #25]
   181d0:	ldr	r1, [r4, #20]
   181d4:	cmp	r3, #0
   181d8:	addne	r1, r1, #1
   181dc:	str	r1, [r4, #20]
   181e0:	ldrb	r3, [r4, #27]
   181e4:	cmp	r3, #0
   181e8:	bne	18200 <flatcc_json_printer_uint16_enum_field@@Base+0x1f0>
   181ec:	mov	r1, r5
   181f0:	mov	r0, r4
   181f4:	ldr	r3, [sp, #32]
   181f8:	blx	r3
   181fc:	pop	{r4, r5, r6, r7, r8, pc}
   18200:	mov	r0, r5
   18204:	bl	13be0 <main@@Base+0x158>
   18208:	ldr	r3, [r4, #20]
   1820c:	add	r0, r3, r0
   18210:	str	r0, [r4, #20]
   18214:	pop	{r4, r5, r6, r7, r8, pc}

00018218 <flatcc_json_printer_uint32_enum_field@@Base>:
   18218:	push	{r4, r5, r6, r7, r8, lr}
   1821c:	ldr	r6, [sp, #24]
   18220:	add	r2, r2, #2
   18224:	lsl	r2, r2, #1
   18228:	ldr	ip, [r1, #8]
   1822c:	cmp	r2, ip
   18230:	bge	182fc <flatcc_json_printer_uint32_enum_field@@Base+0xe4>
   18234:	ldr	ip, [r1, #4]
   18238:	ldrh	r2, [ip, r2]
   1823c:	cmp	r2, #0
   18240:	beq	182fc <flatcc_json_printer_uint32_enum_field@@Base+0xe4>
   18244:	ldr	ip, [r1]
   18248:	cmn	ip, r2
   1824c:	beq	182fc <flatcc_json_printer_uint32_enum_field@@Base+0xe4>
   18250:	ldr	r5, [ip, r2]
   18254:	ldr	r2, [sp, #28]
   18258:	cmp	r2, r5
   1825c:	beq	182ec <flatcc_json_printer_uint32_enum_field@@Base+0xd4>
   18260:	ldr	r2, [r1, #16]
   18264:	add	ip, r2, #1
   18268:	str	ip, [r1, #16]
   1826c:	cmp	r2, #0
   18270:	ldrne	r2, [r0, #20]
   18274:	addne	r1, r2, #1
   18278:	strne	r1, [r0, #20]
   1827c:	movne	r1, #44	; 0x2c
   18280:	strbne	r1, [r2]
   18284:	mov	r7, r3
   18288:	mov	r4, r0
   1828c:	ldrb	r3, [r0, #25]
   18290:	cmp	r3, #0
   18294:	bne	18310 <flatcc_json_printer_uint32_enum_field@@Base+0xf8>
   18298:	ldr	r2, [r0, #20]
   1829c:	ldr	r3, [r0, #16]
   182a0:	cmp	r2, r3
   182a4:	bcs	18370 <flatcc_json_printer_uint32_enum_field@@Base+0x158>
   182a8:	ldr	r3, [r4, #20]
   182ac:	mov	r2, #34	; 0x22
   182b0:	strb	r2, [r3]
   182b4:	ldrb	r3, [r4, #26]
   182b8:	ldr	r0, [r4, #20]
   182bc:	cmp	r3, #0
   182c0:	addeq	r0, r0, #1
   182c4:	str	r0, [r4, #20]
   182c8:	add	r3, r0, r6
   182cc:	ldr	r2, [r4, #16]
   182d0:	cmp	r2, r3
   182d4:	bhi	18380 <flatcc_json_printer_uint32_enum_field@@Base+0x168>
   182d8:	mov	r2, r6
   182dc:	mov	r1, r7
   182e0:	mov	r0, r4
   182e4:	bl	14dbc <main@@Base+0x1334>
   182e8:	b	18398 <flatcc_json_printer_uint32_enum_field@@Base+0x180>
   182ec:	ldrb	r2, [r0, #28]
   182f0:	cmp	r2, #0
   182f4:	beq	18260 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   182f8:	pop	{r4, r5, r6, r7, r8, pc}
   182fc:	ldrb	r2, [r0, #29]
   18300:	cmp	r2, #0
   18304:	popeq	{r4, r5, r6, r7, r8, pc}
   18308:	ldr	r5, [sp, #28]
   1830c:	b	18260 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   18310:	ldr	r3, [r0, #20]
   18314:	add	r2, r3, #1
   18318:	str	r2, [r0, #20]
   1831c:	mov	r2, #10
   18320:	strb	r2, [r3]
   18324:	ldrb	r3, [r0, #25]
   18328:	ldr	r8, [r0, #32]
   1832c:	mul	r8, r8, r3
   18330:	ldr	r0, [r0, #20]
   18334:	add	r3, r0, r8
   18338:	ldr	r2, [r4, #16]
   1833c:	cmp	r2, r3
   18340:	bcc	18360 <flatcc_json_printer_uint32_enum_field@@Base+0x148>
   18344:	mov	r2, r8
   18348:	mov	r1, #32
   1834c:	bl	124e8 <memset@plt>
   18350:	ldr	r3, [r4, #20]
   18354:	add	r8, r3, r8
   18358:	str	r8, [r4, #20]
   1835c:	b	182a8 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
   18360:	mov	r1, r8
   18364:	mov	r0, r4
   18368:	bl	14ea4 <main@@Base+0x141c>
   1836c:	b	182a8 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
   18370:	ldr	r3, [r0, #44]	; 0x2c
   18374:	mov	r1, #0
   18378:	blx	r3
   1837c:	b	182a8 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
   18380:	mov	r2, r6
   18384:	mov	r1, r7
   18388:	bl	1244c <memcpy@plt>
   1838c:	ldr	r3, [r4, #20]
   18390:	add	r6, r3, r6
   18394:	str	r6, [r4, #20]
   18398:	ldr	r3, [r4, #20]
   1839c:	mov	r2, #34	; 0x22
   183a0:	strb	r2, [r3]
   183a4:	ldrb	r3, [r4, #26]
   183a8:	clz	r3, r3
   183ac:	lsr	r3, r3, #5
   183b0:	ldr	r1, [r4, #20]
   183b4:	add	r2, r1, r3
   183b8:	add	r2, r2, #1
   183bc:	str	r2, [r4, #20]
   183c0:	mov	r2, #58	; 0x3a
   183c4:	strb	r2, [r1, r3]
   183c8:	ldr	r3, [r4, #20]
   183cc:	mov	r2, #32
   183d0:	strb	r2, [r3]
   183d4:	ldrb	r3, [r4, #25]
   183d8:	ldr	r1, [r4, #20]
   183dc:	cmp	r3, #0
   183e0:	addne	r1, r1, #1
   183e4:	str	r1, [r4, #20]
   183e8:	ldrb	r3, [r4, #27]
   183ec:	cmp	r3, #0
   183f0:	bne	18408 <flatcc_json_printer_uint32_enum_field@@Base+0x1f0>
   183f4:	mov	r1, r5
   183f8:	mov	r0, r4
   183fc:	ldr	r3, [sp, #32]
   18400:	blx	r3
   18404:	pop	{r4, r5, r6, r7, r8, pc}
   18408:	mov	r0, r5
   1840c:	bl	13d64 <main@@Base+0x2dc>
   18410:	ldr	r3, [r4, #20]
   18414:	add	r0, r3, r0
   18418:	str	r0, [r4, #20]
   1841c:	pop	{r4, r5, r6, r7, r8, pc}

00018420 <flatcc_json_printer_uint64_enum_field@@Base>:
   18420:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18424:	ldr	r5, [sp, #32]
   18428:	add	r2, r2, #2
   1842c:	lsl	r2, r2, #1
   18430:	ldr	ip, [r1, #8]
   18434:	cmp	r2, ip
   18438:	bge	18508 <flatcc_json_printer_uint64_enum_field@@Base+0xe8>
   1843c:	ldr	ip, [r1, #4]
   18440:	ldrh	r2, [ip, r2]
   18444:	cmp	r2, #0
   18448:	beq	18508 <flatcc_json_printer_uint64_enum_field@@Base+0xe8>
   1844c:	ldr	ip, [r1]
   18450:	cmn	ip, r2
   18454:	beq	18508 <flatcc_json_printer_uint64_enum_field@@Base+0xe8>
   18458:	ldrd	r6, [ip, r2]
   1845c:	ldrd	r8, [sp, #40]	; 0x28
   18460:	cmp	r9, r7
   18464:	cmpeq	r8, r6
   18468:	beq	184f8 <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   1846c:	ldr	r2, [r1, #16]
   18470:	add	ip, r2, #1
   18474:	str	ip, [r1, #16]
   18478:	cmp	r2, #0
   1847c:	ldrne	r2, [r0, #20]
   18480:	addne	r1, r2, #1
   18484:	strne	r1, [r0, #20]
   18488:	movne	r1, #44	; 0x2c
   1848c:	strbne	r1, [r2]
   18490:	mov	r8, r3
   18494:	mov	r4, r0
   18498:	ldrb	r3, [r0, #25]
   1849c:	cmp	r3, #0
   184a0:	bne	1851c <flatcc_json_printer_uint64_enum_field@@Base+0xfc>
   184a4:	ldr	r2, [r0, #20]
   184a8:	ldr	r3, [r0, #16]
   184ac:	cmp	r2, r3
   184b0:	bcs	1857c <flatcc_json_printer_uint64_enum_field@@Base+0x15c>
   184b4:	ldr	r3, [r4, #20]
   184b8:	mov	r2, #34	; 0x22
   184bc:	strb	r2, [r3]
   184c0:	ldrb	r3, [r4, #26]
   184c4:	ldr	r0, [r4, #20]
   184c8:	cmp	r3, #0
   184cc:	addeq	r0, r0, #1
   184d0:	str	r0, [r4, #20]
   184d4:	add	r3, r0, r5
   184d8:	ldr	r2, [r4, #16]
   184dc:	cmp	r2, r3
   184e0:	bhi	1858c <flatcc_json_printer_uint64_enum_field@@Base+0x16c>
   184e4:	mov	r2, r5
   184e8:	mov	r1, r8
   184ec:	mov	r0, r4
   184f0:	bl	14dbc <main@@Base+0x1334>
   184f4:	b	185a4 <flatcc_json_printer_uint64_enum_field@@Base+0x184>
   184f8:	ldrb	r2, [r0, #28]
   184fc:	cmp	r2, #0
   18500:	beq	1846c <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   18504:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18508:	ldrb	r2, [r0, #29]
   1850c:	cmp	r2, #0
   18510:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18514:	ldrd	r6, [sp, #40]	; 0x28
   18518:	b	1846c <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   1851c:	ldr	r3, [r0, #20]
   18520:	add	r2, r3, #1
   18524:	str	r2, [r0, #20]
   18528:	mov	r2, #10
   1852c:	strb	r2, [r3]
   18530:	ldrb	r3, [r0, #25]
   18534:	ldr	r9, [r0, #32]
   18538:	mul	r9, r9, r3
   1853c:	ldr	r0, [r0, #20]
   18540:	add	r3, r0, r9
   18544:	ldr	r2, [r4, #16]
   18548:	cmp	r2, r3
   1854c:	bcc	1856c <flatcc_json_printer_uint64_enum_field@@Base+0x14c>
   18550:	mov	r2, r9
   18554:	mov	r1, #32
   18558:	bl	124e8 <memset@plt>
   1855c:	ldr	r3, [r4, #20]
   18560:	add	r9, r3, r9
   18564:	str	r9, [r4, #20]
   18568:	b	184b4 <flatcc_json_printer_uint64_enum_field@@Base+0x94>
   1856c:	mov	r1, r9
   18570:	mov	r0, r4
   18574:	bl	14ea4 <main@@Base+0x141c>
   18578:	b	184b4 <flatcc_json_printer_uint64_enum_field@@Base+0x94>
   1857c:	ldr	r3, [r0, #44]	; 0x2c
   18580:	mov	r1, #0
   18584:	blx	r3
   18588:	b	184b4 <flatcc_json_printer_uint64_enum_field@@Base+0x94>
   1858c:	mov	r2, r5
   18590:	mov	r1, r8
   18594:	bl	1244c <memcpy@plt>
   18598:	ldr	r3, [r4, #20]
   1859c:	add	r5, r3, r5
   185a0:	str	r5, [r4, #20]
   185a4:	ldr	r3, [r4, #20]
   185a8:	mov	r2, #34	; 0x22
   185ac:	strb	r2, [r3]
   185b0:	ldrb	r3, [r4, #26]
   185b4:	clz	r3, r3
   185b8:	lsr	r3, r3, #5
   185bc:	ldr	r1, [r4, #20]
   185c0:	add	r2, r1, r3
   185c4:	add	r2, r2, #1
   185c8:	str	r2, [r4, #20]
   185cc:	mov	r2, #58	; 0x3a
   185d0:	strb	r2, [r1, r3]
   185d4:	ldr	r3, [r4, #20]
   185d8:	mov	r2, #32
   185dc:	strb	r2, [r3]
   185e0:	ldrb	r3, [r4, #25]
   185e4:	ldr	r2, [r4, #20]
   185e8:	cmp	r3, #0
   185ec:	addne	r2, r2, #1
   185f0:	str	r2, [r4, #20]
   185f4:	ldrb	r3, [r4, #27]
   185f8:	cmp	r3, #0
   185fc:	bne	18618 <flatcc_json_printer_uint64_enum_field@@Base+0x1f8>
   18600:	mov	r2, r6
   18604:	mov	r3, r7
   18608:	mov	r0, r4
   1860c:	ldr	r1, [sp, #48]	; 0x30
   18610:	blx	r1
   18614:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18618:	mov	r0, r6
   1861c:	mov	r1, r7
   18620:	bl	140a4 <main@@Base+0x61c>
   18624:	ldr	r3, [r4, #20]
   18628:	add	r0, r3, r0
   1862c:	str	r0, [r4, #20]
   18630:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00018634 <flatcc_json_printer_int8_enum_field@@Base>:
   18634:	push	{r4, r5, r6, r7, r8, lr}
   18638:	ldr	r6, [sp, #24]
   1863c:	ldrsb	lr, [sp, #28]
   18640:	add	r2, r2, #2
   18644:	lsl	r2, r2, #1
   18648:	ldr	ip, [r1, #8]
   1864c:	cmp	r2, ip
   18650:	bge	18718 <flatcc_json_printer_int8_enum_field@@Base+0xe4>
   18654:	ldr	ip, [r1, #4]
   18658:	ldrh	r2, [ip, r2]
   1865c:	cmp	r2, #0
   18660:	beq	18718 <flatcc_json_printer_int8_enum_field@@Base+0xe4>
   18664:	ldr	ip, [r1]
   18668:	cmn	ip, r2
   1866c:	beq	18718 <flatcc_json_printer_int8_enum_field@@Base+0xe4>
   18670:	ldrsb	r5, [ip, r2]
   18674:	cmp	lr, r5
   18678:	beq	18708 <flatcc_json_printer_int8_enum_field@@Base+0xd4>
   1867c:	ldr	r2, [r1, #16]
   18680:	add	ip, r2, #1
   18684:	str	ip, [r1, #16]
   18688:	cmp	r2, #0
   1868c:	ldrne	r2, [r0, #20]
   18690:	addne	r1, r2, #1
   18694:	strne	r1, [r0, #20]
   18698:	movne	r1, #44	; 0x2c
   1869c:	strbne	r1, [r2]
   186a0:	mov	r7, r3
   186a4:	mov	r4, r0
   186a8:	ldrb	r3, [r0, #25]
   186ac:	cmp	r3, #0
   186b0:	bne	1872c <flatcc_json_printer_int8_enum_field@@Base+0xf8>
   186b4:	ldr	r2, [r0, #20]
   186b8:	ldr	r3, [r0, #16]
   186bc:	cmp	r2, r3
   186c0:	bcs	1878c <flatcc_json_printer_int8_enum_field@@Base+0x158>
   186c4:	ldr	r3, [r4, #20]
   186c8:	mov	r2, #34	; 0x22
   186cc:	strb	r2, [r3]
   186d0:	ldrb	r3, [r4, #26]
   186d4:	ldr	r0, [r4, #20]
   186d8:	cmp	r3, #0
   186dc:	addeq	r0, r0, #1
   186e0:	str	r0, [r4, #20]
   186e4:	add	r3, r0, r6
   186e8:	ldr	r2, [r4, #16]
   186ec:	cmp	r2, r3
   186f0:	bhi	1879c <flatcc_json_printer_int8_enum_field@@Base+0x168>
   186f4:	mov	r2, r6
   186f8:	mov	r1, r7
   186fc:	mov	r0, r4
   18700:	bl	14dbc <main@@Base+0x1334>
   18704:	b	187b4 <flatcc_json_printer_int8_enum_field@@Base+0x180>
   18708:	ldrb	r2, [r0, #28]
   1870c:	cmp	r2, #0
   18710:	beq	1867c <flatcc_json_printer_int8_enum_field@@Base+0x48>
   18714:	pop	{r4, r5, r6, r7, r8, pc}
   18718:	ldrb	r2, [r0, #29]
   1871c:	cmp	r2, #0
   18720:	popeq	{r4, r5, r6, r7, r8, pc}
   18724:	mov	r5, lr
   18728:	b	1867c <flatcc_json_printer_int8_enum_field@@Base+0x48>
   1872c:	ldr	r3, [r0, #20]
   18730:	add	r2, r3, #1
   18734:	str	r2, [r0, #20]
   18738:	mov	r2, #10
   1873c:	strb	r2, [r3]
   18740:	ldrb	r3, [r0, #25]
   18744:	ldr	r8, [r0, #32]
   18748:	mul	r8, r8, r3
   1874c:	ldr	r0, [r0, #20]
   18750:	add	r3, r0, r8
   18754:	ldr	r2, [r4, #16]
   18758:	cmp	r2, r3
   1875c:	bcc	1877c <flatcc_json_printer_int8_enum_field@@Base+0x148>
   18760:	mov	r2, r8
   18764:	mov	r1, #32
   18768:	bl	124e8 <memset@plt>
   1876c:	ldr	r3, [r4, #20]
   18770:	add	r8, r3, r8
   18774:	str	r8, [r4, #20]
   18778:	b	186c4 <flatcc_json_printer_int8_enum_field@@Base+0x90>
   1877c:	mov	r1, r8
   18780:	mov	r0, r4
   18784:	bl	14ea4 <main@@Base+0x141c>
   18788:	b	186c4 <flatcc_json_printer_int8_enum_field@@Base+0x90>
   1878c:	ldr	r3, [r0, #44]	; 0x2c
   18790:	mov	r1, #0
   18794:	blx	r3
   18798:	b	186c4 <flatcc_json_printer_int8_enum_field@@Base+0x90>
   1879c:	mov	r2, r6
   187a0:	mov	r1, r7
   187a4:	bl	1244c <memcpy@plt>
   187a8:	ldr	r3, [r4, #20]
   187ac:	add	r6, r3, r6
   187b0:	str	r6, [r4, #20]
   187b4:	ldr	r3, [r4, #20]
   187b8:	mov	r2, #34	; 0x22
   187bc:	strb	r2, [r3]
   187c0:	ldrb	r3, [r4, #26]
   187c4:	clz	r3, r3
   187c8:	lsr	r3, r3, #5
   187cc:	ldr	r1, [r4, #20]
   187d0:	add	r2, r1, r3
   187d4:	add	r2, r2, #1
   187d8:	str	r2, [r4, #20]
   187dc:	mov	r2, #58	; 0x3a
   187e0:	strb	r2, [r1, r3]
   187e4:	ldr	r3, [r4, #20]
   187e8:	mov	r2, #32
   187ec:	strb	r2, [r3]
   187f0:	ldrb	r3, [r4, #25]
   187f4:	ldr	r1, [r4, #20]
   187f8:	cmp	r3, #0
   187fc:	addne	r1, r1, #1
   18800:	str	r1, [r4, #20]
   18804:	ldrb	r3, [r4, #27]
   18808:	cmp	r3, #0
   1880c:	bne	18824 <flatcc_json_printer_int8_enum_field@@Base+0x1f0>
   18810:	mov	r1, r5
   18814:	mov	r0, r4
   18818:	ldr	r3, [sp, #32]
   1881c:	blx	r3
   18820:	pop	{r4, r5, r6, r7, r8, pc}
   18824:	mov	r0, r5
   18828:	bl	14728 <main@@Base+0xca0>
   1882c:	ldr	r3, [r4, #20]
   18830:	add	r0, r3, r0
   18834:	str	r0, [r4, #20]
   18838:	pop	{r4, r5, r6, r7, r8, pc}

0001883c <flatcc_json_printer_int16_enum_field@@Base>:
   1883c:	push	{r4, r5, r6, r7, r8, lr}
   18840:	ldr	r6, [sp, #24]
   18844:	ldrsh	lr, [sp, #28]
   18848:	add	r2, r2, #2
   1884c:	lsl	r2, r2, #1
   18850:	ldr	ip, [r1, #8]
   18854:	cmp	r2, ip
   18858:	bge	18920 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   1885c:	ldr	ip, [r1, #4]
   18860:	ldrh	r2, [ip, r2]
   18864:	cmp	r2, #0
   18868:	beq	18920 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   1886c:	ldr	ip, [r1]
   18870:	cmn	ip, r2
   18874:	beq	18920 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   18878:	ldrsh	r5, [ip, r2]
   1887c:	cmp	lr, r5
   18880:	beq	18910 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   18884:	ldr	r2, [r1, #16]
   18888:	add	ip, r2, #1
   1888c:	str	ip, [r1, #16]
   18890:	cmp	r2, #0
   18894:	ldrne	r2, [r0, #20]
   18898:	addne	r1, r2, #1
   1889c:	strne	r1, [r0, #20]
   188a0:	movne	r1, #44	; 0x2c
   188a4:	strbne	r1, [r2]
   188a8:	mov	r7, r3
   188ac:	mov	r4, r0
   188b0:	ldrb	r3, [r0, #25]
   188b4:	cmp	r3, #0
   188b8:	bne	18934 <flatcc_json_printer_int16_enum_field@@Base+0xf8>
   188bc:	ldr	r2, [r0, #20]
   188c0:	ldr	r3, [r0, #16]
   188c4:	cmp	r2, r3
   188c8:	bcs	18994 <flatcc_json_printer_int16_enum_field@@Base+0x158>
   188cc:	ldr	r3, [r4, #20]
   188d0:	mov	r2, #34	; 0x22
   188d4:	strb	r2, [r3]
   188d8:	ldrb	r3, [r4, #26]
   188dc:	ldr	r0, [r4, #20]
   188e0:	cmp	r3, #0
   188e4:	addeq	r0, r0, #1
   188e8:	str	r0, [r4, #20]
   188ec:	add	r3, r0, r6
   188f0:	ldr	r2, [r4, #16]
   188f4:	cmp	r2, r3
   188f8:	bhi	189a4 <flatcc_json_printer_int16_enum_field@@Base+0x168>
   188fc:	mov	r2, r6
   18900:	mov	r1, r7
   18904:	mov	r0, r4
   18908:	bl	14dbc <main@@Base+0x1334>
   1890c:	b	189bc <flatcc_json_printer_int16_enum_field@@Base+0x180>
   18910:	ldrb	r2, [r0, #28]
   18914:	cmp	r2, #0
   18918:	beq	18884 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   1891c:	pop	{r4, r5, r6, r7, r8, pc}
   18920:	ldrb	r2, [r0, #29]
   18924:	cmp	r2, #0
   18928:	popeq	{r4, r5, r6, r7, r8, pc}
   1892c:	mov	r5, lr
   18930:	b	18884 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   18934:	ldr	r3, [r0, #20]
   18938:	add	r2, r3, #1
   1893c:	str	r2, [r0, #20]
   18940:	mov	r2, #10
   18944:	strb	r2, [r3]
   18948:	ldrb	r3, [r0, #25]
   1894c:	ldr	r8, [r0, #32]
   18950:	mul	r8, r8, r3
   18954:	ldr	r0, [r0, #20]
   18958:	add	r3, r0, r8
   1895c:	ldr	r2, [r4, #16]
   18960:	cmp	r2, r3
   18964:	bcc	18984 <flatcc_json_printer_int16_enum_field@@Base+0x148>
   18968:	mov	r2, r8
   1896c:	mov	r1, #32
   18970:	bl	124e8 <memset@plt>
   18974:	ldr	r3, [r4, #20]
   18978:	add	r8, r3, r8
   1897c:	str	r8, [r4, #20]
   18980:	b	188cc <flatcc_json_printer_int16_enum_field@@Base+0x90>
   18984:	mov	r1, r8
   18988:	mov	r0, r4
   1898c:	bl	14ea4 <main@@Base+0x141c>
   18990:	b	188cc <flatcc_json_printer_int16_enum_field@@Base+0x90>
   18994:	ldr	r3, [r0, #44]	; 0x2c
   18998:	mov	r1, #0
   1899c:	blx	r3
   189a0:	b	188cc <flatcc_json_printer_int16_enum_field@@Base+0x90>
   189a4:	mov	r2, r6
   189a8:	mov	r1, r7
   189ac:	bl	1244c <memcpy@plt>
   189b0:	ldr	r3, [r4, #20]
   189b4:	add	r6, r3, r6
   189b8:	str	r6, [r4, #20]
   189bc:	ldr	r3, [r4, #20]
   189c0:	mov	r2, #34	; 0x22
   189c4:	strb	r2, [r3]
   189c8:	ldrb	r3, [r4, #26]
   189cc:	clz	r3, r3
   189d0:	lsr	r3, r3, #5
   189d4:	ldr	r1, [r4, #20]
   189d8:	add	r2, r1, r3
   189dc:	add	r2, r2, #1
   189e0:	str	r2, [r4, #20]
   189e4:	mov	r2, #58	; 0x3a
   189e8:	strb	r2, [r1, r3]
   189ec:	ldr	r3, [r4, #20]
   189f0:	mov	r2, #32
   189f4:	strb	r2, [r3]
   189f8:	ldrb	r3, [r4, #25]
   189fc:	ldr	r1, [r4, #20]
   18a00:	cmp	r3, #0
   18a04:	addne	r1, r1, #1
   18a08:	str	r1, [r4, #20]
   18a0c:	ldrb	r3, [r4, #27]
   18a10:	cmp	r3, #0
   18a14:	bne	18a2c <flatcc_json_printer_int16_enum_field@@Base+0x1f0>
   18a18:	mov	r1, r5
   18a1c:	mov	r0, r4
   18a20:	ldr	r3, [sp, #32]
   18a24:	blx	r3
   18a28:	pop	{r4, r5, r6, r7, r8, pc}
   18a2c:	mov	r0, r5
   18a30:	bl	14758 <main@@Base+0xcd0>
   18a34:	ldr	r3, [r4, #20]
   18a38:	add	r0, r3, r0
   18a3c:	str	r0, [r4, #20]
   18a40:	pop	{r4, r5, r6, r7, r8, pc}

00018a44 <flatcc_json_printer_int32_enum_field@@Base>:
   18a44:	push	{r4, r5, r6, r7, r8, lr}
   18a48:	ldr	r6, [sp, #24]
   18a4c:	add	r2, r2, #2
   18a50:	lsl	r2, r2, #1
   18a54:	ldr	ip, [r1, #8]
   18a58:	cmp	r2, ip
   18a5c:	bge	18b28 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   18a60:	ldr	ip, [r1, #4]
   18a64:	ldrh	r2, [ip, r2]
   18a68:	cmp	r2, #0
   18a6c:	beq	18b28 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   18a70:	ldr	ip, [r1]
   18a74:	cmn	ip, r2
   18a78:	beq	18b28 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   18a7c:	ldr	r5, [ip, r2]
   18a80:	ldr	r2, [sp, #28]
   18a84:	cmp	r2, r5
   18a88:	beq	18b18 <flatcc_json_printer_int32_enum_field@@Base+0xd4>
   18a8c:	ldr	r2, [r1, #16]
   18a90:	add	ip, r2, #1
   18a94:	str	ip, [r1, #16]
   18a98:	cmp	r2, #0
   18a9c:	ldrne	r2, [r0, #20]
   18aa0:	addne	r1, r2, #1
   18aa4:	strne	r1, [r0, #20]
   18aa8:	movne	r1, #44	; 0x2c
   18aac:	strbne	r1, [r2]
   18ab0:	mov	r7, r3
   18ab4:	mov	r4, r0
   18ab8:	ldrb	r3, [r0, #25]
   18abc:	cmp	r3, #0
   18ac0:	bne	18b3c <flatcc_json_printer_int32_enum_field@@Base+0xf8>
   18ac4:	ldr	r2, [r0, #20]
   18ac8:	ldr	r3, [r0, #16]
   18acc:	cmp	r2, r3
   18ad0:	bcs	18b9c <flatcc_json_printer_int32_enum_field@@Base+0x158>
   18ad4:	ldr	r3, [r4, #20]
   18ad8:	mov	r2, #34	; 0x22
   18adc:	strb	r2, [r3]
   18ae0:	ldrb	r3, [r4, #26]
   18ae4:	ldr	r0, [r4, #20]
   18ae8:	cmp	r3, #0
   18aec:	addeq	r0, r0, #1
   18af0:	str	r0, [r4, #20]
   18af4:	add	r3, r0, r6
   18af8:	ldr	r2, [r4, #16]
   18afc:	cmp	r2, r3
   18b00:	bhi	18bac <flatcc_json_printer_int32_enum_field@@Base+0x168>
   18b04:	mov	r2, r6
   18b08:	mov	r1, r7
   18b0c:	mov	r0, r4
   18b10:	bl	14dbc <main@@Base+0x1334>
   18b14:	b	18bc4 <flatcc_json_printer_int32_enum_field@@Base+0x180>
   18b18:	ldrb	r2, [r0, #28]
   18b1c:	cmp	r2, #0
   18b20:	beq	18a8c <flatcc_json_printer_int32_enum_field@@Base+0x48>
   18b24:	pop	{r4, r5, r6, r7, r8, pc}
   18b28:	ldrb	r2, [r0, #29]
   18b2c:	cmp	r2, #0
   18b30:	popeq	{r4, r5, r6, r7, r8, pc}
   18b34:	ldr	r5, [sp, #28]
   18b38:	b	18a8c <flatcc_json_printer_int32_enum_field@@Base+0x48>
   18b3c:	ldr	r3, [r0, #20]
   18b40:	add	r2, r3, #1
   18b44:	str	r2, [r0, #20]
   18b48:	mov	r2, #10
   18b4c:	strb	r2, [r3]
   18b50:	ldrb	r3, [r0, #25]
   18b54:	ldr	r8, [r0, #32]
   18b58:	mul	r8, r8, r3
   18b5c:	ldr	r0, [r0, #20]
   18b60:	add	r3, r0, r8
   18b64:	ldr	r2, [r4, #16]
   18b68:	cmp	r2, r3
   18b6c:	bcc	18b8c <flatcc_json_printer_int32_enum_field@@Base+0x148>
   18b70:	mov	r2, r8
   18b74:	mov	r1, #32
   18b78:	bl	124e8 <memset@plt>
   18b7c:	ldr	r3, [r4, #20]
   18b80:	add	r8, r3, r8
   18b84:	str	r8, [r4, #20]
   18b88:	b	18ad4 <flatcc_json_printer_int32_enum_field@@Base+0x90>
   18b8c:	mov	r1, r8
   18b90:	mov	r0, r4
   18b94:	bl	14ea4 <main@@Base+0x141c>
   18b98:	b	18ad4 <flatcc_json_printer_int32_enum_field@@Base+0x90>
   18b9c:	ldr	r3, [r0, #44]	; 0x2c
   18ba0:	mov	r1, #0
   18ba4:	blx	r3
   18ba8:	b	18ad4 <flatcc_json_printer_int32_enum_field@@Base+0x90>
   18bac:	mov	r2, r6
   18bb0:	mov	r1, r7
   18bb4:	bl	1244c <memcpy@plt>
   18bb8:	ldr	r3, [r4, #20]
   18bbc:	add	r6, r3, r6
   18bc0:	str	r6, [r4, #20]
   18bc4:	ldr	r3, [r4, #20]
   18bc8:	mov	r2, #34	; 0x22
   18bcc:	strb	r2, [r3]
   18bd0:	ldrb	r3, [r4, #26]
   18bd4:	clz	r3, r3
   18bd8:	lsr	r3, r3, #5
   18bdc:	ldr	r1, [r4, #20]
   18be0:	add	r2, r1, r3
   18be4:	add	r2, r2, #1
   18be8:	str	r2, [r4, #20]
   18bec:	mov	r2, #58	; 0x3a
   18bf0:	strb	r2, [r1, r3]
   18bf4:	ldr	r3, [r4, #20]
   18bf8:	mov	r2, #32
   18bfc:	strb	r2, [r3]
   18c00:	ldrb	r3, [r4, #25]
   18c04:	ldr	r1, [r4, #20]
   18c08:	cmp	r3, #0
   18c0c:	addne	r1, r1, #1
   18c10:	str	r1, [r4, #20]
   18c14:	ldrb	r3, [r4, #27]
   18c18:	cmp	r3, #0
   18c1c:	bne	18c34 <flatcc_json_printer_int32_enum_field@@Base+0x1f0>
   18c20:	mov	r1, r5
   18c24:	mov	r0, r4
   18c28:	ldr	r3, [sp, #32]
   18c2c:	blx	r3
   18c30:	pop	{r4, r5, r6, r7, r8, pc}
   18c34:	mov	r0, r5
   18c38:	bl	14788 <main@@Base+0xd00>
   18c3c:	ldr	r3, [r4, #20]
   18c40:	add	r0, r3, r0
   18c44:	str	r0, [r4, #20]
   18c48:	pop	{r4, r5, r6, r7, r8, pc}

00018c4c <flatcc_json_printer_int64_enum_field@@Base>:
   18c4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18c50:	ldr	r5, [sp, #32]
   18c54:	add	r2, r2, #2
   18c58:	lsl	r2, r2, #1
   18c5c:	ldr	ip, [r1, #8]
   18c60:	cmp	r2, ip
   18c64:	bge	18d34 <flatcc_json_printer_int64_enum_field@@Base+0xe8>
   18c68:	ldr	ip, [r1, #4]
   18c6c:	ldrh	r2, [ip, r2]
   18c70:	cmp	r2, #0
   18c74:	beq	18d34 <flatcc_json_printer_int64_enum_field@@Base+0xe8>
   18c78:	ldr	ip, [r1]
   18c7c:	cmn	ip, r2
   18c80:	beq	18d34 <flatcc_json_printer_int64_enum_field@@Base+0xe8>
   18c84:	ldrd	r6, [ip, r2]
   18c88:	ldrd	r8, [sp, #40]	; 0x28
   18c8c:	cmp	r9, r7
   18c90:	cmpeq	r8, r6
   18c94:	beq	18d24 <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   18c98:	ldr	r2, [r1, #16]
   18c9c:	add	ip, r2, #1
   18ca0:	str	ip, [r1, #16]
   18ca4:	cmp	r2, #0
   18ca8:	ldrne	r2, [r0, #20]
   18cac:	addne	r1, r2, #1
   18cb0:	strne	r1, [r0, #20]
   18cb4:	movne	r1, #44	; 0x2c
   18cb8:	strbne	r1, [r2]
   18cbc:	mov	r8, r3
   18cc0:	mov	r4, r0
   18cc4:	ldrb	r3, [r0, #25]
   18cc8:	cmp	r3, #0
   18ccc:	bne	18d48 <flatcc_json_printer_int64_enum_field@@Base+0xfc>
   18cd0:	ldr	r2, [r0, #20]
   18cd4:	ldr	r3, [r0, #16]
   18cd8:	cmp	r2, r3
   18cdc:	bcs	18da8 <flatcc_json_printer_int64_enum_field@@Base+0x15c>
   18ce0:	ldr	r3, [r4, #20]
   18ce4:	mov	r2, #34	; 0x22
   18ce8:	strb	r2, [r3]
   18cec:	ldrb	r3, [r4, #26]
   18cf0:	ldr	r0, [r4, #20]
   18cf4:	cmp	r3, #0
   18cf8:	addeq	r0, r0, #1
   18cfc:	str	r0, [r4, #20]
   18d00:	add	r3, r0, r5
   18d04:	ldr	r2, [r4, #16]
   18d08:	cmp	r2, r3
   18d0c:	bhi	18db8 <flatcc_json_printer_int64_enum_field@@Base+0x16c>
   18d10:	mov	r2, r5
   18d14:	mov	r1, r8
   18d18:	mov	r0, r4
   18d1c:	bl	14dbc <main@@Base+0x1334>
   18d20:	b	18dd0 <flatcc_json_printer_int64_enum_field@@Base+0x184>
   18d24:	ldrb	r2, [r0, #28]
   18d28:	cmp	r2, #0
   18d2c:	beq	18c98 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   18d30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18d34:	ldrb	r2, [r0, #29]
   18d38:	cmp	r2, #0
   18d3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18d40:	ldrd	r6, [sp, #40]	; 0x28
   18d44:	b	18c98 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   18d48:	ldr	r3, [r0, #20]
   18d4c:	add	r2, r3, #1
   18d50:	str	r2, [r0, #20]
   18d54:	mov	r2, #10
   18d58:	strb	r2, [r3]
   18d5c:	ldrb	r3, [r0, #25]
   18d60:	ldr	r9, [r0, #32]
   18d64:	mul	r9, r9, r3
   18d68:	ldr	r0, [r0, #20]
   18d6c:	add	r3, r0, r9
   18d70:	ldr	r2, [r4, #16]
   18d74:	cmp	r2, r3
   18d78:	bcc	18d98 <flatcc_json_printer_int64_enum_field@@Base+0x14c>
   18d7c:	mov	r2, r9
   18d80:	mov	r1, #32
   18d84:	bl	124e8 <memset@plt>
   18d88:	ldr	r3, [r4, #20]
   18d8c:	add	r9, r3, r9
   18d90:	str	r9, [r4, #20]
   18d94:	b	18ce0 <flatcc_json_printer_int64_enum_field@@Base+0x94>
   18d98:	mov	r1, r9
   18d9c:	mov	r0, r4
   18da0:	bl	14ea4 <main@@Base+0x141c>
   18da4:	b	18ce0 <flatcc_json_printer_int64_enum_field@@Base+0x94>
   18da8:	ldr	r3, [r0, #44]	; 0x2c
   18dac:	mov	r1, #0
   18db0:	blx	r3
   18db4:	b	18ce0 <flatcc_json_printer_int64_enum_field@@Base+0x94>
   18db8:	mov	r2, r5
   18dbc:	mov	r1, r8
   18dc0:	bl	1244c <memcpy@plt>
   18dc4:	ldr	r3, [r4, #20]
   18dc8:	add	r5, r3, r5
   18dcc:	str	r5, [r4, #20]
   18dd0:	ldr	r3, [r4, #20]
   18dd4:	mov	r2, #34	; 0x22
   18dd8:	strb	r2, [r3]
   18ddc:	ldrb	r3, [r4, #26]
   18de0:	clz	r3, r3
   18de4:	lsr	r3, r3, #5
   18de8:	ldr	r1, [r4, #20]
   18dec:	add	r2, r1, r3
   18df0:	add	r2, r2, #1
   18df4:	str	r2, [r4, #20]
   18df8:	mov	r2, #58	; 0x3a
   18dfc:	strb	r2, [r1, r3]
   18e00:	ldr	r3, [r4, #20]
   18e04:	mov	r2, #32
   18e08:	strb	r2, [r3]
   18e0c:	ldrb	r3, [r4, #25]
   18e10:	ldr	r2, [r4, #20]
   18e14:	cmp	r3, #0
   18e18:	addne	r2, r2, #1
   18e1c:	str	r2, [r4, #20]
   18e20:	ldrb	r3, [r4, #27]
   18e24:	cmp	r3, #0
   18e28:	bne	18e44 <flatcc_json_printer_int64_enum_field@@Base+0x1f8>
   18e2c:	mov	r2, r6
   18e30:	mov	r3, r7
   18e34:	mov	r0, r4
   18e38:	ldr	r1, [sp, #48]	; 0x30
   18e3c:	blx	r1
   18e40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18e44:	mov	r0, r6
   18e48:	mov	r1, r7
   18e4c:	bl	147b0 <main@@Base+0xd28>
   18e50:	ldr	r3, [r4, #20]
   18e54:	add	r0, r3, r0
   18e58:	str	r0, [r4, #20]
   18e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00018e60 <flatcc_json_printer_bool_enum_field@@Base>:
   18e60:	push	{r4, r5, r6, r7, r8, lr}
   18e64:	ldr	r6, [sp, #24]
   18e68:	ldrb	lr, [sp, #28]
   18e6c:	add	r2, r2, #2
   18e70:	lsl	r2, r2, #1
   18e74:	ldr	ip, [r1, #8]
   18e78:	cmp	r2, ip
   18e7c:	bge	18f44 <flatcc_json_printer_bool_enum_field@@Base+0xe4>
   18e80:	ldr	ip, [r1, #4]
   18e84:	ldrh	r2, [ip, r2]
   18e88:	cmp	r2, #0
   18e8c:	beq	18f44 <flatcc_json_printer_bool_enum_field@@Base+0xe4>
   18e90:	ldr	ip, [r1]
   18e94:	cmn	ip, r2
   18e98:	beq	18f44 <flatcc_json_printer_bool_enum_field@@Base+0xe4>
   18e9c:	ldrb	r5, [ip, r2]
   18ea0:	cmp	lr, r5
   18ea4:	beq	18f34 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   18ea8:	ldr	r2, [r1, #16]
   18eac:	add	ip, r2, #1
   18eb0:	str	ip, [r1, #16]
   18eb4:	cmp	r2, #0
   18eb8:	ldrne	r2, [r0, #20]
   18ebc:	addne	r1, r2, #1
   18ec0:	strne	r1, [r0, #20]
   18ec4:	movne	r1, #44	; 0x2c
   18ec8:	strbne	r1, [r2]
   18ecc:	mov	r7, r3
   18ed0:	mov	r4, r0
   18ed4:	ldrb	r3, [r0, #25]
   18ed8:	cmp	r3, #0
   18edc:	bne	18f58 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   18ee0:	ldr	r2, [r0, #20]
   18ee4:	ldr	r3, [r0, #16]
   18ee8:	cmp	r2, r3
   18eec:	bcs	18fb8 <flatcc_json_printer_bool_enum_field@@Base+0x158>
   18ef0:	ldr	r3, [r4, #20]
   18ef4:	mov	r2, #34	; 0x22
   18ef8:	strb	r2, [r3]
   18efc:	ldrb	r3, [r4, #26]
   18f00:	ldr	r0, [r4, #20]
   18f04:	cmp	r3, #0
   18f08:	addeq	r0, r0, #1
   18f0c:	str	r0, [r4, #20]
   18f10:	add	r3, r0, r6
   18f14:	ldr	r2, [r4, #16]
   18f18:	cmp	r2, r3
   18f1c:	bhi	18fc8 <flatcc_json_printer_bool_enum_field@@Base+0x168>
   18f20:	mov	r2, r6
   18f24:	mov	r1, r7
   18f28:	mov	r0, r4
   18f2c:	bl	14dbc <main@@Base+0x1334>
   18f30:	b	18fe0 <flatcc_json_printer_bool_enum_field@@Base+0x180>
   18f34:	ldrb	r2, [r0, #28]
   18f38:	cmp	r2, #0
   18f3c:	beq	18ea8 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   18f40:	pop	{r4, r5, r6, r7, r8, pc}
   18f44:	ldrb	r2, [r0, #29]
   18f48:	cmp	r2, #0
   18f4c:	popeq	{r4, r5, r6, r7, r8, pc}
   18f50:	mov	r5, lr
   18f54:	b	18ea8 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   18f58:	ldr	r3, [r0, #20]
   18f5c:	add	r2, r3, #1
   18f60:	str	r2, [r0, #20]
   18f64:	mov	r2, #10
   18f68:	strb	r2, [r3]
   18f6c:	ldrb	r3, [r0, #25]
   18f70:	ldr	r8, [r0, #32]
   18f74:	mul	r8, r8, r3
   18f78:	ldr	r0, [r0, #20]
   18f7c:	add	r3, r0, r8
   18f80:	ldr	r2, [r4, #16]
   18f84:	cmp	r2, r3
   18f88:	bcc	18fa8 <flatcc_json_printer_bool_enum_field@@Base+0x148>
   18f8c:	mov	r2, r8
   18f90:	mov	r1, #32
   18f94:	bl	124e8 <memset@plt>
   18f98:	ldr	r3, [r4, #20]
   18f9c:	add	r8, r3, r8
   18fa0:	str	r8, [r4, #20]
   18fa4:	b	18ef0 <flatcc_json_printer_bool_enum_field@@Base+0x90>
   18fa8:	mov	r1, r8
   18fac:	mov	r0, r4
   18fb0:	bl	14ea4 <main@@Base+0x141c>
   18fb4:	b	18ef0 <flatcc_json_printer_bool_enum_field@@Base+0x90>
   18fb8:	ldr	r3, [r0, #44]	; 0x2c
   18fbc:	mov	r1, #0
   18fc0:	blx	r3
   18fc4:	b	18ef0 <flatcc_json_printer_bool_enum_field@@Base+0x90>
   18fc8:	mov	r2, r6
   18fcc:	mov	r1, r7
   18fd0:	bl	1244c <memcpy@plt>
   18fd4:	ldr	r3, [r4, #20]
   18fd8:	add	r6, r3, r6
   18fdc:	str	r6, [r4, #20]
   18fe0:	ldr	r3, [r4, #20]
   18fe4:	mov	r2, #34	; 0x22
   18fe8:	strb	r2, [r3]
   18fec:	ldrb	r3, [r4, #26]
   18ff0:	clz	r3, r3
   18ff4:	lsr	r3, r3, #5
   18ff8:	ldr	r1, [r4, #20]
   18ffc:	add	r2, r1, r3
   19000:	add	r2, r2, #1
   19004:	str	r2, [r4, #20]
   19008:	mov	r2, #58	; 0x3a
   1900c:	strb	r2, [r1, r3]
   19010:	ldr	r3, [r4, #20]
   19014:	mov	r2, #32
   19018:	strb	r2, [r3]
   1901c:	ldrb	r3, [r4, #25]
   19020:	ldr	r1, [r4, #20]
   19024:	cmp	r3, #0
   19028:	addne	r1, r1, #1
   1902c:	str	r1, [r4, #20]
   19030:	ldrb	r3, [r4, #27]
   19034:	cmp	r3, #0
   19038:	bne	19050 <flatcc_json_printer_bool_enum_field@@Base+0x1f0>
   1903c:	mov	r1, r5
   19040:	mov	r0, r4
   19044:	ldr	r3, [sp, #32]
   19048:	blx	r3
   1904c:	pop	{r4, r5, r6, r7, r8, pc}
   19050:	mov	r0, r5
   19054:	bl	14e6c <main@@Base+0x13e4>
   19058:	ldr	r3, [r4, #20]
   1905c:	add	r0, r3, r0
   19060:	str	r0, [r4, #20]
   19064:	pop	{r4, r5, r6, r7, r8, pc}

00019068 <flatcc_json_printer_uint8_struct_field@@Base>:
   19068:	push	{r4, r5, r6, r7, r8, lr}
   1906c:	mov	r4, r0
   19070:	ldr	r6, [sp, #28]
   19074:	ldrb	r5, [r2, r3]
   19078:	cmp	r1, #0
   1907c:	ldrne	r3, [r0, #20]
   19080:	addne	r2, r3, #1
   19084:	strne	r2, [r0, #20]
   19088:	movne	r2, #44	; 0x2c
   1908c:	strbne	r2, [r3]
   19090:	ldrb	r3, [r0, #25]
   19094:	cmp	r3, #0
   19098:	bne	190f0 <flatcc_json_printer_uint8_struct_field@@Base+0x88>
   1909c:	ldr	r2, [r0, #20]
   190a0:	ldr	r3, [r0, #16]
   190a4:	cmp	r2, r3
   190a8:	bcs	19150 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   190ac:	ldr	r3, [r4, #20]
   190b0:	mov	r2, #34	; 0x22
   190b4:	strb	r2, [r3]
   190b8:	ldrb	r3, [r4, #26]
   190bc:	ldr	r0, [r4, #20]
   190c0:	cmp	r3, #0
   190c4:	addeq	r0, r0, #1
   190c8:	str	r0, [r4, #20]
   190cc:	add	r3, r0, r6
   190d0:	ldr	r2, [r4, #16]
   190d4:	cmp	r2, r3
   190d8:	bhi	19160 <flatcc_json_printer_uint8_struct_field@@Base+0xf8>
   190dc:	mov	r2, r6
   190e0:	ldr	r1, [sp, #24]
   190e4:	mov	r0, r4
   190e8:	bl	14dbc <main@@Base+0x1334>
   190ec:	b	19178 <flatcc_json_printer_uint8_struct_field@@Base+0x110>
   190f0:	ldr	r3, [r0, #20]
   190f4:	add	r2, r3, #1
   190f8:	str	r2, [r0, #20]
   190fc:	mov	r2, #10
   19100:	strb	r2, [r3]
   19104:	ldrb	r3, [r0, #25]
   19108:	ldr	r7, [r0, #32]
   1910c:	mul	r7, r7, r3
   19110:	ldr	r0, [r0, #20]
   19114:	add	r3, r0, r7
   19118:	ldr	r2, [r4, #16]
   1911c:	cmp	r2, r3
   19120:	bcc	19140 <flatcc_json_printer_uint8_struct_field@@Base+0xd8>
   19124:	mov	r2, r7
   19128:	mov	r1, #32
   1912c:	bl	124e8 <memset@plt>
   19130:	ldr	r3, [r4, #20]
   19134:	add	r7, r3, r7
   19138:	str	r7, [r4, #20]
   1913c:	b	190ac <flatcc_json_printer_uint8_struct_field@@Base+0x44>
   19140:	mov	r1, r7
   19144:	mov	r0, r4
   19148:	bl	14ea4 <main@@Base+0x141c>
   1914c:	b	190ac <flatcc_json_printer_uint8_struct_field@@Base+0x44>
   19150:	ldr	r3, [r0, #44]	; 0x2c
   19154:	mov	r1, #0
   19158:	blx	r3
   1915c:	b	190ac <flatcc_json_printer_uint8_struct_field@@Base+0x44>
   19160:	mov	r2, r6
   19164:	ldr	r1, [sp, #24]
   19168:	bl	1244c <memcpy@plt>
   1916c:	ldr	r3, [r4, #20]
   19170:	add	r6, r3, r6
   19174:	str	r6, [r4, #20]
   19178:	ldr	r3, [r4, #20]
   1917c:	mov	r2, #34	; 0x22
   19180:	strb	r2, [r3]
   19184:	ldrb	r3, [r4, #26]
   19188:	clz	r3, r3
   1918c:	lsr	r3, r3, #5
   19190:	ldr	r1, [r4, #20]
   19194:	add	r2, r1, r3
   19198:	add	r2, r2, #1
   1919c:	str	r2, [r4, #20]
   191a0:	mov	r2, #58	; 0x3a
   191a4:	strb	r2, [r1, r3]
   191a8:	ldr	r3, [r4, #20]
   191ac:	mov	r2, #32
   191b0:	strb	r2, [r3]
   191b4:	ldrb	r3, [r4, #25]
   191b8:	ldr	r1, [r4, #20]
   191bc:	cmp	r3, #0
   191c0:	addne	r1, r1, #1
   191c4:	str	r1, [r4, #20]
   191c8:	mov	r0, r5
   191cc:	bl	13b20 <main@@Base+0x98>
   191d0:	ldr	r3, [r4, #20]
   191d4:	add	r0, r3, r0
   191d8:	str	r0, [r4, #20]
   191dc:	pop	{r4, r5, r6, r7, r8, pc}

000191e0 <flatcc_json_printer_uint16_struct_field@@Base>:
   191e0:	push	{r4, r5, r6, r7, r8, lr}
   191e4:	mov	r4, r0
   191e8:	ldr	r6, [sp, #28]
   191ec:	ldrh	r5, [r2, r3]
   191f0:	cmp	r1, #0
   191f4:	ldrne	r3, [r0, #20]
   191f8:	addne	r2, r3, #1
   191fc:	strne	r2, [r0, #20]
   19200:	movne	r2, #44	; 0x2c
   19204:	strbne	r2, [r3]
   19208:	ldrb	r3, [r0, #25]
   1920c:	cmp	r3, #0
   19210:	bne	19268 <flatcc_json_printer_uint16_struct_field@@Base+0x88>
   19214:	ldr	r2, [r0, #20]
   19218:	ldr	r3, [r0, #16]
   1921c:	cmp	r2, r3
   19220:	bcs	192c8 <flatcc_json_printer_uint16_struct_field@@Base+0xe8>
   19224:	ldr	r3, [r4, #20]
   19228:	mov	r2, #34	; 0x22
   1922c:	strb	r2, [r3]
   19230:	ldrb	r3, [r4, #26]
   19234:	ldr	r0, [r4, #20]
   19238:	cmp	r3, #0
   1923c:	addeq	r0, r0, #1
   19240:	str	r0, [r4, #20]
   19244:	add	r3, r0, r6
   19248:	ldr	r2, [r4, #16]
   1924c:	cmp	r2, r3
   19250:	bhi	192d8 <flatcc_json_printer_uint16_struct_field@@Base+0xf8>
   19254:	mov	r2, r6
   19258:	ldr	r1, [sp, #24]
   1925c:	mov	r0, r4
   19260:	bl	14dbc <main@@Base+0x1334>
   19264:	b	192f0 <flatcc_json_printer_uint16_struct_field@@Base+0x110>
   19268:	ldr	r3, [r0, #20]
   1926c:	add	r2, r3, #1
   19270:	str	r2, [r0, #20]
   19274:	mov	r2, #10
   19278:	strb	r2, [r3]
   1927c:	ldrb	r3, [r0, #25]
   19280:	ldr	r7, [r0, #32]
   19284:	mul	r7, r7, r3
   19288:	ldr	r0, [r0, #20]
   1928c:	add	r3, r0, r7
   19290:	ldr	r2, [r4, #16]
   19294:	cmp	r2, r3
   19298:	bcc	192b8 <flatcc_json_printer_uint16_struct_field@@Base+0xd8>
   1929c:	mov	r2, r7
   192a0:	mov	r1, #32
   192a4:	bl	124e8 <memset@plt>
   192a8:	ldr	r3, [r4, #20]
   192ac:	add	r7, r3, r7
   192b0:	str	r7, [r4, #20]
   192b4:	b	19224 <flatcc_json_printer_uint16_struct_field@@Base+0x44>
   192b8:	mov	r1, r7
   192bc:	mov	r0, r4
   192c0:	bl	14ea4 <main@@Base+0x141c>
   192c4:	b	19224 <flatcc_json_printer_uint16_struct_field@@Base+0x44>
   192c8:	ldr	r3, [r0, #44]	; 0x2c
   192cc:	mov	r1, #0
   192d0:	blx	r3
   192d4:	b	19224 <flatcc_json_printer_uint16_struct_field@@Base+0x44>
   192d8:	mov	r2, r6
   192dc:	ldr	r1, [sp, #24]
   192e0:	bl	1244c <memcpy@plt>
   192e4:	ldr	r3, [r4, #20]
   192e8:	add	r6, r3, r6
   192ec:	str	r6, [r4, #20]
   192f0:	ldr	r3, [r4, #20]
   192f4:	mov	r2, #34	; 0x22
   192f8:	strb	r2, [r3]
   192fc:	ldrb	r3, [r4, #26]
   19300:	clz	r3, r3
   19304:	lsr	r3, r3, #5
   19308:	ldr	r1, [r4, #20]
   1930c:	add	r2, r1, r3
   19310:	add	r2, r2, #1
   19314:	str	r2, [r4, #20]
   19318:	mov	r2, #58	; 0x3a
   1931c:	strb	r2, [r1, r3]
   19320:	ldr	r3, [r4, #20]
   19324:	mov	r2, #32
   19328:	strb	r2, [r3]
   1932c:	ldrb	r3, [r4, #25]
   19330:	ldr	r1, [r4, #20]
   19334:	cmp	r3, #0
   19338:	addne	r1, r1, #1
   1933c:	str	r1, [r4, #20]
   19340:	mov	r0, r5
   19344:	bl	13be0 <main@@Base+0x158>
   19348:	ldr	r3, [r4, #20]
   1934c:	add	r0, r3, r0
   19350:	str	r0, [r4, #20]
   19354:	pop	{r4, r5, r6, r7, r8, pc}

00019358 <flatcc_json_printer_uint32_struct_field@@Base>:
   19358:	push	{r4, r5, r6, r7, r8, lr}
   1935c:	mov	r4, r0
   19360:	ldr	r6, [sp, #28]
   19364:	ldr	r5, [r2, r3]
   19368:	cmp	r1, #0
   1936c:	ldrne	r3, [r0, #20]
   19370:	addne	r2, r3, #1
   19374:	strne	r2, [r0, #20]
   19378:	movne	r2, #44	; 0x2c
   1937c:	strbne	r2, [r3]
   19380:	ldrb	r3, [r0, #25]
   19384:	cmp	r3, #0
   19388:	bne	193e0 <flatcc_json_printer_uint32_struct_field@@Base+0x88>
   1938c:	ldr	r2, [r0, #20]
   19390:	ldr	r3, [r0, #16]
   19394:	cmp	r2, r3
   19398:	bcs	19440 <flatcc_json_printer_uint32_struct_field@@Base+0xe8>
   1939c:	ldr	r3, [r4, #20]
   193a0:	mov	r2, #34	; 0x22
   193a4:	strb	r2, [r3]
   193a8:	ldrb	r3, [r4, #26]
   193ac:	ldr	r0, [r4, #20]
   193b0:	cmp	r3, #0
   193b4:	addeq	r0, r0, #1
   193b8:	str	r0, [r4, #20]
   193bc:	add	r3, r0, r6
   193c0:	ldr	r2, [r4, #16]
   193c4:	cmp	r2, r3
   193c8:	bhi	19450 <flatcc_json_printer_uint32_struct_field@@Base+0xf8>
   193cc:	mov	r2, r6
   193d0:	ldr	r1, [sp, #24]
   193d4:	mov	r0, r4
   193d8:	bl	14dbc <main@@Base+0x1334>
   193dc:	b	19468 <flatcc_json_printer_uint32_struct_field@@Base+0x110>
   193e0:	ldr	r3, [r0, #20]
   193e4:	add	r2, r3, #1
   193e8:	str	r2, [r0, #20]
   193ec:	mov	r2, #10
   193f0:	strb	r2, [r3]
   193f4:	ldrb	r3, [r0, #25]
   193f8:	ldr	r7, [r0, #32]
   193fc:	mul	r7, r7, r3
   19400:	ldr	r0, [r0, #20]
   19404:	add	r3, r0, r7
   19408:	ldr	r2, [r4, #16]
   1940c:	cmp	r2, r3
   19410:	bcc	19430 <flatcc_json_printer_uint32_struct_field@@Base+0xd8>
   19414:	mov	r2, r7
   19418:	mov	r1, #32
   1941c:	bl	124e8 <memset@plt>
   19420:	ldr	r3, [r4, #20]
   19424:	add	r7, r3, r7
   19428:	str	r7, [r4, #20]
   1942c:	b	1939c <flatcc_json_printer_uint32_struct_field@@Base+0x44>
   19430:	mov	r1, r7
   19434:	mov	r0, r4
   19438:	bl	14ea4 <main@@Base+0x141c>
   1943c:	b	1939c <flatcc_json_printer_uint32_struct_field@@Base+0x44>
   19440:	ldr	r3, [r0, #44]	; 0x2c
   19444:	mov	r1, #0
   19448:	blx	r3
   1944c:	b	1939c <flatcc_json_printer_uint32_struct_field@@Base+0x44>
   19450:	mov	r2, r6
   19454:	ldr	r1, [sp, #24]
   19458:	bl	1244c <memcpy@plt>
   1945c:	ldr	r3, [r4, #20]
   19460:	add	r6, r3, r6
   19464:	str	r6, [r4, #20]
   19468:	ldr	r3, [r4, #20]
   1946c:	mov	r2, #34	; 0x22
   19470:	strb	r2, [r3]
   19474:	ldrb	r3, [r4, #26]
   19478:	clz	r3, r3
   1947c:	lsr	r3, r3, #5
   19480:	ldr	r1, [r4, #20]
   19484:	add	r2, r1, r3
   19488:	add	r2, r2, #1
   1948c:	str	r2, [r4, #20]
   19490:	mov	r2, #58	; 0x3a
   19494:	strb	r2, [r1, r3]
   19498:	ldr	r3, [r4, #20]
   1949c:	mov	r2, #32
   194a0:	strb	r2, [r3]
   194a4:	ldrb	r3, [r4, #25]
   194a8:	ldr	r1, [r4, #20]
   194ac:	cmp	r3, #0
   194b0:	addne	r1, r1, #1
   194b4:	str	r1, [r4, #20]
   194b8:	mov	r0, r5
   194bc:	bl	13d64 <main@@Base+0x2dc>
   194c0:	ldr	r3, [r4, #20]
   194c4:	add	r0, r3, r0
   194c8:	str	r0, [r4, #20]
   194cc:	pop	{r4, r5, r6, r7, r8, pc}

000194d0 <flatcc_json_printer_uint64_struct_field@@Base>:
   194d0:	push	{r4, r5, r6, r7, r8, lr}
   194d4:	mov	r4, r0
   194d8:	ldr	r5, [sp, #28]
   194dc:	ldrd	r6, [r2, r3]
   194e0:	cmp	r1, #0
   194e4:	ldrne	r3, [r0, #20]
   194e8:	addne	r2, r3, #1
   194ec:	strne	r2, [r0, #20]
   194f0:	movne	r2, #44	; 0x2c
   194f4:	strbne	r2, [r3]
   194f8:	ldrb	r3, [r0, #25]
   194fc:	cmp	r3, #0
   19500:	bne	19558 <flatcc_json_printer_uint64_struct_field@@Base+0x88>
   19504:	ldr	r2, [r0, #20]
   19508:	ldr	r3, [r0, #16]
   1950c:	cmp	r2, r3
   19510:	bcs	195b8 <flatcc_json_printer_uint64_struct_field@@Base+0xe8>
   19514:	ldr	r3, [r4, #20]
   19518:	mov	r2, #34	; 0x22
   1951c:	strb	r2, [r3]
   19520:	ldrb	r3, [r4, #26]
   19524:	ldr	r0, [r4, #20]
   19528:	cmp	r3, #0
   1952c:	addeq	r0, r0, #1
   19530:	str	r0, [r4, #20]
   19534:	add	r3, r0, r5
   19538:	ldr	r2, [r4, #16]
   1953c:	cmp	r2, r3
   19540:	bhi	195c8 <flatcc_json_printer_uint64_struct_field@@Base+0xf8>
   19544:	mov	r2, r5
   19548:	ldr	r1, [sp, #24]
   1954c:	mov	r0, r4
   19550:	bl	14dbc <main@@Base+0x1334>
   19554:	b	195e0 <flatcc_json_printer_uint64_struct_field@@Base+0x110>
   19558:	ldr	r3, [r0, #20]
   1955c:	add	r2, r3, #1
   19560:	str	r2, [r0, #20]
   19564:	mov	r2, #10
   19568:	strb	r2, [r3]
   1956c:	ldrb	r3, [r0, #25]
   19570:	ldr	r8, [r0, #32]
   19574:	mul	r8, r8, r3
   19578:	ldr	r0, [r0, #20]
   1957c:	add	r3, r0, r8
   19580:	ldr	r2, [r4, #16]
   19584:	cmp	r2, r3
   19588:	bcc	195a8 <flatcc_json_printer_uint64_struct_field@@Base+0xd8>
   1958c:	mov	r2, r8
   19590:	mov	r1, #32
   19594:	bl	124e8 <memset@plt>
   19598:	ldr	r3, [r4, #20]
   1959c:	add	r8, r3, r8
   195a0:	str	r8, [r4, #20]
   195a4:	b	19514 <flatcc_json_printer_uint64_struct_field@@Base+0x44>
   195a8:	mov	r1, r8
   195ac:	mov	r0, r4
   195b0:	bl	14ea4 <main@@Base+0x141c>
   195b4:	b	19514 <flatcc_json_printer_uint64_struct_field@@Base+0x44>
   195b8:	ldr	r3, [r0, #44]	; 0x2c
   195bc:	mov	r1, #0
   195c0:	blx	r3
   195c4:	b	19514 <flatcc_json_printer_uint64_struct_field@@Base+0x44>
   195c8:	mov	r2, r5
   195cc:	ldr	r1, [sp, #24]
   195d0:	bl	1244c <memcpy@plt>
   195d4:	ldr	r3, [r4, #20]
   195d8:	add	r5, r3, r5
   195dc:	str	r5, [r4, #20]
   195e0:	ldr	r3, [r4, #20]
   195e4:	mov	r2, #34	; 0x22
   195e8:	strb	r2, [r3]
   195ec:	ldrb	r3, [r4, #26]
   195f0:	clz	r3, r3
   195f4:	lsr	r3, r3, #5
   195f8:	ldr	r1, [r4, #20]
   195fc:	add	r2, r1, r3
   19600:	add	r2, r2, #1
   19604:	str	r2, [r4, #20]
   19608:	mov	r2, #58	; 0x3a
   1960c:	strb	r2, [r1, r3]
   19610:	ldr	r3, [r4, #20]
   19614:	mov	r2, #32
   19618:	strb	r2, [r3]
   1961c:	ldrb	r3, [r4, #25]
   19620:	ldr	r2, [r4, #20]
   19624:	cmp	r3, #0
   19628:	addne	r2, r2, #1
   1962c:	str	r2, [r4, #20]
   19630:	mov	r0, r6
   19634:	mov	r1, r7
   19638:	bl	140a4 <main@@Base+0x61c>
   1963c:	ldr	r3, [r4, #20]
   19640:	add	r0, r3, r0
   19644:	str	r0, [r4, #20]
   19648:	pop	{r4, r5, r6, r7, r8, pc}

0001964c <flatcc_json_printer_int8_struct_field@@Base>:
   1964c:	push	{r4, r5, r6, r7, r8, lr}
   19650:	mov	r4, r0
   19654:	ldr	r6, [sp, #28]
   19658:	ldrsb	r5, [r2, r3]
   1965c:	cmp	r1, #0
   19660:	ldrne	r3, [r0, #20]
   19664:	addne	r2, r3, #1
   19668:	strne	r2, [r0, #20]
   1966c:	movne	r2, #44	; 0x2c
   19670:	strbne	r2, [r3]
   19674:	ldrb	r3, [r0, #25]
   19678:	cmp	r3, #0
   1967c:	bne	196d4 <flatcc_json_printer_int8_struct_field@@Base+0x88>
   19680:	ldr	r2, [r0, #20]
   19684:	ldr	r3, [r0, #16]
   19688:	cmp	r2, r3
   1968c:	bcs	19734 <flatcc_json_printer_int8_struct_field@@Base+0xe8>
   19690:	ldr	r3, [r4, #20]
   19694:	mov	r2, #34	; 0x22
   19698:	strb	r2, [r3]
   1969c:	ldrb	r3, [r4, #26]
   196a0:	ldr	r0, [r4, #20]
   196a4:	cmp	r3, #0
   196a8:	addeq	r0, r0, #1
   196ac:	str	r0, [r4, #20]
   196b0:	add	r3, r0, r6
   196b4:	ldr	r2, [r4, #16]
   196b8:	cmp	r2, r3
   196bc:	bhi	19744 <flatcc_json_printer_int8_struct_field@@Base+0xf8>
   196c0:	mov	r2, r6
   196c4:	ldr	r1, [sp, #24]
   196c8:	mov	r0, r4
   196cc:	bl	14dbc <main@@Base+0x1334>
   196d0:	b	1975c <flatcc_json_printer_int8_struct_field@@Base+0x110>
   196d4:	ldr	r3, [r0, #20]
   196d8:	add	r2, r3, #1
   196dc:	str	r2, [r0, #20]
   196e0:	mov	r2, #10
   196e4:	strb	r2, [r3]
   196e8:	ldrb	r3, [r0, #25]
   196ec:	ldr	r7, [r0, #32]
   196f0:	mul	r7, r7, r3
   196f4:	ldr	r0, [r0, #20]
   196f8:	add	r3, r0, r7
   196fc:	ldr	r2, [r4, #16]
   19700:	cmp	r2, r3
   19704:	bcc	19724 <flatcc_json_printer_int8_struct_field@@Base+0xd8>
   19708:	mov	r2, r7
   1970c:	mov	r1, #32
   19710:	bl	124e8 <memset@plt>
   19714:	ldr	r3, [r4, #20]
   19718:	add	r7, r3, r7
   1971c:	str	r7, [r4, #20]
   19720:	b	19690 <flatcc_json_printer_int8_struct_field@@Base+0x44>
   19724:	mov	r1, r7
   19728:	mov	r0, r4
   1972c:	bl	14ea4 <main@@Base+0x141c>
   19730:	b	19690 <flatcc_json_printer_int8_struct_field@@Base+0x44>
   19734:	ldr	r3, [r0, #44]	; 0x2c
   19738:	mov	r1, #0
   1973c:	blx	r3
   19740:	b	19690 <flatcc_json_printer_int8_struct_field@@Base+0x44>
   19744:	mov	r2, r6
   19748:	ldr	r1, [sp, #24]
   1974c:	bl	1244c <memcpy@plt>
   19750:	ldr	r3, [r4, #20]
   19754:	add	r6, r3, r6
   19758:	str	r6, [r4, #20]
   1975c:	ldr	r3, [r4, #20]
   19760:	mov	r2, #34	; 0x22
   19764:	strb	r2, [r3]
   19768:	ldrb	r3, [r4, #26]
   1976c:	clz	r3, r3
   19770:	lsr	r3, r3, #5
   19774:	ldr	r1, [r4, #20]
   19778:	add	r2, r1, r3
   1977c:	add	r2, r2, #1
   19780:	str	r2, [r4, #20]
   19784:	mov	r2, #58	; 0x3a
   19788:	strb	r2, [r1, r3]
   1978c:	ldr	r3, [r4, #20]
   19790:	mov	r2, #32
   19794:	strb	r2, [r3]
   19798:	ldrb	r3, [r4, #25]
   1979c:	ldr	r1, [r4, #20]
   197a0:	cmp	r3, #0
   197a4:	addne	r1, r1, #1
   197a8:	str	r1, [r4, #20]
   197ac:	mov	r0, r5
   197b0:	bl	14728 <main@@Base+0xca0>
   197b4:	ldr	r3, [r4, #20]
   197b8:	add	r0, r3, r0
   197bc:	str	r0, [r4, #20]
   197c0:	pop	{r4, r5, r6, r7, r8, pc}

000197c4 <flatcc_json_printer_int16_struct_field@@Base>:
   197c4:	push	{r4, r5, r6, r7, r8, lr}
   197c8:	mov	r4, r0
   197cc:	ldr	r6, [sp, #28]
   197d0:	ldrsh	r5, [r2, r3]
   197d4:	cmp	r1, #0
   197d8:	ldrne	r3, [r0, #20]
   197dc:	addne	r2, r3, #1
   197e0:	strne	r2, [r0, #20]
   197e4:	movne	r2, #44	; 0x2c
   197e8:	strbne	r2, [r3]
   197ec:	ldrb	r3, [r0, #25]
   197f0:	cmp	r3, #0
   197f4:	bne	1984c <flatcc_json_printer_int16_struct_field@@Base+0x88>
   197f8:	ldr	r2, [r0, #20]
   197fc:	ldr	r3, [r0, #16]
   19800:	cmp	r2, r3
   19804:	bcs	198ac <flatcc_json_printer_int16_struct_field@@Base+0xe8>
   19808:	ldr	r3, [r4, #20]
   1980c:	mov	r2, #34	; 0x22
   19810:	strb	r2, [r3]
   19814:	ldrb	r3, [r4, #26]
   19818:	ldr	r0, [r4, #20]
   1981c:	cmp	r3, #0
   19820:	addeq	r0, r0, #1
   19824:	str	r0, [r4, #20]
   19828:	add	r3, r0, r6
   1982c:	ldr	r2, [r4, #16]
   19830:	cmp	r2, r3
   19834:	bhi	198bc <flatcc_json_printer_int16_struct_field@@Base+0xf8>
   19838:	mov	r2, r6
   1983c:	ldr	r1, [sp, #24]
   19840:	mov	r0, r4
   19844:	bl	14dbc <main@@Base+0x1334>
   19848:	b	198d4 <flatcc_json_printer_int16_struct_field@@Base+0x110>
   1984c:	ldr	r3, [r0, #20]
   19850:	add	r2, r3, #1
   19854:	str	r2, [r0, #20]
   19858:	mov	r2, #10
   1985c:	strb	r2, [r3]
   19860:	ldrb	r3, [r0, #25]
   19864:	ldr	r7, [r0, #32]
   19868:	mul	r7, r7, r3
   1986c:	ldr	r0, [r0, #20]
   19870:	add	r3, r0, r7
   19874:	ldr	r2, [r4, #16]
   19878:	cmp	r2, r3
   1987c:	bcc	1989c <flatcc_json_printer_int16_struct_field@@Base+0xd8>
   19880:	mov	r2, r7
   19884:	mov	r1, #32
   19888:	bl	124e8 <memset@plt>
   1988c:	ldr	r3, [r4, #20]
   19890:	add	r7, r3, r7
   19894:	str	r7, [r4, #20]
   19898:	b	19808 <flatcc_json_printer_int16_struct_field@@Base+0x44>
   1989c:	mov	r1, r7
   198a0:	mov	r0, r4
   198a4:	bl	14ea4 <main@@Base+0x141c>
   198a8:	b	19808 <flatcc_json_printer_int16_struct_field@@Base+0x44>
   198ac:	ldr	r3, [r0, #44]	; 0x2c
   198b0:	mov	r1, #0
   198b4:	blx	r3
   198b8:	b	19808 <flatcc_json_printer_int16_struct_field@@Base+0x44>
   198bc:	mov	r2, r6
   198c0:	ldr	r1, [sp, #24]
   198c4:	bl	1244c <memcpy@plt>
   198c8:	ldr	r3, [r4, #20]
   198cc:	add	r6, r3, r6
   198d0:	str	r6, [r4, #20]
   198d4:	ldr	r3, [r4, #20]
   198d8:	mov	r2, #34	; 0x22
   198dc:	strb	r2, [r3]
   198e0:	ldrb	r3, [r4, #26]
   198e4:	clz	r3, r3
   198e8:	lsr	r3, r3, #5
   198ec:	ldr	r1, [r4, #20]
   198f0:	add	r2, r1, r3
   198f4:	add	r2, r2, #1
   198f8:	str	r2, [r4, #20]
   198fc:	mov	r2, #58	; 0x3a
   19900:	strb	r2, [r1, r3]
   19904:	ldr	r3, [r4, #20]
   19908:	mov	r2, #32
   1990c:	strb	r2, [r3]
   19910:	ldrb	r3, [r4, #25]
   19914:	ldr	r1, [r4, #20]
   19918:	cmp	r3, #0
   1991c:	addne	r1, r1, #1
   19920:	str	r1, [r4, #20]
   19924:	mov	r0, r5
   19928:	bl	14758 <main@@Base+0xcd0>
   1992c:	ldr	r3, [r4, #20]
   19930:	add	r0, r3, r0
   19934:	str	r0, [r4, #20]
   19938:	pop	{r4, r5, r6, r7, r8, pc}

0001993c <flatcc_json_printer_int32_struct_field@@Base>:
   1993c:	push	{r4, r5, r6, r7, r8, lr}
   19940:	mov	r4, r0
   19944:	ldr	r6, [sp, #28]
   19948:	ldr	r5, [r2, r3]
   1994c:	cmp	r1, #0
   19950:	ldrne	r3, [r0, #20]
   19954:	addne	r2, r3, #1
   19958:	strne	r2, [r0, #20]
   1995c:	movne	r2, #44	; 0x2c
   19960:	strbne	r2, [r3]
   19964:	ldrb	r3, [r0, #25]
   19968:	cmp	r3, #0
   1996c:	bne	199c4 <flatcc_json_printer_int32_struct_field@@Base+0x88>
   19970:	ldr	r2, [r0, #20]
   19974:	ldr	r3, [r0, #16]
   19978:	cmp	r2, r3
   1997c:	bcs	19a24 <flatcc_json_printer_int32_struct_field@@Base+0xe8>
   19980:	ldr	r3, [r4, #20]
   19984:	mov	r2, #34	; 0x22
   19988:	strb	r2, [r3]
   1998c:	ldrb	r3, [r4, #26]
   19990:	ldr	r0, [r4, #20]
   19994:	cmp	r3, #0
   19998:	addeq	r0, r0, #1
   1999c:	str	r0, [r4, #20]
   199a0:	add	r3, r0, r6
   199a4:	ldr	r2, [r4, #16]
   199a8:	cmp	r2, r3
   199ac:	bhi	19a34 <flatcc_json_printer_int32_struct_field@@Base+0xf8>
   199b0:	mov	r2, r6
   199b4:	ldr	r1, [sp, #24]
   199b8:	mov	r0, r4
   199bc:	bl	14dbc <main@@Base+0x1334>
   199c0:	b	19a4c <flatcc_json_printer_int32_struct_field@@Base+0x110>
   199c4:	ldr	r3, [r0, #20]
   199c8:	add	r2, r3, #1
   199cc:	str	r2, [r0, #20]
   199d0:	mov	r2, #10
   199d4:	strb	r2, [r3]
   199d8:	ldrb	r3, [r0, #25]
   199dc:	ldr	r7, [r0, #32]
   199e0:	mul	r7, r7, r3
   199e4:	ldr	r0, [r0, #20]
   199e8:	add	r3, r0, r7
   199ec:	ldr	r2, [r4, #16]
   199f0:	cmp	r2, r3
   199f4:	bcc	19a14 <flatcc_json_printer_int32_struct_field@@Base+0xd8>
   199f8:	mov	r2, r7
   199fc:	mov	r1, #32
   19a00:	bl	124e8 <memset@plt>
   19a04:	ldr	r3, [r4, #20]
   19a08:	add	r7, r3, r7
   19a0c:	str	r7, [r4, #20]
   19a10:	b	19980 <flatcc_json_printer_int32_struct_field@@Base+0x44>
   19a14:	mov	r1, r7
   19a18:	mov	r0, r4
   19a1c:	bl	14ea4 <main@@Base+0x141c>
   19a20:	b	19980 <flatcc_json_printer_int32_struct_field@@Base+0x44>
   19a24:	ldr	r3, [r0, #44]	; 0x2c
   19a28:	mov	r1, #0
   19a2c:	blx	r3
   19a30:	b	19980 <flatcc_json_printer_int32_struct_field@@Base+0x44>
   19a34:	mov	r2, r6
   19a38:	ldr	r1, [sp, #24]
   19a3c:	bl	1244c <memcpy@plt>
   19a40:	ldr	r3, [r4, #20]
   19a44:	add	r6, r3, r6
   19a48:	str	r6, [r4, #20]
   19a4c:	ldr	r3, [r4, #20]
   19a50:	mov	r2, #34	; 0x22
   19a54:	strb	r2, [r3]
   19a58:	ldrb	r3, [r4, #26]
   19a5c:	clz	r3, r3
   19a60:	lsr	r3, r3, #5
   19a64:	ldr	r1, [r4, #20]
   19a68:	add	r2, r1, r3
   19a6c:	add	r2, r2, #1
   19a70:	str	r2, [r4, #20]
   19a74:	mov	r2, #58	; 0x3a
   19a78:	strb	r2, [r1, r3]
   19a7c:	ldr	r3, [r4, #20]
   19a80:	mov	r2, #32
   19a84:	strb	r2, [r3]
   19a88:	ldrb	r3, [r4, #25]
   19a8c:	ldr	r1, [r4, #20]
   19a90:	cmp	r3, #0
   19a94:	addne	r1, r1, #1
   19a98:	str	r1, [r4, #20]
   19a9c:	mov	r0, r5
   19aa0:	bl	14788 <main@@Base+0xd00>
   19aa4:	ldr	r3, [r4, #20]
   19aa8:	add	r0, r3, r0
   19aac:	str	r0, [r4, #20]
   19ab0:	pop	{r4, r5, r6, r7, r8, pc}

00019ab4 <flatcc_json_printer_int64_struct_field@@Base>:
   19ab4:	push	{r4, r5, r6, r7, r8, lr}
   19ab8:	mov	r4, r0
   19abc:	ldr	r5, [sp, #28]
   19ac0:	ldrd	r6, [r2, r3]
   19ac4:	cmp	r1, #0
   19ac8:	ldrne	r3, [r0, #20]
   19acc:	addne	r2, r3, #1
   19ad0:	strne	r2, [r0, #20]
   19ad4:	movne	r2, #44	; 0x2c
   19ad8:	strbne	r2, [r3]
   19adc:	ldrb	r3, [r0, #25]
   19ae0:	cmp	r3, #0
   19ae4:	bne	19b3c <flatcc_json_printer_int64_struct_field@@Base+0x88>
   19ae8:	ldr	r2, [r0, #20]
   19aec:	ldr	r3, [r0, #16]
   19af0:	cmp	r2, r3
   19af4:	bcs	19b9c <flatcc_json_printer_int64_struct_field@@Base+0xe8>
   19af8:	ldr	r3, [r4, #20]
   19afc:	mov	r2, #34	; 0x22
   19b00:	strb	r2, [r3]
   19b04:	ldrb	r3, [r4, #26]
   19b08:	ldr	r0, [r4, #20]
   19b0c:	cmp	r3, #0
   19b10:	addeq	r0, r0, #1
   19b14:	str	r0, [r4, #20]
   19b18:	add	r3, r0, r5
   19b1c:	ldr	r2, [r4, #16]
   19b20:	cmp	r2, r3
   19b24:	bhi	19bac <flatcc_json_printer_int64_struct_field@@Base+0xf8>
   19b28:	mov	r2, r5
   19b2c:	ldr	r1, [sp, #24]
   19b30:	mov	r0, r4
   19b34:	bl	14dbc <main@@Base+0x1334>
   19b38:	b	19bc4 <flatcc_json_printer_int64_struct_field@@Base+0x110>
   19b3c:	ldr	r3, [r0, #20]
   19b40:	add	r2, r3, #1
   19b44:	str	r2, [r0, #20]
   19b48:	mov	r2, #10
   19b4c:	strb	r2, [r3]
   19b50:	ldrb	r3, [r0, #25]
   19b54:	ldr	r8, [r0, #32]
   19b58:	mul	r8, r8, r3
   19b5c:	ldr	r0, [r0, #20]
   19b60:	add	r3, r0, r8
   19b64:	ldr	r2, [r4, #16]
   19b68:	cmp	r2, r3
   19b6c:	bcc	19b8c <flatcc_json_printer_int64_struct_field@@Base+0xd8>
   19b70:	mov	r2, r8
   19b74:	mov	r1, #32
   19b78:	bl	124e8 <memset@plt>
   19b7c:	ldr	r3, [r4, #20]
   19b80:	add	r8, r3, r8
   19b84:	str	r8, [r4, #20]
   19b88:	b	19af8 <flatcc_json_printer_int64_struct_field@@Base+0x44>
   19b8c:	mov	r1, r8
   19b90:	mov	r0, r4
   19b94:	bl	14ea4 <main@@Base+0x141c>
   19b98:	b	19af8 <flatcc_json_printer_int64_struct_field@@Base+0x44>
   19b9c:	ldr	r3, [r0, #44]	; 0x2c
   19ba0:	mov	r1, #0
   19ba4:	blx	r3
   19ba8:	b	19af8 <flatcc_json_printer_int64_struct_field@@Base+0x44>
   19bac:	mov	r2, r5
   19bb0:	ldr	r1, [sp, #24]
   19bb4:	bl	1244c <memcpy@plt>
   19bb8:	ldr	r3, [r4, #20]
   19bbc:	add	r5, r3, r5
   19bc0:	str	r5, [r4, #20]
   19bc4:	ldr	r3, [r4, #20]
   19bc8:	mov	r2, #34	; 0x22
   19bcc:	strb	r2, [r3]
   19bd0:	ldrb	r3, [r4, #26]
   19bd4:	clz	r3, r3
   19bd8:	lsr	r3, r3, #5
   19bdc:	ldr	r1, [r4, #20]
   19be0:	add	r2, r1, r3
   19be4:	add	r2, r2, #1
   19be8:	str	r2, [r4, #20]
   19bec:	mov	r2, #58	; 0x3a
   19bf0:	strb	r2, [r1, r3]
   19bf4:	ldr	r3, [r4, #20]
   19bf8:	mov	r2, #32
   19bfc:	strb	r2, [r3]
   19c00:	ldrb	r3, [r4, #25]
   19c04:	ldr	r2, [r4, #20]
   19c08:	cmp	r3, #0
   19c0c:	addne	r2, r2, #1
   19c10:	str	r2, [r4, #20]
   19c14:	mov	r0, r6
   19c18:	mov	r1, r7
   19c1c:	bl	147b0 <main@@Base+0xd28>
   19c20:	ldr	r3, [r4, #20]
   19c24:	add	r0, r3, r0
   19c28:	str	r0, [r4, #20]
   19c2c:	pop	{r4, r5, r6, r7, r8, pc}

00019c30 <flatcc_json_printer_bool_struct_field@@Base>:
   19c30:	push	{r4, r5, r6, r7, r8, lr}
   19c34:	mov	r4, r0
   19c38:	ldr	r6, [sp, #28]
   19c3c:	ldrb	r5, [r2, r3]
   19c40:	cmp	r1, #0
   19c44:	ldrne	r3, [r0, #20]
   19c48:	addne	r2, r3, #1
   19c4c:	strne	r2, [r0, #20]
   19c50:	movne	r2, #44	; 0x2c
   19c54:	strbne	r2, [r3]
   19c58:	ldrb	r3, [r0, #25]
   19c5c:	cmp	r3, #0
   19c60:	bne	19cb8 <flatcc_json_printer_bool_struct_field@@Base+0x88>
   19c64:	ldr	r2, [r0, #20]
   19c68:	ldr	r3, [r0, #16]
   19c6c:	cmp	r2, r3
   19c70:	bcs	19d18 <flatcc_json_printer_bool_struct_field@@Base+0xe8>
   19c74:	ldr	r3, [r4, #20]
   19c78:	mov	r2, #34	; 0x22
   19c7c:	strb	r2, [r3]
   19c80:	ldrb	r3, [r4, #26]
   19c84:	ldr	r0, [r4, #20]
   19c88:	cmp	r3, #0
   19c8c:	addeq	r0, r0, #1
   19c90:	str	r0, [r4, #20]
   19c94:	add	r3, r0, r6
   19c98:	ldr	r2, [r4, #16]
   19c9c:	cmp	r2, r3
   19ca0:	bhi	19d28 <flatcc_json_printer_bool_struct_field@@Base+0xf8>
   19ca4:	mov	r2, r6
   19ca8:	ldr	r1, [sp, #24]
   19cac:	mov	r0, r4
   19cb0:	bl	14dbc <main@@Base+0x1334>
   19cb4:	b	19d40 <flatcc_json_printer_bool_struct_field@@Base+0x110>
   19cb8:	ldr	r3, [r0, #20]
   19cbc:	add	r2, r3, #1
   19cc0:	str	r2, [r0, #20]
   19cc4:	mov	r2, #10
   19cc8:	strb	r2, [r3]
   19ccc:	ldrb	r3, [r0, #25]
   19cd0:	ldr	r7, [r0, #32]
   19cd4:	mul	r7, r7, r3
   19cd8:	ldr	r0, [r0, #20]
   19cdc:	add	r3, r0, r7
   19ce0:	ldr	r2, [r4, #16]
   19ce4:	cmp	r2, r3
   19ce8:	bcc	19d08 <flatcc_json_printer_bool_struct_field@@Base+0xd8>
   19cec:	mov	r2, r7
   19cf0:	mov	r1, #32
   19cf4:	bl	124e8 <memset@plt>
   19cf8:	ldr	r3, [r4, #20]
   19cfc:	add	r7, r3, r7
   19d00:	str	r7, [r4, #20]
   19d04:	b	19c74 <flatcc_json_printer_bool_struct_field@@Base+0x44>
   19d08:	mov	r1, r7
   19d0c:	mov	r0, r4
   19d10:	bl	14ea4 <main@@Base+0x141c>
   19d14:	b	19c74 <flatcc_json_printer_bool_struct_field@@Base+0x44>
   19d18:	ldr	r3, [r0, #44]	; 0x2c
   19d1c:	mov	r1, #0
   19d20:	blx	r3
   19d24:	b	19c74 <flatcc_json_printer_bool_struct_field@@Base+0x44>
   19d28:	mov	r2, r6
   19d2c:	ldr	r1, [sp, #24]
   19d30:	bl	1244c <memcpy@plt>
   19d34:	ldr	r3, [r4, #20]
   19d38:	add	r6, r3, r6
   19d3c:	str	r6, [r4, #20]
   19d40:	ldr	r3, [r4, #20]
   19d44:	mov	r2, #34	; 0x22
   19d48:	strb	r2, [r3]
   19d4c:	ldrb	r3, [r4, #26]
   19d50:	clz	r3, r3
   19d54:	lsr	r3, r3, #5
   19d58:	ldr	r1, [r4, #20]
   19d5c:	add	r2, r1, r3
   19d60:	add	r2, r2, #1
   19d64:	str	r2, [r4, #20]
   19d68:	mov	r2, #58	; 0x3a
   19d6c:	strb	r2, [r1, r3]
   19d70:	ldr	r3, [r4, #20]
   19d74:	mov	r2, #32
   19d78:	strb	r2, [r3]
   19d7c:	ldrb	r3, [r4, #25]
   19d80:	ldr	r1, [r4, #20]
   19d84:	cmp	r3, #0
   19d88:	addne	r1, r1, #1
   19d8c:	str	r1, [r4, #20]
   19d90:	mov	r0, r5
   19d94:	bl	14e6c <main@@Base+0x13e4>
   19d98:	ldr	r3, [r4, #20]
   19d9c:	add	r0, r3, r0
   19da0:	str	r0, [r4, #20]
   19da4:	pop	{r4, r5, r6, r7, r8, pc}

00019da8 <flatcc_json_printer_float_struct_field@@Base>:
   19da8:	push	{r4, r5, r6, lr}
   19dac:	vpush	{d8}
   19db0:	mov	r4, r0
   19db4:	ldr	r5, [sp, #28]
   19db8:	add	r3, r2, r3
   19dbc:	vldr	s16, [r3]
   19dc0:	cmp	r1, #0
   19dc4:	ldrne	r3, [r0, #20]
   19dc8:	addne	r2, r3, #1
   19dcc:	strne	r2, [r0, #20]
   19dd0:	movne	r2, #44	; 0x2c
   19dd4:	strbne	r2, [r3]
   19dd8:	ldrb	r3, [r0, #25]
   19ddc:	cmp	r3, #0
   19de0:	bne	19e38 <flatcc_json_printer_float_struct_field@@Base+0x90>
   19de4:	ldr	r2, [r0, #20]
   19de8:	ldr	r3, [r0, #16]
   19dec:	cmp	r2, r3
   19df0:	bcs	19e98 <flatcc_json_printer_float_struct_field@@Base+0xf0>
   19df4:	ldr	r3, [r4, #20]
   19df8:	mov	r2, #34	; 0x22
   19dfc:	strb	r2, [r3]
   19e00:	ldrb	r3, [r4, #26]
   19e04:	ldr	r0, [r4, #20]
   19e08:	cmp	r3, #0
   19e0c:	addeq	r0, r0, #1
   19e10:	str	r0, [r4, #20]
   19e14:	add	r3, r0, r5
   19e18:	ldr	r2, [r4, #16]
   19e1c:	cmp	r2, r3
   19e20:	bhi	19ea8 <flatcc_json_printer_float_struct_field@@Base+0x100>
   19e24:	mov	r2, r5
   19e28:	ldr	r1, [sp, #24]
   19e2c:	mov	r0, r4
   19e30:	bl	14dbc <main@@Base+0x1334>
   19e34:	b	19ec0 <flatcc_json_printer_float_struct_field@@Base+0x118>
   19e38:	ldr	r3, [r0, #20]
   19e3c:	add	r2, r3, #1
   19e40:	str	r2, [r0, #20]
   19e44:	mov	r2, #10
   19e48:	strb	r2, [r3]
   19e4c:	ldrb	r3, [r0, #25]
   19e50:	ldr	r6, [r0, #32]
   19e54:	mul	r6, r6, r3
   19e58:	ldr	r0, [r0, #20]
   19e5c:	add	r3, r0, r6
   19e60:	ldr	r2, [r4, #16]
   19e64:	cmp	r2, r3
   19e68:	bcc	19e88 <flatcc_json_printer_float_struct_field@@Base+0xe0>
   19e6c:	mov	r2, r6
   19e70:	mov	r1, #32
   19e74:	bl	124e8 <memset@plt>
   19e78:	ldr	r3, [r4, #20]
   19e7c:	add	r6, r3, r6
   19e80:	str	r6, [r4, #20]
   19e84:	b	19df4 <flatcc_json_printer_float_struct_field@@Base+0x4c>
   19e88:	mov	r1, r6
   19e8c:	mov	r0, r4
   19e90:	bl	14ea4 <main@@Base+0x141c>
   19e94:	b	19df4 <flatcc_json_printer_float_struct_field@@Base+0x4c>
   19e98:	ldr	r3, [r0, #44]	; 0x2c
   19e9c:	mov	r1, #0
   19ea0:	blx	r3
   19ea4:	b	19df4 <flatcc_json_printer_float_struct_field@@Base+0x4c>
   19ea8:	mov	r2, r5
   19eac:	ldr	r1, [sp, #24]
   19eb0:	bl	1244c <memcpy@plt>
   19eb4:	ldr	r3, [r4, #20]
   19eb8:	add	r5, r3, r5
   19ebc:	str	r5, [r4, #20]
   19ec0:	ldr	r3, [r4, #20]
   19ec4:	mov	r2, #34	; 0x22
   19ec8:	strb	r2, [r3]
   19ecc:	ldrb	r3, [r4, #26]
   19ed0:	clz	r3, r3
   19ed4:	lsr	r3, r3, #5
   19ed8:	ldr	r1, [r4, #20]
   19edc:	add	r2, r1, r3
   19ee0:	add	r2, r2, #1
   19ee4:	str	r2, [r4, #20]
   19ee8:	mov	r2, #58	; 0x3a
   19eec:	strb	r2, [r1, r3]
   19ef0:	ldr	r3, [r4, #20]
   19ef4:	mov	r2, #32
   19ef8:	strb	r2, [r3]
   19efc:	ldrb	r3, [r4, #25]
   19f00:	ldr	r0, [r4, #20]
   19f04:	cmp	r3, #0
   19f08:	addne	r0, r0, #1
   19f0c:	str	r0, [r4, #20]
   19f10:	vcvt.f64.f32	d0, s16
   19f14:	bl	15554 <main@@Base+0x1acc>
   19f18:	ldr	r3, [r4, #20]
   19f1c:	add	r0, r3, r0
   19f20:	str	r0, [r4, #20]
   19f24:	vpop	{d8}
   19f28:	pop	{r4, r5, r6, pc}

00019f2c <flatcc_json_printer_double_struct_field@@Base>:
   19f2c:	push	{r4, r5, r6, lr}
   19f30:	vpush	{d8}
   19f34:	mov	r4, r0
   19f38:	ldr	r5, [sp, #28]
   19f3c:	add	r3, r2, r3
   19f40:	vldr	d8, [r3]
   19f44:	cmp	r1, #0
   19f48:	ldrne	r3, [r0, #20]
   19f4c:	addne	r2, r3, #1
   19f50:	strne	r2, [r0, #20]
   19f54:	movne	r2, #44	; 0x2c
   19f58:	strbne	r2, [r3]
   19f5c:	ldrb	r3, [r0, #25]
   19f60:	cmp	r3, #0
   19f64:	bne	19fbc <flatcc_json_printer_double_struct_field@@Base+0x90>
   19f68:	ldr	r2, [r0, #20]
   19f6c:	ldr	r3, [r0, #16]
   19f70:	cmp	r2, r3
   19f74:	bcs	1a01c <flatcc_json_printer_double_struct_field@@Base+0xf0>
   19f78:	ldr	r3, [r4, #20]
   19f7c:	mov	r2, #34	; 0x22
   19f80:	strb	r2, [r3]
   19f84:	ldrb	r3, [r4, #26]
   19f88:	ldr	r0, [r4, #20]
   19f8c:	cmp	r3, #0
   19f90:	addeq	r0, r0, #1
   19f94:	str	r0, [r4, #20]
   19f98:	add	r3, r0, r5
   19f9c:	ldr	r2, [r4, #16]
   19fa0:	cmp	r2, r3
   19fa4:	bhi	1a02c <flatcc_json_printer_double_struct_field@@Base+0x100>
   19fa8:	mov	r2, r5
   19fac:	ldr	r1, [sp, #24]
   19fb0:	mov	r0, r4
   19fb4:	bl	14dbc <main@@Base+0x1334>
   19fb8:	b	1a044 <flatcc_json_printer_double_struct_field@@Base+0x118>
   19fbc:	ldr	r3, [r0, #20]
   19fc0:	add	r2, r3, #1
   19fc4:	str	r2, [r0, #20]
   19fc8:	mov	r2, #10
   19fcc:	strb	r2, [r3]
   19fd0:	ldrb	r3, [r0, #25]
   19fd4:	ldr	r6, [r0, #32]
   19fd8:	mul	r6, r6, r3
   19fdc:	ldr	r0, [r0, #20]
   19fe0:	add	r3, r0, r6
   19fe4:	ldr	r2, [r4, #16]
   19fe8:	cmp	r2, r3
   19fec:	bcc	1a00c <flatcc_json_printer_double_struct_field@@Base+0xe0>
   19ff0:	mov	r2, r6
   19ff4:	mov	r1, #32
   19ff8:	bl	124e8 <memset@plt>
   19ffc:	ldr	r3, [r4, #20]
   1a000:	add	r6, r3, r6
   1a004:	str	r6, [r4, #20]
   1a008:	b	19f78 <flatcc_json_printer_double_struct_field@@Base+0x4c>
   1a00c:	mov	r1, r6
   1a010:	mov	r0, r4
   1a014:	bl	14ea4 <main@@Base+0x141c>
   1a018:	b	19f78 <flatcc_json_printer_double_struct_field@@Base+0x4c>
   1a01c:	ldr	r3, [r0, #44]	; 0x2c
   1a020:	mov	r1, #0
   1a024:	blx	r3
   1a028:	b	19f78 <flatcc_json_printer_double_struct_field@@Base+0x4c>
   1a02c:	mov	r2, r5
   1a030:	ldr	r1, [sp, #24]
   1a034:	bl	1244c <memcpy@plt>
   1a038:	ldr	r3, [r4, #20]
   1a03c:	add	r5, r3, r5
   1a040:	str	r5, [r4, #20]
   1a044:	ldr	r3, [r4, #20]
   1a048:	mov	r2, #34	; 0x22
   1a04c:	strb	r2, [r3]
   1a050:	ldrb	r3, [r4, #26]
   1a054:	clz	r3, r3
   1a058:	lsr	r3, r3, #5
   1a05c:	ldr	r1, [r4, #20]
   1a060:	add	r2, r1, r3
   1a064:	add	r2, r2, #1
   1a068:	str	r2, [r4, #20]
   1a06c:	mov	r2, #58	; 0x3a
   1a070:	strb	r2, [r1, r3]
   1a074:	ldr	r3, [r4, #20]
   1a078:	mov	r2, #32
   1a07c:	strb	r2, [r3]
   1a080:	ldrb	r3, [r4, #25]
   1a084:	ldr	r0, [r4, #20]
   1a088:	cmp	r3, #0
   1a08c:	addne	r0, r0, #1
   1a090:	str	r0, [r4, #20]
   1a094:	vmov.f64	d0, d8
   1a098:	bl	15554 <main@@Base+0x1acc>
   1a09c:	ldr	r3, [r4, #20]
   1a0a0:	add	r0, r3, r0
   1a0a4:	str	r0, [r4, #20]
   1a0a8:	vpop	{d8}
   1a0ac:	pop	{r4, r5, r6, pc}

0001a0b0 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   1a0b0:	push	{r4, r5, r6, r7, r8, lr}
   1a0b4:	mov	r4, r0
   1a0b8:	ldr	r6, [sp, #28]
   1a0bc:	ldrb	r5, [r2, r3]
   1a0c0:	cmp	r1, #0
   1a0c4:	ldrne	r3, [r0, #20]
   1a0c8:	addne	r2, r3, #1
   1a0cc:	strne	r2, [r0, #20]
   1a0d0:	movne	r2, #44	; 0x2c
   1a0d4:	strbne	r2, [r3]
   1a0d8:	ldrb	r3, [r0, #25]
   1a0dc:	cmp	r3, #0
   1a0e0:	bne	1a138 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x88>
   1a0e4:	ldr	r2, [r0, #20]
   1a0e8:	ldr	r3, [r0, #16]
   1a0ec:	cmp	r2, r3
   1a0f0:	bcs	1a198 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xe8>
   1a0f4:	ldr	r3, [r4, #20]
   1a0f8:	mov	r2, #34	; 0x22
   1a0fc:	strb	r2, [r3]
   1a100:	ldrb	r3, [r4, #26]
   1a104:	ldr	r0, [r4, #20]
   1a108:	cmp	r3, #0
   1a10c:	addeq	r0, r0, #1
   1a110:	str	r0, [r4, #20]
   1a114:	add	r3, r0, r6
   1a118:	ldr	r2, [r4, #16]
   1a11c:	cmp	r2, r3
   1a120:	bhi	1a1a8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf8>
   1a124:	mov	r2, r6
   1a128:	ldr	r1, [sp, #24]
   1a12c:	mov	r0, r4
   1a130:	bl	14dbc <main@@Base+0x1334>
   1a134:	b	1a1c0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x110>
   1a138:	ldr	r3, [r0, #20]
   1a13c:	add	r2, r3, #1
   1a140:	str	r2, [r0, #20]
   1a144:	mov	r2, #10
   1a148:	strb	r2, [r3]
   1a14c:	ldrb	r3, [r0, #25]
   1a150:	ldr	r7, [r0, #32]
   1a154:	mul	r7, r7, r3
   1a158:	ldr	r0, [r0, #20]
   1a15c:	add	r3, r0, r7
   1a160:	ldr	r2, [r4, #16]
   1a164:	cmp	r2, r3
   1a168:	bcc	1a188 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xd8>
   1a16c:	mov	r2, r7
   1a170:	mov	r1, #32
   1a174:	bl	124e8 <memset@plt>
   1a178:	ldr	r3, [r4, #20]
   1a17c:	add	r7, r3, r7
   1a180:	str	r7, [r4, #20]
   1a184:	b	1a0f4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x44>
   1a188:	mov	r1, r7
   1a18c:	mov	r0, r4
   1a190:	bl	14ea4 <main@@Base+0x141c>
   1a194:	b	1a0f4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x44>
   1a198:	ldr	r3, [r0, #44]	; 0x2c
   1a19c:	mov	r1, #0
   1a1a0:	blx	r3
   1a1a4:	b	1a0f4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x44>
   1a1a8:	mov	r2, r6
   1a1ac:	ldr	r1, [sp, #24]
   1a1b0:	bl	1244c <memcpy@plt>
   1a1b4:	ldr	r3, [r4, #20]
   1a1b8:	add	r6, r3, r6
   1a1bc:	str	r6, [r4, #20]
   1a1c0:	ldr	r3, [r4, #20]
   1a1c4:	mov	r2, #34	; 0x22
   1a1c8:	strb	r2, [r3]
   1a1cc:	ldrb	r3, [r4, #26]
   1a1d0:	clz	r3, r3
   1a1d4:	lsr	r3, r3, #5
   1a1d8:	ldr	r1, [r4, #20]
   1a1dc:	add	r2, r1, r3
   1a1e0:	add	r2, r2, #1
   1a1e4:	str	r2, [r4, #20]
   1a1e8:	mov	r2, #58	; 0x3a
   1a1ec:	strb	r2, [r1, r3]
   1a1f0:	ldr	r3, [r4, #20]
   1a1f4:	mov	r2, #32
   1a1f8:	strb	r2, [r3]
   1a1fc:	ldrb	r3, [r4, #25]
   1a200:	ldr	r1, [r4, #20]
   1a204:	cmp	r3, #0
   1a208:	addne	r1, r1, #1
   1a20c:	str	r1, [r4, #20]
   1a210:	ldrb	r3, [r4, #27]
   1a214:	cmp	r3, #0
   1a218:	bne	1a230 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x180>
   1a21c:	mov	r1, r5
   1a220:	mov	r0, r4
   1a224:	ldr	r3, [sp, #32]
   1a228:	blx	r3
   1a22c:	pop	{r4, r5, r6, r7, r8, pc}
   1a230:	mov	r0, r5
   1a234:	bl	13b20 <main@@Base+0x98>
   1a238:	ldr	r3, [r4, #20]
   1a23c:	add	r0, r3, r0
   1a240:	str	r0, [r4, #20]
   1a244:	pop	{r4, r5, r6, r7, r8, pc}

0001a248 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   1a248:	push	{r4, r5, r6, r7, r8, lr}
   1a24c:	mov	r4, r0
   1a250:	ldr	r6, [sp, #28]
   1a254:	ldrh	r5, [r2, r3]
   1a258:	cmp	r1, #0
   1a25c:	ldrne	r3, [r0, #20]
   1a260:	addne	r2, r3, #1
   1a264:	strne	r2, [r0, #20]
   1a268:	movne	r2, #44	; 0x2c
   1a26c:	strbne	r2, [r3]
   1a270:	ldrb	r3, [r0, #25]
   1a274:	cmp	r3, #0
   1a278:	bne	1a2d0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x88>
   1a27c:	ldr	r2, [r0, #20]
   1a280:	ldr	r3, [r0, #16]
   1a284:	cmp	r2, r3
   1a288:	bcs	1a330 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xe8>
   1a28c:	ldr	r3, [r4, #20]
   1a290:	mov	r2, #34	; 0x22
   1a294:	strb	r2, [r3]
   1a298:	ldrb	r3, [r4, #26]
   1a29c:	ldr	r0, [r4, #20]
   1a2a0:	cmp	r3, #0
   1a2a4:	addeq	r0, r0, #1
   1a2a8:	str	r0, [r4, #20]
   1a2ac:	add	r3, r0, r6
   1a2b0:	ldr	r2, [r4, #16]
   1a2b4:	cmp	r2, r3
   1a2b8:	bhi	1a340 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xf8>
   1a2bc:	mov	r2, r6
   1a2c0:	ldr	r1, [sp, #24]
   1a2c4:	mov	r0, r4
   1a2c8:	bl	14dbc <main@@Base+0x1334>
   1a2cc:	b	1a358 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x110>
   1a2d0:	ldr	r3, [r0, #20]
   1a2d4:	add	r2, r3, #1
   1a2d8:	str	r2, [r0, #20]
   1a2dc:	mov	r2, #10
   1a2e0:	strb	r2, [r3]
   1a2e4:	ldrb	r3, [r0, #25]
   1a2e8:	ldr	r7, [r0, #32]
   1a2ec:	mul	r7, r7, r3
   1a2f0:	ldr	r0, [r0, #20]
   1a2f4:	add	r3, r0, r7
   1a2f8:	ldr	r2, [r4, #16]
   1a2fc:	cmp	r2, r3
   1a300:	bcc	1a320 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd8>
   1a304:	mov	r2, r7
   1a308:	mov	r1, #32
   1a30c:	bl	124e8 <memset@plt>
   1a310:	ldr	r3, [r4, #20]
   1a314:	add	r7, r3, r7
   1a318:	str	r7, [r4, #20]
   1a31c:	b	1a28c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x44>
   1a320:	mov	r1, r7
   1a324:	mov	r0, r4
   1a328:	bl	14ea4 <main@@Base+0x141c>
   1a32c:	b	1a28c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x44>
   1a330:	ldr	r3, [r0, #44]	; 0x2c
   1a334:	mov	r1, #0
   1a338:	blx	r3
   1a33c:	b	1a28c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x44>
   1a340:	mov	r2, r6
   1a344:	ldr	r1, [sp, #24]
   1a348:	bl	1244c <memcpy@plt>
   1a34c:	ldr	r3, [r4, #20]
   1a350:	add	r6, r3, r6
   1a354:	str	r6, [r4, #20]
   1a358:	ldr	r3, [r4, #20]
   1a35c:	mov	r2, #34	; 0x22
   1a360:	strb	r2, [r3]
   1a364:	ldrb	r3, [r4, #26]
   1a368:	clz	r3, r3
   1a36c:	lsr	r3, r3, #5
   1a370:	ldr	r1, [r4, #20]
   1a374:	add	r2, r1, r3
   1a378:	add	r2, r2, #1
   1a37c:	str	r2, [r4, #20]
   1a380:	mov	r2, #58	; 0x3a
   1a384:	strb	r2, [r1, r3]
   1a388:	ldr	r3, [r4, #20]
   1a38c:	mov	r2, #32
   1a390:	strb	r2, [r3]
   1a394:	ldrb	r3, [r4, #25]
   1a398:	ldr	r1, [r4, #20]
   1a39c:	cmp	r3, #0
   1a3a0:	addne	r1, r1, #1
   1a3a4:	str	r1, [r4, #20]
   1a3a8:	ldrb	r3, [r4, #27]
   1a3ac:	cmp	r3, #0
   1a3b0:	bne	1a3c8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x180>
   1a3b4:	mov	r1, r5
   1a3b8:	mov	r0, r4
   1a3bc:	ldr	r3, [sp, #32]
   1a3c0:	blx	r3
   1a3c4:	pop	{r4, r5, r6, r7, r8, pc}
   1a3c8:	mov	r0, r5
   1a3cc:	bl	13be0 <main@@Base+0x158>
   1a3d0:	ldr	r3, [r4, #20]
   1a3d4:	add	r0, r3, r0
   1a3d8:	str	r0, [r4, #20]
   1a3dc:	pop	{r4, r5, r6, r7, r8, pc}

0001a3e0 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1a3e0:	push	{r4, r5, r6, r7, r8, lr}
   1a3e4:	mov	r4, r0
   1a3e8:	ldr	r6, [sp, #28]
   1a3ec:	ldr	r5, [r2, r3]
   1a3f0:	cmp	r1, #0
   1a3f4:	ldrne	r3, [r0, #20]
   1a3f8:	addne	r2, r3, #1
   1a3fc:	strne	r2, [r0, #20]
   1a400:	movne	r2, #44	; 0x2c
   1a404:	strbne	r2, [r3]
   1a408:	ldrb	r3, [r0, #25]
   1a40c:	cmp	r3, #0
   1a410:	bne	1a468 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x88>
   1a414:	ldr	r2, [r0, #20]
   1a418:	ldr	r3, [r0, #16]
   1a41c:	cmp	r2, r3
   1a420:	bcs	1a4c8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xe8>
   1a424:	ldr	r3, [r4, #20]
   1a428:	mov	r2, #34	; 0x22
   1a42c:	strb	r2, [r3]
   1a430:	ldrb	r3, [r4, #26]
   1a434:	ldr	r0, [r4, #20]
   1a438:	cmp	r3, #0
   1a43c:	addeq	r0, r0, #1
   1a440:	str	r0, [r4, #20]
   1a444:	add	r3, r0, r6
   1a448:	ldr	r2, [r4, #16]
   1a44c:	cmp	r2, r3
   1a450:	bhi	1a4d8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xf8>
   1a454:	mov	r2, r6
   1a458:	ldr	r1, [sp, #24]
   1a45c:	mov	r0, r4
   1a460:	bl	14dbc <main@@Base+0x1334>
   1a464:	b	1a4f0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x110>
   1a468:	ldr	r3, [r0, #20]
   1a46c:	add	r2, r3, #1
   1a470:	str	r2, [r0, #20]
   1a474:	mov	r2, #10
   1a478:	strb	r2, [r3]
   1a47c:	ldrb	r3, [r0, #25]
   1a480:	ldr	r7, [r0, #32]
   1a484:	mul	r7, r7, r3
   1a488:	ldr	r0, [r0, #20]
   1a48c:	add	r3, r0, r7
   1a490:	ldr	r2, [r4, #16]
   1a494:	cmp	r2, r3
   1a498:	bcc	1a4b8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xd8>
   1a49c:	mov	r2, r7
   1a4a0:	mov	r1, #32
   1a4a4:	bl	124e8 <memset@plt>
   1a4a8:	ldr	r3, [r4, #20]
   1a4ac:	add	r7, r3, r7
   1a4b0:	str	r7, [r4, #20]
   1a4b4:	b	1a424 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x44>
   1a4b8:	mov	r1, r7
   1a4bc:	mov	r0, r4
   1a4c0:	bl	14ea4 <main@@Base+0x141c>
   1a4c4:	b	1a424 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x44>
   1a4c8:	ldr	r3, [r0, #44]	; 0x2c
   1a4cc:	mov	r1, #0
   1a4d0:	blx	r3
   1a4d4:	b	1a424 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x44>
   1a4d8:	mov	r2, r6
   1a4dc:	ldr	r1, [sp, #24]
   1a4e0:	bl	1244c <memcpy@plt>
   1a4e4:	ldr	r3, [r4, #20]
   1a4e8:	add	r6, r3, r6
   1a4ec:	str	r6, [r4, #20]
   1a4f0:	ldr	r3, [r4, #20]
   1a4f4:	mov	r2, #34	; 0x22
   1a4f8:	strb	r2, [r3]
   1a4fc:	ldrb	r3, [r4, #26]
   1a500:	clz	r3, r3
   1a504:	lsr	r3, r3, #5
   1a508:	ldr	r1, [r4, #20]
   1a50c:	add	r2, r1, r3
   1a510:	add	r2, r2, #1
   1a514:	str	r2, [r4, #20]
   1a518:	mov	r2, #58	; 0x3a
   1a51c:	strb	r2, [r1, r3]
   1a520:	ldr	r3, [r4, #20]
   1a524:	mov	r2, #32
   1a528:	strb	r2, [r3]
   1a52c:	ldrb	r3, [r4, #25]
   1a530:	ldr	r1, [r4, #20]
   1a534:	cmp	r3, #0
   1a538:	addne	r1, r1, #1
   1a53c:	str	r1, [r4, #20]
   1a540:	ldrb	r3, [r4, #27]
   1a544:	cmp	r3, #0
   1a548:	bne	1a560 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x180>
   1a54c:	mov	r1, r5
   1a550:	mov	r0, r4
   1a554:	ldr	r3, [sp, #32]
   1a558:	blx	r3
   1a55c:	pop	{r4, r5, r6, r7, r8, pc}
   1a560:	mov	r0, r5
   1a564:	bl	13d64 <main@@Base+0x2dc>
   1a568:	ldr	r3, [r4, #20]
   1a56c:	add	r0, r3, r0
   1a570:	str	r0, [r4, #20]
   1a574:	pop	{r4, r5, r6, r7, r8, pc}

0001a578 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1a578:	push	{r4, r5, r6, r7, r8, lr}
   1a57c:	mov	r4, r0
   1a580:	ldr	r5, [sp, #28]
   1a584:	ldrd	r6, [r2, r3]
   1a588:	cmp	r1, #0
   1a58c:	ldrne	r3, [r0, #20]
   1a590:	addne	r2, r3, #1
   1a594:	strne	r2, [r0, #20]
   1a598:	movne	r2, #44	; 0x2c
   1a59c:	strbne	r2, [r3]
   1a5a0:	ldrb	r3, [r0, #25]
   1a5a4:	cmp	r3, #0
   1a5a8:	bne	1a600 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x88>
   1a5ac:	ldr	r2, [r0, #20]
   1a5b0:	ldr	r3, [r0, #16]
   1a5b4:	cmp	r2, r3
   1a5b8:	bcs	1a660 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xe8>
   1a5bc:	ldr	r3, [r4, #20]
   1a5c0:	mov	r2, #34	; 0x22
   1a5c4:	strb	r2, [r3]
   1a5c8:	ldrb	r3, [r4, #26]
   1a5cc:	ldr	r0, [r4, #20]
   1a5d0:	cmp	r3, #0
   1a5d4:	addeq	r0, r0, #1
   1a5d8:	str	r0, [r4, #20]
   1a5dc:	add	r3, r0, r5
   1a5e0:	ldr	r2, [r4, #16]
   1a5e4:	cmp	r2, r3
   1a5e8:	bhi	1a670 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xf8>
   1a5ec:	mov	r2, r5
   1a5f0:	ldr	r1, [sp, #24]
   1a5f4:	mov	r0, r4
   1a5f8:	bl	14dbc <main@@Base+0x1334>
   1a5fc:	b	1a688 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x110>
   1a600:	ldr	r3, [r0, #20]
   1a604:	add	r2, r3, #1
   1a608:	str	r2, [r0, #20]
   1a60c:	mov	r2, #10
   1a610:	strb	r2, [r3]
   1a614:	ldrb	r3, [r0, #25]
   1a618:	ldr	r8, [r0, #32]
   1a61c:	mul	r8, r8, r3
   1a620:	ldr	r0, [r0, #20]
   1a624:	add	r3, r0, r8
   1a628:	ldr	r2, [r4, #16]
   1a62c:	cmp	r2, r3
   1a630:	bcc	1a650 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xd8>
   1a634:	mov	r2, r8
   1a638:	mov	r1, #32
   1a63c:	bl	124e8 <memset@plt>
   1a640:	ldr	r3, [r4, #20]
   1a644:	add	r8, r3, r8
   1a648:	str	r8, [r4, #20]
   1a64c:	b	1a5bc <flatcc_json_printer_uint64_enum_struct_field@@Base+0x44>
   1a650:	mov	r1, r8
   1a654:	mov	r0, r4
   1a658:	bl	14ea4 <main@@Base+0x141c>
   1a65c:	b	1a5bc <flatcc_json_printer_uint64_enum_struct_field@@Base+0x44>
   1a660:	ldr	r3, [r0, #44]	; 0x2c
   1a664:	mov	r1, #0
   1a668:	blx	r3
   1a66c:	b	1a5bc <flatcc_json_printer_uint64_enum_struct_field@@Base+0x44>
   1a670:	mov	r2, r5
   1a674:	ldr	r1, [sp, #24]
   1a678:	bl	1244c <memcpy@plt>
   1a67c:	ldr	r3, [r4, #20]
   1a680:	add	r5, r3, r5
   1a684:	str	r5, [r4, #20]
   1a688:	ldr	r3, [r4, #20]
   1a68c:	mov	r2, #34	; 0x22
   1a690:	strb	r2, [r3]
   1a694:	ldrb	r3, [r4, #26]
   1a698:	clz	r3, r3
   1a69c:	lsr	r3, r3, #5
   1a6a0:	ldr	r1, [r4, #20]
   1a6a4:	add	r2, r1, r3
   1a6a8:	add	r2, r2, #1
   1a6ac:	str	r2, [r4, #20]
   1a6b0:	mov	r2, #58	; 0x3a
   1a6b4:	strb	r2, [r1, r3]
   1a6b8:	ldr	r3, [r4, #20]
   1a6bc:	mov	r2, #32
   1a6c0:	strb	r2, [r3]
   1a6c4:	ldrb	r3, [r4, #25]
   1a6c8:	ldr	r2, [r4, #20]
   1a6cc:	cmp	r3, #0
   1a6d0:	addne	r2, r2, #1
   1a6d4:	str	r2, [r4, #20]
   1a6d8:	ldrb	r3, [r4, #27]
   1a6dc:	cmp	r3, #0
   1a6e0:	bne	1a6fc <flatcc_json_printer_uint64_enum_struct_field@@Base+0x184>
   1a6e4:	mov	r2, r6
   1a6e8:	mov	r3, r7
   1a6ec:	mov	r0, r4
   1a6f0:	ldr	r1, [sp, #32]
   1a6f4:	blx	r1
   1a6f8:	pop	{r4, r5, r6, r7, r8, pc}
   1a6fc:	mov	r0, r6
   1a700:	mov	r1, r7
   1a704:	bl	140a4 <main@@Base+0x61c>
   1a708:	ldr	r3, [r4, #20]
   1a70c:	add	r0, r3, r0
   1a710:	str	r0, [r4, #20]
   1a714:	pop	{r4, r5, r6, r7, r8, pc}

0001a718 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1a718:	push	{r4, r5, r6, r7, r8, lr}
   1a71c:	mov	r4, r0
   1a720:	ldr	r6, [sp, #28]
   1a724:	ldrsb	r5, [r2, r3]
   1a728:	cmp	r1, #0
   1a72c:	ldrne	r3, [r0, #20]
   1a730:	addne	r2, r3, #1
   1a734:	strne	r2, [r0, #20]
   1a738:	movne	r2, #44	; 0x2c
   1a73c:	strbne	r2, [r3]
   1a740:	ldrb	r3, [r0, #25]
   1a744:	cmp	r3, #0
   1a748:	bne	1a7a0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x88>
   1a74c:	ldr	r2, [r0, #20]
   1a750:	ldr	r3, [r0, #16]
   1a754:	cmp	r2, r3
   1a758:	bcs	1a800 <flatcc_json_printer_int8_enum_struct_field@@Base+0xe8>
   1a75c:	ldr	r3, [r4, #20]
   1a760:	mov	r2, #34	; 0x22
   1a764:	strb	r2, [r3]
   1a768:	ldrb	r3, [r4, #26]
   1a76c:	ldr	r0, [r4, #20]
   1a770:	cmp	r3, #0
   1a774:	addeq	r0, r0, #1
   1a778:	str	r0, [r4, #20]
   1a77c:	add	r3, r0, r6
   1a780:	ldr	r2, [r4, #16]
   1a784:	cmp	r2, r3
   1a788:	bhi	1a810 <flatcc_json_printer_int8_enum_struct_field@@Base+0xf8>
   1a78c:	mov	r2, r6
   1a790:	ldr	r1, [sp, #24]
   1a794:	mov	r0, r4
   1a798:	bl	14dbc <main@@Base+0x1334>
   1a79c:	b	1a828 <flatcc_json_printer_int8_enum_struct_field@@Base+0x110>
   1a7a0:	ldr	r3, [r0, #20]
   1a7a4:	add	r2, r3, #1
   1a7a8:	str	r2, [r0, #20]
   1a7ac:	mov	r2, #10
   1a7b0:	strb	r2, [r3]
   1a7b4:	ldrb	r3, [r0, #25]
   1a7b8:	ldr	r7, [r0, #32]
   1a7bc:	mul	r7, r7, r3
   1a7c0:	ldr	r0, [r0, #20]
   1a7c4:	add	r3, r0, r7
   1a7c8:	ldr	r2, [r4, #16]
   1a7cc:	cmp	r2, r3
   1a7d0:	bcc	1a7f0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
   1a7d4:	mov	r2, r7
   1a7d8:	mov	r1, #32
   1a7dc:	bl	124e8 <memset@plt>
   1a7e0:	ldr	r3, [r4, #20]
   1a7e4:	add	r7, r3, r7
   1a7e8:	str	r7, [r4, #20]
   1a7ec:	b	1a75c <flatcc_json_printer_int8_enum_struct_field@@Base+0x44>
   1a7f0:	mov	r1, r7
   1a7f4:	mov	r0, r4
   1a7f8:	bl	14ea4 <main@@Base+0x141c>
   1a7fc:	b	1a75c <flatcc_json_printer_int8_enum_struct_field@@Base+0x44>
   1a800:	ldr	r3, [r0, #44]	; 0x2c
   1a804:	mov	r1, #0
   1a808:	blx	r3
   1a80c:	b	1a75c <flatcc_json_printer_int8_enum_struct_field@@Base+0x44>
   1a810:	mov	r2, r6
   1a814:	ldr	r1, [sp, #24]
   1a818:	bl	1244c <memcpy@plt>
   1a81c:	ldr	r3, [r4, #20]
   1a820:	add	r6, r3, r6
   1a824:	str	r6, [r4, #20]
   1a828:	ldr	r3, [r4, #20]
   1a82c:	mov	r2, #34	; 0x22
   1a830:	strb	r2, [r3]
   1a834:	ldrb	r3, [r4, #26]
   1a838:	clz	r3, r3
   1a83c:	lsr	r3, r3, #5
   1a840:	ldr	r1, [r4, #20]
   1a844:	add	r2, r1, r3
   1a848:	add	r2, r2, #1
   1a84c:	str	r2, [r4, #20]
   1a850:	mov	r2, #58	; 0x3a
   1a854:	strb	r2, [r1, r3]
   1a858:	ldr	r3, [r4, #20]
   1a85c:	mov	r2, #32
   1a860:	strb	r2, [r3]
   1a864:	ldrb	r3, [r4, #25]
   1a868:	ldr	r1, [r4, #20]
   1a86c:	cmp	r3, #0
   1a870:	addne	r1, r1, #1
   1a874:	str	r1, [r4, #20]
   1a878:	ldrb	r3, [r4, #27]
   1a87c:	cmp	r3, #0
   1a880:	bne	1a898 <flatcc_json_printer_int8_enum_struct_field@@Base+0x180>
   1a884:	mov	r1, r5
   1a888:	mov	r0, r4
   1a88c:	ldr	r3, [sp, #32]
   1a890:	blx	r3
   1a894:	pop	{r4, r5, r6, r7, r8, pc}
   1a898:	mov	r0, r5
   1a89c:	bl	14728 <main@@Base+0xca0>
   1a8a0:	ldr	r3, [r4, #20]
   1a8a4:	add	r0, r3, r0
   1a8a8:	str	r0, [r4, #20]
   1a8ac:	pop	{r4, r5, r6, r7, r8, pc}

0001a8b0 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1a8b0:	push	{r4, r5, r6, r7, r8, lr}
   1a8b4:	mov	r4, r0
   1a8b8:	ldr	r6, [sp, #28]
   1a8bc:	ldrsh	r5, [r2, r3]
   1a8c0:	cmp	r1, #0
   1a8c4:	ldrne	r3, [r0, #20]
   1a8c8:	addne	r2, r3, #1
   1a8cc:	strne	r2, [r0, #20]
   1a8d0:	movne	r2, #44	; 0x2c
   1a8d4:	strbne	r2, [r3]
   1a8d8:	ldrb	r3, [r0, #25]
   1a8dc:	cmp	r3, #0
   1a8e0:	bne	1a938 <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   1a8e4:	ldr	r2, [r0, #20]
   1a8e8:	ldr	r3, [r0, #16]
   1a8ec:	cmp	r2, r3
   1a8f0:	bcs	1a998 <flatcc_json_printer_int16_enum_struct_field@@Base+0xe8>
   1a8f4:	ldr	r3, [r4, #20]
   1a8f8:	mov	r2, #34	; 0x22
   1a8fc:	strb	r2, [r3]
   1a900:	ldrb	r3, [r4, #26]
   1a904:	ldr	r0, [r4, #20]
   1a908:	cmp	r3, #0
   1a90c:	addeq	r0, r0, #1
   1a910:	str	r0, [r4, #20]
   1a914:	add	r3, r0, r6
   1a918:	ldr	r2, [r4, #16]
   1a91c:	cmp	r2, r3
   1a920:	bhi	1a9a8 <flatcc_json_printer_int16_enum_struct_field@@Base+0xf8>
   1a924:	mov	r2, r6
   1a928:	ldr	r1, [sp, #24]
   1a92c:	mov	r0, r4
   1a930:	bl	14dbc <main@@Base+0x1334>
   1a934:	b	1a9c0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x110>
   1a938:	ldr	r3, [r0, #20]
   1a93c:	add	r2, r3, #1
   1a940:	str	r2, [r0, #20]
   1a944:	mov	r2, #10
   1a948:	strb	r2, [r3]
   1a94c:	ldrb	r3, [r0, #25]
   1a950:	ldr	r7, [r0, #32]
   1a954:	mul	r7, r7, r3
   1a958:	ldr	r0, [r0, #20]
   1a95c:	add	r3, r0, r7
   1a960:	ldr	r2, [r4, #16]
   1a964:	cmp	r2, r3
   1a968:	bcc	1a988 <flatcc_json_printer_int16_enum_struct_field@@Base+0xd8>
   1a96c:	mov	r2, r7
   1a970:	mov	r1, #32
   1a974:	bl	124e8 <memset@plt>
   1a978:	ldr	r3, [r4, #20]
   1a97c:	add	r7, r3, r7
   1a980:	str	r7, [r4, #20]
   1a984:	b	1a8f4 <flatcc_json_printer_int16_enum_struct_field@@Base+0x44>
   1a988:	mov	r1, r7
   1a98c:	mov	r0, r4
   1a990:	bl	14ea4 <main@@Base+0x141c>
   1a994:	b	1a8f4 <flatcc_json_printer_int16_enum_struct_field@@Base+0x44>
   1a998:	ldr	r3, [r0, #44]	; 0x2c
   1a99c:	mov	r1, #0
   1a9a0:	blx	r3
   1a9a4:	b	1a8f4 <flatcc_json_printer_int16_enum_struct_field@@Base+0x44>
   1a9a8:	mov	r2, r6
   1a9ac:	ldr	r1, [sp, #24]
   1a9b0:	bl	1244c <memcpy@plt>
   1a9b4:	ldr	r3, [r4, #20]
   1a9b8:	add	r6, r3, r6
   1a9bc:	str	r6, [r4, #20]
   1a9c0:	ldr	r3, [r4, #20]
   1a9c4:	mov	r2, #34	; 0x22
   1a9c8:	strb	r2, [r3]
   1a9cc:	ldrb	r3, [r4, #26]
   1a9d0:	clz	r3, r3
   1a9d4:	lsr	r3, r3, #5
   1a9d8:	ldr	r1, [r4, #20]
   1a9dc:	add	r2, r1, r3
   1a9e0:	add	r2, r2, #1
   1a9e4:	str	r2, [r4, #20]
   1a9e8:	mov	r2, #58	; 0x3a
   1a9ec:	strb	r2, [r1, r3]
   1a9f0:	ldr	r3, [r4, #20]
   1a9f4:	mov	r2, #32
   1a9f8:	strb	r2, [r3]
   1a9fc:	ldrb	r3, [r4, #25]
   1aa00:	ldr	r1, [r4, #20]
   1aa04:	cmp	r3, #0
   1aa08:	addne	r1, r1, #1
   1aa0c:	str	r1, [r4, #20]
   1aa10:	ldrb	r3, [r4, #27]
   1aa14:	cmp	r3, #0
   1aa18:	bne	1aa30 <flatcc_json_printer_int16_enum_struct_field@@Base+0x180>
   1aa1c:	mov	r1, r5
   1aa20:	mov	r0, r4
   1aa24:	ldr	r3, [sp, #32]
   1aa28:	blx	r3
   1aa2c:	pop	{r4, r5, r6, r7, r8, pc}
   1aa30:	mov	r0, r5
   1aa34:	bl	14758 <main@@Base+0xcd0>
   1aa38:	ldr	r3, [r4, #20]
   1aa3c:	add	r0, r3, r0
   1aa40:	str	r0, [r4, #20]
   1aa44:	pop	{r4, r5, r6, r7, r8, pc}

0001aa48 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1aa48:	push	{r4, r5, r6, r7, r8, lr}
   1aa4c:	mov	r4, r0
   1aa50:	ldr	r6, [sp, #28]
   1aa54:	ldr	r5, [r2, r3]
   1aa58:	cmp	r1, #0
   1aa5c:	ldrne	r3, [r0, #20]
   1aa60:	addne	r2, r3, #1
   1aa64:	strne	r2, [r0, #20]
   1aa68:	movne	r2, #44	; 0x2c
   1aa6c:	strbne	r2, [r3]
   1aa70:	ldrb	r3, [r0, #25]
   1aa74:	cmp	r3, #0
   1aa78:	bne	1aad0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x88>
   1aa7c:	ldr	r2, [r0, #20]
   1aa80:	ldr	r3, [r0, #16]
   1aa84:	cmp	r2, r3
   1aa88:	bcs	1ab30 <flatcc_json_printer_int32_enum_struct_field@@Base+0xe8>
   1aa8c:	ldr	r3, [r4, #20]
   1aa90:	mov	r2, #34	; 0x22
   1aa94:	strb	r2, [r3]
   1aa98:	ldrb	r3, [r4, #26]
   1aa9c:	ldr	r0, [r4, #20]
   1aaa0:	cmp	r3, #0
   1aaa4:	addeq	r0, r0, #1
   1aaa8:	str	r0, [r4, #20]
   1aaac:	add	r3, r0, r6
   1aab0:	ldr	r2, [r4, #16]
   1aab4:	cmp	r2, r3
   1aab8:	bhi	1ab40 <flatcc_json_printer_int32_enum_struct_field@@Base+0xf8>
   1aabc:	mov	r2, r6
   1aac0:	ldr	r1, [sp, #24]
   1aac4:	mov	r0, r4
   1aac8:	bl	14dbc <main@@Base+0x1334>
   1aacc:	b	1ab58 <flatcc_json_printer_int32_enum_struct_field@@Base+0x110>
   1aad0:	ldr	r3, [r0, #20]
   1aad4:	add	r2, r3, #1
   1aad8:	str	r2, [r0, #20]
   1aadc:	mov	r2, #10
   1aae0:	strb	r2, [r3]
   1aae4:	ldrb	r3, [r0, #25]
   1aae8:	ldr	r7, [r0, #32]
   1aaec:	mul	r7, r7, r3
   1aaf0:	ldr	r0, [r0, #20]
   1aaf4:	add	r3, r0, r7
   1aaf8:	ldr	r2, [r4, #16]
   1aafc:	cmp	r2, r3
   1ab00:	bcc	1ab20 <flatcc_json_printer_int32_enum_struct_field@@Base+0xd8>
   1ab04:	mov	r2, r7
   1ab08:	mov	r1, #32
   1ab0c:	bl	124e8 <memset@plt>
   1ab10:	ldr	r3, [r4, #20]
   1ab14:	add	r7, r3, r7
   1ab18:	str	r7, [r4, #20]
   1ab1c:	b	1aa8c <flatcc_json_printer_int32_enum_struct_field@@Base+0x44>
   1ab20:	mov	r1, r7
   1ab24:	mov	r0, r4
   1ab28:	bl	14ea4 <main@@Base+0x141c>
   1ab2c:	b	1aa8c <flatcc_json_printer_int32_enum_struct_field@@Base+0x44>
   1ab30:	ldr	r3, [r0, #44]	; 0x2c
   1ab34:	mov	r1, #0
   1ab38:	blx	r3
   1ab3c:	b	1aa8c <flatcc_json_printer_int32_enum_struct_field@@Base+0x44>
   1ab40:	mov	r2, r6
   1ab44:	ldr	r1, [sp, #24]
   1ab48:	bl	1244c <memcpy@plt>
   1ab4c:	ldr	r3, [r4, #20]
   1ab50:	add	r6, r3, r6
   1ab54:	str	r6, [r4, #20]
   1ab58:	ldr	r3, [r4, #20]
   1ab5c:	mov	r2, #34	; 0x22
   1ab60:	strb	r2, [r3]
   1ab64:	ldrb	r3, [r4, #26]
   1ab68:	clz	r3, r3
   1ab6c:	lsr	r3, r3, #5
   1ab70:	ldr	r1, [r4, #20]
   1ab74:	add	r2, r1, r3
   1ab78:	add	r2, r2, #1
   1ab7c:	str	r2, [r4, #20]
   1ab80:	mov	r2, #58	; 0x3a
   1ab84:	strb	r2, [r1, r3]
   1ab88:	ldr	r3, [r4, #20]
   1ab8c:	mov	r2, #32
   1ab90:	strb	r2, [r3]
   1ab94:	ldrb	r3, [r4, #25]
   1ab98:	ldr	r1, [r4, #20]
   1ab9c:	cmp	r3, #0
   1aba0:	addne	r1, r1, #1
   1aba4:	str	r1, [r4, #20]
   1aba8:	ldrb	r3, [r4, #27]
   1abac:	cmp	r3, #0
   1abb0:	bne	1abc8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x180>
   1abb4:	mov	r1, r5
   1abb8:	mov	r0, r4
   1abbc:	ldr	r3, [sp, #32]
   1abc0:	blx	r3
   1abc4:	pop	{r4, r5, r6, r7, r8, pc}
   1abc8:	mov	r0, r5
   1abcc:	bl	14788 <main@@Base+0xd00>
   1abd0:	ldr	r3, [r4, #20]
   1abd4:	add	r0, r3, r0
   1abd8:	str	r0, [r4, #20]
   1abdc:	pop	{r4, r5, r6, r7, r8, pc}

0001abe0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1abe0:	push	{r4, r5, r6, r7, r8, lr}
   1abe4:	mov	r4, r0
   1abe8:	ldr	r5, [sp, #28]
   1abec:	ldrd	r6, [r2, r3]
   1abf0:	cmp	r1, #0
   1abf4:	ldrne	r3, [r0, #20]
   1abf8:	addne	r2, r3, #1
   1abfc:	strne	r2, [r0, #20]
   1ac00:	movne	r2, #44	; 0x2c
   1ac04:	strbne	r2, [r3]
   1ac08:	ldrb	r3, [r0, #25]
   1ac0c:	cmp	r3, #0
   1ac10:	bne	1ac68 <flatcc_json_printer_int64_enum_struct_field@@Base+0x88>
   1ac14:	ldr	r2, [r0, #20]
   1ac18:	ldr	r3, [r0, #16]
   1ac1c:	cmp	r2, r3
   1ac20:	bcs	1acc8 <flatcc_json_printer_int64_enum_struct_field@@Base+0xe8>
   1ac24:	ldr	r3, [r4, #20]
   1ac28:	mov	r2, #34	; 0x22
   1ac2c:	strb	r2, [r3]
   1ac30:	ldrb	r3, [r4, #26]
   1ac34:	ldr	r0, [r4, #20]
   1ac38:	cmp	r3, #0
   1ac3c:	addeq	r0, r0, #1
   1ac40:	str	r0, [r4, #20]
   1ac44:	add	r3, r0, r5
   1ac48:	ldr	r2, [r4, #16]
   1ac4c:	cmp	r2, r3
   1ac50:	bhi	1acd8 <flatcc_json_printer_int64_enum_struct_field@@Base+0xf8>
   1ac54:	mov	r2, r5
   1ac58:	ldr	r1, [sp, #24]
   1ac5c:	mov	r0, r4
   1ac60:	bl	14dbc <main@@Base+0x1334>
   1ac64:	b	1acf0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x110>
   1ac68:	ldr	r3, [r0, #20]
   1ac6c:	add	r2, r3, #1
   1ac70:	str	r2, [r0, #20]
   1ac74:	mov	r2, #10
   1ac78:	strb	r2, [r3]
   1ac7c:	ldrb	r3, [r0, #25]
   1ac80:	ldr	r8, [r0, #32]
   1ac84:	mul	r8, r8, r3
   1ac88:	ldr	r0, [r0, #20]
   1ac8c:	add	r3, r0, r8
   1ac90:	ldr	r2, [r4, #16]
   1ac94:	cmp	r2, r3
   1ac98:	bcc	1acb8 <flatcc_json_printer_int64_enum_struct_field@@Base+0xd8>
   1ac9c:	mov	r2, r8
   1aca0:	mov	r1, #32
   1aca4:	bl	124e8 <memset@plt>
   1aca8:	ldr	r3, [r4, #20]
   1acac:	add	r8, r3, r8
   1acb0:	str	r8, [r4, #20]
   1acb4:	b	1ac24 <flatcc_json_printer_int64_enum_struct_field@@Base+0x44>
   1acb8:	mov	r1, r8
   1acbc:	mov	r0, r4
   1acc0:	bl	14ea4 <main@@Base+0x141c>
   1acc4:	b	1ac24 <flatcc_json_printer_int64_enum_struct_field@@Base+0x44>
   1acc8:	ldr	r3, [r0, #44]	; 0x2c
   1accc:	mov	r1, #0
   1acd0:	blx	r3
   1acd4:	b	1ac24 <flatcc_json_printer_int64_enum_struct_field@@Base+0x44>
   1acd8:	mov	r2, r5
   1acdc:	ldr	r1, [sp, #24]
   1ace0:	bl	1244c <memcpy@plt>
   1ace4:	ldr	r3, [r4, #20]
   1ace8:	add	r5, r3, r5
   1acec:	str	r5, [r4, #20]
   1acf0:	ldr	r3, [r4, #20]
   1acf4:	mov	r2, #34	; 0x22
   1acf8:	strb	r2, [r3]
   1acfc:	ldrb	r3, [r4, #26]
   1ad00:	clz	r3, r3
   1ad04:	lsr	r3, r3, #5
   1ad08:	ldr	r1, [r4, #20]
   1ad0c:	add	r2, r1, r3
   1ad10:	add	r2, r2, #1
   1ad14:	str	r2, [r4, #20]
   1ad18:	mov	r2, #58	; 0x3a
   1ad1c:	strb	r2, [r1, r3]
   1ad20:	ldr	r3, [r4, #20]
   1ad24:	mov	r2, #32
   1ad28:	strb	r2, [r3]
   1ad2c:	ldrb	r3, [r4, #25]
   1ad30:	ldr	r2, [r4, #20]
   1ad34:	cmp	r3, #0
   1ad38:	addne	r2, r2, #1
   1ad3c:	str	r2, [r4, #20]
   1ad40:	ldrb	r3, [r4, #27]
   1ad44:	cmp	r3, #0
   1ad48:	bne	1ad64 <flatcc_json_printer_int64_enum_struct_field@@Base+0x184>
   1ad4c:	mov	r2, r6
   1ad50:	mov	r3, r7
   1ad54:	mov	r0, r4
   1ad58:	ldr	r1, [sp, #32]
   1ad5c:	blx	r1
   1ad60:	pop	{r4, r5, r6, r7, r8, pc}
   1ad64:	mov	r0, r6
   1ad68:	mov	r1, r7
   1ad6c:	bl	147b0 <main@@Base+0xd28>
   1ad70:	ldr	r3, [r4, #20]
   1ad74:	add	r0, r3, r0
   1ad78:	str	r0, [r4, #20]
   1ad7c:	pop	{r4, r5, r6, r7, r8, pc}

0001ad80 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1ad80:	push	{r4, r5, r6, r7, r8, lr}
   1ad84:	mov	r4, r0
   1ad88:	ldr	r6, [sp, #28]
   1ad8c:	ldrb	r5, [r2, r3]
   1ad90:	cmp	r1, #0
   1ad94:	ldrne	r3, [r0, #20]
   1ad98:	addne	r2, r3, #1
   1ad9c:	strne	r2, [r0, #20]
   1ada0:	movne	r2, #44	; 0x2c
   1ada4:	strbne	r2, [r3]
   1ada8:	ldrb	r3, [r0, #25]
   1adac:	cmp	r3, #0
   1adb0:	bne	1ae08 <flatcc_json_printer_bool_enum_struct_field@@Base+0x88>
   1adb4:	ldr	r2, [r0, #20]
   1adb8:	ldr	r3, [r0, #16]
   1adbc:	cmp	r2, r3
   1adc0:	bcs	1ae68 <flatcc_json_printer_bool_enum_struct_field@@Base+0xe8>
   1adc4:	ldr	r3, [r4, #20]
   1adc8:	mov	r2, #34	; 0x22
   1adcc:	strb	r2, [r3]
   1add0:	ldrb	r3, [r4, #26]
   1add4:	ldr	r0, [r4, #20]
   1add8:	cmp	r3, #0
   1addc:	addeq	r0, r0, #1
   1ade0:	str	r0, [r4, #20]
   1ade4:	add	r3, r0, r6
   1ade8:	ldr	r2, [r4, #16]
   1adec:	cmp	r2, r3
   1adf0:	bhi	1ae78 <flatcc_json_printer_bool_enum_struct_field@@Base+0xf8>
   1adf4:	mov	r2, r6
   1adf8:	ldr	r1, [sp, #24]
   1adfc:	mov	r0, r4
   1ae00:	bl	14dbc <main@@Base+0x1334>
   1ae04:	b	1ae90 <flatcc_json_printer_bool_enum_struct_field@@Base+0x110>
   1ae08:	ldr	r3, [r0, #20]
   1ae0c:	add	r2, r3, #1
   1ae10:	str	r2, [r0, #20]
   1ae14:	mov	r2, #10
   1ae18:	strb	r2, [r3]
   1ae1c:	ldrb	r3, [r0, #25]
   1ae20:	ldr	r7, [r0, #32]
   1ae24:	mul	r7, r7, r3
   1ae28:	ldr	r0, [r0, #20]
   1ae2c:	add	r3, r0, r7
   1ae30:	ldr	r2, [r4, #16]
   1ae34:	cmp	r2, r3
   1ae38:	bcc	1ae58 <flatcc_json_printer_bool_enum_struct_field@@Base+0xd8>
   1ae3c:	mov	r2, r7
   1ae40:	mov	r1, #32
   1ae44:	bl	124e8 <memset@plt>
   1ae48:	ldr	r3, [r4, #20]
   1ae4c:	add	r7, r3, r7
   1ae50:	str	r7, [r4, #20]
   1ae54:	b	1adc4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x44>
   1ae58:	mov	r1, r7
   1ae5c:	mov	r0, r4
   1ae60:	bl	14ea4 <main@@Base+0x141c>
   1ae64:	b	1adc4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x44>
   1ae68:	ldr	r3, [r0, #44]	; 0x2c
   1ae6c:	mov	r1, #0
   1ae70:	blx	r3
   1ae74:	b	1adc4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x44>
   1ae78:	mov	r2, r6
   1ae7c:	ldr	r1, [sp, #24]
   1ae80:	bl	1244c <memcpy@plt>
   1ae84:	ldr	r3, [r4, #20]
   1ae88:	add	r6, r3, r6
   1ae8c:	str	r6, [r4, #20]
   1ae90:	ldr	r3, [r4, #20]
   1ae94:	mov	r2, #34	; 0x22
   1ae98:	strb	r2, [r3]
   1ae9c:	ldrb	r3, [r4, #26]
   1aea0:	clz	r3, r3
   1aea4:	lsr	r3, r3, #5
   1aea8:	ldr	r1, [r4, #20]
   1aeac:	add	r2, r1, r3
   1aeb0:	add	r2, r2, #1
   1aeb4:	str	r2, [r4, #20]
   1aeb8:	mov	r2, #58	; 0x3a
   1aebc:	strb	r2, [r1, r3]
   1aec0:	ldr	r3, [r4, #20]
   1aec4:	mov	r2, #32
   1aec8:	strb	r2, [r3]
   1aecc:	ldrb	r3, [r4, #25]
   1aed0:	ldr	r1, [r4, #20]
   1aed4:	cmp	r3, #0
   1aed8:	addne	r1, r1, #1
   1aedc:	str	r1, [r4, #20]
   1aee0:	ldrb	r3, [r4, #27]
   1aee4:	cmp	r3, #0
   1aee8:	bne	1af00 <flatcc_json_printer_bool_enum_struct_field@@Base+0x180>
   1aeec:	mov	r1, r5
   1aef0:	mov	r0, r4
   1aef4:	ldr	r3, [sp, #32]
   1aef8:	blx	r3
   1aefc:	pop	{r4, r5, r6, r7, r8, pc}
   1af00:	mov	r0, r5
   1af04:	bl	14e6c <main@@Base+0x13e4>
   1af08:	ldr	r3, [r4, #20]
   1af0c:	add	r0, r3, r0
   1af10:	str	r0, [r4, #20]
   1af14:	pop	{r4, r5, r6, r7, r8, pc}

0001af18 <flatcc_json_printer_utype_vector_field@@Base>:
   1af18:	add	r2, r2, #2
   1af1c:	lsl	r2, r2, #1
   1af20:	ldr	ip, [r1, #8]
   1af24:	cmp	ip, r2
   1af28:	bxle	lr
   1af2c:	ldr	ip, [r1, #4]
   1af30:	ldrh	ip, [ip, r2]
   1af34:	cmp	ip, #0
   1af38:	bxeq	lr
   1af3c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af40:	ldr	r5, [r1]
   1af44:	adds	lr, r5, ip
   1af48:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af4c:	ldr	r2, [r1, #16]
   1af50:	add	r4, r2, #1
   1af54:	str	r4, [r1, #16]
   1af58:	cmp	r2, #0
   1af5c:	ldrne	r2, [r0, #20]
   1af60:	addne	r1, r2, #1
   1af64:	strne	r1, [r0, #20]
   1af68:	movne	r1, #44	; 0x2c
   1af6c:	strbne	r1, [r2]
   1af70:	mov	r1, r3
   1af74:	mov	r4, r0
   1af78:	ldr	r3, [r5, ip]
   1af7c:	add	r8, lr, r3
   1af80:	ldr	r7, [lr, r3]
   1af84:	ldr	r2, [sp, #40]	; 0x28
   1af88:	bl	15408 <main@@Base+0x1980>
   1af8c:	ldr	r3, [r4, #32]
   1af90:	add	r3, r3, #1
   1af94:	str	r3, [r4, #32]
   1af98:	ldr	r3, [r4, #20]
   1af9c:	add	r2, r3, #1
   1afa0:	str	r2, [r4, #20]
   1afa4:	mov	r2, #91	; 0x5b
   1afa8:	strb	r2, [r3]
   1afac:	cmp	r7, #0
   1afb0:	beq	1b0f8 <flatcc_json_printer_utype_vector_field@@Base+0x1e0>
   1afb4:	ldrb	r3, [r4, #25]
   1afb8:	cmp	r3, #0
   1afbc:	bne	1b008 <flatcc_json_printer_utype_vector_field@@Base+0xf0>
   1afc0:	ldr	r2, [r4, #20]
   1afc4:	ldr	r3, [r4, #16]
   1afc8:	cmp	r2, r3
   1afcc:	bcs	1b028 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   1afd0:	ldr	r1, [r4, #20]
   1afd4:	ldrb	r0, [r8, #4]
   1afd8:	bl	13b20 <main@@Base+0x98>
   1afdc:	ldr	r3, [r4, #20]
   1afe0:	add	r0, r3, r0
   1afe4:	str	r0, [r4, #20]
   1afe8:	add	r5, r8, #5
   1afec:	cmp	r7, #1
   1aff0:	beq	1b0f8 <flatcc_json_printer_utype_vector_field@@Base+0x1e0>
   1aff4:	mov	r9, #44	; 0x2c
   1aff8:	mov	sl, #10
   1affc:	mov	fp, #0
   1b000:	add	r7, r7, #4
   1b004:	b	1b0a8 <flatcc_json_printer_utype_vector_field@@Base+0x190>
   1b008:	ldr	r3, [r4, #20]
   1b00c:	add	r2, r3, #1
   1b010:	str	r2, [r4, #20]
   1b014:	mov	r2, #10
   1b018:	strb	r2, [r3]
   1b01c:	mov	r0, r4
   1b020:	bl	14f50 <main@@Base+0x14c8>
   1b024:	b	1afd0 <flatcc_json_printer_utype_vector_field@@Base+0xb8>
   1b028:	ldr	r3, [r4, #44]	; 0x2c
   1b02c:	mov	r1, #0
   1b030:	mov	r0, r4
   1b034:	blx	r3
   1b038:	b	1afd0 <flatcc_json_printer_utype_vector_field@@Base+0xb8>
   1b03c:	ldr	r3, [r4, #20]
   1b040:	add	r2, r3, #1
   1b044:	str	r2, [r4, #20]
   1b048:	strb	sl, [r3]
   1b04c:	ldrb	r3, [r4, #25]
   1b050:	ldr	r6, [r4, #32]
   1b054:	mul	r6, r6, r3
   1b058:	ldr	r0, [r4, #20]
   1b05c:	add	r3, r0, r6
   1b060:	ldr	r2, [r4, #16]
   1b064:	cmp	r2, r3
   1b068:	bcc	1b0e8 <flatcc_json_printer_utype_vector_field@@Base+0x1d0>
   1b06c:	mov	r2, r6
   1b070:	mov	r1, #32
   1b074:	bl	124e8 <memset@plt>
   1b078:	ldr	r3, [r4, #20]
   1b07c:	add	r6, r3, r6
   1b080:	str	r6, [r4, #20]
   1b084:	ldr	r1, [r4, #20]
   1b088:	ldrb	r0, [r5], #1
   1b08c:	bl	13b20 <main@@Base+0x98>
   1b090:	ldr	r3, [r4, #20]
   1b094:	add	r0, r3, r0
   1b098:	str	r0, [r4, #20]
   1b09c:	sub	r3, r7, r5
   1b0a0:	cmn	r8, r3
   1b0a4:	beq	1b0f8 <flatcc_json_printer_utype_vector_field@@Base+0x1e0>
   1b0a8:	ldr	r3, [r4, #20]
   1b0ac:	add	r2, r3, #1
   1b0b0:	str	r2, [r4, #20]
   1b0b4:	strb	r9, [r3]
   1b0b8:	ldrb	r3, [r4, #25]
   1b0bc:	cmp	r3, #0
   1b0c0:	bne	1b03c <flatcc_json_printer_utype_vector_field@@Base+0x124>
   1b0c4:	ldr	r2, [r4, #20]
   1b0c8:	ldr	r3, [r4, #16]
   1b0cc:	cmp	r2, r3
   1b0d0:	bcc	1b084 <flatcc_json_printer_utype_vector_field@@Base+0x16c>
   1b0d4:	ldr	r3, [r4, #44]	; 0x2c
   1b0d8:	mov	r1, fp
   1b0dc:	mov	r0, r4
   1b0e0:	blx	r3
   1b0e4:	b	1b084 <flatcc_json_printer_utype_vector_field@@Base+0x16c>
   1b0e8:	mov	r1, r6
   1b0ec:	mov	r0, r4
   1b0f0:	bl	14ea4 <main@@Base+0x141c>
   1b0f4:	b	1b084 <flatcc_json_printer_utype_vector_field@@Base+0x16c>
   1b0f8:	ldrb	r3, [r4, #25]
   1b0fc:	cmp	r3, #0
   1b100:	bne	1b11c <flatcc_json_printer_utype_vector_field@@Base+0x204>
   1b104:	ldr	r3, [r4, #20]
   1b108:	add	r2, r3, #1
   1b10c:	str	r2, [r4, #20]
   1b110:	mov	r2, #93	; 0x5d
   1b114:	strb	r2, [r3]
   1b118:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b11c:	ldr	r3, [r4, #20]
   1b120:	add	r2, r3, #1
   1b124:	str	r2, [r4, #20]
   1b128:	mov	r2, #10
   1b12c:	strb	r2, [r3]
   1b130:	ldr	r5, [r4, #32]
   1b134:	sub	r5, r5, #1
   1b138:	str	r5, [r4, #32]
   1b13c:	ldrb	r3, [r4, #25]
   1b140:	mul	r5, r5, r3
   1b144:	ldr	r0, [r4, #20]
   1b148:	add	r3, r0, r5
   1b14c:	ldr	r2, [r4, #16]
   1b150:	cmp	r2, r3
   1b154:	bcc	1b174 <flatcc_json_printer_utype_vector_field@@Base+0x25c>
   1b158:	mov	r2, r5
   1b15c:	mov	r1, #32
   1b160:	bl	124e8 <memset@plt>
   1b164:	ldr	r3, [r4, #20]
   1b168:	add	r5, r3, r5
   1b16c:	str	r5, [r4, #20]
   1b170:	b	1b104 <flatcc_json_printer_utype_vector_field@@Base+0x1ec>
   1b174:	mov	r1, r5
   1b178:	mov	r0, r4
   1b17c:	bl	14ea4 <main@@Base+0x141c>
   1b180:	b	1b104 <flatcc_json_printer_utype_vector_field@@Base+0x1ec>

0001b184 <flatcc_json_printer_uint8_vector_field@@Base>:
   1b184:	add	r2, r2, #2
   1b188:	lsl	r2, r2, #1
   1b18c:	ldr	ip, [r1, #8]
   1b190:	cmp	ip, r2
   1b194:	bxle	lr
   1b198:	ldr	ip, [r1, #4]
   1b19c:	ldrh	ip, [ip, r2]
   1b1a0:	cmp	ip, #0
   1b1a4:	bxeq	lr
   1b1a8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1ac:	ldr	r5, [r1]
   1b1b0:	adds	lr, r5, ip
   1b1b4:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1b8:	ldr	r2, [r1, #16]
   1b1bc:	add	r4, r2, #1
   1b1c0:	str	r4, [r1, #16]
   1b1c4:	cmp	r2, #0
   1b1c8:	ldrne	r2, [r0, #20]
   1b1cc:	addne	r1, r2, #1
   1b1d0:	strne	r1, [r0, #20]
   1b1d4:	movne	r1, #44	; 0x2c
   1b1d8:	strbne	r1, [r2]
   1b1dc:	mov	r1, r3
   1b1e0:	mov	r4, r0
   1b1e4:	ldr	r3, [r5, ip]
   1b1e8:	add	r8, lr, r3
   1b1ec:	ldr	r7, [lr, r3]
   1b1f0:	ldr	r2, [sp, #40]	; 0x28
   1b1f4:	bl	15408 <main@@Base+0x1980>
   1b1f8:	ldr	r3, [r4, #32]
   1b1fc:	add	r3, r3, #1
   1b200:	str	r3, [r4, #32]
   1b204:	ldr	r3, [r4, #20]
   1b208:	add	r2, r3, #1
   1b20c:	str	r2, [r4, #20]
   1b210:	mov	r2, #91	; 0x5b
   1b214:	strb	r2, [r3]
   1b218:	cmp	r7, #0
   1b21c:	beq	1b364 <flatcc_json_printer_uint8_vector_field@@Base+0x1e0>
   1b220:	ldrb	r3, [r4, #25]
   1b224:	cmp	r3, #0
   1b228:	bne	1b274 <flatcc_json_printer_uint8_vector_field@@Base+0xf0>
   1b22c:	ldr	r2, [r4, #20]
   1b230:	ldr	r3, [r4, #16]
   1b234:	cmp	r2, r3
   1b238:	bcs	1b294 <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   1b23c:	ldr	r1, [r4, #20]
   1b240:	ldrb	r0, [r8, #4]
   1b244:	bl	13b20 <main@@Base+0x98>
   1b248:	ldr	r3, [r4, #20]
   1b24c:	add	r0, r3, r0
   1b250:	str	r0, [r4, #20]
   1b254:	add	r5, r8, #5
   1b258:	cmp	r7, #1
   1b25c:	beq	1b364 <flatcc_json_printer_uint8_vector_field@@Base+0x1e0>
   1b260:	mov	r9, #44	; 0x2c
   1b264:	mov	sl, #10
   1b268:	mov	fp, #0
   1b26c:	add	r7, r7, #4
   1b270:	b	1b314 <flatcc_json_printer_uint8_vector_field@@Base+0x190>
   1b274:	ldr	r3, [r4, #20]
   1b278:	add	r2, r3, #1
   1b27c:	str	r2, [r4, #20]
   1b280:	mov	r2, #10
   1b284:	strb	r2, [r3]
   1b288:	mov	r0, r4
   1b28c:	bl	14f50 <main@@Base+0x14c8>
   1b290:	b	1b23c <flatcc_json_printer_uint8_vector_field@@Base+0xb8>
   1b294:	ldr	r3, [r4, #44]	; 0x2c
   1b298:	mov	r1, #0
   1b29c:	mov	r0, r4
   1b2a0:	blx	r3
   1b2a4:	b	1b23c <flatcc_json_printer_uint8_vector_field@@Base+0xb8>
   1b2a8:	ldr	r3, [r4, #20]
   1b2ac:	add	r2, r3, #1
   1b2b0:	str	r2, [r4, #20]
   1b2b4:	strb	sl, [r3]
   1b2b8:	ldrb	r3, [r4, #25]
   1b2bc:	ldr	r6, [r4, #32]
   1b2c0:	mul	r6, r6, r3
   1b2c4:	ldr	r0, [r4, #20]
   1b2c8:	add	r3, r0, r6
   1b2cc:	ldr	r2, [r4, #16]
   1b2d0:	cmp	r2, r3
   1b2d4:	bcc	1b354 <flatcc_json_printer_uint8_vector_field@@Base+0x1d0>
   1b2d8:	mov	r2, r6
   1b2dc:	mov	r1, #32
   1b2e0:	bl	124e8 <memset@plt>
   1b2e4:	ldr	r3, [r4, #20]
   1b2e8:	add	r6, r3, r6
   1b2ec:	str	r6, [r4, #20]
   1b2f0:	ldr	r1, [r4, #20]
   1b2f4:	ldrb	r0, [r5], #1
   1b2f8:	bl	13b20 <main@@Base+0x98>
   1b2fc:	ldr	r3, [r4, #20]
   1b300:	add	r0, r3, r0
   1b304:	str	r0, [r4, #20]
   1b308:	sub	r3, r7, r5
   1b30c:	cmn	r8, r3
   1b310:	beq	1b364 <flatcc_json_printer_uint8_vector_field@@Base+0x1e0>
   1b314:	ldr	r3, [r4, #20]
   1b318:	add	r2, r3, #1
   1b31c:	str	r2, [r4, #20]
   1b320:	strb	r9, [r3]
   1b324:	ldrb	r3, [r4, #25]
   1b328:	cmp	r3, #0
   1b32c:	bne	1b2a8 <flatcc_json_printer_uint8_vector_field@@Base+0x124>
   1b330:	ldr	r2, [r4, #20]
   1b334:	ldr	r3, [r4, #16]
   1b338:	cmp	r2, r3
   1b33c:	bcc	1b2f0 <flatcc_json_printer_uint8_vector_field@@Base+0x16c>
   1b340:	ldr	r3, [r4, #44]	; 0x2c
   1b344:	mov	r1, fp
   1b348:	mov	r0, r4
   1b34c:	blx	r3
   1b350:	b	1b2f0 <flatcc_json_printer_uint8_vector_field@@Base+0x16c>
   1b354:	mov	r1, r6
   1b358:	mov	r0, r4
   1b35c:	bl	14ea4 <main@@Base+0x141c>
   1b360:	b	1b2f0 <flatcc_json_printer_uint8_vector_field@@Base+0x16c>
   1b364:	ldrb	r3, [r4, #25]
   1b368:	cmp	r3, #0
   1b36c:	bne	1b388 <flatcc_json_printer_uint8_vector_field@@Base+0x204>
   1b370:	ldr	r3, [r4, #20]
   1b374:	add	r2, r3, #1
   1b378:	str	r2, [r4, #20]
   1b37c:	mov	r2, #93	; 0x5d
   1b380:	strb	r2, [r3]
   1b384:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b388:	ldr	r3, [r4, #20]
   1b38c:	add	r2, r3, #1
   1b390:	str	r2, [r4, #20]
   1b394:	mov	r2, #10
   1b398:	strb	r2, [r3]
   1b39c:	ldr	r5, [r4, #32]
   1b3a0:	sub	r5, r5, #1
   1b3a4:	str	r5, [r4, #32]
   1b3a8:	ldrb	r3, [r4, #25]
   1b3ac:	mul	r5, r5, r3
   1b3b0:	ldr	r0, [r4, #20]
   1b3b4:	add	r3, r0, r5
   1b3b8:	ldr	r2, [r4, #16]
   1b3bc:	cmp	r2, r3
   1b3c0:	bcc	1b3e0 <flatcc_json_printer_uint8_vector_field@@Base+0x25c>
   1b3c4:	mov	r2, r5
   1b3c8:	mov	r1, #32
   1b3cc:	bl	124e8 <memset@plt>
   1b3d0:	ldr	r3, [r4, #20]
   1b3d4:	add	r5, r3, r5
   1b3d8:	str	r5, [r4, #20]
   1b3dc:	b	1b370 <flatcc_json_printer_uint8_vector_field@@Base+0x1ec>
   1b3e0:	mov	r1, r5
   1b3e4:	mov	r0, r4
   1b3e8:	bl	14ea4 <main@@Base+0x141c>
   1b3ec:	b	1b370 <flatcc_json_printer_uint8_vector_field@@Base+0x1ec>

0001b3f0 <flatcc_json_printer_uint16_vector_field@@Base>:
   1b3f0:	add	r2, r2, #2
   1b3f4:	lsl	r2, r2, #1
   1b3f8:	ldr	ip, [r1, #8]
   1b3fc:	cmp	ip, r2
   1b400:	bxle	lr
   1b404:	ldr	ip, [r1, #4]
   1b408:	ldrh	ip, [ip, r2]
   1b40c:	cmp	ip, #0
   1b410:	bxeq	lr
   1b414:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b418:	ldr	r5, [r1]
   1b41c:	adds	lr, r5, ip
   1b420:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b424:	ldr	r2, [r1, #16]
   1b428:	add	r4, r2, #1
   1b42c:	str	r4, [r1, #16]
   1b430:	cmp	r2, #0
   1b434:	ldrne	r2, [r0, #20]
   1b438:	addne	r1, r2, #1
   1b43c:	strne	r1, [r0, #20]
   1b440:	movne	r1, #44	; 0x2c
   1b444:	strbne	r1, [r2]
   1b448:	mov	r1, r3
   1b44c:	mov	r4, r0
   1b450:	ldr	r3, [r5, ip]
   1b454:	add	r6, lr, r3
   1b458:	ldr	r7, [lr, r3]
   1b45c:	ldr	r2, [sp, #40]	; 0x28
   1b460:	bl	15408 <main@@Base+0x1980>
   1b464:	ldr	r3, [r4, #32]
   1b468:	add	r3, r3, #1
   1b46c:	str	r3, [r4, #32]
   1b470:	ldr	r3, [r4, #20]
   1b474:	add	r2, r3, #1
   1b478:	str	r2, [r4, #20]
   1b47c:	mov	r2, #91	; 0x5b
   1b480:	strb	r2, [r3]
   1b484:	cmp	r7, #0
   1b488:	beq	1b5d8 <flatcc_json_printer_uint16_vector_field@@Base+0x1e8>
   1b48c:	ldrb	r3, [r4, #25]
   1b490:	cmp	r3, #0
   1b494:	bne	1b4e4 <flatcc_json_printer_uint16_vector_field@@Base+0xf4>
   1b498:	ldr	r2, [r4, #20]
   1b49c:	ldr	r3, [r4, #16]
   1b4a0:	cmp	r2, r3
   1b4a4:	bcs	1b504 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   1b4a8:	ldr	r1, [r4, #20]
   1b4ac:	ldrh	r0, [r6, #4]
   1b4b0:	bl	13be0 <main@@Base+0x158>
   1b4b4:	ldr	r3, [r4, #20]
   1b4b8:	add	r0, r3, r0
   1b4bc:	str	r0, [r4, #20]
   1b4c0:	add	r6, r6, #6
   1b4c4:	sub	r5, r7, #2
   1b4c8:	cmp	r7, #1
   1b4cc:	beq	1b5d8 <flatcc_json_printer_uint16_vector_field@@Base+0x1e8>
   1b4d0:	mov	r7, #44	; 0x2c
   1b4d4:	mov	r9, #0
   1b4d8:	mov	r8, #10
   1b4dc:	mov	sl, #32
   1b4e0:	b	1b588 <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   1b4e4:	ldr	r3, [r4, #20]
   1b4e8:	add	r2, r3, #1
   1b4ec:	str	r2, [r4, #20]
   1b4f0:	mov	r2, #10
   1b4f4:	strb	r2, [r3]
   1b4f8:	mov	r0, r4
   1b4fc:	bl	14f50 <main@@Base+0x14c8>
   1b500:	b	1b4a8 <flatcc_json_printer_uint16_vector_field@@Base+0xb8>
   1b504:	ldr	r3, [r4, #44]	; 0x2c
   1b508:	mov	r1, #0
   1b50c:	mov	r0, r4
   1b510:	blx	r3
   1b514:	b	1b4a8 <flatcc_json_printer_uint16_vector_field@@Base+0xb8>
   1b518:	ldr	r3, [r4, #20]
   1b51c:	add	r2, r3, #1
   1b520:	str	r2, [r4, #20]
   1b524:	strb	r8, [r3]
   1b528:	ldrb	r3, [r4, #25]
   1b52c:	ldr	fp, [r4, #32]
   1b530:	mul	fp, fp, r3
   1b534:	ldr	r0, [r4, #20]
   1b538:	add	r3, r0, fp
   1b53c:	ldr	r2, [r4, #16]
   1b540:	cmp	r2, r3
   1b544:	bcc	1b5c8 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   1b548:	mov	r2, fp
   1b54c:	mov	r1, sl
   1b550:	bl	124e8 <memset@plt>
   1b554:	ldr	r3, [r4, #20]
   1b558:	add	fp, r3, fp
   1b55c:	str	fp, [r4, #20]
   1b560:	ldr	r1, [r4, #20]
   1b564:	ldrh	r0, [r6], #2
   1b568:	bl	13be0 <main@@Base+0x158>
   1b56c:	ldr	r3, [r4, #20]
   1b570:	add	r0, r3, r0
   1b574:	str	r0, [r4, #20]
   1b578:	sub	r3, r5, #1
   1b57c:	cmp	r5, #0
   1b580:	beq	1b5d8 <flatcc_json_printer_uint16_vector_field@@Base+0x1e8>
   1b584:	mov	r5, r3
   1b588:	ldr	r3, [r4, #20]
   1b58c:	add	r2, r3, #1
   1b590:	str	r2, [r4, #20]
   1b594:	strb	r7, [r3]
   1b598:	ldrb	r3, [r4, #25]
   1b59c:	cmp	r3, #0
   1b5a0:	bne	1b518 <flatcc_json_printer_uint16_vector_field@@Base+0x128>
   1b5a4:	ldr	r2, [r4, #20]
   1b5a8:	ldr	r3, [r4, #16]
   1b5ac:	cmp	r2, r3
   1b5b0:	bcc	1b560 <flatcc_json_printer_uint16_vector_field@@Base+0x170>
   1b5b4:	ldr	r3, [r4, #44]	; 0x2c
   1b5b8:	mov	r1, r9
   1b5bc:	mov	r0, r4
   1b5c0:	blx	r3
   1b5c4:	b	1b560 <flatcc_json_printer_uint16_vector_field@@Base+0x170>
   1b5c8:	mov	r1, fp
   1b5cc:	mov	r0, r4
   1b5d0:	bl	14ea4 <main@@Base+0x141c>
   1b5d4:	b	1b560 <flatcc_json_printer_uint16_vector_field@@Base+0x170>
   1b5d8:	ldrb	r3, [r4, #25]
   1b5dc:	cmp	r3, #0
   1b5e0:	bne	1b5fc <flatcc_json_printer_uint16_vector_field@@Base+0x20c>
   1b5e4:	ldr	r3, [r4, #20]
   1b5e8:	add	r2, r3, #1
   1b5ec:	str	r2, [r4, #20]
   1b5f0:	mov	r2, #93	; 0x5d
   1b5f4:	strb	r2, [r3]
   1b5f8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5fc:	ldr	r3, [r4, #20]
   1b600:	add	r2, r3, #1
   1b604:	str	r2, [r4, #20]
   1b608:	mov	r2, #10
   1b60c:	strb	r2, [r3]
   1b610:	ldr	r5, [r4, #32]
   1b614:	sub	r5, r5, #1
   1b618:	str	r5, [r4, #32]
   1b61c:	ldrb	r3, [r4, #25]
   1b620:	mul	r5, r5, r3
   1b624:	ldr	r0, [r4, #20]
   1b628:	add	r3, r0, r5
   1b62c:	ldr	r2, [r4, #16]
   1b630:	cmp	r2, r3
   1b634:	bcc	1b654 <flatcc_json_printer_uint16_vector_field@@Base+0x264>
   1b638:	mov	r2, r5
   1b63c:	mov	r1, #32
   1b640:	bl	124e8 <memset@plt>
   1b644:	ldr	r3, [r4, #20]
   1b648:	add	r5, r3, r5
   1b64c:	str	r5, [r4, #20]
   1b650:	b	1b5e4 <flatcc_json_printer_uint16_vector_field@@Base+0x1f4>
   1b654:	mov	r1, r5
   1b658:	mov	r0, r4
   1b65c:	bl	14ea4 <main@@Base+0x141c>
   1b660:	b	1b5e4 <flatcc_json_printer_uint16_vector_field@@Base+0x1f4>

0001b664 <flatcc_json_printer_uint32_vector_field@@Base>:
   1b664:	add	r2, r2, #2
   1b668:	lsl	r2, r2, #1
   1b66c:	ldr	ip, [r1, #8]
   1b670:	cmp	ip, r2
   1b674:	bxle	lr
   1b678:	ldr	ip, [r1, #4]
   1b67c:	ldrh	ip, [ip, r2]
   1b680:	cmp	ip, #0
   1b684:	bxeq	lr
   1b688:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b68c:	ldr	r5, [r1]
   1b690:	adds	lr, r5, ip
   1b694:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b698:	ldr	r2, [r1, #16]
   1b69c:	add	r4, r2, #1
   1b6a0:	str	r4, [r1, #16]
   1b6a4:	cmp	r2, #0
   1b6a8:	ldrne	r2, [r0, #20]
   1b6ac:	addne	r1, r2, #1
   1b6b0:	strne	r1, [r0, #20]
   1b6b4:	movne	r1, #44	; 0x2c
   1b6b8:	strbne	r1, [r2]
   1b6bc:	mov	r1, r3
   1b6c0:	mov	r4, r0
   1b6c4:	ldr	r3, [r5, ip]
   1b6c8:	add	r6, lr, r3
   1b6cc:	ldr	r7, [lr, r3]
   1b6d0:	ldr	r2, [sp, #40]	; 0x28
   1b6d4:	bl	15408 <main@@Base+0x1980>
   1b6d8:	ldr	r3, [r4, #32]
   1b6dc:	add	r3, r3, #1
   1b6e0:	str	r3, [r4, #32]
   1b6e4:	ldr	r3, [r4, #20]
   1b6e8:	add	r2, r3, #1
   1b6ec:	str	r2, [r4, #20]
   1b6f0:	mov	r2, #91	; 0x5b
   1b6f4:	strb	r2, [r3]
   1b6f8:	cmp	r7, #0
   1b6fc:	beq	1b84c <flatcc_json_printer_uint32_vector_field@@Base+0x1e8>
   1b700:	ldrb	r3, [r4, #25]
   1b704:	cmp	r3, #0
   1b708:	bne	1b758 <flatcc_json_printer_uint32_vector_field@@Base+0xf4>
   1b70c:	ldr	r2, [r4, #20]
   1b710:	ldr	r3, [r4, #16]
   1b714:	cmp	r2, r3
   1b718:	bcs	1b778 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   1b71c:	ldr	r1, [r4, #20]
   1b720:	ldr	r0, [r6, #4]
   1b724:	bl	13d64 <main@@Base+0x2dc>
   1b728:	ldr	r3, [r4, #20]
   1b72c:	add	r0, r3, r0
   1b730:	str	r0, [r4, #20]
   1b734:	add	r6, r6, #8
   1b738:	sub	r5, r7, #2
   1b73c:	cmp	r7, #1
   1b740:	beq	1b84c <flatcc_json_printer_uint32_vector_field@@Base+0x1e8>
   1b744:	mov	r7, #44	; 0x2c
   1b748:	mov	r9, #0
   1b74c:	mov	r8, #10
   1b750:	mov	sl, #32
   1b754:	b	1b7fc <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   1b758:	ldr	r3, [r4, #20]
   1b75c:	add	r2, r3, #1
   1b760:	str	r2, [r4, #20]
   1b764:	mov	r2, #10
   1b768:	strb	r2, [r3]
   1b76c:	mov	r0, r4
   1b770:	bl	14f50 <main@@Base+0x14c8>
   1b774:	b	1b71c <flatcc_json_printer_uint32_vector_field@@Base+0xb8>
   1b778:	ldr	r3, [r4, #44]	; 0x2c
   1b77c:	mov	r1, #0
   1b780:	mov	r0, r4
   1b784:	blx	r3
   1b788:	b	1b71c <flatcc_json_printer_uint32_vector_field@@Base+0xb8>
   1b78c:	ldr	r3, [r4, #20]
   1b790:	add	r2, r3, #1
   1b794:	str	r2, [r4, #20]
   1b798:	strb	r8, [r3]
   1b79c:	ldrb	r3, [r4, #25]
   1b7a0:	ldr	fp, [r4, #32]
   1b7a4:	mul	fp, fp, r3
   1b7a8:	ldr	r0, [r4, #20]
   1b7ac:	add	r3, r0, fp
   1b7b0:	ldr	r2, [r4, #16]
   1b7b4:	cmp	r2, r3
   1b7b8:	bcc	1b83c <flatcc_json_printer_uint32_vector_field@@Base+0x1d8>
   1b7bc:	mov	r2, fp
   1b7c0:	mov	r1, sl
   1b7c4:	bl	124e8 <memset@plt>
   1b7c8:	ldr	r3, [r4, #20]
   1b7cc:	add	fp, r3, fp
   1b7d0:	str	fp, [r4, #20]
   1b7d4:	ldr	r1, [r4, #20]
   1b7d8:	ldr	r0, [r6], #4
   1b7dc:	bl	13d64 <main@@Base+0x2dc>
   1b7e0:	ldr	r3, [r4, #20]
   1b7e4:	add	r0, r3, r0
   1b7e8:	str	r0, [r4, #20]
   1b7ec:	sub	r3, r5, #1
   1b7f0:	cmp	r5, #0
   1b7f4:	beq	1b84c <flatcc_json_printer_uint32_vector_field@@Base+0x1e8>
   1b7f8:	mov	r5, r3
   1b7fc:	ldr	r3, [r4, #20]
   1b800:	add	r2, r3, #1
   1b804:	str	r2, [r4, #20]
   1b808:	strb	r7, [r3]
   1b80c:	ldrb	r3, [r4, #25]
   1b810:	cmp	r3, #0
   1b814:	bne	1b78c <flatcc_json_printer_uint32_vector_field@@Base+0x128>
   1b818:	ldr	r2, [r4, #20]
   1b81c:	ldr	r3, [r4, #16]
   1b820:	cmp	r2, r3
   1b824:	bcc	1b7d4 <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   1b828:	ldr	r3, [r4, #44]	; 0x2c
   1b82c:	mov	r1, r9
   1b830:	mov	r0, r4
   1b834:	blx	r3
   1b838:	b	1b7d4 <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   1b83c:	mov	r1, fp
   1b840:	mov	r0, r4
   1b844:	bl	14ea4 <main@@Base+0x141c>
   1b848:	b	1b7d4 <flatcc_json_printer_uint32_vector_field@@Base+0x170>
   1b84c:	ldrb	r3, [r4, #25]
   1b850:	cmp	r3, #0
   1b854:	bne	1b870 <flatcc_json_printer_uint32_vector_field@@Base+0x20c>
   1b858:	ldr	r3, [r4, #20]
   1b85c:	add	r2, r3, #1
   1b860:	str	r2, [r4, #20]
   1b864:	mov	r2, #93	; 0x5d
   1b868:	strb	r2, [r3]
   1b86c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b870:	ldr	r3, [r4, #20]
   1b874:	add	r2, r3, #1
   1b878:	str	r2, [r4, #20]
   1b87c:	mov	r2, #10
   1b880:	strb	r2, [r3]
   1b884:	ldr	r5, [r4, #32]
   1b888:	sub	r5, r5, #1
   1b88c:	str	r5, [r4, #32]
   1b890:	ldrb	r3, [r4, #25]
   1b894:	mul	r5, r5, r3
   1b898:	ldr	r0, [r4, #20]
   1b89c:	add	r3, r0, r5
   1b8a0:	ldr	r2, [r4, #16]
   1b8a4:	cmp	r2, r3
   1b8a8:	bcc	1b8c8 <flatcc_json_printer_uint32_vector_field@@Base+0x264>
   1b8ac:	mov	r2, r5
   1b8b0:	mov	r1, #32
   1b8b4:	bl	124e8 <memset@plt>
   1b8b8:	ldr	r3, [r4, #20]
   1b8bc:	add	r5, r3, r5
   1b8c0:	str	r5, [r4, #20]
   1b8c4:	b	1b858 <flatcc_json_printer_uint32_vector_field@@Base+0x1f4>
   1b8c8:	mov	r1, r5
   1b8cc:	mov	r0, r4
   1b8d0:	bl	14ea4 <main@@Base+0x141c>
   1b8d4:	b	1b858 <flatcc_json_printer_uint32_vector_field@@Base+0x1f4>

0001b8d8 <flatcc_json_printer_uint64_vector_field@@Base>:
   1b8d8:	add	r2, r2, #2
   1b8dc:	lsl	r2, r2, #1
   1b8e0:	ldr	ip, [r1, #8]
   1b8e4:	cmp	ip, r2
   1b8e8:	bxle	lr
   1b8ec:	ldr	ip, [r1, #4]
   1b8f0:	ldrh	ip, [ip, r2]
   1b8f4:	cmp	ip, #0
   1b8f8:	bxeq	lr
   1b8fc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b900:	ldr	r5, [r1]
   1b904:	adds	lr, r5, ip
   1b908:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b90c:	ldr	r2, [r1, #16]
   1b910:	add	r4, r2, #1
   1b914:	str	r4, [r1, #16]
   1b918:	cmp	r2, #0
   1b91c:	ldrne	r2, [r0, #20]
   1b920:	addne	r1, r2, #1
   1b924:	strne	r1, [r0, #20]
   1b928:	movne	r1, #44	; 0x2c
   1b92c:	strbne	r1, [r2]
   1b930:	mov	r1, r3
   1b934:	mov	r4, r0
   1b938:	ldr	r3, [r5, ip]
   1b93c:	add	r6, lr, r3
   1b940:	ldr	r7, [lr, r3]
   1b944:	ldr	r2, [sp, #40]	; 0x28
   1b948:	bl	15408 <main@@Base+0x1980>
   1b94c:	ldr	r3, [r4, #32]
   1b950:	add	r3, r3, #1
   1b954:	str	r3, [r4, #32]
   1b958:	ldr	r3, [r4, #20]
   1b95c:	add	r2, r3, #1
   1b960:	str	r2, [r4, #20]
   1b964:	mov	r2, #91	; 0x5b
   1b968:	strb	r2, [r3]
   1b96c:	cmp	r7, #0
   1b970:	beq	1bac0 <flatcc_json_printer_uint64_vector_field@@Base+0x1e8>
   1b974:	ldrb	r3, [r4, #25]
   1b978:	cmp	r3, #0
   1b97c:	bne	1b9cc <flatcc_json_printer_uint64_vector_field@@Base+0xf4>
   1b980:	ldr	r2, [r4, #20]
   1b984:	ldr	r3, [r4, #16]
   1b988:	cmp	r2, r3
   1b98c:	bcs	1b9ec <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   1b990:	ldr	r2, [r4, #20]
   1b994:	ldrd	r0, [r6, #4]
   1b998:	bl	140a4 <main@@Base+0x61c>
   1b99c:	ldr	r3, [r4, #20]
   1b9a0:	add	r0, r3, r0
   1b9a4:	str	r0, [r4, #20]
   1b9a8:	add	r6, r6, #12
   1b9ac:	sub	r5, r7, #2
   1b9b0:	cmp	r7, #1
   1b9b4:	beq	1bac0 <flatcc_json_printer_uint64_vector_field@@Base+0x1e8>
   1b9b8:	mov	r7, #44	; 0x2c
   1b9bc:	mov	r9, #0
   1b9c0:	mov	r8, #10
   1b9c4:	mov	sl, #32
   1b9c8:	b	1ba70 <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   1b9cc:	ldr	r3, [r4, #20]
   1b9d0:	add	r2, r3, #1
   1b9d4:	str	r2, [r4, #20]
   1b9d8:	mov	r2, #10
   1b9dc:	strb	r2, [r3]
   1b9e0:	mov	r0, r4
   1b9e4:	bl	14f50 <main@@Base+0x14c8>
   1b9e8:	b	1b990 <flatcc_json_printer_uint64_vector_field@@Base+0xb8>
   1b9ec:	ldr	r3, [r4, #44]	; 0x2c
   1b9f0:	mov	r1, #0
   1b9f4:	mov	r0, r4
   1b9f8:	blx	r3
   1b9fc:	b	1b990 <flatcc_json_printer_uint64_vector_field@@Base+0xb8>
   1ba00:	ldr	r3, [r4, #20]
   1ba04:	add	r2, r3, #1
   1ba08:	str	r2, [r4, #20]
   1ba0c:	strb	r8, [r3]
   1ba10:	ldrb	r3, [r4, #25]
   1ba14:	ldr	fp, [r4, #32]
   1ba18:	mul	fp, fp, r3
   1ba1c:	ldr	r0, [r4, #20]
   1ba20:	add	r3, r0, fp
   1ba24:	ldr	r2, [r4, #16]
   1ba28:	cmp	r2, r3
   1ba2c:	bcc	1bab0 <flatcc_json_printer_uint64_vector_field@@Base+0x1d8>
   1ba30:	mov	r2, fp
   1ba34:	mov	r1, sl
   1ba38:	bl	124e8 <memset@plt>
   1ba3c:	ldr	r3, [r4, #20]
   1ba40:	add	fp, r3, fp
   1ba44:	str	fp, [r4, #20]
   1ba48:	ldr	r2, [r4, #20]
   1ba4c:	ldrd	r0, [r6], #8
   1ba50:	bl	140a4 <main@@Base+0x61c>
   1ba54:	ldr	r3, [r4, #20]
   1ba58:	add	r0, r3, r0
   1ba5c:	str	r0, [r4, #20]
   1ba60:	sub	r3, r5, #1
   1ba64:	cmp	r5, #0
   1ba68:	beq	1bac0 <flatcc_json_printer_uint64_vector_field@@Base+0x1e8>
   1ba6c:	mov	r5, r3
   1ba70:	ldr	r3, [r4, #20]
   1ba74:	add	r2, r3, #1
   1ba78:	str	r2, [r4, #20]
   1ba7c:	strb	r7, [r3]
   1ba80:	ldrb	r3, [r4, #25]
   1ba84:	cmp	r3, #0
   1ba88:	bne	1ba00 <flatcc_json_printer_uint64_vector_field@@Base+0x128>
   1ba8c:	ldr	r2, [r4, #20]
   1ba90:	ldr	r3, [r4, #16]
   1ba94:	cmp	r2, r3
   1ba98:	bcc	1ba48 <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   1ba9c:	ldr	r3, [r4, #44]	; 0x2c
   1baa0:	mov	r1, r9
   1baa4:	mov	r0, r4
   1baa8:	blx	r3
   1baac:	b	1ba48 <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   1bab0:	mov	r1, fp
   1bab4:	mov	r0, r4
   1bab8:	bl	14ea4 <main@@Base+0x141c>
   1babc:	b	1ba48 <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   1bac0:	ldrb	r3, [r4, #25]
   1bac4:	cmp	r3, #0
   1bac8:	bne	1bae4 <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   1bacc:	ldr	r3, [r4, #20]
   1bad0:	add	r2, r3, #1
   1bad4:	str	r2, [r4, #20]
   1bad8:	mov	r2, #93	; 0x5d
   1badc:	strb	r2, [r3]
   1bae0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bae4:	ldr	r3, [r4, #20]
   1bae8:	add	r2, r3, #1
   1baec:	str	r2, [r4, #20]
   1baf0:	mov	r2, #10
   1baf4:	strb	r2, [r3]
   1baf8:	ldr	r5, [r4, #32]
   1bafc:	sub	r5, r5, #1
   1bb00:	str	r5, [r4, #32]
   1bb04:	ldrb	r3, [r4, #25]
   1bb08:	mul	r5, r5, r3
   1bb0c:	ldr	r0, [r4, #20]
   1bb10:	add	r3, r0, r5
   1bb14:	ldr	r2, [r4, #16]
   1bb18:	cmp	r2, r3
   1bb1c:	bcc	1bb3c <flatcc_json_printer_uint64_vector_field@@Base+0x264>
   1bb20:	mov	r2, r5
   1bb24:	mov	r1, #32
   1bb28:	bl	124e8 <memset@plt>
   1bb2c:	ldr	r3, [r4, #20]
   1bb30:	add	r5, r3, r5
   1bb34:	str	r5, [r4, #20]
   1bb38:	b	1bacc <flatcc_json_printer_uint64_vector_field@@Base+0x1f4>
   1bb3c:	mov	r1, r5
   1bb40:	mov	r0, r4
   1bb44:	bl	14ea4 <main@@Base+0x141c>
   1bb48:	b	1bacc <flatcc_json_printer_uint64_vector_field@@Base+0x1f4>

0001bb4c <flatcc_json_printer_int8_vector_field@@Base>:
   1bb4c:	add	r2, r2, #2
   1bb50:	lsl	r2, r2, #1
   1bb54:	ldr	ip, [r1, #8]
   1bb58:	cmp	ip, r2
   1bb5c:	bxle	lr
   1bb60:	ldr	ip, [r1, #4]
   1bb64:	ldrh	ip, [ip, r2]
   1bb68:	cmp	ip, #0
   1bb6c:	bxeq	lr
   1bb70:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb74:	ldr	r5, [r1]
   1bb78:	adds	lr, r5, ip
   1bb7c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb80:	ldr	r2, [r1, #16]
   1bb84:	add	r4, r2, #1
   1bb88:	str	r4, [r1, #16]
   1bb8c:	cmp	r2, #0
   1bb90:	ldrne	r2, [r0, #20]
   1bb94:	addne	r1, r2, #1
   1bb98:	strne	r1, [r0, #20]
   1bb9c:	movne	r1, #44	; 0x2c
   1bba0:	strbne	r1, [r2]
   1bba4:	mov	r1, r3
   1bba8:	mov	r4, r0
   1bbac:	ldr	r3, [r5, ip]
   1bbb0:	add	r8, lr, r3
   1bbb4:	ldr	r7, [lr, r3]
   1bbb8:	ldr	r2, [sp, #40]	; 0x28
   1bbbc:	bl	15408 <main@@Base+0x1980>
   1bbc0:	ldr	r3, [r4, #32]
   1bbc4:	add	r3, r3, #1
   1bbc8:	str	r3, [r4, #32]
   1bbcc:	ldr	r3, [r4, #20]
   1bbd0:	add	r2, r3, #1
   1bbd4:	str	r2, [r4, #20]
   1bbd8:	mov	r2, #91	; 0x5b
   1bbdc:	strb	r2, [r3]
   1bbe0:	cmp	r7, #0
   1bbe4:	beq	1bd2c <flatcc_json_printer_int8_vector_field@@Base+0x1e0>
   1bbe8:	ldrb	r3, [r4, #25]
   1bbec:	cmp	r3, #0
   1bbf0:	bne	1bc3c <flatcc_json_printer_int8_vector_field@@Base+0xf0>
   1bbf4:	ldr	r2, [r4, #20]
   1bbf8:	ldr	r3, [r4, #16]
   1bbfc:	cmp	r2, r3
   1bc00:	bcs	1bc5c <flatcc_json_printer_int8_vector_field@@Base+0x110>
   1bc04:	ldr	r1, [r4, #20]
   1bc08:	ldrsb	r0, [r8, #4]
   1bc0c:	bl	14728 <main@@Base+0xca0>
   1bc10:	ldr	r3, [r4, #20]
   1bc14:	add	r0, r3, r0
   1bc18:	str	r0, [r4, #20]
   1bc1c:	add	r5, r8, #5
   1bc20:	cmp	r7, #1
   1bc24:	beq	1bd2c <flatcc_json_printer_int8_vector_field@@Base+0x1e0>
   1bc28:	mov	r9, #44	; 0x2c
   1bc2c:	mov	sl, #10
   1bc30:	mov	fp, #0
   1bc34:	add	r7, r7, #4
   1bc38:	b	1bcdc <flatcc_json_printer_int8_vector_field@@Base+0x190>
   1bc3c:	ldr	r3, [r4, #20]
   1bc40:	add	r2, r3, #1
   1bc44:	str	r2, [r4, #20]
   1bc48:	mov	r2, #10
   1bc4c:	strb	r2, [r3]
   1bc50:	mov	r0, r4
   1bc54:	bl	14f50 <main@@Base+0x14c8>
   1bc58:	b	1bc04 <flatcc_json_printer_int8_vector_field@@Base+0xb8>
   1bc5c:	ldr	r3, [r4, #44]	; 0x2c
   1bc60:	mov	r1, #0
   1bc64:	mov	r0, r4
   1bc68:	blx	r3
   1bc6c:	b	1bc04 <flatcc_json_printer_int8_vector_field@@Base+0xb8>
   1bc70:	ldr	r3, [r4, #20]
   1bc74:	add	r2, r3, #1
   1bc78:	str	r2, [r4, #20]
   1bc7c:	strb	sl, [r3]
   1bc80:	ldrb	r3, [r4, #25]
   1bc84:	ldr	r6, [r4, #32]
   1bc88:	mul	r6, r6, r3
   1bc8c:	ldr	r0, [r4, #20]
   1bc90:	add	r3, r0, r6
   1bc94:	ldr	r2, [r4, #16]
   1bc98:	cmp	r2, r3
   1bc9c:	bcc	1bd1c <flatcc_json_printer_int8_vector_field@@Base+0x1d0>
   1bca0:	mov	r2, r6
   1bca4:	mov	r1, #32
   1bca8:	bl	124e8 <memset@plt>
   1bcac:	ldr	r3, [r4, #20]
   1bcb0:	add	r6, r3, r6
   1bcb4:	str	r6, [r4, #20]
   1bcb8:	ldr	r1, [r4, #20]
   1bcbc:	ldrsb	r0, [r5], #1
   1bcc0:	bl	14728 <main@@Base+0xca0>
   1bcc4:	ldr	r3, [r4, #20]
   1bcc8:	add	r0, r3, r0
   1bccc:	str	r0, [r4, #20]
   1bcd0:	sub	r3, r7, r5
   1bcd4:	cmn	r8, r3
   1bcd8:	beq	1bd2c <flatcc_json_printer_int8_vector_field@@Base+0x1e0>
   1bcdc:	ldr	r3, [r4, #20]
   1bce0:	add	r2, r3, #1
   1bce4:	str	r2, [r4, #20]
   1bce8:	strb	r9, [r3]
   1bcec:	ldrb	r3, [r4, #25]
   1bcf0:	cmp	r3, #0
   1bcf4:	bne	1bc70 <flatcc_json_printer_int8_vector_field@@Base+0x124>
   1bcf8:	ldr	r2, [r4, #20]
   1bcfc:	ldr	r3, [r4, #16]
   1bd00:	cmp	r2, r3
   1bd04:	bcc	1bcb8 <flatcc_json_printer_int8_vector_field@@Base+0x16c>
   1bd08:	ldr	r3, [r4, #44]	; 0x2c
   1bd0c:	mov	r1, fp
   1bd10:	mov	r0, r4
   1bd14:	blx	r3
   1bd18:	b	1bcb8 <flatcc_json_printer_int8_vector_field@@Base+0x16c>
   1bd1c:	mov	r1, r6
   1bd20:	mov	r0, r4
   1bd24:	bl	14ea4 <main@@Base+0x141c>
   1bd28:	b	1bcb8 <flatcc_json_printer_int8_vector_field@@Base+0x16c>
   1bd2c:	ldrb	r3, [r4, #25]
   1bd30:	cmp	r3, #0
   1bd34:	bne	1bd50 <flatcc_json_printer_int8_vector_field@@Base+0x204>
   1bd38:	ldr	r3, [r4, #20]
   1bd3c:	add	r2, r3, #1
   1bd40:	str	r2, [r4, #20]
   1bd44:	mov	r2, #93	; 0x5d
   1bd48:	strb	r2, [r3]
   1bd4c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd50:	ldr	r3, [r4, #20]
   1bd54:	add	r2, r3, #1
   1bd58:	str	r2, [r4, #20]
   1bd5c:	mov	r2, #10
   1bd60:	strb	r2, [r3]
   1bd64:	ldr	r5, [r4, #32]
   1bd68:	sub	r5, r5, #1
   1bd6c:	str	r5, [r4, #32]
   1bd70:	ldrb	r3, [r4, #25]
   1bd74:	mul	r5, r5, r3
   1bd78:	ldr	r0, [r4, #20]
   1bd7c:	add	r3, r0, r5
   1bd80:	ldr	r2, [r4, #16]
   1bd84:	cmp	r2, r3
   1bd88:	bcc	1bda8 <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   1bd8c:	mov	r2, r5
   1bd90:	mov	r1, #32
   1bd94:	bl	124e8 <memset@plt>
   1bd98:	ldr	r3, [r4, #20]
   1bd9c:	add	r5, r3, r5
   1bda0:	str	r5, [r4, #20]
   1bda4:	b	1bd38 <flatcc_json_printer_int8_vector_field@@Base+0x1ec>
   1bda8:	mov	r1, r5
   1bdac:	mov	r0, r4
   1bdb0:	bl	14ea4 <main@@Base+0x141c>
   1bdb4:	b	1bd38 <flatcc_json_printer_int8_vector_field@@Base+0x1ec>

0001bdb8 <flatcc_json_printer_int16_vector_field@@Base>:
   1bdb8:	add	r2, r2, #2
   1bdbc:	lsl	r2, r2, #1
   1bdc0:	ldr	ip, [r1, #8]
   1bdc4:	cmp	ip, r2
   1bdc8:	bxle	lr
   1bdcc:	ldr	ip, [r1, #4]
   1bdd0:	ldrh	ip, [ip, r2]
   1bdd4:	cmp	ip, #0
   1bdd8:	bxeq	lr
   1bddc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bde0:	ldr	r5, [r1]
   1bde4:	adds	lr, r5, ip
   1bde8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bdec:	ldr	r2, [r1, #16]
   1bdf0:	add	r4, r2, #1
   1bdf4:	str	r4, [r1, #16]
   1bdf8:	cmp	r2, #0
   1bdfc:	ldrne	r2, [r0, #20]
   1be00:	addne	r1, r2, #1
   1be04:	strne	r1, [r0, #20]
   1be08:	movne	r1, #44	; 0x2c
   1be0c:	strbne	r1, [r2]
   1be10:	mov	r1, r3
   1be14:	mov	r4, r0
   1be18:	ldr	r3, [r5, ip]
   1be1c:	add	r6, lr, r3
   1be20:	ldr	r7, [lr, r3]
   1be24:	ldr	r2, [sp, #40]	; 0x28
   1be28:	bl	15408 <main@@Base+0x1980>
   1be2c:	ldr	r3, [r4, #32]
   1be30:	add	r3, r3, #1
   1be34:	str	r3, [r4, #32]
   1be38:	ldr	r3, [r4, #20]
   1be3c:	add	r2, r3, #1
   1be40:	str	r2, [r4, #20]
   1be44:	mov	r2, #91	; 0x5b
   1be48:	strb	r2, [r3]
   1be4c:	cmp	r7, #0
   1be50:	beq	1bfa0 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   1be54:	ldrb	r3, [r4, #25]
   1be58:	cmp	r3, #0
   1be5c:	bne	1beac <flatcc_json_printer_int16_vector_field@@Base+0xf4>
   1be60:	ldr	r2, [r4, #20]
   1be64:	ldr	r3, [r4, #16]
   1be68:	cmp	r2, r3
   1be6c:	bcs	1becc <flatcc_json_printer_int16_vector_field@@Base+0x114>
   1be70:	ldr	r1, [r4, #20]
   1be74:	ldrsh	r0, [r6, #4]
   1be78:	bl	14758 <main@@Base+0xcd0>
   1be7c:	ldr	r3, [r4, #20]
   1be80:	add	r0, r3, r0
   1be84:	str	r0, [r4, #20]
   1be88:	add	r6, r6, #6
   1be8c:	sub	r5, r7, #2
   1be90:	cmp	r7, #1
   1be94:	beq	1bfa0 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   1be98:	mov	r7, #44	; 0x2c
   1be9c:	mov	r9, #0
   1bea0:	mov	r8, #10
   1bea4:	mov	sl, #32
   1bea8:	b	1bf50 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   1beac:	ldr	r3, [r4, #20]
   1beb0:	add	r2, r3, #1
   1beb4:	str	r2, [r4, #20]
   1beb8:	mov	r2, #10
   1bebc:	strb	r2, [r3]
   1bec0:	mov	r0, r4
   1bec4:	bl	14f50 <main@@Base+0x14c8>
   1bec8:	b	1be70 <flatcc_json_printer_int16_vector_field@@Base+0xb8>
   1becc:	ldr	r3, [r4, #44]	; 0x2c
   1bed0:	mov	r1, #0
   1bed4:	mov	r0, r4
   1bed8:	blx	r3
   1bedc:	b	1be70 <flatcc_json_printer_int16_vector_field@@Base+0xb8>
   1bee0:	ldr	r3, [r4, #20]
   1bee4:	add	r2, r3, #1
   1bee8:	str	r2, [r4, #20]
   1beec:	strb	r8, [r3]
   1bef0:	ldrb	r3, [r4, #25]
   1bef4:	ldr	fp, [r4, #32]
   1bef8:	mul	fp, fp, r3
   1befc:	ldr	r0, [r4, #20]
   1bf00:	add	r3, r0, fp
   1bf04:	ldr	r2, [r4, #16]
   1bf08:	cmp	r2, r3
   1bf0c:	bcc	1bf90 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   1bf10:	mov	r2, fp
   1bf14:	mov	r1, sl
   1bf18:	bl	124e8 <memset@plt>
   1bf1c:	ldr	r3, [r4, #20]
   1bf20:	add	fp, r3, fp
   1bf24:	str	fp, [r4, #20]
   1bf28:	ldr	r1, [r4, #20]
   1bf2c:	ldrsh	r0, [r6], #2
   1bf30:	bl	14758 <main@@Base+0xcd0>
   1bf34:	ldr	r3, [r4, #20]
   1bf38:	add	r0, r3, r0
   1bf3c:	str	r0, [r4, #20]
   1bf40:	sub	r3, r5, #1
   1bf44:	cmp	r5, #0
   1bf48:	beq	1bfa0 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   1bf4c:	mov	r5, r3
   1bf50:	ldr	r3, [r4, #20]
   1bf54:	add	r2, r3, #1
   1bf58:	str	r2, [r4, #20]
   1bf5c:	strb	r7, [r3]
   1bf60:	ldrb	r3, [r4, #25]
   1bf64:	cmp	r3, #0
   1bf68:	bne	1bee0 <flatcc_json_printer_int16_vector_field@@Base+0x128>
   1bf6c:	ldr	r2, [r4, #20]
   1bf70:	ldr	r3, [r4, #16]
   1bf74:	cmp	r2, r3
   1bf78:	bcc	1bf28 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   1bf7c:	ldr	r3, [r4, #44]	; 0x2c
   1bf80:	mov	r1, r9
   1bf84:	mov	r0, r4
   1bf88:	blx	r3
   1bf8c:	b	1bf28 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   1bf90:	mov	r1, fp
   1bf94:	mov	r0, r4
   1bf98:	bl	14ea4 <main@@Base+0x141c>
   1bf9c:	b	1bf28 <flatcc_json_printer_int16_vector_field@@Base+0x170>
   1bfa0:	ldrb	r3, [r4, #25]
   1bfa4:	cmp	r3, #0
   1bfa8:	bne	1bfc4 <flatcc_json_printer_int16_vector_field@@Base+0x20c>
   1bfac:	ldr	r3, [r4, #20]
   1bfb0:	add	r2, r3, #1
   1bfb4:	str	r2, [r4, #20]
   1bfb8:	mov	r2, #93	; 0x5d
   1bfbc:	strb	r2, [r3]
   1bfc0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bfc4:	ldr	r3, [r4, #20]
   1bfc8:	add	r2, r3, #1
   1bfcc:	str	r2, [r4, #20]
   1bfd0:	mov	r2, #10
   1bfd4:	strb	r2, [r3]
   1bfd8:	ldr	r5, [r4, #32]
   1bfdc:	sub	r5, r5, #1
   1bfe0:	str	r5, [r4, #32]
   1bfe4:	ldrb	r3, [r4, #25]
   1bfe8:	mul	r5, r5, r3
   1bfec:	ldr	r0, [r4, #20]
   1bff0:	add	r3, r0, r5
   1bff4:	ldr	r2, [r4, #16]
   1bff8:	cmp	r2, r3
   1bffc:	bcc	1c01c <flatcc_json_printer_int16_vector_field@@Base+0x264>
   1c000:	mov	r2, r5
   1c004:	mov	r1, #32
   1c008:	bl	124e8 <memset@plt>
   1c00c:	ldr	r3, [r4, #20]
   1c010:	add	r5, r3, r5
   1c014:	str	r5, [r4, #20]
   1c018:	b	1bfac <flatcc_json_printer_int16_vector_field@@Base+0x1f4>
   1c01c:	mov	r1, r5
   1c020:	mov	r0, r4
   1c024:	bl	14ea4 <main@@Base+0x141c>
   1c028:	b	1bfac <flatcc_json_printer_int16_vector_field@@Base+0x1f4>

0001c02c <flatcc_json_printer_int32_vector_field@@Base>:
   1c02c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c030:	ldr	r5, [sp, #40]	; 0x28
   1c034:	add	r2, r2, #2
   1c038:	lsl	r2, r2, #1
   1c03c:	ldr	ip, [r1, #8]
   1c040:	cmp	ip, r2
   1c044:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c048:	ldr	ip, [r1, #4]
   1c04c:	ldrh	ip, [ip, r2]
   1c050:	cmp	ip, #0
   1c054:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c058:	ldr	r6, [r1]
   1c05c:	adds	lr, r6, ip
   1c060:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c064:	ldr	r2, [r1, #16]
   1c068:	add	r4, r2, #1
   1c06c:	str	r4, [r1, #16]
   1c070:	cmp	r2, #0
   1c074:	ldrne	r2, [r0, #20]
   1c078:	addne	r1, r2, #1
   1c07c:	strne	r1, [r0, #20]
   1c080:	movne	r1, #44	; 0x2c
   1c084:	strbne	r1, [r2]
   1c088:	mov	r8, r3
   1c08c:	mov	r4, r0
   1c090:	ldr	r3, [r6, ip]
   1c094:	add	r6, lr, r3
   1c098:	ldr	r7, [lr, r3]
   1c09c:	ldrb	r3, [r0, #25]
   1c0a0:	cmp	r3, #0
   1c0a4:	bne	1c0fc <flatcc_json_printer_int32_vector_field@@Base+0xd0>
   1c0a8:	ldr	r2, [r0, #20]
   1c0ac:	ldr	r3, [r0, #16]
   1c0b0:	cmp	r2, r3
   1c0b4:	bcs	1c15c <flatcc_json_printer_int32_vector_field@@Base+0x130>
   1c0b8:	ldr	r3, [r4, #20]
   1c0bc:	mov	r2, #34	; 0x22
   1c0c0:	strb	r2, [r3]
   1c0c4:	ldrb	r3, [r4, #26]
   1c0c8:	ldr	r0, [r4, #20]
   1c0cc:	cmp	r3, #0
   1c0d0:	addeq	r0, r0, #1
   1c0d4:	str	r0, [r4, #20]
   1c0d8:	add	r3, r0, r5
   1c0dc:	ldr	r2, [r4, #16]
   1c0e0:	cmp	r2, r3
   1c0e4:	bhi	1c16c <flatcc_json_printer_int32_vector_field@@Base+0x140>
   1c0e8:	mov	r2, r5
   1c0ec:	mov	r1, r8
   1c0f0:	mov	r0, r4
   1c0f4:	bl	14dbc <main@@Base+0x1334>
   1c0f8:	b	1c184 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   1c0fc:	ldr	r3, [r0, #20]
   1c100:	add	r2, r3, #1
   1c104:	str	r2, [r0, #20]
   1c108:	mov	r2, #10
   1c10c:	strb	r2, [r3]
   1c110:	ldrb	r3, [r0, #25]
   1c114:	ldr	r9, [r0, #32]
   1c118:	mul	r9, r9, r3
   1c11c:	ldr	r0, [r0, #20]
   1c120:	add	r3, r0, r9
   1c124:	ldr	r2, [r4, #16]
   1c128:	cmp	r2, r3
   1c12c:	bcc	1c14c <flatcc_json_printer_int32_vector_field@@Base+0x120>
   1c130:	mov	r2, r9
   1c134:	mov	r1, #32
   1c138:	bl	124e8 <memset@plt>
   1c13c:	ldr	r3, [r4, #20]
   1c140:	add	r9, r3, r9
   1c144:	str	r9, [r4, #20]
   1c148:	b	1c0b8 <flatcc_json_printer_int32_vector_field@@Base+0x8c>
   1c14c:	mov	r1, r9
   1c150:	mov	r0, r4
   1c154:	bl	14ea4 <main@@Base+0x141c>
   1c158:	b	1c0b8 <flatcc_json_printer_int32_vector_field@@Base+0x8c>
   1c15c:	ldr	r3, [r0, #44]	; 0x2c
   1c160:	mov	r1, #0
   1c164:	blx	r3
   1c168:	b	1c0b8 <flatcc_json_printer_int32_vector_field@@Base+0x8c>
   1c16c:	mov	r2, r5
   1c170:	mov	r1, r8
   1c174:	bl	1244c <memcpy@plt>
   1c178:	ldr	r3, [r4, #20]
   1c17c:	add	r5, r3, r5
   1c180:	str	r5, [r4, #20]
   1c184:	ldr	r3, [r4, #20]
   1c188:	mov	r2, #34	; 0x22
   1c18c:	strb	r2, [r3]
   1c190:	ldrb	r3, [r4, #26]
   1c194:	clz	r3, r3
   1c198:	lsr	r3, r3, #5
   1c19c:	ldr	r1, [r4, #20]
   1c1a0:	add	r2, r1, r3
   1c1a4:	add	r2, r2, #1
   1c1a8:	str	r2, [r4, #20]
   1c1ac:	mov	r2, #58	; 0x3a
   1c1b0:	strb	r2, [r1, r3]
   1c1b4:	ldr	r3, [r4, #20]
   1c1b8:	mov	r2, #32
   1c1bc:	strb	r2, [r3]
   1c1c0:	ldrb	r3, [r4, #25]
   1c1c4:	adds	r3, r3, #0
   1c1c8:	movne	r3, #1
   1c1cc:	ldr	r0, [r4, #20]
   1c1d0:	add	r2, r0, r3
   1c1d4:	ldr	r1, [r4, #32]
   1c1d8:	add	r1, r1, #1
   1c1dc:	str	r1, [r4, #32]
   1c1e0:	add	r2, r2, #1
   1c1e4:	str	r2, [r4, #20]
   1c1e8:	mov	r2, #91	; 0x5b
   1c1ec:	strb	r2, [r0, r3]
   1c1f0:	cmp	r7, #0
   1c1f4:	beq	1c344 <flatcc_json_printer_int32_vector_field@@Base+0x318>
   1c1f8:	ldrb	r3, [r4, #25]
   1c1fc:	cmp	r3, #0
   1c200:	bne	1c250 <flatcc_json_printer_int32_vector_field@@Base+0x224>
   1c204:	ldr	r2, [r4, #20]
   1c208:	ldr	r3, [r4, #16]
   1c20c:	cmp	r2, r3
   1c210:	bcs	1c270 <flatcc_json_printer_int32_vector_field@@Base+0x244>
   1c214:	ldr	r1, [r4, #20]
   1c218:	ldr	r0, [r6, #4]
   1c21c:	bl	14788 <main@@Base+0xd00>
   1c220:	ldr	r3, [r4, #20]
   1c224:	add	r0, r3, r0
   1c228:	str	r0, [r4, #20]
   1c22c:	add	r6, r6, #8
   1c230:	sub	r5, r7, #2
   1c234:	cmp	r7, #1
   1c238:	beq	1c344 <flatcc_json_printer_int32_vector_field@@Base+0x318>
   1c23c:	mov	r7, #44	; 0x2c
   1c240:	mov	r9, #0
   1c244:	mov	r8, #10
   1c248:	mov	sl, #32
   1c24c:	b	1c2f4 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   1c250:	ldr	r3, [r4, #20]
   1c254:	add	r2, r3, #1
   1c258:	str	r2, [r4, #20]
   1c25c:	mov	r2, #10
   1c260:	strb	r2, [r3]
   1c264:	mov	r0, r4
   1c268:	bl	14f50 <main@@Base+0x14c8>
   1c26c:	b	1c214 <flatcc_json_printer_int32_vector_field@@Base+0x1e8>
   1c270:	ldr	r3, [r4, #44]	; 0x2c
   1c274:	mov	r1, #0
   1c278:	mov	r0, r4
   1c27c:	blx	r3
   1c280:	b	1c214 <flatcc_json_printer_int32_vector_field@@Base+0x1e8>
   1c284:	ldr	r3, [r4, #20]
   1c288:	add	r2, r3, #1
   1c28c:	str	r2, [r4, #20]
   1c290:	strb	r8, [r3]
   1c294:	ldrb	r3, [r4, #25]
   1c298:	ldr	fp, [r4, #32]
   1c29c:	mul	fp, fp, r3
   1c2a0:	ldr	r0, [r4, #20]
   1c2a4:	add	r3, r0, fp
   1c2a8:	ldr	r2, [r4, #16]
   1c2ac:	cmp	r2, r3
   1c2b0:	bcc	1c334 <flatcc_json_printer_int32_vector_field@@Base+0x308>
   1c2b4:	mov	r2, fp
   1c2b8:	mov	r1, sl
   1c2bc:	bl	124e8 <memset@plt>
   1c2c0:	ldr	r3, [r4, #20]
   1c2c4:	add	fp, r3, fp
   1c2c8:	str	fp, [r4, #20]
   1c2cc:	ldr	r1, [r4, #20]
   1c2d0:	ldr	r0, [r6], #4
   1c2d4:	bl	14788 <main@@Base+0xd00>
   1c2d8:	ldr	r3, [r4, #20]
   1c2dc:	add	r0, r3, r0
   1c2e0:	str	r0, [r4, #20]
   1c2e4:	sub	r3, r5, #1
   1c2e8:	cmp	r5, #0
   1c2ec:	beq	1c344 <flatcc_json_printer_int32_vector_field@@Base+0x318>
   1c2f0:	mov	r5, r3
   1c2f4:	ldr	r3, [r4, #20]
   1c2f8:	add	r2, r3, #1
   1c2fc:	str	r2, [r4, #20]
   1c300:	strb	r7, [r3]
   1c304:	ldrb	r3, [r4, #25]
   1c308:	cmp	r3, #0
   1c30c:	bne	1c284 <flatcc_json_printer_int32_vector_field@@Base+0x258>
   1c310:	ldr	r2, [r4, #20]
   1c314:	ldr	r3, [r4, #16]
   1c318:	cmp	r2, r3
   1c31c:	bcc	1c2cc <flatcc_json_printer_int32_vector_field@@Base+0x2a0>
   1c320:	ldr	r3, [r4, #44]	; 0x2c
   1c324:	mov	r1, r9
   1c328:	mov	r0, r4
   1c32c:	blx	r3
   1c330:	b	1c2cc <flatcc_json_printer_int32_vector_field@@Base+0x2a0>
   1c334:	mov	r1, fp
   1c338:	mov	r0, r4
   1c33c:	bl	14ea4 <main@@Base+0x141c>
   1c340:	b	1c2cc <flatcc_json_printer_int32_vector_field@@Base+0x2a0>
   1c344:	ldrb	r3, [r4, #25]
   1c348:	cmp	r3, #0
   1c34c:	bne	1c368 <flatcc_json_printer_int32_vector_field@@Base+0x33c>
   1c350:	ldr	r3, [r4, #20]
   1c354:	add	r2, r3, #1
   1c358:	str	r2, [r4, #20]
   1c35c:	mov	r2, #93	; 0x5d
   1c360:	strb	r2, [r3]
   1c364:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c368:	ldr	r3, [r4, #20]
   1c36c:	add	r2, r3, #1
   1c370:	str	r2, [r4, #20]
   1c374:	mov	r2, #10
   1c378:	strb	r2, [r3]
   1c37c:	ldr	r5, [r4, #32]
   1c380:	sub	r5, r5, #1
   1c384:	str	r5, [r4, #32]
   1c388:	ldrb	r3, [r4, #25]
   1c38c:	mul	r5, r5, r3
   1c390:	ldr	r0, [r4, #20]
   1c394:	add	r3, r0, r5
   1c398:	ldr	r2, [r4, #16]
   1c39c:	cmp	r2, r3
   1c3a0:	bcc	1c3c0 <flatcc_json_printer_int32_vector_field@@Base+0x394>
   1c3a4:	mov	r2, r5
   1c3a8:	mov	r1, #32
   1c3ac:	bl	124e8 <memset@plt>
   1c3b0:	ldr	r3, [r4, #20]
   1c3b4:	add	r5, r3, r5
   1c3b8:	str	r5, [r4, #20]
   1c3bc:	b	1c350 <flatcc_json_printer_int32_vector_field@@Base+0x324>
   1c3c0:	mov	r1, r5
   1c3c4:	mov	r0, r4
   1c3c8:	bl	14ea4 <main@@Base+0x141c>
   1c3cc:	b	1c350 <flatcc_json_printer_int32_vector_field@@Base+0x324>

0001c3d0 <flatcc_json_printer_int64_vector_field@@Base>:
   1c3d0:	add	r2, r2, #2
   1c3d4:	lsl	r2, r2, #1
   1c3d8:	ldr	ip, [r1, #8]
   1c3dc:	cmp	ip, r2
   1c3e0:	bxle	lr
   1c3e4:	ldr	ip, [r1, #4]
   1c3e8:	ldrh	ip, [ip, r2]
   1c3ec:	cmp	ip, #0
   1c3f0:	bxeq	lr
   1c3f4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3f8:	ldr	r5, [r1]
   1c3fc:	adds	lr, r5, ip
   1c400:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c404:	ldr	r2, [r1, #16]
   1c408:	add	r4, r2, #1
   1c40c:	str	r4, [r1, #16]
   1c410:	cmp	r2, #0
   1c414:	ldrne	r2, [r0, #20]
   1c418:	addne	r1, r2, #1
   1c41c:	strne	r1, [r0, #20]
   1c420:	movne	r1, #44	; 0x2c
   1c424:	strbne	r1, [r2]
   1c428:	mov	r1, r3
   1c42c:	mov	r4, r0
   1c430:	ldr	r3, [r5, ip]
   1c434:	add	r6, lr, r3
   1c438:	ldr	r7, [lr, r3]
   1c43c:	ldr	r2, [sp, #40]	; 0x28
   1c440:	bl	15408 <main@@Base+0x1980>
   1c444:	ldr	r3, [r4, #32]
   1c448:	add	r3, r3, #1
   1c44c:	str	r3, [r4, #32]
   1c450:	ldr	r3, [r4, #20]
   1c454:	add	r2, r3, #1
   1c458:	str	r2, [r4, #20]
   1c45c:	mov	r2, #91	; 0x5b
   1c460:	strb	r2, [r3]
   1c464:	cmp	r7, #0
   1c468:	beq	1c5b8 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   1c46c:	ldrb	r3, [r4, #25]
   1c470:	cmp	r3, #0
   1c474:	bne	1c4c4 <flatcc_json_printer_int64_vector_field@@Base+0xf4>
   1c478:	ldr	r2, [r4, #20]
   1c47c:	ldr	r3, [r4, #16]
   1c480:	cmp	r2, r3
   1c484:	bcs	1c4e4 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   1c488:	ldr	r2, [r4, #20]
   1c48c:	ldrd	r0, [r6, #4]
   1c490:	bl	147b0 <main@@Base+0xd28>
   1c494:	ldr	r3, [r4, #20]
   1c498:	add	r0, r3, r0
   1c49c:	str	r0, [r4, #20]
   1c4a0:	add	r6, r6, #12
   1c4a4:	sub	r5, r7, #2
   1c4a8:	cmp	r7, #1
   1c4ac:	beq	1c5b8 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   1c4b0:	mov	r7, #44	; 0x2c
   1c4b4:	mov	r9, #0
   1c4b8:	mov	r8, #10
   1c4bc:	mov	sl, #32
   1c4c0:	b	1c568 <flatcc_json_printer_int64_vector_field@@Base+0x198>
   1c4c4:	ldr	r3, [r4, #20]
   1c4c8:	add	r2, r3, #1
   1c4cc:	str	r2, [r4, #20]
   1c4d0:	mov	r2, #10
   1c4d4:	strb	r2, [r3]
   1c4d8:	mov	r0, r4
   1c4dc:	bl	14f50 <main@@Base+0x14c8>
   1c4e0:	b	1c488 <flatcc_json_printer_int64_vector_field@@Base+0xb8>
   1c4e4:	ldr	r3, [r4, #44]	; 0x2c
   1c4e8:	mov	r1, #0
   1c4ec:	mov	r0, r4
   1c4f0:	blx	r3
   1c4f4:	b	1c488 <flatcc_json_printer_int64_vector_field@@Base+0xb8>
   1c4f8:	ldr	r3, [r4, #20]
   1c4fc:	add	r2, r3, #1
   1c500:	str	r2, [r4, #20]
   1c504:	strb	r8, [r3]
   1c508:	ldrb	r3, [r4, #25]
   1c50c:	ldr	fp, [r4, #32]
   1c510:	mul	fp, fp, r3
   1c514:	ldr	r0, [r4, #20]
   1c518:	add	r3, r0, fp
   1c51c:	ldr	r2, [r4, #16]
   1c520:	cmp	r2, r3
   1c524:	bcc	1c5a8 <flatcc_json_printer_int64_vector_field@@Base+0x1d8>
   1c528:	mov	r2, fp
   1c52c:	mov	r1, sl
   1c530:	bl	124e8 <memset@plt>
   1c534:	ldr	r3, [r4, #20]
   1c538:	add	fp, r3, fp
   1c53c:	str	fp, [r4, #20]
   1c540:	ldr	r2, [r4, #20]
   1c544:	ldrd	r0, [r6], #8
   1c548:	bl	147b0 <main@@Base+0xd28>
   1c54c:	ldr	r3, [r4, #20]
   1c550:	add	r0, r3, r0
   1c554:	str	r0, [r4, #20]
   1c558:	sub	r3, r5, #1
   1c55c:	cmp	r5, #0
   1c560:	beq	1c5b8 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   1c564:	mov	r5, r3
   1c568:	ldr	r3, [r4, #20]
   1c56c:	add	r2, r3, #1
   1c570:	str	r2, [r4, #20]
   1c574:	strb	r7, [r3]
   1c578:	ldrb	r3, [r4, #25]
   1c57c:	cmp	r3, #0
   1c580:	bne	1c4f8 <flatcc_json_printer_int64_vector_field@@Base+0x128>
   1c584:	ldr	r2, [r4, #20]
   1c588:	ldr	r3, [r4, #16]
   1c58c:	cmp	r2, r3
   1c590:	bcc	1c540 <flatcc_json_printer_int64_vector_field@@Base+0x170>
   1c594:	ldr	r3, [r4, #44]	; 0x2c
   1c598:	mov	r1, r9
   1c59c:	mov	r0, r4
   1c5a0:	blx	r3
   1c5a4:	b	1c540 <flatcc_json_printer_int64_vector_field@@Base+0x170>
   1c5a8:	mov	r1, fp
   1c5ac:	mov	r0, r4
   1c5b0:	bl	14ea4 <main@@Base+0x141c>
   1c5b4:	b	1c540 <flatcc_json_printer_int64_vector_field@@Base+0x170>
   1c5b8:	ldrb	r3, [r4, #25]
   1c5bc:	cmp	r3, #0
   1c5c0:	bne	1c5dc <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   1c5c4:	ldr	r3, [r4, #20]
   1c5c8:	add	r2, r3, #1
   1c5cc:	str	r2, [r4, #20]
   1c5d0:	mov	r2, #93	; 0x5d
   1c5d4:	strb	r2, [r3]
   1c5d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5dc:	ldr	r3, [r4, #20]
   1c5e0:	add	r2, r3, #1
   1c5e4:	str	r2, [r4, #20]
   1c5e8:	mov	r2, #10
   1c5ec:	strb	r2, [r3]
   1c5f0:	ldr	r5, [r4, #32]
   1c5f4:	sub	r5, r5, #1
   1c5f8:	str	r5, [r4, #32]
   1c5fc:	ldrb	r3, [r4, #25]
   1c600:	mul	r5, r5, r3
   1c604:	ldr	r0, [r4, #20]
   1c608:	add	r3, r0, r5
   1c60c:	ldr	r2, [r4, #16]
   1c610:	cmp	r2, r3
   1c614:	bcc	1c634 <flatcc_json_printer_int64_vector_field@@Base+0x264>
   1c618:	mov	r2, r5
   1c61c:	mov	r1, #32
   1c620:	bl	124e8 <memset@plt>
   1c624:	ldr	r3, [r4, #20]
   1c628:	add	r5, r3, r5
   1c62c:	str	r5, [r4, #20]
   1c630:	b	1c5c4 <flatcc_json_printer_int64_vector_field@@Base+0x1f4>
   1c634:	mov	r1, r5
   1c638:	mov	r0, r4
   1c63c:	bl	14ea4 <main@@Base+0x141c>
   1c640:	b	1c5c4 <flatcc_json_printer_int64_vector_field@@Base+0x1f4>

0001c644 <flatcc_json_printer_bool_vector_field@@Base>:
   1c644:	add	r2, r2, #2
   1c648:	lsl	r2, r2, #1
   1c64c:	ldr	ip, [r1, #8]
   1c650:	cmp	ip, r2
   1c654:	bxle	lr
   1c658:	ldr	ip, [r1, #4]
   1c65c:	ldrh	ip, [ip, r2]
   1c660:	cmp	ip, #0
   1c664:	bxeq	lr
   1c668:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c66c:	ldr	r5, [r1]
   1c670:	adds	lr, r5, ip
   1c674:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c678:	ldr	r2, [r1, #16]
   1c67c:	add	r4, r2, #1
   1c680:	str	r4, [r1, #16]
   1c684:	cmp	r2, #0
   1c688:	ldrne	r2, [r0, #20]
   1c68c:	addne	r1, r2, #1
   1c690:	strne	r1, [r0, #20]
   1c694:	movne	r1, #44	; 0x2c
   1c698:	strbne	r1, [r2]
   1c69c:	mov	r1, r3
   1c6a0:	mov	r4, r0
   1c6a4:	ldr	r3, [r5, ip]
   1c6a8:	add	r8, lr, r3
   1c6ac:	ldr	r7, [lr, r3]
   1c6b0:	ldr	r2, [sp, #40]	; 0x28
   1c6b4:	bl	15408 <main@@Base+0x1980>
   1c6b8:	ldr	r3, [r4, #32]
   1c6bc:	add	r3, r3, #1
   1c6c0:	str	r3, [r4, #32]
   1c6c4:	ldr	r3, [r4, #20]
   1c6c8:	add	r2, r3, #1
   1c6cc:	str	r2, [r4, #20]
   1c6d0:	mov	r2, #91	; 0x5b
   1c6d4:	strb	r2, [r3]
   1c6d8:	cmp	r7, #0
   1c6dc:	beq	1c824 <flatcc_json_printer_bool_vector_field@@Base+0x1e0>
   1c6e0:	ldrb	r3, [r4, #25]
   1c6e4:	cmp	r3, #0
   1c6e8:	bne	1c734 <flatcc_json_printer_bool_vector_field@@Base+0xf0>
   1c6ec:	ldr	r2, [r4, #20]
   1c6f0:	ldr	r3, [r4, #16]
   1c6f4:	cmp	r2, r3
   1c6f8:	bcs	1c754 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   1c6fc:	ldr	r1, [r4, #20]
   1c700:	ldrb	r0, [r8, #4]
   1c704:	bl	14e6c <main@@Base+0x13e4>
   1c708:	ldr	r3, [r4, #20]
   1c70c:	add	r0, r3, r0
   1c710:	str	r0, [r4, #20]
   1c714:	add	r5, r8, #5
   1c718:	cmp	r7, #1
   1c71c:	beq	1c824 <flatcc_json_printer_bool_vector_field@@Base+0x1e0>
   1c720:	mov	r9, #44	; 0x2c
   1c724:	mov	sl, #10
   1c728:	mov	fp, #0
   1c72c:	add	r7, r7, #4
   1c730:	b	1c7d4 <flatcc_json_printer_bool_vector_field@@Base+0x190>
   1c734:	ldr	r3, [r4, #20]
   1c738:	add	r2, r3, #1
   1c73c:	str	r2, [r4, #20]
   1c740:	mov	r2, #10
   1c744:	strb	r2, [r3]
   1c748:	mov	r0, r4
   1c74c:	bl	14f50 <main@@Base+0x14c8>
   1c750:	b	1c6fc <flatcc_json_printer_bool_vector_field@@Base+0xb8>
   1c754:	ldr	r3, [r4, #44]	; 0x2c
   1c758:	mov	r1, #0
   1c75c:	mov	r0, r4
   1c760:	blx	r3
   1c764:	b	1c6fc <flatcc_json_printer_bool_vector_field@@Base+0xb8>
   1c768:	ldr	r3, [r4, #20]
   1c76c:	add	r2, r3, #1
   1c770:	str	r2, [r4, #20]
   1c774:	strb	sl, [r3]
   1c778:	ldrb	r3, [r4, #25]
   1c77c:	ldr	r6, [r4, #32]
   1c780:	mul	r6, r6, r3
   1c784:	ldr	r0, [r4, #20]
   1c788:	add	r3, r0, r6
   1c78c:	ldr	r2, [r4, #16]
   1c790:	cmp	r2, r3
   1c794:	bcc	1c814 <flatcc_json_printer_bool_vector_field@@Base+0x1d0>
   1c798:	mov	r2, r6
   1c79c:	mov	r1, #32
   1c7a0:	bl	124e8 <memset@plt>
   1c7a4:	ldr	r3, [r4, #20]
   1c7a8:	add	r6, r3, r6
   1c7ac:	str	r6, [r4, #20]
   1c7b0:	ldr	r1, [r4, #20]
   1c7b4:	ldrb	r0, [r5], #1
   1c7b8:	bl	14e6c <main@@Base+0x13e4>
   1c7bc:	ldr	r3, [r4, #20]
   1c7c0:	add	r0, r3, r0
   1c7c4:	str	r0, [r4, #20]
   1c7c8:	sub	r3, r7, r5
   1c7cc:	cmn	r8, r3
   1c7d0:	beq	1c824 <flatcc_json_printer_bool_vector_field@@Base+0x1e0>
   1c7d4:	ldr	r3, [r4, #20]
   1c7d8:	add	r2, r3, #1
   1c7dc:	str	r2, [r4, #20]
   1c7e0:	strb	r9, [r3]
   1c7e4:	ldrb	r3, [r4, #25]
   1c7e8:	cmp	r3, #0
   1c7ec:	bne	1c768 <flatcc_json_printer_bool_vector_field@@Base+0x124>
   1c7f0:	ldr	r2, [r4, #20]
   1c7f4:	ldr	r3, [r4, #16]
   1c7f8:	cmp	r2, r3
   1c7fc:	bcc	1c7b0 <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   1c800:	ldr	r3, [r4, #44]	; 0x2c
   1c804:	mov	r1, fp
   1c808:	mov	r0, r4
   1c80c:	blx	r3
   1c810:	b	1c7b0 <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   1c814:	mov	r1, r6
   1c818:	mov	r0, r4
   1c81c:	bl	14ea4 <main@@Base+0x141c>
   1c820:	b	1c7b0 <flatcc_json_printer_bool_vector_field@@Base+0x16c>
   1c824:	ldrb	r3, [r4, #25]
   1c828:	cmp	r3, #0
   1c82c:	bne	1c848 <flatcc_json_printer_bool_vector_field@@Base+0x204>
   1c830:	ldr	r3, [r4, #20]
   1c834:	add	r2, r3, #1
   1c838:	str	r2, [r4, #20]
   1c83c:	mov	r2, #93	; 0x5d
   1c840:	strb	r2, [r3]
   1c844:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c848:	ldr	r3, [r4, #20]
   1c84c:	add	r2, r3, #1
   1c850:	str	r2, [r4, #20]
   1c854:	mov	r2, #10
   1c858:	strb	r2, [r3]
   1c85c:	ldr	r5, [r4, #32]
   1c860:	sub	r5, r5, #1
   1c864:	str	r5, [r4, #32]
   1c868:	ldrb	r3, [r4, #25]
   1c86c:	mul	r5, r5, r3
   1c870:	ldr	r0, [r4, #20]
   1c874:	add	r3, r0, r5
   1c878:	ldr	r2, [r4, #16]
   1c87c:	cmp	r2, r3
   1c880:	bcc	1c8a0 <flatcc_json_printer_bool_vector_field@@Base+0x25c>
   1c884:	mov	r2, r5
   1c888:	mov	r1, #32
   1c88c:	bl	124e8 <memset@plt>
   1c890:	ldr	r3, [r4, #20]
   1c894:	add	r5, r3, r5
   1c898:	str	r5, [r4, #20]
   1c89c:	b	1c830 <flatcc_json_printer_bool_vector_field@@Base+0x1ec>
   1c8a0:	mov	r1, r5
   1c8a4:	mov	r0, r4
   1c8a8:	bl	14ea4 <main@@Base+0x141c>
   1c8ac:	b	1c830 <flatcc_json_printer_bool_vector_field@@Base+0x1ec>

0001c8b0 <flatcc_json_printer_float_vector_field@@Base>:
   1c8b0:	add	r2, r2, #2
   1c8b4:	lsl	r2, r2, #1
   1c8b8:	ldr	ip, [r1, #8]
   1c8bc:	cmp	ip, r2
   1c8c0:	bxle	lr
   1c8c4:	ldr	ip, [r1, #4]
   1c8c8:	ldrh	ip, [ip, r2]
   1c8cc:	cmp	ip, #0
   1c8d0:	bxeq	lr
   1c8d4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8d8:	ldr	r5, [r1]
   1c8dc:	adds	lr, r5, ip
   1c8e0:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8e4:	ldr	r2, [r1, #16]
   1c8e8:	add	r4, r2, #1
   1c8ec:	str	r4, [r1, #16]
   1c8f0:	cmp	r2, #0
   1c8f4:	ldrne	r2, [r0, #20]
   1c8f8:	addne	r1, r2, #1
   1c8fc:	strne	r1, [r0, #20]
   1c900:	movne	r1, #44	; 0x2c
   1c904:	strbne	r1, [r2]
   1c908:	mov	r1, r3
   1c90c:	mov	r4, r0
   1c910:	ldr	r3, [r5, ip]
   1c914:	add	r6, lr, r3
   1c918:	ldr	r7, [lr, r3]
   1c91c:	ldr	r2, [sp, #40]	; 0x28
   1c920:	bl	15408 <main@@Base+0x1980>
   1c924:	ldr	r3, [r4, #32]
   1c928:	add	r3, r3, #1
   1c92c:	str	r3, [r4, #32]
   1c930:	ldr	r3, [r4, #20]
   1c934:	add	r2, r3, #1
   1c938:	str	r2, [r4, #20]
   1c93c:	mov	r2, #91	; 0x5b
   1c940:	strb	r2, [r3]
   1c944:	cmp	r7, #0
   1c948:	beq	1caa0 <flatcc_json_printer_float_vector_field@@Base+0x1f0>
   1c94c:	ldrb	r3, [r4, #25]
   1c950:	cmp	r3, #0
   1c954:	bne	1c9a8 <flatcc_json_printer_float_vector_field@@Base+0xf8>
   1c958:	ldr	r2, [r4, #20]
   1c95c:	ldr	r3, [r4, #16]
   1c960:	cmp	r2, r3
   1c964:	bcs	1c9c8 <flatcc_json_printer_float_vector_field@@Base+0x118>
   1c968:	vldr	s0, [r6, #4]
   1c96c:	ldr	r0, [r4, #20]
   1c970:	vcvt.f64.f32	d0, s0
   1c974:	bl	15554 <main@@Base+0x1acc>
   1c978:	ldr	r3, [r4, #20]
   1c97c:	add	r0, r3, r0
   1c980:	str	r0, [r4, #20]
   1c984:	add	r6, r6, #8
   1c988:	sub	r5, r7, #2
   1c98c:	cmp	r7, #1
   1c990:	beq	1caa0 <flatcc_json_printer_float_vector_field@@Base+0x1f0>
   1c994:	mov	r7, #44	; 0x2c
   1c998:	mov	r9, #0
   1c99c:	mov	r8, #10
   1c9a0:	mov	sl, #32
   1c9a4:	b	1ca50 <flatcc_json_printer_float_vector_field@@Base+0x1a0>
   1c9a8:	ldr	r3, [r4, #20]
   1c9ac:	add	r2, r3, #1
   1c9b0:	str	r2, [r4, #20]
   1c9b4:	mov	r2, #10
   1c9b8:	strb	r2, [r3]
   1c9bc:	mov	r0, r4
   1c9c0:	bl	14f50 <main@@Base+0x14c8>
   1c9c4:	b	1c968 <flatcc_json_printer_float_vector_field@@Base+0xb8>
   1c9c8:	ldr	r3, [r4, #44]	; 0x2c
   1c9cc:	mov	r1, #0
   1c9d0:	mov	r0, r4
   1c9d4:	blx	r3
   1c9d8:	b	1c968 <flatcc_json_printer_float_vector_field@@Base+0xb8>
   1c9dc:	ldr	r3, [r4, #20]
   1c9e0:	add	r2, r3, #1
   1c9e4:	str	r2, [r4, #20]
   1c9e8:	strb	r8, [r3]
   1c9ec:	ldrb	r3, [r4, #25]
   1c9f0:	ldr	fp, [r4, #32]
   1c9f4:	mul	fp, fp, r3
   1c9f8:	ldr	r0, [r4, #20]
   1c9fc:	add	r3, r0, fp
   1ca00:	ldr	r2, [r4, #16]
   1ca04:	cmp	r2, r3
   1ca08:	bcc	1ca90 <flatcc_json_printer_float_vector_field@@Base+0x1e0>
   1ca0c:	mov	r2, fp
   1ca10:	mov	r1, sl
   1ca14:	bl	124e8 <memset@plt>
   1ca18:	ldr	r3, [r4, #20]
   1ca1c:	add	fp, r3, fp
   1ca20:	str	fp, [r4, #20]
   1ca24:	vldmia	r6!, {s0}
   1ca28:	ldr	r0, [r4, #20]
   1ca2c:	vcvt.f64.f32	d0, s0
   1ca30:	bl	15554 <main@@Base+0x1acc>
   1ca34:	ldr	r3, [r4, #20]
   1ca38:	add	r0, r3, r0
   1ca3c:	str	r0, [r4, #20]
   1ca40:	sub	r3, r5, #1
   1ca44:	cmp	r5, #0
   1ca48:	beq	1caa0 <flatcc_json_printer_float_vector_field@@Base+0x1f0>
   1ca4c:	mov	r5, r3
   1ca50:	ldr	r3, [r4, #20]
   1ca54:	add	r2, r3, #1
   1ca58:	str	r2, [r4, #20]
   1ca5c:	strb	r7, [r3]
   1ca60:	ldrb	r3, [r4, #25]
   1ca64:	cmp	r3, #0
   1ca68:	bne	1c9dc <flatcc_json_printer_float_vector_field@@Base+0x12c>
   1ca6c:	ldr	r2, [r4, #20]
   1ca70:	ldr	r3, [r4, #16]
   1ca74:	cmp	r2, r3
   1ca78:	bcc	1ca24 <flatcc_json_printer_float_vector_field@@Base+0x174>
   1ca7c:	ldr	r3, [r4, #44]	; 0x2c
   1ca80:	mov	r1, r9
   1ca84:	mov	r0, r4
   1ca88:	blx	r3
   1ca8c:	b	1ca24 <flatcc_json_printer_float_vector_field@@Base+0x174>
   1ca90:	mov	r1, fp
   1ca94:	mov	r0, r4
   1ca98:	bl	14ea4 <main@@Base+0x141c>
   1ca9c:	b	1ca24 <flatcc_json_printer_float_vector_field@@Base+0x174>
   1caa0:	ldrb	r3, [r4, #25]
   1caa4:	cmp	r3, #0
   1caa8:	bne	1cac4 <flatcc_json_printer_float_vector_field@@Base+0x214>
   1caac:	ldr	r3, [r4, #20]
   1cab0:	add	r2, r3, #1
   1cab4:	str	r2, [r4, #20]
   1cab8:	mov	r2, #93	; 0x5d
   1cabc:	strb	r2, [r3]
   1cac0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cac4:	ldr	r3, [r4, #20]
   1cac8:	add	r2, r3, #1
   1cacc:	str	r2, [r4, #20]
   1cad0:	mov	r2, #10
   1cad4:	strb	r2, [r3]
   1cad8:	ldr	r5, [r4, #32]
   1cadc:	sub	r5, r5, #1
   1cae0:	str	r5, [r4, #32]
   1cae4:	ldrb	r3, [r4, #25]
   1cae8:	mul	r5, r5, r3
   1caec:	ldr	r0, [r4, #20]
   1caf0:	add	r3, r0, r5
   1caf4:	ldr	r2, [r4, #16]
   1caf8:	cmp	r2, r3
   1cafc:	bcc	1cb1c <flatcc_json_printer_float_vector_field@@Base+0x26c>
   1cb00:	mov	r2, r5
   1cb04:	mov	r1, #32
   1cb08:	bl	124e8 <memset@plt>
   1cb0c:	ldr	r3, [r4, #20]
   1cb10:	add	r5, r3, r5
   1cb14:	str	r5, [r4, #20]
   1cb18:	b	1caac <flatcc_json_printer_float_vector_field@@Base+0x1fc>
   1cb1c:	mov	r1, r5
   1cb20:	mov	r0, r4
   1cb24:	bl	14ea4 <main@@Base+0x141c>
   1cb28:	b	1caac <flatcc_json_printer_float_vector_field@@Base+0x1fc>

0001cb2c <flatcc_json_printer_double_vector_field@@Base>:
   1cb2c:	add	r2, r2, #2
   1cb30:	lsl	r2, r2, #1
   1cb34:	ldr	ip, [r1, #8]
   1cb38:	cmp	ip, r2
   1cb3c:	bxle	lr
   1cb40:	ldr	ip, [r1, #4]
   1cb44:	ldrh	ip, [ip, r2]
   1cb48:	cmp	ip, #0
   1cb4c:	bxeq	lr
   1cb50:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb54:	ldr	r5, [r1]
   1cb58:	adds	lr, r5, ip
   1cb5c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb60:	ldr	r2, [r1, #16]
   1cb64:	add	r4, r2, #1
   1cb68:	str	r4, [r1, #16]
   1cb6c:	cmp	r2, #0
   1cb70:	ldrne	r2, [r0, #20]
   1cb74:	addne	r1, r2, #1
   1cb78:	strne	r1, [r0, #20]
   1cb7c:	movne	r1, #44	; 0x2c
   1cb80:	strbne	r1, [r2]
   1cb84:	mov	r1, r3
   1cb88:	mov	r4, r0
   1cb8c:	ldr	r3, [r5, ip]
   1cb90:	add	r6, lr, r3
   1cb94:	ldr	r7, [lr, r3]
   1cb98:	ldr	r2, [sp, #40]	; 0x28
   1cb9c:	bl	15408 <main@@Base+0x1980>
   1cba0:	ldr	r3, [r4, #32]
   1cba4:	add	r3, r3, #1
   1cba8:	str	r3, [r4, #32]
   1cbac:	ldr	r3, [r4, #20]
   1cbb0:	add	r2, r3, #1
   1cbb4:	str	r2, [r4, #20]
   1cbb8:	mov	r2, #91	; 0x5b
   1cbbc:	strb	r2, [r3]
   1cbc0:	cmp	r7, #0
   1cbc4:	beq	1cd14 <flatcc_json_printer_double_vector_field@@Base+0x1e8>
   1cbc8:	ldrb	r3, [r4, #25]
   1cbcc:	cmp	r3, #0
   1cbd0:	bne	1cc20 <flatcc_json_printer_double_vector_field@@Base+0xf4>
   1cbd4:	ldr	r2, [r4, #20]
   1cbd8:	ldr	r3, [r4, #16]
   1cbdc:	cmp	r2, r3
   1cbe0:	bcs	1cc40 <flatcc_json_printer_double_vector_field@@Base+0x114>
   1cbe4:	ldr	r0, [r4, #20]
   1cbe8:	vldr	d0, [r6, #4]
   1cbec:	bl	15554 <main@@Base+0x1acc>
   1cbf0:	ldr	r3, [r4, #20]
   1cbf4:	add	r0, r3, r0
   1cbf8:	str	r0, [r4, #20]
   1cbfc:	add	r6, r6, #12
   1cc00:	sub	r5, r7, #2
   1cc04:	cmp	r7, #1
   1cc08:	beq	1cd14 <flatcc_json_printer_double_vector_field@@Base+0x1e8>
   1cc0c:	mov	r7, #44	; 0x2c
   1cc10:	mov	r9, #0
   1cc14:	mov	r8, #10
   1cc18:	mov	sl, #32
   1cc1c:	b	1ccc4 <flatcc_json_printer_double_vector_field@@Base+0x198>
   1cc20:	ldr	r3, [r4, #20]
   1cc24:	add	r2, r3, #1
   1cc28:	str	r2, [r4, #20]
   1cc2c:	mov	r2, #10
   1cc30:	strb	r2, [r3]
   1cc34:	mov	r0, r4
   1cc38:	bl	14f50 <main@@Base+0x14c8>
   1cc3c:	b	1cbe4 <flatcc_json_printer_double_vector_field@@Base+0xb8>
   1cc40:	ldr	r3, [r4, #44]	; 0x2c
   1cc44:	mov	r1, #0
   1cc48:	mov	r0, r4
   1cc4c:	blx	r3
   1cc50:	b	1cbe4 <flatcc_json_printer_double_vector_field@@Base+0xb8>
   1cc54:	ldr	r3, [r4, #20]
   1cc58:	add	r2, r3, #1
   1cc5c:	str	r2, [r4, #20]
   1cc60:	strb	r8, [r3]
   1cc64:	ldrb	r3, [r4, #25]
   1cc68:	ldr	fp, [r4, #32]
   1cc6c:	mul	fp, fp, r3
   1cc70:	ldr	r0, [r4, #20]
   1cc74:	add	r3, r0, fp
   1cc78:	ldr	r2, [r4, #16]
   1cc7c:	cmp	r2, r3
   1cc80:	bcc	1cd04 <flatcc_json_printer_double_vector_field@@Base+0x1d8>
   1cc84:	mov	r2, fp
   1cc88:	mov	r1, sl
   1cc8c:	bl	124e8 <memset@plt>
   1cc90:	ldr	r3, [r4, #20]
   1cc94:	add	fp, r3, fp
   1cc98:	str	fp, [r4, #20]
   1cc9c:	ldr	r0, [r4, #20]
   1cca0:	vldmia	r6!, {d0}
   1cca4:	bl	15554 <main@@Base+0x1acc>
   1cca8:	ldr	r3, [r4, #20]
   1ccac:	add	r0, r3, r0
   1ccb0:	str	r0, [r4, #20]
   1ccb4:	sub	r3, r5, #1
   1ccb8:	cmp	r5, #0
   1ccbc:	beq	1cd14 <flatcc_json_printer_double_vector_field@@Base+0x1e8>
   1ccc0:	mov	r5, r3
   1ccc4:	ldr	r3, [r4, #20]
   1ccc8:	add	r2, r3, #1
   1cccc:	str	r2, [r4, #20]
   1ccd0:	strb	r7, [r3]
   1ccd4:	ldrb	r3, [r4, #25]
   1ccd8:	cmp	r3, #0
   1ccdc:	bne	1cc54 <flatcc_json_printer_double_vector_field@@Base+0x128>
   1cce0:	ldr	r2, [r4, #20]
   1cce4:	ldr	r3, [r4, #16]
   1cce8:	cmp	r2, r3
   1ccec:	bcc	1cc9c <flatcc_json_printer_double_vector_field@@Base+0x170>
   1ccf0:	ldr	r3, [r4, #44]	; 0x2c
   1ccf4:	mov	r1, r9
   1ccf8:	mov	r0, r4
   1ccfc:	blx	r3
   1cd00:	b	1cc9c <flatcc_json_printer_double_vector_field@@Base+0x170>
   1cd04:	mov	r1, fp
   1cd08:	mov	r0, r4
   1cd0c:	bl	14ea4 <main@@Base+0x141c>
   1cd10:	b	1cc9c <flatcc_json_printer_double_vector_field@@Base+0x170>
   1cd14:	ldrb	r3, [r4, #25]
   1cd18:	cmp	r3, #0
   1cd1c:	bne	1cd38 <flatcc_json_printer_double_vector_field@@Base+0x20c>
   1cd20:	ldr	r3, [r4, #20]
   1cd24:	add	r2, r3, #1
   1cd28:	str	r2, [r4, #20]
   1cd2c:	mov	r2, #93	; 0x5d
   1cd30:	strb	r2, [r3]
   1cd34:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd38:	ldr	r3, [r4, #20]
   1cd3c:	add	r2, r3, #1
   1cd40:	str	r2, [r4, #20]
   1cd44:	mov	r2, #10
   1cd48:	strb	r2, [r3]
   1cd4c:	ldr	r5, [r4, #32]
   1cd50:	sub	r5, r5, #1
   1cd54:	str	r5, [r4, #32]
   1cd58:	ldrb	r3, [r4, #25]
   1cd5c:	mul	r5, r5, r3
   1cd60:	ldr	r0, [r4, #20]
   1cd64:	add	r3, r0, r5
   1cd68:	ldr	r2, [r4, #16]
   1cd6c:	cmp	r2, r3
   1cd70:	bcc	1cd90 <flatcc_json_printer_double_vector_field@@Base+0x264>
   1cd74:	mov	r2, r5
   1cd78:	mov	r1, #32
   1cd7c:	bl	124e8 <memset@plt>
   1cd80:	ldr	r3, [r4, #20]
   1cd84:	add	r5, r3, r5
   1cd88:	str	r5, [r4, #20]
   1cd8c:	b	1cd20 <flatcc_json_printer_double_vector_field@@Base+0x1f4>
   1cd90:	mov	r1, r5
   1cd94:	mov	r0, r4
   1cd98:	bl	14ea4 <main@@Base+0x141c>
   1cd9c:	b	1cd20 <flatcc_json_printer_double_vector_field@@Base+0x1f4>

0001cda0 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1cda0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cda4:	sub	sp, sp, #12
   1cda8:	mov	r4, r0
   1cdac:	ldr	r9, [sp, #52]	; 0x34
   1cdb0:	ldrb	r0, [r0, #27]
   1cdb4:	cmp	r0, #0
   1cdb8:	bne	1ce98 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf8>
   1cdbc:	add	r2, r2, #2
   1cdc0:	lsl	r2, r2, #1
   1cdc4:	ldr	r0, [r1, #8]
   1cdc8:	cmp	r0, r2
   1cdcc:	ble	1cfb0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x210>
   1cdd0:	ldr	r0, [r1, #4]
   1cdd4:	ldrh	r0, [r0, r2]
   1cdd8:	cmp	r0, #0
   1cddc:	beq	1cfb0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x210>
   1cde0:	ldr	r5, [r1]
   1cde4:	adds	ip, r5, r0
   1cde8:	beq	1cfb0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x210>
   1cdec:	ldr	r2, [r1, #16]
   1cdf0:	add	lr, r2, #1
   1cdf4:	str	lr, [r1, #16]
   1cdf8:	cmp	r2, #0
   1cdfc:	ldrne	r2, [r4, #20]
   1ce00:	addne	r1, r2, #1
   1ce04:	strne	r1, [r4, #20]
   1ce08:	movne	r1, #44	; 0x2c
   1ce0c:	strbne	r1, [r2]
   1ce10:	ldr	r2, [r5, r0]
   1ce14:	add	r8, ip, r2
   1ce18:	ldr	r7, [ip, r2]
   1ce1c:	ldr	r2, [sp, #48]	; 0x30
   1ce20:	mov	r1, r3
   1ce24:	mov	r0, r4
   1ce28:	bl	15408 <main@@Base+0x1980>
   1ce2c:	ldr	r3, [r4, #32]
   1ce30:	add	r3, r3, #1
   1ce34:	str	r3, [r4, #32]
   1ce38:	ldr	r3, [r4, #20]
   1ce3c:	add	r2, r3, #1
   1ce40:	str	r2, [r4, #20]
   1ce44:	mov	r2, #91	; 0x5b
   1ce48:	strb	r2, [r3]
   1ce4c:	cmp	r7, #0
   1ce50:	beq	1cf90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
   1ce54:	ldrb	r3, [r4, #25]
   1ce58:	cmp	r3, #0
   1ce5c:	bne	1ceac <flatcc_json_printer_utype_enum_vector_field@@Base+0x10c>
   1ce60:	ldr	r2, [r4, #20]
   1ce64:	ldr	r3, [r4, #16]
   1ce68:	cmp	r2, r3
   1ce6c:	bcs	1cecc <flatcc_json_printer_utype_enum_vector_field@@Base+0x12c>
   1ce70:	ldrb	r1, [r8, #4]
   1ce74:	mov	r0, r4
   1ce78:	blx	r9
   1ce7c:	add	r5, r8, #5
   1ce80:	cmp	r7, #1
   1ce84:	beq	1cf90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
   1ce88:	mov	sl, #44	; 0x2c
   1ce8c:	mov	fp, #10
   1ce90:	add	r7, r7, #4
   1ce94:	b	1cf40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a0>
   1ce98:	ldr	r0, [sp, #48]	; 0x30
   1ce9c:	str	r0, [sp]
   1cea0:	mov	r0, r4
   1cea4:	bl	1af18 <flatcc_json_printer_utype_vector_field@@Base>
   1cea8:	b	1cfb0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x210>
   1ceac:	ldr	r3, [r4, #20]
   1ceb0:	add	r2, r3, #1
   1ceb4:	str	r2, [r4, #20]
   1ceb8:	mov	r2, #10
   1cebc:	strb	r2, [r3]
   1cec0:	mov	r0, r4
   1cec4:	bl	14f50 <main@@Base+0x14c8>
   1cec8:	b	1ce70 <flatcc_json_printer_utype_enum_vector_field@@Base+0xd0>
   1cecc:	ldr	r3, [r4, #44]	; 0x2c
   1ced0:	mov	r1, #0
   1ced4:	mov	r0, r4
   1ced8:	blx	r3
   1cedc:	b	1ce70 <flatcc_json_printer_utype_enum_vector_field@@Base+0xd0>
   1cee0:	ldr	r3, [r4, #20]
   1cee4:	add	r2, r3, #1
   1cee8:	str	r2, [r4, #20]
   1ceec:	strb	fp, [r3]
   1cef0:	ldrb	r3, [r4, #25]
   1cef4:	ldr	r6, [r4, #32]
   1cef8:	mul	r6, r6, r3
   1cefc:	ldr	r0, [r4, #20]
   1cf00:	add	r3, r0, r6
   1cf04:	ldr	r2, [r4, #16]
   1cf08:	cmp	r2, r3
   1cf0c:	bcc	1cf80 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1e0>
   1cf10:	mov	r2, r6
   1cf14:	mov	r1, #32
   1cf18:	bl	124e8 <memset@plt>
   1cf1c:	ldr	r3, [r4, #20]
   1cf20:	add	r6, r3, r6
   1cf24:	str	r6, [r4, #20]
   1cf28:	ldrb	r1, [r5], #1
   1cf2c:	mov	r0, r4
   1cf30:	blx	r9
   1cf34:	sub	r3, r7, r5
   1cf38:	cmn	r8, r3
   1cf3c:	beq	1cf90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
   1cf40:	ldr	r3, [r4, #20]
   1cf44:	add	r2, r3, #1
   1cf48:	str	r2, [r4, #20]
   1cf4c:	strb	sl, [r3]
   1cf50:	ldrb	r3, [r4, #25]
   1cf54:	cmp	r3, #0
   1cf58:	bne	1cee0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
   1cf5c:	ldr	r2, [r4, #20]
   1cf60:	ldr	r3, [r4, #16]
   1cf64:	cmp	r2, r3
   1cf68:	bcc	1cf28 <flatcc_json_printer_utype_enum_vector_field@@Base+0x188>
   1cf6c:	ldr	r3, [r4, #44]	; 0x2c
   1cf70:	mov	r1, #0
   1cf74:	mov	r0, r4
   1cf78:	blx	r3
   1cf7c:	b	1cf28 <flatcc_json_printer_utype_enum_vector_field@@Base+0x188>
   1cf80:	mov	r1, r6
   1cf84:	mov	r0, r4
   1cf88:	bl	14ea4 <main@@Base+0x141c>
   1cf8c:	b	1cf28 <flatcc_json_printer_utype_enum_vector_field@@Base+0x188>
   1cf90:	ldrb	r3, [r4, #25]
   1cf94:	cmp	r3, #0
   1cf98:	bne	1cfb8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   1cf9c:	ldr	r3, [r4, #20]
   1cfa0:	add	r2, r3, #1
   1cfa4:	str	r2, [r4, #20]
   1cfa8:	mov	r2, #93	; 0x5d
   1cfac:	strb	r2, [r3]
   1cfb0:	add	sp, sp, #12
   1cfb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cfb8:	ldr	r3, [r4, #20]
   1cfbc:	add	r2, r3, #1
   1cfc0:	str	r2, [r4, #20]
   1cfc4:	mov	r2, #10
   1cfc8:	strb	r2, [r3]
   1cfcc:	ldr	r5, [r4, #32]
   1cfd0:	sub	r5, r5, #1
   1cfd4:	str	r5, [r4, #32]
   1cfd8:	ldrb	r3, [r4, #25]
   1cfdc:	mul	r5, r5, r3
   1cfe0:	ldr	r0, [r4, #20]
   1cfe4:	add	r3, r0, r5
   1cfe8:	ldr	r2, [r4, #16]
   1cfec:	cmp	r2, r3
   1cff0:	bcc	1d010 <flatcc_json_printer_utype_enum_vector_field@@Base+0x270>
   1cff4:	mov	r2, r5
   1cff8:	mov	r1, #32
   1cffc:	bl	124e8 <memset@plt>
   1d000:	ldr	r3, [r4, #20]
   1d004:	add	r5, r3, r5
   1d008:	str	r5, [r4, #20]
   1d00c:	b	1cf9c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fc>
   1d010:	mov	r1, r5
   1d014:	mov	r0, r4
   1d018:	bl	14ea4 <main@@Base+0x141c>
   1d01c:	b	1cf9c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fc>

0001d020 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1d020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d024:	sub	sp, sp, #12
   1d028:	mov	r4, r0
   1d02c:	ldr	r9, [sp, #52]	; 0x34
   1d030:	ldrb	r0, [r0, #27]
   1d034:	cmp	r0, #0
   1d038:	bne	1d118 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf8>
   1d03c:	add	r2, r2, #2
   1d040:	lsl	r2, r2, #1
   1d044:	ldr	r0, [r1, #8]
   1d048:	cmp	r0, r2
   1d04c:	ble	1d230 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x210>
   1d050:	ldr	r0, [r1, #4]
   1d054:	ldrh	r0, [r0, r2]
   1d058:	cmp	r0, #0
   1d05c:	beq	1d230 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x210>
   1d060:	ldr	r5, [r1]
   1d064:	adds	ip, r5, r0
   1d068:	beq	1d230 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x210>
   1d06c:	ldr	r2, [r1, #16]
   1d070:	add	lr, r2, #1
   1d074:	str	lr, [r1, #16]
   1d078:	cmp	r2, #0
   1d07c:	ldrne	r2, [r4, #20]
   1d080:	addne	r1, r2, #1
   1d084:	strne	r1, [r4, #20]
   1d088:	movne	r1, #44	; 0x2c
   1d08c:	strbne	r1, [r2]
   1d090:	ldr	r2, [r5, r0]
   1d094:	add	r8, ip, r2
   1d098:	ldr	r7, [ip, r2]
   1d09c:	ldr	r2, [sp, #48]	; 0x30
   1d0a0:	mov	r1, r3
   1d0a4:	mov	r0, r4
   1d0a8:	bl	15408 <main@@Base+0x1980>
   1d0ac:	ldr	r3, [r4, #32]
   1d0b0:	add	r3, r3, #1
   1d0b4:	str	r3, [r4, #32]
   1d0b8:	ldr	r3, [r4, #20]
   1d0bc:	add	r2, r3, #1
   1d0c0:	str	r2, [r4, #20]
   1d0c4:	mov	r2, #91	; 0x5b
   1d0c8:	strb	r2, [r3]
   1d0cc:	cmp	r7, #0
   1d0d0:	beq	1d210 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
   1d0d4:	ldrb	r3, [r4, #25]
   1d0d8:	cmp	r3, #0
   1d0dc:	bne	1d12c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x10c>
   1d0e0:	ldr	r2, [r4, #20]
   1d0e4:	ldr	r3, [r4, #16]
   1d0e8:	cmp	r2, r3
   1d0ec:	bcs	1d14c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x12c>
   1d0f0:	ldrb	r1, [r8, #4]
   1d0f4:	mov	r0, r4
   1d0f8:	blx	r9
   1d0fc:	add	r5, r8, #5
   1d100:	cmp	r7, #1
   1d104:	beq	1d210 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
   1d108:	mov	sl, #44	; 0x2c
   1d10c:	mov	fp, #10
   1d110:	add	r7, r7, #4
   1d114:	b	1d1c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a0>
   1d118:	ldr	r0, [sp, #48]	; 0x30
   1d11c:	str	r0, [sp]
   1d120:	mov	r0, r4
   1d124:	bl	1b184 <flatcc_json_printer_uint8_vector_field@@Base>
   1d128:	b	1d230 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x210>
   1d12c:	ldr	r3, [r4, #20]
   1d130:	add	r2, r3, #1
   1d134:	str	r2, [r4, #20]
   1d138:	mov	r2, #10
   1d13c:	strb	r2, [r3]
   1d140:	mov	r0, r4
   1d144:	bl	14f50 <main@@Base+0x14c8>
   1d148:	b	1d0f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xd0>
   1d14c:	ldr	r3, [r4, #44]	; 0x2c
   1d150:	mov	r1, #0
   1d154:	mov	r0, r4
   1d158:	blx	r3
   1d15c:	b	1d0f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xd0>
   1d160:	ldr	r3, [r4, #20]
   1d164:	add	r2, r3, #1
   1d168:	str	r2, [r4, #20]
   1d16c:	strb	fp, [r3]
   1d170:	ldrb	r3, [r4, #25]
   1d174:	ldr	r6, [r4, #32]
   1d178:	mul	r6, r6, r3
   1d17c:	ldr	r0, [r4, #20]
   1d180:	add	r3, r0, r6
   1d184:	ldr	r2, [r4, #16]
   1d188:	cmp	r2, r3
   1d18c:	bcc	1d200 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e0>
   1d190:	mov	r2, r6
   1d194:	mov	r1, #32
   1d198:	bl	124e8 <memset@plt>
   1d19c:	ldr	r3, [r4, #20]
   1d1a0:	add	r6, r3, r6
   1d1a4:	str	r6, [r4, #20]
   1d1a8:	ldrb	r1, [r5], #1
   1d1ac:	mov	r0, r4
   1d1b0:	blx	r9
   1d1b4:	sub	r3, r7, r5
   1d1b8:	cmn	r8, r3
   1d1bc:	beq	1d210 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
   1d1c0:	ldr	r3, [r4, #20]
   1d1c4:	add	r2, r3, #1
   1d1c8:	str	r2, [r4, #20]
   1d1cc:	strb	sl, [r3]
   1d1d0:	ldrb	r3, [r4, #25]
   1d1d4:	cmp	r3, #0
   1d1d8:	bne	1d160 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
   1d1dc:	ldr	r2, [r4, #20]
   1d1e0:	ldr	r3, [r4, #16]
   1d1e4:	cmp	r2, r3
   1d1e8:	bcc	1d1a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x188>
   1d1ec:	ldr	r3, [r4, #44]	; 0x2c
   1d1f0:	mov	r1, #0
   1d1f4:	mov	r0, r4
   1d1f8:	blx	r3
   1d1fc:	b	1d1a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x188>
   1d200:	mov	r1, r6
   1d204:	mov	r0, r4
   1d208:	bl	14ea4 <main@@Base+0x141c>
   1d20c:	b	1d1a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x188>
   1d210:	ldrb	r3, [r4, #25]
   1d214:	cmp	r3, #0
   1d218:	bne	1d238 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   1d21c:	ldr	r3, [r4, #20]
   1d220:	add	r2, r3, #1
   1d224:	str	r2, [r4, #20]
   1d228:	mov	r2, #93	; 0x5d
   1d22c:	strb	r2, [r3]
   1d230:	add	sp, sp, #12
   1d234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d238:	ldr	r3, [r4, #20]
   1d23c:	add	r2, r3, #1
   1d240:	str	r2, [r4, #20]
   1d244:	mov	r2, #10
   1d248:	strb	r2, [r3]
   1d24c:	ldr	r5, [r4, #32]
   1d250:	sub	r5, r5, #1
   1d254:	str	r5, [r4, #32]
   1d258:	ldrb	r3, [r4, #25]
   1d25c:	mul	r5, r5, r3
   1d260:	ldr	r0, [r4, #20]
   1d264:	add	r3, r0, r5
   1d268:	ldr	r2, [r4, #16]
   1d26c:	cmp	r2, r3
   1d270:	bcc	1d290 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x270>
   1d274:	mov	r2, r5
   1d278:	mov	r1, #32
   1d27c:	bl	124e8 <memset@plt>
   1d280:	ldr	r3, [r4, #20]
   1d284:	add	r5, r3, r5
   1d288:	str	r5, [r4, #20]
   1d28c:	b	1d21c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fc>
   1d290:	mov	r1, r5
   1d294:	mov	r0, r4
   1d298:	bl	14ea4 <main@@Base+0x141c>
   1d29c:	b	1d21c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fc>

0001d2a0 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1d2a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2a4:	sub	sp, sp, #12
   1d2a8:	mov	r4, r0
   1d2ac:	ldr	r8, [sp, #52]	; 0x34
   1d2b0:	ldrb	r0, [r0, #27]
   1d2b4:	cmp	r0, #0
   1d2b8:	bne	1d39c <flatcc_json_printer_uint16_enum_vector_field@@Base+0xfc>
   1d2bc:	add	r2, r2, #2
   1d2c0:	lsl	r2, r2, #1
   1d2c4:	ldr	r0, [r1, #8]
   1d2c8:	cmp	r0, r2
   1d2cc:	ble	1d4b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   1d2d0:	ldr	r0, [r1, #4]
   1d2d4:	ldrh	r0, [r0, r2]
   1d2d8:	cmp	r0, #0
   1d2dc:	beq	1d4b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   1d2e0:	ldr	r5, [r1]
   1d2e4:	adds	ip, r5, r0
   1d2e8:	beq	1d4b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   1d2ec:	ldr	r2, [r1, #16]
   1d2f0:	add	lr, r2, #1
   1d2f4:	str	lr, [r1, #16]
   1d2f8:	cmp	r2, #0
   1d2fc:	ldrne	r2, [r4, #20]
   1d300:	addne	r1, r2, #1
   1d304:	strne	r1, [r4, #20]
   1d308:	movne	r1, #44	; 0x2c
   1d30c:	strbne	r1, [r2]
   1d310:	ldr	r2, [r5, r0]
   1d314:	add	r6, ip, r2
   1d318:	ldr	r7, [ip, r2]
   1d31c:	ldr	r2, [sp, #48]	; 0x30
   1d320:	mov	r1, r3
   1d324:	mov	r0, r4
   1d328:	bl	15408 <main@@Base+0x1980>
   1d32c:	ldr	r3, [r4, #32]
   1d330:	add	r3, r3, #1
   1d334:	str	r3, [r4, #32]
   1d338:	ldr	r3, [r4, #20]
   1d33c:	add	r2, r3, #1
   1d340:	str	r2, [r4, #20]
   1d344:	mov	r2, #91	; 0x5b
   1d348:	strb	r2, [r3]
   1d34c:	cmp	r7, #0
   1d350:	beq	1d498 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1f8>
   1d354:	ldrb	r3, [r4, #25]
   1d358:	cmp	r3, #0
   1d35c:	bne	1d3b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x110>
   1d360:	ldr	r2, [r4, #20]
   1d364:	ldr	r3, [r4, #16]
   1d368:	cmp	r2, r3
   1d36c:	bcs	1d3d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   1d370:	ldrh	r1, [r6, #4]
   1d374:	mov	r0, r4
   1d378:	blx	r8
   1d37c:	add	r6, r6, #6
   1d380:	sub	r5, r7, #2
   1d384:	cmp	r7, #1
   1d388:	beq	1d498 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1f8>
   1d38c:	mov	r9, #44	; 0x2c
   1d390:	mov	fp, #0
   1d394:	mov	sl, #10
   1d398:	b	1d448 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   1d39c:	ldr	r0, [sp, #48]	; 0x30
   1d3a0:	str	r0, [sp]
   1d3a4:	mov	r0, r4
   1d3a8:	bl	1b3f0 <flatcc_json_printer_uint16_vector_field@@Base>
   1d3ac:	b	1d4b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   1d3b0:	ldr	r3, [r4, #20]
   1d3b4:	add	r2, r3, #1
   1d3b8:	str	r2, [r4, #20]
   1d3bc:	mov	r2, #10
   1d3c0:	strb	r2, [r3]
   1d3c4:	mov	r0, r4
   1d3c8:	bl	14f50 <main@@Base+0x14c8>
   1d3cc:	b	1d370 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xd0>
   1d3d0:	ldr	r3, [r4, #44]	; 0x2c
   1d3d4:	mov	r1, #0
   1d3d8:	mov	r0, r4
   1d3dc:	blx	r3
   1d3e0:	b	1d370 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xd0>
   1d3e4:	ldr	r3, [r4, #20]
   1d3e8:	add	r2, r3, #1
   1d3ec:	str	r2, [r4, #20]
   1d3f0:	strb	sl, [r3]
   1d3f4:	ldrb	r3, [r4, #25]
   1d3f8:	ldr	r7, [r4, #32]
   1d3fc:	mul	r7, r7, r3
   1d400:	ldr	r0, [r4, #20]
   1d404:	add	r3, r0, r7
   1d408:	ldr	r2, [r4, #16]
   1d40c:	cmp	r2, r3
   1d410:	bcc	1d488 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e8>
   1d414:	mov	r2, r7
   1d418:	mov	r1, #32
   1d41c:	bl	124e8 <memset@plt>
   1d420:	ldr	r3, [r4, #20]
   1d424:	add	r7, r3, r7
   1d428:	str	r7, [r4, #20]
   1d42c:	ldrh	r1, [r6], #2
   1d430:	mov	r0, r4
   1d434:	blx	r8
   1d438:	sub	r3, r5, #1
   1d43c:	cmp	r5, #0
   1d440:	beq	1d498 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1f8>
   1d444:	mov	r5, r3
   1d448:	ldr	r3, [r4, #20]
   1d44c:	add	r2, r3, #1
   1d450:	str	r2, [r4, #20]
   1d454:	strb	r9, [r3]
   1d458:	ldrb	r3, [r4, #25]
   1d45c:	cmp	r3, #0
   1d460:	bne	1d3e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x144>
   1d464:	ldr	r2, [r4, #20]
   1d468:	ldr	r3, [r4, #16]
   1d46c:	cmp	r2, r3
   1d470:	bcc	1d42c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x18c>
   1d474:	ldr	r3, [r4, #44]	; 0x2c
   1d478:	mov	r1, fp
   1d47c:	mov	r0, r4
   1d480:	blx	r3
   1d484:	b	1d42c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x18c>
   1d488:	mov	r1, r7
   1d48c:	mov	r0, r4
   1d490:	bl	14ea4 <main@@Base+0x141c>
   1d494:	b	1d42c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x18c>
   1d498:	ldrb	r3, [r4, #25]
   1d49c:	cmp	r3, #0
   1d4a0:	bne	1d4c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
   1d4a4:	ldr	r3, [r4, #20]
   1d4a8:	add	r2, r3, #1
   1d4ac:	str	r2, [r4, #20]
   1d4b0:	mov	r2, #93	; 0x5d
   1d4b4:	strb	r2, [r3]
   1d4b8:	add	sp, sp, #12
   1d4bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4c0:	ldr	r3, [r4, #20]
   1d4c4:	add	r2, r3, #1
   1d4c8:	str	r2, [r4, #20]
   1d4cc:	mov	r2, #10
   1d4d0:	strb	r2, [r3]
   1d4d4:	ldr	r5, [r4, #32]
   1d4d8:	sub	r5, r5, #1
   1d4dc:	str	r5, [r4, #32]
   1d4e0:	ldrb	r3, [r4, #25]
   1d4e4:	mul	r5, r5, r3
   1d4e8:	ldr	r0, [r4, #20]
   1d4ec:	add	r3, r0, r5
   1d4f0:	ldr	r2, [r4, #16]
   1d4f4:	cmp	r2, r3
   1d4f8:	bcc	1d518 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x278>
   1d4fc:	mov	r2, r5
   1d500:	mov	r1, #32
   1d504:	bl	124e8 <memset@plt>
   1d508:	ldr	r3, [r4, #20]
   1d50c:	add	r5, r3, r5
   1d510:	str	r5, [r4, #20]
   1d514:	b	1d4a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x204>
   1d518:	mov	r1, r5
   1d51c:	mov	r0, r4
   1d520:	bl	14ea4 <main@@Base+0x141c>
   1d524:	b	1d4a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x204>

0001d528 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1d528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d52c:	sub	sp, sp, #12
   1d530:	mov	r4, r0
   1d534:	ldr	r8, [sp, #52]	; 0x34
   1d538:	ldrb	r0, [r0, #27]
   1d53c:	cmp	r0, #0
   1d540:	bne	1d624 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xfc>
   1d544:	add	r2, r2, #2
   1d548:	lsl	r2, r2, #1
   1d54c:	ldr	r0, [r1, #8]
   1d550:	cmp	r0, r2
   1d554:	ble	1d740 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x218>
   1d558:	ldr	r0, [r1, #4]
   1d55c:	ldrh	r0, [r0, r2]
   1d560:	cmp	r0, #0
   1d564:	beq	1d740 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x218>
   1d568:	ldr	r5, [r1]
   1d56c:	adds	ip, r5, r0
   1d570:	beq	1d740 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x218>
   1d574:	ldr	r2, [r1, #16]
   1d578:	add	lr, r2, #1
   1d57c:	str	lr, [r1, #16]
   1d580:	cmp	r2, #0
   1d584:	ldrne	r2, [r4, #20]
   1d588:	addne	r1, r2, #1
   1d58c:	strne	r1, [r4, #20]
   1d590:	movne	r1, #44	; 0x2c
   1d594:	strbne	r1, [r2]
   1d598:	ldr	r2, [r5, r0]
   1d59c:	add	r6, ip, r2
   1d5a0:	ldr	r7, [ip, r2]
   1d5a4:	ldr	r2, [sp, #48]	; 0x30
   1d5a8:	mov	r1, r3
   1d5ac:	mov	r0, r4
   1d5b0:	bl	15408 <main@@Base+0x1980>
   1d5b4:	ldr	r3, [r4, #32]
   1d5b8:	add	r3, r3, #1
   1d5bc:	str	r3, [r4, #32]
   1d5c0:	ldr	r3, [r4, #20]
   1d5c4:	add	r2, r3, #1
   1d5c8:	str	r2, [r4, #20]
   1d5cc:	mov	r2, #91	; 0x5b
   1d5d0:	strb	r2, [r3]
   1d5d4:	cmp	r7, #0
   1d5d8:	beq	1d720 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f8>
   1d5dc:	ldrb	r3, [r4, #25]
   1d5e0:	cmp	r3, #0
   1d5e4:	bne	1d638 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x110>
   1d5e8:	ldr	r2, [r4, #20]
   1d5ec:	ldr	r3, [r4, #16]
   1d5f0:	cmp	r2, r3
   1d5f4:	bcs	1d658 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   1d5f8:	ldr	r1, [r6, #4]
   1d5fc:	mov	r0, r4
   1d600:	blx	r8
   1d604:	add	r6, r6, #8
   1d608:	sub	r5, r7, #2
   1d60c:	cmp	r7, #1
   1d610:	beq	1d720 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f8>
   1d614:	mov	r9, #44	; 0x2c
   1d618:	mov	fp, #0
   1d61c:	mov	sl, #10
   1d620:	b	1d6d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   1d624:	ldr	r0, [sp, #48]	; 0x30
   1d628:	str	r0, [sp]
   1d62c:	mov	r0, r4
   1d630:	bl	1b664 <flatcc_json_printer_uint32_vector_field@@Base>
   1d634:	b	1d740 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x218>
   1d638:	ldr	r3, [r4, #20]
   1d63c:	add	r2, r3, #1
   1d640:	str	r2, [r4, #20]
   1d644:	mov	r2, #10
   1d648:	strb	r2, [r3]
   1d64c:	mov	r0, r4
   1d650:	bl	14f50 <main@@Base+0x14c8>
   1d654:	b	1d5f8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xd0>
   1d658:	ldr	r3, [r4, #44]	; 0x2c
   1d65c:	mov	r1, #0
   1d660:	mov	r0, r4
   1d664:	blx	r3
   1d668:	b	1d5f8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xd0>
   1d66c:	ldr	r3, [r4, #20]
   1d670:	add	r2, r3, #1
   1d674:	str	r2, [r4, #20]
   1d678:	strb	sl, [r3]
   1d67c:	ldrb	r3, [r4, #25]
   1d680:	ldr	r7, [r4, #32]
   1d684:	mul	r7, r7, r3
   1d688:	ldr	r0, [r4, #20]
   1d68c:	add	r3, r0, r7
   1d690:	ldr	r2, [r4, #16]
   1d694:	cmp	r2, r3
   1d698:	bcc	1d710 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e8>
   1d69c:	mov	r2, r7
   1d6a0:	mov	r1, #32
   1d6a4:	bl	124e8 <memset@plt>
   1d6a8:	ldr	r3, [r4, #20]
   1d6ac:	add	r7, r3, r7
   1d6b0:	str	r7, [r4, #20]
   1d6b4:	ldr	r1, [r6], #4
   1d6b8:	mov	r0, r4
   1d6bc:	blx	r8
   1d6c0:	sub	r3, r5, #1
   1d6c4:	cmp	r5, #0
   1d6c8:	beq	1d720 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f8>
   1d6cc:	mov	r5, r3
   1d6d0:	ldr	r3, [r4, #20]
   1d6d4:	add	r2, r3, #1
   1d6d8:	str	r2, [r4, #20]
   1d6dc:	strb	r9, [r3]
   1d6e0:	ldrb	r3, [r4, #25]
   1d6e4:	cmp	r3, #0
   1d6e8:	bne	1d66c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x144>
   1d6ec:	ldr	r2, [r4, #20]
   1d6f0:	ldr	r3, [r4, #16]
   1d6f4:	cmp	r2, r3
   1d6f8:	bcc	1d6b4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   1d6fc:	ldr	r3, [r4, #44]	; 0x2c
   1d700:	mov	r1, fp
   1d704:	mov	r0, r4
   1d708:	blx	r3
   1d70c:	b	1d6b4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   1d710:	mov	r1, r7
   1d714:	mov	r0, r4
   1d718:	bl	14ea4 <main@@Base+0x141c>
   1d71c:	b	1d6b4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   1d720:	ldrb	r3, [r4, #25]
   1d724:	cmp	r3, #0
   1d728:	bne	1d748 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x220>
   1d72c:	ldr	r3, [r4, #20]
   1d730:	add	r2, r3, #1
   1d734:	str	r2, [r4, #20]
   1d738:	mov	r2, #93	; 0x5d
   1d73c:	strb	r2, [r3]
   1d740:	add	sp, sp, #12
   1d744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d748:	ldr	r3, [r4, #20]
   1d74c:	add	r2, r3, #1
   1d750:	str	r2, [r4, #20]
   1d754:	mov	r2, #10
   1d758:	strb	r2, [r3]
   1d75c:	ldr	r5, [r4, #32]
   1d760:	sub	r5, r5, #1
   1d764:	str	r5, [r4, #32]
   1d768:	ldrb	r3, [r4, #25]
   1d76c:	mul	r5, r5, r3
   1d770:	ldr	r0, [r4, #20]
   1d774:	add	r3, r0, r5
   1d778:	ldr	r2, [r4, #16]
   1d77c:	cmp	r2, r3
   1d780:	bcc	1d7a0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x278>
   1d784:	mov	r2, r5
   1d788:	mov	r1, #32
   1d78c:	bl	124e8 <memset@plt>
   1d790:	ldr	r3, [r4, #20]
   1d794:	add	r5, r3, r5
   1d798:	str	r5, [r4, #20]
   1d79c:	b	1d72c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x204>
   1d7a0:	mov	r1, r5
   1d7a4:	mov	r0, r4
   1d7a8:	bl	14ea4 <main@@Base+0x141c>
   1d7ac:	b	1d72c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x204>

0001d7b0 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1d7b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7b4:	sub	sp, sp, #12
   1d7b8:	mov	r4, r0
   1d7bc:	ldr	r8, [sp, #52]	; 0x34
   1d7c0:	ldrb	r0, [r0, #27]
   1d7c4:	cmp	r0, #0
   1d7c8:	bne	1d8ac <flatcc_json_printer_uint64_enum_vector_field@@Base+0xfc>
   1d7cc:	add	r2, r2, #2
   1d7d0:	lsl	r2, r2, #1
   1d7d4:	ldr	r0, [r1, #8]
   1d7d8:	cmp	r0, r2
   1d7dc:	ble	1d9c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x218>
   1d7e0:	ldr	r0, [r1, #4]
   1d7e4:	ldrh	r0, [r0, r2]
   1d7e8:	cmp	r0, #0
   1d7ec:	beq	1d9c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x218>
   1d7f0:	ldr	r5, [r1]
   1d7f4:	adds	ip, r5, r0
   1d7f8:	beq	1d9c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x218>
   1d7fc:	ldr	r2, [r1, #16]
   1d800:	add	lr, r2, #1
   1d804:	str	lr, [r1, #16]
   1d808:	cmp	r2, #0
   1d80c:	ldrne	r2, [r4, #20]
   1d810:	addne	r1, r2, #1
   1d814:	strne	r1, [r4, #20]
   1d818:	movne	r1, #44	; 0x2c
   1d81c:	strbne	r1, [r2]
   1d820:	ldr	r2, [r5, r0]
   1d824:	add	r6, ip, r2
   1d828:	ldr	r7, [ip, r2]
   1d82c:	ldr	r2, [sp, #48]	; 0x30
   1d830:	mov	r1, r3
   1d834:	mov	r0, r4
   1d838:	bl	15408 <main@@Base+0x1980>
   1d83c:	ldr	r3, [r4, #32]
   1d840:	add	r3, r3, #1
   1d844:	str	r3, [r4, #32]
   1d848:	ldr	r3, [r4, #20]
   1d84c:	add	r2, r3, #1
   1d850:	str	r2, [r4, #20]
   1d854:	mov	r2, #91	; 0x5b
   1d858:	strb	r2, [r3]
   1d85c:	cmp	r7, #0
   1d860:	beq	1d9a8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1f8>
   1d864:	ldrb	r3, [r4, #25]
   1d868:	cmp	r3, #0
   1d86c:	bne	1d8c0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x110>
   1d870:	ldr	r2, [r4, #20]
   1d874:	ldr	r3, [r4, #16]
   1d878:	cmp	r2, r3
   1d87c:	bcs	1d8e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   1d880:	ldrd	r2, [r6, #4]
   1d884:	mov	r0, r4
   1d888:	blx	r8
   1d88c:	add	r6, r6, #12
   1d890:	sub	r5, r7, #2
   1d894:	cmp	r7, #1
   1d898:	beq	1d9a8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1f8>
   1d89c:	mov	r9, #44	; 0x2c
   1d8a0:	mov	fp, #0
   1d8a4:	mov	sl, #10
   1d8a8:	b	1d958 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   1d8ac:	ldr	r0, [sp, #48]	; 0x30
   1d8b0:	str	r0, [sp]
   1d8b4:	mov	r0, r4
   1d8b8:	bl	1b8d8 <flatcc_json_printer_uint64_vector_field@@Base>
   1d8bc:	b	1d9c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x218>
   1d8c0:	ldr	r3, [r4, #20]
   1d8c4:	add	r2, r3, #1
   1d8c8:	str	r2, [r4, #20]
   1d8cc:	mov	r2, #10
   1d8d0:	strb	r2, [r3]
   1d8d4:	mov	r0, r4
   1d8d8:	bl	14f50 <main@@Base+0x14c8>
   1d8dc:	b	1d880 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xd0>
   1d8e0:	ldr	r3, [r4, #44]	; 0x2c
   1d8e4:	mov	r1, #0
   1d8e8:	mov	r0, r4
   1d8ec:	blx	r3
   1d8f0:	b	1d880 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xd0>
   1d8f4:	ldr	r3, [r4, #20]
   1d8f8:	add	r2, r3, #1
   1d8fc:	str	r2, [r4, #20]
   1d900:	strb	sl, [r3]
   1d904:	ldrb	r3, [r4, #25]
   1d908:	ldr	r7, [r4, #32]
   1d90c:	mul	r7, r7, r3
   1d910:	ldr	r0, [r4, #20]
   1d914:	add	r3, r0, r7
   1d918:	ldr	r2, [r4, #16]
   1d91c:	cmp	r2, r3
   1d920:	bcc	1d998 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e8>
   1d924:	mov	r2, r7
   1d928:	mov	r1, #32
   1d92c:	bl	124e8 <memset@plt>
   1d930:	ldr	r3, [r4, #20]
   1d934:	add	r7, r3, r7
   1d938:	str	r7, [r4, #20]
   1d93c:	ldrd	r2, [r6], #8
   1d940:	mov	r0, r4
   1d944:	blx	r8
   1d948:	sub	r3, r5, #1
   1d94c:	cmp	r5, #0
   1d950:	beq	1d9a8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1f8>
   1d954:	mov	r5, r3
   1d958:	ldr	r3, [r4, #20]
   1d95c:	add	r2, r3, #1
   1d960:	str	r2, [r4, #20]
   1d964:	strb	r9, [r3]
   1d968:	ldrb	r3, [r4, #25]
   1d96c:	cmp	r3, #0
   1d970:	bne	1d8f4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x144>
   1d974:	ldr	r2, [r4, #20]
   1d978:	ldr	r3, [r4, #16]
   1d97c:	cmp	r2, r3
   1d980:	bcc	1d93c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   1d984:	ldr	r3, [r4, #44]	; 0x2c
   1d988:	mov	r1, fp
   1d98c:	mov	r0, r4
   1d990:	blx	r3
   1d994:	b	1d93c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   1d998:	mov	r1, r7
   1d99c:	mov	r0, r4
   1d9a0:	bl	14ea4 <main@@Base+0x141c>
   1d9a4:	b	1d93c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   1d9a8:	ldrb	r3, [r4, #25]
   1d9ac:	cmp	r3, #0
   1d9b0:	bne	1d9d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
   1d9b4:	ldr	r3, [r4, #20]
   1d9b8:	add	r2, r3, #1
   1d9bc:	str	r2, [r4, #20]
   1d9c0:	mov	r2, #93	; 0x5d
   1d9c4:	strb	r2, [r3]
   1d9c8:	add	sp, sp, #12
   1d9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d9d0:	ldr	r3, [r4, #20]
   1d9d4:	add	r2, r3, #1
   1d9d8:	str	r2, [r4, #20]
   1d9dc:	mov	r2, #10
   1d9e0:	strb	r2, [r3]
   1d9e4:	ldr	r5, [r4, #32]
   1d9e8:	sub	r5, r5, #1
   1d9ec:	str	r5, [r4, #32]
   1d9f0:	ldrb	r3, [r4, #25]
   1d9f4:	mul	r5, r5, r3
   1d9f8:	ldr	r0, [r4, #20]
   1d9fc:	add	r3, r0, r5
   1da00:	ldr	r2, [r4, #16]
   1da04:	cmp	r2, r3
   1da08:	bcc	1da28 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x278>
   1da0c:	mov	r2, r5
   1da10:	mov	r1, #32
   1da14:	bl	124e8 <memset@plt>
   1da18:	ldr	r3, [r4, #20]
   1da1c:	add	r5, r3, r5
   1da20:	str	r5, [r4, #20]
   1da24:	b	1d9b4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   1da28:	mov	r1, r5
   1da2c:	mov	r0, r4
   1da30:	bl	14ea4 <main@@Base+0x141c>
   1da34:	b	1d9b4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>

0001da38 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1da38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da3c:	sub	sp, sp, #12
   1da40:	mov	r4, r0
   1da44:	ldr	r9, [sp, #52]	; 0x34
   1da48:	ldrb	r0, [r0, #27]
   1da4c:	cmp	r0, #0
   1da50:	bne	1db30 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf8>
   1da54:	add	r2, r2, #2
   1da58:	lsl	r2, r2, #1
   1da5c:	ldr	r0, [r1, #8]
   1da60:	cmp	r0, r2
   1da64:	ble	1dc48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x210>
   1da68:	ldr	r0, [r1, #4]
   1da6c:	ldrh	r0, [r0, r2]
   1da70:	cmp	r0, #0
   1da74:	beq	1dc48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x210>
   1da78:	ldr	r5, [r1]
   1da7c:	adds	ip, r5, r0
   1da80:	beq	1dc48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x210>
   1da84:	ldr	r2, [r1, #16]
   1da88:	add	lr, r2, #1
   1da8c:	str	lr, [r1, #16]
   1da90:	cmp	r2, #0
   1da94:	ldrne	r2, [r4, #20]
   1da98:	addne	r1, r2, #1
   1da9c:	strne	r1, [r4, #20]
   1daa0:	movne	r1, #44	; 0x2c
   1daa4:	strbne	r1, [r2]
   1daa8:	ldr	r2, [r5, r0]
   1daac:	add	r8, ip, r2
   1dab0:	ldr	r7, [ip, r2]
   1dab4:	ldr	r2, [sp, #48]	; 0x30
   1dab8:	mov	r1, r3
   1dabc:	mov	r0, r4
   1dac0:	bl	15408 <main@@Base+0x1980>
   1dac4:	ldr	r3, [r4, #32]
   1dac8:	add	r3, r3, #1
   1dacc:	str	r3, [r4, #32]
   1dad0:	ldr	r3, [r4, #20]
   1dad4:	add	r2, r3, #1
   1dad8:	str	r2, [r4, #20]
   1dadc:	mov	r2, #91	; 0x5b
   1dae0:	strb	r2, [r3]
   1dae4:	cmp	r7, #0
   1dae8:	beq	1dc28 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
   1daec:	ldrb	r3, [r4, #25]
   1daf0:	cmp	r3, #0
   1daf4:	bne	1db44 <flatcc_json_printer_int8_enum_vector_field@@Base+0x10c>
   1daf8:	ldr	r2, [r4, #20]
   1dafc:	ldr	r3, [r4, #16]
   1db00:	cmp	r2, r3
   1db04:	bcs	1db64 <flatcc_json_printer_int8_enum_vector_field@@Base+0x12c>
   1db08:	ldrsb	r1, [r8, #4]
   1db0c:	mov	r0, r4
   1db10:	blx	r9
   1db14:	add	r5, r8, #5
   1db18:	cmp	r7, #1
   1db1c:	beq	1dc28 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
   1db20:	mov	sl, #44	; 0x2c
   1db24:	mov	fp, #10
   1db28:	add	r7, r7, #4
   1db2c:	b	1dbd8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a0>
   1db30:	ldr	r0, [sp, #48]	; 0x30
   1db34:	str	r0, [sp]
   1db38:	mov	r0, r4
   1db3c:	bl	1bb4c <flatcc_json_printer_int8_vector_field@@Base>
   1db40:	b	1dc48 <flatcc_json_printer_int8_enum_vector_field@@Base+0x210>
   1db44:	ldr	r3, [r4, #20]
   1db48:	add	r2, r3, #1
   1db4c:	str	r2, [r4, #20]
   1db50:	mov	r2, #10
   1db54:	strb	r2, [r3]
   1db58:	mov	r0, r4
   1db5c:	bl	14f50 <main@@Base+0x14c8>
   1db60:	b	1db08 <flatcc_json_printer_int8_enum_vector_field@@Base+0xd0>
   1db64:	ldr	r3, [r4, #44]	; 0x2c
   1db68:	mov	r1, #0
   1db6c:	mov	r0, r4
   1db70:	blx	r3
   1db74:	b	1db08 <flatcc_json_printer_int8_enum_vector_field@@Base+0xd0>
   1db78:	ldr	r3, [r4, #20]
   1db7c:	add	r2, r3, #1
   1db80:	str	r2, [r4, #20]
   1db84:	strb	fp, [r3]
   1db88:	ldrb	r3, [r4, #25]
   1db8c:	ldr	r6, [r4, #32]
   1db90:	mul	r6, r6, r3
   1db94:	ldr	r0, [r4, #20]
   1db98:	add	r3, r0, r6
   1db9c:	ldr	r2, [r4, #16]
   1dba0:	cmp	r2, r3
   1dba4:	bcc	1dc18 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e0>
   1dba8:	mov	r2, r6
   1dbac:	mov	r1, #32
   1dbb0:	bl	124e8 <memset@plt>
   1dbb4:	ldr	r3, [r4, #20]
   1dbb8:	add	r6, r3, r6
   1dbbc:	str	r6, [r4, #20]
   1dbc0:	ldrsb	r1, [r5], #1
   1dbc4:	mov	r0, r4
   1dbc8:	blx	r9
   1dbcc:	sub	r3, r7, r5
   1dbd0:	cmn	r8, r3
   1dbd4:	beq	1dc28 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
   1dbd8:	ldr	r3, [r4, #20]
   1dbdc:	add	r2, r3, #1
   1dbe0:	str	r2, [r4, #20]
   1dbe4:	strb	sl, [r3]
   1dbe8:	ldrb	r3, [r4, #25]
   1dbec:	cmp	r3, #0
   1dbf0:	bne	1db78 <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
   1dbf4:	ldr	r2, [r4, #20]
   1dbf8:	ldr	r3, [r4, #16]
   1dbfc:	cmp	r2, r3
   1dc00:	bcc	1dbc0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x188>
   1dc04:	ldr	r3, [r4, #44]	; 0x2c
   1dc08:	mov	r1, #0
   1dc0c:	mov	r0, r4
   1dc10:	blx	r3
   1dc14:	b	1dbc0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x188>
   1dc18:	mov	r1, r6
   1dc1c:	mov	r0, r4
   1dc20:	bl	14ea4 <main@@Base+0x141c>
   1dc24:	b	1dbc0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x188>
   1dc28:	ldrb	r3, [r4, #25]
   1dc2c:	cmp	r3, #0
   1dc30:	bne	1dc50 <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   1dc34:	ldr	r3, [r4, #20]
   1dc38:	add	r2, r3, #1
   1dc3c:	str	r2, [r4, #20]
   1dc40:	mov	r2, #93	; 0x5d
   1dc44:	strb	r2, [r3]
   1dc48:	add	sp, sp, #12
   1dc4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc50:	ldr	r3, [r4, #20]
   1dc54:	add	r2, r3, #1
   1dc58:	str	r2, [r4, #20]
   1dc5c:	mov	r2, #10
   1dc60:	strb	r2, [r3]
   1dc64:	ldr	r5, [r4, #32]
   1dc68:	sub	r5, r5, #1
   1dc6c:	str	r5, [r4, #32]
   1dc70:	ldrb	r3, [r4, #25]
   1dc74:	mul	r5, r5, r3
   1dc78:	ldr	r0, [r4, #20]
   1dc7c:	add	r3, r0, r5
   1dc80:	ldr	r2, [r4, #16]
   1dc84:	cmp	r2, r3
   1dc88:	bcc	1dca8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x270>
   1dc8c:	mov	r2, r5
   1dc90:	mov	r1, #32
   1dc94:	bl	124e8 <memset@plt>
   1dc98:	ldr	r3, [r4, #20]
   1dc9c:	add	r5, r3, r5
   1dca0:	str	r5, [r4, #20]
   1dca4:	b	1dc34 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fc>
   1dca8:	mov	r1, r5
   1dcac:	mov	r0, r4
   1dcb0:	bl	14ea4 <main@@Base+0x141c>
   1dcb4:	b	1dc34 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fc>

0001dcb8 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1dcb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dcbc:	sub	sp, sp, #12
   1dcc0:	mov	r4, r0
   1dcc4:	ldr	r8, [sp, #52]	; 0x34
   1dcc8:	ldrb	r0, [r0, #27]
   1dccc:	cmp	r0, #0
   1dcd0:	bne	1ddb4 <flatcc_json_printer_int16_enum_vector_field@@Base+0xfc>
   1dcd4:	add	r2, r2, #2
   1dcd8:	lsl	r2, r2, #1
   1dcdc:	ldr	r0, [r1, #8]
   1dce0:	cmp	r0, r2
   1dce4:	ble	1ded0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   1dce8:	ldr	r0, [r1, #4]
   1dcec:	ldrh	r0, [r0, r2]
   1dcf0:	cmp	r0, #0
   1dcf4:	beq	1ded0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   1dcf8:	ldr	r5, [r1]
   1dcfc:	adds	ip, r5, r0
   1dd00:	beq	1ded0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   1dd04:	ldr	r2, [r1, #16]
   1dd08:	add	lr, r2, #1
   1dd0c:	str	lr, [r1, #16]
   1dd10:	cmp	r2, #0
   1dd14:	ldrne	r2, [r4, #20]
   1dd18:	addne	r1, r2, #1
   1dd1c:	strne	r1, [r4, #20]
   1dd20:	movne	r1, #44	; 0x2c
   1dd24:	strbne	r1, [r2]
   1dd28:	ldr	r2, [r5, r0]
   1dd2c:	add	r6, ip, r2
   1dd30:	ldr	r7, [ip, r2]
   1dd34:	ldr	r2, [sp, #48]	; 0x30
   1dd38:	mov	r1, r3
   1dd3c:	mov	r0, r4
   1dd40:	bl	15408 <main@@Base+0x1980>
   1dd44:	ldr	r3, [r4, #32]
   1dd48:	add	r3, r3, #1
   1dd4c:	str	r3, [r4, #32]
   1dd50:	ldr	r3, [r4, #20]
   1dd54:	add	r2, r3, #1
   1dd58:	str	r2, [r4, #20]
   1dd5c:	mov	r2, #91	; 0x5b
   1dd60:	strb	r2, [r3]
   1dd64:	cmp	r7, #0
   1dd68:	beq	1deb0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1f8>
   1dd6c:	ldrb	r3, [r4, #25]
   1dd70:	cmp	r3, #0
   1dd74:	bne	1ddc8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x110>
   1dd78:	ldr	r2, [r4, #20]
   1dd7c:	ldr	r3, [r4, #16]
   1dd80:	cmp	r2, r3
   1dd84:	bcs	1dde8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   1dd88:	ldrsh	r1, [r6, #4]
   1dd8c:	mov	r0, r4
   1dd90:	blx	r8
   1dd94:	add	r6, r6, #6
   1dd98:	sub	r5, r7, #2
   1dd9c:	cmp	r7, #1
   1dda0:	beq	1deb0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1f8>
   1dda4:	mov	r9, #44	; 0x2c
   1dda8:	mov	fp, #0
   1ddac:	mov	sl, #10
   1ddb0:	b	1de60 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   1ddb4:	ldr	r0, [sp, #48]	; 0x30
   1ddb8:	str	r0, [sp]
   1ddbc:	mov	r0, r4
   1ddc0:	bl	1bdb8 <flatcc_json_printer_int16_vector_field@@Base>
   1ddc4:	b	1ded0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   1ddc8:	ldr	r3, [r4, #20]
   1ddcc:	add	r2, r3, #1
   1ddd0:	str	r2, [r4, #20]
   1ddd4:	mov	r2, #10
   1ddd8:	strb	r2, [r3]
   1dddc:	mov	r0, r4
   1dde0:	bl	14f50 <main@@Base+0x14c8>
   1dde4:	b	1dd88 <flatcc_json_printer_int16_enum_vector_field@@Base+0xd0>
   1dde8:	ldr	r3, [r4, #44]	; 0x2c
   1ddec:	mov	r1, #0
   1ddf0:	mov	r0, r4
   1ddf4:	blx	r3
   1ddf8:	b	1dd88 <flatcc_json_printer_int16_enum_vector_field@@Base+0xd0>
   1ddfc:	ldr	r3, [r4, #20]
   1de00:	add	r2, r3, #1
   1de04:	str	r2, [r4, #20]
   1de08:	strb	sl, [r3]
   1de0c:	ldrb	r3, [r4, #25]
   1de10:	ldr	r7, [r4, #32]
   1de14:	mul	r7, r7, r3
   1de18:	ldr	r0, [r4, #20]
   1de1c:	add	r3, r0, r7
   1de20:	ldr	r2, [r4, #16]
   1de24:	cmp	r2, r3
   1de28:	bcc	1dea0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e8>
   1de2c:	mov	r2, r7
   1de30:	mov	r1, #32
   1de34:	bl	124e8 <memset@plt>
   1de38:	ldr	r3, [r4, #20]
   1de3c:	add	r7, r3, r7
   1de40:	str	r7, [r4, #20]
   1de44:	ldrsh	r1, [r6], #2
   1de48:	mov	r0, r4
   1de4c:	blx	r8
   1de50:	sub	r3, r5, #1
   1de54:	cmp	r5, #0
   1de58:	beq	1deb0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1f8>
   1de5c:	mov	r5, r3
   1de60:	ldr	r3, [r4, #20]
   1de64:	add	r2, r3, #1
   1de68:	str	r2, [r4, #20]
   1de6c:	strb	r9, [r3]
   1de70:	ldrb	r3, [r4, #25]
   1de74:	cmp	r3, #0
   1de78:	bne	1ddfc <flatcc_json_printer_int16_enum_vector_field@@Base+0x144>
   1de7c:	ldr	r2, [r4, #20]
   1de80:	ldr	r3, [r4, #16]
   1de84:	cmp	r2, r3
   1de88:	bcc	1de44 <flatcc_json_printer_int16_enum_vector_field@@Base+0x18c>
   1de8c:	ldr	r3, [r4, #44]	; 0x2c
   1de90:	mov	r1, fp
   1de94:	mov	r0, r4
   1de98:	blx	r3
   1de9c:	b	1de44 <flatcc_json_printer_int16_enum_vector_field@@Base+0x18c>
   1dea0:	mov	r1, r7
   1dea4:	mov	r0, r4
   1dea8:	bl	14ea4 <main@@Base+0x141c>
   1deac:	b	1de44 <flatcc_json_printer_int16_enum_vector_field@@Base+0x18c>
   1deb0:	ldrb	r3, [r4, #25]
   1deb4:	cmp	r3, #0
   1deb8:	bne	1ded8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
   1debc:	ldr	r3, [r4, #20]
   1dec0:	add	r2, r3, #1
   1dec4:	str	r2, [r4, #20]
   1dec8:	mov	r2, #93	; 0x5d
   1decc:	strb	r2, [r3]
   1ded0:	add	sp, sp, #12
   1ded4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ded8:	ldr	r3, [r4, #20]
   1dedc:	add	r2, r3, #1
   1dee0:	str	r2, [r4, #20]
   1dee4:	mov	r2, #10
   1dee8:	strb	r2, [r3]
   1deec:	ldr	r5, [r4, #32]
   1def0:	sub	r5, r5, #1
   1def4:	str	r5, [r4, #32]
   1def8:	ldrb	r3, [r4, #25]
   1defc:	mul	r5, r5, r3
   1df00:	ldr	r0, [r4, #20]
   1df04:	add	r3, r0, r5
   1df08:	ldr	r2, [r4, #16]
   1df0c:	cmp	r2, r3
   1df10:	bcc	1df30 <flatcc_json_printer_int16_enum_vector_field@@Base+0x278>
   1df14:	mov	r2, r5
   1df18:	mov	r1, #32
   1df1c:	bl	124e8 <memset@plt>
   1df20:	ldr	r3, [r4, #20]
   1df24:	add	r5, r3, r5
   1df28:	str	r5, [r4, #20]
   1df2c:	b	1debc <flatcc_json_printer_int16_enum_vector_field@@Base+0x204>
   1df30:	mov	r1, r5
   1df34:	mov	r0, r4
   1df38:	bl	14ea4 <main@@Base+0x141c>
   1df3c:	b	1debc <flatcc_json_printer_int16_enum_vector_field@@Base+0x204>

0001df40 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1df40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df44:	sub	sp, sp, #12
   1df48:	mov	r4, r0
   1df4c:	ldr	r8, [sp, #52]	; 0x34
   1df50:	ldrb	r0, [r0, #27]
   1df54:	cmp	r0, #0
   1df58:	bne	1e03c <flatcc_json_printer_int32_enum_vector_field@@Base+0xfc>
   1df5c:	add	r2, r2, #2
   1df60:	lsl	r2, r2, #1
   1df64:	ldr	r0, [r1, #8]
   1df68:	cmp	r0, r2
   1df6c:	ble	1e158 <flatcc_json_printer_int32_enum_vector_field@@Base+0x218>
   1df70:	ldr	r0, [r1, #4]
   1df74:	ldrh	r0, [r0, r2]
   1df78:	cmp	r0, #0
   1df7c:	beq	1e158 <flatcc_json_printer_int32_enum_vector_field@@Base+0x218>
   1df80:	ldr	r5, [r1]
   1df84:	adds	ip, r5, r0
   1df88:	beq	1e158 <flatcc_json_printer_int32_enum_vector_field@@Base+0x218>
   1df8c:	ldr	r2, [r1, #16]
   1df90:	add	lr, r2, #1
   1df94:	str	lr, [r1, #16]
   1df98:	cmp	r2, #0
   1df9c:	ldrne	r2, [r4, #20]
   1dfa0:	addne	r1, r2, #1
   1dfa4:	strne	r1, [r4, #20]
   1dfa8:	movne	r1, #44	; 0x2c
   1dfac:	strbne	r1, [r2]
   1dfb0:	ldr	r2, [r5, r0]
   1dfb4:	add	r6, ip, r2
   1dfb8:	ldr	r7, [ip, r2]
   1dfbc:	ldr	r2, [sp, #48]	; 0x30
   1dfc0:	mov	r1, r3
   1dfc4:	mov	r0, r4
   1dfc8:	bl	15408 <main@@Base+0x1980>
   1dfcc:	ldr	r3, [r4, #32]
   1dfd0:	add	r3, r3, #1
   1dfd4:	str	r3, [r4, #32]
   1dfd8:	ldr	r3, [r4, #20]
   1dfdc:	add	r2, r3, #1
   1dfe0:	str	r2, [r4, #20]
   1dfe4:	mov	r2, #91	; 0x5b
   1dfe8:	strb	r2, [r3]
   1dfec:	cmp	r7, #0
   1dff0:	beq	1e138 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f8>
   1dff4:	ldrb	r3, [r4, #25]
   1dff8:	cmp	r3, #0
   1dffc:	bne	1e050 <flatcc_json_printer_int32_enum_vector_field@@Base+0x110>
   1e000:	ldr	r2, [r4, #20]
   1e004:	ldr	r3, [r4, #16]
   1e008:	cmp	r2, r3
   1e00c:	bcs	1e070 <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   1e010:	ldr	r1, [r6, #4]
   1e014:	mov	r0, r4
   1e018:	blx	r8
   1e01c:	add	r6, r6, #8
   1e020:	sub	r5, r7, #2
   1e024:	cmp	r7, #1
   1e028:	beq	1e138 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f8>
   1e02c:	mov	r9, #44	; 0x2c
   1e030:	mov	fp, #0
   1e034:	mov	sl, #10
   1e038:	b	1e0e8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   1e03c:	ldr	r0, [sp, #48]	; 0x30
   1e040:	str	r0, [sp]
   1e044:	mov	r0, r4
   1e048:	bl	1c02c <flatcc_json_printer_int32_vector_field@@Base>
   1e04c:	b	1e158 <flatcc_json_printer_int32_enum_vector_field@@Base+0x218>
   1e050:	ldr	r3, [r4, #20]
   1e054:	add	r2, r3, #1
   1e058:	str	r2, [r4, #20]
   1e05c:	mov	r2, #10
   1e060:	strb	r2, [r3]
   1e064:	mov	r0, r4
   1e068:	bl	14f50 <main@@Base+0x14c8>
   1e06c:	b	1e010 <flatcc_json_printer_int32_enum_vector_field@@Base+0xd0>
   1e070:	ldr	r3, [r4, #44]	; 0x2c
   1e074:	mov	r1, #0
   1e078:	mov	r0, r4
   1e07c:	blx	r3
   1e080:	b	1e010 <flatcc_json_printer_int32_enum_vector_field@@Base+0xd0>
   1e084:	ldr	r3, [r4, #20]
   1e088:	add	r2, r3, #1
   1e08c:	str	r2, [r4, #20]
   1e090:	strb	sl, [r3]
   1e094:	ldrb	r3, [r4, #25]
   1e098:	ldr	r7, [r4, #32]
   1e09c:	mul	r7, r7, r3
   1e0a0:	ldr	r0, [r4, #20]
   1e0a4:	add	r3, r0, r7
   1e0a8:	ldr	r2, [r4, #16]
   1e0ac:	cmp	r2, r3
   1e0b0:	bcc	1e128 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e8>
   1e0b4:	mov	r2, r7
   1e0b8:	mov	r1, #32
   1e0bc:	bl	124e8 <memset@plt>
   1e0c0:	ldr	r3, [r4, #20]
   1e0c4:	add	r7, r3, r7
   1e0c8:	str	r7, [r4, #20]
   1e0cc:	ldr	r1, [r6], #4
   1e0d0:	mov	r0, r4
   1e0d4:	blx	r8
   1e0d8:	sub	r3, r5, #1
   1e0dc:	cmp	r5, #0
   1e0e0:	beq	1e138 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f8>
   1e0e4:	mov	r5, r3
   1e0e8:	ldr	r3, [r4, #20]
   1e0ec:	add	r2, r3, #1
   1e0f0:	str	r2, [r4, #20]
   1e0f4:	strb	r9, [r3]
   1e0f8:	ldrb	r3, [r4, #25]
   1e0fc:	cmp	r3, #0
   1e100:	bne	1e084 <flatcc_json_printer_int32_enum_vector_field@@Base+0x144>
   1e104:	ldr	r2, [r4, #20]
   1e108:	ldr	r3, [r4, #16]
   1e10c:	cmp	r2, r3
   1e110:	bcc	1e0cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   1e114:	ldr	r3, [r4, #44]	; 0x2c
   1e118:	mov	r1, fp
   1e11c:	mov	r0, r4
   1e120:	blx	r3
   1e124:	b	1e0cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   1e128:	mov	r1, r7
   1e12c:	mov	r0, r4
   1e130:	bl	14ea4 <main@@Base+0x141c>
   1e134:	b	1e0cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   1e138:	ldrb	r3, [r4, #25]
   1e13c:	cmp	r3, #0
   1e140:	bne	1e160 <flatcc_json_printer_int32_enum_vector_field@@Base+0x220>
   1e144:	ldr	r3, [r4, #20]
   1e148:	add	r2, r3, #1
   1e14c:	str	r2, [r4, #20]
   1e150:	mov	r2, #93	; 0x5d
   1e154:	strb	r2, [r3]
   1e158:	add	sp, sp, #12
   1e15c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e160:	ldr	r3, [r4, #20]
   1e164:	add	r2, r3, #1
   1e168:	str	r2, [r4, #20]
   1e16c:	mov	r2, #10
   1e170:	strb	r2, [r3]
   1e174:	ldr	r5, [r4, #32]
   1e178:	sub	r5, r5, #1
   1e17c:	str	r5, [r4, #32]
   1e180:	ldrb	r3, [r4, #25]
   1e184:	mul	r5, r5, r3
   1e188:	ldr	r0, [r4, #20]
   1e18c:	add	r3, r0, r5
   1e190:	ldr	r2, [r4, #16]
   1e194:	cmp	r2, r3
   1e198:	bcc	1e1b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x278>
   1e19c:	mov	r2, r5
   1e1a0:	mov	r1, #32
   1e1a4:	bl	124e8 <memset@plt>
   1e1a8:	ldr	r3, [r4, #20]
   1e1ac:	add	r5, r3, r5
   1e1b0:	str	r5, [r4, #20]
   1e1b4:	b	1e144 <flatcc_json_printer_int32_enum_vector_field@@Base+0x204>
   1e1b8:	mov	r1, r5
   1e1bc:	mov	r0, r4
   1e1c0:	bl	14ea4 <main@@Base+0x141c>
   1e1c4:	b	1e144 <flatcc_json_printer_int32_enum_vector_field@@Base+0x204>

0001e1c8 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1e1c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1cc:	sub	sp, sp, #12
   1e1d0:	mov	r4, r0
   1e1d4:	ldr	r8, [sp, #52]	; 0x34
   1e1d8:	ldrb	r0, [r0, #27]
   1e1dc:	cmp	r0, #0
   1e1e0:	bne	1e2c4 <flatcc_json_printer_int64_enum_vector_field@@Base+0xfc>
   1e1e4:	add	r2, r2, #2
   1e1e8:	lsl	r2, r2, #1
   1e1ec:	ldr	r0, [r1, #8]
   1e1f0:	cmp	r0, r2
   1e1f4:	ble	1e3e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x218>
   1e1f8:	ldr	r0, [r1, #4]
   1e1fc:	ldrh	r0, [r0, r2]
   1e200:	cmp	r0, #0
   1e204:	beq	1e3e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x218>
   1e208:	ldr	r5, [r1]
   1e20c:	adds	ip, r5, r0
   1e210:	beq	1e3e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x218>
   1e214:	ldr	r2, [r1, #16]
   1e218:	add	lr, r2, #1
   1e21c:	str	lr, [r1, #16]
   1e220:	cmp	r2, #0
   1e224:	ldrne	r2, [r4, #20]
   1e228:	addne	r1, r2, #1
   1e22c:	strne	r1, [r4, #20]
   1e230:	movne	r1, #44	; 0x2c
   1e234:	strbne	r1, [r2]
   1e238:	ldr	r2, [r5, r0]
   1e23c:	add	r6, ip, r2
   1e240:	ldr	r7, [ip, r2]
   1e244:	ldr	r2, [sp, #48]	; 0x30
   1e248:	mov	r1, r3
   1e24c:	mov	r0, r4
   1e250:	bl	15408 <main@@Base+0x1980>
   1e254:	ldr	r3, [r4, #32]
   1e258:	add	r3, r3, #1
   1e25c:	str	r3, [r4, #32]
   1e260:	ldr	r3, [r4, #20]
   1e264:	add	r2, r3, #1
   1e268:	str	r2, [r4, #20]
   1e26c:	mov	r2, #91	; 0x5b
   1e270:	strb	r2, [r3]
   1e274:	cmp	r7, #0
   1e278:	beq	1e3c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1f8>
   1e27c:	ldrb	r3, [r4, #25]
   1e280:	cmp	r3, #0
   1e284:	bne	1e2d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x110>
   1e288:	ldr	r2, [r4, #20]
   1e28c:	ldr	r3, [r4, #16]
   1e290:	cmp	r2, r3
   1e294:	bcs	1e2f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   1e298:	ldrd	r2, [r6, #4]
   1e29c:	mov	r0, r4
   1e2a0:	blx	r8
   1e2a4:	add	r6, r6, #12
   1e2a8:	sub	r5, r7, #2
   1e2ac:	cmp	r7, #1
   1e2b0:	beq	1e3c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1f8>
   1e2b4:	mov	r9, #44	; 0x2c
   1e2b8:	mov	fp, #0
   1e2bc:	mov	sl, #10
   1e2c0:	b	1e370 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   1e2c4:	ldr	r0, [sp, #48]	; 0x30
   1e2c8:	str	r0, [sp]
   1e2cc:	mov	r0, r4
   1e2d0:	bl	1c3d0 <flatcc_json_printer_int64_vector_field@@Base>
   1e2d4:	b	1e3e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x218>
   1e2d8:	ldr	r3, [r4, #20]
   1e2dc:	add	r2, r3, #1
   1e2e0:	str	r2, [r4, #20]
   1e2e4:	mov	r2, #10
   1e2e8:	strb	r2, [r3]
   1e2ec:	mov	r0, r4
   1e2f0:	bl	14f50 <main@@Base+0x14c8>
   1e2f4:	b	1e298 <flatcc_json_printer_int64_enum_vector_field@@Base+0xd0>
   1e2f8:	ldr	r3, [r4, #44]	; 0x2c
   1e2fc:	mov	r1, #0
   1e300:	mov	r0, r4
   1e304:	blx	r3
   1e308:	b	1e298 <flatcc_json_printer_int64_enum_vector_field@@Base+0xd0>
   1e30c:	ldr	r3, [r4, #20]
   1e310:	add	r2, r3, #1
   1e314:	str	r2, [r4, #20]
   1e318:	strb	sl, [r3]
   1e31c:	ldrb	r3, [r4, #25]
   1e320:	ldr	r7, [r4, #32]
   1e324:	mul	r7, r7, r3
   1e328:	ldr	r0, [r4, #20]
   1e32c:	add	r3, r0, r7
   1e330:	ldr	r2, [r4, #16]
   1e334:	cmp	r2, r3
   1e338:	bcc	1e3b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e8>
   1e33c:	mov	r2, r7
   1e340:	mov	r1, #32
   1e344:	bl	124e8 <memset@plt>
   1e348:	ldr	r3, [r4, #20]
   1e34c:	add	r7, r3, r7
   1e350:	str	r7, [r4, #20]
   1e354:	ldrd	r2, [r6], #8
   1e358:	mov	r0, r4
   1e35c:	blx	r8
   1e360:	sub	r3, r5, #1
   1e364:	cmp	r5, #0
   1e368:	beq	1e3c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1f8>
   1e36c:	mov	r5, r3
   1e370:	ldr	r3, [r4, #20]
   1e374:	add	r2, r3, #1
   1e378:	str	r2, [r4, #20]
   1e37c:	strb	r9, [r3]
   1e380:	ldrb	r3, [r4, #25]
   1e384:	cmp	r3, #0
   1e388:	bne	1e30c <flatcc_json_printer_int64_enum_vector_field@@Base+0x144>
   1e38c:	ldr	r2, [r4, #20]
   1e390:	ldr	r3, [r4, #16]
   1e394:	cmp	r2, r3
   1e398:	bcc	1e354 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   1e39c:	ldr	r3, [r4, #44]	; 0x2c
   1e3a0:	mov	r1, fp
   1e3a4:	mov	r0, r4
   1e3a8:	blx	r3
   1e3ac:	b	1e354 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   1e3b0:	mov	r1, r7
   1e3b4:	mov	r0, r4
   1e3b8:	bl	14ea4 <main@@Base+0x141c>
   1e3bc:	b	1e354 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   1e3c0:	ldrb	r3, [r4, #25]
   1e3c4:	cmp	r3, #0
   1e3c8:	bne	1e3e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
   1e3cc:	ldr	r3, [r4, #20]
   1e3d0:	add	r2, r3, #1
   1e3d4:	str	r2, [r4, #20]
   1e3d8:	mov	r2, #93	; 0x5d
   1e3dc:	strb	r2, [r3]
   1e3e0:	add	sp, sp, #12
   1e3e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3e8:	ldr	r3, [r4, #20]
   1e3ec:	add	r2, r3, #1
   1e3f0:	str	r2, [r4, #20]
   1e3f4:	mov	r2, #10
   1e3f8:	strb	r2, [r3]
   1e3fc:	ldr	r5, [r4, #32]
   1e400:	sub	r5, r5, #1
   1e404:	str	r5, [r4, #32]
   1e408:	ldrb	r3, [r4, #25]
   1e40c:	mul	r5, r5, r3
   1e410:	ldr	r0, [r4, #20]
   1e414:	add	r3, r0, r5
   1e418:	ldr	r2, [r4, #16]
   1e41c:	cmp	r2, r3
   1e420:	bcc	1e440 <flatcc_json_printer_int64_enum_vector_field@@Base+0x278>
   1e424:	mov	r2, r5
   1e428:	mov	r1, #32
   1e42c:	bl	124e8 <memset@plt>
   1e430:	ldr	r3, [r4, #20]
   1e434:	add	r5, r3, r5
   1e438:	str	r5, [r4, #20]
   1e43c:	b	1e3cc <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   1e440:	mov	r1, r5
   1e444:	mov	r0, r4
   1e448:	bl	14ea4 <main@@Base+0x141c>
   1e44c:	b	1e3cc <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>

0001e450 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1e450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e454:	sub	sp, sp, #12
   1e458:	mov	r4, r0
   1e45c:	ldr	r9, [sp, #52]	; 0x34
   1e460:	ldrb	r0, [r0, #27]
   1e464:	cmp	r0, #0
   1e468:	bne	1e548 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf8>
   1e46c:	add	r2, r2, #2
   1e470:	lsl	r2, r2, #1
   1e474:	ldr	r0, [r1, #8]
   1e478:	cmp	r0, r2
   1e47c:	ble	1e660 <flatcc_json_printer_bool_enum_vector_field@@Base+0x210>
   1e480:	ldr	r0, [r1, #4]
   1e484:	ldrh	r0, [r0, r2]
   1e488:	cmp	r0, #0
   1e48c:	beq	1e660 <flatcc_json_printer_bool_enum_vector_field@@Base+0x210>
   1e490:	ldr	r5, [r1]
   1e494:	adds	ip, r5, r0
   1e498:	beq	1e660 <flatcc_json_printer_bool_enum_vector_field@@Base+0x210>
   1e49c:	ldr	r2, [r1, #16]
   1e4a0:	add	lr, r2, #1
   1e4a4:	str	lr, [r1, #16]
   1e4a8:	cmp	r2, #0
   1e4ac:	ldrne	r2, [r4, #20]
   1e4b0:	addne	r1, r2, #1
   1e4b4:	strne	r1, [r4, #20]
   1e4b8:	movne	r1, #44	; 0x2c
   1e4bc:	strbne	r1, [r2]
   1e4c0:	ldr	r2, [r5, r0]
   1e4c4:	add	r8, ip, r2
   1e4c8:	ldr	r7, [ip, r2]
   1e4cc:	ldr	r2, [sp, #48]	; 0x30
   1e4d0:	mov	r1, r3
   1e4d4:	mov	r0, r4
   1e4d8:	bl	15408 <main@@Base+0x1980>
   1e4dc:	ldr	r3, [r4, #32]
   1e4e0:	add	r3, r3, #1
   1e4e4:	str	r3, [r4, #32]
   1e4e8:	ldr	r3, [r4, #20]
   1e4ec:	add	r2, r3, #1
   1e4f0:	str	r2, [r4, #20]
   1e4f4:	mov	r2, #91	; 0x5b
   1e4f8:	strb	r2, [r3]
   1e4fc:	cmp	r7, #0
   1e500:	beq	1e640 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
   1e504:	ldrb	r3, [r4, #25]
   1e508:	cmp	r3, #0
   1e50c:	bne	1e55c <flatcc_json_printer_bool_enum_vector_field@@Base+0x10c>
   1e510:	ldr	r2, [r4, #20]
   1e514:	ldr	r3, [r4, #16]
   1e518:	cmp	r2, r3
   1e51c:	bcs	1e57c <flatcc_json_printer_bool_enum_vector_field@@Base+0x12c>
   1e520:	ldrb	r1, [r8, #4]
   1e524:	mov	r0, r4
   1e528:	blx	r9
   1e52c:	add	r5, r8, #5
   1e530:	cmp	r7, #1
   1e534:	beq	1e640 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
   1e538:	mov	sl, #44	; 0x2c
   1e53c:	mov	fp, #10
   1e540:	add	r7, r7, #4
   1e544:	b	1e5f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a0>
   1e548:	ldr	r0, [sp, #48]	; 0x30
   1e54c:	str	r0, [sp]
   1e550:	mov	r0, r4
   1e554:	bl	1c644 <flatcc_json_printer_bool_vector_field@@Base>
   1e558:	b	1e660 <flatcc_json_printer_bool_enum_vector_field@@Base+0x210>
   1e55c:	ldr	r3, [r4, #20]
   1e560:	add	r2, r3, #1
   1e564:	str	r2, [r4, #20]
   1e568:	mov	r2, #10
   1e56c:	strb	r2, [r3]
   1e570:	mov	r0, r4
   1e574:	bl	14f50 <main@@Base+0x14c8>
   1e578:	b	1e520 <flatcc_json_printer_bool_enum_vector_field@@Base+0xd0>
   1e57c:	ldr	r3, [r4, #44]	; 0x2c
   1e580:	mov	r1, #0
   1e584:	mov	r0, r4
   1e588:	blx	r3
   1e58c:	b	1e520 <flatcc_json_printer_bool_enum_vector_field@@Base+0xd0>
   1e590:	ldr	r3, [r4, #20]
   1e594:	add	r2, r3, #1
   1e598:	str	r2, [r4, #20]
   1e59c:	strb	fp, [r3]
   1e5a0:	ldrb	r3, [r4, #25]
   1e5a4:	ldr	r6, [r4, #32]
   1e5a8:	mul	r6, r6, r3
   1e5ac:	ldr	r0, [r4, #20]
   1e5b0:	add	r3, r0, r6
   1e5b4:	ldr	r2, [r4, #16]
   1e5b8:	cmp	r2, r3
   1e5bc:	bcc	1e630 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e0>
   1e5c0:	mov	r2, r6
   1e5c4:	mov	r1, #32
   1e5c8:	bl	124e8 <memset@plt>
   1e5cc:	ldr	r3, [r4, #20]
   1e5d0:	add	r6, r3, r6
   1e5d4:	str	r6, [r4, #20]
   1e5d8:	ldrb	r1, [r5], #1
   1e5dc:	mov	r0, r4
   1e5e0:	blx	r9
   1e5e4:	sub	r3, r7, r5
   1e5e8:	cmn	r8, r3
   1e5ec:	beq	1e640 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
   1e5f0:	ldr	r3, [r4, #20]
   1e5f4:	add	r2, r3, #1
   1e5f8:	str	r2, [r4, #20]
   1e5fc:	strb	sl, [r3]
   1e600:	ldrb	r3, [r4, #25]
   1e604:	cmp	r3, #0
   1e608:	bne	1e590 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
   1e60c:	ldr	r2, [r4, #20]
   1e610:	ldr	r3, [r4, #16]
   1e614:	cmp	r2, r3
   1e618:	bcc	1e5d8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x188>
   1e61c:	ldr	r3, [r4, #44]	; 0x2c
   1e620:	mov	r1, #0
   1e624:	mov	r0, r4
   1e628:	blx	r3
   1e62c:	b	1e5d8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x188>
   1e630:	mov	r1, r6
   1e634:	mov	r0, r4
   1e638:	bl	14ea4 <main@@Base+0x141c>
   1e63c:	b	1e5d8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x188>
   1e640:	ldrb	r3, [r4, #25]
   1e644:	cmp	r3, #0
   1e648:	bne	1e668 <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   1e64c:	ldr	r3, [r4, #20]
   1e650:	add	r2, r3, #1
   1e654:	str	r2, [r4, #20]
   1e658:	mov	r2, #93	; 0x5d
   1e65c:	strb	r2, [r3]
   1e660:	add	sp, sp, #12
   1e664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e668:	ldr	r3, [r4, #20]
   1e66c:	add	r2, r3, #1
   1e670:	str	r2, [r4, #20]
   1e674:	mov	r2, #10
   1e678:	strb	r2, [r3]
   1e67c:	ldr	r5, [r4, #32]
   1e680:	sub	r5, r5, #1
   1e684:	str	r5, [r4, #32]
   1e688:	ldrb	r3, [r4, #25]
   1e68c:	mul	r5, r5, r3
   1e690:	ldr	r0, [r4, #20]
   1e694:	add	r3, r0, r5
   1e698:	ldr	r2, [r4, #16]
   1e69c:	cmp	r2, r3
   1e6a0:	bcc	1e6c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x270>
   1e6a4:	mov	r2, r5
   1e6a8:	mov	r1, #32
   1e6ac:	bl	124e8 <memset@plt>
   1e6b0:	ldr	r3, [r4, #20]
   1e6b4:	add	r5, r3, r5
   1e6b8:	str	r5, [r4, #20]
   1e6bc:	b	1e64c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fc>
   1e6c0:	mov	r1, r5
   1e6c4:	mov	r0, r4
   1e6c8:	bl	14ea4 <main@@Base+0x141c>
   1e6cc:	b	1e64c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fc>

0001e6d0 <flatcc_json_printer_struct_vector_field@@Base>:
   1e6d0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6d4:	ldr	r8, [sp, #48]	; 0x30
   1e6d8:	add	r2, r2, #2
   1e6dc:	lsl	r2, r2, #1
   1e6e0:	ldr	ip, [r1, #8]
   1e6e4:	cmp	r2, ip
   1e6e8:	popge	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6ec:	ldr	ip, [r1, #4]
   1e6f0:	ldrh	ip, [ip, r2]
   1e6f4:	cmp	ip, #0
   1e6f8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6fc:	ldr	r5, [r1]
   1e700:	adds	lr, r5, ip
   1e704:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e708:	ldr	r2, [r1, #16]
   1e70c:	add	r4, r2, #1
   1e710:	str	r4, [r1, #16]
   1e714:	cmp	r2, #0
   1e718:	ldrne	r2, [r0, #20]
   1e71c:	addne	r1, r2, #1
   1e720:	strne	r1, [r0, #20]
   1e724:	movne	r1, #44	; 0x2c
   1e728:	strbne	r1, [r2]
   1e72c:	mov	r1, r3
   1e730:	mov	r4, r0
   1e734:	ldr	r3, [r5, ip]
   1e738:	add	r6, lr, r3
   1e73c:	ldr	r5, [lr, r3]
   1e740:	ldr	r2, [sp, #40]	; 0x28
   1e744:	bl	15408 <main@@Base+0x1980>
   1e748:	ldr	r3, [r4, #32]
   1e74c:	add	r3, r3, #1
   1e750:	str	r3, [r4, #32]
   1e754:	ldr	r3, [r4, #20]
   1e758:	add	r2, r3, #1
   1e75c:	str	r2, [r4, #20]
   1e760:	mov	r2, #91	; 0x5b
   1e764:	strb	r2, [r3]
   1e768:	cmp	r5, #0
   1e76c:	beq	1e9b8 <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   1e770:	ldrb	r3, [r4, #25]
   1e774:	cmp	r3, #0
   1e778:	bne	1e7f8 <flatcc_json_printer_struct_vector_field@@Base+0x128>
   1e77c:	ldr	r2, [r4, #20]
   1e780:	ldr	r3, [r4, #16]
   1e784:	cmp	r2, r3
   1e788:	bcs	1e818 <flatcc_json_printer_struct_vector_field@@Base+0x148>
   1e78c:	add	r6, r6, #4
   1e790:	ldr	r3, [r4, #32]
   1e794:	add	r3, r3, #1
   1e798:	str	r3, [r4, #32]
   1e79c:	ldr	r3, [r4, #20]
   1e7a0:	add	r2, r3, #1
   1e7a4:	str	r2, [r4, #20]
   1e7a8:	mov	r2, #123	; 0x7b
   1e7ac:	strb	r2, [r3]
   1e7b0:	mov	r1, r6
   1e7b4:	mov	r0, r4
   1e7b8:	blx	r8
   1e7bc:	ldrb	r3, [r4, #25]
   1e7c0:	cmp	r3, #0
   1e7c4:	bne	1e82c <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   1e7c8:	ldr	r3, [r4, #20]
   1e7cc:	add	r2, r3, #1
   1e7d0:	str	r2, [r4, #20]
   1e7d4:	mov	r2, #125	; 0x7d
   1e7d8:	strb	r2, [r3]
   1e7dc:	sub	r7, r5, #2
   1e7e0:	cmp	r5, #1
   1e7e4:	beq	1e9b8 <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   1e7e8:	mov	fp, #44	; 0x2c
   1e7ec:	mov	sl, #123	; 0x7b
   1e7f0:	mov	r9, r2
   1e7f4:	b	1e8f8 <flatcc_json_printer_struct_vector_field@@Base+0x228>
   1e7f8:	ldr	r3, [r4, #20]
   1e7fc:	add	r2, r3, #1
   1e800:	str	r2, [r4, #20]
   1e804:	mov	r2, #10
   1e808:	strb	r2, [r3]
   1e80c:	mov	r0, r4
   1e810:	bl	14f50 <main@@Base+0x14c8>
   1e814:	b	1e78c <flatcc_json_printer_struct_vector_field@@Base+0xbc>
   1e818:	ldr	r3, [r4, #44]	; 0x2c
   1e81c:	mov	r1, #0
   1e820:	mov	r0, r4
   1e824:	blx	r3
   1e828:	b	1e78c <flatcc_json_printer_struct_vector_field@@Base+0xbc>
   1e82c:	ldr	r3, [r4, #20]
   1e830:	add	r2, r3, #1
   1e834:	str	r2, [r4, #20]
   1e838:	mov	r2, #10
   1e83c:	strb	r2, [r3]
   1e840:	ldr	r3, [r4, #32]
   1e844:	sub	r3, r3, #1
   1e848:	str	r3, [r4, #32]
   1e84c:	mov	r0, r4
   1e850:	bl	14f50 <main@@Base+0x14c8>
   1e854:	b	1e7c8 <flatcc_json_printer_struct_vector_field@@Base+0xf8>
   1e858:	ldr	r3, [r4, #20]
   1e85c:	add	r2, r3, #1
   1e860:	str	r2, [r4, #20]
   1e864:	mov	r2, #10
   1e868:	strb	r2, [r3]
   1e86c:	ldrb	r3, [r4, #25]
   1e870:	ldr	r5, [r4, #32]
   1e874:	mul	r5, r5, r3
   1e878:	ldr	r0, [r4, #20]
   1e87c:	add	r3, r0, r5
   1e880:	ldr	r2, [r4, #16]
   1e884:	cmp	r2, r3
   1e888:	bcc	1e940 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   1e88c:	mov	r2, r5
   1e890:	mov	r1, #32
   1e894:	bl	124e8 <memset@plt>
   1e898:	ldr	r3, [r4, #20]
   1e89c:	add	r5, r3, r5
   1e8a0:	str	r5, [r4, #20]
   1e8a4:	ldr	r3, [r4, #32]
   1e8a8:	add	r3, r3, #1
   1e8ac:	str	r3, [r4, #32]
   1e8b0:	ldr	r3, [r4, #20]
   1e8b4:	add	r2, r3, #1
   1e8b8:	str	r2, [r4, #20]
   1e8bc:	strb	sl, [r3]
   1e8c0:	mov	r1, r6
   1e8c4:	mov	r0, r4
   1e8c8:	blx	r8
   1e8cc:	ldrb	r3, [r4, #25]
   1e8d0:	cmp	r3, #0
   1e8d4:	bne	1e950 <flatcc_json_printer_struct_vector_field@@Base+0x280>
   1e8d8:	ldr	r3, [r4, #20]
   1e8dc:	add	r2, r3, #1
   1e8e0:	str	r2, [r4, #20]
   1e8e4:	strb	r9, [r3]
   1e8e8:	sub	r3, r7, #1
   1e8ec:	cmp	r7, #0
   1e8f0:	beq	1e9b8 <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   1e8f4:	mov	r7, r3
   1e8f8:	ldr	r3, [sp, #44]	; 0x2c
   1e8fc:	add	r6, r6, r3
   1e900:	ldr	r3, [r4, #20]
   1e904:	add	r2, r3, #1
   1e908:	str	r2, [r4, #20]
   1e90c:	strb	fp, [r3]
   1e910:	ldrb	r3, [r4, #25]
   1e914:	cmp	r3, #0
   1e918:	bne	1e858 <flatcc_json_printer_struct_vector_field@@Base+0x188>
   1e91c:	ldr	r2, [r4, #20]
   1e920:	ldr	r3, [r4, #16]
   1e924:	cmp	r2, r3
   1e928:	bcc	1e8a4 <flatcc_json_printer_struct_vector_field@@Base+0x1d4>
   1e92c:	ldr	r3, [r4, #44]	; 0x2c
   1e930:	mov	r1, #0
   1e934:	mov	r0, r4
   1e938:	blx	r3
   1e93c:	b	1e8a4 <flatcc_json_printer_struct_vector_field@@Base+0x1d4>
   1e940:	mov	r1, r5
   1e944:	mov	r0, r4
   1e948:	bl	14ea4 <main@@Base+0x141c>
   1e94c:	b	1e8a4 <flatcc_json_printer_struct_vector_field@@Base+0x1d4>
   1e950:	ldr	r3, [r4, #20]
   1e954:	add	r2, r3, #1
   1e958:	str	r2, [r4, #20]
   1e95c:	mov	r2, #10
   1e960:	strb	r2, [r3]
   1e964:	ldr	r5, [r4, #32]
   1e968:	sub	r5, r5, #1
   1e96c:	str	r5, [r4, #32]
   1e970:	ldrb	r3, [r4, #25]
   1e974:	mul	r5, r5, r3
   1e978:	ldr	r0, [r4, #20]
   1e97c:	add	r3, r0, r5
   1e980:	ldr	r2, [r4, #16]
   1e984:	cmp	r2, r3
   1e988:	bcc	1e9a8 <flatcc_json_printer_struct_vector_field@@Base+0x2d8>
   1e98c:	mov	r2, r5
   1e990:	mov	r1, #32
   1e994:	bl	124e8 <memset@plt>
   1e998:	ldr	r3, [r4, #20]
   1e99c:	add	r5, r3, r5
   1e9a0:	str	r5, [r4, #20]
   1e9a4:	b	1e8d8 <flatcc_json_printer_struct_vector_field@@Base+0x208>
   1e9a8:	mov	r1, r5
   1e9ac:	mov	r0, r4
   1e9b0:	bl	14ea4 <main@@Base+0x141c>
   1e9b4:	b	1e8d8 <flatcc_json_printer_struct_vector_field@@Base+0x208>
   1e9b8:	ldrb	r3, [r4, #25]
   1e9bc:	cmp	r3, #0
   1e9c0:	bne	1e9dc <flatcc_json_printer_struct_vector_field@@Base+0x30c>
   1e9c4:	ldr	r3, [r4, #20]
   1e9c8:	add	r2, r3, #1
   1e9cc:	str	r2, [r4, #20]
   1e9d0:	mov	r2, #93	; 0x5d
   1e9d4:	strb	r2, [r3]
   1e9d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9dc:	ldr	r3, [r4, #20]
   1e9e0:	add	r2, r3, #1
   1e9e4:	str	r2, [r4, #20]
   1e9e8:	mov	r2, #10
   1e9ec:	strb	r2, [r3]
   1e9f0:	ldr	r5, [r4, #32]
   1e9f4:	sub	r5, r5, #1
   1e9f8:	str	r5, [r4, #32]
   1e9fc:	ldrb	r3, [r4, #25]
   1ea00:	mul	r5, r5, r3
   1ea04:	ldr	r0, [r4, #20]
   1ea08:	add	r3, r0, r5
   1ea0c:	ldr	r2, [r4, #16]
   1ea10:	cmp	r2, r3
   1ea14:	bcc	1ea34 <flatcc_json_printer_struct_vector_field@@Base+0x364>
   1ea18:	mov	r2, r5
   1ea1c:	mov	r1, #32
   1ea20:	bl	124e8 <memset@plt>
   1ea24:	ldr	r3, [r4, #20]
   1ea28:	add	r5, r3, r5
   1ea2c:	str	r5, [r4, #20]
   1ea30:	b	1e9c4 <flatcc_json_printer_struct_vector_field@@Base+0x2f4>
   1ea34:	mov	r1, r5
   1ea38:	mov	r0, r4
   1ea3c:	bl	14ea4 <main@@Base+0x141c>
   1ea40:	b	1e9c4 <flatcc_json_printer_struct_vector_field@@Base+0x2f4>

0001ea44 <flatcc_json_printer_string_vector_field@@Base>:
   1ea44:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea48:	ldr	r7, [sp, #40]	; 0x28
   1ea4c:	add	r2, r2, #2
   1ea50:	lsl	r2, r2, #1
   1ea54:	ldr	ip, [r1, #8]
   1ea58:	cmp	ip, r2
   1ea5c:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea60:	ldr	ip, [r1, #4]
   1ea64:	ldrh	ip, [ip, r2]
   1ea68:	cmp	ip, #0
   1ea6c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea70:	ldr	r5, [r1]
   1ea74:	adds	lr, r5, ip
   1ea78:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea7c:	ldr	r2, [r1, #16]
   1ea80:	add	r4, r2, #1
   1ea84:	str	r4, [r1, #16]
   1ea88:	cmp	r2, #0
   1ea8c:	ldrne	r2, [r0, #20]
   1ea90:	addne	r1, r2, #1
   1ea94:	strne	r1, [r0, #20]
   1ea98:	movne	r1, #44	; 0x2c
   1ea9c:	strbne	r1, [r2]
   1eaa0:	mov	r8, r3
   1eaa4:	mov	r4, r0
   1eaa8:	ldr	r3, [r5, ip]
   1eaac:	add	r6, lr, r3
   1eab0:	ldr	r5, [lr, r3]
   1eab4:	ldrb	r3, [r0, #25]
   1eab8:	cmp	r3, #0
   1eabc:	bne	1eb14 <flatcc_json_printer_string_vector_field@@Base+0xd0>
   1eac0:	ldr	r2, [r0, #20]
   1eac4:	ldr	r3, [r0, #16]
   1eac8:	cmp	r2, r3
   1eacc:	bcs	1eb74 <flatcc_json_printer_string_vector_field@@Base+0x130>
   1ead0:	ldr	r3, [r4, #20]
   1ead4:	mov	r2, #34	; 0x22
   1ead8:	strb	r2, [r3]
   1eadc:	ldrb	r3, [r4, #26]
   1eae0:	ldr	r0, [r4, #20]
   1eae4:	cmp	r3, #0
   1eae8:	addeq	r0, r0, #1
   1eaec:	str	r0, [r4, #20]
   1eaf0:	add	r3, r0, r7
   1eaf4:	ldr	r2, [r4, #16]
   1eaf8:	cmp	r2, r3
   1eafc:	bhi	1eb84 <flatcc_json_printer_string_vector_field@@Base+0x140>
   1eb00:	mov	r2, r7
   1eb04:	mov	r1, r8
   1eb08:	mov	r0, r4
   1eb0c:	bl	14dbc <main@@Base+0x1334>
   1eb10:	b	1eb9c <flatcc_json_printer_string_vector_field@@Base+0x158>
   1eb14:	ldr	r3, [r0, #20]
   1eb18:	add	r2, r3, #1
   1eb1c:	str	r2, [r0, #20]
   1eb20:	mov	r2, #10
   1eb24:	strb	r2, [r3]
   1eb28:	ldrb	r3, [r0, #25]
   1eb2c:	ldr	r9, [r0, #32]
   1eb30:	mul	r9, r9, r3
   1eb34:	ldr	r0, [r0, #20]
   1eb38:	add	r3, r0, r9
   1eb3c:	ldr	r2, [r4, #16]
   1eb40:	cmp	r2, r3
   1eb44:	bcc	1eb64 <flatcc_json_printer_string_vector_field@@Base+0x120>
   1eb48:	mov	r2, r9
   1eb4c:	mov	r1, #32
   1eb50:	bl	124e8 <memset@plt>
   1eb54:	ldr	r3, [r4, #20]
   1eb58:	add	r9, r3, r9
   1eb5c:	str	r9, [r4, #20]
   1eb60:	b	1ead0 <flatcc_json_printer_string_vector_field@@Base+0x8c>
   1eb64:	mov	r1, r9
   1eb68:	mov	r0, r4
   1eb6c:	bl	14ea4 <main@@Base+0x141c>
   1eb70:	b	1ead0 <flatcc_json_printer_string_vector_field@@Base+0x8c>
   1eb74:	ldr	r3, [r0, #44]	; 0x2c
   1eb78:	mov	r1, #0
   1eb7c:	blx	r3
   1eb80:	b	1ead0 <flatcc_json_printer_string_vector_field@@Base+0x8c>
   1eb84:	mov	r2, r7
   1eb88:	mov	r1, r8
   1eb8c:	bl	1244c <memcpy@plt>
   1eb90:	ldr	r3, [r4, #20]
   1eb94:	add	r7, r3, r7
   1eb98:	str	r7, [r4, #20]
   1eb9c:	ldr	r3, [r4, #20]
   1eba0:	mov	r2, #34	; 0x22
   1eba4:	strb	r2, [r3]
   1eba8:	ldrb	r3, [r4, #26]
   1ebac:	clz	r3, r3
   1ebb0:	lsr	r3, r3, #5
   1ebb4:	ldr	r1, [r4, #20]
   1ebb8:	add	r2, r1, r3
   1ebbc:	add	r2, r2, #1
   1ebc0:	str	r2, [r4, #20]
   1ebc4:	mov	r2, #58	; 0x3a
   1ebc8:	strb	r2, [r1, r3]
   1ebcc:	ldr	r3, [r4, #20]
   1ebd0:	mov	r2, #32
   1ebd4:	strb	r2, [r3]
   1ebd8:	ldrb	r3, [r4, #25]
   1ebdc:	adds	r3, r3, #0
   1ebe0:	movne	r3, #1
   1ebe4:	ldr	r0, [r4, #20]
   1ebe8:	add	r2, r0, r3
   1ebec:	ldr	r1, [r4, #32]
   1ebf0:	add	r1, r1, #1
   1ebf4:	str	r1, [r4, #32]
   1ebf8:	add	r2, r2, #1
   1ebfc:	str	r2, [r4, #20]
   1ec00:	mov	r2, #91	; 0x5b
   1ec04:	strb	r2, [r0, r3]
   1ec08:	cmp	r5, #0
   1ec0c:	beq	1eda4 <flatcc_json_printer_string_vector_field@@Base+0x360>
   1ec10:	ldrb	r3, [r4, #25]
   1ec14:	cmp	r3, #0
   1ec18:	bne	1ec68 <flatcc_json_printer_string_vector_field@@Base+0x224>
   1ec1c:	ldr	r2, [r4, #20]
   1ec20:	ldr	r3, [r4, #16]
   1ec24:	cmp	r2, r3
   1ec28:	bcs	1ecc8 <flatcc_json_printer_string_vector_field@@Base+0x284>
   1ec2c:	ldr	r3, [r6, #4]
   1ec30:	add	r3, r3, #4
   1ec34:	add	r1, r6, r3
   1ec38:	ldr	r2, [r6, r3]
   1ec3c:	add	r1, r1, #4
   1ec40:	mov	r0, r4
   1ec44:	bl	151b0 <main@@Base+0x1728>
   1ec48:	sub	r7, r5, #2
   1ec4c:	cmp	r5, #1
   1ec50:	beq	1eda4 <flatcc_json_printer_string_vector_field@@Base+0x360>
   1ec54:	add	r6, r6, #8
   1ec58:	mov	r9, #44	; 0x2c
   1ec5c:	mov	fp, #0
   1ec60:	mov	sl, #10
   1ec64:	b	1ed50 <flatcc_json_printer_string_vector_field@@Base+0x30c>
   1ec68:	ldr	r3, [r4, #20]
   1ec6c:	add	r2, r3, #1
   1ec70:	str	r2, [r4, #20]
   1ec74:	mov	r2, #10
   1ec78:	strb	r2, [r3]
   1ec7c:	ldrb	r3, [r4, #25]
   1ec80:	ldr	r7, [r4, #32]
   1ec84:	mul	r7, r7, r3
   1ec88:	ldr	r0, [r4, #20]
   1ec8c:	add	r3, r0, r7
   1ec90:	ldr	r2, [r4, #16]
   1ec94:	cmp	r2, r3
   1ec98:	bcc	1ecb8 <flatcc_json_printer_string_vector_field@@Base+0x274>
   1ec9c:	mov	r2, r7
   1eca0:	mov	r1, #32
   1eca4:	bl	124e8 <memset@plt>
   1eca8:	ldr	r3, [r4, #20]
   1ecac:	add	r7, r3, r7
   1ecb0:	str	r7, [r4, #20]
   1ecb4:	b	1ec2c <flatcc_json_printer_string_vector_field@@Base+0x1e8>
   1ecb8:	mov	r1, r7
   1ecbc:	mov	r0, r4
   1ecc0:	bl	14ea4 <main@@Base+0x141c>
   1ecc4:	b	1ec2c <flatcc_json_printer_string_vector_field@@Base+0x1e8>
   1ecc8:	ldr	r3, [r4, #44]	; 0x2c
   1eccc:	mov	r1, #0
   1ecd0:	mov	r0, r4
   1ecd4:	blx	r3
   1ecd8:	b	1ec2c <flatcc_json_printer_string_vector_field@@Base+0x1e8>
   1ecdc:	ldr	r3, [r4, #20]
   1ece0:	add	r2, r3, #1
   1ece4:	str	r2, [r4, #20]
   1ece8:	strb	sl, [r3]
   1ecec:	ldrb	r3, [r4, #25]
   1ecf0:	ldr	r8, [r4, #32]
   1ecf4:	mul	r8, r8, r3
   1ecf8:	ldr	r0, [r4, #20]
   1ecfc:	add	r3, r0, r8
   1ed00:	ldr	r2, [r4, #16]
   1ed04:	cmp	r2, r3
   1ed08:	bcc	1ed94 <flatcc_json_printer_string_vector_field@@Base+0x350>
   1ed0c:	mov	r2, r8
   1ed10:	mov	r1, #32
   1ed14:	bl	124e8 <memset@plt>
   1ed18:	ldr	r3, [r4, #20]
   1ed1c:	add	r8, r3, r8
   1ed20:	str	r8, [r4, #20]
   1ed24:	add	r6, r6, #4
   1ed28:	ldr	r3, [r5]
   1ed2c:	add	r1, r5, r3
   1ed30:	ldr	r2, [r5, r3]
   1ed34:	add	r1, r1, #4
   1ed38:	mov	r0, r4
   1ed3c:	bl	151b0 <main@@Base+0x1728>
   1ed40:	sub	r3, r7, #1
   1ed44:	cmp	r7, #0
   1ed48:	beq	1eda4 <flatcc_json_printer_string_vector_field@@Base+0x360>
   1ed4c:	mov	r7, r3
   1ed50:	mov	r5, r6
   1ed54:	ldr	r3, [r4, #20]
   1ed58:	add	r2, r3, #1
   1ed5c:	str	r2, [r4, #20]
   1ed60:	strb	r9, [r3]
   1ed64:	ldrb	r3, [r4, #25]
   1ed68:	cmp	r3, #0
   1ed6c:	bne	1ecdc <flatcc_json_printer_string_vector_field@@Base+0x298>
   1ed70:	ldr	r2, [r4, #20]
   1ed74:	ldr	r3, [r4, #16]
   1ed78:	cmp	r2, r3
   1ed7c:	bcc	1ed24 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   1ed80:	ldr	r3, [r4, #44]	; 0x2c
   1ed84:	mov	r1, fp
   1ed88:	mov	r0, r4
   1ed8c:	blx	r3
   1ed90:	b	1ed24 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   1ed94:	mov	r1, r8
   1ed98:	mov	r0, r4
   1ed9c:	bl	14ea4 <main@@Base+0x141c>
   1eda0:	b	1ed24 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   1eda4:	ldrb	r3, [r4, #25]
   1eda8:	cmp	r3, #0
   1edac:	bne	1edc8 <flatcc_json_printer_string_vector_field@@Base+0x384>
   1edb0:	ldr	r3, [r4, #20]
   1edb4:	add	r2, r3, #1
   1edb8:	str	r2, [r4, #20]
   1edbc:	mov	r2, #93	; 0x5d
   1edc0:	strb	r2, [r3]
   1edc4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edc8:	ldr	r3, [r4, #20]
   1edcc:	add	r2, r3, #1
   1edd0:	str	r2, [r4, #20]
   1edd4:	mov	r2, #10
   1edd8:	strb	r2, [r3]
   1eddc:	ldr	r5, [r4, #32]
   1ede0:	sub	r5, r5, #1
   1ede4:	str	r5, [r4, #32]
   1ede8:	ldrb	r3, [r4, #25]
   1edec:	mul	r5, r5, r3
   1edf0:	ldr	r0, [r4, #20]
   1edf4:	add	r3, r0, r5
   1edf8:	ldr	r2, [r4, #16]
   1edfc:	cmp	r2, r3
   1ee00:	bcc	1ee20 <flatcc_json_printer_string_vector_field@@Base+0x3dc>
   1ee04:	mov	r2, r5
   1ee08:	mov	r1, #32
   1ee0c:	bl	124e8 <memset@plt>
   1ee10:	ldr	r3, [r4, #20]
   1ee14:	add	r5, r3, r5
   1ee18:	str	r5, [r4, #20]
   1ee1c:	b	1edb0 <flatcc_json_printer_string_vector_field@@Base+0x36c>
   1ee20:	mov	r1, r5
   1ee24:	mov	r0, r4
   1ee28:	bl	14ea4 <main@@Base+0x141c>
   1ee2c:	b	1edb0 <flatcc_json_printer_string_vector_field@@Base+0x36c>

0001ee30 <flatcc_json_printer_table_vector_field@@Base>:
   1ee30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee34:	sub	sp, sp, #28
   1ee38:	ldr	r9, [sp, #64]	; 0x40
   1ee3c:	add	r2, r2, #2
   1ee40:	lsl	r2, r2, #1
   1ee44:	ldr	ip, [r1, #8]
   1ee48:	cmp	ip, r2
   1ee4c:	ble	1f024 <flatcc_json_printer_table_vector_field@@Base+0x1f4>
   1ee50:	ldr	ip, [r1, #4]
   1ee54:	ldrh	ip, [ip, r2]
   1ee58:	cmp	ip, #0
   1ee5c:	beq	1f024 <flatcc_json_printer_table_vector_field@@Base+0x1f4>
   1ee60:	ldr	r5, [r1]
   1ee64:	adds	lr, r5, ip
   1ee68:	beq	1f024 <flatcc_json_printer_table_vector_field@@Base+0x1f4>
   1ee6c:	ldr	r2, [r1, #16]
   1ee70:	add	r4, r2, #1
   1ee74:	str	r4, [r1, #16]
   1ee78:	cmp	r2, #0
   1ee7c:	ldrne	r2, [r0, #20]
   1ee80:	addne	r4, r2, #1
   1ee84:	strne	r4, [r0, #20]
   1ee88:	movne	r4, #44	; 0x2c
   1ee8c:	strbne	r4, [r2]
   1ee90:	mov	r6, r3
   1ee94:	mov	r7, r1
   1ee98:	mov	r4, r0
   1ee9c:	ldr	r3, [r5, ip]
   1eea0:	add	r8, lr, r3
   1eea4:	ldr	r5, [lr, r3]
   1eea8:	ldrb	r3, [r0, #25]
   1eeac:	cmp	r3, #0
   1eeb0:	bne	1ef08 <flatcc_json_printer_table_vector_field@@Base+0xd8>
   1eeb4:	ldr	r2, [r0, #20]
   1eeb8:	ldr	r3, [r0, #16]
   1eebc:	cmp	r2, r3
   1eec0:	bcs	1ef68 <flatcc_json_printer_table_vector_field@@Base+0x138>
   1eec4:	ldr	r3, [r4, #20]
   1eec8:	mov	r2, #34	; 0x22
   1eecc:	strb	r2, [r3]
   1eed0:	ldrb	r3, [r4, #26]
   1eed4:	ldr	r0, [r4, #20]
   1eed8:	cmp	r3, #0
   1eedc:	addeq	r0, r0, #1
   1eee0:	str	r0, [r4, #20]
   1eee4:	add	r3, r0, r9
   1eee8:	ldr	r2, [r4, #16]
   1eeec:	cmp	r2, r3
   1eef0:	bhi	1ef78 <flatcc_json_printer_table_vector_field@@Base+0x148>
   1eef4:	mov	r2, r9
   1eef8:	mov	r1, r6
   1eefc:	mov	r0, r4
   1ef00:	bl	14dbc <main@@Base+0x1334>
   1ef04:	b	1ef90 <flatcc_json_printer_table_vector_field@@Base+0x160>
   1ef08:	ldr	r3, [r0, #20]
   1ef0c:	add	r2, r3, #1
   1ef10:	str	r2, [r0, #20]
   1ef14:	mov	r2, #10
   1ef18:	strb	r2, [r3]
   1ef1c:	ldrb	r3, [r0, #25]
   1ef20:	ldr	sl, [r0, #32]
   1ef24:	mul	sl, sl, r3
   1ef28:	ldr	r0, [r0, #20]
   1ef2c:	add	r3, r0, sl
   1ef30:	ldr	r2, [r4, #16]
   1ef34:	cmp	r2, r3
   1ef38:	bcc	1ef58 <flatcc_json_printer_table_vector_field@@Base+0x128>
   1ef3c:	mov	r2, sl
   1ef40:	mov	r1, #32
   1ef44:	bl	124e8 <memset@plt>
   1ef48:	ldr	r3, [r4, #20]
   1ef4c:	add	sl, r3, sl
   1ef50:	str	sl, [r4, #20]
   1ef54:	b	1eec4 <flatcc_json_printer_table_vector_field@@Base+0x94>
   1ef58:	mov	r1, sl
   1ef5c:	mov	r0, r4
   1ef60:	bl	14ea4 <main@@Base+0x141c>
   1ef64:	b	1eec4 <flatcc_json_printer_table_vector_field@@Base+0x94>
   1ef68:	ldr	r3, [r0, #44]	; 0x2c
   1ef6c:	mov	r1, #0
   1ef70:	blx	r3
   1ef74:	b	1eec4 <flatcc_json_printer_table_vector_field@@Base+0x94>
   1ef78:	mov	r2, r9
   1ef7c:	mov	r1, r6
   1ef80:	bl	1244c <memcpy@plt>
   1ef84:	ldr	r3, [r4, #20]
   1ef88:	add	r9, r3, r9
   1ef8c:	str	r9, [r4, #20]
   1ef90:	ldr	r3, [r4, #20]
   1ef94:	mov	r2, #34	; 0x22
   1ef98:	strb	r2, [r3]
   1ef9c:	ldrb	r3, [r4, #26]
   1efa0:	clz	r3, r3
   1efa4:	lsr	r3, r3, #5
   1efa8:	ldr	r1, [r4, #20]
   1efac:	add	r2, r1, r3
   1efb0:	add	r2, r2, #1
   1efb4:	str	r2, [r4, #20]
   1efb8:	mov	r2, #58	; 0x3a
   1efbc:	strb	r2, [r1, r3]
   1efc0:	ldr	r3, [r4, #20]
   1efc4:	mov	r2, #32
   1efc8:	strb	r2, [r3]
   1efcc:	ldrb	r3, [r4, #25]
   1efd0:	adds	r3, r3, #0
   1efd4:	movne	r3, #1
   1efd8:	ldr	r0, [r4, #20]
   1efdc:	add	r2, r0, r3
   1efe0:	ldr	r1, [r4, #32]
   1efe4:	add	r1, r1, #1
   1efe8:	str	r1, [r4, #32]
   1efec:	add	r2, r2, #1
   1eff0:	str	r2, [r4, #20]
   1eff4:	mov	r2, #91	; 0x5b
   1eff8:	strb	r2, [r0, r3]
   1effc:	cmp	r5, #0
   1f000:	bne	1f02c <flatcc_json_printer_table_vector_field@@Base+0x1fc>
   1f004:	ldrb	r3, [r4, #25]
   1f008:	cmp	r3, #0
   1f00c:	bne	1f228 <flatcc_json_printer_table_vector_field@@Base+0x3f8>
   1f010:	ldr	r3, [r4, #20]
   1f014:	add	r2, r3, #1
   1f018:	str	r2, [r4, #20]
   1f01c:	mov	r2, #93	; 0x5d
   1f020:	strb	r2, [r3]
   1f024:	add	sp, sp, #28
   1f028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f02c:	add	r6, r8, #4
   1f030:	ldr	r3, [r7, #12]
   1f034:	subs	r3, r3, #1
   1f038:	bne	1f060 <flatcc_json_printer_table_vector_field@@Base+0x230>
   1f03c:	ldr	r3, [r4, #36]	; 0x24
   1f040:	cmp	r3, #0
   1f044:	moveq	r3, #2
   1f048:	streq	r3, [r4, #36]	; 0x24
   1f04c:	sub	r5, r5, #1
   1f050:	mov	r9, #44	; 0x2c
   1f054:	mov	fp, #123	; 0x7b
   1f058:	mov	sl, #0
   1f05c:	b	1f180 <flatcc_json_printer_table_vector_field@@Base+0x350>
   1f060:	ldr	r0, [r8, #4]
   1f064:	add	r2, r6, r0
   1f068:	ldr	r1, [r4, #32]
   1f06c:	add	r1, r1, #1
   1f070:	str	r1, [r4, #32]
   1f074:	ldr	r1, [r4, #20]
   1f078:	add	ip, r1, #1
   1f07c:	str	ip, [r4, #20]
   1f080:	mov	ip, #123	; 0x7b
   1f084:	strb	ip, [r1]
   1f088:	mov	r1, #0
   1f08c:	str	r1, [sp, #20]
   1f090:	str	r3, [sp, #16]
   1f094:	str	r2, [sp, #4]
   1f098:	ldr	r3, [r6, r0]
   1f09c:	sub	r3, r2, r3
   1f0a0:	str	r3, [sp, #8]
   1f0a4:	ldrh	r3, [r3]
   1f0a8:	str	r3, [sp, #12]
   1f0ac:	add	r1, sp, #4
   1f0b0:	mov	r0, r4
   1f0b4:	ldr	r3, [sp, #68]	; 0x44
   1f0b8:	blx	r3
   1f0bc:	ldrb	r3, [r4, #25]
   1f0c0:	cmp	r3, #0
   1f0c4:	bne	1f0e0 <flatcc_json_printer_table_vector_field@@Base+0x2b0>
   1f0c8:	ldr	r3, [r4, #20]
   1f0cc:	add	r2, r3, #1
   1f0d0:	str	r2, [r4, #20]
   1f0d4:	mov	r2, #125	; 0x7d
   1f0d8:	strb	r2, [r3]
   1f0dc:	b	1f04c <flatcc_json_printer_table_vector_field@@Base+0x21c>
   1f0e0:	ldr	r3, [r4, #20]
   1f0e4:	add	r2, r3, #1
   1f0e8:	str	r2, [r4, #20]
   1f0ec:	mov	r2, #10
   1f0f0:	strb	r2, [r3]
   1f0f4:	ldr	r3, [r4, #32]
   1f0f8:	sub	r3, r3, #1
   1f0fc:	str	r3, [r4, #32]
   1f100:	mov	r0, r4
   1f104:	bl	14f50 <main@@Base+0x14c8>
   1f108:	b	1f0c8 <flatcc_json_printer_table_vector_field@@Base+0x298>
   1f10c:	ldr	r0, [r6]
   1f110:	add	r2, r6, r0
   1f114:	ldr	r1, [r4, #32]
   1f118:	add	r1, r1, #1
   1f11c:	str	r1, [r4, #32]
   1f120:	ldr	r1, [r4, #20]
   1f124:	add	ip, r1, #1
   1f128:	str	ip, [r4, #20]
   1f12c:	strb	fp, [r1]
   1f130:	str	sl, [sp, #20]
   1f134:	str	r3, [sp, #16]
   1f138:	str	r2, [sp, #4]
   1f13c:	ldr	r3, [r6, r0]
   1f140:	sub	r3, r2, r3
   1f144:	str	r3, [sp, #8]
   1f148:	ldrh	r3, [r3]
   1f14c:	str	r3, [sp, #12]
   1f150:	add	r1, sp, #4
   1f154:	mov	r0, r4
   1f158:	ldr	r3, [sp, #68]	; 0x44
   1f15c:	blx	r3
   1f160:	ldrb	r3, [r4, #25]
   1f164:	cmp	r3, #0
   1f168:	bne	1f1c0 <flatcc_json_printer_table_vector_field@@Base+0x390>
   1f16c:	ldr	r3, [r4, #20]
   1f170:	add	r2, r3, #1
   1f174:	str	r2, [r4, #20]
   1f178:	mov	r2, #125	; 0x7d
   1f17c:	strb	r2, [r3]
   1f180:	sub	r5, r5, #1
   1f184:	cmn	r5, #1
   1f188:	beq	1f004 <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   1f18c:	add	r6, r6, #4
   1f190:	ldr	r3, [r4, #20]
   1f194:	add	r2, r3, #1
   1f198:	str	r2, [r4, #20]
   1f19c:	strb	r9, [r3]
   1f1a0:	ldr	r3, [r7, #12]
   1f1a4:	subs	r3, r3, #1
   1f1a8:	bne	1f10c <flatcc_json_printer_table_vector_field@@Base+0x2dc>
   1f1ac:	ldr	r3, [r4, #36]	; 0x24
   1f1b0:	cmp	r3, #0
   1f1b4:	moveq	r3, #2
   1f1b8:	streq	r3, [r4, #36]	; 0x24
   1f1bc:	b	1f180 <flatcc_json_printer_table_vector_field@@Base+0x350>
   1f1c0:	ldr	r3, [r4, #20]
   1f1c4:	add	r2, r3, #1
   1f1c8:	str	r2, [r4, #20]
   1f1cc:	mov	r2, #10
   1f1d0:	strb	r2, [r3]
   1f1d4:	ldr	r8, [r4, #32]
   1f1d8:	sub	r8, r8, #1
   1f1dc:	str	r8, [r4, #32]
   1f1e0:	ldrb	r3, [r4, #25]
   1f1e4:	mul	r8, r8, r3
   1f1e8:	ldr	r0, [r4, #20]
   1f1ec:	add	r3, r0, r8
   1f1f0:	ldr	r2, [r4, #16]
   1f1f4:	cmp	r2, r3
   1f1f8:	bcc	1f218 <flatcc_json_printer_table_vector_field@@Base+0x3e8>
   1f1fc:	mov	r2, r8
   1f200:	mov	r1, #32
   1f204:	bl	124e8 <memset@plt>
   1f208:	ldr	r3, [r4, #20]
   1f20c:	add	r8, r3, r8
   1f210:	str	r8, [r4, #20]
   1f214:	b	1f16c <flatcc_json_printer_table_vector_field@@Base+0x33c>
   1f218:	mov	r1, r8
   1f21c:	mov	r0, r4
   1f220:	bl	14ea4 <main@@Base+0x141c>
   1f224:	b	1f16c <flatcc_json_printer_table_vector_field@@Base+0x33c>
   1f228:	ldr	r3, [r4, #20]
   1f22c:	add	r2, r3, #1
   1f230:	str	r2, [r4, #20]
   1f234:	mov	r2, #10
   1f238:	strb	r2, [r3]
   1f23c:	ldr	r5, [r4, #32]
   1f240:	sub	r5, r5, #1
   1f244:	str	r5, [r4, #32]
   1f248:	ldrb	r3, [r4, #25]
   1f24c:	mul	r5, r5, r3
   1f250:	ldr	r0, [r4, #20]
   1f254:	add	r3, r0, r5
   1f258:	ldr	r2, [r4, #16]
   1f25c:	cmp	r2, r3
   1f260:	bcc	1f280 <flatcc_json_printer_table_vector_field@@Base+0x450>
   1f264:	mov	r2, r5
   1f268:	mov	r1, #32
   1f26c:	bl	124e8 <memset@plt>
   1f270:	ldr	r3, [r4, #20]
   1f274:	add	r5, r3, r5
   1f278:	str	r5, [r4, #20]
   1f27c:	b	1f010 <flatcc_json_printer_table_vector_field@@Base+0x1e0>
   1f280:	mov	r1, r5
   1f284:	mov	r0, r4
   1f288:	bl	14ea4 <main@@Base+0x141c>
   1f28c:	b	1f010 <flatcc_json_printer_table_vector_field@@Base+0x1e0>

0001f290 <flatcc_json_printer_union_vector_field@@Base>:
   1f290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f294:	sub	sp, sp, #140	; 0x8c
   1f298:	mov	r4, r0
   1f29c:	mov	r5, r1
   1f2a0:	mov	r8, r2
   1f2a4:	str	r3, [sp, #8]
   1f2a8:	ldr	r6, [sp, #176]	; 0xb0
   1f2ac:	add	r3, r2, #1
   1f2b0:	lsl	r3, r3, #1
   1f2b4:	ldr	r2, [r1, #8]
   1f2b8:	cmp	r3, r2
   1f2bc:	movge	r7, #0
   1f2c0:	bge	1f2dc <flatcc_json_printer_union_vector_field@@Base+0x4c>
   1f2c4:	ldr	r1, [r1, #4]
   1f2c8:	ldrh	r1, [r1, r3]
   1f2cc:	cmp	r1, #0
   1f2d0:	ldrne	r7, [r5]
   1f2d4:	addne	r7, r7, r1
   1f2d8:	moveq	r7, #0
   1f2dc:	add	r3, r3, #2
   1f2e0:	cmp	r3, r2
   1f2e4:	bge	1f574 <flatcc_json_printer_union_vector_field@@Base+0x2e4>
   1f2e8:	ldr	r2, [r5, #4]
   1f2ec:	ldrh	r9, [r2, r3]
   1f2f0:	cmp	r9, #0
   1f2f4:	beq	1f574 <flatcc_json_printer_union_vector_field@@Base+0x2e4>
   1f2f8:	ldr	r3, [r5]
   1f2fc:	str	r3, [sp, #12]
   1f300:	add	fp, r3, r9
   1f304:	ldr	r3, [r5, #12]
   1f308:	str	r3, [sp, #20]
   1f30c:	cmp	r6, #100	; 0x64
   1f310:	bgt	1f460 <flatcc_json_printer_union_vector_field@@Base+0x1d0>
   1f314:	add	sl, sp, #28
   1f318:	mov	r2, r6
   1f31c:	ldr	r1, [sp, #8]
   1f320:	mov	r0, sl
   1f324:	bl	1244c <memcpy@plt>
   1f328:	add	r2, sl, r6
   1f32c:	ldr	r3, [pc, #600]	; 1f58c <flatcc_json_printer_union_vector_field@@Base+0x2fc>
   1f330:	ldr	r0, [r3]
   1f334:	str	r0, [sl, r6]
   1f338:	ldrb	r3, [r3, #4]
   1f33c:	strb	r3, [r2, #4]
   1f340:	cmp	fp, #0
   1f344:	cmpne	r7, #0
   1f348:	beq	1f584 <flatcc_json_printer_union_vector_field@@Base+0x2f4>
   1f34c:	ldr	r3, [sp, #180]	; 0xb4
   1f350:	str	r3, [sp, #4]
   1f354:	add	r3, r6, #5
   1f358:	str	r3, [sp]
   1f35c:	add	r3, sp, #28
   1f360:	sub	r2, r8, #1
   1f364:	mov	r1, r5
   1f368:	mov	r0, r4
   1f36c:	bl	1cda0 <flatcc_json_printer_utype_enum_vector_field@@Base>
   1f370:	ldr	r3, [r5, #16]
   1f374:	add	r2, r3, #1
   1f378:	str	r2, [r5, #16]
   1f37c:	cmp	r3, #0
   1f380:	ldrne	r3, [r4, #20]
   1f384:	addne	r2, r3, #1
   1f388:	strne	r2, [r4, #20]
   1f38c:	movne	r2, #44	; 0x2c
   1f390:	strbne	r2, [r3]
   1f394:	ldr	r3, [sp, #12]
   1f398:	ldr	r3, [r3, r9]
   1f39c:	add	r9, fp, r3
   1f3a0:	ldr	r5, [r7]
   1f3a4:	ldr	r8, [fp, r3]
   1f3a8:	mov	r2, r6
   1f3ac:	ldr	r1, [sp, #8]
   1f3b0:	mov	r0, r4
   1f3b4:	bl	15408 <main@@Base+0x1980>
   1f3b8:	ldr	r3, [r4, #32]
   1f3bc:	add	r3, r3, #1
   1f3c0:	str	r3, [r4, #32]
   1f3c4:	ldr	r3, [r4, #20]
   1f3c8:	add	r2, r3, #1
   1f3cc:	str	r2, [r4, #20]
   1f3d0:	mov	r2, #91	; 0x5b
   1f3d4:	strb	r2, [r3]
   1f3d8:	cmp	r8, #0
   1f3dc:	beq	1f524 <flatcc_json_printer_union_vector_field@@Base+0x294>
   1f3e0:	add	r7, r7, r5
   1f3e4:	add	r6, r9, #4
   1f3e8:	ldrb	r3, [r7, #4]
   1f3ec:	cmp	r3, #0
   1f3f0:	bne	1f484 <flatcc_json_printer_union_vector_field@@Base+0x1f4>
   1f3f4:	ldr	r3, [r4, #20]
   1f3f8:	add	r2, r3, #1
   1f3fc:	str	r2, [r4, #20]
   1f400:	mov	r2, #110	; 0x6e
   1f404:	strb	r2, [r3]
   1f408:	ldr	r3, [r4, #20]
   1f40c:	add	r2, r3, #1
   1f410:	str	r2, [r4, #20]
   1f414:	mov	r2, #117	; 0x75
   1f418:	strb	r2, [r3]
   1f41c:	ldr	r3, [r4, #20]
   1f420:	add	r2, r3, #1
   1f424:	str	r2, [r4, #20]
   1f428:	mov	r2, #108	; 0x6c
   1f42c:	strb	r2, [r3]
   1f430:	ldr	r3, [r4, #20]
   1f434:	add	r1, r3, #1
   1f438:	str	r1, [r4, #20]
   1f43c:	strb	r2, [r3]
   1f440:	add	r8, r8, #3
   1f444:	add	r8, r7, r8
   1f448:	add	r7, r7, #4
   1f44c:	mov	r9, #44	; 0x2c
   1f450:	mov	fp, #110	; 0x6e
   1f454:	mov	sl, #117	; 0x75
   1f458:	mov	r5, #108	; 0x6c
   1f45c:	b	1f4b8 <flatcc_json_printer_union_vector_field@@Base+0x228>
   1f460:	ldr	r3, [r4, #36]	; 0x24
   1f464:	cmp	r3, #0
   1f468:	moveq	r3, #1
   1f46c:	streq	r3, [r4, #36]	; 0x24
   1f470:	ldr	r3, [pc, #280]	; 1f590 <flatcc_json_printer_union_vector_field@@Base+0x300>
   1f474:	ldr	r2, [pc, #280]	; 1f594 <flatcc_json_printer_union_vector_field@@Base+0x304>
   1f478:	ldr	r1, [pc, #280]	; 1f598 <flatcc_json_printer_union_vector_field@@Base+0x308>
   1f47c:	ldr	r0, [pc, #280]	; 1f59c <flatcc_json_printer_union_vector_field@@Base+0x30c>
   1f480:	bl	12530 <__assert_fail@plt>
   1f484:	strb	r3, [sp, #24]
   1f488:	add	r1, sp, #136	; 0x88
   1f48c:	str	r6, [r1, #-120]!	; 0xffffff88
   1f490:	mov	r0, r4
   1f494:	ldr	r3, [sp, #184]	; 0xb8
   1f498:	blx	r3
   1f49c:	b	1f440 <flatcc_json_printer_union_vector_field@@Base+0x1b0>
   1f4a0:	strb	r2, [sp, #24]
   1f4a4:	str	r6, [sp, #16]
   1f4a8:	add	r1, sp, #16
   1f4ac:	mov	r0, r4
   1f4b0:	ldr	r3, [sp, #184]	; 0xb8
   1f4b4:	blx	r3
   1f4b8:	cmp	r7, r8
   1f4bc:	beq	1f524 <flatcc_json_printer_union_vector_field@@Base+0x294>
   1f4c0:	add	r6, r6, #4
   1f4c4:	ldrb	r2, [r7, #1]!
   1f4c8:	ldr	r3, [r4, #20]
   1f4cc:	add	r1, r3, #1
   1f4d0:	str	r1, [r4, #20]
   1f4d4:	strb	r9, [r3]
   1f4d8:	cmp	r2, #0
   1f4dc:	bne	1f4a0 <flatcc_json_printer_union_vector_field@@Base+0x210>
   1f4e0:	ldr	r3, [r4, #20]
   1f4e4:	add	r2, r3, #1
   1f4e8:	str	r2, [r4, #20]
   1f4ec:	strb	fp, [r3]
   1f4f0:	ldr	r3, [r4, #20]
   1f4f4:	add	r2, r3, #1
   1f4f8:	str	r2, [r4, #20]
   1f4fc:	strb	sl, [r3]
   1f500:	ldr	r3, [r4, #20]
   1f504:	add	r2, r3, #1
   1f508:	str	r2, [r4, #20]
   1f50c:	strb	r5, [r3]
   1f510:	ldr	r3, [r4, #20]
   1f514:	add	r2, r3, #1
   1f518:	str	r2, [r4, #20]
   1f51c:	strb	r5, [r3]
   1f520:	b	1f4b8 <flatcc_json_printer_union_vector_field@@Base+0x228>
   1f524:	ldrb	r3, [r4, #25]
   1f528:	cmp	r3, #0
   1f52c:	bne	1f548 <flatcc_json_printer_union_vector_field@@Base+0x2b8>
   1f530:	ldr	r3, [r4, #20]
   1f534:	add	r2, r3, #1
   1f538:	str	r2, [r4, #20]
   1f53c:	mov	r2, #93	; 0x5d
   1f540:	strb	r2, [r3]
   1f544:	b	1f584 <flatcc_json_printer_union_vector_field@@Base+0x2f4>
   1f548:	ldr	r3, [r4, #20]
   1f54c:	add	r2, r3, #1
   1f550:	str	r2, [r4, #20]
   1f554:	mov	r2, #10
   1f558:	strb	r2, [r3]
   1f55c:	ldr	r3, [r4, #32]
   1f560:	sub	r3, r3, #1
   1f564:	str	r3, [r4, #32]
   1f568:	mov	r0, r4
   1f56c:	bl	14f50 <main@@Base+0x14c8>
   1f570:	b	1f530 <flatcc_json_printer_union_vector_field@@Base+0x2a0>
   1f574:	ldr	r3, [r5, #12]
   1f578:	str	r3, [sp, #20]
   1f57c:	cmp	r6, #100	; 0x64
   1f580:	bgt	1f460 <flatcc_json_printer_union_vector_field@@Base+0x1d0>
   1f584:	add	sp, sp, #140	; 0x8c
   1f588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f58c:	andeq	r1, r2, r0, ror #28
   1f590:	andeq	r1, r2, r4, lsl #23
   1f594:	andeq	r0, r0, fp, asr #6
   1f598:			; <UNDEFINED> instruction: 0x00021cb8
   1f59c:	andeq	r1, r2, r4, asr #28

0001f5a0 <flatcc_json_printer_table_field@@Base>:
   1f5a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f5a4:	sub	sp, sp, #28
   1f5a8:	ldr	sl, [sp, #64]	; 0x40
   1f5ac:	add	r2, r2, #2
   1f5b0:	lsl	r2, r2, #1
   1f5b4:	ldr	ip, [r1, #8]
   1f5b8:	cmp	r2, ip
   1f5bc:	bge	1f764 <flatcc_json_printer_table_field@@Base+0x1c4>
   1f5c0:	ldr	ip, [r1, #4]
   1f5c4:	ldrh	r6, [ip, r2]
   1f5c8:	cmp	r6, #0
   1f5cc:	beq	1f764 <flatcc_json_printer_table_field@@Base+0x1c4>
   1f5d0:	ldr	r7, [r1]
   1f5d4:	adds	r8, r7, r6
   1f5d8:	beq	1f764 <flatcc_json_printer_table_field@@Base+0x1c4>
   1f5dc:	ldr	r2, [r1, #16]
   1f5e0:	add	ip, r2, #1
   1f5e4:	str	ip, [r1, #16]
   1f5e8:	cmp	r2, #0
   1f5ec:	ldrne	r2, [r0, #20]
   1f5f0:	addne	ip, r2, #1
   1f5f4:	strne	ip, [r0, #20]
   1f5f8:	movne	ip, #44	; 0x2c
   1f5fc:	strbne	ip, [r2]
   1f600:	mov	r9, r3
   1f604:	mov	r5, r1
   1f608:	mov	r4, r0
   1f60c:	ldrb	r3, [r0, #25]
   1f610:	cmp	r3, #0
   1f614:	bne	1f66c <flatcc_json_printer_table_field@@Base+0xcc>
   1f618:	ldr	r2, [r0, #20]
   1f61c:	ldr	r3, [r0, #16]
   1f620:	cmp	r2, r3
   1f624:	bcs	1f6cc <flatcc_json_printer_table_field@@Base+0x12c>
   1f628:	ldr	r3, [r4, #20]
   1f62c:	mov	r2, #34	; 0x22
   1f630:	strb	r2, [r3]
   1f634:	ldrb	r3, [r4, #26]
   1f638:	ldr	r0, [r4, #20]
   1f63c:	cmp	r3, #0
   1f640:	addeq	r0, r0, #1
   1f644:	str	r0, [r4, #20]
   1f648:	add	r3, r0, sl
   1f64c:	ldr	r2, [r4, #16]
   1f650:	cmp	r2, r3
   1f654:	bhi	1f6dc <flatcc_json_printer_table_field@@Base+0x13c>
   1f658:	mov	r2, sl
   1f65c:	mov	r1, r9
   1f660:	mov	r0, r4
   1f664:	bl	14dbc <main@@Base+0x1334>
   1f668:	b	1f6f4 <flatcc_json_printer_table_field@@Base+0x154>
   1f66c:	ldr	r3, [r0, #20]
   1f670:	add	r2, r3, #1
   1f674:	str	r2, [r0, #20]
   1f678:	mov	r2, #10
   1f67c:	strb	r2, [r3]
   1f680:	ldrb	r3, [r0, #25]
   1f684:	ldr	fp, [r0, #32]
   1f688:	mul	fp, fp, r3
   1f68c:	ldr	r0, [r0, #20]
   1f690:	add	r3, r0, fp
   1f694:	ldr	r2, [r4, #16]
   1f698:	cmp	r2, r3
   1f69c:	bcc	1f6bc <flatcc_json_printer_table_field@@Base+0x11c>
   1f6a0:	mov	r2, fp
   1f6a4:	mov	r1, #32
   1f6a8:	bl	124e8 <memset@plt>
   1f6ac:	ldr	r3, [r4, #20]
   1f6b0:	add	fp, r3, fp
   1f6b4:	str	fp, [r4, #20]
   1f6b8:	b	1f628 <flatcc_json_printer_table_field@@Base+0x88>
   1f6bc:	mov	r1, fp
   1f6c0:	mov	r0, r4
   1f6c4:	bl	14ea4 <main@@Base+0x141c>
   1f6c8:	b	1f628 <flatcc_json_printer_table_field@@Base+0x88>
   1f6cc:	ldr	r3, [r0, #44]	; 0x2c
   1f6d0:	mov	r1, #0
   1f6d4:	blx	r3
   1f6d8:	b	1f628 <flatcc_json_printer_table_field@@Base+0x88>
   1f6dc:	mov	r2, sl
   1f6e0:	mov	r1, r9
   1f6e4:	bl	1244c <memcpy@plt>
   1f6e8:	ldr	r3, [r4, #20]
   1f6ec:	add	sl, r3, sl
   1f6f0:	str	sl, [r4, #20]
   1f6f4:	ldr	r3, [r4, #20]
   1f6f8:	mov	r2, #34	; 0x22
   1f6fc:	strb	r2, [r3]
   1f700:	ldrb	r3, [r4, #26]
   1f704:	clz	r3, r3
   1f708:	lsr	r3, r3, #5
   1f70c:	ldr	r1, [r4, #20]
   1f710:	add	r2, r1, r3
   1f714:	add	r2, r2, #1
   1f718:	str	r2, [r4, #20]
   1f71c:	mov	r2, #58	; 0x3a
   1f720:	strb	r2, [r1, r3]
   1f724:	ldr	r3, [r4, #20]
   1f728:	mov	r2, #32
   1f72c:	strb	r2, [r3]
   1f730:	ldrb	r2, [r4, #25]
   1f734:	adds	r2, r2, #0
   1f738:	movne	r2, #1
   1f73c:	ldr	r0, [r4, #20]
   1f740:	add	r1, r0, r2
   1f744:	str	r1, [r4, #20]
   1f748:	ldr	r3, [r5, #12]
   1f74c:	subs	r3, r3, #1
   1f750:	bne	1f76c <flatcc_json_printer_table_field@@Base+0x1cc>
   1f754:	ldr	r3, [r4, #36]	; 0x24
   1f758:	cmp	r3, #0
   1f75c:	moveq	r3, #2
   1f760:	streq	r3, [r4, #36]	; 0x24
   1f764:	add	sp, sp, #28
   1f768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f76c:	ldr	r5, [r7, r6]
   1f770:	add	ip, r8, r5
   1f774:	ldr	lr, [r4, #32]
   1f778:	add	lr, lr, #1
   1f77c:	str	lr, [r4, #32]
   1f780:	add	r1, r1, #1
   1f784:	str	r1, [r4, #20]
   1f788:	mov	r1, #123	; 0x7b
   1f78c:	strb	r1, [r0, r2]
   1f790:	mov	r2, #0
   1f794:	str	r2, [sp, #20]
   1f798:	str	r3, [sp, #16]
   1f79c:	str	ip, [sp, #4]
   1f7a0:	ldr	r3, [r8, r5]
   1f7a4:	sub	r3, ip, r3
   1f7a8:	str	r3, [sp, #8]
   1f7ac:	ldrh	r3, [r3]
   1f7b0:	str	r3, [sp, #12]
   1f7b4:	add	r1, sp, #4
   1f7b8:	mov	r0, r4
   1f7bc:	ldr	r3, [sp, #68]	; 0x44
   1f7c0:	blx	r3
   1f7c4:	ldrb	r3, [r4, #25]
   1f7c8:	cmp	r3, #0
   1f7cc:	bne	1f7e8 <flatcc_json_printer_table_field@@Base+0x248>
   1f7d0:	ldr	r3, [r4, #20]
   1f7d4:	add	r2, r3, #1
   1f7d8:	str	r2, [r4, #20]
   1f7dc:	mov	r2, #125	; 0x7d
   1f7e0:	strb	r2, [r3]
   1f7e4:	b	1f764 <flatcc_json_printer_table_field@@Base+0x1c4>
   1f7e8:	ldr	r3, [r4, #20]
   1f7ec:	add	r2, r3, #1
   1f7f0:	str	r2, [r4, #20]
   1f7f4:	mov	r2, #10
   1f7f8:	strb	r2, [r3]
   1f7fc:	ldr	r5, [r4, #32]
   1f800:	sub	r5, r5, #1
   1f804:	str	r5, [r4, #32]
   1f808:	ldrb	r3, [r4, #25]
   1f80c:	mul	r5, r5, r3
   1f810:	ldr	r0, [r4, #20]
   1f814:	add	r3, r0, r5
   1f818:	ldr	r2, [r4, #16]
   1f81c:	cmp	r2, r3
   1f820:	bcc	1f840 <flatcc_json_printer_table_field@@Base+0x2a0>
   1f824:	mov	r2, r5
   1f828:	mov	r1, #32
   1f82c:	bl	124e8 <memset@plt>
   1f830:	ldr	r3, [r4, #20]
   1f834:	add	r5, r3, r5
   1f838:	str	r5, [r4, #20]
   1f83c:	b	1f7d0 <flatcc_json_printer_table_field@@Base+0x230>
   1f840:	mov	r1, r5
   1f844:	mov	r0, r4
   1f848:	bl	14ea4 <main@@Base+0x141c>
   1f84c:	b	1f7d0 <flatcc_json_printer_table_field@@Base+0x230>

0001f850 <flatcc_json_printer_union_field@@Base>:
   1f850:	push	{r4, r5, r6, r7, r8, r9, lr}
   1f854:	sub	sp, sp, #20
   1f858:	add	r2, r2, #1
   1f85c:	lsl	r2, r2, #1
   1f860:	ldr	ip, [r1, #8]
   1f864:	cmp	r2, ip
   1f868:	movge	lr, #0
   1f86c:	bge	1f888 <flatcc_json_printer_union_field@@Base+0x38>
   1f870:	ldr	lr, [r1, #4]
   1f874:	ldrh	r4, [lr, r2]
   1f878:	cmp	r4, #0
   1f87c:	ldrne	lr, [r1]
   1f880:	addne	lr, lr, r4
   1f884:	moveq	lr, #0
   1f888:	add	r2, r2, #2
   1f88c:	cmp	r2, ip
   1f890:	bge	1fa10 <flatcc_json_printer_union_field@@Base+0x1c0>
   1f894:	ldr	ip, [r1, #4]
   1f898:	ldrh	r2, [ip, r2]
   1f89c:	cmp	r2, #0
   1f8a0:	beq	1fa10 <flatcc_json_printer_union_field@@Base+0x1c0>
   1f8a4:	ldr	r8, [r1]
   1f8a8:	adds	r8, r8, r2
   1f8ac:	moveq	r2, #1
   1f8b0:	movne	r2, #0
   1f8b4:	cmp	lr, #0
   1f8b8:	orreq	r2, r2, #1
   1f8bc:	cmp	r2, #0
   1f8c0:	bne	1fa10 <flatcc_json_printer_union_field@@Base+0x1c0>
   1f8c4:	ldrb	r7, [lr]
   1f8c8:	ldr	r2, [r1, #16]
   1f8cc:	add	ip, r2, #1
   1f8d0:	str	ip, [r1, #16]
   1f8d4:	cmp	r2, #0
   1f8d8:	ldrne	r2, [r0, #20]
   1f8dc:	addne	ip, r2, #1
   1f8e0:	strne	ip, [r0, #20]
   1f8e4:	movne	ip, #44	; 0x2c
   1f8e8:	strbne	ip, [r2]
   1f8ec:	mov	r6, r3
   1f8f0:	mov	r5, r1
   1f8f4:	mov	r4, r0
   1f8f8:	ldrb	r3, [r0, #25]
   1f8fc:	cmp	r3, #0
   1f900:	bne	1fa18 <flatcc_json_printer_union_field@@Base+0x1c8>
   1f904:	ldr	r2, [r0, #20]
   1f908:	ldr	r3, [r0, #16]
   1f90c:	cmp	r2, r3
   1f910:	bcs	1fa78 <flatcc_json_printer_union_field@@Base+0x228>
   1f914:	ldr	r3, [r4, #20]
   1f918:	mov	r2, #34	; 0x22
   1f91c:	strb	r2, [r3]
   1f920:	ldrb	r3, [r4, #26]
   1f924:	ldr	r0, [r4, #20]
   1f928:	cmp	r3, #0
   1f92c:	addeq	r0, r0, #1
   1f930:	str	r0, [r4, #20]
   1f934:	ldr	r3, [sp, #48]	; 0x30
   1f938:	add	r3, r0, r3
   1f93c:	ldr	r2, [r4, #16]
   1f940:	cmp	r2, r3
   1f944:	bls	1fa88 <flatcc_json_printer_union_field@@Base+0x238>
   1f948:	ldr	r2, [sp, #48]	; 0x30
   1f94c:	mov	r1, r6
   1f950:	bl	1244c <memcpy@plt>
   1f954:	ldr	r3, [r4, #20]
   1f958:	ldr	r2, [sp, #48]	; 0x30
   1f95c:	add	r3, r3, r2
   1f960:	str	r3, [r4, #20]
   1f964:	ldr	r3, [r4, #20]
   1f968:	add	r2, r3, #5
   1f96c:	ldr	r1, [r4, #16]
   1f970:	cmp	r1, r2
   1f974:	bls	1fa9c <flatcc_json_printer_union_field@@Base+0x24c>
   1f978:	ldr	r2, [pc, #396]	; 1fb0c <flatcc_json_printer_union_field@@Base+0x2bc>
   1f97c:	ldr	r0, [r2]
   1f980:	str	r0, [r3]
   1f984:	ldrb	r2, [r2, #4]
   1f988:	strb	r2, [r3, #4]
   1f98c:	ldr	r3, [r4, #20]
   1f990:	add	r3, r3, #5
   1f994:	str	r3, [r4, #20]
   1f998:	ldr	r3, [r4, #20]
   1f99c:	mov	r2, #34	; 0x22
   1f9a0:	strb	r2, [r3]
   1f9a4:	ldrb	r2, [r4, #26]
   1f9a8:	clz	r2, r2
   1f9ac:	lsr	r2, r2, #5
   1f9b0:	ldr	r1, [r4, #20]
   1f9b4:	add	r3, r1, r2
   1f9b8:	add	r3, r3, #1
   1f9bc:	str	r3, [r4, #20]
   1f9c0:	mov	r3, #58	; 0x3a
   1f9c4:	strb	r3, [r1, r2]
   1f9c8:	ldr	r3, [r4, #20]
   1f9cc:	mov	r2, #32
   1f9d0:	strb	r2, [r3]
   1f9d4:	ldrb	r3, [r4, #25]
   1f9d8:	ldr	r1, [r4, #20]
   1f9dc:	cmp	r3, #0
   1f9e0:	addne	r1, r1, #1
   1f9e4:	str	r1, [r4, #20]
   1f9e8:	ldrb	r3, [r4, #27]
   1f9ec:	cmp	r3, #0
   1f9f0:	beq	1fab0 <flatcc_json_printer_union_field@@Base+0x260>
   1f9f4:	mov	r0, r7
   1f9f8:	bl	13b20 <main@@Base+0x98>
   1f9fc:	ldr	r3, [r4, #20]
   1fa00:	add	r0, r3, r0
   1fa04:	str	r0, [r4, #20]
   1fa08:	cmp	r7, #0
   1fa0c:	bne	1fac4 <flatcc_json_printer_union_field@@Base+0x274>
   1fa10:	add	sp, sp, #20
   1fa14:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1fa18:	ldr	r3, [r0, #20]
   1fa1c:	add	r2, r3, #1
   1fa20:	str	r2, [r0, #20]
   1fa24:	mov	r2, #10
   1fa28:	strb	r2, [r3]
   1fa2c:	ldrb	r3, [r0, #25]
   1fa30:	ldr	r9, [r0, #32]
   1fa34:	mul	r9, r9, r3
   1fa38:	ldr	r0, [r0, #20]
   1fa3c:	add	r3, r0, r9
   1fa40:	ldr	r2, [r4, #16]
   1fa44:	cmp	r2, r3
   1fa48:	bcc	1fa68 <flatcc_json_printer_union_field@@Base+0x218>
   1fa4c:	mov	r2, r9
   1fa50:	mov	r1, #32
   1fa54:	bl	124e8 <memset@plt>
   1fa58:	ldr	r3, [r4, #20]
   1fa5c:	add	r9, r3, r9
   1fa60:	str	r9, [r4, #20]
   1fa64:	b	1f914 <flatcc_json_printer_union_field@@Base+0xc4>
   1fa68:	mov	r1, r9
   1fa6c:	mov	r0, r4
   1fa70:	bl	14ea4 <main@@Base+0x141c>
   1fa74:	b	1f914 <flatcc_json_printer_union_field@@Base+0xc4>
   1fa78:	ldr	r3, [r0, #44]	; 0x2c
   1fa7c:	mov	r1, #0
   1fa80:	blx	r3
   1fa84:	b	1f914 <flatcc_json_printer_union_field@@Base+0xc4>
   1fa88:	ldr	r2, [sp, #48]	; 0x30
   1fa8c:	mov	r1, r6
   1fa90:	mov	r0, r4
   1fa94:	bl	14dbc <main@@Base+0x1334>
   1fa98:	b	1f964 <flatcc_json_printer_union_field@@Base+0x114>
   1fa9c:	mov	r2, #5
   1faa0:	ldr	r1, [pc, #100]	; 1fb0c <flatcc_json_printer_union_field@@Base+0x2bc>
   1faa4:	mov	r0, r4
   1faa8:	bl	14dbc <main@@Base+0x1334>
   1faac:	b	1f998 <flatcc_json_printer_union_field@@Base+0x148>
   1fab0:	mov	r1, r7
   1fab4:	mov	r0, r4
   1fab8:	ldr	r3, [sp, #52]	; 0x34
   1fabc:	blx	r3
   1fac0:	b	1fa08 <flatcc_json_printer_union_field@@Base+0x1b8>
   1fac4:	ldr	r3, [r4, #20]
   1fac8:	add	r2, r3, #1
   1facc:	str	r2, [r4, #20]
   1fad0:	mov	r2, #44	; 0x2c
   1fad4:	strb	r2, [r3]
   1fad8:	ldr	r2, [sp, #48]	; 0x30
   1fadc:	mov	r1, r6
   1fae0:	mov	r0, r4
   1fae4:	bl	15408 <main@@Base+0x1980>
   1fae8:	ldr	r3, [r5, #12]
   1faec:	str	r3, [sp, #8]
   1faf0:	strb	r7, [sp, #12]
   1faf4:	add	r1, sp, #16
   1faf8:	str	r8, [r1, #-12]!
   1fafc:	mov	r0, r4
   1fb00:	ldr	r3, [sp, #56]	; 0x38
   1fb04:	blx	r3
   1fb08:	b	1fa10 <flatcc_json_printer_union_field@@Base+0x1c0>
   1fb0c:	andeq	r1, r2, r0, ror #28

0001fb10 <flatcc_json_printer_union_table@@Base>:
   1fb10:	ldr	r3, [r1, #4]
   1fb14:	subs	r3, r3, #1
   1fb18:	bne	1fb30 <flatcc_json_printer_union_table@@Base+0x20>
   1fb1c:	ldr	r3, [r0, #36]	; 0x24
   1fb20:	cmp	r3, #0
   1fb24:	moveq	r3, #2
   1fb28:	streq	r3, [r0, #36]	; 0x24
   1fb2c:	bx	lr
   1fb30:	push	{r4, r5, lr}
   1fb34:	sub	sp, sp, #28
   1fb38:	mov	r4, r0
   1fb3c:	ldr	r0, [r1]
   1fb40:	ldr	lr, [r0]
   1fb44:	add	r1, r0, lr
   1fb48:	ldr	ip, [r4, #32]
   1fb4c:	add	ip, ip, #1
   1fb50:	str	ip, [r4, #32]
   1fb54:	ldr	ip, [r4, #20]
   1fb58:	add	r5, ip, #1
   1fb5c:	str	r5, [r4, #20]
   1fb60:	mov	r5, #123	; 0x7b
   1fb64:	strb	r5, [ip]
   1fb68:	mov	ip, #0
   1fb6c:	str	ip, [sp, #20]
   1fb70:	str	r3, [sp, #16]
   1fb74:	str	r1, [sp, #4]
   1fb78:	ldr	r3, [r0, lr]
   1fb7c:	sub	r3, r1, r3
   1fb80:	str	r3, [sp, #8]
   1fb84:	ldrh	r3, [r3]
   1fb88:	str	r3, [sp, #12]
   1fb8c:	add	r1, sp, #4
   1fb90:	mov	r0, r4
   1fb94:	blx	r2
   1fb98:	ldrb	r3, [r4, #25]
   1fb9c:	cmp	r3, #0
   1fba0:	bne	1fbc0 <flatcc_json_printer_union_table@@Base+0xb0>
   1fba4:	ldr	r3, [r4, #20]
   1fba8:	add	r2, r3, #1
   1fbac:	str	r2, [r4, #20]
   1fbb0:	mov	r2, #125	; 0x7d
   1fbb4:	strb	r2, [r3]
   1fbb8:	add	sp, sp, #28
   1fbbc:	pop	{r4, r5, pc}
   1fbc0:	ldr	r3, [r4, #20]
   1fbc4:	add	r2, r3, #1
   1fbc8:	str	r2, [r4, #20]
   1fbcc:	mov	r2, #10
   1fbd0:	strb	r2, [r3]
   1fbd4:	ldr	r5, [r4, #32]
   1fbd8:	sub	r5, r5, #1
   1fbdc:	str	r5, [r4, #32]
   1fbe0:	ldrb	r3, [r4, #25]
   1fbe4:	mul	r5, r5, r3
   1fbe8:	ldr	r0, [r4, #20]
   1fbec:	add	r3, r0, r5
   1fbf0:	ldr	r2, [r4, #16]
   1fbf4:	cmp	r2, r3
   1fbf8:	bcc	1fc18 <flatcc_json_printer_union_table@@Base+0x108>
   1fbfc:	mov	r2, r5
   1fc00:	mov	r1, #32
   1fc04:	bl	124e8 <memset@plt>
   1fc08:	ldr	r3, [r4, #20]
   1fc0c:	add	r5, r3, r5
   1fc10:	str	r5, [r4, #20]
   1fc14:	b	1fba4 <flatcc_json_printer_union_table@@Base+0x94>
   1fc18:	mov	r1, r5
   1fc1c:	mov	r0, r4
   1fc20:	bl	14ea4 <main@@Base+0x141c>
   1fc24:	b	1fba4 <flatcc_json_printer_union_table@@Base+0x94>

0001fc28 <flatcc_json_printer_union_struct@@Base>:
   1fc28:	push	{r4, r5, r6, lr}
   1fc2c:	mov	r4, r0
   1fc30:	ldr	r3, [r0, #32]
   1fc34:	add	r3, r3, #1
   1fc38:	str	r3, [r0, #32]
   1fc3c:	ldr	r3, [r0, #20]
   1fc40:	add	ip, r3, #1
   1fc44:	str	ip, [r0, #20]
   1fc48:	mov	ip, #123	; 0x7b
   1fc4c:	strb	ip, [r3]
   1fc50:	ldr	r3, [r1]
   1fc54:	ldr	r1, [r3]
   1fc58:	add	r1, r3, r1
   1fc5c:	blx	r2
   1fc60:	ldrb	r3, [r4, #25]
   1fc64:	cmp	r3, #0
   1fc68:	bne	1fc84 <flatcc_json_printer_union_struct@@Base+0x5c>
   1fc6c:	ldr	r3, [r4, #20]
   1fc70:	add	r2, r3, #1
   1fc74:	str	r2, [r4, #20]
   1fc78:	mov	r2, #125	; 0x7d
   1fc7c:	strb	r2, [r3]
   1fc80:	pop	{r4, r5, r6, pc}
   1fc84:	ldr	r3, [r4, #20]
   1fc88:	add	r2, r3, #1
   1fc8c:	str	r2, [r4, #20]
   1fc90:	mov	r2, #10
   1fc94:	strb	r2, [r3]
   1fc98:	ldr	r5, [r4, #32]
   1fc9c:	sub	r5, r5, #1
   1fca0:	str	r5, [r4, #32]
   1fca4:	ldrb	r3, [r4, #25]
   1fca8:	mul	r5, r5, r3
   1fcac:	ldr	r0, [r4, #20]
   1fcb0:	add	r3, r0, r5
   1fcb4:	ldr	r2, [r4, #16]
   1fcb8:	cmp	r2, r3
   1fcbc:	bcc	1fcdc <flatcc_json_printer_union_struct@@Base+0xb4>
   1fcc0:	mov	r2, r5
   1fcc4:	mov	r1, #32
   1fcc8:	bl	124e8 <memset@plt>
   1fccc:	ldr	r3, [r4, #20]
   1fcd0:	add	r5, r3, r5
   1fcd4:	str	r5, [r4, #20]
   1fcd8:	b	1fc6c <flatcc_json_printer_union_struct@@Base+0x44>
   1fcdc:	mov	r1, r5
   1fce0:	mov	r0, r4
   1fce4:	bl	14ea4 <main@@Base+0x141c>
   1fce8:	b	1fc6c <flatcc_json_printer_union_struct@@Base+0x44>

0001fcec <flatcc_json_printer_union_string@@Base>:
   1fcec:	push	{r4, lr}
   1fcf0:	ldr	r3, [r1]
   1fcf4:	ldr	r2, [r3]
   1fcf8:	add	r1, r3, r2
   1fcfc:	ldr	r2, [r3, r2]
   1fd00:	add	r1, r1, #4
   1fd04:	bl	151b0 <main@@Base+0x1728>
   1fd08:	pop	{r4, pc}

0001fd0c <flatcc_json_printer_embedded_struct_field@@Base>:
   1fd0c:	push	{r4, r5, r6, r7, r8, lr}
   1fd10:	mov	r4, r0
   1fd14:	mov	r6, r2
   1fd18:	mov	r5, r3
   1fd1c:	ldr	r7, [sp, #28]
   1fd20:	cmp	r1, #0
   1fd24:	ldrne	r3, [r0, #20]
   1fd28:	addne	r2, r3, #1
   1fd2c:	strne	r2, [r0, #20]
   1fd30:	movne	r2, #44	; 0x2c
   1fd34:	strbne	r2, [r3]
   1fd38:	ldrb	r3, [r0, #25]
   1fd3c:	cmp	r3, #0
   1fd40:	bne	1fd98 <flatcc_json_printer_embedded_struct_field@@Base+0x8c>
   1fd44:	ldr	r2, [r0, #20]
   1fd48:	ldr	r3, [r0, #16]
   1fd4c:	cmp	r2, r3
   1fd50:	bcs	1fdf8 <flatcc_json_printer_embedded_struct_field@@Base+0xec>
   1fd54:	ldr	r3, [r4, #20]
   1fd58:	mov	r2, #34	; 0x22
   1fd5c:	strb	r2, [r3]
   1fd60:	ldrb	r3, [r4, #26]
   1fd64:	ldr	r0, [r4, #20]
   1fd68:	cmp	r3, #0
   1fd6c:	addeq	r0, r0, #1
   1fd70:	str	r0, [r4, #20]
   1fd74:	add	r3, r0, r7
   1fd78:	ldr	r2, [r4, #16]
   1fd7c:	cmp	r2, r3
   1fd80:	bhi	1fe08 <flatcc_json_printer_embedded_struct_field@@Base+0xfc>
   1fd84:	mov	r2, r7
   1fd88:	ldr	r1, [sp, #24]
   1fd8c:	mov	r0, r4
   1fd90:	bl	14dbc <main@@Base+0x1334>
   1fd94:	b	1fe20 <flatcc_json_printer_embedded_struct_field@@Base+0x114>
   1fd98:	ldr	r3, [r0, #20]
   1fd9c:	add	r2, r3, #1
   1fda0:	str	r2, [r0, #20]
   1fda4:	mov	r2, #10
   1fda8:	strb	r2, [r3]
   1fdac:	ldrb	r3, [r0, #25]
   1fdb0:	ldr	r8, [r0, #32]
   1fdb4:	mul	r8, r8, r3
   1fdb8:	ldr	r0, [r0, #20]
   1fdbc:	add	r3, r0, r8
   1fdc0:	ldr	r2, [r4, #16]
   1fdc4:	cmp	r2, r3
   1fdc8:	bcc	1fde8 <flatcc_json_printer_embedded_struct_field@@Base+0xdc>
   1fdcc:	mov	r2, r8
   1fdd0:	mov	r1, #32
   1fdd4:	bl	124e8 <memset@plt>
   1fdd8:	ldr	r3, [r4, #20]
   1fddc:	add	r8, r3, r8
   1fde0:	str	r8, [r4, #20]
   1fde4:	b	1fd54 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
   1fde8:	mov	r1, r8
   1fdec:	mov	r0, r4
   1fdf0:	bl	14ea4 <main@@Base+0x141c>
   1fdf4:	b	1fd54 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
   1fdf8:	ldr	r3, [r0, #44]	; 0x2c
   1fdfc:	mov	r1, #0
   1fe00:	blx	r3
   1fe04:	b	1fd54 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
   1fe08:	mov	r2, r7
   1fe0c:	ldr	r1, [sp, #24]
   1fe10:	bl	1244c <memcpy@plt>
   1fe14:	ldr	r3, [r4, #20]
   1fe18:	add	r7, r3, r7
   1fe1c:	str	r7, [r4, #20]
   1fe20:	ldr	r3, [r4, #20]
   1fe24:	mov	r2, #34	; 0x22
   1fe28:	strb	r2, [r3]
   1fe2c:	ldrb	r3, [r4, #26]
   1fe30:	clz	r3, r3
   1fe34:	lsr	r3, r3, #5
   1fe38:	ldr	r1, [r4, #20]
   1fe3c:	add	r2, r1, r3
   1fe40:	add	r2, r2, #1
   1fe44:	str	r2, [r4, #20]
   1fe48:	mov	r2, #58	; 0x3a
   1fe4c:	strb	r2, [r1, r3]
   1fe50:	ldr	r3, [r4, #20]
   1fe54:	mov	r2, #32
   1fe58:	strb	r2, [r3]
   1fe5c:	ldrb	r3, [r4, #25]
   1fe60:	adds	r3, r3, #0
   1fe64:	movne	r3, #1
   1fe68:	ldr	r0, [r4, #20]
   1fe6c:	add	r2, r0, r3
   1fe70:	ldr	r1, [r4, #32]
   1fe74:	add	r1, r1, #1
   1fe78:	str	r1, [r4, #32]
   1fe7c:	add	r2, r2, #1
   1fe80:	str	r2, [r4, #20]
   1fe84:	mov	r2, #123	; 0x7b
   1fe88:	strb	r2, [r0, r3]
   1fe8c:	add	r1, r6, r5
   1fe90:	mov	r0, r4
   1fe94:	ldr	r3, [sp, #32]
   1fe98:	blx	r3
   1fe9c:	ldrb	r3, [r4, #25]
   1fea0:	cmp	r3, #0
   1fea4:	bne	1fec0 <flatcc_json_printer_embedded_struct_field@@Base+0x1b4>
   1fea8:	ldr	r3, [r4, #20]
   1feac:	add	r2, r3, #1
   1feb0:	str	r2, [r4, #20]
   1feb4:	mov	r2, #125	; 0x7d
   1feb8:	strb	r2, [r3]
   1febc:	pop	{r4, r5, r6, r7, r8, pc}
   1fec0:	ldr	r3, [r4, #20]
   1fec4:	add	r2, r3, #1
   1fec8:	str	r2, [r4, #20]
   1fecc:	mov	r2, #10
   1fed0:	strb	r2, [r3]
   1fed4:	ldr	r5, [r4, #32]
   1fed8:	sub	r5, r5, #1
   1fedc:	str	r5, [r4, #32]
   1fee0:	ldrb	r3, [r4, #25]
   1fee4:	mul	r5, r5, r3
   1fee8:	ldr	r0, [r4, #20]
   1feec:	add	r3, r0, r5
   1fef0:	ldr	r2, [r4, #16]
   1fef4:	cmp	r2, r3
   1fef8:	bcc	1ff18 <flatcc_json_printer_embedded_struct_field@@Base+0x20c>
   1fefc:	mov	r2, r5
   1ff00:	mov	r1, #32
   1ff04:	bl	124e8 <memset@plt>
   1ff08:	ldr	r3, [r4, #20]
   1ff0c:	add	r5, r3, r5
   1ff10:	str	r5, [r4, #20]
   1ff14:	b	1fea8 <flatcc_json_printer_embedded_struct_field@@Base+0x19c>
   1ff18:	mov	r1, r5
   1ff1c:	mov	r0, r4
   1ff20:	bl	14ea4 <main@@Base+0x141c>
   1ff24:	b	1fea8 <flatcc_json_printer_embedded_struct_field@@Base+0x19c>

0001ff28 <flatcc_json_printer_struct_field@@Base>:
   1ff28:	push	{r4, r5, r6, r7, r8, lr}
   1ff2c:	ldr	r6, [sp, #24]
   1ff30:	add	r2, r2, #2
   1ff34:	lsl	r2, r2, #1
   1ff38:	ldr	ip, [r1, #8]
   1ff3c:	cmp	r2, ip
   1ff40:	popge	{r4, r5, r6, r7, r8, pc}
   1ff44:	ldr	ip, [r1, #4]
   1ff48:	ldrh	r2, [ip, r2]
   1ff4c:	cmp	r2, #0
   1ff50:	popeq	{r4, r5, r6, r7, r8, pc}
   1ff54:	ldr	r5, [r1]
   1ff58:	adds	r5, r5, r2
   1ff5c:	popeq	{r4, r5, r6, r7, r8, pc}
   1ff60:	ldr	r2, [r1, #16]
   1ff64:	add	ip, r2, #1
   1ff68:	str	ip, [r1, #16]
   1ff6c:	cmp	r2, #0
   1ff70:	ldrne	r2, [r0, #20]
   1ff74:	addne	r1, r2, #1
   1ff78:	strne	r1, [r0, #20]
   1ff7c:	movne	r1, #44	; 0x2c
   1ff80:	strbne	r1, [r2]
   1ff84:	mov	r7, r3
   1ff88:	mov	r4, r0
   1ff8c:	ldrb	r3, [r0, #25]
   1ff90:	cmp	r3, #0
   1ff94:	bne	1ffec <flatcc_json_printer_struct_field@@Base+0xc4>
   1ff98:	ldr	r2, [r0, #20]
   1ff9c:	ldr	r3, [r0, #16]
   1ffa0:	cmp	r2, r3
   1ffa4:	bcs	2004c <flatcc_json_printer_struct_field@@Base+0x124>
   1ffa8:	ldr	r3, [r4, #20]
   1ffac:	mov	r2, #34	; 0x22
   1ffb0:	strb	r2, [r3]
   1ffb4:	ldrb	r3, [r4, #26]
   1ffb8:	ldr	r0, [r4, #20]
   1ffbc:	cmp	r3, #0
   1ffc0:	addeq	r0, r0, #1
   1ffc4:	str	r0, [r4, #20]
   1ffc8:	add	r3, r0, r6
   1ffcc:	ldr	r2, [r4, #16]
   1ffd0:	cmp	r2, r3
   1ffd4:	bhi	2005c <flatcc_json_printer_struct_field@@Base+0x134>
   1ffd8:	mov	r2, r6
   1ffdc:	mov	r1, r7
   1ffe0:	mov	r0, r4
   1ffe4:	bl	14dbc <main@@Base+0x1334>
   1ffe8:	b	20074 <flatcc_json_printer_struct_field@@Base+0x14c>
   1ffec:	ldr	r3, [r0, #20]
   1fff0:	add	r2, r3, #1
   1fff4:	str	r2, [r0, #20]
   1fff8:	mov	r2, #10
   1fffc:	strb	r2, [r3]
   20000:	ldrb	r3, [r0, #25]
   20004:	ldr	r8, [r0, #32]
   20008:	mul	r8, r8, r3
   2000c:	ldr	r0, [r0, #20]
   20010:	add	r3, r0, r8
   20014:	ldr	r2, [r4, #16]
   20018:	cmp	r2, r3
   2001c:	bcc	2003c <flatcc_json_printer_struct_field@@Base+0x114>
   20020:	mov	r2, r8
   20024:	mov	r1, #32
   20028:	bl	124e8 <memset@plt>
   2002c:	ldr	r3, [r4, #20]
   20030:	add	r8, r3, r8
   20034:	str	r8, [r4, #20]
   20038:	b	1ffa8 <flatcc_json_printer_struct_field@@Base+0x80>
   2003c:	mov	r1, r8
   20040:	mov	r0, r4
   20044:	bl	14ea4 <main@@Base+0x141c>
   20048:	b	1ffa8 <flatcc_json_printer_struct_field@@Base+0x80>
   2004c:	ldr	r3, [r0, #44]	; 0x2c
   20050:	mov	r1, #0
   20054:	blx	r3
   20058:	b	1ffa8 <flatcc_json_printer_struct_field@@Base+0x80>
   2005c:	mov	r2, r6
   20060:	mov	r1, r7
   20064:	bl	1244c <memcpy@plt>
   20068:	ldr	r3, [r4, #20]
   2006c:	add	r6, r3, r6
   20070:	str	r6, [r4, #20]
   20074:	ldr	r3, [r4, #20]
   20078:	mov	r2, #34	; 0x22
   2007c:	strb	r2, [r3]
   20080:	ldrb	r3, [r4, #26]
   20084:	clz	r3, r3
   20088:	lsr	r3, r3, #5
   2008c:	ldr	r1, [r4, #20]
   20090:	add	r2, r1, r3
   20094:	add	r2, r2, #1
   20098:	str	r2, [r4, #20]
   2009c:	mov	r2, #58	; 0x3a
   200a0:	strb	r2, [r1, r3]
   200a4:	ldr	r3, [r4, #20]
   200a8:	mov	r2, #32
   200ac:	strb	r2, [r3]
   200b0:	ldrb	r3, [r4, #25]
   200b4:	adds	r3, r3, #0
   200b8:	movne	r3, #1
   200bc:	ldr	r0, [r4, #20]
   200c0:	add	r2, r0, r3
   200c4:	ldr	r1, [r4, #32]
   200c8:	add	r1, r1, #1
   200cc:	str	r1, [r4, #32]
   200d0:	add	r2, r2, #1
   200d4:	str	r2, [r4, #20]
   200d8:	mov	r2, #123	; 0x7b
   200dc:	strb	r2, [r0, r3]
   200e0:	mov	r1, r5
   200e4:	mov	r0, r4
   200e8:	ldr	r3, [sp, #28]
   200ec:	blx	r3
   200f0:	ldrb	r3, [r4, #25]
   200f4:	cmp	r3, #0
   200f8:	bne	20114 <flatcc_json_printer_struct_field@@Base+0x1ec>
   200fc:	ldr	r3, [r4, #20]
   20100:	add	r2, r3, #1
   20104:	str	r2, [r4, #20]
   20108:	mov	r2, #125	; 0x7d
   2010c:	strb	r2, [r3]
   20110:	pop	{r4, r5, r6, r7, r8, pc}
   20114:	ldr	r3, [r4, #20]
   20118:	add	r2, r3, #1
   2011c:	str	r2, [r4, #20]
   20120:	mov	r2, #10
   20124:	strb	r2, [r3]
   20128:	ldr	r5, [r4, #32]
   2012c:	sub	r5, r5, #1
   20130:	str	r5, [r4, #32]
   20134:	ldrb	r3, [r4, #25]
   20138:	mul	r5, r5, r3
   2013c:	ldr	r0, [r4, #20]
   20140:	add	r3, r0, r5
   20144:	ldr	r2, [r4, #16]
   20148:	cmp	r2, r3
   2014c:	bcc	2016c <flatcc_json_printer_struct_field@@Base+0x244>
   20150:	mov	r2, r5
   20154:	mov	r1, #32
   20158:	bl	124e8 <memset@plt>
   2015c:	ldr	r3, [r4, #20]
   20160:	add	r5, r3, r5
   20164:	str	r5, [r4, #20]
   20168:	b	200fc <flatcc_json_printer_struct_field@@Base+0x1d4>
   2016c:	mov	r1, r5
   20170:	mov	r0, r4
   20174:	bl	14ea4 <main@@Base+0x141c>
   20178:	b	200fc <flatcc_json_printer_struct_field@@Base+0x1d4>

0002017c <flatcc_json_printer_struct_as_root@@Base>:
   2017c:	push	{r4, r5, r6, lr}
   20180:	mov	r4, r0
   20184:	mov	r5, r1
   20188:	bl	14fa4 <main@@Base+0x151c>
   2018c:	cmp	r0, #0
   20190:	beq	202ac <flatcc_json_printer_struct_as_root@@Base+0x130>
   20194:	ldr	r3, [r4, #32]
   20198:	add	r3, r3, #1
   2019c:	str	r3, [r4, #32]
   201a0:	ldr	r3, [r4, #20]
   201a4:	add	r2, r3, #1
   201a8:	str	r2, [r4, #20]
   201ac:	mov	r2, #123	; 0x7b
   201b0:	strb	r2, [r3]
   201b4:	ldr	r1, [r5]
   201b8:	add	r1, r5, r1
   201bc:	mov	r0, r4
   201c0:	ldr	r3, [sp, #16]
   201c4:	blx	r3
   201c8:	ldrb	r3, [r4, #25]
   201cc:	cmp	r3, #0
   201d0:	bne	20244 <flatcc_json_printer_struct_as_root@@Base+0xc8>
   201d4:	ldr	r3, [r4, #20]
   201d8:	add	r2, r3, #1
   201dc:	str	r2, [r4, #20]
   201e0:	mov	r2, #125	; 0x7d
   201e4:	strb	r2, [r3]
   201e8:	ldrb	r3, [r4, #25]
   201ec:	cmp	r3, #0
   201f0:	beq	20210 <flatcc_json_printer_struct_as_root@@Base+0x94>
   201f4:	ldr	r3, [r4, #32]
   201f8:	cmp	r3, #0
   201fc:	ldreq	r3, [r4, #20]
   20200:	addeq	r2, r3, #1
   20204:	streq	r2, [r4, #20]
   20208:	moveq	r2, #10
   2020c:	strbeq	r2, [r3]
   20210:	ldr	r3, [r4, #44]	; 0x2c
   20214:	mov	r1, #1
   20218:	mov	r0, r4
   2021c:	blx	r3
   20220:	ldr	r3, [r4, #36]	; 0x24
   20224:	cmp	r3, #0
   20228:	bne	202b4 <flatcc_json_printer_struct_as_root@@Base+0x138>
   2022c:	ldr	r0, [r4, #20]
   20230:	ldr	r3, [r4]
   20234:	sub	r0, r0, r3
   20238:	ldr	r3, [r4, #12]
   2023c:	add	r0, r0, r3
   20240:	pop	{r4, r5, r6, pc}
   20244:	ldr	r3, [r4, #20]
   20248:	add	r2, r3, #1
   2024c:	str	r2, [r4, #20]
   20250:	mov	r2, #10
   20254:	strb	r2, [r3]
   20258:	ldr	r5, [r4, #32]
   2025c:	sub	r5, r5, #1
   20260:	str	r5, [r4, #32]
   20264:	ldrb	r3, [r4, #25]
   20268:	mul	r5, r5, r3
   2026c:	ldr	r0, [r4, #20]
   20270:	add	r3, r0, r5
   20274:	ldr	r2, [r4, #16]
   20278:	cmp	r2, r3
   2027c:	bcc	2029c <flatcc_json_printer_struct_as_root@@Base+0x120>
   20280:	mov	r2, r5
   20284:	mov	r1, #32
   20288:	bl	124e8 <memset@plt>
   2028c:	ldr	r3, [r4, #20]
   20290:	add	r5, r3, r5
   20294:	str	r5, [r4, #20]
   20298:	b	201d4 <flatcc_json_printer_struct_as_root@@Base+0x58>
   2029c:	mov	r1, r5
   202a0:	mov	r0, r4
   202a4:	bl	14ea4 <main@@Base+0x141c>
   202a8:	b	201d4 <flatcc_json_printer_struct_as_root@@Base+0x58>
   202ac:	mvn	r0, #0
   202b0:	pop	{r4, r5, r6, pc}
   202b4:	mvn	r0, #0
   202b8:	pop	{r4, r5, r6, pc}

000202bc <flatcc_json_printer_table_as_root@@Base>:
   202bc:	push	{r4, r5, lr}
   202c0:	sub	sp, sp, #28
   202c4:	mov	r4, r0
   202c8:	mov	r5, r1
   202cc:	bl	14fa4 <main@@Base+0x151c>
   202d0:	cmp	r0, #0
   202d4:	beq	20420 <flatcc_json_printer_table_as_root@@Base+0x164>
   202d8:	ldr	r1, [r5]
   202dc:	add	r3, r5, r1
   202e0:	ldr	r2, [r4, #32]
   202e4:	add	r2, r2, #1
   202e8:	str	r2, [r4, #32]
   202ec:	ldr	r2, [r4, #20]
   202f0:	add	r0, r2, #1
   202f4:	str	r0, [r4, #20]
   202f8:	mov	r0, #123	; 0x7b
   202fc:	strb	r0, [r2]
   20300:	mov	r2, #0
   20304:	str	r2, [sp, #20]
   20308:	mov	r2, #99	; 0x63
   2030c:	str	r2, [sp, #16]
   20310:	str	r3, [sp, #4]
   20314:	ldr	r2, [r5, r1]
   20318:	sub	r3, r3, r2
   2031c:	str	r3, [sp, #8]
   20320:	ldrh	r3, [r3]
   20324:	str	r3, [sp, #12]
   20328:	add	r1, sp, #4
   2032c:	mov	r0, r4
   20330:	ldr	r3, [sp, #40]	; 0x28
   20334:	blx	r3
   20338:	ldrb	r3, [r4, #25]
   2033c:	cmp	r3, #0
   20340:	bne	203b8 <flatcc_json_printer_table_as_root@@Base+0xfc>
   20344:	ldr	r3, [r4, #20]
   20348:	add	r2, r3, #1
   2034c:	str	r2, [r4, #20]
   20350:	mov	r2, #125	; 0x7d
   20354:	strb	r2, [r3]
   20358:	ldrb	r3, [r4, #25]
   2035c:	cmp	r3, #0
   20360:	beq	20380 <flatcc_json_printer_table_as_root@@Base+0xc4>
   20364:	ldr	r3, [r4, #32]
   20368:	cmp	r3, #0
   2036c:	ldreq	r3, [r4, #20]
   20370:	addeq	r2, r3, #1
   20374:	streq	r2, [r4, #20]
   20378:	moveq	r2, #10
   2037c:	strbeq	r2, [r3]
   20380:	ldr	r3, [r4, #44]	; 0x2c
   20384:	mov	r1, #1
   20388:	mov	r0, r4
   2038c:	blx	r3
   20390:	ldr	r3, [r4, #36]	; 0x24
   20394:	cmp	r3, #0
   20398:	bne	20428 <flatcc_json_printer_table_as_root@@Base+0x16c>
   2039c:	ldr	r0, [r4, #20]
   203a0:	ldr	r3, [r4]
   203a4:	sub	r0, r0, r3
   203a8:	ldr	r3, [r4, #12]
   203ac:	add	r0, r0, r3
   203b0:	add	sp, sp, #28
   203b4:	pop	{r4, r5, pc}
   203b8:	ldr	r3, [r4, #20]
   203bc:	add	r2, r3, #1
   203c0:	str	r2, [r4, #20]
   203c4:	mov	r2, #10
   203c8:	strb	r2, [r3]
   203cc:	ldr	r5, [r4, #32]
   203d0:	sub	r5, r5, #1
   203d4:	str	r5, [r4, #32]
   203d8:	ldrb	r3, [r4, #25]
   203dc:	mul	r5, r5, r3
   203e0:	ldr	r0, [r4, #20]
   203e4:	add	r3, r0, r5
   203e8:	ldr	r2, [r4, #16]
   203ec:	cmp	r2, r3
   203f0:	bcc	20410 <flatcc_json_printer_table_as_root@@Base+0x154>
   203f4:	mov	r2, r5
   203f8:	mov	r1, #32
   203fc:	bl	124e8 <memset@plt>
   20400:	ldr	r3, [r4, #20]
   20404:	add	r5, r3, r5
   20408:	str	r5, [r4, #20]
   2040c:	b	20344 <flatcc_json_printer_table_as_root@@Base+0x88>
   20410:	mov	r1, r5
   20414:	mov	r0, r4
   20418:	bl	14ea4 <main@@Base+0x141c>
   2041c:	b	20344 <flatcc_json_printer_table_as_root@@Base+0x88>
   20420:	mvn	r0, #0
   20424:	b	203b0 <flatcc_json_printer_table_as_root@@Base+0xf4>
   20428:	mvn	r0, #0
   2042c:	b	203b0 <flatcc_json_printer_table_as_root@@Base+0xf4>

00020430 <flatcc_json_printer_struct_as_nested_root@@Base>:
   20430:	add	r2, r2, #2
   20434:	lsl	r2, r2, #1
   20438:	ldr	ip, [r1, #8]
   2043c:	cmp	r2, ip
   20440:	bxge	lr
   20444:	ldr	ip, [r1, #4]
   20448:	ldrh	r2, [ip, r2]
   2044c:	cmp	r2, #0
   20450:	bxeq	lr
   20454:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20458:	ldr	ip, [r1]
   2045c:	adds	r8, ip, r2
   20460:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20464:	mov	r6, r3
   20468:	mov	r5, r1
   2046c:	mov	r4, r0
   20470:	ldr	r7, [ip, r2]
   20474:	add	r9, r8, r7
   20478:	ldr	r3, [sp, #36]	; 0x24
   2047c:	ldr	r2, [r8, r7]
   20480:	mov	r1, r9
   20484:	bl	14fa4 <main@@Base+0x151c>
   20488:	cmp	r0, #0
   2048c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20490:	ldr	r3, [r5, #16]
   20494:	add	r2, r3, #1
   20498:	str	r2, [r5, #16]
   2049c:	cmp	r3, #0
   204a0:	ldrne	r3, [r4, #20]
   204a4:	addne	r2, r3, #1
   204a8:	strne	r2, [r4, #20]
   204ac:	movne	r2, #44	; 0x2c
   204b0:	strbne	r2, [r3]
   204b4:	ldr	r2, [sp, #32]
   204b8:	mov	r1, r6
   204bc:	mov	r0, r4
   204c0:	bl	15408 <main@@Base+0x1980>
   204c4:	ldr	r3, [r4, #32]
   204c8:	add	r3, r3, #1
   204cc:	str	r3, [r4, #32]
   204d0:	ldr	r3, [r4, #20]
   204d4:	add	r2, r3, #1
   204d8:	str	r2, [r4, #20]
   204dc:	mov	r2, #123	; 0x7b
   204e0:	strb	r2, [r3]
   204e4:	ldr	r1, [r8, r7]
   204e8:	add	r1, r9, r1
   204ec:	mov	r0, r4
   204f0:	ldr	r3, [sp, #40]	; 0x28
   204f4:	blx	r3
   204f8:	ldrb	r3, [r4, #25]
   204fc:	cmp	r3, #0
   20500:	bne	2051c <flatcc_json_printer_struct_as_nested_root@@Base+0xec>
   20504:	ldr	r3, [r4, #20]
   20508:	add	r2, r3, #1
   2050c:	str	r2, [r4, #20]
   20510:	mov	r2, #125	; 0x7d
   20514:	strb	r2, [r3]
   20518:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2051c:	ldr	r3, [r4, #20]
   20520:	add	r2, r3, #1
   20524:	str	r2, [r4, #20]
   20528:	mov	r2, #10
   2052c:	strb	r2, [r3]
   20530:	ldr	r5, [r4, #32]
   20534:	sub	r5, r5, #1
   20538:	str	r5, [r4, #32]
   2053c:	ldrb	r3, [r4, #25]
   20540:	mul	r5, r5, r3
   20544:	ldr	r0, [r4, #20]
   20548:	add	r3, r0, r5
   2054c:	ldr	r2, [r4, #16]
   20550:	cmp	r2, r3
   20554:	bcc	20574 <flatcc_json_printer_struct_as_nested_root@@Base+0x144>
   20558:	mov	r2, r5
   2055c:	mov	r1, #32
   20560:	bl	124e8 <memset@plt>
   20564:	ldr	r3, [r4, #20]
   20568:	add	r5, r3, r5
   2056c:	str	r5, [r4, #20]
   20570:	b	20504 <flatcc_json_printer_struct_as_nested_root@@Base+0xd4>
   20574:	mov	r1, r5
   20578:	mov	r0, r4
   2057c:	bl	14ea4 <main@@Base+0x141c>
   20580:	b	20504 <flatcc_json_printer_struct_as_nested_root@@Base+0xd4>

00020584 <flatcc_json_printer_table_as_nested_root@@Base>:
   20584:	add	r2, r2, #2
   20588:	lsl	r2, r2, #1
   2058c:	ldr	ip, [r1, #8]
   20590:	cmp	r2, ip
   20594:	bxge	lr
   20598:	ldr	ip, [r1, #4]
   2059c:	ldrh	r2, [ip, r2]
   205a0:	cmp	r2, #0
   205a4:	bxeq	lr
   205a8:	push	{r4, r5, r6, r7, r8, lr}
   205ac:	sub	sp, sp, #24
   205b0:	ldr	lr, [r1]
   205b4:	adds	ip, lr, r2
   205b8:	beq	2063c <flatcc_json_printer_table_as_nested_root@@Base+0xb8>
   205bc:	mov	r6, r3
   205c0:	mov	r5, r1
   205c4:	mov	r4, r0
   205c8:	ldr	r2, [lr, r2]
   205cc:	add	r8, ip, r2
   205d0:	add	r7, r8, #4
   205d4:	ldr	r3, [sp, #52]	; 0x34
   205d8:	ldr	r2, [ip, r2]
   205dc:	mov	r1, r7
   205e0:	bl	14fa4 <main@@Base+0x151c>
   205e4:	cmp	r0, #0
   205e8:	beq	2063c <flatcc_json_printer_table_as_nested_root@@Base+0xb8>
   205ec:	ldr	r3, [r5, #16]
   205f0:	add	r2, r3, #1
   205f4:	str	r2, [r5, #16]
   205f8:	cmp	r3, #0
   205fc:	ldrne	r3, [r4, #20]
   20600:	addne	r2, r3, #1
   20604:	strne	r2, [r4, #20]
   20608:	movne	r2, #44	; 0x2c
   2060c:	strbne	r2, [r3]
   20610:	ldr	r2, [sp, #48]	; 0x30
   20614:	mov	r1, r6
   20618:	mov	r0, r4
   2061c:	bl	15408 <main@@Base+0x1980>
   20620:	ldr	r3, [r5, #12]
   20624:	subs	r3, r3, #1
   20628:	bne	20644 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
   2062c:	ldr	r3, [r4, #36]	; 0x24
   20630:	cmp	r3, #0
   20634:	moveq	r3, #2
   20638:	streq	r3, [r4, #36]	; 0x24
   2063c:	add	sp, sp, #24
   20640:	pop	{r4, r5, r6, r7, r8, pc}
   20644:	ldr	r0, [r8, #4]
   20648:	add	r2, r7, r0
   2064c:	ldr	r1, [r4, #32]
   20650:	add	r1, r1, #1
   20654:	str	r1, [r4, #32]
   20658:	ldr	r1, [r4, #20]
   2065c:	add	ip, r1, #1
   20660:	str	ip, [r4, #20]
   20664:	mov	ip, #123	; 0x7b
   20668:	strb	ip, [r1]
   2066c:	mov	r1, #0
   20670:	str	r1, [sp, #20]
   20674:	str	r3, [sp, #16]
   20678:	str	r2, [sp, #4]
   2067c:	ldr	r3, [r7, r0]
   20680:	sub	r3, r2, r3
   20684:	str	r3, [sp, #8]
   20688:	ldrh	r3, [r3]
   2068c:	str	r3, [sp, #12]
   20690:	add	r1, sp, #4
   20694:	mov	r0, r4
   20698:	ldr	r3, [sp, #56]	; 0x38
   2069c:	blx	r3
   206a0:	ldrb	r3, [r4, #25]
   206a4:	cmp	r3, #0
   206a8:	bne	206c4 <flatcc_json_printer_table_as_nested_root@@Base+0x140>
   206ac:	ldr	r3, [r4, #20]
   206b0:	add	r2, r3, #1
   206b4:	str	r2, [r4, #20]
   206b8:	mov	r2, #125	; 0x7d
   206bc:	strb	r2, [r3]
   206c0:	b	2063c <flatcc_json_printer_table_as_nested_root@@Base+0xb8>
   206c4:	ldr	r3, [r4, #20]
   206c8:	add	r2, r3, #1
   206cc:	str	r2, [r4, #20]
   206d0:	mov	r2, #10
   206d4:	strb	r2, [r3]
   206d8:	ldr	r3, [r4, #32]
   206dc:	sub	r3, r3, #1
   206e0:	str	r3, [r4, #32]
   206e4:	mov	r0, r4
   206e8:	bl	14f50 <main@@Base+0x14c8>
   206ec:	b	206ac <flatcc_json_printer_table_as_nested_root@@Base+0x128>

000206f0 <flatcc_json_printer_init@@Base>:
   206f0:	push	{r4, r5, r6, lr}
   206f4:	mov	r4, r0
   206f8:	mov	r5, r1
   206fc:	mov	r2, #48	; 0x30
   20700:	mov	r1, #0
   20704:	bl	124e8 <memset@plt>
   20708:	cmp	r5, #0
   2070c:	ldreq	r3, [pc, #84]	; 20768 <flatcc_json_printer_init@@Base+0x78>
   20710:	ldreq	r5, [r3]
   20714:	str	r5, [r4, #40]	; 0x28
   20718:	ldr	r3, [pc, #76]	; 2076c <flatcc_json_printer_init@@Base+0x7c>
   2071c:	str	r3, [r4, #44]	; 0x2c
   20720:	ldr	r0, [pc, #72]	; 20770 <flatcc_json_printer_init@@Base+0x80>
   20724:	bl	124ac <malloc@plt>
   20728:	str	r0, [r4]
   2072c:	cmp	r0, #0
   20730:	beq	20760 <flatcc_json_printer_init@@Base+0x70>
   20734:	mov	r3, #1
   20738:	strb	r3, [r4, #24]
   2073c:	ldr	r3, [pc, #44]	; 20770 <flatcc_json_printer_init@@Base+0x80>
   20740:	str	r3, [r4, #4]
   20744:	mov	r3, #16384	; 0x4000
   20748:	str	r3, [r4, #8]
   2074c:	str	r0, [r4, #20]
   20750:	add	r0, r0, r3
   20754:	str	r0, [r4, #16]
   20758:	mov	r0, #0
   2075c:	pop	{r4, r5, r6, pc}
   20760:	mvn	r0, #0
   20764:	pop	{r4, r5, r6, pc}
   20768:	andeq	r2, r3, ip, lsl #1
   2076c:	andeq	r5, r1, r0, rrx
   20770:	andeq	r4, r0, r0, asr #32

00020774 <flatcc_json_printer_init_buffer@@Base>:
   20774:	push	{r4, r5, r6, lr}
   20778:	cmp	r2, #63	; 0x3f
   2077c:	bls	207c4 <flatcc_json_printer_init_buffer@@Base+0x50>
   20780:	mov	r4, r0
   20784:	mov	r6, r1
   20788:	mov	r5, r2
   2078c:	mov	r2, #48	; 0x30
   20790:	mov	r1, #0
   20794:	bl	124e8 <memset@plt>
   20798:	str	r6, [r4]
   2079c:	str	r5, [r4, #4]
   207a0:	sub	r5, r5, #64	; 0x40
   207a4:	str	r5, [r4, #8]
   207a8:	str	r6, [r4, #20]
   207ac:	add	r5, r6, r5
   207b0:	str	r5, [r4, #16]
   207b4:	ldr	r3, [pc, #28]	; 207d8 <flatcc_json_printer_init_buffer@@Base+0x64>
   207b8:	str	r3, [r4, #44]	; 0x2c
   207bc:	mov	r0, #0
   207c0:	pop	{r4, r5, r6, pc}
   207c4:	ldr	r3, [pc, #16]	; 207dc <flatcc_json_printer_init_buffer@@Base+0x68>
   207c8:	ldr	r2, [pc, #16]	; 207e0 <flatcc_json_printer_init_buffer@@Base+0x6c>
   207cc:	ldr	r1, [pc, #16]	; 207e4 <flatcc_json_printer_init_buffer@@Base+0x70>
   207d0:	ldr	r0, [pc, #16]	; 207e8 <flatcc_json_printer_init_buffer@@Base+0x74>
   207d4:	bl	12530 <__assert_fail@plt>
   207d8:	andeq	r4, r1, r4, lsl #25
   207dc:	andeq	r1, r2, ip, lsr #23
   207e0:	andeq	r0, r0, sp, lsl #9
   207e4:			; <UNDEFINED> instruction: 0x00021cb8
   207e8:	andeq	r1, r2, r8, ror #28

000207ec <flatcc_json_printer_init_dynamic_buffer@@Base>:
   207ec:	push	{r4, r5, r6, lr}
   207f0:	mov	r5, r0
   207f4:	cmp	r1, #0
   207f8:	moveq	r1, #4096	; 0x1000
   207fc:	cmp	r1, #64	; 0x40
   20800:	movcs	r4, r1
   20804:	movcc	r4, #64	; 0x40
   20808:	mov	r2, #48	; 0x30
   2080c:	mov	r1, #0
   20810:	bl	124e8 <memset@plt>
   20814:	mov	r0, r4
   20818:	bl	124ac <malloc@plt>
   2081c:	str	r0, [r5]
   20820:	mov	r3, #1
   20824:	strb	r3, [r5, #24]
   20828:	str	r4, [r5, #4]
   2082c:	sub	r1, r4, #64	; 0x40
   20830:	str	r1, [r5, #8]
   20834:	str	r0, [r5, #20]
   20838:	add	r1, r0, r1
   2083c:	str	r1, [r5, #16]
   20840:	ldr	r3, [pc, #52]	; 2087c <flatcc_json_printer_init_dynamic_buffer@@Base+0x90>
   20844:	str	r3, [r5, #44]	; 0x2c
   20848:	cmp	r0, #0
   2084c:	beq	20858 <flatcc_json_printer_init_dynamic_buffer@@Base+0x6c>
   20850:	mov	r0, #0
   20854:	pop	{r4, r5, r6, pc}
   20858:	ldr	r3, [r5, #36]	; 0x24
   2085c:	cmp	r3, #0
   20860:	bne	20874 <flatcc_json_printer_init_dynamic_buffer@@Base+0x88>
   20864:	mov	r3, #3
   20868:	str	r3, [r5, #36]	; 0x24
   2086c:	mvn	r0, #0
   20870:	pop	{r4, r5, r6, pc}
   20874:	mvn	r0, #0
   20878:	pop	{r4, r5, r6, pc}
   2087c:	andeq	r5, r1, ip, lsl #2

00020880 <flatcc_json_printer_get_buffer@@Base>:
   20880:	push	{r4, r5, r6, lr}
   20884:	mov	r4, r0
   20888:	mov	r5, r1
   2088c:	ldr	r3, [r0, #44]	; 0x2c
   20890:	mov	r1, #0
   20894:	blx	r3
   20898:	cmp	r5, #0
   2089c:	ldrne	r3, [r4, #20]
   208a0:	ldrne	r2, [r4]
   208a4:	subne	r3, r3, r2
   208a8:	strne	r3, [r5]
   208ac:	ldr	r0, [r4]
   208b0:	pop	{r4, r5, r6, pc}

000208b4 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   208b4:	push	{r4, r5, r6, lr}
   208b8:	mov	r5, r0
   208bc:	bl	20880 <flatcc_json_printer_get_buffer@@Base>
   208c0:	mov	r4, r0
   208c4:	mov	r2, #48	; 0x30
   208c8:	mov	r1, #0
   208cc:	mov	r0, r5
   208d0:	bl	124e8 <memset@plt>
   208d4:	mov	r0, r4
   208d8:	pop	{r4, r5, r6, pc}

000208dc <flatcc_json_printer_clear@@Base>:
   208dc:	push	{r4, lr}
   208e0:	mov	r4, r0
   208e4:	ldrb	r3, [r0, #24]
   208e8:	cmp	r3, #0
   208ec:	beq	20900 <flatcc_json_printer_clear@@Base+0x24>
   208f0:	ldr	r0, [r0]
   208f4:	cmp	r0, #0
   208f8:	beq	20900 <flatcc_json_printer_clear@@Base+0x24>
   208fc:	bl	12440 <free@plt>
   20900:	mov	r2, #48	; 0x30
   20904:	mov	r1, #0
   20908:	mov	r0, r4
   2090c:	bl	124e8 <memset@plt>
   20910:	pop	{r4, pc}
   20914:	subs	r2, r1, #1
   20918:	bxeq	lr
   2091c:	bcc	20af4 <flatcc_json_printer_clear@@Base+0x218>
   20920:	cmp	r0, r1
   20924:	bls	20ad8 <flatcc_json_printer_clear@@Base+0x1fc>
   20928:	tst	r1, r2
   2092c:	beq	20ae4 <flatcc_json_printer_clear@@Base+0x208>
   20930:	clz	r3, r0
   20934:	clz	r2, r1
   20938:	sub	r3, r2, r3
   2093c:	rsbs	r3, r3, #31
   20940:	addne	r3, r3, r3, lsl #1
   20944:	mov	r2, #0
   20948:	addne	pc, pc, r3, lsl #2
   2094c:	nop			; (mov r0, r0)
   20950:	cmp	r0, r1, lsl #31
   20954:	adc	r2, r2, r2
   20958:	subcs	r0, r0, r1, lsl #31
   2095c:	cmp	r0, r1, lsl #30
   20960:	adc	r2, r2, r2
   20964:	subcs	r0, r0, r1, lsl #30
   20968:	cmp	r0, r1, lsl #29
   2096c:	adc	r2, r2, r2
   20970:	subcs	r0, r0, r1, lsl #29
   20974:	cmp	r0, r1, lsl #28
   20978:	adc	r2, r2, r2
   2097c:	subcs	r0, r0, r1, lsl #28
   20980:	cmp	r0, r1, lsl #27
   20984:	adc	r2, r2, r2
   20988:	subcs	r0, r0, r1, lsl #27
   2098c:	cmp	r0, r1, lsl #26
   20990:	adc	r2, r2, r2
   20994:	subcs	r0, r0, r1, lsl #26
   20998:	cmp	r0, r1, lsl #25
   2099c:	adc	r2, r2, r2
   209a0:	subcs	r0, r0, r1, lsl #25
   209a4:	cmp	r0, r1, lsl #24
   209a8:	adc	r2, r2, r2
   209ac:	subcs	r0, r0, r1, lsl #24
   209b0:	cmp	r0, r1, lsl #23
   209b4:	adc	r2, r2, r2
   209b8:	subcs	r0, r0, r1, lsl #23
   209bc:	cmp	r0, r1, lsl #22
   209c0:	adc	r2, r2, r2
   209c4:	subcs	r0, r0, r1, lsl #22
   209c8:	cmp	r0, r1, lsl #21
   209cc:	adc	r2, r2, r2
   209d0:	subcs	r0, r0, r1, lsl #21
   209d4:	cmp	r0, r1, lsl #20
   209d8:	adc	r2, r2, r2
   209dc:	subcs	r0, r0, r1, lsl #20
   209e0:	cmp	r0, r1, lsl #19
   209e4:	adc	r2, r2, r2
   209e8:	subcs	r0, r0, r1, lsl #19
   209ec:	cmp	r0, r1, lsl #18
   209f0:	adc	r2, r2, r2
   209f4:	subcs	r0, r0, r1, lsl #18
   209f8:	cmp	r0, r1, lsl #17
   209fc:	adc	r2, r2, r2
   20a00:	subcs	r0, r0, r1, lsl #17
   20a04:	cmp	r0, r1, lsl #16
   20a08:	adc	r2, r2, r2
   20a0c:	subcs	r0, r0, r1, lsl #16
   20a10:	cmp	r0, r1, lsl #15
   20a14:	adc	r2, r2, r2
   20a18:	subcs	r0, r0, r1, lsl #15
   20a1c:	cmp	r0, r1, lsl #14
   20a20:	adc	r2, r2, r2
   20a24:	subcs	r0, r0, r1, lsl #14
   20a28:	cmp	r0, r1, lsl #13
   20a2c:	adc	r2, r2, r2
   20a30:	subcs	r0, r0, r1, lsl #13
   20a34:	cmp	r0, r1, lsl #12
   20a38:	adc	r2, r2, r2
   20a3c:	subcs	r0, r0, r1, lsl #12
   20a40:	cmp	r0, r1, lsl #11
   20a44:	adc	r2, r2, r2
   20a48:	subcs	r0, r0, r1, lsl #11
   20a4c:	cmp	r0, r1, lsl #10
   20a50:	adc	r2, r2, r2
   20a54:	subcs	r0, r0, r1, lsl #10
   20a58:	cmp	r0, r1, lsl #9
   20a5c:	adc	r2, r2, r2
   20a60:	subcs	r0, r0, r1, lsl #9
   20a64:	cmp	r0, r1, lsl #8
   20a68:	adc	r2, r2, r2
   20a6c:	subcs	r0, r0, r1, lsl #8
   20a70:	cmp	r0, r1, lsl #7
   20a74:	adc	r2, r2, r2
   20a78:	subcs	r0, r0, r1, lsl #7
   20a7c:	cmp	r0, r1, lsl #6
   20a80:	adc	r2, r2, r2
   20a84:	subcs	r0, r0, r1, lsl #6
   20a88:	cmp	r0, r1, lsl #5
   20a8c:	adc	r2, r2, r2
   20a90:	subcs	r0, r0, r1, lsl #5
   20a94:	cmp	r0, r1, lsl #4
   20a98:	adc	r2, r2, r2
   20a9c:	subcs	r0, r0, r1, lsl #4
   20aa0:	cmp	r0, r1, lsl #3
   20aa4:	adc	r2, r2, r2
   20aa8:	subcs	r0, r0, r1, lsl #3
   20aac:	cmp	r0, r1, lsl #2
   20ab0:	adc	r2, r2, r2
   20ab4:	subcs	r0, r0, r1, lsl #2
   20ab8:	cmp	r0, r1, lsl #1
   20abc:	adc	r2, r2, r2
   20ac0:	subcs	r0, r0, r1, lsl #1
   20ac4:	cmp	r0, r1
   20ac8:	adc	r2, r2, r2
   20acc:	subcs	r0, r0, r1
   20ad0:	mov	r0, r2
   20ad4:	bx	lr
   20ad8:	moveq	r0, #1
   20adc:	movne	r0, #0
   20ae0:	bx	lr
   20ae4:	clz	r2, r1
   20ae8:	rsb	r2, r2, #31
   20aec:	lsr	r0, r0, r2
   20af0:	bx	lr
   20af4:	cmp	r0, #0
   20af8:	mvnne	r0, #0
   20afc:	b	20b5c <flatcc_json_printer_clear@@Base+0x280>
   20b00:	cmp	r1, #0
   20b04:	beq	20af4 <flatcc_json_printer_clear@@Base+0x218>
   20b08:	push	{r0, r1, lr}
   20b0c:	bl	20914 <flatcc_json_printer_clear@@Base+0x38>
   20b10:	pop	{r1, r2, lr}
   20b14:	mul	r3, r2, r0
   20b18:	sub	r1, r1, r3
   20b1c:	bx	lr
   20b20:	cmp	r3, #0
   20b24:	cmpeq	r2, #0
   20b28:	bne	20b40 <flatcc_json_printer_clear@@Base+0x264>
   20b2c:	cmp	r1, #0
   20b30:	cmpeq	r0, #0
   20b34:	mvnne	r1, #0
   20b38:	mvnne	r0, #0
   20b3c:	b	20b5c <flatcc_json_printer_clear@@Base+0x280>
   20b40:	sub	sp, sp, #8
   20b44:	push	{sp, lr}
   20b48:	bl	20b6c <flatcc_json_printer_clear@@Base+0x290>
   20b4c:	ldr	lr, [sp, #4]
   20b50:	add	sp, sp, #8
   20b54:	pop	{r2, r3}
   20b58:	bx	lr
   20b5c:	push	{r1, lr}
   20b60:	mov	r0, #8
   20b64:	bl	12410 <raise@plt>
   20b68:	pop	{r1, pc}
   20b6c:	cmp	r1, r3
   20b70:	push	{r4, r5, r6, r7, r8, r9, lr}
   20b74:	cmpeq	r0, r2
   20b78:	mov	r4, r0
   20b7c:	mov	r5, r1
   20b80:	ldr	r9, [sp, #28]
   20b84:	movcc	r0, #0
   20b88:	movcc	r1, #0
   20b8c:	bcc	20c84 <flatcc_json_printer_clear@@Base+0x3a8>
   20b90:	cmp	r3, #0
   20b94:	clzeq	ip, r2
   20b98:	clzne	ip, r3
   20b9c:	addeq	ip, ip, #32
   20ba0:	cmp	r5, #0
   20ba4:	clzeq	r1, r4
   20ba8:	addeq	r1, r1, #32
   20bac:	clzne	r1, r5
   20bb0:	sub	ip, ip, r1
   20bb4:	sub	lr, ip, #32
   20bb8:	lsl	r7, r3, ip
   20bbc:	rsb	r8, ip, #32
   20bc0:	orr	r7, r7, r2, lsl lr
   20bc4:	orr	r7, r7, r2, lsr r8
   20bc8:	lsl	r6, r2, ip
   20bcc:	cmp	r5, r7
   20bd0:	cmpeq	r4, r6
   20bd4:	movcc	r0, #0
   20bd8:	movcc	r1, #0
   20bdc:	bcc	20bf8 <flatcc_json_printer_clear@@Base+0x31c>
   20be0:	mov	r3, #1
   20be4:	subs	r4, r4, r6
   20be8:	lsl	r1, r3, lr
   20bec:	lsl	r0, r3, ip
   20bf0:	orr	r1, r1, r3, lsr r8
   20bf4:	sbc	r5, r5, r7
   20bf8:	cmp	ip, #0
   20bfc:	beq	20c84 <flatcc_json_printer_clear@@Base+0x3a8>
   20c00:	lsrs	r3, r7, #1
   20c04:	rrx	r2, r6
   20c08:	mov	r6, ip
   20c0c:	b	20c30 <flatcc_json_printer_clear@@Base+0x354>
   20c10:	subs	r4, r4, r2
   20c14:	sbc	r5, r5, r3
   20c18:	adds	r4, r4, r4
   20c1c:	adc	r5, r5, r5
   20c20:	adds	r4, r4, #1
   20c24:	adc	r5, r5, #0
   20c28:	subs	r6, r6, #1
   20c2c:	beq	20c4c <flatcc_json_printer_clear@@Base+0x370>
   20c30:	cmp	r5, r3
   20c34:	cmpeq	r4, r2
   20c38:	bcs	20c10 <flatcc_json_printer_clear@@Base+0x334>
   20c3c:	adds	r4, r4, r4
   20c40:	adc	r5, r5, r5
   20c44:	subs	r6, r6, #1
   20c48:	bne	20c30 <flatcc_json_printer_clear@@Base+0x354>
   20c4c:	lsr	r6, r4, ip
   20c50:	lsr	r7, r5, ip
   20c54:	orr	r6, r6, r5, lsl r8
   20c58:	adds	r2, r0, r4
   20c5c:	orr	r6, r6, r5, lsr lr
   20c60:	adc	r3, r1, r5
   20c64:	lsl	r1, r7, ip
   20c68:	orr	r1, r1, r6, lsl lr
   20c6c:	lsl	r0, r6, ip
   20c70:	orr	r1, r1, r6, lsr r8
   20c74:	subs	r0, r2, r0
   20c78:	mov	r4, r6
   20c7c:	mov	r5, r7
   20c80:	sbc	r1, r3, r1
   20c84:	cmp	r9, #0
   20c88:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   20c8c:	strd	r4, [r9]
   20c90:	pop	{r4, r5, r6, r7, r8, r9, pc}

00020c94 <__libc_csu_init@@Base>:
   20c94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20c98:	mov	r7, r0
   20c9c:	ldr	r6, [pc, #72]	; 20cec <__libc_csu_init@@Base+0x58>
   20ca0:	ldr	r5, [pc, #72]	; 20cf0 <__libc_csu_init@@Base+0x5c>
   20ca4:	add	r6, pc, r6
   20ca8:	add	r5, pc, r5
   20cac:	sub	r6, r6, r5
   20cb0:	mov	r8, r1
   20cb4:	mov	r9, r2
   20cb8:	bl	123f0 <raise@plt-0x20>
   20cbc:	asrs	r6, r6, #2
   20cc0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20cc4:	mov	r4, #0
   20cc8:	add	r4, r4, #1
   20ccc:	ldr	r3, [r5], #4
   20cd0:	mov	r2, r9
   20cd4:	mov	r1, r8
   20cd8:	mov	r0, r7
   20cdc:	blx	r3
   20ce0:	cmp	r6, r4
   20ce4:	bne	20cc8 <__libc_csu_init@@Base+0x34>
   20ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20cec:	andeq	r1, r1, r4, ror #4
   20cf0:	andeq	r1, r1, ip, asr r2

00020cf4 <__libc_csu_fini@@Base>:
   20cf4:	bx	lr

Disassembly of section .fini:

00020cf8 <.fini>:
   20cf8:	push	{r3, lr}
   20cfc:	pop	{r3, pc}
