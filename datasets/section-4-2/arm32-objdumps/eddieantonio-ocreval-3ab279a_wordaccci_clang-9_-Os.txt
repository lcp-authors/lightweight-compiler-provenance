
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010850 <.init>:
   10850:	push	{r3, lr}
   10854:	bl	109e4 <abort@plt+0x48>
   10858:	pop	{r3, pc}

Disassembly of section .plt:

0001085c <calloc@plt-0x14>:
   1085c:	push	{lr}		; (str lr, [sp, #-4]!)
   10860:	ldr	lr, [pc, #4]	; 1086c <calloc@plt-0x4>
   10864:	add	lr, pc, lr
   10868:	ldr	pc, [lr, #8]!
   1086c:	muleq	r1, r4, r7

00010870 <calloc@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1940]!	; 0x794

0001087c <strcmp@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1932]!	; 0x78c

00010888 <printf@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1924]!	; 0x784

00010894 <fopen@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1916]!	; 0x77c

000108a0 <free@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1908]!	; 0x774

000108ac <fgets@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1900]!	; 0x76c

000108b8 <strdup@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1892]!	; 0x764

000108c4 <unlink@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1884]!	; 0x75c

000108d0 <__xstat@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1876]!	; 0x754

000108dc <__libc_start_main@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #73728	; 0x12000
   108e4:	ldr	pc, [ip, #1868]!	; 0x74c

000108e8 <__sysv_signal@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #73728	; 0x12000
   108f0:	ldr	pc, [ip, #1860]!	; 0x744

000108f4 <__gmon_start__@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #73728	; 0x12000
   108fc:	ldr	pc, [ip, #1852]!	; 0x73c

00010900 <getpid@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #73728	; 0x12000
   10908:	ldr	pc, [ip, #1844]!	; 0x734

0001090c <exit@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #73728	; 0x12000
   10914:	ldr	pc, [ip, #1836]!	; 0x72c

00010918 <bcmp@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #73728	; 0x12000
   10920:	ldr	pc, [ip, #1828]!	; 0x724

00010924 <strlen@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #73728	; 0x12000
   1092c:	ldr	pc, [ip, #1820]!	; 0x71c

00010930 <fprintf@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #73728	; 0x12000
   10938:	ldr	pc, [ip, #1812]!	; 0x714

0001093c <sqrt@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #73728	; 0x12000
   10944:	ldr	pc, [ip, #1804]!	; 0x70c

00010948 <__isoc99_sscanf@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #73728	; 0x12000
   10950:	ldr	pc, [ip, #1796]!	; 0x704

00010954 <fclose@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #73728	; 0x12000
   1095c:	ldr	pc, [ip, #1788]!	; 0x6fc

00010960 <fputc@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #73728	; 0x12000
   10968:	ldr	pc, [ip, #1780]!	; 0x6f4

0001096c <sprintf@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #73728	; 0x12000
   10974:	ldr	pc, [ip, #1772]!	; 0x6ec

00010978 <atoi@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #73728	; 0x12000
   10980:	ldr	pc, [ip, #1764]!	; 0x6e4

00010984 <fputs@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #73728	; 0x12000
   1098c:	ldr	pc, [ip, #1756]!	; 0x6dc

00010990 <strncmp@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #73728	; 0x12000
   10998:	ldr	pc, [ip, #1748]!	; 0x6d4

0001099c <abort@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #73728	; 0x12000
   109a4:	ldr	pc, [ip, #1740]!	; 0x6cc

Disassembly of section .text:

000109a8 <error@@Base-0x14e0>:
   109a8:	mov	fp, #0
   109ac:	mov	lr, #0
   109b0:	pop	{r1}		; (ldr r1, [sp], #4)
   109b4:	mov	r2, sp
   109b8:	push	{r2}		; (str r2, [sp, #-4]!)
   109bc:	push	{r0}		; (str r0, [sp, #-4]!)
   109c0:	ldr	ip, [pc, #16]	; 109d8 <abort@plt+0x3c>
   109c4:	push	{ip}		; (str ip, [sp, #-4]!)
   109c8:	ldr	r0, [pc, #12]	; 109dc <abort@plt+0x40>
   109cc:	ldr	r3, [pc, #12]	; 109e0 <abort@plt+0x44>
   109d0:	bl	108dc <__libc_start_main@plt>
   109d4:	bl	1099c <abort@plt>
   109d8:	andeq	r2, r1, r4, ror #6
   109dc:	andeq	r0, r1, r0, lsr #23
   109e0:	andeq	r2, r1, r4, lsl #6
   109e4:	ldr	r3, [pc, #20]	; 10a00 <abort@plt+0x64>
   109e8:	ldr	r2, [pc, #20]	; 10a04 <abort@plt+0x68>
   109ec:	add	r3, pc, r3
   109f0:	ldr	r2, [r3, r2]
   109f4:	cmp	r2, #0
   109f8:	bxeq	lr
   109fc:	b	108f4 <__gmon_start__@plt>
   10a00:	andeq	r2, r1, ip, lsl #12
   10a04:	andeq	r0, r0, r4, ror r0
   10a08:	ldr	r0, [pc, #24]	; 10a28 <abort@plt+0x8c>
   10a0c:	ldr	r3, [pc, #24]	; 10a2c <abort@plt+0x90>
   10a10:	cmp	r3, r0
   10a14:	bxeq	lr
   10a18:	ldr	r3, [pc, #16]	; 10a30 <abort@plt+0x94>
   10a1c:	cmp	r3, #0
   10a20:	bxeq	lr
   10a24:	bx	r3
   10a28:	andeq	r3, r2, r8, lsl #1
   10a2c:	andeq	r3, r2, r8, lsl #1
   10a30:	andeq	r0, r0, r0
   10a34:	ldr	r0, [pc, #36]	; 10a60 <abort@plt+0xc4>
   10a38:	ldr	r1, [pc, #36]	; 10a64 <abort@plt+0xc8>
   10a3c:	sub	r1, r1, r0
   10a40:	asr	r1, r1, #2
   10a44:	add	r1, r1, r1, lsr #31
   10a48:	asrs	r1, r1, #1
   10a4c:	bxeq	lr
   10a50:	ldr	r3, [pc, #16]	; 10a68 <abort@plt+0xcc>
   10a54:	cmp	r3, #0
   10a58:	bxeq	lr
   10a5c:	bx	r3
   10a60:	andeq	r3, r2, r8, lsl #1
   10a64:	andeq	r3, r2, r8, lsl #1
   10a68:	andeq	r0, r0, r0
   10a6c:	push	{r4, lr}
   10a70:	ldr	r4, [pc, #24]	; 10a90 <abort@plt+0xf4>
   10a74:	ldrb	r3, [r4]
   10a78:	cmp	r3, #0
   10a7c:	popne	{r4, pc}
   10a80:	bl	10a08 <abort@plt+0x6c>
   10a84:	mov	r3, #1
   10a88:	strb	r3, [r4]
   10a8c:	pop	{r4, pc}
   10a90:	muleq	r2, r8, r0
   10a94:	b	10a34 <abort@plt+0x98>
   10a98:	push	{r4, r5, r6, sl, fp, lr}
   10a9c:	add	fp, sp, #16
   10aa0:	movw	r4, #12560	; 0x3110
   10aa4:	mov	r1, r0
   10aa8:	movt	r4, #2
   10aac:	ldm	r4, {r5, r6}
   10ab0:	mov	r0, r4
   10ab4:	bl	10ee8 <abort@plt+0x54c>
   10ab8:	ldm	r4, {r0, r2}
   10abc:	sub	r2, r2, r6
   10ac0:	sub	r1, r0, r5
   10ac4:	movw	r0, #29664	; 0x73e0
   10ac8:	movt	r0, #2
   10acc:	pop	{r4, r5, r6, sl, fp, lr}
   10ad0:	b	10c38 <abort@plt+0x29c>
   10ad4:	nop	{0}
   10ad8:	push	{r4, sl, fp, lr}
   10adc:	add	fp, sp, #8
   10ae0:	sub	sp, sp, #32
   10ae4:	movw	r4, #29664	; 0x73e0
   10ae8:	sub	r1, fp, #16
   10aec:	add	r2, sp, #16
   10af0:	movt	r4, #2
   10af4:	mov	r0, r4
   10af8:	bl	10c88 <abort@plt+0x2ec>
   10afc:	ldr	r1, [r4, #12]
   10b00:	movw	r0, #9092	; 0x2384
   10b04:	movt	r0, #1
   10b08:	bl	10888 <printf@plt>
   10b0c:	movw	r4, #12560	; 0x3110
   10b10:	movw	r0, #9114	; 0x239a
   10b14:	movt	r4, #2
   10b18:	movt	r0, #1
   10b1c:	ldr	r1, [r4]
   10b20:	bl	10888 <printf@plt>
   10b24:	ldr	r1, [r4, #4]
   10b28:	movw	r0, #9129	; 0x23a9
   10b2c:	movt	r0, #1
   10b30:	bl	10888 <printf@plt>
   10b34:	ldm	r4, {r0, r1}
   10b38:	vldr	d16, [pc, #88]	; 10b98 <abort@plt+0x1fc>
   10b3c:	sub	r1, r0, r1
   10b40:	vmov	s2, r0
   10b44:	movw	r0, #9152	; 0x23c0
   10b48:	vmov	s0, r1
   10b4c:	movt	r0, #1
   10b50:	vcvt.f64.s32	d17, s0
   10b54:	vcvt.f64.s32	d18, s2
   10b58:	vmul.f64	d16, d17, d16
   10b5c:	vdiv.f64	d16, d16, d18
   10b60:	vmov	r2, r3, d16
   10b64:	bl	10888 <printf@plt>
   10b68:	vldr	d16, [fp, #-16]
   10b6c:	movw	r0, #9193	; 0x23e9
   10b70:	vldr	d17, [sp, #16]
   10b74:	movt	r0, #1
   10b78:	str	r0, [sp, #8]
   10b7c:	movw	r0, #9172	; 0x23d4
   10b80:	movt	r0, #1
   10b84:	vmov	r2, r3, d16
   10b88:	vstr	d17, [sp]
   10b8c:	bl	10888 <printf@plt>
   10b90:	sub	sp, fp, #8
   10b94:	pop	{r4, sl, fp, pc}
   10b98:	andeq	r0, r0, r0
   10b9c:	subsmi	r0, r9, r0
   10ba0:	push	{fp, lr}
   10ba4:	mov	fp, sp
   10ba8:	sub	sp, sp, #8
   10bac:	movw	r2, #9242	; 0x241a
   10bb0:	str	r0, [sp, #4]
   10bb4:	add	r0, sp, #4
   10bb8:	mov	r3, #0
   10bbc:	mov	r9, r1
   10bc0:	mov	r7, #0
   10bc4:	movt	r2, #1
   10bc8:	bl	11c1c <abort@plt+0x1280>
   10bcc:	ldr	r0, [sp, #4]
   10bd0:	cmp	r0, #2
   10bd4:	blt	10c28 <abort@plt+0x28c>
   10bd8:	movw	r5, #12560	; 0x3110
   10bdc:	movw	r8, #29664	; 0x73e0
   10be0:	movt	r5, #2
   10be4:	movt	r8, #2
   10be8:	ldr	r1, [r9, r7, lsl #2]
   10bec:	ldr	r6, [r5]
   10bf0:	ldr	r4, [r5, #4]
   10bf4:	mov	r0, r5
   10bf8:	bl	10ee8 <abort@plt+0x54c>
   10bfc:	ldm	r5, {r0, r2}
   10c00:	sub	r2, r2, r4
   10c04:	sub	r1, r0, r6
   10c08:	mov	r0, r8
   10c0c:	bl	10c38 <abort@plt+0x29c>
   10c10:	ldr	r0, [sp, #4]
   10c14:	add	r7, r7, #1
   10c18:	cmp	r7, r0
   10c1c:	blt	10be8 <abort@plt+0x24c>
   10c20:	bl	10ad8 <abort@plt+0x13c>
   10c24:	bl	11e48 <abort@plt+0x14ac>
   10c28:	movw	r0, #9290	; 0x244a
   10c2c:	movt	r0, #1
   10c30:	bl	11e88 <error@@Base>
   10c34:	andeq	r0, r0, r0
   10c38:	push	{r4, r5, r6, sl, fp, lr}
   10c3c:	add	fp, sp, #16
   10c40:	mov	r6, r1
   10c44:	mov	r4, r0
   10c48:	mov	r0, #1
   10c4c:	mov	r1, #32
   10c50:	mov	r5, r2
   10c54:	bl	119f4 <abort@plt+0x1058>
   10c58:	mov	r1, r0
   10c5c:	str	r6, [r1, #8]
   10c60:	str	r5, [r1, #12]
   10c64:	ldr	r0, [r4, #24]
   10c68:	ldr	r3, [r4, #28]
   10c6c:	add	r0, r0, r6
   10c70:	add	r3, r3, r5
   10c74:	str	r0, [r4, #24]
   10c78:	str	r3, [r4, #28]
   10c7c:	mov	r0, r4
   10c80:	pop	{r4, r5, r6, sl, fp, lr}
   10c84:	b	1208c <error@@Base+0x204>
   10c88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10c8c:	add	fp, sp, #24
   10c90:	vpush	{d8}
   10c94:	mov	r5, r0
   10c98:	ldr	r0, [r0]
   10c9c:	cmp	r0, #0
   10ca0:	beq	10e4c <abort@plt+0x4b0>
   10ca4:	mov	r8, r2
   10ca8:	mov	r9, r1
   10cac:	mov	r1, #0
   10cb0:	mov	r2, r0
   10cb4:	ldr	r3, [r2, #4]
   10cb8:	ldr	r2, [r2, #8]
   10cbc:	cmp	r2, #0
   10cc0:	mov	r2, r3
   10cc4:	addgt	r1, r1, #1
   10cc8:	cmp	r3, #0
   10ccc:	bne	10cb4 <abort@plt+0x318>
   10cd0:	cmp	r1, #1
   10cd4:	bls	10e4c <abort@plt+0x4b0>
   10cd8:	ldrd	r2, [r5, #24]
   10cdc:	ldr	r1, [r5, #12]
   10ce0:	vldr	d8, [pc, #368]	; 10e58 <abort@plt+0x4bc>
   10ce4:	vmov.i32	d19, #0	; 0x00000000
   10ce8:	sub	r4, r2, r3
   10cec:	vmov	s2, r2
   10cf0:	vmov	s0, r4
   10cf4:	sub	r4, r1, #1
   10cf8:	vcvt.f64.s32	d16, s0
   10cfc:	vcvt.f64.s32	d17, s2
   10d00:	vmov	s0, r1
   10d04:	mov	r1, r0
   10d08:	vmul.f64	d18, d16, d8
   10d0c:	vcvt.f64.s32	d16, s0
   10d10:	vmov	s0, r4
   10d14:	vdiv.f64	d20, d18, d17
   10d18:	vcvt.f64.s32	d17, s0
   10d1c:	vmul.f64	d18, d20, d16
   10d20:	vstr	d20, [r5, #32]
   10d24:	ldr	r6, [r1, #12]
   10d28:	ldmib	r1, {r4, r7}
   10d2c:	sub	r7, r2, r7
   10d30:	vmov	s2, r7
   10d34:	cmp	r4, #0
   10d38:	sub	r6, r6, r3
   10d3c:	add	r6, r6, r7
   10d40:	vmov	s0, r6
   10d44:	vcvt.f64.s32	d20, s0
   10d48:	vcvt.f64.s32	d21, s2
   10d4c:	vmul.f64	d20, d20, d8
   10d50:	vdiv.f64	d20, d20, d21
   10d54:	vmov.f64	d21, d18
   10d58:	vmls.f64	d21, d20, d17
   10d5c:	vstr	d20, [r1, #16]
   10d60:	vadd.f64	d19, d19, d20
   10d64:	vstr	d21, [r1, #24]
   10d68:	mov	r1, r4
   10d6c:	bne	10d24 <abort@plt+0x388>
   10d70:	vmul.f64	d19, d19, d17
   10d74:	vdiv.f64	d19, d19, d16
   10d78:	vsub.f64	d19, d18, d19
   10d7c:	vmov.i32	d18, #0	; 0x00000000
   10d80:	vstr	d19, [r5, #40]	; 0x28
   10d84:	vldr	d20, [r0, #24]
   10d88:	ldr	r0, [r0, #4]
   10d8c:	cmp	r0, #0
   10d90:	vsub.f64	d20, d20, d19
   10d94:	vmla.f64	d18, d20, d20
   10d98:	bne	10d84 <abort@plt+0x3e8>
   10d9c:	vdiv.f64	d17, d18, d17
   10da0:	vdiv.f64	d16, d17, d16
   10da4:	vsqrt.f64	d0, d16
   10da8:	vcmpe.f64	d0, d0
   10dac:	vmrs	APSR_nzcv, fpscr
   10db0:	bvc	10dbc <abort@plt+0x420>
   10db4:	vmov.f64	d0, d16
   10db8:	bl	1093c <sqrt@plt>
   10dbc:	vldr	d16, [pc, #156]	; 10e60 <abort@plt+0x4c4>
   10dc0:	vldr	d17, [r5, #40]	; 0x28
   10dc4:	vmov.i32	d18, #0	; 0x00000000
   10dc8:	vmov.f64	d20, d8
   10dcc:	vmul.f64	d16, d0, d16
   10dd0:	vsub.f64	d17, d17, d16
   10dd4:	vcmpe.f64	d17, d8
   10dd8:	vmrs	APSR_nzcv, fpscr
   10ddc:	vcmpe.f64	d17, #0.0
   10de0:	vselgt.f64	d19, d8, d18
   10de4:	vmrs	APSR_nzcv, fpscr
   10de8:	vcmpe.f64	d17, d8
   10dec:	vmovmi.f64	d20, d19
   10df0:	vmrs	APSR_nzcv, fpscr
   10df4:	vcmpe.f64	d17, #0.0
   10df8:	vselgt.f64	d19, d20, d17
   10dfc:	vmrs	APSR_nzcv, fpscr
   10e00:	vmovmi.f64	d19, d20
   10e04:	vstr	d19, [r9]
   10e08:	vldr	d17, [r5, #40]	; 0x28
   10e0c:	vadd.f64	d16, d16, d17
   10e10:	vcmpe.f64	d16, d8
   10e14:	vmrs	APSR_nzcv, fpscr
   10e18:	vcmpe.f64	d16, #0.0
   10e1c:	vselgt.f64	d17, d8, d18
   10e20:	vmrs	APSR_nzcv, fpscr
   10e24:	vcmpe.f64	d16, d8
   10e28:	vmovmi.f64	d8, d17
   10e2c:	vmrs	APSR_nzcv, fpscr
   10e30:	vcmpe.f64	d16, #0.0
   10e34:	vselgt.f64	d17, d8, d16
   10e38:	vmrs	APSR_nzcv, fpscr
   10e3c:	vmovmi.f64	d17, d8
   10e40:	vstr	d17, [r8]
   10e44:	vpop	{d8}
   10e48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10e4c:	movw	r0, #9313	; 0x2461
   10e50:	movt	r0, #1
   10e54:	bl	11e88 <error@@Base>
   10e58:	andeq	r0, r0, r0
   10e5c:	subsmi	r0, r9, r0
   10e60:			; <UNDEFINED> instruction: 0xf5c28f5c
   10e64:	svccc	0x00ff5c28
   10e68:	ldm	r0, {r3, ip}
   10e6c:	add	r2, ip, r2
   10e70:	add	r1, r3, r1
   10e74:	stm	r0, {r1, r2}
   10e78:	bx	lr
   10e7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e80:	add	fp, sp, #24
   10e84:	mov	r8, r3
   10e88:	mov	r5, r2
   10e8c:	mov	r4, r1
   10e90:	mov	r6, r0
   10e94:	bl	11794 <abort@plt+0xdf8>
   10e98:	mov	r7, r0
   10e9c:	cmp	r0, #0
   10ea0:	bne	10ecc <abort@plt+0x530>
   10ea4:	mov	r0, #1
   10ea8:	mov	r1, #20
   10eac:	bl	119f4 <abort@plt+0x1058>
   10eb0:	mov	r7, r0
   10eb4:	mov	r0, r4
   10eb8:	bl	108b8 <strdup@plt>
   10ebc:	str	r0, [r7, #8]
   10ec0:	mov	r0, r6
   10ec4:	mov	r1, r7
   10ec8:	bl	11818 <abort@plt+0xe7c>
   10ecc:	ldr	r0, [r7, #12]
   10ed0:	ldr	r1, [r7, #16]
   10ed4:	add	r0, r0, r5
   10ed8:	add	r1, r1, r8
   10edc:	str	r0, [r7, #12]
   10ee0:	str	r1, [r7, #16]
   10ee4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10ee8:	push	{r4, r5, r6, r7, fp, lr}
   10eec:	add	fp, sp, #16
   10ef0:	sub	sp, sp, #8
   10ef4:	mov	r6, r1
   10ef8:	movw	r1, #9337	; 0x2479
   10efc:	mov	r5, r0
   10f00:	movt	r1, #1
   10f04:	mov	r0, r6
   10f08:	bl	11a90 <abort@plt+0x10f4>
   10f0c:	mov	r4, r0
   10f10:	movw	r0, #12441	; 0x3099
   10f14:	mov	r1, #99	; 0x63
   10f18:	movt	r0, #2
   10f1c:	mov	r2, r4
   10f20:	bl	108ac <fgets@plt>
   10f24:	cmp	r0, #0
   10f28:	beq	11078 <abort@plt+0x6dc>
   10f2c:	movw	r0, #12441	; 0x3099
   10f30:	movw	r1, #9339	; 0x247b
   10f34:	mov	r2, #45	; 0x2d
   10f38:	movt	r0, #2
   10f3c:	movt	r1, #1
   10f40:	bl	10918 <bcmp@plt>
   10f44:	cmp	r0, #0
   10f48:	bne	11078 <abort@plt+0x6dc>
   10f4c:	movw	r0, #12441	; 0x3099
   10f50:	mov	r1, #99	; 0x63
   10f54:	mov	r2, r4
   10f58:	movt	r0, #2
   10f5c:	bl	108ac <fgets@plt>
   10f60:	cmp	r0, #0
   10f64:	beq	11078 <abort@plt+0x6dc>
   10f68:	movw	r0, #12441	; 0x3099
   10f6c:	movw	r1, #9387	; 0x24ab
   10f70:	mov	r2, #48	; 0x30
   10f74:	movt	r0, #2
   10f78:	movt	r1, #1
   10f7c:	bl	10918 <bcmp@plt>
   10f80:	cmp	r0, #0
   10f84:	bne	11078 <abort@plt+0x6dc>
   10f88:	add	r1, sp, #4
   10f8c:	mov	r0, r4
   10f90:	bl	11094 <abort@plt+0x6f8>
   10f94:	cmp	r0, #0
   10f98:	beq	11078 <abort@plt+0x6dc>
   10f9c:	mov	r1, sp
   10fa0:	mov	r0, r4
   10fa4:	bl	11094 <abort@plt+0x6f8>
   10fa8:	cmp	r0, #0
   10fac:	beq	11078 <abort@plt+0x6dc>
   10fb0:	movw	r0, #12441	; 0x3099
   10fb4:	mov	r1, #99	; 0x63
   10fb8:	mov	r2, r4
   10fbc:	movt	r0, #2
   10fc0:	bl	108ac <fgets@plt>
   10fc4:	cmp	r0, #0
   10fc8:	beq	11078 <abort@plt+0x6dc>
   10fcc:	movw	r0, #12441	; 0x3099
   10fd0:	mov	r1, #99	; 0x63
   10fd4:	mov	r2, r4
   10fd8:	movt	r0, #2
   10fdc:	bl	108ac <fgets@plt>
   10fe0:	cmp	r0, #0
   10fe4:	beq	11078 <abort@plt+0x6dc>
   10fe8:	ldr	r2, [sp, #4]
   10fec:	ldm	r5, {r0, r1}
   10ff0:	add	r0, r0, r2
   10ff4:	ldr	r2, [sp]
   10ff8:	add	r1, r1, r2
   10ffc:	stm	r5, {r0, r1}
   11000:	add	r1, r5, #8
   11004:	mov	r0, r4
   11008:	bl	110ec <abort@plt+0x750>
   1100c:	mov	r7, r0
   11010:	add	r1, r5, #416	; 0x1a0
   11014:	mov	r0, r4
   11018:	bl	110ec <abort@plt+0x750>
   1101c:	mov	r6, r0
   11020:	add	r1, r5, #824	; 0x338
   11024:	mov	r0, r4
   11028:	bl	110ec <abort@plt+0x750>
   1102c:	ldr	r0, [sp, #4]
   11030:	cmp	r0, #1
   11034:	blt	11068 <abort@plt+0x6cc>
   11038:	add	r1, r5, #920	; 0x398
   1103c:	mov	r0, r4
   11040:	bl	110ec <abort@plt+0x750>
   11044:	cmp	r7, #1
   11048:	addge	r1, r5, #992	; 0x3e0
   1104c:	movge	r0, r4
   11050:	blge	111ec <abort@plt+0x850>
   11054:	cmp	r6, #1
   11058:	movwge	r0, #9048	; 0x2358
   1105c:	addge	r1, r5, r0
   11060:	movge	r0, r4
   11064:	blge	111ec <abort@plt+0x850>
   11068:	mov	r0, r4
   1106c:	bl	11b08 <abort@plt+0x116c>
   11070:	sub	sp, fp, #16
   11074:	pop	{r4, r5, r6, r7, fp, pc}
   11078:	movw	r0, #9435	; 0x24db
   1107c:	movw	r1, #9453	; 0x24ed
   11080:	cmp	r6, #0
   11084:	movt	r0, #1
   11088:	movt	r1, #1
   1108c:	movne	r1, r6
   11090:	bl	11ec8 <error@@Base+0x40>
   11094:	push	{r4, sl, fp, lr}
   11098:	add	fp, sp, #8
   1109c:	mov	r2, r0
   110a0:	movw	r0, #12441	; 0x3099
   110a4:	mov	r4, r1
   110a8:	mov	r1, #99	; 0x63
   110ac:	movt	r0, #2
   110b0:	bl	108ac <fgets@plt>
   110b4:	cmp	r0, #0
   110b8:	beq	110e4 <abort@plt+0x748>
   110bc:	movw	r0, #12441	; 0x3099
   110c0:	movw	r1, #9555	; 0x2553
   110c4:	mov	r2, r4
   110c8:	movt	r0, #2
   110cc:	movt	r1, #1
   110d0:	bl	10948 <__isoc99_sscanf@plt>
   110d4:	sub	r0, r0, #1
   110d8:	clz	r0, r0
   110dc:	lsr	r0, r0, #5
   110e0:	pop	{r4, sl, fp, pc}
   110e4:	mov	r0, #0
   110e8:	pop	{r4, sl, fp, pc}
   110ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110f0:	add	fp, sp, #28
   110f4:	sub	sp, sp, #12
   110f8:	mov	r5, r0
   110fc:	movw	r0, #12441	; 0x3099
   11100:	mov	r4, r1
   11104:	mov	r1, #99	; 0x63
   11108:	movt	r0, #2
   1110c:	mov	r2, r5
   11110:	bl	108ac <fgets@plt>
   11114:	mov	r6, #0
   11118:	cmp	r0, #0
   1111c:	beq	111e0 <abort@plt+0x844>
   11120:	movw	r7, #12441	; 0x3099
   11124:	mov	r1, #99	; 0x63
   11128:	mov	r2, r5
   1112c:	movt	r7, #2
   11130:	mov	r0, r7
   11134:	bl	108ac <fgets@plt>
   11138:	cmp	r0, #0
   1113c:	beq	111e0 <abort@plt+0x844>
   11140:	add	r1, sp, #8
   11144:	add	r2, sp, #4
   11148:	mov	r0, r5
   1114c:	bl	1168c <abort@plt+0xcf0>
   11150:	cmp	r0, #0
   11154:	beq	111e0 <abort@plt+0x844>
   11158:	movw	r8, #9543	; 0x2547
   1115c:	mov	r6, #0
   11160:	add	r7, r7, #29
   11164:	add	r9, sp, #8
   11168:	add	sl, sp, #4
   1116c:	movt	r8, #1
   11170:	mov	r0, r7
   11174:	bl	10978 <atoi@plt>
   11178:	cmp	r0, #0
   1117c:	beq	11188 <abort@plt+0x7ec>
   11180:	ldr	r1, [sp, #8]
   11184:	b	111a8 <abort@plt+0x80c>
   11188:	mov	r0, r7
   1118c:	mov	r1, r8
   11190:	mov	r2, #8
   11194:	bl	10918 <bcmp@plt>
   11198:	ldr	r1, [sp, #8]
   1119c:	cmp	r0, #0
   111a0:	movwne	r0, #11
   111a4:	moveq	r6, r1
   111a8:	mov	r2, r4
   111ac:	ldr	r0, [r2, r0, lsl #3]!
   111b0:	add	r0, r0, r1
   111b4:	ldr	r1, [sp, #4]
   111b8:	str	r0, [r2]
   111bc:	ldr	r0, [r2, #4]
   111c0:	add	r0, r0, r1
   111c4:	mov	r1, r9
   111c8:	str	r0, [r2, #4]
   111cc:	mov	r0, r5
   111d0:	mov	r2, sl
   111d4:	bl	1168c <abort@plt+0xcf0>
   111d8:	cmp	r0, #0
   111dc:	bne	11170 <abort@plt+0x7d4>
   111e0:	mov	r0, r6
   111e4:	sub	sp, fp, #28
   111e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111f0:	add	fp, sp, #28
   111f4:	sub	sp, sp, #12
   111f8:	mov	r5, r0
   111fc:	movw	r0, #12441	; 0x3099
   11200:	mov	r4, r1
   11204:	mov	r1, #99	; 0x63
   11208:	movt	r0, #2
   1120c:	mov	r2, r5
   11210:	bl	108ac <fgets@plt>
   11214:	cmp	r0, #0
   11218:	beq	112a0 <abort@plt+0x904>
   1121c:	movw	r6, #12441	; 0x3099
   11220:	mov	r1, #99	; 0x63
   11224:	mov	r2, r5
   11228:	movt	r6, #2
   1122c:	mov	r0, r6
   11230:	bl	108ac <fgets@plt>
   11234:	cmp	r0, #0
   11238:	beq	112a0 <abort@plt+0x904>
   1123c:	add	r1, sp, #8
   11240:	add	r2, sp, #4
   11244:	mov	r0, r5
   11248:	bl	1168c <abort@plt+0xcf0>
   1124c:	cmp	r0, #0
   11250:	beq	112a0 <abort@plt+0x904>
   11254:	mov	sl, #0
   11258:	add	r7, r6, #29
   1125c:	add	r8, sp, #8
   11260:	add	r9, sp, #4
   11264:	mov	r0, r6
   11268:	bl	10924 <strlen@plt>
   1126c:	ldr	r2, [sp, #8]
   11270:	ldr	r3, [sp, #4]
   11274:	add	r0, r0, r6
   11278:	mov	r1, r7
   1127c:	strb	sl, [r0, #-1]
   11280:	mov	r0, r4
   11284:	bl	10e7c <abort@plt+0x4e0>
   11288:	mov	r0, r5
   1128c:	mov	r1, r8
   11290:	mov	r2, r9
   11294:	bl	1168c <abort@plt+0xcf0>
   11298:	cmp	r0, #0
   1129c:	bne	11264 <abort@plt+0x8c8>
   112a0:	sub	sp, fp, #28
   112a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   112ac:	add	fp, sp, #24
   112b0:	sub	sp, sp, #8
   112b4:	mov	r2, r1
   112b8:	movw	r1, #9459	; 0x24f3
   112bc:	mov	r5, r0
   112c0:	movt	r1, #1
   112c4:	mov	r0, r2
   112c8:	bl	11a90 <abort@plt+0x10f4>
   112cc:	movw	r1, #9461	; 0x24f5
   112d0:	movw	r2, #9339	; 0x247b
   112d4:	movw	r3, #9387	; 0x24ab
   112d8:	mov	r4, r0
   112dc:	movt	r1, #1
   112e0:	movt	r2, #1
   112e4:	movt	r3, #1
   112e8:	bl	10930 <fprintf@plt>
   112ec:	ldr	r2, [r5]
   112f0:	movw	r1, #9466	; 0x24fa
   112f4:	mov	r0, r4
   112f8:	movt	r1, #1
   112fc:	bl	10930 <fprintf@plt>
   11300:	ldr	r2, [r5, #4]
   11304:	movw	r1, #9480	; 0x2508
   11308:	mov	r0, r4
   1130c:	movt	r1, #1
   11310:	bl	10930 <fprintf@plt>
   11314:	mov	r0, r4
   11318:	mov	r1, r5
   1131c:	bl	11420 <abort@plt+0xa84>
   11320:	movw	r0, #9159	; 0x23c7
   11324:	mov	r1, r4
   11328:	movt	r0, #1
   1132c:	bl	10984 <fputs@plt>
   11330:	movw	r3, #9502	; 0x251e
   11334:	mov	r7, #1
   11338:	mov	r8, #0
   1133c:	add	r1, r5, #8
   11340:	mov	r0, r4
   11344:	mov	r2, #50	; 0x32
   11348:	movt	r3, #1
   1134c:	str	r8, [sp]
   11350:	str	r7, [sp, #4]
   11354:	bl	11480 <abort@plt+0xae4>
   11358:	movw	r3, #9521	; 0x2531
   1135c:	add	r6, r5, #416	; 0x1a0
   11360:	mov	r0, r4
   11364:	mov	r2, #50	; 0x32
   11368:	str	r8, [sp]
   1136c:	str	r7, [sp, #4]
   11370:	movt	r3, #1
   11374:	mov	r1, r6
   11378:	bl	11480 <abort@plt+0xae4>
   1137c:	movw	r3, #9512	; 0x2528
   11380:	add	r1, r5, #824	; 0x338
   11384:	mov	r0, r4
   11388:	mov	r2, #10
   1138c:	str	r7, [sp]
   11390:	str	r7, [sp, #4]
   11394:	movt	r3, #1
   11398:	bl	11480 <abort@plt+0xae4>
   1139c:	ldr	r0, [r5]
   113a0:	cmp	r0, #1
   113a4:	blt	1140c <abort@plt+0xa70>
   113a8:	movw	r3, #9535	; 0x253f
   113ac:	add	r1, r5, #920	; 0x398
   113b0:	mov	r0, r4
   113b4:	mov	r2, #8
   113b8:	str	r8, [sp]
   113bc:	str	r8, [sp, #4]
   113c0:	movt	r3, #1
   113c4:	bl	11480 <abort@plt+0xae4>
   113c8:	ldr	r0, [r5, #8]
   113cc:	cmp	r0, #1
   113d0:	blt	113e8 <abort@plt+0xa4c>
   113d4:	movw	r2, #9502	; 0x251e
   113d8:	add	r1, r5, #992	; 0x3e0
   113dc:	mov	r0, r4
   113e0:	movt	r2, #1
   113e4:	bl	115c0 <abort@plt+0xc24>
   113e8:	ldr	r0, [r6]
   113ec:	cmp	r0, #1
   113f0:	blt	1140c <abort@plt+0xa70>
   113f4:	movw	r2, #9521	; 0x2531
   113f8:	movw	r0, #9048	; 0x2358
   113fc:	movt	r2, #1
   11400:	add	r1, r5, r0
   11404:	mov	r0, r4
   11408:	bl	115c0 <abort@plt+0xc24>
   1140c:	mov	r0, r4
   11410:	sub	sp, fp, #24
   11414:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11418:	b	11b08 <abort@plt+0x116c>
   1141c:	nop	{0}
   11420:	mov	ip, r0
   11424:	ldr	r0, [r1]
   11428:	cmp	r0, #0
   1142c:	beq	11468 <abort@plt+0xacc>
   11430:	ldr	r1, [r1, #4]
   11434:	vldr	d16, [pc, #60]	; 11478 <abort@plt+0xadc>
   11438:	vmov	s2, r0
   1143c:	sub	r1, r0, r1
   11440:	mov	r0, ip
   11444:	vmov	s0, r1
   11448:	movw	r1, #9568	; 0x2560
   1144c:	movt	r1, #1
   11450:	vcvt.f64.s32	d17, s0
   11454:	vcvt.f64.s32	d18, s2
   11458:	vmul.f64	d16, d17, d16
   1145c:	vdiv.f64	d16, d16, d18
   11460:	vmov	r2, r3, d16
   11464:	b	10930 <fprintf@plt>
   11468:	movw	r0, #9559	; 0x2557
   1146c:	mov	r1, ip
   11470:	movt	r0, #1
   11474:	b	10984 <fputs@plt>
   11478:	andeq	r0, r0, r0
   1147c:	subsmi	r0, r9, r0
   11480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11484:	add	fp, sp, #28
   11488:	sub	sp, sp, #4
   1148c:	mov	r5, r1
   11490:	movw	r1, #9574	; 0x2566
   11494:	mov	r7, r2
   11498:	mov	r2, r3
   1149c:	mov	r4, r0
   114a0:	movt	r1, #1
   114a4:	bl	10930 <fprintf@plt>
   114a8:	movw	r0, #9622	; 0x2596
   114ac:	mov	r1, r4
   114b0:	movt	r0, #1
   114b4:	bl	10984 <fputs@plt>
   114b8:	movw	r0, #9649	; 0x25b1
   114bc:	mov	r1, r4
   114c0:	movt	r0, #1
   114c4:	bl	10984 <fputs@plt>
   114c8:	ldrb	sl, [fp, #8]
   114cc:	movw	r0, #9579	; 0x256b
   114d0:	movw	r1, #9575	; 0x2567
   114d4:	movw	r2, #9586	; 0x2572
   114d8:	movt	r0, #1
   114dc:	movt	r1, #1
   114e0:	movt	r2, #1
   114e4:	cmp	sl, #0
   114e8:	movne	r2, r0
   114ec:	mov	r0, r4
   114f0:	bl	10930 <fprintf@plt>
   114f4:	ldr	r1, [fp, #12]
   114f8:	lsl	r0, r7, #16
   114fc:	sxth	r6, r7
   11500:	cmp	r0, #65536	; 0x10000
   11504:	str	r1, [sp]
   11508:	blt	11554 <abort@plt+0xbb8>
   1150c:	movw	r8, #9593	; 0x2579
   11510:	mov	r7, #1
   11514:	mov	r9, #1
   11518:	movt	r8, #1
   1151c:	mov	r1, r5
   11520:	ldr	r0, [r1, r7, lsl #3]!
   11524:	cmp	r0, #1
   11528:	blt	11544 <abort@plt+0xba8>
   1152c:	mov	r0, r4
   11530:	bl	116ec <abort@plt+0xd50>
   11534:	mov	r0, r4
   11538:	mov	r1, r8
   1153c:	mov	r2, r7
   11540:	bl	10930 <fprintf@plt>
   11544:	add	r9, r9, #1
   11548:	sxth	r7, r9
   1154c:	cmp	r6, r7
   11550:	bge	1151c <abort@plt+0xb80>
   11554:	cmp	sl, #0
   11558:	beq	11588 <abort@plt+0xbec>
   1155c:	add	r1, r5, r6, lsl #3
   11560:	ldr	r0, [r1, #8]!
   11564:	cmp	r0, #1
   11568:	blt	11588 <abort@plt+0xbec>
   1156c:	mov	r0, r4
   11570:	bl	116ec <abort@plt+0xd50>
   11574:	movw	r1, #9602	; 0x2582
   11578:	mov	r0, r4
   1157c:	mov	r2, r6
   11580:	movt	r1, #1
   11584:	bl	10930 <fprintf@plt>
   11588:	ldr	r0, [sp]
   1158c:	tst	r0, #255	; 0xff
   11590:	beq	115b8 <abort@plt+0xc1c>
   11594:	mov	r0, r4
   11598:	mov	r1, r5
   1159c:	bl	116ec <abort@plt+0xd50>
   115a0:	movw	r0, #9543	; 0x2547
   115a4:	mov	r1, r4
   115a8:	movt	r0, #1
   115ac:	sub	sp, fp, #28
   115b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115b4:	b	10984 <fputs@plt>
   115b8:	sub	sp, fp, #28
   115bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115c0:	push	{r4, r5, r6, r7, fp, lr}
   115c4:	add	fp, sp, #16
   115c8:	mov	r5, r0
   115cc:	mov	r0, r1
   115d0:	mov	r6, r2
   115d4:	mov	r4, r1
   115d8:	bl	11928 <abort@plt+0xf8c>
   115dc:	movw	r0, #8048	; 0x1f70
   115e0:	movw	r2, #5964	; 0x174c
   115e4:	ldr	r1, [r4, r0]!
   115e8:	movt	r2, #1
   115ec:	ldr	r0, [r4, #4]
   115f0:	bl	121c8 <error@@Base+0x340>
   115f4:	movw	r1, #9574	; 0x2566
   115f8:	mov	r0, r5
   115fc:	mov	r2, r6
   11600:	movt	r1, #1
   11604:	bl	10930 <fprintf@plt>
   11608:	movw	r0, #9622	; 0x2596
   1160c:	mov	r1, r5
   11610:	movt	r0, #1
   11614:	bl	10984 <fputs@plt>
   11618:	movw	r0, #9649	; 0x25b1
   1161c:	mov	r1, r5
   11620:	movt	r0, #1
   11624:	bl	10984 <fputs@plt>
   11628:	mov	r0, #10
   1162c:	mov	r1, r5
   11630:	bl	10960 <fputc@plt>
   11634:	ldr	r0, [r4, #4]
   11638:	cmp	r0, #1
   1163c:	blt	11688 <abort@plt+0xcec>
   11640:	movw	r6, #9575	; 0x2567
   11644:	mov	r7, #0
   11648:	movt	r6, #1
   1164c:	ldr	r0, [r4]
   11650:	ldr	r0, [r0, r7, lsl #2]
   11654:	add	r1, r0, #12
   11658:	mov	r0, r5
   1165c:	bl	116ec <abort@plt+0xd50>
   11660:	ldr	r0, [r4]
   11664:	mov	r1, r6
   11668:	ldr	r0, [r0, r7, lsl #2]
   1166c:	ldr	r2, [r0, #8]
   11670:	mov	r0, r5
   11674:	bl	10930 <fprintf@plt>
   11678:	ldr	r0, [r4, #4]
   1167c:	add	r7, r7, #1
   11680:	cmp	r7, r0
   11684:	blt	1164c <abort@plt+0xcb0>
   11688:	pop	{r4, r5, r6, r7, fp, pc}
   1168c:	push	{r4, r5, fp, lr}
   11690:	add	fp, sp, #8
   11694:	mov	r4, r2
   11698:	mov	r2, r0
   1169c:	movw	r0, #12441	; 0x3099
   116a0:	mov	r5, r1
   116a4:	mov	r1, #99	; 0x63
   116a8:	movt	r0, #2
   116ac:	bl	108ac <fgets@plt>
   116b0:	cmp	r0, #0
   116b4:	beq	116e4 <abort@plt+0xd48>
   116b8:	movw	r0, #12441	; 0x3099
   116bc:	movw	r1, #9551	; 0x254f
   116c0:	mov	r2, r5
   116c4:	mov	r3, r4
   116c8:	movt	r0, #2
   116cc:	movt	r1, #1
   116d0:	bl	10948 <__isoc99_sscanf@plt>
   116d4:	sub	r0, r0, #2
   116d8:	clz	r0, r0
   116dc:	lsr	r0, r0, #5
   116e0:	pop	{r4, r5, fp, pc}
   116e4:	mov	r0, #0
   116e8:	pop	{r4, r5, fp, pc}
   116ec:	push	{r4, r5, fp, lr}
   116f0:	add	fp, sp, #8
   116f4:	mov	r4, r0
   116f8:	cmp	r1, #0
   116fc:	beq	11728 <abort@plt+0xd8c>
   11700:	mov	r5, r1
   11704:	ldm	r1, {r2, r3}
   11708:	movw	r1, #9611	; 0x258b
   1170c:	mov	r0, r4
   11710:	movt	r1, #1
   11714:	bl	10930 <fprintf@plt>
   11718:	mov	r0, r4
   1171c:	mov	r1, r5
   11720:	bl	11420 <abort@plt+0xa84>
   11724:	b	11738 <abort@plt+0xd9c>
   11728:	movw	r0, #9622	; 0x2596
   1172c:	mov	r1, r4
   11730:	movt	r0, #1
   11734:	bl	10984 <fputs@plt>
   11738:	movw	r0, #9649	; 0x25b1
   1173c:	mov	r1, r4
   11740:	movt	r0, #1
   11744:	pop	{r4, r5, fp, lr}
   11748:	b	10984 <fputs@plt>
   1174c:	ldr	r1, [r1, #8]
   11750:	ldr	r0, [r0, #8]
   11754:	b	11a14 <abort@plt+0x1078>
   11758:	push	{r4, r5, r6, sl, fp, lr}
   1175c:	add	fp, sp, #16
   11760:	mov	r4, r0
   11764:	movw	r0, #8048	; 0x1f70
   11768:	movw	r6, #503	; 0x1f7
   1176c:	add	r5, r4, r0
   11770:	mov	r0, r4
   11774:	bl	12020 <error@@Base+0x198>
   11778:	subs	r6, r6, #1
   1177c:	add	r4, r4, #16
   11780:	bne	11770 <abort@plt+0xdd4>
   11784:	mov	r0, #0
   11788:	str	r0, [r5]
   1178c:	str	r0, [r5, #4]
   11790:	pop	{r4, r5, r6, sl, fp, pc}
   11794:	push	{r4, r5, r6, sl, fp, lr}
   11798:	add	fp, sp, #16
   1179c:	mov	r5, r1
   117a0:	ldrb	r1, [r1]
   117a4:	mov	r4, #0
   117a8:	mov	r2, #0
   117ac:	cmp	r1, #0
   117b0:	beq	117e4 <abort@plt+0xe48>
   117b4:	add	r3, r5, #1
   117b8:	mov	r2, #0
   117bc:	uxtab	r2, r2, r1
   117c0:	ldrb	r1, [r3], #1
   117c4:	cmp	r1, #0
   117c8:	bne	117bc <abort@plt+0xe20>
   117cc:	movw	r1, #20065	; 0x4e61
   117d0:	movt	r1, #33354	; 0x824a
   117d4:	umull	r1, r3, r2, r1
   117d8:	lsr	r1, r3, #8
   117dc:	movw	r3, #503	; 0x1f7
   117e0:	mls	r2, r1, r3, r2
   117e4:	ldr	r6, [r0, r2, lsl #4]
   117e8:	cmp	r6, #0
   117ec:	beq	11810 <abort@plt+0xe74>
   117f0:	ldr	r1, [r6, #8]
   117f4:	mov	r0, r5
   117f8:	bl	1087c <strcmp@plt>
   117fc:	cmp	r0, #0
   11800:	beq	1180c <abort@plt+0xe70>
   11804:	ldr	r6, [r6, #4]
   11808:	b	117e8 <abort@plt+0xe4c>
   1180c:	mov	r4, r6
   11810:	mov	r0, r4
   11814:	pop	{r4, r5, r6, sl, fp, pc}
   11818:	push	{r4, r5, fp, lr}
   1181c:	add	fp, sp, #8
   11820:	movw	r2, #8048	; 0x1f70
   11824:	add	r5, r0, r2
   11828:	ldr	r2, [r1, #8]
   1182c:	ldrb	r3, [r2]
   11830:	cmp	r3, #0
   11834:	beq	1186c <abort@plt+0xed0>
   11838:	add	r4, r2, #1
   1183c:	mov	r2, #0
   11840:	uxtab	r2, r2, r3
   11844:	ldrb	r3, [r4], #1
   11848:	cmp	r3, #0
   1184c:	bne	11840 <abort@plt+0xea4>
   11850:	movw	r3, #20065	; 0x4e61
   11854:	movt	r3, #33354	; 0x824a
   11858:	umull	r3, r4, r2, r3
   1185c:	lsr	r3, r4, #8
   11860:	movw	r4, #503	; 0x1f7
   11864:	mls	r2, r3, r4, r2
   11868:	b	11870 <abort@plt+0xed4>
   1186c:	mov	r2, #0
   11870:	add	r0, r0, r2, lsl #4
   11874:	bl	1202c <error@@Base+0x1a4>
   11878:	ldr	r0, [r5]
   1187c:	cmp	r0, #0
   11880:	beq	11890 <abort@plt+0xef4>
   11884:	bl	108a0 <free@plt>
   11888:	mov	r0, #0
   1188c:	str	r0, [r5]
   11890:	ldr	r0, [r5, #4]
   11894:	add	r0, r0, #1
   11898:	str	r0, [r5, #4]
   1189c:	pop	{r4, r5, fp, pc}
   118a0:	push	{r4, r5, fp, lr}
   118a4:	add	fp, sp, #8
   118a8:	movw	r2, #8048	; 0x1f70
   118ac:	add	r5, r0, r2
   118b0:	ldr	r2, [r1, #8]
   118b4:	ldrb	r3, [r2]
   118b8:	cmp	r3, #0
   118bc:	beq	118f4 <abort@plt+0xf58>
   118c0:	add	r4, r2, #1
   118c4:	mov	r2, #0
   118c8:	uxtab	r2, r2, r3
   118cc:	ldrb	r3, [r4], #1
   118d0:	cmp	r3, #0
   118d4:	bne	118c8 <abort@plt+0xf2c>
   118d8:	movw	r3, #20065	; 0x4e61
   118dc:	movt	r3, #33354	; 0x824a
   118e0:	umull	r3, r4, r2, r3
   118e4:	lsr	r3, r4, #8
   118e8:	movw	r4, #503	; 0x1f7
   118ec:	mls	r2, r3, r4, r2
   118f0:	b	118f8 <abort@plt+0xf5c>
   118f4:	mov	r2, #0
   118f8:	add	r0, r0, r2, lsl #4
   118fc:	bl	120b4 <error@@Base+0x22c>
   11900:	ldr	r0, [r5]
   11904:	cmp	r0, #0
   11908:	beq	11918 <abort@plt+0xf7c>
   1190c:	bl	108a0 <free@plt>
   11910:	mov	r0, #0
   11914:	str	r0, [r5]
   11918:	ldr	r0, [r5, #4]
   1191c:	sub	r0, r0, #1
   11920:	str	r0, [r5, #4]
   11924:	pop	{r4, r5, fp, pc}
   11928:	push	{r4, r5, fp, lr}
   1192c:	add	fp, sp, #8
   11930:	mov	r4, r0
   11934:	movw	r0, #8048	; 0x1f70
   11938:	mov	r5, r4
   1193c:	ldr	r0, [r5, r0]!
   11940:	cmp	r0, #0
   11944:	bne	11998 <abort@plt+0xffc>
   11948:	ldr	r0, [r5, #4]
   1194c:	cmp	r0, #0
   11950:	popeq	{r4, r5, fp, pc}
   11954:	mov	r1, #4
   11958:	bl	119f4 <abort@plt+0x1058>
   1195c:	str	r0, [r5]
   11960:	mov	r0, #0
   11964:	movw	ip, #503	; 0x1f7
   11968:	mov	r2, #0
   1196c:	ldr	r3, [r4, r2, lsl #4]
   11970:	cmp	r3, #0
   11974:	beq	1198c <abort@plt+0xff0>
   11978:	ldr	r1, [r5]
   1197c:	str	r3, [r1, r0, lsl #2]
   11980:	add	r0, r0, #1
   11984:	ldr	r3, [r3, #4]
   11988:	b	11970 <abort@plt+0xfd4>
   1198c:	add	r2, r2, #1
   11990:	cmp	r2, ip
   11994:	bne	1196c <abort@plt+0xfd0>
   11998:	pop	{r4, r5, fp, pc}
   1199c:	push	{r4, r5, r6, r7, fp, lr}
   119a0:	add	fp, sp, #16
   119a4:	mov	r5, r0
   119a8:	movw	r0, #8048	; 0x1f70
   119ac:	mov	r4, r1
   119b0:	movw	r7, #503	; 0x1f7
   119b4:	add	r6, r5, r0
   119b8:	mov	r0, r5
   119bc:	mov	r1, r4
   119c0:	bl	12188 <error@@Base+0x300>
   119c4:	subs	r7, r7, #1
   119c8:	add	r5, r5, #16
   119cc:	bne	119b8 <abort@plt+0x101c>
   119d0:	ldr	r0, [r6]
   119d4:	cmp	r0, #0
   119d8:	beq	119e8 <abort@plt+0x104c>
   119dc:	bl	108a0 <free@plt>
   119e0:	mov	r0, #0
   119e4:	str	r0, [r6]
   119e8:	mov	r0, #0
   119ec:	str	r0, [r6, #4]
   119f0:	pop	{r4, r5, r6, r7, fp, pc}
   119f4:	push	{fp, lr}
   119f8:	mov	fp, sp
   119fc:	bl	10870 <calloc@plt>
   11a00:	cmp	r0, #0
   11a04:	popne	{fp, pc}
   11a08:	movw	r0, #9653	; 0x25b5
   11a0c:	movt	r0, #1
   11a10:	bl	11e88 <error@@Base>
   11a14:	push	{r4, r5, r6, sl, fp, lr}
   11a18:	add	fp, sp, #16
   11a1c:	ldrb	r3, [r0]
   11a20:	ldrb	ip, [r1]
   11a24:	mov	r2, r0
   11a28:	mov	r0, #0
   11a2c:	cmp	r3, #0
   11a30:	beq	11a68 <abort@plt+0x10cc>
   11a34:	add	r6, r2, #1
   11a38:	add	lr, r1, #1
   11a3c:	mov	r2, #0
   11a40:	uxtb	r4, ip
   11a44:	uxtb	r5, r3
   11a48:	cmp	r5, r4
   11a4c:	bne	11a78 <abort@plt+0x10dc>
   11a50:	ldrb	r3, [r6, r2]
   11a54:	ldrb	ip, [lr, r2]
   11a58:	add	r2, r2, #1
   11a5c:	cmp	r3, #0
   11a60:	bne	11a40 <abort@plt+0x10a4>
   11a64:	b	11a6c <abort@plt+0x10d0>
   11a68:	mov	r2, #0
   11a6c:	cmp	ip, #0
   11a70:	beq	11a8c <abort@plt+0x10f0>
   11a74:	mov	r3, #0
   11a78:	ldrb	r1, [r1, r2]
   11a7c:	uxtb	r2, r3
   11a80:	mov	r0, #1
   11a84:	cmp	r2, r1
   11a88:	mvncc	r0, #0
   11a8c:	pop	{r4, r5, r6, sl, fp, pc}
   11a90:	push	{r4, r5, fp, lr}
   11a94:	add	fp, sp, #8
   11a98:	mov	r5, r1
   11a9c:	cmp	r0, #0
   11aa0:	beq	11ad4 <abort@plt+0x1138>
   11aa4:	mov	r1, r5
   11aa8:	mov	r4, r0
   11aac:	bl	10894 <fopen@plt>
   11ab0:	cmp	r0, #0
   11ab4:	popne	{r4, r5, fp, pc}
   11ab8:	ldrb	r0, [r5]
   11abc:	cmp	r0, #119	; 0x77
   11ac0:	bne	11af8 <abort@plt+0x115c>
   11ac4:	movw	r0, #9679	; 0x25cf
   11ac8:	mov	r1, r4
   11acc:	movt	r0, #1
   11ad0:	bl	11ec8 <error@@Base+0x40>
   11ad4:	ldrb	r0, [r5]
   11ad8:	movw	r1, #12432	; 0x3090
   11adc:	movw	r2, #12436	; 0x3094
   11ae0:	movt	r1, #2
   11ae4:	movt	r2, #2
   11ae8:	cmp	r0, #114	; 0x72
   11aec:	moveq	r2, r1
   11af0:	ldr	r0, [r2]
   11af4:	pop	{r4, r5, fp, pc}
   11af8:	movw	r0, #9701	; 0x25e5
   11afc:	mov	r1, r4
   11b00:	movt	r0, #1
   11b04:	bl	11ec8 <error@@Base+0x40>
   11b08:	movw	r1, #12432	; 0x3090
   11b0c:	movt	r1, #2
   11b10:	ldr	r1, [r1]
   11b14:	cmp	r1, r0
   11b18:	bxeq	lr
   11b1c:	movw	r1, #12436	; 0x3094
   11b20:	movt	r1, #2
   11b24:	ldr	r1, [r1]
   11b28:	cmp	r1, r0
   11b2c:	beq	11b34 <abort@plt+0x1198>
   11b30:	b	10954 <fclose@plt>
   11b34:	bx	lr
   11b38:	push	{fp, lr}
   11b3c:	mov	fp, sp
   11b40:	sub	sp, sp, #88	; 0x58
   11b44:	mov	r1, sp
   11b48:	bl	12368 <error@@Base+0x4e0>
   11b4c:	clz	r0, r0
   11b50:	lsr	r0, r0, #5
   11b54:	mov	sp, fp
   11b58:	pop	{fp, pc}
   11b5c:	push	{r4, sl, fp, lr}
   11b60:	add	fp, sp, #8
   11b64:	movw	r0, #12542	; 0x30fe
   11b68:	movt	r0, #2
   11b6c:	ldrh	r1, [r0]
   11b70:	add	r1, r1, #1
   11b74:	strh	r1, [r0]
   11b78:	sxth	r0, r1
   11b7c:	bl	11b90 <abort@plt+0x11f4>
   11b80:	mov	r4, r0
   11b84:	bl	108c4 <unlink@plt>
   11b88:	mov	r0, r4
   11b8c:	pop	{r4, sl, fp, pc}
   11b90:	push	{r4, r5, fp, lr}
   11b94:	add	fp, sp, #8
   11b98:	sub	sp, sp, #104	; 0x68
   11b9c:	mov	r4, r0
   11ba0:	movw	r0, #29716	; 0x7414
   11ba4:	movt	r0, #2
   11ba8:	ldr	r5, [r0]
   11bac:	bl	10900 <getpid@plt>
   11bb0:	movw	r1, #9742	; 0x260e
   11bb4:	mov	r3, r0
   11bb8:	sxth	r0, r4
   11bbc:	add	r4, sp, #4
   11bc0:	mov	r2, r5
   11bc4:	movt	r1, #1
   11bc8:	str	r0, [sp]
   11bcc:	mov	r0, r4
   11bd0:	bl	1096c <sprintf@plt>
   11bd4:	mov	r0, r4
   11bd8:	bl	108b8 <strdup@plt>
   11bdc:	sub	sp, fp, #8
   11be0:	pop	{r4, r5, fp, pc}
   11be4:	push	{r4, sl, fp, lr}
   11be8:	add	fp, sp, #8
   11bec:	mov	r4, r0
   11bf0:	bl	10924 <strlen@plt>
   11bf4:	sub	r0, r0, #1
   11bf8:	sxth	r0, r0
   11bfc:	cmp	r0, #0
   11c00:	bmi	11c10 <abort@plt+0x1274>
   11c04:	ldrb	r1, [r4, r0]
   11c08:	cmp	r1, #47	; 0x2f
   11c0c:	bne	11bf4 <abort@plt+0x1258>
   11c10:	add	r0, r0, r4
   11c14:	add	r0, r0, #1
   11c18:	pop	{r4, sl, fp, pc}
   11c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c20:	add	fp, sp, #28
   11c24:	sub	sp, sp, #12
   11c28:	stmib	sp, {r0, r1}
   11c2c:	mov	r6, r3
   11c30:	str	r2, [sp]
   11c34:	ldr	r4, [r1]
   11c38:	mov	r0, r4
   11c3c:	bl	10924 <strlen@plt>
   11c40:	sub	r0, r0, #1
   11c44:	sxth	r0, r0
   11c48:	cmp	r0, #0
   11c4c:	bmi	11c5c <abort@plt+0x12c0>
   11c50:	ldrb	r1, [r4, r0]
   11c54:	cmp	r1, #47	; 0x2f
   11c58:	bne	11c40 <abort@plt+0x12a4>
   11c5c:	add	r0, r0, r4
   11c60:	movw	r1, #29716	; 0x7414
   11c64:	movw	r4, #8016	; 0x1f50
   11c68:	movt	r1, #2
   11c6c:	movt	r4, #1
   11c70:	add	r0, r0, #1
   11c74:	str	r0, [r1]
   11c78:	mov	r0, #2
   11c7c:	mov	r1, r4
   11c80:	bl	108e8 <__sysv_signal@plt>
   11c84:	mov	r0, #15
   11c88:	mov	r1, r4
   11c8c:	bl	108e8 <__sysv_signal@plt>
   11c90:	ldr	r0, [sp, #4]
   11c94:	ldr	r5, [r0]
   11c98:	cmp	r5, #1
   11c9c:	bne	11cb4 <abort@plt+0x1318>
   11ca0:	movw	r0, #12416	; 0x3080
   11ca4:	movt	r0, #2
   11ca8:	ldrb	r0, [r0]
   11cac:	cmp	r0, #0
   11cb0:	bne	11e30 <abort@plt+0x1494>
   11cb4:	ldr	ip, [sp, #8]
   11cb8:	mov	r8, #0
   11cbc:	cmp	r5, #2
   11cc0:	blt	11e0c <abort@plt+0x1470>
   11cc4:	mov	r8, #0
   11cc8:	mov	r7, #1
   11ccc:	mov	r9, #1
   11cd0:	ldr	r4, [ip, r7, lsl #2]
   11cd4:	ldrb	r0, [r4]
   11cd8:	cmp	r0, #45	; 0x2d
   11cdc:	bne	11db4 <abort@plt+0x1418>
   11ce0:	ldrb	sl, [r4, #1]
   11ce4:	cmp	sl, #0
   11ce8:	beq	11db4 <abort@plt+0x1418>
   11cec:	mov	r0, r4
   11cf0:	bl	10924 <strlen@plt>
   11cf4:	mov	r2, r0
   11cf8:	movw	r0, #9771	; 0x262b
   11cfc:	mov	r1, r4
   11d00:	movt	r0, #1
   11d04:	bl	10990 <strncmp@plt>
   11d08:	cmp	r0, #0
   11d0c:	beq	11e30 <abort@plt+0x1494>
   11d10:	ldr	ip, [sp, #8]
   11d14:	add	r1, r7, #1
   11d18:	mov	r0, #0
   11d1c:	cmp	r1, r5
   11d20:	ldrlt	r0, [ip, r1, lsl #2]
   11d24:	cmp	r6, #0
   11d28:	ldrbne	r2, [r6]
   11d2c:	cmpne	r2, #0
   11d30:	beq	11e20 <abort@plt+0x1484>
   11d34:	mov	r1, #0
   11d38:	cmp	sl, r2
   11d3c:	beq	11d64 <abort@plt+0x13c8>
   11d40:	mov	r2, #1
   11d44:	sxth	r1, r2
   11d48:	add	r3, r1, r1, lsl #1
   11d4c:	ldrb	r3, [r6, r3, lsl #2]
   11d50:	cmp	r3, #0
   11d54:	beq	11e20 <abort@plt+0x1484>
   11d58:	add	r2, r2, #1
   11d5c:	cmp	sl, r3
   11d60:	bne	11d44 <abort@plt+0x13a8>
   11d64:	add	r1, r1, r1, lsl #1
   11d68:	add	r3, r6, r1, lsl #2
   11d6c:	ldr	r1, [r3, #4]
   11d70:	cmp	r1, #0
   11d74:	beq	11dd4 <abort@plt+0x1438>
   11d78:	mov	r2, r4
   11d7c:	cmp	r0, #0
   11d80:	ldrb	r7, [r2, #2]!
   11d84:	cmpeq	r7, #0
   11d88:	beq	11dd4 <abort@plt+0x1438>
   11d8c:	ldr	r3, [r1]
   11d90:	cmp	r3, #0
   11d94:	bne	11e38 <abort@plt+0x149c>
   11d98:	cmp	r7, #0
   11d9c:	movne	r0, r2
   11da0:	str	r0, [r1]
   11da4:	ldrb	r0, [r2]
   11da8:	cmp	r0, #0
   11dac:	addeq	r9, r9, #1
   11db0:	b	11dc0 <abort@plt+0x1424>
   11db4:	sxth	r0, r8
   11db8:	add	r8, r8, #1
   11dbc:	str	r4, [ip, r0, lsl #2]
   11dc0:	add	r9, r9, #1
   11dc4:	sxth	r7, r9
   11dc8:	cmp	r5, r7
   11dcc:	bgt	11cd0 <abort@plt+0x1334>
   11dd0:	b	11e0c <abort@plt+0x1470>
   11dd4:	ldr	r0, [r3, #8]
   11dd8:	cmp	r0, #0
   11ddc:	beq	11e20 <abort@plt+0x1484>
   11de0:	ldrb	r1, [r4, #2]
   11de4:	cmp	r1, #0
   11de8:	bne	11e20 <abort@plt+0x1484>
   11dec:	ldrb	r1, [r0]
   11df0:	cmp	r1, #0
   11df4:	bne	11e38 <abort@plt+0x149c>
   11df8:	mov	r1, #1
   11dfc:	strb	r1, [r0]
   11e00:	ldr	r0, [sp, #4]
   11e04:	ldr	r5, [r0]
   11e08:	b	11dc0 <abort@plt+0x1424>
   11e0c:	ldr	r1, [sp, #4]
   11e10:	sxth	r0, r8
   11e14:	str	r0, [r1]
   11e18:	sub	sp, fp, #28
   11e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e20:	movw	r0, #9792	; 0x2640
   11e24:	mov	r1, r4
   11e28:	movt	r0, #1
   11e2c:	bl	11ec8 <error@@Base+0x40>
   11e30:	ldr	r0, [sp]
   11e34:	bl	11f80 <error@@Base+0xf8>
   11e38:	movw	r0, #9807	; 0x264f
   11e3c:	mov	r1, r4
   11e40:	movt	r0, #1
   11e44:	bl	11ec8 <error@@Base+0x40>
   11e48:	push	{fp, lr}
   11e4c:	mov	fp, sp
   11e50:	mov	r0, #0
   11e54:	bl	11e58 <abort@plt+0x14bc>
   11e58:	push	{fp, lr}
   11e5c:	mov	fp, sp
   11e60:	mov	r4, r0
   11e64:	movw	r0, #29720	; 0x7418
   11e68:	movt	r0, #2
   11e6c:	ldr	r0, [r0]
   11e70:	cmp	r0, #0
   11e74:	beq	11e7c <abort@plt+0x14e0>
   11e78:	blx	r0
   11e7c:	bl	11fd0 <error@@Base+0x148>
   11e80:	mov	r0, r4
   11e84:	bl	1090c <exit@plt>

00011e88 <error@@Base>:
   11e88:	push	{fp, lr}
   11e8c:	mov	fp, sp
   11e90:	mov	r3, r0
   11e94:	movw	r0, #29716	; 0x7414
   11e98:	movw	r1, #9721	; 0x25f9
   11e9c:	movt	r0, #2
   11ea0:	movt	r1, #1
   11ea4:	ldr	r2, [r0]
   11ea8:	movw	r0, #12424	; 0x3088
   11eac:	movt	r0, #2
   11eb0:	ldr	r0, [r0]
   11eb4:	bl	10930 <fprintf@plt>
   11eb8:	movw	r0, #12420	; 0x3084
   11ebc:	movt	r0, #2
   11ec0:	ldr	r0, [r0]
   11ec4:	bl	11e58 <abort@plt+0x14bc>
   11ec8:	push	{fp, lr}
   11ecc:	mov	fp, sp
   11ed0:	sub	sp, sp, #8
   11ed4:	mov	r3, r0
   11ed8:	movw	r0, #29716	; 0x7414
   11edc:	str	r1, [sp]
   11ee0:	movw	r1, #9729	; 0x2601
   11ee4:	movt	r0, #2
   11ee8:	movt	r1, #1
   11eec:	ldr	r2, [r0]
   11ef0:	movw	r0, #12424	; 0x3088
   11ef4:	movt	r0, #2
   11ef8:	ldr	r0, [r0]
   11efc:	bl	10930 <fprintf@plt>
   11f00:	movw	r0, #12420	; 0x3084
   11f04:	movt	r0, #2
   11f08:	ldr	r0, [r0]
   11f0c:	bl	11e58 <abort@plt+0x14bc>
   11f10:	push	{fp, lr}
   11f14:	mov	fp, sp
   11f18:	sub	sp, sp, #8
   11f1c:	mov	r3, r0
   11f20:	movw	r0, #29716	; 0x7414
   11f24:	str	r1, [sp]
   11f28:	movw	r1, #9729	; 0x2601
   11f2c:	movt	r0, #2
   11f30:	movt	r1, #1
   11f34:	ldr	r2, [r0]
   11f38:	movw	r0, #12424	; 0x3088
   11f3c:	movt	r0, #2
   11f40:	ldr	r0, [r0]
   11f44:	bl	10930 <fprintf@plt>
   11f48:	mov	sp, fp
   11f4c:	pop	{fp, pc}
   11f50:	push	{fp, lr}
   11f54:	mov	fp, sp
   11f58:	movw	r0, #12544	; 0x3100
   11f5c:	movt	r0, #2
   11f60:	ldrb	r1, [r0]
   11f64:	cmp	r1, #1
   11f68:	popeq	{fp, pc}
   11f6c:	mov	r1, #1
   11f70:	strb	r1, [r0]
   11f74:	movw	r0, #9756	; 0x261c
   11f78:	movt	r0, #1
   11f7c:	bl	11e88 <error@@Base>
   11f80:	push	{fp, lr}
   11f84:	mov	fp, sp
   11f88:	mov	r3, r0
   11f8c:	movw	r0, #29712	; 0x7410
   11f90:	movt	r0, #2
   11f94:	ldr	r0, [r0]
   11f98:	cmp	r0, #0
   11f9c:	bne	11fc8 <error@@Base+0x140>
   11fa0:	movw	r0, #29716	; 0x7414
   11fa4:	movw	r1, #9777	; 0x2631
   11fa8:	movt	r0, #2
   11fac:	movt	r1, #1
   11fb0:	ldr	r2, [r0]
   11fb4:	movw	r0, #12424	; 0x3088
   11fb8:	movt	r0, #2
   11fbc:	ldr	r0, [r0]
   11fc0:	bl	10930 <fprintf@plt>
   11fc4:	bl	11e48 <abort@plt+0x14ac>
   11fc8:	blx	r0
   11fcc:	bl	11e48 <abort@plt+0x14ac>
   11fd0:	push	{r4, r5, r6, sl, fp, lr}
   11fd4:	add	fp, sp, #16
   11fd8:	movw	r5, #12542	; 0x30fe
   11fdc:	movt	r5, #2
   11fe0:	ldrsh	r0, [r5]
   11fe4:	cmp	r0, #1
   11fe8:	blt	1201c <error@@Base+0x194>
   11fec:	mov	r6, #1
   11ff0:	sxth	r0, r6
   11ff4:	bl	11b90 <abort@plt+0x11f4>
   11ff8:	mov	r4, r0
   11ffc:	bl	108c4 <unlink@plt>
   12000:	mov	r0, r4
   12004:	bl	108a0 <free@plt>
   12008:	add	r0, r6, #1
   1200c:	sxth	r6, r0
   12010:	ldrsh	r0, [r5]
   12014:	cmp	r6, r0
   12018:	ble	11ff0 <error@@Base+0x168>
   1201c:	pop	{r4, r5, r6, sl, fp, pc}
   12020:	vmov.i32	q8, #0	; 0x00000000
   12024:	vst1.32	{d16-d17}, [r0]
   12028:	bx	lr
   1202c:	ldr	r3, [r0]
   12030:	mov	r2, r1
   12034:	mov	r1, #0
   12038:	b	1203c <error@@Base+0x1b4>
   1203c:	push	{r4, sl, fp, lr}
   12040:	add	fp, sp, #8
   12044:	cmp	r1, #0
   12048:	mov	r4, r0
   1204c:	stm	r2, {r1, r3}
   12050:	addne	r0, r1, #4
   12054:	cmp	r3, #0
   12058:	addeq	r3, r4, #4
   1205c:	str	r2, [r0]
   12060:	str	r2, [r3]
   12064:	ldr	r0, [r4, #8]
   12068:	cmp	r0, #0
   1206c:	beq	1207c <error@@Base+0x1f4>
   12070:	bl	108a0 <free@plt>
   12074:	mov	r0, #0
   12078:	str	r0, [r4, #8]
   1207c:	ldr	r0, [r4, #12]
   12080:	add	r0, r0, #1
   12084:	str	r0, [r4, #12]
   12088:	pop	{r4, sl, fp, pc}
   1208c:	mov	r2, r1
   12090:	ldr	r1, [r0, #4]
   12094:	mov	r3, #0
   12098:	b	1203c <error@@Base+0x1b4>
   1209c:	mov	r3, r2
   120a0:	mov	r2, r1
   120a4:	ldr	r1, [r3]
   120a8:	b	1203c <error@@Base+0x1b4>
   120ac:	ldr	r3, [r1, #4]
   120b0:	b	1203c <error@@Base+0x1b4>
   120b4:	push	{r4, r5, fp, lr}
   120b8:	add	fp, sp, #8
   120bc:	mov	r4, r0
   120c0:	ldm	r1, {r0, r2}
   120c4:	cmp	r0, #0
   120c8:	beq	120d8 <error@@Base+0x250>
   120cc:	str	r2, [r0, #4]
   120d0:	ldr	r2, [r1, #4]
   120d4:	b	120dc <error@@Base+0x254>
   120d8:	str	r2, [r4]
   120dc:	cmp	r2, #0
   120e0:	mov	r5, #0
   120e4:	addeq	r2, r4, #4
   120e8:	str	r0, [r2]
   120ec:	str	r5, [r1]
   120f0:	str	r5, [r1, #4]
   120f4:	ldr	r0, [r4, #8]
   120f8:	cmp	r0, #0
   120fc:	beq	12108 <error@@Base+0x280>
   12100:	bl	108a0 <free@plt>
   12104:	str	r5, [r4, #8]
   12108:	ldr	r0, [r4, #12]
   1210c:	sub	r0, r0, #1
   12110:	str	r0, [r4, #12]
   12114:	pop	{r4, r5, fp, pc}
   12118:	push	{r4, sl, fp, lr}
   1211c:	add	fp, sp, #8
   12120:	mov	r4, r0
   12124:	ldr	r0, [r0, #8]
   12128:	cmp	r0, #0
   1212c:	beq	12134 <error@@Base+0x2ac>
   12130:	pop	{r4, sl, fp, pc}
   12134:	ldr	r0, [r4, #12]
   12138:	cmp	r0, #0
   1213c:	beq	12130 <error@@Base+0x2a8>
   12140:	mov	r1, #4
   12144:	bl	119f4 <abort@plt+0x1058>
   12148:	str	r0, [r4, #8]
   1214c:	ldr	r1, [r4]
   12150:	cmp	r1, #0
   12154:	beq	12130 <error@@Base+0x2a8>
   12158:	str	r1, [r0]
   1215c:	ldr	r0, [r1, #4]
   12160:	cmp	r0, #0
   12164:	popeq	{r4, sl, fp, pc}
   12168:	mov	r1, #4
   1216c:	ldr	r2, [r4, #8]
   12170:	str	r0, [r2, r1]
   12174:	add	r1, r1, #4
   12178:	ldr	r0, [r0, #4]
   1217c:	cmp	r0, #0
   12180:	bne	1216c <error@@Base+0x2e4>
   12184:	b	12130 <error@@Base+0x2a8>
   12188:	push	{r4, r5, r6, sl, fp, lr}
   1218c:	add	fp, sp, #16
   12190:	ldr	r6, [r0]
   12194:	cmp	r6, #0
   12198:	beq	121c4 <error@@Base+0x33c>
   1219c:	mov	r4, r1
   121a0:	mov	r5, r0
   121a4:	mov	r0, r5
   121a8:	mov	r1, r6
   121ac:	bl	120b4 <error@@Base+0x22c>
   121b0:	mov	r0, r6
   121b4:	blx	r4
   121b8:	ldr	r6, [r5]
   121bc:	cmp	r6, #0
   121c0:	bne	121a4 <error@@Base+0x31c>
   121c4:	pop	{r4, r5, r6, sl, fp, pc}
   121c8:	cmp	r0, #2
   121cc:	bxlt	lr
   121d0:	movw	r3, #12552	; 0x3108
   121d4:	movt	r3, #2
   121d8:	str	r2, [r3]
   121dc:	movw	r2, #12548	; 0x3104
   121e0:	movt	r2, #2
   121e4:	str	r1, [r2]
   121e8:	sub	r1, r0, #1
   121ec:	mov	r0, #0
   121f0:	b	121f4 <error@@Base+0x36c>
   121f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121f8:	add	fp, sp, #28
   121fc:	sub	sp, sp, #4
   12200:	movw	r7, #12548	; 0x3104
   12204:	movw	sl, #12552	; 0x3108
   12208:	mov	r8, r1
   1220c:	mov	r9, r0
   12210:	movt	r7, #2
   12214:	movt	sl, #2
   12218:	ldr	r0, [r7]
   1221c:	cmp	r9, r8
   12220:	mov	r5, r8
   12224:	mov	r4, r9
   12228:	ldr	r6, [r0, r9, lsl #2]
   1222c:	bge	122dc <error@@Base+0x454>
   12230:	mov	r4, r9
   12234:	mov	r5, r8
   12238:	cmp	r4, r5
   1223c:	bge	12264 <error@@Base+0x3dc>
   12240:	ldr	r0, [r7]
   12244:	ldr	r2, [sl]
   12248:	ldr	r1, [r0, r5, lsl #2]
   1224c:	mov	r0, r6
   12250:	blx	r2
   12254:	cmn	r0, #1
   12258:	bgt	12264 <error@@Base+0x3dc>
   1225c:	sub	r5, r5, #1
   12260:	b	12238 <error@@Base+0x3b0>
   12264:	cmp	r4, r5
   12268:	beq	1227c <error@@Base+0x3f4>
   1226c:	ldr	r0, [r7]
   12270:	ldr	r1, [r0, r5, lsl #2]
   12274:	str	r1, [r0, r4, lsl #2]
   12278:	add	r4, r4, #1
   1227c:	cmp	r4, r5
   12280:	bge	122b0 <error@@Base+0x428>
   12284:	ldr	r0, [r7]
   12288:	ldr	r2, [sl]
   1228c:	ldr	r1, [r0, r4, lsl #2]
   12290:	mov	r0, r6
   12294:	blx	r2
   12298:	cmp	r0, #1
   1229c:	blt	122b0 <error@@Base+0x428>
   122a0:	add	r4, r4, #1
   122a4:	cmp	r5, r4
   122a8:	bne	12284 <error@@Base+0x3fc>
   122ac:	b	122d4 <error@@Base+0x44c>
   122b0:	cmp	r4, r5
   122b4:	beq	122c8 <error@@Base+0x440>
   122b8:	ldr	r0, [r7]
   122bc:	ldr	r1, [r0, r4, lsl #2]
   122c0:	str	r1, [r0, r5, lsl #2]
   122c4:	sub	r5, r5, #1
   122c8:	cmp	r4, r5
   122cc:	blt	12238 <error@@Base+0x3b0>
   122d0:	b	122d8 <error@@Base+0x450>
   122d4:	mov	r4, r5
   122d8:	ldr	r0, [r7]
   122dc:	sub	r1, r5, #1
   122e0:	str	r6, [r0, r5, lsl #2]
   122e4:	cmp	r1, r9
   122e8:	movgt	r0, r9
   122ec:	blgt	121f4 <error@@Base+0x36c>
   122f0:	add	r9, r4, #1
   122f4:	cmp	r9, r8
   122f8:	blt	12218 <error@@Base+0x390>
   122fc:	sub	sp, fp, #28
   12300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12304:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12308:	mov	r7, r0
   1230c:	ldr	r6, [pc, #72]	; 1235c <error@@Base+0x4d4>
   12310:	ldr	r5, [pc, #72]	; 12360 <error@@Base+0x4d8>
   12314:	add	r6, pc, r6
   12318:	add	r5, pc, r5
   1231c:	sub	r6, r6, r5
   12320:	mov	r8, r1
   12324:	mov	r9, r2
   12328:	bl	10850 <calloc@plt-0x20>
   1232c:	asrs	r6, r6, #2
   12330:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12334:	mov	r4, #0
   12338:	add	r4, r4, #1
   1233c:	ldr	r3, [r5], #4
   12340:	mov	r2, r9
   12344:	mov	r1, r8
   12348:	mov	r0, r7
   1234c:	blx	r3
   12350:	cmp	r6, r4
   12354:	bne	12338 <error@@Base+0x4b0>
   12358:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1235c:	andeq	r0, r1, r0, ror #23
   12360:	ldrdeq	r0, [r1], -r8
   12364:	bx	lr
   12368:	mov	r2, r1
   1236c:	mov	r1, r0
   12370:	mov	r0, #3
   12374:	b	108d0 <__xstat@plt>

Disassembly of section .fini:

00012378 <.fini>:
   12378:	push	{r3, lr}
   1237c:	pop	{r3, pc}
