
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010d3c <.init>:
   10d3c:	push	{r3, lr}
   10d40:	bl	10fe4 <close@plt+0x48>
   10d44:	pop	{r3, pc}

Disassembly of section .plt:

00010d48 <calloc@plt-0x14>:
   10d48:	push	{lr}		; (str lr, [sp, #-4]!)
   10d4c:	ldr	lr, [pc, #4]	; 10d58 <calloc@plt-0x4>
   10d50:	add	lr, pc, lr
   10d54:	ldr	pc, [lr, #8]!
   10d58:	andeq	r4, r1, r8, lsr #5

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #680]!	; 0x2a8

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #672]!	; 0x2a0

00010d74 <fsync@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #664]!	; 0x298

00010d80 <strcmp@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #656]!	; 0x290

00010d8c <fflush@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #648]!	; 0x288

00010d98 <free@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #640]!	; 0x280

00010da4 <_exit@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #632]!	; 0x278

00010db0 <memcpy@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #624]!	; 0x270

00010dbc <mbsinit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #616]!	; 0x268

00010dc8 <memcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #608]!	; 0x260

00010dd4 <dcgettext@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #600]!	; 0x258

00010de0 <syncfs@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #592]!	; 0x250

00010dec <realloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #584]!	; 0x248

00010df8 <textdomain@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #576]!	; 0x240

00010e04 <iswprint@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #568]!	; 0x238

00010e10 <lseek64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #560]!	; 0x230

00010e1c <__ctype_get_mb_cur_max@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #552]!	; 0x228

00010e28 <__fpending@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #544]!	; 0x220

00010e34 <ferror_unlocked@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #536]!	; 0x218

00010e40 <mbrtowc@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #528]!	; 0x210

00010e4c <error@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #520]!	; 0x208

00010e58 <open64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #512]!	; 0x200

00010e64 <malloc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e70 <__libc_start_main@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #496]!	; 0x1f0

00010e7c <__freading@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #20, 20	; 0x14000
   10e84:	ldr	pc, [ip, #488]!	; 0x1e8

00010e88 <__gmon_start__@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #20, 20	; 0x14000
   10e90:	ldr	pc, [ip, #480]!	; 0x1e0

00010e94 <getopt_long@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #20, 20	; 0x14000
   10e9c:	ldr	pc, [ip, #472]!	; 0x1d8

00010ea0 <__ctype_b_loc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #20, 20	; 0x14000
   10ea8:	ldr	pc, [ip, #464]!	; 0x1d0

00010eac <exit@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #456]!	; 0x1c8

00010eb8 <strlen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ec4 <__errno_location@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ed0 <__cxa_atexit@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #432]!	; 0x1b0

00010edc <memset@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ee8 <__printf_chk@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ef4 <fileno@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #408]!	; 0x198

00010f00 <__fprintf_chk@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #400]!	; 0x190

00010f0c <fclose@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #392]!	; 0x188

00010f18 <fseeko64@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #384]!	; 0x180

00010f24 <fcntl64@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #376]!	; 0x178

00010f30 <setlocale@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #368]!	; 0x170

00010f3c <strrchr@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #360]!	; 0x168

00010f48 <nl_langinfo@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #352]!	; 0x160

00010f54 <bindtextdomain@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #344]!	; 0x158

00010f60 <sync@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #336]!	; 0x150

00010f6c <fputs@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #328]!	; 0x148

00010f78 <strncmp@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #320]!	; 0x140

00010f84 <fdatasync@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #312]!	; 0x138

00010f90 <abort@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #304]!	; 0x130

00010f9c <close@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #296]!	; 0x128

Disassembly of section .text:

00010fa8 <.text>:
   10fa8:	mov	fp, #0
   10fac:	mov	lr, #0
   10fb0:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb4:	mov	r2, sp
   10fb8:	push	{r2}		; (str r2, [sp, #-4]!)
   10fbc:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc0:	ldr	ip, [pc, #16]	; 10fd8 <close@plt+0x3c>
   10fc4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc8:	ldr	r0, [pc, #12]	; 10fdc <close@plt+0x40>
   10fcc:	ldr	r3, [pc, #12]	; 10fe0 <close@plt+0x44>
   10fd0:	bl	10e70 <__libc_start_main@plt>
   10fd4:	bl	10f90 <abort@plt>
   10fd8:	andeq	r4, r1, r8, lsr r3
   10fdc:	strdeq	r1, [r1], -r4
   10fe0:	ldrdeq	r4, [r1], -r8
   10fe4:	ldr	r3, [pc, #20]	; 11000 <close@plt+0x64>
   10fe8:	ldr	r2, [pc, #20]	; 11004 <close@plt+0x68>
   10fec:	add	r3, pc, r3
   10ff0:	ldr	r2, [r3, r2]
   10ff4:	cmp	r2, #0
   10ff8:	bxeq	lr
   10ffc:	b	10e88 <__gmon_start__@plt>
   11000:	andeq	r4, r1, ip
   11004:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11008:	ldr	r0, [pc, #24]	; 11028 <close@plt+0x8c>
   1100c:	ldr	r3, [pc, #24]	; 1102c <close@plt+0x90>
   11010:	cmp	r3, r0
   11014:	bxeq	lr
   11018:	ldr	r3, [pc, #16]	; 11030 <close@plt+0x94>
   1101c:	cmp	r3, #0
   11020:	bxeq	lr
   11024:	bx	r3
   11028:	andeq	r5, r2, r8, lsr #2
   1102c:	andeq	r5, r2, r8, lsr #2
   11030:	andeq	r0, r0, r0
   11034:	ldr	r0, [pc, #36]	; 11060 <close@plt+0xc4>
   11038:	ldr	r1, [pc, #36]	; 11064 <close@plt+0xc8>
   1103c:	sub	r1, r1, r0
   11040:	asr	r1, r1, #2
   11044:	add	r1, r1, r1, lsr #31
   11048:	asrs	r1, r1, #1
   1104c:	bxeq	lr
   11050:	ldr	r3, [pc, #16]	; 11068 <close@plt+0xcc>
   11054:	cmp	r3, #0
   11058:	bxeq	lr
   1105c:	bx	r3
   11060:	andeq	r5, r2, r8, lsr #2
   11064:	andeq	r5, r2, r8, lsr #2
   11068:	andeq	r0, r0, r0
   1106c:	push	{r4, lr}
   11070:	ldr	r4, [pc, #24]	; 11090 <close@plt+0xf4>
   11074:	ldrb	r3, [r4]
   11078:	cmp	r3, #0
   1107c:	popne	{r4, pc}
   11080:	bl	11008 <close@plt+0x6c>
   11084:	mov	r3, #1
   11088:	strb	r3, [r4]
   1108c:	pop	{r4, pc}
   11090:	andeq	r5, r2, r0, asr #2
   11094:	b	11034 <close@plt+0x98>
   11098:	push	{fp, lr}
   1109c:	mov	fp, sp
   110a0:	sub	sp, sp, #56	; 0x38
   110a4:	mov	r8, r0
   110a8:	cmp	r0, #0
   110ac:	bne	112b4 <close@plt+0x318>
   110b0:	movw	r1, #17291	; 0x438b
   110b4:	mov	r0, #0
   110b8:	mov	r2, #5
   110bc:	movt	r1, #1
   110c0:	bl	10dd4 <dcgettext@plt>
   110c4:	mov	r1, r0
   110c8:	movw	r0, #20816	; 0x5150
   110cc:	movt	r0, #2
   110d0:	ldr	r2, [r0]
   110d4:	mov	r0, #1
   110d8:	bl	10ee8 <__printf_chk@plt>
   110dc:	movw	r1, #17321	; 0x43a9
   110e0:	mov	r0, #0
   110e4:	mov	r2, #5
   110e8:	movt	r1, #1
   110ec:	bl	10dd4 <dcgettext@plt>
   110f0:	movw	r9, #20796	; 0x513c
   110f4:	movt	r9, #2
   110f8:	ldr	r1, [r9]
   110fc:	bl	10d68 <fputs_unlocked@plt>
   11100:	movw	r1, #17458	; 0x4432
   11104:	mov	r0, #0
   11108:	mov	r2, #5
   1110c:	movt	r1, #1
   11110:	bl	10dd4 <dcgettext@plt>
   11114:	ldr	r1, [r9]
   11118:	bl	10d68 <fputs_unlocked@plt>
   1111c:	movw	r1, #17526	; 0x4476
   11120:	mov	r0, #0
   11124:	mov	r2, #5
   11128:	movt	r1, #1
   1112c:	bl	10dd4 <dcgettext@plt>
   11130:	ldr	r1, [r9]
   11134:	bl	10d68 <fputs_unlocked@plt>
   11138:	movw	r1, #17597	; 0x44bd
   1113c:	mov	r0, #0
   11140:	mov	r2, #5
   11144:	movt	r1, #1
   11148:	bl	10dd4 <dcgettext@plt>
   1114c:	ldr	r1, [r9]
   11150:	bl	10d68 <fputs_unlocked@plt>
   11154:	movw	r1, #17642	; 0x44ea
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	movt	r1, #1
   11164:	bl	10dd4 <dcgettext@plt>
   11168:	ldr	r1, [r9]
   1116c:	bl	10d68 <fputs_unlocked@plt>
   11170:	movw	r0, #18352	; 0x47b0
   11174:	mov	r6, sp
   11178:	movt	r0, #1
   1117c:	mov	r1, r6
   11180:	ldm	r0!, {r2, r3, r4, r5}
   11184:	stmia	r1!, {r2, r3, r4, r5}
   11188:	ldm	r0!, {r2, r3, r4, r5, r7}
   1118c:	stmia	r1!, {r2, r3, r4, r5, r7}
   11190:	ldm	r0, {r2, r3, r4, r5, r7}
   11194:	stm	r1, {r2, r3, r4, r5, r7}
   11198:	movw	r1, #17853	; 0x45bd
   1119c:	movw	r5, #17696	; 0x4520
   111a0:	movt	r1, #1
   111a4:	movt	r5, #1
   111a8:	mov	r0, r5
   111ac:	bl	10d80 <strcmp@plt>
   111b0:	cmp	r0, #0
   111b4:	ldrne	r1, [r6, #8]!
   111b8:	cmpne	r1, #0
   111bc:	bne	111a8 <close@plt+0x20c>
   111c0:	ldr	r6, [r6, #4]
   111c4:	movw	r1, #17948	; 0x461c
   111c8:	mov	r0, #0
   111cc:	mov	r2, #5
   111d0:	movt	r1, #1
   111d4:	bl	10dd4 <dcgettext@plt>
   111d8:	movw	r2, #17728	; 0x4540
   111dc:	movw	r3, #17971	; 0x4633
   111e0:	mov	r1, r0
   111e4:	mov	r0, #1
   111e8:	movt	r2, #1
   111ec:	movt	r3, #1
   111f0:	bl	10ee8 <__printf_chk@plt>
   111f4:	cmp	r6, #0
   111f8:	mov	r0, #5
   111fc:	mov	r1, #0
   11200:	moveq	r6, r5
   11204:	bl	10f30 <setlocale@plt>
   11208:	cmp	r0, #0
   1120c:	beq	11244 <close@plt+0x2a8>
   11210:	movw	r1, #18011	; 0x465b
   11214:	mov	r2, #3
   11218:	movt	r1, #1
   1121c:	bl	10f78 <strncmp@plt>
   11220:	cmp	r0, #0
   11224:	beq	11244 <close@plt+0x2a8>
   11228:	movw	r1, #18015	; 0x465f
   1122c:	mov	r0, #0
   11230:	mov	r2, #5
   11234:	movt	r1, #1
   11238:	bl	10dd4 <dcgettext@plt>
   1123c:	ldr	r1, [r9]
   11240:	bl	10d68 <fputs_unlocked@plt>
   11244:	movw	r1, #18086	; 0x46a6
   11248:	mov	r0, #0
   1124c:	mov	r2, #5
   11250:	movt	r1, #1
   11254:	bl	10dd4 <dcgettext@plt>
   11258:	movw	r2, #17971	; 0x4633
   1125c:	mov	r1, r0
   11260:	mov	r0, #1
   11264:	mov	r3, r5
   11268:	movt	r2, #1
   1126c:	bl	10ee8 <__printf_chk@plt>
   11270:	movw	r1, #18113	; 0x46c1
   11274:	mov	r0, #0
   11278:	mov	r2, #5
   1127c:	movt	r1, #1
   11280:	bl	10dd4 <dcgettext@plt>
   11284:	movw	r3, #17457	; 0x4431
   11288:	mov	r1, r0
   1128c:	movw	r0, #17881	; 0x45d9
   11290:	cmp	r6, r5
   11294:	mov	r2, r6
   11298:	movt	r0, #1
   1129c:	movt	r3, #1
   112a0:	moveq	r3, r0
   112a4:	mov	r0, #1
   112a8:	bl	10ee8 <__printf_chk@plt>
   112ac:	mov	r0, r8
   112b0:	bl	10eac <exit@plt>
   112b4:	movw	r0, #20792	; 0x5138
   112b8:	movw	r1, #17252	; 0x4364
   112bc:	mov	r2, #5
   112c0:	movt	r0, #2
   112c4:	movt	r1, #1
   112c8:	ldr	r5, [r0]
   112cc:	mov	r0, #0
   112d0:	bl	10dd4 <dcgettext@plt>
   112d4:	mov	r2, r0
   112d8:	movw	r0, #20816	; 0x5150
   112dc:	mov	r1, #1
   112e0:	movt	r0, #2
   112e4:	ldr	r3, [r0]
   112e8:	mov	r0, r5
   112ec:	bl	10f00 <__fprintf_chk@plt>
   112f0:	b	112ac <close@plt+0x310>
   112f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112f8:	add	fp, sp, #28
   112fc:	sub	sp, sp, #20
   11300:	mov	r9, r0
   11304:	ldr	r0, [r1]
   11308:	str	r1, [sp, #16]
   1130c:	bl	11968 <close@plt+0x9cc>
   11310:	movw	r1, #17457	; 0x4431
   11314:	mov	r0, #6
   11318:	movt	r1, #1
   1131c:	bl	10f30 <setlocale@plt>
   11320:	movw	r6, #17732	; 0x4544
   11324:	movw	r1, #17701	; 0x4525
   11328:	movt	r6, #1
   1132c:	movt	r1, #1
   11330:	mov	r0, r6
   11334:	bl	10f54 <bindtextdomain@plt>
   11338:	mov	r0, r6
   1133c:	bl	10df8 <textdomain@plt>
   11340:	movw	r0, #5800	; 0x16a8
   11344:	movt	r0, #1
   11348:	bl	1433c <close@plt+0x33a0>
   1134c:	movw	r6, #17725	; 0x453d
   11350:	movw	r7, #18272	; 0x4760
   11354:	mov	r8, #0
   11358:	mov	r4, #0
   1135c:	mov	r5, #0
   11360:	movt	r6, #1
   11364:	movt	r7, #1
   11368:	ldr	r1, [sp, #16]
   1136c:	mov	r0, r9
   11370:	mov	r2, r6
   11374:	mov	r3, r7
   11378:	str	r8, [sp]
   1137c:	bl	10e94 <getopt_long@plt>
   11380:	cmp	r0, #99	; 0x63
   11384:	ble	113a8 <close@plt+0x40c>
   11388:	cmp	r0, #100	; 0x64
   1138c:	bne	11398 <close@plt+0x3fc>
   11390:	mov	r4, #1
   11394:	b	11368 <close@plt+0x3cc>
   11398:	mov	r5, #1
   1139c:	cmp	r0, #102	; 0x66
   113a0:	beq	11368 <close@plt+0x3cc>
   113a4:	b	11680 <close@plt+0x6e4>
   113a8:	cmn	r0, #1
   113ac:	bne	115e4 <close@plt+0x648>
   113b0:	movw	r0, #20784	; 0x5130
   113b4:	eor	r1, r4, #1
   113b8:	movt	r0, #2
   113bc:	tst	r1, #1
   113c0:	ldr	r0, [r0]
   113c4:	eoreq	r2, r5, #1
   113c8:	tsteq	r2, #1
   113cc:	beq	11650 <close@plt+0x6b4>
   113d0:	mov	r2, #0
   113d4:	cmp	r0, r9
   113d8:	movwlt	r2, #1
   113dc:	orr	r1, r2, r1
   113e0:	tst	r1, #1
   113e4:	beq	1165c <close@plt+0x6c0>
   113e8:	cmp	r0, r9
   113ec:	bge	115d4 <close@plt+0x638>
   113f0:	and	r1, r4, #1
   113f4:	tst	r5, #1
   113f8:	mov	sl, #1
   113fc:	movwne	r1, #2
   11400:	str	r1, [sp, #12]
   11404:	ldr	r1, [sp, #16]
   11408:	ldr	r6, [r1, r0, lsl #2]
   1140c:	mov	r1, #2048	; 0x800
   11410:	mov	r0, r6
   11414:	bl	10e58 <open64@plt>
   11418:	mov	r8, r0
   1141c:	cmn	r0, #1
   11420:	bgt	11444 <close@plt+0x4a8>
   11424:	bl	10ec4 <__errno_location@plt>
   11428:	ldr	r4, [r0]
   1142c:	mov	r0, r6
   11430:	movw	r1, #2049	; 0x801
   11434:	bl	10e58 <open64@plt>
   11438:	mov	r8, r0
   1143c:	cmn	r0, #1
   11440:	ble	114dc <close@plt+0x540>
   11444:	mov	r0, r8
   11448:	mov	r1, #3
   1144c:	bl	11790 <close@plt+0x7f4>
   11450:	cmn	r0, #1
   11454:	beq	11498 <close@plt+0x4fc>
   11458:	bic	r2, r0, #2048	; 0x800
   1145c:	mov	r0, r8
   11460:	mov	r1, #4
   11464:	bl	11790 <close@plt+0x7f4>
   11468:	cmn	r0, #1
   1146c:	ble	11498 <close@plt+0x4fc>
   11470:	ldr	r0, [sp, #12]
   11474:	cmp	r0, #0
   11478:	beq	114fc <close@plt+0x560>
   1147c:	cmp	r0, #2
   11480:	beq	114f0 <close@plt+0x554>
   11484:	cmp	r0, #1
   11488:	bne	11510 <close@plt+0x574>
   1148c:	mov	r0, r8
   11490:	bl	10f84 <fdatasync@plt>
   11494:	b	11504 <close@plt+0x568>
   11498:	bl	10ec4 <__errno_location@plt>
   1149c:	ldr	r7, [r0]
   114a0:	movw	r1, #18199	; 0x4717
   114a4:	mov	r0, #0
   114a8:	mov	r2, #5
   114ac:	mov	r5, #0
   114b0:	movt	r1, #1
   114b4:	bl	10dd4 <dcgettext@plt>
   114b8:	mov	r4, r0
   114bc:	mov	r0, #4
   114c0:	mov	r1, r6
   114c4:	bl	13034 <close@plt+0x2098>
   114c8:	mov	r3, r0
   114cc:	mov	r0, #0
   114d0:	mov	r1, r7
   114d4:	mov	r2, r4
   114d8:	b	11550 <close@plt+0x5b4>
   114dc:	movw	r1, #18182	; 0x4706
   114e0:	mov	r5, #0
   114e4:	mov	r0, #0
   114e8:	movt	r1, #1
   114ec:	b	1157c <close@plt+0x5e0>
   114f0:	mov	r0, r8
   114f4:	bl	10de0 <syncfs@plt>
   114f8:	b	11504 <close@plt+0x568>
   114fc:	mov	r0, r8
   11500:	bl	10d74 <fsync@plt>
   11504:	mov	r5, #1
   11508:	cmn	r0, #1
   1150c:	bgt	11554 <close@plt+0x5b8>
   11510:	bl	10ec4 <__errno_location@plt>
   11514:	ldr	r4, [r0]
   11518:	movw	r1, #18235	; 0x473b
   1151c:	mov	r0, #0
   11520:	mov	r2, #5
   11524:	mov	r5, #0
   11528:	movt	r1, #1
   1152c:	bl	10dd4 <dcgettext@plt>
   11530:	mov	r7, r0
   11534:	mov	r0, #4
   11538:	mov	r1, r6
   1153c:	bl	13034 <close@plt+0x2098>
   11540:	mov	r3, r0
   11544:	mov	r0, #0
   11548:	mov	r1, r4
   1154c:	mov	r2, r7
   11550:	bl	10e4c <error@plt>
   11554:	mov	r0, r8
   11558:	bl	10f9c <close@plt>
   1155c:	cmn	r0, #1
   11560:	bgt	115a8 <close@plt+0x60c>
   11564:	bl	10ec4 <__errno_location@plt>
   11568:	ldr	r4, [r0]
   1156c:	movw	r1, #18252	; 0x474c
   11570:	mov	r5, #0
   11574:	mov	r0, #0
   11578:	movt	r1, #1
   1157c:	mov	r2, #5
   11580:	bl	10dd4 <dcgettext@plt>
   11584:	mov	r7, r0
   11588:	mov	r0, #4
   1158c:	mov	r1, r6
   11590:	bl	13034 <close@plt+0x2098>
   11594:	mov	r3, r0
   11598:	mov	r0, #0
   1159c:	mov	r1, r4
   115a0:	mov	r2, r7
   115a4:	bl	10e4c <error@plt>
   115a8:	movw	r0, #20784	; 0x5130
   115ac:	and	sl, sl, r5
   115b0:	movt	r0, #2
   115b4:	mov	r1, r0
   115b8:	ldr	r0, [r0]
   115bc:	add	r0, r0, #1
   115c0:	cmp	r0, r9
   115c4:	str	r0, [r1]
   115c8:	blt	11404 <close@plt+0x468>
   115cc:	eor	r0, sl, #1
   115d0:	b	115dc <close@plt+0x640>
   115d4:	bl	10f60 <sync@plt>
   115d8:	mov	r0, #0
   115dc:	sub	sp, fp, #28
   115e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115e4:	cmn	r0, #3
   115e8:	bne	11640 <close@plt+0x6a4>
   115ec:	movw	r0, #20704	; 0x50e0
   115f0:	movw	r2, #17755	; 0x455b
   115f4:	mov	r1, #0
   115f8:	movw	r7, #17742	; 0x454e
   115fc:	movt	r0, #2
   11600:	movt	r2, #1
   11604:	str	r1, [sp, #8]
   11608:	movw	r1, #17696	; 0x4520
   1160c:	movt	r7, #1
   11610:	ldr	r3, [r0]
   11614:	movw	r0, #20796	; 0x513c
   11618:	str	r2, [sp, #4]
   1161c:	movw	r2, #17728	; 0x4540
   11620:	movt	r1, #1
   11624:	str	r7, [sp]
   11628:	movt	r0, #2
   1162c:	movt	r2, #1
   11630:	ldr	r0, [r0]
   11634:	bl	13858 <close@plt+0x28bc>
   11638:	mov	r0, #0
   1163c:	bl	10eac <exit@plt>
   11640:	cmn	r0, #2
   11644:	bne	11680 <close@plt+0x6e4>
   11648:	mov	r0, #0
   1164c:	bl	11098 <close@plt+0xfc>
   11650:	movw	r1, #17773	; 0x456d
   11654:	movt	r1, #1
   11658:	b	11664 <close@plt+0x6c8>
   1165c:	movw	r1, #17818	; 0x459a
   11660:	movt	r1, #1
   11664:	mov	r0, #0
   11668:	mov	r2, #5
   1166c:	bl	10dd4 <dcgettext@plt>
   11670:	mov	r2, r0
   11674:	mov	r0, #1
   11678:	mov	r1, #0
   1167c:	bl	10e4c <error@plt>
   11680:	mov	r0, #1
   11684:	bl	11098 <close@plt+0xfc>
   11688:	movw	r1, #20804	; 0x5144
   1168c:	movt	r1, #2
   11690:	str	r0, [r1]
   11694:	bx	lr
   11698:	movw	r1, #20808	; 0x5148
   1169c:	movt	r1, #2
   116a0:	strb	r0, [r1]
   116a4:	bx	lr
   116a8:	push	{r4, r5, r6, sl, fp, lr}
   116ac:	add	fp, sp, #16
   116b0:	sub	sp, sp, #8
   116b4:	movw	r0, #20796	; 0x513c
   116b8:	movt	r0, #2
   116bc:	ldr	r0, [r0]
   116c0:	bl	13ec8 <close@plt+0x2f2c>
   116c4:	cmp	r0, #0
   116c8:	beq	116f0 <close@plt+0x754>
   116cc:	movw	r0, #20808	; 0x5148
   116d0:	movt	r0, #2
   116d4:	ldrb	r0, [r0]
   116d8:	cmp	r0, #0
   116dc:	beq	11710 <close@plt+0x774>
   116e0:	bl	10ec4 <__errno_location@plt>
   116e4:	ldr	r0, [r0]
   116e8:	cmp	r0, #32
   116ec:	bne	11710 <close@plt+0x774>
   116f0:	movw	r0, #20792	; 0x5138
   116f4:	movt	r0, #2
   116f8:	ldr	r0, [r0]
   116fc:	bl	13ec8 <close@plt+0x2f2c>
   11700:	cmp	r0, #0
   11704:	subeq	sp, fp, #16
   11708:	popeq	{r4, r5, r6, sl, fp, pc}
   1170c:	b	11780 <close@plt+0x7e4>
   11710:	movw	r1, #18423	; 0x47f7
   11714:	mov	r0, #0
   11718:	mov	r2, #5
   1171c:	movt	r1, #1
   11720:	bl	10dd4 <dcgettext@plt>
   11724:	mov	r4, r0
   11728:	movw	r0, #20804	; 0x5144
   1172c:	movt	r0, #2
   11730:	ldr	r6, [r0]
   11734:	bl	10ec4 <__errno_location@plt>
   11738:	ldr	r5, [r0]
   1173c:	cmp	r6, #0
   11740:	bne	1175c <close@plt+0x7c0>
   11744:	movw	r2, #18439	; 0x4807
   11748:	mov	r0, #0
   1174c:	mov	r1, r5
   11750:	mov	r3, r4
   11754:	movt	r2, #1
   11758:	b	1177c <close@plt+0x7e0>
   1175c:	mov	r0, r6
   11760:	bl	1312c <close@plt+0x2190>
   11764:	movw	r2, #18435	; 0x4803
   11768:	mov	r3, r0
   1176c:	str	r4, [sp]
   11770:	mov	r0, #0
   11774:	mov	r1, r5
   11778:	movt	r2, #1
   1177c:	bl	10e4c <error@plt>
   11780:	movw	r0, #20708	; 0x50e4
   11784:	movt	r0, #2
   11788:	ldr	r0, [r0]
   1178c:	bl	10da4 <_exit@plt>
   11790:	sub	sp, sp, #8
   11794:	push	{r4, r5, r6, r7, fp, lr}
   11798:	add	fp, sp, #16
   1179c:	sub	sp, sp, #8
   117a0:	mov	r5, r0
   117a4:	add	r0, fp, #8
   117a8:	cmp	r1, #11
   117ac:	str	r3, [fp, #12]
   117b0:	str	r2, [fp, #8]
   117b4:	str	r0, [sp, #4]
   117b8:	bhi	117f4 <close@plt+0x858>
   117bc:	mov	r0, #1
   117c0:	movw	r2, #1300	; 0x514
   117c4:	tst	r2, r0, lsl r1
   117c8:	bne	118ac <close@plt+0x910>
   117cc:	movw	r2, #2570	; 0xa0a
   117d0:	tst	r2, r0, lsl r1
   117d4:	bne	1181c <close@plt+0x880>
   117d8:	cmp	r1, #0
   117dc:	bne	117f4 <close@plt+0x858>
   117e0:	ldr	r0, [sp, #4]
   117e4:	add	r1, r0, #4
   117e8:	str	r1, [sp, #4]
   117ec:	mov	r1, #0
   117f0:	b	118b8 <close@plt+0x91c>
   117f4:	sub	r0, r1, #1024	; 0x400
   117f8:	cmp	r0, #10
   117fc:	bhi	118ac <close@plt+0x910>
   11800:	mov	r2, #1
   11804:	movw	r3, #645	; 0x285
   11808:	tst	r3, r2, lsl r0
   1180c:	bne	118ac <close@plt+0x910>
   11810:	movw	r3, #1282	; 0x502
   11814:	tst	r3, r2, lsl r0
   11818:	beq	11828 <close@plt+0x88c>
   1181c:	mov	r0, r5
   11820:	bl	10f24 <fcntl64@plt>
   11824:	b	118c4 <close@plt+0x928>
   11828:	cmp	r0, #6
   1182c:	bne	118ac <close@plt+0x910>
   11830:	ldr	r0, [sp, #4]
   11834:	movw	r7, #20812	; 0x514c
   11838:	movt	r7, #2
   1183c:	add	r1, r0, #4
   11840:	str	r1, [sp, #4]
   11844:	ldr	r6, [r0]
   11848:	ldr	r0, [r7]
   1184c:	cmp	r0, #0
   11850:	blt	118e8 <close@plt+0x94c>
   11854:	mov	r0, r5
   11858:	movw	r1, #1030	; 0x406
   1185c:	mov	r2, r6
   11860:	bl	10f24 <fcntl64@plt>
   11864:	mov	r4, r0
   11868:	cmn	r0, #1
   1186c:	bgt	118dc <close@plt+0x940>
   11870:	bl	10ec4 <__errno_location@plt>
   11874:	ldr	r0, [r0]
   11878:	cmp	r0, #22
   1187c:	bne	118dc <close@plt+0x940>
   11880:	mov	r0, r5
   11884:	mov	r1, #0
   11888:	mov	r2, r6
   1188c:	bl	10f24 <fcntl64@plt>
   11890:	mov	r4, r0
   11894:	cmp	r0, #0
   11898:	blt	118c8 <close@plt+0x92c>
   1189c:	mvn	r0, #0
   118a0:	str	r0, [r7]
   118a4:	mov	r0, #1
   118a8:	b	1190c <close@plt+0x970>
   118ac:	ldr	r0, [sp, #4]
   118b0:	add	r2, r0, #4
   118b4:	str	r2, [sp, #4]
   118b8:	ldr	r2, [r0]
   118bc:	mov	r0, r5
   118c0:	bl	10f24 <fcntl64@plt>
   118c4:	mov	r4, r0
   118c8:	mov	r0, r4
   118cc:	sub	sp, fp, #16
   118d0:	pop	{r4, r5, r6, r7, fp, lr}
   118d4:	add	sp, sp, #8
   118d8:	bx	lr
   118dc:	mov	r0, #1
   118e0:	str	r0, [r7]
   118e4:	b	118c8 <close@plt+0x92c>
   118e8:	mov	r0, r5
   118ec:	mov	r1, #0
   118f0:	mov	r2, r6
   118f4:	bl	10f24 <fcntl64@plt>
   118f8:	mov	r4, r0
   118fc:	ldr	r0, [r7]
   11900:	add	r0, r0, #1
   11904:	clz	r0, r0
   11908:	lsr	r0, r0, #5
   1190c:	cmp	r0, #0
   11910:	beq	118c8 <close@plt+0x92c>
   11914:	cmp	r4, #0
   11918:	blt	118c8 <close@plt+0x92c>
   1191c:	mov	r0, r4
   11920:	mov	r1, #1
   11924:	bl	10f24 <fcntl64@plt>
   11928:	cmp	r0, #0
   1192c:	blt	11948 <close@plt+0x9ac>
   11930:	orr	r2, r0, #1
   11934:	mov	r0, r4
   11938:	mov	r1, #2
   1193c:	bl	10f24 <fcntl64@plt>
   11940:	cmn	r0, #1
   11944:	bne	118c8 <close@plt+0x92c>
   11948:	bl	10ec4 <__errno_location@plt>
   1194c:	ldr	r6, [r0]
   11950:	mov	r5, r0
   11954:	mov	r0, r4
   11958:	bl	10f9c <close@plt>
   1195c:	str	r6, [r5]
   11960:	mvn	r4, #0
   11964:	b	118c8 <close@plt+0x92c>
   11968:	push	{r4, r5, fp, lr}
   1196c:	add	fp, sp, #8
   11970:	cmp	r0, #0
   11974:	beq	11a08 <close@plt+0xa6c>
   11978:	mov	r1, #47	; 0x2f
   1197c:	mov	r4, r0
   11980:	bl	10f3c <strrchr@plt>
   11984:	cmp	r0, #0
   11988:	mov	r5, r4
   1198c:	addne	r5, r0, #1
   11990:	sub	r0, r5, r4
   11994:	cmp	r0, #7
   11998:	blt	119ec <close@plt+0xa50>
   1199c:	movw	r1, #18498	; 0x4842
   119a0:	sub	r0, r5, #7
   119a4:	mov	r2, #7
   119a8:	movt	r1, #1
   119ac:	bl	10f78 <strncmp@plt>
   119b0:	cmp	r0, #0
   119b4:	bne	119ec <close@plt+0xa50>
   119b8:	movw	r1, #18506	; 0x484a
   119bc:	mov	r0, r5
   119c0:	mov	r2, #3
   119c4:	movt	r1, #1
   119c8:	bl	10f78 <strncmp@plt>
   119cc:	cmp	r0, #0
   119d0:	beq	119dc <close@plt+0xa40>
   119d4:	mov	r4, r5
   119d8:	b	119ec <close@plt+0xa50>
   119dc:	movw	r0, #20776	; 0x5128
   119e0:	add	r4, r5, #3
   119e4:	movt	r0, #2
   119e8:	str	r4, [r0]
   119ec:	movw	r0, #20780	; 0x512c
   119f0:	movt	r0, #2
   119f4:	str	r4, [r0]
   119f8:	movw	r0, #20816	; 0x5150
   119fc:	movt	r0, #2
   11a00:	str	r4, [r0]
   11a04:	pop	{r4, r5, fp, pc}
   11a08:	movw	r0, #20792	; 0x5138
   11a0c:	movt	r0, #2
   11a10:	ldr	r1, [r0]
   11a14:	movw	r0, #18442	; 0x480a
   11a18:	movt	r0, #1
   11a1c:	bl	10f6c <fputs@plt>
   11a20:	bl	10f90 <abort@plt>
   11a24:	push	{r4, r5, r6, sl, fp, lr}
   11a28:	add	fp, sp, #16
   11a2c:	mov	r4, r0
   11a30:	movw	r0, #20824	; 0x5158
   11a34:	movt	r0, #2
   11a38:	cmp	r4, #0
   11a3c:	moveq	r4, r0
   11a40:	bl	10ec4 <__errno_location@plt>
   11a44:	ldr	r6, [r0]
   11a48:	mov	r5, r0
   11a4c:	mov	r0, r4
   11a50:	mov	r1, #48	; 0x30
   11a54:	bl	13cb0 <close@plt+0x2d14>
   11a58:	str	r6, [r5]
   11a5c:	pop	{r4, r5, r6, sl, fp, pc}
   11a60:	movw	r1, #20824	; 0x5158
   11a64:	cmp	r0, #0
   11a68:	movt	r1, #2
   11a6c:	movne	r1, r0
   11a70:	ldr	r0, [r1]
   11a74:	bx	lr
   11a78:	movw	r2, #20824	; 0x5158
   11a7c:	cmp	r0, #0
   11a80:	movt	r2, #2
   11a84:	movne	r2, r0
   11a88:	str	r1, [r2]
   11a8c:	bx	lr
   11a90:	movw	r3, #20824	; 0x5158
   11a94:	cmp	r0, #0
   11a98:	movt	r3, #2
   11a9c:	movne	r3, r0
   11aa0:	ubfx	r0, r1, #5, #3
   11aa4:	and	r1, r1, #31
   11aa8:	add	r0, r3, r0, lsl #2
   11aac:	ldr	r3, [r0, #8]
   11ab0:	eor	r2, r2, r3, lsr r1
   11ab4:	and	r2, r2, #1
   11ab8:	eor	r2, r3, r2, lsl r1
   11abc:	str	r2, [r0, #8]
   11ac0:	mov	r0, #1
   11ac4:	and	r0, r0, r3, lsr r1
   11ac8:	bx	lr
   11acc:	movw	r2, #20824	; 0x5158
   11ad0:	cmp	r0, #0
   11ad4:	movt	r2, #2
   11ad8:	movne	r2, r0
   11adc:	ldr	r0, [r2, #4]
   11ae0:	str	r1, [r2, #4]
   11ae4:	bx	lr
   11ae8:	movw	r3, #20824	; 0x5158
   11aec:	cmp	r0, #0
   11af0:	movt	r3, #2
   11af4:	movne	r3, r0
   11af8:	cmp	r1, #0
   11afc:	mov	r0, #10
   11b00:	cmpne	r2, #0
   11b04:	str	r0, [r3]
   11b08:	bne	11b18 <close@plt+0xb7c>
   11b0c:	push	{fp, lr}
   11b10:	mov	fp, sp
   11b14:	bl	10f90 <abort@plt>
   11b18:	str	r1, [r3, #40]	; 0x28
   11b1c:	str	r2, [r3, #44]	; 0x2c
   11b20:	bx	lr
   11b24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b28:	add	fp, sp, #28
   11b2c:	sub	sp, sp, #20
   11b30:	mov	r7, r0
   11b34:	ldr	r0, [fp, #8]
   11b38:	movw	r5, #20824	; 0x5158
   11b3c:	mov	r8, r3
   11b40:	mov	r9, r2
   11b44:	mov	sl, r1
   11b48:	movt	r5, #2
   11b4c:	cmp	r0, #0
   11b50:	movne	r5, r0
   11b54:	bl	10ec4 <__errno_location@plt>
   11b58:	mov	r4, r0
   11b5c:	ldm	r5, {r0, r1}
   11b60:	ldr	r2, [r5, #40]	; 0x28
   11b64:	ldr	r3, [r5, #44]	; 0x2c
   11b68:	add	r5, r5, #8
   11b6c:	ldr	r6, [r4]
   11b70:	stm	sp, {r0, r1, r5}
   11b74:	str	r2, [sp, #12]
   11b78:	str	r3, [sp, #16]
   11b7c:	mov	r0, r7
   11b80:	mov	r1, sl
   11b84:	mov	r2, r9
   11b88:	mov	r3, r8
   11b8c:	bl	11b9c <close@plt+0xc00>
   11b90:	str	r6, [r4]
   11b94:	sub	sp, fp, #28
   11b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ba0:	add	fp, sp, #28
   11ba4:	sub	sp, sp, #156	; 0x9c
   11ba8:	str	r0, [fp, #-56]	; 0xffffffc8
   11bac:	ldr	r0, [fp, #12]
   11bb0:	mov	r4, r1
   11bb4:	str	r3, [sp, #80]	; 0x50
   11bb8:	str	r2, [fp, #-84]	; 0xffffffac
   11bbc:	and	r1, r0, #4
   11bc0:	str	r1, [sp, #24]
   11bc4:	and	r1, r0, #1
   11bc8:	str	r1, [sp, #28]
   11bcc:	ubfx	r7, r0, #1, #1
   11bd0:	bl	10e1c <__ctype_get_mb_cur_max@plt>
   11bd4:	str	r0, [sp, #32]
   11bd8:	ldr	r0, [fp, #24]
   11bdc:	ldr	r9, [fp, #8]
   11be0:	mov	r2, #0
   11be4:	mov	r1, #0
   11be8:	mov	r5, #0
   11bec:	str	r2, [sp, #52]	; 0x34
   11bf0:	mov	r2, #1
   11bf4:	str	r0, [sp, #72]	; 0x48
   11bf8:	ldr	r0, [fp, #20]
   11bfc:	str	r0, [sp, #64]	; 0x40
   11c00:	mov	r0, #0
   11c04:	str	r0, [sp, #92]	; 0x5c
   11c08:	mov	r0, #0
   11c0c:	str	r0, [fp, #-76]	; 0xffffffb4
   11c10:	mov	r0, #0
   11c14:	cmp	r9, #10
   11c18:	str	r1, [sp, #68]	; 0x44
   11c1c:	bhi	12c1c <close@plt+0x1c80>
   11c20:	add	r1, pc, #28
   11c24:	ldr	ip, [fp, #-84]	; 0xffffffac
   11c28:	ldr	lr, [sp, #80]	; 0x50
   11c2c:	mov	r6, r4
   11c30:	mov	r8, #0
   11c34:	mov	r3, #1
   11c38:	mov	sl, #0
   11c3c:	mov	r4, r2
   11c40:	ldr	pc, [r1, r9, lsl #2]
   11c44:	andeq	r1, r1, r4, lsl sp
   11c48:	andeq	r1, r1, r0, asr sp
   11c4c:	andeq	r1, r1, r4, lsr #26
   11c50:	andeq	r1, r1, ip, lsl #26
   11c54:	andeq	r1, r1, r4, asr #26
   11c58:	muleq	r1, ip, sp
   11c5c:	andeq	r1, r1, r4, lsr sp
   11c60:	strdeq	r1, [r1], -ip
   11c64:	andeq	r1, r1, r0, ror ip
   11c68:	andeq	r1, r1, r0, ror ip
   11c6c:	muleq	r1, r8, ip
   11c70:	movw	r0, #18588	; 0x489c
   11c74:	mov	r1, r9
   11c78:	movt	r0, #1
   11c7c:	bl	13384 <close@plt+0x23e8>
   11c80:	str	r0, [sp, #64]	; 0x40
   11c84:	movw	r0, #18590	; 0x489e
   11c88:	mov	r1, r9
   11c8c:	movt	r0, #1
   11c90:	bl	13384 <close@plt+0x23e8>
   11c94:	str	r0, [sp, #72]	; 0x48
   11c98:	mov	r8, #0
   11c9c:	mov	sl, r7
   11ca0:	tst	r7, #1
   11ca4:	str	r5, [fp, #-48]	; 0xffffffd0
   11ca8:	bne	11ce4 <close@plt+0xd48>
   11cac:	ldr	r0, [sp, #64]	; 0x40
   11cb0:	ldrb	r0, [r0]
   11cb4:	cmp	r0, #0
   11cb8:	beq	11ce4 <close@plt+0xd48>
   11cbc:	ldr	r1, [sp, #64]	; 0x40
   11cc0:	mov	r8, #0
   11cc4:	add	r1, r1, #1
   11cc8:	cmp	r8, r6
   11ccc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   11cd0:	strbcc	r0, [r2, r8]
   11cd4:	ldrb	r0, [r1, r8]
   11cd8:	add	r8, r8, #1
   11cdc:	cmp	r0, #0
   11ce0:	bne	11cc8 <close@plt+0xd2c>
   11ce4:	ldr	r7, [sp, #72]	; 0x48
   11ce8:	mov	r0, r7
   11cec:	bl	10eb8 <strlen@plt>
   11cf0:	ldr	ip, [fp, #-84]	; 0xffffffac
   11cf4:	ldr	lr, [sp, #80]	; 0x50
   11cf8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   11cfc:	str	r0, [fp, #-76]	; 0xffffffb4
   11d00:	str	r7, [sp, #92]	; 0x5c
   11d04:	mov	r3, #1
   11d08:	b	11dfc <close@plt+0xe60>
   11d0c:	mov	r0, #1
   11d10:	b	11d50 <close@plt+0xdb4>
   11d14:	mov	r9, #0
   11d18:	mov	r8, #0
   11d1c:	mov	r3, r0
   11d20:	b	11df8 <close@plt+0xe5c>
   11d24:	tst	r7, #1
   11d28:	bne	11d50 <close@plt+0xdb4>
   11d2c:	mov	r3, r0
   11d30:	b	11d78 <close@plt+0xddc>
   11d34:	mov	r0, #1
   11d38:	mov	r8, #0
   11d3c:	mov	r9, #5
   11d40:	b	11db0 <close@plt+0xe14>
   11d44:	mov	r3, #1
   11d48:	tst	r7, #1
   11d4c:	beq	11d78 <close@plt+0xddc>
   11d50:	mov	r1, #1
   11d54:	mov	r8, #0
   11d58:	mov	r9, #2
   11d5c:	mov	r3, r0
   11d60:	mov	sl, #1
   11d64:	str	r1, [fp, #-76]	; 0xffffffb4
   11d68:	movw	r1, #18590	; 0x489e
   11d6c:	movt	r1, #1
   11d70:	str	r1, [sp, #92]	; 0x5c
   11d74:	b	11dfc <close@plt+0xe60>
   11d78:	cmp	r6, #0
   11d7c:	mov	r8, #1
   11d80:	mov	r9, #2
   11d84:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11d88:	movne	r0, #39	; 0x27
   11d8c:	strbne	r0, [r1]
   11d90:	movw	r0, #18590	; 0x489e
   11d94:	movt	r0, #1
   11d98:	b	11dec <close@plt+0xe50>
   11d9c:	mov	r9, #5
   11da0:	tst	r7, #1
   11da4:	beq	11dcc <close@plt+0xe30>
   11da8:	mov	r0, #1
   11dac:	mov	r8, #0
   11db0:	str	r0, [fp, #-76]	; 0xffffffb4
   11db4:	movw	r0, #18586	; 0x489a
   11db8:	mov	r3, #1
   11dbc:	mov	sl, #1
   11dc0:	movt	r0, #1
   11dc4:	str	r0, [sp, #92]	; 0x5c
   11dc8:	b	11dfc <close@plt+0xe60>
   11dcc:	cmp	r6, #0
   11dd0:	mov	r8, #1
   11dd4:	mov	r3, #1
   11dd8:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11ddc:	movne	r0, #34	; 0x22
   11de0:	strbne	r0, [r1]
   11de4:	movw	r0, #18586	; 0x489a
   11de8:	movt	r0, #1
   11dec:	str	r0, [sp, #92]	; 0x5c
   11df0:	mov	r0, #1
   11df4:	str	r0, [fp, #-76]	; 0xffffffb4
   11df8:	mov	sl, #0
   11dfc:	ldr	r0, [fp, #16]
   11e00:	mov	r7, #0
   11e04:	str	r9, [fp, #-64]	; 0xffffffc0
   11e08:	str	sl, [fp, #-72]	; 0xffffffb8
   11e0c:	str	r3, [sp, #84]	; 0x54
   11e10:	cmp	r0, #0
   11e14:	movwne	r0, #1
   11e18:	and	r0, r0, sl
   11e1c:	str	r0, [fp, #-88]	; 0xffffffa8
   11e20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11e24:	cmp	r0, #0
   11e28:	movwne	r0, #1
   11e2c:	subs	r2, r9, #2
   11e30:	and	r1, r0, sl
   11e34:	str	r2, [fp, #-80]	; 0xffffffb0
   11e38:	and	r1, r3, r1
   11e3c:	str	r1, [sp, #44]	; 0x2c
   11e40:	clz	r1, r2
   11e44:	lsr	r1, r1, #5
   11e48:	and	r1, r1, sl
   11e4c:	str	r1, [sp, #56]	; 0x38
   11e50:	mov	r1, r2
   11e54:	eor	r2, sl, #1
   11e58:	movwne	r1, #1
   11e5c:	str	r2, [sp, #88]	; 0x58
   11e60:	orr	r2, r1, r2
   11e64:	and	r1, r1, r3
   11e68:	and	r0, r0, r1
   11e6c:	str	r2, [sp, #60]	; 0x3c
   11e70:	str	r1, [fp, #-68]	; 0xffffffbc
   11e74:	str	r0, [fp, #-60]	; 0xffffffc4
   11e78:	eor	r0, r3, #1
   11e7c:	str	r0, [sp, #48]	; 0x30
   11e80:	cmn	lr, #1
   11e84:	beq	11e94 <close@plt+0xef8>
   11e88:	cmp	r7, lr
   11e8c:	bne	11ea0 <close@plt+0xf04>
   11e90:	b	12a4c <close@plt+0x1ab0>
   11e94:	ldrb	r0, [ip, r7]
   11e98:	cmp	r0, #0
   11e9c:	beq	12a54 <close@plt+0x1ab8>
   11ea0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11ea4:	mov	r9, #0
   11ea8:	str	r5, [fp, #-48]	; 0xffffffd0
   11eac:	str	r6, [fp, #-52]	; 0xffffffcc
   11eb0:	cmp	r0, #0
   11eb4:	beq	11ef4 <close@plt+0xf58>
   11eb8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11ebc:	mov	r5, r4
   11ec0:	add	r4, r7, r0
   11ec4:	cmp	r0, #2
   11ec8:	bcc	11ee4 <close@plt+0xf48>
   11ecc:	cmn	lr, #1
   11ed0:	bne	11ee4 <close@plt+0xf48>
   11ed4:	mov	r0, ip
   11ed8:	bl	10eb8 <strlen@plt>
   11edc:	ldr	ip, [fp, #-84]	; 0xffffffac
   11ee0:	mov	lr, r0
   11ee4:	cmp	r4, lr
   11ee8:	bls	11efc <close@plt+0xf60>
   11eec:	mov	r6, #0
   11ef0:	b	11f3c <close@plt+0xfa0>
   11ef4:	mov	r6, #0
   11ef8:	b	11f40 <close@plt+0xfa4>
   11efc:	ldr	r1, [sp, #92]	; 0x5c
   11f00:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11f04:	add	r0, ip, r7
   11f08:	mov	r4, lr
   11f0c:	bl	10dc8 <memcmp@plt>
   11f10:	ldr	r2, [sp, #88]	; 0x58
   11f14:	cmp	r0, #0
   11f18:	mov	r1, r0
   11f1c:	movwne	r1, #1
   11f20:	orr	r1, r1, r2
   11f24:	tst	r1, #1
   11f28:	beq	12ae8 <close@plt+0x1b4c>
   11f2c:	ldr	ip, [fp, #-84]	; 0xffffffac
   11f30:	clz	r0, r0
   11f34:	mov	lr, r4
   11f38:	lsr	r6, r0, #5
   11f3c:	mov	r4, r5
   11f40:	ldrb	r5, [ip, r7]
   11f44:	cmp	r5, #126	; 0x7e
   11f48:	bhi	12310 <close@plt+0x1374>
   11f4c:	add	r3, pc, #16
   11f50:	mov	sl, #1
   11f54:	mov	r2, #110	; 0x6e
   11f58:	mov	r0, #97	; 0x61
   11f5c:	mov	r1, #0
   11f60:	ldr	pc, [r3, r5, lsl #2]
   11f64:	strdeq	r2, [r1], -r4
   11f68:	andeq	r2, r1, r0, lsl r3
   11f6c:	andeq	r2, r1, r0, lsl r3
   11f70:	andeq	r2, r1, r0, lsl r3
   11f74:	andeq	r2, r1, r0, lsl r3
   11f78:	andeq	r2, r1, r0, lsl r3
   11f7c:	andeq	r2, r1, r0, lsl r3
   11f80:			; <UNDEFINED> instruction: 0x000123b4
   11f84:	ldrdeq	r2, [r1], -r4
   11f88:	andeq	r2, r1, ip, asr #3
   11f8c:	andeq	r2, r1, r0, ror #3
   11f90:	andeq	r2, r1, r4, ror #4
   11f94:	andeq	r2, r1, r4, asr #3
   11f98:	ldrdeq	r2, [r1], -ip
   11f9c:	andeq	r2, r1, r0, lsl r3
   11fa0:	andeq	r2, r1, r0, lsl r3
   11fa4:	andeq	r2, r1, r0, lsl r3
   11fa8:	andeq	r2, r1, r0, lsl r3
   11fac:	andeq	r2, r1, r0, lsl r3
   11fb0:	andeq	r2, r1, r0, lsl r3
   11fb4:	andeq	r2, r1, r0, lsl r3
   11fb8:	andeq	r2, r1, r0, lsl r3
   11fbc:	andeq	r2, r1, r0, lsl r3
   11fc0:	andeq	r2, r1, r0, lsl r3
   11fc4:	andeq	r2, r1, r0, lsl r3
   11fc8:	andeq	r2, r1, r0, lsl r3
   11fcc:	andeq	r2, r1, r0, lsl r3
   11fd0:	andeq	r2, r1, r0, lsl r3
   11fd4:	andeq	r2, r1, r0, lsl r3
   11fd8:	andeq	r2, r1, r0, lsl r3
   11fdc:	andeq	r2, r1, r0, lsl r3
   11fe0:	andeq	r2, r1, r0, lsl r3
   11fe4:	andeq	r2, r1, r4, ror r3
   11fe8:	andeq	r2, r1, r8, ror r3
   11fec:	andeq	r2, r1, r8, ror r3
   11ff0:	andeq	r2, r1, r4, ror r1
   11ff4:	andeq	r2, r1, r8, ror r3
   11ff8:	andeq	r2, r1, r0, ror #2
   11ffc:	andeq	r2, r1, r8, ror r3
   12000:	andeq	r2, r1, ip, ror #4
   12004:	andeq	r2, r1, r8, ror r3
   12008:	andeq	r2, r1, r8, ror r3
   1200c:	andeq	r2, r1, r8, ror r3
   12010:	andeq	r2, r1, r0, ror #2
   12014:	andeq	r2, r1, r0, ror #2
   12018:	andeq	r2, r1, r0, ror #2
   1201c:	andeq	r2, r1, r0, ror #2
   12020:	andeq	r2, r1, r0, ror #2
   12024:	andeq	r2, r1, r0, ror #2
   12028:	andeq	r2, r1, r0, ror #2
   1202c:	andeq	r2, r1, r0, ror #2
   12030:	andeq	r2, r1, r0, ror #2
   12034:	andeq	r2, r1, r0, ror #2
   12038:	andeq	r2, r1, r0, ror #2
   1203c:	andeq	r2, r1, r0, ror #2
   12040:	andeq	r2, r1, r0, ror #2
   12044:	andeq	r2, r1, r0, ror #2
   12048:	andeq	r2, r1, r0, ror #2
   1204c:	andeq	r2, r1, r0, ror #2
   12050:	andeq	r2, r1, r8, ror r3
   12054:	andeq	r2, r1, r8, ror r3
   12058:	andeq	r2, r1, r8, ror r3
   1205c:	andeq	r2, r1, r8, ror r3
   12060:	andeq	r2, r1, r8, lsr r2
   12064:	andeq	r2, r1, r0, lsl r3
   12068:	andeq	r2, r1, r0, ror #2
   1206c:	andeq	r2, r1, r0, ror #2
   12070:	andeq	r2, r1, r0, ror #2
   12074:	andeq	r2, r1, r0, ror #2
   12078:	andeq	r2, r1, r0, ror #2
   1207c:	andeq	r2, r1, r0, ror #2
   12080:	andeq	r2, r1, r0, ror #2
   12084:	andeq	r2, r1, r0, ror #2
   12088:	andeq	r2, r1, r0, ror #2
   1208c:	andeq	r2, r1, r0, ror #2
   12090:	andeq	r2, r1, r0, ror #2
   12094:	andeq	r2, r1, r0, ror #2
   12098:	andeq	r2, r1, r0, ror #2
   1209c:	andeq	r2, r1, r0, ror #2
   120a0:	andeq	r2, r1, r0, ror #2
   120a4:	andeq	r2, r1, r0, ror #2
   120a8:	andeq	r2, r1, r0, ror #2
   120ac:	andeq	r2, r1, r0, ror #2
   120b0:	andeq	r2, r1, r0, ror #2
   120b4:	andeq	r2, r1, r0, ror #2
   120b8:	andeq	r2, r1, r0, ror #2
   120bc:	andeq	r2, r1, r0, ror #2
   120c0:	andeq	r2, r1, r0, ror #2
   120c4:	andeq	r2, r1, r0, ror #2
   120c8:	andeq	r2, r1, r0, ror #2
   120cc:	andeq	r2, r1, r0, ror #2
   120d0:	andeq	r2, r1, r8, ror r3
   120d4:	andeq	r2, r1, r0, lsr #3
   120d8:	andeq	r2, r1, r0, ror #2
   120dc:	andeq	r2, r1, r8, ror r3
   120e0:	andeq	r2, r1, r0, ror #2
   120e4:	andeq	r2, r1, r8, ror r3
   120e8:	andeq	r2, r1, r0, ror #2
   120ec:	andeq	r2, r1, r0, ror #2
   120f0:	andeq	r2, r1, r0, ror #2
   120f4:	andeq	r2, r1, r0, ror #2
   120f8:	andeq	r2, r1, r0, ror #2
   120fc:	andeq	r2, r1, r0, ror #2
   12100:	andeq	r2, r1, r0, ror #2
   12104:	andeq	r2, r1, r0, ror #2
   12108:	andeq	r2, r1, r0, ror #2
   1210c:	andeq	r2, r1, r0, ror #2
   12110:	andeq	r2, r1, r0, ror #2
   12114:	andeq	r2, r1, r0, ror #2
   12118:	andeq	r2, r1, r0, ror #2
   1211c:	andeq	r2, r1, r0, ror #2
   12120:	andeq	r2, r1, r0, ror #2
   12124:	andeq	r2, r1, r0, ror #2
   12128:	andeq	r2, r1, r0, ror #2
   1212c:	andeq	r2, r1, r0, ror #2
   12130:	andeq	r2, r1, r0, ror #2
   12134:	andeq	r2, r1, r0, ror #2
   12138:	andeq	r2, r1, r0, ror #2
   1213c:	andeq	r2, r1, r0, ror #2
   12140:	andeq	r2, r1, r0, ror #2
   12144:	andeq	r2, r1, r0, ror #2
   12148:	andeq	r2, r1, r0, ror #2
   1214c:	andeq	r2, r1, r0, ror #2
   12150:	andeq	r2, r1, r4, lsl #3
   12154:	andeq	r2, r1, r8, ror r3
   12158:	andeq	r2, r1, r4, lsl #3
   1215c:	andeq	r2, r1, r4, ror r1
   12160:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12164:	cmp	r0, #0
   12168:	beq	123c8 <close@plt+0x142c>
   1216c:	ldr	r0, [fp, #16]
   12170:	b	123cc <close@plt+0x1430>
   12174:	mov	sl, #0
   12178:	cmp	r7, #0
   1217c:	bne	125e4 <close@plt+0x1648>
   12180:	b	12374 <close@plt+0x13d8>
   12184:	mov	sl, #0
   12188:	cmn	lr, #1
   1218c:	beq	12360 <close@plt+0x13c4>
   12190:	cmp	r7, #0
   12194:	cmpeq	lr, #1
   12198:	bne	125e4 <close@plt+0x1648>
   1219c:	b	12374 <close@plt+0x13d8>
   121a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   121a4:	cmp	r0, #2
   121a8:	bne	12398 <close@plt+0x13fc>
   121ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   121b0:	tst	r0, #1
   121b4:	bne	12b04 <close@plt+0x1b68>
   121b8:	mov	r9, #0
   121bc:	mov	r0, #92	; 0x5c
   121c0:	b	123ac <close@plt+0x1410>
   121c4:	mov	r0, #102	; 0x66
   121c8:	b	123b4 <close@plt+0x1418>
   121cc:	mov	r2, #116	; 0x74
   121d0:	b	121e0 <close@plt+0x1244>
   121d4:	mov	r0, #98	; 0x62
   121d8:	b	123b4 <close@plt+0x1418>
   121dc:	mov	r2, #114	; 0x72
   121e0:	ldr	r0, [sp, #60]	; 0x3c
   121e4:	tst	r0, #1
   121e8:	mov	r0, r2
   121ec:	bne	123b4 <close@plt+0x1418>
   121f0:	b	12b04 <close@plt+0x1b68>
   121f4:	ldr	r0, [sp, #84]	; 0x54
   121f8:	tst	r0, #1
   121fc:	beq	124a0 <close@plt+0x1504>
   12200:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12204:	tst	r0, #1
   12208:	bne	12c0c <close@plt+0x1c70>
   1220c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12210:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12214:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12218:	cmp	r0, #2
   1221c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12220:	movwne	r0, #1
   12224:	orr	r0, r0, r3
   12228:	tst	r0, #1
   1222c:	beq	12920 <close@plt+0x1984>
   12230:	mov	r0, r8
   12234:	b	12960 <close@plt+0x19c4>
   12238:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1223c:	mov	r9, #0
   12240:	mov	r5, #63	; 0x3f
   12244:	cmp	r0, #5
   12248:	beq	125ec <close@plt+0x1650>
   1224c:	cmp	r0, #2
   12250:	bne	126ac <close@plt+0x1710>
   12254:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12258:	tst	r0, #1
   1225c:	beq	126b0 <close@plt+0x1714>
   12260:	b	12b04 <close@plt+0x1b68>
   12264:	mov	r0, #118	; 0x76
   12268:	b	123b4 <close@plt+0x1418>
   1226c:	mov	r0, #1
   12270:	mov	r5, #39	; 0x27
   12274:	str	r0, [sp, #52]	; 0x34
   12278:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1227c:	cmp	r0, #2
   12280:	bne	12308 <close@plt+0x136c>
   12284:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12288:	tst	r0, #1
   1228c:	bne	12b04 <close@plt+0x1b68>
   12290:	ldr	r3, [sp, #68]	; 0x44
   12294:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12298:	mov	r9, #0
   1229c:	clz	r1, r2
   122a0:	cmp	r3, #0
   122a4:	mov	r0, r3
   122a8:	movwne	r0, #1
   122ac:	lsr	r1, r1, #5
   122b0:	orrs	r0, r0, r1
   122b4:	moveq	r3, r2
   122b8:	moveq	r2, r0
   122bc:	cmp	r8, r2
   122c0:	str	r3, [sp, #68]	; 0x44
   122c4:	str	r2, [fp, #-52]	; 0xffffffcc
   122c8:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   122cc:	movcc	r0, #39	; 0x27
   122d0:	strbcc	r0, [r1, r8]
   122d4:	add	r0, r8, #1
   122d8:	cmp	r0, r2
   122dc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   122e0:	movcc	r1, #92	; 0x5c
   122e4:	strbcc	r1, [r3, r0]
   122e8:	add	r0, r8, #2
   122ec:	add	r8, r8, #3
   122f0:	cmp	r0, r2
   122f4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   122f8:	movcc	r1, #39	; 0x27
   122fc:	strbcc	r1, [r2, r0]
   12300:	mov	r0, #0
   12304:	str	r0, [fp, #-48]	; 0xffffffd0
   12308:	mov	sl, #1
   1230c:	b	12160 <close@plt+0x11c4>
   12310:	ldr	r0, [sp, #32]
   12314:	cmp	r0, #1
   12318:	bne	124c4 <close@plt+0x1528>
   1231c:	str	lr, [sp, #80]	; 0x50
   12320:	bl	10ea0 <__ctype_b_loc@plt>
   12324:	ldr	r0, [r0]
   12328:	ldr	ip, [fp, #-84]	; 0xffffffac
   1232c:	mov	r1, #1
   12330:	add	r0, r0, r5, lsl #1
   12334:	ldrb	r0, [r0, #1]
   12338:	ubfx	sl, r0, #6, #1
   1233c:	ldr	r0, [sp, #48]	; 0x30
   12340:	mov	r2, r1
   12344:	cmp	r1, #1
   12348:	orr	r0, sl, r0
   1234c:	bhi	126b8 <close@plt+0x171c>
   12350:	tst	r0, #1
   12354:	beq	126b8 <close@plt+0x171c>
   12358:	ldr	lr, [sp, #80]	; 0x50
   1235c:	b	12160 <close@plt+0x11c4>
   12360:	cmp	r7, #0
   12364:	bne	125e0 <close@plt+0x1644>
   12368:	ldrb	r0, [ip, #1]
   1236c:	cmp	r0, #0
   12370:	bne	125e0 <close@plt+0x1644>
   12374:	mov	r1, #1
   12378:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1237c:	cmp	r0, #2
   12380:	bne	12390 <close@plt+0x13f4>
   12384:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12388:	tst	r0, #1
   1238c:	bne	12b04 <close@plt+0x1b68>
   12390:	mov	sl, r1
   12394:	b	12160 <close@plt+0x11c4>
   12398:	ldr	r1, [sp, #44]	; 0x2c
   1239c:	mov	r9, #0
   123a0:	mov	r0, #92	; 0x5c
   123a4:	cmp	r1, #0
   123a8:	beq	123b4 <close@plt+0x1418>
   123ac:	mov	sl, #0
   123b0:	b	128cc <close@plt+0x1930>
   123b4:	ldr	r1, [sp, #84]	; 0x54
   123b8:	mov	sl, #0
   123bc:	mov	r9, #0
   123c0:	tst	r1, #1
   123c4:	bne	12400 <close@plt+0x1464>
   123c8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   123cc:	cmp	r0, #0
   123d0:	mov	r0, r5
   123d4:	beq	123f8 <close@plt+0x145c>
   123d8:	ldr	r1, [fp, #16]
   123dc:	ubfx	r0, r5, #5, #3
   123e0:	mov	r2, #1
   123e4:	ldr	r0, [r1, r0, lsl #2]
   123e8:	and	r1, r5, #31
   123ec:	tst	r0, r2, lsl r1
   123f0:	mov	r0, r5
   123f4:	bne	12400 <close@plt+0x1464>
   123f8:	cmp	r6, #0
   123fc:	beq	128cc <close@plt+0x1930>
   12400:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12404:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12408:	tst	r1, #1
   1240c:	bne	12ae0 <close@plt+0x1b44>
   12410:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12414:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12418:	cmp	r1, #2
   1241c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12420:	movwne	r1, #1
   12424:	orr	r1, r1, r5
   12428:	tst	r1, #1
   1242c:	bne	12470 <close@plt+0x14d4>
   12430:	cmp	r8, r6
   12434:	mov	r5, #1
   12438:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1243c:	movcc	r1, #39	; 0x27
   12440:	strbcc	r1, [r2, r8]
   12444:	add	r1, r8, #1
   12448:	cmp	r1, r6
   1244c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12450:	movcc	r2, #36	; 0x24
   12454:	strbcc	r2, [r3, r1]
   12458:	add	r1, r8, #2
   1245c:	add	r8, r8, #3
   12460:	cmp	r1, r6
   12464:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12468:	movcc	r2, #39	; 0x27
   1246c:	strbcc	r2, [r3, r1]
   12470:	cmp	r8, r6
   12474:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12478:	movcc	r1, #92	; 0x5c
   1247c:	strbcc	r1, [r2, r8]
   12480:	add	r8, r8, #1
   12484:	cmp	r8, r6
   12488:	and	r4, r4, sl
   1248c:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12490:	strbcc	r0, [r1, r8]
   12494:	add	r8, r8, #1
   12498:	add	r7, r7, #1
   1249c:	b	11e80 <close@plt+0xee4>
   124a0:	ldr	r0, [sp, #28]
   124a4:	mov	sl, #0
   124a8:	mov	r9, #0
   124ac:	mov	r5, #0
   124b0:	cmp	r0, #0
   124b4:	beq	123c8 <close@plt+0x142c>
   124b8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   124bc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   124c0:	b	12498 <close@plt+0x14fc>
   124c4:	mov	r0, #0
   124c8:	cmn	lr, #1
   124cc:	str	r6, [sp, #76]	; 0x4c
   124d0:	str	r4, [sp, #20]
   124d4:	str	r0, [fp, #-36]	; 0xffffffdc
   124d8:	str	r0, [fp, #-40]	; 0xffffffd8
   124dc:	bne	124f0 <close@plt+0x1554>
   124e0:	mov	r0, ip
   124e4:	bl	10eb8 <strlen@plt>
   124e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   124ec:	mov	lr, r0
   124f0:	add	r0, ip, r7
   124f4:	mov	sl, #1
   124f8:	mov	r6, #0
   124fc:	sub	r4, fp, #40	; 0x28
   12500:	str	lr, [sp, #80]	; 0x50
   12504:	str	r0, [sp, #36]	; 0x24
   12508:	str	r6, [sp, #40]	; 0x28
   1250c:	add	r6, r6, r7
   12510:	sub	r0, fp, #44	; 0x2c
   12514:	mov	r3, r4
   12518:	add	r1, ip, r6
   1251c:	sub	r2, lr, r6
   12520:	bl	14144 <close@plt+0x31a8>
   12524:	cmp	r0, #0
   12528:	beq	12a34 <close@plt+0x1a98>
   1252c:	cmn	r0, #1
   12530:	beq	129f4 <close@plt+0x1a58>
   12534:	ldr	lr, [sp, #80]	; 0x50
   12538:	cmn	r0, #2
   1253c:	beq	129fc <close@plt+0x1a60>
   12540:	ldr	r2, [sp, #56]	; 0x38
   12544:	cmp	r0, #2
   12548:	mov	r1, #0
   1254c:	movwcc	r1, #1
   12550:	eor	r2, r2, #1
   12554:	orrs	r1, r2, r1
   12558:	bne	125a4 <close@plt+0x1608>
   1255c:	ldr	r1, [sp, #40]	; 0x28
   12560:	ldr	r2, [sp, #36]	; 0x24
   12564:	add	ip, r2, r1
   12568:	mov	r2, #1
   1256c:	ldrb	r3, [ip, r2]
   12570:	sub	r6, r3, #94	; 0x5e
   12574:	cmp	r6, #30
   12578:	bhi	1258c <close@plt+0x15f0>
   1257c:	mov	r4, #1
   12580:	mov	r1, #1073741829	; 0x40000005
   12584:	tst	r1, r4, lsl r6
   12588:	bne	12b00 <close@plt+0x1b64>
   1258c:	sub	r3, r3, #91	; 0x5b
   12590:	cmp	r3, #2
   12594:	bcc	12b00 <close@plt+0x1b64>
   12598:	add	r2, r2, #1
   1259c:	cmp	r2, r0
   125a0:	bcc	1256c <close@plt+0x15d0>
   125a4:	ldr	r6, [sp, #40]	; 0x28
   125a8:	add	r6, r0, r6
   125ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   125b0:	bl	10e04 <iswprint@plt>
   125b4:	cmp	r0, #0
   125b8:	sub	r4, fp, #40	; 0x28
   125bc:	movwne	r0, #1
   125c0:	and	sl, sl, r0
   125c4:	mov	r0, r4
   125c8:	bl	10dbc <mbsinit@plt>
   125cc:	ldr	lr, [sp, #80]	; 0x50
   125d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   125d4:	cmp	r0, #0
   125d8:	beq	12508 <close@plt+0x156c>
   125dc:	b	12a3c <close@plt+0x1aa0>
   125e0:	mvn	lr, #0
   125e4:	mov	r9, #0
   125e8:	b	12160 <close@plt+0x11c4>
   125ec:	ldr	r0, [sp, #24]
   125f0:	cmp	r0, #0
   125f4:	beq	126ac <close@plt+0x1710>
   125f8:	add	r0, r7, #2
   125fc:	cmp	r0, lr
   12600:	bcs	126ac <close@plt+0x1710>
   12604:	add	r1, ip, r7
   12608:	ldrb	r1, [r1, #1]
   1260c:	cmp	r1, #63	; 0x3f
   12610:	bne	126ac <close@plt+0x1710>
   12614:	ldrb	r5, [ip, r0]
   12618:	sub	r1, r5, #33	; 0x21
   1261c:	cmp	r1, #29
   12620:	bhi	126ac <close@plt+0x1710>
   12624:	movw	r3, #20929	; 0x51c1
   12628:	mov	r2, #1
   1262c:	movt	r3, #14336	; 0x3800
   12630:	tst	r3, r2, lsl r1
   12634:	beq	126ac <close@plt+0x1710>
   12638:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1263c:	tst	r1, #1
   12640:	bne	12c14 <close@plt+0x1c78>
   12644:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12648:	mov	r7, r0
   1264c:	cmp	r8, r1
   12650:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12654:	movcc	r1, #63	; 0x3f
   12658:	strbcc	r1, [r2, r8]
   1265c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12660:	add	r1, r8, #1
   12664:	cmp	r1, r2
   12668:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1266c:	movcc	r2, #34	; 0x22
   12670:	strbcc	r2, [r3, r1]
   12674:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12678:	add	r1, r8, #2
   1267c:	cmp	r1, r2
   12680:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12684:	movcc	r2, #34	; 0x22
   12688:	strbcc	r2, [r3, r1]
   1268c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12690:	add	r1, r8, #3
   12694:	add	r8, r8, #4
   12698:	cmp	r1, r2
   1269c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   126a0:	movcc	r2, #63	; 0x3f
   126a4:	strbcc	r2, [r3, r1]
   126a8:	b	126b0 <close@plt+0x1714>
   126ac:	mov	r5, #63	; 0x3f
   126b0:	mov	sl, #0
   126b4:	b	12160 <close@plt+0x11c4>
   126b8:	str	r0, [sp, #40]	; 0x28
   126bc:	add	r0, r2, r7
   126c0:	str	r6, [sp, #76]	; 0x4c
   126c4:	add	r1, r7, #1
   126c8:	ldr	lr, [sp, #80]	; 0x50
   126cc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   126d0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   126d4:	mov	r3, #0
   126d8:	str	r0, [sp, #36]	; 0x24
   126dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   126e0:	b	12774 <close@plt+0x17d8>
   126e4:	str	r0, [sp, #76]	; 0x4c
   126e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   126ec:	cmp	r9, #0
   126f0:	movwne	r9, #1
   126f4:	mvn	r7, r0
   126f8:	orr	r7, r7, r9
   126fc:	tst	r7, #1
   12700:	bne	12750 <close@plt+0x17b4>
   12704:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12708:	cmp	r8, r6
   1270c:	bcs	12724 <close@plt+0x1788>
   12710:	ldr	r7, [fp, #-56]	; 0xffffffc8
   12714:	mov	r2, r4
   12718:	mov	r4, #39	; 0x27
   1271c:	strb	r4, [r7, r8]
   12720:	mov	r4, r2
   12724:	add	r7, r8, #1
   12728:	cmp	r7, r6
   1272c:	bcs	12744 <close@plt+0x17a8>
   12730:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12734:	mov	r2, r4
   12738:	mov	r4, #39	; 0x27
   1273c:	strb	r4, [r0, r7]
   12740:	mov	r4, r2
   12744:	add	r8, r8, #2
   12748:	mov	r0, #0
   1274c:	b	12758 <close@plt+0x17bc>
   12750:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12754:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12758:	cmp	r8, r6
   1275c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12760:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12764:	strbcc	r5, [r2, r8]
   12768:	add	r8, r8, #1
   1276c:	ldrb	r5, [ip, r1]
   12770:	add	r1, r1, #1
   12774:	ldr	r2, [sp, #40]	; 0x28
   12778:	tst	r2, #1
   1277c:	beq	127b8 <close@plt+0x181c>
   12780:	ldr	r2, [sp, #76]	; 0x4c
   12784:	str	r0, [fp, #-48]	; 0xffffffd0
   12788:	tst	r2, #1
   1278c:	beq	127b0 <close@plt+0x1814>
   12790:	cmp	r8, r6
   12794:	bcs	127ac <close@plt+0x1810>
   12798:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1279c:	mov	r2, r4
   127a0:	mov	r4, #92	; 0x5c
   127a4:	strb	r4, [r6, r8]
   127a8:	mov	r4, r2
   127ac:	add	r8, r8, #1
   127b0:	mov	r0, #0
   127b4:	b	128ac <close@plt+0x1910>
   127b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   127bc:	tst	r2, #1
   127c0:	bne	12b0c <close@plt+0x1b70>
   127c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   127c8:	cmp	r7, #2
   127cc:	movwne	r3, #1
   127d0:	orr	r3, r3, r0
   127d4:	tst	r3, #1
   127d8:	bne	12834 <close@plt+0x1898>
   127dc:	cmp	r8, r6
   127e0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   127e4:	movcc	r3, #39	; 0x27
   127e8:	strbcc	r3, [r2, r8]
   127ec:	add	r3, r8, #1
   127f0:	cmp	r3, r6
   127f4:	bcs	1280c <close@plt+0x1870>
   127f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   127fc:	mov	r7, r4
   12800:	mov	r4, #36	; 0x24
   12804:	strb	r4, [r2, r3]
   12808:	mov	r4, r7
   1280c:	add	r3, r8, #2
   12810:	cmp	r3, r6
   12814:	bcs	1282c <close@plt+0x1890>
   12818:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1281c:	mov	r7, r4
   12820:	mov	r4, #39	; 0x27
   12824:	strb	r4, [r2, r3]
   12828:	mov	r4, r7
   1282c:	add	r8, r8, #3
   12830:	mov	r0, #1
   12834:	cmp	r8, r6
   12838:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1283c:	movcc	r3, #92	; 0x5c
   12840:	strbcc	r3, [r2, r8]
   12844:	add	r3, r8, #1
   12848:	cmp	r3, r6
   1284c:	bcs	1286c <close@plt+0x18d0>
   12850:	mov	r2, r4
   12854:	and	r7, r5, #192	; 0xc0
   12858:	mov	r4, #48	; 0x30
   1285c:	orr	r7, r4, r7, lsr #6
   12860:	mov	r4, r2
   12864:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12868:	strb	r7, [r2, r3]
   1286c:	add	r3, r8, #2
   12870:	cmp	r3, r6
   12874:	bcs	12894 <close@plt+0x18f8>
   12878:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1287c:	mov	r6, r4
   12880:	lsr	r7, r5, #3
   12884:	mov	r4, #6
   12888:	bfi	r7, r4, #3, #29
   1288c:	mov	r4, r6
   12890:	strb	r7, [r2, r3]
   12894:	str	r0, [fp, #-48]	; 0xffffffd0
   12898:	ldr	r0, [sp, #76]	; 0x4c
   1289c:	mov	r3, #6
   128a0:	add	r8, r8, #3
   128a4:	bfi	r5, r3, #3, #29
   128a8:	mov	r3, #1
   128ac:	ldr	r2, [sp, #36]	; 0x24
   128b0:	and	r9, r3, #1
   128b4:	cmp	r2, r1
   128b8:	bhi	126e4 <close@plt+0x1748>
   128bc:	cmp	r9, #0
   128c0:	sub	r7, r1, #1
   128c4:	mov	r0, r5
   128c8:	movwne	r9, #1
   128cc:	cmp	r9, #0
   128d0:	bne	12914 <close@plt+0x1978>
   128d4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   128d8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   128dc:	tst	r5, #1
   128e0:	beq	12484 <close@plt+0x14e8>
   128e4:	cmp	r8, r6
   128e8:	mov	r5, #0
   128ec:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   128f0:	movcc	r1, #39	; 0x27
   128f4:	strbcc	r1, [r2, r8]
   128f8:	add	r1, r8, #1
   128fc:	add	r8, r8, #2
   12900:	cmp	r1, r6
   12904:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12908:	movcc	r2, #39	; 0x27
   1290c:	strbcc	r2, [r3, r1]
   12910:	b	12484 <close@plt+0x14e8>
   12914:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12918:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1291c:	b	12484 <close@plt+0x14e8>
   12920:	cmp	r8, r1
   12924:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12928:	movcc	r0, #39	; 0x27
   1292c:	strbcc	r0, [r2, r8]
   12930:	add	r0, r8, #1
   12934:	cmp	r0, r1
   12938:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1293c:	movcc	r2, #36	; 0x24
   12940:	strbcc	r2, [r3, r0]
   12944:	add	r0, r8, #2
   12948:	cmp	r0, r1
   1294c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12950:	movcc	r2, #39	; 0x27
   12954:	strbcc	r2, [r3, r0]
   12958:	add	r0, r8, #3
   1295c:	mov	r3, #1
   12960:	cmp	r0, r1
   12964:	add	r8, r0, #1
   12968:	str	r3, [fp, #-48]	; 0xffffffd0
   1296c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12970:	movcc	r1, #92	; 0x5c
   12974:	strbcc	r1, [r2, r0]
   12978:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1297c:	cmp	r1, #2
   12980:	beq	129e4 <close@plt+0x1a48>
   12984:	add	r1, r7, #1
   12988:	mov	sl, #0
   1298c:	mov	r9, #1
   12990:	mov	r5, #48	; 0x30
   12994:	cmp	r1, lr
   12998:	bcs	12160 <close@plt+0x11c4>
   1299c:	ldrb	r1, [ip, r1]
   129a0:	sub	r1, r1, #48	; 0x30
   129a4:	uxtb	r1, r1
   129a8:	cmp	r1, #9
   129ac:	bhi	12160 <close@plt+0x11c4>
   129b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   129b4:	cmp	r8, r1
   129b8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   129bc:	movcc	r1, #48	; 0x30
   129c0:	strbcc	r1, [r2, r8]
   129c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   129c8:	add	r1, r0, #2
   129cc:	add	r8, r0, #3
   129d0:	cmp	r1, r2
   129d4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   129d8:	movcc	r2, #48	; 0x30
   129dc:	strbcc	r2, [r3, r1]
   129e0:	b	12160 <close@plt+0x11c4>
   129e4:	mov	r0, #48	; 0x30
   129e8:	mov	r9, #1
   129ec:	mov	sl, #0
   129f0:	b	123f8 <close@plt+0x145c>
   129f4:	mov	sl, #0
   129f8:	b	12a34 <close@plt+0x1a98>
   129fc:	mov	sl, #0
   12a00:	cmp	lr, r6
   12a04:	bls	12a34 <close@plt+0x1a98>
   12a08:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a0c:	ldr	r6, [sp, #40]	; 0x28
   12a10:	ldr	r0, [sp, #36]	; 0x24
   12a14:	ldrb	r0, [r0, r6]
   12a18:	cmp	r0, #0
   12a1c:	beq	12a3c <close@plt+0x1aa0>
   12a20:	add	r6, r6, #1
   12a24:	add	r0, r7, r6
   12a28:	cmp	r0, lr
   12a2c:	bcc	12a10 <close@plt+0x1a74>
   12a30:	b	12a3c <close@plt+0x1aa0>
   12a34:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a38:	ldr	r6, [sp, #40]	; 0x28
   12a3c:	mov	r1, r6
   12a40:	ldr	r4, [sp, #20]
   12a44:	ldr	r6, [sp, #76]	; 0x4c
   12a48:	b	1233c <close@plt+0x13a0>
   12a4c:	mov	lr, r7
   12a50:	b	12a58 <close@plt+0x1abc>
   12a54:	mvn	lr, #0
   12a58:	ldr	r9, [fp, #-64]	; 0xffffffc0
   12a5c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12a60:	eor	r0, r9, #2
   12a64:	orr	r0, r0, r8
   12a68:	clz	r0, r0
   12a6c:	lsr	r0, r0, #5
   12a70:	tst	r1, r0
   12a74:	bne	12b70 <close@plt+0x1bd4>
   12a78:	mov	r0, r1
   12a7c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12a80:	cmp	r9, #2
   12a84:	movwne	r1, #1
   12a88:	orr	r0, r0, r1
   12a8c:	tst	r0, #1
   12a90:	bne	12bb0 <close@plt+0x1c14>
   12a94:	ldr	r0, [sp, #52]	; 0x34
   12a98:	ldr	r1, [sp, #68]	; 0x44
   12a9c:	str	lr, [sp, #80]	; 0x50
   12aa0:	eor	r0, r0, #1
   12aa4:	tst	r0, #1
   12aa8:	bne	12bb0 <close@plt+0x1c14>
   12aac:	tst	r4, #1
   12ab0:	bne	12b78 <close@plt+0x1bdc>
   12ab4:	mov	r7, #0
   12ab8:	cmp	r1, #0
   12abc:	beq	12ba8 <close@plt+0x1c0c>
   12ac0:	ldr	r0, [sp, #84]	; 0x54
   12ac4:	mov	r3, #0
   12ac8:	cmp	r6, #0
   12acc:	mov	r2, #0
   12ad0:	mov	r4, r1
   12ad4:	str	r3, [fp, #-72]	; 0xffffffb8
   12ad8:	beq	11c14 <close@plt+0xc78>
   12adc:	b	12bb0 <close@plt+0x1c14>
   12ae0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12ae4:	b	12b0c <close@plt+0x1b70>
   12ae8:	ldr	ip, [fp, #-84]	; 0xffffffac
   12aec:	mov	r2, #1
   12af0:	mov	lr, r4
   12af4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12af8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12afc:	b	12b10 <close@plt+0x1b74>
   12b00:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b04:	mov	r7, #2
   12b08:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12b0c:	ldr	r2, [sp, #84]	; 0x54
   12b10:	mov	r0, #0
   12b14:	ldr	r1, [fp, #12]
   12b18:	tst	r2, #1
   12b1c:	mov	r2, r7
   12b20:	mov	r3, lr
   12b24:	str	r0, [sp, #8]
   12b28:	ldr	r0, [sp, #64]	; 0x40
   12b2c:	movwne	r2, #4
   12b30:	cmp	r7, #2
   12b34:	movne	r2, r7
   12b38:	str	r2, [sp]
   12b3c:	mov	r2, ip
   12b40:	bic	r1, r1, #2
   12b44:	str	r0, [sp, #12]
   12b48:	ldr	r0, [sp, #72]	; 0x48
   12b4c:	str	r1, [sp, #4]
   12b50:	mov	r1, r6
   12b54:	str	r0, [sp, #16]
   12b58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b5c:	bl	11b9c <close@plt+0xc00>
   12b60:	mov	r8, r0
   12b64:	mov	r0, r8
   12b68:	sub	sp, fp, #28
   12b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b70:	mov	r7, #2
   12b74:	b	12b0c <close@plt+0x1b70>
   12b78:	mov	r0, #5
   12b7c:	ldr	r2, [fp, #-84]	; 0xffffffac
   12b80:	ldr	r3, [sp, #80]	; 0x50
   12b84:	str	r0, [sp]
   12b88:	ldr	r0, [fp, #12]
   12b8c:	str	r0, [sp, #4]
   12b90:	ldr	r0, [fp, #16]
   12b94:	str	r0, [sp, #8]
   12b98:	ldr	r0, [sp, #64]	; 0x40
   12b9c:	str	r0, [sp, #12]
   12ba0:	ldr	r0, [sp, #72]	; 0x48
   12ba4:	b	12b54 <close@plt+0x1bb8>
   12ba8:	mov	r0, #0
   12bac:	str	r0, [fp, #-72]	; 0xffffffb8
   12bb0:	ldr	r1, [sp, #92]	; 0x5c
   12bb4:	cmp	r1, #0
   12bb8:	beq	12bf8 <close@plt+0x1c5c>
   12bbc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12bc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12bc4:	tst	r0, #1
   12bc8:	bne	12bfc <close@plt+0x1c60>
   12bcc:	ldrb	r0, [r1]
   12bd0:	cmp	r0, #0
   12bd4:	beq	12bfc <close@plt+0x1c60>
   12bd8:	add	r1, r1, #1
   12bdc:	cmp	r8, r6
   12be0:	strbcc	r0, [r2, r8]
   12be4:	add	r8, r8, #1
   12be8:	ldrb	r0, [r1], #1
   12bec:	cmp	r0, #0
   12bf0:	bne	12bdc <close@plt+0x1c40>
   12bf4:	b	12bfc <close@plt+0x1c60>
   12bf8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12bfc:	cmp	r8, r6
   12c00:	movcc	r0, #0
   12c04:	strbcc	r0, [r2, r8]
   12c08:	b	12b64 <close@plt+0x1bc8>
   12c0c:	mov	r2, #1
   12c10:	b	12af4 <close@plt+0x1b58>
   12c14:	mov	r7, #5
   12c18:	b	12b08 <close@plt+0x1b6c>
   12c1c:	bl	10f90 <abort@plt>
   12c20:	mov	r3, r2
   12c24:	mov	r2, #0
   12c28:	b	12c2c <close@plt+0x1c90>
   12c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c30:	add	fp, sp, #28
   12c34:	sub	sp, sp, #36	; 0x24
   12c38:	movw	r8, #20824	; 0x5158
   12c3c:	cmp	r3, #0
   12c40:	mov	r4, r2
   12c44:	str	r2, [sp, #24]
   12c48:	mov	r5, r1
   12c4c:	mov	r6, r0
   12c50:	str	r0, [sp, #20]
   12c54:	movt	r8, #2
   12c58:	movne	r8, r3
   12c5c:	bl	10ec4 <__errno_location@plt>
   12c60:	str	r0, [sp, #28]
   12c64:	cmp	r4, #0
   12c68:	add	sl, r8, #8
   12c6c:	ldm	r8, {r3, r9}
   12c70:	ldr	r7, [r0]
   12c74:	ldr	r1, [r8, #40]	; 0x28
   12c78:	ldr	r2, [r8, #44]	; 0x2c
   12c7c:	mov	r0, #0
   12c80:	orreq	r9, r9, #1
   12c84:	str	r7, [sp, #32]
   12c88:	mov	r7, r5
   12c8c:	stm	sp, {r3, r9, sl}
   12c90:	str	r1, [sp, #12]
   12c94:	str	r2, [sp, #16]
   12c98:	mov	r1, #0
   12c9c:	mov	r2, r6
   12ca0:	mov	r3, r5
   12ca4:	bl	11b9c <close@plt+0xc00>
   12ca8:	add	r4, r0, #1
   12cac:	mov	r5, r0
   12cb0:	mov	r0, r4
   12cb4:	bl	13990 <close@plt+0x29f4>
   12cb8:	mov	r6, r0
   12cbc:	ldr	r0, [r8]
   12cc0:	ldr	r2, [r8, #44]	; 0x2c
   12cc4:	ldr	r1, [r8, #40]	; 0x28
   12cc8:	mov	r3, r7
   12ccc:	stm	sp, {r0, r9, sl}
   12cd0:	str	r2, [sp, #16]
   12cd4:	str	r1, [sp, #12]
   12cd8:	mov	r0, r6
   12cdc:	mov	r1, r4
   12ce0:	ldr	r2, [sp, #20]
   12ce4:	bl	11b9c <close@plt+0xc00>
   12ce8:	ldr	r0, [sp, #24]
   12cec:	ldr	r1, [sp, #32]
   12cf0:	ldr	r2, [sp, #28]
   12cf4:	cmp	r0, #0
   12cf8:	str	r1, [r2]
   12cfc:	strne	r5, [r0]
   12d00:	mov	r0, r6
   12d04:	sub	sp, fp, #28
   12d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d10:	add	fp, sp, #24
   12d14:	movw	r5, #20716	; 0x50ec
   12d18:	movw	r8, #20712	; 0x50e8
   12d1c:	movt	r5, #2
   12d20:	movt	r8, #2
   12d24:	ldr	r0, [r5]
   12d28:	ldr	r4, [r8]
   12d2c:	cmp	r0, #2
   12d30:	blt	12d5c <close@plt+0x1dc0>
   12d34:	add	r7, r4, #12
   12d38:	mov	r6, #0
   12d3c:	ldr	r0, [r7, r6, lsl #3]
   12d40:	bl	14040 <close@plt+0x30a4>
   12d44:	ldr	r1, [r5]
   12d48:	add	r2, r6, #2
   12d4c:	add	r0, r6, #1
   12d50:	mov	r6, r0
   12d54:	cmp	r2, r1
   12d58:	blt	12d3c <close@plt+0x1da0>
   12d5c:	ldr	r0, [r4, #4]
   12d60:	movw	r7, #20872	; 0x5188
   12d64:	movt	r7, #2
   12d68:	cmp	r0, r7
   12d6c:	beq	12d84 <close@plt+0x1de8>
   12d70:	bl	14040 <close@plt+0x30a4>
   12d74:	movw	r0, #20720	; 0x50f0
   12d78:	mov	r6, #256	; 0x100
   12d7c:	movt	r0, #2
   12d80:	strd	r6, [r0]
   12d84:	movw	r6, #20720	; 0x50f0
   12d88:	movt	r6, #2
   12d8c:	cmp	r4, r6
   12d90:	beq	12da0 <close@plt+0x1e04>
   12d94:	mov	r0, r4
   12d98:	bl	14040 <close@plt+0x30a4>
   12d9c:	str	r6, [r8]
   12da0:	mov	r0, #1
   12da4:	str	r0, [r5]
   12da8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12dac:	movw	r3, #20824	; 0x5158
   12db0:	mvn	r2, #0
   12db4:	movt	r3, #2
   12db8:	b	12dbc <close@plt+0x1e20>
   12dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc0:	add	fp, sp, #28
   12dc4:	sub	sp, sp, #44	; 0x2c
   12dc8:	mov	r7, r3
   12dcc:	str	r2, [sp, #36]	; 0x24
   12dd0:	str	r1, [sp, #32]
   12dd4:	mov	r5, r0
   12dd8:	bl	10ec4 <__errno_location@plt>
   12ddc:	cmp	r5, #0
   12de0:	blt	12f4c <close@plt+0x1fb0>
   12de4:	cmn	r5, #-2147483647	; 0x80000001
   12de8:	beq	12f4c <close@plt+0x1fb0>
   12dec:	movw	r8, #20716	; 0x50ec
   12df0:	movw	r4, #20712	; 0x50e8
   12df4:	str	r0, [sp, #28]
   12df8:	ldr	r0, [r0]
   12dfc:	movt	r8, #2
   12e00:	movt	r4, #2
   12e04:	ldr	r1, [r8]
   12e08:	ldr	r6, [r4]
   12e0c:	str	r0, [sp, #24]
   12e10:	cmp	r1, r5
   12e14:	ble	12e20 <close@plt+0x1e84>
   12e18:	mov	sl, r6
   12e1c:	b	12e88 <close@plt+0x1eec>
   12e20:	movw	r9, #20720	; 0x50f0
   12e24:	mov	r0, #8
   12e28:	add	r2, r5, #1
   12e2c:	str	r1, [fp, #-32]	; 0xffffffe0
   12e30:	mvn	r3, #-2147483648	; 0x80000000
   12e34:	movt	r9, #2
   12e38:	str	r0, [sp]
   12e3c:	sub	r2, r2, r1
   12e40:	sub	r1, fp, #32
   12e44:	subs	r0, r6, r9
   12e48:	movne	r0, r6
   12e4c:	bl	13ac0 <close@plt+0x2b24>
   12e50:	cmp	r6, r9
   12e54:	mov	sl, r0
   12e58:	str	r0, [r4]
   12e5c:	ldrdeq	r0, [r9]
   12e60:	stmeq	sl, {r0, r1}
   12e64:	ldr	r1, [r8]
   12e68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12e6c:	add	r0, sl, r1, lsl #3
   12e70:	sub	r1, r2, r1
   12e74:	lsl	r2, r1, #3
   12e78:	mov	r1, #0
   12e7c:	bl	10edc <memset@plt>
   12e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e84:	str	r0, [r8]
   12e88:	mov	r9, sl
   12e8c:	ldr	r6, [r9, r5, lsl #3]!
   12e90:	ldr	r4, [r9, #4]!
   12e94:	ldm	r7, {r0, r1}
   12e98:	ldr	r2, [r7, #40]	; 0x28
   12e9c:	ldr	r3, [r7, #44]	; 0x2c
   12ea0:	orr	r8, r1, #1
   12ea4:	add	r1, r7, #8
   12ea8:	stm	sp, {r0, r8}
   12eac:	add	r0, sp, #8
   12eb0:	str	r1, [sp, #20]
   12eb4:	stm	r0, {r1, r2, r3}
   12eb8:	mov	r0, r4
   12ebc:	mov	r1, r6
   12ec0:	ldr	r2, [sp, #32]
   12ec4:	ldr	r3, [sp, #36]	; 0x24
   12ec8:	bl	11b9c <close@plt+0xc00>
   12ecc:	cmp	r6, r0
   12ed0:	bhi	12f34 <close@plt+0x1f98>
   12ed4:	add	r6, r0, #1
   12ed8:	movw	r0, #20872	; 0x5188
   12edc:	movt	r0, #2
   12ee0:	str	r6, [sl, r5, lsl #3]
   12ee4:	cmp	r4, r0
   12ee8:	beq	12ef4 <close@plt+0x1f58>
   12eec:	mov	r0, r4
   12ef0:	bl	14040 <close@plt+0x30a4>
   12ef4:	mov	r0, r6
   12ef8:	bl	13990 <close@plt+0x29f4>
   12efc:	str	r0, [r9]
   12f00:	mov	r4, r0
   12f04:	add	r3, sp, #8
   12f08:	ldr	r0, [r7]
   12f0c:	ldr	r1, [r7, #40]	; 0x28
   12f10:	ldr	r2, [r7, #44]	; 0x2c
   12f14:	stm	sp, {r0, r8}
   12f18:	ldr	r0, [sp, #20]
   12f1c:	stm	r3, {r0, r1, r2}
   12f20:	mov	r0, r4
   12f24:	mov	r1, r6
   12f28:	ldr	r2, [sp, #32]
   12f2c:	ldr	r3, [sp, #36]	; 0x24
   12f30:	bl	11b9c <close@plt+0xc00>
   12f34:	ldr	r0, [sp, #28]
   12f38:	ldr	r1, [sp, #24]
   12f3c:	str	r1, [r0]
   12f40:	mov	r0, r4
   12f44:	sub	sp, fp, #28
   12f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f4c:	bl	10f90 <abort@plt>
   12f50:	movw	r3, #20824	; 0x5158
   12f54:	movt	r3, #2
   12f58:	b	12dbc <close@plt+0x1e20>
   12f5c:	movw	r3, #20824	; 0x5158
   12f60:	mov	r1, r0
   12f64:	mov	r0, #0
   12f68:	mvn	r2, #0
   12f6c:	movt	r3, #2
   12f70:	b	12dbc <close@plt+0x1e20>
   12f74:	movw	r3, #20824	; 0x5158
   12f78:	mov	r2, r1
   12f7c:	mov	r1, r0
   12f80:	mov	r0, #0
   12f84:	movt	r3, #2
   12f88:	b	12dbc <close@plt+0x1e20>
   12f8c:	push	{fp, lr}
   12f90:	mov	fp, sp
   12f94:	sub	sp, sp, #48	; 0x30
   12f98:	vmov.i32	q8, #0	; 0x00000000
   12f9c:	mov	ip, #32
   12fa0:	mov	r3, sp
   12fa4:	mov	lr, r2
   12fa8:	cmp	r1, #10
   12fac:	add	r2, r3, #16
   12fb0:	vst1.64	{d16-d17}, [r3], ip
   12fb4:	vst1.64	{d16-d17}, [r3]
   12fb8:	vst1.64	{d16-d17}, [r2]
   12fbc:	beq	12fdc <close@plt+0x2040>
   12fc0:	str	r1, [sp]
   12fc4:	mov	r3, sp
   12fc8:	mov	r1, lr
   12fcc:	mvn	r2, #0
   12fd0:	bl	12dbc <close@plt+0x1e20>
   12fd4:	mov	sp, fp
   12fd8:	pop	{fp, pc}
   12fdc:	bl	10f90 <abort@plt>
   12fe0:	push	{r4, sl, fp, lr}
   12fe4:	add	fp, sp, #8
   12fe8:	sub	sp, sp, #48	; 0x30
   12fec:	mov	ip, r3
   12ff0:	mov	r3, sp
   12ff4:	vmov.i32	q8, #0	; 0x00000000
   12ff8:	mov	lr, #32
   12ffc:	cmp	r1, #10
   13000:	add	r4, r3, #16
   13004:	vst1.64	{d16-d17}, [r3], lr
   13008:	vst1.64	{d16-d17}, [r3]
   1300c:	vst1.64	{d16-d17}, [r4]
   13010:	beq	13030 <close@plt+0x2094>
   13014:	str	r1, [sp]
   13018:	mov	r1, r2
   1301c:	mov	r3, sp
   13020:	mov	r2, ip
   13024:	bl	12dbc <close@plt+0x1e20>
   13028:	sub	sp, fp, #8
   1302c:	pop	{r4, sl, fp, pc}
   13030:	bl	10f90 <abort@plt>
   13034:	mov	r2, r1
   13038:	mov	r1, r0
   1303c:	mov	r0, #0
   13040:	b	12f8c <close@plt+0x1ff0>
   13044:	mov	r3, r2
   13048:	mov	r2, r1
   1304c:	mov	r1, r0
   13050:	mov	r0, #0
   13054:	b	12fe0 <close@plt+0x2044>
   13058:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1305c:	add	fp, sp, #24
   13060:	sub	sp, sp, #48	; 0x30
   13064:	movw	r8, #20824	; 0x5158
   13068:	mov	lr, r0
   1306c:	mov	r3, sp
   13070:	mov	ip, r1
   13074:	movt	r8, #2
   13078:	mov	r1, r3
   1307c:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   13080:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   13084:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   13088:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1308c:	ubfx	r0, r2, #5, #3
   13090:	and	r2, r2, #31
   13094:	mov	r4, #1
   13098:	add	r0, r3, r0, lsl #2
   1309c:	ldr	r1, [r0, #8]
   130a0:	bic	r4, r4, r1, lsr r2
   130a4:	eor	r1, r1, r4, lsl r2
   130a8:	mov	r2, ip
   130ac:	str	r1, [r0, #8]
   130b0:	mov	r0, #0
   130b4:	mov	r1, lr
   130b8:	bl	12dbc <close@plt+0x1e20>
   130bc:	sub	sp, fp, #24
   130c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   130c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   130c8:	add	fp, sp, #24
   130cc:	sub	sp, sp, #48	; 0x30
   130d0:	movw	lr, #20824	; 0x5158
   130d4:	mov	ip, r0
   130d8:	mov	r3, sp
   130dc:	movt	lr, #2
   130e0:	mov	r2, r3
   130e4:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   130e8:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   130ec:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   130f0:	stm	r2, {r0, r4, r5, r6, r7, r8}
   130f4:	ubfx	r0, r1, #5, #3
   130f8:	and	r1, r1, #31
   130fc:	mov	r7, #1
   13100:	add	r0, r3, r0, lsl #2
   13104:	ldr	r2, [r0, #8]
   13108:	bic	r7, r7, r2, lsr r1
   1310c:	eor	r1, r2, r7, lsl r1
   13110:	mvn	r2, #0
   13114:	str	r1, [r0, #8]
   13118:	mov	r0, #0
   1311c:	mov	r1, ip
   13120:	bl	12dbc <close@plt+0x1e20>
   13124:	sub	sp, fp, #24
   13128:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1312c:	push	{r4, r5, r6, r7, fp, lr}
   13130:	add	fp, sp, #16
   13134:	sub	sp, sp, #48	; 0x30
   13138:	movw	lr, #20824	; 0x5158
   1313c:	mov	ip, r0
   13140:	mov	r3, sp
   13144:	movt	lr, #2
   13148:	mov	r2, r3
   1314c:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   13150:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13154:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   13158:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1315c:	mov	r1, ip
   13160:	mvn	r2, #0
   13164:	ldr	r0, [sp, #12]
   13168:	orr	r0, r0, #67108864	; 0x4000000
   1316c:	str	r0, [sp, #12]
   13170:	mov	r0, #0
   13174:	bl	12dbc <close@plt+0x1e20>
   13178:	sub	sp, fp, #16
   1317c:	pop	{r4, r5, r6, r7, fp, pc}
   13180:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13184:	add	fp, sp, #24
   13188:	sub	sp, sp, #48	; 0x30
   1318c:	movw	r8, #20824	; 0x5158
   13190:	mov	ip, r1
   13194:	mov	lr, r0
   13198:	mov	r3, sp
   1319c:	movt	r8, #2
   131a0:	mov	r2, r3
   131a4:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   131a8:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   131ac:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   131b0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   131b4:	mov	r1, lr
   131b8:	mov	r2, ip
   131bc:	ldr	r0, [sp, #12]
   131c0:	orr	r0, r0, #67108864	; 0x4000000
   131c4:	str	r0, [sp, #12]
   131c8:	mov	r0, #0
   131cc:	bl	12dbc <close@plt+0x1e20>
   131d0:	sub	sp, fp, #24
   131d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131dc:	add	fp, sp, #24
   131e0:	sub	sp, sp, #96	; 0x60
   131e4:	mov	lr, sp
   131e8:	vmov.i32	q8, #0	; 0x00000000
   131ec:	mov	ip, r2
   131f0:	cmp	r1, #10
   131f4:	add	r3, lr, #16
   131f8:	mov	r2, lr
   131fc:	vst1.64	{d16-d17}, [r3]
   13200:	mov	r3, #28
   13204:	vst1.64	{d16-d17}, [r2], r3
   13208:	vst1.32	{d16-d17}, [r2]
   1320c:	beq	1324c <close@plt+0x22b0>
   13210:	str	r1, [sp, #48]	; 0x30
   13214:	add	r3, sp, #48	; 0x30
   13218:	ldm	lr!, {r2, r4, r5, r6, r7}
   1321c:	add	r1, r3, #4
   13220:	stmia	r1!, {r2, r4, r5, r6, r7}
   13224:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   13228:	stm	r1, {r2, r4, r5, r6, r7, r8}
   1322c:	mvn	r2, #0
   13230:	ldr	r1, [sp, #60]	; 0x3c
   13234:	orr	r1, r1, #67108864	; 0x4000000
   13238:	str	r1, [sp, #60]	; 0x3c
   1323c:	mov	r1, ip
   13240:	bl	12dbc <close@plt+0x1e20>
   13244:	sub	sp, fp, #24
   13248:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1324c:	bl	10f90 <abort@plt>
   13250:	push	{fp, lr}
   13254:	mov	fp, sp
   13258:	sub	sp, sp, #8
   1325c:	mvn	ip, #0
   13260:	str	ip, [sp]
   13264:	bl	13270 <close@plt+0x22d4>
   13268:	mov	sp, fp
   1326c:	pop	{fp, pc}
   13270:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13274:	add	fp, sp, #24
   13278:	sub	sp, sp, #48	; 0x30
   1327c:	movw	ip, #20824	; 0x5158
   13280:	mov	lr, r3
   13284:	mov	r3, sp
   13288:	cmp	r1, #0
   1328c:	movt	ip, #2
   13290:	cmpne	r2, #0
   13294:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13298:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   1329c:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   132a0:	stm	r3, {r4, r5, r6, r7, r8, r9}
   132a4:	mov	r3, #10
   132a8:	str	r3, [sp]
   132ac:	bne	132b4 <close@plt+0x2318>
   132b0:	bl	10f90 <abort@plt>
   132b4:	ldr	ip, [fp, #8]
   132b8:	str	r2, [sp, #44]	; 0x2c
   132bc:	str	r1, [sp, #40]	; 0x28
   132c0:	mov	r3, sp
   132c4:	mov	r1, lr
   132c8:	mov	r2, ip
   132cc:	bl	12dbc <close@plt+0x1e20>
   132d0:	sub	sp, fp, #24
   132d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   132d8:	push	{fp, lr}
   132dc:	mov	fp, sp
   132e0:	sub	sp, sp, #8
   132e4:	mov	r3, r2
   132e8:	mov	r2, r1
   132ec:	mov	r1, r0
   132f0:	mvn	r0, #0
   132f4:	str	r0, [sp]
   132f8:	mov	r0, #0
   132fc:	bl	13270 <close@plt+0x22d4>
   13300:	mov	sp, fp
   13304:	pop	{fp, pc}
   13308:	push	{fp, lr}
   1330c:	mov	fp, sp
   13310:	sub	sp, sp, #8
   13314:	mov	ip, r2
   13318:	mov	r2, r1
   1331c:	mov	r1, r0
   13320:	str	r3, [sp]
   13324:	mov	r0, #0
   13328:	mov	r3, ip
   1332c:	bl	13270 <close@plt+0x22d4>
   13330:	mov	sp, fp
   13334:	pop	{fp, pc}
   13338:	movw	r3, #20728	; 0x50f8
   1333c:	movt	r3, #2
   13340:	b	12dbc <close@plt+0x1e20>
   13344:	movw	r3, #20728	; 0x50f8
   13348:	mov	r2, r1
   1334c:	mov	r1, r0
   13350:	mov	r0, #0
   13354:	movt	r3, #2
   13358:	b	12dbc <close@plt+0x1e20>
   1335c:	movw	r3, #20728	; 0x50f8
   13360:	mvn	r2, #0
   13364:	movt	r3, #2
   13368:	b	12dbc <close@plt+0x1e20>
   1336c:	movw	r3, #20728	; 0x50f8
   13370:	mov	r1, r0
   13374:	mov	r0, #0
   13378:	mvn	r2, #0
   1337c:	movt	r3, #2
   13380:	b	12dbc <close@plt+0x1e20>
   13384:	push	{r4, r5, fp, lr}
   13388:	add	fp, sp, #8
   1338c:	mov	r5, r0
   13390:	mov	r4, r1
   13394:	mov	r0, #0
   13398:	mov	r2, #5
   1339c:	mov	r1, r5
   133a0:	bl	10dd4 <dcgettext@plt>
   133a4:	cmp	r0, r5
   133a8:	popne	{r4, r5, fp, pc}
   133ac:	bl	1410c <close@plt+0x3170>
   133b0:	ldrb	r1, [r0]
   133b4:	and	r1, r1, #223	; 0xdf
   133b8:	cmp	r1, #71	; 0x47
   133bc:	beq	13424 <close@plt+0x2488>
   133c0:	cmp	r1, #85	; 0x55
   133c4:	bne	13448 <close@plt+0x24ac>
   133c8:	ldrb	r1, [r0, #1]
   133cc:	and	r1, r1, #223	; 0xdf
   133d0:	cmp	r1, #84	; 0x54
   133d4:	bne	13448 <close@plt+0x24ac>
   133d8:	ldrb	r1, [r0, #2]
   133dc:	and	r1, r1, #223	; 0xdf
   133e0:	cmp	r1, #70	; 0x46
   133e4:	ldrbeq	r1, [r0, #3]
   133e8:	cmpeq	r1, #45	; 0x2d
   133ec:	bne	13448 <close@plt+0x24ac>
   133f0:	ldrb	r1, [r0, #4]
   133f4:	cmp	r1, #56	; 0x38
   133f8:	ldrbeq	r0, [r0, #5]
   133fc:	cmpeq	r0, #0
   13400:	bne	13448 <close@plt+0x24ac>
   13404:	ldrb	r1, [r5]
   13408:	movw	r2, #18592	; 0x48a0
   1340c:	movw	r0, #18596	; 0x48a4
   13410:	movt	r2, #1
   13414:	movt	r0, #1
   13418:	cmp	r1, #96	; 0x60
   1341c:	moveq	r0, r2
   13420:	pop	{r4, r5, fp, pc}
   13424:	ldrb	r1, [r0, #1]
   13428:	and	r1, r1, #223	; 0xdf
   1342c:	cmp	r1, #66	; 0x42
   13430:	bne	13448 <close@plt+0x24ac>
   13434:	ldrb	r1, [r0, #2]
   13438:	cmp	r1, #49	; 0x31
   1343c:	ldrbeq	r1, [r0, #3]
   13440:	cmpeq	r1, #56	; 0x38
   13444:	beq	13464 <close@plt+0x24c8>
   13448:	movw	r1, #18586	; 0x489a
   1344c:	movw	r0, #18590	; 0x489e
   13450:	cmp	r4, #9
   13454:	movt	r1, #1
   13458:	movt	r0, #1
   1345c:	moveq	r0, r1
   13460:	pop	{r4, r5, fp, pc}
   13464:	ldrb	r1, [r0, #4]
   13468:	cmp	r1, #48	; 0x30
   1346c:	ldrbeq	r1, [r0, #5]
   13470:	cmpeq	r1, #51	; 0x33
   13474:	bne	13448 <close@plt+0x24ac>
   13478:	ldrb	r1, [r0, #6]
   1347c:	cmp	r1, #48	; 0x30
   13480:	ldrbeq	r0, [r0, #7]
   13484:	cmpeq	r0, #0
   13488:	bne	13448 <close@plt+0x24ac>
   1348c:	ldrb	r1, [r5]
   13490:	movw	r2, #18600	; 0x48a8
   13494:	movw	r0, #18604	; 0x48ac
   13498:	movt	r2, #1
   1349c:	movt	r0, #1
   134a0:	b	13418 <close@plt+0x247c>
   134a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   134a8:	add	fp, sp, #24
   134ac:	sub	sp, sp, #32
   134b0:	ldr	r6, [fp, #12]
   134b4:	ldr	r7, [fp, #8]
   134b8:	mov	r4, r2
   134bc:	mov	r8, r0
   134c0:	cmp	r1, #0
   134c4:	beq	134ec <close@plt+0x2550>
   134c8:	movw	r2, #18692	; 0x4904
   134cc:	mov	r5, r1
   134d0:	str	r3, [sp, #4]
   134d4:	str	r4, [sp]
   134d8:	mov	r0, r8
   134dc:	mov	r1, #1
   134e0:	movt	r2, #1
   134e4:	mov	r3, r5
   134e8:	b	13504 <close@plt+0x2568>
   134ec:	movw	r2, #18704	; 0x4910
   134f0:	str	r3, [sp]
   134f4:	mov	r0, r8
   134f8:	mov	r1, #1
   134fc:	mov	r3, r4
   13500:	movt	r2, #1
   13504:	bl	10f00 <__fprintf_chk@plt>
   13508:	movw	r1, #18711	; 0x4917
   1350c:	mov	r0, #0
   13510:	mov	r2, #5
   13514:	movt	r1, #1
   13518:	bl	10dd4 <dcgettext@plt>
   1351c:	movw	r2, #19429	; 0x4be5
   13520:	mov	r3, r0
   13524:	movw	r0, #2022	; 0x7e6
   13528:	mov	r1, #1
   1352c:	str	r0, [sp]
   13530:	movt	r2, #1
   13534:	mov	r0, r8
   13538:	bl	10f00 <__fprintf_chk@plt>
   1353c:	movw	r4, #17456	; 0x4430
   13540:	mov	r1, r8
   13544:	movt	r4, #1
   13548:	mov	r0, r4
   1354c:	bl	10d68 <fputs_unlocked@plt>
   13550:	movw	r1, #18715	; 0x491b
   13554:	mov	r0, #0
   13558:	mov	r2, #5
   1355c:	movt	r1, #1
   13560:	bl	10dd4 <dcgettext@plt>
   13564:	movw	r3, #18886	; 0x49c6
   13568:	mov	r2, r0
   1356c:	mov	r0, r8
   13570:	mov	r1, #1
   13574:	movt	r3, #1
   13578:	bl	10f00 <__fprintf_chk@plt>
   1357c:	mov	r0, r4
   13580:	mov	r1, r8
   13584:	bl	10d68 <fputs_unlocked@plt>
   13588:	cmp	r6, #9
   1358c:	bhi	135f0 <close@plt+0x2654>
   13590:	add	r0, pc, #0
   13594:	ldr	pc, [r0, r6, lsl #2]
   13598:	andeq	r3, r1, r8, asr #15
   1359c:	andeq	r3, r1, r0, asr #11
   135a0:	strdeq	r3, [r1], -ip
   135a4:	andeq	r3, r1, r4, lsr #12
   135a8:	andeq	r3, r1, ip, asr #12
   135ac:	andeq	r3, r1, r4, ror r6
   135b0:	muleq	r1, ip, r6
   135b4:	ldrdeq	r3, [r1], -r4
   135b8:	andeq	r3, r1, r4, ror r7
   135bc:	andeq	r3, r1, ip, lsl r7
   135c0:	movw	r1, #18920	; 0x49e8
   135c4:	mov	r0, #0
   135c8:	mov	r2, #5
   135cc:	movt	r1, #1
   135d0:	bl	10dd4 <dcgettext@plt>
   135d4:	ldr	r3, [r7]
   135d8:	mov	r2, r0
   135dc:	mov	r0, r8
   135e0:	mov	r1, #1
   135e4:	sub	sp, fp, #24
   135e8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   135ec:	b	10f00 <__fprintf_chk@plt>
   135f0:	movw	r1, #19239	; 0x4b27
   135f4:	movt	r1, #1
   135f8:	b	13724 <close@plt+0x2788>
   135fc:	movw	r1, #18936	; 0x49f8
   13600:	mov	r0, #0
   13604:	mov	r2, #5
   13608:	movt	r1, #1
   1360c:	bl	10dd4 <dcgettext@plt>
   13610:	mov	r2, r0
   13614:	ldr	r3, [r7]
   13618:	ldr	r0, [r7, #4]
   1361c:	str	r0, [sp]
   13620:	b	13710 <close@plt+0x2774>
   13624:	movw	r1, #18959	; 0x4a0f
   13628:	mov	r0, #0
   1362c:	mov	r2, #5
   13630:	movt	r1, #1
   13634:	bl	10dd4 <dcgettext@plt>
   13638:	ldr	r3, [r7]
   1363c:	mov	r2, r0
   13640:	ldmib	r7, {r0, r1}
   13644:	stm	sp, {r0, r1}
   13648:	b	13710 <close@plt+0x2774>
   1364c:	movw	r1, #18987	; 0x4a2b
   13650:	mov	r0, #0
   13654:	mov	r2, #5
   13658:	movt	r1, #1
   1365c:	bl	10dd4 <dcgettext@plt>
   13660:	ldr	r3, [r7]
   13664:	mov	r2, r0
   13668:	ldmib	r7, {r0, r1, r7}
   1366c:	stm	sp, {r0, r1, r7}
   13670:	b	13710 <close@plt+0x2774>
   13674:	movw	r1, #19019	; 0x4a4b
   13678:	mov	r0, #0
   1367c:	mov	r2, #5
   13680:	movt	r1, #1
   13684:	bl	10dd4 <dcgettext@plt>
   13688:	ldr	r3, [r7]
   1368c:	mov	r2, r0
   13690:	ldmib	r7, {r0, r1, r6, r7}
   13694:	stm	sp, {r0, r1, r6, r7}
   13698:	b	13710 <close@plt+0x2774>
   1369c:	movw	r1, #19055	; 0x4a6f
   136a0:	mov	r0, #0
   136a4:	mov	r2, #5
   136a8:	movt	r1, #1
   136ac:	bl	10dd4 <dcgettext@plt>
   136b0:	ldr	r3, [r7]
   136b4:	mov	r2, r0
   136b8:	ldmib	r7, {r0, r1, r6}
   136bc:	ldr	r5, [r7, #16]
   136c0:	ldr	r7, [r7, #20]
   136c4:	stm	sp, {r0, r1, r6}
   136c8:	str	r5, [sp, #12]
   136cc:	str	r7, [sp, #16]
   136d0:	b	13710 <close@plt+0x2774>
   136d4:	movw	r1, #19095	; 0x4a97
   136d8:	mov	r0, #0
   136dc:	mov	r2, #5
   136e0:	movt	r1, #1
   136e4:	bl	10dd4 <dcgettext@plt>
   136e8:	ldr	r3, [r7]
   136ec:	mov	r2, r0
   136f0:	ldmib	r7, {r0, r1, r6}
   136f4:	ldr	r5, [r7, #16]
   136f8:	ldr	r4, [r7, #20]
   136fc:	ldr	r7, [r7, #24]
   13700:	stm	sp, {r0, r1, r6}
   13704:	str	r5, [sp, #12]
   13708:	str	r4, [sp, #16]
   1370c:	str	r7, [sp, #20]
   13710:	mov	r0, r8
   13714:	mov	r1, #1
   13718:	b	137c4 <close@plt+0x2828>
   1371c:	movw	r1, #19187	; 0x4af3
   13720:	movt	r1, #1
   13724:	mov	r0, #0
   13728:	mov	r2, #5
   1372c:	bl	10dd4 <dcgettext@plt>
   13730:	mov	ip, r0
   13734:	ldr	r3, [r7]
   13738:	ldr	r0, [r7, #4]
   1373c:	ldr	r1, [r7, #8]
   13740:	ldr	r6, [r7, #12]
   13744:	ldr	r5, [r7, #16]
   13748:	ldr	r4, [r7, #20]
   1374c:	ldr	r2, [r7, #24]
   13750:	ldr	lr, [r7, #28]
   13754:	ldr	r7, [r7, #32]
   13758:	stm	sp, {r0, r1, r6}
   1375c:	str	r5, [sp, #12]
   13760:	str	r4, [sp, #16]
   13764:	str	r2, [sp, #20]
   13768:	str	lr, [sp, #24]
   1376c:	str	r7, [sp, #28]
   13770:	b	137b8 <close@plt+0x281c>
   13774:	movw	r1, #19139	; 0x4ac3
   13778:	mov	r0, #0
   1377c:	mov	r2, #5
   13780:	movt	r1, #1
   13784:	bl	10dd4 <dcgettext@plt>
   13788:	mov	ip, r0
   1378c:	ldr	r3, [r7]
   13790:	ldmib	r7, {r0, r1, r6}
   13794:	ldr	r5, [r7, #16]
   13798:	ldr	r4, [r7, #20]
   1379c:	ldr	r2, [r7, #24]
   137a0:	ldr	r7, [r7, #28]
   137a4:	stm	sp, {r0, r1, r6}
   137a8:	str	r5, [sp, #12]
   137ac:	str	r4, [sp, #16]
   137b0:	str	r2, [sp, #20]
   137b4:	str	r7, [sp, #24]
   137b8:	mov	r0, r8
   137bc:	mov	r1, #1
   137c0:	mov	r2, ip
   137c4:	bl	10f00 <__fprintf_chk@plt>
   137c8:	sub	sp, fp, #24
   137cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137d0:	push	{r4, sl, fp, lr}
   137d4:	add	fp, sp, #8
   137d8:	sub	sp, sp, #8
   137dc:	ldr	ip, [fp, #8]
   137e0:	mov	lr, #0
   137e4:	ldr	r4, [ip, lr, lsl #2]
   137e8:	add	lr, lr, #1
   137ec:	cmp	r4, #0
   137f0:	bne	137e4 <close@plt+0x2848>
   137f4:	sub	r4, lr, #1
   137f8:	str	ip, [sp]
   137fc:	str	r4, [sp, #4]
   13800:	bl	134a4 <close@plt+0x2508>
   13804:	sub	sp, fp, #8
   13808:	pop	{r4, sl, fp, pc}
   1380c:	push	{r4, r5, fp, lr}
   13810:	add	fp, sp, #8
   13814:	sub	sp, sp, #48	; 0x30
   13818:	ldr	r4, [fp, #8]
   1381c:	mov	ip, #0
   13820:	add	lr, sp, #8
   13824:	ldr	r5, [r4]
   13828:	cmp	r5, #0
   1382c:	str	r5, [lr, ip, lsl #2]
   13830:	beq	13844 <close@plt+0x28a8>
   13834:	add	ip, ip, #1
   13838:	add	r4, r4, #4
   1383c:	cmp	ip, #10
   13840:	bcc	13824 <close@plt+0x2888>
   13844:	str	lr, [sp]
   13848:	str	ip, [sp, #4]
   1384c:	bl	134a4 <close@plt+0x2508>
   13850:	sub	sp, fp, #8
   13854:	pop	{r4, r5, fp, pc}
   13858:	push	{fp, lr}
   1385c:	mov	fp, sp
   13860:	sub	sp, sp, #8
   13864:	add	ip, fp, #8
   13868:	str	ip, [sp, #4]
   1386c:	str	ip, [sp]
   13870:	bl	1380c <close@plt+0x2870>
   13874:	mov	sp, fp
   13878:	pop	{fp, pc}
   1387c:	push	{fp, lr}
   13880:	mov	fp, sp
   13884:	movw	r0, #20796	; 0x513c
   13888:	movt	r0, #2
   1388c:	ldr	r1, [r0]
   13890:	movw	r0, #17456	; 0x4430
   13894:	movt	r0, #1
   13898:	bl	10d68 <fputs_unlocked@plt>
   1389c:	movw	r1, #19299	; 0x4b63
   138a0:	mov	r0, #0
   138a4:	mov	r2, #5
   138a8:	movt	r1, #1
   138ac:	bl	10dd4 <dcgettext@plt>
   138b0:	movw	r2, #19319	; 0x4b77
   138b4:	mov	r1, r0
   138b8:	mov	r0, #1
   138bc:	movt	r2, #1
   138c0:	bl	10ee8 <__printf_chk@plt>
   138c4:	movw	r1, #19341	; 0x4b8d
   138c8:	mov	r0, #0
   138cc:	mov	r2, #5
   138d0:	movt	r1, #1
   138d4:	bl	10dd4 <dcgettext@plt>
   138d8:	movw	r2, #17728	; 0x4540
   138dc:	movw	r3, #17971	; 0x4633
   138e0:	mov	r1, r0
   138e4:	mov	r0, #1
   138e8:	movt	r2, #1
   138ec:	movt	r3, #1
   138f0:	bl	10ee8 <__printf_chk@plt>
   138f4:	movw	r1, #19361	; 0x4ba1
   138f8:	mov	r0, #0
   138fc:	mov	r2, #5
   13900:	movt	r1, #1
   13904:	bl	10dd4 <dcgettext@plt>
   13908:	movw	r2, #19400	; 0x4bc8
   1390c:	mov	r1, r0
   13910:	mov	r0, #1
   13914:	movt	r2, #1
   13918:	pop	{fp, lr}
   1391c:	b	10ee8 <__printf_chk@plt>
   13920:	b	13924 <close@plt+0x2988>
   13924:	push	{r4, r5, r6, sl, fp, lr}
   13928:	add	fp, sp, #16
   1392c:	mov	r4, r2
   13930:	mov	r5, r1
   13934:	mov	r6, r0
   13938:	bl	141a4 <close@plt+0x3208>
   1393c:	cmp	r0, #0
   13940:	popne	{r4, r5, r6, sl, fp, pc}
   13944:	cmp	r6, #0
   13948:	beq	1395c <close@plt+0x29c0>
   1394c:	cmp	r5, #0
   13950:	cmpne	r4, #0
   13954:	bne	1395c <close@plt+0x29c0>
   13958:	pop	{r4, r5, r6, sl, fp, pc}
   1395c:	bl	13db0 <close@plt+0x2e14>
   13960:	push	{fp, lr}
   13964:	mov	fp, sp
   13968:	bl	13e48 <close@plt+0x2eac>
   1396c:	cmp	r0, #0
   13970:	popne	{fp, pc}
   13974:	bl	13db0 <close@plt+0x2e14>
   13978:	push	{fp, lr}
   1397c:	mov	fp, sp
   13980:	bl	13e48 <close@plt+0x2eac>
   13984:	cmp	r0, #0
   13988:	popne	{fp, pc}
   1398c:	bl	13db0 <close@plt+0x2e14>
   13990:	push	{fp, lr}
   13994:	mov	fp, sp
   13998:	bl	13e48 <close@plt+0x2eac>
   1399c:	cmp	r0, #0
   139a0:	popne	{fp, pc}
   139a4:	bl	13db0 <close@plt+0x2e14>
   139a8:	push	{r4, r5, fp, lr}
   139ac:	add	fp, sp, #8
   139b0:	mov	r4, r1
   139b4:	mov	r5, r0
   139b8:	bl	13e78 <close@plt+0x2edc>
   139bc:	cmp	r0, #0
   139c0:	popne	{r4, r5, fp, pc}
   139c4:	cmp	r5, #0
   139c8:	beq	139d8 <close@plt+0x2a3c>
   139cc:	cmp	r4, #0
   139d0:	bne	139d8 <close@plt+0x2a3c>
   139d4:	pop	{r4, r5, fp, pc}
   139d8:	bl	13db0 <close@plt+0x2e14>
   139dc:	push	{fp, lr}
   139e0:	mov	fp, sp
   139e4:	cmp	r1, #0
   139e8:	orreq	r1, r1, #1
   139ec:	bl	13e78 <close@plt+0x2edc>
   139f0:	cmp	r0, #0
   139f4:	popne	{fp, pc}
   139f8:	bl	13db0 <close@plt+0x2e14>
   139fc:	push	{fp, lr}
   13a00:	mov	fp, sp
   13a04:	clz	r3, r2
   13a08:	lsr	ip, r3, #5
   13a0c:	clz	r3, r1
   13a10:	lsr	r3, r3, #5
   13a14:	orrs	r3, r3, ip
   13a18:	movwne	r1, #1
   13a1c:	movwne	r2, #1
   13a20:	bl	141a4 <close@plt+0x3208>
   13a24:	cmp	r0, #0
   13a28:	popne	{fp, pc}
   13a2c:	bl	13db0 <close@plt+0x2e14>
   13a30:	push	{fp, lr}
   13a34:	mov	fp, sp
   13a38:	mov	r2, r1
   13a3c:	mov	r1, r0
   13a40:	mov	r0, #0
   13a44:	bl	141a4 <close@plt+0x3208>
   13a48:	cmp	r0, #0
   13a4c:	popne	{fp, pc}
   13a50:	bl	13db0 <close@plt+0x2e14>
   13a54:	mov	r2, r1
   13a58:	mov	r1, r0
   13a5c:	mov	r0, #0
   13a60:	b	139fc <close@plt+0x2a60>
   13a64:	mov	r2, #1
   13a68:	b	13a6c <close@plt+0x2ad0>
   13a6c:	push	{r4, r5, fp, lr}
   13a70:	add	fp, sp, #8
   13a74:	ldr	r5, [r1]
   13a78:	mov	r4, r1
   13a7c:	cmp	r0, #0
   13a80:	beq	13a98 <close@plt+0x2afc>
   13a84:	mov	r1, #1
   13a88:	add	r1, r1, r5, lsr #1
   13a8c:	adds	r5, r5, r1
   13a90:	bcc	13ab0 <close@plt+0x2b14>
   13a94:	bl	13db0 <close@plt+0x2e14>
   13a98:	cmp	r5, #0
   13a9c:	bne	13ab0 <close@plt+0x2b14>
   13aa0:	mov	r1, #64	; 0x40
   13aa4:	cmp	r2, #64	; 0x40
   13aa8:	udiv	r5, r1, r2
   13aac:	addhi	r5, r5, #1
   13ab0:	mov	r1, r5
   13ab4:	bl	13924 <close@plt+0x2988>
   13ab8:	str	r5, [r4]
   13abc:	pop	{r4, r5, fp, pc}
   13ac0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ac4:	add	fp, sp, #24
   13ac8:	ldr	r6, [r1]
   13acc:	mov	r8, r1
   13ad0:	ldr	r4, [fp, #8]
   13ad4:	add	r1, r6, r6, asr #1
   13ad8:	cmp	r1, r6
   13adc:	mvnvs	r1, #-2147483648	; 0x80000000
   13ae0:	cmp	r1, r3
   13ae4:	mov	r5, r1
   13ae8:	movgt	r5, r3
   13aec:	cmn	r3, #1
   13af0:	movle	r5, r1
   13af4:	cmn	r4, #1
   13af8:	ble	13b18 <close@plt+0x2b7c>
   13afc:	cmp	r4, #0
   13b00:	beq	13b6c <close@plt+0x2bd0>
   13b04:	cmn	r5, #1
   13b08:	ble	13b40 <close@plt+0x2ba4>
   13b0c:	mvn	r7, #-2147483648	; 0x80000000
   13b10:	udiv	r1, r7, r4
   13b14:	b	13b34 <close@plt+0x2b98>
   13b18:	cmn	r5, #1
   13b1c:	ble	13b5c <close@plt+0x2bc0>
   13b20:	cmn	r4, #1
   13b24:	beq	13b6c <close@plt+0x2bd0>
   13b28:	mov	r1, #-2147483648	; 0x80000000
   13b2c:	mvn	r7, #-2147483648	; 0x80000000
   13b30:	sdiv	r1, r1, r4
   13b34:	cmp	r1, r5
   13b38:	bge	13b6c <close@plt+0x2bd0>
   13b3c:	b	13b7c <close@plt+0x2be0>
   13b40:	beq	13b6c <close@plt+0x2bd0>
   13b44:	mov	r1, #-2147483648	; 0x80000000
   13b48:	mvn	r7, #-2147483648	; 0x80000000
   13b4c:	sdiv	r1, r1, r5
   13b50:	cmp	r1, r4
   13b54:	bge	13b6c <close@plt+0x2bd0>
   13b58:	b	13b7c <close@plt+0x2be0>
   13b5c:	mvn	r7, #-2147483648	; 0x80000000
   13b60:	sdiv	r1, r7, r4
   13b64:	cmp	r5, r1
   13b68:	blt	13b7c <close@plt+0x2be0>
   13b6c:	mul	r1, r5, r4
   13b70:	mov	r7, #64	; 0x40
   13b74:	cmp	r1, #63	; 0x3f
   13b78:	bgt	13b84 <close@plt+0x2be8>
   13b7c:	sdiv	r5, r7, r4
   13b80:	mul	r1, r5, r4
   13b84:	cmp	r0, #0
   13b88:	moveq	r7, #0
   13b8c:	streq	r7, [r8]
   13b90:	sub	r7, r5, r6
   13b94:	cmp	r7, r2
   13b98:	bge	13c3c <close@plt+0x2ca0>
   13b9c:	add	r5, r6, r2
   13ba0:	mov	r2, #0
   13ba4:	mov	r1, #0
   13ba8:	cmp	r5, r3
   13bac:	movwgt	r2, #1
   13bb0:	cmn	r3, #1
   13bb4:	movwgt	r1, #1
   13bb8:	cmp	r5, r6
   13bbc:	bvs	13c24 <close@plt+0x2c88>
   13bc0:	ands	r1, r1, r2
   13bc4:	bne	13c24 <close@plt+0x2c88>
   13bc8:	cmn	r4, #1
   13bcc:	ble	13bec <close@plt+0x2c50>
   13bd0:	cmp	r4, #0
   13bd4:	beq	13c38 <close@plt+0x2c9c>
   13bd8:	cmn	r5, #1
   13bdc:	ble	13c10 <close@plt+0x2c74>
   13be0:	mvn	r1, #-2147483648	; 0x80000000
   13be4:	udiv	r1, r1, r4
   13be8:	b	13c04 <close@plt+0x2c68>
   13bec:	cmn	r5, #1
   13bf0:	ble	13c28 <close@plt+0x2c8c>
   13bf4:	cmn	r4, #1
   13bf8:	beq	13c38 <close@plt+0x2c9c>
   13bfc:	mov	r1, #-2147483648	; 0x80000000
   13c00:	sdiv	r1, r1, r4
   13c04:	cmp	r1, r5
   13c08:	bge	13c38 <close@plt+0x2c9c>
   13c0c:	b	13c24 <close@plt+0x2c88>
   13c10:	beq	13c38 <close@plt+0x2c9c>
   13c14:	mov	r1, #-2147483648	; 0x80000000
   13c18:	sdiv	r1, r1, r5
   13c1c:	cmp	r1, r4
   13c20:	bge	13c38 <close@plt+0x2c9c>
   13c24:	bl	13db0 <close@plt+0x2e14>
   13c28:	mvn	r1, #-2147483648	; 0x80000000
   13c2c:	sdiv	r1, r1, r4
   13c30:	cmp	r5, r1
   13c34:	blt	13c24 <close@plt+0x2c88>
   13c38:	mul	r1, r5, r4
   13c3c:	bl	139a8 <close@plt+0x2a0c>
   13c40:	str	r5, [r8]
   13c44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c48:	push	{fp, lr}
   13c4c:	mov	fp, sp
   13c50:	mov	r1, #1
   13c54:	bl	13df4 <close@plt+0x2e58>
   13c58:	cmp	r0, #0
   13c5c:	popne	{fp, pc}
   13c60:	bl	13db0 <close@plt+0x2e14>
   13c64:	push	{fp, lr}
   13c68:	mov	fp, sp
   13c6c:	bl	13df4 <close@plt+0x2e58>
   13c70:	cmp	r0, #0
   13c74:	popne	{fp, pc}
   13c78:	bl	13db0 <close@plt+0x2e14>
   13c7c:	push	{fp, lr}
   13c80:	mov	fp, sp
   13c84:	mov	r1, #1
   13c88:	bl	13df4 <close@plt+0x2e58>
   13c8c:	cmp	r0, #0
   13c90:	popne	{fp, pc}
   13c94:	bl	13db0 <close@plt+0x2e14>
   13c98:	push	{fp, lr}
   13c9c:	mov	fp, sp
   13ca0:	bl	13df4 <close@plt+0x2e58>
   13ca4:	cmp	r0, #0
   13ca8:	popne	{fp, pc}
   13cac:	bl	13db0 <close@plt+0x2e14>
   13cb0:	push	{r4, r5, r6, sl, fp, lr}
   13cb4:	add	fp, sp, #16
   13cb8:	mov	r5, r0
   13cbc:	mov	r0, r1
   13cc0:	mov	r4, r1
   13cc4:	bl	13e48 <close@plt+0x2eac>
   13cc8:	cmp	r0, #0
   13ccc:	beq	13ce8 <close@plt+0x2d4c>
   13cd0:	mov	r1, r5
   13cd4:	mov	r2, r4
   13cd8:	mov	r6, r0
   13cdc:	bl	10db0 <memcpy@plt>
   13ce0:	mov	r0, r6
   13ce4:	pop	{r4, r5, r6, sl, fp, pc}
   13ce8:	bl	13db0 <close@plt+0x2e14>
   13cec:	push	{r4, r5, r6, sl, fp, lr}
   13cf0:	add	fp, sp, #16
   13cf4:	mov	r5, r0
   13cf8:	mov	r0, r1
   13cfc:	mov	r4, r1
   13d00:	bl	13e48 <close@plt+0x2eac>
   13d04:	cmp	r0, #0
   13d08:	beq	13d24 <close@plt+0x2d88>
   13d0c:	mov	r1, r5
   13d10:	mov	r2, r4
   13d14:	mov	r6, r0
   13d18:	bl	10db0 <memcpy@plt>
   13d1c:	mov	r0, r6
   13d20:	pop	{r4, r5, r6, sl, fp, pc}
   13d24:	bl	13db0 <close@plt+0x2e14>
   13d28:	push	{r4, r5, r6, sl, fp, lr}
   13d2c:	add	fp, sp, #16
   13d30:	mov	r5, r0
   13d34:	add	r0, r1, #1
   13d38:	mov	r4, r1
   13d3c:	bl	13e48 <close@plt+0x2eac>
   13d40:	cmp	r0, #0
   13d44:	beq	13d6c <close@plt+0x2dd0>
   13d48:	mov	r6, r0
   13d4c:	mov	r0, #0
   13d50:	mov	r1, r5
   13d54:	mov	r2, r4
   13d58:	strb	r0, [r6, r4]
   13d5c:	mov	r0, r6
   13d60:	bl	10db0 <memcpy@plt>
   13d64:	mov	r0, r6
   13d68:	pop	{r4, r5, r6, sl, fp, pc}
   13d6c:	bl	13db0 <close@plt+0x2e14>
   13d70:	push	{r4, r5, r6, sl, fp, lr}
   13d74:	add	fp, sp, #16
   13d78:	mov	r4, r0
   13d7c:	bl	10eb8 <strlen@plt>
   13d80:	add	r5, r0, #1
   13d84:	mov	r0, r5
   13d88:	bl	13e48 <close@plt+0x2eac>
   13d8c:	cmp	r0, #0
   13d90:	beq	13dac <close@plt+0x2e10>
   13d94:	mov	r1, r4
   13d98:	mov	r2, r5
   13d9c:	mov	r6, r0
   13da0:	bl	10db0 <memcpy@plt>
   13da4:	mov	r0, r6
   13da8:	pop	{r4, r5, r6, sl, fp, pc}
   13dac:	bl	13db0 <close@plt+0x2e14>
   13db0:	push	{fp, lr}
   13db4:	mov	fp, sp
   13db8:	movw	r0, #20708	; 0x50e4
   13dbc:	movw	r1, #19476	; 0x4c14
   13dc0:	mov	r2, #5
   13dc4:	movt	r0, #2
   13dc8:	movt	r1, #1
   13dcc:	ldr	r4, [r0]
   13dd0:	mov	r0, #0
   13dd4:	bl	10dd4 <dcgettext@plt>
   13dd8:	movw	r2, #18439	; 0x4807
   13ddc:	mov	r3, r0
   13de0:	mov	r0, r4
   13de4:	mov	r1, #0
   13de8:	movt	r2, #1
   13dec:	bl	10e4c <error@plt>
   13df0:	bl	10f90 <abort@plt>
   13df4:	clz	r2, r1
   13df8:	clz	r3, r0
   13dfc:	lsr	r2, r2, #5
   13e00:	lsr	r3, r3, #5
   13e04:	orrs	r2, r3, r2
   13e08:	movwne	r1, #1
   13e0c:	movwne	r0, #1
   13e10:	cmp	r1, #0
   13e14:	beq	13e44 <close@plt+0x2ea8>
   13e18:	mvn	r2, #-2147483648	; 0x80000000
   13e1c:	udiv	r2, r2, r1
   13e20:	cmp	r2, r0
   13e24:	bcs	13e44 <close@plt+0x2ea8>
   13e28:	push	{fp, lr}
   13e2c:	mov	fp, sp
   13e30:	bl	10ec4 <__errno_location@plt>
   13e34:	mov	r1, #12
   13e38:	str	r1, [r0]
   13e3c:	mov	r0, #0
   13e40:	pop	{fp, pc}
   13e44:	b	10d5c <calloc@plt>
   13e48:	cmp	r0, #0
   13e4c:	movweq	r0, #1
   13e50:	cmn	r0, #1
   13e54:	ble	13e5c <close@plt+0x2ec0>
   13e58:	b	10e64 <malloc@plt>
   13e5c:	push	{fp, lr}
   13e60:	mov	fp, sp
   13e64:	bl	10ec4 <__errno_location@plt>
   13e68:	mov	r1, #12
   13e6c:	str	r1, [r0]
   13e70:	mov	r0, #0
   13e74:	pop	{fp, pc}
   13e78:	push	{fp, lr}
   13e7c:	mov	fp, sp
   13e80:	cmp	r0, #0
   13e84:	beq	13ea0 <close@plt+0x2f04>
   13e88:	cmp	r1, #0
   13e8c:	beq	13eac <close@plt+0x2f10>
   13e90:	cmn	r1, #1
   13e94:	ble	13eb4 <close@plt+0x2f18>
   13e98:	pop	{fp, lr}
   13e9c:	b	10dec <realloc@plt>
   13ea0:	mov	r0, r1
   13ea4:	pop	{fp, lr}
   13ea8:	b	13e48 <close@plt+0x2eac>
   13eac:	bl	14040 <close@plt+0x30a4>
   13eb0:	b	13ec0 <close@plt+0x2f24>
   13eb4:	bl	10ec4 <__errno_location@plt>
   13eb8:	mov	r1, #12
   13ebc:	str	r1, [r0]
   13ec0:	mov	r0, #0
   13ec4:	pop	{fp, pc}
   13ec8:	push	{r4, r5, r6, sl, fp, lr}
   13ecc:	add	fp, sp, #16
   13ed0:	mov	r4, r0
   13ed4:	bl	10e28 <__fpending@plt>
   13ed8:	mov	r5, r0
   13edc:	mov	r0, r4
   13ee0:	bl	10e34 <ferror_unlocked@plt>
   13ee4:	mov	r6, r0
   13ee8:	mov	r0, r4
   13eec:	bl	13f48 <close@plt+0x2fac>
   13ef0:	cmp	r6, #0
   13ef4:	beq	13f14 <close@plt+0x2f78>
   13ef8:	mvn	r4, #0
   13efc:	cmp	r0, #0
   13f00:	bne	13f40 <close@plt+0x2fa4>
   13f04:	bl	10ec4 <__errno_location@plt>
   13f08:	mov	r1, #0
   13f0c:	str	r1, [r0]
   13f10:	b	13f40 <close@plt+0x2fa4>
   13f14:	cmp	r0, #0
   13f18:	mov	r4, r0
   13f1c:	mvnne	r4, #0
   13f20:	cmp	r5, #0
   13f24:	bne	13f40 <close@plt+0x2fa4>
   13f28:	cmp	r0, #0
   13f2c:	beq	13f40 <close@plt+0x2fa4>
   13f30:	bl	10ec4 <__errno_location@plt>
   13f34:	ldr	r0, [r0]
   13f38:	subs	r4, r0, #9
   13f3c:	mvnne	r4, #0
   13f40:	mov	r0, r4
   13f44:	pop	{r4, r5, r6, sl, fp, pc}
   13f48:	push	{r4, r5, r6, sl, fp, lr}
   13f4c:	add	fp, sp, #16
   13f50:	sub	sp, sp, #8
   13f54:	mov	r4, r0
   13f58:	bl	10ef4 <fileno@plt>
   13f5c:	cmn	r0, #1
   13f60:	ble	13fd4 <close@plt+0x3038>
   13f64:	mov	r0, r4
   13f68:	bl	10e7c <__freading@plt>
   13f6c:	cmp	r0, #0
   13f70:	beq	13f9c <close@plt+0x3000>
   13f74:	mov	r0, r4
   13f78:	bl	10ef4 <fileno@plt>
   13f7c:	mov	r1, #1
   13f80:	mov	r2, #0
   13f84:	mov	r3, #0
   13f88:	str	r1, [sp]
   13f8c:	bl	10e10 <lseek64@plt>
   13f90:	and	r0, r0, r1
   13f94:	cmn	r0, #1
   13f98:	beq	13fd4 <close@plt+0x3038>
   13f9c:	mov	r0, r4
   13fa0:	bl	13fe4 <close@plt+0x3048>
   13fa4:	cmp	r0, #0
   13fa8:	beq	13fd4 <close@plt+0x3038>
   13fac:	bl	10ec4 <__errno_location@plt>
   13fb0:	ldr	r6, [r0]
   13fb4:	mov	r5, r0
   13fb8:	mov	r0, r4
   13fbc:	bl	10f0c <fclose@plt>
   13fc0:	cmp	r6, #0
   13fc4:	strne	r6, [r5]
   13fc8:	mvnne	r0, #0
   13fcc:	sub	sp, fp, #16
   13fd0:	pop	{r4, r5, r6, sl, fp, pc}
   13fd4:	mov	r0, r4
   13fd8:	sub	sp, fp, #16
   13fdc:	pop	{r4, r5, r6, sl, fp, lr}
   13fe0:	b	10f0c <fclose@plt>
   13fe4:	push	{r4, sl, fp, lr}
   13fe8:	add	fp, sp, #8
   13fec:	sub	sp, sp, #8
   13ff0:	mov	r4, r0
   13ff4:	cmp	r0, #0
   13ff8:	beq	14014 <close@plt+0x3078>
   13ffc:	mov	r0, r4
   14000:	bl	10e7c <__freading@plt>
   14004:	cmp	r0, #0
   14008:	ldrbne	r0, [r4, #1]
   1400c:	tstne	r0, #1
   14010:	bne	14024 <close@plt+0x3088>
   14014:	mov	r0, r4
   14018:	sub	sp, fp, #8
   1401c:	pop	{r4, sl, fp, lr}
   14020:	b	10d8c <fflush@plt>
   14024:	mov	r0, #1
   14028:	mov	r2, #0
   1402c:	mov	r3, #0
   14030:	str	r0, [sp]
   14034:	mov	r0, r4
   14038:	bl	14068 <close@plt+0x30cc>
   1403c:	b	14014 <close@plt+0x3078>
   14040:	push	{r4, r5, r6, sl, fp, lr}
   14044:	add	fp, sp, #16
   14048:	mov	r4, r0
   1404c:	bl	10ec4 <__errno_location@plt>
   14050:	ldr	r6, [r0]
   14054:	mov	r5, r0
   14058:	mov	r0, r4
   1405c:	bl	10d98 <free@plt>
   14060:	str	r6, [r5]
   14064:	pop	{r4, r5, r6, sl, fp, pc}
   14068:	push	{r4, r5, r6, r7, fp, lr}
   1406c:	add	fp, sp, #16
   14070:	sub	sp, sp, #8
   14074:	mov	r4, r0
   14078:	ldr	r0, [r0, #4]
   1407c:	mov	r5, r3
   14080:	mov	r6, r2
   14084:	ldr	r1, [r4, #8]
   14088:	cmp	r1, r0
   1408c:	bne	140a8 <close@plt+0x310c>
   14090:	ldrd	r0, [r4, #16]
   14094:	cmp	r1, r0
   14098:	bne	140a8 <close@plt+0x310c>
   1409c:	ldr	r0, [r4, #36]	; 0x24
   140a0:	cmp	r0, #0
   140a4:	beq	140c0 <close@plt+0x3124>
   140a8:	mov	r0, r4
   140ac:	mov	r2, r6
   140b0:	mov	r3, r5
   140b4:	sub	sp, fp, #16
   140b8:	pop	{r4, r5, r6, r7, fp, lr}
   140bc:	b	10f18 <fseeko64@plt>
   140c0:	ldr	r7, [fp, #8]
   140c4:	mov	r0, r4
   140c8:	bl	10ef4 <fileno@plt>
   140cc:	mov	r2, r6
   140d0:	mov	r3, r5
   140d4:	str	r7, [sp]
   140d8:	bl	10e10 <lseek64@plt>
   140dc:	and	r2, r0, r1
   140e0:	cmn	r2, #1
   140e4:	beq	14100 <close@plt+0x3164>
   140e8:	strd	r0, [r4, #80]	; 0x50
   140ec:	ldr	r0, [r4]
   140f0:	bic	r0, r0, #16
   140f4:	str	r0, [r4]
   140f8:	mov	r0, #0
   140fc:	b	14104 <close@plt+0x3168>
   14100:	mvn	r0, #0
   14104:	sub	sp, fp, #16
   14108:	pop	{r4, r5, r6, r7, fp, pc}
   1410c:	push	{fp, lr}
   14110:	mov	fp, sp
   14114:	mov	r0, #14
   14118:	bl	10f48 <nl_langinfo@plt>
   1411c:	movw	r1, #17457	; 0x4431
   14120:	cmp	r0, #0
   14124:	movt	r1, #1
   14128:	movne	r1, r0
   1412c:	movw	r0, #19493	; 0x4c25
   14130:	ldrb	r2, [r1]
   14134:	movt	r0, #1
   14138:	cmp	r2, #0
   1413c:	movne	r0, r1
   14140:	pop	{fp, pc}
   14144:	push	{r4, r5, r6, r7, fp, lr}
   14148:	add	fp, sp, #16
   1414c:	sub	sp, sp, #8
   14150:	add	r5, sp, #4
   14154:	cmp	r0, #0
   14158:	mov	r7, r2
   1415c:	mov	r4, r1
   14160:	movne	r5, r0
   14164:	mov	r0, r5
   14168:	bl	10e40 <mbrtowc@plt>
   1416c:	mov	r6, r0
   14170:	cmp	r7, #0
   14174:	beq	14198 <close@plt+0x31fc>
   14178:	cmn	r6, #2
   1417c:	bcc	14198 <close@plt+0x31fc>
   14180:	mov	r0, #0
   14184:	bl	141e0 <close@plt+0x3244>
   14188:	cmp	r0, #0
   1418c:	ldrbeq	r0, [r4]
   14190:	moveq	r6, #1
   14194:	streq	r0, [r5]
   14198:	mov	r0, r6
   1419c:	sub	sp, fp, #16
   141a0:	pop	{r4, r5, r6, r7, fp, pc}
   141a4:	cmp	r2, #0
   141a8:	beq	141d8 <close@plt+0x323c>
   141ac:	mvn	r3, #0
   141b0:	udiv	r3, r3, r2
   141b4:	cmp	r3, r1
   141b8:	bcs	141d8 <close@plt+0x323c>
   141bc:	push	{fp, lr}
   141c0:	mov	fp, sp
   141c4:	bl	10ec4 <__errno_location@plt>
   141c8:	mov	r1, #12
   141cc:	str	r1, [r0]
   141d0:	mov	r0, #0
   141d4:	pop	{fp, pc}
   141d8:	mul	r1, r2, r1
   141dc:	b	13e78 <close@plt+0x2edc>
   141e0:	push	{r4, sl, fp, lr}
   141e4:	add	fp, sp, #8
   141e8:	sub	sp, sp, #264	; 0x108
   141ec:	add	r1, sp, #7
   141f0:	movw	r2, #257	; 0x101
   141f4:	bl	14244 <close@plt+0x32a8>
   141f8:	mov	r4, #0
   141fc:	cmp	r0, #0
   14200:	bne	14238 <close@plt+0x329c>
   14204:	movw	r1, #19499	; 0x4c2b
   14208:	add	r0, sp, #7
   1420c:	movt	r1, #1
   14210:	bl	10d80 <strcmp@plt>
   14214:	cmp	r0, #0
   14218:	beq	14238 <close@plt+0x329c>
   1421c:	movw	r1, #19501	; 0x4c2d
   14220:	add	r0, sp, #7
   14224:	movt	r1, #1
   14228:	bl	10d80 <strcmp@plt>
   1422c:	mov	r4, r0
   14230:	cmp	r0, #0
   14234:	movwne	r4, #1
   14238:	mov	r0, r4
   1423c:	sub	sp, fp, #8
   14240:	pop	{r4, sl, fp, pc}
   14244:	push	{r4, r5, r6, r7, fp, lr}
   14248:	add	fp, sp, #16
   1424c:	mov	r4, r1
   14250:	mov	r1, #0
   14254:	mov	r6, r2
   14258:	bl	10f30 <setlocale@plt>
   1425c:	cmp	r0, #0
   14260:	beq	1428c <close@plt+0x32f0>
   14264:	mov	r7, r0
   14268:	bl	10eb8 <strlen@plt>
   1426c:	cmp	r0, r6
   14270:	bcs	142a0 <close@plt+0x3304>
   14274:	add	r2, r0, #1
   14278:	mov	r0, r4
   1427c:	mov	r1, r7
   14280:	bl	10db0 <memcpy@plt>
   14284:	mov	r5, #0
   14288:	b	142c8 <close@plt+0x332c>
   1428c:	cmp	r6, #0
   14290:	mov	r5, #22
   14294:	movne	r0, #0
   14298:	strbne	r0, [r4]
   1429c:	b	142c8 <close@plt+0x332c>
   142a0:	mov	r5, #34	; 0x22
   142a4:	cmp	r6, #0
   142a8:	beq	142c8 <close@plt+0x332c>
   142ac:	sub	r6, r6, #1
   142b0:	mov	r0, r4
   142b4:	mov	r1, r7
   142b8:	mov	r2, r6
   142bc:	bl	10db0 <memcpy@plt>
   142c0:	mov	r0, #0
   142c4:	strb	r0, [r4, r6]
   142c8:	mov	r0, r5
   142cc:	pop	{r4, r5, r6, r7, fp, pc}
   142d0:	mov	r1, #0
   142d4:	b	10f30 <setlocale@plt>
   142d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142dc:	mov	r7, r0
   142e0:	ldr	r6, [pc, #72]	; 14330 <close@plt+0x3394>
   142e4:	ldr	r5, [pc, #72]	; 14334 <close@plt+0x3398>
   142e8:	add	r6, pc, r6
   142ec:	add	r5, pc, r5
   142f0:	sub	r6, r6, r5
   142f4:	mov	r8, r1
   142f8:	mov	r9, r2
   142fc:	bl	10d3c <calloc@plt-0x20>
   14300:	asrs	r6, r6, #2
   14304:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14308:	mov	r4, #0
   1430c:	add	r4, r4, #1
   14310:	ldr	r3, [r5], #4
   14314:	mov	r2, r9
   14318:	mov	r1, r8
   1431c:	mov	r0, r7
   14320:	blx	r3
   14324:	cmp	r6, r4
   14328:	bne	1430c <close@plt+0x3370>
   1432c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14330:	andeq	r0, r1, ip, lsl ip
   14334:	andeq	r0, r1, r4, lsl ip
   14338:	bx	lr
   1433c:	ldr	r3, [pc, #12]	; 14350 <close@plt+0x33b4>
   14340:	mov	r1, #0
   14344:	add	r3, pc, r3
   14348:	ldr	r2, [r3]
   1434c:	b	10ed0 <__cxa_atexit@plt>
   14350:	muleq	r1, r0, sp

Disassembly of section .fini:

00014354 <.fini>:
   14354:	push	{r3, lr}
   14358:	pop	{r3, pc}
