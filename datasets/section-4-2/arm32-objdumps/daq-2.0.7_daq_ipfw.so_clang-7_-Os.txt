
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

00000710 <_init>:
 710:	push	{r3, lr}
 714:	bl	838 <call_weak_fn>
 718:	pop	{r3, pc}

Disassembly of section .plt:

0000071c <.plt>:
 71c:	push	{lr}		; (str lr, [sp, #-4]!)
 720:	ldr	lr, [pc, #4]	; 72c <.plt+0x10>
 724:	add	lr, pc, lr
 728:	ldr	pc, [lr, #8]!
 72c:	.word	0x000118d4

00000730 <calloc@plt>:
 730:	add	ip, pc, #0, 12
 734:	add	ip, ip, #69632	; 0x11000
 738:	ldr	pc, [ip, #2260]!	; 0x8d4

0000073c <strcmp@plt>:
 73c:	add	ip, pc, #0, 12
 740:	add	ip, ip, #69632	; 0x11000
 744:	ldr	pc, [ip, #2252]!	; 0x8cc

00000748 <__cxa_finalize@plt>:
 748:	add	ip, pc, #0, 12
 74c:	add	ip, ip, #69632	; 0x11000
 750:	ldr	pc, [ip, #2244]!	; 0x8c4

00000754 <strtol@plt>:
 754:	add	ip, pc, #0, 12
 758:	add	ip, ip, #69632	; 0x11000
 75c:	ldr	pc, [ip, #2236]!	; 0x8bc

00000760 <free@plt>:
 760:	add	ip, pc, #0, 12
 764:	add	ip, ip, #69632	; 0x11000
 768:	ldr	pc, [ip, #2228]!	; 0x8b4

0000076c <memcpy@plt>:
 76c:	add	ip, pc, #0, 12
 770:	add	ip, ip, #69632	; 0x11000
 774:	ldr	pc, [ip, #2220]!	; 0x8ac

00000778 <select@plt>:
 778:	add	ip, pc, #0, 12
 77c:	add	ip, ip, #69632	; 0x11000
 780:	ldr	pc, [ip, #2212]!	; 0x8a4

00000784 <recvfrom@plt>:
 784:	add	ip, pc, #0, 12
 788:	add	ip, ip, #69632	; 0x11000
 78c:	ldr	pc, [ip, #2204]!	; 0x89c

00000790 <strdup@plt>:
 790:	add	ip, pc, #0, 12
 794:	add	ip, ip, #69632	; 0x11000
 798:	ldr	pc, [ip, #2196]!	; 0x894

0000079c <gettimeofday@plt>:
 79c:	add	ip, pc, #0, 12
 7a0:	add	ip, ip, #69632	; 0x11000
 7a4:	ldr	pc, [ip, #2188]!	; 0x88c

000007a8 <malloc@plt>:
 7a8:	add	ip, pc, #0, 12
 7ac:	add	ip, ip, #69632	; 0x11000
 7b0:	ldr	pc, [ip, #2180]!	; 0x884

000007b4 <sfbpf_compile@plt>:
 7b4:	add	ip, pc, #0, 12
 7b8:	add	ip, ip, #69632	; 0x11000
 7bc:	ldr	pc, [ip, #2172]!	; 0x87c

000007c0 <strerror@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2164]!	; 0x874

000007cc <__gmon_start__@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2156]!	; 0x86c

000007d8 <__errno_location@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2148]!	; 0x864

000007e4 <snprintf@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2140]!	; 0x85c

000007f0 <bind@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2132]!	; 0x854

000007fc <memset@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2124]!	; 0x84c

00000808 <sendto@plt>:
 808:	add	ip, pc, #0, 12
 80c:	add	ip, ip, #69632	; 0x11000
 810:	ldr	pc, [ip, #2116]!	; 0x844

00000814 <sfbpf_filter@plt>:
 814:	add	ip, pc, #0, 12
 818:	add	ip, ip, #69632	; 0x11000
 81c:	ldr	pc, [ip, #2108]!	; 0x83c

00000820 <socket@plt>:
 820:	add	ip, pc, #0, 12
 824:	add	ip, ip, #69632	; 0x11000
 828:	ldr	pc, [ip, #2100]!	; 0x834

0000082c <close@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2092]!	; 0x82c

Disassembly of section .text:

00000838 <call_weak_fn>:
     838:	ldr	r3, [pc, #20]	; 854 <call_weak_fn+0x1c>
     83c:	ldr	r2, [pc, #20]	; 858 <call_weak_fn+0x20>
     840:	add	r3, pc, r3
     844:	ldr	r2, [r3, r2]
     848:	cmp	r2, #0
     84c:	bxeq	lr
     850:	b	7cc <__gmon_start__@plt>
     854:	.word	0x000117b8
     858:	.word	0x0000006c

0000085c <deregister_tm_clones>:
     85c:	ldr	r0, [pc, #44]	; 890 <deregister_tm_clones+0x34>
     860:	ldr	r3, [pc, #44]	; 894 <deregister_tm_clones+0x38>
     864:	add	r0, pc, r0
     868:	add	r3, pc, r3
     86c:	cmp	r3, r0
     870:	ldr	r3, [pc, #32]	; 898 <deregister_tm_clones+0x3c>
     874:	add	r3, pc, r3
     878:	bxeq	lr
     87c:	ldr	r2, [pc, #24]	; 89c <deregister_tm_clones+0x40>
     880:	ldr	r3, [r3, r2]
     884:	cmp	r3, #0
     888:	bxeq	lr
     88c:	bx	r3
     890:	.word	0x00011874
     894:	.word	0x00011870
     898:	.word	0x00011784
     89c:	.word	0x00000068

000008a0 <register_tm_clones>:
     8a0:	ldr	r0, [pc, #56]	; 8e0 <register_tm_clones+0x40>
     8a4:	ldr	r3, [pc, #56]	; 8e4 <register_tm_clones+0x44>
     8a8:	add	r0, pc, r0
     8ac:	add	r3, pc, r3
     8b0:	sub	r1, r3, r0
     8b4:	ldr	r3, [pc, #44]	; 8e8 <register_tm_clones+0x48>
     8b8:	asr	r1, r1, #2
     8bc:	add	r3, pc, r3
     8c0:	add	r1, r1, r1, lsr #31
     8c4:	asrs	r1, r1, #1
     8c8:	bxeq	lr
     8cc:	ldr	r2, [pc, #24]	; 8ec <register_tm_clones+0x4c>
     8d0:	ldr	r3, [r3, r2]
     8d4:	cmp	r3, #0
     8d8:	bxeq	lr
     8dc:	bx	r3
     8e0:	.word	0x00011830
     8e4:	.word	0x0001182c
     8e8:	.word	0x0001173c
     8ec:	.word	0x00000070

000008f0 <__do_global_dtors_aux>:
     8f0:	ldr	r3, [pc, #76]	; 944 <__do_global_dtors_aux+0x54>
     8f4:	ldr	r2, [pc, #76]	; 948 <__do_global_dtors_aux+0x58>
     8f8:	add	r3, pc, r3
     8fc:	add	r2, pc, r2
     900:	ldrb	r3, [r3]
     904:	cmp	r3, #0
     908:	bxne	lr
     90c:	ldr	r3, [pc, #56]	; 94c <__do_global_dtors_aux+0x5c>
     910:	push	{r4, lr}
     914:	ldr	r3, [r2, r3]
     918:	cmp	r3, #0
     91c:	beq	92c <__do_global_dtors_aux+0x3c>
     920:	ldr	r3, [pc, #40]	; 950 <__do_global_dtors_aux+0x60>
     924:	ldr	r0, [pc, r3]
     928:	bl	748 <__cxa_finalize@plt>
     92c:	bl	85c <deregister_tm_clones>
     930:	ldr	r3, [pc, #28]	; 954 <__do_global_dtors_aux+0x64>
     934:	mov	r2, #1
     938:	add	r3, pc, r3
     93c:	strb	r2, [r3]
     940:	pop	{r4, pc}
     944:	.word	0x000117e0
     948:	.word	0x000116fc
     94c:	.word	0x00000064
     950:	.word	0x00011748
     954:	.word	0x000117a0

00000958 <frame_dummy>:
     958:	b	8a0 <register_tm_clones>

0000095c <ipfw_daq_initialize>:
     95c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     960:	add	fp, sp, #28
     964:	sub	sp, sp, #28
     968:	mov	r5, r1
     96c:	mov	r7, r0
     970:	mov	r0, #1
     974:	mov	r1, #416	; 0x1a0
     978:	mov	r8, r3
     97c:	mov	r6, r2
     980:	bl	730 <calloc@plt>
     984:	cmp	r0, #0
     988:	beq	aa4 <ipfw_daq_initialize+0x148>
     98c:	mov	r4, r0
     990:	mov	r0, #8000	; 0x1f40
     994:	mov	r2, #2
     998:	str	r5, [sp, #20]
     99c:	stmib	r4, {r0, r2}
     9a0:	ldr	sl, [r7, #20]
     9a4:	cmp	sl, #0
     9a8:	beq	a38 <ipfw_daq_initialize+0xdc>
     9ac:	str	r6, [sp, #12]
     9b0:	str	r8, [sp, #16]
     9b4:	movw	r6, #65534	; 0xfffe
     9b8:	ldr	r5, [pc, #412]	; b5c <ipfw_daq_initialize+0x200>
     9bc:	add	r5, pc, r5
     9c0:	ldr	r8, [sl, #4]
     9c4:	cmp	r8, #0
     9c8:	ldrbne	r0, [r8]
     9cc:	cmpne	r0, #0
     9d0:	beq	ac4 <ipfw_daq_initialize+0x168>
     9d4:	ldr	r9, [sl]
     9d8:	mov	r1, r5
     9dc:	mov	r0, r9
     9e0:	bl	73c <strcmp@plt>
     9e4:	cmp	r0, #0
     9e8:	bne	b04 <ipfw_daq_initialize+0x1a8>
     9ec:	mov	r0, r8
     9f0:	add	r1, sp, #24
     9f4:	mov	r2, #0
     9f8:	str	r8, [sp, #24]
     9fc:	bl	754 <strtol@plt>
     a00:	sub	r1, r0, #1
     a04:	str	r0, [r4, #4]
     a08:	cmp	r1, r6
     a0c:	bhi	b18 <ipfw_daq_initialize+0x1bc>
     a10:	ldr	r1, [sp, #24]
     a14:	ldrb	r1, [r1]
     a18:	cmp	r1, #0
     a1c:	bne	b18 <ipfw_daq_initialize+0x1bc>
     a20:	ldr	sl, [sl, #8]
     a24:	cmp	sl, #0
     a28:	bne	9c0 <ipfw_daq_initialize+0x64>
     a2c:	ldr	r2, [r4, #8]
     a30:	ldr	r8, [sp, #16]
     a34:	ldr	r6, [sp, #12]
     a38:	ldmib	r7, {r1, r3, r7}
     a3c:	rev16	r0, r0
     a40:	mov	r5, #0
     a44:	cmp	r1, #0
     a48:	movweq	r1, #65535	; 0xffff
     a4c:	str	r1, [r4, #24]
     a50:	str	r3, [r4, #20]
     a54:	mov	r3, #300	; 0x12c
     a58:	strh	r2, [r4, r3]
     a5c:	movw	r2, #302	; 0x12e
     a60:	strh	r0, [r4, r2]
     a64:	clz	r0, r7
     a68:	str	r5, [r4, #304]	; 0x130
     a6c:	lsr	r0, r0, #5
     a70:	str	r0, [r4, #16]
     a74:	mov	r0, r1
     a78:	bl	7a8 <malloc@plt>
     a7c:	cmp	r0, #0
     a80:	str	r0, [r4, #28]
     a84:	beq	ad8 <ipfw_daq_initialize+0x17c>
     a88:	mov	r0, #1
     a8c:	str	r0, [r4, #316]	; 0x13c
     a90:	mvn	r0, #0
     a94:	str	r0, [r4]
     a98:	ldr	r0, [sp, #20]
     a9c:	str	r4, [r0]
     aa0:	b	b48 <ipfw_daq_initialize+0x1ec>
     aa4:	ldr	r2, [pc, #168]	; b54 <ipfw_daq_initialize+0x1f8>
     aa8:	ldr	r3, [pc, #168]	; b58 <ipfw_daq_initialize+0x1fc>
     aac:	mov	r0, r6
     ab0:	mov	r1, r8
     ab4:	add	r2, pc, r2
     ab8:	add	r3, pc, r3
     abc:	bl	7e4 <snprintf@plt>
     ac0:	b	afc <ipfw_daq_initialize+0x1a0>
     ac4:	ldr	r0, [sl]
     ac8:	str	r0, [sp]
     acc:	ldr	r2, [pc, #140]	; b60 <ipfw_daq_initialize+0x204>
     ad0:	add	r2, pc, r2
     ad4:	b	b28 <ipfw_daq_initialize+0x1cc>
     ad8:	ldr	r2, [pc, #144]	; b70 <ipfw_daq_initialize+0x214>
     adc:	ldr	r3, [pc, #144]	; b74 <ipfw_daq_initialize+0x218>
     ae0:	mov	r0, r6
     ae4:	mov	r1, r8
     ae8:	add	r2, pc, r2
     aec:	add	r3, pc, r3
     af0:	bl	7e4 <snprintf@plt>
     af4:	mov	r0, r4
     af8:	bl	ffc <ipfw_daq_shutdown>
     afc:	mvn	r5, #1
     b00:	b	b48 <ipfw_daq_initialize+0x1ec>
     b04:	str	r9, [sp]
     b08:	str	r8, [sp, #4]
     b0c:	ldr	r2, [pc, #88]	; b6c <ipfw_daq_initialize+0x210>
     b10:	add	r2, pc, r2
     b14:	b	b28 <ipfw_daq_initialize+0x1cc>
     b18:	ldr	r0, [sl, #4]
     b1c:	str	r0, [sp]
     b20:	ldr	r2, [pc, #64]	; b68 <ipfw_daq_initialize+0x20c>
     b24:	add	r2, pc, r2
     b28:	ldr	r3, [pc, #52]	; b64 <ipfw_daq_initialize+0x208>
     b2c:	ldr	r0, [sp, #12]
     b30:	ldr	r1, [sp, #16]
     b34:	add	r3, pc, r3
     b38:	bl	7e4 <snprintf@plt>
     b3c:	mov	r0, r4
     b40:	bl	ffc <ipfw_daq_shutdown>
     b44:	mvn	r5, #0
     b48:	mov	r0, r5
     b4c:	sub	sp, fp, #28
     b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b54:	.word	0x0000068d
     b58:	.word	0x000006b2
     b5c:	.word	0x0000081c
     b60:	.word	0x000006d6
     b64:	.word	0x00000691
     b68:	.word	0x000006b9
     b6c:	.word	0x000006e0
     b70:	.word	0x00000696
     b74:	.word	0x0000067e

00000b78 <ipfw_daq_set_filter>:
     b78:	push	{r4, r5, r6, sl, fp, lr}
     b7c:	add	fp, sp, #16
     b80:	sub	sp, sp, #16
     b84:	mov	r4, r0
     b88:	ldr	r0, [r0, #24]
     b8c:	mov	r5, r1
     b90:	mov	r1, #0
     b94:	mov	r2, #1
     b98:	str	r2, [sp]
     b9c:	str	r1, [sp, #4]
     ba0:	add	r2, sp, #8
     ba4:	mov	r1, #228	; 0xe4
     ba8:	mov	r3, r5
     bac:	bl	7b4 <sfbpf_compile@plt>
     bb0:	cmp	r0, #0
     bb4:	blt	bfc <ipfw_daq_set_filter+0x84>
     bb8:	ldr	r0, [r4, #32]
     bbc:	cmp	r0, #0
     bc0:	beq	bc8 <ipfw_daq_set_filter+0x50>
     bc4:	bl	760 <free@plt>
     bc8:	ldr	r0, [r4, #296]	; 0x128
     bcc:	add	r6, r4, #292	; 0x124
     bd0:	cmp	r0, #0
     bd4:	beq	bdc <ipfw_daq_set_filter+0x64>
     bd8:	bl	760 <free@plt>
     bdc:	mov	r0, r5
     be0:	bl	790 <strdup@plt>
     be4:	str	r0, [r4, #32]
     be8:	ldr	r0, [sp, #8]
     bec:	ldr	r1, [sp, #12]
     bf0:	stm	r6, {r0, r1}
     bf4:	mov	r0, #0
     bf8:	b	c00 <ipfw_daq_set_filter+0x88>
     bfc:	mvn	r0, #0
     c00:	sub	sp, fp, #16
     c04:	pop	{r4, r5, r6, sl, fp, pc}

00000c08 <ipfw_daq_start>:
     c08:	push	{r4, sl, fp, lr}
     c0c:	add	fp, sp, #8
     c10:	sub	sp, sp, #8
     c14:	mov	r4, r0
     c18:	ldr	r0, [r0, #8]
     c1c:	mov	r1, #3
     c20:	mov	r2, #254	; 0xfe
     c24:	bl	820 <socket@plt>
     c28:	cmn	r0, #1
     c2c:	str	r0, [r4]
     c30:	beq	c58 <ipfw_daq_start+0x50>
     c34:	add	r1, r4, #300	; 0x12c
     c38:	mov	r2, #16
     c3c:	bl	7f0 <bind@plt>
     c40:	cmn	r0, #1
     c44:	beq	c78 <ipfw_daq_start+0x70>
     c48:	mov	r0, #2
     c4c:	str	r0, [r4, #316]	; 0x13c
     c50:	mov	r0, #0
     c54:	b	ca8 <ipfw_daq_start+0xa0>
     c58:	bl	7d8 <__errno_location@plt>
     c5c:	ldr	r0, [r0]
     c60:	bl	7c0 <strerror@plt>
     c64:	str	r0, [sp]
     c68:	add	r0, r4, #36	; 0x24
     c6c:	ldr	r2, [pc, #60]	; cb0 <ipfw_daq_start+0xa8>
     c70:	add	r2, pc, r2
     c74:	b	c94 <ipfw_daq_start+0x8c>
     c78:	bl	7d8 <__errno_location@plt>
     c7c:	ldr	r0, [r0]
     c80:	bl	7c0 <strerror@plt>
     c84:	str	r0, [sp]
     c88:	add	r0, r4, #36	; 0x24
     c8c:	ldr	r2, [pc, #36]	; cb8 <ipfw_daq_start+0xb0>
     c90:	add	r2, pc, r2
     c94:	ldr	r3, [pc, #24]	; cb4 <ipfw_daq_start+0xac>
     c98:	mov	r1, #256	; 0x100
     c9c:	add	r3, pc, r3
     ca0:	bl	7e4 <snprintf@plt>
     ca4:	mvn	r0, #0
     ca8:	sub	sp, fp, #8
     cac:	pop	{r4, sl, fp, pc}
     cb0:	.word	0x000005a2
     cb4:	.word	0x0000059b
     cb8:	.word	0x000005b6

00000cbc <ipfw_daq_acquire>:
     cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     cc0:	add	fp, sp, #28
     cc4:	sub	sp, sp, #228	; 0xe4
     cc8:	mov	r4, r0
     ccc:	mov	r0, #0
     cd0:	cmp	r1, #0
     cd4:	str	r2, [sp, #20]
     cd8:	add	r7, sp, #96	; 0x60
     cdc:	mov	r5, #1
     ce0:	mov	r8, #0
     ce4:	mov	sl, #0
     ce8:	str	r0, [sp, #92]	; 0x5c
     cec:	add	r0, r4, #344	; 0x158
     cf0:	mvneq	r1, #0
     cf4:	str	r0, [sp, #8]
     cf8:	add	r0, r4, #336	; 0x150
     cfc:	str	r1, [r4, #12]
     d00:	str	r0, [sp, #16]
     d04:	add	r0, r4, #360	; 0x168
     d08:	str	r0, [sp, #12]
     d0c:	add	r0, r4, #320	; 0x140
     d10:	str	r0, [sp, #24]
     d14:	add	r0, sp, #32
     d18:	add	r9, r0, #16
     d1c:	add	r0, r4, #300	; 0x12c
     d20:	str	r0, [sp, #28]
     d24:	ldr	r6, [pc, #580]	; f70 <ipfw_daq_acquire+0x2b4>
     d28:	add	r6, pc, r6
     d2c:	mov	r0, r7
     d30:	mov	r1, #0
     d34:	mov	r2, #128	; 0x80
     d38:	bl	7fc <memset@plt>
     d3c:	ldr	r0, [r4]
     d40:	asr	r1, r0, #31
     d44:	and	r3, r0, #31
     d48:	add	r1, r0, r1, lsr #27
     d4c:	add	r0, r0, #1
     d50:	asr	r1, r1, #5
     d54:	ldr	r2, [r7, r1, lsl #2]
     d58:	orr	r2, r2, r5, lsl r3
     d5c:	mov	r3, #0
     d60:	str	r2, [r7, r1, lsl #2]
     d64:	mov	r2, #0
     d68:	ldr	r1, [r4, #20]
     d6c:	str	r1, [sp, #88]	; 0x58
     d70:	add	r1, sp, #88	; 0x58
     d74:	str	r1, [sp]
     d78:	mov	r1, r7
     d7c:	bl	778 <select@plt>
     d80:	cmn	r0, #1
     d84:	ble	f10 <ipfw_daq_acquire+0x254>
     d88:	ldr	r0, [r4]
     d8c:	asr	r1, r0, #31
     d90:	and	r2, r0, #31
     d94:	add	r1, r0, r1, lsr #27
     d98:	asr	r1, r1, #5
     d9c:	ldr	r1, [r7, r1, lsl #2]
     da0:	tst	r1, r5, lsl r2
     da4:	beq	ef8 <ipfw_daq_acquire+0x23c>
     da8:	mov	r1, #16
     dac:	str	r1, [sp, #84]	; 0x54
     db0:	ldr	r1, [sp, #28]
     db4:	ldrd	r2, [r4, #24]
     db8:	str	r1, [sp]
     dbc:	add	r1, sp, #84	; 0x54
     dc0:	str	r1, [sp, #4]
     dc4:	mov	r1, r3
     dc8:	mov	r3, #0
     dcc:	bl	784 <recvfrom@plt>
     dd0:	mov	r5, r0
     dd4:	cmn	r0, #1
     dd8:	bne	dec <ipfw_daq_acquire+0x130>
     ddc:	bl	7d8 <__errno_location@plt>
     de0:	ldr	r0, [r0]
     de4:	cmp	r0, #4
     de8:	bne	f40 <ipfw_daq_acquire+0x284>
     dec:	mov	r0, r6
     df0:	mov	r1, #0
     df4:	str	sl, [r6]
     df8:	str	sl, [r6, #4]
     dfc:	bl	79c <gettimeofday@plt>
     e00:	ldr	r0, [r6, #4]
     e04:	str	r5, [sp, #40]	; 0x28
     e08:	str	r5, [sp, #44]	; 0x2c
     e0c:	str	r0, [sp, #36]	; 0x24
     e10:	ldr	r0, [pc, #352]	; f78 <ipfw_daq_acquire+0x2bc>
     e14:	ldr	r0, [pc, r0]
     e18:	ldr	r2, [sp, #24]
     e1c:	str	r0, [sp, #32]
     e20:	mvn	r0, #0
     e24:	str	r0, [r9]
     e28:	str	r0, [r9, #4]
     e2c:	str	r0, [r9, #8]
     e30:	str	r0, [r9, #12]
     e34:	str	sl, [sp, #64]	; 0x40
     e38:	strh	sl, [sp, #80]	; 0x50
     e3c:	ldrd	r0, [r2]
     e40:	adds	r0, r0, #1
     e44:	adc	r1, r1, #0
     e48:	strd	r0, [r2]
     e4c:	ldr	r0, [r4, #296]	; 0x128
     e50:	cmp	r0, #0
     e54:	beq	e70 <ipfw_daq_acquire+0x1b4>
     e58:	ldr	r1, [r4, #28]
     e5c:	mov	r2, r5
     e60:	mov	r3, r5
     e64:	bl	814 <sfbpf_filter@plt>
     e68:	cmp	r0, #0
     e6c:	beq	eb0 <ipfw_daq_acquire+0x1f4>
     e70:	ldr	r2, [r4, #28]
     e74:	ldr	r3, [sp, #20]
     e78:	mov	r0, #0
     e7c:	add	r1, sp, #32
     e80:	blx	r3
     e84:	ldr	r1, [sp, #12]
     e88:	cmp	r0, #6
     e8c:	movwhi	r0, #1
     e90:	ldr	r2, [r1, r0, lsl #3]!
     e94:	adds	r2, r2, #1
     e98:	str	r2, [r1]
     e9c:	ldr	r2, [r1, #4]
     ea0:	adc	r2, r2, #0
     ea4:	str	r2, [r1, #4]
     ea8:	ldr	r1, [sp, #16]
     eac:	b	eb8 <ipfw_daq_acquire+0x1fc>
     eb0:	ldr	r1, [sp, #8]
     eb4:	mov	r0, #0
     eb8:	ldrd	r2, [r1]
     ebc:	mov	r5, #1
     ec0:	adds	r2, r2, #1
     ec4:	adc	r3, r3, #0
     ec8:	strd	r2, [r1]
     ecc:	ldr	r1, [r4, #16]
     ed0:	cmp	r1, #0
     ed4:	bne	ee4 <ipfw_daq_acquire+0x228>
     ed8:	mov	r1, #45	; 0x2d
     edc:	tst	r5, r1, lsr r0
     ee0:	beq	ef4 <ipfw_daq_acquire+0x238>
     ee4:	ldr	r1, [r4, #28]
     ee8:	ldr	r2, [sp, #44]	; 0x2c
     eec:	mov	r0, r4
     ef0:	bl	10c4 <ipfw_daq_forward>
     ef4:	add	r8, r8, #1
     ef8:	ldr	r0, [r4, #12]
     efc:	cmp	r0, #0
     f00:	cmpge	r8, r0
     f04:	blt	d2c <ipfw_daq_acquire+0x70>
     f08:	mov	r0, #0
     f0c:	b	f68 <ipfw_daq_acquire+0x2ac>
     f10:	bl	7d8 <__errno_location@plt>
     f14:	ldr	r1, [r0]
     f18:	mov	r0, #0
     f1c:	cmp	r1, #4
     f20:	beq	f68 <ipfw_daq_acquire+0x2ac>
     f24:	mov	r0, r1
     f28:	bl	7c0 <strerror@plt>
     f2c:	str	r0, [sp]
     f30:	add	r0, r4, #36	; 0x24
     f34:	ldr	r2, [pc, #56]	; f74 <ipfw_daq_acquire+0x2b8>
     f38:	add	r2, pc, r2
     f3c:	b	f54 <ipfw_daq_acquire+0x298>
     f40:	bl	7c0 <strerror@plt>
     f44:	str	r0, [sp]
     f48:	add	r0, r4, #36	; 0x24
     f4c:	ldr	r2, [pc, #40]	; f7c <ipfw_daq_acquire+0x2c0>
     f50:	add	r2, pc, r2
     f54:	ldr	r3, [pc, #36]	; f80 <ipfw_daq_acquire+0x2c4>
     f58:	mov	r1, #256	; 0x100
     f5c:	add	r3, pc, r3
     f60:	bl	7e4 <snprintf@plt>
     f64:	mvn	r0, #0
     f68:	sub	sp, fp, #28
     f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f70:	.word	0x000113b8
     f74:	.word	0x00000331
     f78:	.word	0x000112cc
     f7c:	.word	0x0000034f
     f80:	.word	0x00000332

00000f84 <ipfw_daq_inject>:
     f84:	push	{r4, sl, fp, lr}
     f88:	add	fp, sp, #8
     f8c:	mov	r1, r2
     f90:	mov	r2, r3
     f94:	mov	r4, r0
     f98:	bl	10c4 <ipfw_daq_forward>
     f9c:	cmp	r0, #0
     fa0:	popne	{r4, sl, fp, pc}
     fa4:	ldr	r1, [r4, #352]	; 0x160
     fa8:	ldr	r2, [r4, #356]	; 0x164
     fac:	adds	r1, r1, #1
     fb0:	adc	r2, r2, #0
     fb4:	str	r1, [r4, #352]	; 0x160
     fb8:	str	r2, [r4, #356]	; 0x164
     fbc:	pop	{r4, sl, fp, pc}

00000fc0 <ipfw_daq_breakloop>:
     fc0:	mov	r1, #0
     fc4:	str	r1, [r0, #12]
     fc8:	mov	r0, #0
     fcc:	bx	lr

00000fd0 <ipfw_daq_stop>:
     fd0:	push	{r4, sl, fp, lr}
     fd4:	add	fp, sp, #8
     fd8:	mov	r4, r0
     fdc:	ldr	r0, [r0]
     fe0:	bl	82c <close@plt>
     fe4:	mvn	r0, #0
     fe8:	str	r0, [r4]
     fec:	mov	r0, #3
     ff0:	str	r0, [r4, #316]	; 0x13c
     ff4:	mov	r0, #0
     ff8:	pop	{r4, sl, fp, pc}

00000ffc <ipfw_daq_shutdown>:
     ffc:	push	{r4, sl, fp, lr}
    1000:	add	fp, sp, #8
    1004:	mov	r4, r0
    1008:	ldr	r0, [r0, #32]
    100c:	cmp	r0, #0
    1010:	beq	1018 <ipfw_daq_shutdown+0x1c>
    1014:	bl	760 <free@plt>
    1018:	ldr	r0, [r4, #28]
    101c:	cmp	r0, #0
    1020:	beq	1028 <ipfw_daq_shutdown+0x2c>
    1024:	bl	760 <free@plt>
    1028:	mov	r0, r4
    102c:	pop	{r4, sl, fp, lr}
    1030:	b	760 <free@plt>

00001034 <ipfw_daq_check_status>:
    1034:	ldr	r0, [r0, #316]	; 0x13c
    1038:	bx	lr

0000103c <ipfw_daq_get_stats>:
    103c:	push	{fp, lr}
    1040:	mov	fp, sp
    1044:	mov	r2, r1
    1048:	add	r1, r0, #320	; 0x140
    104c:	mov	r0, r2
    1050:	mov	r2, #96	; 0x60
    1054:	bl	76c <memcpy@plt>
    1058:	mov	r0, #0
    105c:	pop	{fp, pc}

00001060 <ipfw_daq_reset_stats>:
    1060:	add	r0, r0, #320	; 0x140
    1064:	mov	r1, #0
    1068:	mov	r2, #96	; 0x60
    106c:	b	7fc <memset@plt>

00001070 <ipfw_daq_get_snaplen>:
    1070:	ldr	r0, [r0, #24]
    1074:	bx	lr

00001078 <ipfw_daq_get_capabilities>:
    1078:	movw	r0, #743	; 0x2e7
    107c:	bx	lr

00001080 <ipfw_daq_get_datalink_type>:
    1080:	mov	r0, #228	; 0xe4
    1084:	bx	lr

00001088 <ipfw_daq_get_errbuf>:
    1088:	add	r0, r0, #36	; 0x24
    108c:	bx	lr

00001090 <ipfw_daq_set_errbuf>:
    1090:	ldr	r3, [pc, #28]	; 10b4 <ipfw_daq_set_errbuf+0x24>
    1094:	ldr	r2, [pc, #28]	; 10b8 <ipfw_daq_set_errbuf+0x28>
    1098:	cmp	r1, #0
    109c:	add	r0, r0, #36	; 0x24
    10a0:	add	r3, pc, r3
    10a4:	add	r2, pc, r2
    10a8:	movne	r3, r1
    10ac:	mov	r1, #256	; 0x100
    10b0:	b	7e4 <snprintf@plt>
    10b4:	.word	0x00000124
    10b8:	.word	0x00000258

000010bc <ipfw_daq_get_device_index>:
    10bc:	mvn	r0, #3
    10c0:	bx	lr

000010c4 <ipfw_daq_forward>:
    10c4:	push	{r4, r5, fp, lr}
    10c8:	add	fp, sp, #8
    10cc:	sub	sp, sp, #8
    10d0:	mov	r3, r0
    10d4:	mov	r4, r0
    10d8:	mov	r5, #16
    10dc:	ldr	r0, [r3], #300	; 0x12c
    10e0:	stm	sp, {r3, r5}
    10e4:	mov	r3, #0
    10e8:	mov	r5, #0
    10ec:	bl	808 <sendto@plt>
    10f0:	cmn	r0, #1
    10f4:	bne	1128 <ipfw_daq_forward+0x64>
    10f8:	bl	7d8 <__errno_location@plt>
    10fc:	ldr	r0, [r0]
    1100:	bl	7c0 <strerror@plt>
    1104:	str	r0, [sp]
    1108:	add	r0, r4, #36	; 0x24
    110c:	mov	r1, #256	; 0x100
    1110:	ldr	r2, [pc, #28]	; 1134 <ipfw_daq_forward+0x70>
    1114:	ldr	r3, [pc, #28]	; 1138 <ipfw_daq_forward+0x74>
    1118:	add	r2, pc, r2
    111c:	add	r3, pc, r3
    1120:	bl	7e4 <snprintf@plt>
    1124:	mvn	r5, #0
    1128:	mov	r0, r5
    112c:	sub	sp, fp, #8
    1130:	pop	{r4, r5, fp, pc}
    1134:	.word	0x000001ae
    1138:	.word	0x000001cf

Disassembly of section .fini:

0000113c <_fini>:
    113c:	push	{r3, lr}
    1140:	pop	{r3, pc}
