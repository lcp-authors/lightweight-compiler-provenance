
../repos/charybdis/modules/.libs/chm_nocolour.so:     file format elf32-littlearm


Disassembly of section .init:

0000045c <_init>:
 45c:	push	{r3, lr}
 460:	bl	4b8 <call_weak_fn>
 464:	pop	{r3, pc}

Disassembly of section .plt:

00000468 <.plt>:
 468:	push	{lr}		; (str lr, [sp, #-4]!)
 46c:	ldr	lr, [pc, #4]	; 478 <.plt+0x10>
 470:	add	lr, pc, lr
 474:	ldr	pc, [lr, #8]!
 478:	.word	0x00010b88

0000047c <cflag_add@plt>:
 47c:	add	ip, pc, #0, 12
 480:	add	ip, ip, #16, 20	; 0x10000
 484:	ldr	pc, [ip, #2952]!	; 0xb88

00000488 <__cxa_finalize@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2944]!	; 0xb80

00000494 <__gmon_start__@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2936]!	; 0xb78

000004a0 <rb_strlcpy@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2928]!	; 0xb70

000004ac <cflag_orphan@plt>:
 4ac:	add	ip, pc, #0, 12
 4b0:	add	ip, ip, #16, 20	; 0x10000
 4b4:	ldr	pc, [ip, #2920]!	; 0xb68

Disassembly of section .text:

000004b8 <call_weak_fn>:
 4b8:	ldr	r3, [pc, #20]	; 4d4 <call_weak_fn+0x1c>
 4bc:	ldr	r2, [pc, #20]	; 4d8 <call_weak_fn+0x20>
 4c0:	add	r3, pc, r3
 4c4:	ldr	r2, [r3, r2]
 4c8:	cmp	r2, #0
 4cc:	bxeq	lr
 4d0:	b	494 <__gmon_start__@plt>
 4d4:	.word	0x00010b38
 4d8:	.word	0x0000002c

000004dc <deregister_tm_clones>:
 4dc:	ldr	r0, [pc, #44]	; 510 <deregister_tm_clones+0x34>
 4e0:	ldr	r3, [pc, #44]	; 514 <deregister_tm_clones+0x38>
 4e4:	add	r0, pc, r0
 4e8:	add	r3, pc, r3
 4ec:	cmp	r3, r0
 4f0:	ldr	r3, [pc, #32]	; 518 <deregister_tm_clones+0x3c>
 4f4:	add	r3, pc, r3
 4f8:	bxeq	lr
 4fc:	ldr	r2, [pc, #24]	; 51c <deregister_tm_clones+0x40>
 500:	ldr	r3, [r3, r2]
 504:	cmp	r3, #0
 508:	bxeq	lr
 50c:	bx	r3
 510:	.word	0x00010b90
 514:	.word	0x00010b8c
 518:	.word	0x00010b04
 51c:	.word	0x00000024

00000520 <register_tm_clones>:
 520:	ldr	r0, [pc, #56]	; 560 <register_tm_clones+0x40>
 524:	ldr	r3, [pc, #56]	; 564 <register_tm_clones+0x44>
 528:	add	r0, pc, r0
 52c:	add	r3, pc, r3
 530:	sub	r1, r3, r0
 534:	ldr	r3, [pc, #44]	; 568 <register_tm_clones+0x48>
 538:	asr	r1, r1, #2
 53c:	add	r3, pc, r3
 540:	add	r1, r1, r1, lsr #31
 544:	asrs	r1, r1, #1
 548:	bxeq	lr
 54c:	ldr	r2, [pc, #24]	; 56c <register_tm_clones+0x4c>
 550:	ldr	r3, [r3, r2]
 554:	cmp	r3, #0
 558:	bxeq	lr
 55c:	bx	r3
 560:	.word	0x00010b4c
 564:	.word	0x00010b48
 568:	.word	0x00010abc
 56c:	.word	0x00000034

00000570 <__do_global_dtors_aux>:
 570:	ldr	r3, [pc, #76]	; 5c4 <__do_global_dtors_aux+0x54>
 574:	ldr	r2, [pc, #76]	; 5c8 <__do_global_dtors_aux+0x58>
 578:	add	r3, pc, r3
 57c:	add	r2, pc, r2
 580:	ldrb	r3, [r3]
 584:	cmp	r3, #0
 588:	bxne	lr
 58c:	ldr	r3, [pc, #56]	; 5cc <__do_global_dtors_aux+0x5c>
 590:	push	{r4, lr}
 594:	ldr	r3, [r2, r3]
 598:	cmp	r3, #0
 59c:	beq	5ac <__do_global_dtors_aux+0x3c>
 5a0:	ldr	r3, [pc, #40]	; 5d0 <__do_global_dtors_aux+0x60>
 5a4:	ldr	r0, [pc, r3]
 5a8:	bl	488 <__cxa_finalize@plt>
 5ac:	bl	4dc <deregister_tm_clones>
 5b0:	ldr	r3, [pc, #28]	; 5d4 <__do_global_dtors_aux+0x64>
 5b4:	mov	r2, #1
 5b8:	add	r3, pc, r3
 5bc:	strb	r2, [r3]
 5c0:	pop	{r4, pc}
 5c4:	.word	0x00010afc
 5c8:	.word	0x00010a7c
 5cc:	.word	0x00000020
 5d0:	.word	0x00010a8c
 5d4:	.word	0x00010abc

000005d8 <frame_dummy>:
 5d8:	b	520 <register_tm_clones>

000005dc <chm_nocolour_process>:
 5dc:	push	{fp, lr}
 5e0:	mov	fp, sp
 5e4:	sub	sp, sp, #8
 5e8:	str	r0, [sp, #4]
 5ec:	ldr	r0, [sp, #4]
 5f0:	ldr	r0, [r0, #16]
 5f4:	cmp	r0, #0
 5f8:	beq	600 <chm_nocolour_process+0x24>
 5fc:	b	660 <chm_nocolour_process+0x84>
 600:	ldr	r0, [pc, #96]	; 668 <chm_nocolour_process+0x8c>
 604:	add	r0, pc, r0
 608:	ldr	r1, [sp, #4]
 60c:	ldr	r1, [r1, #8]
 610:	ldr	r1, [r1, #12]
 614:	ldr	r0, [r0]
 618:	and	r0, r1, r0
 61c:	cmp	r0, #0
 620:	beq	660 <chm_nocolour_process+0x84>
 624:	ldr	r0, [pc, #72]	; 674 <chm_nocolour_process+0x98>
 628:	add	r0, pc, r0
 62c:	ldr	r1, [sp, #4]
 630:	ldr	r1, [r1, #12]
 634:	movw	r2, #512	; 0x200
 638:	bl	4a0 <rb_strlcpy@plt>
 63c:	ldr	r1, [pc, #44]	; 670 <chm_nocolour_process+0x94>
 640:	add	r1, pc, r1
 644:	str	r0, [sp]
 648:	mov	r0, r1
 64c:	bl	6f0 <strip_colour>
 650:	ldr	r1, [pc, #20]	; 66c <chm_nocolour_process+0x90>
 654:	add	r1, pc, r1
 658:	ldr	r2, [sp, #4]
 65c:	str	r1, [r2, #12]
 660:	mov	sp, fp
 664:	pop	{fp, pc}
 668:	.word	0x00010a74
 66c:	.word	0x00010a28
 670:	.word	0x00010a3c
 674:	.word	0x00010a54

00000678 <_modinit>:
 678:	push	{fp, lr}
 67c:	mov	fp, sp
 680:	sub	sp, sp, #8
 684:	ldr	r0, [pc, #72]	; 6d4 <_modinit+0x5c>
 688:	ldr	r1, [pc, r0]
 68c:	movw	r0, #99	; 0x63
 690:	and	r0, r0, #255	; 0xff
 694:	bl	47c <cflag_add@plt>
 698:	ldr	r1, [pc, #48]	; 6d0 <_modinit+0x58>
 69c:	add	r1, pc, r1
 6a0:	str	r0, [r1]
 6a4:	ldr	r0, [r1]
 6a8:	cmp	r0, #0
 6ac:	bne	6bc <_modinit+0x44>
 6b0:	mvn	r0, #0
 6b4:	str	r0, [sp, #4]
 6b8:	b	6c4 <_modinit+0x4c>
 6bc:	movw	r0, #0
 6c0:	str	r0, [sp, #4]
 6c4:	ldr	r0, [sp, #4]
 6c8:	mov	sp, fp
 6cc:	pop	{fp, pc}
 6d0:	.word	0x000109dc
 6d4:	.word	0x00010998

000006d8 <_moddeinit>:
 6d8:	push	{fp, lr}
 6dc:	mov	fp, sp
 6e0:	movw	r0, #99	; 0x63
 6e4:	and	r0, r0, #255	; 0xff
 6e8:	bl	4ac <cflag_orphan@plt>
 6ec:	pop	{fp, pc}

000006f0 <strip_colour>:
 6f0:	sub	sp, sp, #24
 6f4:	str	r0, [sp, #20]
 6f8:	ldr	r0, [sp, #20]
 6fc:	str	r0, [sp, #16]
 700:	ldr	r0, [sp, #20]
 704:	str	r0, [sp, #12]
 708:	movw	r0, #0
 70c:	str	r0, [sp, #8]
 710:	ldr	r0, [sp, #16]
 714:	movw	r1, #0
 718:	cmp	r0, r1
 71c:	movw	r0, #0
 720:	str	r0, [sp, #4]
 724:	beq	740 <strip_colour+0x50>
 728:	ldr	r0, [sp, #16]
 72c:	ldrb	r0, [r0]
 730:	cmp	r0, #0
 734:	movw	r0, #0
 738:	movne	r0, #1
 73c:	str	r0, [sp, #4]
 740:	ldr	r0, [sp, #4]
 744:	tst	r0, #1
 748:	beq	960 <strip_colour+0x270>
 74c:	ldr	r0, [sp, #16]
 750:	ldrb	r0, [r0]
 754:	mov	r1, r0
 758:	cmp	r0, #2
 75c:	str	r1, [sp]
 760:	beq	90c <strip_colour+0x21c>
 764:	b	768 <strip_colour+0x78>
 768:	ldr	r0, [sp]
 76c:	cmp	r0, #3
 770:	beq	800 <strip_colour+0x110>
 774:	b	778 <strip_colour+0x88>
 778:	ldr	r0, [sp]
 77c:	cmp	r0, #4
 780:	beq	90c <strip_colour+0x21c>
 784:	b	788 <strip_colour+0x98>
 788:	ldr	r0, [sp]
 78c:	sub	r1, r0, #6
 790:	cmp	r1, #2
 794:	bcc	90c <strip_colour+0x21c>
 798:	b	79c <strip_colour+0xac>
 79c:	ldr	r0, [sp]
 7a0:	cmp	r0, #15
 7a4:	beq	90c <strip_colour+0x21c>
 7a8:	b	7ac <strip_colour+0xbc>
 7ac:	ldr	r0, [sp]
 7b0:	sub	r1, r0, #22
 7b4:	cmp	r1, #2
 7b8:	bcc	90c <strip_colour+0x21c>
 7bc:	b	7c0 <strip_colour+0xd0>
 7c0:	ldr	r0, [sp]
 7c4:	cmp	r0, #27
 7c8:	beq	90c <strip_colour+0x21c>
 7cc:	b	7d0 <strip_colour+0xe0>
 7d0:	ldr	r0, [sp]
 7d4:	cmp	r0, #29
 7d8:	beq	90c <strip_colour+0x21c>
 7dc:	b	7e0 <strip_colour+0xf0>
 7e0:	ldr	r0, [sp]
 7e4:	cmp	r0, #31
 7e8:	beq	90c <strip_colour+0x21c>
 7ec:	b	7f0 <strip_colour+0x100>
 7f0:	ldr	r0, [sp]
 7f4:	cmp	r0, #32
 7f8:	beq	910 <strip_colour+0x220>
 7fc:	b	92c <strip_colour+0x23c>
 800:	ldr	r0, [pc, #396]	; 994 <strip_colour+0x2a4>
 804:	ldr	r0, [pc, r0]
 808:	ldr	r1, [sp, #16]
 80c:	ldrb	r1, [r1, #1]
 810:	mov	r2, r1
 814:	ldr	r3, [pc, #392]	; 9a4 <strip_colour+0x2b4>
 818:	ldr	r3, [pc, r3]
 81c:	add	r1, r3, r1, lsl #2
 820:	ldr	r1, [r1]
 824:	and	r1, r1, #16
 828:	cmp	r1, #0
 82c:	beq	908 <strip_colour+0x218>
 830:	ldr	r0, [pc, #352]	; 998 <strip_colour+0x2a8>
 834:	ldr	r0, [pc, r0]
 838:	ldr	r1, [sp, #16]
 83c:	add	r1, r1, #1
 840:	str	r1, [sp, #16]
 844:	ldr	r1, [sp, #16]
 848:	ldrb	r1, [r1, #1]
 84c:	mov	r2, r1
 850:	ldr	r3, [pc, #336]	; 9a8 <strip_colour+0x2b8>
 854:	ldr	r3, [pc, r3]
 858:	add	r1, r3, r1, lsl #2
 85c:	ldr	r1, [r1]
 860:	and	r1, r1, #16
 864:	cmp	r1, #0
 868:	beq	878 <strip_colour+0x188>
 86c:	ldr	r0, [sp, #16]
 870:	add	r0, r0, #1
 874:	str	r0, [sp, #16]
 878:	ldr	r0, [sp, #16]
 87c:	ldrb	r0, [r0, #1]
 880:	cmp	r0, #44	; 0x2c
 884:	bne	904 <strip_colour+0x214>
 888:	ldr	r0, [pc, #268]	; 99c <strip_colour+0x2ac>
 88c:	ldr	r0, [pc, r0]
 890:	ldr	r1, [sp, #16]
 894:	ldrb	r1, [r1, #2]
 898:	mov	r2, r1
 89c:	ldr	r3, [pc, #264]	; 9ac <strip_colour+0x2bc>
 8a0:	ldr	r3, [pc, r3]
 8a4:	add	r1, r3, r1, lsl #2
 8a8:	ldr	r1, [r1]
 8ac:	and	r1, r1, #16
 8b0:	cmp	r1, #0
 8b4:	beq	904 <strip_colour+0x214>
 8b8:	ldr	r0, [pc, #224]	; 9a0 <strip_colour+0x2b0>
 8bc:	ldr	r0, [pc, r0]
 8c0:	ldr	r1, [sp, #16]
 8c4:	add	r1, r1, #2
 8c8:	str	r1, [sp, #16]
 8cc:	ldr	r1, [sp, #16]
 8d0:	ldrb	r1, [r1, #1]
 8d4:	mov	r2, r1
 8d8:	ldr	r3, [pc, #208]	; 9b0 <strip_colour+0x2c0>
 8dc:	ldr	r3, [pc, r3]
 8e0:	add	r1, r3, r1, lsl #2
 8e4:	ldr	r1, [r1]
 8e8:	and	r1, r1, #16
 8ec:	cmp	r1, #0
 8f0:	beq	900 <strip_colour+0x210>
 8f4:	ldr	r0, [sp, #16]
 8f8:	add	r0, r0, #1
 8fc:	str	r0, [sp, #16]
 900:	b	904 <strip_colour+0x214>
 904:	b	908 <strip_colour+0x218>
 908:	b	94c <strip_colour+0x25c>
 90c:	b	94c <strip_colour+0x25c>
 910:	ldr	r0, [sp, #16]
 914:	ldrb	r0, [r0]
 918:	ldr	r1, [sp, #12]
 91c:	add	r2, r1, #1
 920:	str	r2, [sp, #12]
 924:	strb	r0, [r1]
 928:	b	94c <strip_colour+0x25c>
 92c:	ldr	r0, [sp, #16]
 930:	ldrb	r0, [r0]
 934:	ldr	r1, [sp, #12]
 938:	add	r2, r1, #1
 93c:	str	r2, [sp, #12]
 940:	strb	r0, [r1]
 944:	ldr	r0, [sp, #12]
 948:	str	r0, [sp, #8]
 94c:	b	950 <strip_colour+0x260>
 950:	ldr	r0, [sp, #16]
 954:	add	r0, r0, #1
 958:	str	r0, [sp, #16]
 95c:	b	710 <strip_colour+0x20>
 960:	ldr	r0, [sp, #12]
 964:	movw	r1, #0
 968:	strb	r1, [r0]
 96c:	ldr	r0, [sp, #8]
 970:	movw	r1, #0
 974:	cmp	r0, r1
 978:	beq	988 <strip_colour+0x298>
 97c:	ldr	r0, [sp, #8]
 980:	movw	r1, #0
 984:	strb	r1, [r0]
 988:	ldr	r0, [sp, #20]
 98c:	add	sp, sp, #24
 990:	bx	lr
 994:	.word	0x00010824
 998:	.word	0x000107f4
 99c:	.word	0x0001079c
 9a0:	.word	0x0001076c
 9a4:	.word	0x00010810
 9a8:	.word	0x000107d4
 9ac:	.word	0x00010788
 9b0:	.word	0x0001074c

Disassembly of section .fini:

000009b4 <_fini>:
 9b4:	push	{r3, lr}
 9b8:	pop	{r3, pc}
