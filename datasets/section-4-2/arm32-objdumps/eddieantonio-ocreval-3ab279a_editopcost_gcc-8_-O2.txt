
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

000106b8 <.init>:
   106b8:	push	{r3, lr}
   106bc:	bl	108b8 <abort@plt+0xe4>
   106c0:	pop	{r3, pc}

Disassembly of section .plt:

000106c4 <calloc@plt-0x14>:
   106c4:	push	{lr}		; (str lr, [sp, #-4]!)
   106c8:	ldr	lr, [pc, #4]	; 106d4 <calloc@plt-0x4>
   106cc:	add	lr, pc, lr
   106d0:	ldr	pc, [lr, #8]!
   106d4:	andeq	r1, r1, ip, lsr #18

000106d8 <calloc@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2348]!	; 0x92c

000106e4 <strcmp@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2340]!	; 0x924

000106f0 <printf@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2332]!	; 0x91c

000106fc <fopen@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2324]!	; 0x914

00010708 <free@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #69632	; 0x11000
   10710:	ldr	pc, [ip, #2316]!	; 0x90c

00010714 <fgets@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #69632	; 0x11000
   1071c:	ldr	pc, [ip, #2308]!	; 0x904

00010720 <strdup@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2300]!	; 0x8fc

0001072c <unlink@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2292]!	; 0x8f4

00010738 <__xstat@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2284]!	; 0x8ec

00010744 <fwrite@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010750 <__libc_start_main@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2268]!	; 0x8dc

0001075c <__sysv_signal@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2260]!	; 0x8d4

00010768 <__gmon_start__@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2252]!	; 0x8cc

00010774 <getpid@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010780 <exit@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2236]!	; 0x8bc

0001078c <strlen@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2228]!	; 0x8b4

00010798 <fprintf@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2220]!	; 0x8ac

000107a4 <__isoc99_sscanf@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2212]!	; 0x8a4

000107b0 <fclose@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2204]!	; 0x89c

000107bc <sprintf@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2196]!	; 0x894

000107c8 <strncmp@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2188]!	; 0x88c

000107d4 <abort@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2180]!	; 0x884

Disassembly of section .text:

000107e0 <error@@Base-0x950>:
   107e0:	ldr	r2, [pc, #128]	; 10868 <abort@plt+0x94>
   107e4:	mov	r3, #0
   107e8:	strd	r4, [sp, #-12]!
   107ec:	mov	r5, r1
   107f0:	str	lr, [sp, #8]
   107f4:	sub	sp, sp, #12
   107f8:	ldr	r4, [pc, #108]	; 1086c <abort@plt+0x98>
   107fc:	str	r0, [sp, #4]
   10800:	add	r0, sp, #4
   10804:	add	r2, pc, r2
   10808:	bl	11314 <error@@Base+0x1e4>
   1080c:	ldr	r3, [sp, #4]
   10810:	add	r4, pc, r4
   10814:	sub	r3, r3, #1
   10818:	cmp	r3, #1
   1081c:	bls	1082c <abort@plt+0x58>
   10820:	ldr	r0, [pc, #72]	; 10870 <abort@plt+0x9c>
   10824:	add	r0, pc, r0
   10828:	bl	11130 <error@@Base>
   1082c:	ldr	r3, [pc, #64]	; 10874 <abort@plt+0xa0>
   10830:	ldr	r1, [r5]
   10834:	ldr	r0, [r4, r3]
   10838:	bl	10b00 <abort@plt+0x32c>
   1083c:	ldr	r3, [sp, #4]
   10840:	cmp	r3, #2
   10844:	beq	10850 <abort@plt+0x7c>
   10848:	bl	109f4 <abort@plt+0x220>
   1084c:	bl	110b4 <abort@plt+0x8e0>
   10850:	ldr	r3, [pc, #32]	; 10878 <abort@plt+0xa4>
   10854:	ldr	r1, [r5, #4]
   10858:	ldr	r0, [r4, r3]
   1085c:	bl	10b00 <abort@plt+0x32c>
   10860:	bl	1096c <abort@plt+0x198>
   10864:	b	10848 <abort@plt+0x74>
   10868:	andeq	r0, r0, r8, ror lr
   1086c:	andeq	r1, r1, r8, ror #15
   10870:	andeq	r0, r0, r0, lsl #29
   10874:	andeq	r0, r0, r4, lsl #1
   10878:	andeq	r0, r0, r4, rrx
   1087c:	mov	fp, #0
   10880:	mov	lr, #0
   10884:	pop	{r1}		; (ldr r1, [sp], #4)
   10888:	mov	r2, sp
   1088c:	push	{r2}		; (str r2, [sp, #-4]!)
   10890:	push	{r0}		; (str r0, [sp, #-4]!)
   10894:	ldr	ip, [pc, #16]	; 108ac <abort@plt+0xd8>
   10898:	push	{ip}		; (str ip, [sp, #-4]!)
   1089c:	ldr	r0, [pc, #12]	; 108b0 <abort@plt+0xdc>
   108a0:	ldr	r3, [pc, #12]	; 108b4 <abort@plt+0xe0>
   108a4:	bl	10750 <__libc_start_main@plt>
   108a8:	bl	107d4 <abort@plt>
   108ac:	andeq	r1, r1, r8, ror #12
   108b0:	andeq	r0, r1, r0, ror #15
   108b4:	andeq	r1, r1, r8, lsl #12
   108b8:	ldr	r3, [pc, #20]	; 108d4 <abort@plt+0x100>
   108bc:	ldr	r2, [pc, #20]	; 108d8 <abort@plt+0x104>
   108c0:	add	r3, pc, r3
   108c4:	ldr	r2, [r3, r2]
   108c8:	cmp	r2, #0
   108cc:	bxeq	lr
   108d0:	b	10768 <__gmon_start__@plt>
   108d4:	andeq	r1, r1, r8, lsr r7
   108d8:	andeq	r0, r0, r4, ror r0
   108dc:	ldr	r0, [pc, #24]	; 108fc <abort@plt+0x128>
   108e0:	ldr	r3, [pc, #24]	; 10900 <abort@plt+0x12c>
   108e4:	cmp	r3, r0
   108e8:	bxeq	lr
   108ec:	ldr	r3, [pc, #16]	; 10904 <abort@plt+0x130>
   108f0:	cmp	r3, #0
   108f4:	bxeq	lr
   108f8:	bx	r3
   108fc:	andeq	r2, r2, r0, lsr #1
   10900:	andeq	r2, r2, r0, lsr #1
   10904:	andeq	r0, r0, r0
   10908:	ldr	r0, [pc, #36]	; 10934 <abort@plt+0x160>
   1090c:	ldr	r1, [pc, #36]	; 10938 <abort@plt+0x164>
   10910:	sub	r1, r1, r0
   10914:	asr	r1, r1, #2
   10918:	add	r1, r1, r1, lsr #31
   1091c:	asrs	r1, r1, #1
   10920:	bxeq	lr
   10924:	ldr	r3, [pc, #16]	; 1093c <abort@plt+0x168>
   10928:	cmp	r3, #0
   1092c:	bxeq	lr
   10930:	bx	r3
   10934:	andeq	r2, r2, r0, lsr #1
   10938:	andeq	r2, r2, r0, lsr #1
   1093c:	andeq	r0, r0, r0
   10940:	push	{r4, lr}
   10944:	ldr	r4, [pc, #24]	; 10964 <abort@plt+0x190>
   10948:	ldrb	r3, [r4]
   1094c:	cmp	r3, #0
   10950:	popne	{r4, pc}
   10954:	bl	108dc <abort@plt+0x108>
   10958:	mov	r3, #1
   1095c:	strb	r3, [r4]
   10960:	pop	{r4, pc}
   10964:	andeq	r2, r2, r0, lsr #1
   10968:	b	10908 <abort@plt+0x134>
   1096c:	ldr	r1, [pc, #116]	; 109e8 <abort@plt+0x214>
   10970:	strd	r4, [sp, #-16]!
   10974:	ldr	r3, [pc, #112]	; 109ec <abort@plt+0x218>
   10978:	str	r6, [sp, #8]
   1097c:	ldr	r2, [pc, #108]	; 109f0 <abort@plt+0x21c>
   10980:	add	r1, pc, r1
   10984:	str	lr, [sp, #12]
   10988:	ldr	r0, [r1, r3]
   1098c:	ldr	r2, [r1, r2]
   10990:	ldm	r0, {r5, r6}
   10994:	add	r1, r0, #12
   10998:	ldm	r2, {r4, lr}
   1099c:	add	r3, r2, #12
   109a0:	add	ip, r2, #412	; 0x19c
   109a4:	sub	r4, r4, r5
   109a8:	ldr	r5, [r0, #8]
   109ac:	sub	lr, lr, r6
   109b0:	ldr	r0, [r2, #8]
   109b4:	stm	r2, {r4, lr}
   109b8:	sub	r0, r0, r5
   109bc:	str	r0, [r2, #8]
   109c0:	ldr	r2, [r3, #4]!
   109c4:	ldr	r0, [r1, #4]!
   109c8:	cmp	r3, ip
   109cc:	sub	r2, r2, r0
   109d0:	str	r2, [r3]
   109d4:	bne	109c0 <abort@plt+0x1ec>
   109d8:	ldrd	r4, [sp]
   109dc:	ldr	r6, [sp, #8]
   109e0:	add	sp, sp, #12
   109e4:	pop	{pc}		; (ldr pc, [sp], #4)
   109e8:	andeq	r1, r1, r8, ror r6
   109ec:	andeq	r0, r0, r4, rrx
   109f0:	andeq	r0, r0, r4, lsl #1
   109f4:	ldr	r3, [pc, #108]	; 10a68 <abort@plt+0x294>
   109f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   109fc:	mov	r4, #0
   10a00:	ldr	r2, [pc, #100]	; 10a6c <abort@plt+0x298>
   10a04:	strd	r6, [sp, #8]
   10a08:	str	r8, [sp, #16]
   10a0c:	add	r3, pc, r3
   10a10:	str	lr, [sp, #20]
   10a14:	ldr	r8, [pc, #84]	; 10a70 <abort@plt+0x29c>
   10a18:	ldr	r3, [r3, r2]
   10a1c:	add	r8, pc, r8
   10a20:	mov	r7, r3
   10a24:	ldr	r6, [r3]
   10a28:	ldr	r5, [r7, #8]!
   10a2c:	mla	r2, r4, r5, r6
   10a30:	mov	r1, r4
   10a34:	mov	r0, r8
   10a38:	bl	106f0 <printf@plt>
   10a3c:	ldr	r3, [r7, #4]!
   10a40:	mla	r6, r4, r3, r6
   10a44:	add	r4, r4, #1
   10a48:	sub	r5, r5, r3
   10a4c:	cmp	r4, #101	; 0x65
   10a50:	bne	10a2c <abort@plt+0x258>
   10a54:	ldrd	r4, [sp]
   10a58:	ldrd	r6, [sp, #8]
   10a5c:	ldr	r8, [sp, #16]
   10a60:	add	sp, sp, #20
   10a64:	pop	{pc}		; (ldr pc, [sp], #4)
   10a68:	andeq	r1, r1, ip, ror #11
   10a6c:	andeq	r0, r0, r4, lsl #1
   10a70:	andeq	r0, r0, r4, asr ip
   10a74:	strd	r4, [sp, #-16]!
   10a78:	mov	r5, r1
   10a7c:	mov	r1, #99	; 0x63
   10a80:	ldr	r4, [pc, #112]	; 10af8 <abort@plt+0x324>
   10a84:	str	r6, [sp, #8]
   10a88:	mov	r6, r2
   10a8c:	mov	r2, r0
   10a90:	str	lr, [sp, #12]
   10a94:	add	r4, pc, r4
   10a98:	mov	r0, r4
   10a9c:	bl	10714 <fgets@plt>
   10aa0:	cmp	r0, #0
   10aa4:	beq	10ac4 <abort@plt+0x2f0>
   10aa8:	ldr	r1, [pc, #76]	; 10afc <abort@plt+0x328>
   10aac:	mov	r0, r4
   10ab0:	mov	r2, r5
   10ab4:	add	r1, pc, r1
   10ab8:	bl	107a4 <__isoc99_sscanf@plt>
   10abc:	cmp	r0, #1
   10ac0:	beq	10ad8 <abort@plt+0x304>
   10ac4:	ldrd	r4, [sp]
   10ac8:	mov	r0, #0
   10acc:	ldr	r6, [sp, #8]
   10ad0:	add	sp, sp, #12
   10ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ad8:	ldr	r2, [r5]
   10adc:	ldr	r3, [r6]
   10ae0:	ldrd	r4, [sp]
   10ae4:	add	r3, r3, r2
   10ae8:	str	r3, [r6]
   10aec:	ldr	r6, [sp, #8]
   10af0:	add	sp, sp, #12
   10af4:	pop	{pc}		; (ldr pc, [sp], #4)
   10af8:	andeq	r1, r1, r8, lsl #12
   10afc:	andeq	r0, r0, r8, ror ip
   10b00:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10b04:	strd	r6, [sp, #8]
   10b08:	mov	r6, r0
   10b0c:	mov	r0, r1
   10b10:	str	r8, [sp, #16]
   10b14:	mov	r8, r1
   10b18:	ldr	r1, [pc, #452]	; 10ce4 <abort@plt+0x510>
   10b1c:	str	lr, [sp, #20]
   10b20:	sub	sp, sp, #16
   10b24:	ldr	r5, [pc, #444]	; 10ce8 <abort@plt+0x514>
   10b28:	add	r1, pc, r1
   10b2c:	bl	11254 <error@@Base+0x124>
   10b30:	add	r5, pc, r5
   10b34:	mov	r2, r0
   10b38:	mov	r4, r0
   10b3c:	mov	r1, #99	; 0x63
   10b40:	mov	r0, r5
   10b44:	bl	10714 <fgets@plt>
   10b48:	cmp	r0, #0
   10b4c:	beq	10cc0 <abort@plt+0x4ec>
   10b50:	ldr	r1, [pc, #404]	; 10cec <abort@plt+0x518>
   10b54:	mov	r2, #42	; 0x2a
   10b58:	mov	r0, r5
   10b5c:	add	r1, pc, r1
   10b60:	bl	107c8 <strncmp@plt>
   10b64:	cmp	r0, #0
   10b68:	bne	10cc0 <abort@plt+0x4ec>
   10b6c:	mov	r2, r4
   10b70:	mov	r1, #99	; 0x63
   10b74:	mov	r0, r5
   10b78:	bl	10714 <fgets@plt>
   10b7c:	cmp	r0, #0
   10b80:	beq	10cc0 <abort@plt+0x4ec>
   10b84:	ldr	r1, [pc, #356]	; 10cf0 <abort@plt+0x51c>
   10b88:	mov	r0, r5
   10b8c:	add	r1, pc, r1
   10b90:	bl	106e4 <strcmp@plt>
   10b94:	cmp	r0, #0
   10b98:	bne	10cc0 <abort@plt+0x4ec>
   10b9c:	add	r7, sp, #8
   10ba0:	mov	r2, r6
   10ba4:	mov	r1, r7
   10ba8:	mov	r0, r4
   10bac:	bl	10a74 <abort@plt+0x2a0>
   10bb0:	cmp	r0, #0
   10bb4:	beq	10cc0 <abort@plt+0x4ec>
   10bb8:	add	r2, r6, #4
   10bbc:	mov	r1, r7
   10bc0:	mov	r0, r4
   10bc4:	bl	10a74 <abort@plt+0x2a0>
   10bc8:	cmp	r0, #0
   10bcc:	beq	10cc0 <abort@plt+0x4ec>
   10bd0:	add	r2, r6, #8
   10bd4:	add	r1, sp, #4
   10bd8:	mov	r0, r4
   10bdc:	bl	10a74 <abort@plt+0x2a0>
   10be0:	cmp	r0, #0
   10be4:	beq	10cc0 <abort@plt+0x4ec>
   10be8:	ldr	r3, [sp, #4]
   10bec:	cmp	r3, #0
   10bf0:	bgt	10c14 <abort@plt+0x440>
   10bf4:	mov	r0, r4
   10bf8:	bl	10f90 <abort@plt+0x7bc>
   10bfc:	add	sp, sp, #16
   10c00:	ldrd	r4, [sp]
   10c04:	ldrd	r6, [sp, #8]
   10c08:	ldr	r8, [sp, #16]
   10c0c:	add	sp, sp, #20
   10c10:	pop	{pc}		; (ldr pc, [sp], #4)
   10c14:	mov	r2, r4
   10c18:	mov	r1, #99	; 0x63
   10c1c:	mov	r0, r5
   10c20:	bl	10714 <fgets@plt>
   10c24:	cmp	r0, #0
   10c28:	beq	10bf4 <abort@plt+0x420>
   10c2c:	mov	r0, r5
   10c30:	mov	r2, r4
   10c34:	mov	r1, #99	; 0x63
   10c38:	bl	10714 <fgets@plt>
   10c3c:	cmp	r0, #0
   10c40:	beq	10bf4 <abort@plt+0x420>
   10c44:	ldr	r5, [pc, #168]	; 10cf4 <abort@plt+0x520>
   10c48:	mov	r2, r4
   10c4c:	mov	r1, #99	; 0x63
   10c50:	add	r5, pc, r5
   10c54:	mov	r0, r5
   10c58:	bl	10714 <fgets@plt>
   10c5c:	cmp	r0, #0
   10c60:	beq	10bf4 <abort@plt+0x420>
   10c64:	ldr	r8, [pc, #140]	; 10cf8 <abort@plt+0x524>
   10c68:	add	r8, pc, r8
   10c6c:	b	10ca4 <abort@plt+0x4d0>
   10c70:	add	r3, sp, #12
   10c74:	mov	r2, r7
   10c78:	mov	r1, r8
   10c7c:	mov	r0, r5
   10c80:	bl	107a4 <__isoc99_sscanf@plt>
   10c84:	cmp	r0, #2
   10c88:	bne	10bf4 <abort@plt+0x420>
   10c8c:	ldr	r1, [sp, #8]
   10c90:	ldr	r3, [sp, #12]
   10c94:	add	r3, r6, r3, lsl #2
   10c98:	ldr	r2, [r3, #12]
   10c9c:	add	r2, r2, r1
   10ca0:	str	r2, [r3, #12]
   10ca4:	mov	r2, r4
   10ca8:	mov	r1, #99	; 0x63
   10cac:	mov	r0, r5
   10cb0:	bl	10714 <fgets@plt>
   10cb4:	cmp	r0, #0
   10cb8:	bne	10c70 <abort@plt+0x49c>
   10cbc:	b	10bf4 <abort@plt+0x420>
   10cc0:	cmp	r8, #0
   10cc4:	beq	10cd8 <abort@plt+0x504>
   10cc8:	ldr	r0, [pc, #44]	; 10cfc <abort@plt+0x528>
   10ccc:	mov	r1, r8
   10cd0:	add	r0, pc, r0
   10cd4:	bl	111f4 <error@@Base+0xc4>
   10cd8:	ldr	r8, [pc, #32]	; 10d00 <abort@plt+0x52c>
   10cdc:	add	r8, pc, r8
   10ce0:	b	10cc8 <abort@plt+0x4f4>
   10ce4:	muleq	r0, ip, fp
   10ce8:	andeq	r1, r1, ip, ror #10
   10cec:	andeq	r0, r0, ip, ror #22
   10cf0:	andeq	r0, r0, ip, ror #22
   10cf4:	andeq	r1, r1, ip, asr #8
   10cf8:	andeq	r0, r0, r0, asr #21
   10cfc:	andeq	r0, r0, r0, ror #20
   10d00:	andeq	r0, r0, r0, ror #19
   10d04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10d08:	mov	r5, r0
   10d0c:	mov	r0, r1
   10d10:	ldr	r1, [pc, #252]	; 10e14 <abort@plt+0x640>
   10d14:	strd	r6, [sp, #8]
   10d18:	str	r8, [sp, #16]
   10d1c:	str	lr, [sp, #20]
   10d20:	ldr	r4, [pc, #240]	; 10e18 <abort@plt+0x644>
   10d24:	add	r1, pc, r1
   10d28:	bl	11254 <error@@Base+0x124>
   10d2c:	ldr	r3, [pc, #232]	; 10e1c <abort@plt+0x648>
   10d30:	mov	r6, r0
   10d34:	ldr	r2, [pc, #228]	; 10e20 <abort@plt+0x64c>
   10d38:	add	r4, pc, r4
   10d3c:	ldr	r1, [pc, #224]	; 10e24 <abort@plt+0x650>
   10d40:	add	r3, pc, r3
   10d44:	add	r2, pc, r2
   10d48:	add	r1, pc, r1
   10d4c:	bl	10798 <fprintf@plt>
   10d50:	ldr	r3, [pc, #208]	; 10e28 <abort@plt+0x654>
   10d54:	mov	r1, r4
   10d58:	mov	r0, r6
   10d5c:	ldr	r2, [r5]
   10d60:	add	r3, pc, r3
   10d64:	bl	10798 <fprintf@plt>
   10d68:	ldr	r3, [pc, #188]	; 10e2c <abort@plt+0x658>
   10d6c:	mov	r1, r4
   10d70:	mov	r0, r6
   10d74:	ldr	r2, [r5, #4]
   10d78:	add	r3, pc, r3
   10d7c:	bl	10798 <fprintf@plt>
   10d80:	ldr	r3, [pc, #168]	; 10e30 <abort@plt+0x65c>
   10d84:	mov	r1, r4
   10d88:	mov	r0, r6
   10d8c:	ldr	r2, [r5, #8]
   10d90:	add	r3, pc, r3
   10d94:	bl	10798 <fprintf@plt>
   10d98:	ldr	r3, [r5, #8]
   10d9c:	cmp	r3, #0
   10da0:	bgt	10dc0 <abort@plt+0x5ec>
   10da4:	mov	r0, r6
   10da8:	ldrd	r4, [sp]
   10dac:	ldrd	r6, [sp, #8]
   10db0:	ldr	r8, [sp, #16]
   10db4:	ldr	lr, [sp, #20]
   10db8:	add	sp, sp, #24
   10dbc:	b	10f90 <abort@plt+0x7bc>
   10dc0:	ldr	r0, [pc, #108]	; 10e34 <abort@plt+0x660>
   10dc4:	mov	r1, #1
   10dc8:	mov	r3, r6
   10dcc:	mov	r2, #25
   10dd0:	add	r5, r5, #12
   10dd4:	ldr	r7, [pc, #92]	; 10e38 <abort@plt+0x664>
   10dd8:	mov	r4, r1
   10ddc:	add	r0, pc, r0
   10de0:	add	r7, pc, r7
   10de4:	bl	10744 <fwrite@plt>
   10de8:	ldr	ip, [r5, #4]!
   10dec:	mov	r3, r4
   10df0:	mov	r1, r7
   10df4:	add	r4, r4, #1
   10df8:	mov	r0, r6
   10dfc:	subs	r2, ip, #0
   10e00:	ble	10e08 <abort@plt+0x634>
   10e04:	bl	10798 <fprintf@plt>
   10e08:	cmp	r4, #101	; 0x65
   10e0c:	bne	10de8 <abort@plt+0x614>
   10e10:	b	10da4 <abort@plt+0x5d0>
   10e14:	andeq	r0, r0, r0, lsr #20
   10e18:	andeq	r0, r0, r4, lsr #20
   10e1c:			; <UNDEFINED> instruction: 0x000009b8
   10e20:	andeq	r0, r0, r4, lsl #19
   10e24:	andeq	r0, r0, r0, lsl #20
   10e28:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10e2c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10e30:	andeq	r0, r0, r4, ror #19
   10e34:	andeq	r0, r0, r0, lsr #19
   10e38:			; <UNDEFINED> instruction: 0x000009b8
   10e3c:	ldr	r3, [pc, #96]	; 10ea4 <abort@plt+0x6d0>
   10e40:	strd	r4, [sp, #-16]!
   10e44:	ldr	r2, [pc, #92]	; 10ea8 <abort@plt+0x6d4>
   10e48:	str	r6, [sp, #8]
   10e4c:	mov	r6, r0
   10e50:	str	lr, [sp, #12]
   10e54:	sub	sp, sp, #112	; 0x70
   10e58:	add	r3, pc, r3
   10e5c:	add	r4, sp, #12
   10e60:	ldr	r3, [r3, r2]
   10e64:	ldr	r5, [r3]
   10e68:	bl	10774 <getpid@plt>
   10e6c:	ldr	r1, [pc, #56]	; 10eac <abort@plt+0x6d8>
   10e70:	mov	r3, r0
   10e74:	mov	r0, r4
   10e78:	str	r6, [sp]
   10e7c:	mov	r2, r5
   10e80:	add	r1, pc, r1
   10e84:	bl	107bc <sprintf@plt>
   10e88:	mov	r0, r4
   10e8c:	bl	10720 <strdup@plt>
   10e90:	add	sp, sp, #112	; 0x70
   10e94:	ldrd	r4, [sp]
   10e98:	ldr	r6, [sp, #8]
   10e9c:	add	sp, sp, #12
   10ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ea4:	andeq	r1, r1, r0, lsr #3
   10ea8:	andeq	r0, r0, r8, ror r0
   10eac:	andeq	r0, r0, r4, lsr #18
   10eb0:	ldr	r3, [pc, #116]	; 10f2c <abort@plt+0x758>
   10eb4:	mov	r6, r0
   10eb8:	str	r7, [sp, #-8]!
   10ebc:	ldr	r2, [pc, #108]	; 10f30 <abort@plt+0x75c>
   10ec0:	str	lr, [sp, #4]
   10ec4:	add	r3, pc, r3
   10ec8:	ldr	r3, [r3, r2]
   10ecc:	ldr	r3, [r3]
   10ed0:	cmp	r3, #0
   10ed4:	beq	10edc <abort@plt+0x708>
   10ed8:	blx	r3
   10edc:	ldr	r3, [pc, #80]	; 10f34 <abort@plt+0x760>
   10ee0:	add	r3, pc, r3
   10ee4:	ldrsh	r2, [r3]
   10ee8:	cmp	r2, #0
   10eec:	ble	10f24 <abort@plt+0x750>
   10ef0:	mov	r5, r3
   10ef4:	mov	r4, #1
   10ef8:	mov	r0, r4
   10efc:	add	r4, r4, #1
   10f00:	bl	10e3c <abort@plt+0x668>
   10f04:	mov	r7, r0
   10f08:	sxth	r4, r4
   10f0c:	bl	1072c <unlink@plt>
   10f10:	mov	r0, r7
   10f14:	bl	10708 <free@plt>
   10f18:	ldrsh	r3, [r5]
   10f1c:	cmp	r3, r4
   10f20:	bge	10ef8 <abort@plt+0x724>
   10f24:	mov	r0, r6
   10f28:	bl	10780 <exit@plt>
   10f2c:	andeq	r1, r1, r4, lsr r1
   10f30:	andeq	r0, r0, ip, ror r0
   10f34:	andeq	r1, r1, r0, lsr #4
   10f38:	ldrb	r3, [r0]
   10f3c:	ldrb	r2, [r1]
   10f40:	cmp	r3, #0
   10f44:	beq	10f6c <abort@plt+0x798>
   10f48:	cmp	r2, r3
   10f4c:	beq	10f5c <abort@plt+0x788>
   10f50:	b	10f78 <abort@plt+0x7a4>
   10f54:	cmp	r3, r2
   10f58:	bne	10f78 <abort@plt+0x7a4>
   10f5c:	ldrb	r3, [r0, #1]!
   10f60:	ldrb	r2, [r1, #1]!
   10f64:	cmp	r3, #0
   10f68:	bne	10f54 <abort@plt+0x780>
   10f6c:	cmp	r2, #0
   10f70:	beq	10f88 <abort@plt+0x7b4>
   10f74:	mov	r3, #0
   10f78:	cmp	r3, r2
   10f7c:	mvncc	r0, #0
   10f80:	movcs	r0, #1
   10f84:	bx	lr
   10f88:	mov	r0, r2
   10f8c:	bx	lr
   10f90:	ldr	r3, [pc, #48]	; 10fc8 <abort@plt+0x7f4>
   10f94:	ldr	r1, [pc, #48]	; 10fcc <abort@plt+0x7f8>
   10f98:	add	r3, pc, r3
   10f9c:	ldr	r1, [r3, r1]
   10fa0:	ldr	r1, [r1]
   10fa4:	cmp	r1, r0
   10fa8:	beq	10fc4 <abort@plt+0x7f0>
   10fac:	ldr	r1, [pc, #28]	; 10fd0 <abort@plt+0x7fc>
   10fb0:	ldr	r3, [r3, r1]
   10fb4:	ldr	r3, [r3]
   10fb8:	cmp	r3, r0
   10fbc:	beq	10fc4 <abort@plt+0x7f0>
   10fc0:	b	107b0 <fclose@plt>
   10fc4:	bx	lr
   10fc8:	andeq	r1, r1, r0, rrx
   10fcc:	andeq	r0, r0, r0, lsl #1
   10fd0:	andeq	r0, r0, r8, lsl #1
   10fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10fd8:	sub	sp, sp, #92	; 0x5c
   10fdc:	mov	r1, r0
   10fe0:	mov	r2, sp
   10fe4:	mov	r0, #3
   10fe8:	bl	10738 <__xstat@plt>
   10fec:	clz	r0, r0
   10ff0:	lsr	r0, r0, #5
   10ff4:	add	sp, sp, #92	; 0x5c
   10ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   10ffc:	ldr	r2, [pc, #56]	; 1103c <abort@plt+0x868>
   11000:	str	r4, [sp, #-8]!
   11004:	add	r2, pc, r2
   11008:	ldrh	r3, [r2]
   1100c:	str	lr, [sp, #4]
   11010:	add	r3, r3, #1
   11014:	sxth	r3, r3
   11018:	mov	r0, r3
   1101c:	strh	r3, [r2]
   11020:	bl	10e3c <abort@plt+0x668>
   11024:	mov	r4, r0
   11028:	bl	1072c <unlink@plt>
   1102c:	mov	r0, r4
   11030:	ldr	r4, [sp]
   11034:	add	sp, sp, #4
   11038:	pop	{pc}		; (ldr pc, [sp], #4)
   1103c:	strdeq	r1, [r1], -ip
   11040:	str	r4, [sp, #-8]!
   11044:	mov	r4, r0
   11048:	str	lr, [sp, #4]
   1104c:	bl	1078c <strlen@plt>
   11050:	uxth	r0, r0
   11054:	sub	r3, r0, #1
   11058:	sxth	r3, r3
   1105c:	cmp	r3, #0
   11060:	blt	110a0 <abort@plt+0x8cc>
   11064:	ldrb	r2, [r4, r3]
   11068:	cmp	r2, #47	; 0x2f
   1106c:	beq	110a0 <abort@plt+0x8cc>
   11070:	sub	r0, r0, #2
   11074:	sxth	r3, r0
   11078:	add	r2, r3, #1
   1107c:	add	r2, r4, r2
   11080:	b	11094 <abort@plt+0x8c0>
   11084:	ldrb	r0, [r2, #-1]!
   11088:	cmp	r0, #47	; 0x2f
   1108c:	beq	110a0 <abort@plt+0x8cc>
   11090:	mov	r3, r1
   11094:	tst	r3, #32768	; 0x8000
   11098:	sub	r1, r3, #1
   1109c:	beq	11084 <abort@plt+0x8b0>
   110a0:	add	r0, r3, #1
   110a4:	add	r0, r4, r0
   110a8:	ldr	r4, [sp]
   110ac:	add	sp, sp, #4
   110b0:	pop	{pc}		; (ldr pc, [sp], #4)
   110b4:	mov	r0, #0
   110b8:	str	r4, [sp, #-8]!
   110bc:	str	lr, [sp, #4]
   110c0:	bl	10eb0 <abort@plt+0x6dc>
   110c4:	ldr	r2, [pc, #80]	; 1111c <abort@plt+0x948>
   110c8:	str	r4, [sp, #-8]!
   110cc:	ldr	r1, [pc, #76]	; 11120 <abort@plt+0x94c>
   110d0:	str	lr, [sp, #4]
   110d4:	add	r2, pc, r2
   110d8:	ldr	r1, [r2, r1]
   110dc:	ldr	r1, [r1]
   110e0:	cmp	r1, #0
   110e4:	beq	110f0 <abort@plt+0x91c>
   110e8:	blx	r1
   110ec:	bl	110b4 <abort@plt+0x8e0>
   110f0:	mov	r3, r0
   110f4:	ldr	ip, [pc, #40]	; 11124 <abort@plt+0x950>
   110f8:	ldr	r0, [pc, #40]	; 11128 <abort@plt+0x954>
   110fc:	ldr	r1, [pc, #40]	; 1112c <abort@plt+0x958>
   11100:	ldr	ip, [r2, ip]
   11104:	ldr	r0, [r2, r0]
   11108:	add	r1, pc, r1
   1110c:	ldr	r2, [ip]
   11110:	ldr	r0, [r0]
   11114:	bl	10798 <fprintf@plt>
   11118:	b	110ec <abort@plt+0x918>
   1111c:	andeq	r0, r1, r4, lsr #30
   11120:	andeq	r0, r0, ip, rrx
   11124:	andeq	r0, r0, r8, ror r0
   11128:	andeq	r0, r0, r0, ror r0
   1112c:	andeq	r0, r0, ip, lsr #13

00011130 <error@@Base>:
   11130:	str	r4, [sp, #-8]!
   11134:	mov	r3, r0
   11138:	ldr	r4, [pc, #56]	; 11178 <error@@Base+0x48>
   1113c:	str	lr, [sp, #4]
   11140:	ldr	r0, [pc, #52]	; 1117c <error@@Base+0x4c>
   11144:	ldr	r2, [pc, #52]	; 11180 <error@@Base+0x50>
   11148:	add	r4, pc, r4
   1114c:	ldr	r1, [pc, #48]	; 11184 <error@@Base+0x54>
   11150:	ldr	ip, [r4, r0]
   11154:	ldr	r0, [r4, r2]
   11158:	add	r1, pc, r1
   1115c:	ldr	r2, [ip]
   11160:	ldr	r0, [r0]
   11164:	bl	10798 <fprintf@plt>
   11168:	ldr	r3, [pc, #24]	; 11188 <error@@Base+0x58>
   1116c:	ldr	r3, [r4, r3]
   11170:	ldr	r0, [r3]
   11174:	bl	10eb0 <abort@plt+0x6dc>
   11178:			; <UNDEFINED> instruction: 0x00010eb0
   1117c:	andeq	r0, r0, r8, ror r0
   11180:	andeq	r0, r0, r0, ror r0
   11184:	andeq	r0, r0, ip, ror #12
   11188:	andeq	r0, r0, ip, lsl #1
   1118c:	str	r4, [sp, #-8]!
   11190:	str	lr, [sp, #4]
   11194:	bl	106d8 <calloc@plt>
   11198:	cmp	r0, #0
   1119c:	beq	111ac <error@@Base+0x7c>
   111a0:	ldr	r4, [sp]
   111a4:	add	sp, sp, #4
   111a8:	pop	{pc}		; (ldr pc, [sp], #4)
   111ac:	ldr	r0, [pc, #4]	; 111b8 <error@@Base+0x88>
   111b0:	add	r0, pc, r0
   111b4:	bl	11130 <error@@Base>
   111b8:	andeq	r0, r0, ip, lsl r6
   111bc:	ldr	r3, [pc, #40]	; 111ec <error@@Base+0xbc>
   111c0:	add	r3, pc, r3
   111c4:	ldrb	r2, [r3, #2]
   111c8:	cmp	r2, #0
   111cc:	bxne	lr
   111d0:	ldr	r0, [pc, #24]	; 111f0 <error@@Base+0xc0>
   111d4:	mov	r2, #1
   111d8:	str	r4, [sp, #-8]!
   111dc:	str	lr, [sp, #4]
   111e0:	strb	r2, [r3, #2]
   111e4:	add	r0, pc, r0
   111e8:	bl	11130 <error@@Base>
   111ec:	andeq	r0, r1, r0, asr #30
   111f0:	andeq	r0, r0, r4, lsl #12
   111f4:	ldr	r4, [pc, #68]	; 11240 <error@@Base+0x110>
   111f8:	mov	r3, r0
   111fc:	push	{lr}		; (str lr, [sp, #-4]!)
   11200:	sub	sp, sp, #12
   11204:	ldr	r0, [pc, #56]	; 11244 <error@@Base+0x114>
   11208:	ldr	r2, [pc, #56]	; 11248 <error@@Base+0x118>
   1120c:	add	r4, pc, r4
   11210:	ldr	ip, [r4, r0]
   11214:	ldr	r0, [r4, r2]
   11218:	str	r1, [sp]
   1121c:	ldr	r1, [pc, #40]	; 1124c <error@@Base+0x11c>
   11220:	ldr	r2, [ip]
   11224:	ldr	r0, [r0]
   11228:	add	r1, pc, r1
   1122c:	bl	10798 <fprintf@plt>
   11230:	ldr	r3, [pc, #24]	; 11250 <error@@Base+0x120>
   11234:	ldr	r3, [r4, r3]
   11238:	ldr	r0, [r3]
   1123c:	bl	10eb0 <abort@plt+0x6dc>
   11240:	andeq	r0, r1, ip, ror #27
   11244:	andeq	r0, r0, r8, ror r0
   11248:	andeq	r0, r0, r0, ror r0
   1124c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11250:	andeq	r0, r0, ip, lsl #1
   11254:	ldr	ip, [pc, #164]	; 11300 <error@@Base+0x1d0>
   11258:	subs	r2, r0, #0
   1125c:	strd	r4, [sp, #-16]!
   11260:	mov	r4, r1
   11264:	str	r6, [sp, #8]
   11268:	str	lr, [sp, #12]
   1126c:	add	ip, pc, ip
   11270:	beq	112b0 <error@@Base+0x180>
   11274:	mov	r5, r2
   11278:	bl	106fc <fopen@plt>
   1127c:	cmp	r0, #0
   11280:	beq	11294 <error@@Base+0x164>
   11284:	ldrd	r4, [sp]
   11288:	ldr	r6, [sp, #8]
   1128c:	add	sp, sp, #12
   11290:	pop	{pc}		; (ldr pc, [sp], #4)
   11294:	ldrb	r3, [r4]
   11298:	mov	r1, r5
   1129c:	cmp	r3, #119	; 0x77
   112a0:	beq	112d8 <error@@Base+0x1a8>
   112a4:	ldr	r0, [pc, #88]	; 11304 <error@@Base+0x1d4>
   112a8:	add	r0, pc, r0
   112ac:	bl	111f4 <error@@Base+0xc4>
   112b0:	ldrb	r3, [r1]
   112b4:	cmp	r3, #114	; 0x72
   112b8:	beq	112e4 <error@@Base+0x1b4>
   112bc:	ldr	r3, [pc, #68]	; 11308 <error@@Base+0x1d8>
   112c0:	ldrd	r4, [sp]
   112c4:	ldr	r6, [sp, #8]
   112c8:	add	sp, sp, #12
   112cc:	ldr	r3, [ip, r3]
   112d0:	ldr	r0, [r3]
   112d4:	pop	{pc}		; (ldr pc, [sp], #4)
   112d8:	ldr	r0, [pc, #44]	; 1130c <error@@Base+0x1dc>
   112dc:	add	r0, pc, r0
   112e0:	bl	111f4 <error@@Base+0xc4>
   112e4:	ldr	r3, [pc, #36]	; 11310 <error@@Base+0x1e0>
   112e8:	ldrd	r4, [sp]
   112ec:	ldr	r6, [sp, #8]
   112f0:	add	sp, sp, #12
   112f4:	ldr	r3, [ip, r3]
   112f8:	ldr	r0, [r3]
   112fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11300:	andeq	r0, r1, ip, lsl #27
   11304:	andeq	r0, r0, r8, ror r5
   11308:	andeq	r0, r0, r8, lsl #1
   1130c:	andeq	r0, r0, ip, lsr #10
   11310:	andeq	r0, r0, r0, lsl #1
   11314:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11318:	strd	r6, [sp, #8]
   1131c:	mov	r6, r0
   11320:	strd	r8, [sp, #16]
   11324:	mov	r9, r1
   11328:	mov	r8, r3
   1132c:	strd	sl, [sp, #24]
   11330:	str	lr, [sp, #32]
   11334:	sub	sp, sp, #20
   11338:	ldr	r5, [pc, #600]	; 11598 <error@@Base+0x468>
   1133c:	str	r0, [sp]
   11340:	ldr	r0, [r1]
   11344:	str	r2, [sp, #12]
   11348:	bl	11040 <abort@plt+0x86c>
   1134c:	ldr	r3, [pc, #584]	; 1159c <error@@Base+0x46c>
   11350:	add	r5, pc, r5
   11354:	ldr	r4, [pc, #580]	; 115a0 <error@@Base+0x470>
   11358:	ldr	r3, [r5, r3]
   1135c:	add	r4, pc, r4
   11360:	mov	r1, r4
   11364:	str	r0, [r3]
   11368:	mov	r0, #2
   1136c:	bl	1075c <__sysv_signal@plt>
   11370:	mov	r1, r4
   11374:	mov	r0, #15
   11378:	bl	1075c <__sysv_signal@plt>
   1137c:	ldr	sl, [r6]
   11380:	cmp	sl, #1
   11384:	beq	1155c <error@@Base+0x42c>
   11388:	movle	r6, #0
   1138c:	ble	114e4 <error@@Base+0x3b4>
   11390:	ldr	r3, [pc, #524]	; 115a4 <error@@Base+0x474>
   11394:	mov	r7, #1
   11398:	mov	r6, #0
   1139c:	mov	r4, r7
   113a0:	add	r3, pc, r3
   113a4:	str	r3, [sp, #8]
   113a8:	mov	r3, sl
   113ac:	mov	sl, r9
   113b0:	b	113d4 <error@@Base+0x2a4>
   113b4:	add	r4, r4, #1
   113b8:	add	r2, r6, #1
   113bc:	str	r5, [sl, r6, lsl #2]
   113c0:	sxth	r4, r4
   113c4:	sxth	r6, r2
   113c8:	cmp	r4, r3
   113cc:	mov	r7, r4
   113d0:	bge	114e4 <error@@Base+0x3b4>
   113d4:	ldr	r5, [sl, r4, lsl #2]
   113d8:	lsl	r9, r4, #2
   113dc:	ldrb	r2, [r5]
   113e0:	cmp	r2, #45	; 0x2d
   113e4:	bne	113b4 <error@@Base+0x284>
   113e8:	ldrb	fp, [r5, #1]
   113ec:	cmp	fp, #0
   113f0:	beq	113b4 <error@@Base+0x284>
   113f4:	mov	r0, r5
   113f8:	str	r3, [sp, #4]
   113fc:	bl	1078c <strlen@plt>
   11400:	mov	r2, r0
   11404:	mov	r1, r5
   11408:	ldr	r0, [sp, #8]
   1140c:	bl	107c8 <strncmp@plt>
   11410:	cmp	r0, #0
   11414:	beq	11570 <error@@Base+0x440>
   11418:	ldr	r3, [sp, #4]
   1141c:	add	r7, r7, #1
   11420:	cmp	r7, r3
   11424:	addlt	r9, sl, r9
   11428:	movge	r0, #0
   1142c:	ldrlt	r0, [r9, #4]
   11430:	cmp	r8, #0
   11434:	beq	11478 <error@@Base+0x348>
   11438:	ldrb	r2, [r8]
   1143c:	cmp	r2, #0
   11440:	beq	11478 <error@@Base+0x348>
   11444:	cmp	fp, r2
   11448:	beq	11488 <error@@Base+0x358>
   1144c:	mov	r2, #0
   11450:	b	1145c <error@@Base+0x32c>
   11454:	cmp	fp, ip
   11458:	beq	1148c <error@@Base+0x35c>
   1145c:	add	r2, r2, #1
   11460:	sxth	r2, r2
   11464:	add	r1, r2, r2, lsl #1
   11468:	ldrb	ip, [r8, r1, lsl #2]
   1146c:	add	r1, r8, r1, lsl #2
   11470:	cmp	ip, #0
   11474:	bne	11454 <error@@Base+0x324>
   11478:	ldr	r0, [pc, #296]	; 115a8 <error@@Base+0x478>
   1147c:	mov	r1, r5
   11480:	add	r0, pc, r0
   11484:	bl	111f4 <error@@Base+0xc4>
   11488:	mov	r1, r8
   1148c:	ldr	r2, [r1, #4]
   11490:	cmp	r2, #0
   11494:	beq	1151c <error@@Base+0x3ec>
   11498:	ldrb	ip, [r5, #2]
   1149c:	cmp	ip, #0
   114a0:	bne	11508 <error@@Base+0x3d8>
   114a4:	cmp	r0, #0
   114a8:	beq	11578 <error@@Base+0x448>
   114ac:	ldr	r1, [r2]
   114b0:	cmp	r1, #0
   114b4:	bne	11588 <error@@Base+0x458>
   114b8:	str	r0, [r2]
   114bc:	uxth	r2, r4
   114c0:	ldrb	r1, [r5, #2]
   114c4:	add	r4, r2, #1
   114c8:	sxth	r4, r4
   114cc:	cmp	r1, #0
   114d0:	addeq	r4, r2, #2
   114d4:	sxtheq	r4, r4
   114d8:	cmp	r4, r3
   114dc:	mov	r7, r4
   114e0:	blt	113d4 <error@@Base+0x2a4>
   114e4:	ldr	r3, [sp]
   114e8:	str	r6, [r3]
   114ec:	add	sp, sp, #20
   114f0:	ldrd	r4, [sp]
   114f4:	ldrd	r6, [sp, #8]
   114f8:	ldrd	r8, [sp, #16]
   114fc:	ldrd	sl, [sp, #24]
   11500:	add	sp, sp, #32
   11504:	pop	{pc}		; (ldr pc, [sp], #4)
   11508:	ldr	r1, [r2]
   1150c:	cmp	r1, #0
   11510:	bne	11588 <error@@Base+0x458>
   11514:	add	r0, r5, #2
   11518:	b	114b8 <error@@Base+0x388>
   1151c:	ldr	r3, [r1, #8]
   11520:	cmp	r3, #0
   11524:	beq	11478 <error@@Base+0x348>
   11528:	ldrb	r2, [r5, #2]
   1152c:	cmp	r2, #0
   11530:	bne	11478 <error@@Base+0x348>
   11534:	ldrb	r2, [r3]
   11538:	cmp	r2, #0
   1153c:	bne	11588 <error@@Base+0x458>
   11540:	mov	r2, #1
   11544:	add	r4, r4, #1
   11548:	sxth	r4, r4
   1154c:	strb	r2, [r3]
   11550:	ldr	r3, [sp]
   11554:	ldr	r3, [r3]
   11558:	b	113c8 <error@@Base+0x298>
   1155c:	ldr	r3, [pc, #72]	; 115ac <error@@Base+0x47c>
   11560:	ldr	r3, [r5, r3]
   11564:	ldrb	r6, [r3]
   11568:	cmp	r6, #0
   1156c:	beq	114e4 <error@@Base+0x3b4>
   11570:	ldr	r0, [sp, #12]
   11574:	bl	110c4 <abort@plt+0x8f0>
   11578:	ldr	r3, [r1, #8]
   1157c:	cmp	r3, #0
   11580:	bne	11534 <error@@Base+0x404>
   11584:	b	11478 <error@@Base+0x348>
   11588:	ldr	r0, [pc, #32]	; 115b0 <error@@Base+0x480>
   1158c:	mov	r1, r5
   11590:	add	r0, pc, r0
   11594:	bl	111f4 <error@@Base+0xc4>
   11598:	andeq	r0, r1, r8, lsr #25
   1159c:	andeq	r0, r0, r8, ror r0
   115a0:			; <UNDEFINED> instruction: 0xfffffe58
   115a4:	muleq	r0, r4, r4
   115a8:			; <UNDEFINED> instruction: 0x000003bc
   115ac:	andeq	r0, r0, r8, rrx
   115b0:			; <UNDEFINED> instruction: 0x000002bc
   115b4:	ldr	r2, [pc, #60]	; 115f8 <error@@Base+0x4c8>
   115b8:	mov	r3, r0
   115bc:	push	{lr}		; (str lr, [sp, #-4]!)
   115c0:	sub	sp, sp, #12
   115c4:	ldr	ip, [pc, #48]	; 115fc <error@@Base+0x4cc>
   115c8:	ldr	r0, [pc, #48]	; 11600 <error@@Base+0x4d0>
   115cc:	add	r2, pc, r2
   115d0:	ldr	ip, [r2, ip]
   115d4:	ldr	r0, [r2, r0]
   115d8:	str	r1, [sp]
   115dc:	ldr	r1, [pc, #32]	; 11604 <error@@Base+0x4d4>
   115e0:	ldr	r2, [ip]
   115e4:	ldr	r0, [r0]
   115e8:	add	r1, pc, r1
   115ec:	bl	10798 <fprintf@plt>
   115f0:	add	sp, sp, #12
   115f4:	pop	{pc}		; (ldr pc, [sp], #4)
   115f8:	andeq	r0, r1, ip, lsr #20
   115fc:	andeq	r0, r0, r8, ror r0
   11600:	andeq	r0, r0, r0, ror r0
   11604:	andeq	r0, r0, r0, lsl r2
   11608:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1160c:	mov	r7, r0
   11610:	ldr	r6, [pc, #72]	; 11660 <error@@Base+0x530>
   11614:	ldr	r5, [pc, #72]	; 11664 <error@@Base+0x534>
   11618:	add	r6, pc, r6
   1161c:	add	r5, pc, r5
   11620:	sub	r6, r6, r5
   11624:	mov	r8, r1
   11628:	mov	r9, r2
   1162c:	bl	106b8 <calloc@plt-0x20>
   11630:	asrs	r6, r6, #2
   11634:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11638:	mov	r4, #0
   1163c:	add	r4, r4, #1
   11640:	ldr	r3, [r5], #4
   11644:	mov	r2, r9
   11648:	mov	r1, r8
   1164c:	mov	r0, r7
   11650:	blx	r3
   11654:	cmp	r6, r4
   11658:	bne	1163c <error@@Base+0x50c>
   1165c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11660:	andeq	r0, r1, r4, ror #17
   11664:	ldrdeq	r0, [r1], -ip
   11668:	bx	lr

Disassembly of section .fini:

0001166c <.fini>:
   1166c:	push	{r3, lr}
   11670:	pop	{r3, pc}
