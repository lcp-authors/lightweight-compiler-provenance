
../repos/charybdis/modules/.libs/m_xline.so:     file format elf32-littlearm


Disassembly of section .init:

00000c54 <_init>:
 c54:	push	{r3, lr}
 c58:	bl	e3c <call_weak_fn>
 c5c:	pop	{r3, pc}

Disassembly of section .plt:

00000c60 <.plt>:
 c60:	push	{lr}		; (str lr, [sp, #-4]!)
 c64:	ldr	lr, [pc, #4]	; c70 <.plt+0x10>
 c68:	add	lr, pc, lr
 c6c:	ldr	pc, [lr, #8]!
 c70:	.word	0x00012390

00000c74 <propagate_generic@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #912]!	; 0x390

00000c80 <make_conf@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #904]!	; 0x388

00000c8c <rb_current_time@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #896]!	; 0x380

00000c98 <sendto_match_servs@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #888]!	; 0x378

00000ca4 <__cxa_finalize@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #880]!	; 0x370

00000cb0 <strtol@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #872]!	; 0x368

00000cbc <sendto_one@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #864]!	; 0x360

00000cc8 <replace_old_ban@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #856]!	; 0x358

00000cd4 <rb_outofmemory@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #848]!	; 0x350

00000ce0 <operhash_delete@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #840]!	; 0x348

00000cec <sendto_realops_snomask@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #832]!	; 0x340

00000cf8 <bandb_add@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #824]!	; 0x338

00000d04 <deactivate_conf@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #816]!	; 0x330

00000d10 <check_xlines@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #808]!	; 0x328

00000d1c <get_oper_name@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #800]!	; 0x320

00000d28 <rb_free_rb_dlink_node@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #792]!	; 0x318

00000d34 <cluster_generic@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #784]!	; 0x310

00000d40 <operhash_add@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #776]!	; 0x308

00000d4c <strcpy@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #768]!	; 0x300

00000d58 <sendto_server@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #760]!	; 0x2f8

00000d64 <malloc@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #752]!	; 0x2f0

00000d70 <__gmon_start__@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #73728	; 0x12000
 d78:	ldr	pc, [ip, #744]!	; 0x2e8

00000d7c <free_conf@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #73728	; 0x12000
 d84:	ldr	pc, [ip, #736]!	; 0x2e0

00000d88 <rb_make_rb_dlink_node@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #73728	; 0x12000
 d90:	ldr	pc, [ip, #728]!	; 0x2d8

00000d94 <strlen@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #73728	; 0x12000
 d9c:	ldr	pc, [ip, #720]!	; 0x2d0

00000da0 <find_xline_mask@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #73728	; 0x12000
 da8:	ldr	pc, [ip, #712]!	; 0x2c8

00000dac <ilog@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #73728	; 0x12000
 db4:	ldr	pc, [ip, #704]!	; 0x2c0

00000db8 <collapse@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #73728	; 0x12000
 dc0:	ldr	pc, [ip, #696]!	; 0x2b8

00000dc4 <match@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #73728	; 0x12000
 dcc:	ldr	pc, [ip, #688]!	; 0x2b0

00000dd0 <valid_temp_time@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #73728	; 0x12000
 dd8:	ldr	pc, [ip, #680]!	; 0x2a8

00000ddc <remove_reject_mask@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #73728	; 0x12000
 de4:	ldr	pc, [ip, #672]!	; 0x2a0

00000de8 <sendto_one_notice@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #73728	; 0x12000
 df0:	ldr	pc, [ip, #664]!	; 0x298

00000df4 <bandb_del@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #73728	; 0x12000
 dfc:	ldr	pc, [ip, #656]!	; 0x290

00000e00 <valid_wild_card_simple@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #73728	; 0x12000
 e08:	ldr	pc, [ip, #648]!	; 0x288

00000e0c <find_shared_conf@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #73728	; 0x12000
 e14:	ldr	pc, [ip, #640]!	; 0x280

00000e18 <privilegeset_in_set@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #73728	; 0x12000
 e20:	ldr	pc, [ip, #632]!	; 0x278

00000e24 <irccmp@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #73728	; 0x12000
 e2c:	ldr	pc, [ip, #624]!	; 0x270

00000e30 <__assert_fail@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #73728	; 0x12000
 e38:	ldr	pc, [ip, #616]!	; 0x268

Disassembly of section .text:

00000e3c <call_weak_fn>:
     e3c:	ldr	r3, [pc, #20]	; e58 <call_weak_fn+0x1c>
     e40:	ldr	r2, [pc, #20]	; e5c <call_weak_fn+0x20>
     e44:	add	r3, pc, r3
     e48:	ldr	r2, [r3, r2]
     e4c:	cmp	r2, #0
     e50:	bxeq	lr
     e54:	b	d70 <__gmon_start__@plt>
     e58:	.word	0x000121b4
     e5c:	.word	0x000000c0

00000e60 <deregister_tm_clones>:
     e60:	ldr	r0, [pc, #44]	; e94 <deregister_tm_clones+0x34>
     e64:	ldr	r3, [pc, #44]	; e98 <deregister_tm_clones+0x38>
     e68:	add	r0, pc, r0
     e6c:	add	r3, pc, r3
     e70:	cmp	r3, r0
     e74:	ldr	r3, [pc, #32]	; e9c <deregister_tm_clones+0x3c>
     e78:	add	r3, pc, r3
     e7c:	bxeq	lr
     e80:	ldr	r2, [pc, #24]	; ea0 <deregister_tm_clones+0x40>
     e84:	ldr	r3, [r3, r2]
     e88:	cmp	r3, #0
     e8c:	bxeq	lr
     e90:	bx	r3
     e94:	.word	0x00012328
     e98:	.word	0x00012324
     e9c:	.word	0x00012180
     ea0:	.word	0x000000a8

00000ea4 <register_tm_clones>:
     ea4:	ldr	r0, [pc, #56]	; ee4 <register_tm_clones+0x40>
     ea8:	ldr	r3, [pc, #56]	; ee8 <register_tm_clones+0x44>
     eac:	add	r0, pc, r0
     eb0:	add	r3, pc, r3
     eb4:	sub	r1, r3, r0
     eb8:	ldr	r3, [pc, #44]	; eec <register_tm_clones+0x48>
     ebc:	asr	r1, r1, #2
     ec0:	add	r3, pc, r3
     ec4:	add	r1, r1, r1, lsr #31
     ec8:	asrs	r1, r1, #1
     ecc:	bxeq	lr
     ed0:	ldr	r2, [pc, #24]	; ef0 <register_tm_clones+0x4c>
     ed4:	ldr	r3, [r3, r2]
     ed8:	cmp	r3, #0
     edc:	bxeq	lr
     ee0:	bx	r3
     ee4:	.word	0x000122e4
     ee8:	.word	0x000122e0
     eec:	.word	0x00012138
     ef0:	.word	0x000000c8

00000ef4 <__do_global_dtors_aux>:
     ef4:	ldr	r3, [pc, #76]	; f48 <__do_global_dtors_aux+0x54>
     ef8:	ldr	r2, [pc, #76]	; f4c <__do_global_dtors_aux+0x58>
     efc:	add	r3, pc, r3
     f00:	add	r2, pc, r2
     f04:	ldrb	r3, [r3]
     f08:	cmp	r3, #0
     f0c:	bxne	lr
     f10:	ldr	r3, [pc, #56]	; f50 <__do_global_dtors_aux+0x5c>
     f14:	push	{r4, lr}
     f18:	ldr	r3, [r2, r3]
     f1c:	cmp	r3, #0
     f20:	beq	f30 <__do_global_dtors_aux+0x3c>
     f24:	ldr	r3, [pc, #40]	; f54 <__do_global_dtors_aux+0x60>
     f28:	ldr	r0, [pc, r3]
     f2c:	bl	ca4 <__cxa_finalize@plt>
     f30:	bl	e60 <deregister_tm_clones>
     f34:	ldr	r3, [pc, #28]	; f58 <__do_global_dtors_aux+0x64>
     f38:	mov	r2, #1
     f3c:	add	r3, pc, r3
     f40:	strb	r2, [r3]
     f44:	pop	{r4, pc}
     f48:	.word	0x00012294
     f4c:	.word	0x000120f8
     f50:	.word	0x000000a4
     f54:	.word	0x000121a8
     f58:	.word	0x00012254

00000f5c <frame_dummy>:
     f5c:	b	ea4 <register_tm_clones>

00000f60 <ms_xline>:
     f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f64:	add	fp, sp, #28
     f68:	sub	sp, sp, #20
     f6c:	ldr	r8, [pc, #200]	; 103c <ms_xline+0xdc>
     f70:	mov	r9, r2
     f74:	mov	r3, #0
     f78:	mov	sl, #0
     f7c:	ldr	r8, [pc, r8]
     f80:	ldr	r6, [fp, #8]
     f84:	ldr	r2, [r8]
     f88:	ldmib	r6, {r5, r7}
     f8c:	ldr	r0, [r6, #12]
     f90:	ldr	r4, [r6, #16]
     f94:	ldr	r1, [pc, #164]	; 1040 <ms_xline+0xe0>
     f98:	add	r1, pc, r1
     f9c:	stm	sp, {r1, r5, r7}
     fa0:	str	r0, [sp, #12]
     fa4:	mov	r0, r9
     fa8:	mov	r1, r5
     fac:	str	r4, [sp, #16]
     fb0:	bl	c98 <sendto_match_servs@plt>
     fb4:	ldr	r3, [r8]
     fb8:	ldr	r0, [pc, #132]	; 1044 <ms_xline+0xe4>
     fbc:	mov	r1, r5
     fc0:	ldr	r0, [pc, r0]
     fc4:	ldr	r2, [r0]
     fc8:	ldr	r0, [pc, #120]	; 1048 <ms_xline+0xe8>
     fcc:	add	r0, pc, r0
     fd0:	stm	sp, {r0, r5, sl}
     fd4:	mov	r0, r9
     fd8:	str	r7, [sp, #12]
     fdc:	str	r4, [sp, #16]
     fe0:	bl	c98 <sendto_match_servs@plt>
     fe4:	ldrh	r0, [r9, #80]	; 0x50
     fe8:	cmp	r0, #64	; 0x40
     fec:	bne	1034 <ms_xline+0xd4>
     ff0:	ldr	r0, [r9, #24]
     ff4:	cmp	r0, #0
     ff8:	beq	1034 <ms_xline+0xd4>
     ffc:	ldr	r0, [r6, #4]
    1000:	ldr	r1, [pc, #68]	; 104c <ms_xline+0xec>
    1004:	ldr	r1, [pc, r1]
    1008:	add	r1, r1, #88	; 0x58
    100c:	bl	dc4 <match@plt>
    1010:	cmp	r0, #0
    1014:	beq	1034 <ms_xline+0xd4>
    1018:	ldr	r2, [r6, #8]
    101c:	ldr	r3, [r6, #16]
    1020:	mov	r0, r9
    1024:	mov	r1, #0
    1028:	sub	sp, fp, #28
    102c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1030:	b	1c9c <handle_remote_xline>
    1034:	sub	sp, fp, #28
    1038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    103c:	.word	0x00012130
    1040:	.word	0x00001337
    1044:	.word	0x00012108
    1048:	.word	0x00001316
    104c:	.word	0x000120c0

00001050 <me_xline>:
    1050:	push	{r4, r5, fp, lr}
    1054:	add	fp, sp, #8
    1058:	ldrh	r0, [r2, #80]	; 0x50
    105c:	cmp	r0, #64	; 0x40
    1060:	popne	{r4, r5, fp, pc}
    1064:	ldr	r0, [r2, #24]
    1068:	mov	r4, r2
    106c:	cmp	r0, #0
    1070:	beq	10a0 <me_xline+0x50>
    1074:	ldr	r5, [fp, #8]
    1078:	mov	r1, #0
    107c:	mov	r2, #10
    1080:	ldr	r0, [r5, #4]
    1084:	bl	cb0 <strtol@plt>
    1088:	ldr	r2, [r5, #8]
    108c:	ldr	r3, [r5, #16]
    1090:	mov	r1, r0
    1094:	mov	r0, r4
    1098:	pop	{r4, r5, fp, lr}
    109c:	b	1c9c <handle_remote_xline>
    10a0:	pop	{r4, r5, fp, pc}

000010a4 <mo_xline>:
    10a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    10a8:	add	fp, sp, #28
    10ac:	sub	sp, sp, #36	; 0x24
    10b0:	ldr	r0, [r2, #24]
    10b4:	ldr	r1, [pc, #1196]	; 1568 <mo_xline+0x4c4>
    10b8:	mov	r4, r2
    10bc:	ldr	r1, [pc, r1]
    10c0:	ldr	r5, [r1, #324]	; 0x144
    10c4:	cmp	r5, #0
    10c8:	mov	r8, r5
    10cc:	movwne	r8, #1
    10d0:	cmp	r0, #0
    10d4:	ldrne	r0, [r0, #36]	; 0x24
    10d8:	cmpne	r0, #0
    10dc:	bne	1114 <mo_xline+0x70>
    10e0:	ldr	r0, [pc, #1160]	; 1570 <mo_xline+0x4cc>
    10e4:	add	r0, pc, r0
    10e8:	str	r0, [sp]
    10ec:	add	r3, r4, #88	; 0x58
    10f0:	ldr	r0, [pc, #1148]	; 1574 <mo_xline+0x4d0>
    10f4:	ldr	r0, [pc, r0]
    10f8:	ldr	r1, [pc, #1144]	; 1578 <mo_xline+0x4d4>
    10fc:	add	r2, r0, #88	; 0x58
    1100:	add	r1, pc, r1
    1104:	mov	r0, r4
    1108:	bl	cbc <sendto_one@plt>
    110c:	sub	sp, fp, #28
    1110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1114:	ldr	r9, [fp, #8]
    1118:	ldr	r1, [pc, #1100]	; 156c <mo_xline+0x4c8>
    111c:	mov	r7, r3
    1120:	add	r1, pc, r1
    1124:	bl	e18 <privilegeset_in_set@plt>
    1128:	cmp	r0, #0
    112c:	beq	10e0 <mo_xline+0x3c>
    1130:	ldr	r0, [r9, #4]
    1134:	bl	dd0 <valid_temp_time@plt>
    1138:	cmn	r0, #1
    113c:	mov	sl, #1
    1140:	mov	r3, r0
    1144:	mov	r1, #0
    1148:	movwgt	sl, #2
    114c:	movle	r3, r1
    1150:	ldr	r0, [r9, sl, lsl #2]
    1154:	add	r6, sl, #1
    1158:	str	r0, [sp, #32]
    115c:	add	r0, sl, #3
    1160:	cmp	r0, r7
    1164:	bgt	1190 <mo_xline+0xec>
    1168:	str	r0, [sp, #24]
    116c:	ldr	r0, [r9, r6, lsl #2]
    1170:	ldr	r1, [pc, #1028]	; 157c <mo_xline+0x4d8>
    1174:	str	r3, [sp, #28]
    1178:	add	r1, pc, r1
    117c:	bl	e24 <irccmp@plt>
    1180:	ldr	r3, [sp, #28]
    1184:	mov	r1, #0
    1188:	cmp	r0, #0
    118c:	beq	11d4 <mo_xline+0x130>
    1190:	cmp	r6, r7
    1194:	bge	11ac <mo_xline+0x108>
    1198:	ldr	r7, [r9, r6, lsl #2]
    119c:	cmp	r7, #0
    11a0:	ldrbne	r0, [r7]
    11a4:	cmpne	r0, #0
    11a8:	bne	11f4 <mo_xline+0x150>
    11ac:	ldr	r0, [pc, #980]	; 1588 <mo_xline+0x4e4>
    11b0:	add	r3, r4, #88	; 0x58
    11b4:	add	r0, pc, r0
    11b8:	str	r0, [sp]
    11bc:	ldr	r0, [pc, #968]	; 158c <mo_xline+0x4e8>
    11c0:	ldr	r0, [pc, r0]
    11c4:	add	r2, r0, #88	; 0x58
    11c8:	ldr	r1, [pc, #1056]	; 15f0 <mo_xline+0x54c>
    11cc:	add	r1, pc, r1
    11d0:	b	1104 <mo_xline+0x60>
    11d4:	ldr	r0, [r4, #24]
    11d8:	cmp	r0, #0
    11dc:	ldrne	r0, [r0, #36]	; 0x24
    11e0:	cmpne	r0, #0
    11e4:	bne	136c <mo_xline+0x2c8>
    11e8:	ldr	r0, [pc, #916]	; 1584 <mo_xline+0x4e0>
    11ec:	add	r0, pc, r0
    11f0:	b	10e8 <mo_xline+0x44>
    11f4:	cmp	r1, #0
    11f8:	beq	1258 <mo_xline+0x1b4>
    11fc:	ldr	r6, [pc, #908]	; 1590 <mo_xline+0x4ec>
    1200:	cmp	r3, #0
    1204:	ldr	r6, [pc, r6]
    1208:	ldr	sl, [sp, #32]
    120c:	beq	13a4 <mo_xline+0x300>
    1210:	ldr	r0, [pc, #912]	; 15a8 <mo_xline+0x504>
    1214:	mov	r8, r1
    1218:	ldr	r0, [pc, r0]
    121c:	ldr	r2, [r0]
    1220:	ldr	r0, [pc, #900]	; 15ac <mo_xline+0x508>
    1224:	ldr	r5, [pc, #900]	; 15b0 <mo_xline+0x50c>
    1228:	str	r3, [sp, #8]
    122c:	str	r1, [sp, #4]
    1230:	str	sl, [sp, #12]
    1234:	str	r7, [sp, #20]
    1238:	add	r0, pc, r0
    123c:	add	r5, pc, r5
    1240:	str	r5, [sp]
    1244:	mov	r5, r3
    1248:	str	r0, [sp, #16]
    124c:	mov	r0, r4
    1250:	mov	r3, #0
    1254:	b	1418 <mo_xline+0x374>
    1258:	ldr	r0, [pc, #856]	; 15b8 <mo_xline+0x514>
    125c:	ldr	r0, [pc, r0]
    1260:	ldr	r1, [r0, #8]
    1264:	ldr	r6, [pc, #848]	; 15bc <mo_xline+0x518>
    1268:	ldr	r6, [pc, r6]
    126c:	ldr	sl, [sp, #32]
    1270:	cmp	r1, #0
    1274:	beq	139c <mo_xline+0x2f8>
    1278:	cmp	r5, #0
    127c:	bne	139c <mo_xline+0x2f8>
    1280:	ldr	r5, [r0]
    1284:	cmp	r5, #0
    1288:	beq	139c <mo_xline+0x2f8>
    128c:	ldr	r9, [pc, #812]	; 15c0 <mo_xline+0x51c>
    1290:	ldr	r9, [pc, r9]
    1294:	ldr	r6, [r5]
    1298:	cmp	r3, #0
    129c:	ldr	r0, [r6, #12]
    12a0:	beq	12dc <mo_xline+0x238>
    12a4:	tst	r0, #16
    12a8:	beq	1350 <mo_xline+0x2ac>
    12ac:	ldr	r1, [r6, #8]
    12b0:	ldr	r2, [r9]
    12b4:	ldr	r0, [pc, #792]	; 15d4 <mo_xline+0x530>
    12b8:	mov	r6, r3
    12bc:	add	r0, pc, r0
    12c0:	stm	sp, {r0, r1, r3, sl}
    12c4:	mov	r0, r4
    12c8:	mov	r3, #0
    12cc:	str	r7, [sp, #16]
    12d0:	bl	c98 <sendto_match_servs@plt>
    12d4:	mov	r3, r6
    12d8:	b	1350 <mo_xline+0x2ac>
    12dc:	tst	r0, #32
    12e0:	beq	1350 <mo_xline+0x2ac>
    12e4:	ldr	r0, [pc, #728]	; 15c4 <mo_xline+0x520>
    12e8:	ldr	r0, [pc, r0]
    12ec:	ldr	r1, [r6, #8]
    12f0:	ldr	r2, [r0]
    12f4:	ldr	r0, [pc, #716]	; 15c8 <mo_xline+0x524>
    12f8:	add	r0, pc, r0
    12fc:	stm	sp, {r0, r1, sl}
    1300:	mov	sl, r3
    1304:	mov	r0, r4
    1308:	mov	r3, #0
    130c:	str	r7, [sp, #12]
    1310:	bl	c98 <sendto_match_servs@plt>
    1314:	ldr	r0, [pc, #688]	; 15cc <mo_xline+0x528>
    1318:	ldr	r0, [pc, r0]
    131c:	ldr	r2, [r9]
    1320:	ldr	r1, [r6, #8]
    1324:	ldr	r3, [r0]
    1328:	ldr	r0, [pc, #672]	; 15d0 <mo_xline+0x52c>
    132c:	add	r0, pc, r0
    1330:	stm	sp, {r0, r1}
    1334:	ldr	r0, [sp, #32]
    1338:	str	r7, [sp, #12]
    133c:	str	r0, [sp, #8]
    1340:	mov	r0, r4
    1344:	bl	c98 <sendto_match_servs@plt>
    1348:	mov	r3, sl
    134c:	ldr	sl, [sp, #32]
    1350:	ldr	r5, [r5, #8]
    1354:	cmp	r5, #0
    1358:	bne	1294 <mo_xline+0x1f0>
    135c:	ldr	r6, [pc, #628]	; 15d8 <mo_xline+0x534>
    1360:	mov	r5, r3
    1364:	ldr	r6, [pc, r6]
    1368:	b	143c <mo_xline+0x398>
    136c:	ldr	r1, [pc, #524]	; 1580 <mo_xline+0x4dc>
    1370:	add	r1, pc, r1
    1374:	bl	e18 <privilegeset_in_set@plt>
    1378:	ldr	r3, [sp, #28]
    137c:	cmp	r0, #0
    1380:	beq	11e8 <mo_xline+0x144>
    1384:	add	r0, r9, sl, lsl #2
    1388:	ldr	r6, [sp, #24]
    138c:	ldr	r1, [r0, #8]
    1390:	cmp	r6, r7
    1394:	blt	1198 <mo_xline+0xf4>
    1398:	b	11ac <mo_xline+0x108>
    139c:	mov	r5, r3
    13a0:	b	143c <mo_xline+0x398>
    13a4:	ldr	r9, [pc, #488]	; 1594 <mo_xline+0x4f0>
    13a8:	mov	r5, r3
    13ac:	mov	r8, r1
    13b0:	ldr	r9, [pc, r9]
    13b4:	ldr	r2, [r9]
    13b8:	ldr	r0, [pc, #472]	; 1598 <mo_xline+0x4f4>
    13bc:	ldr	r3, [pc, #472]	; 159c <mo_xline+0x4f8>
    13c0:	add	r3, pc, r3
    13c4:	add	r0, pc, r0
    13c8:	str	r3, [sp]
    13cc:	stmib	sp, {r1, sl}
    13d0:	str	r0, [sp, #12]
    13d4:	mov	r0, r4
    13d8:	mov	r3, #0
    13dc:	str	r7, [sp, #16]
    13e0:	bl	c98 <sendto_match_servs@plt>
    13e4:	ldr	r3, [r9]
    13e8:	ldr	r0, [pc, #432]	; 15a0 <mo_xline+0x4fc>
    13ec:	mov	r1, r8
    13f0:	ldr	r0, [pc, r0]
    13f4:	ldr	r2, [r0]
    13f8:	ldr	r0, [pc, #420]	; 15a4 <mo_xline+0x500>
    13fc:	add	r0, pc, r0
    1400:	stm	sp, {r0, r8}
    1404:	mov	r0, #0
    1408:	str	sl, [sp, #12]
    140c:	str	r7, [sp, #16]
    1410:	str	r0, [sp, #8]
    1414:	mov	r0, r4
    1418:	bl	c98 <sendto_match_servs@plt>
    141c:	ldr	r0, [pc, #400]	; 15b4 <mo_xline+0x510>
    1420:	ldr	r0, [pc, r0]
    1424:	add	r1, r0, #88	; 0x58
    1428:	mov	r0, r8
    142c:	bl	dc4 <match@plt>
    1430:	mov	r8, #0
    1434:	cmp	r0, #0
    1438:	beq	1560 <mo_xline+0x4bc>
    143c:	mov	r0, sl
    1440:	bl	da0 <find_xline_mask@plt>
    1444:	cmp	r0, #0
    1448:	beq	147c <mo_xline+0x3d8>
    144c:	ldr	r1, [r0, #16]
    1450:	ldr	r0, [r0, #20]
    1454:	str	sl, [sp]
    1458:	add	r3, r4, #88	; 0x58
    145c:	str	r1, [sp, #4]
    1460:	str	r0, [sp, #8]
    1464:	ldr	r0, [pc, #368]	; 15dc <mo_xline+0x538>
    1468:	ldr	r0, [pc, r0]
    146c:	ldr	r1, [pc, #364]	; 15e0 <mo_xline+0x53c>
    1470:	add	r2, r0, #88	; 0x58
    1474:	add	r1, pc, r1
    1478:	b	1104 <mo_xline+0x60>
    147c:	ldrb	r0, [r7]
    1480:	cmp	r0, #0
    1484:	beq	14c8 <mo_xline+0x424>
    1488:	mov	r0, sl
    148c:	bl	e00 <valid_wild_card_simple@plt>
    1490:	cmp	r0, #0
    1494:	beq	152c <mo_xline+0x488>
    1498:	cmp	r5, #0
    149c:	mov	r1, r5
    14a0:	eor	r0, r8, #1
    14a4:	movwne	r1, #1
    14a8:	orrs	r0, r1, r0
    14ac:	bne	1548 <mo_xline+0x4a4>
    14b0:	ldr	r1, [pc, #320]	; 15f8 <mo_xline+0x554>
    14b4:	mov	r0, r4
    14b8:	add	r1, pc, r1
    14bc:	sub	sp, fp, #28
    14c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14c4:	b	de8 <sendto_one_notice@plt>
    14c8:	ldr	r0, [r4, #36]	; 0x24
    14cc:	ldrh	r1, [r0, #80]	; 0x50
    14d0:	cmp	r1, #32
    14d4:	bne	150c <mo_xline+0x468>
    14d8:	ldrb	r0, [r0, #396]	; 0x18c
    14dc:	cmp	r0, #0
    14e0:	beq	150c <mo_xline+0x468>
    14e4:	mov	r3, r4
    14e8:	ldrb	r0, [r3, #396]!	; 0x18c
    14ec:	ldr	r2, [pc, #240]	; 15e4 <mo_xline+0x540>
    14f0:	ldr	r2, [pc, r2]
    14f4:	cmp	r0, #0
    14f8:	subeq	r3, r3, #308	; 0x134
    14fc:	ldrb	r0, [r2, #396]!	; 0x18c
    1500:	cmp	r0, #0
    1504:	subeq	r2, r2, #308	; 0x134
    1508:	b	151c <mo_xline+0x478>
    150c:	ldr	r0, [pc, #212]	; 15e8 <mo_xline+0x544>
    1510:	add	r3, r4, #88	; 0x58
    1514:	ldr	r0, [pc, r0]
    1518:	add	r2, r0, #88	; 0x58
    151c:	ldr	r0, [pc, #200]	; 15ec <mo_xline+0x548>
    1520:	add	r0, pc, r0
    1524:	str	r0, [sp]
    1528:	b	11c8 <mo_xline+0x124>
    152c:	ldr	r2, [r6, #240]	; 0xf0
    1530:	ldr	r1, [pc, #188]	; 15f4 <mo_xline+0x550>
    1534:	mov	r0, r4
    1538:	add	r1, pc, r1
    153c:	sub	sp, fp, #28
    1540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1544:	b	de8 <sendto_one_notice@plt>
    1548:	mov	r3, r5
    154c:	mov	r0, r4
    1550:	mov	r1, sl
    1554:	mov	r2, r7
    1558:	str	r8, [sp]
    155c:	bl	189c <apply_xline>
    1560:	sub	sp, fp, #28
    1564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1568:	.word	0x00012010
    156c:	.word	0x000010f0
    1570:	.word	0x0000129e
    1574:	.word	0x00011fd0
    1578:	.word	0x0000111b
    157c:	.word	0x000010ca
    1580:	.word	0x00000ed5
    1584:	.word	0x0000105e
    1588:	.word	0x00001056
    158c:	.word	0x00011f04
    1590:	.word	0x00011ec8
    1594:	.word	0x00011cfc
    1598:	.word	0x00000eb5
    159c:	.word	0x00000f0f
    15a0:	.word	0x00011cd8
    15a4:	.word	0x00000ee6
    15a8:	.word	0x00011eb0
    15ac:	.word	0x00001041
    15b0:	.word	0x000010c1
    15b4:	.word	0x00011ca4
    15b8:	.word	0x00011e60
    15bc:	.word	0x00011e64
    15c0:	.word	0x00011e38
    15c4:	.word	0x00011dc4
    15c8:	.word	0x00001021
    15cc:	.word	0x00011d94
    15d0:	.word	0x00000fff
    15d4:	.word	0x00001026
    15d8:	.word	0x00011d68
    15dc:	.word	0x00011c5c
    15e0:	.word	0x00000e07
    15e4:	.word	0x00011bd4
    15e8:	.word	0x00011bb0
    15ec:	.word	0x00000cea
    15f0:	.word	0x00001088
    15f4:	.word	0x00000e0d
    15f8:	.word	0x00000df4

000015fc <ms_unxline>:
    15fc:	push	{r4, r5, fp, lr}
    1600:	add	fp, sp, #8
    1604:	sub	sp, sp, #8
    1608:	ldr	r0, [pc, #172]	; 16bc <ms_unxline+0xc0>
    160c:	mov	r4, r2
    1610:	ldr	r0, [pc, r0]
    1614:	ldr	r5, [fp, #8]
    1618:	ldr	r3, [r0]
    161c:	ldr	r2, [r5, #4]
    1620:	ldr	r0, [r5, #8]
    1624:	ldr	r1, [pc, #148]	; 16c0 <ms_unxline+0xc4>
    1628:	add	r1, pc, r1
    162c:	str	r0, [sp, #4]
    1630:	mov	r0, r4
    1634:	str	r1, [sp]
    1638:	ldr	r1, [pc, #132]	; 16c4 <ms_unxline+0xc8>
    163c:	add	r1, pc, r1
    1640:	bl	c74 <propagate_generic@plt>
    1644:	ldr	r0, [r5, #4]
    1648:	ldr	r1, [pc, #120]	; 16c8 <ms_unxline+0xcc>
    164c:	ldr	r1, [pc, r1]
    1650:	add	r1, r1, #88	; 0x58
    1654:	bl	dc4 <match@plt>
    1658:	cmp	r0, #0
    165c:	beq	16b4 <ms_unxline+0xb8>
    1660:	ldrh	r0, [r4, #80]	; 0x50
    1664:	cmp	r0, #64	; 0x40
    1668:	bne	16b4 <ms_unxline+0xb8>
    166c:	ldr	r0, [r4, #24]
    1670:	cmp	r0, #0
    1674:	beq	16b4 <ms_unxline+0xb8>
    1678:	ldr	r2, [r4, #32]
    167c:	ldr	r5, [r5, #8]
    1680:	add	r0, r4, #152	; 0x98
    1684:	add	r1, r4, #163	; 0xa3
    1688:	mov	r3, #64	; 0x40
    168c:	add	r2, r2, #88	; 0x58
    1690:	bl	e0c <find_shared_conf@plt>
    1694:	cmp	r0, #0
    1698:	beq	16b4 <ms_unxline+0xb8>
    169c:	mov	r0, r4
    16a0:	mov	r1, r5
    16a4:	mov	r2, #0
    16a8:	sub	sp, fp, #8
    16ac:	pop	{r4, r5, fp, lr}
    16b0:	b	1e14 <remove_xline>
    16b4:	sub	sp, fp, #8
    16b8:	pop	{r4, r5, fp, pc}
    16bc:	.word	0x00011a9c
    16c0:	.word	0x00000c81
    16c4:	.word	0x00000bcc
    16c8:	.word	0x00011a78

000016cc <me_unxline>:
    16cc:	push	{r4, r5, fp, lr}
    16d0:	add	fp, sp, #8
    16d4:	ldrh	r0, [r2, #80]	; 0x50
    16d8:	cmp	r0, #64	; 0x40
    16dc:	bne	172c <me_unxline+0x60>
    16e0:	ldr	r0, [r2, #24]
    16e4:	mov	r4, r2
    16e8:	cmp	r0, #0
    16ec:	popeq	{r4, r5, fp, pc}
    16f0:	ldr	r0, [fp, #8]
    16f4:	ldr	r2, [r4, #32]
    16f8:	add	r1, r4, #163	; 0xa3
    16fc:	mov	r3, #64	; 0x40
    1700:	ldr	r5, [r0, #4]
    1704:	add	r0, r4, #152	; 0x98
    1708:	add	r2, r2, #88	; 0x58
    170c:	bl	e0c <find_shared_conf@plt>
    1710:	cmp	r0, #0
    1714:	beq	172c <me_unxline+0x60>
    1718:	mov	r0, r4
    171c:	mov	r1, r5
    1720:	mov	r2, #0
    1724:	pop	{r4, r5, fp, lr}
    1728:	b	1e14 <remove_xline>
    172c:	pop	{r4, r5, fp, pc}

00001730 <mo_unxline>:
    1730:	push	{r4, r5, r6, r7, fp, lr}
    1734:	add	fp, sp, #16
    1738:	sub	sp, sp, #8
    173c:	ldr	r0, [r2, #24]
    1740:	mov	r4, r2
    1744:	cmp	r0, #0
    1748:	ldrne	r0, [r0, #36]	; 0x24
    174c:	cmpne	r0, #0
    1750:	bne	1788 <mo_unxline+0x58>
    1754:	ldr	r0, [pc, #280]	; 1874 <mo_unxline+0x144>
    1758:	add	r0, pc, r0
    175c:	str	r0, [sp]
    1760:	add	r3, r4, #88	; 0x58
    1764:	ldr	r0, [pc, #268]	; 1878 <mo_unxline+0x148>
    1768:	ldr	r0, [pc, r0]
    176c:	ldr	r1, [pc, #264]	; 187c <mo_unxline+0x14c>
    1770:	add	r2, r0, #88	; 0x58
    1774:	add	r1, pc, r1
    1778:	mov	r0, r4
    177c:	bl	cbc <sendto_one@plt>
    1780:	sub	sp, fp, #16
    1784:	pop	{r4, r5, r6, r7, fp, pc}
    1788:	ldr	r7, [fp, #8]
    178c:	ldr	r1, [pc, #220]	; 1870 <mo_unxline+0x140>
    1790:	mov	r6, r3
    1794:	add	r1, pc, r1
    1798:	bl	e18 <privilegeset_in_set@plt>
    179c:	cmp	r0, #0
    17a0:	beq	1754 <mo_unxline+0x24>
    17a4:	mov	r5, #1
    17a8:	cmp	r6, #4
    17ac:	bne	17c8 <mo_unxline+0x98>
    17b0:	ldr	r0, [r7, #8]
    17b4:	ldr	r1, [pc, #196]	; 1880 <mo_unxline+0x150>
    17b8:	add	r1, pc, r1
    17bc:	bl	e24 <irccmp@plt>
    17c0:	cmp	r0, #0
    17c4:	beq	17e0 <mo_unxline+0xb0>
    17c8:	ldr	r1, [r7, #4]
    17cc:	mov	r0, r4
    17d0:	mov	r2, r5
    17d4:	sub	sp, fp, #16
    17d8:	pop	{r4, r5, r6, r7, fp, lr}
    17dc:	b	1e14 <remove_xline>
    17e0:	ldr	r0, [r4, #24]
    17e4:	cmp	r0, #0
    17e8:	ldrne	r0, [r0, #36]	; 0x24
    17ec:	cmpne	r0, #0
    17f0:	bne	1800 <mo_unxline+0xd0>
    17f4:	ldr	r0, [pc, #140]	; 1888 <mo_unxline+0x158>
    17f8:	add	r0, pc, r0
    17fc:	b	175c <mo_unxline+0x2c>
    1800:	ldr	r1, [pc, #124]	; 1884 <mo_unxline+0x154>
    1804:	add	r1, pc, r1
    1808:	bl	e18 <privilegeset_in_set@plt>
    180c:	cmp	r0, #0
    1810:	beq	17f4 <mo_unxline+0xc4>
    1814:	ldr	r0, [pc, #112]	; 188c <mo_unxline+0x15c>
    1818:	ldr	r0, [pc, r0]
    181c:	ldr	r2, [r7, #12]
    1820:	ldr	r3, [r0]
    1824:	ldr	r0, [r7, #4]
    1828:	ldr	r1, [pc, #96]	; 1890 <mo_unxline+0x160>
    182c:	add	r1, pc, r1
    1830:	str	r0, [sp, #4]
    1834:	mov	r0, r4
    1838:	str	r1, [sp]
    183c:	ldr	r1, [pc, #80]	; 1894 <mo_unxline+0x164>
    1840:	add	r1, pc, r1
    1844:	bl	c74 <propagate_generic@plt>
    1848:	ldr	r0, [r7, #12]
    184c:	ldr	r1, [pc, #68]	; 1898 <mo_unxline+0x168>
    1850:	ldr	r1, [pc, r1]
    1854:	add	r1, r1, #88	; 0x58
    1858:	bl	dc4 <match@plt>
    185c:	mov	r5, #0
    1860:	cmp	r0, #0
    1864:	subeq	sp, fp, #16
    1868:	popeq	{r4, r5, r6, r7, fp, pc}
    186c:	b	17c8 <mo_unxline+0x98>
    1870:	.word	0x00000a7c
    1874:	.word	0x00000c2a
    1878:	.word	0x0001195c
    187c:	.word	0x00000aa7
    1880:	.word	0x00000a8a
    1884:	.word	0x00000a41
    1888:	.word	0x00000a52
    188c:	.word	0x00011894
    1890:	.word	0x00000a7d
    1894:	.word	0x000009c8
    1898:	.word	0x00011874

0000189c <apply_xline>:
    189c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    18a0:	add	fp, sp, #28
    18a4:	sub	sp, sp, #28
    18a8:	mov	r9, r3
    18ac:	mov	r8, r2
    18b0:	mov	r7, r1
    18b4:	mov	sl, r0
    18b8:	bl	c80 <make_conf@plt>
    18bc:	mov	r4, r0
    18c0:	mov	r0, #128	; 0x80
    18c4:	str	r0, [r4]
    18c8:	bl	c8c <rb_current_time@plt>
    18cc:	str	r0, [r4, #40]	; 0x28
    18d0:	mov	r0, r7
    18d4:	bl	d94 <strlen@plt>
    18d8:	add	r0, r0, #1
    18dc:	bl	d64 <malloc@plt>
    18e0:	cmp	r0, #0
    18e4:	beq	1c34 <apply_xline+0x398>
    18e8:	ldr	r5, [fp, #8]
    18ec:	mov	r1, r7
    18f0:	mov	r6, r0
    18f4:	bl	d4c <strcpy@plt>
    18f8:	mov	r0, r8
    18fc:	str	r6, [r4, #16]
    1900:	bl	d94 <strlen@plt>
    1904:	add	r0, r0, #1
    1908:	bl	d64 <malloc@plt>
    190c:	cmp	r0, #0
    1910:	beq	1c34 <apply_xline+0x398>
    1914:	mov	r1, r8
    1918:	mov	r6, r0
    191c:	bl	d4c <strcpy@plt>
    1920:	str	r6, [r4, #20]
    1924:	ldr	r0, [r4, #16]
    1928:	bl	db8 <collapse@plt>
    192c:	mov	r0, sl
    1930:	bl	d1c <get_oper_name@plt>
    1934:	bl	d40 <operhash_add@plt>
    1938:	cmp	r5, #0
    193c:	str	r0, [r4, #12]
    1940:	beq	19a4 <apply_xline+0x108>
    1944:	ldr	r0, [r4, #4]
    1948:	orr	r0, r0, #8912896	; 0x880000
    194c:	str	r0, [r4, #4]
    1950:	bl	c8c <rb_current_time@plt>
    1954:	add	r0, r0, r9
    1958:	str	r0, [r4, #36]	; 0x24
    195c:	str	r0, [r4, #44]	; 0x2c
    1960:	mov	r0, r4
    1964:	bl	cc8 <replace_old_ban@plt>
    1968:	bl	d88 <rb_make_rb_dlink_node@plt>
    196c:	cmp	r0, #0
    1970:	beq	1c38 <apply_xline+0x39c>
    1974:	mov	r1, #0
    1978:	str	r1, [r0, #4]
    197c:	str	r4, [r0]
    1980:	ldr	r1, [pc, #720]	; 1c58 <apply_xline+0x3bc>
    1984:	ldr	r1, [pc, r1]
    1988:	ldr	r2, [r1]
    198c:	cmp	r2, #0
    1990:	str	r2, [r0, #8]
    1994:	beq	1ac8 <apply_xline+0x22c>
    1998:	add	r2, r2, #4
    199c:	str	r0, [r2]
    19a0:	b	1ad8 <apply_xline+0x23c>
    19a4:	cmp	r9, #1
    19a8:	blt	1a34 <apply_xline+0x198>
    19ac:	bl	c8c <rb_current_time@plt>
    19b0:	add	r0, r0, r9
    19b4:	str	r0, [r4, #36]	; 0x24
    19b8:	mov	r0, sl
    19bc:	bl	d1c <get_oper_name@plt>
    19c0:	movw	r1, #34953	; 0x8889
    19c4:	mov	r3, r0
    19c8:	ldr	r0, [r4, #16]
    19cc:	movt	r1, #34952	; 0x8888
    19d0:	umull	r1, r2, r9, r1
    19d4:	lsr	r6, r2, #5
    19d8:	mov	r1, #0
    19dc:	str	r6, [sp]
    19e0:	stmib	sp, {r0, r8}
    19e4:	mov	r0, #256	; 0x100
    19e8:	ldr	r2, [pc, #644]	; 1c74 <apply_xline+0x3d8>
    19ec:	add	r2, pc, r2
    19f0:	bl	cec <sendto_realops_snomask@plt>
    19f4:	mov	r0, sl
    19f8:	bl	d1c <get_oper_name@plt>
    19fc:	stm	sp, {r7, r8}
    1a00:	mov	r2, r0
    1a04:	mov	r0, #7
    1a08:	mov	r3, r6
    1a0c:	ldr	r1, [pc, #612]	; 1c78 <apply_xline+0x3dc>
    1a10:	add	r1, pc, r1
    1a14:	bl	dac <ilog@plt>
    1a18:	ldr	r3, [r4, #16]
    1a1c:	ldr	r1, [pc, #600]	; 1c7c <apply_xline+0x3e0>
    1a20:	mov	r0, sl
    1a24:	mov	r2, r6
    1a28:	add	r1, pc, r1
    1a2c:	bl	de8 <sendto_one_notice@plt>
    1a30:	b	1bcc <apply_xline+0x330>
    1a34:	mov	r0, sl
    1a38:	bl	d1c <get_oper_name@plt>
    1a3c:	mov	r3, r0
    1a40:	ldr	r0, [r4, #16]
    1a44:	ldr	r1, [r4, #20]
    1a48:	mov	r5, #0
    1a4c:	stm	sp, {r0, r1}
    1a50:	mov	r0, #256	; 0x100
    1a54:	mov	r1, #0
    1a58:	ldr	r2, [pc, #544]	; 1c80 <apply_xline+0x3e4>
    1a5c:	add	r2, pc, r2
    1a60:	bl	cec <sendto_realops_snomask@plt>
    1a64:	ldr	r2, [r4, #16]
    1a68:	ldr	r3, [r4, #20]
    1a6c:	ldr	r1, [pc, #528]	; 1c84 <apply_xline+0x3e8>
    1a70:	mov	r0, sl
    1a74:	add	r1, pc, r1
    1a78:	bl	de8 <sendto_one_notice@plt>
    1a7c:	ldr	r0, [r4, #20]
    1a80:	ldr	r2, [r4, #16]
    1a84:	mov	r1, sl
    1a88:	mov	r3, #0
    1a8c:	stm	sp, {r0, r5}
    1a90:	mov	r0, #2
    1a94:	str	r5, [sp, #8]
    1a98:	bl	cf8 <bandb_add@plt>
    1a9c:	mov	r0, sl
    1aa0:	bl	d1c <get_oper_name@plt>
    1aa4:	mov	r2, r0
    1aa8:	ldr	r0, [r4, #20]
    1aac:	mov	r3, r7
    1ab0:	str	r0, [sp]
    1ab4:	mov	r0, #7
    1ab8:	ldr	r1, [pc, #456]	; 1c88 <apply_xline+0x3ec>
    1abc:	add	r1, pc, r1
    1ac0:	bl	dac <ilog@plt>
    1ac4:	b	1bcc <apply_xline+0x330>
    1ac8:	mov	r2, r1
    1acc:	ldr	r3, [r2, #4]!
    1ad0:	cmp	r3, #0
    1ad4:	streq	r0, [r2]
    1ad8:	str	r0, [r1]
    1adc:	ldr	r0, [r1, #8]
    1ae0:	add	r0, r0, #1
    1ae4:	str	r0, [r1, #8]
    1ae8:	mov	r0, sl
    1aec:	bl	d1c <get_oper_name@plt>
    1af0:	movw	r1, #34953	; 0x8889
    1af4:	mov	r3, r0
    1af8:	ldr	r0, [r4, #16]
    1afc:	movt	r1, #34952	; 0x8888
    1b00:	smmla	r1, r9, r1, r9
    1b04:	asr	r2, r1, #5
    1b08:	add	r6, r2, r1, lsr #31
    1b0c:	mov	r1, #0
    1b10:	str	r6, [sp]
    1b14:	stmib	sp, {r0, r8}
    1b18:	mov	r0, #256	; 0x100
    1b1c:	ldr	r2, [pc, #312]	; 1c5c <apply_xline+0x3c0>
    1b20:	add	r2, pc, r2
    1b24:	bl	cec <sendto_realops_snomask@plt>
    1b28:	mov	r0, sl
    1b2c:	bl	d1c <get_oper_name@plt>
    1b30:	stm	sp, {r7, r8}
    1b34:	mov	r2, r0
    1b38:	mov	r0, #7
    1b3c:	mov	r3, r6
    1b40:	ldr	r1, [pc, #280]	; 1c60 <apply_xline+0x3c4>
    1b44:	add	r1, pc, r1
    1b48:	bl	dac <ilog@plt>
    1b4c:	ldr	r3, [r4, #16]
    1b50:	ldr	r1, [pc, #268]	; 1c64 <apply_xline+0x3c8>
    1b54:	mov	r0, sl
    1b58:	mov	r2, r6
    1b5c:	add	r1, pc, r1
    1b60:	bl	de8 <sendto_one_notice@plt>
    1b64:	ldr	r0, [pc, #252]	; 1c68 <apply_xline+0x3cc>
    1b68:	add	r7, sl, #396	; 0x18c
    1b6c:	ldr	r0, [pc, r0]
    1b70:	ldr	r0, [r0]
    1b74:	ldr	r1, [pc, #240]	; 1c6c <apply_xline+0x3d0>
    1b78:	ldr	r1, [pc, r1]
    1b7c:	ldr	r2, [r4, #16]
    1b80:	ldr	r3, [r4, #36]	; 0x24
    1b84:	ldr	r6, [r4, #40]	; 0x28
    1b88:	ldr	r5, [r4, #44]	; 0x2c
    1b8c:	ldr	r1, [r1]
    1b90:	ldr	ip, [pc, #216]	; 1c70 <apply_xline+0x3d4>
    1b94:	str	r2, [sp, #8]
    1b98:	sub	r5, r5, r6
    1b9c:	sub	r3, r3, r6
    1ba0:	add	r2, sp, #16
    1ba4:	str	r7, [sp, #4]
    1ba8:	str	r6, [sp, #12]
    1bac:	add	ip, pc, ip
    1bb0:	str	ip, [sp]
    1bb4:	stm	r2, {r3, r5, r8}
    1bb8:	orr	r2, r0, r1
    1bbc:	mov	r0, #0
    1bc0:	mov	r1, #0
    1bc4:	mov	r3, #0
    1bc8:	bl	d58 <sendto_server@plt>
    1bcc:	bl	d88 <rb_make_rb_dlink_node@plt>
    1bd0:	cmp	r0, #0
    1bd4:	beq	1c38 <apply_xline+0x39c>
    1bd8:	mov	r1, #0
    1bdc:	str	r1, [r0, #4]
    1be0:	str	r4, [r0]
    1be4:	ldr	r1, [pc, #160]	; 1c8c <apply_xline+0x3f0>
    1be8:	ldr	r1, [pc, r1]
    1bec:	ldr	r2, [r1]
    1bf0:	cmp	r2, #0
    1bf4:	str	r2, [r0, #8]
    1bf8:	beq	1c08 <apply_xline+0x36c>
    1bfc:	add	r2, r2, #4
    1c00:	str	r0, [r2]
    1c04:	b	1c18 <apply_xline+0x37c>
    1c08:	mov	r2, r1
    1c0c:	ldr	r3, [r2, #4]!
    1c10:	cmp	r3, #0
    1c14:	streq	r0, [r2]
    1c18:	str	r0, [r1]
    1c1c:	ldr	r0, [r1, #8]
    1c20:	add	r0, r0, #1
    1c24:	str	r0, [r1, #8]
    1c28:	sub	sp, fp, #28
    1c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1c30:	b	d10 <check_xlines@plt>
    1c34:	bl	cd4 <rb_outofmemory@plt>
    1c38:	ldr	r0, [pc, #80]	; 1c90 <apply_xline+0x3f4>
    1c3c:	ldr	r1, [pc, #80]	; 1c94 <apply_xline+0x3f8>
    1c40:	ldr	r3, [pc, #80]	; 1c98 <apply_xline+0x3fc>
    1c44:	mov	r2, #144	; 0x90
    1c48:	add	r0, pc, r0
    1c4c:	add	r1, pc, r1
    1c50:	add	r3, pc, r3
    1c54:	bl	e30 <__assert_fail@plt>
    1c58:	.word	0x00011720
    1c5c:	.word	0x00000868
    1c60:	.word	0x00000871
    1c64:	.word	0x00000867
    1c68:	.word	0x00011548
    1c6c:	.word	0x00011538
    1c70:	.word	0x00000839
    1c74:	.word	0x00000a18
    1c78:	.word	0x000009a5
    1c7c:	.word	0x00000a0c
    1c80:	.word	0x000009fd
    1c84:	.word	0x00000a03
    1c88:	.word	0x000009d7
    1c8c:	.word	0x000114c0
    1c90:	.word	0x000008af
    1c94:	.word	0x00000854
    1c98:	.word	0x0000086c

00001c9c <handle_remote_xline>:
    1c9c:	push	{r4, r5, r6, r7, fp, lr}
    1ca0:	add	fp, sp, #16
    1ca4:	sub	sp, sp, #8
    1ca8:	mov	r5, r2
    1cac:	ldr	r2, [r0, #32]
    1cb0:	mov	r6, r3
    1cb4:	mov	r4, r0
    1cb8:	mov	r3, #32
    1cbc:	cmp	r1, #0
    1cc0:	mov	r7, r1
    1cc4:	add	r0, r0, #152	; 0x98
    1cc8:	movwgt	r3, #16
    1ccc:	add	r1, r4, #163	; 0xa3
    1cd0:	add	r2, r2, #88	; 0x58
    1cd4:	bl	e0c <find_shared_conf@plt>
    1cd8:	cmp	r0, #0
    1cdc:	beq	1df0 <handle_remote_xline+0x154>
    1ce0:	cmp	r6, #0
    1ce4:	ldrbne	r0, [r6]
    1ce8:	cmpne	r0, #0
    1cec:	bne	1d68 <handle_remote_xline+0xcc>
    1cf0:	ldr	r0, [r4, #36]	; 0x24
    1cf4:	ldrh	r1, [r0, #80]	; 0x50
    1cf8:	cmp	r1, #32
    1cfc:	bne	1d34 <handle_remote_xline+0x98>
    1d00:	ldrb	r0, [r0, #396]	; 0x18c
    1d04:	cmp	r0, #0
    1d08:	beq	1d34 <handle_remote_xline+0x98>
    1d0c:	mov	r3, r4
    1d10:	ldrb	r0, [r3, #396]!	; 0x18c
    1d14:	ldr	r2, [pc, #220]	; 1df8 <handle_remote_xline+0x15c>
    1d18:	ldr	r2, [pc, r2]
    1d1c:	cmp	r0, #0
    1d20:	subeq	r3, r3, #308	; 0x134
    1d24:	ldrb	r0, [r2, #396]!	; 0x18c
    1d28:	cmp	r0, #0
    1d2c:	subeq	r2, r2, #308	; 0x134
    1d30:	b	1d44 <handle_remote_xline+0xa8>
    1d34:	ldr	r0, [pc, #192]	; 1dfc <handle_remote_xline+0x160>
    1d38:	add	r3, r4, #88	; 0x58
    1d3c:	ldr	r0, [pc, r0]
    1d40:	add	r2, r0, #88	; 0x58
    1d44:	ldr	r0, [pc, #180]	; 1e00 <handle_remote_xline+0x164>
    1d48:	add	r0, pc, r0
    1d4c:	str	r0, [sp]
    1d50:	mov	r0, r4
    1d54:	ldr	r1, [pc, #168]	; 1e04 <handle_remote_xline+0x168>
    1d58:	add	r1, pc, r1
    1d5c:	bl	cbc <sendto_one@plt>
    1d60:	sub	sp, fp, #16
    1d64:	pop	{r4, r5, r6, r7, fp, pc}
    1d68:	mov	r0, r5
    1d6c:	bl	e00 <valid_wild_card_simple@plt>
    1d70:	cmp	r0, #0
    1d74:	beq	1db0 <handle_remote_xline+0x114>
    1d78:	mov	r0, r5
    1d7c:	bl	da0 <find_xline_mask@plt>
    1d80:	cmp	r0, #0
    1d84:	beq	1dd4 <handle_remote_xline+0x138>
    1d88:	ldr	r3, [r0, #16]
    1d8c:	ldr	r0, [r0, #20]
    1d90:	mov	r2, r5
    1d94:	str	r0, [sp]
    1d98:	mov	r0, r4
    1d9c:	ldr	r1, [pc, #108]	; 1e10 <handle_remote_xline+0x174>
    1da0:	add	r1, pc, r1
    1da4:	bl	de8 <sendto_one_notice@plt>
    1da8:	sub	sp, fp, #16
    1dac:	pop	{r4, r5, r6, r7, fp, pc}
    1db0:	ldr	r0, [pc, #80]	; 1e08 <handle_remote_xline+0x16c>
    1db4:	ldr	r0, [pc, r0]
    1db8:	ldr	r2, [r0, #240]	; 0xf0
    1dbc:	ldr	r1, [pc, #72]	; 1e0c <handle_remote_xline+0x170>
    1dc0:	mov	r0, r4
    1dc4:	add	r1, pc, r1
    1dc8:	sub	sp, fp, #16
    1dcc:	pop	{r4, r5, r6, r7, fp, lr}
    1dd0:	b	de8 <sendto_one_notice@plt>
    1dd4:	mov	r0, #0
    1dd8:	mov	r1, r5
    1ddc:	mov	r2, r6
    1de0:	mov	r3, r7
    1de4:	str	r0, [sp]
    1de8:	mov	r0, r4
    1dec:	bl	189c <apply_xline>
    1df0:	sub	sp, fp, #16
    1df4:	pop	{r4, r5, r6, r7, fp, pc}
    1df8:	.word	0x000113ac
    1dfc:	.word	0x00011388
    1e00:	.word	0x000004c2
    1e04:	.word	0x000004fc
    1e08:	.word	0x00011318
    1e0c:	.word	0x00000581
    1e10:	.word	0x000004e9

00001e14 <remove_xline>:
    1e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e18:	add	fp, sp, #28
    1e1c:	sub	sp, sp, #28
    1e20:	ldr	r9, [pc, #896]	; 21a8 <remove_xline+0x394>
    1e24:	mov	r5, r2
    1e28:	mov	r6, r1
    1e2c:	mov	r8, r0
    1e30:	ldr	r9, [pc, r9]
    1e34:	ldr	r7, [r9]
    1e38:	cmp	r7, #0
    1e3c:	bne	1e50 <remove_xline+0x3c>
    1e40:	b	1fc4 <remove_xline+0x1b0>
    1e44:	ldr	r7, [r7, #8]
    1e48:	cmp	r7, #0
    1e4c:	beq	1fc4 <remove_xline+0x1b0>
    1e50:	ldr	r4, [r7]
    1e54:	mov	r1, r6
    1e58:	ldr	r0, [r4, #16]
    1e5c:	bl	e24 <irccmp@plt>
    1e60:	cmp	r0, #0
    1e64:	bne	1e44 <remove_xline+0x30>
    1e68:	ldr	r0, [r4, #44]	; 0x2c
    1e6c:	cmp	r0, #0
    1e70:	beq	2024 <remove_xline+0x210>
    1e74:	cmp	r5, #0
    1e78:	beq	20cc <remove_xline+0x2b8>
    1e7c:	ldr	r0, [pc, #812]	; 21b0 <remove_xline+0x39c>
    1e80:	ldr	r0, [pc, r0]
    1e84:	ldr	r7, [r0]
    1e88:	b	1e90 <remove_xline+0x7c>
    1e8c:	ldr	r7, [r7, #8]
    1e90:	cmp	r7, #0
    1e94:	subeq	sp, fp, #28
    1e98:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e9c:	ldr	r0, [r7]
    1ea0:	cmp	r0, r4
    1ea4:	bne	1e8c <remove_xline+0x78>
    1ea8:	ldr	r1, [pc, #772]	; 21b4 <remove_xline+0x3a0>
    1eac:	mov	r0, r8
    1eb0:	mov	r2, r6
    1eb4:	add	r1, pc, r1
    1eb8:	bl	de8 <sendto_one_notice@plt>
    1ebc:	mov	r0, r8
    1ec0:	bl	d1c <get_oper_name@plt>
    1ec4:	str	r6, [sp]
    1ec8:	mov	r3, r0
    1ecc:	mov	r0, #256	; 0x100
    1ed0:	mov	r1, #0
    1ed4:	mov	r9, #0
    1ed8:	ldr	r2, [pc, #728]	; 21b8 <remove_xline+0x3a4>
    1edc:	add	r2, pc, r2
    1ee0:	bl	cec <sendto_realops_snomask@plt>
    1ee4:	mov	r0, r8
    1ee8:	bl	d1c <get_oper_name@plt>
    1eec:	ldr	r1, [pc, #712]	; 21bc <remove_xline+0x3a8>
    1ef0:	mov	r2, r0
    1ef4:	mov	r0, #7
    1ef8:	mov	r3, r6
    1efc:	add	r1, pc, r1
    1f00:	bl	dac <ilog@plt>
    1f04:	bl	c8c <rb_current_time@plt>
    1f08:	ldr	r1, [r4, #40]	; 0x28
    1f0c:	mov	sl, r0
    1f10:	ldr	r0, [r4, #12]
    1f14:	mov	r2, sl
    1f18:	cmp	r1, sl
    1f1c:	addge	r2, r1, #1
    1f20:	str	r2, [r4, #36]	; 0x24
    1f24:	str	r2, [r4, #40]	; 0x28
    1f28:	bl	ce0 <operhash_delete@plt>
    1f2c:	mov	r0, r8
    1f30:	bl	d1c <get_oper_name@plt>
    1f34:	bl	d40 <operhash_add@plt>
    1f38:	str	r0, [r4, #12]
    1f3c:	add	r6, r8, #396	; 0x18c
    1f40:	ldr	r0, [r4, #4]
    1f44:	ldr	ip, [r4, #16]
    1f48:	ldr	r2, [r4, #40]	; 0x28
    1f4c:	ldr	r3, [r4, #44]	; 0x2c
    1f50:	orr	r0, r0, #8912896	; 0x880000
    1f54:	sub	r3, r3, r2
    1f58:	str	r0, [r4, #4]
    1f5c:	ldr	r0, [pc, #604]	; 21c0 <remove_xline+0x3ac>
    1f60:	ldr	r0, [pc, r0]
    1f64:	ldr	r0, [r0]
    1f68:	ldr	r5, [pc, #596]	; 21c4 <remove_xline+0x3b0>
    1f6c:	ldr	r5, [pc, r5]
    1f70:	ldr	r5, [r5]
    1f74:	ldr	r1, [pc, #588]	; 21c8 <remove_xline+0x3b4>
    1f78:	add	r1, pc, r1
    1f7c:	stm	sp, {r1, r6, ip}
    1f80:	str	r2, [sp, #12]
    1f84:	str	r3, [sp, #20]
    1f88:	orr	r2, r0, r5
    1f8c:	mov	r0, #0
    1f90:	mov	r1, #0
    1f94:	mov	r3, #0
    1f98:	str	r9, [sp, #16]
    1f9c:	bl	d58 <sendto_server@plt>
    1fa0:	ldr	r0, [r4, #16]
    1fa4:	mov	r1, #0
    1fa8:	bl	ddc <remove_reject_mask@plt>
    1fac:	mov	r0, r4
    1fb0:	mov	r1, r7
    1fb4:	mov	r2, sl
    1fb8:	sub	sp, fp, #28
    1fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1fc0:	b	d04 <deactivate_conf@plt>
    1fc4:	ldr	r0, [pc, #552]	; 21f4 <remove_xline+0x3e0>
    1fc8:	ldr	r0, [pc, r0]
    1fcc:	ldr	r0, [r0, #8]
    1fd0:	cmp	r0, #0
    1fd4:	cmpne	r5, #0
    1fd8:	beq	2008 <remove_xline+0x1f4>
    1fdc:	ldr	r0, [pc, #532]	; 21f8 <remove_xline+0x3e4>
    1fe0:	mov	r2, #64	; 0x40
    1fe4:	ldr	r0, [pc, r0]
    1fe8:	ldr	r3, [r0]
    1fec:	ldr	r0, [pc, #520]	; 21fc <remove_xline+0x3e8>
    1ff0:	add	r0, pc, r0
    1ff4:	stm	sp, {r0, r6}
    1ff8:	mov	r0, r8
    1ffc:	ldr	r1, [pc, #508]	; 2200 <remove_xline+0x3ec>
    2000:	add	r1, pc, r1
    2004:	bl	d34 <cluster_generic@plt>
    2008:	ldr	r1, [pc, #500]	; 2204 <remove_xline+0x3f0>
    200c:	add	r1, pc, r1
    2010:	mov	r0, r8
    2014:	mov	r2, r6
    2018:	sub	sp, fp, #28
    201c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2020:	b	de8 <sendto_one_notice@plt>
    2024:	ldr	r0, [pc, #416]	; 21cc <remove_xline+0x3b8>
    2028:	ldr	r0, [pc, r0]
    202c:	ldr	r0, [r0, #8]
    2030:	cmp	r0, #0
    2034:	cmpne	r5, #0
    2038:	beq	2068 <remove_xline+0x254>
    203c:	ldr	r0, [pc, #396]	; 21d0 <remove_xline+0x3bc>
    2040:	mov	r2, #64	; 0x40
    2044:	ldr	r0, [pc, r0]
    2048:	ldr	r3, [r0]
    204c:	ldr	r0, [pc, #384]	; 21d4 <remove_xline+0x3c0>
    2050:	add	r0, pc, r0
    2054:	stm	sp, {r0, r6}
    2058:	mov	r0, r8
    205c:	ldr	r1, [pc, #372]	; 21d8 <remove_xline+0x3c4>
    2060:	add	r1, pc, r1
    2064:	bl	d34 <cluster_generic@plt>
    2068:	ldr	r0, [r4, #36]	; 0x24
    206c:	cmp	r0, #0
    2070:	beq	20d8 <remove_xline+0x2c4>
    2074:	ldr	r1, [pc, #364]	; 21e8 <remove_xline+0x3d4>
    2078:	mov	r0, r8
    207c:	mov	r2, r6
    2080:	add	r1, pc, r1
    2084:	bl	de8 <sendto_one_notice@plt>
    2088:	mov	r0, r8
    208c:	bl	d1c <get_oper_name@plt>
    2090:	str	r6, [sp]
    2094:	mov	r3, r0
    2098:	mov	r0, #256	; 0x100
    209c:	mov	r1, #0
    20a0:	ldr	r2, [pc, #324]	; 21ec <remove_xline+0x3d8>
    20a4:	add	r2, pc, r2
    20a8:	bl	cec <sendto_realops_snomask@plt>
    20ac:	mov	r0, r8
    20b0:	bl	d1c <get_oper_name@plt>
    20b4:	ldr	r1, [pc, #308]	; 21f0 <remove_xline+0x3dc>
    20b8:	mov	r2, r0
    20bc:	mov	r0, #7
    20c0:	mov	r3, r6
    20c4:	add	r1, pc, r1
    20c8:	b	2140 <remove_xline+0x32c>
    20cc:	ldr	r1, [pc, #216]	; 21ac <remove_xline+0x398>
    20d0:	add	r1, pc, r1
    20d4:	b	2010 <remove_xline+0x1fc>
    20d8:	ldr	r1, [r4, #16]
    20dc:	mov	r0, #2
    20e0:	mov	r2, #0
    20e4:	bl	df4 <bandb_del@plt>
    20e8:	ldr	r2, [r4, #16]
    20ec:	ldr	r1, [pc, #232]	; 21dc <remove_xline+0x3c8>
    20f0:	mov	r0, r8
    20f4:	add	r1, pc, r1
    20f8:	bl	de8 <sendto_one_notice@plt>
    20fc:	mov	r0, r8
    2100:	bl	d1c <get_oper_name@plt>
    2104:	mov	r3, r0
    2108:	ldr	r0, [r4, #16]
    210c:	mov	r1, #0
    2110:	str	r0, [sp]
    2114:	mov	r0, #256	; 0x100
    2118:	ldr	r2, [pc, #192]	; 21e0 <remove_xline+0x3cc>
    211c:	add	r2, pc, r2
    2120:	bl	cec <sendto_realops_snomask@plt>
    2124:	mov	r0, r8
    2128:	bl	d1c <get_oper_name@plt>
    212c:	ldr	r3, [r4, #16]
    2130:	ldr	r1, [pc, #172]	; 21e4 <remove_xline+0x3d0>
    2134:	mov	r2, r0
    2138:	mov	r0, #7
    213c:	add	r1, pc, r1
    2140:	bl	dac <ilog@plt>
    2144:	ldr	r0, [r4, #16]
    2148:	mov	r1, #0
    214c:	bl	ddc <remove_reject_mask@plt>
    2150:	mov	r0, r4
    2154:	bl	d7c <free_conf@plt>
    2158:	ldr	r0, [r7, #8]
    215c:	ldr	r1, [r7, #4]
    2160:	mov	r2, r9
    2164:	cmp	r0, #0
    2168:	streq	r1, [r9, #4]
    216c:	strne	r1, [r0, #4]
    2170:	ldrne	r1, [r7, #4]
    2174:	cmp	r1, #0
    2178:	addne	r2, r1, #8
    217c:	str	r0, [r2]
    2180:	mov	r0, #0
    2184:	str	r0, [r7, #4]
    2188:	str	r0, [r7, #8]
    218c:	ldr	r0, [r9, #8]
    2190:	sub	r0, r0, #1
    2194:	str	r0, [r9, #8]
    2198:	mov	r0, r7
    219c:	sub	sp, fp, #28
    21a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    21a4:	b	d28 <rb_free_rb_dlink_node@plt>
    21a8:	.word	0x00011278
    21ac:	.word	0x00000431
    21b0:	.word	0x00011224
    21b4:	.word	0x00000681
    21b8:	.word	0x00000675
    21bc:	.word	0x00000680
    21c0:	.word	0x00011154
    21c4:	.word	0x00011144
    21c8:	.word	0x0000060d
    21cc:	.word	0x00011094
    21d0:	.word	0x00011068
    21d4:	.word	0x00000259
    21d8:	.word	0x000001a8
    21dc:	.word	0x00000441
    21e0:	.word	0x00000487
    21e4:	.word	0x00000440
    21e8:	.word	0x000004b5
    21ec:	.word	0x00000523
    21f0:	.word	0x000004b8
    21f4:	.word	0x000110f4
    21f8:	.word	0x000110c8
    21fc:	.word	0x000002b9
    2200:	.word	0x00000208
    2204:	.word	0x000005e9

Disassembly of section .fini:

00002208 <_fini>:
    2208:	push	{r3, lr}
    220c:	pop	{r3, pc}
