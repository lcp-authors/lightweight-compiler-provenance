
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011f5c <.init>:
   11f5c:	push	{r3, lr}
   11f60:	bl	12084 <_start@@Base+0x3c>
   11f64:	pop	{r3, pc}

Disassembly of section .plt:

00011f68 <calloc@plt-0x14>:
   11f68:	push	{lr}		; (str lr, [sp, #-4]!)
   11f6c:	ldr	lr, [pc, #4]	; 11f78 <calloc@plt-0x4>
   11f70:	add	lr, pc, lr
   11f74:	ldr	pc, [lr, #8]!
   11f78:	andeq	r4, r1, r8, lsl #1

00011f7c <calloc@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #20, 20	; 0x14000
   11f84:	ldr	pc, [ip, #136]!	; 0x88

00011f88 <strcmp@plt>:
   11f88:	add	ip, pc, #0, 12
   11f8c:	add	ip, ip, #20, 20	; 0x14000
   11f90:	ldr	pc, [ip, #128]!	; 0x80

00011f94 <printf@plt>:
   11f94:	add	ip, pc, #0, 12
   11f98:	add	ip, ip, #20, 20	; 0x14000
   11f9c:	ldr	pc, [ip, #120]!	; 0x78

00011fa0 <free@plt>:
   11fa0:	add	ip, pc, #0, 12
   11fa4:	add	ip, ip, #20, 20	; 0x14000
   11fa8:	ldr	pc, [ip, #112]!	; 0x70

00011fac <time@plt>:
   11fac:	add	ip, pc, #0, 12
   11fb0:	add	ip, ip, #20, 20	; 0x14000
   11fb4:	ldr	pc, [ip, #104]!	; 0x68

00011fb8 <realloc@plt>:
   11fb8:	add	ip, pc, #0, 12
   11fbc:	add	ip, ip, #20, 20	; 0x14000
   11fc0:	ldr	pc, [ip, #96]!	; 0x60

00011fc4 <strcpy@plt>:
   11fc4:	add	ip, pc, #0, 12
   11fc8:	add	ip, ip, #20, 20	; 0x14000
   11fcc:	ldr	pc, [ip, #88]!	; 0x58

00011fd0 <puts@plt>:
   11fd0:	add	ip, pc, #0, 12
   11fd4:	add	ip, ip, #20, 20	; 0x14000
   11fd8:	ldr	pc, [ip, #80]!	; 0x50

00011fdc <malloc@plt>:
   11fdc:	add	ip, pc, #0, 12
   11fe0:	add	ip, ip, #20, 20	; 0x14000
   11fe4:	ldr	pc, [ip, #72]!	; 0x48

00011fe8 <__libc_start_main@plt>:
   11fe8:	add	ip, pc, #0, 12
   11fec:	add	ip, ip, #20, 20	; 0x14000
   11ff0:	ldr	pc, [ip, #64]!	; 0x40

00011ff4 <__gmon_start__@plt>:
   11ff4:	add	ip, pc, #0, 12
   11ff8:	add	ip, ip, #20, 20	; 0x14000
   11ffc:	ldr	pc, [ip, #56]!	; 0x38

00012000 <strlen@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #20, 20	; 0x14000
   12008:	ldr	pc, [ip, #48]!	; 0x30

0001200c <srand@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #20, 20	; 0x14000
   12014:	ldr	pc, [ip, #40]!	; 0x28

00012018 <snprintf@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #20, 20	; 0x14000
   12020:	ldr	pc, [ip, #32]!

00012024 <__isoc99_sscanf@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #20, 20	; 0x14000
   1202c:	ldr	pc, [ip, #24]!

00012030 <rand@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #20, 20	; 0x14000
   12038:	ldr	pc, [ip, #16]!

0001203c <abort@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #20, 20	; 0x14000
   12044:	ldr	pc, [ip, #8]!

Disassembly of section .text:

00012048 <_start@@Base>:
   12048:	mov	fp, #0
   1204c:	mov	lr, #0
   12050:	pop	{r1}		; (ldr r1, [sp], #4)
   12054:	mov	r2, sp
   12058:	push	{r2}		; (str r2, [sp, #-4]!)
   1205c:	push	{r0}		; (str r0, [sp, #-4]!)
   12060:	ldr	ip, [pc, #16]	; 12078 <_start@@Base+0x30>
   12064:	push	{ip}		; (str ip, [sp, #-4]!)
   12068:	ldr	r0, [pc, #12]	; 1207c <_start@@Base+0x34>
   1206c:	ldr	r3, [pc, #12]	; 12080 <_start@@Base+0x38>
   12070:	bl	11fe8 <__libc_start_main@plt>
   12074:	bl	1203c <abort@plt>
   12078:	muleq	r1, ip, r3
   1207c:	andeq	r2, r1, r8, lsr r1
   12080:	andeq	r5, r1, ip, lsr r3
   12084:	ldr	r3, [pc, #20]	; 120a0 <_start@@Base+0x58>
   12088:	ldr	r2, [pc, #20]	; 120a4 <_start@@Base+0x5c>
   1208c:	add	r3, pc, r3
   12090:	ldr	r2, [r3, r2]
   12094:	cmp	r2, #0
   12098:	bxeq	lr
   1209c:	b	11ff4 <__gmon_start__@plt>
   120a0:	andeq	r3, r1, ip, ror #30
   120a4:	andeq	r0, r0, r0, asr r0
   120a8:	ldr	r0, [pc, #24]	; 120c8 <_start@@Base+0x80>
   120ac:	ldr	r3, [pc, #24]	; 120cc <_start@@Base+0x84>
   120b0:	cmp	r3, r0
   120b4:	bxeq	lr
   120b8:	ldr	r3, [pc, #16]	; 120d0 <_start@@Base+0x88>
   120bc:	cmp	r3, #0
   120c0:	bxeq	lr
   120c4:	bx	r3
   120c8:	andeq	r6, r2, ip, asr r0
   120cc:	andeq	r6, r2, ip, asr r0
   120d0:	andeq	r0, r0, r0
   120d4:	ldr	r0, [pc, #36]	; 12100 <_start@@Base+0xb8>
   120d8:	ldr	r1, [pc, #36]	; 12104 <_start@@Base+0xbc>
   120dc:	sub	r1, r1, r0
   120e0:	asr	r1, r1, #2
   120e4:	add	r1, r1, r1, lsr #31
   120e8:	asrs	r1, r1, #1
   120ec:	bxeq	lr
   120f0:	ldr	r3, [pc, #16]	; 12108 <_start@@Base+0xc0>
   120f4:	cmp	r3, #0
   120f8:	bxeq	lr
   120fc:	bx	r3
   12100:	andeq	r6, r2, ip, asr r0
   12104:	andeq	r6, r2, ip, asr r0
   12108:	andeq	r0, r0, r0
   1210c:	push	{r4, lr}
   12110:	ldr	r4, [pc, #24]	; 12130 <_start@@Base+0xe8>
   12114:	ldrb	r3, [r4]
   12118:	cmp	r3, #0
   1211c:	popne	{r4, pc}
   12120:	bl	120a8 <_start@@Base+0x60>
   12124:	mov	r3, #1
   12128:	strb	r3, [r4]
   1212c:	pop	{r4, pc}
   12130:	andeq	r6, r2, ip, asr r0
   12134:	b	120d4 <_start@@Base+0x8c>

00012138 <main@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	add	fp, sp, #28
   12140:	sub	sp, sp, #348	; 0x15c
   12144:	sub	r0, fp, #92	; 0x5c
   12148:	bl	11fac <time@plt>
   1214c:	bl	1200c <srand@plt>
   12150:	bl	12030 <rand@plt>
   12154:	mov	r5, r0
   12158:	sub	r4, fp, #88	; 0x58
   1215c:	mov	r0, r4
   12160:	bl	12568 <table_init@@Base>
   12164:	movw	r0, #34079	; 0x851f
   12168:	movt	r0, #20971	; 0x51eb
   1216c:	umull	r0, r1, r5, r0
   12170:	lsr	r0, r1, #5
   12174:	mov	r1, #100	; 0x64
   12178:	mls	r0, r0, r1, r5
   1217c:	add	r5, r0, #100	; 0x64
   12180:	mov	r6, #0
   12184:	mov	r0, r4
   12188:	bl	146e0 <table_add_row@@Base>
   1218c:	add	r6, r6, #1
   12190:	cmp	r6, r5
   12194:	bcc	12184 <main@@Base+0x4c>
   12198:	sub	r8, fp, #88	; 0x58
   1219c:	mov	r0, r8
   121a0:	bl	146d8 <table_get_row_length@@Base>
   121a4:	mov	r9, r0
   121a8:	bl	12030 <rand@plt>
   121ac:	movw	r1, #52429	; 0xcccd
   121b0:	movt	r1, #52428	; 0xcccc
   121b4:	umull	r1, r2, r0, r1
   121b8:	lsr	r1, r2, #2
   121bc:	add	r1, r1, r1, lsl #2
   121c0:	sub	r0, r0, r1
   121c4:	add	r6, r0, #2
   121c8:	mov	r5, #0
   121cc:	add	r7, sp, #29
   121d0:	movw	r4, #21428	; 0x53b4
   121d4:	movt	r4, #1
   121d8:	mov	r0, r7
   121dc:	mov	r1, #255	; 0xff
   121e0:	mov	r2, r4
   121e4:	mov	r3, r5
   121e8:	bl	12018 <snprintf@plt>
   121ec:	mov	r0, r8
   121f0:	mov	r1, r7
   121f4:	mov	r2, #0
   121f8:	bl	13a40 <table_add_column@@Base>
   121fc:	add	r5, r5, #1
   12200:	cmp	r5, r6
   12204:	bcc	121d8 <main@@Base+0xa0>
   12208:	sub	r0, fp, #88	; 0x58
   1220c:	bl	139b4 <table_get_column_length@@Base>
   12210:	mov	r8, r0
   12214:	cmp	r0, #1
   12218:	blt	12278 <main@@Base+0x140>
   1221c:	mov	r4, #0
   12220:	movw	r6, #26215	; 0x6667
   12224:	movt	r6, #26214	; 0x6666
   12228:	sub	r5, fp, #88	; 0x58
   1222c:	cmp	r9, #1
   12230:	blt	1226c <main@@Base+0x134>
   12234:	mov	r7, #0
   12238:	bl	12030 <rand@plt>
   1223c:	smmul	r1, r0, r6
   12240:	asr	r2, r1, #3
   12244:	add	r1, r2, r1, lsr #31
   12248:	add	r1, r1, r1, lsl #2
   1224c:	sub	r3, r0, r1, lsl #2
   12250:	mov	r0, r5
   12254:	mov	r1, r7
   12258:	mov	r2, r4
   1225c:	bl	14b40 <table_set_int@@Base>
   12260:	add	r7, r7, #1
   12264:	cmp	r9, r7
   12268:	bne	12238 <main@@Base+0x100>
   1226c:	add	r4, r4, #1
   12270:	cmp	r4, r8
   12274:	bne	1222c <main@@Base+0xf4>
   12278:	mov	r0, r8
   1227c:	mov	r1, #4
   12280:	bl	11f7c <calloc@plt>
   12284:	mov	r5, r0
   12288:	mov	r0, r8
   1228c:	mov	r1, #4
   12290:	bl	11f7c <calloc@plt>
   12294:	mov	r6, r0
   12298:	cmp	r8, #1
   1229c:	blt	122c8 <main@@Base+0x190>
   122a0:	mov	r4, #0
   122a4:	str	r4, [r5, r4, lsl #2]
   122a8:	bl	12030 <rand@plt>
   122ac:	add	r1, r0, r0, lsr #31
   122b0:	bic	r1, r1, #1
   122b4:	sub	r0, r0, r1
   122b8:	str	r0, [r6, r4, lsl #2]
   122bc:	add	r4, r4, #1
   122c0:	cmp	r8, r4
   122c4:	bne	122a4 <main@@Base+0x16c>
   122c8:	sub	r0, fp, #88	; 0x58
   122cc:	mov	r1, r5
   122d0:	mov	r2, r6
   122d4:	mov	r3, r8
   122d8:	bl	14ef8 <table_column_sort@@Base>
   122dc:	cmp	r9, #1
   122e0:	blt	12514 <main@@Base+0x3dc>
   122e4:	str	r5, [sp, #4]
   122e8:	mvn	r0, #0
   122ec:	str	r0, [sp, #20]
   122f0:	mov	r4, #0
   122f4:	sub	r5, fp, #88	; 0x58
   122f8:	mov	r0, #0
   122fc:	str	r0, [sp, #8]
   12300:	mvn	r0, #0
   12304:	str	r0, [sp, #24]
   12308:	str	r9, [sp, #12]
   1230c:	str	r8, [sp, #16]
   12310:	cmp	r4, #0
   12314:	beq	123f8 <main@@Base+0x2c0>
   12318:	cmp	r8, #1
   1231c:	blt	123f8 <main@@Base+0x2c0>
   12320:	sub	r8, r4, #1
   12324:	mov	r9, #0
   12328:	cmp	r9, #0
   1232c:	beq	1236c <main@@Base+0x234>
   12330:	mov	r7, r9
   12334:	subs	r7, r7, #1
   12338:	blt	1236c <main@@Base+0x234>
   1233c:	mov	r0, r5
   12340:	mov	r1, r4
   12344:	mov	r2, r7
   12348:	bl	14494 <table_get_int@@Base>
   1234c:	mov	sl, r0
   12350:	mov	r0, r5
   12354:	mov	r1, r8
   12358:	mov	r2, r7
   1235c:	bl	14494 <table_get_int@@Base>
   12360:	cmp	sl, r0
   12364:	beq	12334 <main@@Base+0x1fc>
   12368:	b	123f8 <main@@Base+0x2c0>
   1236c:	mov	sl, r6
   12370:	ldr	r6, [r6, r9, lsl #2]
   12374:	mov	r0, r5
   12378:	mov	r1, r8
   1237c:	mov	r2, r9
   12380:	bl	14494 <table_get_int@@Base>
   12384:	mov	r7, r0
   12388:	mov	r0, r5
   1238c:	mov	r1, r4
   12390:	mov	r2, r9
   12394:	bl	14494 <table_get_int@@Base>
   12398:	cmp	r6, #0
   1239c:	beq	123b8 <main@@Base+0x280>
   123a0:	cmp	r7, r0
   123a4:	mov	r6, sl
   123a8:	bge	123e8 <main@@Base+0x2b0>
   123ac:	movw	r0, #21507	; 0x5403
   123b0:	movt	r0, #1
   123b4:	b	123cc <main@@Base+0x294>
   123b8:	cmp	r7, r0
   123bc:	mov	r6, sl
   123c0:	ble	123e8 <main@@Base+0x2b0>
   123c4:	movw	r0, #21435	; 0x53bb
   123c8:	movt	r0, #1
   123cc:	mov	r1, r4
   123d0:	mov	r2, r9
   123d4:	bl	11f94 <printf@plt>
   123d8:	mvn	r0, #0
   123dc:	str	r0, [sp, #8]
   123e0:	str	r4, [sp, #24]
   123e4:	str	r9, [sp, #20]
   123e8:	add	r9, r9, #1
   123ec:	ldr	r0, [sp, #16]
   123f0:	cmp	r9, r0
   123f4:	blt	12328 <main@@Base+0x1f0>
   123f8:	add	r4, r4, #1
   123fc:	ldr	r0, [sp, #12]
   12400:	cmp	r4, r0
   12404:	ldr	r8, [sp, #16]
   12408:	bne	12310 <main@@Base+0x1d8>
   1240c:	ldr	r0, [sp, #24]
   12410:	cmn	r0, #1
   12414:	beq	1251c <main@@Base+0x3e4>
   12418:	str	r6, [sp, #12]
   1241c:	sub	r4, fp, #88	; 0x58
   12420:	mov	r0, r4
   12424:	bl	146d8 <table_get_row_length@@Base>
   12428:	mov	r0, r4
   1242c:	bl	146d8 <table_get_row_length@@Base>
   12430:	mov	r4, r0
   12434:	movw	r0, #21590	; 0x5456
   12438:	movt	r0, #1
   1243c:	bl	11fd0 <puts@plt>
   12440:	str	r4, [sp, #16]
   12444:	cmp	r4, #1
   12448:	blt	12508 <main@@Base+0x3d0>
   1244c:	mov	r5, #0
   12450:	sub	r6, fp, #88	; 0x58
   12454:	mov	r4, #255	; 0xff
   12458:	add	r7, sp, #29
   1245c:	movw	r9, #21580	; 0x544c
   12460:	movt	r9, #1
   12464:	movw	sl, #21585	; 0x5451
   12468:	movt	sl, #1
   1246c:	mov	r0, r6
   12470:	bl	139b4 <table_get_column_length@@Base>
   12474:	cmp	r0, #1
   12478:	blt	124d4 <main@@Base+0x39c>
   1247c:	mov	r8, #0
   12480:	str	r4, [sp]
   12484:	mov	r0, r6
   12488:	mov	r1, r5
   1248c:	mov	r2, r8
   12490:	mov	r3, r7
   12494:	bl	12fa0 <table_cell_to_buffer@@Base>
   12498:	ldr	r0, [sp, #24]
   1249c:	cmp	r0, r5
   124a0:	ldreq	r0, [sp, #20]
   124a4:	cmpeq	r0, r8
   124a8:	beq	124b4 <main@@Base+0x37c>
   124ac:	mov	r0, sl
   124b0:	b	124b8 <main@@Base+0x380>
   124b4:	mov	r0, r9
   124b8:	mov	r1, r7
   124bc:	bl	11f94 <printf@plt>
   124c0:	add	r8, r8, #1
   124c4:	mov	r0, r6
   124c8:	bl	139b4 <table_get_column_length@@Base>
   124cc:	cmp	r8, r0
   124d0:	blt	12480 <main@@Base+0x348>
   124d4:	ldr	r0, [sp, #24]
   124d8:	cmp	r0, r5
   124dc:	bne	124ec <main@@Base+0x3b4>
   124e0:	movw	r0, #21589	; 0x5455
   124e4:	movt	r0, #1
   124e8:	b	124f4 <main@@Base+0x3bc>
   124ec:	movw	r0, #21590	; 0x5456
   124f0:	movt	r0, #1
   124f4:	bl	11fd0 <puts@plt>
   124f8:	add	r5, r5, #1
   124fc:	ldr	r0, [sp, #16]
   12500:	cmp	r5, r0
   12504:	bne	1246c <main@@Base+0x334>
   12508:	ldr	r5, [sp, #4]
   1250c:	ldr	r6, [sp, #12]
   12510:	b	12520 <main@@Base+0x3e8>
   12514:	mov	r4, #0
   12518:	b	12524 <main@@Base+0x3ec>
   1251c:	ldr	r5, [sp, #4]
   12520:	ldr	r4, [sp, #8]
   12524:	sub	r0, fp, #88	; 0x58
   12528:	bl	125a8 <table_destroy@@Base>
   1252c:	mov	r0, r5
   12530:	bl	11fa0 <free@plt>
   12534:	mov	r0, r6
   12538:	bl	11fa0 <free@plt>
   1253c:	mov	r0, r4
   12540:	sub	sp, fp, #28
   12544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012548 <table_new@@Base>:
   12548:	push	{r4, sl, fp, lr}
   1254c:	add	fp, sp, #8
   12550:	mov	r0, #56	; 0x38
   12554:	bl	11fdc <malloc@plt>
   12558:	mov	r4, r0
   1255c:	bl	12568 <table_init@@Base>
   12560:	mov	r0, r4
   12564:	pop	{r4, sl, fp, pc}

00012568 <table_init@@Base>:
   12568:	push	{r4, sl, fp, lr}
   1256c:	add	fp, sp, #8
   12570:	mov	r4, r0
   12574:	bl	125e8 <table_destroy@@Base+0x40>
   12578:	mov	r0, r4
   1257c:	bl	12600 <table_destroy@@Base+0x58>
   12580:	mov	r0, r4
   12584:	pop	{r4, sl, fp, lr}
   12588:	b	1261c <table_destroy@@Base+0x74>

0001258c <table_delete@@Base>:
   1258c:	push	{r4, sl, fp, lr}
   12590:	add	fp, sp, #8
   12594:	mov	r4, r0
   12598:	bl	125a8 <table_destroy@@Base>
   1259c:	mov	r0, r4
   125a0:	pop	{r4, sl, fp, lr}
   125a4:	b	11fa0 <free@plt>

000125a8 <table_destroy@@Base>:
   125a8:	cmp	r0, #0
   125ac:	bxeq	lr
   125b0:	push	{r4, sl, fp, lr}
   125b4:	add	fp, sp, #8
   125b8:	mov	r4, r0
   125bc:	mvn	r1, #0
   125c0:	mvn	r2, #0
   125c4:	mov	r3, #64	; 0x40
   125c8:	bl	12ea4 <table_notify@@Base>
   125cc:	mov	r0, r4
   125d0:	bl	1263c <table_destroy@@Base+0x94>
   125d4:	mov	r0, r4
   125d8:	bl	12688 <table_destroy@@Base+0xe0>
   125dc:	mov	r0, r4
   125e0:	pop	{r4, sl, fp, lr}
   125e4:	b	126d4 <table_destroy@@Base+0x12c>
   125e8:	mov	r1, #0
   125ec:	mov	r2, #10
   125f0:	str	r1, [r0]
   125f4:	stmib	r0, {r1, r2}
   125f8:	str	r1, [r0, #12]
   125fc:	bx	lr
   12600:	mov	r1, #0
   12604:	mov	r2, #20
   12608:	str	r1, [r0, #16]
   1260c:	str	r1, [r0, #20]
   12610:	str	r2, [r0, #24]
   12614:	str	r1, [r0, #28]
   12618:	bx	lr
   1261c:	mov	r1, #0
   12620:	vmov.i32	q8, #0	; 0x00000000
   12624:	mov	r2, #10
   12628:	str	r2, [r0, #48]	; 0x30
   1262c:	str	r1, [r0, #52]	; 0x34
   12630:	add	r0, r0, #32
   12634:	vst1.32	{d16-d17}, [r0]
   12638:	bx	lr
   1263c:	push	{r4, r5, r6, sl, fp, lr}
   12640:	add	fp, sp, #16
   12644:	mov	r4, r0
   12648:	bl	146d8 <table_get_row_length@@Base>
   1264c:	cmp	r0, #1
   12650:	blt	12674 <table_destroy@@Base+0xcc>
   12654:	mov	r5, r0
   12658:	mov	r6, #0
   1265c:	mov	r0, r4
   12660:	mov	r1, r6
   12664:	bl	14674 <table_row_destroy@@Base>
   12668:	add	r6, r6, #1
   1266c:	cmp	r5, r6
   12670:	bne	1265c <table_destroy@@Base+0xb4>
   12674:	ldr	r0, [r4, #16]
   12678:	cmp	r0, #0
   1267c:	popeq	{r4, r5, r6, sl, fp, pc}
   12680:	pop	{r4, r5, r6, sl, fp, lr}
   12684:	b	11fa0 <free@plt>
   12688:	push	{r4, r5, r6, sl, fp, lr}
   1268c:	add	fp, sp, #16
   12690:	mov	r4, r0
   12694:	bl	139b4 <table_get_column_length@@Base>
   12698:	cmp	r0, #1
   1269c:	blt	126c0 <table_destroy@@Base+0x118>
   126a0:	mov	r5, r0
   126a4:	mov	r6, #0
   126a8:	mov	r0, r4
   126ac:	mov	r1, r6
   126b0:	bl	13994 <table_column_destroy@@Base>
   126b4:	add	r6, r6, #1
   126b8:	cmp	r5, r6
   126bc:	bne	126a8 <table_destroy@@Base+0x100>
   126c0:	ldr	r0, [r4]
   126c4:	cmp	r0, #0
   126c8:	popeq	{r4, r5, r6, sl, fp, pc}
   126cc:	pop	{r4, r5, r6, sl, fp, lr}
   126d0:	b	11fa0 <free@plt>
   126d4:	push	{r4, sl, fp, lr}
   126d8:	add	fp, sp, #8
   126dc:	mov	r4, r0
   126e0:	ldr	r0, [r0, #36]	; 0x24
   126e4:	cmp	r0, #0
   126e8:	beq	126f0 <table_destroy@@Base+0x148>
   126ec:	bl	11fa0 <free@plt>
   126f0:	ldr	r0, [r4, #40]	; 0x28
   126f4:	cmp	r0, #0
   126f8:	beq	12700 <table_destroy@@Base+0x158>
   126fc:	bl	11fa0 <free@plt>
   12700:	ldr	r0, [r4, #44]	; 0x2c
   12704:	cmp	r0, #0
   12708:	popeq	{r4, sl, fp, pc}
   1270c:	pop	{r4, sl, fp, lr}
   12710:	b	11fa0 <free@plt>

00012714 <table_dupe@@Base>:
   12714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12718:	add	fp, sp, #28
   1271c:	sub	sp, sp, #12
   12720:	mov	r4, r0
   12724:	bl	146d8 <table_get_row_length@@Base>
   12728:	mov	r8, r0
   1272c:	mov	r0, r4
   12730:	bl	139b4 <table_get_column_length@@Base>
   12734:	mov	r6, r0
   12738:	bl	12548 <table_new@@Base>
   1273c:	mov	sl, r0
   12740:	cmp	r6, #1
   12744:	blt	12784 <table_dupe@@Base+0x70>
   12748:	mov	r5, #0
   1274c:	mov	r0, r4
   12750:	mov	r1, r5
   12754:	bl	13a18 <table_get_column_name@@Base>
   12758:	mov	r7, r0
   1275c:	mov	r0, r4
   12760:	mov	r1, r5
   12764:	bl	13a2c <table_get_column_data_type@@Base>
   12768:	mov	r2, r0
   1276c:	mov	r0, sl
   12770:	mov	r1, r7
   12774:	bl	13a40 <table_add_column@@Base>
   12778:	add	r5, r5, #1
   1277c:	cmp	r6, r5
   12780:	bne	1274c <table_dupe@@Base+0x38>
   12784:	cmp	r8, #1
   12788:	blt	12bf0 <table_dupe@@Base+0x4dc>
   1278c:	mov	r5, #0
   12790:	add	r9, sp, #8
   12794:	mov	r0, sl
   12798:	bl	146e0 <table_add_row@@Base>
   1279c:	cmp	r6, #1
   127a0:	blt	12be4 <table_dupe@@Base+0x4d0>
   127a4:	mov	r7, #0
   127a8:	mov	r0, r4
   127ac:	mov	r1, r7
   127b0:	bl	13a2c <table_get_column_data_type@@Base>
   127b4:	cmp	r0, #23
   127b8:	bhi	12bd8 <table_dupe@@Base+0x4c4>
   127bc:	add	r1, pc, #0
   127c0:	ldr	pc, [r1, r0, lsl #2]
   127c4:	andeq	r2, r1, r4, lsr #16
   127c8:	andeq	r2, r1, ip, asr #16
   127cc:	andeq	r2, r1, r4, ror r8
   127d0:	muleq	r1, ip, r8
   127d4:	andeq	r2, r1, r4, asr #17
   127d8:	andeq	r2, r1, ip, ror #17
   127dc:	andeq	r2, r1, r4, lsl r9
   127e0:	andeq	r2, r1, ip, lsr r9
   127e4:	andeq	r2, r1, r4, ror #18
   127e8:	andeq	r2, r1, ip, lsl #19
   127ec:			; <UNDEFINED> instruction: 0x000129b4
   127f0:	ldrdeq	r2, [r1], -ip
   127f4:	andeq	r2, r1, r4, lsl #20
   127f8:	andeq	r2, r1, ip, lsr #20
   127fc:	andeq	r2, r1, r4, asr sl
   12800:	andeq	r2, r1, ip, ror sl
   12804:	andeq	r2, r1, r4, lsr #21
   12808:	andeq	r2, r1, r8, asr #21
   1280c:	andeq	r2, r1, ip, ror #21
   12810:	andeq	r2, r1, r0, lsl fp
   12814:	andeq	r2, r1, r8, lsr fp
   12818:	andeq	r2, r1, r0, ror #22
   1281c:	andeq	r2, r1, r8, lsl #23
   12820:			; <UNDEFINED> instruction: 0x00012bb0
   12824:	mov	r0, r4
   12828:	mov	r1, r5
   1282c:	mov	r2, r7
   12830:	bl	14494 <table_get_int@@Base>
   12834:	mov	r3, r0
   12838:	mov	r0, sl
   1283c:	mov	r1, r5
   12840:	mov	r2, r7
   12844:	bl	14b40 <table_set_int@@Base>
   12848:	b	12bd8 <table_dupe@@Base+0x4c4>
   1284c:	mov	r0, r4
   12850:	mov	r1, r5
   12854:	mov	r2, r7
   12858:	bl	144a8 <table_get_uint@@Base>
   1285c:	mov	r3, r0
   12860:	mov	r0, sl
   12864:	mov	r1, r5
   12868:	mov	r2, r7
   1286c:	bl	14b68 <table_set_uint@@Base>
   12870:	b	12bd8 <table_dupe@@Base+0x4c4>
   12874:	mov	r0, r4
   12878:	mov	r1, r5
   1287c:	mov	r2, r7
   12880:	bl	144bc <table_get_int8@@Base>
   12884:	mov	r3, r0
   12888:	mov	r0, sl
   1288c:	mov	r1, r5
   12890:	mov	r2, r7
   12894:	bl	14b90 <table_set_int8@@Base>
   12898:	b	12bd8 <table_dupe@@Base+0x4c4>
   1289c:	mov	r0, r4
   128a0:	mov	r1, r5
   128a4:	mov	r2, r7
   128a8:	bl	144d0 <table_get_uint8@@Base>
   128ac:	mov	r3, r0
   128b0:	mov	r0, sl
   128b4:	mov	r1, r5
   128b8:	mov	r2, r7
   128bc:	bl	14bb8 <table_set_uint8@@Base>
   128c0:	b	12bd8 <table_dupe@@Base+0x4c4>
   128c4:	mov	r0, r4
   128c8:	mov	r1, r5
   128cc:	mov	r2, r7
   128d0:	bl	144e4 <table_get_int16@@Base>
   128d4:	mov	r3, r0
   128d8:	mov	r0, sl
   128dc:	mov	r1, r5
   128e0:	mov	r2, r7
   128e4:	bl	14be0 <table_set_int16@@Base>
   128e8:	b	12bd8 <table_dupe@@Base+0x4c4>
   128ec:	mov	r0, r4
   128f0:	mov	r1, r5
   128f4:	mov	r2, r7
   128f8:	bl	144f8 <table_get_uint16@@Base>
   128fc:	mov	r3, r0
   12900:	mov	r0, sl
   12904:	mov	r1, r5
   12908:	mov	r2, r7
   1290c:	bl	14c08 <table_set_uint16@@Base>
   12910:	b	12bd8 <table_dupe@@Base+0x4c4>
   12914:	mov	r0, r4
   12918:	mov	r1, r5
   1291c:	mov	r2, r7
   12920:	bl	1450c <table_get_int32@@Base>
   12924:	mov	r3, r0
   12928:	mov	r0, sl
   1292c:	mov	r1, r5
   12930:	mov	r2, r7
   12934:	bl	14c30 <table_set_int32@@Base>
   12938:	b	12bd8 <table_dupe@@Base+0x4c4>
   1293c:	mov	r0, r4
   12940:	mov	r1, r5
   12944:	mov	r2, r7
   12948:	bl	14520 <table_get_uint32@@Base>
   1294c:	mov	r3, r0
   12950:	mov	r0, sl
   12954:	mov	r1, r5
   12958:	mov	r2, r7
   1295c:	bl	14c58 <table_set_uint32@@Base>
   12960:	b	12bd8 <table_dupe@@Base+0x4c4>
   12964:	mov	r0, r4
   12968:	mov	r1, r5
   1296c:	mov	r2, r7
   12970:	bl	14534 <table_get_int64@@Base>
   12974:	stm	sp, {r0, r1}
   12978:	mov	r0, sl
   1297c:	mov	r1, r5
   12980:	mov	r2, r7
   12984:	bl	14c80 <table_set_int64@@Base>
   12988:	b	12bd8 <table_dupe@@Base+0x4c4>
   1298c:	mov	r0, r4
   12990:	mov	r1, r5
   12994:	mov	r2, r7
   12998:	bl	14548 <table_get_uint64@@Base>
   1299c:	stm	sp, {r0, r1}
   129a0:	mov	r0, sl
   129a4:	mov	r1, r5
   129a8:	mov	r2, r7
   129ac:	bl	14cb4 <table_set_uint64@@Base>
   129b0:	b	12bd8 <table_dupe@@Base+0x4c4>
   129b4:	mov	r0, r4
   129b8:	mov	r1, r5
   129bc:	mov	r2, r7
   129c0:	bl	1455c <table_get_short@@Base>
   129c4:	mov	r3, r0
   129c8:	mov	r0, sl
   129cc:	mov	r1, r5
   129d0:	mov	r2, r7
   129d4:	bl	14ce8 <table_set_short@@Base>
   129d8:	b	12bd8 <table_dupe@@Base+0x4c4>
   129dc:	mov	r0, r4
   129e0:	mov	r1, r5
   129e4:	mov	r2, r7
   129e8:	bl	14570 <table_get_ushort@@Base>
   129ec:	mov	r3, r0
   129f0:	mov	r0, sl
   129f4:	mov	r1, r5
   129f8:	mov	r2, r7
   129fc:	bl	14d10 <table_set_ushort@@Base>
   12a00:	b	12bd8 <table_dupe@@Base+0x4c4>
   12a04:	mov	r0, r4
   12a08:	mov	r1, r5
   12a0c:	mov	r2, r7
   12a10:	bl	14584 <table_get_long@@Base>
   12a14:	mov	r3, r0
   12a18:	mov	r0, sl
   12a1c:	mov	r1, r5
   12a20:	mov	r2, r7
   12a24:	bl	14d38 <table_set_long@@Base>
   12a28:	b	12bd8 <table_dupe@@Base+0x4c4>
   12a2c:	mov	r0, r4
   12a30:	mov	r1, r5
   12a34:	mov	r2, r7
   12a38:	bl	14598 <table_get_ulong@@Base>
   12a3c:	mov	r3, r0
   12a40:	mov	r0, sl
   12a44:	mov	r1, r5
   12a48:	mov	r2, r7
   12a4c:	bl	14d60 <table_set_ulong@@Base>
   12a50:	b	12bd8 <table_dupe@@Base+0x4c4>
   12a54:	mov	r0, r4
   12a58:	mov	r1, r5
   12a5c:	mov	r2, r7
   12a60:	bl	145ac <table_get_llong@@Base>
   12a64:	stm	sp, {r0, r1}
   12a68:	mov	r0, sl
   12a6c:	mov	r1, r5
   12a70:	mov	r2, r7
   12a74:	bl	14d88 <table_set_llong@@Base>
   12a78:	b	12bd8 <table_dupe@@Base+0x4c4>
   12a7c:	mov	r0, r4
   12a80:	mov	r1, r5
   12a84:	mov	r2, r7
   12a88:	bl	145c0 <table_get_ullong@@Base>
   12a8c:	stm	sp, {r0, r1}
   12a90:	mov	r0, sl
   12a94:	mov	r1, r5
   12a98:	mov	r2, r7
   12a9c:	bl	14dbc <table_set_ullong@@Base>
   12aa0:	b	12bd8 <table_dupe@@Base+0x4c4>
   12aa4:	mov	r0, r4
   12aa8:	mov	r1, r5
   12aac:	mov	r2, r7
   12ab0:	bl	145d4 <table_get_float@@Base>
   12ab4:	mov	r0, sl
   12ab8:	mov	r1, r5
   12abc:	mov	r2, r7
   12ac0:	bl	14df0 <table_set_float@@Base>
   12ac4:	b	12bd8 <table_dupe@@Base+0x4c4>
   12ac8:	mov	r0, r4
   12acc:	mov	r1, r5
   12ad0:	mov	r2, r7
   12ad4:	bl	145e8 <table_get_double@@Base>
   12ad8:	mov	r0, sl
   12adc:	mov	r1, r5
   12ae0:	mov	r2, r7
   12ae4:	bl	14e18 <table_set_double@@Base>
   12ae8:	b	12bd8 <table_dupe@@Base+0x4c4>
   12aec:	mov	r0, r4
   12af0:	mov	r1, r5
   12af4:	mov	r2, r7
   12af8:	bl	145fc <table_get_ldouble@@Base>
   12afc:	mov	r0, sl
   12b00:	mov	r1, r5
   12b04:	mov	r2, r7
   12b08:	bl	14e40 <table_set_ldouble@@Base>
   12b0c:	b	12bd8 <table_dupe@@Base+0x4c4>
   12b10:	mov	r0, r4
   12b14:	mov	r1, r5
   12b18:	mov	r2, r7
   12b1c:	bl	14610 <table_get_char@@Base>
   12b20:	mov	r3, r0
   12b24:	mov	r0, sl
   12b28:	mov	r1, r5
   12b2c:	mov	r2, r7
   12b30:	bl	14e88 <table_set_char@@Base>
   12b34:	b	12bd8 <table_dupe@@Base+0x4c4>
   12b38:	mov	r0, r4
   12b3c:	mov	r1, r5
   12b40:	mov	r2, r7
   12b44:	bl	14624 <table_get_uchar@@Base>
   12b48:	mov	r3, r0
   12b4c:	mov	r0, sl
   12b50:	mov	r1, r5
   12b54:	mov	r2, r7
   12b58:	bl	14eb0 <table_set_uchar@@Base>
   12b5c:	b	12bd8 <table_dupe@@Base+0x4c4>
   12b60:	mov	r0, r4
   12b64:	mov	r1, r5
   12b68:	mov	r2, r7
   12b6c:	bl	14638 <table_get_string@@Base>
   12b70:	mov	r3, r0
   12b74:	mov	r0, sl
   12b78:	mov	r1, r5
   12b7c:	mov	r2, r7
   12b80:	bl	14e68 <table_set_string@@Base>
   12b84:	b	12bd8 <table_dupe@@Base+0x4c4>
   12b88:	mov	r0, r4
   12b8c:	mov	r1, r5
   12b90:	mov	r2, r7
   12b94:	bl	14480 <table_get_bool@@Base>
   12b98:	mov	r3, r0
   12b9c:	mov	r0, sl
   12ba0:	mov	r1, r5
   12ba4:	mov	r2, r7
   12ba8:	bl	14b18 <table_set_bool@@Base>
   12bac:	b	12bd8 <table_dupe@@Base+0x4c4>
   12bb0:	mov	r0, r4
   12bb4:	mov	r1, r5
   12bb8:	mov	r2, r7
   12bbc:	bl	1463c <table_get_ptr@@Base>
   12bc0:	str	r0, [sp, #8]
   12bc4:	mov	r0, sl
   12bc8:	mov	r1, r5
   12bcc:	mov	r2, r7
   12bd0:	mov	r3, r9
   12bd4:	bl	14ed8 <table_set_ptr@@Base>
   12bd8:	add	r7, r7, #1
   12bdc:	cmp	r6, r7
   12be0:	bne	127a8 <table_dupe@@Base+0x94>
   12be4:	add	r5, r5, #1
   12be8:	cmp	r5, r8
   12bec:	bne	12794 <table_dupe@@Base+0x80>
   12bf0:	mov	r0, sl
   12bf4:	sub	sp, fp, #28
   12bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012bfc <table_get_major_version@@Base>:
   12bfc:	mov	r0, #0
   12c00:	bx	lr

00012c04 <table_get_minor_version@@Base>:
   12c04:	mov	r0, #0
   12c08:	bx	lr

00012c0c <table_get_patch_version@@Base>:
   12c0c:	mov	r0, #0
   12c10:	bx	lr

00012c14 <table_get_version@@Base>:
   12c14:	movw	r0, #21584	; 0x5450
   12c18:	movt	r0, #1
   12c1c:	bx	lr

00012c20 <table_get_callback_length@@Base>:
   12c20:	ldr	r0, [r0, #32]
   12c24:	bx	lr

00012c28 <table_register_callback@@Base>:
   12c28:	push	{r4, r5, r6, r7, fp, lr}
   12c2c:	add	fp, sp, #16
   12c30:	sub	sp, sp, #8
   12c34:	mov	r5, r3
   12c38:	mov	r6, r2
   12c3c:	mov	r7, r1
   12c40:	mov	r4, r0
   12c44:	bl	12cbc <table_register_callback@@Base+0x94>
   12c48:	cmp	r0, #1
   12c4c:	blt	12c68 <table_register_callback@@Base+0x40>
   12c50:	ldr	r1, [r4, #44]	; 0x2c
   12c54:	ldr	r2, [r1, r0, lsl #2]
   12c58:	orr	r2, r2, r5
   12c5c:	str	r2, [r1, r0, lsl #2]
   12c60:	sub	sp, fp, #16
   12c64:	pop	{r4, r5, r6, r7, fp, pc}
   12c68:	ldr	r0, [r4, #32]
   12c6c:	ldr	r1, [r4, #48]	; 0x30
   12c70:	udiv	r2, r0, r1
   12c74:	mls	r0, r2, r1, r0
   12c78:	cmp	r0, #0
   12c7c:	bne	12c88 <table_register_callback@@Base+0x60>
   12c80:	mov	r0, r4
   12c84:	bl	12d14 <table_register_callback@@Base+0xec>
   12c88:	mov	r0, r4
   12c8c:	bl	12c20 <table_get_callback_length@@Base>
   12c90:	mov	r1, r0
   12c94:	str	r5, [sp]
   12c98:	mov	r0, r4
   12c9c:	mov	r2, r7
   12ca0:	mov	r3, r6
   12ca4:	bl	12d6c <table_register_callback@@Base+0x144>
   12ca8:	ldr	r0, [r4, #32]
   12cac:	add	r0, r0, #1
   12cb0:	str	r0, [r4, #32]
   12cb4:	sub	sp, fp, #16
   12cb8:	pop	{r4, r5, r6, r7, fp, pc}
   12cbc:	push	{r4, sl, fp, lr}
   12cc0:	add	fp, sp, #8
   12cc4:	mov	ip, r0
   12cc8:	ldr	r3, [r0, #32]
   12ccc:	mvn	r0, #0
   12cd0:	cmp	r3, #1
   12cd4:	poplt	{r4, sl, fp, pc}
   12cd8:	ldr	lr, [ip, #36]	; 0x24
   12cdc:	mov	r3, #0
   12ce0:	ldr	r4, [lr, r3, lsl #2]
   12ce4:	cmp	r4, r1
   12ce8:	bne	12d00 <table_register_callback@@Base+0xd8>
   12cec:	ldr	r4, [ip, #40]	; 0x28
   12cf0:	ldr	r4, [r4, r3, lsl #2]
   12cf4:	cmp	r4, r2
   12cf8:	moveq	r0, r3
   12cfc:	popeq	{r4, sl, fp, pc}
   12d00:	add	r3, r3, #1
   12d04:	ldr	r4, [ip, #32]
   12d08:	cmp	r3, r4
   12d0c:	blt	12ce0 <table_register_callback@@Base+0xb8>
   12d10:	pop	{r4, sl, fp, pc}
   12d14:	push	{r4, sl, fp, lr}
   12d18:	add	fp, sp, #8
   12d1c:	mov	r4, r0
   12d20:	ldr	r0, [r0, #36]	; 0x24
   12d24:	ldr	r1, [r4, #48]	; 0x30
   12d28:	ldr	r2, [r4, #52]	; 0x34
   12d2c:	add	r1, r2, r1
   12d30:	str	r1, [r4, #52]	; 0x34
   12d34:	lsl	r1, r1, #2
   12d38:	bl	11fb8 <realloc@plt>
   12d3c:	str	r0, [r4, #36]	; 0x24
   12d40:	ldr	r0, [r4, #40]	; 0x28
   12d44:	ldr	r1, [r4, #52]	; 0x34
   12d48:	lsl	r1, r1, #2
   12d4c:	bl	11fb8 <realloc@plt>
   12d50:	str	r0, [r4, #40]	; 0x28
   12d54:	ldr	r0, [r4, #44]	; 0x2c
   12d58:	ldr	r1, [r4, #52]	; 0x34
   12d5c:	lsl	r1, r1, #2
   12d60:	bl	11fb8 <realloc@plt>
   12d64:	str	r0, [r4, #44]	; 0x2c
   12d68:	pop	{r4, sl, fp, pc}
   12d6c:	ldr	ip, [r0, #36]	; 0x24
   12d70:	str	r2, [ip, r1, lsl #2]
   12d74:	ldr	r2, [r0, #40]	; 0x28
   12d78:	str	r3, [r2, r1, lsl #2]
   12d7c:	ldr	r0, [r0, #44]	; 0x2c
   12d80:	ldr	r2, [sp]
   12d84:	str	r2, [r0, r1, lsl #2]
   12d88:	bx	lr

00012d8c <table_unregister_callback@@Base>:
   12d8c:	push	{r4, sl, fp, lr}
   12d90:	add	fp, sp, #8
   12d94:	mov	r4, r0
   12d98:	bl	12cbc <table_register_callback@@Base+0x94>
   12d9c:	cmn	r0, #1
   12da0:	popeq	{r4, sl, fp, pc}
   12da4:	ldr	r1, [r4, #32]
   12da8:	sub	r2, r1, #1
   12dac:	cmp	r0, r2
   12db0:	bge	12df8 <table_unregister_callback@@Base+0x6c>
   12db4:	mov	r1, #4
   12db8:	add	r1, r1, r0, lsl #2
   12dbc:	ldr	r2, [r4, #36]	; 0x24
   12dc0:	ldr	r3, [r2, r1]!
   12dc4:	str	r3, [r2, #-4]
   12dc8:	ldr	r2, [r4, #40]	; 0x28
   12dcc:	ldr	r3, [r2, r1]!
   12dd0:	str	r3, [r2, #-4]
   12dd4:	ldr	r2, [r4, #44]	; 0x2c
   12dd8:	ldr	r3, [r2, r1]!
   12ddc:	str	r3, [r2, #-4]
   12de0:	add	r1, r1, #4
   12de4:	add	r0, r0, #1
   12de8:	ldr	r2, [r4, #32]
   12dec:	sub	r2, r2, #1
   12df0:	cmp	r0, r2
   12df4:	blt	12dbc <table_unregister_callback@@Base+0x30>
   12df8:	str	r2, [r4, #32]
   12dfc:	ldr	r0, [r4, #48]	; 0x30
   12e00:	udiv	r1, r2, r0
   12e04:	mls	r0, r1, r0, r2
   12e08:	cmp	r0, #0
   12e0c:	beq	12e14 <table_unregister_callback@@Base+0x88>
   12e10:	pop	{r4, sl, fp, pc}
   12e14:	mov	r0, r4
   12e18:	pop	{r4, sl, fp, lr}
   12e1c:	b	12e20 <table_unregister_callback@@Base+0x94>
   12e20:	push	{r4, sl, fp, lr}
   12e24:	add	fp, sp, #8
   12e28:	mov	r4, r0
   12e2c:	ldr	r0, [r0, #36]	; 0x24
   12e30:	ldr	r1, [r4, #48]	; 0x30
   12e34:	ldr	r2, [r4, #52]	; 0x34
   12e38:	subs	r1, r2, r1
   12e3c:	str	r1, [r4, #52]	; 0x34
   12e40:	beq	12e7c <table_unregister_callback@@Base+0xf0>
   12e44:	lsl	r1, r1, #2
   12e48:	bl	11fb8 <realloc@plt>
   12e4c:	str	r0, [r4, #36]	; 0x24
   12e50:	ldr	r0, [r4, #40]	; 0x28
   12e54:	ldr	r1, [r4, #52]	; 0x34
   12e58:	lsl	r1, r1, #2
   12e5c:	bl	11fb8 <realloc@plt>
   12e60:	str	r0, [r4, #40]	; 0x28
   12e64:	ldr	r0, [r4, #44]	; 0x2c
   12e68:	ldr	r1, [r4, #52]	; 0x34
   12e6c:	lsl	r1, r1, #2
   12e70:	bl	11fb8 <realloc@plt>
   12e74:	str	r0, [r4, #44]	; 0x2c
   12e78:	pop	{r4, sl, fp, pc}
   12e7c:	bl	11fa0 <free@plt>
   12e80:	ldr	r0, [r4, #40]	; 0x28
   12e84:	bl	11fa0 <free@plt>
   12e88:	ldr	r0, [r4, #44]	; 0x2c
   12e8c:	bl	11fa0 <free@plt>
   12e90:	mov	r0, #0
   12e94:	str	r0, [r4, #36]	; 0x24
   12e98:	str	r0, [r4, #40]	; 0x28
   12e9c:	str	r0, [r4, #44]	; 0x2c
   12ea0:	pop	{r4, sl, fp, pc}

00012ea4 <table_notify@@Base>:
   12ea4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ea8:	add	fp, sp, #24
   12eac:	sub	sp, sp, #8
   12eb0:	mov	r7, r0
   12eb4:	ldr	r0, [r0, #32]
   12eb8:	cmp	r0, #1
   12ebc:	blt	12f18 <table_notify@@Base+0x74>
   12ec0:	mov	r4, r3
   12ec4:	mov	r8, r2
   12ec8:	mov	r9, r1
   12ecc:	mov	r5, #0
   12ed0:	ldr	r0, [r7, #44]	; 0x2c
   12ed4:	ldr	r0, [r0, r5, lsl #2]
   12ed8:	tst	r0, r4
   12edc:	beq	12f08 <table_notify@@Base+0x64>
   12ee0:	ldr	r0, [r7, #36]	; 0x24
   12ee4:	ldr	r1, [r7, #40]	; 0x28
   12ee8:	ldr	r6, [r0, r5, lsl #2]
   12eec:	ldr	r0, [r1, r5, lsl #2]
   12ef0:	str	r0, [sp]
   12ef4:	mov	r0, r7
   12ef8:	mov	r1, r9
   12efc:	mov	r2, r8
   12f00:	mov	r3, r4
   12f04:	blx	r6
   12f08:	ldr	r0, [r7, #32]
   12f0c:	add	r5, r5, #1
   12f10:	cmp	r5, r0
   12f14:	blt	12ed0 <table_notify@@Base+0x2c>
   12f18:	sub	sp, fp, #24
   12f1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f20 <table_cell_init@@Base>:
   12f20:	push	{fp, lr}
   12f24:	mov	fp, sp
   12f28:	bl	12f38 <table_get_cell_ptr@@Base>
   12f2c:	mov	r1, #0
   12f30:	str	r1, [r0]
   12f34:	pop	{fp, pc}

00012f38 <table_get_cell_ptr@@Base>:
   12f38:	push	{r4, sl, fp, lr}
   12f3c:	add	fp, sp, #8
   12f40:	mov	r4, r2
   12f44:	bl	14668 <table_get_row_ptr@@Base>
   12f48:	ldr	r0, [r0]
   12f4c:	add	r0, r0, r4, lsl #2
   12f50:	pop	{r4, sl, fp, pc}

00012f54 <table_cell_destroy@@Base>:
   12f54:	push	{r4, r5, r6, sl, fp, lr}
   12f58:	add	fp, sp, #16
   12f5c:	mov	r4, r2
   12f60:	mov	r5, r1
   12f64:	mov	r6, r0
   12f68:	mov	r1, r2
   12f6c:	bl	13a2c <table_get_column_data_type@@Base>
   12f70:	cmp	r0, #23
   12f74:	popeq	{r4, r5, r6, sl, fp, pc}
   12f78:	mov	r0, r6
   12f7c:	mov	r1, r5
   12f80:	mov	r2, r4
   12f84:	bl	12f38 <table_get_cell_ptr@@Base>
   12f88:	ldr	r0, [r0]
   12f8c:	cmp	r0, #0
   12f90:	beq	12f9c <table_cell_destroy@@Base+0x48>
   12f94:	pop	{r4, r5, r6, sl, fp, lr}
   12f98:	b	11fa0 <free@plt>
   12f9c:	pop	{r4, r5, r6, sl, fp, pc}

00012fa0 <table_cell_to_buffer@@Base>:
   12fa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fa4:	add	fp, sp, #24
   12fa8:	sub	sp, sp, #8
   12fac:	mov	r5, r3
   12fb0:	mov	r6, r2
   12fb4:	mov	r7, r1
   12fb8:	mov	r4, r0
   12fbc:	mov	r1, r2
   12fc0:	bl	13a2c <table_get_column_data_type@@Base>
   12fc4:	cmp	r0, #23
   12fc8:	bhi	132b8 <table_cell_to_buffer@@Base+0x318>
   12fcc:	ldr	r8, [fp, #8]
   12fd0:	add	r1, pc, #0
   12fd4:	ldr	pc, [r1, r0, lsl #2]
   12fd8:	andeq	r3, r1, r8, lsr r0
   12fdc:	andeq	r3, r1, ip, asr #32
   12fe0:	andeq	r3, r1, r0, rrx
   12fe4:	andeq	r3, r1, r4, ror r0
   12fe8:	andeq	r3, r1, r8, lsl #1
   12fec:	muleq	r1, ip, r0
   12ff0:	strheq	r3, [r1], -r0
   12ff4:	andeq	r3, r1, r4, asr #1
   12ff8:	andeq	r3, r1, r4, ror #1
   12ffc:	strdeq	r3, [r1], -r8
   13000:	andeq	r3, r1, ip, lsl #2
   13004:	andeq	r3, r1, ip, lsr #2
   13008:	andeq	r3, r1, ip, asr #2
   1300c:	andeq	r3, r1, ip, ror #2
   13010:	andeq	r3, r1, ip, lsl #3
   13014:	andeq	r3, r1, ip, lsr #3
   13018:	andeq	r3, r1, ip, asr #3
   1301c:	strdeq	r3, [r1], -r0
   13020:	andeq	r3, r1, r0, lsl r2
   13024:	andeq	r3, r1, ip, lsr r2
   13028:	andeq	r3, r1, r0, asr r2
   1302c:	andeq	r3, r1, r0, ror r2
   13030:	muleq	r1, r0, r2
   13034:	andeq	r3, r1, r4, asr #5
   13038:	mov	r0, r4
   1303c:	mov	r1, r7
   13040:	mov	r2, r6
   13044:	bl	14494 <table_get_int@@Base>
   13048:	b	132a0 <table_cell_to_buffer@@Base+0x300>
   1304c:	mov	r0, r4
   13050:	mov	r1, r7
   13054:	mov	r2, r6
   13058:	bl	144a8 <table_get_uint@@Base>
   1305c:	b	130d4 <table_cell_to_buffer@@Base+0x134>
   13060:	mov	r0, r4
   13064:	mov	r1, r7
   13068:	mov	r2, r6
   1306c:	bl	144bc <table_get_int8@@Base>
   13070:	b	132a0 <table_cell_to_buffer@@Base+0x300>
   13074:	mov	r0, r4
   13078:	mov	r1, r7
   1307c:	mov	r2, r6
   13080:	bl	144d0 <table_get_uint8@@Base>
   13084:	b	130d4 <table_cell_to_buffer@@Base+0x134>
   13088:	mov	r0, r4
   1308c:	mov	r1, r7
   13090:	mov	r2, r6
   13094:	bl	144e4 <table_get_int16@@Base>
   13098:	b	132a0 <table_cell_to_buffer@@Base+0x300>
   1309c:	mov	r0, r4
   130a0:	mov	r1, r7
   130a4:	mov	r2, r6
   130a8:	bl	144f8 <table_get_uint16@@Base>
   130ac:	b	130d4 <table_cell_to_buffer@@Base+0x134>
   130b0:	mov	r0, r4
   130b4:	mov	r1, r7
   130b8:	mov	r2, r6
   130bc:	bl	1450c <table_get_int32@@Base>
   130c0:	b	132a0 <table_cell_to_buffer@@Base+0x300>
   130c4:	mov	r0, r4
   130c8:	mov	r1, r7
   130cc:	mov	r2, r6
   130d0:	bl	14520 <table_get_uint32@@Base>
   130d4:	mov	r3, r0
   130d8:	movw	r2, #21592	; 0x5458
   130dc:	movt	r2, #1
   130e0:	b	132ac <table_cell_to_buffer@@Base+0x30c>
   130e4:	mov	r0, r4
   130e8:	mov	r1, r7
   130ec:	mov	r2, r6
   130f0:	bl	14534 <table_get_int64@@Base>
   130f4:	b	1319c <table_cell_to_buffer@@Base+0x1fc>
   130f8:	mov	r0, r4
   130fc:	mov	r1, r7
   13100:	mov	r2, r6
   13104:	bl	14548 <table_get_uint64@@Base>
   13108:	b	131bc <table_cell_to_buffer@@Base+0x21c>
   1310c:	mov	r0, r4
   13110:	mov	r1, r7
   13114:	mov	r2, r6
   13118:	bl	1455c <table_get_short@@Base>
   1311c:	mov	r3, r0
   13120:	movw	r2, #21605	; 0x5465
   13124:	movt	r2, #1
   13128:	b	132ac <table_cell_to_buffer@@Base+0x30c>
   1312c:	mov	r0, r4
   13130:	mov	r1, r7
   13134:	mov	r2, r6
   13138:	bl	14570 <table_get_ushort@@Base>
   1313c:	mov	r3, r0
   13140:	movw	r2, #21609	; 0x5469
   13144:	movt	r2, #1
   13148:	b	132ac <table_cell_to_buffer@@Base+0x30c>
   1314c:	mov	r0, r4
   13150:	mov	r1, r7
   13154:	mov	r2, r6
   13158:	bl	14584 <table_get_long@@Base>
   1315c:	mov	r3, r0
   13160:	movw	r2, #21613	; 0x546d
   13164:	movt	r2, #1
   13168:	b	132ac <table_cell_to_buffer@@Base+0x30c>
   1316c:	mov	r0, r4
   13170:	mov	r1, r7
   13174:	mov	r2, r6
   13178:	bl	14598 <table_get_ulong@@Base>
   1317c:	mov	r3, r0
   13180:	movw	r2, #21617	; 0x5471
   13184:	movt	r2, #1
   13188:	b	132ac <table_cell_to_buffer@@Base+0x30c>
   1318c:	mov	r0, r4
   13190:	mov	r1, r7
   13194:	mov	r2, r6
   13198:	bl	145ac <table_get_llong@@Base>
   1319c:	stm	sp, {r0, r1}
   131a0:	movw	r2, #21595	; 0x545b
   131a4:	movt	r2, #1
   131a8:	b	1322c <table_cell_to_buffer@@Base+0x28c>
   131ac:	mov	r0, r4
   131b0:	mov	r1, r7
   131b4:	mov	r2, r6
   131b8:	bl	145c0 <table_get_ullong@@Base>
   131bc:	stm	sp, {r0, r1}
   131c0:	movw	r2, #21600	; 0x5460
   131c4:	movt	r2, #1
   131c8:	b	1322c <table_cell_to_buffer@@Base+0x28c>
   131cc:	mov	r0, r4
   131d0:	mov	r1, r7
   131d4:	mov	r2, r6
   131d8:	bl	145d4 <table_get_float@@Base>
   131dc:	vcvt.f64.f32	d16, s0
   131e0:	vstr	d16, [sp]
   131e4:	movw	r2, #21624	; 0x5478
   131e8:	movt	r2, #1
   131ec:	b	1322c <table_cell_to_buffer@@Base+0x28c>
   131f0:	mov	r0, r4
   131f4:	mov	r1, r7
   131f8:	mov	r2, r6
   131fc:	bl	145e8 <table_get_double@@Base>
   13200:	vstr	d0, [sp]
   13204:	movw	r2, #21627	; 0x547b
   13208:	movt	r2, #1
   1320c:	b	1322c <table_cell_to_buffer@@Base+0x28c>
   13210:	mov	r0, r4
   13214:	mov	r1, r7
   13218:	mov	r2, r6
   1321c:	bl	145fc <table_get_ldouble@@Base>
   13220:	vstr	d0, [sp]
   13224:	movw	r2, #21631	; 0x547f
   13228:	movt	r2, #1
   1322c:	mov	r0, r5
   13230:	mov	r1, r8
   13234:	bl	12018 <snprintf@plt>
   13238:	b	132b8 <table_cell_to_buffer@@Base+0x318>
   1323c:	mov	r0, r4
   13240:	mov	r1, r7
   13244:	mov	r2, r6
   13248:	bl	14610 <table_get_char@@Base>
   1324c:	b	13260 <table_cell_to_buffer@@Base+0x2c0>
   13250:	mov	r0, r4
   13254:	mov	r1, r7
   13258:	mov	r2, r6
   1325c:	bl	14624 <table_get_uchar@@Base>
   13260:	mov	r3, r0
   13264:	movw	r2, #21635	; 0x5483
   13268:	movt	r2, #1
   1326c:	b	132ac <table_cell_to_buffer@@Base+0x30c>
   13270:	mov	r0, r4
   13274:	mov	r1, r7
   13278:	mov	r2, r6
   1327c:	bl	14638 <table_get_string@@Base>
   13280:	mov	r3, r0
   13284:	movw	r2, #21621	; 0x5475
   13288:	movt	r2, #1
   1328c:	b	132ac <table_cell_to_buffer@@Base+0x30c>
   13290:	mov	r0, r4
   13294:	mov	r1, r7
   13298:	mov	r2, r6
   1329c:	bl	14480 <table_get_bool@@Base>
   132a0:	mov	r3, r0
   132a4:	movw	r2, #21432	; 0x53b8
   132a8:	movt	r2, #1
   132ac:	mov	r0, r5
   132b0:	mov	r1, r8
   132b4:	bl	12018 <snprintf@plt>
   132b8:	mov	r0, #0
   132bc:	sub	sp, fp, #24
   132c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132c4:	mov	r0, r4
   132c8:	mov	r1, r7
   132cc:	mov	r2, r6
   132d0:	bl	1463c <table_get_ptr@@Base>
   132d4:	mov	r3, r0
   132d8:	movw	r2, #21638	; 0x5486
   132dc:	movt	r2, #1
   132e0:	b	132ac <table_cell_to_buffer@@Base+0x30c>

000132e4 <table_cell_from_buffer@@Base>:
   132e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132e8:	add	fp, sp, #24
   132ec:	sub	sp, sp, #264	; 0x108
   132f0:	mov	r7, r3
   132f4:	mov	r4, r2
   132f8:	mov	r5, r1
   132fc:	mov	r6, r0
   13300:	mov	r1, r2
   13304:	bl	13a2c <table_get_column_data_type@@Base>
   13308:	cmp	r0, #23
   1330c:	bhi	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13310:	add	r1, pc, #0
   13314:	ldr	pc, [r1, r0, lsl #2]
   13318:	andeq	r3, r1, r8, ror r3
   1331c:			; <UNDEFINED> instruction: 0x000133b0
   13320:	andeq	r3, r1, r8, ror #7
   13324:	andeq	r3, r1, r0, lsr #8
   13328:	andeq	r3, r1, r8, asr r4
   1332c:	muleq	r1, r0, r4
   13330:	andeq	r3, r1, r8, asr #9
   13334:	andeq	r3, r1, r0, lsl #10
   13338:	andeq	r3, r1, r8, lsr r5
   1333c:	andeq	r3, r1, r8, ror r5
   13340:			; <UNDEFINED> instruction: 0x000135b8
   13344:	strdeq	r3, [r1], -r0
   13348:	andeq	r3, r1, r8, lsr #12
   1334c:	andeq	r3, r1, r0, ror #12
   13350:	muleq	r1, r8, r6
   13354:	ldrdeq	r3, [r1], -r8
   13358:	andeq	r3, r1, r8, lsl r7
   1335c:	andeq	r3, r1, r0, asr r7
   13360:	andeq	r3, r1, r8, lsl #15
   13364:	andeq	r3, r1, r0, asr #15
   13368:	strdeq	r3, [r1], -r8
   1336c:	andeq	r3, r1, r0, lsr r8
   13370:	andeq	r3, r1, r8, ror #16
   13374:	andeq	r3, r1, ip, lsr #17
   13378:	movw	r1, #21432	; 0x53b8
   1337c:	movt	r1, #1
   13380:	add	r2, sp, #8
   13384:	mov	r0, r7
   13388:	bl	12024 <__isoc99_sscanf@plt>
   1338c:	mvn	r7, #0
   13390:	cmp	r0, #1
   13394:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13398:	ldr	r3, [sp, #8]
   1339c:	mov	r0, r6
   133a0:	mov	r1, r5
   133a4:	mov	r2, r4
   133a8:	bl	14b40 <table_set_int@@Base>
   133ac:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   133b0:	movw	r1, #21592	; 0x5458
   133b4:	movt	r1, #1
   133b8:	add	r2, sp, #8
   133bc:	mov	r0, r7
   133c0:	bl	12024 <__isoc99_sscanf@plt>
   133c4:	mvn	r7, #0
   133c8:	cmp	r0, #1
   133cc:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   133d0:	ldr	r3, [sp, #8]
   133d4:	mov	r0, r6
   133d8:	mov	r1, r5
   133dc:	mov	r2, r4
   133e0:	bl	14b68 <table_set_uint@@Base>
   133e4:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   133e8:	movw	r1, #21641	; 0x5489
   133ec:	movt	r1, #1
   133f0:	add	r2, sp, #8
   133f4:	mov	r0, r7
   133f8:	bl	12024 <__isoc99_sscanf@plt>
   133fc:	mvn	r7, #0
   13400:	cmp	r0, #1
   13404:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13408:	ldrsb	r3, [sp, #8]
   1340c:	mov	r0, r6
   13410:	mov	r1, r5
   13414:	mov	r2, r4
   13418:	bl	14b90 <table_set_int8@@Base>
   1341c:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13420:	movw	r1, #21646	; 0x548e
   13424:	movt	r1, #1
   13428:	add	r2, sp, #8
   1342c:	mov	r0, r7
   13430:	bl	12024 <__isoc99_sscanf@plt>
   13434:	mvn	r7, #0
   13438:	cmp	r0, #1
   1343c:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13440:	ldrb	r3, [sp, #8]
   13444:	mov	r0, r6
   13448:	mov	r1, r5
   1344c:	mov	r2, r4
   13450:	bl	14bb8 <table_set_uint8@@Base>
   13454:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13458:	movw	r1, #21605	; 0x5465
   1345c:	movt	r1, #1
   13460:	add	r2, sp, #8
   13464:	mov	r0, r7
   13468:	bl	12024 <__isoc99_sscanf@plt>
   1346c:	mvn	r7, #0
   13470:	cmp	r0, #1
   13474:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13478:	ldrsh	r3, [sp, #8]
   1347c:	mov	r0, r6
   13480:	mov	r1, r5
   13484:	mov	r2, r4
   13488:	bl	14be0 <table_set_int16@@Base>
   1348c:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13490:	movw	r1, #21609	; 0x5469
   13494:	movt	r1, #1
   13498:	add	r2, sp, #8
   1349c:	mov	r0, r7
   134a0:	bl	12024 <__isoc99_sscanf@plt>
   134a4:	mvn	r7, #0
   134a8:	cmp	r0, #1
   134ac:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   134b0:	ldrh	r3, [sp, #8]
   134b4:	mov	r0, r6
   134b8:	mov	r1, r5
   134bc:	mov	r2, r4
   134c0:	bl	14c08 <table_set_uint16@@Base>
   134c4:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   134c8:	movw	r1, #21432	; 0x53b8
   134cc:	movt	r1, #1
   134d0:	add	r2, sp, #8
   134d4:	mov	r0, r7
   134d8:	bl	12024 <__isoc99_sscanf@plt>
   134dc:	mvn	r7, #0
   134e0:	cmp	r0, #1
   134e4:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   134e8:	ldr	r3, [sp, #8]
   134ec:	mov	r0, r6
   134f0:	mov	r1, r5
   134f4:	mov	r2, r4
   134f8:	bl	14c30 <table_set_int32@@Base>
   134fc:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13500:	movw	r1, #21592	; 0x5458
   13504:	movt	r1, #1
   13508:	add	r2, sp, #8
   1350c:	mov	r0, r7
   13510:	bl	12024 <__isoc99_sscanf@plt>
   13514:	mvn	r7, #0
   13518:	cmp	r0, #1
   1351c:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13520:	ldr	r3, [sp, #8]
   13524:	mov	r0, r6
   13528:	mov	r1, r5
   1352c:	mov	r2, r4
   13530:	bl	14c58 <table_set_uint32@@Base>
   13534:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13538:	movw	r1, #21595	; 0x545b
   1353c:	movt	r1, #1
   13540:	add	r2, sp, #8
   13544:	mov	r0, r7
   13548:	bl	12024 <__isoc99_sscanf@plt>
   1354c:	mvn	r7, #0
   13550:	cmp	r0, #1
   13554:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13558:	ldr	r0, [sp, #8]
   1355c:	ldr	r1, [sp, #12]
   13560:	stm	sp, {r0, r1}
   13564:	mov	r0, r6
   13568:	mov	r1, r5
   1356c:	mov	r2, r4
   13570:	bl	14c80 <table_set_int64@@Base>
   13574:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13578:	movw	r1, #21600	; 0x5460
   1357c:	movt	r1, #1
   13580:	add	r2, sp, #8
   13584:	mov	r0, r7
   13588:	bl	12024 <__isoc99_sscanf@plt>
   1358c:	mvn	r7, #0
   13590:	cmp	r0, #1
   13594:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13598:	ldr	r0, [sp, #8]
   1359c:	ldr	r1, [sp, #12]
   135a0:	stm	sp, {r0, r1}
   135a4:	mov	r0, r6
   135a8:	mov	r1, r5
   135ac:	mov	r2, r4
   135b0:	bl	14cb4 <table_set_uint64@@Base>
   135b4:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   135b8:	movw	r1, #21605	; 0x5465
   135bc:	movt	r1, #1
   135c0:	add	r2, sp, #8
   135c4:	mov	r0, r7
   135c8:	bl	12024 <__isoc99_sscanf@plt>
   135cc:	mvn	r7, #0
   135d0:	cmp	r0, #1
   135d4:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   135d8:	ldrsh	r3, [sp, #8]
   135dc:	mov	r0, r6
   135e0:	mov	r1, r5
   135e4:	mov	r2, r4
   135e8:	bl	14ce8 <table_set_short@@Base>
   135ec:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   135f0:	movw	r1, #21609	; 0x5469
   135f4:	movt	r1, #1
   135f8:	add	r2, sp, #8
   135fc:	mov	r0, r7
   13600:	bl	12024 <__isoc99_sscanf@plt>
   13604:	mvn	r7, #0
   13608:	cmp	r0, #1
   1360c:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13610:	ldrh	r3, [sp, #8]
   13614:	mov	r0, r6
   13618:	mov	r1, r5
   1361c:	mov	r2, r4
   13620:	bl	14d10 <table_set_ushort@@Base>
   13624:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13628:	movw	r1, #21613	; 0x546d
   1362c:	movt	r1, #1
   13630:	add	r2, sp, #8
   13634:	mov	r0, r7
   13638:	bl	12024 <__isoc99_sscanf@plt>
   1363c:	mvn	r7, #0
   13640:	cmp	r0, #1
   13644:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13648:	ldr	r3, [sp, #8]
   1364c:	mov	r0, r6
   13650:	mov	r1, r5
   13654:	mov	r2, r4
   13658:	bl	14d38 <table_set_long@@Base>
   1365c:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13660:	movw	r1, #21617	; 0x5471
   13664:	movt	r1, #1
   13668:	add	r2, sp, #8
   1366c:	mov	r0, r7
   13670:	bl	12024 <__isoc99_sscanf@plt>
   13674:	mvn	r7, #0
   13678:	cmp	r0, #1
   1367c:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13680:	ldr	r3, [sp, #8]
   13684:	mov	r0, r6
   13688:	mov	r1, r5
   1368c:	mov	r2, r4
   13690:	bl	14d60 <table_set_ulong@@Base>
   13694:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13698:	movw	r1, #21595	; 0x545b
   1369c:	movt	r1, #1
   136a0:	add	r2, sp, #8
   136a4:	mov	r0, r7
   136a8:	bl	12024 <__isoc99_sscanf@plt>
   136ac:	mvn	r7, #0
   136b0:	cmp	r0, #1
   136b4:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   136b8:	ldr	r0, [sp, #8]
   136bc:	ldr	r1, [sp, #12]
   136c0:	stm	sp, {r0, r1}
   136c4:	mov	r0, r6
   136c8:	mov	r1, r5
   136cc:	mov	r2, r4
   136d0:	bl	14d88 <table_set_llong@@Base>
   136d4:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   136d8:	movw	r1, #21600	; 0x5460
   136dc:	movt	r1, #1
   136e0:	add	r2, sp, #8
   136e4:	mov	r0, r7
   136e8:	bl	12024 <__isoc99_sscanf@plt>
   136ec:	mvn	r7, #0
   136f0:	cmp	r0, #1
   136f4:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   136f8:	ldr	r0, [sp, #8]
   136fc:	ldr	r1, [sp, #12]
   13700:	stm	sp, {r0, r1}
   13704:	mov	r0, r6
   13708:	mov	r1, r5
   1370c:	mov	r2, r4
   13710:	bl	14dbc <table_set_ullong@@Base>
   13714:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13718:	movw	r1, #21624	; 0x5478
   1371c:	movt	r1, #1
   13720:	add	r2, sp, #8
   13724:	mov	r0, r7
   13728:	bl	12024 <__isoc99_sscanf@plt>
   1372c:	mvn	r7, #0
   13730:	cmp	r0, #1
   13734:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13738:	vldr	s0, [sp, #8]
   1373c:	mov	r0, r6
   13740:	mov	r1, r5
   13744:	mov	r2, r4
   13748:	bl	14df0 <table_set_float@@Base>
   1374c:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13750:	movw	r1, #21627	; 0x547b
   13754:	movt	r1, #1
   13758:	add	r2, sp, #8
   1375c:	mov	r0, r7
   13760:	bl	12024 <__isoc99_sscanf@plt>
   13764:	mvn	r7, #0
   13768:	cmp	r0, #1
   1376c:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13770:	vldr	d0, [sp, #8]
   13774:	mov	r0, r6
   13778:	mov	r1, r5
   1377c:	mov	r2, r4
   13780:	bl	14e18 <table_set_double@@Base>
   13784:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13788:	movw	r1, #21631	; 0x547f
   1378c:	movt	r1, #1
   13790:	add	r2, sp, #8
   13794:	mov	r0, r7
   13798:	bl	12024 <__isoc99_sscanf@plt>
   1379c:	mvn	r7, #0
   137a0:	cmp	r0, #1
   137a4:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   137a8:	vldr	d0, [sp, #8]
   137ac:	mov	r0, r6
   137b0:	mov	r1, r5
   137b4:	mov	r2, r4
   137b8:	bl	14e40 <table_set_ldouble@@Base>
   137bc:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   137c0:	movw	r1, #21635	; 0x5483
   137c4:	movt	r1, #1
   137c8:	add	r2, sp, #8
   137cc:	mov	r0, r7
   137d0:	bl	12024 <__isoc99_sscanf@plt>
   137d4:	mvn	r7, #0
   137d8:	cmp	r0, #1
   137dc:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   137e0:	ldrb	r3, [sp, #8]
   137e4:	mov	r0, r6
   137e8:	mov	r1, r5
   137ec:	mov	r2, r4
   137f0:	bl	14e88 <table_set_char@@Base>
   137f4:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   137f8:	movw	r1, #21635	; 0x5483
   137fc:	movt	r1, #1
   13800:	add	r2, sp, #8
   13804:	mov	r0, r7
   13808:	bl	12024 <__isoc99_sscanf@plt>
   1380c:	mvn	r7, #0
   13810:	cmp	r0, #1
   13814:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13818:	ldrb	r3, [sp, #8]
   1381c:	mov	r0, r6
   13820:	mov	r1, r5
   13824:	mov	r2, r4
   13828:	bl	14eb0 <table_set_uchar@@Base>
   1382c:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13830:	movw	r1, #21621	; 0x5475
   13834:	movt	r1, #1
   13838:	add	r2, sp, #8
   1383c:	mov	r0, r7
   13840:	bl	12024 <__isoc99_sscanf@plt>
   13844:	mvn	r7, #0
   13848:	cmp	r0, #1
   1384c:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13850:	add	r3, sp, #8
   13854:	mov	r0, r6
   13858:	mov	r1, r5
   1385c:	mov	r2, r4
   13860:	bl	14e68 <table_set_string@@Base>
   13864:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   13868:	movw	r1, #21432	; 0x53b8
   1386c:	movt	r1, #1
   13870:	add	r2, sp, #8
   13874:	mov	r0, r7
   13878:	bl	12024 <__isoc99_sscanf@plt>
   1387c:	mvn	r7, #0
   13880:	cmp	r0, #1
   13884:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   13888:	ldr	r0, [sp, #8]
   1388c:	cmp	r0, #0
   13890:	beq	138f0 <table_cell_from_buffer@@Base+0x60c>
   13894:	mov	r0, r6
   13898:	mov	r1, r5
   1389c:	mov	r2, r4
   138a0:	mov	r3, #1
   138a4:	bl	14b18 <table_set_bool@@Base>
   138a8:	b	138e0 <table_cell_from_buffer@@Base+0x5fc>
   138ac:	movw	r1, #21638	; 0x5486
   138b0:	movt	r1, #1
   138b4:	add	r2, sp, #8
   138b8:	mov	r0, r7
   138bc:	bl	12024 <__isoc99_sscanf@plt>
   138c0:	mvn	r7, #0
   138c4:	cmp	r0, #1
   138c8:	bne	138e4 <table_cell_from_buffer@@Base+0x600>
   138cc:	ldr	r3, [sp, #8]
   138d0:	mov	r0, r6
   138d4:	mov	r1, r5
   138d8:	mov	r2, r4
   138dc:	bl	14ed8 <table_set_ptr@@Base>
   138e0:	mov	r7, #0
   138e4:	mov	r0, r7
   138e8:	sub	sp, fp, #24
   138ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   138f0:	mov	r7, #0
   138f4:	mov	r0, r6
   138f8:	mov	r1, r5
   138fc:	mov	r2, r4
   13900:	mov	r3, #0
   13904:	bl	14b18 <table_set_bool@@Base>
   13908:	b	138e4 <table_cell_from_buffer@@Base+0x600>

0001390c <table_cell_nullify@@Base>:
   1390c:	push	{r4, sl, fp, lr}
   13910:	add	fp, sp, #8
   13914:	bl	12f38 <table_get_cell_ptr@@Base>
   13918:	mov	r4, r0
   1391c:	ldr	r0, [r0]
   13920:	cmp	r0, #0
   13924:	beq	13934 <table_cell_nullify@@Base+0x28>
   13928:	bl	11fa0 <free@plt>
   1392c:	mov	r0, #0
   13930:	str	r0, [r4]
   13934:	mov	r0, #0
   13938:	pop	{r4, sl, fp, pc}

0001393c <table_column_init@@Base>:
   1393c:	push	{r4, r5, r6, r7, fp, lr}
   13940:	add	fp, sp, #16
   13944:	mov	r4, r3
   13948:	mov	r5, r2
   1394c:	bl	13984 <table_get_col_ptr@@Base>
   13950:	mov	r6, r0
   13954:	mov	r0, r5
   13958:	bl	12000 <strlen@plt>
   1395c:	add	r0, r0, #1
   13960:	bl	11fdc <malloc@plt>
   13964:	str	r0, [r6]
   13968:	ldr	r7, [fp, #8]
   1396c:	cmp	r0, #0
   13970:	beq	1397c <table_column_init@@Base+0x40>
   13974:	mov	r1, r5
   13978:	bl	11fc4 <strcpy@plt>
   1397c:	stmib	r6, {r4, r7}
   13980:	pop	{r4, r5, r6, r7, fp, pc}

00013984 <table_get_col_ptr@@Base>:
   13984:	ldr	r0, [r0]
   13988:	add	r1, r1, r1, lsl #1
   1398c:	add	r0, r0, r1, lsl #2
   13990:	bx	lr

00013994 <table_column_destroy@@Base>:
   13994:	push	{fp, lr}
   13998:	mov	fp, sp
   1399c:	bl	13984 <table_get_col_ptr@@Base>
   139a0:	ldr	r0, [r0]
   139a4:	cmp	r0, #0
   139a8:	popeq	{fp, pc}
   139ac:	pop	{fp, lr}
   139b0:	b	11fa0 <free@plt>

000139b4 <table_get_column_length@@Base>:
   139b4:	ldr	r0, [r0, #4]
   139b8:	bx	lr

000139bc <table_get_column@@Base>:
   139bc:	push	{r4, r5, r6, r7, fp, lr}
   139c0:	add	fp, sp, #16
   139c4:	mov	r6, r1
   139c8:	mov	r7, r0
   139cc:	bl	139b4 <table_get_column_length@@Base>
   139d0:	mov	r4, r0
   139d4:	mov	r5, #0
   139d8:	cmp	r0, #1
   139dc:	blt	13a08 <table_get_column@@Base+0x4c>
   139e0:	mov	r0, r7
   139e4:	mov	r1, r5
   139e8:	bl	13a18 <table_get_column_name@@Base>
   139ec:	mov	r1, r6
   139f0:	bl	11f88 <strcmp@plt>
   139f4:	cmp	r0, #0
   139f8:	beq	13a08 <table_get_column@@Base+0x4c>
   139fc:	add	r5, r5, #1
   13a00:	cmp	r5, r4
   13a04:	blt	139e0 <table_get_column@@Base+0x24>
   13a08:	cmp	r5, r4
   13a0c:	mvneq	r5, #0
   13a10:	mov	r0, r5
   13a14:	pop	{r4, r5, r6, r7, fp, pc}

00013a18 <table_get_column_name@@Base>:
   13a18:	push	{fp, lr}
   13a1c:	mov	fp, sp
   13a20:	bl	13984 <table_get_col_ptr@@Base>
   13a24:	ldr	r0, [r0]
   13a28:	pop	{fp, pc}

00013a2c <table_get_column_data_type@@Base>:
   13a2c:	push	{fp, lr}
   13a30:	mov	fp, sp
   13a34:	bl	13984 <table_get_col_ptr@@Base>
   13a38:	ldr	r0, [r0, #4]
   13a3c:	pop	{fp, pc}

00013a40 <table_add_column@@Base>:
   13a40:	push	{r4, r5, r6, sl, fp, lr}
   13a44:	add	fp, sp, #16
   13a48:	mov	r5, r2
   13a4c:	mov	r6, r1
   13a50:	mov	r4, r0
   13a54:	bl	139b4 <table_get_column_length@@Base>
   13a58:	ldr	r1, [r4, #8]
   13a5c:	udiv	r2, r0, r1
   13a60:	mls	r0, r2, r1, r0
   13a64:	cmp	r0, #0
   13a68:	bne	13a74 <table_add_column@@Base+0x34>
   13a6c:	mov	r0, r4
   13a70:	bl	13ab0 <table_add_column@@Base+0x70>
   13a74:	mov	r0, r4
   13a78:	mov	r1, r6
   13a7c:	mov	r2, r5
   13a80:	bl	13b2c <table_add_column@@Base+0xec>
   13a84:	mov	r0, r4
   13a88:	bl	139b4 <table_get_column_length@@Base>
   13a8c:	mov	r2, r0
   13a90:	mov	r0, r4
   13a94:	mvn	r1, #0
   13a98:	mov	r3, #8
   13a9c:	bl	12ea4 <table_notify@@Base>
   13aa0:	ldr	r0, [r4, #4]
   13aa4:	add	r1, r0, #1
   13aa8:	str	r1, [r4, #4]
   13aac:	pop	{r4, r5, r6, sl, fp, pc}
   13ab0:	push	{r4, r5, r6, r7, fp, lr}
   13ab4:	add	fp, sp, #16
   13ab8:	mov	r4, r0
   13abc:	ldr	r0, [r0]
   13ac0:	ldr	r1, [r4, #8]
   13ac4:	ldr	r2, [r4, #12]
   13ac8:	add	r1, r2, r1
   13acc:	str	r1, [r4, #12]
   13ad0:	add	r1, r1, r1, lsl #1
   13ad4:	lsl	r1, r1, #2
   13ad8:	bl	11fb8 <realloc@plt>
   13adc:	str	r0, [r4]
   13ae0:	mov	r0, r4
   13ae4:	bl	146d8 <table_get_row_length@@Base>
   13ae8:	cmp	r0, #1
   13aec:	poplt	{r4, r5, r6, r7, fp, pc}
   13af0:	mov	r5, r0
   13af4:	mov	r6, #0
   13af8:	mov	r0, r4
   13afc:	mov	r1, r6
   13b00:	bl	14668 <table_get_row_ptr@@Base>
   13b04:	mov	r7, r0
   13b08:	ldr	r0, [r0]
   13b0c:	ldr	r1, [r4, #12]
   13b10:	lsl	r1, r1, #2
   13b14:	bl	11fb8 <realloc@plt>
   13b18:	str	r0, [r7]
   13b1c:	add	r6, r6, #1
   13b20:	cmp	r5, r6
   13b24:	bne	13af8 <table_add_column@@Base+0xb8>
   13b28:	pop	{r4, r5, r6, r7, fp, pc}
   13b2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b30:	add	fp, sp, #24
   13b34:	sub	sp, sp, #8
   13b38:	mov	r7, r2
   13b3c:	mov	r8, r1
   13b40:	mov	r4, r0
   13b44:	bl	146d8 <table_get_row_length@@Base>
   13b48:	mov	r5, r0
   13b4c:	mov	r0, r4
   13b50:	bl	139b4 <table_get_column_length@@Base>
   13b54:	mov	r6, r0
   13b58:	mov	r0, r7
   13b5c:	bl	14454 <table_get_default_compare_function_for_data_type@@Base>
   13b60:	str	r0, [sp]
   13b64:	mov	r0, r4
   13b68:	mov	r1, r6
   13b6c:	mov	r2, r8
   13b70:	mov	r3, r7
   13b74:	bl	1393c <table_column_init@@Base>
   13b78:	cmp	r5, #1
   13b7c:	blt	13ba0 <table_add_column@@Base+0x160>
   13b80:	mov	r7, #0
   13b84:	mov	r0, r4
   13b88:	mov	r1, r7
   13b8c:	mov	r2, r6
   13b90:	bl	12f20 <table_cell_init@@Base>
   13b94:	add	r7, r7, #1
   13b98:	cmp	r5, r7
   13b9c:	bne	13b84 <table_add_column@@Base+0x144>
   13ba0:	sub	sp, fp, #24
   13ba4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013ba8 <table_remove_column@@Base>:
   13ba8:	push	{r4, r5, fp, lr}
   13bac:	add	fp, sp, #8
   13bb0:	mov	r4, r1
   13bb4:	mov	r5, r0
   13bb8:	bl	13c08 <table_remove_column@@Base+0x60>
   13bbc:	ldr	r0, [r5, #4]
   13bc0:	sub	r0, r0, #1
   13bc4:	str	r0, [r5, #4]
   13bc8:	mov	r0, r5
   13bcc:	bl	139b4 <table_get_column_length@@Base>
   13bd0:	ldr	r1, [r5, #8]
   13bd4:	udiv	r2, r0, r1
   13bd8:	mls	r0, r2, r1, r0
   13bdc:	cmp	r0, #0
   13be0:	bne	13bec <table_remove_column@@Base+0x44>
   13be4:	mov	r0, r5
   13be8:	bl	13ccc <table_remove_column@@Base+0x124>
   13bec:	mov	r0, r5
   13bf0:	mvn	r1, #0
   13bf4:	mov	r2, r4
   13bf8:	mov	r3, #16
   13bfc:	bl	12ea4 <table_notify@@Base>
   13c00:	mov	r0, #0
   13c04:	pop	{r4, r5, fp, pc}
   13c08:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c0c:	add	fp, sp, #24
   13c10:	mov	r4, r1
   13c14:	mov	r5, r0
   13c18:	bl	13994 <table_column_destroy@@Base>
   13c1c:	mov	r0, r5
   13c20:	bl	139b4 <table_get_column_length@@Base>
   13c24:	sub	r6, r0, #1
   13c28:	cmp	r6, r4
   13c2c:	ble	13c60 <table_remove_column@@Base+0xb8>
   13c30:	sub	r0, r6, r4
   13c34:	add	r1, r4, r4, lsl #1
   13c38:	lsl	r1, r1, #2
   13c3c:	ldr	r2, [r5]
   13c40:	add	r2, r2, r1
   13c44:	vldr	d16, [r2, #12]
   13c48:	ldr	r3, [r2, #20]
   13c4c:	str	r3, [r2, #8]
   13c50:	vstr	d16, [r2]
   13c54:	subs	r0, r0, #1
   13c58:	add	r1, r1, #12
   13c5c:	bne	13c3c <table_remove_column@@Base+0x94>
   13c60:	mov	r0, r5
   13c64:	bl	146d8 <table_get_row_length@@Base>
   13c68:	cmp	r0, #1
   13c6c:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c70:	mov	r8, r0
   13c74:	mov	r7, #0
   13c78:	mov	r0, r5
   13c7c:	mov	r1, r7
   13c80:	mov	r2, r4
   13c84:	bl	12f54 <table_cell_destroy@@Base>
   13c88:	mov	r0, r5
   13c8c:	mov	r1, r7
   13c90:	bl	14668 <table_get_row_ptr@@Base>
   13c94:	cmp	r6, r4
   13c98:	ble	13cbc <table_remove_column@@Base+0x114>
   13c9c:	mov	r1, r4
   13ca0:	ldr	r2, [r0]
   13ca4:	add	r3, r2, r1, lsl #2
   13ca8:	ldr	r3, [r3, #4]
   13cac:	str	r3, [r2, r1, lsl #2]
   13cb0:	add	r1, r1, #1
   13cb4:	cmp	r6, r1
   13cb8:	bne	13ca0 <table_remove_column@@Base+0xf8>
   13cbc:	add	r7, r7, #1
   13cc0:	cmp	r7, r8
   13cc4:	bne	13c78 <table_remove_column@@Base+0xd0>
   13cc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ccc:	push	{r4, r5, r6, r7, fp, lr}
   13cd0:	add	fp, sp, #16
   13cd4:	mov	r4, r0
   13cd8:	ldr	r0, [r0]
   13cdc:	ldr	r1, [r4, #8]
   13ce0:	ldr	r2, [r4, #12]
   13ce4:	sub	r1, r2, r1
   13ce8:	str	r1, [r4, #12]
   13cec:	add	r1, r1, r1, lsl #1
   13cf0:	lsl	r1, r1, #2
   13cf4:	bl	11fb8 <realloc@plt>
   13cf8:	str	r0, [r4]
   13cfc:	mov	r0, r4
   13d00:	bl	146d8 <table_get_row_length@@Base>
   13d04:	cmp	r0, #1
   13d08:	poplt	{r4, r5, r6, r7, fp, pc}
   13d0c:	mov	r5, r0
   13d10:	mov	r6, #0
   13d14:	mov	r0, r4
   13d18:	mov	r1, r6
   13d1c:	bl	14668 <table_get_row_ptr@@Base>
   13d20:	mov	r7, r0
   13d24:	ldr	r0, [r0]
   13d28:	ldr	r1, [r4, #12]
   13d2c:	lsl	r1, r1, #2
   13d30:	bl	11fb8 <realloc@plt>
   13d34:	str	r0, [r7]
   13d38:	add	r6, r6, #1
   13d3c:	cmp	r5, r6
   13d40:	bne	13d14 <table_remove_column@@Base+0x16c>
   13d44:	pop	{r4, r5, r6, r7, fp, pc}

00013d48 <table_get_column_compare_function@@Base>:
   13d48:	push	{fp, lr}
   13d4c:	mov	fp, sp
   13d50:	bl	13984 <table_get_col_ptr@@Base>
   13d54:	ldr	r0, [r0, #8]
   13d58:	pop	{fp, pc}

00013d5c <table_set_column_compare_function@@Base>:
   13d5c:	push	{r4, sl, fp, lr}
   13d60:	add	fp, sp, #8
   13d64:	mov	r4, r2
   13d68:	bl	13984 <table_get_col_ptr@@Base>
   13d6c:	str	r4, [r0, #8]
   13d70:	pop	{r4, sl, fp, pc}

00013d74 <table_compare_bool@@Base>:
   13d74:	cmp	r0, #0
   13d78:	beq	13dac <table_compare_bool@@Base+0x38>
   13d7c:	cmp	r1, #0
   13d80:	moveq	r1, #1
   13d84:	moveq	r0, r1
   13d88:	bxeq	lr
   13d8c:	ldrb	r2, [r1]
   13d90:	ldrb	r0, [r0]
   13d94:	mov	r1, #0
   13d98:	cmp	r0, r2
   13d9c:	mvncc	r1, #0
   13da0:	movwhi	r1, #1
   13da4:	mov	r0, r1
   13da8:	bx	lr
   13dac:	cmp	r1, #0
   13db0:	mvnne	r1, #0
   13db4:	mov	r0, r1
   13db8:	bx	lr

00013dbc <table_compare_int@@Base>:
   13dbc:	cmp	r0, #0
   13dc0:	beq	13df4 <table_compare_int@@Base+0x38>
   13dc4:	cmp	r1, #0
   13dc8:	moveq	r1, #1
   13dcc:	moveq	r0, r1
   13dd0:	bxeq	lr
   13dd4:	ldr	r2, [r1]
   13dd8:	ldr	r0, [r0]
   13ddc:	mov	r1, #0
   13de0:	cmp	r0, r2
   13de4:	mvnlt	r1, #0
   13de8:	movwgt	r1, #1
   13dec:	mov	r0, r1
   13df0:	bx	lr
   13df4:	cmp	r1, #0
   13df8:	mvnne	r1, #0
   13dfc:	mov	r0, r1
   13e00:	bx	lr

00013e04 <table_compare_uint@@Base>:
   13e04:	cmp	r0, #0
   13e08:	beq	13e3c <table_compare_uint@@Base+0x38>
   13e0c:	cmp	r1, #0
   13e10:	moveq	r1, #1
   13e14:	moveq	r0, r1
   13e18:	bxeq	lr
   13e1c:	ldr	r2, [r1]
   13e20:	ldr	r0, [r0]
   13e24:	mov	r1, #0
   13e28:	cmp	r0, r2
   13e2c:	mvncc	r1, #0
   13e30:	movwhi	r1, #1
   13e34:	mov	r0, r1
   13e38:	bx	lr
   13e3c:	cmp	r1, #0
   13e40:	mvnne	r1, #0
   13e44:	mov	r0, r1
   13e48:	bx	lr

00013e4c <table_compare_int8@@Base>:
   13e4c:	cmp	r0, #0
   13e50:	beq	13e84 <table_compare_int8@@Base+0x38>
   13e54:	cmp	r1, #0
   13e58:	moveq	r1, #1
   13e5c:	moveq	r0, r1
   13e60:	bxeq	lr
   13e64:	ldrsb	r2, [r1]
   13e68:	ldrsb	r0, [r0]
   13e6c:	mov	r1, #0
   13e70:	cmp	r0, r2
   13e74:	mvnlt	r1, #0
   13e78:	movwgt	r1, #1
   13e7c:	mov	r0, r1
   13e80:	bx	lr
   13e84:	cmp	r1, #0
   13e88:	mvnne	r1, #0
   13e8c:	mov	r0, r1
   13e90:	bx	lr

00013e94 <table_compare_uint8@@Base>:
   13e94:	cmp	r0, #0
   13e98:	beq	13ecc <table_compare_uint8@@Base+0x38>
   13e9c:	cmp	r1, #0
   13ea0:	moveq	r1, #1
   13ea4:	moveq	r0, r1
   13ea8:	bxeq	lr
   13eac:	ldrb	r2, [r1]
   13eb0:	ldrb	r0, [r0]
   13eb4:	mov	r1, #0
   13eb8:	cmp	r0, r2
   13ebc:	mvncc	r1, #0
   13ec0:	movwhi	r1, #1
   13ec4:	mov	r0, r1
   13ec8:	bx	lr
   13ecc:	cmp	r1, #0
   13ed0:	mvnne	r1, #0
   13ed4:	mov	r0, r1
   13ed8:	bx	lr

00013edc <table_compare_int16@@Base>:
   13edc:	cmp	r0, #0
   13ee0:	beq	13f14 <table_compare_int16@@Base+0x38>
   13ee4:	cmp	r1, #0
   13ee8:	moveq	r1, #1
   13eec:	moveq	r0, r1
   13ef0:	bxeq	lr
   13ef4:	ldrsh	r2, [r1]
   13ef8:	ldrsh	r0, [r0]
   13efc:	mov	r1, #0
   13f00:	cmp	r0, r2
   13f04:	mvnlt	r1, #0
   13f08:	movwgt	r1, #1
   13f0c:	mov	r0, r1
   13f10:	bx	lr
   13f14:	cmp	r1, #0
   13f18:	mvnne	r1, #0
   13f1c:	mov	r0, r1
   13f20:	bx	lr

00013f24 <table_compare_uint16@@Base>:
   13f24:	cmp	r0, #0
   13f28:	beq	13f5c <table_compare_uint16@@Base+0x38>
   13f2c:	cmp	r1, #0
   13f30:	moveq	r1, #1
   13f34:	moveq	r0, r1
   13f38:	bxeq	lr
   13f3c:	ldrh	r2, [r1]
   13f40:	ldrh	r0, [r0]
   13f44:	mov	r1, #0
   13f48:	cmp	r0, r2
   13f4c:	mvncc	r1, #0
   13f50:	movwhi	r1, #1
   13f54:	mov	r0, r1
   13f58:	bx	lr
   13f5c:	cmp	r1, #0
   13f60:	mvnne	r1, #0
   13f64:	mov	r0, r1
   13f68:	bx	lr

00013f6c <table_compare_int32@@Base>:
   13f6c:	cmp	r0, #0
   13f70:	beq	13fa4 <table_compare_int32@@Base+0x38>
   13f74:	cmp	r1, #0
   13f78:	moveq	r1, #1
   13f7c:	moveq	r0, r1
   13f80:	bxeq	lr
   13f84:	ldr	r2, [r1]
   13f88:	ldr	r0, [r0]
   13f8c:	mov	r1, #0
   13f90:	cmp	r0, r2
   13f94:	mvnlt	r1, #0
   13f98:	movwgt	r1, #1
   13f9c:	mov	r0, r1
   13fa0:	bx	lr
   13fa4:	cmp	r1, #0
   13fa8:	mvnne	r1, #0
   13fac:	mov	r0, r1
   13fb0:	bx	lr

00013fb4 <table_compare_uint32@@Base>:
   13fb4:	cmp	r0, #0
   13fb8:	beq	13fec <table_compare_uint32@@Base+0x38>
   13fbc:	cmp	r1, #0
   13fc0:	moveq	r1, #1
   13fc4:	moveq	r0, r1
   13fc8:	bxeq	lr
   13fcc:	ldr	r2, [r1]
   13fd0:	ldr	r0, [r0]
   13fd4:	mov	r1, #0
   13fd8:	cmp	r0, r2
   13fdc:	mvncc	r1, #0
   13fe0:	movwhi	r1, #1
   13fe4:	mov	r0, r1
   13fe8:	bx	lr
   13fec:	cmp	r1, #0
   13ff0:	mvnne	r1, #0
   13ff4:	mov	r0, r1
   13ff8:	bx	lr

00013ffc <table_compare_int64@@Base>:
   13ffc:	cmp	r0, #0
   14000:	beq	14054 <table_compare_int64@@Base+0x58>
   14004:	cmp	r1, #0
   14008:	moveq	r1, #1
   1400c:	moveq	r0, r1
   14010:	bxeq	lr
   14014:	push	{r5, r7, fp, lr}
   14018:	add	fp, sp, #8
   1401c:	ldm	r1, {r2, r7}
   14020:	ldm	r0, {r0, r5}
   14024:	mov	r1, #0
   14028:	subs	r3, r0, r2
   1402c:	sbcs	r3, r5, r7
   14030:	movwlt	r1, #1
   14034:	cmp	r1, #0
   14038:	mvnne	r1, #0
   1403c:	subs	r0, r2, r0
   14040:	sbcs	r0, r7, r5
   14044:	movwlt	r1, #1
   14048:	pop	{r5, r7, fp, lr}
   1404c:	mov	r0, r1
   14050:	bx	lr
   14054:	cmp	r1, #0
   14058:	mvnne	r1, #0
   1405c:	mov	r0, r1
   14060:	bx	lr

00014064 <table_compare_uint64@@Base>:
   14064:	cmp	r0, #0
   14068:	beq	140bc <table_compare_uint64@@Base+0x58>
   1406c:	cmp	r1, #0
   14070:	moveq	r1, #1
   14074:	moveq	r0, r1
   14078:	bxeq	lr
   1407c:	push	{r5, r7, fp, lr}
   14080:	add	fp, sp, #8
   14084:	ldm	r1, {r2, r7}
   14088:	ldm	r0, {r0, r5}
   1408c:	mov	r1, #0
   14090:	subs	r3, r0, r2
   14094:	sbcs	r3, r5, r7
   14098:	movwcc	r1, #1
   1409c:	cmp	r1, #0
   140a0:	mvnne	r1, #0
   140a4:	subs	r0, r2, r0
   140a8:	sbcs	r0, r7, r5
   140ac:	movwcc	r1, #1
   140b0:	pop	{r5, r7, fp, lr}
   140b4:	mov	r0, r1
   140b8:	bx	lr
   140bc:	cmp	r1, #0
   140c0:	mvnne	r1, #0
   140c4:	mov	r0, r1
   140c8:	bx	lr

000140cc <table_compare_short@@Base>:
   140cc:	cmp	r0, #0
   140d0:	beq	14104 <table_compare_short@@Base+0x38>
   140d4:	cmp	r1, #0
   140d8:	moveq	r1, #1
   140dc:	moveq	r0, r1
   140e0:	bxeq	lr
   140e4:	ldrsh	r2, [r1]
   140e8:	ldrsh	r0, [r0]
   140ec:	mov	r1, #0
   140f0:	cmp	r0, r2
   140f4:	mvnlt	r1, #0
   140f8:	movwgt	r1, #1
   140fc:	mov	r0, r1
   14100:	bx	lr
   14104:	cmp	r1, #0
   14108:	mvnne	r1, #0
   1410c:	mov	r0, r1
   14110:	bx	lr

00014114 <table_compare_ushort@@Base>:
   14114:	cmp	r0, #0
   14118:	beq	1414c <table_compare_ushort@@Base+0x38>
   1411c:	cmp	r1, #0
   14120:	moveq	r1, #1
   14124:	moveq	r0, r1
   14128:	bxeq	lr
   1412c:	ldrh	r2, [r1]
   14130:	ldrh	r0, [r0]
   14134:	mov	r1, #0
   14138:	cmp	r0, r2
   1413c:	mvncc	r1, #0
   14140:	movwhi	r1, #1
   14144:	mov	r0, r1
   14148:	bx	lr
   1414c:	cmp	r1, #0
   14150:	mvnne	r1, #0
   14154:	mov	r0, r1
   14158:	bx	lr

0001415c <table_compare_long@@Base>:
   1415c:	cmp	r0, #0
   14160:	beq	14194 <table_compare_long@@Base+0x38>
   14164:	cmp	r1, #0
   14168:	moveq	r1, #1
   1416c:	moveq	r0, r1
   14170:	bxeq	lr
   14174:	ldr	r2, [r1]
   14178:	ldr	r0, [r0]
   1417c:	mov	r1, #0
   14180:	cmp	r0, r2
   14184:	mvnlt	r1, #0
   14188:	movwgt	r1, #1
   1418c:	mov	r0, r1
   14190:	bx	lr
   14194:	cmp	r1, #0
   14198:	mvnne	r1, #0
   1419c:	mov	r0, r1
   141a0:	bx	lr

000141a4 <table_compare_ulong@@Base>:
   141a4:	cmp	r0, #0
   141a8:	beq	141dc <table_compare_ulong@@Base+0x38>
   141ac:	cmp	r1, #0
   141b0:	moveq	r1, #1
   141b4:	moveq	r0, r1
   141b8:	bxeq	lr
   141bc:	ldr	r2, [r1]
   141c0:	ldr	r0, [r0]
   141c4:	mov	r1, #0
   141c8:	cmp	r0, r2
   141cc:	mvncc	r1, #0
   141d0:	movwhi	r1, #1
   141d4:	mov	r0, r1
   141d8:	bx	lr
   141dc:	cmp	r1, #0
   141e0:	mvnne	r1, #0
   141e4:	mov	r0, r1
   141e8:	bx	lr

000141ec <table_compare_llong@@Base>:
   141ec:	cmp	r0, #0
   141f0:	beq	14244 <table_compare_llong@@Base+0x58>
   141f4:	cmp	r1, #0
   141f8:	moveq	r1, #1
   141fc:	moveq	r0, r1
   14200:	bxeq	lr
   14204:	push	{r5, r7, fp, lr}
   14208:	add	fp, sp, #8
   1420c:	ldm	r1, {r2, r7}
   14210:	ldm	r0, {r0, r5}
   14214:	mov	r1, #0
   14218:	subs	r3, r0, r2
   1421c:	sbcs	r3, r5, r7
   14220:	movwlt	r1, #1
   14224:	cmp	r1, #0
   14228:	mvnne	r1, #0
   1422c:	subs	r0, r2, r0
   14230:	sbcs	r0, r7, r5
   14234:	movwlt	r1, #1
   14238:	pop	{r5, r7, fp, lr}
   1423c:	mov	r0, r1
   14240:	bx	lr
   14244:	cmp	r1, #0
   14248:	mvnne	r1, #0
   1424c:	mov	r0, r1
   14250:	bx	lr

00014254 <table_compare_ullong@@Base>:
   14254:	cmp	r0, #0
   14258:	beq	1428c <table_compare_ullong@@Base+0x38>
   1425c:	cmp	r1, #0
   14260:	moveq	r1, #1
   14264:	moveq	r0, r1
   14268:	bxeq	lr
   1426c:	ldr	r2, [r1]
   14270:	ldr	r0, [r0]
   14274:	mov	r1, #0
   14278:	cmp	r0, r2
   1427c:	mvncc	r1, #0
   14280:	movwhi	r1, #1
   14284:	mov	r0, r1
   14288:	bx	lr
   1428c:	cmp	r1, #0
   14290:	mvnne	r1, #0
   14294:	mov	r0, r1
   14298:	bx	lr

0001429c <table_compare_float@@Base>:
   1429c:	cmp	r0, #0
   142a0:	beq	142d8 <table_compare_float@@Base+0x3c>
   142a4:	cmp	r1, #0
   142a8:	moveq	r1, #1
   142ac:	moveq	r0, r1
   142b0:	bxeq	lr
   142b4:	vldr	s0, [r1]
   142b8:	vldr	s2, [r0]
   142bc:	mov	r1, #0
   142c0:	vcmpe.f32	s2, s0
   142c4:	vmrs	APSR_nzcv, fpscr
   142c8:	mvnmi	r1, #0
   142cc:	movwgt	r1, #1
   142d0:	mov	r0, r1
   142d4:	bx	lr
   142d8:	cmp	r1, #0
   142dc:	mvnne	r1, #0
   142e0:	mov	r0, r1
   142e4:	bx	lr

000142e8 <table_compare_double@@Base>:
   142e8:	cmp	r0, #0
   142ec:	beq	14324 <table_compare_double@@Base+0x3c>
   142f0:	cmp	r1, #0
   142f4:	moveq	r1, #1
   142f8:	moveq	r0, r1
   142fc:	bxeq	lr
   14300:	vldr	d16, [r1]
   14304:	vldr	d17, [r0]
   14308:	mov	r1, #0
   1430c:	vcmpe.f64	d17, d16
   14310:	vmrs	APSR_nzcv, fpscr
   14314:	mvnmi	r1, #0
   14318:	movwgt	r1, #1
   1431c:	mov	r0, r1
   14320:	bx	lr
   14324:	cmp	r1, #0
   14328:	mvnne	r1, #0
   1432c:	mov	r0, r1
   14330:	bx	lr

00014334 <table_compare_ldouble@@Base>:
   14334:	cmp	r0, #0
   14338:	beq	14370 <table_compare_ldouble@@Base+0x3c>
   1433c:	cmp	r1, #0
   14340:	moveq	r1, #1
   14344:	moveq	r0, r1
   14348:	bxeq	lr
   1434c:	vldr	d16, [r1]
   14350:	vldr	d17, [r0]
   14354:	mov	r1, #0
   14358:	vcmpe.f64	d17, d16
   1435c:	vmrs	APSR_nzcv, fpscr
   14360:	mvnmi	r1, #0
   14364:	movwgt	r1, #1
   14368:	mov	r0, r1
   1436c:	bx	lr
   14370:	cmp	r1, #0
   14374:	mvnne	r1, #0
   14378:	mov	r0, r1
   1437c:	bx	lr

00014380 <table_compare_char@@Base>:
   14380:	cmp	r0, #0
   14384:	beq	143b8 <table_compare_char@@Base+0x38>
   14388:	cmp	r1, #0
   1438c:	moveq	r1, #1
   14390:	moveq	r0, r1
   14394:	bxeq	lr
   14398:	ldrb	r2, [r1]
   1439c:	ldrb	r0, [r0]
   143a0:	mov	r1, #0
   143a4:	cmp	r0, r2
   143a8:	mvncc	r1, #0
   143ac:	movwhi	r1, #1
   143b0:	mov	r0, r1
   143b4:	bx	lr
   143b8:	cmp	r1, #0
   143bc:	mvnne	r1, #0
   143c0:	mov	r0, r1
   143c4:	bx	lr

000143c8 <table_compare_uchar@@Base>:
   143c8:	cmp	r0, #0
   143cc:	beq	14400 <table_compare_uchar@@Base+0x38>
   143d0:	cmp	r1, #0
   143d4:	moveq	r1, #1
   143d8:	moveq	r0, r1
   143dc:	bxeq	lr
   143e0:	ldrb	r2, [r1]
   143e4:	ldrb	r0, [r0]
   143e8:	mov	r1, #0
   143ec:	cmp	r0, r2
   143f0:	mvncc	r1, #0
   143f4:	movwhi	r1, #1
   143f8:	mov	r0, r1
   143fc:	bx	lr
   14400:	cmp	r1, #0
   14404:	mvnne	r1, #0
   14408:	mov	r0, r1
   1440c:	bx	lr

00014410 <table_compare_string@@Base>:
   14410:	cmp	r0, #0
   14414:	beq	1442c <table_compare_string@@Base+0x1c>
   14418:	cmp	r1, #0
   1441c:	moveq	r1, #1
   14420:	moveq	r0, r1
   14424:	bxeq	lr
   14428:	b	11f88 <strcmp@plt>
   1442c:	cmp	r1, #0
   14430:	mvnne	r1, #0
   14434:	mov	r0, r1
   14438:	bx	lr

0001443c <table_compare_ptr@@Base>:
   1443c:	mov	r2, #0
   14440:	cmp	r0, r1
   14444:	mvncc	r2, #0
   14448:	movwhi	r2, #1
   1444c:	mov	r0, r2
   14450:	bx	lr

00014454 <table_get_default_compare_function_for_data_type@@Base>:
   14454:	cmp	r0, #23
   14458:	movhi	r0, #0
   1445c:	movwls	r1, #21664	; 0x54a0
   14460:	movtls	r1, #1
   14464:	ldrls	r0, [r1, r0, lsl #2]
   14468:	bx	lr

0001446c <table_get@@Base>:
   1446c:	push	{fp, lr}
   14470:	mov	fp, sp
   14474:	bl	12f38 <table_get_cell_ptr@@Base>
   14478:	ldr	r0, [r0]
   1447c:	pop	{fp, pc}

00014480 <table_get_bool@@Base>:
   14480:	push	{fp, lr}
   14484:	mov	fp, sp
   14488:	bl	1446c <table_get@@Base>
   1448c:	ldrb	r0, [r0]
   14490:	pop	{fp, pc}

00014494 <table_get_int@@Base>:
   14494:	push	{fp, lr}
   14498:	mov	fp, sp
   1449c:	bl	1446c <table_get@@Base>
   144a0:	ldr	r0, [r0]
   144a4:	pop	{fp, pc}

000144a8 <table_get_uint@@Base>:
   144a8:	push	{fp, lr}
   144ac:	mov	fp, sp
   144b0:	bl	1446c <table_get@@Base>
   144b4:	ldr	r0, [r0]
   144b8:	pop	{fp, pc}

000144bc <table_get_int8@@Base>:
   144bc:	push	{fp, lr}
   144c0:	mov	fp, sp
   144c4:	bl	1446c <table_get@@Base>
   144c8:	ldrsb	r0, [r0]
   144cc:	pop	{fp, pc}

000144d0 <table_get_uint8@@Base>:
   144d0:	push	{fp, lr}
   144d4:	mov	fp, sp
   144d8:	bl	1446c <table_get@@Base>
   144dc:	ldrb	r0, [r0]
   144e0:	pop	{fp, pc}

000144e4 <table_get_int16@@Base>:
   144e4:	push	{fp, lr}
   144e8:	mov	fp, sp
   144ec:	bl	1446c <table_get@@Base>
   144f0:	ldrsh	r0, [r0]
   144f4:	pop	{fp, pc}

000144f8 <table_get_uint16@@Base>:
   144f8:	push	{fp, lr}
   144fc:	mov	fp, sp
   14500:	bl	1446c <table_get@@Base>
   14504:	ldrh	r0, [r0]
   14508:	pop	{fp, pc}

0001450c <table_get_int32@@Base>:
   1450c:	push	{fp, lr}
   14510:	mov	fp, sp
   14514:	bl	1446c <table_get@@Base>
   14518:	ldr	r0, [r0]
   1451c:	pop	{fp, pc}

00014520 <table_get_uint32@@Base>:
   14520:	push	{fp, lr}
   14524:	mov	fp, sp
   14528:	bl	1446c <table_get@@Base>
   1452c:	ldr	r0, [r0]
   14530:	pop	{fp, pc}

00014534 <table_get_int64@@Base>:
   14534:	push	{fp, lr}
   14538:	mov	fp, sp
   1453c:	bl	1446c <table_get@@Base>
   14540:	ldrd	r0, [r0]
   14544:	pop	{fp, pc}

00014548 <table_get_uint64@@Base>:
   14548:	push	{fp, lr}
   1454c:	mov	fp, sp
   14550:	bl	1446c <table_get@@Base>
   14554:	ldrd	r0, [r0]
   14558:	pop	{fp, pc}

0001455c <table_get_short@@Base>:
   1455c:	push	{fp, lr}
   14560:	mov	fp, sp
   14564:	bl	1446c <table_get@@Base>
   14568:	ldrsh	r0, [r0]
   1456c:	pop	{fp, pc}

00014570 <table_get_ushort@@Base>:
   14570:	push	{fp, lr}
   14574:	mov	fp, sp
   14578:	bl	1446c <table_get@@Base>
   1457c:	ldrh	r0, [r0]
   14580:	pop	{fp, pc}

00014584 <table_get_long@@Base>:
   14584:	push	{fp, lr}
   14588:	mov	fp, sp
   1458c:	bl	1446c <table_get@@Base>
   14590:	ldr	r0, [r0]
   14594:	pop	{fp, pc}

00014598 <table_get_ulong@@Base>:
   14598:	push	{fp, lr}
   1459c:	mov	fp, sp
   145a0:	bl	1446c <table_get@@Base>
   145a4:	ldr	r0, [r0]
   145a8:	pop	{fp, pc}

000145ac <table_get_llong@@Base>:
   145ac:	push	{fp, lr}
   145b0:	mov	fp, sp
   145b4:	bl	1446c <table_get@@Base>
   145b8:	ldrd	r0, [r0]
   145bc:	pop	{fp, pc}

000145c0 <table_get_ullong@@Base>:
   145c0:	push	{fp, lr}
   145c4:	mov	fp, sp
   145c8:	bl	1446c <table_get@@Base>
   145cc:	ldrd	r0, [r0]
   145d0:	pop	{fp, pc}

000145d4 <table_get_float@@Base>:
   145d4:	push	{fp, lr}
   145d8:	mov	fp, sp
   145dc:	bl	1446c <table_get@@Base>
   145e0:	vldr	s0, [r0]
   145e4:	pop	{fp, pc}

000145e8 <table_get_double@@Base>:
   145e8:	push	{fp, lr}
   145ec:	mov	fp, sp
   145f0:	bl	1446c <table_get@@Base>
   145f4:	vldr	d0, [r0]
   145f8:	pop	{fp, pc}

000145fc <table_get_ldouble@@Base>:
   145fc:	push	{fp, lr}
   14600:	mov	fp, sp
   14604:	bl	1446c <table_get@@Base>
   14608:	vldr	d0, [r0]
   1460c:	pop	{fp, pc}

00014610 <table_get_char@@Base>:
   14610:	push	{fp, lr}
   14614:	mov	fp, sp
   14618:	bl	1446c <table_get@@Base>
   1461c:	ldrb	r0, [r0]
   14620:	pop	{fp, pc}

00014624 <table_get_uchar@@Base>:
   14624:	push	{fp, lr}
   14628:	mov	fp, sp
   1462c:	bl	1446c <table_get@@Base>
   14630:	ldrb	r0, [r0]
   14634:	pop	{fp, pc}

00014638 <table_get_string@@Base>:
   14638:	b	1446c <table_get@@Base>

0001463c <table_get_ptr@@Base>:
   1463c:	b	1446c <table_get@@Base>

00014640 <table_row_init@@Base>:
   14640:	push	{r4, r5, fp, lr}
   14644:	add	fp, sp, #8
   14648:	mov	r4, r0
   1464c:	bl	14668 <table_get_row_ptr@@Base>
   14650:	mov	r5, r0
   14654:	ldr	r0, [r4, #12]
   14658:	lsl	r0, r0, #2
   1465c:	bl	11fdc <malloc@plt>
   14660:	str	r0, [r5]
   14664:	pop	{r4, r5, fp, pc}

00014668 <table_get_row_ptr@@Base>:
   14668:	ldr	r0, [r0, #16]
   1466c:	add	r0, r0, r1, lsl #2
   14670:	bx	lr

00014674 <table_row_destroy@@Base>:
   14674:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14678:	add	fp, sp, #24
   1467c:	mov	r4, r1
   14680:	mov	r5, r0
   14684:	bl	139b4 <table_get_column_length@@Base>
   14688:	mov	r6, r0
   1468c:	mov	r0, r5
   14690:	mov	r1, r4
   14694:	bl	14668 <table_get_row_ptr@@Base>
   14698:	mov	r8, r0
   1469c:	cmp	r6, #1
   146a0:	blt	146c4 <table_row_destroy@@Base+0x50>
   146a4:	mov	r7, #0
   146a8:	mov	r0, r5
   146ac:	mov	r1, r4
   146b0:	mov	r2, r7
   146b4:	bl	12f54 <table_cell_destroy@@Base>
   146b8:	add	r7, r7, #1
   146bc:	cmp	r6, r7
   146c0:	bne	146a8 <table_row_destroy@@Base+0x34>
   146c4:	ldr	r0, [r8]
   146c8:	cmp	r0, #0
   146cc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   146d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   146d4:	b	11fa0 <free@plt>

000146d8 <table_get_row_length@@Base>:
   146d8:	ldr	r0, [r0, #20]
   146dc:	bx	lr

000146e0 <table_add_row@@Base>:
   146e0:	push	{r4, sl, fp, lr}
   146e4:	add	fp, sp, #8
   146e8:	mov	r4, r0
   146ec:	bl	146d8 <table_get_row_length@@Base>
   146f0:	ldr	r1, [r4, #24]
   146f4:	udiv	r2, r0, r1
   146f8:	mls	r0, r2, r1, r0
   146fc:	cmp	r0, #0
   14700:	bne	1470c <table_add_row@@Base+0x2c>
   14704:	mov	r0, r4
   14708:	bl	14740 <table_add_row@@Base+0x60>
   1470c:	mov	r0, r4
   14710:	bl	14770 <table_add_row@@Base+0x90>
   14714:	mov	r0, r4
   14718:	bl	146d8 <table_get_row_length@@Base>
   1471c:	mov	r1, r0
   14720:	mov	r0, r4
   14724:	mvn	r2, #0
   14728:	mov	r3, #2
   1472c:	bl	12ea4 <table_notify@@Base>
   14730:	ldr	r0, [r4, #20]
   14734:	add	r1, r0, #1
   14738:	str	r1, [r4, #20]
   1473c:	pop	{r4, sl, fp, pc}
   14740:	push	{r4, sl, fp, lr}
   14744:	add	fp, sp, #8
   14748:	mov	r4, r0
   1474c:	ldr	r0, [r0, #16]
   14750:	ldr	r1, [r4, #24]
   14754:	ldr	r2, [r4, #28]
   14758:	add	r1, r2, r1
   1475c:	str	r1, [r4, #28]
   14760:	lsl	r1, r1, #2
   14764:	bl	11fb8 <realloc@plt>
   14768:	str	r0, [r4, #16]
   1476c:	pop	{r4, sl, fp, pc}
   14770:	push	{r4, r5, r6, r7, fp, lr}
   14774:	add	fp, sp, #16
   14778:	mov	r4, r0
   1477c:	bl	146d8 <table_get_row_length@@Base>
   14780:	mov	r5, r0
   14784:	mov	r0, r4
   14788:	bl	139b4 <table_get_column_length@@Base>
   1478c:	mov	r6, r0
   14790:	mov	r0, r4
   14794:	mov	r1, r5
   14798:	bl	14640 <table_row_init@@Base>
   1479c:	cmp	r6, #1
   147a0:	poplt	{r4, r5, r6, r7, fp, pc}
   147a4:	mov	r7, #0
   147a8:	mov	r0, r4
   147ac:	mov	r1, r5
   147b0:	mov	r2, r7
   147b4:	bl	12f20 <table_cell_init@@Base>
   147b8:	add	r7, r7, #1
   147bc:	cmp	r6, r7
   147c0:	bne	147a8 <table_add_row@@Base+0xc8>
   147c4:	pop	{r4, r5, r6, r7, fp, pc}

000147c8 <table_remove_row@@Base>:
   147c8:	push	{r4, r5, fp, lr}
   147cc:	add	fp, sp, #8
   147d0:	mov	r4, r1
   147d4:	mov	r5, r0
   147d8:	bl	14828 <table_remove_row@@Base+0x60>
   147dc:	ldr	r0, [r5, #20]
   147e0:	sub	r0, r0, #1
   147e4:	str	r0, [r5, #20]
   147e8:	mov	r0, r5
   147ec:	bl	146d8 <table_get_row_length@@Base>
   147f0:	ldr	r1, [r5, #24]
   147f4:	udiv	r2, r0, r1
   147f8:	mls	r0, r2, r1, r0
   147fc:	cmp	r0, #0
   14800:	bne	1480c <table_remove_row@@Base+0x44>
   14804:	mov	r0, r5
   14808:	bl	148e0 <table_remove_row@@Base+0x118>
   1480c:	mov	r0, r5
   14810:	mov	r1, r4
   14814:	mvn	r2, #0
   14818:	mov	r3, #4
   1481c:	bl	12ea4 <table_notify@@Base>
   14820:	mov	r0, #0
   14824:	pop	{r4, r5, fp, pc}
   14828:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1482c:	add	fp, sp, #24
   14830:	mov	r4, r1
   14834:	mov	r5, r0
   14838:	bl	146d8 <table_get_row_length@@Base>
   1483c:	mov	r8, r0
   14840:	mov	r0, r5
   14844:	bl	139b4 <table_get_column_length@@Base>
   14848:	cmp	r0, #1
   1484c:	blt	14898 <table_remove_row@@Base+0xd0>
   14850:	mov	r7, r0
   14854:	mov	r6, #0
   14858:	mov	r0, r5
   1485c:	mov	r1, r6
   14860:	bl	13a2c <table_get_column_data_type@@Base>
   14864:	cmp	r0, #23
   14868:	beq	1488c <table_remove_row@@Base+0xc4>
   1486c:	mov	r0, r5
   14870:	mov	r1, r4
   14874:	mov	r2, r6
   14878:	bl	12f38 <table_get_cell_ptr@@Base>
   1487c:	ldr	r0, [r0]
   14880:	cmp	r0, #0
   14884:	beq	1488c <table_remove_row@@Base+0xc4>
   14888:	bl	11fa0 <free@plt>
   1488c:	add	r6, r6, #1
   14890:	cmp	r7, r6
   14894:	bne	14858 <table_remove_row@@Base+0x90>
   14898:	mov	r0, r5
   1489c:	mov	r1, r4
   148a0:	bl	14668 <table_get_row_ptr@@Base>
   148a4:	ldr	r0, [r0]
   148a8:	cmp	r0, #0
   148ac:	beq	148b4 <table_remove_row@@Base+0xec>
   148b0:	bl	11fa0 <free@plt>
   148b4:	sub	r0, r8, #1
   148b8:	cmp	r0, r4
   148bc:	pople	{r4, r5, r6, r7, r8, sl, fp, pc}
   148c0:	ldr	r1, [r5, #16]
   148c4:	add	r2, r1, r4, lsl #2
   148c8:	ldr	r2, [r2, #4]
   148cc:	str	r2, [r1, r4, lsl #2]
   148d0:	add	r4, r4, #1
   148d4:	cmp	r0, r4
   148d8:	bne	148c0 <table_remove_row@@Base+0xf8>
   148dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   148e0:	push	{r4, sl, fp, lr}
   148e4:	add	fp, sp, #8
   148e8:	mov	r4, r0
   148ec:	ldr	r0, [r0, #16]
   148f0:	ldr	r1, [r4, #24]
   148f4:	ldr	r2, [r4, #28]
   148f8:	sub	r1, r2, r1
   148fc:	str	r1, [r4, #28]
   14900:	lsl	r1, r1, #2
   14904:	bl	11fb8 <realloc@plt>
   14908:	str	r0, [r4, #16]
   1490c:	pop	{r4, sl, fp, pc}

00014910 <table_set_row_ptr@@Base>:
   14910:	ldr	r2, [r2]
   14914:	ldr	r0, [r0, #16]
   14918:	str	r2, [r0, r1, lsl #2]
   1491c:	bx	lr

00014920 <table_set@@Base>:
   14920:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14924:	add	fp, sp, #24
   14928:	mov	r8, r3
   1492c:	mov	r4, r2
   14930:	mov	r9, r1
   14934:	mov	r6, r0
   14938:	bl	12f38 <table_get_cell_ptr@@Base>
   1493c:	mov	r5, r0
   14940:	mov	r0, r6
   14944:	mov	r1, r4
   14948:	bl	13984 <table_get_col_ptr@@Base>
   1494c:	mvn	r7, #0
   14950:	ldr	r1, [fp, #8]
   14954:	cmp	r1, #23
   14958:	bhi	14b10 <table_set@@Base+0x1f0>
   1495c:	add	r2, pc, #0
   14960:	ldr	pc, [r2, r1, lsl #2]
   14964:	andeq	r4, r1, r4, asr #19
   14968:	andeq	r4, r1, r4, asr #19
   1496c:	andeq	r4, r1, ip, lsr sl
   14970:	andeq	r4, r1, ip, lsr sl
   14974:	andeq	r4, r1, r4, ror sl
   14978:	andeq	r4, r1, r4, ror sl
   1497c:	andeq	r4, r1, r4, asr #19
   14980:	andeq	r4, r1, r4, asr #19
   14984:	strdeq	r4, [r1], -ip
   14988:	strdeq	r4, [r1], -ip
   1498c:	andeq	r4, r1, r4, ror sl
   14990:	andeq	r4, r1, r4, ror sl
   14994:	andeq	r4, r1, r4, asr #19
   14998:	andeq	r4, r1, r4, asr #19
   1499c:	strdeq	r4, [r1], -ip
   149a0:	strdeq	r4, [r1], -ip
   149a4:	andeq	r4, r1, r4, asr #19
   149a8:	strdeq	r4, [r1], -ip
   149ac:	strdeq	r4, [r1], -ip
   149b0:	andeq	r4, r1, ip, lsr sl
   149b4:	andeq	r4, r1, ip, lsr sl
   149b8:	andeq	r4, r1, ip, lsr #21
   149bc:	andeq	r4, r1, ip, lsr sl
   149c0:	andeq	r4, r1, r8, ror #21
   149c4:	ldr	r0, [r0, #4]
   149c8:	cmp	r0, r1
   149cc:	bne	14b10 <table_set@@Base+0x1f0>
   149d0:	ldr	r0, [r5]
   149d4:	cmp	r0, #0
   149d8:	bne	149f0 <table_set@@Base+0xd0>
   149dc:	mov	r0, #4
   149e0:	bl	11fdc <malloc@plt>
   149e4:	str	r0, [r5]
   149e8:	cmp	r0, #0
   149ec:	beq	14b10 <table_set@@Base+0x1f0>
   149f0:	ldr	r1, [r8]
   149f4:	str	r1, [r0]
   149f8:	b	14af8 <table_set@@Base+0x1d8>
   149fc:	ldr	r0, [r0, #4]
   14a00:	cmp	r0, r1
   14a04:	bne	14b10 <table_set@@Base+0x1f0>
   14a08:	ldr	r0, [r5]
   14a0c:	cmp	r0, #0
   14a10:	bne	14a28 <table_set@@Base+0x108>
   14a14:	mov	r0, #8
   14a18:	bl	11fdc <malloc@plt>
   14a1c:	str	r0, [r5]
   14a20:	cmp	r0, #0
   14a24:	beq	14b10 <table_set@@Base+0x1f0>
   14a28:	ldr	r1, [r8]
   14a2c:	ldr	r2, [r8, #4]
   14a30:	str	r2, [r0, #4]
   14a34:	str	r1, [r0]
   14a38:	b	14af8 <table_set@@Base+0x1d8>
   14a3c:	ldr	r0, [r0, #4]
   14a40:	cmp	r0, r1
   14a44:	bne	14b10 <table_set@@Base+0x1f0>
   14a48:	ldr	r0, [r5]
   14a4c:	cmp	r0, #0
   14a50:	bne	14a68 <table_set@@Base+0x148>
   14a54:	mov	r0, #1
   14a58:	bl	11fdc <malloc@plt>
   14a5c:	str	r0, [r5]
   14a60:	cmp	r0, #0
   14a64:	beq	14b10 <table_set@@Base+0x1f0>
   14a68:	ldrb	r1, [r8]
   14a6c:	strb	r1, [r0]
   14a70:	b	14af8 <table_set@@Base+0x1d8>
   14a74:	ldr	r0, [r0, #4]
   14a78:	cmp	r0, r1
   14a7c:	bne	14b10 <table_set@@Base+0x1f0>
   14a80:	ldr	r0, [r5]
   14a84:	cmp	r0, #0
   14a88:	bne	14aa0 <table_set@@Base+0x180>
   14a8c:	mov	r0, #2
   14a90:	bl	11fdc <malloc@plt>
   14a94:	str	r0, [r5]
   14a98:	cmp	r0, #0
   14a9c:	beq	14b10 <table_set@@Base+0x1f0>
   14aa0:	ldrh	r1, [r8]
   14aa4:	strh	r1, [r0]
   14aa8:	b	14af8 <table_set@@Base+0x1d8>
   14aac:	ldr	r0, [r0, #4]
   14ab0:	cmp	r0, r1
   14ab4:	bne	14b10 <table_set@@Base+0x1f0>
   14ab8:	mov	r0, r8
   14abc:	bl	12000 <strlen@plt>
   14ac0:	ldr	r2, [r5]
   14ac4:	add	r1, r0, #1
   14ac8:	mov	r0, r2
   14acc:	bl	11fb8 <realloc@plt>
   14ad0:	str	r0, [r5]
   14ad4:	cmp	r0, #0
   14ad8:	beq	14b10 <table_set@@Base+0x1f0>
   14adc:	mov	r1, r8
   14ae0:	bl	11fc4 <strcpy@plt>
   14ae4:	b	14af8 <table_set@@Base+0x1d8>
   14ae8:	ldr	r0, [r0, #4]
   14aec:	cmp	r0, r1
   14af0:	bne	14b10 <table_set@@Base+0x1f0>
   14af4:	str	r8, [r5]
   14af8:	mov	r0, r6
   14afc:	mov	r1, r9
   14b00:	mov	r2, r4
   14b04:	mov	r3, #1
   14b08:	bl	12ea4 <table_notify@@Base>
   14b0c:	mov	r7, #0
   14b10:	mov	r0, r7
   14b14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b18 <table_set_bool@@Base>:
   14b18:	push	{fp, lr}
   14b1c:	mov	fp, sp
   14b20:	sub	sp, sp, #8
   14b24:	strb	r3, [fp, #-1]
   14b28:	mov	r3, #22
   14b2c:	str	r3, [sp]
   14b30:	sub	r3, fp, #1
   14b34:	bl	14920 <table_set@@Base>
   14b38:	mov	sp, fp
   14b3c:	pop	{fp, pc}

00014b40 <table_set_int@@Base>:
   14b40:	push	{fp, lr}
   14b44:	mov	fp, sp
   14b48:	sub	sp, sp, #8
   14b4c:	str	r3, [sp, #4]
   14b50:	mov	r3, #0
   14b54:	str	r3, [sp]
   14b58:	add	r3, sp, #4
   14b5c:	bl	14920 <table_set@@Base>
   14b60:	mov	sp, fp
   14b64:	pop	{fp, pc}

00014b68 <table_set_uint@@Base>:
   14b68:	push	{fp, lr}
   14b6c:	mov	fp, sp
   14b70:	sub	sp, sp, #8
   14b74:	str	r3, [sp, #4]
   14b78:	mov	r3, #1
   14b7c:	str	r3, [sp]
   14b80:	add	r3, sp, #4
   14b84:	bl	14920 <table_set@@Base>
   14b88:	mov	sp, fp
   14b8c:	pop	{fp, pc}

00014b90 <table_set_int8@@Base>:
   14b90:	push	{fp, lr}
   14b94:	mov	fp, sp
   14b98:	sub	sp, sp, #8
   14b9c:	strb	r3, [fp, #-1]
   14ba0:	mov	r3, #2
   14ba4:	str	r3, [sp]
   14ba8:	sub	r3, fp, #1
   14bac:	bl	14920 <table_set@@Base>
   14bb0:	mov	sp, fp
   14bb4:	pop	{fp, pc}

00014bb8 <table_set_uint8@@Base>:
   14bb8:	push	{fp, lr}
   14bbc:	mov	fp, sp
   14bc0:	sub	sp, sp, #8
   14bc4:	strb	r3, [fp, #-1]
   14bc8:	mov	r3, #3
   14bcc:	str	r3, [sp]
   14bd0:	sub	r3, fp, #1
   14bd4:	bl	14920 <table_set@@Base>
   14bd8:	mov	sp, fp
   14bdc:	pop	{fp, pc}

00014be0 <table_set_int16@@Base>:
   14be0:	push	{fp, lr}
   14be4:	mov	fp, sp
   14be8:	sub	sp, sp, #8
   14bec:	strh	r3, [fp, #-2]
   14bf0:	mov	r3, #4
   14bf4:	str	r3, [sp]
   14bf8:	sub	r3, fp, #2
   14bfc:	bl	14920 <table_set@@Base>
   14c00:	mov	sp, fp
   14c04:	pop	{fp, pc}

00014c08 <table_set_uint16@@Base>:
   14c08:	push	{fp, lr}
   14c0c:	mov	fp, sp
   14c10:	sub	sp, sp, #8
   14c14:	strh	r3, [fp, #-2]
   14c18:	mov	r3, #5
   14c1c:	str	r3, [sp]
   14c20:	sub	r3, fp, #2
   14c24:	bl	14920 <table_set@@Base>
   14c28:	mov	sp, fp
   14c2c:	pop	{fp, pc}

00014c30 <table_set_int32@@Base>:
   14c30:	push	{fp, lr}
   14c34:	mov	fp, sp
   14c38:	sub	sp, sp, #8
   14c3c:	str	r3, [sp, #4]
   14c40:	mov	r3, #6
   14c44:	str	r3, [sp]
   14c48:	add	r3, sp, #4
   14c4c:	bl	14920 <table_set@@Base>
   14c50:	mov	sp, fp
   14c54:	pop	{fp, pc}

00014c58 <table_set_uint32@@Base>:
   14c58:	push	{fp, lr}
   14c5c:	mov	fp, sp
   14c60:	sub	sp, sp, #8
   14c64:	str	r3, [sp, #4]
   14c68:	mov	r3, #7
   14c6c:	str	r3, [sp]
   14c70:	add	r3, sp, #4
   14c74:	bl	14920 <table_set@@Base>
   14c78:	mov	sp, fp
   14c7c:	pop	{fp, pc}

00014c80 <table_set_int64@@Base>:
   14c80:	push	{fp, lr}
   14c84:	mov	fp, sp
   14c88:	sub	sp, sp, #16
   14c8c:	ldr	r3, [fp, #12]
   14c90:	str	r3, [sp, #12]
   14c94:	ldr	r3, [fp, #8]
   14c98:	str	r3, [sp, #8]
   14c9c:	mov	r3, #8
   14ca0:	str	r3, [sp]
   14ca4:	add	r3, sp, #8
   14ca8:	bl	14920 <table_set@@Base>
   14cac:	mov	sp, fp
   14cb0:	pop	{fp, pc}

00014cb4 <table_set_uint64@@Base>:
   14cb4:	push	{fp, lr}
   14cb8:	mov	fp, sp
   14cbc:	sub	sp, sp, #16
   14cc0:	ldr	r3, [fp, #12]
   14cc4:	str	r3, [sp, #12]
   14cc8:	ldr	r3, [fp, #8]
   14ccc:	str	r3, [sp, #8]
   14cd0:	mov	r3, #9
   14cd4:	str	r3, [sp]
   14cd8:	add	r3, sp, #8
   14cdc:	bl	14920 <table_set@@Base>
   14ce0:	mov	sp, fp
   14ce4:	pop	{fp, pc}

00014ce8 <table_set_short@@Base>:
   14ce8:	push	{fp, lr}
   14cec:	mov	fp, sp
   14cf0:	sub	sp, sp, #8
   14cf4:	strh	r3, [fp, #-2]
   14cf8:	mov	r3, #10
   14cfc:	str	r3, [sp]
   14d00:	sub	r3, fp, #2
   14d04:	bl	14920 <table_set@@Base>
   14d08:	mov	sp, fp
   14d0c:	pop	{fp, pc}

00014d10 <table_set_ushort@@Base>:
   14d10:	push	{fp, lr}
   14d14:	mov	fp, sp
   14d18:	sub	sp, sp, #8
   14d1c:	strh	r3, [fp, #-2]
   14d20:	mov	r3, #11
   14d24:	str	r3, [sp]
   14d28:	sub	r3, fp, #2
   14d2c:	bl	14920 <table_set@@Base>
   14d30:	mov	sp, fp
   14d34:	pop	{fp, pc}

00014d38 <table_set_long@@Base>:
   14d38:	push	{fp, lr}
   14d3c:	mov	fp, sp
   14d40:	sub	sp, sp, #8
   14d44:	str	r3, [sp, #4]
   14d48:	mov	r3, #12
   14d4c:	str	r3, [sp]
   14d50:	add	r3, sp, #4
   14d54:	bl	14920 <table_set@@Base>
   14d58:	mov	sp, fp
   14d5c:	pop	{fp, pc}

00014d60 <table_set_ulong@@Base>:
   14d60:	push	{fp, lr}
   14d64:	mov	fp, sp
   14d68:	sub	sp, sp, #8
   14d6c:	str	r3, [sp, #4]
   14d70:	mov	r3, #13
   14d74:	str	r3, [sp]
   14d78:	add	r3, sp, #4
   14d7c:	bl	14920 <table_set@@Base>
   14d80:	mov	sp, fp
   14d84:	pop	{fp, pc}

00014d88 <table_set_llong@@Base>:
   14d88:	push	{fp, lr}
   14d8c:	mov	fp, sp
   14d90:	sub	sp, sp, #16
   14d94:	ldr	r3, [fp, #12]
   14d98:	str	r3, [sp, #12]
   14d9c:	ldr	r3, [fp, #8]
   14da0:	str	r3, [sp, #8]
   14da4:	mov	r3, #14
   14da8:	str	r3, [sp]
   14dac:	add	r3, sp, #8
   14db0:	bl	14920 <table_set@@Base>
   14db4:	mov	sp, fp
   14db8:	pop	{fp, pc}

00014dbc <table_set_ullong@@Base>:
   14dbc:	push	{fp, lr}
   14dc0:	mov	fp, sp
   14dc4:	sub	sp, sp, #16
   14dc8:	ldr	r3, [fp, #12]
   14dcc:	str	r3, [sp, #12]
   14dd0:	ldr	r3, [fp, #8]
   14dd4:	str	r3, [sp, #8]
   14dd8:	mov	r3, #15
   14ddc:	str	r3, [sp]
   14de0:	add	r3, sp, #8
   14de4:	bl	14920 <table_set@@Base>
   14de8:	mov	sp, fp
   14dec:	pop	{fp, pc}

00014df0 <table_set_float@@Base>:
   14df0:	push	{fp, lr}
   14df4:	mov	fp, sp
   14df8:	sub	sp, sp, #8
   14dfc:	vstr	s0, [sp, #4]
   14e00:	mov	r3, #16
   14e04:	str	r3, [sp]
   14e08:	add	r3, sp, #4
   14e0c:	bl	14920 <table_set@@Base>
   14e10:	mov	sp, fp
   14e14:	pop	{fp, pc}

00014e18 <table_set_double@@Base>:
   14e18:	push	{fp, lr}
   14e1c:	mov	fp, sp
   14e20:	sub	sp, sp, #16
   14e24:	vstr	d0, [sp, #8]
   14e28:	mov	r3, #17
   14e2c:	str	r3, [sp]
   14e30:	add	r3, sp, #8
   14e34:	bl	14920 <table_set@@Base>
   14e38:	mov	sp, fp
   14e3c:	pop	{fp, pc}

00014e40 <table_set_ldouble@@Base>:
   14e40:	push	{fp, lr}
   14e44:	mov	fp, sp
   14e48:	sub	sp, sp, #16
   14e4c:	vstr	d0, [sp, #8]
   14e50:	mov	r3, #18
   14e54:	str	r3, [sp]
   14e58:	add	r3, sp, #8
   14e5c:	bl	14920 <table_set@@Base>
   14e60:	mov	sp, fp
   14e64:	pop	{fp, pc}

00014e68 <table_set_string@@Base>:
   14e68:	push	{fp, lr}
   14e6c:	mov	fp, sp
   14e70:	sub	sp, sp, #8
   14e74:	mov	ip, #21
   14e78:	str	ip, [sp]
   14e7c:	bl	14920 <table_set@@Base>
   14e80:	mov	sp, fp
   14e84:	pop	{fp, pc}

00014e88 <table_set_char@@Base>:
   14e88:	push	{fp, lr}
   14e8c:	mov	fp, sp
   14e90:	sub	sp, sp, #8
   14e94:	strb	r3, [fp, #-1]
   14e98:	mov	r3, #19
   14e9c:	str	r3, [sp]
   14ea0:	sub	r3, fp, #1
   14ea4:	bl	14920 <table_set@@Base>
   14ea8:	mov	sp, fp
   14eac:	pop	{fp, pc}

00014eb0 <table_set_uchar@@Base>:
   14eb0:	push	{fp, lr}
   14eb4:	mov	fp, sp
   14eb8:	sub	sp, sp, #8
   14ebc:	strb	r3, [fp, #-1]
   14ec0:	mov	r3, #20
   14ec4:	str	r3, [sp]
   14ec8:	sub	r3, fp, #1
   14ecc:	bl	14920 <table_set@@Base>
   14ed0:	mov	sp, fp
   14ed4:	pop	{fp, pc}

00014ed8 <table_set_ptr@@Base>:
   14ed8:	push	{fp, lr}
   14edc:	mov	fp, sp
   14ee0:	sub	sp, sp, #8
   14ee4:	mov	ip, #23
   14ee8:	str	ip, [sp]
   14eec:	bl	14920 <table_set@@Base>
   14ef0:	mov	sp, fp
   14ef4:	pop	{fp, pc}

00014ef8 <table_column_sort@@Base>:
   14ef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14efc:	add	fp, sp, #28
   14f00:	sub	sp, sp, #36	; 0x24
   14f04:	str	r2, [sp, #8]
   14f08:	str	r1, [sp, #12]
   14f0c:	mov	r4, r0
   14f10:	str	r3, [sp, #4]
   14f14:	cmp	r3, #1
   14f18:	blt	15090 <table_column_sort@@Base+0x198>
   14f1c:	ldr	r0, [sp, #12]
   14f20:	sub	r5, r0, #4
   14f24:	mov	r8, #0
   14f28:	mov	r0, r4
   14f2c:	bl	146d8 <table_get_row_length@@Base>
   14f30:	mov	sl, r0
   14f34:	cmp	r8, #0
   14f38:	beq	1505c <table_column_sort@@Base+0x164>
   14f3c:	ldr	r0, [sp, #12]
   14f40:	add	r0, r0, r8, lsl #2
   14f44:	ldr	r1, [r0, #-4]
   14f48:	mov	r0, r4
   14f4c:	bl	13d48 <table_get_column_compare_function@@Base>
   14f50:	cmp	sl, #1
   14f54:	blt	15080 <table_column_sort@@Base+0x188>
   14f58:	mov	r6, r0
   14f5c:	sub	r0, sl, #1
   14f60:	str	r0, [sp, #16]
   14f64:	mov	r7, #0
   14f68:	mvn	r3, #0
   14f6c:	mvn	r9, #0
   14f70:	str	r8, [sp, #24]
   14f74:	str	sl, [sp, #20]
   14f78:	cmp	r7, #0
   14f7c:	beq	14fe8 <table_column_sort@@Base+0xf0>
   14f80:	str	r9, [sp, #32]
   14f84:	str	r3, [sp, #28]
   14f88:	sub	r9, r7, #1
   14f8c:	ldr	r2, [r5, r8, lsl #2]
   14f90:	mov	r0, r4
   14f94:	mov	r1, r7
   14f98:	bl	1446c <table_get@@Base>
   14f9c:	mov	sl, r0
   14fa0:	ldr	r2, [r5, r8, lsl #2]
   14fa4:	mov	r0, r4
   14fa8:	mov	r1, r9
   14fac:	bl	1446c <table_get@@Base>
   14fb0:	mov	r1, r0
   14fb4:	mov	r0, sl
   14fb8:	blx	r6
   14fbc:	cmp	r0, #0
   14fc0:	bne	15030 <table_column_sort@@Base+0x138>
   14fc4:	sub	r8, r8, #1
   14fc8:	cmp	r8, #1
   14fcc:	bge	14f8c <table_column_sort@@Base+0x94>
   14fd0:	ldr	r0, [sp, #32]
   14fd4:	cmn	r0, #1
   14fd8:	movne	r9, r0
   14fdc:	mov	r3, r7
   14fe0:	ldr	r8, [sp, #24]
   14fe4:	ldr	sl, [sp, #20]
   14fe8:	cmn	r9, #1
   14fec:	beq	15048 <table_column_sort@@Base+0x150>
   14ff0:	cmp	r3, r7
   14ff4:	bne	15004 <table_column_sort@@Base+0x10c>
   14ff8:	ldr	r0, [sp, #16]
   14ffc:	cmp	r3, r0
   15000:	bne	1504c <table_column_sort@@Base+0x154>
   15004:	ldr	r0, [sp, #12]
   15008:	ldr	r1, [r0, r8, lsl #2]
   1500c:	ldr	r0, [sp, #8]
   15010:	ldr	r0, [r0, r8, lsl #2]
   15014:	str	r0, [sp]
   15018:	mov	r0, r4
   1501c:	mov	r2, r9
   15020:	bl	150ac <table_column_sort@@Base+0x1b4>
   15024:	mvn	r9, #0
   15028:	mvn	r3, #0
   1502c:	b	1504c <table_column_sort@@Base+0x154>
   15030:	ldr	r9, [sp, #32]
   15034:	ldr	r8, [sp, #24]
   15038:	ldr	sl, [sp, #20]
   1503c:	ldr	r3, [sp, #28]
   15040:	cmn	r9, #1
   15044:	bne	14ff0 <table_column_sort@@Base+0xf8>
   15048:	mvn	r9, #0
   1504c:	add	r7, r7, #1
   15050:	cmp	r7, sl
   15054:	bne	14f78 <table_column_sort@@Base+0x80>
   15058:	b	15080 <table_column_sort@@Base+0x188>
   1505c:	ldr	r0, [sp, #12]
   15060:	ldr	r1, [r0, r8, lsl #2]
   15064:	ldr	r0, [sp, #8]
   15068:	ldr	r0, [r0, r8, lsl #2]
   1506c:	str	r0, [sp]
   15070:	sub	r3, sl, #1
   15074:	mov	r0, r4
   15078:	mov	r2, #0
   1507c:	bl	150ac <table_column_sort@@Base+0x1b4>
   15080:	add	r8, r8, #1
   15084:	ldr	r0, [sp, #4]
   15088:	cmp	r8, r0
   1508c:	bne	14f28 <table_column_sort@@Base+0x30>
   15090:	mov	r0, r4
   15094:	mvn	r1, #0
   15098:	mvn	r2, #0
   1509c:	mov	r3, #32
   150a0:	sub	sp, fp, #28
   150a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150a8:	b	12ea4 <table_notify@@Base>
   150ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150b0:	add	fp, sp, #24
   150b4:	sub	sp, sp, #8
   150b8:	mov	r4, r3
   150bc:	mov	r5, r2
   150c0:	mov	r8, r1
   150c4:	mov	r7, r0
   150c8:	rsb	r0, r2, #1
   150cc:	add	r0, r0, r3
   150d0:	mov	r1, #4
   150d4:	bl	11f7c <calloc@plt>
   150d8:	mov	r6, r0
   150dc:	ldr	r0, [fp, #8]
   150e0:	str	r4, [sp]
   150e4:	str	r0, [sp, #4]
   150e8:	mov	r0, r7
   150ec:	mov	r1, r6
   150f0:	mov	r2, r8
   150f4:	mov	r3, r5
   150f8:	bl	1510c <table_column_sort@@Base+0x214>
   150fc:	mov	r0, r6
   15100:	sub	sp, fp, #24
   15104:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15108:	b	11fa0 <free@plt>
   1510c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15110:	add	fp, sp, #28
   15114:	sub	sp, sp, #20
   15118:	ldr	r6, [fp, #8]
   1511c:	cmp	r6, r3
   15120:	suble	sp, fp, #28
   15124:	pople	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15128:	mov	r5, r3
   1512c:	mov	r8, r2
   15130:	mov	r4, r1
   15134:	mov	r7, r0
   15138:	ldr	r9, [fp, #12]
   1513c:	add	r0, r6, r3
   15140:	add	sl, r0, r0, lsr #31
   15144:	asr	r0, sl, #1
   15148:	str	r0, [sp, #16]
   1514c:	stm	sp, {r0, r9}
   15150:	mov	r0, r7
   15154:	bl	1510c <table_column_sort@@Base+0x214>
   15158:	stm	sp, {r6, r9}
   1515c:	mov	r0, #1
   15160:	add	r3, r0, sl, asr #1
   15164:	mov	r0, r7
   15168:	mov	r1, r4
   1516c:	mov	r2, r8
   15170:	bl	1510c <table_column_sort@@Base+0x214>
   15174:	ldr	r0, [sp, #16]
   15178:	stm	sp, {r0, r6, r9}
   1517c:	mov	r0, r7
   15180:	mov	r1, r4
   15184:	mov	r2, r8
   15188:	mov	r3, r5
   1518c:	bl	151ac <table_column_sort@@Base+0x2b4>
   15190:	mov	r0, r7
   15194:	mov	r1, r5
   15198:	mov	r2, r6
   1519c:	mov	r3, r4
   151a0:	sub	sp, fp, #28
   151a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151a8:	b	152f8 <table_column_sort@@Base+0x400>
   151ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151b0:	add	fp, sp, #28
   151b4:	sub	sp, sp, #4
   151b8:	mov	r4, r3
   151bc:	mov	sl, r2
   151c0:	mov	r6, r1
   151c4:	mov	r8, r0
   151c8:	mov	r1, r2
   151cc:	bl	13d48 <table_get_column_compare_function@@Base>
   151d0:	str	r0, [sp]
   151d4:	ldr	r7, [fp, #12]
   151d8:	cmp	r7, r4
   151dc:	blt	152f0 <table_column_sort@@Base+0x3f8>
   151e0:	ldr	r1, [fp, #8]
   151e4:	add	r0, r7, #1
   151e8:	sub	r9, r0, r4
   151ec:	add	r5, r1, #1
   151f0:	ldr	r0, [fp, #16]
   151f4:	cmp	r0, #0
   151f8:	beq	15254 <table_column_sort@@Base+0x35c>
   151fc:	ldr	r0, [fp, #8]
   15200:	cmp	r4, r0
   15204:	bgt	152b0 <table_column_sort@@Base+0x3b8>
   15208:	cmp	r5, r7
   1520c:	bgt	152cc <table_column_sort@@Base+0x3d4>
   15210:	mov	r0, r8
   15214:	mov	r1, r4
   15218:	mov	r2, sl
   1521c:	bl	1446c <table_get@@Base>
   15220:	mov	r7, r0
   15224:	mov	r0, r8
   15228:	mov	r1, r5
   1522c:	mov	r2, sl
   15230:	bl	1446c <table_get@@Base>
   15234:	mov	r1, r0
   15238:	mov	r0, r7
   1523c:	ldr	r7, [fp, #12]
   15240:	ldr	r2, [sp]
   15244:	blx	r2
   15248:	cmp	r0, #1
   1524c:	bge	152cc <table_column_sort@@Base+0x3d4>
   15250:	b	152b0 <table_column_sort@@Base+0x3b8>
   15254:	ldr	r0, [fp, #8]
   15258:	cmp	r4, r0
   1525c:	bgt	152b0 <table_column_sort@@Base+0x3b8>
   15260:	cmp	r5, r7
   15264:	bgt	152cc <table_column_sort@@Base+0x3d4>
   15268:	mov	r0, r8
   1526c:	mov	r1, r4
   15270:	mov	r2, sl
   15274:	bl	1446c <table_get@@Base>
   15278:	mov	r7, sl
   1527c:	mov	sl, r0
   15280:	mov	r0, r8
   15284:	mov	r1, r5
   15288:	mov	r2, r7
   1528c:	bl	1446c <table_get@@Base>
   15290:	mov	r1, r0
   15294:	mov	r0, sl
   15298:	mov	sl, r7
   1529c:	ldr	r7, [fp, #12]
   152a0:	ldr	r2, [sp]
   152a4:	blx	r2
   152a8:	cmn	r0, #1
   152ac:	ble	152cc <table_column_sort@@Base+0x3d4>
   152b0:	mov	r0, r8
   152b4:	mov	r1, r5
   152b8:	bl	14668 <table_get_row_ptr@@Base>
   152bc:	ldr	r0, [r0]
   152c0:	str	r0, [r6]
   152c4:	add	r5, r5, #1
   152c8:	b	152e4 <table_column_sort@@Base+0x3ec>
   152cc:	mov	r0, r8
   152d0:	mov	r1, r4
   152d4:	bl	14668 <table_get_row_ptr@@Base>
   152d8:	ldr	r0, [r0]
   152dc:	str	r0, [r6]
   152e0:	add	r4, r4, #1
   152e4:	add	r6, r6, #4
   152e8:	subs	r9, r9, #1
   152ec:	bne	151f0 <table_column_sort@@Base+0x2f8>
   152f0:	sub	sp, fp, #28
   152f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152f8:	push	{r4, r5, r6, r7, fp, lr}
   152fc:	add	fp, sp, #16
   15300:	cmp	r2, r1
   15304:	poplt	{r4, r5, r6, r7, fp, pc}
   15308:	mov	r4, r3
   1530c:	mov	r5, r1
   15310:	mov	r6, r0
   15314:	add	r7, r2, #1
   15318:	mov	r0, r6
   1531c:	mov	r1, r5
   15320:	mov	r2, r4
   15324:	bl	14910 <table_set_row_ptr@@Base>
   15328:	add	r5, r5, #1
   1532c:	add	r4, r4, #4
   15330:	cmp	r7, r5
   15334:	bne	15318 <table_column_sort@@Base+0x420>
   15338:	pop	{r4, r5, r6, r7, fp, pc}

0001533c <__libc_csu_init@@Base>:
   1533c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15340:	mov	r7, r0
   15344:	ldr	r6, [pc, #72]	; 15394 <__libc_csu_init@@Base+0x58>
   15348:	ldr	r5, [pc, #72]	; 15398 <__libc_csu_init@@Base+0x5c>
   1534c:	add	r6, pc, r6
   15350:	add	r5, pc, r5
   15354:	sub	r6, r6, r5
   15358:	mov	r8, r1
   1535c:	mov	r9, r2
   15360:	bl	11f5c <calloc@plt-0x20>
   15364:	asrs	r6, r6, #2
   15368:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1536c:	mov	r4, #0
   15370:	add	r4, r4, #1
   15374:	ldr	r3, [r5], #4
   15378:	mov	r2, r9
   1537c:	mov	r1, r8
   15380:	mov	r0, r7
   15384:	blx	r3
   15388:	cmp	r6, r4
   1538c:	bne	15370 <__libc_csu_init@@Base+0x34>
   15390:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15394:			; <UNDEFINED> instruction: 0x00010bb8
   15398:			; <UNDEFINED> instruction: 0x00010bb0

0001539c <__libc_csu_fini@@Base>:
   1539c:	bx	lr

Disassembly of section .fini:

000153a0 <.fini>:
   153a0:	push	{r3, lr}
   153a4:	pop	{r3, pc}
