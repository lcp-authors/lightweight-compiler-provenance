
../repos/coreutils/src/uname:     file format elf32-littlearm


Disassembly of section .init:

00010b1c <.init>:
   10b1c:	push	{r3, lr}
   10b20:	bl	10da0 <putchar_unlocked@plt+0x48>
   10b24:	pop	{r3, pc}

Disassembly of section .plt:

00010b28 <calloc@plt-0x14>:
   10b28:	push	{lr}		; (str lr, [sp, #-4]!)
   10b2c:	ldr	lr, [pc, #4]	; 10b38 <calloc@plt-0x4>
   10b30:	add	lr, pc, lr
   10b34:	ldr	pc, [lr, #8]!
   10b38:	andeq	r7, r1, r8, asr #9

00010b3c <calloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #94208	; 0x17000
   10b44:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b48 <fputs_unlocked@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #94208	; 0x17000
   10b50:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b54 <raise@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #94208	; 0x17000
   10b5c:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b60 <strcmp@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #94208	; 0x17000
   10b68:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b6c <printf@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #94208	; 0x17000
   10b74:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b78 <fflush@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #94208	; 0x17000
   10b80:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b84 <free@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #94208	; 0x17000
   10b8c:	ldr	pc, [ip, #1176]!	; 0x498

00010b90 <_exit@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #94208	; 0x17000
   10b98:	ldr	pc, [ip, #1168]!	; 0x490

00010b9c <memcpy@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #94208	; 0x17000
   10ba4:	ldr	pc, [ip, #1160]!	; 0x488

00010ba8 <mbsinit@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #94208	; 0x17000
   10bb0:	ldr	pc, [ip, #1152]!	; 0x480

00010bb4 <memcmp@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #94208	; 0x17000
   10bbc:	ldr	pc, [ip, #1144]!	; 0x478

00010bc0 <fputc_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #94208	; 0x17000
   10bc8:	ldr	pc, [ip, #1136]!	; 0x470

00010bcc <uname@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #94208	; 0x17000
   10bd4:	ldr	pc, [ip, #1128]!	; 0x468

00010bd8 <realloc@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #94208	; 0x17000
   10be0:	ldr	pc, [ip, #1120]!	; 0x460

00010be4 <textdomain@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #94208	; 0x17000
   10bec:	ldr	pc, [ip, #1112]!	; 0x458

00010bf0 <iswprint@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #94208	; 0x17000
   10bf8:	ldr	pc, [ip, #1104]!	; 0x450

00010bfc <fwrite@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #94208	; 0x17000
   10c04:	ldr	pc, [ip, #1096]!	; 0x448

00010c08 <lseek64@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #94208	; 0x17000
   10c10:	ldr	pc, [ip, #1088]!	; 0x440

00010c14 <__ctype_get_mb_cur_max@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #94208	; 0x17000
   10c1c:	ldr	pc, [ip, #1080]!	; 0x438

00010c20 <__fpending@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #94208	; 0x17000
   10c28:	ldr	pc, [ip, #1072]!	; 0x430

00010c2c <ferror_unlocked@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #94208	; 0x17000
   10c34:	ldr	pc, [ip, #1064]!	; 0x428

00010c38 <mbrtowc@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #94208	; 0x17000
   10c40:	ldr	pc, [ip, #1056]!	; 0x420

00010c44 <error@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #94208	; 0x17000
   10c4c:	ldr	pc, [ip, #1048]!	; 0x418

00010c50 <malloc@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #94208	; 0x17000
   10c58:	ldr	pc, [ip, #1040]!	; 0x410

00010c5c <__libc_start_main@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #94208	; 0x17000
   10c64:	ldr	pc, [ip, #1032]!	; 0x408

00010c68 <__freading@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #94208	; 0x17000
   10c70:	ldr	pc, [ip, #1024]!	; 0x400

00010c74 <__gmon_start__@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #94208	; 0x17000
   10c7c:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c80 <getopt_long@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #94208	; 0x17000
   10c88:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c8c <__ctype_b_loc@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #94208	; 0x17000
   10c94:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c98 <exit@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #94208	; 0x17000
   10ca0:	ldr	pc, [ip, #992]!	; 0x3e0

00010ca4 <gettext@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #94208	; 0x17000
   10cac:	ldr	pc, [ip, #984]!	; 0x3d8

00010cb0 <strlen@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #94208	; 0x17000
   10cb8:	ldr	pc, [ip, #976]!	; 0x3d0

00010cbc <fprintf@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #94208	; 0x17000
   10cc4:	ldr	pc, [ip, #968]!	; 0x3c8

00010cc8 <__errno_location@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #94208	; 0x17000
   10cd0:	ldr	pc, [ip, #960]!	; 0x3c0

00010cd4 <__cxa_atexit@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #94208	; 0x17000
   10cdc:	ldr	pc, [ip, #952]!	; 0x3b8

00010ce0 <memset@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #94208	; 0x17000
   10ce8:	ldr	pc, [ip, #944]!	; 0x3b0

00010cec <fileno@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #94208	; 0x17000
   10cf4:	ldr	pc, [ip, #936]!	; 0x3a8

00010cf8 <fclose@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #94208	; 0x17000
   10d00:	ldr	pc, [ip, #928]!	; 0x3a0

00010d04 <fseeko64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #94208	; 0x17000
   10d0c:	ldr	pc, [ip, #920]!	; 0x398

00010d10 <setlocale@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #94208	; 0x17000
   10d18:	ldr	pc, [ip, #912]!	; 0x390

00010d1c <strrchr@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #94208	; 0x17000
   10d24:	ldr	pc, [ip, #904]!	; 0x388

00010d28 <nl_langinfo@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #94208	; 0x17000
   10d30:	ldr	pc, [ip, #896]!	; 0x380

00010d34 <bindtextdomain@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #94208	; 0x17000
   10d3c:	ldr	pc, [ip, #888]!	; 0x378

00010d40 <strncmp@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #94208	; 0x17000
   10d48:	ldr	pc, [ip, #880]!	; 0x370

00010d4c <abort@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #94208	; 0x17000
   10d54:	ldr	pc, [ip, #872]!	; 0x368

00010d58 <putchar_unlocked@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #94208	; 0x17000
   10d60:	ldr	pc, [ip, #864]!	; 0x360

Disassembly of section .text:

00010d64 <.text>:
   10d64:	mov	fp, #0
   10d68:	mov	lr, #0
   10d6c:	pop	{r1}		; (ldr r1, [sp], #4)
   10d70:	mov	r2, sp
   10d74:	push	{r2}		; (str r2, [sp, #-4]!)
   10d78:	push	{r0}		; (str r0, [sp, #-4]!)
   10d7c:	ldr	ip, [pc, #16]	; 10d94 <putchar_unlocked@plt+0x3c>
   10d80:	push	{ip}		; (str ip, [sp, #-4]!)
   10d84:	ldr	r0, [pc, #12]	; 10d98 <putchar_unlocked@plt+0x40>
   10d88:	ldr	r3, [pc, #12]	; 10d9c <putchar_unlocked@plt+0x44>
   10d8c:	bl	10c5c <__libc_start_main@plt>
   10d90:	bl	10d4c <abort@plt>
   10d94:	andeq	r6, r1, ip, lsr r9
   10d98:	andeq	r1, r1, ip, asr #10
   10d9c:	ldrdeq	r6, [r1], -ip
   10da0:	ldr	r3, [pc, #20]	; 10dbc <putchar_unlocked@plt+0x64>
   10da4:	ldr	r2, [pc, #20]	; 10dc0 <putchar_unlocked@plt+0x68>
   10da8:	add	r3, pc, r3
   10dac:	ldr	r2, [r3, r2]
   10db0:	cmp	r2, #0
   10db4:	bxeq	lr
   10db8:	b	10c74 <__gmon_start__@plt>
   10dbc:	andeq	r7, r1, r0, asr r2
   10dc0:	andeq	r0, r0, r4, asr #1
   10dc4:	ldr	r3, [pc, #28]	; 10de8 <putchar_unlocked@plt+0x90>
   10dc8:	ldr	r0, [pc, #28]	; 10dec <putchar_unlocked@plt+0x94>
   10dcc:	sub	r3, r3, r0
   10dd0:	cmp	r3, #6
   10dd4:	bxls	lr
   10dd8:	ldr	r3, [pc, #16]	; 10df0 <putchar_unlocked@plt+0x98>
   10ddc:	cmp	r3, #0
   10de0:	bxeq	lr
   10de4:	bx	r3
   10de8:	andeq	r8, r2, pc, lsl r1
   10dec:	andeq	r8, r2, ip, lsl r1
   10df0:	andeq	r0, r0, r0
   10df4:	ldr	r1, [pc, #36]	; 10e20 <putchar_unlocked@plt+0xc8>
   10df8:	ldr	r0, [pc, #36]	; 10e24 <putchar_unlocked@plt+0xcc>
   10dfc:	sub	r1, r1, r0
   10e00:	asr	r1, r1, #2
   10e04:	add	r1, r1, r1, lsr #31
   10e08:	asrs	r1, r1, #1
   10e0c:	bxeq	lr
   10e10:	ldr	r3, [pc, #16]	; 10e28 <putchar_unlocked@plt+0xd0>
   10e14:	cmp	r3, #0
   10e18:	bxeq	lr
   10e1c:	bx	r3
   10e20:	andeq	r8, r2, ip, lsl r1
   10e24:	andeq	r8, r2, ip, lsl r1
   10e28:	andeq	r0, r0, r0
   10e2c:	push	{r4, lr}
   10e30:	ldr	r4, [pc, #24]	; 10e50 <putchar_unlocked@plt+0xf8>
   10e34:	ldrb	r3, [r4]
   10e38:	cmp	r3, #0
   10e3c:	popne	{r4, pc}
   10e40:	bl	10dc4 <putchar_unlocked@plt+0x6c>
   10e44:	mov	r3, #1
   10e48:	strb	r3, [r4]
   10e4c:	pop	{r4, pc}
   10e50:	andeq	r8, r2, r8, lsr r1
   10e54:	ldr	r0, [pc, #40]	; 10e84 <putchar_unlocked@plt+0x12c>
   10e58:	ldr	r3, [r0]
   10e5c:	cmp	r3, #0
   10e60:	bne	10e68 <putchar_unlocked@plt+0x110>
   10e64:	b	10df4 <putchar_unlocked@plt+0x9c>
   10e68:	ldr	r3, [pc, #24]	; 10e88 <putchar_unlocked@plt+0x130>
   10e6c:	cmp	r3, #0
   10e70:	beq	10e64 <putchar_unlocked@plt+0x10c>
   10e74:	push	{r4, lr}
   10e78:	blx	r3
   10e7c:	pop	{r4, lr}
   10e80:	b	10df4 <putchar_unlocked@plt+0x9c>
   10e84:	andeq	r7, r2, r4, lsl pc
   10e88:	andeq	r0, r0, r0
   10e8c:	push	{fp, lr}
   10e90:	add	fp, sp, #4
   10e94:	sub	sp, sp, #80	; 0x50
   10e98:	str	r0, [fp, #-80]	; 0xffffffb0
   10e9c:	ldr	r3, [pc, #348]	; 11000 <putchar_unlocked@plt+0x2a8>
   10ea0:	sub	ip, fp, #72	; 0x48
   10ea4:	mov	lr, r3
   10ea8:	ldm	lr!, {r0, r1, r2, r3}
   10eac:	stmia	ip!, {r0, r1, r2, r3}
   10eb0:	ldm	lr!, {r0, r1, r2, r3}
   10eb4:	stmia	ip!, {r0, r1, r2, r3}
   10eb8:	ldm	lr!, {r0, r1, r2, r3}
   10ebc:	stmia	ip!, {r0, r1, r2, r3}
   10ec0:	ldm	lr, {r0, r1}
   10ec4:	stm	ip, {r0, r1}
   10ec8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10ecc:	str	r3, [fp, #-8]
   10ed0:	sub	r3, fp, #72	; 0x48
   10ed4:	str	r3, [fp, #-12]
   10ed8:	b	10ee8 <putchar_unlocked@plt+0x190>
   10edc:	ldr	r3, [fp, #-12]
   10ee0:	add	r3, r3, #8
   10ee4:	str	r3, [fp, #-12]
   10ee8:	ldr	r3, [fp, #-12]
   10eec:	ldr	r3, [r3]
   10ef0:	cmp	r3, #0
   10ef4:	beq	10f18 <putchar_unlocked@plt+0x1c0>
   10ef8:	ldr	r3, [fp, #-12]
   10efc:	ldr	r3, [r3]
   10f00:	mov	r1, r3
   10f04:	ldr	r0, [fp, #-80]	; 0xffffffb0
   10f08:	bl	10b60 <strcmp@plt>
   10f0c:	mov	r3, r0
   10f10:	cmp	r3, #0
   10f14:	bne	10edc <putchar_unlocked@plt+0x184>
   10f18:	ldr	r3, [fp, #-12]
   10f1c:	ldr	r3, [r3, #4]
   10f20:	cmp	r3, #0
   10f24:	beq	10f34 <putchar_unlocked@plt+0x1dc>
   10f28:	ldr	r3, [fp, #-12]
   10f2c:	ldr	r3, [r3, #4]
   10f30:	str	r3, [fp, #-8]
   10f34:	ldr	r0, [pc, #200]	; 11004 <putchar_unlocked@plt+0x2ac>
   10f38:	bl	10ca4 <gettext@plt>
   10f3c:	mov	r3, r0
   10f40:	ldr	r2, [pc, #192]	; 11008 <putchar_unlocked@plt+0x2b0>
   10f44:	ldr	r1, [pc, #192]	; 1100c <putchar_unlocked@plt+0x2b4>
   10f48:	mov	r0, r3
   10f4c:	bl	10b6c <printf@plt>
   10f50:	mov	r1, #0
   10f54:	mov	r0, #5
   10f58:	bl	10d10 <setlocale@plt>
   10f5c:	str	r0, [fp, #-16]
   10f60:	ldr	r3, [fp, #-16]
   10f64:	cmp	r3, #0
   10f68:	beq	10fa8 <putchar_unlocked@plt+0x250>
   10f6c:	mov	r2, #3
   10f70:	ldr	r1, [pc, #152]	; 11010 <putchar_unlocked@plt+0x2b8>
   10f74:	ldr	r0, [fp, #-16]
   10f78:	bl	10d40 <strncmp@plt>
   10f7c:	mov	r3, r0
   10f80:	cmp	r3, #0
   10f84:	beq	10fa8 <putchar_unlocked@plt+0x250>
   10f88:	ldr	r0, [pc, #132]	; 11014 <putchar_unlocked@plt+0x2bc>
   10f8c:	bl	10ca4 <gettext@plt>
   10f90:	mov	r2, r0
   10f94:	ldr	r3, [pc, #124]	; 11018 <putchar_unlocked@plt+0x2c0>
   10f98:	ldr	r3, [r3]
   10f9c:	mov	r1, r3
   10fa0:	mov	r0, r2
   10fa4:	bl	10b48 <fputs_unlocked@plt>
   10fa8:	ldr	r0, [pc, #108]	; 1101c <putchar_unlocked@plt+0x2c4>
   10fac:	bl	10ca4 <gettext@plt>
   10fb0:	mov	r3, r0
   10fb4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   10fb8:	ldr	r1, [pc, #72]	; 11008 <putchar_unlocked@plt+0x2b0>
   10fbc:	mov	r0, r3
   10fc0:	bl	10b6c <printf@plt>
   10fc4:	ldr	r0, [pc, #84]	; 11020 <putchar_unlocked@plt+0x2c8>
   10fc8:	bl	10ca4 <gettext@plt>
   10fcc:	ldr	r2, [fp, #-8]
   10fd0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   10fd4:	cmp	r2, r3
   10fd8:	bne	10fe4 <putchar_unlocked@plt+0x28c>
   10fdc:	ldr	r3, [pc, #64]	; 11024 <putchar_unlocked@plt+0x2cc>
   10fe0:	b	10fe8 <putchar_unlocked@plt+0x290>
   10fe4:	ldr	r3, [pc, #60]	; 11028 <putchar_unlocked@plt+0x2d0>
   10fe8:	mov	r2, r3
   10fec:	ldr	r1, [fp, #-8]
   10ff0:	bl	10b6c <printf@plt>
   10ff4:	nop			; (mov r0, r0)
   10ff8:	sub	sp, fp, #4
   10ffc:	pop	{fp, pc}
   11000:	ldrdeq	r6, [r1], -r8
   11004:	andeq	r6, r1, r4, ror #18
   11008:	andeq	r6, r1, ip, ror r9
   1100c:	andeq	r6, r1, r4, lsr #19
   11010:			; <UNDEFINED> instruction: 0x000169b4
   11014:			; <UNDEFINED> instruction: 0x000169b8
   11018:	andeq	r8, r2, r4, lsr r1
   1101c:	andeq	r6, r1, r0, lsl #20
   11020:	andeq	r6, r1, ip, lsl sl
   11024:	andeq	r6, r1, r0, asr sl
   11028:	andeq	r6, r1, ip, asr sl
   1102c:	push	{r4, fp, lr}
   11030:	add	fp, sp, #8
   11034:	sub	sp, sp, #12
   11038:	str	r0, [fp, #-16]
   1103c:	ldr	r3, [fp, #-16]
   11040:	cmp	r3, #0
   11044:	beq	11074 <putchar_unlocked@plt+0x31c>
   11048:	ldr	r3, [pc, #292]	; 11174 <putchar_unlocked@plt+0x41c>
   1104c:	ldr	r4, [r3]
   11050:	ldr	r0, [pc, #288]	; 11178 <putchar_unlocked@plt+0x420>
   11054:	bl	10ca4 <gettext@plt>
   11058:	mov	r1, r0
   1105c:	ldr	r3, [pc, #280]	; 1117c <putchar_unlocked@plt+0x424>
   11060:	ldr	r3, [r3]
   11064:	mov	r2, r3
   11068:	mov	r0, r4
   1106c:	bl	10cbc <fprintf@plt>
   11070:	b	1116c <putchar_unlocked@plt+0x414>
   11074:	ldr	r0, [pc, #260]	; 11180 <putchar_unlocked@plt+0x428>
   11078:	bl	10ca4 <gettext@plt>
   1107c:	mov	r2, r0
   11080:	ldr	r3, [pc, #244]	; 1117c <putchar_unlocked@plt+0x424>
   11084:	ldr	r3, [r3]
   11088:	mov	r1, r3
   1108c:	mov	r0, r2
   11090:	bl	10b6c <printf@plt>
   11094:	ldr	r3, [pc, #232]	; 11184 <putchar_unlocked@plt+0x42c>
   11098:	ldr	r3, [r3]
   1109c:	cmp	r3, #1
   110a0:	bne	110e8 <putchar_unlocked@plt+0x390>
   110a4:	ldr	r0, [pc, #220]	; 11188 <putchar_unlocked@plt+0x430>
   110a8:	bl	10ca4 <gettext@plt>
   110ac:	mov	r2, r0
   110b0:	ldr	r3, [pc, #212]	; 1118c <putchar_unlocked@plt+0x434>
   110b4:	ldr	r3, [r3]
   110b8:	mov	r1, r3
   110bc:	mov	r0, r2
   110c0:	bl	10b48 <fputs_unlocked@plt>
   110c4:	ldr	r0, [pc, #196]	; 11190 <putchar_unlocked@plt+0x438>
   110c8:	bl	10ca4 <gettext@plt>
   110cc:	mov	r2, r0
   110d0:	ldr	r3, [pc, #180]	; 1118c <putchar_unlocked@plt+0x434>
   110d4:	ldr	r3, [r3]
   110d8:	mov	r1, r3
   110dc:	mov	r0, r2
   110e0:	bl	10b48 <fputs_unlocked@plt>
   110e4:	b	11108 <putchar_unlocked@plt+0x3b0>
   110e8:	ldr	r0, [pc, #164]	; 11194 <putchar_unlocked@plt+0x43c>
   110ec:	bl	10ca4 <gettext@plt>
   110f0:	mov	r2, r0
   110f4:	ldr	r3, [pc, #144]	; 1118c <putchar_unlocked@plt+0x434>
   110f8:	ldr	r3, [r3]
   110fc:	mov	r1, r3
   11100:	mov	r0, r2
   11104:	bl	10b48 <fputs_unlocked@plt>
   11108:	ldr	r0, [pc, #136]	; 11198 <putchar_unlocked@plt+0x440>
   1110c:	bl	10ca4 <gettext@plt>
   11110:	mov	r2, r0
   11114:	ldr	r3, [pc, #112]	; 1118c <putchar_unlocked@plt+0x434>
   11118:	ldr	r3, [r3]
   1111c:	mov	r1, r3
   11120:	mov	r0, r2
   11124:	bl	10b48 <fputs_unlocked@plt>
   11128:	ldr	r0, [pc, #108]	; 1119c <putchar_unlocked@plt+0x444>
   1112c:	bl	10ca4 <gettext@plt>
   11130:	mov	r2, r0
   11134:	ldr	r3, [pc, #80]	; 1118c <putchar_unlocked@plt+0x434>
   11138:	ldr	r3, [r3]
   1113c:	mov	r1, r3
   11140:	mov	r0, r2
   11144:	bl	10b48 <fputs_unlocked@plt>
   11148:	ldr	r3, [pc, #52]	; 11184 <putchar_unlocked@plt+0x42c>
   1114c:	ldr	r3, [r3]
   11150:	cmp	r3, #1
   11154:	bne	11160 <putchar_unlocked@plt+0x408>
   11158:	ldr	r3, [pc, #64]	; 111a0 <putchar_unlocked@plt+0x448>
   1115c:	b	11164 <putchar_unlocked@plt+0x40c>
   11160:	ldr	r3, [pc, #60]	; 111a4 <putchar_unlocked@plt+0x44c>
   11164:	mov	r0, r3
   11168:	bl	10e8c <putchar_unlocked@plt+0x134>
   1116c:	ldr	r0, [fp, #-16]
   11170:	bl	10c98 <exit@plt>
   11174:	andeq	r8, r2, r0, lsr r1
   11178:			; <UNDEFINED> instruction: 0x00016cb8
   1117c:	andeq	r8, r2, r4, asr #2
   11180:	andeq	r6, r1, r0, ror #25
   11184:	ldrdeq	r8, [r2], -r0
   11188:	strdeq	r6, [r1], -r8
   1118c:	andeq	r8, r2, r4, lsr r1
   11190:	andeq	r6, r1, r4, ror #28
   11194:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11198:			; <UNDEFINED> instruction: 0x00016fb4
   1119c:	andeq	r6, r1, r4, ror #31
   111a0:	andeq	r7, r1, ip, lsl r0
   111a4:	andeq	r7, r1, r4, lsr #32
   111a8:	push	{fp, lr}
   111ac:	add	fp, sp, #4
   111b0:	sub	sp, sp, #8
   111b4:	str	r0, [fp, #-8]
   111b8:	ldr	r3, [pc, #60]	; 111fc <putchar_unlocked@plt+0x4a4>
   111bc:	ldrb	r3, [r3]
   111c0:	cmp	r3, #0
   111c4:	beq	111d0 <putchar_unlocked@plt+0x478>
   111c8:	mov	r0, #32
   111cc:	bl	10d58 <putchar_unlocked@plt>
   111d0:	ldr	r3, [pc, #36]	; 111fc <putchar_unlocked@plt+0x4a4>
   111d4:	mov	r2, #1
   111d8:	strb	r2, [r3]
   111dc:	ldr	r3, [pc, #28]	; 11200 <putchar_unlocked@plt+0x4a8>
   111e0:	ldr	r3, [r3]
   111e4:	mov	r1, r3
   111e8:	ldr	r0, [fp, #-8]
   111ec:	bl	10b48 <fputs_unlocked@plt>
   111f0:	nop			; (mov r0, r0)
   111f4:	sub	sp, fp, #4
   111f8:	pop	{fp, pc}
   111fc:	andeq	r8, r2, r9, lsr r1
   11200:	andeq	r8, r2, r4, lsr r1
   11204:	push	{fp, lr}
   11208:	add	fp, sp, #4
   1120c:	sub	sp, sp, #8
   11210:	str	r0, [fp, #-8]
   11214:	str	r1, [fp, #-12]
   11218:	ldr	r0, [fp, #-8]
   1121c:	bl	111a8 <putchar_unlocked@plt+0x450>
   11220:	nop			; (mov r0, r0)
   11224:	sub	sp, fp, #4
   11228:	pop	{fp, pc}
   1122c:	push	{r4, fp, lr}
   11230:	add	fp, sp, #8
   11234:	sub	sp, sp, #36	; 0x24
   11238:	str	r0, [fp, #-24]	; 0xffffffe8
   1123c:	str	r1, [fp, #-28]	; 0xffffffe4
   11240:	mov	r3, #0
   11244:	str	r3, [fp, #-16]
   11248:	ldr	r3, [pc, #708]	; 11514 <putchar_unlocked@plt+0x7bc>
   1124c:	ldr	r3, [r3]
   11250:	cmp	r3, #2
   11254:	bne	1147c <putchar_unlocked@plt+0x724>
   11258:	mov	r3, #0
   1125c:	str	r3, [sp]
   11260:	ldr	r3, [pc, #688]	; 11518 <putchar_unlocked@plt+0x7c0>
   11264:	ldr	r2, [pc, #688]	; 1151c <putchar_unlocked@plt+0x7c4>
   11268:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1126c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11270:	bl	10c80 <getopt_long@plt>
   11274:	str	r0, [fp, #-20]	; 0xffffffec
   11278:	ldr	r3, [fp, #-20]	; 0xffffffec
   1127c:	cmn	r3, #1
   11280:	beq	11300 <putchar_unlocked@plt+0x5a8>
   11284:	ldr	r3, [fp, #-20]	; 0xffffffec
   11288:	cmn	r3, #3
   1128c:	beq	112a0 <putchar_unlocked@plt+0x548>
   11290:	cmn	r3, #2
   11294:	bne	112f8 <putchar_unlocked@plt+0x5a0>
   11298:	mov	r0, #0
   1129c:	bl	1102c <putchar_unlocked@plt+0x2d4>
   112a0:	ldr	r3, [pc, #632]	; 11520 <putchar_unlocked@plt+0x7c8>
   112a4:	ldr	r0, [r3]
   112a8:	ldr	r3, [pc, #612]	; 11514 <putchar_unlocked@plt+0x7bc>
   112ac:	ldr	r3, [r3]
   112b0:	cmp	r3, #1
   112b4:	bne	112c0 <putchar_unlocked@plt+0x568>
   112b8:	ldr	r1, [pc, #612]	; 11524 <putchar_unlocked@plt+0x7cc>
   112bc:	b	112c4 <putchar_unlocked@plt+0x56c>
   112c0:	ldr	r1, [pc, #608]	; 11528 <putchar_unlocked@plt+0x7d0>
   112c4:	ldr	r3, [pc, #608]	; 1152c <putchar_unlocked@plt+0x7d4>
   112c8:	ldr	r2, [r3]
   112cc:	mov	r3, #0
   112d0:	str	r3, [sp, #8]
   112d4:	ldr	r3, [pc, #596]	; 11530 <putchar_unlocked@plt+0x7d8>
   112d8:	str	r3, [sp, #4]
   112dc:	ldr	r3, [pc, #592]	; 11534 <putchar_unlocked@plt+0x7dc>
   112e0:	str	r3, [sp]
   112e4:	mov	r3, r2
   112e8:	ldr	r2, [pc, #584]	; 11538 <putchar_unlocked@plt+0x7e0>
   112ec:	bl	14734 <putchar_unlocked@plt+0x39dc>
   112f0:	mov	r0, #0
   112f4:	bl	10c98 <exit@plt>
   112f8:	mov	r0, #1
   112fc:	bl	1102c <putchar_unlocked@plt+0x2d4>
   11300:	mov	r3, #16
   11304:	str	r3, [fp, #-16]
   11308:	b	114a8 <putchar_unlocked@plt+0x750>
   1130c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11310:	cmp	r3, #110	; 0x6e
   11314:	beq	113ac <putchar_unlocked@plt+0x654>
   11318:	cmp	r3, #110	; 0x6e
   1131c:	bgt	11358 <putchar_unlocked@plt+0x600>
   11320:	cmp	r3, #97	; 0x61
   11324:	beq	11390 <putchar_unlocked@plt+0x638>
   11328:	cmp	r3, #97	; 0x61
   1132c:	bgt	11344 <putchar_unlocked@plt+0x5ec>
   11330:	cmn	r3, #3
   11334:	beq	11424 <putchar_unlocked@plt+0x6cc>
   11338:	cmn	r3, #2
   1133c:	beq	1141c <putchar_unlocked@plt+0x6c4>
   11340:	b	11474 <putchar_unlocked@plt+0x71c>
   11344:	cmp	r3, #105	; 0x69
   11348:	beq	113fc <putchar_unlocked@plt+0x6a4>
   1134c:	cmp	r3, #109	; 0x6d
   11350:	beq	113dc <putchar_unlocked@plt+0x684>
   11354:	b	11474 <putchar_unlocked@plt+0x71c>
   11358:	cmp	r3, #114	; 0x72
   1135c:	beq	113bc <putchar_unlocked@plt+0x664>
   11360:	cmp	r3, #114	; 0x72
   11364:	bgt	1137c <putchar_unlocked@plt+0x624>
   11368:	cmp	r3, #111	; 0x6f
   1136c:	beq	1140c <putchar_unlocked@plt+0x6b4>
   11370:	cmp	r3, #112	; 0x70
   11374:	beq	113ec <putchar_unlocked@plt+0x694>
   11378:	b	11474 <putchar_unlocked@plt+0x71c>
   1137c:	cmp	r3, #115	; 0x73
   11380:	beq	1139c <putchar_unlocked@plt+0x644>
   11384:	cmp	r3, #118	; 0x76
   11388:	beq	113cc <putchar_unlocked@plt+0x674>
   1138c:	b	11474 <putchar_unlocked@plt+0x71c>
   11390:	mvn	r3, #0
   11394:	str	r3, [fp, #-16]
   11398:	b	1147c <putchar_unlocked@plt+0x724>
   1139c:	ldr	r3, [fp, #-16]
   113a0:	orr	r3, r3, #1
   113a4:	str	r3, [fp, #-16]
   113a8:	b	1147c <putchar_unlocked@plt+0x724>
   113ac:	ldr	r3, [fp, #-16]
   113b0:	orr	r3, r3, #2
   113b4:	str	r3, [fp, #-16]
   113b8:	b	1147c <putchar_unlocked@plt+0x724>
   113bc:	ldr	r3, [fp, #-16]
   113c0:	orr	r3, r3, #4
   113c4:	str	r3, [fp, #-16]
   113c8:	b	1147c <putchar_unlocked@plt+0x724>
   113cc:	ldr	r3, [fp, #-16]
   113d0:	orr	r3, r3, #8
   113d4:	str	r3, [fp, #-16]
   113d8:	b	1147c <putchar_unlocked@plt+0x724>
   113dc:	ldr	r3, [fp, #-16]
   113e0:	orr	r3, r3, #16
   113e4:	str	r3, [fp, #-16]
   113e8:	b	1147c <putchar_unlocked@plt+0x724>
   113ec:	ldr	r3, [fp, #-16]
   113f0:	orr	r3, r3, #32
   113f4:	str	r3, [fp, #-16]
   113f8:	b	1147c <putchar_unlocked@plt+0x724>
   113fc:	ldr	r3, [fp, #-16]
   11400:	orr	r3, r3, #64	; 0x40
   11404:	str	r3, [fp, #-16]
   11408:	b	1147c <putchar_unlocked@plt+0x724>
   1140c:	ldr	r3, [fp, #-16]
   11410:	orr	r3, r3, #128	; 0x80
   11414:	str	r3, [fp, #-16]
   11418:	b	1147c <putchar_unlocked@plt+0x724>
   1141c:	mov	r0, #0
   11420:	bl	1102c <putchar_unlocked@plt+0x2d4>
   11424:	ldr	r3, [pc, #244]	; 11520 <putchar_unlocked@plt+0x7c8>
   11428:	ldr	r0, [r3]
   1142c:	ldr	r3, [pc, #224]	; 11514 <putchar_unlocked@plt+0x7bc>
   11430:	ldr	r3, [r3]
   11434:	cmp	r3, #1
   11438:	bne	11444 <putchar_unlocked@plt+0x6ec>
   1143c:	ldr	r1, [pc, #224]	; 11524 <putchar_unlocked@plt+0x7cc>
   11440:	b	11448 <putchar_unlocked@plt+0x6f0>
   11444:	ldr	r1, [pc, #220]	; 11528 <putchar_unlocked@plt+0x7d0>
   11448:	ldr	r3, [pc, #220]	; 1152c <putchar_unlocked@plt+0x7d4>
   1144c:	ldr	r2, [r3]
   11450:	mov	r3, #0
   11454:	str	r3, [sp, #4]
   11458:	ldr	r3, [pc, #212]	; 11534 <putchar_unlocked@plt+0x7dc>
   1145c:	str	r3, [sp]
   11460:	mov	r3, r2
   11464:	ldr	r2, [pc, #204]	; 11538 <putchar_unlocked@plt+0x7e0>
   11468:	bl	14734 <putchar_unlocked@plt+0x39dc>
   1146c:	mov	r0, #0
   11470:	bl	10c98 <exit@plt>
   11474:	mov	r0, #1
   11478:	bl	1102c <putchar_unlocked@plt+0x2d4>
   1147c:	mov	r3, #0
   11480:	str	r3, [sp]
   11484:	ldr	r3, [pc, #176]	; 1153c <putchar_unlocked@plt+0x7e4>
   11488:	ldr	r2, [pc, #176]	; 11540 <putchar_unlocked@plt+0x7e8>
   1148c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11490:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11494:	bl	10c80 <getopt_long@plt>
   11498:	str	r0, [fp, #-20]	; 0xffffffec
   1149c:	ldr	r3, [fp, #-20]	; 0xffffffec
   114a0:	cmn	r3, #1
   114a4:	bne	1130c <putchar_unlocked@plt+0x5b4>
   114a8:	ldr	r3, [pc, #148]	; 11544 <putchar_unlocked@plt+0x7ec>
   114ac:	ldr	r3, [r3]
   114b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   114b4:	cmp	r2, r3
   114b8:	beq	11504 <putchar_unlocked@plt+0x7ac>
   114bc:	ldr	r0, [pc, #132]	; 11548 <putchar_unlocked@plt+0x7f0>
   114c0:	bl	10ca4 <gettext@plt>
   114c4:	mov	r4, r0
   114c8:	ldr	r3, [pc, #116]	; 11544 <putchar_unlocked@plt+0x7ec>
   114cc:	ldr	r3, [r3]
   114d0:	lsl	r3, r3, #2
   114d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   114d8:	add	r3, r2, r3
   114dc:	ldr	r3, [r3]
   114e0:	mov	r0, r3
   114e4:	bl	14068 <putchar_unlocked@plt+0x3310>
   114e8:	mov	r3, r0
   114ec:	mov	r2, r4
   114f0:	mov	r1, #0
   114f4:	mov	r0, #0
   114f8:	bl	10c44 <error@plt>
   114fc:	mov	r0, #1
   11500:	bl	1102c <putchar_unlocked@plt+0x2d4>
   11504:	ldr	r3, [fp, #-16]
   11508:	mov	r0, r3
   1150c:	sub	sp, fp, #8
   11510:	pop	{r4, fp, pc}
   11514:	ldrdeq	r8, [r2], -r0
   11518:	andeq	r6, r1, r8, lsl #25
   1151c:	andeq	r6, r1, ip, asr sl
   11520:	andeq	r8, r2, r4, lsr r1
   11524:	andeq	r7, r1, ip, lsl r0
   11528:	andeq	r7, r1, r4, lsr #32
   1152c:	ldrdeq	r8, [r2], -r4
   11530:	andeq	r7, r1, ip, lsr #32
   11534:	andeq	r7, r1, r8, lsr r0
   11538:	andeq	r6, r1, r4, lsr #19
   1153c:	andeq	r6, r1, r8, lsr #23
   11540:	andeq	r7, r1, r8, asr #32
   11544:	andeq	r8, r2, r8, lsr #2
   11548:	andeq	r7, r1, r4, asr r0
   1154c:	push	{r4, fp, lr}
   11550:	add	fp, sp, #8
   11554:	sub	sp, sp, #420	; 0x1a4
   11558:	str	r0, [fp, #-424]	; 0xfffffe58
   1155c:	str	r1, [fp, #-428]	; 0xfffffe54
   11560:	mov	r3, #0
   11564:	str	r3, [fp, #-16]
   11568:	ldr	r3, [fp, #-428]	; 0xfffffe54
   1156c:	ldr	r3, [r3]
   11570:	mov	r0, r3
   11574:	bl	11938 <putchar_unlocked@plt+0xbe0>
   11578:	ldr	r1, [pc, #496]	; 11770 <putchar_unlocked@plt+0xa18>
   1157c:	mov	r0, #6
   11580:	bl	10d10 <setlocale@plt>
   11584:	ldr	r1, [pc, #488]	; 11774 <putchar_unlocked@plt+0xa1c>
   11588:	ldr	r0, [pc, #488]	; 11778 <putchar_unlocked@plt+0xa20>
   1158c:	bl	10d34 <bindtextdomain@plt>
   11590:	ldr	r0, [pc, #480]	; 11778 <putchar_unlocked@plt+0xa20>
   11594:	bl	10be4 <textdomain@plt>
   11598:	ldr	r0, [pc, #476]	; 1177c <putchar_unlocked@plt+0xa24>
   1159c:	bl	16940 <putchar_unlocked@plt+0x5be8>
   115a0:	ldr	r1, [fp, #-428]	; 0xfffffe54
   115a4:	ldr	r0, [fp, #-424]	; 0xfffffe58
   115a8:	bl	1122c <putchar_unlocked@plt+0x4d4>
   115ac:	mov	r3, r0
   115b0:	str	r3, [fp, #-16]
   115b4:	ldr	r3, [fp, #-16]
   115b8:	cmp	r3, #0
   115bc:	bne	115c8 <putchar_unlocked@plt+0x870>
   115c0:	mov	r3, #1
   115c4:	str	r3, [fp, #-16]
   115c8:	ldr	r3, [fp, #-16]
   115cc:	and	r3, r3, #31
   115d0:	cmp	r3, #0
   115d4:	beq	116c8 <putchar_unlocked@plt+0x970>
   115d8:	sub	r3, fp, #416	; 0x1a0
   115dc:	mov	r0, r3
   115e0:	bl	10bcc <uname@plt>
   115e4:	mov	r3, r0
   115e8:	cmn	r3, #1
   115ec:	bne	11618 <putchar_unlocked@plt+0x8c0>
   115f0:	bl	10cc8 <__errno_location@plt>
   115f4:	mov	r3, r0
   115f8:	ldr	r4, [r3]
   115fc:	ldr	r0, [pc, #380]	; 11780 <putchar_unlocked@plt+0xa28>
   11600:	bl	10ca4 <gettext@plt>
   11604:	mov	r3, r0
   11608:	mov	r2, r3
   1160c:	mov	r1, r4
   11610:	mov	r0, #1
   11614:	bl	10c44 <error@plt>
   11618:	ldr	r3, [fp, #-16]
   1161c:	and	r3, r3, #1
   11620:	cmp	r3, #0
   11624:	beq	11638 <putchar_unlocked@plt+0x8e0>
   11628:	sub	r3, fp, #416	; 0x1a0
   1162c:	ldr	r1, [pc, #336]	; 11784 <putchar_unlocked@plt+0xa2c>
   11630:	mov	r0, r3
   11634:	bl	11204 <putchar_unlocked@plt+0x4ac>
   11638:	ldr	r3, [fp, #-16]
   1163c:	and	r3, r3, #2
   11640:	cmp	r3, #0
   11644:	beq	1165c <putchar_unlocked@plt+0x904>
   11648:	sub	r3, fp, #416	; 0x1a0
   1164c:	add	r3, r3, #65	; 0x41
   11650:	ldr	r1, [pc, #304]	; 11788 <putchar_unlocked@plt+0xa30>
   11654:	mov	r0, r3
   11658:	bl	11204 <putchar_unlocked@plt+0x4ac>
   1165c:	ldr	r3, [fp, #-16]
   11660:	and	r3, r3, #4
   11664:	cmp	r3, #0
   11668:	beq	11680 <putchar_unlocked@plt+0x928>
   1166c:	sub	r3, fp, #416	; 0x1a0
   11670:	add	r3, r3, #130	; 0x82
   11674:	ldr	r1, [pc, #272]	; 1178c <putchar_unlocked@plt+0xa34>
   11678:	mov	r0, r3
   1167c:	bl	11204 <putchar_unlocked@plt+0x4ac>
   11680:	ldr	r3, [fp, #-16]
   11684:	and	r3, r3, #8
   11688:	cmp	r3, #0
   1168c:	beq	116a4 <putchar_unlocked@plt+0x94c>
   11690:	sub	r3, fp, #416	; 0x1a0
   11694:	add	r3, r3, #195	; 0xc3
   11698:	ldr	r1, [pc, #240]	; 11790 <putchar_unlocked@plt+0xa38>
   1169c:	mov	r0, r3
   116a0:	bl	11204 <putchar_unlocked@plt+0x4ac>
   116a4:	ldr	r3, [fp, #-16]
   116a8:	and	r3, r3, #16
   116ac:	cmp	r3, #0
   116b0:	beq	116c8 <putchar_unlocked@plt+0x970>
   116b4:	sub	r3, fp, #416	; 0x1a0
   116b8:	add	r3, r3, #260	; 0x104
   116bc:	ldr	r1, [pc, #208]	; 11794 <putchar_unlocked@plt+0xa3c>
   116c0:	mov	r0, r3
   116c4:	bl	11204 <putchar_unlocked@plt+0x4ac>
   116c8:	ldr	r3, [fp, #-16]
   116cc:	and	r3, r3, #32
   116d0:	cmp	r3, #0
   116d4:	beq	11704 <putchar_unlocked@plt+0x9ac>
   116d8:	ldr	r3, [pc, #184]	; 11798 <putchar_unlocked@plt+0xa40>
   116dc:	str	r3, [fp, #-20]	; 0xffffffec
   116e0:	ldr	r3, [fp, #-16]
   116e4:	cmn	r3, #1
   116e8:	bne	116fc <putchar_unlocked@plt+0x9a4>
   116ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   116f0:	ldr	r2, [pc, #160]	; 11798 <putchar_unlocked@plt+0xa40>
   116f4:	cmp	r3, r2
   116f8:	beq	11704 <putchar_unlocked@plt+0x9ac>
   116fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11700:	bl	111a8 <putchar_unlocked@plt+0x450>
   11704:	ldr	r3, [fp, #-16]
   11708:	and	r3, r3, #64	; 0x40
   1170c:	cmp	r3, #0
   11710:	beq	11740 <putchar_unlocked@plt+0x9e8>
   11714:	ldr	r3, [pc, #124]	; 11798 <putchar_unlocked@plt+0xa40>
   11718:	str	r3, [fp, #-24]	; 0xffffffe8
   1171c:	ldr	r3, [fp, #-16]
   11720:	cmn	r3, #1
   11724:	bne	11738 <putchar_unlocked@plt+0x9e0>
   11728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1172c:	ldr	r2, [pc, #100]	; 11798 <putchar_unlocked@plt+0xa40>
   11730:	cmp	r3, r2
   11734:	beq	11740 <putchar_unlocked@plt+0x9e8>
   11738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1173c:	bl	111a8 <putchar_unlocked@plt+0x450>
   11740:	ldr	r3, [fp, #-16]
   11744:	and	r3, r3, #128	; 0x80
   11748:	cmp	r3, #0
   1174c:	beq	11758 <putchar_unlocked@plt+0xa00>
   11750:	ldr	r0, [pc, #68]	; 1179c <putchar_unlocked@plt+0xa44>
   11754:	bl	111a8 <putchar_unlocked@plt+0x450>
   11758:	mov	r0, #10
   1175c:	bl	10d58 <putchar_unlocked@plt>
   11760:	mov	r3, #0
   11764:	mov	r0, r3
   11768:	sub	sp, fp, #8
   1176c:	pop	{r4, fp, pc}
   11770:	andeq	r6, r1, ip, asr sl
   11774:	andeq	r7, r1, r8, rrx
   11778:	andeq	r6, r1, r4, ror sl
   1177c:	andeq	r1, r1, r4, lsl #16
   11780:	andeq	r7, r1, r0, lsl #1
   11784:	muleq	r1, r8, r0
   11788:	andeq	r7, r1, r8, lsr #1
   1178c:	strheq	r7, [r1], -r8
   11790:	andeq	r7, r1, r8, asr #1
   11794:	ldrdeq	r7, [r1], -r8
   11798:	strdeq	r7, [r1], -r4
   1179c:	andeq	r7, r1, r8, ror #1
   117a0:	push	{fp}		; (str fp, [sp, #-4]!)
   117a4:	add	fp, sp, #0
   117a8:	sub	sp, sp, #12
   117ac:	str	r0, [fp, #-8]
   117b0:	ldr	r2, [pc, #20]	; 117cc <putchar_unlocked@plt+0xa74>
   117b4:	ldr	r3, [fp, #-8]
   117b8:	str	r3, [r2]
   117bc:	nop			; (mov r0, r0)
   117c0:	add	sp, fp, #0
   117c4:	pop	{fp}		; (ldr fp, [sp], #4)
   117c8:	bx	lr
   117cc:	andeq	r8, r2, ip, lsr r1
   117d0:	push	{fp}		; (str fp, [sp, #-4]!)
   117d4:	add	fp, sp, #0
   117d8:	sub	sp, sp, #12
   117dc:	mov	r3, r0
   117e0:	strb	r3, [fp, #-5]
   117e4:	ldr	r2, [pc, #20]	; 11800 <putchar_unlocked@plt+0xaa8>
   117e8:	ldrb	r3, [fp, #-5]
   117ec:	strb	r3, [r2]
   117f0:	nop			; (mov r0, r0)
   117f4:	add	sp, fp, #0
   117f8:	pop	{fp}		; (ldr fp, [sp], #4)
   117fc:	bx	lr
   11800:	andeq	r8, r2, r0, asr #2
   11804:	push	{r4, fp, lr}
   11808:	add	fp, sp, #8
   1180c:	sub	sp, sp, #20
   11810:	ldr	r3, [pc, #256]	; 11918 <putchar_unlocked@plt+0xbc0>
   11814:	ldr	r3, [r3]
   11818:	mov	r0, r3
   1181c:	bl	156ac <putchar_unlocked@plt+0x4954>
   11820:	mov	r3, r0
   11824:	cmp	r3, #0
   11828:	beq	118e0 <putchar_unlocked@plt+0xb88>
   1182c:	ldr	r3, [pc, #232]	; 1191c <putchar_unlocked@plt+0xbc4>
   11830:	ldrb	r3, [r3]
   11834:	eor	r3, r3, #1
   11838:	uxtb	r3, r3
   1183c:	cmp	r3, #0
   11840:	bne	11858 <putchar_unlocked@plt+0xb00>
   11844:	bl	10cc8 <__errno_location@plt>
   11848:	mov	r3, r0
   1184c:	ldr	r3, [r3]
   11850:	cmp	r3, #32
   11854:	beq	118e0 <putchar_unlocked@plt+0xb88>
   11858:	ldr	r0, [pc, #192]	; 11920 <putchar_unlocked@plt+0xbc8>
   1185c:	bl	10ca4 <gettext@plt>
   11860:	str	r0, [fp, #-16]
   11864:	ldr	r3, [pc, #184]	; 11924 <putchar_unlocked@plt+0xbcc>
   11868:	ldr	r3, [r3]
   1186c:	cmp	r3, #0
   11870:	beq	118b4 <putchar_unlocked@plt+0xb5c>
   11874:	bl	10cc8 <__errno_location@plt>
   11878:	mov	r3, r0
   1187c:	ldr	r4, [r3]
   11880:	ldr	r3, [pc, #156]	; 11924 <putchar_unlocked@plt+0xbcc>
   11884:	ldr	r3, [r3]
   11888:	mov	r0, r3
   1188c:	bl	13d98 <putchar_unlocked@plt+0x3040>
   11890:	mov	r2, r0
   11894:	ldr	r3, [fp, #-16]
   11898:	str	r3, [sp]
   1189c:	mov	r3, r2
   118a0:	ldr	r2, [pc, #128]	; 11928 <putchar_unlocked@plt+0xbd0>
   118a4:	mov	r1, r4
   118a8:	mov	r0, #0
   118ac:	bl	10c44 <error@plt>
   118b0:	b	118d0 <putchar_unlocked@plt+0xb78>
   118b4:	bl	10cc8 <__errno_location@plt>
   118b8:	mov	r3, r0
   118bc:	ldr	r1, [r3]
   118c0:	ldr	r3, [fp, #-16]
   118c4:	ldr	r2, [pc, #96]	; 1192c <putchar_unlocked@plt+0xbd4>
   118c8:	mov	r0, #0
   118cc:	bl	10c44 <error@plt>
   118d0:	ldr	r3, [pc, #88]	; 11930 <putchar_unlocked@plt+0xbd8>
   118d4:	ldr	r3, [r3]
   118d8:	mov	r0, r3
   118dc:	bl	10b90 <_exit@plt>
   118e0:	ldr	r3, [pc, #76]	; 11934 <putchar_unlocked@plt+0xbdc>
   118e4:	ldr	r3, [r3]
   118e8:	mov	r0, r3
   118ec:	bl	156ac <putchar_unlocked@plt+0x4954>
   118f0:	mov	r3, r0
   118f4:	cmp	r3, #0
   118f8:	beq	1190c <putchar_unlocked@plt+0xbb4>
   118fc:	ldr	r3, [pc, #44]	; 11930 <putchar_unlocked@plt+0xbd8>
   11900:	ldr	r3, [r3]
   11904:	mov	r0, r3
   11908:	bl	10b90 <_exit@plt>
   1190c:	nop			; (mov r0, r0)
   11910:	sub	sp, fp, #8
   11914:	pop	{r4, fp, pc}
   11918:	andeq	r8, r2, r4, lsr r1
   1191c:	andeq	r8, r2, r0, asr #2
   11920:	andeq	r7, r1, ip, lsl #2
   11924:	andeq	r8, r2, ip, lsr r1
   11928:	andeq	r7, r1, r8, lsl r1
   1192c:	andeq	r7, r1, r0, lsr #2
   11930:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   11934:	andeq	r8, r2, r0, lsr r1
   11938:	push	{fp, lr}
   1193c:	add	fp, sp, #4
   11940:	sub	sp, sp, #16
   11944:	str	r0, [fp, #-16]
   11948:	ldr	r3, [fp, #-16]
   1194c:	cmp	r3, #0
   11950:	bne	11970 <putchar_unlocked@plt+0xc18>
   11954:	ldr	r3, [pc, #220]	; 11a38 <putchar_unlocked@plt+0xce0>
   11958:	ldr	r3, [r3]
   1195c:	mov	r2, #55	; 0x37
   11960:	mov	r1, #1
   11964:	ldr	r0, [pc, #208]	; 11a3c <putchar_unlocked@plt+0xce4>
   11968:	bl	10bfc <fwrite@plt>
   1196c:	bl	10d4c <abort@plt>
   11970:	mov	r1, #47	; 0x2f
   11974:	ldr	r0, [fp, #-16]
   11978:	bl	10d1c <strrchr@plt>
   1197c:	str	r0, [fp, #-8]
   11980:	ldr	r3, [fp, #-8]
   11984:	cmp	r3, #0
   11988:	beq	11998 <putchar_unlocked@plt+0xc40>
   1198c:	ldr	r3, [fp, #-8]
   11990:	add	r3, r3, #1
   11994:	b	1199c <putchar_unlocked@plt+0xc44>
   11998:	ldr	r3, [fp, #-16]
   1199c:	str	r3, [fp, #-12]
   119a0:	ldr	r2, [fp, #-12]
   119a4:	ldr	r3, [fp, #-16]
   119a8:	sub	r3, r2, r3
   119ac:	cmp	r3, #6
   119b0:	ble	11a14 <putchar_unlocked@plt+0xcbc>
   119b4:	ldr	r3, [fp, #-12]
   119b8:	sub	r3, r3, #7
   119bc:	mov	r2, #7
   119c0:	ldr	r1, [pc, #120]	; 11a40 <putchar_unlocked@plt+0xce8>
   119c4:	mov	r0, r3
   119c8:	bl	10d40 <strncmp@plt>
   119cc:	mov	r3, r0
   119d0:	cmp	r3, #0
   119d4:	bne	11a14 <putchar_unlocked@plt+0xcbc>
   119d8:	ldr	r3, [fp, #-12]
   119dc:	str	r3, [fp, #-16]
   119e0:	mov	r2, #3
   119e4:	ldr	r1, [pc, #88]	; 11a44 <putchar_unlocked@plt+0xcec>
   119e8:	ldr	r0, [fp, #-12]
   119ec:	bl	10d40 <strncmp@plt>
   119f0:	mov	r3, r0
   119f4:	cmp	r3, #0
   119f8:	bne	11a14 <putchar_unlocked@plt+0xcbc>
   119fc:	ldr	r3, [fp, #-12]
   11a00:	add	r3, r3, #3
   11a04:	str	r3, [fp, #-16]
   11a08:	ldr	r2, [pc, #56]	; 11a48 <putchar_unlocked@plt+0xcf0>
   11a0c:	ldr	r3, [fp, #-16]
   11a10:	str	r3, [r2]
   11a14:	ldr	r2, [pc, #48]	; 11a4c <putchar_unlocked@plt+0xcf4>
   11a18:	ldr	r3, [fp, #-16]
   11a1c:	str	r3, [r2]
   11a20:	ldr	r2, [pc, #40]	; 11a50 <putchar_unlocked@plt+0xcf8>
   11a24:	ldr	r3, [fp, #-16]
   11a28:	str	r3, [r2]
   11a2c:	nop			; (mov r0, r0)
   11a30:	sub	sp, fp, #4
   11a34:	pop	{fp, pc}
   11a38:	andeq	r8, r2, r0, lsr r1
   11a3c:	andeq	r7, r1, r4, lsr #2
   11a40:	andeq	r7, r1, ip, asr r1
   11a44:	andeq	r7, r1, r4, ror #2
   11a48:	andeq	r8, r2, r0, lsr #2
   11a4c:	andeq	r8, r2, r4, asr #2
   11a50:	andeq	r8, r2, r4, lsr #2
   11a54:	push	{fp, lr}
   11a58:	add	fp, sp, #4
   11a5c:	sub	sp, sp, #16
   11a60:	str	r0, [fp, #-16]
   11a64:	bl	10cc8 <__errno_location@plt>
   11a68:	mov	r3, r0
   11a6c:	ldr	r3, [r3]
   11a70:	str	r3, [fp, #-8]
   11a74:	ldr	r3, [fp, #-16]
   11a78:	cmp	r3, #0
   11a7c:	beq	11a88 <putchar_unlocked@plt+0xd30>
   11a80:	ldr	r3, [fp, #-16]
   11a84:	b	11a8c <putchar_unlocked@plt+0xd34>
   11a88:	ldr	r3, [pc, #48]	; 11ac0 <putchar_unlocked@plt+0xd68>
   11a8c:	mov	r1, #48	; 0x30
   11a90:	mov	r0, r3
   11a94:	bl	15278 <putchar_unlocked@plt+0x4520>
   11a98:	mov	r3, r0
   11a9c:	str	r3, [fp, #-12]
   11aa0:	bl	10cc8 <__errno_location@plt>
   11aa4:	mov	r2, r0
   11aa8:	ldr	r3, [fp, #-8]
   11aac:	str	r3, [r2]
   11ab0:	ldr	r3, [fp, #-12]
   11ab4:	mov	r0, r3
   11ab8:	sub	sp, fp, #4
   11abc:	pop	{fp, pc}
   11ac0:	andeq	r8, r2, r8, asr #2
   11ac4:	push	{fp}		; (str fp, [sp, #-4]!)
   11ac8:	add	fp, sp, #0
   11acc:	sub	sp, sp, #12
   11ad0:	str	r0, [fp, #-8]
   11ad4:	ldr	r3, [fp, #-8]
   11ad8:	cmp	r3, #0
   11adc:	beq	11ae8 <putchar_unlocked@plt+0xd90>
   11ae0:	ldr	r3, [fp, #-8]
   11ae4:	b	11aec <putchar_unlocked@plt+0xd94>
   11ae8:	ldr	r3, [pc, #16]	; 11b00 <putchar_unlocked@plt+0xda8>
   11aec:	ldr	r3, [r3]
   11af0:	mov	r0, r3
   11af4:	add	sp, fp, #0
   11af8:	pop	{fp}		; (ldr fp, [sp], #4)
   11afc:	bx	lr
   11b00:	andeq	r8, r2, r8, asr #2
   11b04:	push	{fp}		; (str fp, [sp, #-4]!)
   11b08:	add	fp, sp, #0
   11b0c:	sub	sp, sp, #12
   11b10:	str	r0, [fp, #-8]
   11b14:	str	r1, [fp, #-12]
   11b18:	ldr	r3, [fp, #-8]
   11b1c:	cmp	r3, #0
   11b20:	beq	11b2c <putchar_unlocked@plt+0xdd4>
   11b24:	ldr	r3, [fp, #-8]
   11b28:	b	11b30 <putchar_unlocked@plt+0xdd8>
   11b2c:	ldr	r3, [pc, #20]	; 11b48 <putchar_unlocked@plt+0xdf0>
   11b30:	ldr	r2, [fp, #-12]
   11b34:	str	r2, [r3]
   11b38:	nop			; (mov r0, r0)
   11b3c:	add	sp, fp, #0
   11b40:	pop	{fp}		; (ldr fp, [sp], #4)
   11b44:	bx	lr
   11b48:	andeq	r8, r2, r8, asr #2
   11b4c:	push	{fp}		; (str fp, [sp, #-4]!)
   11b50:	add	fp, sp, #0
   11b54:	sub	sp, sp, #36	; 0x24
   11b58:	str	r0, [fp, #-24]	; 0xffffffe8
   11b5c:	mov	r3, r1
   11b60:	str	r2, [fp, #-32]	; 0xffffffe0
   11b64:	strb	r3, [fp, #-25]	; 0xffffffe7
   11b68:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   11b6c:	strb	r3, [fp, #-5]
   11b70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b74:	cmp	r3, #0
   11b78:	beq	11b84 <putchar_unlocked@plt+0xe2c>
   11b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b80:	b	11b88 <putchar_unlocked@plt+0xe30>
   11b84:	ldr	r3, [pc, #124]	; 11c08 <putchar_unlocked@plt+0xeb0>
   11b88:	add	r2, r3, #8
   11b8c:	ldrb	r3, [fp, #-5]
   11b90:	lsr	r3, r3, #5
   11b94:	uxtb	r3, r3
   11b98:	lsl	r3, r3, #2
   11b9c:	add	r3, r2, r3
   11ba0:	str	r3, [fp, #-12]
   11ba4:	ldrb	r3, [fp, #-5]
   11ba8:	and	r3, r3, #31
   11bac:	str	r3, [fp, #-16]
   11bb0:	ldr	r3, [fp, #-12]
   11bb4:	ldr	r2, [r3]
   11bb8:	ldr	r3, [fp, #-16]
   11bbc:	lsr	r3, r2, r3
   11bc0:	and	r3, r3, #1
   11bc4:	str	r3, [fp, #-20]	; 0xffffffec
   11bc8:	ldr	r3, [fp, #-12]
   11bcc:	ldr	r3, [r3]
   11bd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11bd4:	and	r1, r2, #1
   11bd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   11bdc:	eor	r1, r1, r2
   11be0:	ldr	r2, [fp, #-16]
   11be4:	lsl	r2, r1, r2
   11be8:	eor	r2, r2, r3
   11bec:	ldr	r3, [fp, #-12]
   11bf0:	str	r2, [r3]
   11bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11bf8:	mov	r0, r3
   11bfc:	add	sp, fp, #0
   11c00:	pop	{fp}		; (ldr fp, [sp], #4)
   11c04:	bx	lr
   11c08:	andeq	r8, r2, r8, asr #2
   11c0c:	push	{fp}		; (str fp, [sp, #-4]!)
   11c10:	add	fp, sp, #0
   11c14:	sub	sp, sp, #20
   11c18:	str	r0, [fp, #-16]
   11c1c:	str	r1, [fp, #-20]	; 0xffffffec
   11c20:	ldr	r3, [fp, #-16]
   11c24:	cmp	r3, #0
   11c28:	bne	11c34 <putchar_unlocked@plt+0xedc>
   11c2c:	ldr	r3, [pc, #44]	; 11c60 <putchar_unlocked@plt+0xf08>
   11c30:	str	r3, [fp, #-16]
   11c34:	ldr	r3, [fp, #-16]
   11c38:	ldr	r3, [r3, #4]
   11c3c:	str	r3, [fp, #-8]
   11c40:	ldr	r3, [fp, #-16]
   11c44:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c48:	str	r2, [r3, #4]
   11c4c:	ldr	r3, [fp, #-8]
   11c50:	mov	r0, r3
   11c54:	add	sp, fp, #0
   11c58:	pop	{fp}		; (ldr fp, [sp], #4)
   11c5c:	bx	lr
   11c60:	andeq	r8, r2, r8, asr #2
   11c64:	push	{fp, lr}
   11c68:	add	fp, sp, #4
   11c6c:	sub	sp, sp, #16
   11c70:	str	r0, [fp, #-8]
   11c74:	str	r1, [fp, #-12]
   11c78:	str	r2, [fp, #-16]
   11c7c:	ldr	r3, [fp, #-8]
   11c80:	cmp	r3, #0
   11c84:	bne	11c90 <putchar_unlocked@plt+0xf38>
   11c88:	ldr	r3, [pc, #76]	; 11cdc <putchar_unlocked@plt+0xf84>
   11c8c:	str	r3, [fp, #-8]
   11c90:	ldr	r3, [fp, #-8]
   11c94:	mov	r2, #10
   11c98:	str	r2, [r3]
   11c9c:	ldr	r3, [fp, #-12]
   11ca0:	cmp	r3, #0
   11ca4:	beq	11cb4 <putchar_unlocked@plt+0xf5c>
   11ca8:	ldr	r3, [fp, #-16]
   11cac:	cmp	r3, #0
   11cb0:	bne	11cb8 <putchar_unlocked@plt+0xf60>
   11cb4:	bl	10d4c <abort@plt>
   11cb8:	ldr	r3, [fp, #-8]
   11cbc:	ldr	r2, [fp, #-12]
   11cc0:	str	r2, [r3, #40]	; 0x28
   11cc4:	ldr	r3, [fp, #-8]
   11cc8:	ldr	r2, [fp, #-16]
   11ccc:	str	r2, [r3, #44]	; 0x2c
   11cd0:	nop			; (mov r0, r0)
   11cd4:	sub	sp, fp, #4
   11cd8:	pop	{fp, pc}
   11cdc:	andeq	r8, r2, r8, asr #2
   11ce0:	push	{fp, lr}
   11ce4:	add	fp, sp, #4
   11ce8:	sub	sp, sp, #56	; 0x38
   11cec:	str	r0, [fp, #-56]	; 0xffffffc8
   11cf0:	str	r1, [fp, #-60]	; 0xffffffc4
   11cf4:	sub	r3, fp, #52	; 0x34
   11cf8:	mov	r2, #48	; 0x30
   11cfc:	mov	r1, #0
   11d00:	mov	r0, r3
   11d04:	bl	10ce0 <memset@plt>
   11d08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d0c:	cmp	r3, #10
   11d10:	bne	11d18 <putchar_unlocked@plt+0xfc0>
   11d14:	bl	10d4c <abort@plt>
   11d18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d1c:	str	r3, [fp, #-52]	; 0xffffffcc
   11d20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11d24:	mov	lr, r3
   11d28:	sub	ip, fp, #52	; 0x34
   11d2c:	ldm	ip!, {r0, r1, r2, r3}
   11d30:	stmia	lr!, {r0, r1, r2, r3}
   11d34:	ldm	ip!, {r0, r1, r2, r3}
   11d38:	stmia	lr!, {r0, r1, r2, r3}
   11d3c:	ldm	ip, {r0, r1, r2, r3}
   11d40:	stm	lr, {r0, r1, r2, r3}
   11d44:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11d48:	sub	sp, fp, #4
   11d4c:	pop	{fp, pc}
   11d50:	push	{fp, lr}
   11d54:	add	fp, sp, #4
   11d58:	sub	sp, sp, #16
   11d5c:	str	r0, [fp, #-16]
   11d60:	str	r1, [fp, #-20]	; 0xffffffec
   11d64:	ldr	r0, [fp, #-16]
   11d68:	bl	10ca4 <gettext@plt>
   11d6c:	str	r0, [fp, #-8]
   11d70:	ldr	r2, [fp, #-8]
   11d74:	ldr	r3, [fp, #-16]
   11d78:	cmp	r2, r3
   11d7c:	beq	11d88 <putchar_unlocked@plt+0x1030>
   11d80:	ldr	r3, [fp, #-8]
   11d84:	b	11e18 <putchar_unlocked@plt+0x10c0>
   11d88:	bl	15bd0 <putchar_unlocked@plt+0x4e78>
   11d8c:	str	r0, [fp, #-12]
   11d90:	ldr	r1, [pc, #140]	; 11e24 <putchar_unlocked@plt+0x10cc>
   11d94:	ldr	r0, [fp, #-12]
   11d98:	bl	15614 <putchar_unlocked@plt+0x48bc>
   11d9c:	mov	r3, r0
   11da0:	cmp	r3, #0
   11da4:	bne	11dc8 <putchar_unlocked@plt+0x1070>
   11da8:	ldr	r3, [fp, #-16]
   11dac:	ldrb	r3, [r3]
   11db0:	cmp	r3, #96	; 0x60
   11db4:	bne	11dc0 <putchar_unlocked@plt+0x1068>
   11db8:	ldr	r3, [pc, #104]	; 11e28 <putchar_unlocked@plt+0x10d0>
   11dbc:	b	11e18 <putchar_unlocked@plt+0x10c0>
   11dc0:	ldr	r3, [pc, #100]	; 11e2c <putchar_unlocked@plt+0x10d4>
   11dc4:	b	11e18 <putchar_unlocked@plt+0x10c0>
   11dc8:	ldr	r1, [pc, #96]	; 11e30 <putchar_unlocked@plt+0x10d8>
   11dcc:	ldr	r0, [fp, #-12]
   11dd0:	bl	15614 <putchar_unlocked@plt+0x48bc>
   11dd4:	mov	r3, r0
   11dd8:	cmp	r3, #0
   11ddc:	bne	11e00 <putchar_unlocked@plt+0x10a8>
   11de0:	ldr	r3, [fp, #-16]
   11de4:	ldrb	r3, [r3]
   11de8:	cmp	r3, #96	; 0x60
   11dec:	bne	11df8 <putchar_unlocked@plt+0x10a0>
   11df0:	ldr	r3, [pc, #60]	; 11e34 <putchar_unlocked@plt+0x10dc>
   11df4:	b	11e18 <putchar_unlocked@plt+0x10c0>
   11df8:	ldr	r3, [pc, #56]	; 11e38 <putchar_unlocked@plt+0x10e0>
   11dfc:	b	11e18 <putchar_unlocked@plt+0x10c0>
   11e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e04:	cmp	r3, #9
   11e08:	bne	11e14 <putchar_unlocked@plt+0x10bc>
   11e0c:	ldr	r3, [pc, #40]	; 11e3c <putchar_unlocked@plt+0x10e4>
   11e10:	b	11e18 <putchar_unlocked@plt+0x10c0>
   11e14:	ldr	r3, [pc, #36]	; 11e40 <putchar_unlocked@plt+0x10e8>
   11e18:	mov	r0, r3
   11e1c:	sub	sp, fp, #4
   11e20:	pop	{fp, pc}
   11e24:	andeq	r7, r1, r4, lsr #4
   11e28:	andeq	r7, r1, ip, lsr #4
   11e2c:	andeq	r7, r1, r0, lsr r2
   11e30:	andeq	r7, r1, r4, lsr r2
   11e34:	andeq	r7, r1, ip, lsr r2
   11e38:	andeq	r7, r1, r0, asr #4
   11e3c:	andeq	r7, r1, r4, asr #4
   11e40:	andeq	r7, r1, r8, asr #4
   11e44:	push	{r4, fp, lr}
   11e48:	add	fp, sp, #8
   11e4c:	sub	sp, sp, #116	; 0x74
   11e50:	str	r0, [fp, #-88]	; 0xffffffa8
   11e54:	str	r1, [fp, #-92]	; 0xffffffa4
   11e58:	str	r2, [fp, #-96]	; 0xffffffa0
   11e5c:	str	r3, [fp, #-100]	; 0xffffff9c
   11e60:	mov	r3, #0
   11e64:	str	r3, [fp, #-20]	; 0xffffffec
   11e68:	mov	r3, #0
   11e6c:	str	r3, [fp, #-24]	; 0xffffffe8
   11e70:	mov	r3, #0
   11e74:	str	r3, [fp, #-28]	; 0xffffffe4
   11e78:	mov	r3, #0
   11e7c:	str	r3, [fp, #-32]	; 0xffffffe0
   11e80:	mov	r3, #0
   11e84:	strb	r3, [fp, #-33]	; 0xffffffdf
   11e88:	bl	10c14 <__ctype_get_mb_cur_max@plt>
   11e8c:	mov	r3, r0
   11e90:	cmp	r3, #1
   11e94:	moveq	r3, #1
   11e98:	movne	r3, #0
   11e9c:	strb	r3, [fp, #-57]	; 0xffffffc7
   11ea0:	ldr	r3, [fp, #8]
   11ea4:	and	r3, r3, #2
   11ea8:	cmp	r3, #0
   11eac:	movne	r3, #1
   11eb0:	moveq	r3, #0
   11eb4:	strb	r3, [fp, #-34]	; 0xffffffde
   11eb8:	mov	r3, #0
   11ebc:	strb	r3, [fp, #-35]	; 0xffffffdd
   11ec0:	mov	r3, #0
   11ec4:	strb	r3, [fp, #-36]	; 0xffffffdc
   11ec8:	mov	r3, #1
   11ecc:	strb	r3, [fp, #-37]	; 0xffffffdb
   11ed0:	ldr	r3, [fp, #4]
   11ed4:	cmp	r3, #10
   11ed8:	ldrls	pc, [pc, r3, lsl #2]
   11edc:	b	120e4 <putchar_unlocked@plt+0x138c>
   11ee0:	ldrdeq	r2, [r1], -r8
   11ee4:	andeq	r2, r1, r4, asr r0
   11ee8:	andeq	r2, r1, r8, ror r0
   11eec:	andeq	r2, r1, ip, asr #32
   11ef0:	andeq	r2, r1, ip, asr r0
   11ef4:	andeq	r1, r1, ip, lsl pc
   11ef8:	andeq	r1, r1, ip, lsl #30
   11efc:	andeq	r1, r1, ip, ror pc
   11f00:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11f04:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11f08:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11f0c:	mov	r3, #5
   11f10:	str	r3, [fp, #4]
   11f14:	mov	r3, #1
   11f18:	strb	r3, [fp, #-34]	; 0xffffffde
   11f1c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   11f20:	eor	r3, r3, #1
   11f24:	uxtb	r3, r3
   11f28:	cmp	r3, #0
   11f2c:	beq	11f60 <putchar_unlocked@plt+0x1208>
   11f30:	ldr	r2, [fp, #-20]	; 0xffffffec
   11f34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11f38:	cmp	r2, r3
   11f3c:	bcs	11f54 <putchar_unlocked@plt+0x11fc>
   11f40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11f44:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f48:	add	r3, r2, r3
   11f4c:	mov	r2, #34	; 0x22
   11f50:	strb	r2, [r3]
   11f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f58:	add	r3, r3, #1
   11f5c:	str	r3, [fp, #-20]	; 0xffffffec
   11f60:	mov	r3, #1
   11f64:	strb	r3, [fp, #-33]	; 0xffffffdf
   11f68:	ldr	r3, [pc, #3872]	; 12e90 <putchar_unlocked@plt+0x2138>
   11f6c:	str	r3, [fp, #-28]	; 0xffffffe4
   11f70:	mov	r3, #1
   11f74:	str	r3, [fp, #-32]	; 0xffffffe0
   11f78:	b	120e8 <putchar_unlocked@plt+0x1390>
   11f7c:	mov	r3, #1
   11f80:	strb	r3, [fp, #-33]	; 0xffffffdf
   11f84:	mov	r3, #0
   11f88:	strb	r3, [fp, #-34]	; 0xffffffde
   11f8c:	b	120e8 <putchar_unlocked@plt+0x1390>
   11f90:	ldr	r3, [fp, #4]
   11f94:	cmp	r3, #10
   11f98:	beq	11fbc <putchar_unlocked@plt+0x1264>
   11f9c:	ldr	r1, [fp, #4]
   11fa0:	ldr	r0, [pc, #3820]	; 12e94 <putchar_unlocked@plt+0x213c>
   11fa4:	bl	11d50 <putchar_unlocked@plt+0xff8>
   11fa8:	str	r0, [fp, #16]
   11fac:	ldr	r1, [fp, #4]
   11fb0:	ldr	r0, [pc, #3808]	; 12e98 <putchar_unlocked@plt+0x2140>
   11fb4:	bl	11d50 <putchar_unlocked@plt+0xff8>
   11fb8:	str	r0, [fp, #20]
   11fbc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   11fc0:	eor	r3, r3, #1
   11fc4:	uxtb	r3, r3
   11fc8:	cmp	r3, #0
   11fcc:	beq	1202c <putchar_unlocked@plt+0x12d4>
   11fd0:	ldr	r3, [fp, #16]
   11fd4:	str	r3, [fp, #-28]	; 0xffffffe4
   11fd8:	b	1201c <putchar_unlocked@plt+0x12c4>
   11fdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   11fe0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11fe4:	cmp	r2, r3
   11fe8:	bcs	12004 <putchar_unlocked@plt+0x12ac>
   11fec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ff4:	add	r3, r2, r3
   11ff8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11ffc:	ldrb	r2, [r2]
   12000:	strb	r2, [r3]
   12004:	ldr	r3, [fp, #-20]	; 0xffffffec
   12008:	add	r3, r3, #1
   1200c:	str	r3, [fp, #-20]	; 0xffffffec
   12010:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12014:	add	r3, r3, #1
   12018:	str	r3, [fp, #-28]	; 0xffffffe4
   1201c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12020:	ldrb	r3, [r3]
   12024:	cmp	r3, #0
   12028:	bne	11fdc <putchar_unlocked@plt+0x1284>
   1202c:	mov	r3, #1
   12030:	strb	r3, [fp, #-33]	; 0xffffffdf
   12034:	ldr	r3, [fp, #20]
   12038:	str	r3, [fp, #-28]	; 0xffffffe4
   1203c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12040:	bl	10cb0 <strlen@plt>
   12044:	str	r0, [fp, #-32]	; 0xffffffe0
   12048:	b	120e8 <putchar_unlocked@plt+0x1390>
   1204c:	mov	r3, #1
   12050:	strb	r3, [fp, #-33]	; 0xffffffdf
   12054:	mov	r3, #1
   12058:	strb	r3, [fp, #-34]	; 0xffffffde
   1205c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12060:	eor	r3, r3, #1
   12064:	uxtb	r3, r3
   12068:	cmp	r3, #0
   1206c:	beq	12078 <putchar_unlocked@plt+0x1320>
   12070:	mov	r3, #1
   12074:	strb	r3, [fp, #-33]	; 0xffffffdf
   12078:	mov	r3, #2
   1207c:	str	r3, [fp, #4]
   12080:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12084:	eor	r3, r3, #1
   12088:	uxtb	r3, r3
   1208c:	cmp	r3, #0
   12090:	beq	120c4 <putchar_unlocked@plt+0x136c>
   12094:	ldr	r2, [fp, #-20]	; 0xffffffec
   12098:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1209c:	cmp	r2, r3
   120a0:	bcs	120b8 <putchar_unlocked@plt+0x1360>
   120a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   120a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   120ac:	add	r3, r2, r3
   120b0:	mov	r2, #39	; 0x27
   120b4:	strb	r2, [r3]
   120b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   120bc:	add	r3, r3, #1
   120c0:	str	r3, [fp, #-20]	; 0xffffffec
   120c4:	ldr	r3, [pc, #3532]	; 12e98 <putchar_unlocked@plt+0x2140>
   120c8:	str	r3, [fp, #-28]	; 0xffffffe4
   120cc:	mov	r3, #1
   120d0:	str	r3, [fp, #-32]	; 0xffffffe0
   120d4:	b	120e8 <putchar_unlocked@plt+0x1390>
   120d8:	mov	r3, #0
   120dc:	strb	r3, [fp, #-34]	; 0xffffffde
   120e0:	b	120e8 <putchar_unlocked@plt+0x1390>
   120e4:	bl	10d4c <abort@plt>
   120e8:	mov	r3, #0
   120ec:	str	r3, [fp, #-16]
   120f0:	b	13280 <putchar_unlocked@plt+0x2528>
   120f4:	mov	r3, #0
   120f8:	strb	r3, [fp, #-40]	; 0xffffffd8
   120fc:	mov	r3, #0
   12100:	strb	r3, [fp, #-41]	; 0xffffffd7
   12104:	mov	r3, #0
   12108:	strb	r3, [fp, #-42]	; 0xffffffd6
   1210c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12110:	cmp	r3, #0
   12114:	beq	121b0 <putchar_unlocked@plt+0x1458>
   12118:	ldr	r3, [fp, #4]
   1211c:	cmp	r3, #2
   12120:	beq	121b0 <putchar_unlocked@plt+0x1458>
   12124:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12128:	cmp	r3, #0
   1212c:	beq	121b0 <putchar_unlocked@plt+0x1458>
   12130:	ldr	r2, [fp, #-16]
   12134:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12138:	add	r4, r2, r3
   1213c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12140:	cmn	r3, #1
   12144:	bne	12168 <putchar_unlocked@plt+0x1410>
   12148:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1214c:	cmp	r3, #1
   12150:	bls	12168 <putchar_unlocked@plt+0x1410>
   12154:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12158:	bl	10cb0 <strlen@plt>
   1215c:	str	r0, [fp, #-100]	; 0xffffff9c
   12160:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12164:	b	1216c <putchar_unlocked@plt+0x1414>
   12168:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1216c:	cmp	r4, r3
   12170:	bhi	121b0 <putchar_unlocked@plt+0x1458>
   12174:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12178:	ldr	r3, [fp, #-16]
   1217c:	add	r3, r2, r3
   12180:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12184:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12188:	mov	r0, r3
   1218c:	bl	10bb4 <memcmp@plt>
   12190:	mov	r3, r0
   12194:	cmp	r3, #0
   12198:	bne	121b0 <putchar_unlocked@plt+0x1458>
   1219c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   121a0:	cmp	r3, #0
   121a4:	bne	1343c <putchar_unlocked@plt+0x26e4>
   121a8:	mov	r3, #1
   121ac:	strb	r3, [fp, #-40]	; 0xffffffd8
   121b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   121b4:	ldr	r3, [fp, #-16]
   121b8:	add	r3, r2, r3
   121bc:	ldrb	r3, [r3]
   121c0:	strb	r3, [fp, #-38]	; 0xffffffda
   121c4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   121c8:	cmp	r3, #126	; 0x7e
   121cc:	ldrls	pc, [pc, r3, lsl #2]
   121d0:	b	129fc <putchar_unlocked@plt+0x1ca4>
   121d4:	ldrdeq	r2, [r1], -r0
   121d8:	strdeq	r2, [r1], -ip
   121dc:	strdeq	r2, [r1], -ip
   121e0:	strdeq	r2, [r1], -ip
   121e4:	strdeq	r2, [r1], -ip
   121e8:	strdeq	r2, [r1], -ip
   121ec:	strdeq	r2, [r1], -ip
   121f0:	andeq	r2, r1, r0, asr #15
   121f4:	andeq	r2, r1, ip, asr #15
   121f8:	strdeq	r2, [r1], -ip
   121fc:	andeq	r2, r1, r4, ror #15
   12200:	andeq	r2, r1, r8, lsl #16
   12204:	ldrdeq	r2, [r1], -r8
   12208:	strdeq	r2, [r1], -r0
   1220c:	strdeq	r2, [r1], -ip
   12210:	strdeq	r2, [r1], -ip
   12214:	strdeq	r2, [r1], -ip
   12218:	strdeq	r2, [r1], -ip
   1221c:	strdeq	r2, [r1], -ip
   12220:	strdeq	r2, [r1], -ip
   12224:	strdeq	r2, [r1], -ip
   12228:	strdeq	r2, [r1], -ip
   1222c:	strdeq	r2, [r1], -ip
   12230:	strdeq	r2, [r1], -ip
   12234:	strdeq	r2, [r1], -ip
   12238:	strdeq	r2, [r1], -ip
   1223c:	strdeq	r2, [r1], -ip
   12240:	strdeq	r2, [r1], -ip
   12244:	strdeq	r2, [r1], -ip
   12248:	strdeq	r2, [r1], -ip
   1224c:	strdeq	r2, [r1], -ip
   12250:	strdeq	r2, [r1], -ip
   12254:	andeq	r2, r1, r0, ror #17
   12258:	andeq	r2, r1, r8, ror #17
   1225c:	andeq	r2, r1, r8, ror #17
   12260:	ldrdeq	r2, [r1], -r4
   12264:	andeq	r2, r1, r8, ror #17
   12268:	strdeq	r2, [r1], -r0
   1226c:	andeq	r2, r1, r8, ror #17
   12270:	andeq	r2, r1, r4, lsl #18
   12274:	andeq	r2, r1, r8, ror #17
   12278:	andeq	r2, r1, r8, ror #17
   1227c:	andeq	r2, r1, r8, ror #17
   12280:	strdeq	r2, [r1], -r0
   12284:	strdeq	r2, [r1], -r0
   12288:	strdeq	r2, [r1], -r0
   1228c:	strdeq	r2, [r1], -r0
   12290:	strdeq	r2, [r1], -r0
   12294:	strdeq	r2, [r1], -r0
   12298:	strdeq	r2, [r1], -r0
   1229c:	strdeq	r2, [r1], -r0
   122a0:	strdeq	r2, [r1], -r0
   122a4:	strdeq	r2, [r1], -r0
   122a8:	strdeq	r2, [r1], -r0
   122ac:	strdeq	r2, [r1], -r0
   122b0:	strdeq	r2, [r1], -r0
   122b4:	strdeq	r2, [r1], -r0
   122b8:	strdeq	r2, [r1], -r0
   122bc:	strdeq	r2, [r1], -r0
   122c0:	andeq	r2, r1, r8, ror #17
   122c4:	andeq	r2, r1, r8, ror #17
   122c8:	andeq	r2, r1, r8, ror #17
   122cc:	andeq	r2, r1, r8, ror #17
   122d0:			; <UNDEFINED> instruction: 0x000125b0
   122d4:	strdeq	r2, [r1], -ip
   122d8:	strdeq	r2, [r1], -r0
   122dc:	strdeq	r2, [r1], -r0
   122e0:	strdeq	r2, [r1], -r0
   122e4:	strdeq	r2, [r1], -r0
   122e8:	strdeq	r2, [r1], -r0
   122ec:	strdeq	r2, [r1], -r0
   122f0:	strdeq	r2, [r1], -r0
   122f4:	strdeq	r2, [r1], -r0
   122f8:	strdeq	r2, [r1], -r0
   122fc:	strdeq	r2, [r1], -r0
   12300:	strdeq	r2, [r1], -r0
   12304:	strdeq	r2, [r1], -r0
   12308:	strdeq	r2, [r1], -r0
   1230c:	strdeq	r2, [r1], -r0
   12310:	strdeq	r2, [r1], -r0
   12314:	strdeq	r2, [r1], -r0
   12318:	strdeq	r2, [r1], -r0
   1231c:	strdeq	r2, [r1], -r0
   12320:	strdeq	r2, [r1], -r0
   12324:	strdeq	r2, [r1], -r0
   12328:	strdeq	r2, [r1], -r0
   1232c:	strdeq	r2, [r1], -r0
   12330:	strdeq	r2, [r1], -r0
   12334:	strdeq	r2, [r1], -r0
   12338:	strdeq	r2, [r1], -r0
   1233c:	strdeq	r2, [r1], -r0
   12340:	andeq	r2, r1, r8, ror #17
   12344:	andeq	r2, r1, r4, lsl r8
   12348:	strdeq	r2, [r1], -r0
   1234c:	andeq	r2, r1, r8, ror #17
   12350:	strdeq	r2, [r1], -r0
   12354:	andeq	r2, r1, r8, ror #17
   12358:	strdeq	r2, [r1], -r0
   1235c:	strdeq	r2, [r1], -r0
   12360:	strdeq	r2, [r1], -r0
   12364:	strdeq	r2, [r1], -r0
   12368:	strdeq	r2, [r1], -r0
   1236c:	strdeq	r2, [r1], -r0
   12370:	strdeq	r2, [r1], -r0
   12374:	strdeq	r2, [r1], -r0
   12378:	strdeq	r2, [r1], -r0
   1237c:	strdeq	r2, [r1], -r0
   12380:	strdeq	r2, [r1], -r0
   12384:	strdeq	r2, [r1], -r0
   12388:	strdeq	r2, [r1], -r0
   1238c:	strdeq	r2, [r1], -r0
   12390:	strdeq	r2, [r1], -r0
   12394:	strdeq	r2, [r1], -r0
   12398:	strdeq	r2, [r1], -r0
   1239c:	strdeq	r2, [r1], -r0
   123a0:	strdeq	r2, [r1], -r0
   123a4:	strdeq	r2, [r1], -r0
   123a8:	strdeq	r2, [r1], -r0
   123ac:	strdeq	r2, [r1], -r0
   123b0:	strdeq	r2, [r1], -r0
   123b4:	strdeq	r2, [r1], -r0
   123b8:	strdeq	r2, [r1], -r0
   123bc:	strdeq	r2, [r1], -r0
   123c0:	andeq	r2, r1, ip, lsl #17
   123c4:	andeq	r2, r1, r8, ror #17
   123c8:	andeq	r2, r1, ip, lsl #17
   123cc:	ldrdeq	r2, [r1], -r4
   123d0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   123d4:	cmp	r3, #0
   123d8:	beq	1259c <putchar_unlocked@plt+0x1844>
   123dc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   123e0:	cmp	r3, #0
   123e4:	bne	13444 <putchar_unlocked@plt+0x26ec>
   123e8:	mov	r3, #1
   123ec:	strb	r3, [fp, #-41]	; 0xffffffd7
   123f0:	ldr	r3, [fp, #4]
   123f4:	cmp	r3, #2
   123f8:	bne	124a8 <putchar_unlocked@plt+0x1750>
   123fc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   12400:	eor	r3, r3, #1
   12404:	uxtb	r3, r3
   12408:	cmp	r3, #0
   1240c:	beq	124a8 <putchar_unlocked@plt+0x1750>
   12410:	ldr	r2, [fp, #-20]	; 0xffffffec
   12414:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12418:	cmp	r2, r3
   1241c:	bcs	12434 <putchar_unlocked@plt+0x16dc>
   12420:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12424:	ldr	r3, [fp, #-20]	; 0xffffffec
   12428:	add	r3, r2, r3
   1242c:	mov	r2, #39	; 0x27
   12430:	strb	r2, [r3]
   12434:	ldr	r3, [fp, #-20]	; 0xffffffec
   12438:	add	r3, r3, #1
   1243c:	str	r3, [fp, #-20]	; 0xffffffec
   12440:	ldr	r2, [fp, #-20]	; 0xffffffec
   12444:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12448:	cmp	r2, r3
   1244c:	bcs	12464 <putchar_unlocked@plt+0x170c>
   12450:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12454:	ldr	r3, [fp, #-20]	; 0xffffffec
   12458:	add	r3, r2, r3
   1245c:	mov	r2, #36	; 0x24
   12460:	strb	r2, [r3]
   12464:	ldr	r3, [fp, #-20]	; 0xffffffec
   12468:	add	r3, r3, #1
   1246c:	str	r3, [fp, #-20]	; 0xffffffec
   12470:	ldr	r2, [fp, #-20]	; 0xffffffec
   12474:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12478:	cmp	r2, r3
   1247c:	bcs	12494 <putchar_unlocked@plt+0x173c>
   12480:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12484:	ldr	r3, [fp, #-20]	; 0xffffffec
   12488:	add	r3, r2, r3
   1248c:	mov	r2, #39	; 0x27
   12490:	strb	r2, [r3]
   12494:	ldr	r3, [fp, #-20]	; 0xffffffec
   12498:	add	r3, r3, #1
   1249c:	str	r3, [fp, #-20]	; 0xffffffec
   124a0:	mov	r3, #1
   124a4:	strb	r3, [fp, #-35]	; 0xffffffdd
   124a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   124ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   124b0:	cmp	r2, r3
   124b4:	bcs	124cc <putchar_unlocked@plt+0x1774>
   124b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   124bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   124c0:	add	r3, r2, r3
   124c4:	mov	r2, #92	; 0x5c
   124c8:	strb	r2, [r3]
   124cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   124d0:	add	r3, r3, #1
   124d4:	str	r3, [fp, #-20]	; 0xffffffec
   124d8:	ldr	r3, [fp, #4]
   124dc:	cmp	r3, #2
   124e0:	beq	12590 <putchar_unlocked@plt+0x1838>
   124e4:	ldr	r3, [fp, #-16]
   124e8:	add	r2, r3, #1
   124ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   124f0:	cmp	r2, r3
   124f4:	bcs	12590 <putchar_unlocked@plt+0x1838>
   124f8:	ldr	r3, [fp, #-16]
   124fc:	add	r3, r3, #1
   12500:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12504:	add	r3, r2, r3
   12508:	ldrb	r3, [r3]
   1250c:	cmp	r3, #47	; 0x2f
   12510:	bls	12590 <putchar_unlocked@plt+0x1838>
   12514:	ldr	r3, [fp, #-16]
   12518:	add	r3, r3, #1
   1251c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12520:	add	r3, r2, r3
   12524:	ldrb	r3, [r3]
   12528:	cmp	r3, #57	; 0x39
   1252c:	bhi	12590 <putchar_unlocked@plt+0x1838>
   12530:	ldr	r2, [fp, #-20]	; 0xffffffec
   12534:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12538:	cmp	r2, r3
   1253c:	bcs	12554 <putchar_unlocked@plt+0x17fc>
   12540:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12544:	ldr	r3, [fp, #-20]	; 0xffffffec
   12548:	add	r3, r2, r3
   1254c:	mov	r2, #48	; 0x30
   12550:	strb	r2, [r3]
   12554:	ldr	r3, [fp, #-20]	; 0xffffffec
   12558:	add	r3, r3, #1
   1255c:	str	r3, [fp, #-20]	; 0xffffffec
   12560:	ldr	r2, [fp, #-20]	; 0xffffffec
   12564:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12568:	cmp	r2, r3
   1256c:	bcs	12584 <putchar_unlocked@plt+0x182c>
   12570:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12574:	ldr	r3, [fp, #-20]	; 0xffffffec
   12578:	add	r3, r2, r3
   1257c:	mov	r2, #48	; 0x30
   12580:	strb	r2, [r3]
   12584:	ldr	r3, [fp, #-20]	; 0xffffffec
   12588:	add	r3, r3, #1
   1258c:	str	r3, [fp, #-20]	; 0xffffffec
   12590:	mov	r3, #48	; 0x30
   12594:	strb	r3, [fp, #-38]	; 0xffffffda
   12598:	b	12fd8 <putchar_unlocked@plt+0x2280>
   1259c:	ldr	r3, [fp, #8]
   125a0:	and	r3, r3, #1
   125a4:	cmp	r3, #0
   125a8:	beq	12fd8 <putchar_unlocked@plt+0x2280>
   125ac:	b	13274 <putchar_unlocked@plt+0x251c>
   125b0:	ldr	r3, [fp, #4]
   125b4:	cmp	r3, #2
   125b8:	beq	125c8 <putchar_unlocked@plt+0x1870>
   125bc:	cmp	r3, #5
   125c0:	beq	125d8 <putchar_unlocked@plt+0x1880>
   125c4:	b	127bc <putchar_unlocked@plt+0x1a64>
   125c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   125cc:	cmp	r3, #0
   125d0:	beq	127b0 <putchar_unlocked@plt+0x1a58>
   125d4:	b	13480 <putchar_unlocked@plt+0x2728>
   125d8:	ldr	r3, [fp, #8]
   125dc:	and	r3, r3, #4
   125e0:	cmp	r3, #0
   125e4:	beq	127b8 <putchar_unlocked@plt+0x1a60>
   125e8:	ldr	r3, [fp, #-16]
   125ec:	add	r2, r3, #2
   125f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   125f4:	cmp	r2, r3
   125f8:	bcs	127b8 <putchar_unlocked@plt+0x1a60>
   125fc:	ldr	r3, [fp, #-16]
   12600:	add	r3, r3, #1
   12604:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12608:	add	r3, r2, r3
   1260c:	ldrb	r3, [r3]
   12610:	cmp	r3, #63	; 0x3f
   12614:	bne	127b8 <putchar_unlocked@plt+0x1a60>
   12618:	ldr	r3, [fp, #-16]
   1261c:	add	r3, r3, #2
   12620:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12624:	add	r3, r2, r3
   12628:	ldrb	r3, [r3]
   1262c:	sub	r3, r3, #33	; 0x21
   12630:	cmp	r3, #29
   12634:	ldrls	pc, [pc, r3, lsl #2]
   12638:	b	127a8 <putchar_unlocked@plt+0x1a50>
   1263c:			; <UNDEFINED> instruction: 0x000126b4
   12640:	andeq	r2, r1, r8, lsr #15
   12644:	andeq	r2, r1, r8, lsr #15
   12648:	andeq	r2, r1, r8, lsr #15
   1264c:	andeq	r2, r1, r8, lsr #15
   12650:	andeq	r2, r1, r8, lsr #15
   12654:			; <UNDEFINED> instruction: 0x000126b4
   12658:			; <UNDEFINED> instruction: 0x000126b4
   1265c:			; <UNDEFINED> instruction: 0x000126b4
   12660:	andeq	r2, r1, r8, lsr #15
   12664:	andeq	r2, r1, r8, lsr #15
   12668:	andeq	r2, r1, r8, lsr #15
   1266c:			; <UNDEFINED> instruction: 0x000126b4
   12670:	andeq	r2, r1, r8, lsr #15
   12674:			; <UNDEFINED> instruction: 0x000126b4
   12678:	andeq	r2, r1, r8, lsr #15
   1267c:	andeq	r2, r1, r8, lsr #15
   12680:	andeq	r2, r1, r8, lsr #15
   12684:	andeq	r2, r1, r8, lsr #15
   12688:	andeq	r2, r1, r8, lsr #15
   1268c:	andeq	r2, r1, r8, lsr #15
   12690:	andeq	r2, r1, r8, lsr #15
   12694:	andeq	r2, r1, r8, lsr #15
   12698:	andeq	r2, r1, r8, lsr #15
   1269c:	andeq	r2, r1, r8, lsr #15
   126a0:	andeq	r2, r1, r8, lsr #15
   126a4:	andeq	r2, r1, r8, lsr #15
   126a8:			; <UNDEFINED> instruction: 0x000126b4
   126ac:			; <UNDEFINED> instruction: 0x000126b4
   126b0:			; <UNDEFINED> instruction: 0x000126b4
   126b4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   126b8:	cmp	r3, #0
   126bc:	bne	1344c <putchar_unlocked@plt+0x26f4>
   126c0:	ldr	r3, [fp, #-16]
   126c4:	add	r3, r3, #2
   126c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   126cc:	add	r3, r2, r3
   126d0:	ldrb	r3, [r3]
   126d4:	strb	r3, [fp, #-38]	; 0xffffffda
   126d8:	ldr	r3, [fp, #-16]
   126dc:	add	r3, r3, #2
   126e0:	str	r3, [fp, #-16]
   126e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   126e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   126ec:	cmp	r2, r3
   126f0:	bcs	12708 <putchar_unlocked@plt+0x19b0>
   126f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   126f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   126fc:	add	r3, r2, r3
   12700:	mov	r2, #63	; 0x3f
   12704:	strb	r2, [r3]
   12708:	ldr	r3, [fp, #-20]	; 0xffffffec
   1270c:	add	r3, r3, #1
   12710:	str	r3, [fp, #-20]	; 0xffffffec
   12714:	ldr	r2, [fp, #-20]	; 0xffffffec
   12718:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1271c:	cmp	r2, r3
   12720:	bcs	12738 <putchar_unlocked@plt+0x19e0>
   12724:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12728:	ldr	r3, [fp, #-20]	; 0xffffffec
   1272c:	add	r3, r2, r3
   12730:	mov	r2, #34	; 0x22
   12734:	strb	r2, [r3]
   12738:	ldr	r3, [fp, #-20]	; 0xffffffec
   1273c:	add	r3, r3, #1
   12740:	str	r3, [fp, #-20]	; 0xffffffec
   12744:	ldr	r2, [fp, #-20]	; 0xffffffec
   12748:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1274c:	cmp	r2, r3
   12750:	bcs	12768 <putchar_unlocked@plt+0x1a10>
   12754:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12758:	ldr	r3, [fp, #-20]	; 0xffffffec
   1275c:	add	r3, r2, r3
   12760:	mov	r2, #34	; 0x22
   12764:	strb	r2, [r3]
   12768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1276c:	add	r3, r3, #1
   12770:	str	r3, [fp, #-20]	; 0xffffffec
   12774:	ldr	r2, [fp, #-20]	; 0xffffffec
   12778:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1277c:	cmp	r2, r3
   12780:	bcs	12798 <putchar_unlocked@plt+0x1a40>
   12784:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1278c:	add	r3, r2, r3
   12790:	mov	r2, #63	; 0x3f
   12794:	strb	r2, [r3]
   12798:	ldr	r3, [fp, #-20]	; 0xffffffec
   1279c:	add	r3, r3, #1
   127a0:	str	r3, [fp, #-20]	; 0xffffffec
   127a4:	b	127ac <putchar_unlocked@plt+0x1a54>
   127a8:	nop			; (mov r0, r0)
   127ac:	b	127b8 <putchar_unlocked@plt+0x1a60>
   127b0:	nop			; (mov r0, r0)
   127b4:	b	13004 <putchar_unlocked@plt+0x22ac>
   127b8:	nop			; (mov r0, r0)
   127bc:	b	13004 <putchar_unlocked@plt+0x22ac>
   127c0:	mov	r3, #97	; 0x61
   127c4:	strb	r3, [fp, #-39]	; 0xffffffd9
   127c8:	b	12874 <putchar_unlocked@plt+0x1b1c>
   127cc:	mov	r3, #98	; 0x62
   127d0:	strb	r3, [fp, #-39]	; 0xffffffd9
   127d4:	b	12874 <putchar_unlocked@plt+0x1b1c>
   127d8:	mov	r3, #102	; 0x66
   127dc:	strb	r3, [fp, #-39]	; 0xffffffd9
   127e0:	b	12874 <putchar_unlocked@plt+0x1b1c>
   127e4:	mov	r3, #110	; 0x6e
   127e8:	strb	r3, [fp, #-39]	; 0xffffffd9
   127ec:	b	1285c <putchar_unlocked@plt+0x1b04>
   127f0:	mov	r3, #114	; 0x72
   127f4:	strb	r3, [fp, #-39]	; 0xffffffd9
   127f8:	b	1285c <putchar_unlocked@plt+0x1b04>
   127fc:	mov	r3, #116	; 0x74
   12800:	strb	r3, [fp, #-39]	; 0xffffffd9
   12804:	b	1285c <putchar_unlocked@plt+0x1b04>
   12808:	mov	r3, #118	; 0x76
   1280c:	strb	r3, [fp, #-39]	; 0xffffffd9
   12810:	b	12874 <putchar_unlocked@plt+0x1b1c>
   12814:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12818:	strb	r3, [fp, #-39]	; 0xffffffd9
   1281c:	ldr	r3, [fp, #4]
   12820:	cmp	r3, #2
   12824:	bne	12838 <putchar_unlocked@plt+0x1ae0>
   12828:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1282c:	cmp	r3, #0
   12830:	beq	1318c <putchar_unlocked@plt+0x2434>
   12834:	b	13480 <putchar_unlocked@plt+0x2728>
   12838:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   1283c:	cmp	r3, #0
   12840:	beq	1285c <putchar_unlocked@plt+0x1b04>
   12844:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12848:	cmp	r3, #0
   1284c:	beq	1285c <putchar_unlocked@plt+0x1b04>
   12850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12854:	cmp	r3, #0
   12858:	bne	13194 <putchar_unlocked@plt+0x243c>
   1285c:	ldr	r3, [fp, #4]
   12860:	cmp	r3, #2
   12864:	bne	12874 <putchar_unlocked@plt+0x1b1c>
   12868:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1286c:	cmp	r3, #0
   12870:	bne	13454 <putchar_unlocked@plt+0x26fc>
   12874:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12878:	cmp	r3, #0
   1287c:	beq	12fe0 <putchar_unlocked@plt+0x2288>
   12880:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   12884:	strb	r3, [fp, #-38]	; 0xffffffda
   12888:	b	1308c <putchar_unlocked@plt+0x2334>
   1288c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12890:	cmn	r3, #1
   12894:	bne	128b8 <putchar_unlocked@plt+0x1b60>
   12898:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1289c:	add	r3, r3, #1
   128a0:	ldrb	r3, [r3]
   128a4:	cmp	r3, #0
   128a8:	movne	r3, #1
   128ac:	moveq	r3, #0
   128b0:	uxtb	r3, r3
   128b4:	b	128cc <putchar_unlocked@plt+0x1b74>
   128b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   128bc:	cmp	r3, #1
   128c0:	movne	r3, #1
   128c4:	moveq	r3, #0
   128c8:	uxtb	r3, r3
   128cc:	cmp	r3, #0
   128d0:	bne	12fe8 <putchar_unlocked@plt+0x2290>
   128d4:	ldr	r3, [fp, #-16]
   128d8:	cmp	r3, #0
   128dc:	bne	12ff0 <putchar_unlocked@plt+0x2298>
   128e0:	mov	r3, #1
   128e4:	strb	r3, [fp, #-42]	; 0xffffffd6
   128e8:	ldr	r3, [fp, #4]
   128ec:	cmp	r3, #2
   128f0:	bne	12ff8 <putchar_unlocked@plt+0x22a0>
   128f4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   128f8:	cmp	r3, #0
   128fc:	beq	12ff8 <putchar_unlocked@plt+0x22a0>
   12900:	b	13480 <putchar_unlocked@plt+0x2728>
   12904:	mov	r3, #1
   12908:	strb	r3, [fp, #-36]	; 0xffffffdc
   1290c:	mov	r3, #1
   12910:	strb	r3, [fp, #-42]	; 0xffffffd6
   12914:	ldr	r3, [fp, #4]
   12918:	cmp	r3, #2
   1291c:	bne	13000 <putchar_unlocked@plt+0x22a8>
   12920:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12924:	cmp	r3, #0
   12928:	bne	1345c <putchar_unlocked@plt+0x2704>
   1292c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12930:	cmp	r3, #0
   12934:	beq	12954 <putchar_unlocked@plt+0x1bfc>
   12938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1293c:	cmp	r3, #0
   12940:	bne	12954 <putchar_unlocked@plt+0x1bfc>
   12944:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12948:	str	r3, [fp, #-24]	; 0xffffffe8
   1294c:	mov	r3, #0
   12950:	str	r3, [fp, #-92]	; 0xffffffa4
   12954:	ldr	r2, [fp, #-20]	; 0xffffffec
   12958:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1295c:	cmp	r2, r3
   12960:	bcs	12978 <putchar_unlocked@plt+0x1c20>
   12964:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12968:	ldr	r3, [fp, #-20]	; 0xffffffec
   1296c:	add	r3, r2, r3
   12970:	mov	r2, #39	; 0x27
   12974:	strb	r2, [r3]
   12978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1297c:	add	r3, r3, #1
   12980:	str	r3, [fp, #-20]	; 0xffffffec
   12984:	ldr	r2, [fp, #-20]	; 0xffffffec
   12988:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1298c:	cmp	r2, r3
   12990:	bcs	129a8 <putchar_unlocked@plt+0x1c50>
   12994:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12998:	ldr	r3, [fp, #-20]	; 0xffffffec
   1299c:	add	r3, r2, r3
   129a0:	mov	r2, #92	; 0x5c
   129a4:	strb	r2, [r3]
   129a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   129ac:	add	r3, r3, #1
   129b0:	str	r3, [fp, #-20]	; 0xffffffec
   129b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   129b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   129bc:	cmp	r2, r3
   129c0:	bcs	129d8 <putchar_unlocked@plt+0x1c80>
   129c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   129c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   129cc:	add	r3, r2, r3
   129d0:	mov	r2, #39	; 0x27
   129d4:	strb	r2, [r3]
   129d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   129dc:	add	r3, r3, #1
   129e0:	str	r3, [fp, #-20]	; 0xffffffec
   129e4:	mov	r3, #0
   129e8:	strb	r3, [fp, #-35]	; 0xffffffdd
   129ec:	b	13000 <putchar_unlocked@plt+0x22a8>
   129f0:	mov	r3, #1
   129f4:	strb	r3, [fp, #-42]	; 0xffffffd6
   129f8:	b	13004 <putchar_unlocked@plt+0x22ac>
   129fc:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   12a00:	cmp	r3, #0
   12a04:	beq	12a44 <putchar_unlocked@plt+0x1cec>
   12a08:	mov	r3, #1
   12a0c:	str	r3, [fp, #-48]	; 0xffffffd0
   12a10:	bl	10c8c <__ctype_b_loc@plt>
   12a14:	mov	r3, r0
   12a18:	ldr	r2, [r3]
   12a1c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12a20:	lsl	r3, r3, #1
   12a24:	add	r3, r2, r3
   12a28:	ldrh	r3, [r3]
   12a2c:	and	r3, r3, #16384	; 0x4000
   12a30:	cmp	r3, #0
   12a34:	movne	r3, #1
   12a38:	moveq	r3, #0
   12a3c:	strb	r3, [fp, #-49]	; 0xffffffcf
   12a40:	b	12c90 <putchar_unlocked@plt+0x1f38>
   12a44:	sub	r3, fp, #76	; 0x4c
   12a48:	mov	r2, #8
   12a4c:	mov	r1, #0
   12a50:	mov	r0, r3
   12a54:	bl	10ce0 <memset@plt>
   12a58:	mov	r3, #0
   12a5c:	str	r3, [fp, #-48]	; 0xffffffd0
   12a60:	mov	r3, #1
   12a64:	strb	r3, [fp, #-49]	; 0xffffffcf
   12a68:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12a6c:	cmn	r3, #1
   12a70:	bne	12a80 <putchar_unlocked@plt+0x1d28>
   12a74:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12a78:	bl	10cb0 <strlen@plt>
   12a7c:	str	r0, [fp, #-100]	; 0xffffff9c
   12a80:	ldr	r2, [fp, #-16]
   12a84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12a88:	add	r3, r2, r3
   12a8c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12a90:	add	r1, r2, r3
   12a94:	ldr	r2, [fp, #-16]
   12a98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12a9c:	add	r3, r2, r3
   12aa0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12aa4:	sub	r2, r2, r3
   12aa8:	sub	r3, fp, #76	; 0x4c
   12aac:	sub	r0, fp, #80	; 0x50
   12ab0:	bl	15c2c <putchar_unlocked@plt+0x4ed4>
   12ab4:	str	r0, [fp, #-64]	; 0xffffffc0
   12ab8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12abc:	cmp	r3, #0
   12ac0:	beq	12c84 <putchar_unlocked@plt+0x1f2c>
   12ac4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12ac8:	cmn	r3, #1
   12acc:	bne	12adc <putchar_unlocked@plt+0x1d84>
   12ad0:	mov	r3, #0
   12ad4:	strb	r3, [fp, #-49]	; 0xffffffcf
   12ad8:	b	12c90 <putchar_unlocked@plt+0x1f38>
   12adc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12ae0:	cmn	r3, #2
   12ae4:	bne	12b3c <putchar_unlocked@plt+0x1de4>
   12ae8:	mov	r3, #0
   12aec:	strb	r3, [fp, #-49]	; 0xffffffcf
   12af0:	b	12b00 <putchar_unlocked@plt+0x1da8>
   12af4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12af8:	add	r3, r3, #1
   12afc:	str	r3, [fp, #-48]	; 0xffffffd0
   12b00:	ldr	r2, [fp, #-16]
   12b04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12b08:	add	r2, r2, r3
   12b0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12b10:	cmp	r2, r3
   12b14:	bcs	12c8c <putchar_unlocked@plt+0x1f34>
   12b18:	ldr	r2, [fp, #-16]
   12b1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12b20:	add	r3, r2, r3
   12b24:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12b28:	add	r3, r2, r3
   12b2c:	ldrb	r3, [r3]
   12b30:	cmp	r3, #0
   12b34:	bne	12af4 <putchar_unlocked@plt+0x1d9c>
   12b38:	b	12c8c <putchar_unlocked@plt+0x1f34>
   12b3c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12b40:	cmp	r3, #0
   12b44:	beq	12c38 <putchar_unlocked@plt+0x1ee0>
   12b48:	ldr	r3, [fp, #4]
   12b4c:	cmp	r3, #2
   12b50:	bne	12c38 <putchar_unlocked@plt+0x1ee0>
   12b54:	mov	r3, #1
   12b58:	str	r3, [fp, #-56]	; 0xffffffc8
   12b5c:	b	12c28 <putchar_unlocked@plt+0x1ed0>
   12b60:	ldr	r2, [fp, #-16]
   12b64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12b68:	add	r2, r2, r3
   12b6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12b70:	add	r3, r2, r3
   12b74:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12b78:	add	r3, r2, r3
   12b7c:	ldrb	r3, [r3]
   12b80:	sub	r3, r3, #91	; 0x5b
   12b84:	cmp	r3, #33	; 0x21
   12b88:	ldrls	pc, [pc, r3, lsl #2]
   12b8c:	b	12c18 <putchar_unlocked@plt+0x1ec0>
   12b90:	andeq	r3, r1, r4, ror #8
   12b94:	andeq	r3, r1, r4, ror #8
   12b98:	andeq	r2, r1, r8, lsl ip
   12b9c:	andeq	r3, r1, r4, ror #8
   12ba0:	andeq	r2, r1, r8, lsl ip
   12ba4:	andeq	r3, r1, r4, ror #8
   12ba8:	andeq	r2, r1, r8, lsl ip
   12bac:	andeq	r2, r1, r8, lsl ip
   12bb0:	andeq	r2, r1, r8, lsl ip
   12bb4:	andeq	r2, r1, r8, lsl ip
   12bb8:	andeq	r2, r1, r8, lsl ip
   12bbc:	andeq	r2, r1, r8, lsl ip
   12bc0:	andeq	r2, r1, r8, lsl ip
   12bc4:	andeq	r2, r1, r8, lsl ip
   12bc8:	andeq	r2, r1, r8, lsl ip
   12bcc:	andeq	r2, r1, r8, lsl ip
   12bd0:	andeq	r2, r1, r8, lsl ip
   12bd4:	andeq	r2, r1, r8, lsl ip
   12bd8:	andeq	r2, r1, r8, lsl ip
   12bdc:	andeq	r2, r1, r8, lsl ip
   12be0:	andeq	r2, r1, r8, lsl ip
   12be4:	andeq	r2, r1, r8, lsl ip
   12be8:	andeq	r2, r1, r8, lsl ip
   12bec:	andeq	r2, r1, r8, lsl ip
   12bf0:	andeq	r2, r1, r8, lsl ip
   12bf4:	andeq	r2, r1, r8, lsl ip
   12bf8:	andeq	r2, r1, r8, lsl ip
   12bfc:	andeq	r2, r1, r8, lsl ip
   12c00:	andeq	r2, r1, r8, lsl ip
   12c04:	andeq	r2, r1, r8, lsl ip
   12c08:	andeq	r2, r1, r8, lsl ip
   12c0c:	andeq	r2, r1, r8, lsl ip
   12c10:	andeq	r2, r1, r8, lsl ip
   12c14:	andeq	r3, r1, r4, ror #8
   12c18:	nop			; (mov r0, r0)
   12c1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c20:	add	r3, r3, #1
   12c24:	str	r3, [fp, #-56]	; 0xffffffc8
   12c28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12c30:	cmp	r2, r3
   12c34:	bcc	12b60 <putchar_unlocked@plt+0x1e08>
   12c38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12c3c:	mov	r0, r3
   12c40:	bl	10bf0 <iswprint@plt>
   12c44:	mov	r3, r0
   12c48:	cmp	r3, #0
   12c4c:	bne	12c58 <putchar_unlocked@plt+0x1f00>
   12c50:	mov	r3, #0
   12c54:	strb	r3, [fp, #-49]	; 0xffffffcf
   12c58:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12c60:	add	r3, r2, r3
   12c64:	str	r3, [fp, #-48]	; 0xffffffd0
   12c68:	sub	r3, fp, #76	; 0x4c
   12c6c:	mov	r0, r3
   12c70:	bl	10ba8 <mbsinit@plt>
   12c74:	mov	r3, r0
   12c78:	cmp	r3, #0
   12c7c:	beq	12a80 <putchar_unlocked@plt+0x1d28>
   12c80:	b	12c90 <putchar_unlocked@plt+0x1f38>
   12c84:	nop			; (mov r0, r0)
   12c88:	b	12c90 <putchar_unlocked@plt+0x1f38>
   12c8c:	nop			; (mov r0, r0)
   12c90:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12c94:	strb	r3, [fp, #-42]	; 0xffffffd6
   12c98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c9c:	cmp	r3, #1
   12ca0:	bhi	12cc4 <putchar_unlocked@plt+0x1f6c>
   12ca4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12ca8:	cmp	r3, #0
   12cac:	beq	13004 <putchar_unlocked@plt+0x22ac>
   12cb0:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12cb4:	eor	r3, r3, #1
   12cb8:	uxtb	r3, r3
   12cbc:	cmp	r3, #0
   12cc0:	beq	13004 <putchar_unlocked@plt+0x22ac>
   12cc4:	ldr	r2, [fp, #-16]
   12cc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12ccc:	add	r3, r2, r3
   12cd0:	str	r3, [fp, #-68]	; 0xffffffbc
   12cd4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12cd8:	cmp	r3, #0
   12cdc:	beq	12e9c <putchar_unlocked@plt+0x2144>
   12ce0:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12ce4:	eor	r3, r3, #1
   12ce8:	uxtb	r3, r3
   12cec:	cmp	r3, #0
   12cf0:	beq	12e9c <putchar_unlocked@plt+0x2144>
   12cf4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12cf8:	cmp	r3, #0
   12cfc:	bne	1346c <putchar_unlocked@plt+0x2714>
   12d00:	mov	r3, #1
   12d04:	strb	r3, [fp, #-41]	; 0xffffffd7
   12d08:	ldr	r3, [fp, #4]
   12d0c:	cmp	r3, #2
   12d10:	bne	12dc0 <putchar_unlocked@plt+0x2068>
   12d14:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   12d18:	eor	r3, r3, #1
   12d1c:	uxtb	r3, r3
   12d20:	cmp	r3, #0
   12d24:	beq	12dc0 <putchar_unlocked@plt+0x2068>
   12d28:	ldr	r2, [fp, #-20]	; 0xffffffec
   12d2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12d30:	cmp	r2, r3
   12d34:	bcs	12d4c <putchar_unlocked@plt+0x1ff4>
   12d38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d40:	add	r3, r2, r3
   12d44:	mov	r2, #39	; 0x27
   12d48:	strb	r2, [r3]
   12d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d50:	add	r3, r3, #1
   12d54:	str	r3, [fp, #-20]	; 0xffffffec
   12d58:	ldr	r2, [fp, #-20]	; 0xffffffec
   12d5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12d60:	cmp	r2, r3
   12d64:	bcs	12d7c <putchar_unlocked@plt+0x2024>
   12d68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d70:	add	r3, r2, r3
   12d74:	mov	r2, #36	; 0x24
   12d78:	strb	r2, [r3]
   12d7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d80:	add	r3, r3, #1
   12d84:	str	r3, [fp, #-20]	; 0xffffffec
   12d88:	ldr	r2, [fp, #-20]	; 0xffffffec
   12d8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12d90:	cmp	r2, r3
   12d94:	bcs	12dac <putchar_unlocked@plt+0x2054>
   12d98:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12da0:	add	r3, r2, r3
   12da4:	mov	r2, #39	; 0x27
   12da8:	strb	r2, [r3]
   12dac:	ldr	r3, [fp, #-20]	; 0xffffffec
   12db0:	add	r3, r3, #1
   12db4:	str	r3, [fp, #-20]	; 0xffffffec
   12db8:	mov	r3, #1
   12dbc:	strb	r3, [fp, #-35]	; 0xffffffdd
   12dc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12dc4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12dc8:	cmp	r2, r3
   12dcc:	bcs	12de4 <putchar_unlocked@plt+0x208c>
   12dd0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12dd8:	add	r3, r2, r3
   12ddc:	mov	r2, #92	; 0x5c
   12de0:	strb	r2, [r3]
   12de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12de8:	add	r3, r3, #1
   12dec:	str	r3, [fp, #-20]	; 0xffffffec
   12df0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12df4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12df8:	cmp	r2, r3
   12dfc:	bcs	12e24 <putchar_unlocked@plt+0x20cc>
   12e00:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12e04:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e08:	add	r3, r2, r3
   12e0c:	ldrb	r2, [fp, #-38]	; 0xffffffda
   12e10:	lsr	r2, r2, #6
   12e14:	uxtb	r2, r2
   12e18:	add	r2, r2, #48	; 0x30
   12e1c:	uxtb	r2, r2
   12e20:	strb	r2, [r3]
   12e24:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e28:	add	r3, r3, #1
   12e2c:	str	r3, [fp, #-20]	; 0xffffffec
   12e30:	ldr	r2, [fp, #-20]	; 0xffffffec
   12e34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12e38:	cmp	r2, r3
   12e3c:	bcs	12e6c <putchar_unlocked@plt+0x2114>
   12e40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12e44:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e48:	add	r3, r2, r3
   12e4c:	ldrb	r2, [fp, #-38]	; 0xffffffda
   12e50:	lsr	r2, r2, #3
   12e54:	uxtb	r2, r2
   12e58:	and	r2, r2, #7
   12e5c:	uxtb	r2, r2
   12e60:	add	r2, r2, #48	; 0x30
   12e64:	uxtb	r2, r2
   12e68:	strb	r2, [r3]
   12e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e70:	add	r3, r3, #1
   12e74:	str	r3, [fp, #-20]	; 0xffffffec
   12e78:	ldrb	r3, [fp, #-38]	; 0xffffffda
   12e7c:	and	r3, r3, #7
   12e80:	uxtb	r3, r3
   12e84:	add	r3, r3, #48	; 0x30
   12e88:	strb	r3, [fp, #-38]	; 0xffffffda
   12e8c:	b	12ee0 <putchar_unlocked@plt+0x2188>
   12e90:	andeq	r7, r1, r4, asr #4
   12e94:	andeq	r7, r1, ip, asr #4
   12e98:	andeq	r7, r1, r8, asr #4
   12e9c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   12ea0:	cmp	r3, #0
   12ea4:	beq	12ee0 <putchar_unlocked@plt+0x2188>
   12ea8:	ldr	r2, [fp, #-20]	; 0xffffffec
   12eac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12eb0:	cmp	r2, r3
   12eb4:	bcs	12ecc <putchar_unlocked@plt+0x2174>
   12eb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ec0:	add	r3, r2, r3
   12ec4:	mov	r2, #92	; 0x5c
   12ec8:	strb	r2, [r3]
   12ecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ed0:	add	r3, r3, #1
   12ed4:	str	r3, [fp, #-20]	; 0xffffffec
   12ed8:	mov	r3, #0
   12edc:	strb	r3, [fp, #-40]	; 0xffffffd8
   12ee0:	ldr	r3, [fp, #-16]
   12ee4:	add	r2, r3, #1
   12ee8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12eec:	cmp	r2, r3
   12ef0:	bcs	12fd0 <putchar_unlocked@plt+0x2278>
   12ef4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   12ef8:	cmp	r3, #0
   12efc:	beq	12f7c <putchar_unlocked@plt+0x2224>
   12f00:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   12f04:	eor	r3, r3, #1
   12f08:	uxtb	r3, r3
   12f0c:	cmp	r3, #0
   12f10:	beq	12f7c <putchar_unlocked@plt+0x2224>
   12f14:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f18:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f1c:	cmp	r2, r3
   12f20:	bcs	12f38 <putchar_unlocked@plt+0x21e0>
   12f24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f2c:	add	r3, r2, r3
   12f30:	mov	r2, #39	; 0x27
   12f34:	strb	r2, [r3]
   12f38:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f3c:	add	r3, r3, #1
   12f40:	str	r3, [fp, #-20]	; 0xffffffec
   12f44:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f4c:	cmp	r2, r3
   12f50:	bcs	12f68 <putchar_unlocked@plt+0x2210>
   12f54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f58:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f5c:	add	r3, r2, r3
   12f60:	mov	r2, #39	; 0x27
   12f64:	strb	r2, [r3]
   12f68:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f6c:	add	r3, r3, #1
   12f70:	str	r3, [fp, #-20]	; 0xffffffec
   12f74:	mov	r3, #0
   12f78:	strb	r3, [fp, #-35]	; 0xffffffdd
   12f7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f80:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f84:	cmp	r2, r3
   12f88:	bcs	12fa0 <putchar_unlocked@plt+0x2248>
   12f8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f94:	add	r3, r2, r3
   12f98:	ldrb	r2, [fp, #-38]	; 0xffffffda
   12f9c:	strb	r2, [r3]
   12fa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   12fa4:	add	r3, r3, #1
   12fa8:	str	r3, [fp, #-20]	; 0xffffffec
   12fac:	ldr	r3, [fp, #-16]
   12fb0:	add	r3, r3, #1
   12fb4:	str	r3, [fp, #-16]
   12fb8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   12fbc:	ldr	r3, [fp, #-16]
   12fc0:	add	r3, r2, r3
   12fc4:	ldrb	r3, [r3]
   12fc8:	strb	r3, [fp, #-38]	; 0xffffffda
   12fcc:	b	12cd4 <putchar_unlocked@plt+0x1f7c>
   12fd0:	nop			; (mov r0, r0)
   12fd4:	b	131a0 <putchar_unlocked@plt+0x2448>
   12fd8:	nop			; (mov r0, r0)
   12fdc:	b	13004 <putchar_unlocked@plt+0x22ac>
   12fe0:	nop			; (mov r0, r0)
   12fe4:	b	13004 <putchar_unlocked@plt+0x22ac>
   12fe8:	nop			; (mov r0, r0)
   12fec:	b	13004 <putchar_unlocked@plt+0x22ac>
   12ff0:	nop			; (mov r0, r0)
   12ff4:	b	13004 <putchar_unlocked@plt+0x22ac>
   12ff8:	nop			; (mov r0, r0)
   12ffc:	b	13004 <putchar_unlocked@plt+0x22ac>
   13000:	nop			; (mov r0, r0)
   13004:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13008:	eor	r3, r3, #1
   1300c:	uxtb	r3, r3
   13010:	cmp	r3, #0
   13014:	bne	13024 <putchar_unlocked@plt+0x22cc>
   13018:	ldr	r3, [fp, #4]
   1301c:	cmp	r3, #2
   13020:	bne	13038 <putchar_unlocked@plt+0x22e0>
   13024:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13028:	eor	r3, r3, #1
   1302c:	uxtb	r3, r3
   13030:	cmp	r3, #0
   13034:	bne	13078 <putchar_unlocked@plt+0x2320>
   13038:	ldr	r3, [fp, #12]
   1303c:	cmp	r3, #0
   13040:	beq	13078 <putchar_unlocked@plt+0x2320>
   13044:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13048:	lsr	r3, r3, #5
   1304c:	uxtb	r3, r3
   13050:	lsl	r3, r3, #2
   13054:	ldr	r2, [fp, #12]
   13058:	add	r3, r2, r3
   1305c:	ldr	r2, [r3]
   13060:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13064:	and	r3, r3, #31
   13068:	lsr	r3, r2, r3
   1306c:	and	r3, r3, #1
   13070:	cmp	r3, #0
   13074:	bne	1308c <putchar_unlocked@plt+0x2334>
   13078:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   1307c:	eor	r3, r3, #1
   13080:	uxtb	r3, r3
   13084:	cmp	r3, #0
   13088:	bne	1319c <putchar_unlocked@plt+0x2444>
   1308c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13090:	cmp	r3, #0
   13094:	bne	13474 <putchar_unlocked@plt+0x271c>
   13098:	mov	r3, #1
   1309c:	strb	r3, [fp, #-41]	; 0xffffffd7
   130a0:	ldr	r3, [fp, #4]
   130a4:	cmp	r3, #2
   130a8:	bne	13158 <putchar_unlocked@plt+0x2400>
   130ac:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   130b0:	eor	r3, r3, #1
   130b4:	uxtb	r3, r3
   130b8:	cmp	r3, #0
   130bc:	beq	13158 <putchar_unlocked@plt+0x2400>
   130c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   130c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   130c8:	cmp	r2, r3
   130cc:	bcs	130e4 <putchar_unlocked@plt+0x238c>
   130d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   130d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   130d8:	add	r3, r2, r3
   130dc:	mov	r2, #39	; 0x27
   130e0:	strb	r2, [r3]
   130e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   130e8:	add	r3, r3, #1
   130ec:	str	r3, [fp, #-20]	; 0xffffffec
   130f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   130f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   130f8:	cmp	r2, r3
   130fc:	bcs	13114 <putchar_unlocked@plt+0x23bc>
   13100:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13104:	ldr	r3, [fp, #-20]	; 0xffffffec
   13108:	add	r3, r2, r3
   1310c:	mov	r2, #36	; 0x24
   13110:	strb	r2, [r3]
   13114:	ldr	r3, [fp, #-20]	; 0xffffffec
   13118:	add	r3, r3, #1
   1311c:	str	r3, [fp, #-20]	; 0xffffffec
   13120:	ldr	r2, [fp, #-20]	; 0xffffffec
   13124:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13128:	cmp	r2, r3
   1312c:	bcs	13144 <putchar_unlocked@plt+0x23ec>
   13130:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13134:	ldr	r3, [fp, #-20]	; 0xffffffec
   13138:	add	r3, r2, r3
   1313c:	mov	r2, #39	; 0x27
   13140:	strb	r2, [r3]
   13144:	ldr	r3, [fp, #-20]	; 0xffffffec
   13148:	add	r3, r3, #1
   1314c:	str	r3, [fp, #-20]	; 0xffffffec
   13150:	mov	r3, #1
   13154:	strb	r3, [fp, #-35]	; 0xffffffdd
   13158:	ldr	r2, [fp, #-20]	; 0xffffffec
   1315c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13160:	cmp	r2, r3
   13164:	bcs	1317c <putchar_unlocked@plt+0x2424>
   13168:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1316c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13170:	add	r3, r2, r3
   13174:	mov	r2, #92	; 0x5c
   13178:	strb	r2, [r3]
   1317c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13180:	add	r3, r3, #1
   13184:	str	r3, [fp, #-20]	; 0xffffffec
   13188:	b	131a0 <putchar_unlocked@plt+0x2448>
   1318c:	nop			; (mov r0, r0)
   13190:	b	131a0 <putchar_unlocked@plt+0x2448>
   13194:	nop			; (mov r0, r0)
   13198:	b	131a0 <putchar_unlocked@plt+0x2448>
   1319c:	nop			; (mov r0, r0)
   131a0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   131a4:	cmp	r3, #0
   131a8:	beq	13228 <putchar_unlocked@plt+0x24d0>
   131ac:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   131b0:	eor	r3, r3, #1
   131b4:	uxtb	r3, r3
   131b8:	cmp	r3, #0
   131bc:	beq	13228 <putchar_unlocked@plt+0x24d0>
   131c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   131c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   131c8:	cmp	r2, r3
   131cc:	bcs	131e4 <putchar_unlocked@plt+0x248c>
   131d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   131d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131d8:	add	r3, r2, r3
   131dc:	mov	r2, #39	; 0x27
   131e0:	strb	r2, [r3]
   131e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131e8:	add	r3, r3, #1
   131ec:	str	r3, [fp, #-20]	; 0xffffffec
   131f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   131f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   131f8:	cmp	r2, r3
   131fc:	bcs	13214 <putchar_unlocked@plt+0x24bc>
   13200:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13204:	ldr	r3, [fp, #-20]	; 0xffffffec
   13208:	add	r3, r2, r3
   1320c:	mov	r2, #39	; 0x27
   13210:	strb	r2, [r3]
   13214:	ldr	r3, [fp, #-20]	; 0xffffffec
   13218:	add	r3, r3, #1
   1321c:	str	r3, [fp, #-20]	; 0xffffffec
   13220:	mov	r3, #0
   13224:	strb	r3, [fp, #-35]	; 0xffffffdd
   13228:	ldr	r2, [fp, #-20]	; 0xffffffec
   1322c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13230:	cmp	r2, r3
   13234:	bcs	1324c <putchar_unlocked@plt+0x24f4>
   13238:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1323c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13240:	add	r3, r2, r3
   13244:	ldrb	r2, [fp, #-38]	; 0xffffffda
   13248:	strb	r2, [r3]
   1324c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13250:	add	r3, r3, #1
   13254:	str	r3, [fp, #-20]	; 0xffffffec
   13258:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   1325c:	eor	r3, r3, #1
   13260:	uxtb	r3, r3
   13264:	cmp	r3, #0
   13268:	beq	13274 <putchar_unlocked@plt+0x251c>
   1326c:	mov	r3, #0
   13270:	strb	r3, [fp, #-37]	; 0xffffffdb
   13274:	ldr	r3, [fp, #-16]
   13278:	add	r3, r3, #1
   1327c:	str	r3, [fp, #-16]
   13280:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13284:	cmn	r3, #1
   13288:	bne	132b0 <putchar_unlocked@plt+0x2558>
   1328c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13290:	ldr	r3, [fp, #-16]
   13294:	add	r3, r2, r3
   13298:	ldrb	r3, [r3]
   1329c:	cmp	r3, #0
   132a0:	movne	r3, #1
   132a4:	moveq	r3, #0
   132a8:	uxtb	r3, r3
   132ac:	b	132c8 <putchar_unlocked@plt+0x2570>
   132b0:	ldr	r2, [fp, #-16]
   132b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   132b8:	cmp	r2, r3
   132bc:	movne	r3, #1
   132c0:	moveq	r3, #0
   132c4:	uxtb	r3, r3
   132c8:	cmp	r3, #0
   132cc:	bne	120f4 <putchar_unlocked@plt+0x139c>
   132d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   132d4:	cmp	r3, #0
   132d8:	bne	132f4 <putchar_unlocked@plt+0x259c>
   132dc:	ldr	r3, [fp, #4]
   132e0:	cmp	r3, #2
   132e4:	bne	132f4 <putchar_unlocked@plt+0x259c>
   132e8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   132ec:	cmp	r3, #0
   132f0:	bne	1347c <putchar_unlocked@plt+0x2724>
   132f4:	ldr	r3, [fp, #4]
   132f8:	cmp	r3, #2
   132fc:	bne	1339c <putchar_unlocked@plt+0x2644>
   13300:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13304:	eor	r3, r3, #1
   13308:	uxtb	r3, r3
   1330c:	cmp	r3, #0
   13310:	beq	1339c <putchar_unlocked@plt+0x2644>
   13314:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   13318:	cmp	r3, #0
   1331c:	beq	1339c <putchar_unlocked@plt+0x2644>
   13320:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13324:	cmp	r3, #0
   13328:	beq	13370 <putchar_unlocked@plt+0x2618>
   1332c:	ldr	r3, [fp, #20]
   13330:	str	r3, [sp, #16]
   13334:	ldr	r3, [fp, #16]
   13338:	str	r3, [sp, #12]
   1333c:	ldr	r3, [fp, #12]
   13340:	str	r3, [sp, #8]
   13344:	ldr	r3, [fp, #8]
   13348:	str	r3, [sp, #4]
   1334c:	mov	r3, #5
   13350:	str	r3, [sp]
   13354:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13358:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1335c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13360:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13364:	bl	11e44 <putchar_unlocked@plt+0x10ec>
   13368:	mov	r3, r0
   1336c:	b	134e4 <putchar_unlocked@plt+0x278c>
   13370:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13374:	cmp	r3, #0
   13378:	bne	1339c <putchar_unlocked@plt+0x2644>
   1337c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13380:	cmp	r3, #0
   13384:	beq	1339c <putchar_unlocked@plt+0x2644>
   13388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1338c:	str	r3, [fp, #-92]	; 0xffffffa4
   13390:	mov	r3, #0
   13394:	str	r3, [fp, #-20]	; 0xffffffec
   13398:	b	11ed0 <putchar_unlocked@plt+0x1178>
   1339c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133a0:	cmp	r3, #0
   133a4:	beq	13410 <putchar_unlocked@plt+0x26b8>
   133a8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   133ac:	eor	r3, r3, #1
   133b0:	uxtb	r3, r3
   133b4:	cmp	r3, #0
   133b8:	beq	13410 <putchar_unlocked@plt+0x26b8>
   133bc:	b	13400 <putchar_unlocked@plt+0x26a8>
   133c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   133c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   133c8:	cmp	r2, r3
   133cc:	bcs	133e8 <putchar_unlocked@plt+0x2690>
   133d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   133d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   133d8:	add	r3, r2, r3
   133dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   133e0:	ldrb	r2, [r2]
   133e4:	strb	r2, [r3]
   133e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   133ec:	add	r3, r3, #1
   133f0:	str	r3, [fp, #-20]	; 0xffffffec
   133f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133f8:	add	r3, r3, #1
   133fc:	str	r3, [fp, #-28]	; 0xffffffe4
   13400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13404:	ldrb	r3, [r3]
   13408:	cmp	r3, #0
   1340c:	bne	133c0 <putchar_unlocked@plt+0x2668>
   13410:	ldr	r2, [fp, #-20]	; 0xffffffec
   13414:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13418:	cmp	r2, r3
   1341c:	bcs	13434 <putchar_unlocked@plt+0x26dc>
   13420:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13424:	ldr	r3, [fp, #-20]	; 0xffffffec
   13428:	add	r3, r2, r3
   1342c:	mov	r2, #0
   13430:	strb	r2, [r3]
   13434:	ldr	r3, [fp, #-20]	; 0xffffffec
   13438:	b	134e4 <putchar_unlocked@plt+0x278c>
   1343c:	nop			; (mov r0, r0)
   13440:	b	13480 <putchar_unlocked@plt+0x2728>
   13444:	nop			; (mov r0, r0)
   13448:	b	13480 <putchar_unlocked@plt+0x2728>
   1344c:	nop			; (mov r0, r0)
   13450:	b	13480 <putchar_unlocked@plt+0x2728>
   13454:	nop			; (mov r0, r0)
   13458:	b	13480 <putchar_unlocked@plt+0x2728>
   1345c:	nop			; (mov r0, r0)
   13460:	b	13480 <putchar_unlocked@plt+0x2728>
   13464:	nop			; (mov r0, r0)
   13468:	b	13480 <putchar_unlocked@plt+0x2728>
   1346c:	nop			; (mov r0, r0)
   13470:	b	13480 <putchar_unlocked@plt+0x2728>
   13474:	nop			; (mov r0, r0)
   13478:	b	13480 <putchar_unlocked@plt+0x2728>
   1347c:	nop			; (mov r0, r0)
   13480:	ldr	r3, [fp, #4]
   13484:	cmp	r3, #2
   13488:	bne	134a0 <putchar_unlocked@plt+0x2748>
   1348c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13490:	cmp	r3, #0
   13494:	beq	134a0 <putchar_unlocked@plt+0x2748>
   13498:	mov	r3, #4
   1349c:	str	r3, [fp, #4]
   134a0:	ldr	r3, [fp, #8]
   134a4:	bic	r3, r3, #2
   134a8:	ldr	r2, [fp, #20]
   134ac:	str	r2, [sp, #16]
   134b0:	ldr	r2, [fp, #16]
   134b4:	str	r2, [sp, #12]
   134b8:	mov	r2, #0
   134bc:	str	r2, [sp, #8]
   134c0:	str	r3, [sp, #4]
   134c4:	ldr	r3, [fp, #4]
   134c8:	str	r3, [sp]
   134cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   134d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   134d4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   134d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   134dc:	bl	11e44 <putchar_unlocked@plt+0x10ec>
   134e0:	mov	r3, r0
   134e4:	mov	r0, r3
   134e8:	sub	sp, fp, #8
   134ec:	pop	{r4, fp, pc}
   134f0:	push	{fp, lr}
   134f4:	add	fp, sp, #4
   134f8:	sub	sp, sp, #56	; 0x38
   134fc:	str	r0, [fp, #-24]	; 0xffffffe8
   13500:	str	r1, [fp, #-28]	; 0xffffffe4
   13504:	str	r2, [fp, #-32]	; 0xffffffe0
   13508:	str	r3, [fp, #-36]	; 0xffffffdc
   1350c:	ldr	r3, [fp, #4]
   13510:	cmp	r3, #0
   13514:	beq	13520 <putchar_unlocked@plt+0x27c8>
   13518:	ldr	r3, [fp, #4]
   1351c:	b	13524 <putchar_unlocked@plt+0x27cc>
   13520:	ldr	r3, [pc, #132]	; 135ac <putchar_unlocked@plt+0x2854>
   13524:	str	r3, [fp, #-8]
   13528:	bl	10cc8 <__errno_location@plt>
   1352c:	mov	r3, r0
   13530:	ldr	r3, [r3]
   13534:	str	r3, [fp, #-12]
   13538:	ldr	r3, [fp, #-8]
   1353c:	ldr	r3, [r3]
   13540:	ldr	r2, [fp, #-8]
   13544:	ldr	r2, [r2, #4]
   13548:	ldr	r1, [fp, #-8]
   1354c:	add	r1, r1, #8
   13550:	ldr	r0, [fp, #-8]
   13554:	ldr	r0, [r0, #40]	; 0x28
   13558:	ldr	ip, [fp, #-8]
   1355c:	ldr	ip, [ip, #44]	; 0x2c
   13560:	str	ip, [sp, #16]
   13564:	str	r0, [sp, #12]
   13568:	str	r1, [sp, #8]
   1356c:	str	r2, [sp, #4]
   13570:	str	r3, [sp]
   13574:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13578:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1357c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13584:	bl	11e44 <putchar_unlocked@plt+0x10ec>
   13588:	str	r0, [fp, #-16]
   1358c:	bl	10cc8 <__errno_location@plt>
   13590:	mov	r2, r0
   13594:	ldr	r3, [fp, #-12]
   13598:	str	r3, [r2]
   1359c:	ldr	r3, [fp, #-16]
   135a0:	mov	r0, r3
   135a4:	sub	sp, fp, #4
   135a8:	pop	{fp, pc}
   135ac:	andeq	r8, r2, r8, asr #2
   135b0:	push	{fp, lr}
   135b4:	add	fp, sp, #4
   135b8:	sub	sp, sp, #16
   135bc:	str	r0, [fp, #-8]
   135c0:	str	r1, [fp, #-12]
   135c4:	str	r2, [fp, #-16]
   135c8:	ldr	r3, [fp, #-16]
   135cc:	mov	r2, #0
   135d0:	ldr	r1, [fp, #-12]
   135d4:	ldr	r0, [fp, #-8]
   135d8:	bl	135ec <putchar_unlocked@plt+0x2894>
   135dc:	mov	r3, r0
   135e0:	mov	r0, r3
   135e4:	sub	sp, fp, #4
   135e8:	pop	{fp, pc}
   135ec:	push	{fp, lr}
   135f0:	add	fp, sp, #4
   135f4:	sub	sp, sp, #64	; 0x40
   135f8:	str	r0, [fp, #-32]	; 0xffffffe0
   135fc:	str	r1, [fp, #-36]	; 0xffffffdc
   13600:	str	r2, [fp, #-40]	; 0xffffffd8
   13604:	str	r3, [fp, #-44]	; 0xffffffd4
   13608:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1360c:	cmp	r3, #0
   13610:	beq	1361c <putchar_unlocked@plt+0x28c4>
   13614:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13618:	b	13620 <putchar_unlocked@plt+0x28c8>
   1361c:	ldr	r3, [pc, #292]	; 13748 <putchar_unlocked@plt+0x29f0>
   13620:	str	r3, [fp, #-8]
   13624:	bl	10cc8 <__errno_location@plt>
   13628:	mov	r3, r0
   1362c:	ldr	r3, [r3]
   13630:	str	r3, [fp, #-12]
   13634:	ldr	r3, [fp, #-8]
   13638:	ldr	r3, [r3, #4]
   1363c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13640:	cmp	r2, #0
   13644:	moveq	r2, #1
   13648:	movne	r2, #0
   1364c:	uxtb	r2, r2
   13650:	orr	r3, r3, r2
   13654:	str	r3, [fp, #-16]
   13658:	ldr	r3, [fp, #-8]
   1365c:	ldr	r3, [r3]
   13660:	ldr	r2, [fp, #-8]
   13664:	add	r2, r2, #8
   13668:	ldr	r1, [fp, #-8]
   1366c:	ldr	r1, [r1, #40]	; 0x28
   13670:	ldr	r0, [fp, #-8]
   13674:	ldr	r0, [r0, #44]	; 0x2c
   13678:	str	r0, [sp, #16]
   1367c:	str	r1, [sp, #12]
   13680:	str	r2, [sp, #8]
   13684:	ldr	r2, [fp, #-16]
   13688:	str	r2, [sp, #4]
   1368c:	str	r3, [sp]
   13690:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13694:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13698:	mov	r1, #0
   1369c:	mov	r0, #0
   136a0:	bl	11e44 <putchar_unlocked@plt+0x10ec>
   136a4:	mov	r3, r0
   136a8:	add	r3, r3, #1
   136ac:	str	r3, [fp, #-20]	; 0xffffffec
   136b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   136b4:	bl	148e8 <putchar_unlocked@plt+0x3b90>
   136b8:	mov	r3, r0
   136bc:	str	r3, [fp, #-24]	; 0xffffffe8
   136c0:	ldr	r3, [fp, #-8]
   136c4:	ldr	r3, [r3]
   136c8:	ldr	r2, [fp, #-8]
   136cc:	add	r2, r2, #8
   136d0:	ldr	r1, [fp, #-8]
   136d4:	ldr	r1, [r1, #40]	; 0x28
   136d8:	ldr	r0, [fp, #-8]
   136dc:	ldr	r0, [r0, #44]	; 0x2c
   136e0:	str	r0, [sp, #16]
   136e4:	str	r1, [sp, #12]
   136e8:	str	r2, [sp, #8]
   136ec:	ldr	r2, [fp, #-16]
   136f0:	str	r2, [sp, #4]
   136f4:	str	r3, [sp]
   136f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   136fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13700:	ldr	r1, [fp, #-20]	; 0xffffffec
   13704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13708:	bl	11e44 <putchar_unlocked@plt+0x10ec>
   1370c:	bl	10cc8 <__errno_location@plt>
   13710:	mov	r2, r0
   13714:	ldr	r3, [fp, #-12]
   13718:	str	r3, [r2]
   1371c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13720:	cmp	r3, #0
   13724:	beq	13738 <putchar_unlocked@plt+0x29e0>
   13728:	ldr	r3, [fp, #-20]	; 0xffffffec
   1372c:	sub	r2, r3, #1
   13730:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13734:	str	r2, [r3]
   13738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1373c:	mov	r0, r3
   13740:	sub	sp, fp, #4
   13744:	pop	{fp, pc}
   13748:	andeq	r8, r2, r8, asr #2
   1374c:	push	{fp, lr}
   13750:	add	fp, sp, #4
   13754:	sub	sp, sp, #8
   13758:	ldr	r3, [pc, #196]	; 13824 <putchar_unlocked@plt+0x2acc>
   1375c:	ldr	r3, [r3]
   13760:	str	r3, [fp, #-12]
   13764:	mov	r3, #1
   13768:	str	r3, [fp, #-8]
   1376c:	b	13798 <putchar_unlocked@plt+0x2a40>
   13770:	ldr	r3, [fp, #-8]
   13774:	lsl	r3, r3, #3
   13778:	ldr	r2, [fp, #-12]
   1377c:	add	r3, r2, r3
   13780:	ldr	r3, [r3, #4]
   13784:	mov	r0, r3
   13788:	bl	15924 <putchar_unlocked@plt+0x4bcc>
   1378c:	ldr	r3, [fp, #-8]
   13790:	add	r3, r3, #1
   13794:	str	r3, [fp, #-8]
   13798:	ldr	r3, [pc, #136]	; 13828 <putchar_unlocked@plt+0x2ad0>
   1379c:	ldr	r3, [r3]
   137a0:	ldr	r2, [fp, #-8]
   137a4:	cmp	r2, r3
   137a8:	blt	13770 <putchar_unlocked@plt+0x2a18>
   137ac:	ldr	r3, [fp, #-12]
   137b0:	ldr	r3, [r3, #4]
   137b4:	ldr	r2, [pc, #112]	; 1382c <putchar_unlocked@plt+0x2ad4>
   137b8:	cmp	r3, r2
   137bc:	beq	137e8 <putchar_unlocked@plt+0x2a90>
   137c0:	ldr	r3, [fp, #-12]
   137c4:	ldr	r3, [r3, #4]
   137c8:	mov	r0, r3
   137cc:	bl	15924 <putchar_unlocked@plt+0x4bcc>
   137d0:	ldr	r3, [pc, #88]	; 13830 <putchar_unlocked@plt+0x2ad8>
   137d4:	mov	r2, #256	; 0x100
   137d8:	str	r2, [r3]
   137dc:	ldr	r3, [pc, #76]	; 13830 <putchar_unlocked@plt+0x2ad8>
   137e0:	ldr	r2, [pc, #68]	; 1382c <putchar_unlocked@plt+0x2ad4>
   137e4:	str	r2, [r3, #4]
   137e8:	ldr	r3, [fp, #-12]
   137ec:	ldr	r2, [pc, #60]	; 13830 <putchar_unlocked@plt+0x2ad8>
   137f0:	cmp	r3, r2
   137f4:	beq	1380c <putchar_unlocked@plt+0x2ab4>
   137f8:	ldr	r0, [fp, #-12]
   137fc:	bl	15924 <putchar_unlocked@plt+0x4bcc>
   13800:	ldr	r3, [pc, #28]	; 13824 <putchar_unlocked@plt+0x2acc>
   13804:	ldr	r2, [pc, #36]	; 13830 <putchar_unlocked@plt+0x2ad8>
   13808:	str	r2, [r3]
   1380c:	ldr	r3, [pc, #20]	; 13828 <putchar_unlocked@plt+0x2ad0>
   13810:	mov	r2, #1
   13814:	str	r2, [r3]
   13818:	nop			; (mov r0, r0)
   1381c:	sub	sp, fp, #4
   13820:	pop	{fp, pc}
   13824:	andeq	r8, r2, r8, ror #1
   13828:	ldrdeq	r8, [r2], -ip
   1382c:	andeq	r8, r2, r8, ror r1
   13830:	andeq	r8, r2, r0, ror #1
   13834:	push	{r4, fp, lr}
   13838:	add	fp, sp, #8
   1383c:	sub	sp, sp, #84	; 0x54
   13840:	str	r0, [fp, #-56]	; 0xffffffc8
   13844:	str	r1, [fp, #-60]	; 0xffffffc4
   13848:	str	r2, [fp, #-64]	; 0xffffffc0
   1384c:	str	r3, [fp, #-68]	; 0xffffffbc
   13850:	bl	10cc8 <__errno_location@plt>
   13854:	mov	r3, r0
   13858:	ldr	r3, [r3]
   1385c:	str	r3, [fp, #-24]	; 0xffffffe8
   13860:	ldr	r3, [pc, #640]	; 13ae8 <putchar_unlocked@plt+0x2d90>
   13864:	ldr	r3, [r3]
   13868:	str	r3, [fp, #-16]
   1386c:	mvn	r3, #-2147483648	; 0x80000000
   13870:	str	r3, [fp, #-28]	; 0xffffffe4
   13874:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13878:	cmp	r3, #0
   1387c:	blt	13890 <putchar_unlocked@plt+0x2b38>
   13880:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13888:	cmp	r2, r3
   1388c:	blt	13894 <putchar_unlocked@plt+0x2b3c>
   13890:	bl	10d4c <abort@plt>
   13894:	ldr	r3, [pc, #592]	; 13aec <putchar_unlocked@plt+0x2d94>
   13898:	ldr	r2, [r3]
   1389c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   138a0:	cmp	r2, r3
   138a4:	bgt	13978 <putchar_unlocked@plt+0x2c20>
   138a8:	ldr	r3, [fp, #-16]
   138ac:	ldr	r2, [pc, #572]	; 13af0 <putchar_unlocked@plt+0x2d98>
   138b0:	cmp	r3, r2
   138b4:	moveq	r3, #1
   138b8:	movne	r3, #0
   138bc:	strb	r3, [fp, #-29]	; 0xffffffe3
   138c0:	ldr	r3, [pc, #548]	; 13aec <putchar_unlocked@plt+0x2d94>
   138c4:	ldr	r3, [r3]
   138c8:	str	r3, [fp, #-48]	; 0xffffffd0
   138cc:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   138d0:	cmp	r3, #0
   138d4:	beq	138e0 <putchar_unlocked@plt+0x2b88>
   138d8:	mov	r0, #0
   138dc:	b	138e4 <putchar_unlocked@plt+0x2b8c>
   138e0:	ldr	r0, [fp, #-16]
   138e4:	ldr	r3, [pc, #512]	; 13aec <putchar_unlocked@plt+0x2d94>
   138e8:	ldr	r3, [r3]
   138ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138f0:	sub	r3, r2, r3
   138f4:	add	r2, r3, #1
   138f8:	sub	r1, fp, #48	; 0x30
   138fc:	mov	r3, #8
   13900:	str	r3, [sp]
   13904:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13908:	bl	14c08 <putchar_unlocked@plt+0x3eb0>
   1390c:	str	r0, [fp, #-16]
   13910:	ldr	r2, [pc, #464]	; 13ae8 <putchar_unlocked@plt+0x2d90>
   13914:	ldr	r3, [fp, #-16]
   13918:	str	r3, [r2]
   1391c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   13920:	cmp	r3, #0
   13924:	beq	13938 <putchar_unlocked@plt+0x2be0>
   13928:	ldr	r3, [fp, #-16]
   1392c:	ldr	r2, [pc, #444]	; 13af0 <putchar_unlocked@plt+0x2d98>
   13930:	ldm	r2, {r0, r1}
   13934:	stm	r3, {r0, r1}
   13938:	ldr	r3, [pc, #428]	; 13aec <putchar_unlocked@plt+0x2d94>
   1393c:	ldr	r3, [r3]
   13940:	lsl	r3, r3, #3
   13944:	ldr	r2, [fp, #-16]
   13948:	add	r0, r2, r3
   1394c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13950:	ldr	r3, [pc, #404]	; 13aec <putchar_unlocked@plt+0x2d94>
   13954:	ldr	r3, [r3]
   13958:	sub	r3, r2, r3
   1395c:	lsl	r3, r3, #3
   13960:	mov	r2, r3
   13964:	mov	r1, #0
   13968:	bl	10ce0 <memset@plt>
   1396c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13970:	ldr	r2, [pc, #372]	; 13aec <putchar_unlocked@plt+0x2d94>
   13974:	str	r3, [r2]
   13978:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1397c:	lsl	r3, r3, #3
   13980:	ldr	r2, [fp, #-16]
   13984:	add	r3, r2, r3
   13988:	ldr	r3, [r3]
   1398c:	str	r3, [fp, #-36]	; 0xffffffdc
   13990:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13994:	lsl	r3, r3, #3
   13998:	ldr	r2, [fp, #-16]
   1399c:	add	r3, r2, r3
   139a0:	ldr	r3, [r3, #4]
   139a4:	str	r3, [fp, #-20]	; 0xffffffec
   139a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   139ac:	ldr	r3, [r3, #4]
   139b0:	orr	r3, r3, #1
   139b4:	str	r3, [fp, #-40]	; 0xffffffd8
   139b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   139bc:	ldr	r3, [r3]
   139c0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   139c4:	add	r2, r2, #8
   139c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   139cc:	ldr	r1, [r1, #40]	; 0x28
   139d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   139d4:	ldr	r0, [r0, #44]	; 0x2c
   139d8:	str	r0, [sp, #16]
   139dc:	str	r1, [sp, #12]
   139e0:	str	r2, [sp, #8]
   139e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   139e8:	str	r2, [sp, #4]
   139ec:	str	r3, [sp]
   139f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   139f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   139f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   139fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a00:	bl	11e44 <putchar_unlocked@plt+0x10ec>
   13a04:	str	r0, [fp, #-44]	; 0xffffffd4
   13a08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13a0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13a10:	cmp	r2, r3
   13a14:	bhi	13ac8 <putchar_unlocked@plt+0x2d70>
   13a18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a1c:	lsl	r3, r3, #3
   13a20:	ldr	r2, [fp, #-16]
   13a24:	add	r3, r2, r3
   13a28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13a2c:	add	r2, r2, #1
   13a30:	str	r2, [fp, #-36]	; 0xffffffdc
   13a34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13a38:	str	r2, [r3]
   13a3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a40:	ldr	r2, [pc, #172]	; 13af4 <putchar_unlocked@plt+0x2d9c>
   13a44:	cmp	r3, r2
   13a48:	beq	13a54 <putchar_unlocked@plt+0x2cfc>
   13a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a50:	bl	15924 <putchar_unlocked@plt+0x4bcc>
   13a54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a58:	lsl	r3, r3, #3
   13a5c:	ldr	r2, [fp, #-16]
   13a60:	add	r4, r2, r3
   13a64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a68:	bl	148e8 <putchar_unlocked@plt+0x3b90>
   13a6c:	mov	r3, r0
   13a70:	str	r3, [fp, #-20]	; 0xffffffec
   13a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a78:	str	r3, [r4, #4]
   13a7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13a80:	ldr	r3, [r3]
   13a84:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13a88:	add	r2, r2, #8
   13a8c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13a90:	ldr	r1, [r1, #40]	; 0x28
   13a94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13a98:	ldr	r0, [r0, #44]	; 0x2c
   13a9c:	str	r0, [sp, #16]
   13aa0:	str	r1, [sp, #12]
   13aa4:	str	r2, [sp, #8]
   13aa8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13aac:	str	r2, [sp, #4]
   13ab0:	str	r3, [sp]
   13ab4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13ab8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13abc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ac4:	bl	11e44 <putchar_unlocked@plt+0x10ec>
   13ac8:	bl	10cc8 <__errno_location@plt>
   13acc:	mov	r2, r0
   13ad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ad4:	str	r3, [r2]
   13ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13adc:	mov	r0, r3
   13ae0:	sub	sp, fp, #8
   13ae4:	pop	{r4, fp, pc}
   13ae8:	andeq	r8, r2, r8, ror #1
   13aec:	ldrdeq	r8, [r2], -ip
   13af0:	andeq	r8, r2, r0, ror #1
   13af4:	andeq	r8, r2, r8, ror r1
   13af8:	push	{fp, lr}
   13afc:	add	fp, sp, #4
   13b00:	sub	sp, sp, #8
   13b04:	str	r0, [fp, #-8]
   13b08:	str	r1, [fp, #-12]
   13b0c:	ldr	r3, [pc, #28]	; 13b30 <putchar_unlocked@plt+0x2dd8>
   13b10:	mvn	r2, #0
   13b14:	ldr	r1, [fp, #-12]
   13b18:	ldr	r0, [fp, #-8]
   13b1c:	bl	13834 <putchar_unlocked@plt+0x2adc>
   13b20:	mov	r3, r0
   13b24:	mov	r0, r3
   13b28:	sub	sp, fp, #4
   13b2c:	pop	{fp, pc}
   13b30:	andeq	r8, r2, r8, asr #2
   13b34:	push	{fp, lr}
   13b38:	add	fp, sp, #4
   13b3c:	sub	sp, sp, #16
   13b40:	str	r0, [fp, #-8]
   13b44:	str	r1, [fp, #-12]
   13b48:	str	r2, [fp, #-16]
   13b4c:	ldr	r3, [pc, #28]	; 13b70 <putchar_unlocked@plt+0x2e18>
   13b50:	ldr	r2, [fp, #-16]
   13b54:	ldr	r1, [fp, #-12]
   13b58:	ldr	r0, [fp, #-8]
   13b5c:	bl	13834 <putchar_unlocked@plt+0x2adc>
   13b60:	mov	r3, r0
   13b64:	mov	r0, r3
   13b68:	sub	sp, fp, #4
   13b6c:	pop	{fp, pc}
   13b70:	andeq	r8, r2, r8, asr #2
   13b74:	push	{fp, lr}
   13b78:	add	fp, sp, #4
   13b7c:	sub	sp, sp, #8
   13b80:	str	r0, [fp, #-8]
   13b84:	ldr	r1, [fp, #-8]
   13b88:	mov	r0, #0
   13b8c:	bl	13af8 <putchar_unlocked@plt+0x2da0>
   13b90:	mov	r3, r0
   13b94:	mov	r0, r3
   13b98:	sub	sp, fp, #4
   13b9c:	pop	{fp, pc}
   13ba0:	push	{fp, lr}
   13ba4:	add	fp, sp, #4
   13ba8:	sub	sp, sp, #8
   13bac:	str	r0, [fp, #-8]
   13bb0:	str	r1, [fp, #-12]
   13bb4:	ldr	r2, [fp, #-12]
   13bb8:	ldr	r1, [fp, #-8]
   13bbc:	mov	r0, #0
   13bc0:	bl	13b34 <putchar_unlocked@plt+0x2ddc>
   13bc4:	mov	r3, r0
   13bc8:	mov	r0, r3
   13bcc:	sub	sp, fp, #4
   13bd0:	pop	{fp, pc}
   13bd4:	push	{fp, lr}
   13bd8:	add	fp, sp, #4
   13bdc:	sub	sp, sp, #64	; 0x40
   13be0:	str	r0, [fp, #-56]	; 0xffffffc8
   13be4:	str	r1, [fp, #-60]	; 0xffffffc4
   13be8:	str	r2, [fp, #-64]	; 0xffffffc0
   13bec:	sub	r3, fp, #52	; 0x34
   13bf0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13bf4:	mov	r0, r3
   13bf8:	bl	11ce0 <putchar_unlocked@plt+0xf88>
   13bfc:	sub	r3, fp, #52	; 0x34
   13c00:	mvn	r2, #0
   13c04:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13c08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13c0c:	bl	13834 <putchar_unlocked@plt+0x2adc>
   13c10:	mov	r3, r0
   13c14:	mov	r0, r3
   13c18:	sub	sp, fp, #4
   13c1c:	pop	{fp, pc}
   13c20:	push	{fp, lr}
   13c24:	add	fp, sp, #4
   13c28:	sub	sp, sp, #64	; 0x40
   13c2c:	str	r0, [fp, #-56]	; 0xffffffc8
   13c30:	str	r1, [fp, #-60]	; 0xffffffc4
   13c34:	str	r2, [fp, #-64]	; 0xffffffc0
   13c38:	str	r3, [fp, #-68]	; 0xffffffbc
   13c3c:	sub	r3, fp, #52	; 0x34
   13c40:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13c44:	mov	r0, r3
   13c48:	bl	11ce0 <putchar_unlocked@plt+0xf88>
   13c4c:	sub	r3, fp, #52	; 0x34
   13c50:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13c54:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13c58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13c5c:	bl	13834 <putchar_unlocked@plt+0x2adc>
   13c60:	mov	r3, r0
   13c64:	mov	r0, r3
   13c68:	sub	sp, fp, #4
   13c6c:	pop	{fp, pc}
   13c70:	push	{fp, lr}
   13c74:	add	fp, sp, #4
   13c78:	sub	sp, sp, #8
   13c7c:	str	r0, [fp, #-8]
   13c80:	str	r1, [fp, #-12]
   13c84:	ldr	r2, [fp, #-12]
   13c88:	ldr	r1, [fp, #-8]
   13c8c:	mov	r0, #0
   13c90:	bl	13bd4 <putchar_unlocked@plt+0x2e7c>
   13c94:	mov	r3, r0
   13c98:	mov	r0, r3
   13c9c:	sub	sp, fp, #4
   13ca0:	pop	{fp, pc}
   13ca4:	push	{fp, lr}
   13ca8:	add	fp, sp, #4
   13cac:	sub	sp, sp, #16
   13cb0:	str	r0, [fp, #-8]
   13cb4:	str	r1, [fp, #-12]
   13cb8:	str	r2, [fp, #-16]
   13cbc:	ldr	r3, [fp, #-16]
   13cc0:	ldr	r2, [fp, #-12]
   13cc4:	ldr	r1, [fp, #-8]
   13cc8:	mov	r0, #0
   13ccc:	bl	13c20 <putchar_unlocked@plt+0x2ec8>
   13cd0:	mov	r3, r0
   13cd4:	mov	r0, r3
   13cd8:	sub	sp, fp, #4
   13cdc:	pop	{fp, pc}
   13ce0:	push	{fp, lr}
   13ce4:	add	fp, sp, #4
   13ce8:	sub	sp, sp, #64	; 0x40
   13cec:	str	r0, [fp, #-56]	; 0xffffffc8
   13cf0:	str	r1, [fp, #-60]	; 0xffffffc4
   13cf4:	mov	r3, r2
   13cf8:	strb	r3, [fp, #-61]	; 0xffffffc3
   13cfc:	ldr	r3, [pc, #84]	; 13d58 <putchar_unlocked@plt+0x3000>
   13d00:	sub	ip, fp, #52	; 0x34
   13d04:	mov	lr, r3
   13d08:	ldm	lr!, {r0, r1, r2, r3}
   13d0c:	stmia	ip!, {r0, r1, r2, r3}
   13d10:	ldm	lr!, {r0, r1, r2, r3}
   13d14:	stmia	ip!, {r0, r1, r2, r3}
   13d18:	ldm	lr, {r0, r1, r2, r3}
   13d1c:	stm	ip, {r0, r1, r2, r3}
   13d20:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   13d24:	sub	r3, fp, #52	; 0x34
   13d28:	mov	r2, #1
   13d2c:	mov	r0, r3
   13d30:	bl	11b4c <putchar_unlocked@plt+0xdf4>
   13d34:	sub	r3, fp, #52	; 0x34
   13d38:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13d3c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13d40:	mov	r0, #0
   13d44:	bl	13834 <putchar_unlocked@plt+0x2adc>
   13d48:	mov	r3, r0
   13d4c:	mov	r0, r3
   13d50:	sub	sp, fp, #4
   13d54:	pop	{fp, pc}
   13d58:	andeq	r8, r2, r8, asr #2
   13d5c:	push	{fp, lr}
   13d60:	add	fp, sp, #4
   13d64:	sub	sp, sp, #8
   13d68:	str	r0, [fp, #-8]
   13d6c:	mov	r3, r1
   13d70:	strb	r3, [fp, #-9]
   13d74:	ldrb	r3, [fp, #-9]
   13d78:	mov	r2, r3
   13d7c:	mvn	r1, #0
   13d80:	ldr	r0, [fp, #-8]
   13d84:	bl	13ce0 <putchar_unlocked@plt+0x2f88>
   13d88:	mov	r3, r0
   13d8c:	mov	r0, r3
   13d90:	sub	sp, fp, #4
   13d94:	pop	{fp, pc}
   13d98:	push	{fp, lr}
   13d9c:	add	fp, sp, #4
   13da0:	sub	sp, sp, #8
   13da4:	str	r0, [fp, #-8]
   13da8:	mov	r1, #58	; 0x3a
   13dac:	ldr	r0, [fp, #-8]
   13db0:	bl	13d5c <putchar_unlocked@plt+0x3004>
   13db4:	mov	r3, r0
   13db8:	mov	r0, r3
   13dbc:	sub	sp, fp, #4
   13dc0:	pop	{fp, pc}
   13dc4:	push	{fp, lr}
   13dc8:	add	fp, sp, #4
   13dcc:	sub	sp, sp, #8
   13dd0:	str	r0, [fp, #-8]
   13dd4:	str	r1, [fp, #-12]
   13dd8:	mov	r2, #58	; 0x3a
   13ddc:	ldr	r1, [fp, #-12]
   13de0:	ldr	r0, [fp, #-8]
   13de4:	bl	13ce0 <putchar_unlocked@plt+0x2f88>
   13de8:	mov	r3, r0
   13dec:	mov	r0, r3
   13df0:	sub	sp, fp, #4
   13df4:	pop	{fp, pc}
   13df8:	push	{fp, lr}
   13dfc:	add	fp, sp, #4
   13e00:	sub	sp, sp, #112	; 0x70
   13e04:	str	r0, [fp, #-56]	; 0xffffffc8
   13e08:	str	r1, [fp, #-60]	; 0xffffffc4
   13e0c:	str	r2, [fp, #-64]	; 0xffffffc0
   13e10:	sub	r3, fp, #116	; 0x74
   13e14:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13e18:	mov	r0, r3
   13e1c:	bl	11ce0 <putchar_unlocked@plt+0xf88>
   13e20:	sub	ip, fp, #52	; 0x34
   13e24:	sub	lr, fp, #116	; 0x74
   13e28:	ldm	lr!, {r0, r1, r2, r3}
   13e2c:	stmia	ip!, {r0, r1, r2, r3}
   13e30:	ldm	lr!, {r0, r1, r2, r3}
   13e34:	stmia	ip!, {r0, r1, r2, r3}
   13e38:	ldm	lr, {r0, r1, r2, r3}
   13e3c:	stm	ip, {r0, r1, r2, r3}
   13e40:	sub	r3, fp, #52	; 0x34
   13e44:	mov	r2, #1
   13e48:	mov	r1, #58	; 0x3a
   13e4c:	mov	r0, r3
   13e50:	bl	11b4c <putchar_unlocked@plt+0xdf4>
   13e54:	sub	r3, fp, #52	; 0x34
   13e58:	mvn	r2, #0
   13e5c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13e60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13e64:	bl	13834 <putchar_unlocked@plt+0x2adc>
   13e68:	mov	r3, r0
   13e6c:	mov	r0, r3
   13e70:	sub	sp, fp, #4
   13e74:	pop	{fp, pc}
   13e78:	push	{fp, lr}
   13e7c:	add	fp, sp, #4
   13e80:	sub	sp, sp, #24
   13e84:	str	r0, [fp, #-8]
   13e88:	str	r1, [fp, #-12]
   13e8c:	str	r2, [fp, #-16]
   13e90:	str	r3, [fp, #-20]	; 0xffffffec
   13e94:	mvn	r3, #0
   13e98:	str	r3, [sp]
   13e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ea0:	ldr	r2, [fp, #-16]
   13ea4:	ldr	r1, [fp, #-12]
   13ea8:	ldr	r0, [fp, #-8]
   13eac:	bl	13ec0 <putchar_unlocked@plt+0x3168>
   13eb0:	mov	r3, r0
   13eb4:	mov	r0, r3
   13eb8:	sub	sp, fp, #4
   13ebc:	pop	{fp, pc}
   13ec0:	push	{fp, lr}
   13ec4:	add	fp, sp, #4
   13ec8:	sub	sp, sp, #64	; 0x40
   13ecc:	str	r0, [fp, #-56]	; 0xffffffc8
   13ed0:	str	r1, [fp, #-60]	; 0xffffffc4
   13ed4:	str	r2, [fp, #-64]	; 0xffffffc0
   13ed8:	str	r3, [fp, #-68]	; 0xffffffbc
   13edc:	ldr	r3, [pc, #84]	; 13f38 <putchar_unlocked@plt+0x31e0>
   13ee0:	sub	ip, fp, #52	; 0x34
   13ee4:	mov	lr, r3
   13ee8:	ldm	lr!, {r0, r1, r2, r3}
   13eec:	stmia	ip!, {r0, r1, r2, r3}
   13ef0:	ldm	lr!, {r0, r1, r2, r3}
   13ef4:	stmia	ip!, {r0, r1, r2, r3}
   13ef8:	ldm	lr, {r0, r1, r2, r3}
   13efc:	stm	ip, {r0, r1, r2, r3}
   13f00:	sub	r3, fp, #52	; 0x34
   13f04:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13f08:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13f0c:	mov	r0, r3
   13f10:	bl	11c64 <putchar_unlocked@plt+0xf0c>
   13f14:	sub	r3, fp, #52	; 0x34
   13f18:	ldr	r2, [fp, #4]
   13f1c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13f20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13f24:	bl	13834 <putchar_unlocked@plt+0x2adc>
   13f28:	mov	r3, r0
   13f2c:	mov	r0, r3
   13f30:	sub	sp, fp, #4
   13f34:	pop	{fp, pc}
   13f38:	andeq	r8, r2, r8, asr #2
   13f3c:	push	{fp, lr}
   13f40:	add	fp, sp, #4
   13f44:	sub	sp, sp, #16
   13f48:	str	r0, [fp, #-8]
   13f4c:	str	r1, [fp, #-12]
   13f50:	str	r2, [fp, #-16]
   13f54:	ldr	r3, [fp, #-16]
   13f58:	ldr	r2, [fp, #-12]
   13f5c:	ldr	r1, [fp, #-8]
   13f60:	mov	r0, #0
   13f64:	bl	13e78 <putchar_unlocked@plt+0x3120>
   13f68:	mov	r3, r0
   13f6c:	mov	r0, r3
   13f70:	sub	sp, fp, #4
   13f74:	pop	{fp, pc}
   13f78:	push	{fp, lr}
   13f7c:	add	fp, sp, #4
   13f80:	sub	sp, sp, #24
   13f84:	str	r0, [fp, #-8]
   13f88:	str	r1, [fp, #-12]
   13f8c:	str	r2, [fp, #-16]
   13f90:	str	r3, [fp, #-20]	; 0xffffffec
   13f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f98:	str	r3, [sp]
   13f9c:	ldr	r3, [fp, #-16]
   13fa0:	ldr	r2, [fp, #-12]
   13fa4:	ldr	r1, [fp, #-8]
   13fa8:	mov	r0, #0
   13fac:	bl	13ec0 <putchar_unlocked@plt+0x3168>
   13fb0:	mov	r3, r0
   13fb4:	mov	r0, r3
   13fb8:	sub	sp, fp, #4
   13fbc:	pop	{fp, pc}
   13fc0:	push	{fp, lr}
   13fc4:	add	fp, sp, #4
   13fc8:	sub	sp, sp, #16
   13fcc:	str	r0, [fp, #-8]
   13fd0:	str	r1, [fp, #-12]
   13fd4:	str	r2, [fp, #-16]
   13fd8:	ldr	r3, [pc, #28]	; 13ffc <putchar_unlocked@plt+0x32a4>
   13fdc:	ldr	r2, [fp, #-16]
   13fe0:	ldr	r1, [fp, #-12]
   13fe4:	ldr	r0, [fp, #-8]
   13fe8:	bl	13834 <putchar_unlocked@plt+0x2adc>
   13fec:	mov	r3, r0
   13ff0:	mov	r0, r3
   13ff4:	sub	sp, fp, #4
   13ff8:	pop	{fp, pc}
   13ffc:	andeq	r8, r2, ip, ror #1
   14000:	push	{fp, lr}
   14004:	add	fp, sp, #4
   14008:	sub	sp, sp, #8
   1400c:	str	r0, [fp, #-8]
   14010:	str	r1, [fp, #-12]
   14014:	ldr	r2, [fp, #-12]
   14018:	ldr	r1, [fp, #-8]
   1401c:	mov	r0, #0
   14020:	bl	13fc0 <putchar_unlocked@plt+0x3268>
   14024:	mov	r3, r0
   14028:	mov	r0, r3
   1402c:	sub	sp, fp, #4
   14030:	pop	{fp, pc}
   14034:	push	{fp, lr}
   14038:	add	fp, sp, #4
   1403c:	sub	sp, sp, #8
   14040:	str	r0, [fp, #-8]
   14044:	str	r1, [fp, #-12]
   14048:	mvn	r2, #0
   1404c:	ldr	r1, [fp, #-12]
   14050:	ldr	r0, [fp, #-8]
   14054:	bl	13fc0 <putchar_unlocked@plt+0x3268>
   14058:	mov	r3, r0
   1405c:	mov	r0, r3
   14060:	sub	sp, fp, #4
   14064:	pop	{fp, pc}
   14068:	push	{fp, lr}
   1406c:	add	fp, sp, #4
   14070:	sub	sp, sp, #8
   14074:	str	r0, [fp, #-8]
   14078:	ldr	r1, [fp, #-8]
   1407c:	mov	r0, #0
   14080:	bl	14034 <putchar_unlocked@plt+0x32dc>
   14084:	mov	r3, r0
   14088:	mov	r0, r3
   1408c:	sub	sp, fp, #4
   14090:	pop	{fp, pc}
   14094:	push	{r4, r5, r6, r7, fp, lr}
   14098:	add	fp, sp, #20
   1409c:	sub	sp, sp, #48	; 0x30
   140a0:	str	r0, [fp, #-24]	; 0xffffffe8
   140a4:	str	r1, [fp, #-28]	; 0xffffffe4
   140a8:	str	r2, [fp, #-32]	; 0xffffffe0
   140ac:	str	r3, [fp, #-36]	; 0xffffffdc
   140b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   140b4:	cmp	r3, #0
   140b8:	beq	140dc <putchar_unlocked@plt+0x3384>
   140bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   140c0:	str	r3, [sp]
   140c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   140c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   140cc:	ldr	r1, [pc, #1260]	; 145c0 <putchar_unlocked@plt+0x3868>
   140d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140d4:	bl	10cbc <fprintf@plt>
   140d8:	b	140f0 <putchar_unlocked@plt+0x3398>
   140dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   140e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   140e4:	ldr	r1, [pc, #1240]	; 145c4 <putchar_unlocked@plt+0x386c>
   140e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140ec:	bl	10cbc <fprintf@plt>
   140f0:	ldr	r0, [pc, #1232]	; 145c8 <putchar_unlocked@plt+0x3870>
   140f4:	bl	10ca4 <gettext@plt>
   140f8:	mov	r2, r0
   140fc:	ldr	r3, [pc, #1224]	; 145cc <putchar_unlocked@plt+0x3874>
   14100:	ldr	r1, [pc, #1224]	; 145d0 <putchar_unlocked@plt+0x3878>
   14104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14108:	bl	10cbc <fprintf@plt>
   1410c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14110:	mov	r0, #10
   14114:	bl	10bc0 <fputc_unlocked@plt>
   14118:	ldr	r0, [pc, #1204]	; 145d4 <putchar_unlocked@plt+0x387c>
   1411c:	bl	10ca4 <gettext@plt>
   14120:	mov	r3, r0
   14124:	ldr	r2, [pc, #1196]	; 145d8 <putchar_unlocked@plt+0x3880>
   14128:	mov	r1, r3
   1412c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14130:	bl	10cbc <fprintf@plt>
   14134:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14138:	mov	r0, #10
   1413c:	bl	10bc0 <fputc_unlocked@plt>
   14140:	ldr	r3, [fp, #8]
   14144:	cmp	r3, #9
   14148:	ldrls	pc, [pc, r3, lsl #2]
   1414c:	b	14508 <putchar_unlocked@plt+0x37b0>
   14150:			; <UNDEFINED> instruction: 0x000145b0
   14154:	andeq	r4, r1, r8, ror r1
   14158:	muleq	r1, ip, r1
   1415c:	andeq	r4, r1, r8, asr #3
   14160:	andeq	r4, r1, r8, lsl #4
   14164:	andeq	r4, r1, r0, ror #4
   14168:	andeq	r4, r1, r8, asr #5
   1416c:	andeq	r4, r1, r0, asr #6
   14170:	andeq	r4, r1, r8, asr #7
   14174:	andeq	r4, r1, r0, ror #8
   14178:	ldr	r0, [pc, #1116]	; 145dc <putchar_unlocked@plt+0x3884>
   1417c:	bl	10ca4 <gettext@plt>
   14180:	mov	r1, r0
   14184:	ldr	r3, [fp, #4]
   14188:	ldr	r3, [r3]
   1418c:	mov	r2, r3
   14190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14194:	bl	10cbc <fprintf@plt>
   14198:	b	145b4 <putchar_unlocked@plt+0x385c>
   1419c:	ldr	r0, [pc, #1084]	; 145e0 <putchar_unlocked@plt+0x3888>
   141a0:	bl	10ca4 <gettext@plt>
   141a4:	mov	r1, r0
   141a8:	ldr	r3, [fp, #4]
   141ac:	ldr	r2, [r3]
   141b0:	ldr	r3, [fp, #4]
   141b4:	add	r3, r3, #4
   141b8:	ldr	r3, [r3]
   141bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141c0:	bl	10cbc <fprintf@plt>
   141c4:	b	145b4 <putchar_unlocked@plt+0x385c>
   141c8:	ldr	r0, [pc, #1044]	; 145e4 <putchar_unlocked@plt+0x388c>
   141cc:	bl	10ca4 <gettext@plt>
   141d0:	ldr	r3, [fp, #4]
   141d4:	ldr	r2, [r3]
   141d8:	ldr	r3, [fp, #4]
   141dc:	add	r3, r3, #4
   141e0:	ldr	r1, [r3]
   141e4:	ldr	r3, [fp, #4]
   141e8:	add	r3, r3, #8
   141ec:	ldr	r3, [r3]
   141f0:	str	r3, [sp]
   141f4:	mov	r3, r1
   141f8:	mov	r1, r0
   141fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14200:	bl	10cbc <fprintf@plt>
   14204:	b	145b4 <putchar_unlocked@plt+0x385c>
   14208:	ldr	r0, [pc, #984]	; 145e8 <putchar_unlocked@plt+0x3890>
   1420c:	bl	10ca4 <gettext@plt>
   14210:	mov	ip, r0
   14214:	ldr	r3, [fp, #4]
   14218:	ldr	r1, [r3]
   1421c:	ldr	r3, [fp, #4]
   14220:	add	r3, r3, #4
   14224:	ldr	r0, [r3]
   14228:	ldr	r3, [fp, #4]
   1422c:	add	r3, r3, #8
   14230:	ldr	r3, [r3]
   14234:	ldr	r2, [fp, #4]
   14238:	add	r2, r2, #12
   1423c:	ldr	r2, [r2]
   14240:	str	r2, [sp, #4]
   14244:	str	r3, [sp]
   14248:	mov	r3, r0
   1424c:	mov	r2, r1
   14250:	mov	r1, ip
   14254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14258:	bl	10cbc <fprintf@plt>
   1425c:	b	145b4 <putchar_unlocked@plt+0x385c>
   14260:	ldr	r0, [pc, #900]	; 145ec <putchar_unlocked@plt+0x3894>
   14264:	bl	10ca4 <gettext@plt>
   14268:	mov	lr, r0
   1426c:	ldr	r3, [fp, #4]
   14270:	ldr	r0, [r3]
   14274:	ldr	r3, [fp, #4]
   14278:	add	r3, r3, #4
   1427c:	ldr	ip, [r3]
   14280:	ldr	r3, [fp, #4]
   14284:	add	r3, r3, #8
   14288:	ldr	r3, [r3]
   1428c:	ldr	r2, [fp, #4]
   14290:	add	r2, r2, #12
   14294:	ldr	r2, [r2]
   14298:	ldr	r1, [fp, #4]
   1429c:	add	r1, r1, #16
   142a0:	ldr	r1, [r1]
   142a4:	str	r1, [sp, #8]
   142a8:	str	r2, [sp, #4]
   142ac:	str	r3, [sp]
   142b0:	mov	r3, ip
   142b4:	mov	r2, r0
   142b8:	mov	r1, lr
   142bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142c0:	bl	10cbc <fprintf@plt>
   142c4:	b	145b4 <putchar_unlocked@plt+0x385c>
   142c8:	ldr	r0, [pc, #800]	; 145f0 <putchar_unlocked@plt+0x3898>
   142cc:	bl	10ca4 <gettext@plt>
   142d0:	mov	r4, r0
   142d4:	ldr	r3, [fp, #4]
   142d8:	ldr	ip, [r3]
   142dc:	ldr	r3, [fp, #4]
   142e0:	add	r3, r3, #4
   142e4:	ldr	lr, [r3]
   142e8:	ldr	r3, [fp, #4]
   142ec:	add	r3, r3, #8
   142f0:	ldr	r3, [r3]
   142f4:	ldr	r2, [fp, #4]
   142f8:	add	r2, r2, #12
   142fc:	ldr	r2, [r2]
   14300:	ldr	r1, [fp, #4]
   14304:	add	r1, r1, #16
   14308:	ldr	r1, [r1]
   1430c:	ldr	r0, [fp, #4]
   14310:	add	r0, r0, #20
   14314:	ldr	r0, [r0]
   14318:	str	r0, [sp, #12]
   1431c:	str	r1, [sp, #8]
   14320:	str	r2, [sp, #4]
   14324:	str	r3, [sp]
   14328:	mov	r3, lr
   1432c:	mov	r2, ip
   14330:	mov	r1, r4
   14334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14338:	bl	10cbc <fprintf@plt>
   1433c:	b	145b4 <putchar_unlocked@plt+0x385c>
   14340:	ldr	r0, [pc, #684]	; 145f4 <putchar_unlocked@plt+0x389c>
   14344:	bl	10ca4 <gettext@plt>
   14348:	mov	r5, r0
   1434c:	ldr	r3, [fp, #4]
   14350:	ldr	lr, [r3]
   14354:	ldr	r3, [fp, #4]
   14358:	add	r3, r3, #4
   1435c:	ldr	r4, [r3]
   14360:	ldr	r3, [fp, #4]
   14364:	add	r3, r3, #8
   14368:	ldr	r3, [r3]
   1436c:	ldr	r2, [fp, #4]
   14370:	add	r2, r2, #12
   14374:	ldr	r2, [r2]
   14378:	ldr	r1, [fp, #4]
   1437c:	add	r1, r1, #16
   14380:	ldr	r1, [r1]
   14384:	ldr	r0, [fp, #4]
   14388:	add	r0, r0, #20
   1438c:	ldr	r0, [r0]
   14390:	ldr	ip, [fp, #4]
   14394:	add	ip, ip, #24
   14398:	ldr	ip, [ip]
   1439c:	str	ip, [sp, #16]
   143a0:	str	r0, [sp, #12]
   143a4:	str	r1, [sp, #8]
   143a8:	str	r2, [sp, #4]
   143ac:	str	r3, [sp]
   143b0:	mov	r3, r4
   143b4:	mov	r2, lr
   143b8:	mov	r1, r5
   143bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143c0:	bl	10cbc <fprintf@plt>
   143c4:	b	145b4 <putchar_unlocked@plt+0x385c>
   143c8:	ldr	r0, [pc, #552]	; 145f8 <putchar_unlocked@plt+0x38a0>
   143cc:	bl	10ca4 <gettext@plt>
   143d0:	mov	r6, r0
   143d4:	ldr	r3, [fp, #4]
   143d8:	ldr	r4, [r3]
   143dc:	ldr	r3, [fp, #4]
   143e0:	add	r3, r3, #4
   143e4:	ldr	r5, [r3]
   143e8:	ldr	r3, [fp, #4]
   143ec:	add	r3, r3, #8
   143f0:	ldr	r3, [r3]
   143f4:	ldr	r2, [fp, #4]
   143f8:	add	r2, r2, #12
   143fc:	ldr	r2, [r2]
   14400:	ldr	r1, [fp, #4]
   14404:	add	r1, r1, #16
   14408:	ldr	r1, [r1]
   1440c:	ldr	r0, [fp, #4]
   14410:	add	r0, r0, #20
   14414:	ldr	r0, [r0]
   14418:	ldr	ip, [fp, #4]
   1441c:	add	ip, ip, #24
   14420:	ldr	ip, [ip]
   14424:	ldr	lr, [fp, #4]
   14428:	add	lr, lr, #28
   1442c:	ldr	lr, [lr]
   14430:	str	lr, [sp, #20]
   14434:	str	ip, [sp, #16]
   14438:	str	r0, [sp, #12]
   1443c:	str	r1, [sp, #8]
   14440:	str	r2, [sp, #4]
   14444:	str	r3, [sp]
   14448:	mov	r3, r5
   1444c:	mov	r2, r4
   14450:	mov	r1, r6
   14454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14458:	bl	10cbc <fprintf@plt>
   1445c:	b	145b4 <putchar_unlocked@plt+0x385c>
   14460:	ldr	r0, [pc, #404]	; 145fc <putchar_unlocked@plt+0x38a4>
   14464:	bl	10ca4 <gettext@plt>
   14468:	mov	r7, r0
   1446c:	ldr	r3, [fp, #4]
   14470:	ldr	r5, [r3]
   14474:	ldr	r3, [fp, #4]
   14478:	add	r3, r3, #4
   1447c:	ldr	r6, [r3]
   14480:	ldr	r3, [fp, #4]
   14484:	add	r3, r3, #8
   14488:	ldr	r3, [r3]
   1448c:	ldr	r2, [fp, #4]
   14490:	add	r2, r2, #12
   14494:	ldr	r2, [r2]
   14498:	ldr	r1, [fp, #4]
   1449c:	add	r1, r1, #16
   144a0:	ldr	r1, [r1]
   144a4:	ldr	r0, [fp, #4]
   144a8:	add	r0, r0, #20
   144ac:	ldr	r0, [r0]
   144b0:	ldr	ip, [fp, #4]
   144b4:	add	ip, ip, #24
   144b8:	ldr	ip, [ip]
   144bc:	ldr	lr, [fp, #4]
   144c0:	add	lr, lr, #28
   144c4:	ldr	lr, [lr]
   144c8:	ldr	r4, [fp, #4]
   144cc:	add	r4, r4, #32
   144d0:	ldr	r4, [r4]
   144d4:	str	r4, [sp, #24]
   144d8:	str	lr, [sp, #20]
   144dc:	str	ip, [sp, #16]
   144e0:	str	r0, [sp, #12]
   144e4:	str	r1, [sp, #8]
   144e8:	str	r2, [sp, #4]
   144ec:	str	r3, [sp]
   144f0:	mov	r3, r6
   144f4:	mov	r2, r5
   144f8:	mov	r1, r7
   144fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14500:	bl	10cbc <fprintf@plt>
   14504:	b	145b4 <putchar_unlocked@plt+0x385c>
   14508:	ldr	r0, [pc, #240]	; 14600 <putchar_unlocked@plt+0x38a8>
   1450c:	bl	10ca4 <gettext@plt>
   14510:	mov	r7, r0
   14514:	ldr	r3, [fp, #4]
   14518:	ldr	r5, [r3]
   1451c:	ldr	r3, [fp, #4]
   14520:	add	r3, r3, #4
   14524:	ldr	r6, [r3]
   14528:	ldr	r3, [fp, #4]
   1452c:	add	r3, r3, #8
   14530:	ldr	r3, [r3]
   14534:	ldr	r2, [fp, #4]
   14538:	add	r2, r2, #12
   1453c:	ldr	r2, [r2]
   14540:	ldr	r1, [fp, #4]
   14544:	add	r1, r1, #16
   14548:	ldr	r1, [r1]
   1454c:	ldr	r0, [fp, #4]
   14550:	add	r0, r0, #20
   14554:	ldr	r0, [r0]
   14558:	ldr	ip, [fp, #4]
   1455c:	add	ip, ip, #24
   14560:	ldr	ip, [ip]
   14564:	ldr	lr, [fp, #4]
   14568:	add	lr, lr, #28
   1456c:	ldr	lr, [lr]
   14570:	ldr	r4, [fp, #4]
   14574:	add	r4, r4, #32
   14578:	ldr	r4, [r4]
   1457c:	str	r4, [sp, #24]
   14580:	str	lr, [sp, #20]
   14584:	str	ip, [sp, #16]
   14588:	str	r0, [sp, #12]
   1458c:	str	r1, [sp, #8]
   14590:	str	r2, [sp, #4]
   14594:	str	r3, [sp]
   14598:	mov	r3, r6
   1459c:	mov	r2, r5
   145a0:	mov	r1, r7
   145a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145a8:	bl	10cbc <fprintf@plt>
   145ac:	b	145b4 <putchar_unlocked@plt+0x385c>
   145b0:	nop			; (mov r0, r0)
   145b4:	nop			; (mov r0, r0)
   145b8:	sub	sp, fp, #20
   145bc:	pop	{r4, r5, r6, r7, fp, pc}
   145c0:	andeq	r7, r1, r0, asr r2
   145c4:	andeq	r7, r1, ip, asr r2
   145c8:	andeq	r7, r1, r4, ror #4
   145cc:	andeq	r0, r0, r6, ror #15
   145d0:	andeq	r7, r1, r4, ror r5
   145d4:	andeq	r7, r1, r8, ror #4
   145d8:	andeq	r7, r1, r4, lsl r3
   145dc:	andeq	r7, r1, r8, lsr r3
   145e0:	andeq	r7, r1, r8, asr #6
   145e4:	andeq	r7, r1, r0, ror #6
   145e8:	andeq	r7, r1, ip, ror r3
   145ec:	muleq	r1, ip, r3
   145f0:	andeq	r7, r1, r0, asr #7
   145f4:	andeq	r7, r1, r8, ror #7
   145f8:	andeq	r7, r1, r4, lsl r4
   145fc:	andeq	r7, r1, r4, asr #8
   14600:	andeq	r7, r1, r8, ror r4
   14604:	push	{fp, lr}
   14608:	add	fp, sp, #4
   1460c:	sub	sp, sp, #32
   14610:	str	r0, [fp, #-16]
   14614:	str	r1, [fp, #-20]	; 0xffffffec
   14618:	str	r2, [fp, #-24]	; 0xffffffe8
   1461c:	str	r3, [fp, #-28]	; 0xffffffe4
   14620:	mov	r3, #0
   14624:	str	r3, [fp, #-8]
   14628:	b	14638 <putchar_unlocked@plt+0x38e0>
   1462c:	ldr	r3, [fp, #-8]
   14630:	add	r3, r3, #1
   14634:	str	r3, [fp, #-8]
   14638:	ldr	r3, [fp, #-8]
   1463c:	lsl	r3, r3, #2
   14640:	ldr	r2, [fp, #4]
   14644:	add	r3, r2, r3
   14648:	ldr	r3, [r3]
   1464c:	cmp	r3, #0
   14650:	bne	1462c <putchar_unlocked@plt+0x38d4>
   14654:	ldr	r3, [fp, #-8]
   14658:	str	r3, [sp, #4]
   1465c:	ldr	r3, [fp, #4]
   14660:	str	r3, [sp]
   14664:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14668:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1466c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14670:	ldr	r0, [fp, #-16]
   14674:	bl	14094 <putchar_unlocked@plt+0x333c>
   14678:	nop			; (mov r0, r0)
   1467c:	sub	sp, fp, #4
   14680:	pop	{fp, pc}
   14684:	push	{fp, lr}
   14688:	add	fp, sp, #4
   1468c:	sub	sp, sp, #72	; 0x48
   14690:	str	r0, [fp, #-56]	; 0xffffffc8
   14694:	str	r1, [fp, #-60]	; 0xffffffc4
   14698:	str	r2, [fp, #-64]	; 0xffffffc0
   1469c:	str	r3, [fp, #-68]	; 0xffffffbc
   146a0:	mov	r3, #0
   146a4:	str	r3, [fp, #-8]
   146a8:	b	146b8 <putchar_unlocked@plt+0x3960>
   146ac:	ldr	r3, [fp, #-8]
   146b0:	add	r3, r3, #1
   146b4:	str	r3, [fp, #-8]
   146b8:	ldr	r3, [fp, #-8]
   146bc:	cmp	r3, #9
   146c0:	bhi	14704 <putchar_unlocked@plt+0x39ac>
   146c4:	ldr	r3, [fp, #4]
   146c8:	add	r2, r3, #4
   146cc:	str	r2, [fp, #4]
   146d0:	ldr	r2, [r3]
   146d4:	ldr	r3, [fp, #-8]
   146d8:	lsl	r3, r3, #2
   146dc:	sub	r1, fp, #4
   146e0:	add	r3, r1, r3
   146e4:	str	r2, [r3, #-44]	; 0xffffffd4
   146e8:	ldr	r3, [fp, #-8]
   146ec:	lsl	r3, r3, #2
   146f0:	sub	r2, fp, #4
   146f4:	add	r3, r2, r3
   146f8:	ldr	r3, [r3, #-44]	; 0xffffffd4
   146fc:	cmp	r3, #0
   14700:	bne	146ac <putchar_unlocked@plt+0x3954>
   14704:	ldr	r3, [fp, #-8]
   14708:	str	r3, [sp, #4]
   1470c:	sub	r3, fp, #48	; 0x30
   14710:	str	r3, [sp]
   14714:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14718:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1471c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14720:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14724:	bl	14094 <putchar_unlocked@plt+0x333c>
   14728:	nop			; (mov r0, r0)
   1472c:	sub	sp, fp, #4
   14730:	pop	{fp, pc}
   14734:	push	{r3}		; (str r3, [sp, #-4]!)
   14738:	push	{fp, lr}
   1473c:	add	fp, sp, #4
   14740:	sub	sp, sp, #36	; 0x24
   14744:	str	r0, [fp, #-20]	; 0xffffffec
   14748:	str	r1, [fp, #-24]	; 0xffffffe8
   1474c:	str	r2, [fp, #-28]	; 0xffffffe4
   14750:	add	r3, fp, #8
   14754:	str	r3, [fp, #-12]
   14758:	ldr	r3, [fp, #-12]
   1475c:	str	r3, [sp]
   14760:	ldr	r3, [fp, #4]
   14764:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1476c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14770:	bl	14684 <putchar_unlocked@plt+0x392c>
   14774:	nop			; (mov r0, r0)
   14778:	sub	sp, fp, #4
   1477c:	pop	{fp, lr}
   14780:	add	sp, sp, #4
   14784:	bx	lr
   14788:	push	{fp, lr}
   1478c:	add	fp, sp, #4
   14790:	ldr	r3, [pc, #96]	; 147f8 <putchar_unlocked@plt+0x3aa0>
   14794:	ldr	r3, [r3]
   14798:	mov	r1, r3
   1479c:	mov	r0, #10
   147a0:	bl	10bc0 <fputc_unlocked@plt>
   147a4:	ldr	r0, [pc, #80]	; 147fc <putchar_unlocked@plt+0x3aa4>
   147a8:	bl	10ca4 <gettext@plt>
   147ac:	mov	r3, r0
   147b0:	ldr	r1, [pc, #72]	; 14800 <putchar_unlocked@plt+0x3aa8>
   147b4:	mov	r0, r3
   147b8:	bl	10b6c <printf@plt>
   147bc:	ldr	r0, [pc, #64]	; 14804 <putchar_unlocked@plt+0x3aac>
   147c0:	bl	10ca4 <gettext@plt>
   147c4:	mov	r3, r0
   147c8:	ldr	r2, [pc, #56]	; 14808 <putchar_unlocked@plt+0x3ab0>
   147cc:	ldr	r1, [pc, #56]	; 1480c <putchar_unlocked@plt+0x3ab4>
   147d0:	mov	r0, r3
   147d4:	bl	10b6c <printf@plt>
   147d8:	ldr	r0, [pc, #48]	; 14810 <putchar_unlocked@plt+0x3ab8>
   147dc:	bl	10ca4 <gettext@plt>
   147e0:	mov	r3, r0
   147e4:	ldr	r1, [pc, #40]	; 14814 <putchar_unlocked@plt+0x3abc>
   147e8:	mov	r0, r3
   147ec:	bl	10b6c <printf@plt>
   147f0:	nop			; (mov r0, r0)
   147f4:	pop	{fp, pc}
   147f8:	andeq	r8, r2, r4, lsr r1
   147fc:			; <UNDEFINED> instruction: 0x000174b4
   14800:	andeq	r7, r1, r8, asr #9
   14804:	andeq	r7, r1, r0, ror #9
   14808:	strdeq	r7, [r1], -r4
   1480c:	andeq	r7, r1, ip, lsl r5
   14810:	andeq	r7, r1, ip, lsr #10
   14814:	andeq	r7, r1, r4, asr r5
   14818:	push	{fp, lr}
   1481c:	add	fp, sp, #4
   14820:	sub	sp, sp, #16
   14824:	str	r0, [fp, #-8]
   14828:	str	r1, [fp, #-12]
   1482c:	str	r2, [fp, #-16]
   14830:	ldr	r2, [fp, #-16]
   14834:	ldr	r1, [fp, #-12]
   14838:	ldr	r0, [fp, #-8]
   1483c:	bl	149a8 <putchar_unlocked@plt+0x3c50>
   14840:	mov	r3, r0
   14844:	mov	r0, r3
   14848:	sub	sp, fp, #4
   1484c:	pop	{fp, pc}
   14850:	push	{fp, lr}
   14854:	add	fp, sp, #4
   14858:	sub	sp, sp, #8
   1485c:	str	r0, [fp, #-8]
   14860:	ldr	r3, [fp, #-8]
   14864:	cmp	r3, #0
   14868:	bne	14870 <putchar_unlocked@plt+0x3b18>
   1486c:	bl	1539c <putchar_unlocked@plt+0x4644>
   14870:	ldr	r3, [fp, #-8]
   14874:	mov	r0, r3
   14878:	sub	sp, fp, #4
   1487c:	pop	{fp, pc}
   14880:	push	{fp, lr}
   14884:	add	fp, sp, #4
   14888:	sub	sp, sp, #8
   1488c:	str	r0, [fp, #-8]
   14890:	ldr	r0, [fp, #-8]
   14894:	bl	1549c <putchar_unlocked@plt+0x4744>
   14898:	mov	r3, r0
   1489c:	mov	r0, r3
   148a0:	bl	14850 <putchar_unlocked@plt+0x3af8>
   148a4:	mov	r3, r0
   148a8:	mov	r0, r3
   148ac:	sub	sp, fp, #4
   148b0:	pop	{fp, pc}
   148b4:	push	{fp, lr}
   148b8:	add	fp, sp, #4
   148bc:	sub	sp, sp, #8
   148c0:	str	r0, [fp, #-8]
   148c4:	ldr	r0, [fp, #-8]
   148c8:	bl	15ab8 <putchar_unlocked@plt+0x4d60>
   148cc:	mov	r3, r0
   148d0:	mov	r0, r3
   148d4:	bl	14850 <putchar_unlocked@plt+0x3af8>
   148d8:	mov	r3, r0
   148dc:	mov	r0, r3
   148e0:	sub	sp, fp, #4
   148e4:	pop	{fp, pc}
   148e8:	push	{fp, lr}
   148ec:	add	fp, sp, #4
   148f0:	sub	sp, sp, #8
   148f4:	str	r0, [fp, #-8]
   148f8:	ldr	r0, [fp, #-8]
   148fc:	bl	14880 <putchar_unlocked@plt+0x3b28>
   14900:	mov	r3, r0
   14904:	mov	r0, r3
   14908:	sub	sp, fp, #4
   1490c:	pop	{fp, pc}
   14910:	push	{fp, lr}
   14914:	add	fp, sp, #4
   14918:	sub	sp, sp, #16
   1491c:	str	r0, [fp, #-16]
   14920:	str	r1, [fp, #-20]	; 0xffffffec
   14924:	ldr	r1, [fp, #-20]	; 0xffffffec
   14928:	ldr	r0, [fp, #-16]
   1492c:	bl	15544 <putchar_unlocked@plt+0x47ec>
   14930:	str	r0, [fp, #-8]
   14934:	ldr	r3, [fp, #-8]
   14938:	cmp	r3, #0
   1493c:	bne	1495c <putchar_unlocked@plt+0x3c04>
   14940:	ldr	r3, [fp, #-16]
   14944:	cmp	r3, #0
   14948:	beq	14958 <putchar_unlocked@plt+0x3c00>
   1494c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14950:	cmp	r3, #0
   14954:	beq	1495c <putchar_unlocked@plt+0x3c04>
   14958:	bl	1539c <putchar_unlocked@plt+0x4644>
   1495c:	ldr	r3, [fp, #-8]
   14960:	mov	r0, r3
   14964:	sub	sp, fp, #4
   14968:	pop	{fp, pc}
   1496c:	push	{fp, lr}
   14970:	add	fp, sp, #4
   14974:	sub	sp, sp, #8
   14978:	str	r0, [fp, #-8]
   1497c:	str	r1, [fp, #-12]
   14980:	ldr	r1, [fp, #-12]
   14984:	ldr	r0, [fp, #-8]
   14988:	bl	15ae4 <putchar_unlocked@plt+0x4d8c>
   1498c:	mov	r3, r0
   14990:	mov	r0, r3
   14994:	bl	14850 <putchar_unlocked@plt+0x3af8>
   14998:	mov	r3, r0
   1499c:	mov	r0, r3
   149a0:	sub	sp, fp, #4
   149a4:	pop	{fp, pc}
   149a8:	push	{fp, lr}
   149ac:	add	fp, sp, #4
   149b0:	sub	sp, sp, #24
   149b4:	str	r0, [fp, #-16]
   149b8:	str	r1, [fp, #-20]	; 0xffffffec
   149bc:	str	r2, [fp, #-24]	; 0xffffffe8
   149c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   149c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   149c8:	ldr	r0, [fp, #-16]
   149cc:	bl	15cd8 <putchar_unlocked@plt+0x4f80>
   149d0:	str	r0, [fp, #-8]
   149d4:	ldr	r3, [fp, #-8]
   149d8:	cmp	r3, #0
   149dc:	bne	14a08 <putchar_unlocked@plt+0x3cb0>
   149e0:	ldr	r3, [fp, #-16]
   149e4:	cmp	r3, #0
   149e8:	beq	14a04 <putchar_unlocked@plt+0x3cac>
   149ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   149f0:	cmp	r3, #0
   149f4:	beq	14a08 <putchar_unlocked@plt+0x3cb0>
   149f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149fc:	cmp	r3, #0
   14a00:	beq	14a08 <putchar_unlocked@plt+0x3cb0>
   14a04:	bl	1539c <putchar_unlocked@plt+0x4644>
   14a08:	ldr	r3, [fp, #-8]
   14a0c:	mov	r0, r3
   14a10:	sub	sp, fp, #4
   14a14:	pop	{fp, pc}
   14a18:	push	{fp, lr}
   14a1c:	add	fp, sp, #4
   14a20:	sub	sp, sp, #16
   14a24:	str	r0, [fp, #-8]
   14a28:	str	r1, [fp, #-12]
   14a2c:	str	r2, [fp, #-16]
   14a30:	ldr	r2, [fp, #-16]
   14a34:	ldr	r1, [fp, #-12]
   14a38:	ldr	r0, [fp, #-8]
   14a3c:	bl	15b6c <putchar_unlocked@plt+0x4e14>
   14a40:	mov	r3, r0
   14a44:	mov	r0, r3
   14a48:	bl	14850 <putchar_unlocked@plt+0x3af8>
   14a4c:	mov	r3, r0
   14a50:	mov	r0, r3
   14a54:	sub	sp, fp, #4
   14a58:	pop	{fp, pc}
   14a5c:	push	{fp, lr}
   14a60:	add	fp, sp, #4
   14a64:	sub	sp, sp, #8
   14a68:	str	r0, [fp, #-8]
   14a6c:	str	r1, [fp, #-12]
   14a70:	ldr	r2, [fp, #-12]
   14a74:	ldr	r1, [fp, #-8]
   14a78:	mov	r0, #0
   14a7c:	bl	149a8 <putchar_unlocked@plt+0x3c50>
   14a80:	mov	r3, r0
   14a84:	mov	r0, r3
   14a88:	sub	sp, fp, #4
   14a8c:	pop	{fp, pc}
   14a90:	push	{fp, lr}
   14a94:	add	fp, sp, #4
   14a98:	sub	sp, sp, #8
   14a9c:	str	r0, [fp, #-8]
   14aa0:	str	r1, [fp, #-12]
   14aa4:	ldr	r2, [fp, #-12]
   14aa8:	ldr	r1, [fp, #-8]
   14aac:	mov	r0, #0
   14ab0:	bl	14a18 <putchar_unlocked@plt+0x3cc0>
   14ab4:	mov	r3, r0
   14ab8:	mov	r0, r3
   14abc:	sub	sp, fp, #4
   14ac0:	pop	{fp, pc}
   14ac4:	push	{fp, lr}
   14ac8:	add	fp, sp, #4
   14acc:	sub	sp, sp, #8
   14ad0:	str	r0, [fp, #-8]
   14ad4:	str	r1, [fp, #-12]
   14ad8:	mov	r2, #1
   14adc:	ldr	r1, [fp, #-12]
   14ae0:	ldr	r0, [fp, #-8]
   14ae4:	bl	14af8 <putchar_unlocked@plt+0x3da0>
   14ae8:	mov	r3, r0
   14aec:	mov	r0, r3
   14af0:	sub	sp, fp, #4
   14af4:	pop	{fp, pc}
   14af8:	push	{fp, lr}
   14afc:	add	fp, sp, #4
   14b00:	sub	sp, sp, #24
   14b04:	str	r0, [fp, #-16]
   14b08:	str	r1, [fp, #-20]	; 0xffffffec
   14b0c:	str	r2, [fp, #-24]	; 0xffffffe8
   14b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b14:	ldr	r3, [r3]
   14b18:	str	r3, [fp, #-8]
   14b1c:	ldr	r3, [fp, #-16]
   14b20:	cmp	r3, #0
   14b24:	bne	14b70 <putchar_unlocked@plt+0x3e18>
   14b28:	ldr	r3, [fp, #-8]
   14b2c:	cmp	r3, #0
   14b30:	bne	14bd4 <putchar_unlocked@plt+0x3e7c>
   14b34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14b38:	mov	r0, #64	; 0x40
   14b3c:	bl	16480 <putchar_unlocked@plt+0x5728>
   14b40:	mov	r3, r0
   14b44:	str	r3, [fp, #-8]
   14b48:	ldr	r3, [fp, #-8]
   14b4c:	cmp	r3, #0
   14b50:	moveq	r3, #1
   14b54:	movne	r3, #0
   14b58:	uxtb	r3, r3
   14b5c:	mov	r2, r3
   14b60:	ldr	r3, [fp, #-8]
   14b64:	add	r3, r2, r3
   14b68:	str	r3, [fp, #-8]
   14b6c:	b	14bd4 <putchar_unlocked@plt+0x3e7c>
   14b70:	ldr	r3, [fp, #-8]
   14b74:	lsr	r3, r3, #1
   14b78:	add	r3, r3, #1
   14b7c:	mvn	r2, r3
   14b80:	ldr	r3, [fp, #-8]
   14b84:	cmp	r2, r3
   14b88:	bcs	14bac <putchar_unlocked@plt+0x3e54>
   14b8c:	ldr	r3, [fp, #-8]
   14b90:	lsr	r2, r3, #1
   14b94:	ldr	r3, [fp, #-8]
   14b98:	add	r3, r2, r3
   14b9c:	add	r3, r3, #1
   14ba0:	str	r3, [fp, #-8]
   14ba4:	mov	r3, #1
   14ba8:	b	14bc8 <putchar_unlocked@plt+0x3e70>
   14bac:	ldr	r3, [fp, #-8]
   14bb0:	lsr	r2, r3, #1
   14bb4:	ldr	r3, [fp, #-8]
   14bb8:	add	r3, r2, r3
   14bbc:	add	r3, r3, #1
   14bc0:	str	r3, [fp, #-8]
   14bc4:	mov	r3, #0
   14bc8:	cmp	r3, #0
   14bcc:	beq	14bd4 <putchar_unlocked@plt+0x3e7c>
   14bd0:	bl	1539c <putchar_unlocked@plt+0x4644>
   14bd4:	ldr	r3, [fp, #-8]
   14bd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14bdc:	mov	r1, r3
   14be0:	ldr	r0, [fp, #-16]
   14be4:	bl	149a8 <putchar_unlocked@plt+0x3c50>
   14be8:	str	r0, [fp, #-16]
   14bec:	ldr	r2, [fp, #-8]
   14bf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bf4:	str	r2, [r3]
   14bf8:	ldr	r3, [fp, #-16]
   14bfc:	mov	r0, r3
   14c00:	sub	sp, fp, #4
   14c04:	pop	{fp, pc}
   14c08:	push	{fp, lr}
   14c0c:	add	fp, sp, #4
   14c10:	sub	sp, sp, #32
   14c14:	str	r0, [fp, #-24]	; 0xffffffe8
   14c18:	str	r1, [fp, #-28]	; 0xffffffe4
   14c1c:	str	r2, [fp, #-32]	; 0xffffffe0
   14c20:	str	r3, [fp, #-36]	; 0xffffffdc
   14c24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c28:	ldr	r3, [r3]
   14c2c:	str	r3, [fp, #-8]
   14c30:	ldr	r3, [fp, #-8]
   14c34:	asr	r3, r3, #1
   14c38:	cmp	r3, #0
   14c3c:	bge	14c64 <putchar_unlocked@plt+0x3f0c>
   14c40:	ldr	r3, [fp, #-8]
   14c44:	asr	r3, r3, #1
   14c48:	rsb	r2, r3, #-2147483648	; 0x80000000
   14c4c:	ldr	r3, [fp, #-8]
   14c50:	cmp	r2, r3
   14c54:	movgt	r3, #1
   14c58:	movle	r3, #0
   14c5c:	uxtb	r3, r3
   14c60:	b	14cb8 <putchar_unlocked@plt+0x3f60>
   14c64:	ldr	r3, [fp, #-8]
   14c68:	cmp	r3, #0
   14c6c:	bge	14c94 <putchar_unlocked@plt+0x3f3c>
   14c70:	ldr	r3, [fp, #-8]
   14c74:	asr	r2, r3, #1
   14c78:	ldr	r3, [fp, #-8]
   14c7c:	rsb	r3, r3, #-2147483648	; 0x80000000
   14c80:	cmp	r2, r3
   14c84:	movlt	r3, #1
   14c88:	movge	r3, #0
   14c8c:	uxtb	r3, r3
   14c90:	b	14cb8 <putchar_unlocked@plt+0x3f60>
   14c94:	ldr	r3, [fp, #-8]
   14c98:	asr	r2, r3, #1
   14c9c:	mvn	r3, #-2147483648	; 0x80000000
   14ca0:	sub	r3, r3, r2
   14ca4:	ldr	r2, [fp, #-8]
   14ca8:	cmp	r3, r2
   14cac:	movlt	r3, #1
   14cb0:	movge	r3, #0
   14cb4:	uxtb	r3, r3
   14cb8:	cmp	r3, #0
   14cbc:	beq	14ce0 <putchar_unlocked@plt+0x3f88>
   14cc0:	ldr	r3, [fp, #-8]
   14cc4:	asr	r3, r3, #1
   14cc8:	mov	r2, r3
   14ccc:	ldr	r3, [fp, #-8]
   14cd0:	add	r3, r2, r3
   14cd4:	str	r3, [fp, #-16]
   14cd8:	mov	r3, #1
   14cdc:	b	14cfc <putchar_unlocked@plt+0x3fa4>
   14ce0:	ldr	r3, [fp, #-8]
   14ce4:	asr	r3, r3, #1
   14ce8:	mov	r2, r3
   14cec:	ldr	r3, [fp, #-8]
   14cf0:	add	r3, r2, r3
   14cf4:	str	r3, [fp, #-16]
   14cf8:	mov	r3, #0
   14cfc:	cmp	r3, #0
   14d00:	beq	14d0c <putchar_unlocked@plt+0x3fb4>
   14d04:	mvn	r3, #-2147483648	; 0x80000000
   14d08:	str	r3, [fp, #-16]
   14d0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d10:	cmp	r3, #0
   14d14:	blt	14d30 <putchar_unlocked@plt+0x3fd8>
   14d18:	ldr	r3, [fp, #-16]
   14d1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14d20:	cmp	r2, r3
   14d24:	bge	14d30 <putchar_unlocked@plt+0x3fd8>
   14d28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d2c:	str	r3, [fp, #-16]
   14d30:	ldr	r3, [fp, #4]
   14d34:	cmp	r3, #0
   14d38:	bge	14dc8 <putchar_unlocked@plt+0x4070>
   14d3c:	ldr	r3, [fp, #-16]
   14d40:	cmp	r3, #0
   14d44:	bge	14d74 <putchar_unlocked@plt+0x401c>
   14d48:	ldr	r1, [fp, #4]
   14d4c:	mvn	r0, #-2147483648	; 0x80000000
   14d50:	bl	1668c <putchar_unlocked@plt+0x5934>
   14d54:	mov	r3, r0
   14d58:	mov	r2, r3
   14d5c:	ldr	r3, [fp, #-16]
   14d60:	cmp	r2, r3
   14d64:	movgt	r3, #1
   14d68:	movle	r3, #0
   14d6c:	uxtb	r3, r3
   14d70:	b	14e68 <putchar_unlocked@plt+0x4110>
   14d74:	ldr	r3, [fp, #4]
   14d78:	cmn	r3, #1
   14d7c:	bne	14d9c <putchar_unlocked@plt+0x4044>
   14d80:	ldr	r3, [fp, #-16]
   14d84:	add	r3, r3, #-2147483648	; 0x80000000
   14d88:	cmp	r3, #0
   14d8c:	movgt	r3, #1
   14d90:	movle	r3, #0
   14d94:	uxtb	r3, r3
   14d98:	b	14e68 <putchar_unlocked@plt+0x4110>
   14d9c:	ldr	r1, [fp, #4]
   14da0:	mov	r0, #-2147483648	; 0x80000000
   14da4:	bl	1668c <putchar_unlocked@plt+0x5934>
   14da8:	mov	r3, r0
   14dac:	mov	r2, r3
   14db0:	ldr	r3, [fp, #-16]
   14db4:	cmp	r2, r3
   14db8:	movlt	r3, #1
   14dbc:	movge	r3, #0
   14dc0:	uxtb	r3, r3
   14dc4:	b	14e68 <putchar_unlocked@plt+0x4110>
   14dc8:	ldr	r3, [fp, #4]
   14dcc:	cmp	r3, #0
   14dd0:	beq	14e64 <putchar_unlocked@plt+0x410c>
   14dd4:	ldr	r3, [fp, #-16]
   14dd8:	cmp	r3, #0
   14ddc:	bge	14e38 <putchar_unlocked@plt+0x40e0>
   14de0:	ldr	r3, [fp, #-16]
   14de4:	cmn	r3, #1
   14de8:	bne	14e08 <putchar_unlocked@plt+0x40b0>
   14dec:	ldr	r3, [fp, #4]
   14df0:	add	r3, r3, #-2147483648	; 0x80000000
   14df4:	cmp	r3, #0
   14df8:	movgt	r3, #1
   14dfc:	movle	r3, #0
   14e00:	uxtb	r3, r3
   14e04:	b	14e68 <putchar_unlocked@plt+0x4110>
   14e08:	ldr	r3, [fp, #-16]
   14e0c:	mov	r1, r3
   14e10:	mov	r0, #-2147483648	; 0x80000000
   14e14:	bl	1668c <putchar_unlocked@plt+0x5934>
   14e18:	mov	r3, r0
   14e1c:	mov	r2, r3
   14e20:	ldr	r3, [fp, #4]
   14e24:	cmp	r2, r3
   14e28:	movlt	r3, #1
   14e2c:	movge	r3, #0
   14e30:	uxtb	r3, r3
   14e34:	b	14e68 <putchar_unlocked@plt+0x4110>
   14e38:	ldr	r1, [fp, #4]
   14e3c:	mvn	r0, #-2147483648	; 0x80000000
   14e40:	bl	1668c <putchar_unlocked@plt+0x5934>
   14e44:	mov	r3, r0
   14e48:	mov	r2, r3
   14e4c:	ldr	r3, [fp, #-16]
   14e50:	cmp	r2, r3
   14e54:	movlt	r3, #1
   14e58:	movge	r3, #0
   14e5c:	uxtb	r3, r3
   14e60:	b	14e68 <putchar_unlocked@plt+0x4110>
   14e64:	mov	r3, #0
   14e68:	cmp	r3, #0
   14e6c:	beq	14e8c <putchar_unlocked@plt+0x4134>
   14e70:	ldr	r3, [fp, #-16]
   14e74:	mov	r2, r3
   14e78:	ldr	r3, [fp, #4]
   14e7c:	mul	r3, r3, r2
   14e80:	str	r3, [fp, #-20]	; 0xffffffec
   14e84:	mov	r3, #1
   14e88:	b	14ea4 <putchar_unlocked@plt+0x414c>
   14e8c:	ldr	r3, [fp, #-16]
   14e90:	mov	r2, r3
   14e94:	ldr	r3, [fp, #4]
   14e98:	mul	r3, r3, r2
   14e9c:	str	r3, [fp, #-20]	; 0xffffffec
   14ea0:	mov	r3, #0
   14ea4:	cmp	r3, #0
   14ea8:	beq	14eb4 <putchar_unlocked@plt+0x415c>
   14eac:	mvn	r3, #-2147483648	; 0x80000000
   14eb0:	b	14ecc <putchar_unlocked@plt+0x4174>
   14eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14eb8:	cmp	r3, #63	; 0x3f
   14ebc:	bgt	14ec8 <putchar_unlocked@plt+0x4170>
   14ec0:	mov	r3, #64	; 0x40
   14ec4:	b	14ecc <putchar_unlocked@plt+0x4174>
   14ec8:	mov	r3, #0
   14ecc:	str	r3, [fp, #-12]
   14ed0:	ldr	r3, [fp, #-12]
   14ed4:	cmp	r3, #0
   14ed8:	beq	14f14 <putchar_unlocked@plt+0x41bc>
   14edc:	ldr	r1, [fp, #4]
   14ee0:	ldr	r0, [fp, #-12]
   14ee4:	bl	1668c <putchar_unlocked@plt+0x5934>
   14ee8:	mov	r3, r0
   14eec:	str	r3, [fp, #-16]
   14ef0:	ldr	r3, [fp, #-12]
   14ef4:	ldr	r1, [fp, #4]
   14ef8:	mov	r0, r3
   14efc:	bl	168ac <putchar_unlocked@plt+0x5b54>
   14f00:	mov	r3, r1
   14f04:	mov	r2, r3
   14f08:	ldr	r3, [fp, #-12]
   14f0c:	sub	r3, r3, r2
   14f10:	str	r3, [fp, #-20]	; 0xffffffec
   14f14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f18:	cmp	r3, #0
   14f1c:	bne	14f2c <putchar_unlocked@plt+0x41d4>
   14f20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f24:	mov	r2, #0
   14f28:	str	r2, [r3]
   14f2c:	ldr	r2, [fp, #-16]
   14f30:	ldr	r3, [fp, #-8]
   14f34:	sub	r2, r2, r3
   14f38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14f3c:	cmp	r2, r3
   14f40:	bge	15178 <putchar_unlocked@plt+0x4420>
   14f44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14f48:	cmp	r3, #0
   14f4c:	bge	14f70 <putchar_unlocked@plt+0x4218>
   14f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14f54:	rsb	r2, r3, #-2147483648	; 0x80000000
   14f58:	ldr	r3, [fp, #-8]
   14f5c:	cmp	r2, r3
   14f60:	movgt	r3, #1
   14f64:	movle	r3, #0
   14f68:	uxtb	r3, r3
   14f6c:	b	14fbc <putchar_unlocked@plt+0x4264>
   14f70:	ldr	r3, [fp, #-8]
   14f74:	cmp	r3, #0
   14f78:	bge	14f9c <putchar_unlocked@plt+0x4244>
   14f7c:	ldr	r3, [fp, #-8]
   14f80:	rsb	r2, r3, #-2147483648	; 0x80000000
   14f84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14f88:	cmp	r2, r3
   14f8c:	movgt	r3, #1
   14f90:	movle	r3, #0
   14f94:	uxtb	r3, r3
   14f98:	b	14fbc <putchar_unlocked@plt+0x4264>
   14f9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fa0:	mvn	r3, #-2147483648	; 0x80000000
   14fa4:	sub	r3, r3, r2
   14fa8:	ldr	r2, [fp, #-8]
   14fac:	cmp	r3, r2
   14fb0:	movlt	r3, #1
   14fb4:	movge	r3, #0
   14fb8:	uxtb	r3, r3
   14fbc:	cmp	r3, #0
   14fc0:	beq	14fd8 <putchar_unlocked@plt+0x4280>
   14fc4:	ldr	r2, [fp, #-8]
   14fc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14fcc:	add	r3, r2, r3
   14fd0:	str	r3, [fp, #-16]
   14fd4:	b	15174 <putchar_unlocked@plt+0x441c>
   14fd8:	ldr	r2, [fp, #-8]
   14fdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14fe0:	add	r3, r2, r3
   14fe4:	str	r3, [fp, #-16]
   14fe8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14fec:	cmp	r3, #0
   14ff0:	blt	15004 <putchar_unlocked@plt+0x42ac>
   14ff4:	ldr	r3, [fp, #-16]
   14ff8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14ffc:	cmp	r2, r3
   15000:	blt	15174 <putchar_unlocked@plt+0x441c>
   15004:	ldr	r3, [fp, #4]
   15008:	cmp	r3, #0
   1500c:	bge	1509c <putchar_unlocked@plt+0x4344>
   15010:	ldr	r3, [fp, #-16]
   15014:	cmp	r3, #0
   15018:	bge	15048 <putchar_unlocked@plt+0x42f0>
   1501c:	ldr	r1, [fp, #4]
   15020:	mvn	r0, #-2147483648	; 0x80000000
   15024:	bl	1668c <putchar_unlocked@plt+0x5934>
   15028:	mov	r3, r0
   1502c:	mov	r2, r3
   15030:	ldr	r3, [fp, #-16]
   15034:	cmp	r2, r3
   15038:	movgt	r3, #1
   1503c:	movle	r3, #0
   15040:	uxtb	r3, r3
   15044:	b	1513c <putchar_unlocked@plt+0x43e4>
   15048:	ldr	r3, [fp, #4]
   1504c:	cmn	r3, #1
   15050:	bne	15070 <putchar_unlocked@plt+0x4318>
   15054:	ldr	r3, [fp, #-16]
   15058:	add	r3, r3, #-2147483648	; 0x80000000
   1505c:	cmp	r3, #0
   15060:	movgt	r3, #1
   15064:	movle	r3, #0
   15068:	uxtb	r3, r3
   1506c:	b	1513c <putchar_unlocked@plt+0x43e4>
   15070:	ldr	r1, [fp, #4]
   15074:	mov	r0, #-2147483648	; 0x80000000
   15078:	bl	1668c <putchar_unlocked@plt+0x5934>
   1507c:	mov	r3, r0
   15080:	mov	r2, r3
   15084:	ldr	r3, [fp, #-16]
   15088:	cmp	r2, r3
   1508c:	movlt	r3, #1
   15090:	movge	r3, #0
   15094:	uxtb	r3, r3
   15098:	b	1513c <putchar_unlocked@plt+0x43e4>
   1509c:	ldr	r3, [fp, #4]
   150a0:	cmp	r3, #0
   150a4:	beq	15138 <putchar_unlocked@plt+0x43e0>
   150a8:	ldr	r3, [fp, #-16]
   150ac:	cmp	r3, #0
   150b0:	bge	1510c <putchar_unlocked@plt+0x43b4>
   150b4:	ldr	r3, [fp, #-16]
   150b8:	cmn	r3, #1
   150bc:	bne	150dc <putchar_unlocked@plt+0x4384>
   150c0:	ldr	r3, [fp, #4]
   150c4:	add	r3, r3, #-2147483648	; 0x80000000
   150c8:	cmp	r3, #0
   150cc:	movgt	r3, #1
   150d0:	movle	r3, #0
   150d4:	uxtb	r3, r3
   150d8:	b	1513c <putchar_unlocked@plt+0x43e4>
   150dc:	ldr	r3, [fp, #-16]
   150e0:	mov	r1, r3
   150e4:	mov	r0, #-2147483648	; 0x80000000
   150e8:	bl	1668c <putchar_unlocked@plt+0x5934>
   150ec:	mov	r3, r0
   150f0:	mov	r2, r3
   150f4:	ldr	r3, [fp, #4]
   150f8:	cmp	r2, r3
   150fc:	movlt	r3, #1
   15100:	movge	r3, #0
   15104:	uxtb	r3, r3
   15108:	b	1513c <putchar_unlocked@plt+0x43e4>
   1510c:	ldr	r1, [fp, #4]
   15110:	mvn	r0, #-2147483648	; 0x80000000
   15114:	bl	1668c <putchar_unlocked@plt+0x5934>
   15118:	mov	r3, r0
   1511c:	mov	r2, r3
   15120:	ldr	r3, [fp, #-16]
   15124:	cmp	r2, r3
   15128:	movlt	r3, #1
   1512c:	movge	r3, #0
   15130:	uxtb	r3, r3
   15134:	b	1513c <putchar_unlocked@plt+0x43e4>
   15138:	mov	r3, #0
   1513c:	cmp	r3, #0
   15140:	beq	1515c <putchar_unlocked@plt+0x4404>
   15144:	ldr	r3, [fp, #-16]
   15148:	mov	r2, r3
   1514c:	ldr	r3, [fp, #4]
   15150:	mul	r3, r3, r2
   15154:	str	r3, [fp, #-20]	; 0xffffffec
   15158:	b	15174 <putchar_unlocked@plt+0x441c>
   1515c:	ldr	r3, [fp, #-16]
   15160:	mov	r2, r3
   15164:	ldr	r3, [fp, #4]
   15168:	mul	r3, r3, r2
   1516c:	str	r3, [fp, #-20]	; 0xffffffec
   15170:	b	15178 <putchar_unlocked@plt+0x4420>
   15174:	bl	1539c <putchar_unlocked@plt+0x4644>
   15178:	ldr	r3, [fp, #-20]	; 0xffffffec
   1517c:	mov	r1, r3
   15180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15184:	bl	14910 <putchar_unlocked@plt+0x3bb8>
   15188:	str	r0, [fp, #-24]	; 0xffffffe8
   1518c:	ldr	r2, [fp, #-16]
   15190:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15194:	str	r2, [r3]
   15198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1519c:	mov	r0, r3
   151a0:	sub	sp, fp, #4
   151a4:	pop	{fp, pc}
   151a8:	push	{fp, lr}
   151ac:	add	fp, sp, #4
   151b0:	sub	sp, sp, #8
   151b4:	str	r0, [fp, #-8]
   151b8:	mov	r1, #1
   151bc:	ldr	r0, [fp, #-8]
   151c0:	bl	15200 <putchar_unlocked@plt+0x44a8>
   151c4:	mov	r3, r0
   151c8:	mov	r0, r3
   151cc:	sub	sp, fp, #4
   151d0:	pop	{fp, pc}
   151d4:	push	{fp, lr}
   151d8:	add	fp, sp, #4
   151dc:	sub	sp, sp, #8
   151e0:	str	r0, [fp, #-8]
   151e4:	mov	r1, #1
   151e8:	ldr	r0, [fp, #-8]
   151ec:	bl	1523c <putchar_unlocked@plt+0x44e4>
   151f0:	mov	r3, r0
   151f4:	mov	r0, r3
   151f8:	sub	sp, fp, #4
   151fc:	pop	{fp, pc}
   15200:	push	{fp, lr}
   15204:	add	fp, sp, #4
   15208:	sub	sp, sp, #8
   1520c:	str	r0, [fp, #-8]
   15210:	str	r1, [fp, #-12]
   15214:	ldr	r1, [fp, #-12]
   15218:	ldr	r0, [fp, #-8]
   1521c:	bl	153d8 <putchar_unlocked@plt+0x4680>
   15220:	mov	r3, r0
   15224:	mov	r0, r3
   15228:	bl	14850 <putchar_unlocked@plt+0x3af8>
   1522c:	mov	r3, r0
   15230:	mov	r0, r3
   15234:	sub	sp, fp, #4
   15238:	pop	{fp, pc}
   1523c:	push	{fp, lr}
   15240:	add	fp, sp, #4
   15244:	sub	sp, sp, #8
   15248:	str	r0, [fp, #-8]
   1524c:	str	r1, [fp, #-12]
   15250:	ldr	r1, [fp, #-12]
   15254:	ldr	r0, [fp, #-8]
   15258:	bl	15b34 <putchar_unlocked@plt+0x4ddc>
   1525c:	mov	r3, r0
   15260:	mov	r0, r3
   15264:	bl	14850 <putchar_unlocked@plt+0x3af8>
   15268:	mov	r3, r0
   1526c:	mov	r0, r3
   15270:	sub	sp, fp, #4
   15274:	pop	{fp, pc}
   15278:	push	{fp, lr}
   1527c:	add	fp, sp, #4
   15280:	sub	sp, sp, #8
   15284:	str	r0, [fp, #-8]
   15288:	str	r1, [fp, #-12]
   1528c:	ldr	r0, [fp, #-12]
   15290:	bl	14880 <putchar_unlocked@plt+0x3b28>
   15294:	mov	r3, r0
   15298:	ldr	r2, [fp, #-12]
   1529c:	ldr	r1, [fp, #-8]
   152a0:	mov	r0, r3
   152a4:	bl	10b9c <memcpy@plt>
   152a8:	mov	r3, r0
   152ac:	mov	r0, r3
   152b0:	sub	sp, fp, #4
   152b4:	pop	{fp, pc}
   152b8:	push	{fp, lr}
   152bc:	add	fp, sp, #4
   152c0:	sub	sp, sp, #8
   152c4:	str	r0, [fp, #-8]
   152c8:	str	r1, [fp, #-12]
   152cc:	ldr	r0, [fp, #-12]
   152d0:	bl	148b4 <putchar_unlocked@plt+0x3b5c>
   152d4:	mov	r3, r0
   152d8:	mov	r0, r3
   152dc:	ldr	r3, [fp, #-12]
   152e0:	mov	r2, r3
   152e4:	ldr	r1, [fp, #-8]
   152e8:	bl	10b9c <memcpy@plt>
   152ec:	mov	r3, r0
   152f0:	mov	r0, r3
   152f4:	sub	sp, fp, #4
   152f8:	pop	{fp, pc}
   152fc:	push	{fp, lr}
   15300:	add	fp, sp, #4
   15304:	sub	sp, sp, #16
   15308:	str	r0, [fp, #-16]
   1530c:	str	r1, [fp, #-20]	; 0xffffffec
   15310:	ldr	r3, [fp, #-20]	; 0xffffffec
   15314:	add	r3, r3, #1
   15318:	mov	r0, r3
   1531c:	bl	148b4 <putchar_unlocked@plt+0x3b5c>
   15320:	mov	r3, r0
   15324:	str	r3, [fp, #-8]
   15328:	ldr	r3, [fp, #-20]	; 0xffffffec
   1532c:	ldr	r2, [fp, #-8]
   15330:	add	r3, r2, r3
   15334:	mov	r2, #0
   15338:	strb	r2, [r3]
   1533c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15340:	mov	r2, r3
   15344:	ldr	r1, [fp, #-16]
   15348:	ldr	r0, [fp, #-8]
   1534c:	bl	10b9c <memcpy@plt>
   15350:	mov	r3, r0
   15354:	mov	r0, r3
   15358:	sub	sp, fp, #4
   1535c:	pop	{fp, pc}
   15360:	push	{fp, lr}
   15364:	add	fp, sp, #4
   15368:	sub	sp, sp, #8
   1536c:	str	r0, [fp, #-8]
   15370:	ldr	r0, [fp, #-8]
   15374:	bl	10cb0 <strlen@plt>
   15378:	mov	r3, r0
   1537c:	add	r3, r3, #1
   15380:	mov	r1, r3
   15384:	ldr	r0, [fp, #-8]
   15388:	bl	15278 <putchar_unlocked@plt+0x4520>
   1538c:	mov	r3, r0
   15390:	mov	r0, r3
   15394:	sub	sp, fp, #4
   15398:	pop	{fp, pc}
   1539c:	push	{r4, r5, fp, lr}
   153a0:	add	fp, sp, #12
   153a4:	ldr	r3, [pc, #32]	; 153cc <putchar_unlocked@plt+0x4674>
   153a8:	ldr	r4, [r3]
   153ac:	ldr	r0, [pc, #28]	; 153d0 <putchar_unlocked@plt+0x4678>
   153b0:	bl	10ca4 <gettext@plt>
   153b4:	mov	r3, r0
   153b8:	ldr	r2, [pc, #20]	; 153d4 <putchar_unlocked@plt+0x467c>
   153bc:	mov	r1, #0
   153c0:	mov	r0, r4
   153c4:	bl	10c44 <error@plt>
   153c8:	bl	10d4c <abort@plt>
   153cc:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   153d0:	andeq	r7, r1, r4, lsr #11
   153d4:			; <UNDEFINED> instruction: 0x000175b8
   153d8:	push	{r4, r5, fp, lr}
   153dc:	add	fp, sp, #12
   153e0:	sub	sp, sp, #16
   153e4:	str	r0, [fp, #-24]	; 0xffffffe8
   153e8:	str	r1, [fp, #-28]	; 0xffffffe4
   153ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153f0:	cmp	r3, #0
   153f4:	beq	15404 <putchar_unlocked@plt+0x46ac>
   153f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   153fc:	cmp	r3, #0
   15400:	bne	15414 <putchar_unlocked@plt+0x46bc>
   15404:	mov	r3, #1
   15408:	str	r3, [fp, #-28]	; 0xffffffe4
   1540c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15410:	str	r3, [fp, #-24]	; 0xffffffe8
   15414:	mov	r1, #0
   15418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1541c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15420:	umull	r2, r3, r2, r3
   15424:	mov	r4, r3
   15428:	mov	r5, #0
   1542c:	cmp	r4, #0
   15430:	beq	15438 <putchar_unlocked@plt+0x46e0>
   15434:	mov	r1, #1
   15438:	cmp	r2, #0
   1543c:	bge	15444 <putchar_unlocked@plt+0x46ec>
   15440:	mov	r1, #1
   15444:	mov	r3, r2
   15448:	str	r3, [fp, #-20]	; 0xffffffec
   1544c:	mov	r3, r1
   15450:	and	r3, r3, #1
   15454:	uxtb	r3, r3
   15458:	cmp	r3, #0
   1545c:	beq	15478 <putchar_unlocked@plt+0x4720>
   15460:	bl	10cc8 <__errno_location@plt>
   15464:	mov	r2, r0
   15468:	mov	r3, #12
   1546c:	str	r3, [r2]
   15470:	mov	r3, #0
   15474:	b	15490 <putchar_unlocked@plt+0x4738>
   15478:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1547c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15480:	bl	10b3c <calloc@plt>
   15484:	mov	r3, r0
   15488:	str	r3, [fp, #-16]
   1548c:	ldr	r3, [fp, #-16]
   15490:	mov	r0, r3
   15494:	sub	sp, fp, #12
   15498:	pop	{r4, r5, fp, pc}
   1549c:	push	{r4, r5, fp, lr}
   154a0:	add	fp, sp, #12
   154a4:	sub	sp, sp, #16
   154a8:	str	r0, [fp, #-24]	; 0xffffffe8
   154ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   154b0:	cmp	r3, #0
   154b4:	bne	154c0 <putchar_unlocked@plt+0x4768>
   154b8:	mov	r3, #1
   154bc:	str	r3, [fp, #-24]	; 0xffffffe8
   154c0:	mov	r1, #0
   154c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   154c8:	mov	r2, r3
   154cc:	mov	r3, #0
   154d0:	mov	r4, r3
   154d4:	mov	r5, #0
   154d8:	cmp	r4, #0
   154dc:	beq	154e4 <putchar_unlocked@plt+0x478c>
   154e0:	mov	r1, #1
   154e4:	cmp	r2, #0
   154e8:	bge	154f0 <putchar_unlocked@plt+0x4798>
   154ec:	mov	r1, #1
   154f0:	mov	r3, r2
   154f4:	str	r3, [fp, #-20]	; 0xffffffec
   154f8:	mov	r3, r1
   154fc:	and	r3, r3, #1
   15500:	uxtb	r3, r3
   15504:	cmp	r3, #0
   15508:	beq	15524 <putchar_unlocked@plt+0x47cc>
   1550c:	bl	10cc8 <__errno_location@plt>
   15510:	mov	r2, r0
   15514:	mov	r3, #12
   15518:	str	r3, [r2]
   1551c:	mov	r3, #0
   15520:	b	15538 <putchar_unlocked@plt+0x47e0>
   15524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15528:	bl	10c50 <malloc@plt>
   1552c:	mov	r3, r0
   15530:	str	r3, [fp, #-16]
   15534:	ldr	r3, [fp, #-16]
   15538:	mov	r0, r3
   1553c:	sub	sp, fp, #12
   15540:	pop	{r4, r5, fp, pc}
   15544:	push	{r4, r5, fp, lr}
   15548:	add	fp, sp, #12
   1554c:	sub	sp, sp, #16
   15550:	str	r0, [fp, #-24]	; 0xffffffe8
   15554:	str	r1, [fp, #-28]	; 0xffffffe4
   15558:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1555c:	cmp	r3, #0
   15560:	bne	15574 <putchar_unlocked@plt+0x481c>
   15564:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15568:	bl	1549c <putchar_unlocked@plt+0x4744>
   1556c:	mov	r3, r0
   15570:	b	15608 <putchar_unlocked@plt+0x48b0>
   15574:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15578:	cmp	r3, #0
   1557c:	bne	15590 <putchar_unlocked@plt+0x4838>
   15580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15584:	bl	15924 <putchar_unlocked@plt+0x4bcc>
   15588:	mov	r3, #0
   1558c:	b	15608 <putchar_unlocked@plt+0x48b0>
   15590:	mov	r1, #0
   15594:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15598:	mov	r2, r3
   1559c:	mov	r3, #0
   155a0:	mov	r4, r3
   155a4:	mov	r5, #0
   155a8:	cmp	r4, #0
   155ac:	beq	155b4 <putchar_unlocked@plt+0x485c>
   155b0:	mov	r1, #1
   155b4:	cmp	r2, #0
   155b8:	bge	155c0 <putchar_unlocked@plt+0x4868>
   155bc:	mov	r1, #1
   155c0:	mov	r3, r2
   155c4:	str	r3, [fp, #-20]	; 0xffffffec
   155c8:	mov	r3, r1
   155cc:	and	r3, r3, #1
   155d0:	uxtb	r3, r3
   155d4:	cmp	r3, #0
   155d8:	beq	155f4 <putchar_unlocked@plt+0x489c>
   155dc:	bl	10cc8 <__errno_location@plt>
   155e0:	mov	r2, r0
   155e4:	mov	r3, #12
   155e8:	str	r3, [r2]
   155ec:	mov	r3, #0
   155f0:	b	15608 <putchar_unlocked@plt+0x48b0>
   155f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155fc:	bl	10bd8 <realloc@plt>
   15600:	str	r0, [fp, #-16]
   15604:	ldr	r3, [fp, #-16]
   15608:	mov	r0, r3
   1560c:	sub	sp, fp, #12
   15610:	pop	{r4, r5, fp, pc}
   15614:	push	{r4, r5, fp, lr}
   15618:	add	fp, sp, #12
   1561c:	sub	sp, sp, #16
   15620:	str	r0, [fp, #-24]	; 0xffffffe8
   15624:	str	r1, [fp, #-28]	; 0xffffffe4
   15628:	ldr	r5, [fp, #-24]	; 0xffffffe8
   1562c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   15630:	cmp	r5, r4
   15634:	bne	15640 <putchar_unlocked@plt+0x48e8>
   15638:	mov	r3, #0
   1563c:	b	156a0 <putchar_unlocked@plt+0x4948>
   15640:	ldrb	r3, [r5]
   15644:	mov	r0, r3
   15648:	bl	161fc <putchar_unlocked@plt+0x54a4>
   1564c:	mov	r3, r0
   15650:	strb	r3, [fp, #-13]
   15654:	ldrb	r3, [r4]
   15658:	mov	r0, r3
   1565c:	bl	161fc <putchar_unlocked@plt+0x54a4>
   15660:	mov	r3, r0
   15664:	strb	r3, [fp, #-14]
   15668:	ldrb	r3, [fp, #-13]
   1566c:	cmp	r3, #0
   15670:	beq	15690 <putchar_unlocked@plt+0x4938>
   15674:	add	r5, r5, #1
   15678:	add	r4, r4, #1
   1567c:	ldrb	r2, [fp, #-13]
   15680:	ldrb	r3, [fp, #-14]
   15684:	cmp	r2, r3
   15688:	beq	15640 <putchar_unlocked@plt+0x48e8>
   1568c:	b	15694 <putchar_unlocked@plt+0x493c>
   15690:	nop			; (mov r0, r0)
   15694:	ldrb	r2, [fp, #-13]
   15698:	ldrb	r3, [fp, #-14]
   1569c:	sub	r3, r2, r3
   156a0:	mov	r0, r3
   156a4:	sub	sp, fp, #12
   156a8:	pop	{r4, r5, fp, pc}
   156ac:	push	{fp, lr}
   156b0:	add	fp, sp, #4
   156b4:	sub	sp, sp, #16
   156b8:	str	r0, [fp, #-16]
   156bc:	ldr	r0, [fp, #-16]
   156c0:	bl	10c20 <__fpending@plt>
   156c4:	mov	r3, r0
   156c8:	cmp	r3, #0
   156cc:	movne	r3, #1
   156d0:	moveq	r3, #0
   156d4:	strb	r3, [fp, #-5]
   156d8:	ldr	r0, [fp, #-16]
   156dc:	bl	10c2c <ferror_unlocked@plt>
   156e0:	mov	r3, r0
   156e4:	cmp	r3, #0
   156e8:	movne	r3, #1
   156ec:	moveq	r3, #0
   156f0:	strb	r3, [fp, #-6]
   156f4:	ldr	r0, [fp, #-16]
   156f8:	bl	15784 <putchar_unlocked@plt+0x4a2c>
   156fc:	mov	r3, r0
   15700:	cmp	r3, #0
   15704:	movne	r3, #1
   15708:	moveq	r3, #0
   1570c:	strb	r3, [fp, #-7]
   15710:	ldrb	r3, [fp, #-6]
   15714:	cmp	r3, #0
   15718:	bne	15748 <putchar_unlocked@plt+0x49f0>
   1571c:	ldrb	r3, [fp, #-7]
   15720:	cmp	r3, #0
   15724:	beq	15774 <putchar_unlocked@plt+0x4a1c>
   15728:	ldrb	r3, [fp, #-5]
   1572c:	cmp	r3, #0
   15730:	bne	15748 <putchar_unlocked@plt+0x49f0>
   15734:	bl	10cc8 <__errno_location@plt>
   15738:	mov	r3, r0
   1573c:	ldr	r3, [r3]
   15740:	cmp	r3, #9
   15744:	beq	15774 <putchar_unlocked@plt+0x4a1c>
   15748:	ldrb	r3, [fp, #-7]
   1574c:	eor	r3, r3, #1
   15750:	uxtb	r3, r3
   15754:	cmp	r3, #0
   15758:	beq	1576c <putchar_unlocked@plt+0x4a14>
   1575c:	bl	10cc8 <__errno_location@plt>
   15760:	mov	r2, r0
   15764:	mov	r3, #0
   15768:	str	r3, [r2]
   1576c:	mvn	r3, #0
   15770:	b	15778 <putchar_unlocked@plt+0x4a20>
   15774:	mov	r3, #0
   15778:	mov	r0, r3
   1577c:	sub	sp, fp, #4
   15780:	pop	{fp, pc}
   15784:	push	{fp, lr}
   15788:	add	fp, sp, #4
   1578c:	sub	sp, sp, #32
   15790:	str	r0, [fp, #-24]	; 0xffffffe8
   15794:	mov	r3, #0
   15798:	str	r3, [fp, #-8]
   1579c:	mov	r3, #0
   157a0:	str	r3, [fp, #-12]
   157a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157a8:	bl	10cec <fileno@plt>
   157ac:	str	r0, [fp, #-16]
   157b0:	ldr	r3, [fp, #-16]
   157b4:	cmp	r3, #0
   157b8:	bge	157cc <putchar_unlocked@plt+0x4a74>
   157bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157c0:	bl	10cf8 <fclose@plt>
   157c4:	mov	r3, r0
   157c8:	b	15870 <putchar_unlocked@plt+0x4b18>
   157cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157d0:	bl	10c68 <__freading@plt>
   157d4:	mov	r3, r0
   157d8:	cmp	r3, #0
   157dc:	beq	15818 <putchar_unlocked@plt+0x4ac0>
   157e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157e4:	bl	10cec <fileno@plt>
   157e8:	mov	r1, r0
   157ec:	mov	r3, #1
   157f0:	str	r3, [sp]
   157f4:	mov	r2, #0
   157f8:	mov	r3, #0
   157fc:	mov	r0, r1
   15800:	bl	10c08 <lseek64@plt>
   15804:	mvn	r2, #0
   15808:	mvn	r3, #0
   1580c:	cmp	r1, r3
   15810:	cmpeq	r0, r2
   15814:	beq	1583c <putchar_unlocked@plt+0x4ae4>
   15818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1581c:	bl	158c4 <putchar_unlocked@plt+0x4b6c>
   15820:	mov	r3, r0
   15824:	cmp	r3, #0
   15828:	beq	1583c <putchar_unlocked@plt+0x4ae4>
   1582c:	bl	10cc8 <__errno_location@plt>
   15830:	mov	r3, r0
   15834:	ldr	r3, [r3]
   15838:	str	r3, [fp, #-8]
   1583c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15840:	bl	10cf8 <fclose@plt>
   15844:	str	r0, [fp, #-12]
   15848:	ldr	r3, [fp, #-8]
   1584c:	cmp	r3, #0
   15850:	beq	1586c <putchar_unlocked@plt+0x4b14>
   15854:	bl	10cc8 <__errno_location@plt>
   15858:	mov	r2, r0
   1585c:	ldr	r3, [fp, #-8]
   15860:	str	r3, [r2]
   15864:	mvn	r3, #0
   15868:	str	r3, [fp, #-12]
   1586c:	ldr	r3, [fp, #-12]
   15870:	mov	r0, r3
   15874:	sub	sp, fp, #4
   15878:	pop	{fp, pc}
   1587c:	push	{fp, lr}
   15880:	add	fp, sp, #4
   15884:	sub	sp, sp, #16
   15888:	str	r0, [fp, #-8]
   1588c:	ldr	r3, [fp, #-8]
   15890:	ldr	r3, [r3]
   15894:	and	r3, r3, #256	; 0x100
   15898:	cmp	r3, #0
   1589c:	beq	158b8 <putchar_unlocked@plt+0x4b60>
   158a0:	mov	r3, #1
   158a4:	str	r3, [sp]
   158a8:	mov	r2, #0
   158ac:	mov	r3, #0
   158b0:	ldr	r0, [fp, #-8]
   158b4:	bl	159b0 <putchar_unlocked@plt+0x4c58>
   158b8:	nop			; (mov r0, r0)
   158bc:	sub	sp, fp, #4
   158c0:	pop	{fp, pc}
   158c4:	push	{fp, lr}
   158c8:	add	fp, sp, #4
   158cc:	sub	sp, sp, #8
   158d0:	str	r0, [fp, #-8]
   158d4:	ldr	r3, [fp, #-8]
   158d8:	cmp	r3, #0
   158dc:	beq	158f4 <putchar_unlocked@plt+0x4b9c>
   158e0:	ldr	r0, [fp, #-8]
   158e4:	bl	10c68 <__freading@plt>
   158e8:	mov	r3, r0
   158ec:	cmp	r3, #0
   158f0:	bne	15904 <putchar_unlocked@plt+0x4bac>
   158f4:	ldr	r0, [fp, #-8]
   158f8:	bl	10b78 <fflush@plt>
   158fc:	mov	r3, r0
   15900:	b	15918 <putchar_unlocked@plt+0x4bc0>
   15904:	ldr	r0, [fp, #-8]
   15908:	bl	1587c <putchar_unlocked@plt+0x4b24>
   1590c:	ldr	r0, [fp, #-8]
   15910:	bl	10b78 <fflush@plt>
   15914:	mov	r3, r0
   15918:	mov	r0, r3
   1591c:	sub	sp, fp, #4
   15920:	pop	{fp, pc}
   15924:	push	{r4, fp, lr}
   15928:	add	fp, sp, #8
   1592c:	sub	sp, sp, #20
   15930:	str	r0, [fp, #-24]	; 0xffffffe8
   15934:	bl	10cc8 <__errno_location@plt>
   15938:	mov	r3, r0
   1593c:	ldr	r3, [r3]
   15940:	str	r3, [fp, #-20]	; 0xffffffec
   15944:	bl	10cc8 <__errno_location@plt>
   15948:	mov	r3, r0
   1594c:	ldr	r3, [r3]
   15950:	str	r3, [fp, #-16]
   15954:	bl	10cc8 <__errno_location@plt>
   15958:	mov	r2, r0
   1595c:	mov	r3, #0
   15960:	str	r3, [r2]
   15964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15968:	bl	10b84 <free@plt>
   1596c:	bl	10cc8 <__errno_location@plt>
   15970:	mov	r4, r0
   15974:	bl	10cc8 <__errno_location@plt>
   15978:	mov	r3, r0
   1597c:	ldr	r3, [r3]
   15980:	cmp	r3, #0
   15984:	moveq	r3, #1
   15988:	movne	r3, #0
   1598c:	uxtb	r3, r3
   15990:	lsl	r3, r3, #2
   15994:	sub	r2, fp, #12
   15998:	add	r3, r2, r3
   1599c:	ldr	r3, [r3, #-8]
   159a0:	str	r3, [r4]
   159a4:	nop			; (mov r0, r0)
   159a8:	sub	sp, fp, #8
   159ac:	pop	{r4, fp, pc}
   159b0:	push	{fp, lr}
   159b4:	add	fp, sp, #4
   159b8:	sub	sp, sp, #32
   159bc:	str	r0, [fp, #-16]
   159c0:	strd	r2, [fp, #-28]	; 0xffffffe4
   159c4:	ldr	r3, [fp, #-16]
   159c8:	ldr	r2, [r3, #8]
   159cc:	ldr	r3, [fp, #-16]
   159d0:	ldr	r3, [r3, #4]
   159d4:	cmp	r2, r3
   159d8:	bne	15a70 <putchar_unlocked@plt+0x4d18>
   159dc:	ldr	r3, [fp, #-16]
   159e0:	ldr	r2, [r3, #20]
   159e4:	ldr	r3, [fp, #-16]
   159e8:	ldr	r3, [r3, #16]
   159ec:	cmp	r2, r3
   159f0:	bne	15a70 <putchar_unlocked@plt+0x4d18>
   159f4:	ldr	r3, [fp, #-16]
   159f8:	ldr	r3, [r3, #36]	; 0x24
   159fc:	cmp	r3, #0
   15a00:	bne	15a70 <putchar_unlocked@plt+0x4d18>
   15a04:	ldr	r0, [fp, #-16]
   15a08:	bl	10cec <fileno@plt>
   15a0c:	mov	r1, r0
   15a10:	ldr	r3, [fp, #4]
   15a14:	str	r3, [sp]
   15a18:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15a1c:	mov	r0, r1
   15a20:	bl	10c08 <lseek64@plt>
   15a24:	strd	r0, [fp, #-12]
   15a28:	ldrd	r2, [fp, #-12]
   15a2c:	mvn	r0, #0
   15a30:	mvn	r1, #0
   15a34:	cmp	r3, r1
   15a38:	cmpeq	r2, r0
   15a3c:	bne	15a48 <putchar_unlocked@plt+0x4cf0>
   15a40:	mvn	r3, #0
   15a44:	b	15a88 <putchar_unlocked@plt+0x4d30>
   15a48:	ldr	r3, [fp, #-16]
   15a4c:	ldr	r3, [r3]
   15a50:	bic	r2, r3, #16
   15a54:	ldr	r3, [fp, #-16]
   15a58:	str	r2, [r3]
   15a5c:	ldr	r1, [fp, #-16]
   15a60:	ldrd	r2, [fp, #-12]
   15a64:	strd	r2, [r1, #80]	; 0x50
   15a68:	mov	r3, #0
   15a6c:	b	15a88 <putchar_unlocked@plt+0x4d30>
   15a70:	ldr	r3, [fp, #4]
   15a74:	str	r3, [sp]
   15a78:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   15a7c:	ldr	r0, [fp, #-16]
   15a80:	bl	10d04 <fseeko64@plt>
   15a84:	mov	r3, r0
   15a88:	mov	r0, r3
   15a8c:	sub	sp, fp, #4
   15a90:	pop	{fp, pc}
   15a94:	push	{fp, lr}
   15a98:	add	fp, sp, #4
   15a9c:	bl	10cc8 <__errno_location@plt>
   15aa0:	mov	r2, r0
   15aa4:	mov	r3, #12
   15aa8:	str	r3, [r2]
   15aac:	mov	r3, #0
   15ab0:	mov	r0, r3
   15ab4:	pop	{fp, pc}
   15ab8:	push	{fp, lr}
   15abc:	add	fp, sp, #4
   15ac0:	sub	sp, sp, #8
   15ac4:	str	r0, [fp, #-8]
   15ac8:	ldr	r3, [fp, #-8]
   15acc:	mov	r0, r3
   15ad0:	bl	1549c <putchar_unlocked@plt+0x4744>
   15ad4:	mov	r3, r0
   15ad8:	mov	r0, r3
   15adc:	sub	sp, fp, #4
   15ae0:	pop	{fp, pc}
   15ae4:	push	{fp, lr}
   15ae8:	add	fp, sp, #4
   15aec:	sub	sp, sp, #8
   15af0:	str	r0, [fp, #-8]
   15af4:	str	r1, [fp, #-12]
   15af8:	ldr	r3, [fp, #-12]
   15afc:	cmp	r3, #0
   15b00:	moveq	r3, #1
   15b04:	movne	r3, #0
   15b08:	uxtb	r3, r3
   15b0c:	mov	r2, r3
   15b10:	ldr	r3, [fp, #-12]
   15b14:	orr	r3, r2, r3
   15b18:	mov	r1, r3
   15b1c:	ldr	r0, [fp, #-8]
   15b20:	bl	15544 <putchar_unlocked@plt+0x47ec>
   15b24:	mov	r3, r0
   15b28:	mov	r0, r3
   15b2c:	sub	sp, fp, #4
   15b30:	pop	{fp, pc}
   15b34:	push	{fp, lr}
   15b38:	add	fp, sp, #4
   15b3c:	sub	sp, sp, #8
   15b40:	str	r0, [fp, #-8]
   15b44:	str	r1, [fp, #-12]
   15b48:	ldr	r3, [fp, #-8]
   15b4c:	ldr	r2, [fp, #-12]
   15b50:	mov	r1, r2
   15b54:	mov	r0, r3
   15b58:	bl	153d8 <putchar_unlocked@plt+0x4680>
   15b5c:	mov	r3, r0
   15b60:	mov	r0, r3
   15b64:	sub	sp, fp, #4
   15b68:	pop	{fp, pc}
   15b6c:	push	{fp, lr}
   15b70:	add	fp, sp, #4
   15b74:	sub	sp, sp, #16
   15b78:	str	r0, [fp, #-8]
   15b7c:	str	r1, [fp, #-12]
   15b80:	str	r2, [fp, #-16]
   15b84:	ldr	r3, [fp, #-12]
   15b88:	cmp	r3, #0
   15b8c:	beq	15b9c <putchar_unlocked@plt+0x4e44>
   15b90:	ldr	r3, [fp, #-16]
   15b94:	cmp	r3, #0
   15b98:	bne	15bac <putchar_unlocked@plt+0x4e54>
   15b9c:	mov	r3, #1
   15ba0:	str	r3, [fp, #-16]
   15ba4:	ldr	r3, [fp, #-16]
   15ba8:	str	r3, [fp, #-12]
   15bac:	ldr	r3, [fp, #-12]
   15bb0:	ldr	r2, [fp, #-16]
   15bb4:	mov	r1, r3
   15bb8:	ldr	r0, [fp, #-8]
   15bbc:	bl	15cd8 <putchar_unlocked@plt+0x4f80>
   15bc0:	mov	r3, r0
   15bc4:	mov	r0, r3
   15bc8:	sub	sp, fp, #4
   15bcc:	pop	{fp, pc}
   15bd0:	push	{fp, lr}
   15bd4:	add	fp, sp, #4
   15bd8:	sub	sp, sp, #8
   15bdc:	mov	r0, #14
   15be0:	bl	10d28 <nl_langinfo@plt>
   15be4:	str	r0, [fp, #-8]
   15be8:	ldr	r3, [fp, #-8]
   15bec:	cmp	r3, #0
   15bf0:	bne	15bfc <putchar_unlocked@plt+0x4ea4>
   15bf4:	ldr	r3, [pc, #40]	; 15c24 <putchar_unlocked@plt+0x4ecc>
   15bf8:	str	r3, [fp, #-8]
   15bfc:	ldr	r3, [fp, #-8]
   15c00:	ldrb	r3, [r3]
   15c04:	cmp	r3, #0
   15c08:	bne	15c14 <putchar_unlocked@plt+0x4ebc>
   15c0c:	ldr	r3, [pc, #20]	; 15c28 <putchar_unlocked@plt+0x4ed0>
   15c10:	str	r3, [fp, #-8]
   15c14:	ldr	r3, [fp, #-8]
   15c18:	mov	r0, r3
   15c1c:	sub	sp, fp, #4
   15c20:	pop	{fp, pc}
   15c24:			; <UNDEFINED> instruction: 0x000175bc
   15c28:	andeq	r7, r1, r0, asr #11
   15c2c:	push	{fp, lr}
   15c30:	add	fp, sp, #4
   15c34:	sub	sp, sp, #32
   15c38:	str	r0, [fp, #-24]	; 0xffffffe8
   15c3c:	str	r1, [fp, #-28]	; 0xffffffe4
   15c40:	str	r2, [fp, #-32]	; 0xffffffe0
   15c44:	str	r3, [fp, #-36]	; 0xffffffdc
   15c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c4c:	cmp	r3, #0
   15c50:	bne	15c5c <putchar_unlocked@plt+0x4f04>
   15c54:	sub	r3, fp, #16
   15c58:	str	r3, [fp, #-24]	; 0xffffffe8
   15c5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15c60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15c64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c6c:	bl	10c38 <mbrtowc@plt>
   15c70:	str	r0, [fp, #-8]
   15c74:	ldr	r3, [fp, #-8]
   15c78:	cmn	r3, #3
   15c7c:	bls	15cc8 <putchar_unlocked@plt+0x4f70>
   15c80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c84:	cmp	r3, #0
   15c88:	beq	15cc8 <putchar_unlocked@plt+0x4f70>
   15c8c:	mov	r0, #0
   15c90:	bl	1627c <putchar_unlocked@plt+0x5524>
   15c94:	mov	r3, r0
   15c98:	eor	r3, r3, #1
   15c9c:	uxtb	r3, r3
   15ca0:	cmp	r3, #0
   15ca4:	beq	15cc8 <putchar_unlocked@plt+0x4f70>
   15ca8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15cac:	ldrb	r3, [r3]
   15cb0:	strb	r3, [fp, #-9]
   15cb4:	ldrb	r2, [fp, #-9]
   15cb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15cbc:	str	r2, [r3]
   15cc0:	mov	r3, #1
   15cc4:	b	15ccc <putchar_unlocked@plt+0x4f74>
   15cc8:	ldr	r3, [fp, #-8]
   15ccc:	mov	r0, r3
   15cd0:	sub	sp, fp, #4
   15cd4:	pop	{fp, pc}
   15cd8:	push	{fp, lr}
   15cdc:	add	fp, sp, #4
   15ce0:	sub	sp, sp, #24
   15ce4:	str	r0, [fp, #-16]
   15ce8:	str	r1, [fp, #-20]	; 0xffffffec
   15cec:	str	r2, [fp, #-24]	; 0xffffffe8
   15cf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15cf4:	cmp	r3, #0
   15cf8:	beq	15d34 <putchar_unlocked@plt+0x4fdc>
   15cfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d00:	mvn	r0, #0
   15d04:	bl	16480 <putchar_unlocked@plt+0x5728>
   15d08:	mov	r3, r0
   15d0c:	mov	r2, r3
   15d10:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d14:	cmp	r2, r3
   15d18:	bcs	15d34 <putchar_unlocked@plt+0x4fdc>
   15d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d24:	mul	r3, r2, r3
   15d28:	str	r3, [fp, #-8]
   15d2c:	mov	r3, #1
   15d30:	b	15d48 <putchar_unlocked@plt+0x4ff0>
   15d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d3c:	mul	r3, r2, r3
   15d40:	str	r3, [fp, #-8]
   15d44:	mov	r3, #0
   15d48:	cmp	r3, #0
   15d4c:	beq	15d68 <putchar_unlocked@plt+0x5010>
   15d50:	bl	10cc8 <__errno_location@plt>
   15d54:	mov	r2, r0
   15d58:	mov	r3, #12
   15d5c:	str	r3, [r2]
   15d60:	mov	r3, #0
   15d64:	b	15d7c <putchar_unlocked@plt+0x5024>
   15d68:	ldr	r3, [fp, #-8]
   15d6c:	mov	r1, r3
   15d70:	ldr	r0, [fp, #-16]
   15d74:	bl	15544 <putchar_unlocked@plt+0x47ec>
   15d78:	mov	r3, r0
   15d7c:	mov	r0, r3
   15d80:	sub	sp, fp, #4
   15d84:	pop	{fp, pc}
   15d88:	push	{fp}		; (str fp, [sp, #-4]!)
   15d8c:	add	fp, sp, #0
   15d90:	sub	sp, sp, #12
   15d94:	str	r0, [fp, #-8]
   15d98:	ldr	r3, [fp, #-8]
   15d9c:	cmp	r3, #90	; 0x5a
   15da0:	bgt	15dbc <putchar_unlocked@plt+0x5064>
   15da4:	cmp	r3, #65	; 0x41
   15da8:	bge	15dc8 <putchar_unlocked@plt+0x5070>
   15dac:	sub	r3, r3, #48	; 0x30
   15db0:	cmp	r3, #9
   15db4:	bhi	15dd0 <putchar_unlocked@plt+0x5078>
   15db8:	b	15dc8 <putchar_unlocked@plt+0x5070>
   15dbc:	sub	r3, r3, #97	; 0x61
   15dc0:	cmp	r3, #25
   15dc4:	bhi	15dd0 <putchar_unlocked@plt+0x5078>
   15dc8:	mov	r3, #1
   15dcc:	b	15dd4 <putchar_unlocked@plt+0x507c>
   15dd0:	mov	r3, #0
   15dd4:	mov	r0, r3
   15dd8:	add	sp, fp, #0
   15ddc:	pop	{fp}		; (ldr fp, [sp], #4)
   15de0:	bx	lr
   15de4:	push	{fp}		; (str fp, [sp, #-4]!)
   15de8:	add	fp, sp, #0
   15dec:	sub	sp, sp, #12
   15df0:	str	r0, [fp, #-8]
   15df4:	ldr	r3, [fp, #-8]
   15df8:	cmp	r3, #65	; 0x41
   15dfc:	blt	15e1c <putchar_unlocked@plt+0x50c4>
   15e00:	cmp	r3, #90	; 0x5a
   15e04:	ble	15e14 <putchar_unlocked@plt+0x50bc>
   15e08:	sub	r3, r3, #97	; 0x61
   15e0c:	cmp	r3, #25
   15e10:	bhi	15e1c <putchar_unlocked@plt+0x50c4>
   15e14:	mov	r3, #1
   15e18:	b	15e20 <putchar_unlocked@plt+0x50c8>
   15e1c:	mov	r3, #0
   15e20:	mov	r0, r3
   15e24:	add	sp, fp, #0
   15e28:	pop	{fp}		; (ldr fp, [sp], #4)
   15e2c:	bx	lr
   15e30:	push	{fp}		; (str fp, [sp, #-4]!)
   15e34:	add	fp, sp, #0
   15e38:	sub	sp, sp, #12
   15e3c:	str	r0, [fp, #-8]
   15e40:	ldr	r3, [fp, #-8]
   15e44:	add	r3, r3, #0
   15e48:	cmp	r3, #127	; 0x7f
   15e4c:	bhi	15e58 <putchar_unlocked@plt+0x5100>
   15e50:	mov	r3, #1
   15e54:	b	15e5c <putchar_unlocked@plt+0x5104>
   15e58:	mov	r3, #0
   15e5c:	mov	r0, r3
   15e60:	add	sp, fp, #0
   15e64:	pop	{fp}		; (ldr fp, [sp], #4)
   15e68:	bx	lr
   15e6c:	push	{fp}		; (str fp, [sp, #-4]!)
   15e70:	add	fp, sp, #0
   15e74:	sub	sp, sp, #12
   15e78:	str	r0, [fp, #-8]
   15e7c:	ldr	r3, [fp, #-8]
   15e80:	cmp	r3, #32
   15e84:	beq	15e94 <putchar_unlocked@plt+0x513c>
   15e88:	ldr	r3, [fp, #-8]
   15e8c:	cmp	r3, #9
   15e90:	bne	15e9c <putchar_unlocked@plt+0x5144>
   15e94:	mov	r3, #1
   15e98:	b	15ea0 <putchar_unlocked@plt+0x5148>
   15e9c:	mov	r3, #0
   15ea0:	and	r3, r3, #1
   15ea4:	uxtb	r3, r3
   15ea8:	mov	r0, r3
   15eac:	add	sp, fp, #0
   15eb0:	pop	{fp}		; (ldr fp, [sp], #4)
   15eb4:	bx	lr
   15eb8:	push	{fp}		; (str fp, [sp, #-4]!)
   15ebc:	add	fp, sp, #0
   15ec0:	sub	sp, sp, #12
   15ec4:	str	r0, [fp, #-8]
   15ec8:	ldr	r3, [fp, #-8]
   15ecc:	cmp	r3, #0
   15ed0:	blt	15eec <putchar_unlocked@plt+0x5194>
   15ed4:	cmp	r3, #31
   15ed8:	ble	15ee4 <putchar_unlocked@plt+0x518c>
   15edc:	cmp	r3, #127	; 0x7f
   15ee0:	bne	15eec <putchar_unlocked@plt+0x5194>
   15ee4:	mov	r3, #1
   15ee8:	b	15ef0 <putchar_unlocked@plt+0x5198>
   15eec:	mov	r3, #0
   15ef0:	mov	r0, r3
   15ef4:	add	sp, fp, #0
   15ef8:	pop	{fp}		; (ldr fp, [sp], #4)
   15efc:	bx	lr
   15f00:	push	{fp}		; (str fp, [sp, #-4]!)
   15f04:	add	fp, sp, #0
   15f08:	sub	sp, sp, #12
   15f0c:	str	r0, [fp, #-8]
   15f10:	ldr	r3, [fp, #-8]
   15f14:	sub	r3, r3, #48	; 0x30
   15f18:	cmp	r3, #9
   15f1c:	bhi	15f28 <putchar_unlocked@plt+0x51d0>
   15f20:	mov	r3, #1
   15f24:	b	15f2c <putchar_unlocked@plt+0x51d4>
   15f28:	mov	r3, #0
   15f2c:	mov	r0, r3
   15f30:	add	sp, fp, #0
   15f34:	pop	{fp}		; (ldr fp, [sp], #4)
   15f38:	bx	lr
   15f3c:	push	{fp}		; (str fp, [sp, #-4]!)
   15f40:	add	fp, sp, #0
   15f44:	sub	sp, sp, #12
   15f48:	str	r0, [fp, #-8]
   15f4c:	ldr	r3, [fp, #-8]
   15f50:	sub	r3, r3, #33	; 0x21
   15f54:	cmp	r3, #93	; 0x5d
   15f58:	bhi	15f64 <putchar_unlocked@plt+0x520c>
   15f5c:	mov	r3, #1
   15f60:	b	15f68 <putchar_unlocked@plt+0x5210>
   15f64:	mov	r3, #0
   15f68:	mov	r0, r3
   15f6c:	add	sp, fp, #0
   15f70:	pop	{fp}		; (ldr fp, [sp], #4)
   15f74:	bx	lr
   15f78:	push	{fp}		; (str fp, [sp, #-4]!)
   15f7c:	add	fp, sp, #0
   15f80:	sub	sp, sp, #12
   15f84:	str	r0, [fp, #-8]
   15f88:	ldr	r3, [fp, #-8]
   15f8c:	sub	r3, r3, #97	; 0x61
   15f90:	cmp	r3, #25
   15f94:	bhi	15fa0 <putchar_unlocked@plt+0x5248>
   15f98:	mov	r3, #1
   15f9c:	b	15fa4 <putchar_unlocked@plt+0x524c>
   15fa0:	mov	r3, #0
   15fa4:	mov	r0, r3
   15fa8:	add	sp, fp, #0
   15fac:	pop	{fp}		; (ldr fp, [sp], #4)
   15fb0:	bx	lr
   15fb4:	push	{fp}		; (str fp, [sp, #-4]!)
   15fb8:	add	fp, sp, #0
   15fbc:	sub	sp, sp, #12
   15fc0:	str	r0, [fp, #-8]
   15fc4:	ldr	r3, [fp, #-8]
   15fc8:	sub	r3, r3, #32
   15fcc:	cmp	r3, #94	; 0x5e
   15fd0:	bhi	15fdc <putchar_unlocked@plt+0x5284>
   15fd4:	mov	r3, #1
   15fd8:	b	15fe0 <putchar_unlocked@plt+0x5288>
   15fdc:	mov	r3, #0
   15fe0:	mov	r0, r3
   15fe4:	add	sp, fp, #0
   15fe8:	pop	{fp}		; (ldr fp, [sp], #4)
   15fec:	bx	lr
   15ff0:	push	{fp}		; (str fp, [sp, #-4]!)
   15ff4:	add	fp, sp, #0
   15ff8:	sub	sp, sp, #12
   15ffc:	str	r0, [fp, #-8]
   16000:	ldr	r3, [fp, #-8]
   16004:	cmp	r3, #64	; 0x40
   16008:	bgt	16024 <putchar_unlocked@plt+0x52cc>
   1600c:	cmp	r3, #58	; 0x3a
   16010:	bge	16040 <putchar_unlocked@plt+0x52e8>
   16014:	sub	r3, r3, #33	; 0x21
   16018:	cmp	r3, #14
   1601c:	bhi	16048 <putchar_unlocked@plt+0x52f0>
   16020:	b	16040 <putchar_unlocked@plt+0x52e8>
   16024:	cmp	r3, #91	; 0x5b
   16028:	blt	16048 <putchar_unlocked@plt+0x52f0>
   1602c:	cmp	r3, #96	; 0x60
   16030:	ble	16040 <putchar_unlocked@plt+0x52e8>
   16034:	sub	r3, r3, #123	; 0x7b
   16038:	cmp	r3, #3
   1603c:	bhi	16048 <putchar_unlocked@plt+0x52f0>
   16040:	mov	r3, #1
   16044:	b	1604c <putchar_unlocked@plt+0x52f4>
   16048:	mov	r3, #0
   1604c:	mov	r0, r3
   16050:	add	sp, fp, #0
   16054:	pop	{fp}		; (ldr fp, [sp], #4)
   16058:	bx	lr
   1605c:	push	{fp}		; (str fp, [sp, #-4]!)
   16060:	add	fp, sp, #0
   16064:	sub	sp, sp, #12
   16068:	str	r0, [fp, #-8]
   1606c:	ldr	r3, [fp, #-8]
   16070:	cmp	r3, #9
   16074:	blt	16090 <putchar_unlocked@plt+0x5338>
   16078:	cmp	r3, #13
   1607c:	ble	16088 <putchar_unlocked@plt+0x5330>
   16080:	cmp	r3, #32
   16084:	bne	16090 <putchar_unlocked@plt+0x5338>
   16088:	mov	r3, #1
   1608c:	b	16094 <putchar_unlocked@plt+0x533c>
   16090:	mov	r3, #0
   16094:	mov	r0, r3
   16098:	add	sp, fp, #0
   1609c:	pop	{fp}		; (ldr fp, [sp], #4)
   160a0:	bx	lr
   160a4:	push	{fp}		; (str fp, [sp, #-4]!)
   160a8:	add	fp, sp, #0
   160ac:	sub	sp, sp, #12
   160b0:	str	r0, [fp, #-8]
   160b4:	ldr	r3, [fp, #-8]
   160b8:	sub	r3, r3, #65	; 0x41
   160bc:	cmp	r3, #25
   160c0:	bhi	160cc <putchar_unlocked@plt+0x5374>
   160c4:	mov	r3, #1
   160c8:	b	160d0 <putchar_unlocked@plt+0x5378>
   160cc:	mov	r3, #0
   160d0:	mov	r0, r3
   160d4:	add	sp, fp, #0
   160d8:	pop	{fp}		; (ldr fp, [sp], #4)
   160dc:	bx	lr
   160e0:	push	{fp}		; (str fp, [sp, #-4]!)
   160e4:	add	fp, sp, #0
   160e8:	sub	sp, sp, #12
   160ec:	str	r0, [fp, #-8]
   160f0:	ldr	r3, [fp, #-8]
   160f4:	sub	r3, r3, #48	; 0x30
   160f8:	cmp	r3, #54	; 0x36
   160fc:	addls	pc, pc, r3, lsl #2
   16100:	b	161e8 <putchar_unlocked@plt+0x5490>
   16104:	b	161e0 <putchar_unlocked@plt+0x5488>
   16108:	b	161e0 <putchar_unlocked@plt+0x5488>
   1610c:	b	161e0 <putchar_unlocked@plt+0x5488>
   16110:	b	161e0 <putchar_unlocked@plt+0x5488>
   16114:	b	161e0 <putchar_unlocked@plt+0x5488>
   16118:	b	161e0 <putchar_unlocked@plt+0x5488>
   1611c:	b	161e0 <putchar_unlocked@plt+0x5488>
   16120:	b	161e0 <putchar_unlocked@plt+0x5488>
   16124:	b	161e0 <putchar_unlocked@plt+0x5488>
   16128:	b	161e0 <putchar_unlocked@plt+0x5488>
   1612c:	b	161e8 <putchar_unlocked@plt+0x5490>
   16130:	b	161e8 <putchar_unlocked@plt+0x5490>
   16134:	b	161e8 <putchar_unlocked@plt+0x5490>
   16138:	b	161e8 <putchar_unlocked@plt+0x5490>
   1613c:	b	161e8 <putchar_unlocked@plt+0x5490>
   16140:	b	161e8 <putchar_unlocked@plt+0x5490>
   16144:	b	161e8 <putchar_unlocked@plt+0x5490>
   16148:	b	161e0 <putchar_unlocked@plt+0x5488>
   1614c:	b	161e0 <putchar_unlocked@plt+0x5488>
   16150:	b	161e0 <putchar_unlocked@plt+0x5488>
   16154:	b	161e0 <putchar_unlocked@plt+0x5488>
   16158:	b	161e0 <putchar_unlocked@plt+0x5488>
   1615c:	b	161e0 <putchar_unlocked@plt+0x5488>
   16160:	b	161e8 <putchar_unlocked@plt+0x5490>
   16164:	b	161e8 <putchar_unlocked@plt+0x5490>
   16168:	b	161e8 <putchar_unlocked@plt+0x5490>
   1616c:	b	161e8 <putchar_unlocked@plt+0x5490>
   16170:	b	161e8 <putchar_unlocked@plt+0x5490>
   16174:	b	161e8 <putchar_unlocked@plt+0x5490>
   16178:	b	161e8 <putchar_unlocked@plt+0x5490>
   1617c:	b	161e8 <putchar_unlocked@plt+0x5490>
   16180:	b	161e8 <putchar_unlocked@plt+0x5490>
   16184:	b	161e8 <putchar_unlocked@plt+0x5490>
   16188:	b	161e8 <putchar_unlocked@plt+0x5490>
   1618c:	b	161e8 <putchar_unlocked@plt+0x5490>
   16190:	b	161e8 <putchar_unlocked@plt+0x5490>
   16194:	b	161e8 <putchar_unlocked@plt+0x5490>
   16198:	b	161e8 <putchar_unlocked@plt+0x5490>
   1619c:	b	161e8 <putchar_unlocked@plt+0x5490>
   161a0:	b	161e8 <putchar_unlocked@plt+0x5490>
   161a4:	b	161e8 <putchar_unlocked@plt+0x5490>
   161a8:	b	161e8 <putchar_unlocked@plt+0x5490>
   161ac:	b	161e8 <putchar_unlocked@plt+0x5490>
   161b0:	b	161e8 <putchar_unlocked@plt+0x5490>
   161b4:	b	161e8 <putchar_unlocked@plt+0x5490>
   161b8:	b	161e8 <putchar_unlocked@plt+0x5490>
   161bc:	b	161e8 <putchar_unlocked@plt+0x5490>
   161c0:	b	161e8 <putchar_unlocked@plt+0x5490>
   161c4:	b	161e8 <putchar_unlocked@plt+0x5490>
   161c8:	b	161e0 <putchar_unlocked@plt+0x5488>
   161cc:	b	161e0 <putchar_unlocked@plt+0x5488>
   161d0:	b	161e0 <putchar_unlocked@plt+0x5488>
   161d4:	b	161e0 <putchar_unlocked@plt+0x5488>
   161d8:	b	161e0 <putchar_unlocked@plt+0x5488>
   161dc:	b	161e0 <putchar_unlocked@plt+0x5488>
   161e0:	mov	r3, #1
   161e4:	b	161ec <putchar_unlocked@plt+0x5494>
   161e8:	mov	r3, #0
   161ec:	mov	r0, r3
   161f0:	add	sp, fp, #0
   161f4:	pop	{fp}		; (ldr fp, [sp], #4)
   161f8:	bx	lr
   161fc:	push	{fp}		; (str fp, [sp, #-4]!)
   16200:	add	fp, sp, #0
   16204:	sub	sp, sp, #12
   16208:	str	r0, [fp, #-8]
   1620c:	ldr	r3, [fp, #-8]
   16210:	sub	r3, r3, #65	; 0x41
   16214:	cmp	r3, #25
   16218:	bhi	16228 <putchar_unlocked@plt+0x54d0>
   1621c:	ldr	r3, [fp, #-8]
   16220:	add	r3, r3, #32
   16224:	b	1622c <putchar_unlocked@plt+0x54d4>
   16228:	ldr	r3, [fp, #-8]
   1622c:	mov	r0, r3
   16230:	add	sp, fp, #0
   16234:	pop	{fp}		; (ldr fp, [sp], #4)
   16238:	bx	lr
   1623c:	push	{fp}		; (str fp, [sp, #-4]!)
   16240:	add	fp, sp, #0
   16244:	sub	sp, sp, #12
   16248:	str	r0, [fp, #-8]
   1624c:	ldr	r3, [fp, #-8]
   16250:	sub	r3, r3, #97	; 0x61
   16254:	cmp	r3, #25
   16258:	bhi	16268 <putchar_unlocked@plt+0x5510>
   1625c:	ldr	r3, [fp, #-8]
   16260:	sub	r3, r3, #32
   16264:	b	1626c <putchar_unlocked@plt+0x5514>
   16268:	ldr	r3, [fp, #-8]
   1626c:	mov	r0, r3
   16270:	add	sp, fp, #0
   16274:	pop	{fp}		; (ldr fp, [sp], #4)
   16278:	bx	lr
   1627c:	push	{fp, lr}
   16280:	add	fp, sp, #4
   16284:	sub	sp, sp, #272	; 0x110
   16288:	str	r0, [fp, #-272]	; 0xfffffef0
   1628c:	sub	r3, fp, #264	; 0x108
   16290:	ldr	r2, [pc, #116]	; 1630c <putchar_unlocked@plt+0x55b4>
   16294:	mov	r1, r3
   16298:	ldr	r0, [fp, #-272]	; 0xfffffef0
   1629c:	bl	16420 <putchar_unlocked@plt+0x56c8>
   162a0:	mov	r3, r0
   162a4:	cmp	r3, #0
   162a8:	beq	162b4 <putchar_unlocked@plt+0x555c>
   162ac:	mov	r3, #0
   162b0:	b	16300 <putchar_unlocked@plt+0x55a8>
   162b4:	sub	r3, fp, #264	; 0x108
   162b8:	ldr	r1, [pc, #80]	; 16310 <putchar_unlocked@plt+0x55b8>
   162bc:	mov	r0, r3
   162c0:	bl	10b60 <strcmp@plt>
   162c4:	mov	r3, r0
   162c8:	cmp	r3, #0
   162cc:	beq	162f4 <putchar_unlocked@plt+0x559c>
   162d0:	sub	r3, fp, #264	; 0x108
   162d4:	ldr	r1, [pc, #56]	; 16314 <putchar_unlocked@plt+0x55bc>
   162d8:	mov	r0, r3
   162dc:	bl	10b60 <strcmp@plt>
   162e0:	mov	r3, r0
   162e4:	cmp	r3, #0
   162e8:	beq	162f4 <putchar_unlocked@plt+0x559c>
   162ec:	mov	r3, #1
   162f0:	b	162f8 <putchar_unlocked@plt+0x55a0>
   162f4:	mov	r3, #0
   162f8:	and	r3, r3, #1
   162fc:	uxtb	r3, r3
   16300:	mov	r0, r3
   16304:	sub	sp, fp, #4
   16308:	pop	{fp, pc}
   1630c:	andeq	r0, r0, r1, lsl #2
   16310:	andeq	r7, r1, r8, asr #11
   16314:	andeq	r7, r1, ip, asr #11
   16318:	push	{fp, lr}
   1631c:	add	fp, sp, #4
   16320:	sub	sp, sp, #16
   16324:	str	r0, [fp, #-16]
   16328:	mov	r1, #0
   1632c:	ldr	r0, [fp, #-16]
   16330:	bl	10d10 <setlocale@plt>
   16334:	str	r0, [fp, #-8]
   16338:	ldr	r3, [fp, #-8]
   1633c:	mov	r0, r3
   16340:	sub	sp, fp, #4
   16344:	pop	{fp, pc}
   16348:	push	{fp, lr}
   1634c:	add	fp, sp, #4
   16350:	sub	sp, sp, #24
   16354:	str	r0, [fp, #-16]
   16358:	str	r1, [fp, #-20]	; 0xffffffec
   1635c:	str	r2, [fp, #-24]	; 0xffffffe8
   16360:	ldr	r0, [fp, #-16]
   16364:	bl	16318 <putchar_unlocked@plt+0x55c0>
   16368:	str	r0, [fp, #-8]
   1636c:	ldr	r3, [fp, #-8]
   16370:	cmp	r3, #0
   16374:	bne	16398 <putchar_unlocked@plt+0x5640>
   16378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1637c:	cmp	r3, #0
   16380:	beq	16390 <putchar_unlocked@plt+0x5638>
   16384:	ldr	r3, [fp, #-20]	; 0xffffffec
   16388:	mov	r2, #0
   1638c:	strb	r2, [r3]
   16390:	mov	r3, #22
   16394:	b	16414 <putchar_unlocked@plt+0x56bc>
   16398:	ldr	r0, [fp, #-8]
   1639c:	bl	10cb0 <strlen@plt>
   163a0:	str	r0, [fp, #-12]
   163a4:	ldr	r2, [fp, #-12]
   163a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163ac:	cmp	r2, r3
   163b0:	bcs	163d4 <putchar_unlocked@plt+0x567c>
   163b4:	ldr	r3, [fp, #-12]
   163b8:	add	r3, r3, #1
   163bc:	mov	r2, r3
   163c0:	ldr	r1, [fp, #-8]
   163c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   163c8:	bl	10b9c <memcpy@plt>
   163cc:	mov	r3, #0
   163d0:	b	16414 <putchar_unlocked@plt+0x56bc>
   163d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163d8:	cmp	r3, #0
   163dc:	beq	16410 <putchar_unlocked@plt+0x56b8>
   163e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163e4:	sub	r3, r3, #1
   163e8:	mov	r2, r3
   163ec:	ldr	r1, [fp, #-8]
   163f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   163f4:	bl	10b9c <memcpy@plt>
   163f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163fc:	sub	r3, r3, #1
   16400:	ldr	r2, [fp, #-20]	; 0xffffffec
   16404:	add	r3, r2, r3
   16408:	mov	r2, #0
   1640c:	strb	r2, [r3]
   16410:	mov	r3, #34	; 0x22
   16414:	mov	r0, r3
   16418:	sub	sp, fp, #4
   1641c:	pop	{fp, pc}
   16420:	push	{fp, lr}
   16424:	add	fp, sp, #4
   16428:	sub	sp, sp, #16
   1642c:	str	r0, [fp, #-8]
   16430:	str	r1, [fp, #-12]
   16434:	str	r2, [fp, #-16]
   16438:	ldr	r2, [fp, #-16]
   1643c:	ldr	r1, [fp, #-12]
   16440:	ldr	r0, [fp, #-8]
   16444:	bl	16348 <putchar_unlocked@plt+0x55f0>
   16448:	mov	r3, r0
   1644c:	mov	r0, r3
   16450:	sub	sp, fp, #4
   16454:	pop	{fp, pc}
   16458:	push	{fp, lr}
   1645c:	add	fp, sp, #4
   16460:	sub	sp, sp, #8
   16464:	str	r0, [fp, #-8]
   16468:	ldr	r0, [fp, #-8]
   1646c:	bl	16318 <putchar_unlocked@plt+0x55c0>
   16470:	mov	r3, r0
   16474:	mov	r0, r3
   16478:	sub	sp, fp, #4
   1647c:	pop	{fp, pc}
   16480:	subs	r2, r1, #1
   16484:	bxeq	lr
   16488:	bcc	16660 <putchar_unlocked@plt+0x5908>
   1648c:	cmp	r0, r1
   16490:	bls	16644 <putchar_unlocked@plt+0x58ec>
   16494:	tst	r1, r2
   16498:	beq	16650 <putchar_unlocked@plt+0x58f8>
   1649c:	clz	r3, r0
   164a0:	clz	r2, r1
   164a4:	sub	r3, r2, r3
   164a8:	rsbs	r3, r3, #31
   164ac:	addne	r3, r3, r3, lsl #1
   164b0:	mov	r2, #0
   164b4:	addne	pc, pc, r3, lsl #2
   164b8:	nop			; (mov r0, r0)
   164bc:	cmp	r0, r1, lsl #31
   164c0:	adc	r2, r2, r2
   164c4:	subcs	r0, r0, r1, lsl #31
   164c8:	cmp	r0, r1, lsl #30
   164cc:	adc	r2, r2, r2
   164d0:	subcs	r0, r0, r1, lsl #30
   164d4:	cmp	r0, r1, lsl #29
   164d8:	adc	r2, r2, r2
   164dc:	subcs	r0, r0, r1, lsl #29
   164e0:	cmp	r0, r1, lsl #28
   164e4:	adc	r2, r2, r2
   164e8:	subcs	r0, r0, r1, lsl #28
   164ec:	cmp	r0, r1, lsl #27
   164f0:	adc	r2, r2, r2
   164f4:	subcs	r0, r0, r1, lsl #27
   164f8:	cmp	r0, r1, lsl #26
   164fc:	adc	r2, r2, r2
   16500:	subcs	r0, r0, r1, lsl #26
   16504:	cmp	r0, r1, lsl #25
   16508:	adc	r2, r2, r2
   1650c:	subcs	r0, r0, r1, lsl #25
   16510:	cmp	r0, r1, lsl #24
   16514:	adc	r2, r2, r2
   16518:	subcs	r0, r0, r1, lsl #24
   1651c:	cmp	r0, r1, lsl #23
   16520:	adc	r2, r2, r2
   16524:	subcs	r0, r0, r1, lsl #23
   16528:	cmp	r0, r1, lsl #22
   1652c:	adc	r2, r2, r2
   16530:	subcs	r0, r0, r1, lsl #22
   16534:	cmp	r0, r1, lsl #21
   16538:	adc	r2, r2, r2
   1653c:	subcs	r0, r0, r1, lsl #21
   16540:	cmp	r0, r1, lsl #20
   16544:	adc	r2, r2, r2
   16548:	subcs	r0, r0, r1, lsl #20
   1654c:	cmp	r0, r1, lsl #19
   16550:	adc	r2, r2, r2
   16554:	subcs	r0, r0, r1, lsl #19
   16558:	cmp	r0, r1, lsl #18
   1655c:	adc	r2, r2, r2
   16560:	subcs	r0, r0, r1, lsl #18
   16564:	cmp	r0, r1, lsl #17
   16568:	adc	r2, r2, r2
   1656c:	subcs	r0, r0, r1, lsl #17
   16570:	cmp	r0, r1, lsl #16
   16574:	adc	r2, r2, r2
   16578:	subcs	r0, r0, r1, lsl #16
   1657c:	cmp	r0, r1, lsl #15
   16580:	adc	r2, r2, r2
   16584:	subcs	r0, r0, r1, lsl #15
   16588:	cmp	r0, r1, lsl #14
   1658c:	adc	r2, r2, r2
   16590:	subcs	r0, r0, r1, lsl #14
   16594:	cmp	r0, r1, lsl #13
   16598:	adc	r2, r2, r2
   1659c:	subcs	r0, r0, r1, lsl #13
   165a0:	cmp	r0, r1, lsl #12
   165a4:	adc	r2, r2, r2
   165a8:	subcs	r0, r0, r1, lsl #12
   165ac:	cmp	r0, r1, lsl #11
   165b0:	adc	r2, r2, r2
   165b4:	subcs	r0, r0, r1, lsl #11
   165b8:	cmp	r0, r1, lsl #10
   165bc:	adc	r2, r2, r2
   165c0:	subcs	r0, r0, r1, lsl #10
   165c4:	cmp	r0, r1, lsl #9
   165c8:	adc	r2, r2, r2
   165cc:	subcs	r0, r0, r1, lsl #9
   165d0:	cmp	r0, r1, lsl #8
   165d4:	adc	r2, r2, r2
   165d8:	subcs	r0, r0, r1, lsl #8
   165dc:	cmp	r0, r1, lsl #7
   165e0:	adc	r2, r2, r2
   165e4:	subcs	r0, r0, r1, lsl #7
   165e8:	cmp	r0, r1, lsl #6
   165ec:	adc	r2, r2, r2
   165f0:	subcs	r0, r0, r1, lsl #6
   165f4:	cmp	r0, r1, lsl #5
   165f8:	adc	r2, r2, r2
   165fc:	subcs	r0, r0, r1, lsl #5
   16600:	cmp	r0, r1, lsl #4
   16604:	adc	r2, r2, r2
   16608:	subcs	r0, r0, r1, lsl #4
   1660c:	cmp	r0, r1, lsl #3
   16610:	adc	r2, r2, r2
   16614:	subcs	r0, r0, r1, lsl #3
   16618:	cmp	r0, r1, lsl #2
   1661c:	adc	r2, r2, r2
   16620:	subcs	r0, r0, r1, lsl #2
   16624:	cmp	r0, r1, lsl #1
   16628:	adc	r2, r2, r2
   1662c:	subcs	r0, r0, r1, lsl #1
   16630:	cmp	r0, r1
   16634:	adc	r2, r2, r2
   16638:	subcs	r0, r0, r1
   1663c:	mov	r0, r2
   16640:	bx	lr
   16644:	moveq	r0, #1
   16648:	movne	r0, #0
   1664c:	bx	lr
   16650:	clz	r2, r1
   16654:	rsb	r2, r2, #31
   16658:	lsr	r0, r0, r2
   1665c:	bx	lr
   16660:	cmp	r0, #0
   16664:	mvnne	r0, #0
   16668:	b	168cc <putchar_unlocked@plt+0x5b74>
   1666c:	cmp	r1, #0
   16670:	beq	16660 <putchar_unlocked@plt+0x5908>
   16674:	push	{r0, r1, lr}
   16678:	bl	16480 <putchar_unlocked@plt+0x5728>
   1667c:	pop	{r1, r2, lr}
   16680:	mul	r3, r2, r0
   16684:	sub	r1, r1, r3
   16688:	bx	lr
   1668c:	cmp	r1, #0
   16690:	beq	1689c <putchar_unlocked@plt+0x5b44>
   16694:	eor	ip, r0, r1
   16698:	rsbmi	r1, r1, #0
   1669c:	subs	r2, r1, #1
   166a0:	beq	16868 <putchar_unlocked@plt+0x5b10>
   166a4:	movs	r3, r0
   166a8:	rsbmi	r3, r0, #0
   166ac:	cmp	r3, r1
   166b0:	bls	16874 <putchar_unlocked@plt+0x5b1c>
   166b4:	tst	r1, r2
   166b8:	beq	16884 <putchar_unlocked@plt+0x5b2c>
   166bc:	clz	r2, r3
   166c0:	clz	r0, r1
   166c4:	sub	r2, r0, r2
   166c8:	rsbs	r2, r2, #31
   166cc:	addne	r2, r2, r2, lsl #1
   166d0:	mov	r0, #0
   166d4:	addne	pc, pc, r2, lsl #2
   166d8:	nop			; (mov r0, r0)
   166dc:	cmp	r3, r1, lsl #31
   166e0:	adc	r0, r0, r0
   166e4:	subcs	r3, r3, r1, lsl #31
   166e8:	cmp	r3, r1, lsl #30
   166ec:	adc	r0, r0, r0
   166f0:	subcs	r3, r3, r1, lsl #30
   166f4:	cmp	r3, r1, lsl #29
   166f8:	adc	r0, r0, r0
   166fc:	subcs	r3, r3, r1, lsl #29
   16700:	cmp	r3, r1, lsl #28
   16704:	adc	r0, r0, r0
   16708:	subcs	r3, r3, r1, lsl #28
   1670c:	cmp	r3, r1, lsl #27
   16710:	adc	r0, r0, r0
   16714:	subcs	r3, r3, r1, lsl #27
   16718:	cmp	r3, r1, lsl #26
   1671c:	adc	r0, r0, r0
   16720:	subcs	r3, r3, r1, lsl #26
   16724:	cmp	r3, r1, lsl #25
   16728:	adc	r0, r0, r0
   1672c:	subcs	r3, r3, r1, lsl #25
   16730:	cmp	r3, r1, lsl #24
   16734:	adc	r0, r0, r0
   16738:	subcs	r3, r3, r1, lsl #24
   1673c:	cmp	r3, r1, lsl #23
   16740:	adc	r0, r0, r0
   16744:	subcs	r3, r3, r1, lsl #23
   16748:	cmp	r3, r1, lsl #22
   1674c:	adc	r0, r0, r0
   16750:	subcs	r3, r3, r1, lsl #22
   16754:	cmp	r3, r1, lsl #21
   16758:	adc	r0, r0, r0
   1675c:	subcs	r3, r3, r1, lsl #21
   16760:	cmp	r3, r1, lsl #20
   16764:	adc	r0, r0, r0
   16768:	subcs	r3, r3, r1, lsl #20
   1676c:	cmp	r3, r1, lsl #19
   16770:	adc	r0, r0, r0
   16774:	subcs	r3, r3, r1, lsl #19
   16778:	cmp	r3, r1, lsl #18
   1677c:	adc	r0, r0, r0
   16780:	subcs	r3, r3, r1, lsl #18
   16784:	cmp	r3, r1, lsl #17
   16788:	adc	r0, r0, r0
   1678c:	subcs	r3, r3, r1, lsl #17
   16790:	cmp	r3, r1, lsl #16
   16794:	adc	r0, r0, r0
   16798:	subcs	r3, r3, r1, lsl #16
   1679c:	cmp	r3, r1, lsl #15
   167a0:	adc	r0, r0, r0
   167a4:	subcs	r3, r3, r1, lsl #15
   167a8:	cmp	r3, r1, lsl #14
   167ac:	adc	r0, r0, r0
   167b0:	subcs	r3, r3, r1, lsl #14
   167b4:	cmp	r3, r1, lsl #13
   167b8:	adc	r0, r0, r0
   167bc:	subcs	r3, r3, r1, lsl #13
   167c0:	cmp	r3, r1, lsl #12
   167c4:	adc	r0, r0, r0
   167c8:	subcs	r3, r3, r1, lsl #12
   167cc:	cmp	r3, r1, lsl #11
   167d0:	adc	r0, r0, r0
   167d4:	subcs	r3, r3, r1, lsl #11
   167d8:	cmp	r3, r1, lsl #10
   167dc:	adc	r0, r0, r0
   167e0:	subcs	r3, r3, r1, lsl #10
   167e4:	cmp	r3, r1, lsl #9
   167e8:	adc	r0, r0, r0
   167ec:	subcs	r3, r3, r1, lsl #9
   167f0:	cmp	r3, r1, lsl #8
   167f4:	adc	r0, r0, r0
   167f8:	subcs	r3, r3, r1, lsl #8
   167fc:	cmp	r3, r1, lsl #7
   16800:	adc	r0, r0, r0
   16804:	subcs	r3, r3, r1, lsl #7
   16808:	cmp	r3, r1, lsl #6
   1680c:	adc	r0, r0, r0
   16810:	subcs	r3, r3, r1, lsl #6
   16814:	cmp	r3, r1, lsl #5
   16818:	adc	r0, r0, r0
   1681c:	subcs	r3, r3, r1, lsl #5
   16820:	cmp	r3, r1, lsl #4
   16824:	adc	r0, r0, r0
   16828:	subcs	r3, r3, r1, lsl #4
   1682c:	cmp	r3, r1, lsl #3
   16830:	adc	r0, r0, r0
   16834:	subcs	r3, r3, r1, lsl #3
   16838:	cmp	r3, r1, lsl #2
   1683c:	adc	r0, r0, r0
   16840:	subcs	r3, r3, r1, lsl #2
   16844:	cmp	r3, r1, lsl #1
   16848:	adc	r0, r0, r0
   1684c:	subcs	r3, r3, r1, lsl #1
   16850:	cmp	r3, r1
   16854:	adc	r0, r0, r0
   16858:	subcs	r3, r3, r1
   1685c:	cmp	ip, #0
   16860:	rsbmi	r0, r0, #0
   16864:	bx	lr
   16868:	teq	ip, r0
   1686c:	rsbmi	r0, r0, #0
   16870:	bx	lr
   16874:	movcc	r0, #0
   16878:	asreq	r0, ip, #31
   1687c:	orreq	r0, r0, #1
   16880:	bx	lr
   16884:	clz	r2, r1
   16888:	rsb	r2, r2, #31
   1688c:	cmp	ip, #0
   16890:	lsr	r0, r3, r2
   16894:	rsbmi	r0, r0, #0
   16898:	bx	lr
   1689c:	cmp	r0, #0
   168a0:	mvngt	r0, #-2147483648	; 0x80000000
   168a4:	movlt	r0, #-2147483648	; 0x80000000
   168a8:	b	168cc <putchar_unlocked@plt+0x5b74>
   168ac:	cmp	r1, #0
   168b0:	beq	1689c <putchar_unlocked@plt+0x5b44>
   168b4:	push	{r0, r1, lr}
   168b8:	bl	16694 <putchar_unlocked@plt+0x593c>
   168bc:	pop	{r1, r2, lr}
   168c0:	mul	r3, r2, r0
   168c4:	sub	r1, r1, r3
   168c8:	bx	lr
   168cc:	push	{r1, lr}
   168d0:	mov	r0, #8
   168d4:	bl	10b54 <raise@plt>
   168d8:	pop	{r1, pc}
   168dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   168e0:	mov	r7, r0
   168e4:	ldr	r6, [pc, #72]	; 16934 <putchar_unlocked@plt+0x5bdc>
   168e8:	ldr	r5, [pc, #72]	; 16938 <putchar_unlocked@plt+0x5be0>
   168ec:	add	r6, pc, r6
   168f0:	add	r5, pc, r5
   168f4:	sub	r6, r6, r5
   168f8:	mov	r8, r1
   168fc:	mov	r9, r2
   16900:	bl	10b1c <calloc@plt-0x20>
   16904:	asrs	r6, r6, #2
   16908:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1690c:	mov	r4, #0
   16910:	add	r4, r4, #1
   16914:	ldr	r3, [r5], #4
   16918:	mov	r2, r9
   1691c:	mov	r1, r8
   16920:	mov	r0, r7
   16924:	blx	r3
   16928:	cmp	r6, r4
   1692c:	bne	16910 <putchar_unlocked@plt+0x5bb8>
   16930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16934:	andeq	r1, r1, ip, lsl r6
   16938:	andeq	r1, r1, r4, lsl r6
   1693c:	bx	lr
   16940:	ldr	r3, [pc, #12]	; 16954 <putchar_unlocked@plt+0x5bfc>
   16944:	mov	r1, #0
   16948:	add	r3, pc, r3
   1694c:	ldr	r2, [r3]
   16950:	b	10cd4 <__cxa_atexit@plt>
   16954:	andeq	r1, r1, ip, ror r7

Disassembly of section .fini:

00016958 <.fini>:
   16958:	push	{r3, lr}
   1695c:	pop	{r3, pc}
