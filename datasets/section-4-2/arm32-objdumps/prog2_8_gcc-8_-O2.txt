
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010a78 <.init>:
   10a78:	push	{r3, lr}
   10a7c:	bl	10c24 <_start@@Base+0x3c>
   10a80:	pop	{r3, pc}

Disassembly of section .plt:

00010a84 <calloc@plt-0x14>:
   10a84:	push	{lr}		; (str lr, [sp, #-4]!)
   10a88:	ldr	lr, [pc, #4]	; 10a94 <calloc@plt-0x4>
   10a8c:	add	lr, pc, lr
   10a90:	ldr	pc, [lr, #8]!
   10a94:	andeq	r2, r1, ip, ror #10

00010a98 <calloc@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #73728	; 0x12000
   10aa0:	ldr	pc, [ip, #1388]!	; 0x56c

00010aa4 <printf@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #73728	; 0x12000
   10aac:	ldr	pc, [ip, #1380]!	; 0x564

00010ab0 <free@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #73728	; 0x12000
   10ab8:	ldr	pc, [ip, #1372]!	; 0x55c

00010abc <realloc@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #73728	; 0x12000
   10ac4:	ldr	pc, [ip, #1364]!	; 0x554

00010ac8 <puts@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad4 <malloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1348]!	; 0x544

00010ae0 <__libc_start_main@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1340]!	; 0x53c

00010aec <__gmon_start__@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1332]!	; 0x534

00010af8 <setvbuf@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1324]!	; 0x52c

00010b04 <putchar@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1316]!	; 0x524

00010b10 <abort@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1308]!	; 0x51c

Disassembly of section .text:

00010b1c <main@@Base>:
   10b1c:	str	r4, [sp, #-8]!
   10b20:	mov	r3, #0
   10b24:	mov	r2, #2
   10b28:	ldr	r4, [pc, #164]	; 10bd4 <main@@Base+0xb8>
   10b2c:	mov	r1, r3
   10b30:	str	lr, [sp, #4]
   10b34:	ldr	r0, [pc, #156]	; 10bd8 <main@@Base+0xbc>
   10b38:	add	r4, pc, r4
   10b3c:	ldr	r0, [r4, r0]
   10b40:	ldr	r0, [r0]
   10b44:	bl	10af8 <setvbuf@plt>
   10b48:	ldr	r0, [pc, #140]	; 10bdc <main@@Base+0xc0>
   10b4c:	mov	r3, #0
   10b50:	mov	r2, #2
   10b54:	mov	r1, r3
   10b58:	ldr	r0, [r4, r0]
   10b5c:	ldr	r0, [r0]
   10b60:	bl	10af8 <setvbuf@plt>
   10b64:	bl	10e28 <teste_grafo_novo@@Base>
   10b68:	mov	r4, r0
   10b6c:	bl	10f38 <teste_grafo_aresta@@Base>
   10b70:	add	r4, r4, r0
   10b74:	bl	110f8 <teste_grafo_adiciona@@Base>
   10b78:	add	r4, r4, r0
   10b7c:	bl	11334 <teste_grafo_remove@@Base>
   10b80:	add	r4, r4, r0
   10b84:	bl	11508 <teste_v_sucessores@@Base>
   10b88:	add	r4, r4, r0
   10b8c:	bl	11708 <teste_v_antecessores@@Base>
   10b90:	add	r4, r4, r0
   10b94:	bl	11904 <teste_v_grau@@Base>
   10b98:	add	r4, r4, r0
   10b9c:	bl	11a84 <teste_v_celebridade@@Base>
   10ba0:	adds	r1, r4, r0
   10ba4:	bne	10bc4 <main@@Base+0xa8>
   10ba8:	ldr	r0, [pc, #48]	; 10be0 <main@@Base+0xc4>
   10bac:	add	r0, pc, r0
   10bb0:	bl	10ac8 <puts@plt>
   10bb4:	ldr	r4, [sp]
   10bb8:	add	sp, sp, #4
   10bbc:	mov	r0, #0
   10bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   10bc4:	ldr	r0, [pc, #24]	; 10be4 <main@@Base+0xc8>
   10bc8:	add	r0, pc, r0
   10bcc:	bl	10aa4 <printf@plt>
   10bd0:	b	10bb4 <main@@Base+0x98>
   10bd4:	andeq	r2, r1, r0, asr #9
   10bd8:	andeq	r0, r0, r0, asr #32
   10bdc:	andeq	r0, r0, r8, lsr r0
   10be0:	andeq	r2, r0, r4
   10be4:	andeq	r2, r0, r0

00010be8 <_start@@Base>:
   10be8:	mov	fp, #0
   10bec:	mov	lr, #0
   10bf0:	pop	{r1}		; (ldr r1, [sp], #4)
   10bf4:	mov	r2, sp
   10bf8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bfc:	push	{r0}		; (str r0, [sp, #-4]!)
   10c00:	ldr	ip, [pc, #16]	; 10c18 <_start@@Base+0x30>
   10c04:	push	{ip}		; (str ip, [sp, #-4]!)
   10c08:	ldr	r0, [pc, #12]	; 10c1c <_start@@Base+0x34>
   10c0c:	ldr	r3, [pc, #12]	; 10c20 <_start@@Base+0x38>
   10c10:	bl	10ae0 <__libc_start_main@plt>
   10c14:	bl	10b10 <abort@plt>
   10c18:	ldrdeq	r2, [r1], -r4
   10c1c:	andeq	r0, r1, ip, lsl fp
   10c20:	andeq	r2, r1, r4, ror r4
   10c24:	ldr	r3, [pc, #20]	; 10c40 <_start@@Base+0x58>
   10c28:	ldr	r2, [pc, #20]	; 10c44 <_start@@Base+0x5c>
   10c2c:	add	r3, pc, r3
   10c30:	ldr	r2, [r3, r2]
   10c34:	cmp	r2, #0
   10c38:	bxeq	lr
   10c3c:	b	10aec <__gmon_start__@plt>
   10c40:	andeq	r2, r1, ip, asr #7
   10c44:	andeq	r0, r0, ip, lsr r0
   10c48:	ldr	r0, [pc, #24]	; 10c68 <_start@@Base+0x80>
   10c4c:	ldr	r3, [pc, #24]	; 10c6c <_start@@Base+0x84>
   10c50:	cmp	r3, r0
   10c54:	bxeq	lr
   10c58:	ldr	r3, [pc, #16]	; 10c70 <_start@@Base+0x88>
   10c5c:	cmp	r3, #0
   10c60:	bxeq	lr
   10c64:	bx	r3
   10c68:	andeq	r3, r2, ip, asr #32
   10c6c:	andeq	r3, r2, ip, asr #32
   10c70:	andeq	r0, r0, r0
   10c74:	ldr	r0, [pc, #36]	; 10ca0 <_start@@Base+0xb8>
   10c78:	ldr	r1, [pc, #36]	; 10ca4 <_start@@Base+0xbc>
   10c7c:	sub	r1, r1, r0
   10c80:	asr	r1, r1, #2
   10c84:	add	r1, r1, r1, lsr #31
   10c88:	asrs	r1, r1, #1
   10c8c:	bxeq	lr
   10c90:	ldr	r3, [pc, #16]	; 10ca8 <_start@@Base+0xc0>
   10c94:	cmp	r3, #0
   10c98:	bxeq	lr
   10c9c:	bx	r3
   10ca0:	andeq	r3, r2, ip, asr #32
   10ca4:	andeq	r3, r2, ip, asr #32
   10ca8:	andeq	r0, r0, r0
   10cac:	push	{r4, lr}
   10cb0:	ldr	r4, [pc, #24]	; 10cd0 <_start@@Base+0xe8>
   10cb4:	ldrb	r3, [r4]
   10cb8:	cmp	r3, #0
   10cbc:	popne	{r4, pc}
   10cc0:	bl	10c48 <_start@@Base+0x60>
   10cc4:	mov	r3, #1
   10cc8:	strb	r3, [r4]
   10ccc:	pop	{r4, pc}
   10cd0:	andeq	r3, r2, ip, asr #32
   10cd4:	b	10c74 <_start@@Base+0x8c>

00010cd8 <_g@@Base>:
   10cd8:	push	{r1, r2, r3}
   10cdc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10ce0:	strd	r6, [sp, #8]
   10ce4:	mov	r7, r0
   10ce8:	mov	r0, #8
   10cec:	strd	r8, [sp, #16]
   10cf0:	str	sl, [sp, #24]
   10cf4:	str	lr, [sp, #28]
   10cf8:	sub	sp, sp, #12
   10cfc:	ldr	r5, [sp, #44]	; 0x2c
   10d00:	bl	10ad4 <malloc@plt>
   10d04:	add	r3, sp, #48	; 0x30
   10d08:	mov	r6, r0
   10d0c:	mov	r1, #8
   10d10:	mov	r0, r7
   10d14:	str	r3, [sp, #4]
   10d18:	bl	10a98 <calloc@plt>
   10d1c:	cmp	r5, #0
   10d20:	str	r0, [r6, #4]
   10d24:	ble	10d84 <_g@@Base+0xac>
   10d28:	sub	r5, r5, #1
   10d2c:	mov	r8, r0
   10d30:	bic	r5, r5, #1
   10d34:	mov	r9, #0
   10d38:	add	r5, r5, #2
   10d3c:	ldr	r3, [sp, #4]
   10d40:	mov	r1, #8
   10d44:	mov	r0, #1
   10d48:	add	r9, r9, #2
   10d4c:	ldr	sl, [r3, #4]
   10d50:	ldr	r4, [r3], #8
   10d54:	str	r3, [sp, #4]
   10d58:	bl	10a98 <calloc@plt>
   10d5c:	add	r2, r8, r4, lsl #3
   10d60:	ldr	r3, [r8, r4, lsl #3]
   10d64:	cmp	r9, r5
   10d68:	str	sl, [r0]
   10d6c:	ldr	r1, [r2, #4]
   10d70:	str	r0, [r2, #4]
   10d74:	add	r3, r3, #1
   10d78:	str	r3, [r8, r4, lsl #3]
   10d7c:	str	r1, [r0, #4]
   10d80:	bne	10d3c <_g@@Base+0x64>
   10d84:	mov	r0, r6
   10d88:	str	r7, [r6]
   10d8c:	add	sp, sp, #12
   10d90:	ldrd	r4, [sp]
   10d94:	ldrd	r6, [sp, #8]
   10d98:	ldrd	r8, [sp, #16]
   10d9c:	ldr	sl, [sp, #24]
   10da0:	ldr	lr, [sp, #28]
   10da4:	add	sp, sp, #32
   10da8:	add	sp, sp, #12
   10dac:	bx	lr

00010db0 <_f@@Base>:
   10db0:	strd	r4, [sp, #-16]!
   10db4:	subs	r5, r0, #0
   10db8:	str	r6, [sp, #8]
   10dbc:	str	lr, [sp, #12]
   10dc0:	beq	10e14 <_f@@Base+0x64>
   10dc4:	ldr	r3, [r5]
   10dc8:	cmp	r3, #0
   10dcc:	ble	10e14 <_f@@Base+0x64>
   10dd0:	mov	r6, r1
   10dd4:	mov	r4, #0
   10dd8:	b	10de8 <_f@@Base+0x38>
   10ddc:	ldr	r3, [r5]
   10de0:	cmp	r4, r3
   10de4:	bge	10e14 <_f@@Base+0x64>
   10de8:	mov	r1, r4
   10dec:	mov	r0, r5
   10df0:	bl	12228 <vetor_elemento@@Base>
   10df4:	cmp	r6, r0
   10df8:	add	r4, r4, #1
   10dfc:	bne	10ddc <_f@@Base+0x2c>
   10e00:	ldrd	r4, [sp]
   10e04:	mov	r0, #1
   10e08:	ldr	r6, [sp, #8]
   10e0c:	add	sp, sp, #12
   10e10:	pop	{pc}		; (ldr pc, [sp], #4)
   10e14:	ldrd	r4, [sp]
   10e18:	mov	r0, #0
   10e1c:	ldr	r6, [sp, #8]
   10e20:	add	sp, sp, #12
   10e24:	pop	{pc}		; (ldr pc, [sp], #4)

00010e28 <teste_grafo_novo@@Base>:
   10e28:	ldr	r0, [pc, #240]	; 10f20 <teste_grafo_novo@@Base+0xf8>
   10e2c:	strd	r4, [sp, #-16]!
   10e30:	str	r6, [sp, #8]
   10e34:	str	lr, [sp, #12]
   10e38:	add	r0, pc, r0
   10e3c:	bl	10aa4 <printf@plt>
   10e40:	mov	r0, #10
   10e44:	bl	11c30 <grafo_novo@@Base>
   10e48:	subs	r5, r0, #0
   10e4c:	beq	10ee8 <teste_grafo_novo@@Base+0xc0>
   10e50:	ldr	r3, [r5]
   10e54:	cmp	r3, #10
   10e58:	moveq	r4, #0
   10e5c:	bne	10eb0 <teste_grafo_novo@@Base+0x88>
   10e60:	mov	r0, r5
   10e64:	bl	11c9c <grafo_apaga@@Base>
   10e68:	mov	r0, #1
   10e6c:	bl	11c30 <grafo_novo@@Base>
   10e70:	subs	r5, r0, #0
   10e74:	beq	10f04 <teste_grafo_novo@@Base+0xdc>
   10e78:	ldr	r3, [r5]
   10e7c:	cmp	r3, #1
   10e80:	bne	10ec4 <teste_grafo_novo@@Base+0x9c>
   10e84:	bl	11c9c <grafo_apaga@@Base>
   10e88:	cmp	r4, #0
   10e8c:	bne	10edc <teste_grafo_novo@@Base+0xb4>
   10e90:	ldr	r0, [pc, #140]	; 10f24 <teste_grafo_novo@@Base+0xfc>
   10e94:	add	r0, pc, r0
   10e98:	bl	10ac8 <puts@plt>
   10e9c:	mov	r0, r4
   10ea0:	ldrd	r4, [sp]
   10ea4:	ldr	r6, [sp, #8]
   10ea8:	add	sp, sp, #12
   10eac:	pop	{pc}		; (ldr pc, [sp], #4)
   10eb0:	ldr	r0, [pc, #112]	; 10f28 <teste_grafo_novo@@Base+0x100>
   10eb4:	mov	r4, #1
   10eb8:	add	r0, pc, r0
   10ebc:	bl	10aa4 <printf@plt>
   10ec0:	b	10e60 <teste_grafo_novo@@Base+0x38>
   10ec4:	ldr	r0, [pc, #96]	; 10f2c <teste_grafo_novo@@Base+0x104>
   10ec8:	add	r4, r4, #1
   10ecc:	add	r0, pc, r0
   10ed0:	bl	10aa4 <printf@plt>
   10ed4:	mov	r0, r5
   10ed8:	bl	11c9c <grafo_apaga@@Base>
   10edc:	mov	r0, #10
   10ee0:	bl	10b04 <putchar@plt>
   10ee4:	b	10e9c <teste_grafo_novo@@Base+0x74>
   10ee8:	ldr	r0, [pc, #64]	; 10f30 <teste_grafo_novo@@Base+0x108>
   10eec:	mov	r4, #1
   10ef0:	add	r0, pc, r0
   10ef4:	bl	10aa4 <printf@plt>
   10ef8:	mov	r0, #10
   10efc:	bl	10b04 <putchar@plt>
   10f00:	b	10e9c <teste_grafo_novo@@Base+0x74>
   10f04:	ldr	r0, [pc, #40]	; 10f34 <teste_grafo_novo@@Base+0x10c>
   10f08:	add	r4, r4, #1
   10f0c:	add	r0, pc, r0
   10f10:	bl	10aa4 <printf@plt>
   10f14:	mov	r0, #10
   10f18:	bl	10b04 <putchar@plt>
   10f1c:	b	10e9c <teste_grafo_novo@@Base+0x74>
   10f20:	andeq	r1, r0, r4, lsr #13
   10f24:			; <UNDEFINED> instruction: 0x000016b8
   10f28:	andeq	r1, r0, ip, asr #12
   10f2c:	andeq	r1, r0, ip, asr r6
   10f30:	strdeq	r1, [r0], -ip
   10f34:	andeq	r1, r0, r0, ror #11

00010f38 <teste_grafo_aresta@@Base>:
   10f38:	mov	r0, #7
   10f3c:	mov	r2, #2
   10f40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10f44:	mov	r5, #4
   10f48:	mov	r4, #0
   10f4c:	strd	r6, [sp, #8]
   10f50:	str	r8, [sp, #16]
   10f54:	mov	r8, #5
   10f58:	mov	ip, #6
   10f5c:	str	lr, [sp, #20]
   10f60:	sub	sp, sp, #80	; 0x50
   10f64:	mov	lr, #3
   10f68:	mov	r7, #1
   10f6c:	mov	r3, r2
   10f70:	mov	r1, #22
   10f74:	stm	sp, {r0, r2, r4}
   10f78:	str	r2, [sp, #12]
   10f7c:	mov	r2, lr
   10f80:	str	r0, [sp, #16]
   10f84:	str	r8, [sp, #20]
   10f88:	str	r8, [sp, #24]
   10f8c:	str	r5, [sp, #28]
   10f90:	str	r5, [sp, #32]
   10f94:	strd	r4, [sp, #36]	; 0x24
   10f98:	str	r0, [sp, #56]	; 0x38
   10f9c:	mov	r0, #8
   10fa0:	str	ip, [sp, #44]	; 0x2c
   10fa4:	str	r7, [sp, #48]	; 0x30
   10fa8:	str	r7, [sp, #52]	; 0x34
   10fac:	str	ip, [sp, #60]	; 0x3c
   10fb0:	str	ip, [sp, #64]	; 0x40
   10fb4:	str	lr, [sp, #68]	; 0x44
   10fb8:	str	r4, [sp, #72]	; 0x48
   10fbc:	str	r7, [sp, #76]	; 0x4c
   10fc0:	bl	10cd8 <_g@@Base>
   10fc4:	mov	r6, r0
   10fc8:	ldr	r0, [pc, #272]	; 110e0 <teste_grafo_aresta@@Base+0x1a8>
   10fcc:	add	r0, pc, r0
   10fd0:	bl	10aa4 <printf@plt>
   10fd4:	mov	r2, r5
   10fd8:	mov	r1, r8
   10fdc:	mov	r0, r6
   10fe0:	bl	11d20 <grafo_aresta@@Base>
   10fe4:	cmp	r0, r7
   10fe8:	beq	10ffc <teste_grafo_aresta@@Base+0xc4>
   10fec:	ldr	r0, [pc, #240]	; 110e4 <teste_grafo_aresta@@Base+0x1ac>
   10ff0:	mov	r4, r7
   10ff4:	add	r0, pc, r0
   10ff8:	bl	10aa4 <printf@plt>
   10ffc:	mov	r2, #6
   11000:	mov	r1, #7
   11004:	mov	r0, r6
   11008:	bl	11d20 <grafo_aresta@@Base>
   1100c:	cmp	r0, #1
   11010:	beq	11024 <teste_grafo_aresta@@Base+0xec>
   11014:	ldr	r0, [pc, #204]	; 110e8 <teste_grafo_aresta@@Base+0x1b0>
   11018:	add	r4, r4, #1
   1101c:	add	r0, pc, r0
   11020:	bl	10aa4 <printf@plt>
   11024:	mov	r2, #1
   11028:	mov	r1, #7
   1102c:	mov	r0, r6
   11030:	bl	11d20 <grafo_aresta@@Base>
   11034:	cmp	r0, #0
   11038:	bne	11088 <teste_grafo_aresta@@Base+0x150>
   1103c:	mov	r2, #7
   11040:	mov	r1, #2
   11044:	bl	11d20 <grafo_aresta@@Base>
   11048:	cmn	r0, #1
   1104c:	bne	110b0 <teste_grafo_aresta@@Base+0x178>
   11050:	mov	r0, r6
   11054:	bl	11c9c <grafo_apaga@@Base>
   11058:	cmp	r4, #0
   1105c:	bne	110c8 <teste_grafo_aresta@@Base+0x190>
   11060:	ldr	r0, [pc, #132]	; 110ec <teste_grafo_aresta@@Base+0x1b4>
   11064:	add	r0, pc, r0
   11068:	bl	10ac8 <puts@plt>
   1106c:	mov	r0, r4
   11070:	add	sp, sp, #80	; 0x50
   11074:	ldrd	r4, [sp]
   11078:	ldrd	r6, [sp, #8]
   1107c:	ldr	r8, [sp, #16]
   11080:	add	sp, sp, #20
   11084:	pop	{pc}		; (ldr pc, [sp], #4)
   11088:	ldr	r0, [pc, #96]	; 110f0 <teste_grafo_aresta@@Base+0x1b8>
   1108c:	add	r4, r4, #1
   11090:	add	r0, pc, r0
   11094:	bl	10aa4 <printf@plt>
   11098:	mov	r2, #7
   1109c:	mov	r1, #2
   110a0:	mov	r0, #0
   110a4:	bl	11d20 <grafo_aresta@@Base>
   110a8:	cmn	r0, #1
   110ac:	beq	110d4 <teste_grafo_aresta@@Base+0x19c>
   110b0:	ldr	r0, [pc, #60]	; 110f4 <teste_grafo_aresta@@Base+0x1bc>
   110b4:	add	r4, r4, #1
   110b8:	add	r0, pc, r0
   110bc:	bl	10aa4 <printf@plt>
   110c0:	mov	r0, r6
   110c4:	bl	11c9c <grafo_apaga@@Base>
   110c8:	mov	r0, #10
   110cc:	bl	10b04 <putchar@plt>
   110d0:	b	1106c <teste_grafo_aresta@@Base+0x134>
   110d4:	mov	r0, r6
   110d8:	bl	11c9c <grafo_apaga@@Base>
   110dc:	b	110c8 <teste_grafo_aresta@@Base+0x190>
   110e0:	andeq	r1, r0, r4, lsl #11
   110e4:	andeq	r1, r0, r0, ror r5
   110e8:	andeq	r1, r0, r8, asr #10
   110ec:	andeq	r1, r0, r8, ror #9
   110f0:	andeq	r1, r0, ip, lsl #10
   110f4:	andeq	r1, r0, r0, lsr #10

000110f8 <teste_grafo_adiciona@@Base>:
   110f8:	strd	r4, [sp, #-16]!
   110fc:	mov	r4, #2
   11100:	mov	r2, #3
   11104:	str	r6, [sp, #8]
   11108:	mov	r6, #7
   1110c:	mov	r3, r4
   11110:	str	lr, [sp, #12]
   11114:	sub	sp, sp, #8
   11118:	mov	r1, #4
   1111c:	mov	r0, #9
   11120:	str	r6, [sp]
   11124:	str	r4, [sp, #4]
   11128:	bl	10cd8 <_g@@Base>
   1112c:	mov	r5, r0
   11130:	ldr	r0, [pc, #472]	; 11310 <teste_grafo_adiciona@@Base+0x218>
   11134:	add	r0, pc, r0
   11138:	bl	10aa4 <printf@plt>
   1113c:	mov	r1, r4
   11140:	mov	r2, r6
   11144:	mov	r0, r5
   11148:	bl	11d88 <grafo_adiciona@@Base>
   1114c:	cmp	r0, #1
   11150:	moveq	r4, #0
   11154:	beq	11168 <teste_grafo_adiciona@@Base+0x70>
   11158:	ldr	r0, [pc, #436]	; 11314 <teste_grafo_adiciona@@Base+0x21c>
   1115c:	mov	r4, #1
   11160:	add	r0, pc, r0
   11164:	bl	10aa4 <printf@plt>
   11168:	ldr	r3, [r5, #4]
   1116c:	ldr	r3, [r3, #20]
   11170:	cmp	r3, #0
   11174:	beq	11184 <teste_grafo_adiciona@@Base+0x8c>
   11178:	ldr	r3, [r3]
   1117c:	cmp	r3, #7
   11180:	beq	11194 <teste_grafo_adiciona@@Base+0x9c>
   11184:	ldr	r0, [pc, #396]	; 11318 <teste_grafo_adiciona@@Base+0x220>
   11188:	add	r4, r4, #1
   1118c:	add	r0, pc, r0
   11190:	bl	10aa4 <printf@plt>
   11194:	mov	r2, #8
   11198:	mov	r1, #3
   1119c:	mov	r0, r5
   111a0:	bl	11d88 <grafo_adiciona@@Base>
   111a4:	cmp	r0, #1
   111a8:	beq	111bc <teste_grafo_adiciona@@Base+0xc4>
   111ac:	ldr	r0, [pc, #360]	; 1131c <teste_grafo_adiciona@@Base+0x224>
   111b0:	add	r4, r4, #1
   111b4:	add	r0, pc, r0
   111b8:	bl	10aa4 <printf@plt>
   111bc:	ldr	r3, [r5, #4]
   111c0:	ldr	r3, [r3, #28]
   111c4:	cmp	r3, #0
   111c8:	beq	111e4 <teste_grafo_adiciona@@Base+0xec>
   111cc:	ldr	r2, [r3, #4]
   111d0:	cmp	r2, #0
   111d4:	beq	111e4 <teste_grafo_adiciona@@Base+0xec>
   111d8:	ldr	r1, [r2, #4]
   111dc:	cmp	r1, #0
   111e0:	beq	112d0 <teste_grafo_adiciona@@Base+0x1d8>
   111e4:	ldr	r0, [pc, #308]	; 11320 <teste_grafo_adiciona@@Base+0x228>
   111e8:	add	r4, r4, #1
   111ec:	add	r0, pc, r0
   111f0:	bl	10aa4 <printf@plt>
   111f4:	mov	r2, #7
   111f8:	mov	r1, #2
   111fc:	mov	r0, r5
   11200:	bl	11d88 <grafo_adiciona@@Base>
   11204:	cmp	r0, #0
   11208:	bne	112bc <teste_grafo_adiciona@@Base+0x1c4>
   1120c:	mov	r2, #7
   11210:	mov	r1, #22
   11214:	mov	r0, r5
   11218:	bl	11d88 <grafo_adiciona@@Base>
   1121c:	cmn	r0, #1
   11220:	bne	11270 <teste_grafo_adiciona@@Base+0x178>
   11224:	mov	r2, #7
   11228:	mov	r1, #2
   1122c:	mov	r0, #0
   11230:	bl	11d88 <grafo_adiciona@@Base>
   11234:	cmn	r0, #1
   11238:	bne	11298 <teste_grafo_adiciona@@Base+0x1a0>
   1123c:	mov	r0, r5
   11240:	bl	11c9c <grafo_apaga@@Base>
   11244:	cmp	r4, #0
   11248:	bne	112b0 <teste_grafo_adiciona@@Base+0x1b8>
   1124c:	ldr	r0, [pc, #208]	; 11324 <teste_grafo_adiciona@@Base+0x22c>
   11250:	add	r0, pc, r0
   11254:	bl	10ac8 <puts@plt>
   11258:	mov	r0, r4
   1125c:	add	sp, sp, #8
   11260:	ldrd	r4, [sp]
   11264:	ldr	r6, [sp, #8]
   11268:	add	sp, sp, #12
   1126c:	pop	{pc}		; (ldr pc, [sp], #4)
   11270:	ldr	r0, [pc, #176]	; 11328 <teste_grafo_adiciona@@Base+0x230>
   11274:	add	r4, r4, #1
   11278:	add	r0, pc, r0
   1127c:	bl	10aa4 <printf@plt>
   11280:	mov	r2, #7
   11284:	mov	r1, #2
   11288:	mov	r0, #0
   1128c:	bl	11d88 <grafo_adiciona@@Base>
   11290:	cmn	r0, #1
   11294:	beq	11304 <teste_grafo_adiciona@@Base+0x20c>
   11298:	ldr	r0, [pc, #140]	; 1132c <teste_grafo_adiciona@@Base+0x234>
   1129c:	add	r4, r4, #1
   112a0:	add	r0, pc, r0
   112a4:	bl	10aa4 <printf@plt>
   112a8:	mov	r0, r5
   112ac:	bl	11c9c <grafo_apaga@@Base>
   112b0:	mov	r0, #10
   112b4:	bl	10b04 <putchar@plt>
   112b8:	b	11258 <teste_grafo_adiciona@@Base+0x160>
   112bc:	ldr	r0, [pc, #108]	; 11330 <teste_grafo_adiciona@@Base+0x238>
   112c0:	add	r4, r4, #1
   112c4:	add	r0, pc, r0
   112c8:	bl	10aa4 <printf@plt>
   112cc:	b	1120c <teste_grafo_adiciona@@Base+0x114>
   112d0:	ldr	r3, [r3]
   112d4:	cmp	r3, #2
   112d8:	beq	112f4 <teste_grafo_adiciona@@Base+0x1fc>
   112dc:	cmp	r3, #8
   112e0:	bne	111e4 <teste_grafo_adiciona@@Base+0xec>
   112e4:	ldr	r3, [r2]
   112e8:	cmp	r3, #2
   112ec:	bne	111e4 <teste_grafo_adiciona@@Base+0xec>
   112f0:	b	111f4 <teste_grafo_adiciona@@Base+0xfc>
   112f4:	ldr	r3, [r2]
   112f8:	cmp	r3, #8
   112fc:	bne	111e4 <teste_grafo_adiciona@@Base+0xec>
   11300:	b	111f4 <teste_grafo_adiciona@@Base+0xfc>
   11304:	mov	r0, r5
   11308:	bl	11c9c <grafo_apaga@@Base>
   1130c:	b	112b0 <teste_grafo_adiciona@@Base+0x1b8>
   11310:	ldrdeq	r1, [r0], -ip
   11314:	andeq	r1, r0, r4, asr #9
   11318:	ldrdeq	r1, [r0], -r4
   1131c:	andeq	r1, r0, r0, ror r4
   11320:	andeq	r1, r0, r4, lsr #9
   11324:	strdeq	r1, [r0], -ip
   11328:	andeq	r1, r0, ip, lsl #9
   1132c:	muleq	r0, ip, r4
   11330:	andeq	r1, r0, r8, lsl #8

00011334 <teste_grafo_remove@@Base>:
   11334:	mov	r0, #2
   11338:	strd	r4, [sp, #-16]!
   1133c:	mov	r4, #1
   11340:	str	r6, [sp, #8]
   11344:	mov	r6, #7
   11348:	mov	r3, r0
   1134c:	str	lr, [sp, #12]
   11350:	sub	sp, sp, #16
   11354:	mov	r2, #3
   11358:	mov	r1, #6
   1135c:	str	r6, [sp]
   11360:	stmib	sp, {r0, r6}
   11364:	mov	r0, #9
   11368:	str	r4, [sp, #12]
   1136c:	bl	10cd8 <_g@@Base>
   11370:	mov	r5, r0
   11374:	ldr	r0, [pc, #364]	; 114e8 <teste_grafo_remove@@Base+0x1b4>
   11378:	add	r0, pc, r0
   1137c:	bl	10aa4 <printf@plt>
   11380:	mov	r2, r4
   11384:	mov	r1, r6
   11388:	mov	r0, r5
   1138c:	bl	11e2c <grafo_remove@@Base>
   11390:	cmp	r0, r4
   11394:	moveq	r4, #0
   11398:	beq	113a8 <teste_grafo_remove@@Base+0x74>
   1139c:	ldr	r0, [pc, #328]	; 114ec <teste_grafo_remove@@Base+0x1b8>
   113a0:	add	r0, pc, r0
   113a4:	bl	10aa4 <printf@plt>
   113a8:	ldr	r3, [r5, #4]
   113ac:	ldr	r3, [r3, #60]	; 0x3c
   113b0:	cmp	r3, #0
   113b4:	beq	113c4 <teste_grafo_remove@@Base+0x90>
   113b8:	ldr	r2, [r3, #4]
   113bc:	cmp	r2, #0
   113c0:	beq	114cc <teste_grafo_remove@@Base+0x198>
   113c4:	ldr	r0, [pc, #292]	; 114f0 <teste_grafo_remove@@Base+0x1bc>
   113c8:	add	r4, r4, #1
   113cc:	add	r0, pc, r0
   113d0:	bl	10aa4 <printf@plt>
   113d4:	mov	r2, #2
   113d8:	mov	r1, #7
   113dc:	mov	r0, r5
   113e0:	bl	11e2c <grafo_remove@@Base>
   113e4:	cmp	r0, #1
   113e8:	beq	113fc <teste_grafo_remove@@Base+0xc8>
   113ec:	ldr	r0, [pc, #256]	; 114f4 <teste_grafo_remove@@Base+0x1c0>
   113f0:	add	r4, r4, #1
   113f4:	add	r0, pc, r0
   113f8:	bl	10aa4 <printf@plt>
   113fc:	ldr	r3, [r5, #4]
   11400:	ldr	r3, [r3, #60]	; 0x3c
   11404:	cmp	r3, #0
   11408:	beq	1141c <teste_grafo_remove@@Base+0xe8>
   1140c:	ldr	r0, [pc, #228]	; 114f8 <teste_grafo_remove@@Base+0x1c4>
   11410:	add	r4, r4, #1
   11414:	add	r0, pc, r0
   11418:	bl	10aa4 <printf@plt>
   1141c:	mov	r2, #0
   11420:	mov	r1, #4
   11424:	mov	r0, r5
   11428:	bl	11e2c <grafo_remove@@Base>
   1142c:	cmp	r0, #0
   11430:	bne	11480 <teste_grafo_remove@@Base+0x14c>
   11434:	mov	r2, #22
   11438:	mov	r1, #7
   1143c:	mov	r0, r5
   11440:	bl	11e2c <grafo_remove@@Base>
   11444:	cmn	r0, #1
   11448:	bne	114a8 <teste_grafo_remove@@Base+0x174>
   1144c:	mov	r0, r5
   11450:	bl	11c9c <grafo_apaga@@Base>
   11454:	cmp	r4, #0
   11458:	bne	114c0 <teste_grafo_remove@@Base+0x18c>
   1145c:	ldr	r0, [pc, #152]	; 114fc <teste_grafo_remove@@Base+0x1c8>
   11460:	add	r0, pc, r0
   11464:	bl	10ac8 <puts@plt>
   11468:	mov	r0, r4
   1146c:	add	sp, sp, #16
   11470:	ldrd	r4, [sp]
   11474:	ldr	r6, [sp, #8]
   11478:	add	sp, sp, #12
   1147c:	pop	{pc}		; (ldr pc, [sp], #4)
   11480:	ldr	r0, [pc, #120]	; 11500 <teste_grafo_remove@@Base+0x1cc>
   11484:	add	r4, r4, #1
   11488:	add	r0, pc, r0
   1148c:	bl	10aa4 <printf@plt>
   11490:	mov	r2, #22
   11494:	mov	r1, #7
   11498:	mov	r0, r5
   1149c:	bl	11e2c <grafo_remove@@Base>
   114a0:	cmn	r0, #1
   114a4:	beq	114dc <teste_grafo_remove@@Base+0x1a8>
   114a8:	ldr	r0, [pc, #84]	; 11504 <teste_grafo_remove@@Base+0x1d0>
   114ac:	add	r4, r4, #1
   114b0:	add	r0, pc, r0
   114b4:	bl	10aa4 <printf@plt>
   114b8:	mov	r0, r5
   114bc:	bl	11c9c <grafo_apaga@@Base>
   114c0:	mov	r0, #10
   114c4:	bl	10b04 <putchar@plt>
   114c8:	b	11468 <teste_grafo_remove@@Base+0x134>
   114cc:	ldr	r3, [r3]
   114d0:	cmp	r3, #2
   114d4:	bne	113c4 <teste_grafo_remove@@Base+0x90>
   114d8:	b	113d4 <teste_grafo_remove@@Base+0xa0>
   114dc:	mov	r0, r5
   114e0:	bl	11c9c <grafo_apaga@@Base>
   114e4:	b	114c0 <teste_grafo_remove@@Base+0x18c>
   114e8:	strdeq	r1, [r0], -ip
   114ec:	andeq	r1, r0, r8, ror #7
   114f0:	strdeq	r1, [r0], -r8
   114f4:	muleq	r0, r4, r3
   114f8:			; <UNDEFINED> instruction: 0x000013b0
   114fc:	andeq	r1, r0, ip, ror #1
   11500:	andeq	r1, r0, r8, ror r3
   11504:	andeq	r1, r0, ip, lsl #7

00011508 <teste_v_sucessores@@Base>:
   11508:	mov	r0, #4
   1150c:	mov	r2, #2
   11510:	strd	r4, [sp, #-20]!	; 0xffffffec
   11514:	mov	r1, #5
   11518:	mov	r5, #7
   1151c:	strd	r6, [sp, #8]
   11520:	mov	r4, #0
   11524:	str	lr, [sp, #16]
   11528:	sub	sp, sp, #84	; 0x54
   1152c:	mov	ip, #6
   11530:	mov	lr, #3
   11534:	mov	r6, #1
   11538:	mov	r3, r2
   1153c:	str	r5, [sp]
   11540:	stmib	sp, {r2, r4}
   11544:	str	r2, [sp, #12]
   11548:	mov	r2, lr
   1154c:	str	r5, [sp, #16]
   11550:	str	r1, [sp, #20]
   11554:	str	r1, [sp, #24]
   11558:	mov	r1, #22
   1155c:	str	r0, [sp, #28]
   11560:	str	r0, [sp, #32]
   11564:	str	r4, [sp, #36]	; 0x24
   11568:	str	r0, [sp, #40]	; 0x28
   1156c:	mov	r0, #8
   11570:	str	ip, [sp, #44]	; 0x2c
   11574:	str	r6, [sp, #48]	; 0x30
   11578:	str	r6, [sp, #52]	; 0x34
   1157c:	str	r5, [sp, #56]	; 0x38
   11580:	str	ip, [sp, #60]	; 0x3c
   11584:	str	ip, [sp, #64]	; 0x40
   11588:	str	lr, [sp, #68]	; 0x44
   1158c:	str	r4, [sp, #72]	; 0x48
   11590:	str	r6, [sp, #76]	; 0x4c
   11594:	bl	10cd8 <_g@@Base>
   11598:	mov	r7, r0
   1159c:	ldr	r0, [pc, #328]	; 116ec <teste_v_sucessores@@Base+0x1e4>
   115a0:	add	r0, pc, r0
   115a4:	bl	10aa4 <printf@plt>
   115a8:	mov	r1, r5
   115ac:	mov	r0, r7
   115b0:	bl	11ef0 <v_sucessores@@Base>
   115b4:	subs	r5, r0, #0
   115b8:	beq	116b8 <teste_v_sucessores@@Base+0x1b0>
   115bc:	ldr	r3, [r5]
   115c0:	cmp	r3, #3
   115c4:	moveq	r6, r4
   115c8:	bne	1167c <teste_v_sucessores@@Base+0x174>
   115cc:	mov	r1, #2
   115d0:	mov	r0, r5
   115d4:	bl	10db0 <_f@@Base>
   115d8:	cmp	r0, #0
   115dc:	bne	11650 <teste_v_sucessores@@Base+0x148>
   115e0:	ldr	r0, [pc, #264]	; 116f0 <teste_v_sucessores@@Base+0x1e8>
   115e4:	add	r6, r6, #1
   115e8:	add	r0, pc, r0
   115ec:	bl	10aa4 <printf@plt>
   115f0:	mov	r0, r5
   115f4:	bl	121a8 <vetor_apaga@@Base>
   115f8:	mov	r1, #2
   115fc:	mov	r0, r7
   11600:	bl	11ef0 <v_sucessores@@Base>
   11604:	subs	r5, r0, #0
   11608:	beq	116d0 <teste_v_sucessores@@Base+0x1c8>
   1160c:	ldr	r3, [r5]
   11610:	cmp	r3, #0
   11614:	bne	1168c <teste_v_sucessores@@Base+0x184>
   11618:	bl	121a8 <vetor_apaga@@Base>
   1161c:	mov	r0, r7
   11620:	bl	11c9c <grafo_apaga@@Base>
   11624:	cmp	r6, #0
   11628:	bne	116ac <teste_v_sucessores@@Base+0x1a4>
   1162c:	ldr	r0, [pc, #192]	; 116f4 <teste_v_sucessores@@Base+0x1ec>
   11630:	add	r0, pc, r0
   11634:	bl	10ac8 <puts@plt>
   11638:	mov	r0, r6
   1163c:	add	sp, sp, #84	; 0x54
   11640:	ldrd	r4, [sp]
   11644:	ldrd	r6, [sp, #8]
   11648:	add	sp, sp, #16
   1164c:	pop	{pc}		; (ldr pc, [sp], #4)
   11650:	mov	r1, #5
   11654:	mov	r0, r5
   11658:	bl	10db0 <_f@@Base>
   1165c:	cmp	r0, #0
   11660:	beq	115e0 <teste_v_sucessores@@Base+0xd8>
   11664:	mov	r1, #6
   11668:	mov	r0, r5
   1166c:	bl	10db0 <_f@@Base>
   11670:	cmp	r0, #0
   11674:	beq	115e0 <teste_v_sucessores@@Base+0xd8>
   11678:	b	115f0 <teste_v_sucessores@@Base+0xe8>
   1167c:	ldr	r0, [pc, #116]	; 116f8 <teste_v_sucessores@@Base+0x1f0>
   11680:	add	r0, pc, r0
   11684:	bl	10aa4 <printf@plt>
   11688:	b	115cc <teste_v_sucessores@@Base+0xc4>
   1168c:	ldr	r0, [pc, #104]	; 116fc <teste_v_sucessores@@Base+0x1f4>
   11690:	add	r6, r6, #1
   11694:	add	r0, pc, r0
   11698:	bl	10aa4 <printf@plt>
   1169c:	mov	r0, r5
   116a0:	bl	121a8 <vetor_apaga@@Base>
   116a4:	mov	r0, r7
   116a8:	bl	11c9c <grafo_apaga@@Base>
   116ac:	mov	r0, #10
   116b0:	bl	10b04 <putchar@plt>
   116b4:	b	11638 <teste_v_sucessores@@Base+0x130>
   116b8:	ldr	r0, [pc, #64]	; 11700 <teste_v_sucessores@@Base+0x1f8>
   116bc:	add	r0, pc, r0
   116c0:	bl	10aa4 <printf@plt>
   116c4:	mov	r0, #10
   116c8:	bl	10b04 <putchar@plt>
   116cc:	b	11638 <teste_v_sucessores@@Base+0x130>
   116d0:	ldr	r0, [pc, #44]	; 11704 <teste_v_sucessores@@Base+0x1fc>
   116d4:	add	r6, r6, #1
   116d8:	add	r0, pc, r0
   116dc:	bl	10aa4 <printf@plt>
   116e0:	mov	r0, #10
   116e4:	bl	10b04 <putchar@plt>
   116e8:	b	11638 <teste_v_sucessores@@Base+0x130>
   116ec:	ldrdeq	r1, [r0], -r4
   116f0:	strdeq	r1, [r0], -ip
   116f4:	andeq	r0, r0, ip, lsl pc
   116f8:	andeq	r1, r0, r8, lsr r2
   116fc:			; <UNDEFINED> instruction: 0x000012bc
   11700:	andeq	r1, r0, ip, asr #3
   11704:	andeq	r1, r0, r8, lsr r2

00011708 <teste_v_antecessores@@Base>:
   11708:	mov	r0, #7
   1170c:	mov	r1, #4
   11710:	strd	r4, [sp, #-20]!	; 0xffffffec
   11714:	mov	r2, #5
   11718:	mov	r5, #2
   1171c:	strd	r6, [sp, #8]
   11720:	mov	r4, #0
   11724:	str	lr, [sp, #16]
   11728:	sub	sp, sp, #84	; 0x54
   1172c:	mov	ip, #6
   11730:	mov	lr, #3
   11734:	mov	r6, #1
   11738:	mov	r3, r5
   1173c:	stm	sp, {r0, r5}
   11740:	strd	r4, [sp, #8]
   11744:	str	r0, [sp, #16]
   11748:	str	r2, [sp, #20]
   1174c:	str	r2, [sp, #24]
   11750:	mov	r2, lr
   11754:	str	r1, [sp, #28]
   11758:	str	r1, [sp, #32]
   1175c:	str	r4, [sp, #36]	; 0x24
   11760:	str	r1, [sp, #40]	; 0x28
   11764:	mov	r1, #22
   11768:	str	ip, [sp, #44]	; 0x2c
   1176c:	str	r0, [sp, #56]	; 0x38
   11770:	mov	r0, #8
   11774:	str	r6, [sp, #48]	; 0x30
   11778:	str	r6, [sp, #52]	; 0x34
   1177c:	str	ip, [sp, #60]	; 0x3c
   11780:	str	ip, [sp, #64]	; 0x40
   11784:	str	lr, [sp, #68]	; 0x44
   11788:	str	r4, [sp, #72]	; 0x48
   1178c:	str	r6, [sp, #76]	; 0x4c
   11790:	bl	10cd8 <_g@@Base>
   11794:	mov	r7, r0
   11798:	ldr	r0, [pc, #328]	; 118e8 <teste_v_antecessores@@Base+0x1e0>
   1179c:	add	r0, pc, r0
   117a0:	bl	10aa4 <printf@plt>
   117a4:	mov	r1, r5
   117a8:	mov	r0, r7
   117ac:	bl	11f7c <v_antecessores@@Base>
   117b0:	subs	r5, r0, #0
   117b4:	beq	118b4 <teste_v_antecessores@@Base+0x1ac>
   117b8:	ldr	r3, [r5]
   117bc:	cmp	r3, #3
   117c0:	moveq	r6, r4
   117c4:	bne	11878 <teste_v_antecessores@@Base+0x170>
   117c8:	mov	r1, #0
   117cc:	mov	r0, r5
   117d0:	bl	10db0 <_f@@Base>
   117d4:	cmp	r0, #0
   117d8:	bne	1184c <teste_v_antecessores@@Base+0x144>
   117dc:	ldr	r0, [pc, #264]	; 118ec <teste_v_antecessores@@Base+0x1e4>
   117e0:	add	r6, r6, #1
   117e4:	add	r0, pc, r0
   117e8:	bl	10aa4 <printf@plt>
   117ec:	mov	r0, r5
   117f0:	bl	121a8 <vetor_apaga@@Base>
   117f4:	mov	r1, #7
   117f8:	mov	r0, r7
   117fc:	bl	11f7c <v_antecessores@@Base>
   11800:	subs	r5, r0, #0
   11804:	beq	118cc <teste_v_antecessores@@Base+0x1c4>
   11808:	ldr	r3, [r5]
   1180c:	cmp	r3, #0
   11810:	bne	11888 <teste_v_antecessores@@Base+0x180>
   11814:	bl	121a8 <vetor_apaga@@Base>
   11818:	mov	r0, r7
   1181c:	bl	11c9c <grafo_apaga@@Base>
   11820:	cmp	r6, #0
   11824:	bne	118a8 <teste_v_antecessores@@Base+0x1a0>
   11828:	ldr	r0, [pc, #192]	; 118f0 <teste_v_antecessores@@Base+0x1e8>
   1182c:	add	r0, pc, r0
   11830:	bl	10ac8 <puts@plt>
   11834:	mov	r0, r6
   11838:	add	sp, sp, #84	; 0x54
   1183c:	ldrd	r4, [sp]
   11840:	ldrd	r6, [sp, #8]
   11844:	add	sp, sp, #16
   11848:	pop	{pc}		; (ldr pc, [sp], #4)
   1184c:	mov	r1, #3
   11850:	mov	r0, r5
   11854:	bl	10db0 <_f@@Base>
   11858:	cmp	r0, #0
   1185c:	beq	117dc <teste_v_antecessores@@Base+0xd4>
   11860:	mov	r1, #7
   11864:	mov	r0, r5
   11868:	bl	10db0 <_f@@Base>
   1186c:	cmp	r0, #0
   11870:	beq	117dc <teste_v_antecessores@@Base+0xd4>
   11874:	b	117ec <teste_v_antecessores@@Base+0xe4>
   11878:	ldr	r0, [pc, #116]	; 118f4 <teste_v_antecessores@@Base+0x1ec>
   1187c:	add	r0, pc, r0
   11880:	bl	10aa4 <printf@plt>
   11884:	b	117c8 <teste_v_antecessores@@Base+0xc0>
   11888:	ldr	r0, [pc, #104]	; 118f8 <teste_v_antecessores@@Base+0x1f0>
   1188c:	add	r6, r6, #1
   11890:	add	r0, pc, r0
   11894:	bl	10aa4 <printf@plt>
   11898:	mov	r0, r5
   1189c:	bl	121a8 <vetor_apaga@@Base>
   118a0:	mov	r0, r7
   118a4:	bl	11c9c <grafo_apaga@@Base>
   118a8:	mov	r0, #10
   118ac:	bl	10b04 <putchar@plt>
   118b0:	b	11834 <teste_v_antecessores@@Base+0x12c>
   118b4:	ldr	r0, [pc, #64]	; 118fc <teste_v_antecessores@@Base+0x1f4>
   118b8:	add	r0, pc, r0
   118bc:	bl	10aa4 <printf@plt>
   118c0:	mov	r0, #10
   118c4:	bl	10b04 <putchar@plt>
   118c8:	b	11834 <teste_v_antecessores@@Base+0x12c>
   118cc:	ldr	r0, [pc, #44]	; 11900 <teste_v_antecessores@@Base+0x1f8>
   118d0:	add	r6, r6, #1
   118d4:	add	r0, pc, r0
   118d8:	bl	10aa4 <printf@plt>
   118dc:	mov	r0, #10
   118e0:	bl	10b04 <putchar@plt>
   118e4:	b	11834 <teste_v_antecessores@@Base+0x12c>
   118e8:	andeq	r1, r0, r4, ror #3
   118ec:	andeq	r1, r0, r0, lsl r2
   118f0:	andeq	r0, r0, r0, lsr #26
   118f4:	andeq	r1, r0, r8, asr #2
   118f8:	ldrdeq	r1, [r0], -r4
   118fc:	ldrdeq	r1, [r0], -ip
   11900:	andeq	r1, r0, r0, asr r1

00011904 <teste_v_grau@@Base>:
   11904:	mov	r3, #2
   11908:	mov	r0, #7
   1190c:	strd	r4, [sp, #-16]!
   11910:	mov	r1, #4
   11914:	mov	r4, #0
   11918:	str	r6, [sp, #8]
   1191c:	mov	r2, #5
   11920:	str	lr, [sp, #12]
   11924:	sub	sp, sp, #80	; 0x50
   11928:	mov	ip, #6
   1192c:	mov	lr, #3
   11930:	mov	r6, #1
   11934:	stm	sp, {r0, r3, r4}
   11938:	str	r3, [sp, #12]
   1193c:	str	r0, [sp, #16]
   11940:	str	r2, [sp, #20]
   11944:	str	r2, [sp, #24]
   11948:	mov	r2, lr
   1194c:	str	r1, [sp, #28]
   11950:	str	r1, [sp, #32]
   11954:	str	r4, [sp, #36]	; 0x24
   11958:	str	r1, [sp, #40]	; 0x28
   1195c:	mov	r1, #22
   11960:	str	r0, [sp, #56]	; 0x38
   11964:	mov	r0, #8
   11968:	str	ip, [sp, #44]	; 0x2c
   1196c:	str	r6, [sp, #48]	; 0x30
   11970:	str	r6, [sp, #52]	; 0x34
   11974:	str	ip, [sp, #60]	; 0x3c
   11978:	str	ip, [sp, #64]	; 0x40
   1197c:	str	lr, [sp, #68]	; 0x44
   11980:	str	r4, [sp, #72]	; 0x48
   11984:	str	r6, [sp, #76]	; 0x4c
   11988:	bl	10cd8 <_g@@Base>
   1198c:	mov	r5, r0
   11990:	ldr	r0, [pc, #216]	; 11a70 <teste_v_grau@@Base+0x16c>
   11994:	add	r0, pc, r0
   11998:	bl	10aa4 <printf@plt>
   1199c:	mov	r0, r5
   119a0:	mvn	r1, #3
   119a4:	bl	12044 <v_grau@@Base>
   119a8:	cmn	r0, #1
   119ac:	beq	119c0 <teste_v_grau@@Base+0xbc>
   119b0:	ldr	r0, [pc, #188]	; 11a74 <teste_v_grau@@Base+0x170>
   119b4:	mov	r4, r6
   119b8:	add	r0, pc, r0
   119bc:	bl	10aa4 <printf@plt>
   119c0:	mov	r1, #7
   119c4:	mov	r0, r5
   119c8:	bl	12044 <v_grau@@Base>
   119cc:	cmp	r0, #3
   119d0:	bne	11a1c <teste_v_grau@@Base+0x118>
   119d4:	mov	r1, #5
   119d8:	mov	r0, r5
   119dc:	bl	12044 <v_grau@@Base>
   119e0:	cmp	r0, #2
   119e4:	bne	11a40 <teste_v_grau@@Base+0x13c>
   119e8:	mov	r0, r5
   119ec:	bl	11c9c <grafo_apaga@@Base>
   119f0:	cmp	r4, #0
   119f4:	bne	11a58 <teste_v_grau@@Base+0x154>
   119f8:	ldr	r0, [pc, #120]	; 11a78 <teste_v_grau@@Base+0x174>
   119fc:	add	r0, pc, r0
   11a00:	bl	10ac8 <puts@plt>
   11a04:	mov	r0, r4
   11a08:	add	sp, sp, #80	; 0x50
   11a0c:	ldrd	r4, [sp]
   11a10:	ldr	r6, [sp, #8]
   11a14:	add	sp, sp, #12
   11a18:	pop	{pc}		; (ldr pc, [sp], #4)
   11a1c:	ldr	r0, [pc, #88]	; 11a7c <teste_v_grau@@Base+0x178>
   11a20:	add	r4, r4, #1
   11a24:	add	r0, pc, r0
   11a28:	bl	10aa4 <printf@plt>
   11a2c:	mov	r1, #5
   11a30:	mov	r0, r5
   11a34:	bl	12044 <v_grau@@Base>
   11a38:	cmp	r0, #2
   11a3c:	beq	11a64 <teste_v_grau@@Base+0x160>
   11a40:	ldr	r0, [pc, #56]	; 11a80 <teste_v_grau@@Base+0x17c>
   11a44:	add	r4, r4, #1
   11a48:	add	r0, pc, r0
   11a4c:	bl	10aa4 <printf@plt>
   11a50:	mov	r0, r5
   11a54:	bl	11c9c <grafo_apaga@@Base>
   11a58:	mov	r0, #10
   11a5c:	bl	10b04 <putchar@plt>
   11a60:	b	11a04 <teste_v_grau@@Base+0x100>
   11a64:	mov	r0, r5
   11a68:	bl	11c9c <grafo_apaga@@Base>
   11a6c:	b	11a58 <teste_v_grau@@Base+0x154>
   11a70:	andeq	r1, r0, r0, lsl #2
   11a74:	andeq	r1, r0, r8, ror #1
   11a78:	andeq	r0, r0, r0, asr fp
   11a7c:	andeq	r1, r0, ip, lsr #1
   11a80:	strheq	r1, [r0], -r8

00011a84 <teste_v_celebridade@@Base>:
   11a84:	mov	r0, #6
   11a88:	mov	r1, #0
   11a8c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11a90:	strd	r6, [sp, #8]
   11a94:	mov	r6, #7
   11a98:	mov	r4, #2
   11a9c:	str	lr, [sp, #16]
   11aa0:	sub	sp, sp, #116	; 0x74
   11aa4:	mov	ip, #4
   11aa8:	mov	lr, #5
   11aac:	mov	r5, #1
   11ab0:	mov	r7, #3
   11ab4:	mov	r3, r4
   11ab8:	str	r6, [sp]
   11abc:	mov	r2, r7
   11ac0:	str	r4, [sp, #4]
   11ac4:	str	r1, [sp, #8]
   11ac8:	str	r1, [sp, #36]	; 0x24
   11acc:	str	r0, [sp, #44]	; 0x2c
   11ad0:	str	r0, [sp, #60]	; 0x3c
   11ad4:	str	r0, [sp, #64]	; 0x40
   11ad8:	str	r1, [sp, #72]	; 0x48
   11adc:	mov	r1, #30
   11ae0:	str	r0, [sp, #88]	; 0x58
   11ae4:	mov	r0, #8
   11ae8:	str	r4, [sp, #12]
   11aec:	str	r6, [sp, #16]
   11af0:	str	lr, [sp, #20]
   11af4:	str	lr, [sp, #24]
   11af8:	str	ip, [sp, #28]
   11afc:	str	ip, [sp, #32]
   11b00:	str	ip, [sp, #40]	; 0x28
   11b04:	str	r5, [sp, #48]	; 0x30
   11b08:	str	r5, [sp, #52]	; 0x34
   11b0c:	str	r6, [sp, #56]	; 0x38
   11b10:	str	r7, [sp, #68]	; 0x44
   11b14:	str	r5, [sp, #76]	; 0x4c
   11b18:	str	r5, [sp, #80]	; 0x50
   11b1c:	str	r4, [sp, #84]	; 0x54
   11b20:	str	r4, [sp, #92]	; 0x5c
   11b24:	str	ip, [sp, #96]	; 0x60
   11b28:	str	r4, [sp, #100]	; 0x64
   11b2c:	str	lr, [sp, #104]	; 0x68
   11b30:	str	r4, [sp, #108]	; 0x6c
   11b34:	bl	10cd8 <_g@@Base>
   11b38:	mov	r7, r0
   11b3c:	ldr	r0, [pc, #168]	; 11bec <teste_v_celebridade@@Base+0x168>
   11b40:	add	r0, pc, r0
   11b44:	bl	10aa4 <printf@plt>
   11b48:	mov	r1, r6
   11b4c:	mov	r0, r7
   11b50:	bl	120bc <v_celebridade@@Base>
   11b54:	subs	r6, r0, #0
   11b58:	bne	11b9c <teste_v_celebridade@@Base+0x118>
   11b5c:	mov	r1, r4
   11b60:	mov	r0, r7
   11b64:	bl	120bc <v_celebridade@@Base>
   11b68:	cmp	r0, #1
   11b6c:	bne	11be4 <teste_v_celebridade@@Base+0x160>
   11b70:	mov	r0, r7
   11b74:	bl	11c9c <grafo_apaga@@Base>
   11b78:	ldr	r0, [pc, #112]	; 11bf0 <teste_v_celebridade@@Base+0x16c>
   11b7c:	add	r0, pc, r0
   11b80:	bl	10ac8 <puts@plt>
   11b84:	mov	r0, r6
   11b88:	add	sp, sp, #116	; 0x74
   11b8c:	ldrd	r4, [sp]
   11b90:	ldrd	r6, [sp, #8]
   11b94:	add	sp, sp, #16
   11b98:	pop	{pc}		; (ldr pc, [sp], #4)
   11b9c:	ldr	r0, [pc, #80]	; 11bf4 <teste_v_celebridade@@Base+0x170>
   11ba0:	add	r0, pc, r0
   11ba4:	bl	10aa4 <printf@plt>
   11ba8:	mov	r1, r4
   11bac:	mov	r0, r7
   11bb0:	bl	120bc <v_celebridade@@Base>
   11bb4:	cmp	r0, r5
   11bb8:	mov	r6, r0
   11bbc:	beq	11bd0 <teste_v_celebridade@@Base+0x14c>
   11bc0:	mov	r6, r4
   11bc4:	ldr	r0, [pc, #44]	; 11bf8 <teste_v_celebridade@@Base+0x174>
   11bc8:	add	r0, pc, r0
   11bcc:	bl	10aa4 <printf@plt>
   11bd0:	mov	r0, r7
   11bd4:	bl	11c9c <grafo_apaga@@Base>
   11bd8:	mov	r0, #10
   11bdc:	bl	10b04 <putchar@plt>
   11be0:	b	11b84 <teste_v_celebridade@@Base+0x100>
   11be4:	mov	r6, r5
   11be8:	b	11bc4 <teste_v_celebridade@@Base+0x140>
   11bec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11bf0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11bf4:	andeq	r0, r0, r4, lsr #31
   11bf8:			; <UNDEFINED> instruction: 0x00000fb4

00011bfc <cria_elem@@Base>:
   11bfc:	str	r4, [sp, #-8]!
   11c00:	mov	r4, r0
   11c04:	mov	r0, #8
   11c08:	str	lr, [sp, #4]
   11c0c:	bl	10ad4 <malloc@plt>
   11c10:	cmp	r0, #0
   11c14:	beq	11c24 <cria_elem@@Base+0x28>
   11c18:	mov	r3, #0
   11c1c:	str	r4, [r0]
   11c20:	str	r3, [r0, #4]
   11c24:	ldr	r4, [sp]
   11c28:	add	sp, sp, #4
   11c2c:	pop	{pc}		; (ldr pc, [sp], #4)

00011c30 <grafo_novo@@Base>:
   11c30:	strd	r4, [sp, #-16]!
   11c34:	subs	r5, r0, #0
   11c38:	str	r6, [sp, #8]
   11c3c:	movle	r6, #0
   11c40:	str	lr, [sp, #12]
   11c44:	ble	11c88 <grafo_novo@@Base+0x58>
   11c48:	mov	r0, #8
   11c4c:	lsl	r4, r5, #3
   11c50:	bl	10ad4 <malloc@plt>
   11c54:	mov	r6, r0
   11c58:	mov	r0, r4
   11c5c:	str	r5, [r6]
   11c60:	bl	10ad4 <malloc@plt>
   11c64:	mov	r3, r0
   11c68:	mov	r2, #0
   11c6c:	str	r0, [r6, #4]
   11c70:	add	r1, r0, r4
   11c74:	add	r3, r3, #8
   11c78:	str	r2, [r3, #-8]
   11c7c:	str	r2, [r3, #-4]
   11c80:	cmp	r3, r1
   11c84:	bne	11c74 <grafo_novo@@Base+0x44>
   11c88:	mov	r0, r6
   11c8c:	ldrd	r4, [sp]
   11c90:	ldr	r6, [sp, #8]
   11c94:	add	sp, sp, #12
   11c98:	pop	{pc}		; (ldr pc, [sp], #4)

00011c9c <grafo_apaga@@Base>:
   11c9c:	strd	r4, [sp, #-16]!
   11ca0:	str	r6, [sp, #8]
   11ca4:	subs	r6, r0, #0
   11ca8:	str	lr, [sp, #12]
   11cac:	beq	11d10 <grafo_apaga@@Base+0x74>
   11cb0:	ldrd	r2, [r6]
   11cb4:	cmp	r2, #0
   11cb8:	ble	11cf0 <grafo_apaga@@Base+0x54>
   11cbc:	mov	r5, #0
   11cc0:	add	r1, r3, r5, lsl #3
   11cc4:	ldr	r0, [r1, #4]
   11cc8:	cmp	r0, #0
   11ccc:	beq	11ce4 <grafo_apaga@@Base+0x48>
   11cd0:	ldr	r4, [r0, #4]
   11cd4:	bl	10ab0 <free@plt>
   11cd8:	subs	r0, r4, #0
   11cdc:	bne	11cd0 <grafo_apaga@@Base+0x34>
   11ce0:	ldrd	r2, [r6]
   11ce4:	add	r5, r5, #1
   11ce8:	cmp	r2, r5
   11cec:	bgt	11cc0 <grafo_apaga@@Base+0x24>
   11cf0:	mov	r0, r3
   11cf4:	bl	10ab0 <free@plt>
   11cf8:	mov	r0, r6
   11cfc:	ldrd	r4, [sp]
   11d00:	ldr	r6, [sp, #8]
   11d04:	ldr	lr, [sp, #12]
   11d08:	add	sp, sp, #16
   11d0c:	b	10ab0 <free@plt>
   11d10:	ldrd	r4, [sp]
   11d14:	ldr	r6, [sp, #8]
   11d18:	add	sp, sp, #12
   11d1c:	pop	{pc}		; (ldr pc, [sp], #4)

00011d20 <grafo_aresta@@Base>:
   11d20:	cmp	r0, #0
   11d24:	beq	11d74 <grafo_aresta@@Base+0x54>
   11d28:	ldr	r3, [r0]
   11d2c:	cmp	r3, r1
   11d30:	blt	11d74 <grafo_aresta@@Base+0x54>
   11d34:	cmp	r3, r2
   11d38:	blt	11d7c <grafo_aresta@@Base+0x5c>
   11d3c:	ldr	r3, [r0, #4]
   11d40:	add	r1, r3, r1, lsl #3
   11d44:	ldr	r0, [r1, #4]
   11d48:	cmp	r0, #0
   11d4c:	bne	11d60 <grafo_aresta@@Base+0x40>
   11d50:	b	11d70 <grafo_aresta@@Base+0x50>
   11d54:	ldr	r0, [r0, #4]
   11d58:	cmp	r0, #0
   11d5c:	beq	11d84 <grafo_aresta@@Base+0x64>
   11d60:	ldr	r3, [r0]
   11d64:	cmp	r2, r3
   11d68:	bne	11d54 <grafo_aresta@@Base+0x34>
   11d6c:	mov	r0, #1
   11d70:	bx	lr
   11d74:	mvn	r0, #0
   11d78:	bx	lr
   11d7c:	mov	r0, #0
   11d80:	bx	lr
   11d84:	bx	lr

00011d88 <grafo_adiciona@@Base>:
   11d88:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d8c:	strd	r6, [sp, #8]
   11d90:	subs	r7, r0, #0
   11d94:	str	r8, [sp, #16]
   11d98:	str	lr, [sp, #20]
   11d9c:	beq	11dc0 <grafo_adiciona@@Base+0x38>
   11da0:	ldr	r3, [r7]
   11da4:	mov	r5, r1
   11da8:	mov	r6, r2
   11dac:	cmp	r3, r2
   11db0:	cmpge	r3, r1
   11db4:	movlt	r4, #1
   11db8:	movge	r4, #0
   11dbc:	bge	11ddc <grafo_adiciona@@Base+0x54>
   11dc0:	mvn	r3, #0
   11dc4:	ldrd	r4, [sp]
   11dc8:	mov	r0, r3
   11dcc:	ldrd	r6, [sp, #8]
   11dd0:	ldr	r8, [sp, #16]
   11dd4:	add	sp, sp, #20
   11dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   11ddc:	bl	11d20 <grafo_aresta@@Base>
   11de0:	cmp	r0, #1
   11de4:	moveq	r3, r4
   11de8:	beq	11dc4 <grafo_adiciona@@Base+0x3c>
   11dec:	ldr	r3, [r7, #4]
   11df0:	lsl	r4, r5, #3
   11df4:	mov	r0, r6
   11df8:	add	r5, r3, r4
   11dfc:	ldr	r6, [r5, #4]
   11e00:	bl	11bfc <cria_elem@@Base>
   11e04:	ldr	r2, [r7, #4]
   11e08:	mov	r3, #1
   11e0c:	ldr	r1, [r2]
   11e10:	add	r4, r2, r4
   11e14:	str	r0, [r5, #4]
   11e18:	ldr	r0, [r4, #4]
   11e1c:	add	r1, r1, r3
   11e20:	str	r6, [r0, #4]
   11e24:	str	r1, [r2]
   11e28:	b	11dc4 <grafo_adiciona@@Base+0x3c>

00011e2c <grafo_remove@@Base>:
   11e2c:	cmp	r0, #0
   11e30:	beq	11e4c <grafo_remove@@Base+0x20>
   11e34:	ldr	ip, [r0]
   11e38:	cmp	r1, r2
   11e3c:	movge	r3, r1
   11e40:	movlt	r3, r2
   11e44:	cmp	ip, r3
   11e48:	bge	11e54 <grafo_remove@@Base+0x28>
   11e4c:	mvn	r0, #0
   11e50:	bx	lr
   11e54:	str	r4, [sp, #-8]!
   11e58:	ldr	r4, [r0, #4]
   11e5c:	str	lr, [sp, #4]
   11e60:	add	r1, r4, r1, lsl #3
   11e64:	ldr	lr, [r1, #4]
   11e68:	cmp	lr, #0
   11e6c:	moveq	r0, lr
   11e70:	beq	11ea4 <grafo_remove@@Base+0x78>
   11e74:	ldm	lr, {r0, r3}
   11e78:	cmp	r0, r2
   11e7c:	bne	11e98 <grafo_remove@@Base+0x6c>
   11e80:	b	11ed0 <grafo_remove@@Base+0xa4>
   11e84:	ldm	r3, {r1, ip}
   11e88:	cmp	r1, r2
   11e8c:	beq	11eb0 <grafo_remove@@Base+0x84>
   11e90:	mov	lr, r3
   11e94:	mov	r3, ip
   11e98:	cmp	r3, #0
   11e9c:	bne	11e84 <grafo_remove@@Base+0x58>
   11ea0:	mov	r0, r3
   11ea4:	ldr	r4, [sp]
   11ea8:	add	sp, sp, #4
   11eac:	pop	{pc}		; (ldr pc, [sp], #4)
   11eb0:	ldr	r2, [r4]
   11eb4:	mov	r0, r3
   11eb8:	str	ip, [lr, #4]
   11ebc:	sub	r3, r2, #1
   11ec0:	str	r3, [r4]
   11ec4:	bl	10ab0 <free@plt>
   11ec8:	mov	r0, #1
   11ecc:	b	11ea4 <grafo_remove@@Base+0x78>
   11ed0:	ldr	r2, [r4]
   11ed4:	mov	r0, lr
   11ed8:	str	r3, [r1, #4]
   11edc:	sub	r3, r2, #1
   11ee0:	str	r3, [r4]
   11ee4:	bl	10ab0 <free@plt>
   11ee8:	mov	r0, #1
   11eec:	b	11ea4 <grafo_remove@@Base+0x78>

00011ef0 <v_sucessores@@Base>:
   11ef0:	strd	r4, [sp, #-16]!
   11ef4:	str	r6, [sp, #8]
   11ef8:	subs	r6, r0, #0
   11efc:	moveq	r5, r6
   11f00:	str	lr, [sp, #12]
   11f04:	beq	11f20 <v_sucessores@@Base+0x30>
   11f08:	ldr	r3, [r6]
   11f0c:	cmp	r1, #0
   11f10:	cmpge	r3, r1
   11f14:	movgt	r5, #1
   11f18:	movle	r5, #0
   11f1c:	bgt	11f34 <v_sucessores@@Base+0x44>
   11f20:	mov	r0, r5
   11f24:	ldrd	r4, [sp]
   11f28:	ldr	r6, [sp, #8]
   11f2c:	add	sp, sp, #12
   11f30:	pop	{pc}		; (ldr pc, [sp], #4)
   11f34:	mov	r4, r1
   11f38:	bl	12174 <vetor_novo@@Base>
   11f3c:	ldr	r1, [r6, #4]
   11f40:	mov	r5, r0
   11f44:	add	r1, r1, r4, lsl #3
   11f48:	ldr	r4, [r1, #4]
   11f4c:	cmp	r4, #0
   11f50:	beq	11f20 <v_sucessores@@Base+0x30>
   11f54:	mov	r6, #0
   11f58:	mov	r2, r6
   11f5c:	mov	r0, r5
   11f60:	ldr	r1, [r4]
   11f64:	bl	1225c <vetor_insere@@Base>
   11f68:	ldr	r4, [r4, #4]
   11f6c:	add	r6, r6, #1
   11f70:	cmp	r4, #0
   11f74:	bne	11f58 <v_sucessores@@Base+0x68>
   11f78:	b	11f20 <v_sucessores@@Base+0x30>

00011f7c <v_antecessores@@Base>:
   11f7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11f80:	strd	r6, [sp, #8]
   11f84:	subs	r7, r0, #0
   11f88:	moveq	r6, r7
   11f8c:	str	r8, [sp, #16]
   11f90:	str	lr, [sp, #20]
   11f94:	beq	11fb0 <v_antecessores@@Base+0x34>
   11f98:	ldr	r6, [r7]
   11f9c:	cmp	r1, #0
   11fa0:	cmpge	r6, r1
   11fa4:	movgt	r6, #1
   11fa8:	movle	r6, #0
   11fac:	bgt	11fc8 <v_antecessores@@Base+0x4c>
   11fb0:	mov	r0, r6
   11fb4:	ldrd	r4, [sp]
   11fb8:	ldrd	r6, [sp, #8]
   11fbc:	ldr	r8, [sp, #16]
   11fc0:	add	sp, sp, #20
   11fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   11fc8:	mov	r4, r1
   11fcc:	bl	12174 <vetor_novo@@Base>
   11fd0:	ldr	r1, [r7]
   11fd4:	mov	r6, r0
   11fd8:	cmp	r1, #0
   11fdc:	ble	11fb0 <v_antecessores@@Base+0x34>
   11fe0:	mov	r8, #0
   11fe4:	mov	r5, r8
   11fe8:	ldr	r3, [r7, #4]
   11fec:	add	r3, r3, r5, lsl #3
   11ff0:	b	12000 <v_antecessores@@Base+0x84>
   11ff4:	ldr	r2, [r3]
   11ff8:	cmp	r4, r2
   11ffc:	beq	1201c <v_antecessores@@Base+0xa0>
   12000:	ldr	r3, [r3, #4]
   12004:	cmp	r3, #0
   12008:	bne	11ff4 <v_antecessores@@Base+0x78>
   1200c:	add	r5, r5, #1
   12010:	cmp	r5, r1
   12014:	blt	11fe8 <v_antecessores@@Base+0x6c>
   12018:	b	11fb0 <v_antecessores@@Base+0x34>
   1201c:	mov	r1, r5
   12020:	mov	r2, r8
   12024:	mov	r0, r6
   12028:	add	r5, r5, #1
   1202c:	bl	1225c <vetor_insere@@Base>
   12030:	ldr	r1, [r7]
   12034:	add	r8, r8, #1
   12038:	cmp	r5, r1
   1203c:	blt	11fe8 <v_antecessores@@Base+0x6c>
   12040:	b	11fb0 <v_antecessores@@Base+0x34>

00012044 <v_grau@@Base>:
   12044:	subs	r2, r1, #0
   12048:	strd	r4, [sp, #-16]!
   1204c:	str	r6, [sp, #8]
   12050:	str	lr, [sp, #12]
   12054:	blt	120b4 <v_grau@@Base+0x70>
   12058:	mov	r5, r2
   1205c:	mov	r4, r0
   12060:	bl	11f7c <v_antecessores@@Base>
   12064:	mov	r6, r0
   12068:	mov	r1, r5
   1206c:	mov	r0, r4
   12070:	bl	11ef0 <v_sucessores@@Base>
   12074:	mov	r5, r0
   12078:	mov	r0, r6
   1207c:	bl	12218 <vetor_tamanho@@Base>
   12080:	mov	r4, r0
   12084:	mov	r0, r5
   12088:	bl	12218 <vetor_tamanho@@Base>
   1208c:	add	r4, r4, r0
   12090:	mov	r0, r6
   12094:	bl	121a8 <vetor_apaga@@Base>
   12098:	mov	r0, r5
   1209c:	bl	121a8 <vetor_apaga@@Base>
   120a0:	mov	r0, r4
   120a4:	ldrd	r4, [sp]
   120a8:	ldr	r6, [sp, #8]
   120ac:	add	sp, sp, #12
   120b0:	pop	{pc}		; (ldr pc, [sp], #4)
   120b4:	mvn	r4, #0
   120b8:	b	120a0 <v_grau@@Base+0x5c>

000120bc <v_celebridade@@Base>:
   120bc:	subs	r3, r0, #0
   120c0:	beq	1216c <v_celebridade@@Base+0xb0>
   120c4:	ldr	r0, [r3, #4]
   120c8:	ldr	ip, [r0, r1, lsl #3]
   120cc:	cmp	ip, #0
   120d0:	bne	1215c <v_celebridade@@Base+0xa0>
   120d4:	str	r4, [sp, #-8]!
   120d8:	ldr	r4, [r3]
   120dc:	str	lr, [sp, #4]
   120e0:	cmp	r4, #0
   120e4:	ble	12164 <v_celebridade@@Base+0xa8>
   120e8:	add	lr, r0, r4, lsl #3
   120ec:	ldr	r3, [r0, #4]
   120f0:	cmp	r3, #0
   120f4:	beq	12120 <v_celebridade@@Base+0x64>
   120f8:	ldr	r2, [r3]
   120fc:	cmp	r1, r2
   12100:	bne	12114 <v_celebridade@@Base+0x58>
   12104:	b	12148 <v_celebridade@@Base+0x8c>
   12108:	ldr	r2, [r3]
   1210c:	cmp	r2, r1
   12110:	beq	12148 <v_celebridade@@Base+0x8c>
   12114:	ldr	r3, [r3, #4]
   12118:	cmp	r3, #0
   1211c:	bne	12108 <v_celebridade@@Base+0x4c>
   12120:	add	r0, r0, #8
   12124:	cmp	lr, r0
   12128:	bne	120ec <v_celebridade@@Base+0x30>
   1212c:	add	ip, ip, #1
   12130:	sub	r0, r4, ip
   12134:	ldr	r4, [sp]
   12138:	add	sp, sp, #4
   1213c:	clz	r0, r0
   12140:	lsr	r0, r0, #5
   12144:	pop	{pc}		; (ldr pc, [sp], #4)
   12148:	add	r0, r0, #8
   1214c:	add	ip, ip, #1
   12150:	cmp	lr, r0
   12154:	bne	120ec <v_celebridade@@Base+0x30>
   12158:	b	1212c <v_celebridade@@Base+0x70>
   1215c:	mov	r0, #0
   12160:	bx	lr
   12164:	mov	ip, #1
   12168:	b	12130 <v_celebridade@@Base+0x74>
   1216c:	mvn	r0, #0
   12170:	bx	lr

00012174 <vetor_novo@@Base>:
   12174:	mov	r0, #12
   12178:	str	r4, [sp, #-8]!
   1217c:	str	lr, [sp, #4]
   12180:	bl	10ad4 <malloc@plt>
   12184:	cmp	r0, #0
   12188:	beq	1219c <vetor_novo@@Base+0x28>
   1218c:	mov	r3, #0
   12190:	str	r3, [r0]
   12194:	str	r3, [r0, #4]
   12198:	str	r3, [r0, #8]
   1219c:	ldr	r4, [sp]
   121a0:	add	sp, sp, #4
   121a4:	pop	{pc}		; (ldr pc, [sp], #4)

000121a8 <vetor_apaga@@Base>:
   121a8:	str	r4, [sp, #-8]!
   121ac:	subs	r4, r0, #0
   121b0:	str	lr, [sp, #4]
   121b4:	beq	121d4 <vetor_apaga@@Base+0x2c>
   121b8:	ldr	r0, [r4, #8]
   121bc:	bl	10ab0 <free@plt>
   121c0:	mov	r0, r4
   121c4:	ldr	r4, [sp]
   121c8:	ldr	lr, [sp, #4]
   121cc:	add	sp, sp, #8
   121d0:	b	10ab0 <free@plt>
   121d4:	ldr	r4, [sp]
   121d8:	add	sp, sp, #4
   121dc:	pop	{pc}		; (ldr pc, [sp], #4)

000121e0 <vetor_atribui@@Base>:
   121e0:	cmp	r0, #0
   121e4:	lsrne	r3, r1, #31
   121e8:	moveq	r3, #1
   121ec:	cmp	r3, #0
   121f0:	bne	12210 <vetor_atribui@@Base+0x30>
   121f4:	ldr	r3, [r0]
   121f8:	cmp	r3, r1
   121fc:	ble	12210 <vetor_atribui@@Base+0x30>
   12200:	ldr	r3, [r0, #8]
   12204:	mov	r0, r1
   12208:	str	r2, [r3, r1, lsl #2]
   1220c:	bx	lr
   12210:	mvn	r0, #0
   12214:	bx	lr

00012218 <vetor_tamanho@@Base>:
   12218:	cmp	r0, #0
   1221c:	ldrne	r0, [r0]
   12220:	mvneq	r0, #0
   12224:	bx	lr

00012228 <vetor_elemento@@Base>:
   12228:	cmp	r0, #0
   1222c:	lsrne	r3, r1, #31
   12230:	moveq	r3, #1
   12234:	cmp	r3, #0
   12238:	bne	12254 <vetor_elemento@@Base+0x2c>
   1223c:	ldr	r3, [r0]
   12240:	cmp	r3, r1
   12244:	ble	12254 <vetor_elemento@@Base+0x2c>
   12248:	ldr	r3, [r0, #8]
   1224c:	ldr	r0, [r3, r1, lsl #2]
   12250:	bx	lr
   12254:	mov	r0, #-2147483648	; 0x80000000
   12258:	bx	lr

0001225c <vetor_insere@@Base>:
   1225c:	cmn	r2, #1
   12260:	movge	r3, #0
   12264:	movlt	r3, #1
   12268:	cmp	r0, #0
   1226c:	moveq	r3, #1
   12270:	cmp	r3, #0
   12274:	bne	1232c <vetor_insere@@Base+0xd0>
   12278:	strd	r4, [sp, #-16]!
   1227c:	mov	r4, r2
   12280:	mov	r5, r0
   12284:	str	r6, [sp, #8]
   12288:	mov	r6, r1
   1228c:	ldr	r1, [r0]
   12290:	str	lr, [sp, #12]
   12294:	cmp	r1, r2
   12298:	blt	12324 <vetor_insere@@Base+0xc8>
   1229c:	ldr	r3, [r0, #4]
   122a0:	cmn	r2, #1
   122a4:	moveq	r4, r1
   122a8:	ldr	r0, [r0, #8]
   122ac:	cmp	r1, r3
   122b0:	beq	122f4 <vetor_insere@@Base+0x98>
   122b4:	cmp	r4, r1
   122b8:	addlt	r3, r0, r1, lsl #2
   122bc:	addlt	r2, r0, r4, lsl #2
   122c0:	bge	122d4 <vetor_insere@@Base+0x78>
   122c4:	ldr	ip, [r3, #-4]
   122c8:	str	ip, [r3], #-4
   122cc:	cmp	r2, r3
   122d0:	bne	122c4 <vetor_insere@@Base+0x68>
   122d4:	add	r1, r1, #1
   122d8:	str	r6, [r0, r4, lsl #2]
   122dc:	mov	r0, r4
   122e0:	str	r1, [r5]
   122e4:	ldrd	r4, [sp]
   122e8:	ldr	r6, [sp, #8]
   122ec:	add	sp, sp, #12
   122f0:	pop	{pc}		; (ldr pc, [sp], #4)
   122f4:	cmp	r1, #0
   122f8:	lslne	r3, r1, #1
   122fc:	moveq	r3, #1
   12300:	moveq	r1, #4
   12304:	lslne	r1, r1, #3
   12308:	str	r3, [r5, #4]
   1230c:	bl	10abc <realloc@plt>
   12310:	cmp	r0, #0
   12314:	str	r0, [r5, #8]
   12318:	beq	12324 <vetor_insere@@Base+0xc8>
   1231c:	ldr	r1, [r5]
   12320:	b	122b4 <vetor_insere@@Base+0x58>
   12324:	mvn	r0, #0
   12328:	b	122e4 <vetor_insere@@Base+0x88>
   1232c:	mvn	r0, #0
   12330:	bx	lr

00012334 <vetor_remove@@Base>:
   12334:	cmp	r0, #0
   12338:	lsrne	r3, r1, #31
   1233c:	moveq	r3, #1
   12340:	cmp	r3, #0
   12344:	bne	12394 <vetor_remove@@Base+0x60>
   12348:	ldr	ip, [r0]
   1234c:	cmp	ip, r1
   12350:	ble	12394 <vetor_remove@@Base+0x60>
   12354:	add	r3, r1, #1
   12358:	cmp	ip, r3
   1235c:	ble	12380 <vetor_remove@@Base+0x4c>
   12360:	ldr	r3, [r0, #8]
   12364:	sub	r2, r3, #4
   12368:	add	r1, r3, r1, lsl #2
   1236c:	add	r2, r2, ip, lsl #2
   12370:	ldr	r3, [r1, #4]
   12374:	str	r3, [r1], #4
   12378:	cmp	r1, r2
   1237c:	bne	12370 <vetor_remove@@Base+0x3c>
   12380:	sub	ip, ip, #1
   12384:	mov	r3, #0
   12388:	str	ip, [r0]
   1238c:	mov	r0, r3
   12390:	bx	lr
   12394:	mvn	r3, #0
   12398:	b	1238c <vetor_remove@@Base+0x58>

0001239c <vetor_pesquisa@@Base>:
   1239c:	cmp	r0, #0
   123a0:	beq	123e0 <vetor_pesquisa@@Base+0x44>
   123a4:	ldr	ip, [r0]
   123a8:	cmp	ip, #0
   123ac:	ble	123e0 <vetor_pesquisa@@Base+0x44>
   123b0:	ldr	r3, [r0, #8]
   123b4:	mov	r0, #0
   123b8:	ldr	r2, [r3]
   123bc:	cmp	r1, r2
   123c0:	bne	123d4 <vetor_pesquisa@@Base+0x38>
   123c4:	b	123e8 <vetor_pesquisa@@Base+0x4c>
   123c8:	ldr	r2, [r3, #4]!
   123cc:	cmp	r2, r1
   123d0:	beq	123e8 <vetor_pesquisa@@Base+0x4c>
   123d4:	add	r0, r0, #1
   123d8:	cmp	ip, r0
   123dc:	bne	123c8 <vetor_pesquisa@@Base+0x2c>
   123e0:	mvn	r0, #0
   123e4:	bx	lr
   123e8:	bx	lr

000123ec <vetor_ordena@@Base>:
   123ec:	cmp	r0, #0
   123f0:	beq	1246c <vetor_ordena@@Base+0x80>
   123f4:	strd	r4, [sp, #-16]!
   123f8:	ldr	r5, [r0]
   123fc:	str	r6, [sp, #8]
   12400:	str	lr, [sp, #12]
   12404:	cmp	r5, #1
   12408:	ble	12458 <vetor_ordena@@Base+0x6c>
   1240c:	ldr	r6, [r0, #8]
   12410:	mov	lr, #1
   12414:	mov	r4, r6
   12418:	ldr	ip, [r4, #4]!
   1241c:	mov	r2, lr
   12420:	mov	r3, r4
   12424:	ldr	r1, [r3, #-4]
   12428:	mov	r0, r3
   1242c:	cmp	r1, ip
   12430:	ble	12448 <vetor_ordena@@Base+0x5c>
   12434:	subs	r2, r2, #1
   12438:	str	r1, [r3]
   1243c:	sub	r3, r0, #4
   12440:	bne	12424 <vetor_ordena@@Base+0x38>
   12444:	mov	r0, r6
   12448:	add	lr, lr, #1
   1244c:	str	ip, [r0]
   12450:	cmp	lr, r5
   12454:	bne	12418 <vetor_ordena@@Base+0x2c>
   12458:	ldrd	r4, [sp]
   1245c:	mov	r0, #0
   12460:	ldr	r6, [sp, #8]
   12464:	add	sp, sp, #12
   12468:	pop	{pc}		; (ldr pc, [sp], #4)
   1246c:	mvn	r0, #0
   12470:	bx	lr

00012474 <__libc_csu_init@@Base>:
   12474:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12478:	mov	r7, r0
   1247c:	ldr	r6, [pc, #72]	; 124cc <__libc_csu_init@@Base+0x58>
   12480:	ldr	r5, [pc, #72]	; 124d0 <__libc_csu_init@@Base+0x5c>
   12484:	add	r6, pc, r6
   12488:	add	r5, pc, r5
   1248c:	sub	r6, r6, r5
   12490:	mov	r8, r1
   12494:	mov	r9, r2
   12498:	bl	10a78 <calloc@plt-0x20>
   1249c:	asrs	r6, r6, #2
   124a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   124a4:	mov	r4, #0
   124a8:	add	r4, r4, #1
   124ac:	ldr	r3, [r5], #4
   124b0:	mov	r2, r9
   124b4:	mov	r1, r8
   124b8:	mov	r0, r7
   124bc:	blx	r3
   124c0:	cmp	r6, r4
   124c4:	bne	124a8 <__libc_csu_init@@Base+0x34>
   124c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124cc:	andeq	r0, r1, r8, lsl #21
   124d0:	andeq	r0, r1, r0, lsl #21

000124d4 <__libc_csu_fini@@Base>:
   124d4:	bx	lr

Disassembly of section .fini:

000124d8 <.fini>:
   124d8:	push	{r3, lr}
   124dc:	pop	{r3, pc}
