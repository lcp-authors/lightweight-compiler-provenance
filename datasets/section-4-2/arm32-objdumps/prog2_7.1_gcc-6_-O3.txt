
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010d10 <.init>:
   10d10:	push	{r3, lr}
   10d14:	bl	10ff8 <_start@@Base+0x3c>
   10d18:	pop	{r3, pc}

Disassembly of section .plt:

00010d1c <strcmp@plt-0x14>:
   10d1c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d20:	ldr	lr, [pc, #4]	; 10d2c <strcmp@plt-0x4>
   10d24:	add	lr, pc, lr
   10d28:	ldr	pc, [lr, #8]!
   10d2c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>

00010d30 <strcmp@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #724]!	; 0x2d4

00010d3c <printf@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #716]!	; 0x2cc

00010d48 <fopen@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #708]!	; 0x2c4

00010d54 <free@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #700]!	; 0x2bc

00010d60 <fgets@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #692]!	; 0x2b4

00010d6c <memcpy@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #684]!	; 0x2ac

00010d78 <stpcpy@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #676]!	; 0x2a4

00010d84 <realloc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #668]!	; 0x29c

00010d90 <strcpy@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #660]!	; 0x294

00010d9c <puts@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #652]!	; 0x28c

00010da8 <malloc@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #644]!	; 0x284

00010db4 <__libc_start_main@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #636]!	; 0x27c

00010dc0 <__gmon_start__@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #628]!	; 0x274

00010dcc <strlen@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #620]!	; 0x26c

00010dd8 <putchar@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #612]!	; 0x264

00010de4 <fclose@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #604]!	; 0x25c

00010df0 <strtok@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #596]!	; 0x254

00010dfc <abort@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #588]!	; 0x24c

Disassembly of section .text:

00010e08 <main@@Base>:
   10e08:	push	{r4, r5, r6, r7, r8, r9, lr}
   10e0c:	sub	sp, sp, #148	; 0x94
   10e10:	ldr	r0, [pc, #376]	; 10f90 <main@@Base+0x188>
   10e14:	bl	10d9c <puts@plt>
   10e18:	ldr	lr, [pc, #372]	; 10f94 <main@@Base+0x18c>
   10e1c:	add	ip, sp, #4
   10e20:	mov	r4, sp
   10e24:	ldm	lr!, {r0, r1, r2, r3}
   10e28:	add	r6, sp, #40	; 0x28
   10e2c:	stmia	ip!, {r0, r1, r2, r3}
   10e30:	ldm	lr!, {r0, r1, r2, r3}
   10e34:	stmia	ip!, {r0, r1, r2, r3}
   10e38:	ldm	lr, {r0, r1}
   10e3c:	stm	ip, {r0, r1}
   10e40:	bl	12e0c <bst_nova@@Base>
   10e44:	mov	r5, r0
   10e48:	ldr	r1, [r4, #4]!
   10e4c:	mov	r0, r5
   10e50:	bl	13190 <bst_insere@@Base>
   10e54:	cmp	r4, r6
   10e58:	bne	10e48 <main@@Base+0x40>
   10e5c:	ldr	r0, [r5]
   10e60:	bl	1396c <bst_altura@@Base>
   10e64:	add	r4, sp, #44	; 0x2c
   10e68:	mov	r9, #100	; 0x64
   10e6c:	mov	r6, #0
   10e70:	mov	r1, r0
   10e74:	ldr	r0, [pc, #284]	; 10f98 <main@@Base+0x190>
   10e78:	bl	10d3c <printf@plt>
   10e7c:	mov	r0, r5
   10e80:	bl	145bc <bst_imprime@@Base>
   10e84:	ldr	r0, [pc, #272]	; 10f9c <main@@Base+0x194>
   10e88:	bl	10d9c <puts@plt>
   10e8c:	bl	110e4 <avl_nova@@Base>
   10e90:	ldr	r1, [pc, #264]	; 10fa0 <main@@Base+0x198>
   10e94:	ldr	r5, [pc, #264]	; 10fa4 <main@@Base+0x19c>
   10e98:	mov	r7, r0
   10e9c:	ldr	r0, [pc, #260]	; 10fa8 <main@@Base+0x1a0>
   10ea0:	bl	10d48 <fopen@plt>
   10ea4:	mov	r8, r0
   10ea8:	b	10ef0 <main@@Base+0xe8>
   10eac:	bl	10df0 <strtok@plt>
   10eb0:	mov	r1, r0
   10eb4:	mov	r0, r4
   10eb8:	bl	10d90 <strcpy@plt>
   10ebc:	mov	r1, r5
   10ec0:	mov	r0, r6
   10ec4:	bl	10df0 <strtok@plt>
   10ec8:	mov	r1, r0
   10ecc:	mov	r0, r4
   10ed0:	bl	10d78 <stpcpy@plt>
   10ed4:	add	r3, sp, #144	; 0x90
   10ed8:	mov	r1, r4
   10edc:	sub	r0, r0, r4
   10ee0:	add	r3, r3, r0
   10ee4:	mov	r0, r7
   10ee8:	strb	r6, [r3, #-101]	; 0xffffff9b
   10eec:	bl	1180c <avl_insere@@Base>
   10ef0:	mov	r1, r9
   10ef4:	mov	r2, r8
   10ef8:	mov	r0, r4
   10efc:	bl	10d60 <fgets@plt>
   10f00:	mov	r1, r5
   10f04:	cmp	r0, #0
   10f08:	mov	r0, r4
   10f0c:	bne	10eac <main@@Base+0xa4>
   10f10:	mov	r0, r8
   10f14:	bl	10de4 <fclose@plt>
   10f18:	ldr	r1, [pc, #140]	; 10fac <main@@Base+0x1a4>
   10f1c:	mov	r0, r7
   10f20:	bl	11100 <avl_pesquisa@@Base>
   10f24:	cmp	r0, #0
   10f28:	beq	10f3c <main@@Base+0x134>
   10f2c:	ldr	r2, [r0, #16]
   10f30:	ldr	r1, [r0]
   10f34:	ldr	r0, [pc, #116]	; 10fb0 <main@@Base+0x1a8>
   10f38:	bl	10d3c <printf@plt>
   10f3c:	ldr	r1, [pc, #112]	; 10fb4 <main@@Base+0x1ac>
   10f40:	mov	r0, r7
   10f44:	bl	11100 <avl_pesquisa@@Base>
   10f48:	cmp	r0, #0
   10f4c:	beq	10f60 <main@@Base+0x158>
   10f50:	ldr	r2, [r0, #16]
   10f54:	ldr	r1, [r0]
   10f58:	ldr	r0, [pc, #80]	; 10fb0 <main@@Base+0x1a8>
   10f5c:	bl	10d3c <printf@plt>
   10f60:	mov	r0, r7
   10f64:	ldr	r1, [pc, #76]	; 10fb8 <main@@Base+0x1b0>
   10f68:	bl	11100 <avl_pesquisa@@Base>
   10f6c:	cmp	r0, #0
   10f70:	beq	10f84 <main@@Base+0x17c>
   10f74:	ldr	r2, [r0, #16]
   10f78:	ldr	r1, [r0]
   10f7c:	ldr	r0, [pc, #44]	; 10fb0 <main@@Base+0x1a8>
   10f80:	bl	10d3c <printf@plt>
   10f84:	mov	r0, #0
   10f88:	add	sp, sp, #148	; 0x94
   10f8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10f90:	andeq	r4, r1, ip, lsr #13
   10f94:	andeq	r4, r1, r4, lsl #13
   10f98:			; <UNDEFINED> instruction: 0x000146b0
   10f9c:	andeq	r4, r1, r4, asr #13
   10fa0:	andeq	r4, r1, r8, asr #13
   10fa4:	ldrdeq	r4, [r1], -r8
   10fa8:	andeq	r4, r1, ip, asr #13
   10fac:	ldrdeq	r4, [r1], -ip
   10fb0:	andeq	r4, r1, r8, ror #13
   10fb4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10fb8:	strdeq	r4, [r1], -ip

00010fbc <_start@@Base>:
   10fbc:	mov	fp, #0
   10fc0:	mov	lr, #0
   10fc4:	pop	{r1}		; (ldr r1, [sp], #4)
   10fc8:	mov	r2, sp
   10fcc:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd0:	push	{r0}		; (str r0, [sp, #-4]!)
   10fd4:	ldr	ip, [pc, #16]	; 10fec <_start@@Base+0x30>
   10fd8:	push	{ip}		; (str ip, [sp, #-4]!)
   10fdc:	ldr	r0, [pc, #12]	; 10ff0 <_start@@Base+0x34>
   10fe0:	ldr	r3, [pc, #12]	; 10ff4 <_start@@Base+0x38>
   10fe4:	bl	10db4 <__libc_start_main@plt>
   10fe8:	bl	10dfc <abort@plt>
   10fec:	andeq	r4, r1, r4, ror r6
   10ff0:	andeq	r0, r1, r8, lsl #28
   10ff4:	andeq	r4, r1, r4, lsl r6
   10ff8:	ldr	r3, [pc, #20]	; 11014 <_start@@Base+0x58>
   10ffc:	ldr	r2, [pc, #20]	; 11018 <_start@@Base+0x5c>
   11000:	add	r3, pc, r3
   11004:	ldr	r2, [r3, r2]
   11008:	cmp	r2, #0
   1100c:	bxeq	lr
   11010:	b	10dc0 <__gmon_start__@plt>
   11014:	strdeq	r3, [r1], -r8
   11018:	andeq	r0, r0, r4, asr r0
   1101c:	ldr	r3, [pc, #28]	; 11040 <_start@@Base+0x84>
   11020:	ldr	r0, [pc, #28]	; 11044 <_start@@Base+0x88>
   11024:	sub	r3, r3, r0
   11028:	cmp	r3, #6
   1102c:	bxls	lr
   11030:	ldr	r3, [pc, #16]	; 11048 <_start@@Base+0x8c>
   11034:	cmp	r3, #0
   11038:	bxeq	lr
   1103c:	bx	r3
   11040:	andeq	r5, r2, r3, rrx
   11044:	andeq	r5, r2, r0, rrx
   11048:	andeq	r0, r0, r0
   1104c:	ldr	r1, [pc, #36]	; 11078 <_start@@Base+0xbc>
   11050:	ldr	r0, [pc, #36]	; 1107c <_start@@Base+0xc0>
   11054:	sub	r1, r1, r0
   11058:	asr	r1, r1, #2
   1105c:	add	r1, r1, r1, lsr #31
   11060:	asrs	r1, r1, #1
   11064:	bxeq	lr
   11068:	ldr	r3, [pc, #16]	; 11080 <_start@@Base+0xc4>
   1106c:	cmp	r3, #0
   11070:	bxeq	lr
   11074:	bx	r3
   11078:	andeq	r5, r2, r0, rrx
   1107c:	andeq	r5, r2, r0, rrx
   11080:	andeq	r0, r0, r0
   11084:	push	{r4, lr}
   11088:	ldr	r4, [pc, #24]	; 110a8 <_start@@Base+0xec>
   1108c:	ldrb	r3, [r4]
   11090:	cmp	r3, #0
   11094:	popne	{r4, pc}
   11098:	bl	1101c <_start@@Base+0x60>
   1109c:	mov	r3, #1
   110a0:	strb	r3, [r4]
   110a4:	pop	{r4, pc}
   110a8:	andeq	r5, r2, r0, rrx
   110ac:	ldr	r0, [pc, #40]	; 110dc <_start@@Base+0x120>
   110b0:	ldr	r3, [r0]
   110b4:	cmp	r3, #0
   110b8:	bne	110c0 <_start@@Base+0x104>
   110bc:	b	1104c <_start@@Base+0x90>
   110c0:	ldr	r3, [pc, #24]	; 110e0 <_start@@Base+0x124>
   110c4:	cmp	r3, #0
   110c8:	beq	110bc <_start@@Base+0x100>
   110cc:	push	{r4, lr}
   110d0:	blx	r3
   110d4:	pop	{r4, lr}
   110d8:	b	1104c <_start@@Base+0x90>
   110dc:	andeq	r4, r2, r4, lsl pc
   110e0:	andeq	r0, r0, r0

000110e4 <avl_nova@@Base>:
   110e4:	push	{r4, lr}
   110e8:	mov	r0, #4
   110ec:	bl	10da8 <malloc@plt>
   110f0:	cmp	r0, #0
   110f4:	movne	r3, #0
   110f8:	strne	r3, [r0]
   110fc:	pop	{r4, pc}

00011100 <avl_pesquisa@@Base>:
   11100:	cmp	r1, #0
   11104:	cmpne	r0, #0
   11108:	push	{r4, r5, r6, lr}
   1110c:	moveq	r4, #0
   11110:	beq	1114c <avl_pesquisa@@Base+0x4c>
   11114:	ldr	r4, [r0]
   11118:	mov	r5, r1
   1111c:	cmp	r4, #0
   11120:	beq	1114c <avl_pesquisa@@Base+0x4c>
   11124:	ldr	r1, [r4]
   11128:	mov	r0, r5
   1112c:	bl	10d30 <strcmp@plt>
   11130:	cmp	r0, #0
   11134:	ldrlt	r4, [r4, #4]
   11138:	blt	11144 <avl_pesquisa@@Base+0x44>
   1113c:	beq	1114c <avl_pesquisa@@Base+0x4c>
   11140:	ldr	r4, [r4, #8]
   11144:	cmp	r4, #0
   11148:	bne	11124 <avl_pesquisa@@Base+0x24>
   1114c:	mov	r0, r4
   11150:	pop	{r4, r5, r6, pc}

00011154 <avl_min@@Base>:
   11154:	cmp	r0, #0
   11158:	bxeq	lr
   1115c:	ldr	r2, [r0]
   11160:	b	11168 <avl_min@@Base+0x14>
   11164:	mov	r2, r3
   11168:	ldr	r3, [r2, #4]
   1116c:	cmp	r3, #0
   11170:	bne	11164 <avl_min@@Base+0x10>
   11174:	ldr	r0, [r2]
   11178:	bx	lr

0001117c <avl_max@@Base>:
   1117c:	cmp	r0, #0
   11180:	bxeq	lr
   11184:	ldr	r2, [r0]
   11188:	b	11190 <avl_max@@Base+0x14>
   1118c:	mov	r2, r3
   11190:	ldr	r3, [r2, #8]
   11194:	cmp	r3, #0
   11198:	bne	1118c <avl_max@@Base+0x10>
   1119c:	ldr	r0, [r2]
   111a0:	bx	lr

000111a4 <avl_altura@@Base>:
   111a4:	cmp	r0, #0
   111a8:	ldrne	r0, [r0, #12]
   111ac:	mvneq	r0, #0
   111b0:	bx	lr

000111b4 <max@@Base>:
   111b4:	cmp	r1, r0
   111b8:	movge	r0, r1
   111bc:	bx	lr

000111c0 <avl_novo_no@@Base>:
   111c0:	push	{r4, r5, r6, lr}
   111c4:	mov	r5, r0
   111c8:	mov	r0, #20
   111cc:	bl	10da8 <malloc@plt>
   111d0:	mov	r4, r0
   111d4:	mov	r0, r5
   111d8:	bl	10dcc <strlen@plt>
   111dc:	add	r6, r0, #1
   111e0:	mov	r0, r6
   111e4:	bl	10da8 <malloc@plt>
   111e8:	mov	r2, r6
   111ec:	mov	r1, r5
   111f0:	str	r0, [r4]
   111f4:	bl	10d6c <memcpy@plt>
   111f8:	mov	r3, #0
   111fc:	mov	r2, #1
   11200:	str	r2, [r4, #16]
   11204:	str	r3, [r4, #4]
   11208:	str	r3, [r4, #8]
   1120c:	str	r3, [r4, #12]
   11210:	mov	r0, r4
   11214:	pop	{r4, r5, r6, pc}

00011218 <roda_direita@@Base>:
   11218:	ldr	r2, [r0, #4]
   1121c:	ldr	r3, [r2, #8]
   11220:	str	r0, [r2, #8]
   11224:	cmp	r3, #0
   11228:	ldr	r1, [r0, #8]
   1122c:	str	r3, [r0, #4]
   11230:	ldrne	r3, [r3, #12]
   11234:	mvneq	r3, #0
   11238:	cmp	r1, #0
   1123c:	mvneq	r1, #0
   11240:	ldrne	r1, [r1, #12]
   11244:	ldr	ip, [r2, #4]
   11248:	cmp	r3, r1
   1124c:	movlt	r3, r1
   11250:	cmp	ip, #0
   11254:	add	r3, r3, #1
   11258:	str	r3, [r0, #12]
   1125c:	ldrne	r1, [ip, #12]
   11260:	beq	1127c <roda_direita@@Base+0x64>
   11264:	cmp	r3, r1
   11268:	movlt	r3, r1
   1126c:	add	r3, r3, #1
   11270:	str	r3, [r2, #12]
   11274:	mov	r0, r2
   11278:	bx	lr
   1127c:	mvn	r1, #0
   11280:	b	11264 <roda_direita@@Base+0x4c>

00011284 <roda_esquerda@@Base>:
   11284:	ldr	r2, [r0, #8]
   11288:	ldr	r1, [r2, #4]
   1128c:	str	r0, [r2, #4]
   11290:	ldr	r3, [r0, #4]
   11294:	str	r1, [r0, #8]
   11298:	cmp	r3, #0
   1129c:	mvneq	r3, #0
   112a0:	ldrne	r3, [r3, #12]
   112a4:	cmp	r1, #0
   112a8:	beq	112e8 <roda_esquerda@@Base+0x64>
   112ac:	ldr	r1, [r1, #12]
   112b0:	cmp	r3, r1
   112b4:	movlt	r3, r1
   112b8:	add	r3, r3, #1
   112bc:	str	r3, [r0, #12]
   112c0:	ldr	r1, [r2, #8]
   112c4:	mov	r0, r2
   112c8:	cmp	r1, #0
   112cc:	mvneq	r1, #0
   112d0:	ldrne	r1, [r1, #12]
   112d4:	cmp	r3, r1
   112d8:	movlt	r3, r1
   112dc:	add	r3, r3, #1
   112e0:	str	r3, [r2, #12]
   112e4:	bx	lr
   112e8:	orr	r3, r3, r3, asr #31
   112ec:	add	r3, r3, #1
   112f0:	str	r3, [r0, #12]
   112f4:	b	112c0 <roda_esquerda@@Base+0x3c>

000112f8 <calc_balanceamento@@Base>:
   112f8:	cmp	r0, #0
   112fc:	bxeq	lr
   11300:	ldr	r3, [r0, #8]
   11304:	ldr	r2, [r0, #4]
   11308:	cmp	r3, #0
   1130c:	mvneq	r3, #0
   11310:	ldrne	r3, [r3, #12]
   11314:	cmp	r2, #0
   11318:	mvneq	r0, #0
   1131c:	ldrne	r0, [r2, #12]
   11320:	sub	r0, r3, r0
   11324:	bx	lr

00011328 <avl_pesquisa_impl@@Base>:
   11328:	push	{r4, r5, r6, lr}
   1132c:	subs	r4, r0, #0
   11330:	beq	11360 <avl_pesquisa_impl@@Base+0x38>
   11334:	mov	r5, r1
   11338:	ldr	r1, [r4]
   1133c:	mov	r0, r5
   11340:	bl	10d30 <strcmp@plt>
   11344:	cmp	r0, #0
   11348:	ldrlt	r4, [r4, #4]
   1134c:	blt	11358 <avl_pesquisa_impl@@Base+0x30>
   11350:	beq	11360 <avl_pesquisa_impl@@Base+0x38>
   11354:	ldr	r4, [r4, #8]
   11358:	cmp	r4, #0
   1135c:	bne	11338 <avl_pesquisa_impl@@Base+0x10>
   11360:	mov	r0, r4
   11364:	pop	{r4, r5, r6, pc}

00011368 <avl_insere_impl@@Base>:
   11368:	push	{r4, r5, r6, r7, r8, lr}
   1136c:	subs	r5, r0, #0
   11370:	mov	r6, r1
   11374:	beq	11734 <avl_insere_impl@@Base+0x3cc>
   11378:	ldr	r1, [r5]
   1137c:	mov	r0, r6
   11380:	bl	10d30 <strcmp@plt>
   11384:	cmp	r0, #0
   11388:	blt	1157c <avl_insere_impl@@Base+0x214>
   1138c:	beq	11478 <avl_insere_impl@@Base+0x110>
   11390:	mov	r1, r6
   11394:	ldr	r0, [r5, #8]
   11398:	bl	11368 <avl_insere_impl@@Base>
   1139c:	mov	r4, r0
   113a0:	str	r0, [r5, #8]
   113a4:	ldr	r0, [r5, #4]
   113a8:	cmp	r0, #0
   113ac:	beq	11490 <avl_insere_impl@@Base+0x128>
   113b0:	cmp	r4, #0
   113b4:	ldr	r3, [r0, #12]
   113b8:	beq	11594 <avl_insere_impl@@Base+0x22c>
   113bc:	ldr	r2, [r4, #12]
   113c0:	cmp	r3, r2
   113c4:	movlt	r3, r2
   113c8:	add	r3, r3, #1
   113cc:	str	r3, [r5, #12]
   113d0:	ldr	r3, [r4, #12]
   113d4:	ldr	r2, [r0, #12]
   113d8:	sub	r3, r3, r2
   113dc:	cmp	r3, #1
   113e0:	ble	114b8 <avl_insere_impl@@Base+0x150>
   113e4:	cmp	r4, #0
   113e8:	beq	115b0 <avl_insere_impl@@Base+0x248>
   113ec:	ldmib	r4, {r2, r3}
   113f0:	cmp	r3, #0
   113f4:	beq	11684 <avl_insere_impl@@Base+0x31c>
   113f8:	cmp	r2, #0
   113fc:	ldr	r3, [r3, #12]
   11400:	mvneq	r1, #0
   11404:	beq	1140c <avl_insere_impl@@Base+0xa4>
   11408:	ldr	r1, [r2, #12]
   1140c:	sub	r3, r3, r1
   11410:	cmp	r3, #0
   11414:	blt	114cc <avl_insere_impl@@Base+0x164>
   11418:	str	r5, [r4, #4]
   1141c:	ldr	r3, [r5, #4]
   11420:	str	r2, [r5, #8]
   11424:	cmp	r3, #0
   11428:	mvneq	r1, #0
   1142c:	beq	11434 <avl_insere_impl@@Base+0xcc>
   11430:	ldr	r1, [r3, #12]
   11434:	cmp	r2, #0
   11438:	mvneq	r3, #0
   1143c:	ldrne	r3, [r2, #12]
   11440:	cmp	r3, r1
   11444:	ldr	r2, [r4, #8]
   11448:	movlt	r3, r1
   1144c:	add	r3, r3, #1
   11450:	cmp	r2, #0
   11454:	str	r3, [r5, #12]
   11458:	beq	116b0 <avl_insere_impl@@Base+0x348>
   1145c:	ldr	r2, [r2, #12]
   11460:	cmp	r3, r2
   11464:	movlt	r3, r2
   11468:	add	r3, r3, #1
   1146c:	str	r3, [r4, #12]
   11470:	mov	r0, r4
   11474:	pop	{r4, r5, r6, r7, r8, pc}
   11478:	ldr	r3, [r5, #16]
   1147c:	mov	r4, r5
   11480:	add	r3, r3, #1
   11484:	str	r3, [r5, #16]
   11488:	mov	r0, r4
   1148c:	pop	{r4, r5, r6, r7, r8, pc}
   11490:	cmp	r4, #0
   11494:	beq	117bc <avl_insere_impl@@Base+0x454>
   11498:	ldr	r3, [r4, #12]
   1149c:	orr	r3, r3, r3, asr #31
   114a0:	add	r3, r3, #1
   114a4:	str	r3, [r5, #12]
   114a8:	ldr	r3, [r4, #12]
   114ac:	add	r3, r3, #1
   114b0:	cmp	r3, #1
   114b4:	bgt	113ec <avl_insere_impl@@Base+0x84>
   114b8:	cmn	r3, #1
   114bc:	blt	115b8 <avl_insere_impl@@Base+0x250>
   114c0:	mov	r4, r5
   114c4:	mov	r0, r4
   114c8:	pop	{r4, r5, r6, r7, r8, pc}
   114cc:	ldr	r3, [r2, #8]
   114d0:	str	r4, [r2, #8]
   114d4:	cmp	r3, #0
   114d8:	str	r3, [r4, #4]
   114dc:	ldrne	r1, [r3, #12]
   114e0:	ldr	r3, [r4, #8]
   114e4:	mvneq	r1, #0
   114e8:	cmp	r3, #0
   114ec:	mvneq	r3, #0
   114f0:	ldrne	r3, [r3, #12]
   114f4:	ldr	r0, [r2, #4]
   114f8:	cmp	r3, r1
   114fc:	movlt	r3, r1
   11500:	add	r3, r3, #1
   11504:	cmp	r0, #0
   11508:	str	r3, [r4, #12]
   1150c:	beq	1177c <avl_insere_impl@@Base+0x414>
   11510:	ldr	ip, [r0, #12]
   11514:	str	r5, [r2, #4]
   11518:	ldr	r1, [r5, #4]
   1151c:	cmp	r3, ip
   11520:	movlt	r3, ip
   11524:	cmp	r1, #0
   11528:	add	r3, r3, #1
   1152c:	str	r3, [r2, #12]
   11530:	ldrne	r3, [r1, #12]
   11534:	ldr	r1, [r0, #12]
   11538:	mvneq	r3, #0
   1153c:	cmp	r3, r1
   11540:	movlt	r3, r1
   11544:	add	r3, r3, #1
   11548:	str	r0, [r5, #8]
   1154c:	ldr	r1, [r2, #8]
   11550:	str	r3, [r5, #12]
   11554:	cmp	r1, #0
   11558:	mvneq	r1, #0
   1155c:	ldrne	r1, [r1, #12]
   11560:	mov	r4, r2
   11564:	cmp	r1, r3
   11568:	movge	r3, r1
   1156c:	add	r3, r3, #1
   11570:	str	r3, [r2, #12]
   11574:	mov	r0, r4
   11578:	pop	{r4, r5, r6, r7, r8, pc}
   1157c:	mov	r1, r6
   11580:	ldr	r0, [r5, #4]
   11584:	bl	11368 <avl_insere_impl@@Base>
   11588:	ldr	r4, [r5, #8]
   1158c:	str	r0, [r5, #4]
   11590:	b	113a8 <avl_insere_impl@@Base+0x40>
   11594:	mvn	r2, #0
   11598:	cmp	r3, r2
   1159c:	movlt	r3, r2
   115a0:	add	r3, r3, #1
   115a4:	str	r3, [r5, #12]
   115a8:	mov	r3, r2
   115ac:	b	113d4 <avl_insere_impl@@Base+0x6c>
   115b0:	ldr	r2, [r4, #4]
   115b4:	b	11418 <avl_insere_impl@@Base+0xb0>
   115b8:	cmp	r0, #0
   115bc:	ldr	r4, [r0, #8]
   115c0:	beq	116b8 <avl_insere_impl@@Base+0x350>
   115c4:	cmp	r4, #0
   115c8:	ldr	r2, [r0, #4]
   115cc:	beq	117c4 <avl_insere_impl@@Base+0x45c>
   115d0:	cmp	r2, #0
   115d4:	ldr	r3, [r4, #12]
   115d8:	beq	11714 <avl_insere_impl@@Base+0x3ac>
   115dc:	ldr	r2, [r2, #12]
   115e0:	sub	r3, r3, r2
   115e4:	cmp	r3, #0
   115e8:	ble	116b8 <avl_insere_impl@@Base+0x350>
   115ec:	ldr	r3, [r4, #4]
   115f0:	str	r0, [r4, #4]
   115f4:	ldr	r2, [r0, #4]
   115f8:	str	r3, [r0, #8]
   115fc:	cmp	r2, #0
   11600:	mvneq	r2, #0
   11604:	ldrne	r2, [r2, #12]
   11608:	cmp	r3, #0
   1160c:	beq	11728 <avl_insere_impl@@Base+0x3c0>
   11610:	ldr	r3, [r3, #12]
   11614:	cmp	r2, r3
   11618:	movlt	r2, r3
   1161c:	add	r2, r2, #1
   11620:	ldr	r1, [r4, #8]
   11624:	str	r2, [r0, #12]
   11628:	cmp	r1, #0
   1162c:	beq	117e0 <avl_insere_impl@@Base+0x478>
   11630:	ldr	r3, [r1, #12]
   11634:	str	r5, [r4, #8]
   11638:	cmp	r2, r3
   1163c:	movlt	r2, r3
   11640:	add	r2, r2, #1
   11644:	str	r2, [r4, #12]
   11648:	ldr	r2, [r1, #12]
   1164c:	str	r1, [r5, #4]
   11650:	ldr	r3, [r5, #8]
   11654:	ldr	r1, [r4, #4]
   11658:	cmp	r3, #0
   1165c:	mvneq	r3, #0
   11660:	ldrne	r3, [r3, #12]
   11664:	cmp	r3, r2
   11668:	movlt	r3, r2
   1166c:	add	r3, r3, #1
   11670:	cmp	r1, #0
   11674:	str	r3, [r5, #12]
   11678:	beq	116b0 <avl_insere_impl@@Base+0x348>
   1167c:	ldr	r2, [r1, #12]
   11680:	b	11460 <avl_insere_impl@@Base+0xf8>
   11684:	cmp	r2, #0
   11688:	mvnne	r3, #0
   1168c:	bne	11408 <avl_insere_impl@@Base+0xa0>
   11690:	str	r5, [r4, #4]
   11694:	ldr	r3, [r5, #4]
   11698:	str	r2, [r5, #8]
   1169c:	cmp	r3, #0
   116a0:	bne	11430 <avl_insere_impl@@Base+0xc8>
   116a4:	mvn	r1, #0
   116a8:	mov	r3, r1
   116ac:	b	11440 <avl_insere_impl@@Base+0xd8>
   116b0:	mvn	r2, #0
   116b4:	b	11460 <avl_insere_impl@@Base+0xf8>
   116b8:	cmp	r4, #0
   116bc:	str	r5, [r0, #8]
   116c0:	str	r4, [r5, #4]
   116c4:	beq	11804 <avl_insere_impl@@Base+0x49c>
   116c8:	ldr	r1, [r4, #12]
   116cc:	ldr	r3, [r5, #8]
   116d0:	ldr	r2, [r0, #4]
   116d4:	cmp	r3, #0
   116d8:	mvneq	r3, #0
   116dc:	ldrne	r3, [r3, #12]
   116e0:	mov	r4, r0
   116e4:	cmp	r3, r1
   116e8:	movlt	r3, r1
   116ec:	cmp	r2, #0
   116f0:	add	r3, r3, #1
   116f4:	str	r3, [r5, #12]
   116f8:	ldrne	r2, [r2, #12]
   116fc:	mvneq	r2, #0
   11700:	cmp	r3, r2
   11704:	movlt	r3, r2
   11708:	add	r3, r3, #1
   1170c:	str	r3, [r0, #12]
   11710:	b	11470 <avl_insere_impl@@Base+0x108>
   11714:	cmp	r3, #0
   11718:	bge	115ec <avl_insere_impl@@Base+0x284>
   1171c:	str	r5, [r0, #8]
   11720:	str	r4, [r5, #4]
   11724:	b	116c8 <avl_insere_impl@@Base+0x360>
   11728:	orr	r2, r2, r2, asr #31
   1172c:	add	r2, r2, #1
   11730:	b	11620 <avl_insere_impl@@Base+0x2b8>
   11734:	mov	r0, #20
   11738:	bl	10da8 <malloc@plt>
   1173c:	mov	r4, r0
   11740:	mov	r0, r6
   11744:	bl	10dcc <strlen@plt>
   11748:	add	r7, r0, #1
   1174c:	mov	r0, r7
   11750:	bl	10da8 <malloc@plt>
   11754:	mov	r2, r7
   11758:	mov	r1, r6
   1175c:	str	r0, [r4]
   11760:	bl	10d6c <memcpy@plt>
   11764:	mov	r3, #1
   11768:	str	r5, [r4, #4]
   1176c:	str	r5, [r4, #8]
   11770:	str	r5, [r4, #12]
   11774:	str	r3, [r4, #16]
   11778:	b	11470 <avl_insere_impl@@Base+0x108>
   1177c:	mvn	ip, #0
   11780:	cmp	r3, ip
   11784:	str	r5, [r2, #4]
   11788:	ldr	r1, [r5, #4]
   1178c:	movlt	r3, ip
   11790:	add	r3, r3, #1
   11794:	cmp	r1, #0
   11798:	str	r3, [r2, #12]
   1179c:	str	r0, [r5, #8]
   117a0:	moveq	r3, r1
   117a4:	beq	1154c <avl_insere_impl@@Base+0x1e4>
   117a8:	ldr	r3, [r1, #12]
   117ac:	cmp	r3, ip
   117b0:	movlt	r3, ip
   117b4:	add	r3, r3, #1
   117b8:	b	1154c <avl_insere_impl@@Base+0x1e4>
   117bc:	str	r4, [r5, #12]
   117c0:	b	114c0 <avl_insere_impl@@Base+0x158>
   117c4:	cmp	r2, #0
   117c8:	mvnne	r3, #0
   117cc:	bne	115dc <avl_insere_impl@@Base+0x274>
   117d0:	str	r5, [r0, #8]
   117d4:	mvn	r1, #0
   117d8:	str	r2, [r5, #4]
   117dc:	b	116cc <avl_insere_impl@@Base+0x364>
   117e0:	mvn	r3, #0
   117e4:	cmp	r2, r3
   117e8:	movlt	r2, r3
   117ec:	add	r2, r2, #1
   117f0:	str	r2, [r4, #12]
   117f4:	str	r5, [r4, #8]
   117f8:	mov	r2, r3
   117fc:	str	r1, [r5, #4]
   11800:	b	11650 <avl_insere_impl@@Base+0x2e8>
   11804:	mvn	r1, #0
   11808:	b	116cc <avl_insere_impl@@Base+0x364>

0001180c <avl_insere@@Base>:
   1180c:	cmp	r1, #0
   11810:	cmpne	r0, #0
   11814:	beq	11b28 <avl_insere@@Base+0x31c>
   11818:	push	{r4, r5, r6, r7, r8, lr}
   1181c:	mov	r7, r1
   11820:	ldr	r5, [r0]
   11824:	mov	r6, r0
   11828:	cmp	r5, #0
   1182c:	beq	11bdc <avl_insere@@Base+0x3d0>
   11830:	ldr	r1, [r5]
   11834:	mov	r0, r7
   11838:	bl	10d30 <strcmp@plt>
   1183c:	cmp	r0, #0
   11840:	blt	11af4 <avl_insere@@Base+0x2e8>
   11844:	beq	11934 <avl_insere@@Base+0x128>
   11848:	mov	r1, r7
   1184c:	ldr	r0, [r5, #8]
   11850:	bl	11368 <avl_insere_impl@@Base>
   11854:	mov	r4, r0
   11858:	str	r0, [r5, #8]
   1185c:	ldr	r0, [r5, #4]
   11860:	cmp	r0, #0
   11864:	beq	11948 <avl_insere@@Base+0x13c>
   11868:	cmp	r4, #0
   1186c:	ldr	r3, [r0, #12]
   11870:	beq	11b0c <avl_insere@@Base+0x300>
   11874:	ldr	r2, [r4, #12]
   11878:	cmp	r3, r2
   1187c:	movlt	r3, r2
   11880:	add	r3, r3, #1
   11884:	str	r3, [r5, #12]
   11888:	ldr	r3, [r4, #12]
   1188c:	ldr	r2, [r0, #12]
   11890:	sub	r3, r3, r2
   11894:	cmp	r3, #1
   11898:	ble	11970 <avl_insere@@Base+0x164>
   1189c:	cmp	r4, #0
   118a0:	beq	11b30 <avl_insere@@Base+0x324>
   118a4:	ldmib	r4, {r2, r3}
   118a8:	cmp	r3, #0
   118ac:	beq	11b38 <avl_insere@@Base+0x32c>
   118b0:	cmp	r2, #0
   118b4:	ldr	r3, [r3, #12]
   118b8:	mvneq	r1, #0
   118bc:	beq	118c4 <avl_insere@@Base+0xb8>
   118c0:	ldr	r1, [r2, #12]
   118c4:	sub	r3, r3, r1
   118c8:	cmp	r3, #0
   118cc:	blt	11a48 <avl_insere@@Base+0x23c>
   118d0:	str	r5, [r4, #4]
   118d4:	ldr	r3, [r5, #4]
   118d8:	str	r2, [r5, #8]
   118dc:	cmp	r3, #0
   118e0:	mvneq	r1, #0
   118e4:	beq	118ec <avl_insere@@Base+0xe0>
   118e8:	ldr	r1, [r3, #12]
   118ec:	cmp	r2, #0
   118f0:	mvneq	r3, #0
   118f4:	ldrne	r3, [r2, #12]
   118f8:	cmp	r3, r1
   118fc:	ldr	r2, [r4, #8]
   11900:	movlt	r3, r1
   11904:	add	r3, r3, #1
   11908:	cmp	r2, #0
   1190c:	str	r3, [r5, #12]
   11910:	beq	11bd4 <avl_insere@@Base+0x3c8>
   11914:	ldr	r2, [r2, #12]
   11918:	cmp	r3, r2
   1191c:	movlt	r3, r2
   11920:	add	r3, r3, #1
   11924:	str	r3, [r4, #12]
   11928:	str	r4, [r6]
   1192c:	mov	r0, #0
   11930:	pop	{r4, r5, r6, r7, r8, pc}
   11934:	ldr	r3, [r5, #16]
   11938:	mov	r4, r5
   1193c:	add	r3, r3, #1
   11940:	str	r3, [r5, #16]
   11944:	b	11928 <avl_insere@@Base+0x11c>
   11948:	cmp	r4, #0
   1194c:	beq	11c64 <avl_insere@@Base+0x458>
   11950:	ldr	r3, [r4, #12]
   11954:	orr	r3, r3, r3, asr #31
   11958:	add	r3, r3, #1
   1195c:	str	r3, [r5, #12]
   11960:	ldr	r3, [r4, #12]
   11964:	add	r3, r3, #1
   11968:	cmp	r3, #1
   1196c:	bgt	118a4 <avl_insere@@Base+0x98>
   11970:	cmn	r3, #1
   11974:	movge	r4, r5
   11978:	bge	11928 <avl_insere@@Base+0x11c>
   1197c:	cmp	r0, #0
   11980:	ldr	r4, [r0, #8]
   11984:	beq	11b64 <avl_insere@@Base+0x358>
   11988:	cmp	r4, #0
   1198c:	ldr	r2, [r0, #4]
   11990:	beq	11c70 <avl_insere@@Base+0x464>
   11994:	cmp	r2, #0
   11998:	ldr	r3, [r4, #12]
   1199c:	beq	11bc0 <avl_insere@@Base+0x3b4>
   119a0:	ldr	r2, [r2, #12]
   119a4:	sub	r3, r3, r2
   119a8:	cmp	r3, #0
   119ac:	ble	11b64 <avl_insere@@Base+0x358>
   119b0:	ldr	r3, [r4, #4]
   119b4:	str	r0, [r4, #4]
   119b8:	ldr	r2, [r0, #4]
   119bc:	str	r3, [r0, #8]
   119c0:	cmp	r2, #0
   119c4:	mvneq	r2, #0
   119c8:	ldrne	r2, [r2, #12]
   119cc:	cmp	r3, #0
   119d0:	beq	11c8c <avl_insere@@Base+0x480>
   119d4:	ldr	r3, [r3, #12]
   119d8:	cmp	r2, r3
   119dc:	movlt	r2, r3
   119e0:	add	r2, r2, #1
   119e4:	ldr	r1, [r4, #8]
   119e8:	str	r2, [r0, #12]
   119ec:	cmp	r1, #0
   119f0:	beq	11c98 <avl_insere@@Base+0x48c>
   119f4:	ldr	r3, [r1, #12]
   119f8:	str	r5, [r4, #8]
   119fc:	cmp	r2, r3
   11a00:	movlt	r2, r3
   11a04:	add	r2, r2, #1
   11a08:	str	r2, [r4, #12]
   11a0c:	ldr	r2, [r1, #12]
   11a10:	str	r1, [r5, #4]
   11a14:	ldr	r3, [r5, #8]
   11a18:	ldr	r1, [r4, #4]
   11a1c:	cmp	r3, #0
   11a20:	mvneq	r3, #0
   11a24:	ldrne	r3, [r3, #12]
   11a28:	cmp	r3, r2
   11a2c:	movlt	r3, r2
   11a30:	add	r3, r3, #1
   11a34:	cmp	r1, #0
   11a38:	str	r3, [r5, #12]
   11a3c:	beq	11bd4 <avl_insere@@Base+0x3c8>
   11a40:	ldr	r2, [r1, #12]
   11a44:	b	11918 <avl_insere@@Base+0x10c>
   11a48:	ldr	r3, [r2, #8]
   11a4c:	str	r4, [r2, #8]
   11a50:	cmp	r3, #0
   11a54:	str	r3, [r4, #4]
   11a58:	ldrne	r1, [r3, #12]
   11a5c:	ldr	r3, [r4, #8]
   11a60:	mvneq	r1, #0
   11a64:	cmp	r3, #0
   11a68:	mvneq	r3, #0
   11a6c:	ldrne	r3, [r3, #12]
   11a70:	ldr	r0, [r2, #4]
   11a74:	cmp	r3, r1
   11a78:	movlt	r3, r1
   11a7c:	add	r3, r3, #1
   11a80:	cmp	r0, #0
   11a84:	str	r3, [r4, #12]
   11a88:	beq	11c24 <avl_insere@@Base+0x418>
   11a8c:	ldr	ip, [r0, #12]
   11a90:	str	r5, [r2, #4]
   11a94:	ldr	r1, [r5, #4]
   11a98:	cmp	r3, ip
   11a9c:	movlt	r3, ip
   11aa0:	cmp	r1, #0
   11aa4:	add	r3, r3, #1
   11aa8:	str	r3, [r2, #12]
   11aac:	ldrne	r3, [r1, #12]
   11ab0:	ldr	r1, [r0, #12]
   11ab4:	mvneq	r3, #0
   11ab8:	cmp	r3, r1
   11abc:	movlt	r3, r1
   11ac0:	add	r3, r3, #1
   11ac4:	str	r0, [r5, #8]
   11ac8:	ldr	r1, [r2, #8]
   11acc:	str	r3, [r5, #12]
   11ad0:	cmp	r1, #0
   11ad4:	mvneq	r1, #0
   11ad8:	ldrne	r1, [r1, #12]
   11adc:	mov	r4, r2
   11ae0:	cmp	r1, r3
   11ae4:	movge	r3, r1
   11ae8:	add	r3, r3, #1
   11aec:	str	r3, [r2, #12]
   11af0:	b	11928 <avl_insere@@Base+0x11c>
   11af4:	mov	r1, r7
   11af8:	ldr	r0, [r5, #4]
   11afc:	bl	11368 <avl_insere_impl@@Base>
   11b00:	ldr	r4, [r5, #8]
   11b04:	str	r0, [r5, #4]
   11b08:	b	11860 <avl_insere@@Base+0x54>
   11b0c:	mvn	r2, #0
   11b10:	cmp	r3, r2
   11b14:	movlt	r3, r2
   11b18:	add	r3, r3, #1
   11b1c:	str	r3, [r5, #12]
   11b20:	mov	r3, r2
   11b24:	b	1188c <avl_insere@@Base+0x80>
   11b28:	mvn	r0, #0
   11b2c:	bx	lr
   11b30:	ldr	r2, [r4, #4]
   11b34:	b	118d0 <avl_insere@@Base+0xc4>
   11b38:	cmp	r2, #0
   11b3c:	mvnne	r3, #0
   11b40:	bne	118c0 <avl_insere@@Base+0xb4>
   11b44:	str	r5, [r4, #4]
   11b48:	ldr	r3, [r5, #4]
   11b4c:	str	r2, [r5, #8]
   11b50:	cmp	r3, #0
   11b54:	bne	118e8 <avl_insere@@Base+0xdc>
   11b58:	mvn	r1, #0
   11b5c:	mov	r3, r1
   11b60:	b	118f8 <avl_insere@@Base+0xec>
   11b64:	cmp	r4, #0
   11b68:	str	r5, [r0, #8]
   11b6c:	str	r4, [r5, #4]
   11b70:	beq	11cbc <avl_insere@@Base+0x4b0>
   11b74:	ldr	r1, [r4, #12]
   11b78:	ldr	r3, [r5, #8]
   11b7c:	ldr	r2, [r0, #4]
   11b80:	cmp	r3, #0
   11b84:	mvneq	r3, #0
   11b88:	ldrne	r3, [r3, #12]
   11b8c:	mov	r4, r0
   11b90:	cmp	r3, r1
   11b94:	movlt	r3, r1
   11b98:	cmp	r2, #0
   11b9c:	add	r3, r3, #1
   11ba0:	str	r3, [r5, #12]
   11ba4:	ldrne	r2, [r2, #12]
   11ba8:	mvneq	r2, #0
   11bac:	cmp	r3, r2
   11bb0:	movlt	r3, r2
   11bb4:	add	r3, r3, #1
   11bb8:	str	r3, [r0, #12]
   11bbc:	b	11928 <avl_insere@@Base+0x11c>
   11bc0:	cmp	r3, #0
   11bc4:	bge	119b0 <avl_insere@@Base+0x1a4>
   11bc8:	str	r5, [r0, #8]
   11bcc:	str	r4, [r5, #4]
   11bd0:	b	11b74 <avl_insere@@Base+0x368>
   11bd4:	mvn	r2, #0
   11bd8:	b	11918 <avl_insere@@Base+0x10c>
   11bdc:	mov	r0, #20
   11be0:	bl	10da8 <malloc@plt>
   11be4:	mov	r4, r0
   11be8:	mov	r0, r7
   11bec:	bl	10dcc <strlen@plt>
   11bf0:	add	r8, r0, #1
   11bf4:	mov	r0, r8
   11bf8:	bl	10da8 <malloc@plt>
   11bfc:	mov	r2, r8
   11c00:	mov	r1, r7
   11c04:	str	r0, [r4]
   11c08:	bl	10d6c <memcpy@plt>
   11c0c:	mov	r3, #1
   11c10:	str	r5, [r4, #4]
   11c14:	str	r5, [r4, #8]
   11c18:	str	r5, [r4, #12]
   11c1c:	str	r3, [r4, #16]
   11c20:	b	11928 <avl_insere@@Base+0x11c>
   11c24:	mvn	ip, #0
   11c28:	cmp	r3, ip
   11c2c:	str	r5, [r2, #4]
   11c30:	ldr	r1, [r5, #4]
   11c34:	movlt	r3, ip
   11c38:	add	r3, r3, #1
   11c3c:	cmp	r1, #0
   11c40:	str	r3, [r2, #12]
   11c44:	str	r0, [r5, #8]
   11c48:	moveq	r3, r1
   11c4c:	beq	11ac8 <avl_insere@@Base+0x2bc>
   11c50:	ldr	r3, [r1, #12]
   11c54:	cmp	r3, ip
   11c58:	movlt	r3, ip
   11c5c:	add	r3, r3, #1
   11c60:	b	11ac8 <avl_insere@@Base+0x2bc>
   11c64:	str	r4, [r5, #12]
   11c68:	mov	r4, r5
   11c6c:	b	11928 <avl_insere@@Base+0x11c>
   11c70:	cmp	r2, #0
   11c74:	mvnne	r3, #0
   11c78:	bne	119a0 <avl_insere@@Base+0x194>
   11c7c:	str	r5, [r0, #8]
   11c80:	mvn	r1, #0
   11c84:	str	r2, [r5, #4]
   11c88:	b	11b78 <avl_insere@@Base+0x36c>
   11c8c:	orr	r2, r2, r2, asr #31
   11c90:	add	r2, r2, #1
   11c94:	b	119e4 <avl_insere@@Base+0x1d8>
   11c98:	mvn	r3, #0
   11c9c:	cmp	r2, r3
   11ca0:	movlt	r2, r3
   11ca4:	add	r2, r2, #1
   11ca8:	str	r2, [r4, #12]
   11cac:	str	r5, [r4, #8]
   11cb0:	mov	r2, r3
   11cb4:	str	r1, [r5, #4]
   11cb8:	b	11a14 <avl_insere@@Base+0x208>
   11cbc:	mvn	r1, #0
   11cc0:	b	11b78 <avl_insere@@Base+0x36c>

00011cc4 <avl_no_valormin@@Base>:
   11cc4:	b	11ccc <avl_no_valormin@@Base+0x8>
   11cc8:	mov	r0, r3
   11ccc:	ldr	r3, [r0, #4]
   11cd0:	cmp	r3, #0
   11cd4:	bne	11cc8 <avl_no_valormin@@Base+0x4>
   11cd8:	bx	lr

00011cdc <avl_no_valormax@@Base>:
   11cdc:	b	11ce4 <avl_no_valormax@@Base+0x8>
   11ce0:	mov	r0, r3
   11ce4:	ldr	r3, [r0, #8]
   11ce8:	cmp	r3, #0
   11cec:	bne	11ce0 <avl_no_valormax@@Base+0x4>
   11cf0:	bx	lr

00011cf4 <avl_remove_impl@@Base>:
   11cf4:	push	{r4, r5, r6, r7, r8, lr}
   11cf8:	subs	r4, r0, #0
   11cfc:	beq	11ea4 <avl_remove_impl@@Base+0x1b0>
   11d00:	ldr	r7, [r4]
   11d04:	mov	r0, r1
   11d08:	mov	r6, r1
   11d0c:	mov	r1, r7
   11d10:	bl	10d30 <strcmp@plt>
   11d14:	cmp	r0, #0
   11d18:	blt	12014 <avl_remove_impl@@Base+0x320>
   11d1c:	beq	11e08 <avl_remove_impl@@Base+0x114>
   11d20:	mov	r1, r6
   11d24:	ldr	r0, [r4, #8]
   11d28:	bl	11cf4 <avl_remove_impl@@Base>
   11d2c:	mov	r5, r0
   11d30:	str	r0, [r4, #8]
   11d34:	ldr	r0, [r4, #4]
   11d38:	cmp	r0, #0
   11d3c:	beq	11e74 <avl_remove_impl@@Base+0x180>
   11d40:	cmp	r5, #0
   11d44:	ldr	r3, [r0, #12]
   11d48:	beq	1202c <avl_remove_impl@@Base+0x338>
   11d4c:	ldr	r2, [r5, #12]
   11d50:	cmp	r3, r2
   11d54:	movlt	r3, r2
   11d58:	add	r3, r3, #1
   11d5c:	str	r3, [r4, #12]
   11d60:	ldr	r3, [r5, #12]
   11d64:	ldr	r2, [r0, #12]
   11d68:	sub	r3, r3, r2
   11d6c:	cmp	r3, #1
   11d70:	ble	11e9c <avl_remove_impl@@Base+0x1a8>
   11d74:	cmp	r5, #0
   11d78:	beq	12048 <avl_remove_impl@@Base+0x354>
   11d7c:	ldmib	r5, {r2, r3}
   11d80:	cmp	r3, #0
   11d84:	beq	12050 <avl_remove_impl@@Base+0x35c>
   11d88:	cmp	r2, #0
   11d8c:	ldr	r3, [r3, #12]
   11d90:	mvneq	r1, #0
   11d94:	beq	11d9c <avl_remove_impl@@Base+0xa8>
   11d98:	ldr	r1, [r2, #12]
   11d9c:	sub	r3, r3, r1
   11da0:	cmp	r3, #0
   11da4:	blt	11f64 <avl_remove_impl@@Base+0x270>
   11da8:	str	r4, [r5, #4]
   11dac:	ldr	r3, [r4, #4]
   11db0:	str	r2, [r4, #8]
   11db4:	cmp	r3, #0
   11db8:	mvneq	r1, #0
   11dbc:	beq	11dc4 <avl_remove_impl@@Base+0xd0>
   11dc0:	ldr	r1, [r3, #12]
   11dc4:	cmp	r2, #0
   11dc8:	mvneq	r3, #0
   11dcc:	ldrne	r3, [r2, #12]
   11dd0:	ldr	r2, [r5, #8]
   11dd4:	cmp	r3, r1
   11dd8:	movlt	r3, r1
   11ddc:	cmp	r2, #0
   11de0:	add	r3, r3, #1
   11de4:	str	r3, [r4, #12]
   11de8:	ldrne	r2, [r2, #12]
   11dec:	mvneq	r2, #0
   11df0:	cmp	r3, r2
   11df4:	movlt	r3, r2
   11df8:	add	r3, r3, #1
   11dfc:	str	r3, [r5, #12]
   11e00:	mov	r0, r5
   11e04:	pop	{r4, r5, r6, r7, r8, pc}
   11e08:	ldr	r5, [r4, #4]
   11e0c:	cmp	r5, #0
   11e10:	beq	12180 <avl_remove_impl@@Base+0x48c>
   11e14:	ldr	r6, [r4, #8]
   11e18:	cmp	r6, #0
   11e1c:	bne	11e28 <avl_remove_impl@@Base+0x134>
   11e20:	b	1207c <avl_remove_impl@@Base+0x388>
   11e24:	mov	r6, r3
   11e28:	ldr	r3, [r6, #4]
   11e2c:	cmp	r3, #0
   11e30:	bne	11e24 <avl_remove_impl@@Base+0x130>
   11e34:	ldr	r0, [r6]
   11e38:	bl	10dcc <strlen@plt>
   11e3c:	add	r1, r0, #1
   11e40:	mov	r0, r7
   11e44:	bl	10d84 <realloc@plt>
   11e48:	str	r0, [r4]
   11e4c:	ldr	r1, [r6]
   11e50:	bl	10d90 <strcpy@plt>
   11e54:	ldr	r1, [r6]
   11e58:	ldr	r0, [r4, #8]
   11e5c:	bl	11cf4 <avl_remove_impl@@Base>
   11e60:	mov	r5, r0
   11e64:	ldr	r0, [r4, #4]
   11e68:	str	r5, [r4, #8]
   11e6c:	cmp	r0, #0
   11e70:	bne	11d40 <avl_remove_impl@@Base+0x4c>
   11e74:	cmp	r5, #0
   11e78:	beq	12178 <avl_remove_impl@@Base+0x484>
   11e7c:	ldr	r3, [r5, #12]
   11e80:	orr	r3, r3, r3, asr #31
   11e84:	add	r3, r3, #1
   11e88:	str	r3, [r4, #12]
   11e8c:	ldr	r3, [r5, #12]
   11e90:	add	r3, r3, #1
   11e94:	cmp	r3, #1
   11e98:	bgt	11d7c <avl_remove_impl@@Base+0x88>
   11e9c:	cmn	r3, #1
   11ea0:	blt	11eb0 <avl_remove_impl@@Base+0x1bc>
   11ea4:	mov	r5, r4
   11ea8:	mov	r0, r5
   11eac:	pop	{r4, r5, r6, r7, r8, pc}
   11eb0:	cmp	r0, #0
   11eb4:	ldr	r5, [r0, #8]
   11eb8:	beq	120bc <avl_remove_impl@@Base+0x3c8>
   11ebc:	cmp	r5, #0
   11ec0:	ldr	r2, [r0, #4]
   11ec4:	beq	121a0 <avl_remove_impl@@Base+0x4ac>
   11ec8:	cmp	r2, #0
   11ecc:	ldr	r3, [r5, #12]
   11ed0:	beq	12118 <avl_remove_impl@@Base+0x424>
   11ed4:	ldr	r2, [r2, #12]
   11ed8:	sub	r3, r3, r2
   11edc:	cmp	r3, #0
   11ee0:	ble	120bc <avl_remove_impl@@Base+0x3c8>
   11ee4:	ldr	r2, [r5, #4]
   11ee8:	str	r0, [r5, #4]
   11eec:	ldr	r3, [r0, #4]
   11ef0:	str	r2, [r0, #8]
   11ef4:	cmp	r3, #0
   11ef8:	mvneq	r3, #0
   11efc:	ldrne	r3, [r3, #12]
   11f00:	cmp	r2, #0
   11f04:	beq	1212c <avl_remove_impl@@Base+0x438>
   11f08:	ldr	r2, [r2, #12]
   11f0c:	cmp	r3, r2
   11f10:	movlt	r3, r2
   11f14:	add	r3, r3, #1
   11f18:	ldr	r2, [r5, #8]
   11f1c:	str	r3, [r0, #12]
   11f20:	cmp	r2, #0
   11f24:	beq	121bc <avl_remove_impl@@Base+0x4c8>
   11f28:	ldr	r1, [r2, #12]
   11f2c:	str	r4, [r5, #8]
   11f30:	cmp	r3, r1
   11f34:	movlt	r3, r1
   11f38:	add	r3, r3, #1
   11f3c:	str	r3, [r5, #12]
   11f40:	ldr	r1, [r2, #12]
   11f44:	str	r2, [r4, #4]
   11f48:	ldr	r3, [r4, #8]
   11f4c:	ldr	r2, [r5, #4]
   11f50:	cmp	r3, #0
   11f54:	mvneq	r3, #0
   11f58:	ldrne	r3, [r3, #12]
   11f5c:	cmp	r3, r1
   11f60:	b	11dd8 <avl_remove_impl@@Base+0xe4>
   11f64:	ldr	r3, [r2, #8]
   11f68:	str	r5, [r2, #8]
   11f6c:	cmp	r3, #0
   11f70:	str	r3, [r5, #4]
   11f74:	ldrne	r1, [r3, #12]
   11f78:	ldr	r3, [r5, #8]
   11f7c:	mvneq	r1, #0
   11f80:	cmp	r3, #0
   11f84:	mvneq	r3, #0
   11f88:	ldrne	r3, [r3, #12]
   11f8c:	ldr	r0, [r2, #4]
   11f90:	cmp	r3, r1
   11f94:	movlt	r3, r1
   11f98:	add	r3, r3, #1
   11f9c:	cmp	r0, #0
   11fa0:	str	r3, [r5, #12]
   11fa4:	beq	12138 <avl_remove_impl@@Base+0x444>
   11fa8:	ldr	ip, [r0, #12]
   11fac:	str	r4, [r2, #4]
   11fb0:	ldr	r1, [r4, #4]
   11fb4:	cmp	r3, ip
   11fb8:	movlt	r3, ip
   11fbc:	cmp	r1, #0
   11fc0:	add	r3, r3, #1
   11fc4:	str	r3, [r2, #12]
   11fc8:	ldrne	r3, [r1, #12]
   11fcc:	ldr	r1, [r0, #12]
   11fd0:	mvneq	r3, #0
   11fd4:	cmp	r3, r1
   11fd8:	movlt	r3, r1
   11fdc:	add	r3, r3, #1
   11fe0:	str	r0, [r4, #8]
   11fe4:	ldr	r1, [r2, #8]
   11fe8:	str	r3, [r4, #12]
   11fec:	cmp	r1, #0
   11ff0:	mvneq	r1, #0
   11ff4:	ldrne	r1, [r1, #12]
   11ff8:	mov	r5, r2
   11ffc:	cmp	r3, r1
   12000:	movlt	r3, r1
   12004:	add	r3, r3, #1
   12008:	str	r3, [r2, #12]
   1200c:	mov	r0, r5
   12010:	pop	{r4, r5, r6, r7, r8, pc}
   12014:	mov	r1, r6
   12018:	ldr	r0, [r4, #4]
   1201c:	bl	11cf4 <avl_remove_impl@@Base>
   12020:	ldr	r5, [r4, #8]
   12024:	str	r0, [r4, #4]
   12028:	b	11d38 <avl_remove_impl@@Base+0x44>
   1202c:	mvn	r2, #0
   12030:	cmp	r3, r2
   12034:	movlt	r3, r2
   12038:	add	r3, r3, #1
   1203c:	str	r3, [r4, #12]
   12040:	mov	r3, r2
   12044:	b	11d64 <avl_remove_impl@@Base+0x70>
   12048:	ldr	r2, [r5, #4]
   1204c:	b	11da8 <avl_remove_impl@@Base+0xb4>
   12050:	cmp	r2, #0
   12054:	mvnne	r3, #0
   12058:	bne	11d98 <avl_remove_impl@@Base+0xa4>
   1205c:	str	r4, [r5, #4]
   12060:	ldr	r3, [r4, #4]
   12064:	str	r2, [r4, #8]
   12068:	cmp	r3, #0
   1206c:	bne	11dc0 <avl_remove_impl@@Base+0xcc>
   12070:	mvn	r1, #0
   12074:	mov	r3, r1
   12078:	b	11dd0 <avl_remove_impl@@Base+0xdc>
   1207c:	ldr	r0, [r5]
   12080:	bl	10dcc <strlen@plt>
   12084:	add	r1, r0, #1
   12088:	mov	r0, r7
   1208c:	bl	10d84 <realloc@plt>
   12090:	str	r0, [r4]
   12094:	ldr	r1, [r5]
   12098:	bl	10d90 <strcpy@plt>
   1209c:	ldmib	r5, {r1, r2, r3}
   120a0:	ldr	r0, [r5]
   120a4:	stmib	r4, {r1, r2, r3}
   120a8:	bl	10d54 <free@plt>
   120ac:	mov	r0, r5
   120b0:	bl	10d54 <free@plt>
   120b4:	ldmib	r4, {r0, r5}
   120b8:	b	11d38 <avl_remove_impl@@Base+0x44>
   120bc:	cmp	r5, #0
   120c0:	str	r4, [r0, #8]
   120c4:	str	r5, [r4, #4]
   120c8:	beq	121dc <avl_remove_impl@@Base+0x4e8>
   120cc:	ldr	r1, [r5, #12]
   120d0:	ldr	r3, [r4, #8]
   120d4:	ldr	r2, [r0, #4]
   120d8:	cmp	r3, #0
   120dc:	mvneq	r3, #0
   120e0:	ldrne	r3, [r3, #12]
   120e4:	mov	r5, r0
   120e8:	cmp	r3, r1
   120ec:	movlt	r3, r1
   120f0:	cmp	r2, #0
   120f4:	add	r3, r3, #1
   120f8:	str	r3, [r4, #12]
   120fc:	ldrne	r2, [r2, #12]
   12100:	mvneq	r2, #0
   12104:	cmp	r3, r2
   12108:	movlt	r3, r2
   1210c:	add	r3, r3, #1
   12110:	str	r3, [r0, #12]
   12114:	b	11e00 <avl_remove_impl@@Base+0x10c>
   12118:	cmp	r3, #0
   1211c:	bge	11ee4 <avl_remove_impl@@Base+0x1f0>
   12120:	str	r4, [r0, #8]
   12124:	str	r5, [r4, #4]
   12128:	b	120cc <avl_remove_impl@@Base+0x3d8>
   1212c:	orr	r3, r3, r3, asr #31
   12130:	add	r3, r3, #1
   12134:	b	11f18 <avl_remove_impl@@Base+0x224>
   12138:	mvn	ip, #0
   1213c:	cmp	r3, ip
   12140:	str	r4, [r2, #4]
   12144:	ldr	r1, [r4, #4]
   12148:	movlt	r3, ip
   1214c:	add	r3, r3, #1
   12150:	cmp	r1, #0
   12154:	str	r3, [r2, #12]
   12158:	str	r0, [r4, #8]
   1215c:	moveq	r3, r1
   12160:	beq	11fe4 <avl_remove_impl@@Base+0x2f0>
   12164:	ldr	r3, [r1, #12]
   12168:	cmp	r3, ip
   1216c:	movlt	r3, ip
   12170:	add	r3, r3, #1
   12174:	b	11fe4 <avl_remove_impl@@Base+0x2f0>
   12178:	str	r5, [r4, #12]
   1217c:	b	11ea4 <avl_remove_impl@@Base+0x1b0>
   12180:	ldr	r5, [r4, #8]
   12184:	cmp	r5, #0
   12188:	bne	1207c <avl_remove_impl@@Base+0x388>
   1218c:	mov	r0, r7
   12190:	bl	10d54 <free@plt>
   12194:	mov	r0, r4
   12198:	bl	10d54 <free@plt>
   1219c:	b	11e00 <avl_remove_impl@@Base+0x10c>
   121a0:	cmp	r2, #0
   121a4:	mvnne	r3, #0
   121a8:	bne	11ed4 <avl_remove_impl@@Base+0x1e0>
   121ac:	str	r4, [r0, #8]
   121b0:	mvn	r1, #0
   121b4:	str	r2, [r4, #4]
   121b8:	b	120d0 <avl_remove_impl@@Base+0x3dc>
   121bc:	mvn	r1, #0
   121c0:	cmp	r3, r1
   121c4:	movlt	r3, r1
   121c8:	add	r3, r3, #1
   121cc:	str	r4, [r5, #8]
   121d0:	str	r3, [r5, #12]
   121d4:	str	r2, [r4, #4]
   121d8:	b	11f48 <avl_remove_impl@@Base+0x254>
   121dc:	mvn	r1, #0
   121e0:	b	120d0 <avl_remove_impl@@Base+0x3dc>

000121e4 <avl_apaga@@Base>:
   121e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121e8:	subs	r6, r0, #0
   121ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121f0:	ldr	r4, [r6]
   121f4:	cmp	r4, #0
   121f8:	beq	12360 <avl_apaga@@Base+0x17c>
   121fc:	ldr	r3, [r4, #4]
   12200:	mvn	r7, #0
   12204:	subs	r9, r3, #0
   12208:	mov	r8, #0
   1220c:	ldr	sl, [r4]
   12210:	beq	12344 <avl_apaga@@Base+0x160>
   12214:	ldr	r5, [r4, #8]
   12218:	cmp	r5, #0
   1221c:	bne	12228 <avl_apaga@@Base+0x44>
   12220:	b	1236c <avl_apaga@@Base+0x188>
   12224:	mov	r5, r3
   12228:	ldr	r3, [r5, #4]
   1222c:	cmp	r3, #0
   12230:	bne	12224 <avl_apaga@@Base+0x40>
   12234:	ldr	r0, [r5]
   12238:	bl	10dcc <strlen@plt>
   1223c:	add	r1, r0, #1
   12240:	mov	r0, sl
   12244:	bl	10d84 <realloc@plt>
   12248:	str	r0, [r4]
   1224c:	ldr	r1, [r5]
   12250:	bl	10d90 <strcpy@plt>
   12254:	ldr	r1, [r5]
   12258:	ldr	r0, [r4, #8]
   1225c:	bl	11cf4 <avl_remove_impl@@Base>
   12260:	ldr	r3, [r4, #4]
   12264:	cmp	r3, #0
   12268:	str	r0, [r4, #8]
   1226c:	beq	123b4 <avl_apaga@@Base+0x1d0>
   12270:	cmp	r0, #0
   12274:	ldr	r2, [r3, #12]
   12278:	beq	1257c <avl_apaga@@Base+0x398>
   1227c:	ldr	r1, [r0, #12]
   12280:	cmp	r2, r1
   12284:	movlt	r2, r1
   12288:	add	r2, r2, #1
   1228c:	str	r2, [r4, #12]
   12290:	ldr	r2, [r0, #12]
   12294:	ldr	r1, [r3, #12]
   12298:	sub	r2, r2, r1
   1229c:	cmp	r2, #1
   122a0:	ble	123e0 <avl_apaga@@Base+0x1fc>
   122a4:	cmp	r0, #0
   122a8:	beq	12594 <avl_apaga@@Base+0x3b0>
   122ac:	ldmib	r0, {r2, r3}
   122b0:	cmp	r3, #0
   122b4:	beq	1259c <avl_apaga@@Base+0x3b8>
   122b8:	cmp	r2, #0
   122bc:	ldr	r3, [r3, #12]
   122c0:	moveq	r1, r7
   122c4:	beq	122cc <avl_apaga@@Base+0xe8>
   122c8:	ldr	r1, [r2, #12]
   122cc:	sub	r3, r3, r1
   122d0:	cmp	r3, #0
   122d4:	blt	124cc <avl_apaga@@Base+0x2e8>
   122d8:	str	r4, [r0, #4]
   122dc:	ldr	r3, [r4, #4]
   122e0:	str	r2, [r4, #8]
   122e4:	cmp	r3, #0
   122e8:	moveq	r1, r7
   122ec:	ldrne	r1, [r3, #12]
   122f0:	cmp	r2, #0
   122f4:	beq	125c0 <avl_apaga@@Base+0x3dc>
   122f8:	ldr	r3, [r2, #12]
   122fc:	ldr	r2, [r0, #8]
   12300:	cmp	r3, r1
   12304:	movlt	r3, r1
   12308:	cmp	r2, #0
   1230c:	add	r3, r3, #1
   12310:	str	r3, [r4, #12]
   12314:	ldrne	r2, [r2, #12]
   12318:	moveq	r2, r7
   1231c:	cmp	r3, r2
   12320:	movlt	r3, r2
   12324:	add	r3, r3, #1
   12328:	str	r3, [r0, #12]
   1232c:	ldr	r3, [r0, #4]
   12330:	mov	r4, r0
   12334:	subs	r9, r3, #0
   12338:	str	r4, [r6]
   1233c:	ldr	sl, [r4]
   12340:	bne	12214 <avl_apaga@@Base+0x30>
   12344:	ldr	r9, [r4, #8]
   12348:	cmp	r9, #0
   1234c:	bne	1236c <avl_apaga@@Base+0x188>
   12350:	mov	r0, sl
   12354:	bl	10d54 <free@plt>
   12358:	mov	r0, r4
   1235c:	bl	10d54 <free@plt>
   12360:	mov	r0, r6
   12364:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12368:	b	10d54 <free@plt>
   1236c:	ldr	r0, [r9]
   12370:	bl	10dcc <strlen@plt>
   12374:	add	r1, r0, #1
   12378:	mov	r0, sl
   1237c:	bl	10d84 <realloc@plt>
   12380:	str	r0, [r4]
   12384:	ldr	r1, [r9]
   12388:	bl	10d90 <strcpy@plt>
   1238c:	ldmib	r9, {r1, r2, r3}
   12390:	ldr	r0, [r9]
   12394:	stmib	r4, {r1, r2, r3}
   12398:	bl	10d54 <free@plt>
   1239c:	mov	r0, r9
   123a0:	bl	10d54 <free@plt>
   123a4:	ldr	r3, [r4, #4]
   123a8:	ldr	r0, [r4, #8]
   123ac:	cmp	r3, #0
   123b0:	bne	12270 <avl_apaga@@Base+0x8c>
   123b4:	cmp	r0, #0
   123b8:	beq	12678 <avl_apaga@@Base+0x494>
   123bc:	ldr	r2, [r0, #12]
   123c0:	cmp	r2, r7
   123c4:	movlt	r2, r7
   123c8:	add	r2, r2, #1
   123cc:	str	r2, [r4, #12]
   123d0:	ldr	r2, [r0, #12]
   123d4:	add	r2, r2, #1
   123d8:	cmp	r2, #1
   123dc:	bgt	122ac <avl_apaga@@Base+0xc8>
   123e0:	cmn	r2, #1
   123e4:	bge	12334 <avl_apaga@@Base+0x150>
   123e8:	cmp	r3, #0
   123ec:	ldr	r2, [r3, #8]
   123f0:	beq	125c8 <avl_apaga@@Base+0x3e4>
   123f4:	cmp	r2, #0
   123f8:	ldr	r0, [r3, #4]
   123fc:	beq	12680 <avl_apaga@@Base+0x49c>
   12400:	cmp	r0, #0
   12404:	ldr	r1, [r2, #12]
   12408:	beq	12664 <avl_apaga@@Base+0x480>
   1240c:	ldr	r0, [r0, #12]
   12410:	sub	r1, r1, r0
   12414:	cmp	r1, #0
   12418:	ble	125c8 <avl_apaga@@Base+0x3e4>
   1241c:	ldr	r0, [r2, #4]
   12420:	str	r3, [r2, #4]
   12424:	ldr	r1, [r3, #4]
   12428:	str	r0, [r3, #8]
   1242c:	cmp	r1, #0
   12430:	moveq	r1, r7
   12434:	ldrne	r1, [r1, #12]
   12438:	cmp	r0, #0
   1243c:	beq	1269c <avl_apaga@@Base+0x4b8>
   12440:	ldr	r0, [r0, #12]
   12444:	cmp	r1, r0
   12448:	movlt	r1, r0
   1244c:	add	r1, r1, #1
   12450:	ldr	r0, [r2, #8]
   12454:	str	r1, [r3, #12]
   12458:	cmp	r0, #0
   1245c:	beq	126ac <avl_apaga@@Base+0x4c8>
   12460:	ldr	r3, [r0, #12]
   12464:	str	r4, [r2, #8]
   12468:	cmp	r1, r3
   1246c:	movge	r3, r1
   12470:	add	r3, r3, #1
   12474:	str	r3, [r2, #12]
   12478:	ldr	r1, [r0, #12]
   1247c:	str	r0, [r4, #4]
   12480:	ldr	r3, [r4, #8]
   12484:	ldr	r0, [r2, #4]
   12488:	cmp	r3, #0
   1248c:	moveq	r3, r7
   12490:	ldrne	r3, [r3, #12]
   12494:	cmp	r3, r1
   12498:	movlt	r3, r1
   1249c:	cmp	r0, #0
   124a0:	add	r3, r3, #1
   124a4:	str	r3, [r4, #12]
   124a8:	ldrne	r1, [r0, #12]
   124ac:	moveq	r1, r7
   124b0:	cmp	r3, r1
   124b4:	movlt	r3, r1
   124b8:	add	r3, r3, #1
   124bc:	str	r3, [r2, #12]
   124c0:	mov	r4, r2
   124c4:	ldr	r3, [r2, #4]
   124c8:	b	12334 <avl_apaga@@Base+0x150>
   124cc:	ldr	r3, [r2, #8]
   124d0:	str	r0, [r2, #8]
   124d4:	cmp	r3, #0
   124d8:	str	r3, [r0, #4]
   124dc:	ldrne	ip, [r3, #12]
   124e0:	ldr	r3, [r0, #8]
   124e4:	moveq	ip, r7
   124e8:	cmp	r3, #0
   124ec:	moveq	r3, r7
   124f0:	ldrne	r3, [r3, #12]
   124f4:	ldr	r1, [r2, #4]
   124f8:	cmp	r3, ip
   124fc:	movlt	r3, ip
   12500:	add	r3, r3, #1
   12504:	cmp	r1, #0
   12508:	str	r3, [r0, #12]
   1250c:	beq	1262c <avl_apaga@@Base+0x448>
   12510:	ldr	r0, [r1, #12]
   12514:	str	r4, [r2, #4]
   12518:	ldr	ip, [r4, #4]
   1251c:	cmp	r3, r0
   12520:	movlt	r3, r0
   12524:	cmp	ip, #0
   12528:	add	r3, r3, #1
   1252c:	str	r3, [r2, #12]
   12530:	str	r1, [r4, #8]
   12534:	ldrne	r3, [ip, #12]
   12538:	ldr	r1, [r1, #12]
   1253c:	moveq	r3, r7
   12540:	cmp	r3, r1
   12544:	movlt	r3, r1
   12548:	add	r3, r3, #1
   1254c:	ldr	r1, [r2, #8]
   12550:	str	r3, [r4, #12]
   12554:	cmp	r1, #0
   12558:	moveq	r1, r7
   1255c:	ldrne	r1, [r1, #12]
   12560:	mov	r4, r2
   12564:	cmp	r1, r3
   12568:	movge	r3, r1
   1256c:	add	r3, r3, #1
   12570:	str	r3, [r2, #12]
   12574:	ldr	r3, [r2, #4]
   12578:	b	12334 <avl_apaga@@Base+0x150>
   1257c:	cmp	r2, r7
   12580:	movlt	r2, r7
   12584:	add	r2, r2, #1
   12588:	str	r2, [r4, #12]
   1258c:	mvn	r2, #0
   12590:	b	12294 <avl_apaga@@Base+0xb0>
   12594:	ldr	r2, [r0, #4]
   12598:	b	122d8 <avl_apaga@@Base+0xf4>
   1259c:	cmp	r2, #0
   125a0:	movne	r3, r7
   125a4:	bne	122c8 <avl_apaga@@Base+0xe4>
   125a8:	str	r4, [r0, #4]
   125ac:	ldr	r3, [r4, #4]
   125b0:	str	r2, [r4, #8]
   125b4:	cmp	r3, #0
   125b8:	beq	126d0 <avl_apaga@@Base+0x4ec>
   125bc:	ldr	r1, [r3, #12]
   125c0:	mov	r3, r7
   125c4:	b	122fc <avl_apaga@@Base+0x118>
   125c8:	cmp	r2, #0
   125cc:	str	r4, [r3, #8]
   125d0:	moveq	r1, r7
   125d4:	str	r2, [r4, #4]
   125d8:	beq	125e0 <avl_apaga@@Base+0x3fc>
   125dc:	ldr	r1, [r2, #12]
   125e0:	ldr	r2, [r4, #8]
   125e4:	ldr	r0, [r3, #4]
   125e8:	cmp	r2, #0
   125ec:	moveq	r2, r7
   125f0:	ldrne	r2, [r2, #12]
   125f4:	cmp	r2, r1
   125f8:	movlt	r2, r1
   125fc:	cmp	r0, #0
   12600:	add	r2, r2, #1
   12604:	str	r2, [r4, #12]
   12608:	ldrne	r1, [r0, #12]
   1260c:	moveq	r1, r7
   12610:	cmp	r2, r1
   12614:	movlt	r2, r1
   12618:	add	r2, r2, #1
   1261c:	str	r2, [r3, #12]
   12620:	mov	r4, r3
   12624:	ldr	r3, [r3, #4]
   12628:	b	12334 <avl_apaga@@Base+0x150>
   1262c:	cmp	r3, r7
   12630:	str	r4, [r2, #4]
   12634:	ldr	r0, [r4, #4]
   12638:	movlt	r3, r7
   1263c:	add	r3, r3, #1
   12640:	cmp	r0, #0
   12644:	str	r3, [r2, #12]
   12648:	str	r1, [r4, #8]
   1264c:	beq	126dc <avl_apaga@@Base+0x4f8>
   12650:	ldr	r3, [r0, #12]
   12654:	cmp	r3, r7
   12658:	movlt	r3, r7
   1265c:	add	r3, r3, #1
   12660:	b	1254c <avl_apaga@@Base+0x368>
   12664:	cmp	r1, #0
   12668:	bge	1241c <avl_apaga@@Base+0x238>
   1266c:	str	r4, [r3, #8]
   12670:	str	r2, [r4, #4]
   12674:	b	125dc <avl_apaga@@Base+0x3f8>
   12678:	str	r3, [r4, #12]
   1267c:	b	12334 <avl_apaga@@Base+0x150>
   12680:	cmp	r0, #0
   12684:	streq	r4, [r3, #8]
   12688:	moveq	r1, r7
   1268c:	streq	r0, [r4, #4]
   12690:	beq	125e0 <avl_apaga@@Base+0x3fc>
   12694:	mov	r1, r7
   12698:	b	1240c <avl_apaga@@Base+0x228>
   1269c:	cmp	r1, r7
   126a0:	movlt	r1, r7
   126a4:	add	r1, r1, #1
   126a8:	b	12450 <avl_apaga@@Base+0x26c>
   126ac:	cmp	r1, r7
   126b0:	movge	r3, r1
   126b4:	movlt	r3, r7
   126b8:	add	r3, r3, #1
   126bc:	str	r3, [r2, #12]
   126c0:	str	r4, [r2, #8]
   126c4:	mvn	r1, #0
   126c8:	str	r0, [r4, #4]
   126cc:	b	12480 <avl_apaga@@Base+0x29c>
   126d0:	mov	r1, r7
   126d4:	mvn	r3, #0
   126d8:	b	122fc <avl_apaga@@Base+0x118>
   126dc:	mov	r3, r8
   126e0:	b	1254c <avl_apaga@@Base+0x368>

000126e4 <avl_remove@@Base>:
   126e4:	cmp	r1, #0
   126e8:	cmpne	r0, #0
   126ec:	beq	12a6c <avl_remove@@Base+0x388>
   126f0:	push	{r4, r5, r6, r7, r8, lr}
   126f4:	mov	r5, r1
   126f8:	ldr	r4, [r0]
   126fc:	mov	r6, r0
   12700:	cmp	r4, #0
   12704:	beq	12804 <avl_remove@@Base+0x120>
   12708:	ldr	r7, [r4]
   1270c:	mov	r0, r1
   12710:	mov	r1, r7
   12714:	bl	10d30 <strcmp@plt>
   12718:	cmp	r0, #0
   1271c:	blt	12a34 <avl_remove@@Base+0x350>
   12720:	beq	12810 <avl_remove@@Base+0x12c>
   12724:	mov	r1, r5
   12728:	ldr	r0, [r4, #8]
   1272c:	bl	11cf4 <avl_remove_impl@@Base>
   12730:	ldr	r1, [r4, #4]
   12734:	str	r0, [r4, #8]
   12738:	cmp	r1, #0
   1273c:	beq	12878 <avl_remove@@Base+0x194>
   12740:	cmp	r0, #0
   12744:	ldr	r3, [r1, #12]
   12748:	beq	12a50 <avl_remove@@Base+0x36c>
   1274c:	ldr	r2, [r0, #12]
   12750:	cmp	r3, r2
   12754:	movlt	r3, r2
   12758:	add	r3, r3, #1
   1275c:	str	r3, [r4, #12]
   12760:	ldr	r3, [r0, #12]
   12764:	ldr	r2, [r1, #12]
   12768:	sub	r3, r3, r2
   1276c:	cmp	r3, #1
   12770:	ble	128a0 <avl_remove@@Base+0x1bc>
   12774:	cmp	r0, #0
   12778:	beq	12a74 <avl_remove@@Base+0x390>
   1277c:	ldmib	r0, {r2, r3}
   12780:	cmp	r3, #0
   12784:	beq	12a7c <avl_remove@@Base+0x398>
   12788:	cmp	r2, #0
   1278c:	ldr	r3, [r3, #12]
   12790:	mvneq	r1, #0
   12794:	beq	1279c <avl_remove@@Base+0xb8>
   12798:	ldr	r1, [r2, #12]
   1279c:	sub	r3, r3, r1
   127a0:	cmp	r3, #0
   127a4:	blt	12988 <avl_remove@@Base+0x2a4>
   127a8:	str	r4, [r0, #4]
   127ac:	ldr	r3, [r4, #4]
   127b0:	str	r2, [r4, #8]
   127b4:	cmp	r3, #0
   127b8:	mvneq	r1, #0
   127bc:	beq	127c4 <avl_remove@@Base+0xe0>
   127c0:	ldr	r1, [r3, #12]
   127c4:	cmp	r2, #0
   127c8:	mvneq	r3, #0
   127cc:	ldrne	r3, [r2, #12]
   127d0:	ldr	r2, [r0, #8]
   127d4:	cmp	r3, r1
   127d8:	movlt	r3, r1
   127dc:	cmp	r2, #0
   127e0:	add	r3, r3, #1
   127e4:	str	r3, [r4, #12]
   127e8:	ldrne	r2, [r2, #12]
   127ec:	mvneq	r2, #0
   127f0:	cmp	r3, r2
   127f4:	movlt	r3, r2
   127f8:	mov	r4, r0
   127fc:	add	r3, r3, #1
   12800:	str	r3, [r0, #12]
   12804:	str	r4, [r6]
   12808:	mov	r0, #0
   1280c:	pop	{r4, r5, r6, r7, r8, pc}
   12810:	ldr	r8, [r4, #4]
   12814:	cmp	r8, #0
   12818:	beq	12ba4 <avl_remove@@Base+0x4c0>
   1281c:	ldr	r5, [r4, #8]
   12820:	cmp	r5, #0
   12824:	bne	12830 <avl_remove@@Base+0x14c>
   12828:	b	12aa8 <avl_remove@@Base+0x3c4>
   1282c:	mov	r5, r3
   12830:	ldr	r3, [r5, #4]
   12834:	cmp	r3, #0
   12838:	bne	1282c <avl_remove@@Base+0x148>
   1283c:	ldr	r0, [r5]
   12840:	bl	10dcc <strlen@plt>
   12844:	add	r1, r0, #1
   12848:	mov	r0, r7
   1284c:	bl	10d84 <realloc@plt>
   12850:	str	r0, [r4]
   12854:	ldr	r1, [r5]
   12858:	bl	10d90 <strcpy@plt>
   1285c:	ldr	r1, [r5]
   12860:	ldr	r0, [r4, #8]
   12864:	bl	11cf4 <avl_remove_impl@@Base>
   12868:	ldr	r1, [r4, #4]
   1286c:	cmp	r1, #0
   12870:	str	r0, [r4, #8]
   12874:	bne	12740 <avl_remove@@Base+0x5c>
   12878:	cmp	r0, #0
   1287c:	beq	12b9c <avl_remove@@Base+0x4b8>
   12880:	ldr	r3, [r0, #12]
   12884:	orr	r3, r3, r3, asr #31
   12888:	add	r3, r3, #1
   1288c:	str	r3, [r4, #12]
   12890:	ldr	r3, [r0, #12]
   12894:	add	r3, r3, #1
   12898:	cmp	r3, #1
   1289c:	bgt	1277c <avl_remove@@Base+0x98>
   128a0:	cmn	r3, #1
   128a4:	bge	12804 <avl_remove@@Base+0x120>
   128a8:	cmp	r1, #0
   128ac:	ldr	r3, [r1, #8]
   128b0:	beq	12aec <avl_remove@@Base+0x408>
   128b4:	cmp	r3, #0
   128b8:	ldr	r0, [r1, #4]
   128bc:	beq	12bc8 <avl_remove@@Base+0x4e4>
   128c0:	cmp	r0, #0
   128c4:	ldr	r2, [r3, #12]
   128c8:	beq	12b48 <avl_remove@@Base+0x464>
   128cc:	ldr	r0, [r0, #12]
   128d0:	sub	r2, r2, r0
   128d4:	cmp	r2, #0
   128d8:	ble	12aec <avl_remove@@Base+0x408>
   128dc:	ldr	r0, [r3, #4]
   128e0:	str	r1, [r3, #4]
   128e4:	ldr	r2, [r1, #4]
   128e8:	str	r0, [r1, #8]
   128ec:	cmp	r2, #0
   128f0:	mvneq	r2, #0
   128f4:	ldrne	r2, [r2, #12]
   128f8:	cmp	r0, #0
   128fc:	beq	12be4 <avl_remove@@Base+0x500>
   12900:	ldr	r0, [r0, #12]
   12904:	cmp	r2, r0
   12908:	movlt	r2, r0
   1290c:	add	r2, r2, #1
   12910:	ldr	r0, [r3, #8]
   12914:	str	r2, [r1, #12]
   12918:	cmp	r0, #0
   1291c:	beq	12bf0 <avl_remove@@Base+0x50c>
   12920:	ldr	r1, [r0, #12]
   12924:	str	r4, [r3, #8]
   12928:	cmp	r2, r1
   1292c:	movlt	r2, r1
   12930:	add	r2, r2, #1
   12934:	str	r2, [r3, #12]
   12938:	ldr	r1, [r0, #12]
   1293c:	str	r0, [r4, #4]
   12940:	ldr	r2, [r4, #8]
   12944:	ldr	r0, [r3, #4]
   12948:	cmp	r2, #0
   1294c:	mvneq	r2, #0
   12950:	ldrne	r2, [r2, #12]
   12954:	cmp	r2, r1
   12958:	movlt	r2, r1
   1295c:	cmp	r0, #0
   12960:	add	r2, r2, #1
   12964:	str	r2, [r4, #12]
   12968:	ldrne	r1, [r0, #12]
   1296c:	mvneq	r1, #0
   12970:	cmp	r2, r1
   12974:	movlt	r2, r1
   12978:	add	r2, r2, #1
   1297c:	str	r2, [r3, #12]
   12980:	mov	r4, r3
   12984:	b	12804 <avl_remove@@Base+0x120>
   12988:	ldr	r3, [r2, #8]
   1298c:	str	r0, [r2, #8]
   12990:	cmp	r3, #0
   12994:	str	r3, [r0, #4]
   12998:	ldrne	r1, [r3, #12]
   1299c:	ldr	r3, [r0, #8]
   129a0:	mvneq	r1, #0
   129a4:	cmp	r3, #0
   129a8:	mvneq	r3, #0
   129ac:	ldrne	r3, [r3, #12]
   129b0:	ldr	ip, [r2, #4]
   129b4:	cmp	r3, r1
   129b8:	movlt	r3, r1
   129bc:	add	r3, r3, #1
   129c0:	cmp	ip, #0
   129c4:	str	r3, [r0, #12]
   129c8:	beq	12b5c <avl_remove@@Base+0x478>
   129cc:	ldr	r0, [ip, #12]
   129d0:	str	r4, [r2, #4]
   129d4:	ldr	r1, [r4, #4]
   129d8:	cmp	r3, r0
   129dc:	movlt	r3, r0
   129e0:	cmp	r1, #0
   129e4:	add	r3, r3, #1
   129e8:	str	r3, [r2, #12]
   129ec:	ldrne	r3, [r1, #12]
   129f0:	ldr	r1, [ip, #12]
   129f4:	mvneq	r3, #0
   129f8:	cmp	r3, r1
   129fc:	movlt	r3, r1
   12a00:	add	r3, r3, #1
   12a04:	str	ip, [r4, #8]
   12a08:	ldr	r1, [r2, #8]
   12a0c:	str	r3, [r4, #12]
   12a10:	cmp	r1, #0
   12a14:	mvneq	r1, #0
   12a18:	ldrne	r1, [r1, #12]
   12a1c:	mov	r4, r2
   12a20:	cmp	r1, r3
   12a24:	movge	r3, r1
   12a28:	add	r3, r3, #1
   12a2c:	str	r3, [r2, #12]
   12a30:	b	12804 <avl_remove@@Base+0x120>
   12a34:	mov	r1, r5
   12a38:	ldr	r0, [r4, #4]
   12a3c:	bl	11cf4 <avl_remove_impl@@Base>
   12a40:	mov	r1, r0
   12a44:	str	r0, [r4, #4]
   12a48:	ldr	r0, [r4, #8]
   12a4c:	b	12738 <avl_remove@@Base+0x54>
   12a50:	mvn	r2, #0
   12a54:	cmp	r3, r2
   12a58:	movlt	r3, r2
   12a5c:	add	r3, r3, #1
   12a60:	str	r3, [r4, #12]
   12a64:	mov	r3, r2
   12a68:	b	12764 <avl_remove@@Base+0x80>
   12a6c:	mvn	r0, #0
   12a70:	bx	lr
   12a74:	ldr	r2, [r0, #4]
   12a78:	b	127a8 <avl_remove@@Base+0xc4>
   12a7c:	cmp	r2, #0
   12a80:	mvnne	r3, #0
   12a84:	bne	12798 <avl_remove@@Base+0xb4>
   12a88:	str	r4, [r0, #4]
   12a8c:	ldr	r3, [r4, #4]
   12a90:	str	r2, [r4, #8]
   12a94:	cmp	r3, #0
   12a98:	bne	127c0 <avl_remove@@Base+0xdc>
   12a9c:	mvn	r1, #0
   12aa0:	mov	r3, r1
   12aa4:	b	127d0 <avl_remove@@Base+0xec>
   12aa8:	ldr	r0, [r8]
   12aac:	bl	10dcc <strlen@plt>
   12ab0:	add	r1, r0, #1
   12ab4:	mov	r0, r7
   12ab8:	bl	10d84 <realloc@plt>
   12abc:	str	r0, [r4]
   12ac0:	ldr	r1, [r8]
   12ac4:	bl	10d90 <strcpy@plt>
   12ac8:	ldmib	r8, {r1, r2, r3}
   12acc:	ldr	r0, [r8]
   12ad0:	stmib	r4, {r1, r2, r3}
   12ad4:	bl	10d54 <free@plt>
   12ad8:	mov	r0, r8
   12adc:	bl	10d54 <free@plt>
   12ae0:	ldr	r1, [r4, #4]
   12ae4:	ldr	r0, [r4, #8]
   12ae8:	b	12738 <avl_remove@@Base+0x54>
   12aec:	cmp	r3, #0
   12af0:	str	r4, [r1, #8]
   12af4:	str	r3, [r4, #4]
   12af8:	beq	12c10 <avl_remove@@Base+0x52c>
   12afc:	ldr	r2, [r3, #12]
   12b00:	ldr	r3, [r4, #8]
   12b04:	ldr	r0, [r1, #4]
   12b08:	cmp	r3, #0
   12b0c:	mvneq	r3, #0
   12b10:	ldrne	r3, [r3, #12]
   12b14:	cmp	r3, r2
   12b18:	movlt	r3, r2
   12b1c:	cmp	r0, #0
   12b20:	add	r3, r3, #1
   12b24:	str	r3, [r4, #12]
   12b28:	ldrne	r2, [r0, #12]
   12b2c:	mvneq	r2, #0
   12b30:	cmp	r3, r2
   12b34:	movlt	r3, r2
   12b38:	add	r3, r3, #1
   12b3c:	mov	r4, r1
   12b40:	str	r3, [r1, #12]
   12b44:	b	12804 <avl_remove@@Base+0x120>
   12b48:	cmp	r2, #0
   12b4c:	bge	128dc <avl_remove@@Base+0x1f8>
   12b50:	str	r4, [r1, #8]
   12b54:	str	r3, [r4, #4]
   12b58:	b	12afc <avl_remove@@Base+0x418>
   12b5c:	mvn	r0, #0
   12b60:	cmp	r3, r0
   12b64:	str	r4, [r2, #4]
   12b68:	ldr	r1, [r4, #4]
   12b6c:	movlt	r3, r0
   12b70:	add	r3, r3, #1
   12b74:	cmp	r1, #0
   12b78:	str	r3, [r2, #12]
   12b7c:	str	ip, [r4, #8]
   12b80:	moveq	r3, r1
   12b84:	beq	12a08 <avl_remove@@Base+0x324>
   12b88:	ldr	r3, [r1, #12]
   12b8c:	cmp	r3, r0
   12b90:	movlt	r3, r0
   12b94:	add	r3, r3, #1
   12b98:	b	12a08 <avl_remove@@Base+0x324>
   12b9c:	str	r0, [r4, #12]
   12ba0:	b	12804 <avl_remove@@Base+0x120>
   12ba4:	ldr	r8, [r4, #8]
   12ba8:	cmp	r8, #0
   12bac:	bne	12aa8 <avl_remove@@Base+0x3c4>
   12bb0:	mov	r0, r7
   12bb4:	bl	10d54 <free@plt>
   12bb8:	mov	r0, r4
   12bbc:	bl	10d54 <free@plt>
   12bc0:	mov	r4, r8
   12bc4:	b	12804 <avl_remove@@Base+0x120>
   12bc8:	cmp	r0, #0
   12bcc:	mvnne	r2, #0
   12bd0:	bne	128cc <avl_remove@@Base+0x1e8>
   12bd4:	str	r4, [r1, #8]
   12bd8:	mvn	r2, #0
   12bdc:	str	r0, [r4, #4]
   12be0:	b	12b00 <avl_remove@@Base+0x41c>
   12be4:	orr	r2, r2, r2, asr #31
   12be8:	add	r2, r2, #1
   12bec:	b	12910 <avl_remove@@Base+0x22c>
   12bf0:	mvn	r1, #0
   12bf4:	cmp	r2, r1
   12bf8:	movlt	r2, r1
   12bfc:	add	r2, r2, #1
   12c00:	str	r4, [r3, #8]
   12c04:	str	r2, [r3, #12]
   12c08:	str	r0, [r4, #4]
   12c0c:	b	12940 <avl_remove@@Base+0x25c>
   12c10:	mvn	r2, #0
   12c14:	b	12b00 <avl_remove@@Base+0x41c>

00012c18 <avl_preordem_impl@@Base>:
   12c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c1c:	sub	sp, sp, #12
   12c20:	subs	r3, r0, #0
   12c24:	str	r3, [sp, #4]
   12c28:	beq	12db0 <avl_preordem_impl@@Base+0x198>
   12c2c:	ldr	r4, [pc, #388]	; 12db8 <avl_preordem_impl@@Base+0x1a0>
   12c30:	ldr	r5, [sp, #4]
   12c34:	mov	r0, r4
   12c38:	ldr	r2, [r5, #16]
   12c3c:	ldr	r1, [r5]
   12c40:	bl	10d3c <printf@plt>
   12c44:	ldr	r3, [r5, #4]
   12c48:	cmp	r3, #0
   12c4c:	str	r3, [sp]
   12c50:	beq	12d9c <avl_preordem_impl@@Base+0x184>
   12c54:	ldr	r5, [sp]
   12c58:	mov	r0, r4
   12c5c:	ldr	r2, [r5, #16]
   12c60:	ldr	r1, [r5]
   12c64:	bl	10d3c <printf@plt>
   12c68:	ldr	r7, [r5, #4]
   12c6c:	cmp	r7, #0
   12c70:	beq	12d88 <avl_preordem_impl@@Base+0x170>
   12c74:	ldr	r2, [r7, #16]
   12c78:	ldr	r1, [r7]
   12c7c:	mov	r0, r4
   12c80:	bl	10d3c <printf@plt>
   12c84:	ldr	r9, [r7, #4]
   12c88:	cmp	r9, #0
   12c8c:	beq	12d7c <avl_preordem_impl@@Base+0x164>
   12c90:	ldr	r2, [r9, #16]
   12c94:	ldr	r1, [r9]
   12c98:	mov	r0, r4
   12c9c:	bl	10d3c <printf@plt>
   12ca0:	ldr	sl, [r9, #4]
   12ca4:	cmp	sl, #0
   12ca8:	beq	12d70 <avl_preordem_impl@@Base+0x158>
   12cac:	ldr	r2, [sl, #16]
   12cb0:	ldr	r1, [sl]
   12cb4:	mov	r0, r4
   12cb8:	bl	10d3c <printf@plt>
   12cbc:	ldr	fp, [sl, #4]
   12cc0:	cmp	fp, #0
   12cc4:	beq	12d64 <avl_preordem_impl@@Base+0x14c>
   12cc8:	ldr	r2, [fp, #16]
   12ccc:	ldr	r1, [fp]
   12cd0:	mov	r0, r4
   12cd4:	bl	10d3c <printf@plt>
   12cd8:	ldr	r8, [fp, #4]
   12cdc:	cmp	r8, #0
   12ce0:	beq	12d58 <avl_preordem_impl@@Base+0x140>
   12ce4:	ldr	r2, [r8, #16]
   12ce8:	ldr	r1, [r8]
   12cec:	mov	r0, r4
   12cf0:	bl	10d3c <printf@plt>
   12cf4:	ldr	r6, [r8, #4]
   12cf8:	cmp	r6, #0
   12cfc:	beq	12d4c <avl_preordem_impl@@Base+0x134>
   12d00:	ldr	r2, [r6, #16]
   12d04:	ldr	r1, [r6]
   12d08:	mov	r0, r4
   12d0c:	bl	10d3c <printf@plt>
   12d10:	ldr	r5, [r6, #4]
   12d14:	cmp	r5, #0
   12d18:	beq	12d40 <avl_preordem_impl@@Base+0x128>
   12d1c:	ldr	r2, [r5, #16]
   12d20:	ldr	r1, [r5]
   12d24:	mov	r0, r4
   12d28:	bl	10d3c <printf@plt>
   12d2c:	ldr	r0, [r5, #4]
   12d30:	bl	12c18 <avl_preordem_impl@@Base>
   12d34:	ldr	r5, [r5, #8]
   12d38:	cmp	r5, #0
   12d3c:	bne	12d1c <avl_preordem_impl@@Base+0x104>
   12d40:	ldr	r6, [r6, #8]
   12d44:	cmp	r6, #0
   12d48:	bne	12d00 <avl_preordem_impl@@Base+0xe8>
   12d4c:	ldr	r8, [r8, #8]
   12d50:	cmp	r8, #0
   12d54:	bne	12ce4 <avl_preordem_impl@@Base+0xcc>
   12d58:	ldr	fp, [fp, #8]
   12d5c:	cmp	fp, #0
   12d60:	bne	12cc8 <avl_preordem_impl@@Base+0xb0>
   12d64:	ldr	sl, [sl, #8]
   12d68:	cmp	sl, #0
   12d6c:	bne	12cac <avl_preordem_impl@@Base+0x94>
   12d70:	ldr	r9, [r9, #8]
   12d74:	cmp	r9, #0
   12d78:	bne	12c90 <avl_preordem_impl@@Base+0x78>
   12d7c:	ldr	r7, [r7, #8]
   12d80:	cmp	r7, #0
   12d84:	bne	12c74 <avl_preordem_impl@@Base+0x5c>
   12d88:	ldr	r3, [sp]
   12d8c:	ldr	r3, [r3, #8]
   12d90:	cmp	r3, #0
   12d94:	str	r3, [sp]
   12d98:	bne	12c54 <avl_preordem_impl@@Base+0x3c>
   12d9c:	ldr	r3, [sp, #4]
   12da0:	ldr	r3, [r3, #8]
   12da4:	cmp	r3, #0
   12da8:	str	r3, [sp, #4]
   12dac:	bne	12c30 <avl_preordem_impl@@Base+0x18>
   12db0:	add	sp, sp, #12
   12db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12db8:	andeq	r4, r1, ip, lsr #14

00012dbc <avl_imprime@@Base>:
   12dbc:	cmp	r0, #0
   12dc0:	bxeq	lr
   12dc4:	push	{r4, r5, r6, lr}
   12dc8:	ldr	r4, [r0]
   12dcc:	cmp	r4, #0
   12dd0:	ldrne	r5, [pc, #48]	; 12e08 <avl_imprime@@Base+0x4c>
   12dd4:	beq	12dfc <avl_imprime@@Base+0x40>
   12dd8:	ldr	r2, [r4, #16]
   12ddc:	ldr	r1, [r4]
   12de0:	mov	r0, r5
   12de4:	bl	10d3c <printf@plt>
   12de8:	ldr	r0, [r4, #4]
   12dec:	bl	12c18 <avl_preordem_impl@@Base>
   12df0:	ldr	r4, [r4, #8]
   12df4:	cmp	r4, #0
   12df8:	bne	12dd8 <avl_imprime@@Base+0x1c>
   12dfc:	mov	r0, #10
   12e00:	pop	{r4, r5, r6, lr}
   12e04:	b	10dd8 <putchar@plt>
   12e08:	andeq	r4, r1, ip, lsr #14

00012e0c <bst_nova@@Base>:
   12e0c:	push	{r4, lr}
   12e10:	mov	r0, #4
   12e14:	bl	10da8 <malloc@plt>
   12e18:	cmp	r0, #0
   12e1c:	movne	r3, #0
   12e20:	strne	r3, [r0]
   12e24:	pop	{r4, pc}

00012e28 <bst_pesquisa@@Base>:
   12e28:	cmp	r1, #0
   12e2c:	cmpne	r0, #0
   12e30:	push	{r4, r5, r6, lr}
   12e34:	moveq	r4, #0
   12e38:	beq	12e74 <bst_pesquisa@@Base+0x4c>
   12e3c:	ldr	r4, [r0]
   12e40:	mov	r5, r1
   12e44:	cmp	r4, #0
   12e48:	beq	12e74 <bst_pesquisa@@Base+0x4c>
   12e4c:	ldr	r1, [r4]
   12e50:	mov	r0, r5
   12e54:	bl	10d30 <strcmp@plt>
   12e58:	cmp	r0, #0
   12e5c:	ldrlt	r4, [r4, #4]
   12e60:	blt	12e6c <bst_pesquisa@@Base+0x44>
   12e64:	beq	12e74 <bst_pesquisa@@Base+0x4c>
   12e68:	ldr	r4, [r4, #8]
   12e6c:	cmp	r4, #0
   12e70:	bne	12e4c <bst_pesquisa@@Base+0x24>
   12e74:	mov	r0, r4
   12e78:	pop	{r4, r5, r6, pc}

00012e7c <bst_min@@Base>:
   12e7c:	cmp	r0, #0
   12e80:	bxeq	lr
   12e84:	ldr	r2, [r0]
   12e88:	b	12e90 <bst_min@@Base+0x14>
   12e8c:	mov	r2, r3
   12e90:	ldr	r3, [r2, #4]
   12e94:	cmp	r3, #0
   12e98:	bne	12e8c <bst_min@@Base+0x10>
   12e9c:	ldr	r0, [r2]
   12ea0:	bx	lr

00012ea4 <bst_max@@Base>:
   12ea4:	cmp	r0, #0
   12ea8:	bxeq	lr
   12eac:	ldr	r2, [r0]
   12eb0:	b	12eb8 <bst_max@@Base+0x14>
   12eb4:	mov	r2, r3
   12eb8:	ldr	r3, [r2, #8]
   12ebc:	cmp	r3, #0
   12ec0:	bne	12eb4 <bst_max@@Base+0x10>
   12ec4:	ldr	r0, [r2]
   12ec8:	bx	lr

00012ecc <bst_novo_no@@Base>:
   12ecc:	push	{r4, r5, r6, lr}
   12ed0:	mov	r5, r0
   12ed4:	mov	r0, #12
   12ed8:	bl	10da8 <malloc@plt>
   12edc:	mov	r4, r0
   12ee0:	mov	r0, r5
   12ee4:	bl	10dcc <strlen@plt>
   12ee8:	add	r6, r0, #1
   12eec:	mov	r0, r6
   12ef0:	bl	10da8 <malloc@plt>
   12ef4:	mov	r2, r6
   12ef8:	mov	r1, r5
   12efc:	str	r0, [r4]
   12f00:	bl	10d6c <memcpy@plt>
   12f04:	mov	r3, #0
   12f08:	str	r3, [r4, #4]
   12f0c:	str	r3, [r4, #8]
   12f10:	mov	r0, r4
   12f14:	pop	{r4, r5, r6, pc}

00012f18 <bst_no_valormin@@Base>:
   12f18:	b	12f20 <bst_no_valormin@@Base+0x8>
   12f1c:	mov	r0, r3
   12f20:	ldr	r3, [r0, #4]
   12f24:	cmp	r3, #0
   12f28:	bne	12f1c <bst_no_valormin@@Base+0x4>
   12f2c:	bx	lr

00012f30 <bst_no_valormax@@Base>:
   12f30:	b	12f38 <bst_no_valormax@@Base+0x8>
   12f34:	mov	r0, r3
   12f38:	ldr	r3, [r0, #8]
   12f3c:	cmp	r3, #0
   12f40:	bne	12f34 <bst_no_valormax@@Base+0x4>
   12f44:	bx	lr

00012f48 <bst_pesquisa_impl@@Base>:
   12f48:	push	{r4, r5, r6, lr}
   12f4c:	subs	r4, r0, #0
   12f50:	beq	12f80 <bst_pesquisa_impl@@Base+0x38>
   12f54:	mov	r5, r1
   12f58:	ldr	r1, [r4]
   12f5c:	mov	r0, r5
   12f60:	bl	10d30 <strcmp@plt>
   12f64:	cmp	r0, #0
   12f68:	ldrlt	r4, [r4, #4]
   12f6c:	blt	12f78 <bst_pesquisa_impl@@Base+0x30>
   12f70:	beq	12f80 <bst_pesquisa_impl@@Base+0x38>
   12f74:	ldr	r4, [r4, #8]
   12f78:	cmp	r4, #0
   12f7c:	bne	12f58 <bst_pesquisa_impl@@Base+0x10>
   12f80:	mov	r0, r4
   12f84:	pop	{r4, r5, r6, pc}

00012f88 <bst_insere_impl@@Base>:
   12f88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f8c:	subs	r4, r0, #0
   12f90:	mov	r5, r1
   12f94:	beq	13068 <bst_insere_impl@@Base+0xe0>
   12f98:	ldr	r1, [r4]
   12f9c:	mov	r0, r5
   12fa0:	bl	10d30 <strcmp@plt>
   12fa4:	cmp	r0, #0
   12fa8:	blt	13040 <bst_insere_impl@@Base+0xb8>
   12fac:	beq	13038 <bst_insere_impl@@Base+0xb0>
   12fb0:	ldr	r6, [r4, #8]
   12fb4:	cmp	r6, #0
   12fb8:	beq	130bc <bst_insere_impl@@Base+0x134>
   12fbc:	ldr	r1, [r6]
   12fc0:	mov	r0, r5
   12fc4:	bl	10d30 <strcmp@plt>
   12fc8:	cmp	r0, #0
   12fcc:	blt	13054 <bst_insere_impl@@Base+0xcc>
   12fd0:	beq	13034 <bst_insere_impl@@Base+0xac>
   12fd4:	ldr	r7, [r6, #8]
   12fd8:	cmp	r7, #0
   12fdc:	beq	13110 <bst_insere_impl@@Base+0x188>
   12fe0:	ldr	r1, [r7]
   12fe4:	mov	r0, r5
   12fe8:	bl	10d30 <strcmp@plt>
   12fec:	cmp	r0, #0
   12ff0:	blt	130a8 <bst_insere_impl@@Base+0x120>
   12ff4:	beq	13030 <bst_insere_impl@@Base+0xa8>
   12ff8:	ldr	r8, [r7, #8]
   12ffc:	cmp	r8, #0
   13000:	beq	13150 <bst_insere_impl@@Base+0x1c8>
   13004:	ldr	r1, [r8]
   13008:	mov	r0, r5
   1300c:	bl	10d30 <strcmp@plt>
   13010:	cmp	r0, #0
   13014:	blt	130fc <bst_insere_impl@@Base+0x174>
   13018:	beq	1302c <bst_insere_impl@@Base+0xa4>
   1301c:	mov	r1, r5
   13020:	ldr	r0, [r8, #8]
   13024:	bl	12f88 <bst_insere_impl@@Base>
   13028:	str	r0, [r8, #8]
   1302c:	str	r8, [r7, #8]
   13030:	str	r7, [r6, #8]
   13034:	str	r6, [r4, #8]
   13038:	mov	r0, r4
   1303c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13040:	mov	r1, r5
   13044:	ldr	r0, [r4, #4]
   13048:	bl	12f88 <bst_insere_impl@@Base>
   1304c:	str	r0, [r4, #4]
   13050:	b	13038 <bst_insere_impl@@Base+0xb0>
   13054:	mov	r1, r5
   13058:	ldr	r0, [r6, #4]
   1305c:	bl	12f88 <bst_insere_impl@@Base>
   13060:	str	r0, [r6, #4]
   13064:	b	13034 <bst_insere_impl@@Base+0xac>
   13068:	mov	r0, #12
   1306c:	bl	10da8 <malloc@plt>
   13070:	mov	r4, r0
   13074:	mov	r0, r5
   13078:	bl	10dcc <strlen@plt>
   1307c:	add	r6, r0, #1
   13080:	mov	r0, r6
   13084:	bl	10da8 <malloc@plt>
   13088:	mov	r2, r6
   1308c:	mov	r1, r5
   13090:	str	r0, [r4]
   13094:	bl	10d6c <memcpy@plt>
   13098:	mov	r3, #0
   1309c:	str	r3, [r4, #4]
   130a0:	str	r3, [r4, #8]
   130a4:	b	13038 <bst_insere_impl@@Base+0xb0>
   130a8:	mov	r1, r5
   130ac:	ldr	r0, [r7, #4]
   130b0:	bl	12f88 <bst_insere_impl@@Base>
   130b4:	str	r0, [r7, #4]
   130b8:	b	13030 <bst_insere_impl@@Base+0xa8>
   130bc:	mov	r0, #12
   130c0:	bl	10da8 <malloc@plt>
   130c4:	mov	r6, r0
   130c8:	mov	r0, r5
   130cc:	bl	10dcc <strlen@plt>
   130d0:	add	r7, r0, #1
   130d4:	mov	r0, r7
   130d8:	bl	10da8 <malloc@plt>
   130dc:	mov	r2, r7
   130e0:	mov	r1, r5
   130e4:	str	r0, [r6]
   130e8:	bl	10d6c <memcpy@plt>
   130ec:	mov	r3, #0
   130f0:	str	r3, [r6, #4]
   130f4:	str	r3, [r6, #8]
   130f8:	b	13034 <bst_insere_impl@@Base+0xac>
   130fc:	mov	r1, r5
   13100:	ldr	r0, [r8, #4]
   13104:	bl	12f88 <bst_insere_impl@@Base>
   13108:	str	r0, [r8, #4]
   1310c:	b	1302c <bst_insere_impl@@Base+0xa4>
   13110:	mov	r0, #12
   13114:	bl	10da8 <malloc@plt>
   13118:	mov	r7, r0
   1311c:	mov	r0, r5
   13120:	bl	10dcc <strlen@plt>
   13124:	add	r8, r0, #1
   13128:	mov	r0, r8
   1312c:	bl	10da8 <malloc@plt>
   13130:	mov	r2, r8
   13134:	mov	r1, r5
   13138:	str	r0, [r7]
   1313c:	bl	10d6c <memcpy@plt>
   13140:	mov	r3, #0
   13144:	str	r3, [r7, #4]
   13148:	str	r3, [r7, #8]
   1314c:	b	13030 <bst_insere_impl@@Base+0xa8>
   13150:	mov	r0, #12
   13154:	bl	10da8 <malloc@plt>
   13158:	mov	r8, r0
   1315c:	mov	r0, r5
   13160:	bl	10dcc <strlen@plt>
   13164:	add	r9, r0, #1
   13168:	mov	r0, r9
   1316c:	bl	10da8 <malloc@plt>
   13170:	mov	r2, r9
   13174:	mov	r1, r5
   13178:	str	r0, [r8]
   1317c:	bl	10d6c <memcpy@plt>
   13180:	mov	r3, #0
   13184:	str	r3, [r8, #4]
   13188:	str	r3, [r8, #8]
   1318c:	b	1302c <bst_insere_impl@@Base+0xa4>

00013190 <bst_insere@@Base>:
   13190:	cmp	r1, #0
   13194:	cmpne	r0, #0
   13198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1319c:	moveq	r9, #1
   131a0:	sub	sp, sp, #12
   131a4:	movne	r9, #0
   131a8:	beq	132c0 <bst_insere@@Base+0x130>
   131ac:	ldr	r5, [r0]
   131b0:	mov	r4, r1
   131b4:	cmp	r5, #0
   131b8:	mov	r6, r0
   131bc:	beq	133a4 <bst_insere@@Base+0x214>
   131c0:	ldr	r1, [r5]
   131c4:	mov	r0, r4
   131c8:	bl	10d30 <strcmp@plt>
   131cc:	cmp	r0, #0
   131d0:	blt	132c8 <bst_insere@@Base+0x138>
   131d4:	beq	132b0 <bst_insere@@Base+0x120>
   131d8:	ldr	r7, [r5, #8]
   131dc:	cmp	r7, #0
   131e0:	beq	1332c <bst_insere@@Base+0x19c>
   131e4:	ldr	r1, [r7]
   131e8:	mov	r0, r4
   131ec:	bl	10d30 <strcmp@plt>
   131f0:	cmp	r0, #0
   131f4:	blt	13368 <bst_insere@@Base+0x1d8>
   131f8:	beq	132ac <bst_insere@@Base+0x11c>
   131fc:	ldr	r8, [r7, #8]
   13200:	cmp	r8, #0
   13204:	beq	13408 <bst_insere@@Base+0x278>
   13208:	ldr	r1, [r8]
   1320c:	mov	r0, r4
   13210:	bl	10d30 <strcmp@plt>
   13214:	cmp	r0, #0
   13218:	blt	133e0 <bst_insere@@Base+0x250>
   1321c:	beq	132a8 <bst_insere@@Base+0x118>
   13220:	ldr	r9, [r8, #8]
   13224:	cmp	r9, #0
   13228:	beq	13458 <bst_insere@@Base+0x2c8>
   1322c:	ldr	r1, [r9]
   13230:	mov	r0, r4
   13234:	bl	10d30 <strcmp@plt>
   13238:	cmp	r0, #0
   1323c:	blt	133f4 <bst_insere@@Base+0x264>
   13240:	beq	132a4 <bst_insere@@Base+0x114>
   13244:	ldr	sl, [r9, #8]
   13248:	cmp	sl, #0
   1324c:	beq	134c0 <bst_insere@@Base+0x330>
   13250:	ldr	r1, [sl]
   13254:	mov	r0, r4
   13258:	bl	10d30 <strcmp@plt>
   1325c:	cmp	r0, #0
   13260:	blt	13444 <bst_insere@@Base+0x2b4>
   13264:	beq	132a0 <bst_insere@@Base+0x110>
   13268:	ldr	fp, [sl, #8]
   1326c:	cmp	fp, #0
   13270:	beq	13564 <bst_insere@@Base+0x3d4>
   13274:	ldr	r1, [fp]
   13278:	mov	r0, r4
   1327c:	bl	10d30 <strcmp@plt>
   13280:	cmp	r0, #0
   13284:	blt	134ac <bst_insere@@Base+0x31c>
   13288:	beq	1329c <bst_insere@@Base+0x10c>
   1328c:	mov	r1, r4
   13290:	ldr	r0, [fp, #8]
   13294:	bl	12f88 <bst_insere_impl@@Base>
   13298:	str	r0, [fp, #8]
   1329c:	str	fp, [sl, #8]
   132a0:	str	sl, [r9, #8]
   132a4:	str	r9, [r8, #8]
   132a8:	str	r8, [r7, #8]
   132ac:	str	r7, [r5, #8]
   132b0:	mov	r0, #0
   132b4:	str	r5, [r6]
   132b8:	add	sp, sp, #12
   132bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132c0:	mvn	r0, #0
   132c4:	b	132b8 <bst_insere@@Base+0x128>
   132c8:	ldr	r7, [r5, #4]
   132cc:	cmp	r7, #0
   132d0:	beq	13528 <bst_insere@@Base+0x398>
   132d4:	ldr	r1, [r7]
   132d8:	mov	r0, r4
   132dc:	bl	10d30 <strcmp@plt>
   132e0:	cmp	r0, #0
   132e4:	blt	13498 <bst_insere@@Base+0x308>
   132e8:	beq	13324 <bst_insere@@Base+0x194>
   132ec:	ldr	r8, [r7, #8]
   132f0:	cmp	r8, #0
   132f4:	beq	135e4 <bst_insere@@Base+0x454>
   132f8:	ldr	r1, [r8]
   132fc:	mov	r0, r4
   13300:	bl	10d30 <strcmp@plt>
   13304:	cmp	r0, #0
   13308:	blt	13500 <bst_insere@@Base+0x370>
   1330c:	beq	13320 <bst_insere@@Base+0x190>
   13310:	mov	r1, r4
   13314:	ldr	r0, [r8, #8]
   13318:	bl	12f88 <bst_insere_impl@@Base>
   1331c:	str	r0, [r8, #8]
   13320:	str	r8, [r7, #8]
   13324:	str	r7, [r5, #4]
   13328:	b	132b0 <bst_insere@@Base+0x120>
   1332c:	mov	r0, #12
   13330:	bl	10da8 <malloc@plt>
   13334:	mov	r7, r0
   13338:	mov	r0, r4
   1333c:	bl	10dcc <strlen@plt>
   13340:	add	r8, r0, #1
   13344:	mov	r0, r8
   13348:	bl	10da8 <malloc@plt>
   1334c:	mov	r2, r8
   13350:	mov	r1, r4
   13354:	str	r0, [r7]
   13358:	bl	10d6c <memcpy@plt>
   1335c:	str	r9, [r7, #4]
   13360:	str	r9, [r7, #8]
   13364:	b	132ac <bst_insere@@Base+0x11c>
   13368:	ldr	r8, [r7, #4]
   1336c:	cmp	r8, #0
   13370:	beq	135a8 <bst_insere@@Base+0x418>
   13374:	ldr	r1, [r8]
   13378:	mov	r0, r4
   1337c:	bl	10d30 <strcmp@plt>
   13380:	cmp	r0, #0
   13384:	blt	13514 <bst_insere@@Base+0x384>
   13388:	beq	1339c <bst_insere@@Base+0x20c>
   1338c:	mov	r1, r4
   13390:	ldr	r0, [r8, #8]
   13394:	bl	12f88 <bst_insere_impl@@Base>
   13398:	str	r0, [r8, #8]
   1339c:	str	r8, [r7, #4]
   133a0:	b	132ac <bst_insere@@Base+0x11c>
   133a4:	mov	r0, #12
   133a8:	bl	10da8 <malloc@plt>
   133ac:	mov	r5, r0
   133b0:	mov	r0, r4
   133b4:	bl	10dcc <strlen@plt>
   133b8:	add	r7, r0, #1
   133bc:	mov	r0, r7
   133c0:	bl	10da8 <malloc@plt>
   133c4:	mov	r2, r7
   133c8:	mov	r1, r4
   133cc:	str	r0, [r5]
   133d0:	bl	10d6c <memcpy@plt>
   133d4:	str	r9, [r5, #4]
   133d8:	str	r9, [r5, #8]
   133dc:	b	132b0 <bst_insere@@Base+0x120>
   133e0:	mov	r1, r4
   133e4:	ldr	r0, [r8, #4]
   133e8:	bl	12f88 <bst_insere_impl@@Base>
   133ec:	str	r0, [r8, #4]
   133f0:	b	132a8 <bst_insere@@Base+0x118>
   133f4:	mov	r1, r4
   133f8:	ldr	r0, [r9, #4]
   133fc:	bl	12f88 <bst_insere_impl@@Base>
   13400:	str	r0, [r9, #4]
   13404:	b	132a4 <bst_insere@@Base+0x114>
   13408:	mov	r0, #12
   1340c:	bl	10da8 <malloc@plt>
   13410:	mov	r8, r0
   13414:	mov	r0, r4
   13418:	bl	10dcc <strlen@plt>
   1341c:	add	sl, r0, #1
   13420:	mov	r0, sl
   13424:	bl	10da8 <malloc@plt>
   13428:	mov	r2, sl
   1342c:	mov	r1, r4
   13430:	str	r0, [r8]
   13434:	bl	10d6c <memcpy@plt>
   13438:	str	r9, [r8, #4]
   1343c:	str	r9, [r8, #8]
   13440:	b	132a8 <bst_insere@@Base+0x118>
   13444:	mov	r1, r4
   13448:	ldr	r0, [sl, #4]
   1344c:	bl	12f88 <bst_insere_impl@@Base>
   13450:	str	r0, [sl, #4]
   13454:	b	132a0 <bst_insere@@Base+0x110>
   13458:	mov	r0, #12
   1345c:	bl	10da8 <malloc@plt>
   13460:	mov	r9, r0
   13464:	mov	r0, r4
   13468:	bl	10dcc <strlen@plt>
   1346c:	add	sl, r0, #1
   13470:	mov	r0, sl
   13474:	bl	10da8 <malloc@plt>
   13478:	mov	r2, sl
   1347c:	mov	r1, r4
   13480:	str	r0, [r9]
   13484:	bl	10d6c <memcpy@plt>
   13488:	mov	r3, #0
   1348c:	str	r3, [r9, #4]
   13490:	str	r3, [r9, #8]
   13494:	b	132a4 <bst_insere@@Base+0x114>
   13498:	mov	r1, r4
   1349c:	ldr	r0, [r7, #4]
   134a0:	bl	12f88 <bst_insere_impl@@Base>
   134a4:	str	r0, [r7, #4]
   134a8:	b	13324 <bst_insere@@Base+0x194>
   134ac:	mov	r1, r4
   134b0:	ldr	r0, [fp, #4]
   134b4:	bl	12f88 <bst_insere_impl@@Base>
   134b8:	str	r0, [fp, #4]
   134bc:	b	1329c <bst_insere@@Base+0x10c>
   134c0:	mov	r0, #12
   134c4:	bl	10da8 <malloc@plt>
   134c8:	mov	sl, r0
   134cc:	mov	r0, r4
   134d0:	bl	10dcc <strlen@plt>
   134d4:	add	fp, r0, #1
   134d8:	mov	r0, fp
   134dc:	bl	10da8 <malloc@plt>
   134e0:	mov	r2, fp
   134e4:	mov	r1, r4
   134e8:	str	r0, [sl]
   134ec:	bl	10d6c <memcpy@plt>
   134f0:	mov	r3, #0
   134f4:	str	r3, [sl, #4]
   134f8:	str	r3, [sl, #8]
   134fc:	b	132a0 <bst_insere@@Base+0x110>
   13500:	mov	r1, r4
   13504:	ldr	r0, [r8, #4]
   13508:	bl	12f88 <bst_insere_impl@@Base>
   1350c:	str	r0, [r8, #4]
   13510:	b	13320 <bst_insere@@Base+0x190>
   13514:	mov	r1, r4
   13518:	ldr	r0, [r8, #4]
   1351c:	bl	12f88 <bst_insere_impl@@Base>
   13520:	str	r0, [r8, #4]
   13524:	b	1339c <bst_insere@@Base+0x20c>
   13528:	mov	r0, #12
   1352c:	bl	10da8 <malloc@plt>
   13530:	mov	r7, r0
   13534:	mov	r0, r4
   13538:	bl	10dcc <strlen@plt>
   1353c:	add	r8, r0, #1
   13540:	mov	r0, r8
   13544:	bl	10da8 <malloc@plt>
   13548:	mov	r2, r8
   1354c:	mov	r1, r4
   13550:	str	r0, [r7]
   13554:	bl	10d6c <memcpy@plt>
   13558:	str	r9, [r7, #4]
   1355c:	str	r9, [r7, #8]
   13560:	b	13324 <bst_insere@@Base+0x194>
   13564:	mov	r0, #12
   13568:	bl	10da8 <malloc@plt>
   1356c:	mov	fp, r0
   13570:	mov	r0, r4
   13574:	bl	10dcc <strlen@plt>
   13578:	add	r2, r0, #1
   1357c:	mov	r0, r2
   13580:	str	r2, [sp, #4]
   13584:	bl	10da8 <malloc@plt>
   13588:	ldr	r2, [sp, #4]
   1358c:	mov	r1, r4
   13590:	str	r0, [fp]
   13594:	bl	10d6c <memcpy@plt>
   13598:	mov	r3, #0
   1359c:	str	r3, [fp, #4]
   135a0:	str	r3, [fp, #8]
   135a4:	b	1329c <bst_insere@@Base+0x10c>
   135a8:	mov	r0, #12
   135ac:	bl	10da8 <malloc@plt>
   135b0:	mov	r8, r0
   135b4:	mov	r0, r4
   135b8:	bl	10dcc <strlen@plt>
   135bc:	add	sl, r0, #1
   135c0:	mov	r0, sl
   135c4:	bl	10da8 <malloc@plt>
   135c8:	mov	r2, sl
   135cc:	mov	r1, r4
   135d0:	str	r0, [r8]
   135d4:	bl	10d6c <memcpy@plt>
   135d8:	str	r9, [r8, #4]
   135dc:	str	r9, [r8, #8]
   135e0:	b	1339c <bst_insere@@Base+0x20c>
   135e4:	mov	r0, #12
   135e8:	bl	10da8 <malloc@plt>
   135ec:	mov	r8, r0
   135f0:	mov	r0, r4
   135f4:	bl	10dcc <strlen@plt>
   135f8:	add	sl, r0, #1
   135fc:	mov	r0, sl
   13600:	bl	10da8 <malloc@plt>
   13604:	mov	r2, sl
   13608:	mov	r1, r4
   1360c:	str	r0, [r8]
   13610:	bl	10d6c <memcpy@plt>
   13614:	str	r9, [r8, #4]
   13618:	str	r9, [r8, #8]
   1361c:	b	13320 <bst_insere@@Base+0x190>

00013620 <bst_remove_impl@@Base>:
   13620:	push	{r4, r5, r6, r7, r8, lr}
   13624:	subs	r5, r0, #0
   13628:	beq	1372c <bst_remove_impl@@Base+0x10c>
   1362c:	ldr	r6, [r5]
   13630:	mov	r0, r1
   13634:	mov	r4, r1
   13638:	mov	r1, r6
   1363c:	bl	10d30 <strcmp@plt>
   13640:	cmp	r0, #0
   13644:	blt	13738 <bst_remove_impl@@Base+0x118>
   13648:	bne	136b4 <bst_remove_impl@@Base+0x94>
   1364c:	ldr	r8, [r5, #4]
   13650:	cmp	r8, #0
   13654:	beq	136d0 <bst_remove_impl@@Base+0xb0>
   13658:	ldr	r4, [r5, #8]
   1365c:	cmp	r4, #0
   13660:	bne	1366c <bst_remove_impl@@Base+0x4c>
   13664:	b	136e4 <bst_remove_impl@@Base+0xc4>
   13668:	mov	r4, r3
   1366c:	ldr	r3, [r4, #4]
   13670:	cmp	r3, #0
   13674:	bne	13668 <bst_remove_impl@@Base+0x48>
   13678:	ldr	r0, [r4]
   1367c:	bl	10dcc <strlen@plt>
   13680:	mov	r7, r5
   13684:	add	r1, r0, #1
   13688:	mov	r0, r6
   1368c:	bl	10d84 <realloc@plt>
   13690:	str	r0, [r5]
   13694:	ldr	r1, [r4]
   13698:	bl	10d90 <strcpy@plt>
   1369c:	ldr	r1, [r4]
   136a0:	ldr	r0, [r5, #8]
   136a4:	bl	13620 <bst_remove_impl@@Base>
   136a8:	str	r0, [r5, #8]
   136ac:	mov	r0, r7
   136b0:	pop	{r4, r5, r6, r7, r8, pc}
   136b4:	mov	r1, r4
   136b8:	ldr	r0, [r5, #8]
   136bc:	bl	13620 <bst_remove_impl@@Base>
   136c0:	mov	r7, r5
   136c4:	str	r0, [r5, #8]
   136c8:	mov	r0, r7
   136cc:	pop	{r4, r5, r6, r7, r8, pc}
   136d0:	ldr	r7, [r5, #8]
   136d4:	cmp	r7, #0
   136d8:	moveq	r8, r5
   136dc:	beq	13714 <bst_remove_impl@@Base+0xf4>
   136e0:	mov	r8, r7
   136e4:	ldr	r0, [r8]
   136e8:	bl	10dcc <strlen@plt>
   136ec:	mov	r7, r5
   136f0:	add	r1, r0, #1
   136f4:	mov	r0, r6
   136f8:	bl	10d84 <realloc@plt>
   136fc:	str	r0, [r5]
   13700:	ldr	r1, [r8]
   13704:	bl	10d90 <strcpy@plt>
   13708:	ldmib	r8, {r2, r3}
   1370c:	ldr	r6, [r8]
   13710:	stmib	r5, {r2, r3}
   13714:	mov	r0, r6
   13718:	bl	10d54 <free@plt>
   1371c:	mov	r0, r8
   13720:	bl	10d54 <free@plt>
   13724:	mov	r0, r7
   13728:	pop	{r4, r5, r6, r7, r8, pc}
   1372c:	mov	r7, r5
   13730:	mov	r0, r7
   13734:	pop	{r4, r5, r6, r7, r8, pc}
   13738:	mov	r1, r4
   1373c:	ldr	r0, [r5, #4]
   13740:	bl	13620 <bst_remove_impl@@Base>
   13744:	mov	r7, r5
   13748:	str	r0, [r5, #4]
   1374c:	b	136ac <bst_remove_impl@@Base+0x8c>

00013750 <bst_apaga@@Base>:
   13750:	push	{r4, r5, r6, r7, r8, lr}
   13754:	mov	r8, r0
   13758:	ldr	r5, [r0]
   1375c:	cmp	r5, #0
   13760:	beq	137f4 <bst_apaga@@Base+0xa4>
   13764:	ldr	r6, [r5, #4]
   13768:	ldr	r7, [r5]
   1376c:	cmp	r6, #0
   13770:	beq	137d8 <bst_apaga@@Base+0x88>
   13774:	ldr	r4, [r5, #8]
   13778:	cmp	r4, #0
   1377c:	bne	13788 <bst_apaga@@Base+0x38>
   13780:	b	13800 <bst_apaga@@Base+0xb0>
   13784:	mov	r4, r3
   13788:	ldr	r3, [r4, #4]
   1378c:	cmp	r3, #0
   13790:	bne	13784 <bst_apaga@@Base+0x34>
   13794:	ldr	r0, [r4]
   13798:	bl	10dcc <strlen@plt>
   1379c:	add	r1, r0, #1
   137a0:	mov	r0, r7
   137a4:	bl	10d84 <realloc@plt>
   137a8:	str	r0, [r5]
   137ac:	ldr	r1, [r4]
   137b0:	bl	10d90 <strcpy@plt>
   137b4:	ldr	r1, [r4]
   137b8:	ldr	r0, [r5, #8]
   137bc:	bl	13620 <bst_remove_impl@@Base>
   137c0:	str	r0, [r5, #8]
   137c4:	ldr	r6, [r5, #4]
   137c8:	str	r5, [r8]
   137cc:	cmp	r6, #0
   137d0:	ldr	r7, [r5]
   137d4:	bne	13774 <bst_apaga@@Base+0x24>
   137d8:	ldr	r6, [r5, #8]
   137dc:	cmp	r6, #0
   137e0:	bne	13800 <bst_apaga@@Base+0xb0>
   137e4:	mov	r0, r7
   137e8:	bl	10d54 <free@plt>
   137ec:	mov	r0, r5
   137f0:	bl	10d54 <free@plt>
   137f4:	mov	r0, r8
   137f8:	pop	{r4, r5, r6, r7, r8, lr}
   137fc:	b	10d54 <free@plt>
   13800:	ldr	r0, [r6]
   13804:	bl	10dcc <strlen@plt>
   13808:	add	r1, r0, #1
   1380c:	mov	r0, r7
   13810:	bl	10d84 <realloc@plt>
   13814:	str	r0, [r5]
   13818:	ldr	r1, [r6]
   1381c:	bl	10d90 <strcpy@plt>
   13820:	ldmib	r6, {r2, r3}
   13824:	ldr	r0, [r6]
   13828:	stmib	r5, {r2, r3}
   1382c:	bl	10d54 <free@plt>
   13830:	mov	r0, r6
   13834:	bl	10d54 <free@plt>
   13838:	b	137c4 <bst_apaga@@Base+0x74>

0001383c <bst_remove@@Base>:
   1383c:	cmp	r1, #0
   13840:	cmpne	r0, #0
   13844:	beq	13950 <bst_remove@@Base+0x114>
   13848:	push	{r4, r5, r6, r7, r8, lr}
   1384c:	mov	r4, r1
   13850:	ldr	r5, [r0]
   13854:	mov	r6, r0
   13858:	cmp	r5, #0
   1385c:	beq	138d8 <bst_remove@@Base+0x9c>
   13860:	ldr	r7, [r5]
   13864:	mov	r0, r1
   13868:	mov	r1, r7
   1386c:	bl	10d30 <strcmp@plt>
   13870:	cmp	r0, #0
   13874:	blt	13958 <bst_remove@@Base+0x11c>
   13878:	bne	138e4 <bst_remove@@Base+0xa8>
   1387c:	ldr	r8, [r5, #4]
   13880:	cmp	r8, #0
   13884:	beq	138f8 <bst_remove@@Base+0xbc>
   13888:	ldr	r4, [r5, #8]
   1388c:	cmp	r4, #0
   13890:	bne	1389c <bst_remove@@Base+0x60>
   13894:	b	13910 <bst_remove@@Base+0xd4>
   13898:	mov	r4, r3
   1389c:	ldr	r3, [r4, #4]
   138a0:	cmp	r3, #0
   138a4:	bne	13898 <bst_remove@@Base+0x5c>
   138a8:	ldr	r0, [r4]
   138ac:	bl	10dcc <strlen@plt>
   138b0:	add	r1, r0, #1
   138b4:	mov	r0, r7
   138b8:	bl	10d84 <realloc@plt>
   138bc:	str	r0, [r5]
   138c0:	ldr	r1, [r4]
   138c4:	bl	10d90 <strcpy@plt>
   138c8:	ldr	r1, [r4]
   138cc:	ldr	r0, [r5, #8]
   138d0:	bl	13620 <bst_remove_impl@@Base>
   138d4:	str	r0, [r5, #8]
   138d8:	str	r5, [r6]
   138dc:	mov	r0, #0
   138e0:	pop	{r4, r5, r6, r7, r8, pc}
   138e4:	mov	r1, r4
   138e8:	ldr	r0, [r5, #8]
   138ec:	bl	13620 <bst_remove_impl@@Base>
   138f0:	str	r0, [r5, #8]
   138f4:	b	138d8 <bst_remove@@Base+0x9c>
   138f8:	ldr	r8, [r5, #8]
   138fc:	cmp	r8, #0
   13900:	moveq	r3, r5
   13904:	moveq	r5, r8
   13908:	moveq	r8, r3
   1390c:	beq	1393c <bst_remove@@Base+0x100>
   13910:	ldr	r0, [r8]
   13914:	bl	10dcc <strlen@plt>
   13918:	add	r1, r0, #1
   1391c:	mov	r0, r7
   13920:	bl	10d84 <realloc@plt>
   13924:	str	r0, [r5]
   13928:	ldr	r1, [r8]
   1392c:	bl	10d90 <strcpy@plt>
   13930:	ldmib	r8, {r2, r3}
   13934:	ldr	r7, [r8]
   13938:	stmib	r5, {r2, r3}
   1393c:	mov	r0, r7
   13940:	bl	10d54 <free@plt>
   13944:	mov	r0, r8
   13948:	bl	10d54 <free@plt>
   1394c:	b	138d8 <bst_remove@@Base+0x9c>
   13950:	mvn	r0, #0
   13954:	bx	lr
   13958:	mov	r1, r4
   1395c:	ldr	r0, [r5, #4]
   13960:	bl	13620 <bst_remove_impl@@Base>
   13964:	str	r0, [r5, #4]
   13968:	b	138d8 <bst_remove@@Base+0x9c>

0001396c <bst_altura@@Base>:
   1396c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13970:	sub	sp, sp, #76	; 0x4c
   13974:	subs	r3, r0, #0
   13978:	str	r3, [sp, #24]
   1397c:	beq	142f8 <bst_altura@@Base+0x98c>
   13980:	mov	r3, #1
   13984:	str	r3, [sp, #52]	; 0x34
   13988:	ldr	r3, [sp, #24]
   1398c:	ldr	r2, [sp, #52]	; 0x34
   13990:	ldr	r3, [r3, #8]
   13994:	sub	r0, r2, #1
   13998:	cmp	r3, #0
   1399c:	str	r3, [sp, #56]	; 0x38
   139a0:	beq	1429c <bst_altura@@Base+0x930>
   139a4:	mov	r2, r3
   139a8:	ldr	r3, [sp, #24]
   139ac:	str	r2, [sp, #12]
   139b0:	ldr	r3, [r3, #4]
   139b4:	mov	r0, r3
   139b8:	str	r3, [sp, #24]
   139bc:	bl	1396c <bst_altura@@Base>
   139c0:	mov	r3, #1
   139c4:	str	r3, [sp, #48]	; 0x30
   139c8:	str	r0, [sp, #64]	; 0x40
   139cc:	ldr	r3, [sp, #12]
   139d0:	ldr	r3, [r3, #8]
   139d4:	mov	r2, r3
   139d8:	str	r3, [sp, #32]
   139dc:	ldr	r3, [sp, #48]	; 0x30
   139e0:	cmp	r2, #0
   139e4:	sub	r3, r3, #1
   139e8:	beq	14280 <bst_altura@@Base+0x914>
   139ec:	ldr	r3, [sp, #12]
   139f0:	ldr	r3, [r3, #4]
   139f4:	cmp	r3, #0
   139f8:	str	r3, [sp, #12]
   139fc:	beq	1431c <bst_altura@@Base+0x9b0>
   13a00:	ldr	r3, [sp, #12]
   13a04:	str	r3, [sp]
   13a08:	mov	r3, #1
   13a0c:	str	r3, [sp, #20]
   13a10:	ldr	r3, [sp]
   13a14:	ldr	r3, [r3, #8]
   13a18:	mov	r2, r3
   13a1c:	str	r3, [sp, #4]
   13a20:	ldr	r3, [sp, #20]
   13a24:	cmp	r2, #0
   13a28:	sub	r3, r3, #1
   13a2c:	beq	14300 <bst_altura@@Base+0x994>
   13a30:	ldr	r3, [sp]
   13a34:	ldr	r3, [r3, #4]
   13a38:	cmp	r3, #0
   13a3c:	str	r3, [sp]
   13a40:	beq	14328 <bst_altura@@Base+0x9bc>
   13a44:	ldr	sl, [sp]
   13a48:	mov	r7, #1
   13a4c:	ldr	r8, [sl, #8]
   13a50:	sub	r3, r7, #1
   13a54:	cmp	r8, #0
   13a58:	ldr	sl, [sl, #4]
   13a5c:	beq	13b60 <bst_altura@@Base+0x1f4>
   13a60:	cmp	sl, #0
   13a64:	beq	13d1c <bst_altura@@Base+0x3b0>
   13a68:	mov	r4, sl
   13a6c:	mov	r6, #1
   13a70:	b	13aa0 <bst_altura@@Base+0x134>
   13a74:	mov	r0, r4
   13a78:	bl	1396c <bst_altura@@Base>
   13a7c:	mov	r9, r0
   13a80:	mov	r0, r5
   13a84:	bl	1396c <bst_altura@@Base>
   13a88:	mov	r3, r6
   13a8c:	add	r6, r6, #1
   13a90:	cmp	r9, r0
   13a94:	movle	r4, r5
   13a98:	cmp	r4, #0
   13a9c:	beq	13ad4 <bst_altura@@Base+0x168>
   13aa0:	ldr	r5, [r4, #8]
   13aa4:	sub	r3, r6, #1
   13aa8:	cmp	r5, #0
   13aac:	ldr	r4, [r4, #4]
   13ab0:	bne	13a74 <bst_altura@@Base+0x108>
   13ab4:	cmp	r4, #0
   13ab8:	bne	13a74 <bst_altura@@Base+0x108>
   13abc:	mov	r9, #0
   13ac0:	cmp	r8, #0
   13ac4:	add	r9, r9, r3
   13ac8:	bne	13ae4 <bst_altura@@Base+0x178>
   13acc:	mvn	r3, #0
   13ad0:	b	13b40 <bst_altura@@Base+0x1d4>
   13ad4:	mvn	r9, #0
   13ad8:	cmp	r8, #0
   13adc:	add	r9, r9, r3
   13ae0:	beq	13acc <bst_altura@@Base+0x160>
   13ae4:	mov	r4, r8
   13ae8:	mov	r5, #1
   13aec:	b	13b1c <bst_altura@@Base+0x1b0>
   13af0:	mov	r0, r4
   13af4:	bl	1396c <bst_altura@@Base>
   13af8:	mov	fp, r0
   13afc:	mov	r0, r6
   13b00:	bl	1396c <bst_altura@@Base>
   13b04:	mov	r3, r5
   13b08:	add	r5, r5, #1
   13b0c:	cmp	fp, r0
   13b10:	movle	r4, r6
   13b14:	cmp	r4, #0
   13b18:	beq	13b3c <bst_altura@@Base+0x1d0>
   13b1c:	ldr	r6, [r4, #8]
   13b20:	sub	r3, r5, #1
   13b24:	cmp	r6, #0
   13b28:	ldr	r4, [r4, #4]
   13b2c:	bne	13af0 <bst_altura@@Base+0x184>
   13b30:	cmp	r4, #0
   13b34:	bne	13af0 <bst_altura@@Base+0x184>
   13b38:	b	13b40 <bst_altura@@Base+0x1d4>
   13b3c:	sub	r3, r3, #1
   13b40:	cmp	r3, r9
   13b44:	movge	sl, r8
   13b48:	cmp	sl, #0
   13b4c:	mov	r3, r7
   13b50:	add	r7, r7, #1
   13b54:	bne	13a4c <bst_altura@@Base+0xe0>
   13b58:	mvn	r2, #0
   13b5c:	b	13b6c <bst_altura@@Base+0x200>
   13b60:	cmp	sl, #0
   13b64:	bne	13a68 <bst_altura@@Base+0xfc>
   13b68:	mov	r2, #0
   13b6c:	ldr	r1, [sp, #4]
   13b70:	add	r3, r2, r3
   13b74:	cmp	r1, #0
   13b78:	str	r3, [sp, #28]
   13b7c:	beq	141a8 <bst_altura@@Base+0x83c>
   13b80:	ldr	r8, [sp, #4]
   13b84:	mov	r3, #1
   13b88:	str	r3, [sp, #16]
   13b8c:	ldr	r3, [r8, #8]
   13b90:	ldr	r8, [r8, #4]
   13b94:	mov	r2, r3
   13b98:	str	r3, [sp, #8]
   13b9c:	ldr	r3, [sp, #16]
   13ba0:	cmp	r2, #0
   13ba4:	sub	r3, r3, #1
   13ba8:	beq	13dac <bst_altura@@Base+0x440>
   13bac:	cmp	r8, #0
   13bb0:	beq	141a0 <bst_altura@@Base+0x834>
   13bb4:	mov	r5, r8
   13bb8:	mov	r7, #1
   13bbc:	str	r8, [sp, #36]	; 0x24
   13bc0:	ldr	sl, [r5, #8]
   13bc4:	sub	r3, r7, #1
   13bc8:	cmp	sl, #0
   13bcc:	ldr	r5, [r5, #4]
   13bd0:	beq	13d44 <bst_altura@@Base+0x3d8>
   13bd4:	cmp	r5, #0
   13bd8:	beq	13d6c <bst_altura@@Base+0x400>
   13bdc:	mov	r4, r5
   13be0:	mov	r9, #1
   13be4:	b	13c14 <bst_altura@@Base+0x2a8>
   13be8:	mov	r0, r4
   13bec:	bl	1396c <bst_altura@@Base>
   13bf0:	mov	r8, r0
   13bf4:	mov	r0, r6
   13bf8:	bl	1396c <bst_altura@@Base>
   13bfc:	mov	r3, r9
   13c00:	add	r9, r9, #1
   13c04:	cmp	r8, r0
   13c08:	movle	r4, r6
   13c0c:	cmp	r4, #0
   13c10:	beq	13d2c <bst_altura@@Base+0x3c0>
   13c14:	ldr	r6, [r4, #8]
   13c18:	sub	r3, r9, #1
   13c1c:	cmp	r6, #0
   13c20:	ldr	r4, [r4, #4]
   13c24:	bne	13be8 <bst_altura@@Base+0x27c>
   13c28:	cmp	r4, #0
   13c2c:	bne	13be8 <bst_altura@@Base+0x27c>
   13c30:	mov	fp, #0
   13c34:	cmp	sl, #0
   13c38:	add	fp, fp, r3
   13c3c:	beq	13d3c <bst_altura@@Base+0x3d0>
   13c40:	mov	r4, sl
   13c44:	mov	r6, #1
   13c48:	b	13c78 <bst_altura@@Base+0x30c>
   13c4c:	mov	r0, r4
   13c50:	bl	1396c <bst_altura@@Base>
   13c54:	mov	r9, r0
   13c58:	mov	r0, r8
   13c5c:	bl	1396c <bst_altura@@Base>
   13c60:	mov	r3, r6
   13c64:	add	r6, r6, #1
   13c68:	cmp	r9, r0
   13c6c:	movle	r4, r8
   13c70:	cmp	r4, #0
   13c74:	beq	13d24 <bst_altura@@Base+0x3b8>
   13c78:	ldr	r8, [r4, #8]
   13c7c:	sub	r3, r6, #1
   13c80:	cmp	r8, #0
   13c84:	ldr	r4, [r4, #4]
   13c88:	bne	13c4c <bst_altura@@Base+0x2e0>
   13c8c:	cmp	r4, #0
   13c90:	bne	13c4c <bst_altura@@Base+0x2e0>
   13c94:	cmp	r3, fp
   13c98:	movge	r5, sl
   13c9c:	cmp	r5, #0
   13ca0:	mov	r3, r7
   13ca4:	add	r7, r7, #1
   13ca8:	bne	13bc0 <bst_altura@@Base+0x254>
   13cac:	ldr	r2, [sp, #8]
   13cb0:	mvn	r7, #0
   13cb4:	cmp	r2, #0
   13cb8:	ldr	r8, [sp, #36]	; 0x24
   13cbc:	add	r7, r7, r3
   13cc0:	beq	13d64 <bst_altura@@Base+0x3f8>
   13cc4:	ldr	r4, [sp, #8]
   13cc8:	mov	r5, #1
   13ccc:	b	13cfc <bst_altura@@Base+0x390>
   13cd0:	mov	r0, r4
   13cd4:	bl	1396c <bst_altura@@Base>
   13cd8:	mov	r9, r0
   13cdc:	mov	r0, r6
   13ce0:	bl	1396c <bst_altura@@Base>
   13ce4:	mov	r3, r5
   13ce8:	add	r5, r5, #1
   13cec:	cmp	r9, r0
   13cf0:	movle	r4, r6
   13cf4:	cmp	r4, #0
   13cf8:	beq	13d74 <bst_altura@@Base+0x408>
   13cfc:	ldr	r6, [r4, #8]
   13d00:	sub	r3, r5, #1
   13d04:	cmp	r6, #0
   13d08:	ldr	r4, [r4, #4]
   13d0c:	bne	13cd0 <bst_altura@@Base+0x364>
   13d10:	cmp	r4, #0
   13d14:	bne	13cd0 <bst_altura@@Base+0x364>
   13d18:	b	13d78 <bst_altura@@Base+0x40c>
   13d1c:	mvn	r9, #0
   13d20:	b	13ae4 <bst_altura@@Base+0x178>
   13d24:	sub	r3, r3, #1
   13d28:	b	13c94 <bst_altura@@Base+0x328>
   13d2c:	mvn	fp, #0
   13d30:	cmp	sl, #0
   13d34:	add	fp, fp, r3
   13d38:	bne	13c40 <bst_altura@@Base+0x2d4>
   13d3c:	mvn	r3, #0
   13d40:	b	13c94 <bst_altura@@Base+0x328>
   13d44:	cmp	r5, #0
   13d48:	bne	13bdc <bst_altura@@Base+0x270>
   13d4c:	ldr	r2, [sp, #8]
   13d50:	mov	r7, #0
   13d54:	cmp	r2, #0
   13d58:	ldr	r8, [sp, #36]	; 0x24
   13d5c:	add	r7, r7, r3
   13d60:	bne	13cc4 <bst_altura@@Base+0x358>
   13d64:	mvn	r3, #0
   13d68:	b	13d78 <bst_altura@@Base+0x40c>
   13d6c:	mvn	fp, #0
   13d70:	b	13c40 <bst_altura@@Base+0x2d4>
   13d74:	sub	r3, r3, #1
   13d78:	ldr	r2, [sp, #8]
   13d7c:	cmp	r3, r7
   13d80:	movlt	r2, r8
   13d84:	mov	r8, r2
   13d88:	cmp	r2, #0
   13d8c:	ldr	r2, [sp, #16]
   13d90:	mov	r3, r2
   13d94:	add	r2, r2, #1
   13d98:	str	r2, [sp, #16]
   13d9c:	bne	13b8c <bst_altura@@Base+0x220>
   13da0:	sub	r3, r3, #1
   13da4:	ldr	r2, [sp, #4]
   13da8:	b	13db8 <bst_altura@@Base+0x44c>
   13dac:	cmp	r8, #0
   13db0:	bne	13bb4 <bst_altura@@Base+0x248>
   13db4:	ldr	r2, [sp, #4]
   13db8:	ldr	r0, [sp, #28]
   13dbc:	ldr	r1, [sp]
   13dc0:	cmp	r3, r0
   13dc4:	ldr	r3, [sp, #20]
   13dc8:	movlt	r2, r1
   13dcc:	str	r2, [sp]
   13dd0:	cmp	r2, #0
   13dd4:	add	r2, r3, #1
   13dd8:	str	r2, [sp, #20]
   13ddc:	bne	13a10 <bst_altura@@Base+0xa4>
   13de0:	mvn	r2, #0
   13de4:	ldr	r1, [sp, #32]
   13de8:	add	r3, r2, r3
   13dec:	cmp	r1, #0
   13df0:	str	r3, [sp, #68]	; 0x44
   13df4:	beq	14340 <bst_altura@@Base+0x9d4>
   13df8:	ldr	r3, [sp, #32]
   13dfc:	str	r3, [sp, #16]
   13e00:	mov	r3, #1
   13e04:	str	r3, [sp, #44]	; 0x2c
   13e08:	ldr	r3, [sp, #16]
   13e0c:	ldr	r3, [r3, #8]
   13e10:	mov	r2, r3
   13e14:	str	r3, [sp, #36]	; 0x24
   13e18:	ldr	r3, [sp, #44]	; 0x2c
   13e1c:	cmp	r2, #0
   13e20:	sub	r3, r3, #1
   13e24:	beq	14414 <bst_altura@@Base+0xaa8>
   13e28:	ldr	r3, [sp, #16]
   13e2c:	ldr	r3, [r3, #4]
   13e30:	cmp	r3, #0
   13e34:	str	r3, [sp, #16]
   13e38:	beq	1437c <bst_altura@@Base+0xa10>
   13e3c:	ldr	r3, [sp, #16]
   13e40:	str	r3, [sp, #20]
   13e44:	mov	r3, #1
   13e48:	str	r3, [sp, #28]
   13e4c:	ldr	r3, [sp, #20]
   13e50:	ldr	r3, [r3, #8]
   13e54:	mov	r2, r3
   13e58:	str	r3, [sp, #40]	; 0x28
   13e5c:	ldr	r3, [sp, #28]
   13e60:	cmp	r2, #0
   13e64:	sub	r3, r3, #1
   13e68:	beq	14264 <bst_altura@@Base+0x8f8>
   13e6c:	ldr	r3, [sp, #20]
   13e70:	ldr	r3, [r3, #4]
   13e74:	cmp	r3, #0
   13e78:	str	r3, [sp, #20]
   13e7c:	beq	14430 <bst_altura@@Base+0xac4>
   13e80:	ldr	r5, [sp, #20]
   13e84:	mov	r7, #1
   13e88:	ldr	r9, [r5, #8]
   13e8c:	sub	r3, r7, #1
   13e90:	cmp	r9, #0
   13e94:	ldr	r5, [r5, #4]
   13e98:	beq	14244 <bst_altura@@Base+0x8d8>
   13e9c:	cmp	r5, #0
   13ea0:	beq	1425c <bst_altura@@Base+0x8f0>
   13ea4:	mov	r4, r5
   13ea8:	mov	r8, #1
   13eac:	b	13edc <bst_altura@@Base+0x570>
   13eb0:	mov	r0, r4
   13eb4:	bl	1396c <bst_altura@@Base>
   13eb8:	mov	sl, r0
   13ebc:	mov	r0, r6
   13ec0:	bl	1396c <bst_altura@@Base>
   13ec4:	mov	r3, r8
   13ec8:	add	r8, r8, #1
   13ecc:	cmp	sl, r0
   13ed0:	movle	r4, r6
   13ed4:	cmp	r4, #0
   13ed8:	beq	14210 <bst_altura@@Base+0x8a4>
   13edc:	ldr	r6, [r4, #8]
   13ee0:	sub	r3, r8, #1
   13ee4:	cmp	r6, #0
   13ee8:	ldr	r4, [r4, #4]
   13eec:	bne	13eb0 <bst_altura@@Base+0x544>
   13ef0:	cmp	r4, #0
   13ef4:	bne	13eb0 <bst_altura@@Base+0x544>
   13ef8:	mov	sl, #0
   13efc:	cmp	r9, #0
   13f00:	add	sl, r3, sl
   13f04:	beq	14220 <bst_altura@@Base+0x8b4>
   13f08:	mov	r4, r9
   13f0c:	mov	r6, #1
   13f10:	b	13f40 <bst_altura@@Base+0x5d4>
   13f14:	mov	r0, r4
   13f18:	bl	1396c <bst_altura@@Base>
   13f1c:	mov	fp, r0
   13f20:	mov	r0, r8
   13f24:	bl	1396c <bst_altura@@Base>
   13f28:	mov	r3, r6
   13f2c:	add	r6, r6, #1
   13f30:	cmp	fp, r0
   13f34:	movle	r4, r8
   13f38:	cmp	r4, #0
   13f3c:	beq	141f8 <bst_altura@@Base+0x88c>
   13f40:	ldr	r8, [r4, #8]
   13f44:	sub	r3, r6, #1
   13f48:	cmp	r8, #0
   13f4c:	ldr	r4, [r4, #4]
   13f50:	bne	13f14 <bst_altura@@Base+0x5a8>
   13f54:	cmp	r4, #0
   13f58:	bne	13f14 <bst_altura@@Base+0x5a8>
   13f5c:	cmp	r3, sl
   13f60:	movge	r5, r9
   13f64:	cmp	r5, #0
   13f68:	mov	r3, r7
   13f6c:	add	r7, r7, #1
   13f70:	bne	13e88 <bst_altura@@Base+0x51c>
   13f74:	mvn	r2, #0
   13f78:	ldr	r1, [sp, #40]	; 0x28
   13f7c:	add	r3, r2, r3
   13f80:	cmp	r1, #0
   13f84:	str	r3, [sp, #60]	; 0x3c
   13f88:	beq	14334 <bst_altura@@Base+0x9c8>
   13f8c:	ldr	r3, [sp, #40]	; 0x28
   13f90:	str	r3, [sp]
   13f94:	mov	r3, #1
   13f98:	str	r3, [sp, #8]
   13f9c:	ldr	r3, [sp]
   13fa0:	ldr	r3, [r3, #8]
   13fa4:	mov	r2, r3
   13fa8:	str	r3, [sp, #4]
   13fac:	ldr	r3, [sp, #8]
   13fb0:	cmp	r2, #0
   13fb4:	sub	r3, r3, #1
   13fb8:	beq	14228 <bst_altura@@Base+0x8bc>
   13fbc:	ldr	r3, [sp]
   13fc0:	ldr	r3, [r3, #4]
   13fc4:	cmp	r3, #0
   13fc8:	str	r3, [sp]
   13fcc:	beq	14254 <bst_altura@@Base+0x8e8>
   13fd0:	ldr	r5, [sp]
   13fd4:	mov	r7, #1
   13fd8:	ldr	r9, [r5, #8]
   13fdc:	sub	r3, r7, #1
   13fe0:	cmp	r9, #0
   13fe4:	ldr	r5, [r5, #4]
   13fe8:	beq	141d4 <bst_altura@@Base+0x868>
   13fec:	cmp	r5, #0
   13ff0:	beq	14200 <bst_altura@@Base+0x894>
   13ff4:	mov	r4, r5
   13ff8:	mov	r8, #1
   13ffc:	b	1402c <bst_altura@@Base+0x6c0>
   14000:	mov	r0, r4
   14004:	bl	1396c <bst_altura@@Base>
   14008:	mov	sl, r0
   1400c:	mov	r0, r6
   14010:	bl	1396c <bst_altura@@Base>
   14014:	mov	r3, r8
   14018:	add	r8, r8, #1
   1401c:	cmp	sl, r0
   14020:	movle	r4, r6
   14024:	cmp	r4, #0
   14028:	beq	141bc <bst_altura@@Base+0x850>
   1402c:	ldr	r6, [r4, #8]
   14030:	sub	r3, r8, #1
   14034:	cmp	r6, #0
   14038:	ldr	r4, [r4, #4]
   1403c:	bne	14000 <bst_altura@@Base+0x694>
   14040:	cmp	r4, #0
   14044:	bne	14000 <bst_altura@@Base+0x694>
   14048:	mov	sl, #0
   1404c:	cmp	r9, #0
   14050:	add	sl, sl, r3
   14054:	beq	141cc <bst_altura@@Base+0x860>
   14058:	mov	r4, r9
   1405c:	mov	r6, #1
   14060:	b	14090 <bst_altura@@Base+0x724>
   14064:	mov	r0, r4
   14068:	bl	1396c <bst_altura@@Base>
   1406c:	mov	fp, r0
   14070:	mov	r0, r8
   14074:	bl	1396c <bst_altura@@Base>
   14078:	mov	r3, r6
   1407c:	add	r6, r6, #1
   14080:	cmp	fp, r0
   14084:	movle	r4, r8
   14088:	cmp	r4, #0
   1408c:	beq	141b4 <bst_altura@@Base+0x848>
   14090:	ldr	r8, [r4, #8]
   14094:	sub	r3, r6, #1
   14098:	cmp	r8, #0
   1409c:	ldr	r4, [r4, #4]
   140a0:	bne	14064 <bst_altura@@Base+0x6f8>
   140a4:	cmp	r4, #0
   140a8:	bne	14064 <bst_altura@@Base+0x6f8>
   140ac:	cmp	r3, sl
   140b0:	movge	r5, r9
   140b4:	cmp	r5, #0
   140b8:	mov	r3, r7
   140bc:	add	r7, r7, #1
   140c0:	bne	13fd8 <bst_altura@@Base+0x66c>
   140c4:	ldr	r2, [sp, #4]
   140c8:	mvn	r7, #0
   140cc:	cmp	r2, #0
   140d0:	add	r7, r3, r7
   140d4:	beq	141f0 <bst_altura@@Base+0x884>
   140d8:	ldr	r4, [sp, #4]
   140dc:	mov	r5, #1
   140e0:	b	14110 <bst_altura@@Base+0x7a4>
   140e4:	mov	r0, r4
   140e8:	bl	1396c <bst_altura@@Base>
   140ec:	mov	r8, r0
   140f0:	mov	r0, r6
   140f4:	bl	1396c <bst_altura@@Base>
   140f8:	mov	r3, r5
   140fc:	add	r5, r5, #1
   14100:	cmp	r8, r0
   14104:	movle	r4, r6
   14108:	cmp	r4, #0
   1410c:	beq	14208 <bst_altura@@Base+0x89c>
   14110:	ldr	r6, [r4, #8]
   14114:	sub	r3, r5, #1
   14118:	cmp	r6, #0
   1411c:	ldr	r4, [r4, #4]
   14120:	bne	140e4 <bst_altura@@Base+0x778>
   14124:	cmp	r4, #0
   14128:	bne	140e4 <bst_altura@@Base+0x778>
   1412c:	ldm	sp, {r1, r2}
   14130:	cmp	r3, r7
   14134:	movlt	r2, r1
   14138:	str	r2, [sp]
   1413c:	cmp	r2, #0
   14140:	ldr	r2, [sp, #8]
   14144:	mov	r3, r2
   14148:	add	r2, r2, #1
   1414c:	str	r2, [sp, #8]
   14150:	bne	13f9c <bst_altura@@Base+0x630>
   14154:	ldr	r2, [sp, #40]	; 0x28
   14158:	sub	r3, r3, #1
   1415c:	ldr	r0, [sp, #60]	; 0x3c
   14160:	ldr	r1, [sp, #20]
   14164:	cmp	r3, r0
   14168:	ldr	r3, [sp, #28]
   1416c:	movlt	r2, r1
   14170:	str	r2, [sp, #20]
   14174:	cmp	r2, #0
   14178:	add	r2, r3, #1
   1417c:	str	r2, [sp, #28]
   14180:	bne	13e4c <bst_altura@@Base+0x4e0>
   14184:	mvn	r5, #0
   14188:	ldr	r2, [sp, #36]	; 0x24
   1418c:	add	r5, r3, r5
   14190:	cmp	r2, #0
   14194:	bne	14380 <bst_altura@@Base+0xa14>
   14198:	mvn	r3, #0
   1419c:	b	143dc <bst_altura@@Base+0xa70>
   141a0:	mvn	r7, #0
   141a4:	b	13cc4 <bst_altura@@Base+0x358>
   141a8:	mvn	r3, #0
   141ac:	mov	r2, r1
   141b0:	b	13db8 <bst_altura@@Base+0x44c>
   141b4:	sub	r3, r3, #1
   141b8:	b	140ac <bst_altura@@Base+0x740>
   141bc:	mvn	sl, #0
   141c0:	cmp	r9, #0
   141c4:	add	sl, sl, r3
   141c8:	bne	14058 <bst_altura@@Base+0x6ec>
   141cc:	mvn	r3, #0
   141d0:	b	140ac <bst_altura@@Base+0x740>
   141d4:	cmp	r5, #0
   141d8:	bne	13ff4 <bst_altura@@Base+0x688>
   141dc:	ldr	r2, [sp, #4]
   141e0:	mov	r7, #0
   141e4:	cmp	r2, #0
   141e8:	add	r7, r3, r7
   141ec:	bne	140d8 <bst_altura@@Base+0x76c>
   141f0:	mvn	r3, #0
   141f4:	b	1412c <bst_altura@@Base+0x7c0>
   141f8:	sub	r3, r3, #1
   141fc:	b	13f5c <bst_altura@@Base+0x5f0>
   14200:	mvn	sl, #0
   14204:	b	14058 <bst_altura@@Base+0x6ec>
   14208:	sub	r3, r3, #1
   1420c:	b	1412c <bst_altura@@Base+0x7c0>
   14210:	mvn	sl, #0
   14214:	cmp	r9, #0
   14218:	add	sl, r3, sl
   1421c:	bne	13f08 <bst_altura@@Base+0x59c>
   14220:	mvn	r3, #0
   14224:	b	13f5c <bst_altura@@Base+0x5f0>
   14228:	ldr	r2, [sp]
   1422c:	ldr	r2, [r2, #4]
   14230:	cmp	r2, #0
   14234:	str	r2, [sp]
   14238:	bne	13fd0 <bst_altura@@Base+0x664>
   1423c:	ldr	r2, [sp, #40]	; 0x28
   14240:	b	1415c <bst_altura@@Base+0x7f0>
   14244:	cmp	r5, #0
   14248:	bne	13ea4 <bst_altura@@Base+0x538>
   1424c:	mov	r2, #0
   14250:	b	13f78 <bst_altura@@Base+0x60c>
   14254:	mvn	r7, #0
   14258:	b	140d8 <bst_altura@@Base+0x76c>
   1425c:	mvn	sl, #0
   14260:	b	13f08 <bst_altura@@Base+0x59c>
   14264:	ldr	r2, [sp, #20]
   14268:	ldr	r2, [r2, #4]
   1426c:	cmp	r2, #0
   14270:	str	r2, [sp, #20]
   14274:	bne	13e80 <bst_altura@@Base+0x514>
   14278:	mov	r5, #0
   1427c:	b	14188 <bst_altura@@Base+0x81c>
   14280:	ldr	r2, [sp, #12]
   14284:	ldr	r2, [r2, #4]
   14288:	cmp	r2, #0
   1428c:	str	r2, [sp, #12]
   14290:	bne	13a00 <bst_altura@@Base+0x94>
   14294:	ldr	r0, [sp, #64]	; 0x40
   14298:	b	142c0 <bst_altura@@Base+0x954>
   1429c:	ldr	r3, [sp, #24]
   142a0:	ldr	r3, [r3, #4]
   142a4:	cmp	r3, #0
   142a8:	str	r3, [sp, #24]
   142ac:	beq	142f0 <bst_altura@@Base+0x984>
   142b0:	mov	r0, r3
   142b4:	bl	1396c <bst_altura@@Base>
   142b8:	mvn	r3, #0
   142bc:	str	r0, [sp, #64]	; 0x40
   142c0:	ldr	r1, [sp, #24]
   142c4:	cmp	r3, r0
   142c8:	ldr	r2, [sp, #56]	; 0x38
   142cc:	ldr	r3, [sp, #52]	; 0x34
   142d0:	movlt	r2, r1
   142d4:	mov	r0, r3
   142d8:	cmp	r2, #0
   142dc:	add	r3, r3, #1
   142e0:	str	r2, [sp, #24]
   142e4:	str	r3, [sp, #52]	; 0x34
   142e8:	bne	13988 <bst_altura@@Base+0x1c>
   142ec:	sub	r0, r0, #1
   142f0:	add	sp, sp, #76	; 0x4c
   142f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142f8:	mvn	r0, #0
   142fc:	b	142f0 <bst_altura@@Base+0x984>
   14300:	ldr	r2, [sp]
   14304:	ldr	r2, [r2, #4]
   14308:	cmp	r2, #0
   1430c:	str	r2, [sp]
   14310:	bne	13a44 <bst_altura@@Base+0xd8>
   14314:	mov	r2, #0
   14318:	b	13de4 <bst_altura@@Base+0x478>
   1431c:	mvn	r3, #0
   14320:	str	r3, [sp, #68]	; 0x44
   14324:	b	13df8 <bst_altura@@Base+0x48c>
   14328:	mvn	r3, #0
   1432c:	str	r3, [sp, #28]
   14330:	b	13b80 <bst_altura@@Base+0x214>
   14334:	mvn	r3, #0
   14338:	mov	r2, r1
   1433c:	b	1415c <bst_altura@@Base+0x7f0>
   14340:	mvn	r3, #0
   14344:	mov	r2, r1
   14348:	ldr	r0, [sp, #68]	; 0x44
   1434c:	ldr	r1, [sp, #12]
   14350:	cmp	r3, r0
   14354:	movlt	r2, r1
   14358:	str	r2, [sp, #12]
   1435c:	cmp	r2, #0
   14360:	ldr	r2, [sp, #48]	; 0x30
   14364:	mov	r3, r2
   14368:	add	r2, r2, #1
   1436c:	str	r2, [sp, #48]	; 0x30
   14370:	bne	139cc <bst_altura@@Base+0x60>
   14374:	sub	r3, r3, #1
   14378:	b	14294 <bst_altura@@Base+0x928>
   1437c:	mvn	r5, #0
   14380:	ldr	r4, [sp, #36]	; 0x24
   14384:	mov	r6, #1
   14388:	b	143b8 <bst_altura@@Base+0xa4c>
   1438c:	mov	r0, r4
   14390:	bl	1396c <bst_altura@@Base>
   14394:	mov	r8, r0
   14398:	mov	r0, r7
   1439c:	bl	1396c <bst_altura@@Base>
   143a0:	mov	r3, r6
   143a4:	add	r6, r6, #1
   143a8:	cmp	r8, r0
   143ac:	movle	r4, r7
   143b0:	cmp	r4, #0
   143b4:	beq	143d8 <bst_altura@@Base+0xa6c>
   143b8:	ldr	r7, [r4, #8]
   143bc:	sub	r3, r6, #1
   143c0:	cmp	r7, #0
   143c4:	ldr	r4, [r4, #4]
   143c8:	bne	1438c <bst_altura@@Base+0xa20>
   143cc:	cmp	r4, #0
   143d0:	bne	1438c <bst_altura@@Base+0xa20>
   143d4:	b	143dc <bst_altura@@Base+0xa70>
   143d8:	sub	r3, r3, #1
   143dc:	ldr	r1, [sp, #16]
   143e0:	ldr	r2, [sp, #36]	; 0x24
   143e4:	cmp	r3, r5
   143e8:	movlt	r2, r1
   143ec:	str	r2, [sp, #16]
   143f0:	cmp	r2, #0
   143f4:	ldr	r2, [sp, #44]	; 0x2c
   143f8:	mov	r3, r2
   143fc:	add	r2, r2, #1
   14400:	str	r2, [sp, #44]	; 0x2c
   14404:	bne	13e08 <bst_altura@@Base+0x49c>
   14408:	sub	r3, r3, #1
   1440c:	ldr	r2, [sp, #32]
   14410:	b	14348 <bst_altura@@Base+0x9dc>
   14414:	ldr	r2, [sp, #16]
   14418:	ldr	r2, [r2, #4]
   1441c:	cmp	r2, #0
   14420:	str	r2, [sp, #16]
   14424:	bne	13e3c <bst_altura@@Base+0x4d0>
   14428:	ldr	r2, [sp, #32]
   1442c:	b	14348 <bst_altura@@Base+0x9dc>
   14430:	mvn	r3, #0
   14434:	str	r3, [sp, #60]	; 0x3c
   14438:	b	13f8c <bst_altura@@Base+0x620>

0001443c <bst_preordem_impl@@Base>:
   1443c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14440:	sub	sp, sp, #12
   14444:	subs	r3, r0, #0
   14448:	str	r3, [sp, #4]
   1444c:	beq	145b0 <bst_preordem_impl@@Base+0x174>
   14450:	ldr	r4, [pc, #352]	; 145b8 <bst_preordem_impl@@Base+0x17c>
   14454:	ldr	r5, [sp, #4]
   14458:	mov	r0, r4
   1445c:	ldr	r1, [r5]
   14460:	bl	10d3c <printf@plt>
   14464:	ldr	r3, [r5, #4]
   14468:	cmp	r3, #0
   1446c:	str	r3, [sp]
   14470:	beq	1459c <bst_preordem_impl@@Base+0x160>
   14474:	ldr	r5, [sp]
   14478:	mov	r0, r4
   1447c:	ldr	r1, [r5]
   14480:	bl	10d3c <printf@plt>
   14484:	ldr	r8, [r5, #4]
   14488:	cmp	r8, #0
   1448c:	beq	14588 <bst_preordem_impl@@Base+0x14c>
   14490:	ldr	r1, [r8]
   14494:	mov	r0, r4
   14498:	bl	10d3c <printf@plt>
   1449c:	ldr	r9, [r8, #4]
   144a0:	cmp	r9, #0
   144a4:	beq	1457c <bst_preordem_impl@@Base+0x140>
   144a8:	ldr	r1, [r9]
   144ac:	mov	r0, r4
   144b0:	bl	10d3c <printf@plt>
   144b4:	ldr	sl, [r9, #4]
   144b8:	cmp	sl, #0
   144bc:	beq	14570 <bst_preordem_impl@@Base+0x134>
   144c0:	ldr	r1, [sl]
   144c4:	mov	r0, r4
   144c8:	bl	10d3c <printf@plt>
   144cc:	ldr	fp, [sl, #4]
   144d0:	cmp	fp, #0
   144d4:	beq	14564 <bst_preordem_impl@@Base+0x128>
   144d8:	ldr	r1, [fp]
   144dc:	mov	r0, r4
   144e0:	bl	10d3c <printf@plt>
   144e4:	ldr	r6, [fp, #4]
   144e8:	cmp	r6, #0
   144ec:	beq	14558 <bst_preordem_impl@@Base+0x11c>
   144f0:	ldr	r1, [r6]
   144f4:	mov	r0, r4
   144f8:	bl	10d3c <printf@plt>
   144fc:	ldr	r5, [r6, #4]
   14500:	cmp	r5, #0
   14504:	beq	1454c <bst_preordem_impl@@Base+0x110>
   14508:	ldr	r1, [r5]
   1450c:	mov	r0, r4
   14510:	bl	10d3c <printf@plt>
   14514:	ldr	r7, [r5, #4]
   14518:	cmp	r7, #0
   1451c:	beq	14540 <bst_preordem_impl@@Base+0x104>
   14520:	ldr	r1, [r7]
   14524:	mov	r0, r4
   14528:	bl	10d3c <printf@plt>
   1452c:	ldr	r0, [r7, #4]
   14530:	bl	1443c <bst_preordem_impl@@Base>
   14534:	ldr	r7, [r7, #8]
   14538:	cmp	r7, #0
   1453c:	bne	14520 <bst_preordem_impl@@Base+0xe4>
   14540:	ldr	r5, [r5, #8]
   14544:	cmp	r5, #0
   14548:	bne	14508 <bst_preordem_impl@@Base+0xcc>
   1454c:	ldr	r6, [r6, #8]
   14550:	cmp	r6, #0
   14554:	bne	144f0 <bst_preordem_impl@@Base+0xb4>
   14558:	ldr	fp, [fp, #8]
   1455c:	cmp	fp, #0
   14560:	bne	144d8 <bst_preordem_impl@@Base+0x9c>
   14564:	ldr	sl, [sl, #8]
   14568:	cmp	sl, #0
   1456c:	bne	144c0 <bst_preordem_impl@@Base+0x84>
   14570:	ldr	r9, [r9, #8]
   14574:	cmp	r9, #0
   14578:	bne	144a8 <bst_preordem_impl@@Base+0x6c>
   1457c:	ldr	r8, [r8, #8]
   14580:	cmp	r8, #0
   14584:	bne	14490 <bst_preordem_impl@@Base+0x54>
   14588:	ldr	r3, [sp]
   1458c:	ldr	r3, [r3, #8]
   14590:	cmp	r3, #0
   14594:	str	r3, [sp]
   14598:	bne	14474 <bst_preordem_impl@@Base+0x38>
   1459c:	ldr	r3, [sp, #4]
   145a0:	ldr	r3, [r3, #8]
   145a4:	cmp	r3, #0
   145a8:	str	r3, [sp, #4]
   145ac:	bne	14454 <bst_preordem_impl@@Base+0x18>
   145b0:	add	sp, sp, #12
   145b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145b8:	andeq	r4, r1, r4, lsr r7

000145bc <bst_imprime@@Base>:
   145bc:	push	{r4, r5, r6, lr}
   145c0:	subs	r4, r0, #0
   145c4:	popeq	{r4, r5, r6, pc}
   145c8:	ldr	r0, [pc, #60]	; 1460c <bst_imprime@@Base+0x50>
   145cc:	bl	10d3c <printf@plt>
   145d0:	ldr	r4, [r4]
   145d4:	cmp	r4, #0
   145d8:	ldrne	r5, [pc, #48]	; 14610 <bst_imprime@@Base+0x54>
   145dc:	beq	14600 <bst_imprime@@Base+0x44>
   145e0:	ldr	r1, [r4]
   145e4:	mov	r0, r5
   145e8:	bl	10d3c <printf@plt>
   145ec:	ldr	r0, [r4, #4]
   145f0:	bl	1443c <bst_preordem_impl@@Base>
   145f4:	ldr	r4, [r4, #8]
   145f8:	cmp	r4, #0
   145fc:	bne	145e0 <bst_imprime@@Base+0x24>
   14600:	mov	r0, #10
   14604:	pop	{r4, r5, r6, lr}
   14608:	b	10dd8 <putchar@plt>
   1460c:	andeq	r4, r1, r8, lsr r7
   14610:	andeq	r4, r1, r4, lsr r7

00014614 <__libc_csu_init@@Base>:
   14614:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14618:	mov	r7, r0
   1461c:	ldr	r6, [pc, #72]	; 1466c <__libc_csu_init@@Base+0x58>
   14620:	ldr	r5, [pc, #72]	; 14670 <__libc_csu_init@@Base+0x5c>
   14624:	add	r6, pc, r6
   14628:	add	r5, pc, r5
   1462c:	sub	r6, r6, r5
   14630:	mov	r8, r1
   14634:	mov	r9, r2
   14638:	bl	10d10 <strcmp@plt-0x20>
   1463c:	asrs	r6, r6, #2
   14640:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14644:	mov	r4, #0
   14648:	add	r4, r4, #1
   1464c:	ldr	r3, [r5], #4
   14650:	mov	r2, r9
   14654:	mov	r1, r8
   14658:	mov	r0, r7
   1465c:	blx	r3
   14660:	cmp	r6, r4
   14664:	bne	14648 <__libc_csu_init@@Base+0x34>
   14668:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1466c:	andeq	r0, r1, r4, ror #17
   14670:	ldrdeq	r0, [r1], -ip

00014674 <__libc_csu_fini@@Base>:
   14674:	bx	lr

Disassembly of section .fini:

00014678 <.fini>:
   14678:	push	{r3, lr}
   1467c:	pop	{r3, pc}
