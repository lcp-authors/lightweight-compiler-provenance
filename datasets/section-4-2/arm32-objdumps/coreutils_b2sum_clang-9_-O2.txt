
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

00011030 <.init>:
   11030:	push	{r3, lr}
   11034:	bl	1135c <__assert_fail@plt+0x54>
   11038:	pop	{r3, pc}

Disassembly of section .plt:

0001103c <fdopen@plt-0x14>:
   1103c:	push	{lr}		; (str lr, [sp, #-4]!)
   11040:	ldr	lr, [pc, #4]	; 1104c <fdopen@plt-0x4>
   11044:	add	lr, pc, lr
   11048:	ldr	pc, [lr, #8]!
   1104c:			; <UNDEFINED> instruction: 0x0001dfb4

00011050 <fdopen@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #118784	; 0x1d000
   11058:	ldr	pc, [ip, #4020]!	; 0xfb4

0001105c <calloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #118784	; 0x1d000
   11064:	ldr	pc, [ip, #4012]!	; 0xfac

00011068 <fputs_unlocked@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #118784	; 0x1d000
   11070:	ldr	pc, [ip, #4004]!	; 0xfa4

00011074 <raise@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #118784	; 0x1d000
   1107c:	ldr	pc, [ip, #3996]!	; 0xf9c

00011080 <__getdelim@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #118784	; 0x1d000
   11088:	ldr	pc, [ip, #3988]!	; 0xf94

0001108c <strcmp@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #118784	; 0x1d000
   11094:	ldr	pc, [ip, #3980]!	; 0xf8c

00011098 <posix_fadvise64@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #118784	; 0x1d000
   110a0:	ldr	pc, [ip, #3972]!	; 0xf84

000110a4 <fflush@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #118784	; 0x1d000
   110ac:	ldr	pc, [ip, #3964]!	; 0xf7c

000110b0 <free@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #118784	; 0x1d000
   110b8:	ldr	pc, [ip, #3956]!	; 0xf74

000110bc <ferror@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #118784	; 0x1d000
   110c4:	ldr	pc, [ip, #3948]!	; 0xf6c

000110c8 <_exit@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #118784	; 0x1d000
   110d0:	ldr	pc, [ip, #3940]!	; 0xf64

000110d4 <memcpy@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #118784	; 0x1d000
   110dc:	ldr	pc, [ip, #3932]!	; 0xf5c

000110e0 <__strtoull_internal@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #118784	; 0x1d000
   110e8:	ldr	pc, [ip, #3924]!	; 0xf54

000110ec <mbsinit@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #118784	; 0x1d000
   110f4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110f8 <dcgettext@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #118784	; 0x1d000
   11100:	ldr	pc, [ip, #3908]!	; 0xf44

00011104 <realloc@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #118784	; 0x1d000
   1110c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011110 <textdomain@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #118784	; 0x1d000
   11118:	ldr	pc, [ip, #3892]!	; 0xf34

0001111c <iswprint@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #118784	; 0x1d000
   11124:	ldr	pc, [ip, #3884]!	; 0xf2c

00011128 <fwrite@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #118784	; 0x1d000
   11130:	ldr	pc, [ip, #3876]!	; 0xf24

00011134 <lseek64@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #118784	; 0x1d000
   1113c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011140 <__ctype_get_mb_cur_max@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #118784	; 0x1d000
   11148:	ldr	pc, [ip, #3860]!	; 0xf14

0001114c <fread@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #118784	; 0x1d000
   11154:	ldr	pc, [ip, #3852]!	; 0xf0c

00011158 <__fpending@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #118784	; 0x1d000
   11160:	ldr	pc, [ip, #3844]!	; 0xf04

00011164 <mbrtowc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #118784	; 0x1d000
   1116c:	ldr	pc, [ip, #3836]!	; 0xefc

00011170 <error@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #118784	; 0x1d000
   11178:	ldr	pc, [ip, #3828]!	; 0xef4

0001117c <malloc@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #118784	; 0x1d000
   11184:	ldr	pc, [ip, #3820]!	; 0xeec

00011188 <__libc_start_main@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #118784	; 0x1d000
   11190:	ldr	pc, [ip, #3812]!	; 0xee4

00011194 <__freading@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #118784	; 0x1d000
   1119c:	ldr	pc, [ip, #3804]!	; 0xedc

000111a0 <__ctype_tolower_loc@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #118784	; 0x1d000
   111a8:	ldr	pc, [ip, #3796]!	; 0xed4

000111ac <__gmon_start__@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #118784	; 0x1d000
   111b4:	ldr	pc, [ip, #3788]!	; 0xecc

000111b8 <getopt_long@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #118784	; 0x1d000
   111c0:	ldr	pc, [ip, #3780]!	; 0xec4

000111c4 <__ctype_b_loc@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #118784	; 0x1d000
   111cc:	ldr	pc, [ip, #3772]!	; 0xebc

000111d0 <exit@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #118784	; 0x1d000
   111d8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111dc <feof@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #118784	; 0x1d000
   111e4:	ldr	pc, [ip, #3756]!	; 0xeac

000111e8 <bcmp@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #118784	; 0x1d000
   111f0:	ldr	pc, [ip, #3748]!	; 0xea4

000111f4 <strlen@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #118784	; 0x1d000
   111fc:	ldr	pc, [ip, #3740]!	; 0xe9c

00011200 <strchr@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #118784	; 0x1d000
   11208:	ldr	pc, [ip, #3732]!	; 0xe94

0001120c <__errno_location@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #118784	; 0x1d000
   11214:	ldr	pc, [ip, #3724]!	; 0xe8c

00011218 <__cxa_atexit@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #118784	; 0x1d000
   11220:	ldr	pc, [ip, #3716]!	; 0xe84

00011224 <setvbuf@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #118784	; 0x1d000
   1122c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011230 <memset@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #118784	; 0x1d000
   11238:	ldr	pc, [ip, #3700]!	; 0xe74

0001123c <__printf_chk@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #118784	; 0x1d000
   11244:	ldr	pc, [ip, #3692]!	; 0xe6c

00011248 <fileno@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #118784	; 0x1d000
   11250:	ldr	pc, [ip, #3684]!	; 0xe64

00011254 <__fprintf_chk@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #118784	; 0x1d000
   1125c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011260 <fclose@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #118784	; 0x1d000
   11268:	ldr	pc, [ip, #3668]!	; 0xe54

0001126c <fseeko64@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #118784	; 0x1d000
   11274:	ldr	pc, [ip, #3660]!	; 0xe4c

00011278 <fcntl64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #118784	; 0x1d000
   11280:	ldr	pc, [ip, #3652]!	; 0xe44

00011284 <__overflow@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #118784	; 0x1d000
   1128c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011290 <setlocale@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #118784	; 0x1d000
   11298:	ldr	pc, [ip, #3636]!	; 0xe34

0001129c <strrchr@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #118784	; 0x1d000
   112a4:	ldr	pc, [ip, #3628]!	; 0xe2c

000112a8 <nl_langinfo@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #118784	; 0x1d000
   112b0:	ldr	pc, [ip, #3620]!	; 0xe24

000112b4 <clearerr_unlocked@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #118784	; 0x1d000
   112bc:	ldr	pc, [ip, #3612]!	; 0xe1c

000112c0 <fopen64@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #118784	; 0x1d000
   112c8:	ldr	pc, [ip, #3604]!	; 0xe14

000112cc <bindtextdomain@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #118784	; 0x1d000
   112d4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112d8 <strncmp@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #118784	; 0x1d000
   112e0:	ldr	pc, [ip, #3588]!	; 0xe04

000112e4 <abort@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #118784	; 0x1d000
   112ec:	ldr	pc, [ip, #3580]!	; 0xdfc

000112f0 <close@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #118784	; 0x1d000
   112f8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112fc <dcngettext@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #118784	; 0x1d000
   11304:	ldr	pc, [ip, #3564]!	; 0xdec

00011308 <__assert_fail@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #118784	; 0x1d000
   11310:	ldr	pc, [ip, #3556]!	; 0xde4

Disassembly of section .text:

00011320 <.text>:
   11320:	mov	fp, #0
   11324:	mov	lr, #0
   11328:	pop	{r1}		; (ldr r1, [sp], #4)
   1132c:	mov	r2, sp
   11330:	push	{r2}		; (str r2, [sp, #-4]!)
   11334:	push	{r0}		; (str r0, [sp, #-4]!)
   11338:	ldr	ip, [pc, #16]	; 11350 <__assert_fail@plt+0x48>
   1133c:	push	{ip}		; (str ip, [sp, #-4]!)
   11340:	ldr	r0, [pc, #12]	; 11354 <__assert_fail@plt+0x4c>
   11344:	ldr	r3, [pc, #12]	; 11358 <__assert_fail@plt+0x50>
   11348:	bl	11188 <__libc_start_main@plt>
   1134c:	bl	112e4 <abort@plt>
   11350:	andeq	sp, r1, r4, lsr r9
   11354:	andeq	r1, r1, r4, lsr #15
   11358:	ldrdeq	sp, [r1], -r4
   1135c:	ldr	r3, [pc, #20]	; 11378 <__assert_fail@plt+0x70>
   11360:	ldr	r2, [pc, #20]	; 1137c <__assert_fail@plt+0x74>
   11364:	add	r3, pc, r3
   11368:	ldr	r2, [r3, r2]
   1136c:	cmp	r2, #0
   11370:	bxeq	lr
   11374:	b	111ac <__gmon_start__@plt>
   11378:	muleq	r1, r4, ip
   1137c:	strdeq	r0, [r0], -r8
   11380:	ldr	r0, [pc, #24]	; 113a0 <__assert_fail@plt+0x98>
   11384:	ldr	r3, [pc, #24]	; 113a4 <__assert_fail@plt+0x9c>
   11388:	cmp	r3, r0
   1138c:	bxeq	lr
   11390:	ldr	r3, [pc, #16]	; 113a8 <__assert_fail@plt+0xa0>
   11394:	cmp	r3, #0
   11398:	bxeq	lr
   1139c:	bx	r3
   113a0:	andeq	pc, r2, r8, asr r1	; <UNPREDICTABLE>
   113a4:	andeq	pc, r2, r8, asr r1	; <UNPREDICTABLE>
   113a8:	andeq	r0, r0, r0
   113ac:	ldr	r0, [pc, #36]	; 113d8 <__assert_fail@plt+0xd0>
   113b0:	ldr	r1, [pc, #36]	; 113dc <__assert_fail@plt+0xd4>
   113b4:	sub	r1, r1, r0
   113b8:	asr	r1, r1, #2
   113bc:	add	r1, r1, r1, lsr #31
   113c0:	asrs	r1, r1, #1
   113c4:	bxeq	lr
   113c8:	ldr	r3, [pc, #16]	; 113e0 <__assert_fail@plt+0xd8>
   113cc:	cmp	r3, #0
   113d0:	bxeq	lr
   113d4:	bx	r3
   113d8:	andeq	pc, r2, r8, asr r1	; <UNPREDICTABLE>
   113dc:	andeq	pc, r2, r8, asr r1	; <UNPREDICTABLE>
   113e0:	andeq	r0, r0, r0
   113e4:	push	{r4, lr}
   113e8:	ldr	r4, [pc, #24]	; 11408 <__assert_fail@plt+0x100>
   113ec:	ldrb	r3, [r4]
   113f0:	cmp	r3, #0
   113f4:	popne	{r4, pc}
   113f8:	bl	11380 <__assert_fail@plt+0x78>
   113fc:	mov	r3, #1
   11400:	strb	r3, [r4]
   11404:	pop	{r4, pc}
   11408:	andeq	pc, r2, ip, ror r1	; <UNPREDICTABLE>
   1140c:	b	113ac <__assert_fail@plt+0xa4>
   11410:	push	{fp, lr}
   11414:	mov	fp, sp
   11418:	sub	sp, sp, #56	; 0x38
   1141c:	mov	r4, r0
   11420:	cmp	r0, #0
   11424:	bne	11760 <__assert_fail@plt+0x458>
   11428:	movw	r1, #55683	; 0xd983
   1142c:	mov	r0, #0
   11430:	mov	r2, #5
   11434:	movt	r1, #1
   11438:	bl	110f8 <dcgettext@plt>
   1143c:	mov	r1, r0
   11440:	movw	r0, #61860	; 0xf1a4
   11444:	movt	r0, #2
   11448:	ldr	r2, [r0]
   1144c:	mov	r0, #1
   11450:	bl	1123c <__printf_chk@plt>
   11454:	movw	r1, #55716	; 0xd9a4
   11458:	mov	r0, #0
   1145c:	mov	r2, #5
   11460:	movt	r1, #1
   11464:	bl	110f8 <dcgettext@plt>
   11468:	movw	r2, #55755	; 0xd9cb
   1146c:	mov	r1, r0
   11470:	mov	r0, #1
   11474:	mov	r3, #512	; 0x200
   11478:	movt	r2, #1
   1147c:	bl	1123c <__printf_chk@plt>
   11480:	movw	r1, #57933	; 0xe24d
   11484:	mov	r0, #0
   11488:	mov	r2, #5
   1148c:	movt	r1, #1
   11490:	bl	110f8 <dcgettext@plt>
   11494:	movw	r7, #61812	; 0xf174
   11498:	movt	r7, #2
   1149c:	ldr	r1, [r7]
   114a0:	bl	11068 <fputs_unlocked@plt>
   114a4:	movw	r1, #57989	; 0xe285
   114a8:	mov	r0, #0
   114ac:	mov	r2, #5
   114b0:	movt	r1, #1
   114b4:	bl	110f8 <dcgettext@plt>
   114b8:	ldr	r1, [r7]
   114bc:	bl	11068 <fputs_unlocked@plt>
   114c0:	movw	r1, #55763	; 0xd9d3
   114c4:	mov	r0, #0
   114c8:	mov	r2, #5
   114cc:	movt	r1, #1
   114d0:	bl	110f8 <dcgettext@plt>
   114d4:	ldr	r1, [r7]
   114d8:	bl	11068 <fputs_unlocked@plt>
   114dc:	movw	r1, #55808	; 0xda00
   114e0:	mov	r0, #0
   114e4:	mov	r2, #5
   114e8:	movt	r1, #1
   114ec:	bl	110f8 <dcgettext@plt>
   114f0:	ldr	r1, [r7]
   114f4:	bl	11068 <fputs_unlocked@plt>
   114f8:	movw	r1, #55878	; 0xda46
   114fc:	mov	r0, #0
   11500:	mov	r2, #5
   11504:	movt	r1, #1
   11508:	bl	110f8 <dcgettext@plt>
   1150c:	ldr	r1, [r7]
   11510:	bl	11068 <fputs_unlocked@plt>
   11514:	movw	r1, #56029	; 0xdadd
   11518:	mov	r0, #0
   1151c:	mov	r2, #5
   11520:	movt	r1, #1
   11524:	bl	110f8 <dcgettext@plt>
   11528:	ldr	r1, [r7]
   1152c:	bl	11068 <fputs_unlocked@plt>
   11530:	movw	r1, #56082	; 0xdb12
   11534:	mov	r0, #0
   11538:	mov	r2, #5
   1153c:	movt	r1, #1
   11540:	bl	110f8 <dcgettext@plt>
   11544:	ldr	r1, [r7]
   11548:	bl	11068 <fputs_unlocked@plt>
   1154c:	movw	r1, #56135	; 0xdb47
   11550:	mov	r0, #0
   11554:	mov	r2, #5
   11558:	movt	r1, #1
   1155c:	bl	110f8 <dcgettext@plt>
   11560:	ldr	r1, [r7]
   11564:	bl	11068 <fputs_unlocked@plt>
   11568:	movw	r1, #56261	; 0xdbc5
   1156c:	mov	r0, #0
   11570:	mov	r2, #5
   11574:	movt	r1, #1
   11578:	bl	110f8 <dcgettext@plt>
   1157c:	ldr	r1, [r7]
   11580:	bl	11068 <fputs_unlocked@plt>
   11584:	movw	r1, #56700	; 0xdd7c
   11588:	mov	r0, #0
   1158c:	mov	r2, #5
   11590:	movt	r1, #1
   11594:	bl	110f8 <dcgettext@plt>
   11598:	ldr	r1, [r7]
   1159c:	bl	11068 <fputs_unlocked@plt>
   115a0:	movw	r1, #56745	; 0xdda9
   115a4:	mov	r0, #0
   115a8:	mov	r2, #5
   115ac:	movt	r1, #1
   115b0:	bl	110f8 <dcgettext@plt>
   115b4:	ldr	r1, [r7]
   115b8:	bl	11068 <fputs_unlocked@plt>
   115bc:	movw	r1, #56799	; 0xdddf
   115c0:	mov	r0, #0
   115c4:	mov	r2, #5
   115c8:	movt	r1, #1
   115cc:	bl	110f8 <dcgettext@plt>
   115d0:	movw	r2, #56843	; 0xde0b
   115d4:	mov	r1, r0
   115d8:	mov	r0, #1
   115dc:	movt	r2, #1
   115e0:	bl	1123c <__printf_chk@plt>
   115e4:	movw	r1, #56852	; 0xde14
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	movt	r1, #1
   115f4:	bl	110f8 <dcgettext@plt>
   115f8:	ldr	r1, [r7]
   115fc:	bl	11068 <fputs_unlocked@plt>
   11600:	movw	r0, #59176	; 0xe728
   11604:	mov	r2, #48	; 0x30
   11608:	mov	r6, sp
   1160c:	movw	r5, #57185	; 0xdf61
   11610:	movt	r0, #1
   11614:	movt	r5, #1
   11618:	add	r1, r0, #32
   1161c:	add	r3, r0, #16
   11620:	vld1.64	{d18-d19}, [r0], r2
   11624:	vld1.64	{d16-d17}, [r1]
   11628:	vld1.64	{d20-d21}, [r3]
   1162c:	vldr	d22, [r0]
   11630:	add	r1, r6, #32
   11634:	add	r0, r6, #16
   11638:	vst1.64	{d16-d17}, [r1]
   1163c:	movw	r1, #58064	; 0xe2d0
   11640:	vst1.64	{d20-d21}, [r0]
   11644:	mov	r0, r6
   11648:	movt	r1, #1
   1164c:	vst1.64	{d18-d19}, [r0], r2
   11650:	vstr	d22, [r0]
   11654:	mov	r0, r5
   11658:	bl	1108c <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	ldrne	r1, [r6, #8]!
   11664:	cmpne	r1, #0
   11668:	bne	11654 <__assert_fail@plt+0x34c>
   1166c:	movw	r1, #58159	; 0xe32f
   11670:	ldr	r6, [r6, #4]
   11674:	mov	r0, #0
   11678:	mov	r2, #5
   1167c:	movt	r1, #1
   11680:	bl	110f8 <dcgettext@plt>
   11684:	movw	r2, #57287	; 0xdfc7
   11688:	movw	r3, #58182	; 0xe346
   1168c:	mov	r1, r0
   11690:	mov	r0, #1
   11694:	movt	r2, #1
   11698:	movt	r3, #1
   1169c:	bl	1123c <__printf_chk@plt>
   116a0:	cmp	r6, #0
   116a4:	mov	r0, #5
   116a8:	mov	r1, #0
   116ac:	moveq	r6, r5
   116b0:	bl	11290 <setlocale@plt>
   116b4:	cmp	r0, #0
   116b8:	beq	116f0 <__assert_fail@plt+0x3e8>
   116bc:	movw	r1, #58222	; 0xe36e
   116c0:	mov	r2, #3
   116c4:	movt	r1, #1
   116c8:	bl	112d8 <strncmp@plt>
   116cc:	cmp	r0, #0
   116d0:	beq	116f0 <__assert_fail@plt+0x3e8>
   116d4:	movw	r1, #58226	; 0xe372
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	movt	r1, #1
   116e4:	bl	110f8 <dcgettext@plt>
   116e8:	ldr	r1, [r7]
   116ec:	bl	11068 <fputs_unlocked@plt>
   116f0:	movw	r1, #58297	; 0xe3b9
   116f4:	mov	r0, #0
   116f8:	mov	r2, #5
   116fc:	movt	r1, #1
   11700:	bl	110f8 <dcgettext@plt>
   11704:	movw	r2, #58182	; 0xe346
   11708:	mov	r1, r0
   1170c:	mov	r0, #1
   11710:	mov	r3, r5
   11714:	movt	r2, #1
   11718:	bl	1123c <__printf_chk@plt>
   1171c:	movw	r1, #58324	; 0xe3d4
   11720:	mov	r0, #0
   11724:	mov	r2, #5
   11728:	movt	r1, #1
   1172c:	bl	110f8 <dcgettext@plt>
   11730:	mov	r1, r0
   11734:	movw	r0, #58092	; 0xe2ec
   11738:	movw	r3, #56699	; 0xdd7b
   1173c:	cmp	r6, r5
   11740:	mov	r2, r6
   11744:	movt	r0, #1
   11748:	movt	r3, #1
   1174c:	moveq	r3, r0
   11750:	mov	r0, #1
   11754:	bl	1123c <__printf_chk@plt>
   11758:	mov	r0, r4
   1175c:	bl	111d0 <exit@plt>
   11760:	movw	r0, #61800	; 0xf168
   11764:	movw	r1, #55644	; 0xd95c
   11768:	mov	r2, #5
   1176c:	movt	r0, #2
   11770:	movt	r1, #1
   11774:	ldr	r5, [r0]
   11778:	mov	r0, #0
   1177c:	bl	110f8 <dcgettext@plt>
   11780:	mov	r2, r0
   11784:	movw	r0, #61860	; 0xf1a4
   11788:	mov	r1, #1
   1178c:	movt	r0, #2
   11790:	ldr	r3, [r0]
   11794:	mov	r0, r5
   11798:	bl	11254 <__fprintf_chk@plt>
   1179c:	mov	r0, r4
   117a0:	bl	111d0 <exit@plt>
   117a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117a8:	add	fp, sp, #28
   117ac:	sub	sp, sp, #316	; 0x13c
   117b0:	mov	r5, r0
   117b4:	ldr	r0, [r1]
   117b8:	mov	r4, r1
   117bc:	bl	19ac0 <__assert_fail@plt+0x87b8>
   117c0:	movw	r7, #56699	; 0xdd7b
   117c4:	mov	r0, #6
   117c8:	movt	r7, #1
   117cc:	mov	r1, r7
   117d0:	bl	11290 <setlocale@plt>
   117d4:	movw	r6, #57291	; 0xdfcb
   117d8:	movw	r1, #57191	; 0xdf67
   117dc:	movt	r6, #1
   117e0:	movt	r1, #1
   117e4:	mov	r0, r6
   117e8:	bl	112cc <bindtextdomain@plt>
   117ec:	mov	r0, r6
   117f0:	bl	11110 <textdomain@plt>
   117f4:	movw	r0, #38688	; 0x9720
   117f8:	movt	r0, #1
   117fc:	bl	1d938 <__assert_fail@plt+0xc630>
   11800:	movw	r0, #61812	; 0xf174
   11804:	mov	r1, #0
   11808:	mov	r2, #1
   1180c:	mov	r3, #0
   11810:	mov	r9, #0
   11814:	movt	r0, #2
   11818:	ldr	r0, [r0]
   1181c:	bl	11224 <setvbuf@plt>
   11820:	add	r0, sp, #148	; 0x94
   11824:	movw	r1, #57215	; 0xdf7f
   11828:	movw	sl, #58952	; 0xe648
   1182c:	mvn	r8, #0
   11830:	str	r7, [sp, #144]	; 0x90
   11834:	add	r0, r0, #7
   11838:	movt	r1, #1
   1183c:	movt	sl, #1
   11840:	and	r6, r0, #7
   11844:	sub	r0, r0, r6
   11848:	mov	r7, r1
   1184c:	str	r0, [sp, #68]	; 0x44
   11850:	mov	r0, #0
   11854:	str	r0, [sp, #76]	; 0x4c
   11858:	mov	r0, #0
   1185c:	str	r0, [sp, #88]	; 0x58
   11860:	mov	r0, r5
   11864:	mov	r1, r4
   11868:	mov	r2, r7
   1186c:	mov	r3, sl
   11870:	str	r9, [sp]
   11874:	bl	111b8 <getopt_long@plt>
   11878:	cmp	r0, #97	; 0x61
   1187c:	ble	11a74 <__assert_fail@plt+0x76c>
   11880:	sub	r1, r0, #98	; 0x62
   11884:	cmp	r1, #24
   11888:	bhi	11908 <__assert_fail@plt+0x600>
   1188c:	add	r2, pc, #4
   11890:	mov	r0, #1
   11894:	ldr	pc, [r2, r1, lsl #2]
   11898:	strdeq	r1, [r1], -ip
   1189c:	andeq	r1, r1, ip, asr r8
   118a0:	andeq	r2, r1, ip, asr #30
   118a4:	andeq	r2, r1, ip, asr #30
   118a8:	andeq	r2, r1, ip, asr #30
   118ac:	andeq	r2, r1, ip, asr #30
   118b0:	andeq	r2, r1, ip, asr #30
   118b4:	andeq	r2, r1, ip, asr #30
   118b8:	andeq	r2, r1, ip, asr #30
   118bc:	andeq	r2, r1, ip, asr #30
   118c0:	andeq	r1, r1, r0, ror r9
   118c4:	andeq	r2, r1, ip, asr #30
   118c8:	andeq	r2, r1, ip, asr #30
   118cc:	andeq	r2, r1, ip, asr #30
   118d0:	andeq	r2, r1, ip, asr #30
   118d4:	andeq	r2, r1, ip, asr #30
   118d8:	andeq	r2, r1, ip, asr #30
   118dc:	andeq	r2, r1, ip, asr #30
   118e0:	andeq	r1, r1, r4, lsl sl
   118e4:	andeq	r2, r1, ip, asr #30
   118e8:	andeq	r2, r1, ip, asr #30
   118ec:	andeq	r1, r1, r0, asr r9
   118f0:	andeq	r2, r1, ip, asr #30
   118f4:	andeq	r2, r1, ip, asr #30
   118f8:	andeq	r1, r1, ip, asr sl
   118fc:	ldr	r0, [sp, #88]	; 0x58
   11900:	mov	r8, #1
   11904:	b	1185c <__assert_fail@plt+0x554>
   11908:	sub	r0, r0, #256	; 0x100
   1190c:	cmp	r0, #4
   11910:	bhi	12f4c <__assert_fail@plt+0x1c44>
   11914:	add	r1, pc, #0
   11918:	ldr	pc, [r1, r0, lsl #2]
   1191c:	andeq	r1, r1, r0, lsr r9
   11920:	andeq	r1, r1, ip, lsr #20
   11924:	strdeq	r1, [r1], -r0
   11928:	andeq	r1, r1, r0, lsr #20
   1192c:	andeq	r1, r1, ip, lsr r9
   11930:	movw	r0, #61835	; 0xf18b
   11934:	movt	r0, #2
   11938:	b	11a64 <__assert_fail@plt+0x75c>
   1193c:	mov	r0, #1
   11940:	mov	r8, #1
   11944:	str	r0, [sp, #76]	; 0x4c
   11948:	ldr	r0, [sp, #88]	; 0x58
   1194c:	b	1185c <__assert_fail@plt+0x554>
   11950:	movw	r0, #61833	; 0xf189
   11954:	mov	r1, #1
   11958:	movt	r0, #2
   1195c:	strb	r1, [r0]
   11960:	movw	r0, #61832	; 0xf188
   11964:	movt	r0, #2
   11968:	strb	r9, [r0]
   1196c:	b	11a48 <__assert_fail@plt+0x740>
   11970:	movw	r0, #61816	; 0xf178
   11974:	movw	r1, #57223	; 0xdf87
   11978:	mov	r2, #5
   1197c:	movt	r0, #2
   11980:	movt	r1, #1
   11984:	ldr	r0, [r0]
   11988:	str	r0, [sp, #144]	; 0x90
   1198c:	mov	r0, #0
   11990:	bl	110f8 <dcgettext@plt>
   11994:	mvn	r1, #0
   11998:	str	r0, [sp, #12]
   1199c:	ldr	r0, [sp, #144]	; 0x90
   119a0:	mov	r2, #0
   119a4:	mov	r3, #0
   119a8:	str	r9, [sp, #16]
   119ac:	str	r1, [sp]
   119b0:	str	r1, [sp, #4]
   119b4:	movw	r1, #56699	; 0xdd7b
   119b8:	movt	r1, #1
   119bc:	str	r1, [sp, #8]
   119c0:	bl	1c598 <__assert_fail@plt+0xb290>
   119c4:	movw	r2, #61824	; 0xf180
   119c8:	tst	r0, #7
   119cc:	movt	r2, #2
   119d0:	strd	r0, [r2]
   119d4:	movw	r1, #61816	; 0xf178
   119d8:	ldr	r0, [sp, #88]	; 0x58
   119dc:	movt	r1, #2
   119e0:	ldr	r1, [r1]
   119e4:	str	r1, [sp, #144]	; 0x90
   119e8:	beq	1185c <__assert_fail@plt+0x554>
   119ec:	b	12ef4 <__assert_fail@plt+0x1bec>
   119f0:	movw	r0, #61833	; 0xf189
   119f4:	movt	r0, #2
   119f8:	strb	r9, [r0]
   119fc:	movw	r0, #61832	; 0xf188
   11a00:	movt	r0, #2
   11a04:	strb	r9, [r0]
   11a08:	movw	r0, #61834	; 0xf18a
   11a0c:	movt	r0, #2
   11a10:	b	11a64 <__assert_fail@plt+0x75c>
   11a14:	ldr	r0, [sp, #88]	; 0x58
   11a18:	mov	r8, #0
   11a1c:	b	1185c <__assert_fail@plt+0x554>
   11a20:	movw	r0, #61836	; 0xf18c
   11a24:	movt	r0, #2
   11a28:	b	11a64 <__assert_fail@plt+0x75c>
   11a2c:	movw	r0, #61833	; 0xf189
   11a30:	mov	r1, #1
   11a34:	movt	r0, #2
   11a38:	strb	r9, [r0]
   11a3c:	movw	r0, #61832	; 0xf188
   11a40:	movt	r0, #2
   11a44:	strb	r1, [r0]
   11a48:	movw	r0, #61834	; 0xf18a
   11a4c:	movt	r0, #2
   11a50:	strb	r9, [r0]
   11a54:	ldr	r0, [sp, #88]	; 0x58
   11a58:	b	1185c <__assert_fail@plt+0x554>
   11a5c:	movw	r0, #61837	; 0xf18d
   11a60:	movt	r0, #2
   11a64:	mov	r1, #1
   11a68:	strb	r1, [r0]
   11a6c:	ldr	r0, [sp, #88]	; 0x58
   11a70:	b	1185c <__assert_fail@plt+0x554>
   11a74:	cmn	r0, #1
   11a78:	bne	12e88 <__assert_fail@plt+0x1b80>
   11a7c:	movw	r1, #61840	; 0xf190
   11a80:	mov	r0, #1
   11a84:	ldr	r3, [sp, #88]	; 0x58
   11a88:	movw	r2, #513	; 0x201
   11a8c:	movt	r1, #2
   11a90:	strb	r0, [r1]
   11a94:	movw	r0, #61824	; 0xf180
   11a98:	movt	r0, #2
   11a9c:	ldrd	r0, [r0]
   11aa0:	subs	r2, r0, r2
   11aa4:	sbcs	r2, r1, #0
   11aa8:	bcs	12f54 <__assert_fail@plt+0x1c4c>
   11aac:	orrs	r2, r0, r1
   11ab0:	beq	11ac0 <__assert_fail@plt+0x7b8>
   11ab4:	lsr	r0, r0, #2
   11ab8:	orr	r0, r0, r1, lsl #30
   11abc:	b	11ad8 <__assert_fail@plt+0x7d0>
   11ac0:	movw	r2, #61824	; 0xf180
   11ac4:	mov	r1, #0
   11ac8:	mov	r0, #512	; 0x200
   11acc:	movt	r2, #2
   11ad0:	strd	r0, [r2]
   11ad4:	mov	r0, #128	; 0x80
   11ad8:	movw	r1, #61844	; 0xf194
   11adc:	cmp	r8, #0
   11ae0:	movt	r1, #2
   11ae4:	str	r0, [r1]
   11ae8:	ldr	r0, [sp, #76]	; 0x4c
   11aec:	eor	r1, r0, #1
   11af0:	tsteq	r1, #1
   11af4:	beq	12fbc <__assert_fail@plt+0x1cb4>
   11af8:	eor	r0, r3, #1
   11afc:	tst	r0, #1
   11b00:	bne	11b18 <__assert_fail@plt+0x810>
   11b04:	movw	r2, #61837	; 0xf18d
   11b08:	movt	r2, #2
   11b0c:	ldrb	r2, [r2]
   11b10:	cmp	r2, #0
   11b14:	bne	12fc8 <__assert_fail@plt+0x1cc0>
   11b18:	orr	r1, r1, r0
   11b1c:	tst	r1, #1
   11b20:	beq	12fd4 <__assert_fail@plt+0x1ccc>
   11b24:	cmp	r8, #0
   11b28:	mov	r1, #0
   11b2c:	movwmi	r1, #1
   11b30:	orr	r1, r1, r0
   11b34:	tst	r1, #1
   11b38:	beq	12fe0 <__assert_fail@plt+0x1cd8>
   11b3c:	movw	r1, #61835	; 0xf18b
   11b40:	movt	r1, #2
   11b44:	ldrb	r1, [r1]
   11b48:	mvn	r1, r1
   11b4c:	orr	r1, r3, r1
   11b50:	tst	r1, #1
   11b54:	beq	12fec <__assert_fail@plt+0x1ce4>
   11b58:	movw	r1, #61832	; 0xf188
   11b5c:	movt	r1, #2
   11b60:	ldrb	r1, [r1]
   11b64:	mvn	r1, r1
   11b68:	orr	r1, r3, r1
   11b6c:	tst	r1, #1
   11b70:	beq	12ff8 <__assert_fail@plt+0x1cf0>
   11b74:	movw	r1, #61833	; 0xf189
   11b78:	movt	r1, #2
   11b7c:	ldrb	r1, [r1]
   11b80:	mvn	r1, r1
   11b84:	orr	r1, r3, r1
   11b88:	tst	r1, #1
   11b8c:	beq	13004 <__assert_fail@plt+0x1cfc>
   11b90:	movw	r1, #61834	; 0xf18a
   11b94:	movt	r1, #2
   11b98:	ldrb	r1, [r1]
   11b9c:	mvn	r1, r1
   11ba0:	orr	r1, r3, r1
   11ba4:	tst	r1, #1
   11ba8:	beq	13010 <__assert_fail@plt+0x1d08>
   11bac:	movw	r1, #61836	; 0xf18c
   11bb0:	movt	r1, #2
   11bb4:	ldrb	r1, [r1]
   11bb8:	and	r0, r1, r0
   11bbc:	tst	r0, #1
   11bc0:	bne	1301c <__assert_fail@plt+0x1d14>
   11bc4:	movw	r0, #61792	; 0xf160
   11bc8:	add	r2, r4, r5, lsl #2
   11bcc:	movt	r0, #2
   11bd0:	ldr	r0, [r0]
   11bd4:	cmp	r0, r5
   11bd8:	add	r0, r4, r0, lsl #2
   11bdc:	mov	r4, #1
   11be0:	movweq	r1, #59416	; 0xe818
   11be4:	movteq	r1, #1
   11be8:	streq	r1, [r2], #4
   11bec:	cmp	r0, r2
   11bf0:	bcs	12e10 <__assert_fail@plt+0x1b08>
   11bf4:	cmp	r8, #1
   11bf8:	sub	r7, fp, #116	; 0x74
   11bfc:	mov	r1, #42	; 0x2a
   11c00:	mov	r8, r3
   11c04:	mov	r3, r0
   11c08:	movw	r9, #58941	; 0xe63d
   11c0c:	mov	r5, #1
   11c10:	str	r2, [sp, #92]	; 0x5c
   11c14:	movwlt	r1, #32
   11c18:	add	r0, r7, #7
   11c1c:	movt	r9, #1
   11c20:	str	r1, [sp, #32]
   11c24:	and	r1, r0, #7
   11c28:	sub	r0, r0, r1
   11c2c:	str	r0, [sp, #20]
   11c30:	add	r0, sp, #148	; 0x94
   11c34:	sub	r0, r0, r6
   11c38:	add	r6, r0, #7
   11c3c:	sub	r0, r7, r1
   11c40:	add	r0, r0, #7
   11c44:	str	r6, [sp, #40]	; 0x28
   11c48:	str	r0, [sp, #24]
   11c4c:	mov	r0, r3
   11c50:	b	11cbc <__assert_fail@plt+0x9b4>
   11c54:	add	r2, r1, #1
   11c58:	str	r2, [r0, #20]
   11c5c:	ldr	r0, [sp, #32]
   11c60:	strb	r0, [r1]
   11c64:	mov	r0, r8
   11c68:	mov	r1, r4
   11c6c:	bl	13200 <__assert_fail@plt+0x1ef8>
   11c70:	movw	r0, #61812	; 0xf174
   11c74:	movt	r0, #2
   11c78:	ldr	r0, [r0]
   11c7c:	ldr	r1, [r0, #20]
   11c80:	ldr	r2, [r0, #24]
   11c84:	cmp	r1, r2
   11c88:	bcs	12dec <__assert_fail@plt+0x1ae4>
   11c8c:	add	r2, r1, #1
   11c90:	str	r2, [r0, #20]
   11c94:	ldr	r0, [sp, #144]	; 0x90
   11c98:	strb	r0, [r1]
   11c9c:	mov	r4, sl
   11ca0:	ldr	r2, [sp, #92]	; 0x5c
   11ca4:	ldr	r0, [sp, #112]	; 0x70
   11ca8:	ldr	r8, [sp, #88]	; 0x58
   11cac:	add	r0, r0, #4
   11cb0:	mov	r5, r4
   11cb4:	cmp	r0, r2
   11cb8:	bcs	12e10 <__assert_fail@plt+0x1b08>
   11cbc:	ldr	sl, [r0]
   11cc0:	tst	r8, #1
   11cc4:	str	r0, [sp, #112]	; 0x70
   11cc8:	beq	11d1c <__assert_fail@plt+0xa14>
   11ccc:	movw	r1, #59416	; 0xe818
   11cd0:	mov	r0, sl
   11cd4:	str	r5, [sp, #84]	; 0x54
   11cd8:	movt	r1, #1
   11cdc:	bl	1108c <strcmp@plt>
   11ce0:	mov	r4, r0
   11ce4:	cmp	r0, #0
   11ce8:	sub	r5, fp, #120	; 0x78
   11cec:	sub	r6, fp, #124	; 0x7c
   11cf0:	beq	11ef8 <__assert_fail@plt+0xbf0>
   11cf4:	movw	r1, #58922	; 0xe62a
   11cf8:	mov	r0, sl
   11cfc:	movt	r1, #1
   11d00:	bl	19940 <__assert_fail@plt+0x8638>
   11d04:	cmp	r0, #0
   11d08:	beq	12d5c <__assert_fail@plt+0x1a54>
   11d0c:	mov	r7, r0
   11d10:	str	r4, [sp, #80]	; 0x50
   11d14:	str	sl, [sp, #96]	; 0x60
   11d18:	b	11f30 <__assert_fail@plt+0xc28>
   11d1c:	ldr	r1, [sp, #68]	; 0x44
   11d20:	mov	r0, sl
   11d24:	sub	r2, fp, #116	; 0x74
   11d28:	bl	13074 <__assert_fail@plt+0x1d6c>
   11d2c:	movw	r7, #61844	; 0xf194
   11d30:	mov	r4, #0
   11d34:	cmp	r0, #0
   11d38:	movt	r7, #2
   11d3c:	beq	11ca0 <__assert_fail@plt+0x998>
   11d40:	movw	r0, #61837	; 0xf18d
   11d44:	mov	r4, #0
   11d48:	movt	r0, #2
   11d4c:	ldrb	r0, [r0]
   11d50:	cmp	r0, #0
   11d54:	mov	r0, #10
   11d58:	movwne	r0, #0
   11d5c:	str	r0, [sp, #144]	; 0x90
   11d60:	bne	11dd0 <__assert_fail@plt+0xac8>
   11d64:	mov	r0, sl
   11d68:	mov	r1, #92	; 0x5c
   11d6c:	bl	11200 <strchr@plt>
   11d70:	cmp	r0, #0
   11d74:	bne	11da0 <__assert_fail@plt+0xa98>
   11d78:	mov	r0, sl
   11d7c:	mov	r1, #10
   11d80:	bl	11200 <strchr@plt>
   11d84:	cmp	r0, #0
   11d88:	bne	11da0 <__assert_fail@plt+0xa98>
   11d8c:	mov	r0, sl
   11d90:	mov	r1, #13
   11d94:	bl	11200 <strchr@plt>
   11d98:	cmp	r0, #0
   11d9c:	beq	11dd0 <__assert_fail@plt+0xac8>
   11da0:	movw	r0, #61812	; 0xf174
   11da4:	movt	r0, #2
   11da8:	ldr	r0, [r0]
   11dac:	ldr	r1, [r0, #20]
   11db0:	ldr	r2, [r0, #24]
   11db4:	cmp	r1, r2
   11db8:	bcs	12e04 <__assert_fail@plt+0x1afc>
   11dbc:	add	r2, r1, #1
   11dc0:	str	r2, [r0, #20]
   11dc4:	mov	r0, #92	; 0x5c
   11dc8:	strb	r0, [r1]
   11dcc:	mov	r4, #1
   11dd0:	ldr	r0, [sp, #76]	; 0x4c
   11dd4:	mov	r8, sl
   11dd8:	mov	sl, r5
   11ddc:	tst	r0, #1
   11de0:	beq	11e64 <__assert_fail@plt+0xb5c>
   11de4:	movw	r0, #61812	; 0xf174
   11de8:	movt	r0, #2
   11dec:	ldr	r1, [r0]
   11df0:	movw	r0, #55755	; 0xd9cb
   11df4:	movt	r0, #1
   11df8:	bl	11068 <fputs_unlocked@plt>
   11dfc:	movw	r0, #61824	; 0xf180
   11e00:	movt	r0, #2
   11e04:	ldrd	r2, [r0]
   11e08:	lsr	r0, r2, #9
   11e0c:	orr	r0, r0, r3, lsl #23
   11e10:	orr	r0, r0, r3, lsr #9
   11e14:	cmp	r0, #0
   11e18:	bne	11e2c <__assert_fail@plt+0xb24>
   11e1c:	movw	r1, #58927	; 0xe62f
   11e20:	mov	r0, #1
   11e24:	movt	r1, #1
   11e28:	bl	1123c <__printf_chk@plt>
   11e2c:	movw	r0, #61812	; 0xf174
   11e30:	movt	r0, #2
   11e34:	ldr	r1, [r0]
   11e38:	mov	r5, r0
   11e3c:	movw	r0, #58933	; 0xe635
   11e40:	movt	r0, #1
   11e44:	bl	11068 <fputs_unlocked@plt>
   11e48:	mov	r0, r8
   11e4c:	mov	r1, r4
   11e50:	bl	13200 <__assert_fail@plt+0x1ef8>
   11e54:	ldr	r1, [r5]
   11e58:	movw	r0, #58936	; 0xe638
   11e5c:	movt	r0, #1
   11e60:	bl	11068 <fputs_unlocked@plt>
   11e64:	ldr	r0, [r7]
   11e68:	ldr	r5, [sp, #40]	; 0x28
   11e6c:	cmp	r0, #2
   11e70:	bcc	11e98 <__assert_fail@plt+0xb90>
   11e74:	mov	r6, #0
   11e78:	ldrb	r2, [r5, r6]
   11e7c:	mov	r0, #1
   11e80:	mov	r1, r9
   11e84:	bl	1123c <__printf_chk@plt>
   11e88:	ldr	r0, [r7]
   11e8c:	add	r6, r6, #1
   11e90:	cmp	r6, r0, lsr #1
   11e94:	bcc	11e78 <__assert_fail@plt+0xb70>
   11e98:	ldr	r0, [sp, #76]	; 0x4c
   11e9c:	tst	r0, #1
   11ea0:	bne	11c70 <__assert_fail@plt+0x968>
   11ea4:	movw	r0, #61812	; 0xf174
   11ea8:	movt	r0, #2
   11eac:	ldr	r0, [r0]
   11eb0:	ldr	r1, [r0, #20]
   11eb4:	ldr	r2, [r0, #24]
   11eb8:	cmp	r1, r2
   11ebc:	bcs	12df8 <__assert_fail@plt+0x1af0>
   11ec0:	add	r2, r1, #1
   11ec4:	str	r2, [r0, #20]
   11ec8:	mov	r0, #32
   11ecc:	strb	r0, [r1]
   11ed0:	movw	r0, #61812	; 0xf174
   11ed4:	movt	r0, #2
   11ed8:	ldr	r0, [r0]
   11edc:	ldr	r1, [r0, #20]
   11ee0:	ldr	r2, [r0, #24]
   11ee4:	cmp	r1, r2
   11ee8:	bcc	11c54 <__assert_fail@plt+0x94c>
   11eec:	ldr	r1, [sp, #32]
   11ef0:	bl	11284 <__overflow@plt>
   11ef4:	b	11c64 <__assert_fail@plt+0x95c>
   11ef8:	movw	r0, #61848	; 0xf198
   11efc:	mov	r1, #1
   11f00:	mov	r2, #5
   11f04:	str	r4, [sp, #80]	; 0x50
   11f08:	movt	r0, #2
   11f0c:	strb	r1, [r0]
   11f10:	movw	r1, #57918	; 0xe23e
   11f14:	mov	r0, #0
   11f18:	movt	r1, #1
   11f1c:	bl	110f8 <dcgettext@plt>
   11f20:	str	r0, [sp, #96]	; 0x60
   11f24:	movw	r0, #61808	; 0xf170
   11f28:	movt	r0, #2
   11f2c:	ldr	r7, [r0]
   11f30:	mov	r0, #0
   11f34:	mov	r1, #0
   11f38:	mov	sl, #0
   11f3c:	mov	r4, #0
   11f40:	mov	r9, #0
   11f44:	str	r7, [sp, #116]	; 0x74
   11f48:	str	r0, [sp, #44]	; 0x2c
   11f4c:	mov	r0, #0
   11f50:	str	r1, [fp, #-124]	; 0xffffff84
   11f54:	str	r1, [fp, #-120]	; 0xffffff88
   11f58:	str	r0, [sp, #64]	; 0x40
   11f5c:	mov	r0, #0
   11f60:	str	r0, [sp, #60]	; 0x3c
   11f64:	mov	r0, #0
   11f68:	str	r0, [sp, #56]	; 0x38
   11f6c:	mov	r0, #0
   11f70:	str	r0, [sp, #52]	; 0x34
   11f74:	mov	r0, #0
   11f78:	str	r0, [sp, #48]	; 0x30
   11f7c:	mov	r0, #0
   11f80:	str	r0, [sp, #140]	; 0x8c
   11f84:	mov	r0, #0
   11f88:	str	r0, [sp, #136]	; 0x88
   11f8c:	mov	r0, #0
   11f90:	str	r0, [sp, #132]	; 0x84
   11f94:	mov	r0, #0
   11f98:	str	r0, [sp, #128]	; 0x80
   11f9c:	b	11fd4 <__assert_fail@plt+0xccc>
   11fa0:	ldr	r0, [sp, #140]	; 0x8c
   11fa4:	ldr	r7, [sp, #116]	; 0x74
   11fa8:	mov	r9, #0
   11fac:	sub	r5, fp, #120	; 0x78
   11fb0:	sub	r6, fp, #124	; 0x7c
   11fb4:	adds	r0, r0, #1
   11fb8:	str	r0, [sp, #140]	; 0x8c
   11fbc:	ldr	r0, [sp, #136]	; 0x88
   11fc0:	adc	r0, r0, #0
   11fc4:	str	r0, [sp, #136]	; 0x88
   11fc8:	ldrb	r0, [r7]
   11fcc:	tst	r0, #48	; 0x30
   11fd0:	bne	12a58 <__assert_fail@plt+0x1750>
   11fd4:	adds	sl, sl, #1
   11fd8:	adcs	r4, r4, #0
   11fdc:	adc	r0, r9, #0
   11fe0:	cmp	r0, #1
   11fe4:	beq	12e4c <__assert_fail@plt+0x1b44>
   11fe8:	mov	r0, r5
   11fec:	mov	r1, r6
   11ff0:	mov	r2, #10
   11ff4:	mov	r3, r7
   11ff8:	bl	11080 <__getdelim@plt>
   11ffc:	cmp	r0, #1
   12000:	blt	12a58 <__assert_fail@plt+0x1750>
   12004:	mov	r8, r0
   12008:	ldr	r0, [fp, #-120]	; 0xffffff88
   1200c:	ldrb	r1, [r0]
   12010:	cmp	r1, #35	; 0x23
   12014:	beq	11fc8 <__assert_fail@plt+0xcc0>
   12018:	add	r1, r8, r0
   1201c:	str	r4, [sp, #144]	; 0x90
   12020:	mov	r4, r6
   12024:	mov	r6, r5
   12028:	ldrb	r1, [r1, #-1]
   1202c:	sub	r1, r1, #10
   12030:	clz	r1, r1
   12034:	lsr	r3, r1, #5
   12038:	sub	r1, r8, r3
   1203c:	cmp	r1, #0
   12040:	mov	r2, r1
   12044:	subgt	r2, r2, #1
   12048:	ldrb	r2, [r0, r2]
   1204c:	sub	r2, r2, #13
   12050:	clz	r2, r2
   12054:	lsr	r5, r2, #5
   12058:	subs	r2, r1, r5
   1205c:	beq	1224c <__assert_fail@plt+0xf44>
   12060:	mov	r7, #0
   12064:	movw	r1, #55755	; 0xd9cb
   12068:	strb	r7, [r0, r2]
   1206c:	movt	r1, #1
   12070:	ldr	r6, [fp, #-120]	; 0xffffff88
   12074:	b	1207c <__assert_fail@plt+0xd74>
   12078:	add	r7, r7, #1
   1207c:	ldrb	r0, [r6, r7]
   12080:	cmp	r0, #9
   12084:	cmpne	r0, #32
   12088:	beq	12078 <__assert_fail@plt+0xd70>
   1208c:	cmp	r0, #92	; 0x5c
   12090:	str	r5, [sp, #104]	; 0x68
   12094:	str	r2, [sp, #120]	; 0x78
   12098:	mov	r2, #7
   1209c:	str	r3, [sp, #108]	; 0x6c
   120a0:	mov	r4, r1
   120a4:	addeq	r7, r7, #1
   120a8:	movne	r0, #0
   120ac:	moveq	r0, #1
   120b0:	add	r5, r6, r7
   120b4:	str	r0, [sp, #100]	; 0x64
   120b8:	mov	r0, r5
   120bc:	bl	112d8 <strncmp@plt>
   120c0:	cmp	r0, #0
   120c4:	beq	1225c <__assert_fail@plt+0xf54>
   120c8:	movw	r0, #61840	; 0xf190
   120cc:	ldrb	r1, [r5]
   120d0:	str	r5, [sp, #124]	; 0x7c
   120d4:	movt	r0, #2
   120d8:	ldrb	r0, [r0]
   120dc:	sub	r1, r1, #92	; 0x5c
   120e0:	clz	r1, r1
   120e4:	lsr	r1, r1, #5
   120e8:	cmp	r0, #0
   120ec:	ldr	r0, [sp, #120]	; 0x78
   120f0:	addne	r1, r1, #3
   120f4:	sub	r0, r0, r7
   120f8:	cmp	r0, r1
   120fc:	bcc	12720 <__assert_fail@plt+0x1418>
   12100:	movw	r0, #61844	; 0xf194
   12104:	mov	r1, #0
   12108:	movt	r0, #2
   1210c:	str	r1, [r0]
   12110:	bl	111c4 <__ctype_b_loc@plt>
   12114:	ldr	r1, [sp, #124]	; 0x7c
   12118:	ldr	r3, [r0]
   1211c:	ldrb	r1, [r1]
   12120:	add	r1, r3, r1, lsl #1
   12124:	ldrb	r1, [r1, #1]
   12128:	tst	r1, #16
   1212c:	beq	12720 <__assert_fail@plt+0x1418>
   12130:	add	lr, r6, r7
   12134:	mov	r4, #0
   12138:	mov	r2, #0
   1213c:	add	r5, lr, #1
   12140:	ldrb	r1, [r5, r2]
   12144:	add	r4, r4, #4
   12148:	add	r2, r2, #1
   1214c:	add	r1, r3, r1, lsl #1
   12150:	ldrb	r1, [r1, #1]
   12154:	tst	r1, #16
   12158:	bne	12140 <__assert_fail@plt+0xe38>
   1215c:	movw	r1, #61844	; 0xf194
   12160:	cmp	r2, #2
   12164:	movt	r1, #2
   12168:	str	r2, [r1]
   1216c:	bcc	12720 <__assert_fail@plt+0x1418>
   12170:	cmp	r2, #128	; 0x80
   12174:	bhi	12720 <__assert_fail@plt+0x1418>
   12178:	ands	r1, r2, #1
   1217c:	bne	12720 <__assert_fail@plt+0x1418>
   12180:	movw	r1, #61824	; 0xf180
   12184:	mov	r3, #0
   12188:	movt	r1, #2
   1218c:	str	r4, [r1]
   12190:	str	r3, [r1, #4]
   12194:	mov	r3, lr
   12198:	ldrb	r5, [r3, r2]!
   1219c:	cmp	r5, #32
   121a0:	cmpne	r5, #9
   121a4:	bne	12720 <__assert_fail@plt+0x1418>
   121a8:	add	r1, r3, #1
   121ac:	mov	r4, #0
   121b0:	add	r3, r7, r2
   121b4:	strb	r4, [r1, #-1]
   121b8:	add	ip, r3, #1
   121bc:	ldr	r0, [r0]
   121c0:	ldr	r1, [sp, #124]	; 0x7c
   121c4:	ldrb	r1, [r1, r4]
   121c8:	add	r1, r0, r1, lsl #1
   121cc:	ldrb	r1, [r1, #1]
   121d0:	tst	r1, #16
   121d4:	beq	12720 <__assert_fail@plt+0x1418>
   121d8:	add	r4, r4, #1
   121dc:	cmp	r4, r2
   121e0:	bcc	121c0 <__assert_fail@plt+0xeb8>
   121e4:	ldr	r0, [sp, #124]	; 0x7c
   121e8:	ldrb	r0, [r0, r4]
   121ec:	cmp	r0, #0
   121f0:	bne	12720 <__assert_fail@plt+0x1418>
   121f4:	ldr	r0, [sp, #108]	; 0x6c
   121f8:	ldr	r1, [sp, #104]	; 0x68
   121fc:	add	r0, r0, r1
   12200:	sub	r0, r0, r8
   12204:	add	r0, r0, r7
   12208:	add	r0, r0, r2
   1220c:	cmn	r0, #2
   12210:	beq	125a4 <__assert_fail@plt+0x129c>
   12214:	add	r0, lr, r2
   12218:	ldrb	r0, [r0, #1]
   1221c:	cmp	r0, #32
   12220:	cmpne	r0, #42	; 0x2a
   12224:	bne	125a4 <__assert_fail@plt+0x129c>
   12228:	movw	r0, #61704	; 0xf108
   1222c:	movt	r0, #2
   12230:	ldr	r0, [r0]
   12234:	cmp	r0, #1
   12238:	beq	125c8 <__assert_fail@plt+0x12c0>
   1223c:	movw	r1, #61704	; 0xf108
   12240:	add	ip, r3, #2
   12244:	mov	r0, #0
   12248:	b	125c0 <__assert_fail@plt+0x12b8>
   1224c:	mov	r5, r6
   12250:	mov	r6, r4
   12254:	ldr	r4, [sp, #144]	; 0x90
   12258:	b	11fc8 <__assert_fail@plt+0xcc0>
   1225c:	mov	r1, r5
   12260:	add	r5, r7, #7
   12264:	mov	r0, #0
   12268:	ldrb	r9, [r6, r5]
   1226c:	strb	r0, [r6, r5]
   12270:	mov	r0, r1
   12274:	mov	r1, r4
   12278:	bl	1108c <strcmp@plt>
   1227c:	cmp	r0, #0
   12280:	bne	12720 <__assert_fail@plt+0x1418>
   12284:	cmp	r9, #40	; 0x28
   12288:	mov	r2, #512	; 0x200
   1228c:	mov	r1, #0
   12290:	moveq	r0, #40	; 0x28
   12294:	strbeq	r0, [r6, r5]
   12298:	movw	r0, #61824	; 0xf180
   1229c:	addne	r5, r7, #8
   122a0:	cmp	r9, #45	; 0x2d
   122a4:	movt	r0, #2
   122a8:	str	r2, [r0]
   122ac:	mov	r2, #128	; 0x80
   122b0:	str	r1, [r0, #4]
   122b4:	bne	12320 <__assert_fail@plt+0x1018>
   122b8:	str	r1, [sp]
   122bc:	add	r0, r6, r5
   122c0:	sub	r1, fp, #44	; 0x2c
   122c4:	mov	r2, #0
   122c8:	sub	r3, fp, #40	; 0x28
   122cc:	bl	1c5a0 <__assert_fail@plt+0xb298>
   122d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   122d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   122d8:	subs	r1, r2, #1
   122dc:	sbc	r7, r3, #0
   122e0:	tst	r2, #7
   122e4:	cmpeq	r0, #0
   122e8:	bne	12720 <__assert_fail@plt+0x1418>
   122ec:	movw	r0, #61824	; 0xf180
   122f0:	movt	r0, #2
   122f4:	ldm	r0, {r0, r5}
   122f8:	subs	r0, r1, r0
   122fc:	sbcs	r0, r7, r5
   12300:	bcs	12720 <__assert_fail@plt+0x1418>
   12304:	movw	r0, #61824	; 0xf180
   12308:	movt	r0, #2
   1230c:	strd	r2, [r0]
   12310:	lsr	r0, r2, #2
   12314:	orr	r2, r0, r3, lsl #30
   12318:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1231c:	sub	r5, r0, r6
   12320:	movw	r0, #61844	; 0xf194
   12324:	str	r2, [sp, #72]	; 0x48
   12328:	movt	r0, #2
   1232c:	str	r2, [r0]
   12330:	ldrb	r0, [r6, r5]
   12334:	sub	r0, r0, #32
   12338:	clz	r0, r0
   1233c:	lsr	r2, r0, #5
   12340:	add	r0, r5, r2
   12344:	ldrb	r1, [r6, r0]
   12348:	cmp	r1, #40	; 0x28
   1234c:	bne	12720 <__assert_fail@plt+0x1418>
   12350:	ldr	r1, [sp, #120]	; 0x78
   12354:	add	r0, r0, #1
   12358:	subs	r1, r1, r0
   1235c:	beq	12720 <__assert_fail@plt+0x1418>
   12360:	ldr	r3, [sp, #108]	; 0x6c
   12364:	ldr	r7, [sp, #104]	; 0x68
   12368:	add	r0, r6, r0
   1236c:	str	sl, [sp, #28]
   12370:	str	r0, [sp, #36]	; 0x24
   12374:	add	r1, r3, r7
   12378:	add	r3, r5, r3
   1237c:	sub	r0, r6, r1
   12380:	sub	r1, r8, r1
   12384:	add	r3, r3, r7
   12388:	add	r2, r3, r2
   1238c:	add	r1, r6, r1
   12390:	add	r6, r1, #2
   12394:	add	sl, r1, #1
   12398:	add	r3, r2, #2
   1239c:	add	r9, r2, #3
   123a0:	add	r7, r2, #1
   123a4:	mov	lr, r7
   123a8:	mov	r5, r9
   123ac:	mov	r2, r3
   123b0:	mov	r7, r0
   123b4:	mov	r1, sl
   123b8:	mov	r4, r6
   123bc:	cmp	r8, r3
   123c0:	beq	12428 <__assert_fail@plt+0x1120>
   123c4:	add	r0, r7, r8
   123c8:	sub	sl, r1, #1
   123cc:	add	r3, r2, #1
   123d0:	add	r9, r5, #1
   123d4:	mov	ip, r4
   123d8:	ldrb	r0, [r0, #-1]
   123dc:	str	r0, [sp, #124]	; 0x7c
   123e0:	sub	r0, r4, #1
   123e4:	mov	r4, r7
   123e8:	ldr	r6, [sp, #124]	; 0x7c
   123ec:	str	r0, [sp, #120]	; 0x78
   123f0:	sub	r0, r7, #1
   123f4:	add	r7, lr, #1
   123f8:	cmp	r6, #41	; 0x29
   123fc:	ldr	r6, [sp, #120]	; 0x78
   12400:	bne	123a4 <__assert_fail@plt+0x109c>
   12404:	str	lr, [sp, #120]	; 0x78
   12408:	ldr	sl, [sp, #28]
   1240c:	ldr	lr, [sp, #36]	; 0x24
   12410:	add	r9, r0, r8
   12414:	mov	r7, r4
   12418:	mov	r0, #0
   1241c:	mov	r4, ip
   12420:	str	r1, [sp, #124]	; 0x7c
   12424:	b	1244c <__assert_fail@plt+0x1144>
   12428:	str	lr, [sp, #120]	; 0x78
   1242c:	ldr	lr, [sp, #36]	; 0x24
   12430:	str	r1, [sp, #124]	; 0x7c
   12434:	ldr	sl, [sp, #28]
   12438:	mov	r0, #1
   1243c:	ldrb	r1, [lr]
   12440:	mov	r9, lr
   12444:	cmp	r1, #41	; 0x29
   12448:	bne	12720 <__assert_fail@plt+0x1418>
   1244c:	ldr	r1, [sp, #100]	; 0x64
   12450:	cmp	r1, #0
   12454:	beq	124f0 <__assert_fail@plt+0x11e8>
   12458:	cmp	r0, #0
   1245c:	mov	r0, lr
   12460:	bne	124e4 <__assert_fail@plt+0x11dc>
   12464:	sub	r2, r8, r2
   12468:	mov	r3, #0
   1246c:	mov	r0, lr
   12470:	b	1248c <__assert_fail@plt+0x1184>
   12474:	cmp	r1, #0
   12478:	beq	12720 <__assert_fail@plt+0x1418>
   1247c:	add	r3, r3, #1
   12480:	strb	r1, [r0], #1
   12484:	cmp	r3, r2
   12488:	bcs	124e4 <__assert_fail@plt+0x11dc>
   1248c:	ldrb	r1, [lr, r3]
   12490:	cmp	r1, #92	; 0x5c
   12494:	bne	12474 <__assert_fail@plt+0x116c>
   12498:	sub	r1, r8, r3
   1249c:	cmp	r1, r5
   124a0:	beq	12720 <__assert_fail@plt+0x1418>
   124a4:	add	r3, r3, #1
   124a8:	mov	r6, r5
   124ac:	ldrb	r5, [lr, r3]
   124b0:	cmp	r5, #92	; 0x5c
   124b4:	beq	124d8 <__assert_fail@plt+0x11d0>
   124b8:	mov	r1, #10
   124bc:	cmp	r5, #110	; 0x6e
   124c0:	beq	124dc <__assert_fail@plt+0x11d4>
   124c4:	cmp	r5, #114	; 0x72
   124c8:	bne	12720 <__assert_fail@plt+0x1418>
   124cc:	mov	r5, r6
   124d0:	mov	r1, #13
   124d4:	b	1247c <__assert_fail@plt+0x1174>
   124d8:	mov	r1, #92	; 0x5c
   124dc:	mov	r5, r6
   124e0:	b	1247c <__assert_fail@plt+0x1174>
   124e4:	cmp	r0, r9
   124e8:	movcc	r1, #0
   124ec:	strbcc	r1, [r0]
   124f0:	ldr	r0, [sp, #120]	; 0x78
   124f4:	ldr	ip, [sp, #124]	; 0x7c
   124f8:	mov	r1, #0
   124fc:	strb	r1, [r9]
   12500:	sub	r0, r8, r0
   12504:	b	12518 <__assert_fail@plt+0x1210>
   12508:	add	r4, r4, #1
   1250c:	add	ip, ip, #1
   12510:	add	r8, r8, #1
   12514:	add	r0, r0, #1
   12518:	ldrb	r1, [r7, r8]
   1251c:	cmp	r1, #9
   12520:	cmpne	r1, #32
   12524:	beq	12508 <__assert_fail@plt+0x1200>
   12528:	cmp	r1, #61	; 0x3d
   1252c:	str	ip, [sp, #124]	; 0x7c
   12530:	bne	12720 <__assert_fail@plt+0x1418>
   12534:	ldr	r0, [sp, #124]	; 0x7c
   12538:	ldrb	r7, [r0]
   1253c:	cmp	r7, #32
   12540:	cmpne	r7, #9
   12544:	bne	12558 <__assert_fail@plt+0x1250>
   12548:	add	r0, r0, #1
   1254c:	add	r4, r4, #1
   12550:	str	r0, [sp, #124]	; 0x7c
   12554:	b	12534 <__assert_fail@plt+0x122c>
   12558:	ldr	r0, [sp, #72]	; 0x48
   1255c:	cmp	r0, #0
   12560:	beq	12598 <__assert_fail@plt+0x1290>
   12564:	bl	111c4 <__ctype_b_loc@plt>
   12568:	ldr	lr, [sp, #36]	; 0x24
   1256c:	ldr	r0, [r0]
   12570:	uxtb	r1, r7
   12574:	add	r1, r0, r1, lsl #1
   12578:	ldrb	r1, [r1, #1]
   1257c:	tst	r1, #16
   12580:	beq	12720 <__assert_fail@plt+0x1418>
   12584:	ldr	r1, [sp, #72]	; 0x48
   12588:	ldrb	r7, [r4], #1
   1258c:	subs	r1, r1, #1
   12590:	str	r1, [sp, #72]	; 0x48
   12594:	bne	12570 <__assert_fail@plt+0x1268>
   12598:	cmp	r7, #0
   1259c:	bne	12720 <__assert_fail@plt+0x1418>
   125a0:	b	12674 <__assert_fail@plt+0x136c>
   125a4:	movw	r0, #61704	; 0xf108
   125a8:	movt	r0, #2
   125ac:	ldr	r0, [r0]
   125b0:	cmp	r0, #0
   125b4:	beq	12720 <__assert_fail@plt+0x1418>
   125b8:	movw	r1, #61704	; 0xf108
   125bc:	mov	r0, #1
   125c0:	movt	r1, #2
   125c4:	str	r0, [r1]
   125c8:	ldr	r0, [sp, #100]	; 0x64
   125cc:	add	lr, r6, ip
   125d0:	cmp	r0, #0
   125d4:	beq	12674 <__assert_fail@plt+0x136c>
   125d8:	ldr	r0, [sp, #120]	; 0x78
   125dc:	subs	r1, r0, ip
   125e0:	mov	r0, lr
   125e4:	beq	12658 <__assert_fail@plt+0x1350>
   125e8:	sub	r2, r1, #1
   125ec:	mov	r3, #0
   125f0:	mov	r0, lr
   125f4:	b	12610 <__assert_fail@plt+0x1308>
   125f8:	cmp	r7, #0
   125fc:	beq	12720 <__assert_fail@plt+0x1418>
   12600:	add	r3, r3, #1
   12604:	strb	r7, [r0], #1
   12608:	cmp	r3, r1
   1260c:	bcs	12658 <__assert_fail@plt+0x1350>
   12610:	ldrb	r7, [lr, r3]
   12614:	cmp	r7, #92	; 0x5c
   12618:	bne	125f8 <__assert_fail@plt+0x12f0>
   1261c:	cmp	r3, r2
   12620:	beq	12720 <__assert_fail@plt+0x1418>
   12624:	add	r3, r3, #1
   12628:	ldrb	r5, [lr, r3]
   1262c:	cmp	r5, #92	; 0x5c
   12630:	beq	12650 <__assert_fail@plt+0x1348>
   12634:	mov	r7, #10
   12638:	cmp	r5, #110	; 0x6e
   1263c:	beq	12600 <__assert_fail@plt+0x12f8>
   12640:	cmp	r5, #114	; 0x72
   12644:	bne	12720 <__assert_fail@plt+0x1418>
   12648:	mov	r7, #13
   1264c:	b	12600 <__assert_fail@plt+0x12f8>
   12650:	mov	r7, #92	; 0x5c
   12654:	b	12600 <__assert_fail@plt+0x12f8>
   12658:	ldr	r1, [sp, #120]	; 0x78
   1265c:	add	r1, r6, r1
   12660:	cmp	r0, r1
   12664:	movcc	r1, #0
   12668:	strbcc	r1, [r0]
   1266c:	cmp	lr, #0
   12670:	beq	12720 <__assert_fail@plt+0x1418>
   12674:	ldr	r0, [sp, #80]	; 0x50
   12678:	str	lr, [sp, #36]	; 0x24
   1267c:	cmp	r0, #0
   12680:	bne	126a0 <__assert_fail@plt+0x1398>
   12684:	movw	r1, #59416	; 0xe818
   12688:	mov	r0, lr
   1268c:	movt	r1, #1
   12690:	bl	1108c <strcmp@plt>
   12694:	ldr	lr, [sp, #36]	; 0x24
   12698:	cmp	r0, #0
   1269c:	beq	12720 <__assert_fail@plt+0x1418>
   126a0:	movw	r0, #61832	; 0xf188
   126a4:	mov	r8, #0
   126a8:	movt	r0, #2
   126ac:	ldrb	r0, [r0]
   126b0:	cmp	r0, #0
   126b4:	bne	126d4 <__assert_fail@plt+0x13cc>
   126b8:	mov	r0, lr
   126bc:	mov	r1, #10
   126c0:	bl	11200 <strchr@plt>
   126c4:	ldr	lr, [sp, #36]	; 0x24
   126c8:	cmp	r0, #0
   126cc:	mov	r8, r0
   126d0:	movwne	r8, #1
   126d4:	ldr	r1, [sp, #20]
   126d8:	mov	r0, lr
   126dc:	sub	r2, fp, #40	; 0x28
   126e0:	bl	13074 <__assert_fail@plt+0x1d6c>
   126e4:	cmp	r0, #0
   126e8:	mov	r9, #0
   126ec:	sub	r5, fp, #120	; 0x78
   126f0:	sub	r6, fp, #124	; 0x7c
   126f4:	beq	127a4 <__assert_fail@plt+0x149c>
   126f8:	ldrb	r0, [fp, #-40]	; 0xffffffd8
   126fc:	cmp	r0, #0
   12700:	beq	12848 <__assert_fail@plt+0x1540>
   12704:	movw	r0, #61835	; 0xf18b
   12708:	movt	r0, #2
   1270c:	ldrb	r0, [r0]
   12710:	cmp	r0, #0
   12714:	beq	12848 <__assert_fail@plt+0x1540>
   12718:	ldr	r7, [sp, #116]	; 0x74
   1271c:	b	129c8 <__assert_fail@plt+0x16c0>
   12720:	ldr	r0, [sp, #132]	; 0x84
   12724:	ldr	r4, [sp, #144]	; 0x90
   12728:	adds	r0, r0, #1
   1272c:	str	r0, [sp, #132]	; 0x84
   12730:	ldr	r0, [sp, #128]	; 0x80
   12734:	adc	r0, r0, #0
   12738:	str	r0, [sp, #128]	; 0x80
   1273c:	movw	r0, #61833	; 0xf189
   12740:	movt	r0, #2
   12744:	ldrb	r0, [r0]
   12748:	cmp	r0, #1
   1274c:	bne	11fa0 <__assert_fail@plt+0xc98>
   12750:	movw	r1, #58483	; 0xe473
   12754:	mov	r0, #0
   12758:	mov	r2, #5
   1275c:	movt	r1, #1
   12760:	bl	110f8 <dcgettext@plt>
   12764:	ldr	r2, [sp, #96]	; 0x60
   12768:	mov	r6, r0
   1276c:	mov	r0, #0
   12770:	mov	r1, #3
   12774:	bl	1b468 <__assert_fail@plt+0xa160>
   12778:	mov	r3, r0
   1277c:	movw	r0, #55755	; 0xd9cb
   12780:	mov	r1, #0
   12784:	mov	r2, r6
   12788:	str	sl, [sp]
   1278c:	str	r4, [sp, #4]
   12790:	movt	r0, #1
   12794:	str	r0, [sp, #8]
   12798:	mov	r0, #0
   1279c:	bl	11170 <error@plt>
   127a0:	b	11fa0 <__assert_fail@plt+0xc98>
   127a4:	ldr	r0, [sp, #60]	; 0x3c
   127a8:	ldr	r7, [sp, #116]	; 0x74
   127ac:	adds	r0, r0, #1
   127b0:	str	r0, [sp, #60]	; 0x3c
   127b4:	ldr	r0, [sp, #56]	; 0x38
   127b8:	adc	r0, r0, #0
   127bc:	str	r0, [sp, #56]	; 0x38
   127c0:	movw	r0, #61832	; 0xf188
   127c4:	movt	r0, #2
   127c8:	ldrb	r0, [r0]
   127cc:	cmp	r0, #0
   127d0:	bne	129c8 <__assert_fail@plt+0x16c0>
   127d4:	ldr	r3, [sp, #36]	; 0x24
   127d8:	ldr	r4, [sp, #144]	; 0x90
   127dc:	cmp	r8, #0
   127e0:	beq	12810 <__assert_fail@plt+0x1508>
   127e4:	movw	r0, #61812	; 0xf174
   127e8:	movt	r0, #2
   127ec:	ldr	r0, [r0]
   127f0:	ldr	r1, [r0, #20]
   127f4:	ldr	r2, [r0, #24]
   127f8:	cmp	r1, r2
   127fc:	bcs	12a38 <__assert_fail@plt+0x1730>
   12800:	add	r2, r1, #1
   12804:	str	r2, [r0, #20]
   12808:	mov	r0, #92	; 0x5c
   1280c:	strb	r0, [r1]
   12810:	mov	r0, r3
   12814:	mov	r1, r8
   12818:	bl	13200 <__assert_fail@plt+0x1ef8>
   1281c:	movw	r1, #58531	; 0xe4a3
   12820:	mov	r0, #0
   12824:	mov	r2, #5
   12828:	movt	r1, #1
   1282c:	bl	110f8 <dcgettext@plt>
   12830:	movw	r1, #60221	; 0xeb3d
   12834:	mov	r2, r0
   12838:	mov	r0, #1
   1283c:	movt	r1, #1
   12840:	bl	1123c <__printf_chk@plt>
   12844:	b	129cc <__assert_fail@plt+0x16c4>
   12848:	movw	r0, #61844	; 0xf194
   1284c:	mov	r7, #0
   12850:	movt	r0, #2
   12854:	ldr	r0, [r0]
   12858:	cmp	r7, r0, lsr #1
   1285c:	lsr	r6, r0, #1
   12860:	beq	128c0 <__assert_fail@plt+0x15b8>
   12864:	bl	111a0 <__ctype_tolower_loc@plt>
   12868:	ldr	r0, [r0]
   1286c:	movw	r5, #59232	; 0xe760
   12870:	mov	r7, #0
   12874:	movt	r5, #1
   12878:	ldr	r1, [sp, #24]
   1287c:	ldr	r4, [sp, #124]	; 0x7c
   12880:	ldrb	r3, [r4, r7, lsl #1]
   12884:	ldrb	r1, [r1, r7]
   12888:	ldrb	r2, [r5, r1, lsr #4]
   1288c:	ldr	r3, [r0, r3, lsl #2]
   12890:	cmp	r3, r2
   12894:	addeq	r2, r4, r7, lsl #1
   12898:	andeq	r1, r1, #15
   1289c:	ldrbeq	r1, [r5, r1]
   128a0:	ldrbeq	r2, [r2, #1]
   128a4:	ldreq	r2, [r0, r2, lsl #2]
   128a8:	cmpeq	r2, r1
   128ac:	bne	128c0 <__assert_fail@plt+0x15b8>
   128b0:	add	r7, r7, #1
   128b4:	cmp	r6, r7
   128b8:	bne	12878 <__assert_fail@plt+0x1570>
   128bc:	mov	r7, r6
   128c0:	movw	r2, #61832	; 0xf188
   128c4:	ldr	r0, [sp, #52]	; 0x34
   128c8:	ldr	r1, [sp, #48]	; 0x30
   128cc:	movt	r2, #2
   128d0:	ldrb	r2, [r2]
   128d4:	adds	r5, r0, #1
   128d8:	adc	r4, r1, #0
   128dc:	cmp	r7, r6
   128e0:	movne	r0, r5
   128e4:	movne	r1, r4
   128e8:	cmp	r2, #0
   128ec:	beq	12914 <__assert_fail@plt+0x160c>
   128f0:	ldr	r3, [sp, #44]	; 0x2c
   128f4:	sub	r2, r7, r6
   128f8:	str	r0, [sp, #52]	; 0x34
   128fc:	str	r1, [sp, #48]	; 0x30
   12900:	clz	r2, r2
   12904:	lsr	r2, r2, #5
   12908:	orr	r3, r3, r2
   1290c:	str	r3, [sp, #44]	; 0x2c
   12910:	b	129b8 <__assert_fail@plt+0x16b0>
   12914:	cmp	r7, r6
   12918:	bne	1293c <__assert_fail@plt+0x1634>
   1291c:	movw	r0, #61834	; 0xf18a
   12920:	movt	r0, #2
   12924:	ldrb	r0, [r0]
   12928:	cmp	r0, #0
   1292c:	beq	1293c <__assert_fail@plt+0x1634>
   12930:	mov	r0, #1
   12934:	str	r0, [sp, #44]	; 0x2c
   12938:	b	129b8 <__assert_fail@plt+0x16b0>
   1293c:	ldr	r3, [sp, #36]	; 0x24
   12940:	cmp	r8, #0
   12944:	beq	12974 <__assert_fail@plt+0x166c>
   12948:	movw	r0, #61812	; 0xf174
   1294c:	movt	r0, #2
   12950:	ldr	r0, [r0]
   12954:	ldr	r1, [r0, #20]
   12958:	ldr	r2, [r0, #24]
   1295c:	cmp	r1, r2
   12960:	bcs	12a48 <__assert_fail@plt+0x1740>
   12964:	add	r2, r1, #1
   12968:	str	r2, [r0, #20]
   1296c:	mov	r0, #92	; 0x5c
   12970:	strb	r0, [r1]
   12974:	mov	r0, r3
   12978:	mov	r1, r8
   1297c:	bl	13200 <__assert_fail@plt+0x1ef8>
   12980:	cmp	r7, r6
   12984:	beq	129d8 <__assert_fail@plt+0x16d0>
   12988:	movw	r1, #58551	; 0xe4b7
   1298c:	mov	r0, #0
   12990:	mov	r2, #5
   12994:	movt	r1, #1
   12998:	bl	110f8 <dcgettext@plt>
   1299c:	movw	r1, #60221	; 0xeb3d
   129a0:	mov	r2, r0
   129a4:	mov	r0, #1
   129a8:	movt	r1, #1
   129ac:	bl	1123c <__printf_chk@plt>
   129b0:	str	r5, [sp, #52]	; 0x34
   129b4:	str	r4, [sp, #48]	; 0x30
   129b8:	ldr	r7, [sp, #116]	; 0x74
   129bc:	mov	r9, #0
   129c0:	sub	r5, fp, #120	; 0x78
   129c4:	sub	r6, fp, #124	; 0x7c
   129c8:	ldr	r4, [sp, #144]	; 0x90
   129cc:	mov	r0, #1
   129d0:	str	r0, [sp, #64]	; 0x40
   129d4:	b	11fc8 <__assert_fail@plt+0xcc0>
   129d8:	movw	r0, #61834	; 0xf18a
   129dc:	ldr	r7, [sp, #116]	; 0x74
   129e0:	mov	r1, #1
   129e4:	sub	r5, fp, #120	; 0x78
   129e8:	sub	r6, fp, #124	; 0x7c
   129ec:	movt	r0, #2
   129f0:	str	r1, [sp, #44]	; 0x2c
   129f4:	ldrb	r0, [r0]
   129f8:	cmp	r0, #0
   129fc:	bne	12a30 <__assert_fail@plt+0x1728>
   12a00:	movw	r1, #58558	; 0xe4be
   12a04:	mov	r0, #0
   12a08:	mov	r2, #5
   12a0c:	movt	r1, #1
   12a10:	bl	110f8 <dcgettext@plt>
   12a14:	movw	r1, #60221	; 0xeb3d
   12a18:	mov	r2, r0
   12a1c:	mov	r0, #1
   12a20:	movt	r1, #1
   12a24:	str	r0, [sp, #44]	; 0x2c
   12a28:	mov	r0, #1
   12a2c:	bl	1123c <__printf_chk@plt>
   12a30:	mov	r9, #0
   12a34:	b	129c8 <__assert_fail@plt+0x16c0>
   12a38:	mov	r1, #92	; 0x5c
   12a3c:	bl	11284 <__overflow@plt>
   12a40:	ldr	r3, [sp, #36]	; 0x24
   12a44:	b	12810 <__assert_fail@plt+0x1508>
   12a48:	mov	r1, #92	; 0x5c
   12a4c:	bl	11284 <__overflow@plt>
   12a50:	ldr	r3, [sp, #36]	; 0x24
   12a54:	b	12974 <__assert_fail@plt+0x166c>
   12a58:	ldr	r0, [fp, #-120]	; 0xffffff88
   12a5c:	bl	199f0 <__assert_fail@plt+0x86e8>
   12a60:	ldr	r0, [r7]
   12a64:	mov	r6, #0
   12a68:	ands	r4, r0, #32
   12a6c:	ldr	r0, [sp, #80]	; 0x50
   12a70:	mvneq	r6, #0
   12a74:	cmp	r0, #0
   12a78:	beq	12af4 <__assert_fail@plt+0x17ec>
   12a7c:	mov	r0, r7
   12a80:	bl	19848 <__assert_fail@plt+0x8540>
   12a84:	ldr	r8, [sp, #88]	; 0x58
   12a88:	ldr	r7, [sp, #96]	; 0x60
   12a8c:	cmp	r4, #0
   12a90:	bne	12aa4 <__assert_fail@plt+0x179c>
   12a94:	cmp	r0, #0
   12a98:	beq	12aa4 <__assert_fail@plt+0x179c>
   12a9c:	bl	1120c <__errno_location@plt>
   12aa0:	ldr	r6, [r0]
   12aa4:	cmp	r6, #0
   12aa8:	bmi	12b0c <__assert_fail@plt+0x1804>
   12aac:	movw	r4, #57254	; 0xdfa6
   12ab0:	movt	r4, #1
   12ab4:	bne	12ad0 <__assert_fail@plt+0x17c8>
   12ab8:	movw	r1, #58561	; 0xe4c1
   12abc:	mov	r0, #0
   12ac0:	mov	r2, #5
   12ac4:	movt	r1, #1
   12ac8:	bl	110f8 <dcgettext@plt>
   12acc:	mov	r4, r0
   12ad0:	mov	r0, #0
   12ad4:	mov	r1, #3
   12ad8:	mov	r2, r7
   12adc:	mov	r5, #0
   12ae0:	bl	1b468 <__assert_fail@plt+0xa160>
   12ae4:	mov	r3, r0
   12ae8:	mov	r0, #0
   12aec:	mov	r1, r6
   12af0:	b	12dc8 <__assert_fail@plt+0x1ac0>
   12af4:	mov	r0, r7
   12af8:	bl	112b4 <clearerr_unlocked@plt>
   12afc:	ldr	r8, [sp, #88]	; 0x58
   12b00:	ldr	r7, [sp, #96]	; 0x60
   12b04:	cmp	r6, #0
   12b08:	bpl	12aac <__assert_fail@plt+0x17a4>
   12b0c:	ldr	r0, [sp, #64]	; 0x40
   12b10:	tst	r0, #1
   12b14:	beq	12d90 <__assert_fail@plt+0x1a88>
   12b18:	movw	r0, #61832	; 0xf188
   12b1c:	ldr	r2, [sp, #92]	; 0x5c
   12b20:	movt	r0, #2
   12b24:	ldrb	r0, [r0]
   12b28:	cmp	r0, #0
   12b2c:	bne	12cf8 <__assert_fail@plt+0x19f0>
   12b30:	ldr	r5, [sp, #132]	; 0x84
   12b34:	ldr	r1, [sp, #128]	; 0x80
   12b38:	orrs	r0, r5, r1
   12b3c:	beq	12ba8 <__assert_fail@plt+0x18a0>
   12b40:	cmp	r1, #0
   12b44:	mov	r3, r5
   12b48:	mov	r6, r1
   12b4c:	beq	12b70 <__assert_fail@plt+0x1868>
   12b50:	movw	r4, #16960	; 0x4240
   12b54:	mov	r0, r5
   12b58:	mov	r1, r6
   12b5c:	mov	r3, #0
   12b60:	movt	r4, #15
   12b64:	mov	r2, r4
   12b68:	bl	1d760 <__assert_fail@plt+0xc458>
   12b6c:	add	r3, r2, r4
   12b70:	movw	r1, #58623	; 0xe4ff
   12b74:	movw	r2, #58666	; 0xe52a
   12b78:	mov	r0, #5
   12b7c:	movt	r1, #1
   12b80:	movt	r2, #1
   12b84:	str	r0, [sp]
   12b88:	mov	r0, #0
   12b8c:	bl	112fc <dcngettext@plt>
   12b90:	mov	r2, r0
   12b94:	mov	r0, #0
   12b98:	mov	r1, #0
   12b9c:	stm	sp, {r5, r6}
   12ba0:	bl	11170 <error@plt>
   12ba4:	ldr	r2, [sp, #92]	; 0x5c
   12ba8:	ldr	r5, [sp, #60]	; 0x3c
   12bac:	ldr	r1, [sp, #56]	; 0x38
   12bb0:	orrs	r0, r5, r1
   12bb4:	beq	12c20 <__assert_fail@plt+0x1918>
   12bb8:	cmp	r1, #0
   12bbc:	mov	r3, r5
   12bc0:	mov	r6, r1
   12bc4:	beq	12be8 <__assert_fail@plt+0x18e0>
   12bc8:	movw	r4, #16960	; 0x4240
   12bcc:	mov	r0, r5
   12bd0:	mov	r1, r6
   12bd4:	mov	r3, #0
   12bd8:	movt	r4, #15
   12bdc:	mov	r2, r4
   12be0:	bl	1d760 <__assert_fail@plt+0xc458>
   12be4:	add	r3, r2, r4
   12be8:	movw	r1, #58711	; 0xe557
   12bec:	movw	r2, #58755	; 0xe583
   12bf0:	mov	r0, #5
   12bf4:	movt	r1, #1
   12bf8:	movt	r2, #1
   12bfc:	str	r0, [sp]
   12c00:	mov	r0, #0
   12c04:	bl	112fc <dcngettext@plt>
   12c08:	mov	r2, r0
   12c0c:	mov	r0, #0
   12c10:	mov	r1, #0
   12c14:	stm	sp, {r5, r6}
   12c18:	bl	11170 <error@plt>
   12c1c:	ldr	r2, [sp, #92]	; 0x5c
   12c20:	ldr	r5, [sp, #52]	; 0x34
   12c24:	ldr	r1, [sp, #48]	; 0x30
   12c28:	orrs	r0, r5, r1
   12c2c:	beq	12c98 <__assert_fail@plt+0x1990>
   12c30:	cmp	r1, #0
   12c34:	mov	r3, r5
   12c38:	mov	r6, r1
   12c3c:	beq	12c60 <__assert_fail@plt+0x1958>
   12c40:	movw	r4, #16960	; 0x4240
   12c44:	mov	r0, r5
   12c48:	mov	r1, r6
   12c4c:	mov	r3, #0
   12c50:	movt	r4, #15
   12c54:	mov	r2, r4
   12c58:	bl	1d760 <__assert_fail@plt+0xc458>
   12c5c:	add	r3, r2, r4
   12c60:	movw	r1, #58800	; 0xe5b0
   12c64:	movw	r2, #58846	; 0xe5de
   12c68:	mov	r0, #5
   12c6c:	movt	r1, #1
   12c70:	movt	r2, #1
   12c74:	str	r0, [sp]
   12c78:	mov	r0, #0
   12c7c:	bl	112fc <dcngettext@plt>
   12c80:	mov	r2, r0
   12c84:	mov	r0, #0
   12c88:	mov	r1, #0
   12c8c:	stm	sp, {r5, r6}
   12c90:	bl	11170 <error@plt>
   12c94:	ldr	r2, [sp, #92]	; 0x5c
   12c98:	movw	r0, #61835	; 0xf18b
   12c9c:	ldr	r1, [sp, #44]	; 0x2c
   12ca0:	movt	r0, #2
   12ca4:	ldrb	r0, [r0]
   12ca8:	mvn	r0, r0
   12cac:	orr	r0, r1, r0
   12cb0:	tst	r0, #1
   12cb4:	bne	12cf8 <__assert_fail@plt+0x19f0>
   12cb8:	movw	r1, #58893	; 0xe60d
   12cbc:	mov	r0, #0
   12cc0:	mov	r2, #5
   12cc4:	movt	r1, #1
   12cc8:	bl	110f8 <dcgettext@plt>
   12ccc:	mov	r4, r0
   12cd0:	mov	r0, #0
   12cd4:	mov	r1, #3
   12cd8:	mov	r2, r7
   12cdc:	bl	1b468 <__assert_fail@plt+0xa160>
   12ce0:	mov	r3, r0
   12ce4:	mov	r0, #0
   12ce8:	mov	r1, #0
   12cec:	mov	r2, r4
   12cf0:	bl	11170 <error@plt>
   12cf4:	ldr	r2, [sp, #92]	; 0x5c
   12cf8:	ldr	r0, [sp, #60]	; 0x3c
   12cfc:	ldr	r1, [sp, #52]	; 0x34
   12d00:	ldr	r3, [sp, #48]	; 0x30
   12d04:	mov	r5, #0
   12d08:	orr	r0, r0, r1
   12d0c:	ldr	r1, [sp, #56]	; 0x38
   12d10:	orr	r1, r1, r3
   12d14:	orrs	r0, r0, r1
   12d18:	ldr	r1, [sp, #44]	; 0x2c
   12d1c:	movwne	r0, #1
   12d20:	mvn	r1, r1
   12d24:	orr	r0, r1, r0
   12d28:	tst	r0, #1
   12d2c:	bne	12dd4 <__assert_fail@plt+0x1acc>
   12d30:	ldr	r0, [sp, #140]	; 0x8c
   12d34:	ldr	r1, [sp, #136]	; 0x88
   12d38:	orr	r0, r0, r1
   12d3c:	movw	r1, #61836	; 0xf18c
   12d40:	movt	r1, #2
   12d44:	clz	r0, r0
   12d48:	lsr	r0, r0, #5
   12d4c:	ldrb	r1, [r1]
   12d50:	eor	r1, r1, #1
   12d54:	orr	r5, r0, r1
   12d58:	b	12dd4 <__assert_fail@plt+0x1acc>
   12d5c:	bl	1120c <__errno_location@plt>
   12d60:	ldr	r4, [r0]
   12d64:	mov	r0, #0
   12d68:	mov	r1, #3
   12d6c:	mov	r2, sl
   12d70:	mov	r5, #0
   12d74:	bl	1b468 <__assert_fail@plt+0xa160>
   12d78:	movw	r2, #57254	; 0xdfa6
   12d7c:	mov	r3, r0
   12d80:	mov	r0, #0
   12d84:	mov	r1, r4
   12d88:	movt	r2, #1
   12d8c:	b	12dcc <__assert_fail@plt+0x1ac4>
   12d90:	movw	r1, #58576	; 0xe4d0
   12d94:	mov	r0, #0
   12d98:	mov	r2, #5
   12d9c:	mov	r5, #0
   12da0:	movt	r1, #1
   12da4:	bl	110f8 <dcgettext@plt>
   12da8:	mov	r4, r0
   12dac:	mov	r0, #0
   12db0:	mov	r1, #3
   12db4:	mov	r2, r7
   12db8:	bl	1b468 <__assert_fail@plt+0xa160>
   12dbc:	mov	r3, r0
   12dc0:	mov	r0, #0
   12dc4:	mov	r1, #0
   12dc8:	mov	r2, r4
   12dcc:	bl	11170 <error@plt>
   12dd0:	ldr	r2, [sp, #92]	; 0x5c
   12dd4:	ldr	r0, [sp, #84]	; 0x54
   12dd8:	movw	r9, #58941	; 0xe63d
   12ddc:	movt	r9, #1
   12de0:	and	r4, r0, r5
   12de4:	ldr	r0, [sp, #112]	; 0x70
   12de8:	b	11cac <__assert_fail@plt+0x9a4>
   12dec:	ldr	r1, [sp, #144]	; 0x90
   12df0:	bl	11284 <__overflow@plt>
   12df4:	b	11c9c <__assert_fail@plt+0x994>
   12df8:	mov	r1, #32
   12dfc:	bl	11284 <__overflow@plt>
   12e00:	b	11ed0 <__assert_fail@plt+0xbc8>
   12e04:	mov	r1, #92	; 0x5c
   12e08:	bl	11284 <__overflow@plt>
   12e0c:	b	11dcc <__assert_fail@plt+0xac4>
   12e10:	movw	r0, #61848	; 0xf198
   12e14:	movt	r0, #2
   12e18:	ldrb	r0, [r0]
   12e1c:	cmp	r0, #0
   12e20:	beq	12e3c <__assert_fail@plt+0x1b34>
   12e24:	movw	r0, #61808	; 0xf170
   12e28:	movt	r0, #2
   12e2c:	ldr	r0, [r0]
   12e30:	bl	19848 <__assert_fail@plt+0x8540>
   12e34:	cmn	r0, #1
   12e38:	beq	13048 <__assert_fail@plt+0x1d40>
   12e3c:	mov	r0, #1
   12e40:	bic	r0, r0, r4
   12e44:	sub	sp, fp, #28
   12e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e4c:	movw	r1, #58455	; 0xe457
   12e50:	mov	r0, #0
   12e54:	mov	r2, #5
   12e58:	movt	r1, #1
   12e5c:	bl	110f8 <dcgettext@plt>
   12e60:	ldr	r2, [sp, #96]	; 0x60
   12e64:	mov	r4, r0
   12e68:	mov	r0, #0
   12e6c:	mov	r1, #3
   12e70:	bl	1b468 <__assert_fail@plt+0xa160>
   12e74:	mov	r3, r0
   12e78:	mov	r0, #1
   12e7c:	mov	r1, #0
   12e80:	mov	r2, r4
   12e84:	bl	11170 <error@plt>
   12e88:	cmn	r0, #3
   12e8c:	bne	12ee4 <__assert_fail@plt+0x1bdc>
   12e90:	movw	r0, #61708	; 0xf10c
   12e94:	movw	r2, #57315	; 0xdfe3
   12e98:	mov	r1, #0
   12e9c:	movw	r7, #57301	; 0xdfd5
   12ea0:	movt	r0, #2
   12ea4:	movt	r2, #1
   12ea8:	str	r1, [sp, #8]
   12eac:	movw	r1, #57185	; 0xdf61
   12eb0:	movt	r7, #1
   12eb4:	movt	r1, #1
   12eb8:	ldr	r3, [r0]
   12ebc:	movw	r0, #61812	; 0xf174
   12ec0:	str	r2, [sp, #4]
   12ec4:	movw	r2, #57287	; 0xdfc7
   12ec8:	str	r7, [sp]
   12ecc:	movt	r0, #2
   12ed0:	movt	r2, #1
   12ed4:	ldr	r0, [r0]
   12ed8:	bl	1bcf0 <__assert_fail@plt+0xa9e8>
   12edc:	mov	r0, #0
   12ee0:	bl	111d0 <exit@plt>
   12ee4:	cmn	r0, #2
   12ee8:	bne	12f4c <__assert_fail@plt+0x1c44>
   12eec:	mov	r0, #0
   12ef0:	bl	11410 <__assert_fail@plt+0x108>
   12ef4:	movw	r1, #57238	; 0xdf96
   12ef8:	mov	r0, #0
   12efc:	mov	r2, #5
   12f00:	movt	r1, #1
   12f04:	bl	110f8 <dcgettext@plt>
   12f08:	mov	r4, r0
   12f0c:	ldr	r0, [sp, #144]	; 0x90
   12f10:	bl	1b714 <__assert_fail@plt+0xa40c>
   12f14:	mov	r3, r0
   12f18:	mov	r0, #0
   12f1c:	mov	r1, #0
   12f20:	mov	r2, r4
   12f24:	bl	11170 <error@plt>
   12f28:	movw	r1, #57257	; 0xdfa9
   12f2c:	mov	r0, #0
   12f30:	mov	r2, #5
   12f34:	movt	r1, #1
   12f38:	bl	110f8 <dcgettext@plt>
   12f3c:	mov	r2, r0
   12f40:	mov	r0, #1
   12f44:	mov	r1, #0
   12f48:	bl	11170 <error@plt>
   12f4c:	mov	r0, #1
   12f50:	bl	11410 <__assert_fail@plt+0x108>
   12f54:	movw	r1, #57238	; 0xdf96
   12f58:	mov	r0, #0
   12f5c:	mov	r2, #5
   12f60:	movt	r1, #1
   12f64:	bl	110f8 <dcgettext@plt>
   12f68:	mov	r4, r0
   12f6c:	ldr	r0, [sp, #144]	; 0x90
   12f70:	bl	1b714 <__assert_fail@plt+0xa40c>
   12f74:	mov	r3, r0
   12f78:	mov	r0, #0
   12f7c:	mov	r1, #0
   12f80:	mov	r2, r4
   12f84:	bl	11170 <error@plt>
   12f88:	movw	r1, #57328	; 0xdff0
   12f8c:	mov	r0, #0
   12f90:	mov	r2, #5
   12f94:	movt	r1, #1
   12f98:	bl	110f8 <dcgettext@plt>
   12f9c:	mov	r4, r0
   12fa0:	movw	r0, #55755	; 0xd9cb
   12fa4:	movt	r0, #1
   12fa8:	bl	1b714 <__assert_fail@plt+0xa40c>
   12fac:	mov	r3, r0
   12fb0:	mov	r0, #512	; 0x200
   12fb4:	str	r0, [sp]
   12fb8:	b	12e78 <__assert_fail@plt+0x1b70>
   12fbc:	movw	r1, #57368	; 0xe018
   12fc0:	movt	r1, #1
   12fc4:	b	13024 <__assert_fail@plt+0x1d1c>
   12fc8:	movw	r1, #57403	; 0xe03b
   12fcc:	movt	r1, #1
   12fd0:	b	13024 <__assert_fail@plt+0x1d1c>
   12fd4:	movw	r1, #57463	; 0xe077
   12fd8:	movt	r1, #1
   12fdc:	b	13024 <__assert_fail@plt+0x1d1c>
   12fe0:	movw	r1, #57520	; 0xe0b0
   12fe4:	movt	r1, #1
   12fe8:	b	13024 <__assert_fail@plt+0x1d1c>
   12fec:	movw	r1, #57593	; 0xe0f9
   12ff0:	movt	r1, #1
   12ff4:	b	13024 <__assert_fail@plt+0x1d1c>
   12ff8:	movw	r1, #57665	; 0xe141
   12ffc:	movt	r1, #1
   13000:	b	13024 <__assert_fail@plt+0x1d1c>
   13004:	movw	r1, #57729	; 0xe181
   13008:	movt	r1, #1
   1300c:	b	13024 <__assert_fail@plt+0x1d1c>
   13010:	movw	r1, #57791	; 0xe1bf
   13014:	movt	r1, #1
   13018:	b	13024 <__assert_fail@plt+0x1d1c>
   1301c:	movw	r1, #57854	; 0xe1fe
   13020:	movt	r1, #1
   13024:	mov	r0, #0
   13028:	mov	r2, #5
   1302c:	bl	110f8 <dcgettext@plt>
   13030:	mov	r2, r0
   13034:	mov	r0, #0
   13038:	mov	r1, #0
   1303c:	bl	11170 <error@plt>
   13040:	mov	r0, #1
   13044:	bl	11410 <__assert_fail@plt+0x108>
   13048:	bl	1120c <__errno_location@plt>
   1304c:	movw	r1, #57918	; 0xe23e
   13050:	ldr	r4, [r0]
   13054:	mov	r0, #0
   13058:	mov	r2, #5
   1305c:	movt	r1, #1
   13060:	bl	110f8 <dcgettext@plt>
   13064:	mov	r2, r0
   13068:	mov	r0, #1
   1306c:	mov	r1, r4
   13070:	bl	11170 <error@plt>
   13074:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13078:	add	fp, sp, #24
   1307c:	mov	r6, r1
   13080:	movw	r1, #59416	; 0xe818
   13084:	mov	r4, r2
   13088:	mov	r8, r0
   1308c:	movt	r1, #1
   13090:	bl	1108c <strcmp@plt>
   13094:	mov	r5, r0
   13098:	mov	r0, #0
   1309c:	cmp	r5, #0
   130a0:	strb	r0, [r4]
   130a4:	beq	130f8 <__assert_fail@plt+0x1df0>
   130a8:	movw	r1, #58922	; 0xe62a
   130ac:	mov	r0, r8
   130b0:	movt	r1, #1
   130b4:	bl	19940 <__assert_fail@plt+0x8638>
   130b8:	mov	r7, r0
   130bc:	cmp	r0, #0
   130c0:	bne	13114 <__assert_fail@plt+0x1e0c>
   130c4:	movw	r0, #61835	; 0xf18b
   130c8:	movt	r0, #2
   130cc:	ldrb	r5, [r0]
   130d0:	bl	1120c <__errno_location@plt>
   130d4:	cmp	r5, #1
   130d8:	bne	131c8 <__assert_fail@plt+0x1ec0>
   130dc:	ldr	r1, [r0]
   130e0:	cmp	r1, #2
   130e4:	bne	131c8 <__assert_fail@plt+0x1ec0>
   130e8:	mov	r5, #1
   130ec:	mov	r0, r5
   130f0:	strb	r5, [r4]
   130f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   130f8:	movw	r0, #61848	; 0xf198
   130fc:	mov	r1, #1
   13100:	movt	r0, #2
   13104:	strb	r1, [r0]
   13108:	movw	r0, #61808	; 0xf170
   1310c:	movt	r0, #2
   13110:	ldr	r7, [r0]
   13114:	mov	r0, r7
   13118:	mov	r1, #2
   1311c:	bl	1980c <__assert_fail@plt+0x8504>
   13120:	movw	r0, #61824	; 0xf180
   13124:	movt	r0, #2
   13128:	ldrd	r0, [r0]
   1312c:	lsr	r0, r0, #3
   13130:	orr	r2, r0, r1, lsl #29
   13134:	mov	r0, r7
   13138:	mov	r1, r6
   1313c:	bl	19614 <__assert_fail@plt+0x830c>
   13140:	cmp	r0, #0
   13144:	beq	13154 <__assert_fail@plt+0x1e4c>
   13148:	bl	1120c <__errno_location@plt>
   1314c:	ldr	r6, [r0]
   13150:	b	13158 <__assert_fail@plt+0x1e50>
   13154:	mov	r6, #0
   13158:	mov	r0, r7
   1315c:	cmp	r5, #0
   13160:	beq	131b0 <__assert_fail@plt+0x1ea8>
   13164:	bl	19848 <__assert_fail@plt+0x8540>
   13168:	cmp	r6, #0
   1316c:	bne	13180 <__assert_fail@plt+0x1e78>
   13170:	cmp	r0, #0
   13174:	beq	13180 <__assert_fail@plt+0x1e78>
   13178:	bl	1120c <__errno_location@plt>
   1317c:	ldr	r6, [r0]
   13180:	cmp	r6, #0
   13184:	beq	131bc <__assert_fail@plt+0x1eb4>
   13188:	mov	r0, #0
   1318c:	mov	r1, #3
   13190:	mov	r2, r8
   13194:	mov	r5, #0
   13198:	bl	1b468 <__assert_fail@plt+0xa160>
   1319c:	movw	r2, #57254	; 0xdfa6
   131a0:	mov	r3, r0
   131a4:	mov	r0, #0
   131a8:	mov	r1, r6
   131ac:	b	131f0 <__assert_fail@plt+0x1ee8>
   131b0:	bl	112b4 <clearerr_unlocked@plt>
   131b4:	cmp	r6, #0
   131b8:	bne	13188 <__assert_fail@plt+0x1e80>
   131bc:	mov	r5, #1
   131c0:	mov	r0, r5
   131c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131c8:	ldr	r4, [r0]
   131cc:	mov	r0, #0
   131d0:	mov	r1, #3
   131d4:	mov	r2, r8
   131d8:	mov	r5, #0
   131dc:	bl	1b468 <__assert_fail@plt+0xa160>
   131e0:	movw	r2, #57254	; 0xdfa6
   131e4:	mov	r3, r0
   131e8:	mov	r0, #0
   131ec:	mov	r1, r4
   131f0:	movt	r2, #1
   131f4:	bl	11170 <error@plt>
   131f8:	mov	r0, r5
   131fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13200:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13204:	add	fp, sp, #24
   13208:	mov	r4, r0
   1320c:	cmp	r1, #0
   13210:	beq	132c0 <__assert_fail@plt+0x1fb8>
   13214:	movw	r5, #61812	; 0xf174
   13218:	movw	r8, #58918	; 0xe626
   1321c:	movw	r6, #58921	; 0xe629
   13220:	movw	r7, #58924	; 0xe62c
   13224:	movt	r5, #2
   13228:	movt	r8, #1
   1322c:	movt	r6, #1
   13230:	movt	r7, #1
   13234:	b	13248 <__assert_fail@plt+0x1f40>
   13238:	ldr	r1, [r5]
   1323c:	mov	r0, r6
   13240:	bl	11068 <fputs_unlocked@plt>
   13244:	add	r4, r4, #1
   13248:	ldrb	r1, [r4]
   1324c:	cmp	r1, #12
   13250:	ble	13270 <__assert_fail@plt+0x1f68>
   13254:	cmp	r1, #13
   13258:	beq	13238 <__assert_fail@plt+0x1f30>
   1325c:	cmp	r1, #92	; 0x5c
   13260:	bne	1328c <__assert_fail@plt+0x1f84>
   13264:	ldr	r1, [r5]
   13268:	mov	r0, r7
   1326c:	b	13240 <__assert_fail@plt+0x1f38>
   13270:	cmp	r1, #10
   13274:	bne	13284 <__assert_fail@plt+0x1f7c>
   13278:	ldr	r1, [r5]
   1327c:	mov	r0, r8
   13280:	b	13240 <__assert_fail@plt+0x1f38>
   13284:	cmp	r1, #0
   13288:	beq	132d8 <__assert_fail@plt+0x1fd0>
   1328c:	ldr	r0, [r5]
   13290:	ldr	r2, [r0, #20]
   13294:	ldr	r3, [r0, #24]
   13298:	cmp	r2, r3
   1329c:	bcs	132b4 <__assert_fail@plt+0x1fac>
   132a0:	add	r3, r2, #1
   132a4:	add	r4, r4, #1
   132a8:	str	r3, [r0, #20]
   132ac:	strb	r1, [r2]
   132b0:	b	13248 <__assert_fail@plt+0x1f40>
   132b4:	bl	11284 <__overflow@plt>
   132b8:	add	r4, r4, #1
   132bc:	b	13248 <__assert_fail@plt+0x1f40>
   132c0:	movw	r0, #61812	; 0xf174
   132c4:	movt	r0, #2
   132c8:	ldr	r1, [r0]
   132cc:	mov	r0, r4
   132d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   132d4:	b	11068 <fputs_unlocked@plt>
   132d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132dc:	andeq	r0, r0, r0
   132e0:	push	{r4, r5, fp, lr}
   132e4:	add	fp, sp, #8
   132e8:	mov	r5, r1
   132ec:	mov	r4, r0
   132f0:	add	r0, r0, #64	; 0x40
   132f4:	mov	r1, #0
   132f8:	mov	r2, #176	; 0xb0
   132fc:	bl	11230 <memset@plt>
   13300:	movw	r0, #59248	; 0xe770
   13304:	mov	r2, #48	; 0x30
   13308:	movt	r0, #1
   1330c:	add	r3, r0, #32
   13310:	add	r1, r0, #16
   13314:	vld1.64	{d18-d19}, [r0], r2
   13318:	vld1.64	{d20-d21}, [r3]
   1331c:	vld1.64	{d16-d17}, [r1]
   13320:	vld1.64	{d22-d23}, [r0]
   13324:	add	r0, r4, #32
   13328:	add	r1, r4, #16
   1332c:	movw	r3, #58983	; 0xe667
   13330:	movt	r3, #27145	; 0x6a09
   13334:	vst1.64	{d20-d21}, [r0]
   13338:	add	r0, r4, #48	; 0x30
   1333c:	vst1.64	{d16-d17}, [r1]
   13340:	mov	r1, #228	; 0xe4
   13344:	vst1.64	{d22-d23}, [r0]
   13348:	mov	r0, r4
   1334c:	vst1.64	{d18-d19}, [r0], r1
   13350:	movw	r1, #44677	; 0xae85
   13354:	ldr	r2, [r5, #4]
   13358:	ldr	ip, [r5]
   1335c:	movt	r1, #47975	; 0xbb67
   13360:	eor	r2, r2, r3
   13364:	str	r2, [r4, #4]
   13368:	movw	r2, #51464	; 0xc908
   1336c:	movt	r2, #62396	; 0xf3bc
   13370:	eor	r2, ip, r2
   13374:	str	r2, [r4]
   13378:	ldr	r3, [r5, #12]
   1337c:	ldr	r2, [r5, #8]
   13380:	eor	r1, r3, r1
   13384:	movw	r3, #62322	; 0xf372
   13388:	str	r1, [r4, #12]
   1338c:	movw	r1, #42811	; 0xa73b
   13390:	movt	r3, #15470	; 0x3c6e
   13394:	movt	r1, #33994	; 0x84ca
   13398:	eor	r1, r2, r1
   1339c:	str	r1, [r4, #8]
   133a0:	ldr	r2, [r5, #20]
   133a4:	ldr	r1, [r5, #16]
   133a8:	eor	r2, r2, r3
   133ac:	movw	r3, #62778	; 0xf53a
   133b0:	str	r2, [r4, #20]
   133b4:	movw	r2, #63531	; 0xf82b
   133b8:	movt	r3, #42319	; 0xa54f
   133bc:	movt	r2, #65172	; 0xfe94
   133c0:	eor	r1, r1, r2
   133c4:	str	r1, [r4, #16]
   133c8:	ldr	r2, [r5, #28]
   133cc:	ldr	r1, [r5, #24]
   133d0:	eor	r2, r2, r3
   133d4:	movw	r3, #21119	; 0x527f
   133d8:	str	r2, [r4, #28]
   133dc:	movw	r2, #14065	; 0x36f1
   133e0:	movt	r3, #20750	; 0x510e
   133e4:	movt	r2, #24349	; 0x5f1d
   133e8:	eor	r1, r1, r2
   133ec:	str	r1, [r4, #24]
   133f0:	ldr	r2, [r5, #36]	; 0x24
   133f4:	ldr	r1, [r5, #32]
   133f8:	eor	r2, r2, r3
   133fc:	movw	r3, #26764	; 0x688c
   13400:	str	r2, [r4, #36]	; 0x24
   13404:	movw	r2, #33489	; 0x82d1
   13408:	movt	r3, #39685	; 0x9b05
   1340c:	movt	r2, #44518	; 0xade6
   13410:	eor	r1, r1, r2
   13414:	str	r1, [r4, #32]
   13418:	ldr	r2, [r5, #44]	; 0x2c
   1341c:	ldr	r1, [r5, #40]	; 0x28
   13420:	eor	r2, r2, r3
   13424:	movw	r3, #55723	; 0xd9ab
   13428:	str	r2, [r4, #44]	; 0x2c
   1342c:	movw	r2, #27679	; 0x6c1f
   13430:	movt	r3, #8067	; 0x1f83
   13434:	movt	r2, #11070	; 0x2b3e
   13438:	eor	r1, r1, r2
   1343c:	str	r1, [r4, #40]	; 0x28
   13440:	ldr	r2, [r5, #52]	; 0x34
   13444:	ldr	r1, [r5, #48]	; 0x30
   13448:	eor	r2, r2, r3
   1344c:	uxtb	r3, ip
   13450:	str	r2, [r4, #52]	; 0x34
   13454:	movw	r2, #48491	; 0xbd6b
   13458:	movt	r2, #64321	; 0xfb41
   1345c:	eor	r1, r1, r2
   13460:	str	r1, [r4, #48]	; 0x30
   13464:	ldr	r2, [r5, #60]	; 0x3c
   13468:	ldr	r1, [r5, #56]	; 0x38
   1346c:	str	r3, [r0]
   13470:	movw	r0, #52505	; 0xcd19
   13474:	movt	r0, #23520	; 0x5be0
   13478:	eor	r0, r2, r0
   1347c:	str	r0, [r4, #60]	; 0x3c
   13480:	movw	r0, #8569	; 0x2179
   13484:	movt	r0, #4990	; 0x137e
   13488:	eor	r0, r1, r0
   1348c:	str	r0, [r4, #56]	; 0x38
   13490:	mov	r0, #0
   13494:	pop	{r4, r5, fp, pc}
   13498:	nop	{0}
   1349c:	nop	{0}
   134a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a4:	add	fp, sp, #28
   134a8:	sub	sp, sp, #4
   134ac:	mov	r4, r0
   134b0:	sub	r0, r1, #1
   134b4:	mvn	r5, #0
   134b8:	cmp	r0, #63	; 0x3f
   134bc:	bhi	1354c <__assert_fail@plt+0x2244>
   134c0:	mov	r6, r1
   134c4:	add	r0, r4, #64	; 0x40
   134c8:	mov	r1, #0
   134cc:	mov	r2, #176	; 0xb0
   134d0:	add	r7, r4, #8
   134d4:	add	r8, r4, #24
   134d8:	add	r9, r4, #40	; 0x28
   134dc:	add	sl, r4, #56	; 0x38
   134e0:	mov	r5, #0
   134e4:	bl	11230 <memset@plt>
   134e8:	add	r0, pc, #112	; 0x70
   134ec:	movw	r3, #51464	; 0xc908
   134f0:	movw	r1, #58983	; 0xe667
   134f4:	vld1.64	{d16-d17}, [r0 :128]
   134f8:	uxtb	r0, r6
   134fc:	movt	r3, #62396	; 0xf3bc
   13500:	movt	r1, #27145	; 0x6a09
   13504:	orr	r2, r0, #65536	; 0x10000
   13508:	orr	r2, r2, #16777216	; 0x1000000
   1350c:	eor	r2, r2, r3
   13510:	movw	r3, #52505	; 0xcd19
   13514:	str	r2, [r4]
   13518:	str	r1, [r4, #4]
   1351c:	add	r1, pc, #76	; 0x4c
   13520:	vst1.64	{d16-d17}, [r7]
   13524:	movw	r2, #8569	; 0x2179
   13528:	movt	r3, #23520	; 0x5be0
   1352c:	vld1.64	{d18-d19}, [r1 :128]
   13530:	add	r1, pc, #72	; 0x48
   13534:	movt	r2, #4990	; 0x137e
   13538:	vld1.64	{d16-d17}, [r1 :128]
   1353c:	vst1.64	{d18-d19}, [r8]
   13540:	vst1.64	{d16-d17}, [r9]
   13544:	strd	r2, [sl]
   13548:	str	r0, [r4, #228]	; 0xe4
   1354c:	mov	r0, r5
   13550:	sub	sp, fp, #28
   13554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13558:	nop	{0}
   1355c:	nop	{0}
   13560:	strbhi	sl, [sl], #1851	; 0x73b
   13564:	bllt	19fef80 <optarg@@GLIBC_2.4+0x19cfe08>
   13568:	vcmla.f32	d15, d4, d27[0], #90
   1356c:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13570:	svcpl	0x001d36f1
   13574:	strbge	pc, [pc, #-1338]	; 13042 <__assert_fail@plt+0x1d3a>	; <UNPREDICTABLE>
   13578:	sfmge	f0, 3, [r6, #836]!	; 0x344
   1357c:	tstpl	lr, pc, ror r2
   13580:	blcs	fae604 <optarg@@GLIBC_2.4+0xf7f48c>
   13584:	blls	16d7bc <optarg@@GLIBC_2.4+0x13e644>
   13588:	blx	1082b3e <optarg@@GLIBC_2.4+0x10539c6>
   1358c:	svcne	0x0083d9ab
   13590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13594:	add	fp, sp, #28
   13598:	sub	sp, sp, #140	; 0x8c
   1359c:	mov	r5, r0
   135a0:	sub	r0, r1, #1
   135a4:	mvn	r4, #0
   135a8:	cmp	r0, #63	; 0x3f
   135ac:	bhi	136bc <__assert_fail@plt+0x23b4>
   135b0:	mov	r8, r2
   135b4:	cmp	r2, #0
   135b8:	beq	136bc <__assert_fail@plt+0x23b4>
   135bc:	sub	r0, r3, #1
   135c0:	mov	r6, r3
   135c4:	cmp	r0, #63	; 0x3f
   135c8:	bhi	136bc <__assert_fail@plt+0x23b4>
   135cc:	add	r0, r5, #40	; 0x28
   135d0:	mov	r7, r1
   135d4:	mov	r1, #0
   135d8:	mov	r2, #176	; 0xb0
   135dc:	add	r9, r5, #8
   135e0:	add	sl, r5, #24
   135e4:	mov	r4, #0
   135e8:	str	r0, [sp]
   135ec:	add	r0, r5, #56	; 0x38
   135f0:	str	r0, [sp, #4]
   135f4:	add	r0, r5, #64	; 0x40
   135f8:	bl	11230 <memset@plt>
   135fc:	add	r0, pc, #204	; 0xcc
   13600:	uxtb	r2, r7
   13604:	movw	r3, #51464	; 0xc908
   13608:	movw	r1, #58983	; 0xe667
   1360c:	add	r7, sp, #8
   13610:	vld1.64	{d16-d17}, [r0 :128]
   13614:	uxtb	r0, r6
   13618:	movt	r3, #62396	; 0xf3bc
   1361c:	movt	r1, #27145	; 0x6a09
   13620:	orr	r0, r2, r0, lsl #8
   13624:	orr	r0, r0, #65536	; 0x10000
   13628:	orr	r0, r0, #16777216	; 0x1000000
   1362c:	eor	r0, r0, r3
   13630:	strd	r0, [r5]
   13634:	add	r0, pc, #164	; 0xa4
   13638:	vst1.64	{d16-d17}, [r9]
   1363c:	movw	r1, #52505	; 0xcd19
   13640:	vld1.64	{d18-d19}, [r0 :128]
   13644:	add	r0, pc, #164	; 0xa4
   13648:	ldr	r3, [sp, #4]
   1364c:	movt	r1, #23520	; 0x5be0
   13650:	vld1.64	{d16-d17}, [r0 :128]
   13654:	ldr	r0, [sp]
   13658:	vst1.64	{d18-d19}, [sl]
   1365c:	vst1.64	{d16-d17}, [r0]
   13660:	movw	r0, #8569	; 0x2179
   13664:	movt	r0, #4990	; 0x137e
   13668:	strd	r0, [r3]
   1366c:	str	r2, [r5, #228]	; 0xe4
   13670:	add	r0, r7, r6
   13674:	rsb	r2, r6, #128	; 0x80
   13678:	mov	r1, #0
   1367c:	bl	11230 <memset@plt>
   13680:	mov	r0, r7
   13684:	mov	r1, r8
   13688:	mov	r2, r6
   1368c:	bl	110d4 <memcpy@plt>
   13690:	mov	r0, r5
   13694:	mov	r1, r7
   13698:	mov	r2, #128	; 0x80
   1369c:	bl	13700 <__assert_fail@plt+0x23f8>
   136a0:	movw	r0, #59312	; 0xe7b0
   136a4:	mov	r1, #0
   136a8:	mov	r2, #128	; 0x80
   136ac:	movt	r0, #1
   136b0:	ldr	r3, [r0]
   136b4:	mov	r0, r7
   136b8:	blx	r3
   136bc:	mov	r0, r4
   136c0:	sub	sp, fp, #28
   136c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136c8:	nop	{0}
   136cc:	nop	{0}
   136d0:	strbhi	sl, [sl], #1851	; 0x73b
   136d4:	bllt	19ff0f0 <optarg@@GLIBC_2.4+0x19cff78>
   136d8:	vcmla.f32	d15, d4, d27[0], #90
   136dc:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   136e0:	svcpl	0x001d36f1
   136e4:	strbge	pc, [pc, #-1338]	; 131b2 <__assert_fail@plt+0x1eaa>	; <UNPREDICTABLE>
   136e8:	sfmge	f0, 3, [r6, #836]!	; 0x344
   136ec:	tstpl	lr, pc, ror r2
   136f0:	blcs	fae774 <optarg@@GLIBC_2.4+0xf7f5fc>
   136f4:	blls	16d92c <optarg@@GLIBC_2.4+0x13e7b4>
   136f8:	blx	1082cae <optarg@@GLIBC_2.4+0x1053b36>
   136fc:	svcne	0x0083d9ab
   13700:	cmp	r2, #0
   13704:	beq	13820 <__assert_fail@plt+0x2518>
   13708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1370c:	add	fp, sp, #28
   13710:	sub	sp, sp, #4
   13714:	mov	r5, r1
   13718:	ldr	r1, [r0, #224]	; 0xe0
   1371c:	mov	sl, r2
   13720:	mov	r8, r0
   13724:	rsb	r9, r1, #128	; 0x80
   13728:	cmp	r9, r2
   1372c:	bcs	137f4 <__assert_fail@plt+0x24ec>
   13730:	mov	r0, #0
   13734:	add	r4, r8, #96	; 0x60
   13738:	str	r1, [sp]
   1373c:	mov	r2, r9
   13740:	add	r7, r8, #64	; 0x40
   13744:	add	r6, r8, #72	; 0x48
   13748:	str	r0, [r8, #224]	; 0xe0
   1374c:	add	r0, r4, r1
   13750:	mov	r1, r5
   13754:	bl	110d4 <memcpy@plt>
   13758:	ldrd	r0, [r7]
   1375c:	adds	r0, r0, #128	; 0x80
   13760:	adcs	r1, r1, #0
   13764:	strd	r0, [r7]
   13768:	ldrd	r0, [r6]
   1376c:	adcs	r0, r0, #0
   13770:	adc	r1, r1, #0
   13774:	strd	r0, [r6]
   13778:	mov	r0, r8
   1377c:	mov	r1, r4
   13780:	bl	13830 <__assert_fail@plt+0x2528>
   13784:	sub	r4, sl, r9
   13788:	add	r5, r5, r9
   1378c:	cmp	r4, #129	; 0x81
   13790:	bcc	137f0 <__assert_fail@plt+0x24e8>
   13794:	ldr	r0, [sp]
   13798:	add	r9, r0, sl
   1379c:	movw	r0, #257	; 0x101
   137a0:	sub	r0, r9, r0
   137a4:	bic	sl, r0, #127	; 0x7f
   137a8:	ldrd	r0, [r7]
   137ac:	adds	r0, r0, #128	; 0x80
   137b0:	adcs	r1, r1, #0
   137b4:	strd	r0, [r7]
   137b8:	ldrd	r0, [r6]
   137bc:	adcs	r0, r0, #0
   137c0:	adc	r1, r1, #0
   137c4:	strd	r0, [r6]
   137c8:	mov	r0, r8
   137cc:	mov	r1, r5
   137d0:	bl	13830 <__assert_fail@plt+0x2528>
   137d4:	sub	r4, r4, #128	; 0x80
   137d8:	add	r5, r5, #128	; 0x80
   137dc:	cmp	r4, #128	; 0x80
   137e0:	bhi	137a8 <__assert_fail@plt+0x24a0>
   137e4:	sub	r0, r9, sl
   137e8:	sub	sl, r0, #256	; 0x100
   137ec:	b	137f4 <__assert_fail@plt+0x24ec>
   137f0:	mov	sl, r4
   137f4:	ldr	r0, [r8, #224]	; 0xe0
   137f8:	mov	r1, r5
   137fc:	mov	r2, sl
   13800:	add	r0, r8, r0
   13804:	add	r0, r0, #96	; 0x60
   13808:	bl	110d4 <memcpy@plt>
   1380c:	ldr	r0, [r8, #224]	; 0xe0
   13810:	add	r0, r0, sl
   13814:	str	r0, [r8, #224]	; 0xe0
   13818:	sub	sp, fp, #28
   1381c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13820:	mov	r0, #0
   13824:	bx	lr
   13828:	nop	{0}
   1382c:	nop	{0}
   13830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13834:	add	fp, sp, #28
   13838:	sub	sp, sp, #532	; 0x214
   1383c:	mov	r5, r0
   13840:	sub	r0, fp, #160	; 0xa0
   13844:	mov	r2, #128	; 0x80
   13848:	bl	110d4 <memcpy@plt>
   1384c:	add	r0, r5, #32
   13850:	add	r1, r5, #16
   13854:	add	r2, r5, #48	; 0x30
   13858:	mov	r3, #8
   1385c:	add	r6, sp, #272	; 0x110
   13860:	sub	r9, fp, #160	; 0xa0
   13864:	mov	r4, r5
   13868:	vld1.64	{d16-d17}, [r0]
   1386c:	add	r7, pc, #1004	; 0x3ec
   13870:	vld1.64	{d24-d25}, [r1]
   13874:	vld1.64	{d22-d23}, [r2]
   13878:	add	r0, r6, #32
   1387c:	mov	sl, r4
   13880:	ldr	lr, [fp, #-148]	; 0xffffff6c
   13884:	vld1.64	{d18-d19}, [r7 :128]
   13888:	mov	r7, r5
   1388c:	str	sl, [sp, #100]	; 0x64
   13890:	vld1.64	{d20-d21}, [r7], r3
   13894:	str	r7, [sp, #104]	; 0x68
   13898:	str	lr, [sp, #224]	; 0xe0
   1389c:	vst1.64	{d16-d17}, [r0]
   138a0:	add	r0, r6, #80	; 0x50
   138a4:	vst1.64	{d18-d19}, [r0]
   138a8:	add	r0, r6, #16
   138ac:	vst1.64	{d24-d25}, [r0]
   138b0:	add	r0, r6, #48	; 0x30
   138b4:	vst1.64	{d20-d21}, [r6], r3
   138b8:	vst1.64	{d22-d23}, [r0]
   138bc:	str	r6, [sp, #172]	; 0xac
   138c0:	ldm	r9, {r3, r6, r9}
   138c4:	str	r9, [sp, #228]	; 0xe4
   138c8:	ldr	r0, [sp, #272]	; 0x110
   138cc:	ldr	r2, [sp, #304]	; 0x130
   138d0:	ldr	r1, [sp, #276]	; 0x114
   138d4:	ldr	r7, [sp, #308]	; 0x134
   138d8:	ldr	r8, [r4, #76]	; 0x4c
   138dc:	adds	r0, r2, r0
   138e0:	adc	r1, r7, r1
   138e4:	adds	ip, r0, r3
   138e8:	movw	r3, #21119	; 0x527f
   138ec:	ldr	r0, [r4, #72]	; 0x48
   138f0:	movw	r4, #58983	; 0xe667
   138f4:	adc	r1, r1, r6
   138f8:	ldr	r6, [r5, #64]	; 0x40
   138fc:	ldr	r5, [r5, #68]	; 0x44
   13900:	movt	r3, #20750	; 0x510e
   13904:	movt	r4, #27145	; 0x6a09
   13908:	str	r0, [sp, #252]	; 0xfc
   1390c:	eor	r5, r5, r1
   13910:	eor	r6, r6, ip
   13914:	eor	r3, r5, r3
   13918:	movw	r5, #33489	; 0x82d1
   1391c:	movt	r5, #44518	; 0xade6
   13920:	eor	r6, r6, r5
   13924:	movw	r5, #51464	; 0xc908
   13928:	movt	r5, #62396	; 0xf3bc
   1392c:	adds	r5, r3, r5
   13930:	adc	r4, r6, r4
   13934:	eor	r2, r5, r2
   13938:	lsl	r0, r2, #8
   1393c:	eor	r7, r4, r7
   13940:	lsr	r2, r2, #24
   13944:	orr	r0, r0, r7, lsr #24
   13948:	orr	r7, r2, r7, lsl #8
   1394c:	adds	r2, r9, ip
   13950:	adc	r1, lr, r1
   13954:	adds	r2, r2, r7
   13958:	adc	r1, r1, r0
   1395c:	eor	r3, r2, r3
   13960:	mov	r9, r2
   13964:	str	r2, [sp, #232]	; 0xe8
   13968:	eor	ip, r1, r6
   1396c:	lsl	r6, r3, #16
   13970:	lsr	r3, r3, #16
   13974:	mov	lr, r1
   13978:	str	r1, [sp, #236]	; 0xec
   1397c:	orr	r1, r3, ip, lsl #16
   13980:	orr	r6, r6, ip, lsr #16
   13984:	adds	r2, r1, r5
   13988:	mov	ip, r1
   1398c:	str	r1, [sp, #268]	; 0x10c
   13990:	str	r6, [sp, #264]	; 0x108
   13994:	adc	r1, r6, r4
   13998:	str	r2, [sp, #256]	; 0x100
   1399c:	eor	r0, r1, r0
   139a0:	mov	r4, r1
   139a4:	str	r1, [sp, #260]	; 0x104
   139a8:	eor	r1, r2, r7
   139ac:	lsl	r3, r0, #1
   139b0:	orr	r5, r3, r1, lsr #31
   139b4:	lsl	r1, r1, #1
   139b8:	movw	r3, #52505	; 0xcd19
   139bc:	orr	r7, r1, r0, lsr #31
   139c0:	ldr	r0, [sl, #88]	; 0x58
   139c4:	movw	r1, #8569	; 0x2179
   139c8:	movt	r3, #23520	; 0x5be0
   139cc:	movt	r1, #4990	; 0x137e
   139d0:	str	r5, [sp, #156]	; 0x9c
   139d4:	str	r7, [sp, #152]	; 0x98
   139d8:	eor	r0, r0, r1
   139dc:	ldr	r1, [sl, #92]	; 0x5c
   139e0:	str	r0, [sp, #192]	; 0xc0
   139e4:	eor	r1, r1, r3
   139e8:	ldr	r3, [sl, #80]	; 0x50
   139ec:	str	r1, [sp, #196]	; 0xc4
   139f0:	str	r3, [sp, #244]	; 0xf4
   139f4:	ldr	r3, [sl, #84]	; 0x54
   139f8:	str	r0, [sp, #392]	; 0x188
   139fc:	str	r1, [sp, #396]	; 0x18c
   13a00:	str	r9, [sp, #272]	; 0x110
   13a04:	str	lr, [sp, #276]	; 0x114
   13a08:	str	ip, [sp, #368]	; 0x170
   13a0c:	ldr	ip, [sp, #172]	; 0xac
   13a10:	str	r6, [sp, #372]	; 0x174
   13a14:	str	r2, [sp, #336]	; 0x150
   13a18:	str	r4, [sp, #340]	; 0x154
   13a1c:	str	r5, [sp, #308]	; 0x134
   13a20:	str	r7, [sp, #304]	; 0x130
   13a24:	ldr	r0, [fp, #-144]	; 0xffffff70
   13a28:	ldr	r2, [fp, #-140]	; 0xffffff74
   13a2c:	movw	r5, #26764	; 0x688c
   13a30:	movw	r6, #27679	; 0x6c1f
   13a34:	ldr	sl, [fp, #-136]	; 0xffffff78
   13a38:	ldr	r9, [fp, #-132]	; 0xffffff7c
   13a3c:	ldr	r7, [sp, #316]	; 0x13c
   13a40:	movt	r5, #39685	; 0x9b05
   13a44:	movt	r6, #11070	; 0x2b3e
   13a48:	str	r3, [sp, #240]	; 0xf0
   13a4c:	ldr	r4, [ip]
   13a50:	ldr	r3, [sp, #312]	; 0x138
   13a54:	ldr	r1, [ip, #4]
   13a58:	str	r0, [sp, #204]	; 0xcc
   13a5c:	str	r2, [sp, #200]	; 0xc8
   13a60:	adds	r4, r3, r4
   13a64:	adc	r1, r7, r1
   13a68:	adds	r4, r4, r0
   13a6c:	ldr	r0, [sp, #252]	; 0xfc
   13a70:	adc	r1, r1, r2
   13a74:	movw	r2, #42811	; 0xa73b
   13a78:	eor	r8, r8, r1
   13a7c:	movt	r2, #33994	; 0x84ca
   13a80:	eor	r5, r8, r5
   13a84:	eor	lr, r0, r4
   13a88:	movw	r0, #44677	; 0xae85
   13a8c:	movt	r0, #47975	; 0xbb67
   13a90:	eor	r6, lr, r6
   13a94:	adds	lr, r5, r2
   13a98:	eor	r3, lr, r3
   13a9c:	adc	r0, r6, r0
   13aa0:	lsl	r2, r3, #8
   13aa4:	lsr	r3, r3, #24
   13aa8:	adds	r4, sl, r4
   13aac:	ldr	sl, [fp, #-116]	; 0xffffff8c
   13ab0:	eor	r7, r0, r7
   13ab4:	adc	r1, r9, r1
   13ab8:	orr	r3, r3, r7, lsl #8
   13abc:	orr	r2, r2, r7, lsr #24
   13ac0:	adds	r4, r4, r3
   13ac4:	adc	r7, r1, r2
   13ac8:	mov	r9, r4
   13acc:	str	r4, [sp, #208]	; 0xd0
   13ad0:	eor	r1, r7, r6
   13ad4:	mov	r8, r7
   13ad8:	str	r7, [sp, #220]	; 0xdc
   13adc:	eor	r7, r4, r5
   13ae0:	str	r9, [ip]
   13ae4:	lsl	r6, r7, #16
   13ae8:	lsr	r7, r7, #16
   13aec:	str	r8, [ip, #4]
   13af0:	ldr	r8, [fp, #-88]	; 0xffffffa8
   13af4:	orr	r4, r6, r1, lsr #16
   13af8:	orr	r1, r7, r1, lsl #16
   13afc:	adds	r7, r1, lr
   13b00:	mov	r5, r1
   13b04:	str	r1, [sp, #248]	; 0xf8
   13b08:	str	r4, [sp, #380]	; 0x17c
   13b0c:	str	r4, [sp, #252]	; 0xfc
   13b10:	adc	r1, r4, r0
   13b14:	str	r5, [sp, #376]	; 0x178
   13b18:	str	r7, [sp, #344]	; 0x158
   13b1c:	movw	r5, #55723	; 0xd9ab
   13b20:	ldr	r4, [fp, #-120]	; 0xffffff88
   13b24:	str	r7, [sp, #148]	; 0x94
   13b28:	str	r8, [sp, #132]	; 0x84
   13b2c:	eor	r0, r1, r2
   13b30:	mov	r6, r1
   13b34:	str	r1, [sp, #144]	; 0x90
   13b38:	eor	r1, r7, r3
   13b3c:	ldr	r3, [fp, #-124]	; 0xffffff84
   13b40:	movt	r5, #8067	; 0x1f83
   13b44:	lsl	r2, r0, #1
   13b48:	str	r6, [sp, #348]	; 0x15c
   13b4c:	orr	r2, r2, r1, lsr #31
   13b50:	lsl	r1, r1, #1
   13b54:	ldr	lr, [sp, #320]	; 0x140
   13b58:	ldr	r6, [sp, #324]	; 0x144
   13b5c:	orr	r0, r1, r0, lsr #31
   13b60:	ldr	r1, [sp, #232]	; 0xe8
   13b64:	str	sl, [sp, #232]	; 0xe8
   13b68:	str	r2, [sp, #160]	; 0xa0
   13b6c:	str	r3, [sp, #184]	; 0xb8
   13b70:	str	r0, [sp, #164]	; 0xa4
   13b74:	adds	r0, r0, r1
   13b78:	ldr	r1, [sp, #292]	; 0x124
   13b7c:	str	r0, [sp, #140]	; 0x8c
   13b80:	ldr	r0, [sp, #236]	; 0xec
   13b84:	str	r4, [sp, #236]	; 0xec
   13b88:	adc	r0, r2, r0
   13b8c:	ldr	r2, [fp, #-128]	; 0xffffff80
   13b90:	str	r0, [sp, #136]	; 0x88
   13b94:	ldr	r0, [sp, #288]	; 0x120
   13b98:	str	r2, [sp, #188]	; 0xbc
   13b9c:	adds	r0, lr, r0
   13ba0:	adc	r1, r6, r1
   13ba4:	adds	r0, r0, r2
   13ba8:	ldr	r2, [sp, #240]	; 0xf0
   13bac:	adc	r1, r1, r3
   13bb0:	eor	r2, r2, r1
   13bb4:	eor	r3, r2, r5
   13bb8:	ldr	r2, [sp, #244]	; 0xf4
   13bbc:	movw	r5, #48491	; 0xbd6b
   13bc0:	movt	r5, #64321	; 0xfb41
   13bc4:	eor	r2, r2, r0
   13bc8:	eor	ip, r2, r5
   13bcc:	movw	r2, #63531	; 0xf82b
   13bd0:	movw	r5, #62322	; 0xf372
   13bd4:	movt	r2, #65172	; 0xfe94
   13bd8:	movt	r5, #15470	; 0x3c6e
   13bdc:	adds	r2, r3, r2
   13be0:	adc	r5, ip, r5
   13be4:	eor	lr, r2, lr
   13be8:	adds	r0, r4, r0
   13bec:	str	r2, [sp, #120]	; 0x78
   13bf0:	ldr	r4, [fp, #-104]	; 0xffffff98
   13bf4:	eor	r6, r5, r6
   13bf8:	lsr	r7, lr, #24
   13bfc:	str	r5, [sp, #124]	; 0x7c
   13c00:	lsl	r5, lr, #8
   13c04:	adc	r1, sl, r1
   13c08:	orr	r7, r7, r6, lsl #8
   13c0c:	orr	r2, r5, r6, lsr #24
   13c10:	ldr	r5, [fp, #-108]	; 0xffffff94
   13c14:	str	r7, [sp, #108]	; 0x6c
   13c18:	adds	r7, r0, r7
   13c1c:	str	r2, [sp, #96]	; 0x60
   13c20:	str	r4, [sp, #244]	; 0xf4
   13c24:	adc	r6, r1, r2
   13c28:	eor	r1, r7, r3
   13c2c:	str	r7, [sp, #288]	; 0x120
   13c30:	str	r7, [sp, #84]	; 0x54
   13c34:	lsr	r3, r1, #16
   13c38:	eor	r0, r6, ip
   13c3c:	lsl	r1, r1, #16
   13c40:	str	r6, [sp, #292]	; 0x124
   13c44:	str	r6, [sp, #80]	; 0x50
   13c48:	ldr	r6, [fp, #-112]	; 0xffffff90
   13c4c:	str	r5, [sp, #212]	; 0xd4
   13c50:	orr	r2, r3, r0, lsl #16
   13c54:	orr	r0, r1, r0, lsr #16
   13c58:	b	13c70 <__assert_fail@plt+0x2968>
   13c5c:	nop	{0}
   13c60:	vcmla.f32	d15, d4, d27[0], #90
   13c64:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13c68:	svcpl	0x001d36f1
   13c6c:	strbge	pc, [pc, #-1338]	; 1373a <__assert_fail@plt+0x2432>	; <UNPREDICTABLE>
   13c70:	str	r0, [sp, #388]	; 0x184
   13c74:	str	r2, [sp, #384]	; 0x180
   13c78:	str	r0, [sp, #168]	; 0xa8
   13c7c:	mov	lr, r2
   13c80:	str	r2, [sp, #92]	; 0x5c
   13c84:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13c88:	ldr	r0, [sp, #296]	; 0x128
   13c8c:	ldr	ip, [sp, #328]	; 0x148
   13c90:	ldr	r1, [sp, #300]	; 0x12c
   13c94:	ldr	r7, [sp, #332]	; 0x14c
   13c98:	str	r6, [sp, #216]	; 0xd8
   13c9c:	str	r2, [sp, #240]	; 0xf0
   13ca0:	adds	r0, ip, r0
   13ca4:	adc	r1, r7, r1
   13ca8:	adds	r0, r0, r6
   13cac:	ldr	r6, [sp, #192]	; 0xc0
   13cb0:	adc	r1, r1, r5
   13cb4:	movw	r5, #62778	; 0xf53a
   13cb8:	movt	r5, #42319	; 0xa54f
   13cbc:	eor	r9, r0, r6
   13cc0:	ldr	r6, [sp, #196]	; 0xc4
   13cc4:	eor	sl, r1, r6
   13cc8:	movw	r6, #14065	; 0x36f1
   13ccc:	movt	r6, #24349	; 0x5f1d
   13cd0:	adds	r6, sl, r6
   13cd4:	adc	r3, r9, r5
   13cd8:	adds	r0, r4, r0
   13cdc:	ldr	r4, [sp, #140]	; 0x8c
   13ce0:	str	r6, [sp, #68]	; 0x44
   13ce4:	str	r3, [sp, #72]	; 0x48
   13ce8:	eor	r5, r3, r7
   13cec:	eor	r3, r6, ip
   13cf0:	adc	r1, r2, r1
   13cf4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13cf8:	lsl	r7, r3, #8
   13cfc:	lsr	r3, r3, #24
   13d00:	orr	r3, r3, r5, lsl #8
   13d04:	orr	r7, r7, r5, lsr #24
   13d08:	adds	r0, r0, r3
   13d0c:	str	r3, [sp, #56]	; 0x38
   13d10:	str	r7, [sp, #52]	; 0x34
   13d14:	str	ip, [sp, #128]	; 0x80
   13d18:	str	r0, [sp, #296]	; 0x128
   13d1c:	mov	r3, r0
   13d20:	str	r0, [sp, #76]	; 0x4c
   13d24:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13d28:	adc	r1, r1, r7
   13d2c:	str	r1, [sp, #300]	; 0x12c
   13d30:	mov	r2, r1
   13d34:	str	r1, [sp, #88]	; 0x58
   13d38:	ldr	r1, [fp, #-92]	; 0xffffffa4
   13d3c:	adds	r5, r4, r0
   13d40:	str	r0, [sp, #180]	; 0xb4
   13d44:	ldr	r0, [sp, #136]	; 0x88
   13d48:	eor	r4, r2, r9
   13d4c:	eor	r2, r3, sl
   13d50:	str	r1, [sp, #176]	; 0xb0
   13d54:	lsr	r3, r2, #16
   13d58:	lsl	r2, r2, #16
   13d5c:	adc	r7, r0, r1
   13d60:	ldr	r0, [sp, #120]	; 0x78
   13d64:	ldr	r1, [sp, #168]	; 0xa8
   13d68:	adds	lr, lr, r0
   13d6c:	ldr	r0, [sp, #124]	; 0x7c
   13d70:	str	lr, [sp, #196]	; 0xc4
   13d74:	adc	r6, r1, r0
   13d78:	orr	r0, r3, r4, lsl #16
   13d7c:	orr	r1, r2, r4, lsr #16
   13d80:	str	r6, [sp, #192]	; 0xc0
   13d84:	str	r0, [sp, #60]	; 0x3c
   13d88:	eor	r3, r0, r5
   13d8c:	ldr	r0, [sp, #160]	; 0xa0
   13d90:	eor	r4, r1, r7
   13d94:	str	r1, [sp, #64]	; 0x40
   13d98:	adds	r9, r4, lr
   13d9c:	adc	r2, r3, r6
   13da0:	eor	r1, r2, r0
   13da4:	ldr	r0, [sp, #164]	; 0xa4
   13da8:	eor	r0, r9, r0
   13dac:	lsl	sl, r0, #8
   13db0:	lsr	r0, r0, #24
   13db4:	orr	r0, r0, r1, lsl #8
   13db8:	orr	sl, sl, r1, lsr #24
   13dbc:	adds	r1, r8, r5
   13dc0:	adc	r5, ip, r7
   13dc4:	adds	r6, r1, r0
   13dc8:	adc	r8, r5, sl
   13dcc:	str	r6, [sp, #112]	; 0x70
   13dd0:	str	r6, [sp, #272]	; 0x110
   13dd4:	eor	r1, r8, r3
   13dd8:	eor	r3, r6, r4
   13ddc:	str	r8, [sp, #116]	; 0x74
   13de0:	str	r8, [sp, #276]	; 0x114
   13de4:	lsl	r4, r3, #16
   13de8:	lsr	r3, r3, #16
   13dec:	orr	r4, r4, r1, lsr #16
   13df0:	orr	r1, r3, r1, lsl #16
   13df4:	adds	ip, r1, r9
   13df8:	mov	r7, r1
   13dfc:	str	r1, [sp, #140]	; 0x8c
   13e00:	str	r4, [sp, #396]	; 0x18c
   13e04:	str	r4, [sp, #136]	; 0x88
   13e08:	adc	r2, r4, r2
   13e0c:	eor	r0, ip, r0
   13e10:	str	r7, [sp, #392]	; 0x188
   13e14:	str	ip, [sp, #352]	; 0x160
   13e18:	str	ip, [sp, #120]	; 0x78
   13e1c:	eor	r1, r2, sl
   13e20:	mov	lr, r2
   13e24:	str	r2, [sp, #124]	; 0x7c
   13e28:	lsl	r2, r1, #1
   13e2c:	str	lr, [sp, #356]	; 0x164
   13e30:	orr	r5, r2, r0, lsr #31
   13e34:	lsl	r0, r0, #1
   13e38:	ldr	r2, [sp, #196]	; 0xc4
   13e3c:	orr	r3, r0, r1, lsr #31
   13e40:	ldr	r0, [sp, #96]	; 0x60
   13e44:	ldr	r1, [sp, #192]	; 0xc0
   13e48:	str	r5, [sp, #164]	; 0xa4
   13e4c:	str	r5, [sp, #316]	; 0x13c
   13e50:	ldr	r5, [fp, #-72]	; 0xffffffb8
   13e54:	str	r3, [sp, #312]	; 0x138
   13e58:	mov	r8, r3
   13e5c:	str	r3, [sp, #40]	; 0x28
   13e60:	eor	r0, r1, r0
   13e64:	ldr	r1, [sp, #108]	; 0x6c
   13e68:	str	r5, [sp, #196]	; 0xc4
   13e6c:	eor	r1, r2, r1
   13e70:	lsl	r2, r0, #1
   13e74:	orr	r2, r2, r1, lsr #31
   13e78:	lsl	r1, r1, #1
   13e7c:	orr	sl, r1, r0, lsr #31
   13e80:	ldr	r0, [sp, #208]	; 0xd0
   13e84:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13e88:	str	r2, [sp, #160]	; 0xa0
   13e8c:	adds	r9, sl, r0
   13e90:	ldr	r0, [sp, #220]	; 0xdc
   13e94:	str	r1, [sp, #208]	; 0xd0
   13e98:	adc	r0, r2, r0
   13e9c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13ea0:	adds	r6, r9, r1
   13ea4:	str	r0, [sp, #108]	; 0x6c
   13ea8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13eac:	ldr	r1, [sp, #108]	; 0x6c
   13eb0:	str	r2, [sp, #220]	; 0xdc
   13eb4:	str	r0, [sp, #192]	; 0xc0
   13eb8:	adc	r3, r1, r2
   13ebc:	ldr	r1, [sp, #264]	; 0x108
   13ec0:	ldr	r2, [sp, #60]	; 0x3c
   13ec4:	eor	r4, r3, r1
   13ec8:	ldr	r1, [sp, #68]	; 0x44
   13ecc:	adds	r7, r2, r1
   13ed0:	ldr	r1, [sp, #72]	; 0x48
   13ed4:	ldr	r2, [sp, #64]	; 0x40
   13ed8:	str	r7, [sp, #264]	; 0x108
   13edc:	adc	ip, r2, r1
   13ee0:	ldr	r1, [sp, #268]	; 0x10c
   13ee4:	adds	r9, r4, r7
   13ee8:	str	ip, [sp, #48]	; 0x30
   13eec:	eor	r2, r6, r1
   13ef0:	ldr	r1, [sp, #160]	; 0xa0
   13ef4:	adc	ip, r2, ip
   13ef8:	adds	r6, r5, r6
   13efc:	ldr	r5, [sp, #164]	; 0xa4
   13f00:	adc	r3, r0, r3
   13f04:	ldr	r0, [sp, #188]	; 0xbc
   13f08:	eor	lr, ip, r1
   13f0c:	eor	r1, r9, sl
   13f10:	lsl	r7, r1, #8
   13f14:	lsr	r1, r1, #24
   13f18:	orr	r1, r1, lr, lsl #8
   13f1c:	orr	sl, r7, lr, lsr #24
   13f20:	adds	r6, r6, r1
   13f24:	adc	r3, r3, sl
   13f28:	adds	r7, r8, r0
   13f2c:	ldr	r0, [sp, #184]	; 0xb8
   13f30:	ldr	r8, [fp, #-52]	; 0xffffffcc
   13f34:	adc	lr, r5, r0
   13f38:	adds	r0, r7, r6
   13f3c:	ldr	r5, [sp, #80]	; 0x50
   13f40:	str	r8, [sp, #184]	; 0xb8
   13f44:	str	r0, [sp, #36]	; 0x24
   13f48:	adc	r0, lr, r3
   13f4c:	str	r0, [sp, #160]	; 0xa0
   13f50:	eor	r0, r3, r2
   13f54:	eor	r3, r6, r4
   13f58:	lsl	r6, r3, #16
   13f5c:	lsr	r3, r3, #16
   13f60:	orr	r7, r6, r0, lsr #16
   13f64:	orr	r0, r3, r0, lsl #16
   13f68:	adds	r2, r0, r9
   13f6c:	str	r0, [sp, #72]	; 0x48
   13f70:	str	r7, [sp, #60]	; 0x3c
   13f74:	adc	r3, r7, ip
   13f78:	mov	r7, r2
   13f7c:	eor	r1, r2, r1
   13f80:	str	r2, [sp, #96]	; 0x60
   13f84:	eor	r0, r3, sl
   13f88:	str	r7, [sp, #360]	; 0x168
   13f8c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13f90:	str	r3, [sp, #364]	; 0x16c
   13f94:	str	r3, [sp, #108]	; 0x6c
   13f98:	lsl	r2, r0, #1
   13f9c:	orr	r6, r2, r1, lsr #31
   13fa0:	lsl	r1, r1, #1
   13fa4:	ldr	r2, [sp, #264]	; 0x108
   13fa8:	orr	r4, r1, r0, lsr #31
   13fac:	ldr	r0, [sp, #52]	; 0x34
   13fb0:	ldr	r1, [sp, #48]	; 0x30
   13fb4:	str	r6, [sp, #68]	; 0x44
   13fb8:	str	r6, [sp, #324]	; 0x144
   13fbc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13fc0:	str	r7, [sp, #268]	; 0x10c
   13fc4:	str	r4, [sp, #64]	; 0x40
   13fc8:	str	r4, [sp, #320]	; 0x140
   13fcc:	ldr	r4, [fp, #-56]	; 0xffffffc8
   13fd0:	eor	r0, r1, r0
   13fd4:	ldr	r1, [sp, #56]	; 0x38
   13fd8:	str	r6, [sp, #264]	; 0x108
   13fdc:	str	r4, [sp, #188]	; 0xbc
   13fe0:	eor	r1, r2, r1
   13fe4:	lsl	r2, r0, #1
   13fe8:	orr	r2, r2, r1, lsr #31
   13fec:	lsl	r1, r1, #1
   13ff0:	orr	r0, r1, r0, lsr #31
   13ff4:	ldr	r1, [sp, #84]	; 0x54
   13ff8:	adds	r1, r0, r1
   13ffc:	adc	r5, r2, r5
   14000:	adds	r1, r1, r7
   14004:	ldr	r7, [sp, #252]	; 0xfc
   14008:	adc	r3, r5, r6
   1400c:	eor	r6, r3, r7
   14010:	ldr	r7, [sp, #248]	; 0xf8
   14014:	eor	r5, r1, r7
   14018:	ldr	r7, [sp, #256]	; 0x100
   1401c:	adds	lr, r6, r7
   14020:	ldr	r7, [sp, #260]	; 0x104
   14024:	eor	r0, lr, r0
   14028:	adc	ip, r5, r7
   1402c:	lsl	r7, r0, #8
   14030:	lsr	r0, r0, #24
   14034:	adds	r1, r4, r1
   14038:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1403c:	eor	r2, ip, r2
   14040:	orr	r0, r0, r2, lsl #8
   14044:	orr	r7, r7, r2, lsr #24
   14048:	adc	r2, r8, r3
   1404c:	ldr	r8, [sp, #152]	; 0x98
   14050:	adds	r3, r1, r0
   14054:	str	r4, [sp, #256]	; 0x100
   14058:	adc	r1, r2, r7
   1405c:	eor	r2, r3, r6
   14060:	str	r3, [sp, #44]	; 0x2c
   14064:	str	r1, [sp, #48]	; 0x30
   14068:	lsl	r3, r2, #16
   1406c:	eor	r1, r1, r5
   14070:	lsr	r2, r2, #16
   14074:	orr	r9, r2, r1, lsl #16
   14078:	orr	r6, r3, r1, lsr #16
   1407c:	ldr	r1, [sp, #160]	; 0xa0
   14080:	adds	r2, r9, lr
   14084:	eor	r0, r2, r0
   14088:	str	r2, [sp, #24]
   1408c:	eor	r1, r6, r1
   14090:	str	r1, [sp, #20]
   14094:	adc	r1, r6, ip
   14098:	str	r1, [sp, #32]
   1409c:	eor	r1, r1, r7
   140a0:	lsl	r7, r1, #1
   140a4:	orr	r3, r7, r0, lsr #31
   140a8:	lsl	r0, r0, #1
   140ac:	orr	r6, r0, r1, lsr #31
   140b0:	ldr	r0, [sp, #76]	; 0x4c
   140b4:	ldr	r1, [sp, #88]	; 0x58
   140b8:	str	r3, [sp, #52]	; 0x34
   140bc:	str	r3, [sp, #332]	; 0x14c
   140c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   140c4:	str	r6, [sp, #56]	; 0x38
   140c8:	str	r6, [sp, #328]	; 0x148
   140cc:	ldr	r6, [fp, #-44]	; 0xffffffd4
   140d0:	adds	r7, r0, r8
   140d4:	ldr	r0, [sp, #156]	; 0x9c
   140d8:	str	r3, [sp, #252]	; 0xfc
   140dc:	str	r6, [sp, #248]	; 0xf8
   140e0:	adc	r2, r1, r0
   140e4:	adds	r7, r7, r3
   140e8:	ldr	r3, [sp, #148]	; 0x94
   140ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   140f0:	adc	r5, r2, r6
   140f4:	ldr	r2, [sp, #168]	; 0xa8
   140f8:	str	r1, [sp, #260]	; 0x104
   140fc:	eor	ip, r5, r2
   14100:	ldr	r2, [sp, #92]	; 0x5c
   14104:	adds	lr, ip, r3
   14108:	ldr	r3, [sp, #144]	; 0x90
   1410c:	eor	r2, r7, r2
   14110:	adc	sl, r2, r3
   14114:	eor	r3, sl, r0
   14118:	eor	r0, lr, r8
   1411c:	lsl	r6, r0, #8
   14120:	lsr	r0, r0, #24
   14124:	orr	r8, r6, r3, lsr #24
   14128:	orr	r6, r0, r3, lsl #8
   1412c:	adds	r0, r1, r7
   14130:	ldr	r3, [sp, #36]	; 0x24
   14134:	ldr	r7, [sp, #160]	; 0xa0
   14138:	adc	r5, r4, r5
   1413c:	adds	r1, r0, r6
   14140:	adc	r0, r5, r8
   14144:	str	r1, [sp, #28]
   14148:	str	r0, [sp, #144]	; 0x90
   1414c:	eor	r0, r0, r2
   14150:	eor	r2, r1, ip
   14154:	ldr	ip, [sp, #20]
   14158:	lsl	r4, r2, #16
   1415c:	lsr	r2, r2, #16
   14160:	orr	r1, r4, r0, lsr #16
   14164:	orr	r0, r2, r0, lsl #16
   14168:	eor	r2, r9, r3
   1416c:	adds	r5, r0, lr
   14170:	str	r0, [sp, #152]	; 0x98
   14174:	ldr	r0, [sp, #164]	; 0xa4
   14178:	str	r1, [sp, #156]	; 0x9c
   1417c:	adc	r4, r1, sl
   14180:	adds	r9, r5, ip
   14184:	adc	lr, r4, r2
   14188:	eor	r1, lr, r0
   1418c:	ldr	r0, [sp, #40]	; 0x28
   14190:	eor	r0, r9, r0
   14194:	lsl	sl, r0, #8
   14198:	lsr	r0, r0, #24
   1419c:	orr	sl, sl, r1, lsr #24
   141a0:	orr	r0, r0, r1, lsl #8
   141a4:	ldr	r1, [sp, #180]	; 0xb4
   141a8:	adds	r1, r3, r1
   141ac:	ldr	r3, [sp, #176]	; 0xb0
   141b0:	adc	r3, r7, r3
   141b4:	adds	r7, r1, r0
   141b8:	adc	r1, r3, sl
   141bc:	str	r7, [sp, #80]	; 0x50
   141c0:	str	r1, [sp, #84]	; 0x54
   141c4:	eor	r1, r1, r2
   141c8:	eor	r2, r7, ip
   141cc:	ldr	r7, [sp, #116]	; 0x74
   141d0:	lsl	r3, r2, #16
   141d4:	lsr	r2, r2, #16
   141d8:	orr	r3, r3, r1, lsr #16
   141dc:	orr	r1, r2, r1, lsl #16
   141e0:	adds	r2, r1, r9
   141e4:	str	r1, [sp, #148]	; 0x94
   141e8:	str	r3, [sp, #160]	; 0xa0
   141ec:	adc	r1, r3, lr
   141f0:	str	r2, [sp, #164]	; 0xa4
   141f4:	eor	r0, r2, r0
   141f8:	ldr	r3, [sp, #112]	; 0x70
   141fc:	str	r1, [sp, #168]	; 0xa8
   14200:	eor	r1, r1, sl
   14204:	lsl	r2, r1, #1
   14208:	orr	lr, r2, r0, lsr #31
   1420c:	lsl	r0, r0, #1
   14210:	orr	r9, r0, r1, lsr #31
   14214:	eor	r0, r4, r8
   14218:	eor	r1, r5, r6
   1421c:	lsl	r2, r0, #1
   14220:	str	lr, [sp, #4]
   14224:	orr	r2, r2, r1, lsr #31
   14228:	lsl	r1, r1, #1
   1422c:	str	r9, [sp, #8]
   14230:	orr	r0, r1, r0, lsr #31
   14234:	ldr	r1, [sp, #252]	; 0xfc
   14238:	adds	r1, r1, r3
   1423c:	ldr	r3, [sp, #248]	; 0xf8
   14240:	adc	r3, r3, r7
   14244:	ldr	r7, [sp, #60]	; 0x3c
   14248:	adds	r1, r1, r0
   1424c:	adc	r3, r3, r2
   14250:	eor	r6, r3, r7
   14254:	ldr	r7, [sp, #72]	; 0x48
   14258:	str	r6, [sp, #60]	; 0x3c
   1425c:	eor	r4, r1, r7
   14260:	ldr	r7, [sp, #24]
   14264:	str	r4, [sp, #40]	; 0x28
   14268:	adds	r7, r6, r7
   1426c:	ldr	r6, [sp, #32]
   14270:	eor	r0, r7, r0
   14274:	str	r7, [sp, #72]	; 0x48
   14278:	adc	r6, r4, r6
   1427c:	ldr	r4, [sp, #64]	; 0x40
   14280:	str	r6, [sp, #76]	; 0x4c
   14284:	eor	r2, r6, r2
   14288:	lsl	r6, r0, #8
   1428c:	lsr	r0, r0, #24
   14290:	orr	r7, r6, r2, lsr #24
   14294:	orr	r2, r0, r2, lsl #8
   14298:	ldr	r0, [sp, #208]	; 0xd0
   1429c:	str	r2, [sp, #36]	; 0x24
   142a0:	str	r7, [sp, #32]
   142a4:	adds	r0, r1, r0
   142a8:	ldr	r1, [sp, #220]	; 0xdc
   142ac:	adc	r1, r3, r1
   142b0:	adds	r2, r0, r2
   142b4:	ldr	r0, [sp, #228]	; 0xe4
   142b8:	adc	r3, r1, r7
   142bc:	ldr	r1, [sp, #224]	; 0xe0
   142c0:	str	r2, [sp, #24]
   142c4:	str	r3, [sp, #20]
   142c8:	adds	r0, r9, r0
   142cc:	adc	r1, lr, r1
   142d0:	adds	lr, r0, r2
   142d4:	ldr	r0, [sp, #132]	; 0x84
   142d8:	ldr	r2, [sp, #44]	; 0x2c
   142dc:	adc	r9, r1, r3
   142e0:	ldr	r1, [sp, #128]	; 0x80
   142e4:	ldr	r3, [sp, #68]	; 0x44
   142e8:	adds	r0, r4, r0
   142ec:	adc	r1, r3, r1
   142f0:	adds	r2, r0, r2
   142f4:	ldr	r0, [sp, #48]	; 0x30
   142f8:	adc	r1, r1, r0
   142fc:	ldr	r0, [sp, #156]	; 0x9c
   14300:	eor	r6, r0, r1
   14304:	ldr	r0, [sp, #152]	; 0x98
   14308:	eor	r5, r0, r2
   1430c:	ldr	r0, [sp, #120]	; 0x78
   14310:	adds	r7, r6, r0
   14314:	ldr	r0, [sp, #124]	; 0x7c
   14318:	adc	r8, r5, r0
   1431c:	eor	r0, r7, r4
   14320:	lsl	r4, r0, #8
   14324:	eor	ip, r8, r3
   14328:	lsr	r0, r0, #24
   1432c:	orr	r3, r4, ip, lsr #24
   14330:	orr	r4, r0, ip, lsl #8
   14334:	ldr	r0, [sp, #260]	; 0x104
   14338:	str	r3, [sp, #12]
   1433c:	str	r4, [sp, #16]
   14340:	adds	r0, r0, r2
   14344:	ldr	r2, [sp, #256]	; 0x100
   14348:	adc	r1, r2, r1
   1434c:	adds	r2, r0, r4
   14350:	adc	r0, r1, r3
   14354:	eor	r1, r2, r6
   14358:	str	r2, [sp, #88]	; 0x58
   1435c:	ldr	r3, [sp, #56]	; 0x38
   14360:	str	r0, [sp, #92]	; 0x5c
   14364:	lsl	r2, r1, #16
   14368:	eor	r0, r0, r5
   1436c:	lsr	r1, r1, #16
   14370:	orr	r2, r2, r0, lsr #16
   14374:	orr	r0, r1, r0, lsl #16
   14378:	ldr	r1, [sp, #52]	; 0x34
   1437c:	adds	ip, r0, r7
   14380:	str	r0, [sp, #156]	; 0x9c
   14384:	ldr	r0, [sp, #188]	; 0xbc
   14388:	str	r2, [sp, #152]	; 0x98
   1438c:	adc	sl, r2, r8
   14390:	str	ip, [sp]
   14394:	adds	r2, r3, r0
   14398:	ldr	r0, [sp, #184]	; 0xb8
   1439c:	adc	r5, r1, r0
   143a0:	ldr	r0, [sp, #28]
   143a4:	adds	r2, r2, r0
   143a8:	ldr	r0, [sp, #144]	; 0x90
   143ac:	adc	r6, r5, r0
   143b0:	ldr	r0, [sp, #136]	; 0x88
   143b4:	eor	r8, r6, r0
   143b8:	ldr	r0, [sp, #140]	; 0x8c
   143bc:	eor	r7, r2, r0
   143c0:	ldr	r0, [sp, #96]	; 0x60
   143c4:	adds	r5, r8, r0
   143c8:	ldr	r0, [sp, #108]	; 0x6c
   143cc:	str	r5, [sp, #44]	; 0x2c
   143d0:	adc	r0, r7, r0
   143d4:	str	r0, [sp, #48]	; 0x30
   143d8:	eor	r1, r0, r1
   143dc:	eor	r0, r5, r3
   143e0:	lsl	r5, r0, #8
   143e4:	lsr	r0, r0, #24
   143e8:	orr	r3, r5, r1, lsr #24
   143ec:	orr	r5, r0, r1, lsl #8
   143f0:	ldr	r0, [sp, #216]	; 0xd8
   143f4:	ldr	r1, [sp, #212]	; 0xd4
   143f8:	str	r3, [sp, #64]	; 0x40
   143fc:	str	r5, [sp, #68]	; 0x44
   14400:	adds	r0, r2, r0
   14404:	adc	r1, r6, r1
   14408:	adds	r2, r0, r5
   1440c:	ldr	r6, [sp, #268]	; 0x10c
   14410:	adc	r0, r1, r3
   14414:	eor	r1, r2, r8
   14418:	str	r2, [sp, #124]	; 0x7c
   1441c:	str	r0, [sp, #128]	; 0x80
   14420:	lsr	r2, r1, #16
   14424:	eor	r0, r0, r7
   14428:	lsl	r1, r1, #16
   1442c:	orr	r3, r2, r0, lsl #16
   14430:	orr	r0, r1, r0, lsr #16
   14434:	str	r0, [sp, #56]	; 0x38
   14438:	eor	r2, r9, r0
   1443c:	ldr	r0, [sp, #4]
   14440:	str	r3, [sp, #52]	; 0x34
   14444:	eor	r1, lr, r3
   14448:	adds	r3, r2, ip
   1444c:	adc	r5, r1, sl
   14450:	eor	r7, r5, r0
   14454:	ldr	r0, [sp, #8]
   14458:	eor	r0, r3, r0
   1445c:	lsl	r8, r0, #8
   14460:	lsr	r0, r0, #24
   14464:	orr	r8, r8, r7, lsr #24
   14468:	orr	r0, r0, r7, lsl #8
   1446c:	adds	r7, lr, r6
   14470:	ldr	r6, [sp, #264]	; 0x108
   14474:	adc	r9, r9, r6
   14478:	adds	r7, r7, r0
   1447c:	adc	r6, r9, r8
   14480:	eor	r2, r7, r2
   14484:	str	r7, [sp, #116]	; 0x74
   14488:	lsl	r7, r2, #16
   1448c:	eor	r1, r6, r1
   14490:	lsr	r2, r2, #16
   14494:	str	r6, [sp, #120]	; 0x78
   14498:	orr	r4, r2, r1, lsl #16
   1449c:	orr	r6, r7, r1, lsr #16
   144a0:	adds	ip, r4, r3
   144a4:	mov	r3, r6
   144a8:	str	r6, [sp, #132]	; 0x84
   144ac:	str	r4, [sp, #136]	; 0x88
   144b0:	adc	lr, r6, r5
   144b4:	eor	r0, ip, r0
   144b8:	str	ip, [sp, #108]	; 0x6c
   144bc:	eor	r1, lr, r8
   144c0:	str	lr, [sp, #112]	; 0x70
   144c4:	lsl	r2, r1, #1
   144c8:	orr	r2, r2, r0, lsr #31
   144cc:	lsl	r0, r0, #1
   144d0:	orr	r0, r0, r1, lsr #31
   144d4:	ldr	r1, [sp, #16]
   144d8:	str	r2, [sp, #140]	; 0x8c
   144dc:	ldr	r2, [sp]
   144e0:	str	r0, [sp, #144]	; 0x90
   144e4:	ldr	r0, [sp, #12]
   144e8:	eor	r1, r2, r1
   144ec:	eor	r0, sl, r0
   144f0:	lsl	r2, r0, #1
   144f4:	orr	r2, r2, r1, lsr #31
   144f8:	lsl	r1, r1, #1
   144fc:	orr	r1, r1, r0, lsr #31
   14500:	ldr	r0, [sp, #80]	; 0x50
   14504:	str	r2, [sp, #16]
   14508:	str	r1, [sp, #28]
   1450c:	adds	r0, r1, r0
   14510:	ldr	r1, [sp, #20]
   14514:	str	r0, [sp, #12]
   14518:	ldr	r0, [sp, #84]	; 0x54
   1451c:	adc	r0, r2, r0
   14520:	ldr	r2, [sp, #24]
   14524:	str	r0, [sp, #8]
   14528:	ldr	r0, [sp, #40]	; 0x28
   1452c:	eor	r0, r1, r0
   14530:	ldr	r1, [sp, #60]	; 0x3c
   14534:	eor	r1, r2, r1
   14538:	lsl	r2, r1, #16
   1453c:	lsr	r1, r1, #16
   14540:	orr	r7, r2, r0, lsr #16
   14544:	orr	r8, r1, r0, lsl #16
   14548:	ldr	r0, [sp, #72]	; 0x48
   1454c:	str	r7, [sp, #372]	; 0x174
   14550:	str	r8, [sp, #368]	; 0x170
   14554:	adds	r9, r8, r0
   14558:	ldr	r0, [sp, #76]	; 0x4c
   1455c:	str	r9, [sp, #336]	; 0x150
   14560:	adc	sl, r7, r0
   14564:	ldr	r0, [sp, #32]
   14568:	str	sl, [sp, #340]	; 0x154
   1456c:	eor	r5, sl, r0
   14570:	ldr	r0, [sp, #36]	; 0x24
   14574:	lsl	r6, r5, #1
   14578:	eor	r2, r9, r0
   1457c:	orr	r1, r6, r2, lsr #31
   14580:	lsl	r2, r2, #1
   14584:	ldr	r6, [fp, #-156]	; 0xffffff64
   14588:	orr	r0, r2, r5, lsr #31
   1458c:	ldr	r2, [sp, #12]
   14590:	str	r1, [sp, #308]	; 0x134
   14594:	str	r1, [sp, #84]	; 0x54
   14598:	ldr	r1, [sp, #144]	; 0x90
   1459c:	str	r0, [sp, #76]	; 0x4c
   145a0:	str	r0, [sp, #304]	; 0x130
   145a4:	ldr	r0, [sp, #160]	; 0xa0
   145a8:	str	r6, [sp, #80]	; 0x50
   145ac:	str	r0, [sp, #380]	; 0x17c
   145b0:	ldr	r0, [sp, #148]	; 0x94
   145b4:	str	r0, [sp, #376]	; 0x178
   145b8:	ldr	r0, [sp, #168]	; 0xa8
   145bc:	str	r0, [sp, #348]	; 0x15c
   145c0:	ldr	r0, [sp, #164]	; 0xa4
   145c4:	str	r0, [sp, #344]	; 0x158
   145c8:	ldr	r0, [sp, #152]	; 0x98
   145cc:	str	r0, [sp, #388]	; 0x184
   145d0:	ldr	r0, [sp, #156]	; 0x9c
   145d4:	str	r0, [sp, #384]	; 0x180
   145d8:	ldr	r0, [fp, #-160]	; 0xffffff60
   145dc:	str	r3, [sp, #396]	; 0x18c
   145e0:	str	r4, [sp, #392]	; 0x188
   145e4:	str	lr, [sp, #356]	; 0x164
   145e8:	str	ip, [sp, #352]	; 0x160
   145ec:	ldr	r3, [sp, #140]	; 0x8c
   145f0:	str	r1, [sp, #312]	; 0x138
   145f4:	adds	r2, r2, r0
   145f8:	str	r0, [sp, #96]	; 0x60
   145fc:	ldr	r0, [sp, #8]
   14600:	str	r3, [sp, #316]	; 0x13c
   14604:	eor	r4, r2, r8
   14608:	adc	r6, r0, r6
   1460c:	ldr	r0, [sp, #44]	; 0x2c
   14610:	eor	lr, r6, r7
   14614:	ldr	r7, [sp, #52]	; 0x34
   14618:	str	lr, [sp, #32]
   1461c:	adds	r5, r7, r0
   14620:	ldr	r7, [sp, #56]	; 0x38
   14624:	ldr	r0, [sp, #48]	; 0x30
   14628:	str	r4, [sp, #56]	; 0x38
   1462c:	adc	ip, r7, r0
   14630:	adds	r0, lr, r5
   14634:	adc	r7, r4, ip
   14638:	ldr	r4, [sp, #16]
   1463c:	str	r0, [sp, #44]	; 0x2c
   14640:	str	r7, [sp, #48]	; 0x30
   14644:	eor	lr, r7, r4
   14648:	ldr	r4, [sp, #28]
   1464c:	eor	r4, r0, r4
   14650:	ldr	r0, [sp, #204]	; 0xcc
   14654:	lsl	r7, r4, #8
   14658:	lsr	r4, r4, #24
   1465c:	orr	r8, r7, lr, lsr #24
   14660:	orr	r7, r4, lr, lsl #8
   14664:	adds	r2, r2, r0
   14668:	ldr	r0, [sp, #200]	; 0xc8
   1466c:	str	r7, [sp, #24]
   14670:	str	r8, [sp, #16]
   14674:	adc	r6, r6, r0
   14678:	ldr	r0, [sp, #268]	; 0x10c
   1467c:	adds	r7, r2, r7
   14680:	ldr	r2, [sp, #88]	; 0x58
   14684:	adc	r4, r6, r8
   14688:	adds	r6, r1, r0
   1468c:	ldr	r0, [sp, #264]	; 0x108
   14690:	adc	r0, r3, r0
   14694:	adds	r1, r6, r7
   14698:	ldr	r6, [sp, #92]	; 0x5c
   1469c:	adc	lr, r0, r4
   146a0:	ldr	r0, [sp, #64]	; 0x40
   146a4:	str	r1, [sp, #72]	; 0x48
   146a8:	ldr	r1, [sp, #68]	; 0x44
   146ac:	str	lr, [sp, #28]
   146b0:	eor	r0, ip, r0
   146b4:	eor	r1, r5, r1
   146b8:	lsl	r3, r0, #1
   146bc:	orr	r3, r3, r1, lsr #31
   146c0:	lsl	r1, r1, #1
   146c4:	orr	r0, r1, r0, lsr #31
   146c8:	ldr	r1, [sp, #196]	; 0xc4
   146cc:	adds	r1, r2, r1
   146d0:	ldr	r2, [sp, #192]	; 0xc0
   146d4:	adc	r6, r6, r2
   146d8:	ldr	r2, [sp, #160]	; 0xa0
   146dc:	adds	r1, r1, r0
   146e0:	adc	r6, r6, r3
   146e4:	eor	ip, r6, r2
   146e8:	ldr	r2, [sp, #148]	; 0x94
   146ec:	adds	r9, ip, r9
   146f0:	eor	r0, r9, r0
   146f4:	lsl	r8, r0, #8
   146f8:	lsr	r0, r0, #24
   146fc:	eor	r2, r1, r2
   14700:	adc	sl, r2, sl
   14704:	eor	r3, sl, r3
   14708:	orr	r8, r8, r3, lsr #24
   1470c:	orr	r0, r0, r3, lsl #8
   14710:	ldr	r3, [sp, #244]	; 0xf4
   14714:	adds	r1, r1, r3
   14718:	ldr	r3, [sp, #240]	; 0xf0
   1471c:	adc	r3, r6, r3
   14720:	adds	r5, r1, r0
   14724:	adc	r1, r3, r8
   14728:	str	r5, [sp, #60]	; 0x3c
   1472c:	str	r1, [sp, #64]	; 0x40
   14730:	eor	r1, r1, r2
   14734:	eor	r2, r5, ip
   14738:	ldr	r5, [sp, #84]	; 0x54
   1473c:	lsl	r3, r2, #16
   14740:	lsr	r2, r2, #16
   14744:	orr	ip, r3, r1, lsr #16
   14748:	orr	r1, r2, r1, lsl #16
   1474c:	adds	r2, r1, r9
   14750:	str	r1, [sp, #92]	; 0x5c
   14754:	eor	r1, lr, ip
   14758:	str	r1, [sp, #20]
   1475c:	adc	r1, ip, sl
   14760:	str	r2, [sp, #36]	; 0x24
   14764:	eor	r0, r2, r0
   14768:	str	r1, [sp, #40]	; 0x28
   1476c:	eor	r1, r1, r8
   14770:	lsl	r2, r1, #1
   14774:	orr	r2, r2, r0, lsr #31
   14778:	lsl	r0, r0, #1
   1477c:	orr	r0, r0, r1, lsr #31
   14780:	ldr	r1, [sp, #32]
   14784:	str	r2, [sp, #160]	; 0xa0
   14788:	str	r0, [sp, #148]	; 0x94
   1478c:	ldr	r0, [sp, #56]	; 0x38
   14790:	eor	r1, r7, r1
   14794:	lsl	r2, r1, #16
   14798:	lsr	r1, r1, #16
   1479c:	eor	r0, r4, r0
   147a0:	orr	r3, r2, r0, lsr #16
   147a4:	orr	r0, r1, r0, lsl #16
   147a8:	ldr	r1, [sp, #44]	; 0x2c
   147ac:	str	r0, [sp, #52]	; 0x34
   147b0:	str	r3, [sp, #56]	; 0x38
   147b4:	adds	lr, r0, r1
   147b8:	ldr	r0, [sp, #48]	; 0x30
   147bc:	ldr	r1, [sp, #24]
   147c0:	str	lr, [sp, #360]	; 0x168
   147c4:	str	lr, [sp, #44]	; 0x2c
   147c8:	adc	r9, r3, r0
   147cc:	ldr	r0, [sp, #16]
   147d0:	eor	r1, lr, r1
   147d4:	str	r9, [sp, #364]	; 0x16c
   147d8:	str	r9, [sp, #48]	; 0x30
   147dc:	eor	r0, r9, r0
   147e0:	lsl	r2, r0, #1
   147e4:	orr	r8, r2, r1, lsr #31
   147e8:	lsl	r1, r1, #1
   147ec:	ldr	r2, [sp, #128]	; 0x80
   147f0:	orr	r6, r1, r0, lsr #31
   147f4:	ldr	r0, [sp, #236]	; 0xec
   147f8:	ldr	r1, [sp, #124]	; 0x7c
   147fc:	str	r8, [sp, #324]	; 0x144
   14800:	str	r8, [sp, #32]
   14804:	str	r6, [sp, #320]	; 0x140
   14808:	str	r6, [sp, #24]
   1480c:	adds	r0, r1, r0
   14810:	ldr	r1, [sp, #232]	; 0xe8
   14814:	adc	r7, r2, r1
   14818:	ldr	r2, [sp, #76]	; 0x4c
   1481c:	adds	r3, r0, r2
   14820:	ldr	r0, [sp, #152]	; 0x98
   14824:	adc	r4, r7, r5
   14828:	eor	sl, r4, r0
   1482c:	ldr	r0, [sp, #156]	; 0x9c
   14830:	eor	r7, r3, r0
   14834:	ldr	r0, [sp, #164]	; 0xa4
   14838:	adds	r1, sl, r0
   1483c:	ldr	r0, [sp, #168]	; 0xa8
   14840:	str	r1, [sp, #124]	; 0x7c
   14844:	adc	r0, r7, r0
   14848:	str	r0, [sp, #128]	; 0x80
   1484c:	eor	ip, r0, r5
   14850:	eor	r0, r1, r2
   14854:	lsl	r5, r0, #8
   14858:	lsr	r0, r0, #24
   1485c:	orr	r0, r0, ip, lsl #8
   14860:	orr	r1, r5, ip, lsr #24
   14864:	adds	ip, r0, r3
   14868:	str	r0, [sp, #156]	; 0x9c
   1486c:	ldr	r0, [sp, #148]	; 0x94
   14870:	str	r1, [sp, #152]	; 0x98
   14874:	adc	r2, r1, r4
   14878:	ldr	r4, [fp, #-136]	; 0xffffff78
   1487c:	str	r0, [sp, #328]	; 0x148
   14880:	ldr	r0, [sp, #160]	; 0xa0
   14884:	adds	r1, ip, r4
   14888:	str	r4, [sp, #88]	; 0x58
   1488c:	str	r1, [sp, #164]	; 0xa4
   14890:	eor	r1, r1, sl
   14894:	str	r0, [sp, #332]	; 0x14c
   14898:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1489c:	str	r0, [sp, #84]	; 0x54
   148a0:	adc	r0, r2, r0
   148a4:	lsl	r2, r1, #16
   148a8:	lsr	r1, r1, #16
   148ac:	str	r0, [sp, #168]	; 0xa8
   148b0:	eor	r0, r0, r7
   148b4:	ldr	r7, [sp, #20]
   148b8:	orr	r9, r2, r0, lsr #16
   148bc:	orr	r8, r1, r0, lsl #16
   148c0:	ldr	r0, [sp, #124]	; 0x7c
   148c4:	ldr	r2, [sp, #72]	; 0x48
   148c8:	adds	r5, r8, r0
   148cc:	ldr	r0, [sp, #128]	; 0x80
   148d0:	adc	lr, r9, r0
   148d4:	ldr	r0, [sp, #92]	; 0x5c
   148d8:	adds	r6, r5, r7
   148dc:	eor	r3, r2, r0
   148e0:	ldr	r0, [sp, #140]	; 0x8c
   148e4:	adc	r4, lr, r3
   148e8:	eor	r1, r4, r0
   148ec:	ldr	r0, [sp, #144]	; 0x90
   148f0:	eor	r0, r6, r0
   148f4:	lsl	sl, r0, #8
   148f8:	lsr	r0, r0, #24
   148fc:	orr	ip, r0, r1, lsl #8
   14900:	ldr	r0, [sp, #96]	; 0x60
   14904:	orr	sl, sl, r1, lsr #24
   14908:	adds	r1, r2, r0
   1490c:	ldr	r0, [sp, #80]	; 0x50
   14910:	ldr	r2, [sp, #28]
   14914:	adc	r2, r2, r0
   14918:	adds	r0, r1, ip
   1491c:	adc	r1, r2, sl
   14920:	eor	r2, r0, r7
   14924:	str	r0, [sp, #68]	; 0x44
   14928:	ldr	r7, [sp, #120]	; 0x78
   1492c:	str	r1, [sp, #72]	; 0x48
   14930:	eor	r1, r1, r3
   14934:	lsl	r3, r2, #16
   14938:	lsr	r2, r2, #16
   1493c:	orr	r3, r3, r1, lsr #16
   14940:	orr	r1, r2, r1, lsl #16
   14944:	adds	r2, r1, r6
   14948:	str	r1, [sp, #96]	; 0x60
   1494c:	str	r3, [sp, #92]	; 0x5c
   14950:	ldr	r6, [sp, #52]	; 0x34
   14954:	adc	r1, r3, r4
   14958:	str	r2, [sp, #124]	; 0x7c
   1495c:	eor	r0, r2, ip
   14960:	ldr	r3, [sp, #116]	; 0x74
   14964:	str	r1, [sp, #128]	; 0x80
   14968:	eor	r1, r1, sl
   1496c:	lsl	r2, r1, #1
   14970:	orr	ip, r2, r0, lsr #31
   14974:	lsl	r0, r0, #1
   14978:	orr	r4, r0, r1, lsr #31
   1497c:	ldr	r0, [sp, #152]	; 0x98
   14980:	ldr	r1, [sp, #156]	; 0x9c
   14984:	str	ip, [sp, #140]	; 0x8c
   14988:	str	r4, [sp, #144]	; 0x90
   1498c:	eor	r0, lr, r0
   14990:	eor	r1, r5, r1
   14994:	lsl	r2, r0, #1
   14998:	orr	r2, r2, r1, lsr #31
   1499c:	lsl	r1, r1, #1
   149a0:	orr	r0, r1, r0, lsr #31
   149a4:	ldr	r1, [sp, #196]	; 0xc4
   149a8:	adds	r1, r3, r1
   149ac:	ldr	r3, [sp, #192]	; 0xc0
   149b0:	adc	r3, r7, r3
   149b4:	adds	r1, r1, r0
   149b8:	ldr	r7, [sp, #56]	; 0x38
   149bc:	eor	r5, r1, r6
   149c0:	ldr	r6, [sp, #36]	; 0x24
   149c4:	adc	r3, r3, r2
   149c8:	str	r5, [sp, #52]	; 0x34
   149cc:	eor	r7, r3, r7
   149d0:	adds	r6, r7, r6
   149d4:	str	r7, [sp, #56]	; 0x38
   149d8:	ldr	r7, [sp, #40]	; 0x28
   149dc:	eor	r0, r6, r0
   149e0:	str	r6, [sp, #76]	; 0x4c
   149e4:	ldr	r6, [sp, #160]	; 0xa0
   149e8:	adc	r7, r5, r7
   149ec:	ldr	r5, [sp, #148]	; 0x94
   149f0:	str	r7, [sp, #80]	; 0x50
   149f4:	eor	r2, r7, r2
   149f8:	lsl	r7, r0, #8
   149fc:	lsr	r0, r0, #24
   14a00:	orr	r7, r7, r2, lsr #24
   14a04:	orr	r2, r0, r2, lsl #8
   14a08:	ldr	r0, [sp, #180]	; 0xb4
   14a0c:	str	r2, [sp, #156]	; 0x9c
   14a10:	str	r7, [sp, #152]	; 0x98
   14a14:	adds	r0, r1, r0
   14a18:	ldr	r1, [sp, #176]	; 0xb0
   14a1c:	adc	r1, r3, r1
   14a20:	adds	r2, r0, r2
   14a24:	ldr	r0, [sp, #208]	; 0xd0
   14a28:	adc	r3, r1, r7
   14a2c:	ldr	r1, [sp, #220]	; 0xdc
   14a30:	str	r2, [sp, #40]	; 0x28
   14a34:	ldr	r7, [sp, #24]
   14a38:	str	r3, [sp, #36]	; 0x24
   14a3c:	adds	r0, r4, r0
   14a40:	adc	r1, ip, r1
   14a44:	adds	r0, r0, r2
   14a48:	ldr	r2, [sp, #64]	; 0x40
   14a4c:	str	r0, [sp, #180]	; 0xb4
   14a50:	adc	r0, r1, r3
   14a54:	ldr	r1, [sp, #60]	; 0x3c
   14a58:	ldr	r3, [sp, #32]
   14a5c:	str	r0, [sp, #176]	; 0xb0
   14a60:	ldr	r0, [sp, #236]	; 0xec
   14a64:	adds	r0, r1, r0
   14a68:	ldr	r1, [sp, #232]	; 0xe8
   14a6c:	adc	r1, r2, r1
   14a70:	ldr	r2, [sp, #108]	; 0x6c
   14a74:	adds	r0, r0, r7
   14a78:	adc	r1, r1, r3
   14a7c:	eor	sl, r8, r0
   14a80:	eor	r9, r9, r1
   14a84:	adds	lr, r9, r2
   14a88:	ldr	r2, [sp, #112]	; 0x70
   14a8c:	eor	r7, lr, r7
   14a90:	lsl	r4, r7, #8
   14a94:	lsr	r7, r7, #24
   14a98:	adc	r8, sl, r2
   14a9c:	eor	r2, r8, r3
   14aa0:	orr	r3, r4, r2, lsr #24
   14aa4:	orr	r4, r7, r2, lsl #8
   14aa8:	ldr	r2, [sp, #204]	; 0xcc
   14aac:	str	r3, [sp, #28]
   14ab0:	str	r4, [sp, #32]
   14ab4:	adds	r0, r0, r2
   14ab8:	ldr	r2, [sp, #200]	; 0xc8
   14abc:	adc	r1, r1, r2
   14ac0:	adds	r2, r0, r4
   14ac4:	adc	r0, r1, r3
   14ac8:	eor	r1, r2, r9
   14acc:	str	r2, [sp, #60]	; 0x3c
   14ad0:	str	r0, [sp, #64]	; 0x40
   14ad4:	lsl	r2, r1, #16
   14ad8:	eor	r0, r0, sl
   14adc:	lsr	r1, r1, #16
   14ae0:	orr	r2, r2, r0, lsr #16
   14ae4:	orr	r0, r1, r0, lsl #16
   14ae8:	ldr	r1, [sp, #256]	; 0x100
   14aec:	adds	r9, r0, lr
   14af0:	str	r0, [sp, #112]	; 0x70
   14af4:	ldr	r0, [sp, #260]	; 0x104
   14af8:	str	r2, [sp, #108]	; 0x6c
   14afc:	adc	ip, r2, r8
   14b00:	str	r9, [sp, #24]
   14b04:	adds	r0, r5, r0
   14b08:	adc	r2, r6, r1
   14b0c:	ldr	r1, [sp, #164]	; 0xa4
   14b10:	adds	r1, r0, r1
   14b14:	ldr	r0, [sp, #168]	; 0xa8
   14b18:	adc	r7, r2, r0
   14b1c:	ldr	r0, [sp, #132]	; 0x84
   14b20:	eor	r3, r7, r0
   14b24:	ldr	r0, [sp, #136]	; 0x88
   14b28:	eor	r2, r1, r0
   14b2c:	ldr	r0, [sp, #44]	; 0x2c
   14b30:	adds	r4, r3, r0
   14b34:	ldr	r0, [sp, #48]	; 0x30
   14b38:	str	r4, [sp, #44]	; 0x2c
   14b3c:	adc	r0, r2, r0
   14b40:	str	r0, [sp, #48]	; 0x30
   14b44:	eor	sl, r0, r6
   14b48:	eor	r0, r4, r5
   14b4c:	lsl	r5, r0, #8
   14b50:	lsr	r0, r0, #24
   14b54:	orr	r6, r5, sl, lsr #24
   14b58:	orr	r5, r0, sl, lsl #8
   14b5c:	ldr	r0, [sp, #188]	; 0xbc
   14b60:	str	r6, [sp, #132]	; 0x84
   14b64:	str	r5, [sp, #136]	; 0x88
   14b68:	adds	r0, r1, r0
   14b6c:	ldr	r1, [sp, #184]	; 0xb8
   14b70:	adc	r1, r7, r1
   14b74:	adds	r7, r0, r5
   14b78:	adc	r0, r1, r6
   14b7c:	eor	r1, r7, r3
   14b80:	ldr	r6, [sp, #180]	; 0xb4
   14b84:	str	r7, [sp, #148]	; 0x94
   14b88:	str	r0, [sp, #160]	; 0xa0
   14b8c:	eor	r0, r0, r2
   14b90:	lsr	r2, r1, #16
   14b94:	lsl	r1, r1, #16
   14b98:	orr	r8, r2, r0, lsl #16
   14b9c:	ldr	r2, [sp, #176]	; 0xb0
   14ba0:	orr	r7, r1, r0, lsr #16
   14ba4:	ldr	r0, [sp, #140]	; 0x8c
   14ba8:	eor	r3, r6, r8
   14bac:	eor	lr, r2, r7
   14bb0:	adds	r4, lr, r9
   14bb4:	mov	r9, ip
   14bb8:	adc	r5, r3, ip
   14bbc:	eor	r1, r5, r0
   14bc0:	ldr	r0, [sp, #144]	; 0x90
   14bc4:	eor	r0, r4, r0
   14bc8:	lsl	sl, r0, #8
   14bcc:	lsr	r0, r0, #24
   14bd0:	orr	sl, sl, r1, lsr #24
   14bd4:	orr	r0, r0, r1, lsl #8
   14bd8:	ldr	r1, [sp, #252]	; 0xfc
   14bdc:	adds	r1, r6, r1
   14be0:	ldr	r6, [sp, #248]	; 0xf8
   14be4:	adc	ip, r2, r6
   14be8:	adds	r6, r1, r0
   14bec:	adc	r1, ip, sl
   14bf0:	eor	r2, r6, lr
   14bf4:	str	r6, [sp, #116]	; 0x74
   14bf8:	ldr	r6, [sp, #40]	; 0x28
   14bfc:	eor	ip, r1, r3
   14c00:	lsl	r3, r2, #16
   14c04:	lsr	r2, r2, #16
   14c08:	str	r1, [sp, #120]	; 0x78
   14c0c:	orr	r1, r2, ip, lsl #16
   14c10:	orr	r3, r3, ip, lsr #16
   14c14:	ldr	ip, [sp, #88]	; 0x58
   14c18:	adds	r2, r1, r4
   14c1c:	str	r1, [sp, #168]	; 0xa8
   14c20:	str	r3, [sp, #164]	; 0xa4
   14c24:	adc	r1, r3, r5
   14c28:	str	r2, [sp, #140]	; 0x8c
   14c2c:	eor	r0, r2, r0
   14c30:	ldr	r3, [sp, #72]	; 0x48
   14c34:	str	r1, [sp, #144]	; 0x90
   14c38:	eor	r1, r1, sl
   14c3c:	ldr	sl, [sp, #84]	; 0x54
   14c40:	lsl	r2, r1, #1
   14c44:	orr	r2, r2, r0, lsr #31
   14c48:	lsl	r0, r0, #1
   14c4c:	orr	r0, r0, r1, lsr #31
   14c50:	ldr	r1, [sp, #32]
   14c54:	str	r2, [sp, #180]	; 0xb4
   14c58:	ldr	r2, [sp, #24]
   14c5c:	str	r0, [sp, #176]	; 0xb0
   14c60:	ldr	r0, [sp, #28]
   14c64:	eor	r1, r2, r1
   14c68:	eor	r0, r9, r0
   14c6c:	lsl	r2, r0, #1
   14c70:	orr	r2, r2, r1, lsr #31
   14c74:	lsl	r1, r1, #1
   14c78:	orr	r0, r1, r0, lsr #31
   14c7c:	ldr	r1, [sp, #68]	; 0x44
   14c80:	adds	r1, r1, ip
   14c84:	adc	r3, r3, sl
   14c88:	adds	r5, r1, r0
   14c8c:	ldr	r1, [sp, #44]	; 0x2c
   14c90:	adc	r3, r3, r2
   14c94:	adds	r9, r8, r1
   14c98:	ldr	r1, [sp, #48]	; 0x30
   14c9c:	adc	r8, r7, r1
   14ca0:	ldr	r1, [sp, #52]	; 0x34
   14ca4:	ldr	r7, [sp, #36]	; 0x24
   14ca8:	eor	r1, r7, r1
   14cac:	ldr	r7, [sp, #56]	; 0x38
   14cb0:	eor	r7, r6, r7
   14cb4:	lsr	r6, r7, #16
   14cb8:	lsl	r7, r7, #16
   14cbc:	orr	lr, r7, r1, lsr #16
   14cc0:	orr	r6, r6, r1, lsl #16
   14cc4:	ldr	r7, [sp, #228]	; 0xe4
   14cc8:	eor	r1, lr, r3
   14ccc:	eor	r4, r6, r5
   14cd0:	str	r1, [sp, #72]	; 0x48
   14cd4:	adds	r1, r1, r9
   14cd8:	str	r4, [sp, #48]	; 0x30
   14cdc:	adc	r4, r4, r8
   14ce0:	eor	r0, r1, r0
   14ce4:	str	r1, [sp, #56]	; 0x38
   14ce8:	str	r4, [sp, #68]	; 0x44
   14cec:	eor	r2, r4, r2
   14cf0:	lsl	r4, r0, #8
   14cf4:	lsr	r0, r0, #24
   14cf8:	orr	r1, r4, r2, lsr #24
   14cfc:	orr	r4, r0, r2, lsl #8
   14d00:	ldr	r0, [sp, #216]	; 0xd8
   14d04:	str	r1, [sp, #40]	; 0x28
   14d08:	str	r4, [sp, #44]	; 0x2c
   14d0c:	adds	r2, r5, r0
   14d10:	ldr	r0, [sp, #212]	; 0xd4
   14d14:	adc	r3, r3, r0
   14d18:	adds	r0, r2, r4
   14d1c:	ldr	r2, [sp, #60]	; 0x3c
   14d20:	adc	r1, r3, r1
   14d24:	adds	r3, r0, ip
   14d28:	str	r0, [sp, #32]
   14d2c:	str	r1, [sp, #28]
   14d30:	adc	r0, r1, sl
   14d34:	ldr	r1, [sp, #176]	; 0xb0
   14d38:	adds	r1, r3, r1
   14d3c:	str	r1, [sp, #88]	; 0x58
   14d40:	ldr	r1, [sp, #180]	; 0xb4
   14d44:	adc	r5, r0, r1
   14d48:	ldr	r1, [sp, #136]	; 0x88
   14d4c:	ldr	r0, [sp, #132]	; 0x84
   14d50:	str	r5, [sp, #84]	; 0x54
   14d54:	eor	r3, r9, r1
   14d58:	ldr	r1, [sp, #244]	; 0xf4
   14d5c:	eor	r0, r8, r0
   14d60:	lsl	r4, r0, #1
   14d64:	orr	r9, r4, r3, lsr #31
   14d68:	lsl	r3, r3, #1
   14d6c:	orr	r0, r3, r0, lsr #31
   14d70:	adds	r3, r2, r1
   14d74:	ldr	r1, [sp, #240]	; 0xf0
   14d78:	ldr	r2, [sp, #64]	; 0x40
   14d7c:	adc	r4, r2, r1
   14d80:	ldr	r1, [sp, #92]	; 0x5c
   14d84:	adds	r3, r3, r0
   14d88:	adc	r4, r4, r9
   14d8c:	str	r1, [sp, #380]	; 0x17c
   14d90:	eor	ip, r4, r1
   14d94:	ldr	r1, [sp, #76]	; 0x4c
   14d98:	str	r6, [sp, #368]	; 0x170
   14d9c:	str	lr, [sp, #372]	; 0x174
   14da0:	adds	r6, r6, r1
   14da4:	ldr	r1, [sp, #80]	; 0x50
   14da8:	adc	r8, lr, r1
   14dac:	ldr	r1, [sp, #96]	; 0x60
   14db0:	str	r1, [sp, #376]	; 0x178
   14db4:	eor	lr, r3, r1
   14db8:	adds	r1, ip, r6
   14dbc:	str	r8, [sp, #340]	; 0x154
   14dc0:	str	r6, [sp, #336]	; 0x150
   14dc4:	adc	r2, lr, r8
   14dc8:	eor	r0, r1, r0
   14dcc:	adds	r3, r3, r7
   14dd0:	ldr	r7, [sp, #224]	; 0xe0
   14dd4:	lsl	sl, r0, #8
   14dd8:	eor	r9, r2, r9
   14ddc:	lsr	r0, r0, #24
   14de0:	orr	r0, r0, r9, lsl #8
   14de4:	orr	sl, sl, r9, lsr #24
   14de8:	adc	r4, r4, r7
   14dec:	adds	r7, r3, r0
   14df0:	adc	r3, r4, sl
   14df4:	eor	r4, r7, ip
   14df8:	str	r7, [sp, #92]	; 0x5c
   14dfc:	str	r3, [sp, #96]	; 0x60
   14e00:	eor	r3, r3, lr
   14e04:	lsl	r7, r4, #16
   14e08:	lsr	r4, r4, #16
   14e0c:	ldr	lr, [sp, #124]	; 0x7c
   14e10:	orr	r7, r7, r3, lsr #16
   14e14:	orr	r3, r4, r3, lsl #16
   14e18:	str	r3, [sp, #52]	; 0x34
   14e1c:	adds	r3, r3, r1
   14e20:	eor	r1, r5, r7
   14e24:	str	r1, [sp, #36]	; 0x24
   14e28:	adc	r1, r7, r2
   14e2c:	eor	r0, r3, r0
   14e30:	str	r3, [sp, #76]	; 0x4c
   14e34:	str	r1, [sp, #80]	; 0x50
   14e38:	eor	r1, r1, sl
   14e3c:	ldr	sl, [sp, #128]	; 0x80
   14e40:	lsl	r2, r1, #1
   14e44:	orr	r2, r2, r0, lsr #31
   14e48:	lsl	r0, r0, #1
   14e4c:	orr	r0, r0, r1, lsr #31
   14e50:	ldr	r1, [sp, #28]
   14e54:	str	r2, [sp, #136]	; 0x88
   14e58:	ldr	r2, [sp, #32]
   14e5c:	str	r0, [sp, #132]	; 0x84
   14e60:	ldr	r0, [sp, #48]	; 0x30
   14e64:	eor	r0, r1, r0
   14e68:	ldr	r1, [sp, #72]	; 0x48
   14e6c:	eor	r1, r2, r1
   14e70:	lsl	r2, r1, #16
   14e74:	lsr	r1, r1, #16
   14e78:	orr	r3, r2, r0, lsr #16
   14e7c:	orr	r0, r1, r0, lsl #16
   14e80:	ldr	r1, [sp, #56]	; 0x38
   14e84:	str	r0, [sp, #72]	; 0x48
   14e88:	str	r3, [sp, #64]	; 0x40
   14e8c:	adds	r2, r0, r1
   14e90:	ldr	r0, [sp, #68]	; 0x44
   14e94:	ldr	r1, [sp, #44]	; 0x2c
   14e98:	str	r2, [sp, #60]	; 0x3c
   14e9c:	adc	r9, r3, r0
   14ea0:	ldr	r0, [sp, #40]	; 0x28
   14ea4:	eor	r1, r2, r1
   14ea8:	str	r9, [sp, #68]	; 0x44
   14eac:	eor	r0, r9, r0
   14eb0:	lsl	r3, r0, #1
   14eb4:	orr	ip, r3, r1, lsr #31
   14eb8:	lsl	r1, r1, #1
   14ebc:	orr	r1, r1, r0, lsr #31
   14ec0:	ldr	r0, [sp, #152]	; 0x98
   14ec4:	str	ip, [sp, #48]	; 0x30
   14ec8:	str	r1, [sp, #40]	; 0x28
   14ecc:	eor	r3, r8, r0
   14ed0:	ldr	r0, [sp, #156]	; 0x9c
   14ed4:	ldr	r8, [sp, #108]	; 0x6c
   14ed8:	eor	r7, r6, r0
   14edc:	lsl	r0, r3, #1
   14ee0:	ldr	r6, [sp, #112]	; 0x70
   14ee4:	orr	r4, r0, r7, lsr #31
   14ee8:	ldr	r0, [sp, #148]	; 0x94
   14eec:	lsl	r7, r7, #1
   14ef0:	orr	r5, r7, r3, lsr #31
   14ef4:	ldr	r3, [fp, #-84]	; 0xffffffac
   14ef8:	str	r4, [sp, #308]	; 0x134
   14efc:	str	r5, [sp, #304]	; 0x130
   14f00:	str	lr, [sp, #344]	; 0x158
   14f04:	str	sl, [sp, #348]	; 0x15c
   14f08:	str	r8, [sp, #388]	; 0x184
   14f0c:	str	r6, [sp, #384]	; 0x180
   14f10:	adds	r7, r5, r0
   14f14:	ldr	r0, [sp, #160]	; 0xa0
   14f18:	str	r3, [sp, #148]	; 0x94
   14f1c:	adc	r0, r4, r0
   14f20:	str	r0, [sp, #56]	; 0x38
   14f24:	ldr	r0, [sp, #164]	; 0xa4
   14f28:	str	r0, [sp, #396]	; 0x18c
   14f2c:	ldr	r0, [sp, #168]	; 0xa8
   14f30:	str	r0, [sp, #392]	; 0x188
   14f34:	ldr	r0, [sp, #140]	; 0x8c
   14f38:	str	r0, [sp, #352]	; 0x160
   14f3c:	ldr	r0, [sp, #144]	; 0x90
   14f40:	str	r0, [sp, #356]	; 0x164
   14f44:	ldr	r0, [sp, #176]	; 0xb0
   14f48:	str	r0, [sp, #312]	; 0x138
   14f4c:	ldr	r0, [sp, #180]	; 0xb4
   14f50:	str	r2, [sp, #360]	; 0x168
   14f54:	add	r2, sp, #316	; 0x13c
   14f58:	str	r9, [sp, #364]	; 0x16c
   14f5c:	stm	r2, {r0, r1, ip}
   14f60:	ldr	r0, [sp, #132]	; 0x84
   14f64:	ldr	r2, [fp, #-128]	; 0xffffff80
   14f68:	ldr	r1, [fp, #-124]	; 0xffffff84
   14f6c:	str	r0, [sp, #328]	; 0x148
   14f70:	ldr	r0, [sp, #136]	; 0x88
   14f74:	str	r1, [sp, #156]	; 0x9c
   14f78:	str	r2, [sp, #160]	; 0xa0
   14f7c:	str	r0, [sp, #332]	; 0x14c
   14f80:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14f84:	str	r0, [sp, #152]	; 0x98
   14f88:	adds	r7, r7, r0
   14f8c:	ldr	r0, [sp, #56]	; 0x38
   14f90:	adc	ip, r0, r3
   14f94:	eor	r3, r7, r6
   14f98:	eor	r0, ip, r8
   14f9c:	adds	r8, r0, lr
   14fa0:	eor	r6, r8, r5
   14fa4:	adc	lr, r3, sl
   14fa8:	lsl	r5, r6, #8
   14fac:	eor	r4, lr, r4
   14fb0:	lsr	r6, r6, #24
   14fb4:	orr	sl, r5, r4, lsr #24
   14fb8:	orr	r5, r6, r4, lsl #8
   14fbc:	adds	r6, r2, r7
   14fc0:	adc	r7, r1, ip
   14fc4:	adds	r1, r6, r5
   14fc8:	adc	r2, r7, sl
   14fcc:	eor	r0, r1, r0
   14fd0:	str	r1, [sp, #44]	; 0x2c
   14fd4:	eor	r6, r2, r3
   14fd8:	lsl	r3, r0, #16
   14fdc:	lsr	r0, r0, #16
   14fe0:	str	r2, [sp, #56]	; 0x38
   14fe4:	ldr	r2, [sp, #88]	; 0x58
   14fe8:	orr	r0, r0, r6, lsl #16
   14fec:	orr	r1, r3, r6, lsr #16
   14ff0:	ldr	r3, [sp, #36]	; 0x24
   14ff4:	adds	r6, r0, r8
   14ff8:	str	r0, [sp, #112]	; 0x70
   14ffc:	ldr	r0, [sp, #52]	; 0x34
   15000:	str	r1, [sp, #32]
   15004:	adc	r4, r1, lr
   15008:	adds	r8, r6, r3
   1500c:	eor	r7, r2, r0
   15010:	ldr	r0, [sp, #180]	; 0xb4
   15014:	adc	r9, r4, r7
   15018:	eor	r1, r9, r0
   1501c:	ldr	r0, [sp, #176]	; 0xb0
   15020:	eor	r0, r8, r0
   15024:	lsl	lr, r0, #8
   15028:	lsr	r0, r0, #24
   1502c:	orr	ip, r0, r1, lsl #8
   15030:	orr	lr, lr, r1, lsr #24
   15034:	ldr	r1, [sp, #228]	; 0xe4
   15038:	ldr	r0, [sp, #84]	; 0x54
   1503c:	adds	r1, r2, r1
   15040:	ldr	r2, [sp, #224]	; 0xe0
   15044:	adc	r2, r0, r2
   15048:	adds	r0, r1, ip
   1504c:	adc	r1, r2, lr
   15050:	eor	r2, r0, r3
   15054:	str	r0, [sp, #124]	; 0x7c
   15058:	ldr	r3, [sp, #116]	; 0x74
   1505c:	str	r1, [sp, #128]	; 0x80
   15060:	eor	r1, r1, r7
   15064:	lsl	r7, r2, #16
   15068:	lsr	r2, r2, #16
   1506c:	orr	r7, r7, r1, lsr #16
   15070:	orr	r1, r2, r1, lsl #16
   15074:	adds	r2, r1, r8
   15078:	str	r1, [sp, #88]	; 0x58
   1507c:	str	r7, [sp, #84]	; 0x54
   15080:	adc	r1, r7, r9
   15084:	str	r2, [sp, #176]	; 0xb0
   15088:	eor	r0, r2, ip
   1508c:	ldr	r7, [sp, #120]	; 0x78
   15090:	str	r1, [sp, #180]	; 0xb4
   15094:	eor	r1, r1, lr
   15098:	lsl	r2, r1, #1
   1509c:	orr	ip, r2, r0, lsr #31
   150a0:	lsl	r0, r0, #1
   150a4:	orr	lr, r0, r1, lsr #31
   150a8:	eor	r0, r4, sl
   150ac:	eor	r1, r6, r5
   150b0:	lsl	r2, r0, #1
   150b4:	str	ip, [sp, #20]
   150b8:	orr	r2, r2, r1, lsr #31
   150bc:	lsl	r1, r1, #1
   150c0:	str	lr, [sp, #24]
   150c4:	orr	r0, r1, r0, lsr #31
   150c8:	ldr	r1, [sp, #244]	; 0xf4
   150cc:	adds	r1, r3, r1
   150d0:	ldr	r3, [sp, #240]	; 0xf0
   150d4:	adc	r3, r7, r3
   150d8:	ldr	r7, [sp, #64]	; 0x40
   150dc:	adds	r1, r1, r0
   150e0:	adc	r3, r3, r2
   150e4:	eor	r6, r3, r7
   150e8:	ldr	r7, [sp, #72]	; 0x48
   150ec:	str	r6, [sp, #120]	; 0x78
   150f0:	eor	r5, r1, r7
   150f4:	ldr	r7, [sp, #76]	; 0x4c
   150f8:	str	r5, [sp, #116]	; 0x74
   150fc:	adds	r6, r6, r7
   15100:	ldr	r7, [sp, #80]	; 0x50
   15104:	eor	r0, r6, r0
   15108:	str	r6, [sp, #64]	; 0x40
   1510c:	ldr	r6, [sp, #48]	; 0x30
   15110:	adc	r7, r5, r7
   15114:	ldr	r5, [sp, #40]	; 0x28
   15118:	str	r7, [sp, #72]	; 0x48
   1511c:	eor	r2, r7, r2
   15120:	lsl	r7, r0, #8
   15124:	lsr	r0, r0, #24
   15128:	orr	r7, r7, r2, lsr #24
   1512c:	orr	r2, r0, r2, lsl #8
   15130:	ldr	r0, [sp, #152]	; 0x98
   15134:	str	r2, [sp, #80]	; 0x50
   15138:	str	r7, [sp, #76]	; 0x4c
   1513c:	adds	r0, r1, r0
   15140:	ldr	r1, [sp, #148]	; 0x94
   15144:	adc	r1, r3, r1
   15148:	adds	r2, r0, r2
   1514c:	ldr	r0, [sp, #204]	; 0xcc
   15150:	adc	r3, r1, r7
   15154:	ldr	r1, [sp, #200]	; 0xc8
   15158:	str	r2, [sp, #108]	; 0x6c
   1515c:	ldr	r7, [sp, #140]	; 0x8c
   15160:	str	r3, [sp, #52]	; 0x34
   15164:	adds	r0, lr, r0
   15168:	adc	r1, ip, r1
   1516c:	adds	r0, r0, r2
   15170:	ldr	r2, [sp, #96]	; 0x60
   15174:	adc	lr, r1, r3
   15178:	str	r0, [sp, #16]
   1517c:	ldr	r0, [sp, #188]	; 0xbc
   15180:	ldr	r1, [sp, #92]	; 0x5c
   15184:	ldr	r3, [sp, #112]	; 0x70
   15188:	adds	r0, r1, r0
   1518c:	ldr	r1, [sp, #184]	; 0xb8
   15190:	adc	r1, r2, r1
   15194:	ldr	r2, [sp, #32]
   15198:	adds	r0, r0, r5
   1519c:	adc	r1, r1, r6
   151a0:	eor	r3, r3, r0
   151a4:	eor	r2, r2, r1
   151a8:	adds	sl, r2, r7
   151ac:	ldr	r7, [sp, #144]	; 0x90
   151b0:	eor	r4, sl, r5
   151b4:	adc	ip, r3, r7
   151b8:	lsl	r7, r4, #8
   151bc:	lsr	r4, r4, #24
   151c0:	eor	r6, ip, r6
   151c4:	orr	r5, r7, r6, lsr #24
   151c8:	ldr	r7, [sp, #268]	; 0x10c
   151cc:	orr	r6, r4, r6, lsl #8
   151d0:	str	r6, [sp, #32]
   151d4:	str	r5, [sp, #28]
   151d8:	adds	r0, r0, r7
   151dc:	ldr	r7, [sp, #264]	; 0x108
   151e0:	adc	r1, r1, r7
   151e4:	adds	r7, r0, r6
   151e8:	ldr	r6, [sp, #132]	; 0x84
   151ec:	adc	r0, r1, r5
   151f0:	eor	r1, r7, r2
   151f4:	str	r7, [sp, #36]	; 0x24
   151f8:	ldr	r7, [sp, #136]	; 0x88
   151fc:	str	r0, [sp, #40]	; 0x28
   15200:	lsl	r2, r1, #16
   15204:	eor	r0, r0, r3
   15208:	lsr	r1, r1, #16
   1520c:	orr	r2, r2, r0, lsr #16
   15210:	orr	r0, r1, r0, lsl #16
   15214:	ldr	r1, [sp, #192]	; 0xc0
   15218:	adds	r9, r0, sl
   1521c:	str	r0, [sp, #112]	; 0x70
   15220:	ldr	r0, [sp, #196]	; 0xc4
   15224:	str	r2, [sp, #48]	; 0x30
   15228:	adc	r8, r2, ip
   1522c:	ldr	r2, [sp, #44]	; 0x2c
   15230:	adds	r0, r6, r0
   15234:	adc	r1, r7, r1
   15238:	adds	r2, r0, r2
   1523c:	ldr	r0, [sp, #56]	; 0x38
   15240:	adc	r1, r1, r0
   15244:	ldr	r0, [sp, #164]	; 0xa4
   15248:	eor	ip, r1, r0
   1524c:	ldr	r0, [sp, #168]	; 0xa8
   15250:	eor	r3, r2, r0
   15254:	ldr	r0, [sp, #60]	; 0x3c
   15258:	adds	r4, ip, r0
   1525c:	ldr	r0, [sp, #68]	; 0x44
   15260:	str	r4, [sp, #44]	; 0x2c
   15264:	adc	r0, r3, r0
   15268:	str	r0, [sp, #56]	; 0x38
   1526c:	eor	sl, r0, r7
   15270:	eor	r0, r4, r6
   15274:	lsl	r7, r0, #8
   15278:	lsr	r0, r0, #24
   1527c:	orr	r6, r0, sl, lsl #8
   15280:	ldr	r0, [sp, #252]	; 0xfc
   15284:	orr	r7, r7, sl, lsr #24
   15288:	str	r6, [sp, #168]	; 0xa8
   1528c:	str	r7, [sp, #164]	; 0xa4
   15290:	adds	r0, r2, r0
   15294:	ldr	r2, [sp, #248]	; 0xf8
   15298:	adc	r1, r1, r2
   1529c:	adds	r2, r0, r6
   152a0:	ldr	r6, [sp, #16]
   152a4:	str	r2, [sp, #60]	; 0x3c
   152a8:	adc	r0, r1, r7
   152ac:	eor	r2, r2, ip
   152b0:	mov	ip, lr
   152b4:	str	r0, [sp, #68]	; 0x44
   152b8:	lsr	r1, r2, #16
   152bc:	eor	r0, r0, r3
   152c0:	lsl	r2, r2, #16
   152c4:	orr	r4, r2, r0, lsr #16
   152c8:	orr	r5, r1, r0, lsl #16
   152cc:	ldr	r0, [sp, #20]
   152d0:	eor	r2, lr, r4
   152d4:	eor	r3, r6, r5
   152d8:	adds	r7, r2, r9
   152dc:	adc	lr, r3, r8
   152e0:	eor	r1, lr, r0
   152e4:	ldr	r0, [sp, #24]
   152e8:	eor	r0, r7, r0
   152ec:	lsl	sl, r0, #8
   152f0:	lsr	r0, r0, #24
   152f4:	orr	sl, sl, r1, lsr #24
   152f8:	orr	r0, r0, r1, lsl #8
   152fc:	ldr	r1, [sp, #216]	; 0xd8
   15300:	adds	r1, r6, r1
   15304:	ldr	r6, [sp, #212]	; 0xd4
   15308:	adc	ip, ip, r6
   1530c:	adds	r6, r1, r0
   15310:	adc	r1, ip, sl
   15314:	eor	r2, r6, r2
   15318:	str	r6, [sp, #92]	; 0x5c
   1531c:	eor	ip, r1, r3
   15320:	lsl	r3, r2, #16
   15324:	lsr	r2, r2, #16
   15328:	str	r1, [sp, #96]	; 0x60
   1532c:	orr	r1, r2, ip, lsl #16
   15330:	orr	r3, r3, ip, lsr #16
   15334:	ldr	ip, [sp, #236]	; 0xec
   15338:	adds	r2, r1, r7
   1533c:	str	r1, [sp, #144]	; 0x90
   15340:	str	r3, [sp, #140]	; 0x8c
   15344:	adc	r1, r3, lr
   15348:	str	r2, [sp, #132]	; 0x84
   1534c:	eor	r0, r2, r0
   15350:	ldr	lr, [sp, #232]	; 0xe8
   15354:	str	r1, [sp, #136]	; 0x88
   15358:	eor	r1, r1, sl
   1535c:	lsl	r2, r1, #1
   15360:	orr	r2, r2, r0, lsr #31
   15364:	lsl	r0, r0, #1
   15368:	orr	r0, r0, r1, lsr #31
   1536c:	ldr	r1, [sp, #32]
   15370:	str	r2, [sp, #188]	; 0xbc
   15374:	str	r0, [sp, #184]	; 0xb8
   15378:	ldr	r0, [sp, #28]
   1537c:	eor	r1, r9, r1
   15380:	eor	r0, r8, r0
   15384:	lsl	r2, r0, #1
   15388:	orr	r8, r2, r1, lsr #31
   1538c:	lsl	r1, r1, #1
   15390:	orr	r6, r1, r0, lsr #31
   15394:	ldr	r0, [sp, #124]	; 0x7c
   15398:	ldr	r1, [sp, #128]	; 0x80
   1539c:	adds	r0, r0, ip
   153a0:	adc	r1, r1, lr
   153a4:	adds	r3, r0, r6
   153a8:	ldr	r0, [sp, #44]	; 0x2c
   153ac:	adc	r9, r1, r8
   153b0:	ldr	r1, [sp, #52]	; 0x34
   153b4:	adds	r7, r5, r0
   153b8:	ldr	r0, [sp, #56]	; 0x38
   153bc:	str	r7, [sp, #24]
   153c0:	adc	r2, r4, r0
   153c4:	ldr	r0, [sp, #116]	; 0x74
   153c8:	ldr	r4, [sp, #108]	; 0x6c
   153cc:	str	r2, [sp, #20]
   153d0:	eor	r1, r1, r0
   153d4:	ldr	r0, [sp, #120]	; 0x78
   153d8:	eor	r5, r4, r0
   153dc:	lsr	r0, r5, #16
   153e0:	lsl	r5, r5, #16
   153e4:	orr	r0, r0, r1, lsl #16
   153e8:	orr	r1, r5, r1, lsr #16
   153ec:	eor	r5, r1, r9
   153f0:	eor	r4, r0, r3
   153f4:	str	r0, [sp, #28]
   153f8:	str	r1, [sp, #32]
   153fc:	ldr	r1, [sp, #184]	; 0xb8
   15400:	adds	sl, r5, r7
   15404:	adc	r0, r4, r2
   15408:	eor	r6, sl, r6
   1540c:	str	r0, [sp, #128]	; 0x80
   15410:	eor	r7, r0, r8
   15414:	lsl	r0, r6, #8
   15418:	lsr	r6, r6, #24
   1541c:	orr	r8, r0, r7, lsr #24
   15420:	ldr	r0, [sp, #208]	; 0xd0
   15424:	orr	r6, r6, r7, lsl #8
   15428:	adds	r3, r3, r0
   1542c:	ldr	r0, [sp, #220]	; 0xdc
   15430:	adc	r2, r9, r0
   15434:	adds	r3, r3, r6
   15438:	ldr	r9, [sp, #48]	; 0x30
   1543c:	adc	r2, r2, r8
   15440:	adds	r7, r3, ip
   15444:	adc	r0, r2, lr
   15448:	adds	r1, r7, r1
   1544c:	ldr	r7, [sp, #188]	; 0xbc
   15450:	str	r1, [sp, #44]	; 0x2c
   15454:	adc	r0, r0, r7
   15458:	ldr	r7, [sp, #40]	; 0x28
   1545c:	str	r0, [sp, #108]	; 0x6c
   15460:	eor	r0, r2, r4
   15464:	eor	r2, r3, r5
   15468:	lsl	r3, r2, #16
   1546c:	lsr	r2, r2, #16
   15470:	orr	r1, r3, r0, lsr #16
   15474:	orr	r0, r2, r0, lsl #16
   15478:	adds	r2, r0, sl
   1547c:	str	r0, [sp, #56]	; 0x38
   15480:	ldr	r0, [sp, #128]	; 0x80
   15484:	str	r1, [sp, #52]	; 0x34
   15488:	str	r2, [sp, #124]	; 0x7c
   1548c:	adc	r0, r1, r0
   15490:	eor	r1, r2, r6
   15494:	str	r0, [sp, #128]	; 0x80
   15498:	eor	r0, r0, r8
   1549c:	lsl	r2, r0, #1
   154a0:	orr	r2, r2, r1, lsr #31
   154a4:	lsl	r1, r1, #1
   154a8:	orr	r0, r1, r0, lsr #31
   154ac:	ldr	r1, [sp, #20]
   154b0:	str	r2, [sp, #120]	; 0x78
   154b4:	ldr	r2, [sp, #24]
   154b8:	str	r0, [sp, #116]	; 0x74
   154bc:	ldr	r0, [sp, #164]	; 0xa4
   154c0:	eor	r0, r1, r0
   154c4:	ldr	r1, [sp, #168]	; 0xa8
   154c8:	eor	r1, r2, r1
   154cc:	lsl	r2, r0, #1
   154d0:	orr	r3, r2, r1, lsr #31
   154d4:	lsl	r1, r1, #1
   154d8:	ldr	r2, [sp, #36]	; 0x24
   154dc:	orr	r0, r1, r0, lsr #31
   154e0:	ldr	r1, [sp, #160]	; 0xa0
   154e4:	adds	r1, r2, r1
   154e8:	ldr	r2, [sp, #156]	; 0x9c
   154ec:	adc	r2, r7, r2
   154f0:	adds	r1, r1, r0
   154f4:	ldr	r7, [sp, #28]
   154f8:	adc	r4, r2, r3
   154fc:	ldr	r2, [sp, #84]	; 0x54
   15500:	str	r2, [sp, #380]	; 0x17c
   15504:	eor	lr, r4, r2
   15508:	ldr	r2, [sp, #64]	; 0x40
   1550c:	str	r7, [sp, #368]	; 0x170
   15510:	adds	r6, r7, r2
   15514:	ldr	r7, [sp, #32]
   15518:	ldr	r2, [sp, #72]	; 0x48
   1551c:	adc	r5, r7, r2
   15520:	ldr	r2, [sp, #88]	; 0x58
   15524:	str	r7, [sp, #372]	; 0x174
   15528:	adds	ip, lr, r6
   1552c:	eor	r0, ip, r0
   15530:	str	r2, [sp, #376]	; 0x178
   15534:	eor	r2, r1, r2
   15538:	str	r5, [sp, #340]	; 0x154
   1553c:	str	r6, [sp, #336]	; 0x150
   15540:	adc	r7, r2, r5
   15544:	str	r7, [sp, #88]	; 0x58
   15548:	eor	r3, r7, r3
   1554c:	lsl	r7, r0, #8
   15550:	lsr	r0, r0, #24
   15554:	orr	sl, r7, r3, lsr #24
   15558:	orr	r3, r0, r3, lsl #8
   1555c:	ldr	r0, [sp, #76]	; 0x4c
   15560:	adds	r1, r3, r1
   15564:	adc	r7, sl, r4
   15568:	eor	r4, r5, r0
   1556c:	ldr	r0, [sp, #80]	; 0x50
   15570:	eor	r5, r6, r0
   15574:	lsl	r0, r4, #1
   15578:	orr	r8, r0, r5, lsr #31
   1557c:	ldr	r0, [sp, #176]	; 0xb0
   15580:	lsl	r5, r5, #1
   15584:	orr	r4, r5, r4, lsr #31
   15588:	ldr	r5, [fp, #-156]	; 0xffffff64
   1558c:	str	r8, [sp, #308]	; 0x134
   15590:	str	r4, [sp, #304]	; 0x130
   15594:	str	r0, [sp, #344]	; 0x158
   15598:	ldr	r0, [sp, #180]	; 0xb4
   1559c:	str	r5, [sp, #164]	; 0xa4
   155a0:	str	r0, [sp, #348]	; 0x15c
   155a4:	ldr	r0, [sp, #112]	; 0x70
   155a8:	str	r9, [sp, #388]	; 0x184
   155ac:	str	r0, [sp, #384]	; 0x180
   155b0:	ldr	r0, [sp, #140]	; 0x8c
   155b4:	str	r0, [sp, #396]	; 0x18c
   155b8:	ldr	r0, [sp, #144]	; 0x90
   155bc:	str	r0, [sp, #392]	; 0x188
   155c0:	ldr	r0, [sp, #132]	; 0x84
   155c4:	str	r0, [sp, #352]	; 0x160
   155c8:	ldr	r0, [sp, #136]	; 0x88
   155cc:	str	r0, [sp, #356]	; 0x164
   155d0:	ldr	r0, [sp, #184]	; 0xb8
   155d4:	str	r0, [sp, #312]	; 0x138
   155d8:	ldr	r0, [sp, #188]	; 0xbc
   155dc:	str	r0, [sp, #316]	; 0x13c
   155e0:	ldr	r0, [sp, #124]	; 0x7c
   155e4:	str	r0, [sp, #360]	; 0x168
   155e8:	ldr	r0, [sp, #128]	; 0x80
   155ec:	str	r0, [sp, #364]	; 0x16c
   155f0:	ldr	r0, [sp, #116]	; 0x74
   155f4:	str	r0, [sp, #320]	; 0x140
   155f8:	ldr	r0, [sp, #120]	; 0x78
   155fc:	str	r0, [sp, #324]	; 0x144
   15600:	ldr	r0, [fp, #-160]	; 0xffffff60
   15604:	str	r0, [sp, #168]	; 0xa8
   15608:	adds	r0, r1, r0
   1560c:	adc	r1, r7, r5
   15610:	eor	r6, r0, lr
   15614:	str	r0, [sp, #36]	; 0x24
   15618:	ldr	r0, [sp, #108]	; 0x6c
   1561c:	lsl	r5, r6, #16
   15620:	eor	r2, r1, r2
   15624:	lsr	r6, r6, #16
   15628:	str	r1, [sp, #40]	; 0x28
   1562c:	orr	r7, r5, r2, lsr #16
   15630:	orr	lr, r6, r2, lsl #16
   15634:	ldr	r2, [sp, #68]	; 0x44
   15638:	eor	r0, r7, r0
   1563c:	adds	r1, lr, ip
   15640:	str	r0, [sp, #84]	; 0x54
   15644:	ldr	r0, [sp, #88]	; 0x58
   15648:	str	r1, [sp, #76]	; 0x4c
   1564c:	eor	r3, r1, r3
   15650:	adc	r0, r7, r0
   15654:	eor	r7, r0, sl
   15658:	str	r0, [sp, #80]	; 0x50
   1565c:	ldr	r0, [sp, #260]	; 0x104
   15660:	lsl	r1, r7, #1
   15664:	orr	r5, r1, r3, lsr #31
   15668:	lsl	r1, r3, #1
   1566c:	orr	ip, r1, r7, lsr #31
   15670:	ldr	r1, [sp, #60]	; 0x3c
   15674:	str	r5, [sp, #32]
   15678:	str	r5, [sp, #332]	; 0x14c
   1567c:	ldr	r5, [sp, #84]	; 0x54
   15680:	str	ip, [sp, #28]
   15684:	str	ip, [sp, #328]	; 0x148
   15688:	adds	r1, r1, r0
   1568c:	ldr	r0, [sp, #256]	; 0x100
   15690:	adc	r3, r2, r0
   15694:	adds	sl, r1, r4
   15698:	ldr	r1, [sp, #176]	; 0xb0
   1569c:	ldr	r0, [sp, #112]	; 0x70
   156a0:	adc	r6, r3, r8
   156a4:	eor	r9, r6, r9
   156a8:	adds	r3, r9, r1
   156ac:	ldr	r1, [sp, #180]	; 0xb4
   156b0:	eor	r0, sl, r0
   156b4:	eor	r4, r3, r4
   156b8:	lsl	r7, r4, #8
   156bc:	lsr	r4, r4, #24
   156c0:	adc	r2, r0, r1
   156c4:	eor	r1, r2, r8
   156c8:	orr	r8, r4, r1, lsl #8
   156cc:	orr	r7, r7, r1, lsr #24
   156d0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   156d4:	adds	r4, r8, sl
   156d8:	str	r7, [sp, #64]	; 0x40
   156dc:	adc	r6, r7, r6
   156e0:	ldr	r7, [fp, #-96]	; 0xffffffa0
   156e4:	str	r1, [sp, #176]	; 0xb0
   156e8:	str	r7, [sp, #180]	; 0xb4
   156ec:	adds	r7, r4, r7
   156f0:	adc	r1, r6, r1
   156f4:	eor	r6, r7, r9
   156f8:	str	r7, [sp, #24]
   156fc:	str	r1, [sp, #48]	; 0x30
   15700:	eor	r1, r1, r0
   15704:	lsl	r0, r6, #16
   15708:	lsr	r6, r6, #16
   1570c:	orr	r9, r6, r1, lsl #16
   15710:	orr	r0, r0, r1, lsr #16
   15714:	ldr	r1, [sp, #244]	; 0xf4
   15718:	adds	r4, r9, r3
   1571c:	str	r0, [sp, #60]	; 0x3c
   15720:	adc	ip, r0, r2
   15724:	ldr	r2, [sp, #44]	; 0x2c
   15728:	ldr	r0, [sp, #188]	; 0xbc
   1572c:	adds	r7, r4, r5
   15730:	eor	r3, lr, r2
   15734:	adc	lr, ip, r3
   15738:	eor	r6, lr, r0
   1573c:	ldr	r0, [sp, #184]	; 0xb8
   15740:	eor	r0, r7, r0
   15744:	lsl	sl, r0, #8
   15748:	lsr	r0, r0, #24
   1574c:	orr	sl, sl, r6, lsr #24
   15750:	orr	r0, r0, r6, lsl #8
   15754:	adds	r6, r2, r1
   15758:	ldr	r1, [sp, #240]	; 0xf0
   1575c:	ldr	r2, [sp, #108]	; 0x6c
   15760:	adc	r1, r2, r1
   15764:	adds	r2, r6, r0
   15768:	adc	r1, r1, sl
   1576c:	str	r2, [sp, #68]	; 0x44
   15770:	str	r1, [sp, #72]	; 0x48
   15774:	eor	r1, r1, r3
   15778:	eor	r3, r2, r5
   1577c:	lsl	r6, r3, #16
   15780:	lsr	r3, r3, #16
   15784:	orr	r5, r6, r1, lsr #16
   15788:	orr	r1, r3, r1, lsl #16
   1578c:	adds	r3, r1, r7
   15790:	str	r1, [sp, #88]	; 0x58
   15794:	str	r5, [sp, #84]	; 0x54
   15798:	ldr	r7, [sp, #96]	; 0x60
   1579c:	adc	r1, r5, lr
   157a0:	str	r3, [sp, #108]	; 0x6c
   157a4:	eor	r0, r3, r0
   157a8:	str	r1, [sp, #112]	; 0x70
   157ac:	eor	r1, r1, sl
   157b0:	lsl	r3, r1, #1
   157b4:	orr	lr, r3, r0, lsr #31
   157b8:	lsl	r0, r0, #1
   157bc:	ldr	r3, [sp, #92]	; 0x5c
   157c0:	orr	r5, r0, r1, lsr #31
   157c4:	ldr	r0, [sp, #64]	; 0x40
   157c8:	eor	r1, r4, r8
   157cc:	ldr	r4, [sp, #76]	; 0x4c
   157d0:	str	lr, [sp, #184]	; 0xb8
   157d4:	str	r5, [sp, #188]	; 0xbc
   157d8:	eor	r0, ip, r0
   157dc:	lsl	r2, r0, #1
   157e0:	orr	r2, r2, r1, lsr #31
   157e4:	lsl	r1, r1, #1
   157e8:	orr	r0, r1, r0, lsr #31
   157ec:	ldr	r1, [sp, #152]	; 0x98
   157f0:	adds	r1, r3, r1
   157f4:	ldr	r3, [sp, #148]	; 0x94
   157f8:	adc	r3, r7, r3
   157fc:	ldr	r7, [sp, #52]	; 0x34
   15800:	adds	r1, r1, r0
   15804:	adc	r3, r3, r2
   15808:	eor	r6, r3, r7
   1580c:	ldr	r7, [sp, #56]	; 0x38
   15810:	str	r6, [sp, #152]	; 0x98
   15814:	adds	r6, r6, r4
   15818:	ldr	r4, [sp, #80]	; 0x50
   1581c:	eor	r0, r6, r0
   15820:	str	r6, [sp, #76]	; 0x4c
   15824:	ldr	r6, [sp, #120]	; 0x78
   15828:	eor	r7, r1, r7
   1582c:	str	r7, [sp, #64]	; 0x40
   15830:	adc	r7, r7, r4
   15834:	str	r7, [sp, #80]	; 0x50
   15838:	eor	r2, r7, r2
   1583c:	lsl	r7, r0, #8
   15840:	lsr	r0, r0, #24
   15844:	orr	r7, r7, r2, lsr #24
   15848:	orr	r2, r0, r2, lsl #8
   1584c:	ldr	r0, [sp, #168]	; 0xa8
   15850:	str	r2, [sp, #96]	; 0x60
   15854:	str	r7, [sp, #92]	; 0x5c
   15858:	adds	r0, r1, r0
   1585c:	ldr	r1, [sp, #164]	; 0xa4
   15860:	adc	r1, r3, r1
   15864:	adds	r2, r0, r2
   15868:	ldr	r0, [sp, #252]	; 0xfc
   1586c:	adc	r3, r1, r7
   15870:	ldr	r1, [sp, #248]	; 0xf8
   15874:	str	r2, [sp, #56]	; 0x38
   15878:	ldr	r7, [sp, #132]	; 0x84
   1587c:	str	r3, [sp, #52]	; 0x34
   15880:	adds	r0, r5, r0
   15884:	ldr	r5, [sp, #116]	; 0x74
   15888:	adc	r1, lr, r1
   1588c:	adds	lr, r0, r2
   15890:	ldr	r0, [sp, #204]	; 0xcc
   15894:	ldr	r2, [sp, #36]	; 0x24
   15898:	adc	ip, r1, r3
   1589c:	ldr	r1, [sp, #200]	; 0xc8
   158a0:	adds	r0, r5, r0
   158a4:	adc	r1, r6, r1
   158a8:	adds	r0, r0, r2
   158ac:	ldr	r2, [sp, #40]	; 0x28
   158b0:	eor	r3, r9, r0
   158b4:	adc	r1, r1, r2
   158b8:	ldr	r2, [sp, #60]	; 0x3c
   158bc:	eor	r2, r2, r1
   158c0:	adds	r9, r2, r7
   158c4:	ldr	r7, [sp, #136]	; 0x88
   158c8:	adc	r8, r3, r7
   158cc:	eor	r7, r9, r5
   158d0:	lsl	r5, r7, #8
   158d4:	eor	r4, r8, r6
   158d8:	lsr	r7, r7, #24
   158dc:	orr	r6, r5, r4, lsr #24
   158e0:	orr	r5, r7, r4, lsl #8
   158e4:	ldr	r7, [sp, #160]	; 0xa0
   158e8:	str	r5, [sp, #44]	; 0x2c
   158ec:	str	r6, [sp, #40]	; 0x28
   158f0:	adds	r0, r0, r7
   158f4:	ldr	r7, [sp, #156]	; 0x9c
   158f8:	adc	r1, r1, r7
   158fc:	adds	r7, r0, r5
   15900:	ldr	r5, [sp, #28]
   15904:	adc	r0, r1, r6
   15908:	eor	r1, r7, r2
   1590c:	ldr	r6, [sp, #32]
   15910:	str	r7, [sp, #60]	; 0x3c
   15914:	str	r0, [sp, #136]	; 0x88
   15918:	lsl	r2, r1, #16
   1591c:	eor	r0, r0, r3
   15920:	lsr	r1, r1, #16
   15924:	orr	r2, r2, r0, lsr #16
   15928:	orr	r0, r1, r0, lsl #16
   1592c:	ldr	r1, [sp, #220]	; 0xdc
   15930:	adds	sl, r0, r9
   15934:	str	r0, [sp, #120]	; 0x78
   15938:	ldr	r0, [sp, #208]	; 0xd0
   1593c:	str	r2, [sp, #116]	; 0x74
   15940:	adc	r9, r2, r8
   15944:	adds	r0, r5, r0
   15948:	adc	r3, r6, r1
   1594c:	ldr	r1, [sp, #24]
   15950:	adds	r1, r0, r1
   15954:	ldr	r0, [sp, #48]	; 0x30
   15958:	adc	r7, r3, r0
   1595c:	ldr	r0, [sp, #140]	; 0x8c
   15960:	eor	r3, r7, r0
   15964:	ldr	r0, [sp, #144]	; 0x90
   15968:	eor	r2, r1, r0
   1596c:	ldr	r0, [sp, #124]	; 0x7c
   15970:	adds	r4, r3, r0
   15974:	ldr	r0, [sp, #128]	; 0x80
   15978:	str	r4, [sp, #24]
   1597c:	adc	r0, r2, r0
   15980:	str	r0, [sp, #36]	; 0x24
   15984:	eor	r8, r0, r6
   15988:	eor	r0, r4, r5
   1598c:	lsl	r5, r0, #8
   15990:	lsr	r0, r0, #24
   15994:	orr	r6, r5, r8, lsr #24
   15998:	orr	r5, r0, r8, lsl #8
   1599c:	ldr	r0, [sp, #260]	; 0x104
   159a0:	str	r6, [sp, #48]	; 0x30
   159a4:	str	r5, [sp, #124]	; 0x7c
   159a8:	adds	r0, r1, r0
   159ac:	ldr	r1, [sp, #256]	; 0x100
   159b0:	adc	r1, r7, r1
   159b4:	adds	r7, r0, r5
   159b8:	adc	r0, r1, r6
   159bc:	eor	r1, r7, r3
   159c0:	str	r7, [sp, #140]	; 0x8c
   159c4:	mov	r6, lr
   159c8:	str	r0, [sp, #144]	; 0x90
   159cc:	eor	r0, r0, r2
   159d0:	lsr	r2, r1, #16
   159d4:	lsl	r1, r1, #16
   159d8:	orr	r4, r1, r0, lsr #16
   159dc:	orr	r7, r2, r0, lsl #16
   159e0:	ldr	r0, [sp, #184]	; 0xb8
   159e4:	eor	r3, ip, r4
   159e8:	eor	r2, lr, r7
   159ec:	adds	lr, r3, sl
   159f0:	adc	r5, r2, r9
   159f4:	eor	r1, r5, r0
   159f8:	ldr	r0, [sp, #188]	; 0xbc
   159fc:	eor	r0, lr, r0
   15a00:	lsl	r8, r0, #8
   15a04:	lsr	r0, r0, #24
   15a08:	orr	r8, r8, r1, lsr #24
   15a0c:	orr	r0, r0, r1, lsl #8
   15a10:	ldr	r1, [sp, #228]	; 0xe4
   15a14:	adds	r1, r6, r1
   15a18:	ldr	r6, [sp, #224]	; 0xe0
   15a1c:	adc	ip, ip, r6
   15a20:	adds	r6, r1, r0
   15a24:	adc	r1, ip, r8
   15a28:	str	r6, [sp, #128]	; 0x80
   15a2c:	eor	ip, r1, r2
   15a30:	eor	r2, r6, r3
   15a34:	str	r1, [sp, #132]	; 0x84
   15a38:	lsl	r3, r2, #16
   15a3c:	lsr	r2, r2, #16
   15a40:	orr	r1, r2, ip, lsl #16
   15a44:	orr	r3, r3, ip, lsr #16
   15a48:	adds	r2, r1, lr
   15a4c:	str	r1, [sp, #188]	; 0xbc
   15a50:	str	r3, [sp, #184]	; 0xb8
   15a54:	adc	r1, r3, r5
   15a58:	str	r2, [sp, #156]	; 0x9c
   15a5c:	eor	r0, r2, r0
   15a60:	ldr	r5, [sp, #72]	; 0x48
   15a64:	str	r1, [sp, #160]	; 0xa0
   15a68:	eor	r1, r1, r8
   15a6c:	lsl	r2, r1, #1
   15a70:	orr	lr, r2, r0, lsr #31
   15a74:	lsl	r0, r0, #1
   15a78:	orr	ip, r0, r1, lsr #31
   15a7c:	ldr	r0, [sp, #40]	; 0x28
   15a80:	ldr	r1, [sp, #44]	; 0x2c
   15a84:	str	lr, [sp, #28]
   15a88:	str	ip, [sp, #148]	; 0x94
   15a8c:	eor	r0, r9, r0
   15a90:	eor	r1, sl, r1
   15a94:	lsl	r2, r0, #1
   15a98:	orr	r3, r2, r1, lsr #31
   15a9c:	lsl	r1, r1, #1
   15aa0:	ldr	r2, [sp, #68]	; 0x44
   15aa4:	orr	r1, r1, r0, lsr #31
   15aa8:	ldr	r0, [sp, #196]	; 0xc4
   15aac:	adds	r0, r2, r0
   15ab0:	ldr	r2, [sp, #192]	; 0xc0
   15ab4:	adc	r2, r5, r2
   15ab8:	adds	r5, r0, r1
   15abc:	ldr	r0, [sp, #24]
   15ac0:	adc	r8, r2, r3
   15ac4:	adds	r9, r7, r0
   15ac8:	ldr	r0, [sp, #36]	; 0x24
   15acc:	adc	r2, r4, r0
   15ad0:	ldr	r0, [sp, #64]	; 0x40
   15ad4:	ldr	r4, [sp, #52]	; 0x34
   15ad8:	eor	r7, r4, r0
   15adc:	ldr	r0, [sp, #152]	; 0x98
   15ae0:	ldr	r4, [sp, #56]	; 0x38
   15ae4:	eor	r6, r4, r0
   15ae8:	lsr	r0, r6, #16
   15aec:	lsl	r6, r6, #16
   15af0:	orr	sl, r6, r7, lsr #16
   15af4:	orr	r0, r0, r7, lsl #16
   15af8:	eor	r4, sl, r8
   15afc:	eor	r6, r0, r5
   15b00:	str	r4, [sp, #44]	; 0x2c
   15b04:	adds	r4, r4, r9
   15b08:	str	r6, [sp, #40]	; 0x28
   15b0c:	adc	r6, r6, r2
   15b10:	eor	r1, r4, r1
   15b14:	str	r4, [sp, #64]	; 0x40
   15b18:	lsl	r4, r1, #8
   15b1c:	eor	r3, r6, r3
   15b20:	lsr	r1, r1, #24
   15b24:	str	r6, [sp, #72]	; 0x48
   15b28:	orr	r6, r1, r3, lsl #8
   15b2c:	ldr	r1, [sp, #268]	; 0x10c
   15b30:	orr	r4, r4, r3, lsr #24
   15b34:	ldr	r3, [sp, #264]	; 0x108
   15b38:	str	r4, [sp, #16]
   15b3c:	str	r6, [sp, #36]	; 0x24
   15b40:	adds	r1, r5, r1
   15b44:	adc	r5, r8, r3
   15b48:	adds	r3, r1, r6
   15b4c:	ldr	r1, [sp, #216]	; 0xd8
   15b50:	adc	r4, r5, r4
   15b54:	str	r3, [sp, #32]
   15b58:	str	r4, [sp, #12]
   15b5c:	adds	r5, r3, r1
   15b60:	ldr	r3, [sp, #212]	; 0xd4
   15b64:	adc	r8, r4, r3
   15b68:	adds	r7, r5, ip
   15b6c:	ldr	r4, [sp, #180]	; 0xb4
   15b70:	str	r7, [sp, #56]	; 0x38
   15b74:	adc	r7, r8, lr
   15b78:	str	r7, [sp, #152]	; 0x98
   15b7c:	ldr	r7, [sp, #48]	; 0x30
   15b80:	eor	r2, r2, r7
   15b84:	ldr	r7, [sp, #124]	; 0x7c
   15b88:	eor	r5, r9, r7
   15b8c:	lsl	r7, r2, #1
   15b90:	orr	r8, r7, r5, lsr #31
   15b94:	ldr	r7, [sp, #60]	; 0x3c
   15b98:	lsl	r5, r5, #1
   15b9c:	orr	r2, r5, r2, lsr #31
   15ba0:	adds	r5, r7, r1
   15ba4:	ldr	r1, [sp, #136]	; 0x88
   15ba8:	adc	r7, r1, r3
   15bac:	ldr	r1, [sp, #84]	; 0x54
   15bb0:	adds	r5, r5, r2
   15bb4:	adc	r9, r7, r8
   15bb8:	str	r1, [sp, #380]	; 0x17c
   15bbc:	eor	lr, r9, r1
   15bc0:	ldr	r1, [sp, #76]	; 0x4c
   15bc4:	str	r0, [sp, #368]	; 0x170
   15bc8:	str	sl, [sp, #372]	; 0x174
   15bcc:	adds	r7, r0, r1
   15bd0:	ldr	r0, [sp, #80]	; 0x50
   15bd4:	adc	ip, sl, r0
   15bd8:	ldr	r0, [sp, #88]	; 0x58
   15bdc:	str	r0, [sp, #376]	; 0x178
   15be0:	eor	sl, r5, r0
   15be4:	adds	r0, lr, r7
   15be8:	str	r7, [sp, #336]	; 0x150
   15bec:	str	ip, [sp, #340]	; 0x154
   15bf0:	adc	r1, sl, ip
   15bf4:	eor	r2, r0, r2
   15bf8:	adds	r5, r5, r4
   15bfc:	ldr	r4, [sp, #176]	; 0xb0
   15c00:	lsl	r6, r2, #8
   15c04:	eor	r8, r1, r8
   15c08:	lsr	r2, r2, #24
   15c0c:	orr	r2, r2, r8, lsl #8
   15c10:	orr	r6, r6, r8, lsr #24
   15c14:	adc	r8, r9, r4
   15c18:	adds	r4, r5, r2
   15c1c:	ldr	r9, [sp, #28]
   15c20:	adc	r3, r8, r6
   15c24:	str	r4, [sp, #84]	; 0x54
   15c28:	ldr	r8, [sp, #112]	; 0x70
   15c2c:	str	r3, [sp, #88]	; 0x58
   15c30:	eor	r5, r3, sl
   15c34:	eor	r3, r4, lr
   15c38:	lsl	r4, r3, #16
   15c3c:	lsr	r3, r3, #16
   15c40:	orr	r3, r3, r5, lsl #16
   15c44:	orr	r4, r4, r5, lsr #16
   15c48:	str	r3, [sp, #20]
   15c4c:	adds	r3, r3, r0
   15c50:	ldr	r0, [sp, #152]	; 0x98
   15c54:	str	r3, [sp, #48]	; 0x30
   15c58:	eor	r0, r0, r4
   15c5c:	str	r0, [sp, #24]
   15c60:	adc	r0, r4, r1
   15c64:	eor	r1, r3, r2
   15c68:	ldr	r4, [sp, #108]	; 0x6c
   15c6c:	str	r0, [sp, #52]	; 0x34
   15c70:	eor	r0, r0, r6
   15c74:	lsl	r2, r0, #1
   15c78:	orr	r2, r2, r1, lsr #31
   15c7c:	lsl	r1, r1, #1
   15c80:	orr	sl, r1, r0, lsr #31
   15c84:	ldr	r0, [sp, #40]	; 0x28
   15c88:	ldr	r1, [sp, #12]
   15c8c:	str	r2, [sp, #136]	; 0x88
   15c90:	ldr	r2, [sp, #32]
   15c94:	str	sl, [sp, #68]	; 0x44
   15c98:	eor	r0, r1, r0
   15c9c:	ldr	r1, [sp, #44]	; 0x2c
   15ca0:	eor	r1, r2, r1
   15ca4:	lsl	r2, r1, #16
   15ca8:	lsr	r1, r1, #16
   15cac:	orr	r3, r2, r0, lsr #16
   15cb0:	orr	r0, r1, r0, lsl #16
   15cb4:	ldr	r1, [sp, #64]	; 0x40
   15cb8:	ldr	r2, [sp, #120]	; 0x78
   15cbc:	str	r0, [sp, #44]	; 0x2c
   15cc0:	str	r3, [sp, #32]
   15cc4:	adds	r6, r0, r1
   15cc8:	ldr	r0, [sp, #72]	; 0x48
   15ccc:	str	r6, [sp, #76]	; 0x4c
   15cd0:	adc	r1, r3, r0
   15cd4:	ldr	r0, [sp, #16]
   15cd8:	mov	lr, r1
   15cdc:	str	r1, [sp, #80]	; 0x50
   15ce0:	eor	r0, r1, r0
   15ce4:	ldr	r1, [sp, #36]	; 0x24
   15ce8:	lsl	r3, r0, #1
   15cec:	eor	r1, r6, r1
   15cf0:	orr	r5, r3, r1, lsr #31
   15cf4:	lsl	r1, r1, #1
   15cf8:	orr	r3, r1, r0, lsr #31
   15cfc:	ldr	r0, [sp, #92]	; 0x5c
   15d00:	str	r5, [sp, #40]	; 0x28
   15d04:	str	r3, [sp, #36]	; 0x24
   15d08:	eor	r1, ip, r0
   15d0c:	ldr	r0, [sp, #96]	; 0x60
   15d10:	eor	r7, r7, r0
   15d14:	lsl	r0, r1, #1
   15d18:	orr	r0, r0, r7, lsr #31
   15d1c:	lsl	r7, r7, #1
   15d20:	orr	ip, r7, r1, lsr #31
   15d24:	ldr	r1, [sp, #140]	; 0x8c
   15d28:	ldr	r7, [sp, #116]	; 0x74
   15d2c:	str	r0, [sp, #308]	; 0x134
   15d30:	str	ip, [sp, #304]	; 0x130
   15d34:	str	r4, [sp, #344]	; 0x158
   15d38:	str	r8, [sp, #348]	; 0x15c
   15d3c:	str	r2, [sp, #384]	; 0x180
   15d40:	adds	r1, ip, r1
   15d44:	str	r7, [sp, #388]	; 0x184
   15d48:	str	r1, [sp, #140]	; 0x8c
   15d4c:	ldr	r1, [sp, #144]	; 0x90
   15d50:	adc	r1, r0, r1
   15d54:	str	r1, [sp, #144]	; 0x90
   15d58:	ldr	r1, [sp, #184]	; 0xb8
   15d5c:	str	r1, [sp, #396]	; 0x18c
   15d60:	ldr	r1, [sp, #188]	; 0xbc
   15d64:	str	r1, [sp, #392]	; 0x188
   15d68:	ldr	r1, [sp, #156]	; 0x9c
   15d6c:	str	r1, [sp, #352]	; 0x160
   15d70:	ldr	r1, [sp, #160]	; 0xa0
   15d74:	str	r1, [sp, #356]	; 0x164
   15d78:	ldr	r1, [sp, #148]	; 0x94
   15d7c:	str	r9, [sp, #316]	; 0x13c
   15d80:	str	r1, [sp, #312]	; 0x138
   15d84:	add	r1, sp, #320	; 0x140
   15d88:	str	r6, [sp, #360]	; 0x168
   15d8c:	str	lr, [sp, #364]	; 0x16c
   15d90:	ldr	r6, [fp, #-132]	; 0xffffff7c
   15d94:	ldr	lr, [fp, #-52]	; 0xffffffcc
   15d98:	stm	r1, {r3, r5, sl}
   15d9c:	ldr	r1, [sp, #136]	; 0x88
   15da0:	ldr	r5, [sp, #140]	; 0x8c
   15da4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15da8:	str	r6, [sp, #72]	; 0x48
   15dac:	str	lr, [sp, #96]	; 0x60
   15db0:	str	r1, [sp, #332]	; 0x14c
   15db4:	ldr	r1, [fp, #-136]	; 0xffffff78
   15db8:	str	r3, [sp, #124]	; 0x7c
   15dbc:	adds	r5, r5, r1
   15dc0:	str	r1, [sp, #92]	; 0x5c
   15dc4:	ldr	r1, [sp, #144]	; 0x90
   15dc8:	eor	r2, r5, r2
   15dcc:	adc	r6, r1, r6
   15dd0:	eor	r7, r6, r7
   15dd4:	adds	sl, r7, r4
   15dd8:	adc	r8, r2, r8
   15ddc:	eor	r1, r8, r0
   15de0:	eor	r0, sl, ip
   15de4:	lsl	r4, r0, #8
   15de8:	lsr	r0, r0, #24
   15dec:	orr	r4, r4, r1, lsr #24
   15df0:	orr	r1, r0, r1, lsl #8
   15df4:	adds	r0, r3, r5
   15df8:	adc	r3, lr, r6
   15dfc:	adds	r0, r0, r1
   15e00:	str	r1, [sp, #112]	; 0x70
   15e04:	mov	r6, r4
   15e08:	adc	r1, r3, r4
   15e0c:	str	r0, [sp, #60]	; 0x3c
   15e10:	str	r1, [sp, #64]	; 0x40
   15e14:	eor	r1, r1, r2
   15e18:	eor	r2, r0, r7
   15e1c:	ldr	r7, [sp, #56]	; 0x38
   15e20:	lsl	r4, r2, #16
   15e24:	lsr	r2, r2, #16
   15e28:	orr	r0, r4, r1, lsr #16
   15e2c:	orr	r1, r2, r1, lsl #16
   15e30:	ldr	r2, [sp, #24]
   15e34:	adds	lr, r1, sl
   15e38:	str	r0, [sp, #16]
   15e3c:	str	r1, [sp, #12]
   15e40:	adc	ip, r0, r8
   15e44:	ldr	r0, [sp, #20]
   15e48:	adds	r5, lr, r2
   15e4c:	eor	r3, r7, r0
   15e50:	ldr	r0, [sp, #148]	; 0x94
   15e54:	adc	sl, ip, r3
   15e58:	eor	r1, sl, r9
   15e5c:	eor	r4, r5, r0
   15e60:	ldr	r0, [sp, #208]	; 0xd0
   15e64:	lsl	r8, r4, #8
   15e68:	lsr	r4, r4, #24
   15e6c:	orr	r8, r8, r1, lsr #24
   15e70:	orr	r1, r4, r1, lsl #8
   15e74:	adds	r4, r7, r0
   15e78:	ldr	r0, [sp, #220]	; 0xdc
   15e7c:	ldr	r7, [sp, #152]	; 0x98
   15e80:	adc	r0, r7, r0
   15e84:	adds	r4, r4, r1
   15e88:	ldr	r7, [sp, #132]	; 0x84
   15e8c:	adc	r0, r0, r8
   15e90:	str	r4, [sp, #116]	; 0x74
   15e94:	str	r0, [sp, #120]	; 0x78
   15e98:	eor	r0, r0, r3
   15e9c:	eor	r3, r4, r2
   15ea0:	lsl	r4, r3, #16
   15ea4:	lsr	r3, r3, #16
   15ea8:	orr	r4, r4, r0, lsr #16
   15eac:	orr	r0, r3, r0, lsl #16
   15eb0:	adds	r3, r0, r5
   15eb4:	str	r0, [sp, #152]	; 0x98
   15eb8:	str	r4, [sp, #148]	; 0x94
   15ebc:	adc	r0, r4, sl
   15ec0:	str	r3, [sp, #140]	; 0x8c
   15ec4:	eor	r1, r3, r1
   15ec8:	str	r0, [sp, #144]	; 0x90
   15ecc:	eor	r0, r0, r8
   15ed0:	lsl	r3, r0, #1
   15ed4:	orr	r8, r3, r1, lsr #31
   15ed8:	lsl	r1, r1, #1
   15edc:	ldr	r3, [sp, #128]	; 0x80
   15ee0:	orr	sl, r1, r0, lsr #31
   15ee4:	ldr	r1, [sp, #112]	; 0x70
   15ee8:	eor	r0, ip, r6
   15eec:	lsl	r2, r0, #1
   15ef0:	str	r8, [sp, #24]
   15ef4:	str	sl, [sp, #28]
   15ef8:	eor	r1, lr, r1
   15efc:	orr	r2, r2, r1, lsr #31
   15f00:	lsl	r1, r1, #1
   15f04:	orr	r0, r1, r0, lsr #31
   15f08:	ldr	r1, [sp, #204]	; 0xcc
   15f0c:	adds	r1, r3, r1
   15f10:	ldr	r3, [sp, #200]	; 0xc8
   15f14:	adc	r3, r7, r3
   15f18:	ldr	r7, [sp, #32]
   15f1c:	adds	r1, r1, r0
   15f20:	adc	r3, r3, r2
   15f24:	eor	r5, r3, r7
   15f28:	ldr	r7, [sp, #44]	; 0x2c
   15f2c:	eor	r4, r1, r7
   15f30:	ldr	r7, [sp, #48]	; 0x30
   15f34:	adds	lr, r5, r7
   15f38:	ldr	r7, [sp, #52]	; 0x34
   15f3c:	eor	r0, lr, r0
   15f40:	adc	r9, r4, r7
   15f44:	lsl	r7, r0, #8
   15f48:	lsr	r0, r0, #24
   15f4c:	eor	r2, r9, r2
   15f50:	orr	r7, r7, r2, lsr #24
   15f54:	orr	r0, r0, r2, lsl #8
   15f58:	ldr	r2, [sp, #268]	; 0x10c
   15f5c:	adds	r1, r1, r2
   15f60:	ldr	r2, [sp, #264]	; 0x108
   15f64:	adc	r2, r3, r2
   15f68:	adds	r3, r1, r0
   15f6c:	adc	r2, r2, r7
   15f70:	adds	r1, r3, sl
   15f74:	eor	r3, r3, r5
   15f78:	ldr	r5, [sp, #40]	; 0x28
   15f7c:	str	r1, [sp, #204]	; 0xcc
   15f80:	adc	r1, r2, r8
   15f84:	eor	r2, r2, r4
   15f88:	lsl	r4, r3, #16
   15f8c:	lsr	r3, r3, #16
   15f90:	str	r1, [sp, #200]	; 0xc8
   15f94:	orr	r1, r3, r2, lsl #16
   15f98:	orr	r8, r4, r2, lsr #16
   15f9c:	str	r1, [sp, #132]	; 0x84
   15fa0:	adds	r1, r1, lr
   15fa4:	str	r8, [sp, #372]	; 0x174
   15fa8:	str	r8, [sp, #52]	; 0x34
   15fac:	adc	r2, r8, r9
   15fb0:	eor	r0, r1, r0
   15fb4:	mov	r9, r1
   15fb8:	str	r1, [sp, #56]	; 0x38
   15fbc:	ldr	r1, [sp, #84]	; 0x54
   15fc0:	str	r2, [sp, #128]	; 0x80
   15fc4:	eor	r2, r2, r7
   15fc8:	lsl	r3, r2, #1
   15fcc:	orr	sl, r3, r0, lsr #31
   15fd0:	lsl	r0, r0, #1
   15fd4:	orr	r4, r0, r2, lsr #31
   15fd8:	ldr	r0, [sp, #168]	; 0xa8
   15fdc:	ldr	r2, [sp, #88]	; 0x58
   15fe0:	str	sl, [sp, #108]	; 0x6c
   15fe4:	str	r4, [sp, #112]	; 0x70
   15fe8:	adds	r0, r1, r0
   15fec:	ldr	r1, [sp, #164]	; 0xa4
   15ff0:	adc	r1, r2, r1
   15ff4:	ldr	r2, [sp, #36]	; 0x24
   15ff8:	adds	ip, r0, r2
   15ffc:	ldr	r0, [sp, #16]
   16000:	adc	lr, r1, r5
   16004:	ldr	r1, [sp, #156]	; 0x9c
   16008:	eor	r7, r0, lr
   1600c:	ldr	r0, [sp, #12]
   16010:	adds	r3, r7, r1
   16014:	ldr	r1, [sp, #160]	; 0xa0
   16018:	eor	r2, r3, r2
   1601c:	str	r3, [sp, #156]	; 0x9c
   16020:	eor	r6, r0, ip
   16024:	adc	r0, r6, r1
   16028:	eor	r1, r0, r5
   1602c:	lsl	r5, r2, #8
   16030:	lsr	r2, r2, #24
   16034:	str	r0, [sp, #160]	; 0xa0
   16038:	orr	r5, r5, r1, lsr #24
   1603c:	orr	r0, r2, r1, lsl #8
   16040:	ldr	r1, [sp, #196]	; 0xc4
   16044:	str	r0, [sp, #84]	; 0x54
   16048:	str	r5, [sp, #48]	; 0x30
   1604c:	adds	r2, ip, r1
   16050:	ldr	r1, [sp, #192]	; 0xc0
   16054:	adc	r1, lr, r1
   16058:	adds	r2, r2, r0
   1605c:	adc	r0, r1, r5
   16060:	eor	r1, r2, r7
   16064:	str	r2, [sp, #88]	; 0x58
   16068:	ldr	r7, [sp, #204]	; 0xcc
   1606c:	ldr	r5, [sp, #68]	; 0x44
   16070:	str	r0, [sp, #164]	; 0xa4
   16074:	lsr	r2, r1, #16
   16078:	eor	r0, r0, r6
   1607c:	lsl	r1, r1, #16
   16080:	orr	r3, r1, r0, lsr #16
   16084:	orr	r2, r2, r0, lsl #16
   16088:	ldr	r0, [sp, #132]	; 0x84
   1608c:	ldr	r1, [fp, #-124]	; 0xffffff84
   16090:	str	r2, [sp, #192]	; 0xc0
   16094:	str	r3, [sp, #168]	; 0xa8
   16098:	str	r0, [sp, #368]	; 0x170
   1609c:	ldr	r0, [sp, #128]	; 0x80
   160a0:	str	r9, [sp, #336]	; 0x150
   160a4:	str	r0, [sp, #340]	; 0x154
   160a8:	ldr	r0, [sp, #148]	; 0x94
   160ac:	str	r4, [sp, #304]	; 0x130
   160b0:	str	sl, [sp, #308]	; 0x134
   160b4:	ldr	r4, [sp, #136]	; 0x88
   160b8:	str	r0, [sp, #380]	; 0x17c
   160bc:	ldr	r0, [sp, #152]	; 0x98
   160c0:	str	r0, [sp, #376]	; 0x178
   160c4:	ldr	r0, [sp, #140]	; 0x8c
   160c8:	str	r0, [sp, #344]	; 0x158
   160cc:	ldr	r0, [sp, #144]	; 0x90
   160d0:	str	r0, [sp, #348]	; 0x15c
   160d4:	ldr	r0, [fp, #-128]	; 0xffffff80
   160d8:	str	r2, [sp, #384]	; 0x180
   160dc:	str	r3, [sp, #388]	; 0x184
   160e0:	adds	r7, r7, r0
   160e4:	ldr	r0, [sp, #200]	; 0xc8
   160e8:	adc	r6, r0, r1
   160ec:	ldr	r0, [sp, #156]	; 0x9c
   160f0:	adds	r9, r2, r0
   160f4:	ldr	r0, [sp, #160]	; 0xa0
   160f8:	adc	r8, r3, r0
   160fc:	ldr	r0, [sp, #180]	; 0xb4
   16100:	adds	r2, r5, r0
   16104:	ldr	r0, [sp, #176]	; 0xb0
   16108:	adc	r3, r4, r0
   1610c:	ldr	r0, [sp, #60]	; 0x3c
   16110:	adds	r2, r2, r0
   16114:	ldr	r0, [sp, #64]	; 0x40
   16118:	adc	r3, r3, r0
   1611c:	ldr	r0, [sp, #184]	; 0xb8
   16120:	eor	ip, r3, r0
   16124:	ldr	r0, [sp, #188]	; 0xbc
   16128:	eor	lr, r2, r0
   1612c:	ldr	r0, [sp, #76]	; 0x4c
   16130:	adds	r1, ip, r0
   16134:	ldr	r0, [sp, #80]	; 0x50
   16138:	str	r1, [sp, #76]	; 0x4c
   1613c:	adc	r0, lr, r0
   16140:	str	r0, [sp, #80]	; 0x50
   16144:	eor	sl, r0, r4
   16148:	eor	r0, r1, r5
   1614c:	lsl	r4, r0, #8
   16150:	lsr	r0, r0, #24
   16154:	orr	r5, r4, sl, lsr #24
   16158:	orr	r4, r0, sl, lsl #8
   1615c:	ldr	r0, [sp, #92]	; 0x5c
   16160:	str	r4, [sp, #180]	; 0xb4
   16164:	str	r5, [sp, #136]	; 0x88
   16168:	adds	r0, r2, r0
   1616c:	ldr	r2, [sp, #72]	; 0x48
   16170:	adc	r2, r3, r2
   16174:	adds	r3, r0, r4
   16178:	adc	r0, r2, r5
   1617c:	eor	r1, r3, ip
   16180:	str	r3, [sp, #176]	; 0xb0
   16184:	str	r0, [sp, #188]	; 0xbc
   16188:	lsr	r2, r1, #16
   1618c:	eor	r0, r0, lr
   16190:	lsl	r1, r1, #16
   16194:	orr	lr, r1, r0, lsr #16
   16198:	orr	r4, r2, r0, lsl #16
   1619c:	ldr	r0, [sp, #24]
   161a0:	eor	r3, r6, lr
   161a4:	eor	r2, r7, r4
   161a8:	adds	r5, r3, r9
   161ac:	adc	ip, r2, r8
   161b0:	eor	r1, ip, r0
   161b4:	ldr	r0, [sp, #28]
   161b8:	eor	r0, r5, r0
   161bc:	lsl	sl, r0, #8
   161c0:	lsr	r0, r0, #24
   161c4:	orr	sl, sl, r1, lsr #24
   161c8:	orr	r0, r0, r1, lsl #8
   161cc:	ldr	r1, [sp, #124]	; 0x7c
   161d0:	adds	r1, r7, r1
   161d4:	ldr	r7, [sp, #96]	; 0x60
   161d8:	adc	r6, r6, r7
   161dc:	adds	r7, r1, r0
   161e0:	adc	r1, r6, sl
   161e4:	str	r7, [sp, #156]	; 0x9c
   161e8:	str	r1, [sp, #160]	; 0xa0
   161ec:	eor	r1, r1, r2
   161f0:	eor	r2, r7, r3
   161f4:	ldr	r7, [sp, #120]	; 0x78
   161f8:	lsl	r3, r2, #16
   161fc:	lsr	r2, r2, #16
   16200:	orr	r3, r3, r1, lsr #16
   16204:	orr	r1, r2, r1, lsl #16
   16208:	adds	r2, r1, r5
   1620c:	str	r1, [sp, #204]	; 0xcc
   16210:	str	r3, [sp, #200]	; 0xc8
   16214:	adc	r1, r3, ip
   16218:	str	r2, [sp, #184]	; 0xb8
   1621c:	eor	r0, r2, r0
   16220:	ldr	r3, [sp, #116]	; 0x74
   16224:	str	r1, [sp, #196]	; 0xc4
   16228:	eor	r1, r1, sl
   1622c:	lsl	r2, r1, #1
   16230:	orr	sl, r2, r0, lsr #31
   16234:	lsl	r0, r0, #1
   16238:	orr	ip, r0, r1, lsr #31
   1623c:	ldr	r0, [sp, #48]	; 0x30
   16240:	ldr	r1, [sp, #84]	; 0x54
   16244:	str	sl, [sp, #64]	; 0x40
   16248:	str	ip, [sp, #68]	; 0x44
   1624c:	eor	r0, r8, r0
   16250:	eor	r1, r9, r1
   16254:	lsl	r2, r0, #1
   16258:	orr	r2, r2, r1, lsr #31
   1625c:	lsl	r1, r1, #1
   16260:	orr	r0, r1, r0, lsr #31
   16264:	ldr	r1, [sp, #244]	; 0xf4
   16268:	adds	r1, r3, r1
   1626c:	ldr	r3, [sp, #240]	; 0xf0
   16270:	adc	r3, r7, r3
   16274:	adds	r8, r1, r0
   16278:	ldr	r1, [sp, #52]	; 0x34
   1627c:	adc	r7, r3, r2
   16280:	eor	r5, r1, r7
   16284:	ldr	r1, [sp, #76]	; 0x4c
   16288:	str	r5, [sp, #92]	; 0x5c
   1628c:	adds	r9, r4, r1
   16290:	ldr	r1, [sp, #80]	; 0x50
   16294:	adc	r3, lr, r1
   16298:	ldr	r1, [sp, #132]	; 0x84
   1629c:	adds	r6, r5, r9
   162a0:	ldr	lr, [sp, #224]	; 0xe0
   162a4:	eor	r0, r6, r0
   162a8:	str	r6, [sp, #80]	; 0x50
   162ac:	eor	r1, r1, r8
   162b0:	str	r1, [sp, #76]	; 0x4c
   162b4:	adc	r1, r1, r3
   162b8:	str	r1, [sp, #96]	; 0x60
   162bc:	eor	r1, r1, r2
   162c0:	lsl	r2, r0, #8
   162c4:	lsr	r0, r0, #24
   162c8:	orr	r6, r0, r1, lsl #8
   162cc:	ldr	r0, [sp, #236]	; 0xec
   162d0:	orr	r2, r2, r1, lsr #24
   162d4:	ldr	r1, [sp, #232]	; 0xe8
   162d8:	str	r6, [sp, #60]	; 0x3c
   162dc:	str	r2, [sp, #52]	; 0x34
   162e0:	adds	r0, r8, r0
   162e4:	adc	r5, r7, r1
   162e8:	ldr	r7, [sp, #228]	; 0xe4
   162ec:	adds	r0, r0, r6
   162f0:	ldr	r1, [sp, #88]	; 0x58
   162f4:	adc	r8, r5, r2
   162f8:	str	r0, [sp, #72]	; 0x48
   162fc:	ldr	r2, [sp, #128]	; 0x80
   16300:	adds	r5, r0, r7
   16304:	adc	r6, r8, lr
   16308:	adds	r0, r5, ip
   1630c:	str	r0, [sp, #124]	; 0x7c
   16310:	ldr	r0, [sp, #136]	; 0x88
   16314:	adc	ip, r6, sl
   16318:	str	ip, [sp, #120]	; 0x78
   1631c:	eor	r3, r3, r0
   16320:	ldr	r0, [sp, #180]	; 0xb4
   16324:	lsl	r5, r3, #1
   16328:	eor	r4, r9, r0
   1632c:	ldr	r0, [sp, #260]	; 0x104
   16330:	orr	r5, r5, r4, lsr #31
   16334:	lsl	r4, r4, #1
   16338:	orr	r3, r4, r3, lsr #31
   1633c:	adds	r4, r1, r0
   16340:	ldr	r0, [sp, #256]	; 0x100
   16344:	ldr	r1, [sp, #164]	; 0xa4
   16348:	adc	r6, r1, r0
   1634c:	ldr	r0, [sp, #148]	; 0x94
   16350:	adds	r4, r4, r3
   16354:	ldr	r1, [sp, #56]	; 0x38
   16358:	adc	r6, r6, r5
   1635c:	eor	sl, r6, r0
   16360:	ldr	r0, [sp, #152]	; 0x98
   16364:	adds	r1, sl, r1
   16368:	eor	r3, r1, r3
   1636c:	lsl	r9, r3, #8
   16370:	lsr	r3, r3, #24
   16374:	eor	r0, r4, r0
   16378:	adc	r2, r0, r2
   1637c:	eor	r5, r2, r5
   16380:	orr	r9, r9, r5, lsr #24
   16384:	orr	r3, r3, r5, lsl #8
   16388:	ldr	r5, [sp, #252]	; 0xfc
   1638c:	adds	r4, r4, r5
   16390:	ldr	r5, [sp, #248]	; 0xf8
   16394:	adc	r5, r6, r5
   16398:	adds	r6, r4, r3
   1639c:	adc	r4, r5, r9
   163a0:	str	r6, [sp, #132]	; 0x84
   163a4:	str	r4, [sp, #136]	; 0x88
   163a8:	eor	r0, r4, r0
   163ac:	eor	r4, r6, sl
   163b0:	lsl	r5, r4, #16
   163b4:	lsr	r4, r4, #16
   163b8:	orr	r6, r5, r0, lsr #16
   163bc:	orr	r0, r4, r0, lsl #16
   163c0:	ldr	r5, [sp, #140]	; 0x8c
   163c4:	adds	r1, r0, r1
   163c8:	str	r0, [sp, #88]	; 0x58
   163cc:	eor	r0, ip, r6
   163d0:	str	r0, [sp, #84]	; 0x54
   163d4:	adc	r0, r6, r2
   163d8:	str	r1, [sp, #116]	; 0x74
   163dc:	eor	r1, r1, r3
   163e0:	str	r0, [sp, #128]	; 0x80
   163e4:	eor	r0, r0, r9
   163e8:	lsl	r2, r0, #1
   163ec:	orr	r2, r2, r1, lsr #31
   163f0:	lsl	r1, r1, #1
   163f4:	orr	r0, r1, r0, lsr #31
   163f8:	ldr	r1, [sp, #92]	; 0x5c
   163fc:	str	r2, [sp, #180]	; 0xb4
   16400:	ldr	r2, [sp, #72]	; 0x48
   16404:	str	r0, [sp, #164]	; 0xa4
   16408:	ldr	r0, [sp, #76]	; 0x4c
   1640c:	eor	r1, r2, r1
   16410:	lsl	r2, r1, #16
   16414:	eor	r0, r8, r0
   16418:	lsr	r1, r1, #16
   1641c:	orr	r3, r2, r0, lsr #16
   16420:	orr	r0, r1, r0, lsl #16
   16424:	ldr	r1, [sp, #80]	; 0x50
   16428:	str	r0, [sp, #92]	; 0x5c
   1642c:	str	r3, [sp, #72]	; 0x48
   16430:	adds	r6, r0, r1
   16434:	ldr	r0, [sp, #96]	; 0x60
   16438:	ldr	r1, [sp, #60]	; 0x3c
   1643c:	str	r6, [sp, #148]	; 0x94
   16440:	adc	r9, r3, r0
   16444:	ldr	r0, [sp, #52]	; 0x34
   16448:	eor	r1, r6, r1
   1644c:	str	r9, [sp, #152]	; 0x98
   16450:	eor	r0, r9, r0
   16454:	lsl	r2, r0, #1
   16458:	orr	r8, r2, r1, lsr #31
   1645c:	lsl	r1, r1, #1
   16460:	orr	r4, r1, r0, lsr #31
   16464:	ldr	r0, [sp, #176]	; 0xb0
   16468:	ldr	r1, [sp, #188]	; 0xbc
   1646c:	str	r8, [sp, #80]	; 0x50
   16470:	str	r4, [sp, #76]	; 0x4c
   16474:	adds	r0, r0, r7
   16478:	ldr	r7, [sp, #112]	; 0x70
   1647c:	adc	r1, r1, lr
   16480:	adds	ip, r0, r7
   16484:	ldr	r0, [sp, #108]	; 0x6c
   16488:	adc	r3, r1, r0
   1648c:	ldr	r1, [sp, #168]	; 0xa8
   16490:	eor	sl, r3, r1
   16494:	ldr	r1, [sp, #192]	; 0xc0
   16498:	adds	r2, sl, r5
   1649c:	ldr	r5, [sp, #144]	; 0x90
   164a0:	str	r2, [sp, #192]	; 0xc0
   164a4:	eor	r1, ip, r1
   164a8:	adc	r5, r1, r5
   164ac:	eor	lr, r5, r0
   164b0:	eor	r0, r2, r7
   164b4:	lsl	r7, r0, #8
   164b8:	lsr	r0, r0, #24
   164bc:	orr	r0, r0, lr, lsl #8
   164c0:	orr	r2, r7, lr, lsr #24
   164c4:	ldr	lr, [sp, #68]	; 0x44
   164c8:	ldr	r7, [fp, #-84]	; 0xffffffac
   164cc:	str	r0, [sp, #144]	; 0x90
   164d0:	adds	r0, r0, ip
   164d4:	str	r2, [sp, #140]	; 0x8c
   164d8:	ldr	ip, [sp, #64]	; 0x40
   164dc:	adc	r2, r2, r3
   164e0:	ldr	r3, [sp, #200]	; 0xc8
   164e4:	str	r3, [sp, #396]	; 0x18c
   164e8:	ldr	r3, [sp, #204]	; 0xcc
   164ec:	str	r3, [sp, #392]	; 0x188
   164f0:	ldr	r3, [sp, #184]	; 0xb8
   164f4:	str	r3, [sp, #352]	; 0x160
   164f8:	ldr	r3, [sp, #196]	; 0xc4
   164fc:	str	r3, [sp, #356]	; 0x164
   16500:	ldr	r3, [sp, #164]	; 0xa4
   16504:	str	lr, [sp, #312]	; 0x138
   16508:	str	ip, [sp, #316]	; 0x13c
   1650c:	str	r6, [sp, #360]	; 0x168
   16510:	str	r9, [sp, #364]	; 0x16c
   16514:	str	r4, [sp, #320]	; 0x140
   16518:	str	r8, [sp, #324]	; 0x144
   1651c:	str	r3, [sp, #328]	; 0x148
   16520:	ldr	r3, [sp, #180]	; 0xb4
   16524:	str	r3, [sp, #332]	; 0x14c
   16528:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1652c:	adds	r3, r0, r3
   16530:	adc	r0, r2, r7
   16534:	str	r3, [sp, #96]	; 0x60
   16538:	str	r0, [sp, #108]	; 0x6c
   1653c:	eor	r0, r0, r1
   16540:	eor	r1, r3, sl
   16544:	ldr	r3, [sp, #124]	; 0x7c
   16548:	lsl	r2, r1, #16
   1654c:	lsr	r1, r1, #16
   16550:	orr	r2, r2, r0, lsr #16
   16554:	orr	r0, r1, r0, lsl #16
   16558:	ldr	r1, [sp, #192]	; 0xc0
   1655c:	str	r0, [sp, #60]	; 0x3c
   16560:	str	r2, [sp, #56]	; 0x38
   16564:	adds	r8, r0, r1
   16568:	ldr	r0, [sp, #88]	; 0x58
   1656c:	adc	sl, r2, r5
   16570:	ldr	r2, [sp, #84]	; 0x54
   16574:	eor	r7, r3, r0
   16578:	ldr	r0, [sp, #260]	; 0x104
   1657c:	adds	r6, r8, r2
   16580:	adc	r5, sl, r7
   16584:	eor	r1, r6, lr
   16588:	lsl	r9, r1, #8
   1658c:	eor	r4, r5, ip
   16590:	lsr	r1, r1, #24
   16594:	orr	r9, r9, r4, lsr #24
   16598:	orr	r1, r1, r4, lsl #8
   1659c:	adds	r4, r3, r0
   165a0:	ldr	r0, [sp, #256]	; 0x100
   165a4:	ldr	r3, [sp, #120]	; 0x78
   165a8:	adc	r0, r3, r0
   165ac:	adds	r3, r4, r1
   165b0:	adc	r0, r0, r9
   165b4:	eor	r4, r3, r2
   165b8:	str	r3, [sp, #120]	; 0x78
   165bc:	str	r0, [sp, #124]	; 0x7c
   165c0:	eor	r0, r0, r7
   165c4:	lsl	r7, r4, #16
   165c8:	lsr	r4, r4, #16
   165cc:	orr	r7, r7, r0, lsr #16
   165d0:	orr	r0, r4, r0, lsl #16
   165d4:	adds	r3, r0, r6
   165d8:	str	r0, [sp, #192]	; 0xc0
   165dc:	str	r7, [sp, #188]	; 0xbc
   165e0:	adc	r0, r7, r5
   165e4:	eor	r1, r3, r1
   165e8:	str	r3, [sp, #168]	; 0xa8
   165ec:	ldr	r3, [sp, #156]	; 0x9c
   165f0:	ldr	r7, [sp, #160]	; 0xa0
   165f4:	str	r0, [sp, #176]	; 0xb0
   165f8:	eor	r0, r0, r9
   165fc:	lsl	r4, r0, #1
   16600:	orr	ip, r4, r1, lsr #31
   16604:	lsl	r1, r1, #1
   16608:	orr	r9, r1, r0, lsr #31
   1660c:	ldr	r0, [sp, #140]	; 0x8c
   16610:	ldr	r1, [sp, #144]	; 0x90
   16614:	str	ip, [sp, #84]	; 0x54
   16618:	str	r9, [sp, #88]	; 0x58
   1661c:	eor	r0, sl, r0
   16620:	eor	r1, r8, r1
   16624:	lsl	r2, r0, #1
   16628:	orr	r2, r2, r1, lsr #31
   1662c:	lsl	r1, r1, #1
   16630:	orr	r0, r1, r0, lsr #31
   16634:	ldr	r1, [sp, #268]	; 0x10c
   16638:	adds	r1, r3, r1
   1663c:	ldr	r3, [sp, #264]	; 0x108
   16640:	adc	r7, r7, r3
   16644:	ldr	r3, [sp, #72]	; 0x48
   16648:	adds	r1, r1, r0
   1664c:	adc	r7, r7, r2
   16650:	eor	r6, r7, r3
   16654:	ldr	r3, [sp, #92]	; 0x5c
   16658:	eor	r4, r1, r3
   1665c:	ldr	r3, [sp, #116]	; 0x74
   16660:	adds	r5, r6, r3
   16664:	ldr	r3, [sp, #128]	; 0x80
   16668:	eor	r0, r5, r0
   1666c:	adc	lr, r4, r3
   16670:	lsl	r3, r0, #8
   16674:	lsr	r0, r0, #24
   16678:	eor	r2, lr, r2
   1667c:	orr	r3, r3, r2, lsr #24
   16680:	orr	r0, r0, r2, lsl #8
   16684:	ldr	r2, [sp, #236]	; 0xec
   16688:	adds	r1, r1, r2
   1668c:	ldr	r2, [sp, #232]	; 0xe8
   16690:	adc	r2, r7, r2
   16694:	adds	r7, r1, r0
   16698:	adc	r2, r2, r3
   1669c:	adds	r1, r7, r9
   166a0:	str	r1, [sp, #68]	; 0x44
   166a4:	adc	r1, r2, ip
   166a8:	eor	r2, r2, r4
   166ac:	eor	r4, r7, r6
   166b0:	lsl	r6, r4, #16
   166b4:	lsr	r4, r4, #16
   166b8:	str	r1, [sp, #64]	; 0x40
   166bc:	orr	r1, r4, r2, lsl #16
   166c0:	orr	r7, r6, r2, lsr #16
   166c4:	ldr	r6, [sp, #80]	; 0x50
   166c8:	str	r1, [sp, #160]	; 0xa0
   166cc:	adds	r1, r1, r5
   166d0:	str	r7, [sp, #156]	; 0x9c
   166d4:	adc	sl, r7, lr
   166d8:	eor	r0, r1, r0
   166dc:	mov	lr, r1
   166e0:	str	r1, [sp, #112]	; 0x70
   166e4:	ldr	r1, [sp, #132]	; 0x84
   166e8:	ldr	r7, [sp, #76]	; 0x4c
   166ec:	eor	r2, sl, r3
   166f0:	str	sl, [sp, #116]	; 0x74
   166f4:	lsl	r3, r2, #1
   166f8:	orr	r9, r3, r0, lsr #31
   166fc:	lsl	r0, r0, #1
   16700:	orr	r4, r0, r2, lsr #31
   16704:	ldr	r0, [sp, #252]	; 0xfc
   16708:	ldr	r2, [sp, #136]	; 0x88
   1670c:	str	r9, [sp, #144]	; 0x90
   16710:	str	r4, [sp, #140]	; 0x8c
   16714:	adds	r0, r1, r0
   16718:	ldr	r1, [sp, #248]	; 0xf8
   1671c:	adc	r2, r2, r1
   16720:	adds	r3, r0, r7
   16724:	ldr	r0, [sp, #56]	; 0x38
   16728:	adc	r5, r2, r6
   1672c:	eor	ip, r0, r5
   16730:	ldr	r0, [sp, #60]	; 0x3c
   16734:	eor	r2, r0, r3
   16738:	ldr	r0, [sp, #184]	; 0xb8
   1673c:	adds	r1, ip, r0
   16740:	ldr	r0, [sp, #196]	; 0xc4
   16744:	str	r1, [sp, #184]	; 0xb8
   16748:	adc	r0, r2, r0
   1674c:	str	r0, [sp, #196]	; 0xc4
   16750:	eor	r8, r0, r6
   16754:	eor	r0, r1, r7
   16758:	ldr	r7, [sp, #188]	; 0xbc
   1675c:	lsl	r6, r0, #8
   16760:	lsr	r0, r0, #24
   16764:	orr	r0, r0, r8, lsl #8
   16768:	orr	r6, r6, r8, lsr #24
   1676c:	str	r0, [sp, #80]	; 0x50
   16770:	adds	r0, r0, r3
   16774:	str	r7, [sp, #380]	; 0x17c
   16778:	ldr	r7, [sp, #192]	; 0xc0
   1677c:	str	r6, [sp, #72]	; 0x48
   16780:	adc	r3, r6, r5
   16784:	ldr	r5, [sp, #168]	; 0xa8
   16788:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1678c:	str	r7, [sp, #376]	; 0x178
   16790:	str	r5, [sp, #344]	; 0x158
   16794:	ldr	r5, [sp, #176]	; 0xb0
   16798:	str	r5, [sp, #348]	; 0x15c
   1679c:	ldr	r5, [sp, #156]	; 0x9c
   167a0:	str	r5, [sp, #372]	; 0x174
   167a4:	ldr	r5, [sp, #160]	; 0xa0
   167a8:	str	r5, [sp, #368]	; 0x170
   167ac:	ldr	r5, [fp, #-56]	; 0xffffffc8
   167b0:	str	lr, [sp, #336]	; 0x150
   167b4:	str	sl, [sp, #340]	; 0x154
   167b8:	str	r4, [sp, #304]	; 0x130
   167bc:	str	r9, [sp, #308]	; 0x134
   167c0:	ldr	r4, [sp, #164]	; 0xa4
   167c4:	adds	r7, r0, r5
   167c8:	ldr	r5, [fp, #-124]	; 0xffffff84
   167cc:	adc	r0, r3, r6
   167d0:	eor	r1, r7, ip
   167d4:	str	r7, [sp, #76]	; 0x4c
   167d8:	ldr	r7, [sp, #68]	; 0x44
   167dc:	ldr	ip, [fp, #-128]	; 0xffffff80
   167e0:	str	r0, [sp, #92]	; 0x5c
   167e4:	eor	r0, r0, r2
   167e8:	lsr	r3, r1, #16
   167ec:	lsl	r1, r1, #16
   167f0:	ldr	r2, [sp, #108]	; 0x6c
   167f4:	orr	r3, r3, r0, lsl #16
   167f8:	orr	r6, r1, r0, lsr #16
   167fc:	ldr	r0, [fp, #-160]	; 0xffffff60
   16800:	mov	r1, r3
   16804:	str	r3, [sp, #132]	; 0x84
   16808:	str	r3, [sp, #384]	; 0x180
   1680c:	ldr	r3, [fp, #-156]	; 0xffffff64
   16810:	str	r6, [sp, #128]	; 0x80
   16814:	str	r6, [sp, #388]	; 0x184
   16818:	adds	r8, r7, r0
   1681c:	ldr	r0, [sp, #64]	; 0x40
   16820:	adc	r7, r0, r3
   16824:	ldr	r0, [sp, #184]	; 0xb8
   16828:	adds	lr, r1, r0
   1682c:	ldr	r0, [sp, #196]	; 0xc4
   16830:	ldr	r1, [sp, #180]	; 0xb4
   16834:	str	lr, [sp, #52]	; 0x34
   16838:	adc	r0, r6, r0
   1683c:	str	r0, [sp, #56]	; 0x38
   16840:	ldr	r0, [sp, #96]	; 0x60
   16844:	adds	r0, r0, r4
   16848:	adc	r6, r2, r1
   1684c:	adds	r2, r0, ip
   16850:	ldr	r0, [sp, #200]	; 0xc8
   16854:	adc	r5, r6, r5
   16858:	eor	ip, r5, r0
   1685c:	ldr	r0, [sp, #204]	; 0xcc
   16860:	eor	r3, r2, r0
   16864:	ldr	r0, [sp, #148]	; 0x94
   16868:	adds	r6, ip, r0
   1686c:	ldr	r0, [sp, #152]	; 0x98
   16870:	str	r6, [sp, #60]	; 0x3c
   16874:	adc	r0, r3, r0
   16878:	str	r0, [sp, #204]	; 0xcc
   1687c:	eor	r1, r0, r1
   16880:	eor	r0, r6, r4
   16884:	lsl	sl, r0, #8
   16888:	lsr	r0, r0, #24
   1688c:	orr	r4, r0, r1, lsl #8
   16890:	ldr	r0, [sp, #208]	; 0xd0
   16894:	orr	r6, sl, r1, lsr #24
   16898:	ldr	r1, [sp, #220]	; 0xdc
   1689c:	str	r6, [sp, #64]	; 0x40
   168a0:	str	r4, [sp, #68]	; 0x44
   168a4:	adds	r0, r2, r0
   168a8:	adc	r1, r5, r1
   168ac:	adds	r2, r0, r4
   168b0:	ldr	r5, [sp, #240]	; 0xf0
   168b4:	adc	r0, r1, r6
   168b8:	eor	r1, r2, ip
   168bc:	str	r2, [sp, #96]	; 0x60
   168c0:	ldr	r6, [sp, #56]	; 0x38
   168c4:	str	r0, [sp, #108]	; 0x6c
   168c8:	lsr	r2, r1, #16
   168cc:	eor	r0, r0, r3
   168d0:	lsl	r1, r1, #16
   168d4:	orr	r9, r1, r0, lsr #16
   168d8:	orr	sl, r2, r0, lsl #16
   168dc:	ldr	r0, [sp, #84]	; 0x54
   168e0:	eor	r3, r9, r7
   168e4:	eor	r2, sl, r8
   168e8:	adds	ip, r3, lr
   168ec:	adc	lr, r2, r6
   168f0:	eor	r1, lr, r0
   168f4:	ldr	r0, [sp, #88]	; 0x58
   168f8:	eor	r0, ip, r0
   168fc:	lsl	r4, r0, #8
   16900:	lsr	r0, r0, #24
   16904:	orr	r4, r4, r1, lsr #24
   16908:	orr	r0, r0, r1, lsl #8
   1690c:	ldr	r1, [sp, #244]	; 0xf4
   16910:	adds	r1, r8, r1
   16914:	adc	r7, r7, r5
   16918:	adds	r5, r1, r0
   1691c:	adc	r1, r7, r4
   16920:	str	r5, [sp, #148]	; 0x94
   16924:	str	r1, [sp, #152]	; 0x98
   16928:	eor	r1, r1, r2
   1692c:	eor	r2, r5, r3
   16930:	lsl	r3, r2, #16
   16934:	lsr	r2, r2, #16
   16938:	orr	r3, r3, r1, lsr #16
   1693c:	orr	r1, r2, r1, lsl #16
   16940:	adds	ip, r1, ip
   16944:	str	r1, [sp, #196]	; 0xc4
   16948:	str	r3, [sp, #164]	; 0xa4
   1694c:	adc	r1, r3, lr
   16950:	eor	r0, ip, r0
   16954:	mov	lr, r3
   16958:	str	ip, [sp, #136]	; 0x88
   1695c:	str	r1, [sp, #180]	; 0xb4
   16960:	eor	r1, r1, r4
   16964:	ldr	r4, [sp, #124]	; 0x7c
   16968:	str	lr, [sp, #396]	; 0x18c
   1696c:	ldr	lr, [fp, #-132]	; 0xffffff7c
   16970:	lsl	r2, r1, #1
   16974:	orr	r2, r2, r0, lsr #31
   16978:	lsl	r0, r0, #1
   1697c:	orr	r0, r0, r1, lsr #31
   16980:	ldr	r1, [sp, #80]	; 0x50
   16984:	str	r2, [sp, #184]	; 0xb8
   16988:	ldr	r2, [sp, #52]	; 0x34
   1698c:	str	r0, [sp, #200]	; 0xc8
   16990:	ldr	r0, [sp, #72]	; 0x48
   16994:	eor	r1, r2, r1
   16998:	eor	r0, r6, r0
   1699c:	lsl	r2, r0, #1
   169a0:	orr	r2, r2, r1, lsr #31
   169a4:	lsl	r1, r1, #1
   169a8:	orr	r3, r1, r0, lsr #31
   169ac:	ldr	r0, [sp, #216]	; 0xd8
   169b0:	ldr	r1, [sp, #120]	; 0x78
   169b4:	adds	r0, r1, r0
   169b8:	ldr	r1, [sp, #212]	; 0xd4
   169bc:	adc	r1, r4, r1
   169c0:	adds	r7, r0, r3
   169c4:	ldr	r0, [sp, #156]	; 0x9c
   169c8:	adc	r5, r1, r2
   169cc:	eor	r8, r5, r0
   169d0:	ldr	r0, [sp, #60]	; 0x3c
   169d4:	adds	r1, sl, r0
   169d8:	ldr	r0, [sp, #204]	; 0xcc
   169dc:	str	r1, [sp, #120]	; 0x78
   169e0:	adc	r4, r9, r0
   169e4:	ldr	r0, [sp, #160]	; 0xa0
   169e8:	adds	r9, r1, r8
   169ec:	ldr	r1, [sp, #196]	; 0xc4
   169f0:	eor	r3, r9, r3
   169f4:	str	r4, [sp, #60]	; 0x3c
   169f8:	eor	r6, r7, r0
   169fc:	str	r1, [sp, #392]	; 0x188
   16a00:	lsl	r0, r3, #8
   16a04:	str	ip, [sp, #352]	; 0x160
   16a08:	lsr	r3, r3, #24
   16a0c:	ldr	ip, [fp, #-136]	; 0xffffff78
   16a10:	ldr	r1, [sp, #180]	; 0xb4
   16a14:	adc	sl, r4, r6
   16a18:	ldr	r4, [sp, #244]	; 0xf4
   16a1c:	eor	r2, sl, r2
   16a20:	orr	r0, r0, r2, lsr #24
   16a24:	orr	r2, r3, r2, lsl #8
   16a28:	str	r1, [sp, #356]	; 0x164
   16a2c:	ldr	r1, [sp, #200]	; 0xc8
   16a30:	adds	r3, r2, r7
   16a34:	ldr	r7, [sp, #184]	; 0xb8
   16a38:	adc	r5, r0, r5
   16a3c:	adds	r3, r3, ip
   16a40:	adc	r5, r5, lr
   16a44:	adds	lr, r3, r4
   16a48:	ldr	r4, [sp, #240]	; 0xf0
   16a4c:	eor	r3, r3, r8
   16a50:	str	r1, [sp, #312]	; 0x138
   16a54:	str	r7, [sp, #316]	; 0x13c
   16a58:	adc	ip, r5, r4
   16a5c:	adds	r1, lr, r1
   16a60:	lsl	r4, r3, #16
   16a64:	lsr	r3, r3, #16
   16a68:	ldr	lr, [fp, #-144]	; 0xffffff70
   16a6c:	str	r1, [sp, #72]	; 0x48
   16a70:	adc	r1, ip, r7
   16a74:	ldr	ip, [fp, #-140]	; 0xffffff74
   16a78:	str	r1, [sp, #204]	; 0xcc
   16a7c:	eor	r1, r5, r6
   16a80:	ldr	r5, [sp, #92]	; 0x5c
   16a84:	orr	r7, r4, r1, lsr #16
   16a88:	orr	r1, r3, r1, lsl #16
   16a8c:	adds	r3, r1, r9
   16a90:	str	r1, [sp, #124]	; 0x7c
   16a94:	str	r7, [sp, #80]	; 0x50
   16a98:	ldr	r9, [sp, #140]	; 0x8c
   16a9c:	adc	r1, r7, sl
   16aa0:	str	r3, [sp, #360]	; 0x168
   16aa4:	str	r3, [sp, #156]	; 0x9c
   16aa8:	eor	r0, r1, r0
   16aac:	mov	r7, r1
   16ab0:	str	r1, [sp, #160]	; 0xa0
   16ab4:	eor	r1, r3, r2
   16ab8:	lsl	r2, r0, #1
   16abc:	str	r7, [sp, #364]	; 0x16c
   16ac0:	ldr	r7, [fp, #-84]	; 0xffffffac
   16ac4:	orr	r6, r2, r1, lsr #31
   16ac8:	lsl	r1, r1, #1
   16acc:	ldr	r2, [sp, #120]	; 0x78
   16ad0:	orr	r4, r1, r0, lsr #31
   16ad4:	ldr	r0, [sp, #64]	; 0x40
   16ad8:	ldr	r1, [sp, #60]	; 0x3c
   16adc:	str	r6, [sp, #88]	; 0x58
   16ae0:	str	r6, [sp, #324]	; 0x144
   16ae4:	ldr	r6, [sp, #116]	; 0x74
   16ae8:	str	r4, [sp, #84]	; 0x54
   16aec:	str	r4, [sp, #320]	; 0x140
   16af0:	ldr	r4, [fp, #-88]	; 0xffffffa8
   16af4:	eor	r0, r1, r0
   16af8:	ldr	r1, [sp, #68]	; 0x44
   16afc:	eor	r1, r2, r1
   16b00:	lsl	r2, r0, #1
   16b04:	orr	r2, r2, r1, lsr #31
   16b08:	lsl	r1, r1, #1
   16b0c:	orr	r0, r1, r0, lsr #31
   16b10:	ldr	r1, [sp, #76]	; 0x4c
   16b14:	adds	r1, r0, r1
   16b18:	adc	r5, r2, r5
   16b1c:	adds	r1, r1, r4
   16b20:	ldr	r4, [sp, #188]	; 0xbc
   16b24:	adc	r3, r5, r7
   16b28:	ldr	r5, [sp, #112]	; 0x70
   16b2c:	eor	r7, r3, r4
   16b30:	ldr	r4, [sp, #192]	; 0xc0
   16b34:	adds	r5, r7, r5
   16b38:	eor	r0, r5, r0
   16b3c:	eor	r4, r1, r4
   16b40:	adc	r8, r4, r6
   16b44:	lsl	r6, r0, #8
   16b48:	lsr	r0, r0, #24
   16b4c:	adds	r1, lr, r1
   16b50:	eor	r2, r8, r2
   16b54:	orr	r0, r0, r2, lsl #8
   16b58:	orr	r6, r6, r2, lsr #24
   16b5c:	adc	r2, ip, r3
   16b60:	adds	r3, r1, r0
   16b64:	adc	r1, r2, r6
   16b68:	eor	r2, r3, r7
   16b6c:	str	r3, [sp, #112]	; 0x70
   16b70:	ldr	r7, [fp, #-68]	; 0xffffffbc
   16b74:	str	r1, [sp, #116]	; 0x74
   16b78:	lsl	r3, r2, #16
   16b7c:	eor	r1, r1, r4
   16b80:	lsr	r2, r2, #16
   16b84:	orr	sl, r2, r1, lsl #16
   16b88:	orr	r3, r3, r1, lsr #16
   16b8c:	ldr	r1, [sp, #204]	; 0xcc
   16b90:	adds	r2, sl, r5
   16b94:	str	r7, [sp, #64]	; 0x40
   16b98:	str	r2, [sp, #76]	; 0x4c
   16b9c:	eor	r0, r2, r0
   16ba0:	ldr	r2, [sp, #96]	; 0x60
   16ba4:	eor	r1, r3, r1
   16ba8:	str	r1, [sp, #188]	; 0xbc
   16bac:	adc	r1, r3, r8
   16bb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16bb4:	eor	r6, r1, r6
   16bb8:	str	r1, [sp, #92]	; 0x5c
   16bbc:	lsl	r5, r6, #1
   16bc0:	adds	ip, r2, r9
   16bc4:	ldr	r2, [sp, #108]	; 0x6c
   16bc8:	orr	r1, r5, r0, lsr #31
   16bcc:	lsl	r0, r0, #1
   16bd0:	orr	r0, r0, r6, lsr #31
   16bd4:	ldr	r6, [sp, #144]	; 0x90
   16bd8:	str	r1, [sp, #120]	; 0x78
   16bdc:	str	r1, [sp, #332]	; 0x14c
   16be0:	str	r0, [sp, #192]	; 0xc0
   16be4:	str	r0, [sp, #328]	; 0x148
   16be8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16bec:	adc	r4, r2, r6
   16bf0:	adds	r3, ip, r3
   16bf4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16bf8:	adc	ip, r4, r0
   16bfc:	ldr	r0, [sp, #128]	; 0x80
   16c00:	str	r2, [sp, #96]	; 0x60
   16c04:	eor	lr, ip, r0
   16c08:	ldr	r0, [sp, #132]	; 0x84
   16c0c:	eor	r1, r3, r0
   16c10:	ldr	r0, [sp, #168]	; 0xa8
   16c14:	adds	r5, lr, r0
   16c18:	ldr	r0, [sp, #176]	; 0xb0
   16c1c:	adc	r8, r1, r0
   16c20:	eor	r0, r5, r9
   16c24:	eor	r4, r8, r6
   16c28:	lsl	r6, r0, #8
   16c2c:	lsr	r0, r0, #24
   16c30:	orr	r9, r0, r4, lsl #8
   16c34:	adds	r0, r2, r3
   16c38:	orr	r6, r6, r4, lsr #24
   16c3c:	adc	r3, r7, ip
   16c40:	adds	r7, r0, r9
   16c44:	str	r6, [sp, #128]	; 0x80
   16c48:	adc	r0, r3, r6
   16c4c:	ldr	r6, [sp, #72]	; 0x48
   16c50:	str	r7, [sp, #108]	; 0x6c
   16c54:	str	r0, [sp, #176]	; 0xb0
   16c58:	eor	r0, r0, r1
   16c5c:	eor	r1, r7, lr
   16c60:	lsl	r3, r1, #16
   16c64:	lsr	r1, r1, #16
   16c68:	orr	r2, r3, r0, lsr #16
   16c6c:	orr	r0, r1, r0, lsl #16
   16c70:	ldr	r3, [sp, #188]	; 0xbc
   16c74:	ldr	r1, [sp, #252]	; 0xfc
   16c78:	adds	r4, r0, r5
   16c7c:	str	r0, [sp, #140]	; 0x8c
   16c80:	ldr	r0, [sp, #184]	; 0xb8
   16c84:	str	r2, [sp, #132]	; 0x84
   16c88:	adc	lr, r2, r8
   16c8c:	eor	r2, sl, r6
   16c90:	adds	ip, r4, r3
   16c94:	adc	r5, lr, r2
   16c98:	eor	r7, r5, r0
   16c9c:	ldr	r0, [sp, #200]	; 0xc8
   16ca0:	eor	r0, ip, r0
   16ca4:	lsl	sl, r0, #8
   16ca8:	lsr	r0, r0, #24
   16cac:	orr	sl, sl, r7, lsr #24
   16cb0:	orr	r0, r0, r7, lsl #8
   16cb4:	adds	r7, r6, r1
   16cb8:	ldr	r1, [sp, #248]	; 0xf8
   16cbc:	ldr	r6, [sp, #204]	; 0xcc
   16cc0:	adc	r1, r6, r1
   16cc4:	adds	r6, r7, r0
   16cc8:	adc	r1, r1, sl
   16ccc:	str	r6, [sp, #144]	; 0x90
   16cd0:	str	r1, [sp, #168]	; 0xa8
   16cd4:	eor	r1, r1, r2
   16cd8:	eor	r2, r6, r3
   16cdc:	lsl	r7, r2, #16
   16ce0:	lsr	r2, r2, #16
   16ce4:	orr	r7, r7, r1, lsr #16
   16ce8:	orr	r1, r2, r1, lsl #16
   16cec:	adds	r2, r1, ip
   16cf0:	str	r1, [sp, #188]	; 0xbc
   16cf4:	str	r7, [sp, #184]	; 0xb8
   16cf8:	adc	r1, r7, r5
   16cfc:	str	r2, [sp, #200]	; 0xc8
   16d00:	eor	r0, r2, r0
   16d04:	ldr	r7, [sp, #152]	; 0x98
   16d08:	str	r1, [sp, #204]	; 0xcc
   16d0c:	eor	r1, r1, sl
   16d10:	lsl	r2, r1, #1
   16d14:	orr	sl, r2, r0, lsr #31
   16d18:	lsl	r0, r0, #1
   16d1c:	orr	ip, r0, r1, lsr #31
   16d20:	ldr	r0, [sp, #128]	; 0x80
   16d24:	eor	r1, r4, r9
   16d28:	str	sl, [sp, #68]	; 0x44
   16d2c:	str	ip, [sp, #72]	; 0x48
   16d30:	eor	r0, lr, r0
   16d34:	lsl	r2, r0, #1
   16d38:	orr	r3, r2, r1, lsr #31
   16d3c:	lsl	r1, r1, #1
   16d40:	ldr	r2, [sp, #148]	; 0x94
   16d44:	orr	r1, r1, r0, lsr #31
   16d48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16d4c:	adds	r0, r0, r2
   16d50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d54:	adc	r2, r2, r7
   16d58:	adds	r7, r0, r1
   16d5c:	ldr	r0, [sp, #80]	; 0x50
   16d60:	adc	r6, r2, r3
   16d64:	eor	r2, r6, r0
   16d68:	ldr	r0, [sp, #124]	; 0x7c
   16d6c:	str	r2, [sp, #56]	; 0x38
   16d70:	eor	r9, r7, r0
   16d74:	ldr	r0, [sp, #76]	; 0x4c
   16d78:	adds	r2, r2, r0
   16d7c:	ldr	r0, [sp, #92]	; 0x5c
   16d80:	eor	r1, r2, r1
   16d84:	str	r2, [sp, #80]	; 0x50
   16d88:	adc	r0, r9, r0
   16d8c:	eor	r5, r0, r3
   16d90:	str	r0, [sp, #92]	; 0x5c
   16d94:	ldr	r0, [sp, #96]	; 0x60
   16d98:	lsl	r3, r1, #8
   16d9c:	lsr	r1, r1, #24
   16da0:	orr	r1, r1, r5, lsl #8
   16da4:	orr	r2, r3, r5, lsr #24
   16da8:	str	r1, [sp, #76]	; 0x4c
   16dac:	str	r2, [sp, #40]	; 0x28
   16db0:	adds	r7, r7, r0
   16db4:	ldr	r0, [sp, #64]	; 0x40
   16db8:	adc	r6, r6, r0
   16dbc:	ldr	r0, [sp, #236]	; 0xec
   16dc0:	adds	r8, r7, r1
   16dc4:	ldr	r1, [sp, #88]	; 0x58
   16dc8:	adc	r7, r6, r2
   16dcc:	adds	r6, ip, r0
   16dd0:	ldr	r0, [sp, #232]	; 0xe8
   16dd4:	adc	r5, sl, r0
   16dd8:	adds	r0, r6, r8
   16ddc:	ldr	sl, [sp, #84]	; 0x54
   16de0:	str	r0, [sp, #60]	; 0x3c
   16de4:	adc	r0, r5, r7
   16de8:	str	r0, [sp, #52]	; 0x34
   16dec:	ldr	r0, [sp, #268]	; 0x10c
   16df0:	adds	r6, sl, r0
   16df4:	ldr	r0, [sp, #264]	; 0x108
   16df8:	adc	r5, r1, r0
   16dfc:	ldr	r0, [sp, #112]	; 0x70
   16e00:	adds	r6, r6, r0
   16e04:	ldr	r0, [sp, #116]	; 0x74
   16e08:	adc	r5, r5, r0
   16e0c:	ldr	r0, [sp, #132]	; 0x84
   16e10:	eor	ip, r0, r5
   16e14:	ldr	r0, [sp, #140]	; 0x8c
   16e18:	eor	r3, r0, r6
   16e1c:	ldr	r0, [sp, #136]	; 0x88
   16e20:	adds	lr, ip, r0
   16e24:	ldr	r0, [sp, #180]	; 0xb4
   16e28:	adc	r4, r3, r0
   16e2c:	eor	r0, lr, sl
   16e30:	lsl	sl, r0, #8
   16e34:	eor	r1, r4, r1
   16e38:	lsr	r0, r0, #24
   16e3c:	orr	r2, r0, r1, lsl #8
   16e40:	ldr	r0, [sp, #228]	; 0xe4
   16e44:	orr	sl, sl, r1, lsr #24
   16e48:	ldr	r1, [sp, #224]	; 0xe0
   16e4c:	str	r2, [sp, #152]	; 0x98
   16e50:	str	sl, [sp, #112]	; 0x70
   16e54:	adds	r0, r6, r0
   16e58:	adc	r1, r5, r1
   16e5c:	adds	r5, r0, r2
   16e60:	adc	r0, r1, sl
   16e64:	eor	r1, r5, ip
   16e68:	str	r5, [sp, #124]	; 0x7c
   16e6c:	ldr	ip, [sp, #192]	; 0xc0
   16e70:	str	r0, [sp, #128]	; 0x80
   16e74:	lsl	r2, r1, #16
   16e78:	eor	r0, r0, r3
   16e7c:	lsr	r1, r1, #16
   16e80:	orr	r2, r2, r0, lsr #16
   16e84:	orr	r0, r1, r0, lsl #16
   16e88:	adds	r1, r0, lr
   16e8c:	mov	sl, r0
   16e90:	str	r0, [sp, #148]	; 0x94
   16e94:	mov	r5, r2
   16e98:	str	r2, [sp, #140]	; 0x8c
   16e9c:	str	r1, [sp, #48]	; 0x30
   16ea0:	ldr	r1, [sp, #56]	; 0x38
   16ea4:	adc	r0, r2, r4
   16ea8:	str	r0, [sp, #44]	; 0x2c
   16eac:	eor	r0, r7, r9
   16eb0:	ldr	r7, [sp, #176]	; 0xb0
   16eb4:	eor	r1, r8, r1
   16eb8:	ldr	r8, [sp, #120]	; 0x78
   16ebc:	lsl	r2, r1, #16
   16ec0:	lsr	r1, r1, #16
   16ec4:	orr	r4, r2, r0, lsr #16
   16ec8:	orr	r0, r1, r0, lsl #16
   16ecc:	ldr	r1, [sp, #80]	; 0x50
   16ed0:	mov	r9, r0
   16ed4:	str	r0, [sp, #88]	; 0x58
   16ed8:	str	r4, [sp, #372]	; 0x174
   16edc:	str	r4, [sp, #84]	; 0x54
   16ee0:	str	r9, [sp, #368]	; 0x170
   16ee4:	ldr	r9, [fp, #-156]	; 0xffffff64
   16ee8:	adds	r6, r0, r1
   16eec:	ldr	r0, [sp, #92]	; 0x5c
   16ef0:	str	r6, [sp, #336]	; 0x150
   16ef4:	str	r6, [sp, #96]	; 0x60
   16ef8:	adc	r1, r4, r0
   16efc:	ldr	r0, [sp, #40]	; 0x28
   16f00:	ldr	r4, [sp, #44]	; 0x2c
   16f04:	mov	r3, r1
   16f08:	str	r1, [sp, #92]	; 0x5c
   16f0c:	str	r3, [sp, #340]	; 0x154
   16f10:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16f14:	eor	r0, r1, r0
   16f18:	ldr	r1, [sp, #76]	; 0x4c
   16f1c:	lsl	r2, r0, #1
   16f20:	eor	r1, r6, r1
   16f24:	orr	r2, r2, r1, lsr #31
   16f28:	lsl	r1, r1, #1
   16f2c:	orr	r1, r1, r0, lsr #31
   16f30:	ldr	r0, [sp, #108]	; 0x6c
   16f34:	str	r2, [sp, #308]	; 0x134
   16f38:	str	r2, [sp, #136]	; 0x88
   16f3c:	ldr	r2, [fp, #-136]	; 0xffffff78
   16f40:	str	r1, [sp, #132]	; 0x84
   16f44:	str	r1, [sp, #304]	; 0x130
   16f48:	ldr	r1, [sp, #184]	; 0xb8
   16f4c:	adds	r0, r0, ip
   16f50:	adc	lr, r7, r8
   16f54:	str	r1, [sp, #380]	; 0x17c
   16f58:	ldr	r1, [sp, #188]	; 0xbc
   16f5c:	str	r1, [sp, #376]	; 0x178
   16f60:	ldr	r1, [sp, #204]	; 0xcc
   16f64:	str	r1, [sp, #348]	; 0x15c
   16f68:	ldr	r1, [sp, #200]	; 0xc8
   16f6c:	str	r1, [sp, #344]	; 0x158
   16f70:	ldr	r1, [fp, #-160]	; 0xffffff60
   16f74:	str	sl, [sp, #384]	; 0x180
   16f78:	str	r5, [sp, #388]	; 0x184
   16f7c:	str	r1, [sp, #180]	; 0xb4
   16f80:	adds	r1, r0, r2
   16f84:	ldr	r0, [sp, #164]	; 0xa4
   16f88:	adc	r2, lr, r3
   16f8c:	eor	r6, r2, r0
   16f90:	ldr	r0, [sp, #196]	; 0xc4
   16f94:	eor	r3, r1, r0
   16f98:	ldr	r0, [sp, #156]	; 0x9c
   16f9c:	adds	r7, r6, r0
   16fa0:	ldr	r0, [sp, #160]	; 0xa0
   16fa4:	str	r7, [sp, #108]	; 0x6c
   16fa8:	adc	r0, r3, r0
   16fac:	str	r0, [sp, #156]	; 0x9c
   16fb0:	eor	r8, r0, r8
   16fb4:	eor	r0, r7, ip
   16fb8:	lsl	sl, r0, #8
   16fbc:	lsr	r0, r0, #24
   16fc0:	orr	r5, r0, r8, lsl #8
   16fc4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16fc8:	orr	r7, sl, r8, lsr #24
   16fcc:	str	r7, [sp, #56]	; 0x38
   16fd0:	str	r5, [sp, #64]	; 0x40
   16fd4:	adds	r0, r0, r1
   16fd8:	ldr	r1, [fp, #-84]	; 0xffffffac
   16fdc:	adc	r1, r1, r2
   16fe0:	adds	r2, r0, r5
   16fe4:	ldr	r5, [sp, #48]	; 0x30
   16fe8:	adc	r0, r1, r7
   16fec:	str	r2, [sp, #76]	; 0x4c
   16ff0:	eor	r2, r2, r6
   16ff4:	ldr	r7, [sp, #52]	; 0x34
   16ff8:	ldr	r6, [sp, #60]	; 0x3c
   16ffc:	str	r0, [sp, #80]	; 0x50
   17000:	lsr	r1, r2, #16
   17004:	eor	r0, r0, r3
   17008:	lsl	r2, r2, #16
   1700c:	orr	sl, r2, r0, lsr #16
   17010:	orr	r1, r1, r0, lsl #16
   17014:	ldr	r0, [sp, #68]	; 0x44
   17018:	eor	r2, sl, r7
   1701c:	eor	r3, r1, r6
   17020:	str	r1, [sp, #40]	; 0x28
   17024:	adds	lr, r2, r5
   17028:	adc	ip, r3, r4
   1702c:	eor	r1, ip, r0
   17030:	ldr	r0, [sp, #72]	; 0x48
   17034:	eor	r0, lr, r0
   17038:	lsl	r8, r0, #8
   1703c:	lsr	r0, r0, #24
   17040:	orr	r8, r8, r1, lsr #24
   17044:	orr	r0, r0, r1, lsl #8
   17048:	ldr	r1, [sp, #180]	; 0xb4
   1704c:	adds	r1, r1, r6
   17050:	adc	r9, r9, r7
   17054:	adds	r6, r1, r0
   17058:	adc	r1, r9, r8
   1705c:	eor	r2, r6, r2
   17060:	str	r6, [sp, #120]	; 0x78
   17064:	ldr	r6, [sp, #168]	; 0xa8
   17068:	eor	r9, r1, r3
   1706c:	lsl	r3, r2, #16
   17070:	lsr	r2, r2, #16
   17074:	str	r1, [sp, #160]	; 0xa0
   17078:	orr	r1, r2, r9, lsl #16
   1707c:	orr	r3, r3, r9, lsr #16
   17080:	adds	r2, r1, lr
   17084:	str	r1, [sp, #192]	; 0xc0
   17088:	mov	r9, r3
   1708c:	str	r3, [sp, #164]	; 0xa4
   17090:	adc	r1, r3, ip
   17094:	str	r2, [sp, #196]	; 0xc4
   17098:	eor	r0, r2, r0
   1709c:	str	r9, [sp, #396]	; 0x18c
   170a0:	str	r1, [sp, #180]	; 0xb4
   170a4:	eor	r1, r1, r8
   170a8:	lsl	r2, r1, #1
   170ac:	orr	r2, r2, r0, lsr #31
   170b0:	lsl	r0, r0, #1
   170b4:	orr	r8, r0, r1, lsr #31
   170b8:	ldr	r0, [sp, #112]	; 0x70
   170bc:	ldr	r1, [sp, #152]	; 0x98
   170c0:	str	r2, [sp, #176]	; 0xb0
   170c4:	str	r8, [sp, #116]	; 0x74
   170c8:	eor	r0, r4, r0
   170cc:	eor	r1, r5, r1
   170d0:	lsl	r2, r0, #1
   170d4:	orr	ip, r2, r1, lsr #31
   170d8:	lsl	r1, r1, #1
   170dc:	orr	r3, r1, r0, lsr #31
   170e0:	ldr	r0, [sp, #260]	; 0x104
   170e4:	ldr	r1, [sp, #144]	; 0x90
   170e8:	adds	r0, r1, r0
   170ec:	ldr	r1, [sp, #256]	; 0x100
   170f0:	adc	r1, r6, r1
   170f4:	adds	r6, r0, r3
   170f8:	ldr	r0, [sp, #84]	; 0x54
   170fc:	adc	lr, r1, ip
   17100:	ldr	r1, [sp, #40]	; 0x28
   17104:	eor	r7, r0, lr
   17108:	ldr	r0, [sp, #108]	; 0x6c
   1710c:	adds	r1, r1, r0
   17110:	ldr	r0, [sp, #156]	; 0x9c
   17114:	str	r1, [sp, #72]	; 0x48
   17118:	adc	r2, sl, r0
   1711c:	adds	r4, r1, r7
   17120:	ldr	r1, [sp, #192]	; 0xc0
   17124:	ldr	r0, [sp, #88]	; 0x58
   17128:	eor	r3, r4, r3
   1712c:	str	r2, [sp, #68]	; 0x44
   17130:	str	r1, [sp, #392]	; 0x188
   17134:	ldr	r1, [sp, #196]	; 0xc4
   17138:	eor	r5, r0, r6
   1713c:	lsl	r0, r3, #8
   17140:	lsr	r3, r3, #24
   17144:	adc	sl, r2, r5
   17148:	eor	r2, sl, ip
   1714c:	orr	r0, r0, r2, lsr #24
   17150:	orr	r2, r3, r2, lsl #8
   17154:	str	r1, [sp, #352]	; 0x160
   17158:	ldr	r1, [sp, #180]	; 0xb4
   1715c:	adds	r3, r2, r6
   17160:	ldr	r6, [fp, #-128]	; 0xffffff80
   17164:	adc	ip, r0, lr
   17168:	str	r1, [sp, #356]	; 0x164
   1716c:	ldr	r1, [sp, #176]	; 0xb0
   17170:	str	r8, [sp, #312]	; 0x138
   17174:	ldr	r8, [sp, #212]	; 0xd4
   17178:	adds	r3, r3, r6
   1717c:	ldr	r6, [sp, #128]	; 0x80
   17180:	str	r3, [sp, #84]	; 0x54
   17184:	eor	r3, r3, r7
   17188:	lsl	r7, r3, #16
   1718c:	lsr	r3, r3, #16
   17190:	str	r1, [sp, #316]	; 0x13c
   17194:	ldr	r1, [fp, #-124]	; 0xffffff84
   17198:	adc	r1, ip, r1
   1719c:	ldr	ip, [sp, #216]	; 0xd8
   171a0:	str	r1, [sp, #88]	; 0x58
   171a4:	eor	r1, r1, r5
   171a8:	orr	r7, r7, r1, lsr #16
   171ac:	orr	r1, r3, r1, lsl #16
   171b0:	adds	r3, r1, r4
   171b4:	str	r1, [sp, #168]	; 0xa8
   171b8:	str	r7, [sp, #144]	; 0x90
   171bc:	adc	r1, r7, sl
   171c0:	str	r3, [sp, #360]	; 0x168
   171c4:	str	r3, [sp, #152]	; 0x98
   171c8:	eor	r0, r1, r0
   171cc:	mov	r7, r1
   171d0:	str	r1, [sp, #156]	; 0x9c
   171d4:	eor	r1, r3, r2
   171d8:	lsl	r2, r0, #1
   171dc:	str	r7, [sp, #364]	; 0x16c
   171e0:	ldr	r7, [sp, #184]	; 0xb8
   171e4:	orr	r5, r2, r1, lsr #31
   171e8:	lsl	r1, r1, #1
   171ec:	ldr	r2, [sp, #72]	; 0x48
   171f0:	orr	r4, r1, r0, lsr #31
   171f4:	ldr	r0, [sp, #56]	; 0x38
   171f8:	ldr	r1, [sp, #68]	; 0x44
   171fc:	str	r5, [sp, #108]	; 0x6c
   17200:	str	r5, [sp, #324]	; 0x144
   17204:	ldr	r5, [fp, #-92]	; 0xffffffa4
   17208:	str	r4, [sp, #112]	; 0x70
   1720c:	str	r4, [sp, #320]	; 0x140
   17210:	ldr	r4, [fp, #-96]	; 0xffffffa0
   17214:	eor	r0, r1, r0
   17218:	ldr	r1, [sp, #64]	; 0x40
   1721c:	eor	r1, r2, r1
   17220:	lsl	r2, r0, #1
   17224:	orr	r2, r2, r1, lsr #31
   17228:	lsl	r1, r1, #1
   1722c:	orr	r0, r1, r0, lsr #31
   17230:	ldr	r1, [sp, #124]	; 0x7c
   17234:	adds	r1, r0, r1
   17238:	adc	r6, r2, r6
   1723c:	adds	r1, r1, r4
   17240:	adc	r3, r6, r5
   17244:	eor	r4, r3, r7
   17248:	ldr	r7, [sp, #188]	; 0xbc
   1724c:	eor	r5, r1, r7
   17250:	ldr	r7, [sp, #96]	; 0x60
   17254:	adds	r9, r4, r7
   17258:	ldr	r7, [sp, #92]	; 0x5c
   1725c:	eor	r0, r9, r0
   17260:	lsl	r6, r0, #8
   17264:	lsr	r0, r0, #24
   17268:	adc	r7, r5, r7
   1726c:	adds	r1, r1, ip
   17270:	eor	r2, r7, r2
   17274:	orr	r0, r0, r2, lsl #8
   17278:	orr	r6, r6, r2, lsr #24
   1727c:	adc	r2, r3, r8
   17280:	adds	r3, r1, r0
   17284:	adc	r1, r2, r6
   17288:	eor	r2, r3, r4
   1728c:	str	r3, [sp, #124]	; 0x7c
   17290:	str	r1, [sp, #128]	; 0x80
   17294:	lsl	r3, r2, #16
   17298:	eor	r1, r1, r5
   1729c:	lsr	r2, r2, #16
   172a0:	orr	r3, r3, r1, lsr #16
   172a4:	orr	r1, r2, r1, lsl #16
   172a8:	adds	lr, r1, r9
   172ac:	str	r1, [sp, #92]	; 0x5c
   172b0:	str	r3, [sp, #64]	; 0x40
   172b4:	adc	r1, r3, r7
   172b8:	eor	r0, lr, r0
   172bc:	ldr	r7, [sp, #132]	; 0x84
   172c0:	eor	r4, r1, r6
   172c4:	str	r1, [sp, #72]	; 0x48
   172c8:	ldr	r1, [sp, #136]	; 0x88
   172cc:	ldr	r6, [sp, #80]	; 0x50
   172d0:	lsl	r5, r4, #1
   172d4:	orr	r2, r5, r0, lsr #31
   172d8:	lsl	r0, r0, #1
   172dc:	ldr	r5, [fp, #-144]	; 0xffffff70
   172e0:	orr	r3, r0, r4, lsr #31
   172e4:	ldr	r0, [sp, #76]	; 0x4c
   172e8:	str	r2, [sp, #184]	; 0xb8
   172ec:	str	r2, [sp, #332]	; 0x14c
   172f0:	ldr	r2, [sp, #208]	; 0xd0
   172f4:	str	r3, [sp, #188]	; 0xbc
   172f8:	str	r3, [sp, #328]	; 0x148
   172fc:	adds	r0, r0, r7
   17300:	adc	r4, r6, r1
   17304:	ldr	r6, [fp, #-140]	; 0xffffff74
   17308:	adds	r9, r0, r5
   1730c:	ldr	r0, [sp, #140]	; 0x8c
   17310:	adc	r4, r4, r6
   17314:	eor	r5, r4, r0
   17318:	ldr	r0, [sp, #148]	; 0x94
   1731c:	eor	r6, r9, r0
   17320:	ldr	r0, [sp, #200]	; 0xc8
   17324:	adds	sl, r5, r0
   17328:	ldr	r0, [sp, #204]	; 0xcc
   1732c:	adc	r3, r6, r0
   17330:	eor	r0, sl, r7
   17334:	lsl	r7, r0, #8
   17338:	eor	r1, r3, r1
   1733c:	lsr	r0, r0, #24
   17340:	orr	r7, r7, r1, lsr #24
   17344:	orr	r1, r0, r1, lsl #8
   17348:	adds	r0, r9, r2
   1734c:	mov	r9, r2
   17350:	ldr	r2, [sp, #220]	; 0xdc
   17354:	adc	r4, r4, r2
   17358:	adds	r2, r0, r1
   1735c:	adc	r0, r4, r7
   17360:	eor	r4, r2, r5
   17364:	str	r2, [sp, #80]	; 0x50
   17368:	str	r0, [sp, #96]	; 0x60
   1736c:	eor	r0, r0, r6
   17370:	lsl	r5, r4, #16
   17374:	lsr	r4, r4, #16
   17378:	ldr	r6, [sp, #72]	; 0x48
   1737c:	orr	r2, r5, r0, lsr #16
   17380:	orr	r0, r4, r0, lsl #16
   17384:	adds	r5, r0, sl
   17388:	str	r0, [sp, #136]	; 0x88
   1738c:	str	r2, [sp, #132]	; 0x84
   17390:	adc	r0, r2, r3
   17394:	eor	r1, r5, r1
   17398:	eor	r2, r0, r7
   1739c:	str	r0, [sp, #76]	; 0x4c
   173a0:	ldr	r0, [sp, #120]	; 0x78
   173a4:	lsl	r3, r2, #1
   173a8:	orr	r3, r3, r1, lsr #31
   173ac:	lsl	r1, r1, #1
   173b0:	orr	r1, r1, r2, lsr #31
   173b4:	adds	r2, r0, ip
   173b8:	ldr	r0, [sp, #160]	; 0xa0
   173bc:	adc	r7, r0, r8
   173c0:	ldr	r0, [sp, #144]	; 0x90
   173c4:	adds	r2, r2, r1
   173c8:	adc	r7, r7, r3
   173cc:	eor	ip, r7, r0
   173d0:	ldr	r0, [sp, #168]	; 0xa8
   173d4:	adds	r4, ip, lr
   173d8:	eor	r1, r4, r1
   173dc:	eor	r0, r2, r0
   173e0:	adc	r8, r0, r6
   173e4:	lsl	r6, r1, #8
   173e8:	lsr	r1, r1, #24
   173ec:	eor	r3, r8, r3
   173f0:	orr	r6, r6, r3, lsr #24
   173f4:	orr	r1, r1, r3, lsl #8
   173f8:	ldr	r3, [sp, #260]	; 0x104
   173fc:	adds	r2, r2, r3
   17400:	ldr	r3, [sp, #256]	; 0x100
   17404:	adc	r3, r7, r3
   17408:	adds	r7, r2, r1
   1740c:	adc	r2, r3, r6
   17410:	str	r7, [sp, #144]	; 0x90
   17414:	str	r2, [sp, #148]	; 0x94
   17418:	eor	r0, r2, r0
   1741c:	eor	r2, r7, ip
   17420:	lsl	r3, r2, #16
   17424:	lsr	r2, r2, #16
   17428:	orr	lr, r3, r0, lsr #16
   1742c:	orr	r0, r2, r0, lsl #16
   17430:	ldr	r3, [sp, #92]	; 0x5c
   17434:	adds	r2, r0, r4
   17438:	str	r0, [sp, #200]	; 0xc8
   1743c:	ldr	r4, [sp, #176]	; 0xb0
   17440:	str	lr, [sp, #372]	; 0x174
   17444:	str	lr, [sp, #140]	; 0x8c
   17448:	adc	r0, lr, r8
   1744c:	eor	r1, r2, r1
   17450:	mov	r7, r2
   17454:	str	r2, [sp, #168]	; 0xa8
   17458:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1745c:	str	r0, [sp, #204]	; 0xcc
   17460:	eor	r0, r0, r6
   17464:	ldr	r6, [sp, #116]	; 0x74
   17468:	lsl	r2, r0, #1
   1746c:	orr	ip, r2, r1, lsr #31
   17470:	lsl	r1, r1, #1
   17474:	ldr	r2, [sp, #88]	; 0x58
   17478:	orr	sl, r1, r0, lsr #31
   1747c:	ldr	r0, [sp, #220]	; 0xdc
   17480:	str	ip, [sp, #52]	; 0x34
   17484:	adds	r1, sl, r9
   17488:	str	sl, [sp, #60]	; 0x3c
   1748c:	str	r1, [sp, #72]	; 0x48
   17490:	ldr	r1, [sp, #84]	; 0x54
   17494:	adc	r0, ip, r0
   17498:	str	r0, [sp, #68]	; 0x44
   1749c:	ldr	r0, [sp, #252]	; 0xfc
   174a0:	adds	r0, r1, r0
   174a4:	ldr	r1, [sp, #248]	; 0xf8
   174a8:	adc	r1, r2, r1
   174ac:	ldr	r2, [sp, #64]	; 0x40
   174b0:	adds	r0, r0, r6
   174b4:	adc	r1, r1, r4
   174b8:	eor	r3, r3, r0
   174bc:	eor	r2, r2, r1
   174c0:	adds	r8, r5, r2
   174c4:	ldr	r5, [sp, #76]	; 0x4c
   174c8:	eor	r6, r8, r6
   174cc:	adc	r9, r5, r3
   174d0:	eor	r5, r9, r4
   174d4:	lsl	r4, r6, #8
   174d8:	lsr	r6, r6, #24
   174dc:	orr	r4, r4, r5, lsr #24
   174e0:	orr	r5, r6, r5, lsl #8
   174e4:	ldr	r6, [sp, #200]	; 0xc8
   174e8:	adds	r0, r5, r0
   174ec:	str	r5, [sp, #88]	; 0x58
   174f0:	ldr	r5, [fp, #-84]	; 0xffffffac
   174f4:	str	r4, [sp, #76]	; 0x4c
   174f8:	adc	r1, r4, r1
   174fc:	ldr	r4, [sp, #112]	; 0x70
   17500:	str	r6, [sp, #368]	; 0x170
   17504:	str	r7, [sp, #336]	; 0x150
   17508:	ldr	r7, [sp, #204]	; 0xcc
   1750c:	ldr	r6, [fp, #-88]	; 0xffffffa8
   17510:	str	r7, [sp, #340]	; 0x154
   17514:	adds	r7, r0, r6
   17518:	ldr	r6, [sp, #108]	; 0x6c
   1751c:	str	sl, [sp, #304]	; 0x130
   17520:	str	ip, [sp, #308]	; 0x134
   17524:	ldr	ip, [fp, #-136]	; 0xffffff78
   17528:	adc	r0, r1, r5
   1752c:	eor	r1, r7, r2
   17530:	str	r7, [sp, #116]	; 0x74
   17534:	ldr	r7, [fp, #-72]	; 0xffffffb8
   17538:	str	r0, [sp, #120]	; 0x78
   1753c:	lsl	r2, r1, #16
   17540:	eor	r0, r0, r3
   17544:	lsr	r1, r1, #16
   17548:	orr	r3, r1, r0, lsl #16
   1754c:	orr	r2, r2, r0, lsr #16
   17550:	ldr	r0, [sp, #124]	; 0x7c
   17554:	ldr	r1, [sp, #128]	; 0x80
   17558:	adds	sl, r3, r8
   1755c:	str	r2, [sp, #380]	; 0x17c
   17560:	str	r3, [sp, #376]	; 0x178
   17564:	str	r2, [sp, #176]	; 0xb0
   17568:	str	r3, [sp, #160]	; 0xa0
   1756c:	adc	r5, r2, r9
   17570:	str	sl, [sp, #344]	; 0x158
   17574:	str	sl, [sp, #32]
   17578:	adds	r0, r0, r4
   1757c:	str	r5, [sp, #48]	; 0x30
   17580:	str	r5, [sp, #348]	; 0x15c
   17584:	ldr	r5, [fp, #-68]	; 0xffffffbc
   17588:	adc	r1, r1, r6
   1758c:	adds	r2, r0, r7
   17590:	ldr	r0, [sp, #132]	; 0x84
   17594:	adc	r3, r1, r5
   17598:	eor	r7, r3, r0
   1759c:	ldr	r0, [sp, #136]	; 0x88
   175a0:	eor	r9, r2, r0
   175a4:	ldr	r0, [sp, #196]	; 0xc4
   175a8:	adds	r5, r7, r0
   175ac:	ldr	r0, [sp, #180]	; 0xb4
   175b0:	str	r5, [sp, #124]	; 0x7c
   175b4:	adc	r0, r9, r0
   175b8:	eor	r1, r0, r6
   175bc:	str	r0, [sp, #128]	; 0x80
   175c0:	eor	r0, r5, r4
   175c4:	ldr	r6, [fp, #-156]	; 0xffffff64
   175c8:	lsl	r5, r0, #8
   175cc:	lsr	r0, r0, #24
   175d0:	orr	r4, r5, r1, lsr #24
   175d4:	orr	r5, r0, r1, lsl #8
   175d8:	adds	r0, ip, r2
   175dc:	adc	r1, lr, r3
   175e0:	adds	r2, r0, r5
   175e4:	str	r5, [sp, #108]	; 0x6c
   175e8:	ldr	r5, [sp, #184]	; 0xb8
   175ec:	str	r4, [sp, #92]	; 0x5c
   175f0:	str	r2, [sp, #132]	; 0x84
   175f4:	adc	r0, r1, r4
   175f8:	eor	r2, r2, r7
   175fc:	str	r0, [sp, #136]	; 0x88
   17600:	lsr	r1, r2, #16
   17604:	eor	r0, r0, r9
   17608:	lsl	r2, r2, #16
   1760c:	orr	r7, r1, r0, lsl #16
   17610:	orr	r8, r2, r0, lsr #16
   17614:	ldr	r1, [sp, #188]	; 0xbc
   17618:	ldr	r0, [sp, #80]	; 0x50
   1761c:	mov	ip, r7
   17620:	str	r7, [sp, #384]	; 0x180
   17624:	ldr	r7, [fp, #-160]	; 0xffffff60
   17628:	str	r8, [sp, #388]	; 0x184
   1762c:	mov	r9, ip
   17630:	adds	r2, r0, r1
   17634:	ldr	r0, [sp, #96]	; 0x60
   17638:	adc	r3, r0, r5
   1763c:	ldr	r0, [fp, #-144]	; 0xffffff70
   17640:	adds	r7, r2, r7
   17644:	adc	r3, r3, r6
   17648:	str	r0, [sp, #64]	; 0x40
   1764c:	ldr	r0, [fp, #-140]	; 0xffffff74
   17650:	str	r0, [sp, #56]	; 0x38
   17654:	ldr	r0, [sp, #164]	; 0xa4
   17658:	eor	r2, r3, r0
   1765c:	ldr	r0, [sp, #192]	; 0xc0
   17660:	str	r2, [sp, #44]	; 0x2c
   17664:	eor	r6, r7, r0
   17668:	ldr	r0, [sp, #152]	; 0x98
   1766c:	str	r6, [sp, #40]	; 0x28
   17670:	adds	r2, r2, r0
   17674:	ldr	r0, [sp, #156]	; 0x9c
   17678:	str	r2, [sp, #84]	; 0x54
   1767c:	adc	r0, r6, r0
   17680:	eor	r6, r0, r5
   17684:	eor	r5, r2, r1
   17688:	str	r0, [sp, #96]	; 0x60
   1768c:	lsl	r4, r5, #8
   17690:	lsr	r5, r5, #24
   17694:	orr	r0, r4, r6, lsr #24
   17698:	orr	r1, r5, r6, lsl #8
   1769c:	ldr	r6, [fp, #-96]	; 0xffffffa0
   176a0:	str	r1, [sp, #152]	; 0x98
   176a4:	str	r0, [sp, #112]	; 0x70
   176a8:	adds	r7, r6, r7
   176ac:	ldr	r6, [fp, #-92]	; 0xffffffa4
   176b0:	adc	r3, r6, r3
   176b4:	adds	r1, r7, r1
   176b8:	ldr	r6, [sp, #48]	; 0x30
   176bc:	adc	r7, r3, r0
   176c0:	ldr	r0, [sp, #72]	; 0x48
   176c4:	str	r1, [sp, #36]	; 0x24
   176c8:	adds	r3, r0, r1
   176cc:	ldr	r0, [sp, #68]	; 0x44
   176d0:	eor	r2, r3, ip
   176d4:	adc	r5, r0, r7
   176d8:	ldr	r0, [sp, #52]	; 0x34
   176dc:	eor	r4, r5, r8
   176e0:	adds	ip, r4, sl
   176e4:	adc	lr, r2, r6
   176e8:	eor	r1, lr, r0
   176ec:	ldr	r0, [sp, #60]	; 0x3c
   176f0:	eor	r0, ip, r0
   176f4:	lsl	sl, r0, #8
   176f8:	lsr	r0, r0, #24
   176fc:	orr	sl, sl, r1, lsr #24
   17700:	orr	r0, r0, r1, lsl #8
   17704:	ldr	r1, [sp, #236]	; 0xec
   17708:	adds	r1, r3, r1
   1770c:	ldr	r3, [sp, #232]	; 0xe8
   17710:	adc	r3, r5, r3
   17714:	adds	r5, r1, r0
   17718:	adc	r1, r3, sl
   1771c:	str	r5, [sp, #188]	; 0xbc
   17720:	str	r1, [sp, #192]	; 0xc0
   17724:	eor	r1, r1, r2
   17728:	eor	r2, r5, r4
   1772c:	lsl	r3, r2, #16
   17730:	lsr	r2, r2, #16
   17734:	orr	r3, r3, r1, lsr #16
   17738:	orr	r1, r2, r1, lsl #16
   1773c:	adds	r2, r1, ip
   17740:	str	r1, [sp, #184]	; 0xb8
   17744:	str	r3, [sp, #180]	; 0xb4
   17748:	adc	r1, r3, lr
   1774c:	str	r2, [sp, #156]	; 0x9c
   17750:	eor	r0, r2, r0
   17754:	str	r1, [sp, #164]	; 0xa4
   17758:	eor	r1, r1, sl
   1775c:	lsl	r2, r1, #1
   17760:	orr	r2, r2, r0, lsr #31
   17764:	lsl	r0, r0, #1
   17768:	orr	sl, r0, r1, lsr #31
   1776c:	ldr	r0, [sp, #76]	; 0x4c
   17770:	ldr	r1, [sp, #88]	; 0x58
   17774:	str	r2, [sp, #196]	; 0xc4
   17778:	ldr	r2, [sp, #32]
   1777c:	ldr	r3, [sp, #148]	; 0x94
   17780:	str	sl, [sp, #80]	; 0x50
   17784:	eor	r0, r6, r0
   17788:	eor	r1, r2, r1
   1778c:	lsl	r2, r0, #1
   17790:	orr	r2, r2, r1, lsr #31
   17794:	lsl	r1, r1, #1
   17798:	orr	r4, r1, r0, lsr #31
   1779c:	ldr	r0, [sp, #268]	; 0x10c
   177a0:	ldr	r1, [sp, #144]	; 0x90
   177a4:	adds	r0, r1, r0
   177a8:	ldr	r1, [sp, #264]	; 0x108
   177ac:	adc	r1, r3, r1
   177b0:	adds	ip, r0, r4
   177b4:	ldr	r0, [sp, #124]	; 0x7c
   177b8:	ldr	r3, [sp, #36]	; 0x24
   177bc:	adc	lr, r1, r2
   177c0:	adds	r5, r9, r0
   177c4:	ldr	r0, [sp, #128]	; 0x80
   177c8:	str	r5, [sp, #60]	; 0x3c
   177cc:	adc	r1, r8, r0
   177d0:	ldr	r0, [sp, #40]	; 0x28
   177d4:	str	r1, [sp, #52]	; 0x34
   177d8:	eor	r7, r7, r0
   177dc:	ldr	r0, [sp, #44]	; 0x2c
   177e0:	eor	r6, r3, r0
   177e4:	lsr	r3, r6, #16
   177e8:	orr	r0, r3, r7, lsl #16
   177ec:	lsl	r3, r6, #16
   177f0:	orr	r3, r3, r7, lsr #16
   177f4:	eor	r7, r0, ip
   177f8:	str	r0, [sp, #68]	; 0x44
   177fc:	str	r3, [sp, #72]	; 0x48
   17800:	eor	r3, r3, lr
   17804:	adds	r8, r3, r5
   17808:	ldr	r5, [sp, #56]	; 0x38
   1780c:	adc	r9, r7, r1
   17810:	eor	r4, r8, r4
   17814:	lsl	r6, r4, #8
   17818:	eor	r2, r9, r2
   1781c:	lsr	r4, r4, #24
   17820:	orr	r0, r6, r2, lsr #24
   17824:	orr	r2, r4, r2, lsl #8
   17828:	ldr	r4, [sp, #64]	; 0x40
   1782c:	adds	r6, r4, ip
   17830:	adc	r1, r5, lr
   17834:	adds	r4, r6, r2
   17838:	ldr	r6, [sp, #208]	; 0xd0
   1783c:	ldr	r5, [sp, #220]	; 0xdc
   17840:	adc	r1, r1, r0
   17844:	eor	r3, r4, r3
   17848:	adds	r6, r4, r6
   1784c:	adc	ip, r1, r5
   17850:	adds	r5, r6, sl
   17854:	ldr	r6, [sp, #196]	; 0xc4
   17858:	eor	r1, r1, r7
   1785c:	lsl	r7, r3, #16
   17860:	lsr	r3, r3, #16
   17864:	orr	r7, r7, r1, lsr #16
   17868:	orr	r1, r3, r1, lsl #16
   1786c:	str	r5, [sp, #76]	; 0x4c
   17870:	str	r1, [sp, #148]	; 0x94
   17874:	str	r7, [sp, #144]	; 0x90
   17878:	str	r7, [sp, #396]	; 0x18c
   1787c:	adc	r6, ip, r6
   17880:	adds	r3, r1, r8
   17884:	str	r6, [sp, #220]	; 0xdc
   17888:	mov	r6, r1
   1788c:	adc	r1, r7, r9
   17890:	ldr	r7, [fp, #-56]	; 0xffffffc8
   17894:	str	r3, [sp, #124]	; 0x7c
   17898:	eor	r0, r1, r0
   1789c:	mov	ip, r1
   178a0:	str	r1, [sp, #128]	; 0x80
   178a4:	eor	r1, r3, r2
   178a8:	str	r6, [sp, #392]	; 0x188
   178ac:	str	r3, [sp, #352]	; 0x160
   178b0:	lsl	r2, r0, #1
   178b4:	str	ip, [sp, #356]	; 0x164
   178b8:	orr	r5, r2, r1, lsr #31
   178bc:	lsl	r1, r1, #1
   178c0:	ldr	r2, [sp, #60]	; 0x3c
   178c4:	orr	r4, r1, r0, lsr #31
   178c8:	ldr	r0, [sp, #92]	; 0x5c
   178cc:	ldr	r1, [sp, #52]	; 0x34
   178d0:	str	r5, [sp, #88]	; 0x58
   178d4:	str	r5, [sp, #316]	; 0x13c
   178d8:	ldr	r5, [fp, #-52]	; 0xffffffcc
   178dc:	str	r4, [sp, #208]	; 0xd0
   178e0:	str	r4, [sp, #312]	; 0x138
   178e4:	eor	r0, r1, r0
   178e8:	ldr	r1, [sp, #108]	; 0x6c
   178ec:	eor	r1, r2, r1
   178f0:	lsl	r2, r0, #1
   178f4:	orr	r2, r2, r1, lsr #31
   178f8:	lsl	r1, r1, #1
   178fc:	orr	r9, r1, r0, lsr #31
   17900:	ldr	r0, [sp, #116]	; 0x74
   17904:	adds	r1, r9, r0
   17908:	ldr	r0, [sp, #120]	; 0x78
   1790c:	adc	r0, r2, r0
   17910:	adds	sl, r1, r7
   17914:	ldr	r1, [sp, #68]	; 0x44
   17918:	adc	r3, r0, r5
   1791c:	ldr	r0, [sp, #140]	; 0x8c
   17920:	eor	r7, r3, r0
   17924:	ldr	r0, [sp, #84]	; 0x54
   17928:	adds	r6, r1, r0
   1792c:	ldr	r0, [sp, #96]	; 0x60
   17930:	ldr	r1, [sp, #72]	; 0x48
   17934:	str	r6, [sp, #84]	; 0x54
   17938:	adc	lr, r1, r0
   1793c:	ldr	r0, [sp, #200]	; 0xc8
   17940:	adds	r4, r7, r6
   17944:	eor	r1, r4, r9
   17948:	lsl	r6, r1, #8
   1794c:	lsr	r1, r1, #24
   17950:	eor	r5, sl, r0
   17954:	adc	ip, r5, lr
   17958:	eor	r0, ip, r2
   1795c:	ldr	r2, [sp, #240]	; 0xf0
   17960:	orr	r6, r6, r0, lsr #24
   17964:	orr	r0, r1, r0, lsl #8
   17968:	ldr	r1, [sp, #244]	; 0xf4
   1796c:	adds	r1, sl, r1
   17970:	adc	r3, r3, r2
   17974:	adds	r2, r1, r0
   17978:	adc	r1, r3, r6
   1797c:	eor	r3, r2, r7
   17980:	str	r2, [sp, #92]	; 0x5c
   17984:	str	r1, [sp, #200]	; 0xc8
   17988:	lsl	r7, r3, #16
   1798c:	eor	r1, r1, r5
   17990:	lsr	r3, r3, #16
   17994:	orr	r5, r7, r1, lsr #16
   17998:	orr	r1, r3, r1, lsl #16
   1799c:	ldr	r3, [sp, #132]	; 0x84
   179a0:	adds	r8, r1, r4
   179a4:	str	r1, [sp, #140]	; 0x8c
   179a8:	ldr	r1, [sp, #220]	; 0xdc
   179ac:	ldr	r4, [sp, #204]	; 0xcc
   179b0:	adc	sl, r5, ip
   179b4:	eor	r0, r8, r0
   179b8:	str	r8, [sp, #360]	; 0x168
   179bc:	str	r8, [sp, #116]	; 0x74
   179c0:	str	sl, [sp, #364]	; 0x16c
   179c4:	str	sl, [sp, #120]	; 0x78
   179c8:	eor	r1, r5, r1
   179cc:	ldr	r5, [sp, #168]	; 0xa8
   179d0:	str	r1, [sp, #60]	; 0x3c
   179d4:	eor	r1, sl, r6
   179d8:	ldr	r6, [sp, #136]	; 0x88
   179dc:	lsl	r2, r1, #1
   179e0:	orr	r9, r2, r0, lsr #31
   179e4:	lsl	r0, r0, #1
   179e8:	ldr	r2, [sp, #84]	; 0x54
   179ec:	orr	r7, r0, r1, lsr #31
   179f0:	ldr	r0, [sp, #112]	; 0x70
   179f4:	ldr	r1, [sp, #152]	; 0x98
   179f8:	str	r9, [sp, #108]	; 0x6c
   179fc:	str	r9, [sp, #324]	; 0x144
   17a00:	str	r7, [sp, #96]	; 0x60
   17a04:	str	r7, [sp, #320]	; 0x140
   17a08:	ldr	r7, [fp, #-128]	; 0xffffff80
   17a0c:	eor	r0, lr, r0
   17a10:	eor	r1, r2, r1
   17a14:	lsl	r2, r0, #1
   17a18:	orr	r2, r2, r1, lsr #31
   17a1c:	lsl	r1, r1, #1
   17a20:	str	r7, [sp, #204]	; 0xcc
   17a24:	orr	r0, r1, r0, lsr #31
   17a28:	ldr	r1, [sp, #228]	; 0xe4
   17a2c:	adds	r1, r3, r1
   17a30:	ldr	r3, [sp, #224]	; 0xe0
   17a34:	adc	r6, r6, r3
   17a38:	ldr	r3, [sp, #176]	; 0xb0
   17a3c:	adds	r1, r1, r0
   17a40:	adc	r6, r6, r2
   17a44:	eor	lr, r6, r3
   17a48:	ldr	r3, [sp, #160]	; 0xa0
   17a4c:	adds	ip, lr, r5
   17a50:	eor	r0, ip, r0
   17a54:	lsl	r5, r0, #8
   17a58:	lsr	r0, r0, #24
   17a5c:	eor	r3, r1, r3
   17a60:	adc	r4, r3, r4
   17a64:	eor	r2, r4, r2
   17a68:	orr	r5, r5, r2, lsr #24
   17a6c:	orr	r2, r0, r2, lsl #8
   17a70:	adds	r0, r2, r1
   17a74:	adc	r1, r5, r6
   17a78:	ldr	r6, [fp, #-124]	; 0xffffff84
   17a7c:	adds	r8, r0, r7
   17a80:	str	r8, [sp, #72]	; 0x48
   17a84:	adc	r0, r1, r6
   17a88:	str	r6, [sp, #68]	; 0x44
   17a8c:	str	r0, [sp, #112]	; 0x70
   17a90:	eor	r0, r0, r3
   17a94:	eor	r3, r8, lr
   17a98:	lsl	r1, r3, #16
   17a9c:	lsr	r3, r3, #16
   17aa0:	orr	r9, r1, r0, lsr #16
   17aa4:	orr	r0, r3, r0, lsl #16
   17aa8:	ldr	r1, [sp, #76]	; 0x4c
   17aac:	adds	lr, r0, ip
   17ab0:	str	r0, [sp, #64]	; 0x40
   17ab4:	ldr	r0, [sp, #140]	; 0x8c
   17ab8:	ldr	ip, [sp, #60]	; 0x3c
   17abc:	adc	r6, r9, r4
   17ac0:	eor	r2, lr, r2
   17ac4:	eor	r5, r6, r5
   17ac8:	eor	r7, r0, r1
   17acc:	ldr	r0, [sp, #196]	; 0xc4
   17ad0:	adds	r4, lr, ip
   17ad4:	adc	r8, r6, r7
   17ad8:	lsl	r6, r5, #1
   17adc:	orr	r6, r6, r2, lsr #31
   17ae0:	lsl	r2, r2, #1
   17ae4:	orr	r2, r2, r5, lsr #31
   17ae8:	ldr	r5, [fp, #-140]	; 0xffffff74
   17aec:	eor	r3, r8, r0
   17af0:	ldr	r0, [sp, #80]	; 0x50
   17af4:	str	r6, [sp, #84]	; 0x54
   17af8:	str	r6, [sp, #332]	; 0x14c
   17afc:	str	r2, [sp, #136]	; 0x88
   17b00:	str	r2, [sp, #328]	; 0x148
   17b04:	ldr	r2, [fp, #-144]	; 0xffffff70
   17b08:	eor	r0, r4, r0
   17b0c:	lsl	sl, r0, #8
   17b10:	lsr	r0, r0, #24
   17b14:	orr	r0, r0, r3, lsl #8
   17b18:	orr	sl, sl, r3, lsr #24
   17b1c:	adds	r3, r0, r1
   17b20:	ldr	r1, [sp, #220]	; 0xdc
   17b24:	adc	r1, sl, r1
   17b28:	adds	lr, r3, r2
   17b2c:	adc	r1, r1, r5
   17b30:	eor	r5, lr, ip
   17b34:	ldr	ip, [sp, #208]	; 0xd0
   17b38:	str	r1, [sp, #196]	; 0xc4
   17b3c:	eor	r1, r1, r7
   17b40:	lsl	r7, r5, #16
   17b44:	lsr	r5, r5, #16
   17b48:	orr	r3, r5, r1, lsl #16
   17b4c:	orr	r2, r7, r1, lsr #16
   17b50:	adds	r7, r3, r4
   17b54:	str	r2, [sp, #372]	; 0x174
   17b58:	str	r3, [sp, #368]	; 0x170
   17b5c:	str	r2, [sp, #132]	; 0x84
   17b60:	str	r3, [sp, #140]	; 0x8c
   17b64:	ldr	r3, [sp, #204]	; 0xcc
   17b68:	adc	r6, r2, r8
   17b6c:	mov	r4, r7
   17b70:	eor	r0, r7, r0
   17b74:	str	r7, [sp, #152]	; 0x98
   17b78:	ldr	r2, [sp, #64]	; 0x40
   17b7c:	eor	r1, r6, sl
   17b80:	mov	r5, r6
   17b84:	str	r6, [sp, #160]	; 0xa0
   17b88:	ldr	sl, [sp, #88]	; 0x58
   17b8c:	str	r4, [sp, #336]	; 0x150
   17b90:	lsl	r7, r1, #1
   17b94:	str	r5, [sp, #340]	; 0x154
   17b98:	ldr	r5, [fp, #-92]	; 0xffffffa4
   17b9c:	orr	r7, r7, r0, lsr #31
   17ba0:	lsl	r0, r0, #1
   17ba4:	orr	r6, r0, r1, lsr #31
   17ba8:	ldr	r0, [sp, #92]	; 0x5c
   17bac:	ldr	r1, [sp, #200]	; 0xc8
   17bb0:	str	r7, [sp, #168]	; 0xa8
   17bb4:	str	r7, [sp, #308]	; 0x134
   17bb8:	ldr	r7, [fp, #-96]	; 0xffffffa0
   17bbc:	str	r6, [sp, #176]	; 0xb0
   17bc0:	str	r6, [sp, #304]	; 0x130
   17bc4:	adds	r0, r0, ip
   17bc8:	adc	r1, r1, sl
   17bcc:	adds	r0, r0, r7
   17bd0:	ldr	r7, [sp, #156]	; 0x9c
   17bd4:	adc	r1, r1, r5
   17bd8:	eor	r5, r0, r2
   17bdc:	eor	r9, r1, r9
   17be0:	adds	r8, r9, r7
   17be4:	ldr	r7, [sp, #164]	; 0xa4
   17be8:	adc	r2, r5, r7
   17bec:	eor	r7, r8, ip
   17bf0:	adds	r0, r3, r0
   17bf4:	ldr	r3, [sp, #68]	; 0x44
   17bf8:	lsl	r6, r7, #8
   17bfc:	eor	r4, r2, sl
   17c00:	lsr	r7, r7, #24
   17c04:	orr	r6, r6, r4, lsr #24
   17c08:	orr	r4, r7, r4, lsl #8
   17c0c:	adc	r1, r3, r1
   17c10:	adds	r3, r0, r4
   17c14:	adc	r0, r1, r6
   17c18:	eor	r1, r3, r9
   17c1c:	str	r3, [sp, #88]	; 0x58
   17c20:	str	r0, [sp, #92]	; 0x5c
   17c24:	eor	r0, r0, r5
   17c28:	lsl	r5, r1, #16
   17c2c:	lsr	r1, r1, #16
   17c30:	orr	r7, r5, r0, lsr #16
   17c34:	orr	r0, r1, r0, lsl #16
   17c38:	ldr	r5, [sp, #96]	; 0x60
   17c3c:	adds	r1, r0, r8
   17c40:	str	r0, [sp, #204]	; 0xcc
   17c44:	str	r7, [sp, #200]	; 0xc8
   17c48:	adc	r0, r7, r2
   17c4c:	str	r1, [sp, #208]	; 0xd0
   17c50:	eor	r1, r1, r4
   17c54:	ldr	r2, [sp, #196]	; 0xc4
   17c58:	str	r0, [sp, #220]	; 0xdc
   17c5c:	eor	r0, r0, r6
   17c60:	lsl	r7, r0, #1
   17c64:	orr	r8, r7, r1, lsr #31
   17c68:	lsl	r1, r1, #1
   17c6c:	ldr	r7, [sp, #108]	; 0x6c
   17c70:	orr	sl, r1, r0, lsr #31
   17c74:	ldr	r0, [sp, #260]	; 0x104
   17c78:	ldr	r1, [sp, #256]	; 0x100
   17c7c:	adds	r0, lr, r0
   17c80:	adc	r1, r2, r1
   17c84:	adds	r0, r0, sl
   17c88:	ldr	r2, [sp, #112]	; 0x70
   17c8c:	str	r0, [sp, #164]	; 0xa4
   17c90:	adc	r0, r1, r8
   17c94:	ldr	r1, [sp, #72]	; 0x48
   17c98:	str	r0, [sp, #156]	; 0x9c
   17c9c:	ldr	r0, [sp, #244]	; 0xf4
   17ca0:	adds	r0, r1, r0
   17ca4:	ldr	r1, [sp, #240]	; 0xf0
   17ca8:	adc	r1, r2, r1
   17cac:	adds	r2, r0, r5
   17cb0:	ldr	r0, [sp, #180]	; 0xb4
   17cb4:	adc	r1, r1, r7
   17cb8:	eor	ip, r1, r0
   17cbc:	ldr	r0, [sp, #184]	; 0xb8
   17cc0:	eor	r3, r2, r0
   17cc4:	ldr	r0, [sp, #124]	; 0x7c
   17cc8:	adds	r6, ip, r0
   17ccc:	ldr	r0, [sp, #128]	; 0x80
   17cd0:	adc	r9, r3, r0
   17cd4:	eor	r0, r6, r5
   17cd8:	lsl	lr, r0, #8
   17cdc:	eor	r7, r9, r7
   17ce0:	lsr	r0, r0, #24
   17ce4:	orr	r5, lr, r7, lsr #24
   17ce8:	orr	r7, r0, r7, lsl #8
   17cec:	ldr	r0, [sp, #216]	; 0xd8
   17cf0:	str	r5, [sp, #68]	; 0x44
   17cf4:	str	r7, [sp, #80]	; 0x50
   17cf8:	adds	r0, r2, r0
   17cfc:	ldr	r2, [sp, #212]	; 0xd4
   17d00:	adc	r1, r1, r2
   17d04:	adds	r2, r0, r7
   17d08:	adc	r0, r1, r5
   17d0c:	eor	r1, r2, ip
   17d10:	str	r2, [sp, #96]	; 0x60
   17d14:	str	r0, [sp, #108]	; 0x6c
   17d18:	lsl	r2, r1, #16
   17d1c:	eor	r0, r0, r3
   17d20:	lsr	r1, r1, #16
   17d24:	orr	r5, r2, r0, lsr #16
   17d28:	orr	r0, r1, r0, lsl #16
   17d2c:	ldr	r1, [sp, #188]	; 0xbc
   17d30:	ldr	r2, [sp, #192]	; 0xc0
   17d34:	adds	ip, r0, r6
   17d38:	str	r0, [sp, #196]	; 0xc4
   17d3c:	ldr	r0, [sp, #228]	; 0xe4
   17d40:	str	r5, [sp, #112]	; 0x70
   17d44:	adc	r4, r5, r9
   17d48:	ldr	r9, [sp, #136]	; 0x88
   17d4c:	str	ip, [sp, #64]	; 0x40
   17d50:	str	r4, [sp, #60]	; 0x3c
   17d54:	adds	r0, r1, r0
   17d58:	ldr	r1, [sp, #224]	; 0xe0
   17d5c:	adc	r6, r2, r1
   17d60:	ldr	r1, [sp, #84]	; 0x54
   17d64:	adds	r2, r0, r9
   17d68:	ldr	r0, [sp, #144]	; 0x90
   17d6c:	adc	r6, r6, r1
   17d70:	eor	lr, r6, r0
   17d74:	ldr	r0, [sp, #148]	; 0x94
   17d78:	eor	r3, r2, r0
   17d7c:	ldr	r0, [sp, #116]	; 0x74
   17d80:	adds	r7, lr, r0
   17d84:	ldr	r0, [sp, #120]	; 0x78
   17d88:	str	r7, [sp, #72]	; 0x48
   17d8c:	adc	r0, r3, r0
   17d90:	str	r0, [sp, #144]	; 0x90
   17d94:	eor	r1, r0, r1
   17d98:	eor	r0, r7, r9
   17d9c:	lsl	r9, r0, #8
   17da0:	lsr	r0, r0, #24
   17da4:	orr	r7, r0, r1, lsl #8
   17da8:	ldr	r0, [sp, #236]	; 0xec
   17dac:	orr	r9, r9, r1, lsr #24
   17db0:	ldr	r1, [sp, #232]	; 0xe8
   17db4:	str	r9, [sp, #76]	; 0x4c
   17db8:	str	r7, [sp, #116]	; 0x74
   17dbc:	adds	r0, r2, r0
   17dc0:	adc	r1, r6, r1
   17dc4:	adds	r2, r0, r7
   17dc8:	ldr	r6, [sp, #164]	; 0xa4
   17dcc:	adc	r0, r1, r9
   17dd0:	eor	r1, r2, lr
   17dd4:	str	r2, [sp, #124]	; 0x7c
   17dd8:	str	r0, [sp, #128]	; 0x80
   17ddc:	lsr	r2, r1, #16
   17de0:	eor	r0, r0, r3
   17de4:	lsl	r1, r1, #16
   17de8:	orr	r9, r1, r0, lsr #16
   17dec:	ldr	r1, [sp, #156]	; 0x9c
   17df0:	orr	r2, r2, r0, lsl #16
   17df4:	str	r2, [sp, #120]	; 0x78
   17df8:	eor	r2, r6, r2
   17dfc:	eor	r3, r1, r9
   17e00:	adds	lr, r3, ip
   17e04:	adc	ip, r2, r4
   17e08:	eor	r0, lr, sl
   17e0c:	lsl	r7, r0, #8
   17e10:	eor	r4, ip, r8
   17e14:	lsr	r0, r0, #24
   17e18:	orr	r0, r0, r4, lsl #8
   17e1c:	orr	r7, r7, r4, lsr #24
   17e20:	ldr	r4, [sp, #200]	; 0xc8
   17e24:	adds	sl, r0, r6
   17e28:	adc	r8, r7, r1
   17e2c:	str	r4, [sp, #380]	; 0x17c
   17e30:	ldr	r4, [sp, #204]	; 0xcc
   17e34:	str	r4, [sp, #376]	; 0x178
   17e38:	str	r5, [sp, #388]	; 0x184
   17e3c:	ldr	r5, [sp, #196]	; 0xc4
   17e40:	ldr	r4, [sp, #208]	; 0xd0
   17e44:	str	r5, [sp, #384]	; 0x180
   17e48:	str	r4, [sp, #344]	; 0x158
   17e4c:	ldr	r4, [sp, #220]	; 0xdc
   17e50:	ldr	r5, [fp, #-68]	; 0xffffffbc
   17e54:	str	r4, [sp, #348]	; 0x15c
   17e58:	ldr	r4, [fp, #-72]	; 0xffffffb8
   17e5c:	adds	r4, sl, r4
   17e60:	adc	r5, r8, r5
   17e64:	eor	r1, r4, r3
   17e68:	str	r4, [sp, #180]	; 0xb4
   17e6c:	lsl	r4, r1, #16
   17e70:	eor	r2, r5, r2
   17e74:	lsr	r1, r1, #16
   17e78:	str	r5, [sp, #184]	; 0xb8
   17e7c:	orr	r1, r1, r2, lsl #16
   17e80:	orr	r4, r4, r2, lsr #16
   17e84:	adds	r2, r1, lr
   17e88:	mov	r8, r1
   17e8c:	str	r1, [sp, #148]	; 0x94
   17e90:	str	r4, [sp, #396]	; 0x18c
   17e94:	str	r4, [sp, #136]	; 0x88
   17e98:	adc	r3, r4, ip
   17e9c:	eor	r0, r2, r0
   17ea0:	mov	r5, r2
   17ea4:	str	r2, [sp, #188]	; 0xbc
   17ea8:	str	r8, [sp, #392]	; 0x188
   17eac:	ldr	r4, [sp, #140]	; 0x8c
   17eb0:	eor	r1, r3, r7
   17eb4:	str	r5, [sp, #352]	; 0x160
   17eb8:	str	r3, [sp, #356]	; 0x164
   17ebc:	str	r3, [sp, #192]	; 0xc0
   17ec0:	ldr	r5, [sp, #120]	; 0x78
   17ec4:	lsl	r2, r1, #1
   17ec8:	orr	r6, r2, r0, lsr #31
   17ecc:	lsl	r0, r0, #1
   17ed0:	ldr	r2, [sp, #64]	; 0x40
   17ed4:	orr	r7, r0, r1, lsr #31
   17ed8:	ldr	r0, [sp, #68]	; 0x44
   17edc:	ldr	r1, [sp, #60]	; 0x3c
   17ee0:	str	r6, [sp, #156]	; 0x9c
   17ee4:	str	r6, [sp, #316]	; 0x13c
   17ee8:	ldr	r6, [fp, #-84]	; 0xffffffac
   17eec:	str	r7, [sp, #164]	; 0xa4
   17ef0:	str	r7, [sp, #312]	; 0x138
   17ef4:	ldr	r7, [fp, #-88]	; 0xffffffa8
   17ef8:	eor	r0, r1, r0
   17efc:	ldr	r1, [sp, #80]	; 0x50
   17f00:	eor	r1, r2, r1
   17f04:	lsl	r2, r0, #1
   17f08:	orr	r2, r2, r1, lsr #31
   17f0c:	lsl	r1, r1, #1
   17f10:	orr	r0, r1, r0, lsr #31
   17f14:	ldr	r1, [sp, #88]	; 0x58
   17f18:	adds	sl, r1, r0
   17f1c:	ldr	r1, [sp, #92]	; 0x5c
   17f20:	adc	ip, r1, r2
   17f24:	adds	r1, sl, r7
   17f28:	ldr	r7, [sp, #132]	; 0x84
   17f2c:	adc	r3, ip, r6
   17f30:	ldr	r6, [sp, #72]	; 0x48
   17f34:	eor	r7, r3, r7
   17f38:	adds	ip, r5, r6
   17f3c:	ldr	r6, [sp, #144]	; 0x90
   17f40:	eor	r5, r1, r4
   17f44:	adc	lr, r9, r6
   17f48:	adds	r6, r7, ip
   17f4c:	adc	r8, r5, lr
   17f50:	eor	r0, r6, r0
   17f54:	lsl	r4, r0, #8
   17f58:	eor	r2, r8, r2
   17f5c:	lsr	r0, r0, #24
   17f60:	orr	r4, r4, r2, lsr #24
   17f64:	orr	r0, r0, r2, lsl #8
   17f68:	ldr	r2, [sp, #252]	; 0xfc
   17f6c:	adds	r1, r1, r2
   17f70:	ldr	r2, [sp, #248]	; 0xf8
   17f74:	adc	r2, r3, r2
   17f78:	adds	r3, r1, r0
   17f7c:	adc	r1, r2, r4
   17f80:	eor	r2, r3, r7
   17f84:	str	r3, [sp, #120]	; 0x78
   17f88:	str	r1, [sp, #132]	; 0x84
   17f8c:	lsl	r3, r2, #16
   17f90:	eor	r1, r1, r5
   17f94:	lsr	r2, r2, #16
   17f98:	orr	r3, r3, r1, lsr #16
   17f9c:	orr	r1, r2, r1, lsl #16
   17fa0:	adds	r2, r1, r6
   17fa4:	str	r3, [sp, #80]	; 0x50
   17fa8:	str	r1, [sp, #92]	; 0x5c
   17fac:	adc	r3, r3, r8
   17fb0:	mov	r7, r2
   17fb4:	eor	r0, r2, r0
   17fb8:	str	r2, [sp, #84]	; 0x54
   17fbc:	eor	r1, r3, r4
   17fc0:	mov	r6, r3
   17fc4:	str	r3, [sp, #88]	; 0x58
   17fc8:	str	r7, [sp, #360]	; 0x168
   17fcc:	ldr	r3, [sp, #108]	; 0x6c
   17fd0:	ldr	r7, [fp, #-136]	; 0xffffff78
   17fd4:	lsl	r2, r1, #1
   17fd8:	str	r6, [sp, #364]	; 0x16c
   17fdc:	ldr	r6, [fp, #-132]	; 0xffffff7c
   17fe0:	orr	r5, r2, r0, lsr #31
   17fe4:	lsl	r0, r0, #1
   17fe8:	orr	r4, r0, r1, lsr #31
   17fec:	ldr	r0, [sp, #76]	; 0x4c
   17ff0:	ldr	r1, [sp, #116]	; 0x74
   17ff4:	str	r5, [sp, #140]	; 0x8c
   17ff8:	str	r5, [sp, #324]	; 0x144
   17ffc:	ldr	r5, [sp, #152]	; 0x98
   18000:	str	r4, [sp, #144]	; 0x90
   18004:	str	r4, [sp, #320]	; 0x140
   18008:	eor	r0, lr, r0
   1800c:	eor	r1, ip, r1
   18010:	ldr	lr, [fp, #-156]	; 0xffffff64
   18014:	lsl	r2, r0, #1
   18018:	orr	r2, r2, r1, lsr #31
   1801c:	lsl	r1, r1, #1
   18020:	orr	r0, r1, r0, lsr #31
   18024:	ldr	r1, [sp, #96]	; 0x60
   18028:	adds	r1, r0, r1
   1802c:	adc	r3, r2, r3
   18030:	adds	r1, r1, r7
   18034:	ldr	r7, [sp, #200]	; 0xc8
   18038:	adc	r3, r3, r6
   1803c:	ldr	r6, [sp, #204]	; 0xcc
   18040:	eor	r7, r3, r7
   18044:	adds	r4, r7, r5
   18048:	ldr	r5, [sp, #160]	; 0xa0
   1804c:	eor	r6, r1, r6
   18050:	eor	r0, r4, r0
   18054:	adc	ip, r6, r5
   18058:	lsl	r5, r0, #8
   1805c:	lsr	r0, r0, #24
   18060:	eor	r2, ip, r2
   18064:	orr	r5, r5, r2, lsr #24
   18068:	orr	r0, r0, r2, lsl #8
   1806c:	ldr	r2, [sp, #268]	; 0x10c
   18070:	adds	r1, r1, r2
   18074:	ldr	r2, [sp, #264]	; 0x108
   18078:	adc	r2, r3, r2
   1807c:	adds	r3, r1, r0
   18080:	adc	r1, r2, r5
   18084:	eor	r2, r3, r7
   18088:	str	r3, [sp, #200]	; 0xc8
   1808c:	str	r1, [sp, #204]	; 0xcc
   18090:	lsl	r3, r2, #16
   18094:	eor	r1, r1, r6
   18098:	lsr	r2, r2, #16
   1809c:	orr	r3, r3, r1, lsr #16
   180a0:	orr	r1, r2, r1, lsl #16
   180a4:	adds	r2, r1, r4
   180a8:	str	r1, [sp, #116]	; 0x74
   180ac:	str	r3, [sp, #96]	; 0x60
   180b0:	ldr	r4, [fp, #-160]	; 0xffffff60
   180b4:	adc	r9, r3, ip
   180b8:	str	r2, [sp, #160]	; 0xa0
   180bc:	eor	r0, r2, r0
   180c0:	ldr	r3, [sp, #128]	; 0x80
   180c4:	eor	r1, r9, r5
   180c8:	ldr	r5, [fp, #-56]	; 0xffffffc8
   180cc:	lsl	r2, r1, #1
   180d0:	orr	r7, r2, r0, lsr #31
   180d4:	lsl	r0, r0, #1
   180d8:	orr	r6, r0, r1, lsr #31
   180dc:	ldr	r0, [sp, #176]	; 0xb0
   180e0:	ldr	r1, [sp, #124]	; 0x7c
   180e4:	str	r7, [sp, #68]	; 0x44
   180e8:	str	r7, [sp, #332]	; 0x14c
   180ec:	ldr	r7, [fp, #-52]	; 0xffffffcc
   180f0:	str	r6, [sp, #72]	; 0x48
   180f4:	str	r6, [sp, #328]	; 0x148
   180f8:	ldr	r6, [sp, #208]	; 0xd0
   180fc:	adds	r2, r0, r1
   18100:	ldr	r1, [sp, #168]	; 0xa8
   18104:	adc	r3, r1, r3
   18108:	adds	r2, r2, r5
   1810c:	adc	r3, r3, r7
   18110:	ldr	r7, [sp, #112]	; 0x70
   18114:	eor	r5, r3, r7
   18118:	ldr	r7, [sp, #196]	; 0xc4
   1811c:	adds	r8, r5, r6
   18120:	ldr	r6, [sp, #220]	; 0xdc
   18124:	eor	r0, r8, r0
   18128:	lsl	sl, r0, #8
   1812c:	lsr	r0, r0, #24
   18130:	eor	r7, r2, r7
   18134:	adc	ip, r7, r6
   18138:	eor	r1, ip, r1
   1813c:	orr	r0, r0, r1, lsl #8
   18140:	orr	sl, sl, r1, lsr #24
   18144:	adds	r1, r4, r2
   18148:	adc	r3, lr, r3
   1814c:	adds	r2, r1, r0
   18150:	adc	r3, r3, sl
   18154:	eor	r5, r2, r5
   18158:	eor	r1, r3, r7
   1815c:	lsl	r7, r5, #16
   18160:	lsr	r5, r5, #16
   18164:	orr	r6, r7, r1, lsr #16
   18168:	orr	r1, r5, r1, lsl #16
   1816c:	ldr	r7, [sp, #184]	; 0xb8
   18170:	adds	r5, r1, r8
   18174:	str	r1, [sp, #220]	; 0xdc
   18178:	str	r6, [sp, #208]	; 0xd0
   1817c:	adc	r1, r6, ip
   18180:	str	r5, [sp, #76]	; 0x4c
   18184:	eor	r0, r5, r0
   18188:	ldr	r6, [sp, #160]	; 0xa0
   1818c:	str	r1, [sp, #196]	; 0xc4
   18190:	eor	r1, r1, sl
   18194:	lsl	r5, r1, #1
   18198:	orr	r5, r5, r0, lsr #31
   1819c:	lsl	r0, r0, #1
   181a0:	orr	r0, r0, r1, lsr #31
   181a4:	ldr	r1, [sp, #180]	; 0xb4
   181a8:	adds	r1, r4, r1
   181ac:	adc	r4, lr, r7
   181b0:	ldr	r7, [sp, #80]	; 0x50
   181b4:	adds	r1, r1, r0
   181b8:	adc	r4, r4, r5
   181bc:	eor	ip, r4, r7
   181c0:	ldr	r7, [sp, #92]	; 0x5c
   181c4:	adds	sl, ip, r6
   181c8:	eor	r0, sl, r0
   181cc:	eor	lr, r1, r7
   181d0:	lsl	r7, r0, #8
   181d4:	lsr	r0, r0, #24
   181d8:	adc	r9, lr, r9
   181dc:	eor	r5, r9, r5
   181e0:	orr	r7, r7, r5, lsr #24
   181e4:	orr	r0, r0, r5, lsl #8
   181e8:	ldr	r5, [sp, #228]	; 0xe4
   181ec:	adds	r1, r1, r5
   181f0:	ldr	r5, [sp, #224]	; 0xe0
   181f4:	adc	r4, r4, r5
   181f8:	adds	r5, r1, r0
   181fc:	str	r5, [sp, #112]	; 0x70
   18200:	adc	r1, r4, r7
   18204:	eor	r5, r5, ip
   18208:	str	r1, [sp, #160]	; 0xa0
   1820c:	lsl	r4, r5, #16
   18210:	eor	r1, r1, lr
   18214:	lsr	r5, r5, #16
   18218:	orr	r4, r4, r1, lsr #16
   1821c:	orr	r1, r5, r1, lsl #16
   18220:	adds	r6, r1, sl
   18224:	mov	sl, r1
   18228:	str	r1, [sp, #128]	; 0x80
   1822c:	str	r4, [sp, #372]	; 0x174
   18230:	str	r4, [sp, #124]	; 0x7c
   18234:	adc	r5, r4, r9
   18238:	eor	r0, r6, r0
   1823c:	str	sl, [sp, #368]	; 0x170
   18240:	sub	sl, fp, #144	; 0x90
   18244:	str	r6, [sp, #180]	; 0xb4
   18248:	str	r6, [sp, #336]	; 0x150
   1824c:	ldr	r6, [sp, #116]	; 0x74
   18250:	eor	r1, r5, r7
   18254:	mov	lr, r5
   18258:	str	r5, [sp, #184]	; 0xb8
   1825c:	ldr	r5, [sp, #72]	; 0x48
   18260:	lsl	r7, r1, #1
   18264:	str	lr, [sp, #340]	; 0x154
   18268:	orr	r9, r7, r0, lsr #31
   1826c:	lsl	r0, r0, #1
   18270:	orr	r8, r0, r1, lsr #31
   18274:	ldr	r0, [sp, #216]	; 0xd8
   18278:	ldr	r1, [sp, #212]	; 0xd4
   1827c:	str	r9, [sp, #44]	; 0x2c
   18280:	str	r9, [sp, #308]	; 0x134
   18284:	str	r8, [sp, #56]	; 0x38
   18288:	str	r8, [sp, #304]	; 0x130
   1828c:	adds	r7, r5, r0
   18290:	ldr	r0, [sp, #68]	; 0x44
   18294:	adc	r1, r0, r1
   18298:	adds	ip, r7, r2
   1829c:	ldr	r2, [sp, #136]	; 0x88
   182a0:	ldr	r7, [sp, #84]	; 0x54
   182a4:	adc	r1, r1, r3
   182a8:	eor	r3, r1, r2
   182ac:	ldr	r2, [sp, #148]	; 0x94
   182b0:	str	r3, [sp, #108]	; 0x6c
   182b4:	adds	r3, r3, r7
   182b8:	ldr	r7, [sp, #88]	; 0x58
   182bc:	str	r3, [sp, #148]	; 0x94
   182c0:	eor	r3, r3, r5
   182c4:	ldr	r5, [sp, #164]	; 0xa4
   182c8:	eor	r2, ip, r2
   182cc:	str	r2, [sp, #92]	; 0x5c
   182d0:	adc	r2, r2, r7
   182d4:	lsl	r7, r3, #8
   182d8:	lsr	r3, r3, #24
   182dc:	str	r2, [sp, #152]	; 0x98
   182e0:	eor	r2, r2, r0
   182e4:	orr	r7, r7, r2, lsr #24
   182e8:	orr	r3, r3, r2, lsl #8
   182ec:	ldr	r2, [sp, #244]	; 0xf4
   182f0:	str	r3, [sp, #176]	; 0xb0
   182f4:	str	r7, [sp, #168]	; 0xa8
   182f8:	adds	r0, ip, r2
   182fc:	ldr	r2, [sp, #240]	; 0xf0
   18300:	adc	r1, r1, r2
   18304:	adds	r2, r0, r3
   18308:	ldr	r0, [sp, #252]	; 0xfc
   1830c:	adc	r3, r1, r7
   18310:	ldr	r1, [sp, #248]	; 0xf8
   18314:	str	r2, [sp, #84]	; 0x54
   18318:	ldr	r7, [fp, #-132]	; 0xffffff7c
   1831c:	str	r3, [sp, #80]	; 0x50
   18320:	adds	r0, r2, r0
   18324:	adc	r1, r3, r1
   18328:	adds	r0, r0, r8
   1832c:	ldm	sl, {r2, r3, sl}
   18330:	str	r0, [sp, #68]	; 0x44
   18334:	adc	r0, r1, r9
   18338:	ldr	r1, [sp, #132]	; 0x84
   1833c:	str	r0, [sp, #60]	; 0x3c
   18340:	ldr	r0, [sp, #120]	; 0x78
   18344:	adds	ip, r0, r5
   18348:	ldr	r0, [sp, #156]	; 0x9c
   1834c:	adc	r1, r1, r0
   18350:	adds	r2, ip, r2
   18354:	adc	r1, r1, r3
   18358:	ldr	r3, [sp, #96]	; 0x60
   1835c:	eor	r4, r2, r6
   18360:	ldr	r6, [sp, #76]	; 0x4c
   18364:	eor	r3, r1, r3
   18368:	adds	ip, r3, r6
   1836c:	ldr	r6, [sp, #196]	; 0xc4
   18370:	adc	r8, r4, r6
   18374:	eor	lr, r8, r0
   18378:	eor	r0, ip, r5
   1837c:	lsl	r6, r0, #8
   18380:	lsr	r0, r0, #24
   18384:	orr	r5, r6, lr, lsr #24
   18388:	orr	r6, r0, lr, lsl #8
   1838c:	adds	r0, sl, r2
   18390:	adc	r1, r7, r1
   18394:	ldr	r7, [fp, #-128]	; 0xffffff80
   18398:	adds	r2, r0, r6
   1839c:	str	r6, [sp, #164]	; 0xa4
   183a0:	ldr	r6, [sp, #144]	; 0x90
   183a4:	str	r5, [sp, #64]	; 0x40
   183a8:	adc	r0, r1, r5
   183ac:	eor	r1, r2, r3
   183b0:	str	r2, [sp, #88]	; 0x58
   183b4:	ldr	r3, [sp, #204]	; 0xcc
   183b8:	str	r0, [sp, #96]	; 0x60
   183bc:	lsl	r2, r1, #16
   183c0:	eor	r0, r0, r4
   183c4:	lsr	r1, r1, #16
   183c8:	orr	r4, r1, r0, lsl #16
   183cc:	orr	r2, r2, r0, lsr #16
   183d0:	ldr	r0, [sp, #200]	; 0xc8
   183d4:	adds	lr, r4, ip
   183d8:	mov	r1, r2
   183dc:	str	r2, [sp, #136]	; 0x88
   183e0:	str	r4, [sp, #132]	; 0x84
   183e4:	str	r4, [sp, #376]	; 0x178
   183e8:	ldr	r4, [fp, #-124]	; 0xffffff84
   183ec:	adc	r9, r2, r8
   183f0:	ldr	r2, [sp, #140]	; 0x8c
   183f4:	str	r1, [sp, #380]	; 0x17c
   183f8:	str	lr, [sp, #344]	; 0x158
   183fc:	str	lr, [sp, #40]	; 0x28
   18400:	adds	r0, r0, r6
   18404:	str	r9, [sp, #348]	; 0x15c
   18408:	adc	r3, r3, r2
   1840c:	adds	r1, r0, r7
   18410:	ldr	r0, [sp, #208]	; 0xd0
   18414:	adc	r3, r3, r4
   18418:	eor	r4, r3, r0
   1841c:	ldr	r0, [sp, #220]	; 0xdc
   18420:	eor	r7, r1, r0
   18424:	ldr	r0, [sp, #188]	; 0xbc
   18428:	adds	r5, r4, r0
   1842c:	ldr	r0, [sp, #192]	; 0xc0
   18430:	str	r5, [sp, #48]	; 0x30
   18434:	adc	r0, r7, r0
   18438:	str	r0, [sp, #52]	; 0x34
   1843c:	eor	r8, r0, r2
   18440:	eor	r0, r5, r6
   18444:	lsl	r6, r0, #8
   18448:	lsr	r0, r0, #24
   1844c:	orr	r2, r0, r8, lsl #8
   18450:	ldr	r0, [sp, #236]	; 0xec
   18454:	orr	r6, r6, r8, lsr #24
   18458:	str	r2, [sp, #76]	; 0x4c
   1845c:	str	r6, [sp, #72]	; 0x48
   18460:	adds	r0, r1, r0
   18464:	ldr	r1, [sp, #232]	; 0xe8
   18468:	adc	r1, r3, r1
   1846c:	adds	r2, r0, r2
   18470:	adc	r0, r1, r6
   18474:	eor	r1, r2, r4
   18478:	str	r2, [sp, #116]	; 0x74
   1847c:	str	r0, [sp, #120]	; 0x78
   18480:	lsr	r3, r1, #16
   18484:	eor	r0, r0, r7
   18488:	lsl	r1, r1, #16
   1848c:	orr	r4, r1, r0, lsr #16
   18490:	ldr	r1, [sp, #60]	; 0x3c
   18494:	orr	sl, r3, r0, lsl #16
   18498:	ldr	r3, [sp, #68]	; 0x44
   1849c:	ldr	r0, [sp, #44]	; 0x2c
   184a0:	str	r4, [sp, #388]	; 0x184
   184a4:	str	sl, [sp, #384]	; 0x180
   184a8:	eor	ip, r4, r1
   184ac:	eor	r2, sl, r3
   184b0:	adds	r6, ip, lr
   184b4:	mov	lr, r9
   184b8:	adc	r7, r2, r9
   184bc:	eor	r9, r7, r0
   184c0:	ldr	r0, [sp, #56]	; 0x38
   184c4:	eor	r5, r6, r0
   184c8:	ldr	r0, [sp, #260]	; 0x104
   184cc:	lsl	r8, r5, #8
   184d0:	lsr	r5, r5, #24
   184d4:	orr	r8, r8, r9, lsr #24
   184d8:	orr	r5, r5, r9, lsl #8
   184dc:	adds	r9, r3, r0
   184e0:	ldr	r0, [sp, #256]	; 0x100
   184e4:	adc	r0, r1, r0
   184e8:	adds	r3, r9, r5
   184ec:	adc	r0, r0, r8
   184f0:	eor	r1, r3, ip
   184f4:	str	r3, [sp, #200]	; 0xc8
   184f8:	sub	ip, fp, #96	; 0x60
   184fc:	lsl	r3, r1, #16
   18500:	eor	r2, r0, r2
   18504:	lsr	r1, r1, #16
   18508:	str	r0, [sp, #204]	; 0xcc
   1850c:	orr	r1, r1, r2, lsl #16
   18510:	orr	r0, r3, r2, lsr #16
   18514:	str	r1, [sp, #196]	; 0xc4
   18518:	adds	r1, r1, r6
   1851c:	str	r0, [sp, #192]	; 0xc0
   18520:	adc	r0, r0, r7
   18524:	str	r1, [sp, #156]	; 0x9c
   18528:	eor	r1, r1, r5
   1852c:	str	r0, [sp, #188]	; 0xbc
   18530:	eor	r0, r0, r8
   18534:	lsl	r3, r0, #1
   18538:	orr	r2, r3, r1, lsr #31
   1853c:	lsl	r1, r1, #1
   18540:	orr	r0, r1, r0, lsr #31
   18544:	ldr	r1, [sp, #164]	; 0xa4
   18548:	str	r2, [sp, #220]	; 0xdc
   1854c:	ldr	r2, [sp, #40]	; 0x28
   18550:	str	r0, [sp, #208]	; 0xd0
   18554:	ldr	r0, [sp, #64]	; 0x40
   18558:	eor	r1, r2, r1
   1855c:	ldr	r2, [fp, #-84]	; 0xffffffac
   18560:	eor	r0, lr, r0
   18564:	lsl	r3, r0, #1
   18568:	orr	r6, r3, r1, lsr #31
   1856c:	lsl	r1, r1, #1
   18570:	ldm	ip, {r3, r7, ip}
   18574:	orr	r5, r1, r0, lsr #31
   18578:	ldr	r0, [sp, #112]	; 0x70
   1857c:	ldr	r1, [sp, #160]	; 0xa0
   18580:	str	r2, [sp, #164]	; 0xa4
   18584:	ldr	r2, [sp, #48]	; 0x30
   18588:	adds	r0, r5, r0
   1858c:	adc	r1, r6, r1
   18590:	adds	r0, r0, r3
   18594:	ldr	r3, [sp, #80]	; 0x50
   18598:	adc	r1, r1, r7
   1859c:	adds	r9, sl, r2
   185a0:	ldr	r2, [sp, #52]	; 0x34
   185a4:	ldr	r7, [sp, #84]	; 0x54
   185a8:	adc	lr, r4, r2
   185ac:	ldr	r2, [sp, #92]	; 0x5c
   185b0:	eor	r2, r3, r2
   185b4:	ldr	r3, [sp, #108]	; 0x6c
   185b8:	eor	r4, r7, r3
   185bc:	lsr	r7, r4, #16
   185c0:	lsl	r4, r4, #16
   185c4:	orr	r3, r7, r2, lsl #16
   185c8:	orr	r2, r4, r2, lsr #16
   185cc:	eor	r4, r1, r2
   185d0:	str	r3, [sp, #84]	; 0x54
   185d4:	eor	r7, r0, r3
   185d8:	ldr	r3, [sp, #164]	; 0xa4
   185dc:	str	r2, [sp, #92]	; 0x5c
   185e0:	adds	sl, r4, r9
   185e4:	adc	r2, r7, lr
   185e8:	eor	r5, sl, r5
   185ec:	adds	r0, ip, r0
   185f0:	lsl	r8, r5, #8
   185f4:	eor	r6, r2, r6
   185f8:	lsr	r5, r5, #24
   185fc:	orr	r8, r8, r6, lsr #24
   18600:	orr	r5, r5, r6, lsl #8
   18604:	ldr	r6, [sp, #252]	; 0xfc
   18608:	adc	r1, r3, r1
   1860c:	ldr	r3, [sp, #248]	; 0xf8
   18610:	adds	r0, r0, r5
   18614:	adc	r1, r1, r8
   18618:	adds	r6, r0, r6
   1861c:	eor	r0, r0, r4
   18620:	adc	ip, r1, r3
   18624:	ldr	r3, [sp, #208]	; 0xd0
   18628:	eor	r1, r1, r7
   1862c:	lsl	r7, r0, #16
   18630:	lsr	r0, r0, #16
   18634:	orr	r0, r0, r1, lsl #16
   18638:	str	r0, [sp, #164]	; 0xa4
   1863c:	adds	r3, r6, r3
   18640:	mov	r6, r0
   18644:	str	r3, [sp, #248]	; 0xf8
   18648:	ldr	r3, [sp, #220]	; 0xdc
   1864c:	str	r6, [sp, #392]	; 0x188
   18650:	adc	r3, ip, r3
   18654:	adds	r4, r0, sl
   18658:	str	r3, [sp, #252]	; 0xfc
   1865c:	orr	r3, r7, r1, lsr #16
   18660:	str	r4, [sp, #140]	; 0x8c
   18664:	adc	r1, r3, r2
   18668:	mov	r7, r3
   1866c:	str	r3, [sp, #160]	; 0xa0
   18670:	eor	r0, r1, r8
   18674:	mov	r8, r1
   18678:	str	r1, [sp, #144]	; 0x90
   1867c:	eor	r1, r4, r5
   18680:	mov	r5, r4
   18684:	str	r7, [sp, #396]	; 0x18c
   18688:	ldr	r7, [fp, #-80]	; 0xffffffb0
   1868c:	lsl	r2, r0, #1
   18690:	str	r8, [sp, #356]	; 0x164
   18694:	str	r5, [sp, #352]	; 0x160
   18698:	orr	r4, r2, r1, lsr #31
   1869c:	lsl	r1, r1, #1
   186a0:	orr	r3, r1, r0, lsr #31
   186a4:	ldr	r0, [sp, #72]	; 0x48
   186a8:	ldr	r1, [sp, #76]	; 0x4c
   186ac:	str	r4, [sp, #108]	; 0x6c
   186b0:	str	r4, [sp, #316]	; 0x13c
   186b4:	str	r3, [sp, #112]	; 0x70
   186b8:	str	r3, [sp, #312]	; 0x138
   186bc:	eor	r0, lr, r0
   186c0:	eor	r1, r9, r1
   186c4:	sub	lr, fp, #76	; 0x4c
   186c8:	lsl	r2, r0, #1
   186cc:	ldm	lr, {r6, r8, lr}
   186d0:	orr	sl, r2, r1, lsr #31
   186d4:	lsl	r1, r1, #1
   186d8:	ldr	r2, [sp, #84]	; 0x54
   186dc:	orr	ip, r1, r0, lsr #31
   186e0:	ldr	r0, [sp, #88]	; 0x58
   186e4:	adds	r1, ip, r0
   186e8:	ldr	r0, [sp, #96]	; 0x60
   186ec:	adc	r0, sl, r0
   186f0:	adds	r1, r1, r7
   186f4:	adc	r3, r0, r6
   186f8:	ldr	r0, [sp, #124]	; 0x7c
   186fc:	eor	r7, r3, r0
   18700:	ldr	r0, [sp, #148]	; 0x94
   18704:	adds	r4, r2, r0
   18708:	ldr	r0, [sp, #152]	; 0x98
   1870c:	ldr	r2, [sp, #92]	; 0x5c
   18710:	str	r4, [sp, #124]	; 0x7c
   18714:	adc	r9, r2, r0
   18718:	ldr	r0, [sp, #128]	; 0x80
   1871c:	adds	r2, r7, r4
   18720:	eor	ip, r2, ip
   18724:	lsr	r5, ip, #24
   18728:	eor	r6, r1, r0
   1872c:	adc	r0, r6, r9
   18730:	adds	r1, r8, r1
   18734:	eor	r4, r0, sl
   18738:	lsl	sl, ip, #8
   1873c:	adc	r3, lr, r3
   18740:	orr	sl, sl, r4, lsr #24
   18744:	orr	r4, r5, r4, lsl #8
   18748:	adds	r5, r1, r4
   1874c:	adc	r1, r3, sl
   18750:	eor	r3, r5, r7
   18754:	str	r5, [sp, #84]	; 0x54
   18758:	str	r1, [sp, #88]	; 0x58
   1875c:	lsl	r7, r3, #16
   18760:	eor	r1, r1, r6
   18764:	lsr	r3, r3, #16
   18768:	orr	r6, r7, r1, lsr #16
   1876c:	orr	r1, r3, r1, lsl #16
   18770:	ldr	r3, [sp, #264]	; 0x108
   18774:	adds	lr, r1, r2
   18778:	str	r1, [sp, #152]	; 0x98
   1877c:	ldr	r1, [sp, #252]	; 0xfc
   18780:	adc	r8, r6, r0
   18784:	str	lr, [sp, #128]	; 0x80
   18788:	str	lr, [sp, #360]	; 0x168
   1878c:	eor	r0, r8, sl
   18790:	str	r8, [sp, #148]	; 0x94
   18794:	str	r8, [sp, #364]	; 0x16c
   18798:	lsl	r2, r0, #1
   1879c:	eor	r1, r6, r1
   187a0:	str	r1, [sp, #76]	; 0x4c
   187a4:	eor	r1, lr, r4
   187a8:	orr	r5, r2, r1, lsr #31
   187ac:	lsl	r1, r1, #1
   187b0:	ldr	r2, [sp, #124]	; 0x7c
   187b4:	ldr	r8, [sp, #76]	; 0x4c
   187b8:	orr	ip, r1, r0, lsr #31
   187bc:	ldr	r0, [sp, #168]	; 0xa8
   187c0:	ldr	r1, [sp, #176]	; 0xb0
   187c4:	str	r5, [sp, #96]	; 0x60
   187c8:	str	r5, [sp, #324]	; 0x144
   187cc:	str	ip, [sp, #92]	; 0x5c
   187d0:	str	ip, [sp, #320]	; 0x140
   187d4:	eor	r0, r9, r0
   187d8:	eor	r1, r2, r1
   187dc:	lsl	r2, r0, #1
   187e0:	orr	r2, r2, r1, lsr #31
   187e4:	lsl	r1, r1, #1
   187e8:	orr	r0, r1, r0, lsr #31
   187ec:	ldr	r1, [sp, #268]	; 0x10c
   187f0:	adds	r1, r0, r1
   187f4:	adc	r4, r2, r3
   187f8:	ldr	r3, [sp, #116]	; 0x74
   187fc:	adds	r1, r1, r3
   18800:	ldr	r3, [sp, #120]	; 0x78
   18804:	adc	r4, r4, r3
   18808:	ldr	r3, [sp, #136]	; 0x88
   1880c:	eor	r9, r4, r3
   18810:	ldr	r3, [sp, #132]	; 0x84
   18814:	eor	r6, r1, r3
   18818:	ldr	r3, [sp, #180]	; 0xb4
   1881c:	adds	sl, r9, r3
   18820:	ldr	r3, [sp, #184]	; 0xb8
   18824:	eor	r0, sl, r0
   18828:	lsl	r7, r0, #8
   1882c:	lsr	r0, r0, #24
   18830:	adc	r3, r6, r3
   18834:	eor	r2, r3, r2
   18838:	orr	r0, r0, r2, lsl #8
   1883c:	orr	r7, r7, r2, lsr #24
   18840:	str	r0, [sp, #176]	; 0xb0
   18844:	adds	r0, r0, r1
   18848:	str	r7, [sp, #168]	; 0xa8
   1884c:	adc	r1, r7, r4
   18850:	ldr	r4, [fp, #-56]	; 0xffffffc8
   18854:	ldr	r7, [fp, #-52]	; 0xffffffcc
   18858:	adds	r2, r0, r4
   1885c:	adc	r0, r1, r7
   18860:	eor	r4, r2, r9
   18864:	str	r2, [sp, #116]	; 0x74
   18868:	str	r0, [sp, #120]	; 0x78
   1886c:	lsl	r1, r4, #16
   18870:	eor	r0, r0, r6
   18874:	lsr	r4, r4, #16
   18878:	orr	r1, r1, r0, lsr #16
   1887c:	orr	r0, r4, r0, lsl #16
   18880:	adds	r9, r0, sl
   18884:	str	r0, [sp, #184]	; 0xb8
   18888:	str	r1, [sp, #180]	; 0xb4
   1888c:	ldr	r0, [sp, #152]	; 0x98
   18890:	adc	r3, r1, r3
   18894:	ldr	r1, [sp, #248]	; 0xf8
   18898:	adds	sl, r9, r8
   1889c:	eor	lr, r0, r1
   188a0:	ldr	r0, [sp, #220]	; 0xdc
   188a4:	adc	ip, r3, lr
   188a8:	eor	r6, ip, r0
   188ac:	ldr	r0, [sp, #208]	; 0xd0
   188b0:	eor	r4, sl, r0
   188b4:	ldr	r0, [sp, #252]	; 0xfc
   188b8:	lsl	r7, r4, #8
   188bc:	lsr	r4, r4, #24
   188c0:	orr	r4, r4, r6, lsl #8
   188c4:	orr	r7, r7, r6, lsr #24
   188c8:	adds	r1, r4, r1
   188cc:	adc	r2, r7, r0
   188d0:	ldr	r0, [sp, #168]	; 0xa8
   188d4:	eor	r3, r3, r0
   188d8:	ldr	r0, [sp, #176]	; 0xb0
   188dc:	lsl	r5, r3, #1
   188e0:	eor	r6, r9, r0
   188e4:	ldr	r9, [sp, #112]	; 0x70
   188e8:	orr	r0, r5, r6, lsr #31
   188ec:	lsl	r6, r6, #1
   188f0:	ldr	r5, [fp, #-76]	; 0xffffffb4
   188f4:	orr	r3, r6, r3, lsr #31
   188f8:	str	r0, [sp, #124]	; 0x7c
   188fc:	str	r0, [sp, #332]	; 0x14c
   18900:	str	r3, [sp, #132]	; 0x84
   18904:	str	r3, [sp, #328]	; 0x148
   18908:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1890c:	adds	r0, r1, r3
   18910:	ldr	r1, [sp, #84]	; 0x54
   18914:	adc	r3, r2, r5
   18918:	eor	r5, r0, r8
   1891c:	str	r0, [sp, #80]	; 0x50
   18920:	eor	r2, r3, lr
   18924:	lsl	r6, r5, #16
   18928:	orr	r0, r6, r2, lsr #16
   1892c:	lsr	r6, r5, #16
   18930:	orr	r2, r6, r2, lsl #16
   18934:	str	r0, [sp, #372]	; 0x174
   18938:	str	r0, [sp, #152]	; 0x98
   1893c:	adds	r5, r2, sl
   18940:	mov	lr, r2
   18944:	str	r2, [sp, #168]	; 0xa8
   18948:	adc	r2, r0, ip
   1894c:	str	lr, [sp, #368]	; 0x170
   18950:	adds	r8, r1, r9
   18954:	ldr	r1, [sp, #108]	; 0x6c
   18958:	str	r5, [sp, #336]	; 0x150
   1895c:	ldr	lr, [fp, #-96]	; 0xffffffa0
   18960:	str	r5, [sp, #220]	; 0xdc
   18964:	eor	r6, r2, r7
   18968:	mov	ip, r2
   1896c:	str	r2, [sp, #208]	; 0xd0
   18970:	eor	r2, r5, r4
   18974:	lsl	r7, r6, #1
   18978:	str	ip, [sp, #340]	; 0x154
   1897c:	ldr	ip, [fp, #-92]	; 0xffffffa4
   18980:	orr	r4, r7, r2, lsr #31
   18984:	lsl	r2, r2, #1
   18988:	orr	r7, r2, r6, lsr #31
   1898c:	ldr	r2, [sp, #88]	; 0x58
   18990:	ldr	r6, [fp, #-124]	; 0xffffff84
   18994:	str	r4, [sp, #252]	; 0xfc
   18998:	str	r4, [sp, #308]	; 0x134
   1899c:	ldr	r4, [sp, #180]	; 0xb4
   189a0:	str	r7, [sp, #248]	; 0xf8
   189a4:	str	r7, [sp, #304]	; 0x130
   189a8:	ldr	r7, [fp, #-128]	; 0xffffff80
   189ac:	adc	r2, r2, r1
   189b0:	adds	r0, r8, r7
   189b4:	adc	r2, r2, r6
   189b8:	eor	r7, r2, r4
   189bc:	ldr	r4, [sp, #184]	; 0xb8
   189c0:	eor	r6, r0, r4
   189c4:	ldr	r4, [sp, #156]	; 0x9c
   189c8:	adds	r8, r7, r4
   189cc:	ldr	r4, [sp, #188]	; 0xbc
   189d0:	eor	r5, r8, r9
   189d4:	lsl	r9, r5, #8
   189d8:	lsr	r5, r5, #24
   189dc:	adc	sl, r6, r4
   189e0:	adds	r0, lr, r0
   189e4:	eor	r4, sl, r1
   189e8:	adc	r2, ip, r2
   189ec:	orr	r9, r9, r4, lsr #24
   189f0:	orr	r4, r5, r4, lsl #8
   189f4:	adds	r1, r0, r4
   189f8:	adc	r0, r2, r9
   189fc:	eor	r2, r1, r7
   18a00:	str	r1, [sp, #136]	; 0x88
   18a04:	ldr	r1, [sp, #80]	; 0x50
   18a08:	str	r0, [sp, #156]	; 0x9c
   18a0c:	lsl	r7, r2, #16
   18a10:	eor	r0, r0, r6
   18a14:	lsr	r2, r2, #16
   18a18:	orr	r6, r7, r0, lsr #16
   18a1c:	orr	r0, r2, r0, lsl #16
   18a20:	adds	r7, r0, r8
   18a24:	mov	ip, r0
   18a28:	str	r0, [sp, #180]	; 0xb4
   18a2c:	ldr	r8, [sp, #92]	; 0x5c
   18a30:	str	r6, [sp, #176]	; 0xb0
   18a34:	str	r6, [sp, #380]	; 0x17c
   18a38:	adc	r2, r6, sl
   18a3c:	mov	r5, r7
   18a40:	str	r7, [sp, #184]	; 0xb8
   18a44:	str	ip, [sp, #376]	; 0x178
   18a48:	eor	r0, r2, r9
   18a4c:	mov	lr, r2
   18a50:	str	r2, [sp, #188]	; 0xbc
   18a54:	eor	r2, r7, r4
   18a58:	ldr	r4, [sp, #96]	; 0x60
   18a5c:	str	r5, [sp, #344]	; 0x158
   18a60:	lsl	r7, r0, #1
   18a64:	str	lr, [sp, #348]	; 0x15c
   18a68:	orr	sl, r7, r2, lsr #31
   18a6c:	lsl	r2, r2, #1
   18a70:	ldr	r7, [sp, #140]	; 0x8c
   18a74:	orr	r9, r2, r0, lsr #31
   18a78:	ldr	r0, [sp, #228]	; 0xe4
   18a7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18a80:	adds	r0, r1, r0
   18a84:	ldr	r1, [sp, #224]	; 0xe0
   18a88:	adc	r1, r3, r1
   18a8c:	adds	r0, r0, r9
   18a90:	ldr	r3, [fp, #-84]	; 0xffffffac
   18a94:	str	r0, [sp, #112]	; 0x70
   18a98:	adc	r0, r1, sl
   18a9c:	ldr	r1, [sp, #120]	; 0x78
   18aa0:	str	r0, [sp, #108]	; 0x6c
   18aa4:	ldr	r0, [sp, #116]	; 0x74
   18aa8:	adds	r0, r8, r0
   18aac:	adc	r1, r4, r1
   18ab0:	adds	r0, r0, r2
   18ab4:	ldr	r2, [sp, #192]	; 0xc0
   18ab8:	adc	r1, r1, r3
   18abc:	ldr	r3, [sp, #196]	; 0xc4
   18ac0:	eor	r2, r1, r2
   18ac4:	adds	ip, r2, r7
   18ac8:	ldr	r7, [sp, #144]	; 0x90
   18acc:	eor	r3, r0, r3
   18ad0:	adc	r6, r3, r7
   18ad4:	eor	r7, r6, r4
   18ad8:	eor	r4, ip, r8
   18adc:	lsl	r5, r4, #8
   18ae0:	lsr	r4, r4, #24
   18ae4:	orr	r5, r5, r7, lsr #24
   18ae8:	orr	r4, r4, r7, lsl #8
   18aec:	ldr	r7, [sp, #260]	; 0x104
   18af0:	str	r4, [sp, #192]	; 0xc0
   18af4:	str	r5, [sp, #140]	; 0x8c
   18af8:	adds	r0, r0, r7
   18afc:	ldr	r7, [sp, #256]	; 0x100
   18b00:	adc	r1, r1, r7
   18b04:	adds	r7, r0, r4
   18b08:	adc	r0, r1, r5
   18b0c:	eor	r1, r7, r2
   18b10:	ldr	r5, [sp, #132]	; 0x84
   18b14:	str	r7, [sp, #196]	; 0xc4
   18b18:	ldr	r7, [sp, #124]	; 0x7c
   18b1c:	str	r0, [sp, #260]	; 0x104
   18b20:	lsl	r2, r1, #16
   18b24:	eor	r0, r0, r3
   18b28:	lsr	r1, r1, #16
   18b2c:	orr	r4, r1, r0, lsl #16
   18b30:	orr	r3, r2, r0, lsr #16
   18b34:	ldr	r0, [sp, #200]	; 0xc8
   18b38:	ldr	r1, [sp, #204]	; 0xcc
   18b3c:	adds	ip, r4, ip
   18b40:	str	r3, [sp, #256]	; 0x100
   18b44:	str	r3, [sp, #388]	; 0x184
   18b48:	str	r4, [sp, #228]	; 0xe4
   18b4c:	str	r4, [sp, #384]	; 0x180
   18b50:	adc	lr, r3, r6
   18b54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18b58:	ldr	r6, [fp, #-52]	; 0xffffffcc
   18b5c:	adds	r0, r5, r0
   18b60:	adc	r2, r7, r1
   18b64:	adds	r1, r0, r3
   18b68:	ldr	r0, [sp, #160]	; 0xa0
   18b6c:	adc	r2, r2, r6
   18b70:	eor	r6, r2, r0
   18b74:	ldr	r0, [sp, #164]	; 0xa4
   18b78:	eor	r3, r1, r0
   18b7c:	ldr	r0, [sp, #128]	; 0x80
   18b80:	adds	r4, r6, r0
   18b84:	ldr	r0, [sp, #148]	; 0x94
   18b88:	str	r4, [sp, #200]	; 0xc8
   18b8c:	adc	r0, r3, r0
   18b90:	str	r0, [sp, #204]	; 0xcc
   18b94:	eor	r8, r0, r7
   18b98:	eor	r0, r4, r5
   18b9c:	lsl	r4, r0, #8
   18ba0:	lsr	r0, r0, #24
   18ba4:	orr	r5, r0, r8, lsl #8
   18ba8:	ldr	r0, [sp, #216]	; 0xd8
   18bac:	orr	r4, r4, r8, lsr #24
   18bb0:	str	r5, [sp, #148]	; 0x94
   18bb4:	str	r4, [sp, #144]	; 0x90
   18bb8:	adds	r0, r1, r0
   18bbc:	ldr	r1, [sp, #212]	; 0xd4
   18bc0:	adc	r1, r2, r1
   18bc4:	adds	r2, r0, r5
   18bc8:	ldr	r5, [sp, #112]	; 0x70
   18bcc:	adc	r0, r1, r4
   18bd0:	eor	r1, r2, r6
   18bd4:	str	r2, [sp, #216]	; 0xd8
   18bd8:	str	r0, [sp, #224]	; 0xe0
   18bdc:	lsr	r2, r1, #16
   18be0:	eor	r0, r0, r3
   18be4:	lsl	r1, r1, #16
   18be8:	orr	r3, r2, r0, lsl #16
   18bec:	orr	r2, r1, r0, lsr #16
   18bf0:	ldr	r0, [sp, #108]	; 0x6c
   18bf4:	str	r3, [sp, #212]	; 0xd4
   18bf8:	eor	r3, r3, r5
   18bfc:	eor	r1, r2, r0
   18c00:	adds	r4, r1, ip
   18c04:	eor	r9, r4, r9
   18c08:	adc	r6, r3, lr
   18c0c:	eor	sl, r6, sl
   18c10:	lsr	r7, r9, #24
   18c14:	lsl	r8, r9, #8
   18c18:	orr	r9, r7, sl, lsl #8
   18c1c:	ldr	r7, [sp, #268]	; 0x10c
   18c20:	orr	r8, r8, sl, lsr #24
   18c24:	adds	r7, r5, r7
   18c28:	ldr	r5, [sp, #264]	; 0x108
   18c2c:	adc	sl, r0, r5
   18c30:	adds	r7, r7, r9
   18c34:	ldr	r5, [fp, #-160]	; 0xffffff60
   18c38:	ldr	r0, [sp, #200]	; 0xc8
   18c3c:	adc	sl, sl, r8
   18c40:	eor	r1, r7, r1
   18c44:	str	r7, [sp, #272]	; 0x110
   18c48:	lsl	r7, r1, #16
   18c4c:	eor	r3, sl, r3
   18c50:	lsr	r1, r1, #16
   18c54:	str	sl, [sp, #276]	; 0x114
   18c58:	orr	r1, r1, r3, lsl #16
   18c5c:	orr	r7, r7, r3, lsr #16
   18c60:	str	r1, [sp, #392]	; 0x188
   18c64:	adds	r1, r1, r4
   18c68:	str	r7, [sp, #396]	; 0x18c
   18c6c:	adc	r3, r7, r6
   18c70:	str	r1, [sp, #352]	; 0x160
   18c74:	eor	r1, r1, r9
   18c78:	ldr	r6, [sp, #156]	; 0x9c
   18c7c:	str	r3, [sp, #356]	; 0x164
   18c80:	eor	r3, r3, r8
   18c84:	lsl	r4, r1, #1
   18c88:	ldr	r8, [fp, #-140]	; 0xffffff74
   18c8c:	orr	r4, r4, r3, lsr #31
   18c90:	lsl	r3, r3, #1
   18c94:	orr	r1, r3, r1, lsr #31
   18c98:	ldr	r3, [sp, #192]	; 0xc0
   18c9c:	str	r4, [sp, #312]	; 0x138
   18ca0:	ldr	r4, [fp, #-156]	; 0xffffff64
   18ca4:	str	r1, [sp, #316]	; 0x13c
   18ca8:	ldr	r1, [sp, #140]	; 0x8c
   18cac:	eor	r3, ip, r3
   18cb0:	ldr	ip, [fp, #-144]	; 0xffffff70
   18cb4:	eor	r1, lr, r1
   18cb8:	lsl	r7, r1, #1
   18cbc:	orr	r7, r7, r3, lsr #31
   18cc0:	lsl	r3, r3, #1
   18cc4:	orr	r1, r3, r1, lsr #31
   18cc8:	ldr	r3, [sp, #136]	; 0x88
   18ccc:	adds	r3, r1, r3
   18cd0:	adc	r6, r7, r6
   18cd4:	adds	r3, r3, r5
   18cd8:	adc	r4, r6, r4
   18cdc:	ldr	r6, [sp, #152]	; 0x98
   18ce0:	eor	r5, r4, r6
   18ce4:	ldr	r6, [sp, #212]	; 0xd4
   18ce8:	adds	lr, r6, r0
   18cec:	ldr	r0, [sp, #204]	; 0xcc
   18cf0:	adc	r9, r2, r0
   18cf4:	ldr	r0, [sp, #168]	; 0xa8
   18cf8:	adds	r2, r5, lr
   18cfc:	eor	r1, r2, r1
   18d00:	eor	r6, r3, r0
   18d04:	lsl	r0, r1, #8
   18d08:	lsr	r1, r1, #24
   18d0c:	adc	sl, r6, r9
   18d10:	adds	r3, ip, r3
   18d14:	eor	r7, sl, r7
   18d18:	orr	r1, r1, r7, lsl #8
   18d1c:	orr	r0, r0, r7, lsr #24
   18d20:	adc	r7, r8, r4
   18d24:	adds	r4, r3, r1
   18d28:	ldr	r3, [sp, #172]	; 0xac
   18d2c:	adc	r7, r7, r0
   18d30:	str	r4, [sp, #200]	; 0xc8
   18d34:	str	r7, [sp, #192]	; 0xc0
   18d38:	stm	r3, {r4, r7}
   18d3c:	eor	r3, r7, r6
   18d40:	eor	r7, r4, r5
   18d44:	lsl	r6, r7, #16
   18d48:	lsr	r7, r7, #16
   18d4c:	orr	r5, r6, r3, lsr #16
   18d50:	orr	r3, r7, r3, lsl #16
   18d54:	adds	r2, r3, r2
   18d58:	mov	r6, r3
   18d5c:	str	r3, [sp, #172]	; 0xac
   18d60:	mov	r7, r5
   18d64:	str	r5, [sp, #168]	; 0xa8
   18d68:	adc	r3, r5, sl
   18d6c:	eor	r1, r2, r1
   18d70:	str	r2, [sp, #164]	; 0xa4
   18d74:	str	r7, [sp, #372]	; 0x174
   18d78:	ldr	r7, [fp, #-72]	; 0xffffffb8
   18d7c:	str	r6, [sp, #368]	; 0x170
   18d80:	ldr	r6, [fp, #-68]	; 0xffffffbc
   18d84:	ldr	sl, [sp, #248]	; 0xf8
   18d88:	eor	r0, r3, r0
   18d8c:	mov	r8, r3
   18d90:	str	r3, [sp, #160]	; 0xa0
   18d94:	mov	r3, r2
   18d98:	lsl	r2, r0, #1
   18d9c:	str	r3, [sp, #360]	; 0x168
   18da0:	str	r8, [sp, #364]	; 0x16c
   18da4:	orr	r5, r2, r1, lsr #31
   18da8:	lsl	r1, r1, #1
   18dac:	orr	r4, r1, r0, lsr #31
   18db0:	ldr	r0, [sp, #144]	; 0x90
   18db4:	ldr	r1, [sp, #148]	; 0x94
   18db8:	str	r5, [sp, #204]	; 0xcc
   18dbc:	str	r5, [sp, #324]	; 0x144
   18dc0:	str	r4, [sp, #212]	; 0xd4
   18dc4:	str	r4, [sp, #320]	; 0x140
   18dc8:	eor	r0, r9, r0
   18dcc:	eor	r1, lr, r1
   18dd0:	lsl	r2, r0, #1
   18dd4:	orr	ip, r2, r1, lsr #31
   18dd8:	lsl	r1, r1, #1
   18ddc:	ldr	r2, [sp, #260]	; 0x104
   18de0:	orr	r0, r1, r0, lsr #31
   18de4:	ldr	r1, [sp, #196]	; 0xc4
   18de8:	adds	r1, r0, r1
   18dec:	adc	r2, ip, r2
   18df0:	adds	r1, r1, r7
   18df4:	adc	r3, r2, r6
   18df8:	ldr	r2, [sp, #176]	; 0xb0
   18dfc:	eor	r6, r3, r2
   18e00:	ldr	r2, [sp, #180]	; 0xb4
   18e04:	eor	r5, r1, r2
   18e08:	ldr	r2, [sp, #220]	; 0xdc
   18e0c:	adds	r4, r6, r2
   18e10:	ldr	r2, [sp, #208]	; 0xd0
   18e14:	eor	r0, r4, r0
   18e18:	adc	lr, r5, r2
   18e1c:	lsl	r2, r0, #8
   18e20:	lsr	r0, r0, #24
   18e24:	eor	r7, lr, ip
   18e28:	orr	r2, r2, r7, lsr #24
   18e2c:	orr	r0, r0, r7, lsl #8
   18e30:	ldr	r7, [sp, #244]	; 0xf4
   18e34:	adds	r1, r1, r7
   18e38:	ldr	r7, [sp, #240]	; 0xf0
   18e3c:	adc	r3, r3, r7
   18e40:	adds	r7, r1, r0
   18e44:	adc	r1, r3, r2
   18e48:	eor	r3, r7, r6
   18e4c:	str	r7, [sp, #264]	; 0x108
   18e50:	str	r1, [sp, #260]	; 0x104
   18e54:	lsl	r6, r3, #16
   18e58:	eor	r1, r1, r5
   18e5c:	lsr	r3, r3, #16
   18e60:	orr	r9, r3, r1, lsl #16
   18e64:	orr	r7, r6, r1, lsr #16
   18e68:	adds	r6, r9, r4
   18e6c:	str	r7, [sp, #220]	; 0xdc
   18e70:	str	r9, [sp, #240]	; 0xf0
   18e74:	adc	r1, r7, lr
   18e78:	eor	r0, r6, r0
   18e7c:	mov	lr, r7
   18e80:	ldr	r7, [sp, #252]	; 0xfc
   18e84:	str	r6, [sp, #208]	; 0xd0
   18e88:	str	r1, [sp, #196]	; 0xc4
   18e8c:	eor	r1, r1, r2
   18e90:	lsl	r2, r1, #1
   18e94:	orr	r2, r2, r0, lsr #31
   18e98:	lsl	r0, r0, #1
   18e9c:	orr	ip, r0, r1, lsr #31
   18ea0:	ldr	r0, [sp, #236]	; 0xec
   18ea4:	ldr	r1, [sp, #232]	; 0xe8
   18ea8:	str	r2, [sp, #268]	; 0x10c
   18eac:	ldr	r2, [sp, #216]	; 0xd8
   18eb0:	str	ip, [sp, #244]	; 0xf4
   18eb4:	adds	r0, sl, r0
   18eb8:	adc	r1, r7, r1
   18ebc:	adds	r2, r0, r2
   18ec0:	ldr	r0, [sp, #224]	; 0xe0
   18ec4:	adc	r1, r1, r0
   18ec8:	ldr	r0, [sp, #256]	; 0x100
   18ecc:	eor	r8, r1, r0
   18ed0:	ldr	r0, [sp, #228]	; 0xe4
   18ed4:	eor	r3, r2, r0
   18ed8:	ldr	r0, [sp, #184]	; 0xb8
   18edc:	adds	r5, r8, r0
   18ee0:	ldr	r0, [sp, #188]	; 0xbc
   18ee4:	adc	r0, r3, r0
   18ee8:	str	r0, [sp, #236]	; 0xec
   18eec:	eor	r4, r0, r7
   18ef0:	eor	r0, r5, sl
   18ef4:	lsl	sl, r0, #8
   18ef8:	lsr	r0, r0, #24
   18efc:	orr	r0, r0, r4, lsl #8
   18f00:	orr	sl, sl, r4, lsr #24
   18f04:	ldr	r4, [fp, #-132]	; 0xffffff7c
   18f08:	adds	r7, r0, r2
   18f0c:	adc	r2, sl, r1
   18f10:	ldr	r1, [sp, #264]	; 0x108
   18f14:	str	r1, [sp, #288]	; 0x120
   18f18:	ldr	r1, [sp, #260]	; 0x104
   18f1c:	str	r1, [sp, #292]	; 0x124
   18f20:	str	r9, [sp, #376]	; 0x178
   18f24:	ldr	r9, [sp, #196]	; 0xc4
   18f28:	ldr	r1, [sp, #268]	; 0x10c
   18f2c:	str	lr, [sp, #380]	; 0x17c
   18f30:	str	r6, [sp, #336]	; 0x150
   18f34:	str	r9, [sp, #340]	; 0x154
   18f38:	str	r1, [sp, #332]	; 0x14c
   18f3c:	ldr	r1, [fp, #-136]	; 0xffffff78
   18f40:	str	ip, [sp, #328]	; 0x148
   18f44:	adds	r7, r7, r1
   18f48:	adc	ip, r2, r4
   18f4c:	eor	r4, r7, r8
   18f50:	str	r7, [sp, #296]	; 0x128
   18f54:	eor	r2, ip, r3
   18f58:	lsl	r3, r4, #16
   18f5c:	lsr	r4, r4, #16
   18f60:	str	ip, [sp, #300]	; 0x12c
   18f64:	orr	r3, r3, r2, lsr #16
   18f68:	orr	r2, r4, r2, lsl #16
   18f6c:	mov	r6, r2
   18f70:	adds	r1, r2, r5
   18f74:	str	r2, [sp, #256]	; 0x100
   18f78:	ldr	r2, [sp, #236]	; 0xec
   18f7c:	str	r3, [sp, #388]	; 0x184
   18f80:	str	r6, [sp, #384]	; 0x180
   18f84:	ldr	r6, [sp, #100]	; 0x64
   18f88:	str	r1, [sp, #344]	; 0x158
   18f8c:	adc	r5, r3, r2
   18f90:	eor	r2, r1, r0
   18f94:	eor	lr, r5, sl
   18f98:	str	r5, [sp, #348]	; 0x15c
   18f9c:	lsl	r4, lr, #1
   18fa0:	orr	sl, r4, r2, lsr #31
   18fa4:	lsl	r2, r2, #1
   18fa8:	orr	r8, r2, lr, lsr #31
   18fac:	str	sl, [sp, #308]	; 0x134
   18fb0:	str	r8, [sp, #304]	; 0x130
   18fb4:	ldr	r0, [r6, #16]
   18fb8:	ldm	r6, {r2, r4}
   18fbc:	ldr	lr, [sp, #276]	; 0x114
   18fc0:	str	r0, [sp, #252]	; 0xfc
   18fc4:	ldr	r0, [r6, #20]
   18fc8:	eor	r4, lr, r4
   18fcc:	eor	r4, r4, r9
   18fd0:	str	r0, [sp, #248]	; 0xf8
   18fd4:	ldr	r0, [sp, #272]	; 0x110
   18fd8:	eor	r0, r0, r2
   18fdc:	ldr	r2, [sp, #208]	; 0xd0
   18fe0:	eor	r0, r0, r2
   18fe4:	stm	r6, {r0, r4}
   18fe8:	ldr	lr, [sp, #104]	; 0x68
   18fec:	ldr	r4, [sp, #192]	; 0xc0
   18ff0:	ldm	lr, {r0, r2}
   18ff4:	eor	r2, r4, r2
   18ff8:	eor	r5, r2, r5
   18ffc:	ldr	r2, [sp, #200]	; 0xc8
   19000:	eor	r0, r2, r0
   19004:	eor	r4, r0, r1
   19008:	strd	r4, [lr]
   1900c:	ldr	r0, [r6, #28]
   19010:	ldr	r1, [sp, #160]	; 0xa0
   19014:	ldr	r2, [sp, #356]	; 0x164
   19018:	eor	r0, ip, r0
   1901c:	eor	r0, r0, r1
   19020:	ldr	r1, [sp, #352]	; 0x160
   19024:	str	r0, [r6, #28]
   19028:	ldr	r0, [r6, #24]
   1902c:	eor	r0, r7, r0
   19030:	ldr	r7, [sp, #164]	; 0xa4
   19034:	eor	r0, r0, r7
   19038:	ldr	r7, [sp, #168]	; 0xa8
   1903c:	str	r0, [r6, #24]
   19040:	ldr	r0, [r6, #36]	; 0x24
   19044:	eor	r0, sl, r0
   19048:	eor	r0, r0, r7
   1904c:	ldr	r7, [sp, #172]	; 0xac
   19050:	str	r0, [r6, #36]	; 0x24
   19054:	ldr	r0, [r6, #32]
   19058:	eor	r0, r8, r0
   1905c:	eor	r0, r0, r7
   19060:	ldr	r7, [sp, #248]	; 0xf8
   19064:	str	r0, [r6, #32]
   19068:	ldr	r0, [sp, #260]	; 0x104
   1906c:	eor	r0, r0, r7
   19070:	eor	r0, r0, r2
   19074:	ldr	r2, [sp, #252]	; 0xfc
   19078:	str	r0, [r6, #20]
   1907c:	ldr	r0, [sp, #264]	; 0x108
   19080:	eor	r0, r0, r2
   19084:	eor	r0, r0, r1
   19088:	ldr	r1, [sp, #204]	; 0xcc
   1908c:	str	r0, [r6, #16]
   19090:	ldr	r0, [r6, #52]	; 0x34
   19094:	ldr	r2, [sp, #316]	; 0x13c
   19098:	eor	r0, r1, r0
   1909c:	ldr	r1, [sp, #312]	; 0x138
   190a0:	eor	r0, r0, r3
   190a4:	ldr	r3, [sp, #212]	; 0xd4
   190a8:	str	r0, [r6, #52]	; 0x34
   190ac:	ldr	r0, [r6, #48]	; 0x30
   190b0:	eor	r0, r3, r0
   190b4:	ldr	r3, [sp, #256]	; 0x100
   190b8:	eor	r0, r0, r3
   190bc:	str	r0, [r6, #48]	; 0x30
   190c0:	ldr	r0, [r6, #44]	; 0x2c
   190c4:	eor	r0, r2, r0
   190c8:	ldr	r2, [sp, #220]	; 0xdc
   190cc:	eor	r0, r0, r2
   190d0:	ldr	r2, [sp, #268]	; 0x10c
   190d4:	str	r0, [r6, #44]	; 0x2c
   190d8:	ldr	r0, [r6, #40]	; 0x28
   190dc:	eor	r0, r1, r0
   190e0:	ldr	r1, [sp, #240]	; 0xf0
   190e4:	eor	r0, r0, r1
   190e8:	str	r0, [r6, #40]	; 0x28
   190ec:	ldr	r1, [r6, #60]	; 0x3c
   190f0:	ldr	r3, [sp, #396]	; 0x18c
   190f4:	ldr	r0, [r6, #56]	; 0x38
   190f8:	eor	r1, r2, r1
   190fc:	ldr	r2, [sp, #392]	; 0x188
   19100:	eor	r1, r1, r3
   19104:	str	r1, [r6, #60]	; 0x3c
   19108:	ldr	r1, [sp, #244]	; 0xf4
   1910c:	eor	r0, r1, r0
   19110:	eor	r0, r0, r2
   19114:	str	r0, [r6, #56]	; 0x38
   19118:	sub	sp, fp, #28
   1911c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19124:	add	fp, sp, #28
   19128:	sub	sp, sp, #68	; 0x44
   1912c:	vmov.i32	q8, #0	; 0x00000000
   19130:	mov	r9, sp
   19134:	mov	sl, r1
   19138:	mov	r6, r0
   1913c:	mov	r0, #48	; 0x30
   19140:	mvn	r7, #0
   19144:	mov	r1, r9
   19148:	add	r4, r9, #32
   1914c:	add	r5, r9, #16
   19150:	cmp	sl, #0
   19154:	vst1.64	{d16-d17}, [r1], r0
   19158:	vst1.64	{d16-d17}, [r4]
   1915c:	vst1.64	{d16-d17}, [r5]
   19160:	vst1.64	{d16-d17}, [r1]
   19164:	beq	19260 <__assert_fail@plt+0x7f58>
   19168:	ldr	r0, [r6, #228]	; 0xe4
   1916c:	cmp	r0, r2
   19170:	bhi	19260 <__assert_fail@plt+0x7f58>
   19174:	add	r0, r6, #80	; 0x50
   19178:	ldrd	r2, [r0]
   1917c:	orrs	r1, r2, r3
   19180:	bne	19260 <__assert_fail@plt+0x7f58>
   19184:	add	r2, r6, #64	; 0x40
   19188:	ldr	r1, [r6, #224]	; 0xe0
   1918c:	add	r3, r6, #72	; 0x48
   19190:	ldr	r8, [r2]
   19194:	ldr	r7, [r2, #4]
   19198:	adds	r8, r8, r1
   1919c:	adcs	r7, r7, #0
   191a0:	str	r8, [r2]
   191a4:	add	r8, r6, #96	; 0x60
   191a8:	str	r7, [r2, #4]
   191ac:	ldm	r3, {r2, r7}
   191b0:	adcs	r2, r2, #0
   191b4:	adc	r7, r7, #0
   191b8:	stm	r3, {r2, r7}
   191bc:	mvn	r3, #0
   191c0:	mov	r7, #0
   191c4:	ldrb	r2, [r6, #232]	; 0xe8
   191c8:	cmp	r2, #0
   191cc:	addne	r2, r6, #88	; 0x58
   191d0:	strne	r3, [r2]
   191d4:	strne	r3, [r2, #4]
   191d8:	str	r3, [r0]
   191dc:	str	r3, [r0, #4]
   191e0:	add	r0, r8, r1
   191e4:	rsb	r2, r1, #128	; 0x80
   191e8:	mov	r1, #0
   191ec:	bl	11230 <memset@plt>
   191f0:	mov	r0, r6
   191f4:	mov	r1, r8
   191f8:	bl	13830 <__assert_fail@plt+0x2528>
   191fc:	add	r1, r6, #32
   19200:	mov	r2, #228	; 0xe4
   19204:	add	r0, r6, #48	; 0x30
   19208:	vld1.64	{d16-d17}, [r1]
   1920c:	add	r1, r6, #16
   19210:	vld1.64	{d20-d21}, [r6], r2
   19214:	vld1.64	{d22-d23}, [r0]
   19218:	mov	r0, #48	; 0x30
   1921c:	vld1.64	{d18-d19}, [r1]
   19220:	mov	r1, r9
   19224:	vst1.64	{d20-d21}, [r1], r0
   19228:	vst1.64	{d16-d17}, [r4]
   1922c:	mov	r0, sl
   19230:	vst1.64	{d22-d23}, [r1]
   19234:	vst1.64	{d18-d19}, [r5]
   19238:	mov	r1, r9
   1923c:	ldr	r2, [r6]
   19240:	bl	110d4 <memcpy@plt>
   19244:	movw	r0, #59312	; 0xe7b0
   19248:	mov	r1, #0
   1924c:	mov	r2, #64	; 0x40
   19250:	movt	r0, #1
   19254:	ldr	r3, [r0]
   19258:	mov	r0, r9
   1925c:	blx	r3
   19260:	mov	r0, r7
   19264:	sub	sp, fp, #28
   19268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1926c:	nop	{0}
   19270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19274:	add	fp, sp, #28
   19278:	sub	sp, sp, #388	; 0x184
   1927c:	mov	sl, r0
   19280:	cmp	r3, #0
   19284:	mov	r5, r1
   19288:	mov	r1, r3
   1928c:	mvn	r0, #0
   19290:	movwne	r1, #1
   19294:	cmp	sl, #0
   19298:	beq	192d0 <__assert_fail@plt+0x7fc8>
   1929c:	mov	r6, r2
   192a0:	clz	r2, r2
   192a4:	lsr	r2, r2, #5
   192a8:	ands	r1, r2, r1
   192ac:	bne	192d0 <__assert_fail@plt+0x7fc8>
   192b0:	ldr	r4, [fp, #12]
   192b4:	cmp	r4, #0
   192b8:	mov	r1, r4
   192bc:	movwne	r1, #1
   192c0:	cmp	r4, #64	; 0x40
   192c4:	subls	r2, r5, #1
   192c8:	cmpls	r2, #63	; 0x3f
   192cc:	bls	192d8 <__assert_fail@plt+0x7fd0>
   192d0:	sub	sp, fp, #28
   192d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192d8:	ldr	lr, [fp, #8]
   192dc:	clz	r2, lr
   192e0:	lsr	r2, r2, #5
   192e4:	ands	r1, r2, r1
   192e8:	bne	192d0 <__assert_fail@plt+0x7fc8>
   192ec:	add	r8, sp, #16
   192f0:	mov	r7, r3
   192f4:	cmp	r4, #0
   192f8:	add	r9, r8, #8
   192fc:	add	r1, r8, #24
   19300:	add	ip, r8, #40	; 0x28
   19304:	add	r3, r8, #56	; 0x38
   19308:	add	r2, r8, #64	; 0x40
   1930c:	beq	19410 <__assert_fail@plt+0x8108>
   19310:	cmp	lr, #0
   19314:	beq	192d0 <__assert_fail@plt+0x7fc8>
   19318:	str	r1, [sp, #12]
   1931c:	sub	r1, r4, #1
   19320:	cmp	r1, #63	; 0x3f
   19324:	bhi	192d0 <__assert_fail@plt+0x7fc8>
   19328:	str	r2, [sp, #4]
   1932c:	mov	r0, r2
   19330:	mov	r1, #0
   19334:	mov	r2, #176	; 0xb0
   19338:	str	r3, [sp, #8]
   1933c:	str	ip, [sp]
   19340:	bl	11230 <memset@plt>
   19344:	movw	r0, #58983	; 0xe667
   19348:	add	r1, pc, #656	; 0x290
   1934c:	movw	r2, #51464	; 0xc908
   19350:	movw	r3, #52505	; 0xcd19
   19354:	movt	r0, #27145	; 0x6a09
   19358:	vld1.64	{d16-d17}, [r1 :128]
   1935c:	uxtb	r1, r5
   19360:	movt	r2, #62396	; 0xf3bc
   19364:	movt	r3, #23520	; 0x5be0
   19368:	str	r0, [sp, #20]
   1936c:	uxtb	r0, r4
   19370:	orr	r0, r1, r0, lsl #8
   19374:	orr	r0, r0, #65536	; 0x10000
   19378:	orr	r0, r0, #16777216	; 0x1000000
   1937c:	eor	r0, r0, r2
   19380:	str	r0, [sp, #16]
   19384:	add	r0, pc, #612	; 0x264
   19388:	vst1.64	{d16-d17}, [r9]
   1938c:	sub	r9, fp, #160	; 0xa0
   19390:	vld1.64	{d18-d19}, [r0 :128]
   19394:	add	r0, pc, #612	; 0x264
   19398:	ldr	r2, [sp, #8]
   1939c:	vld1.64	{d16-d17}, [r0 :128]
   193a0:	ldr	r0, [sp, #12]
   193a4:	vst1.64	{d18-d19}, [r0]
   193a8:	ldr	r0, [sp]
   193ac:	vst1.64	{d16-d17}, [r0]
   193b0:	movw	r0, #8569	; 0x2179
   193b4:	movt	r0, #4990	; 0x137e
   193b8:	stm	r2, {r0, r3}
   193bc:	str	r1, [sp, #244]	; 0xf4
   193c0:	add	r0, r9, r4
   193c4:	rsb	r2, r4, #128	; 0x80
   193c8:	mov	r1, #0
   193cc:	bl	11230 <memset@plt>
   193d0:	ldr	r1, [fp, #8]
   193d4:	mov	r0, r9
   193d8:	mov	r2, r4
   193dc:	bl	110d4 <memcpy@plt>
   193e0:	mov	r0, r8
   193e4:	mov	r1, r9
   193e8:	mov	r2, #128	; 0x80
   193ec:	bl	13700 <__assert_fail@plt+0x23f8>
   193f0:	movw	r0, #59312	; 0xe7b0
   193f4:	mov	r1, #0
   193f8:	mov	r2, #128	; 0x80
   193fc:	movt	r0, #1
   19400:	ldr	r3, [r0]
   19404:	mov	r0, r9
   19408:	blx	r3
   1940c:	b	1949c <__assert_fail@plt+0x8194>
   19410:	str	r1, [sp, #12]
   19414:	str	r2, [sp, #4]
   19418:	mov	r0, r2
   1941c:	mov	r1, #0
   19420:	mov	r2, #176	; 0xb0
   19424:	str	r3, [sp, #8]
   19428:	mov	r4, ip
   1942c:	bl	11230 <memset@plt>
   19430:	movw	r0, #58983	; 0xe667
   19434:	add	r1, pc, #420	; 0x1a4
   19438:	movw	r2, #51464	; 0xc908
   1943c:	movw	r3, #52505	; 0xcd19
   19440:	movt	r0, #27145	; 0x6a09
   19444:	vld1.64	{d16-d17}, [r1 :128]
   19448:	movt	r2, #62396	; 0xf3bc
   1944c:	movt	r3, #23520	; 0x5be0
   19450:	str	r0, [sp, #20]
   19454:	uxtb	r0, r5
   19458:	orr	r1, r0, #65536	; 0x10000
   1945c:	orr	r1, r1, #16777216	; 0x1000000
   19460:	eor	r1, r1, r2
   19464:	movw	r2, #8569	; 0x2179
   19468:	str	r1, [sp, #16]
   1946c:	add	r1, pc, #380	; 0x17c
   19470:	vst1.64	{d16-d17}, [r9]
   19474:	movt	r2, #4990	; 0x137e
   19478:	vld1.64	{d18-d19}, [r1 :128]
   1947c:	add	r1, pc, #380	; 0x17c
   19480:	vld1.64	{d16-d17}, [r1 :128]
   19484:	ldr	r1, [sp, #12]
   19488:	vst1.64	{d18-d19}, [r1]
   1948c:	ldr	r1, [sp, #8]
   19490:	vst1.64	{d16-d17}, [r4]
   19494:	strd	r2, [r1]
   19498:	str	r0, [sp, #244]	; 0xf4
   1949c:	add	r4, sp, #16
   194a0:	mov	r1, r6
   194a4:	mov	r2, r7
   194a8:	mov	r0, r4
   194ac:	bl	13700 <__assert_fail@plt+0x23f8>
   194b0:	vmov.i32	q8, #0	; 0x00000000
   194b4:	sub	r9, fp, #160	; 0xa0
   194b8:	mov	r0, #48	; 0x30
   194bc:	mov	r1, r9
   194c0:	add	r7, r9, #32
   194c4:	add	r6, r9, #16
   194c8:	vst1.64	{d16-d17}, [r1], r0
   194cc:	ldr	r0, [sp, #244]	; 0xf4
   194d0:	vst1.64	{d16-d17}, [r7]
   194d4:	vst1.64	{d16-d17}, [r6]
   194d8:	vst1.64	{d16-d17}, [r1]
   194dc:	cmp	r0, r5
   194e0:	bhi	195c8 <__assert_fail@plt+0x82c0>
   194e4:	add	r0, r8, #80	; 0x50
   194e8:	ldrd	r2, [r0]
   194ec:	orrs	r1, r2, r3
   194f0:	bne	195c8 <__assert_fail@plt+0x82c0>
   194f4:	ldr	r3, [sp, #4]
   194f8:	ldr	r1, [sp, #240]	; 0xf0
   194fc:	add	r2, r8, #72	; 0x48
   19500:	ldm	r3, {r5, ip}
   19504:	adds	lr, r5, r1
   19508:	adcs	r5, ip, #0
   1950c:	str	lr, [r3]
   19510:	str	r5, [r3, #4]
   19514:	ldm	r2, {r3, r5}
   19518:	adcs	r3, r3, #0
   1951c:	adc	r5, r5, #0
   19520:	stm	r2, {r3, r5}
   19524:	mvn	r3, #0
   19528:	add	r5, r4, #96	; 0x60
   1952c:	ldrb	r2, [sp, #248]	; 0xf8
   19530:	cmp	r2, #0
   19534:	addne	r2, r8, #88	; 0x58
   19538:	strne	r3, [r2]
   1953c:	strne	r3, [r2, #4]
   19540:	str	r3, [r0]
   19544:	str	r3, [r0, #4]
   19548:	add	r0, r5, r1
   1954c:	rsb	r2, r1, #128	; 0x80
   19550:	mov	r1, #0
   19554:	bl	11230 <memset@plt>
   19558:	mov	r0, r4
   1955c:	mov	r1, r5
   19560:	bl	13830 <__assert_fail@plt+0x2528>
   19564:	add	r1, r4, #32
   19568:	mov	r2, #228	; 0xe4
   1956c:	add	r0, r4, #48	; 0x30
   19570:	vld1.64	{d16-d17}, [r1]
   19574:	add	r1, r4, #16
   19578:	vld1.64	{d20-d21}, [r4], r2
   1957c:	vld1.64	{d22-d23}, [r0]
   19580:	mov	r0, #48	; 0x30
   19584:	vld1.64	{d18-d19}, [r1]
   19588:	ldr	r2, [r4]
   1958c:	mov	r1, r9
   19590:	vst1.64	{d20-d21}, [r1], r0
   19594:	mov	r0, sl
   19598:	vst1.64	{d16-d17}, [r7]
   1959c:	vst1.64	{d22-d23}, [r1]
   195a0:	mov	r1, r9
   195a4:	vst1.64	{d18-d19}, [r6]
   195a8:	bl	110d4 <memcpy@plt>
   195ac:	movw	r0, #59312	; 0xe7b0
   195b0:	mov	r1, #0
   195b4:	mov	r2, #64	; 0x40
   195b8:	movt	r0, #1
   195bc:	ldr	r3, [r0]
   195c0:	mov	r0, r9
   195c4:	blx	r3
   195c8:	mov	r0, #0
   195cc:	sub	sp, fp, #28
   195d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195d4:	nop	{0}
   195d8:	nop	{0}
   195dc:	nop	{0}
   195e0:	strbhi	sl, [sl], #1851	; 0x73b
   195e4:	bllt	1a05000 <optarg@@GLIBC_2.4+0x19d5e88>
   195e8:	vcmla.f32	d15, d4, d27[0], #90
   195ec:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   195f0:	svcpl	0x001d36f1
   195f4:	strbge	pc, [pc, #-1338]	; 190c2 <__assert_fail@plt+0x7dba>	; <UNPREDICTABLE>
   195f8:	sfmge	f0, 3, [r6, #836]!	; 0x344
   195fc:	tstpl	lr, pc, ror r2
   19600:	blcs	fb4684 <optarg@@GLIBC_2.4+0xf8550c>
   19604:	blls	17383c <optarg@@GLIBC_2.4+0x1446c4>
   19608:	blx	1088bbe <optarg@@GLIBC_2.4+0x1059a46>
   1960c:	svcne	0x0083d9ab
   19610:	b	19270 <__assert_fail@plt+0x7f68>
   19614:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19618:	add	fp, sp, #24
   1961c:	sub	sp, sp, #248	; 0xf8
   19620:	mov	r7, r0
   19624:	mov	r0, #32768	; 0x8000
   19628:	mov	r9, r2
   1962c:	mov	r8, r1
   19630:	bl	1d294 <__assert_fail@plt+0xbf8c>
   19634:	cmp	r0, #0
   19638:	beq	196a4 <__assert_fail@plt+0x839c>
   1963c:	mov	r4, sp
   19640:	mov	r5, r0
   19644:	mov	r1, r9
   19648:	mov	r0, r4
   1964c:	bl	134a0 <__assert_fail@plt+0x2198>
   19650:	b	19664 <__assert_fail@plt+0x835c>
   19654:	mov	r0, r4
   19658:	mov	r1, r5
   1965c:	mov	r2, #32768	; 0x8000
   19660:	bl	13700 <__assert_fail@plt+0x23f8>
   19664:	mov	r6, #0
   19668:	add	r0, r5, r6
   1966c:	rsb	r2, r6, #32768	; 0x8000
   19670:	mov	r1, #1
   19674:	mov	r3, r7
   19678:	bl	1114c <fread@plt>
   1967c:	add	r6, r0, r6
   19680:	cmp	r6, #32768	; 0x8000
   19684:	beq	19654 <__assert_fail@plt+0x834c>
   19688:	cmp	r0, #0
   1968c:	beq	196ac <__assert_fail@plt+0x83a4>
   19690:	mov	r0, r7
   19694:	bl	111dc <feof@plt>
   19698:	cmp	r0, #0
   1969c:	beq	19668 <__assert_fail@plt+0x8360>
   196a0:	b	196c0 <__assert_fail@plt+0x83b8>
   196a4:	mvn	r4, #0
   196a8:	b	196f4 <__assert_fail@plt+0x83ec>
   196ac:	mov	r0, r7
   196b0:	bl	110bc <ferror@plt>
   196b4:	mvn	r4, #0
   196b8:	cmp	r0, #0
   196bc:	bne	196ec <__assert_fail@plt+0x83e4>
   196c0:	cmp	r6, #0
   196c4:	beq	196d8 <__assert_fail@plt+0x83d0>
   196c8:	mov	r0, sp
   196cc:	mov	r1, r5
   196d0:	mov	r2, r6
   196d4:	bl	13700 <__assert_fail@plt+0x23f8>
   196d8:	mov	r0, sp
   196dc:	mov	r1, r8
   196e0:	mov	r2, r9
   196e4:	bl	19120 <__assert_fail@plt+0x7e18>
   196e8:	mov	r4, #0
   196ec:	mov	r0, r5
   196f0:	bl	199f0 <__assert_fail@plt+0x86e8>
   196f4:	mov	r0, r4
   196f8:	sub	sp, fp, #24
   196fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19700:	movw	r1, #61852	; 0xf19c
   19704:	movt	r1, #2
   19708:	str	r0, [r1]
   1970c:	bx	lr
   19710:	movw	r1, #61856	; 0xf1a0
   19714:	movt	r1, #2
   19718:	strb	r0, [r1]
   1971c:	bx	lr
   19720:	push	{r4, r5, r6, sl, fp, lr}
   19724:	add	fp, sp, #16
   19728:	sub	sp, sp, #8
   1972c:	movw	r0, #61812	; 0xf174
   19730:	movt	r0, #2
   19734:	ldr	r0, [r0]
   19738:	bl	1d318 <__assert_fail@plt+0xc010>
   1973c:	cmp	r0, #0
   19740:	beq	19768 <__assert_fail@plt+0x8460>
   19744:	movw	r0, #61856	; 0xf1a0
   19748:	movt	r0, #2
   1974c:	ldrb	r0, [r0]
   19750:	cmp	r0, #0
   19754:	beq	19788 <__assert_fail@plt+0x8480>
   19758:	bl	1120c <__errno_location@plt>
   1975c:	ldr	r0, [r0]
   19760:	cmp	r0, #32
   19764:	bne	19788 <__assert_fail@plt+0x8480>
   19768:	movw	r0, #61800	; 0xf168
   1976c:	movt	r0, #2
   19770:	ldr	r0, [r0]
   19774:	bl	1d318 <__assert_fail@plt+0xc010>
   19778:	cmp	r0, #0
   1977c:	subeq	sp, fp, #16
   19780:	popeq	{r4, r5, r6, sl, fp, pc}
   19784:	b	197f8 <__assert_fail@plt+0x84f0>
   19788:	movw	r1, #59331	; 0xe7c3
   1978c:	mov	r0, #0
   19790:	mov	r2, #5
   19794:	movt	r1, #1
   19798:	bl	110f8 <dcgettext@plt>
   1979c:	mov	r4, r0
   197a0:	movw	r0, #61852	; 0xf19c
   197a4:	movt	r0, #2
   197a8:	ldr	r6, [r0]
   197ac:	bl	1120c <__errno_location@plt>
   197b0:	ldr	r5, [r0]
   197b4:	cmp	r6, #0
   197b8:	bne	197d4 <__assert_fail@plt+0x84cc>
   197bc:	movw	r2, #57254	; 0xdfa6
   197c0:	mov	r0, #0
   197c4:	mov	r1, r5
   197c8:	mov	r3, r4
   197cc:	movt	r2, #1
   197d0:	b	197f4 <__assert_fail@plt+0x84ec>
   197d4:	mov	r0, r6
   197d8:	bl	1b38c <__assert_fail@plt+0xa084>
   197dc:	movw	r2, #59343	; 0xe7cf
   197e0:	mov	r3, r0
   197e4:	str	r4, [sp]
   197e8:	mov	r0, #0
   197ec:	mov	r1, r5
   197f0:	movt	r2, #1
   197f4:	bl	11170 <error@plt>
   197f8:	movw	r0, #61712	; 0xf110
   197fc:	movt	r0, #2
   19800:	ldr	r0, [r0]
   19804:	bl	110c8 <_exit@plt>
   19808:	b	11098 <posix_fadvise64@plt>
   1980c:	cmp	r0, #0
   19810:	bxeq	lr
   19814:	push	{r4, sl, fp, lr}
   19818:	add	fp, sp, #8
   1981c:	sub	sp, sp, #16
   19820:	mov	r4, r1
   19824:	bl	11248 <fileno@plt>
   19828:	mov	r1, #0
   1982c:	mov	r2, #0
   19830:	mov	r3, #0
   19834:	str	r1, [sp]
   19838:	stmib	sp, {r1, r4}
   1983c:	bl	11098 <posix_fadvise64@plt>
   19840:	sub	sp, fp, #8
   19844:	pop	{r4, sl, fp, pc}
   19848:	push	{r4, r5, r6, sl, fp, lr}
   1984c:	add	fp, sp, #16
   19850:	sub	sp, sp, #8
   19854:	mov	r4, r0
   19858:	bl	11248 <fileno@plt>
   1985c:	cmn	r0, #1
   19860:	ble	198d4 <__assert_fail@plt+0x85cc>
   19864:	mov	r0, r4
   19868:	bl	11194 <__freading@plt>
   1986c:	cmp	r0, #0
   19870:	beq	1989c <__assert_fail@plt+0x8594>
   19874:	mov	r0, r4
   19878:	bl	11248 <fileno@plt>
   1987c:	mov	r1, #1
   19880:	mov	r2, #0
   19884:	mov	r3, #0
   19888:	str	r1, [sp]
   1988c:	bl	11134 <lseek64@plt>
   19890:	and	r0, r0, r1
   19894:	cmn	r0, #1
   19898:	beq	198d4 <__assert_fail@plt+0x85cc>
   1989c:	mov	r0, r4
   198a0:	bl	198e4 <__assert_fail@plt+0x85dc>
   198a4:	cmp	r0, #0
   198a8:	beq	198d4 <__assert_fail@plt+0x85cc>
   198ac:	bl	1120c <__errno_location@plt>
   198b0:	ldr	r6, [r0]
   198b4:	mov	r5, r0
   198b8:	mov	r0, r4
   198bc:	bl	11260 <fclose@plt>
   198c0:	cmp	r6, #0
   198c4:	strne	r6, [r5]
   198c8:	mvnne	r0, #0
   198cc:	sub	sp, fp, #16
   198d0:	pop	{r4, r5, r6, sl, fp, pc}
   198d4:	mov	r0, r4
   198d8:	sub	sp, fp, #16
   198dc:	pop	{r4, r5, r6, sl, fp, lr}
   198e0:	b	11260 <fclose@plt>
   198e4:	push	{r4, sl, fp, lr}
   198e8:	add	fp, sp, #8
   198ec:	sub	sp, sp, #8
   198f0:	mov	r4, r0
   198f4:	cmp	r0, #0
   198f8:	beq	19930 <__assert_fail@plt+0x8628>
   198fc:	mov	r0, r4
   19900:	bl	11194 <__freading@plt>
   19904:	cmp	r0, #0
   19908:	beq	19930 <__assert_fail@plt+0x8628>
   1990c:	ldrb	r0, [r4, #1]
   19910:	tst	r0, #1
   19914:	beq	19930 <__assert_fail@plt+0x8628>
   19918:	mov	r0, #1
   1991c:	mov	r2, #0
   19920:	mov	r3, #0
   19924:	str	r0, [sp]
   19928:	mov	r0, r4
   1992c:	bl	19a18 <__assert_fail@plt+0x8710>
   19930:	mov	r0, r4
   19934:	sub	sp, fp, #8
   19938:	pop	{r4, sl, fp, lr}
   1993c:	b	110a4 <fflush@plt>
   19940:	push	{r4, r5, r6, r7, fp, lr}
   19944:	add	fp, sp, #16
   19948:	mov	r5, r1
   1994c:	bl	112c0 <fopen64@plt>
   19950:	mov	r4, #0
   19954:	cmp	r0, #0
   19958:	beq	199c0 <__assert_fail@plt+0x86b8>
   1995c:	mov	r6, r0
   19960:	bl	11248 <fileno@plt>
   19964:	cmp	r0, #2
   19968:	bhi	199c8 <__assert_fail@plt+0x86c0>
   1996c:	bl	1b860 <__assert_fail@plt+0xa558>
   19970:	cmn	r0, #1
   19974:	ble	199d0 <__assert_fail@plt+0x86c8>
   19978:	mov	r7, r0
   1997c:	mov	r0, r6
   19980:	bl	19848 <__assert_fail@plt+0x8540>
   19984:	cmp	r0, #0
   19988:	bne	199a4 <__assert_fail@plt+0x869c>
   1998c:	mov	r0, r7
   19990:	mov	r1, r5
   19994:	bl	11050 <fdopen@plt>
   19998:	mov	r4, r0
   1999c:	cmp	r0, #0
   199a0:	bne	199c0 <__assert_fail@plt+0x86b8>
   199a4:	bl	1120c <__errno_location@plt>
   199a8:	ldr	r5, [r0]
   199ac:	mov	r4, r0
   199b0:	mov	r0, r7
   199b4:	bl	112f0 <close@plt>
   199b8:	str	r5, [r4]
   199bc:	mov	r4, #0
   199c0:	mov	r0, r4
   199c4:	pop	{r4, r5, r6, r7, fp, pc}
   199c8:	mov	r0, r6
   199cc:	pop	{r4, r5, r6, r7, fp, pc}
   199d0:	bl	1120c <__errno_location@plt>
   199d4:	ldr	r7, [r0]
   199d8:	mov	r5, r0
   199dc:	mov	r0, r6
   199e0:	bl	19848 <__assert_fail@plt+0x8540>
   199e4:	mov	r0, r4
   199e8:	str	r7, [r5]
   199ec:	pop	{r4, r5, r6, r7, fp, pc}
   199f0:	push	{r4, r5, r6, sl, fp, lr}
   199f4:	add	fp, sp, #16
   199f8:	mov	r4, r0
   199fc:	bl	1120c <__errno_location@plt>
   19a00:	ldr	r6, [r0]
   19a04:	mov	r5, r0
   19a08:	mov	r0, r4
   19a0c:	bl	110b0 <free@plt>
   19a10:	str	r6, [r5]
   19a14:	pop	{r4, r5, r6, sl, fp, pc}
   19a18:	push	{r4, r5, r6, r7, fp, lr}
   19a1c:	add	fp, sp, #16
   19a20:	sub	sp, sp, #8
   19a24:	mov	r4, r0
   19a28:	ldr	r0, [r0, #4]
   19a2c:	mov	r5, r3
   19a30:	mov	r6, r2
   19a34:	ldr	r1, [r4, #8]
   19a38:	cmp	r1, r0
   19a3c:	bne	19a58 <__assert_fail@plt+0x8750>
   19a40:	ldrd	r0, [r4, #16]
   19a44:	cmp	r1, r0
   19a48:	bne	19a58 <__assert_fail@plt+0x8750>
   19a4c:	ldr	r0, [r4, #36]	; 0x24
   19a50:	cmp	r0, #0
   19a54:	beq	19a70 <__assert_fail@plt+0x8768>
   19a58:	mov	r0, r4
   19a5c:	mov	r2, r6
   19a60:	mov	r3, r5
   19a64:	sub	sp, fp, #16
   19a68:	pop	{r4, r5, r6, r7, fp, lr}
   19a6c:	b	1126c <fseeko64@plt>
   19a70:	ldr	r7, [fp, #8]
   19a74:	mov	r0, r4
   19a78:	bl	11248 <fileno@plt>
   19a7c:	mov	r2, r6
   19a80:	mov	r3, r5
   19a84:	str	r7, [sp]
   19a88:	bl	11134 <lseek64@plt>
   19a8c:	and	r2, r0, r1
   19a90:	cmn	r2, #1
   19a94:	beq	19ab4 <__assert_fail@plt+0x87ac>
   19a98:	strd	r0, [r4, #80]	; 0x50
   19a9c:	ldr	r0, [r4]
   19aa0:	bic	r0, r0, #16
   19aa4:	str	r0, [r4]
   19aa8:	mov	r0, #0
   19aac:	sub	sp, fp, #16
   19ab0:	pop	{r4, r5, r6, r7, fp, pc}
   19ab4:	mvn	r0, #0
   19ab8:	sub	sp, fp, #16
   19abc:	pop	{r4, r5, r6, r7, fp, pc}
   19ac0:	push	{r4, r5, fp, lr}
   19ac4:	add	fp, sp, #8
   19ac8:	cmp	r0, #0
   19acc:	beq	19b60 <__assert_fail@plt+0x8858>
   19ad0:	mov	r1, #47	; 0x2f
   19ad4:	mov	r4, r0
   19ad8:	bl	1129c <strrchr@plt>
   19adc:	cmp	r0, #0
   19ae0:	mov	r5, r4
   19ae4:	addne	r5, r0, #1
   19ae8:	sub	r0, r5, r4
   19aec:	cmp	r0, #7
   19af0:	blt	19b44 <__assert_fail@plt+0x883c>
   19af4:	movw	r1, #59406	; 0xe80e
   19af8:	sub	r0, r5, #7
   19afc:	mov	r2, #7
   19b00:	movt	r1, #1
   19b04:	bl	112d8 <strncmp@plt>
   19b08:	cmp	r0, #0
   19b0c:	bne	19b44 <__assert_fail@plt+0x883c>
   19b10:	movw	r1, #59414	; 0xe816
   19b14:	mov	r0, r5
   19b18:	mov	r2, #3
   19b1c:	movt	r1, #1
   19b20:	bl	112d8 <strncmp@plt>
   19b24:	cmp	r0, #0
   19b28:	beq	19b34 <__assert_fail@plt+0x882c>
   19b2c:	mov	r4, r5
   19b30:	b	19b44 <__assert_fail@plt+0x883c>
   19b34:	movw	r0, #61784	; 0xf158
   19b38:	add	r4, r5, #3
   19b3c:	movt	r0, #2
   19b40:	str	r4, [r0]
   19b44:	movw	r0, #61788	; 0xf15c
   19b48:	movt	r0, #2
   19b4c:	str	r4, [r0]
   19b50:	movw	r0, #61860	; 0xf1a4
   19b54:	movt	r0, #2
   19b58:	str	r4, [r0]
   19b5c:	pop	{r4, r5, fp, pc}
   19b60:	movw	r0, #61800	; 0xf168
   19b64:	mov	r1, #55	; 0x37
   19b68:	mov	r2, #1
   19b6c:	movt	r0, #2
   19b70:	ldr	r3, [r0]
   19b74:	movw	r0, #59350	; 0xe7d6
   19b78:	movt	r0, #1
   19b7c:	bl	11128 <fwrite@plt>
   19b80:	bl	112e4 <abort@plt>
   19b84:	push	{r4, r5, r6, sl, fp, lr}
   19b88:	add	fp, sp, #16
   19b8c:	mov	r4, r0
   19b90:	movw	r0, #61864	; 0xf1a8
   19b94:	movt	r0, #2
   19b98:	cmp	r4, #0
   19b9c:	moveq	r4, r0
   19ba0:	bl	1120c <__errno_location@plt>
   19ba4:	ldr	r6, [r0]
   19ba8:	mov	r5, r0
   19bac:	mov	r0, r4
   19bb0:	mov	r1, #48	; 0x30
   19bb4:	bl	1c384 <__assert_fail@plt+0xb07c>
   19bb8:	str	r6, [r5]
   19bbc:	pop	{r4, r5, r6, sl, fp, pc}
   19bc0:	movw	r1, #61864	; 0xf1a8
   19bc4:	cmp	r0, #0
   19bc8:	movt	r1, #2
   19bcc:	movne	r1, r0
   19bd0:	ldr	r0, [r1]
   19bd4:	bx	lr
   19bd8:	movw	r2, #61864	; 0xf1a8
   19bdc:	cmp	r0, #0
   19be0:	movt	r2, #2
   19be4:	movne	r2, r0
   19be8:	str	r1, [r2]
   19bec:	bx	lr
   19bf0:	movw	r3, #61864	; 0xf1a8
   19bf4:	cmp	r0, #0
   19bf8:	and	r2, r2, #1
   19bfc:	movt	r3, #2
   19c00:	movne	r3, r0
   19c04:	ubfx	r0, r1, #5, #3
   19c08:	and	r1, r1, #31
   19c0c:	add	ip, r3, r0, lsl #2
   19c10:	mov	r0, #1
   19c14:	ldr	r3, [ip, #8]
   19c18:	and	r0, r0, r3, lsr r1
   19c1c:	eor	r2, r0, r2
   19c20:	eor	r1, r3, r2, lsl r1
   19c24:	str	r1, [ip, #8]
   19c28:	bx	lr
   19c2c:	movw	r2, #61864	; 0xf1a8
   19c30:	cmp	r0, #0
   19c34:	movt	r2, #2
   19c38:	movne	r2, r0
   19c3c:	ldr	r0, [r2, #4]
   19c40:	str	r1, [r2, #4]
   19c44:	bx	lr
   19c48:	push	{fp, lr}
   19c4c:	mov	fp, sp
   19c50:	movw	r3, #61864	; 0xf1a8
   19c54:	cmp	r0, #0
   19c58:	movt	r3, #2
   19c5c:	movne	r3, r0
   19c60:	cmp	r1, #0
   19c64:	mov	r0, #10
   19c68:	cmpne	r2, #0
   19c6c:	str	r0, [r3]
   19c70:	bne	19c78 <__assert_fail@plt+0x8970>
   19c74:	bl	112e4 <abort@plt>
   19c78:	str	r1, [r3, #40]	; 0x28
   19c7c:	str	r2, [r3, #44]	; 0x2c
   19c80:	pop	{fp, pc}
   19c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c88:	add	fp, sp, #28
   19c8c:	sub	sp, sp, #20
   19c90:	mov	r7, r0
   19c94:	ldr	r0, [fp, #8]
   19c98:	movw	r5, #61864	; 0xf1a8
   19c9c:	mov	r8, r3
   19ca0:	mov	r9, r2
   19ca4:	mov	sl, r1
   19ca8:	movt	r5, #2
   19cac:	cmp	r0, #0
   19cb0:	movne	r5, r0
   19cb4:	bl	1120c <__errno_location@plt>
   19cb8:	ldr	r2, [r5, #40]	; 0x28
   19cbc:	ldr	r3, [r5, #44]	; 0x2c
   19cc0:	mov	r4, r0
   19cc4:	ldm	r5, {r0, r1}
   19cc8:	add	r5, r5, #8
   19ccc:	ldr	r6, [r4]
   19cd0:	stm	sp, {r0, r1, r5}
   19cd4:	mov	r0, r7
   19cd8:	mov	r1, sl
   19cdc:	str	r2, [sp, #12]
   19ce0:	str	r3, [sp, #16]
   19ce4:	mov	r2, r9
   19ce8:	mov	r3, r8
   19cec:	bl	19cfc <__assert_fail@plt+0x89f4>
   19cf0:	str	r6, [r4]
   19cf4:	sub	sp, fp, #28
   19cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d00:	add	fp, sp, #28
   19d04:	sub	sp, sp, #156	; 0x9c
   19d08:	mov	r5, r0
   19d0c:	add	r0, r2, #1
   19d10:	mov	r6, r1
   19d14:	mov	sl, r3
   19d18:	str	r2, [fp, #-80]	; 0xffffffb0
   19d1c:	str	r0, [sp, #72]	; 0x48
   19d20:	ldr	r0, [fp, #12]
   19d24:	and	r1, r0, #1
   19d28:	str	r1, [sp, #36]	; 0x24
   19d2c:	and	r1, r0, #4
   19d30:	str	r1, [sp, #32]
   19d34:	ubfx	r9, r0, #1, #1
   19d38:	bl	11140 <__ctype_get_mb_cur_max@plt>
   19d3c:	str	r0, [sp, #40]	; 0x28
   19d40:	ldr	r0, [fp, #24]
   19d44:	ldr	r7, [fp, #8]
   19d48:	mov	r1, #0
   19d4c:	str	r5, [fp, #-84]	; 0xffffffac
   19d50:	str	r1, [fp, #-56]	; 0xffffffc8
   19d54:	mov	r1, #0
   19d58:	str	r1, [sp, #60]	; 0x3c
   19d5c:	mov	r1, #1
   19d60:	str	r1, [fp, #-48]	; 0xffffffd0
   19d64:	str	r0, [sp, #80]	; 0x50
   19d68:	ldr	r0, [fp, #20]
   19d6c:	str	r0, [sp, #76]	; 0x4c
   19d70:	mov	r0, #0
   19d74:	str	r0, [sp, #56]	; 0x38
   19d78:	mov	r0, #0
   19d7c:	str	r0, [fp, #-88]	; 0xffffffa8
   19d80:	mov	r0, #0
   19d84:	str	r0, [fp, #-72]	; 0xffffffb8
   19d88:	mov	r0, #0
   19d8c:	cmp	r7, #10
   19d90:	bhi	1ad24 <__assert_fail@plt+0x9a1c>
   19d94:	add	r1, pc, #24
   19d98:	ldr	ip, [fp, #-80]	; 0xffffffb0
   19d9c:	mov	r4, r6
   19da0:	mov	r8, #0
   19da4:	mov	r2, #1
   19da8:	mov	r3, #0
   19dac:	mov	lr, sl
   19db0:	ldr	pc, [r1, r7, lsl #2]
   19db4:	andeq	r9, r1, r8, ror lr
   19db8:	andeq	r9, r1, ip, asr #29
   19dbc:	andeq	r9, r1, ip, lsl #29
   19dc0:	andeq	r9, r1, r0, ror lr
   19dc4:	andeq	r9, r1, r0, asr #29
   19dc8:	strdeq	r9, [r1], -r4
   19dcc:	muleq	r1, ip, lr
   19dd0:	andeq	r9, r1, r8, ror pc
   19dd4:	andeq	r9, r1, r0, ror #27
   19dd8:	andeq	r9, r1, r0, ror #27
   19ddc:	andeq	r9, r1, r8, lsl #28
   19de0:	movw	r0, #59496	; 0xe868
   19de4:	mov	r1, r7
   19de8:	movt	r0, #1
   19dec:	bl	1b72c <__assert_fail@plt+0xa424>
   19df0:	str	r0, [sp, #76]	; 0x4c
   19df4:	movw	r0, #59498	; 0xe86a
   19df8:	mov	r1, r7
   19dfc:	movt	r0, #1
   19e00:	bl	1b72c <__assert_fail@plt+0xa424>
   19e04:	str	r0, [sp, #80]	; 0x50
   19e08:	mov	r8, #0
   19e0c:	tst	r9, #1
   19e10:	bne	19e48 <__assert_fail@plt+0x8b40>
   19e14:	ldr	r0, [sp, #76]	; 0x4c
   19e18:	ldrb	r0, [r0]
   19e1c:	cmp	r0, #0
   19e20:	beq	19e48 <__assert_fail@plt+0x8b40>
   19e24:	ldr	r1, [sp, #76]	; 0x4c
   19e28:	mov	r8, #0
   19e2c:	add	r1, r1, #1
   19e30:	cmp	r8, r4
   19e34:	strbcc	r0, [r5, r8]
   19e38:	ldrb	r0, [r1, r8]
   19e3c:	add	r8, r8, #1
   19e40:	cmp	r0, #0
   19e44:	bne	19e30 <__assert_fail@plt+0x8b28>
   19e48:	ldr	r6, [sp, #80]	; 0x50
   19e4c:	mov	r0, r6
   19e50:	bl	111f4 <strlen@plt>
   19e54:	ldr	ip, [fp, #-80]	; 0xffffffb0
   19e58:	str	r0, [fp, #-72]	; 0xffffffb8
   19e5c:	str	r6, [fp, #-88]	; 0xffffffa8
   19e60:	mov	r2, #1
   19e64:	mov	r3, r9
   19e68:	mov	lr, sl
   19e6c:	b	19f78 <__assert_fail@plt+0x8c70>
   19e70:	mov	r0, #1
   19e74:	b	19ecc <__assert_fail@plt+0x8bc4>
   19e78:	mov	r7, #0
   19e7c:	mov	r8, #0
   19e80:	mov	r2, r0
   19e84:	mov	r3, #0
   19e88:	b	19f78 <__assert_fail@plt+0x8c70>
   19e8c:	tst	r9, #1
   19e90:	bne	19ecc <__assert_fail@plt+0x8bc4>
   19e94:	mov	r2, r0
   19e98:	b	19f24 <__assert_fail@plt+0x8c1c>
   19e9c:	mov	r0, #1
   19ea0:	mov	r8, #0
   19ea4:	mov	r7, #5
   19ea8:	mov	r2, #1
   19eac:	str	r0, [fp, #-72]	; 0xffffffb8
   19eb0:	movw	r0, #59494	; 0xe866
   19eb4:	movt	r0, #1
   19eb8:	str	r0, [fp, #-88]	; 0xffffffa8
   19ebc:	b	19eec <__assert_fail@plt+0x8be4>
   19ec0:	mov	r2, #1
   19ec4:	tst	r9, #1
   19ec8:	beq	19f24 <__assert_fail@plt+0x8c1c>
   19ecc:	mov	r1, #1
   19ed0:	mov	r8, #0
   19ed4:	mov	r7, #2
   19ed8:	mov	r2, r0
   19edc:	str	r1, [fp, #-72]	; 0xffffffb8
   19ee0:	movw	r1, #59498	; 0xe86a
   19ee4:	movt	r1, #1
   19ee8:	str	r1, [fp, #-88]	; 0xffffffa8
   19eec:	mov	r3, #1
   19ef0:	b	19f78 <__assert_fail@plt+0x8c70>
   19ef4:	tst	r9, #1
   19ef8:	beq	19f48 <__assert_fail@plt+0x8c40>
   19efc:	mov	r0, #1
   19f00:	mov	r8, #0
   19f04:	mov	r2, #1
   19f08:	mov	r3, #1
   19f0c:	mov	r7, #5
   19f10:	str	r0, [fp, #-72]	; 0xffffffb8
   19f14:	movw	r0, #59494	; 0xe866
   19f18:	movt	r0, #1
   19f1c:	str	r0, [fp, #-88]	; 0xffffffa8
   19f20:	b	19f78 <__assert_fail@plt+0x8c70>
   19f24:	cmp	r4, #0
   19f28:	mov	r8, #1
   19f2c:	mov	r3, #0
   19f30:	mov	r7, #2
   19f34:	movne	r0, #39	; 0x27
   19f38:	strbne	r0, [r5]
   19f3c:	movw	r0, #59498	; 0xe86a
   19f40:	movt	r0, #1
   19f44:	b	19f6c <__assert_fail@plt+0x8c64>
   19f48:	cmp	r4, #0
   19f4c:	mov	r8, #1
   19f50:	mov	r2, #1
   19f54:	mov	r7, #5
   19f58:	mov	r3, #0
   19f5c:	movne	r0, #34	; 0x22
   19f60:	strbne	r0, [r5]
   19f64:	movw	r0, #59494	; 0xe866
   19f68:	movt	r0, #1
   19f6c:	str	r0, [fp, #-88]	; 0xffffffa8
   19f70:	mov	r0, #1
   19f74:	str	r0, [fp, #-72]	; 0xffffffb8
   19f78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19f7c:	eor	r6, r3, #1
   19f80:	str	r7, [fp, #-68]	; 0xffffffbc
   19f84:	str	r3, [fp, #-76]	; 0xffffffb4
   19f88:	str	r2, [sp, #84]	; 0x54
   19f8c:	str	r6, [sp, #92]	; 0x5c
   19f90:	cmp	r0, #0
   19f94:	movwne	r0, #1
   19f98:	and	r1, r0, r3
   19f9c:	and	r1, r2, r1
   19fa0:	str	r1, [sp, #48]	; 0x30
   19fa4:	sub	r1, r7, #2
   19fa8:	clz	r1, r1
   19fac:	lsr	r1, r1, #5
   19fb0:	and	r1, r1, r3
   19fb4:	str	r1, [sp, #64]	; 0x40
   19fb8:	subs	r1, r7, #2
   19fbc:	mov	r7, #0
   19fc0:	movwne	r1, #1
   19fc4:	orr	r6, r1, r6
   19fc8:	and	r1, r1, r2
   19fcc:	and	r0, r0, r1
   19fd0:	str	r6, [sp, #68]	; 0x44
   19fd4:	str	r0, [fp, #-60]	; 0xffffffc4
   19fd8:	orr	r0, r1, r3
   19fdc:	ldr	r1, [fp, #16]
   19fe0:	eor	r0, r0, #1
   19fe4:	clz	r1, r1
   19fe8:	lsr	r1, r1, #5
   19fec:	orr	r0, r1, r0
   19ff0:	str	r0, [fp, #-64]	; 0xffffffc0
   19ff4:	eor	r0, r2, #1
   19ff8:	str	r0, [sp, #52]	; 0x34
   19ffc:	cmn	lr, #1
   1a000:	beq	1a010 <__assert_fail@plt+0x8d08>
   1a004:	cmp	r7, lr
   1a008:	bne	1a01c <__assert_fail@plt+0x8d14>
   1a00c:	b	1ab64 <__assert_fail@plt+0x985c>
   1a010:	ldrb	r0, [ip, r7]
   1a014:	cmp	r0, #0
   1a018:	beq	1ab6c <__assert_fail@plt+0x9864>
   1a01c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a020:	mov	sl, #0
   1a024:	cmp	r0, #0
   1a028:	beq	1a060 <__assert_fail@plt+0x8d58>
   1a02c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a030:	add	r5, r7, r0
   1a034:	cmp	r0, #2
   1a038:	bcc	1a054 <__assert_fail@plt+0x8d4c>
   1a03c:	cmn	lr, #1
   1a040:	bne	1a054 <__assert_fail@plt+0x8d4c>
   1a044:	mov	r0, ip
   1a048:	bl	111f4 <strlen@plt>
   1a04c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1a050:	mov	lr, r0
   1a054:	cmp	r5, lr
   1a058:	bls	1a068 <__assert_fail@plt+0x8d60>
   1a05c:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a060:	mov	r0, #0
   1a064:	b	1a0b4 <__assert_fail@plt+0x8dac>
   1a068:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a06c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a070:	add	r0, ip, r7
   1a074:	mov	r6, r4
   1a078:	mov	r4, lr
   1a07c:	bl	111e8 <bcmp@plt>
   1a080:	ldr	r2, [sp, #92]	; 0x5c
   1a084:	cmp	r0, #0
   1a088:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a08c:	mov	r1, r0
   1a090:	movwne	r1, #1
   1a094:	orr	r1, r1, r2
   1a098:	tst	r1, #1
   1a09c:	beq	1abf4 <__assert_fail@plt+0x98ec>
   1a0a0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1a0a4:	clz	r0, r0
   1a0a8:	mov	lr, r4
   1a0ac:	mov	r4, r6
   1a0b0:	lsr	r0, r0, #5
   1a0b4:	str	r0, [fp, #-52]	; 0xffffffcc
   1a0b8:	ldrb	r6, [ip, r7]
   1a0bc:	cmp	r6, #126	; 0x7e
   1a0c0:	bhi	1a5f0 <__assert_fail@plt+0x92e8>
   1a0c4:	add	r3, pc, #16
   1a0c8:	mov	r9, #1
   1a0cc:	mov	r2, #110	; 0x6e
   1a0d0:	mov	r0, #97	; 0x61
   1a0d4:	mov	r1, #0
   1a0d8:	ldr	pc, [r3, r6, lsl #2]
   1a0dc:	andeq	sl, r1, r0, asr r4
   1a0e0:	strdeq	sl, [r1], -r0
   1a0e4:	strdeq	sl, [r1], -r0
   1a0e8:	strdeq	sl, [r1], -r0
   1a0ec:	strdeq	sl, [r1], -r0
   1a0f0:	strdeq	sl, [r1], -r0
   1a0f4:	strdeq	sl, [r1], -r0
   1a0f8:	andeq	sl, r1, ip, asr #13
   1a0fc:	andeq	sl, r1, r0, lsr r4
   1a100:	andeq	sl, r1, r8, lsr #8
   1a104:	andeq	sl, r1, ip, lsr r4
   1a108:	andeq	sl, r1, r8, asr r5
   1a10c:	andeq	sl, r1, r0, lsr #8
   1a110:	andeq	sl, r1, r8, lsr r4
   1a114:	strdeq	sl, [r1], -r0
   1a118:	strdeq	sl, [r1], -r0
   1a11c:	strdeq	sl, [r1], -r0
   1a120:	strdeq	sl, [r1], -r0
   1a124:	strdeq	sl, [r1], -r0
   1a128:	strdeq	sl, [r1], -r0
   1a12c:	strdeq	sl, [r1], -r0
   1a130:	strdeq	sl, [r1], -r0
   1a134:	strdeq	sl, [r1], -r0
   1a138:	strdeq	sl, [r1], -r0
   1a13c:	strdeq	sl, [r1], -r0
   1a140:	strdeq	sl, [r1], -r0
   1a144:	strdeq	sl, [r1], -r0
   1a148:	strdeq	sl, [r1], -r0
   1a14c:	strdeq	sl, [r1], -r0
   1a150:	strdeq	sl, [r1], -r0
   1a154:	strdeq	sl, [r1], -r0
   1a158:	strdeq	sl, [r1], -r0
   1a15c:	ldrdeq	sl, [r1], -r4
   1a160:	ldrdeq	sl, [r1], -r8
   1a164:	ldrdeq	sl, [r1], -r8
   1a168:	andeq	sl, r1, r0, asr #7
   1a16c:	ldrdeq	sl, [r1], -r8
   1a170:	ldrdeq	sl, [r1], -r8
   1a174:	ldrdeq	sl, [r1], -r8
   1a178:	andeq	sl, r1, r0, ror #10
   1a17c:	ldrdeq	sl, [r1], -r8
   1a180:	ldrdeq	sl, [r1], -r8
   1a184:	ldrdeq	sl, [r1], -r8
   1a188:	ldrdeq	sl, [r1], -r8
   1a18c:	ldrdeq	sl, [r1], -r8
   1a190:	ldrdeq	sl, [r1], -r8
   1a194:	ldrdeq	sl, [r1], -r8
   1a198:	ldrdeq	sl, [r1], -r8
   1a19c:	ldrdeq	sl, [r1], -r8
   1a1a0:	ldrdeq	sl, [r1], -r8
   1a1a4:	ldrdeq	sl, [r1], -r8
   1a1a8:	ldrdeq	sl, [r1], -r8
   1a1ac:	ldrdeq	sl, [r1], -r8
   1a1b0:	ldrdeq	sl, [r1], -r8
   1a1b4:	ldrdeq	sl, [r1], -r8
   1a1b8:	ldrdeq	sl, [r1], -r8
   1a1bc:	ldrdeq	sl, [r1], -r8
   1a1c0:	ldrdeq	sl, [r1], -r8
   1a1c4:	ldrdeq	sl, [r1], -r8
   1a1c8:	ldrdeq	sl, [r1], -r8
   1a1cc:	ldrdeq	sl, [r1], -r8
   1a1d0:	ldrdeq	sl, [r1], -r8
   1a1d4:	ldrdeq	sl, [r1], -r8
   1a1d8:	andeq	sl, r1, r8, lsr #10
   1a1dc:	strdeq	sl, [r1], -r0
   1a1e0:	ldrdeq	sl, [r1], -r8
   1a1e4:	ldrdeq	sl, [r1], -r8
   1a1e8:	ldrdeq	sl, [r1], -r8
   1a1ec:	ldrdeq	sl, [r1], -r8
   1a1f0:	ldrdeq	sl, [r1], -r8
   1a1f4:	ldrdeq	sl, [r1], -r8
   1a1f8:	ldrdeq	sl, [r1], -r8
   1a1fc:	ldrdeq	sl, [r1], -r8
   1a200:	ldrdeq	sl, [r1], -r8
   1a204:	ldrdeq	sl, [r1], -r8
   1a208:	ldrdeq	sl, [r1], -r8
   1a20c:	ldrdeq	sl, [r1], -r8
   1a210:	ldrdeq	sl, [r1], -r8
   1a214:	ldrdeq	sl, [r1], -r8
   1a218:	ldrdeq	sl, [r1], -r8
   1a21c:	ldrdeq	sl, [r1], -r8
   1a220:	ldrdeq	sl, [r1], -r8
   1a224:	ldrdeq	sl, [r1], -r8
   1a228:	ldrdeq	sl, [r1], -r8
   1a22c:	ldrdeq	sl, [r1], -r8
   1a230:	ldrdeq	sl, [r1], -r8
   1a234:	ldrdeq	sl, [r1], -r8
   1a238:	ldrdeq	sl, [r1], -r8
   1a23c:	ldrdeq	sl, [r1], -r8
   1a240:	ldrdeq	sl, [r1], -r8
   1a244:	ldrdeq	sl, [r1], -r8
   1a248:	ldrdeq	sl, [r1], -r8
   1a24c:	andeq	sl, r1, r0, lsl #8
   1a250:	ldrdeq	sl, [r1], -r8
   1a254:	ldrdeq	sl, [r1], -r8
   1a258:	ldrdeq	sl, [r1], -r8
   1a25c:	ldrdeq	sl, [r1], -r8
   1a260:	ldrdeq	sl, [r1], -r8
   1a264:	ldrdeq	sl, [r1], -r8
   1a268:	ldrdeq	sl, [r1], -r8
   1a26c:	ldrdeq	sl, [r1], -r8
   1a270:	ldrdeq	sl, [r1], -r8
   1a274:	ldrdeq	sl, [r1], -r8
   1a278:	ldrdeq	sl, [r1], -r8
   1a27c:	ldrdeq	sl, [r1], -r8
   1a280:	ldrdeq	sl, [r1], -r8
   1a284:	ldrdeq	sl, [r1], -r8
   1a288:	ldrdeq	sl, [r1], -r8
   1a28c:	ldrdeq	sl, [r1], -r8
   1a290:	ldrdeq	sl, [r1], -r8
   1a294:	ldrdeq	sl, [r1], -r8
   1a298:	ldrdeq	sl, [r1], -r8
   1a29c:	ldrdeq	sl, [r1], -r8
   1a2a0:	ldrdeq	sl, [r1], -r8
   1a2a4:	ldrdeq	sl, [r1], -r8
   1a2a8:	ldrdeq	sl, [r1], -r8
   1a2ac:	ldrdeq	sl, [r1], -r8
   1a2b0:	ldrdeq	sl, [r1], -r8
   1a2b4:	ldrdeq	sl, [r1], -r8
   1a2b8:	ldrdeq	sl, [r1], -r8
   1a2bc:	ldrdeq	sl, [r1], -r8
   1a2c0:	ldrdeq	sl, [r1], -r8
   1a2c4:	ldrdeq	sl, [r1], -r8
   1a2c8:	muleq	r1, r4, r3
   1a2cc:	ldrdeq	sl, [r1], -r8
   1a2d0:	muleq	r1, r4, r3
   1a2d4:	andeq	sl, r1, r0, asr #7
   1a2d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a2dc:	tst	r0, #1
   1a2e0:	bne	1a30c <__assert_fail@plt+0x9004>
   1a2e4:	ldr	r1, [fp, #16]
   1a2e8:	ubfx	r0, r6, #5, #3
   1a2ec:	mov	r2, #1
   1a2f0:	ldr	r0, [r1, r0, lsl #2]
   1a2f4:	and	r1, r6, #31
   1a2f8:	tst	r0, r2, lsl r1
   1a2fc:	beq	1a30c <__assert_fail@plt+0x9004>
   1a300:	mov	r0, r6
   1a304:	mov	r1, r9
   1a308:	b	1a320 <__assert_fail@plt+0x9018>
   1a30c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a310:	mov	r1, r9
   1a314:	cmp	r0, #0
   1a318:	mov	r0, r6
   1a31c:	beq	1a660 <__assert_fail@plt+0x9358>
   1a320:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a324:	tst	r2, #1
   1a328:	bne	1ac30 <__assert_fail@plt+0x9928>
   1a32c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a330:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a334:	subs	r2, r2, #2
   1a338:	movwne	r2, #1
   1a33c:	orr	r2, r2, r3
   1a340:	tst	r2, #1
   1a344:	bne	1a380 <__assert_fail@plt+0x9078>
   1a348:	cmp	r8, r4
   1a34c:	movcc	r2, #39	; 0x27
   1a350:	strbcc	r2, [r5, r8]
   1a354:	add	r2, r8, #1
   1a358:	cmp	r2, r4
   1a35c:	movcc	r3, #36	; 0x24
   1a360:	strbcc	r3, [r5, r2]
   1a364:	add	r2, r8, #2
   1a368:	add	r8, r8, #3
   1a36c:	cmp	r2, r4
   1a370:	movcc	r3, #39	; 0x27
   1a374:	strbcc	r3, [r5, r2]
   1a378:	mov	r2, #1
   1a37c:	str	r2, [fp, #-56]	; 0xffffffc8
   1a380:	cmp	r8, r4
   1a384:	movcc	r2, #92	; 0x5c
   1a388:	strbcc	r2, [r5, r8]
   1a38c:	add	r8, r8, #1
   1a390:	b	1a6a4 <__assert_fail@plt+0x939c>
   1a394:	cmp	lr, #1
   1a398:	beq	1a3c0 <__assert_fail@plt+0x90b8>
   1a39c:	mov	r9, #0
   1a3a0:	cmn	lr, #1
   1a3a4:	bne	1a3cc <__assert_fail@plt+0x90c4>
   1a3a8:	ldrb	r0, [ip, #1]
   1a3ac:	cmp	r0, #0
   1a3b0:	beq	1a3c0 <__assert_fail@plt+0x90b8>
   1a3b4:	mvn	lr, #0
   1a3b8:	mov	sl, #0
   1a3bc:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a3c0:	mov	r9, #0
   1a3c4:	cmp	r7, #0
   1a3c8:	beq	1a3d4 <__assert_fail@plt+0x90cc>
   1a3cc:	mov	sl, #0
   1a3d0:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a3d4:	mov	r1, #1
   1a3d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a3dc:	cmp	r0, #2
   1a3e0:	bne	1a3f8 <__assert_fail@plt+0x90f0>
   1a3e4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a3e8:	mov	r9, r1
   1a3ec:	tst	r0, #1
   1a3f0:	beq	1a2d8 <__assert_fail@plt+0x8fd0>
   1a3f4:	b	1ac30 <__assert_fail@plt+0x9928>
   1a3f8:	mov	r9, r1
   1a3fc:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a400:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a404:	cmp	r0, #2
   1a408:	bne	1a644 <__assert_fail@plt+0x933c>
   1a40c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a410:	tst	r0, #1
   1a414:	bne	1ac30 <__assert_fail@plt+0x9928>
   1a418:	mov	sl, #0
   1a41c:	b	1a658 <__assert_fail@plt+0x9350>
   1a420:	mov	r0, #102	; 0x66
   1a424:	b	1a6cc <__assert_fail@plt+0x93c4>
   1a428:	mov	r2, #116	; 0x74
   1a42c:	b	1a43c <__assert_fail@plt+0x9134>
   1a430:	mov	r0, #98	; 0x62
   1a434:	b	1a6cc <__assert_fail@plt+0x93c4>
   1a438:	mov	r2, #114	; 0x72
   1a43c:	ldr	r0, [sp, #68]	; 0x44
   1a440:	tst	r0, #1
   1a444:	mov	r0, r2
   1a448:	bne	1a6cc <__assert_fail@plt+0x93c4>
   1a44c:	b	1ac30 <__assert_fail@plt+0x9928>
   1a450:	ldr	r0, [sp, #84]	; 0x54
   1a454:	tst	r0, #1
   1a458:	beq	1a6e8 <__assert_fail@plt+0x93e0>
   1a45c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a460:	tst	r0, #1
   1a464:	bne	1ad1c <__assert_fail@plt+0x9a14>
   1a468:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a46c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1a470:	subs	r0, r0, #2
   1a474:	movwne	r0, #1
   1a478:	orr	r0, r0, r1
   1a47c:	tst	r0, #1
   1a480:	bne	1a4bc <__assert_fail@plt+0x91b4>
   1a484:	cmp	r8, r4
   1a488:	movcc	r0, #39	; 0x27
   1a48c:	strbcc	r0, [r5, r8]
   1a490:	add	r0, r8, #1
   1a494:	cmp	r0, r4
   1a498:	movcc	r1, #36	; 0x24
   1a49c:	strbcc	r1, [r5, r0]
   1a4a0:	add	r0, r8, #2
   1a4a4:	add	r8, r8, #3
   1a4a8:	cmp	r0, r4
   1a4ac:	movcc	r1, #39	; 0x27
   1a4b0:	strbcc	r1, [r5, r0]
   1a4b4:	mov	r0, #1
   1a4b8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a4bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a4c0:	cmp	r8, r4
   1a4c4:	mov	r9, #0
   1a4c8:	mov	sl, #1
   1a4cc:	mov	r6, #48	; 0x30
   1a4d0:	movcc	r0, #92	; 0x5c
   1a4d4:	strbcc	r0, [r5, r8]
   1a4d8:	add	r0, r8, #1
   1a4dc:	cmp	r1, #2
   1a4e0:	beq	1a8b0 <__assert_fail@plt+0x95a8>
   1a4e4:	add	r1, r7, #1
   1a4e8:	cmp	r1, lr
   1a4ec:	bcs	1a8b0 <__assert_fail@plt+0x95a8>
   1a4f0:	ldrb	r1, [ip, r1]
   1a4f4:	sub	r1, r1, #48	; 0x30
   1a4f8:	uxtb	r1, r1
   1a4fc:	cmp	r1, #9
   1a500:	bhi	1a8b0 <__assert_fail@plt+0x95a8>
   1a504:	cmp	r0, r4
   1a508:	movcc	r1, #48	; 0x30
   1a50c:	strbcc	r1, [r5, r0]
   1a510:	add	r0, r8, #2
   1a514:	add	r8, r8, #3
   1a518:	cmp	r0, r4
   1a51c:	movcc	r1, #48	; 0x30
   1a520:	strbcc	r1, [r5, r0]
   1a524:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a528:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a52c:	mov	sl, #0
   1a530:	mov	r6, #63	; 0x3f
   1a534:	cmp	r0, #5
   1a538:	beq	1a8b8 <__assert_fail@plt+0x95b0>
   1a53c:	cmp	r0, #2
   1a540:	bne	1a960 <__assert_fail@plt+0x9658>
   1a544:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a548:	mov	r9, #0
   1a54c:	tst	r0, #1
   1a550:	beq	1a2d8 <__assert_fail@plt+0x8fd0>
   1a554:	b	1ac30 <__assert_fail@plt+0x9928>
   1a558:	mov	r0, #118	; 0x76
   1a55c:	b	1a6cc <__assert_fail@plt+0x93c4>
   1a560:	mov	r0, #1
   1a564:	mov	r6, #39	; 0x27
   1a568:	str	r0, [sp, #60]	; 0x3c
   1a56c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1a570:	cmp	r0, #2
   1a574:	bne	1a704 <__assert_fail@plt+0x93fc>
   1a578:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a57c:	tst	r0, #1
   1a580:	bne	1ac30 <__assert_fail@plt+0x9928>
   1a584:	ldr	r2, [sp, #56]	; 0x38
   1a588:	clz	r1, r4
   1a58c:	mov	sl, #0
   1a590:	mov	r9, #1
   1a594:	lsr	r1, r1, #5
   1a598:	cmp	r2, #0
   1a59c:	mov	r0, r2
   1a5a0:	movwne	r0, #1
   1a5a4:	orrs	r0, r0, r1
   1a5a8:	moveq	r2, r4
   1a5ac:	moveq	r4, r0
   1a5b0:	cmp	r8, r4
   1a5b4:	str	r2, [sp, #56]	; 0x38
   1a5b8:	movcc	r0, #39	; 0x27
   1a5bc:	strbcc	r0, [r5, r8]
   1a5c0:	add	r0, r8, #1
   1a5c4:	cmp	r0, r4
   1a5c8:	movcc	r1, #92	; 0x5c
   1a5cc:	strbcc	r1, [r5, r0]
   1a5d0:	add	r0, r8, #2
   1a5d4:	add	r8, r8, #3
   1a5d8:	cmp	r0, r4
   1a5dc:	movcc	r1, #39	; 0x27
   1a5e0:	strbcc	r1, [r5, r0]
   1a5e4:	mov	r0, #0
   1a5e8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a5ec:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a5f0:	ldr	r0, [sp, #40]	; 0x28
   1a5f4:	str	r4, [sp, #88]	; 0x58
   1a5f8:	cmp	r0, #1
   1a5fc:	bne	1a70c <__assert_fail@plt+0x9404>
   1a600:	str	lr, [sp, #28]
   1a604:	bl	111c4 <__ctype_b_loc@plt>
   1a608:	ldr	r0, [r0]
   1a60c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1a610:	mov	r2, #1
   1a614:	add	r0, r0, r6, lsl #1
   1a618:	ldrb	r0, [r0, #1]
   1a61c:	ubfx	r9, r0, #6, #1
   1a620:	ldr	r0, [sp, #52]	; 0x34
   1a624:	cmp	r2, #1
   1a628:	orr	r0, r9, r0
   1a62c:	bhi	1a968 <__assert_fail@plt+0x9660>
   1a630:	tst	r0, #1
   1a634:	beq	1a968 <__assert_fail@plt+0x9660>
   1a638:	ldr	lr, [sp, #28]
   1a63c:	ldr	r4, [sp, #88]	; 0x58
   1a640:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a644:	ldr	r1, [sp, #48]	; 0x30
   1a648:	mov	sl, #0
   1a64c:	mov	r0, #92	; 0x5c
   1a650:	cmp	r1, #0
   1a654:	beq	1a6cc <__assert_fail@plt+0x93c4>
   1a658:	mov	r6, #92	; 0x5c
   1a65c:	mov	r9, #0
   1a660:	cmp	sl, #0
   1a664:	bne	1a69c <__assert_fail@plt+0x9394>
   1a668:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a66c:	tst	r0, #1
   1a670:	beq	1a69c <__assert_fail@plt+0x9394>
   1a674:	cmp	r8, r4
   1a678:	movcc	r0, #39	; 0x27
   1a67c:	strbcc	r0, [r5, r8]
   1a680:	add	r0, r8, #1
   1a684:	add	r8, r8, #2
   1a688:	cmp	r0, r4
   1a68c:	movcc	r1, #39	; 0x27
   1a690:	strbcc	r1, [r5, r0]
   1a694:	mov	r0, #0
   1a698:	str	r0, [fp, #-56]	; 0xffffffc8
   1a69c:	mov	r1, r9
   1a6a0:	mov	r0, r6
   1a6a4:	cmp	r8, r4
   1a6a8:	strbcc	r0, [r5, r8]
   1a6ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a6b0:	add	r8, r8, #1
   1a6b4:	and	r0, r0, r1
   1a6b8:	str	r0, [fp, #-48]	; 0xffffffd0
   1a6bc:	add	r7, r7, #1
   1a6c0:	cmn	lr, #1
   1a6c4:	bne	1a004 <__assert_fail@plt+0x8cfc>
   1a6c8:	b	1a010 <__assert_fail@plt+0x8d08>
   1a6cc:	ldr	r1, [sp, #84]	; 0x54
   1a6d0:	mov	sl, #0
   1a6d4:	mov	r9, #0
   1a6d8:	tst	r1, #1
   1a6dc:	mov	r1, #0
   1a6e0:	beq	1a2d8 <__assert_fail@plt+0x8fd0>
   1a6e4:	b	1a320 <__assert_fail@plt+0x9018>
   1a6e8:	ldr	r0, [sp, #36]	; 0x24
   1a6ec:	mov	r6, #0
   1a6f0:	mov	sl, #0
   1a6f4:	mov	r9, #0
   1a6f8:	cmp	r0, #0
   1a6fc:	beq	1a2d8 <__assert_fail@plt+0x8fd0>
   1a700:	b	1a6bc <__assert_fail@plt+0x93b4>
   1a704:	mov	r9, #1
   1a708:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a70c:	mov	r0, #0
   1a710:	cmn	lr, #1
   1a714:	sub	r4, fp, #40	; 0x28
   1a718:	str	r0, [fp, #-36]	; 0xffffffdc
   1a71c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a720:	bne	1a734 <__assert_fail@plt+0x942c>
   1a724:	mov	r0, ip
   1a728:	bl	111f4 <strlen@plt>
   1a72c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1a730:	mov	lr, r0
   1a734:	ldr	r0, [sp, #72]	; 0x48
   1a738:	mov	r9, #1
   1a73c:	mov	r2, #0
   1a740:	str	lr, [sp, #28]
   1a744:	add	r0, r0, r7
   1a748:	str	r0, [sp, #20]
   1a74c:	b	1a790 <__assert_fail@plt+0x9488>
   1a750:	ldr	r5, [sp, #44]	; 0x2c
   1a754:	add	r5, r0, r5
   1a758:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a75c:	bl	1111c <iswprint@plt>
   1a760:	cmp	r0, #0
   1a764:	sub	r4, fp, #40	; 0x28
   1a768:	movwne	r0, #1
   1a76c:	and	r9, r9, r0
   1a770:	mov	r0, r4
   1a774:	bl	110ec <mbsinit@plt>
   1a778:	mov	r2, r5
   1a77c:	ldr	lr, [sp, #28]
   1a780:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a784:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1a788:	cmp	r0, #0
   1a78c:	bne	1a620 <__assert_fail@plt+0x9318>
   1a790:	add	r0, r2, r7
   1a794:	str	r2, [sp, #44]	; 0x2c
   1a798:	mov	r3, r4
   1a79c:	add	r1, ip, r0
   1a7a0:	str	r0, [sp, #24]
   1a7a4:	sub	r2, lr, r0
   1a7a8:	sub	r0, fp, #44	; 0x2c
   1a7ac:	bl	1d5b4 <__assert_fail@plt+0xc2ac>
   1a7b0:	cmp	r0, #0
   1a7b4:	beq	1ab58 <__assert_fail@plt+0x9850>
   1a7b8:	cmn	r0, #1
   1a7bc:	beq	1ab14 <__assert_fail@plt+0x980c>
   1a7c0:	ldr	lr, [sp, #28]
   1a7c4:	cmn	r0, #2
   1a7c8:	beq	1ab1c <__assert_fail@plt+0x9814>
   1a7cc:	ldr	r2, [sp, #64]	; 0x40
   1a7d0:	ldr	r4, [sp, #88]	; 0x58
   1a7d4:	ldr	ip, [sp, #84]	; 0x54
   1a7d8:	cmp	r0, #2
   1a7dc:	mov	r1, #0
   1a7e0:	movwcc	r1, #1
   1a7e4:	eor	r2, r2, #1
   1a7e8:	orrs	r1, r2, r1
   1a7ec:	bne	1a750 <__assert_fail@plt+0x9448>
   1a7f0:	ldr	r1, [sp, #44]	; 0x2c
   1a7f4:	ldr	r2, [sp, #20]
   1a7f8:	add	r1, r2, r1
   1a7fc:	sub	r2, r0, #1
   1a800:	b	1a810 <__assert_fail@plt+0x9508>
   1a804:	add	r1, r1, #1
   1a808:	subs	r2, r2, #1
   1a80c:	beq	1a750 <__assert_fail@plt+0x9448>
   1a810:	ldrb	r3, [r1]
   1a814:	sub	r3, r3, #91	; 0x5b
   1a818:	cmp	r3, #33	; 0x21
   1a81c:	bhi	1a804 <__assert_fail@plt+0x94fc>
   1a820:	add	r5, pc, #0
   1a824:	ldr	pc, [r5, r3, lsl #2]
   1a828:	andeq	sl, r1, ip, lsl #24
   1a82c:	andeq	sl, r1, ip, lsl #24
   1a830:	andeq	sl, r1, r4, lsl #16
   1a834:	andeq	sl, r1, ip, lsl #24
   1a838:	andeq	sl, r1, r4, lsl #16
   1a83c:	andeq	sl, r1, ip, lsl #24
   1a840:	andeq	sl, r1, r4, lsl #16
   1a844:	andeq	sl, r1, r4, lsl #16
   1a848:	andeq	sl, r1, r4, lsl #16
   1a84c:	andeq	sl, r1, r4, lsl #16
   1a850:	andeq	sl, r1, r4, lsl #16
   1a854:	andeq	sl, r1, r4, lsl #16
   1a858:	andeq	sl, r1, r4, lsl #16
   1a85c:	andeq	sl, r1, r4, lsl #16
   1a860:	andeq	sl, r1, r4, lsl #16
   1a864:	andeq	sl, r1, r4, lsl #16
   1a868:	andeq	sl, r1, r4, lsl #16
   1a86c:	andeq	sl, r1, r4, lsl #16
   1a870:	andeq	sl, r1, r4, lsl #16
   1a874:	andeq	sl, r1, r4, lsl #16
   1a878:	andeq	sl, r1, r4, lsl #16
   1a87c:	andeq	sl, r1, r4, lsl #16
   1a880:	andeq	sl, r1, r4, lsl #16
   1a884:	andeq	sl, r1, r4, lsl #16
   1a888:	andeq	sl, r1, r4, lsl #16
   1a88c:	andeq	sl, r1, r4, lsl #16
   1a890:	andeq	sl, r1, r4, lsl #16
   1a894:	andeq	sl, r1, r4, lsl #16
   1a898:	andeq	sl, r1, r4, lsl #16
   1a89c:	andeq	sl, r1, r4, lsl #16
   1a8a0:	andeq	sl, r1, r4, lsl #16
   1a8a4:	andeq	sl, r1, r4, lsl #16
   1a8a8:	andeq	sl, r1, r4, lsl #16
   1a8ac:	andeq	sl, r1, ip, lsl #24
   1a8b0:	mov	r8, r0
   1a8b4:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a8b8:	ldr	r0, [sp, #32]
   1a8bc:	cmp	r0, #0
   1a8c0:	beq	1a960 <__assert_fail@plt+0x9658>
   1a8c4:	add	r0, r7, #2
   1a8c8:	cmp	r0, lr
   1a8cc:	bcs	1a960 <__assert_fail@plt+0x9658>
   1a8d0:	add	r1, r7, ip
   1a8d4:	ldrb	r1, [r1, #1]
   1a8d8:	cmp	r1, #63	; 0x3f
   1a8dc:	bne	1a960 <__assert_fail@plt+0x9658>
   1a8e0:	ldrb	r9, [ip, r0]
   1a8e4:	sub	r2, r9, #33	; 0x21
   1a8e8:	cmp	r2, #29
   1a8ec:	bhi	1a960 <__assert_fail@plt+0x9658>
   1a8f0:	movw	r1, #20929	; 0x51c1
   1a8f4:	mov	r3, #1
   1a8f8:	movt	r1, #14336	; 0x3800
   1a8fc:	tst	r1, r3, lsl r2
   1a900:	beq	1a960 <__assert_fail@plt+0x9658>
   1a904:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a908:	tst	r1, #1
   1a90c:	bne	1ac30 <__assert_fail@plt+0x9928>
   1a910:	cmp	r8, r4
   1a914:	add	r2, r8, #1
   1a918:	mov	r6, r9
   1a91c:	mov	r7, r0
   1a920:	mov	r9, #0
   1a924:	movcc	r1, #63	; 0x3f
   1a928:	strbcc	r1, [r5, r8]
   1a92c:	cmp	r2, r4
   1a930:	movcc	r1, #34	; 0x22
   1a934:	strbcc	r1, [r5, r2]
   1a938:	add	r2, r8, #2
   1a93c:	cmp	r2, r4
   1a940:	movcc	r1, #34	; 0x22
   1a944:	strbcc	r1, [r5, r2]
   1a948:	add	r2, r8, #3
   1a94c:	add	r8, r8, #4
   1a950:	cmp	r2, r4
   1a954:	movcc	r1, #63	; 0x3f
   1a958:	strbcc	r1, [r5, r2]
   1a95c:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a960:	mov	r9, #0
   1a964:	b	1a2d8 <__assert_fail@plt+0x8fd0>
   1a968:	ldr	lr, [sp, #28]
   1a96c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1a970:	add	r1, r2, r7
   1a974:	mov	r2, #0
   1a978:	str	r1, [sp, #44]	; 0x2c
   1a97c:	tst	r0, #1
   1a980:	bne	1aa9c <__assert_fail@plt+0x9794>
   1a984:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a988:	tst	r1, #1
   1a98c:	bne	1ac2c <__assert_fail@plt+0x9924>
   1a990:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a994:	subs	r2, r1, #2
   1a998:	movwne	r2, #1
   1a99c:	orr	r2, r2, r4
   1a9a0:	tst	r2, #1
   1a9a4:	bne	1a9e8 <__assert_fail@plt+0x96e0>
   1a9a8:	ldr	r1, [sp, #88]	; 0x58
   1a9ac:	add	r2, r8, #1
   1a9b0:	mov	r4, #1
   1a9b4:	cmp	r8, r1
   1a9b8:	movcc	r1, #39	; 0x27
   1a9bc:	strbcc	r1, [r5, r8]
   1a9c0:	ldr	r1, [sp, #88]	; 0x58
   1a9c4:	cmp	r2, r1
   1a9c8:	movcc	r1, #36	; 0x24
   1a9cc:	strbcc	r1, [r5, r2]
   1a9d0:	ldr	r1, [sp, #88]	; 0x58
   1a9d4:	add	r2, r8, #2
   1a9d8:	add	r8, r8, #3
   1a9dc:	cmp	r2, r1
   1a9e0:	movcc	r1, #39	; 0x27
   1a9e4:	strbcc	r1, [r5, r2]
   1a9e8:	ldr	r1, [sp, #88]	; 0x58
   1a9ec:	add	r2, r8, #1
   1a9f0:	cmp	r8, r1
   1a9f4:	movcc	r1, #92	; 0x5c
   1a9f8:	strbcc	r1, [r5, r8]
   1a9fc:	ldr	r1, [sp, #88]	; 0x58
   1aa00:	cmp	r2, r1
   1aa04:	bcs	1aa18 <__assert_fail@plt+0x9710>
   1aa08:	uxtb	r3, r6
   1aa0c:	mov	r1, #48	; 0x30
   1aa10:	orr	r3, r1, r3, lsr #6
   1aa14:	strb	r3, [r5, r2]
   1aa18:	ldr	r1, [sp, #88]	; 0x58
   1aa1c:	add	r2, r8, #2
   1aa20:	add	r8, r8, #3
   1aa24:	cmp	r2, r1
   1aa28:	lsrcc	r3, r6, #3
   1aa2c:	movcc	r1, #6
   1aa30:	bficc	r3, r1, #3, #29
   1aa34:	mov	r1, #6
   1aa38:	bfi	r6, r1, #3, #29
   1aa3c:	strbcc	r3, [r5, r2]
   1aa40:	mov	r2, #1
   1aa44:	b	1aac4 <__assert_fail@plt+0x97bc>
   1aa48:	ldr	r1, [sp, #88]	; 0x58
   1aa4c:	ldr	r5, [fp, #-84]	; 0xffffffac
   1aa50:	ldr	r4, [sp, #88]	; 0x58
   1aa54:	cmp	r8, r1
   1aa58:	movcc	r1, #39	; 0x27
   1aa5c:	strbcc	r1, [r5, r8]
   1aa60:	add	r1, r8, #1
   1aa64:	add	r8, r8, #2
   1aa68:	cmp	r1, r4
   1aa6c:	movcc	r4, #39	; 0x27
   1aa70:	strbcc	r4, [r5, r1]
   1aa74:	mov	r4, #0
   1aa78:	ldr	r1, [sp, #88]	; 0x58
   1aa7c:	cmp	r8, r1
   1aa80:	ldr	r1, [sp, #72]	; 0x48
   1aa84:	strbcc	r6, [r5, r8]
   1aa88:	add	r8, r8, #1
   1aa8c:	ldrb	r6, [r1, r7]
   1aa90:	mov	r7, r3
   1aa94:	tst	r0, #1
   1aa98:	beq	1a984 <__assert_fail@plt+0x967c>
   1aa9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1aaa0:	tst	r1, #1
   1aaa4:	beq	1aabc <__assert_fail@plt+0x97b4>
   1aaa8:	ldr	r1, [sp, #88]	; 0x58
   1aaac:	cmp	r8, r1
   1aab0:	movcc	r1, #92	; 0x5c
   1aab4:	strbcc	r1, [r5, r8]
   1aab8:	add	r8, r8, #1
   1aabc:	mov	r1, #0
   1aac0:	str	r1, [fp, #-52]	; 0xffffffcc
   1aac4:	ldr	r1, [sp, #44]	; 0x2c
   1aac8:	add	r3, r7, #1
   1aacc:	and	sl, r2, #1
   1aad0:	cmp	r1, r3
   1aad4:	bls	1aaf8 <__assert_fail@plt+0x97f0>
   1aad8:	cmp	sl, #0
   1aadc:	mvn	r5, r4
   1aae0:	movwne	sl, #1
   1aae4:	orr	r5, r5, sl
   1aae8:	tst	r5, #1
   1aaec:	beq	1aa48 <__assert_fail@plt+0x9740>
   1aaf0:	ldr	r5, [fp, #-84]	; 0xffffffac
   1aaf4:	b	1aa78 <__assert_fail@plt+0x9770>
   1aaf8:	str	r4, [fp, #-56]	; 0xffffffc8
   1aafc:	ldr	r4, [sp, #88]	; 0x58
   1ab00:	cmp	sl, #0
   1ab04:	movwne	sl, #1
   1ab08:	cmp	sl, #0
   1ab0c:	beq	1a668 <__assert_fail@plt+0x9360>
   1ab10:	b	1a69c <__assert_fail@plt+0x9394>
   1ab14:	mov	r9, #0
   1ab18:	b	1ab58 <__assert_fail@plt+0x9850>
   1ab1c:	ldr	r0, [sp, #24]
   1ab20:	mov	r9, #0
   1ab24:	cmp	lr, r0
   1ab28:	bls	1ab58 <__assert_fail@plt+0x9850>
   1ab2c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1ab30:	ldr	r2, [sp, #44]	; 0x2c
   1ab34:	add	r0, ip, r7
   1ab38:	ldrb	r1, [r0, r2]
   1ab3c:	cmp	r1, #0
   1ab40:	beq	1a620 <__assert_fail@plt+0x9318>
   1ab44:	add	r2, r2, #1
   1ab48:	add	r1, r7, r2
   1ab4c:	cmp	r1, lr
   1ab50:	bcc	1ab38 <__assert_fail@plt+0x9830>
   1ab54:	b	1a620 <__assert_fail@plt+0x9318>
   1ab58:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1ab5c:	ldr	r2, [sp, #44]	; 0x2c
   1ab60:	b	1a620 <__assert_fail@plt+0x9318>
   1ab64:	mov	lr, r7
   1ab68:	b	1ab70 <__assert_fail@plt+0x9868>
   1ab6c:	mvn	lr, #0
   1ab70:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1ab74:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ab78:	eor	r0, r1, #2
   1ab7c:	orr	r0, r0, r8
   1ab80:	clz	r0, r0
   1ab84:	lsr	r0, r0, #5
   1ab88:	tst	r2, r0
   1ab8c:	bne	1ac30 <__assert_fail@plt+0x9928>
   1ab90:	subs	r0, r1, #2
   1ab94:	movwne	r0, #1
   1ab98:	orr	r0, r2, r0
   1ab9c:	tst	r0, #1
   1aba0:	ldreq	r0, [sp, #60]	; 0x3c
   1aba4:	eoreq	r0, r0, #1
   1aba8:	tsteq	r0, #1
   1abac:	bne	1acc4 <__assert_fail@plt+0x99bc>
   1abb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1abb4:	mov	sl, lr
   1abb8:	tst	r0, #1
   1abbc:	bne	1ac90 <__assert_fail@plt+0x9988>
   1abc0:	ldr	r6, [sp, #56]	; 0x38
   1abc4:	mov	r9, #0
   1abc8:	cmp	r6, #0
   1abcc:	beq	1acbc <__assert_fail@plt+0x99b4>
   1abd0:	ldr	r0, [sp, #84]	; 0x54
   1abd4:	mov	r1, #0
   1abd8:	mov	r7, #2
   1abdc:	cmp	r4, #0
   1abe0:	str	r1, [fp, #-48]	; 0xffffffd0
   1abe4:	mov	r1, #0
   1abe8:	str	r1, [fp, #-76]	; 0xffffffb4
   1abec:	beq	19d8c <__assert_fail@plt+0x8a84>
   1abf0:	b	1acc4 <__assert_fail@plt+0x99bc>
   1abf4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1abf8:	ldr	r1, [fp, #12]
   1abfc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ac00:	mov	lr, r4
   1ac04:	mov	r4, r6
   1ac08:	b	1ac50 <__assert_fail@plt+0x9948>
   1ac0c:	tst	ip, #1
   1ac10:	ldr	r5, [fp, #-84]	; 0xffffffac
   1ac14:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1ac18:	ldr	r1, [fp, #12]
   1ac1c:	mov	r0, #2
   1ac20:	movwne	r0, #4
   1ac24:	mov	r2, r0
   1ac28:	b	1ac50 <__assert_fail@plt+0x9948>
   1ac2c:	ldr	r4, [sp, #88]	; 0x58
   1ac30:	ldr	r1, [sp, #84]	; 0x54
   1ac34:	mov	r0, #2
   1ac38:	tst	r1, #1
   1ac3c:	movwne	r0, #4
   1ac40:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ac44:	ldr	r1, [fp, #12]
   1ac48:	cmp	r2, #2
   1ac4c:	moveq	r2, r0
   1ac50:	mov	r0, #0
   1ac54:	bic	r1, r1, #2
   1ac58:	str	r2, [sp]
   1ac5c:	mov	r2, ip
   1ac60:	mov	r3, lr
   1ac64:	str	r0, [sp, #8]
   1ac68:	ldr	r0, [sp, #76]	; 0x4c
   1ac6c:	str	r1, [sp, #4]
   1ac70:	mov	r1, r4
   1ac74:	str	r0, [sp, #12]
   1ac78:	ldr	r0, [sp, #80]	; 0x50
   1ac7c:	str	r0, [sp, #16]
   1ac80:	mov	r0, r5
   1ac84:	bl	19cfc <__assert_fail@plt+0x89f4>
   1ac88:	mov	r8, r0
   1ac8c:	b	1ad10 <__assert_fail@plt+0x9a08>
   1ac90:	mov	r0, #5
   1ac94:	ldr	r1, [sp, #56]	; 0x38
   1ac98:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ac9c:	mov	r3, sl
   1aca0:	str	r0, [sp]
   1aca4:	ldr	r0, [fp, #12]
   1aca8:	str	r0, [sp, #4]
   1acac:	ldr	r0, [fp, #16]
   1acb0:	str	r0, [sp, #8]
   1acb4:	ldr	r0, [sp, #76]	; 0x4c
   1acb8:	b	1ac74 <__assert_fail@plt+0x996c>
   1acbc:	mov	r0, #0
   1acc0:	str	r0, [fp, #-76]	; 0xffffffb4
   1acc4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1acc8:	cmp	r1, #0
   1accc:	beq	1ad04 <__assert_fail@plt+0x99fc>
   1acd0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1acd4:	tst	r0, #1
   1acd8:	bne	1ad04 <__assert_fail@plt+0x99fc>
   1acdc:	ldrb	r0, [r1]
   1ace0:	cmp	r0, #0
   1ace4:	beq	1ad04 <__assert_fail@plt+0x99fc>
   1ace8:	add	r1, r1, #1
   1acec:	cmp	r8, r4
   1acf0:	strbcc	r0, [r5, r8]
   1acf4:	add	r8, r8, #1
   1acf8:	ldrb	r0, [r1], #1
   1acfc:	cmp	r0, #0
   1ad00:	bne	1acec <__assert_fail@plt+0x99e4>
   1ad04:	cmp	r8, r4
   1ad08:	movcc	r0, #0
   1ad0c:	strbcc	r0, [r5, r8]
   1ad10:	mov	r0, r8
   1ad14:	sub	sp, fp, #28
   1ad18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad1c:	mov	r0, #4
   1ad20:	b	1ac40 <__assert_fail@plt+0x9938>
   1ad24:	bl	112e4 <abort@plt>
   1ad28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad2c:	add	fp, sp, #28
   1ad30:	sub	sp, sp, #28
   1ad34:	movw	r5, #61864	; 0xf1a8
   1ad38:	cmp	r2, #0
   1ad3c:	mov	r4, r1
   1ad40:	mov	r7, r0
   1ad44:	str	r0, [sp, #20]
   1ad48:	movt	r5, #2
   1ad4c:	movne	r5, r2
   1ad50:	bl	1120c <__errno_location@plt>
   1ad54:	mov	sl, r0
   1ad58:	ldr	r2, [r5, #40]	; 0x28
   1ad5c:	ldr	r3, [r5, #44]	; 0x2c
   1ad60:	ldm	r5, {r0, r1}
   1ad64:	orr	r8, r1, #1
   1ad68:	add	r9, r5, #8
   1ad6c:	mov	r1, #0
   1ad70:	ldr	r6, [sl]
   1ad74:	stm	sp, {r0, r8, r9}
   1ad78:	mov	r0, #0
   1ad7c:	str	r2, [sp, #12]
   1ad80:	str	r3, [sp, #16]
   1ad84:	mov	r2, r7
   1ad88:	mov	r3, r4
   1ad8c:	str	r6, [sp, #24]
   1ad90:	mov	r6, r4
   1ad94:	bl	19cfc <__assert_fail@plt+0x89f4>
   1ad98:	add	r7, r0, #1
   1ad9c:	mov	r0, r7
   1ada0:	bl	1bf54 <__assert_fail@plt+0xac4c>
   1ada4:	mov	r4, r0
   1ada8:	ldr	r0, [r5]
   1adac:	ldr	r2, [r5, #44]	; 0x2c
   1adb0:	ldr	r1, [r5, #40]	; 0x28
   1adb4:	mov	r3, r6
   1adb8:	stm	sp, {r0, r8, r9}
   1adbc:	str	r2, [sp, #16]
   1adc0:	ldr	r2, [sp, #20]
   1adc4:	str	r1, [sp, #12]
   1adc8:	mov	r0, r4
   1adcc:	mov	r1, r7
   1add0:	bl	19cfc <__assert_fail@plt+0x89f4>
   1add4:	ldr	r0, [sp, #24]
   1add8:	str	r0, [sl]
   1addc:	mov	r0, r4
   1ade0:	sub	sp, fp, #28
   1ade4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ade8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1adec:	add	fp, sp, #28
   1adf0:	sub	sp, sp, #36	; 0x24
   1adf4:	movw	r8, #61864	; 0xf1a8
   1adf8:	cmp	r3, #0
   1adfc:	mov	r4, r2
   1ae00:	str	r2, [sp, #24]
   1ae04:	mov	r5, r1
   1ae08:	mov	r6, r0
   1ae0c:	str	r0, [sp, #20]
   1ae10:	movt	r8, #2
   1ae14:	movne	r8, r3
   1ae18:	bl	1120c <__errno_location@plt>
   1ae1c:	str	r0, [sp, #28]
   1ae20:	ldr	r1, [r8, #40]	; 0x28
   1ae24:	ldr	r2, [r8, #44]	; 0x2c
   1ae28:	ldr	r7, [r0]
   1ae2c:	cmp	r4, #0
   1ae30:	add	sl, r8, #8
   1ae34:	mov	r0, #0
   1ae38:	ldm	r8, {r3, r9}
   1ae3c:	orreq	r9, r9, #1
   1ae40:	stm	sp, {r3, r9, sl}
   1ae44:	str	r1, [sp, #12]
   1ae48:	str	r2, [sp, #16]
   1ae4c:	mov	r1, #0
   1ae50:	mov	r2, r6
   1ae54:	mov	r3, r5
   1ae58:	str	r7, [sp, #32]
   1ae5c:	mov	r7, r5
   1ae60:	bl	19cfc <__assert_fail@plt+0x89f4>
   1ae64:	add	r4, r0, #1
   1ae68:	mov	r5, r0
   1ae6c:	mov	r0, r4
   1ae70:	bl	1bf54 <__assert_fail@plt+0xac4c>
   1ae74:	mov	r6, r0
   1ae78:	ldr	r0, [r8]
   1ae7c:	ldr	r2, [r8, #44]	; 0x2c
   1ae80:	ldr	r1, [r8, #40]	; 0x28
   1ae84:	mov	r3, r7
   1ae88:	stm	sp, {r0, r9, sl}
   1ae8c:	str	r2, [sp, #16]
   1ae90:	ldr	r2, [sp, #20]
   1ae94:	str	r1, [sp, #12]
   1ae98:	mov	r0, r6
   1ae9c:	mov	r1, r4
   1aea0:	bl	19cfc <__assert_fail@plt+0x89f4>
   1aea4:	ldr	r0, [sp, #24]
   1aea8:	ldr	r1, [sp, #32]
   1aeac:	ldr	r2, [sp, #28]
   1aeb0:	cmp	r0, #0
   1aeb4:	str	r1, [r2]
   1aeb8:	strne	r5, [r0]
   1aebc:	mov	r0, r6
   1aec0:	sub	sp, fp, #28
   1aec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aec8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1aecc:	add	fp, sp, #24
   1aed0:	movw	r5, #61724	; 0xf11c
   1aed4:	movw	r8, #61720	; 0xf118
   1aed8:	movt	r5, #2
   1aedc:	movt	r8, #2
   1aee0:	ldr	r0, [r5]
   1aee4:	ldr	r4, [r8]
   1aee8:	cmp	r0, #2
   1aeec:	blt	1af18 <__assert_fail@plt+0x9c10>
   1aef0:	add	r7, r4, #12
   1aef4:	mov	r6, #0
   1aef8:	ldr	r0, [r7, r6, lsl #3]
   1aefc:	bl	199f0 <__assert_fail@plt+0x86e8>
   1af00:	ldr	r1, [r5]
   1af04:	add	r2, r6, #2
   1af08:	add	r0, r6, #1
   1af0c:	mov	r6, r0
   1af10:	cmp	r2, r1
   1af14:	blt	1aef8 <__assert_fail@plt+0x9bf0>
   1af18:	ldr	r0, [r4, #4]
   1af1c:	movw	r9, #61912	; 0xf1d8
   1af20:	movw	r7, #61728	; 0xf120
   1af24:	movt	r9, #2
   1af28:	movt	r7, #2
   1af2c:	cmp	r0, r9
   1af30:	beq	1af40 <__assert_fail@plt+0x9c38>
   1af34:	bl	199f0 <__assert_fail@plt+0x86e8>
   1af38:	mov	r0, #256	; 0x100
   1af3c:	stm	r7, {r0, r9}
   1af40:	cmp	r4, r7
   1af44:	beq	1af54 <__assert_fail@plt+0x9c4c>
   1af48:	mov	r0, r4
   1af4c:	bl	199f0 <__assert_fail@plt+0x86e8>
   1af50:	str	r7, [r8]
   1af54:	mov	r0, #1
   1af58:	str	r0, [r5]
   1af5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1af60:	movw	r3, #61864	; 0xf1a8
   1af64:	mvn	r2, #0
   1af68:	movt	r3, #2
   1af6c:	b	1af70 <__assert_fail@plt+0x9c68>
   1af70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af74:	add	fp, sp, #28
   1af78:	sub	sp, sp, #44	; 0x2c
   1af7c:	mov	r7, r3
   1af80:	str	r2, [sp, #36]	; 0x24
   1af84:	str	r1, [sp, #32]
   1af88:	mov	r5, r0
   1af8c:	bl	1120c <__errno_location@plt>
   1af90:	cmp	r5, #0
   1af94:	bmi	1b104 <__assert_fail@plt+0x9dfc>
   1af98:	cmn	r5, #-2147483647	; 0x80000001
   1af9c:	beq	1b104 <__assert_fail@plt+0x9dfc>
   1afa0:	movw	r8, #61724	; 0xf11c
   1afa4:	movw	r4, #61720	; 0xf118
   1afa8:	str	r0, [sp, #28]
   1afac:	ldr	r0, [r0]
   1afb0:	movt	r8, #2
   1afb4:	movt	r4, #2
   1afb8:	ldr	r1, [r8]
   1afbc:	ldr	r6, [r4]
   1afc0:	str	r0, [sp, #24]
   1afc4:	cmp	r1, r5
   1afc8:	ble	1afd4 <__assert_fail@plt+0x9ccc>
   1afcc:	mov	sl, r6
   1afd0:	b	1b040 <__assert_fail@plt+0x9d38>
   1afd4:	movw	r9, #61728	; 0xf120
   1afd8:	mov	r0, #8
   1afdc:	str	r1, [fp, #-32]	; 0xffffffe0
   1afe0:	sub	r1, r5, r1
   1afe4:	mvn	r3, #-2147483648	; 0x80000000
   1afe8:	movt	r9, #2
   1afec:	str	r0, [sp]
   1aff0:	add	r2, r1, #1
   1aff4:	sub	r1, fp, #32
   1aff8:	subs	r0, r6, r9
   1affc:	movne	r0, r6
   1b000:	bl	1c154 <__assert_fail@plt+0xae4c>
   1b004:	mov	sl, r0
   1b008:	cmp	r6, r9
   1b00c:	str	r0, [r4]
   1b010:	bne	1b01c <__assert_fail@plt+0x9d14>
   1b014:	ldrd	r0, [r9]
   1b018:	stm	sl, {r0, r1}
   1b01c:	ldr	r1, [r8]
   1b020:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b024:	add	r0, sl, r1, lsl #3
   1b028:	sub	r1, r2, r1
   1b02c:	lsl	r2, r1, #3
   1b030:	mov	r1, #0
   1b034:	bl	11230 <memset@plt>
   1b038:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b03c:	str	r0, [r8]
   1b040:	mov	r9, sl
   1b044:	ldm	r7, {r0, r1}
   1b048:	orr	r8, r1, #1
   1b04c:	add	r1, r7, #8
   1b050:	ldr	r2, [r7, #40]	; 0x28
   1b054:	ldr	r3, [r7, #44]	; 0x2c
   1b058:	ldr	r6, [r9, r5, lsl #3]!
   1b05c:	str	r1, [sp, #20]
   1b060:	ldr	r4, [r9, #4]!
   1b064:	stm	sp, {r0, r8}
   1b068:	add	r0, sp, #8
   1b06c:	stm	r0, {r1, r2, r3}
   1b070:	ldr	r2, [sp, #32]
   1b074:	ldr	r3, [sp, #36]	; 0x24
   1b078:	mov	r1, r6
   1b07c:	mov	r0, r4
   1b080:	bl	19cfc <__assert_fail@plt+0x89f4>
   1b084:	cmp	r6, r0
   1b088:	bhi	1b0ec <__assert_fail@plt+0x9de4>
   1b08c:	add	r6, r0, #1
   1b090:	movw	r0, #61912	; 0xf1d8
   1b094:	movt	r0, #2
   1b098:	str	r6, [sl, r5, lsl #3]
   1b09c:	cmp	r4, r0
   1b0a0:	beq	1b0ac <__assert_fail@plt+0x9da4>
   1b0a4:	mov	r0, r4
   1b0a8:	bl	199f0 <__assert_fail@plt+0x86e8>
   1b0ac:	mov	r0, r6
   1b0b0:	bl	1bf54 <__assert_fail@plt+0xac4c>
   1b0b4:	str	r0, [r9]
   1b0b8:	mov	r4, r0
   1b0bc:	add	r3, sp, #8
   1b0c0:	ldr	r0, [r7]
   1b0c4:	ldr	r1, [r7, #40]	; 0x28
   1b0c8:	ldr	r2, [r7, #44]	; 0x2c
   1b0cc:	stm	sp, {r0, r8}
   1b0d0:	ldr	r0, [sp, #20]
   1b0d4:	stm	r3, {r0, r1, r2}
   1b0d8:	ldr	r2, [sp, #32]
   1b0dc:	ldr	r3, [sp, #36]	; 0x24
   1b0e0:	mov	r0, r4
   1b0e4:	mov	r1, r6
   1b0e8:	bl	19cfc <__assert_fail@plt+0x89f4>
   1b0ec:	ldr	r0, [sp, #28]
   1b0f0:	ldr	r1, [sp, #24]
   1b0f4:	str	r1, [r0]
   1b0f8:	mov	r0, r4
   1b0fc:	sub	sp, fp, #28
   1b100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b104:	bl	112e4 <abort@plt>
   1b108:	movw	r3, #61864	; 0xf1a8
   1b10c:	movt	r3, #2
   1b110:	b	1af70 <__assert_fail@plt+0x9c68>
   1b114:	movw	r3, #61864	; 0xf1a8
   1b118:	mov	r1, r0
   1b11c:	mov	r0, #0
   1b120:	mvn	r2, #0
   1b124:	movt	r3, #2
   1b128:	b	1af70 <__assert_fail@plt+0x9c68>
   1b12c:	movw	r3, #61864	; 0xf1a8
   1b130:	mov	r2, r1
   1b134:	mov	r1, r0
   1b138:	mov	r0, #0
   1b13c:	movt	r3, #2
   1b140:	b	1af70 <__assert_fail@plt+0x9c68>
   1b144:	push	{fp, lr}
   1b148:	mov	fp, sp
   1b14c:	sub	sp, sp, #48	; 0x30
   1b150:	vmov.i32	q8, #0	; 0x00000000
   1b154:	mov	ip, #32
   1b158:	mov	r3, sp
   1b15c:	mov	lr, r2
   1b160:	cmp	r1, #10
   1b164:	add	r2, r3, #16
   1b168:	vst1.64	{d16-d17}, [r3], ip
   1b16c:	vst1.64	{d16-d17}, [r2]
   1b170:	vst1.64	{d16-d17}, [r3]
   1b174:	beq	1b194 <__assert_fail@plt+0x9e8c>
   1b178:	str	r1, [sp]
   1b17c:	mov	r3, sp
   1b180:	mov	r1, lr
   1b184:	mvn	r2, #0
   1b188:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b18c:	mov	sp, fp
   1b190:	pop	{fp, pc}
   1b194:	bl	112e4 <abort@plt>
   1b198:	push	{r4, sl, fp, lr}
   1b19c:	add	fp, sp, #8
   1b1a0:	sub	sp, sp, #48	; 0x30
   1b1a4:	vmov.i32	q8, #0	; 0x00000000
   1b1a8:	mov	ip, r3
   1b1ac:	mov	r3, sp
   1b1b0:	mov	lr, #32
   1b1b4:	cmp	r1, #10
   1b1b8:	add	r4, r3, #16
   1b1bc:	vst1.64	{d16-d17}, [r3], lr
   1b1c0:	vst1.64	{d16-d17}, [r4]
   1b1c4:	vst1.64	{d16-d17}, [r3]
   1b1c8:	beq	1b1e8 <__assert_fail@plt+0x9ee0>
   1b1cc:	str	r1, [sp]
   1b1d0:	mov	r1, r2
   1b1d4:	mov	r3, sp
   1b1d8:	mov	r2, ip
   1b1dc:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b1e0:	sub	sp, fp, #8
   1b1e4:	pop	{r4, sl, fp, pc}
   1b1e8:	bl	112e4 <abort@plt>
   1b1ec:	push	{fp, lr}
   1b1f0:	mov	fp, sp
   1b1f4:	sub	sp, sp, #48	; 0x30
   1b1f8:	vmov.i32	q8, #0	; 0x00000000
   1b1fc:	mov	r3, sp
   1b200:	mov	ip, #32
   1b204:	cmp	r0, #10
   1b208:	add	r2, r3, #16
   1b20c:	vst1.64	{d16-d17}, [r3], ip
   1b210:	vst1.64	{d16-d17}, [r2]
   1b214:	vst1.64	{d16-d17}, [r3]
   1b218:	beq	1b238 <__assert_fail@plt+0x9f30>
   1b21c:	str	r0, [sp]
   1b220:	mov	r3, sp
   1b224:	mov	r0, #0
   1b228:	mvn	r2, #0
   1b22c:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b230:	mov	sp, fp
   1b234:	pop	{fp, pc}
   1b238:	bl	112e4 <abort@plt>
   1b23c:	push	{fp, lr}
   1b240:	mov	fp, sp
   1b244:	sub	sp, sp, #48	; 0x30
   1b248:	vmov.i32	q8, #0	; 0x00000000
   1b24c:	mov	r3, sp
   1b250:	mov	ip, #32
   1b254:	cmp	r0, #10
   1b258:	add	lr, r3, #16
   1b25c:	vst1.64	{d16-d17}, [r3], ip
   1b260:	vst1.64	{d16-d17}, [lr]
   1b264:	vst1.64	{d16-d17}, [r3]
   1b268:	beq	1b284 <__assert_fail@plt+0x9f7c>
   1b26c:	str	r0, [sp]
   1b270:	mov	r3, sp
   1b274:	mov	r0, #0
   1b278:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b27c:	mov	sp, fp
   1b280:	pop	{fp, pc}
   1b284:	bl	112e4 <abort@plt>
   1b288:	push	{r4, sl, fp, lr}
   1b28c:	add	fp, sp, #8
   1b290:	sub	sp, sp, #48	; 0x30
   1b294:	mov	lr, r0
   1b298:	movw	r0, #61864	; 0xf1a8
   1b29c:	mov	ip, r1
   1b2a0:	mov	r1, #32
   1b2a4:	mov	r4, #1
   1b2a8:	movt	r0, #2
   1b2ac:	add	r3, r0, #16
   1b2b0:	vld1.64	{d16-d17}, [r0], r1
   1b2b4:	vld1.64	{d20-d21}, [r0]
   1b2b8:	vld1.64	{d18-d19}, [r3]
   1b2bc:	mov	r3, sp
   1b2c0:	add	r0, r3, #32
   1b2c4:	add	r1, r3, #16
   1b2c8:	vst1.64	{d20-d21}, [r0]
   1b2cc:	mov	r0, #28
   1b2d0:	vst1.64	{d18-d19}, [r1]
   1b2d4:	mov	r1, r3
   1b2d8:	and	r0, r0, r2, lsr #3
   1b2dc:	and	r2, r2, #31
   1b2e0:	vst1.64	{d16-d17}, [r1], r0
   1b2e4:	ldr	r0, [r1, #8]
   1b2e8:	bic	r4, r4, r0, lsr r2
   1b2ec:	eor	r0, r0, r4, lsl r2
   1b2f0:	mov	r2, ip
   1b2f4:	str	r0, [r1, #8]
   1b2f8:	mov	r0, #0
   1b2fc:	mov	r1, lr
   1b300:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b304:	sub	sp, fp, #8
   1b308:	pop	{r4, sl, fp, pc}
   1b30c:	push	{fp, lr}
   1b310:	mov	fp, sp
   1b314:	sub	sp, sp, #48	; 0x30
   1b318:	mov	ip, r0
   1b31c:	movw	r0, #61864	; 0xf1a8
   1b320:	mov	r2, #32
   1b324:	movt	r0, #2
   1b328:	add	r3, r0, #16
   1b32c:	vld1.64	{d16-d17}, [r0], r2
   1b330:	vld1.64	{d20-d21}, [r0]
   1b334:	vld1.64	{d18-d19}, [r3]
   1b338:	mov	r3, sp
   1b33c:	add	r0, r3, #32
   1b340:	add	r2, r3, #16
   1b344:	vst1.64	{d20-d21}, [r0]
   1b348:	mov	r0, #28
   1b34c:	vst1.64	{d18-d19}, [r2]
   1b350:	mov	r2, r3
   1b354:	and	r0, r0, r1, lsr #3
   1b358:	and	r1, r1, #31
   1b35c:	vst1.64	{d16-d17}, [r2], r0
   1b360:	mov	r0, #1
   1b364:	ldr	lr, [r2, #8]
   1b368:	bic	r0, r0, lr, lsr r1
   1b36c:	eor	r0, lr, r0, lsl r1
   1b370:	mov	r1, ip
   1b374:	str	r0, [r2, #8]
   1b378:	mov	r0, #0
   1b37c:	mvn	r2, #0
   1b380:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b384:	mov	sp, fp
   1b388:	pop	{fp, pc}
   1b38c:	push	{fp, lr}
   1b390:	mov	fp, sp
   1b394:	sub	sp, sp, #48	; 0x30
   1b398:	mov	r1, r0
   1b39c:	movw	r0, #61864	; 0xf1a8
   1b3a0:	mov	r3, #32
   1b3a4:	movt	r0, #2
   1b3a8:	add	r2, r0, #16
   1b3ac:	vld1.64	{d16-d17}, [r0], r3
   1b3b0:	mov	r3, sp
   1b3b4:	vld1.64	{d18-d19}, [r2]
   1b3b8:	vld1.64	{d20-d21}, [r0]
   1b3bc:	add	r2, r3, #16
   1b3c0:	add	r0, r3, #32
   1b3c4:	vst1.64	{d18-d19}, [r2]
   1b3c8:	vst1.64	{d20-d21}, [r0]
   1b3cc:	mov	r0, #12
   1b3d0:	mov	r2, r3
   1b3d4:	vst1.64	{d16-d17}, [r2], r0
   1b3d8:	ldr	r0, [r2]
   1b3dc:	orr	r0, r0, #67108864	; 0x4000000
   1b3e0:	str	r0, [r2]
   1b3e4:	mov	r0, #0
   1b3e8:	mvn	r2, #0
   1b3ec:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b3f0:	mov	sp, fp
   1b3f4:	pop	{fp, pc}
   1b3f8:	push	{fp, lr}
   1b3fc:	mov	fp, sp
   1b400:	sub	sp, sp, #48	; 0x30
   1b404:	mov	ip, r1
   1b408:	mov	r1, r0
   1b40c:	movw	r0, #61864	; 0xf1a8
   1b410:	mov	r2, #32
   1b414:	movt	r0, #2
   1b418:	add	r3, r0, #16
   1b41c:	vld1.64	{d16-d17}, [r0], r2
   1b420:	vld1.64	{d18-d19}, [r3]
   1b424:	vld1.64	{d20-d21}, [r0]
   1b428:	mov	r3, sp
   1b42c:	add	r2, r3, #16
   1b430:	add	r0, r3, #32
   1b434:	vst1.64	{d18-d19}, [r2]
   1b438:	vst1.64	{d20-d21}, [r0]
   1b43c:	mov	r0, #12
   1b440:	mov	r2, r3
   1b444:	vst1.64	{d16-d17}, [r2], r0
   1b448:	ldr	r0, [r2]
   1b44c:	orr	r0, r0, #67108864	; 0x4000000
   1b450:	str	r0, [r2]
   1b454:	mov	r0, #0
   1b458:	mov	r2, ip
   1b45c:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b460:	mov	sp, fp
   1b464:	pop	{fp, pc}
   1b468:	push	{r4, sl, fp, lr}
   1b46c:	add	fp, sp, #8
   1b470:	sub	sp, sp, #96	; 0x60
   1b474:	vmov.i32	q8, #0	; 0x00000000
   1b478:	mov	ip, r2
   1b47c:	mov	r2, sp
   1b480:	mov	r4, #28
   1b484:	cmp	r1, #10
   1b488:	mov	r3, r2
   1b48c:	add	lr, r2, #16
   1b490:	vst1.64	{d16-d17}, [r3], r4
   1b494:	vst1.64	{d16-d17}, [lr]
   1b498:	vst1.32	{d16-d17}, [r3]
   1b49c:	beq	1b4ec <__assert_fail@plt+0xa1e4>
   1b4a0:	vld1.64	{d16-d17}, [r2], r4
   1b4a4:	vld1.64	{d18-d19}, [lr]
   1b4a8:	add	r3, sp, #48	; 0x30
   1b4ac:	vld1.32	{d20-d21}, [r2]
   1b4b0:	add	r2, r3, #20
   1b4b4:	add	r4, r3, #4
   1b4b8:	vst1.32	{d18-d19}, [r2]
   1b4bc:	add	r2, r3, #32
   1b4c0:	vst1.32	{d16-d17}, [r4]
   1b4c4:	vst1.32	{d20-d21}, [r2]
   1b4c8:	str	r1, [sp, #48]	; 0x30
   1b4cc:	mvn	r2, #0
   1b4d0:	ldr	r1, [sp, #60]	; 0x3c
   1b4d4:	orr	r1, r1, #67108864	; 0x4000000
   1b4d8:	str	r1, [sp, #60]	; 0x3c
   1b4dc:	mov	r1, ip
   1b4e0:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b4e4:	sub	sp, fp, #8
   1b4e8:	pop	{r4, sl, fp, pc}
   1b4ec:	bl	112e4 <abort@plt>
   1b4f0:	push	{r4, r5, r6, sl, fp, lr}
   1b4f4:	add	fp, sp, #16
   1b4f8:	sub	sp, sp, #48	; 0x30
   1b4fc:	mov	ip, r3
   1b500:	movw	r3, #61864	; 0xf1a8
   1b504:	mov	r6, #32
   1b508:	cmp	r1, #0
   1b50c:	mov	r4, sp
   1b510:	movt	r3, #2
   1b514:	cmpne	r2, #0
   1b518:	add	r5, r4, #16
   1b51c:	add	lr, r3, #16
   1b520:	vld1.64	{d16-d17}, [r3], r6
   1b524:	vld1.64	{d18-d19}, [lr]
   1b528:	vld1.64	{d20-d21}, [r3]
   1b52c:	mov	r3, #10
   1b530:	vst1.64	{d16-d17}, [r4], r6
   1b534:	vst1.64	{d18-d19}, [r5]
   1b538:	vst1.64	{d20-d21}, [r4]
   1b53c:	str	r3, [sp]
   1b540:	bne	1b548 <__assert_fail@plt+0xa240>
   1b544:	bl	112e4 <abort@plt>
   1b548:	str	r2, [sp, #44]	; 0x2c
   1b54c:	str	r1, [sp, #40]	; 0x28
   1b550:	mov	r3, sp
   1b554:	mov	r1, ip
   1b558:	mvn	r2, #0
   1b55c:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b560:	sub	sp, fp, #16
   1b564:	pop	{r4, r5, r6, sl, fp, pc}
   1b568:	push	{r4, r5, r6, sl, fp, lr}
   1b56c:	add	fp, sp, #16
   1b570:	sub	sp, sp, #48	; 0x30
   1b574:	mov	lr, r3
   1b578:	movw	r3, #61864	; 0xf1a8
   1b57c:	mov	r6, #32
   1b580:	cmp	r1, #0
   1b584:	mov	r4, sp
   1b588:	movt	r3, #2
   1b58c:	cmpne	r2, #0
   1b590:	add	r5, r4, #16
   1b594:	add	ip, r3, #16
   1b598:	vld1.64	{d16-d17}, [r3], r6
   1b59c:	vld1.64	{d18-d19}, [ip]
   1b5a0:	vld1.64	{d20-d21}, [r3]
   1b5a4:	mov	r3, #10
   1b5a8:	vst1.64	{d16-d17}, [r4], r6
   1b5ac:	vst1.64	{d18-d19}, [r5]
   1b5b0:	vst1.64	{d20-d21}, [r4]
   1b5b4:	str	r3, [sp]
   1b5b8:	bne	1b5c0 <__assert_fail@plt+0xa2b8>
   1b5bc:	bl	112e4 <abort@plt>
   1b5c0:	ldr	ip, [fp, #8]
   1b5c4:	str	r2, [sp, #44]	; 0x2c
   1b5c8:	str	r1, [sp, #40]	; 0x28
   1b5cc:	mov	r3, sp
   1b5d0:	mov	r1, lr
   1b5d4:	mov	r2, ip
   1b5d8:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b5dc:	sub	sp, fp, #16
   1b5e0:	pop	{r4, r5, r6, sl, fp, pc}
   1b5e4:	push	{r4, sl, fp, lr}
   1b5e8:	add	fp, sp, #8
   1b5ec:	sub	sp, sp, #48	; 0x30
   1b5f0:	movw	r3, #61864	; 0xf1a8
   1b5f4:	mov	lr, #32
   1b5f8:	mov	ip, r2
   1b5fc:	cmp	r0, #0
   1b600:	movt	r3, #2
   1b604:	cmpne	r1, #0
   1b608:	add	r2, r3, #16
   1b60c:	vld1.64	{d16-d17}, [r3], lr
   1b610:	vld1.64	{d20-d21}, [r3]
   1b614:	vld1.64	{d18-d19}, [r2]
   1b618:	mov	r2, sp
   1b61c:	add	r4, r2, #16
   1b620:	vst1.64	{d16-d17}, [r2], lr
   1b624:	vst1.64	{d20-d21}, [r2]
   1b628:	mov	r2, #10
   1b62c:	vst1.64	{d18-d19}, [r4]
   1b630:	str	r2, [sp]
   1b634:	bne	1b63c <__assert_fail@plt+0xa334>
   1b638:	bl	112e4 <abort@plt>
   1b63c:	str	r1, [sp, #44]	; 0x2c
   1b640:	str	r0, [sp, #40]	; 0x28
   1b644:	mov	r3, sp
   1b648:	mov	r0, #0
   1b64c:	mov	r1, ip
   1b650:	mvn	r2, #0
   1b654:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b658:	sub	sp, fp, #8
   1b65c:	pop	{r4, sl, fp, pc}
   1b660:	push	{r4, r5, fp, lr}
   1b664:	add	fp, sp, #8
   1b668:	sub	sp, sp, #48	; 0x30
   1b66c:	mov	ip, r3
   1b670:	movw	r3, #61864	; 0xf1a8
   1b674:	mov	r4, #32
   1b678:	mov	lr, r2
   1b67c:	cmp	r0, #0
   1b680:	movt	r3, #2
   1b684:	cmpne	r1, #0
   1b688:	add	r2, r3, #16
   1b68c:	vld1.64	{d16-d17}, [r3], r4
   1b690:	vld1.64	{d20-d21}, [r3]
   1b694:	vld1.64	{d18-d19}, [r2]
   1b698:	mov	r2, sp
   1b69c:	add	r5, r2, #16
   1b6a0:	vst1.64	{d16-d17}, [r2], r4
   1b6a4:	vst1.64	{d20-d21}, [r2]
   1b6a8:	mov	r2, #10
   1b6ac:	vst1.64	{d18-d19}, [r5]
   1b6b0:	str	r2, [sp]
   1b6b4:	bne	1b6bc <__assert_fail@plt+0xa3b4>
   1b6b8:	bl	112e4 <abort@plt>
   1b6bc:	str	r1, [sp, #44]	; 0x2c
   1b6c0:	str	r0, [sp, #40]	; 0x28
   1b6c4:	mov	r3, sp
   1b6c8:	mov	r0, #0
   1b6cc:	mov	r1, lr
   1b6d0:	mov	r2, ip
   1b6d4:	bl	1af70 <__assert_fail@plt+0x9c68>
   1b6d8:	sub	sp, fp, #8
   1b6dc:	pop	{r4, r5, fp, pc}
   1b6e0:	movw	r3, #61736	; 0xf128
   1b6e4:	movt	r3, #2
   1b6e8:	b	1af70 <__assert_fail@plt+0x9c68>
   1b6ec:	movw	r3, #61736	; 0xf128
   1b6f0:	mov	r2, r1
   1b6f4:	mov	r1, r0
   1b6f8:	mov	r0, #0
   1b6fc:	movt	r3, #2
   1b700:	b	1af70 <__assert_fail@plt+0x9c68>
   1b704:	movw	r3, #61736	; 0xf128
   1b708:	mvn	r2, #0
   1b70c:	movt	r3, #2
   1b710:	b	1af70 <__assert_fail@plt+0x9c68>
   1b714:	movw	r3, #61736	; 0xf128
   1b718:	mov	r1, r0
   1b71c:	mov	r0, #0
   1b720:	mvn	r2, #0
   1b724:	movt	r3, #2
   1b728:	b	1af70 <__assert_fail@plt+0x9c68>
   1b72c:	push	{r4, r5, fp, lr}
   1b730:	add	fp, sp, #8
   1b734:	mov	r5, r0
   1b738:	mov	r4, r1
   1b73c:	mov	r0, #0
   1b740:	mov	r2, #5
   1b744:	mov	r1, r5
   1b748:	bl	110f8 <dcgettext@plt>
   1b74c:	cmp	r0, r5
   1b750:	popne	{r4, r5, fp, pc}
   1b754:	bl	1d57c <__assert_fail@plt+0xc274>
   1b758:	ldrb	r1, [r0]
   1b75c:	and	r1, r1, #223	; 0xdf
   1b760:	cmp	r1, #71	; 0x47
   1b764:	beq	1b7cc <__assert_fail@plt+0xa4c4>
   1b768:	cmp	r1, #85	; 0x55
   1b76c:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b770:	ldrb	r1, [r0, #1]
   1b774:	and	r1, r1, #223	; 0xdf
   1b778:	cmp	r1, #84	; 0x54
   1b77c:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b780:	ldrb	r1, [r0, #2]
   1b784:	and	r1, r1, #223	; 0xdf
   1b788:	cmp	r1, #70	; 0x46
   1b78c:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b790:	ldrb	r1, [r0, #3]
   1b794:	cmp	r1, #45	; 0x2d
   1b798:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b79c:	ldrb	r1, [r0, #4]
   1b7a0:	cmp	r1, #56	; 0x38
   1b7a4:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b7a8:	ldrb	r0, [r0, #5]
   1b7ac:	cmp	r0, #0
   1b7b0:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b7b4:	ldrb	r1, [r5]
   1b7b8:	movw	r2, #59500	; 0xe86c
   1b7bc:	movw	r0, #59504	; 0xe870
   1b7c0:	movt	r2, #1
   1b7c4:	movt	r0, #1
   1b7c8:	b	1b854 <__assert_fail@plt+0xa54c>
   1b7cc:	ldrb	r1, [r0, #1]
   1b7d0:	and	r1, r1, #223	; 0xdf
   1b7d4:	cmp	r1, #66	; 0x42
   1b7d8:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b7dc:	ldrb	r1, [r0, #2]
   1b7e0:	cmp	r1, #49	; 0x31
   1b7e4:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b7e8:	ldrb	r1, [r0, #3]
   1b7ec:	cmp	r1, #56	; 0x38
   1b7f0:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b7f4:	ldrb	r1, [r0, #4]
   1b7f8:	cmp	r1, #48	; 0x30
   1b7fc:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b800:	ldrb	r1, [r0, #5]
   1b804:	cmp	r1, #51	; 0x33
   1b808:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b80c:	ldrb	r1, [r0, #6]
   1b810:	cmp	r1, #48	; 0x30
   1b814:	bne	1b824 <__assert_fail@plt+0xa51c>
   1b818:	ldrb	r0, [r0, #7]
   1b81c:	cmp	r0, #0
   1b820:	beq	1b840 <__assert_fail@plt+0xa538>
   1b824:	movw	r1, #59494	; 0xe866
   1b828:	movw	r0, #59498	; 0xe86a
   1b82c:	cmp	r4, #9
   1b830:	movt	r1, #1
   1b834:	movt	r0, #1
   1b838:	moveq	r0, r1
   1b83c:	pop	{r4, r5, fp, pc}
   1b840:	ldrb	r1, [r5]
   1b844:	movw	r2, #59508	; 0xe874
   1b848:	movw	r0, #59512	; 0xe878
   1b84c:	movt	r2, #1
   1b850:	movt	r0, #1
   1b854:	cmp	r1, #96	; 0x60
   1b858:	moveq	r0, r2
   1b85c:	pop	{r4, r5, fp, pc}
   1b860:	mov	r1, #0
   1b864:	mov	r2, #3
   1b868:	b	1d39c <__assert_fail@plt+0xc094>
   1b86c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b870:	add	fp, sp, #24
   1b874:	sub	sp, sp, #32
   1b878:	ldr	r6, [fp, #12]
   1b87c:	ldr	r7, [fp, #8]
   1b880:	mov	r4, r2
   1b884:	mov	r8, r0
   1b888:	cmp	r1, #0
   1b88c:	beq	1b8b4 <__assert_fail@plt+0xa5ac>
   1b890:	movw	r2, #59600	; 0xe8d0
   1b894:	mov	r5, r1
   1b898:	str	r3, [sp, #4]
   1b89c:	str	r4, [sp]
   1b8a0:	mov	r0, r8
   1b8a4:	mov	r1, #1
   1b8a8:	movt	r2, #1
   1b8ac:	mov	r3, r5
   1b8b0:	b	1b8cc <__assert_fail@plt+0xa5c4>
   1b8b4:	movw	r2, #59612	; 0xe8dc
   1b8b8:	str	r3, [sp]
   1b8bc:	mov	r0, r8
   1b8c0:	mov	r1, #1
   1b8c4:	mov	r3, r4
   1b8c8:	movt	r2, #1
   1b8cc:	bl	11254 <__fprintf_chk@plt>
   1b8d0:	movw	r1, #59619	; 0xe8e3
   1b8d4:	mov	r0, #0
   1b8d8:	mov	r2, #5
   1b8dc:	movt	r1, #1
   1b8e0:	bl	110f8 <dcgettext@plt>
   1b8e4:	movw	r2, #60337	; 0xebb1
   1b8e8:	mov	r3, r0
   1b8ec:	movw	r0, #2022	; 0x7e6
   1b8f0:	mov	r1, #1
   1b8f4:	movt	r2, #1
   1b8f8:	str	r0, [sp]
   1b8fc:	mov	r0, r8
   1b900:	bl	11254 <__fprintf_chk@plt>
   1b904:	movw	r4, #56698	; 0xdd7a
   1b908:	mov	r1, r8
   1b90c:	movt	r4, #1
   1b910:	mov	r0, r4
   1b914:	bl	11068 <fputs_unlocked@plt>
   1b918:	movw	r1, #59623	; 0xe8e7
   1b91c:	mov	r0, #0
   1b920:	mov	r2, #5
   1b924:	movt	r1, #1
   1b928:	bl	110f8 <dcgettext@plt>
   1b92c:	movw	r3, #59794	; 0xe992
   1b930:	mov	r2, r0
   1b934:	mov	r0, r8
   1b938:	mov	r1, #1
   1b93c:	movt	r3, #1
   1b940:	bl	11254 <__fprintf_chk@plt>
   1b944:	mov	r0, r4
   1b948:	mov	r1, r8
   1b94c:	bl	11068 <fputs_unlocked@plt>
   1b950:	cmp	r6, #9
   1b954:	bhi	1b990 <__assert_fail@plt+0xa688>
   1b958:	add	r0, pc, #0
   1b95c:	ldr	pc, [r0, r6, lsl #2]
   1b960:	andeq	fp, r1, r8, lsl #19
   1b964:	muleq	r1, ip, r9
   1b968:	andeq	fp, r1, ip, asr #19
   1b96c:	strdeq	fp, [r1], -r4
   1b970:	andeq	fp, r1, ip, lsl sl
   1b974:	andeq	fp, r1, r4, asr #20
   1b978:	andeq	fp, r1, ip, ror #20
   1b97c:	andeq	fp, r1, r4, lsr #21
   1b980:	andeq	fp, r1, r4, asr #22
   1b984:	andeq	fp, r1, ip, ror #21
   1b988:	sub	sp, fp, #24
   1b98c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b990:	movw	r1, #60147	; 0xeaf3
   1b994:	movt	r1, #1
   1b998:	b	1baf4 <__assert_fail@plt+0xa7ec>
   1b99c:	movw	r1, #59828	; 0xe9b4
   1b9a0:	mov	r0, #0
   1b9a4:	mov	r2, #5
   1b9a8:	movt	r1, #1
   1b9ac:	bl	110f8 <dcgettext@plt>
   1b9b0:	ldr	r3, [r7]
   1b9b4:	mov	r2, r0
   1b9b8:	mov	r0, r8
   1b9bc:	mov	r1, #1
   1b9c0:	sub	sp, fp, #24
   1b9c4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b9c8:	b	11254 <__fprintf_chk@plt>
   1b9cc:	movw	r1, #59844	; 0xe9c4
   1b9d0:	mov	r0, #0
   1b9d4:	mov	r2, #5
   1b9d8:	movt	r1, #1
   1b9dc:	bl	110f8 <dcgettext@plt>
   1b9e0:	mov	r2, r0
   1b9e4:	ldr	r3, [r7]
   1b9e8:	ldr	r0, [r7, #4]
   1b9ec:	str	r0, [sp]
   1b9f0:	b	1bae0 <__assert_fail@plt+0xa7d8>
   1b9f4:	movw	r1, #59867	; 0xe9db
   1b9f8:	mov	r0, #0
   1b9fc:	mov	r2, #5
   1ba00:	movt	r1, #1
   1ba04:	bl	110f8 <dcgettext@plt>
   1ba08:	mov	r2, r0
   1ba0c:	ldr	r3, [r7]
   1ba10:	ldmib	r7, {r0, r1}
   1ba14:	stm	sp, {r0, r1}
   1ba18:	b	1bae0 <__assert_fail@plt+0xa7d8>
   1ba1c:	movw	r1, #59895	; 0xe9f7
   1ba20:	mov	r0, #0
   1ba24:	mov	r2, #5
   1ba28:	movt	r1, #1
   1ba2c:	bl	110f8 <dcgettext@plt>
   1ba30:	ldr	r3, [r7]
   1ba34:	mov	r2, r0
   1ba38:	ldmib	r7, {r0, r1, r7}
   1ba3c:	stm	sp, {r0, r1, r7}
   1ba40:	b	1bae0 <__assert_fail@plt+0xa7d8>
   1ba44:	movw	r1, #59927	; 0xea17
   1ba48:	mov	r0, #0
   1ba4c:	mov	r2, #5
   1ba50:	movt	r1, #1
   1ba54:	bl	110f8 <dcgettext@plt>
   1ba58:	ldr	r3, [r7]
   1ba5c:	mov	r2, r0
   1ba60:	ldmib	r7, {r0, r1, r6, r7}
   1ba64:	stm	sp, {r0, r1, r6, r7}
   1ba68:	b	1bae0 <__assert_fail@plt+0xa7d8>
   1ba6c:	movw	r1, #59963	; 0xea3b
   1ba70:	mov	r0, #0
   1ba74:	mov	r2, #5
   1ba78:	movt	r1, #1
   1ba7c:	bl	110f8 <dcgettext@plt>
   1ba80:	mov	r2, r0
   1ba84:	ldr	r3, [r7]
   1ba88:	ldmib	r7, {r0, r1, r6}
   1ba8c:	ldr	r5, [r7, #16]
   1ba90:	ldr	r7, [r7, #20]
   1ba94:	stm	sp, {r0, r1, r6}
   1ba98:	str	r5, [sp, #12]
   1ba9c:	str	r7, [sp, #16]
   1baa0:	b	1bae0 <__assert_fail@plt+0xa7d8>
   1baa4:	movw	r1, #60003	; 0xea63
   1baa8:	mov	r0, #0
   1baac:	mov	r2, #5
   1bab0:	movt	r1, #1
   1bab4:	bl	110f8 <dcgettext@plt>
   1bab8:	mov	r2, r0
   1babc:	ldr	r3, [r7]
   1bac0:	ldmib	r7, {r0, r1, r6}
   1bac4:	ldr	r5, [r7, #16]
   1bac8:	ldr	r4, [r7, #20]
   1bacc:	ldr	r7, [r7, #24]
   1bad0:	stm	sp, {r0, r1, r6}
   1bad4:	str	r5, [sp, #12]
   1bad8:	str	r4, [sp, #16]
   1badc:	str	r7, [sp, #20]
   1bae0:	mov	r0, r8
   1bae4:	mov	r1, #1
   1bae8:	b	1bb94 <__assert_fail@plt+0xa88c>
   1baec:	movw	r1, #60095	; 0xeabf
   1baf0:	movt	r1, #1
   1baf4:	mov	r0, #0
   1baf8:	mov	r2, #5
   1bafc:	bl	110f8 <dcgettext@plt>
   1bb00:	mov	ip, r0
   1bb04:	ldr	r3, [r7]
   1bb08:	ldr	r0, [r7, #4]
   1bb0c:	ldr	r1, [r7, #8]
   1bb10:	ldr	r6, [r7, #12]
   1bb14:	ldr	r5, [r7, #16]
   1bb18:	ldr	r4, [r7, #20]
   1bb1c:	ldr	r2, [r7, #24]
   1bb20:	ldr	lr, [r7, #28]
   1bb24:	ldr	r7, [r7, #32]
   1bb28:	stm	sp, {r0, r1, r6}
   1bb2c:	str	r5, [sp, #12]
   1bb30:	str	r4, [sp, #16]
   1bb34:	str	r2, [sp, #20]
   1bb38:	str	lr, [sp, #24]
   1bb3c:	str	r7, [sp, #28]
   1bb40:	b	1bb88 <__assert_fail@plt+0xa880>
   1bb44:	movw	r1, #60047	; 0xea8f
   1bb48:	mov	r0, #0
   1bb4c:	mov	r2, #5
   1bb50:	movt	r1, #1
   1bb54:	bl	110f8 <dcgettext@plt>
   1bb58:	mov	ip, r0
   1bb5c:	ldr	r3, [r7]
   1bb60:	ldmib	r7, {r0, r1, r6}
   1bb64:	ldr	r5, [r7, #16]
   1bb68:	ldr	r4, [r7, #20]
   1bb6c:	ldr	r2, [r7, #24]
   1bb70:	ldr	r7, [r7, #28]
   1bb74:	stm	sp, {r0, r1, r6}
   1bb78:	str	r5, [sp, #12]
   1bb7c:	str	r4, [sp, #16]
   1bb80:	str	r2, [sp, #20]
   1bb84:	str	r7, [sp, #24]
   1bb88:	mov	r0, r8
   1bb8c:	mov	r1, #1
   1bb90:	mov	r2, ip
   1bb94:	bl	11254 <__fprintf_chk@plt>
   1bb98:	sub	sp, fp, #24
   1bb9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bba0:	push	{r4, sl, fp, lr}
   1bba4:	add	fp, sp, #8
   1bba8:	sub	sp, sp, #8
   1bbac:	ldr	ip, [fp, #8]
   1bbb0:	mov	lr, #0
   1bbb4:	ldr	r4, [ip, lr, lsl #2]
   1bbb8:	add	lr, lr, #1
   1bbbc:	cmp	r4, #0
   1bbc0:	bne	1bbb4 <__assert_fail@plt+0xa8ac>
   1bbc4:	sub	r4, lr, #1
   1bbc8:	str	ip, [sp]
   1bbcc:	str	r4, [sp, #4]
   1bbd0:	bl	1b86c <__assert_fail@plt+0xa564>
   1bbd4:	sub	sp, fp, #8
   1bbd8:	pop	{r4, sl, fp, pc}
   1bbdc:	push	{fp, lr}
   1bbe0:	mov	fp, sp
   1bbe4:	sub	sp, sp, #48	; 0x30
   1bbe8:	ldr	ip, [fp, #8]
   1bbec:	ldr	lr, [ip]
   1bbf0:	cmp	lr, #0
   1bbf4:	str	lr, [sp, #8]
   1bbf8:	beq	1bc94 <__assert_fail@plt+0xa98c>
   1bbfc:	ldr	lr, [ip, #4]
   1bc00:	cmp	lr, #0
   1bc04:	str	lr, [sp, #12]
   1bc08:	beq	1bc9c <__assert_fail@plt+0xa994>
   1bc0c:	ldr	lr, [ip, #8]
   1bc10:	cmp	lr, #0
   1bc14:	str	lr, [sp, #16]
   1bc18:	beq	1bca4 <__assert_fail@plt+0xa99c>
   1bc1c:	ldr	lr, [ip, #12]
   1bc20:	cmp	lr, #0
   1bc24:	str	lr, [sp, #20]
   1bc28:	beq	1bcac <__assert_fail@plt+0xa9a4>
   1bc2c:	ldr	lr, [ip, #16]
   1bc30:	cmp	lr, #0
   1bc34:	str	lr, [sp, #24]
   1bc38:	beq	1bcb4 <__assert_fail@plt+0xa9ac>
   1bc3c:	ldr	lr, [ip, #20]
   1bc40:	cmp	lr, #0
   1bc44:	str	lr, [sp, #28]
   1bc48:	beq	1bcbc <__assert_fail@plt+0xa9b4>
   1bc4c:	ldr	lr, [ip, #24]
   1bc50:	cmp	lr, #0
   1bc54:	str	lr, [sp, #32]
   1bc58:	beq	1bcc4 <__assert_fail@plt+0xa9bc>
   1bc5c:	ldr	lr, [ip, #28]
   1bc60:	cmp	lr, #0
   1bc64:	str	lr, [sp, #36]	; 0x24
   1bc68:	beq	1bccc <__assert_fail@plt+0xa9c4>
   1bc6c:	ldr	lr, [ip, #32]
   1bc70:	cmp	lr, #0
   1bc74:	str	lr, [sp, #40]	; 0x28
   1bc78:	beq	1bcd4 <__assert_fail@plt+0xa9cc>
   1bc7c:	ldr	lr, [ip, #36]	; 0x24
   1bc80:	mov	ip, #10
   1bc84:	cmp	lr, #0
   1bc88:	str	lr, [sp, #44]	; 0x2c
   1bc8c:	movweq	ip, #9
   1bc90:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bc94:	mov	ip, #0
   1bc98:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bc9c:	mov	ip, #1
   1bca0:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bca4:	mov	ip, #2
   1bca8:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bcac:	mov	ip, #3
   1bcb0:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bcb4:	mov	ip, #4
   1bcb8:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bcbc:	mov	ip, #5
   1bcc0:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bcc4:	mov	ip, #6
   1bcc8:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bccc:	mov	ip, #7
   1bcd0:	b	1bcd8 <__assert_fail@plt+0xa9d0>
   1bcd4:	mov	ip, #8
   1bcd8:	add	lr, sp, #8
   1bcdc:	str	ip, [sp, #4]
   1bce0:	str	lr, [sp]
   1bce4:	bl	1b86c <__assert_fail@plt+0xa564>
   1bce8:	mov	sp, fp
   1bcec:	pop	{fp, pc}
   1bcf0:	push	{fp, lr}
   1bcf4:	mov	fp, sp
   1bcf8:	sub	sp, sp, #56	; 0x38
   1bcfc:	add	ip, fp, #8
   1bd00:	str	ip, [sp, #12]
   1bd04:	ldr	lr, [fp, #8]
   1bd08:	cmp	lr, #0
   1bd0c:	str	lr, [sp, #16]
   1bd10:	beq	1bdac <__assert_fail@plt+0xaaa4>
   1bd14:	ldr	lr, [ip, #4]
   1bd18:	cmp	lr, #0
   1bd1c:	str	lr, [sp, #20]
   1bd20:	beq	1bdb4 <__assert_fail@plt+0xaaac>
   1bd24:	ldr	lr, [ip, #8]
   1bd28:	cmp	lr, #0
   1bd2c:	str	lr, [sp, #24]
   1bd30:	beq	1bdbc <__assert_fail@plt+0xaab4>
   1bd34:	ldr	lr, [ip, #12]
   1bd38:	cmp	lr, #0
   1bd3c:	str	lr, [sp, #28]
   1bd40:	beq	1bdc4 <__assert_fail@plt+0xaabc>
   1bd44:	ldr	lr, [ip, #16]
   1bd48:	cmp	lr, #0
   1bd4c:	str	lr, [sp, #32]
   1bd50:	beq	1bdcc <__assert_fail@plt+0xaac4>
   1bd54:	ldr	lr, [ip, #20]
   1bd58:	cmp	lr, #0
   1bd5c:	str	lr, [sp, #36]	; 0x24
   1bd60:	beq	1bdd4 <__assert_fail@plt+0xaacc>
   1bd64:	ldr	lr, [ip, #24]
   1bd68:	cmp	lr, #0
   1bd6c:	str	lr, [sp, #40]	; 0x28
   1bd70:	beq	1bddc <__assert_fail@plt+0xaad4>
   1bd74:	ldr	lr, [ip, #28]
   1bd78:	cmp	lr, #0
   1bd7c:	str	lr, [sp, #44]	; 0x2c
   1bd80:	beq	1bde4 <__assert_fail@plt+0xaadc>
   1bd84:	ldr	lr, [ip, #32]
   1bd88:	cmp	lr, #0
   1bd8c:	str	lr, [sp, #48]	; 0x30
   1bd90:	beq	1bdec <__assert_fail@plt+0xaae4>
   1bd94:	ldr	lr, [ip, #36]	; 0x24
   1bd98:	mov	ip, #10
   1bd9c:	cmp	lr, #0
   1bda0:	str	lr, [sp, #52]	; 0x34
   1bda4:	movweq	ip, #9
   1bda8:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bdac:	mov	ip, #0
   1bdb0:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bdb4:	mov	ip, #1
   1bdb8:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bdbc:	mov	ip, #2
   1bdc0:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bdc4:	mov	ip, #3
   1bdc8:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bdcc:	mov	ip, #4
   1bdd0:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bdd4:	mov	ip, #5
   1bdd8:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bddc:	mov	ip, #6
   1bde0:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bde4:	mov	ip, #7
   1bde8:	b	1bdf0 <__assert_fail@plt+0xaae8>
   1bdec:	mov	ip, #8
   1bdf0:	add	lr, sp, #16
   1bdf4:	str	ip, [sp, #4]
   1bdf8:	str	lr, [sp]
   1bdfc:	bl	1b86c <__assert_fail@plt+0xa564>
   1be00:	mov	sp, fp
   1be04:	pop	{fp, pc}
   1be08:	push	{fp, lr}
   1be0c:	mov	fp, sp
   1be10:	movw	r0, #61812	; 0xf174
   1be14:	movt	r0, #2
   1be18:	ldr	r1, [r0]
   1be1c:	movw	r0, #56698	; 0xdd7a
   1be20:	movt	r0, #1
   1be24:	bl	11068 <fputs_unlocked@plt>
   1be28:	movw	r1, #60207	; 0xeb2f
   1be2c:	mov	r0, #0
   1be30:	mov	r2, #5
   1be34:	movt	r1, #1
   1be38:	bl	110f8 <dcgettext@plt>
   1be3c:	movw	r2, #60227	; 0xeb43
   1be40:	mov	r1, r0
   1be44:	mov	r0, #1
   1be48:	movt	r2, #1
   1be4c:	bl	1123c <__printf_chk@plt>
   1be50:	movw	r1, #60249	; 0xeb59
   1be54:	mov	r0, #0
   1be58:	mov	r2, #5
   1be5c:	movt	r1, #1
   1be60:	bl	110f8 <dcgettext@plt>
   1be64:	movw	r2, #57287	; 0xdfc7
   1be68:	movw	r3, #58182	; 0xe346
   1be6c:	mov	r1, r0
   1be70:	mov	r0, #1
   1be74:	movt	r2, #1
   1be78:	movt	r3, #1
   1be7c:	bl	1123c <__printf_chk@plt>
   1be80:	movw	r1, #60269	; 0xeb6d
   1be84:	mov	r0, #0
   1be88:	mov	r2, #5
   1be8c:	movt	r1, #1
   1be90:	bl	110f8 <dcgettext@plt>
   1be94:	movw	r2, #60308	; 0xeb94
   1be98:	mov	r1, r0
   1be9c:	mov	r0, #1
   1bea0:	movt	r2, #1
   1bea4:	pop	{fp, lr}
   1bea8:	b	1123c <__printf_chk@plt>
   1beac:	push	{r4, r5, r6, sl, fp, lr}
   1beb0:	add	fp, sp, #16
   1beb4:	mov	r4, r2
   1beb8:	mov	r5, r1
   1bebc:	mov	r6, r0
   1bec0:	bl	1d618 <__assert_fail@plt+0xc310>
   1bec4:	cmp	r0, #0
   1bec8:	popne	{r4, r5, r6, sl, fp, pc}
   1becc:	cmp	r6, #0
   1bed0:	beq	1bee4 <__assert_fail@plt+0xabdc>
   1bed4:	cmp	r5, #0
   1bed8:	cmpne	r4, #0
   1bedc:	bne	1bee4 <__assert_fail@plt+0xabdc>
   1bee0:	pop	{r4, r5, r6, sl, fp, pc}
   1bee4:	bl	1c460 <__assert_fail@plt+0xb158>
   1bee8:	push	{r4, r5, r6, sl, fp, lr}
   1beec:	add	fp, sp, #16
   1bef0:	mov	r4, r2
   1bef4:	mov	r5, r1
   1bef8:	mov	r6, r0
   1befc:	bl	1d618 <__assert_fail@plt+0xc310>
   1bf00:	cmp	r0, #0
   1bf04:	popne	{r4, r5, r6, sl, fp, pc}
   1bf08:	cmp	r6, #0
   1bf0c:	beq	1bf20 <__assert_fail@plt+0xac18>
   1bf10:	cmp	r5, #0
   1bf14:	cmpne	r4, #0
   1bf18:	bne	1bf20 <__assert_fail@plt+0xac18>
   1bf1c:	pop	{r4, r5, r6, sl, fp, pc}
   1bf20:	bl	1c460 <__assert_fail@plt+0xb158>
   1bf24:	push	{fp, lr}
   1bf28:	mov	fp, sp
   1bf2c:	bl	1d294 <__assert_fail@plt+0xbf8c>
   1bf30:	cmp	r0, #0
   1bf34:	popne	{fp, pc}
   1bf38:	bl	1c460 <__assert_fail@plt+0xb158>
   1bf3c:	push	{fp, lr}
   1bf40:	mov	fp, sp
   1bf44:	bl	1d294 <__assert_fail@plt+0xbf8c>
   1bf48:	cmp	r0, #0
   1bf4c:	popne	{fp, pc}
   1bf50:	bl	1c460 <__assert_fail@plt+0xb158>
   1bf54:	push	{fp, lr}
   1bf58:	mov	fp, sp
   1bf5c:	bl	1d294 <__assert_fail@plt+0xbf8c>
   1bf60:	cmp	r0, #0
   1bf64:	popne	{fp, pc}
   1bf68:	bl	1c460 <__assert_fail@plt+0xb158>
   1bf6c:	push	{r4, r5, fp, lr}
   1bf70:	add	fp, sp, #8
   1bf74:	mov	r4, r1
   1bf78:	mov	r5, r0
   1bf7c:	bl	1d2c4 <__assert_fail@plt+0xbfbc>
   1bf80:	cmp	r0, #0
   1bf84:	popne	{r4, r5, fp, pc}
   1bf88:	cmp	r5, #0
   1bf8c:	beq	1bf9c <__assert_fail@plt+0xac94>
   1bf90:	cmp	r4, #0
   1bf94:	bne	1bf9c <__assert_fail@plt+0xac94>
   1bf98:	pop	{r4, r5, fp, pc}
   1bf9c:	bl	1c460 <__assert_fail@plt+0xb158>
   1bfa0:	push	{fp, lr}
   1bfa4:	mov	fp, sp
   1bfa8:	cmp	r1, #0
   1bfac:	orreq	r1, r1, #1
   1bfb0:	bl	1d2c4 <__assert_fail@plt+0xbfbc>
   1bfb4:	cmp	r0, #0
   1bfb8:	popne	{fp, pc}
   1bfbc:	bl	1c460 <__assert_fail@plt+0xb158>
   1bfc0:	push	{fp, lr}
   1bfc4:	mov	fp, sp
   1bfc8:	clz	r3, r2
   1bfcc:	lsr	ip, r3, #5
   1bfd0:	clz	r3, r1
   1bfd4:	lsr	r3, r3, #5
   1bfd8:	orrs	r3, r3, ip
   1bfdc:	movwne	r1, #1
   1bfe0:	movwne	r2, #1
   1bfe4:	bl	1d618 <__assert_fail@plt+0xc310>
   1bfe8:	cmp	r0, #0
   1bfec:	popne	{fp, pc}
   1bff0:	bl	1c460 <__assert_fail@plt+0xb158>
   1bff4:	push	{fp, lr}
   1bff8:	mov	fp, sp
   1bffc:	mov	r2, r1
   1c000:	mov	r1, r0
   1c004:	mov	r0, #0
   1c008:	bl	1d618 <__assert_fail@plt+0xc310>
   1c00c:	cmp	r0, #0
   1c010:	popne	{fp, pc}
   1c014:	bl	1c460 <__assert_fail@plt+0xb158>
   1c018:	push	{fp, lr}
   1c01c:	mov	fp, sp
   1c020:	mov	r2, r1
   1c024:	mov	r1, r0
   1c028:	clz	r0, r2
   1c02c:	clz	r3, r1
   1c030:	lsr	r0, r0, #5
   1c034:	lsr	r3, r3, #5
   1c038:	orrs	r0, r3, r0
   1c03c:	mov	r0, #0
   1c040:	movwne	r1, #1
   1c044:	movwne	r2, #1
   1c048:	bl	1d618 <__assert_fail@plt+0xc310>
   1c04c:	cmp	r0, #0
   1c050:	popne	{fp, pc}
   1c054:	bl	1c460 <__assert_fail@plt+0xb158>
   1c058:	push	{r4, r5, r6, sl, fp, lr}
   1c05c:	add	fp, sp, #16
   1c060:	ldr	r5, [r1]
   1c064:	mov	r4, r1
   1c068:	mov	r6, r0
   1c06c:	cmp	r0, #0
   1c070:	beq	1c088 <__assert_fail@plt+0xad80>
   1c074:	mov	r0, #1
   1c078:	add	r0, r0, r5, lsr #1
   1c07c:	adds	r5, r5, r0
   1c080:	bcc	1c090 <__assert_fail@plt+0xad88>
   1c084:	b	1c0cc <__assert_fail@plt+0xadc4>
   1c088:	cmp	r5, #0
   1c08c:	movweq	r5, #64	; 0x40
   1c090:	mov	r0, r6
   1c094:	mov	r1, r5
   1c098:	mov	r2, #1
   1c09c:	bl	1d618 <__assert_fail@plt+0xc310>
   1c0a0:	cmp	r5, #0
   1c0a4:	mov	r1, r5
   1c0a8:	movwne	r1, #1
   1c0ac:	cmp	r0, #0
   1c0b0:	bne	1c0c4 <__assert_fail@plt+0xadbc>
   1c0b4:	clz	r2, r6
   1c0b8:	lsr	r2, r2, #5
   1c0bc:	orrs	r1, r2, r1
   1c0c0:	bne	1c0cc <__assert_fail@plt+0xadc4>
   1c0c4:	str	r5, [r4]
   1c0c8:	pop	{r4, r5, r6, sl, fp, pc}
   1c0cc:	bl	1c460 <__assert_fail@plt+0xb158>
   1c0d0:	push	{r4, r5, r6, r7, fp, lr}
   1c0d4:	add	fp, sp, #16
   1c0d8:	ldr	r5, [r1]
   1c0dc:	mov	r6, r2
   1c0e0:	mov	r4, r1
   1c0e4:	mov	r7, r0
   1c0e8:	cmp	r0, #0
   1c0ec:	beq	1c104 <__assert_fail@plt+0xadfc>
   1c0f0:	mov	r0, #1
   1c0f4:	add	r0, r0, r5, lsr #1
   1c0f8:	adds	r5, r5, r0
   1c0fc:	bcc	1c11c <__assert_fail@plt+0xae14>
   1c100:	b	1c150 <__assert_fail@plt+0xae48>
   1c104:	cmp	r5, #0
   1c108:	bne	1c11c <__assert_fail@plt+0xae14>
   1c10c:	mov	r0, #64	; 0x40
   1c110:	cmp	r6, #64	; 0x40
   1c114:	udiv	r5, r0, r6
   1c118:	addhi	r5, r5, #1
   1c11c:	mov	r0, r7
   1c120:	mov	r1, r5
   1c124:	mov	r2, r6
   1c128:	bl	1d618 <__assert_fail@plt+0xc310>
   1c12c:	cmp	r0, #0
   1c130:	bne	1c148 <__assert_fail@plt+0xae40>
   1c134:	cmp	r7, #0
   1c138:	beq	1c150 <__assert_fail@plt+0xae48>
   1c13c:	cmp	r6, #0
   1c140:	cmpne	r5, #0
   1c144:	bne	1c150 <__assert_fail@plt+0xae48>
   1c148:	str	r5, [r4]
   1c14c:	pop	{r4, r5, r6, r7, fp, pc}
   1c150:	bl	1c460 <__assert_fail@plt+0xb158>
   1c154:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c158:	add	fp, sp, #24
   1c15c:	mov	r8, r1
   1c160:	ldr	r1, [r1]
   1c164:	mov	r5, r0
   1c168:	add	r0, r1, r1, asr #1
   1c16c:	cmp	r0, r1
   1c170:	mvnvs	r0, #-2147483648	; 0x80000000
   1c174:	cmp	r0, r3
   1c178:	mov	r7, r0
   1c17c:	movgt	r7, r3
   1c180:	cmn	r3, #1
   1c184:	movle	r7, r0
   1c188:	ldr	r0, [fp, #8]
   1c18c:	cmn	r0, #1
   1c190:	ble	1c1b8 <__assert_fail@plt+0xaeb0>
   1c194:	cmp	r0, #0
   1c198:	beq	1c20c <__assert_fail@plt+0xaf04>
   1c19c:	cmn	r7, #1
   1c1a0:	ble	1c1e0 <__assert_fail@plt+0xaed8>
   1c1a4:	mvn	r4, #-2147483648	; 0x80000000
   1c1a8:	udiv	r6, r4, r0
   1c1ac:	cmp	r6, r7
   1c1b0:	bge	1c20c <__assert_fail@plt+0xaf04>
   1c1b4:	b	1c21c <__assert_fail@plt+0xaf14>
   1c1b8:	cmn	r7, #1
   1c1bc:	ble	1c1fc <__assert_fail@plt+0xaef4>
   1c1c0:	cmn	r0, #1
   1c1c4:	beq	1c20c <__assert_fail@plt+0xaf04>
   1c1c8:	mov	r6, #-2147483648	; 0x80000000
   1c1cc:	mvn	r4, #-2147483648	; 0x80000000
   1c1d0:	sdiv	r6, r6, r0
   1c1d4:	cmp	r6, r7
   1c1d8:	bge	1c20c <__assert_fail@plt+0xaf04>
   1c1dc:	b	1c21c <__assert_fail@plt+0xaf14>
   1c1e0:	beq	1c20c <__assert_fail@plt+0xaf04>
   1c1e4:	mov	r6, #-2147483648	; 0x80000000
   1c1e8:	mvn	r4, #-2147483648	; 0x80000000
   1c1ec:	sdiv	r6, r6, r7
   1c1f0:	cmp	r6, r0
   1c1f4:	bge	1c20c <__assert_fail@plt+0xaf04>
   1c1f8:	b	1c21c <__assert_fail@plt+0xaf14>
   1c1fc:	mvn	r4, #-2147483648	; 0x80000000
   1c200:	sdiv	r6, r4, r0
   1c204:	cmp	r7, r6
   1c208:	blt	1c21c <__assert_fail@plt+0xaf14>
   1c20c:	mul	r6, r7, r0
   1c210:	mov	r4, #64	; 0x40
   1c214:	cmp	r6, #63	; 0x3f
   1c218:	bgt	1c224 <__assert_fail@plt+0xaf1c>
   1c21c:	sdiv	r7, r4, r0
   1c220:	mul	r6, r7, r0
   1c224:	cmp	r5, #0
   1c228:	moveq	r4, #0
   1c22c:	streq	r4, [r8]
   1c230:	sub	r4, r7, r1
   1c234:	cmp	r4, r2
   1c238:	bge	1c2e4 <__assert_fail@plt+0xafdc>
   1c23c:	add	r7, r1, r2
   1c240:	mov	r6, #0
   1c244:	mov	r2, #0
   1c248:	cmp	r7, r3
   1c24c:	movwgt	r6, #1
   1c250:	cmn	r3, #1
   1c254:	movwgt	r2, #1
   1c258:	cmp	r7, r1
   1c25c:	bvs	1c318 <__assert_fail@plt+0xb010>
   1c260:	ands	r1, r2, r6
   1c264:	bne	1c318 <__assert_fail@plt+0xb010>
   1c268:	cmn	r0, #1
   1c26c:	ble	1c294 <__assert_fail@plt+0xaf8c>
   1c270:	cmp	r0, #0
   1c274:	beq	1c2e0 <__assert_fail@plt+0xafd8>
   1c278:	cmn	r7, #1
   1c27c:	ble	1c2b8 <__assert_fail@plt+0xafb0>
   1c280:	mvn	r1, #-2147483648	; 0x80000000
   1c284:	udiv	r1, r1, r0
   1c288:	cmp	r1, r7
   1c28c:	bge	1c2e0 <__assert_fail@plt+0xafd8>
   1c290:	b	1c318 <__assert_fail@plt+0xb010>
   1c294:	cmn	r7, #1
   1c298:	ble	1c2d0 <__assert_fail@plt+0xafc8>
   1c29c:	cmn	r0, #1
   1c2a0:	beq	1c2e0 <__assert_fail@plt+0xafd8>
   1c2a4:	mov	r1, #-2147483648	; 0x80000000
   1c2a8:	sdiv	r1, r1, r0
   1c2ac:	cmp	r1, r7
   1c2b0:	bge	1c2e0 <__assert_fail@plt+0xafd8>
   1c2b4:	b	1c318 <__assert_fail@plt+0xb010>
   1c2b8:	beq	1c2e0 <__assert_fail@plt+0xafd8>
   1c2bc:	mov	r1, #-2147483648	; 0x80000000
   1c2c0:	sdiv	r1, r1, r7
   1c2c4:	cmp	r1, r0
   1c2c8:	bge	1c2e0 <__assert_fail@plt+0xafd8>
   1c2cc:	b	1c318 <__assert_fail@plt+0xb010>
   1c2d0:	mvn	r1, #-2147483648	; 0x80000000
   1c2d4:	sdiv	r1, r1, r0
   1c2d8:	cmp	r7, r1
   1c2dc:	blt	1c318 <__assert_fail@plt+0xb010>
   1c2e0:	mul	r6, r7, r0
   1c2e4:	mov	r0, r5
   1c2e8:	mov	r1, r6
   1c2ec:	bl	1d2c4 <__assert_fail@plt+0xbfbc>
   1c2f0:	cmp	r6, #0
   1c2f4:	movwne	r6, #1
   1c2f8:	cmp	r0, #0
   1c2fc:	bne	1c310 <__assert_fail@plt+0xb008>
   1c300:	clz	r1, r5
   1c304:	lsr	r1, r1, #5
   1c308:	orrs	r1, r1, r6
   1c30c:	bne	1c318 <__assert_fail@plt+0xb010>
   1c310:	str	r7, [r8]
   1c314:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c318:	bl	1c460 <__assert_fail@plt+0xb158>
   1c31c:	push	{fp, lr}
   1c320:	mov	fp, sp
   1c324:	mov	r1, #1
   1c328:	bl	1d240 <__assert_fail@plt+0xbf38>
   1c32c:	cmp	r0, #0
   1c330:	popne	{fp, pc}
   1c334:	bl	1c460 <__assert_fail@plt+0xb158>
   1c338:	push	{fp, lr}
   1c33c:	mov	fp, sp
   1c340:	bl	1d240 <__assert_fail@plt+0xbf38>
   1c344:	cmp	r0, #0
   1c348:	popne	{fp, pc}
   1c34c:	bl	1c460 <__assert_fail@plt+0xb158>
   1c350:	push	{fp, lr}
   1c354:	mov	fp, sp
   1c358:	mov	r1, #1
   1c35c:	bl	1d240 <__assert_fail@plt+0xbf38>
   1c360:	cmp	r0, #0
   1c364:	popne	{fp, pc}
   1c368:	bl	1c460 <__assert_fail@plt+0xb158>
   1c36c:	push	{fp, lr}
   1c370:	mov	fp, sp
   1c374:	bl	1d240 <__assert_fail@plt+0xbf38>
   1c378:	cmp	r0, #0
   1c37c:	popne	{fp, pc}
   1c380:	bl	1c460 <__assert_fail@plt+0xb158>
   1c384:	push	{r4, r5, fp, lr}
   1c388:	add	fp, sp, #8
   1c38c:	mov	r5, r0
   1c390:	mov	r0, r1
   1c394:	mov	r4, r1
   1c398:	bl	1d294 <__assert_fail@plt+0xbf8c>
   1c39c:	cmp	r0, #0
   1c3a0:	beq	1c3b4 <__assert_fail@plt+0xb0ac>
   1c3a4:	mov	r1, r5
   1c3a8:	mov	r2, r4
   1c3ac:	pop	{r4, r5, fp, lr}
   1c3b0:	b	110d4 <memcpy@plt>
   1c3b4:	bl	1c460 <__assert_fail@plt+0xb158>
   1c3b8:	push	{r4, r5, fp, lr}
   1c3bc:	add	fp, sp, #8
   1c3c0:	mov	r5, r0
   1c3c4:	mov	r0, r1
   1c3c8:	mov	r4, r1
   1c3cc:	bl	1d294 <__assert_fail@plt+0xbf8c>
   1c3d0:	cmp	r0, #0
   1c3d4:	beq	1c3e8 <__assert_fail@plt+0xb0e0>
   1c3d8:	mov	r1, r5
   1c3dc:	mov	r2, r4
   1c3e0:	pop	{r4, r5, fp, lr}
   1c3e4:	b	110d4 <memcpy@plt>
   1c3e8:	bl	1c460 <__assert_fail@plt+0xb158>
   1c3ec:	push	{r4, r5, fp, lr}
   1c3f0:	add	fp, sp, #8
   1c3f4:	mov	r5, r0
   1c3f8:	add	r0, r1, #1
   1c3fc:	mov	r4, r1
   1c400:	bl	1d294 <__assert_fail@plt+0xbf8c>
   1c404:	cmp	r0, #0
   1c408:	beq	1c424 <__assert_fail@plt+0xb11c>
   1c40c:	mov	r1, #0
   1c410:	mov	r2, r4
   1c414:	strb	r1, [r0, r4]
   1c418:	mov	r1, r5
   1c41c:	pop	{r4, r5, fp, lr}
   1c420:	b	110d4 <memcpy@plt>
   1c424:	bl	1c460 <__assert_fail@plt+0xb158>
   1c428:	push	{r4, r5, fp, lr}
   1c42c:	add	fp, sp, #8
   1c430:	mov	r4, r0
   1c434:	bl	111f4 <strlen@plt>
   1c438:	add	r5, r0, #1
   1c43c:	mov	r0, r5
   1c440:	bl	1d294 <__assert_fail@plt+0xbf8c>
   1c444:	cmp	r0, #0
   1c448:	beq	1c45c <__assert_fail@plt+0xb154>
   1c44c:	mov	r1, r4
   1c450:	mov	r2, r5
   1c454:	pop	{r4, r5, fp, lr}
   1c458:	b	110d4 <memcpy@plt>
   1c45c:	bl	1c460 <__assert_fail@plt+0xb158>
   1c460:	push	{fp, lr}
   1c464:	mov	fp, sp
   1c468:	movw	r0, #61712	; 0xf110
   1c46c:	movw	r1, #60384	; 0xebe0
   1c470:	mov	r2, #5
   1c474:	movt	r0, #2
   1c478:	movt	r1, #1
   1c47c:	ldr	r4, [r0]
   1c480:	mov	r0, #0
   1c484:	bl	110f8 <dcgettext@plt>
   1c488:	movw	r2, #57254	; 0xdfa6
   1c48c:	mov	r3, r0
   1c490:	mov	r0, r4
   1c494:	mov	r1, #0
   1c498:	movt	r2, #1
   1c49c:	bl	11170 <error@plt>
   1c4a0:	bl	112e4 <abort@plt>
   1c4a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c4a8:	add	fp, sp, #24
   1c4ac:	sub	sp, sp, #16
   1c4b0:	mov	r8, r0
   1c4b4:	ldr	r0, [fp, #16]
   1c4b8:	mov	r5, r3
   1c4bc:	mov	r6, r2
   1c4c0:	mov	r2, r1
   1c4c4:	add	r3, sp, #8
   1c4c8:	mov	r1, #0
   1c4cc:	str	r0, [sp]
   1c4d0:	mov	r0, r8
   1c4d4:	bl	1c5a0 <__assert_fail@plt+0xb298>
   1c4d8:	cmp	r0, #0
   1c4dc:	bne	1c568 <__assert_fail@plt+0xb260>
   1c4e0:	ldr	r4, [sp, #8]
   1c4e4:	ldr	r7, [sp, #12]
   1c4e8:	subs	r0, r4, r6
   1c4ec:	sbcs	r0, r7, r5
   1c4f0:	bcc	1c514 <__assert_fail@plt+0xb20c>
   1c4f4:	ldr	r1, [fp, #8]
   1c4f8:	ldr	r0, [fp, #12]
   1c4fc:	subs	r1, r1, r4
   1c500:	sbcs	r0, r0, r7
   1c504:	movcs	r0, r4
   1c508:	movcs	r1, r7
   1c50c:	subcs	sp, fp, #24
   1c510:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c514:	bl	1120c <__errno_location@plt>
   1c518:	subs	r1, r4, #1073741824	; 0x40000000
   1c51c:	sbcs	r1, r7, #0
   1c520:	movcc	r1, #34	; 0x22
   1c524:	movcs	r1, #75	; 0x4b
   1c528:	str	r1, [r0]
   1c52c:	ldr	r6, [r0]
   1c530:	ldr	r4, [fp, #24]
   1c534:	ldr	r5, [fp, #20]
   1c538:	mov	r0, r8
   1c53c:	bl	1b714 <__assert_fail@plt+0xa40c>
   1c540:	subs	r1, r6, #22
   1c544:	movw	r2, #59343	; 0xe7cf
   1c548:	str	r0, [sp]
   1c54c:	mov	r3, r5
   1c550:	movne	r1, r6
   1c554:	cmp	r4, #0
   1c558:	movt	r2, #1
   1c55c:	movweq	r4, #1
   1c560:	mov	r0, r4
   1c564:	bl	11170 <error@plt>
   1c568:	cmp	r0, #1
   1c56c:	beq	1c584 <__assert_fail@plt+0xb27c>
   1c570:	cmp	r0, #3
   1c574:	bne	1c590 <__assert_fail@plt+0xb288>
   1c578:	bl	1120c <__errno_location@plt>
   1c57c:	mov	r1, #0
   1c580:	b	1c528 <__assert_fail@plt+0xb220>
   1c584:	bl	1120c <__errno_location@plt>
   1c588:	mov	r1, #75	; 0x4b
   1c58c:	b	1c528 <__assert_fail@plt+0xb220>
   1c590:	bl	1120c <__errno_location@plt>
   1c594:	b	1c52c <__assert_fail@plt+0xb224>
   1c598:	mov	r1, #10
   1c59c:	b	1c4a4 <__assert_fail@plt+0xb19c>
   1c5a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c5a4:	add	fp, sp, #28
   1c5a8:	sub	sp, sp, #44	; 0x2c
   1c5ac:	cmp	r2, #37	; 0x25
   1c5b0:	bcs	1d220 <__assert_fail@plt+0xbf18>
   1c5b4:	ldr	sl, [fp, #8]
   1c5b8:	mov	r6, r2
   1c5bc:	mov	r7, r1
   1c5c0:	mov	r4, r0
   1c5c4:	str	r3, [sp, #36]	; 0x24
   1c5c8:	bl	1120c <__errno_location@plt>
   1c5cc:	mov	r5, r0
   1c5d0:	mov	r0, #0
   1c5d4:	str	r0, [r5]
   1c5d8:	bl	111c4 <__ctype_b_loc@plt>
   1c5dc:	ldr	r1, [r0]
   1c5e0:	mov	r2, r4
   1c5e4:	ldrb	r0, [r2], #1
   1c5e8:	add	r3, r1, r0, lsl #1
   1c5ec:	ldrb	r3, [r3, #1]
   1c5f0:	tst	r3, #32
   1c5f4:	bne	1c5e4 <__assert_fail@plt+0xb2dc>
   1c5f8:	cmp	r7, #0
   1c5fc:	sub	r9, fp, #32
   1c600:	mov	r8, #4
   1c604:	movne	r9, r7
   1c608:	cmp	r0, #45	; 0x2d
   1c60c:	beq	1d214 <__assert_fail@plt+0xbf0c>
   1c610:	mov	r0, r4
   1c614:	mov	r1, r9
   1c618:	mov	r2, r6
   1c61c:	mov	r3, #0
   1c620:	bl	110e0 <__strtoull_internal@plt>
   1c624:	mov	r7, r1
   1c628:	ldr	r1, [r9]
   1c62c:	cmp	r1, r4
   1c630:	beq	1c65c <__assert_fail@plt+0xb354>
   1c634:	mov	r6, r0
   1c638:	ldr	r0, [r5]
   1c63c:	cmp	r0, #0
   1c640:	beq	1c698 <__assert_fail@plt+0xb390>
   1c644:	cmp	r0, #34	; 0x22
   1c648:	bne	1d214 <__assert_fail@plt+0xbf0c>
   1c64c:	mov	r8, #1
   1c650:	cmp	sl, #0
   1c654:	bne	1c6a4 <__assert_fail@plt+0xb39c>
   1c658:	b	1d20c <__assert_fail@plt+0xbf04>
   1c65c:	cmp	sl, #0
   1c660:	beq	1d214 <__assert_fail@plt+0xbf0c>
   1c664:	mov	r5, r1
   1c668:	ldrb	r1, [r4]
   1c66c:	cmp	r1, #0
   1c670:	beq	1d214 <__assert_fail@plt+0xbf0c>
   1c674:	mov	r0, sl
   1c678:	bl	11200 <strchr@plt>
   1c67c:	cmp	r0, #0
   1c680:	beq	1d214 <__assert_fail@plt+0xbf0c>
   1c684:	mov	r1, r5
   1c688:	mov	r8, #0
   1c68c:	mov	r6, #1
   1c690:	mov	r7, #0
   1c694:	b	1c6a4 <__assert_fail@plt+0xb39c>
   1c698:	mov	r8, r0
   1c69c:	cmp	sl, #0
   1c6a0:	beq	1d20c <__assert_fail@plt+0xbf04>
   1c6a4:	ldrb	r4, [r1]
   1c6a8:	cmp	r4, #0
   1c6ac:	beq	1d20c <__assert_fail@plt+0xbf04>
   1c6b0:	str	r1, [sp, #32]
   1c6b4:	mov	r0, sl
   1c6b8:	mov	r1, r4
   1c6bc:	bl	11200 <strchr@plt>
   1c6c0:	cmp	r0, #0
   1c6c4:	beq	1c98c <__assert_fail@plt+0xb684>
   1c6c8:	sub	r0, r4, #69	; 0x45
   1c6cc:	mov	r1, #1
   1c6d0:	mov	r3, #0
   1c6d4:	mov	r5, #1024	; 0x400
   1c6d8:	cmp	r0, #47	; 0x2f
   1c6dc:	str	r1, [sp, #28]
   1c6e0:	bhi	1c7e4 <__assert_fail@plt+0xb4dc>
   1c6e4:	add	r1, pc, #0
   1c6e8:	ldr	pc, [r1, r0, lsl #2]
   1c6ec:	andeq	ip, r1, ip, lsr #15
   1c6f0:	andeq	ip, r1, r4, ror #15
   1c6f4:	andeq	ip, r1, ip, lsr #15
   1c6f8:	andeq	ip, r1, r4, ror #15
   1c6fc:	andeq	ip, r1, r4, ror #15
   1c700:	andeq	ip, r1, r4, ror #15
   1c704:	andeq	ip, r1, ip, lsr #15
   1c708:	andeq	ip, r1, r4, ror #15
   1c70c:	andeq	ip, r1, ip, lsr #15
   1c710:	andeq	ip, r1, r4, ror #15
   1c714:	andeq	ip, r1, r4, ror #15
   1c718:	andeq	ip, r1, ip, lsr #15
   1c71c:	andeq	ip, r1, r4, ror #15
   1c720:	andeq	ip, r1, r4, ror #15
   1c724:	andeq	ip, r1, r4, ror #15
   1c728:	andeq	ip, r1, ip, lsr #15
   1c72c:	andeq	ip, r1, r4, ror #15
   1c730:	andeq	ip, r1, r4, ror #15
   1c734:	andeq	ip, r1, r4, ror #15
   1c738:	andeq	ip, r1, r4, ror #15
   1c73c:	andeq	ip, r1, ip, lsr #15
   1c740:	andeq	ip, r1, ip, lsr #15
   1c744:	andeq	ip, r1, r4, ror #15
   1c748:	andeq	ip, r1, r4, ror #15
   1c74c:	andeq	ip, r1, r4, ror #15
   1c750:	andeq	ip, r1, r4, ror #15
   1c754:	andeq	ip, r1, r4, ror #15
   1c758:	andeq	ip, r1, r4, ror #15
   1c75c:	andeq	ip, r1, r4, ror #15
   1c760:	andeq	ip, r1, r4, ror #15
   1c764:	andeq	ip, r1, r4, ror #15
   1c768:	andeq	ip, r1, r4, ror #15
   1c76c:	andeq	ip, r1, r4, ror #15
   1c770:	andeq	ip, r1, r4, ror #15
   1c774:	andeq	ip, r1, ip, lsr #15
   1c778:	andeq	ip, r1, r4, ror #15
   1c77c:	andeq	ip, r1, r4, ror #15
   1c780:	andeq	ip, r1, r4, ror #15
   1c784:	andeq	ip, r1, ip, lsr #15
   1c788:	andeq	ip, r1, r4, ror #15
   1c78c:	andeq	ip, r1, ip, lsr #15
   1c790:	andeq	ip, r1, r4, ror #15
   1c794:	andeq	ip, r1, r4, ror #15
   1c798:	andeq	ip, r1, r4, ror #15
   1c79c:	andeq	ip, r1, r4, ror #15
   1c7a0:	andeq	ip, r1, r4, ror #15
   1c7a4:	andeq	ip, r1, r4, ror #15
   1c7a8:	andeq	ip, r1, ip, lsr #15
   1c7ac:	mov	r0, sl
   1c7b0:	mov	r1, #48	; 0x30
   1c7b4:	bl	11200 <strchr@plt>
   1c7b8:	cmp	r0, #0
   1c7bc:	beq	1c7e0 <__assert_fail@plt+0xb4d8>
   1c7c0:	ldr	r1, [sp, #32]
   1c7c4:	ldrb	r0, [r1, #1]
   1c7c8:	cmp	r0, #66	; 0x42
   1c7cc:	cmpne	r0, #68	; 0x44
   1c7d0:	bne	1c998 <__assert_fail@plt+0xb690>
   1c7d4:	mov	r5, #1000	; 0x3e8
   1c7d8:	mov	r0, #2
   1c7dc:	str	r0, [sp, #28]
   1c7e0:	mov	r3, #0
   1c7e4:	sub	r0, r4, #66	; 0x42
   1c7e8:	cmp	r0, #53	; 0x35
   1c7ec:	bhi	1c98c <__assert_fail@plt+0xb684>
   1c7f0:	add	r1, pc, #0
   1c7f4:	ldr	pc, [r1, r0, lsl #2]
   1c7f8:	andeq	ip, r1, r4, lsl sp
   1c7fc:	andeq	ip, r1, ip, lsl #19
   1c800:	andeq	ip, r1, ip, lsl #19
   1c804:	andeq	ip, r1, ip, lsr sp
   1c808:	andeq	ip, r1, ip, lsl #19
   1c80c:	ldrdeq	ip, [r1], -r0
   1c810:	andeq	ip, r1, ip, lsl #19
   1c814:	andeq	ip, r1, ip, lsl #19
   1c818:	andeq	ip, r1, ip, lsl #19
   1c81c:			; <UNDEFINED> instruction: 0x0001c9bc
   1c820:	andeq	ip, r1, ip, lsl #19
   1c824:	andeq	ip, r1, r4, lsl #20
   1c828:	andeq	ip, r1, ip, lsl #19
   1c82c:	andeq	ip, r1, ip, lsl #19
   1c830:	muleq	r1, r4, lr
   1c834:	andeq	ip, r1, ip, lsl #19
   1c838:	andeq	ip, r1, ip, lsl #19
   1c83c:	andeq	ip, r1, ip, lsl #19
   1c840:	muleq	r1, r0, sl
   1c844:	andeq	ip, r1, ip, lsl #19
   1c848:	andeq	ip, r1, ip, lsl #19
   1c84c:	andeq	ip, r1, ip, lsl #19
   1c850:	andeq	ip, r1, ip, lsl #19
   1c854:			; <UNDEFINED> instruction: 0x0001cfbc
   1c858:	andeq	ip, r1, r8, ror fp
   1c85c:	andeq	ip, r1, ip, lsl #19
   1c860:	andeq	ip, r1, ip, lsl #19
   1c864:	andeq	ip, r1, ip, lsl #19
   1c868:	andeq	ip, r1, ip, lsl #19
   1c86c:	andeq	ip, r1, ip, lsl #19
   1c870:	andeq	ip, r1, ip, lsl #19
   1c874:	andeq	ip, r1, ip, lsl #19
   1c878:	muleq	r1, r4, r1
   1c87c:	andeq	sp, r1, ip, ror #3
   1c880:	andeq	ip, r1, ip, lsl #19
   1c884:	andeq	ip, r1, ip, lsl #19
   1c888:	andeq	ip, r1, ip, lsl #19
   1c88c:	ldrdeq	ip, [r1], -r0
   1c890:	andeq	ip, r1, ip, lsl #19
   1c894:	andeq	ip, r1, ip, lsl #19
   1c898:	andeq	ip, r1, ip, lsl #19
   1c89c:			; <UNDEFINED> instruction: 0x0001c9bc
   1c8a0:	andeq	ip, r1, ip, lsl #19
   1c8a4:	andeq	ip, r1, r4, lsl #20
   1c8a8:	andeq	ip, r1, ip, lsl #19
   1c8ac:	andeq	ip, r1, ip, lsl #19
   1c8b0:	andeq	ip, r1, ip, lsl #19
   1c8b4:	andeq	ip, r1, ip, lsl #19
   1c8b8:	andeq	ip, r1, ip, lsl #19
   1c8bc:	andeq	ip, r1, ip, lsl #19
   1c8c0:	muleq	r1, r0, sl
   1c8c4:	andeq	ip, r1, ip, lsl #19
   1c8c8:	andeq	ip, r1, ip, lsl #19
   1c8cc:	andeq	sp, r1, r8, asr #3
   1c8d0:	mvn	r0, #0
   1c8d4:	mvn	r1, #0
   1c8d8:	mov	r2, r5
   1c8dc:	mov	sl, r3
   1c8e0:	bl	1d760 <__assert_fail@plt+0xc458>
   1c8e4:	subs	r3, r0, r6
   1c8e8:	umull	r4, r2, r6, r5
   1c8ec:	mov	lr, #0
   1c8f0:	str	r1, [sp, #20]
   1c8f4:	sbcs	r3, r1, r7
   1c8f8:	movwcc	lr, #1
   1c8fc:	mla	ip, r6, sl, r2
   1c900:	mov	r2, r1
   1c904:	mov	r2, #0
   1c908:	cmp	lr, #0
   1c90c:	mla	r7, r7, r5, ip
   1c910:	mvnne	r4, #0
   1c914:	mvnne	r7, #0
   1c918:	subs	r6, r0, r4
   1c91c:	sbcs	r6, r1, r7
   1c920:	umull	r3, r6, r4, r5
   1c924:	movwcc	r2, #1
   1c928:	cmp	r2, #0
   1c92c:	mvnne	r3, #0
   1c930:	cmp	r2, #0
   1c934:	str	r6, [sp, #16]
   1c938:	umull	r6, ip, r3, r5
   1c93c:	mla	r1, r3, sl, ip
   1c940:	ldr	ip, [sp, #16]
   1c944:	str	r1, [sp, #12]
   1c948:	mla	r4, r4, sl, ip
   1c94c:	mla	r4, r7, r5, r4
   1c950:	mvnne	r4, #0
   1c954:	subs	r0, r0, r3
   1c958:	ldr	r0, [sp, #20]
   1c95c:	ldr	r7, [sp, #12]
   1c960:	sbcs	r0, r0, r4
   1c964:	mov	r0, #0
   1c968:	mla	r7, r4, r5, r7
   1c96c:	movwcc	r0, #1
   1c970:	cmp	r0, #0
   1c974:	mov	r1, r0
   1c978:	orr	r0, lr, r2
   1c97c:	mvnne	r7, #0
   1c980:	mvnne	r6, #0
   1c984:	orr	r3, r0, r1
   1c988:	b	1d1ec <__assert_fail@plt+0xbee4>
   1c98c:	ldr	r0, [sp, #36]	; 0x24
   1c990:	orr	r8, r8, #2
   1c994:	b	1d210 <__assert_fail@plt+0xbf08>
   1c998:	cmp	r0, #105	; 0x69
   1c99c:	mov	r3, #0
   1c9a0:	bne	1c7e4 <__assert_fail@plt+0xb4dc>
   1c9a4:	ldrb	r0, [r1, #2]
   1c9a8:	mov	r1, #1
   1c9ac:	cmp	r0, #66	; 0x42
   1c9b0:	movweq	r1, #3
   1c9b4:	str	r1, [sp, #28]
   1c9b8:	b	1c7e4 <__assert_fail@plt+0xb4dc>
   1c9bc:	mvn	r0, #0
   1c9c0:	mvn	r1, #0
   1c9c4:	mov	r2, r5
   1c9c8:	mov	r4, r3
   1c9cc:	bl	1d760 <__assert_fail@plt+0xc458>
   1c9d0:	subs	r0, r0, r6
   1c9d4:	mov	r2, #0
   1c9d8:	sbcs	r0, r1, r7
   1c9dc:	umull	r0, r1, r6, r5
   1c9e0:	movwcc	r2, #1
   1c9e4:	cmp	r2, #0
   1c9e8:	mla	r1, r6, r4, r1
   1c9ec:	mov	r3, r2
   1c9f0:	mvnne	r0, #0
   1c9f4:	mla	r7, r7, r5, r1
   1c9f8:	mvnne	r7, #0
   1c9fc:	mov	r6, r0
   1ca00:	b	1d1ec <__assert_fail@plt+0xbee4>
   1ca04:	mvn	r0, #0
   1ca08:	mvn	r1, #0
   1ca0c:	mov	r2, r5
   1ca10:	str	r3, [sp, #24]
   1ca14:	bl	1d760 <__assert_fail@plt+0xc458>
   1ca18:	subs	r3, r0, r6
   1ca1c:	mov	ip, r0
   1ca20:	umull	r4, r0, r6, r5
   1ca24:	mov	sl, #0
   1ca28:	sbcs	r3, r1, r7
   1ca2c:	mov	r3, #0
   1ca30:	movwcc	r3, #1
   1ca34:	cmp	r3, #0
   1ca38:	str	r0, [sp, #20]
   1ca3c:	ldr	r0, [sp, #24]
   1ca40:	mvnne	r4, #0
   1ca44:	cmp	r3, #0
   1ca48:	umull	lr, r2, r4, r5
   1ca4c:	mla	r2, r4, r0, r2
   1ca50:	str	r2, [sp, #16]
   1ca54:	ldr	r2, [sp, #20]
   1ca58:	mla	r6, r6, r0, r2
   1ca5c:	ldr	r0, [sp, #16]
   1ca60:	mla	r6, r7, r5, r6
   1ca64:	mvnne	r6, #0
   1ca68:	mla	r7, r6, r5, r0
   1ca6c:	subs	r0, ip, r4
   1ca70:	sbcs	r0, r1, r6
   1ca74:	movwcc	sl, #1
   1ca78:	cmp	sl, #0
   1ca7c:	orr	r3, r3, sl
   1ca80:	mvnne	lr, #0
   1ca84:	mvnne	r7, #0
   1ca88:	mov	r6, lr
   1ca8c:	b	1d1ec <__assert_fail@plt+0xbee4>
   1ca90:	mvn	r0, #0
   1ca94:	mvn	r1, #0
   1ca98:	mov	r2, r5
   1ca9c:	mov	sl, r3
   1caa0:	bl	1d760 <__assert_fail@plt+0xc458>
   1caa4:	subs	r3, r0, r6
   1caa8:	mov	ip, r1
   1caac:	umull	r2, lr, r6, r5
   1cab0:	str	r0, [sp, #20]
   1cab4:	sbcs	r3, r1, r7
   1cab8:	mov	r1, #0
   1cabc:	str	ip, [sp, #16]
   1cac0:	movwcc	r1, #1
   1cac4:	mla	r6, r6, sl, lr
   1cac8:	mov	lr, #0
   1cacc:	cmp	r1, #0
   1cad0:	mla	r7, r7, r5, r6
   1cad4:	mvnne	r2, #0
   1cad8:	cmp	r1, #0
   1cadc:	umull	r3, r4, r2, r5
   1cae0:	mvnne	r7, #0
   1cae4:	mla	r4, r2, sl, r4
   1cae8:	subs	r2, r0, r2
   1caec:	sbcs	r2, ip, r7
   1caf0:	mla	r4, r7, r5, r4
   1caf4:	mov	r2, #0
   1caf8:	movwcc	lr, #1
   1cafc:	cmp	lr, #0
   1cb00:	mvnne	r3, #0
   1cb04:	mvnne	r4, #0
   1cb08:	subs	r7, r0, r3
   1cb0c:	mov	r0, r5
   1cb10:	sbcs	r7, ip, r4
   1cb14:	umull	r5, r7, r3, r5
   1cb18:	movwcc	r2, #1
   1cb1c:	cmp	r2, #0
   1cb20:	mla	r3, r3, sl, r7
   1cb24:	mvnne	r5, #0
   1cb28:	cmp	r2, #0
   1cb2c:	mla	r3, r4, r0, r3
   1cb30:	umull	r6, ip, r5, r0
   1cb34:	mvnne	r3, #0
   1cb38:	mla	ip, r5, sl, ip
   1cb3c:	mla	r7, r3, r0, ip
   1cb40:	ldr	r0, [sp, #20]
   1cb44:	subs	r0, r0, r5
   1cb48:	ldr	r0, [sp, #16]
   1cb4c:	sbcs	r0, r0, r3
   1cb50:	mov	r0, #0
   1cb54:	movwcc	r0, #1
   1cb58:	cmp	r0, #0
   1cb5c:	mov	r3, r0
   1cb60:	orr	r0, r1, lr
   1cb64:	orr	r0, r0, r2
   1cb68:	mvnne	r7, #0
   1cb6c:	mvnne	r6, #0
   1cb70:	orr	r3, r0, r3
   1cb74:	b	1d1ec <__assert_fail@plt+0xbee4>
   1cb78:	mvn	r0, #0
   1cb7c:	mvn	r1, #0
   1cb80:	mov	r2, r5
   1cb84:	mov	r4, r3
   1cb88:	str	r3, [sp, #24]
   1cb8c:	bl	1d760 <__assert_fail@plt+0xc458>
   1cb90:	umull	r3, r2, r6, r5
   1cb94:	mla	r2, r6, r4, r2
   1cb98:	subs	r6, r0, r6
   1cb9c:	sbcs	r6, r1, r7
   1cba0:	mov	r6, #0
   1cba4:	mla	ip, r7, r5, r2
   1cba8:	ldr	r2, [sp, #24]
   1cbac:	movwcc	r6, #1
   1cbb0:	cmp	r6, #0
   1cbb4:	str	r6, [sp, #20]
   1cbb8:	mov	r6, #0
   1cbbc:	mvnne	r3, #0
   1cbc0:	mvnne	ip, #0
   1cbc4:	subs	r4, r0, r3
   1cbc8:	umull	r7, lr, r3, r5
   1cbcc:	sbcs	r4, r1, ip
   1cbd0:	movwcc	r6, #1
   1cbd4:	mla	r3, r3, r2, lr
   1cbd8:	cmp	r6, #0
   1cbdc:	str	r6, [sp, #16]
   1cbe0:	mvnne	r7, #0
   1cbe4:	cmp	r6, #0
   1cbe8:	umull	sl, r4, r7, r5
   1cbec:	mla	r4, r7, r2, r4
   1cbf0:	mla	r2, ip, r5, r3
   1cbf4:	mvnne	r2, #0
   1cbf8:	subs	r3, r0, r7
   1cbfc:	mov	ip, #0
   1cc00:	mla	r6, r2, r5, r4
   1cc04:	sbcs	r2, r1, r2
   1cc08:	mov	r4, r0
   1cc0c:	mov	r0, #0
   1cc10:	movwcc	r0, #1
   1cc14:	mov	r3, r4
   1cc18:	cmp	r0, #0
   1cc1c:	str	r0, [sp, #12]
   1cc20:	mov	r0, r1
   1cc24:	str	r3, [sp, #4]
   1cc28:	mvnne	sl, #0
   1cc2c:	mvnne	r6, #0
   1cc30:	str	r0, [sp, #8]
   1cc34:	subs	r2, r4, sl
   1cc38:	ldr	r4, [sp, #24]
   1cc3c:	sbcs	r2, r1, r6
   1cc40:	umull	r7, r2, sl, r5
   1cc44:	movwcc	ip, #1
   1cc48:	cmp	ip, #0
   1cc4c:	mvnne	r7, #0
   1cc50:	mla	r2, sl, r4, r2
   1cc54:	cmp	ip, #0
   1cc58:	mov	sl, #0
   1cc5c:	umull	r1, lr, r7, r5
   1cc60:	mla	r2, r6, r5, r2
   1cc64:	mvnne	r2, #0
   1cc68:	subs	r6, r3, r7
   1cc6c:	mla	lr, r7, r4, lr
   1cc70:	mla	lr, r2, r5, lr
   1cc74:	sbcs	r2, r0, r2
   1cc78:	mov	r2, #0
   1cc7c:	movwcc	sl, #1
   1cc80:	cmp	sl, #0
   1cc84:	mvnne	r1, #0
   1cc88:	mvnne	lr, #0
   1cc8c:	subs	r6, r3, r1
   1cc90:	ldr	r3, [sp, #24]
   1cc94:	sbcs	r6, r0, lr
   1cc98:	umull	r0, r7, r1, r5
   1cc9c:	movwcc	r2, #1
   1cca0:	cmp	r2, #0
   1cca4:	mvnne	r0, #0
   1cca8:	mla	r1, r1, r3, r7
   1ccac:	cmp	r2, #0
   1ccb0:	umull	r6, r4, r0, r5
   1ccb4:	mla	r1, lr, r5, r1
   1ccb8:	mvnne	r1, #0
   1ccbc:	mla	r4, r0, r3, r4
   1ccc0:	ldr	r3, [sp, #4]
   1ccc4:	mla	r7, r1, r5, r4
   1ccc8:	ldr	r5, [sp, #16]
   1cccc:	subs	r0, r3, r0
   1ccd0:	ldr	r0, [sp, #8]
   1ccd4:	sbcs	r0, r0, r1
   1ccd8:	mov	r0, #0
   1ccdc:	movwcc	r0, #1
   1cce0:	cmp	r0, #0
   1cce4:	mov	r1, r0
   1cce8:	ldr	r0, [sp, #20]
   1ccec:	mvnne	r7, #0
   1ccf0:	mvnne	r6, #0
   1ccf4:	orr	r0, r0, r5
   1ccf8:	ldr	r5, [sp, #12]
   1ccfc:	orr	r0, r0, r5
   1cd00:	orr	r0, r0, ip
   1cd04:	orr	r0, r0, sl
   1cd08:	orr	r0, r0, r2
   1cd0c:	orr	r0, r0, r1
   1cd10:	b	1d18c <__assert_fail@plt+0xbe84>
   1cd14:	mov	r1, #0
   1cd18:	lsl	r2, r7, #10
   1cd1c:	lsl	r0, r6, #10
   1cd20:	lsr	r3, r7, #22
   1cd24:	cmp	r1, r7, lsr #22
   1cd28:	orr	r2, r2, r6, lsr #22
   1cd2c:	mvnne	r0, #0
   1cd30:	movwne	r3, #1
   1cd34:	cmp	r1, r7, lsr #22
   1cd38:	b	1d1b8 <__assert_fail@plt+0xbeb0>
   1cd3c:	mvn	r0, #0
   1cd40:	mvn	r1, #0
   1cd44:	mov	r2, r5
   1cd48:	mov	sl, r3
   1cd4c:	bl	1d760 <__assert_fail@plt+0xc458>
   1cd50:	subs	r2, r0, r6
   1cd54:	mov	ip, r0
   1cd58:	mov	r0, #0
   1cd5c:	sbcs	r2, r1, r7
   1cd60:	umull	r4, r2, r6, r5
   1cd64:	movwcc	r0, #1
   1cd68:	cmp	r0, #0
   1cd6c:	mla	r2, r6, sl, r2
   1cd70:	str	r0, [sp, #20]
   1cd74:	mvnne	r4, #0
   1cd78:	cmp	r0, #0
   1cd7c:	mla	r2, r7, r5, r2
   1cd80:	mov	r0, #0
   1cd84:	umull	lr, r3, r4, r5
   1cd88:	mvnne	r2, #0
   1cd8c:	mla	r3, r4, sl, r3
   1cd90:	mla	r6, r2, r5, r3
   1cd94:	subs	r3, ip, r4
   1cd98:	mov	r3, r1
   1cd9c:	sbcs	r2, r1, r2
   1cda0:	str	r3, [sp, #8]
   1cda4:	movwcc	r0, #1
   1cda8:	cmp	r0, #0
   1cdac:	str	r0, [sp, #16]
   1cdb0:	mov	r0, ip
   1cdb4:	mvnne	lr, #0
   1cdb8:	mvnne	r6, #0
   1cdbc:	str	r0, [sp, #12]
   1cdc0:	subs	r2, ip, lr
   1cdc4:	umull	r7, r4, lr, r5
   1cdc8:	sbcs	r2, r1, r6
   1cdcc:	mov	r2, #0
   1cdd0:	movwcc	r2, #1
   1cdd4:	mla	r4, lr, sl, r4
   1cdd8:	cmp	r2, #0
   1cddc:	mla	r6, r6, r5, r4
   1cde0:	mov	r4, #0
   1cde4:	mvnne	r7, #0
   1cde8:	cmp	r2, #0
   1cdec:	umull	r1, ip, r7, r5
   1cdf0:	mvnne	r6, #0
   1cdf4:	mla	ip, r7, sl, ip
   1cdf8:	subs	r7, r0, r7
   1cdfc:	sbcs	r7, r3, r6
   1ce00:	mla	lr, r6, r5, ip
   1ce04:	mov	ip, #0
   1ce08:	movwcc	ip, #1
   1ce0c:	cmp	ip, #0
   1ce10:	mvnne	r1, #0
   1ce14:	mvnne	lr, #0
   1ce18:	subs	r7, r0, r1
   1ce1c:	sbcs	r7, r3, lr
   1ce20:	umull	r0, r7, r1, r5
   1ce24:	movwcc	r4, #1
   1ce28:	cmp	r4, #0
   1ce2c:	mla	r1, r1, sl, r7
   1ce30:	mvnne	r0, #0
   1ce34:	cmp	r4, #0
   1ce38:	mla	r1, lr, r5, r1
   1ce3c:	umull	r6, r3, r0, r5
   1ce40:	mvnne	r1, #0
   1ce44:	mla	r3, r0, sl, r3
   1ce48:	mla	r7, r1, r5, r3
   1ce4c:	ldr	r3, [sp, #12]
   1ce50:	subs	r0, r3, r0
   1ce54:	ldr	r0, [sp, #8]
   1ce58:	ldr	r3, [sp, #16]
   1ce5c:	sbcs	r0, r0, r1
   1ce60:	mov	r0, #0
   1ce64:	movwcc	r0, #1
   1ce68:	cmp	r0, #0
   1ce6c:	mov	r1, r0
   1ce70:	ldr	r0, [sp, #20]
   1ce74:	mvnne	r7, #0
   1ce78:	mvnne	r6, #0
   1ce7c:	orr	r0, r0, r3
   1ce80:	orr	r0, r0, r2
   1ce84:	orr	r0, r0, ip
   1ce88:	orr	r0, r0, r4
   1ce8c:	orr	r3, r0, r1
   1ce90:	b	1d1ec <__assert_fail@plt+0xbee4>
   1ce94:	mvn	r0, #0
   1ce98:	mvn	r1, #0
   1ce9c:	mov	r2, r5
   1cea0:	mov	sl, r3
   1cea4:	bl	1d760 <__assert_fail@plt+0xc458>
   1cea8:	umull	r3, r2, r6, r5
   1ceac:	mov	lr, r1
   1ceb0:	mov	r1, r0
   1ceb4:	mla	r2, r6, sl, r2
   1ceb8:	subs	r6, r0, r6
   1cebc:	mov	r0, #0
   1cec0:	sbcs	r6, lr, r7
   1cec4:	mla	r2, r7, r5, r2
   1cec8:	movwcc	r0, #1
   1cecc:	cmp	r0, #0
   1ced0:	str	r0, [sp, #20]
   1ced4:	mov	r0, r1
   1ced8:	mvnne	r3, #0
   1cedc:	mvnne	r2, #0
   1cee0:	str	r0, [sp, #16]
   1cee4:	subs	r4, r1, r3
   1cee8:	umull	r7, ip, r3, r5
   1ceec:	sbcs	r4, lr, r2
   1cef0:	mov	r4, #0
   1cef4:	movwcc	r4, #1
   1cef8:	mla	r3, r3, sl, ip
   1cefc:	mov	ip, #0
   1cf00:	cmp	r4, #0
   1cf04:	mla	r2, r2, r5, r3
   1cf08:	mvnne	r7, #0
   1cf0c:	cmp	r4, #0
   1cf10:	umull	r1, r6, r7, r5
   1cf14:	mvnne	r2, #0
   1cf18:	mla	r6, r7, sl, r6
   1cf1c:	mla	r3, r2, r5, r6
   1cf20:	subs	r6, r0, r7
   1cf24:	sbcs	r2, lr, r2
   1cf28:	mov	r2, #0
   1cf2c:	movwcc	ip, #1
   1cf30:	cmp	ip, #0
   1cf34:	mvnne	r1, #0
   1cf38:	mvnne	r3, #0
   1cf3c:	subs	r6, r0, r1
   1cf40:	sbcs	r6, lr, r3
   1cf44:	umull	r0, r6, r1, r5
   1cf48:	movwcc	r2, #1
   1cf4c:	cmp	r2, #0
   1cf50:	mvnne	r0, #0
   1cf54:	cmp	r2, #0
   1cf58:	str	r6, [sp, #12]
   1cf5c:	umull	r6, r7, r0, r5
   1cf60:	mla	r7, r0, sl, r7
   1cf64:	str	r7, [sp, #8]
   1cf68:	ldr	r7, [sp, #12]
   1cf6c:	mla	r1, r1, sl, r7
   1cf70:	mla	r1, r3, r5, r1
   1cf74:	ldr	r3, [sp, #8]
   1cf78:	mvnne	r1, #0
   1cf7c:	mla	r7, r1, r5, r3
   1cf80:	ldr	r3, [sp, #16]
   1cf84:	subs	r0, r3, r0
   1cf88:	sbcs	r0, lr, r1
   1cf8c:	mov	r0, #0
   1cf90:	movwcc	r0, #1
   1cf94:	cmp	r0, #0
   1cf98:	mov	r1, r0
   1cf9c:	ldr	r0, [sp, #20]
   1cfa0:	mvnne	r7, #0
   1cfa4:	mvnne	r6, #0
   1cfa8:	orr	r0, r0, r4
   1cfac:	orr	r0, r0, ip
   1cfb0:	orr	r0, r0, r2
   1cfb4:	orr	r3, r0, r1
   1cfb8:	b	1d1ec <__assert_fail@plt+0xbee4>
   1cfbc:	mvn	r0, #0
   1cfc0:	mvn	r1, #0
   1cfc4:	mov	r2, r5
   1cfc8:	mov	sl, r3
   1cfcc:	bl	1d760 <__assert_fail@plt+0xc458>
   1cfd0:	mov	lr, r0
   1cfd4:	subs	r0, r0, r6
   1cfd8:	mov	r2, #0
   1cfdc:	mov	ip, r1
   1cfe0:	str	sl, [sp, #24]
   1cfe4:	sbcs	r0, r1, r7
   1cfe8:	umull	r3, r1, r6, r5
   1cfec:	str	lr, [sp, #4]
   1cff0:	movwcc	r2, #1
   1cff4:	cmp	r2, #0
   1cff8:	mla	r6, r6, sl, r1
   1cffc:	mov	r1, #0
   1d000:	str	r2, [sp, #20]
   1d004:	mvnne	r3, #0
   1d008:	cmp	r2, #0
   1d00c:	mla	r7, r7, r5, r6
   1d010:	mov	r2, #0
   1d014:	umull	r0, r4, r3, r5
   1d018:	mvnne	r7, #0
   1d01c:	mla	r4, r3, sl, r4
   1d020:	subs	r3, lr, r3
   1d024:	sbcs	r3, ip, r7
   1d028:	mla	r4, r7, r5, r4
   1d02c:	movwcc	r1, #1
   1d030:	cmp	r1, #0
   1d034:	str	r1, [sp, #16]
   1d038:	mvnne	r0, #0
   1d03c:	mvnne	r4, #0
   1d040:	subs	r3, lr, r0
   1d044:	sbcs	r3, ip, r4
   1d048:	umull	r6, r3, r0, r5
   1d04c:	movwcc	r2, #1
   1d050:	cmp	r2, #0
   1d054:	mla	r0, r0, sl, r3
   1d058:	str	r2, [sp, #12]
   1d05c:	mvnne	r6, #0
   1d060:	cmp	r2, #0
   1d064:	mla	r0, r4, r5, r0
   1d068:	ldr	r4, [sp, #24]
   1d06c:	umull	r1, r7, r6, r5
   1d070:	mvnne	r0, #0
   1d074:	subs	r3, lr, r6
   1d078:	mov	r3, ip
   1d07c:	str	r3, [sp]
   1d080:	mla	r7, r6, sl, r7
   1d084:	mla	r7, r0, r5, r7
   1d088:	sbcs	r0, ip, r0
   1d08c:	mov	r0, #0
   1d090:	movwcc	r0, #1
   1d094:	cmp	r0, #0
   1d098:	str	r0, [sp, #8]
   1d09c:	mvnne	r1, #0
   1d0a0:	mvnne	r7, #0
   1d0a4:	subs	r0, lr, r1
   1d0a8:	sbcs	r0, ip, r7
   1d0ac:	mov	ip, #0
   1d0b0:	umull	r6, r0, r1, r5
   1d0b4:	movwcc	ip, #1
   1d0b8:	cmp	ip, #0
   1d0bc:	mla	r1, r1, r4, r0
   1d0c0:	mov	r0, lr
   1d0c4:	mvnne	r6, #0
   1d0c8:	cmp	ip, #0
   1d0cc:	mla	r1, r7, r5, r1
   1d0d0:	umull	r2, sl, r6, r5
   1d0d4:	mvnne	r1, #0
   1d0d8:	mla	sl, r6, r4, sl
   1d0dc:	subs	r6, lr, r6
   1d0e0:	mov	lr, #0
   1d0e4:	mla	r7, r1, r5, sl
   1d0e8:	sbcs	r1, r3, r1
   1d0ec:	ldr	r1, [sp, #24]
   1d0f0:	movwcc	lr, #1
   1d0f4:	cmp	lr, #0
   1d0f8:	mvnne	r2, #0
   1d0fc:	mvnne	r7, #0
   1d100:	subs	r6, r0, r2
   1d104:	umull	r0, sl, r2, r5
   1d108:	sbcs	r6, r3, r7
   1d10c:	mov	r3, #0
   1d110:	movwcc	r3, #1
   1d114:	mla	r2, r2, r1, sl
   1d118:	cmp	r3, #0
   1d11c:	mla	r2, r7, r5, r2
   1d120:	mvnne	r0, #0
   1d124:	cmp	r3, #0
   1d128:	umull	r6, r4, r0, r5
   1d12c:	mvnne	r2, #0
   1d130:	mla	r4, r0, r1, r4
   1d134:	ldr	r1, [sp, #4]
   1d138:	mla	r7, r2, r5, r4
   1d13c:	ldr	r5, [sp, #16]
   1d140:	subs	r0, r1, r0
   1d144:	ldr	r0, [sp]
   1d148:	sbcs	r0, r0, r2
   1d14c:	mov	r0, #0
   1d150:	movwcc	r0, #1
   1d154:	cmp	r0, #0
   1d158:	mov	r2, r0
   1d15c:	ldr	r0, [sp, #20]
   1d160:	mvnne	r7, #0
   1d164:	mvnne	r6, #0
   1d168:	orr	r0, r0, r5
   1d16c:	ldr	r5, [sp, #12]
   1d170:	orr	r0, r0, r5
   1d174:	ldr	r5, [sp, #8]
   1d178:	orr	r0, r0, r5
   1d17c:	orr	r0, r0, ip
   1d180:	orr	r0, r0, lr
   1d184:	orr	r0, r0, r3
   1d188:	orr	r0, r0, r2
   1d18c:	and	r3, r0, #1
   1d190:	b	1d1ec <__assert_fail@plt+0xbee4>
   1d194:	mov	r1, #0
   1d198:	lsl	r2, r7, #9
   1d19c:	lsl	r0, r6, #9
   1d1a0:	lsr	r3, r7, #23
   1d1a4:	cmp	r1, r7, lsr #23
   1d1a8:	orr	r2, r2, r6, lsr #23
   1d1ac:	mvnne	r0, #0
   1d1b0:	movwne	r3, #1
   1d1b4:	cmp	r1, r7, lsr #23
   1d1b8:	mvnne	r2, #0
   1d1bc:	mov	r6, r0
   1d1c0:	mov	r7, r2
   1d1c4:	b	1d1ec <__assert_fail@plt+0xbee4>
   1d1c8:	lsl	r1, r7, #1
   1d1cc:	cmp	r7, #0
   1d1d0:	lsl	r0, r6, #1
   1d1d4:	lsr	r3, r7, #31
   1d1d8:	orr	r1, r1, r6, lsr #31
   1d1dc:	mvnmi	r0, #0
   1d1e0:	mvnmi	r1, #0
   1d1e4:	mov	r6, r0
   1d1e8:	mov	r7, r1
   1d1ec:	ldr	r1, [sp, #32]
   1d1f0:	ldr	r2, [sp, #28]
   1d1f4:	orr	r8, r3, r8
   1d1f8:	add	r0, r1, r2
   1d1fc:	str	r0, [r9]
   1d200:	ldrb	r0, [r1, r2]
   1d204:	cmp	r0, #0
   1d208:	orrne	r8, r8, #2
   1d20c:	ldr	r0, [sp, #36]	; 0x24
   1d210:	strd	r6, [r0]
   1d214:	mov	r0, r8
   1d218:	sub	sp, fp, #28
   1d21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d220:	movw	r0, #60401	; 0xebf1
   1d224:	movw	r1, #60439	; 0xec17
   1d228:	movw	r3, #60455	; 0xec27
   1d22c:	mov	r2, #85	; 0x55
   1d230:	movt	r0, #1
   1d234:	movt	r1, #1
   1d238:	movt	r3, #1
   1d23c:	bl	11308 <__assert_fail@plt>
   1d240:	clz	r2, r1
   1d244:	clz	r3, r0
   1d248:	lsr	r2, r2, #5
   1d24c:	lsr	r3, r3, #5
   1d250:	orrs	r2, r3, r2
   1d254:	movwne	r1, #1
   1d258:	movwne	r0, #1
   1d25c:	cmp	r1, #0
   1d260:	beq	1d290 <__assert_fail@plt+0xbf88>
   1d264:	mvn	r2, #-2147483648	; 0x80000000
   1d268:	udiv	r2, r2, r1
   1d26c:	cmp	r2, r0
   1d270:	bcs	1d290 <__assert_fail@plt+0xbf88>
   1d274:	push	{fp, lr}
   1d278:	mov	fp, sp
   1d27c:	bl	1120c <__errno_location@plt>
   1d280:	mov	r1, #12
   1d284:	str	r1, [r0]
   1d288:	mov	r0, #0
   1d28c:	pop	{fp, pc}
   1d290:	b	1105c <calloc@plt>
   1d294:	cmp	r0, #0
   1d298:	movweq	r0, #1
   1d29c:	cmn	r0, #1
   1d2a0:	ble	1d2a8 <__assert_fail@plt+0xbfa0>
   1d2a4:	b	1117c <malloc@plt>
   1d2a8:	push	{fp, lr}
   1d2ac:	mov	fp, sp
   1d2b0:	bl	1120c <__errno_location@plt>
   1d2b4:	mov	r1, #12
   1d2b8:	str	r1, [r0]
   1d2bc:	mov	r0, #0
   1d2c0:	pop	{fp, pc}
   1d2c4:	push	{fp, lr}
   1d2c8:	mov	fp, sp
   1d2cc:	cmp	r0, #0
   1d2d0:	beq	1d2ec <__assert_fail@plt+0xbfe4>
   1d2d4:	cmp	r1, #0
   1d2d8:	beq	1d2f8 <__assert_fail@plt+0xbff0>
   1d2dc:	cmn	r1, #1
   1d2e0:	ble	1d304 <__assert_fail@plt+0xbffc>
   1d2e4:	pop	{fp, lr}
   1d2e8:	b	11104 <realloc@plt>
   1d2ec:	mov	r0, r1
   1d2f0:	pop	{fp, lr}
   1d2f4:	b	1d294 <__assert_fail@plt+0xbf8c>
   1d2f8:	bl	199f0 <__assert_fail@plt+0x86e8>
   1d2fc:	mov	r0, #0
   1d300:	pop	{fp, pc}
   1d304:	bl	1120c <__errno_location@plt>
   1d308:	mov	r1, #12
   1d30c:	str	r1, [r0]
   1d310:	mov	r0, #0
   1d314:	pop	{fp, pc}
   1d318:	push	{r4, r5, r6, sl, fp, lr}
   1d31c:	add	fp, sp, #16
   1d320:	mov	r4, r0
   1d324:	bl	11158 <__fpending@plt>
   1d328:	ldr	r6, [r4]
   1d32c:	mov	r5, r0
   1d330:	mov	r0, r4
   1d334:	bl	19848 <__assert_fail@plt+0x8540>
   1d338:	tst	r6, #32
   1d33c:	bne	1d374 <__assert_fail@plt+0xc06c>
   1d340:	cmp	r0, #0
   1d344:	mov	r4, r0
   1d348:	mvnne	r4, #0
   1d34c:	cmp	r5, #0
   1d350:	bne	1d380 <__assert_fail@plt+0xc078>
   1d354:	cmp	r0, #0
   1d358:	beq	1d380 <__assert_fail@plt+0xc078>
   1d35c:	bl	1120c <__errno_location@plt>
   1d360:	ldr	r0, [r0]
   1d364:	subs	r4, r0, #9
   1d368:	mvnne	r4, #0
   1d36c:	mov	r0, r4
   1d370:	pop	{r4, r5, r6, sl, fp, pc}
   1d374:	mvn	r4, #0
   1d378:	cmp	r0, #0
   1d37c:	beq	1d388 <__assert_fail@plt+0xc080>
   1d380:	mov	r0, r4
   1d384:	pop	{r4, r5, r6, sl, fp, pc}
   1d388:	bl	1120c <__errno_location@plt>
   1d38c:	mov	r1, #0
   1d390:	str	r1, [r0]
   1d394:	mov	r0, r4
   1d398:	pop	{r4, r5, r6, sl, fp, pc}
   1d39c:	sub	sp, sp, #8
   1d3a0:	push	{r4, r5, r6, r7, fp, lr}
   1d3a4:	add	fp, sp, #16
   1d3a8:	sub	sp, sp, #8
   1d3ac:	mov	r5, r0
   1d3b0:	add	r0, fp, #8
   1d3b4:	cmp	r1, #11
   1d3b8:	str	r2, [fp, #8]
   1d3bc:	str	r3, [fp, #12]
   1d3c0:	str	r0, [sp, #4]
   1d3c4:	bhi	1d400 <__assert_fail@plt+0xc0f8>
   1d3c8:	mov	r0, #1
   1d3cc:	movw	r2, #1300	; 0x514
   1d3d0:	tst	r2, r0, lsl r1
   1d3d4:	bne	1d4c0 <__assert_fail@plt+0xc1b8>
   1d3d8:	movw	r2, #2570	; 0xa0a
   1d3dc:	tst	r2, r0, lsl r1
   1d3e0:	bne	1d428 <__assert_fail@plt+0xc120>
   1d3e4:	cmp	r1, #0
   1d3e8:	bne	1d400 <__assert_fail@plt+0xc0f8>
   1d3ec:	ldr	r0, [sp, #4]
   1d3f0:	add	r1, r0, #4
   1d3f4:	str	r1, [sp, #4]
   1d3f8:	mov	r1, #0
   1d3fc:	b	1d4cc <__assert_fail@plt+0xc1c4>
   1d400:	sub	r0, r1, #1024	; 0x400
   1d404:	cmp	r0, #10
   1d408:	bhi	1d4c0 <__assert_fail@plt+0xc1b8>
   1d40c:	mov	r2, #1
   1d410:	movw	r3, #645	; 0x285
   1d414:	tst	r3, r2, lsl r0
   1d418:	bne	1d4c0 <__assert_fail@plt+0xc1b8>
   1d41c:	movw	r3, #1282	; 0x502
   1d420:	tst	r3, r2, lsl r0
   1d424:	beq	1d434 <__assert_fail@plt+0xc12c>
   1d428:	mov	r0, r5
   1d42c:	bl	11278 <fcntl64@plt>
   1d430:	b	1d4d8 <__assert_fail@plt+0xc1d0>
   1d434:	cmp	r0, #6
   1d438:	bne	1d4c0 <__assert_fail@plt+0xc1b8>
   1d43c:	ldr	r0, [sp, #4]
   1d440:	movw	r7, #62168	; 0xf2d8
   1d444:	movt	r7, #2
   1d448:	add	r1, r0, #4
   1d44c:	str	r1, [sp, #4]
   1d450:	ldr	r6, [r0]
   1d454:	ldr	r0, [r7]
   1d458:	cmp	r0, #0
   1d45c:	bmi	1d4fc <__assert_fail@plt+0xc1f4>
   1d460:	mov	r0, r5
   1d464:	movw	r1, #1030	; 0x406
   1d468:	mov	r2, r6
   1d46c:	bl	11278 <fcntl64@plt>
   1d470:	mov	r4, r0
   1d474:	cmn	r0, #1
   1d478:	bgt	1d4f0 <__assert_fail@plt+0xc1e8>
   1d47c:	bl	1120c <__errno_location@plt>
   1d480:	ldr	r0, [r0]
   1d484:	cmp	r0, #22
   1d488:	bne	1d4f0 <__assert_fail@plt+0xc1e8>
   1d48c:	mov	r0, r5
   1d490:	mov	r1, #0
   1d494:	mov	r2, r6
   1d498:	bl	11278 <fcntl64@plt>
   1d49c:	mov	r4, r0
   1d4a0:	cmp	r0, #0
   1d4a4:	bmi	1d4dc <__assert_fail@plt+0xc1d4>
   1d4a8:	mvn	r0, #0
   1d4ac:	str	r0, [r7]
   1d4b0:	mov	r0, #1
   1d4b4:	cmp	r0, #0
   1d4b8:	bne	1d528 <__assert_fail@plt+0xc220>
   1d4bc:	b	1d4dc <__assert_fail@plt+0xc1d4>
   1d4c0:	ldr	r0, [sp, #4]
   1d4c4:	add	r2, r0, #4
   1d4c8:	str	r2, [sp, #4]
   1d4cc:	ldr	r2, [r0]
   1d4d0:	mov	r0, r5
   1d4d4:	bl	11278 <fcntl64@plt>
   1d4d8:	mov	r4, r0
   1d4dc:	mov	r0, r4
   1d4e0:	sub	sp, fp, #16
   1d4e4:	pop	{r4, r5, r6, r7, fp, lr}
   1d4e8:	add	sp, sp, #8
   1d4ec:	bx	lr
   1d4f0:	mov	r0, #1
   1d4f4:	str	r0, [r7]
   1d4f8:	b	1d4dc <__assert_fail@plt+0xc1d4>
   1d4fc:	mov	r0, r5
   1d500:	mov	r1, #0
   1d504:	mov	r2, r6
   1d508:	bl	11278 <fcntl64@plt>
   1d50c:	mov	r4, r0
   1d510:	ldr	r0, [r7]
   1d514:	add	r0, r0, #1
   1d518:	clz	r0, r0
   1d51c:	lsr	r0, r0, #5
   1d520:	cmp	r0, #0
   1d524:	beq	1d4dc <__assert_fail@plt+0xc1d4>
   1d528:	cmp	r4, #0
   1d52c:	bmi	1d4dc <__assert_fail@plt+0xc1d4>
   1d530:	mov	r0, r4
   1d534:	mov	r1, #1
   1d538:	bl	11278 <fcntl64@plt>
   1d53c:	cmp	r0, #0
   1d540:	bmi	1d55c <__assert_fail@plt+0xc254>
   1d544:	orr	r2, r0, #1
   1d548:	mov	r0, r4
   1d54c:	mov	r1, #2
   1d550:	bl	11278 <fcntl64@plt>
   1d554:	cmn	r0, #1
   1d558:	bne	1d4dc <__assert_fail@plt+0xc1d4>
   1d55c:	bl	1120c <__errno_location@plt>
   1d560:	ldr	r6, [r0]
   1d564:	mov	r5, r0
   1d568:	mov	r0, r4
   1d56c:	bl	112f0 <close@plt>
   1d570:	str	r6, [r5]
   1d574:	mvn	r4, #0
   1d578:	b	1d4dc <__assert_fail@plt+0xc1d4>
   1d57c:	push	{fp, lr}
   1d580:	mov	fp, sp
   1d584:	mov	r0, #14
   1d588:	bl	112a8 <nl_langinfo@plt>
   1d58c:	movw	r1, #56699	; 0xdd7b
   1d590:	cmp	r0, #0
   1d594:	movt	r1, #1
   1d598:	movne	r1, r0
   1d59c:	movw	r0, #60534	; 0xec76
   1d5a0:	ldrb	r2, [r1]
   1d5a4:	movt	r0, #1
   1d5a8:	cmp	r2, #0
   1d5ac:	movne	r0, r1
   1d5b0:	pop	{fp, pc}
   1d5b4:	push	{r4, r5, r6, r7, fp, lr}
   1d5b8:	add	fp, sp, #16
   1d5bc:	sub	sp, sp, #8
   1d5c0:	cmp	r0, #0
   1d5c4:	add	r5, sp, #4
   1d5c8:	mov	r7, r2
   1d5cc:	mov	r4, r1
   1d5d0:	movne	r5, r0
   1d5d4:	mov	r0, r5
   1d5d8:	bl	11164 <mbrtowc@plt>
   1d5dc:	mov	r6, r0
   1d5e0:	cmp	r7, #0
   1d5e4:	beq	1d60c <__assert_fail@plt+0xc304>
   1d5e8:	cmn	r6, #2
   1d5ec:	bcc	1d60c <__assert_fail@plt+0xc304>
   1d5f0:	mov	r0, #0
   1d5f4:	bl	1d654 <__assert_fail@plt+0xc34c>
   1d5f8:	cmp	r0, #0
   1d5fc:	bne	1d60c <__assert_fail@plt+0xc304>
   1d600:	ldrb	r0, [r4]
   1d604:	mov	r6, #1
   1d608:	str	r0, [r5]
   1d60c:	mov	r0, r6
   1d610:	sub	sp, fp, #16
   1d614:	pop	{r4, r5, r6, r7, fp, pc}
   1d618:	cmp	r2, #0
   1d61c:	beq	1d64c <__assert_fail@plt+0xc344>
   1d620:	mvn	r3, #0
   1d624:	udiv	r3, r3, r2
   1d628:	cmp	r3, r1
   1d62c:	bcs	1d64c <__assert_fail@plt+0xc344>
   1d630:	push	{fp, lr}
   1d634:	mov	fp, sp
   1d638:	bl	1120c <__errno_location@plt>
   1d63c:	mov	r1, #12
   1d640:	str	r1, [r0]
   1d644:	mov	r0, #0
   1d648:	pop	{fp, pc}
   1d64c:	mul	r1, r2, r1
   1d650:	b	1d2c4 <__assert_fail@plt+0xbfbc>
   1d654:	push	{r4, sl, fp, lr}
   1d658:	add	fp, sp, #8
   1d65c:	sub	sp, sp, #264	; 0x108
   1d660:	add	r1, sp, #7
   1d664:	movw	r2, #257	; 0x101
   1d668:	bl	1d6c0 <__assert_fail@plt+0xc3b8>
   1d66c:	mov	r4, #0
   1d670:	cmp	r0, #0
   1d674:	bne	1d6b4 <__assert_fail@plt+0xc3ac>
   1d678:	movw	r1, #60540	; 0xec7c
   1d67c:	add	r0, sp, #7
   1d680:	mov	r2, #2
   1d684:	movt	r1, #1
   1d688:	bl	111e8 <bcmp@plt>
   1d68c:	cmp	r0, #0
   1d690:	beq	1d6b4 <__assert_fail@plt+0xc3ac>
   1d694:	movw	r1, #60542	; 0xec7e
   1d698:	add	r0, sp, #7
   1d69c:	mov	r2, #6
   1d6a0:	movt	r1, #1
   1d6a4:	bl	111e8 <bcmp@plt>
   1d6a8:	cmp	r0, #0
   1d6ac:	mov	r4, r0
   1d6b0:	movwne	r4, #1
   1d6b4:	mov	r0, r4
   1d6b8:	sub	sp, fp, #8
   1d6bc:	pop	{r4, sl, fp, pc}
   1d6c0:	push	{r4, r5, r6, r7, fp, lr}
   1d6c4:	add	fp, sp, #16
   1d6c8:	mov	r4, r1
   1d6cc:	mov	r1, #0
   1d6d0:	mov	r6, r2
   1d6d4:	bl	11290 <setlocale@plt>
   1d6d8:	cmp	r0, #0
   1d6dc:	beq	1d70c <__assert_fail@plt+0xc404>
   1d6e0:	mov	r7, r0
   1d6e4:	bl	111f4 <strlen@plt>
   1d6e8:	cmp	r0, r6
   1d6ec:	bcs	1d728 <__assert_fail@plt+0xc420>
   1d6f0:	add	r2, r0, #1
   1d6f4:	mov	r0, r4
   1d6f8:	mov	r1, r7
   1d6fc:	bl	110d4 <memcpy@plt>
   1d700:	mov	r5, #0
   1d704:	mov	r0, r5
   1d708:	pop	{r4, r5, r6, r7, fp, pc}
   1d70c:	mov	r5, #22
   1d710:	cmp	r6, #0
   1d714:	beq	1d750 <__assert_fail@plt+0xc448>
   1d718:	mov	r0, #0
   1d71c:	strb	r0, [r4]
   1d720:	mov	r0, r5
   1d724:	pop	{r4, r5, r6, r7, fp, pc}
   1d728:	mov	r5, #34	; 0x22
   1d72c:	cmp	r6, #0
   1d730:	beq	1d750 <__assert_fail@plt+0xc448>
   1d734:	sub	r6, r6, #1
   1d738:	mov	r0, r4
   1d73c:	mov	r1, r7
   1d740:	mov	r2, r6
   1d744:	bl	110d4 <memcpy@plt>
   1d748:	mov	r0, #0
   1d74c:	strb	r0, [r4, r6]
   1d750:	mov	r0, r5
   1d754:	pop	{r4, r5, r6, r7, fp, pc}
   1d758:	mov	r1, #0
   1d75c:	b	11290 <setlocale@plt>
   1d760:	cmp	r3, #0
   1d764:	cmpeq	r2, #0
   1d768:	bne	1d780 <__assert_fail@plt+0xc478>
   1d76c:	cmp	r1, #0
   1d770:	cmpeq	r0, #0
   1d774:	mvnne	r1, #0
   1d778:	mvnne	r0, #0
   1d77c:	b	1d79c <__assert_fail@plt+0xc494>
   1d780:	sub	sp, sp, #8
   1d784:	push	{sp, lr}
   1d788:	bl	1d7ac <__assert_fail@plt+0xc4a4>
   1d78c:	ldr	lr, [sp, #4]
   1d790:	add	sp, sp, #8
   1d794:	pop	{r2, r3}
   1d798:	bx	lr
   1d79c:	push	{r1, lr}
   1d7a0:	mov	r0, #8
   1d7a4:	bl	11074 <raise@plt>
   1d7a8:	pop	{r1, pc}
   1d7ac:	cmp	r1, r3
   1d7b0:	cmpeq	r0, r2
   1d7b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7b8:	mov	r4, r0
   1d7bc:	movcc	r0, #0
   1d7c0:	mov	r5, r1
   1d7c4:	ldr	lr, [sp, #36]	; 0x24
   1d7c8:	movcc	r1, r0
   1d7cc:	bcc	1d8c8 <__assert_fail@plt+0xc5c0>
   1d7d0:	cmp	r3, #0
   1d7d4:	clzeq	ip, r2
   1d7d8:	clzne	ip, r3
   1d7dc:	addeq	ip, ip, #32
   1d7e0:	cmp	r5, #0
   1d7e4:	clzeq	r1, r4
   1d7e8:	addeq	r1, r1, #32
   1d7ec:	clzne	r1, r5
   1d7f0:	sub	ip, ip, r1
   1d7f4:	sub	sl, ip, #32
   1d7f8:	lsl	r9, r3, ip
   1d7fc:	rsb	fp, ip, #32
   1d800:	orr	r9, r9, r2, lsl sl
   1d804:	orr	r9, r9, r2, lsr fp
   1d808:	lsl	r8, r2, ip
   1d80c:	cmp	r5, r9
   1d810:	cmpeq	r4, r8
   1d814:	movcc	r0, #0
   1d818:	movcc	r1, r0
   1d81c:	bcc	1d838 <__assert_fail@plt+0xc530>
   1d820:	mov	r0, #1
   1d824:	subs	r4, r4, r8
   1d828:	lsl	r1, r0, sl
   1d82c:	orr	r1, r1, r0, lsr fp
   1d830:	lsl	r0, r0, ip
   1d834:	sbc	r5, r5, r9
   1d838:	cmp	ip, #0
   1d83c:	beq	1d8c8 <__assert_fail@plt+0xc5c0>
   1d840:	lsr	r6, r8, #1
   1d844:	orr	r6, r6, r9, lsl #31
   1d848:	lsr	r7, r9, #1
   1d84c:	mov	r2, ip
   1d850:	b	1d874 <__assert_fail@plt+0xc56c>
   1d854:	subs	r3, r4, r6
   1d858:	sbc	r8, r5, r7
   1d85c:	adds	r3, r3, r3
   1d860:	adc	r8, r8, r8
   1d864:	adds	r4, r3, #1
   1d868:	adc	r5, r8, #0
   1d86c:	subs	r2, r2, #1
   1d870:	beq	1d890 <__assert_fail@plt+0xc588>
   1d874:	cmp	r5, r7
   1d878:	cmpeq	r4, r6
   1d87c:	bcs	1d854 <__assert_fail@plt+0xc54c>
   1d880:	adds	r4, r4, r4
   1d884:	adc	r5, r5, r5
   1d888:	subs	r2, r2, #1
   1d88c:	bne	1d874 <__assert_fail@plt+0xc56c>
   1d890:	lsr	r3, r4, ip
   1d894:	orr	r3, r3, r5, lsl fp
   1d898:	lsr	r2, r5, ip
   1d89c:	orr	r3, r3, r5, lsr sl
   1d8a0:	adds	r0, r0, r4
   1d8a4:	mov	r4, r3
   1d8a8:	lsl	r3, r2, ip
   1d8ac:	orr	r3, r3, r4, lsl sl
   1d8b0:	lsl	ip, r4, ip
   1d8b4:	orr	r3, r3, r4, lsr fp
   1d8b8:	adc	r1, r1, r5
   1d8bc:	subs	r0, r0, ip
   1d8c0:	mov	r5, r2
   1d8c4:	sbc	r1, r1, r3
   1d8c8:	cmp	lr, #0
   1d8cc:	strdne	r4, [lr]
   1d8d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d8d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d8d8:	mov	r7, r0
   1d8dc:	ldr	r6, [pc, #72]	; 1d92c <__assert_fail@plt+0xc624>
   1d8e0:	ldr	r5, [pc, #72]	; 1d930 <__assert_fail@plt+0xc628>
   1d8e4:	add	r6, pc, r6
   1d8e8:	add	r5, pc, r5
   1d8ec:	sub	r6, r6, r5
   1d8f0:	mov	r8, r1
   1d8f4:	mov	r9, r2
   1d8f8:	bl	11030 <fdopen@plt-0x20>
   1d8fc:	asrs	r6, r6, #2
   1d900:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d904:	mov	r4, #0
   1d908:	add	r4, r4, #1
   1d90c:	ldr	r3, [r5], #4
   1d910:	mov	r2, r9
   1d914:	mov	r1, r8
   1d918:	mov	r0, r7
   1d91c:	blx	r3
   1d920:	cmp	r6, r4
   1d924:	bne	1d908 <__assert_fail@plt+0xc600>
   1d928:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d92c:	andeq	r1, r1, r0, lsr #12
   1d930:	andeq	r1, r1, r8, lsl r6
   1d934:	bx	lr
   1d938:	ldr	r3, [pc, #12]	; 1d94c <__assert_fail@plt+0xc644>
   1d93c:	mov	r1, #0
   1d940:	add	r3, pc, r3
   1d944:	ldr	r2, [r3]
   1d948:	b	11218 <__cxa_atexit@plt>
   1d94c:			; <UNDEFINED> instruction: 0x000117bc

Disassembly of section .fini:

0001d950 <.fini>:
   1d950:	push	{r3, lr}
   1d954:	pop	{r3, pc}
