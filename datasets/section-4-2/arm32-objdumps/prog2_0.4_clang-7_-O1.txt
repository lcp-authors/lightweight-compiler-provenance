
../repos/prog2/0.4:     file format elf32-littlearm


Disassembly of section .init:

0001066c <.init>:
   1066c:	push	{r3, lr}
   10670:	bl	1071c <_start@@Base+0x3c>
   10674:	pop	{r3, pc}

Disassembly of section .plt:

00010678 <printf@plt-0x14>:
   10678:	push	{lr}		; (str lr, [sp, #-4]!)
   1067c:	ldr	lr, [pc, #4]	; 10688 <printf@plt-0x4>
   10680:	add	lr, pc, lr
   10684:	ldr	pc, [lr, #8]!
   10688:	andeq	r0, r1, r8, ror r9

0001068c <printf@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2424]!	; 0x978

00010698 <puts@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2416]!	; 0x970

000106a4 <malloc@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2408]!	; 0x968

000106b0 <__libc_start_main@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2400]!	; 0x960

000106bc <__gmon_start__@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2392]!	; 0x958

000106c8 <__isoc99_scanf@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2384]!	; 0x950

000106d4 <abort@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2376]!	; 0x948

Disassembly of section .text:

000106e0 <_start@@Base>:
   106e0:	mov	fp, #0
   106e4:	mov	lr, #0
   106e8:	pop	{r1}		; (ldr r1, [sp], #4)
   106ec:	mov	r2, sp
   106f0:	push	{r2}		; (str r2, [sp, #-4]!)
   106f4:	push	{r0}		; (str r0, [sp, #-4]!)
   106f8:	ldr	ip, [pc, #16]	; 10710 <_start@@Base+0x30>
   106fc:	push	{ip}		; (str ip, [sp, #-4]!)
   10700:	ldr	r0, [pc, #12]	; 10714 <_start@@Base+0x34>
   10704:	ldr	r3, [pc, #12]	; 10718 <_start@@Base+0x38>
   10708:	bl	106b0 <__libc_start_main@plt>
   1070c:	bl	106d4 <abort@plt>
   10710:	andeq	r0, r1, r8, lsr #19
   10714:	andeq	r0, r1, r8, lsl r8
   10718:	andeq	r0, r1, r8, asr #18
   1071c:	ldr	r3, [pc, #20]	; 10738 <_start@@Base+0x58>
   10720:	ldr	r2, [pc, #20]	; 1073c <_start@@Base+0x5c>
   10724:	add	r3, pc, r3
   10728:	ldr	r2, [r3, r2]
   1072c:	cmp	r2, #0
   10730:	bxeq	lr
   10734:	b	106bc <__gmon_start__@plt>
   10738:	ldrdeq	r0, [r1], -r4
   1073c:	andeq	r0, r0, r8, lsr #32
   10740:	ldr	r0, [pc, #24]	; 10760 <_start@@Base+0x80>
   10744:	ldr	r3, [pc, #24]	; 10764 <_start@@Base+0x84>
   10748:	cmp	r3, r0
   1074c:	bxeq	lr
   10750:	ldr	r3, [pc, #16]	; 10768 <_start@@Base+0x88>
   10754:	cmp	r3, #0
   10758:	bxeq	lr
   1075c:	bx	r3
   10760:	andeq	r1, r2, r4, lsr r0
   10764:	andeq	r1, r2, r4, lsr r0
   10768:	andeq	r0, r0, r0
   1076c:	ldr	r0, [pc, #36]	; 10798 <_start@@Base+0xb8>
   10770:	ldr	r1, [pc, #36]	; 1079c <_start@@Base+0xbc>
   10774:	sub	r1, r1, r0
   10778:	asr	r1, r1, #2
   1077c:	add	r1, r1, r1, lsr #31
   10780:	asrs	r1, r1, #1
   10784:	bxeq	lr
   10788:	ldr	r3, [pc, #16]	; 107a0 <_start@@Base+0xc0>
   1078c:	cmp	r3, #0
   10790:	bxeq	lr
   10794:	bx	r3
   10798:	andeq	r1, r2, r4, lsr r0
   1079c:	andeq	r1, r2, r4, lsr r0
   107a0:	andeq	r0, r0, r0
   107a4:	push	{r4, lr}
   107a8:	ldr	r4, [pc, #24]	; 107c8 <_start@@Base+0xe8>
   107ac:	ldrb	r3, [r4]
   107b0:	cmp	r3, #0
   107b4:	popne	{r4, pc}
   107b8:	bl	10740 <_start@@Base+0x60>
   107bc:	mov	r3, #1
   107c0:	strb	r3, [r4]
   107c4:	pop	{r4, pc}
   107c8:	andeq	r1, r2, r4, lsr r0
   107cc:	b	1076c <_start@@Base+0x8c>

000107d0 <ordenado@@Base>:
   107d0:	mov	r2, #1
   107d4:	cmp	r1, #2
   107d8:	blt	10810 <ordenado@@Base+0x40>
   107dc:	ldr	ip, [r0]
   107e0:	mov	r2, #1
   107e4:	ldr	r3, [r0, r2, lsl #2]
   107e8:	cmp	r3, ip
   107ec:	blt	1080c <ordenado@@Base+0x3c>
   107f0:	add	r2, r2, #1
   107f4:	cmp	r2, r1
   107f8:	mov	ip, r3
   107fc:	blt	107e4 <ordenado@@Base+0x14>
   10800:	mov	r2, #1
   10804:	mov	r0, r2
   10808:	bx	lr
   1080c:	mov	r2, #0
   10810:	mov	r0, r2
   10814:	bx	lr

00010818 <main@@Base>:
   10818:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1081c:	add	fp, sp, #24
   10820:	sub	sp, sp, #8
   10824:	movw	r0, #2500	; 0x9c4
   10828:	movt	r0, #1
   1082c:	bl	1068c <printf@plt>
   10830:	movw	r0, #2533	; 0x9e5
   10834:	movt	r0, #1
   10838:	add	r1, sp, #4
   1083c:	bl	106c8 <__isoc99_scanf@plt>
   10840:	ldr	r5, [sp, #4]
   10844:	cmp	r5, #101	; 0x65
   10848:	blt	10870 <main@@Base+0x58>
   1084c:	movw	r0, #2536	; 0x9e8
   10850:	movt	r0, #1
   10854:	bl	1068c <printf@plt>
   10858:	mov	r0, #100	; 0x64
   1085c:	str	r0, [sp, #4]
   10860:	mov	r0, #400	; 0x190
   10864:	bl	106a4 <malloc@plt>
   10868:	mov	r8, r0
   1086c:	b	10884 <main@@Base+0x6c>
   10870:	lsl	r0, r5, #2
   10874:	bl	106a4 <malloc@plt>
   10878:	mov	r8, r0
   1087c:	cmp	r5, #1
   10880:	blt	108c8 <main@@Base+0xb0>
   10884:	mov	r6, #0
   10888:	movw	r9, #2581	; 0xa15
   1088c:	movt	r9, #1
   10890:	movw	r4, #2533	; 0x9e5
   10894:	movt	r4, #1
   10898:	mov	r7, r8
   1089c:	add	r6, r6, #1
   108a0:	mov	r0, r9
   108a4:	mov	r1, r6
   108a8:	bl	1068c <printf@plt>
   108ac:	mov	r0, r4
   108b0:	mov	r1, r7
   108b4:	bl	106c8 <__isoc99_scanf@plt>
   108b8:	add	r7, r7, #4
   108bc:	ldr	r5, [sp, #4]
   108c0:	cmp	r6, r5
   108c4:	blt	1089c <main@@Base+0x84>
   108c8:	mov	r0, r8
   108cc:	mov	r1, r5
   108d0:	bl	107d0 <ordenado@@Base>
   108d4:	cmp	r0, #0
   108d8:	beq	10930 <main@@Base+0x118>
   108dc:	movw	r0, #2605	; 0xa2d
   108e0:	movt	r0, #1
   108e4:	bl	1068c <printf@plt>
   108e8:	ldr	r5, [sp, #4]
   108ec:	add	r0, r8, r5, lsl #2
   108f0:	ldr	r1, [r0, #-4]
   108f4:	cmp	r5, #2
   108f8:	blt	10920 <main@@Base+0x108>
   108fc:	sub	r6, r8, #8
   10900:	movw	r4, #2672	; 0xa70
   10904:	movt	r4, #1
   10908:	mov	r0, r4
   1090c:	bl	1068c <printf@plt>
   10910:	ldr	r1, [r6, r5, lsl #2]
   10914:	sub	r5, r5, #1
   10918:	cmp	r5, #1
   1091c:	bgt	10908 <main@@Base+0xf0>
   10920:	movw	r0, #2676	; 0xa74
   10924:	movt	r0, #1
   10928:	bl	1068c <printf@plt>
   1092c:	b	1093c <main@@Base+0x124>
   10930:	movw	r0, #2688	; 0xa80
   10934:	movt	r0, #1
   10938:	bl	10698 <puts@plt>
   1093c:	mov	r0, #0
   10940:	sub	sp, fp, #24
   10944:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00010948 <__libc_csu_init@@Base>:
   10948:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1094c:	mov	r7, r0
   10950:	ldr	r6, [pc, #72]	; 109a0 <__libc_csu_init@@Base+0x58>
   10954:	ldr	r5, [pc, #72]	; 109a4 <__libc_csu_init@@Base+0x5c>
   10958:	add	r6, pc, r6
   1095c:	add	r5, pc, r5
   10960:	sub	r6, r6, r5
   10964:	mov	r8, r1
   10968:	mov	r9, r2
   1096c:	bl	1066c <printf@plt-0x20>
   10970:	asrs	r6, r6, #2
   10974:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10978:	mov	r4, #0
   1097c:	add	r4, r4, #1
   10980:	ldr	r3, [r5], #4
   10984:	mov	r2, r9
   10988:	mov	r1, r8
   1098c:	mov	r0, r7
   10990:	blx	r3
   10994:	cmp	r6, r4
   10998:	bne	1097c <__libc_csu_init@@Base+0x34>
   1099c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109a0:	andeq	r0, r1, ip, lsr #11
   109a4:	andeq	r0, r1, r4, lsr #11

000109a8 <__libc_csu_fini@@Base>:
   109a8:	bx	lr

Disassembly of section .fini:

000109ac <.fini>:
   109ac:	push	{r3, lr}
   109b0:	pop	{r3, pc}
