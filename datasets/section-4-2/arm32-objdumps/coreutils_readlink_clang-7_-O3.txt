
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010d70 <.init>:
   10d70:	push	{r3, lr}
   10d74:	bl	11034 <__mempcpy_chk@plt+0x4c>
   10d78:	pop	{r3, pc}

Disassembly of section .plt:

00010d7c <calloc@plt-0x14>:
   10d7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d80:	ldr	lr, [pc, #4]	; 10d8c <calloc@plt-0x4>
   10d84:	add	lr, pc, lr
   10d88:	ldr	pc, [lr, #8]!
   10d8c:	andeq	r7, r1, r4, ror r2

00010d90 <calloc@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #94208	; 0x17000
   10d98:	ldr	pc, [ip, #628]!	; 0x274

00010d9c <fputs_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #94208	; 0x17000
   10da4:	ldr	pc, [ip, #620]!	; 0x26c

00010da8 <raise@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #94208	; 0x17000
   10db0:	ldr	pc, [ip, #612]!	; 0x264

00010db4 <strcmp@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #94208	; 0x17000
   10dbc:	ldr	pc, [ip, #604]!	; 0x25c

00010dc0 <fflush@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #94208	; 0x17000
   10dc8:	ldr	pc, [ip, #596]!	; 0x254

00010dcc <memmove@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #588]!	; 0x24c

00010dd8 <free@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #580]!	; 0x244

00010de4 <faccessat@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #572]!	; 0x23c

00010df0 <_exit@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #564]!	; 0x234

00010dfc <memcpy@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #556]!	; 0x22c

00010e08 <mbsinit@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #548]!	; 0x224

00010e14 <memcmp@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #540]!	; 0x21c

00010e20 <dcgettext@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #532]!	; 0x214

00010e2c <realloc@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #524]!	; 0x20c

00010e38 <textdomain@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #516]!	; 0x204

00010e44 <rawmemchr@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e50 <iswprint@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #500]!	; 0x1f4

00010e5c <readlink@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #492]!	; 0x1ec

00010e68 <fwrite@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #94208	; 0x17000
   10e70:	ldr	pc, [ip, #484]!	; 0x1e4

00010e74 <lseek64@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #94208	; 0x17000
   10e7c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e80 <__ctype_get_mb_cur_max@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #94208	; 0x17000
   10e88:	ldr	pc, [ip, #468]!	; 0x1d4

00010e8c <__fpending@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #94208	; 0x17000
   10e94:	ldr	pc, [ip, #460]!	; 0x1cc

00010e98 <mbrtowc@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #94208	; 0x17000
   10ea0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ea4 <error@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #94208	; 0x17000
   10eac:	ldr	pc, [ip, #444]!	; 0x1bc

00010eb0 <malloc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #94208	; 0x17000
   10eb8:	ldr	pc, [ip, #436]!	; 0x1b4

00010ebc <__libc_start_main@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #94208	; 0x17000
   10ec4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ec8 <__freading@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #94208	; 0x17000
   10ed0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ed4 <__gmon_start__@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #94208	; 0x17000
   10edc:	ldr	pc, [ip, #412]!	; 0x19c

00010ee0 <getopt_long@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #94208	; 0x17000
   10ee8:	ldr	pc, [ip, #404]!	; 0x194

00010eec <__ctype_b_loc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #94208	; 0x17000
   10ef4:	ldr	pc, [ip, #396]!	; 0x18c

00010ef8 <getcwd@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #94208	; 0x17000
   10f00:	ldr	pc, [ip, #388]!	; 0x184

00010f04 <exit@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #94208	; 0x17000
   10f0c:	ldr	pc, [ip, #380]!	; 0x17c

00010f10 <strlen@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #94208	; 0x17000
   10f18:	ldr	pc, [ip, #372]!	; 0x174

00010f1c <__errno_location@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #94208	; 0x17000
   10f24:	ldr	pc, [ip, #364]!	; 0x16c

00010f28 <__cxa_atexit@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #94208	; 0x17000
   10f30:	ldr	pc, [ip, #356]!	; 0x164

00010f34 <memset@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #94208	; 0x17000
   10f3c:	ldr	pc, [ip, #348]!	; 0x15c

00010f40 <__printf_chk@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #94208	; 0x17000
   10f48:	ldr	pc, [ip, #340]!	; 0x154

00010f4c <fileno@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #94208	; 0x17000
   10f54:	ldr	pc, [ip, #332]!	; 0x14c

00010f58 <__fprintf_chk@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #94208	; 0x17000
   10f60:	ldr	pc, [ip, #324]!	; 0x144

00010f64 <fclose@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #94208	; 0x17000
   10f6c:	ldr	pc, [ip, #316]!	; 0x13c

00010f70 <fseeko64@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #94208	; 0x17000
   10f78:	ldr	pc, [ip, #308]!	; 0x134

00010f7c <__overflow@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #94208	; 0x17000
   10f84:	ldr	pc, [ip, #300]!	; 0x12c

00010f88 <setlocale@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #94208	; 0x17000
   10f90:	ldr	pc, [ip, #292]!	; 0x124

00010f94 <strrchr@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #94208	; 0x17000
   10f9c:	ldr	pc, [ip, #284]!	; 0x11c

00010fa0 <nl_langinfo@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #94208	; 0x17000
   10fa8:	ldr	pc, [ip, #276]!	; 0x114

00010fac <bindtextdomain@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #94208	; 0x17000
   10fb4:	ldr	pc, [ip, #268]!	; 0x10c

00010fb8 <__xstat64@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #94208	; 0x17000
   10fc0:	ldr	pc, [ip, #260]!	; 0x104

00010fc4 <strncmp@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #94208	; 0x17000
   10fcc:	ldr	pc, [ip, #252]!	; 0xfc

00010fd0 <abort@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #94208	; 0x17000
   10fd8:	ldr	pc, [ip, #244]!	; 0xf4

00010fdc <strspn@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #94208	; 0x17000
   10fe4:	ldr	pc, [ip, #236]!	; 0xec

00010fe8 <__mempcpy_chk@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #94208	; 0x17000
   10ff0:	ldr	pc, [ip, #228]!	; 0xe4

Disassembly of section .text:

00010ff8 <.text>:
   10ff8:	mov	fp, #0
   10ffc:	mov	lr, #0
   11000:	pop	{r1}		; (ldr r1, [sp], #4)
   11004:	mov	r2, sp
   11008:	push	{r2}		; (str r2, [sp, #-4]!)
   1100c:	push	{r0}		; (str r0, [sp, #-4]!)
   11010:	ldr	ip, [pc, #16]	; 11028 <__mempcpy_chk@plt+0x40>
   11014:	push	{ip}		; (str ip, [sp, #-4]!)
   11018:	ldr	r0, [pc, #12]	; 1102c <__mempcpy_chk@plt+0x44>
   1101c:	ldr	r3, [pc, #12]	; 11030 <__mempcpy_chk@plt+0x48>
   11020:	bl	10ebc <__libc_start_main@plt>
   11024:	bl	10fd0 <abort@plt>
   11028:	andeq	r6, r1, r0, ror ip
   1102c:	andeq	r1, r1, r4, ror #6
   11030:	andeq	r6, r1, r0, lsl ip
   11034:	ldr	r3, [pc, #20]	; 11050 <__mempcpy_chk@plt+0x68>
   11038:	ldr	r2, [pc, #20]	; 11054 <__mempcpy_chk@plt+0x6c>
   1103c:	add	r3, pc, r3
   11040:	ldr	r2, [r3, r2]
   11044:	cmp	r2, #0
   11048:	bxeq	lr
   1104c:	b	10ed4 <__gmon_start__@plt>
   11050:			; <UNDEFINED> instruction: 0x00016fbc
   11054:	ldrdeq	r0, [r0], -r8
   11058:	ldr	r0, [pc, #24]	; 11078 <__mempcpy_chk@plt+0x90>
   1105c:	ldr	r3, [pc, #24]	; 1107c <__mempcpy_chk@plt+0x94>
   11060:	cmp	r3, r0
   11064:	bxeq	lr
   11068:	ldr	r3, [pc, #16]	; 11080 <__mempcpy_chk@plt+0x98>
   1106c:	cmp	r3, #0
   11070:	bxeq	lr
   11074:	bx	r3
   11078:	andeq	r8, r2, r0, lsr r1
   1107c:	andeq	r8, r2, r0, lsr r1
   11080:	andeq	r0, r0, r0
   11084:	ldr	r0, [pc, #36]	; 110b0 <__mempcpy_chk@plt+0xc8>
   11088:	ldr	r1, [pc, #36]	; 110b4 <__mempcpy_chk@plt+0xcc>
   1108c:	sub	r1, r1, r0
   11090:	asr	r1, r1, #2
   11094:	add	r1, r1, r1, lsr #31
   11098:	asrs	r1, r1, #1
   1109c:	bxeq	lr
   110a0:	ldr	r3, [pc, #16]	; 110b8 <__mempcpy_chk@plt+0xd0>
   110a4:	cmp	r3, #0
   110a8:	bxeq	lr
   110ac:	bx	r3
   110b0:	andeq	r8, r2, r0, lsr r1
   110b4:	andeq	r8, r2, r0, lsr r1
   110b8:	andeq	r0, r0, r0
   110bc:	push	{r4, lr}
   110c0:	ldr	r4, [pc, #24]	; 110e0 <__mempcpy_chk@plt+0xf8>
   110c4:	ldrb	r3, [r4]
   110c8:	cmp	r3, #0
   110cc:	popne	{r4, pc}
   110d0:	bl	11058 <__mempcpy_chk@plt+0x70>
   110d4:	mov	r3, #1
   110d8:	strb	r3, [r4]
   110dc:	pop	{r4, pc}
   110e0:	andeq	r8, r2, r8, asr #2
   110e4:	b	11084 <__mempcpy_chk@plt+0x9c>
   110e8:	push	{fp, lr}
   110ec:	mov	fp, sp
   110f0:	sub	sp, sp, #56	; 0x38
   110f4:	mov	r4, r0
   110f8:	cmp	r0, #0
   110fc:	bne	11320 <__mempcpy_chk@plt+0x338>
   11100:	movw	r1, #27843	; 0x6cc3
   11104:	mov	r0, #0
   11108:	mov	r2, #5
   1110c:	movt	r1, #1
   11110:	bl	10e20 <dcgettext@plt>
   11114:	mov	r1, r0
   11118:	movw	r0, #33108	; 0x8154
   1111c:	movt	r0, #2
   11120:	ldr	r2, [r0]
   11124:	mov	r0, #1
   11128:	bl	10f40 <__printf_chk@plt>
   1112c:	movw	r1, #27874	; 0x6ce2
   11130:	mov	r0, #0
   11134:	mov	r2, #5
   11138:	movt	r1, #1
   1113c:	bl	10e20 <dcgettext@plt>
   11140:	movw	r7, #33092	; 0x8144
   11144:	movt	r7, #2
   11148:	ldr	r1, [r7]
   1114c:	bl	10d9c <fputs_unlocked@plt>
   11150:	movw	r1, #27930	; 0x6d1a
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	movt	r1, #1
   11160:	bl	10e20 <dcgettext@plt>
   11164:	ldr	r1, [r7]
   11168:	bl	10d9c <fputs_unlocked@plt>
   1116c:	movw	r1, #28367	; 0x6ecf
   11170:	mov	r0, #0
   11174:	mov	r2, #5
   11178:	movt	r1, #1
   1117c:	bl	10e20 <dcgettext@plt>
   11180:	ldr	r1, [r7]
   11184:	bl	10d9c <fputs_unlocked@plt>
   11188:	movw	r1, #28888	; 0x70d8
   1118c:	mov	r0, #0
   11190:	mov	r2, #5
   11194:	movt	r1, #1
   11198:	bl	10e20 <dcgettext@plt>
   1119c:	ldr	r1, [r7]
   111a0:	bl	10d9c <fputs_unlocked@plt>
   111a4:	movw	r1, #28933	; 0x7105
   111a8:	mov	r0, #0
   111ac:	mov	r2, #5
   111b0:	movt	r1, #1
   111b4:	bl	10e20 <dcgettext@plt>
   111b8:	ldr	r1, [r7]
   111bc:	bl	10d9c <fputs_unlocked@plt>
   111c0:	movw	r0, #29720	; 0x7418
   111c4:	mov	r2, #48	; 0x30
   111c8:	mov	r6, sp
   111cc:	movw	r5, #28987	; 0x713b
   111d0:	movt	r0, #1
   111d4:	movt	r5, #1
   111d8:	add	r1, r0, #32
   111dc:	add	r3, r0, #16
   111e0:	vld1.64	{d18-d19}, [r0], r2
   111e4:	vld1.64	{d16-d17}, [r1]
   111e8:	vld1.64	{d20-d21}, [r3]
   111ec:	add	r1, r6, #32
   111f0:	vldr	d22, [r0]
   111f4:	add	r0, r6, #16
   111f8:	vst1.64	{d16-d17}, [r1]
   111fc:	movw	r1, #29121	; 0x71c1
   11200:	vst1.64	{d20-d21}, [r0]
   11204:	mov	r0, r6
   11208:	vst1.64	{d18-d19}, [r0], r2
   1120c:	movt	r1, #1
   11210:	vstr	d22, [r0]
   11214:	mov	r0, r5
   11218:	bl	10db4 <strcmp@plt>
   1121c:	cmp	r0, #0
   11220:	ldrne	r1, [r6, #8]!
   11224:	cmpne	r1, #0
   11228:	bne	11214 <__mempcpy_chk@plt+0x22c>
   1122c:	ldr	r6, [r6, #4]
   11230:	movw	r1, #29216	; 0x7220
   11234:	mov	r0, #0
   11238:	mov	r2, #5
   1123c:	movt	r1, #1
   11240:	bl	10e20 <dcgettext@plt>
   11244:	movw	r2, #29029	; 0x7165
   11248:	movw	r3, #29239	; 0x7237
   1124c:	mov	r1, r0
   11250:	mov	r0, #1
   11254:	movt	r2, #1
   11258:	movt	r3, #1
   1125c:	bl	10f40 <__printf_chk@plt>
   11260:	cmp	r6, #0
   11264:	mov	r0, #5
   11268:	mov	r1, #0
   1126c:	moveq	r6, r5
   11270:	bl	10f88 <setlocale@plt>
   11274:	cmp	r0, #0
   11278:	beq	112b0 <__mempcpy_chk@plt+0x2c8>
   1127c:	movw	r1, #29279	; 0x725f
   11280:	mov	r2, #3
   11284:	movt	r1, #1
   11288:	bl	10fc4 <strncmp@plt>
   1128c:	cmp	r0, #0
   11290:	beq	112b0 <__mempcpy_chk@plt+0x2c8>
   11294:	movw	r1, #29283	; 0x7263
   11298:	mov	r0, #0
   1129c:	mov	r2, #5
   112a0:	movt	r1, #1
   112a4:	bl	10e20 <dcgettext@plt>
   112a8:	ldr	r1, [r7]
   112ac:	bl	10d9c <fputs_unlocked@plt>
   112b0:	movw	r1, #29354	; 0x72aa
   112b4:	mov	r0, #0
   112b8:	mov	r2, #5
   112bc:	movt	r1, #1
   112c0:	bl	10e20 <dcgettext@plt>
   112c4:	movw	r2, #29239	; 0x7237
   112c8:	mov	r1, r0
   112cc:	mov	r0, #1
   112d0:	mov	r3, r5
   112d4:	movt	r2, #1
   112d8:	bl	10f40 <__printf_chk@plt>
   112dc:	movw	r1, #29381	; 0x72c5
   112e0:	mov	r0, #0
   112e4:	mov	r2, #5
   112e8:	movt	r1, #1
   112ec:	bl	10e20 <dcgettext@plt>
   112f0:	movw	r3, #27929	; 0x6d19
   112f4:	mov	r1, r0
   112f8:	movw	r0, #29149	; 0x71dd
   112fc:	cmp	r6, r5
   11300:	mov	r2, r6
   11304:	movt	r0, #1
   11308:	movt	r3, #1
   1130c:	moveq	r3, r0
   11310:	mov	r0, #1
   11314:	bl	10f40 <__printf_chk@plt>
   11318:	mov	r0, r4
   1131c:	bl	10f04 <exit@plt>
   11320:	movw	r0, #33088	; 0x8140
   11324:	movw	r1, #27804	; 0x6c9c
   11328:	mov	r2, #5
   1132c:	movt	r0, #2
   11330:	movt	r1, #1
   11334:	ldr	r5, [r0]
   11338:	mov	r0, #0
   1133c:	bl	10e20 <dcgettext@plt>
   11340:	mov	r2, r0
   11344:	movw	r0, #33108	; 0x8154
   11348:	mov	r1, #1
   1134c:	movt	r0, #2
   11350:	ldr	r3, [r0]
   11354:	mov	r0, r5
   11358:	bl	10f58 <__fprintf_chk@plt>
   1135c:	mov	r0, r4
   11360:	bl	10f04 <exit@plt>
   11364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11368:	add	fp, sp, #28
   1136c:	sub	sp, sp, #20
   11370:	mov	r5, r0
   11374:	ldr	r0, [r1]
   11378:	mov	r4, r1
   1137c:	bl	137f4 <__mempcpy_chk@plt+0x280c>
   11380:	movw	r1, #27929	; 0x6d19
   11384:	mov	r0, #6
   11388:	movt	r1, #1
   1138c:	bl	10f88 <setlocale@plt>
   11390:	movw	r6, #29033	; 0x7169
   11394:	movw	r1, #28996	; 0x7144
   11398:	movt	r6, #1
   1139c:	movt	r1, #1
   113a0:	mov	r0, r6
   113a4:	bl	10fac <bindtextdomain@plt>
   113a8:	mov	r0, r6
   113ac:	bl	10e38 <textdomain@plt>
   113b0:	movw	r0, #8596	; 0x2194
   113b4:	movt	r0, #1
   113b8:	bl	16c74 <__mempcpy_chk@plt+0x5c8c>
   113bc:	movw	r9, #29020	; 0x715c
   113c0:	movw	r8, #29544	; 0x7368
   113c4:	mov	r0, #10
   113c8:	mvn	r7, #0
   113cc:	mov	r6, #0
   113d0:	mov	sl, #1
   113d4:	str	r0, [sp, #12]
   113d8:	movt	r9, #1
   113dc:	movt	r8, #1
   113e0:	b	113fc <__mempcpy_chk@plt+0x414>
   113e4:	movw	r0, #33097	; 0x8149
   113e8:	movt	r0, #2
   113ec:	strb	r6, [r0, #1]
   113f0:	b	113fc <__mempcpy_chk@plt+0x414>
   113f4:	mov	r0, #0
   113f8:	str	r0, [sp, #12]
   113fc:	mov	r0, r5
   11400:	mov	r1, r4
   11404:	mov	r2, r9
   11408:	mov	r3, r8
   1140c:	str	r6, [sp]
   11410:	bl	10ee0 <getopt_long@plt>
   11414:	cmp	r0, #100	; 0x64
   11418:	ble	114c0 <__mempcpy_chk@plt+0x4d8>
   1141c:	sub	r0, r0, #101	; 0x65
   11420:	cmp	r0, #21
   11424:	bhi	11798 <__mempcpy_chk@plt+0x7b0>
   11428:	add	r1, pc, #0
   1142c:	ldr	pc, [r1, r0, lsl #2]
   11430:	andeq	r1, r1, r8, lsl #9
   11434:	andeq	r1, r1, r8, lsr #9
   11438:	muleq	r1, r8, r7
   1143c:	muleq	r1, r8, r7
   11440:	muleq	r1, r8, r7
   11444:	muleq	r1, r8, r7
   11448:	muleq	r1, r8, r7
   1144c:	muleq	r1, r8, r7
   11450:	andeq	r1, r1, r0, lsr #9
   11454:	muleq	r1, r0, r4
   11458:	muleq	r1, r8, r7
   1145c:	muleq	r1, r8, r7
   11460:	andeq	r1, r1, r4, ror #7
   11464:	muleq	r1, r8, r7
   11468:	andeq	r1, r1, r4, ror #7
   1146c:	muleq	r1, r8, r7
   11470:	muleq	r1, r8, r7
   11474:			; <UNDEFINED> instruction: 0x000114b0
   11478:	muleq	r1, r8, r7
   1147c:	muleq	r1, r8, r7
   11480:	muleq	r1, r8, r7
   11484:	strdeq	r1, [r1], -r4
   11488:	mov	r7, #0
   1148c:	b	113fc <__mempcpy_chk@plt+0x414>
   11490:	movw	r0, #33097	; 0x8149
   11494:	movt	r0, #2
   11498:	strb	sl, [r0]
   1149c:	b	113fc <__mempcpy_chk@plt+0x414>
   114a0:	mov	r7, #2
   114a4:	b	113fc <__mempcpy_chk@plt+0x414>
   114a8:	mov	r7, #1
   114ac:	b	113fc <__mempcpy_chk@plt+0x414>
   114b0:	movw	r0, #33097	; 0x8149
   114b4:	movt	r0, #2
   114b8:	strb	sl, [r0, #1]
   114bc:	b	113fc <__mempcpy_chk@plt+0x414>
   114c0:	cmn	r0, #1
   114c4:	bne	11738 <__mempcpy_chk@plt+0x750>
   114c8:	movw	r8, #33080	; 0x8138
   114cc:	movt	r8, #2
   114d0:	ldr	r0, [r8]
   114d4:	cmp	r0, r5
   114d8:	bge	117a0 <__mempcpy_chk@plt+0x7b8>
   114dc:	sub	r1, r5, r0
   114e0:	cmp	r1, #2
   114e4:	blt	11534 <__mempcpy_chk@plt+0x54c>
   114e8:	movw	r1, #33097	; 0x8149
   114ec:	movt	r1, #2
   114f0:	ldrb	r1, [r1]
   114f4:	cmp	r1, #1
   114f8:	bne	11524 <__mempcpy_chk@plt+0x53c>
   114fc:	movw	r1, #29075	; 0x7193
   11500:	mov	r0, #0
   11504:	mov	r2, #5
   11508:	movt	r1, #1
   1150c:	bl	10e20 <dcgettext@plt>
   11510:	mov	r2, r0
   11514:	mov	r0, #0
   11518:	mov	r1, #0
   1151c:	bl	10ea4 <error@plt>
   11520:	ldr	r0, [r8]
   11524:	movw	r2, #33097	; 0x8149
   11528:	mov	r1, #0
   1152c:	movt	r2, #2
   11530:	strb	r1, [r2]
   11534:	mov	r1, #0
   11538:	cmp	r0, r5
   1153c:	str	r1, [sp, #16]
   11540:	bge	1172c <__mempcpy_chk@plt+0x744>
   11544:	mov	r1, #0
   11548:	cmn	r7, #1
   1154c:	beq	11560 <__mempcpy_chk@plt+0x578>
   11550:	movw	sl, #33092	; 0x8144
   11554:	str	r1, [sp, #16]
   11558:	movt	sl, #2
   1155c:	b	11584 <__mempcpy_chk@plt+0x59c>
   11560:	movw	r9, #29809	; 0x7471
   11564:	movw	sl, #33092	; 0x8144
   11568:	str	r1, [sp, #16]
   1156c:	movt	r9, #1
   11570:	movt	sl, #2
   11574:	b	1165c <__mempcpy_chk@plt+0x674>
   11578:	ldr	r1, [sp, #12]
   1157c:	bl	10f7c <__overflow@plt>
   11580:	b	115e0 <__mempcpy_chk@plt+0x5f8>
   11584:	ldr	r9, [r4, r0, lsl #2]
   11588:	mov	r1, r7
   1158c:	mov	r0, r9
   11590:	bl	119a8 <__mempcpy_chk@plt+0x9c0>
   11594:	cmp	r0, #0
   11598:	beq	115ec <__mempcpy_chk@plt+0x604>
   1159c:	ldr	r1, [sl]
   115a0:	mov	r6, r0
   115a4:	bl	10d9c <fputs_unlocked@plt>
   115a8:	movw	r0, #33097	; 0x8149
   115ac:	movt	r0, #2
   115b0:	ldrb	r0, [r0]
   115b4:	cmp	r0, #0
   115b8:	bne	115e0 <__mempcpy_chk@plt+0x5f8>
   115bc:	ldr	r0, [sl]
   115c0:	ldr	r1, [r0, #20]
   115c4:	ldr	r2, [r0, #24]
   115c8:	cmp	r1, r2
   115cc:	bcs	11578 <__mempcpy_chk@plt+0x590>
   115d0:	add	r2, r1, #1
   115d4:	str	r2, [r0, #20]
   115d8:	ldr	r0, [sp, #12]
   115dc:	strb	r0, [r1]
   115e0:	mov	r0, r6
   115e4:	bl	12348 <__mempcpy_chk@plt+0x1360>
   115e8:	b	11638 <__mempcpy_chk@plt+0x650>
   115ec:	movw	r0, #33097	; 0x8149
   115f0:	mov	r1, #1
   115f4:	movt	r0, #2
   115f8:	str	r1, [sp, #16]
   115fc:	ldrb	r0, [r0, #1]
   11600:	cmp	r0, #1
   11604:	bne	11638 <__mempcpy_chk@plt+0x650>
   11608:	bl	10f1c <__errno_location@plt>
   1160c:	ldr	r6, [r0]
   11610:	mov	r0, #0
   11614:	mov	r1, #3
   11618:	mov	r2, r9
   1161c:	bl	154c4 <__mempcpy_chk@plt+0x44dc>
   11620:	movw	r2, #29809	; 0x7471
   11624:	mov	r3, r0
   11628:	mov	r0, #0
   1162c:	mov	r1, r6
   11630:	movt	r2, #1
   11634:	bl	10ea4 <error@plt>
   11638:	ldr	r0, [r8]
   1163c:	add	r0, r0, #1
   11640:	cmp	r0, r5
   11644:	str	r0, [r8]
   11648:	blt	11584 <__mempcpy_chk@plt+0x59c>
   1164c:	b	1172c <__mempcpy_chk@plt+0x744>
   11650:	ldr	r1, [sp, #12]
   11654:	bl	10f7c <__overflow@plt>
   11658:	b	116b8 <__mempcpy_chk@plt+0x6d0>
   1165c:	ldr	r6, [r4, r0, lsl #2]
   11660:	mov	r1, #63	; 0x3f
   11664:	mov	r0, r6
   11668:	bl	117cc <__mempcpy_chk@plt+0x7e4>
   1166c:	cmp	r0, #0
   11670:	beq	116c4 <__mempcpy_chk@plt+0x6dc>
   11674:	ldr	r1, [sl]
   11678:	mov	r7, r0
   1167c:	bl	10d9c <fputs_unlocked@plt>
   11680:	movw	r0, #33097	; 0x8149
   11684:	movt	r0, #2
   11688:	ldrb	r0, [r0]
   1168c:	cmp	r0, #0
   11690:	bne	116b8 <__mempcpy_chk@plt+0x6d0>
   11694:	ldr	r0, [sl]
   11698:	ldr	r1, [r0, #20]
   1169c:	ldr	r2, [r0, #24]
   116a0:	cmp	r1, r2
   116a4:	bcs	11650 <__mempcpy_chk@plt+0x668>
   116a8:	add	r2, r1, #1
   116ac:	str	r2, [r0, #20]
   116b0:	ldr	r0, [sp, #12]
   116b4:	strb	r0, [r1]
   116b8:	mov	r0, r7
   116bc:	bl	12348 <__mempcpy_chk@plt+0x1360>
   116c0:	b	11718 <__mempcpy_chk@plt+0x730>
   116c4:	movw	r0, #33097	; 0x8149
   116c8:	movt	r0, #2
   116cc:	ldrb	r0, [r0, #1]
   116d0:	cmp	r0, #1
   116d4:	bne	11710 <__mempcpy_chk@plt+0x728>
   116d8:	mov	r0, #1
   116dc:	str	r0, [sp, #16]
   116e0:	bl	10f1c <__errno_location@plt>
   116e4:	ldr	r7, [r0]
   116e8:	mov	r0, #0
   116ec:	mov	r1, #3
   116f0:	mov	r2, r6
   116f4:	bl	154c4 <__mempcpy_chk@plt+0x44dc>
   116f8:	mov	r3, r0
   116fc:	mov	r0, #0
   11700:	mov	r1, r7
   11704:	mov	r2, r9
   11708:	bl	10ea4 <error@plt>
   1170c:	b	11718 <__mempcpy_chk@plt+0x730>
   11710:	mov	r0, #1
   11714:	str	r0, [sp, #16]
   11718:	ldr	r0, [r8]
   1171c:	add	r0, r0, #1
   11720:	cmp	r0, r5
   11724:	str	r0, [r8]
   11728:	blt	1165c <__mempcpy_chk@plt+0x674>
   1172c:	ldr	r0, [sp, #16]
   11730:	sub	sp, fp, #28
   11734:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11738:	cmn	r0, #3
   1173c:	bne	11788 <__mempcpy_chk@plt+0x7a0>
   11740:	movw	r0, #33000	; 0x80e8
   11744:	movw	r2, #29043	; 0x7173
   11748:	mov	r1, #0
   1174c:	movt	r0, #2
   11750:	movt	r2, #1
   11754:	str	r1, [sp, #4]
   11758:	movw	r1, #28987	; 0x713b
   1175c:	ldr	r3, [r0]
   11760:	movw	r0, #33092	; 0x8144
   11764:	str	r2, [sp]
   11768:	movw	r2, #29029	; 0x7165
   1176c:	movt	r1, #1
   11770:	movt	r0, #2
   11774:	movt	r2, #1
   11778:	ldr	r0, [r0]
   1177c:	bl	15da0 <__mempcpy_chk@plt+0x4db8>
   11780:	mov	r0, #0
   11784:	bl	10f04 <exit@plt>
   11788:	cmn	r0, #2
   1178c:	bne	11798 <__mempcpy_chk@plt+0x7b0>
   11790:	mov	r0, #0
   11794:	bl	110e8 <__mempcpy_chk@plt+0x100>
   11798:	mov	r0, #1
   1179c:	bl	110e8 <__mempcpy_chk@plt+0x100>
   117a0:	movw	r1, #29059	; 0x7183
   117a4:	mov	r0, #0
   117a8:	mov	r2, #5
   117ac:	movt	r1, #1
   117b0:	bl	10e20 <dcgettext@plt>
   117b4:	mov	r2, r0
   117b8:	mov	r0, #0
   117bc:	mov	r1, #0
   117c0:	bl	10ea4 <error@plt>
   117c4:	mov	r0, #1
   117c8:	bl	110e8 <__mempcpy_chk@plt+0x100>
   117cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   117d0:	add	fp, sp, #24
   117d4:	sub	sp, sp, #128	; 0x80
   117d8:	mov	r5, r0
   117dc:	cmp	r1, #0
   117e0:	beq	11860 <__mempcpy_chk@plt+0x878>
   117e4:	movw	r4, #1025	; 0x401
   117e8:	cmp	r1, #1024	; 0x400
   117ec:	addls	r4, r1, #1
   117f0:	mov	r0, r4
   117f4:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   117f8:	cmp	r0, #0
   117fc:	beq	118ec <__mempcpy_chk@plt+0x904>
   11800:	mov	r6, r0
   11804:	mov	r0, r5
   11808:	mov	r1, r6
   1180c:	mov	r2, r4
   11810:	bl	10e5c <readlink@plt>
   11814:	cmn	r0, #1
   11818:	ble	118fc <__mempcpy_chk@plt+0x914>
   1181c:	cmp	r0, r4
   11820:	bcc	11954 <__mempcpy_chk@plt+0x96c>
   11824:	mov	r0, r6
   11828:	bl	12348 <__mempcpy_chk@plt+0x1360>
   1182c:	cmn	r4, #-1073741823	; 0xc0000001
   11830:	bhi	1183c <__mempcpy_chk@plt+0x854>
   11834:	lsl	r4, r4, #1
   11838:	b	11848 <__mempcpy_chk@plt+0x860>
   1183c:	cmn	r4, #-2147483647	; 0x80000001
   11840:	mvn	r4, #-2147483648	; 0x80000000
   11844:	bcs	118ec <__mempcpy_chk@plt+0x904>
   11848:	mov	r0, r4
   1184c:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   11850:	mov	r6, r0
   11854:	cmp	r0, #0
   11858:	bne	11804 <__mempcpy_chk@plt+0x81c>
   1185c:	b	118ec <__mempcpy_chk@plt+0x904>
   11860:	mov	r4, #128	; 0x80
   11864:	mov	r8, sp
   11868:	mov	r6, #0
   1186c:	cmp	r4, #128	; 0x80
   11870:	mov	r7, r8
   11874:	beq	118a8 <__mempcpy_chk@plt+0x8c0>
   11878:	b	11890 <__mempcpy_chk@plt+0x8a8>
   1187c:	mov	r4, r0
   11880:	mov	r6, #0
   11884:	cmp	r4, #128	; 0x80
   11888:	mov	r7, r8
   1188c:	beq	118a8 <__mempcpy_chk@plt+0x8c0>
   11890:	mov	r0, r4
   11894:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   11898:	mov	r7, r0
   1189c:	cmp	r0, #0
   118a0:	mov	r6, r0
   118a4:	beq	118ec <__mempcpy_chk@plt+0x904>
   118a8:	mov	r0, r5
   118ac:	mov	r1, r7
   118b0:	mov	r2, r4
   118b4:	bl	10e5c <readlink@plt>
   118b8:	cmp	r0, #0
   118bc:	blt	118fc <__mempcpy_chk@plt+0x914>
   118c0:	cmp	r0, r4
   118c4:	bcc	11914 <__mempcpy_chk@plt+0x92c>
   118c8:	mov	r0, r6
   118cc:	bl	12348 <__mempcpy_chk@plt+0x1360>
   118d0:	cmp	r4, #1073741824	; 0x40000000
   118d4:	bcs	118e0 <__mempcpy_chk@plt+0x8f8>
   118d8:	lsl	r0, r4, #1
   118dc:	b	1187c <__mempcpy_chk@plt+0x894>
   118e0:	mvn	r0, #-2147483648	; 0x80000000
   118e4:	cmn	r4, #-2147483647	; 0x80000001
   118e8:	bcc	1187c <__mempcpy_chk@plt+0x894>
   118ec:	bl	10f1c <__errno_location@plt>
   118f0:	mov	r1, #12
   118f4:	str	r1, [r0]
   118f8:	b	11904 <__mempcpy_chk@plt+0x91c>
   118fc:	mov	r0, r6
   11900:	bl	12348 <__mempcpy_chk@plt+0x1360>
   11904:	mov	r5, #0
   11908:	mov	r0, r5
   1190c:	sub	sp, fp, #24
   11910:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11914:	mov	r5, #0
   11918:	add	r8, r0, #1
   1191c:	cmp	r6, #0
   11920:	strb	r5, [r7, r0]
   11924:	beq	11978 <__mempcpy_chk@plt+0x990>
   11928:	cmp	r8, r4
   1192c:	bcs	11968 <__mempcpy_chk@plt+0x980>
   11930:	mov	r0, r6
   11934:	mov	r1, r8
   11938:	bl	165fc <__mempcpy_chk@plt+0x5614>
   1193c:	mov	r5, r0
   11940:	cmp	r0, #0
   11944:	moveq	r5, r6
   11948:	mov	r0, r5
   1194c:	sub	sp, fp, #24
   11950:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11954:	mov	r1, #0
   11958:	add	r8, r0, #1
   1195c:	strb	r1, [r6, r0]
   11960:	cmp	r8, r4
   11964:	bcc	11930 <__mempcpy_chk@plt+0x948>
   11968:	mov	r5, r6
   1196c:	mov	r0, r5
   11970:	sub	sp, fp, #24
   11974:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11978:	mov	r0, r8
   1197c:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   11980:	cmp	r0, #0
   11984:	beq	11908 <__mempcpy_chk@plt+0x920>
   11988:	mov	r1, r7
   1198c:	mov	r2, r8
   11990:	mov	r4, r0
   11994:	bl	10dfc <memcpy@plt>
   11998:	mov	r5, r4
   1199c:	mov	r0, r5
   119a0:	sub	sp, fp, #24
   119a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   119a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119ac:	add	fp, sp, #28
   119b0:	sub	sp, sp, #180	; 0xb4
   119b4:	sub	sp, sp, #3072	; 0xc00
   119b8:	mov	r8, r0
   119bc:	and	r7, r1, #3
   119c0:	sub	r0, r1, #1
   119c4:	tst	r0, r7
   119c8:	beq	119e8 <__mempcpy_chk@plt+0xa00>
   119cc:	bl	10f1c <__errno_location@plt>
   119d0:	mov	r1, #22
   119d4:	mov	r4, #0
   119d8:	str	r1, [r0]
   119dc:	mov	r0, r4
   119e0:	sub	sp, fp, #28
   119e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119e8:	cmp	r8, #0
   119ec:	beq	119cc <__mempcpy_chk@plt+0x9e4>
   119f0:	ldrb	r0, [r8]
   119f4:	cmp	r0, #0
   119f8:	beq	12000 <__mempcpy_chk@plt+0x1018>
   119fc:	sub	lr, fp, #1024	; 0x400
   11a00:	mov	r4, r1
   11a04:	mov	r1, #1024	; 0x400
   11a08:	cmp	r0, #47	; 0x2f
   11a0c:	sub	r2, lr, #40	; 0x28
   11a10:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11a14:	add	r2, r2, #8
   11a18:	str	r2, [sp, #12]
   11a1c:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11a20:	add	r2, sp, #1184	; 0x4a0
   11a24:	add	r2, r2, #8
   11a28:	str	r2, [sp, #1184]	; 0x4a0
   11a2c:	str	r2, [sp, #16]
   11a30:	add	r2, sp, #48	; 0x30
   11a34:	str	r1, [sp, #1188]	; 0x4a4
   11a38:	add	r5, r2, #8
   11a3c:	mov	r0, r5
   11a40:	str	r5, [sp, #48]	; 0x30
   11a44:	str	r1, [sp, #52]	; 0x34
   11a48:	str	r5, [sp, #8]
   11a4c:	bne	1200c <__mempcpy_chk@plt+0x1024>
   11a50:	mov	r1, r8
   11a54:	mov	r2, #0
   11a58:	mov	r3, #1024	; 0x400
   11a5c:	bl	10fe8 <__mempcpy_chk@plt>
   11a60:	mov	r6, r0
   11a64:	mov	r0, #47	; 0x2f
   11a68:	strb	r0, [r6], #1
   11a6c:	ldrb	r0, [r8]
   11a70:	cmp	r0, #0
   11a74:	beq	12038 <__mempcpy_chk@plt+0x1050>
   11a78:	and	r1, r4, #4
   11a7c:	add	r9, sp, #48	; 0x30
   11a80:	str	r7, [sp, #32]
   11a84:	str	r1, [sp, #40]	; 0x28
   11a88:	mov	r1, #0
   11a8c:	str	r1, [sp, #24]
   11a90:	mov	r1, #0
   11a94:	str	r1, [sp, #36]	; 0x24
   11a98:	mov	r1, #0
   11a9c:	str	r1, [sp, #20]
   11aa0:	uxtb	r1, r0
   11aa4:	cmp	r1, #47	; 0x2f
   11aa8:	bne	11ab8 <__mempcpy_chk@plt+0xad0>
   11aac:	ldrb	r0, [r8, #1]!
   11ab0:	cmp	r0, #47	; 0x2f
   11ab4:	beq	11aac <__mempcpy_chk@plt+0xac4>
   11ab8:	mov	r1, r0
   11abc:	mov	sl, r8
   11ac0:	uxtb	r1, r1
   11ac4:	cmp	r1, #0
   11ac8:	cmpne	r1, #47	; 0x2f
   11acc:	beq	11ae4 <__mempcpy_chk@plt+0xafc>
   11ad0:	ldrb	r1, [sl, #1]!
   11ad4:	uxtb	r1, r1
   11ad8:	cmp	r1, #0
   11adc:	cmpne	r1, #47	; 0x2f
   11ae0:	bne	11ad0 <__mempcpy_chk@plt+0xae8>
   11ae4:	sub	r2, sl, r8
   11ae8:	cmp	r2, #1
   11aec:	beq	11b58 <__mempcpy_chk@plt+0xb70>
   11af0:	cmp	r2, #2
   11af4:	beq	11b04 <__mempcpy_chk@plt+0xb1c>
   11af8:	cmp	r2, #0
   11afc:	bne	11b78 <__mempcpy_chk@plt+0xb90>
   11b00:	b	12040 <__mempcpy_chk@plt+0x1058>
   11b04:	uxtb	r0, r0
   11b08:	cmp	r0, #46	; 0x2e
   11b0c:	ldrbeq	r0, [r8, #1]
   11b10:	cmpeq	r0, #46	; 0x2e
   11b14:	bne	11b78 <__mempcpy_chk@plt+0xb90>
   11b18:	add	r0, r5, #1
   11b1c:	cmp	r6, r0
   11b20:	bls	11fc4 <__mempcpy_chk@plt+0xfdc>
   11b24:	sub	r0, r6, #1
   11b28:	mov	r6, r0
   11b2c:	cmp	r0, r5
   11b30:	bls	11fd8 <__mempcpy_chk@plt+0xff0>
   11b34:	mov	r0, r6
   11b38:	ldrb	r1, [r0, #-1]!
   11b3c:	cmp	r1, #47	; 0x2f
   11b40:	bne	11b28 <__mempcpy_chk@plt+0xb40>
   11b44:	mov	r8, sl
   11b48:	ldrb	r0, [r8]
   11b4c:	cmp	r0, #0
   11b50:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11b54:	b	12040 <__mempcpy_chk@plt+0x1058>
   11b58:	uxtb	r0, r0
   11b5c:	cmp	r0, #46	; 0x2e
   11b60:	bne	11b78 <__mempcpy_chk@plt+0xb90>
   11b64:	mov	r8, sl
   11b68:	ldrb	r0, [r8]
   11b6c:	cmp	r0, #0
   11b70:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11b74:	b	12040 <__mempcpy_chk@plt+0x1058>
   11b78:	ldrb	r0, [r6, #-1]
   11b7c:	add	r4, r2, #2
   11b80:	str	r2, [sp, #44]	; 0x2c
   11b84:	cmp	r0, #47	; 0x2f
   11b88:	movne	r0, #47	; 0x2f
   11b8c:	strbne	r0, [r6], #1
   11b90:	ldr	r0, [sp, #52]	; 0x34
   11b94:	add	r0, r5, r0
   11b98:	sub	r0, r0, r6
   11b9c:	cmp	r0, r4
   11ba0:	bcs	11bd8 <__mempcpy_chk@plt+0xbf0>
   11ba4:	mov	r0, r9
   11ba8:	bl	15860 <__mempcpy_chk@plt+0x4878>
   11bac:	cmp	r0, #0
   11bb0:	beq	12150 <__mempcpy_chk@plt+0x1168>
   11bb4:	sub	r0, r6, r5
   11bb8:	ldr	r5, [sp, #48]	; 0x30
   11bbc:	ldr	r1, [sp, #52]	; 0x34
   11bc0:	add	r6, r5, r0
   11bc4:	add	r0, r5, r1
   11bc8:	sub	r0, r0, r6
   11bcc:	cmp	r0, r4
   11bd0:	bcc	11ba4 <__mempcpy_chk@plt+0xbbc>
   11bd4:	ldr	r2, [sp, #44]	; 0x2c
   11bd8:	mov	r0, r6
   11bdc:	mov	r1, r8
   11be0:	mvn	r3, #0
   11be4:	bl	10fe8 <__mempcpy_chk@plt>
   11be8:	mov	r6, r0
   11bec:	mov	r0, #0
   11bf0:	strb	r0, [r6]
   11bf4:	ldr	r0, [sp, #40]	; 0x28
   11bf8:	cmp	r0, #0
   11bfc:	bne	11c60 <__mempcpy_chk@plt+0xc78>
   11c00:	ldr	r0, [sp, #1188]	; 0x4a4
   11c04:	ldr	r7, [sp, #1184]	; 0x4a0
   11c08:	sub	r9, r0, #1
   11c0c:	mov	r0, r5
   11c10:	mov	r1, r7
   11c14:	mov	r2, r9
   11c18:	bl	10e5c <readlink@plt>
   11c1c:	cmp	r0, r9
   11c20:	blt	11c38 <__mempcpy_chk@plt+0xc50>
   11c24:	add	r0, sp, #1184	; 0x4a0
   11c28:	bl	157f0 <__mempcpy_chk@plt+0x4808>
   11c2c:	cmp	r0, #0
   11c30:	bne	11c00 <__mempcpy_chk@plt+0xc18>
   11c34:	b	12150 <__mempcpy_chk@plt+0x1168>
   11c38:	mov	r4, r0
   11c3c:	cmp	r0, #0
   11c40:	add	r9, sp, #48	; 0x30
   11c44:	blt	11c60 <__mempcpy_chk@plt+0xc78>
   11c48:	ldr	r0, [sp, #24]
   11c4c:	cmp	r0, #19
   11c50:	bgt	11d10 <__mempcpy_chk@plt+0xd28>
   11c54:	add	r0, r0, #1
   11c58:	str	r0, [sp, #24]
   11c5c:	b	11e9c <__mempcpy_chk@plt+0xeb4>
   11c60:	ldr	r7, [sp, #32]
   11c64:	cmp	r7, #2
   11c68:	bne	11c80 <__mempcpy_chk@plt+0xc98>
   11c6c:	mov	r8, sl
   11c70:	ldrb	r0, [r8]
   11c74:	cmp	r0, #0
   11c78:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11c7c:	b	12040 <__mempcpy_chk@plt+0x1058>
   11c80:	ldrb	r0, [sl]
   11c84:	cmp	r0, #47	; 0x2f
   11c88:	bne	11de0 <__mempcpy_chk@plt+0xdf8>
   11c8c:	mov	r2, sl
   11c90:	mov	r1, r2
   11c94:	ldrb	r3, [r2, #1]!
   11c98:	cmp	r3, #47	; 0x2f
   11c9c:	beq	11c90 <__mempcpy_chk@plt+0xca8>
   11ca0:	cmp	r3, #46	; 0x2e
   11ca4:	bne	11dd8 <__mempcpy_chk@plt+0xdf0>
   11ca8:	add	r2, r1, #2
   11cac:	ldrb	r3, [r2]
   11cb0:	cmp	r3, #47	; 0x2f
   11cb4:	beq	11c90 <__mempcpy_chk@plt+0xca8>
   11cb8:	cmp	r3, #0
   11cbc:	beq	11cd8 <__mempcpy_chk@plt+0xcf0>
   11cc0:	cmp	r3, #46	; 0x2e
   11cc4:	bne	11de0 <__mempcpy_chk@plt+0xdf8>
   11cc8:	ldrb	r1, [r1, #3]
   11ccc:	cmp	r1, #47	; 0x2f
   11cd0:	cmpne	r1, #0
   11cd4:	bne	11de0 <__mempcpy_chk@plt+0xdf8>
   11cd8:	mov	r0, #47	; 0x2f
   11cdc:	mov	r1, r5
   11ce0:	mov	r2, #0
   11ce4:	mov	r3, #512	; 0x200
   11ce8:	strh	r0, [r6]
   11cec:	mvn	r0, #99	; 0x63
   11cf0:	bl	10de4 <faccessat@plt>
   11cf4:	cmp	r0, #0
   11cf8:	bne	11e48 <__mempcpy_chk@plt+0xe60>
   11cfc:	mov	r8, sl
   11d00:	ldrb	r0, [r8]
   11d04:	cmp	r0, #0
   11d08:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11d0c:	b	12040 <__mempcpy_chk@plt+0x1058>
   11d10:	ldrb	r0, [r8]
   11d14:	cmp	r0, #0
   11d18:	beq	11e9c <__mempcpy_chk@plt+0xeb4>
   11d1c:	ldr	r9, [sp, #44]	; 0x2c
   11d20:	mov	r0, #0
   11d24:	add	lr, sp, #1024	; 0x400
   11d28:	mov	r1, r5
   11d2c:	add	r2, lr, #56	; 0x38
   11d30:	strb	r0, [r6, -r9]
   11d34:	ldrb	r0, [r5]
   11d38:	cmp	r0, #0
   11d3c:	movw	r0, #29791	; 0x745f
   11d40:	movt	r0, #1
   11d44:	moveq	r1, r0
   11d48:	mov	r0, #3
   11d4c:	bl	10fb8 <__xstat64@plt>
   11d50:	cmp	r0, #0
   11d54:	bne	12160 <__mempcpy_chk@plt+0x1178>
   11d58:	rsb	r0, r9, #0
   11d5c:	ldr	r9, [sp, #20]
   11d60:	ldrb	r1, [r8]
   11d64:	cmp	r9, #0
   11d68:	strb	r1, [r6, r0]
   11d6c:	bne	11da4 <__mempcpy_chk@plt+0xdbc>
   11d70:	movw	r0, #14292	; 0x37d4
   11d74:	movw	r2, #14148	; 0x3744
   11d78:	movw	r3, #14204	; 0x377c
   11d7c:	mov	r1, #0
   11d80:	movt	r0, #1
   11d84:	movt	r2, #1
   11d88:	movt	r3, #1
   11d8c:	str	r0, [sp]
   11d90:	mov	r0, #7
   11d94:	bl	12810 <__mempcpy_chk@plt+0x1828>
   11d98:	mov	r9, r0
   11d9c:	cmp	r0, #0
   11da0:	beq	12150 <__mempcpy_chk@plt+0x1168>
   11da4:	add	lr, sp, #1024	; 0x400
   11da8:	mov	r0, r9
   11dac:	mov	r1, r8
   11db0:	add	r2, lr, #56	; 0x38
   11db4:	bl	122fc <__mempcpy_chk@plt+0x1314>
   11db8:	cmp	r0, #0
   11dbc:	str	r9, [sp, #20]
   11dc0:	beq	11e88 <__mempcpy_chk@plt+0xea0>
   11dc4:	ldr	r7, [sp, #32]
   11dc8:	cmp	r7, #2
   11dcc:	bne	12154 <__mempcpy_chk@plt+0x116c>
   11dd0:	mov	r8, sl
   11dd4:	b	11f68 <__mempcpy_chk@plt+0xf80>
   11dd8:	cmp	r3, #0
   11ddc:	beq	11cd8 <__mempcpy_chk@plt+0xcf0>
   11de0:	ldr	r1, [sp, #40]	; 0x28
   11de4:	cmp	r1, #0
   11de8:	beq	11e08 <__mempcpy_chk@plt+0xe20>
   11dec:	cmp	r0, #0
   11df0:	beq	11e2c <__mempcpy_chk@plt+0xe44>
   11df4:	mov	r8, sl
   11df8:	ldrb	r0, [r8]
   11dfc:	cmp	r0, #0
   11e00:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11e04:	b	12040 <__mempcpy_chk@plt+0x1058>
   11e08:	bl	10f1c <__errno_location@plt>
   11e0c:	ldr	r0, [r0]
   11e10:	cmp	r0, #22
   11e14:	bne	11e48 <__mempcpy_chk@plt+0xe60>
   11e18:	mov	r8, sl
   11e1c:	ldrb	r0, [r8]
   11e20:	cmp	r0, #0
   11e24:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11e28:	b	12040 <__mempcpy_chk@plt+0x1058>
   11e2c:	mvn	r0, #99	; 0x63
   11e30:	mov	r1, r5
   11e34:	mov	r2, #0
   11e38:	mov	r3, #512	; 0x200
   11e3c:	bl	10de4 <faccessat@plt>
   11e40:	cmp	r0, #0
   11e44:	beq	11fec <__mempcpy_chk@plt+0x1004>
   11e48:	mov	r4, #1
   11e4c:	cmp	r7, #1
   11e50:	bne	12060 <__mempcpy_chk@plt+0x1078>
   11e54:	bl	10f1c <__errno_location@plt>
   11e58:	ldr	r0, [r0]
   11e5c:	cmp	r0, #2
   11e60:	bne	12060 <__mempcpy_chk@plt+0x1078>
   11e64:	movw	r1, #30927	; 0x78cf
   11e68:	mov	r0, sl
   11e6c:	movt	r1, #1
   11e70:	bl	10fdc <strspn@plt>
   11e74:	ldrb	r0, [sl, r0]
   11e78:	mov	r8, sl
   11e7c:	cmp	r0, #0
   11e80:	beq	11fb4 <__mempcpy_chk@plt+0xfcc>
   11e84:	b	12060 <__mempcpy_chk@plt+0x1078>
   11e88:	add	lr, sp, #1024	; 0x400
   11e8c:	mov	r0, r9
   11e90:	mov	r1, r8
   11e94:	add	r2, lr, #56	; 0x38
   11e98:	bl	12280 <__mempcpy_chk@plt+0x1298>
   11e9c:	mov	r0, #0
   11ea0:	strb	r0, [r7, r4]
   11ea4:	ldr	r0, [sp, #36]	; 0x24
   11ea8:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11eac:	tst	r0, #1
   11eb0:	ldr	r0, [sp, #28]
   11eb4:	subne	r0, sl, r8
   11eb8:	str	r0, [sp, #28]
   11ebc:	mov	r0, sl
   11ec0:	bl	10f10 <strlen@plt>
   11ec4:	adds	r9, r0, r4
   11ec8:	str	r0, [sp, #44]	; 0x2c
   11ecc:	bcs	12150 <__mempcpy_chk@plt+0x1168>
   11ed0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11ed4:	cmp	r0, r9
   11ed8:	bhi	11f00 <__mempcpy_chk@plt+0xf18>
   11edc:	sub	lr, fp, #1024	; 0x400
   11ee0:	sub	r0, lr, #40	; 0x28
   11ee4:	bl	15860 <__mempcpy_chk@plt+0x4878>
   11ee8:	cmp	r0, #0
   11eec:	beq	12150 <__mempcpy_chk@plt+0x1168>
   11ef0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11ef4:	cmp	r0, r9
   11ef8:	bls	11edc <__mempcpy_chk@plt+0xef4>
   11efc:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11f00:	ldr	r0, [sp, #36]	; 0x24
   11f04:	ldr	r1, [sp, #44]	; 0x2c
   11f08:	tst	r0, #1
   11f0c:	ldr	r0, [sp, #28]
   11f10:	add	r2, r1, #1
   11f14:	addne	sl, r8, r0
   11f18:	add	r0, r8, r4
   11f1c:	mov	r1, sl
   11f20:	bl	10dcc <memmove@plt>
   11f24:	mov	r0, r8
   11f28:	mov	r1, r7
   11f2c:	mov	r2, r4
   11f30:	bl	10dfc <memcpy@plt>
   11f34:	ldrb	r0, [r7]
   11f38:	cmp	r0, #47	; 0x2f
   11f3c:	bne	11f7c <__mempcpy_chk@plt+0xf94>
   11f40:	mov	r0, r5
   11f44:	mov	r1, r7
   11f48:	mov	r2, #0
   11f4c:	mvn	r3, #0
   11f50:	bl	10fe8 <__mempcpy_chk@plt>
   11f54:	mov	r6, r0
   11f58:	mov	r0, #47	; 0x2f
   11f5c:	strb	r0, [r6], #1
   11f60:	mov	r0, #1
   11f64:	str	r0, [sp, #36]	; 0x24
   11f68:	add	r9, sp, #48	; 0x30
   11f6c:	ldrb	r0, [r8]
   11f70:	cmp	r0, #0
   11f74:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11f78:	b	12040 <__mempcpy_chk@plt+0x1058>
   11f7c:	add	r0, r5, #1
   11f80:	mov	r1, #1
   11f84:	add	r9, sp, #48	; 0x30
   11f88:	cmp	r6, r0
   11f8c:	str	r1, [sp, #36]	; 0x24
   11f90:	bls	11fb4 <__mempcpy_chk@plt+0xfcc>
   11f94:	sub	r0, r6, #1
   11f98:	mov	r6, r0
   11f9c:	cmp	r0, r5
   11fa0:	bls	11fb4 <__mempcpy_chk@plt+0xfcc>
   11fa4:	mov	r0, r6
   11fa8:	ldrb	r1, [r0, #-1]!
   11fac:	cmp	r1, #47	; 0x2f
   11fb0:	bne	11f98 <__mempcpy_chk@plt+0xfb0>
   11fb4:	ldrb	r0, [r8]
   11fb8:	cmp	r0, #0
   11fbc:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11fc0:	b	12040 <__mempcpy_chk@plt+0x1058>
   11fc4:	mov	r8, sl
   11fc8:	ldrb	r0, [r8]
   11fcc:	cmp	r0, #0
   11fd0:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11fd4:	b	12040 <__mempcpy_chk@plt+0x1058>
   11fd8:	mov	r8, sl
   11fdc:	ldrb	r0, [r8]
   11fe0:	cmp	r0, #0
   11fe4:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11fe8:	b	12040 <__mempcpy_chk@plt+0x1058>
   11fec:	mov	r8, sl
   11ff0:	ldrb	r0, [r8]
   11ff4:	cmp	r0, #0
   11ff8:	bne	11aa0 <__mempcpy_chk@plt+0xab8>
   11ffc:	b	12040 <__mempcpy_chk@plt+0x1058>
   12000:	bl	10f1c <__errno_location@plt>
   12004:	mov	r1, #2
   12008:	b	119d4 <__mempcpy_chk@plt+0x9ec>
   1200c:	mov	r1, #1024	; 0x400
   12010:	bl	10ef8 <getcwd@plt>
   12014:	cmp	r0, #0
   12018:	beq	12084 <__mempcpy_chk@plt+0x109c>
   1201c:	mov	r0, r5
   12020:	mov	r1, #0
   12024:	bl	10e44 <rawmemchr@plt>
   12028:	mov	r6, r0
   1202c:	ldrb	r0, [r8]
   12030:	cmp	r0, #0
   12034:	bne	11a78 <__mempcpy_chk@plt+0xa90>
   12038:	mov	r0, #0
   1203c:	str	r0, [sp, #20]
   12040:	add	r0, r5, #1
   12044:	cmp	r6, r0
   12048:	bls	1205c <__mempcpy_chk@plt+0x1074>
   1204c:	mov	r0, r6
   12050:	ldrb	r1, [r0, #-1]!
   12054:	cmp	r1, #47	; 0x2f
   12058:	moveq	r6, r0
   1205c:	mov	r4, #0
   12060:	ldr	r0, [sp, #20]
   12064:	cmp	r0, #0
   12068:	beq	120dc <__mempcpy_chk@plt+0x10f4>
   1206c:	bl	12b2c <__mempcpy_chk@plt+0x1b44>
   12070:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   12074:	ldr	r1, [sp, #12]
   12078:	cmp	r0, r1
   1207c:	bne	120ec <__mempcpy_chk@plt+0x1104>
   12080:	b	120f0 <__mempcpy_chk@plt+0x1108>
   12084:	bl	10f1c <__errno_location@plt>
   12088:	ldr	r5, [sp, #8]
   1208c:	mov	r6, r0
   12090:	add	r9, sp, #48	; 0x30
   12094:	ldr	r0, [r6]
   12098:	cmp	r0, #34	; 0x22
   1209c:	bne	120cc <__mempcpy_chk@plt+0x10e4>
   120a0:	mov	r0, r9
   120a4:	bl	157f0 <__mempcpy_chk@plt+0x4808>
   120a8:	cmp	r0, #0
   120ac:	beq	12150 <__mempcpy_chk@plt+0x1168>
   120b0:	ldr	r5, [sp, #48]	; 0x30
   120b4:	ldr	r1, [sp, #52]	; 0x34
   120b8:	mov	r0, r5
   120bc:	bl	10ef8 <getcwd@plt>
   120c0:	cmp	r0, #0
   120c4:	beq	12094 <__mempcpy_chk@plt+0x10ac>
   120c8:	b	1201c <__mempcpy_chk@plt+0x1034>
   120cc:	cmp	r0, #12
   120d0:	beq	12150 <__mempcpy_chk@plt+0x1168>
   120d4:	mov	r4, #1
   120d8:	mov	r6, r5
   120dc:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   120e0:	ldr	r1, [sp, #12]
   120e4:	cmp	r0, r1
   120e8:	beq	120f0 <__mempcpy_chk@plt+0x1108>
   120ec:	bl	12348 <__mempcpy_chk@plt+0x1360>
   120f0:	ldr	r0, [sp, #1184]	; 0x4a0
   120f4:	ldr	r1, [sp, #16]
   120f8:	cmp	r0, r1
   120fc:	beq	12104 <__mempcpy_chk@plt+0x111c>
   12100:	bl	12348 <__mempcpy_chk@plt+0x1360>
   12104:	cmp	r4, #0
   12108:	beq	12130 <__mempcpy_chk@plt+0x1148>
   1210c:	ldr	r0, [sp, #48]	; 0x30
   12110:	ldr	r1, [sp, #8]
   12114:	mov	r4, #0
   12118:	cmp	r0, r1
   1211c:	beq	119dc <__mempcpy_chk@plt+0x9f4>
   12120:	bl	12348 <__mempcpy_chk@plt+0x1360>
   12124:	mov	r0, r4
   12128:	sub	sp, fp, #28
   1212c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12130:	mov	r0, #0
   12134:	strb	r0, [r6], #1
   12138:	add	r0, sp, #48	; 0x30
   1213c:	sub	r1, r6, r5
   12140:	bl	15788 <__mempcpy_chk@plt+0x47a0>
   12144:	mov	r4, r0
   12148:	cmp	r0, #0
   1214c:	bne	119dc <__mempcpy_chk@plt+0x9f4>
   12150:	bl	16534 <__mempcpy_chk@plt+0x554c>
   12154:	bl	10f1c <__errno_location@plt>
   12158:	mov	r1, #40	; 0x28
   1215c:	str	r1, [r0]
   12160:	mov	r4, #1
   12164:	ldr	r0, [sp, #20]
   12168:	cmp	r0, #0
   1216c:	bne	1206c <__mempcpy_chk@plt+0x1084>
   12170:	b	120dc <__mempcpy_chk@plt+0x10f4>
   12174:	movw	r1, #33100	; 0x814c
   12178:	movt	r1, #2
   1217c:	str	r0, [r1, #4]
   12180:	bx	lr
   12184:	movw	r1, #33100	; 0x814c
   12188:	movt	r1, #2
   1218c:	strb	r0, [r1]
   12190:	bx	lr
   12194:	push	{r4, r5, r6, sl, fp, lr}
   12198:	add	fp, sp, #16
   1219c:	sub	sp, sp, #8
   121a0:	movw	r0, #33092	; 0x8144
   121a4:	movt	r0, #2
   121a8:	ldr	r0, [r0]
   121ac:	bl	16650 <__mempcpy_chk@plt+0x5668>
   121b0:	cmp	r0, #0
   121b4:	beq	121dc <__mempcpy_chk@plt+0x11f4>
   121b8:	movw	r5, #33100	; 0x814c
   121bc:	movt	r5, #2
   121c0:	ldrb	r0, [r5]
   121c4:	cmp	r0, #0
   121c8:	beq	12208 <__mempcpy_chk@plt+0x1220>
   121cc:	bl	10f1c <__errno_location@plt>
   121d0:	ldr	r0, [r0]
   121d4:	cmp	r0, #32
   121d8:	bne	12208 <__mempcpy_chk@plt+0x1220>
   121dc:	movw	r0, #33088	; 0x8140
   121e0:	movt	r0, #2
   121e4:	ldr	r0, [r0]
   121e8:	bl	16650 <__mempcpy_chk@plt+0x5668>
   121ec:	cmp	r0, #0
   121f0:	subeq	sp, fp, #16
   121f4:	popeq	{r4, r5, r6, sl, fp, pc}
   121f8:	movw	r0, #33004	; 0x80ec
   121fc:	movt	r0, #2
   12200:	ldr	r0, [r0]
   12204:	bl	10df0 <_exit@plt>
   12208:	movw	r1, #29793	; 0x7461
   1220c:	mov	r0, #0
   12210:	mov	r2, #5
   12214:	movt	r1, #1
   12218:	bl	10e20 <dcgettext@plt>
   1221c:	ldr	r6, [r5, #4]
   12220:	mov	r4, r0
   12224:	bl	10f1c <__errno_location@plt>
   12228:	ldr	r5, [r0]
   1222c:	cmp	r6, #0
   12230:	bne	1224c <__mempcpy_chk@plt+0x1264>
   12234:	movw	r2, #29809	; 0x7471
   12238:	mov	r0, #0
   1223c:	mov	r1, r5
   12240:	mov	r3, r4
   12244:	movt	r2, #1
   12248:	b	1226c <__mempcpy_chk@plt+0x1284>
   1224c:	mov	r0, r6
   12250:	bl	153e8 <__mempcpy_chk@plt+0x4400>
   12254:	movw	r2, #29805	; 0x746d
   12258:	mov	r3, r0
   1225c:	str	r4, [sp]
   12260:	mov	r0, #0
   12264:	mov	r1, r5
   12268:	movt	r2, #1
   1226c:	bl	10ea4 <error@plt>
   12270:	movw	r0, #33004	; 0x80ec
   12274:	movt	r0, #2
   12278:	ldr	r0, [r0]
   1227c:	bl	10df0 <_exit@plt>
   12280:	push	{r4, r5, r6, r7, fp, lr}
   12284:	add	fp, sp, #16
   12288:	cmp	r0, #0
   1228c:	popeq	{r4, r5, r6, r7, fp, pc}
   12290:	mov	r5, r0
   12294:	mov	r0, #24
   12298:	mov	r6, r2
   1229c:	mov	r7, r1
   122a0:	bl	15fd4 <__mempcpy_chk@plt+0x4fec>
   122a4:	mov	r4, r0
   122a8:	mov	r0, r7
   122ac:	bl	164f4 <__mempcpy_chk@plt+0x550c>
   122b0:	str	r0, [r4]
   122b4:	ldrd	r0, [r6, #96]	; 0x60
   122b8:	str	r1, [r4, #12]
   122bc:	str	r0, [r4, #8]
   122c0:	ldrd	r0, [r6]
   122c4:	str	r1, [r4, #20]
   122c8:	str	r0, [r4, #16]
   122cc:	mov	r0, r5
   122d0:	mov	r1, r4
   122d4:	bl	13448 <__mempcpy_chk@plt+0x2460>
   122d8:	cmp	r0, #0
   122dc:	beq	122f8 <__mempcpy_chk@plt+0x1310>
   122e0:	cmp	r0, r4
   122e4:	beq	122f4 <__mempcpy_chk@plt+0x130c>
   122e8:	mov	r0, r4
   122ec:	pop	{r4, r5, r6, r7, fp, lr}
   122f0:	b	137d4 <__mempcpy_chk@plt+0x27ec>
   122f4:	pop	{r4, r5, r6, r7, fp, pc}
   122f8:	bl	16534 <__mempcpy_chk@plt+0x554c>
   122fc:	cmp	r0, #0
   12300:	moveq	r0, #0
   12304:	bxeq	lr
   12308:	push	{r4, r5, fp, lr}
   1230c:	add	fp, sp, #8
   12310:	sub	sp, sp, #24
   12314:	str	r1, [sp]
   12318:	mov	r1, sp
   1231c:	ldrd	r4, [r2, #96]	; 0x60
   12320:	str	r5, [sp, #12]
   12324:	str	r4, [sp, #8]
   12328:	ldrd	r2, [r2]
   1232c:	str	r3, [sp, #20]
   12330:	str	r2, [sp, #16]
   12334:	bl	12548 <__mempcpy_chk@plt+0x1560>
   12338:	cmp	r0, #0
   1233c:	movwne	r0, #1
   12340:	sub	sp, fp, #8
   12344:	pop	{r4, r5, fp, pc}
   12348:	push	{r4, r5, r6, sl, fp, lr}
   1234c:	add	fp, sp, #16
   12350:	mov	r4, r0
   12354:	bl	10f1c <__errno_location@plt>
   12358:	ldr	r6, [r0]
   1235c:	mov	r5, r0
   12360:	mov	r0, r4
   12364:	bl	10dd8 <free@plt>
   12368:	str	r6, [r5]
   1236c:	pop	{r4, r5, r6, sl, fp, pc}
   12370:	ldr	r0, [r0, #8]
   12374:	bx	lr
   12378:	ldr	r0, [r0, #12]
   1237c:	bx	lr
   12380:	ldr	r0, [r0, #16]
   12384:	bx	lr
   12388:	ldm	r0, {r2, ip}
   1238c:	mov	r0, #0
   12390:	cmp	r2, ip
   12394:	bxcs	lr
   12398:	mov	r0, #0
   1239c:	ldr	r1, [r2]
   123a0:	cmp	r1, #0
   123a4:	beq	123c8 <__mempcpy_chk@plt+0x13e0>
   123a8:	mov	r3, #0
   123ac:	mov	r1, r2
   123b0:	ldr	r1, [r1, #4]
   123b4:	add	r3, r3, #1
   123b8:	cmp	r1, #0
   123bc:	bne	123b0 <__mempcpy_chk@plt+0x13c8>
   123c0:	cmp	r3, r0
   123c4:	movhi	r0, r3
   123c8:	add	r2, r2, #8
   123cc:	cmp	r2, ip
   123d0:	bcc	1239c <__mempcpy_chk@plt+0x13b4>
   123d4:	bx	lr
   123d8:	push	{fp, lr}
   123dc:	mov	fp, sp
   123e0:	ldm	r0, {r3, ip}
   123e4:	mov	lr, #0
   123e8:	mov	r1, #0
   123ec:	cmp	r3, ip
   123f0:	bcs	1242c <__mempcpy_chk@plt+0x1444>
   123f4:	mov	r1, #0
   123f8:	mov	lr, #0
   123fc:	ldr	r2, [r3]
   12400:	cmp	r2, #0
   12404:	beq	12420 <__mempcpy_chk@plt+0x1438>
   12408:	mov	r2, r3
   1240c:	ldr	r2, [r2, #4]
   12410:	add	r1, r1, #1
   12414:	cmp	r2, #0
   12418:	bne	1240c <__mempcpy_chk@plt+0x1424>
   1241c:	add	lr, lr, #1
   12420:	add	r3, r3, #8
   12424:	cmp	r3, ip
   12428:	bcc	123fc <__mempcpy_chk@plt+0x1414>
   1242c:	ldr	r2, [r0, #12]
   12430:	cmp	lr, r2
   12434:	bne	1244c <__mempcpy_chk@plt+0x1464>
   12438:	ldr	r2, [r0, #16]
   1243c:	mov	r0, #1
   12440:	cmp	r1, r2
   12444:	movne	r0, #0
   12448:	pop	{fp, pc}
   1244c:	mov	r0, #0
   12450:	pop	{fp, pc}
   12454:	nop	{0}
   12458:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1245c:	add	fp, sp, #24
   12460:	sub	sp, sp, #8
   12464:	ldr	r6, [r0]
   12468:	ldmib	r0, {r2, r7, r8}
   1246c:	ldr	r3, [r0, #16]
   12470:	mov	r4, r1
   12474:	mov	r5, #0
   12478:	cmp	r6, r2
   1247c:	bcs	124bc <__mempcpy_chk@plt+0x14d4>
   12480:	mov	r5, #0
   12484:	ldr	r0, [r6]
   12488:	cmp	r0, #0
   1248c:	beq	124b0 <__mempcpy_chk@plt+0x14c8>
   12490:	mov	r0, #0
   12494:	mov	r1, r6
   12498:	ldr	r1, [r1, #4]
   1249c:	add	r0, r0, #1
   124a0:	cmp	r1, #0
   124a4:	bne	12498 <__mempcpy_chk@plt+0x14b0>
   124a8:	cmp	r0, r5
   124ac:	movhi	r5, r0
   124b0:	add	r6, r6, #8
   124b4:	cmp	r6, r2
   124b8:	bcc	12484 <__mempcpy_chk@plt+0x149c>
   124bc:	movw	r2, #29812	; 0x7474
   124c0:	mov	r0, r4
   124c4:	mov	r1, #1
   124c8:	movt	r2, #1
   124cc:	bl	10f58 <__fprintf_chk@plt>
   124d0:	movw	r2, #29836	; 0x748c
   124d4:	mov	r0, r4
   124d8:	mov	r1, #1
   124dc:	mov	r3, r7
   124e0:	movt	r2, #1
   124e4:	bl	10f58 <__fprintf_chk@plt>
   124e8:	vldr	d16, [pc, #80]	; 12540 <__mempcpy_chk@plt+0x1558>
   124ec:	vmov	s0, r8
   124f0:	movw	r2, #29860	; 0x74a4
   124f4:	mov	r0, r4
   124f8:	mov	r1, #1
   124fc:	mov	r3, r8
   12500:	vcvt.f64.u32	d17, s0
   12504:	vmov	s0, r7
   12508:	movt	r2, #1
   1250c:	vcvt.f64.u32	d18, s0
   12510:	vmul.f64	d16, d17, d16
   12514:	vdiv.f64	d16, d16, d18
   12518:	vstr	d16, [sp]
   1251c:	bl	10f58 <__fprintf_chk@plt>
   12520:	movw	r2, #29893	; 0x74c5
   12524:	mov	r0, r4
   12528:	mov	r1, #1
   1252c:	mov	r3, r5
   12530:	movt	r2, #1
   12534:	sub	sp, fp, #24
   12538:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1253c:	b	10f58 <__fprintf_chk@plt>
   12540:	andeq	r0, r0, r0
   12544:	subsmi	r0, r9, r0
   12548:	push	{r4, r5, r6, r7, fp, lr}
   1254c:	add	fp, sp, #16
   12550:	mov	r4, r1
   12554:	ldr	r1, [r0, #8]
   12558:	ldr	r2, [r0, #24]
   1255c:	mov	r5, r0
   12560:	mov	r0, r4
   12564:	blx	r2
   12568:	ldr	r1, [r5, #8]
   1256c:	cmp	r0, r1
   12570:	bcs	125dc <__mempcpy_chk@plt+0x15f4>
   12574:	ldr	r7, [r5]
   12578:	mov	r6, #0
   1257c:	ldr	r1, [r7, r0, lsl #3]!
   12580:	cmp	r1, #0
   12584:	cmpne	r7, #0
   12588:	bne	12598 <__mempcpy_chk@plt+0x15b0>
   1258c:	mov	r0, r6
   12590:	pop	{r4, r5, r6, r7, fp, pc}
   12594:	ldr	r1, [r7]
   12598:	cmp	r1, r4
   1259c:	beq	125c4 <__mempcpy_chk@plt+0x15dc>
   125a0:	ldr	r2, [r5, #28]
   125a4:	mov	r0, r4
   125a8:	blx	r2
   125ac:	cmp	r0, #0
   125b0:	bne	125d0 <__mempcpy_chk@plt+0x15e8>
   125b4:	ldr	r7, [r7, #4]
   125b8:	cmp	r7, #0
   125bc:	bne	12594 <__mempcpy_chk@plt+0x15ac>
   125c0:	b	1258c <__mempcpy_chk@plt+0x15a4>
   125c4:	mov	r6, r4
   125c8:	mov	r0, r6
   125cc:	pop	{r4, r5, r6, r7, fp, pc}
   125d0:	ldr	r6, [r7]
   125d4:	mov	r0, r6
   125d8:	pop	{r4, r5, r6, r7, fp, pc}
   125dc:	bl	10fd0 <abort@plt>
   125e0:	ldr	r1, [r0, #16]
   125e4:	cmp	r1, #0
   125e8:	moveq	r0, #0
   125ec:	bxeq	lr
   125f0:	ldm	r0, {r1, r2}
   125f4:	cmp	r1, r2
   125f8:	bcs	12610 <__mempcpy_chk@plt+0x1628>
   125fc:	ldr	r0, [r1], #8
   12600:	cmp	r0, #0
   12604:	bxne	lr
   12608:	cmp	r1, r2
   1260c:	bcc	125fc <__mempcpy_chk@plt+0x1614>
   12610:	push	{fp, lr}
   12614:	mov	fp, sp
   12618:	bl	10fd0 <abort@plt>
   1261c:	push	{r4, r5, fp, lr}
   12620:	add	fp, sp, #8
   12624:	mov	r5, r1
   12628:	ldr	r1, [r0, #8]
   1262c:	ldr	r2, [r0, #24]
   12630:	mov	r4, r0
   12634:	mov	r0, r5
   12638:	blx	r2
   1263c:	ldr	r1, [r4, #8]
   12640:	cmp	r0, r1
   12644:	bcs	126a0 <__mempcpy_chk@plt+0x16b8>
   12648:	ldr	r1, [r4]
   1264c:	add	r2, r1, r0, lsl #3
   12650:	ldr	r3, [r2]
   12654:	ldr	r2, [r2, #4]
   12658:	cmp	r3, r5
   1265c:	beq	1266c <__mempcpy_chk@plt+0x1684>
   12660:	cmp	r2, #0
   12664:	bne	12650 <__mempcpy_chk@plt+0x1668>
   12668:	b	12678 <__mempcpy_chk@plt+0x1690>
   1266c:	cmp	r2, #0
   12670:	ldrne	r0, [r2]
   12674:	popne	{r4, r5, fp, pc}
   12678:	ldr	r2, [r4, #4]
   1267c:	add	r0, r1, r0, lsl #3
   12680:	add	r1, r0, #8
   12684:	cmp	r1, r2
   12688:	movcs	r0, #0
   1268c:	popcs	{r4, r5, fp, pc}
   12690:	ldr	r0, [r1], #8
   12694:	cmp	r0, #0
   12698:	popne	{r4, r5, fp, pc}
   1269c:	b	12684 <__mempcpy_chk@plt+0x169c>
   126a0:	bl	10fd0 <abort@plt>
   126a4:	push	{r4, r5, fp, lr}
   126a8:	add	fp, sp, #8
   126ac:	ldm	r0, {r5, lr}
   126b0:	mov	ip, r0
   126b4:	mov	r0, #0
   126b8:	cmp	r5, lr
   126bc:	bcs	12718 <__mempcpy_chk@plt+0x1730>
   126c0:	mov	r0, #0
   126c4:	ldr	r3, [r5]
   126c8:	cmp	r3, #0
   126cc:	cmpne	r5, #0
   126d0:	bne	126e4 <__mempcpy_chk@plt+0x16fc>
   126d4:	add	r5, r5, #8
   126d8:	cmp	r5, lr
   126dc:	bcc	126c4 <__mempcpy_chk@plt+0x16dc>
   126e0:	b	12718 <__mempcpy_chk@plt+0x1730>
   126e4:	mov	r3, r5
   126e8:	cmp	r0, r2
   126ec:	popcs	{r4, r5, fp, pc}
   126f0:	ldr	r4, [r3]
   126f4:	str	r4, [r1, r0, lsl #2]
   126f8:	add	r0, r0, #1
   126fc:	ldr	r3, [r3, #4]
   12700:	cmp	r3, #0
   12704:	bne	126e8 <__mempcpy_chk@plt+0x1700>
   12708:	ldr	lr, [ip, #4]
   1270c:	add	r5, r5, #8
   12710:	cmp	r5, lr
   12714:	bcc	126c4 <__mempcpy_chk@plt+0x16dc>
   12718:	pop	{r4, r5, fp, pc}
   1271c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12720:	add	fp, sp, #24
   12724:	mov	r5, r1
   12728:	ldr	r4, [r0]
   1272c:	ldr	r1, [r0, #4]
   12730:	mov	r6, #0
   12734:	cmp	r4, r1
   12738:	bcs	127b4 <__mempcpy_chk@plt+0x17cc>
   1273c:	mov	r9, r2
   12740:	mov	r8, r0
   12744:	mov	r6, #0
   12748:	ldr	r0, [r4]
   1274c:	cmp	r0, #0
   12750:	cmpne	r4, #0
   12754:	bne	12768 <__mempcpy_chk@plt+0x1780>
   12758:	add	r4, r4, #8
   1275c:	cmp	r4, r1
   12760:	bcc	12748 <__mempcpy_chk@plt+0x1760>
   12764:	b	127b4 <__mempcpy_chk@plt+0x17cc>
   12768:	mov	r1, r9
   1276c:	blx	r5
   12770:	cmp	r0, #0
   12774:	beq	127b4 <__mempcpy_chk@plt+0x17cc>
   12778:	mov	r7, r4
   1277c:	ldr	r7, [r7, #4]
   12780:	add	r6, r6, #1
   12784:	cmp	r7, #0
   12788:	beq	127a4 <__mempcpy_chk@plt+0x17bc>
   1278c:	ldr	r0, [r7]
   12790:	mov	r1, r9
   12794:	blx	r5
   12798:	cmp	r0, #0
   1279c:	bne	1277c <__mempcpy_chk@plt+0x1794>
   127a0:	b	127b4 <__mempcpy_chk@plt+0x17cc>
   127a4:	ldr	r1, [r8, #4]
   127a8:	add	r4, r4, #8
   127ac:	cmp	r4, r1
   127b0:	bcc	12748 <__mempcpy_chk@plt+0x1760>
   127b4:	mov	r0, r6
   127b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   127bc:	ldrb	r2, [r0]
   127c0:	cmp	r2, #0
   127c4:	moveq	r0, #0
   127c8:	bxeq	lr
   127cc:	add	r3, r0, #1
   127d0:	mov	r0, #0
   127d4:	rsb	r0, r0, r0, lsl #5
   127d8:	uxtab	r0, r0, r2
   127dc:	udiv	r2, r0, r1
   127e0:	mls	r0, r2, r1, r0
   127e4:	ldrb	r2, [r3], #1
   127e8:	cmp	r2, #0
   127ec:	bne	127d4 <__mempcpy_chk@plt+0x17ec>
   127f0:	bx	lr
   127f4:	movw	r1, #29920	; 0x74e0
   127f8:	movt	r1, #1
   127fc:	vld1.32	{d16-d17}, [r1]!
   12800:	ldr	r1, [r1]
   12804:	vst1.32	{d16-d17}, [r0]!
   12808:	str	r1, [r0]
   1280c:	bx	lr
   12810:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12814:	add	fp, sp, #24
   12818:	movw	r9, #10844	; 0x2a5c
   1281c:	movw	r5, #10824	; 0x2a48
   12820:	cmp	r3, #0
   12824:	mov	r6, r0
   12828:	mov	r0, #40	; 0x28
   1282c:	mov	r7, r1
   12830:	movt	r9, #1
   12834:	movt	r5, #1
   12838:	movne	r9, r3
   1283c:	cmp	r2, #0
   12840:	movne	r5, r2
   12844:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   12848:	mov	r8, #0
   1284c:	cmp	r0, #0
   12850:	beq	12a30 <__mempcpy_chk@plt+0x1a48>
   12854:	mov	r4, r0
   12858:	cmp	r7, #0
   1285c:	beq	1290c <__mempcpy_chk@plt+0x1924>
   12860:	movw	r0, #29920	; 0x74e0
   12864:	str	r7, [r4, #20]
   12868:	movt	r0, #1
   1286c:	cmp	r7, r0
   12870:	beq	12918 <__mempcpy_chk@plt+0x1930>
   12874:	vldr	s2, [pc, #444]	; 12a38 <__mempcpy_chk@plt+0x1a50>
   12878:	vldr	s0, [r7, #8]
   1287c:	vcmpe.f32	s0, s2
   12880:	vmrs	APSR_nzcv, fpscr
   12884:	ble	128f0 <__mempcpy_chk@plt+0x1908>
   12888:	vldr	s4, [pc, #428]	; 12a3c <__mempcpy_chk@plt+0x1a54>
   1288c:	vcmpe.f32	s0, s4
   12890:	vmrs	APSR_nzcv, fpscr
   12894:	bpl	128f0 <__mempcpy_chk@plt+0x1908>
   12898:	vldr	s4, [pc, #416]	; 12a40 <__mempcpy_chk@plt+0x1a58>
   1289c:	vldr	s6, [r7, #12]
   128a0:	vcmpe.f32	s6, s4
   128a4:	vmrs	APSR_nzcv, fpscr
   128a8:	ble	128f0 <__mempcpy_chk@plt+0x1908>
   128ac:	vldr	s4, [r7]
   128b0:	vcmpe.f32	s4, #0.0
   128b4:	vmrs	APSR_nzcv, fpscr
   128b8:	blt	128f0 <__mempcpy_chk@plt+0x1908>
   128bc:	vadd.f32	s2, s4, s2
   128c0:	vcmpe.f32	s2, s0
   128c4:	vmrs	APSR_nzcv, fpscr
   128c8:	bpl	128f0 <__mempcpy_chk@plt+0x1908>
   128cc:	vldr	s0, [r7, #4]
   128d0:	vmov.f32	s4, #112	; 0x3f800000  1.0
   128d4:	vcmpe.f32	s0, s4
   128d8:	vmrs	APSR_nzcv, fpscr
   128dc:	bhi	128f0 <__mempcpy_chk@plt+0x1908>
   128e0:	vcmpe.f32	s2, s0
   128e4:	mov	r0, r7
   128e8:	vmrs	APSR_nzcv, fpscr
   128ec:	bmi	12918 <__mempcpy_chk@plt+0x1930>
   128f0:	movw	r0, #29920	; 0x74e0
   128f4:	movt	r0, #1
   128f8:	str	r0, [r4, #20]
   128fc:	mov	r0, r4
   12900:	bl	12348 <__mempcpy_chk@plt+0x1360>
   12904:	mov	r0, r8
   12908:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1290c:	movw	r0, #29920	; 0x74e0
   12910:	movt	r0, #1
   12914:	str	r0, [r4, #20]
   12918:	ldrb	r1, [r0, #16]
   1291c:	cmp	r1, #0
   12920:	bne	1294c <__mempcpy_chk@plt+0x1964>
   12924:	vldr	s0, [r0, #8]
   12928:	vldr	s4, [pc, #276]	; 12a44 <__mempcpy_chk@plt+0x1a5c>
   1292c:	vmov	s2, r6
   12930:	vcvt.f32.u32	s2, s2
   12934:	vdiv.f32	s2, s2, s0
   12938:	vcmpe.f32	s2, s4
   1293c:	vcvt.u32.f32	s0, s2
   12940:	vmrs	APSR_nzcv, fpscr
   12944:	bge	129cc <__mempcpy_chk@plt+0x19e4>
   12948:	vmov	r6, s0
   1294c:	cmp	r6, #10
   12950:	movls	r6, #10
   12954:	orr	r0, r6, #1
   12958:	cmn	r0, #1
   1295c:	beq	129cc <__mempcpy_chk@plt+0x19e4>
   12960:	ldr	r6, [fp, #8]
   12964:	mov	r1, #3
   12968:	cmp	r0, #10
   1296c:	bcc	129a4 <__mempcpy_chk@plt+0x19bc>
   12970:	mov	r1, #3
   12974:	mov	r3, #9
   12978:	mov	r2, #12
   1297c:	udiv	r7, r0, r1
   12980:	mls	r7, r7, r1, r0
   12984:	cmp	r7, #0
   12988:	beq	129a4 <__mempcpy_chk@plt+0x19bc>
   1298c:	add	r3, r3, r2
   12990:	add	r2, r2, #8
   12994:	add	r1, r1, #2
   12998:	add	r3, r3, #4
   1299c:	cmp	r3, r0
   129a0:	bcc	1297c <__mempcpy_chk@plt+0x1994>
   129a4:	udiv	r2, r0, r1
   129a8:	mls	r1, r2, r1, r0
   129ac:	cmp	r1, #0
   129b0:	bne	129c4 <__mempcpy_chk@plt+0x19dc>
   129b4:	add	r0, r0, #2
   129b8:	cmn	r0, #1
   129bc:	bne	12964 <__mempcpy_chk@plt+0x197c>
   129c0:	b	129cc <__mempcpy_chk@plt+0x19e4>
   129c4:	cmp	r0, #536870912	; 0x20000000
   129c8:	bcc	129e4 <__mempcpy_chk@plt+0x19fc>
   129cc:	mov	r0, #0
   129d0:	str	r0, [r4, #8]
   129d4:	mov	r0, r4
   129d8:	bl	12348 <__mempcpy_chk@plt+0x1360>
   129dc:	mov	r0, r8
   129e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   129e4:	cmp	r0, #0
   129e8:	str	r0, [r4, #8]
   129ec:	beq	129d4 <__mempcpy_chk@plt+0x19ec>
   129f0:	mov	r1, #8
   129f4:	bl	16578 <__mempcpy_chk@plt+0x5590>
   129f8:	cmp	r0, #0
   129fc:	str	r0, [r4]
   12a00:	beq	129d4 <__mempcpy_chk@plt+0x19ec>
   12a04:	mov	r1, #0
   12a08:	mov	r8, r4
   12a0c:	str	r1, [r4, #12]
   12a10:	str	r1, [r4, #16]
   12a14:	str	r5, [r4, #24]
   12a18:	str	r9, [r4, #28]
   12a1c:	str	r6, [r4, #32]
   12a20:	str	r1, [r4, #36]	; 0x24
   12a24:	ldr	r1, [r4, #8]
   12a28:	add	r0, r0, r1, lsl #3
   12a2c:	str	r0, [r4, #4]
   12a30:	mov	r0, r8
   12a34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12a38:	stclcc	12, cr12, [ip, #820]	; 0x334
   12a3c:	svccc	0x00666666
   12a40:	svccc	0x008ccccd
   12a44:	svcmi	0x00800000
   12a48:	ror	r2, r0, #3
   12a4c:	udiv	r2, r2, r1
   12a50:	mul	r1, r2, r1
   12a54:	rsb	r0, r1, r0, ror #3
   12a58:	bx	lr
   12a5c:	sub	r0, r0, r1
   12a60:	clz	r0, r0
   12a64:	lsr	r0, r0, #5
   12a68:	bx	lr
   12a6c:	push	{r4, r5, r6, r7, fp, lr}
   12a70:	add	fp, sp, #16
   12a74:	mov	r4, r0
   12a78:	ldr	r5, [r0]
   12a7c:	ldr	r0, [r0, #4]
   12a80:	cmp	r5, r0
   12a84:	bcs	12b1c <__mempcpy_chk@plt+0x1b34>
   12a88:	mov	r6, #0
   12a8c:	ldr	r1, [r5]
   12a90:	cmp	r1, #0
   12a94:	beq	12b10 <__mempcpy_chk@plt+0x1b28>
   12a98:	ldr	r1, [r4, #32]
   12a9c:	ldr	r7, [r5, #4]
   12aa0:	cmp	r1, #0
   12aa4:	mov	r0, r1
   12aa8:	movwne	r0, #1
   12aac:	cmp	r7, #0
   12ab0:	beq	12af4 <__mempcpy_chk@plt+0x1b0c>
   12ab4:	tst	r0, #1
   12ab8:	beq	12ac8 <__mempcpy_chk@plt+0x1ae0>
   12abc:	ldr	r0, [r7]
   12ac0:	blx	r1
   12ac4:	ldr	r1, [r4, #32]
   12ac8:	str	r6, [r7]
   12acc:	cmp	r1, #0
   12ad0:	ldr	r0, [r4, #36]	; 0x24
   12ad4:	ldr	r2, [r7, #4]
   12ad8:	str	r0, [r7, #4]
   12adc:	mov	r0, r1
   12ae0:	str	r7, [r4, #36]	; 0x24
   12ae4:	mov	r7, r2
   12ae8:	movwne	r0, #1
   12aec:	cmp	r2, #0
   12af0:	bne	12ab4 <__mempcpy_chk@plt+0x1acc>
   12af4:	cmp	r0, #0
   12af8:	beq	12b04 <__mempcpy_chk@plt+0x1b1c>
   12afc:	ldr	r0, [r5]
   12b00:	blx	r1
   12b04:	str	r6, [r5]
   12b08:	str	r6, [r5, #4]
   12b0c:	ldr	r0, [r4, #4]
   12b10:	add	r5, r5, #8
   12b14:	cmp	r5, r0
   12b18:	bcc	12a8c <__mempcpy_chk@plt+0x1aa4>
   12b1c:	mov	r0, #0
   12b20:	str	r0, [r4, #12]
   12b24:	str	r0, [r4, #16]
   12b28:	pop	{r4, r5, r6, r7, fp, pc}
   12b2c:	push	{r4, r5, r6, sl, fp, lr}
   12b30:	add	fp, sp, #16
   12b34:	mov	r4, r0
   12b38:	ldr	r0, [r0, #32]
   12b3c:	cmp	r0, #0
   12b40:	ldrne	r0, [r4, #16]
   12b44:	cmpne	r0, #0
   12b48:	beq	12bb0 <__mempcpy_chk@plt+0x1bc8>
   12b4c:	ldr	r5, [r4]
   12b50:	ldr	r1, [r4, #4]
   12b54:	cmp	r5, r1
   12b58:	bcc	12b6c <__mempcpy_chk@plt+0x1b84>
   12b5c:	b	12bb0 <__mempcpy_chk@plt+0x1bc8>
   12b60:	add	r5, r5, #8
   12b64:	cmp	r5, r1
   12b68:	bcs	12bb0 <__mempcpy_chk@plt+0x1bc8>
   12b6c:	ldr	r0, [r5]
   12b70:	cmp	r0, #0
   12b74:	cmpne	r5, #0
   12b78:	beq	12b60 <__mempcpy_chk@plt+0x1b78>
   12b7c:	ldr	r1, [r4, #32]
   12b80:	blx	r1
   12b84:	ldr	r6, [r5, #4]
   12b88:	cmp	r6, #0
   12b8c:	beq	12ba8 <__mempcpy_chk@plt+0x1bc0>
   12b90:	ldr	r1, [r4, #32]
   12b94:	ldr	r0, [r6]
   12b98:	blx	r1
   12b9c:	ldr	r6, [r6, #4]
   12ba0:	cmp	r6, #0
   12ba4:	bne	12b90 <__mempcpy_chk@plt+0x1ba8>
   12ba8:	ldr	r1, [r4, #4]
   12bac:	b	12b60 <__mempcpy_chk@plt+0x1b78>
   12bb0:	ldr	r5, [r4]
   12bb4:	ldr	r1, [r4, #4]
   12bb8:	cmp	r5, r1
   12bbc:	bcc	12bd0 <__mempcpy_chk@plt+0x1be8>
   12bc0:	b	12bf8 <__mempcpy_chk@plt+0x1c10>
   12bc4:	add	r5, r5, #8
   12bc8:	cmp	r5, r1
   12bcc:	bcs	12bf8 <__mempcpy_chk@plt+0x1c10>
   12bd0:	ldr	r0, [r5, #4]
   12bd4:	cmp	r0, #0
   12bd8:	beq	12bc4 <__mempcpy_chk@plt+0x1bdc>
   12bdc:	ldr	r6, [r0, #4]
   12be0:	bl	12348 <__mempcpy_chk@plt+0x1360>
   12be4:	cmp	r6, #0
   12be8:	mov	r0, r6
   12bec:	bne	12bdc <__mempcpy_chk@plt+0x1bf4>
   12bf0:	ldr	r1, [r4, #4]
   12bf4:	b	12bc4 <__mempcpy_chk@plt+0x1bdc>
   12bf8:	ldr	r0, [r4, #36]	; 0x24
   12bfc:	cmp	r0, #0
   12c00:	beq	12c18 <__mempcpy_chk@plt+0x1c30>
   12c04:	ldr	r5, [r0, #4]
   12c08:	bl	12348 <__mempcpy_chk@plt+0x1360>
   12c0c:	cmp	r5, #0
   12c10:	mov	r0, r5
   12c14:	bne	12c04 <__mempcpy_chk@plt+0x1c1c>
   12c18:	ldr	r0, [r4]
   12c1c:	bl	12348 <__mempcpy_chk@plt+0x1360>
   12c20:	mov	r0, r4
   12c24:	pop	{r4, r5, r6, sl, fp, lr}
   12c28:	b	12348 <__mempcpy_chk@plt+0x1360>
   12c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c30:	add	fp, sp, #28
   12c34:	sub	sp, sp, #44	; 0x2c
   12c38:	mov	r7, r0
   12c3c:	mov	r4, r0
   12c40:	ldr	r0, [r7, #20]!
   12c44:	ldrb	r2, [r0, #16]
   12c48:	cmp	r2, #0
   12c4c:	bne	12c7c <__mempcpy_chk@plt+0x1c94>
   12c50:	vldr	s0, [r0, #8]
   12c54:	vldr	s4, [pc, #576]	; 12e9c <__mempcpy_chk@plt+0x1eb4>
   12c58:	vmov	s2, r1
   12c5c:	mov	r5, #0
   12c60:	vcvt.f32.u32	s2, s2
   12c64:	vdiv.f32	s2, s2, s0
   12c68:	vcmpe.f32	s2, s4
   12c6c:	vcvt.u32.f32	s0, s2
   12c70:	vmrs	APSR_nzcv, fpscr
   12c74:	bge	12da0 <__mempcpy_chk@plt+0x1db8>
   12c78:	vmov	r1, s0
   12c7c:	cmp	r1, #10
   12c80:	mov	r5, #0
   12c84:	movls	r1, #10
   12c88:	orr	r6, r1, #1
   12c8c:	cmn	r6, #1
   12c90:	bne	12ca4 <__mempcpy_chk@plt+0x1cbc>
   12c94:	b	12da0 <__mempcpy_chk@plt+0x1db8>
   12c98:	add	r6, r6, #2
   12c9c:	cmn	r6, #1
   12ca0:	beq	12da0 <__mempcpy_chk@plt+0x1db8>
   12ca4:	mov	r0, #3
   12ca8:	cmp	r6, #10
   12cac:	bcc	12ce4 <__mempcpy_chk@plt+0x1cfc>
   12cb0:	mov	r0, #3
   12cb4:	mov	r2, #9
   12cb8:	mov	r1, #12
   12cbc:	udiv	r3, r6, r0
   12cc0:	mls	r3, r3, r0, r6
   12cc4:	cmp	r3, #0
   12cc8:	beq	12ce4 <__mempcpy_chk@plt+0x1cfc>
   12ccc:	add	r2, r2, r1
   12cd0:	add	r1, r1, #8
   12cd4:	add	r0, r0, #2
   12cd8:	add	r2, r2, #4
   12cdc:	cmp	r2, r6
   12ce0:	bcc	12cbc <__mempcpy_chk@plt+0x1cd4>
   12ce4:	udiv	r1, r6, r0
   12ce8:	mls	r0, r1, r0, r6
   12cec:	cmp	r0, #0
   12cf0:	beq	12c98 <__mempcpy_chk@plt+0x1cb0>
   12cf4:	sub	r0, r6, #1
   12cf8:	cmn	r0, #-536870910	; 0xe0000002
   12cfc:	bhi	12da0 <__mempcpy_chk@plt+0x1db8>
   12d00:	ldr	r0, [r4, #8]
   12d04:	cmp	r6, r0
   12d08:	bne	12d1c <__mempcpy_chk@plt+0x1d34>
   12d0c:	mov	r5, #1
   12d10:	mov	r0, r5
   12d14:	sub	sp, fp, #28
   12d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d1c:	mov	r0, r6
   12d20:	mov	r1, #8
   12d24:	bl	16578 <__mempcpy_chk@plt+0x5590>
   12d28:	cmp	r0, #0
   12d2c:	str	r0, [sp, #4]
   12d30:	beq	12da0 <__mempcpy_chk@plt+0x1db8>
   12d34:	mov	r1, #0
   12d38:	add	r0, r0, r6, lsl #3
   12d3c:	str	r6, [sp, #12]
   12d40:	add	r5, sp, #4
   12d44:	mov	sl, r4
   12d48:	mov	r2, #0
   12d4c:	str	r1, [sp, #16]
   12d50:	str	r1, [sp, #20]
   12d54:	str	r0, [sp, #8]
   12d58:	add	r0, r5, #20
   12d5c:	mov	r1, r4
   12d60:	vld1.32	{d16-d17}, [r7]
   12d64:	vst1.32	{d16-d17}, [r0]
   12d68:	ldr	r0, [sl, #36]!	; 0x24
   12d6c:	str	r0, [sp, #40]	; 0x28
   12d70:	mov	r0, r5
   12d74:	bl	12ea0 <__mempcpy_chk@plt+0x1eb8>
   12d78:	cmp	r0, #0
   12d7c:	beq	12dac <__mempcpy_chk@plt+0x1dc4>
   12d80:	ldr	r0, [r4]
   12d84:	bl	12348 <__mempcpy_chk@plt+0x1360>
   12d88:	mov	r0, #36	; 0x24
   12d8c:	vld1.32	{d16-d17}, [r5], r0
   12d90:	vst1.32	{d16-d17}, [r4], r0
   12d94:	ldr	r0, [r5]
   12d98:	mov	r5, #1
   12d9c:	str	r0, [r4]
   12da0:	mov	r0, r5
   12da4:	sub	sp, fp, #28
   12da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dac:	ldr	r0, [sp, #40]	; 0x28
   12db0:	str	r0, [sl]
   12db4:	ldr	r0, [sp, #8]
   12db8:	ldr	r8, [sp, #4]
   12dbc:	cmp	r8, r0
   12dc0:	str	r0, [sp]
   12dc4:	bcs	12e68 <__mempcpy_chk@plt+0x1e80>
   12dc8:	mov	r9, #0
   12dcc:	ldr	r0, [r8]
   12dd0:	cmp	r0, #0
   12dd4:	beq	12e58 <__mempcpy_chk@plt+0x1e70>
   12dd8:	ldr	r6, [r8, #4]
   12ddc:	cmp	r6, #0
   12de0:	beq	12e54 <__mempcpy_chk@plt+0x1e6c>
   12de4:	ldr	r1, [r4, #8]
   12de8:	ldr	r5, [r6]
   12dec:	ldr	r2, [r4, #24]
   12df0:	mov	r0, r5
   12df4:	blx	r2
   12df8:	ldr	r1, [r4, #8]
   12dfc:	cmp	r0, r1
   12e00:	bcs	12e98 <__mempcpy_chk@plt+0x1eb0>
   12e04:	ldr	r3, [r4]
   12e08:	ldr	r2, [r6, #4]
   12e0c:	ldr	r7, [r3, r0, lsl #3]
   12e10:	cmp	r7, #0
   12e14:	beq	12e24 <__mempcpy_chk@plt+0x1e3c>
   12e18:	add	r0, r3, r0, lsl #3
   12e1c:	add	r0, r0, #4
   12e20:	b	12e3c <__mempcpy_chk@plt+0x1e54>
   12e24:	str	r5, [r3, r0, lsl #3]
   12e28:	ldr	r0, [r4, #12]
   12e2c:	add	r0, r0, #1
   12e30:	str	r0, [r4, #12]
   12e34:	mov	r0, sl
   12e38:	str	r9, [r6]
   12e3c:	ldr	r3, [r0]
   12e40:	cmp	r2, #0
   12e44:	str	r3, [r6, #4]
   12e48:	str	r6, [r0]
   12e4c:	mov	r6, r2
   12e50:	bne	12de8 <__mempcpy_chk@plt+0x1e00>
   12e54:	str	r9, [r8, #4]
   12e58:	ldr	r0, [sp]
   12e5c:	add	r8, r8, #8
   12e60:	cmp	r8, r0
   12e64:	bcc	12dcc <__mempcpy_chk@plt+0x1de4>
   12e68:	add	r1, sp, #4
   12e6c:	mov	r0, r4
   12e70:	mov	r2, #0
   12e74:	mov	r5, #0
   12e78:	bl	12ea0 <__mempcpy_chk@plt+0x1eb8>
   12e7c:	cmp	r0, #0
   12e80:	beq	12e98 <__mempcpy_chk@plt+0x1eb0>
   12e84:	ldr	r0, [sp, #4]
   12e88:	bl	12348 <__mempcpy_chk@plt+0x1360>
   12e8c:	mov	r0, r5
   12e90:	sub	sp, fp, #28
   12e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e98:	bl	10fd0 <abort@plt>
   12e9c:	svcmi	0x00800000
   12ea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea4:	add	fp, sp, #28
   12ea8:	sub	sp, sp, #4
   12eac:	ldr	r8, [r1]
   12eb0:	ldr	r3, [r1, #4]
   12eb4:	mov	r6, r0
   12eb8:	mov	r0, #1
   12ebc:	str	r1, [sp]
   12ec0:	cmp	r8, r3
   12ec4:	bcs	130c4 <__mempcpy_chk@plt+0x20dc>
   12ec8:	add	r9, r6, #36	; 0x24
   12ecc:	cmp	r2, #0
   12ed0:	beq	12f7c <__mempcpy_chk@plt+0x1f94>
   12ed4:	mov	sl, #0
   12ed8:	ldr	r1, [r8]
   12edc:	cmp	r1, #0
   12ee0:	beq	12f6c <__mempcpy_chk@plt+0x1f84>
   12ee4:	ldr	r7, [r8, #4]
   12ee8:	cmp	r7, #0
   12eec:	beq	12f68 <__mempcpy_chk@plt+0x1f80>
   12ef0:	ldr	r1, [r6, #8]
   12ef4:	ldr	r4, [r7]
   12ef8:	ldr	r2, [r6, #24]
   12efc:	mov	r0, r4
   12f00:	blx	r2
   12f04:	ldr	r1, [r6, #8]
   12f08:	cmp	r0, r1
   12f0c:	bcs	130d8 <__mempcpy_chk@plt+0x20f0>
   12f10:	ldr	r3, [r6]
   12f14:	ldr	r2, [r7, #4]
   12f18:	ldr	r5, [r3, r0, lsl #3]
   12f1c:	cmp	r5, #0
   12f20:	beq	12f30 <__mempcpy_chk@plt+0x1f48>
   12f24:	add	r0, r3, r0, lsl #3
   12f28:	add	r0, r0, #4
   12f2c:	b	12f48 <__mempcpy_chk@plt+0x1f60>
   12f30:	str	r4, [r3, r0, lsl #3]
   12f34:	ldr	r0, [r6, #12]
   12f38:	add	r0, r0, #1
   12f3c:	str	r0, [r6, #12]
   12f40:	mov	r0, r9
   12f44:	str	sl, [r7]
   12f48:	ldr	r3, [r0]
   12f4c:	cmp	r2, #0
   12f50:	str	r3, [r7, #4]
   12f54:	str	r7, [r0]
   12f58:	mov	r7, r2
   12f5c:	bne	12ef4 <__mempcpy_chk@plt+0x1f0c>
   12f60:	ldr	r0, [sp]
   12f64:	ldr	r3, [r0, #4]
   12f68:	str	sl, [r8, #4]
   12f6c:	add	r8, r8, #8
   12f70:	cmp	r8, r3
   12f74:	bcc	12ed8 <__mempcpy_chk@plt+0x1ef0>
   12f78:	b	130c0 <__mempcpy_chk@plt+0x20d8>
   12f7c:	mov	r5, #0
   12f80:	ldr	sl, [r8]
   12f84:	cmp	sl, #0
   12f88:	beq	130b4 <__mempcpy_chk@plt+0x20cc>
   12f8c:	ldr	r7, [r8, #4]
   12f90:	ldr	r1, [r6, #8]
   12f94:	cmp	r7, #0
   12f98:	beq	13014 <__mempcpy_chk@plt+0x202c>
   12f9c:	mov	sl, #0
   12fa0:	ldr	r4, [r7]
   12fa4:	ldr	r2, [r6, #24]
   12fa8:	mov	r0, r4
   12fac:	blx	r2
   12fb0:	ldr	r1, [r6, #8]
   12fb4:	cmp	r0, r1
   12fb8:	bcs	130d8 <__mempcpy_chk@plt+0x20f0>
   12fbc:	ldr	r3, [r6]
   12fc0:	ldr	r2, [r7, #4]
   12fc4:	ldr	r5, [r3, r0, lsl #3]
   12fc8:	cmp	r5, #0
   12fcc:	beq	12fdc <__mempcpy_chk@plt+0x1ff4>
   12fd0:	add	r0, r3, r0, lsl #3
   12fd4:	add	r0, r0, #4
   12fd8:	b	12ff4 <__mempcpy_chk@plt+0x200c>
   12fdc:	str	r4, [r3, r0, lsl #3]
   12fe0:	ldr	r0, [r6, #12]
   12fe4:	add	r0, r0, #1
   12fe8:	str	r0, [r6, #12]
   12fec:	mov	r0, r9
   12ff0:	str	sl, [r7]
   12ff4:	ldr	r3, [r0]
   12ff8:	cmp	r2, #0
   12ffc:	str	r3, [r7, #4]
   13000:	str	r7, [r0]
   13004:	mov	r7, r2
   13008:	bne	12fa0 <__mempcpy_chk@plt+0x1fb8>
   1300c:	ldr	sl, [r8]
   13010:	mov	r5, #0
   13014:	str	r5, [r8, #4]
   13018:	mov	r0, sl
   1301c:	ldr	r2, [r6, #24]
   13020:	blx	r2
   13024:	mov	r4, r0
   13028:	ldr	r0, [r6, #8]
   1302c:	cmp	r4, r0
   13030:	bcs	130d8 <__mempcpy_chk@plt+0x20f0>
   13034:	ldr	r7, [r6]
   13038:	ldr	r0, [r7, r4, lsl #3]
   1303c:	cmp	r0, #0
   13040:	beq	13060 <__mempcpy_chk@plt+0x2078>
   13044:	ldr	r0, [r9]
   13048:	cmp	r0, #0
   1304c:	beq	13074 <__mempcpy_chk@plt+0x208c>
   13050:	mov	r1, r0
   13054:	ldr	r2, [r1, #4]!
   13058:	str	r2, [r9]
   1305c:	b	13088 <__mempcpy_chk@plt+0x20a0>
   13060:	str	sl, [r7, r4, lsl #3]
   13064:	ldr	r0, [r6, #12]
   13068:	add	r0, r0, #1
   1306c:	str	r0, [r6, #12]
   13070:	b	1309c <__mempcpy_chk@plt+0x20b4>
   13074:	mov	r0, #8
   13078:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   1307c:	cmp	r0, #0
   13080:	beq	130cc <__mempcpy_chk@plt+0x20e4>
   13084:	add	r1, r0, #4
   13088:	str	sl, [r0]
   1308c:	add	r2, r7, r4, lsl #3
   13090:	ldr	r3, [r2, #4]
   13094:	str	r3, [r1]
   13098:	str	r0, [r2, #4]
   1309c:	ldr	r0, [sp]
   130a0:	str	r5, [r8]
   130a4:	ldr	r1, [r0, #12]
   130a8:	ldr	r3, [r0, #4]
   130ac:	sub	r1, r1, #1
   130b0:	str	r1, [r0, #12]
   130b4:	add	r8, r8, #8
   130b8:	cmp	r8, r3
   130bc:	bcc	12f80 <__mempcpy_chk@plt+0x1f98>
   130c0:	mov	r0, #1
   130c4:	sub	sp, fp, #28
   130c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130cc:	mov	r0, #0
   130d0:	sub	sp, fp, #28
   130d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130d8:	bl	10fd0 <abort@plt>
   130dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130e0:	add	fp, sp, #28
   130e4:	sub	sp, sp, #4
   130e8:	cmp	r1, #0
   130ec:	beq	13430 <__mempcpy_chk@plt+0x2448>
   130f0:	mov	r8, r2
   130f4:	mov	sl, r1
   130f8:	ldr	r1, [r0, #8]
   130fc:	ldr	r2, [r0, #24]
   13100:	mov	r4, r0
   13104:	mov	r0, sl
   13108:	blx	r2
   1310c:	mov	r7, r0
   13110:	ldr	r0, [r4, #8]
   13114:	cmp	r7, r0
   13118:	bcs	13430 <__mempcpy_chk@plt+0x2448>
   1311c:	ldr	r5, [r4]
   13120:	mov	r9, r5
   13124:	ldr	r1, [r9, r7, lsl #3]!
   13128:	cmp	r1, #0
   1312c:	beq	131c0 <__mempcpy_chk@plt+0x21d8>
   13130:	cmp	r1, sl
   13134:	beq	13160 <__mempcpy_chk@plt+0x2178>
   13138:	ldr	r2, [r4, #28]
   1313c:	mov	r0, sl
   13140:	blx	r2
   13144:	cmp	r0, #0
   13148:	mov	r6, r9
   1314c:	beq	1317c <__mempcpy_chk@plt+0x2194>
   13150:	ldr	r0, [r6]
   13154:	cmp	r0, #0
   13158:	bne	13164 <__mempcpy_chk@plt+0x217c>
   1315c:	b	131c0 <__mempcpy_chk@plt+0x21d8>
   13160:	mov	r0, sl
   13164:	cmp	r8, #0
   13168:	mov	r7, #0
   1316c:	strne	r0, [r8]
   13170:	mov	r0, r7
   13174:	sub	sp, fp, #28
   13178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1317c:	add	r6, r5, r7, lsl #3
   13180:	ldr	r0, [r6, #4]!
   13184:	cmp	r0, #0
   13188:	beq	131c0 <__mempcpy_chk@plt+0x21d8>
   1318c:	ldr	r1, [r0]
   13190:	cmp	r1, sl
   13194:	beq	131b4 <__mempcpy_chk@plt+0x21cc>
   13198:	ldr	r2, [r4, #28]
   1319c:	mov	r0, sl
   131a0:	blx	r2
   131a4:	ldr	r6, [r6]
   131a8:	cmp	r0, #0
   131ac:	beq	13180 <__mempcpy_chk@plt+0x2198>
   131b0:	b	13150 <__mempcpy_chk@plt+0x2168>
   131b4:	mov	r0, sl
   131b8:	cmp	r0, #0
   131bc:	bne	13164 <__mempcpy_chk@plt+0x217c>
   131c0:	vldr	s0, [r4, #8]
   131c4:	vldr	s2, [r4, #12]
   131c8:	ldr	r0, [r4, #20]
   131cc:	vcvt.f32.u32	s0, s0
   131d0:	vcvt.f32.u32	s4, s2
   131d4:	vldr	s2, [r0, #8]
   131d8:	vmul.f32	s6, s2, s0
   131dc:	vcmpe.f32	s6, s4
   131e0:	vmrs	APSR_nzcv, fpscr
   131e4:	bpl	13348 <__mempcpy_chk@plt+0x2360>
   131e8:	movw	r1, #29920	; 0x74e0
   131ec:	movt	r1, #1
   131f0:	cmp	r0, r1
   131f4:	beq	13290 <__mempcpy_chk@plt+0x22a8>
   131f8:	vldr	s6, [pc, #564]	; 13434 <__mempcpy_chk@plt+0x244c>
   131fc:	vcmpe.f32	s2, s6
   13200:	vmrs	APSR_nzcv, fpscr
   13204:	ble	1326c <__mempcpy_chk@plt+0x2284>
   13208:	vldr	s8, [pc, #552]	; 13438 <__mempcpy_chk@plt+0x2450>
   1320c:	vcmpe.f32	s2, s8
   13210:	vmrs	APSR_nzcv, fpscr
   13214:	bpl	1326c <__mempcpy_chk@plt+0x2284>
   13218:	vldr	s8, [pc, #540]	; 1343c <__mempcpy_chk@plt+0x2454>
   1321c:	vldr	s10, [r0, #12]
   13220:	vcmpe.f32	s10, s8
   13224:	vmrs	APSR_nzcv, fpscr
   13228:	ble	1326c <__mempcpy_chk@plt+0x2284>
   1322c:	vldr	s8, [r0]
   13230:	vcmpe.f32	s8, #0.0
   13234:	vmrs	APSR_nzcv, fpscr
   13238:	blt	1326c <__mempcpy_chk@plt+0x2284>
   1323c:	vadd.f32	s6, s8, s6
   13240:	vcmpe.f32	s6, s2
   13244:	vmrs	APSR_nzcv, fpscr
   13248:	bpl	1326c <__mempcpy_chk@plt+0x2284>
   1324c:	vldr	s8, [r0, #4]
   13250:	vmov.f32	s10, #112	; 0x3f800000  1.0
   13254:	vcmpe.f32	s8, s10
   13258:	vmrs	APSR_nzcv, fpscr
   1325c:	bhi	1326c <__mempcpy_chk@plt+0x2284>
   13260:	vcmpe.f32	s6, s8
   13264:	vmrs	APSR_nzcv, fpscr
   13268:	bmi	1327c <__mempcpy_chk@plt+0x2294>
   1326c:	vldr	s2, [pc, #460]	; 13440 <__mempcpy_chk@plt+0x2458>
   13270:	movw	r0, #29920	; 0x74e0
   13274:	movt	r0, #1
   13278:	str	r0, [r4, #20]
   1327c:	vmul.f32	s6, s2, s0
   13280:	vcmpe.f32	s6, s4
   13284:	vmrs	APSR_nzcv, fpscr
   13288:	bmi	132a4 <__mempcpy_chk@plt+0x22bc>
   1328c:	b	13348 <__mempcpy_chk@plt+0x2360>
   13290:	mov	r0, r1
   13294:	vmul.f32	s6, s2, s0
   13298:	vcmpe.f32	s6, s4
   1329c:	vmrs	APSR_nzcv, fpscr
   132a0:	bpl	13348 <__mempcpy_chk@plt+0x2360>
   132a4:	vldr	s4, [r0, #12]
   132a8:	ldrb	r0, [r0, #16]
   132ac:	mvn	r7, #0
   132b0:	vmul.f32	s0, s4, s0
   132b4:	vldr	s4, [pc, #392]	; 13444 <__mempcpy_chk@plt+0x245c>
   132b8:	cmp	r0, #0
   132bc:	vmul.f32	s2, s2, s0
   132c0:	vseleq.f32	s0, s2, s0
   132c4:	vcmpe.f32	s0, s4
   132c8:	vmrs	APSR_nzcv, fpscr
   132cc:	bge	133c4 <__mempcpy_chk@plt+0x23dc>
   132d0:	vcvt.u32.f32	s0, s0
   132d4:	mov	r0, r4
   132d8:	vmov	r1, s0
   132dc:	bl	12c2c <__mempcpy_chk@plt+0x1c44>
   132e0:	cmp	r0, #0
   132e4:	beq	133c4 <__mempcpy_chk@plt+0x23dc>
   132e8:	ldr	r1, [r4, #8]
   132ec:	ldr	r2, [r4, #24]
   132f0:	mov	r0, sl
   132f4:	blx	r2
   132f8:	mov	r7, r0
   132fc:	ldr	r0, [r4, #8]
   13300:	cmp	r7, r0
   13304:	bcs	13430 <__mempcpy_chk@plt+0x2448>
   13308:	ldr	r5, [r4]
   1330c:	mov	r9, r5
   13310:	ldr	r1, [r9, r7, lsl #3]!
   13314:	cmp	r1, #0
   13318:	beq	13370 <__mempcpy_chk@plt+0x2388>
   1331c:	cmp	r1, sl
   13320:	mov	r0, sl
   13324:	beq	13340 <__mempcpy_chk@plt+0x2358>
   13328:	ldr	r2, [r4, #28]
   1332c:	mov	r0, sl
   13330:	blx	r2
   13334:	cmp	r0, #0
   13338:	beq	133e0 <__mempcpy_chk@plt+0x23f8>
   1333c:	ldr	r0, [r9]
   13340:	cmp	r0, #0
   13344:	bne	13430 <__mempcpy_chk@plt+0x2448>
   13348:	ldr	r0, [r9]
   1334c:	cmp	r0, #0
   13350:	beq	13370 <__mempcpy_chk@plt+0x2388>
   13354:	ldr	r0, [r4, #36]	; 0x24
   13358:	cmp	r0, #0
   1335c:	beq	13390 <__mempcpy_chk@plt+0x23a8>
   13360:	mov	r1, r0
   13364:	ldr	r2, [r1, #4]!
   13368:	str	r2, [r4, #36]	; 0x24
   1336c:	b	133a4 <__mempcpy_chk@plt+0x23bc>
   13370:	str	sl, [r9]
   13374:	ldr	r0, [r4, #12]
   13378:	ldr	r1, [r4, #16]
   1337c:	add	r0, r0, #1
   13380:	add	r1, r1, #1
   13384:	str	r0, [r4, #12]
   13388:	str	r1, [r4, #16]
   1338c:	b	133c0 <__mempcpy_chk@plt+0x23d8>
   13390:	mov	r0, #8
   13394:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   13398:	cmp	r0, #0
   1339c:	beq	133d0 <__mempcpy_chk@plt+0x23e8>
   133a0:	add	r1, r0, #4
   133a4:	str	sl, [r0]
   133a8:	ldr	r2, [r9, #4]
   133ac:	str	r2, [r1]
   133b0:	str	r0, [r9, #4]
   133b4:	ldr	r0, [r4, #16]
   133b8:	add	r0, r0, #1
   133bc:	str	r0, [r4, #16]
   133c0:	mov	r7, #1
   133c4:	mov	r0, r7
   133c8:	sub	sp, fp, #28
   133cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133d0:	mvn	r7, #0
   133d4:	mov	r0, r7
   133d8:	sub	sp, fp, #28
   133dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133e0:	add	r6, r5, r7, lsl #3
   133e4:	ldr	r0, [r6, #4]!
   133e8:	cmp	r0, #0
   133ec:	beq	13348 <__mempcpy_chk@plt+0x2360>
   133f0:	ldr	r1, [r0]
   133f4:	cmp	r1, sl
   133f8:	beq	13424 <__mempcpy_chk@plt+0x243c>
   133fc:	ldr	r2, [r4, #28]
   13400:	mov	r0, sl
   13404:	blx	r2
   13408:	ldr	r6, [r6]
   1340c:	cmp	r0, #0
   13410:	beq	133e4 <__mempcpy_chk@plt+0x23fc>
   13414:	ldr	r0, [r6]
   13418:	cmp	r0, #0
   1341c:	beq	13348 <__mempcpy_chk@plt+0x2360>
   13420:	b	13430 <__mempcpy_chk@plt+0x2448>
   13424:	mov	r0, sl
   13428:	cmp	r0, #0
   1342c:	beq	13348 <__mempcpy_chk@plt+0x2360>
   13430:	bl	10fd0 <abort@plt>
   13434:	stclcc	12, cr12, [ip, #820]	; 0x334
   13438:	svccc	0x00666666
   1343c:	svccc	0x008ccccd
   13440:	svccc	0x004ccccd
   13444:	svcmi	0x00800000
   13448:	push	{r4, sl, fp, lr}
   1344c:	add	fp, sp, #8
   13450:	sub	sp, sp, #8
   13454:	add	r2, sp, #4
   13458:	mov	r4, r1
   1345c:	bl	130dc <__mempcpy_chk@plt+0x20f4>
   13460:	cmn	r0, #1
   13464:	beq	13480 <__mempcpy_chk@plt+0x2498>
   13468:	ldr	r1, [sp, #4]
   1346c:	cmp	r0, #0
   13470:	moveq	r4, r1
   13474:	mov	r0, r4
   13478:	sub	sp, fp, #8
   1347c:	pop	{r4, sl, fp, pc}
   13480:	mov	r4, #0
   13484:	mov	r0, r4
   13488:	sub	sp, fp, #8
   1348c:	pop	{r4, sl, fp, pc}
   13490:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13494:	add	fp, sp, #24
   13498:	mov	r9, r1
   1349c:	ldr	r1, [r0, #8]
   134a0:	ldr	r2, [r0, #24]
   134a4:	mov	r5, r0
   134a8:	mov	r0, r9
   134ac:	blx	r2
   134b0:	mov	r7, r0
   134b4:	ldr	r0, [r5, #8]
   134b8:	cmp	r7, r0
   134bc:	bcs	1372c <__mempcpy_chk@plt+0x2744>
   134c0:	ldr	r6, [r5]
   134c4:	mov	r8, #0
   134c8:	mov	r4, r6
   134cc:	ldr	r1, [r4, r7, lsl #3]!
   134d0:	cmp	r1, #0
   134d4:	beq	13588 <__mempcpy_chk@plt+0x25a0>
   134d8:	cmp	r1, r9
   134dc:	beq	134f8 <__mempcpy_chk@plt+0x2510>
   134e0:	ldr	r2, [r5, #28]
   134e4:	mov	r0, r9
   134e8:	blx	r2
   134ec:	cmp	r0, #0
   134f0:	beq	13530 <__mempcpy_chk@plt+0x2548>
   134f4:	ldr	r9, [r4]
   134f8:	add	r0, r6, r7, lsl #3
   134fc:	ldr	r0, [r0, #4]
   13500:	cmp	r0, #0
   13504:	beq	13578 <__mempcpy_chk@plt+0x2590>
   13508:	ldm	r0, {r1, r2}
   1350c:	stm	r4, {r1, r2}
   13510:	mov	r1, #0
   13514:	str	r1, [r0]
   13518:	ldr	r1, [r5, #36]	; 0x24
   1351c:	str	r1, [r0, #4]
   13520:	str	r0, [r5, #36]	; 0x24
   13524:	cmp	r9, #0
   13528:	bne	135c0 <__mempcpy_chk@plt+0x25d8>
   1352c:	b	13588 <__mempcpy_chk@plt+0x25a0>
   13530:	add	r7, r6, r7, lsl #3
   13534:	ldr	r0, [r7, #4]!
   13538:	cmp	r0, #0
   1353c:	beq	13588 <__mempcpy_chk@plt+0x25a0>
   13540:	ldr	r1, [r0]
   13544:	cmp	r1, r9
   13548:	beq	13590 <__mempcpy_chk@plt+0x25a8>
   1354c:	ldr	r2, [r5, #28]
   13550:	mov	r0, r9
   13554:	blx	r2
   13558:	ldr	r1, [r7]
   1355c:	cmp	r0, #0
   13560:	bne	13598 <__mempcpy_chk@plt+0x25b0>
   13564:	ldr	r0, [r1, #4]!
   13568:	cmp	r0, #0
   1356c:	mov	r7, r1
   13570:	bne	13540 <__mempcpy_chk@plt+0x2558>
   13574:	b	13588 <__mempcpy_chk@plt+0x25a0>
   13578:	mov	r0, #0
   1357c:	str	r0, [r4]
   13580:	cmp	r9, #0
   13584:	bne	135c0 <__mempcpy_chk@plt+0x25d8>
   13588:	mov	r0, r8
   1358c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13590:	mov	r1, r0
   13594:	b	1359c <__mempcpy_chk@plt+0x25b4>
   13598:	ldr	r9, [r1]
   1359c:	ldr	r0, [r1, #4]
   135a0:	str	r0, [r7]
   135a4:	mov	r0, #0
   135a8:	str	r0, [r1]
   135ac:	ldr	r0, [r5, #36]	; 0x24
   135b0:	str	r0, [r1, #4]
   135b4:	str	r1, [r5, #36]	; 0x24
   135b8:	cmp	r9, #0
   135bc:	beq	13588 <__mempcpy_chk@plt+0x25a0>
   135c0:	ldr	r0, [r5, #16]
   135c4:	sub	r0, r0, #1
   135c8:	str	r0, [r5, #16]
   135cc:	ldr	r0, [r4]
   135d0:	cmp	r0, #0
   135d4:	bne	136ec <__mempcpy_chk@plt+0x2704>
   135d8:	ldr	r0, [r5, #12]
   135dc:	vldr	s0, [r5, #8]
   135e0:	sub	r1, r0, #1
   135e4:	str	r1, [r5, #12]
   135e8:	vmov	s2, r1
   135ec:	ldr	r0, [r5, #20]
   135f0:	vcvt.f32.u32	s0, s0
   135f4:	vcvt.f32.u32	s2, s2
   135f8:	vldr	s4, [r0]
   135fc:	vmul.f32	s6, s4, s0
   13600:	vcmpe.f32	s6, s2
   13604:	vmrs	APSR_nzcv, fpscr
   13608:	ble	136ec <__mempcpy_chk@plt+0x2704>
   1360c:	movw	r1, #29920	; 0x74e0
   13610:	movt	r1, #1
   13614:	cmp	r0, r1
   13618:	beq	13680 <__mempcpy_chk@plt+0x2698>
   1361c:	vldr	s8, [pc, #268]	; 13730 <__mempcpy_chk@plt+0x2748>
   13620:	vldr	s6, [r0, #8]
   13624:	vcmpe.f32	s6, s8
   13628:	vmrs	APSR_nzcv, fpscr
   1362c:	ble	1365c <__mempcpy_chk@plt+0x2674>
   13630:	vldr	s10, [pc, #252]	; 13734 <__mempcpy_chk@plt+0x274c>
   13634:	vcmpe.f32	s6, s10
   13638:	vmrs	APSR_nzcv, fpscr
   1363c:	bpl	1365c <__mempcpy_chk@plt+0x2674>
   13640:	vcmpe.f32	s4, #0.0
   13644:	vmrs	APSR_nzcv, fpscr
   13648:	vldrge	s10, [r0, #12]
   1364c:	vldrge	s12, [pc, #228]	; 13738 <__mempcpy_chk@plt+0x2750>
   13650:	vcmpege.f32	s10, s12
   13654:	vmrsge	APSR_nzcv, fpscr
   13658:	bgt	136f8 <__mempcpy_chk@plt+0x2710>
   1365c:	vldr	s4, [pc, #216]	; 1373c <__mempcpy_chk@plt+0x2754>
   13660:	movw	r0, #29920	; 0x74e0
   13664:	movt	r0, #1
   13668:	str	r0, [r5, #20]
   1366c:	vmul.f32	s4, s4, s0
   13670:	vcmpe.f32	s4, s2
   13674:	vmrs	APSR_nzcv, fpscr
   13678:	bgt	13694 <__mempcpy_chk@plt+0x26ac>
   1367c:	b	136ec <__mempcpy_chk@plt+0x2704>
   13680:	mov	r0, r1
   13684:	vmul.f32	s4, s4, s0
   13688:	vcmpe.f32	s4, s2
   1368c:	vmrs	APSR_nzcv, fpscr
   13690:	ble	136ec <__mempcpy_chk@plt+0x2704>
   13694:	ldrb	r1, [r0, #16]
   13698:	vldr	s2, [r0, #4]
   1369c:	cmp	r1, #0
   136a0:	vmul.f32	s0, s2, s0
   136a4:	vldreq	s2, [r0, #8]
   136a8:	mov	r0, r5
   136ac:	vmuleq.f32	s0, s0, s2
   136b0:	vcvt.u32.f32	s0, s0
   136b4:	vmov	r1, s0
   136b8:	bl	12c2c <__mempcpy_chk@plt+0x1c44>
   136bc:	cmp	r0, #0
   136c0:	bne	136ec <__mempcpy_chk@plt+0x2704>
   136c4:	ldr	r0, [r5, #36]	; 0x24
   136c8:	cmp	r0, #0
   136cc:	beq	136e4 <__mempcpy_chk@plt+0x26fc>
   136d0:	ldr	r4, [r0, #4]
   136d4:	bl	12348 <__mempcpy_chk@plt+0x1360>
   136d8:	cmp	r4, #0
   136dc:	mov	r0, r4
   136e0:	bne	136d0 <__mempcpy_chk@plt+0x26e8>
   136e4:	mov	r0, #0
   136e8:	str	r0, [r5, #36]	; 0x24
   136ec:	mov	r8, r9
   136f0:	mov	r0, r8
   136f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   136f8:	vadd.f32	s8, s4, s8
   136fc:	vcmpe.f32	s8, s6
   13700:	vmrs	APSR_nzcv, fpscr
   13704:	bpl	1365c <__mempcpy_chk@plt+0x2674>
   13708:	vldr	s6, [r0, #4]
   1370c:	vmov.f32	s10, #112	; 0x3f800000  1.0
   13710:	vcmpe.f32	s6, s10
   13714:	vmrs	APSR_nzcv, fpscr
   13718:	bhi	1365c <__mempcpy_chk@plt+0x2674>
   1371c:	vcmpe.f32	s8, s6
   13720:	vmrs	APSR_nzcv, fpscr
   13724:	bmi	13684 <__mempcpy_chk@plt+0x269c>
   13728:	b	1365c <__mempcpy_chk@plt+0x2674>
   1372c:	bl	10fd0 <abort@plt>
   13730:	stclcc	12, cr12, [ip, #820]	; 0x334
   13734:	svccc	0x00666666
   13738:	svccc	0x008ccccd
   1373c:	andeq	r0, r0, r0
   13740:	b	13490 <__mempcpy_chk@plt+0x24a8>
   13744:	push	{r4, r5, fp, lr}
   13748:	add	fp, sp, #8
   1374c:	mov	r5, r0
   13750:	ldr	r0, [r0]
   13754:	mov	r4, r1
   13758:	bl	1687c <__mempcpy_chk@plt+0x5894>
   1375c:	ldrd	r2, [r5, #8]
   13760:	eor	r0, r2, r0
   13764:	mov	r1, r3
   13768:	mov	r2, r4
   1376c:	mov	r3, #0
   13770:	bl	16a9c <__mempcpy_chk@plt+0x5ab4>
   13774:	mov	r0, r2
   13778:	pop	{r4, r5, fp, pc}
   1377c:	push	{r4, r5, r6, r7, fp, lr}
   13780:	add	fp, sp, #16
   13784:	ldrd	r2, [r1, #8]
   13788:	ldrd	r4, [r0, #8]
   1378c:	eor	r3, r5, r3
   13790:	eor	r2, r4, r2
   13794:	orrs	r2, r2, r3
   13798:	mov	r2, #0
   1379c:	bne	137cc <__mempcpy_chk@plt+0x27e4>
   137a0:	ldrd	r4, [r1, #16]
   137a4:	ldrd	r6, [r0, #16]
   137a8:	eor	r3, r7, r5
   137ac:	eor	r7, r6, r4
   137b0:	orrs	r3, r7, r3
   137b4:	bne	137cc <__mempcpy_chk@plt+0x27e4>
   137b8:	ldr	r1, [r1]
   137bc:	ldr	r0, [r0]
   137c0:	bl	10db4 <strcmp@plt>
   137c4:	clz	r0, r0
   137c8:	lsr	r2, r0, #5
   137cc:	mov	r0, r2
   137d0:	pop	{r4, r5, r6, r7, fp, pc}
   137d4:	push	{r4, sl, fp, lr}
   137d8:	add	fp, sp, #8
   137dc:	mov	r4, r0
   137e0:	ldr	r0, [r0]
   137e4:	bl	12348 <__mempcpy_chk@plt+0x1360>
   137e8:	mov	r0, r4
   137ec:	pop	{r4, sl, fp, lr}
   137f0:	b	12348 <__mempcpy_chk@plt+0x1360>
   137f4:	push	{r4, r5, fp, lr}
   137f8:	add	fp, sp, #8
   137fc:	cmp	r0, #0
   13800:	beq	13894 <__mempcpy_chk@plt+0x28ac>
   13804:	mov	r1, #47	; 0x2f
   13808:	mov	r4, r0
   1380c:	bl	10f94 <strrchr@plt>
   13810:	cmp	r0, #0
   13814:	mov	r5, r4
   13818:	addne	r5, r0, #1
   1381c:	sub	r0, r5, r4
   13820:	cmp	r0, #7
   13824:	blt	13878 <__mempcpy_chk@plt+0x2890>
   13828:	movw	r1, #29996	; 0x752c
   1382c:	sub	r0, r5, #7
   13830:	mov	r2, #7
   13834:	movt	r1, #1
   13838:	bl	10fc4 <strncmp@plt>
   1383c:	cmp	r0, #0
   13840:	bne	13878 <__mempcpy_chk@plt+0x2890>
   13844:	movw	r1, #30004	; 0x7534
   13848:	mov	r0, r5
   1384c:	mov	r2, #3
   13850:	movt	r1, #1
   13854:	bl	10fc4 <strncmp@plt>
   13858:	cmp	r0, #0
   1385c:	beq	13868 <__mempcpy_chk@plt+0x2880>
   13860:	mov	r4, r5
   13864:	b	13878 <__mempcpy_chk@plt+0x2890>
   13868:	movw	r0, #33072	; 0x8130
   1386c:	add	r4, r5, #3
   13870:	movt	r0, #2
   13874:	str	r4, [r0]
   13878:	movw	r0, #33076	; 0x8134
   1387c:	movt	r0, #2
   13880:	str	r4, [r0]
   13884:	movw	r0, #33108	; 0x8154
   13888:	movt	r0, #2
   1388c:	str	r4, [r0]
   13890:	pop	{r4, r5, fp, pc}
   13894:	movw	r0, #33088	; 0x8140
   13898:	mov	r1, #55	; 0x37
   1389c:	mov	r2, #1
   138a0:	movt	r0, #2
   138a4:	ldr	r3, [r0]
   138a8:	movw	r0, #29940	; 0x74f4
   138ac:	movt	r0, #1
   138b0:	bl	10e68 <fwrite@plt>
   138b4:	bl	10fd0 <abort@plt>
   138b8:	push	{r4, r5, r6, sl, fp, lr}
   138bc:	add	fp, sp, #16
   138c0:	mov	r4, r0
   138c4:	movw	r0, #33112	; 0x8158
   138c8:	movt	r0, #2
   138cc:	cmp	r4, #0
   138d0:	moveq	r4, r0
   138d4:	bl	10f1c <__errno_location@plt>
   138d8:	ldr	r6, [r0]
   138dc:	mov	r5, r0
   138e0:	mov	r0, r4
   138e4:	mov	r1, #48	; 0x30
   138e8:	bl	16434 <__mempcpy_chk@plt+0x544c>
   138ec:	str	r6, [r5]
   138f0:	pop	{r4, r5, r6, sl, fp, pc}
   138f4:	movw	r1, #33112	; 0x8158
   138f8:	cmp	r0, #0
   138fc:	movt	r1, #2
   13900:	movne	r1, r0
   13904:	ldr	r0, [r1]
   13908:	bx	lr
   1390c:	movw	r2, #33112	; 0x8158
   13910:	cmp	r0, #0
   13914:	movt	r2, #2
   13918:	movne	r2, r0
   1391c:	str	r1, [r2]
   13920:	bx	lr
   13924:	movw	r3, #33112	; 0x8158
   13928:	cmp	r0, #0
   1392c:	movt	r3, #2
   13930:	movne	r3, r0
   13934:	ubfx	r0, r1, #5, #3
   13938:	and	r1, r1, #31
   1393c:	add	r0, r3, r0, lsl #2
   13940:	ldr	r3, [r0, #8]
   13944:	eor	r2, r2, r3, lsr r1
   13948:	and	r2, r2, #1
   1394c:	eor	r2, r3, r2, lsl r1
   13950:	str	r2, [r0, #8]
   13954:	mov	r0, #1
   13958:	and	r0, r0, r3, lsr r1
   1395c:	bx	lr
   13960:	movw	r2, #33112	; 0x8158
   13964:	cmp	r0, #0
   13968:	movt	r2, #2
   1396c:	movne	r2, r0
   13970:	ldr	r0, [r2, #4]
   13974:	str	r1, [r2, #4]
   13978:	bx	lr
   1397c:	movw	r3, #33112	; 0x8158
   13980:	cmp	r0, #0
   13984:	movt	r3, #2
   13988:	movne	r3, r0
   1398c:	cmp	r1, #0
   13990:	mov	r0, #10
   13994:	cmpne	r2, #0
   13998:	str	r0, [r3]
   1399c:	bne	139ac <__mempcpy_chk@plt+0x29c4>
   139a0:	push	{fp, lr}
   139a4:	mov	fp, sp
   139a8:	bl	10fd0 <abort@plt>
   139ac:	str	r1, [r3, #40]	; 0x28
   139b0:	str	r2, [r3, #44]	; 0x2c
   139b4:	bx	lr
   139b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139bc:	add	fp, sp, #28
   139c0:	sub	sp, sp, #20
   139c4:	mov	r7, r0
   139c8:	ldr	r0, [fp, #8]
   139cc:	movw	r5, #33112	; 0x8158
   139d0:	mov	r8, r3
   139d4:	mov	r9, r2
   139d8:	mov	sl, r1
   139dc:	movt	r5, #2
   139e0:	cmp	r0, #0
   139e4:	movne	r5, r0
   139e8:	bl	10f1c <__errno_location@plt>
   139ec:	mov	r4, r0
   139f0:	ldm	r5, {r0, r1}
   139f4:	ldr	r2, [r5, #40]	; 0x28
   139f8:	ldr	r3, [r5, #44]	; 0x2c
   139fc:	add	r5, r5, #8
   13a00:	ldr	r6, [r4]
   13a04:	stm	sp, {r0, r1, r5}
   13a08:	str	r2, [sp, #12]
   13a0c:	str	r3, [sp, #16]
   13a10:	mov	r0, r7
   13a14:	mov	r1, sl
   13a18:	mov	r2, r9
   13a1c:	mov	r3, r8
   13a20:	bl	13a30 <__mempcpy_chk@plt+0x2a48>
   13a24:	str	r6, [r4]
   13a28:	sub	sp, fp, #28
   13a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a34:	add	fp, sp, #28
   13a38:	sub	sp, sp, #156	; 0x9c
   13a3c:	str	r0, [sp, #76]	; 0x4c
   13a40:	ldr	r0, [fp, #12]
   13a44:	mov	r6, r1
   13a48:	str	r3, [sp, #84]	; 0x54
   13a4c:	str	r2, [fp, #-84]	; 0xffffffac
   13a50:	and	r1, r0, #4
   13a54:	str	r1, [sp, #24]
   13a58:	and	r1, r0, #1
   13a5c:	str	r1, [sp, #28]
   13a60:	ubfx	r8, r0, #1, #1
   13a64:	bl	10e80 <__ctype_get_mb_cur_max@plt>
   13a68:	str	r0, [sp, #32]
   13a6c:	ldr	r0, [fp, #24]
   13a70:	ldr	r7, [fp, #8]
   13a74:	mov	r1, #0
   13a78:	mov	r2, #0
   13a7c:	mov	r4, #1
   13a80:	str	r1, [sp, #52]	; 0x34
   13a84:	str	r0, [sp, #72]	; 0x48
   13a88:	ldr	r0, [fp, #20]
   13a8c:	str	r0, [sp, #68]	; 0x44
   13a90:	mov	r0, #0
   13a94:	str	r0, [sp, #48]	; 0x30
   13a98:	mov	r0, #0
   13a9c:	str	r0, [sp, #92]	; 0x5c
   13aa0:	mov	r0, #0
   13aa4:	str	r0, [fp, #-76]	; 0xffffffb4
   13aa8:	mov	r0, #0
   13aac:	cmp	r7, #10
   13ab0:	bhi	14d98 <__mempcpy_chk@plt+0x3db0>
   13ab4:	add	r1, pc, #28
   13ab8:	mov	sl, r6
   13abc:	ldr	r6, [sp, #76]	; 0x4c
   13ac0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ac4:	ldr	lr, [sp, #84]	; 0x54
   13ac8:	mov	r9, #0
   13acc:	mov	r3, #1
   13ad0:	mov	r5, #0
   13ad4:	ldr	pc, [r1, r7, lsl #2]
   13ad8:	andeq	r3, r1, r8, lsr #23
   13adc:	andeq	r3, r1, r4, ror #23
   13ae0:			; <UNDEFINED> instruction: 0x00013bb8
   13ae4:	andeq	r3, r1, r0, lsr #23
   13ae8:	ldrdeq	r3, [r1], -r8
   13aec:	andeq	r3, r1, ip, lsl #24
   13af0:	andeq	r3, r1, r8, asr #23
   13af4:	andeq	r3, r1, r8, lsl lr
   13af8:	andeq	r3, r1, r4, lsl #22
   13afc:	andeq	r3, r1, r4, lsl #22
   13b00:	andeq	r3, r1, ip, lsr #27
   13b04:	mov	r9, r4
   13b08:	movw	r4, #30088	; 0x7588
   13b0c:	mov	r5, r8
   13b10:	mov	r8, r2
   13b14:	mov	r0, #0
   13b18:	mov	r2, #5
   13b1c:	movt	r4, #1
   13b20:	mov	r1, r4
   13b24:	bl	10e20 <dcgettext@plt>
   13b28:	cmp	r0, r4
   13b2c:	str	r0, [sp, #68]	; 0x44
   13b30:	bne	13cc0 <__mempcpy_chk@plt+0x2cd8>
   13b34:	bl	168c0 <__mempcpy_chk@plt+0x58d8>
   13b38:	ldrb	r1, [r0]
   13b3c:	and	r1, r1, #223	; 0xdf
   13b40:	cmp	r1, #71	; 0x47
   13b44:	beq	13c8c <__mempcpy_chk@plt+0x2ca4>
   13b48:	cmp	r1, #85	; 0x55
   13b4c:	bne	13ca4 <__mempcpy_chk@plt+0x2cbc>
   13b50:	ldrb	r1, [r0, #1]
   13b54:	and	r1, r1, #223	; 0xdf
   13b58:	cmp	r1, #84	; 0x54
   13b5c:	bne	13ca4 <__mempcpy_chk@plt+0x2cbc>
   13b60:	ldrb	r1, [r0, #2]
   13b64:	and	r1, r1, #223	; 0xdf
   13b68:	cmp	r1, #70	; 0x46
   13b6c:	bne	13ca4 <__mempcpy_chk@plt+0x2cbc>
   13b70:	ldrb	r1, [r0, #3]
   13b74:	cmp	r1, #45	; 0x2d
   13b78:	ldrbeq	r1, [r0, #4]
   13b7c:	cmpeq	r1, #56	; 0x38
   13b80:	bne	13ca4 <__mempcpy_chk@plt+0x2cbc>
   13b84:	ldrb	r0, [r0, #5]
   13b88:	cmp	r0, #0
   13b8c:	movw	r0, #30092	; 0x758c
   13b90:	movt	r0, #1
   13b94:	str	r0, [sp, #68]	; 0x44
   13b98:	bne	13ca4 <__mempcpy_chk@plt+0x2cbc>
   13b9c:	b	13cc0 <__mempcpy_chk@plt+0x2cd8>
   13ba0:	mov	r0, #1
   13ba4:	b	13be4 <__mempcpy_chk@plt+0x2bfc>
   13ba8:	mov	r7, #0
   13bac:	mov	r9, #0
   13bb0:	mov	r3, r0
   13bb4:	b	13c84 <__mempcpy_chk@plt+0x2c9c>
   13bb8:	tst	r8, #1
   13bbc:	bne	13be4 <__mempcpy_chk@plt+0x2bfc>
   13bc0:	mov	r3, r0
   13bc4:	b	13c3c <__mempcpy_chk@plt+0x2c54>
   13bc8:	mov	r0, #1
   13bcc:	mov	r9, #0
   13bd0:	mov	r7, #5
   13bd4:	b	13c20 <__mempcpy_chk@plt+0x2c38>
   13bd8:	mov	r3, #1
   13bdc:	tst	r8, #1
   13be0:	beq	13c3c <__mempcpy_chk@plt+0x2c54>
   13be4:	mov	r1, #1
   13be8:	mov	r9, #0
   13bec:	mov	r7, #2
   13bf0:	mov	r3, r0
   13bf4:	mov	r5, #1
   13bf8:	str	r1, [fp, #-76]	; 0xffffffb4
   13bfc:	movw	r1, #30090	; 0x758a
   13c00:	movt	r1, #1
   13c04:	str	r1, [sp, #92]	; 0x5c
   13c08:	b	13e18 <__mempcpy_chk@plt+0x2e30>
   13c0c:	mov	r7, #5
   13c10:	tst	r8, #1
   13c14:	beq	13c5c <__mempcpy_chk@plt+0x2c74>
   13c18:	mov	r0, #1
   13c1c:	mov	r9, #0
   13c20:	str	r0, [fp, #-76]	; 0xffffffb4
   13c24:	movw	r0, #30086	; 0x7586
   13c28:	mov	r3, #1
   13c2c:	mov	r5, #1
   13c30:	movt	r0, #1
   13c34:	str	r0, [sp, #92]	; 0x5c
   13c38:	b	13e18 <__mempcpy_chk@plt+0x2e30>
   13c3c:	cmp	sl, #0
   13c40:	mov	r9, #1
   13c44:	mov	r7, #2
   13c48:	movne	r0, #39	; 0x27
   13c4c:	strbne	r0, [r6]
   13c50:	movw	r0, #30090	; 0x758a
   13c54:	movt	r0, #1
   13c58:	b	13c78 <__mempcpy_chk@plt+0x2c90>
   13c5c:	cmp	sl, #0
   13c60:	mov	r9, #1
   13c64:	mov	r3, #1
   13c68:	movne	r0, #34	; 0x22
   13c6c:	strbne	r0, [r6]
   13c70:	movw	r0, #30086	; 0x7586
   13c74:	movt	r0, #1
   13c78:	str	r0, [sp, #92]	; 0x5c
   13c7c:	mov	r0, #1
   13c80:	str	r0, [fp, #-76]	; 0xffffffb4
   13c84:	mov	r5, #0
   13c88:	b	13e18 <__mempcpy_chk@plt+0x2e30>
   13c8c:	ldrb	r1, [r0, #1]
   13c90:	and	r1, r1, #223	; 0xdf
   13c94:	cmp	r1, #66	; 0x42
   13c98:	ldrbeq	r1, [r0, #2]
   13c9c:	cmpeq	r1, #49	; 0x31
   13ca0:	beq	14bc0 <__mempcpy_chk@plt+0x3bd8>
   13ca4:	movw	r0, #30090	; 0x758a
   13ca8:	movw	r1, #30086	; 0x7586
   13cac:	cmp	r7, #9
   13cb0:	movt	r0, #1
   13cb4:	movt	r1, #1
   13cb8:	moveq	r0, r1
   13cbc:	str	r0, [sp, #68]	; 0x44
   13cc0:	movw	r4, #30090	; 0x758a
   13cc4:	mov	r0, #0
   13cc8:	mov	r2, #5
   13ccc:	movt	r4, #1
   13cd0:	mov	r1, r4
   13cd4:	bl	10e20 <dcgettext@plt>
   13cd8:	cmp	r0, r4
   13cdc:	str	r0, [sp, #72]	; 0x48
   13ce0:	beq	13cf0 <__mempcpy_chk@plt+0x2d08>
   13ce4:	mov	r4, r9
   13ce8:	mov	r2, r8
   13cec:	b	13da8 <__mempcpy_chk@plt+0x2dc0>
   13cf0:	bl	168c0 <__mempcpy_chk@plt+0x58d8>
   13cf4:	ldrb	r1, [r0]
   13cf8:	mov	r4, r9
   13cfc:	and	r1, r1, #223	; 0xdf
   13d00:	cmp	r1, #71	; 0x47
   13d04:	beq	13d60 <__mempcpy_chk@plt+0x2d78>
   13d08:	cmp	r1, #85	; 0x55
   13d0c:	mov	r2, r8
   13d10:	bne	13d88 <__mempcpy_chk@plt+0x2da0>
   13d14:	ldrb	r1, [r0, #1]
   13d18:	and	r1, r1, #223	; 0xdf
   13d1c:	cmp	r1, #84	; 0x54
   13d20:	bne	13d88 <__mempcpy_chk@plt+0x2da0>
   13d24:	ldrb	r1, [r0, #2]
   13d28:	and	r1, r1, #223	; 0xdf
   13d2c:	cmp	r1, #70	; 0x46
   13d30:	ldrbeq	r1, [r0, #3]
   13d34:	cmpeq	r1, #45	; 0x2d
   13d38:	bne	13d88 <__mempcpy_chk@plt+0x2da0>
   13d3c:	ldrb	r1, [r0, #4]
   13d40:	cmp	r1, #56	; 0x38
   13d44:	ldrbeq	r0, [r0, #5]
   13d48:	cmpeq	r0, #0
   13d4c:	bne	13d88 <__mempcpy_chk@plt+0x2da0>
   13d50:	movw	r0, #30096	; 0x7590
   13d54:	movt	r0, #1
   13d58:	str	r0, [sp, #72]	; 0x48
   13d5c:	b	13da8 <__mempcpy_chk@plt+0x2dc0>
   13d60:	ldrb	r1, [r0, #1]
   13d64:	mov	r2, r8
   13d68:	and	r1, r1, #223	; 0xdf
   13d6c:	cmp	r1, #66	; 0x42
   13d70:	bne	13d88 <__mempcpy_chk@plt+0x2da0>
   13d74:	ldrb	r1, [r0, #2]
   13d78:	cmp	r1, #49	; 0x31
   13d7c:	ldrbeq	r1, [r0, #3]
   13d80:	cmpeq	r1, #56	; 0x38
   13d84:	beq	14c04 <__mempcpy_chk@plt+0x3c1c>
   13d88:	movw	r0, #30090	; 0x758a
   13d8c:	cmp	r7, #9
   13d90:	movt	r0, #1
   13d94:	mov	r1, r0
   13d98:	movw	r0, #30086	; 0x7586
   13d9c:	movt	r0, #1
   13da0:	moveq	r1, r0
   13da4:	str	r1, [sp, #72]	; 0x48
   13da8:	mov	r8, r5
   13dac:	mov	r9, #0
   13db0:	tst	r8, #1
   13db4:	mov	r5, r8
   13db8:	str	r2, [fp, #-48]	; 0xffffffd0
   13dbc:	bne	13df4 <__mempcpy_chk@plt+0x2e0c>
   13dc0:	ldr	r0, [sp, #68]	; 0x44
   13dc4:	ldrb	r0, [r0]
   13dc8:	cmp	r0, #0
   13dcc:	beq	13df4 <__mempcpy_chk@plt+0x2e0c>
   13dd0:	ldr	r1, [sp, #68]	; 0x44
   13dd4:	mov	r9, #0
   13dd8:	add	r1, r1, #1
   13ddc:	cmp	r9, sl
   13de0:	strbcc	r0, [r6, r9]
   13de4:	ldrb	r0, [r1, r9]
   13de8:	add	r9, r9, #1
   13dec:	cmp	r0, #0
   13df0:	bne	13ddc <__mempcpy_chk@plt+0x2df4>
   13df4:	ldr	r8, [sp, #72]	; 0x48
   13df8:	mov	r0, r8
   13dfc:	bl	10f10 <strlen@plt>
   13e00:	ldr	ip, [fp, #-84]	; 0xffffffac
   13e04:	ldr	lr, [sp, #84]	; 0x54
   13e08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13e0c:	str	r0, [fp, #-76]	; 0xffffffb4
   13e10:	str	r8, [sp, #92]	; 0x5c
   13e14:	mov	r3, #1
   13e18:	ldr	r0, [fp, #16]
   13e1c:	str	r7, [fp, #-64]	; 0xffffffc0
   13e20:	str	r5, [fp, #-72]	; 0xffffffb8
   13e24:	str	r3, [sp, #80]	; 0x50
   13e28:	cmp	r0, #0
   13e2c:	movwne	r0, #1
   13e30:	and	r0, r0, r5
   13e34:	str	r0, [fp, #-88]	; 0xffffffa8
   13e38:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13e3c:	cmp	r0, #0
   13e40:	movwne	r0, #1
   13e44:	subs	r7, r7, #2
   13e48:	and	r1, r0, r5
   13e4c:	str	r7, [fp, #-80]	; 0xffffffb0
   13e50:	and	r1, r3, r1
   13e54:	str	r1, [sp, #40]	; 0x28
   13e58:	clz	r1, r7
   13e5c:	lsr	r1, r1, #5
   13e60:	and	r1, r1, r5
   13e64:	eor	r5, r5, #1
   13e68:	str	r1, [sp, #36]	; 0x24
   13e6c:	mov	r1, r7
   13e70:	str	r5, [sp, #88]	; 0x58
   13e74:	mov	r7, #0
   13e78:	movwne	r1, #1
   13e7c:	orr	r5, r1, r5
   13e80:	and	r1, r1, r3
   13e84:	and	r0, r0, r1
   13e88:	str	r5, [sp, #60]	; 0x3c
   13e8c:	str	r1, [fp, #-68]	; 0xffffffbc
   13e90:	str	r0, [fp, #-60]	; 0xffffffc4
   13e94:	eor	r0, r3, #1
   13e98:	str	r0, [sp, #44]	; 0x2c
   13e9c:	cmn	lr, #1
   13ea0:	beq	13eb0 <__mempcpy_chk@plt+0x2ec8>
   13ea4:	cmp	r7, lr
   13ea8:	bne	13ebc <__mempcpy_chk@plt+0x2ed4>
   13eac:	b	14b34 <__mempcpy_chk@plt+0x3b4c>
   13eb0:	ldrb	r0, [ip, r7]
   13eb4:	cmp	r0, #0
   13eb8:	beq	14b3c <__mempcpy_chk@plt+0x3b54>
   13ebc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13ec0:	mov	r8, #0
   13ec4:	str	r4, [fp, #-52]	; 0xffffffcc
   13ec8:	str	r2, [fp, #-48]	; 0xffffffd0
   13ecc:	cmp	r0, #0
   13ed0:	beq	13f04 <__mempcpy_chk@plt+0x2f1c>
   13ed4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13ed8:	add	r4, r7, r0
   13edc:	cmp	r0, #2
   13ee0:	bcc	13efc <__mempcpy_chk@plt+0x2f14>
   13ee4:	cmn	lr, #1
   13ee8:	bne	13efc <__mempcpy_chk@plt+0x2f14>
   13eec:	mov	r0, ip
   13ef0:	bl	10f10 <strlen@plt>
   13ef4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ef8:	mov	lr, r0
   13efc:	cmp	r4, lr
   13f00:	bls	13f1c <__mempcpy_chk@plt+0x2f34>
   13f04:	mov	r0, #0
   13f08:	str	r0, [fp, #-56]	; 0xffffffc8
   13f0c:	ldrb	r5, [ip, r7]
   13f10:	cmp	r5, #126	; 0x7e
   13f14:	bls	13f6c <__mempcpy_chk@plt+0x2f84>
   13f18:	b	14374 <__mempcpy_chk@plt+0x338c>
   13f1c:	ldr	r1, [sp, #92]	; 0x5c
   13f20:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13f24:	add	r0, ip, r7
   13f28:	mov	r4, lr
   13f2c:	bl	10e14 <memcmp@plt>
   13f30:	ldr	r2, [sp, #88]	; 0x58
   13f34:	cmp	r0, #0
   13f38:	mov	r1, r0
   13f3c:	movwne	r1, #1
   13f40:	orr	r1, r1, r2
   13f44:	tst	r1, #1
   13f48:	beq	14c48 <__mempcpy_chk@plt+0x3c60>
   13f4c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13f50:	clz	r0, r0
   13f54:	mov	lr, r4
   13f58:	lsr	r0, r0, #5
   13f5c:	str	r0, [fp, #-56]	; 0xffffffc8
   13f60:	ldrb	r5, [ip, r7]
   13f64:	cmp	r5, #126	; 0x7e
   13f68:	bhi	14374 <__mempcpy_chk@plt+0x338c>
   13f6c:	add	r3, pc, #16
   13f70:	mov	r4, #1
   13f74:	mov	r2, #110	; 0x6e
   13f78:	mov	r0, #97	; 0x61
   13f7c:	mov	r1, #0
   13f80:	ldr	pc, [r3, r5, lsl #2]
   13f84:	andeq	r4, r1, r4, asr r2
   13f88:	andeq	r4, r1, r4, ror r3
   13f8c:	andeq	r4, r1, r4, ror r3
   13f90:	andeq	r4, r1, r4, ror r3
   13f94:	andeq	r4, r1, r4, ror r3
   13f98:	andeq	r4, r1, r4, ror r3
   13f9c:	andeq	r4, r1, r4, ror r3
   13fa0:	andeq	r4, r1, r0, asr r4
   13fa4:	andeq	r4, r1, r4, lsr r2
   13fa8:	andeq	r4, r1, ip, lsl r2
   13fac:	andeq	r4, r1, r0, asr #4
   13fb0:	ldrdeq	r4, [r1], -r0
   13fb4:	andeq	r4, r1, r4, lsl r2
   13fb8:	andeq	r4, r1, ip, lsr r2
   13fbc:	andeq	r4, r1, r4, ror r3
   13fc0:	andeq	r4, r1, r4, ror r3
   13fc4:	andeq	r4, r1, r4, ror r3
   13fc8:	andeq	r4, r1, r4, ror r3
   13fcc:	andeq	r4, r1, r4, ror r3
   13fd0:	andeq	r4, r1, r4, ror r3
   13fd4:	andeq	r4, r1, r4, ror r3
   13fd8:	andeq	r4, r1, r4, ror r3
   13fdc:	andeq	r4, r1, r4, ror r3
   13fe0:	andeq	r4, r1, r4, ror r3
   13fe4:	andeq	r4, r1, r4, ror r3
   13fe8:	andeq	r4, r1, r4, ror r3
   13fec:	andeq	r4, r1, r4, ror r3
   13ff0:	andeq	r4, r1, r4, ror r3
   13ff4:	andeq	r4, r1, r4, ror r3
   13ff8:	andeq	r4, r1, r4, ror r3
   13ffc:	andeq	r4, r1, r4, ror r3
   14000:	andeq	r4, r1, r4, ror r3
   14004:	andeq	r4, r1, ip, asr #7
   14008:	ldrdeq	r4, [r1], -r0
   1400c:	ldrdeq	r4, [r1], -r0
   14010:	andeq	r4, r1, r0, lsr #3
   14014:	ldrdeq	r4, [r1], -r0
   14018:	andeq	r4, r1, r0, lsl #3
   1401c:	ldrdeq	r4, [r1], -r0
   14020:	ldrdeq	r4, [r1], -r8
   14024:	ldrdeq	r4, [r1], -r0
   14028:	ldrdeq	r4, [r1], -r0
   1402c:	ldrdeq	r4, [r1], -r0
   14030:	andeq	r4, r1, r0, lsl #3
   14034:	andeq	r4, r1, r0, lsl #3
   14038:	andeq	r4, r1, r0, lsl #3
   1403c:	andeq	r4, r1, r0, lsl #3
   14040:	andeq	r4, r1, r0, lsl #3
   14044:	andeq	r4, r1, r0, lsl #3
   14048:	andeq	r4, r1, r0, lsl #3
   1404c:	andeq	r4, r1, r0, lsl #3
   14050:	andeq	r4, r1, r0, lsl #3
   14054:	andeq	r4, r1, r0, lsl #3
   14058:	andeq	r4, r1, r0, lsl #3
   1405c:	andeq	r4, r1, r0, lsl #3
   14060:	andeq	r4, r1, r0, lsl #3
   14064:	andeq	r4, r1, r0, lsl #3
   14068:	andeq	r4, r1, r0, lsl #3
   1406c:	andeq	r4, r1, r0, lsl #3
   14070:	ldrdeq	r4, [r1], -r0
   14074:	ldrdeq	r4, [r1], -r0
   14078:	ldrdeq	r4, [r1], -r0
   1407c:	ldrdeq	r4, [r1], -r0
   14080:	muleq	r1, r4, r2
   14084:	andeq	r4, r1, r4, ror r3
   14088:	andeq	r4, r1, r0, lsl #3
   1408c:	andeq	r4, r1, r0, lsl #3
   14090:	andeq	r4, r1, r0, lsl #3
   14094:	andeq	r4, r1, r0, lsl #3
   14098:	andeq	r4, r1, r0, lsl #3
   1409c:	andeq	r4, r1, r0, lsl #3
   140a0:	andeq	r4, r1, r0, lsl #3
   140a4:	andeq	r4, r1, r0, lsl #3
   140a8:	andeq	r4, r1, r0, lsl #3
   140ac:	andeq	r4, r1, r0, lsl #3
   140b0:	andeq	r4, r1, r0, lsl #3
   140b4:	andeq	r4, r1, r0, lsl #3
   140b8:	andeq	r4, r1, r0, lsl #3
   140bc:	andeq	r4, r1, r0, lsl #3
   140c0:	andeq	r4, r1, r0, lsl #3
   140c4:	andeq	r4, r1, r0, lsl #3
   140c8:	andeq	r4, r1, r0, lsl #3
   140cc:	andeq	r4, r1, r0, lsl #3
   140d0:	andeq	r4, r1, r0, lsl #3
   140d4:	andeq	r4, r1, r0, lsl #3
   140d8:	andeq	r4, r1, r0, lsl #3
   140dc:	andeq	r4, r1, r0, lsl #3
   140e0:	andeq	r4, r1, r0, lsl #3
   140e4:	andeq	r4, r1, r0, lsl #3
   140e8:	andeq	r4, r1, r0, lsl #3
   140ec:	andeq	r4, r1, r0, lsl #3
   140f0:	ldrdeq	r4, [r1], -r0
   140f4:	andeq	r4, r1, r0, ror #3
   140f8:	andeq	r4, r1, r0, lsl #3
   140fc:	ldrdeq	r4, [r1], -r0
   14100:	andeq	r4, r1, r0, lsl #3
   14104:	ldrdeq	r4, [r1], -r0
   14108:	andeq	r4, r1, r0, lsl #3
   1410c:	andeq	r4, r1, r0, lsl #3
   14110:	andeq	r4, r1, r0, lsl #3
   14114:	andeq	r4, r1, r0, lsl #3
   14118:	andeq	r4, r1, r0, lsl #3
   1411c:	andeq	r4, r1, r0, lsl #3
   14120:	andeq	r4, r1, r0, lsl #3
   14124:	andeq	r4, r1, r0, lsl #3
   14128:	andeq	r4, r1, r0, lsl #3
   1412c:	andeq	r4, r1, r0, lsl #3
   14130:	andeq	r4, r1, r0, lsl #3
   14134:	andeq	r4, r1, r0, lsl #3
   14138:	andeq	r4, r1, r0, lsl #3
   1413c:	andeq	r4, r1, r0, lsl #3
   14140:	andeq	r4, r1, r0, lsl #3
   14144:	andeq	r4, r1, r0, lsl #3
   14148:	andeq	r4, r1, r0, lsl #3
   1414c:	andeq	r4, r1, r0, lsl #3
   14150:	andeq	r4, r1, r0, lsl #3
   14154:	andeq	r4, r1, r0, lsl #3
   14158:	andeq	r4, r1, r0, lsl #3
   1415c:	andeq	r4, r1, r0, lsl #3
   14160:	andeq	r4, r1, r0, lsl #3
   14164:	andeq	r4, r1, r0, lsl #3
   14168:	andeq	r4, r1, r0, lsl #3
   1416c:	andeq	r4, r1, r0, lsl #3
   14170:	andeq	r4, r1, r0, asr #3
   14174:	ldrdeq	r4, [r1], -r0
   14178:	andeq	r4, r1, r0, asr #3
   1417c:	andeq	r4, r1, r0, lsr #3
   14180:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14184:	cmp	r0, #0
   14188:	beq	14464 <__mempcpy_chk@plt+0x347c>
   1418c:	ldr	r0, [fp, #16]
   14190:	cmp	r0, #0
   14194:	mov	r0, r5
   14198:	bne	14474 <__mempcpy_chk@plt+0x348c>
   1419c:	b	14494 <__mempcpy_chk@plt+0x34ac>
   141a0:	mov	r4, #0
   141a4:	cmp	r7, #0
   141a8:	beq	143cc <__mempcpy_chk@plt+0x33e4>
   141ac:	mov	r8, #0
   141b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   141b4:	cmp	r0, #0
   141b8:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   141bc:	b	14464 <__mempcpy_chk@plt+0x347c>
   141c0:	mov	r4, #0
   141c4:	cmn	lr, #1
   141c8:	beq	143a4 <__mempcpy_chk@plt+0x33bc>
   141cc:	cmp	r7, #0
   141d0:	bne	141ac <__mempcpy_chk@plt+0x31c4>
   141d4:	cmp	lr, #1
   141d8:	beq	143cc <__mempcpy_chk@plt+0x33e4>
   141dc:	b	141ac <__mempcpy_chk@plt+0x31c4>
   141e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   141e4:	cmp	r0, #2
   141e8:	bne	143fc <__mempcpy_chk@plt+0x3414>
   141ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   141f0:	tst	r0, #1
   141f4:	bne	14c5c <__mempcpy_chk@plt+0x3c74>
   141f8:	mov	r8, #0
   141fc:	mov	r0, #92	; 0x5c
   14200:	mov	r4, #0
   14204:	cmp	r8, #0
   14208:	beq	1441c <__mempcpy_chk@plt+0x3434>
   1420c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14210:	b	14510 <__mempcpy_chk@plt+0x3528>
   14214:	mov	r0, #102	; 0x66
   14218:	b	14450 <__mempcpy_chk@plt+0x3468>
   1421c:	mov	r2, #116	; 0x74
   14220:	ldr	r0, [sp, #60]	; 0x3c
   14224:	tst	r0, #1
   14228:	mov	r0, r2
   1422c:	bne	14450 <__mempcpy_chk@plt+0x3468>
   14230:	b	14c5c <__mempcpy_chk@plt+0x3c74>
   14234:	mov	r0, #98	; 0x62
   14238:	b	14450 <__mempcpy_chk@plt+0x3468>
   1423c:	mov	r2, #114	; 0x72
   14240:	ldr	r0, [sp, #60]	; 0x3c
   14244:	tst	r0, #1
   14248:	mov	r0, r2
   1424c:	bne	14450 <__mempcpy_chk@plt+0x3468>
   14250:	b	14c5c <__mempcpy_chk@plt+0x3c74>
   14254:	ldr	r0, [sp, #80]	; 0x50
   14258:	tst	r0, #1
   1425c:	beq	14538 <__mempcpy_chk@plt+0x3550>
   14260:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14264:	tst	r0, #1
   14268:	bne	14d84 <__mempcpy_chk@plt+0x3d9c>
   1426c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14270:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14274:	cmp	r0, #2
   14278:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1427c:	movwne	r0, #1
   14280:	orr	r0, r0, r2
   14284:	tst	r0, #1
   14288:	beq	14830 <__mempcpy_chk@plt+0x3848>
   1428c:	mov	r0, r9
   14290:	b	14864 <__mempcpy_chk@plt+0x387c>
   14294:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14298:	mov	r8, #0
   1429c:	mov	r5, #63	; 0x3f
   142a0:	cmp	r0, #5
   142a4:	beq	146ec <__mempcpy_chk@plt+0x3704>
   142a8:	cmp	r0, #2
   142ac:	bne	1479c <__mempcpy_chk@plt+0x37b4>
   142b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   142b4:	tst	r0, #1
   142b8:	bne	14c5c <__mempcpy_chk@plt+0x3c74>
   142bc:	mov	r4, #0
   142c0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   142c4:	cmp	r0, #0
   142c8:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   142cc:	b	14464 <__mempcpy_chk@plt+0x347c>
   142d0:	mov	r0, #118	; 0x76
   142d4:	b	14450 <__mempcpy_chk@plt+0x3468>
   142d8:	mov	r0, #1
   142dc:	mov	r5, #39	; 0x27
   142e0:	str	r0, [sp, #52]	; 0x34
   142e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   142e8:	cmp	r0, #2
   142ec:	bne	14360 <__mempcpy_chk@plt+0x3378>
   142f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   142f4:	tst	r0, #1
   142f8:	bne	14c5c <__mempcpy_chk@plt+0x3c74>
   142fc:	ldr	r2, [sp, #48]	; 0x30
   14300:	clz	r1, sl
   14304:	mov	r8, #0
   14308:	lsr	r1, r1, #5
   1430c:	cmp	r2, #0
   14310:	mov	r0, r2
   14314:	movwne	r0, #1
   14318:	orrs	r0, r0, r1
   1431c:	moveq	r2, sl
   14320:	moveq	sl, r0
   14324:	cmp	r9, sl
   14328:	str	r2, [sp, #48]	; 0x30
   1432c:	movcc	r0, #39	; 0x27
   14330:	strbcc	r0, [r6, r9]
   14334:	add	r0, r9, #1
   14338:	cmp	r0, sl
   1433c:	movcc	r1, #92	; 0x5c
   14340:	strbcc	r1, [r6, r0]
   14344:	add	r0, r9, #2
   14348:	add	r9, r9, #3
   1434c:	cmp	r0, sl
   14350:	movcc	r1, #39	; 0x27
   14354:	strbcc	r1, [r6, r0]
   14358:	mov	r0, #0
   1435c:	str	r0, [fp, #-48]	; 0xffffffd0
   14360:	mov	r4, #1
   14364:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14368:	cmp	r0, #0
   1436c:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   14370:	b	14464 <__mempcpy_chk@plt+0x347c>
   14374:	ldr	r0, [sp, #32]
   14378:	cmp	r0, #1
   1437c:	bne	14568 <__mempcpy_chk@plt+0x3580>
   14380:	str	lr, [sp, #84]	; 0x54
   14384:	bl	10eec <__ctype_b_loc@plt>
   14388:	ldr	r0, [r0]
   1438c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14390:	mov	r1, #1
   14394:	add	r0, r0, r5, lsl #1
   14398:	ldrb	r0, [r0, #1]
   1439c:	ubfx	r4, r0, #6, #1
   143a0:	b	14960 <__mempcpy_chk@plt+0x3978>
   143a4:	cmp	r7, #0
   143a8:	ldrbeq	r0, [ip, #1]
   143ac:	cmpeq	r0, #0
   143b0:	beq	143cc <__mempcpy_chk@plt+0x33e4>
   143b4:	mvn	lr, #0
   143b8:	mov	r8, #0
   143bc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   143c0:	cmp	r0, #0
   143c4:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   143c8:	b	14464 <__mempcpy_chk@plt+0x347c>
   143cc:	mov	r1, #1
   143d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   143d4:	cmp	r0, #2
   143d8:	bne	143e8 <__mempcpy_chk@plt+0x3400>
   143dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   143e0:	tst	r0, #1
   143e4:	bne	14c5c <__mempcpy_chk@plt+0x3c74>
   143e8:	mov	r4, r1
   143ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   143f0:	cmp	r0, #0
   143f4:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   143f8:	b	14464 <__mempcpy_chk@plt+0x347c>
   143fc:	ldr	r1, [sp, #40]	; 0x28
   14400:	mov	r8, #0
   14404:	mov	r0, #92	; 0x5c
   14408:	cmp	r1, #0
   1440c:	beq	14450 <__mempcpy_chk@plt+0x3468>
   14410:	mov	r4, #0
   14414:	cmp	r8, #0
   14418:	bne	1420c <__mempcpy_chk@plt+0x3224>
   1441c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14420:	tst	r2, #1
   14424:	beq	14510 <__mempcpy_chk@plt+0x3528>
   14428:	cmp	r9, sl
   1442c:	movcc	r1, #39	; 0x27
   14430:	strbcc	r1, [r6, r9]
   14434:	add	r1, r9, #1
   14438:	add	r9, r9, #2
   1443c:	cmp	r1, sl
   14440:	movcc	r2, #39	; 0x27
   14444:	strbcc	r2, [r6, r1]
   14448:	mov	r2, #0
   1444c:	b	14510 <__mempcpy_chk@plt+0x3528>
   14450:	ldr	r1, [sp, #80]	; 0x50
   14454:	mov	r4, #0
   14458:	mov	r8, #0
   1445c:	tst	r1, #1
   14460:	bne	144a0 <__mempcpy_chk@plt+0x34b8>
   14464:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14468:	cmp	r0, #0
   1446c:	mov	r0, r5
   14470:	beq	14494 <__mempcpy_chk@plt+0x34ac>
   14474:	ldr	r1, [fp, #16]
   14478:	ubfx	r0, r5, #5, #3
   1447c:	mov	r2, #1
   14480:	ldr	r0, [r1, r0, lsl #2]
   14484:	and	r1, r5, #31
   14488:	tst	r0, r2, lsl r1
   1448c:	mov	r0, r5
   14490:	bne	144a0 <__mempcpy_chk@plt+0x34b8>
   14494:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14498:	cmp	r1, #0
   1449c:	beq	148f8 <__mempcpy_chk@plt+0x3910>
   144a0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   144a4:	tst	r1, #1
   144a8:	bne	14c3c <__mempcpy_chk@plt+0x3c54>
   144ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   144b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   144b4:	cmp	r1, #2
   144b8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   144bc:	movwne	r1, #1
   144c0:	orr	r1, r1, r2
   144c4:	tst	r1, #1
   144c8:	bne	14500 <__mempcpy_chk@plt+0x3518>
   144cc:	cmp	r9, sl
   144d0:	movcc	r1, #39	; 0x27
   144d4:	strbcc	r1, [r6, r9]
   144d8:	add	r1, r9, #1
   144dc:	cmp	r1, sl
   144e0:	movcc	r2, #36	; 0x24
   144e4:	strbcc	r2, [r6, r1]
   144e8:	add	r1, r9, #2
   144ec:	add	r9, r9, #3
   144f0:	cmp	r1, sl
   144f4:	movcc	r2, #39	; 0x27
   144f8:	strbcc	r2, [r6, r1]
   144fc:	mov	r2, #1
   14500:	cmp	r9, sl
   14504:	movcc	r1, #92	; 0x5c
   14508:	strbcc	r1, [r6, r9]
   1450c:	add	r9, r9, #1
   14510:	cmp	r9, sl
   14514:	add	r7, r7, #1
   14518:	strbcc	r0, [r6, r9]
   1451c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14520:	add	r9, r9, #1
   14524:	and	r0, r0, r4
   14528:	mov	r4, r0
   1452c:	cmn	lr, #1
   14530:	bne	13ea4 <__mempcpy_chk@plt+0x2ebc>
   14534:	b	13eb0 <__mempcpy_chk@plt+0x2ec8>
   14538:	ldr	r0, [sp, #28]
   1453c:	mov	r4, #0
   14540:	mov	r8, #0
   14544:	mov	r5, #0
   14548:	cmp	r0, #0
   1454c:	beq	14464 <__mempcpy_chk@plt+0x347c>
   14550:	ldr	r4, [fp, #-52]	; 0xffffffcc
   14554:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14558:	add	r7, r7, #1
   1455c:	cmn	lr, #1
   14560:	bne	13ea4 <__mempcpy_chk@plt+0x2ebc>
   14564:	b	13eb0 <__mempcpy_chk@plt+0x2ec8>
   14568:	mov	r0, #0
   1456c:	cmn	lr, #1
   14570:	str	r0, [fp, #-36]	; 0xffffffdc
   14574:	str	r0, [fp, #-40]	; 0xffffffd8
   14578:	bne	1458c <__mempcpy_chk@plt+0x35a4>
   1457c:	mov	r0, ip
   14580:	bl	10f10 <strlen@plt>
   14584:	ldr	ip, [fp, #-84]	; 0xffffffac
   14588:	mov	lr, r0
   1458c:	ldr	r0, [sp, #36]	; 0x24
   14590:	str	sl, [sp, #56]	; 0x38
   14594:	str	lr, [sp, #84]	; 0x54
   14598:	cmp	r0, #0
   1459c:	beq	147b4 <__mempcpy_chk@plt+0x37cc>
   145a0:	add	r0, ip, r7
   145a4:	mov	r4, #1
   145a8:	mov	r6, #0
   145ac:	sub	sl, fp, #40	; 0x28
   145b0:	str	r0, [sp, #20]
   145b4:	str	r6, [sp, #64]	; 0x40
   145b8:	add	r6, r6, r7
   145bc:	sub	r0, fp, #44	; 0x2c
   145c0:	mov	r3, sl
   145c4:	add	r1, ip, r6
   145c8:	sub	r2, lr, r6
   145cc:	bl	168f8 <__mempcpy_chk@plt+0x5910>
   145d0:	cmn	r0, #2
   145d4:	beq	14910 <__mempcpy_chk@plt+0x3928>
   145d8:	ldr	sl, [sp, #56]	; 0x38
   145dc:	cmn	r0, #1
   145e0:	beq	14904 <__mempcpy_chk@plt+0x391c>
   145e4:	cmp	r0, #0
   145e8:	beq	14908 <__mempcpy_chk@plt+0x3920>
   145ec:	cmp	r0, #2
   145f0:	bcc	146b0 <__mempcpy_chk@plt+0x36c8>
   145f4:	ldr	r1, [sp, #64]	; 0x40
   145f8:	ldr	r2, [sp, #20]
   145fc:	add	r1, r2, r1
   14600:	mov	r2, #1
   14604:	ldrb	r3, [r1, r2]
   14608:	sub	r3, r3, #91	; 0x5b
   1460c:	cmp	r3, #33	; 0x21
   14610:	bhi	146a4 <__mempcpy_chk@plt+0x36bc>
   14614:	add	r6, pc, #0
   14618:	ldr	pc, [r6, r3, lsl #2]
   1461c:	andeq	r4, r1, r8, ror #24
   14620:	andeq	r4, r1, r8, ror #24
   14624:	andeq	r4, r1, r4, lsr #13
   14628:	andeq	r4, r1, r8, ror #24
   1462c:	andeq	r4, r1, r4, lsr #13
   14630:	andeq	r4, r1, r8, ror #24
   14634:	andeq	r4, r1, r4, lsr #13
   14638:	andeq	r4, r1, r4, lsr #13
   1463c:	andeq	r4, r1, r4, lsr #13
   14640:	andeq	r4, r1, r4, lsr #13
   14644:	andeq	r4, r1, r4, lsr #13
   14648:	andeq	r4, r1, r4, lsr #13
   1464c:	andeq	r4, r1, r4, lsr #13
   14650:	andeq	r4, r1, r4, lsr #13
   14654:	andeq	r4, r1, r4, lsr #13
   14658:	andeq	r4, r1, r4, lsr #13
   1465c:	andeq	r4, r1, r4, lsr #13
   14660:	andeq	r4, r1, r4, lsr #13
   14664:	andeq	r4, r1, r4, lsr #13
   14668:	andeq	r4, r1, r4, lsr #13
   1466c:	andeq	r4, r1, r4, lsr #13
   14670:	andeq	r4, r1, r4, lsr #13
   14674:	andeq	r4, r1, r4, lsr #13
   14678:	andeq	r4, r1, r4, lsr #13
   1467c:	andeq	r4, r1, r4, lsr #13
   14680:	andeq	r4, r1, r4, lsr #13
   14684:	andeq	r4, r1, r4, lsr #13
   14688:	andeq	r4, r1, r4, lsr #13
   1468c:	andeq	r4, r1, r4, lsr #13
   14690:	andeq	r4, r1, r4, lsr #13
   14694:	andeq	r4, r1, r4, lsr #13
   14698:	andeq	r4, r1, r4, lsr #13
   1469c:	andeq	r4, r1, r4, lsr #13
   146a0:	andeq	r4, r1, r8, ror #24
   146a4:	add	r2, r2, #1
   146a8:	cmp	r2, r0
   146ac:	bcc	14604 <__mempcpy_chk@plt+0x361c>
   146b0:	ldr	r6, [sp, #64]	; 0x40
   146b4:	add	r6, r0, r6
   146b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146bc:	bl	10e50 <iswprint@plt>
   146c0:	cmp	r0, #0
   146c4:	sub	sl, fp, #40	; 0x28
   146c8:	movwne	r0, #1
   146cc:	and	r4, r4, r0
   146d0:	mov	r0, sl
   146d4:	bl	10e08 <mbsinit@plt>
   146d8:	ldr	ip, [fp, #-84]	; 0xffffffac
   146dc:	ldr	lr, [sp, #84]	; 0x54
   146e0:	cmp	r0, #0
   146e4:	beq	145b4 <__mempcpy_chk@plt+0x35cc>
   146e8:	b	14954 <__mempcpy_chk@plt+0x396c>
   146ec:	ldr	r0, [sp, #24]
   146f0:	cmp	r0, #0
   146f4:	beq	1479c <__mempcpy_chk@plt+0x37b4>
   146f8:	add	r0, r7, #2
   146fc:	cmp	r0, lr
   14700:	bcs	1479c <__mempcpy_chk@plt+0x37b4>
   14704:	add	r1, ip, r7
   14708:	ldrb	r1, [r1, #1]
   1470c:	cmp	r1, #63	; 0x3f
   14710:	bne	1479c <__mempcpy_chk@plt+0x37b4>
   14714:	ldrb	r5, [ip, r0]
   14718:	sub	r1, r5, #33	; 0x21
   1471c:	cmp	r1, #29
   14720:	bhi	1479c <__mempcpy_chk@plt+0x37b4>
   14724:	movw	r3, #20929	; 0x51c1
   14728:	mov	r2, #1
   1472c:	movt	r3, #14336	; 0x3800
   14730:	tst	r3, r2, lsl r1
   14734:	beq	1479c <__mempcpy_chk@plt+0x37b4>
   14738:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1473c:	tst	r1, #1
   14740:	bne	14d8c <__mempcpy_chk@plt+0x3da4>
   14744:	cmp	r9, sl
   14748:	mov	r7, r0
   1474c:	mov	r4, #0
   14750:	movcc	r1, #63	; 0x3f
   14754:	strbcc	r1, [r6, r9]
   14758:	add	r1, r9, #1
   1475c:	cmp	r1, sl
   14760:	movcc	r2, #34	; 0x22
   14764:	strbcc	r2, [r6, r1]
   14768:	add	r1, r9, #2
   1476c:	cmp	r1, sl
   14770:	movcc	r2, #34	; 0x22
   14774:	strbcc	r2, [r6, r1]
   14778:	add	r1, r9, #3
   1477c:	add	r9, r9, #4
   14780:	cmp	r1, sl
   14784:	movcc	r2, #63	; 0x3f
   14788:	strbcc	r2, [r6, r1]
   1478c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14790:	cmp	r0, #0
   14794:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   14798:	b	14464 <__mempcpy_chk@plt+0x347c>
   1479c:	mov	r5, #63	; 0x3f
   147a0:	mov	r4, #0
   147a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   147a8:	cmp	r0, #0
   147ac:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   147b0:	b	14464 <__mempcpy_chk@plt+0x347c>
   147b4:	mov	r4, #1
   147b8:	mov	r6, #0
   147bc:	sub	sl, fp, #40	; 0x28
   147c0:	str	r6, [sp, #64]	; 0x40
   147c4:	add	r6, r6, r7
   147c8:	sub	r0, fp, #44	; 0x2c
   147cc:	mov	r3, sl
   147d0:	add	r1, ip, r6
   147d4:	sub	r2, lr, r6
   147d8:	bl	168f8 <__mempcpy_chk@plt+0x5910>
   147dc:	cmn	r0, #2
   147e0:	beq	14910 <__mempcpy_chk@plt+0x3928>
   147e4:	cmn	r0, #1
   147e8:	beq	14904 <__mempcpy_chk@plt+0x391c>
   147ec:	ldr	r6, [sp, #64]	; 0x40
   147f0:	cmp	r0, #0
   147f4:	beq	14950 <__mempcpy_chk@plt+0x3968>
   147f8:	add	r6, r0, r6
   147fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14800:	bl	10e50 <iswprint@plt>
   14804:	cmp	r0, #0
   14808:	sub	sl, fp, #40	; 0x28
   1480c:	movwne	r0, #1
   14810:	and	r4, r4, r0
   14814:	mov	r0, sl
   14818:	bl	10e08 <mbsinit@plt>
   1481c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14820:	ldr	lr, [sp, #84]	; 0x54
   14824:	cmp	r0, #0
   14828:	beq	147c0 <__mempcpy_chk@plt+0x37d8>
   1482c:	b	14954 <__mempcpy_chk@plt+0x396c>
   14830:	cmp	r9, sl
   14834:	mov	r2, #1
   14838:	movcc	r0, #39	; 0x27
   1483c:	strbcc	r0, [r6, r9]
   14840:	add	r0, r9, #1
   14844:	cmp	r0, sl
   14848:	movcc	r1, #36	; 0x24
   1484c:	strbcc	r1, [r6, r0]
   14850:	add	r0, r9, #2
   14854:	cmp	r0, sl
   14858:	movcc	r1, #39	; 0x27
   1485c:	strbcc	r1, [r6, r0]
   14860:	add	r0, r9, #3
   14864:	cmp	r0, sl
   14868:	add	r9, r0, #1
   1486c:	str	r2, [fp, #-48]	; 0xffffffd0
   14870:	movcc	r1, #92	; 0x5c
   14874:	strbcc	r1, [r6, r0]
   14878:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1487c:	cmp	r1, #2
   14880:	beq	148e0 <__mempcpy_chk@plt+0x38f8>
   14884:	add	r1, r7, #1
   14888:	mov	r4, #0
   1488c:	mov	r8, #1
   14890:	mov	r5, #48	; 0x30
   14894:	cmp	r1, lr
   14898:	bcs	14180 <__mempcpy_chk@plt+0x3198>
   1489c:	ldrb	r1, [ip, r1]
   148a0:	sub	r1, r1, #48	; 0x30
   148a4:	uxtb	r1, r1
   148a8:	cmp	r1, #9
   148ac:	bhi	14180 <__mempcpy_chk@plt+0x3198>
   148b0:	cmp	r9, sl
   148b4:	movcc	r1, #48	; 0x30
   148b8:	strbcc	r1, [r6, r9]
   148bc:	add	r1, r0, #2
   148c0:	add	r9, r0, #3
   148c4:	cmp	r1, sl
   148c8:	movcc	r2, #48	; 0x30
   148cc:	strbcc	r2, [r6, r1]
   148d0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   148d4:	cmp	r0, #0
   148d8:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   148dc:	b	14464 <__mempcpy_chk@plt+0x347c>
   148e0:	mov	r0, #48	; 0x30
   148e4:	mov	r8, #1
   148e8:	mov	r4, #0
   148ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   148f0:	cmp	r1, #0
   148f4:	bne	144a0 <__mempcpy_chk@plt+0x34b8>
   148f8:	cmp	r8, #0
   148fc:	beq	1441c <__mempcpy_chk@plt+0x3434>
   14900:	b	1420c <__mempcpy_chk@plt+0x3224>
   14904:	mov	r4, #0
   14908:	ldr	ip, [fp, #-84]	; 0xffffffac
   1490c:	b	14948 <__mempcpy_chk@plt+0x3960>
   14910:	ldr	r1, [sp, #84]	; 0x54
   14914:	ldr	ip, [fp, #-84]	; 0xffffffac
   14918:	mov	r4, #0
   1491c:	cmp	r6, r1
   14920:	bcs	14948 <__mempcpy_chk@plt+0x3960>
   14924:	ldrb	r0, [ip, r6]
   14928:	cmp	r0, #0
   1492c:	beq	14948 <__mempcpy_chk@plt+0x3960>
   14930:	ldr	r0, [sp, #64]	; 0x40
   14934:	add	r0, r0, #1
   14938:	add	r6, r0, r7
   1493c:	str	r0, [sp, #64]	; 0x40
   14940:	cmp	r6, r1
   14944:	bcc	14924 <__mempcpy_chk@plt+0x393c>
   14948:	ldr	r6, [sp, #64]	; 0x40
   1494c:	b	14954 <__mempcpy_chk@plt+0x396c>
   14950:	ldr	ip, [fp, #-84]	; 0xffffffac
   14954:	mov	r1, r6
   14958:	ldr	r6, [sp, #76]	; 0x4c
   1495c:	ldr	sl, [sp, #56]	; 0x38
   14960:	ldr	r0, [sp, #44]	; 0x2c
   14964:	cmp	r1, #1
   14968:	orr	r2, r4, r0
   1496c:	mov	r0, r1
   14970:	bhi	14990 <__mempcpy_chk@plt+0x39a8>
   14974:	tst	r2, #1
   14978:	beq	14990 <__mempcpy_chk@plt+0x39a8>
   1497c:	ldr	lr, [sp, #84]	; 0x54
   14980:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14984:	cmp	r0, #0
   14988:	bne	1418c <__mempcpy_chk@plt+0x31a4>
   1498c:	b	14464 <__mempcpy_chk@plt+0x347c>
   14990:	str	r2, [sp, #64]	; 0x40
   14994:	add	r0, r0, r7
   14998:	add	r1, r7, #1
   1499c:	ldr	lr, [sp, #84]	; 0x54
   149a0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   149a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   149a8:	mov	r3, #0
   149ac:	str	r0, [sp, #56]	; 0x38
   149b0:	ldr	r0, [sp, #64]	; 0x40
   149b4:	tst	r0, #1
   149b8:	bne	14aa0 <__mempcpy_chk@plt+0x3ab8>
   149bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   149c0:	tst	r0, #1
   149c4:	bne	14c40 <__mempcpy_chk@plt+0x3c58>
   149c8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   149cc:	cmp	r7, #2
   149d0:	movwne	r3, #1
   149d4:	orr	r3, r3, r2
   149d8:	tst	r3, #1
   149dc:	bne	14a14 <__mempcpy_chk@plt+0x3a2c>
   149e0:	cmp	r9, sl
   149e4:	add	r3, r9, #1
   149e8:	movcc	r2, #39	; 0x27
   149ec:	strbcc	r2, [r6, r9]
   149f0:	cmp	r3, sl
   149f4:	movcc	r2, #36	; 0x24
   149f8:	strbcc	r2, [r6, r3]
   149fc:	add	r3, r9, #2
   14a00:	add	r9, r9, #3
   14a04:	cmp	r3, sl
   14a08:	movcc	r2, #39	; 0x27
   14a0c:	strbcc	r2, [r6, r3]
   14a10:	mov	r2, #1
   14a14:	cmp	r9, sl
   14a18:	mov	r0, r2
   14a1c:	movcc	r3, #92	; 0x5c
   14a20:	strbcc	r3, [r6, r9]
   14a24:	add	r3, r9, #1
   14a28:	cmp	r3, sl
   14a2c:	andcc	r7, r5, #192	; 0xc0
   14a30:	movcc	r2, #48	; 0x30
   14a34:	orrcc	r7, r2, r7, lsr #6
   14a38:	strbcc	r7, [r6, r3]
   14a3c:	add	r3, r9, #2
   14a40:	add	r9, r9, #3
   14a44:	cmp	r3, sl
   14a48:	lsrcc	r7, r5, #3
   14a4c:	movcc	r2, #6
   14a50:	bficc	r7, r2, #3, #29
   14a54:	mov	r2, #6
   14a58:	strbcc	r7, [r6, r3]
   14a5c:	bfi	r5, r2, #3, #29
   14a60:	mov	r3, #1
   14a64:	mov	r2, r0
   14a68:	ldr	r0, [sp, #56]	; 0x38
   14a6c:	and	r8, r3, #1
   14a70:	cmp	r0, r1
   14a74:	bhi	14ad4 <__mempcpy_chk@plt+0x3aec>
   14a78:	b	14b14 <__mempcpy_chk@plt+0x3b2c>
   14a7c:	cmp	r9, sl
   14a80:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14a84:	strbcc	r5, [r6, r9]
   14a88:	add	r9, r9, #1
   14a8c:	ldrb	r5, [ip, r1]
   14a90:	add	r1, r1, #1
   14a94:	ldr	r0, [sp, #64]	; 0x40
   14a98:	tst	r0, #1
   14a9c:	beq	149bc <__mempcpy_chk@plt+0x39d4>
   14aa0:	ldr	r7, [fp, #-56]	; 0xffffffc8
   14aa4:	tst	r7, #1
   14aa8:	beq	14abc <__mempcpy_chk@plt+0x3ad4>
   14aac:	cmp	r9, sl
   14ab0:	movcc	r7, #92	; 0x5c
   14ab4:	strbcc	r7, [r6, r9]
   14ab8:	add	r9, r9, #1
   14abc:	mov	r7, #0
   14ac0:	str	r7, [fp, #-56]	; 0xffffffc8
   14ac4:	ldr	r0, [sp, #56]	; 0x38
   14ac8:	and	r8, r3, #1
   14acc:	cmp	r0, r1
   14ad0:	bls	14b14 <__mempcpy_chk@plt+0x3b2c>
   14ad4:	cmp	r8, #0
   14ad8:	mvn	r7, r2
   14adc:	movwne	r8, #1
   14ae0:	orr	r7, r7, r8
   14ae4:	tst	r7, #1
   14ae8:	bne	14a7c <__mempcpy_chk@plt+0x3a94>
   14aec:	cmp	r9, sl
   14af0:	movcc	r7, #39	; 0x27
   14af4:	strbcc	r7, [r6, r9]
   14af8:	add	r7, r9, #1
   14afc:	add	r9, r9, #2
   14b00:	cmp	r7, sl
   14b04:	movcc	r2, #39	; 0x27
   14b08:	strbcc	r2, [r6, r7]
   14b0c:	mov	r2, #0
   14b10:	b	14a7c <__mempcpy_chk@plt+0x3a94>
   14b14:	cmp	r8, #0
   14b18:	sub	r7, r1, #1
   14b1c:	mov	r0, r5
   14b20:	str	r2, [fp, #-48]	; 0xffffffd0
   14b24:	movwne	r8, #1
   14b28:	cmp	r8, #0
   14b2c:	beq	1441c <__mempcpy_chk@plt+0x3434>
   14b30:	b	1420c <__mempcpy_chk@plt+0x3224>
   14b34:	mov	lr, r7
   14b38:	b	14b40 <__mempcpy_chk@plt+0x3b58>
   14b3c:	mvn	lr, #0
   14b40:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14b44:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14b48:	eor	r0, r7, #2
   14b4c:	orr	r0, r0, r9
   14b50:	clz	r0, r0
   14b54:	lsr	r0, r0, #5
   14b58:	tst	r1, r0
   14b5c:	bne	14c5c <__mempcpy_chk@plt+0x3c74>
   14b60:	mov	r0, r1
   14b64:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14b68:	cmp	r7, #2
   14b6c:	movwne	r1, #1
   14b70:	orr	r0, r0, r1
   14b74:	tst	r0, #1
   14b78:	ldreq	r0, [sp, #52]	; 0x34
   14b7c:	streq	lr, [sp, #84]	; 0x54
   14b80:	eoreq	r0, r0, #1
   14b84:	tsteq	r0, #1
   14b88:	bne	14d20 <__mempcpy_chk@plt+0x3d38>
   14b8c:	tst	r4, #1
   14b90:	bne	14cdc <__mempcpy_chk@plt+0x3cf4>
   14b94:	ldr	r6, [sp, #48]	; 0x30
   14b98:	mov	r8, #0
   14b9c:	cmp	r6, #0
   14ba0:	beq	14d18 <__mempcpy_chk@plt+0x3d30>
   14ba4:	ldr	r0, [sp, #80]	; 0x50
   14ba8:	mov	r1, #0
   14bac:	cmp	sl, #0
   14bb0:	mov	r4, #0
   14bb4:	str	r1, [fp, #-72]	; 0xffffffb8
   14bb8:	beq	13aac <__mempcpy_chk@plt+0x2ac4>
   14bbc:	b	14d20 <__mempcpy_chk@plt+0x3d38>
   14bc0:	ldrb	r1, [r0, #3]
   14bc4:	cmp	r1, #56	; 0x38
   14bc8:	ldrbeq	r1, [r0, #4]
   14bcc:	cmpeq	r1, #48	; 0x30
   14bd0:	bne	13ca4 <__mempcpy_chk@plt+0x2cbc>
   14bd4:	ldrb	r1, [r0, #5]
   14bd8:	cmp	r1, #51	; 0x33
   14bdc:	ldrbeq	r1, [r0, #6]
   14be0:	cmpeq	r1, #48	; 0x30
   14be4:	bne	13ca4 <__mempcpy_chk@plt+0x2cbc>
   14be8:	ldrb	r0, [r0, #7]
   14bec:	cmp	r0, #0
   14bf0:	movw	r0, #30100	; 0x7594
   14bf4:	movt	r0, #1
   14bf8:	str	r0, [sp, #68]	; 0x44
   14bfc:	bne	13ca4 <__mempcpy_chk@plt+0x2cbc>
   14c00:	b	13cc0 <__mempcpy_chk@plt+0x2cd8>
   14c04:	ldrb	r1, [r0, #4]
   14c08:	cmp	r1, #48	; 0x30
   14c0c:	ldrbeq	r1, [r0, #5]
   14c10:	cmpeq	r1, #51	; 0x33
   14c14:	bne	13d88 <__mempcpy_chk@plt+0x2da0>
   14c18:	ldrb	r1, [r0, #6]
   14c1c:	cmp	r1, #48	; 0x30
   14c20:	ldrbeq	r0, [r0, #7]
   14c24:	cmpeq	r0, #0
   14c28:	bne	13d88 <__mempcpy_chk@plt+0x2da0>
   14c2c:	movw	r0, #30104	; 0x7598
   14c30:	movt	r0, #1
   14c34:	str	r0, [sp, #72]	; 0x48
   14c38:	b	13da8 <__mempcpy_chk@plt+0x2dc0>
   14c3c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14c40:	ldr	r2, [sp, #80]	; 0x50
   14c44:	b	14c7c <__mempcpy_chk@plt+0x3c94>
   14c48:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c4c:	mov	r2, #1
   14c50:	mov	lr, r4
   14c54:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14c58:	b	14c7c <__mempcpy_chk@plt+0x3c94>
   14c5c:	ldr	r2, [sp, #80]	; 0x50
   14c60:	mov	r7, #2
   14c64:	b	14c7c <__mempcpy_chk@plt+0x3c94>
   14c68:	ldr	r6, [sp, #76]	; 0x4c
   14c6c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c70:	ldr	lr, [sp, #84]	; 0x54
   14c74:	ldr	r2, [sp, #80]	; 0x50
   14c78:	mov	r7, #2
   14c7c:	mov	r0, #0
   14c80:	ldr	r1, [fp, #12]
   14c84:	tst	r2, #1
   14c88:	mov	r2, r7
   14c8c:	mov	r3, lr
   14c90:	str	r0, [sp, #8]
   14c94:	ldr	r0, [sp, #68]	; 0x44
   14c98:	movwne	r2, #4
   14c9c:	cmp	r7, #2
   14ca0:	movne	r2, r7
   14ca4:	str	r2, [sp]
   14ca8:	mov	r2, ip
   14cac:	bic	r1, r1, #2
   14cb0:	str	r0, [sp, #12]
   14cb4:	ldr	r0, [sp, #72]	; 0x48
   14cb8:	str	r1, [sp, #4]
   14cbc:	mov	r1, sl
   14cc0:	str	r0, [sp, #16]
   14cc4:	mov	r0, r6
   14cc8:	bl	13a30 <__mempcpy_chk@plt+0x2a48>
   14ccc:	mov	r9, r0
   14cd0:	mov	r0, r9
   14cd4:	sub	sp, fp, #28
   14cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cdc:	mov	r0, #5
   14ce0:	ldr	r1, [sp, #48]	; 0x30
   14ce4:	ldr	r2, [fp, #-84]	; 0xffffffac
   14ce8:	ldr	r3, [sp, #84]	; 0x54
   14cec:	str	r0, [sp]
   14cf0:	ldr	r0, [fp, #12]
   14cf4:	str	r0, [sp, #4]
   14cf8:	ldr	r0, [fp, #16]
   14cfc:	str	r0, [sp, #8]
   14d00:	ldr	r0, [sp, #68]	; 0x44
   14d04:	str	r0, [sp, #12]
   14d08:	ldr	r0, [sp, #72]	; 0x48
   14d0c:	str	r0, [sp, #16]
   14d10:	ldr	r0, [sp, #76]	; 0x4c
   14d14:	b	14cc8 <__mempcpy_chk@plt+0x3ce0>
   14d18:	mov	r0, #0
   14d1c:	str	r0, [fp, #-72]	; 0xffffffb8
   14d20:	ldr	r1, [sp, #92]	; 0x5c
   14d24:	cmp	r1, #0
   14d28:	beq	14d68 <__mempcpy_chk@plt+0x3d80>
   14d2c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14d30:	ldr	r2, [sp, #76]	; 0x4c
   14d34:	tst	r0, #1
   14d38:	bne	14d6c <__mempcpy_chk@plt+0x3d84>
   14d3c:	ldrb	r0, [r1]
   14d40:	cmp	r0, #0
   14d44:	beq	14d6c <__mempcpy_chk@plt+0x3d84>
   14d48:	add	r1, r1, #1
   14d4c:	cmp	r9, sl
   14d50:	strbcc	r0, [r2, r9]
   14d54:	add	r9, r9, #1
   14d58:	ldrb	r0, [r1], #1
   14d5c:	cmp	r0, #0
   14d60:	bne	14d4c <__mempcpy_chk@plt+0x3d64>
   14d64:	b	14d6c <__mempcpy_chk@plt+0x3d84>
   14d68:	ldr	r2, [sp, #76]	; 0x4c
   14d6c:	cmp	r9, sl
   14d70:	movcc	r0, #0
   14d74:	strbcc	r0, [r2, r9]
   14d78:	mov	r0, r9
   14d7c:	sub	sp, fp, #28
   14d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d84:	mov	r2, #1
   14d88:	b	14c54 <__mempcpy_chk@plt+0x3c6c>
   14d8c:	ldr	r2, [sp, #80]	; 0x50
   14d90:	mov	r7, #5
   14d94:	b	14c7c <__mempcpy_chk@plt+0x3c94>
   14d98:	bl	10fd0 <abort@plt>
   14d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14da0:	add	fp, sp, #28
   14da4:	sub	sp, sp, #28
   14da8:	movw	r5, #33112	; 0x8158
   14dac:	cmp	r2, #0
   14db0:	mov	r4, r1
   14db4:	mov	r7, r0
   14db8:	str	r0, [sp, #20]
   14dbc:	movt	r5, #2
   14dc0:	movne	r5, r2
   14dc4:	bl	10f1c <__errno_location@plt>
   14dc8:	mov	sl, r0
   14dcc:	ldm	r5, {r0, r1}
   14dd0:	ldr	r2, [r5, #40]	; 0x28
   14dd4:	ldr	r3, [r5, #44]	; 0x2c
   14dd8:	add	r9, r5, #8
   14ddc:	ldr	r6, [sl]
   14de0:	orr	r8, r1, #1
   14de4:	mov	r1, #0
   14de8:	str	r6, [sp, #24]
   14dec:	stm	sp, {r0, r8, r9}
   14df0:	str	r2, [sp, #12]
   14df4:	str	r3, [sp, #16]
   14df8:	mov	r0, #0
   14dfc:	mov	r2, r7
   14e00:	mov	r3, r4
   14e04:	mov	r6, r4
   14e08:	bl	13a30 <__mempcpy_chk@plt+0x2a48>
   14e0c:	add	r7, r0, #1
   14e10:	mov	r0, r7
   14e14:	bl	16004 <__mempcpy_chk@plt+0x501c>
   14e18:	mov	r4, r0
   14e1c:	ldr	r0, [r5]
   14e20:	ldr	r2, [r5, #44]	; 0x2c
   14e24:	ldr	r1, [r5, #40]	; 0x28
   14e28:	mov	r3, r6
   14e2c:	stm	sp, {r0, r8, r9}
   14e30:	str	r2, [sp, #16]
   14e34:	str	r1, [sp, #12]
   14e38:	mov	r0, r4
   14e3c:	mov	r1, r7
   14e40:	ldr	r2, [sp, #20]
   14e44:	bl	13a30 <__mempcpy_chk@plt+0x2a48>
   14e48:	ldr	r0, [sp, #24]
   14e4c:	str	r0, [sl]
   14e50:	mov	r0, r4
   14e54:	sub	sp, fp, #28
   14e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e60:	add	fp, sp, #28
   14e64:	sub	sp, sp, #36	; 0x24
   14e68:	movw	r8, #33112	; 0x8158
   14e6c:	cmp	r3, #0
   14e70:	mov	r4, r2
   14e74:	str	r2, [sp, #24]
   14e78:	mov	r5, r1
   14e7c:	mov	r6, r0
   14e80:	str	r0, [sp, #20]
   14e84:	movt	r8, #2
   14e88:	movne	r8, r3
   14e8c:	bl	10f1c <__errno_location@plt>
   14e90:	str	r0, [sp, #28]
   14e94:	cmp	r4, #0
   14e98:	add	sl, r8, #8
   14e9c:	ldm	r8, {r3, r9}
   14ea0:	ldr	r7, [r0]
   14ea4:	ldr	r1, [r8, #40]	; 0x28
   14ea8:	ldr	r2, [r8, #44]	; 0x2c
   14eac:	mov	r0, #0
   14eb0:	orreq	r9, r9, #1
   14eb4:	str	r7, [sp, #32]
   14eb8:	mov	r7, r5
   14ebc:	stm	sp, {r3, r9, sl}
   14ec0:	str	r1, [sp, #12]
   14ec4:	str	r2, [sp, #16]
   14ec8:	mov	r1, #0
   14ecc:	mov	r2, r6
   14ed0:	mov	r3, r5
   14ed4:	bl	13a30 <__mempcpy_chk@plt+0x2a48>
   14ed8:	add	r4, r0, #1
   14edc:	mov	r5, r0
   14ee0:	mov	r0, r4
   14ee4:	bl	16004 <__mempcpy_chk@plt+0x501c>
   14ee8:	mov	r6, r0
   14eec:	ldr	r0, [r8]
   14ef0:	ldr	r2, [r8, #44]	; 0x2c
   14ef4:	ldr	r1, [r8, #40]	; 0x28
   14ef8:	mov	r3, r7
   14efc:	stm	sp, {r0, r9, sl}
   14f00:	str	r2, [sp, #16]
   14f04:	str	r1, [sp, #12]
   14f08:	mov	r0, r6
   14f0c:	mov	r1, r4
   14f10:	ldr	r2, [sp, #20]
   14f14:	bl	13a30 <__mempcpy_chk@plt+0x2a48>
   14f18:	ldr	r0, [sp, #24]
   14f1c:	ldr	r1, [sp, #32]
   14f20:	ldr	r2, [sp, #28]
   14f24:	cmp	r0, #0
   14f28:	str	r1, [r2]
   14f2c:	strne	r5, [r0]
   14f30:	mov	r0, r6
   14f34:	sub	sp, fp, #28
   14f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f3c:	push	{r4, r5, r6, r7, fp, lr}
   14f40:	add	fp, sp, #16
   14f44:	movw	r4, #33056	; 0x8120
   14f48:	movt	r4, #2
   14f4c:	ldrd	r6, [r4]
   14f50:	cmp	r7, #2
   14f54:	blt	14f80 <__mempcpy_chk@plt+0x3f98>
   14f58:	add	r5, r6, #12
   14f5c:	mov	r7, #0
   14f60:	ldr	r0, [r5, r7, lsl #3]
   14f64:	bl	12348 <__mempcpy_chk@plt+0x1360>
   14f68:	ldr	r1, [r4, #4]
   14f6c:	add	r2, r7, #2
   14f70:	add	r0, r7, #1
   14f74:	mov	r7, r0
   14f78:	cmp	r2, r1
   14f7c:	blt	14f60 <__mempcpy_chk@plt+0x3f78>
   14f80:	ldr	r0, [r6, #4]
   14f84:	movw	r5, #33160	; 0x8188
   14f88:	movt	r5, #2
   14f8c:	cmp	r0, r5
   14f90:	beq	14fa4 <__mempcpy_chk@plt+0x3fbc>
   14f94:	bl	12348 <__mempcpy_chk@plt+0x1360>
   14f98:	mov	r0, #256	; 0x100
   14f9c:	str	r0, [r4, #8]
   14fa0:	str	r5, [r4, #12]
   14fa4:	add	r5, r4, #8
   14fa8:	cmp	r6, r5
   14fac:	beq	14fbc <__mempcpy_chk@plt+0x3fd4>
   14fb0:	mov	r0, r6
   14fb4:	bl	12348 <__mempcpy_chk@plt+0x1360>
   14fb8:	str	r5, [r4]
   14fbc:	mov	r0, #1
   14fc0:	str	r0, [r4, #4]
   14fc4:	pop	{r4, r5, r6, r7, fp, pc}
   14fc8:	movw	r3, #33112	; 0x8158
   14fcc:	mvn	r2, #0
   14fd0:	movt	r3, #2
   14fd4:	b	14fd8 <__mempcpy_chk@plt+0x3ff0>
   14fd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fdc:	add	fp, sp, #28
   14fe0:	sub	sp, sp, #44	; 0x2c
   14fe4:	mov	r7, r3
   14fe8:	str	r2, [sp, #36]	; 0x24
   14fec:	str	r1, [sp, #32]
   14ff0:	mov	r5, r0
   14ff4:	bl	10f1c <__errno_location@plt>
   14ff8:	cmp	r5, #0
   14ffc:	blt	15160 <__mempcpy_chk@plt+0x4178>
   15000:	cmn	r5, #-2147483647	; 0x80000001
   15004:	beq	15160 <__mempcpy_chk@plt+0x4178>
   15008:	movw	r8, #33056	; 0x8120
   1500c:	mov	r4, r0
   15010:	movt	r8, #2
   15014:	ldr	r6, [r8]
   15018:	ldr	r1, [r8, #4]
   1501c:	ldr	r0, [r0]
   15020:	str	r4, [sp, #28]
   15024:	cmp	r1, r5
   15028:	str	r0, [sp, #24]
   1502c:	ble	15038 <__mempcpy_chk@plt+0x4050>
   15030:	mov	sl, r6
   15034:	b	1509c <__mempcpy_chk@plt+0x40b4>
   15038:	mov	r0, #8
   1503c:	add	r9, r8, #8
   15040:	add	r2, r5, #1
   15044:	str	r1, [fp, #-32]	; 0xffffffe0
   15048:	mvn	r3, #-2147483648	; 0x80000000
   1504c:	str	r0, [sp]
   15050:	subs	r0, r6, r9
   15054:	sub	r2, r2, r1
   15058:	sub	r1, fp, #32
   1505c:	movne	r0, r6
   15060:	bl	16204 <__mempcpy_chk@plt+0x521c>
   15064:	str	r0, [r8]
   15068:	cmp	r6, r9
   1506c:	mov	sl, r0
   15070:	ldrdeq	r0, [r8, #8]
   15074:	stmeq	sl, {r0, r1}
   15078:	ldr	r1, [r8, #4]
   1507c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15080:	add	r0, sl, r1, lsl #3
   15084:	sub	r1, r2, r1
   15088:	lsl	r2, r1, #3
   1508c:	mov	r1, #0
   15090:	bl	10f34 <memset@plt>
   15094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15098:	str	r0, [r8, #4]
   1509c:	mov	r9, sl
   150a0:	ldr	r6, [r9, r5, lsl #3]!
   150a4:	ldr	r4, [r9, #4]!
   150a8:	ldm	r7, {r0, r1}
   150ac:	ldr	r2, [r7, #40]	; 0x28
   150b0:	ldr	r3, [r7, #44]	; 0x2c
   150b4:	orr	r8, r1, #1
   150b8:	add	r1, r7, #8
   150bc:	stm	sp, {r0, r8}
   150c0:	add	r0, sp, #8
   150c4:	str	r1, [sp, #20]
   150c8:	stm	r0, {r1, r2, r3}
   150cc:	mov	r0, r4
   150d0:	mov	r1, r6
   150d4:	ldr	r2, [sp, #32]
   150d8:	ldr	r3, [sp, #36]	; 0x24
   150dc:	bl	13a30 <__mempcpy_chk@plt+0x2a48>
   150e0:	cmp	r6, r0
   150e4:	bhi	15148 <__mempcpy_chk@plt+0x4160>
   150e8:	add	r6, r0, #1
   150ec:	movw	r0, #33160	; 0x8188
   150f0:	movt	r0, #2
   150f4:	str	r6, [sl, r5, lsl #3]
   150f8:	cmp	r4, r0
   150fc:	beq	15108 <__mempcpy_chk@plt+0x4120>
   15100:	mov	r0, r4
   15104:	bl	12348 <__mempcpy_chk@plt+0x1360>
   15108:	mov	r0, r6
   1510c:	bl	16004 <__mempcpy_chk@plt+0x501c>
   15110:	str	r0, [r9]
   15114:	mov	r4, r0
   15118:	add	r3, sp, #8
   1511c:	ldr	r0, [r7]
   15120:	ldr	r1, [r7, #40]	; 0x28
   15124:	ldr	r2, [r7, #44]	; 0x2c
   15128:	stm	sp, {r0, r8}
   1512c:	ldr	r0, [sp, #20]
   15130:	stm	r3, {r0, r1, r2}
   15134:	mov	r0, r4
   15138:	mov	r1, r6
   1513c:	ldr	r2, [sp, #32]
   15140:	ldr	r3, [sp, #36]	; 0x24
   15144:	bl	13a30 <__mempcpy_chk@plt+0x2a48>
   15148:	ldr	r1, [sp, #24]
   1514c:	ldr	r0, [sp, #28]
   15150:	str	r1, [r0]
   15154:	mov	r0, r4
   15158:	sub	sp, fp, #28
   1515c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15160:	bl	10fd0 <abort@plt>
   15164:	movw	r3, #33112	; 0x8158
   15168:	movt	r3, #2
   1516c:	b	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15170:	movw	r3, #33112	; 0x8158
   15174:	mov	r1, r0
   15178:	mov	r0, #0
   1517c:	mvn	r2, #0
   15180:	movt	r3, #2
   15184:	b	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15188:	movw	r3, #33112	; 0x8158
   1518c:	mov	r2, r1
   15190:	mov	r1, r0
   15194:	mov	r0, #0
   15198:	movt	r3, #2
   1519c:	b	14fd8 <__mempcpy_chk@plt+0x3ff0>
   151a0:	push	{fp, lr}
   151a4:	mov	fp, sp
   151a8:	sub	sp, sp, #48	; 0x30
   151ac:	vmov.i32	q8, #0	; 0x00000000
   151b0:	mov	ip, #32
   151b4:	mov	r3, sp
   151b8:	mov	lr, r2
   151bc:	cmp	r1, #10
   151c0:	add	r2, r3, #16
   151c4:	vst1.64	{d16-d17}, [r3], ip
   151c8:	vst1.64	{d16-d17}, [r3]
   151cc:	vst1.64	{d16-d17}, [r2]
   151d0:	beq	151f0 <__mempcpy_chk@plt+0x4208>
   151d4:	str	r1, [sp]
   151d8:	mov	r3, sp
   151dc:	mov	r1, lr
   151e0:	mvn	r2, #0
   151e4:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   151e8:	mov	sp, fp
   151ec:	pop	{fp, pc}
   151f0:	bl	10fd0 <abort@plt>
   151f4:	push	{r4, sl, fp, lr}
   151f8:	add	fp, sp, #8
   151fc:	sub	sp, sp, #48	; 0x30
   15200:	mov	ip, r3
   15204:	mov	r3, sp
   15208:	vmov.i32	q8, #0	; 0x00000000
   1520c:	mov	lr, #32
   15210:	cmp	r1, #10
   15214:	add	r4, r3, #16
   15218:	vst1.64	{d16-d17}, [r3], lr
   1521c:	vst1.64	{d16-d17}, [r3]
   15220:	vst1.64	{d16-d17}, [r4]
   15224:	beq	15244 <__mempcpy_chk@plt+0x425c>
   15228:	str	r1, [sp]
   1522c:	mov	r1, r2
   15230:	mov	r3, sp
   15234:	mov	r2, ip
   15238:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   1523c:	sub	sp, fp, #8
   15240:	pop	{r4, sl, fp, pc}
   15244:	bl	10fd0 <abort@plt>
   15248:	push	{fp, lr}
   1524c:	mov	fp, sp
   15250:	sub	sp, sp, #48	; 0x30
   15254:	mov	r3, sp
   15258:	vmov.i32	q8, #0	; 0x00000000
   1525c:	mov	ip, #32
   15260:	cmp	r0, #10
   15264:	add	r2, r3, #16
   15268:	vst1.64	{d16-d17}, [r3], ip
   1526c:	vst1.64	{d16-d17}, [r3]
   15270:	vst1.64	{d16-d17}, [r2]
   15274:	beq	15294 <__mempcpy_chk@plt+0x42ac>
   15278:	str	r0, [sp]
   1527c:	mov	r3, sp
   15280:	mov	r0, #0
   15284:	mvn	r2, #0
   15288:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   1528c:	mov	sp, fp
   15290:	pop	{fp, pc}
   15294:	bl	10fd0 <abort@plt>
   15298:	push	{fp, lr}
   1529c:	mov	fp, sp
   152a0:	sub	sp, sp, #48	; 0x30
   152a4:	mov	r3, sp
   152a8:	vmov.i32	q8, #0	; 0x00000000
   152ac:	mov	ip, #32
   152b0:	cmp	r0, #10
   152b4:	add	lr, r3, #16
   152b8:	vst1.64	{d16-d17}, [r3], ip
   152bc:	vst1.64	{d16-d17}, [r3]
   152c0:	vst1.64	{d16-d17}, [lr]
   152c4:	beq	152e0 <__mempcpy_chk@plt+0x42f8>
   152c8:	str	r0, [sp]
   152cc:	mov	r3, sp
   152d0:	mov	r0, #0
   152d4:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   152d8:	mov	sp, fp
   152dc:	pop	{fp, pc}
   152e0:	bl	10fd0 <abort@plt>
   152e4:	push	{r4, sl, fp, lr}
   152e8:	add	fp, sp, #8
   152ec:	sub	sp, sp, #48	; 0x30
   152f0:	mov	lr, r0
   152f4:	movw	r0, #33112	; 0x8158
   152f8:	mov	r3, #32
   152fc:	mov	ip, r1
   15300:	mov	r4, #1
   15304:	movt	r0, #2
   15308:	add	r1, r0, #16
   1530c:	vld1.64	{d16-d17}, [r0], r3
   15310:	mov	r3, sp
   15314:	vld1.64	{d18-d19}, [r1]
   15318:	add	r1, r3, #16
   1531c:	vld1.64	{d20-d21}, [r0]
   15320:	add	r0, r3, #32
   15324:	vst1.64	{d18-d19}, [r1]
   15328:	mov	r1, r3
   1532c:	vst1.64	{d20-d21}, [r0]
   15330:	mov	r0, #28
   15334:	and	r0, r0, r2, lsr #3
   15338:	and	r2, r2, #31
   1533c:	vst1.64	{d16-d17}, [r1], r0
   15340:	ldr	r0, [r1, #8]
   15344:	bic	r4, r4, r0, lsr r2
   15348:	eor	r0, r0, r4, lsl r2
   1534c:	mov	r2, ip
   15350:	str	r0, [r1, #8]
   15354:	mov	r0, #0
   15358:	mov	r1, lr
   1535c:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15360:	sub	sp, fp, #8
   15364:	pop	{r4, sl, fp, pc}
   15368:	push	{fp, lr}
   1536c:	mov	fp, sp
   15370:	sub	sp, sp, #48	; 0x30
   15374:	mov	ip, r0
   15378:	movw	r0, #33112	; 0x8158
   1537c:	mov	r3, #32
   15380:	movt	r0, #2
   15384:	add	r2, r0, #16
   15388:	vld1.64	{d16-d17}, [r0], r3
   1538c:	mov	r3, sp
   15390:	vld1.64	{d18-d19}, [r2]
   15394:	add	r2, r3, #16
   15398:	vld1.64	{d20-d21}, [r0]
   1539c:	add	r0, r3, #32
   153a0:	vst1.64	{d18-d19}, [r2]
   153a4:	mov	r2, r3
   153a8:	vst1.64	{d20-d21}, [r0]
   153ac:	mov	r0, #28
   153b0:	and	r0, r0, r1, lsr #3
   153b4:	and	r1, r1, #31
   153b8:	vst1.64	{d16-d17}, [r2], r0
   153bc:	mov	r0, #1
   153c0:	ldr	lr, [r2, #8]
   153c4:	bic	r0, r0, lr, lsr r1
   153c8:	eor	r0, lr, r0, lsl r1
   153cc:	mov	r1, ip
   153d0:	str	r0, [r2, #8]
   153d4:	mov	r0, #0
   153d8:	mvn	r2, #0
   153dc:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   153e0:	mov	sp, fp
   153e4:	pop	{fp, pc}
   153e8:	push	{fp, lr}
   153ec:	mov	fp, sp
   153f0:	sub	sp, sp, #48	; 0x30
   153f4:	movw	r2, #33112	; 0x8158
   153f8:	mov	r3, #32
   153fc:	mov	r1, r0
   15400:	movt	r2, #2
   15404:	add	r0, r2, #16
   15408:	vld1.64	{d16-d17}, [r2], r3
   1540c:	mov	r3, sp
   15410:	vld1.64	{d18-d19}, [r0]
   15414:	add	r0, r3, #16
   15418:	vld1.64	{d20-d21}, [r2]
   1541c:	mov	r2, r3
   15420:	vst1.64	{d18-d19}, [r0]
   15424:	add	r0, r3, #32
   15428:	vst1.64	{d20-d21}, [r0]
   1542c:	mov	r0, #12
   15430:	vst1.64	{d16-d17}, [r2], r0
   15434:	ldr	r0, [r2]
   15438:	orr	r0, r0, #67108864	; 0x4000000
   1543c:	str	r0, [r2]
   15440:	mov	r0, #0
   15444:	mvn	r2, #0
   15448:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   1544c:	mov	sp, fp
   15450:	pop	{fp, pc}
   15454:	push	{fp, lr}
   15458:	mov	fp, sp
   1545c:	sub	sp, sp, #48	; 0x30
   15460:	mov	ip, r1
   15464:	mov	r1, r0
   15468:	movw	r0, #33112	; 0x8158
   1546c:	mov	r3, #32
   15470:	movt	r0, #2
   15474:	add	r2, r0, #16
   15478:	vld1.64	{d16-d17}, [r0], r3
   1547c:	mov	r3, sp
   15480:	vld1.64	{d18-d19}, [r2]
   15484:	add	r2, r3, #16
   15488:	vld1.64	{d20-d21}, [r0]
   1548c:	add	r0, r3, #32
   15490:	vst1.64	{d18-d19}, [r2]
   15494:	mov	r2, r3
   15498:	vst1.64	{d20-d21}, [r0]
   1549c:	mov	r0, #12
   154a0:	vst1.64	{d16-d17}, [r2], r0
   154a4:	ldr	r0, [r2]
   154a8:	orr	r0, r0, #67108864	; 0x4000000
   154ac:	str	r0, [r2]
   154b0:	mov	r0, #0
   154b4:	mov	r2, ip
   154b8:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   154bc:	mov	sp, fp
   154c0:	pop	{fp, pc}
   154c4:	push	{r4, sl, fp, lr}
   154c8:	add	fp, sp, #8
   154cc:	sub	sp, sp, #96	; 0x60
   154d0:	mov	ip, r2
   154d4:	mov	r2, sp
   154d8:	vmov.i32	q8, #0	; 0x00000000
   154dc:	mov	r4, #28
   154e0:	cmp	r1, #10
   154e4:	mov	r3, r2
   154e8:	add	lr, r2, #16
   154ec:	vst1.64	{d16-d17}, [r3], r4
   154f0:	vst1.64	{d16-d17}, [lr]
   154f4:	vst1.32	{d16-d17}, [r3]
   154f8:	beq	15548 <__mempcpy_chk@plt+0x4560>
   154fc:	vld1.64	{d16-d17}, [r2], r4
   15500:	vld1.64	{d18-d19}, [lr]
   15504:	add	r3, sp, #48	; 0x30
   15508:	add	r4, r3, #4
   1550c:	vld1.32	{d20-d21}, [r2]
   15510:	add	r2, r3, #20
   15514:	vst1.32	{d16-d17}, [r4]
   15518:	vst1.32	{d18-d19}, [r2]
   1551c:	add	r2, r3, #32
   15520:	vst1.32	{d20-d21}, [r2]
   15524:	str	r1, [sp, #48]	; 0x30
   15528:	mvn	r2, #0
   1552c:	ldr	r1, [sp, #60]	; 0x3c
   15530:	orr	r1, r1, #67108864	; 0x4000000
   15534:	str	r1, [sp, #60]	; 0x3c
   15538:	mov	r1, ip
   1553c:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15540:	sub	sp, fp, #8
   15544:	pop	{r4, sl, fp, pc}
   15548:	bl	10fd0 <abort@plt>
   1554c:	push	{r4, r5, fp, lr}
   15550:	add	fp, sp, #8
   15554:	sub	sp, sp, #48	; 0x30
   15558:	mov	ip, r3
   1555c:	movw	r3, #33112	; 0x8158
   15560:	mov	lr, #32
   15564:	cmp	r1, #0
   15568:	mov	r5, sp
   1556c:	movt	r3, #2
   15570:	cmpne	r2, #0
   15574:	add	r4, r3, #16
   15578:	vld1.64	{d16-d17}, [r3], lr
   1557c:	vld1.64	{d18-d19}, [r4]
   15580:	add	r4, r5, #16
   15584:	vld1.64	{d20-d21}, [r3]
   15588:	vst1.64	{d16-d17}, [r5], lr
   1558c:	mov	r3, #10
   15590:	vst1.64	{d18-d19}, [r4]
   15594:	vst1.64	{d20-d21}, [r5]
   15598:	str	r3, [sp]
   1559c:	bne	155a4 <__mempcpy_chk@plt+0x45bc>
   155a0:	bl	10fd0 <abort@plt>
   155a4:	str	r2, [sp, #44]	; 0x2c
   155a8:	str	r1, [sp, #40]	; 0x28
   155ac:	mov	r3, sp
   155b0:	mov	r1, ip
   155b4:	mvn	r2, #0
   155b8:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   155bc:	sub	sp, fp, #8
   155c0:	pop	{r4, r5, fp, pc}
   155c4:	push	{r4, r5, fp, lr}
   155c8:	add	fp, sp, #8
   155cc:	sub	sp, sp, #48	; 0x30
   155d0:	mov	lr, r3
   155d4:	movw	r3, #33112	; 0x8158
   155d8:	mov	ip, #32
   155dc:	cmp	r1, #0
   155e0:	mov	r5, sp
   155e4:	movt	r3, #2
   155e8:	cmpne	r2, #0
   155ec:	add	r4, r3, #16
   155f0:	vld1.64	{d16-d17}, [r3], ip
   155f4:	vld1.64	{d18-d19}, [r4]
   155f8:	add	r4, r5, #16
   155fc:	vld1.64	{d20-d21}, [r3]
   15600:	vst1.64	{d16-d17}, [r5], ip
   15604:	mov	r3, #10
   15608:	vst1.64	{d18-d19}, [r4]
   1560c:	vst1.64	{d20-d21}, [r5]
   15610:	str	r3, [sp]
   15614:	bne	1561c <__mempcpy_chk@plt+0x4634>
   15618:	bl	10fd0 <abort@plt>
   1561c:	ldr	ip, [fp, #8]
   15620:	str	r2, [sp, #44]	; 0x2c
   15624:	str	r1, [sp, #40]	; 0x28
   15628:	mov	r3, sp
   1562c:	mov	r1, lr
   15630:	mov	r2, ip
   15634:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15638:	sub	sp, fp, #8
   1563c:	pop	{r4, r5, fp, pc}
   15640:	push	{r4, sl, fp, lr}
   15644:	add	fp, sp, #8
   15648:	sub	sp, sp, #48	; 0x30
   1564c:	mov	ip, r2
   15650:	movw	r2, #33112	; 0x8158
   15654:	mov	lr, #32
   15658:	cmp	r0, #0
   1565c:	mov	r4, sp
   15660:	movt	r2, #2
   15664:	cmpne	r1, #0
   15668:	add	r3, r2, #16
   1566c:	vld1.64	{d16-d17}, [r2], lr
   15670:	vld1.64	{d18-d19}, [r3]
   15674:	add	r3, r4, #16
   15678:	vld1.64	{d20-d21}, [r2]
   1567c:	vst1.64	{d16-d17}, [r4], lr
   15680:	mov	r2, #10
   15684:	vst1.64	{d18-d19}, [r3]
   15688:	vst1.64	{d20-d21}, [r4]
   1568c:	str	r2, [sp]
   15690:	bne	15698 <__mempcpy_chk@plt+0x46b0>
   15694:	bl	10fd0 <abort@plt>
   15698:	str	r1, [sp, #44]	; 0x2c
   1569c:	str	r0, [sp, #40]	; 0x28
   156a0:	mov	r3, sp
   156a4:	mov	r0, #0
   156a8:	mov	r1, ip
   156ac:	mvn	r2, #0
   156b0:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   156b4:	sub	sp, fp, #8
   156b8:	pop	{r4, sl, fp, pc}
   156bc:	push	{r4, r5, fp, lr}
   156c0:	add	fp, sp, #8
   156c4:	sub	sp, sp, #48	; 0x30
   156c8:	mov	lr, r2
   156cc:	movw	r2, #33112	; 0x8158
   156d0:	mov	ip, r3
   156d4:	mov	r3, #32
   156d8:	cmp	r0, #0
   156dc:	mov	r5, sp
   156e0:	movt	r2, #2
   156e4:	cmpne	r1, #0
   156e8:	add	r4, r2, #16
   156ec:	vld1.64	{d16-d17}, [r2], r3
   156f0:	vld1.64	{d18-d19}, [r4]
   156f4:	add	r4, r5, #16
   156f8:	vld1.64	{d20-d21}, [r2]
   156fc:	vst1.64	{d16-d17}, [r5], r3
   15700:	mov	r2, #10
   15704:	vst1.64	{d18-d19}, [r4]
   15708:	vst1.64	{d20-d21}, [r5]
   1570c:	str	r2, [sp]
   15710:	bne	15718 <__mempcpy_chk@plt+0x4730>
   15714:	bl	10fd0 <abort@plt>
   15718:	str	r1, [sp, #44]	; 0x2c
   1571c:	str	r0, [sp, #40]	; 0x28
   15720:	mov	r3, sp
   15724:	mov	r0, #0
   15728:	mov	r1, lr
   1572c:	mov	r2, ip
   15730:	bl	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15734:	sub	sp, fp, #8
   15738:	pop	{r4, r5, fp, pc}
   1573c:	movw	r3, #33008	; 0x80f0
   15740:	movt	r3, #2
   15744:	b	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15748:	movw	r3, #33008	; 0x80f0
   1574c:	mov	r2, r1
   15750:	mov	r1, r0
   15754:	mov	r0, #0
   15758:	movt	r3, #2
   1575c:	b	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15760:	movw	r3, #33008	; 0x80f0
   15764:	mvn	r2, #0
   15768:	movt	r3, #2
   1576c:	b	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15770:	movw	r3, #33008	; 0x80f0
   15774:	mov	r1, r0
   15778:	mov	r0, #0
   1577c:	mvn	r2, #0
   15780:	movt	r3, #2
   15784:	b	14fd8 <__mempcpy_chk@plt+0x3ff0>
   15788:	push	{r4, r5, r6, sl, fp, lr}
   1578c:	add	fp, sp, #16
   15790:	ldr	r4, [r0], #8
   15794:	mov	r5, r1
   15798:	cmp	r4, r0
   1579c:	beq	157c0 <__mempcpy_chk@plt+0x47d8>
   157a0:	mov	r0, r4
   157a4:	mov	r1, r5
   157a8:	bl	165fc <__mempcpy_chk@plt+0x5614>
   157ac:	mov	r6, r0
   157b0:	cmp	r0, #0
   157b4:	moveq	r6, r4
   157b8:	mov	r0, r6
   157bc:	pop	{r4, r5, r6, sl, fp, pc}
   157c0:	mov	r0, r5
   157c4:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   157c8:	cmp	r0, #0
   157cc:	moveq	r6, #0
   157d0:	moveq	r0, r6
   157d4:	popeq	{r4, r5, r6, sl, fp, pc}
   157d8:	mov	r1, r4
   157dc:	mov	r2, r5
   157e0:	mov	r6, r0
   157e4:	bl	10dfc <memcpy@plt>
   157e8:	mov	r0, r6
   157ec:	pop	{r4, r5, r6, sl, fp, pc}
   157f0:	push	{r4, r5, r6, sl, fp, lr}
   157f4:	add	fp, sp, #16
   157f8:	mov	r4, r0
   157fc:	add	r6, r0, #8
   15800:	ldrd	r0, [r0]
   15804:	lsl	r5, r1, #1
   15808:	cmp	r0, r6
   1580c:	beq	15818 <__mempcpy_chk@plt+0x4830>
   15810:	bl	12348 <__mempcpy_chk@plt+0x1360>
   15814:	ldr	r1, [r4, #4]
   15818:	cmp	r5, r1
   1581c:	bcc	15840 <__mempcpy_chk@plt+0x4858>
   15820:	mov	r0, r5
   15824:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   15828:	cmp	r0, #0
   1582c:	strne	r0, [r4]
   15830:	movne	r0, #1
   15834:	strne	r5, [r4, #4]
   15838:	popne	{r4, r5, r6, sl, fp, pc}
   1583c:	b	1584c <__mempcpy_chk@plt+0x4864>
   15840:	bl	10f1c <__errno_location@plt>
   15844:	mov	r1, #12
   15848:	str	r1, [r0]
   1584c:	mov	r0, #0
   15850:	mov	r5, #1024	; 0x400
   15854:	str	r6, [r4]
   15858:	str	r5, [r4, #4]
   1585c:	pop	{r4, r5, r6, sl, fp, pc}
   15860:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15864:	add	fp, sp, #24
   15868:	ldrd	r8, [r0]
   1586c:	add	r7, r0, #8
   15870:	mov	r4, r0
   15874:	lsl	r5, r9, #1
   15878:	cmp	r8, r7
   1587c:	beq	158b0 <__mempcpy_chk@plt+0x48c8>
   15880:	cmp	r5, r9
   15884:	bcc	158e4 <__mempcpy_chk@plt+0x48fc>
   15888:	mov	r0, r8
   1588c:	mov	r1, r5
   15890:	bl	165fc <__mempcpy_chk@plt+0x5614>
   15894:	mov	r6, r0
   15898:	cmp	r0, #0
   1589c:	beq	158f4 <__mempcpy_chk@plt+0x490c>
   158a0:	mov	r0, #1
   158a4:	str	r6, [r4]
   158a8:	str	r5, [r4, #4]
   158ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   158b0:	mov	r0, r5
   158b4:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   158b8:	cmp	r0, #0
   158bc:	moveq	r0, #0
   158c0:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   158c4:	ldr	r2, [r4, #4]
   158c8:	mov	r1, r8
   158cc:	mov	r6, r0
   158d0:	bl	10dfc <memcpy@plt>
   158d4:	mov	r0, #1
   158d8:	str	r6, [r4]
   158dc:	str	r5, [r4, #4]
   158e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   158e4:	bl	10f1c <__errno_location@plt>
   158e8:	mov	r1, #12
   158ec:	str	r1, [r0]
   158f0:	b	158f8 <__mempcpy_chk@plt+0x4910>
   158f4:	ldr	r8, [r4]
   158f8:	mov	r0, r8
   158fc:	bl	12348 <__mempcpy_chk@plt+0x1360>
   15900:	mov	r0, #0
   15904:	mov	r5, #1024	; 0x400
   15908:	str	r7, [r4]
   1590c:	str	r5, [r4, #4]
   15910:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15914:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15918:	add	fp, sp, #24
   1591c:	sub	sp, sp, #32
   15920:	ldr	r6, [fp, #12]
   15924:	ldr	r7, [fp, #8]
   15928:	mov	r4, r2
   1592c:	mov	r8, r0
   15930:	cmp	r1, #0
   15934:	beq	1595c <__mempcpy_chk@plt+0x4974>
   15938:	movw	r2, #30192	; 0x75f0
   1593c:	mov	r5, r1
   15940:	str	r3, [sp, #4]
   15944:	str	r4, [sp]
   15948:	mov	r0, r8
   1594c:	mov	r1, #1
   15950:	movt	r2, #1
   15954:	mov	r3, r5
   15958:	b	15974 <__mempcpy_chk@plt+0x498c>
   1595c:	movw	r2, #30204	; 0x75fc
   15960:	str	r3, [sp]
   15964:	mov	r0, r8
   15968:	mov	r1, #1
   1596c:	mov	r3, r4
   15970:	movt	r2, #1
   15974:	bl	10f58 <__fprintf_chk@plt>
   15978:	movw	r1, #30211	; 0x7603
   1597c:	mov	r0, #0
   15980:	mov	r2, #5
   15984:	movt	r1, #1
   15988:	bl	10e20 <dcgettext@plt>
   1598c:	movw	r2, #30929	; 0x78d1
   15990:	mov	r3, r0
   15994:	movw	r0, #2022	; 0x7e6
   15998:	mov	r1, #1
   1599c:	str	r0, [sp]
   159a0:	movt	r2, #1
   159a4:	mov	r0, r8
   159a8:	bl	10f58 <__fprintf_chk@plt>
   159ac:	movw	r4, #27928	; 0x6d18
   159b0:	mov	r1, r8
   159b4:	movt	r4, #1
   159b8:	mov	r0, r4
   159bc:	bl	10d9c <fputs_unlocked@plt>
   159c0:	movw	r1, #30215	; 0x7607
   159c4:	mov	r0, #0
   159c8:	mov	r2, #5
   159cc:	movt	r1, #1
   159d0:	bl	10e20 <dcgettext@plt>
   159d4:	movw	r3, #30386	; 0x76b2
   159d8:	mov	r2, r0
   159dc:	mov	r0, r8
   159e0:	mov	r1, #1
   159e4:	movt	r3, #1
   159e8:	bl	10f58 <__fprintf_chk@plt>
   159ec:	mov	r0, r4
   159f0:	mov	r1, r8
   159f4:	bl	10d9c <fputs_unlocked@plt>
   159f8:	cmp	r6, #9
   159fc:	bhi	15a38 <__mempcpy_chk@plt+0x4a50>
   15a00:	add	r0, pc, #0
   15a04:	ldr	pc, [r0, r6, lsl #2]
   15a08:	andeq	r5, r1, r0, lsr sl
   15a0c:	andeq	r5, r1, r4, asr #20
   15a10:	andeq	r5, r1, r4, ror sl
   15a14:	muleq	r1, ip, sl
   15a18:	andeq	r5, r1, r4, asr #21
   15a1c:	andeq	r5, r1, ip, ror #21
   15a20:	andeq	r5, r1, r4, lsl fp
   15a24:	andeq	r5, r1, ip, asr #22
   15a28:	strdeq	r5, [r1], -r4
   15a2c:	muleq	r1, ip, fp
   15a30:	sub	sp, fp, #24
   15a34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a38:	movw	r1, #30739	; 0x7813
   15a3c:	movt	r1, #1
   15a40:	b	15ba4 <__mempcpy_chk@plt+0x4bbc>
   15a44:	movw	r1, #30420	; 0x76d4
   15a48:	mov	r0, #0
   15a4c:	mov	r2, #5
   15a50:	movt	r1, #1
   15a54:	bl	10e20 <dcgettext@plt>
   15a58:	ldr	r3, [r7]
   15a5c:	mov	r2, r0
   15a60:	mov	r0, r8
   15a64:	mov	r1, #1
   15a68:	sub	sp, fp, #24
   15a6c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a70:	b	10f58 <__fprintf_chk@plt>
   15a74:	movw	r1, #30436	; 0x76e4
   15a78:	mov	r0, #0
   15a7c:	mov	r2, #5
   15a80:	movt	r1, #1
   15a84:	bl	10e20 <dcgettext@plt>
   15a88:	mov	r2, r0
   15a8c:	ldr	r3, [r7]
   15a90:	ldr	r0, [r7, #4]
   15a94:	str	r0, [sp]
   15a98:	b	15b88 <__mempcpy_chk@plt+0x4ba0>
   15a9c:	movw	r1, #30459	; 0x76fb
   15aa0:	mov	r0, #0
   15aa4:	mov	r2, #5
   15aa8:	movt	r1, #1
   15aac:	bl	10e20 <dcgettext@plt>
   15ab0:	ldr	r3, [r7]
   15ab4:	mov	r2, r0
   15ab8:	ldmib	r7, {r0, r1}
   15abc:	stm	sp, {r0, r1}
   15ac0:	b	15b88 <__mempcpy_chk@plt+0x4ba0>
   15ac4:	movw	r1, #30487	; 0x7717
   15ac8:	mov	r0, #0
   15acc:	mov	r2, #5
   15ad0:	movt	r1, #1
   15ad4:	bl	10e20 <dcgettext@plt>
   15ad8:	ldr	r3, [r7]
   15adc:	mov	r2, r0
   15ae0:	ldmib	r7, {r0, r1, r7}
   15ae4:	stm	sp, {r0, r1, r7}
   15ae8:	b	15b88 <__mempcpy_chk@plt+0x4ba0>
   15aec:	movw	r1, #30519	; 0x7737
   15af0:	mov	r0, #0
   15af4:	mov	r2, #5
   15af8:	movt	r1, #1
   15afc:	bl	10e20 <dcgettext@plt>
   15b00:	ldr	r3, [r7]
   15b04:	mov	r2, r0
   15b08:	ldmib	r7, {r0, r1, r6, r7}
   15b0c:	stm	sp, {r0, r1, r6, r7}
   15b10:	b	15b88 <__mempcpy_chk@plt+0x4ba0>
   15b14:	movw	r1, #30555	; 0x775b
   15b18:	mov	r0, #0
   15b1c:	mov	r2, #5
   15b20:	movt	r1, #1
   15b24:	bl	10e20 <dcgettext@plt>
   15b28:	ldr	r3, [r7]
   15b2c:	mov	r2, r0
   15b30:	ldmib	r7, {r0, r1, r6}
   15b34:	ldr	r5, [r7, #16]
   15b38:	ldr	r7, [r7, #20]
   15b3c:	stm	sp, {r0, r1, r6}
   15b40:	str	r5, [sp, #12]
   15b44:	str	r7, [sp, #16]
   15b48:	b	15b88 <__mempcpy_chk@plt+0x4ba0>
   15b4c:	movw	r1, #30595	; 0x7783
   15b50:	mov	r0, #0
   15b54:	mov	r2, #5
   15b58:	movt	r1, #1
   15b5c:	bl	10e20 <dcgettext@plt>
   15b60:	ldr	r3, [r7]
   15b64:	mov	r2, r0
   15b68:	ldmib	r7, {r0, r1, r6}
   15b6c:	ldr	r5, [r7, #16]
   15b70:	ldr	r4, [r7, #20]
   15b74:	ldr	r7, [r7, #24]
   15b78:	stm	sp, {r0, r1, r6}
   15b7c:	str	r5, [sp, #12]
   15b80:	str	r4, [sp, #16]
   15b84:	str	r7, [sp, #20]
   15b88:	mov	r0, r8
   15b8c:	mov	r1, #1
   15b90:	bl	10f58 <__fprintf_chk@plt>
   15b94:	sub	sp, fp, #24
   15b98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b9c:	movw	r1, #30687	; 0x77df
   15ba0:	movt	r1, #1
   15ba4:	mov	r0, #0
   15ba8:	mov	r2, #5
   15bac:	bl	10e20 <dcgettext@plt>
   15bb0:	mov	ip, r0
   15bb4:	ldr	r3, [r7]
   15bb8:	ldr	r0, [r7, #4]
   15bbc:	ldr	r1, [r7, #8]
   15bc0:	ldr	r6, [r7, #12]
   15bc4:	ldr	r5, [r7, #16]
   15bc8:	ldr	r4, [r7, #20]
   15bcc:	ldr	r2, [r7, #24]
   15bd0:	ldr	lr, [r7, #28]
   15bd4:	ldr	r7, [r7, #32]
   15bd8:	stm	sp, {r0, r1, r6}
   15bdc:	str	r5, [sp, #12]
   15be0:	str	r4, [sp, #16]
   15be4:	str	r2, [sp, #20]
   15be8:	str	lr, [sp, #24]
   15bec:	str	r7, [sp, #28]
   15bf0:	b	15c38 <__mempcpy_chk@plt+0x4c50>
   15bf4:	movw	r1, #30639	; 0x77af
   15bf8:	mov	r0, #0
   15bfc:	mov	r2, #5
   15c00:	movt	r1, #1
   15c04:	bl	10e20 <dcgettext@plt>
   15c08:	mov	ip, r0
   15c0c:	ldr	r3, [r7]
   15c10:	ldmib	r7, {r0, r1, r6}
   15c14:	ldr	r5, [r7, #16]
   15c18:	ldr	r4, [r7, #20]
   15c1c:	ldr	r2, [r7, #24]
   15c20:	ldr	r7, [r7, #28]
   15c24:	stm	sp, {r0, r1, r6}
   15c28:	str	r5, [sp, #12]
   15c2c:	str	r4, [sp, #16]
   15c30:	str	r2, [sp, #20]
   15c34:	str	r7, [sp, #24]
   15c38:	mov	r0, r8
   15c3c:	mov	r1, #1
   15c40:	mov	r2, ip
   15c44:	bl	10f58 <__fprintf_chk@plt>
   15c48:	sub	sp, fp, #24
   15c4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15c50:	push	{r4, sl, fp, lr}
   15c54:	add	fp, sp, #8
   15c58:	sub	sp, sp, #8
   15c5c:	ldr	ip, [fp, #8]
   15c60:	mov	lr, #0
   15c64:	ldr	r4, [ip, lr, lsl #2]
   15c68:	add	lr, lr, #1
   15c6c:	cmp	r4, #0
   15c70:	bne	15c64 <__mempcpy_chk@plt+0x4c7c>
   15c74:	sub	r4, lr, #1
   15c78:	str	ip, [sp]
   15c7c:	str	r4, [sp, #4]
   15c80:	bl	15914 <__mempcpy_chk@plt+0x492c>
   15c84:	sub	sp, fp, #8
   15c88:	pop	{r4, sl, fp, pc}
   15c8c:	push	{fp, lr}
   15c90:	mov	fp, sp
   15c94:	sub	sp, sp, #48	; 0x30
   15c98:	ldr	ip, [fp, #8]
   15c9c:	ldr	lr, [ip]
   15ca0:	cmp	lr, #0
   15ca4:	str	lr, [sp, #8]
   15ca8:	beq	15d44 <__mempcpy_chk@plt+0x4d5c>
   15cac:	ldr	lr, [ip, #4]
   15cb0:	cmp	lr, #0
   15cb4:	str	lr, [sp, #12]
   15cb8:	beq	15d4c <__mempcpy_chk@plt+0x4d64>
   15cbc:	ldr	lr, [ip, #8]
   15cc0:	cmp	lr, #0
   15cc4:	str	lr, [sp, #16]
   15cc8:	beq	15d54 <__mempcpy_chk@plt+0x4d6c>
   15ccc:	ldr	lr, [ip, #12]
   15cd0:	cmp	lr, #0
   15cd4:	str	lr, [sp, #20]
   15cd8:	beq	15d5c <__mempcpy_chk@plt+0x4d74>
   15cdc:	ldr	lr, [ip, #16]
   15ce0:	cmp	lr, #0
   15ce4:	str	lr, [sp, #24]
   15ce8:	beq	15d64 <__mempcpy_chk@plt+0x4d7c>
   15cec:	ldr	lr, [ip, #20]
   15cf0:	cmp	lr, #0
   15cf4:	str	lr, [sp, #28]
   15cf8:	beq	15d6c <__mempcpy_chk@plt+0x4d84>
   15cfc:	ldr	lr, [ip, #24]
   15d00:	cmp	lr, #0
   15d04:	str	lr, [sp, #32]
   15d08:	beq	15d74 <__mempcpy_chk@plt+0x4d8c>
   15d0c:	ldr	lr, [ip, #28]
   15d10:	cmp	lr, #0
   15d14:	str	lr, [sp, #36]	; 0x24
   15d18:	beq	15d7c <__mempcpy_chk@plt+0x4d94>
   15d1c:	ldr	lr, [ip, #32]
   15d20:	cmp	lr, #0
   15d24:	str	lr, [sp, #40]	; 0x28
   15d28:	beq	15d84 <__mempcpy_chk@plt+0x4d9c>
   15d2c:	ldr	lr, [ip, #36]	; 0x24
   15d30:	mov	ip, #10
   15d34:	cmp	lr, #0
   15d38:	str	lr, [sp, #44]	; 0x2c
   15d3c:	movweq	ip, #9
   15d40:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d44:	mov	ip, #0
   15d48:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d4c:	mov	ip, #1
   15d50:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d54:	mov	ip, #2
   15d58:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d5c:	mov	ip, #3
   15d60:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d64:	mov	ip, #4
   15d68:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d6c:	mov	ip, #5
   15d70:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d74:	mov	ip, #6
   15d78:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d7c:	mov	ip, #7
   15d80:	b	15d88 <__mempcpy_chk@plt+0x4da0>
   15d84:	mov	ip, #8
   15d88:	add	lr, sp, #8
   15d8c:	str	ip, [sp, #4]
   15d90:	str	lr, [sp]
   15d94:	bl	15914 <__mempcpy_chk@plt+0x492c>
   15d98:	mov	sp, fp
   15d9c:	pop	{fp, pc}
   15da0:	push	{fp, lr}
   15da4:	mov	fp, sp
   15da8:	sub	sp, sp, #56	; 0x38
   15dac:	add	ip, fp, #8
   15db0:	str	ip, [sp, #12]
   15db4:	ldr	lr, [fp, #8]
   15db8:	cmp	lr, #0
   15dbc:	str	lr, [sp, #16]
   15dc0:	beq	15e5c <__mempcpy_chk@plt+0x4e74>
   15dc4:	ldr	lr, [ip, #4]
   15dc8:	cmp	lr, #0
   15dcc:	str	lr, [sp, #20]
   15dd0:	beq	15e64 <__mempcpy_chk@plt+0x4e7c>
   15dd4:	ldr	lr, [ip, #8]
   15dd8:	cmp	lr, #0
   15ddc:	str	lr, [sp, #24]
   15de0:	beq	15e6c <__mempcpy_chk@plt+0x4e84>
   15de4:	ldr	lr, [ip, #12]
   15de8:	cmp	lr, #0
   15dec:	str	lr, [sp, #28]
   15df0:	beq	15e74 <__mempcpy_chk@plt+0x4e8c>
   15df4:	ldr	lr, [ip, #16]
   15df8:	cmp	lr, #0
   15dfc:	str	lr, [sp, #32]
   15e00:	beq	15e7c <__mempcpy_chk@plt+0x4e94>
   15e04:	ldr	lr, [ip, #20]
   15e08:	cmp	lr, #0
   15e0c:	str	lr, [sp, #36]	; 0x24
   15e10:	beq	15e84 <__mempcpy_chk@plt+0x4e9c>
   15e14:	ldr	lr, [ip, #24]
   15e18:	cmp	lr, #0
   15e1c:	str	lr, [sp, #40]	; 0x28
   15e20:	beq	15e8c <__mempcpy_chk@plt+0x4ea4>
   15e24:	ldr	lr, [ip, #28]
   15e28:	cmp	lr, #0
   15e2c:	str	lr, [sp, #44]	; 0x2c
   15e30:	beq	15e94 <__mempcpy_chk@plt+0x4eac>
   15e34:	ldr	lr, [ip, #32]
   15e38:	cmp	lr, #0
   15e3c:	str	lr, [sp, #48]	; 0x30
   15e40:	beq	15e9c <__mempcpy_chk@plt+0x4eb4>
   15e44:	ldr	lr, [ip, #36]	; 0x24
   15e48:	mov	ip, #10
   15e4c:	cmp	lr, #0
   15e50:	str	lr, [sp, #52]	; 0x34
   15e54:	movweq	ip, #9
   15e58:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e5c:	mov	ip, #0
   15e60:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e64:	mov	ip, #1
   15e68:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e6c:	mov	ip, #2
   15e70:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e74:	mov	ip, #3
   15e78:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e7c:	mov	ip, #4
   15e80:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e84:	mov	ip, #5
   15e88:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e8c:	mov	ip, #6
   15e90:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e94:	mov	ip, #7
   15e98:	b	15ea0 <__mempcpy_chk@plt+0x4eb8>
   15e9c:	mov	ip, #8
   15ea0:	add	lr, sp, #16
   15ea4:	str	ip, [sp, #4]
   15ea8:	str	lr, [sp]
   15eac:	bl	15914 <__mempcpy_chk@plt+0x492c>
   15eb0:	mov	sp, fp
   15eb4:	pop	{fp, pc}
   15eb8:	push	{fp, lr}
   15ebc:	mov	fp, sp
   15ec0:	movw	r0, #33092	; 0x8144
   15ec4:	movt	r0, #2
   15ec8:	ldr	r1, [r0]
   15ecc:	movw	r0, #27928	; 0x6d18
   15ed0:	movt	r0, #1
   15ed4:	bl	10d9c <fputs_unlocked@plt>
   15ed8:	movw	r1, #30799	; 0x784f
   15edc:	mov	r0, #0
   15ee0:	mov	r2, #5
   15ee4:	movt	r1, #1
   15ee8:	bl	10e20 <dcgettext@plt>
   15eec:	movw	r2, #30819	; 0x7863
   15ef0:	mov	r1, r0
   15ef4:	mov	r0, #1
   15ef8:	movt	r2, #1
   15efc:	bl	10f40 <__printf_chk@plt>
   15f00:	movw	r1, #30841	; 0x7879
   15f04:	mov	r0, #0
   15f08:	mov	r2, #5
   15f0c:	movt	r1, #1
   15f10:	bl	10e20 <dcgettext@plt>
   15f14:	movw	r2, #29029	; 0x7165
   15f18:	movw	r3, #29239	; 0x7237
   15f1c:	mov	r1, r0
   15f20:	mov	r0, #1
   15f24:	movt	r2, #1
   15f28:	movt	r3, #1
   15f2c:	bl	10f40 <__printf_chk@plt>
   15f30:	movw	r1, #30861	; 0x788d
   15f34:	mov	r0, #0
   15f38:	mov	r2, #5
   15f3c:	movt	r1, #1
   15f40:	bl	10e20 <dcgettext@plt>
   15f44:	movw	r2, #30900	; 0x78b4
   15f48:	mov	r1, r0
   15f4c:	mov	r0, #1
   15f50:	movt	r2, #1
   15f54:	pop	{fp, lr}
   15f58:	b	10f40 <__printf_chk@plt>
   15f5c:	push	{r4, r5, r6, sl, fp, lr}
   15f60:	add	fp, sp, #16
   15f64:	mov	r4, r2
   15f68:	mov	r5, r1
   15f6c:	mov	r6, r0
   15f70:	bl	16958 <__mempcpy_chk@plt+0x5970>
   15f74:	cmp	r0, #0
   15f78:	popne	{r4, r5, r6, sl, fp, pc}
   15f7c:	cmp	r6, #0
   15f80:	beq	15f94 <__mempcpy_chk@plt+0x4fac>
   15f84:	cmp	r5, #0
   15f88:	cmpne	r4, #0
   15f8c:	bne	15f94 <__mempcpy_chk@plt+0x4fac>
   15f90:	pop	{r4, r5, r6, sl, fp, pc}
   15f94:	bl	16534 <__mempcpy_chk@plt+0x554c>
   15f98:	push	{r4, r5, r6, sl, fp, lr}
   15f9c:	add	fp, sp, #16
   15fa0:	mov	r4, r2
   15fa4:	mov	r5, r1
   15fa8:	mov	r6, r0
   15fac:	bl	16958 <__mempcpy_chk@plt+0x5970>
   15fb0:	cmp	r0, #0
   15fb4:	popne	{r4, r5, r6, sl, fp, pc}
   15fb8:	cmp	r6, #0
   15fbc:	beq	15fd0 <__mempcpy_chk@plt+0x4fe8>
   15fc0:	cmp	r5, #0
   15fc4:	cmpne	r4, #0
   15fc8:	bne	15fd0 <__mempcpy_chk@plt+0x4fe8>
   15fcc:	pop	{r4, r5, r6, sl, fp, pc}
   15fd0:	bl	16534 <__mempcpy_chk@plt+0x554c>
   15fd4:	push	{fp, lr}
   15fd8:	mov	fp, sp
   15fdc:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   15fe0:	cmp	r0, #0
   15fe4:	popne	{fp, pc}
   15fe8:	bl	16534 <__mempcpy_chk@plt+0x554c>
   15fec:	push	{fp, lr}
   15ff0:	mov	fp, sp
   15ff4:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   15ff8:	cmp	r0, #0
   15ffc:	popne	{fp, pc}
   16000:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16004:	push	{fp, lr}
   16008:	mov	fp, sp
   1600c:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   16010:	cmp	r0, #0
   16014:	popne	{fp, pc}
   16018:	bl	16534 <__mempcpy_chk@plt+0x554c>
   1601c:	push	{r4, r5, fp, lr}
   16020:	add	fp, sp, #8
   16024:	mov	r4, r1
   16028:	mov	r5, r0
   1602c:	bl	165fc <__mempcpy_chk@plt+0x5614>
   16030:	cmp	r0, #0
   16034:	popne	{r4, r5, fp, pc}
   16038:	cmp	r5, #0
   1603c:	beq	1604c <__mempcpy_chk@plt+0x5064>
   16040:	cmp	r4, #0
   16044:	bne	1604c <__mempcpy_chk@plt+0x5064>
   16048:	pop	{r4, r5, fp, pc}
   1604c:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16050:	push	{fp, lr}
   16054:	mov	fp, sp
   16058:	cmp	r1, #0
   1605c:	orreq	r1, r1, #1
   16060:	bl	165fc <__mempcpy_chk@plt+0x5614>
   16064:	cmp	r0, #0
   16068:	popne	{fp, pc}
   1606c:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16070:	push	{fp, lr}
   16074:	mov	fp, sp
   16078:	clz	r3, r2
   1607c:	lsr	ip, r3, #5
   16080:	clz	r3, r1
   16084:	lsr	r3, r3, #5
   16088:	orrs	r3, r3, ip
   1608c:	movwne	r1, #1
   16090:	movwne	r2, #1
   16094:	bl	16958 <__mempcpy_chk@plt+0x5970>
   16098:	cmp	r0, #0
   1609c:	popne	{fp, pc}
   160a0:	bl	16534 <__mempcpy_chk@plt+0x554c>
   160a4:	push	{fp, lr}
   160a8:	mov	fp, sp
   160ac:	mov	r2, r1
   160b0:	mov	r1, r0
   160b4:	mov	r0, #0
   160b8:	bl	16958 <__mempcpy_chk@plt+0x5970>
   160bc:	cmp	r0, #0
   160c0:	popne	{fp, pc}
   160c4:	bl	16534 <__mempcpy_chk@plt+0x554c>
   160c8:	push	{fp, lr}
   160cc:	mov	fp, sp
   160d0:	mov	r2, r1
   160d4:	mov	r1, r0
   160d8:	clz	r0, r2
   160dc:	clz	r3, r1
   160e0:	lsr	r0, r0, #5
   160e4:	lsr	r3, r3, #5
   160e8:	orrs	r0, r3, r0
   160ec:	movwne	r1, #1
   160f0:	movwne	r2, #1
   160f4:	mov	r0, #0
   160f8:	bl	16958 <__mempcpy_chk@plt+0x5970>
   160fc:	cmp	r0, #0
   16100:	popne	{fp, pc}
   16104:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16108:	push	{r4, r5, r6, sl, fp, lr}
   1610c:	add	fp, sp, #16
   16110:	ldr	r5, [r1]
   16114:	mov	r4, r1
   16118:	mov	r6, r0
   1611c:	cmp	r0, #0
   16120:	beq	16138 <__mempcpy_chk@plt+0x5150>
   16124:	mov	r0, #1
   16128:	add	r0, r0, r5, lsr #1
   1612c:	adds	r5, r5, r0
   16130:	bcc	16140 <__mempcpy_chk@plt+0x5158>
   16134:	b	1617c <__mempcpy_chk@plt+0x5194>
   16138:	cmp	r5, #0
   1613c:	movweq	r5, #64	; 0x40
   16140:	mov	r0, r6
   16144:	mov	r1, r5
   16148:	mov	r2, #1
   1614c:	bl	16958 <__mempcpy_chk@plt+0x5970>
   16150:	cmp	r5, #0
   16154:	mov	r1, r5
   16158:	movwne	r1, #1
   1615c:	cmp	r0, #0
   16160:	bne	16174 <__mempcpy_chk@plt+0x518c>
   16164:	clz	r2, r6
   16168:	lsr	r2, r2, #5
   1616c:	orrs	r1, r2, r1
   16170:	bne	1617c <__mempcpy_chk@plt+0x5194>
   16174:	str	r5, [r4]
   16178:	pop	{r4, r5, r6, sl, fp, pc}
   1617c:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16180:	push	{r4, r5, r6, r7, fp, lr}
   16184:	add	fp, sp, #16
   16188:	ldr	r5, [r1]
   1618c:	mov	r6, r2
   16190:	mov	r4, r1
   16194:	mov	r7, r0
   16198:	cmp	r0, #0
   1619c:	beq	161b4 <__mempcpy_chk@plt+0x51cc>
   161a0:	mov	r0, #1
   161a4:	add	r0, r0, r5, lsr #1
   161a8:	adds	r5, r5, r0
   161ac:	bcc	161cc <__mempcpy_chk@plt+0x51e4>
   161b0:	b	16200 <__mempcpy_chk@plt+0x5218>
   161b4:	cmp	r5, #0
   161b8:	bne	161cc <__mempcpy_chk@plt+0x51e4>
   161bc:	mov	r0, #64	; 0x40
   161c0:	cmp	r6, #64	; 0x40
   161c4:	udiv	r5, r0, r6
   161c8:	addhi	r5, r5, #1
   161cc:	mov	r0, r7
   161d0:	mov	r1, r5
   161d4:	mov	r2, r6
   161d8:	bl	16958 <__mempcpy_chk@plt+0x5970>
   161dc:	cmp	r0, #0
   161e0:	bne	161f8 <__mempcpy_chk@plt+0x5210>
   161e4:	cmp	r7, #0
   161e8:	beq	16200 <__mempcpy_chk@plt+0x5218>
   161ec:	cmp	r6, #0
   161f0:	cmpne	r5, #0
   161f4:	bne	16200 <__mempcpy_chk@plt+0x5218>
   161f8:	str	r5, [r4]
   161fc:	pop	{r4, r5, r6, r7, fp, pc}
   16200:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16204:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16208:	add	fp, sp, #24
   1620c:	mov	r8, r1
   16210:	ldr	r1, [r1]
   16214:	mov	r5, r0
   16218:	add	r0, r1, r1, asr #1
   1621c:	cmp	r0, r1
   16220:	mvnvs	r0, #-2147483648	; 0x80000000
   16224:	cmp	r0, r3
   16228:	mov	r7, r0
   1622c:	movgt	r7, r3
   16230:	cmn	r3, #1
   16234:	movle	r7, r0
   16238:	ldr	r0, [fp, #8]
   1623c:	cmn	r0, #1
   16240:	ble	16268 <__mempcpy_chk@plt+0x5280>
   16244:	cmp	r0, #0
   16248:	beq	162bc <__mempcpy_chk@plt+0x52d4>
   1624c:	cmn	r7, #1
   16250:	ble	16290 <__mempcpy_chk@plt+0x52a8>
   16254:	mvn	r4, #-2147483648	; 0x80000000
   16258:	udiv	r6, r4, r0
   1625c:	cmp	r6, r7
   16260:	bge	162bc <__mempcpy_chk@plt+0x52d4>
   16264:	b	162cc <__mempcpy_chk@plt+0x52e4>
   16268:	cmn	r7, #1
   1626c:	ble	162ac <__mempcpy_chk@plt+0x52c4>
   16270:	cmn	r0, #1
   16274:	beq	162bc <__mempcpy_chk@plt+0x52d4>
   16278:	mov	r6, #-2147483648	; 0x80000000
   1627c:	mvn	r4, #-2147483648	; 0x80000000
   16280:	sdiv	r6, r6, r0
   16284:	cmp	r6, r7
   16288:	bge	162bc <__mempcpy_chk@plt+0x52d4>
   1628c:	b	162cc <__mempcpy_chk@plt+0x52e4>
   16290:	beq	162bc <__mempcpy_chk@plt+0x52d4>
   16294:	mov	r6, #-2147483648	; 0x80000000
   16298:	mvn	r4, #-2147483648	; 0x80000000
   1629c:	sdiv	r6, r6, r7
   162a0:	cmp	r6, r0
   162a4:	bge	162bc <__mempcpy_chk@plt+0x52d4>
   162a8:	b	162cc <__mempcpy_chk@plt+0x52e4>
   162ac:	mvn	r4, #-2147483648	; 0x80000000
   162b0:	sdiv	r6, r4, r0
   162b4:	cmp	r7, r6
   162b8:	blt	162cc <__mempcpy_chk@plt+0x52e4>
   162bc:	mul	r6, r7, r0
   162c0:	mov	r4, #64	; 0x40
   162c4:	cmp	r6, #63	; 0x3f
   162c8:	bgt	162d4 <__mempcpy_chk@plt+0x52ec>
   162cc:	sdiv	r7, r4, r0
   162d0:	mul	r6, r7, r0
   162d4:	cmp	r5, #0
   162d8:	moveq	r4, #0
   162dc:	streq	r4, [r8]
   162e0:	sub	r4, r7, r1
   162e4:	cmp	r4, r2
   162e8:	bge	16394 <__mempcpy_chk@plt+0x53ac>
   162ec:	add	r7, r1, r2
   162f0:	mov	r6, #0
   162f4:	mov	r2, #0
   162f8:	cmp	r7, r3
   162fc:	movwgt	r6, #1
   16300:	cmn	r3, #1
   16304:	movwgt	r2, #1
   16308:	cmp	r7, r1
   1630c:	bvs	163c8 <__mempcpy_chk@plt+0x53e0>
   16310:	ands	r1, r2, r6
   16314:	bne	163c8 <__mempcpy_chk@plt+0x53e0>
   16318:	cmn	r0, #1
   1631c:	ble	16344 <__mempcpy_chk@plt+0x535c>
   16320:	cmp	r0, #0
   16324:	beq	16390 <__mempcpy_chk@plt+0x53a8>
   16328:	cmn	r7, #1
   1632c:	ble	16368 <__mempcpy_chk@plt+0x5380>
   16330:	mvn	r1, #-2147483648	; 0x80000000
   16334:	udiv	r1, r1, r0
   16338:	cmp	r1, r7
   1633c:	bge	16390 <__mempcpy_chk@plt+0x53a8>
   16340:	b	163c8 <__mempcpy_chk@plt+0x53e0>
   16344:	cmn	r7, #1
   16348:	ble	16380 <__mempcpy_chk@plt+0x5398>
   1634c:	cmn	r0, #1
   16350:	beq	16390 <__mempcpy_chk@plt+0x53a8>
   16354:	mov	r1, #-2147483648	; 0x80000000
   16358:	sdiv	r1, r1, r0
   1635c:	cmp	r1, r7
   16360:	bge	16390 <__mempcpy_chk@plt+0x53a8>
   16364:	b	163c8 <__mempcpy_chk@plt+0x53e0>
   16368:	beq	16390 <__mempcpy_chk@plt+0x53a8>
   1636c:	mov	r1, #-2147483648	; 0x80000000
   16370:	sdiv	r1, r1, r7
   16374:	cmp	r1, r0
   16378:	bge	16390 <__mempcpy_chk@plt+0x53a8>
   1637c:	b	163c8 <__mempcpy_chk@plt+0x53e0>
   16380:	mvn	r1, #-2147483648	; 0x80000000
   16384:	sdiv	r1, r1, r0
   16388:	cmp	r7, r1
   1638c:	blt	163c8 <__mempcpy_chk@plt+0x53e0>
   16390:	mul	r6, r7, r0
   16394:	mov	r0, r5
   16398:	mov	r1, r6
   1639c:	bl	165fc <__mempcpy_chk@plt+0x5614>
   163a0:	cmp	r6, #0
   163a4:	movwne	r6, #1
   163a8:	cmp	r0, #0
   163ac:	bne	163c0 <__mempcpy_chk@plt+0x53d8>
   163b0:	clz	r1, r5
   163b4:	lsr	r1, r1, #5
   163b8:	orrs	r1, r1, r6
   163bc:	bne	163c8 <__mempcpy_chk@plt+0x53e0>
   163c0:	str	r7, [r8]
   163c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   163c8:	bl	16534 <__mempcpy_chk@plt+0x554c>
   163cc:	push	{fp, lr}
   163d0:	mov	fp, sp
   163d4:	mov	r1, #1
   163d8:	bl	16578 <__mempcpy_chk@plt+0x5590>
   163dc:	cmp	r0, #0
   163e0:	popne	{fp, pc}
   163e4:	bl	16534 <__mempcpy_chk@plt+0x554c>
   163e8:	push	{fp, lr}
   163ec:	mov	fp, sp
   163f0:	bl	16578 <__mempcpy_chk@plt+0x5590>
   163f4:	cmp	r0, #0
   163f8:	popne	{fp, pc}
   163fc:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16400:	push	{fp, lr}
   16404:	mov	fp, sp
   16408:	mov	r1, #1
   1640c:	bl	16578 <__mempcpy_chk@plt+0x5590>
   16410:	cmp	r0, #0
   16414:	popne	{fp, pc}
   16418:	bl	16534 <__mempcpy_chk@plt+0x554c>
   1641c:	push	{fp, lr}
   16420:	mov	fp, sp
   16424:	bl	16578 <__mempcpy_chk@plt+0x5590>
   16428:	cmp	r0, #0
   1642c:	popne	{fp, pc}
   16430:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16434:	push	{r4, r5, r6, sl, fp, lr}
   16438:	add	fp, sp, #16
   1643c:	mov	r5, r0
   16440:	mov	r0, r1
   16444:	mov	r4, r1
   16448:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   1644c:	cmp	r0, #0
   16450:	beq	1646c <__mempcpy_chk@plt+0x5484>
   16454:	mov	r1, r5
   16458:	mov	r2, r4
   1645c:	mov	r6, r0
   16460:	bl	10dfc <memcpy@plt>
   16464:	mov	r0, r6
   16468:	pop	{r4, r5, r6, sl, fp, pc}
   1646c:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16470:	push	{r4, r5, r6, sl, fp, lr}
   16474:	add	fp, sp, #16
   16478:	mov	r5, r0
   1647c:	mov	r0, r1
   16480:	mov	r4, r1
   16484:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   16488:	cmp	r0, #0
   1648c:	beq	164a8 <__mempcpy_chk@plt+0x54c0>
   16490:	mov	r1, r5
   16494:	mov	r2, r4
   16498:	mov	r6, r0
   1649c:	bl	10dfc <memcpy@plt>
   164a0:	mov	r0, r6
   164a4:	pop	{r4, r5, r6, sl, fp, pc}
   164a8:	bl	16534 <__mempcpy_chk@plt+0x554c>
   164ac:	push	{r4, r5, r6, sl, fp, lr}
   164b0:	add	fp, sp, #16
   164b4:	mov	r5, r0
   164b8:	add	r0, r1, #1
   164bc:	mov	r4, r1
   164c0:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   164c4:	cmp	r0, #0
   164c8:	beq	164f0 <__mempcpy_chk@plt+0x5508>
   164cc:	mov	r6, r0
   164d0:	mov	r0, #0
   164d4:	mov	r1, r5
   164d8:	mov	r2, r4
   164dc:	strb	r0, [r6, r4]
   164e0:	mov	r0, r6
   164e4:	bl	10dfc <memcpy@plt>
   164e8:	mov	r0, r6
   164ec:	pop	{r4, r5, r6, sl, fp, pc}
   164f0:	bl	16534 <__mempcpy_chk@plt+0x554c>
   164f4:	push	{r4, r5, r6, sl, fp, lr}
   164f8:	add	fp, sp, #16
   164fc:	mov	r4, r0
   16500:	bl	10f10 <strlen@plt>
   16504:	add	r5, r0, #1
   16508:	mov	r0, r5
   1650c:	bl	165cc <__mempcpy_chk@plt+0x55e4>
   16510:	cmp	r0, #0
   16514:	beq	16530 <__mempcpy_chk@plt+0x5548>
   16518:	mov	r1, r4
   1651c:	mov	r2, r5
   16520:	mov	r6, r0
   16524:	bl	10dfc <memcpy@plt>
   16528:	mov	r0, r6
   1652c:	pop	{r4, r5, r6, sl, fp, pc}
   16530:	bl	16534 <__mempcpy_chk@plt+0x554c>
   16534:	push	{fp, lr}
   16538:	mov	fp, sp
   1653c:	movw	r0, #33004	; 0x80ec
   16540:	movw	r1, #30976	; 0x7900
   16544:	mov	r2, #5
   16548:	movt	r0, #2
   1654c:	movt	r1, #1
   16550:	ldr	r4, [r0]
   16554:	mov	r0, #0
   16558:	bl	10e20 <dcgettext@plt>
   1655c:	movw	r2, #29809	; 0x7471
   16560:	mov	r3, r0
   16564:	mov	r0, r4
   16568:	mov	r1, #0
   1656c:	movt	r2, #1
   16570:	bl	10ea4 <error@plt>
   16574:	bl	10fd0 <abort@plt>
   16578:	clz	r2, r1
   1657c:	clz	r3, r0
   16580:	lsr	r2, r2, #5
   16584:	lsr	r3, r3, #5
   16588:	orrs	r2, r3, r2
   1658c:	movwne	r1, #1
   16590:	movwne	r0, #1
   16594:	cmp	r1, #0
   16598:	beq	165c8 <__mempcpy_chk@plt+0x55e0>
   1659c:	mvn	r2, #-2147483648	; 0x80000000
   165a0:	udiv	r2, r2, r1
   165a4:	cmp	r2, r0
   165a8:	bcs	165c8 <__mempcpy_chk@plt+0x55e0>
   165ac:	push	{fp, lr}
   165b0:	mov	fp, sp
   165b4:	bl	10f1c <__errno_location@plt>
   165b8:	mov	r1, #12
   165bc:	str	r1, [r0]
   165c0:	mov	r0, #0
   165c4:	pop	{fp, pc}
   165c8:	b	10d90 <calloc@plt>
   165cc:	cmp	r0, #0
   165d0:	movweq	r0, #1
   165d4:	cmn	r0, #1
   165d8:	ble	165e0 <__mempcpy_chk@plt+0x55f8>
   165dc:	b	10eb0 <malloc@plt>
   165e0:	push	{fp, lr}
   165e4:	mov	fp, sp
   165e8:	bl	10f1c <__errno_location@plt>
   165ec:	mov	r1, #12
   165f0:	str	r1, [r0]
   165f4:	mov	r0, #0
   165f8:	pop	{fp, pc}
   165fc:	push	{fp, lr}
   16600:	mov	fp, sp
   16604:	cmp	r0, #0
   16608:	beq	16624 <__mempcpy_chk@plt+0x563c>
   1660c:	cmp	r1, #0
   16610:	beq	16630 <__mempcpy_chk@plt+0x5648>
   16614:	cmn	r1, #1
   16618:	ble	1663c <__mempcpy_chk@plt+0x5654>
   1661c:	pop	{fp, lr}
   16620:	b	10e2c <realloc@plt>
   16624:	mov	r0, r1
   16628:	pop	{fp, lr}
   1662c:	b	165cc <__mempcpy_chk@plt+0x55e4>
   16630:	bl	12348 <__mempcpy_chk@plt+0x1360>
   16634:	mov	r0, #0
   16638:	pop	{fp, pc}
   1663c:	bl	10f1c <__errno_location@plt>
   16640:	mov	r1, #12
   16644:	str	r1, [r0]
   16648:	mov	r0, #0
   1664c:	pop	{fp, pc}
   16650:	push	{r4, r5, r6, sl, fp, lr}
   16654:	add	fp, sp, #16
   16658:	mov	r4, r0
   1665c:	bl	10e8c <__fpending@plt>
   16660:	ldr	r6, [r4]
   16664:	mov	r5, r0
   16668:	mov	r0, r4
   1666c:	bl	166d4 <__mempcpy_chk@plt+0x56ec>
   16670:	tst	r6, #32
   16674:	bne	166ac <__mempcpy_chk@plt+0x56c4>
   16678:	cmp	r0, #0
   1667c:	mov	r4, r0
   16680:	mvnne	r4, #0
   16684:	cmp	r5, #0
   16688:	bne	166b8 <__mempcpy_chk@plt+0x56d0>
   1668c:	cmp	r0, #0
   16690:	beq	166b8 <__mempcpy_chk@plt+0x56d0>
   16694:	bl	10f1c <__errno_location@plt>
   16698:	ldr	r0, [r0]
   1669c:	subs	r4, r0, #9
   166a0:	mvnne	r4, #0
   166a4:	mov	r0, r4
   166a8:	pop	{r4, r5, r6, sl, fp, pc}
   166ac:	mvn	r4, #0
   166b0:	cmp	r0, #0
   166b4:	beq	166c0 <__mempcpy_chk@plt+0x56d8>
   166b8:	mov	r0, r4
   166bc:	pop	{r4, r5, r6, sl, fp, pc}
   166c0:	bl	10f1c <__errno_location@plt>
   166c4:	mov	r1, #0
   166c8:	str	r1, [r0]
   166cc:	mov	r0, r4
   166d0:	pop	{r4, r5, r6, sl, fp, pc}
   166d4:	push	{r4, r5, r6, sl, fp, lr}
   166d8:	add	fp, sp, #16
   166dc:	sub	sp, sp, #8
   166e0:	mov	r4, r0
   166e4:	bl	10f4c <fileno@plt>
   166e8:	cmn	r0, #1
   166ec:	ble	16760 <__mempcpy_chk@plt+0x5778>
   166f0:	mov	r0, r4
   166f4:	bl	10ec8 <__freading@plt>
   166f8:	cmp	r0, #0
   166fc:	beq	16728 <__mempcpy_chk@plt+0x5740>
   16700:	mov	r0, r4
   16704:	bl	10f4c <fileno@plt>
   16708:	mov	r1, #1
   1670c:	mov	r2, #0
   16710:	mov	r3, #0
   16714:	str	r1, [sp]
   16718:	bl	10e74 <lseek64@plt>
   1671c:	and	r0, r0, r1
   16720:	cmn	r0, #1
   16724:	beq	16760 <__mempcpy_chk@plt+0x5778>
   16728:	mov	r0, r4
   1672c:	bl	16770 <__mempcpy_chk@plt+0x5788>
   16730:	cmp	r0, #0
   16734:	beq	16760 <__mempcpy_chk@plt+0x5778>
   16738:	bl	10f1c <__errno_location@plt>
   1673c:	ldr	r6, [r0]
   16740:	mov	r5, r0
   16744:	mov	r0, r4
   16748:	bl	10f64 <fclose@plt>
   1674c:	cmp	r6, #0
   16750:	strne	r6, [r5]
   16754:	mvnne	r0, #0
   16758:	sub	sp, fp, #16
   1675c:	pop	{r4, r5, r6, sl, fp, pc}
   16760:	mov	r0, r4
   16764:	sub	sp, fp, #16
   16768:	pop	{r4, r5, r6, sl, fp, lr}
   1676c:	b	10f64 <fclose@plt>
   16770:	push	{r4, sl, fp, lr}
   16774:	add	fp, sp, #8
   16778:	sub	sp, sp, #8
   1677c:	mov	r4, r0
   16780:	cmp	r0, #0
   16784:	beq	167a0 <__mempcpy_chk@plt+0x57b8>
   16788:	mov	r0, r4
   1678c:	bl	10ec8 <__freading@plt>
   16790:	cmp	r0, #0
   16794:	ldrbne	r0, [r4, #1]
   16798:	tstne	r0, #1
   1679c:	bne	167b0 <__mempcpy_chk@plt+0x57c8>
   167a0:	mov	r0, r4
   167a4:	sub	sp, fp, #8
   167a8:	pop	{r4, sl, fp, lr}
   167ac:	b	10dc0 <fflush@plt>
   167b0:	mov	r0, #1
   167b4:	mov	r2, #0
   167b8:	mov	r3, #0
   167bc:	str	r0, [sp]
   167c0:	mov	r0, r4
   167c4:	bl	167d8 <__mempcpy_chk@plt+0x57f0>
   167c8:	mov	r0, r4
   167cc:	sub	sp, fp, #8
   167d0:	pop	{r4, sl, fp, lr}
   167d4:	b	10dc0 <fflush@plt>
   167d8:	push	{r4, r5, r6, r7, fp, lr}
   167dc:	add	fp, sp, #16
   167e0:	sub	sp, sp, #8
   167e4:	mov	r4, r0
   167e8:	ldr	r0, [r0, #4]
   167ec:	mov	r5, r3
   167f0:	mov	r6, r2
   167f4:	ldr	r1, [r4, #8]
   167f8:	cmp	r1, r0
   167fc:	bne	16818 <__mempcpy_chk@plt+0x5830>
   16800:	ldrd	r0, [r4, #16]
   16804:	cmp	r1, r0
   16808:	bne	16818 <__mempcpy_chk@plt+0x5830>
   1680c:	ldr	r0, [r4, #36]	; 0x24
   16810:	cmp	r0, #0
   16814:	beq	16830 <__mempcpy_chk@plt+0x5848>
   16818:	mov	r0, r4
   1681c:	mov	r2, r6
   16820:	mov	r3, r5
   16824:	sub	sp, fp, #16
   16828:	pop	{r4, r5, r6, r7, fp, lr}
   1682c:	b	10f70 <fseeko64@plt>
   16830:	ldr	r7, [fp, #8]
   16834:	mov	r0, r4
   16838:	bl	10f4c <fileno@plt>
   1683c:	mov	r2, r6
   16840:	mov	r3, r5
   16844:	str	r7, [sp]
   16848:	bl	10e74 <lseek64@plt>
   1684c:	and	r2, r0, r1
   16850:	cmn	r2, #1
   16854:	mvneq	r0, #0
   16858:	subeq	sp, fp, #16
   1685c:	popeq	{r4, r5, r6, r7, fp, pc}
   16860:	strd	r0, [r4, #80]	; 0x50
   16864:	ldr	r0, [r4]
   16868:	bic	r0, r0, #16
   1686c:	str	r0, [r4]
   16870:	mov	r0, #0
   16874:	sub	sp, fp, #16
   16878:	pop	{r4, r5, r6, r7, fp, pc}
   1687c:	ldrb	r2, [r0]
   16880:	cmp	r2, #0
   16884:	beq	168b0 <__mempcpy_chk@plt+0x58c8>
   16888:	add	r3, r0, #1
   1688c:	mov	r0, #0
   16890:	ror	r0, r0, #23
   16894:	uxtab	r0, r0, r2
   16898:	ldrb	r2, [r3], #1
   1689c:	cmp	r2, #0
   168a0:	bne	16890 <__mempcpy_chk@plt+0x58a8>
   168a4:	udiv	r2, r0, r1
   168a8:	mls	r0, r2, r1, r0
   168ac:	bx	lr
   168b0:	mov	r0, #0
   168b4:	udiv	r2, r0, r1
   168b8:	mls	r0, r2, r1, r0
   168bc:	bx	lr
   168c0:	push	{fp, lr}
   168c4:	mov	fp, sp
   168c8:	mov	r0, #14
   168cc:	bl	10fa0 <nl_langinfo@plt>
   168d0:	movw	r1, #27929	; 0x6d19
   168d4:	cmp	r0, #0
   168d8:	movt	r1, #1
   168dc:	movne	r1, r0
   168e0:	movw	r0, #30993	; 0x7911
   168e4:	ldrb	r2, [r1]
   168e8:	movt	r0, #1
   168ec:	cmp	r2, #0
   168f0:	movne	r0, r1
   168f4:	pop	{fp, pc}
   168f8:	push	{r4, r5, r6, r7, fp, lr}
   168fc:	add	fp, sp, #16
   16900:	sub	sp, sp, #8
   16904:	add	r5, sp, #4
   16908:	cmp	r0, #0
   1690c:	mov	r7, r2
   16910:	mov	r4, r1
   16914:	movne	r5, r0
   16918:	mov	r0, r5
   1691c:	bl	10e98 <mbrtowc@plt>
   16920:	mov	r6, r0
   16924:	cmp	r7, #0
   16928:	beq	1694c <__mempcpy_chk@plt+0x5964>
   1692c:	cmn	r6, #2
   16930:	bcc	1694c <__mempcpy_chk@plt+0x5964>
   16934:	mov	r0, #0
   16938:	bl	16994 <__mempcpy_chk@plt+0x59ac>
   1693c:	cmp	r0, #0
   16940:	ldrbeq	r0, [r4]
   16944:	moveq	r6, #1
   16948:	streq	r0, [r5]
   1694c:	mov	r0, r6
   16950:	sub	sp, fp, #16
   16954:	pop	{r4, r5, r6, r7, fp, pc}
   16958:	cmp	r2, #0
   1695c:	beq	1698c <__mempcpy_chk@plt+0x59a4>
   16960:	mvn	r3, #0
   16964:	udiv	r3, r3, r2
   16968:	cmp	r3, r1
   1696c:	bcs	1698c <__mempcpy_chk@plt+0x59a4>
   16970:	push	{fp, lr}
   16974:	mov	fp, sp
   16978:	bl	10f1c <__errno_location@plt>
   1697c:	mov	r1, #12
   16980:	str	r1, [r0]
   16984:	mov	r0, #0
   16988:	pop	{fp, pc}
   1698c:	mul	r1, r2, r1
   16990:	b	165fc <__mempcpy_chk@plt+0x5614>
   16994:	push	{r4, sl, fp, lr}
   16998:	add	fp, sp, #8
   1699c:	sub	sp, sp, #264	; 0x108
   169a0:	add	r1, sp, #7
   169a4:	movw	r2, #257	; 0x101
   169a8:	bl	169f8 <__mempcpy_chk@plt+0x5a10>
   169ac:	mov	r4, #0
   169b0:	cmp	r0, #0
   169b4:	bne	169ec <__mempcpy_chk@plt+0x5a04>
   169b8:	movw	r1, #30999	; 0x7917
   169bc:	add	r0, sp, #7
   169c0:	movt	r1, #1
   169c4:	bl	10db4 <strcmp@plt>
   169c8:	cmp	r0, #0
   169cc:	beq	169ec <__mempcpy_chk@plt+0x5a04>
   169d0:	movw	r1, #31001	; 0x7919
   169d4:	add	r0, sp, #7
   169d8:	movt	r1, #1
   169dc:	bl	10db4 <strcmp@plt>
   169e0:	mov	r4, r0
   169e4:	cmp	r0, #0
   169e8:	movwne	r4, #1
   169ec:	mov	r0, r4
   169f0:	sub	sp, fp, #8
   169f4:	pop	{r4, sl, fp, pc}
   169f8:	push	{r4, r5, r6, r7, fp, lr}
   169fc:	add	fp, sp, #16
   16a00:	mov	r4, r1
   16a04:	mov	r1, #0
   16a08:	mov	r6, r2
   16a0c:	bl	10f88 <setlocale@plt>
   16a10:	cmp	r0, #0
   16a14:	beq	16a44 <__mempcpy_chk@plt+0x5a5c>
   16a18:	mov	r7, r0
   16a1c:	bl	10f10 <strlen@plt>
   16a20:	cmp	r0, r6
   16a24:	bcs	16a64 <__mempcpy_chk@plt+0x5a7c>
   16a28:	add	r2, r0, #1
   16a2c:	mov	r0, r4
   16a30:	mov	r1, r7
   16a34:	bl	10dfc <memcpy@plt>
   16a38:	mov	r5, #0
   16a3c:	mov	r0, r5
   16a40:	pop	{r4, r5, r6, r7, fp, pc}
   16a44:	cmp	r6, #0
   16a48:	mov	r5, #22
   16a4c:	movne	r0, #0
   16a50:	strbne	r0, [r4]
   16a54:	movne	r0, r5
   16a58:	popne	{r4, r5, r6, r7, fp, pc}
   16a5c:	mov	r0, r5
   16a60:	pop	{r4, r5, r6, r7, fp, pc}
   16a64:	mov	r5, #34	; 0x22
   16a68:	cmp	r6, #0
   16a6c:	beq	16a8c <__mempcpy_chk@plt+0x5aa4>
   16a70:	sub	r6, r6, #1
   16a74:	mov	r0, r4
   16a78:	mov	r1, r7
   16a7c:	mov	r2, r6
   16a80:	bl	10dfc <memcpy@plt>
   16a84:	mov	r0, #0
   16a88:	strb	r0, [r4, r6]
   16a8c:	mov	r0, r5
   16a90:	pop	{r4, r5, r6, r7, fp, pc}
   16a94:	mov	r1, #0
   16a98:	b	10f88 <setlocale@plt>
   16a9c:	cmp	r3, #0
   16aa0:	cmpeq	r2, #0
   16aa4:	bne	16abc <__mempcpy_chk@plt+0x5ad4>
   16aa8:	cmp	r1, #0
   16aac:	cmpeq	r0, #0
   16ab0:	mvnne	r1, #0
   16ab4:	mvnne	r0, #0
   16ab8:	b	16ad8 <__mempcpy_chk@plt+0x5af0>
   16abc:	sub	sp, sp, #8
   16ac0:	push	{sp, lr}
   16ac4:	bl	16ae8 <__mempcpy_chk@plt+0x5b00>
   16ac8:	ldr	lr, [sp, #4]
   16acc:	add	sp, sp, #8
   16ad0:	pop	{r2, r3}
   16ad4:	bx	lr
   16ad8:	push	{r1, lr}
   16adc:	mov	r0, #8
   16ae0:	bl	10da8 <raise@plt>
   16ae4:	pop	{r1, pc}
   16ae8:	cmp	r1, r3
   16aec:	cmpeq	r0, r2
   16af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16af4:	mov	r4, r0
   16af8:	movcc	r0, #0
   16afc:	mov	r5, r1
   16b00:	ldr	lr, [sp, #36]	; 0x24
   16b04:	movcc	r1, r0
   16b08:	bcc	16c04 <__mempcpy_chk@plt+0x5c1c>
   16b0c:	cmp	r3, #0
   16b10:	clzeq	ip, r2
   16b14:	clzne	ip, r3
   16b18:	addeq	ip, ip, #32
   16b1c:	cmp	r5, #0
   16b20:	clzeq	r1, r4
   16b24:	addeq	r1, r1, #32
   16b28:	clzne	r1, r5
   16b2c:	sub	ip, ip, r1
   16b30:	sub	sl, ip, #32
   16b34:	lsl	r9, r3, ip
   16b38:	rsb	fp, ip, #32
   16b3c:	orr	r9, r9, r2, lsl sl
   16b40:	orr	r9, r9, r2, lsr fp
   16b44:	lsl	r8, r2, ip
   16b48:	cmp	r5, r9
   16b4c:	cmpeq	r4, r8
   16b50:	movcc	r0, #0
   16b54:	movcc	r1, r0
   16b58:	bcc	16b74 <__mempcpy_chk@plt+0x5b8c>
   16b5c:	mov	r0, #1
   16b60:	subs	r4, r4, r8
   16b64:	lsl	r1, r0, sl
   16b68:	orr	r1, r1, r0, lsr fp
   16b6c:	lsl	r0, r0, ip
   16b70:	sbc	r5, r5, r9
   16b74:	cmp	ip, #0
   16b78:	beq	16c04 <__mempcpy_chk@plt+0x5c1c>
   16b7c:	lsr	r6, r8, #1
   16b80:	orr	r6, r6, r9, lsl #31
   16b84:	lsr	r7, r9, #1
   16b88:	mov	r2, ip
   16b8c:	b	16bb0 <__mempcpy_chk@plt+0x5bc8>
   16b90:	subs	r3, r4, r6
   16b94:	sbc	r8, r5, r7
   16b98:	adds	r3, r3, r3
   16b9c:	adc	r8, r8, r8
   16ba0:	adds	r4, r3, #1
   16ba4:	adc	r5, r8, #0
   16ba8:	subs	r2, r2, #1
   16bac:	beq	16bcc <__mempcpy_chk@plt+0x5be4>
   16bb0:	cmp	r5, r7
   16bb4:	cmpeq	r4, r6
   16bb8:	bcs	16b90 <__mempcpy_chk@plt+0x5ba8>
   16bbc:	adds	r4, r4, r4
   16bc0:	adc	r5, r5, r5
   16bc4:	subs	r2, r2, #1
   16bc8:	bne	16bb0 <__mempcpy_chk@plt+0x5bc8>
   16bcc:	lsr	r3, r4, ip
   16bd0:	orr	r3, r3, r5, lsl fp
   16bd4:	lsr	r2, r5, ip
   16bd8:	orr	r3, r3, r5, lsr sl
   16bdc:	adds	r0, r0, r4
   16be0:	mov	r4, r3
   16be4:	lsl	r3, r2, ip
   16be8:	orr	r3, r3, r4, lsl sl
   16bec:	lsl	ip, r4, ip
   16bf0:	orr	r3, r3, r4, lsr fp
   16bf4:	adc	r1, r1, r5
   16bf8:	subs	r0, r0, ip
   16bfc:	mov	r5, r2
   16c00:	sbc	r1, r1, r3
   16c04:	cmp	lr, #0
   16c08:	strdne	r4, [lr]
   16c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16c14:	mov	r7, r0
   16c18:	ldr	r6, [pc, #72]	; 16c68 <__mempcpy_chk@plt+0x5c80>
   16c1c:	ldr	r5, [pc, #72]	; 16c6c <__mempcpy_chk@plt+0x5c84>
   16c20:	add	r6, pc, r6
   16c24:	add	r5, pc, r5
   16c28:	sub	r6, r6, r5
   16c2c:	mov	r8, r1
   16c30:	mov	r9, r2
   16c34:	bl	10d70 <calloc@plt-0x20>
   16c38:	asrs	r6, r6, #2
   16c3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c40:	mov	r4, #0
   16c44:	add	r4, r4, #1
   16c48:	ldr	r3, [r5], #4
   16c4c:	mov	r2, r9
   16c50:	mov	r1, r8
   16c54:	mov	r0, r7
   16c58:	blx	r3
   16c5c:	cmp	r6, r4
   16c60:	bne	16c44 <__mempcpy_chk@plt+0x5c5c>
   16c64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c68:	andeq	r1, r1, r4, ror #5
   16c6c:	ldrdeq	r1, [r1], -ip
   16c70:	bx	lr
   16c74:	ldr	r3, [pc, #12]	; 16c88 <__mempcpy_chk@plt+0x5ca0>
   16c78:	mov	r1, #0
   16c7c:	add	r3, pc, r3
   16c80:	ldr	r2, [r3]
   16c84:	b	10f28 <__cxa_atexit@plt>
   16c88:	andeq	r1, r1, r0, ror #8

Disassembly of section .fini:

00016c8c <.fini>:
   16c8c:	push	{r3, lr}
   16c90:	pop	{r3, pc}
