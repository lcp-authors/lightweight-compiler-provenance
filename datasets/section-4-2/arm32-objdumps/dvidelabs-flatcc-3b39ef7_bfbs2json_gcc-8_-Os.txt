
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

00010840 <.init>:
   10840:	push	{r3, lr}
   10844:	bl	109c8 <_start@@Base+0x3c>
   10848:	pop	{r3, pc}

Disassembly of section .plt:

0001084c <printf@plt-0x14>:
   1084c:	push	{lr}		; (str lr, [sp, #-4]!)
   10850:	ldr	lr, [pc, #4]	; 1085c <printf@plt-0x4>
   10854:	add	lr, pc, lr
   10858:	ldr	pc, [lr, #8]!
   1085c:	andeq	r1, r1, r4, lsr #15

00010860 <printf@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #69632	; 0x11000
   10868:	ldr	pc, [ip, #1956]!	; 0x7a4

0001086c <fopen@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #69632	; 0x11000
   10874:	ldr	pc, [ip, #1948]!	; 0x79c

00010878 <free@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #69632	; 0x11000
   10880:	ldr	pc, [ip, #1940]!	; 0x794

00010884 <ftell@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #69632	; 0x11000
   1088c:	ldr	pc, [ip, #1932]!	; 0x78c

00010890 <rewind@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #69632	; 0x11000
   10898:	ldr	pc, [ip, #1924]!	; 0x784

0001089c <fread@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #69632	; 0x11000
   108a4:	ldr	pc, [ip, #1916]!	; 0x77c

000108a8 <puts@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #69632	; 0x11000
   108b0:	ldr	pc, [ip, #1908]!	; 0x774

000108b4 <malloc@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #69632	; 0x11000
   108bc:	ldr	pc, [ip, #1900]!	; 0x76c

000108c0 <__libc_start_main@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #69632	; 0x11000
   108c8:	ldr	pc, [ip, #1892]!	; 0x764

000108cc <__gmon_start__@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #69632	; 0x11000
   108d4:	ldr	pc, [ip, #1884]!	; 0x75c

000108d8 <exit@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #69632	; 0x11000
   108e0:	ldr	pc, [ip, #1876]!	; 0x754

000108e4 <fprintf@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1868]!	; 0x74c

000108f0 <putchar@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1860]!	; 0x744

000108fc <fclose@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1852]!	; 0x73c

00010908 <fseek@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1844]!	; 0x734

00010914 <fputs@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1836]!	; 0x72c

00010920 <abort@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1828]!	; 0x724

0001092c <__assert_fail@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1820]!	; 0x71c

Disassembly of section .text:

00010938 <main@@Base>:
   10938:	cmp	r0, #2
   1093c:	beq	10974 <main@@Base+0x3c>
   10940:	push	{r4, lr}
   10944:	ldr	r4, [pc, #48]	; 1097c <main@@Base+0x44>
   10948:	ldr	r0, [pc, #48]	; 10980 <main@@Base+0x48>
   1094c:	ldr	r1, [r4]
   10950:	bl	10914 <fputs@plt>
   10954:	ldr	r0, [pc, #40]	; 10984 <main@@Base+0x4c>
   10958:	ldr	r1, [r4]
   1095c:	bl	10914 <fputs@plt>
   10960:	ldr	r0, [pc, #32]	; 10988 <main@@Base+0x50>
   10964:	ldr	r1, [r4]
   10968:	bl	10914 <fputs@plt>
   1096c:	mvn	r0, #0
   10970:	bl	108d8 <exit@plt>
   10974:	ldr	r0, [r1, #4]
   10978:	b	11568 <load_and_dump_schema@@Base>
   1097c:	andeq	r2, r2, r0, rrx
   10980:	ldrdeq	r1, [r1], -r7
   10984:	strdeq	r1, [r1], -r4
   10988:	andeq	r1, r1, pc, lsr ip

0001098c <_start@@Base>:
   1098c:	mov	fp, #0
   10990:	mov	lr, #0
   10994:	pop	{r1}		; (ldr r1, [sp], #4)
   10998:	mov	r2, sp
   1099c:	push	{r2}		; (str r2, [sp, #-4]!)
   109a0:	push	{r0}		; (str r0, [sp, #-4]!)
   109a4:	ldr	ip, [pc, #16]	; 109bc <_start@@Base+0x30>
   109a8:	push	{ip}		; (str ip, [sp, #-4]!)
   109ac:	ldr	r0, [pc, #12]	; 109c0 <_start@@Base+0x34>
   109b0:	ldr	r3, [pc, #12]	; 109c4 <_start@@Base+0x38>
   109b4:	bl	108c0 <__libc_start_main@plt>
   109b8:	bl	10920 <abort@plt>
   109bc:	andeq	r1, r1, r4, lsr #14
   109c0:	andeq	r0, r1, r8, lsr r9
   109c4:	andeq	r1, r1, r4, asr #13
   109c8:	ldr	r3, [pc, #20]	; 109e4 <_start@@Base+0x58>
   109cc:	ldr	r2, [pc, #20]	; 109e8 <_start@@Base+0x5c>
   109d0:	add	r3, pc, r3
   109d4:	ldr	r2, [r3, r2]
   109d8:	cmp	r2, #0
   109dc:	bxeq	lr
   109e0:	b	108cc <__gmon_start__@plt>
   109e4:	andeq	r1, r1, r8, lsr #12
   109e8:	andeq	r0, r0, r4, asr r0
   109ec:	ldr	r0, [pc, #24]	; 10a0c <_start@@Base+0x80>
   109f0:	ldr	r3, [pc, #24]	; 10a10 <_start@@Base+0x84>
   109f4:	cmp	r3, r0
   109f8:	bxeq	lr
   109fc:	ldr	r3, [pc, #16]	; 10a14 <_start@@Base+0x88>
   10a00:	cmp	r3, #0
   10a04:	bxeq	lr
   10a08:	bx	r3
   10a0c:	andeq	r2, r2, r0, rrx
   10a10:	andeq	r2, r2, r0, rrx
   10a14:	andeq	r0, r0, r0
   10a18:	ldr	r0, [pc, #36]	; 10a44 <_start@@Base+0xb8>
   10a1c:	ldr	r1, [pc, #36]	; 10a48 <_start@@Base+0xbc>
   10a20:	sub	r1, r1, r0
   10a24:	asr	r1, r1, #2
   10a28:	add	r1, r1, r1, lsr #31
   10a2c:	asrs	r1, r1, #1
   10a30:	bxeq	lr
   10a34:	ldr	r3, [pc, #16]	; 10a4c <_start@@Base+0xc0>
   10a38:	cmp	r3, #0
   10a3c:	bxeq	lr
   10a40:	bx	r3
   10a44:	andeq	r2, r2, r0, rrx
   10a48:	andeq	r2, r2, r0, rrx
   10a4c:	andeq	r0, r0, r0
   10a50:	push	{r4, lr}
   10a54:	ldr	r4, [pc, #24]	; 10a74 <_start@@Base+0xe8>
   10a58:	ldrb	r3, [r4]
   10a5c:	cmp	r3, #0
   10a60:	popne	{r4, pc}
   10a64:	bl	109ec <_start@@Base+0x60>
   10a68:	mov	r3, #1
   10a6c:	strb	r3, [r4]
   10a70:	pop	{r4, pc}
   10a74:	andeq	r2, r2, r4, rrx
   10a78:	b	10a18 <_start@@Base+0x8c>
   10a7c:	subs	r2, r0, #0
   10a80:	bne	10a9c <_start@@Base+0x110>
   10a84:	push	{r4, lr}
   10a88:	mov	r2, #147	; 0x93
   10a8c:	ldr	r3, [pc, #52]	; 10ac8 <_start@@Base+0x13c>
   10a90:	ldr	r1, [pc, #52]	; 10acc <_start@@Base+0x140>
   10a94:	ldr	r0, [pc, #52]	; 10ad0 <_start@@Base+0x144>
   10a98:	bl	1092c <__assert_fail@plt>
   10a9c:	ldr	r3, [r2]
   10aa0:	sub	r3, r2, r3
   10aa4:	ldrh	r1, [r3]
   10aa8:	cmp	r1, #5
   10aac:	bls	10ac0 <_start@@Base+0x134>
   10ab0:	ldrh	r0, [r3, #4]
   10ab4:	cmp	r0, #0
   10ab8:	ldrsbne	r0, [r2, r0]
   10abc:	bx	lr
   10ac0:	mov	r0, #0
   10ac4:	bx	lr
   10ac8:	andeq	r1, r1, r4, lsr r7
   10acc:	strdeq	r1, [r1], -r2
   10ad0:	andeq	r1, r1, r0, asr r9
   10ad4:	cmp	r0, #0
   10ad8:	bxeq	lr
   10adc:	sub	sp, sp, #8
   10ae0:	ldr	r3, [pc, #28]	; 10b04 <_start@@Base+0x178>
   10ae4:	ldr	r2, [r0, #4]
   10ae8:	str	r3, [sp, #4]
   10aec:	cmp	r2, r3
   10af0:	ldreq	r3, [r0]
   10af4:	movne	r0, #0
   10af8:	addeq	r0, r0, r3
   10afc:	add	sp, sp, #8
   10b00:	bx	lr
   10b04:	movtpl	r4, #9794	; 0x2642

00010b08 <print_type@@Base>:
   10b08:	push	{r4, lr}
   10b0c:	mov	r4, r0
   10b10:	mov	r0, #123	; 0x7b
   10b14:	bl	108f0 <putchar@plt>
   10b18:	cmp	r4, #0
   10b1c:	bne	10b34 <print_type@@Base+0x2c>
   10b20:	ldr	r3, [pc, #296]	; 10c50 <print_type@@Base+0x148>
   10b24:	mov	r2, #147	; 0x93
   10b28:	ldr	r1, [pc, #292]	; 10c54 <print_type@@Base+0x14c>
   10b2c:	ldr	r0, [pc, #292]	; 10c58 <print_type@@Base+0x150>
   10b30:	bl	1092c <__assert_fail@plt>
   10b34:	ldr	r3, [r4]
   10b38:	sub	r3, r4, r3
   10b3c:	ldrh	r2, [r3]
   10b40:	cmp	r2, #5
   10b44:	bls	10c48 <print_type@@Base+0x140>
   10b48:	ldrh	r3, [r3, #4]
   10b4c:	cmp	r3, #0
   10b50:	beq	10c48 <print_type@@Base+0x140>
   10b54:	mov	r0, r4
   10b58:	bl	10a7c <_start@@Base+0xf0>
   10b5c:	uxtb	r0, r0
   10b60:	cmp	r0, #16
   10b64:	ldrls	r3, [pc, #240]	; 10c5c <print_type@@Base+0x154>
   10b68:	ldrhi	r1, [pc, #240]	; 10c60 <print_type@@Base+0x158>
   10b6c:	addls	r3, r3, r0, lsl #2
   10b70:	ldr	r0, [pc, #236]	; 10c64 <print_type@@Base+0x15c>
   10b74:	ldrls	r1, [r3, #64]	; 0x40
   10b78:	bl	10860 <printf@plt>
   10b7c:	mov	r3, #0
   10b80:	ldr	r2, [r4]
   10b84:	sub	r2, r4, r2
   10b88:	ldrh	r1, [r2]
   10b8c:	cmp	r1, #7
   10b90:	bls	10bdc <print_type@@Base+0xd4>
   10b94:	ldrh	r2, [r2, #6]
   10b98:	cmp	r2, #0
   10b9c:	beq	10bdc <print_type@@Base+0xd4>
   10ba0:	cmp	r3, #0
   10ba4:	bne	10bb0 <print_type@@Base+0xa8>
   10ba8:	mov	r0, #44	; 0x2c
   10bac:	bl	108f0 <putchar@plt>
   10bb0:	mov	r0, r4
   10bb4:	bl	10a7c <_start@@Base+0xf0>
   10bb8:	uxtb	r0, r0
   10bbc:	cmp	r0, #16
   10bc0:	ldrls	r3, [pc, #148]	; 10c5c <print_type@@Base+0x154>
   10bc4:	ldrhi	r1, [pc, #148]	; 10c60 <print_type@@Base+0x158>
   10bc8:	addls	r3, r3, r0, lsl #2
   10bcc:	ldr	r0, [pc, #148]	; 10c68 <print_type@@Base+0x160>
   10bd0:	ldrls	r1, [r3, #64]	; 0x40
   10bd4:	bl	10860 <printf@plt>
   10bd8:	mov	r3, #0
   10bdc:	ldr	r2, [r4]
   10be0:	sub	r2, r4, r2
   10be4:	ldrh	r1, [r2]
   10be8:	cmp	r1, #9
   10bec:	bls	10c3c <print_type@@Base+0x134>
   10bf0:	ldrh	r2, [r2, #8]
   10bf4:	cmp	r2, #0
   10bf8:	beq	10c3c <print_type@@Base+0x134>
   10bfc:	cmp	r3, #0
   10c00:	bne	10c0c <print_type@@Base+0x104>
   10c04:	mov	r0, #44	; 0x2c
   10c08:	bl	108f0 <putchar@plt>
   10c0c:	ldr	r3, [r4]
   10c10:	sub	r3, r4, r3
   10c14:	ldrh	r2, [r3]
   10c18:	cmp	r2, #9
   10c1c:	bls	10c30 <print_type@@Base+0x128>
   10c20:	ldrh	r3, [r3, #8]
   10c24:	cmp	r3, #0
   10c28:	ldrne	r1, [r4, r3]
   10c2c:	bne	10c34 <print_type@@Base+0x12c>
   10c30:	mvn	r1, #0
   10c34:	ldr	r0, [pc, #48]	; 10c6c <print_type@@Base+0x164>
   10c38:	bl	10860 <printf@plt>
   10c3c:	mov	r0, #125	; 0x7d
   10c40:	pop	{r4, lr}
   10c44:	b	108f0 <putchar@plt>
   10c48:	mov	r3, #1
   10c4c:	b	10b80 <print_type@@Base+0x78>
   10c50:	andeq	r1, r1, lr, asr #14
   10c54:	strdeq	r1, [r1], -r2
   10c58:	andeq	r1, r1, r0, asr r9
   10c5c:	andeq	r1, r1, r4, lsr r7
   10c60:	andeq	r1, r1, lr, lsr ip
   10c64:	andeq	r1, r1, r6, ror r9
   10c68:	andeq	r1, r1, r7, lsl #19
   10c6c:	muleq	r1, r6, r9

00010c70 <print_object@@Base>:
   10c70:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c74:	subs	r5, r0, #0
   10c78:	moveq	r2, #224	; 0xe0
   10c7c:	ldreq	r3, [pc, #832]	; 10fc4 <print_object@@Base+0x354>
   10c80:	beq	10e1c <print_object@@Base+0x1ac>
   10c84:	ldr	r3, [r5]
   10c88:	sub	r3, r5, r3
   10c8c:	ldrh	r2, [r3]
   10c90:	cmp	r2, #7
   10c94:	bls	10ccc <print_object@@Base+0x5c>
   10c98:	ldrh	r2, [r3, #6]
   10c9c:	cmp	r2, #0
   10ca0:	beq	10ccc <print_object@@Base+0x5c>
   10ca4:	add	r8, r5, r2
   10ca8:	ldrh	r3, [r3, #4]
   10cac:	ldr	r2, [r5, r2]
   10cb0:	cmp	r3, #0
   10cb4:	add	r2, r2, #4
   10cb8:	add	r8, r8, r2
   10cbc:	bne	10ce0 <print_object@@Base+0x70>
   10cc0:	ldr	r3, [pc, #768]	; 10fc8 <print_object@@Base+0x358>
   10cc4:	mov	r2, #218	; 0xda
   10cc8:	b	10cd4 <print_object@@Base+0x64>
   10ccc:	ldr	r3, [pc, #752]	; 10fc4 <print_object@@Base+0x354>
   10cd0:	mov	r2, #224	; 0xe0
   10cd4:	ldr	r1, [pc, #752]	; 10fcc <print_object@@Base+0x35c>
   10cd8:	ldr	r0, [pc, #752]	; 10fd0 <print_object@@Base+0x360>
   10cdc:	bl	1092c <__assert_fail@plt>
   10ce0:	add	r1, r5, r3
   10ce4:	ldr	r3, [r5, r3]
   10ce8:	mov	sl, r8
   10cec:	mov	r9, #0
   10cf0:	ldr	fp, [pc, #732]	; 10fd4 <print_object@@Base+0x364>
   10cf4:	ldr	r0, [pc, #732]	; 10fd8 <print_object@@Base+0x368>
   10cf8:	add	r3, r3, #4
   10cfc:	add	r1, r1, r3
   10d00:	bl	10860 <printf@plt>
   10d04:	ldr	r0, [pc, #720]	; 10fdc <print_object@@Base+0x36c>
   10d08:	bl	10860 <printf@plt>
   10d0c:	cmp	r8, #0
   10d10:	beq	10d20 <print_object@@Base+0xb0>
   10d14:	ldr	r3, [r8, #-4]
   10d18:	cmp	r9, r3
   10d1c:	bcc	10dd0 <print_object@@Base+0x160>
   10d20:	mov	r0, #93	; 0x5d
   10d24:	bl	108f0 <putchar@plt>
   10d28:	ldr	r3, [r5]
   10d2c:	sub	r3, r5, r3
   10d30:	ldrh	r2, [r3]
   10d34:	cmp	r2, #9
   10d38:	bls	10d68 <print_object@@Base+0xf8>
   10d3c:	ldrh	r3, [r3, #8]
   10d40:	cmp	r3, #0
   10d44:	beq	10d68 <print_object@@Base+0xf8>
   10d48:	ldrb	r1, [r5, r3]
   10d4c:	ldr	r2, [pc, #652]	; 10fe0 <print_object@@Base+0x370>
   10d50:	ldr	r3, [pc, #652]	; 10fe4 <print_object@@Base+0x374>
   10d54:	cmp	r1, #0
   10d58:	ldr	r0, [pc, #648]	; 10fe8 <print_object@@Base+0x378>
   10d5c:	movne	r1, r2
   10d60:	moveq	r1, r3
   10d64:	bl	10860 <printf@plt>
   10d68:	ldr	r3, [r5]
   10d6c:	sub	r3, r5, r3
   10d70:	ldrh	r2, [r3]
   10d74:	cmp	r2, #11
   10d78:	bls	10d94 <print_object@@Base+0x124>
   10d7c:	ldrh	r3, [r3, #10]
   10d80:	cmp	r3, #0
   10d84:	beq	10d94 <print_object@@Base+0x124>
   10d88:	ldr	r0, [pc, #604]	; 10fec <print_object@@Base+0x37c>
   10d8c:	ldr	r1, [r5, r3]
   10d90:	bl	10860 <printf@plt>
   10d94:	ldr	r3, [r5]
   10d98:	sub	r3, r5, r3
   10d9c:	ldrh	r2, [r3]
   10da0:	cmp	r2, #13
   10da4:	bls	10dc0 <print_object@@Base+0x150>
   10da8:	ldrh	r3, [r3, #12]
   10dac:	cmp	r3, #0
   10db0:	beq	10dc0 <print_object@@Base+0x150>
   10db4:	ldr	r0, [pc, #564]	; 10ff0 <print_object@@Base+0x380>
   10db8:	ldr	r1, [r5, r3]
   10dbc:	bl	10860 <printf@plt>
   10dc0:	mov	r0, #125	; 0x7d
   10dc4:	add	sp, sp, #4
   10dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dcc:	b	108f0 <putchar@plt>
   10dd0:	cmp	r9, #0
   10dd4:	beq	10de0 <print_object@@Base+0x170>
   10dd8:	mov	r0, #44	; 0x2c
   10ddc:	bl	108f0 <putchar@plt>
   10de0:	ldr	r3, [r8, #-4]
   10de4:	mov	r6, sl
   10de8:	cmp	r9, r3
   10dec:	bcc	10e04 <print_object@@Base+0x194>
   10df0:	ldr	r3, [pc, #508]	; 10ff4 <print_object@@Base+0x384>
   10df4:	mov	r2, #192	; 0xc0
   10df8:	ldr	r1, [pc, #460]	; 10fcc <print_object@@Base+0x35c>
   10dfc:	ldr	r0, [pc, #500]	; 10ff8 <print_object@@Base+0x388>
   10e00:	b	10cdc <print_object@@Base+0x6c>
   10e04:	ldr	r7, [r6]
   10e08:	add	sl, sl, #4
   10e0c:	adds	r4, r6, r7
   10e10:	bne	10e28 <print_object@@Base+0x1b8>
   10e14:	ldr	r3, [pc, #480]	; 10ffc <print_object@@Base+0x38c>
   10e18:	mov	r2, #195	; 0xc3
   10e1c:	ldr	r1, [pc, #424]	; 10fcc <print_object@@Base+0x35c>
   10e20:	ldr	r0, [pc, #472]	; 11000 <print_object@@Base+0x390>
   10e24:	b	10cdc <print_object@@Base+0x6c>
   10e28:	ldr	r3, [r6, r7]
   10e2c:	sub	r3, r4, r3
   10e30:	ldrh	r2, [r3]
   10e34:	cmp	r2, #5
   10e38:	bls	10e80 <print_object@@Base+0x210>
   10e3c:	ldrh	r3, [r3, #4]
   10e40:	cmp	r3, #0
   10e44:	beq	10e80 <print_object@@Base+0x210>
   10e48:	add	r1, r4, r3
   10e4c:	ldr	r3, [r4, r3]
   10e50:	ldr	r0, [pc, #428]	; 11004 <print_object@@Base+0x394>
   10e54:	add	r3, r3, #4
   10e58:	add	r1, r1, r3
   10e5c:	bl	10860 <printf@plt>
   10e60:	ldr	r3, [r6, r7]
   10e64:	sub	r3, r4, r3
   10e68:	ldrh	r2, [r3]
   10e6c:	cmp	r2, #7
   10e70:	bhi	10e8c <print_object@@Base+0x21c>
   10e74:	ldr	r3, [pc, #396]	; 11008 <print_object@@Base+0x398>
   10e78:	mov	r2, #201	; 0xc9
   10e7c:	b	10cd4 <print_object@@Base+0x64>
   10e80:	ldr	r3, [pc, #372]	; 10ffc <print_object@@Base+0x38c>
   10e84:	mov	r2, #195	; 0xc3
   10e88:	b	10cd4 <print_object@@Base+0x64>
   10e8c:	ldrh	r3, [r3, #6]
   10e90:	cmp	r3, #0
   10e94:	beq	10e74 <print_object@@Base+0x204>
   10e98:	add	r0, r4, r3
   10e9c:	ldr	r3, [r4, r3]
   10ea0:	add	r0, r0, r3
   10ea4:	bl	10b08 <print_type@@Base>
   10ea8:	ldr	r3, [r6, r7]
   10eac:	sub	r3, r4, r3
   10eb0:	ldrh	r2, [r3]
   10eb4:	cmp	r2, #9
   10eb8:	bhi	10fa8 <print_object@@Base+0x338>
   10ebc:	ldr	r3, [r6, r7]
   10ec0:	sub	r3, r4, r3
   10ec4:	ldrh	r2, [r3]
   10ec8:	cmp	r2, #13
   10ecc:	bls	10ee8 <print_object@@Base+0x278>
   10ed0:	ldrh	r3, [r3, #12]
   10ed4:	cmp	r3, #0
   10ed8:	beq	10ee8 <print_object@@Base+0x278>
   10edc:	mov	r0, fp
   10ee0:	ldrd	r2, [r3, r4]
   10ee4:	bl	10860 <printf@plt>
   10ee8:	ldr	r3, [r6, r7]
   10eec:	sub	r3, r4, r3
   10ef0:	ldrh	r2, [r3]
   10ef4:	cmp	r2, #15
   10ef8:	bls	10f18 <print_object@@Base+0x2a8>
   10efc:	ldrh	r3, [r3, #14]
   10f00:	cmp	r3, #0
   10f04:	beq	10f18 <print_object@@Base+0x2a8>
   10f08:	add	r3, r4, r3
   10f0c:	ldr	r0, [pc, #248]	; 1100c <print_object@@Base+0x39c>
   10f10:	ldrd	r2, [r3]
   10f14:	bl	10860 <printf@plt>
   10f18:	ldr	r3, [r6, r7]
   10f1c:	sub	r3, r4, r3
   10f20:	ldrh	r2, [r3]
   10f24:	cmp	r2, #19
   10f28:	bls	10f58 <print_object@@Base+0x2e8>
   10f2c:	ldrh	r3, [r3, #18]
   10f30:	cmp	r3, #0
   10f34:	beq	10f58 <print_object@@Base+0x2e8>
   10f38:	ldrb	r1, [r4, r3]
   10f3c:	ldr	r2, [pc, #156]	; 10fe0 <print_object@@Base+0x370>
   10f40:	ldr	r3, [pc, #156]	; 10fe4 <print_object@@Base+0x374>
   10f44:	cmp	r1, #0
   10f48:	ldr	r0, [pc, #192]	; 11010 <print_object@@Base+0x3a0>
   10f4c:	movne	r1, r2
   10f50:	moveq	r1, r3
   10f54:	bl	10860 <printf@plt>
   10f58:	ldr	r3, [r6, r7]
   10f5c:	sub	r3, r4, r3
   10f60:	ldrh	r2, [r3]
   10f64:	cmp	r2, #21
   10f68:	bls	10f98 <print_object@@Base+0x328>
   10f6c:	ldrh	r3, [r3, #20]
   10f70:	cmp	r3, #0
   10f74:	beq	10f98 <print_object@@Base+0x328>
   10f78:	ldrb	r1, [r4, r3]
   10f7c:	ldr	r2, [pc, #92]	; 10fe0 <print_object@@Base+0x370>
   10f80:	ldr	r3, [pc, #92]	; 10fe4 <print_object@@Base+0x374>
   10f84:	cmp	r1, #0
   10f88:	ldr	r0, [pc, #132]	; 11014 <print_object@@Base+0x3a4>
   10f8c:	movne	r1, r2
   10f90:	moveq	r1, r3
   10f94:	bl	10860 <printf@plt>
   10f98:	mov	r0, #125	; 0x7d
   10f9c:	add	r9, r9, #1
   10fa0:	bl	108f0 <putchar@plt>
   10fa4:	b	10d0c <print_object@@Base+0x9c>
   10fa8:	ldrh	r3, [r3, #8]
   10fac:	cmp	r3, #0
   10fb0:	beq	10ebc <print_object@@Base+0x24c>
   10fb4:	ldrh	r1, [r4, r3]
   10fb8:	ldr	r0, [pc, #88]	; 11018 <print_object@@Base+0x3a8>
   10fbc:	bl	10860 <printf@plt>
   10fc0:	b	10ebc <print_object@@Base+0x24c>
   10fc4:			; <UNDEFINED> instruction: 0x000117b8
   10fc8:	ldrdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10fcc:	strdeq	r1, [r1], -r2
   10fd0:	andeq	r1, r1, ip, lsr #19
   10fd4:	andeq	r1, r1, ip, lsr sl
   10fd8:	andeq	r1, r1, sp, asr #19
   10fdc:	ldrdeq	r1, [r1], -sl
   10fe0:	andeq	r1, r1, r1, lsr #19
   10fe4:	andeq	r1, r1, r6, lsr #19
   10fe8:	andeq	r1, r1, r4, lsl #21
   10fec:	muleq	r1, r4, sl
   10ff0:	andeq	r1, r1, r3, lsr #21
   10ff4:	andeq	r1, r1, r8, ror #15
   10ff8:	andeq	r1, r1, r6, ror #19
   10ffc:	andeq	r1, r1, r0, lsl #16
   11000:	andeq	r1, r1, r0, asr r9
   11004:	andeq	r1, r1, sp, lsl sl
   11008:	andeq	r1, r1, r6, lsl r8
   1100c:	andeq	r1, r1, r4, asr sl
   11010:	andeq	r1, r1, fp, ror #20
   11014:	andeq	r1, r1, sl, ror sl
   11018:	andeq	r1, r1, r2, lsr sl

0001101c <print_enum@@Base>:
   1101c:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11020:	subs	r4, r0, #0
   11024:	moveq	r2, #177	; 0xb1
   11028:	ldreq	r3, [pc, #612]	; 11294 <print_enum@@Base+0x278>
   1102c:	beq	111a0 <print_enum@@Base+0x184>
   11030:	ldr	r3, [r4]
   11034:	sub	r3, r4, r3
   11038:	ldrh	r2, [r3]
   1103c:	cmp	r2, #5
   11040:	bls	11088 <print_enum@@Base+0x6c>
   11044:	ldrh	r3, [r3, #4]
   11048:	cmp	r3, #0
   1104c:	beq	11088 <print_enum@@Base+0x6c>
   11050:	add	r1, r4, r3
   11054:	ldr	r3, [r4, r3]
   11058:	ldr	r0, [pc, #568]	; 11298 <print_enum@@Base+0x27c>
   1105c:	add	r3, r3, #4
   11060:	add	r1, r1, r3
   11064:	bl	10860 <printf@plt>
   11068:	ldr	r3, [r4]
   1106c:	sub	r3, r4, r3
   11070:	ldrh	r2, [r3]
   11074:	cmp	r2, #7
   11078:	bhi	1109c <print_enum@@Base+0x80>
   1107c:	ldr	r3, [pc, #536]	; 1129c <print_enum@@Base+0x280>
   11080:	mov	r2, #183	; 0xb7
   11084:	b	11090 <print_enum@@Base+0x74>
   11088:	ldr	r3, [pc, #516]	; 11294 <print_enum@@Base+0x278>
   1108c:	mov	r2, #177	; 0xb1
   11090:	ldr	r1, [pc, #520]	; 112a0 <print_enum@@Base+0x284>
   11094:	ldr	r0, [pc, #520]	; 112a4 <print_enum@@Base+0x288>
   11098:	bl	1092c <__assert_fail@plt>
   1109c:	ldrh	r3, [r3, #6]
   110a0:	cmp	r3, #0
   110a4:	beq	1107c <print_enum@@Base+0x60>
   110a8:	add	r7, r4, r3
   110ac:	ldr	r3, [r4, r3]
   110b0:	mov	r9, #0
   110b4:	ldr	fp, [pc, #492]	; 112a8 <print_enum@@Base+0x28c>
   110b8:	ldr	r0, [pc, #492]	; 112ac <print_enum@@Base+0x290>
   110bc:	add	r3, r3, #4
   110c0:	add	r7, r7, r3
   110c4:	mov	sl, r7
   110c8:	bl	10860 <printf@plt>
   110cc:	cmp	r7, #0
   110d0:	beq	110e0 <print_enum@@Base+0xc4>
   110d4:	ldr	r3, [r7, #-4]
   110d8:	cmp	r9, r3
   110dc:	bcc	11170 <print_enum@@Base+0x154>
   110e0:	mov	r0, #93	; 0x5d
   110e4:	bl	108f0 <putchar@plt>
   110e8:	ldr	r3, [r4]
   110ec:	sub	r3, r4, r3
   110f0:	ldrh	r2, [r3]
   110f4:	cmp	r2, #9
   110f8:	bls	11128 <print_enum@@Base+0x10c>
   110fc:	ldrh	r3, [r3, #8]
   11100:	cmp	r3, #0
   11104:	beq	11128 <print_enum@@Base+0x10c>
   11108:	ldrb	r1, [r4, r3]
   1110c:	ldr	r2, [pc, #412]	; 112b0 <print_enum@@Base+0x294>
   11110:	ldr	r3, [pc, #412]	; 112b4 <print_enum@@Base+0x298>
   11114:	cmp	r1, #0
   11118:	ldr	r0, [pc, #408]	; 112b8 <print_enum@@Base+0x29c>
   1111c:	movne	r1, r2
   11120:	moveq	r1, r3
   11124:	bl	10860 <printf@plt>
   11128:	ldr	r0, [pc, #396]	; 112bc <print_enum@@Base+0x2a0>
   1112c:	bl	10860 <printf@plt>
   11130:	ldr	r3, [r4]
   11134:	sub	r3, r4, r3
   11138:	ldrh	r2, [r3]
   1113c:	cmp	r2, #11
   11140:	bls	11288 <print_enum@@Base+0x26c>
   11144:	ldrh	r3, [r3, #10]
   11148:	cmp	r3, #0
   1114c:	beq	11288 <print_enum@@Base+0x26c>
   11150:	add	r0, r4, r3
   11154:	ldr	r3, [r4, r3]
   11158:	add	r0, r0, r3
   1115c:	bl	10b08 <print_type@@Base>
   11160:	mov	r0, #125	; 0x7d
   11164:	add	sp, sp, #4
   11168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1116c:	b	108f0 <putchar@plt>
   11170:	mov	r6, sl
   11174:	cmp	r9, #0
   11178:	ldr	r8, [r6]
   1117c:	add	sl, sl, #4
   11180:	add	r5, r6, r8
   11184:	beq	11190 <print_enum@@Base+0x174>
   11188:	mov	r0, #44	; 0x2c
   1118c:	bl	108f0 <putchar@plt>
   11190:	cmp	r5, #0
   11194:	bne	111ac <print_enum@@Base+0x190>
   11198:	ldr	r3, [pc, #288]	; 112c0 <print_enum@@Base+0x2a4>
   1119c:	mov	r2, #159	; 0x9f
   111a0:	ldr	r1, [pc, #248]	; 112a0 <print_enum@@Base+0x284>
   111a4:	ldr	r0, [pc, #280]	; 112c4 <print_enum@@Base+0x2a8>
   111a8:	b	11098 <print_enum@@Base+0x7c>
   111ac:	ldr	r3, [r6, r8]
   111b0:	sub	r3, r5, r3
   111b4:	ldrh	r2, [r3]
   111b8:	cmp	r2, #5
   111bc:	bls	11260 <print_enum@@Base+0x244>
   111c0:	ldrh	r3, [r3, #4]
   111c4:	cmp	r3, #0
   111c8:	beq	11260 <print_enum@@Base+0x244>
   111cc:	add	r1, r5, r3
   111d0:	ldr	r3, [r5, r3]
   111d4:	ldr	r0, [pc, #188]	; 11298 <print_enum@@Base+0x27c>
   111d8:	add	r3, r3, #4
   111dc:	add	r1, r1, r3
   111e0:	bl	10860 <printf@plt>
   111e4:	ldr	r3, [r6, r8]
   111e8:	sub	r3, r5, r3
   111ec:	ldrh	r2, [r3]
   111f0:	cmp	r2, #7
   111f4:	bhi	1126c <print_enum@@Base+0x250>
   111f8:	ldr	r3, [r6, r8]
   111fc:	sub	r3, r5, r3
   11200:	ldrh	r2, [r3]
   11204:	cmp	r2, #9
   11208:	bls	11250 <print_enum@@Base+0x234>
   1120c:	ldrh	r3, [r3, #8]
   11210:	cmp	r3, #0
   11214:	beq	11250 <print_enum@@Base+0x234>
   11218:	mov	r0, fp
   1121c:	bl	10860 <printf@plt>
   11220:	ldr	r3, [r6, r8]
   11224:	sub	r3, r5, r3
   11228:	ldrh	r2, [r3]
   1122c:	cmp	r2, #9
   11230:	movls	r0, #0
   11234:	bls	1124c <print_enum@@Base+0x230>
   11238:	ldrh	r0, [r3, #8]
   1123c:	cmp	r0, #0
   11240:	addne	r3, r5, r0
   11244:	ldrne	r0, [r5, r0]
   11248:	addne	r0, r3, r0
   1124c:	bl	10c70 <print_object@@Base>
   11250:	mov	r0, #125	; 0x7d
   11254:	add	r9, r9, #1
   11258:	bl	108f0 <putchar@plt>
   1125c:	b	110cc <print_enum@@Base+0xb0>
   11260:	ldr	r3, [pc, #88]	; 112c0 <print_enum@@Base+0x2a4>
   11264:	mov	r2, #159	; 0x9f
   11268:	b	11090 <print_enum@@Base+0x74>
   1126c:	ldrh	r3, [r3, #6]
   11270:	cmp	r3, #0
   11274:	beq	111f8 <print_enum@@Base+0x1dc>
   11278:	ldr	r0, [pc, #72]	; 112c8 <print_enum@@Base+0x2ac>
   1127c:	ldrd	r2, [r3, r5]
   11280:	bl	10860 <printf@plt>
   11284:	b	111f8 <print_enum@@Base+0x1dc>
   11288:	ldr	r3, [pc, #60]	; 112cc <print_enum@@Base+0x2b0>
   1128c:	mov	r2, #185	; 0xb9
   11290:	b	11090 <print_enum@@Base+0x74>
   11294:	andeq	r1, r1, ip, lsr #16
   11298:	andeq	r1, r1, sp, asr #19
   1129c:	andeq	r1, r1, r1, asr #16
   112a0:	strdeq	r1, [r1], -r2
   112a4:	andeq	r1, r1, ip, lsr #19
   112a8:	andeq	r1, r1, ip, asr #21
   112ac:			; <UNDEFINED> instruction: 0x00011ab2
   112b0:	andeq	r1, r1, r1, lsr #19
   112b4:	andeq	r1, r1, r6, lsr #19
   112b8:	ldrdeq	r1, [r1], -r7
   112bc:	andeq	r1, r1, r6, ror #21
   112c0:	andeq	r1, r1, r8, asr r8
   112c4:	andeq	r1, r1, r0, asr r9
   112c8:			; <UNDEFINED> instruction: 0x00011abe
   112cc:	andeq	r1, r1, r0, ror r8

000112d0 <print_schema@@Base>:
   112d0:	push	{r4, r5, r6, r7, r8, lr}
   112d4:	subs	r4, r0, #0
   112d8:	bne	112f0 <print_schema@@Base+0x20>
   112dc:	ldr	r3, [pc, #588]	; 11530 <print_schema@@Base+0x260>
   112e0:	mov	r2, #237	; 0xed
   112e4:	ldr	r1, [pc, #584]	; 11534 <print_schema@@Base+0x264>
   112e8:	ldr	r0, [pc, #584]	; 11538 <print_schema@@Base+0x268>
   112ec:	bl	1092c <__assert_fail@plt>
   112f0:	ldr	r3, [r4]
   112f4:	sub	r3, r4, r3
   112f8:	ldrh	r2, [r3]
   112fc:	cmp	r2, #5
   11300:	bls	11484 <print_schema@@Base+0x1b4>
   11304:	ldrh	r3, [r3, #4]
   11308:	cmp	r3, #0
   1130c:	beq	11484 <print_schema@@Base+0x1b4>
   11310:	add	r5, r4, r3
   11314:	ldr	r3, [r4, r3]
   11318:	mov	r0, #123	; 0x7b
   1131c:	mov	r6, #0
   11320:	add	r3, r3, #4
   11324:	add	r5, r5, r3
   11328:	mov	r7, r5
   1132c:	bl	108f0 <putchar@plt>
   11330:	ldr	r0, [pc, #516]	; 1153c <print_schema@@Base+0x26c>
   11334:	bl	10860 <printf@plt>
   11338:	cmp	r5, #0
   1133c:	beq	1134c <print_schema@@Base+0x7c>
   11340:	ldr	r3, [r5, #-4]
   11344:	cmp	r6, r3
   11348:	bcc	11498 <print_schema@@Base+0x1c8>
   1134c:	mov	r0, #93	; 0x5d
   11350:	bl	108f0 <putchar@plt>
   11354:	ldr	r3, [r4]
   11358:	sub	r3, r4, r3
   1135c:	ldrh	r2, [r3]
   11360:	cmp	r2, #7
   11364:	bls	114e4 <print_schema@@Base+0x214>
   11368:	ldrh	r3, [r3, #6]
   1136c:	cmp	r3, #0
   11370:	beq	114e4 <print_schema@@Base+0x214>
   11374:	add	r5, r4, r3
   11378:	ldr	r3, [r4, r3]
   1137c:	mov	r6, #0
   11380:	ldr	r0, [pc, #440]	; 11540 <print_schema@@Base+0x270>
   11384:	add	r3, r3, #4
   11388:	add	r5, r5, r3
   1138c:	mov	r7, r5
   11390:	bl	10860 <printf@plt>
   11394:	cmp	r5, #0
   11398:	beq	113a8 <print_schema@@Base+0xd8>
   1139c:	ldr	r3, [r5, #-4]
   113a0:	cmp	r6, r3
   113a4:	bcc	114f0 <print_schema@@Base+0x220>
   113a8:	mov	r0, #93	; 0x5d
   113ac:	bl	108f0 <putchar@plt>
   113b0:	ldr	r3, [r4]
   113b4:	sub	r3, r4, r3
   113b8:	ldrh	r2, [r3]
   113bc:	cmp	r2, #9
   113c0:	bls	113e8 <print_schema@@Base+0x118>
   113c4:	ldrh	r3, [r3, #8]
   113c8:	cmp	r3, #0
   113cc:	beq	113e8 <print_schema@@Base+0x118>
   113d0:	add	r1, r4, r3
   113d4:	ldr	r3, [r4, r3]
   113d8:	ldr	r0, [pc, #356]	; 11544 <print_schema@@Base+0x274>
   113dc:	add	r3, r3, #4
   113e0:	add	r1, r1, r3
   113e4:	bl	10860 <printf@plt>
   113e8:	ldr	r3, [r4]
   113ec:	sub	r3, r4, r3
   113f0:	ldrh	r2, [r3]
   113f4:	cmp	r2, #11
   113f8:	bls	11420 <print_schema@@Base+0x150>
   113fc:	ldrh	r3, [r3, #10]
   11400:	cmp	r3, #0
   11404:	beq	11420 <print_schema@@Base+0x150>
   11408:	add	r1, r4, r3
   1140c:	ldr	r3, [r4, r3]
   11410:	ldr	r0, [pc, #304]	; 11548 <print_schema@@Base+0x278>
   11414:	add	r3, r3, #4
   11418:	add	r1, r1, r3
   1141c:	bl	10860 <printf@plt>
   11420:	ldr	r3, [r4]
   11424:	sub	r3, r4, r3
   11428:	ldrh	r2, [r3]
   1142c:	cmp	r2, #13
   11430:	bls	11478 <print_schema@@Base+0x1a8>
   11434:	ldrh	r3, [r3, #12]
   11438:	cmp	r3, #0
   1143c:	beq	11478 <print_schema@@Base+0x1a8>
   11440:	ldr	r0, [pc, #260]	; 1154c <print_schema@@Base+0x27c>
   11444:	bl	10860 <printf@plt>
   11448:	ldr	r3, [r4]
   1144c:	sub	r3, r4, r3
   11450:	ldrh	r2, [r3]
   11454:	cmp	r2, #13
   11458:	movls	r0, #0
   1145c:	bls	11474 <print_schema@@Base+0x1a4>
   11460:	ldrh	r0, [r3, #12]
   11464:	cmp	r0, #0
   11468:	addne	r3, r4, r0
   1146c:	ldrne	r0, [r4, r0]
   11470:	addne	r0, r3, r0
   11474:	bl	10c70 <print_object@@Base>
   11478:	ldr	r0, [pc, #208]	; 11550 <print_schema@@Base+0x280>
   1147c:	pop	{r4, r5, r6, r7, r8, lr}
   11480:	b	108a8 <puts@plt>
   11484:	ldr	r3, [pc, #164]	; 11530 <print_schema@@Base+0x260>
   11488:	mov	r2, #237	; 0xed
   1148c:	ldr	r1, [pc, #160]	; 11534 <print_schema@@Base+0x264>
   11490:	ldr	r0, [pc, #188]	; 11554 <print_schema@@Base+0x284>
   11494:	b	112ec <print_schema@@Base+0x1c>
   11498:	cmp	r6, #0
   1149c:	beq	114a8 <print_schema@@Base+0x1d8>
   114a0:	mov	r0, #44	; 0x2c
   114a4:	bl	108f0 <putchar@plt>
   114a8:	ldr	r2, [r5, #-4]
   114ac:	mov	r3, r7
   114b0:	cmp	r6, r2
   114b4:	bcc	114cc <print_schema@@Base+0x1fc>
   114b8:	ldr	r3, [pc, #152]	; 11558 <print_schema@@Base+0x288>
   114bc:	mov	r2, #215	; 0xd7
   114c0:	ldr	r1, [pc, #108]	; 11534 <print_schema@@Base+0x264>
   114c4:	ldr	r0, [pc, #144]	; 1155c <print_schema@@Base+0x28c>
   114c8:	b	112ec <print_schema@@Base+0x1c>
   114cc:	ldr	r0, [r3]
   114d0:	add	r7, r7, #4
   114d4:	add	r6, r6, #1
   114d8:	add	r0, r3, r0
   114dc:	bl	10c70 <print_object@@Base>
   114e0:	b	11338 <print_schema@@Base+0x68>
   114e4:	ldr	r3, [pc, #116]	; 11560 <print_schema@@Base+0x290>
   114e8:	mov	r2, #238	; 0xee
   114ec:	b	1148c <print_schema@@Base+0x1bc>
   114f0:	cmp	r6, #0
   114f4:	beq	11500 <print_schema@@Base+0x230>
   114f8:	mov	r0, #44	; 0x2c
   114fc:	bl	108f0 <putchar@plt>
   11500:	ldr	r2, [r5, #-4]
   11504:	mov	r3, r7
   11508:	cmp	r6, r2
   1150c:	ldrcs	r3, [pc, #80]	; 11564 <print_schema@@Base+0x294>
   11510:	movcs	r2, #174	; 0xae
   11514:	bcs	114c0 <print_schema@@Base+0x1f0>
   11518:	ldr	r0, [r3]
   1151c:	add	r7, r7, #4
   11520:	add	r6, r6, #1
   11524:	add	r0, r3, r0
   11528:	bl	1101c <print_enum@@Base>
   1152c:	b	11394 <print_schema@@Base+0xc4>
   11530:	muleq	r1, r0, r8
   11534:	strdeq	r1, [r1], -r2
   11538:	andeq	r1, r1, r0, asr r9
   1153c:	strdeq	r1, [r1], -sl
   11540:	andeq	r1, r1, r6, lsl #22
   11544:	andeq	r1, r1, r1, lsl fp
   11548:	andeq	r1, r1, r4, lsr #22
   1154c:	andeq	r1, r1, r5, lsr fp
   11550:	andeq	r1, r1, r4, asr #22
   11554:	andeq	r1, r1, ip, lsr #19
   11558:	andeq	r1, r1, sl, lsr #17
   1155c:	andeq	r1, r1, r6, ror #19
   11560:	andeq	r1, r1, r3, asr #17
   11564:	ldrdeq	r1, [r1], -fp

00011568 <load_and_dump_schema@@Base>:
   11568:	push	{r4, r5, r6, r7, r8, lr}
   1156c:	mov	r8, r0
   11570:	ldr	r1, [pc, #308]	; 116ac <load_and_dump_schema@@Base+0x144>
   11574:	bl	1086c <fopen@plt>
   11578:	subs	r6, r0, #0
   1157c:	beq	115e4 <load_and_dump_schema@@Base+0x7c>
   11580:	mov	r2, #2
   11584:	mov	r1, #0
   11588:	bl	10908 <fseek@plt>
   1158c:	mov	r0, r6
   11590:	bl	10884 <ftell@plt>
   11594:	movw	r3, #10000	; 0x2710
   11598:	mov	r5, r0
   1159c:	cmp	r0, r3
   115a0:	bhi	115c8 <load_and_dump_schema@@Base+0x60>
   115a4:	mov	r0, r6
   115a8:	bl	10890 <rewind@plt>
   115ac:	cmp	r5, #0
   115b0:	movne	r0, r5
   115b4:	moveq	r0, #1
   115b8:	bl	108b4 <malloc@plt>
   115bc:	subs	r4, r0, #0
   115c0:	movne	r7, #0
   115c4:	bne	11608 <load_and_dump_schema@@Base+0xa0>
   115c8:	mov	r4, #0
   115cc:	mov	r0, r6
   115d0:	bl	108fc <fclose@plt>
   115d4:	cmp	r4, #0
   115d8:	beq	115e4 <load_and_dump_schema@@Base+0x7c>
   115dc:	mov	r0, r4
   115e0:	bl	10878 <free@plt>
   115e4:	ldr	r3, [pc, #196]	; 116b0 <load_and_dump_schema@@Base+0x148>
   115e8:	mov	r2, r8
   115ec:	mvn	r5, #0
   115f0:	ldr	r1, [pc, #188]	; 116b4 <load_and_dump_schema@@Base+0x14c>
   115f4:	ldr	r0, [r3]
   115f8:	bl	108e4 <fprintf@plt>
   115fc:	mov	r0, r5
   11600:	pop	{r4, r5, r6, r7, r8, pc}
   11604:	add	r7, r7, r0
   11608:	mov	r3, r6
   1160c:	sub	r2, r5, r7
   11610:	mov	r1, #1
   11614:	add	r0, r4, r7
   11618:	bl	1089c <fread@plt>
   1161c:	cmp	r0, #0
   11620:	bne	11604 <load_and_dump_schema@@Base+0x9c>
   11624:	cmp	r5, r7
   11628:	bne	115cc <load_and_dump_schema@@Base+0x64>
   1162c:	mov	r0, r6
   11630:	bl	108fc <fclose@plt>
   11634:	cmp	r5, #11
   11638:	bhi	11660 <load_and_dump_schema@@Base+0xf8>
   1163c:	ldr	r3, [pc, #108]	; 116b0 <load_and_dump_schema@@Base+0x148>
   11640:	mov	r2, r8
   11644:	ldr	r1, [pc, #108]	; 116b8 <load_and_dump_schema@@Base+0x150>
   11648:	ldr	r0, [r3]
   1164c:	bl	108e4 <fprintf@plt>
   11650:	mvn	r5, #0
   11654:	mov	r0, r4
   11658:	bl	10878 <free@plt>
   1165c:	b	115fc <load_and_dump_schema@@Base+0x94>
   11660:	mov	r0, r4
   11664:	bl	10ad4 <_start@@Base+0x148>
   11668:	subs	r5, r0, #0
   1166c:	bne	11690 <load_and_dump_schema@@Base+0x128>
   11670:	add	r0, r4, #4
   11674:	bl	10ad4 <_start@@Base+0x148>
   11678:	ldr	r3, [pc, #48]	; 116b0 <load_and_dump_schema@@Base+0x148>
   1167c:	subs	r5, r0, #0
   11680:	ldr	r1, [r3]
   11684:	beq	116a0 <load_and_dump_schema@@Base+0x138>
   11688:	ldr	r0, [pc, #44]	; 116bc <load_and_dump_schema@@Base+0x154>
   1168c:	bl	10914 <fputs@plt>
   11690:	mov	r0, r5
   11694:	mov	r5, #0
   11698:	bl	112d0 <print_schema@@Base>
   1169c:	b	11654 <load_and_dump_schema@@Base+0xec>
   116a0:	ldr	r0, [pc, #24]	; 116c0 <load_and_dump_schema@@Base+0x158>
   116a4:	bl	10914 <fputs@plt>
   116a8:	b	11650 <load_and_dump_schema@@Base+0xe8>
   116ac:	andeq	r1, r1, r6, asr #22
   116b0:	andeq	r2, r2, r0, rrx
   116b4:	andeq	r1, r1, r9, asr #22
   116b8:	andeq	r1, r1, r2, ror fp
   116bc:	muleq	r1, r2, fp
   116c0:			; <UNDEFINED> instruction: 0x00011bbb

000116c4 <__libc_csu_init@@Base>:
   116c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   116c8:	mov	r7, r0
   116cc:	ldr	r6, [pc, #72]	; 1171c <__libc_csu_init@@Base+0x58>
   116d0:	ldr	r5, [pc, #72]	; 11720 <__libc_csu_init@@Base+0x5c>
   116d4:	add	r6, pc, r6
   116d8:	add	r5, pc, r5
   116dc:	sub	r6, r6, r5
   116e0:	mov	r8, r1
   116e4:	mov	r9, r2
   116e8:	bl	10840 <printf@plt-0x20>
   116ec:	asrs	r6, r6, #2
   116f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   116f4:	mov	r4, #0
   116f8:	add	r4, r4, #1
   116fc:	ldr	r3, [r5], #4
   11700:	mov	r2, r9
   11704:	mov	r1, r8
   11708:	mov	r0, r7
   1170c:	blx	r3
   11710:	cmp	r6, r4
   11714:	bne	116f8 <__libc_csu_init@@Base+0x34>
   11718:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1171c:	andeq	r0, r1, r8, lsr r8
   11720:	andeq	r0, r1, r0, lsr r8

00011724 <__libc_csu_fini@@Base>:
   11724:	bx	lr

Disassembly of section .fini:

00011728 <.fini>:
   11728:	push	{r3, lr}
   1172c:	pop	{r3, pc}
