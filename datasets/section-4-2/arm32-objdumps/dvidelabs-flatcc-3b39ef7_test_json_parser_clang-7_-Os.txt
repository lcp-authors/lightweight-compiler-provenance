
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a78 <.init>:
   12a78:	push	{r3, lr}
   12a7c:	bl	12c0c <_start@@Base+0x3c>
   12a80:	pop	{r3, pc}

Disassembly of section .plt:

00012a84 <fopen@plt-0x14>:
   12a84:	push	{lr}		; (str lr, [sp, #-4]!)
   12a88:	ldr	lr, [pc, #4]	; 12a94 <fopen@plt-0x4>
   12a8c:	add	lr, pc, lr
   12a90:	ldr	pc, [lr, #8]!
   12a94:	andeq	r1, r3, ip, ror #10

00012a98 <fopen@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #200704	; 0x31000
   12aa0:	ldr	pc, [ip, #1388]!	; 0x56c

00012aa4 <free@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #200704	; 0x31000
   12aac:	ldr	pc, [ip, #1380]!	; 0x564

00012ab0 <memcpy@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #200704	; 0x31000
   12ab8:	ldr	pc, [ip, #1372]!	; 0x55c

00012abc <ftell@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #200704	; 0x31000
   12ac4:	ldr	pc, [ip, #1364]!	; 0x554

00012ac8 <memcmp@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #200704	; 0x31000
   12ad0:	ldr	pc, [ip, #1356]!	; 0x54c

00012ad4 <rewind@plt>:
   12ad4:	add	ip, pc, #0, 12
   12ad8:	add	ip, ip, #200704	; 0x31000
   12adc:	ldr	pc, [ip, #1348]!	; 0x544

00012ae0 <__isinff@plt>:
   12ae0:	add	ip, pc, #0, 12
   12ae4:	add	ip, ip, #200704	; 0x31000
   12ae8:	ldr	pc, [ip, #1340]!	; 0x53c

00012aec <__isinf@plt>:
   12aec:	add	ip, pc, #0, 12
   12af0:	add	ip, ip, #200704	; 0x31000
   12af4:	ldr	pc, [ip, #1332]!	; 0x534

00012af8 <realloc@plt>:
   12af8:	add	ip, pc, #0, 12
   12afc:	add	ip, ip, #200704	; 0x31000
   12b00:	ldr	pc, [ip, #1324]!	; 0x52c

00012b04 <fwrite@plt>:
   12b04:	add	ip, pc, #0, 12
   12b08:	add	ip, ip, #200704	; 0x31000
   12b0c:	ldr	pc, [ip, #1316]!	; 0x524

00012b10 <malloc@plt>:
   12b10:	add	ip, pc, #0, 12
   12b14:	add	ip, ip, #200704	; 0x31000
   12b18:	ldr	pc, [ip, #1308]!	; 0x51c

00012b1c <__libc_start_main@plt>:
   12b1c:	add	ip, pc, #0, 12
   12b20:	add	ip, ip, #200704	; 0x31000
   12b24:	ldr	pc, [ip, #1300]!	; 0x514

00012b28 <__gmon_start__@plt>:
   12b28:	add	ip, pc, #0, 12
   12b2c:	add	ip, ip, #200704	; 0x31000
   12b30:	ldr	pc, [ip, #1292]!	; 0x50c

00012b34 <exit@plt>:
   12b34:	add	ip, pc, #0, 12
   12b38:	add	ip, ip, #200704	; 0x31000
   12b3c:	ldr	pc, [ip, #1284]!	; 0x504

00012b40 <strlen@plt>:
   12b40:	add	ip, pc, #0, 12
   12b44:	add	ip, ip, #200704	; 0x31000
   12b48:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b4c <fprintf@plt>:
   12b4c:	add	ip, pc, #0, 12
   12b50:	add	ip, ip, #200704	; 0x31000
   12b54:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b58 <posix_memalign@plt>:
   12b58:	add	ip, pc, #0, 12
   12b5c:	add	ip, ip, #200704	; 0x31000
   12b60:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b64 <memset@plt>:
   12b64:	add	ip, pc, #0, 12
   12b68:	add	ip, ip, #200704	; 0x31000
   12b6c:	ldr	pc, [ip, #1252]!	; 0x4e4

00012b70 <strtod@plt>:
   12b70:	add	ip, pc, #0, 12
   12b74:	add	ip, ip, #200704	; 0x31000
   12b78:	ldr	pc, [ip, #1244]!	; 0x4dc

00012b7c <memchr@plt>:
   12b7c:	add	ip, pc, #0, 12
   12b80:	add	ip, ip, #200704	; 0x31000
   12b84:	ldr	pc, [ip, #1236]!	; 0x4d4

00012b88 <fclose@plt>:
   12b88:	add	ip, pc, #0, 12
   12b8c:	add	ip, ip, #200704	; 0x31000
   12b90:	ldr	pc, [ip, #1228]!	; 0x4cc

00012b94 <fputc@plt>:
   12b94:	add	ip, pc, #0, 12
   12b98:	add	ip, ip, #200704	; 0x31000
   12b9c:	ldr	pc, [ip, #1220]!	; 0x4c4

00012ba0 <fread_unlocked@plt>:
   12ba0:	add	ip, pc, #0, 12
   12ba4:	add	ip, ip, #200704	; 0x31000
   12ba8:	ldr	pc, [ip, #1212]!	; 0x4bc

00012bac <fseek@plt>:
   12bac:	add	ip, pc, #0, 12
   12bb0:	add	ip, ip, #200704	; 0x31000
   12bb4:	ldr	pc, [ip, #1204]!	; 0x4b4

00012bb8 <abort@plt>:
   12bb8:	add	ip, pc, #0, 12
   12bbc:	add	ip, ip, #200704	; 0x31000
   12bc0:	ldr	pc, [ip, #1196]!	; 0x4ac

00012bc4 <__assert_fail@plt>:
   12bc4:	add	ip, pc, #0, 12
   12bc8:	add	ip, ip, #200704	; 0x31000
   12bcc:	ldr	pc, [ip, #1188]!	; 0x4a4

Disassembly of section .text:

00012bd0 <_start@@Base>:
   12bd0:	mov	fp, #0
   12bd4:	mov	lr, #0
   12bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   12bdc:	mov	r2, sp
   12be0:	push	{r2}		; (str r2, [sp, #-4]!)
   12be4:	push	{r0}		; (str r0, [sp, #-4]!)
   12be8:	ldr	ip, [pc, #16]	; 12c00 <_start@@Base+0x30>
   12bec:	push	{ip}		; (str ip, [sp, #-4]!)
   12bf0:	ldr	r0, [pc, #12]	; 12c04 <_start@@Base+0x34>
   12bf4:	ldr	r3, [pc, #12]	; 12c08 <_start@@Base+0x38>
   12bf8:	bl	12b1c <__libc_start_main@plt>
   12bfc:	bl	12bb8 <abort@plt>
   12c00:	andeq	r1, r3, r0, ror #3
   12c04:	ldrdeq	r3, [r1], -r8
   12c08:	andeq	r1, r3, r0, lsl #3
   12c0c:	ldr	r3, [pc, #20]	; 12c28 <_start@@Base+0x58>
   12c10:	ldr	r2, [pc, #20]	; 12c2c <_start@@Base+0x5c>
   12c14:	add	r3, pc, r3
   12c18:	ldr	r2, [r3, r2]
   12c1c:	cmp	r2, #0
   12c20:	bxeq	lr
   12c24:	b	12b28 <__gmon_start__@plt>
   12c28:	andeq	r1, r3, r4, ror #7
   12c2c:	andeq	r0, r0, r4, ror r0
   12c30:	ldr	r0, [pc, #24]	; 12c50 <_start@@Base+0x80>
   12c34:	ldr	r3, [pc, #24]	; 12c54 <_start@@Base+0x84>
   12c38:	cmp	r3, r0
   12c3c:	bxeq	lr
   12c40:	ldr	r3, [pc, #16]	; 12c58 <_start@@Base+0x88>
   12c44:	cmp	r3, #0
   12c48:	bxeq	lr
   12c4c:	bx	r3
   12c50:	andeq	r4, r4, r0, asr r3
   12c54:	andeq	r4, r4, r0, asr r3
   12c58:	andeq	r0, r0, r0
   12c5c:	ldr	r0, [pc, #36]	; 12c88 <_start@@Base+0xb8>
   12c60:	ldr	r1, [pc, #36]	; 12c8c <_start@@Base+0xbc>
   12c64:	sub	r1, r1, r0
   12c68:	asr	r1, r1, #2
   12c6c:	add	r1, r1, r1, lsr #31
   12c70:	asrs	r1, r1, #1
   12c74:	bxeq	lr
   12c78:	ldr	r3, [pc, #16]	; 12c90 <_start@@Base+0xc0>
   12c7c:	cmp	r3, #0
   12c80:	bxeq	lr
   12c84:	bx	r3
   12c88:	andeq	r4, r4, r0, asr r3
   12c8c:	andeq	r4, r4, r0, asr r3
   12c90:	andeq	r0, r0, r0
   12c94:	push	{r4, lr}
   12c98:	ldr	r4, [pc, #24]	; 12cb8 <_start@@Base+0xe8>
   12c9c:	ldrb	r3, [r4]
   12ca0:	cmp	r3, #0
   12ca4:	popne	{r4, pc}
   12ca8:	bl	12c30 <_start@@Base+0x60>
   12cac:	mov	r3, #1
   12cb0:	strb	r3, [r4]
   12cb4:	pop	{r4, pc}
   12cb8:	andeq	r4, r4, r8, asr r3
   12cbc:	b	12c5c <_start@@Base+0x8c>

00012cc0 <verify_parse@@Base>:
   12cc0:	push	{fp, lr}
   12cc4:	mov	fp, sp
   12cc8:	cmp	r0, #0
   12ccc:	beq	12dc4 <verify_parse@@Base+0x104>
   12cd0:	ldr	r1, [r0, #4]
   12cd4:	movw	r2, #20301	; 0x4f4d
   12cd8:	movt	r2, #21326	; 0x534e
   12cdc:	cmp	r1, r2
   12ce0:	bne	12dc4 <verify_parse@@Base+0x104>
   12ce4:	ldr	r1, [r0]
   12ce8:	ldr	r2, [r0, r1]!
   12cec:	mov	r1, r0
   12cf0:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   12cf4:	cmp	r2, #5
   12cf8:	bls	12d0c <verify_parse@@Base+0x4c>
   12cfc:	ldrh	r1, [r1, #4]
   12d00:	cmp	r1, #0
   12d04:	addsne	r0, r0, r1
   12d08:	bne	12d2c <verify_parse@@Base+0x6c>
   12d0c:	movw	r0, #10348	; 0x286c
   12d10:	movw	r1, #4601	; 0x11f9
   12d14:	movw	r3, #4683	; 0x124b
   12d18:	mov	r2, #45	; 0x2d
   12d1c:	movt	r0, #3
   12d20:	movt	r1, #3
   12d24:	movt	r3, #3
   12d28:	bl	12bc4 <__assert_fail@plt>
   12d2c:	vldr	s0, [r0]
   12d30:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12d34:	vcmp.f32	s0, s2
   12d38:	vmrs	APSR_nzcv, fpscr
   12d3c:	bne	12de4 <verify_parse@@Base+0x124>
   12d40:	vldr	s0, [r0, #4]
   12d44:	vmov.f32	s2, #0	; 0x40000000  2.0
   12d48:	vcmp.f32	s0, s2
   12d4c:	vmrs	APSR_nzcv, fpscr
   12d50:	bne	12e04 <verify_parse@@Base+0x144>
   12d54:	vldr	s0, [r0, #8]
   12d58:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d5c:	vcmp.f32	s0, s2
   12d60:	vmrs	APSR_nzcv, fpscr
   12d64:	bne	12e24 <verify_parse@@Base+0x164>
   12d68:	vldr	d16, [r0, #16]
   12d6c:	vmov.f64	d17, #8	; 0x40400000  3.0
   12d70:	vcmp.f64	d16, d17
   12d74:	vmrs	APSR_nzcv, fpscr
   12d78:	bne	12e44 <verify_parse@@Base+0x184>
   12d7c:	ldrb	r1, [r0, #24]
   12d80:	cmp	r1, #2
   12d84:	bne	12e64 <verify_parse@@Base+0x1a4>
   12d88:	ldrh	r1, [r0, #26]
   12d8c:	cmp	r1, #5
   12d90:	bne	12e84 <verify_parse@@Base+0x1c4>
   12d94:	ldrb	r0, [r0, #28]
   12d98:	cmp	r0, #6
   12d9c:	moveq	r0, #0
   12da0:	popeq	{fp, pc}
   12da4:	movw	r0, #10348	; 0x286c
   12da8:	movw	r1, #4601	; 0x11f9
   12dac:	movw	r3, #4683	; 0x124b
   12db0:	mov	r2, #54	; 0x36
   12db4:	movt	r0, #3
   12db8:	movt	r1, #3
   12dbc:	movt	r3, #3
   12dc0:	bl	12bc4 <__assert_fail@plt>
   12dc4:	movw	r0, #4939	; 0x134b
   12dc8:	movw	r1, #4977	; 0x1371
   12dcc:	movw	r3, #5072	; 0x13d0
   12dd0:	mov	r2, #696	; 0x2b8
   12dd4:	movt	r0, #3
   12dd8:	movt	r1, #3
   12ddc:	movt	r3, #3
   12de0:	bl	12bc4 <__assert_fail@plt>
   12de4:	movw	r0, #10348	; 0x286c
   12de8:	movw	r1, #4601	; 0x11f9
   12dec:	movw	r3, #4683	; 0x124b
   12df0:	mov	r2, #46	; 0x2e
   12df4:	movt	r0, #3
   12df8:	movt	r1, #3
   12dfc:	movt	r3, #3
   12e00:	bl	12bc4 <__assert_fail@plt>
   12e04:	movw	r0, #10348	; 0x286c
   12e08:	movw	r1, #4601	; 0x11f9
   12e0c:	movw	r3, #4683	; 0x124b
   12e10:	mov	r2, #47	; 0x2f
   12e14:	movt	r0, #3
   12e18:	movt	r1, #3
   12e1c:	movt	r3, #3
   12e20:	bl	12bc4 <__assert_fail@plt>
   12e24:	movw	r0, #10348	; 0x286c
   12e28:	movw	r1, #4601	; 0x11f9
   12e2c:	movw	r3, #4683	; 0x124b
   12e30:	mov	r2, #48	; 0x30
   12e34:	movt	r0, #3
   12e38:	movt	r1, #3
   12e3c:	movt	r3, #3
   12e40:	bl	12bc4 <__assert_fail@plt>
   12e44:	movw	r0, #10348	; 0x286c
   12e48:	movw	r1, #4601	; 0x11f9
   12e4c:	movw	r3, #4683	; 0x124b
   12e50:	mov	r2, #49	; 0x31
   12e54:	movt	r0, #3
   12e58:	movt	r1, #3
   12e5c:	movt	r3, #3
   12e60:	bl	12bc4 <__assert_fail@plt>
   12e64:	movw	r0, #10348	; 0x286c
   12e68:	movw	r1, #4601	; 0x11f9
   12e6c:	movw	r3, #4683	; 0x124b
   12e70:	mov	r2, #50	; 0x32
   12e74:	movt	r0, #3
   12e78:	movt	r1, #3
   12e7c:	movt	r3, #3
   12e80:	bl	12bc4 <__assert_fail@plt>
   12e84:	movw	r0, #10348	; 0x286c
   12e88:	movw	r1, #4601	; 0x11f9
   12e8c:	movw	r3, #4683	; 0x124b
   12e90:	mov	r2, #53	; 0x35
   12e94:	movt	r0, #3
   12e98:	movt	r1, #3
   12e9c:	movt	r3, #3
   12ea0:	bl	12bc4 <__assert_fail@plt>

00012ea4 <test_parse@@Base>:
   12ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea8:	add	fp, sp, #28
   12eac:	sub	sp, sp, #316	; 0x13c
   12eb0:	add	r8, sp, #12
   12eb4:	mov	r0, r8
   12eb8:	bl	28b94 <flatcc_builder_init@@Base>
   12ebc:	movw	r9, #16512	; 0x4080
   12ec0:	movw	r1, #5160	; 0x1428
   12ec4:	movt	r9, #4
   12ec8:	movt	r1, #3
   12ecc:	ldr	r0, [r9]
   12ed0:	bl	12a98 <fopen@plt>
   12ed4:	cmp	r0, #0
   12ed8:	beq	1306c <test_parse@@Base+0x1c8>
   12edc:	mov	r1, #0
   12ee0:	mov	r2, #2
   12ee4:	mov	r7, r0
   12ee8:	bl	12bac <fseek@plt>
   12eec:	mov	r0, r7
   12ef0:	bl	12abc <ftell@plt>
   12ef4:	cmp	r0, #10240	; 0x2800
   12ef8:	bhi	13064 <test_parse@@Base+0x1c0>
   12efc:	mov	r5, r0
   12f00:	mov	r0, r7
   12f04:	bl	12ad4 <rewind@plt>
   12f08:	cmp	r5, #0
   12f0c:	mov	r0, r5
   12f10:	movweq	r0, #1
   12f14:	bl	12b10 <malloc@plt>
   12f18:	cmp	r0, #0
   12f1c:	beq	13064 <test_parse@@Base+0x1c0>
   12f20:	mov	r4, r0
   12f24:	mov	r1, #0
   12f28:	mov	r6, r1
   12f2c:	add	r0, r4, r1
   12f30:	sub	r2, r5, r1
   12f34:	mov	r1, #1
   12f38:	mov	r3, r7
   12f3c:	bl	12ba0 <fread_unlocked@plt>
   12f40:	add	r1, r0, r6
   12f44:	cmp	r0, #0
   12f48:	bne	12f28 <test_parse@@Base+0x84>
   12f4c:	mov	r0, r7
   12f50:	bl	12b88 <fclose@plt>
   12f54:	cmp	r5, r6
   12f58:	bne	13058 <test_parse@@Base+0x1b4>
   12f5c:	sub	r0, fp, #100	; 0x64
   12f60:	vmov.i32	q8, #0	; 0x00000000
   12f64:	mov	r7, #0
   12f68:	add	r6, r4, r5
   12f6c:	mov	r2, #0
   12f70:	mov	r3, #0
   12f74:	add	r1, r0, #12
   12f78:	add	r0, r0, #28
   12f7c:	vst1.32	{d16-d17}, [r1]
   12f80:	vst1.32	{d16-d17}, [r0]
   12f84:	movw	r1, #4596	; 0x11f4
   12f88:	mov	r0, #1
   12f8c:	str	r8, [fp, #-100]	; 0xffffff9c
   12f90:	str	r4, [fp, #-96]	; 0xffffffa0
   12f94:	str	r7, [fp, #-92]	; 0xffffffa4
   12f98:	str	r0, [fp, #-84]	; 0xffffffac
   12f9c:	movt	r1, #3
   12fa0:	mov	r0, r8
   12fa4:	str	r4, [fp, #-72]	; 0xffffffb8
   12fa8:	str	r6, [fp, #-68]	; 0xffffffbc
   12fac:	str	r4, [fp, #-64]	; 0xffffffc0
   12fb0:	bl	29590 <flatcc_builder_start_buffer@@Base>
   12fb4:	cmp	r0, #0
   12fb8:	bne	12ff4 <test_parse@@Base+0x150>
   12fbc:	sub	r0, fp, #100	; 0x64
   12fc0:	sub	r3, fp, #52	; 0x34
   12fc4:	mov	r1, r4
   12fc8:	mov	r2, r6
   12fcc:	bl	13350 <main@@Base+0x78>
   12fd0:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12fd4:	cmp	r7, #0
   12fd8:	bne	12ff4 <test_parse@@Base+0x150>
   12fdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12fe0:	add	r0, sp, #12
   12fe4:	bl	29780 <flatcc_builder_end_buffer@@Base>
   12fe8:	cmp	r0, #0
   12fec:	bne	13098 <test_parse@@Base+0x1f4>
   12ff0:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12ff4:	movw	r0, #17232	; 0x4350
   12ff8:	ldr	r8, [r9]
   12ffc:	ldr	r5, [fp, #-96]	; 0xffffffa0
   13000:	ldr	r9, [fp, #-84]	; 0xffffffac
   13004:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13008:	movt	r0, #4
   1300c:	ldr	sl, [r0]
   13010:	mov	r0, r7
   13014:	bl	2d274 <flatcc_json_parser_error_string@@Base>
   13018:	add	r1, r6, #1
   1301c:	str	r0, [sp, #4]
   13020:	mov	r0, sl
   13024:	mov	r2, r8
   13028:	mov	r3, r9
   1302c:	sub	r1, r1, r5
   13030:	str	r1, [sp]
   13034:	movw	r1, #4844	; 0x12ec
   13038:	movt	r1, #3
   1303c:	bl	12b4c <fprintf@plt>
   13040:	mvn	r5, #0
   13044:	mov	r0, r4
   13048:	bl	12aa4 <free@plt>
   1304c:	add	r0, sp, #12
   13050:	bl	28d30 <flatcc_builder_clear@@Base>
   13054:	b	1308c <test_parse@@Base+0x1e8>
   13058:	mov	r0, r4
   1305c:	bl	12aa4 <free@plt>
   13060:	b	1306c <test_parse@@Base+0x1c8>
   13064:	mov	r0, r7
   13068:	bl	12b88 <fclose@plt>
   1306c:	movw	r0, #17232	; 0x4350
   13070:	ldr	r2, [r9]
   13074:	movw	r1, #4708	; 0x1264
   13078:	movt	r0, #4
   1307c:	movt	r1, #3
   13080:	ldr	r0, [r0]
   13084:	bl	12b4c <fprintf@plt>
   13088:	mvn	r5, #0
   1308c:	mov	r0, r5
   13090:	sub	sp, fp, #28
   13094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13098:	ldr	r2, [r9]
   1309c:	movw	r9, #17232	; 0x4350
   130a0:	str	r4, [fp, #-60]	; 0xffffffc4
   130a4:	movw	r1, #4744	; 0x1288
   130a8:	movt	r9, #4
   130ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   130b0:	movt	r1, #3
   130b4:	ldr	r0, [r9]
   130b8:	bl	12b4c <fprintf@plt>
   130bc:	add	r0, sp, #12
   130c0:	sub	r1, fp, #56	; 0x38
   130c4:	bl	2c690 <flatcc_builder_finalize_aligned_buffer@@Base>
   130c8:	mov	sl, r0
   130cc:	movw	r0, #17236	; 0x4354
   130d0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   130d4:	movw	r1, #5174	; 0x1436
   130d8:	movw	r2, #4778	; 0x12aa
   130dc:	movt	r0, #4
   130e0:	movt	r1, #3
   130e4:	movt	r2, #3
   130e8:	ldr	r7, [r0]
   130ec:	mov	r0, r7
   130f0:	bl	12b4c <fprintf@plt>
   130f4:	cmp	r6, #0
   130f8:	beq	131d8 <test_parse@@Base+0x334>
   130fc:	mov	r9, #0
   13100:	ands	r8, r9, #15
   13104:	beq	13120 <test_parse@@Base+0x27c>
   13108:	tst	r9, #7
   1310c:	bne	13150 <test_parse@@Base+0x2ac>
   13110:	mov	r0, #32
   13114:	mov	r1, r7
   13118:	bl	12b94 <fputc@plt>
   1311c:	b	13150 <test_parse@@Base+0x2ac>
   13120:	cmp	r9, #0
   13124:	beq	1313c <test_parse@@Base+0x298>
   13128:	movw	r1, #5179	; 0x143b
   1312c:	mov	r0, r7
   13130:	sub	r2, fp, #52	; 0x34
   13134:	movt	r1, #3
   13138:	bl	12b4c <fprintf@plt>
   1313c:	movw	r1, #5185	; 0x1441
   13140:	mov	r0, r7
   13144:	mov	r2, r9
   13148:	movt	r1, #3
   1314c:	bl	12b4c <fprintf@plt>
   13150:	ldrb	r2, [sl, r9]
   13154:	movw	r1, #5193	; 0x1449
   13158:	mov	r0, r7
   1315c:	movt	r1, #3
   13160:	bl	12b4c <fprintf@plt>
   13164:	ldrb	r0, [sl, r9]
   13168:	add	r9, r9, #1
   1316c:	sub	r1, r0, #32
   13170:	uxtb	r1, r1
   13174:	cmp	r1, #94	; 0x5e
   13178:	sub	r1, fp, #52	; 0x34
   1317c:	movwhi	r0, #46	; 0x2e
   13180:	cmp	r6, r9
   13184:	strb	r0, [r1, r8]
   13188:	add	r0, r1, r8
   1318c:	mov	r1, #0
   13190:	strb	r1, [r0, #1]
   13194:	bne	13100 <test_parse@@Base+0x25c>
   13198:	movw	r9, #17232	; 0x4350
   1319c:	tst	r6, #15
   131a0:	movt	r9, #4
   131a4:	beq	131d8 <test_parse@@Base+0x334>
   131a8:	movw	r8, #5229	; 0x146d
   131ac:	add	r6, r6, #1
   131b0:	movt	r8, #3
   131b4:	mov	r0, r8
   131b8:	mov	r1, #3
   131bc:	mov	r2, #1
   131c0:	mov	r3, r7
   131c4:	bl	12b04 <fwrite@plt>
   131c8:	add	r0, r6, #1
   131cc:	tst	r6, #15
   131d0:	mov	r6, r0
   131d4:	bne	131b4 <test_parse@@Base+0x310>
   131d8:	movw	r1, #5179	; 0x143b
   131dc:	sub	r2, fp, #52	; 0x34
   131e0:	mov	r0, r7
   131e4:	movt	r1, #3
   131e8:	bl	12b4c <fprintf@plt>
   131ec:	ldr	r0, [r9]
   131f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   131f4:	movw	r1, #4809	; 0x12c9
   131f8:	mov	r2, r5
   131fc:	movt	r1, #3
   13200:	bl	12b4c <fprintf@plt>
   13204:	mov	r0, sl
   13208:	bl	12cc0 <verify_parse@@Base>
   1320c:	movw	r0, #17236	; 0x4354
   13210:	ldr	r7, [fp, #-56]	; 0xffffffc8
   13214:	movw	r1, #5199	; 0x144f
   13218:	movw	r2, #4802	; 0x12c2
   1321c:	movt	r0, #4
   13220:	movt	r1, #3
   13224:	movt	r2, #3
   13228:	ldr	r5, [r0]
   1322c:	mov	r0, r5
   13230:	bl	12b4c <fprintf@plt>
   13234:	cmp	r7, #0
   13238:	beq	132a0 <test_parse@@Base+0x3fc>
   1323c:	movw	r8, #5228	; 0x146c
   13240:	movw	r6, #5233	; 0x1471
   13244:	mov	r9, #0
   13248:	movt	r8, #3
   1324c:	movt	r6, #3
   13250:	tst	r9, #15
   13254:	beq	13270 <test_parse@@Base+0x3cc>
   13258:	tst	r9, #7
   1325c:	bne	13284 <test_parse@@Base+0x3e0>
   13260:	movw	r0, #5229	; 0x146d
   13264:	mov	r1, #3
   13268:	movt	r0, #3
   1326c:	b	13278 <test_parse@@Base+0x3d4>
   13270:	mov	r0, r8
   13274:	mov	r1, #4
   13278:	mov	r2, #1
   1327c:	mov	r3, r5
   13280:	bl	12b04 <fwrite@plt>
   13284:	ldrb	r2, [sl, r9]
   13288:	mov	r0, r5
   1328c:	mov	r1, r6
   13290:	bl	12b4c <fprintf@plt>
   13294:	add	r9, r9, #1
   13298:	cmp	r7, r9
   1329c:	bne	13250 <test_parse@@Base+0x3ac>
   132a0:	movw	r0, #5242	; 0x147a
   132a4:	mov	r1, #4
   132a8:	mov	r2, #1
   132ac:	mov	r3, r5
   132b0:	movt	r0, #3
   132b4:	bl	12b04 <fwrite@plt>
   132b8:	add	r0, sp, #12
   132bc:	bl	28d24 <flatcc_builder_reset@@Base>
   132c0:	mov	r5, #0
   132c4:	cmp	sl, #0
   132c8:	beq	13044 <test_parse@@Base+0x1a0>
   132cc:	mov	r0, sl
   132d0:	bl	2c790 <flatcc_builder_aligned_free@@Base>
   132d4:	b	13044 <test_parse@@Base+0x1a0>

000132d8 <main@@Base>:
   132d8:	push	{r4, r5, r6, sl, fp, lr}
   132dc:	add	fp, sp, #16
   132e0:	movw	r6, #17232	; 0x4350
   132e4:	mov	r5, r0
   132e8:	movw	r0, #4858	; 0x12fa
   132ec:	mov	r4, r1
   132f0:	mov	r1, #16
   132f4:	mov	r2, #1
   132f8:	movt	r6, #4
   132fc:	movt	r0, #3
   13300:	ldr	r3, [r6]
   13304:	bl	12b04 <fwrite@plt>
   13308:	sub	r0, r5, #1
   1330c:	cmp	r0, #2
   13310:	bcs	13330 <main@@Base+0x58>
   13314:	cmp	r5, #2
   13318:	ldreq	r0, [r4, #4]
   1331c:	movweq	r1, #16512	; 0x4080
   13320:	movteq	r1, #4
   13324:	streq	r0, [r1]
   13328:	pop	{r4, r5, r6, sl, fp, lr}
   1332c:	b	12ea4 <test_parse@@Base>
   13330:	ldr	r3, [r6]
   13334:	movw	r0, #4875	; 0x130b
   13338:	mov	r1, #63	; 0x3f
   1333c:	mov	r2, #1
   13340:	movt	r0, #3
   13344:	bl	12b04 <fwrite@plt>
   13348:	mov	r0, #1
   1334c:	bl	12b34 <exit@plt>
   13350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13354:	add	fp, sp, #28
   13358:	sub	sp, sp, #4
   1335c:	vpush	{d8-d9}
   13360:	sub	sp, sp, #80	; 0x50
   13364:	mov	r8, r0
   13368:	mov	r0, #0
   1336c:	mov	r4, r1
   13370:	mov	r1, #36	; 0x24
   13374:	mov	sl, r3
   13378:	mov	r5, r2
   1337c:	str	r0, [r3]
   13380:	ldr	r0, [r8]
   13384:	bl	2a60c <flatcc_builder_start_table@@Base>
   13388:	cmp	r0, #0
   1338c:	beq	133bc <main@@Base+0xe4>
   13390:	mov	r0, r8
   13394:	mov	r1, r4
   13398:	mov	r2, r5
   1339c:	mov	r3, #33	; 0x21
   133a0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   133a4:	mov	r4, r0
   133a8:	mov	r0, r4
   133ac:	sub	sp, fp, #48	; 0x30
   133b0:	vpop	{d8-d9}
   133b4:	add	sp, sp, #4
   133b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133bc:	add	r0, sp, #48	; 0x30
   133c0:	mov	r1, r4
   133c4:	mov	r2, r5
   133c8:	mov	r3, #1
   133cc:	str	r0, [sp]
   133d0:	mov	r0, r8
   133d4:	bl	2f8a4 <flatcc_json_parser_prepare_unions@@Base>
   133d8:	cmp	r0, r5
   133dc:	beq	13390 <main@@Base+0xb8>
   133e0:	cmp	r4, r5
   133e4:	beq	13418 <main@@Base+0x140>
   133e8:	ldrb	r0, [r4]
   133ec:	cmp	r0, #123	; 0x7b
   133f0:	bne	13418 <main@@Base+0x140>
   133f4:	add	r1, r4, #1
   133f8:	sub	r0, r5, r1
   133fc:	cmp	r0, #2
   13400:	blt	134b0 <main@@Base+0x1d8>
   13404:	ldrb	r0, [r1]
   13408:	cmp	r0, #32
   1340c:	bls	134a0 <main@@Base+0x1c8>
   13410:	mov	r4, r1
   13414:	b	134c0 <main@@Base+0x1e8>
   13418:	mov	r0, r8
   1341c:	mov	r1, r4
   13420:	mov	r2, r5
   13424:	mov	r3, #21
   13428:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1342c:	mov	r4, r0
   13430:	add	r0, r8, #24
   13434:	ldr	r0, [r0]
   13438:	cmp	r0, #0
   1343c:	bne	13390 <main@@Base+0xb8>
   13440:	ldr	r0, [r8]
   13444:	mov	r1, #3
   13448:	bl	2ae10 <flatcc_builder_check_required_field@@Base>
   1344c:	cmp	r0, #0
   13450:	beq	13484 <main@@Base+0x1ac>
   13454:	ldr	r3, [sp, #48]	; 0x30
   13458:	mov	r0, r8
   1345c:	mov	r1, r4
   13460:	mov	r2, r5
   13464:	bl	2f928 <flatcc_json_parser_finalize_unions@@Base>
   13468:	mov	r4, r0
   1346c:	ldr	r0, [r8]
   13470:	bl	2af9c <flatcc_builder_end_table@@Base>
   13474:	cmp	r0, #0
   13478:	str	r0, [sl]
   1347c:	bne	133a8 <main@@Base+0xd0>
   13480:	b	13390 <main@@Base+0xb8>
   13484:	mov	r0, r8
   13488:	mov	r1, r4
   1348c:	mov	r2, r5
   13490:	mov	r3, #29
   13494:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   13498:	mov	r4, r0
   1349c:	b	13390 <main@@Base+0xb8>
   134a0:	bne	134b0 <main@@Base+0x1d8>
   134a4:	ldrb	r0, [r4, #2]!
   134a8:	cmp	r0, #32
   134ac:	bhi	134c0 <main@@Base+0x1e8>
   134b0:	mov	r0, r8
   134b4:	mov	r2, r5
   134b8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   134bc:	mov	r4, r0
   134c0:	cmp	r4, r5
   134c4:	mov	r2, r5
   134c8:	beq	13500 <main@@Base+0x228>
   134cc:	ldrb	r0, [r4]
   134d0:	cmp	r0, #125	; 0x7d
   134d4:	bne	134fc <main@@Base+0x224>
   134d8:	add	r1, r4, #1
   134dc:	sub	r0, r5, r1
   134e0:	cmp	r0, #2
   134e4:	blt	1ce64 <main@@Base+0x9b8c>
   134e8:	ldrb	r0, [r1]
   134ec:	cmp	r0, #32
   134f0:	bls	1ce54 <main@@Base+0x9b7c>
   134f4:	mov	r4, r1
   134f8:	b	13430 <main@@Base+0x158>
   134fc:	mov	r2, r4
   13500:	add	r0, r8, #24
   13504:	vldr	s18, [pc, #904]	; 13894 <main@@Base+0x5bc>
   13508:	movw	lr, #29556	; 0x7374
   1350c:	vmov.f32	s16, #8	; 0x40400000  3.0
   13510:	str	r5, [sp, #44]	; 0x2c
   13514:	str	r8, [sp, #36]	; 0x24
   13518:	str	sl, [sp, #40]	; 0x28
   1351c:	str	r0, [sp, #28]
   13520:	add	r0, r8, #12
   13524:	movt	lr, #29797	; 0x7465
   13528:	str	r0, [sp, #32]
   1352c:	movw	r0, #13407	; 0x345f
   13530:	movt	r0, #29494	; 0x7336
   13534:	sub	r0, r0, #512	; 0x200
   13538:	sub	r0, r0, #196608	; 0x30000
   1353c:	str	r0, [sp, #24]
   13540:	cmp	r2, r5
   13544:	mov	r9, r5
   13548:	beq	135a4 <main@@Base+0x2cc>
   1354c:	ldrb	r0, [r2]
   13550:	cmp	r0, #46	; 0x2e
   13554:	beq	13570 <main@@Base+0x298>
   13558:	cmp	r0, #34	; 0x22
   1355c:	bne	13594 <main@@Base+0x2bc>
   13560:	ldr	r0, [sp, #32]
   13564:	mov	r1, #0
   13568:	add	r9, r2, #1
   1356c:	b	135a0 <main@@Base+0x2c8>
   13570:	mov	r1, r2
   13574:	mov	r0, r8
   13578:	mov	r2, r5
   1357c:	mov	r3, #5
   13580:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   13584:	movw	lr, #29556	; 0x7374
   13588:	mov	r9, r0
   1358c:	movt	lr, #29797	; 0x7465
   13590:	b	135a4 <main@@Base+0x2cc>
   13594:	ldr	r0, [sp, #32]
   13598:	mov	r1, #1
   1359c:	mov	r9, r2
   135a0:	str	r1, [r0]
   135a4:	sub	sl, r5, r9
   135a8:	mov	r0, #8
   135ac:	cmp	sl, #8
   135b0:	movcc	r0, sl
   135b4:	and	r0, r0, #15
   135b8:	sub	r2, r0, #1
   135bc:	cmp	r2, #7
   135c0:	bhi	148b0 <main@@Base+0x15d8>
   135c4:	add	r0, pc, #32
   135c8:	mov	r8, #0
   135cc:	mov	ip, #0
   135d0:	mov	r4, #0
   135d4:	mov	r1, #0
   135d8:	mov	r3, #0
   135dc:	mov	r6, #0
   135e0:	mov	r7, #0
   135e4:	mov	r5, #0
   135e8:	ldr	pc, [r0, r2, lsl #2]
   135ec:	andeq	r3, r1, r0, asr r6
   135f0:	andeq	r3, r1, r8, asr #12
   135f4:	andeq	r3, r1, r0, asr #12
   135f8:	andeq	r3, r1, r8, lsr r6
   135fc:	andeq	r3, r1, ip, lsr #12
   13600:	andeq	r3, r1, r0, lsr #12
   13604:	andeq	r3, r1, r0, lsl r6
   13608:	andeq	r3, r1, ip, lsl #12
   1360c:	ldrb	ip, [r9, #7]
   13610:	ldrb	r0, [r9, #6]
   13614:	mov	r4, r8
   13618:	orr	r0, ip, r0, lsl #8
   1361c:	mov	r8, r0
   13620:	ldrb	r0, [r9, #5]
   13624:	mov	r1, r4
   13628:	orr	r8, r8, r0, lsl #16
   1362c:	ldrb	r0, [r9, #4]
   13630:	mov	r3, r1
   13634:	orr	r8, r8, r0, lsl #24
   13638:	ldrb	r0, [r9, #3]
   1363c:	orr	r6, r0, r3
   13640:	ldrb	r0, [r9, #2]
   13644:	orr	r7, r6, r0, lsl #8
   13648:	ldrb	r0, [r9, #1]
   1364c:	orr	r5, r7, r0, lsl #16
   13650:	ldrb	r0, [r9]
   13654:	movw	r1, #29281	; 0x7261
   13658:	movt	r1, #24946	; 0x6172
   1365c:	subs	r1, r8, r1
   13660:	orr	r0, r5, r0, lsl #24
   13664:	sbcs	r1, r0, lr
   13668:	bcs	13714 <main@@Base+0x43c>
   1366c:	movw	r1, #28004	; 0x6d64
   13670:	movt	r1, #28257	; 0x6e61
   13674:	cmp	r0, r1
   13678:	bhi	13898 <main@@Base+0x5c0>
   1367c:	ldr	r5, [sp, #44]	; 0x2c
   13680:	movw	r1, #25975	; 0x6577
   13684:	movt	r1, #26220	; 0x666c
   13688:	cmp	r0, r1
   1368c:	bhi	139a4 <main@@Base+0x6cc>
   13690:	movw	r1, #27759	; 0x6c6f
   13694:	movt	r1, #25455	; 0x636f
   13698:	eor	r2, r0, r1
   1369c:	and	r1, r8, #-16777216	; 0xff000000
   136a0:	eor	r3, r1, #1912602624	; 0x72000000
   136a4:	orrs	r2, r3, r2
   136a8:	beq	14264 <main@@Base+0xf8c>
   136ac:	movw	r2, #25965	; 0x656d
   136b0:	ldr	r8, [sp, #36]	; 0x24
   136b4:	eor	r1, r1, #2030043136	; 0x79000000
   136b8:	movt	r2, #25966	; 0x656e
   136bc:	eor	r0, r0, r2
   136c0:	orrs	r0, r1, r0
   136c4:	bne	148b0 <main@@Base+0x15d8>
   136c8:	cmp	sl, #6
   136cc:	ldr	sl, [sp, #40]	; 0x28
   136d0:	mov	r1, r9
   136d4:	blt	157ec <main@@Base+0x2514>
   136d8:	ldr	r1, [sp, #32]
   136dc:	mov	r2, r9
   136e0:	ldrb	r0, [r2, #5]!
   136e4:	ldr	r1, [r1]
   136e8:	cmp	r1, #0
   136ec:	beq	149d4 <main@@Base+0x16fc>
   136f0:	cmp	r0, #33	; 0x21
   136f4:	bcc	13704 <main@@Base+0x42c>
   136f8:	cmp	r0, #58	; 0x3a
   136fc:	mov	r1, r9
   13700:	bne	157ec <main@@Base+0x2514>
   13704:	ldr	r0, [sp, #32]
   13708:	mov	r1, #0
   1370c:	str	r1, [r0]
   13710:	b	149e4 <main@@Base+0x170c>
   13714:	movw	r1, #0
   13718:	movt	r1, #26163	; 0x6633
   1371c:	subs	r1, r8, r1
   13720:	sbcs	r1, r0, lr
   13724:	bcs	13924 <main@@Base+0x64c>
   13728:	movw	r1, #29281	; 0x7261
   1372c:	ldr	r5, [sp, #44]	; 0x2c
   13730:	movt	r1, #24946	; 0x6172
   13734:	eor	r2, r8, r1
   13738:	eor	r1, r0, lr
   1373c:	orrs	r2, r2, r1
   13740:	bne	13a20 <main@@Base+0x748>
   13744:	add	sl, r9, #8
   13748:	mov	r0, #8
   1374c:	sub	ip, r5, sl
   13750:	cmp	ip, #8
   13754:	movcc	r0, ip
   13758:	and	r0, r0, #15
   1375c:	sub	r6, r0, #1
   13760:	cmp	r6, #7
   13764:	bhi	16884 <main@@Base+0x35ac>
   13768:	add	r7, pc, #32
   1376c:	mov	r1, #0
   13770:	mov	lr, #0
   13774:	mov	r8, #0
   13778:	mov	r4, #0
   1377c:	mov	r3, #0
   13780:	mov	r5, #0
   13784:	mov	r0, #0
   13788:	mov	r2, #0
   1378c:	ldr	pc, [r7, r6, lsl #2]
   13790:	strdeq	r3, [r1], -r4
   13794:	andeq	r3, r1, ip, ror #15
   13798:	andeq	r3, r1, r4, ror #15
   1379c:	ldrdeq	r3, [r1], -ip
   137a0:	ldrdeq	r3, [r1], -r0
   137a4:	andeq	r3, r1, r4, asr #15
   137a8:			; <UNDEFINED> instruction: 0x000137b4
   137ac:			; <UNDEFINED> instruction: 0x000137b0
   137b0:	ldrb	lr, [r9, #15]
   137b4:	ldrb	r0, [r9, #14]
   137b8:	mov	r8, r1
   137bc:	orr	r0, lr, r0, lsl #8
   137c0:	mov	r1, r0
   137c4:	ldrb	r0, [r9, #13]
   137c8:	mov	r4, r8
   137cc:	orr	r1, r1, r0, lsl #16
   137d0:	ldrb	r0, [r9, #12]
   137d4:	mov	r3, r4
   137d8:	orr	r1, r1, r0, lsl #24
   137dc:	ldrb	r0, [r9, #11]
   137e0:	orr	r5, r0, r3
   137e4:	ldrb	r0, [r9, #10]
   137e8:	orr	r0, r5, r0, lsl #8
   137ec:	ldrb	r2, [r9, #9]
   137f0:	orr	r2, r0, r2, lsl #16
   137f4:	ldrb	r0, [sl]
   137f8:	movw	r7, #26227	; 0x6673
   137fc:	movt	r7, #31087	; 0x796f
   13800:	orr	r2, r2, r0, lsl #24
   13804:	movw	r0, #26989	; 0x696d
   13808:	movt	r0, #29810	; 0x7472
   1380c:	subs	r0, r0, r1
   13810:	sbcs	r0, r7, r2
   13814:	bcc	14194 <main@@Base+0xebc>
   13818:	movw	r0, #29797	; 0x7465
   1381c:	ldr	r5, [sp, #44]	; 0x2c
   13820:	eor	r3, r2, r7
   13824:	movt	r0, #28530	; 0x6f72
   13828:	eor	r0, r1, r0
   1382c:	orrs	r0, r0, r3
   13830:	beq	14658 <main@@Base+0x1380>
   13834:	movw	r0, #27763	; 0x6c73
   13838:	movt	r0, #28527	; 0x6f6f
   1383c:	eor	r0, r1, r0
   13840:	movw	r1, #26210	; 0x6662
   13844:	movt	r1, #31087	; 0x796f
   13848:	eor	r1, r2, r1
   1384c:	orrs	r0, r0, r1
   13850:	bne	16884 <main@@Base+0x35ac>
   13854:	cmp	ip, #9
   13858:	blt	16884 <main@@Base+0x35ac>
   1385c:	ldr	r2, [sp, #32]
   13860:	mov	r1, r9
   13864:	ldrb	r0, [r1, #16]!
   13868:	ldr	r2, [r2]
   1386c:	cmp	r2, #0
   13870:	beq	14cb8 <main@@Base+0x19e0>
   13874:	cmp	r0, #33	; 0x21
   13878:	bcc	13884 <main@@Base+0x5ac>
   1387c:	cmp	r0, #58	; 0x3a
   13880:	bne	16884 <main@@Base+0x35ac>
   13884:	ldr	r0, [sp, #32]
   13888:	mov	r2, #0
   1388c:	str	r2, [r0]
   13890:	b	14cc4 <main@@Base+0x19ec>
   13894:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   13898:	ldr	r5, [sp, #44]	; 0x2c
   1389c:	movw	r1, #29555	; 0x7373
   138a0:	movt	r1, #29797	; 0x7465
   138a4:	cmp	r0, r1
   138a8:	bhi	13af0 <main@@Base+0x818>
   138ac:	movw	r3, #24430	; 0x5f6e
   138b0:	movw	r2, #29285	; 0x7265
   138b4:	movt	r3, #28276	; 0x6e74
   138b8:	movt	r2, #28769	; 0x7061
   138bc:	subs	r1, r8, r3
   138c0:	sbcs	r1, r0, r2
   138c4:	bcs	13c8c <main@@Base+0x9b4>
   138c8:	movw	r1, #28005	; 0x6d65
   138cc:	movt	r1, #28257	; 0x6e61
   138d0:	teq	r0, r1
   138d4:	bne	148ac <main@@Base+0x15d4>
   138d8:	ldr	r8, [sp, #36]	; 0x24
   138dc:	cmp	sl, #5
   138e0:	mov	r1, r9
   138e4:	blt	159f8 <main@@Base+0x2720>
   138e8:	ldr	r1, [sp, #32]
   138ec:	mov	r2, r9
   138f0:	ldrb	r0, [r2, #4]!
   138f4:	ldr	r1, [r1]
   138f8:	cmp	r1, #0
   138fc:	beq	14aa4 <main@@Base+0x17cc>
   13900:	cmp	r0, #33	; 0x21
   13904:	bcc	13914 <main@@Base+0x63c>
   13908:	cmp	r0, #58	; 0x3a
   1390c:	mov	r1, r9
   13910:	bne	159f8 <main@@Base+0x2720>
   13914:	ldr	r0, [sp, #32]
   13918:	mov	r1, #0
   1391c:	str	r1, [r0]
   13920:	b	14ab4 <main@@Base+0x17dc>
   13924:	movw	r2, #29544	; 0x7368
   13928:	ldr	r5, [sp, #44]	; 0x2c
   1392c:	movt	r2, #26721	; 0x6861
   13930:	subs	r1, r8, r2
   13934:	sbcs	r1, r0, lr
   13938:	bcs	13b4c <main@@Base+0x874>
   1393c:	movw	r1, #0
   13940:	bfc	r8, #0, #16
   13944:	eor	r0, r0, lr
   13948:	movt	r1, #26163	; 0x6633
   1394c:	eor	r1, r8, r1
   13950:	orrs	r0, r1, r0
   13954:	bne	148ac <main@@Base+0x15d4>
   13958:	ldr	r8, [sp, #36]	; 0x24
   1395c:	cmp	sl, #7
   13960:	mov	r7, r9
   13964:	blt	1518c <main@@Base+0x1eb4>
   13968:	ldr	r2, [sp, #32]
   1396c:	mov	r1, r9
   13970:	ldrb	r0, [r1, #6]!
   13974:	ldr	r2, [r2]
   13978:	cmp	r2, #0
   1397c:	beq	14928 <main@@Base+0x1650>
   13980:	cmp	r0, #33	; 0x21
   13984:	bcc	13994 <main@@Base+0x6bc>
   13988:	cmp	r0, #58	; 0x3a
   1398c:	mov	r7, r9
   13990:	bne	1518c <main@@Base+0x1eb4>
   13994:	ldr	r0, [sp, #32]
   13998:	mov	r2, #0
   1399c:	str	r2, [r0]
   139a0:	b	14938 <main@@Base+0x1660>
   139a4:	movw	r1, #65535	; 0xffff
   139a8:	movw	r2, #30309	; 0x7665
   139ac:	movw	r3, #28530	; 0x6f72
   139b0:	movt	r1, #26735	; 0x686f
   139b4:	movt	r2, #26990	; 0x696e
   139b8:	movt	r3, #28276	; 0x6e74
   139bc:	cmp	r0, r1
   139c0:	bhi	13e68 <main@@Base+0xb90>
   139c4:	movw	r1, #25976	; 0x6578
   139c8:	movt	r1, #26220	; 0x666c
   139cc:	teq	r0, r1
   139d0:	bne	148ac <main@@Base+0x15d4>
   139d4:	ldr	r8, [sp, #36]	; 0x24
   139d8:	cmp	sl, #5
   139dc:	mov	r4, r9
   139e0:	blt	15a50 <main@@Base+0x2778>
   139e4:	ldr	r2, [sp, #32]
   139e8:	mov	r1, r9
   139ec:	ldrb	r0, [r1, #4]!
   139f0:	ldr	r2, [r2]
   139f4:	cmp	r2, #0
   139f8:	beq	14ad4 <main@@Base+0x17fc>
   139fc:	cmp	r0, #33	; 0x21
   13a00:	bcc	13a10 <main@@Base+0x738>
   13a04:	cmp	r0, #58	; 0x3a
   13a08:	mov	r4, r9
   13a0c:	bne	15a50 <main@@Base+0x2778>
   13a10:	ldr	r0, [sp, #32]
   13a14:	mov	r2, #0
   13a18:	str	r2, [r0]
   13a1c:	b	14ae4 <main@@Base+0x180c>
   13a20:	movw	r2, #28788	; 0x7074
   13a24:	movt	r2, #25965	; 0x656d
   13a28:	subs	r2, r8, r2
   13a2c:	sbcs	r2, r0, lr
   13a30:	bcs	13ed4 <main@@Base+0xbfc>
   13a34:	movw	r0, #28524	; 0x6f6c
   13a38:	movt	r0, #25199	; 0x626f
   13a3c:	eor	r0, r8, r0
   13a40:	orrs	r0, r0, r1
   13a44:	beq	14608 <main@@Base+0x1330>
   13a48:	movw	r0, #29541	; 0x7365
   13a4c:	movt	r0, #25185	; 0x6261
   13a50:	eor	r0, r8, r0
   13a54:	orrs	r0, r0, r1
   13a58:	bne	148ac <main@@Base+0x15d4>
   13a5c:	add	r7, r9, #8
   13a60:	mov	r1, #8
   13a64:	ldr	r8, [sp, #36]	; 0x24
   13a68:	ldr	sl, [sp, #40]	; 0x28
   13a6c:	sub	r0, r5, r7
   13a70:	cmp	r0, #8
   13a74:	movcc	r1, r0
   13a78:	and	r2, r1, #15
   13a7c:	sub	r1, r2, #2
   13a80:	cmp	r1, #7
   13a84:	bcs	14b34 <main@@Base+0x185c>
   13a88:	ldrb	r1, [r9, #9]
   13a8c:	lsl	r2, r1, #16
   13a90:	mov	r1, #0
   13a94:	ldrb	r3, [r7]
   13a98:	orr	r2, r2, r3, lsl #24
   13a9c:	movw	r3, #0
   13aa0:	movt	r3, #13876	; 0x3634
   13aa4:	eor	r2, r2, r3
   13aa8:	orrs	r1, r1, r2
   13aac:	bne	1a634 <main@@Base+0x735c>
   13ab0:	cmp	r0, #3
   13ab4:	blt	1a634 <main@@Base+0x735c>
   13ab8:	ldr	r2, [sp, #32]
   13abc:	mov	r1, r9
   13ac0:	ldrb	r0, [r1, #10]!
   13ac4:	ldr	r2, [r2]
   13ac8:	cmp	r2, #0
   13acc:	beq	14fe8 <main@@Base+0x1d10>
   13ad0:	cmp	r0, #33	; 0x21
   13ad4:	bcc	13ae0 <main@@Base+0x808>
   13ad8:	cmp	r0, #58	; 0x3a
   13adc:	bne	1a634 <main@@Base+0x735c>
   13ae0:	ldr	r0, [sp, #32]
   13ae4:	mov	r2, #0
   13ae8:	str	r2, [r0]
   13aec:	b	14ff4 <main@@Base+0x1d1c>
   13af0:	and	r6, r8, #-16777216	; 0xff000000
   13af4:	eor	r4, r0, lr
   13af8:	eor	r1, r6, #872415232	; 0x34000000
   13afc:	orrs	r1, r1, r4
   13b00:	bne	13f74 <main@@Base+0xc9c>
   13b04:	cmp	sl, #6
   13b08:	mov	r7, r9
   13b0c:	blt	15250 <main@@Base+0x1f78>
   13b10:	ldr	r2, [sp, #32]
   13b14:	mov	r1, r9
   13b18:	ldrb	r0, [r1, #5]!
   13b1c:	ldr	r2, [r2]
   13b20:	cmp	r2, #0
   13b24:	beq	14958 <main@@Base+0x1680>
   13b28:	cmp	r0, #33	; 0x21
   13b2c:	bcc	13b3c <main@@Base+0x864>
   13b30:	cmp	r0, #58	; 0x3a
   13b34:	mov	r7, r9
   13b38:	bne	15250 <main@@Base+0x1f78>
   13b3c:	ldr	r0, [sp, #32]
   13b40:	mov	r2, #0
   13b44:	str	r2, [r0]
   13b48:	b	14968 <main@@Base+0x1690>
   13b4c:	eor	r2, r8, r2
   13b50:	eor	r1, r0, lr
   13b54:	orrs	r2, r2, r1
   13b58:	bne	13fc4 <main@@Base+0xcec>
   13b5c:	add	sl, r9, #8
   13b60:	mov	r0, #8
   13b64:	sub	ip, r5, sl
   13b68:	cmp	ip, #8
   13b6c:	movcc	r0, ip
   13b70:	and	r0, r0, #15
   13b74:	sub	r7, r0, #1
   13b78:	cmp	r7, #7
   13b7c:	bhi	16884 <main@@Base+0x35ac>
   13b80:	add	r4, pc, #32
   13b84:	mov	r1, #0
   13b88:	mov	lr, #0
   13b8c:	mov	r8, #0
   13b90:	mov	r6, #0
   13b94:	mov	r3, #0
   13b98:	mov	r5, #0
   13b9c:	mov	r0, #0
   13ba0:	mov	r2, #0
   13ba4:	ldr	pc, [r4, r7, lsl #2]
   13ba8:	andeq	r3, r1, ip, lsl #24
   13bac:	andeq	r3, r1, r4, lsl #24
   13bb0:	strdeq	r3, [r1], -ip
   13bb4:	strdeq	r3, [r1], -r4
   13bb8:	andeq	r3, r1, r8, ror #23
   13bbc:	ldrdeq	r3, [r1], -ip
   13bc0:	andeq	r3, r1, ip, asr #23
   13bc4:	andeq	r3, r1, r8, asr #23
   13bc8:	ldrb	lr, [r9, #15]
   13bcc:	ldrb	r0, [r9, #14]
   13bd0:	mov	r8, r1
   13bd4:	orr	r0, lr, r0, lsl #8
   13bd8:	mov	r1, r0
   13bdc:	ldrb	r0, [r9, #13]
   13be0:	mov	r6, r8
   13be4:	orr	r1, r1, r0, lsl #16
   13be8:	ldrb	r0, [r9, #12]
   13bec:	mov	r3, r6
   13bf0:	orr	r1, r1, r0, lsl #24
   13bf4:	ldrb	r0, [r9, #11]
   13bf8:	orr	r5, r0, r3
   13bfc:	ldrb	r0, [r9, #10]
   13c00:	orr	r0, r5, r0, lsl #8
   13c04:	ldrb	r2, [r9, #9]
   13c08:	orr	r2, r0, r2, lsl #16
   13c0c:	ldrb	r0, [sl]
   13c10:	movw	r3, #30257	; 0x7631
   13c14:	movt	r3, #26222	; 0x666e
   13c18:	orr	r2, r2, r0, lsl #24
   13c1c:	subs	r0, r1, r3
   13c20:	movw	r0, #13407	; 0x345f
   13c24:	movt	r0, #29494	; 0x7336
   13c28:	sbcs	r0, r2, r0
   13c2c:	bcs	14580 <main@@Base+0x12a8>
   13c30:	eor	r0, r1, r3
   13c34:	ldr	r1, [sp, #24]
   13c38:	ldr	r5, [sp, #44]	; 0x2c
   13c3c:	eor	r1, r2, r1
   13c40:	orrs	r0, r0, r1
   13c44:	bne	16884 <main@@Base+0x35ac>
   13c48:	ldr	r8, [sp, #36]	; 0x24
   13c4c:	cmp	ip, #9
   13c50:	blt	17c40 <main@@Base+0x4968>
   13c54:	ldr	r2, [sp, #32]
   13c58:	mov	r1, r9
   13c5c:	ldrb	r0, [r1, #16]!
   13c60:	ldr	r2, [r2]
   13c64:	cmp	r2, #0
   13c68:	beq	14d78 <main@@Base+0x1aa0>
   13c6c:	cmp	r0, #33	; 0x21
   13c70:	bcc	13c7c <main@@Base+0x9a4>
   13c74:	cmp	r0, #58	; 0x3a
   13c78:	bne	17c40 <main@@Base+0x4968>
   13c7c:	ldr	r0, [sp, #32]
   13c80:	mov	r2, #0
   13c84:	str	r2, [r0]
   13c88:	b	14d84 <main@@Base+0x1aac>
   13c8c:	eor	r1, r8, r3
   13c90:	eor	r2, r0, r2
   13c94:	orrs	r1, r1, r2
   13c98:	bne	142b4 <main@@Base+0xfdc>
   13c9c:	add	r1, r9, #8
   13ca0:	mov	r2, #8
   13ca4:	ldr	sl, [sp, #40]	; 0x28
   13ca8:	sub	r0, r5, r1
   13cac:	cmp	r0, #8
   13cb0:	movcs	r0, r2
   13cb4:	and	r0, r0, #15
   13cb8:	sub	r7, r0, #1
   13cbc:	cmp	r7, #7
   13cc0:	bhi	145fc <main@@Base+0x1324>
   13cc4:	add	r0, pc, #32
   13cc8:	mov	r8, #0
   13ccc:	mov	ip, #0
   13cd0:	mov	lr, #0
   13cd4:	mov	r6, #0
   13cd8:	mov	r3, #0
   13cdc:	mov	r4, #0
   13ce0:	mov	r2, #0
   13ce4:	mov	r5, #0
   13ce8:	ldr	pc, [r0, r7, lsl #2]
   13cec:	andeq	r3, r1, r0, asr sp
   13cf0:	andeq	r3, r1, r8, asr #26
   13cf4:	andeq	r3, r1, r0, asr #26
   13cf8:	andeq	r3, r1, r8, lsr sp
   13cfc:	andeq	r3, r1, ip, lsr #26
   13d00:	andeq	r3, r1, r0, lsr #26
   13d04:	andeq	r3, r1, r0, lsl sp
   13d08:	andeq	r3, r1, ip, lsl #26
   13d0c:	ldrb	ip, [r9, #15]
   13d10:	ldrb	r0, [r9, #14]
   13d14:	mov	lr, r8
   13d18:	orr	r0, ip, r0, lsl #8
   13d1c:	mov	r8, r0
   13d20:	ldrb	r0, [r9, #13]
   13d24:	mov	r6, lr
   13d28:	orr	r8, r8, r0, lsl #16
   13d2c:	ldrb	r0, [r9, #12]
   13d30:	mov	r3, r6
   13d34:	orr	r8, r8, r0, lsl #24
   13d38:	ldrb	r0, [r9, #11]
   13d3c:	orr	r4, r0, r3
   13d40:	ldrb	r0, [r9, #10]
   13d44:	orr	r2, r4, r0, lsl #8
   13d48:	ldrb	r0, [r9, #9]
   13d4c:	orr	r5, r2, r0, lsl #16
   13d50:	ldrb	r2, [r1]
   13d54:	movw	r0, #25445	; 0x6365
   13d58:	movw	r3, #25971	; 0x6573
   13d5c:	movt	r0, #28769	; 0x7061
   13d60:	movt	r3, #24941	; 0x616d
   13d64:	eor	r0, r8, r0
   13d68:	orr	r2, r5, r2, lsl #24
   13d6c:	ldr	r5, [sp, #44]	; 0x2c
   13d70:	eor	r2, r2, r3
   13d74:	orrs	r0, r0, r2
   13d78:	bne	145fc <main@@Base+0x1324>
   13d7c:	add	r8, r9, #16
   13d80:	mov	r1, #8
   13d84:	sub	r0, r5, r8
   13d88:	cmp	r0, #8
   13d8c:	movcc	r1, r0
   13d90:	and	r1, r1, #15
   13d94:	sub	r3, r1, #1
   13d98:	cmp	r3, #7
   13d9c:	bhi	18a20 <main@@Base+0x5748>
   13da0:	add	r7, pc, #20
   13da4:	mov	r1, #0
   13da8:	mov	r2, #0
   13dac:	mov	r6, #0
   13db0:	mov	r5, #0
   13db4:	mov	r4, #0
   13db8:	ldr	pc, [r7, r3, lsl #2]
   13dbc:	andeq	r3, r1, r0, lsl #28
   13dc0:	strdeq	r3, [r1], -r8
   13dc4:	strdeq	r3, [r1], -r0
   13dc8:	andeq	r3, r1, r4, ror #27
   13dcc:	ldrdeq	r3, [r1], -ip
   13dd0:	ldrdeq	r3, [r1], -ip
   13dd4:	ldrdeq	r3, [r1], -ip
   13dd8:	ldrdeq	r3, [r1], -ip
   13ddc:	ldrb	r2, [r9, #20]
   13de0:	lsl	r2, r2, #24
   13de4:	ldrb	r3, [r9, #19]
   13de8:	orr	r6, r3, r1
   13dec:	mov	r1, r2
   13df0:	ldrb	r2, [r9, #18]
   13df4:	orr	r5, r6, r2, lsl #8
   13df8:	ldrb	r2, [r9, #17]
   13dfc:	orr	r4, r5, r2, lsl #16
   13e00:	ldrb	r2, [r8]
   13e04:	movw	r3, #25971	; 0x6573
   13e08:	ldr	r5, [sp, #44]	; 0x2c
   13e0c:	and	r1, r1, #-16777216	; 0xff000000
   13e10:	movt	r3, #24436	; 0x5f74
   13e14:	eor	r1, r1, #1946157056	; 0x74000000
   13e18:	orr	r2, r4, r2, lsl #24
   13e1c:	eor	r2, r2, r3
   13e20:	orrs	r1, r1, r2
   13e24:	bne	18a20 <main@@Base+0x5748>
   13e28:	cmp	r0, #6
   13e2c:	blt	18a20 <main@@Base+0x5748>
   13e30:	ldr	r2, [sp, #32]
   13e34:	mov	r1, r9
   13e38:	ldrb	r0, [r1, #21]!
   13e3c:	ldr	r2, [r2]
   13e40:	cmp	r2, #0
   13e44:	beq	1547c <main@@Base+0x21a4>
   13e48:	cmp	r0, #33	; 0x21
   13e4c:	bcc	13e58 <main@@Base+0xb80>
   13e50:	cmp	r0, #58	; 0x3a
   13e54:	bne	18a20 <main@@Base+0x5748>
   13e58:	ldr	r0, [sp, #32]
   13e5c:	mov	r2, #0
   13e60:	str	r2, [r0]
   13e64:	b	15488 <main@@Base+0x21b0>
   13e68:	subs	r1, r8, r3
   13e6c:	sbcs	r1, r0, r2
   13e70:	bcs	14314 <main@@Base+0x103c>
   13e74:	movw	r1, #0
   13e78:	bfc	r0, #0, #16
   13e7c:	movt	r1, #26736	; 0x6870
   13e80:	teq	r0, r1
   13e84:	bne	148ac <main@@Base+0x15d4>
   13e88:	ldr	r8, [sp, #36]	; 0x24
   13e8c:	cmp	sl, #3
   13e90:	mov	r7, r9
   13e94:	blt	16970 <main@@Base+0x3698>
   13e98:	ldr	r2, [sp, #32]
   13e9c:	mov	r1, r9
   13ea0:	ldrb	r0, [r1, #2]!
   13ea4:	ldr	r2, [r2]
   13ea8:	cmp	r2, #0
   13eac:	beq	14ce8 <main@@Base+0x1a10>
   13eb0:	cmp	r0, #33	; 0x21
   13eb4:	bcc	13ec4 <main@@Base+0xbec>
   13eb8:	cmp	r0, #58	; 0x3a
   13ebc:	mov	r7, r9
   13ec0:	bne	16970 <main@@Base+0x3698>
   13ec4:	ldr	r0, [sp, #32]
   13ec8:	mov	r2, #0
   13ecc:	str	r2, [r0]
   13ed0:	b	14cf8 <main@@Base+0x1a20>
   13ed4:	mvn	r2, #-1711276032	; 0x9a000000
   13ed8:	subs	r2, r2, r8
   13edc:	sbcs	r2, lr, r0
   13ee0:	bcc	143a0 <main@@Base+0x10c8>
   13ee4:	movw	r0, #28788	; 0x7074
   13ee8:	movt	r0, #25965	; 0x656d
   13eec:	eor	r0, r8, r0
   13ef0:	orrs	r0, r0, r1
   13ef4:	bne	148ac <main@@Base+0x15d4>
   13ef8:	add	r7, r9, #8
   13efc:	mov	r1, #8
   13f00:	mov	r2, #-268435456	; 0xf0000000
   13f04:	ldr	r8, [sp, #36]	; 0x24
   13f08:	ldr	sl, [sp, #40]	; 0x28
   13f0c:	sub	r0, r5, r7
   13f10:	cmp	r0, #8
   13f14:	movcc	r1, r0
   13f18:	add	r1, r2, r1, lsl #28
   13f1c:	asr	r1, r1, #28
   13f20:	cmp	r1, #0
   13f24:	blt	1a634 <main@@Base+0x735c>
   13f28:	ldrb	r1, [r7]
   13f2c:	cmp	r1, #121	; 0x79
   13f30:	bne	1a634 <main@@Base+0x735c>
   13f34:	cmp	r0, #2
   13f38:	blt	1a634 <main@@Base+0x735c>
   13f3c:	ldr	r2, [sp, #32]
   13f40:	mov	r1, r9
   13f44:	ldrb	r0, [r1, #9]!
   13f48:	ldr	r2, [r2]
   13f4c:	cmp	r2, #0
   13f50:	beq	156a4 <main@@Base+0x23cc>
   13f54:	cmp	r0, #33	; 0x21
   13f58:	bcc	13f64 <main@@Base+0xc8c>
   13f5c:	cmp	r0, #58	; 0x3a
   13f60:	bne	1a634 <main@@Base+0x735c>
   13f64:	ldr	r0, [sp, #32]
   13f68:	mov	r2, #0
   13f6c:	str	r2, [r0]
   13f70:	b	156b0 <main@@Base+0x23d8>
   13f74:	teq	r0, lr
   13f78:	bne	15dd0 <main@@Base+0x2af8>
   13f7c:	cmp	sl, #5
   13f80:	mov	r1, r9
   13f84:	blt	15d94 <main@@Base+0x2abc>
   13f88:	ldr	r1, [sp, #32]
   13f8c:	mov	r2, r9
   13f90:	ldrb	r0, [r2, #4]!
   13f94:	ldr	r1, [r1]
   13f98:	cmp	r1, #0
   13f9c:	beq	14b04 <main@@Base+0x182c>
   13fa0:	cmp	r0, #33	; 0x21
   13fa4:	bcc	13fb4 <main@@Base+0xcdc>
   13fa8:	cmp	r0, #58	; 0x3a
   13fac:	mov	r1, r9
   13fb0:	bne	15d94 <main@@Base+0x2abc>
   13fb4:	ldr	r0, [sp, #32]
   13fb8:	mov	r1, #0
   13fbc:	str	r1, [r0]
   13fc0:	b	14b14 <main@@Base+0x183c>
   13fc4:	movw	r7, #24431	; 0x5f6f
   13fc8:	movw	r3, #25460	; 0x6374
   13fcc:	movt	r7, #28530	; 0x6f72
   13fd0:	movt	r3, #30309	; 0x7665
   13fd4:	subs	r2, r8, r7
   13fd8:	sbcs	r2, r0, r3
   13fdc:	bcs	14418 <main@@Base+0x1140>
   13fe0:	movw	r0, #29556	; 0x7374
   13fe4:	ldr	sl, [sp, #40]	; 0x28
   13fe8:	movt	r0, #28261	; 0x6e65
   13fec:	eor	r0, r8, r0
   13ff0:	orrs	r0, r0, r1
   13ff4:	bne	162e4 <main@@Base+0x300c>
   13ff8:	add	r1, r9, #8
   13ffc:	mov	r2, #8
   14000:	sub	r0, r5, r1
   14004:	cmp	r0, #8
   14008:	movcs	r0, r2
   1400c:	and	r0, r0, #15
   14010:	sub	r7, r0, #1
   14014:	cmp	r7, #7
   14018:	bhi	145fc <main@@Base+0x1324>
   1401c:	add	r0, pc, #32
   14020:	mov	r8, #0
   14024:	mov	ip, #0
   14028:	mov	lr, #0
   1402c:	mov	r6, #0
   14030:	mov	r3, #0
   14034:	mov	r5, #0
   14038:	mov	r2, #0
   1403c:	mov	r4, #0
   14040:	ldr	pc, [r0, r7, lsl #2]
   14044:	andeq	r4, r1, r8, lsr #1
   14048:	andeq	r4, r1, r0, lsr #1
   1404c:	muleq	r1, r8, r0
   14050:	muleq	r1, r0, r0
   14054:	andeq	r4, r1, r4, lsl #1
   14058:	andeq	r4, r1, r8, ror r0
   1405c:	andeq	r4, r1, r8, rrx
   14060:	andeq	r4, r1, r4, rrx
   14064:	ldrb	ip, [r9, #15]
   14068:	ldrb	r0, [r9, #14]
   1406c:	mov	lr, r8
   14070:	orr	r0, ip, r0, lsl #8
   14074:	mov	r8, r0
   14078:	ldrb	r0, [r9, #13]
   1407c:	mov	r6, lr
   14080:	orr	r8, r8, r0, lsl #16
   14084:	ldrb	r0, [r9, #12]
   14088:	mov	r3, r6
   1408c:	orr	r8, r8, r0, lsl #24
   14090:	ldrb	r0, [r9, #11]
   14094:	orr	r5, r0, r3
   14098:	ldrb	r0, [r9, #10]
   1409c:	orr	r2, r5, r0, lsl #8
   140a0:	ldrb	r0, [r9, #9]
   140a4:	orr	r4, r2, r0, lsl #16
   140a8:	ldrb	r2, [r1]
   140ac:	movw	r0, #25205	; 0x6275
   140b0:	movw	r3, #26220	; 0x666c
   140b4:	ldr	r5, [sp, #44]	; 0x2c
   140b8:	movt	r0, #24948	; 0x6174
   140bc:	movt	r3, #25956	; 0x6564
   140c0:	eor	r0, r8, r0
   140c4:	orr	r2, r4, r2, lsl #24
   140c8:	eor	r2, r2, r3
   140cc:	orrs	r0, r0, r2
   140d0:	bne	145fc <main@@Base+0x1324>
   140d4:	add	r7, r9, #16
   140d8:	mov	r1, #8
   140dc:	ldr	r8, [sp, #36]	; 0x24
   140e0:	sub	r0, r5, r7
   140e4:	cmp	r0, #8
   140e8:	movcc	r1, r0
   140ec:	and	r1, r1, #15
   140f0:	sub	r2, r1, #1
   140f4:	cmp	r2, #7
   140f8:	bhi	1a634 <main@@Base+0x735c>
   140fc:	add	r3, pc, #4
   14100:	mov	r1, #0
   14104:	ldr	pc, [r3, r2, lsl #2]
   14108:	andeq	r4, r1, ip, lsr r1
   1410c:	andeq	r4, r1, r4, lsr r1
   14110:	andeq	r4, r1, ip, lsr #2
   14114:	andeq	r4, r1, r8, lsr #2
   14118:	andeq	r4, r1, r8, lsr #2
   1411c:	andeq	r4, r1, r8, lsr #2
   14120:	andeq	r4, r1, r8, lsr #2
   14124:	andeq	r4, r1, r8, lsr #2
   14128:	ldrb	r1, [r9, #19]
   1412c:	ldrb	r2, [r9, #18]
   14130:	orr	r1, r1, r2, lsl #8
   14134:	ldrb	r2, [r9, #17]
   14138:	orr	r1, r1, r2, lsl #16
   1413c:	ldrb	r2, [r7]
   14140:	orr	r1, r1, r2, lsl #24
   14144:	movw	r2, #25970	; 0x6572
   14148:	movt	r2, #26214	; 0x6666
   1414c:	teq	r1, r2
   14150:	bne	1a634 <main@@Base+0x735c>
   14154:	cmp	r0, #5
   14158:	blt	1a634 <main@@Base+0x735c>
   1415c:	ldr	r2, [sp, #32]
   14160:	mov	r1, r9
   14164:	ldrb	r0, [r1, #20]!
   14168:	ldr	r2, [r2]
   1416c:	cmp	r2, #0
   14170:	beq	15eec <main@@Base+0x2c14>
   14174:	cmp	r0, #33	; 0x21
   14178:	bcc	14184 <main@@Base+0xeac>
   1417c:	cmp	r0, #58	; 0x3a
   14180:	bne	1a634 <main@@Base+0x735c>
   14184:	ldr	r0, [sp, #32]
   14188:	mov	r2, #0
   1418c:	str	r2, [r0]
   14190:	b	15ef8 <main@@Base+0x2c20>
   14194:	movw	r0, #27749	; 0x6c65
   14198:	movw	r3, #26228	; 0x6674
   1419c:	ldr	r5, [sp, #44]	; 0x2c
   141a0:	ldr	r8, [sp, #36]	; 0x24
   141a4:	movt	r0, #24930	; 0x6162
   141a8:	movt	r3, #31087	; 0x796f
   141ac:	eor	r0, r1, r0
   141b0:	eor	r3, r2, r3
   141b4:	orrs	r0, r0, r3
   141b8:	beq	14770 <main@@Base+0x1498>
   141bc:	movw	r0, #26990	; 0x696e
   141c0:	movt	r0, #29810	; 0x7472
   141c4:	eor	r0, r1, r0
   141c8:	eor	r1, r2, r7
   141cc:	orrs	r0, r0, r1
   141d0:	bne	16888 <main@@Base+0x35b0>
   141d4:	add	r7, r9, #16
   141d8:	mov	r1, #8
   141dc:	sub	r0, r5, r7
   141e0:	cmp	r0, #8
   141e4:	movcc	r1, r0
   141e8:	and	r2, r1, #15
   141ec:	sub	r1, r2, #2
   141f0:	cmp	r1, #7
   141f4:	bcs	14b88 <main@@Base+0x18b0>
   141f8:	ldrb	r1, [r9, #17]
   141fc:	ldr	sl, [sp, #40]	; 0x28
   14200:	lsl	r2, r1, #16
   14204:	mov	r1, #0
   14208:	ldrb	r3, [r7]
   1420c:	orr	r2, r2, r3, lsl #24
   14210:	movw	r3, #0
   14214:	movt	r3, #26418	; 0x6732
   14218:	eor	r3, r2, r3
   1421c:	orrs	r1, r1, r3
   14220:	bne	14988 <main@@Base+0x16b0>
   14224:	cmp	r0, #3
   14228:	blt	1a634 <main@@Base+0x735c>
   1422c:	ldr	r2, [sp, #32]
   14230:	mov	r1, r9
   14234:	ldrb	r0, [r1, #18]!
   14238:	ldr	r2, [r2]
   1423c:	cmp	r2, #0
   14240:	beq	15014 <main@@Base+0x1d3c>
   14244:	cmp	r0, #33	; 0x21
   14248:	bcc	14254 <main@@Base+0xf7c>
   1424c:	cmp	r0, #58	; 0x3a
   14250:	bne	1a634 <main@@Base+0x735c>
   14254:	ldr	r0, [sp, #32]
   14258:	mov	r2, #0
   1425c:	str	r2, [r0]
   14260:	b	15020 <main@@Base+0x1d48>
   14264:	cmp	sl, #6
   14268:	ldr	r8, [sp, #36]	; 0x24
   1426c:	ldr	sl, [sp, #40]	; 0x28
   14270:	mov	r7, r9
   14274:	blt	15840 <main@@Base+0x2568>
   14278:	ldr	r2, [sp, #32]
   1427c:	mov	r1, r9
   14280:	ldrb	r0, [r1, #5]!
   14284:	ldr	r2, [r2]
   14288:	cmp	r2, #0
   1428c:	beq	14a04 <main@@Base+0x172c>
   14290:	cmp	r0, #33	; 0x21
   14294:	bcc	142a4 <main@@Base+0xfcc>
   14298:	cmp	r0, #58	; 0x3a
   1429c:	mov	r7, r9
   142a0:	bne	15840 <main@@Base+0x2568>
   142a4:	ldr	r0, [sp, #32]
   142a8:	mov	r2, #0
   142ac:	str	r2, [r0]
   142b0:	b	14a14 <main@@Base+0x173c>
   142b4:	ldr	r8, [sp, #36]	; 0x24
   142b8:	movw	r1, #29440	; 0x7300
   142bc:	bic	r0, r0, #255	; 0xff
   142c0:	movt	r1, #28783	; 0x706f
   142c4:	teq	r0, r1
   142c8:	bne	148b0 <main@@Base+0x15d8>
   142cc:	cmp	sl, #4
   142d0:	mov	r4, r9
   142d4:	blt	16ad0 <main@@Base+0x37f8>
   142d8:	ldr	r2, [sp, #32]
   142dc:	mov	r1, r9
   142e0:	ldrb	r0, [r1, #3]!
   142e4:	ldr	r2, [r2]
   142e8:	cmp	r2, #0
   142ec:	beq	14d18 <main@@Base+0x1a40>
   142f0:	cmp	r0, #33	; 0x21
   142f4:	bcc	14304 <main@@Base+0x102c>
   142f8:	cmp	r0, #58	; 0x3a
   142fc:	mov	r4, r9
   14300:	bne	16ad0 <main@@Base+0x37f8>
   14304:	ldr	r0, [sp, #32]
   14308:	mov	r2, #0
   1430c:	str	r2, [r0]
   14310:	b	14d28 <main@@Base+0x1a50>
   14314:	eor	r1, r8, r3
   14318:	eor	r2, r0, r2
   1431c:	orrs	r1, r1, r2
   14320:	bne	147f4 <main@@Base+0x151c>
   14324:	add	r7, r9, #8
   14328:	mov	r1, #8
   1432c:	mov	r2, #-268435456	; 0xf0000000
   14330:	ldr	r8, [sp, #36]	; 0x24
   14334:	ldr	sl, [sp, #40]	; 0x28
   14338:	sub	r0, r5, r7
   1433c:	cmp	r0, #8
   14340:	movcc	r1, r0
   14344:	add	r1, r2, r1, lsl #28
   14348:	asr	r1, r1, #28
   1434c:	cmp	r1, #0
   14350:	blt	1a634 <main@@Base+0x735c>
   14354:	ldrb	r1, [r7]
   14358:	cmp	r1, #121	; 0x79
   1435c:	bne	1a634 <main@@Base+0x735c>
   14360:	cmp	r0, #2
   14364:	blt	1a634 <main@@Base+0x735c>
   14368:	ldr	r2, [sp, #32]
   1436c:	mov	r1, r9
   14370:	ldrb	r0, [r1, #9]!
   14374:	ldr	r2, [r2]
   14378:	cmp	r2, #0
   1437c:	beq	156d0 <main@@Base+0x23f8>
   14380:	cmp	r0, #33	; 0x21
   14384:	bcc	14390 <main@@Base+0x10b8>
   14388:	cmp	r0, #58	; 0x3a
   1438c:	bne	1a634 <main@@Base+0x735c>
   14390:	ldr	r0, [sp, #32]
   14394:	mov	r2, #0
   14398:	str	r2, [r0]
   1439c:	b	156dc <main@@Base+0x2404>
   143a0:	movw	r3, #0
   143a4:	mov	r2, r8
   143a8:	movt	r3, #26163	; 0x6633
   143ac:	bfc	r2, #0, #16
   143b0:	subs	r3, r3, #65536	; 0x10000
   143b4:	eor	r2, r2, r3
   143b8:	sbc	r3, lr, #0
   143bc:	eor	r0, r0, r3
   143c0:	orrs	r0, r2, r0
   143c4:	bne	14850 <main@@Base+0x1578>
   143c8:	cmp	sl, #7
   143cc:	ldr	r8, [sp, #36]	; 0x24
   143d0:	ldr	sl, [sp, #40]	; 0x28
   143d4:	mov	r7, r9
   143d8:	blt	17918 <main@@Base+0x4640>
   143dc:	ldr	r2, [sp, #32]
   143e0:	mov	r1, r9
   143e4:	ldrb	r0, [r1, #6]!
   143e8:	ldr	r2, [r2]
   143ec:	cmp	r2, #0
   143f0:	beq	14d48 <main@@Base+0x1a70>
   143f4:	cmp	r0, #33	; 0x21
   143f8:	bcc	14408 <main@@Base+0x1130>
   143fc:	cmp	r0, #58	; 0x3a
   14400:	mov	r7, r9
   14404:	bne	17918 <main@@Base+0x4640>
   14408:	ldr	r0, [sp, #32]
   1440c:	mov	r2, #0
   14410:	str	r2, [r0]
   14414:	b	14d58 <main@@Base+0x1a80>
   14418:	eor	r1, r8, r7
   1441c:	eor	r0, r0, r3
   14420:	orrs	r0, r1, r0
   14424:	bne	148ac <main@@Base+0x15d4>
   14428:	add	sl, r9, #8
   1442c:	mov	r0, #8
   14430:	sub	lr, r5, sl
   14434:	cmp	lr, #8
   14438:	movcc	r0, lr
   1443c:	and	r0, r0, #15
   14440:	sub	r6, r0, #1
   14444:	cmp	r6, #7
   14448:	bhi	16884 <main@@Base+0x35ac>
   1444c:	add	r7, pc, #32
   14450:	mov	r1, #0
   14454:	mov	ip, #0
   14458:	mov	r8, #0
   1445c:	mov	r4, #0
   14460:	mov	r3, #0
   14464:	mov	r5, #0
   14468:	mov	r2, #0
   1446c:	mov	r0, #0
   14470:	ldr	pc, [r7, r6, lsl #2]
   14474:	ldrdeq	r4, [r1], -r8
   14478:	ldrdeq	r4, [r1], -r0
   1447c:	andeq	r4, r1, r8, asr #9
   14480:	andeq	r4, r1, r0, asr #9
   14484:			; <UNDEFINED> instruction: 0x000144b4
   14488:	andeq	r4, r1, r8, lsr #9
   1448c:	muleq	r1, r8, r4
   14490:	muleq	r1, r4, r4
   14494:	ldrb	ip, [r9, #15]
   14498:	ldrb	r0, [r9, #14]
   1449c:	mov	r8, r1
   144a0:	orr	r0, ip, r0, lsl #8
   144a4:	mov	r1, r0
   144a8:	ldrb	r0, [r9, #13]
   144ac:	mov	r4, r8
   144b0:	orr	r1, r1, r0, lsl #16
   144b4:	ldrb	r0, [r9, #12]
   144b8:	mov	r3, r4
   144bc:	orr	r1, r1, r0, lsl #24
   144c0:	ldrb	r0, [r9, #11]
   144c4:	orr	r5, r0, r3
   144c8:	ldrb	r0, [r9, #10]
   144cc:	orr	r2, r5, r0, lsl #8
   144d0:	ldrb	r0, [r9, #9]
   144d4:	orr	r0, r2, r0, lsl #16
   144d8:	ldrb	r3, [sl]
   144dc:	movw	r2, #27749	; 0x6c65
   144e0:	movt	r2, #30050	; 0x7562
   144e4:	eor	r2, r1, r2
   144e8:	orr	r0, r0, r3, lsl #24
   144ec:	movw	r3, #25711	; 0x646f
   144f0:	movt	r3, #26207	; 0x665f
   144f4:	eor	r3, r0, r3
   144f8:	orrs	r2, r2, r3
   144fc:	bne	14a34 <main@@Base+0x175c>
   14500:	ldr	r5, [sp, #44]	; 0x2c
   14504:	add	r7, r9, #16
   14508:	mov	r1, #8
   1450c:	mov	r2, #-268435456	; 0xf0000000
   14510:	ldr	r8, [sp, #36]	; 0x24
   14514:	sub	r0, r5, r7
   14518:	cmp	r0, #8
   1451c:	movcc	r1, r0
   14520:	add	r1, r2, r1, lsl #28
   14524:	asr	r1, r1, #28
   14528:	cmp	r1, #0
   1452c:	blt	147e8 <main@@Base+0x1510>
   14530:	ldrb	r1, [r7]
   14534:	cmp	r1, #115	; 0x73
   14538:	bne	147e8 <main@@Base+0x1510>
   1453c:	ldr	sl, [sp, #40]	; 0x28
   14540:	cmp	r0, #2
   14544:	blt	1a634 <main@@Base+0x735c>
   14548:	ldr	r2, [sp, #32]
   1454c:	mov	r1, r9
   14550:	ldrb	r0, [r1, #17]!
   14554:	ldr	r2, [r2]
   14558:	cmp	r2, #0
   1455c:	beq	1659c <main@@Base+0x32c4>
   14560:	cmp	r0, #33	; 0x21
   14564:	bcc	14570 <main@@Base+0x1298>
   14568:	cmp	r0, #58	; 0x3a
   1456c:	bne	1a634 <main@@Base+0x735c>
   14570:	ldr	r0, [sp, #32]
   14574:	mov	r2, #0
   14578:	str	r2, [r0]
   1457c:	b	165a8 <main@@Base+0x32d0>
   14580:	movw	r0, #30256	; 0x7630
   14584:	ldr	r5, [sp, #44]	; 0x2c
   14588:	movt	r0, #26222	; 0x666e
   1458c:	subs	r0, r0, r1
   14590:	movw	r0, #12895	; 0x325f
   14594:	movt	r0, #30003	; 0x7533
   14598:	sbcs	r0, r0, r2
   1459c:	eor	r0, r1, r3
   145a0:	bcc	148bc <main@@Base+0x15e4>
   145a4:	movw	r1, #13407	; 0x345f
   145a8:	ldr	r8, [sp, #36]	; 0x24
   145ac:	movt	r1, #29494	; 0x7336
   145b0:	eor	r1, r2, r1
   145b4:	orrs	r0, r0, r1
   145b8:	bne	16888 <main@@Base+0x35b0>
   145bc:	cmp	ip, #9
   145c0:	blt	187bc <main@@Base+0x54e4>
   145c4:	ldr	r2, [sp, #32]
   145c8:	mov	r1, r9
   145cc:	ldrb	r0, [r1, #16]!
   145d0:	ldr	r2, [r2]
   145d4:	cmp	r2, #0
   145d8:	beq	150cc <main@@Base+0x1df4>
   145dc:	cmp	r0, #33	; 0x21
   145e0:	bcc	145ec <main@@Base+0x1314>
   145e4:	cmp	r0, #58	; 0x3a
   145e8:	bne	187bc <main@@Base+0x54e4>
   145ec:	ldr	r0, [sp, #32]
   145f0:	mov	r2, #0
   145f4:	str	r2, [r0]
   145f8:	b	150d8 <main@@Base+0x1e00>
   145fc:	ldr	r8, [sp, #36]	; 0x24
   14600:	mov	r0, r8
   14604:	b	1b1dc <main@@Base+0x7f04>
   14608:	cmp	sl, #9
   1460c:	ldr	r8, [sp, #36]	; 0x24
   14610:	ldr	sl, [sp, #40]	; 0x28
   14614:	mov	r7, r9
   14618:	blt	165e8 <main@@Base+0x3310>
   1461c:	ldr	r2, [sp, #32]
   14620:	mov	r1, r9
   14624:	ldrb	r0, [r1, #8]!
   14628:	ldr	r2, [r2]
   1462c:	cmp	r2, #0
   14630:	beq	14ba0 <main@@Base+0x18c8>
   14634:	cmp	r0, #33	; 0x21
   14638:	bcc	14648 <main@@Base+0x1370>
   1463c:	cmp	r0, #58	; 0x3a
   14640:	mov	r7, r9
   14644:	bne	165e8 <main@@Base+0x3310>
   14648:	ldr	r0, [sp, #32]
   1464c:	mov	r2, #0
   14650:	str	r2, [r0]
   14654:	b	14bb0 <main@@Base+0x18d8>
   14658:	add	sl, r9, #16
   1465c:	mov	r1, #8
   14660:	ldr	r8, [sp, #36]	; 0x24
   14664:	sub	lr, r5, sl
   14668:	cmp	lr, #8
   1466c:	movcc	r1, lr
   14670:	and	r1, r1, #15
   14674:	sub	r7, r1, #1
   14678:	cmp	r7, #7
   1467c:	bhi	16888 <main@@Base+0x35b0>
   14680:	add	r0, pc, #28
   14684:	mov	r1, #0
   14688:	mov	ip, #0
   1468c:	mov	r5, #0
   14690:	mov	r3, #0
   14694:	mov	r6, #0
   14698:	mov	r4, #0
   1469c:	mov	r2, #0
   146a0:	ldr	pc, [r0, r7, lsl #2]
   146a4:	andeq	r4, r1, r0, lsl #14
   146a8:	strdeq	r4, [r1], -r8
   146ac:	strdeq	r4, [r1], -r0
   146b0:	andeq	r4, r1, r8, ror #13
   146b4:	ldrdeq	r4, [r1], -ip
   146b8:	andeq	r4, r1, ip, asr #13
   146bc:	andeq	r4, r1, r4, asr #13
   146c0:	andeq	r4, r1, r4, asr #13
   146c4:	ldrb	r0, [r9, #22]
   146c8:	lsl	ip, r0, #8
   146cc:	ldrb	r0, [r9, #21]
   146d0:	mov	r5, r1
   146d4:	orr	r0, ip, r0, lsl #16
   146d8:	mov	r1, r0
   146dc:	ldrb	r0, [r9, #20]
   146e0:	mov	r3, r5
   146e4:	orr	r1, r1, r0, lsl #24
   146e8:	ldrb	r0, [r9, #19]
   146ec:	orr	r6, r0, r3
   146f0:	ldrb	r0, [r9, #18]
   146f4:	orr	r4, r6, r0, lsl #8
   146f8:	ldrb	r0, [r9, #17]
   146fc:	orr	r2, r4, r0, lsl #16
   14700:	bic	r0, r1, #255	; 0xff
   14704:	movw	r1, #29696	; 0x7400
   14708:	ldr	r5, [sp, #44]	; 0x2c
   1470c:	movt	r1, #30051	; 0x7563
   14710:	eor	r0, r0, r1
   14714:	ldrb	r1, [sl]
   14718:	orr	r1, r2, r1, lsl #24
   1471c:	movw	r2, #29810	; 0x7472
   14720:	movt	r2, #25715	; 0x6473
   14724:	eor	r1, r1, r2
   14728:	orrs	r0, r0, r1
   1472c:	bne	16888 <main@@Base+0x35b0>
   14730:	cmp	lr, #8
   14734:	blt	16888 <main@@Base+0x35b0>
   14738:	ldr	r2, [sp, #32]
   1473c:	mov	r1, r9
   14740:	ldrb	r0, [r1, #23]!
   14744:	ldr	r2, [r2]
   14748:	cmp	r2, #0
   1474c:	beq	15040 <main@@Base+0x1d68>
   14750:	cmp	r0, #33	; 0x21
   14754:	bcc	14760 <main@@Base+0x1488>
   14758:	cmp	r0, #58	; 0x3a
   1475c:	bne	16888 <main@@Base+0x35b0>
   14760:	ldr	r0, [sp, #32]
   14764:	mov	r2, #0
   14768:	str	r2, [r0]
   1476c:	b	1504c <main@@Base+0x1d74>
   14770:	add	r7, r9, #16
   14774:	mov	r1, #8
   14778:	mov	r2, #-268435456	; 0xf0000000
   1477c:	sub	r0, r5, r7
   14780:	cmp	r0, #8
   14784:	movcc	r1, r0
   14788:	add	r1, r2, r1, lsl #28
   1478c:	asr	r1, r1, #28
   14790:	cmp	r1, #0
   14794:	blt	147e8 <main@@Base+0x1510>
   14798:	ldrb	r1, [r7]
   1479c:	cmp	r1, #115	; 0x73
   147a0:	bne	147e8 <main@@Base+0x1510>
   147a4:	ldr	sl, [sp, #40]	; 0x28
   147a8:	cmp	r0, #2
   147ac:	blt	1a634 <main@@Base+0x735c>
   147b0:	ldr	r2, [sp, #32]
   147b4:	mov	r1, r9
   147b8:	ldrb	r0, [r1, #17]!
   147bc:	ldr	r2, [r2]
   147c0:	cmp	r2, #0
   147c4:	beq	1551c <main@@Base+0x2244>
   147c8:	cmp	r0, #33	; 0x21
   147cc:	bcc	147d8 <main@@Base+0x1500>
   147d0:	cmp	r0, #58	; 0x3a
   147d4:	bne	1a634 <main@@Base+0x735c>
   147d8:	ldr	r0, [sp, #32]
   147dc:	mov	r2, #0
   147e0:	str	r2, [r0]
   147e4:	b	15528 <main@@Base+0x2250>
   147e8:	mov	r0, r8
   147ec:	mov	r1, r7
   147f0:	b	16890 <main@@Base+0x35b8>
   147f4:	ldr	r8, [sp, #36]	; 0x24
   147f8:	movw	r1, #28257	; 0x6e61
   147fc:	movt	r1, #28001	; 0x6d61
   14800:	teq	r0, r1
   14804:	bne	148b0 <main@@Base+0x15d8>
   14808:	cmp	sl, #5
   1480c:	mov	r7, r9
   14810:	blt	1852c <main@@Base+0x5254>
   14814:	ldr	r2, [sp, #32]
   14818:	mov	r1, r9
   1481c:	ldrb	r0, [r1, #4]!
   14820:	ldr	r2, [r2]
   14824:	cmp	r2, #0
   14828:	beq	1506c <main@@Base+0x1d94>
   1482c:	cmp	r0, #33	; 0x21
   14830:	bcc	14840 <main@@Base+0x1568>
   14834:	cmp	r0, #58	; 0x3a
   14838:	mov	r7, r9
   1483c:	bne	1852c <main@@Base+0x5254>
   14840:	ldr	r0, [sp, #32]
   14844:	mov	r2, #0
   14848:	str	r2, [r0]
   1484c:	b	1507c <main@@Base+0x1da4>
   14850:	and	r0, r8, #-16777216	; 0xff000000
   14854:	eor	r0, r0, #1711276032	; 0x66000000
   14858:	orrs	r0, r0, r1
   1485c:	bne	148ac <main@@Base+0x15d4>
   14860:	ldr	r8, [sp, #36]	; 0x24
   14864:	cmp	sl, #6
   14868:	mov	r7, r9
   1486c:	blt	18690 <main@@Base+0x53b8>
   14870:	ldr	r2, [sp, #32]
   14874:	mov	r1, r9
   14878:	ldrb	r0, [r1, #5]!
   1487c:	ldr	r2, [r2]
   14880:	cmp	r2, #0
   14884:	beq	1509c <main@@Base+0x1dc4>
   14888:	cmp	r0, #33	; 0x21
   1488c:	bcc	1489c <main@@Base+0x15c4>
   14890:	cmp	r0, #58	; 0x3a
   14894:	mov	r7, r9
   14898:	bne	18690 <main@@Base+0x53b8>
   1489c:	ldr	r0, [sp, #32]
   148a0:	mov	r2, #0
   148a4:	str	r2, [r0]
   148a8:	b	150ac <main@@Base+0x1dd4>
   148ac:	ldr	r8, [sp, #36]	; 0x24
   148b0:	mov	r0, r8
   148b4:	mov	r1, r9
   148b8:	b	16890 <main@@Base+0x35b8>
   148bc:	movw	r1, #13407	; 0x345f
   148c0:	ldr	r8, [sp, #36]	; 0x24
   148c4:	movt	r1, #30006	; 0x7536
   148c8:	eor	r1, r2, r1
   148cc:	orrs	r1, r0, r1
   148d0:	beq	14b48 <main@@Base+0x1870>
   148d4:	movw	r1, #12895	; 0x325f
   148d8:	movt	r1, #30003	; 0x7533
   148dc:	eor	r1, r2, r1
   148e0:	orrs	r0, r0, r1
   148e4:	bne	16888 <main@@Base+0x35b0>
   148e8:	cmp	ip, #9
   148ec:	blt	1901c <main@@Base+0x5d44>
   148f0:	ldr	r2, [sp, #32]
   148f4:	mov	r1, r9
   148f8:	ldrb	r0, [r1, #16]!
   148fc:	ldr	r2, [r2]
   14900:	cmp	r2, #0
   14904:	beq	156fc <main@@Base+0x2424>
   14908:	cmp	r0, #33	; 0x21
   1490c:	bcc	14918 <main@@Base+0x1640>
   14910:	cmp	r0, #58	; 0x3a
   14914:	bne	1901c <main@@Base+0x5d44>
   14918:	ldr	r0, [sp, #32]
   1491c:	mov	r2, #0
   14920:	str	r2, [r0]
   14924:	b	15708 <main@@Base+0x2430>
   14928:	cmp	r0, #34	; 0x22
   1492c:	mov	r7, r9
   14930:	bne	1518c <main@@Base+0x1eb4>
   14934:	add	r1, r9, #7
   14938:	sub	r0, r5, r1
   1493c:	cmp	r0, #2
   14940:	blt	14be4 <main@@Base+0x190c>
   14944:	ldrb	r0, [r1]
   14948:	cmp	r0, #32
   1494c:	bls	14bd0 <main@@Base+0x18f8>
   14950:	mov	r7, r1
   14954:	b	14bf4 <main@@Base+0x191c>
   14958:	cmp	r0, #34	; 0x22
   1495c:	mov	r7, r9
   14960:	bne	15250 <main@@Base+0x1f78>
   14964:	add	r1, r9, #6
   14968:	sub	r0, r5, r1
   1496c:	cmp	r0, #2
   14970:	blt	14c58 <main@@Base+0x1980>
   14974:	ldrb	r0, [r1]
   14978:	cmp	r0, #32
   1497c:	bls	14c44 <main@@Base+0x196c>
   14980:	mov	r7, r1
   14984:	b	14c68 <main@@Base+0x1990>
   14988:	and	r1, r2, #-16777216	; 0xff000000
   1498c:	teq	r1, #1728053248	; 0x67000000
   14990:	bne	1a634 <main@@Base+0x735c>
   14994:	cmp	r0, #2
   14998:	blt	1a634 <main@@Base+0x735c>
   1499c:	ldr	r2, [sp, #32]
   149a0:	mov	r1, r9
   149a4:	ldrb	r0, [r1, #17]!
   149a8:	ldr	r2, [r2]
   149ac:	cmp	r2, #0
   149b0:	beq	1597c <main@@Base+0x26a4>
   149b4:	cmp	r0, #33	; 0x21
   149b8:	bcc	149c4 <main@@Base+0x16ec>
   149bc:	cmp	r0, #58	; 0x3a
   149c0:	bne	1a634 <main@@Base+0x735c>
   149c4:	ldr	r0, [sp, #32]
   149c8:	mov	r2, #0
   149cc:	str	r2, [r0]
   149d0:	b	15988 <main@@Base+0x26b0>
   149d4:	cmp	r0, #34	; 0x22
   149d8:	mov	r1, r9
   149dc:	bne	157ec <main@@Base+0x2514>
   149e0:	add	r2, r9, #6
   149e4:	sub	r0, r5, r2
   149e8:	cmp	r0, #2
   149ec:	blt	14db8 <main@@Base+0x1ae0>
   149f0:	ldrb	r0, [r2]
   149f4:	cmp	r0, #32
   149f8:	bls	14da4 <main@@Base+0x1acc>
   149fc:	mov	r1, r2
   14a00:	b	14dcc <main@@Base+0x1af4>
   14a04:	cmp	r0, #34	; 0x22
   14a08:	mov	r7, r9
   14a0c:	bne	15840 <main@@Base+0x2568>
   14a10:	add	r1, r9, #6
   14a14:	sub	r0, r5, r1
   14a18:	cmp	r0, #2
   14a1c:	blt	14e2c <main@@Base+0x1b54>
   14a20:	ldrb	r0, [r1]
   14a24:	cmp	r0, #32
   14a28:	bls	14e18 <main@@Base+0x1b40>
   14a2c:	mov	r7, r1
   14a30:	b	14e3c <main@@Base+0x1b64>
   14a34:	movw	r2, #24428	; 0x5f6c
   14a38:	lsr	r1, r1, #8
   14a3c:	ldr	r5, [sp, #44]	; 0x2c
   14a40:	movt	r2, #102	; 0x66
   14a44:	eor	r2, r2, r0, lsr #8
   14a48:	orr	r0, r1, r0, lsl #24
   14a4c:	movw	r1, #26483	; 0x6773
   14a50:	movt	r1, #28526	; 0x6f6e
   14a54:	eor	r0, r0, r1
   14a58:	orrs	r0, r0, r2
   14a5c:	bne	16884 <main@@Base+0x35ac>
   14a60:	ldr	r8, [sp, #36]	; 0x24
   14a64:	cmp	lr, #8
   14a68:	blt	16888 <main@@Base+0x35b0>
   14a6c:	ldr	r2, [sp, #32]
   14a70:	mov	r1, r9
   14a74:	ldrb	r0, [r1, #15]!
   14a78:	ldr	r2, [r2]
   14a7c:	cmp	r2, #0
   14a80:	beq	159a8 <main@@Base+0x26d0>
   14a84:	cmp	r0, #33	; 0x21
   14a88:	bcc	14a94 <main@@Base+0x17bc>
   14a8c:	cmp	r0, #58	; 0x3a
   14a90:	bne	16888 <main@@Base+0x35b0>
   14a94:	ldr	r0, [sp, #32]
   14a98:	mov	r2, #0
   14a9c:	str	r2, [r0]
   14aa0:	b	159b4 <main@@Base+0x26dc>
   14aa4:	cmp	r0, #34	; 0x22
   14aa8:	mov	r1, r9
   14aac:	bne	159f8 <main@@Base+0x2720>
   14ab0:	add	r2, r9, #5
   14ab4:	sub	r0, r5, r2
   14ab8:	cmp	r0, #2
   14abc:	blt	14ea0 <main@@Base+0x1bc8>
   14ac0:	ldrb	r0, [r2]
   14ac4:	cmp	r0, #32
   14ac8:	bls	14e8c <main@@Base+0x1bb4>
   14acc:	mov	r1, r2
   14ad0:	b	14eb4 <main@@Base+0x1bdc>
   14ad4:	cmp	r0, #34	; 0x22
   14ad8:	mov	r4, r9
   14adc:	bne	15a50 <main@@Base+0x2778>
   14ae0:	add	r1, r9, #5
   14ae4:	sub	r0, r5, r1
   14ae8:	cmp	r0, #2
   14aec:	blt	14f14 <main@@Base+0x1c3c>
   14af0:	ldrb	r0, [r1]
   14af4:	cmp	r0, #32
   14af8:	bls	14f00 <main@@Base+0x1c28>
   14afc:	mov	r4, r1
   14b00:	b	14f24 <main@@Base+0x1c4c>
   14b04:	cmp	r0, #34	; 0x22
   14b08:	mov	r1, r9
   14b0c:	bne	15d94 <main@@Base+0x2abc>
   14b10:	add	r2, r9, #5
   14b14:	sub	r0, r5, r2
   14b18:	cmp	r0, #2
   14b1c:	blt	14f88 <main@@Base+0x1cb0>
   14b20:	ldrb	r0, [r2]
   14b24:	cmp	r0, #32
   14b28:	bls	14f74 <main@@Base+0x1c9c>
   14b2c:	mov	r1, r2
   14b30:	b	14f9c <main@@Base+0x1cc4>
   14b34:	cmp	r2, #1
   14b38:	mov	r1, #0
   14b3c:	mov	r2, #0
   14b40:	beq	13a94 <main@@Base+0x7bc>
   14b44:	b	1a634 <main@@Base+0x735c>
   14b48:	cmp	ip, #9
   14b4c:	blt	19214 <main@@Base+0x5f3c>
   14b50:	ldr	r2, [sp, #32]
   14b54:	mov	r1, r9
   14b58:	ldrb	r0, [r1, #16]!
   14b5c:	ldr	r2, [r2]
   14b60:	cmp	r2, #0
   14b64:	beq	15728 <main@@Base+0x2450>
   14b68:	cmp	r0, #33	; 0x21
   14b6c:	bcc	14b78 <main@@Base+0x18a0>
   14b70:	cmp	r0, #58	; 0x3a
   14b74:	bne	19214 <main@@Base+0x5f3c>
   14b78:	ldr	r0, [sp, #32]
   14b7c:	mov	r2, #0
   14b80:	str	r2, [r0]
   14b84:	b	15734 <main@@Base+0x245c>
   14b88:	ldr	sl, [sp, #40]	; 0x28
   14b8c:	cmp	r2, #1
   14b90:	mov	r1, #0
   14b94:	mov	r2, #0
   14b98:	beq	14208 <main@@Base+0xf30>
   14b9c:	b	1a634 <main@@Base+0x735c>
   14ba0:	cmp	r0, #34	; 0x22
   14ba4:	mov	r7, r9
   14ba8:	bne	165e8 <main@@Base+0x3310>
   14bac:	add	r1, r9, #9
   14bb0:	sub	r0, r5, r1
   14bb4:	cmp	r0, #2
   14bb8:	blt	1510c <main@@Base+0x1e34>
   14bbc:	ldrb	r0, [r1]
   14bc0:	cmp	r0, #32
   14bc4:	bls	150f8 <main@@Base+0x1e20>
   14bc8:	mov	r7, r1
   14bcc:	b	1511c <main@@Base+0x1e44>
   14bd0:	bne	14be4 <main@@Base+0x190c>
   14bd4:	mov	r7, r1
   14bd8:	ldrb	r0, [r7, #1]!
   14bdc:	cmp	r0, #32
   14be0:	bhi	14bf4 <main@@Base+0x191c>
   14be4:	mov	r0, r8
   14be8:	mov	r2, r5
   14bec:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   14bf0:	mov	r7, r0
   14bf4:	cmp	r7, r5
   14bf8:	beq	14c2c <main@@Base+0x1954>
   14bfc:	ldrb	r0, [r7]
   14c00:	cmp	r0, #58	; 0x3a
   14c04:	bne	14c2c <main@@Base+0x1954>
   14c08:	add	r1, r7, #1
   14c0c:	sub	r0, r5, r1
   14c10:	cmp	r0, #2
   14c14:	blt	1517c <main@@Base+0x1ea4>
   14c18:	ldrb	r0, [r1]
   14c1c:	cmp	r0, #32
   14c20:	bls	1516c <main@@Base+0x1e94>
   14c24:	mov	r7, r1
   14c28:	b	1518c <main@@Base+0x1eb4>
   14c2c:	mov	r0, r8
   14c30:	mov	r1, r7
   14c34:	mov	r2, r5
   14c38:	mov	r3, #4
   14c3c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   14c40:	b	15188 <main@@Base+0x1eb0>
   14c44:	bne	14c58 <main@@Base+0x1980>
   14c48:	mov	r7, r1
   14c4c:	ldrb	r0, [r7, #1]!
   14c50:	cmp	r0, #32
   14c54:	bhi	14c68 <main@@Base+0x1990>
   14c58:	ldr	r0, [sp, #36]	; 0x24
   14c5c:	mov	r2, r5
   14c60:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   14c64:	mov	r7, r0
   14c68:	cmp	r7, r5
   14c6c:	beq	14ca0 <main@@Base+0x19c8>
   14c70:	ldrb	r0, [r7]
   14c74:	cmp	r0, #58	; 0x3a
   14c78:	bne	14ca0 <main@@Base+0x19c8>
   14c7c:	add	r1, r7, #1
   14c80:	sub	r0, r5, r1
   14c84:	cmp	r0, #2
   14c88:	blt	15240 <main@@Base+0x1f68>
   14c8c:	ldrb	r0, [r1]
   14c90:	cmp	r0, #32
   14c94:	bls	15230 <main@@Base+0x1f58>
   14c98:	mov	r7, r1
   14c9c:	b	15250 <main@@Base+0x1f78>
   14ca0:	ldr	r0, [sp, #36]	; 0x24
   14ca4:	mov	r1, r7
   14ca8:	mov	r2, r5
   14cac:	mov	r3, #4
   14cb0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   14cb4:	b	1524c <main@@Base+0x1f74>
   14cb8:	cmp	r0, #34	; 0x22
   14cbc:	bne	16884 <main@@Base+0x35ac>
   14cc0:	add	r1, r9, #17
   14cc4:	ldr	r6, [sp, #36]	; 0x24
   14cc8:	sub	r0, r5, r1
   14ccc:	cmp	r0, #2
   14cd0:	blt	154bc <main@@Base+0x21e4>
   14cd4:	ldrb	r0, [r1]
   14cd8:	cmp	r0, #32
   14cdc:	bls	154a8 <main@@Base+0x21d0>
   14ce0:	mov	r4, r1
   14ce4:	b	154cc <main@@Base+0x21f4>
   14ce8:	cmp	r0, #34	; 0x22
   14cec:	mov	r7, r9
   14cf0:	bne	16970 <main@@Base+0x3698>
   14cf4:	add	r1, r9, #3
   14cf8:	sub	r0, r5, r1
   14cfc:	cmp	r0, #2
   14d00:	blt	1555c <main@@Base+0x2284>
   14d04:	ldrb	r0, [r1]
   14d08:	cmp	r0, #32
   14d0c:	bls	15548 <main@@Base+0x2270>
   14d10:	mov	r7, r1
   14d14:	b	1556c <main@@Base+0x2294>
   14d18:	cmp	r0, #34	; 0x22
   14d1c:	mov	r4, r9
   14d20:	bne	16ad0 <main@@Base+0x37f8>
   14d24:	add	r1, r9, #4
   14d28:	sub	r0, r5, r1
   14d2c:	cmp	r0, #2
   14d30:	blt	155d0 <main@@Base+0x22f8>
   14d34:	ldrb	r0, [r1]
   14d38:	cmp	r0, #32
   14d3c:	bls	155bc <main@@Base+0x22e4>
   14d40:	mov	r4, r1
   14d44:	b	155e0 <main@@Base+0x2308>
   14d48:	cmp	r0, #34	; 0x22
   14d4c:	mov	r7, r9
   14d50:	bne	17918 <main@@Base+0x4640>
   14d54:	add	r1, r9, #7
   14d58:	sub	r0, r5, r1
   14d5c:	cmp	r0, #2
   14d60:	blt	15644 <main@@Base+0x236c>
   14d64:	ldrb	r0, [r1]
   14d68:	cmp	r0, #32
   14d6c:	bls	15630 <main@@Base+0x2358>
   14d70:	mov	r7, r1
   14d74:	b	15654 <main@@Base+0x237c>
   14d78:	cmp	r0, #34	; 0x22
   14d7c:	bne	17c40 <main@@Base+0x4968>
   14d80:	add	r1, r9, #17
   14d84:	sub	r0, r5, r1
   14d88:	cmp	r0, #2
   14d8c:	blt	15768 <main@@Base+0x2490>
   14d90:	ldrb	r0, [r1]
   14d94:	cmp	r0, #32
   14d98:	bls	15754 <main@@Base+0x247c>
   14d9c:	mov	r7, r1
   14da0:	b	15778 <main@@Base+0x24a0>
   14da4:	bne	14db8 <main@@Base+0x1ae0>
   14da8:	mov	r1, r2
   14dac:	ldrb	r0, [r1, #1]!
   14db0:	cmp	r0, #32
   14db4:	bhi	14dcc <main@@Base+0x1af4>
   14db8:	mov	r1, r2
   14dbc:	mov	r0, r8
   14dc0:	mov	r2, r5
   14dc4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   14dc8:	mov	r1, r0
   14dcc:	cmp	r1, r5
   14dd0:	beq	14e04 <main@@Base+0x1b2c>
   14dd4:	ldrb	r0, [r1]
   14dd8:	cmp	r0, #58	; 0x3a
   14ddc:	bne	14e04 <main@@Base+0x1b2c>
   14de0:	add	r2, r1, #1
   14de4:	sub	r0, r5, r2
   14de8:	cmp	r0, #2
   14dec:	blt	157d8 <main@@Base+0x2500>
   14df0:	ldrb	r0, [r2]
   14df4:	cmp	r0, #32
   14df8:	bls	157c8 <main@@Base+0x24f0>
   14dfc:	mov	r1, r2
   14e00:	b	157ec <main@@Base+0x2514>
   14e04:	mov	r0, r8
   14e08:	mov	r2, r5
   14e0c:	mov	r3, #4
   14e10:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   14e14:	b	157e8 <main@@Base+0x2510>
   14e18:	bne	14e2c <main@@Base+0x1b54>
   14e1c:	mov	r7, r1
   14e20:	ldrb	r0, [r7, #1]!
   14e24:	cmp	r0, #32
   14e28:	bhi	14e3c <main@@Base+0x1b64>
   14e2c:	mov	r0, r8
   14e30:	mov	r2, r5
   14e34:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   14e38:	mov	r7, r0
   14e3c:	cmp	r7, r5
   14e40:	beq	14e74 <main@@Base+0x1b9c>
   14e44:	ldrb	r0, [r7]
   14e48:	cmp	r0, #58	; 0x3a
   14e4c:	bne	14e74 <main@@Base+0x1b9c>
   14e50:	add	r1, r7, #1
   14e54:	sub	r0, r5, r1
   14e58:	cmp	r0, #2
   14e5c:	blt	15830 <main@@Base+0x2558>
   14e60:	ldrb	r0, [r1]
   14e64:	cmp	r0, #32
   14e68:	bls	15820 <main@@Base+0x2548>
   14e6c:	mov	r7, r1
   14e70:	b	15840 <main@@Base+0x2568>
   14e74:	mov	r0, r8
   14e78:	mov	r1, r7
   14e7c:	mov	r2, r5
   14e80:	mov	r3, #4
   14e84:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   14e88:	b	1583c <main@@Base+0x2564>
   14e8c:	bne	14ea0 <main@@Base+0x1bc8>
   14e90:	mov	r1, r2
   14e94:	ldrb	r0, [r1, #1]!
   14e98:	cmp	r0, #32
   14e9c:	bhi	14eb4 <main@@Base+0x1bdc>
   14ea0:	mov	r1, r2
   14ea4:	mov	r0, r8
   14ea8:	mov	r2, r5
   14eac:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   14eb0:	mov	r1, r0
   14eb4:	cmp	r1, r5
   14eb8:	beq	14eec <main@@Base+0x1c14>
   14ebc:	ldrb	r0, [r1]
   14ec0:	cmp	r0, #58	; 0x3a
   14ec4:	bne	14eec <main@@Base+0x1c14>
   14ec8:	add	r2, r1, #1
   14ecc:	sub	r0, r5, r2
   14ed0:	cmp	r0, #2
   14ed4:	blt	159e4 <main@@Base+0x270c>
   14ed8:	ldrb	r0, [r2]
   14edc:	cmp	r0, #32
   14ee0:	bls	159d4 <main@@Base+0x26fc>
   14ee4:	mov	r1, r2
   14ee8:	b	159f8 <main@@Base+0x2720>
   14eec:	mov	r0, r8
   14ef0:	mov	r2, r5
   14ef4:	mov	r3, #4
   14ef8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   14efc:	b	159f4 <main@@Base+0x271c>
   14f00:	bne	14f14 <main@@Base+0x1c3c>
   14f04:	mov	r4, r1
   14f08:	ldrb	r0, [r4, #1]!
   14f0c:	cmp	r0, #32
   14f10:	bhi	14f24 <main@@Base+0x1c4c>
   14f14:	mov	r0, r8
   14f18:	mov	r2, r5
   14f1c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   14f20:	mov	r4, r0
   14f24:	cmp	r4, r5
   14f28:	beq	14f5c <main@@Base+0x1c84>
   14f2c:	ldrb	r0, [r4]
   14f30:	cmp	r0, #58	; 0x3a
   14f34:	bne	14f5c <main@@Base+0x1c84>
   14f38:	add	r1, r4, #1
   14f3c:	sub	r0, r5, r1
   14f40:	cmp	r0, #2
   14f44:	blt	15a40 <main@@Base+0x2768>
   14f48:	ldrb	r0, [r1]
   14f4c:	cmp	r0, #32
   14f50:	bls	15a30 <main@@Base+0x2758>
   14f54:	mov	r4, r1
   14f58:	b	15a50 <main@@Base+0x2778>
   14f5c:	mov	r0, r8
   14f60:	mov	r1, r4
   14f64:	mov	r2, r5
   14f68:	mov	r3, #4
   14f6c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   14f70:	b	15a4c <main@@Base+0x2774>
   14f74:	bne	14f88 <main@@Base+0x1cb0>
   14f78:	mov	r1, r2
   14f7c:	ldrb	r0, [r1, #1]!
   14f80:	cmp	r0, #32
   14f84:	bhi	14f9c <main@@Base+0x1cc4>
   14f88:	ldr	r0, [sp, #36]	; 0x24
   14f8c:	mov	r1, r2
   14f90:	mov	r2, r5
   14f94:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   14f98:	mov	r1, r0
   14f9c:	cmp	r1, r5
   14fa0:	beq	14fd4 <main@@Base+0x1cfc>
   14fa4:	ldrb	r0, [r1]
   14fa8:	cmp	r0, #58	; 0x3a
   14fac:	bne	14fd4 <main@@Base+0x1cfc>
   14fb0:	add	r2, r1, #1
   14fb4:	sub	r0, r5, r2
   14fb8:	cmp	r0, #2
   14fbc:	blt	15d80 <main@@Base+0x2aa8>
   14fc0:	ldrb	r0, [r2]
   14fc4:	cmp	r0, #32
   14fc8:	bls	15d70 <main@@Base+0x2a98>
   14fcc:	mov	r1, r2
   14fd0:	b	15d94 <main@@Base+0x2abc>
   14fd4:	ldr	r0, [sp, #36]	; 0x24
   14fd8:	mov	r2, r5
   14fdc:	mov	r3, #4
   14fe0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   14fe4:	b	15d90 <main@@Base+0x2ab8>
   14fe8:	cmp	r0, #34	; 0x22
   14fec:	bne	1a634 <main@@Base+0x735c>
   14ff0:	add	r1, r9, #11
   14ff4:	sub	r0, r5, r1
   14ff8:	cmp	r0, #2
   14ffc:	blt	15f2c <main@@Base+0x2c54>
   15000:	ldrb	r0, [r1]
   15004:	cmp	r0, #32
   15008:	bls	15f18 <main@@Base+0x2c40>
   1500c:	mov	r4, r1
   15010:	b	15f3c <main@@Base+0x2c64>
   15014:	cmp	r0, #34	; 0x22
   15018:	bne	1a634 <main@@Base+0x735c>
   1501c:	add	r1, r9, #19
   15020:	sub	r0, r5, r1
   15024:	cmp	r0, #2
   15028:	blt	15fa0 <main@@Base+0x2cc8>
   1502c:	ldrb	r0, [r1]
   15030:	cmp	r0, #32
   15034:	bls	15f8c <main@@Base+0x2cb4>
   15038:	mov	r4, r1
   1503c:	b	15fb0 <main@@Base+0x2cd8>
   15040:	cmp	r0, #34	; 0x22
   15044:	bne	16888 <main@@Base+0x35b0>
   15048:	add	r1, r9, #24
   1504c:	sub	r0, r5, r1
   15050:	cmp	r0, #2
   15054:	blt	16014 <main@@Base+0x2d3c>
   15058:	ldrb	r0, [r1]
   1505c:	cmp	r0, #32
   15060:	bls	16000 <main@@Base+0x2d28>
   15064:	mov	r7, r1
   15068:	b	16024 <main@@Base+0x2d4c>
   1506c:	cmp	r0, #34	; 0x22
   15070:	mov	r7, r9
   15074:	bne	1852c <main@@Base+0x5254>
   15078:	add	r1, r9, #5
   1507c:	sub	r0, r5, r1
   15080:	cmp	r0, #2
   15084:	blt	16088 <main@@Base+0x2db0>
   15088:	ldrb	r0, [r1]
   1508c:	cmp	r0, #32
   15090:	bls	16074 <main@@Base+0x2d9c>
   15094:	mov	r7, r1
   15098:	b	16098 <main@@Base+0x2dc0>
   1509c:	cmp	r0, #34	; 0x22
   150a0:	mov	r7, r9
   150a4:	bne	18690 <main@@Base+0x53b8>
   150a8:	add	r1, r9, #6
   150ac:	sub	r0, r5, r1
   150b0:	cmp	r0, #2
   150b4:	blt	160fc <main@@Base+0x2e24>
   150b8:	ldrb	r0, [r1]
   150bc:	cmp	r0, #32
   150c0:	bls	160e8 <main@@Base+0x2e10>
   150c4:	mov	r7, r1
   150c8:	b	1610c <main@@Base+0x2e34>
   150cc:	cmp	r0, #34	; 0x22
   150d0:	bne	187bc <main@@Base+0x54e4>
   150d4:	add	r1, r9, #17
   150d8:	sub	r0, r5, r1
   150dc:	cmp	r0, #2
   150e0:	blt	16170 <main@@Base+0x2e98>
   150e4:	ldrb	r0, [r1]
   150e8:	cmp	r0, #32
   150ec:	bls	1615c <main@@Base+0x2e84>
   150f0:	mov	r7, r1
   150f4:	b	16180 <main@@Base+0x2ea8>
   150f8:	bne	1510c <main@@Base+0x1e34>
   150fc:	mov	r7, r1
   15100:	ldrb	r0, [r7, #1]!
   15104:	cmp	r0, #32
   15108:	bhi	1511c <main@@Base+0x1e44>
   1510c:	mov	r0, r8
   15110:	mov	r2, r5
   15114:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15118:	mov	r7, r0
   1511c:	cmp	r7, r5
   15120:	beq	15154 <main@@Base+0x1e7c>
   15124:	ldrb	r0, [r7]
   15128:	cmp	r0, #58	; 0x3a
   1512c:	bne	15154 <main@@Base+0x1e7c>
   15130:	add	r1, r7, #1
   15134:	sub	r0, r5, r1
   15138:	cmp	r0, #2
   1513c:	blt	165d8 <main@@Base+0x3300>
   15140:	ldrb	r0, [r1]
   15144:	cmp	r0, #32
   15148:	bls	165c8 <main@@Base+0x32f0>
   1514c:	mov	r7, r1
   15150:	b	165e8 <main@@Base+0x3310>
   15154:	mov	r0, r8
   15158:	mov	r1, r7
   1515c:	mov	r2, r5
   15160:	mov	r3, #4
   15164:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   15168:	b	165e4 <main@@Base+0x330c>
   1516c:	bne	1517c <main@@Base+0x1ea4>
   15170:	ldrb	r0, [r7, #2]!
   15174:	cmp	r0, #32
   15178:	bhi	1518c <main@@Base+0x1eb4>
   1517c:	mov	r0, r8
   15180:	mov	r2, r5
   15184:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15188:	mov	r7, r0
   1518c:	ldr	sl, [sp, #40]	; 0x28
   15190:	cmp	r9, r7
   15194:	beq	162e8 <main@@Base+0x3010>
   15198:	mov	r0, #0
   1519c:	mov	r1, r7
   151a0:	mov	r2, r5
   151a4:	sub	r3, fp, #56	; 0x38
   151a8:	str	r0, [fp, #-56]	; 0xffffffc8
   151ac:	mov	r0, r8
   151b0:	bl	2f068 <flatcc_json_parser_float@@Base>
   151b4:	mov	r4, r0
   151b8:	cmp	r7, r0
   151bc:	bne	151f0 <main@@Base+0x1f18>
   151c0:	movw	r3, #16644	; 0x4104
   151c4:	sub	r0, fp, #56	; 0x38
   151c8:	mov	r1, r7
   151cc:	mov	r2, r5
   151d0:	str	r0, [sp]
   151d4:	mov	r0, r8
   151d8:	movt	r3, #4
   151dc:	bl	2270c <main@@Base+0xf434>
   151e0:	mov	r4, r0
   151e4:	cmp	r0, r7
   151e8:	cmpne	r4, r5
   151ec:	beq	13390 <main@@Base+0xb8>
   151f0:	vldr	s0, [fp, #-56]	; 0xffffffc8
   151f4:	vcmp.f32	s0, #0.0
   151f8:	vmrs	APSR_nzcv, fpscr
   151fc:	bne	1520c <main@@Base+0x1f34>
   15200:	ldrb	r0, [r8, #8]
   15204:	tst	r0, #2
   15208:	beq	1b1e8 <main@@Base+0x7f10>
   1520c:	ldr	r0, [r8]
   15210:	mov	r1, #27
   15214:	mov	r2, #4
   15218:	mov	r3, #4
   1521c:	bl	2b8dc <flatcc_builder_table_add@@Base>
   15220:	cmp	r0, #0
   15224:	beq	13390 <main@@Base+0xb8>
   15228:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1522c:	b	16340 <main@@Base+0x3068>
   15230:	bne	15240 <main@@Base+0x1f68>
   15234:	ldrb	r0, [r7, #2]!
   15238:	cmp	r0, #32
   1523c:	bhi	15250 <main@@Base+0x1f78>
   15240:	ldr	r0, [sp, #36]	; 0x24
   15244:	mov	r2, r5
   15248:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1524c:	mov	r7, r0
   15250:	cmp	r9, r7
   15254:	beq	16254 <main@@Base+0x2f7c>
   15258:	ldr	r8, [sp, #36]	; 0x24
   1525c:	mov	r1, #4
   15260:	mov	r2, #2
   15264:	mvn	r3, #-1073741824	; 0xc0000000
   15268:	ldr	r0, [r8]
   1526c:	bl	2a240 <flatcc_builder_start_vector@@Base>
   15270:	cmp	r0, #0
   15274:	bne	1cec4 <main@@Base+0x9bec>
   15278:	cmp	r7, r5
   1527c:	beq	152b4 <main@@Base+0x1fdc>
   15280:	ldrb	r0, [r7]
   15284:	cmp	r0, #91	; 0x5b
   15288:	bne	152b4 <main@@Base+0x1fdc>
   1528c:	ldr	sl, [sp, #40]	; 0x28
   15290:	add	r1, r7, #1
   15294:	sub	r0, r5, r1
   15298:	cmp	r0, #2
   1529c:	blt	15300 <main@@Base+0x2028>
   152a0:	ldrb	r0, [r1]
   152a4:	cmp	r0, #32
   152a8:	bls	152f0 <main@@Base+0x2018>
   152ac:	mov	r7, r1
   152b0:	b	15310 <main@@Base+0x2038>
   152b4:	mov	r0, r8
   152b8:	mov	r1, r7
   152bc:	mov	r2, r5
   152c0:	mov	r3, #22
   152c4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   152c8:	ldr	sl, [sp, #40]	; 0x28
   152cc:	mov	r7, r0
   152d0:	ldr	r0, [r8]
   152d4:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   152d8:	cmp	r0, #0
   152dc:	str	r0, [sp, #52]	; 0x34
   152e0:	beq	1cec4 <main@@Base+0x9bec>
   152e4:	ldr	r0, [r8]
   152e8:	mov	r1, #9
   152ec:	b	1632c <main@@Base+0x3054>
   152f0:	bne	15300 <main@@Base+0x2028>
   152f4:	ldrb	r0, [r7, #2]!
   152f8:	cmp	r0, #32
   152fc:	bhi	15310 <main@@Base+0x2038>
   15300:	mov	r0, r8
   15304:	mov	r2, r5
   15308:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1530c:	mov	r7, r0
   15310:	cmp	r7, r5
   15314:	mov	r4, r5
   15318:	beq	1535c <main@@Base+0x2084>
   1531c:	ldrb	r0, [r7]
   15320:	cmp	r0, #93	; 0x5d
   15324:	bne	15358 <main@@Base+0x2080>
   15328:	add	r1, r7, #1
   1532c:	sub	r0, r5, r1
   15330:	cmp	r0, #2
   15334:	blt	15edc <main@@Base+0x2c04>
   15338:	ldrb	r0, [r1]
   1533c:	cmp	r0, #32
   15340:	bhi	15468 <main@@Base+0x2190>
   15344:	bne	15edc <main@@Base+0x2c04>
   15348:	ldrb	r0, [r7, #2]!
   1534c:	cmp	r0, #32
   15350:	bls	15edc <main@@Base+0x2c04>
   15354:	b	152d0 <main@@Base+0x1ff8>
   15358:	mov	r4, r7
   1535c:	ldr	r0, [r8]
   15360:	mov	r1, #1
   15364:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   15368:	mov	r3, r0
   1536c:	cmp	r0, #0
   15370:	beq	13390 <main@@Base+0xb8>
   15374:	mov	r0, r8
   15378:	mov	r1, r4
   1537c:	mov	r2, r5
   15380:	bl	1e974 <main@@Base+0xb69c>
   15384:	mov	r1, r0
   15388:	sub	r0, r5, r0
   1538c:	cmp	r0, #2
   15390:	blt	153bc <main@@Base+0x20e4>
   15394:	ldrb	r0, [r1]
   15398:	cmp	r0, #32
   1539c:	bls	153a8 <main@@Base+0x20d0>
   153a0:	mov	r4, r1
   153a4:	b	153cc <main@@Base+0x20f4>
   153a8:	bne	153bc <main@@Base+0x20e4>
   153ac:	mov	r4, r1
   153b0:	ldrb	r0, [r4, #1]!
   153b4:	cmp	r0, #32
   153b8:	bhi	153cc <main@@Base+0x20f4>
   153bc:	mov	r0, r8
   153c0:	mov	r2, r5
   153c4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   153c8:	mov	r4, r0
   153cc:	cmp	r4, r5
   153d0:	beq	1543c <main@@Base+0x2164>
   153d4:	ldrb	r0, [r4]
   153d8:	cmp	r0, #44	; 0x2c
   153dc:	bne	15444 <main@@Base+0x216c>
   153e0:	add	r1, r4, #1
   153e4:	sub	r0, r5, r1
   153e8:	cmp	r0, #2
   153ec:	blt	15414 <main@@Base+0x213c>
   153f0:	ldrb	r0, [r1]
   153f4:	cmp	r0, #32
   153f8:	bls	15404 <main@@Base+0x212c>
   153fc:	mov	r4, r1
   15400:	b	15424 <main@@Base+0x214c>
   15404:	bne	15414 <main@@Base+0x213c>
   15408:	ldrb	r0, [r4, #2]!
   1540c:	cmp	r0, #32
   15410:	bhi	15424 <main@@Base+0x214c>
   15414:	mov	r0, r8
   15418:	mov	r2, r5
   1541c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15420:	mov	r4, r0
   15424:	cmp	r4, r5
   15428:	beq	15470 <main@@Base+0x2198>
   1542c:	ldrb	r0, [r4]
   15430:	cmp	r0, #93	; 0x5d
   15434:	bne	1535c <main@@Base+0x2084>
   15438:	b	1544c <main@@Base+0x2174>
   1543c:	mov	r7, r5
   15440:	b	152d0 <main@@Base+0x1ff8>
   15444:	cmp	r0, #93	; 0x5d
   15448:	bne	15964 <main@@Base+0x268c>
   1544c:	add	r1, r4, #1
   15450:	sub	r0, r5, r1
   15454:	cmp	r0, #2
   15458:	blt	15edc <main@@Base+0x2c04>
   1545c:	ldrb	r0, [r1]
   15460:	cmp	r0, #32
   15464:	bls	15ec8 <main@@Base+0x2bf0>
   15468:	mov	r7, r1
   1546c:	b	152d0 <main@@Base+0x1ff8>
   15470:	mov	r0, r8
   15474:	mov	r1, r5
   15478:	b	1596c <main@@Base+0x2694>
   1547c:	cmp	r0, #34	; 0x22
   15480:	bne	18a20 <main@@Base+0x5748>
   15484:	add	r1, r9, #22
   15488:	sub	r0, r5, r1
   1548c:	cmp	r0, #2
   15490:	blt	1678c <main@@Base+0x34b4>
   15494:	ldrb	r0, [r1]
   15498:	cmp	r0, #32
   1549c:	bls	16778 <main@@Base+0x34a0>
   154a0:	mov	r4, r1
   154a4:	b	1679c <main@@Base+0x34c4>
   154a8:	bne	154bc <main@@Base+0x21e4>
   154ac:	mov	r4, r1
   154b0:	ldrb	r0, [r4, #1]!
   154b4:	cmp	r0, #32
   154b8:	bhi	154cc <main@@Base+0x21f4>
   154bc:	mov	r0, r6
   154c0:	mov	r2, r5
   154c4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   154c8:	mov	r4, r0
   154cc:	cmp	r4, r5
   154d0:	beq	15504 <main@@Base+0x222c>
   154d4:	ldrb	r0, [r4]
   154d8:	cmp	r0, #58	; 0x3a
   154dc:	bne	15504 <main@@Base+0x222c>
   154e0:	add	r1, r4, #1
   154e4:	sub	r0, r5, r1
   154e8:	cmp	r0, #2
   154ec:	blt	16810 <main@@Base+0x3538>
   154f0:	ldrb	r0, [r1]
   154f4:	cmp	r0, #32
   154f8:	bls	16800 <main@@Base+0x3528>
   154fc:	mov	r4, r1
   15500:	b	16820 <main@@Base+0x3548>
   15504:	mov	r0, r6
   15508:	mov	r1, r4
   1550c:	mov	r2, r5
   15510:	mov	r3, #4
   15514:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   15518:	b	1681c <main@@Base+0x3544>
   1551c:	cmp	r0, #34	; 0x22
   15520:	bne	1a634 <main@@Base+0x735c>
   15524:	add	r1, r9, #18
   15528:	sub	r0, r5, r1
   1552c:	cmp	r0, #2
   15530:	blt	168f0 <main@@Base+0x3618>
   15534:	ldrb	r0, [r1]
   15538:	cmp	r0, #32
   1553c:	bls	168dc <main@@Base+0x3604>
   15540:	mov	r4, r1
   15544:	b	16900 <main@@Base+0x3628>
   15548:	bne	1555c <main@@Base+0x2284>
   1554c:	mov	r7, r1
   15550:	ldrb	r0, [r7, #1]!
   15554:	cmp	r0, #32
   15558:	bhi	1556c <main@@Base+0x2294>
   1555c:	mov	r0, r8
   15560:	mov	r2, r5
   15564:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15568:	mov	r7, r0
   1556c:	cmp	r7, r5
   15570:	beq	155a4 <main@@Base+0x22cc>
   15574:	ldrb	r0, [r7]
   15578:	cmp	r0, #58	; 0x3a
   1557c:	bne	155a4 <main@@Base+0x22cc>
   15580:	add	r1, r7, #1
   15584:	sub	r0, r5, r1
   15588:	cmp	r0, #2
   1558c:	blt	16960 <main@@Base+0x3688>
   15590:	ldrb	r0, [r1]
   15594:	cmp	r0, #32
   15598:	bls	16950 <main@@Base+0x3678>
   1559c:	mov	r7, r1
   155a0:	b	16970 <main@@Base+0x3698>
   155a4:	mov	r0, r8
   155a8:	mov	r1, r7
   155ac:	mov	r2, r5
   155b0:	mov	r3, #4
   155b4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   155b8:	b	1696c <main@@Base+0x3694>
   155bc:	bne	155d0 <main@@Base+0x22f8>
   155c0:	mov	r4, r1
   155c4:	ldrb	r0, [r4, #1]!
   155c8:	cmp	r0, #32
   155cc:	bhi	155e0 <main@@Base+0x2308>
   155d0:	mov	r0, r8
   155d4:	mov	r2, r5
   155d8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   155dc:	mov	r4, r0
   155e0:	cmp	r4, r5
   155e4:	beq	15618 <main@@Base+0x2340>
   155e8:	ldrb	r0, [r4]
   155ec:	cmp	r0, #58	; 0x3a
   155f0:	bne	15618 <main@@Base+0x2340>
   155f4:	add	r1, r4, #1
   155f8:	sub	r0, r5, r1
   155fc:	cmp	r0, #2
   15600:	blt	16ac0 <main@@Base+0x37e8>
   15604:	ldrb	r0, [r1]
   15608:	cmp	r0, #32
   1560c:	bls	16ab0 <main@@Base+0x37d8>
   15610:	mov	r4, r1
   15614:	b	16ad0 <main@@Base+0x37f8>
   15618:	mov	r0, r8
   1561c:	mov	r1, r4
   15620:	mov	r2, r5
   15624:	mov	r3, #4
   15628:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1562c:	b	16acc <main@@Base+0x37f4>
   15630:	bne	15644 <main@@Base+0x236c>
   15634:	mov	r7, r1
   15638:	ldrb	r0, [r7, #1]!
   1563c:	cmp	r0, #32
   15640:	bhi	15654 <main@@Base+0x237c>
   15644:	mov	r0, r8
   15648:	mov	r2, r5
   1564c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15650:	mov	r7, r0
   15654:	cmp	r7, r5
   15658:	beq	1568c <main@@Base+0x23b4>
   1565c:	ldrb	r0, [r7]
   15660:	cmp	r0, #58	; 0x3a
   15664:	bne	1568c <main@@Base+0x23b4>
   15668:	add	r1, r7, #1
   1566c:	sub	r0, r5, r1
   15670:	cmp	r0, #2
   15674:	blt	17908 <main@@Base+0x4630>
   15678:	ldrb	r0, [r1]
   1567c:	cmp	r0, #32
   15680:	bls	178f8 <main@@Base+0x4620>
   15684:	mov	r7, r1
   15688:	b	17918 <main@@Base+0x4640>
   1568c:	mov	r0, r8
   15690:	mov	r1, r7
   15694:	mov	r2, r5
   15698:	mov	r3, #4
   1569c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   156a0:	b	17914 <main@@Base+0x463c>
   156a4:	cmp	r0, #34	; 0x22
   156a8:	bne	1a634 <main@@Base+0x735c>
   156ac:	add	r1, r9, #10
   156b0:	sub	r0, r5, r1
   156b4:	cmp	r0, #2
   156b8:	blt	179b4 <main@@Base+0x46dc>
   156bc:	ldrb	r0, [r1]
   156c0:	cmp	r0, #32
   156c4:	bls	179a0 <main@@Base+0x46c8>
   156c8:	mov	r4, r1
   156cc:	b	179c4 <main@@Base+0x46ec>
   156d0:	cmp	r0, #34	; 0x22
   156d4:	bne	1a634 <main@@Base+0x735c>
   156d8:	add	r1, r9, #10
   156dc:	sub	r0, r5, r1
   156e0:	cmp	r0, #2
   156e4:	blt	17a28 <main@@Base+0x4750>
   156e8:	ldrb	r0, [r1]
   156ec:	cmp	r0, #32
   156f0:	bls	17a14 <main@@Base+0x473c>
   156f4:	mov	r4, r1
   156f8:	b	17a38 <main@@Base+0x4760>
   156fc:	cmp	r0, #34	; 0x22
   15700:	bne	1901c <main@@Base+0x5d44>
   15704:	add	r1, r9, #17
   15708:	sub	r0, r5, r1
   1570c:	cmp	r0, #2
   15710:	blt	17a9c <main@@Base+0x47c4>
   15714:	ldrb	r0, [r1]
   15718:	cmp	r0, #32
   1571c:	bls	17a88 <main@@Base+0x47b0>
   15720:	mov	r7, r1
   15724:	b	17aac <main@@Base+0x47d4>
   15728:	cmp	r0, #34	; 0x22
   1572c:	bne	19214 <main@@Base+0x5f3c>
   15730:	add	r1, r9, #17
   15734:	sub	r0, r5, r1
   15738:	cmp	r0, #2
   1573c:	blt	17b18 <main@@Base+0x4840>
   15740:	ldrb	r0, [r1]
   15744:	cmp	r0, #32
   15748:	bls	17b04 <main@@Base+0x482c>
   1574c:	mov	r7, r1
   15750:	b	17b28 <main@@Base+0x4850>
   15754:	bne	15768 <main@@Base+0x2490>
   15758:	mov	r7, r1
   1575c:	ldrb	r0, [r7, #1]!
   15760:	cmp	r0, #32
   15764:	bhi	15778 <main@@Base+0x24a0>
   15768:	mov	r0, r8
   1576c:	mov	r2, r5
   15770:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15774:	mov	r7, r0
   15778:	cmp	r7, r5
   1577c:	beq	157b0 <main@@Base+0x24d8>
   15780:	ldrb	r0, [r7]
   15784:	cmp	r0, #58	; 0x3a
   15788:	bne	157b0 <main@@Base+0x24d8>
   1578c:	add	r1, r7, #1
   15790:	sub	r0, r5, r1
   15794:	cmp	r0, #2
   15798:	blt	17ba8 <main@@Base+0x48d0>
   1579c:	ldrb	r0, [r1]
   157a0:	cmp	r0, #32
   157a4:	bls	17b98 <main@@Base+0x48c0>
   157a8:	mov	r7, r1
   157ac:	b	17bb8 <main@@Base+0x48e0>
   157b0:	mov	r0, r8
   157b4:	mov	r1, r7
   157b8:	mov	r2, r5
   157bc:	mov	r3, #4
   157c0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   157c4:	b	17bb4 <main@@Base+0x48dc>
   157c8:	bne	157d8 <main@@Base+0x2500>
   157cc:	ldrb	r0, [r1, #2]!
   157d0:	cmp	r0, #32
   157d4:	bhi	157ec <main@@Base+0x2514>
   157d8:	mov	r1, r2
   157dc:	mov	r0, r8
   157e0:	mov	r2, r5
   157e4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   157e8:	mov	r1, r0
   157ec:	cmp	r9, r1
   157f0:	beq	162e8 <main@@Base+0x3010>
   157f4:	mov	r0, r8
   157f8:	mov	r2, r5
   157fc:	add	r3, sp, #52	; 0x34
   15800:	bl	13350 <main@@Base+0x78>
   15804:	mov	r4, r0
   15808:	ldr	r0, [sp, #52]	; 0x34
   1580c:	cmp	r0, #0
   15810:	beq	13390 <main@@Base+0xb8>
   15814:	ldr	r0, [r8]
   15818:	mov	r1, #12
   1581c:	b	15ae4 <main@@Base+0x280c>
   15820:	bne	15830 <main@@Base+0x2558>
   15824:	ldrb	r0, [r7, #2]!
   15828:	cmp	r0, #32
   1582c:	bhi	15840 <main@@Base+0x2568>
   15830:	mov	r0, r8
   15834:	mov	r2, r5
   15838:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1583c:	mov	r7, r0
   15840:	cmp	r9, r7
   15844:	beq	162e8 <main@@Base+0x3010>
   15848:	mov	r6, #0
   1584c:	cmp	r7, r5
   15850:	str	r6, [fp, #-52]	; 0xffffffcc
   15854:	str	r6, [fp, #-56]	; 0xffffffc8
   15858:	strb	r6, [fp, #-60]	; 0xffffffc4
   1585c:	str	r6, [sp, #56]	; 0x38
   15860:	beq	158c0 <main@@Base+0x25e8>
   15864:	sub	r0, fp, #56	; 0x38
   15868:	mov	r1, r7
   1586c:	mov	r2, r5
   15870:	add	r3, sp, #56	; 0x38
   15874:	str	r0, [sp]
   15878:	mov	r0, r8
   1587c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   15880:	cmp	r0, r7
   15884:	beq	158c8 <main@@Base+0x25f0>
   15888:	ldr	r2, [sp, #56]	; 0x38
   1588c:	mov	r4, r0
   15890:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15894:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15898:	cmp	r2, #0
   1589c:	beq	158d0 <main@@Base+0x25f8>
   158a0:	subs	r2, r0, #129	; 0x81
   158a4:	sbcs	r1, r1, #0
   158a8:	bcc	158f8 <main@@Base+0x2620>
   158ac:	mov	r0, r8
   158b0:	mov	r1, r4
   158b4:	mov	r2, r5
   158b8:	mov	r3, #8
   158bc:	b	158ec <main@@Base+0x2614>
   158c0:	mov	r4, r5
   158c4:	b	15908 <main@@Base+0x2630>
   158c8:	mov	r4, r7
   158cc:	b	15908 <main@@Base+0x2630>
   158d0:	subs	r2, r0, #128	; 0x80
   158d4:	sbcs	r1, r1, #0
   158d8:	bcc	15900 <main@@Base+0x2628>
   158dc:	mov	r0, r8
   158e0:	mov	r1, r4
   158e4:	mov	r2, r5
   158e8:	mov	r3, #7
   158ec:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   158f0:	mov	r4, r0
   158f4:	b	15908 <main@@Base+0x2630>
   158f8:	rsb	r6, r0, #0
   158fc:	b	15904 <main@@Base+0x262c>
   15900:	mov	r6, r0
   15904:	strb	r6, [fp, #-60]	; 0xffffffc4
   15908:	cmp	r7, r4
   1590c:	bne	15944 <main@@Base+0x266c>
   15910:	movw	r3, #16516	; 0x4084
   15914:	sub	r0, fp, #60	; 0x3c
   15918:	mov	r1, r7
   1591c:	mov	r2, r5
   15920:	str	r0, [sp]
   15924:	mov	r0, r8
   15928:	movt	r3, #4
   1592c:	bl	1e2d8 <main@@Base+0xb000>
   15930:	mov	r4, r0
   15934:	cmp	r0, r7
   15938:	cmpne	r4, r5
   1593c:	beq	13390 <main@@Base+0xb8>
   15940:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   15944:	uxtb	r0, r6
   15948:	cmp	r0, #8
   1594c:	ldrbeq	r0, [r8, #8]
   15950:	tsteq	r0, #2
   15954:	beq	1b1e8 <main@@Base+0x7f10>
   15958:	ldr	r0, [r8]
   1595c:	mov	r1, #6
   15960:	b	16748 <main@@Base+0x3470>
   15964:	mov	r0, r8
   15968:	mov	r1, r4
   1596c:	mov	r2, r5
   15970:	mov	r3, #9
   15974:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   15978:	b	152cc <main@@Base+0x1ff4>
   1597c:	cmp	r0, #34	; 0x22
   15980:	bne	1a634 <main@@Base+0x735c>
   15984:	add	r1, r9, #18
   15988:	sub	r0, r5, r1
   1598c:	cmp	r0, #2
   15990:	blt	17d44 <main@@Base+0x4a6c>
   15994:	ldrb	r0, [r1]
   15998:	cmp	r0, #32
   1599c:	bls	17d30 <main@@Base+0x4a58>
   159a0:	mov	r4, r1
   159a4:	b	17d54 <main@@Base+0x4a7c>
   159a8:	cmp	r0, #34	; 0x22
   159ac:	bne	16888 <main@@Base+0x35b0>
   159b0:	add	r1, r9, #16
   159b4:	sub	r0, r5, r1
   159b8:	cmp	r0, #2
   159bc:	blt	180f0 <main@@Base+0x4e18>
   159c0:	ldrb	r0, [r1]
   159c4:	cmp	r0, #32
   159c8:	bls	180dc <main@@Base+0x4e04>
   159cc:	mov	r4, r1
   159d0:	b	18100 <main@@Base+0x4e28>
   159d4:	bne	159e4 <main@@Base+0x270c>
   159d8:	ldrb	r0, [r1, #2]!
   159dc:	cmp	r0, #32
   159e0:	bhi	159f8 <main@@Base+0x2720>
   159e4:	mov	r1, r2
   159e8:	mov	r0, r8
   159ec:	mov	r2, r5
   159f0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   159f4:	mov	r1, r0
   159f8:	ldr	sl, [sp, #40]	; 0x28
   159fc:	cmp	r9, r1
   15a00:	beq	162e8 <main@@Base+0x3010>
   15a04:	mov	r0, r8
   15a08:	mov	r2, r5
   15a0c:	add	r3, sp, #52	; 0x34
   15a10:	bl	2f6d0 <flatcc_json_parser_build_string@@Base>
   15a14:	mov	r4, r0
   15a18:	ldr	r0, [sp, #52]	; 0x34
   15a1c:	cmp	r0, #0
   15a20:	beq	13390 <main@@Base+0xb8>
   15a24:	ldr	r0, [r8]
   15a28:	mov	r1, #3
   15a2c:	b	15ae4 <main@@Base+0x280c>
   15a30:	bne	15a40 <main@@Base+0x2768>
   15a34:	ldrb	r0, [r4, #2]!
   15a38:	cmp	r0, #32
   15a3c:	bhi	15a50 <main@@Base+0x2778>
   15a40:	mov	r0, r8
   15a44:	mov	r2, r5
   15a48:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15a4c:	mov	r4, r0
   15a50:	ldr	sl, [sp, #40]	; 0x28
   15a54:	cmp	r9, r4
   15a58:	beq	162e8 <main@@Base+0x3010>
   15a5c:	ldr	r0, [r8]
   15a60:	mov	r1, #1
   15a64:	mov	r2, #1
   15a68:	mvn	r3, #0
   15a6c:	bl	2a240 <flatcc_builder_start_vector@@Base>
   15a70:	cmp	r0, #0
   15a74:	bne	13390 <main@@Base+0xb8>
   15a78:	cmp	r4, r5
   15a7c:	beq	15ab0 <main@@Base+0x27d8>
   15a80:	ldrb	r0, [r4]
   15a84:	cmp	r0, #91	; 0x5b
   15a88:	bne	15ab0 <main@@Base+0x27d8>
   15a8c:	add	r1, r4, #1
   15a90:	sub	r0, r5, r1
   15a94:	cmp	r0, #2
   15a98:	blt	15b08 <main@@Base+0x2830>
   15a9c:	ldrb	r0, [r1]
   15aa0:	cmp	r0, #32
   15aa4:	bls	15af8 <main@@Base+0x2820>
   15aa8:	mov	r4, r1
   15aac:	b	15b18 <main@@Base+0x2840>
   15ab0:	mov	r0, r8
   15ab4:	mov	r1, r4
   15ab8:	mov	r2, r5
   15abc:	mov	r3, #22
   15ac0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   15ac4:	mov	r4, r0
   15ac8:	ldr	r0, [r8]
   15acc:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   15ad0:	cmp	r0, #0
   15ad4:	str	r0, [sp, #52]	; 0x34
   15ad8:	beq	13390 <main@@Base+0xb8>
   15adc:	ldr	r0, [r8]
   15ae0:	mov	r1, #30
   15ae4:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   15ae8:	cmp	r0, #0
   15aec:	beq	13390 <main@@Base+0xb8>
   15af0:	ldr	r1, [sp, #52]	; 0x34
   15af4:	b	16340 <main@@Base+0x3068>
   15af8:	bne	15b08 <main@@Base+0x2830>
   15afc:	ldrb	r0, [r4, #2]!
   15b00:	cmp	r0, #32
   15b04:	bhi	15b18 <main@@Base+0x2840>
   15b08:	mov	r0, r8
   15b0c:	mov	r2, r5
   15b10:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15b14:	mov	r4, r0
   15b18:	cmp	r4, r5
   15b1c:	mov	r6, r5
   15b20:	beq	15b34 <main@@Base+0x285c>
   15b24:	ldrb	r0, [r4]
   15b28:	cmp	r0, #93	; 0x5d
   15b2c:	beq	15d20 <main@@Base+0x2a48>
   15b30:	mov	r6, r4
   15b34:	mov	r0, #0
   15b38:	mov	r1, #1
   15b3c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15b40:	ldr	r0, [r8]
   15b44:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   15b48:	cmp	r0, #0
   15b4c:	beq	1ce9c <main@@Base+0x9bc4>
   15b50:	mov	r7, r0
   15b54:	mov	r4, r6
   15b58:	mov	r6, #0
   15b5c:	cmp	r4, r5
   15b60:	str	r6, [fp, #-52]	; 0xffffffcc
   15b64:	str	r6, [fp, #-56]	; 0xffffffc8
   15b68:	strb	r6, [fp, #-60]	; 0xffffffc4
   15b6c:	str	r6, [sp, #56]	; 0x38
   15b70:	beq	15bb8 <main@@Base+0x28e0>
   15b74:	sub	r0, fp, #56	; 0x38
   15b78:	mov	r1, r4
   15b7c:	mov	r2, r5
   15b80:	add	r3, sp, #56	; 0x38
   15b84:	str	r0, [sp]
   15b88:	mov	r0, r8
   15b8c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   15b90:	cmp	r0, r4
   15b94:	beq	15bc0 <main@@Base+0x28e8>
   15b98:	mov	r1, r0
   15b9c:	ldr	r0, [sp, #56]	; 0x38
   15ba0:	cmp	r0, #0
   15ba4:	beq	15bc8 <main@@Base+0x28f0>
   15ba8:	mov	r0, r8
   15bac:	mov	r2, r5
   15bb0:	mov	r3, #8
   15bb4:	b	15be8 <main@@Base+0x2910>
   15bb8:	mov	r1, r5
   15bbc:	b	15bf0 <main@@Base+0x2918>
   15bc0:	mov	r1, r4
   15bc4:	b	15bf0 <main@@Base+0x2918>
   15bc8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bcc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15bd0:	subs	r3, r0, #256	; 0x100
   15bd4:	sbcs	r2, r2, #0
   15bd8:	bcc	15d04 <main@@Base+0x2a2c>
   15bdc:	mov	r0, r8
   15be0:	mov	r2, r5
   15be4:	mov	r3, #7
   15be8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   15bec:	mov	r1, r0
   15bf0:	cmp	r4, r1
   15bf4:	bne	15c2c <main@@Base+0x2954>
   15bf8:	movw	r3, #16532	; 0x4094
   15bfc:	sub	r0, fp, #60	; 0x3c
   15c00:	mov	r1, r4
   15c04:	mov	r2, r5
   15c08:	str	r0, [sp]
   15c0c:	mov	r0, r8
   15c10:	movt	r3, #4
   15c14:	bl	1e510 <main@@Base+0xb238>
   15c18:	mov	r1, r0
   15c1c:	cmp	r0, r4
   15c20:	cmpne	r1, r5
   15c24:	beq	1ce94 <main@@Base+0x9bbc>
   15c28:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   15c2c:	sub	r0, r5, r1
   15c30:	strb	r6, [r7]
   15c34:	cmp	r0, #2
   15c38:	blt	15c64 <main@@Base+0x298c>
   15c3c:	ldrb	r0, [r1]
   15c40:	cmp	r0, #32
   15c44:	bls	15c50 <main@@Base+0x2978>
   15c48:	mov	r4, r1
   15c4c:	b	15c74 <main@@Base+0x299c>
   15c50:	bne	15c64 <main@@Base+0x298c>
   15c54:	mov	r4, r1
   15c58:	ldrb	r0, [r4, #1]!
   15c5c:	cmp	r0, #32
   15c60:	bhi	15c74 <main@@Base+0x299c>
   15c64:	mov	r0, r8
   15c68:	mov	r2, r5
   15c6c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15c70:	mov	r4, r0
   15c74:	cmp	r4, r5
   15c78:	beq	15d10 <main@@Base+0x2a38>
   15c7c:	ldrb	r0, [r4]
   15c80:	cmp	r0, #44	; 0x2c
   15c84:	bne	15d18 <main@@Base+0x2a40>
   15c88:	add	r1, r4, #1
   15c8c:	sub	r0, r5, r1
   15c90:	cmp	r0, #2
   15c94:	blt	15cbc <main@@Base+0x29e4>
   15c98:	ldrb	r0, [r1]
   15c9c:	cmp	r0, #32
   15ca0:	bls	15cac <main@@Base+0x29d4>
   15ca4:	mov	r4, r1
   15ca8:	b	15ccc <main@@Base+0x29f4>
   15cac:	bne	15cbc <main@@Base+0x29e4>
   15cb0:	ldrb	r0, [r4, #2]!
   15cb4:	cmp	r0, #32
   15cb8:	bhi	15ccc <main@@Base+0x29f4>
   15cbc:	mov	r0, r8
   15cc0:	mov	r2, r5
   15cc4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15cc8:	mov	r4, r0
   15ccc:	cmp	r4, r5
   15cd0:	beq	15d64 <main@@Base+0x2a8c>
   15cd4:	ldrb	r0, [r4]
   15cd8:	cmp	r0, #93	; 0x5d
   15cdc:	beq	15d20 <main@@Base+0x2a48>
   15ce0:	mov	r0, #0
   15ce4:	mov	r1, #1
   15ce8:	strb	r0, [fp, #-60]	; 0xffffffc4
   15cec:	ldr	r0, [r8]
   15cf0:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   15cf4:	mov	r7, r0
   15cf8:	cmp	r0, #0
   15cfc:	bne	15b58 <main@@Base+0x2880>
   15d00:	b	13390 <main@@Base+0xb8>
   15d04:	mov	r6, r0
   15d08:	strb	r0, [fp, #-60]	; 0xffffffc4
   15d0c:	b	15bf0 <main@@Base+0x2918>
   15d10:	mov	r4, r5
   15d14:	b	15ac8 <main@@Base+0x27f0>
   15d18:	cmp	r0, #93	; 0x5d
   15d1c:	bne	167ec <main@@Base+0x3514>
   15d20:	add	r1, r4, #1
   15d24:	sub	r0, r5, r1
   15d28:	cmp	r0, #2
   15d2c:	blt	15d54 <main@@Base+0x2a7c>
   15d30:	ldrb	r0, [r1]
   15d34:	cmp	r0, #32
   15d38:	bls	15d44 <main@@Base+0x2a6c>
   15d3c:	mov	r4, r1
   15d40:	b	15ac8 <main@@Base+0x27f0>
   15d44:	bne	15d54 <main@@Base+0x2a7c>
   15d48:	ldrb	r0, [r4, #2]!
   15d4c:	cmp	r0, #32
   15d50:	bhi	15ac8 <main@@Base+0x27f0>
   15d54:	mov	r0, r8
   15d58:	mov	r2, r5
   15d5c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15d60:	b	15ac4 <main@@Base+0x27ec>
   15d64:	mov	r0, r8
   15d68:	mov	r1, r5
   15d6c:	b	167f4 <main@@Base+0x351c>
   15d70:	bne	15d80 <main@@Base+0x2aa8>
   15d74:	ldrb	r0, [r1, #2]!
   15d78:	cmp	r0, #32
   15d7c:	bhi	15d94 <main@@Base+0x2abc>
   15d80:	ldr	r0, [sp, #36]	; 0x24
   15d84:	mov	r1, r2
   15d88:	mov	r2, r5
   15d8c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15d90:	mov	r1, r0
   15d94:	cmp	r9, r1
   15d98:	beq	15dd0 <main@@Base+0x2af8>
   15d9c:	ldr	r0, [sp, #48]	; 0x30
   15da0:	ldr	r8, [sp, #36]	; 0x24
   15da4:	mov	r2, #8
   15da8:	mov	r3, #0
   15dac:	str	r2, [sp]
   15db0:	mov	r2, r5
   15db4:	str	r0, [sp, #4]
   15db8:	movw	r0, #61584	; 0xf090
   15dbc:	movt	r0, #1
   15dc0:	str	r0, [sp, #8]
   15dc4:	mov	r0, r8
   15dc8:	bl	2f99c <flatcc_json_parser_union@@Base>
   15dcc:	b	16898 <main@@Base+0x35c0>
   15dd0:	eor	r0, r6, #889192448	; 0x35000000
   15dd4:	orrs	r0, r0, r4
   15dd8:	bne	16254 <main@@Base+0x2f7c>
   15ddc:	cmp	sl, #6
   15de0:	mov	r7, r9
   15de4:	blt	161f0 <main@@Base+0x2f18>
   15de8:	ldr	r2, [sp, #32]
   15dec:	mov	r1, r9
   15df0:	ldrb	r0, [r1, #5]!
   15df4:	ldr	r2, [r2]
   15df8:	cmp	r2, #0
   15dfc:	beq	15e24 <main@@Base+0x2b4c>
   15e00:	cmp	r0, #33	; 0x21
   15e04:	bcc	15e14 <main@@Base+0x2b3c>
   15e08:	cmp	r0, #58	; 0x3a
   15e0c:	mov	r7, r9
   15e10:	bne	161f0 <main@@Base+0x2f18>
   15e14:	ldr	r0, [sp, #32]
   15e18:	mov	r2, #0
   15e1c:	str	r2, [r0]
   15e20:	b	15e34 <main@@Base+0x2b5c>
   15e24:	cmp	r0, #34	; 0x22
   15e28:	mov	r7, r9
   15e2c:	bne	161f0 <main@@Base+0x2f18>
   15e30:	add	r1, r9, #6
   15e34:	sub	r0, r5, r1
   15e38:	cmp	r0, #2
   15e3c:	blt	15e68 <main@@Base+0x2b90>
   15e40:	ldrb	r0, [r1]
   15e44:	cmp	r0, #32
   15e48:	bls	15e54 <main@@Base+0x2b7c>
   15e4c:	mov	r7, r1
   15e50:	b	15e78 <main@@Base+0x2ba0>
   15e54:	bne	15e68 <main@@Base+0x2b90>
   15e58:	mov	r7, r1
   15e5c:	ldrb	r0, [r7, #1]!
   15e60:	cmp	r0, #32
   15e64:	bhi	15e78 <main@@Base+0x2ba0>
   15e68:	ldr	r0, [sp, #36]	; 0x24
   15e6c:	mov	r2, r5
   15e70:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15e74:	mov	r7, r0
   15e78:	cmp	r7, r5
   15e7c:	beq	15eb0 <main@@Base+0x2bd8>
   15e80:	ldrb	r0, [r7]
   15e84:	cmp	r0, #58	; 0x3a
   15e88:	bne	15eb0 <main@@Base+0x2bd8>
   15e8c:	add	r1, r7, #1
   15e90:	sub	r0, r5, r1
   15e94:	cmp	r0, #2
   15e98:	blt	161e0 <main@@Base+0x2f08>
   15e9c:	ldrb	r0, [r1]
   15ea0:	cmp	r0, #32
   15ea4:	bls	161d0 <main@@Base+0x2ef8>
   15ea8:	mov	r7, r1
   15eac:	b	161f0 <main@@Base+0x2f18>
   15eb0:	ldr	r0, [sp, #36]	; 0x24
   15eb4:	mov	r1, r7
   15eb8:	mov	r2, r5
   15ebc:	mov	r3, #4
   15ec0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   15ec4:	b	161ec <main@@Base+0x2f14>
   15ec8:	bne	15edc <main@@Base+0x2c04>
   15ecc:	ldrb	r0, [r4, #2]!
   15ed0:	cmp	r0, #32
   15ed4:	mov	r7, r4
   15ed8:	bhi	152d0 <main@@Base+0x1ff8>
   15edc:	mov	r0, r8
   15ee0:	mov	r2, r5
   15ee4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15ee8:	b	152cc <main@@Base+0x1ff4>
   15eec:	cmp	r0, #34	; 0x22
   15ef0:	bne	1a634 <main@@Base+0x735c>
   15ef4:	add	r1, r9, #21
   15ef8:	sub	r0, r5, r1
   15efc:	cmp	r0, #2
   15f00:	blt	1816c <main@@Base+0x4e94>
   15f04:	ldrb	r0, [r1]
   15f08:	cmp	r0, #32
   15f0c:	bls	18158 <main@@Base+0x4e80>
   15f10:	mov	r4, r1
   15f14:	b	1817c <main@@Base+0x4ea4>
   15f18:	bne	15f2c <main@@Base+0x2c54>
   15f1c:	mov	r4, r1
   15f20:	ldrb	r0, [r4, #1]!
   15f24:	cmp	r0, #32
   15f28:	bhi	15f3c <main@@Base+0x2c64>
   15f2c:	mov	r0, r8
   15f30:	mov	r2, r5
   15f34:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15f38:	mov	r4, r0
   15f3c:	cmp	r4, r5
   15f40:	beq	15f74 <main@@Base+0x2c9c>
   15f44:	ldrb	r0, [r4]
   15f48:	cmp	r0, #58	; 0x3a
   15f4c:	bne	15f74 <main@@Base+0x2c9c>
   15f50:	add	r1, r4, #1
   15f54:	sub	r0, r5, r1
   15f58:	cmp	r0, #2
   15f5c:	blt	181e8 <main@@Base+0x4f10>
   15f60:	ldrb	r0, [r1]
   15f64:	cmp	r0, #32
   15f68:	bls	181d8 <main@@Base+0x4f00>
   15f6c:	mov	r4, r1
   15f70:	b	181f8 <main@@Base+0x4f20>
   15f74:	mov	r0, r8
   15f78:	mov	r1, r4
   15f7c:	mov	r2, r5
   15f80:	mov	r3, #4
   15f84:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   15f88:	b	181f4 <main@@Base+0x4f1c>
   15f8c:	bne	15fa0 <main@@Base+0x2cc8>
   15f90:	mov	r4, r1
   15f94:	ldrb	r0, [r4, #1]!
   15f98:	cmp	r0, #32
   15f9c:	bhi	15fb0 <main@@Base+0x2cd8>
   15fa0:	mov	r0, r8
   15fa4:	mov	r2, r5
   15fa8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   15fac:	mov	r4, r0
   15fb0:	cmp	r4, r5
   15fb4:	beq	15fe8 <main@@Base+0x2d10>
   15fb8:	ldrb	r0, [r4]
   15fbc:	cmp	r0, #58	; 0x3a
   15fc0:	bne	15fe8 <main@@Base+0x2d10>
   15fc4:	add	r1, r4, #1
   15fc8:	sub	r0, r5, r1
   15fcc:	cmp	r0, #2
   15fd0:	blt	18354 <main@@Base+0x507c>
   15fd4:	ldrb	r0, [r1]
   15fd8:	cmp	r0, #32
   15fdc:	bls	18344 <main@@Base+0x506c>
   15fe0:	mov	r4, r1
   15fe4:	b	18364 <main@@Base+0x508c>
   15fe8:	mov	r0, r8
   15fec:	mov	r1, r4
   15ff0:	mov	r2, r5
   15ff4:	mov	r3, #4
   15ff8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   15ffc:	b	18360 <main@@Base+0x5088>
   16000:	bne	16014 <main@@Base+0x2d3c>
   16004:	mov	r7, r1
   16008:	ldrb	r0, [r7, #1]!
   1600c:	cmp	r0, #32
   16010:	bhi	16024 <main@@Base+0x2d4c>
   16014:	mov	r0, r8
   16018:	mov	r2, r5
   1601c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   16020:	mov	r7, r0
   16024:	cmp	r7, r5
   16028:	beq	1605c <main@@Base+0x2d84>
   1602c:	ldrb	r0, [r7]
   16030:	cmp	r0, #58	; 0x3a
   16034:	bne	1605c <main@@Base+0x2d84>
   16038:	add	r1, r7, #1
   1603c:	sub	r0, r5, r1
   16040:	cmp	r0, #2
   16044:	blt	183fc <main@@Base+0x5124>
   16048:	ldrb	r0, [r1]
   1604c:	cmp	r0, #32
   16050:	bls	183ec <main@@Base+0x5114>
   16054:	mov	r7, r1
   16058:	b	1840c <main@@Base+0x5134>
   1605c:	mov	r0, r8
   16060:	mov	r1, r7
   16064:	mov	r2, r5
   16068:	mov	r3, #4
   1606c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   16070:	b	18408 <main@@Base+0x5130>
   16074:	bne	16088 <main@@Base+0x2db0>
   16078:	mov	r7, r1
   1607c:	ldrb	r0, [r7, #1]!
   16080:	cmp	r0, #32
   16084:	bhi	16098 <main@@Base+0x2dc0>
   16088:	mov	r0, r8
   1608c:	mov	r2, r5
   16090:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   16094:	mov	r7, r0
   16098:	cmp	r7, r5
   1609c:	beq	160d0 <main@@Base+0x2df8>
   160a0:	ldrb	r0, [r7]
   160a4:	cmp	r0, #58	; 0x3a
   160a8:	bne	160d0 <main@@Base+0x2df8>
   160ac:	add	r1, r7, #1
   160b0:	sub	r0, r5, r1
   160b4:	cmp	r0, #2
   160b8:	blt	1851c <main@@Base+0x5244>
   160bc:	ldrb	r0, [r1]
   160c0:	cmp	r0, #32
   160c4:	bls	1850c <main@@Base+0x5234>
   160c8:	mov	r7, r1
   160cc:	b	1852c <main@@Base+0x5254>
   160d0:	mov	r0, r8
   160d4:	mov	r1, r7
   160d8:	mov	r2, r5
   160dc:	mov	r3, #4
   160e0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   160e4:	b	18528 <main@@Base+0x5250>
   160e8:	bne	160fc <main@@Base+0x2e24>
   160ec:	mov	r7, r1
   160f0:	ldrb	r0, [r7, #1]!
   160f4:	cmp	r0, #32
   160f8:	bhi	1610c <main@@Base+0x2e34>
   160fc:	mov	r0, r8
   16100:	mov	r2, r5
   16104:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   16108:	mov	r7, r0
   1610c:	cmp	r7, r5
   16110:	beq	16144 <main@@Base+0x2e6c>
   16114:	ldrb	r0, [r7]
   16118:	cmp	r0, #58	; 0x3a
   1611c:	bne	16144 <main@@Base+0x2e6c>
   16120:	add	r1, r7, #1
   16124:	sub	r0, r5, r1
   16128:	cmp	r0, #2
   1612c:	blt	18680 <main@@Base+0x53a8>
   16130:	ldrb	r0, [r1]
   16134:	cmp	r0, #32
   16138:	bls	18670 <main@@Base+0x5398>
   1613c:	mov	r7, r1
   16140:	b	18690 <main@@Base+0x53b8>
   16144:	mov	r0, r8
   16148:	mov	r1, r7
   1614c:	mov	r2, r5
   16150:	mov	r3, #4
   16154:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   16158:	b	1868c <main@@Base+0x53b4>
   1615c:	bne	16170 <main@@Base+0x2e98>
   16160:	mov	r7, r1
   16164:	ldrb	r0, [r7, #1]!
   16168:	cmp	r0, #32
   1616c:	bhi	16180 <main@@Base+0x2ea8>
   16170:	mov	r0, r8
   16174:	mov	r2, r5
   16178:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1617c:	mov	r7, r0
   16180:	cmp	r7, r5
   16184:	beq	161b8 <main@@Base+0x2ee0>
   16188:	ldrb	r0, [r7]
   1618c:	cmp	r0, #58	; 0x3a
   16190:	bne	161b8 <main@@Base+0x2ee0>
   16194:	add	r1, r7, #1
   16198:	sub	r0, r5, r1
   1619c:	cmp	r0, #2
   161a0:	blt	1872c <main@@Base+0x5454>
   161a4:	ldrb	r0, [r1]
   161a8:	cmp	r0, #32
   161ac:	bls	1871c <main@@Base+0x5444>
   161b0:	mov	r7, r1
   161b4:	b	1873c <main@@Base+0x5464>
   161b8:	mov	r0, r8
   161bc:	mov	r1, r7
   161c0:	mov	r2, r5
   161c4:	mov	r3, #4
   161c8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   161cc:	b	18738 <main@@Base+0x5460>
   161d0:	bne	161e0 <main@@Base+0x2f08>
   161d4:	ldrb	r0, [r7, #2]!
   161d8:	cmp	r0, #32
   161dc:	bhi	161f0 <main@@Base+0x2f18>
   161e0:	ldr	r0, [sp, #36]	; 0x24
   161e4:	mov	r2, r5
   161e8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   161ec:	mov	r7, r0
   161f0:	cmp	r9, r7
   161f4:	beq	16254 <main@@Base+0x2f7c>
   161f8:	ldr	r8, [sp, #36]	; 0x24
   161fc:	mov	r1, #4
   16200:	mov	r2, #2
   16204:	mvn	r3, #-1073741824	; 0xc0000000
   16208:	ldr	r0, [r8]
   1620c:	bl	2a240 <flatcc_builder_start_vector@@Base>
   16210:	cmp	r0, #0
   16214:	bne	1cec4 <main@@Base+0x9bec>
   16218:	cmp	r7, r5
   1621c:	beq	162f4 <main@@Base+0x301c>
   16220:	ldrb	r0, [r7]
   16224:	cmp	r0, #91	; 0x5b
   16228:	bne	162f4 <main@@Base+0x301c>
   1622c:	ldr	sl, [sp, #40]	; 0x28
   16230:	add	r1, r7, #1
   16234:	sub	r0, r5, r1
   16238:	cmp	r0, #2
   1623c:	blt	16384 <main@@Base+0x30ac>
   16240:	ldrb	r0, [r1]
   16244:	cmp	r0, #32
   16248:	bls	16374 <main@@Base+0x309c>
   1624c:	mov	r7, r1
   16250:	b	16394 <main@@Base+0x30bc>
   16254:	movw	r0, #31088	; 0x7970
   16258:	ldr	sl, [sp, #40]	; 0x28
   1625c:	movt	r0, #24436	; 0x5f74
   16260:	eor	r0, r8, r0
   16264:	orrs	r0, r0, r4
   16268:	bne	162e4 <main@@Base+0x300c>
   1626c:	add	r4, r9, #8
   16270:	mov	r1, #8
   16274:	mov	r2, #-268435456	; 0xf0000000
   16278:	ldr	r8, [sp, #36]	; 0x24
   1627c:	sub	r0, r5, r4
   16280:	cmp	r0, #8
   16284:	movcc	r1, r0
   16288:	add	r1, r2, r1, lsl #28
   1628c:	asr	r1, r1, #28
   16290:	cmp	r1, #0
   16294:	blt	1b1d4 <main@@Base+0x7efc>
   16298:	ldrb	r1, [r4]
   1629c:	cmp	r1, #101	; 0x65
   162a0:	bne	1b1d4 <main@@Base+0x7efc>
   162a4:	cmp	r0, #2
   162a8:	blt	1b1d4 <main@@Base+0x7efc>
   162ac:	ldr	r2, [sp, #32]
   162b0:	mov	r1, r9
   162b4:	ldrb	r0, [r1, #9]!
   162b8:	ldr	r2, [r2]
   162bc:	cmp	r2, #0
   162c0:	beq	16348 <main@@Base+0x3070>
   162c4:	cmp	r0, #33	; 0x21
   162c8:	bcc	162d4 <main@@Base+0x2ffc>
   162cc:	cmp	r0, #58	; 0x3a
   162d0:	bne	1b1d4 <main@@Base+0x7efc>
   162d4:	ldr	r0, [sp, #32]
   162d8:	mov	r2, #0
   162dc:	str	r2, [r0]
   162e0:	b	16354 <main@@Base+0x307c>
   162e4:	ldr	r8, [sp, #36]	; 0x24
   162e8:	mov	r0, r8
   162ec:	mov	r1, r9
   162f0:	b	1b1dc <main@@Base+0x7f04>
   162f4:	mov	r0, r8
   162f8:	mov	r1, r7
   162fc:	mov	r2, r5
   16300:	mov	r3, #22
   16304:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   16308:	ldr	sl, [sp, #40]	; 0x28
   1630c:	mov	r7, r0
   16310:	ldr	r0, [r8]
   16314:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   16318:	cmp	r0, #0
   1631c:	str	r0, [sp, #52]	; 0x34
   16320:	beq	1cec4 <main@@Base+0x9bec>
   16324:	ldr	r0, [r8]
   16328:	mov	r1, #31
   1632c:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   16330:	cmp	r0, #0
   16334:	beq	1cec4 <main@@Base+0x9bec>
   16338:	ldr	r1, [sp, #52]	; 0x34
   1633c:	mov	r4, r7
   16340:	str	r1, [r0]
   16344:	b	1b1e8 <main@@Base+0x7f10>
   16348:	cmp	r0, #34	; 0x22
   1634c:	bne	1b1d4 <main@@Base+0x7efc>
   16350:	add	r1, r9, #10
   16354:	sub	r0, r5, r1
   16358:	cmp	r0, #2
   1635c:	blt	1653c <main@@Base+0x3264>
   16360:	ldrb	r0, [r1]
   16364:	cmp	r0, #32
   16368:	bls	16528 <main@@Base+0x3250>
   1636c:	mov	r2, r1
   16370:	b	1654c <main@@Base+0x3274>
   16374:	bne	16384 <main@@Base+0x30ac>
   16378:	ldrb	r0, [r7, #2]!
   1637c:	cmp	r0, #32
   16380:	bhi	16394 <main@@Base+0x30bc>
   16384:	mov	r0, r8
   16388:	mov	r2, r5
   1638c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   16390:	mov	r7, r0
   16394:	cmp	r7, r5
   16398:	mov	r4, r5
   1639c:	beq	163e0 <main@@Base+0x3108>
   163a0:	ldrb	r0, [r7]
   163a4:	cmp	r0, #93	; 0x5d
   163a8:	bne	163dc <main@@Base+0x3104>
   163ac:	add	r1, r7, #1
   163b0:	sub	r0, r5, r1
   163b4:	cmp	r0, #2
   163b8:	blt	1967c <main@@Base+0x63a4>
   163bc:	ldrb	r0, [r1]
   163c0:	cmp	r0, #32
   163c4:	bhi	16514 <main@@Base+0x323c>
   163c8:	bne	1967c <main@@Base+0x63a4>
   163cc:	ldrb	r0, [r7, #2]!
   163d0:	cmp	r0, #32
   163d4:	bls	1967c <main@@Base+0x63a4>
   163d8:	b	16310 <main@@Base+0x3038>
   163dc:	mov	r4, r7
   163e0:	ldr	r0, [r8]
   163e4:	mov	r1, #1
   163e8:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   163ec:	mov	r3, r0
   163f0:	cmp	r0, #0
   163f4:	beq	13390 <main@@Base+0xb8>
   163f8:	mov	r0, r8
   163fc:	mov	r1, r4
   16400:	mov	r2, r5
   16404:	bl	1e974 <main@@Base+0xb69c>
   16408:	mov	r1, r0
   1640c:	sub	r0, r5, r0
   16410:	cmp	r0, #2
   16414:	blt	16440 <main@@Base+0x3168>
   16418:	ldrb	r0, [r1]
   1641c:	cmp	r0, #32
   16420:	bls	1642c <main@@Base+0x3154>
   16424:	mov	r4, r1
   16428:	b	16450 <main@@Base+0x3178>
   1642c:	bne	16440 <main@@Base+0x3168>
   16430:	mov	r4, r1
   16434:	ldrb	r0, [r4, #1]!
   16438:	cmp	r0, #32
   1643c:	bhi	16450 <main@@Base+0x3178>
   16440:	mov	r0, r8
   16444:	mov	r2, r5
   16448:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1644c:	mov	r4, r0
   16450:	cmp	r4, r5
   16454:	beq	164dc <main@@Base+0x3204>
   16458:	ldrb	r0, [r4]
   1645c:	cmp	r0, #44	; 0x2c
   16460:	bne	164e4 <main@@Base+0x320c>
   16464:	add	r1, r4, #1
   16468:	sub	r0, r5, r1
   1646c:	cmp	r0, #2
   16470:	blt	16498 <main@@Base+0x31c0>
   16474:	ldrb	r0, [r1]
   16478:	cmp	r0, #32
   1647c:	bls	16488 <main@@Base+0x31b0>
   16480:	mov	r4, r1
   16484:	b	164a8 <main@@Base+0x31d0>
   16488:	bne	16498 <main@@Base+0x31c0>
   1648c:	ldrb	r0, [r4, #2]!
   16490:	cmp	r0, #32
   16494:	bhi	164a8 <main@@Base+0x31d0>
   16498:	mov	r0, r8
   1649c:	mov	r2, r5
   164a0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   164a4:	mov	r4, r0
   164a8:	cmp	r4, r5
   164ac:	beq	1651c <main@@Base+0x3244>
   164b0:	ldrb	r0, [r4]
   164b4:	cmp	r0, #93	; 0x5d
   164b8:	bne	163e0 <main@@Base+0x3108>
   164bc:	add	r1, r4, #1
   164c0:	sub	r0, r5, r1
   164c4:	cmp	r0, #2
   164c8:	blt	1967c <main@@Base+0x63a4>
   164cc:	ldrb	r0, [r1]
   164d0:	cmp	r0, #32
   164d4:	bls	19668 <main@@Base+0x6390>
   164d8:	b	16514 <main@@Base+0x323c>
   164dc:	mov	r7, r5
   164e0:	b	16310 <main@@Base+0x3038>
   164e4:	cmp	r0, #93	; 0x5d
   164e8:	bne	17b80 <main@@Base+0x48a8>
   164ec:	add	r1, r4, #1
   164f0:	sub	r0, r5, r1
   164f4:	cmp	r0, #2
   164f8:	blt	1967c <main@@Base+0x63a4>
   164fc:	ldrb	r0, [r1]
   16500:	cmp	r0, #32
   16504:	bls	1965c <main@@Base+0x6384>
   16508:	ldr	r5, [sp, #44]	; 0x2c
   1650c:	ldr	r8, [sp, #36]	; 0x24
   16510:	ldr	sl, [sp, #40]	; 0x28
   16514:	mov	r7, r1
   16518:	b	16310 <main@@Base+0x3038>
   1651c:	mov	r0, r8
   16520:	mov	r1, r5
   16524:	b	17b88 <main@@Base+0x48b0>
   16528:	bne	1653c <main@@Base+0x3264>
   1652c:	mov	r2, r1
   16530:	ldrb	r0, [r2, #1]!
   16534:	cmp	r0, #32
   16538:	bhi	1654c <main@@Base+0x3274>
   1653c:	mov	r0, r8
   16540:	mov	r2, r5
   16544:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   16548:	mov	r2, r0
   1654c:	cmp	r2, r5
   16550:	beq	16584 <main@@Base+0x32ac>
   16554:	ldrb	r0, [r2]
   16558:	cmp	r0, #58	; 0x3a
   1655c:	bne	16584 <main@@Base+0x32ac>
   16560:	add	r1, r2, #1
   16564:	sub	r0, r5, r1
   16568:	cmp	r0, #2
   1656c:	blt	182ec <main@@Base+0x5014>
   16570:	ldrb	r0, [r1]
   16574:	cmp	r0, #32
   16578:	bls	182dc <main@@Base+0x5004>
   1657c:	mov	r2, r1
   16580:	b	182fc <main@@Base+0x5024>
   16584:	mov	r1, r2
   16588:	mov	r0, r8
   1658c:	mov	r2, r5
   16590:	mov	r3, #4
   16594:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   16598:	b	182f8 <main@@Base+0x5020>
   1659c:	cmp	r0, #34	; 0x22
   165a0:	bne	1a634 <main@@Base+0x735c>
   165a4:	add	r1, r9, #18
   165a8:	sub	r0, r5, r1
   165ac:	cmp	r0, #2
   165b0:	blt	188bc <main@@Base+0x55e4>
   165b4:	ldrb	r0, [r1]
   165b8:	cmp	r0, #32
   165bc:	bls	188a8 <main@@Base+0x55d0>
   165c0:	mov	r4, r1
   165c4:	b	188cc <main@@Base+0x55f4>
   165c8:	bne	165d8 <main@@Base+0x3300>
   165cc:	ldrb	r0, [r7, #2]!
   165d0:	cmp	r0, #32
   165d4:	bhi	165e8 <main@@Base+0x3310>
   165d8:	mov	r0, r8
   165dc:	mov	r2, r5
   165e0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   165e4:	mov	r7, r0
   165e8:	cmp	r9, r7
   165ec:	beq	162e8 <main@@Base+0x3010>
   165f0:	mov	r0, #0
   165f4:	strb	r0, [fp, #-60]	; 0xffffffc4
   165f8:	sub	r0, r5, r7
   165fc:	cmp	r0, #4
   16600:	blt	1663c <main@@Base+0x3364>
   16604:	ldr	r1, [r7]
   16608:	movw	r2, #29300	; 0x7274
   1660c:	movt	r2, #25973	; 0x6575
   16610:	cmp	r1, r2
   16614:	beq	166a4 <main@@Base+0x33cc>
   16618:	cmp	r0, #5
   1661c:	blt	1663c <main@@Base+0x3364>
   16620:	movw	r1, #5168	; 0x1430
   16624:	mov	r0, r7
   16628:	mov	r2, #5
   1662c:	movt	r1, #3
   16630:	bl	12ac8 <memcmp@plt>
   16634:	cmp	r0, #0
   16638:	beq	16764 <main@@Base+0x348c>
   1663c:	mov	r6, #0
   16640:	cmp	r7, r5
   16644:	str	r6, [fp, #-52]	; 0xffffffcc
   16648:	str	r6, [fp, #-56]	; 0xffffffc8
   1664c:	str	r6, [sp, #56]	; 0x38
   16650:	beq	1669c <main@@Base+0x33c4>
   16654:	sub	r0, fp, #56	; 0x38
   16658:	mov	r1, r7
   1665c:	mov	r2, r5
   16660:	add	r3, sp, #56	; 0x38
   16664:	str	r0, [sp]
   16668:	mov	r0, r8
   1666c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   16670:	cmp	r0, r7
   16674:	beq	166b0 <main@@Base+0x33d8>
   16678:	mov	r4, r0
   1667c:	ldr	r0, [sp, #56]	; 0x38
   16680:	cmp	r0, #0
   16684:	beq	166b8 <main@@Base+0x33e0>
   16688:	mov	r0, r8
   1668c:	mov	r1, r4
   16690:	mov	r2, r5
   16694:	mov	r3, #8
   16698:	b	166dc <main@@Base+0x3404>
   1669c:	mov	r4, r5
   166a0:	b	166e4 <main@@Base+0x340c>
   166a4:	mov	r6, #1
   166a8:	add	r4, r7, #4
   166ac:	b	166f0 <main@@Base+0x3418>
   166b0:	mov	r4, r7
   166b4:	b	166e4 <main@@Base+0x340c>
   166b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   166bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   166c0:	subs	r2, r0, #256	; 0x100
   166c4:	sbcs	r1, r1, #0
   166c8:	bcc	16770 <main@@Base+0x3498>
   166cc:	mov	r0, r8
   166d0:	mov	r1, r4
   166d4:	mov	r2, r5
   166d8:	mov	r3, #7
   166dc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   166e0:	mov	r4, r0
   166e4:	uxtb	r6, r6
   166e8:	cmp	r6, #0
   166ec:	movwne	r6, #1
   166f0:	strb	r6, [fp, #-60]	; 0xffffffc4
   166f4:	cmp	r7, r4
   166f8:	bne	16730 <main@@Base+0x3458>
   166fc:	movw	r3, #16608	; 0x40e0
   16700:	sub	r0, fp, #60	; 0x3c
   16704:	mov	r1, r7
   16708:	mov	r2, r5
   1670c:	str	r0, [sp]
   16710:	mov	r0, r8
   16714:	movt	r3, #4
   16718:	bl	22504 <main@@Base+0xf22c>
   1671c:	mov	r4, r0
   16720:	cmp	r0, r7
   16724:	cmpne	r4, r5
   16728:	beq	13390 <main@@Base+0xb8>
   1672c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   16730:	cmp	r6, #1
   16734:	ldrbeq	r0, [r8, #8]
   16738:	tsteq	r0, #2
   1673c:	beq	1b1e8 <main@@Base+0x7f10>
   16740:	ldr	r0, [r8]
   16744:	mov	r1, #15
   16748:	mov	r2, #1
   1674c:	mov	r3, #1
   16750:	bl	2b8dc <flatcc_builder_table_add@@Base>
   16754:	cmp	r0, #0
   16758:	beq	13390 <main@@Base+0xb8>
   1675c:	strb	r6, [r0]
   16760:	b	1b1e8 <main@@Base+0x7f10>
   16764:	mov	r6, #0
   16768:	add	r4, r7, #5
   1676c:	b	166f0 <main@@Base+0x3418>
   16770:	mov	r6, r0
   16774:	b	166e4 <main@@Base+0x340c>
   16778:	bne	1678c <main@@Base+0x34b4>
   1677c:	mov	r4, r1
   16780:	ldrb	r0, [r4, #1]!
   16784:	cmp	r0, #32
   16788:	bhi	1679c <main@@Base+0x34c4>
   1678c:	ldr	r0, [sp, #36]	; 0x24
   16790:	mov	r2, r5
   16794:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   16798:	mov	r4, r0
   1679c:	cmp	r4, r5
   167a0:	beq	167d4 <main@@Base+0x34fc>
   167a4:	ldrb	r0, [r4]
   167a8:	cmp	r0, #58	; 0x3a
   167ac:	bne	167d4 <main@@Base+0x34fc>
   167b0:	add	r1, r4, #1
   167b4:	sub	r0, r5, r1
   167b8:	cmp	r0, #2
   167bc:	blt	189ac <main@@Base+0x56d4>
   167c0:	ldrb	r0, [r1]
   167c4:	cmp	r0, #32
   167c8:	bls	1899c <main@@Base+0x56c4>
   167cc:	mov	r4, r1
   167d0:	b	189bc <main@@Base+0x56e4>
   167d4:	ldr	r0, [sp, #36]	; 0x24
   167d8:	mov	r1, r4
   167dc:	mov	r2, r5
   167e0:	mov	r3, #4
   167e4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   167e8:	b	189b8 <main@@Base+0x56e0>
   167ec:	mov	r0, r8
   167f0:	mov	r1, r4
   167f4:	mov	r2, r5
   167f8:	mov	r3, #9
   167fc:	b	15ac0 <main@@Base+0x27e8>
   16800:	bne	16810 <main@@Base+0x3538>
   16804:	ldrb	r0, [r4, #2]!
   16808:	cmp	r0, #32
   1680c:	bhi	16820 <main@@Base+0x3548>
   16810:	mov	r0, r6
   16814:	mov	r2, r5
   16818:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1681c:	mov	r4, r0
   16820:	cmp	sl, r4
   16824:	beq	16884 <main@@Base+0x35ac>
   16828:	ldr	r8, [sp, #36]	; 0x24
   1682c:	mov	r1, #1
   16830:	mov	r2, #1
   16834:	mvn	r3, #0
   16838:	ldr	r0, [r8]
   1683c:	bl	2a240 <flatcc_builder_start_vector@@Base>
   16840:	cmp	r0, #0
   16844:	bne	13390 <main@@Base+0xb8>
   16848:	ldr	sl, [sp, #40]	; 0x28
   1684c:	cmp	r4, r5
   16850:	beq	168a4 <main@@Base+0x35cc>
   16854:	ldrb	r0, [r4]
   16858:	cmp	r0, #91	; 0x5b
   1685c:	bne	168a4 <main@@Base+0x35cc>
   16860:	add	r1, r4, #1
   16864:	sub	r0, r5, r1
   16868:	cmp	r0, #2
   1686c:	blt	17e40 <main@@Base+0x4b68>
   16870:	ldrb	r0, [r1]
   16874:	cmp	r0, #32
   16878:	bls	17e30 <main@@Base+0x4b58>
   1687c:	mov	r4, r1
   16880:	b	17e50 <main@@Base+0x4b78>
   16884:	ldr	r8, [sp, #36]	; 0x24
   16888:	mov	r0, r8
   1688c:	mov	r1, sl
   16890:	mov	r2, r5
   16894:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   16898:	mov	r4, r0
   1689c:	ldr	sl, [sp, #40]	; 0x28
   168a0:	b	1b1e8 <main@@Base+0x7f10>
   168a4:	mov	r0, r8
   168a8:	mov	r1, r4
   168ac:	mov	r2, r5
   168b0:	mov	r3, #22
   168b4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   168b8:	mov	r4, r0
   168bc:	ldr	r0, [r8]
   168c0:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   168c4:	cmp	r0, #0
   168c8:	str	r0, [sp, #52]	; 0x34
   168cc:	beq	13390 <main@@Base+0xb8>
   168d0:	ldr	r0, [r8]
   168d4:	mov	r1, #24
   168d8:	b	15ae4 <main@@Base+0x280c>
   168dc:	bne	168f0 <main@@Base+0x3618>
   168e0:	mov	r4, r1
   168e4:	ldrb	r0, [r4, #1]!
   168e8:	cmp	r0, #32
   168ec:	bhi	16900 <main@@Base+0x3628>
   168f0:	mov	r0, r8
   168f4:	mov	r2, r5
   168f8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   168fc:	mov	r4, r0
   16900:	cmp	r4, r5
   16904:	beq	16938 <main@@Base+0x3660>
   16908:	ldrb	r0, [r4]
   1690c:	cmp	r0, #58	; 0x3a
   16910:	bne	16938 <main@@Base+0x3660>
   16914:	add	r1, r4, #1
   16918:	sub	r0, r5, r1
   1691c:	cmp	r0, #2
   16920:	blt	18b38 <main@@Base+0x5860>
   16924:	ldrb	r0, [r1]
   16928:	cmp	r0, #32
   1692c:	bls	18b28 <main@@Base+0x5850>
   16930:	mov	r4, r1
   16934:	b	18b48 <main@@Base+0x5870>
   16938:	mov	r0, r8
   1693c:	mov	r1, r4
   16940:	mov	r2, r5
   16944:	mov	r3, #4
   16948:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1694c:	b	18b44 <main@@Base+0x586c>
   16950:	bne	16960 <main@@Base+0x3688>
   16954:	ldrb	r0, [r7, #2]!
   16958:	cmp	r0, #32
   1695c:	bhi	16970 <main@@Base+0x3698>
   16960:	mov	r0, r8
   16964:	mov	r2, r5
   16968:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1696c:	mov	r7, r0
   16970:	ldr	sl, [sp, #40]	; 0x28
   16974:	cmp	r9, r7
   16978:	beq	162e8 <main@@Base+0x3010>
   1697c:	mov	r6, #0
   16980:	cmp	r7, r5
   16984:	str	r6, [fp, #-52]	; 0xffffffcc
   16988:	str	r6, [fp, #-56]	; 0xffffffc8
   1698c:	strh	r6, [fp, #-60]	; 0xffffffc4
   16990:	str	r6, [sp, #56]	; 0x38
   16994:	beq	169f8 <main@@Base+0x3720>
   16998:	sub	r0, fp, #56	; 0x38
   1699c:	mov	r1, r7
   169a0:	mov	r2, r5
   169a4:	add	r3, sp, #56	; 0x38
   169a8:	str	r0, [sp]
   169ac:	mov	r0, r8
   169b0:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   169b4:	cmp	r0, r7
   169b8:	beq	16a00 <main@@Base+0x3728>
   169bc:	ldr	r2, [sp, #56]	; 0x38
   169c0:	mov	r4, r0
   169c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   169c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   169cc:	cmp	r2, #0
   169d0:	beq	16a08 <main@@Base+0x3730>
   169d4:	movw	r2, #32769	; 0x8001
   169d8:	subs	r2, r0, r2
   169dc:	sbcs	r1, r1, #0
   169e0:	bcc	16a30 <main@@Base+0x3758>
   169e4:	mov	r0, r8
   169e8:	mov	r1, r4
   169ec:	mov	r2, r5
   169f0:	mov	r3, #8
   169f4:	b	16a24 <main@@Base+0x374c>
   169f8:	mov	r4, r5
   169fc:	b	16a40 <main@@Base+0x3768>
   16a00:	mov	r4, r7
   16a04:	b	16a40 <main@@Base+0x3768>
   16a08:	subs	r2, r0, #32768	; 0x8000
   16a0c:	sbcs	r1, r1, #0
   16a10:	bcc	16a38 <main@@Base+0x3760>
   16a14:	mov	r0, r8
   16a18:	mov	r1, r4
   16a1c:	mov	r2, r5
   16a20:	mov	r3, #7
   16a24:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   16a28:	mov	r4, r0
   16a2c:	b	16a40 <main@@Base+0x3768>
   16a30:	rsb	r6, r0, #0
   16a34:	b	16a3c <main@@Base+0x3764>
   16a38:	mov	r6, r0
   16a3c:	strh	r6, [fp, #-60]	; 0xffffffc4
   16a40:	cmp	r7, r4
   16a44:	bne	16a7c <main@@Base+0x37a4>
   16a48:	movw	r3, #16544	; 0x40a0
   16a4c:	sub	r0, fp, #60	; 0x3c
   16a50:	mov	r1, r7
   16a54:	mov	r2, r5
   16a58:	str	r0, [sp]
   16a5c:	mov	r0, r8
   16a60:	movt	r3, #4
   16a64:	bl	1e738 <main@@Base+0xb460>
   16a68:	mov	r4, r0
   16a6c:	cmp	r0, r7
   16a70:	cmpne	r4, r5
   16a74:	beq	13390 <main@@Base+0xb8>
   16a78:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   16a7c:	uxth	r0, r6
   16a80:	cmp	r0, #100	; 0x64
   16a84:	ldrbeq	r0, [r8, #8]
   16a88:	tsteq	r0, #2
   16a8c:	beq	1b1e8 <main@@Base+0x7f10>
   16a90:	ldr	r0, [r8]
   16a94:	mov	r1, #2
   16a98:	mov	r2, #2
   16a9c:	mov	r3, #2
   16aa0:	bl	2b8dc <flatcc_builder_table_add@@Base>
   16aa4:	cmp	r0, #0
   16aa8:	bne	18668 <main@@Base+0x5390>
   16aac:	b	13390 <main@@Base+0xb8>
   16ab0:	bne	16ac0 <main@@Base+0x37e8>
   16ab4:	ldrb	r0, [r4, #2]!
   16ab8:	cmp	r0, #32
   16abc:	bhi	16ad0 <main@@Base+0x37f8>
   16ac0:	mov	r0, r8
   16ac4:	mov	r2, r5
   16ac8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   16acc:	mov	r4, r0
   16ad0:	ldr	sl, [sp, #40]	; 0x28
   16ad4:	cmp	r9, r4
   16ad8:	beq	162e8 <main@@Base+0x3010>
   16adc:	ldr	r0, [r8]
   16ae0:	mov	r1, #0
   16ae4:	mov	r2, #32
   16ae8:	mov	r3, #16
   16aec:	bl	2b8dc <flatcc_builder_table_add@@Base>
   16af0:	cmp	r0, #0
   16af4:	str	r0, [sp, #20]
   16af8:	beq	13390 <main@@Base+0xb8>
   16afc:	cmp	r4, r5
   16b00:	beq	16b34 <main@@Base+0x385c>
   16b04:	ldrb	r0, [r4]
   16b08:	cmp	r0, #123	; 0x7b
   16b0c:	bne	16b34 <main@@Base+0x385c>
   16b10:	add	r1, r4, #1
   16b14:	sub	r0, r5, r1
   16b18:	cmp	r0, #2
   16b1c:	blt	16b5c <main@@Base+0x3884>
   16b20:	ldrb	r0, [r1]
   16b24:	cmp	r0, #32
   16b28:	bls	16b4c <main@@Base+0x3874>
   16b2c:	mov	r4, r1
   16b30:	b	16b6c <main@@Base+0x3894>
   16b34:	mov	r0, r8
   16b38:	mov	r1, r4
   16b3c:	mov	r2, r5
   16b40:	mov	r3, #21
   16b44:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   16b48:	b	1b1e4 <main@@Base+0x7f0c>
   16b4c:	bne	16b5c <main@@Base+0x3884>
   16b50:	ldrb	r0, [r4, #2]!
   16b54:	cmp	r0, #32
   16b58:	bhi	16b6c <main@@Base+0x3894>
   16b5c:	mov	r0, r8
   16b60:	mov	r2, r5
   16b64:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   16b68:	mov	r4, r0
   16b6c:	cmp	r4, r5
   16b70:	mov	r2, r5
   16b74:	beq	16bb8 <main@@Base+0x38e0>
   16b78:	ldrb	r0, [r4]
   16b7c:	cmp	r0, #125	; 0x7d
   16b80:	bne	16bb4 <main@@Base+0x38dc>
   16b84:	add	r1, r4, #1
   16b88:	sub	r0, r5, r1
   16b8c:	cmp	r0, #2
   16b90:	blt	19e20 <main@@Base+0x6b48>
   16b94:	ldrb	r0, [r1]
   16b98:	cmp	r0, #32
   16b9c:	bhi	1788c <main@@Base+0x45b4>
   16ba0:	bne	19e20 <main@@Base+0x6b48>
   16ba4:	ldrb	r0, [r4, #2]!
   16ba8:	cmp	r0, #32
   16bac:	bls	19e20 <main@@Base+0x6b48>
   16bb0:	b	1b1e8 <main@@Base+0x7f10>
   16bb4:	mov	r2, r4
   16bb8:	ldr	r0, [sp, #20]
   16bbc:	add	r0, r0, #26
   16bc0:	str	r0, [sp, #16]
   16bc4:	cmp	r2, r5
   16bc8:	mov	r9, r5
   16bcc:	beq	16c20 <main@@Base+0x3948>
   16bd0:	ldrb	r0, [r2]
   16bd4:	cmp	r0, #46	; 0x2e
   16bd8:	beq	16bf4 <main@@Base+0x391c>
   16bdc:	cmp	r0, #34	; 0x22
   16be0:	bne	16c10 <main@@Base+0x3938>
   16be4:	ldr	r0, [sp, #32]
   16be8:	mov	r1, #0
   16bec:	add	r9, r2, #1
   16bf0:	b	16c1c <main@@Base+0x3944>
   16bf4:	mov	r1, r2
   16bf8:	mov	r0, r8
   16bfc:	mov	r2, r5
   16c00:	mov	r3, #5
   16c04:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   16c08:	mov	r9, r0
   16c0c:	b	16c20 <main@@Base+0x3948>
   16c10:	ldr	r0, [sp, #32]
   16c14:	mov	r1, #1
   16c18:	mov	r9, r2
   16c1c:	str	r1, [r0]
   16c20:	sub	ip, r5, r9
   16c24:	mov	r0, #8
   16c28:	cmp	ip, #8
   16c2c:	movcc	r0, ip
   16c30:	and	r0, r0, #15
   16c34:	sub	r7, r0, #1
   16c38:	cmp	r7, #7
   16c3c:	bhi	177ac <main@@Base+0x44d4>
   16c40:	add	r5, pc, #32
   16c44:	mov	r1, #0
   16c48:	mov	lr, #0
   16c4c:	mov	r8, #0
   16c50:	mov	r6, #0
   16c54:	mov	r3, #0
   16c58:	mov	r4, #0
   16c5c:	mov	r0, #0
   16c60:	mov	r2, #0
   16c64:	ldr	pc, [r5, r7, lsl #2]
   16c68:	andeq	r6, r1, ip, asr #25
   16c6c:	andeq	r6, r1, r4, asr #25
   16c70:			; <UNDEFINED> instruction: 0x00016cbc
   16c74:			; <UNDEFINED> instruction: 0x00016cb4
   16c78:	andeq	r6, r1, r8, lsr #25
   16c7c:	muleq	r1, ip, ip
   16c80:	andeq	r6, r1, ip, lsl #25
   16c84:	andeq	r6, r1, r8, lsl #25
   16c88:	ldrb	lr, [r9, #7]
   16c8c:	ldrb	r0, [r9, #6]
   16c90:	mov	r8, r1
   16c94:	orr	r0, lr, r0, lsl #8
   16c98:	mov	r1, r0
   16c9c:	ldrb	r0, [r9, #5]
   16ca0:	mov	r6, r8
   16ca4:	orr	r1, r1, r0, lsl #16
   16ca8:	ldrb	r0, [r9, #4]
   16cac:	mov	r3, r6
   16cb0:	orr	r1, r1, r0, lsl #24
   16cb4:	ldrb	r0, [r9, #3]
   16cb8:	orr	r4, r0, r3
   16cbc:	ldrb	r0, [r9, #2]
   16cc0:	orr	r0, r4, r0, lsl #8
   16cc4:	ldrb	r2, [r9, #1]
   16cc8:	orr	r2, r0, r2, lsl #16
   16ccc:	ldrb	r0, [r9]
   16cd0:	movw	r3, #29556	; 0x7374
   16cd4:	movt	r3, #29797	; 0x7465
   16cd8:	orr	r2, r2, r0, lsl #24
   16cdc:	mvn	r0, #-855638016	; 0xcd000000
   16ce0:	subs	r0, r0, r1
   16ce4:	sbcs	r0, r3, r2
   16ce8:	bcc	16d5c <main@@Base+0x3a84>
   16cec:	ldr	r5, [sp, #44]	; 0x2c
   16cf0:	ldr	r8, [sp, #36]	; 0x24
   16cf4:	and	r1, r1, #-16777216	; 0xff000000
   16cf8:	eor	r0, r2, r3
   16cfc:	eor	r2, r1, #822083584	; 0x31000000
   16d00:	orrs	r2, r2, r0
   16d04:	beq	16e28 <main@@Base+0x3b50>
   16d08:	eor	r1, r1, #838860800	; 0x32000000
   16d0c:	orrs	r0, r1, r0
   16d10:	bne	177ac <main@@Base+0x44d4>
   16d14:	cmp	ip, #6
   16d18:	mov	r5, r9
   16d1c:	blt	1728c <main@@Base+0x3fb4>
   16d20:	ldr	r2, [sp, #32]
   16d24:	mov	r1, r9
   16d28:	ldrb	r0, [r1, #5]!
   16d2c:	ldr	r2, [r2]
   16d30:	cmp	r2, #0
   16d34:	beq	16f10 <main@@Base+0x3c38>
   16d38:	cmp	r0, #33	; 0x21
   16d3c:	bcc	16d4c <main@@Base+0x3a74>
   16d40:	cmp	r0, #58	; 0x3a
   16d44:	mov	r5, r9
   16d48:	bne	1728c <main@@Base+0x3fb4>
   16d4c:	ldr	r0, [sp, #32]
   16d50:	mov	r2, #0
   16d54:	str	r2, [r0]
   16d58:	b	16f20 <main@@Base+0x3c48>
   16d5c:	ldr	r5, [sp, #44]	; 0x2c
   16d60:	ldr	r8, [sp, #36]	; 0x24
   16d64:	cmn	r2, #-2013265919	; 0x88000001
   16d68:	bhi	16dc8 <main@@Base+0x3af0>
   16d6c:	and	r1, r1, #-16777216	; 0xff000000
   16d70:	eor	r0, r2, r3
   16d74:	eor	r1, r1, #855638016	; 0x33000000
   16d78:	orrs	r0, r1, r0
   16d7c:	bne	177ac <main@@Base+0x44d4>
   16d80:	cmp	ip, #6
   16d84:	mov	r1, r9
   16d88:	blt	175ac <main@@Base+0x42d4>
   16d8c:	ldr	r1, [sp, #32]
   16d90:	mov	r2, r9
   16d94:	ldrb	r0, [r2, #5]!
   16d98:	ldr	r1, [r1]
   16d9c:	cmp	r1, #0
   16da0:	beq	16f78 <main@@Base+0x3ca0>
   16da4:	cmp	r0, #33	; 0x21
   16da8:	bcc	16db8 <main@@Base+0x3ae0>
   16dac:	cmp	r0, #58	; 0x3a
   16db0:	mov	r1, r9
   16db4:	bne	175ac <main@@Base+0x42d4>
   16db8:	ldr	r0, [sp, #32]
   16dbc:	mov	r1, #0
   16dc0:	str	r1, [r0]
   16dc4:	b	16f88 <main@@Base+0x3cb0>
   16dc8:	lsr	r1, r2, #24
   16dcc:	and	r0, r2, #-16777216	; 0xff000000
   16dd0:	cmp	r1, #120	; 0x78
   16dd4:	bhi	16e70 <main@@Base+0x3b98>
   16dd8:	teq	r0, #2013265920	; 0x78000000
   16ddc:	bne	177ac <main@@Base+0x44d4>
   16de0:	cmp	ip, #2
   16de4:	mov	r7, r9
   16de8:	blt	175f4 <main@@Base+0x431c>
   16dec:	ldr	r2, [sp, #32]
   16df0:	mov	r1, r9
   16df4:	ldrb	r0, [r1, #1]!
   16df8:	ldr	r2, [r2]
   16dfc:	cmp	r2, #0
   16e00:	beq	16fa8 <main@@Base+0x3cd0>
   16e04:	cmp	r0, #33	; 0x21
   16e08:	bcc	16e18 <main@@Base+0x3b40>
   16e0c:	cmp	r0, #58	; 0x3a
   16e10:	mov	r7, r9
   16e14:	bne	175f4 <main@@Base+0x431c>
   16e18:	ldr	r0, [sp, #32]
   16e1c:	mov	r2, #0
   16e20:	str	r2, [r0]
   16e24:	b	16fb8 <main@@Base+0x3ce0>
   16e28:	cmp	ip, #6
   16e2c:	mov	r7, r9
   16e30:	blt	173d0 <main@@Base+0x40f8>
   16e34:	ldr	r2, [sp, #32]
   16e38:	mov	r1, r9
   16e3c:	ldrb	r0, [r1, #5]!
   16e40:	ldr	r2, [r2]
   16e44:	cmp	r2, #0
   16e48:	beq	16f48 <main@@Base+0x3c70>
   16e4c:	cmp	r0, #33	; 0x21
   16e50:	bcc	16e60 <main@@Base+0x3b88>
   16e54:	cmp	r0, #58	; 0x3a
   16e58:	mov	r7, r9
   16e5c:	bne	173d0 <main@@Base+0x40f8>
   16e60:	ldr	r0, [sp, #32]
   16e64:	mov	r2, #0
   16e68:	str	r2, [r0]
   16e6c:	b	16f58 <main@@Base+0x3c80>
   16e70:	teq	r0, #2030043136	; 0x79000000
   16e74:	beq	16ec8 <main@@Base+0x3bf0>
   16e78:	teq	r0, #2046820352	; 0x7a000000
   16e7c:	bne	177ac <main@@Base+0x44d4>
   16e80:	cmp	ip, #2
   16e84:	mov	r7, r9
   16e88:	blt	17690 <main@@Base+0x43b8>
   16e8c:	ldr	r2, [sp, #32]
   16e90:	mov	r1, r9
   16e94:	ldrb	r0, [r1, #1]!
   16e98:	ldr	r2, [r2]
   16e9c:	cmp	r2, #0
   16ea0:	beq	170e0 <main@@Base+0x3e08>
   16ea4:	cmp	r0, #33	; 0x21
   16ea8:	bcc	16eb8 <main@@Base+0x3be0>
   16eac:	cmp	r0, #58	; 0x3a
   16eb0:	mov	r7, r9
   16eb4:	bne	17690 <main@@Base+0x43b8>
   16eb8:	ldr	r0, [sp, #32]
   16ebc:	mov	r2, #0
   16ec0:	str	r2, [r0]
   16ec4:	b	170f0 <main@@Base+0x3e18>
   16ec8:	cmp	ip, #2
   16ecc:	mov	r7, r9
   16ed0:	blt	17734 <main@@Base+0x445c>
   16ed4:	ldr	r2, [sp, #32]
   16ed8:	mov	r1, r9
   16edc:	ldrb	r0, [r1, #1]!
   16ee0:	ldr	r2, [r2]
   16ee4:	cmp	r2, #0
   16ee8:	beq	17118 <main@@Base+0x3e40>
   16eec:	cmp	r0, #33	; 0x21
   16ef0:	bcc	16f00 <main@@Base+0x3c28>
   16ef4:	cmp	r0, #58	; 0x3a
   16ef8:	mov	r7, r9
   16efc:	bne	17734 <main@@Base+0x445c>
   16f00:	ldr	r0, [sp, #32]
   16f04:	mov	r2, #0
   16f08:	str	r2, [r0]
   16f0c:	b	17128 <main@@Base+0x3e50>
   16f10:	cmp	r0, #34	; 0x22
   16f14:	mov	r5, r9
   16f18:	bne	1728c <main@@Base+0x3fb4>
   16f1c:	add	r1, r9, #6
   16f20:	ldr	r4, [sp, #44]	; 0x2c
   16f24:	sub	r0, r4, r1
   16f28:	cmp	r0, #2
   16f2c:	blt	16ff4 <main@@Base+0x3d1c>
   16f30:	ldrb	r0, [r1]
   16f34:	cmp	r0, #32
   16f38:	bls	16fdc <main@@Base+0x3d04>
   16f3c:	ldr	r4, [sp, #44]	; 0x2c
   16f40:	mov	r5, r1
   16f44:	b	17004 <main@@Base+0x3d2c>
   16f48:	cmp	r0, #34	; 0x22
   16f4c:	mov	r7, r9
   16f50:	bne	173d0 <main@@Base+0x40f8>
   16f54:	add	r1, r9, #6
   16f58:	sub	r0, r5, r1
   16f5c:	cmp	r0, #2
   16f60:	blt	17074 <main@@Base+0x3d9c>
   16f64:	ldrb	r0, [r1]
   16f68:	cmp	r0, #32
   16f6c:	bls	17060 <main@@Base+0x3d88>
   16f70:	mov	r7, r1
   16f74:	b	17084 <main@@Base+0x3dac>
   16f78:	cmp	r0, #34	; 0x22
   16f7c:	mov	r1, r9
   16f80:	bne	175ac <main@@Base+0x42d4>
   16f84:	add	r2, r9, #6
   16f88:	sub	r0, r5, r2
   16f8c:	cmp	r0, #2
   16f90:	blt	17164 <main@@Base+0x3e8c>
   16f94:	ldrb	r0, [r2]
   16f98:	cmp	r0, #32
   16f9c:	bls	17150 <main@@Base+0x3e78>
   16fa0:	mov	r1, r2
   16fa4:	b	17178 <main@@Base+0x3ea0>
   16fa8:	cmp	r0, #34	; 0x22
   16fac:	mov	r7, r9
   16fb0:	bne	175f4 <main@@Base+0x431c>
   16fb4:	add	r1, r9, #2
   16fb8:	sub	r0, r5, r1
   16fbc:	cmp	r0, #2
   16fc0:	blt	171e8 <main@@Base+0x3f10>
   16fc4:	ldrb	r0, [r1]
   16fc8:	cmp	r0, #32
   16fcc:	bls	171d0 <main@@Base+0x3ef8>
   16fd0:	ldr	r5, [sp, #44]	; 0x2c
   16fd4:	mov	r7, r1
   16fd8:	b	171f8 <main@@Base+0x3f20>
   16fdc:	ldr	r4, [sp, #44]	; 0x2c
   16fe0:	bne	16ff4 <main@@Base+0x3d1c>
   16fe4:	mov	r5, r1
   16fe8:	ldrb	r0, [r5, #1]!
   16fec:	cmp	r0, #32
   16ff0:	bhi	17004 <main@@Base+0x3d2c>
   16ff4:	mov	r0, r8
   16ff8:	mov	r2, r4
   16ffc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17000:	mov	r5, r0
   17004:	cmp	r5, r4
   17008:	beq	17048 <main@@Base+0x3d70>
   1700c:	ldrb	r0, [r5]
   17010:	cmp	r0, #58	; 0x3a
   17014:	bne	17048 <main@@Base+0x3d70>
   17018:	ldr	r0, [sp, #44]	; 0x2c
   1701c:	add	r1, r5, #1
   17020:	sub	r0, r0, r1
   17024:	cmp	r0, #2
   17028:	blt	1727c <main@@Base+0x3fa4>
   1702c:	ldrb	r0, [r1]
   17030:	cmp	r0, #32
   17034:	bls	17264 <main@@Base+0x3f8c>
   17038:	ldr	r8, [sp, #36]	; 0x24
   1703c:	ldr	sl, [sp, #40]	; 0x28
   17040:	mov	r5, r1
   17044:	b	1728c <main@@Base+0x3fb4>
   17048:	ldr	r2, [sp, #44]	; 0x2c
   1704c:	mov	r0, r8
   17050:	mov	r1, r5
   17054:	mov	r3, #4
   17058:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1705c:	b	17288 <main@@Base+0x3fb0>
   17060:	bne	17074 <main@@Base+0x3d9c>
   17064:	mov	r7, r1
   17068:	ldrb	r0, [r7, #1]!
   1706c:	cmp	r0, #32
   17070:	bhi	17084 <main@@Base+0x3dac>
   17074:	mov	r0, r8
   17078:	mov	r2, r5
   1707c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17080:	mov	r7, r0
   17084:	cmp	r7, r5
   17088:	beq	170c8 <main@@Base+0x3df0>
   1708c:	ldrb	r0, [r7]
   17090:	cmp	r0, #58	; 0x3a
   17094:	bne	170c8 <main@@Base+0x3df0>
   17098:	add	r1, r7, #1
   1709c:	sub	r0, r5, r1
   170a0:	cmp	r0, #2
   170a4:	blt	173c0 <main@@Base+0x40e8>
   170a8:	ldrb	r0, [r1]
   170ac:	cmp	r0, #32
   170b0:	bls	173a4 <main@@Base+0x40cc>
   170b4:	ldr	r5, [sp, #44]	; 0x2c
   170b8:	ldr	r8, [sp, #36]	; 0x24
   170bc:	ldr	sl, [sp, #40]	; 0x28
   170c0:	mov	r7, r1
   170c4:	b	173d0 <main@@Base+0x40f8>
   170c8:	mov	r0, r8
   170cc:	mov	r1, r7
   170d0:	mov	r2, r5
   170d4:	mov	r3, #4
   170d8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   170dc:	b	173cc <main@@Base+0x40f4>
   170e0:	cmp	r0, #34	; 0x22
   170e4:	mov	r7, r9
   170e8:	bne	17690 <main@@Base+0x43b8>
   170ec:	add	r1, r9, #2
   170f0:	ldr	r4, [sp, #44]	; 0x2c
   170f4:	sub	r0, r4, r1
   170f8:	cmp	r0, #2
   170fc:	blt	1745c <main@@Base+0x4184>
   17100:	ldrb	r0, [r1]
   17104:	cmp	r0, #32
   17108:	bls	17444 <main@@Base+0x416c>
   1710c:	ldr	r4, [sp, #44]	; 0x2c
   17110:	mov	r7, r1
   17114:	b	1746c <main@@Base+0x4194>
   17118:	cmp	r0, #34	; 0x22
   1711c:	mov	r7, r9
   17120:	bne	17734 <main@@Base+0x445c>
   17124:	add	r1, r9, #2
   17128:	ldr	r4, [sp, #44]	; 0x2c
   1712c:	sub	r0, r4, r1
   17130:	cmp	r0, #2
   17134:	blt	174f8 <main@@Base+0x4220>
   17138:	ldrb	r0, [r1]
   1713c:	cmp	r0, #32
   17140:	bls	174e0 <main@@Base+0x4208>
   17144:	ldr	r4, [sp, #44]	; 0x2c
   17148:	mov	r7, r1
   1714c:	b	17508 <main@@Base+0x4230>
   17150:	bne	17164 <main@@Base+0x3e8c>
   17154:	mov	r1, r2
   17158:	ldrb	r0, [r1, #1]!
   1715c:	cmp	r0, #32
   17160:	bhi	17178 <main@@Base+0x3ea0>
   17164:	mov	r1, r2
   17168:	mov	r0, r8
   1716c:	mov	r2, r5
   17170:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17174:	mov	r1, r0
   17178:	cmp	r1, r5
   1717c:	beq	171bc <main@@Base+0x3ee4>
   17180:	ldrb	r0, [r1]
   17184:	cmp	r0, #58	; 0x3a
   17188:	bne	171bc <main@@Base+0x3ee4>
   1718c:	add	r2, r1, #1
   17190:	sub	r0, r5, r2
   17194:	cmp	r0, #2
   17198:	blt	17598 <main@@Base+0x42c0>
   1719c:	ldrb	r0, [r2]
   171a0:	cmp	r0, #32
   171a4:	bls	1757c <main@@Base+0x42a4>
   171a8:	ldr	r5, [sp, #44]	; 0x2c
   171ac:	ldr	r8, [sp, #36]	; 0x24
   171b0:	ldr	sl, [sp, #40]	; 0x28
   171b4:	mov	r1, r2
   171b8:	b	175ac <main@@Base+0x42d4>
   171bc:	mov	r0, r8
   171c0:	mov	r2, r5
   171c4:	mov	r3, #4
   171c8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   171cc:	b	175a8 <main@@Base+0x42d0>
   171d0:	ldr	r5, [sp, #44]	; 0x2c
   171d4:	bne	171e8 <main@@Base+0x3f10>
   171d8:	mov	r7, r1
   171dc:	ldrb	r0, [r7, #1]!
   171e0:	cmp	r0, #32
   171e4:	bhi	171f8 <main@@Base+0x3f20>
   171e8:	ldr	r0, [sp, #36]	; 0x24
   171ec:	mov	r2, r5
   171f0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   171f4:	mov	r7, r0
   171f8:	cmp	r7, r5
   171fc:	beq	17240 <main@@Base+0x3f68>
   17200:	ldrb	r0, [r7]
   17204:	cmp	r0, #58	; 0x3a
   17208:	bne	17240 <main@@Base+0x3f68>
   1720c:	ldr	r8, [sp, #36]	; 0x24
   17210:	ldr	sl, [sp, #40]	; 0x28
   17214:	add	r1, r7, #1
   17218:	sub	r0, r5, r1
   1721c:	cmp	r0, #2
   17220:	blt	175e4 <main@@Base+0x430c>
   17224:	ldrb	r0, [r1]
   17228:	cmp	r0, #32
   1722c:	bls	175c8 <main@@Base+0x42f0>
   17230:	ldr	r5, [sp, #44]	; 0x2c
   17234:	ldr	r8, [sp, #36]	; 0x24
   17238:	mov	r7, r1
   1723c:	b	1725c <main@@Base+0x3f84>
   17240:	ldr	r8, [sp, #36]	; 0x24
   17244:	mov	r1, r7
   17248:	mov	r2, r5
   1724c:	mov	r3, #4
   17250:	mov	r0, r8
   17254:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17258:	mov	r7, r0
   1725c:	ldr	sl, [sp, #40]	; 0x28
   17260:	b	175f4 <main@@Base+0x431c>
   17264:	ldr	r8, [sp, #36]	; 0x24
   17268:	ldr	sl, [sp, #40]	; 0x28
   1726c:	bne	1727c <main@@Base+0x3fa4>
   17270:	ldrb	r0, [r5, #2]!
   17274:	cmp	r0, #32
   17278:	bhi	1728c <main@@Base+0x3fb4>
   1727c:	ldr	r2, [sp, #44]	; 0x2c
   17280:	mov	r0, r8
   17284:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17288:	mov	r5, r0
   1728c:	cmp	r9, r5
   17290:	beq	17308 <main@@Base+0x4030>
   17294:	ldr	r2, [sp, #44]	; 0x2c
   17298:	mov	r4, #0
   1729c:	str	r4, [fp, #-52]	; 0xffffffcc
   172a0:	str	r4, [fp, #-56]	; 0xffffffc8
   172a4:	strb	r4, [fp, #-60]	; 0xffffffc4
   172a8:	str	r4, [sp, #56]	; 0x38
   172ac:	cmp	r5, r2
   172b0:	beq	17310 <main@@Base+0x4038>
   172b4:	sub	r0, fp, #56	; 0x38
   172b8:	mov	r1, r5
   172bc:	add	r3, sp, #56	; 0x38
   172c0:	str	r0, [sp]
   172c4:	mov	r0, r8
   172c8:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   172cc:	cmp	r0, r5
   172d0:	beq	17318 <main@@Base+0x4040>
   172d4:	ldr	r3, [sp, #56]	; 0x38
   172d8:	mov	r1, r0
   172dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   172e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   172e4:	cmp	r3, #0
   172e8:	beq	17320 <main@@Base+0x4048>
   172ec:	subs	r3, r0, #129	; 0x81
   172f0:	sbcs	r2, r2, #0
   172f4:	bcc	17344 <main@@Base+0x406c>
   172f8:	ldr	r2, [sp, #44]	; 0x2c
   172fc:	mov	r0, r8
   17300:	mov	r3, #8
   17304:	b	17338 <main@@Base+0x4060>
   17308:	ldr	r5, [sp, #44]	; 0x2c
   1730c:	b	177ac <main@@Base+0x44d4>
   17310:	mov	r1, r2
   17314:	b	17354 <main@@Base+0x407c>
   17318:	mov	r1, r5
   1731c:	b	17354 <main@@Base+0x407c>
   17320:	subs	r3, r0, #128	; 0x80
   17324:	sbcs	r2, r2, #0
   17328:	bcc	1734c <main@@Base+0x4074>
   1732c:	ldr	r2, [sp, #44]	; 0x2c
   17330:	mov	r0, r8
   17334:	mov	r3, #7
   17338:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1733c:	mov	r1, r0
   17340:	b	17354 <main@@Base+0x407c>
   17344:	rsb	r4, r0, #0
   17348:	b	17350 <main@@Base+0x4078>
   1734c:	mov	r4, r0
   17350:	strb	r4, [fp, #-60]	; 0xffffffc4
   17354:	cmp	r5, r1
   17358:	bne	17394 <main@@Base+0x40bc>
   1735c:	ldr	r4, [sp, #44]	; 0x2c
   17360:	movw	r3, #16788	; 0x4194
   17364:	sub	r0, fp, #60	; 0x3c
   17368:	mov	r1, r5
   1736c:	str	r0, [sp]
   17370:	mov	r0, r8
   17374:	movt	r3, #4
   17378:	mov	r2, r4
   1737c:	bl	1e2d8 <main@@Base+0xb000>
   17380:	mov	r1, r0
   17384:	cmp	r0, r5
   17388:	cmpne	r1, r4
   1738c:	beq	17894 <main@@Base+0x45bc>
   17390:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   17394:	ldr	r0, [sp, #20]
   17398:	ldr	r5, [sp, #44]	; 0x2c
   1739c:	strb	r4, [r0, #24]
   173a0:	b	177c0 <main@@Base+0x44e8>
   173a4:	ldr	r5, [sp, #44]	; 0x2c
   173a8:	ldr	r8, [sp, #36]	; 0x24
   173ac:	ldr	sl, [sp, #40]	; 0x28
   173b0:	bne	173c0 <main@@Base+0x40e8>
   173b4:	ldrb	r0, [r7, #2]!
   173b8:	cmp	r0, #32
   173bc:	bhi	173d0 <main@@Base+0x40f8>
   173c0:	mov	r0, r8
   173c4:	mov	r2, r5
   173c8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   173cc:	mov	r7, r0
   173d0:	cmp	r9, r7
   173d4:	beq	177ac <main@@Base+0x44d4>
   173d8:	mov	r0, #0
   173dc:	mov	r1, r7
   173e0:	mov	r2, r5
   173e4:	sub	r3, fp, #56	; 0x38
   173e8:	str	r0, [fp, #-52]	; 0xffffffcc
   173ec:	str	r0, [fp, #-56]	; 0xffffffc8
   173f0:	mov	r0, r8
   173f4:	bl	2e700 <flatcc_json_parser_double@@Base>
   173f8:	mov	r1, r0
   173fc:	cmp	r7, r0
   17400:	bne	17434 <main@@Base+0x415c>
   17404:	movw	r3, #16804	; 0x41a4
   17408:	sub	r0, fp, #56	; 0x38
   1740c:	mov	r1, r7
   17410:	mov	r2, r5
   17414:	str	r0, [sp]
   17418:	mov	r0, r8
   1741c:	movt	r3, #4
   17420:	bl	23194 <main@@Base+0xfebc>
   17424:	mov	r1, r0
   17428:	cmp	r0, r7
   1742c:	cmpne	r1, r5
   17430:	beq	17894 <main@@Base+0x45bc>
   17434:	vldr	d16, [fp, #-56]	; 0xffffffc8
   17438:	ldr	r0, [sp, #20]
   1743c:	vstr	d16, [r0, #16]
   17440:	b	177c0 <main@@Base+0x44e8>
   17444:	ldr	r4, [sp, #44]	; 0x2c
   17448:	bne	1745c <main@@Base+0x4184>
   1744c:	mov	r7, r1
   17450:	ldrb	r0, [r7, #1]!
   17454:	cmp	r0, #32
   17458:	bhi	1746c <main@@Base+0x4194>
   1745c:	ldr	r0, [sp, #36]	; 0x24
   17460:	mov	r2, r4
   17464:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17468:	mov	r7, r0
   1746c:	cmp	r7, r4
   17470:	beq	174b8 <main@@Base+0x41e0>
   17474:	ldrb	r0, [r7]
   17478:	cmp	r0, #58	; 0x3a
   1747c:	bne	174b8 <main@@Base+0x41e0>
   17480:	ldr	r5, [sp, #44]	; 0x2c
   17484:	ldr	r8, [sp, #36]	; 0x24
   17488:	ldr	sl, [sp, #40]	; 0x28
   1748c:	add	r1, r7, #1
   17490:	sub	r0, r5, r1
   17494:	cmp	r0, #2
   17498:	blt	17680 <main@@Base+0x43a8>
   1749c:	ldrb	r0, [r1]
   174a0:	cmp	r0, #32
   174a4:	bls	17664 <main@@Base+0x438c>
   174a8:	ldr	r5, [sp, #44]	; 0x2c
   174ac:	ldr	r8, [sp, #36]	; 0x24
   174b0:	mov	r7, r1
   174b4:	b	174d8 <main@@Base+0x4200>
   174b8:	ldr	r8, [sp, #36]	; 0x24
   174bc:	ldr	r5, [sp, #44]	; 0x2c
   174c0:	mov	r1, r7
   174c4:	mov	r3, #4
   174c8:	mov	r0, r8
   174cc:	mov	r2, r5
   174d0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   174d4:	mov	r7, r0
   174d8:	ldr	sl, [sp, #40]	; 0x28
   174dc:	b	17690 <main@@Base+0x43b8>
   174e0:	ldr	r4, [sp, #44]	; 0x2c
   174e4:	bne	174f8 <main@@Base+0x4220>
   174e8:	mov	r7, r1
   174ec:	ldrb	r0, [r7, #1]!
   174f0:	cmp	r0, #32
   174f4:	bhi	17508 <main@@Base+0x4230>
   174f8:	ldr	r0, [sp, #36]	; 0x24
   174fc:	mov	r2, r4
   17500:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17504:	mov	r7, r0
   17508:	cmp	r7, r4
   1750c:	beq	17554 <main@@Base+0x427c>
   17510:	ldrb	r0, [r7]
   17514:	cmp	r0, #58	; 0x3a
   17518:	bne	17554 <main@@Base+0x427c>
   1751c:	ldr	r5, [sp, #44]	; 0x2c
   17520:	ldr	r8, [sp, #36]	; 0x24
   17524:	ldr	sl, [sp, #40]	; 0x28
   17528:	add	r1, r7, #1
   1752c:	sub	r0, r5, r1
   17530:	cmp	r0, #2
   17534:	blt	17724 <main@@Base+0x444c>
   17538:	ldrb	r0, [r1]
   1753c:	cmp	r0, #32
   17540:	bls	17708 <main@@Base+0x4430>
   17544:	ldr	r5, [sp, #44]	; 0x2c
   17548:	ldr	r8, [sp, #36]	; 0x24
   1754c:	mov	r7, r1
   17550:	b	17574 <main@@Base+0x429c>
   17554:	ldr	r8, [sp, #36]	; 0x24
   17558:	ldr	r5, [sp, #44]	; 0x2c
   1755c:	mov	r1, r7
   17560:	mov	r3, #4
   17564:	mov	r0, r8
   17568:	mov	r2, r5
   1756c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17570:	mov	r7, r0
   17574:	ldr	sl, [sp, #40]	; 0x28
   17578:	b	17734 <main@@Base+0x445c>
   1757c:	ldr	r5, [sp, #44]	; 0x2c
   17580:	ldr	r8, [sp, #36]	; 0x24
   17584:	ldr	sl, [sp, #40]	; 0x28
   17588:	bne	17598 <main@@Base+0x42c0>
   1758c:	ldrb	r0, [r1, #2]!
   17590:	cmp	r0, #32
   17594:	bhi	175ac <main@@Base+0x42d4>
   17598:	mov	r1, r2
   1759c:	mov	r0, r8
   175a0:	mov	r2, r5
   175a4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   175a8:	mov	r1, r0
   175ac:	cmp	r9, r1
   175b0:	beq	177ac <main@@Base+0x44d4>
   175b4:	ldr	r3, [sp, #16]
   175b8:	mov	r0, r8
   175bc:	mov	r2, r5
   175c0:	bl	1e974 <main@@Base+0xb69c>
   175c4:	b	177bc <main@@Base+0x44e4>
   175c8:	ldr	r5, [sp, #44]	; 0x2c
   175cc:	ldr	r8, [sp, #36]	; 0x24
   175d0:	ldr	sl, [sp, #40]	; 0x28
   175d4:	bne	175e4 <main@@Base+0x430c>
   175d8:	ldrb	r0, [r7, #2]!
   175dc:	cmp	r0, #32
   175e0:	bhi	175f4 <main@@Base+0x431c>
   175e4:	mov	r0, r8
   175e8:	mov	r2, r5
   175ec:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   175f0:	mov	r7, r0
   175f4:	cmp	r9, r7
   175f8:	beq	177ac <main@@Base+0x44d4>
   175fc:	mov	r0, #0
   17600:	mov	r1, r7
   17604:	mov	r2, r5
   17608:	sub	r3, fp, #56	; 0x38
   1760c:	str	r0, [fp, #-56]	; 0xffffffc8
   17610:	mov	r0, r8
   17614:	bl	2f068 <flatcc_json_parser_float@@Base>
   17618:	mov	r1, r0
   1761c:	cmp	r7, r0
   17620:	bne	17654 <main@@Base+0x437c>
   17624:	movw	r3, #16816	; 0x41b0
   17628:	sub	r0, fp, #56	; 0x38
   1762c:	mov	r1, r7
   17630:	mov	r2, r5
   17634:	str	r0, [sp]
   17638:	mov	r0, r8
   1763c:	movt	r3, #4
   17640:	bl	2270c <main@@Base+0xf434>
   17644:	mov	r1, r0
   17648:	cmp	r0, r7
   1764c:	cmpne	r1, r5
   17650:	beq	17894 <main@@Base+0x45bc>
   17654:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17658:	ldr	r2, [sp, #20]
   1765c:	str	r0, [r2]
   17660:	b	177c0 <main@@Base+0x44e8>
   17664:	ldr	r5, [sp, #44]	; 0x2c
   17668:	ldr	r8, [sp, #36]	; 0x24
   1766c:	ldr	sl, [sp, #40]	; 0x28
   17670:	bne	17680 <main@@Base+0x43a8>
   17674:	ldrb	r0, [r7, #2]!
   17678:	cmp	r0, #32
   1767c:	bhi	17690 <main@@Base+0x43b8>
   17680:	mov	r0, r8
   17684:	mov	r2, r5
   17688:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1768c:	mov	r7, r0
   17690:	cmp	r9, r7
   17694:	beq	177ac <main@@Base+0x44d4>
   17698:	mov	r0, #0
   1769c:	mov	r1, r7
   176a0:	mov	r2, r5
   176a4:	sub	r3, fp, #56	; 0x38
   176a8:	str	r0, [fp, #-56]	; 0xffffffc8
   176ac:	mov	r0, r8
   176b0:	bl	2f068 <flatcc_json_parser_float@@Base>
   176b4:	mov	r1, r0
   176b8:	cmp	r7, r0
   176bc:	bne	176f8 <main@@Base+0x4420>
   176c0:	movw	r3, #16828	; 0x41bc
   176c4:	sub	r0, fp, #56	; 0x38
   176c8:	mov	r1, r7
   176cc:	mov	r2, r5
   176d0:	str	r0, [sp]
   176d4:	mov	r0, r8
   176d8:	movt	r3, #4
   176dc:	bl	2270c <main@@Base+0xf434>
   176e0:	mov	r1, r0
   176e4:	cmp	r0, r7
   176e8:	cmpne	r1, r5
   176ec:	beq	17894 <main@@Base+0x45bc>
   176f0:	ldr	r8, [sp, #36]	; 0x24
   176f4:	ldr	sl, [sp, #40]	; 0x28
   176f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   176fc:	ldr	r2, [sp, #20]
   17700:	str	r0, [r2, #8]
   17704:	b	177c0 <main@@Base+0x44e8>
   17708:	ldr	r5, [sp, #44]	; 0x2c
   1770c:	ldr	r8, [sp, #36]	; 0x24
   17710:	ldr	sl, [sp, #40]	; 0x28
   17714:	bne	17724 <main@@Base+0x444c>
   17718:	ldrb	r0, [r7, #2]!
   1771c:	cmp	r0, #32
   17720:	bhi	17734 <main@@Base+0x445c>
   17724:	mov	r0, r8
   17728:	mov	r2, r5
   1772c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17730:	mov	r7, r0
   17734:	cmp	r9, r7
   17738:	beq	177ac <main@@Base+0x44d4>
   1773c:	mov	r0, #0
   17740:	mov	r1, r7
   17744:	mov	r2, r5
   17748:	sub	r3, fp, #56	; 0x38
   1774c:	str	r0, [fp, #-56]	; 0xffffffc8
   17750:	mov	r0, r8
   17754:	bl	2f068 <flatcc_json_parser_float@@Base>
   17758:	mov	r1, r0
   1775c:	cmp	r7, r0
   17760:	bne	1779c <main@@Base+0x44c4>
   17764:	movw	r3, #16840	; 0x41c8
   17768:	sub	r0, fp, #56	; 0x38
   1776c:	mov	r1, r7
   17770:	mov	r2, r5
   17774:	str	r0, [sp]
   17778:	mov	r0, r8
   1777c:	movt	r3, #4
   17780:	bl	2270c <main@@Base+0xf434>
   17784:	mov	r1, r0
   17788:	cmp	r0, r7
   1778c:	cmpne	r1, r5
   17790:	beq	17894 <main@@Base+0x45bc>
   17794:	ldr	r8, [sp, #36]	; 0x24
   17798:	ldr	sl, [sp, #40]	; 0x28
   1779c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   177a0:	ldr	r2, [sp, #20]
   177a4:	str	r0, [r2, #4]
   177a8:	b	177c0 <main@@Base+0x44e8>
   177ac:	mov	r0, r8
   177b0:	mov	r1, r9
   177b4:	mov	r2, r5
   177b8:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   177bc:	mov	r1, r0
   177c0:	sub	r0, r5, r1
   177c4:	cmp	r0, #2
   177c8:	blt	177f4 <main@@Base+0x451c>
   177cc:	ldrb	r0, [r1]
   177d0:	cmp	r0, #32
   177d4:	bls	177e0 <main@@Base+0x4508>
   177d8:	mov	r2, r1
   177dc:	b	17804 <main@@Base+0x452c>
   177e0:	bne	177f4 <main@@Base+0x451c>
   177e4:	mov	r2, r1
   177e8:	ldrb	r0, [r2, #1]!
   177ec:	cmp	r0, #32
   177f0:	bhi	17804 <main@@Base+0x452c>
   177f4:	mov	r0, r8
   177f8:	mov	r2, r5
   177fc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17800:	mov	r2, r0
   17804:	cmp	r2, r5
   17808:	beq	178b0 <main@@Base+0x45d8>
   1780c:	ldrb	r0, [r2]
   17810:	cmp	r0, #44	; 0x2c
   17814:	bne	178b8 <main@@Base+0x45e0>
   17818:	add	r1, r2, #1
   1781c:	sub	r0, r5, r1
   17820:	cmp	r0, #2
   17824:	blt	1784c <main@@Base+0x4574>
   17828:	ldrb	r0, [r1]
   1782c:	cmp	r0, #32
   17830:	bls	1783c <main@@Base+0x4564>
   17834:	mov	r2, r1
   17838:	b	1785c <main@@Base+0x4584>
   1783c:	bne	1784c <main@@Base+0x4574>
   17840:	ldrb	r0, [r2, #2]!
   17844:	cmp	r0, #32
   17848:	bhi	1785c <main@@Base+0x4584>
   1784c:	mov	r0, r8
   17850:	mov	r2, r5
   17854:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17858:	mov	r2, r0
   1785c:	cmp	r2, r5
   17860:	beq	178ec <main@@Base+0x4614>
   17864:	ldrb	r0, [r2]
   17868:	cmp	r0, #125	; 0x7d
   1786c:	bne	16bc4 <main@@Base+0x38ec>
   17870:	add	r1, r2, #1
   17874:	sub	r0, r5, r1
   17878:	cmp	r0, #2
   1787c:	blt	19e20 <main@@Base+0x6b48>
   17880:	ldrb	r0, [r1]
   17884:	cmp	r0, #32
   17888:	bls	19e0c <main@@Base+0x6b34>
   1788c:	mov	r4, r1
   17890:	b	1b1e8 <main@@Base+0x7f10>
   17894:	ldr	r8, [sp, #36]	; 0x24
   17898:	ldr	r5, [sp, #44]	; 0x2c
   1789c:	mov	r3, #33	; 0x21
   178a0:	mov	r0, r8
   178a4:	mov	r2, r5
   178a8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   178ac:	b	16898 <main@@Base+0x35c0>
   178b0:	mov	r4, r5
   178b4:	b	1b1e8 <main@@Base+0x7f10>
   178b8:	cmp	r0, #125	; 0x7d
   178bc:	bne	182c8 <main@@Base+0x4ff0>
   178c0:	add	r1, r2, #1
   178c4:	sub	r0, r5, r1
   178c8:	cmp	r0, #2
   178cc:	blt	19e20 <main@@Base+0x6b48>
   178d0:	ldrb	r0, [r1]
   178d4:	cmp	r0, #32
   178d8:	bls	19e00 <main@@Base+0x6b28>
   178dc:	ldr	r5, [sp, #44]	; 0x2c
   178e0:	ldr	r8, [sp, #36]	; 0x24
   178e4:	mov	r4, r1
   178e8:	b	1689c <main@@Base+0x35c4>
   178ec:	mov	r0, r8
   178f0:	mov	r1, r5
   178f4:	b	182d0 <main@@Base+0x4ff8>
   178f8:	bne	17908 <main@@Base+0x4630>
   178fc:	ldrb	r0, [r7, #2]!
   17900:	cmp	r0, #32
   17904:	bhi	17918 <main@@Base+0x4640>
   17908:	mov	r0, r8
   1790c:	mov	r2, r5
   17910:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17914:	mov	r7, r0
   17918:	cmp	r9, r7
   1791c:	beq	162e8 <main@@Base+0x3010>
   17920:	mov	r0, #0
   17924:	mov	r1, r7
   17928:	mov	r2, r5
   1792c:	sub	r3, fp, #56	; 0x38
   17930:	str	r0, [fp, #-56]	; 0xffffffc8
   17934:	mov	r0, r8
   17938:	bl	2f068 <flatcc_json_parser_float@@Base>
   1793c:	mov	r4, r0
   17940:	cmp	r7, r0
   17944:	bne	17978 <main@@Base+0x46a0>
   17948:	movw	r3, #16620	; 0x40ec
   1794c:	sub	r0, fp, #56	; 0x38
   17950:	mov	r1, r7
   17954:	mov	r2, r5
   17958:	str	r0, [sp]
   1795c:	mov	r0, r8
   17960:	movt	r3, #4
   17964:	bl	2270c <main@@Base+0xf434>
   17968:	mov	r4, r0
   1796c:	cmp	r0, r7
   17970:	cmpne	r4, r5
   17974:	beq	13390 <main@@Base+0xb8>
   17978:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1797c:	vcmp.f32	s0, s16
   17980:	vmrs	APSR_nzcv, fpscr
   17984:	bne	17994 <main@@Base+0x46bc>
   17988:	ldrb	r0, [r8, #8]
   1798c:	tst	r0, #2
   17990:	beq	1b1e8 <main@@Base+0x7f10>
   17994:	ldr	r0, [r8]
   17998:	mov	r1, #26
   1799c:	b	15214 <main@@Base+0x1f3c>
   179a0:	bne	179b4 <main@@Base+0x46dc>
   179a4:	mov	r4, r1
   179a8:	ldrb	r0, [r4, #1]!
   179ac:	cmp	r0, #32
   179b0:	bhi	179c4 <main@@Base+0x46ec>
   179b4:	mov	r0, r8
   179b8:	mov	r2, r5
   179bc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   179c0:	mov	r4, r0
   179c4:	cmp	r4, r5
   179c8:	beq	179fc <main@@Base+0x4724>
   179cc:	ldrb	r0, [r4]
   179d0:	cmp	r0, #58	; 0x3a
   179d4:	bne	179fc <main@@Base+0x4724>
   179d8:	add	r1, r4, #1
   179dc:	sub	r0, r5, r1
   179e0:	cmp	r0, #2
   179e4:	blt	18dd4 <main@@Base+0x5afc>
   179e8:	ldrb	r0, [r1]
   179ec:	cmp	r0, #32
   179f0:	bls	18dc4 <main@@Base+0x5aec>
   179f4:	mov	r4, r1
   179f8:	b	18de4 <main@@Base+0x5b0c>
   179fc:	mov	r0, r8
   17a00:	mov	r1, r4
   17a04:	mov	r2, r5
   17a08:	mov	r3, #4
   17a0c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17a10:	b	18de0 <main@@Base+0x5b08>
   17a14:	bne	17a28 <main@@Base+0x4750>
   17a18:	mov	r4, r1
   17a1c:	ldrb	r0, [r4, #1]!
   17a20:	cmp	r0, #32
   17a24:	bhi	17a38 <main@@Base+0x4760>
   17a28:	mov	r0, r8
   17a2c:	mov	r2, r5
   17a30:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17a34:	mov	r4, r0
   17a38:	cmp	r4, r5
   17a3c:	beq	17a70 <main@@Base+0x4798>
   17a40:	ldrb	r0, [r4]
   17a44:	cmp	r0, #58	; 0x3a
   17a48:	bne	17a70 <main@@Base+0x4798>
   17a4c:	add	r1, r4, #1
   17a50:	sub	r0, r5, r1
   17a54:	cmp	r0, #2
   17a58:	blt	18edc <main@@Base+0x5c04>
   17a5c:	ldrb	r0, [r1]
   17a60:	cmp	r0, #32
   17a64:	bls	18ecc <main@@Base+0x5bf4>
   17a68:	mov	r4, r1
   17a6c:	b	18eec <main@@Base+0x5c14>
   17a70:	mov	r0, r8
   17a74:	mov	r1, r4
   17a78:	mov	r2, r5
   17a7c:	mov	r3, #4
   17a80:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17a84:	b	18ee8 <main@@Base+0x5c10>
   17a88:	bne	17a9c <main@@Base+0x47c4>
   17a8c:	mov	r7, r1
   17a90:	ldrb	r0, [r7, #1]!
   17a94:	cmp	r0, #32
   17a98:	bhi	17aac <main@@Base+0x47d4>
   17a9c:	mov	r0, r8
   17aa0:	mov	r2, r5
   17aa4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17aa8:	mov	r7, r0
   17aac:	cmp	r7, r5
   17ab0:	beq	17aec <main@@Base+0x4814>
   17ab4:	ldrb	r0, [r7]
   17ab8:	cmp	r0, #58	; 0x3a
   17abc:	bne	17aec <main@@Base+0x4814>
   17ac0:	add	r1, r7, #1
   17ac4:	sub	r0, r5, r1
   17ac8:	cmp	r0, #2
   17acc:	blt	18fa0 <main@@Base+0x5cc8>
   17ad0:	ldrb	r0, [r1]
   17ad4:	cmp	r0, #32
   17ad8:	bls	18f88 <main@@Base+0x5cb0>
   17adc:	ldr	r5, [sp, #44]	; 0x2c
   17ae0:	ldr	r8, [sp, #36]	; 0x24
   17ae4:	mov	r7, r1
   17ae8:	b	18fb0 <main@@Base+0x5cd8>
   17aec:	mov	r0, r8
   17af0:	mov	r1, r7
   17af4:	mov	r2, r5
   17af8:	mov	r3, #4
   17afc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17b00:	b	18fac <main@@Base+0x5cd4>
   17b04:	bne	17b18 <main@@Base+0x4840>
   17b08:	mov	r7, r1
   17b0c:	ldrb	r0, [r7, #1]!
   17b10:	cmp	r0, #32
   17b14:	bhi	17b28 <main@@Base+0x4850>
   17b18:	mov	r0, r8
   17b1c:	mov	r2, r5
   17b20:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17b24:	mov	r7, r0
   17b28:	cmp	r7, r5
   17b2c:	beq	17b68 <main@@Base+0x4890>
   17b30:	ldrb	r0, [r7]
   17b34:	cmp	r0, #58	; 0x3a
   17b38:	bne	17b68 <main@@Base+0x4890>
   17b3c:	add	r1, r7, #1
   17b40:	sub	r0, r5, r1
   17b44:	cmp	r0, #2
   17b48:	blt	19184 <main@@Base+0x5eac>
   17b4c:	ldrb	r0, [r1]
   17b50:	cmp	r0, #32
   17b54:	bls	1916c <main@@Base+0x5e94>
   17b58:	ldr	r5, [sp, #44]	; 0x2c
   17b5c:	ldr	r8, [sp, #36]	; 0x24
   17b60:	mov	r7, r1
   17b64:	b	19194 <main@@Base+0x5ebc>
   17b68:	mov	r0, r8
   17b6c:	mov	r1, r7
   17b70:	mov	r2, r5
   17b74:	mov	r3, #4
   17b78:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17b7c:	b	19190 <main@@Base+0x5eb8>
   17b80:	mov	r0, r8
   17b84:	mov	r1, r4
   17b88:	mov	r2, r5
   17b8c:	mov	r3, #9
   17b90:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17b94:	b	1630c <main@@Base+0x3034>
   17b98:	bne	17ba8 <main@@Base+0x48d0>
   17b9c:	ldrb	r0, [r7, #2]!
   17ba0:	cmp	r0, #32
   17ba4:	bhi	17bb8 <main@@Base+0x48e0>
   17ba8:	mov	r0, r8
   17bac:	mov	r2, r5
   17bb0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17bb4:	mov	r7, r0
   17bb8:	cmp	sl, r7
   17bbc:	beq	17c40 <main@@Base+0x4968>
   17bc0:	mov	r6, #0
   17bc4:	cmp	r7, r5
   17bc8:	str	r6, [fp, #-52]	; 0xffffffcc
   17bcc:	str	r6, [fp, #-56]	; 0xffffffc8
   17bd0:	str	r6, [fp, #-60]	; 0xffffffc4
   17bd4:	str	r6, [sp, #56]	; 0x38
   17bd8:	beq	17cb8 <main@@Base+0x49e0>
   17bdc:	sub	r0, fp, #56	; 0x38
   17be0:	mov	r1, r7
   17be4:	mov	r2, r5
   17be8:	add	r3, sp, #56	; 0x38
   17bec:	str	r0, [sp]
   17bf0:	mov	r0, r8
   17bf4:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   17bf8:	cmp	r0, r7
   17bfc:	beq	17cf0 <main@@Base+0x4a18>
   17c00:	ldr	r2, [sp, #56]	; 0x38
   17c04:	mov	r4, r0
   17c08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17c0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17c10:	cmp	r2, #0
   17c14:	beq	17cfc <main@@Base+0x4a24>
   17c18:	ldr	sl, [sp, #40]	; 0x28
   17c1c:	subs	r2, r0, #-2147483647	; 0x80000001
   17c20:	sbcs	r1, r1, #0
   17c24:	bcc	17d28 <main@@Base+0x4a50>
   17c28:	mov	r0, r8
   17c2c:	mov	r1, r4
   17c30:	mov	r2, r5
   17c34:	mov	r3, #8
   17c38:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17c3c:	b	17d20 <main@@Base+0x4a48>
   17c40:	add	r4, r9, #16
   17c44:	mov	r1, #8
   17c48:	mov	r2, #-268435456	; 0xf0000000
   17c4c:	sub	r0, r5, r4
   17c50:	cmp	r0, #8
   17c54:	movcc	r1, r0
   17c58:	add	r1, r2, r1, lsl #28
   17c5c:	asr	r1, r1, #28
   17c60:	cmp	r1, #0
   17c64:	blt	1928c <main@@Base+0x5fb4>
   17c68:	ldrb	r1, [r4]
   17c6c:	cmp	r1, #97	; 0x61
   17c70:	bne	1928c <main@@Base+0x5fb4>
   17c74:	ldr	sl, [sp, #40]	; 0x28
   17c78:	cmp	r0, #2
   17c7c:	blt	1b1d4 <main@@Base+0x7efc>
   17c80:	ldr	r2, [sp, #32]
   17c84:	mov	r1, r9
   17c88:	ldrb	r0, [r1, #17]!
   17c8c:	ldr	r2, [r2]
   17c90:	cmp	r2, #0
   17c94:	beq	17cc4 <main@@Base+0x49ec>
   17c98:	cmp	r0, #33	; 0x21
   17c9c:	bcc	17ca8 <main@@Base+0x49d0>
   17ca0:	cmp	r0, #58	; 0x3a
   17ca4:	bne	1b1d4 <main@@Base+0x7efc>
   17ca8:	ldr	r0, [sp, #32]
   17cac:	mov	r2, #0
   17cb0:	str	r2, [r0]
   17cb4:	b	17cd0 <main@@Base+0x49f8>
   17cb8:	ldr	sl, [sp, #40]	; 0x28
   17cbc:	mov	r4, r5
   17cc0:	b	184b0 <main@@Base+0x51d8>
   17cc4:	cmp	r0, #34	; 0x22
   17cc8:	bne	1b1d4 <main@@Base+0x7efc>
   17ccc:	add	r1, r9, #18
   17cd0:	sub	r0, r5, r1
   17cd4:	cmp	r0, #2
   17cd8:	blt	17dc4 <main@@Base+0x4aec>
   17cdc:	ldrb	r0, [r1]
   17ce0:	cmp	r0, #32
   17ce4:	bls	17db0 <main@@Base+0x4ad8>
   17ce8:	mov	r7, r1
   17cec:	b	17dd4 <main@@Base+0x4afc>
   17cf0:	ldr	sl, [sp, #40]	; 0x28
   17cf4:	mov	r4, r7
   17cf8:	b	184b0 <main@@Base+0x51d8>
   17cfc:	subs	r2, r0, #-2147483648	; 0x80000000
   17d00:	sbcs	r1, r1, #0
   17d04:	bcc	184a4 <main@@Base+0x51cc>
   17d08:	mov	r0, r8
   17d0c:	mov	r1, r4
   17d10:	mov	r2, r5
   17d14:	mov	r3, #7
   17d18:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17d1c:	ldr	sl, [sp, #40]	; 0x28
   17d20:	mov	r4, r0
   17d24:	b	184b0 <main@@Base+0x51d8>
   17d28:	rsb	r6, r0, #0
   17d2c:	b	184ac <main@@Base+0x51d4>
   17d30:	bne	17d44 <main@@Base+0x4a6c>
   17d34:	mov	r4, r1
   17d38:	ldrb	r0, [r4, #1]!
   17d3c:	cmp	r0, #32
   17d40:	bhi	17d54 <main@@Base+0x4a7c>
   17d44:	mov	r0, r8
   17d48:	mov	r2, r5
   17d4c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17d50:	mov	r4, r0
   17d54:	cmp	r4, r5
   17d58:	beq	17d98 <main@@Base+0x4ac0>
   17d5c:	ldrb	r0, [r4]
   17d60:	cmp	r0, #58	; 0x3a
   17d64:	bne	17d98 <main@@Base+0x4ac0>
   17d68:	add	r1, r4, #1
   17d6c:	sub	r0, r5, r1
   17d70:	cmp	r0, #2
   17d74:	blt	193c4 <main@@Base+0x60ec>
   17d78:	ldrb	r0, [r1]
   17d7c:	cmp	r0, #32
   17d80:	bls	193a8 <main@@Base+0x60d0>
   17d84:	ldr	r5, [sp, #44]	; 0x2c
   17d88:	ldr	r8, [sp, #36]	; 0x24
   17d8c:	ldr	sl, [sp, #40]	; 0x28
   17d90:	mov	r4, r1
   17d94:	b	193d4 <main@@Base+0x60fc>
   17d98:	mov	r0, r8
   17d9c:	mov	r1, r4
   17da0:	mov	r2, r5
   17da4:	mov	r3, #4
   17da8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17dac:	b	193d0 <main@@Base+0x60f8>
   17db0:	bne	17dc4 <main@@Base+0x4aec>
   17db4:	mov	r7, r1
   17db8:	ldrb	r0, [r7, #1]!
   17dbc:	cmp	r0, #32
   17dc0:	bhi	17dd4 <main@@Base+0x4afc>
   17dc4:	mov	r0, r8
   17dc8:	mov	r2, r5
   17dcc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17dd0:	mov	r7, r0
   17dd4:	cmp	r7, r5
   17dd8:	beq	17e18 <main@@Base+0x4b40>
   17ddc:	ldrb	r0, [r7]
   17de0:	cmp	r0, #58	; 0x3a
   17de4:	bne	17e18 <main@@Base+0x4b40>
   17de8:	add	r1, r7, #1
   17dec:	sub	r0, r5, r1
   17df0:	cmp	r0, #2
   17df4:	blt	19584 <main@@Base+0x62ac>
   17df8:	ldrb	r0, [r1]
   17dfc:	cmp	r0, #32
   17e00:	bls	19568 <main@@Base+0x6290>
   17e04:	ldr	r5, [sp, #44]	; 0x2c
   17e08:	ldr	r8, [sp, #36]	; 0x24
   17e0c:	ldr	sl, [sp, #40]	; 0x28
   17e10:	mov	r7, r1
   17e14:	b	19594 <main@@Base+0x62bc>
   17e18:	mov	r0, r8
   17e1c:	mov	r1, r7
   17e20:	mov	r2, r5
   17e24:	mov	r3, #4
   17e28:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17e2c:	b	19590 <main@@Base+0x62b8>
   17e30:	bne	17e40 <main@@Base+0x4b68>
   17e34:	ldrb	r0, [r4, #2]!
   17e38:	cmp	r0, #32
   17e3c:	bhi	17e50 <main@@Base+0x4b78>
   17e40:	mov	r0, r8
   17e44:	mov	r2, r5
   17e48:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   17e4c:	mov	r4, r0
   17e50:	cmp	r4, r5
   17e54:	mov	r6, r5
   17e58:	beq	17e9c <main@@Base+0x4bc4>
   17e5c:	ldrb	r0, [r4]
   17e60:	cmp	r0, #93	; 0x5d
   17e64:	bne	17e98 <main@@Base+0x4bc0>
   17e68:	add	r1, r4, #1
   17e6c:	sub	r0, r5, r1
   17e70:	cmp	r0, #2
   17e74:	blt	19398 <main@@Base+0x60c0>
   17e78:	ldrb	r0, [r1]
   17e7c:	cmp	r0, #32
   17e80:	bls	1937c <main@@Base+0x60a4>
   17e84:	ldr	r5, [sp, #44]	; 0x2c
   17e88:	ldr	r8, [sp, #36]	; 0x24
   17e8c:	ldr	sl, [sp, #40]	; 0x28
   17e90:	mov	r4, r1
   17e94:	b	168bc <main@@Base+0x35e4>
   17e98:	mov	r6, r4
   17e9c:	mov	r0, #0
   17ea0:	mov	r1, #1
   17ea4:	strb	r0, [fp, #-60]	; 0xffffffc4
   17ea8:	ldr	r0, [r8]
   17eac:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   17eb0:	cmp	r0, #0
   17eb4:	beq	1ce9c <main@@Base+0x9bc4>
   17eb8:	mov	r7, r0
   17ebc:	mov	r4, r6
   17ec0:	sub	r0, r5, r4
   17ec4:	cmp	r0, #4
   17ec8:	blt	17f04 <main@@Base+0x4c2c>
   17ecc:	ldr	r1, [r4]
   17ed0:	movw	r2, #29300	; 0x7274
   17ed4:	movt	r2, #25973	; 0x6575
   17ed8:	cmp	r1, r2
   17edc:	beq	17f68 <main@@Base+0x4c90>
   17ee0:	cmp	r0, #5
   17ee4:	blt	17f04 <main@@Base+0x4c2c>
   17ee8:	movw	r1, #5168	; 0x1430
   17eec:	mov	r0, r4
   17ef0:	mov	r2, #5
   17ef4:	movt	r1, #3
   17ef8:	bl	12ac8 <memcmp@plt>
   17efc:	cmp	r0, #0
   17f00:	beq	180c8 <main@@Base+0x4df0>
   17f04:	mov	r6, #0
   17f08:	cmp	r4, r5
   17f0c:	str	r6, [fp, #-52]	; 0xffffffcc
   17f10:	str	r6, [fp, #-56]	; 0xffffffc8
   17f14:	str	r6, [sp, #56]	; 0x38
   17f18:	beq	17f60 <main@@Base+0x4c88>
   17f1c:	sub	r0, fp, #56	; 0x38
   17f20:	mov	r1, r4
   17f24:	mov	r2, r5
   17f28:	add	r3, sp, #56	; 0x38
   17f2c:	str	r0, [sp]
   17f30:	mov	r0, r8
   17f34:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   17f38:	cmp	r0, r4
   17f3c:	beq	17f74 <main@@Base+0x4c9c>
   17f40:	mov	r1, r0
   17f44:	ldr	r0, [sp, #56]	; 0x38
   17f48:	cmp	r0, #0
   17f4c:	beq	17f7c <main@@Base+0x4ca4>
   17f50:	mov	r0, r8
   17f54:	mov	r2, r5
   17f58:	mov	r3, #8
   17f5c:	b	17f9c <main@@Base+0x4cc4>
   17f60:	mov	r1, r5
   17f64:	b	17fa4 <main@@Base+0x4ccc>
   17f68:	mov	r0, #1
   17f6c:	add	r1, r4, #4
   17f70:	b	17fb0 <main@@Base+0x4cd8>
   17f74:	mov	r1, r4
   17f78:	b	17fa4 <main@@Base+0x4ccc>
   17f7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17f80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17f84:	subs	r3, r0, #256	; 0x100
   17f88:	sbcs	r2, r2, #0
   17f8c:	bcc	180d4 <main@@Base+0x4dfc>
   17f90:	mov	r0, r8
   17f94:	mov	r2, r5
   17f98:	mov	r3, #7
   17f9c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   17fa0:	mov	r1, r0
   17fa4:	uxtb	r0, r6
   17fa8:	cmp	r0, #0
   17fac:	movwne	r0, #1
   17fb0:	strb	r0, [fp, #-60]	; 0xffffffc4
   17fb4:	cmp	r4, r1
   17fb8:	bne	17ff0 <main@@Base+0x4d18>
   17fbc:	movw	r3, #16596	; 0x40d4
   17fc0:	sub	r0, fp, #60	; 0x3c
   17fc4:	mov	r1, r4
   17fc8:	mov	r2, r5
   17fcc:	str	r0, [sp]
   17fd0:	mov	r0, r8
   17fd4:	movt	r3, #4
   17fd8:	bl	22504 <main@@Base+0xf22c>
   17fdc:	mov	r1, r0
   17fe0:	cmp	r0, r4
   17fe4:	cmpne	r1, r5
   17fe8:	beq	1ce94 <main@@Base+0x9bbc>
   17fec:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   17ff0:	strb	r0, [r7]
   17ff4:	sub	r0, r5, r1
   17ff8:	cmp	r0, #2
   17ffc:	blt	18028 <main@@Base+0x4d50>
   18000:	ldrb	r0, [r1]
   18004:	cmp	r0, #32
   18008:	bls	18014 <main@@Base+0x4d3c>
   1800c:	mov	r4, r1
   18010:	b	18038 <main@@Base+0x4d60>
   18014:	bne	18028 <main@@Base+0x4d50>
   18018:	mov	r4, r1
   1801c:	ldrb	r0, [r4, #1]!
   18020:	cmp	r0, #32
   18024:	bhi	18038 <main@@Base+0x4d60>
   18028:	mov	r0, r8
   1802c:	mov	r2, r5
   18030:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18034:	mov	r4, r0
   18038:	cmp	r4, r5
   1803c:	beq	19dc0 <main@@Base+0x6ae8>
   18040:	ldrb	r0, [r4]
   18044:	cmp	r0, #44	; 0x2c
   18048:	bne	19dc8 <main@@Base+0x6af0>
   1804c:	add	r1, r4, #1
   18050:	sub	r0, r5, r1
   18054:	cmp	r0, #2
   18058:	blt	18080 <main@@Base+0x4da8>
   1805c:	ldrb	r0, [r1]
   18060:	cmp	r0, #32
   18064:	bls	18070 <main@@Base+0x4d98>
   18068:	mov	r4, r1
   1806c:	b	18090 <main@@Base+0x4db8>
   18070:	bne	18080 <main@@Base+0x4da8>
   18074:	ldrb	r0, [r4, #2]!
   18078:	cmp	r0, #32
   1807c:	bhi	18090 <main@@Base+0x4db8>
   18080:	mov	r0, r8
   18084:	mov	r2, r5
   18088:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1808c:	mov	r4, r0
   18090:	cmp	r4, r5
   18094:	beq	19dec <main@@Base+0x6b14>
   18098:	ldrb	r0, [r4]
   1809c:	cmp	r0, #93	; 0x5d
   180a0:	beq	17e68 <main@@Base+0x4b90>
   180a4:	mov	r0, #0
   180a8:	mov	r1, #1
   180ac:	strb	r0, [fp, #-60]	; 0xffffffc4
   180b0:	ldr	r0, [r8]
   180b4:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   180b8:	mov	r7, r0
   180bc:	cmp	r0, #0
   180c0:	bne	17ec0 <main@@Base+0x4be8>
   180c4:	b	13390 <main@@Base+0xb8>
   180c8:	mov	r0, #0
   180cc:	add	r1, r4, #5
   180d0:	b	17fb0 <main@@Base+0x4cd8>
   180d4:	mov	r6, r0
   180d8:	b	17fa4 <main@@Base+0x4ccc>
   180dc:	bne	180f0 <main@@Base+0x4e18>
   180e0:	mov	r4, r1
   180e4:	ldrb	r0, [r4, #1]!
   180e8:	cmp	r0, #32
   180ec:	bhi	18100 <main@@Base+0x4e28>
   180f0:	mov	r0, r8
   180f4:	mov	r2, r5
   180f8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   180fc:	mov	r4, r0
   18100:	cmp	r4, r5
   18104:	beq	18140 <main@@Base+0x4e68>
   18108:	ldrb	r0, [r4]
   1810c:	cmp	r0, #58	; 0x3a
   18110:	bne	18140 <main@@Base+0x4e68>
   18114:	add	r1, r4, #1
   18118:	sub	r0, r5, r1
   1811c:	cmp	r0, #2
   18120:	blt	19830 <main@@Base+0x6558>
   18124:	ldrb	r0, [r1]
   18128:	cmp	r0, #32
   1812c:	bls	19818 <main@@Base+0x6540>
   18130:	ldr	r5, [sp, #44]	; 0x2c
   18134:	ldr	r8, [sp, #36]	; 0x24
   18138:	mov	r4, r1
   1813c:	b	19840 <main@@Base+0x6568>
   18140:	mov	r0, r8
   18144:	mov	r1, r4
   18148:	mov	r2, r5
   1814c:	mov	r3, #4
   18150:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18154:	b	1983c <main@@Base+0x6564>
   18158:	bne	1816c <main@@Base+0x4e94>
   1815c:	mov	r4, r1
   18160:	ldrb	r0, [r4, #1]!
   18164:	cmp	r0, #32
   18168:	bhi	1817c <main@@Base+0x4ea4>
   1816c:	mov	r0, r8
   18170:	mov	r2, r5
   18174:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18178:	mov	r4, r0
   1817c:	cmp	r4, r5
   18180:	beq	181c0 <main@@Base+0x4ee8>
   18184:	ldrb	r0, [r4]
   18188:	cmp	r0, #58	; 0x3a
   1818c:	bne	181c0 <main@@Base+0x4ee8>
   18190:	add	r1, r4, #1
   18194:	sub	r0, r5, r1
   18198:	cmp	r0, #2
   1819c:	blt	198d8 <main@@Base+0x6600>
   181a0:	ldrb	r0, [r1]
   181a4:	cmp	r0, #32
   181a8:	bls	198bc <main@@Base+0x65e4>
   181ac:	ldr	r5, [sp, #44]	; 0x2c
   181b0:	ldr	r8, [sp, #36]	; 0x24
   181b4:	ldr	sl, [sp, #40]	; 0x28
   181b8:	mov	r4, r1
   181bc:	b	198e8 <main@@Base+0x6610>
   181c0:	mov	r0, r8
   181c4:	mov	r1, r4
   181c8:	mov	r2, r5
   181cc:	mov	r3, #4
   181d0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   181d4:	b	198e4 <main@@Base+0x660c>
   181d8:	bne	181e8 <main@@Base+0x4f10>
   181dc:	ldrb	r0, [r4, #2]!
   181e0:	cmp	r0, #32
   181e4:	bhi	181f8 <main@@Base+0x4f20>
   181e8:	mov	r0, r8
   181ec:	mov	r2, r5
   181f0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   181f4:	mov	r4, r0
   181f8:	cmp	r7, r4
   181fc:	beq	1a634 <main@@Base+0x735c>
   18200:	mov	r0, #0
   18204:	mov	r1, #3
   18208:	str	r0, [sp, #52]	; 0x34
   1820c:	ldr	r0, [r8]
   18210:	bl	2a60c <flatcc_builder_start_table@@Base>
   18214:	cmp	r0, #0
   18218:	bne	18280 <main@@Base+0x4fa8>
   1821c:	cmp	r4, r5
   18220:	beq	18258 <main@@Base+0x4f80>
   18224:	ldrb	r0, [r4]
   18228:	cmp	r0, #123	; 0x7b
   1822c:	bne	18258 <main@@Base+0x4f80>
   18230:	add	r1, r4, #1
   18234:	sub	r0, r5, r1
   18238:	cmp	r0, #2
   1823c:	blt	19e98 <main@@Base+0x6bc0>
   18240:	ldrb	r0, [r1]
   18244:	cmp	r0, #32
   18248:	bls	19e80 <main@@Base+0x6ba8>
   1824c:	ldr	r5, [sp, #44]	; 0x2c
   18250:	mov	r4, r1
   18254:	b	19ea8 <main@@Base+0x6bd0>
   18258:	mov	r0, r8
   1825c:	mov	r1, r4
   18260:	mov	r2, r5
   18264:	mov	r3, #21
   18268:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1826c:	mov	r4, r0
   18270:	ldr	r0, [sp, #28]
   18274:	ldr	r0, [r0]
   18278:	cmp	r0, #0
   1827c:	beq	182b0 <main@@Base+0x4fd8>
   18280:	mov	r0, r8
   18284:	mov	r1, r4
   18288:	mov	r2, r5
   1828c:	mov	r3, #33	; 0x21
   18290:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18294:	mov	r4, r0
   18298:	ldr	r0, [sp, #52]	; 0x34
   1829c:	cmp	r0, #0
   182a0:	beq	13390 <main@@Base+0xb8>
   182a4:	ldr	r0, [r8]
   182a8:	mov	r1, #35	; 0x23
   182ac:	b	15ae4 <main@@Base+0x280c>
   182b0:	ldr	r0, [r8]
   182b4:	bl	2af9c <flatcc_builder_end_table@@Base>
   182b8:	cmp	r0, #0
   182bc:	str	r0, [sp, #52]	; 0x34
   182c0:	bne	182a4 <main@@Base+0x4fcc>
   182c4:	b	18280 <main@@Base+0x4fa8>
   182c8:	mov	r0, r8
   182cc:	mov	r1, r2
   182d0:	mov	r2, r5
   182d4:	mov	r3, #10
   182d8:	b	16b44 <main@@Base+0x386c>
   182dc:	bne	182ec <main@@Base+0x5014>
   182e0:	ldrb	r0, [r2, #2]!
   182e4:	cmp	r0, #32
   182e8:	bhi	182fc <main@@Base+0x5024>
   182ec:	mov	r0, r8
   182f0:	mov	r2, r5
   182f4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   182f8:	mov	r2, r0
   182fc:	cmp	r4, r2
   18300:	beq	1b1d4 <main@@Base+0x7efc>
   18304:	ldr	r0, [sp, #48]	; 0x30
   18308:	mov	r1, #8
   1830c:	mov	r3, #0
   18310:	str	r1, [sp]
   18314:	mov	r1, r2
   18318:	mov	r2, r5
   1831c:	str	r0, [sp, #4]
   18320:	movw	r0, #16580	; 0x40c4
   18324:	movt	r0, #4
   18328:	str	r0, [sp, #8]
   1832c:	movw	r0, #61584	; 0xf090
   18330:	movt	r0, #1
   18334:	str	r0, [sp, #12]
   18338:	mov	r0, r8
   1833c:	bl	2fadc <flatcc_json_parser_union_type@@Base>
   18340:	b	1b1e4 <main@@Base+0x7f0c>
   18344:	bne	18354 <main@@Base+0x507c>
   18348:	ldrb	r0, [r4, #2]!
   1834c:	cmp	r0, #32
   18350:	bhi	18364 <main@@Base+0x508c>
   18354:	mov	r0, r8
   18358:	mov	r2, r5
   1835c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18360:	mov	r4, r0
   18364:	cmp	r7, r4
   18368:	beq	1a634 <main@@Base+0x735c>
   1836c:	ldr	r0, [r8]
   18370:	bl	2a2cc <flatcc_builder_start_offset_vector@@Base>
   18374:	cmp	r0, #0
   18378:	bne	13390 <main@@Base+0xb8>
   1837c:	cmp	r4, r5
   18380:	beq	183b4 <main@@Base+0x50dc>
   18384:	ldrb	r0, [r4]
   18388:	cmp	r0, #91	; 0x5b
   1838c:	bne	183b4 <main@@Base+0x50dc>
   18390:	add	r1, r4, #1
   18394:	sub	r0, r5, r1
   18398:	cmp	r0, #2
   1839c:	blt	18be8 <main@@Base+0x5910>
   183a0:	ldrb	r0, [r1]
   183a4:	cmp	r0, #32
   183a8:	bls	18bd8 <main@@Base+0x5900>
   183ac:	mov	r4, r1
   183b0:	b	18bf8 <main@@Base+0x5920>
   183b4:	mov	r0, r8
   183b8:	mov	r1, r4
   183bc:	mov	r2, r5
   183c0:	mov	r3, #22
   183c4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   183c8:	mov	r4, r0
   183cc:	ldr	r0, [r8]
   183d0:	bl	2a398 <flatcc_builder_end_offset_vector@@Base>
   183d4:	cmp	r0, #0
   183d8:	str	r0, [sp, #52]	; 0x34
   183dc:	beq	13390 <main@@Base+0xb8>
   183e0:	ldr	r0, [r8]
   183e4:	mov	r1, #28
   183e8:	b	15ae4 <main@@Base+0x280c>
   183ec:	bne	183fc <main@@Base+0x5124>
   183f0:	ldrb	r0, [r7, #2]!
   183f4:	cmp	r0, #32
   183f8:	bhi	1840c <main@@Base+0x5134>
   183fc:	mov	r0, r8
   18400:	mov	r2, r5
   18404:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18408:	mov	r7, r0
   1840c:	cmp	sl, r7
   18410:	beq	16888 <main@@Base+0x35b0>
   18414:	ldr	r0, [r8]
   18418:	mov	r1, #8
   1841c:	mov	r2, #4
   18420:	mvn	r3, #-536870912	; 0xe0000000
   18424:	bl	2a240 <flatcc_builder_start_vector@@Base>
   18428:	cmp	r0, #0
   1842c:	bne	1cec4 <main@@Base+0x9bec>
   18430:	ldr	sl, [sp, #40]	; 0x28
   18434:	cmp	r7, r5
   18438:	beq	1846c <main@@Base+0x5194>
   1843c:	ldrb	r0, [r7]
   18440:	cmp	r0, #91	; 0x5b
   18444:	bne	1846c <main@@Base+0x5194>
   18448:	add	r1, r7, #1
   1844c:	sub	r0, r5, r1
   18450:	cmp	r0, #2
   18454:	blt	18d58 <main@@Base+0x5a80>
   18458:	ldrb	r0, [r1]
   1845c:	cmp	r0, #32
   18460:	bls	18d48 <main@@Base+0x5a70>
   18464:	mov	r7, r1
   18468:	b	18d68 <main@@Base+0x5a90>
   1846c:	mov	r0, r8
   18470:	mov	r1, r7
   18474:	mov	r2, r5
   18478:	mov	r3, #22
   1847c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18480:	mov	r7, r0
   18484:	ldr	r0, [r8]
   18488:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   1848c:	cmp	r0, #0
   18490:	str	r0, [sp, #52]	; 0x34
   18494:	beq	1cec4 <main@@Base+0x9bec>
   18498:	ldr	r0, [r8]
   1849c:	mov	r1, #29
   184a0:	b	1632c <main@@Base+0x3054>
   184a4:	ldr	sl, [sp, #40]	; 0x28
   184a8:	mov	r6, r0
   184ac:	str	r6, [fp, #-60]	; 0xffffffc4
   184b0:	cmp	r7, r4
   184b4:	bne	184ec <main@@Base+0x5214>
   184b8:	movw	r3, #16656	; 0x4110
   184bc:	sub	r0, fp, #60	; 0x3c
   184c0:	mov	r1, r7
   184c4:	mov	r2, r5
   184c8:	str	r0, [sp]
   184cc:	mov	r0, r8
   184d0:	movt	r3, #4
   184d4:	bl	228d8 <main@@Base+0xf600>
   184d8:	mov	r4, r0
   184dc:	cmp	r0, r7
   184e0:	cmpne	r4, r5
   184e4:	beq	1ced8 <main@@Base+0x9c00>
   184e8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   184ec:	cmp	r6, #0
   184f0:	bne	18500 <main@@Base+0x5228>
   184f4:	ldrb	r0, [r8, #8]
   184f8:	tst	r0, #2
   184fc:	beq	1b1e8 <main@@Base+0x7f10>
   18500:	ldr	r0, [r8]
   18504:	mov	r1, #16
   18508:	b	1a704 <main@@Base+0x742c>
   1850c:	bne	1851c <main@@Base+0x5244>
   18510:	ldrb	r0, [r7, #2]!
   18514:	cmp	r0, #32
   18518:	bhi	1852c <main@@Base+0x5254>
   1851c:	mov	r0, r8
   18520:	mov	r2, r5
   18524:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18528:	mov	r7, r0
   1852c:	ldr	sl, [sp, #40]	; 0x28
   18530:	cmp	r9, r7
   18534:	beq	162e8 <main@@Base+0x3010>
   18538:	mov	r6, #0
   1853c:	cmp	r7, r5
   18540:	str	r6, [fp, #-52]	; 0xffffffcc
   18544:	str	r6, [fp, #-56]	; 0xffffffc8
   18548:	strh	r6, [fp, #-60]	; 0xffffffc4
   1854c:	str	r6, [sp, #56]	; 0x38
   18550:	beq	185b4 <main@@Base+0x52dc>
   18554:	sub	r0, fp, #56	; 0x38
   18558:	mov	r1, r7
   1855c:	mov	r2, r5
   18560:	add	r3, sp, #56	; 0x38
   18564:	str	r0, [sp]
   18568:	mov	r0, r8
   1856c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   18570:	cmp	r0, r7
   18574:	beq	185bc <main@@Base+0x52e4>
   18578:	ldr	r2, [sp, #56]	; 0x38
   1857c:	mov	r4, r0
   18580:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18584:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18588:	cmp	r2, #0
   1858c:	beq	185c4 <main@@Base+0x52ec>
   18590:	movw	r2, #32769	; 0x8001
   18594:	subs	r2, r0, r2
   18598:	sbcs	r1, r1, #0
   1859c:	bcc	185ec <main@@Base+0x5314>
   185a0:	mov	r0, r8
   185a4:	mov	r1, r4
   185a8:	mov	r2, r5
   185ac:	mov	r3, #8
   185b0:	b	185e0 <main@@Base+0x5308>
   185b4:	mov	r4, r5
   185b8:	b	185fc <main@@Base+0x5324>
   185bc:	mov	r4, r7
   185c0:	b	185fc <main@@Base+0x5324>
   185c4:	subs	r2, r0, #32768	; 0x8000
   185c8:	sbcs	r1, r1, #0
   185cc:	bcc	185f4 <main@@Base+0x531c>
   185d0:	mov	r0, r8
   185d4:	mov	r1, r4
   185d8:	mov	r2, r5
   185dc:	mov	r3, #7
   185e0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   185e4:	mov	r4, r0
   185e8:	b	185fc <main@@Base+0x5324>
   185ec:	rsb	r6, r0, #0
   185f0:	b	185f8 <main@@Base+0x5320>
   185f4:	mov	r6, r0
   185f8:	strh	r6, [fp, #-60]	; 0xffffffc4
   185fc:	cmp	r7, r4
   18600:	bne	18638 <main@@Base+0x5360>
   18604:	movw	r3, #16568	; 0x40b8
   18608:	sub	r0, fp, #60	; 0x3c
   1860c:	mov	r1, r7
   18610:	mov	r2, r5
   18614:	str	r0, [sp]
   18618:	mov	r0, r8
   1861c:	movt	r3, #4
   18620:	bl	1e738 <main@@Base+0xb460>
   18624:	mov	r4, r0
   18628:	cmp	r0, r7
   1862c:	cmpne	r4, r5
   18630:	beq	1ced8 <main@@Base+0x9c00>
   18634:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   18638:	uxth	r0, r6
   1863c:	cmp	r0, #150	; 0x96
   18640:	ldrbeq	r0, [r8, #8]
   18644:	tsteq	r0, #2
   18648:	beq	1b1e8 <main@@Base+0x7f10>
   1864c:	ldr	r0, [r8]
   18650:	mov	r1, #1
   18654:	mov	r2, #2
   18658:	mov	r3, #2
   1865c:	bl	2b8dc <flatcc_builder_table_add@@Base>
   18660:	cmp	r0, #0
   18664:	beq	1ced8 <main@@Base+0x9c00>
   18668:	strh	r6, [r0]
   1866c:	b	1b1e8 <main@@Base+0x7f10>
   18670:	bne	18680 <main@@Base+0x53a8>
   18674:	ldrb	r0, [r7, #2]!
   18678:	cmp	r0, #32
   1867c:	bhi	18690 <main@@Base+0x53b8>
   18680:	mov	r0, r8
   18684:	mov	r2, r5
   18688:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1868c:	mov	r7, r0
   18690:	ldr	sl, [sp, #40]	; 0x28
   18694:	cmp	r9, r7
   18698:	beq	162e8 <main@@Base+0x3010>
   1869c:	mov	r0, #0
   186a0:	mov	r1, r7
   186a4:	mov	r2, r5
   186a8:	sub	r3, fp, #56	; 0x38
   186ac:	str	r0, [fp, #-56]	; 0xffffffc8
   186b0:	mov	r0, r8
   186b4:	bl	2f068 <flatcc_json_parser_float@@Base>
   186b8:	mov	r4, r0
   186bc:	cmp	r7, r0
   186c0:	bne	186f4 <main@@Base+0x541c>
   186c4:	movw	r3, #16632	; 0x40f8
   186c8:	sub	r0, fp, #56	; 0x38
   186cc:	mov	r1, r7
   186d0:	mov	r2, r5
   186d4:	str	r0, [sp]
   186d8:	mov	r0, r8
   186dc:	movt	r3, #4
   186e0:	bl	2270c <main@@Base+0xf434>
   186e4:	mov	r4, r0
   186e8:	cmp	r0, r7
   186ec:	cmpne	r4, r5
   186f0:	beq	13390 <main@@Base+0xb8>
   186f4:	vldr	s0, [fp, #-56]	; 0xffffffc8
   186f8:	vcmp.f32	s0, s18
   186fc:	vmrs	APSR_nzcv, fpscr
   18700:	bne	18710 <main@@Base+0x5438>
   18704:	ldrb	r0, [r8, #8]
   18708:	tst	r0, #2
   1870c:	beq	1b1e8 <main@@Base+0x7f10>
   18710:	ldr	r0, [r8]
   18714:	mov	r1, #25
   18718:	b	15214 <main@@Base+0x1f3c>
   1871c:	bne	1872c <main@@Base+0x5454>
   18720:	ldrb	r0, [r7, #2]!
   18724:	cmp	r0, #32
   18728:	bhi	1873c <main@@Base+0x5464>
   1872c:	mov	r0, r8
   18730:	mov	r2, r5
   18734:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18738:	mov	r7, r0
   1873c:	cmp	sl, r7
   18740:	beq	187bc <main@@Base+0x54e4>
   18744:	mov	r6, #0
   18748:	cmp	r7, r5
   1874c:	str	r6, [fp, #-52]	; 0xffffffcc
   18750:	str	r6, [fp, #-56]	; 0xffffffc8
   18754:	str	r6, [sp, #60]	; 0x3c
   18758:	str	r6, [sp, #56]	; 0x38
   1875c:	str	r6, [fp, #-60]	; 0xffffffc4
   18760:	beq	18834 <main@@Base+0x555c>
   18764:	sub	r0, fp, #56	; 0x38
   18768:	mov	r1, r7
   1876c:	mov	r2, r5
   18770:	sub	r3, fp, #60	; 0x3c
   18774:	str	r0, [sp]
   18778:	mov	r0, r8
   1877c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   18780:	cmp	r0, r7
   18784:	beq	1886c <main@@Base+0x5594>
   18788:	sub	r9, fp, #60	; 0x3c
   1878c:	mov	r4, r0
   18790:	ldm	r9, {r0, r6, r9}
   18794:	cmp	r0, #0
   18798:	beq	1887c <main@@Base+0x55a4>
   1879c:	subs	r0, r6, #1
   187a0:	sbcs	r0, r9, #-2147483648	; 0x80000000
   187a4:	bcc	18928 <main@@Base+0x5650>
   187a8:	mov	r0, r8
   187ac:	mov	r1, r4
   187b0:	mov	r2, r5
   187b4:	mov	r3, #8
   187b8:	b	18894 <main@@Base+0x55bc>
   187bc:	add	r4, r9, #16
   187c0:	mov	r1, #8
   187c4:	mov	r2, #-268435456	; 0xf0000000
   187c8:	sub	r0, r5, r4
   187cc:	cmp	r0, #8
   187d0:	movcc	r1, r0
   187d4:	add	r1, r2, r1, lsl #28
   187d8:	asr	r1, r1, #28
   187dc:	cmp	r1, #0
   187e0:	blt	1928c <main@@Base+0x5fb4>
   187e4:	ldrb	r1, [r4]
   187e8:	cmp	r1, #97	; 0x61
   187ec:	bne	1928c <main@@Base+0x5fb4>
   187f0:	ldr	sl, [sp, #40]	; 0x28
   187f4:	cmp	r0, #2
   187f8:	blt	1b1d4 <main@@Base+0x7efc>
   187fc:	ldr	r2, [sp, #32]
   18800:	mov	r1, r9
   18804:	ldrb	r0, [r1, #17]!
   18808:	ldr	r2, [r2]
   1880c:	cmp	r2, #0
   18810:	beq	18840 <main@@Base+0x5568>
   18814:	cmp	r0, #33	; 0x21
   18818:	bcc	18824 <main@@Base+0x554c>
   1881c:	cmp	r0, #58	; 0x3a
   18820:	bne	1b1d4 <main@@Base+0x7efc>
   18824:	ldr	r0, [sp, #32]
   18828:	mov	r2, #0
   1882c:	str	r2, [r0]
   18830:	b	1884c <main@@Base+0x5574>
   18834:	mov	r9, #0
   18838:	mov	r4, r5
   1883c:	b	18938 <main@@Base+0x5660>
   18840:	cmp	r0, #34	; 0x22
   18844:	bne	1b1d4 <main@@Base+0x7efc>
   18848:	add	r1, r9, #18
   1884c:	sub	r0, r5, r1
   18850:	cmp	r0, #2
   18854:	blt	18abc <main@@Base+0x57e4>
   18858:	ldrb	r0, [r1]
   1885c:	cmp	r0, #32
   18860:	bls	18aa8 <main@@Base+0x57d0>
   18864:	mov	r7, r1
   18868:	b	18acc <main@@Base+0x57f4>
   1886c:	mov	r6, #0
   18870:	mov	r9, #0
   18874:	mov	r4, r7
   18878:	b	18938 <main@@Base+0x5660>
   1887c:	cmn	r9, #1
   18880:	bgt	18930 <main@@Base+0x5658>
   18884:	mov	r0, r8
   18888:	mov	r1, r4
   1888c:	mov	r2, r5
   18890:	mov	r3, #7
   18894:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18898:	mov	r4, r0
   1889c:	mov	r6, #0
   188a0:	mov	r9, #0
   188a4:	b	18938 <main@@Base+0x5660>
   188a8:	bne	188bc <main@@Base+0x55e4>
   188ac:	mov	r4, r1
   188b0:	ldrb	r0, [r4, #1]!
   188b4:	cmp	r0, #32
   188b8:	bhi	188cc <main@@Base+0x55f4>
   188bc:	mov	r0, r8
   188c0:	mov	r2, r5
   188c4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   188c8:	mov	r4, r0
   188cc:	cmp	r4, r5
   188d0:	beq	18910 <main@@Base+0x5638>
   188d4:	ldrb	r0, [r4]
   188d8:	cmp	r0, #58	; 0x3a
   188dc:	bne	18910 <main@@Base+0x5638>
   188e0:	add	r1, r4, #1
   188e4:	sub	r0, r5, r1
   188e8:	cmp	r0, #2
   188ec:	blt	1a5c8 <main@@Base+0x72f0>
   188f0:	ldrb	r0, [r1]
   188f4:	cmp	r0, #32
   188f8:	bls	1a5ac <main@@Base+0x72d4>
   188fc:	ldr	r5, [sp, #44]	; 0x2c
   18900:	ldr	r8, [sp, #36]	; 0x24
   18904:	ldr	sl, [sp, #40]	; 0x28
   18908:	mov	r4, r1
   1890c:	b	1a5d8 <main@@Base+0x7300>
   18910:	mov	r0, r8
   18914:	mov	r1, r4
   18918:	mov	r2, r5
   1891c:	mov	r3, #4
   18920:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18924:	b	1a5d4 <main@@Base+0x72fc>
   18928:	rsbs	r6, r6, #0
   1892c:	rsc	r9, r9, #0
   18930:	str	r6, [sp, #56]	; 0x38
   18934:	str	r9, [sp, #60]	; 0x3c
   18938:	ldr	sl, [sp, #40]	; 0x28
   1893c:	cmp	r7, r4
   18940:	bne	1897c <main@@Base+0x56a4>
   18944:	movw	r3, #16680	; 0x4128
   18948:	add	r0, sp, #56	; 0x38
   1894c:	mov	r1, r7
   18950:	mov	r2, r5
   18954:	str	r0, [sp]
   18958:	mov	r0, r8
   1895c:	movt	r3, #4
   18960:	bl	22b10 <main@@Base+0xf838>
   18964:	mov	r4, r0
   18968:	cmp	r0, r7
   1896c:	cmpne	r4, r5
   18970:	beq	1ced8 <main@@Base+0x9c00>
   18974:	ldr	r6, [sp, #56]	; 0x38
   18978:	ldr	r9, [sp, #60]	; 0x3c
   1897c:	orrs	r0, r6, r9
   18980:	bne	18990 <main@@Base+0x56b8>
   18984:	ldrb	r0, [r8, #8]
   18988:	tst	r0, #2
   1898c:	beq	1b1e8 <main@@Base+0x7f10>
   18990:	ldr	r0, [r8]
   18994:	mov	r1, #18
   18998:	b	19360 <main@@Base+0x6088>
   1899c:	bne	189ac <main@@Base+0x56d4>
   189a0:	ldrb	r0, [r4, #2]!
   189a4:	cmp	r0, #32
   189a8:	bhi	189bc <main@@Base+0x56e4>
   189ac:	ldr	r0, [sp, #36]	; 0x24
   189b0:	mov	r2, r5
   189b4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   189b8:	mov	r4, r0
   189bc:	cmp	r8, r4
   189c0:	beq	18a20 <main@@Base+0x5748>
   189c4:	ldr	r8, [sp, #36]	; 0x24
   189c8:	mov	r0, #0
   189cc:	mov	r1, #0
   189d0:	str	r0, [sp, #52]	; 0x34
   189d4:	ldr	r0, [r8]
   189d8:	bl	2a60c <flatcc_builder_start_table@@Base>
   189dc:	cmp	r0, #0
   189e0:	bne	18a5c <main@@Base+0x5784>
   189e4:	cmp	r4, r5
   189e8:	beq	18a30 <main@@Base+0x5758>
   189ec:	ldrb	r0, [r4]
   189f0:	cmp	r0, #123	; 0x7b
   189f4:	bne	18a30 <main@@Base+0x5758>
   189f8:	add	r1, r4, #1
   189fc:	sub	r0, r5, r1
   18a00:	cmp	r0, #2
   18a04:	blt	1abe8 <main@@Base+0x7910>
   18a08:	ldrb	r0, [r1]
   18a0c:	cmp	r0, #32
   18a10:	bls	1abd4 <main@@Base+0x78fc>
   18a14:	ldr	r5, [sp, #44]	; 0x2c
   18a18:	mov	r4, r1
   18a1c:	b	1abf8 <main@@Base+0x7920>
   18a20:	ldr	r0, [sp, #36]	; 0x24
   18a24:	mov	r1, r8
   18a28:	mov	r8, r0
   18a2c:	b	1b1dc <main@@Base+0x7f04>
   18a30:	mov	r0, r8
   18a34:	mov	r1, r4
   18a38:	mov	r2, r5
   18a3c:	mov	r3, #21
   18a40:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18a44:	mov	r4, r0
   18a48:	ldr	r0, [sp, #28]
   18a4c:	ldr	r0, [r0]
   18a50:	cmp	r0, #0
   18a54:	beq	18a8c <main@@Base+0x57b4>
   18a58:	ldr	sl, [sp, #40]	; 0x28
   18a5c:	mov	r0, r8
   18a60:	mov	r1, r4
   18a64:	mov	r2, r5
   18a68:	mov	r3, #33	; 0x21
   18a6c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18a70:	mov	r4, r0
   18a74:	ldr	r0, [sp, #52]	; 0x34
   18a78:	cmp	r0, #0
   18a7c:	beq	13390 <main@@Base+0xb8>
   18a80:	ldr	r0, [r8]
   18a84:	mov	r1, #34	; 0x22
   18a88:	b	15ae4 <main@@Base+0x280c>
   18a8c:	ldr	r0, [r8]
   18a90:	bl	2af9c <flatcc_builder_end_table@@Base>
   18a94:	ldr	sl, [sp, #40]	; 0x28
   18a98:	cmp	r0, #0
   18a9c:	str	r0, [sp, #52]	; 0x34
   18aa0:	bne	18a80 <main@@Base+0x57a8>
   18aa4:	b	18a5c <main@@Base+0x5784>
   18aa8:	bne	18abc <main@@Base+0x57e4>
   18aac:	mov	r7, r1
   18ab0:	ldrb	r0, [r7, #1]!
   18ab4:	cmp	r0, #32
   18ab8:	bhi	18acc <main@@Base+0x57f4>
   18abc:	mov	r0, r8
   18ac0:	mov	r2, r5
   18ac4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18ac8:	mov	r7, r0
   18acc:	cmp	r7, r5
   18ad0:	beq	18b10 <main@@Base+0x5838>
   18ad4:	ldrb	r0, [r7]
   18ad8:	cmp	r0, #58	; 0x3a
   18adc:	bne	18b10 <main@@Base+0x5838>
   18ae0:	add	r1, r7, #1
   18ae4:	sub	r0, r5, r1
   18ae8:	cmp	r0, #2
   18aec:	blt	1aa08 <main@@Base+0x7730>
   18af0:	ldrb	r0, [r1]
   18af4:	cmp	r0, #32
   18af8:	bls	1a9ec <main@@Base+0x7714>
   18afc:	ldr	r5, [sp, #44]	; 0x2c
   18b00:	ldr	r8, [sp, #36]	; 0x24
   18b04:	ldr	sl, [sp, #40]	; 0x28
   18b08:	mov	r7, r1
   18b0c:	b	1aa18 <main@@Base+0x7740>
   18b10:	mov	r0, r8
   18b14:	mov	r1, r7
   18b18:	mov	r2, r5
   18b1c:	mov	r3, #4
   18b20:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18b24:	b	1aa14 <main@@Base+0x773c>
   18b28:	bne	18b38 <main@@Base+0x5860>
   18b2c:	ldrb	r0, [r4, #2]!
   18b30:	cmp	r0, #32
   18b34:	bhi	18b48 <main@@Base+0x5870>
   18b38:	mov	r0, r8
   18b3c:	mov	r2, r5
   18b40:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18b44:	mov	r4, r0
   18b48:	cmp	r7, r4
   18b4c:	beq	1a634 <main@@Base+0x735c>
   18b50:	ldr	r0, [r8]
   18b54:	bl	2a2cc <flatcc_builder_start_offset_vector@@Base>
   18b58:	cmp	r0, #0
   18b5c:	bne	13390 <main@@Base+0xb8>
   18b60:	cmp	r4, r5
   18b64:	beq	18ba0 <main@@Base+0x58c8>
   18b68:	ldrb	r0, [r4]
   18b6c:	cmp	r0, #91	; 0x5b
   18b70:	bne	18ba0 <main@@Base+0x58c8>
   18b74:	add	r1, r4, #1
   18b78:	sub	r0, r5, r1
   18b7c:	cmp	r0, #2
   18b80:	blt	196a4 <main@@Base+0x63cc>
   18b84:	ldrb	r0, [r1]
   18b88:	cmp	r0, #32
   18b8c:	bls	1968c <main@@Base+0x63b4>
   18b90:	ldr	r5, [sp, #44]	; 0x2c
   18b94:	ldr	r8, [sp, #36]	; 0x24
   18b98:	mov	r4, r1
   18b9c:	b	196b4 <main@@Base+0x63dc>
   18ba0:	mov	r0, r8
   18ba4:	mov	r1, r4
   18ba8:	mov	r2, r5
   18bac:	mov	r3, #22
   18bb0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18bb4:	mov	r4, r0
   18bb8:	ldr	r0, [r8]
   18bbc:	bl	2a398 <flatcc_builder_end_offset_vector@@Base>
   18bc0:	cmp	r0, #0
   18bc4:	str	r0, [sp, #52]	; 0x34
   18bc8:	beq	13390 <main@@Base+0xb8>
   18bcc:	ldr	r0, [r8]
   18bd0:	mov	r1, #11
   18bd4:	b	15ae4 <main@@Base+0x280c>
   18bd8:	bne	18be8 <main@@Base+0x5910>
   18bdc:	ldrb	r0, [r4, #2]!
   18be0:	cmp	r0, #32
   18be4:	bhi	18bf8 <main@@Base+0x5920>
   18be8:	mov	r0, r8
   18bec:	mov	r2, r5
   18bf0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18bf4:	mov	r4, r0
   18bf8:	cmp	r4, r5
   18bfc:	mov	r2, r5
   18c00:	beq	18c50 <main@@Base+0x5978>
   18c04:	ldrb	r0, [r4]
   18c08:	cmp	r0, #93	; 0x5d
   18c0c:	bne	18c4c <main@@Base+0x5974>
   18c10:	add	r1, r4, #1
   18c14:	sub	r0, r5, r1
   18c18:	cmp	r0, #2
   18c1c:	blt	1c9ac <main@@Base+0x96d4>
   18c20:	ldrb	r0, [r1]
   18c24:	cmp	r0, #32
   18c28:	bhi	19e60 <main@@Base+0x6b88>
   18c2c:	ldr	r5, [sp, #44]	; 0x2c
   18c30:	ldr	r8, [sp, #36]	; 0x24
   18c34:	ldr	sl, [sp, #40]	; 0x28
   18c38:	bne	1c9ac <main@@Base+0x96d4>
   18c3c:	ldrb	r0, [r4, #2]!
   18c40:	cmp	r0, #32
   18c44:	bhi	183cc <main@@Base+0x50f4>
   18c48:	b	1c9ac <main@@Base+0x96d4>
   18c4c:	mov	r2, r4
   18c50:	mov	r1, r2
   18c54:	mov	r0, r8
   18c58:	mov	r2, r5
   18c5c:	add	r3, sp, #52	; 0x34
   18c60:	bl	2f6d0 <flatcc_json_parser_build_string@@Base>
   18c64:	mov	r4, r0
   18c68:	ldr	r0, [sp, #52]	; 0x34
   18c6c:	cmp	r0, #0
   18c70:	beq	13390 <main@@Base+0xb8>
   18c74:	ldr	r0, [r8]
   18c78:	mov	r1, #1
   18c7c:	bl	29c88 <flatcc_builder_extend_offset_vector@@Base>
   18c80:	cmp	r0, #0
   18c84:	beq	13390 <main@@Base+0xb8>
   18c88:	ldr	r1, [sp, #52]	; 0x34
   18c8c:	str	r1, [r0]
   18c90:	sub	r0, r5, r4
   18c94:	cmp	r0, #2
   18c98:	blt	18cc4 <main@@Base+0x59ec>
   18c9c:	ldrb	r0, [r4]
   18ca0:	cmp	r0, #32
   18ca4:	bls	18cb0 <main@@Base+0x59d8>
   18ca8:	mov	r2, r4
   18cac:	b	18cd8 <main@@Base+0x5a00>
   18cb0:	bne	18cc4 <main@@Base+0x59ec>
   18cb4:	mov	r2, r4
   18cb8:	ldrb	r0, [r2, #1]!
   18cbc:	cmp	r0, #32
   18cc0:	bhi	18cd8 <main@@Base+0x5a00>
   18cc4:	mov	r0, r8
   18cc8:	mov	r1, r4
   18ccc:	mov	r2, r5
   18cd0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18cd4:	mov	r2, r0
   18cd8:	cmp	r2, r5
   18cdc:	beq	19de0 <main@@Base+0x6b08>
   18ce0:	ldrb	r0, [r2]
   18ce4:	cmp	r0, #44	; 0x2c
   18ce8:	bne	19e30 <main@@Base+0x6b58>
   18cec:	add	r1, r2, #1
   18cf0:	sub	r0, r5, r1
   18cf4:	cmp	r0, #2
   18cf8:	blt	18d20 <main@@Base+0x5a48>
   18cfc:	ldrb	r0, [r1]
   18d00:	cmp	r0, #32
   18d04:	bls	18d10 <main@@Base+0x5a38>
   18d08:	mov	r2, r1
   18d0c:	b	18d30 <main@@Base+0x5a58>
   18d10:	bne	18d20 <main@@Base+0x5a48>
   18d14:	ldrb	r0, [r2, #2]!
   18d18:	cmp	r0, #32
   18d1c:	bhi	18d30 <main@@Base+0x5a58>
   18d20:	mov	r0, r8
   18d24:	mov	r2, r5
   18d28:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18d2c:	mov	r2, r0
   18d30:	cmp	r2, r5
   18d34:	beq	19e74 <main@@Base+0x6b9c>
   18d38:	ldrb	r0, [r2]
   18d3c:	cmp	r0, #93	; 0x5d
   18d40:	bne	18c50 <main@@Base+0x5978>
   18d44:	b	19e40 <main@@Base+0x6b68>
   18d48:	bne	18d58 <main@@Base+0x5a80>
   18d4c:	ldrb	r0, [r7, #2]!
   18d50:	cmp	r0, #32
   18d54:	bhi	18d68 <main@@Base+0x5a90>
   18d58:	mov	r0, r8
   18d5c:	mov	r2, r5
   18d60:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18d64:	mov	r7, r0
   18d68:	cmp	r7, r5
   18d6c:	mov	r4, r5
   18d70:	beq	1bd58 <main@@Base+0x8a80>
   18d74:	ldrb	r0, [r7]
   18d78:	cmp	r0, #93	; 0x5d
   18d7c:	bne	18dbc <main@@Base+0x5ae4>
   18d80:	add	r1, r7, #1
   18d84:	sub	r0, r5, r1
   18d88:	cmp	r0, #2
   18d8c:	blt	1ca68 <main@@Base+0x9790>
   18d90:	ldrb	r0, [r1]
   18d94:	cmp	r0, #32
   18d98:	bhi	1c61c <main@@Base+0x9344>
   18d9c:	ldr	r5, [sp, #44]	; 0x2c
   18da0:	ldr	r8, [sp, #36]	; 0x24
   18da4:	ldr	sl, [sp, #40]	; 0x28
   18da8:	bne	1ca68 <main@@Base+0x9790>
   18dac:	ldrb	r0, [r7, #2]!
   18db0:	cmp	r0, #32
   18db4:	bhi	18484 <main@@Base+0x51ac>
   18db8:	b	1ca68 <main@@Base+0x9790>
   18dbc:	mov	r4, r7
   18dc0:	b	1bd58 <main@@Base+0x8a80>
   18dc4:	bne	18dd4 <main@@Base+0x5afc>
   18dc8:	ldrb	r0, [r4, #2]!
   18dcc:	cmp	r0, #32
   18dd0:	bhi	18de4 <main@@Base+0x5b0c>
   18dd4:	mov	r0, r8
   18dd8:	mov	r2, r5
   18ddc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18de0:	mov	r4, r0
   18de4:	cmp	r7, r4
   18de8:	beq	1a634 <main@@Base+0x735c>
   18dec:	mov	r0, #0
   18df0:	mov	r1, #3
   18df4:	str	r0, [sp, #52]	; 0x34
   18df8:	ldr	r0, [r8]
   18dfc:	bl	2a60c <flatcc_builder_start_table@@Base>
   18e00:	cmp	r0, #0
   18e04:	bne	18e74 <main@@Base+0x5b9c>
   18e08:	cmp	r4, r5
   18e0c:	beq	18e40 <main@@Base+0x5b68>
   18e10:	ldrb	r0, [r4]
   18e14:	cmp	r0, #123	; 0x7b
   18e18:	bne	18e40 <main@@Base+0x5b68>
   18e1c:	add	r1, r4, #1
   18e20:	sub	r0, r5, r1
   18e24:	cmp	r0, #2
   18e28:	blt	1b39c <main@@Base+0x80c4>
   18e2c:	ldrb	r0, [r1]
   18e30:	cmp	r0, #32
   18e34:	bls	1b38c <main@@Base+0x80b4>
   18e38:	mov	r4, r1
   18e3c:	b	1b3ac <main@@Base+0x80d4>
   18e40:	mov	r0, r8
   18e44:	mov	r1, r4
   18e48:	mov	r2, r5
   18e4c:	mov	r3, #21
   18e50:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18e54:	mov	r4, r0
   18e58:	ldr	r0, [sp, #28]
   18e5c:	ldr	r0, [r0]
   18e60:	cmp	r0, #0
   18e64:	beq	18ea4 <main@@Base+0x5bcc>
   18e68:	ldr	r5, [sp, #44]	; 0x2c
   18e6c:	ldr	r8, [sp, #36]	; 0x24
   18e70:	ldr	sl, [sp, #40]	; 0x28
   18e74:	mov	r0, r8
   18e78:	mov	r1, r4
   18e7c:	mov	r2, r5
   18e80:	mov	r3, #33	; 0x21
   18e84:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18e88:	mov	r4, r0
   18e8c:	ldr	r0, [sp, #52]	; 0x34
   18e90:	cmp	r0, #0
   18e94:	beq	13390 <main@@Base+0xb8>
   18e98:	ldr	r0, [r8]
   18e9c:	mov	r1, #14
   18ea0:	b	15ae4 <main@@Base+0x280c>
   18ea4:	ldr	r0, [sp, #36]	; 0x24
   18ea8:	ldr	r0, [r0]
   18eac:	bl	2af9c <flatcc_builder_end_table@@Base>
   18eb0:	cmp	r0, #0
   18eb4:	str	r0, [sp, #52]	; 0x34
   18eb8:	beq	18e68 <main@@Base+0x5b90>
   18ebc:	ldr	r5, [sp, #44]	; 0x2c
   18ec0:	ldr	r8, [sp, #36]	; 0x24
   18ec4:	ldr	sl, [sp, #40]	; 0x28
   18ec8:	b	18e98 <main@@Base+0x5bc0>
   18ecc:	bne	18edc <main@@Base+0x5c04>
   18ed0:	ldrb	r0, [r4, #2]!
   18ed4:	cmp	r0, #32
   18ed8:	bhi	18eec <main@@Base+0x5c14>
   18edc:	mov	r0, r8
   18ee0:	mov	r2, r5
   18ee4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18ee8:	mov	r4, r0
   18eec:	cmp	r7, r4
   18ef0:	beq	1a634 <main@@Base+0x735c>
   18ef4:	ldr	r0, [r8]
   18ef8:	mov	r1, #1
   18efc:	mov	r2, #1
   18f00:	mvn	r3, #0
   18f04:	bl	2a240 <flatcc_builder_start_vector@@Base>
   18f08:	cmp	r0, #0
   18f0c:	bne	13390 <main@@Base+0xb8>
   18f10:	cmp	r4, r5
   18f14:	beq	18f50 <main@@Base+0x5c78>
   18f18:	ldrb	r0, [r4]
   18f1c:	cmp	r0, #91	; 0x5b
   18f20:	bne	18f50 <main@@Base+0x5c78>
   18f24:	add	r1, r4, #1
   18f28:	sub	r0, r5, r1
   18f2c:	cmp	r0, #2
   18f30:	blt	199d0 <main@@Base+0x66f8>
   18f34:	ldrb	r0, [r1]
   18f38:	cmp	r0, #32
   18f3c:	bls	199b8 <main@@Base+0x66e0>
   18f40:	ldr	r5, [sp, #44]	; 0x2c
   18f44:	ldr	r8, [sp, #36]	; 0x24
   18f48:	mov	r4, r1
   18f4c:	b	199e0 <main@@Base+0x6708>
   18f50:	mov	r0, r8
   18f54:	mov	r1, r4
   18f58:	mov	r2, r5
   18f5c:	mov	r3, #22
   18f60:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   18f64:	mov	r4, r0
   18f68:	ldr	r0, [r8]
   18f6c:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   18f70:	cmp	r0, #0
   18f74:	str	r0, [sp, #52]	; 0x34
   18f78:	beq	13390 <main@@Base+0xb8>
   18f7c:	ldr	r0, [r8]
   18f80:	mov	r1, #5
   18f84:	b	15ae4 <main@@Base+0x280c>
   18f88:	ldr	r5, [sp, #44]	; 0x2c
   18f8c:	ldr	r8, [sp, #36]	; 0x24
   18f90:	bne	18fa0 <main@@Base+0x5cc8>
   18f94:	ldrb	r0, [r7, #2]!
   18f98:	cmp	r0, #32
   18f9c:	bhi	18fb0 <main@@Base+0x5cd8>
   18fa0:	mov	r0, r8
   18fa4:	mov	r2, r5
   18fa8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   18fac:	mov	r7, r0
   18fb0:	cmp	sl, r7
   18fb4:	beq	1901c <main@@Base+0x5d44>
   18fb8:	mov	r6, #0
   18fbc:	cmp	r7, r5
   18fc0:	str	r6, [fp, #-52]	; 0xffffffcc
   18fc4:	str	r6, [fp, #-56]	; 0xffffffc8
   18fc8:	str	r6, [fp, #-60]	; 0xffffffc4
   18fcc:	str	r6, [sp, #56]	; 0x38
   18fd0:	beq	19094 <main@@Base+0x5dbc>
   18fd4:	sub	r0, fp, #56	; 0x38
   18fd8:	mov	r1, r7
   18fdc:	mov	r2, r5
   18fe0:	add	r3, sp, #56	; 0x38
   18fe4:	str	r0, [sp]
   18fe8:	mov	r0, r8
   18fec:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   18ff0:	cmp	r0, r7
   18ff4:	beq	190d0 <main@@Base+0x5df8>
   18ff8:	mov	r4, r0
   18ffc:	ldr	r0, [sp, #56]	; 0x38
   19000:	cmp	r0, #0
   19004:	beq	190d8 <main@@Base+0x5e00>
   19008:	mov	r0, r8
   1900c:	mov	r1, r4
   19010:	mov	r2, r5
   19014:	mov	r3, #8
   19018:	b	190fc <main@@Base+0x5e24>
   1901c:	add	r4, r9, #16
   19020:	mov	r1, #8
   19024:	mov	r2, #-268435456	; 0xf0000000
   19028:	sub	r0, r5, r4
   1902c:	cmp	r0, #8
   19030:	movcc	r1, r0
   19034:	add	r1, r2, r1, lsl #28
   19038:	asr	r1, r1, #28
   1903c:	cmp	r1, #0
   19040:	blt	1928c <main@@Base+0x5fb4>
   19044:	ldrb	r1, [r4]
   19048:	cmp	r1, #97	; 0x61
   1904c:	bne	1928c <main@@Base+0x5fb4>
   19050:	ldr	sl, [sp, #40]	; 0x28
   19054:	cmp	r0, #2
   19058:	blt	1b1d4 <main@@Base+0x7efc>
   1905c:	ldr	r2, [sp, #32]
   19060:	mov	r1, r9
   19064:	ldrb	r0, [r1, #17]!
   19068:	ldr	r2, [r2]
   1906c:	cmp	r2, #0
   19070:	beq	1909c <main@@Base+0x5dc4>
   19074:	cmp	r0, #33	; 0x21
   19078:	bcc	19084 <main@@Base+0x5dac>
   1907c:	cmp	r0, #58	; 0x3a
   19080:	bne	1b1d4 <main@@Base+0x7efc>
   19084:	ldr	r0, [sp, #32]
   19088:	mov	r2, #0
   1908c:	str	r2, [r0]
   19090:	b	190a8 <main@@Base+0x5dd0>
   19094:	mov	r4, r5
   19098:	b	19104 <main@@Base+0x5e2c>
   1909c:	cmp	r0, #34	; 0x22
   190a0:	bne	1b1d4 <main@@Base+0x7efc>
   190a4:	add	r1, r9, #18
   190a8:	sub	r0, r5, r1
   190ac:	cmp	r0, #2
   190b0:	blt	1947c <main@@Base+0x61a4>
   190b4:	ldrb	r0, [r1]
   190b8:	cmp	r0, #32
   190bc:	bls	19460 <main@@Base+0x6188>
   190c0:	ldr	r5, [sp, #44]	; 0x2c
   190c4:	ldr	r8, [sp, #36]	; 0x24
   190c8:	mov	r7, r1
   190cc:	b	1948c <main@@Base+0x61b4>
   190d0:	mov	r4, r7
   190d4:	b	19104 <main@@Base+0x5e2c>
   190d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   190dc:	cmp	r0, #0
   190e0:	beq	19c20 <main@@Base+0x6948>
   190e4:	ldr	r8, [sp, #36]	; 0x24
   190e8:	ldr	r5, [sp, #44]	; 0x2c
   190ec:	mov	r1, r4
   190f0:	mov	r3, #7
   190f4:	mov	r0, r8
   190f8:	mov	r2, r5
   190fc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   19100:	mov	r4, r0
   19104:	ldr	sl, [sp, #40]	; 0x28
   19108:	cmp	r7, r4
   1910c:	bne	1914c <main@@Base+0x5e74>
   19110:	movw	r3, #16704	; 0x4140
   19114:	sub	r0, fp, #60	; 0x3c
   19118:	mov	r1, r7
   1911c:	mov	r2, r5
   19120:	str	r0, [sp]
   19124:	mov	r0, r8
   19128:	movt	r3, #4
   1912c:	bl	22d58 <main@@Base+0xfa80>
   19130:	mov	r4, r0
   19134:	cmp	r0, r7
   19138:	cmpne	r4, r5
   1913c:	beq	1ced8 <main@@Base+0x9c00>
   19140:	ldr	r6, [fp, #-60]	; 0xffffffc4
   19144:	ldr	r8, [sp, #36]	; 0x24
   19148:	ldr	sl, [sp, #40]	; 0x28
   1914c:	cmp	r6, #0
   19150:	bne	19160 <main@@Base+0x5e88>
   19154:	ldrb	r0, [r8, #8]
   19158:	tst	r0, #2
   1915c:	beq	1b1e8 <main@@Base+0x7f10>
   19160:	ldr	r0, [r8]
   19164:	mov	r1, #17
   19168:	b	1a704 <main@@Base+0x742c>
   1916c:	ldr	r5, [sp, #44]	; 0x2c
   19170:	ldr	r8, [sp, #36]	; 0x24
   19174:	bne	19184 <main@@Base+0x5eac>
   19178:	ldrb	r0, [r7, #2]!
   1917c:	cmp	r0, #32
   19180:	bhi	19194 <main@@Base+0x5ebc>
   19184:	mov	r0, r8
   19188:	mov	r2, r5
   1918c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19190:	mov	r7, r0
   19194:	cmp	sl, r7
   19198:	beq	19214 <main@@Base+0x5f3c>
   1919c:	mov	r6, #0
   191a0:	cmp	r7, r5
   191a4:	str	r6, [fp, #-52]	; 0xffffffcc
   191a8:	str	r6, [fp, #-56]	; 0xffffffc8
   191ac:	str	r6, [sp, #60]	; 0x3c
   191b0:	str	r6, [sp, #56]	; 0x38
   191b4:	str	r6, [fp, #-60]	; 0xffffffc4
   191b8:	beq	19298 <main@@Base+0x5fc0>
   191bc:	sub	r0, fp, #56	; 0x38
   191c0:	mov	r1, r7
   191c4:	mov	r2, r5
   191c8:	sub	r3, fp, #60	; 0x3c
   191cc:	str	r0, [sp]
   191d0:	mov	r0, r8
   191d4:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   191d8:	cmp	r0, r7
   191dc:	beq	192d8 <main@@Base+0x6000>
   191e0:	mov	r4, r0
   191e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   191e8:	cmp	r0, #0
   191ec:	beq	192e8 <main@@Base+0x6010>
   191f0:	mov	r0, r8
   191f4:	mov	r1, r4
   191f8:	mov	r2, r5
   191fc:	mov	r3, #8
   19200:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   19204:	mov	r4, r0
   19208:	mov	r6, #0
   1920c:	mov	r9, #0
   19210:	b	192f8 <main@@Base+0x6020>
   19214:	add	r4, r9, #16
   19218:	mov	r1, #8
   1921c:	mov	r2, #-268435456	; 0xf0000000
   19220:	sub	r0, r5, r4
   19224:	cmp	r0, #8
   19228:	movcc	r1, r0
   1922c:	add	r1, r2, r1, lsl #28
   19230:	asr	r1, r1, #28
   19234:	cmp	r1, #0
   19238:	blt	1928c <main@@Base+0x5fb4>
   1923c:	ldrb	r1, [r4]
   19240:	cmp	r1, #97	; 0x61
   19244:	bne	1928c <main@@Base+0x5fb4>
   19248:	ldr	sl, [sp, #40]	; 0x28
   1924c:	cmp	r0, #2
   19250:	blt	1b1d4 <main@@Base+0x7efc>
   19254:	ldr	r2, [sp, #32]
   19258:	mov	r1, r9
   1925c:	ldrb	r0, [r1, #17]!
   19260:	ldr	r2, [r2]
   19264:	cmp	r2, #0
   19268:	beq	192a4 <main@@Base+0x5fcc>
   1926c:	cmp	r0, #33	; 0x21
   19270:	bcc	1927c <main@@Base+0x5fa4>
   19274:	cmp	r0, #58	; 0x3a
   19278:	bne	1b1d4 <main@@Base+0x7efc>
   1927c:	ldr	r0, [sp, #32]
   19280:	mov	r2, #0
   19284:	str	r2, [r0]
   19288:	b	192b0 <main@@Base+0x5fd8>
   1928c:	mov	r0, r8
   19290:	mov	r1, r4
   19294:	b	16890 <main@@Base+0x35b8>
   19298:	mov	r9, #0
   1929c:	mov	r4, r5
   192a0:	b	192f8 <main@@Base+0x6020>
   192a4:	cmp	r0, #34	; 0x22
   192a8:	bne	1b1d4 <main@@Base+0x7efc>
   192ac:	add	r1, r9, #18
   192b0:	sub	r0, r5, r1
   192b4:	cmp	r0, #2
   192b8:	blt	19500 <main@@Base+0x6228>
   192bc:	ldrb	r0, [r1]
   192c0:	cmp	r0, #32
   192c4:	bls	194e4 <main@@Base+0x620c>
   192c8:	ldr	r5, [sp, #44]	; 0x2c
   192cc:	ldr	r8, [sp, #36]	; 0x24
   192d0:	mov	r7, r1
   192d4:	b	19510 <main@@Base+0x6238>
   192d8:	mov	r6, #0
   192dc:	mov	r9, #0
   192e0:	mov	r4, r7
   192e4:	b	192f8 <main@@Base+0x6020>
   192e8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   192ec:	ldr	r9, [fp, #-52]	; 0xffffffcc
   192f0:	str	r9, [sp, #60]	; 0x3c
   192f4:	str	r6, [sp, #56]	; 0x38
   192f8:	ldr	sl, [sp, #40]	; 0x28
   192fc:	cmp	r7, r4
   19300:	bne	19344 <main@@Base+0x606c>
   19304:	movw	r3, #16728	; 0x4158
   19308:	add	r0, sp, #56	; 0x38
   1930c:	mov	r1, r7
   19310:	mov	r2, r5
   19314:	str	r0, [sp]
   19318:	mov	r0, r8
   1931c:	movt	r3, #4
   19320:	bl	22f7c <main@@Base+0xfca4>
   19324:	mov	r4, r0
   19328:	cmp	r0, r7
   1932c:	cmpne	r4, r5
   19330:	beq	1ced8 <main@@Base+0x9c00>
   19334:	ldr	r6, [sp, #56]	; 0x38
   19338:	ldr	r9, [sp, #60]	; 0x3c
   1933c:	ldr	r8, [sp, #36]	; 0x24
   19340:	ldr	sl, [sp, #40]	; 0x28
   19344:	orrs	r0, r6, r9
   19348:	bne	19358 <main@@Base+0x6080>
   1934c:	ldrb	r0, [r8, #8]
   19350:	tst	r0, #2
   19354:	beq	1b1e8 <main@@Base+0x7f10>
   19358:	ldr	r0, [r8]
   1935c:	mov	r1, #19
   19360:	mov	r2, #8
   19364:	mov	r3, #8
   19368:	bl	2b8dc <flatcc_builder_table_add@@Base>
   1936c:	cmp	r0, #0
   19370:	beq	1ced8 <main@@Base+0x9c00>
   19374:	stm	r0, {r6, r9}
   19378:	b	1b1e8 <main@@Base+0x7f10>
   1937c:	ldr	r5, [sp, #44]	; 0x2c
   19380:	ldr	r8, [sp, #36]	; 0x24
   19384:	ldr	sl, [sp, #40]	; 0x28
   19388:	bne	19398 <main@@Base+0x60c0>
   1938c:	ldrb	r0, [r4, #2]!
   19390:	cmp	r0, #32
   19394:	bhi	168bc <main@@Base+0x35e4>
   19398:	mov	r0, r8
   1939c:	mov	r2, r5
   193a0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   193a4:	b	168b8 <main@@Base+0x35e0>
   193a8:	ldr	r5, [sp, #44]	; 0x2c
   193ac:	ldr	r8, [sp, #36]	; 0x24
   193b0:	ldr	sl, [sp, #40]	; 0x28
   193b4:	bne	193c4 <main@@Base+0x60ec>
   193b8:	ldrb	r0, [r4, #2]!
   193bc:	cmp	r0, #32
   193c0:	bhi	193d4 <main@@Base+0x60fc>
   193c4:	mov	r0, r8
   193c8:	mov	r2, r5
   193cc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   193d0:	mov	r4, r0
   193d4:	cmp	r7, r4
   193d8:	beq	1a634 <main@@Base+0x735c>
   193dc:	ldr	r0, [r8]
   193e0:	bl	2a2cc <flatcc_builder_start_offset_vector@@Base>
   193e4:	cmp	r0, #0
   193e8:	bne	13390 <main@@Base+0xb8>
   193ec:	cmp	r4, r5
   193f0:	beq	19428 <main@@Base+0x6150>
   193f4:	ldrb	r0, [r4]
   193f8:	cmp	r0, #91	; 0x5b
   193fc:	bne	19428 <main@@Base+0x6150>
   19400:	add	r1, r4, #1
   19404:	sub	r0, r5, r1
   19408:	cmp	r0, #2
   1940c:	blt	19c4c <main@@Base+0x6974>
   19410:	ldrb	r0, [r1]
   19414:	cmp	r0, #32
   19418:	bls	19c34 <main@@Base+0x695c>
   1941c:	ldr	r5, [sp, #44]	; 0x2c
   19420:	mov	r4, r1
   19424:	b	19c5c <main@@Base+0x6984>
   19428:	mov	r0, r8
   1942c:	mov	r1, r4
   19430:	mov	r2, r5
   19434:	mov	r3, #22
   19438:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1943c:	mov	r4, r0
   19440:	ldr	r0, [r8]
   19444:	bl	2a398 <flatcc_builder_end_offset_vector@@Base>
   19448:	cmp	r0, #0
   1944c:	str	r0, [sp, #52]	; 0x34
   19450:	beq	13390 <main@@Base+0xb8>
   19454:	ldr	r0, [r8]
   19458:	mov	r1, #10
   1945c:	b	15ae4 <main@@Base+0x280c>
   19460:	ldr	r5, [sp, #44]	; 0x2c
   19464:	ldr	r8, [sp, #36]	; 0x24
   19468:	bne	1947c <main@@Base+0x61a4>
   1946c:	mov	r7, r1
   19470:	ldrb	r0, [r7, #1]!
   19474:	cmp	r0, #32
   19478:	bhi	1948c <main@@Base+0x61b4>
   1947c:	mov	r0, r8
   19480:	mov	r2, r5
   19484:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19488:	mov	r7, r0
   1948c:	cmp	r7, r5
   19490:	beq	194cc <main@@Base+0x61f4>
   19494:	ldrb	r0, [r7]
   19498:	cmp	r0, #58	; 0x3a
   1949c:	bne	194cc <main@@Base+0x61f4>
   194a0:	add	r1, r7, #1
   194a4:	sub	r0, r5, r1
   194a8:	cmp	r0, #2
   194ac:	blt	1aff4 <main@@Base+0x7d1c>
   194b0:	ldrb	r0, [r1]
   194b4:	cmp	r0, #32
   194b8:	bls	1afdc <main@@Base+0x7d04>
   194bc:	ldr	r5, [sp, #44]	; 0x2c
   194c0:	ldr	r8, [sp, #36]	; 0x24
   194c4:	mov	r7, r1
   194c8:	b	1b004 <main@@Base+0x7d2c>
   194cc:	mov	r0, r8
   194d0:	mov	r1, r7
   194d4:	mov	r2, r5
   194d8:	mov	r3, #4
   194dc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   194e0:	b	1b000 <main@@Base+0x7d28>
   194e4:	ldr	r5, [sp, #44]	; 0x2c
   194e8:	ldr	r8, [sp, #36]	; 0x24
   194ec:	bne	19500 <main@@Base+0x6228>
   194f0:	mov	r7, r1
   194f4:	ldrb	r0, [r7, #1]!
   194f8:	cmp	r0, #32
   194fc:	bhi	19510 <main@@Base+0x6238>
   19500:	mov	r0, r8
   19504:	mov	r2, r5
   19508:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1950c:	mov	r7, r0
   19510:	cmp	r7, r5
   19514:	beq	19550 <main@@Base+0x6278>
   19518:	ldrb	r0, [r7]
   1951c:	cmp	r0, #58	; 0x3a
   19520:	bne	19550 <main@@Base+0x6278>
   19524:	add	r1, r7, #1
   19528:	sub	r0, r5, r1
   1952c:	cmp	r0, #2
   19530:	blt	1b140 <main@@Base+0x7e68>
   19534:	ldrb	r0, [r1]
   19538:	cmp	r0, #32
   1953c:	bls	1b128 <main@@Base+0x7e50>
   19540:	ldr	r5, [sp, #44]	; 0x2c
   19544:	ldr	r8, [sp, #36]	; 0x24
   19548:	mov	r7, r1
   1954c:	b	1b150 <main@@Base+0x7e78>
   19550:	mov	r0, r8
   19554:	mov	r1, r7
   19558:	mov	r2, r5
   1955c:	mov	r3, #4
   19560:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   19564:	b	1b14c <main@@Base+0x7e74>
   19568:	ldr	r5, [sp, #44]	; 0x2c
   1956c:	ldr	r8, [sp, #36]	; 0x24
   19570:	ldr	sl, [sp, #40]	; 0x28
   19574:	bne	19584 <main@@Base+0x62ac>
   19578:	ldrb	r0, [r7, #2]!
   1957c:	cmp	r0, #32
   19580:	bhi	19594 <main@@Base+0x62bc>
   19584:	mov	r0, r8
   19588:	mov	r2, r5
   1958c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19590:	mov	r7, r0
   19594:	cmp	r4, r7
   19598:	beq	1b1d4 <main@@Base+0x7efc>
   1959c:	mov	r6, #0
   195a0:	cmp	r7, r5
   195a4:	str	r6, [fp, #-52]	; 0xffffffcc
   195a8:	str	r6, [fp, #-56]	; 0xffffffc8
   195ac:	str	r6, [fp, #-60]	; 0xffffffc4
   195b0:	str	r6, [sp, #56]	; 0x38
   195b4:	beq	19614 <main@@Base+0x633c>
   195b8:	sub	r0, fp, #56	; 0x38
   195bc:	mov	r1, r7
   195c0:	mov	r2, r5
   195c4:	add	r3, sp, #56	; 0x38
   195c8:	str	r0, [sp]
   195cc:	mov	r0, r8
   195d0:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   195d4:	cmp	r0, r7
   195d8:	beq	1961c <main@@Base+0x6344>
   195dc:	ldr	r2, [sp, #56]	; 0x38
   195e0:	mov	r4, r0
   195e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   195e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   195ec:	cmp	r2, #0
   195f0:	beq	19624 <main@@Base+0x634c>
   195f4:	subs	r2, r0, #-2147483647	; 0x80000001
   195f8:	sbcs	r1, r1, #0
   195fc:	bcc	19654 <main@@Base+0x637c>
   19600:	ldr	r8, [sp, #36]	; 0x24
   19604:	ldr	r5, [sp, #44]	; 0x2c
   19608:	mov	r1, r4
   1960c:	mov	r3, #8
   19610:	b	19640 <main@@Base+0x6368>
   19614:	mov	r4, r5
   19618:	b	1a6a4 <main@@Base+0x73cc>
   1961c:	mov	r4, r7
   19620:	b	1a6a4 <main@@Base+0x73cc>
   19624:	subs	r2, r0, #-2147483648	; 0x80000000
   19628:	sbcs	r1, r1, #0
   1962c:	bcc	1a690 <main@@Base+0x73b8>
   19630:	ldr	r8, [sp, #36]	; 0x24
   19634:	ldr	r5, [sp, #44]	; 0x2c
   19638:	mov	r1, r4
   1963c:	mov	r3, #7
   19640:	mov	r0, r8
   19644:	mov	r2, r5
   19648:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1964c:	mov	r4, r0
   19650:	b	1a6a0 <main@@Base+0x73c8>
   19654:	rsb	r6, r0, #0
   19658:	b	1a694 <main@@Base+0x73bc>
   1965c:	ldr	r5, [sp, #44]	; 0x2c
   19660:	ldr	r8, [sp, #36]	; 0x24
   19664:	ldr	sl, [sp, #40]	; 0x28
   19668:	bne	1967c <main@@Base+0x63a4>
   1966c:	ldrb	r0, [r4, #2]!
   19670:	cmp	r0, #32
   19674:	mov	r7, r4
   19678:	bhi	16310 <main@@Base+0x3038>
   1967c:	mov	r0, r8
   19680:	mov	r2, r5
   19684:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19688:	b	1630c <main@@Base+0x3034>
   1968c:	ldr	r5, [sp, #44]	; 0x2c
   19690:	ldr	r8, [sp, #36]	; 0x24
   19694:	bne	196a4 <main@@Base+0x63cc>
   19698:	ldrb	r0, [r4, #2]!
   1969c:	cmp	r0, #32
   196a0:	bhi	196b4 <main@@Base+0x63dc>
   196a4:	mov	r0, r8
   196a8:	mov	r2, r5
   196ac:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   196b0:	mov	r4, r0
   196b4:	cmp	r4, r5
   196b8:	mov	r2, r5
   196bc:	beq	19720 <main@@Base+0x6448>
   196c0:	ldrb	r0, [r4]
   196c4:	cmp	r0, #93	; 0x5d
   196c8:	bne	19714 <main@@Base+0x643c>
   196cc:	ldr	r5, [sp, #44]	; 0x2c
   196d0:	ldr	r8, [sp, #36]	; 0x24
   196d4:	ldr	sl, [sp, #40]	; 0x28
   196d8:	add	r1, r4, #1
   196dc:	sub	r0, r5, r1
   196e0:	cmp	r0, #2
   196e4:	blt	1cb20 <main@@Base+0x9848>
   196e8:	ldrb	r0, [r1]
   196ec:	cmp	r0, #32
   196f0:	bhi	1abb4 <main@@Base+0x78dc>
   196f4:	ldr	r5, [sp, #44]	; 0x2c
   196f8:	ldr	r8, [sp, #36]	; 0x24
   196fc:	ldr	sl, [sp, #40]	; 0x28
   19700:	bne	1cb20 <main@@Base+0x9848>
   19704:	ldrb	r0, [r4, #2]!
   19708:	cmp	r0, #32
   1970c:	bhi	18bb8 <main@@Base+0x58e0>
   19710:	b	1cb20 <main@@Base+0x9848>
   19714:	ldr	r5, [sp, #44]	; 0x2c
   19718:	ldr	r8, [sp, #36]	; 0x24
   1971c:	mov	r2, r4
   19720:	mov	r1, r2
   19724:	mov	r0, r8
   19728:	mov	r2, r5
   1972c:	add	r3, sp, #52	; 0x34
   19730:	bl	13350 <main@@Base+0x78>
   19734:	mov	r4, r0
   19738:	ldr	r0, [sp, #52]	; 0x34
   1973c:	cmp	r0, #0
   19740:	beq	13390 <main@@Base+0xb8>
   19744:	ldr	r0, [r8]
   19748:	mov	r1, #1
   1974c:	bl	29c88 <flatcc_builder_extend_offset_vector@@Base>
   19750:	cmp	r0, #0
   19754:	beq	13390 <main@@Base+0xb8>
   19758:	ldr	r1, [sp, #52]	; 0x34
   1975c:	str	r1, [r0]
   19760:	sub	r0, r5, r4
   19764:	cmp	r0, #2
   19768:	blt	19794 <main@@Base+0x64bc>
   1976c:	ldrb	r0, [r4]
   19770:	cmp	r0, #32
   19774:	bls	19780 <main@@Base+0x64a8>
   19778:	mov	r2, r4
   1977c:	b	197a8 <main@@Base+0x64d0>
   19780:	bne	19794 <main@@Base+0x64bc>
   19784:	mov	r2, r4
   19788:	ldrb	r0, [r2, #1]!
   1978c:	cmp	r0, #32
   19790:	bhi	197a8 <main@@Base+0x64d0>
   19794:	mov	r0, r8
   19798:	mov	r1, r4
   1979c:	mov	r2, r5
   197a0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   197a4:	mov	r2, r0
   197a8:	cmp	r2, r5
   197ac:	beq	1ab78 <main@@Base+0x78a0>
   197b0:	ldrb	r0, [r2]
   197b4:	cmp	r0, #44	; 0x2c
   197b8:	bne	1ab84 <main@@Base+0x78ac>
   197bc:	add	r1, r2, #1
   197c0:	sub	r0, r5, r1
   197c4:	cmp	r0, #2
   197c8:	blt	197f0 <main@@Base+0x6518>
   197cc:	ldrb	r0, [r1]
   197d0:	cmp	r0, #32
   197d4:	bls	197e0 <main@@Base+0x6508>
   197d8:	mov	r2, r1
   197dc:	b	19800 <main@@Base+0x6528>
   197e0:	bne	197f0 <main@@Base+0x6518>
   197e4:	ldrb	r0, [r2, #2]!
   197e8:	cmp	r0, #32
   197ec:	bhi	19800 <main@@Base+0x6528>
   197f0:	mov	r0, r8
   197f4:	mov	r2, r5
   197f8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   197fc:	mov	r2, r0
   19800:	cmp	r2, r5
   19804:	beq	1abc8 <main@@Base+0x78f0>
   19808:	ldrb	r0, [r2]
   1980c:	cmp	r0, #93	; 0x5d
   19810:	bne	19720 <main@@Base+0x6448>
   19814:	b	1ab94 <main@@Base+0x78bc>
   19818:	ldr	r5, [sp, #44]	; 0x2c
   1981c:	ldr	r8, [sp, #36]	; 0x24
   19820:	bne	19830 <main@@Base+0x6558>
   19824:	ldrb	r0, [r4, #2]!
   19828:	cmp	r0, #32
   1982c:	bhi	19840 <main@@Base+0x6568>
   19830:	mov	r0, r8
   19834:	mov	r2, r5
   19838:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1983c:	mov	r4, r0
   19840:	cmp	sl, r4
   19844:	beq	16888 <main@@Base+0x35b0>
   19848:	ldr	r0, [r8]
   1984c:	mov	r1, #8
   19850:	mov	r2, #8
   19854:	mvn	r3, #-536870912	; 0xe0000000
   19858:	bl	2a240 <flatcc_builder_start_vector@@Base>
   1985c:	cmp	r0, #0
   19860:	bne	13390 <main@@Base+0xb8>
   19864:	cmp	r4, r5
   19868:	beq	198a0 <main@@Base+0x65c8>
   1986c:	ldrb	r0, [r4]
   19870:	cmp	r0, #91	; 0x5b
   19874:	bne	198a0 <main@@Base+0x65c8>
   19878:	add	r1, r4, #1
   1987c:	sub	r0, r5, r1
   19880:	cmp	r0, #2
   19884:	blt	1a738 <main@@Base+0x7460>
   19888:	ldrb	r0, [r1]
   1988c:	cmp	r0, #32
   19890:	bls	1a720 <main@@Base+0x7448>
   19894:	ldr	r5, [sp, #44]	; 0x2c
   19898:	mov	r4, r1
   1989c:	b	1a748 <main@@Base+0x7470>
   198a0:	mov	r0, r8
   198a4:	mov	r1, r4
   198a8:	mov	r2, r5
   198ac:	mov	r3, #22
   198b0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   198b4:	mov	r4, r0
   198b8:	b	1ccec <main@@Base+0x9a14>
   198bc:	ldr	r5, [sp, #44]	; 0x2c
   198c0:	ldr	r8, [sp, #36]	; 0x24
   198c4:	ldr	sl, [sp, #40]	; 0x28
   198c8:	bne	198d8 <main@@Base+0x6600>
   198cc:	ldrb	r0, [r4, #2]!
   198d0:	cmp	r0, #32
   198d4:	bhi	198e8 <main@@Base+0x6610>
   198d8:	mov	r0, r8
   198dc:	mov	r2, r5
   198e0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   198e4:	mov	r4, r0
   198e8:	cmp	r7, r4
   198ec:	beq	1a634 <main@@Base+0x735c>
   198f0:	cmp	r4, r5
   198f4:	beq	19954 <main@@Base+0x667c>
   198f8:	ldrb	r0, [r4]
   198fc:	cmp	r0, #91	; 0x5b
   19900:	bne	19954 <main@@Base+0x667c>
   19904:	ldr	r0, [r8]
   19908:	mov	r1, #1
   1990c:	mov	r2, #1
   19910:	mvn	r3, #0
   19914:	bl	2a240 <flatcc_builder_start_vector@@Base>
   19918:	cmp	r0, #0
   1991c:	bne	1ced8 <main@@Base+0x9c00>
   19920:	ldrb	r0, [r4]
   19924:	cmp	r0, #91	; 0x5b
   19928:	bne	199a0 <main@@Base+0x66c8>
   1992c:	ldr	r0, [sp, #44]	; 0x2c
   19930:	add	r1, r4, #1
   19934:	sub	r0, r0, r1
   19938:	cmp	r0, #2
   1993c:	blt	1c704 <main@@Base+0x942c>
   19940:	ldrb	r0, [r1]
   19944:	cmp	r0, #32
   19948:	bls	1c6f4 <main@@Base+0x941c>
   1994c:	mov	r4, r1
   19950:	b	1c714 <main@@Base+0x943c>
   19954:	ldr	r0, [r8]
   19958:	mov	r1, #0
   1995c:	mov	r2, #0
   19960:	mov	r3, #0
   19964:	bl	29590 <flatcc_builder_start_buffer@@Base>
   19968:	cmp	r0, #0
   1996c:	bne	13390 <main@@Base+0xb8>
   19970:	mov	r0, r8
   19974:	mov	r1, r4
   19978:	mov	r2, r5
   1997c:	add	r3, sp, #52	; 0x34
   19980:	bl	13350 <main@@Base+0x78>
   19984:	ldr	r1, [sp, #52]	; 0x34
   19988:	mov	r4, r0
   1998c:	cmp	r1, #0
   19990:	beq	13390 <main@@Base+0xb8>
   19994:	ldr	r0, [r8]
   19998:	bl	29780 <flatcc_builder_end_buffer@@Base>
   1999c:	b	1cc38 <main@@Base+0x9960>
   199a0:	ldr	r0, [sp, #36]	; 0x24
   199a4:	ldr	r2, [sp, #44]	; 0x2c
   199a8:	mov	r1, r4
   199ac:	mov	r3, #22
   199b0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   199b4:	b	1cc24 <main@@Base+0x994c>
   199b8:	ldr	r5, [sp, #44]	; 0x2c
   199bc:	ldr	r8, [sp, #36]	; 0x24
   199c0:	bne	199d0 <main@@Base+0x66f8>
   199c4:	ldrb	r0, [r4, #2]!
   199c8:	cmp	r0, #32
   199cc:	bhi	199e0 <main@@Base+0x6708>
   199d0:	mov	r0, r8
   199d4:	mov	r2, r5
   199d8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   199dc:	mov	r4, r0
   199e0:	cmp	r4, r5
   199e4:	beq	19a2c <main@@Base+0x6754>
   199e8:	ldrb	r0, [r4]
   199ec:	cmp	r0, #93	; 0x5d
   199f0:	bne	19a24 <main@@Base+0x674c>
   199f4:	ldr	r5, [sp, #44]	; 0x2c
   199f8:	ldr	r8, [sp, #36]	; 0x24
   199fc:	ldr	sl, [sp, #40]	; 0x28
   19a00:	add	r1, r4, #1
   19a04:	sub	r0, r5, r1
   19a08:	cmp	r0, #2
   19a0c:	blt	1c96c <main@@Base+0x9694>
   19a10:	ldrb	r0, [r1]
   19a14:	cmp	r0, #32
   19a18:	bls	1c950 <main@@Base+0x9678>
   19a1c:	mov	r4, r1
   19a20:	b	1cd6c <main@@Base+0x9a94>
   19a24:	ldr	r8, [sp, #36]	; 0x24
   19a28:	mov	r5, r4
   19a2c:	mov	r0, #0
   19a30:	mov	r1, #1
   19a34:	strb	r0, [fp, #-60]	; 0xffffffc4
   19a38:	ldr	r0, [r8]
   19a3c:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   19a40:	cmp	r0, #0
   19a44:	beq	1ceac <main@@Base+0x9bd4>
   19a48:	mov	r4, r5
   19a4c:	ldr	r5, [sp, #44]	; 0x2c
   19a50:	ldr	r8, [sp, #36]	; 0x24
   19a54:	mov	r7, r0
   19a58:	mov	r6, #0
   19a5c:	cmp	r4, r5
   19a60:	str	r6, [fp, #-52]	; 0xffffffcc
   19a64:	str	r6, [fp, #-56]	; 0xffffffc8
   19a68:	strb	r6, [fp, #-60]	; 0xffffffc4
   19a6c:	str	r6, [sp, #56]	; 0x38
   19a70:	beq	19ab8 <main@@Base+0x67e0>
   19a74:	sub	r0, fp, #56	; 0x38
   19a78:	mov	r1, r4
   19a7c:	mov	r2, r5
   19a80:	add	r3, sp, #56	; 0x38
   19a84:	str	r0, [sp]
   19a88:	mov	r0, r8
   19a8c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   19a90:	cmp	r0, r4
   19a94:	beq	19ac0 <main@@Base+0x67e8>
   19a98:	mov	r1, r0
   19a9c:	ldr	r0, [sp, #56]	; 0x38
   19aa0:	cmp	r0, #0
   19aa4:	beq	19ac8 <main@@Base+0x67f0>
   19aa8:	mov	r0, r8
   19aac:	mov	r2, r5
   19ab0:	mov	r3, #8
   19ab4:	b	19af0 <main@@Base+0x6818>
   19ab8:	mov	r1, r5
   19abc:	b	19af8 <main@@Base+0x6820>
   19ac0:	mov	r1, r4
   19ac4:	b	19af8 <main@@Base+0x6820>
   19ac8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19acc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19ad0:	subs	r3, r0, #256	; 0x100
   19ad4:	sbcs	r2, r2, #0
   19ad8:	bcc	19c0c <main@@Base+0x6934>
   19adc:	ldr	r8, [sp, #36]	; 0x24
   19ae0:	ldr	r5, [sp, #44]	; 0x2c
   19ae4:	mov	r3, #7
   19ae8:	mov	r0, r8
   19aec:	mov	r2, r5
   19af0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   19af4:	mov	r1, r0
   19af8:	cmp	r4, r1
   19afc:	bne	19b34 <main@@Base+0x685c>
   19b00:	movw	r3, #16556	; 0x40ac
   19b04:	sub	r0, fp, #60	; 0x3c
   19b08:	mov	r1, r4
   19b0c:	mov	r2, r5
   19b10:	str	r0, [sp]
   19b14:	mov	r0, r8
   19b18:	movt	r3, #4
   19b1c:	bl	1e510 <main@@Base+0xb238>
   19b20:	mov	r1, r0
   19b24:	cmp	r0, r4
   19b28:	cmpne	r1, r5
   19b2c:	beq	1ce94 <main@@Base+0x9bbc>
   19b30:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19b34:	sub	r0, r5, r1
   19b38:	strb	r6, [r7]
   19b3c:	cmp	r0, #2
   19b40:	blt	19b6c <main@@Base+0x6894>
   19b44:	ldrb	r0, [r1]
   19b48:	cmp	r0, #32
   19b4c:	bls	19b58 <main@@Base+0x6880>
   19b50:	mov	r4, r1
   19b54:	b	19b7c <main@@Base+0x68a4>
   19b58:	bne	19b6c <main@@Base+0x6894>
   19b5c:	mov	r4, r1
   19b60:	ldrb	r0, [r4, #1]!
   19b64:	cmp	r0, #32
   19b68:	bhi	19b7c <main@@Base+0x68a4>
   19b6c:	mov	r0, r8
   19b70:	mov	r2, r5
   19b74:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19b78:	mov	r4, r0
   19b7c:	cmp	r4, r5
   19b80:	beq	1ca1c <main@@Base+0x9744>
   19b84:	ldrb	r0, [r4]
   19b88:	cmp	r0, #44	; 0x2c
   19b8c:	bne	1ca9c <main@@Base+0x97c4>
   19b90:	add	r1, r4, #1
   19b94:	sub	r0, r5, r1
   19b98:	cmp	r0, #2
   19b9c:	blt	19bc4 <main@@Base+0x68ec>
   19ba0:	ldrb	r0, [r1]
   19ba4:	cmp	r0, #32
   19ba8:	bls	19bb4 <main@@Base+0x68dc>
   19bac:	mov	r4, r1
   19bb0:	b	19bd4 <main@@Base+0x68fc>
   19bb4:	bne	19bc4 <main@@Base+0x68ec>
   19bb8:	ldrb	r0, [r4, #2]!
   19bbc:	cmp	r0, #32
   19bc0:	bhi	19bd4 <main@@Base+0x68fc>
   19bc4:	mov	r0, r8
   19bc8:	mov	r2, r5
   19bcc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19bd0:	mov	r4, r0
   19bd4:	cmp	r4, r5
   19bd8:	beq	1cab4 <main@@Base+0x97dc>
   19bdc:	ldrb	r0, [r4]
   19be0:	cmp	r0, #93	; 0x5d
   19be4:	beq	1cac4 <main@@Base+0x97ec>
   19be8:	mov	r0, #0
   19bec:	mov	r1, #1
   19bf0:	strb	r0, [fp, #-60]	; 0xffffffc4
   19bf4:	ldr	r0, [r8]
   19bf8:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   19bfc:	mov	r7, r0
   19c00:	cmp	r0, #0
   19c04:	bne	19a58 <main@@Base+0x6780>
   19c08:	b	13390 <main@@Base+0xb8>
   19c0c:	ldr	r5, [sp, #44]	; 0x2c
   19c10:	ldr	r8, [sp, #36]	; 0x24
   19c14:	mov	r6, r0
   19c18:	strb	r0, [fp, #-60]	; 0xffffffc4
   19c1c:	b	19af8 <main@@Base+0x6820>
   19c20:	ldr	r6, [fp, #-56]	; 0xffffffc8
   19c24:	ldr	r5, [sp, #44]	; 0x2c
   19c28:	ldr	r8, [sp, #36]	; 0x24
   19c2c:	str	r6, [fp, #-60]	; 0xffffffc4
   19c30:	b	19104 <main@@Base+0x5e2c>
   19c34:	ldr	r5, [sp, #44]	; 0x2c
   19c38:	ldr	r8, [sp, #36]	; 0x24
   19c3c:	bne	19c4c <main@@Base+0x6974>
   19c40:	ldrb	r0, [r4, #2]!
   19c44:	cmp	r0, #32
   19c48:	bhi	19c5c <main@@Base+0x6984>
   19c4c:	mov	r0, r8
   19c50:	mov	r2, r5
   19c54:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19c58:	mov	r4, r0
   19c5c:	cmp	r4, r5
   19c60:	mov	r2, r5
   19c64:	beq	19cc0 <main@@Base+0x69e8>
   19c68:	ldrb	r0, [r4]
   19c6c:	cmp	r0, #93	; 0x5d
   19c70:	bne	19cbc <main@@Base+0x69e4>
   19c74:	ldr	r5, [sp, #44]	; 0x2c
   19c78:	ldr	r8, [sp, #36]	; 0x24
   19c7c:	ldr	sl, [sp, #40]	; 0x28
   19c80:	add	r1, r4, #1
   19c84:	sub	r0, r5, r1
   19c88:	cmp	r0, #2
   19c8c:	blt	1ccb4 <main@@Base+0x99dc>
   19c90:	ldrb	r0, [r1]
   19c94:	cmp	r0, #32
   19c98:	bhi	1bcac <main@@Base+0x89d4>
   19c9c:	ldr	r5, [sp, #44]	; 0x2c
   19ca0:	ldr	r8, [sp, #36]	; 0x24
   19ca4:	ldr	sl, [sp, #40]	; 0x28
   19ca8:	bne	1ccb4 <main@@Base+0x99dc>
   19cac:	ldrb	r0, [r4, #2]!
   19cb0:	cmp	r0, #32
   19cb4:	bhi	19440 <main@@Base+0x6168>
   19cb8:	b	1ccb4 <main@@Base+0x99dc>
   19cbc:	mov	r2, r4
   19cc0:	ldr	r5, [sp, #44]	; 0x2c
   19cc4:	ldr	r8, [sp, #36]	; 0x24
   19cc8:	mov	r1, r2
   19ccc:	mov	r0, r8
   19cd0:	mov	r2, r5
   19cd4:	add	r3, sp, #52	; 0x34
   19cd8:	bl	2f6d0 <flatcc_json_parser_build_string@@Base>
   19cdc:	mov	r4, r0
   19ce0:	ldr	r0, [sp, #52]	; 0x34
   19ce4:	cmp	r0, #0
   19ce8:	beq	13390 <main@@Base+0xb8>
   19cec:	ldr	r0, [r8]
   19cf0:	mov	r1, #1
   19cf4:	bl	29c88 <flatcc_builder_extend_offset_vector@@Base>
   19cf8:	cmp	r0, #0
   19cfc:	beq	13390 <main@@Base+0xb8>
   19d00:	ldr	r1, [sp, #52]	; 0x34
   19d04:	str	r1, [r0]
   19d08:	sub	r0, r5, r4
   19d0c:	cmp	r0, #2
   19d10:	blt	19d3c <main@@Base+0x6a64>
   19d14:	ldrb	r0, [r4]
   19d18:	cmp	r0, #32
   19d1c:	bls	19d28 <main@@Base+0x6a50>
   19d20:	mov	r2, r4
   19d24:	b	19d50 <main@@Base+0x6a78>
   19d28:	bne	19d3c <main@@Base+0x6a64>
   19d2c:	mov	r2, r4
   19d30:	ldrb	r0, [r2, #1]!
   19d34:	cmp	r0, #32
   19d38:	bhi	19d50 <main@@Base+0x6a78>
   19d3c:	mov	r0, r8
   19d40:	mov	r1, r4
   19d44:	mov	r2, r5
   19d48:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19d4c:	mov	r2, r0
   19d50:	cmp	r2, r5
   19d54:	beq	1b380 <main@@Base+0x80a8>
   19d58:	ldrb	r0, [r2]
   19d5c:	cmp	r0, #44	; 0x2c
   19d60:	bne	1bc7c <main@@Base+0x89a4>
   19d64:	add	r1, r2, #1
   19d68:	sub	r0, r5, r1
   19d6c:	cmp	r0, #2
   19d70:	blt	19d98 <main@@Base+0x6ac0>
   19d74:	ldrb	r0, [r1]
   19d78:	cmp	r0, #32
   19d7c:	bls	19d88 <main@@Base+0x6ab0>
   19d80:	mov	r2, r1
   19d84:	b	19da8 <main@@Base+0x6ad0>
   19d88:	bne	19d98 <main@@Base+0x6ac0>
   19d8c:	ldrb	r0, [r2, #2]!
   19d90:	cmp	r0, #32
   19d94:	bhi	19da8 <main@@Base+0x6ad0>
   19d98:	mov	r0, r8
   19d9c:	mov	r2, r5
   19da0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19da4:	mov	r2, r0
   19da8:	cmp	r2, r5
   19dac:	beq	1bcec <main@@Base+0x8a14>
   19db0:	ldrb	r0, [r2]
   19db4:	cmp	r0, #93	; 0x5d
   19db8:	bne	19cc8 <main@@Base+0x69f0>
   19dbc:	b	1bc8c <main@@Base+0x89b4>
   19dc0:	mov	r4, r5
   19dc4:	b	168bc <main@@Base+0x35e4>
   19dc8:	cmp	r0, #93	; 0x5d
   19dcc:	bne	1b35c <main@@Base+0x8084>
   19dd0:	ldr	r5, [sp, #44]	; 0x2c
   19dd4:	ldr	r8, [sp, #36]	; 0x24
   19dd8:	ldr	sl, [sp, #40]	; 0x28
   19ddc:	b	17e68 <main@@Base+0x4b90>
   19de0:	ldr	sl, [sp, #40]	; 0x28
   19de4:	mov	r4, r5
   19de8:	b	183cc <main@@Base+0x50f4>
   19dec:	mov	r0, r8
   19df0:	mov	r1, r5
   19df4:	mov	r2, r5
   19df8:	mov	r3, #9
   19dfc:	b	168b4 <main@@Base+0x35dc>
   19e00:	ldr	r5, [sp, #44]	; 0x2c
   19e04:	ldr	r8, [sp, #36]	; 0x24
   19e08:	ldr	sl, [sp, #40]	; 0x28
   19e0c:	bne	19e20 <main@@Base+0x6b48>
   19e10:	ldrb	r0, [r2, #2]!
   19e14:	cmp	r0, #32
   19e18:	mov	r4, r2
   19e1c:	bhi	1b1e8 <main@@Base+0x7f10>
   19e20:	mov	r0, r8
   19e24:	mov	r2, r5
   19e28:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19e2c:	b	1b1e4 <main@@Base+0x7f0c>
   19e30:	cmp	r0, #93	; 0x5d
   19e34:	bne	1bcc0 <main@@Base+0x89e8>
   19e38:	ldr	r5, [sp, #44]	; 0x2c
   19e3c:	ldr	r8, [sp, #36]	; 0x24
   19e40:	add	r1, r2, #1
   19e44:	sub	r0, r5, r1
   19e48:	cmp	r0, #2
   19e4c:	ldr	sl, [sp, #40]	; 0x28
   19e50:	blt	1c9ac <main@@Base+0x96d4>
   19e54:	ldrb	r0, [r1]
   19e58:	cmp	r0, #32
   19e5c:	bls	1c98c <main@@Base+0x96b4>
   19e60:	ldr	r5, [sp, #44]	; 0x2c
   19e64:	ldr	r8, [sp, #36]	; 0x24
   19e68:	ldr	sl, [sp, #40]	; 0x28
   19e6c:	mov	r4, r1
   19e70:	b	183cc <main@@Base+0x50f4>
   19e74:	mov	r0, r8
   19e78:	mov	r1, r5
   19e7c:	b	1bcd0 <main@@Base+0x89f8>
   19e80:	ldr	r5, [sp, #44]	; 0x2c
   19e84:	ldr	r8, [sp, #36]	; 0x24
   19e88:	bne	19e98 <main@@Base+0x6bc0>
   19e8c:	ldrb	r0, [r4, #2]!
   19e90:	cmp	r0, #32
   19e94:	bhi	19ea8 <main@@Base+0x6bd0>
   19e98:	mov	r0, r8
   19e9c:	mov	r2, r5
   19ea0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   19ea4:	mov	r4, r0
   19ea8:	cmp	r4, r5
   19eac:	mov	r2, r5
   19eb0:	beq	19f0c <main@@Base+0x6c34>
   19eb4:	ldrb	r0, [r4]
   19eb8:	cmp	r0, #125	; 0x7d
   19ebc:	bne	19f08 <main@@Base+0x6c30>
   19ec0:	ldr	r5, [sp, #44]	; 0x2c
   19ec4:	ldr	r8, [sp, #36]	; 0x24
   19ec8:	ldr	sl, [sp, #40]	; 0x28
   19ecc:	add	r1, r4, #1
   19ed0:	sub	r0, r5, r1
   19ed4:	cmp	r0, #2
   19ed8:	blt	1cc74 <main@@Base+0x999c>
   19edc:	ldrb	r0, [r1]
   19ee0:	cmp	r0, #32
   19ee4:	bhi	1afbc <main@@Base+0x7ce4>
   19ee8:	ldr	r5, [sp, #44]	; 0x2c
   19eec:	ldr	r8, [sp, #36]	; 0x24
   19ef0:	ldr	sl, [sp, #40]	; 0x28
   19ef4:	bne	1cc74 <main@@Base+0x999c>
   19ef8:	ldrb	r0, [r4, #2]!
   19efc:	cmp	r0, #32
   19f00:	bhi	18270 <main@@Base+0x4f98>
   19f04:	b	1cc74 <main@@Base+0x999c>
   19f08:	mov	r2, r4
   19f0c:	ldr	r5, [sp, #44]	; 0x2c
   19f10:	ldr	r8, [sp, #36]	; 0x24
   19f14:	cmp	r2, r5
   19f18:	mov	r9, r5
   19f1c:	beq	19f70 <main@@Base+0x6c98>
   19f20:	ldrb	r0, [r2]
   19f24:	cmp	r0, #46	; 0x2e
   19f28:	beq	19f44 <main@@Base+0x6c6c>
   19f2c:	cmp	r0, #34	; 0x22
   19f30:	bne	19f60 <main@@Base+0x6c88>
   19f34:	ldr	r0, [sp, #32]
   19f38:	mov	r1, #0
   19f3c:	add	r9, r2, #1
   19f40:	b	19f6c <main@@Base+0x6c94>
   19f44:	mov	r1, r2
   19f48:	mov	r0, r8
   19f4c:	mov	r2, r5
   19f50:	mov	r3, #5
   19f54:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   19f58:	mov	r9, r0
   19f5c:	b	19f70 <main@@Base+0x6c98>
   19f60:	ldr	r0, [sp, #32]
   19f64:	mov	r1, #1
   19f68:	mov	r9, r2
   19f6c:	str	r1, [r0]
   19f70:	sub	lr, r5, r9
   19f74:	mov	r0, #8
   19f78:	cmp	lr, #8
   19f7c:	movcc	r0, lr
   19f80:	and	r0, r0, #15
   19f84:	sub	r7, r0, #1
   19f88:	cmp	r7, #7
   19f8c:	bhi	1a110 <main@@Base+0x6e38>
   19f90:	add	r4, pc, #32
   19f94:	mov	r1, #0
   19f98:	mov	ip, #0
   19f9c:	mov	r8, #0
   19fa0:	mov	r6, #0
   19fa4:	mov	r3, #0
   19fa8:	mov	r5, #0
   19fac:	mov	r2, #0
   19fb0:	mov	r0, #0
   19fb4:	ldr	pc, [r4, r7, lsl #2]
   19fb8:	andeq	sl, r1, ip, lsl r0
   19fbc:	andeq	sl, r1, r4, lsl r0
   19fc0:	andeq	sl, r1, ip
   19fc4:	andeq	sl, r1, r4
   19fc8:	strdeq	r9, [r1], -r8
   19fcc:	andeq	r9, r1, ip, ror #31
   19fd0:	ldrdeq	r9, [r1], -ip
   19fd4:	ldrdeq	r9, [r1], -r8
   19fd8:	ldrb	ip, [r9, #7]
   19fdc:	ldrb	r0, [r9, #6]
   19fe0:	mov	r8, r1
   19fe4:	orr	r0, ip, r0, lsl #8
   19fe8:	mov	r1, r0
   19fec:	ldrb	r0, [r9, #5]
   19ff0:	mov	r6, r8
   19ff4:	orr	r1, r1, r0, lsl #16
   19ff8:	ldrb	r0, [r9, #4]
   19ffc:	mov	r3, r6
   1a000:	orr	r1, r1, r0, lsl #24
   1a004:	ldrb	r0, [r9, #3]
   1a008:	orr	r5, r0, r3
   1a00c:	ldrb	r0, [r9, #2]
   1a010:	orr	r2, r5, r0, lsl #8
   1a014:	ldrb	r0, [r9, #1]
   1a018:	orr	r0, r2, r0, lsl #16
   1a01c:	ldrb	r2, [r9]
   1a020:	orr	r2, r0, r2, lsl #24
   1a024:	movw	r0, #0
   1a028:	movt	r0, #25956	; 0x6564
   1a02c:	subs	r0, r1, r0
   1a030:	movw	r0, #29556	; 0x7374
   1a034:	movt	r0, #28261	; 0x6e65
   1a038:	sbcs	r0, r2, r0
   1a03c:	bcs	1a0a0 <main@@Base+0x6dc8>
   1a040:	ldr	r5, [sp, #44]	; 0x2c
   1a044:	ldr	r8, [sp, #36]	; 0x24
   1a048:	movw	r0, #29793	; 0x7461
   1a04c:	movt	r0, #25697	; 0x6461
   1a050:	teq	r2, r0
   1a054:	bne	1a110 <main@@Base+0x6e38>
   1a058:	cmp	lr, #5
   1a05c:	mov	r1, r9
   1a060:	blt	1a3bc <main@@Base+0x70e4>
   1a064:	ldr	r1, [sp, #32]
   1a068:	mov	r2, r9
   1a06c:	ldrb	r0, [r2, #4]!
   1a070:	ldr	r1, [r1]
   1a074:	cmp	r1, #0
   1a078:	beq	1a188 <main@@Base+0x6eb0>
   1a07c:	cmp	r0, #33	; 0x21
   1a080:	bcc	1a090 <main@@Base+0x6db8>
   1a084:	cmp	r0, #58	; 0x3a
   1a088:	mov	r1, r9
   1a08c:	bne	1a3bc <main@@Base+0x70e4>
   1a090:	ldr	r0, [sp, #32]
   1a094:	mov	r1, #0
   1a098:	str	r1, [r0]
   1a09c:	b	1a198 <main@@Base+0x6ec0>
   1a0a0:	movw	r0, #29292	; 0x726c
   1a0a4:	lsr	r3, r1, #8
   1a0a8:	movw	r7, #29793	; 0x7461
   1a0ac:	movt	r0, #117	; 0x75
   1a0b0:	orr	r3, r3, r2, lsl #24
   1a0b4:	movt	r7, #25697	; 0x6461
   1a0b8:	eor	r0, r0, r2, lsr #8
   1a0bc:	eor	r3, r3, r7
   1a0c0:	orrs	r0, r3, r0
   1a0c4:	bne	1a11c <main@@Base+0x6e44>
   1a0c8:	cmp	lr, #8
   1a0cc:	mov	r1, r9
   1a0d0:	blt	1a41c <main@@Base+0x7144>
   1a0d4:	ldr	r1, [sp, #32]
   1a0d8:	mov	r2, r9
   1a0dc:	ldrb	r0, [r2, #7]!
   1a0e0:	ldr	r1, [r1]
   1a0e4:	cmp	r1, #0
   1a0e8:	beq	1a1bc <main@@Base+0x6ee4>
   1a0ec:	cmp	r0, #33	; 0x21
   1a0f0:	bcc	1a100 <main@@Base+0x6e28>
   1a0f4:	cmp	r0, #58	; 0x3a
   1a0f8:	mov	r1, r9
   1a0fc:	bne	1a41c <main@@Base+0x7144>
   1a100:	ldr	r0, [sp, #32]
   1a104:	mov	r1, #0
   1a108:	str	r1, [r0]
   1a10c:	b	1a1cc <main@@Base+0x6ef4>
   1a110:	mov	r0, r8
   1a114:	mov	r1, r9
   1a118:	b	1a4e8 <main@@Base+0x7210>
   1a11c:	movw	r0, #29556	; 0x7374
   1a120:	bfc	r1, #0, #16
   1a124:	movt	r0, #28261	; 0x6e65
   1a128:	eor	r0, r2, r0
   1a12c:	movw	r2, #0
   1a130:	movt	r2, #25956	; 0x6564
   1a134:	eor	r1, r1, r2
   1a138:	orrs	r0, r1, r0
   1a13c:	bne	1a4d8 <main@@Base+0x7200>
   1a140:	cmp	lr, #7
   1a144:	mov	r1, r9
   1a148:	blt	1a47c <main@@Base+0x71a4>
   1a14c:	ldr	r1, [sp, #32]
   1a150:	mov	r2, r9
   1a154:	ldrb	r0, [r2, #6]!
   1a158:	ldr	r1, [r1]
   1a15c:	cmp	r1, #0
   1a160:	beq	1a1f0 <main@@Base+0x6f18>
   1a164:	cmp	r0, #33	; 0x21
   1a168:	bcc	1a178 <main@@Base+0x6ea0>
   1a16c:	cmp	r0, #58	; 0x3a
   1a170:	mov	r1, r9
   1a174:	bne	1a47c <main@@Base+0x71a4>
   1a178:	ldr	r0, [sp, #32]
   1a17c:	mov	r1, #0
   1a180:	str	r1, [r0]
   1a184:	b	1a200 <main@@Base+0x6f28>
   1a188:	cmp	r0, #34	; 0x22
   1a18c:	mov	r1, r9
   1a190:	bne	1a3bc <main@@Base+0x70e4>
   1a194:	add	r2, r9, #5
   1a198:	ldr	r0, [sp, #44]	; 0x2c
   1a19c:	sub	r0, r0, r2
   1a1a0:	cmp	r0, #2
   1a1a4:	blt	1a238 <main@@Base+0x6f60>
   1a1a8:	ldrb	r0, [r2]
   1a1ac:	cmp	r0, #32
   1a1b0:	bls	1a224 <main@@Base+0x6f4c>
   1a1b4:	mov	r1, r2
   1a1b8:	b	1a24c <main@@Base+0x6f74>
   1a1bc:	cmp	r0, #34	; 0x22
   1a1c0:	mov	r1, r9
   1a1c4:	bne	1a41c <main@@Base+0x7144>
   1a1c8:	add	r2, r9, #8
   1a1cc:	ldr	r0, [sp, #44]	; 0x2c
   1a1d0:	sub	r0, r0, r2
   1a1d4:	cmp	r0, #2
   1a1d8:	blt	1a2b4 <main@@Base+0x6fdc>
   1a1dc:	ldrb	r0, [r2]
   1a1e0:	cmp	r0, #32
   1a1e4:	bls	1a2a0 <main@@Base+0x6fc8>
   1a1e8:	mov	r1, r2
   1a1ec:	b	1a2c8 <main@@Base+0x6ff0>
   1a1f0:	cmp	r0, #34	; 0x22
   1a1f4:	mov	r1, r9
   1a1f8:	bne	1a47c <main@@Base+0x71a4>
   1a1fc:	add	r2, r9, #7
   1a200:	ldr	r0, [sp, #44]	; 0x2c
   1a204:	sub	r0, r0, r2
   1a208:	cmp	r0, #2
   1a20c:	blt	1a330 <main@@Base+0x7058>
   1a210:	ldrb	r0, [r2]
   1a214:	cmp	r0, #32
   1a218:	bls	1a31c <main@@Base+0x7044>
   1a21c:	mov	r1, r2
   1a220:	b	1a344 <main@@Base+0x706c>
   1a224:	bne	1a238 <main@@Base+0x6f60>
   1a228:	mov	r1, r2
   1a22c:	ldrb	r0, [r1, #1]!
   1a230:	cmp	r0, #32
   1a234:	bhi	1a24c <main@@Base+0x6f74>
   1a238:	mov	r1, r2
   1a23c:	ldr	r0, [sp, #36]	; 0x24
   1a240:	ldr	r2, [sp, #44]	; 0x2c
   1a244:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a248:	mov	r1, r0
   1a24c:	ldr	r0, [sp, #44]	; 0x2c
   1a250:	cmp	r1, r0
   1a254:	beq	1a28c <main@@Base+0x6fb4>
   1a258:	ldrb	r0, [r1]
   1a25c:	cmp	r0, #58	; 0x3a
   1a260:	bne	1a28c <main@@Base+0x6fb4>
   1a264:	ldr	r0, [sp, #44]	; 0x2c
   1a268:	add	r2, r1, #1
   1a26c:	sub	r0, r0, r2
   1a270:	cmp	r0, #2
   1a274:	blt	1a3a8 <main@@Base+0x70d0>
   1a278:	ldrb	r0, [r2]
   1a27c:	cmp	r0, #32
   1a280:	bls	1a398 <main@@Base+0x70c0>
   1a284:	mov	r1, r2
   1a288:	b	1a3bc <main@@Base+0x70e4>
   1a28c:	ldr	r0, [sp, #36]	; 0x24
   1a290:	ldr	r2, [sp, #44]	; 0x2c
   1a294:	mov	r3, #4
   1a298:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1a29c:	b	1a3b8 <main@@Base+0x70e0>
   1a2a0:	bne	1a2b4 <main@@Base+0x6fdc>
   1a2a4:	mov	r1, r2
   1a2a8:	ldrb	r0, [r1, #1]!
   1a2ac:	cmp	r0, #32
   1a2b0:	bhi	1a2c8 <main@@Base+0x6ff0>
   1a2b4:	mov	r1, r2
   1a2b8:	ldr	r0, [sp, #36]	; 0x24
   1a2bc:	ldr	r2, [sp, #44]	; 0x2c
   1a2c0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a2c4:	mov	r1, r0
   1a2c8:	ldr	r0, [sp, #44]	; 0x2c
   1a2cc:	cmp	r1, r0
   1a2d0:	beq	1a308 <main@@Base+0x7030>
   1a2d4:	ldrb	r0, [r1]
   1a2d8:	cmp	r0, #58	; 0x3a
   1a2dc:	bne	1a308 <main@@Base+0x7030>
   1a2e0:	ldr	r0, [sp, #44]	; 0x2c
   1a2e4:	add	r2, r1, #1
   1a2e8:	sub	r0, r0, r2
   1a2ec:	cmp	r0, #2
   1a2f0:	blt	1a408 <main@@Base+0x7130>
   1a2f4:	ldrb	r0, [r2]
   1a2f8:	cmp	r0, #32
   1a2fc:	bls	1a3f8 <main@@Base+0x7120>
   1a300:	mov	r1, r2
   1a304:	b	1a41c <main@@Base+0x7144>
   1a308:	ldr	r0, [sp, #36]	; 0x24
   1a30c:	ldr	r2, [sp, #44]	; 0x2c
   1a310:	mov	r3, #4
   1a314:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1a318:	b	1a418 <main@@Base+0x7140>
   1a31c:	bne	1a330 <main@@Base+0x7058>
   1a320:	mov	r1, r2
   1a324:	ldrb	r0, [r1, #1]!
   1a328:	cmp	r0, #32
   1a32c:	bhi	1a344 <main@@Base+0x706c>
   1a330:	mov	r1, r2
   1a334:	ldr	r0, [sp, #36]	; 0x24
   1a338:	ldr	r2, [sp, #44]	; 0x2c
   1a33c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a340:	mov	r1, r0
   1a344:	ldr	r0, [sp, #44]	; 0x2c
   1a348:	cmp	r1, r0
   1a34c:	beq	1a384 <main@@Base+0x70ac>
   1a350:	ldrb	r0, [r1]
   1a354:	cmp	r0, #58	; 0x3a
   1a358:	bne	1a384 <main@@Base+0x70ac>
   1a35c:	ldr	r0, [sp, #44]	; 0x2c
   1a360:	add	r2, r1, #1
   1a364:	sub	r0, r0, r2
   1a368:	cmp	r0, #2
   1a36c:	blt	1a468 <main@@Base+0x7190>
   1a370:	ldrb	r0, [r2]
   1a374:	cmp	r0, #32
   1a378:	bls	1a458 <main@@Base+0x7180>
   1a37c:	mov	r1, r2
   1a380:	b	1a47c <main@@Base+0x71a4>
   1a384:	ldr	r0, [sp, #36]	; 0x24
   1a388:	ldr	r2, [sp, #44]	; 0x2c
   1a38c:	mov	r3, #4
   1a390:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1a394:	b	1a478 <main@@Base+0x71a0>
   1a398:	bne	1a3a8 <main@@Base+0x70d0>
   1a39c:	ldrb	r0, [r1, #2]!
   1a3a0:	cmp	r0, #32
   1a3a4:	bhi	1a3bc <main@@Base+0x70e4>
   1a3a8:	mov	r1, r2
   1a3ac:	ldr	r0, [sp, #36]	; 0x24
   1a3b0:	ldr	r2, [sp, #44]	; 0x2c
   1a3b4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a3b8:	mov	r1, r0
   1a3bc:	cmp	r9, r1
   1a3c0:	beq	1a4d8 <main@@Base+0x7200>
   1a3c4:	mov	r0, #0
   1a3c8:	ldr	r2, [sp, #44]	; 0x2c
   1a3cc:	sub	r3, fp, #56	; 0x38
   1a3d0:	str	r0, [sp]
   1a3d4:	ldr	r0, [sp, #36]	; 0x24
   1a3d8:	bl	2f2f8 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1a3dc:	mov	r4, r0
   1a3e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a3e4:	cmp	r0, #0
   1a3e8:	beq	1c97c <main@@Base+0x96a4>
   1a3ec:	ldr	r0, [sp, #36]	; 0x24
   1a3f0:	mov	r1, #0
   1a3f4:	b	1a4b4 <main@@Base+0x71dc>
   1a3f8:	bne	1a408 <main@@Base+0x7130>
   1a3fc:	ldrb	r0, [r1, #2]!
   1a400:	cmp	r0, #32
   1a404:	bhi	1a41c <main@@Base+0x7144>
   1a408:	mov	r1, r2
   1a40c:	ldr	r0, [sp, #36]	; 0x24
   1a410:	ldr	r2, [sp, #44]	; 0x2c
   1a414:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a418:	mov	r1, r0
   1a41c:	cmp	r9, r1
   1a420:	beq	1a4d8 <main@@Base+0x7200>
   1a424:	mov	r0, #1
   1a428:	ldr	r2, [sp, #44]	; 0x2c
   1a42c:	sub	r3, fp, #56	; 0x38
   1a430:	str	r0, [sp]
   1a434:	ldr	r0, [sp, #36]	; 0x24
   1a438:	bl	2f2f8 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1a43c:	mov	r4, r0
   1a440:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a444:	cmp	r0, #0
   1a448:	beq	1c97c <main@@Base+0x96a4>
   1a44c:	ldr	r0, [sp, #36]	; 0x24
   1a450:	mov	r1, #1
   1a454:	b	1a4b4 <main@@Base+0x71dc>
   1a458:	bne	1a468 <main@@Base+0x7190>
   1a45c:	ldrb	r0, [r1, #2]!
   1a460:	cmp	r0, #32
   1a464:	bhi	1a47c <main@@Base+0x71a4>
   1a468:	mov	r1, r2
   1a46c:	ldr	r0, [sp, #36]	; 0x24
   1a470:	ldr	r2, [sp, #44]	; 0x2c
   1a474:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a478:	mov	r1, r0
   1a47c:	cmp	r9, r1
   1a480:	beq	1a4d8 <main@@Base+0x7200>
   1a484:	mov	r0, #0
   1a488:	ldr	r2, [sp, #44]	; 0x2c
   1a48c:	sub	r3, fp, #56	; 0x38
   1a490:	str	r0, [sp]
   1a494:	ldr	r0, [sp, #36]	; 0x24
   1a498:	bl	2f2f8 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1a49c:	mov	r4, r0
   1a4a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a4a4:	cmp	r0, #0
   1a4a8:	beq	1c97c <main@@Base+0x96a4>
   1a4ac:	ldr	r0, [sp, #36]	; 0x24
   1a4b0:	mov	r1, #2
   1a4b4:	ldr	r0, [r0]
   1a4b8:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   1a4bc:	cmp	r0, #0
   1a4c0:	beq	1c97c <main@@Base+0x96a4>
   1a4c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1a4c8:	str	r1, [r0]
   1a4cc:	ldr	r5, [sp, #44]	; 0x2c
   1a4d0:	ldr	r8, [sp, #36]	; 0x24
   1a4d4:	b	1a4f4 <main@@Base+0x721c>
   1a4d8:	ldr	r8, [sp, #36]	; 0x24
   1a4dc:	ldr	r5, [sp, #44]	; 0x2c
   1a4e0:	mov	r1, r9
   1a4e4:	mov	r0, r8
   1a4e8:	mov	r2, r5
   1a4ec:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1a4f0:	mov	r4, r0
   1a4f4:	sub	r0, r5, r4
   1a4f8:	cmp	r0, #2
   1a4fc:	blt	1a528 <main@@Base+0x7250>
   1a500:	ldrb	r0, [r4]
   1a504:	cmp	r0, #32
   1a508:	bls	1a514 <main@@Base+0x723c>
   1a50c:	mov	r2, r4
   1a510:	b	1a53c <main@@Base+0x7264>
   1a514:	bne	1a528 <main@@Base+0x7250>
   1a518:	mov	r2, r4
   1a51c:	ldrb	r0, [r2, #1]!
   1a520:	cmp	r0, #32
   1a524:	bhi	1a53c <main@@Base+0x7264>
   1a528:	mov	r0, r8
   1a52c:	mov	r1, r4
   1a530:	mov	r2, r5
   1a534:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a538:	mov	r2, r0
   1a53c:	cmp	r2, r5
   1a540:	beq	1ad84 <main@@Base+0x7aac>
   1a544:	ldrb	r0, [r2]
   1a548:	cmp	r0, #44	; 0x2c
   1a54c:	bne	1af8c <main@@Base+0x7cb4>
   1a550:	add	r1, r2, #1
   1a554:	sub	r0, r5, r1
   1a558:	cmp	r0, #2
   1a55c:	blt	1a584 <main@@Base+0x72ac>
   1a560:	ldrb	r0, [r1]
   1a564:	cmp	r0, #32
   1a568:	bls	1a574 <main@@Base+0x729c>
   1a56c:	mov	r2, r1
   1a570:	b	1a594 <main@@Base+0x72bc>
   1a574:	bne	1a584 <main@@Base+0x72ac>
   1a578:	ldrb	r0, [r2, #2]!
   1a57c:	cmp	r0, #32
   1a580:	bhi	1a594 <main@@Base+0x72bc>
   1a584:	mov	r0, r8
   1a588:	mov	r2, r5
   1a58c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a590:	mov	r2, r0
   1a594:	cmp	r2, r5
   1a598:	beq	1afd0 <main@@Base+0x7cf8>
   1a59c:	ldrb	r0, [r2]
   1a5a0:	cmp	r0, #125	; 0x7d
   1a5a4:	bne	19f14 <main@@Base+0x6c3c>
   1a5a8:	b	1af9c <main@@Base+0x7cc4>
   1a5ac:	ldr	r5, [sp, #44]	; 0x2c
   1a5b0:	ldr	r8, [sp, #36]	; 0x24
   1a5b4:	ldr	sl, [sp, #40]	; 0x28
   1a5b8:	bne	1a5c8 <main@@Base+0x72f0>
   1a5bc:	ldrb	r0, [r4, #2]!
   1a5c0:	cmp	r0, #32
   1a5c4:	bhi	1a5d8 <main@@Base+0x7300>
   1a5c8:	mov	r0, r8
   1a5cc:	mov	r2, r5
   1a5d0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a5d4:	mov	r4, r0
   1a5d8:	cmp	r7, r4
   1a5dc:	beq	1a634 <main@@Base+0x735c>
   1a5e0:	ldr	r0, [r8]
   1a5e4:	mov	r1, #8
   1a5e8:	mov	r2, #8
   1a5ec:	mvn	r3, #-536870912	; 0xe0000000
   1a5f0:	bl	2a240 <flatcc_builder_start_vector@@Base>
   1a5f4:	cmp	r0, #0
   1a5f8:	bne	1cedc <main@@Base+0x9c04>
   1a5fc:	cmp	r4, r5
   1a600:	beq	1a640 <main@@Base+0x7368>
   1a604:	ldrb	r0, [r4]
   1a608:	cmp	r0, #91	; 0x5b
   1a60c:	bne	1a640 <main@@Base+0x7368>
   1a610:	add	r1, r4, #1
   1a614:	sub	r0, r5, r1
   1a618:	cmp	r0, #2
   1a61c:	blt	1ada0 <main@@Base+0x7ac8>
   1a620:	ldrb	r0, [r1]
   1a624:	cmp	r0, #32
   1a628:	bls	1ad90 <main@@Base+0x7ab8>
   1a62c:	mov	r4, r1
   1a630:	b	1adb0 <main@@Base+0x7ad8>
   1a634:	mov	r0, r8
   1a638:	mov	r1, r7
   1a63c:	b	1b1dc <main@@Base+0x7f04>
   1a640:	ldr	r8, [sp, #36]	; 0x24
   1a644:	mov	r1, r4
   1a648:	mov	r2, r5
   1a64c:	mov	r3, #22
   1a650:	mov	r0, r8
   1a654:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1a658:	mov	r4, r0
   1a65c:	ldr	r0, [r8]
   1a660:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   1a664:	cmp	r0, #0
   1a668:	str	r0, [sp, #52]	; 0x34
   1a66c:	beq	1cea4 <main@@Base+0x9bcc>
   1a670:	ldr	r0, [r8]
   1a674:	mov	r1, #33	; 0x21
   1a678:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   1a67c:	cmp	r0, #0
   1a680:	beq	1cea4 <main@@Base+0x9bcc>
   1a684:	ldr	r1, [sp, #52]	; 0x34
   1a688:	str	r1, [r0]
   1a68c:	b	1b354 <main@@Base+0x807c>
   1a690:	mov	r6, r0
   1a694:	ldr	r5, [sp, #44]	; 0x2c
   1a698:	ldr	r8, [sp, #36]	; 0x24
   1a69c:	str	r6, [fp, #-60]	; 0xffffffc4
   1a6a0:	ldr	sl, [sp, #40]	; 0x28
   1a6a4:	cmp	r7, r4
   1a6a8:	bne	1a6e8 <main@@Base+0x7410>
   1a6ac:	movw	r3, #16668	; 0x411c
   1a6b0:	sub	r0, fp, #60	; 0x3c
   1a6b4:	mov	r1, r7
   1a6b8:	mov	r2, r5
   1a6bc:	str	r0, [sp]
   1a6c0:	mov	r0, r8
   1a6c4:	movt	r3, #4
   1a6c8:	bl	228d8 <main@@Base+0xf600>
   1a6cc:	mov	r4, r0
   1a6d0:	cmp	r0, r7
   1a6d4:	cmpne	r4, r5
   1a6d8:	beq	1ced8 <main@@Base+0x9c00>
   1a6dc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1a6e0:	ldr	r8, [sp, #36]	; 0x24
   1a6e4:	ldr	sl, [sp, #40]	; 0x28
   1a6e8:	cmp	r6, #0
   1a6ec:	bne	1a6fc <main@@Base+0x7424>
   1a6f0:	ldrb	r0, [r8, #8]
   1a6f4:	tst	r0, #2
   1a6f8:	beq	1b1e8 <main@@Base+0x7f10>
   1a6fc:	ldr	r0, [r8]
   1a700:	mov	r1, #20
   1a704:	mov	r2, #4
   1a708:	mov	r3, #4
   1a70c:	bl	2b8dc <flatcc_builder_table_add@@Base>
   1a710:	cmp	r0, #0
   1a714:	beq	1ced8 <main@@Base+0x9c00>
   1a718:	str	r6, [r0]
   1a71c:	b	1b1e8 <main@@Base+0x7f10>
   1a720:	ldr	r5, [sp, #44]	; 0x2c
   1a724:	ldr	r8, [sp, #36]	; 0x24
   1a728:	bne	1a738 <main@@Base+0x7460>
   1a72c:	ldrb	r0, [r4, #2]!
   1a730:	cmp	r0, #32
   1a734:	bhi	1a748 <main@@Base+0x7470>
   1a738:	mov	r0, r8
   1a73c:	mov	r2, r5
   1a740:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a744:	mov	r4, r0
   1a748:	cmp	r4, r5
   1a74c:	beq	1a7b8 <main@@Base+0x74e0>
   1a750:	ldrb	r0, [r4]
   1a754:	cmp	r0, #93	; 0x5d
   1a758:	bne	1a7b4 <main@@Base+0x74dc>
   1a75c:	ldr	r5, [sp, #44]	; 0x2c
   1a760:	ldr	r8, [sp, #36]	; 0x24
   1a764:	ldr	sl, [sp, #40]	; 0x28
   1a768:	add	r1, r4, #1
   1a76c:	sub	r0, r5, r1
   1a770:	cmp	r0, #2
   1a774:	blt	1a7a0 <main@@Base+0x74c8>
   1a778:	ldrb	r0, [r1]
   1a77c:	cmp	r0, #32
   1a780:	bhi	1c6e0 <main@@Base+0x9408>
   1a784:	ldr	r5, [sp, #44]	; 0x2c
   1a788:	ldr	r8, [sp, #36]	; 0x24
   1a78c:	ldr	sl, [sp, #40]	; 0x28
   1a790:	bne	1a7a0 <main@@Base+0x74c8>
   1a794:	ldrb	r0, [r4, #2]!
   1a798:	cmp	r0, #32
   1a79c:	bhi	1ccf0 <main@@Base+0x9a18>
   1a7a0:	mov	r0, r8
   1a7a4:	mov	r2, r5
   1a7a8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a7ac:	mov	r4, r0
   1a7b0:	b	1ccf0 <main@@Base+0x9a18>
   1a7b4:	mov	r5, r4
   1a7b8:	mov	r0, #0
   1a7bc:	mov	r1, #1
   1a7c0:	str	r0, [sp, #60]	; 0x3c
   1a7c4:	str	r0, [sp, #56]	; 0x38
   1a7c8:	ldr	r0, [sp, #36]	; 0x24
   1a7cc:	ldr	r0, [r0]
   1a7d0:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   1a7d4:	cmp	r0, #0
   1a7d8:	beq	1ceac <main@@Base+0x9bd4>
   1a7dc:	mov	r4, r5
   1a7e0:	ldr	r5, [sp, #44]	; 0x2c
   1a7e4:	ldr	r8, [sp, #36]	; 0x24
   1a7e8:	mov	r7, r0
   1a7ec:	mov	r0, #0
   1a7f0:	cmp	r4, r5
   1a7f4:	str	r0, [fp, #-52]	; 0xffffffcc
   1a7f8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a7fc:	str	r0, [sp, #60]	; 0x3c
   1a800:	str	r0, [sp, #56]	; 0x38
   1a804:	str	r0, [fp, #-60]	; 0xffffffc4
   1a808:	beq	1a868 <main@@Base+0x7590>
   1a80c:	sub	r0, fp, #56	; 0x38
   1a810:	mov	r1, r4
   1a814:	mov	r2, r5
   1a818:	sub	r3, fp, #60	; 0x3c
   1a81c:	str	r0, [sp]
   1a820:	mov	r0, r8
   1a824:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1a828:	cmp	r0, r4
   1a82c:	beq	1a874 <main@@Base+0x759c>
   1a830:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a834:	mov	r1, r0
   1a838:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a83c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a840:	cmp	r2, #0
   1a844:	beq	1a884 <main@@Base+0x75ac>
   1a848:	rsbs	r2, r0, #0
   1a84c:	mov	r2, #-2147483648	; 0x80000000
   1a850:	sbcs	r2, r2, r3
   1a854:	bcs	1a8b4 <main@@Base+0x75dc>
   1a858:	ldr	r8, [sp, #36]	; 0x24
   1a85c:	ldr	r5, [sp, #44]	; 0x2c
   1a860:	mov	r3, #8
   1a864:	b	1a898 <main@@Base+0x75c0>
   1a868:	mov	r3, #0
   1a86c:	mov	r1, r5
   1a870:	b	1a8cc <main@@Base+0x75f4>
   1a874:	mov	r0, #0
   1a878:	mov	r3, #0
   1a87c:	mov	r1, r4
   1a880:	b	1a8cc <main@@Base+0x75f4>
   1a884:	cmn	r3, #1
   1a888:	bgt	1a8bc <main@@Base+0x75e4>
   1a88c:	ldr	r8, [sp, #36]	; 0x24
   1a890:	ldr	r5, [sp, #44]	; 0x2c
   1a894:	mov	r3, #7
   1a898:	mov	r0, r8
   1a89c:	mov	r2, r5
   1a8a0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1a8a4:	mov	r1, r0
   1a8a8:	mov	r0, #0
   1a8ac:	mov	r3, #0
   1a8b0:	b	1a8cc <main@@Base+0x75f4>
   1a8b4:	rsbs	r0, r0, #0
   1a8b8:	rsc	r3, r3, #0
   1a8bc:	ldr	r5, [sp, #44]	; 0x2c
   1a8c0:	ldr	r8, [sp, #36]	; 0x24
   1a8c4:	str	r0, [sp, #56]	; 0x38
   1a8c8:	str	r3, [sp, #60]	; 0x3c
   1a8cc:	cmp	r4, r1
   1a8d0:	bne	1a910 <main@@Base+0x7638>
   1a8d4:	movw	r3, #16776	; 0x4188
   1a8d8:	add	r0, sp, #56	; 0x38
   1a8dc:	mov	r1, r4
   1a8e0:	mov	r2, r5
   1a8e4:	str	r0, [sp]
   1a8e8:	mov	r0, r8
   1a8ec:	movt	r3, #4
   1a8f0:	bl	22b10 <main@@Base+0xf838>
   1a8f4:	mov	r1, r0
   1a8f8:	cmp	r0, r4
   1a8fc:	cmpne	r1, r5
   1a900:	beq	1ceb4 <main@@Base+0x9bdc>
   1a904:	ldr	r0, [sp, #56]	; 0x38
   1a908:	ldr	r3, [sp, #60]	; 0x3c
   1a90c:	ldr	r8, [sp, #36]	; 0x24
   1a910:	stm	r7, {r0, r3}
   1a914:	sub	r0, r5, r1
   1a918:	cmp	r0, #2
   1a91c:	blt	1a948 <main@@Base+0x7670>
   1a920:	ldrb	r0, [r1]
   1a924:	cmp	r0, #32
   1a928:	bls	1a934 <main@@Base+0x765c>
   1a92c:	mov	r4, r1
   1a930:	b	1a958 <main@@Base+0x7680>
   1a934:	bne	1a948 <main@@Base+0x7670>
   1a938:	mov	r4, r1
   1a93c:	ldrb	r0, [r4, #1]!
   1a940:	cmp	r0, #32
   1a944:	bhi	1a958 <main@@Base+0x7680>
   1a948:	mov	r0, r8
   1a94c:	mov	r2, r5
   1a950:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a954:	mov	r4, r0
   1a958:	cmp	r4, r5
   1a95c:	beq	1bce4 <main@@Base+0x8a0c>
   1a960:	ldrb	r0, [r4]
   1a964:	cmp	r0, #44	; 0x2c
   1a968:	bne	1bcf8 <main@@Base+0x8a20>
   1a96c:	add	r1, r4, #1
   1a970:	sub	r0, r5, r1
   1a974:	cmp	r0, #2
   1a978:	blt	1a9a0 <main@@Base+0x76c8>
   1a97c:	ldrb	r0, [r1]
   1a980:	cmp	r0, #32
   1a984:	bls	1a990 <main@@Base+0x76b8>
   1a988:	mov	r4, r1
   1a98c:	b	1a9b0 <main@@Base+0x76d8>
   1a990:	bne	1a9a0 <main@@Base+0x76c8>
   1a994:	ldrb	r0, [r4, #2]!
   1a998:	cmp	r0, #32
   1a99c:	bhi	1a9b0 <main@@Base+0x76d8>
   1a9a0:	mov	r0, r8
   1a9a4:	mov	r2, r5
   1a9a8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1a9ac:	mov	r4, r0
   1a9b0:	cmp	r4, r5
   1a9b4:	beq	1bd18 <main@@Base+0x8a40>
   1a9b8:	ldrb	r0, [r4]
   1a9bc:	cmp	r0, #93	; 0x5d
   1a9c0:	beq	1c6c4 <main@@Base+0x93ec>
   1a9c4:	mov	r0, #0
   1a9c8:	mov	r1, #1
   1a9cc:	str	r0, [sp, #60]	; 0x3c
   1a9d0:	str	r0, [sp, #56]	; 0x38
   1a9d4:	ldr	r0, [r8]
   1a9d8:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   1a9dc:	mov	r7, r0
   1a9e0:	cmp	r0, #0
   1a9e4:	bne	1a7ec <main@@Base+0x7514>
   1a9e8:	b	13390 <main@@Base+0xb8>
   1a9ec:	ldr	r5, [sp, #44]	; 0x2c
   1a9f0:	ldr	r8, [sp, #36]	; 0x24
   1a9f4:	ldr	sl, [sp, #40]	; 0x28
   1a9f8:	bne	1aa08 <main@@Base+0x7730>
   1a9fc:	ldrb	r0, [r7, #2]!
   1aa00:	cmp	r0, #32
   1aa04:	bhi	1aa18 <main@@Base+0x7740>
   1aa08:	mov	r0, r8
   1aa0c:	mov	r2, r5
   1aa10:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1aa14:	mov	r7, r0
   1aa18:	cmp	r4, r7
   1aa1c:	beq	1b1d4 <main@@Base+0x7efc>
   1aa20:	mov	r6, #0
   1aa24:	cmp	r7, r5
   1aa28:	str	r6, [fp, #-52]	; 0xffffffcc
   1aa2c:	str	r6, [fp, #-56]	; 0xffffffc8
   1aa30:	str	r6, [sp, #60]	; 0x3c
   1aa34:	str	r6, [sp, #56]	; 0x38
   1aa38:	str	r6, [fp, #-60]	; 0xffffffc4
   1aa3c:	beq	1aa98 <main@@Base+0x77c0>
   1aa40:	sub	r0, fp, #56	; 0x38
   1aa44:	mov	r1, r7
   1aa48:	mov	r2, r5
   1aa4c:	sub	r3, fp, #60	; 0x3c
   1aa50:	str	r0, [sp]
   1aa54:	mov	r0, r8
   1aa58:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1aa5c:	cmp	r0, r7
   1aa60:	beq	1aaa4 <main@@Base+0x77cc>
   1aa64:	sub	r9, fp, #60	; 0x3c
   1aa68:	mov	r4, r0
   1aa6c:	ldm	r9, {r0, r6, r9}
   1aa70:	cmp	r0, #0
   1aa74:	beq	1aab4 <main@@Base+0x77dc>
   1aa78:	subs	r0, r6, #1
   1aa7c:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1aa80:	bcc	1aae4 <main@@Base+0x780c>
   1aa84:	ldr	r8, [sp, #36]	; 0x24
   1aa88:	ldr	r2, [sp, #44]	; 0x2c
   1aa8c:	mov	r1, r4
   1aa90:	mov	r3, #8
   1aa94:	b	1aacc <main@@Base+0x77f4>
   1aa98:	mov	r9, #0
   1aa9c:	mov	r4, r5
   1aaa0:	b	1aaf8 <main@@Base+0x7820>
   1aaa4:	mov	r6, #0
   1aaa8:	mov	r9, #0
   1aaac:	mov	r4, r7
   1aab0:	b	1aaf4 <main@@Base+0x781c>
   1aab4:	cmn	r9, #1
   1aab8:	bgt	1aaec <main@@Base+0x7814>
   1aabc:	ldr	r8, [sp, #36]	; 0x24
   1aac0:	ldr	r2, [sp, #44]	; 0x2c
   1aac4:	mov	r1, r4
   1aac8:	mov	r3, #7
   1aacc:	mov	r0, r8
   1aad0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1aad4:	mov	r4, r0
   1aad8:	mov	r6, #0
   1aadc:	mov	r9, #0
   1aae0:	b	1aaf8 <main@@Base+0x7820>
   1aae4:	rsbs	r6, r6, #0
   1aae8:	rsc	r9, r9, #0
   1aaec:	str	r6, [sp, #56]	; 0x38
   1aaf0:	str	r9, [sp, #60]	; 0x3c
   1aaf4:	ldr	r8, [sp, #36]	; 0x24
   1aaf8:	cmp	r7, r4
   1aafc:	bne	1ab40 <main@@Base+0x7868>
   1ab00:	ldr	r2, [sp, #44]	; 0x2c
   1ab04:	movw	r3, #16692	; 0x4134
   1ab08:	add	r0, sp, #56	; 0x38
   1ab0c:	mov	r1, r7
   1ab10:	str	r0, [sp]
   1ab14:	mov	r0, r8
   1ab18:	movt	r3, #4
   1ab1c:	bl	22b10 <main@@Base+0xf838>
   1ab20:	cmp	r0, r7
   1ab24:	mov	r4, r0
   1ab28:	ldrne	r0, [sp, #44]	; 0x2c
   1ab2c:	cmpne	r4, r0
   1ab30:	beq	1ced8 <main@@Base+0x9c00>
   1ab34:	ldr	r6, [sp, #56]	; 0x38
   1ab38:	ldr	r9, [sp, #60]	; 0x3c
   1ab3c:	ldr	r8, [sp, #36]	; 0x24
   1ab40:	orrs	r0, r6, r9
   1ab44:	bne	1ab54 <main@@Base+0x787c>
   1ab48:	ldrb	r0, [r8, #8]
   1ab4c:	tst	r0, #2
   1ab50:	beq	1b354 <main@@Base+0x807c>
   1ab54:	ldr	r0, [r8]
   1ab58:	mov	r1, #22
   1ab5c:	mov	r2, #8
   1ab60:	mov	r3, #8
   1ab64:	bl	2b8dc <flatcc_builder_table_add@@Base>
   1ab68:	cmp	r0, #0
   1ab6c:	beq	1ced8 <main@@Base+0x9c00>
   1ab70:	stm	r0, {r6, r9}
   1ab74:	b	1b354 <main@@Base+0x807c>
   1ab78:	ldr	sl, [sp, #40]	; 0x28
   1ab7c:	mov	r4, r5
   1ab80:	b	18bb8 <main@@Base+0x58e0>
   1ab84:	cmp	r0, #93	; 0x5d
   1ab88:	bne	1c9bc <main@@Base+0x96e4>
   1ab8c:	ldr	r5, [sp, #44]	; 0x2c
   1ab90:	ldr	r8, [sp, #36]	; 0x24
   1ab94:	add	r1, r2, #1
   1ab98:	sub	r0, r5, r1
   1ab9c:	cmp	r0, #2
   1aba0:	ldr	sl, [sp, #40]	; 0x28
   1aba4:	blt	1cb20 <main@@Base+0x9848>
   1aba8:	ldrb	r0, [r1]
   1abac:	cmp	r0, #32
   1abb0:	bls	1cb00 <main@@Base+0x9828>
   1abb4:	ldr	r5, [sp, #44]	; 0x2c
   1abb8:	ldr	r8, [sp, #36]	; 0x24
   1abbc:	ldr	sl, [sp, #40]	; 0x28
   1abc0:	mov	r4, r1
   1abc4:	b	18bb8 <main@@Base+0x58e0>
   1abc8:	mov	r0, r8
   1abcc:	mov	r1, r5
   1abd0:	b	1c9cc <main@@Base+0x96f4>
   1abd4:	ldr	r5, [sp, #44]	; 0x2c
   1abd8:	bne	1abe8 <main@@Base+0x7910>
   1abdc:	ldrb	r0, [r4, #2]!
   1abe0:	cmp	r0, #32
   1abe4:	bhi	1abf8 <main@@Base+0x7920>
   1abe8:	ldr	r0, [sp, #36]	; 0x24
   1abec:	mov	r2, r5
   1abf0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1abf4:	mov	r4, r0
   1abf8:	cmp	r4, r5
   1abfc:	mov	r3, r5
   1ac00:	beq	1ac54 <main@@Base+0x797c>
   1ac04:	ldrb	r0, [r4]
   1ac08:	cmp	r0, #125	; 0x7d
   1ac0c:	bne	1ac50 <main@@Base+0x7978>
   1ac10:	ldr	r5, [sp, #44]	; 0x2c
   1ac14:	ldr	r8, [sp, #36]	; 0x24
   1ac18:	add	r1, r4, #1
   1ac1c:	sub	r0, r5, r1
   1ac20:	cmp	r0, #2
   1ac24:	blt	1cd2c <main@@Base+0x9a54>
   1ac28:	ldrb	r0, [r1]
   1ac2c:	cmp	r0, #32
   1ac30:	bhi	1c6b4 <main@@Base+0x93dc>
   1ac34:	ldr	r5, [sp, #44]	; 0x2c
   1ac38:	ldr	r8, [sp, #36]	; 0x24
   1ac3c:	bne	1cd2c <main@@Base+0x9a54>
   1ac40:	ldrb	r0, [r4, #2]!
   1ac44:	cmp	r0, #32
   1ac48:	bhi	18a48 <main@@Base+0x5770>
   1ac4c:	b	1cd2c <main@@Base+0x9a54>
   1ac50:	mov	r3, r4
   1ac54:	ldr	r5, [sp, #44]	; 0x2c
   1ac58:	ldr	r8, [sp, #36]	; 0x24
   1ac5c:	cmp	r3, r5
   1ac60:	mov	r1, r5
   1ac64:	beq	1acbc <main@@Base+0x79e4>
   1ac68:	ldrb	r0, [r3]
   1ac6c:	cmp	r0, #46	; 0x2e
   1ac70:	beq	1ac90 <main@@Base+0x79b8>
   1ac74:	cmp	r0, #34	; 0x22
   1ac78:	bne	1acac <main@@Base+0x79d4>
   1ac7c:	ldr	r0, [sp, #32]
   1ac80:	mov	r1, #0
   1ac84:	str	r1, [r0]
   1ac88:	add	r1, r3, #1
   1ac8c:	b	1acbc <main@@Base+0x79e4>
   1ac90:	mov	r1, r3
   1ac94:	mov	r0, r8
   1ac98:	mov	r2, r5
   1ac9c:	mov	r3, #5
   1aca0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1aca4:	mov	r1, r0
   1aca8:	b	1acbc <main@@Base+0x79e4>
   1acac:	ldr	r0, [sp, #32]
   1acb0:	mov	r1, #1
   1acb4:	str	r1, [r0]
   1acb8:	mov	r1, r3
   1acbc:	mov	r0, r8
   1acc0:	mov	r2, r5
   1acc4:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1acc8:	mov	r2, r0
   1accc:	sub	r0, r5, r0
   1acd0:	cmp	r0, #2
   1acd4:	blt	1ad00 <main@@Base+0x7a28>
   1acd8:	ldrb	r0, [r2]
   1acdc:	cmp	r0, #32
   1ace0:	bls	1acec <main@@Base+0x7a14>
   1ace4:	mov	r3, r2
   1ace8:	b	1ad14 <main@@Base+0x7a3c>
   1acec:	bne	1ad00 <main@@Base+0x7a28>
   1acf0:	mov	r3, r2
   1acf4:	ldrb	r0, [r3, #1]!
   1acf8:	cmp	r0, #32
   1acfc:	bhi	1ad14 <main@@Base+0x7a3c>
   1ad00:	mov	r1, r2
   1ad04:	mov	r0, r8
   1ad08:	mov	r2, r5
   1ad0c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ad10:	mov	r3, r0
   1ad14:	cmp	r3, r5
   1ad18:	beq	1bd10 <main@@Base+0x8a38>
   1ad1c:	ldrb	r0, [r3]
   1ad20:	cmp	r0, #44	; 0x2c
   1ad24:	bne	1c688 <main@@Base+0x93b0>
   1ad28:	add	r1, r3, #1
   1ad2c:	sub	r0, r5, r1
   1ad30:	cmp	r0, #2
   1ad34:	blt	1ad5c <main@@Base+0x7a84>
   1ad38:	ldrb	r0, [r1]
   1ad3c:	cmp	r0, #32
   1ad40:	bls	1ad4c <main@@Base+0x7a74>
   1ad44:	mov	r3, r1
   1ad48:	b	1ad6c <main@@Base+0x7a94>
   1ad4c:	bne	1ad5c <main@@Base+0x7a84>
   1ad50:	ldrb	r0, [r3, #2]!
   1ad54:	cmp	r0, #32
   1ad58:	bhi	1ad6c <main@@Base+0x7a94>
   1ad5c:	mov	r0, r8
   1ad60:	mov	r2, r5
   1ad64:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ad68:	mov	r3, r0
   1ad6c:	cmp	r3, r5
   1ad70:	beq	1c6e8 <main@@Base+0x9410>
   1ad74:	ldrb	r0, [r3]
   1ad78:	cmp	r0, #125	; 0x7d
   1ad7c:	bne	1ac5c <main@@Base+0x7984>
   1ad80:	b	1c698 <main@@Base+0x93c0>
   1ad84:	ldr	sl, [sp, #40]	; 0x28
   1ad88:	mov	r4, r5
   1ad8c:	b	18270 <main@@Base+0x4f98>
   1ad90:	bne	1ada0 <main@@Base+0x7ac8>
   1ad94:	ldrb	r0, [r4, #2]!
   1ad98:	cmp	r0, #32
   1ad9c:	bhi	1adb0 <main@@Base+0x7ad8>
   1ada0:	ldr	r0, [sp, #36]	; 0x24
   1ada4:	ldr	r2, [sp, #44]	; 0x2c
   1ada8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1adac:	mov	r4, r0
   1adb0:	ldr	r7, [sp, #44]	; 0x2c
   1adb4:	cmp	r4, r7
   1adb8:	beq	1ae14 <main@@Base+0x7b3c>
   1adbc:	ldrb	r0, [r4]
   1adc0:	cmp	r0, #93	; 0x5d
   1adc4:	bne	1ae10 <main@@Base+0x7b38>
   1adc8:	ldr	r0, [sp, #44]	; 0x2c
   1adcc:	ldr	r8, [sp, #36]	; 0x24
   1add0:	add	r1, r4, #1
   1add4:	sub	r0, r0, r1
   1add8:	cmp	r0, #2
   1addc:	blt	1ae00 <main@@Base+0x7b28>
   1ade0:	ldrb	r0, [r1]
   1ade4:	cmp	r0, #32
   1ade8:	bhi	1ca94 <main@@Base+0x97bc>
   1adec:	ldr	r8, [sp, #36]	; 0x24
   1adf0:	bne	1ae00 <main@@Base+0x7b28>
   1adf4:	ldrb	r0, [r4, #2]!
   1adf8:	cmp	r0, #32
   1adfc:	bhi	1a65c <main@@Base+0x7384>
   1ae00:	ldr	r2, [sp, #44]	; 0x2c
   1ae04:	mov	r0, r8
   1ae08:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ae0c:	b	1a658 <main@@Base+0x7380>
   1ae10:	mov	r7, r4
   1ae14:	mov	r0, #0
   1ae18:	mov	r1, #1
   1ae1c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ae20:	str	r0, [fp, #-56]	; 0xffffffc8
   1ae24:	ldr	r0, [sp, #36]	; 0x24
   1ae28:	ldr	r0, [r0]
   1ae2c:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   1ae30:	cmp	r0, #0
   1ae34:	beq	1cebc <main@@Base+0x9be4>
   1ae38:	ldr	r5, [sp, #44]	; 0x2c
   1ae3c:	ldr	r8, [sp, #36]	; 0x24
   1ae40:	mov	r9, r0
   1ae44:	mov	r4, r7
   1ae48:	mov	r0, r8
   1ae4c:	mov	r1, r4
   1ae50:	mov	r2, r5
   1ae54:	sub	r3, fp, #56	; 0x38
   1ae58:	bl	2e700 <flatcc_json_parser_double@@Base>
   1ae5c:	mov	r7, r0
   1ae60:	cmp	r4, r0
   1ae64:	bne	1aea4 <main@@Base+0x7bcc>
   1ae68:	movw	r3, #16764	; 0x417c
   1ae6c:	sub	r0, fp, #56	; 0x38
   1ae70:	mov	r1, r4
   1ae74:	mov	r2, r5
   1ae78:	str	r0, [sp]
   1ae7c:	mov	r0, r8
   1ae80:	movt	r3, #4
   1ae84:	bl	23194 <main@@Base+0xfebc>
   1ae88:	mov	r7, r0
   1ae8c:	cmp	r0, r4
   1ae90:	beq	1cebc <main@@Base+0x9be4>
   1ae94:	ldr	r5, [sp, #44]	; 0x2c
   1ae98:	ldr	r8, [sp, #36]	; 0x24
   1ae9c:	cmp	r7, r5
   1aea0:	beq	1cec4 <main@@Base+0x9bec>
   1aea4:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1aea8:	sub	r0, r5, r7
   1aeac:	cmp	r0, #2
   1aeb0:	vstr	d16, [r9]
   1aeb4:	blt	1aee0 <main@@Base+0x7c08>
   1aeb8:	ldrb	r0, [r7]
   1aebc:	cmp	r0, #32
   1aec0:	bls	1aecc <main@@Base+0x7bf4>
   1aec4:	mov	r4, r7
   1aec8:	b	1aef4 <main@@Base+0x7c1c>
   1aecc:	bne	1aee0 <main@@Base+0x7c08>
   1aed0:	mov	r4, r7
   1aed4:	ldrb	r0, [r4, #1]!
   1aed8:	cmp	r0, #32
   1aedc:	bhi	1aef4 <main@@Base+0x7c1c>
   1aee0:	mov	r0, r8
   1aee4:	mov	r1, r7
   1aee8:	mov	r2, r5
   1aeec:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1aef0:	mov	r4, r0
   1aef4:	cmp	r4, r5
   1aef8:	beq	1c9ec <main@@Base+0x9714>
   1aefc:	ldrb	r0, [r4]
   1af00:	cmp	r0, #44	; 0x2c
   1af04:	bne	1c9f4 <main@@Base+0x971c>
   1af08:	add	r1, r4, #1
   1af0c:	sub	r0, r5, r1
   1af10:	cmp	r0, #2
   1af14:	blt	1af3c <main@@Base+0x7c64>
   1af18:	ldrb	r0, [r1]
   1af1c:	cmp	r0, #32
   1af20:	bls	1af2c <main@@Base+0x7c54>
   1af24:	mov	r4, r1
   1af28:	b	1af4c <main@@Base+0x7c74>
   1af2c:	bne	1af3c <main@@Base+0x7c64>
   1af30:	ldrb	r0, [r4, #2]!
   1af34:	cmp	r0, #32
   1af38:	bhi	1af4c <main@@Base+0x7c74>
   1af3c:	mov	r0, r8
   1af40:	mov	r2, r5
   1af44:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1af48:	mov	r4, r0
   1af4c:	cmp	r4, r5
   1af50:	beq	1ca0c <main@@Base+0x9734>
   1af54:	ldrb	r0, [r4]
   1af58:	cmp	r0, #93	; 0x5d
   1af5c:	beq	1ca78 <main@@Base+0x97a0>
   1af60:	mov	r0, #0
   1af64:	mov	r1, #1
   1af68:	str	r0, [fp, #-52]	; 0xffffffcc
   1af6c:	str	r0, [fp, #-56]	; 0xffffffc8
   1af70:	ldr	r0, [r8]
   1af74:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   1af78:	mov	r9, r0
   1af7c:	cmp	r0, #0
   1af80:	mov	r7, r4
   1af84:	bne	1ae48 <main@@Base+0x7b70>
   1af88:	b	1cec4 <main@@Base+0x9bec>
   1af8c:	cmp	r0, #125	; 0x7d
   1af90:	bne	1ca24 <main@@Base+0x974c>
   1af94:	ldr	r5, [sp, #44]	; 0x2c
   1af98:	ldr	r8, [sp, #36]	; 0x24
   1af9c:	add	r1, r2, #1
   1afa0:	sub	r0, r5, r1
   1afa4:	cmp	r0, #2
   1afa8:	ldr	sl, [sp, #40]	; 0x28
   1afac:	blt	1cc74 <main@@Base+0x999c>
   1afb0:	ldrb	r0, [r1]
   1afb4:	cmp	r0, #32
   1afb8:	bls	1cc54 <main@@Base+0x997c>
   1afbc:	ldr	r5, [sp, #44]	; 0x2c
   1afc0:	ldr	r8, [sp, #36]	; 0x24
   1afc4:	ldr	sl, [sp, #40]	; 0x28
   1afc8:	mov	r4, r1
   1afcc:	b	18270 <main@@Base+0x4f98>
   1afd0:	mov	r0, r8
   1afd4:	mov	r1, r5
   1afd8:	b	1ca34 <main@@Base+0x975c>
   1afdc:	ldr	r5, [sp, #44]	; 0x2c
   1afe0:	ldr	r8, [sp, #36]	; 0x24
   1afe4:	bne	1aff4 <main@@Base+0x7d1c>
   1afe8:	ldrb	r0, [r7, #2]!
   1afec:	cmp	r0, #32
   1aff0:	bhi	1b004 <main@@Base+0x7d2c>
   1aff4:	mov	r0, r8
   1aff8:	mov	r2, r5
   1affc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b000:	mov	r7, r0
   1b004:	ldr	sl, [sp, #40]	; 0x28
   1b008:	cmp	r4, r7
   1b00c:	beq	1b1d4 <main@@Base+0x7efc>
   1b010:	mov	r6, #0
   1b014:	cmp	r7, r5
   1b018:	str	r6, [fp, #-52]	; 0xffffffcc
   1b01c:	str	r6, [fp, #-56]	; 0xffffffc8
   1b020:	str	r6, [fp, #-60]	; 0xffffffc4
   1b024:	str	r6, [sp, #56]	; 0x38
   1b028:	beq	1b074 <main@@Base+0x7d9c>
   1b02c:	sub	r0, fp, #56	; 0x38
   1b030:	mov	r1, r7
   1b034:	mov	r2, r5
   1b038:	add	r3, sp, #56	; 0x38
   1b03c:	str	r0, [sp]
   1b040:	ldr	r0, [sp, #36]	; 0x24
   1b044:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1b048:	cmp	r0, r7
   1b04c:	beq	1b07c <main@@Base+0x7da4>
   1b050:	mov	r4, r0
   1b054:	ldr	r0, [sp, #56]	; 0x38
   1b058:	cmp	r0, #0
   1b05c:	beq	1b084 <main@@Base+0x7dac>
   1b060:	ldr	r0, [sp, #36]	; 0x24
   1b064:	ldr	r2, [sp, #44]	; 0x2c
   1b068:	mov	r1, r4
   1b06c:	mov	r3, #8
   1b070:	b	1b0a0 <main@@Base+0x7dc8>
   1b074:	mov	r4, r5
   1b078:	b	1b0a8 <main@@Base+0x7dd0>
   1b07c:	mov	r4, r7
   1b080:	b	1b0a8 <main@@Base+0x7dd0>
   1b084:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1b088:	cmp	r0, #0
   1b08c:	beq	1c9e0 <main@@Base+0x9708>
   1b090:	ldr	r0, [sp, #36]	; 0x24
   1b094:	ldr	r2, [sp, #44]	; 0x2c
   1b098:	mov	r1, r4
   1b09c:	mov	r3, #7
   1b0a0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1b0a4:	mov	r4, r0
   1b0a8:	cmp	r7, r4
   1b0ac:	bne	1b0e8 <main@@Base+0x7e10>
   1b0b0:	sub	r0, fp, #60	; 0x3c
   1b0b4:	ldr	r2, [sp, #44]	; 0x2c
   1b0b8:	movw	r3, #16716	; 0x414c
   1b0bc:	mov	r1, r7
   1b0c0:	str	r0, [sp]
   1b0c4:	ldr	r0, [sp, #36]	; 0x24
   1b0c8:	movt	r3, #4
   1b0cc:	bl	22d58 <main@@Base+0xfa80>
   1b0d0:	cmp	r0, r7
   1b0d4:	mov	r4, r0
   1b0d8:	ldrne	r0, [sp, #44]	; 0x2c
   1b0dc:	cmpne	r4, r0
   1b0e0:	beq	1ced8 <main@@Base+0x9c00>
   1b0e4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1b0e8:	ldr	r8, [sp, #36]	; 0x24
   1b0ec:	cmp	r6, #0
   1b0f0:	bne	1b100 <main@@Base+0x7e28>
   1b0f4:	ldrb	r0, [r8, #8]
   1b0f8:	tst	r0, #2
   1b0fc:	beq	1b354 <main@@Base+0x807c>
   1b100:	ldr	r0, [r8]
   1b104:	mov	r1, #21
   1b108:	mov	r2, #4
   1b10c:	mov	r3, #4
   1b110:	bl	2b8dc <flatcc_builder_table_add@@Base>
   1b114:	cmp	r0, #0
   1b118:	beq	1ced8 <main@@Base+0x9c00>
   1b11c:	ldr	r8, [sp, #36]	; 0x24
   1b120:	str	r6, [r0]
   1b124:	b	1b354 <main@@Base+0x807c>
   1b128:	ldr	r5, [sp, #44]	; 0x2c
   1b12c:	ldr	r8, [sp, #36]	; 0x24
   1b130:	bne	1b140 <main@@Base+0x7e68>
   1b134:	ldrb	r0, [r7, #2]!
   1b138:	cmp	r0, #32
   1b13c:	bhi	1b150 <main@@Base+0x7e78>
   1b140:	mov	r0, r8
   1b144:	mov	r2, r5
   1b148:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b14c:	mov	r7, r0
   1b150:	ldr	sl, [sp, #40]	; 0x28
   1b154:	cmp	r4, r7
   1b158:	beq	1b1d4 <main@@Base+0x7efc>
   1b15c:	mov	r6, #0
   1b160:	cmp	r7, r5
   1b164:	str	r6, [fp, #-52]	; 0xffffffcc
   1b168:	str	r6, [fp, #-56]	; 0xffffffc8
   1b16c:	str	r6, [sp, #60]	; 0x3c
   1b170:	str	r6, [sp, #56]	; 0x38
   1b174:	str	r6, [fp, #-60]	; 0xffffffc4
   1b178:	beq	1b2a8 <main@@Base+0x7fd0>
   1b17c:	sub	r0, fp, #56	; 0x38
   1b180:	mov	r1, r7
   1b184:	mov	r2, r5
   1b188:	sub	r3, fp, #60	; 0x3c
   1b18c:	str	r0, [sp]
   1b190:	ldr	r0, [sp, #36]	; 0x24
   1b194:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1b198:	cmp	r0, r7
   1b19c:	beq	1b2b4 <main@@Base+0x7fdc>
   1b1a0:	mov	r4, r0
   1b1a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1b1a8:	cmp	r0, #0
   1b1ac:	beq	1b2c4 <main@@Base+0x7fec>
   1b1b0:	ldr	r0, [sp, #36]	; 0x24
   1b1b4:	ldr	r2, [sp, #44]	; 0x2c
   1b1b8:	mov	r1, r4
   1b1bc:	mov	r3, #8
   1b1c0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1b1c4:	mov	r4, r0
   1b1c8:	mov	r6, #0
   1b1cc:	mov	r9, #0
   1b1d0:	b	1b2d4 <main@@Base+0x7ffc>
   1b1d4:	mov	r0, r8
   1b1d8:	mov	r1, r4
   1b1dc:	mov	r2, r5
   1b1e0:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1b1e4:	mov	r4, r0
   1b1e8:	sub	r0, r5, r4
   1b1ec:	cmp	r0, #2
   1b1f0:	blt	1b21c <main@@Base+0x7f44>
   1b1f4:	ldrb	r0, [r4]
   1b1f8:	cmp	r0, #32
   1b1fc:	bls	1b208 <main@@Base+0x7f30>
   1b200:	mov	r2, r4
   1b204:	b	1b230 <main@@Base+0x7f58>
   1b208:	bne	1b21c <main@@Base+0x7f44>
   1b20c:	mov	r2, r4
   1b210:	ldrb	r0, [r2, #1]!
   1b214:	cmp	r0, #32
   1b218:	bhi	1b230 <main@@Base+0x7f58>
   1b21c:	mov	r0, r8
   1b220:	mov	r1, r4
   1b224:	mov	r2, r5
   1b228:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b22c:	mov	r2, r0
   1b230:	cmp	r2, r5
   1b234:	beq	1cdf0 <main@@Base+0x9b18>
   1b238:	ldrb	r0, [r2]
   1b23c:	cmp	r0, #44	; 0x2c
   1b240:	bne	1cdf8 <main@@Base+0x9b20>
   1b244:	add	r1, r2, #1
   1b248:	sub	r0, r5, r1
   1b24c:	cmp	r0, #2
   1b250:	blt	1b278 <main@@Base+0x7fa0>
   1b254:	ldrb	r0, [r1]
   1b258:	cmp	r0, #32
   1b25c:	bls	1b268 <main@@Base+0x7f90>
   1b260:	mov	r2, r1
   1b264:	b	1b288 <main@@Base+0x7fb0>
   1b268:	bne	1b278 <main@@Base+0x7fa0>
   1b26c:	ldrb	r0, [r2, #2]!
   1b270:	cmp	r0, #32
   1b274:	bhi	1b288 <main@@Base+0x7fb0>
   1b278:	mov	r0, r8
   1b27c:	mov	r2, r5
   1b280:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b284:	mov	r2, r0
   1b288:	cmp	r2, r5
   1b28c:	beq	1ce48 <main@@Base+0x9b70>
   1b290:	ldrb	r0, [r2]
   1b294:	movw	lr, #29556	; 0x7374
   1b298:	movt	lr, #29797	; 0x7465
   1b29c:	cmp	r0, #125	; 0x7d
   1b2a0:	bne	13540 <main@@Base+0x268>
   1b2a4:	b	1ce00 <main@@Base+0x9b28>
   1b2a8:	mov	r9, #0
   1b2ac:	mov	r4, r5
   1b2b0:	b	1b2d4 <main@@Base+0x7ffc>
   1b2b4:	mov	r6, #0
   1b2b8:	mov	r9, #0
   1b2bc:	mov	r4, r7
   1b2c0:	b	1b2d4 <main@@Base+0x7ffc>
   1b2c4:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1b2c8:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1b2cc:	str	r9, [sp, #60]	; 0x3c
   1b2d0:	str	r6, [sp, #56]	; 0x38
   1b2d4:	cmp	r7, r4
   1b2d8:	bne	1b318 <main@@Base+0x8040>
   1b2dc:	add	r0, sp, #56	; 0x38
   1b2e0:	ldr	r2, [sp, #44]	; 0x2c
   1b2e4:	movw	r3, #16740	; 0x4164
   1b2e8:	mov	r1, r7
   1b2ec:	str	r0, [sp]
   1b2f0:	ldr	r0, [sp, #36]	; 0x24
   1b2f4:	movt	r3, #4
   1b2f8:	bl	22f7c <main@@Base+0xfca4>
   1b2fc:	cmp	r0, r7
   1b300:	mov	r4, r0
   1b304:	ldrne	r0, [sp, #44]	; 0x2c
   1b308:	cmpne	r4, r0
   1b30c:	beq	1ced8 <main@@Base+0x9c00>
   1b310:	ldr	r6, [sp, #56]	; 0x38
   1b314:	ldr	r9, [sp, #60]	; 0x3c
   1b318:	ldr	r8, [sp, #36]	; 0x24
   1b31c:	orrs	r0, r6, r9
   1b320:	bne	1b330 <main@@Base+0x8058>
   1b324:	ldrb	r0, [r8, #8]
   1b328:	tst	r0, #2
   1b32c:	beq	1b354 <main@@Base+0x807c>
   1b330:	ldr	r0, [r8]
   1b334:	mov	r1, #23
   1b338:	mov	r2, #8
   1b33c:	mov	r3, #8
   1b340:	bl	2b8dc <flatcc_builder_table_add@@Base>
   1b344:	cmp	r0, #0
   1b348:	beq	1ced8 <main@@Base+0x9c00>
   1b34c:	stm	r0, {r6, r9}
   1b350:	ldr	r8, [sp, #36]	; 0x24
   1b354:	ldr	r5, [sp, #44]	; 0x2c
   1b358:	b	1689c <main@@Base+0x35c4>
   1b35c:	ldr	r8, [sp, #36]	; 0x24
   1b360:	ldr	r5, [sp, #44]	; 0x2c
   1b364:	mov	r1, r4
   1b368:	mov	r3, #9
   1b36c:	mov	r0, r8
   1b370:	mov	r2, r5
   1b374:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1b378:	ldr	sl, [sp, #40]	; 0x28
   1b37c:	b	168b8 <main@@Base+0x35e0>
   1b380:	ldr	sl, [sp, #40]	; 0x28
   1b384:	mov	r4, r5
   1b388:	b	19440 <main@@Base+0x6168>
   1b38c:	bne	1b39c <main@@Base+0x80c4>
   1b390:	ldrb	r0, [r4, #2]!
   1b394:	cmp	r0, #32
   1b398:	bhi	1b3ac <main@@Base+0x80d4>
   1b39c:	ldr	r0, [sp, #36]	; 0x24
   1b3a0:	ldr	r2, [sp, #44]	; 0x2c
   1b3a4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b3a8:	mov	r4, r0
   1b3ac:	ldr	r2, [sp, #44]	; 0x2c
   1b3b0:	cmp	r4, r2
   1b3b4:	beq	1b3fc <main@@Base+0x8124>
   1b3b8:	ldrb	r0, [r4]
   1b3bc:	cmp	r0, #125	; 0x7d
   1b3c0:	bne	1b3f8 <main@@Base+0x8120>
   1b3c4:	ldr	r0, [sp, #44]	; 0x2c
   1b3c8:	add	r1, r4, #1
   1b3cc:	sub	r0, r0, r1
   1b3d0:	cmp	r0, #2
   1b3d4:	blt	1cde0 <main@@Base+0x9b08>
   1b3d8:	ldrb	r0, [r1]
   1b3dc:	cmp	r0, #32
   1b3e0:	bhi	1cb9c <main@@Base+0x98c4>
   1b3e4:	bne	1cde0 <main@@Base+0x9b08>
   1b3e8:	ldrb	r0, [r4, #2]!
   1b3ec:	cmp	r0, #32
   1b3f0:	bhi	18e58 <main@@Base+0x5b80>
   1b3f4:	b	1cde0 <main@@Base+0x9b08>
   1b3f8:	mov	r2, r4
   1b3fc:	ldr	r5, [sp, #44]	; 0x2c
   1b400:	ldr	r6, [sp, #36]	; 0x24
   1b404:	cmp	r2, r5
   1b408:	mov	r9, r5
   1b40c:	beq	1b460 <main@@Base+0x8188>
   1b410:	ldrb	r0, [r2]
   1b414:	cmp	r0, #46	; 0x2e
   1b418:	beq	1b434 <main@@Base+0x815c>
   1b41c:	cmp	r0, #34	; 0x22
   1b420:	bne	1b450 <main@@Base+0x8178>
   1b424:	ldr	r0, [sp, #32]
   1b428:	mov	r1, #0
   1b42c:	add	r9, r2, #1
   1b430:	b	1b45c <main@@Base+0x8184>
   1b434:	mov	r1, r2
   1b438:	mov	r0, r6
   1b43c:	mov	r2, r5
   1b440:	mov	r3, #5
   1b444:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1b448:	mov	r9, r0
   1b44c:	b	1b460 <main@@Base+0x8188>
   1b450:	ldr	r0, [sp, #32]
   1b454:	mov	r1, #1
   1b458:	mov	r9, r2
   1b45c:	str	r1, [r0]
   1b460:	sub	lr, r5, r9
   1b464:	mov	r0, #8
   1b468:	cmp	lr, #8
   1b46c:	movcc	r0, lr
   1b470:	and	r0, r0, #15
   1b474:	sub	r7, r0, #1
   1b478:	cmp	r7, #7
   1b47c:	bhi	1bba0 <main@@Base+0x88c8>
   1b480:	add	r4, pc, #32
   1b484:	mov	r1, #0
   1b488:	mov	ip, #0
   1b48c:	mov	r8, #0
   1b490:	mov	r6, #0
   1b494:	mov	r3, #0
   1b498:	mov	r5, #0
   1b49c:	mov	r2, #0
   1b4a0:	mov	r0, #0
   1b4a4:	ldr	pc, [r4, r7, lsl #2]
   1b4a8:	andeq	fp, r1, ip, lsl #10
   1b4ac:	andeq	fp, r1, r4, lsl #10
   1b4b0:	strdeq	fp, [r1], -ip
   1b4b4:	strdeq	fp, [r1], -r4
   1b4b8:	andeq	fp, r1, r8, ror #9
   1b4bc:	ldrdeq	fp, [r1], -ip
   1b4c0:	andeq	fp, r1, ip, asr #9
   1b4c4:	andeq	fp, r1, r8, asr #9
   1b4c8:	ldrb	ip, [r9, #7]
   1b4cc:	ldrb	r0, [r9, #6]
   1b4d0:	mov	r8, r1
   1b4d4:	orr	r0, ip, r0, lsl #8
   1b4d8:	mov	r1, r0
   1b4dc:	ldrb	r0, [r9, #5]
   1b4e0:	mov	r6, r8
   1b4e4:	orr	r1, r1, r0, lsl #16
   1b4e8:	ldrb	r0, [r9, #4]
   1b4ec:	mov	r3, r6
   1b4f0:	orr	r1, r1, r0, lsl #24
   1b4f4:	ldrb	r0, [r9, #3]
   1b4f8:	orr	r5, r0, r3
   1b4fc:	ldrb	r0, [r9, #2]
   1b500:	orr	r2, r5, r0, lsl #8
   1b504:	ldrb	r0, [r9, #1]
   1b508:	orr	r0, r2, r0, lsl #16
   1b50c:	ldrb	r2, [r9]
   1b510:	orr	r2, r0, r2, lsl #24
   1b514:	movw	r0, #65535	; 0xffff
   1b518:	movt	r0, #26979	; 0x6963
   1b51c:	cmp	r2, r0
   1b520:	bhi	1b588 <main@@Base+0x82b0>
   1b524:	movw	r0, #30062	; 0x756e
   1b528:	and	r1, r1, #-16777216	; 0xff000000
   1b52c:	movt	r0, #25455	; 0x636f
   1b530:	eor	r1, r1, #1946157056	; 0x74000000
   1b534:	eor	r0, r2, r0
   1b538:	orrs	r0, r1, r0
   1b53c:	bne	1bba0 <main@@Base+0x88c8>
   1b540:	cmp	lr, #6
   1b544:	mov	r7, r9
   1b548:	blt	1b870 <main@@Base+0x8598>
   1b54c:	ldr	r2, [sp, #32]
   1b550:	mov	r1, r9
   1b554:	ldrb	r0, [r1, #5]!
   1b558:	ldr	r2, [r2]
   1b55c:	cmp	r2, #0
   1b560:	beq	1b640 <main@@Base+0x8368>
   1b564:	cmp	r0, #33	; 0x21
   1b568:	bcc	1b578 <main@@Base+0x82a0>
   1b56c:	cmp	r0, #58	; 0x3a
   1b570:	mov	r7, r9
   1b574:	bne	1b870 <main@@Base+0x8598>
   1b578:	ldr	r0, [sp, #32]
   1b57c:	mov	r2, #0
   1b580:	str	r2, [r0]
   1b584:	b	1b650 <main@@Base+0x8378>
   1b588:	movw	r1, #27648	; 0x6c00
   1b58c:	bic	r0, r2, #255	; 0xff
   1b590:	movt	r1, #30305	; 0x7661
   1b594:	teq	r0, r1
   1b598:	bne	1b5e4 <main@@Base+0x830c>
   1b59c:	cmp	lr, #4
   1b5a0:	mov	r7, r9
   1b5a4:	blt	1b9cc <main@@Base+0x86f4>
   1b5a8:	ldr	r2, [sp, #32]
   1b5ac:	mov	r1, r9
   1b5b0:	ldrb	r0, [r1, #3]!
   1b5b4:	ldr	r2, [r2]
   1b5b8:	cmp	r2, #0
   1b5bc:	beq	1b674 <main@@Base+0x839c>
   1b5c0:	cmp	r0, #33	; 0x21
   1b5c4:	bcc	1b5d4 <main@@Base+0x82fc>
   1b5c8:	cmp	r0, #58	; 0x3a
   1b5cc:	mov	r7, r9
   1b5d0:	bne	1b9cc <main@@Base+0x86f4>
   1b5d4:	ldr	r0, [sp, #32]
   1b5d8:	mov	r2, #0
   1b5dc:	str	r2, [r0]
   1b5e0:	b	1b684 <main@@Base+0x83ac>
   1b5e4:	movw	r0, #0
   1b5e8:	bfc	r2, #0, #16
   1b5ec:	movt	r0, #26980	; 0x6964
   1b5f0:	teq	r2, r0
   1b5f4:	bne	1bba0 <main@@Base+0x88c8>
   1b5f8:	cmp	lr, #3
   1b5fc:	mov	r1, r9
   1b600:	blt	1bb4c <main@@Base+0x8874>
   1b604:	ldr	r1, [sp, #32]
   1b608:	mov	r2, r9
   1b60c:	ldrb	r0, [r2, #2]!
   1b610:	ldr	r1, [r1]
   1b614:	cmp	r1, #0
   1b618:	beq	1b6a8 <main@@Base+0x83d0>
   1b61c:	cmp	r0, #33	; 0x21
   1b620:	bcc	1b630 <main@@Base+0x8358>
   1b624:	cmp	r0, #58	; 0x3a
   1b628:	mov	r1, r9
   1b62c:	bne	1bb4c <main@@Base+0x8874>
   1b630:	ldr	r0, [sp, #32]
   1b634:	mov	r1, #0
   1b638:	str	r1, [r0]
   1b63c:	b	1b6b8 <main@@Base+0x83e0>
   1b640:	cmp	r0, #34	; 0x22
   1b644:	mov	r7, r9
   1b648:	bne	1b870 <main@@Base+0x8598>
   1b64c:	add	r1, r9, #6
   1b650:	ldr	r0, [sp, #44]	; 0x2c
   1b654:	sub	r0, r0, r1
   1b658:	cmp	r0, #2
   1b65c:	blt	1b6f0 <main@@Base+0x8418>
   1b660:	ldrb	r0, [r1]
   1b664:	cmp	r0, #32
   1b668:	bls	1b6dc <main@@Base+0x8404>
   1b66c:	mov	r7, r1
   1b670:	b	1b700 <main@@Base+0x8428>
   1b674:	cmp	r0, #34	; 0x22
   1b678:	mov	r7, r9
   1b67c:	bne	1b9cc <main@@Base+0x86f4>
   1b680:	add	r1, r9, #4
   1b684:	ldr	r0, [sp, #44]	; 0x2c
   1b688:	sub	r0, r0, r1
   1b68c:	cmp	r0, #2
   1b690:	blt	1b76c <main@@Base+0x8494>
   1b694:	ldrb	r0, [r1]
   1b698:	cmp	r0, #32
   1b69c:	bls	1b758 <main@@Base+0x8480>
   1b6a0:	mov	r7, r1
   1b6a4:	b	1b77c <main@@Base+0x84a4>
   1b6a8:	cmp	r0, #34	; 0x22
   1b6ac:	mov	r1, r9
   1b6b0:	bne	1bb4c <main@@Base+0x8874>
   1b6b4:	add	r2, r9, #3
   1b6b8:	ldr	r0, [sp, #44]	; 0x2c
   1b6bc:	sub	r0, r0, r2
   1b6c0:	cmp	r0, #2
   1b6c4:	blt	1b7e8 <main@@Base+0x8510>
   1b6c8:	ldrb	r0, [r2]
   1b6cc:	cmp	r0, #32
   1b6d0:	bls	1b7d4 <main@@Base+0x84fc>
   1b6d4:	mov	r1, r2
   1b6d8:	b	1b7fc <main@@Base+0x8524>
   1b6dc:	bne	1b6f0 <main@@Base+0x8418>
   1b6e0:	mov	r7, r1
   1b6e4:	ldrb	r0, [r7, #1]!
   1b6e8:	cmp	r0, #32
   1b6ec:	bhi	1b700 <main@@Base+0x8428>
   1b6f0:	ldr	r0, [sp, #36]	; 0x24
   1b6f4:	ldr	r2, [sp, #44]	; 0x2c
   1b6f8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b6fc:	mov	r7, r0
   1b700:	ldr	r0, [sp, #44]	; 0x2c
   1b704:	cmp	r7, r0
   1b708:	beq	1b740 <main@@Base+0x8468>
   1b70c:	ldrb	r0, [r7]
   1b710:	cmp	r0, #58	; 0x3a
   1b714:	bne	1b740 <main@@Base+0x8468>
   1b718:	ldr	r0, [sp, #44]	; 0x2c
   1b71c:	add	r1, r7, #1
   1b720:	sub	r0, r0, r1
   1b724:	cmp	r0, #2
   1b728:	blt	1b860 <main@@Base+0x8588>
   1b72c:	ldrb	r0, [r1]
   1b730:	cmp	r0, #32
   1b734:	bls	1b850 <main@@Base+0x8578>
   1b738:	mov	r7, r1
   1b73c:	b	1b870 <main@@Base+0x8598>
   1b740:	ldr	r0, [sp, #36]	; 0x24
   1b744:	ldr	r2, [sp, #44]	; 0x2c
   1b748:	mov	r1, r7
   1b74c:	mov	r3, #4
   1b750:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1b754:	b	1b86c <main@@Base+0x8594>
   1b758:	bne	1b76c <main@@Base+0x8494>
   1b75c:	mov	r7, r1
   1b760:	ldrb	r0, [r7, #1]!
   1b764:	cmp	r0, #32
   1b768:	bhi	1b77c <main@@Base+0x84a4>
   1b76c:	ldr	r0, [sp, #36]	; 0x24
   1b770:	ldr	r2, [sp, #44]	; 0x2c
   1b774:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b778:	mov	r7, r0
   1b77c:	ldr	r0, [sp, #44]	; 0x2c
   1b780:	cmp	r7, r0
   1b784:	beq	1b7bc <main@@Base+0x84e4>
   1b788:	ldrb	r0, [r7]
   1b78c:	cmp	r0, #58	; 0x3a
   1b790:	bne	1b7bc <main@@Base+0x84e4>
   1b794:	ldr	r0, [sp, #44]	; 0x2c
   1b798:	add	r1, r7, #1
   1b79c:	sub	r0, r0, r1
   1b7a0:	cmp	r0, #2
   1b7a4:	blt	1b9bc <main@@Base+0x86e4>
   1b7a8:	ldrb	r0, [r1]
   1b7ac:	cmp	r0, #32
   1b7b0:	bls	1b9ac <main@@Base+0x86d4>
   1b7b4:	mov	r7, r1
   1b7b8:	b	1b9cc <main@@Base+0x86f4>
   1b7bc:	ldr	r0, [sp, #36]	; 0x24
   1b7c0:	ldr	r2, [sp, #44]	; 0x2c
   1b7c4:	mov	r1, r7
   1b7c8:	mov	r3, #4
   1b7cc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1b7d0:	b	1b9c8 <main@@Base+0x86f0>
   1b7d4:	bne	1b7e8 <main@@Base+0x8510>
   1b7d8:	mov	r1, r2
   1b7dc:	ldrb	r0, [r1, #1]!
   1b7e0:	cmp	r0, #32
   1b7e4:	bhi	1b7fc <main@@Base+0x8524>
   1b7e8:	mov	r1, r2
   1b7ec:	ldr	r0, [sp, #36]	; 0x24
   1b7f0:	ldr	r2, [sp, #44]	; 0x2c
   1b7f4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b7f8:	mov	r1, r0
   1b7fc:	ldr	r0, [sp, #44]	; 0x2c
   1b800:	cmp	r1, r0
   1b804:	beq	1b83c <main@@Base+0x8564>
   1b808:	ldrb	r0, [r1]
   1b80c:	cmp	r0, #58	; 0x3a
   1b810:	bne	1b83c <main@@Base+0x8564>
   1b814:	ldr	r0, [sp, #44]	; 0x2c
   1b818:	add	r2, r1, #1
   1b81c:	sub	r0, r0, r2
   1b820:	cmp	r0, #2
   1b824:	blt	1bb38 <main@@Base+0x8860>
   1b828:	ldrb	r0, [r2]
   1b82c:	cmp	r0, #32
   1b830:	bls	1bb28 <main@@Base+0x8850>
   1b834:	mov	r1, r2
   1b838:	b	1bb4c <main@@Base+0x8874>
   1b83c:	ldr	r0, [sp, #36]	; 0x24
   1b840:	ldr	r2, [sp, #44]	; 0x2c
   1b844:	mov	r3, #4
   1b848:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1b84c:	b	1bb48 <main@@Base+0x8870>
   1b850:	bne	1b860 <main@@Base+0x8588>
   1b854:	ldrb	r0, [r7, #2]!
   1b858:	cmp	r0, #32
   1b85c:	bhi	1b870 <main@@Base+0x8598>
   1b860:	ldr	r0, [sp, #36]	; 0x24
   1b864:	ldr	r2, [sp, #44]	; 0x2c
   1b868:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b86c:	mov	r7, r0
   1b870:	cmp	r9, r7
   1b874:	beq	1bba0 <main@@Base+0x88c8>
   1b878:	ldr	r0, [sp, #44]	; 0x2c
   1b87c:	mov	r6, #0
   1b880:	str	r6, [fp, #-52]	; 0xffffffcc
   1b884:	str	r6, [fp, #-56]	; 0xffffffc8
   1b888:	strh	r6, [fp, #-60]	; 0xffffffc4
   1b88c:	str	r6, [sp, #56]	; 0x38
   1b890:	cmp	r7, r0
   1b894:	beq	1b8e0 <main@@Base+0x8608>
   1b898:	sub	r0, fp, #56	; 0x38
   1b89c:	ldr	r2, [sp, #44]	; 0x2c
   1b8a0:	mov	r1, r7
   1b8a4:	add	r3, sp, #56	; 0x38
   1b8a8:	str	r0, [sp]
   1b8ac:	ldr	r0, [sp, #36]	; 0x24
   1b8b0:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1b8b4:	cmp	r0, r7
   1b8b8:	beq	1b8e8 <main@@Base+0x8610>
   1b8bc:	mov	r4, r0
   1b8c0:	ldr	r0, [sp, #56]	; 0x38
   1b8c4:	cmp	r0, #0
   1b8c8:	beq	1b8f0 <main@@Base+0x8618>
   1b8cc:	ldr	r0, [sp, #36]	; 0x24
   1b8d0:	ldr	r2, [sp, #44]	; 0x2c
   1b8d4:	mov	r1, r4
   1b8d8:	mov	r3, #8
   1b8dc:	b	1b914 <main@@Base+0x863c>
   1b8e0:	ldr	r4, [sp, #44]	; 0x2c
   1b8e4:	b	1b91c <main@@Base+0x8644>
   1b8e8:	mov	r4, r7
   1b8ec:	b	1b91c <main@@Base+0x8644>
   1b8f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b8f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1b8f8:	subs	r2, r0, #65536	; 0x10000
   1b8fc:	sbcs	r1, r1, #0
   1b900:	bcc	1b9a0 <main@@Base+0x86c8>
   1b904:	ldr	r0, [sp, #36]	; 0x24
   1b908:	ldr	r2, [sp, #44]	; 0x2c
   1b90c:	mov	r1, r4
   1b910:	mov	r3, #7
   1b914:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1b918:	mov	r4, r0
   1b91c:	cmp	r7, r4
   1b920:	bne	1b95c <main@@Base+0x8684>
   1b924:	sub	r0, fp, #60	; 0x3c
   1b928:	ldr	r2, [sp, #44]	; 0x2c
   1b92c:	movw	r3, #17208	; 0x4338
   1b930:	mov	r1, r7
   1b934:	str	r0, [sp]
   1b938:	ldr	r0, [sp, #36]	; 0x24
   1b93c:	movt	r3, #4
   1b940:	bl	287b8 <main@@Base+0x154e0>
   1b944:	cmp	r0, r7
   1b948:	mov	r4, r0
   1b94c:	ldrne	r0, [sp, #44]	; 0x2c
   1b950:	cmpne	r4, r0
   1b954:	beq	18e68 <main@@Base+0x5b90>
   1b958:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1b95c:	movw	r0, #65535	; 0xffff
   1b960:	tst	r6, r0
   1b964:	bne	1b978 <main@@Base+0x86a0>
   1b968:	ldr	r0, [sp, #36]	; 0x24
   1b96c:	ldrb	r0, [r0, #8]
   1b970:	tst	r0, #2
   1b974:	beq	1bb94 <main@@Base+0x88bc>
   1b978:	ldr	r0, [sp, #36]	; 0x24
   1b97c:	mov	r1, #2
   1b980:	mov	r2, #2
   1b984:	mov	r3, #2
   1b988:	ldr	r0, [r0]
   1b98c:	bl	2b8dc <flatcc_builder_table_add@@Base>
   1b990:	cmp	r0, #0
   1b994:	beq	18e68 <main@@Base+0x5b90>
   1b998:	strh	r6, [r0]
   1b99c:	b	1bb94 <main@@Base+0x88bc>
   1b9a0:	mov	r6, r0
   1b9a4:	strh	r0, [fp, #-60]	; 0xffffffc4
   1b9a8:	b	1b91c <main@@Base+0x8644>
   1b9ac:	bne	1b9bc <main@@Base+0x86e4>
   1b9b0:	ldrb	r0, [r7, #2]!
   1b9b4:	cmp	r0, #32
   1b9b8:	bhi	1b9cc <main@@Base+0x86f4>
   1b9bc:	ldr	r0, [sp, #36]	; 0x24
   1b9c0:	ldr	r2, [sp, #44]	; 0x2c
   1b9c4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1b9c8:	mov	r7, r0
   1b9cc:	cmp	r9, r7
   1b9d0:	beq	1bba0 <main@@Base+0x88c8>
   1b9d4:	ldr	r0, [sp, #44]	; 0x2c
   1b9d8:	mov	r6, #0
   1b9dc:	str	r6, [fp, #-52]	; 0xffffffcc
   1b9e0:	str	r6, [fp, #-56]	; 0xffffffc8
   1b9e4:	str	r6, [sp, #60]	; 0x3c
   1b9e8:	str	r6, [sp, #56]	; 0x38
   1b9ec:	str	r6, [fp, #-60]	; 0xffffffc4
   1b9f0:	cmp	r7, r0
   1b9f4:	beq	1ba50 <main@@Base+0x8778>
   1b9f8:	sub	r0, fp, #56	; 0x38
   1b9fc:	ldr	r2, [sp, #44]	; 0x2c
   1ba00:	mov	r1, r7
   1ba04:	sub	r3, fp, #60	; 0x3c
   1ba08:	str	r0, [sp]
   1ba0c:	ldr	r0, [sp, #36]	; 0x24
   1ba10:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1ba14:	cmp	r0, r7
   1ba18:	beq	1ba58 <main@@Base+0x8780>
   1ba1c:	sub	r9, fp, #60	; 0x3c
   1ba20:	mov	r4, r0
   1ba24:	ldm	r9, {r0, r6, r9}
   1ba28:	cmp	r0, #0
   1ba2c:	beq	1ba68 <main@@Base+0x8790>
   1ba30:	subs	r0, r6, #1
   1ba34:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1ba38:	bcc	1ba94 <main@@Base+0x87bc>
   1ba3c:	ldr	r0, [sp, #36]	; 0x24
   1ba40:	ldr	r2, [sp, #44]	; 0x2c
   1ba44:	mov	r1, r4
   1ba48:	mov	r3, #8
   1ba4c:	b	1ba80 <main@@Base+0x87a8>
   1ba50:	ldr	r4, [sp, #44]	; 0x2c
   1ba54:	b	1ba8c <main@@Base+0x87b4>
   1ba58:	mov	r6, #0
   1ba5c:	mov	r9, #0
   1ba60:	mov	r4, r7
   1ba64:	b	1baa4 <main@@Base+0x87cc>
   1ba68:	cmn	r9, #1
   1ba6c:	bgt	1ba9c <main@@Base+0x87c4>
   1ba70:	ldr	r0, [sp, #36]	; 0x24
   1ba74:	ldr	r2, [sp, #44]	; 0x2c
   1ba78:	mov	r1, r4
   1ba7c:	mov	r3, #7
   1ba80:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1ba84:	mov	r4, r0
   1ba88:	mov	r6, #0
   1ba8c:	mov	r9, #0
   1ba90:	b	1baa4 <main@@Base+0x87cc>
   1ba94:	rsbs	r6, r6, #0
   1ba98:	rsc	r9, r9, #0
   1ba9c:	str	r6, [sp, #56]	; 0x38
   1baa0:	str	r9, [sp, #60]	; 0x3c
   1baa4:	cmp	r7, r4
   1baa8:	bne	1bae8 <main@@Base+0x8810>
   1baac:	add	r0, sp, #56	; 0x38
   1bab0:	ldr	r2, [sp, #44]	; 0x2c
   1bab4:	movw	r3, #17220	; 0x4344
   1bab8:	mov	r1, r7
   1babc:	str	r0, [sp]
   1bac0:	ldr	r0, [sp, #36]	; 0x24
   1bac4:	movt	r3, #4
   1bac8:	bl	22b10 <main@@Base+0xf838>
   1bacc:	cmp	r0, r7
   1bad0:	mov	r4, r0
   1bad4:	ldrne	r0, [sp, #44]	; 0x2c
   1bad8:	cmpne	r4, r0
   1badc:	beq	18e68 <main@@Base+0x5b90>
   1bae0:	ldr	r6, [sp, #56]	; 0x38
   1bae4:	ldr	r9, [sp, #60]	; 0x3c
   1bae8:	orrs	r0, r6, r9
   1baec:	bne	1bb00 <main@@Base+0x8828>
   1baf0:	ldr	r0, [sp, #36]	; 0x24
   1baf4:	ldrb	r0, [r0, #8]
   1baf8:	tst	r0, #2
   1bafc:	beq	1bb94 <main@@Base+0x88bc>
   1bb00:	ldr	r0, [sp, #36]	; 0x24
   1bb04:	mov	r1, #1
   1bb08:	mov	r2, #8
   1bb0c:	mov	r3, #8
   1bb10:	ldr	r0, [r0]
   1bb14:	bl	2b8dc <flatcc_builder_table_add@@Base>
   1bb18:	cmp	r0, #0
   1bb1c:	beq	18e68 <main@@Base+0x5b90>
   1bb20:	stm	r0, {r6, r9}
   1bb24:	b	1bb94 <main@@Base+0x88bc>
   1bb28:	bne	1bb38 <main@@Base+0x8860>
   1bb2c:	ldrb	r0, [r1, #2]!
   1bb30:	cmp	r0, #32
   1bb34:	bhi	1bb4c <main@@Base+0x8874>
   1bb38:	mov	r1, r2
   1bb3c:	ldr	r0, [sp, #36]	; 0x24
   1bb40:	ldr	r2, [sp, #44]	; 0x2c
   1bb44:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1bb48:	mov	r1, r0
   1bb4c:	cmp	r9, r1
   1bb50:	beq	1bba0 <main@@Base+0x88c8>
   1bb54:	ldr	r0, [sp, #36]	; 0x24
   1bb58:	ldr	r2, [sp, #44]	; 0x2c
   1bb5c:	add	r3, sp, #64	; 0x40
   1bb60:	bl	2f6d0 <flatcc_json_parser_build_string@@Base>
   1bb64:	mov	r4, r0
   1bb68:	ldr	r0, [sp, #64]	; 0x40
   1bb6c:	cmp	r0, #0
   1bb70:	beq	18e68 <main@@Base+0x5b90>
   1bb74:	ldr	r0, [sp, #36]	; 0x24
   1bb78:	mov	r1, #0
   1bb7c:	ldr	r0, [r0]
   1bb80:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   1bb84:	cmp	r0, #0
   1bb88:	beq	18e68 <main@@Base+0x5b90>
   1bb8c:	ldr	r1, [sp, #64]	; 0x40
   1bb90:	str	r1, [r0]
   1bb94:	ldr	r5, [sp, #44]	; 0x2c
   1bb98:	ldr	r6, [sp, #36]	; 0x24
   1bb9c:	b	1bbbc <main@@Base+0x88e4>
   1bba0:	ldr	r6, [sp, #36]	; 0x24
   1bba4:	ldr	r5, [sp, #44]	; 0x2c
   1bba8:	mov	r1, r9
   1bbac:	mov	r0, r6
   1bbb0:	mov	r2, r5
   1bbb4:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1bbb8:	mov	r4, r0
   1bbbc:	sub	r0, r5, r4
   1bbc0:	cmp	r0, #2
   1bbc4:	blt	1bbf0 <main@@Base+0x8918>
   1bbc8:	ldrb	r0, [r4]
   1bbcc:	cmp	r0, #32
   1bbd0:	bls	1bbdc <main@@Base+0x8904>
   1bbd4:	mov	r2, r4
   1bbd8:	b	1bc04 <main@@Base+0x892c>
   1bbdc:	bne	1bbf0 <main@@Base+0x8918>
   1bbe0:	mov	r2, r4
   1bbe4:	ldrb	r0, [r2, #1]!
   1bbe8:	cmp	r0, #32
   1bbec:	bhi	1bc04 <main@@Base+0x892c>
   1bbf0:	mov	r0, r6
   1bbf4:	mov	r1, r4
   1bbf8:	mov	r2, r5
   1bbfc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1bc00:	mov	r2, r0
   1bc04:	cmp	r2, r5
   1bc08:	beq	1cb6c <main@@Base+0x9894>
   1bc0c:	ldrb	r0, [r2]
   1bc10:	cmp	r0, #44	; 0x2c
   1bc14:	bne	1cb74 <main@@Base+0x989c>
   1bc18:	add	r1, r2, #1
   1bc1c:	sub	r0, r5, r1
   1bc20:	cmp	r0, #2
   1bc24:	blt	1bc4c <main@@Base+0x8974>
   1bc28:	ldrb	r0, [r1]
   1bc2c:	cmp	r0, #32
   1bc30:	bls	1bc3c <main@@Base+0x8964>
   1bc34:	mov	r2, r1
   1bc38:	b	1bc5c <main@@Base+0x8984>
   1bc3c:	bne	1bc4c <main@@Base+0x8974>
   1bc40:	ldrb	r0, [r2, #2]!
   1bc44:	cmp	r0, #32
   1bc48:	bhi	1bc5c <main@@Base+0x8984>
   1bc4c:	mov	r0, r6
   1bc50:	mov	r2, r5
   1bc54:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1bc58:	mov	r2, r0
   1bc5c:	cmp	r2, r5
   1bc60:	beq	1cbc0 <main@@Base+0x98e8>
   1bc64:	ldrb	r0, [r2]
   1bc68:	cmp	r0, #125	; 0x7d
   1bc6c:	bne	1b404 <main@@Base+0x812c>
   1bc70:	add	r1, r2, #1
   1bc74:	sub	r0, r5, r1
   1bc78:	b	1cb88 <main@@Base+0x98b0>
   1bc7c:	cmp	r0, #93	; 0x5d
   1bc80:	bne	1cb30 <main@@Base+0x9858>
   1bc84:	ldr	r5, [sp, #44]	; 0x2c
   1bc88:	ldr	r8, [sp, #36]	; 0x24
   1bc8c:	add	r1, r2, #1
   1bc90:	sub	r0, r5, r1
   1bc94:	cmp	r0, #2
   1bc98:	ldr	sl, [sp, #40]	; 0x28
   1bc9c:	blt	1ccb4 <main@@Base+0x99dc>
   1bca0:	ldrb	r0, [r1]
   1bca4:	cmp	r0, #32
   1bca8:	bls	1cc94 <main@@Base+0x99bc>
   1bcac:	ldr	r5, [sp, #44]	; 0x2c
   1bcb0:	ldr	r8, [sp, #36]	; 0x24
   1bcb4:	ldr	sl, [sp, #40]	; 0x28
   1bcb8:	mov	r4, r1
   1bcbc:	b	19440 <main@@Base+0x6168>
   1bcc0:	ldr	r8, [sp, #36]	; 0x24
   1bcc4:	ldr	r5, [sp, #44]	; 0x2c
   1bcc8:	mov	r1, r2
   1bccc:	mov	r0, r8
   1bcd0:	mov	r2, r5
   1bcd4:	mov	r3, #9
   1bcd8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1bcdc:	ldr	sl, [sp, #40]	; 0x28
   1bce0:	b	183c8 <main@@Base+0x50f0>
   1bce4:	mov	r4, r5
   1bce8:	b	1cce4 <main@@Base+0x9a0c>
   1bcec:	mov	r0, r8
   1bcf0:	mov	r1, r5
   1bcf4:	b	1cb40 <main@@Base+0x9868>
   1bcf8:	cmp	r0, #93	; 0x5d
   1bcfc:	bne	1cb54 <main@@Base+0x987c>
   1bd00:	ldr	r0, [sp, #44]	; 0x2c
   1bd04:	add	r1, r4, #1
   1bd08:	sub	r0, r0, r1
   1bd0c:	b	1c6cc <main@@Base+0x93f4>
   1bd10:	mov	r4, r5
   1bd14:	b	18a48 <main@@Base+0x5770>
   1bd18:	mov	r0, r8
   1bd1c:	mov	r1, r5
   1bd20:	mov	r2, r5
   1bd24:	b	1cb60 <main@@Base+0x9888>
   1bd28:	ldr	r5, [sp, #44]	; 0x2c
   1bd2c:	ldr	r8, [sp, #36]	; 0x24
   1bd30:	ldr	sl, [sp, #40]	; 0x28
   1bd34:	bne	1bd48 <main@@Base+0x8a70>
   1bd38:	ldrb	r0, [r2, #2]!
   1bd3c:	cmp	r0, #32
   1bd40:	mov	r4, r2
   1bd44:	bhi	1c548 <main@@Base+0x9270>
   1bd48:	mov	r0, r8
   1bd4c:	mov	r2, r5
   1bd50:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1bd54:	b	1bdbc <main@@Base+0x8ae4>
   1bd58:	ldr	r0, [r8]
   1bd5c:	mov	r1, #1
   1bd60:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   1bd64:	mov	r9, r0
   1bd68:	cmp	r0, #0
   1bd6c:	beq	13390 <main@@Base+0xb8>
   1bd70:	cmp	r4, r5
   1bd74:	beq	1bda8 <main@@Base+0x8ad0>
   1bd78:	ldrb	r0, [r4]
   1bd7c:	cmp	r0, #123	; 0x7b
   1bd80:	bne	1bda8 <main@@Base+0x8ad0>
   1bd84:	add	r1, r4, #1
   1bd88:	sub	r0, r5, r1
   1bd8c:	cmp	r0, #2
   1bd90:	blt	1bdd4 <main@@Base+0x8afc>
   1bd94:	ldrb	r0, [r1]
   1bd98:	cmp	r0, #32
   1bd9c:	bls	1bdc4 <main@@Base+0x8aec>
   1bda0:	mov	r4, r1
   1bda4:	b	1bde4 <main@@Base+0x8b0c>
   1bda8:	mov	r0, r8
   1bdac:	mov	r1, r4
   1bdb0:	mov	r2, r5
   1bdb4:	mov	r3, #21
   1bdb8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1bdbc:	mov	r4, r0
   1bdc0:	b	1c548 <main@@Base+0x9270>
   1bdc4:	bne	1bdd4 <main@@Base+0x8afc>
   1bdc8:	ldrb	r0, [r4, #2]!
   1bdcc:	cmp	r0, #32
   1bdd0:	bhi	1bde4 <main@@Base+0x8b0c>
   1bdd4:	mov	r0, r8
   1bdd8:	mov	r2, r5
   1bddc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1bde0:	mov	r4, r0
   1bde4:	cmp	r4, r5
   1bde8:	mov	r2, r5
   1bdec:	beq	1bed4 <main@@Base+0x8bfc>
   1bdf0:	ldrb	r0, [r4]
   1bdf4:	cmp	r0, #125	; 0x7d
   1bdf8:	bne	1be38 <main@@Base+0x8b60>
   1bdfc:	add	r1, r4, #1
   1be00:	sub	r0, r5, r1
   1be04:	cmp	r0, #2
   1be08:	blt	1bd48 <main@@Base+0x8a70>
   1be0c:	ldrb	r0, [r1]
   1be10:	cmp	r0, #32
   1be14:	bhi	1c508 <main@@Base+0x9230>
   1be18:	ldr	r5, [sp, #44]	; 0x2c
   1be1c:	ldr	r8, [sp, #36]	; 0x24
   1be20:	ldr	sl, [sp, #40]	; 0x28
   1be24:	bne	1bd48 <main@@Base+0x8a70>
   1be28:	ldrb	r0, [r4, #2]!
   1be2c:	cmp	r0, #32
   1be30:	bls	1bd48 <main@@Base+0x8a70>
   1be34:	b	1c548 <main@@Base+0x9270>
   1be38:	mov	r2, r4
   1be3c:	b	1bed4 <main@@Base+0x8bfc>
   1be40:	mov	r1, r5
   1be44:	b	1be78 <main@@Base+0x8ba0>
   1be48:	mov	r1, r7
   1be4c:	b	1be78 <main@@Base+0x8ba0>
   1be50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1be54:	cmp	r0, #0
   1be58:	beq	1bec0 <main@@Base+0x8be8>
   1be5c:	ldr	r8, [sp, #36]	; 0x24
   1be60:	ldr	r5, [sp, #44]	; 0x2c
   1be64:	mov	r3, #7
   1be68:	mov	r0, r8
   1be6c:	mov	r2, r5
   1be70:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1be74:	mov	r1, r0
   1be78:	cmp	r7, r1
   1be7c:	bne	1beb8 <main@@Base+0x8be0>
   1be80:	movw	r3, #17196	; 0x432c
   1be84:	sub	r0, fp, #60	; 0x3c
   1be88:	mov	r1, r7
   1be8c:	mov	r2, r5
   1be90:	str	r0, [sp]
   1be94:	mov	r0, r8
   1be98:	movt	r3, #4
   1be9c:	bl	22d58 <main@@Base+0xfa80>
   1bea0:	mov	r1, r0
   1bea4:	cmp	r0, r7
   1bea8:	cmpne	r1, r5
   1beac:	beq	1c4b8 <main@@Base+0x91e0>
   1beb0:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1beb4:	ldr	r8, [sp, #36]	; 0x24
   1beb8:	str	r4, [r9, #4]
   1bebc:	b	1c404 <main@@Base+0x912c>
   1bec0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1bec4:	ldr	r5, [sp, #44]	; 0x2c
   1bec8:	ldr	r8, [sp, #36]	; 0x24
   1becc:	str	r4, [fp, #-60]	; 0xffffffc4
   1bed0:	b	1be78 <main@@Base+0x8ba0>
   1bed4:	cmp	r2, r5
   1bed8:	mov	sl, r5
   1bedc:	beq	1bf30 <main@@Base+0x8c58>
   1bee0:	ldrb	r0, [r2]
   1bee4:	cmp	r0, #46	; 0x2e
   1bee8:	beq	1bf04 <main@@Base+0x8c2c>
   1beec:	cmp	r0, #34	; 0x22
   1bef0:	bne	1bf20 <main@@Base+0x8c48>
   1bef4:	ldr	r0, [sp, #32]
   1bef8:	mov	r1, #0
   1befc:	add	sl, r2, #1
   1bf00:	b	1bf2c <main@@Base+0x8c54>
   1bf04:	mov	r1, r2
   1bf08:	mov	r0, r8
   1bf0c:	mov	r2, r5
   1bf10:	mov	r3, #5
   1bf14:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1bf18:	mov	sl, r0
   1bf1c:	b	1bf30 <main@@Base+0x8c58>
   1bf20:	ldr	r0, [sp, #32]
   1bf24:	mov	r1, #1
   1bf28:	mov	sl, r2
   1bf2c:	str	r1, [r0]
   1bf30:	sub	lr, r5, sl
   1bf34:	mov	r0, #8
   1bf38:	cmp	lr, #8
   1bf3c:	movcc	r0, lr
   1bf40:	and	r0, r0, #15
   1bf44:	sub	r7, r0, #1
   1bf48:	cmp	r7, #7
   1bf4c:	bhi	1c3f0 <main@@Base+0x9118>
   1bf50:	add	r4, pc, #32
   1bf54:	mov	r1, #0
   1bf58:	mov	ip, #0
   1bf5c:	mov	r8, #0
   1bf60:	mov	r6, #0
   1bf64:	mov	r3, #0
   1bf68:	mov	r5, #0
   1bf6c:	mov	r2, #0
   1bf70:	mov	r0, #0
   1bf74:	ldr	pc, [r4, r7, lsl #2]
   1bf78:	ldrdeq	fp, [r1], -ip
   1bf7c:	ldrdeq	fp, [r1], -r4
   1bf80:	andeq	fp, r1, ip, asr #31
   1bf84:	andeq	fp, r1, r4, asr #31
   1bf88:			; <UNDEFINED> instruction: 0x0001bfb8
   1bf8c:	andeq	fp, r1, ip, lsr #31
   1bf90:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1bf94:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1bf98:	ldrb	ip, [sl, #7]
   1bf9c:	ldrb	r0, [sl, #6]
   1bfa0:	mov	r8, r1
   1bfa4:	orr	r0, ip, r0, lsl #8
   1bfa8:	mov	r1, r0
   1bfac:	ldrb	r0, [sl, #5]
   1bfb0:	mov	r6, r8
   1bfb4:	orr	r1, r1, r0, lsl #16
   1bfb8:	ldrb	r0, [sl, #4]
   1bfbc:	mov	r3, r6
   1bfc0:	orr	r1, r1, r0, lsl #24
   1bfc4:	ldrb	r0, [sl, #3]
   1bfc8:	orr	r5, r0, r3
   1bfcc:	ldrb	r0, [sl, #2]
   1bfd0:	orr	r2, r5, r0, lsl #8
   1bfd4:	ldrb	r0, [sl, #1]
   1bfd8:	orr	r0, r2, r0, lsl #16
   1bfdc:	ldrb	r2, [sl]
   1bfe0:	movw	r3, #0
   1bfe4:	movt	r3, #26980	; 0x6964
   1bfe8:	orr	r0, r0, r2, lsl #24
   1bfec:	mov	r2, r0
   1bff0:	bfc	r2, #0, #16
   1bff4:	teq	r2, r3
   1bff8:	bne	1c04c <main@@Base+0x8d74>
   1bffc:	ldr	r5, [sp, #44]	; 0x2c
   1c000:	ldr	r8, [sp, #36]	; 0x24
   1c004:	cmp	lr, #3
   1c008:	mov	r7, sl
   1c00c:	blt	1c268 <main@@Base+0x8f90>
   1c010:	ldr	r2, [sp, #32]
   1c014:	mov	r1, sl
   1c018:	ldrb	r0, [r1, #2]!
   1c01c:	ldr	r2, [r2]
   1c020:	cmp	r2, #0
   1c024:	beq	1c0bc <main@@Base+0x8de4>
   1c028:	cmp	r0, #33	; 0x21
   1c02c:	bcc	1c03c <main@@Base+0x8d64>
   1c030:	cmp	r0, #58	; 0x3a
   1c034:	mov	r7, sl
   1c038:	bne	1c268 <main@@Base+0x8f90>
   1c03c:	ldr	r0, [sp, #32]
   1c040:	mov	r2, #0
   1c044:	str	r2, [r0]
   1c048:	b	1c0cc <main@@Base+0x8df4>
   1c04c:	movw	r2, #25445	; 0x6365
   1c050:	ldr	r5, [sp, #44]	; 0x2c
   1c054:	ldr	r8, [sp, #36]	; 0x24
   1c058:	movt	r2, #24942	; 0x616e
   1c05c:	eor	r1, r1, r2
   1c060:	movw	r2, #29556	; 0x7374
   1c064:	movt	r2, #25705	; 0x6469
   1c068:	eor	r0, r0, r2
   1c06c:	orrs	r0, r1, r0
   1c070:	bne	1c3f0 <main@@Base+0x9118>
   1c074:	cmp	lr, #9
   1c078:	mov	r7, sl
   1c07c:	blt	1c388 <main@@Base+0x90b0>
   1c080:	ldr	r2, [sp, #32]
   1c084:	mov	r1, sl
   1c088:	ldrb	r0, [r1, #8]!
   1c08c:	ldr	r2, [r2]
   1c090:	cmp	r2, #0
   1c094:	beq	1c0f4 <main@@Base+0x8e1c>
   1c098:	cmp	r0, #33	; 0x21
   1c09c:	bcc	1c0ac <main@@Base+0x8dd4>
   1c0a0:	cmp	r0, #58	; 0x3a
   1c0a4:	mov	r7, sl
   1c0a8:	bne	1c388 <main@@Base+0x90b0>
   1c0ac:	ldr	r0, [sp, #32]
   1c0b0:	mov	r2, #0
   1c0b4:	str	r2, [r0]
   1c0b8:	b	1c104 <main@@Base+0x8e2c>
   1c0bc:	cmp	r0, #34	; 0x22
   1c0c0:	mov	r7, sl
   1c0c4:	bne	1c268 <main@@Base+0x8f90>
   1c0c8:	add	r1, sl, #3
   1c0cc:	sub	r0, r5, r1
   1c0d0:	cmp	r0, #2
   1c0d4:	blt	1c148 <main@@Base+0x8e70>
   1c0d8:	ldrb	r0, [r1]
   1c0dc:	cmp	r0, #32
   1c0e0:	bls	1c12c <main@@Base+0x8e54>
   1c0e4:	ldr	r5, [sp, #44]	; 0x2c
   1c0e8:	ldr	r8, [sp, #36]	; 0x24
   1c0ec:	mov	r7, r1
   1c0f0:	b	1c158 <main@@Base+0x8e80>
   1c0f4:	cmp	r0, #34	; 0x22
   1c0f8:	mov	r7, sl
   1c0fc:	bne	1c388 <main@@Base+0x90b0>
   1c100:	add	r1, sl, #9
   1c104:	ldr	r4, [sp, #44]	; 0x2c
   1c108:	sub	r0, r4, r1
   1c10c:	cmp	r0, #2
   1c110:	blt	1c1c8 <main@@Base+0x8ef0>
   1c114:	ldrb	r0, [r1]
   1c118:	cmp	r0, #32
   1c11c:	bls	1c1b0 <main@@Base+0x8ed8>
   1c120:	ldr	r4, [sp, #44]	; 0x2c
   1c124:	mov	r7, r1
   1c128:	b	1c1d8 <main@@Base+0x8f00>
   1c12c:	ldr	r5, [sp, #44]	; 0x2c
   1c130:	ldr	r8, [sp, #36]	; 0x24
   1c134:	bne	1c148 <main@@Base+0x8e70>
   1c138:	mov	r7, r1
   1c13c:	ldrb	r0, [r7, #1]!
   1c140:	cmp	r0, #32
   1c144:	bhi	1c158 <main@@Base+0x8e80>
   1c148:	mov	r0, r8
   1c14c:	mov	r2, r5
   1c150:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c154:	mov	r7, r0
   1c158:	cmp	r7, r5
   1c15c:	beq	1c198 <main@@Base+0x8ec0>
   1c160:	ldrb	r0, [r7]
   1c164:	cmp	r0, #58	; 0x3a
   1c168:	bne	1c198 <main@@Base+0x8ec0>
   1c16c:	add	r1, r7, #1
   1c170:	sub	r0, r5, r1
   1c174:	cmp	r0, #2
   1c178:	blt	1c258 <main@@Base+0x8f80>
   1c17c:	ldrb	r0, [r1]
   1c180:	cmp	r0, #32
   1c184:	bls	1c240 <main@@Base+0x8f68>
   1c188:	ldr	r5, [sp, #44]	; 0x2c
   1c18c:	ldr	r8, [sp, #36]	; 0x24
   1c190:	mov	r7, r1
   1c194:	b	1c268 <main@@Base+0x8f90>
   1c198:	mov	r0, r8
   1c19c:	mov	r1, r7
   1c1a0:	mov	r2, r5
   1c1a4:	mov	r3, #4
   1c1a8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1c1ac:	b	1c264 <main@@Base+0x8f8c>
   1c1b0:	ldr	r4, [sp, #44]	; 0x2c
   1c1b4:	bne	1c1c8 <main@@Base+0x8ef0>
   1c1b8:	mov	r7, r1
   1c1bc:	ldrb	r0, [r7, #1]!
   1c1c0:	cmp	r0, #32
   1c1c4:	bhi	1c1d8 <main@@Base+0x8f00>
   1c1c8:	ldr	r0, [sp, #36]	; 0x24
   1c1cc:	mov	r2, r4
   1c1d0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c1d4:	mov	r7, r0
   1c1d8:	cmp	r7, r4
   1c1dc:	beq	1c220 <main@@Base+0x8f48>
   1c1e0:	ldrb	r0, [r7]
   1c1e4:	cmp	r0, #58	; 0x3a
   1c1e8:	bne	1c220 <main@@Base+0x8f48>
   1c1ec:	ldr	r5, [sp, #44]	; 0x2c
   1c1f0:	ldr	r8, [sp, #36]	; 0x24
   1c1f4:	add	r1, r7, #1
   1c1f8:	sub	r0, r5, r1
   1c1fc:	cmp	r0, #2
   1c200:	blt	1c378 <main@@Base+0x90a0>
   1c204:	ldrb	r0, [r1]
   1c208:	cmp	r0, #32
   1c20c:	bls	1c360 <main@@Base+0x9088>
   1c210:	ldr	r5, [sp, #44]	; 0x2c
   1c214:	ldr	r8, [sp, #36]	; 0x24
   1c218:	mov	r7, r1
   1c21c:	b	1c388 <main@@Base+0x90b0>
   1c220:	ldr	r8, [sp, #36]	; 0x24
   1c224:	ldr	r5, [sp, #44]	; 0x2c
   1c228:	mov	r1, r7
   1c22c:	mov	r3, #4
   1c230:	mov	r0, r8
   1c234:	mov	r2, r5
   1c238:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1c23c:	b	1c384 <main@@Base+0x90ac>
   1c240:	ldr	r5, [sp, #44]	; 0x2c
   1c244:	ldr	r8, [sp, #36]	; 0x24
   1c248:	bne	1c258 <main@@Base+0x8f80>
   1c24c:	ldrb	r0, [r7, #2]!
   1c250:	cmp	r0, #32
   1c254:	bhi	1c268 <main@@Base+0x8f90>
   1c258:	mov	r0, r8
   1c25c:	mov	r2, r5
   1c260:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c264:	mov	r7, r0
   1c268:	cmp	sl, r7
   1c26c:	beq	1c3f0 <main@@Base+0x9118>
   1c270:	mov	r4, #0
   1c274:	cmp	r7, r5
   1c278:	str	r4, [fp, #-52]	; 0xffffffcc
   1c27c:	str	r4, [fp, #-56]	; 0xffffffc8
   1c280:	str	r4, [fp, #-60]	; 0xffffffc4
   1c284:	str	r4, [sp, #56]	; 0x38
   1c288:	beq	1c2d0 <main@@Base+0x8ff8>
   1c28c:	sub	r0, fp, #56	; 0x38
   1c290:	mov	r1, r7
   1c294:	mov	r2, r5
   1c298:	add	r3, sp, #56	; 0x38
   1c29c:	str	r0, [sp]
   1c2a0:	mov	r0, r8
   1c2a4:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1c2a8:	cmp	r0, r7
   1c2ac:	beq	1c2d8 <main@@Base+0x9000>
   1c2b0:	mov	r1, r0
   1c2b4:	ldr	r0, [sp, #56]	; 0x38
   1c2b8:	cmp	r0, #0
   1c2bc:	beq	1c2e0 <main@@Base+0x9008>
   1c2c0:	mov	r0, r8
   1c2c4:	mov	r2, r5
   1c2c8:	mov	r3, #8
   1c2cc:	b	1c300 <main@@Base+0x9028>
   1c2d0:	mov	r1, r5
   1c2d4:	b	1c308 <main@@Base+0x9030>
   1c2d8:	mov	r1, r7
   1c2dc:	b	1c308 <main@@Base+0x9030>
   1c2e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c2e4:	cmp	r0, #0
   1c2e8:	beq	1c34c <main@@Base+0x9074>
   1c2ec:	ldr	r8, [sp, #36]	; 0x24
   1c2f0:	ldr	r5, [sp, #44]	; 0x2c
   1c2f4:	mov	r3, #7
   1c2f8:	mov	r0, r8
   1c2fc:	mov	r2, r5
   1c300:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1c304:	mov	r1, r0
   1c308:	cmp	r7, r1
   1c30c:	bne	1c344 <main@@Base+0x906c>
   1c310:	movw	r3, #17184	; 0x4320
   1c314:	sub	r0, fp, #60	; 0x3c
   1c318:	mov	r1, r7
   1c31c:	mov	r2, r5
   1c320:	str	r0, [sp]
   1c324:	mov	r0, r8
   1c328:	movt	r3, #4
   1c32c:	bl	22d58 <main@@Base+0xfa80>
   1c330:	mov	r1, r0
   1c334:	cmp	r0, r7
   1c338:	cmpne	r1, r5
   1c33c:	beq	1c4b8 <main@@Base+0x91e0>
   1c340:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1c344:	str	r4, [r9]
   1c348:	b	1c404 <main@@Base+0x912c>
   1c34c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c350:	ldr	r5, [sp, #44]	; 0x2c
   1c354:	ldr	r8, [sp, #36]	; 0x24
   1c358:	str	r4, [fp, #-60]	; 0xffffffc4
   1c35c:	b	1c308 <main@@Base+0x9030>
   1c360:	ldr	r5, [sp, #44]	; 0x2c
   1c364:	ldr	r8, [sp, #36]	; 0x24
   1c368:	bne	1c378 <main@@Base+0x90a0>
   1c36c:	ldrb	r0, [r7, #2]!
   1c370:	cmp	r0, #32
   1c374:	bhi	1c388 <main@@Base+0x90b0>
   1c378:	mov	r0, r8
   1c37c:	mov	r2, r5
   1c380:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c384:	mov	r7, r0
   1c388:	cmp	sl, r7
   1c38c:	beq	1c3f0 <main@@Base+0x9118>
   1c390:	mov	r4, #0
   1c394:	cmp	r7, r5
   1c398:	str	r4, [fp, #-52]	; 0xffffffcc
   1c39c:	str	r4, [fp, #-56]	; 0xffffffc8
   1c3a0:	str	r4, [fp, #-60]	; 0xffffffc4
   1c3a4:	str	r4, [sp, #56]	; 0x38
   1c3a8:	beq	1be40 <main@@Base+0x8b68>
   1c3ac:	sub	r0, fp, #56	; 0x38
   1c3b0:	mov	r1, r7
   1c3b4:	mov	r2, r5
   1c3b8:	add	r3, sp, #56	; 0x38
   1c3bc:	str	r0, [sp]
   1c3c0:	mov	r0, r8
   1c3c4:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1c3c8:	cmp	r0, r7
   1c3cc:	beq	1be48 <main@@Base+0x8b70>
   1c3d0:	mov	r1, r0
   1c3d4:	ldr	r0, [sp, #56]	; 0x38
   1c3d8:	cmp	r0, #0
   1c3dc:	beq	1be50 <main@@Base+0x8b78>
   1c3e0:	ldr	r8, [sp, #36]	; 0x24
   1c3e4:	ldr	r5, [sp, #44]	; 0x2c
   1c3e8:	mov	r3, #8
   1c3ec:	b	1be68 <main@@Base+0x8b90>
   1c3f0:	mov	r0, r8
   1c3f4:	mov	r1, sl
   1c3f8:	mov	r2, r5
   1c3fc:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1c400:	mov	r1, r0
   1c404:	sub	r0, r5, r1
   1c408:	cmp	r0, #2
   1c40c:	blt	1c438 <main@@Base+0x9160>
   1c410:	ldrb	r0, [r1]
   1c414:	cmp	r0, #32
   1c418:	bls	1c424 <main@@Base+0x914c>
   1c41c:	mov	r2, r1
   1c420:	b	1c448 <main@@Base+0x9170>
   1c424:	bne	1c438 <main@@Base+0x9160>
   1c428:	mov	r2, r1
   1c42c:	ldrb	r0, [r2, #1]!
   1c430:	cmp	r0, #32
   1c434:	bhi	1c448 <main@@Base+0x9170>
   1c438:	mov	r0, r8
   1c43c:	mov	r2, r5
   1c440:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c444:	mov	r2, r0
   1c448:	cmp	r2, r5
   1c44c:	beq	1c4d0 <main@@Base+0x91f8>
   1c450:	ldrb	r0, [r2]
   1c454:	cmp	r0, #44	; 0x2c
   1c458:	bne	1c4d8 <main@@Base+0x9200>
   1c45c:	add	r1, r2, #1
   1c460:	sub	r0, r5, r1
   1c464:	cmp	r0, #2
   1c468:	blt	1c490 <main@@Base+0x91b8>
   1c46c:	ldrb	r0, [r1]
   1c470:	cmp	r0, #32
   1c474:	bls	1c480 <main@@Base+0x91a8>
   1c478:	mov	r2, r1
   1c47c:	b	1c4a0 <main@@Base+0x91c8>
   1c480:	bne	1c490 <main@@Base+0x91b8>
   1c484:	ldrb	r0, [r2, #2]!
   1c488:	cmp	r0, #32
   1c48c:	bhi	1c4a0 <main@@Base+0x91c8>
   1c490:	mov	r0, r8
   1c494:	mov	r2, r5
   1c498:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c49c:	mov	r2, r0
   1c4a0:	cmp	r2, r5
   1c4a4:	beq	1c518 <main@@Base+0x9240>
   1c4a8:	ldrb	r0, [r2]
   1c4ac:	cmp	r0, #125	; 0x7d
   1c4b0:	bne	1bed4 <main@@Base+0x8bfc>
   1c4b4:	b	1c4e8 <main@@Base+0x9210>
   1c4b8:	ldr	r8, [sp, #36]	; 0x24
   1c4bc:	ldr	r5, [sp, #44]	; 0x2c
   1c4c0:	mov	r3, #33	; 0x21
   1c4c4:	mov	r0, r8
   1c4c8:	mov	r2, r5
   1c4cc:	b	1c53c <main@@Base+0x9264>
   1c4d0:	mov	r4, r5
   1c4d4:	b	1c544 <main@@Base+0x926c>
   1c4d8:	cmp	r0, #125	; 0x7d
   1c4dc:	bne	1c524 <main@@Base+0x924c>
   1c4e0:	ldr	r5, [sp, #44]	; 0x2c
   1c4e4:	ldr	r8, [sp, #36]	; 0x24
   1c4e8:	add	r1, r2, #1
   1c4ec:	sub	r0, r5, r1
   1c4f0:	cmp	r0, #2
   1c4f4:	ldr	sl, [sp, #40]	; 0x28
   1c4f8:	blt	1bd48 <main@@Base+0x8a70>
   1c4fc:	ldrb	r0, [r1]
   1c500:	cmp	r0, #32
   1c504:	bls	1bd28 <main@@Base+0x8a50>
   1c508:	ldr	r5, [sp, #44]	; 0x2c
   1c50c:	ldr	r8, [sp, #36]	; 0x24
   1c510:	mov	r4, r1
   1c514:	b	1c544 <main@@Base+0x926c>
   1c518:	mov	r0, r8
   1c51c:	mov	r1, r5
   1c520:	b	1c534 <main@@Base+0x925c>
   1c524:	ldr	r8, [sp, #36]	; 0x24
   1c528:	ldr	r5, [sp, #44]	; 0x2c
   1c52c:	mov	r1, r2
   1c530:	mov	r0, r8
   1c534:	mov	r2, r5
   1c538:	mov	r3, #10
   1c53c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1c540:	mov	r4, r0
   1c544:	ldr	sl, [sp, #40]	; 0x28
   1c548:	sub	r0, r5, r4
   1c54c:	cmp	r0, #2
   1c550:	blt	1c57c <main@@Base+0x92a4>
   1c554:	ldrb	r0, [r4]
   1c558:	cmp	r0, #32
   1c55c:	bls	1c568 <main@@Base+0x9290>
   1c560:	mov	r7, r4
   1c564:	b	1c590 <main@@Base+0x92b8>
   1c568:	bne	1c57c <main@@Base+0x92a4>
   1c56c:	mov	r7, r4
   1c570:	ldrb	r0, [r7, #1]!
   1c574:	cmp	r0, #32
   1c578:	bhi	1c590 <main@@Base+0x92b8>
   1c57c:	mov	r0, r8
   1c580:	mov	r1, r4
   1c584:	mov	r2, r5
   1c588:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c58c:	mov	r7, r0
   1c590:	cmp	r7, r5
   1c594:	beq	1c630 <main@@Base+0x9358>
   1c598:	ldrb	r0, [r7]
   1c59c:	cmp	r0, #44	; 0x2c
   1c5a0:	bne	1c638 <main@@Base+0x9360>
   1c5a4:	add	r1, r7, #1
   1c5a8:	sub	r0, r5, r1
   1c5ac:	cmp	r0, #2
   1c5b0:	blt	1c5dc <main@@Base+0x9304>
   1c5b4:	ldrb	r0, [r1]
   1c5b8:	cmp	r0, #32
   1c5bc:	bls	1c5c8 <main@@Base+0x92f0>
   1c5c0:	mov	r4, r1
   1c5c4:	b	1c5ec <main@@Base+0x9314>
   1c5c8:	bne	1c5dc <main@@Base+0x9304>
   1c5cc:	ldrb	r0, [r7, #2]!
   1c5d0:	cmp	r0, #32
   1c5d4:	mov	r4, r7
   1c5d8:	bhi	1c5ec <main@@Base+0x9314>
   1c5dc:	mov	r0, r8
   1c5e0:	mov	r2, r5
   1c5e4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c5e8:	mov	r4, r0
   1c5ec:	cmp	r4, r5
   1c5f0:	beq	1c650 <main@@Base+0x9378>
   1c5f4:	ldrb	r0, [r4]
   1c5f8:	cmp	r0, #93	; 0x5d
   1c5fc:	bne	1bd58 <main@@Base+0x8a80>
   1c600:	add	r1, r4, #1
   1c604:	sub	r0, r5, r1
   1c608:	cmp	r0, #2
   1c60c:	blt	1ca68 <main@@Base+0x9790>
   1c610:	ldrb	r0, [r1]
   1c614:	cmp	r0, #32
   1c618:	bls	1ca48 <main@@Base+0x9770>
   1c61c:	ldr	r5, [sp, #44]	; 0x2c
   1c620:	ldr	r8, [sp, #36]	; 0x24
   1c624:	ldr	sl, [sp, #40]	; 0x28
   1c628:	mov	r7, r1
   1c62c:	b	18484 <main@@Base+0x51ac>
   1c630:	mov	r7, r5
   1c634:	b	18484 <main@@Base+0x51ac>
   1c638:	cmp	r0, #93	; 0x5d
   1c63c:	bne	1c664 <main@@Base+0x938c>
   1c640:	ldr	r5, [sp, #44]	; 0x2c
   1c644:	ldr	r8, [sp, #36]	; 0x24
   1c648:	ldr	sl, [sp, #40]	; 0x28
   1c64c:	b	18d80 <main@@Base+0x5aa8>
   1c650:	mov	r0, r8
   1c654:	mov	r1, r5
   1c658:	mov	r2, r5
   1c65c:	mov	r3, #9
   1c660:	b	1847c <main@@Base+0x51a4>
   1c664:	ldr	r8, [sp, #36]	; 0x24
   1c668:	ldr	r5, [sp, #44]	; 0x2c
   1c66c:	mov	r1, r7
   1c670:	mov	r3, #9
   1c674:	mov	r0, r8
   1c678:	mov	r2, r5
   1c67c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1c680:	ldr	sl, [sp, #40]	; 0x28
   1c684:	b	18480 <main@@Base+0x51a8>
   1c688:	cmp	r0, #125	; 0x7d
   1c68c:	bne	1cba4 <main@@Base+0x98cc>
   1c690:	ldr	r5, [sp, #44]	; 0x2c
   1c694:	ldr	r8, [sp, #36]	; 0x24
   1c698:	add	r1, r3, #1
   1c69c:	sub	r0, r5, r1
   1c6a0:	cmp	r0, #2
   1c6a4:	blt	1cd2c <main@@Base+0x9a54>
   1c6a8:	ldrb	r0, [r1]
   1c6ac:	cmp	r0, #32
   1c6b0:	bls	1cd10 <main@@Base+0x9a38>
   1c6b4:	ldr	r5, [sp, #44]	; 0x2c
   1c6b8:	ldr	r8, [sp, #36]	; 0x24
   1c6bc:	mov	r4, r1
   1c6c0:	b	18a48 <main@@Base+0x5770>
   1c6c4:	add	r1, r4, #1
   1c6c8:	sub	r0, r5, r1
   1c6cc:	cmp	r0, #2
   1c6d0:	blt	1ccd4 <main@@Base+0x99fc>
   1c6d4:	ldrb	r0, [r1]
   1c6d8:	cmp	r0, #32
   1c6dc:	bls	1ccc4 <main@@Base+0x99ec>
   1c6e0:	mov	r4, r1
   1c6e4:	b	1cce4 <main@@Base+0x9a0c>
   1c6e8:	mov	r0, r8
   1c6ec:	mov	r1, r5
   1c6f0:	b	1cbb4 <main@@Base+0x98dc>
   1c6f4:	bne	1c704 <main@@Base+0x942c>
   1c6f8:	ldrb	r0, [r4, #2]!
   1c6fc:	cmp	r0, #32
   1c700:	bhi	1c714 <main@@Base+0x943c>
   1c704:	ldr	r0, [sp, #36]	; 0x24
   1c708:	ldr	r2, [sp, #44]	; 0x2c
   1c70c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c710:	mov	r4, r0
   1c714:	ldr	r6, [sp, #44]	; 0x2c
   1c718:	cmp	r4, r6
   1c71c:	beq	1c730 <main@@Base+0x9458>
   1c720:	ldrb	r0, [r4]
   1c724:	cmp	r0, #93	; 0x5d
   1c728:	beq	1cbe0 <main@@Base+0x9908>
   1c72c:	mov	r6, r4
   1c730:	mov	r0, #0
   1c734:	mov	r1, #1
   1c738:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c73c:	ldr	r0, [sp, #36]	; 0x24
   1c740:	ldr	r0, [r0]
   1c744:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   1c748:	cmp	r0, #0
   1c74c:	beq	1ced4 <main@@Base+0x9bfc>
   1c750:	mov	r8, r0
   1c754:	mov	r4, r6
   1c758:	ldr	r5, [sp, #44]	; 0x2c
   1c75c:	mov	r6, #0
   1c760:	str	r6, [fp, #-52]	; 0xffffffcc
   1c764:	str	r6, [fp, #-56]	; 0xffffffc8
   1c768:	strb	r6, [fp, #-60]	; 0xffffffc4
   1c76c:	str	r6, [sp, #56]	; 0x38
   1c770:	cmp	r4, r5
   1c774:	beq	1c7bc <main@@Base+0x94e4>
   1c778:	sub	r0, fp, #56	; 0x38
   1c77c:	mov	r1, r4
   1c780:	mov	r2, r5
   1c784:	add	r3, sp, #56	; 0x38
   1c788:	str	r0, [sp]
   1c78c:	ldr	r0, [sp, #36]	; 0x24
   1c790:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1c794:	cmp	r0, r4
   1c798:	beq	1c7c4 <main@@Base+0x94ec>
   1c79c:	mov	r1, r0
   1c7a0:	ldr	r0, [sp, #56]	; 0x38
   1c7a4:	cmp	r0, #0
   1c7a8:	beq	1c7cc <main@@Base+0x94f4>
   1c7ac:	ldr	r7, [sp, #36]	; 0x24
   1c7b0:	ldr	r5, [sp, #44]	; 0x2c
   1c7b4:	mov	r3, #8
   1c7b8:	b	1c7ec <main@@Base+0x9514>
   1c7bc:	mov	r1, r5
   1c7c0:	b	1c80c <main@@Base+0x9534>
   1c7c4:	mov	r1, r4
   1c7c8:	b	1c808 <main@@Base+0x9530>
   1c7cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c7d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c7d4:	subs	r3, r0, #256	; 0x100
   1c7d8:	sbcs	r2, r2, #0
   1c7dc:	bcc	1c800 <main@@Base+0x9528>
   1c7e0:	ldr	r7, [sp, #36]	; 0x24
   1c7e4:	ldr	r5, [sp, #44]	; 0x2c
   1c7e8:	mov	r3, #7
   1c7ec:	mov	r0, r7
   1c7f0:	mov	r2, r5
   1c7f4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1c7f8:	mov	r1, r0
   1c7fc:	b	1c810 <main@@Base+0x9538>
   1c800:	mov	r6, r0
   1c804:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c808:	ldr	r5, [sp, #44]	; 0x2c
   1c80c:	ldr	r7, [sp, #36]	; 0x24
   1c810:	cmp	r4, r1
   1c814:	bne	1c858 <main@@Base+0x9580>
   1c818:	movw	r3, #16752	; 0x4170
   1c81c:	sub	r0, fp, #60	; 0x3c
   1c820:	mov	r1, r4
   1c824:	mov	r2, r5
   1c828:	str	r0, [sp]
   1c82c:	mov	r0, r7
   1c830:	movt	r3, #4
   1c834:	bl	1e510 <main@@Base+0xb238>
   1c838:	cmp	r0, r4
   1c83c:	mov	r1, r0
   1c840:	ldrne	r0, [sp, #44]	; 0x2c
   1c844:	cmpne	r1, r0
   1c848:	beq	1cecc <main@@Base+0x9bf4>
   1c84c:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1c850:	ldr	r5, [sp, #44]	; 0x2c
   1c854:	ldr	r7, [sp, #36]	; 0x24
   1c858:	sub	r0, r5, r1
   1c85c:	strb	r6, [r8]
   1c860:	cmp	r0, #2
   1c864:	blt	1c89c <main@@Base+0x95c4>
   1c868:	ldrb	r0, [r1]
   1c86c:	cmp	r0, #32
   1c870:	bls	1c880 <main@@Base+0x95a8>
   1c874:	ldr	r5, [sp, #44]	; 0x2c
   1c878:	mov	r4, r1
   1c87c:	b	1c8ac <main@@Base+0x95d4>
   1c880:	ldr	r5, [sp, #44]	; 0x2c
   1c884:	ldr	r7, [sp, #36]	; 0x24
   1c888:	bne	1c89c <main@@Base+0x95c4>
   1c88c:	mov	r4, r1
   1c890:	ldrb	r0, [r4, #1]!
   1c894:	cmp	r0, #32
   1c898:	bhi	1c8ac <main@@Base+0x95d4>
   1c89c:	mov	r0, r7
   1c8a0:	mov	r2, r5
   1c8a4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c8a8:	mov	r4, r0
   1c8ac:	cmp	r4, r5
   1c8b0:	beq	1cbd0 <main@@Base+0x98f8>
   1c8b4:	ldrb	r0, [r4]
   1c8b8:	cmp	r0, #44	; 0x2c
   1c8bc:	bne	1cbd8 <main@@Base+0x9900>
   1c8c0:	ldr	r5, [sp, #44]	; 0x2c
   1c8c4:	add	r1, r4, #1
   1c8c8:	sub	r0, r5, r1
   1c8cc:	cmp	r0, #2
   1c8d0:	ldr	r0, [sp, #36]	; 0x24
   1c8d4:	blt	1c908 <main@@Base+0x9630>
   1c8d8:	ldrb	r0, [r1]
   1c8dc:	cmp	r0, #32
   1c8e0:	bls	1c8f0 <main@@Base+0x9618>
   1c8e4:	ldr	r5, [sp, #44]	; 0x2c
   1c8e8:	mov	r4, r1
   1c8ec:	b	1c914 <main@@Base+0x963c>
   1c8f0:	ldr	r5, [sp, #44]	; 0x2c
   1c8f4:	ldr	r0, [sp, #36]	; 0x24
   1c8f8:	bne	1c908 <main@@Base+0x9630>
   1c8fc:	ldrb	r2, [r4, #2]!
   1c900:	cmp	r2, #32
   1c904:	bhi	1c914 <main@@Base+0x963c>
   1c908:	mov	r2, r5
   1c90c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c910:	mov	r4, r0
   1c914:	cmp	r4, r5
   1c918:	beq	1cc84 <main@@Base+0x99ac>
   1c91c:	ldrb	r0, [r4]
   1c920:	cmp	r0, #93	; 0x5d
   1c924:	beq	1cbe0 <main@@Base+0x9908>
   1c928:	mov	r0, #0
   1c92c:	mov	r1, #1
   1c930:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c934:	ldr	r0, [sp, #36]	; 0x24
   1c938:	ldr	r0, [r0]
   1c93c:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   1c940:	mov	r8, r0
   1c944:	cmp	r0, #0
   1c948:	bne	1c758 <main@@Base+0x9480>
   1c94c:	b	1ced8 <main@@Base+0x9c00>
   1c950:	ldr	r5, [sp, #44]	; 0x2c
   1c954:	ldr	r8, [sp, #36]	; 0x24
   1c958:	ldr	sl, [sp, #40]	; 0x28
   1c95c:	bne	1c96c <main@@Base+0x9694>
   1c960:	ldrb	r0, [r4, #2]!
   1c964:	cmp	r0, #32
   1c968:	bhi	18f68 <main@@Base+0x5c90>
   1c96c:	mov	r0, r8
   1c970:	mov	r2, r5
   1c974:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c978:	b	18f64 <main@@Base+0x5c8c>
   1c97c:	ldr	r5, [sp, #44]	; 0x2c
   1c980:	ldr	r8, [sp, #36]	; 0x24
   1c984:	ldr	sl, [sp, #40]	; 0x28
   1c988:	b	18280 <main@@Base+0x4fa8>
   1c98c:	ldr	r5, [sp, #44]	; 0x2c
   1c990:	ldr	r8, [sp, #36]	; 0x24
   1c994:	ldr	sl, [sp, #40]	; 0x28
   1c998:	bne	1c9ac <main@@Base+0x96d4>
   1c99c:	ldrb	r0, [r2, #2]!
   1c9a0:	cmp	r0, #32
   1c9a4:	mov	r4, r2
   1c9a8:	bhi	183cc <main@@Base+0x50f4>
   1c9ac:	mov	r0, r8
   1c9b0:	mov	r2, r5
   1c9b4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1c9b8:	b	183c8 <main@@Base+0x50f0>
   1c9bc:	ldr	r8, [sp, #36]	; 0x24
   1c9c0:	ldr	r5, [sp, #44]	; 0x2c
   1c9c4:	mov	r1, r2
   1c9c8:	mov	r0, r8
   1c9cc:	mov	r2, r5
   1c9d0:	mov	r3, #9
   1c9d4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1c9d8:	ldr	sl, [sp, #40]	; 0x28
   1c9dc:	b	18bb4 <main@@Base+0x58dc>
   1c9e0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1c9e4:	str	r6, [fp, #-60]	; 0xffffffc4
   1c9e8:	b	1b0a8 <main@@Base+0x7dd0>
   1c9ec:	mov	r4, r5
   1c9f0:	b	1cdb0 <main@@Base+0x9ad8>
   1c9f4:	cmp	r0, #93	; 0x5d
   1c9f8:	bne	1cd3c <main@@Base+0x9a64>
   1c9fc:	ldr	r0, [sp, #44]	; 0x2c
   1ca00:	add	r1, r4, #1
   1ca04:	sub	r0, r0, r1
   1ca08:	b	1ca80 <main@@Base+0x97a8>
   1ca0c:	mov	r0, r8
   1ca10:	mov	r1, r5
   1ca14:	mov	r2, r5
   1ca18:	b	1cd48 <main@@Base+0x9a70>
   1ca1c:	mov	r4, r5
   1ca20:	b	1cd6c <main@@Base+0x9a94>
   1ca24:	ldr	r8, [sp, #36]	; 0x24
   1ca28:	ldr	r5, [sp, #44]	; 0x2c
   1ca2c:	mov	r1, r2
   1ca30:	mov	r0, r8
   1ca34:	mov	r2, r5
   1ca38:	mov	r3, #10
   1ca3c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1ca40:	ldr	sl, [sp, #40]	; 0x28
   1ca44:	b	1826c <main@@Base+0x4f94>
   1ca48:	ldr	r5, [sp, #44]	; 0x2c
   1ca4c:	ldr	r8, [sp, #36]	; 0x24
   1ca50:	ldr	sl, [sp, #40]	; 0x28
   1ca54:	bne	1ca68 <main@@Base+0x9790>
   1ca58:	ldrb	r0, [r4, #2]!
   1ca5c:	cmp	r0, #32
   1ca60:	mov	r7, r4
   1ca64:	bhi	18484 <main@@Base+0x51ac>
   1ca68:	mov	r0, r8
   1ca6c:	mov	r2, r5
   1ca70:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ca74:	b	18480 <main@@Base+0x51a8>
   1ca78:	add	r1, r4, #1
   1ca7c:	sub	r0, r5, r1
   1ca80:	cmp	r0, #2
   1ca84:	blt	1cda0 <main@@Base+0x9ac8>
   1ca88:	ldrb	r0, [r1]
   1ca8c:	cmp	r0, #32
   1ca90:	bls	1cd90 <main@@Base+0x9ab8>
   1ca94:	mov	r4, r1
   1ca98:	b	1cdb0 <main@@Base+0x9ad8>
   1ca9c:	cmp	r0, #93	; 0x5d
   1caa0:	bne	1cd54 <main@@Base+0x9a7c>
   1caa4:	ldr	r0, [sp, #44]	; 0x2c
   1caa8:	add	r1, r4, #1
   1caac:	sub	r0, r0, r1
   1cab0:	b	1cacc <main@@Base+0x97f4>
   1cab4:	mov	r0, r8
   1cab8:	mov	r1, r5
   1cabc:	mov	r2, r5
   1cac0:	b	1cd60 <main@@Base+0x9a88>
   1cac4:	add	r1, r4, #1
   1cac8:	sub	r0, r5, r1
   1cacc:	cmp	r0, #2
   1cad0:	blt	1caf0 <main@@Base+0x9818>
   1cad4:	ldrb	r0, [r1]
   1cad8:	cmp	r0, #32
   1cadc:	bhi	19a1c <main@@Base+0x6744>
   1cae0:	bne	1caf0 <main@@Base+0x9818>
   1cae4:	ldrb	r0, [r4, #2]!
   1cae8:	cmp	r0, #32
   1caec:	bhi	1cd6c <main@@Base+0x9a94>
   1caf0:	ldr	r0, [sp, #36]	; 0x24
   1caf4:	ldr	r2, [sp, #44]	; 0x2c
   1caf8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1cafc:	b	1cd68 <main@@Base+0x9a90>
   1cb00:	ldr	r5, [sp, #44]	; 0x2c
   1cb04:	ldr	r8, [sp, #36]	; 0x24
   1cb08:	ldr	sl, [sp, #40]	; 0x28
   1cb0c:	bne	1cb20 <main@@Base+0x9848>
   1cb10:	ldrb	r0, [r2, #2]!
   1cb14:	cmp	r0, #32
   1cb18:	mov	r4, r2
   1cb1c:	bhi	18bb8 <main@@Base+0x58e0>
   1cb20:	mov	r0, r8
   1cb24:	mov	r2, r5
   1cb28:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1cb2c:	b	18bb4 <main@@Base+0x58dc>
   1cb30:	ldr	r8, [sp, #36]	; 0x24
   1cb34:	ldr	r5, [sp, #44]	; 0x2c
   1cb38:	mov	r1, r2
   1cb3c:	mov	r0, r8
   1cb40:	mov	r2, r5
   1cb44:	mov	r3, #9
   1cb48:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1cb4c:	ldr	sl, [sp, #40]	; 0x28
   1cb50:	b	1943c <main@@Base+0x6164>
   1cb54:	ldr	r0, [sp, #36]	; 0x24
   1cb58:	ldr	r2, [sp, #44]	; 0x2c
   1cb5c:	mov	r1, r4
   1cb60:	mov	r3, #9
   1cb64:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1cb68:	b	1cce0 <main@@Base+0x9a08>
   1cb6c:	mov	r4, r5
   1cb70:	b	18e58 <main@@Base+0x5b80>
   1cb74:	cmp	r0, #125	; 0x7d
   1cb78:	bne	1cd7c <main@@Base+0x9aa4>
   1cb7c:	ldr	r0, [sp, #44]	; 0x2c
   1cb80:	add	r1, r2, #1
   1cb84:	sub	r0, r0, r1
   1cb88:	cmp	r0, #2
   1cb8c:	blt	1cde0 <main@@Base+0x9b08>
   1cb90:	ldrb	r0, [r1]
   1cb94:	cmp	r0, #32
   1cb98:	bls	1cdcc <main@@Base+0x9af4>
   1cb9c:	mov	r4, r1
   1cba0:	b	18e58 <main@@Base+0x5b80>
   1cba4:	ldr	r8, [sp, #36]	; 0x24
   1cba8:	ldr	r5, [sp, #44]	; 0x2c
   1cbac:	mov	r1, r3
   1cbb0:	mov	r0, r8
   1cbb4:	mov	r2, r5
   1cbb8:	mov	r3, #10
   1cbbc:	b	18a40 <main@@Base+0x5768>
   1cbc0:	mov	r0, r6
   1cbc4:	mov	r1, r5
   1cbc8:	mov	r2, r5
   1cbcc:	b	1cd88 <main@@Base+0x9ab0>
   1cbd0:	ldr	r4, [sp, #44]	; 0x2c
   1cbd4:	b	1cc28 <main@@Base+0x9950>
   1cbd8:	cmp	r0, #93	; 0x5d
   1cbdc:	bne	1cdb8 <main@@Base+0x9ae0>
   1cbe0:	ldr	r0, [sp, #44]	; 0x2c
   1cbe4:	add	r1, r4, #1
   1cbe8:	sub	r0, r0, r1
   1cbec:	cmp	r0, #2
   1cbf0:	blt	1cc18 <main@@Base+0x9940>
   1cbf4:	ldrb	r0, [r1]
   1cbf8:	cmp	r0, #32
   1cbfc:	bls	1cc08 <main@@Base+0x9930>
   1cc00:	mov	r4, r1
   1cc04:	b	1cc28 <main@@Base+0x9950>
   1cc08:	bne	1cc18 <main@@Base+0x9940>
   1cc0c:	ldrb	r0, [r4, #2]!
   1cc10:	cmp	r0, #32
   1cc14:	bhi	1cc28 <main@@Base+0x9950>
   1cc18:	ldr	r0, [sp, #36]	; 0x24
   1cc1c:	ldr	r2, [sp, #44]	; 0x2c
   1cc20:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1cc24:	mov	r4, r0
   1cc28:	ldr	r8, [sp, #36]	; 0x24
   1cc2c:	ldr	r0, [r8]
   1cc30:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   1cc34:	ldr	r5, [sp, #44]	; 0x2c
   1cc38:	ldr	sl, [sp, #40]	; 0x28
   1cc3c:	cmp	r0, #0
   1cc40:	str	r0, [sp, #52]	; 0x34
   1cc44:	beq	13390 <main@@Base+0xb8>
   1cc48:	ldr	r0, [r8]
   1cc4c:	mov	r1, #13
   1cc50:	b	15ae4 <main@@Base+0x280c>
   1cc54:	ldr	r5, [sp, #44]	; 0x2c
   1cc58:	ldr	r8, [sp, #36]	; 0x24
   1cc5c:	ldr	sl, [sp, #40]	; 0x28
   1cc60:	bne	1cc74 <main@@Base+0x999c>
   1cc64:	ldrb	r0, [r2, #2]!
   1cc68:	cmp	r0, #32
   1cc6c:	mov	r4, r2
   1cc70:	bhi	18270 <main@@Base+0x4f98>
   1cc74:	mov	r0, r8
   1cc78:	mov	r2, r5
   1cc7c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1cc80:	b	1826c <main@@Base+0x4f94>
   1cc84:	ldr	r1, [sp, #44]	; 0x2c
   1cc88:	ldr	r0, [sp, #36]	; 0x24
   1cc8c:	mov	r2, r1
   1cc90:	b	1cdc4 <main@@Base+0x9aec>
   1cc94:	ldr	r5, [sp, #44]	; 0x2c
   1cc98:	ldr	r8, [sp, #36]	; 0x24
   1cc9c:	ldr	sl, [sp, #40]	; 0x28
   1cca0:	bne	1ccb4 <main@@Base+0x99dc>
   1cca4:	ldrb	r0, [r2, #2]!
   1cca8:	cmp	r0, #32
   1ccac:	mov	r4, r2
   1ccb0:	bhi	19440 <main@@Base+0x6168>
   1ccb4:	mov	r0, r8
   1ccb8:	mov	r2, r5
   1ccbc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ccc0:	b	1943c <main@@Base+0x6164>
   1ccc4:	bne	1ccd4 <main@@Base+0x99fc>
   1ccc8:	ldrb	r0, [r4, #2]!
   1cccc:	cmp	r0, #32
   1ccd0:	bhi	1cce4 <main@@Base+0x9a0c>
   1ccd4:	ldr	r0, [sp, #36]	; 0x24
   1ccd8:	ldr	r2, [sp, #44]	; 0x2c
   1ccdc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1cce0:	mov	r4, r0
   1cce4:	ldr	r5, [sp, #44]	; 0x2c
   1cce8:	ldr	r8, [sp, #36]	; 0x24
   1ccec:	ldr	sl, [sp, #40]	; 0x28
   1ccf0:	ldr	r0, [r8]
   1ccf4:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   1ccf8:	cmp	r0, #0
   1ccfc:	str	r0, [sp, #52]	; 0x34
   1cd00:	beq	13390 <main@@Base+0xb8>
   1cd04:	ldr	r0, [r8]
   1cd08:	mov	r1, #32
   1cd0c:	b	15ae4 <main@@Base+0x280c>
   1cd10:	ldr	r5, [sp, #44]	; 0x2c
   1cd14:	ldr	r8, [sp, #36]	; 0x24
   1cd18:	bne	1cd2c <main@@Base+0x9a54>
   1cd1c:	ldrb	r0, [r3, #2]!
   1cd20:	cmp	r0, #32
   1cd24:	mov	r4, r3
   1cd28:	bhi	18a48 <main@@Base+0x5770>
   1cd2c:	mov	r0, r8
   1cd30:	mov	r2, r5
   1cd34:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1cd38:	b	18a44 <main@@Base+0x576c>
   1cd3c:	ldr	r0, [sp, #36]	; 0x24
   1cd40:	ldr	r2, [sp, #44]	; 0x2c
   1cd44:	mov	r1, r4
   1cd48:	mov	r3, #9
   1cd4c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1cd50:	b	1cdac <main@@Base+0x9ad4>
   1cd54:	ldr	r0, [sp, #36]	; 0x24
   1cd58:	ldr	r2, [sp, #44]	; 0x2c
   1cd5c:	mov	r1, r4
   1cd60:	mov	r3, #9
   1cd64:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1cd68:	mov	r4, r0
   1cd6c:	ldr	r5, [sp, #44]	; 0x2c
   1cd70:	ldr	r8, [sp, #36]	; 0x24
   1cd74:	ldr	sl, [sp, #40]	; 0x28
   1cd78:	b	18f68 <main@@Base+0x5c90>
   1cd7c:	mov	r1, r2
   1cd80:	ldr	r0, [sp, #36]	; 0x24
   1cd84:	ldr	r2, [sp, #44]	; 0x2c
   1cd88:	mov	r3, #10
   1cd8c:	b	18e50 <main@@Base+0x5b78>
   1cd90:	bne	1cda0 <main@@Base+0x9ac8>
   1cd94:	ldrb	r0, [r4, #2]!
   1cd98:	cmp	r0, #32
   1cd9c:	bhi	1cdb0 <main@@Base+0x9ad8>
   1cda0:	ldr	r0, [sp, #36]	; 0x24
   1cda4:	ldr	r2, [sp, #44]	; 0x2c
   1cda8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1cdac:	mov	r4, r0
   1cdb0:	ldr	r8, [sp, #36]	; 0x24
   1cdb4:	b	1a65c <main@@Base+0x7384>
   1cdb8:	ldr	r0, [sp, #36]	; 0x24
   1cdbc:	ldr	r2, [sp, #44]	; 0x2c
   1cdc0:	mov	r1, r4
   1cdc4:	mov	r3, #9
   1cdc8:	b	199b0 <main@@Base+0x66d8>
   1cdcc:	bne	1cde0 <main@@Base+0x9b08>
   1cdd0:	ldrb	r0, [r2, #2]!
   1cdd4:	cmp	r0, #32
   1cdd8:	mov	r4, r2
   1cddc:	bhi	18e58 <main@@Base+0x5b80>
   1cde0:	ldr	r0, [sp, #36]	; 0x24
   1cde4:	ldr	r2, [sp, #44]	; 0x2c
   1cde8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1cdec:	b	18e54 <main@@Base+0x5b7c>
   1cdf0:	mov	r4, r5
   1cdf4:	b	1ce8c <main@@Base+0x9bb4>
   1cdf8:	cmp	r0, #125	; 0x7d
   1cdfc:	bne	1ce74 <main@@Base+0x9b9c>
   1ce00:	add	r4, r2, #1
   1ce04:	sub	r0, r5, r4
   1ce08:	cmp	r0, #2
   1ce0c:	blt	1ce34 <main@@Base+0x9b5c>
   1ce10:	ldrb	r0, [r4]
   1ce14:	cmp	r0, #32
   1ce18:	bhi	1ce8c <main@@Base+0x9bb4>
   1ce1c:	bne	1ce34 <main@@Base+0x9b5c>
   1ce20:	ldrb	r0, [r2, #2]!
   1ce24:	cmp	r0, #32
   1ce28:	bls	1ce34 <main@@Base+0x9b5c>
   1ce2c:	mov	r4, r2
   1ce30:	b	1ce8c <main@@Base+0x9bb4>
   1ce34:	mov	r0, r8
   1ce38:	mov	r1, r4
   1ce3c:	mov	r2, r5
   1ce40:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ce44:	b	1ce88 <main@@Base+0x9bb0>
   1ce48:	mov	r0, r8
   1ce4c:	mov	r1, r5
   1ce50:	b	1ce7c <main@@Base+0x9ba4>
   1ce54:	bne	1ce64 <main@@Base+0x9b8c>
   1ce58:	ldrb	r0, [r4, #2]!
   1ce5c:	cmp	r0, #32
   1ce60:	bhi	13430 <main@@Base+0x158>
   1ce64:	mov	r0, r8
   1ce68:	mov	r2, r5
   1ce6c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ce70:	b	1342c <main@@Base+0x154>
   1ce74:	mov	r0, r8
   1ce78:	mov	r1, r2
   1ce7c:	mov	r2, r5
   1ce80:	mov	r3, #10
   1ce84:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1ce88:	mov	r4, r0
   1ce8c:	ldr	r0, [sp, #28]
   1ce90:	b	13434 <main@@Base+0x15c>
   1ce94:	mov	r4, r1
   1ce98:	b	13390 <main@@Base+0xb8>
   1ce9c:	mov	r4, r6
   1cea0:	b	13390 <main@@Base+0xb8>
   1cea4:	ldr	r5, [sp, #44]	; 0x2c
   1cea8:	b	13390 <main@@Base+0xb8>
   1ceac:	mov	r4, r5
   1ceb0:	b	1ced8 <main@@Base+0x9c00>
   1ceb4:	mov	r4, r1
   1ceb8:	b	1cedc <main@@Base+0x9c04>
   1cebc:	ldr	r5, [sp, #44]	; 0x2c
   1cec0:	ldr	r8, [sp, #36]	; 0x24
   1cec4:	mov	r4, r7
   1cec8:	b	13390 <main@@Base+0xb8>
   1cecc:	mov	r4, r1
   1ced0:	b	1ced8 <main@@Base+0x9c00>
   1ced4:	mov	r4, r6
   1ced8:	ldr	r5, [sp, #44]	; 0x2c
   1cedc:	ldr	r8, [sp, #36]	; 0x24
   1cee0:	b	13390 <main@@Base+0xb8>
   1cee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cee8:	add	fp, sp, #28
   1ceec:	sub	sp, sp, #12
   1cef0:	mov	r5, r1
   1cef4:	sub	r1, r2, r1
   1cef8:	cmp	r1, #8
   1cefc:	movcs	r1, #8
   1cf00:	and	r1, r1, #15
   1cf04:	sub	r4, r1, #1
   1cf08:	cmp	r4, #7
   1cf0c:	bhi	1d07c <main@@Base+0x9da4>
   1cf10:	str	r3, [sp, #8]
   1cf14:	add	r8, pc, #32
   1cf18:	mov	r9, #0
   1cf1c:	mov	ip, #0
   1cf20:	mov	lr, #0
   1cf24:	mov	sl, #0
   1cf28:	mov	r6, #0
   1cf2c:	mov	r3, #0
   1cf30:	mov	r1, #0
   1cf34:	mov	r7, #0
   1cf38:	ldr	pc, [r8, r4, lsl #2]
   1cf3c:	andeq	ip, r1, r0, lsr #31
   1cf40:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1cf44:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1cf48:	andeq	ip, r1, r8, lsl #31
   1cf4c:	andeq	ip, r1, ip, ror pc
   1cf50:	andeq	ip, r1, r0, ror pc
   1cf54:	andeq	ip, r1, r0, ror #30
   1cf58:	andeq	ip, r1, ip, asr pc
   1cf5c:	ldrb	ip, [r5, #7]
   1cf60:	ldrb	r1, [r5, #6]
   1cf64:	mov	lr, r9
   1cf68:	orr	r1, ip, r1, lsl #8
   1cf6c:	mov	r9, r1
   1cf70:	ldrb	r1, [r5, #5]
   1cf74:	mov	sl, lr
   1cf78:	orr	r9, r9, r1, lsl #16
   1cf7c:	ldrb	r1, [r5, #4]
   1cf80:	mov	r6, sl
   1cf84:	orr	r9, r9, r1, lsl #24
   1cf88:	ldrb	r1, [r5, #3]
   1cf8c:	orr	r3, r1, r6
   1cf90:	ldrb	r1, [r5, #2]
   1cf94:	orr	r1, r3, r1, lsl #8
   1cf98:	ldrb	r3, [r5, #1]
   1cf9c:	orr	r7, r1, r3, lsl #16
   1cfa0:	ldrb	r1, [r5]
   1cfa4:	ldr	r3, [fp, #12]
   1cfa8:	ldr	r8, [fp, #8]
   1cfac:	movw	r4, #25957	; 0x6565
   1cfb0:	movt	r4, #18290	; 0x4772
   1cfb4:	orr	r7, r7, r1, lsl #24
   1cfb8:	mvn	r1, #-1845493760	; 0x92000000
   1cfbc:	subs	r1, r1, r9
   1cfc0:	sbcs	r1, r4, r7
   1cfc4:	bcc	1cffc <main@@Base+0x9d24>
   1cfc8:	movw	r1, #30053	; 0x7565
   1cfcc:	movt	r1, #17004	; 0x426c
   1cfd0:	teq	r7, r1
   1cfd4:	bne	1d07c <main@@Base+0x9da4>
   1cfd8:	str	r3, [sp]
   1cfdc:	mov	r1, r5
   1cfe0:	mov	r3, #4
   1cfe4:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   1cfe8:	cmp	r0, r5
   1cfec:	beq	1d07c <main@@Base+0x9da4>
   1cff0:	mov	r1, #0
   1cff4:	mov	r2, #8
   1cff8:	b	1d068 <main@@Base+0x9d90>
   1cffc:	movw	r6, #25600	; 0x6400
   1d000:	bic	r1, r7, #255	; 0xff
   1d004:	movt	r6, #21093	; 0x5265
   1d008:	teq	r1, r6
   1d00c:	bne	1d034 <main@@Base+0x9d5c>
   1d010:	str	r3, [sp]
   1d014:	mov	r1, r5
   1d018:	mov	r3, #3
   1d01c:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   1d020:	cmp	r0, r5
   1d024:	beq	1d07c <main@@Base+0x9da4>
   1d028:	mov	r1, #0
   1d02c:	mov	r2, #1
   1d030:	b	1d068 <main@@Base+0x9d90>
   1d034:	eor	r1, r7, r4
   1d038:	and	r7, r9, #-16777216	; 0xff000000
   1d03c:	eor	r7, r7, #1845493760	; 0x6e000000
   1d040:	orrs	r1, r7, r1
   1d044:	bne	1d07c <main@@Base+0x9da4>
   1d048:	str	r3, [sp]
   1d04c:	mov	r1, r5
   1d050:	mov	r3, #5
   1d054:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   1d058:	cmp	r0, r5
   1d05c:	beq	1d07c <main@@Base+0x9da4>
   1d060:	mov	r1, #0
   1d064:	mov	r2, #2
   1d068:	str	r2, [r8]
   1d06c:	str	r1, [r8, #4]
   1d070:	mov	r5, r0
   1d074:	ldr	r2, [sp, #8]
   1d078:	str	r1, [r2]
   1d07c:	mov	r0, r5
   1d080:	sub	sp, fp, #28
   1d084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d08c:	add	fp, sp, #28
   1d090:	push	{r0, r3}
   1d094:	sub	r0, r2, r1
   1d098:	cmp	r0, #8
   1d09c:	mov	r3, r0
   1d0a0:	movcs	r3, #8
   1d0a4:	and	r3, r3, #15
   1d0a8:	sub	r6, r3, #1
   1d0ac:	cmp	r6, #7
   1d0b0:	bhi	1d444 <main@@Base+0xa16c>
   1d0b4:	add	r3, pc, #32
   1d0b8:	mov	lr, #0
   1d0bc:	mov	r8, #0
   1d0c0:	mov	r9, #0
   1d0c4:	mov	sl, #0
   1d0c8:	mov	r7, #0
   1d0cc:	mov	r4, #0
   1d0d0:	mov	r5, #0
   1d0d4:	mov	ip, #0
   1d0d8:	ldr	pc, [r3, r6, lsl #2]
   1d0dc:	andeq	sp, r1, r0, asr #2
   1d0e0:	andeq	sp, r1, r8, lsr r1
   1d0e4:	andeq	sp, r1, r0, lsr r1
   1d0e8:	andeq	sp, r1, r8, lsr #2
   1d0ec:	andeq	sp, r1, ip, lsl r1
   1d0f0:	andeq	sp, r1, r0, lsl r1
   1d0f4:	andeq	sp, r1, r0, lsl #2
   1d0f8:	strdeq	sp, [r1], -ip
   1d0fc:	ldrb	r8, [r1, #7]
   1d100:	ldrb	r3, [r1, #6]
   1d104:	mov	r9, lr
   1d108:	orr	r3, r8, r3, lsl #8
   1d10c:	mov	lr, r3
   1d110:	ldrb	r3, [r1, #5]
   1d114:	mov	sl, r9
   1d118:	orr	lr, lr, r3, lsl #16
   1d11c:	ldrb	r3, [r1, #4]
   1d120:	mov	r7, sl
   1d124:	orr	lr, lr, r3, lsl #24
   1d128:	ldrb	r3, [r1, #3]
   1d12c:	orr	r4, r3, r7
   1d130:	ldrb	r3, [r1, #2]
   1d134:	orr	r5, r4, r3, lsl #8
   1d138:	ldrb	r3, [r1, #1]
   1d13c:	orr	ip, r5, r3, lsl #16
   1d140:	ldrb	r3, [r1]
   1d144:	movw	r4, #30061	; 0x756d
   1d148:	movw	r6, #30815	; 0x785f
   1d14c:	movt	r4, #25966	; 0x656e
   1d150:	movt	r6, #26725	; 0x6865
   1d154:	orr	r5, ip, r3, lsl #24
   1d158:	subs	r3, lr, r4
   1d15c:	sbcs	r3, r5, r6
   1d160:	bcs	1d1c8 <main@@Base+0x9ef0>
   1d164:	movw	r4, #27759	; 0x6c6f
   1d168:	mvn	r3, #-1912602624	; 0x8e000000
   1d16c:	bic	r6, r5, #255	; 0xff
   1d170:	movt	r4, #17263	; 0x436f
   1d174:	subs	r3, r3, lr
   1d178:	sbcs	r3, r4, r5
   1d17c:	bcc	1d224 <main@@Base+0x9f4c>
   1d180:	cmp	r0, #4
   1d184:	blt	1d444 <main@@Base+0xa16c>
   1d188:	movw	r0, #30976	; 0x7900
   1d18c:	movt	r0, #16750	; 0x416e
   1d190:	teq	r6, r0
   1d194:	bne	1d444 <main@@Base+0xa16c>
   1d198:	ldrb	r0, [r1, #3]
   1d19c:	mov	ip, r1
   1d1a0:	cmp	r0, #46	; 0x2e
   1d1a4:	addeq	ip, ip, #4
   1d1a8:	cmp	ip, r1
   1d1ac:	beq	1d444 <main@@Base+0xa16c>
   1d1b0:	ldr	r0, [sp]
   1d1b4:	ldr	r3, [sp, #4]
   1d1b8:	mov	r1, ip
   1d1bc:	sub	sp, fp, #28
   1d1c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1c4:	b	220c8 <main@@Base+0xedf0>
   1d1c8:	add	r3, r6, #64512	; 0xfc00
   1d1cc:	add	r7, r3, #17301504	; 0x1080000
   1d1d0:	subs	r3, lr, r4
   1d1d4:	sbcs	r3, r5, r7
   1d1d8:	bcs	1d26c <main@@Base+0x9f94>
   1d1dc:	cmp	r0, #9
   1d1e0:	blt	1d444 <main@@Base+0xa16c>
   1d1e4:	eor	r0, lr, r4
   1d1e8:	eor	r3, r5, r6
   1d1ec:	orrs	r0, r0, r3
   1d1f0:	bne	1d444 <main@@Base+0xa16c>
   1d1f4:	ldrb	r0, [r1, #8]
   1d1f8:	mov	ip, r1
   1d1fc:	cmp	r0, #46	; 0x2e
   1d200:	addeq	ip, ip, #9
   1d204:	cmp	ip, r1
   1d208:	beq	1d444 <main@@Base+0xa16c>
   1d20c:	ldr	r0, [sp]
   1d210:	ldr	r3, [sp, #4]
   1d214:	mov	r1, ip
   1d218:	sub	sp, fp, #28
   1d21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d220:	b	235e0 <main@@Base+0x10308>
   1d224:	movw	r3, #28416	; 0x6f00
   1d228:	movt	r3, #18031	; 0x466f
   1d22c:	teq	r6, r3
   1d230:	bne	1d2c8 <main@@Base+0x9ff0>
   1d234:	cmp	r0, #4
   1d238:	blt	1d444 <main@@Base+0xa16c>
   1d23c:	ldrb	r0, [r1, #3]
   1d240:	mov	ip, r1
   1d244:	cmp	r0, #46	; 0x2e
   1d248:	addeq	ip, ip, #4
   1d24c:	cmp	ip, r1
   1d250:	beq	1d444 <main@@Base+0xa16c>
   1d254:	ldr	r0, [sp]
   1d258:	ldr	r3, [sp, #4]
   1d25c:	mov	r1, ip
   1d260:	sub	sp, fp, #28
   1d264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d268:	b	23370 <main@@Base+0x10098>
   1d26c:	sub	r3, r6, #4352	; 0x1100
   1d270:	subs	r6, lr, r4
   1d274:	sub	r3, r3, #-100663296	; 0xfa000000
   1d278:	sbcs	r3, r5, r3
   1d27c:	bcs	1d314 <main@@Base+0xa03c>
   1d280:	cmp	r0, #9
   1d284:	blt	1d444 <main@@Base+0xa16c>
   1d288:	eor	r0, lr, r4
   1d28c:	eor	r3, r5, r7
   1d290:	orrs	r0, r0, r3
   1d294:	bne	1d444 <main@@Base+0xa16c>
   1d298:	ldrb	r0, [r1, #8]
   1d29c:	mov	ip, r1
   1d2a0:	cmp	r0, #46	; 0x2e
   1d2a4:	addeq	ip, ip, #9
   1d2a8:	cmp	ip, r1
   1d2ac:	beq	1d444 <main@@Base+0xa16c>
   1d2b0:	ldr	r0, [sp]
   1d2b4:	ldr	r3, [sp, #4]
   1d2b8:	mov	r1, ip
   1d2bc:	sub	sp, fp, #28
   1d2c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d2c4:	b	23790 <main@@Base+0x104b8>
   1d2c8:	cmp	r0, #6
   1d2cc:	blt	1d444 <main@@Base+0xa16c>
   1d2d0:	and	r0, lr, #-16777216	; 0xff000000
   1d2d4:	eor	r3, r5, r4
   1d2d8:	eor	r0, r0, #1912602624	; 0x72000000
   1d2dc:	orrs	r0, r0, r3
   1d2e0:	bne	1d444 <main@@Base+0xa16c>
   1d2e4:	ldrb	r0, [r1, #5]
   1d2e8:	mov	ip, r1
   1d2ec:	cmp	r0, #46	; 0x2e
   1d2f0:	addeq	ip, ip, #6
   1d2f4:	cmp	ip, r1
   1d2f8:	beq	1d444 <main@@Base+0xa16c>
   1d2fc:	ldr	r0, [sp]
   1d300:	ldr	r3, [sp, #4]
   1d304:	mov	r1, ip
   1d308:	sub	sp, fp, #28
   1d30c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d310:	b	1cee4 <main@@Base+0x9c0c>
   1d314:	movw	r3, #29817	; 0x7479
   1d318:	movw	r7, #29797	; 0x7465
   1d31c:	movt	r3, #28016	; 0x6d70
   1d320:	movt	r7, #28271	; 0x6e6f
   1d324:	eor	r3, lr, r3
   1d328:	eor	r7, r5, r7
   1d32c:	orrs	r3, r3, r7
   1d330:	beq	1d384 <main@@Base+0xa0ac>
   1d334:	movw	r7, #26463	; 0x675f
   1d338:	eor	r3, lr, r4
   1d33c:	movt	r7, #28261	; 0x6e65
   1d340:	eor	r7, r5, r7
   1d344:	orrs	r3, r3, r7
   1d348:	bne	1d444 <main@@Base+0xa16c>
   1d34c:	cmp	r0, #9
   1d350:	blt	1d444 <main@@Base+0xa16c>
   1d354:	ldrb	r0, [r1, #8]
   1d358:	mov	ip, r1
   1d35c:	cmp	r0, #46	; 0x2e
   1d360:	addeq	ip, ip, #9
   1d364:	cmp	ip, r1
   1d368:	beq	1d444 <main@@Base+0xa16c>
   1d36c:	ldr	r0, [sp]
   1d370:	ldr	r3, [sp, #4]
   1d374:	mov	r1, ip
   1d378:	sub	sp, fp, #28
   1d37c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d380:	b	23984 <main@@Base+0x106ac>
   1d384:	add	lr, r1, #8
   1d388:	sub	r9, r2, lr
   1d38c:	cmp	r9, #8
   1d390:	mov	r0, r9
   1d394:	movcs	r0, #8
   1d398:	and	r0, r0, #15
   1d39c:	sub	r6, r0, #1
   1d3a0:	cmp	r6, #7
   1d3a4:	bhi	1d444 <main@@Base+0xa16c>
   1d3a8:	add	r0, pc, #16
   1d3ac:	mov	ip, #0
   1d3b0:	mov	r8, #0
   1d3b4:	mov	r5, #0
   1d3b8:	mov	r7, #0
   1d3bc:	ldr	pc, [r0, r6, lsl #2]
   1d3c0:	strdeq	sp, [r1], -r8
   1d3c4:	strdeq	sp, [r1], -r0
   1d3c8:	andeq	sp, r1, r8, ror #7
   1d3cc:	andeq	sp, r1, r0, ror #7
   1d3d0:	andeq	sp, r1, r0, ror #7
   1d3d4:	andeq	sp, r1, r0, ror #7
   1d3d8:	andeq	sp, r1, r0, ror #7
   1d3dc:	andeq	sp, r1, r0, ror #7
   1d3e0:	ldrb	r8, [r1, #11]
   1d3e4:	mov	ip, #0
   1d3e8:	ldrb	r0, [r1, #10]
   1d3ec:	orr	r5, r8, r0, lsl #8
   1d3f0:	ldrb	r0, [r1, #9]
   1d3f4:	orr	r7, r5, r0, lsl #16
   1d3f8:	cmp	r9, #5
   1d3fc:	blt	1d444 <main@@Base+0xa16c>
   1d400:	ldrb	r0, [lr]
   1d404:	orr	r0, r7, r0, lsl #24
   1d408:	eor	r0, r0, r4
   1d40c:	orrs	r0, ip, r0
   1d410:	bne	1d444 <main@@Base+0xa16c>
   1d414:	ldrb	r0, [r1, #12]
   1d418:	mov	ip, lr
   1d41c:	cmp	r0, #46	; 0x2e
   1d420:	addeq	ip, r1, #13
   1d424:	cmp	ip, lr
   1d428:	beq	1d444 <main@@Base+0xa16c>
   1d42c:	ldr	r0, [sp]
   1d430:	ldr	r3, [sp, #4]
   1d434:	mov	r1, ip
   1d438:	sub	sp, fp, #28
   1d43c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d440:	b	23ad0 <main@@Base+0x107f8>
   1d444:	mov	r0, r1
   1d448:	sub	sp, fp, #28
   1d44c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d454:	add	fp, sp, #28
   1d458:	sub	sp, sp, #20
   1d45c:	mov	r8, r2
   1d460:	sub	r2, r2, r1
   1d464:	cmp	r2, #8
   1d468:	movcs	r2, #8
   1d46c:	and	r2, r2, #15
   1d470:	sub	r2, r2, #1
   1d474:	cmp	r2, #7
   1d478:	bhi	1e2cc <main@@Base+0xaff4>
   1d47c:	str	r0, [sp, #16]
   1d480:	mov	sl, #0
   1d484:	mov	ip, #0
   1d488:	mov	lr, #0
   1d48c:	mov	r9, #0
   1d490:	mov	r6, #0
   1d494:	mov	r4, #0
   1d498:	mov	r5, #0
   1d49c:	ldr	r0, [fp, #12]
   1d4a0:	str	r0, [sp, #12]
   1d4a4:	ldr	r0, [fp, #8]
   1d4a8:	str	r0, [sp, #8]
   1d4ac:	add	r7, pc, #4
   1d4b0:	mov	r0, #0
   1d4b4:	ldr	pc, [r7, r2, lsl #2]
   1d4b8:	andeq	sp, r1, ip, lsl r5
   1d4bc:	andeq	sp, r1, r4, lsl r5
   1d4c0:	andeq	sp, r1, ip, lsl #10
   1d4c4:	andeq	sp, r1, r4, lsl #10
   1d4c8:	strdeq	sp, [r1], -r8
   1d4cc:	andeq	sp, r1, ip, ror #9
   1d4d0:	ldrdeq	sp, [r1], -ip
   1d4d4:	ldrdeq	sp, [r1], -r8
   1d4d8:	ldrb	ip, [r1, #7]
   1d4dc:	ldrb	r2, [r1, #6]
   1d4e0:	mov	lr, sl
   1d4e4:	orr	r2, ip, r2, lsl #8
   1d4e8:	mov	sl, r2
   1d4ec:	ldrb	r2, [r1, #5]
   1d4f0:	mov	r9, lr
   1d4f4:	orr	sl, sl, r2, lsl #16
   1d4f8:	ldrb	r2, [r1, #4]
   1d4fc:	mov	r6, r9
   1d500:	orr	sl, sl, r2, lsl #24
   1d504:	ldrb	r2, [r1, #3]
   1d508:	orr	r4, r2, r6
   1d50c:	ldrb	r2, [r1, #2]
   1d510:	orr	r0, r4, r2, lsl #8
   1d514:	ldrb	r2, [r1, #1]
   1d518:	orr	r5, r0, r2, lsl #16
   1d51c:	ldrb	r2, [r1]
   1d520:	movw	r7, #11844	; 0x2e44
   1d524:	movw	r0, #18273	; 0x4761
   1d528:	movt	r7, #28005	; 0x6d65
   1d52c:	movt	r0, #19833	; 0x4d79
   1d530:	subs	r7, r7, sl
   1d534:	orr	r2, r5, r2, lsl #24
   1d538:	sbcs	r7, r0, r2
   1d53c:	bcc	1d6a4 <main@@Base+0xa3cc>
   1d540:	movw	r0, #31022	; 0x792e
   1d544:	movw	r7, #28276	; 0x6e74
   1d548:	movt	r0, #24947	; 0x6173
   1d54c:	movt	r7, #18017	; 0x4661
   1d550:	eor	r0, sl, r0
   1d554:	eor	r2, r2, r7
   1d558:	orrs	r0, r0, r2
   1d55c:	bne	1e2cc <main@@Base+0xaff4>
   1d560:	add	lr, r1, #8
   1d564:	sub	r0, r8, lr
   1d568:	cmp	r0, #8
   1d56c:	movcs	r0, #8
   1d570:	and	r0, r0, #15
   1d574:	sub	r6, r0, #1
   1d578:	cmp	r6, #7
   1d57c:	bhi	1e2cc <main@@Base+0xaff4>
   1d580:	str	r3, [sp, #4]
   1d584:	add	r2, pc, #32
   1d588:	mov	sl, #0
   1d58c:	mov	ip, #0
   1d590:	mov	r9, #0
   1d594:	mov	r4, #0
   1d598:	mov	r7, #0
   1d59c:	mov	r5, #0
   1d5a0:	mov	r0, #0
   1d5a4:	mov	r3, #0
   1d5a8:	ldr	pc, [r2, r6, lsl #2]
   1d5ac:	andeq	sp, r1, r0, lsl r6
   1d5b0:	andeq	sp, r1, r8, lsl #12
   1d5b4:	andeq	sp, r1, r0, lsl #12
   1d5b8:	strdeq	sp, [r1], -r8
   1d5bc:	andeq	sp, r1, ip, ror #11
   1d5c0:	andeq	sp, r1, r0, ror #11
   1d5c4:	ldrdeq	sp, [r1], -r0
   1d5c8:	andeq	sp, r1, ip, asr #11
   1d5cc:	ldrb	ip, [r1, #15]
   1d5d0:	ldrb	r0, [r1, #14]
   1d5d4:	mov	r9, sl
   1d5d8:	orr	r0, ip, r0, lsl #8
   1d5dc:	mov	sl, r0
   1d5e0:	ldrb	r0, [r1, #13]
   1d5e4:	mov	r4, r9
   1d5e8:	orr	sl, sl, r0, lsl #16
   1d5ec:	ldrb	r0, [r1, #12]
   1d5f0:	mov	r7, r4
   1d5f4:	orr	sl, sl, r0, lsl #24
   1d5f8:	ldrb	r0, [r1, #11]
   1d5fc:	orr	r5, r0, r7
   1d600:	ldrb	r0, [r1, #10]
   1d604:	orr	r0, r5, r0, lsl #8
   1d608:	ldrb	r2, [r1, #9]
   1d60c:	orr	r3, r0, r2, lsl #16
   1d610:	ldrb	r2, [lr]
   1d614:	movw	r0, #29797	; 0x7465
   1d618:	movt	r0, #24931	; 0x6163
   1d61c:	eor	r0, sl, r0
   1d620:	orr	r2, r3, r2, lsl #24
   1d624:	movw	r3, #24946	; 0x6172
   1d628:	movt	r3, #17256	; 0x4368
   1d62c:	eor	r2, r2, r3
   1d630:	orrs	r0, r0, r2
   1d634:	bne	1e2cc <main@@Base+0xaff4>
   1d638:	add	r0, r1, #16
   1d63c:	mov	r7, #-268435456	; 0xf0000000
   1d640:	sub	r2, r8, r0
   1d644:	cmp	r2, #8
   1d648:	mov	r3, r2
   1d64c:	movcs	r3, #8
   1d650:	add	r3, r7, r3, lsl #28
   1d654:	asr	r3, r3, #28
   1d658:	cmp	r3, #0
   1d65c:	cmpge	r2, #2
   1d660:	blt	1e2cc <main@@Base+0xaff4>
   1d664:	ldrb	r2, [r0]
   1d668:	cmp	r2, #114	; 0x72
   1d66c:	bne	1e2cc <main@@Base+0xaff4>
   1d670:	ldrb	r2, [r1, #17]
   1d674:	ldr	r3, [sp, #4]
   1d678:	cmp	r2, #46	; 0x2e
   1d67c:	mov	r2, r0
   1d680:	addeq	r2, r1, #18
   1d684:	cmp	r2, r0
   1d688:	beq	1e2cc <main@@Base+0xaff4>
   1d68c:	ldr	r0, [sp, #16]
   1d690:	mov	r1, r2
   1d694:	mov	r2, r8
   1d698:	sub	sp, fp, #28
   1d69c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d6a0:	b	23b50 <main@@Base+0x10878>
   1d6a4:	movw	r7, #11855	; 0x2e4f
   1d6a8:	eor	r2, r2, r0
   1d6ac:	movt	r7, #28005	; 0x6d65
   1d6b0:	eor	r7, sl, r7
   1d6b4:	orrs	r0, r7, r2
   1d6b8:	beq	1d850 <main@@Base+0xa578>
   1d6bc:	movw	r0, #11845	; 0x2e45
   1d6c0:	movt	r0, #28005	; 0x6d65
   1d6c4:	eor	r0, sl, r0
   1d6c8:	orrs	r0, r0, r2
   1d6cc:	bne	1e2cc <main@@Base+0xaff4>
   1d6d0:	add	lr, r1, #8
   1d6d4:	sub	r0, r8, lr
   1d6d8:	cmp	r0, #8
   1d6dc:	movcs	r0, #8
   1d6e0:	and	r0, r0, #15
   1d6e4:	sub	r6, r0, #1
   1d6e8:	cmp	r6, #7
   1d6ec:	bhi	1e2cc <main@@Base+0xaff4>
   1d6f0:	str	r3, [sp, #4]
   1d6f4:	add	r4, pc, #32
   1d6f8:	mov	r0, #0
   1d6fc:	mov	ip, #0
   1d700:	mov	r9, #0
   1d704:	mov	sl, #0
   1d708:	mov	r7, #0
   1d70c:	mov	r5, #0
   1d710:	mov	r2, #0
   1d714:	mov	r3, #0
   1d718:	ldr	pc, [r4, r6, lsl #2]
   1d71c:	andeq	sp, r1, r0, lsl #15
   1d720:	andeq	sp, r1, r8, ror r7
   1d724:	andeq	sp, r1, r0, ror r7
   1d728:	andeq	sp, r1, r8, ror #14
   1d72c:	andeq	sp, r1, ip, asr r7
   1d730:	andeq	sp, r1, r0, asr r7
   1d734:	andeq	sp, r1, r0, asr #14
   1d738:	andeq	sp, r1, ip, lsr r7
   1d73c:	ldrb	ip, [r1, #15]
   1d740:	ldrb	r2, [r1, #14]
   1d744:	mov	r9, r0
   1d748:	orr	r2, ip, r2, lsl #8
   1d74c:	mov	r0, r2
   1d750:	ldrb	r2, [r1, #13]
   1d754:	mov	sl, r9
   1d758:	orr	r0, r0, r2, lsl #16
   1d75c:	ldrb	r2, [r1, #12]
   1d760:	mov	r7, sl
   1d764:	orr	r0, r0, r2, lsl #24
   1d768:	ldrb	r2, [r1, #11]
   1d76c:	orr	r5, r2, r7
   1d770:	ldrb	r2, [r1, #10]
   1d774:	orr	r2, r5, r2, lsl #8
   1d778:	ldrb	r3, [r1, #9]
   1d77c:	orr	r3, r2, r3, lsl #16
   1d780:	ldrb	r2, [lr]
   1d784:	movw	r7, #28016	; 0x6d70
   1d788:	movt	r7, #30817	; 0x7861
   1d78c:	orr	r2, r3, r2, lsl #24
   1d790:	movw	r3, #11841	; 0x2e41
   1d794:	movt	r3, #27749	; 0x6c65
   1d798:	add	r5, r3, #39	; 0x27
   1d79c:	subs	r6, r0, r5
   1d7a0:	sbcs	r6, r2, r7
   1d7a4:	bcs	1dc1c <main@@Base+0xa944>
   1d7a8:	ldr	lr, [sp, #4]
   1d7ac:	add	r6, r3, #2
   1d7b0:	subs	r6, r0, r6
   1d7b4:	sbcs	r6, r2, r7
   1d7b8:	bcs	1dd38 <main@@Base+0xaa60>
   1d7bc:	eor	r0, r0, r3
   1d7c0:	eor	r2, r2, r7
   1d7c4:	orrs	r0, r0, r2
   1d7c8:	bne	1e2cc <main@@Base+0xaff4>
   1d7cc:	add	r0, r1, #16
   1d7d0:	sub	r2, r8, r0
   1d7d4:	cmp	r2, #8
   1d7d8:	mov	r3, r2
   1d7dc:	movcs	r3, #8
   1d7e0:	and	r7, r3, #15
   1d7e4:	sub	r3, r7, #2
   1d7e8:	cmp	r3, #7
   1d7ec:	bcs	1e1bc <main@@Base+0xaee4>
   1d7f0:	ldrb	r3, [r1, #17]
   1d7f4:	lsl	r7, r3, #16
   1d7f8:	mov	r3, #0
   1d7fc:	cmp	r2, #3
   1d800:	blt	1e2cc <main@@Base+0xaff4>
   1d804:	ldrb	r2, [r0]
   1d808:	orr	r2, r7, r2, lsl #24
   1d80c:	eor	r2, r2, #7929856	; 0x790000
   1d810:	eor	r2, r2, #1845493760	; 0x6e000000
   1d814:	orrs	r2, r3, r2
   1d818:	bne	1e2cc <main@@Base+0xaff4>
   1d81c:	ldrb	r2, [r1, #18]
   1d820:	cmp	r2, #46	; 0x2e
   1d824:	mov	r2, r0
   1d828:	addeq	r2, r1, #19
   1d82c:	cmp	r2, r0
   1d830:	beq	1e2cc <main@@Base+0xaff4>
   1d834:	ldr	r0, [sp, #16]
   1d838:	mov	r1, r2
   1d83c:	mov	r2, r8
   1d840:	mov	r3, lr
   1d844:	sub	sp, fp, #28
   1d848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d84c:	b	220c8 <main@@Base+0xedf0>
   1d850:	add	lr, r1, #8
   1d854:	sub	r0, r8, lr
   1d858:	cmp	r0, #8
   1d85c:	movcs	r0, #8
   1d860:	and	r0, r0, #15
   1d864:	sub	r7, r0, #1
   1d868:	cmp	r7, #7
   1d86c:	bhi	1e2cc <main@@Base+0xaff4>
   1d870:	str	r3, [sp, #4]
   1d874:	add	sl, pc, #32
   1d878:	mov	r2, #0
   1d87c:	mov	ip, #0
   1d880:	mov	r3, #0
   1d884:	mov	r4, #0
   1d888:	mov	r6, #0
   1d88c:	mov	r5, #0
   1d890:	mov	r0, #0
   1d894:	mov	r9, #0
   1d898:	ldr	pc, [sl, r7, lsl #2]
   1d89c:	andeq	sp, r1, r0, lsl #18
   1d8a0:	strdeq	sp, [r1], -r8
   1d8a4:	strdeq	sp, [r1], -r0
   1d8a8:	andeq	sp, r1, r8, ror #17
   1d8ac:	ldrdeq	sp, [r1], -ip
   1d8b0:	ldrdeq	sp, [r1], -r0
   1d8b4:	andeq	sp, r1, r0, asr #17
   1d8b8:			; <UNDEFINED> instruction: 0x0001d8bc
   1d8bc:	ldrb	ip, [r1, #15]
   1d8c0:	ldrb	r0, [r1, #14]
   1d8c4:	mov	r3, r2
   1d8c8:	orr	r0, ip, r0, lsl #8
   1d8cc:	mov	r2, r0
   1d8d0:	ldrb	r0, [r1, #13]
   1d8d4:	mov	r4, r3
   1d8d8:	orr	r2, r2, r0, lsl #16
   1d8dc:	ldrb	r0, [r1, #12]
   1d8e0:	mov	r6, r4
   1d8e4:	orr	r2, r2, r0, lsl #24
   1d8e8:	ldrb	r0, [r1, #11]
   1d8ec:	orr	r5, r0, r6
   1d8f0:	ldrb	r0, [r1, #10]
   1d8f4:	orr	r0, r5, r0, lsl #8
   1d8f8:	ldrb	r3, [r1, #9]
   1d8fc:	orr	r9, r0, r3, lsl #16
   1d900:	movw	r0, #28005	; 0x6d65
   1d904:	movw	r3, #25970	; 0x6572
   1d908:	movt	r0, #20065	; 0x4e61
   1d90c:	movt	r3, #29800	; 0x7468
   1d910:	eor	r0, r2, r0
   1d914:	ldrb	r2, [lr]
   1d918:	orr	r2, r9, r2, lsl #24
   1d91c:	eor	r2, r2, r3
   1d920:	orrs	r0, r0, r2
   1d924:	bne	1e2cc <main@@Base+0xaff4>
   1d928:	add	lr, r1, #16
   1d92c:	sub	r0, r8, lr
   1d930:	cmp	r0, #8
   1d934:	movcs	r0, #8
   1d938:	and	r0, r0, #15
   1d93c:	sub	r7, r0, #1
   1d940:	cmp	r7, #7
   1d944:	bhi	1e2cc <main@@Base+0xaff4>
   1d948:	add	r2, pc, #32
   1d94c:	mov	sl, #0
   1d950:	mov	ip, #0
   1d954:	mov	r9, #0
   1d958:	mov	r4, #0
   1d95c:	mov	r6, #0
   1d960:	mov	r5, #0
   1d964:	mov	r0, #0
   1d968:	mov	r3, #0
   1d96c:	ldr	pc, [r2, r7, lsl #2]
   1d970:	ldrdeq	sp, [r1], -r4
   1d974:	andeq	sp, r1, ip, asr #19
   1d978:	andeq	sp, r1, r4, asr #19
   1d97c:			; <UNDEFINED> instruction: 0x0001d9bc
   1d980:			; <UNDEFINED> instruction: 0x0001d9b0
   1d984:	andeq	sp, r1, r4, lsr #19
   1d988:	muleq	r1, r4, r9
   1d98c:	muleq	r1, r0, r9
   1d990:	ldrb	ip, [r1, #23]
   1d994:	ldrb	r0, [r1, #22]
   1d998:	mov	r9, sl
   1d99c:	orr	r0, ip, r0, lsl #8
   1d9a0:	mov	sl, r0
   1d9a4:	ldrb	r0, [r1, #21]
   1d9a8:	mov	r4, r9
   1d9ac:	orr	sl, sl, r0, lsl #16
   1d9b0:	ldrb	r0, [r1, #20]
   1d9b4:	mov	r6, r4
   1d9b8:	orr	sl, sl, r0, lsl #24
   1d9bc:	ldrb	r0, [r1, #19]
   1d9c0:	orr	r5, r0, r6
   1d9c4:	ldrb	r0, [r1, #18]
   1d9c8:	orr	r0, r5, r0, lsl #8
   1d9cc:	ldrb	r2, [r1, #17]
   1d9d0:	orr	r3, r0, r2, lsl #16
   1d9d4:	ldrb	r2, [lr]
   1d9d8:	movw	r0, #18034	; 0x4672
   1d9dc:	movt	r0, #25902	; 0x652e
   1d9e0:	eor	r0, sl, r0
   1d9e4:	orr	r2, r3, r2, lsl #24
   1d9e8:	movw	r3, #24931	; 0x6163
   1d9ec:	movt	r3, #21360	; 0x5370
   1d9f0:	eor	r2, r2, r3
   1d9f4:	orrs	r0, r0, r2
   1d9f8:	bne	1e2cc <main@@Base+0xaff4>
   1d9fc:	add	lr, r1, #24
   1da00:	sub	r0, r8, lr
   1da04:	cmp	r0, #8
   1da08:	movcs	r0, #8
   1da0c:	and	r0, r0, #15
   1da10:	sub	r7, r0, #1
   1da14:	cmp	r7, #7
   1da18:	bhi	1e2cc <main@@Base+0xaff4>
   1da1c:	add	r2, pc, #32
   1da20:	mov	sl, #0
   1da24:	mov	ip, #0
   1da28:	mov	r9, #0
   1da2c:	mov	r4, #0
   1da30:	mov	r6, #0
   1da34:	mov	r5, #0
   1da38:	mov	r0, #0
   1da3c:	mov	r3, #0
   1da40:	ldr	pc, [r2, r7, lsl #2]
   1da44:	andeq	sp, r1, r8, lsr #21
   1da48:	andeq	sp, r1, r0, lsr #21
   1da4c:	muleq	r1, r8, sl
   1da50:	muleq	r1, r0, sl
   1da54:	andeq	sp, r1, r4, lsl #21
   1da58:	andeq	sp, r1, r8, ror sl
   1da5c:	andeq	sp, r1, r8, ror #20
   1da60:	andeq	sp, r1, r4, ror #20
   1da64:	ldrb	ip, [r1, #31]
   1da68:	ldrb	r0, [r1, #30]
   1da6c:	mov	r9, sl
   1da70:	orr	r0, ip, r0, lsl #8
   1da74:	mov	sl, r0
   1da78:	ldrb	r0, [r1, #29]
   1da7c:	mov	r4, r9
   1da80:	orr	sl, sl, r0, lsl #16
   1da84:	ldrb	r0, [r1, #28]
   1da88:	mov	r6, r4
   1da8c:	orr	sl, sl, r0, lsl #24
   1da90:	ldrb	r0, [r1, #27]
   1da94:	orr	r5, r0, r6
   1da98:	ldrb	r0, [r1, #26]
   1da9c:	orr	r0, r5, r0, lsl #8
   1daa0:	ldrb	r2, [r1, #25]
   1daa4:	orr	r3, r0, r2, lsl #16
   1daa8:	ldrb	r2, [lr]
   1daac:	movw	r0, #30052	; 0x7564
   1dab0:	movt	r0, #25452	; 0x636c
   1dab4:	eor	r0, sl, r0
   1dab8:	orr	r2, r3, r2, lsl #24
   1dabc:	movw	r3, #18798	; 0x496e
   1dac0:	movt	r3, #28525	; 0x6f6d
   1dac4:	eor	r2, r2, r3
   1dac8:	orrs	r0, r0, r2
   1dacc:	bne	1e2cc <main@@Base+0xaff4>
   1dad0:	add	r0, r1, #32
   1dad4:	mov	r7, #-268435456	; 0xf0000000
   1dad8:	sub	r2, r8, r0
   1dadc:	cmp	r2, #8
   1dae0:	mov	r3, r2
   1dae4:	movcs	r3, #8
   1dae8:	add	r3, r7, r3, lsl #28
   1daec:	asr	r3, r3, #28
   1daf0:	cmp	r3, #0
   1daf4:	cmpge	r2, #2
   1daf8:	blt	1e2cc <main@@Base+0xaff4>
   1dafc:	ldrb	r2, [r0]
   1db00:	cmp	r2, #101	; 0x65
   1db04:	bne	1e2cc <main@@Base+0xaff4>
   1db08:	ldrb	r2, [r1, #33]	; 0x21
   1db0c:	ldr	r9, [sp, #4]
   1db10:	mov	r7, r0
   1db14:	cmp	r2, #46	; 0x2e
   1db18:	addeq	r7, r1, #34	; 0x22
   1db1c:	cmp	r7, r0
   1db20:	beq	1e2cc <main@@Base+0xaff4>
   1db24:	sub	r0, r8, r7
   1db28:	cmp	r0, #8
   1db2c:	movcs	r0, #8
   1db30:	and	r0, r0, #15
   1db34:	sub	r2, r0, #1
   1db38:	cmp	r2, #7
   1db3c:	bhi	1e2c8 <main@@Base+0xaff0>
   1db40:	add	r5, pc, #32
   1db44:	mov	sl, #0
   1db48:	mov	ip, #0
   1db4c:	mov	lr, #0
   1db50:	mov	r1, #0
   1db54:	mov	r3, #0
   1db58:	mov	r6, #0
   1db5c:	mov	r4, #0
   1db60:	mov	r0, #0
   1db64:	ldr	pc, [r5, r2, lsl #2]
   1db68:	andeq	sp, r1, ip, asr #23
   1db6c:	andeq	sp, r1, r4, asr #23
   1db70:			; <UNDEFINED> instruction: 0x0001dbbc
   1db74:			; <UNDEFINED> instruction: 0x0001dbb4
   1db78:	andeq	sp, r1, r8, lsr #23
   1db7c:	muleq	r1, ip, fp
   1db80:	andeq	sp, r1, ip, lsl #23
   1db84:	andeq	sp, r1, r8, lsl #23
   1db88:	ldrb	ip, [r7, #7]
   1db8c:	ldrb	r0, [r7, #6]
   1db90:	mov	lr, sl
   1db94:	orr	r0, ip, r0, lsl #8
   1db98:	mov	sl, r0
   1db9c:	ldrb	r0, [r7, #5]
   1dba0:	mov	r1, lr
   1dba4:	orr	sl, sl, r0, lsl #16
   1dba8:	ldrb	r0, [r7, #4]
   1dbac:	mov	r3, r1
   1dbb0:	orr	sl, sl, r0, lsl #24
   1dbb4:	ldrb	r0, [r7, #3]
   1dbb8:	orr	r6, r0, r3
   1dbbc:	ldrb	r0, [r7, #2]
   1dbc0:	orr	r4, r6, r0, lsl #8
   1dbc4:	ldrb	r0, [r7, #1]
   1dbc8:	orr	r0, r4, r0, lsl #16
   1dbcc:	ldrb	r1, [r7]
   1dbd0:	orr	r6, r0, r1, lsl #24
   1dbd4:	movw	r1, #28416	; 0x6f00
   1dbd8:	bic	r0, r6, #255	; 0xff
   1dbdc:	movt	r1, #18031	; 0x466f
   1dbe0:	teq	r0, r1
   1dbe4:	bne	1e1e4 <main@@Base+0xaf0c>
   1dbe8:	ldr	r0, [sp, #12]
   1dbec:	mov	r1, r7
   1dbf0:	mov	r2, r8
   1dbf4:	mov	r3, #3
   1dbf8:	str	r0, [sp]
   1dbfc:	ldr	r0, [sp, #16]
   1dc00:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   1dc04:	cmp	r0, r7
   1dc08:	beq	1e1e4 <main@@Base+0xaf0c>
   1dc0c:	mov	r1, r0
   1dc10:	mov	r3, #0
   1dc14:	mov	r2, #17
   1dc18:	b	1e27c <main@@Base+0xafa4>
   1dc1c:	eor	r6, r2, r7
   1dc20:	eor	r5, r0, r5
   1dc24:	orrs	r5, r5, r6
   1dc28:	bne	1de30 <main@@Base+0xab58>
   1dc2c:	add	ip, r1, #16
   1dc30:	sub	r2, r8, ip
   1dc34:	cmp	r2, #8
   1dc38:	mov	r0, r2
   1dc3c:	movcs	r0, #8
   1dc40:	and	r0, r0, #15
   1dc44:	sub	r4, r0, #1
   1dc48:	cmp	r4, #7
   1dc4c:	bhi	1e2cc <main@@Base+0xaff4>
   1dc50:	add	r6, pc, #28
   1dc54:	mov	r9, #0
   1dc58:	mov	lr, #0
   1dc5c:	mov	sl, #0
   1dc60:	mov	r3, #0
   1dc64:	mov	r5, #0
   1dc68:	mov	r0, #0
   1dc6c:	mov	r7, #0
   1dc70:	ldr	pc, [r6, r4, lsl #2]
   1dc74:	ldrdeq	sp, [r1], -r0
   1dc78:	andeq	sp, r1, r8, asr #25
   1dc7c:	andeq	sp, r1, r0, asr #25
   1dc80:			; <UNDEFINED> instruction: 0x0001dcb8
   1dc84:	andeq	sp, r1, ip, lsr #25
   1dc88:	muleq	r1, ip, ip
   1dc8c:	muleq	r1, r4, ip
   1dc90:	muleq	r1, r4, ip
   1dc94:	ldrb	r0, [r1, #22]
   1dc98:	lsl	lr, r0, #8
   1dc9c:	ldrb	r0, [r1, #21]
   1dca0:	mov	sl, r9
   1dca4:	orr	r0, lr, r0, lsl #16
   1dca8:	mov	r9, r0
   1dcac:	ldrb	r0, [r1, #20]
   1dcb0:	mov	r3, sl
   1dcb4:	orr	r9, r9, r0, lsl #24
   1dcb8:	ldrb	r0, [r1, #19]
   1dcbc:	orr	r5, r0, r3
   1dcc0:	ldrb	r0, [r1, #18]
   1dcc4:	orr	r0, r5, r0, lsl #8
   1dcc8:	ldrb	r3, [r1, #17]
   1dccc:	orr	r7, r0, r3, lsl #16
   1dcd0:	cmp	r2, #8
   1dcd4:	blt	1e2cc <main@@Base+0xaff4>
   1dcd8:	ldrb	r0, [ip]
   1dcdc:	movw	r2, #24421	; 0x5f65
   1dce0:	movw	r3, #27904	; 0x6d00
   1dce4:	movt	r2, #25959	; 0x6567
   1dce8:	movt	r3, #28277	; 0x6e75
   1dcec:	add	r2, r2, #1114112	; 0x110000
   1dcf0:	eor	r3, r9, r3
   1dcf4:	orr	r0, r7, r0, lsl #24
   1dcf8:	eor	r0, r0, r2
   1dcfc:	orrs	r0, r3, r0
   1dd00:	bne	1e2cc <main@@Base+0xaff4>
   1dd04:	ldrb	r0, [r1, #23]
   1dd08:	ldr	r3, [sp, #4]
   1dd0c:	mov	r2, ip
   1dd10:	cmp	r0, #46	; 0x2e
   1dd14:	addeq	r2, r1, #24
   1dd18:	cmp	r2, ip
   1dd1c:	beq	1e2cc <main@@Base+0xaff4>
   1dd20:	ldr	r0, [sp, #16]
   1dd24:	mov	r1, r2
   1dd28:	mov	r2, r8
   1dd2c:	sub	sp, fp, #28
   1dd30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd34:	b	235e0 <main@@Base+0x10308>
   1dd38:	movw	r3, #11846	; 0x2e46
   1dd3c:	eor	r2, r2, r7
   1dd40:	movt	r3, #27749	; 0x6c65
   1dd44:	eor	r3, r0, r3
   1dd48:	orrs	r3, r3, r2
   1dd4c:	beq	1e090 <main@@Base+0xadb8>
   1dd50:	movw	r3, #11843	; 0x2e43
   1dd54:	movt	r3, #27749	; 0x6c65
   1dd58:	eor	r0, r0, r3
   1dd5c:	orrs	r0, r0, r2
   1dd60:	bne	1e2cc <main@@Base+0xaff4>
   1dd64:	add	r0, r1, #16
   1dd68:	sub	r2, r8, r0
   1dd6c:	cmp	r2, #8
   1dd70:	mov	r3, r2
   1dd74:	movcs	r3, #8
   1dd78:	and	r3, r3, #15
   1dd7c:	sub	r6, r3, #1
   1dd80:	cmp	r6, #7
   1dd84:	bhi	1e2cc <main@@Base+0xaff4>
   1dd88:	add	r3, pc, #16
   1dd8c:	mov	ip, #0
   1dd90:	mov	r7, #0
   1dd94:	mov	r4, #0
   1dd98:	mov	r5, #0
   1dd9c:	ldr	pc, [r3, r6, lsl #2]
   1dda0:	ldrdeq	sp, [r1], -r8
   1dda4:	ldrdeq	sp, [r1], -r0
   1dda8:	andeq	sp, r1, r8, asr #27
   1ddac:	andeq	sp, r1, r0, asr #27
   1ddb0:	andeq	sp, r1, r0, asr #27
   1ddb4:	andeq	sp, r1, r0, asr #27
   1ddb8:	andeq	sp, r1, r0, asr #27
   1ddbc:	andeq	sp, r1, r0, asr #27
   1ddc0:	ldrb	r7, [r1, #19]
   1ddc4:	mov	ip, #0
   1ddc8:	ldrb	r3, [r1, #18]
   1ddcc:	orr	r4, r7, r3, lsl #8
   1ddd0:	ldrb	r3, [r1, #17]
   1ddd4:	orr	r5, r4, r3, lsl #16
   1ddd8:	cmp	r2, #5
   1dddc:	blt	1e2cc <main@@Base+0xaff4>
   1dde0:	ldrb	r2, [r0]
   1dde4:	movw	r3, #28530	; 0x6f72
   1dde8:	movt	r3, #28524	; 0x6f6c
   1ddec:	orr	r2, r5, r2, lsl #24
   1ddf0:	eor	r2, r2, r3
   1ddf4:	orrs	r2, ip, r2
   1ddf8:	bne	1e2cc <main@@Base+0xaff4>
   1ddfc:	ldrb	r2, [r1, #20]
   1de00:	cmp	r2, #46	; 0x2e
   1de04:	mov	r2, r0
   1de08:	addeq	r2, r1, #21
   1de0c:	cmp	r2, r0
   1de10:	beq	1e2cc <main@@Base+0xaff4>
   1de14:	ldr	r0, [sp, #16]
   1de18:	mov	r1, r2
   1de1c:	mov	r2, r8
   1de20:	mov	r3, lr
   1de24:	sub	sp, fp, #28
   1de28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de2c:	b	1cee4 <main@@Base+0x9c0c>
   1de30:	add	r5, r3, #45	; 0x2d
   1de34:	subs	r4, r0, r5
   1de38:	sbcs	r2, r2, r7
   1de3c:	bcs	1df60 <main@@Base+0xac88>
   1de40:	add	r2, r3, #40	; 0x28
   1de44:	eor	r0, r0, r2
   1de48:	orrs	r0, r0, r6
   1de4c:	bne	1e2cc <main@@Base+0xaff4>
   1de50:	add	ip, r1, #16
   1de54:	sub	r2, r8, ip
   1de58:	cmp	r2, #8
   1de5c:	mov	r0, r2
   1de60:	movcs	r0, #8
   1de64:	and	r0, r0, #15
   1de68:	sub	r4, r0, #1
   1de6c:	cmp	r4, #7
   1de70:	bhi	1e2cc <main@@Base+0xaff4>
   1de74:	add	r6, pc, #28
   1de78:	mov	r9, #0
   1de7c:	mov	lr, #0
   1de80:	mov	sl, #0
   1de84:	mov	r3, #0
   1de88:	mov	r5, #0
   1de8c:	mov	r7, #0
   1de90:	mov	r0, #0
   1de94:	ldr	pc, [r6, r4, lsl #2]
   1de98:	strdeq	sp, [r1], -r4
   1de9c:	andeq	sp, r1, ip, ror #29
   1dea0:	andeq	sp, r1, r4, ror #29
   1dea4:	ldrdeq	sp, [r1], -ip
   1dea8:	ldrdeq	sp, [r1], -r0
   1deac:	andeq	sp, r1, r0, asr #29
   1deb0:			; <UNDEFINED> instruction: 0x0001deb8
   1deb4:			; <UNDEFINED> instruction: 0x0001deb8
   1deb8:	ldrb	r0, [r1, #22]
   1debc:	lsl	lr, r0, #8
   1dec0:	ldrb	r0, [r1, #21]
   1dec4:	mov	sl, r9
   1dec8:	orr	r0, lr, r0, lsl #16
   1decc:	mov	r9, r0
   1ded0:	ldrb	r0, [r1, #20]
   1ded4:	mov	r3, sl
   1ded8:	orr	r9, r9, r0, lsl #24
   1dedc:	ldrb	r0, [r1, #19]
   1dee0:	orr	r5, r0, r3
   1dee4:	ldrb	r0, [r1, #18]
   1dee8:	orr	r7, r5, r0, lsl #8
   1deec:	ldrb	r0, [r1, #17]
   1def0:	orr	r0, r7, r0, lsl #16
   1def4:	cmp	r2, #8
   1def8:	blt	1e2cc <main@@Base+0xaff4>
   1defc:	ldrb	r3, [ip]
   1df00:	movw	r2, #24421	; 0x5f65
   1df04:	movt	r2, #25959	; 0x6567
   1df08:	add	r2, r2, #851968	; 0xd0000
   1df0c:	add	r2, r2, #150994944	; 0x9000000
   1df10:	orr	r0, r0, r3, lsl #24
   1df14:	movw	r3, #27904	; 0x6d00
   1df18:	movt	r3, #28277	; 0x6e75
   1df1c:	eor	r0, r0, r2
   1df20:	eor	r3, r9, r3
   1df24:	orrs	r0, r3, r0
   1df28:	bne	1e2cc <main@@Base+0xaff4>
   1df2c:	ldrb	r0, [r1, #23]
   1df30:	ldr	r3, [sp, #4]
   1df34:	mov	r2, ip
   1df38:	cmp	r0, #46	; 0x2e
   1df3c:	addeq	r2, r1, #24
   1df40:	cmp	r2, ip
   1df44:	beq	1e2cc <main@@Base+0xaff4>
   1df48:	ldr	r0, [sp, #16]
   1df4c:	mov	r1, r2
   1df50:	mov	r2, r8
   1df54:	sub	sp, fp, #28
   1df58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df5c:	b	23790 <main@@Base+0x104b8>
   1df60:	eor	r0, r0, r5
   1df64:	orrs	r0, r0, r6
   1df68:	bne	1e2cc <main@@Base+0xaff4>
   1df6c:	add	lr, r1, #16
   1df70:	sub	r2, r8, lr
   1df74:	cmp	r2, #8
   1df78:	mov	r0, r2
   1df7c:	movcs	r0, #8
   1df80:	and	r0, r0, #15
   1df84:	sub	r4, r0, #1
   1df88:	cmp	r4, #7
   1df8c:	bhi	1e2cc <main@@Base+0xaff4>
   1df90:	add	ip, pc, #36	; 0x24
   1df94:	mov	r0, #0
   1df98:	mov	sl, #0
   1df9c:	mov	r9, #0
   1dfa0:	mov	r7, #0
   1dfa4:	mov	r6, #0
   1dfa8:	mov	r5, #0
   1dfac:	mov	r3, #0
   1dfb0:	str	r0, [sp, #12]
   1dfb4:	mov	r0, #0
   1dfb8:	ldr	pc, [ip, r4, lsl #2]
   1dfbc:	andeq	lr, r1, r8, lsr #32
   1dfc0:	andeq	lr, r1, r0, lsr #32
   1dfc4:	andeq	lr, r1, r8, lsl r0
   1dfc8:	andeq	lr, r1, r0, lsl r0
   1dfcc:	andeq	lr, r1, r4
   1dfd0:	strdeq	sp, [r1], -r8
   1dfd4:	andeq	sp, r1, r4, ror #31
   1dfd8:	ldrdeq	sp, [r1], -ip
   1dfdc:	ldrb	r0, [r1, #23]
   1dfe0:	str	r0, [sp, #12]
   1dfe4:	ldrb	r0, [r1, #22]
   1dfe8:	ldr	r3, [sp, #12]
   1dfec:	mov	r9, sl
   1dff0:	orr	r0, r3, r0, lsl #8
   1dff4:	mov	sl, r0
   1dff8:	ldrb	r0, [r1, #21]
   1dffc:	mov	r7, r9
   1e000:	orr	sl, sl, r0, lsl #16
   1e004:	ldrb	r0, [r1, #20]
   1e008:	mov	r6, r7
   1e00c:	orr	sl, sl, r0, lsl #24
   1e010:	ldrb	r0, [r1, #19]
   1e014:	orr	r5, r0, r6
   1e018:	ldrb	r0, [r1, #18]
   1e01c:	orr	r0, r5, r0, lsl #8
   1e020:	ldrb	r3, [r1, #17]
   1e024:	orr	r3, r0, r3, lsl #16
   1e028:	ldrb	r0, [lr]
   1e02c:	movw	r7, #27904	; 0x6d00
   1e030:	cmp	r2, #8
   1e034:	movt	r7, #28277	; 0x6e75
   1e038:	orr	r4, r3, r0, lsl #24
   1e03c:	blt	1e114 <main@@Base+0xae3c>
   1e040:	movw	r2, #24421	; 0x5f65
   1e044:	bic	r0, sl, #255	; 0xff
   1e048:	movt	r2, #25959	; 0x6567
   1e04c:	eor	r0, r0, r7
   1e050:	eor	r2, r4, r2
   1e054:	orrs	r0, r0, r2
   1e058:	bne	1e114 <main@@Base+0xae3c>
   1e05c:	ldrb	r0, [r1, #23]
   1e060:	mov	r2, lr
   1e064:	cmp	r0, #46	; 0x2e
   1e068:	addeq	r2, r1, #24
   1e06c:	cmp	r2, lr
   1e070:	beq	1e114 <main@@Base+0xae3c>
   1e074:	ldr	r0, [sp, #16]
   1e078:	ldr	r3, [sp, #4]
   1e07c:	mov	r1, r2
   1e080:	mov	r2, r8
   1e084:	sub	sp, fp, #28
   1e088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e08c:	b	23984 <main@@Base+0x106ac>
   1e090:	add	r0, r1, #16
   1e094:	sub	r2, r8, r0
   1e098:	cmp	r2, #8
   1e09c:	mov	r3, r2
   1e0a0:	movcs	r3, #8
   1e0a4:	and	r7, r3, #15
   1e0a8:	sub	r3, r7, #2
   1e0ac:	cmp	r3, #7
   1e0b0:	bcs	1e1d0 <main@@Base+0xaef8>
   1e0b4:	ldrb	r3, [r1, #17]
   1e0b8:	lsl	r7, r3, #16
   1e0bc:	mov	r3, #0
   1e0c0:	cmp	r2, #3
   1e0c4:	blt	1e2cc <main@@Base+0xaff4>
   1e0c8:	ldrb	r2, [r0]
   1e0cc:	orr	r2, r7, r2, lsl #24
   1e0d0:	eor	r2, r2, #7274496	; 0x6f0000
   1e0d4:	eor	r2, r2, #1862270976	; 0x6f000000
   1e0d8:	orrs	r2, r3, r2
   1e0dc:	bne	1e2cc <main@@Base+0xaff4>
   1e0e0:	ldrb	r2, [r1, #18]
   1e0e4:	cmp	r2, #46	; 0x2e
   1e0e8:	mov	r2, r0
   1e0ec:	addeq	r2, r1, #19
   1e0f0:	cmp	r2, r0
   1e0f4:	beq	1e2cc <main@@Base+0xaff4>
   1e0f8:	ldr	r0, [sp, #16]
   1e0fc:	mov	r1, r2
   1e100:	mov	r2, r8
   1e104:	mov	r3, lr
   1e108:	sub	sp, fp, #28
   1e10c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e110:	b	23370 <main@@Base+0x10098>
   1e114:	movw	r0, #31077	; 0x7965
   1e118:	movw	r2, #25965	; 0x656d
   1e11c:	movt	r0, #28788	; 0x7074
   1e120:	movt	r2, #28532	; 0x6f74
   1e124:	eor	r0, sl, r0
   1e128:	eor	r2, r4, r2
   1e12c:	orrs	r0, r0, r2
   1e130:	bne	1e2cc <main@@Base+0xaff4>
   1e134:	add	r0, r1, #24
   1e138:	sub	r2, r8, r0
   1e13c:	cmp	r2, #8
   1e140:	mov	r3, r2
   1e144:	movcs	r3, #8
   1e148:	and	r6, r3, #15
   1e14c:	sub	r3, r6, #3
   1e150:	cmp	r3, #6
   1e154:	bcs	1e290 <main@@Base+0xafb8>
   1e158:	ldrb	r3, [r1, #26]
   1e15c:	mov	r4, #0
   1e160:	lsl	r6, r3, #8
   1e164:	ldr	r3, [sp, #4]
   1e168:	ldrb	r5, [r1, #25]
   1e16c:	orr	r6, r6, r5, lsl #16
   1e170:	cmp	r2, #4
   1e174:	blt	1e2cc <main@@Base+0xaff4>
   1e178:	ldrb	r2, [r0]
   1e17c:	orr	r2, r6, r2, lsl #24
   1e180:	eor	r2, r2, r7
   1e184:	orrs	r2, r4, r2
   1e188:	bne	1e2cc <main@@Base+0xaff4>
   1e18c:	ldrb	r2, [r1, #27]
   1e190:	cmp	r2, #46	; 0x2e
   1e194:	mov	r2, r0
   1e198:	addeq	r2, r1, #28
   1e19c:	cmp	r2, r0
   1e1a0:	beq	1e2cc <main@@Base+0xaff4>
   1e1a4:	ldr	r0, [sp, #16]
   1e1a8:	mov	r1, r2
   1e1ac:	mov	r2, r8
   1e1b0:	sub	sp, fp, #28
   1e1b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1b8:	b	23ad0 <main@@Base+0x107f8>
   1e1bc:	cmp	r7, #1
   1e1c0:	mov	r3, #0
   1e1c4:	mov	r7, #0
   1e1c8:	beq	1d7fc <main@@Base+0xa524>
   1e1cc:	b	1e2cc <main@@Base+0xaff4>
   1e1d0:	cmp	r7, #1
   1e1d4:	mov	r3, #0
   1e1d8:	mov	r7, #0
   1e1dc:	beq	1e0c0 <main@@Base+0xade8>
   1e1e0:	b	1e2cc <main@@Base+0xaff4>
   1e1e4:	movw	r0, #25942	; 0x6556
   1e1e8:	movw	r1, #25452	; 0x636c
   1e1ec:	movt	r0, #30052	; 0x7564
   1e1f0:	movt	r1, #18798	; 0x496e
   1e1f4:	eor	r0, sl, r0
   1e1f8:	eor	r1, r6, r1
   1e1fc:	orrs	r0, r0, r1
   1e200:	bne	1e2c8 <main@@Base+0xaff0>
   1e204:	add	r6, r7, #8
   1e208:	sub	r0, r8, r6
   1e20c:	cmp	r0, #8
   1e210:	movcs	r0, #8
   1e214:	and	r1, r0, #15
   1e218:	sub	r0, r1, #2
   1e21c:	cmp	r0, #7
   1e220:	bcs	1e2b8 <main@@Base+0xafe0>
   1e224:	ldrb	r0, [r7, #9]
   1e228:	lsl	r1, r0, #16
   1e22c:	mov	r0, #0
   1e230:	ldrb	r2, [r6]
   1e234:	orr	r1, r1, r2, lsl #24
   1e238:	eor	r1, r1, #23855104	; 0x16c0000
   1e23c:	eor	r1, r1, #1610612736	; 0x60000000
   1e240:	orrs	r0, r0, r1
   1e244:	bne	1e2c8 <main@@Base+0xaff0>
   1e248:	ldr	r0, [sp, #12]
   1e24c:	mov	r1, r6
   1e250:	mov	r2, r8
   1e254:	mov	r3, #2
   1e258:	str	r0, [sp]
   1e25c:	ldr	r0, [sp, #16]
   1e260:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   1e264:	cmp	r0, r6
   1e268:	mov	r1, r7
   1e26c:	beq	1e2cc <main@@Base+0xaff4>
   1e270:	mov	r2, #0
   1e274:	mov	r3, #0
   1e278:	mov	r1, r0
   1e27c:	ldr	r0, [sp, #8]
   1e280:	strd	r2, [r0]
   1e284:	mov	r0, #0
   1e288:	str	r0, [r9]
   1e28c:	b	1e2cc <main@@Base+0xaff4>
   1e290:	ldr	r3, [sp, #4]
   1e294:	mov	r4, #0
   1e298:	cmp	r6, #1
   1e29c:	beq	1e2b0 <main@@Base+0xafd8>
   1e2a0:	cmp	r6, #2
   1e2a4:	mov	r6, #0
   1e2a8:	beq	1e168 <main@@Base+0xae90>
   1e2ac:	b	1e2cc <main@@Base+0xaff4>
   1e2b0:	mov	r6, #0
   1e2b4:	b	1e170 <main@@Base+0xae98>
   1e2b8:	cmp	r1, #1
   1e2bc:	mov	r0, #0
   1e2c0:	mov	r1, #0
   1e2c4:	beq	1e230 <main@@Base+0xaf58>
   1e2c8:	mov	r1, r7
   1e2cc:	mov	r0, r1
   1e2d0:	sub	sp, fp, #28
   1e2d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2dc:	add	fp, sp, #28
   1e2e0:	sub	sp, sp, #44	; 0x2c
   1e2e4:	mov	r6, r2
   1e2e8:	ldr	r2, [fp, #8]
   1e2ec:	mov	r5, r0
   1e2f0:	mov	r0, #0
   1e2f4:	mov	sl, r3
   1e2f8:	cmp	r1, r6
   1e2fc:	strb	r0, [r2]
   1e300:	beq	1e344 <main@@Base+0xb06c>
   1e304:	ldrb	r0, [r1]
   1e308:	cmp	r0, #46	; 0x2e
   1e30c:	beq	1e324 <main@@Base+0xb04c>
   1e310:	cmp	r0, #34	; 0x22
   1e314:	bne	1e33c <main@@Base+0xb064>
   1e318:	mov	r0, #0
   1e31c:	add	r1, r1, #1
   1e320:	b	1e340 <main@@Base+0xb068>
   1e324:	mov	r0, r5
   1e328:	mov	r2, r6
   1e32c:	mov	r3, #5
   1e330:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e334:	mov	r1, r0
   1e338:	b	1e344 <main@@Base+0xb06c>
   1e33c:	mov	r0, #1
   1e340:	str	r0, [r5, #12]
   1e344:	ldr	r0, [r5, #12]
   1e348:	cmp	r0, #0
   1e34c:	beq	1e358 <main@@Base+0xb080>
   1e350:	mov	r7, r1
   1e354:	b	1e394 <main@@Base+0xb0bc>
   1e358:	sub	r0, r6, r1
   1e35c:	cmp	r0, #2
   1e360:	blt	1e384 <main@@Base+0xb0ac>
   1e364:	ldrb	r0, [r1]
   1e368:	cmp	r0, #32
   1e36c:	bhi	1e350 <main@@Base+0xb078>
   1e370:	bne	1e384 <main@@Base+0xb0ac>
   1e374:	mov	r7, r1
   1e378:	ldrb	r0, [r7, #1]!
   1e37c:	cmp	r0, #32
   1e380:	bhi	1e394 <main@@Base+0xb0bc>
   1e384:	mov	r0, r5
   1e388:	mov	r2, r6
   1e38c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1e390:	mov	r7, r0
   1e394:	cmp	r7, r6
   1e398:	beq	1e4d0 <main@@Base+0xb1f8>
   1e39c:	add	r0, sl, #4
   1e3a0:	mov	r1, #0
   1e3a4:	mov	r2, #0
   1e3a8:	add	r8, sp, #32
   1e3ac:	add	r9, sp, #28
   1e3b0:	str	sl, [sp, #12]
   1e3b4:	str	r1, [sp, #20]
   1e3b8:	str	r0, [sp, #8]
   1e3bc:	ldr	r4, [sl]
   1e3c0:	mov	sl, r0
   1e3c4:	str	r2, [sp, #16]
   1e3c8:	add	r0, sp, #24
   1e3cc:	mov	r1, r7
   1e3d0:	mov	r2, r6
   1e3d4:	mov	r3, r9
   1e3d8:	str	r8, [sp]
   1e3dc:	str	r0, [sp, #4]
   1e3e0:	mov	r0, r5
   1e3e4:	blx	r4
   1e3e8:	cmp	r0, r6
   1e3ec:	beq	1e4d0 <main@@Base+0xb1f8>
   1e3f0:	mov	r4, r0
   1e3f4:	cmp	r0, r7
   1e3f8:	bne	1e40c <main@@Base+0xb134>
   1e3fc:	ldr	r4, [sl], #4
   1e400:	cmp	r4, #0
   1e404:	bne	1e3c8 <main@@Base+0xb0f0>
   1e408:	b	1e4d8 <main@@Base+0xb200>
   1e40c:	ldr	r7, [sp, #20]
   1e410:	cmp	r7, #0
   1e414:	ldrne	r0, [r5, #12]
   1e418:	cmpne	r0, #0
   1e41c:	bne	1e4fc <main@@Base+0xb224>
   1e420:	ldr	r2, [sp, #28]
   1e424:	ldr	r0, [sp, #32]
   1e428:	ldr	r1, [sp, #36]	; 0x24
   1e42c:	cmp	r2, #0
   1e430:	beq	1e458 <main@@Base+0xb180>
   1e434:	ldr	sl, [sp, #12]
   1e438:	subs	r2, r0, #129	; 0x81
   1e43c:	sbcs	r1, r1, #0
   1e440:	bcc	1e484 <main@@Base+0xb1ac>
   1e444:	mov	r0, r5
   1e448:	mov	r1, r4
   1e44c:	mov	r2, r6
   1e450:	mov	r3, #8
   1e454:	b	1e478 <main@@Base+0xb1a0>
   1e458:	ldr	sl, [sp, #12]
   1e45c:	subs	r2, r0, #128	; 0x80
   1e460:	sbcs	r1, r1, #0
   1e464:	bcc	1e48c <main@@Base+0xb1b4>
   1e468:	mov	r0, r5
   1e46c:	mov	r1, r4
   1e470:	mov	r2, r6
   1e474:	mov	r3, #7
   1e478:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e47c:	ldr	r2, [sp, #16]
   1e480:	b	1e494 <main@@Base+0xb1bc>
   1e484:	rsb	r2, r0, #0
   1e488:	b	1e490 <main@@Base+0xb1b8>
   1e48c:	mov	r2, r0
   1e490:	mov	r0, r4
   1e494:	cmp	r0, r6
   1e498:	beq	1e4d0 <main@@Base+0xb1f8>
   1e49c:	ldr	r0, [fp, #8]
   1e4a0:	add	r7, r7, #1
   1e4a4:	str	r7, [sp, #20]
   1e4a8:	mov	r7, r4
   1e4ac:	mov	r1, r0
   1e4b0:	ldrb	r0, [r0]
   1e4b4:	add	r0, r0, r2
   1e4b8:	strb	r0, [r1]
   1e4bc:	ldr	r0, [sp, #24]
   1e4c0:	cmp	r0, #0
   1e4c4:	ldr	r0, [sp, #8]
   1e4c8:	bne	1e3bc <main@@Base+0xb0e4>
   1e4cc:	b	1e4f0 <main@@Base+0xb218>
   1e4d0:	mov	r4, r6
   1e4d4:	b	1e4f0 <main@@Base+0xb218>
   1e4d8:	mov	r0, r5
   1e4dc:	mov	r1, r7
   1e4e0:	mov	r2, r6
   1e4e4:	mov	r3, #23
   1e4e8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e4ec:	mov	r4, r0
   1e4f0:	mov	r0, r4
   1e4f4:	sub	sp, fp, #28
   1e4f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e4fc:	mov	r0, r5
   1e500:	mov	r1, r4
   1e504:	mov	r2, r6
   1e508:	mov	r3, #14
   1e50c:	b	1e4e8 <main@@Base+0xb210>
   1e510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e514:	add	fp, sp, #28
   1e518:	sub	sp, sp, #44	; 0x2c
   1e51c:	mov	r6, r2
   1e520:	ldr	r2, [fp, #8]
   1e524:	mov	r5, r0
   1e528:	mov	r0, #0
   1e52c:	mov	sl, r3
   1e530:	cmp	r1, r6
   1e534:	strb	r0, [r2]
   1e538:	beq	1e57c <main@@Base+0xb2a4>
   1e53c:	ldrb	r0, [r1]
   1e540:	cmp	r0, #46	; 0x2e
   1e544:	beq	1e55c <main@@Base+0xb284>
   1e548:	cmp	r0, #34	; 0x22
   1e54c:	bne	1e574 <main@@Base+0xb29c>
   1e550:	mov	r0, #0
   1e554:	add	r1, r1, #1
   1e558:	b	1e578 <main@@Base+0xb2a0>
   1e55c:	mov	r0, r5
   1e560:	mov	r2, r6
   1e564:	mov	r3, #5
   1e568:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e56c:	mov	r1, r0
   1e570:	b	1e57c <main@@Base+0xb2a4>
   1e574:	mov	r0, #1
   1e578:	str	r0, [r5, #12]
   1e57c:	ldr	r0, [r5, #12]
   1e580:	cmp	r0, #0
   1e584:	beq	1e590 <main@@Base+0xb2b8>
   1e588:	mov	r7, r1
   1e58c:	b	1e5cc <main@@Base+0xb2f4>
   1e590:	sub	r0, r6, r1
   1e594:	cmp	r0, #2
   1e598:	blt	1e5bc <main@@Base+0xb2e4>
   1e59c:	ldrb	r0, [r1]
   1e5a0:	cmp	r0, #32
   1e5a4:	bhi	1e588 <main@@Base+0xb2b0>
   1e5a8:	bne	1e5bc <main@@Base+0xb2e4>
   1e5ac:	mov	r7, r1
   1e5b0:	ldrb	r0, [r7, #1]!
   1e5b4:	cmp	r0, #32
   1e5b8:	bhi	1e5cc <main@@Base+0xb2f4>
   1e5bc:	mov	r0, r5
   1e5c0:	mov	r2, r6
   1e5c4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1e5c8:	mov	r7, r0
   1e5cc:	cmp	r7, r6
   1e5d0:	beq	1e6f8 <main@@Base+0xb420>
   1e5d4:	mov	r1, #0
   1e5d8:	add	r0, sl, #4
   1e5dc:	add	r8, sp, #32
   1e5e0:	add	r9, sp, #28
   1e5e4:	str	sl, [sp, #12]
   1e5e8:	str	r1, [sp, #16]
   1e5ec:	mov	r1, #0
   1e5f0:	str	r0, [sp, #8]
   1e5f4:	str	r1, [sp, #20]
   1e5f8:	ldr	r4, [sl]
   1e5fc:	mov	sl, r0
   1e600:	add	r0, sp, #24
   1e604:	mov	r1, r7
   1e608:	mov	r2, r6
   1e60c:	mov	r3, r9
   1e610:	str	r8, [sp]
   1e614:	str	r0, [sp, #4]
   1e618:	mov	r0, r5
   1e61c:	blx	r4
   1e620:	cmp	r0, r6
   1e624:	beq	1e6f8 <main@@Base+0xb420>
   1e628:	mov	r4, r0
   1e62c:	cmp	r0, r7
   1e630:	bne	1e644 <main@@Base+0xb36c>
   1e634:	ldr	r4, [sl], #4
   1e638:	cmp	r4, #0
   1e63c:	bne	1e600 <main@@Base+0xb328>
   1e640:	b	1e700 <main@@Base+0xb428>
   1e644:	ldr	r7, [sp, #20]
   1e648:	cmp	r7, #0
   1e64c:	ldrne	r0, [r5, #12]
   1e650:	cmpne	r0, #0
   1e654:	bne	1e724 <main@@Base+0xb44c>
   1e658:	ldr	r0, [sp, #28]
   1e65c:	cmp	r0, #0
   1e660:	beq	1e680 <main@@Base+0xb3a8>
   1e664:	mov	r0, r5
   1e668:	mov	r1, r4
   1e66c:	mov	r2, r6
   1e670:	mov	r3, #8
   1e674:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e678:	ldr	sl, [sp, #12]
   1e67c:	b	1e6b8 <main@@Base+0xb3e0>
   1e680:	ldr	r0, [sp, #32]
   1e684:	ldr	r1, [sp, #36]	; 0x24
   1e688:	ldr	sl, [sp, #12]
   1e68c:	subs	r2, r0, #256	; 0x100
   1e690:	sbcs	r1, r1, #0
   1e694:	bcc	1e6b0 <main@@Base+0xb3d8>
   1e698:	mov	r0, r5
   1e69c:	mov	r1, r4
   1e6a0:	mov	r2, r6
   1e6a4:	mov	r3, #7
   1e6a8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e6ac:	b	1e6b8 <main@@Base+0xb3e0>
   1e6b0:	str	r0, [sp, #16]
   1e6b4:	mov	r0, r4
   1e6b8:	cmp	r0, r6
   1e6bc:	beq	1e6f8 <main@@Base+0xb420>
   1e6c0:	ldr	r0, [fp, #8]
   1e6c4:	ldr	r2, [sp, #16]
   1e6c8:	add	r7, r7, #1
   1e6cc:	str	r7, [sp, #20]
   1e6d0:	mov	r7, r4
   1e6d4:	mov	r1, r0
   1e6d8:	ldrb	r0, [r0]
   1e6dc:	add	r0, r0, r2
   1e6e0:	strb	r0, [r1]
   1e6e4:	ldr	r0, [sp, #24]
   1e6e8:	cmp	r0, #0
   1e6ec:	ldr	r0, [sp, #8]
   1e6f0:	bne	1e5f8 <main@@Base+0xb320>
   1e6f4:	b	1e718 <main@@Base+0xb440>
   1e6f8:	mov	r4, r6
   1e6fc:	b	1e718 <main@@Base+0xb440>
   1e700:	mov	r0, r5
   1e704:	mov	r1, r7
   1e708:	mov	r2, r6
   1e70c:	mov	r3, #23
   1e710:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e714:	mov	r4, r0
   1e718:	mov	r0, r4
   1e71c:	sub	sp, fp, #28
   1e720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e724:	mov	r0, r5
   1e728:	mov	r1, r4
   1e72c:	mov	r2, r6
   1e730:	mov	r3, #14
   1e734:	b	1e710 <main@@Base+0xb438>
   1e738:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e73c:	add	fp, sp, #28
   1e740:	sub	sp, sp, #44	; 0x2c
   1e744:	mov	r6, r2
   1e748:	ldr	r2, [fp, #8]
   1e74c:	mov	r5, r0
   1e750:	mov	r0, #0
   1e754:	mov	sl, r3
   1e758:	cmp	r1, r6
   1e75c:	strh	r0, [r2]
   1e760:	beq	1e7a4 <main@@Base+0xb4cc>
   1e764:	ldrb	r0, [r1]
   1e768:	cmp	r0, #46	; 0x2e
   1e76c:	beq	1e784 <main@@Base+0xb4ac>
   1e770:	cmp	r0, #34	; 0x22
   1e774:	bne	1e79c <main@@Base+0xb4c4>
   1e778:	mov	r0, #0
   1e77c:	add	r1, r1, #1
   1e780:	b	1e7a0 <main@@Base+0xb4c8>
   1e784:	mov	r0, r5
   1e788:	mov	r2, r6
   1e78c:	mov	r3, #5
   1e790:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e794:	mov	r1, r0
   1e798:	b	1e7a4 <main@@Base+0xb4cc>
   1e79c:	mov	r0, #1
   1e7a0:	str	r0, [r5, #12]
   1e7a4:	ldr	r0, [r5, #12]
   1e7a8:	cmp	r0, #0
   1e7ac:	beq	1e7b8 <main@@Base+0xb4e0>
   1e7b0:	mov	r7, r1
   1e7b4:	b	1e7f4 <main@@Base+0xb51c>
   1e7b8:	sub	r0, r6, r1
   1e7bc:	cmp	r0, #2
   1e7c0:	blt	1e7e4 <main@@Base+0xb50c>
   1e7c4:	ldrb	r0, [r1]
   1e7c8:	cmp	r0, #32
   1e7cc:	bhi	1e7b0 <main@@Base+0xb4d8>
   1e7d0:	bne	1e7e4 <main@@Base+0xb50c>
   1e7d4:	mov	r7, r1
   1e7d8:	ldrb	r0, [r7, #1]!
   1e7dc:	cmp	r0, #32
   1e7e0:	bhi	1e7f4 <main@@Base+0xb51c>
   1e7e4:	mov	r0, r5
   1e7e8:	mov	r2, r6
   1e7ec:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1e7f0:	mov	r7, r0
   1e7f4:	cmp	r7, r6
   1e7f8:	beq	1e934 <main@@Base+0xb65c>
   1e7fc:	add	r0, sl, #4
   1e800:	mov	r1, #0
   1e804:	mov	r2, #0
   1e808:	add	r8, sp, #32
   1e80c:	add	r9, sp, #28
   1e810:	str	sl, [sp, #12]
   1e814:	str	r1, [sp, #20]
   1e818:	str	r0, [sp, #8]
   1e81c:	ldr	r4, [sl]
   1e820:	mov	sl, r0
   1e824:	str	r2, [sp, #16]
   1e828:	add	r0, sp, #24
   1e82c:	mov	r1, r7
   1e830:	mov	r2, r6
   1e834:	mov	r3, r9
   1e838:	str	r8, [sp]
   1e83c:	str	r0, [sp, #4]
   1e840:	mov	r0, r5
   1e844:	blx	r4
   1e848:	cmp	r0, r6
   1e84c:	beq	1e934 <main@@Base+0xb65c>
   1e850:	mov	r4, r0
   1e854:	cmp	r0, r7
   1e858:	bne	1e86c <main@@Base+0xb594>
   1e85c:	ldr	r4, [sl], #4
   1e860:	cmp	r4, #0
   1e864:	bne	1e828 <main@@Base+0xb550>
   1e868:	b	1e93c <main@@Base+0xb664>
   1e86c:	ldr	r7, [sp, #20]
   1e870:	cmp	r7, #0
   1e874:	ldrne	r0, [r5, #12]
   1e878:	cmpne	r0, #0
   1e87c:	bne	1e960 <main@@Base+0xb688>
   1e880:	ldr	r2, [sp, #28]
   1e884:	ldr	r0, [sp, #32]
   1e888:	ldr	r1, [sp, #36]	; 0x24
   1e88c:	cmp	r2, #0
   1e890:	beq	1e8bc <main@@Base+0xb5e4>
   1e894:	ldr	sl, [sp, #12]
   1e898:	movw	r2, #32769	; 0x8001
   1e89c:	subs	r2, r0, r2
   1e8a0:	sbcs	r1, r1, #0
   1e8a4:	bcc	1e8e8 <main@@Base+0xb610>
   1e8a8:	mov	r0, r5
   1e8ac:	mov	r1, r4
   1e8b0:	mov	r2, r6
   1e8b4:	mov	r3, #8
   1e8b8:	b	1e8dc <main@@Base+0xb604>
   1e8bc:	ldr	sl, [sp, #12]
   1e8c0:	subs	r2, r0, #32768	; 0x8000
   1e8c4:	sbcs	r1, r1, #0
   1e8c8:	bcc	1e8f0 <main@@Base+0xb618>
   1e8cc:	mov	r0, r5
   1e8d0:	mov	r1, r4
   1e8d4:	mov	r2, r6
   1e8d8:	mov	r3, #7
   1e8dc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e8e0:	ldr	r2, [sp, #16]
   1e8e4:	b	1e8f8 <main@@Base+0xb620>
   1e8e8:	rsb	r2, r0, #0
   1e8ec:	b	1e8f4 <main@@Base+0xb61c>
   1e8f0:	mov	r2, r0
   1e8f4:	mov	r0, r4
   1e8f8:	cmp	r0, r6
   1e8fc:	beq	1e934 <main@@Base+0xb65c>
   1e900:	ldr	r0, [fp, #8]
   1e904:	add	r7, r7, #1
   1e908:	str	r7, [sp, #20]
   1e90c:	mov	r7, r4
   1e910:	mov	r1, r0
   1e914:	ldrh	r0, [r0]
   1e918:	add	r0, r0, r2
   1e91c:	strh	r0, [r1]
   1e920:	ldr	r0, [sp, #24]
   1e924:	cmp	r0, #0
   1e928:	ldr	r0, [sp, #8]
   1e92c:	bne	1e81c <main@@Base+0xb544>
   1e930:	b	1e954 <main@@Base+0xb67c>
   1e934:	mov	r4, r6
   1e938:	b	1e954 <main@@Base+0xb67c>
   1e93c:	mov	r0, r5
   1e940:	mov	r1, r7
   1e944:	mov	r2, r6
   1e948:	mov	r3, #23
   1e94c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1e950:	mov	r4, r0
   1e954:	mov	r0, r4
   1e958:	sub	sp, fp, #28
   1e95c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e960:	mov	r0, r5
   1e964:	mov	r1, r4
   1e968:	mov	r2, r6
   1e96c:	mov	r3, #14
   1e970:	b	1e94c <main@@Base+0xb674>
   1e974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e978:	add	fp, sp, #28
   1e97c:	sub	sp, sp, #28
   1e980:	mov	r7, r2
   1e984:	mov	r5, r0
   1e988:	cmp	r1, r2
   1e98c:	beq	1e9c4 <main@@Base+0xb6ec>
   1e990:	ldrb	r0, [r1]
   1e994:	cmp	r0, #123	; 0x7b
   1e998:	bne	1e9c4 <main@@Base+0xb6ec>
   1e99c:	add	r2, r1, #1
   1e9a0:	mov	r9, r3
   1e9a4:	sub	r0, r7, r2
   1e9a8:	cmp	r0, #2
   1e9ac:	blt	1e9ec <main@@Base+0xb714>
   1e9b0:	ldrb	r0, [r2]
   1e9b4:	cmp	r0, #32
   1e9b8:	bls	1e9dc <main@@Base+0xb704>
   1e9bc:	mov	r1, r2
   1e9c0:	b	1ea00 <main@@Base+0xb728>
   1e9c4:	mov	r0, r5
   1e9c8:	mov	r2, r7
   1e9cc:	mov	r3, #21
   1e9d0:	sub	sp, fp, #28
   1e9d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e9d8:	b	2d294 <flatcc_json_parser_set_error@@Base>
   1e9dc:	bne	1e9ec <main@@Base+0xb714>
   1e9e0:	ldrb	r0, [r1, #2]!
   1e9e4:	cmp	r0, #32
   1e9e8:	bhi	1ea00 <main@@Base+0xb728>
   1e9ec:	mov	r1, r2
   1e9f0:	mov	r0, r5
   1e9f4:	mov	r2, r7
   1e9f8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1e9fc:	mov	r1, r0
   1ea00:	cmp	r1, r7
   1ea04:	mov	r2, r7
   1ea08:	beq	1ea40 <main@@Base+0xb768>
   1ea0c:	ldrb	r0, [r1]
   1ea10:	cmp	r0, #125	; 0x7d
   1ea14:	bne	1ea3c <main@@Base+0xb764>
   1ea18:	add	r2, r1, #1
   1ea1c:	sub	r0, r7, r2
   1ea20:	cmp	r0, #2
   1ea24:	blt	1f02c <main@@Base+0xbd54>
   1ea28:	ldrb	r0, [r2]
   1ea2c:	cmp	r0, #32
   1ea30:	bls	1f01c <main@@Base+0xbd44>
   1ea34:	mov	r1, r2
   1ea38:	b	1f084 <main@@Base+0xbdac>
   1ea3c:	mov	r2, r1
   1ea40:	mov	sl, #-268435456	; 0xf0000000
   1ea44:	mov	r6, #1627389952	; 0x61000000
   1ea48:	cmp	r2, r7
   1ea4c:	mov	r4, r7
   1ea50:	beq	1ea9c <main@@Base+0xb7c4>
   1ea54:	ldrb	r0, [r2]
   1ea58:	cmp	r0, #46	; 0x2e
   1ea5c:	beq	1ea74 <main@@Base+0xb79c>
   1ea60:	cmp	r0, #34	; 0x22
   1ea64:	bne	1ea90 <main@@Base+0xb7b8>
   1ea68:	mov	r0, #0
   1ea6c:	add	r4, r2, #1
   1ea70:	b	1ea98 <main@@Base+0xb7c0>
   1ea74:	mov	r1, r2
   1ea78:	mov	r0, r5
   1ea7c:	mov	r2, r7
   1ea80:	mov	r3, #5
   1ea84:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1ea88:	mov	r4, r0
   1ea8c:	b	1ea9c <main@@Base+0xb7c4>
   1ea90:	mov	r0, #1
   1ea94:	mov	r4, r2
   1ea98:	str	r0, [r5, #12]
   1ea9c:	sub	r0, r7, r4
   1eaa0:	mov	r1, #8
   1eaa4:	cmp	r0, #8
   1eaa8:	movcc	r1, r0
   1eaac:	add	r1, sl, r1, lsl #28
   1eab0:	asr	r1, r1, #28
   1eab4:	cmp	r1, #0
   1eab8:	blt	1ed38 <main@@Base+0xba60>
   1eabc:	ldrb	r1, [r4]
   1eac0:	teq	r6, r1, lsl #24
   1eac4:	beq	1eb14 <main@@Base+0xb83c>
   1eac8:	lsl	r1, r1, #24
   1eacc:	teq	r1, #1644167168	; 0x62000000
   1ead0:	bne	1ed38 <main@@Base+0xba60>
   1ead4:	cmp	r0, #2
   1ead8:	mov	r8, r4
   1eadc:	blt	1ecbc <main@@Base+0xb9e4>
   1eae0:	mov	r1, r4
   1eae4:	ldr	r2, [r5, #12]
   1eae8:	ldrb	r0, [r1, #1]!
   1eaec:	cmp	r2, #0
   1eaf0:	beq	1eb54 <main@@Base+0xb87c>
   1eaf4:	cmp	r0, #33	; 0x21
   1eaf8:	bcc	1eb08 <main@@Base+0xb830>
   1eafc:	cmp	r0, #58	; 0x3a
   1eb00:	mov	r8, r4
   1eb04:	bne	1ecbc <main@@Base+0xb9e4>
   1eb08:	mov	r0, #0
   1eb0c:	str	r0, [r5, #12]
   1eb10:	b	1eb64 <main@@Base+0xb88c>
   1eb14:	cmp	r0, #2
   1eb18:	mov	r6, r4
   1eb1c:	blt	1edf8 <main@@Base+0xbb20>
   1eb20:	mov	r1, r4
   1eb24:	ldr	r2, [r5, #12]
   1eb28:	ldrb	r0, [r1, #1]!
   1eb2c:	cmp	r2, #0
   1eb30:	beq	1eb84 <main@@Base+0xb8ac>
   1eb34:	cmp	r0, #33	; 0x21
   1eb38:	bcc	1eb48 <main@@Base+0xb870>
   1eb3c:	cmp	r0, #58	; 0x3a
   1eb40:	mov	r6, r4
   1eb44:	bne	1edf8 <main@@Base+0xbb20>
   1eb48:	mov	r0, #0
   1eb4c:	str	r0, [r5, #12]
   1eb50:	b	1eb94 <main@@Base+0xb8bc>
   1eb54:	cmp	r0, #34	; 0x22
   1eb58:	mov	r8, r4
   1eb5c:	bne	1ecbc <main@@Base+0xb9e4>
   1eb60:	add	r1, r4, #2
   1eb64:	sub	r0, r7, r1
   1eb68:	cmp	r0, #2
   1eb6c:	blt	1ebc8 <main@@Base+0xb8f0>
   1eb70:	ldrb	r0, [r1]
   1eb74:	cmp	r0, #32
   1eb78:	bls	1ebb4 <main@@Base+0xb8dc>
   1eb7c:	mov	r8, r1
   1eb80:	b	1ebd8 <main@@Base+0xb900>
   1eb84:	cmp	r0, #34	; 0x22
   1eb88:	mov	r6, r4
   1eb8c:	bne	1edf8 <main@@Base+0xbb20>
   1eb90:	add	r1, r4, #2
   1eb94:	sub	r0, r7, r1
   1eb98:	cmp	r0, #2
   1eb9c:	blt	1ec3c <main@@Base+0xb964>
   1eba0:	ldrb	r0, [r1]
   1eba4:	cmp	r0, #32
   1eba8:	bls	1ec28 <main@@Base+0xb950>
   1ebac:	mov	r6, r1
   1ebb0:	b	1ec4c <main@@Base+0xb974>
   1ebb4:	bne	1ebc8 <main@@Base+0xb8f0>
   1ebb8:	mov	r8, r1
   1ebbc:	ldrb	r0, [r8, #1]!
   1ebc0:	cmp	r0, #32
   1ebc4:	bhi	1ebd8 <main@@Base+0xb900>
   1ebc8:	mov	r0, r5
   1ebcc:	mov	r2, r7
   1ebd0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ebd4:	mov	r8, r0
   1ebd8:	cmp	r8, r7
   1ebdc:	beq	1ec10 <main@@Base+0xb938>
   1ebe0:	ldrb	r0, [r8]
   1ebe4:	cmp	r0, #58	; 0x3a
   1ebe8:	bne	1ec10 <main@@Base+0xb938>
   1ebec:	add	r1, r8, #1
   1ebf0:	sub	r0, r7, r1
   1ebf4:	cmp	r0, #2
   1ebf8:	blt	1ecac <main@@Base+0xb9d4>
   1ebfc:	ldrb	r0, [r1]
   1ec00:	cmp	r0, #32
   1ec04:	bls	1ec9c <main@@Base+0xb9c4>
   1ec08:	mov	r8, r1
   1ec0c:	b	1ecbc <main@@Base+0xb9e4>
   1ec10:	mov	r0, r5
   1ec14:	mov	r1, r8
   1ec18:	mov	r2, r7
   1ec1c:	mov	r3, #4
   1ec20:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1ec24:	b	1ecb8 <main@@Base+0xb9e0>
   1ec28:	bne	1ec3c <main@@Base+0xb964>
   1ec2c:	mov	r6, r1
   1ec30:	ldrb	r0, [r6, #1]!
   1ec34:	cmp	r0, #32
   1ec38:	bhi	1ec4c <main@@Base+0xb974>
   1ec3c:	mov	r0, r5
   1ec40:	mov	r2, r7
   1ec44:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ec48:	mov	r6, r0
   1ec4c:	cmp	r6, r7
   1ec50:	beq	1ec84 <main@@Base+0xb9ac>
   1ec54:	ldrb	r0, [r6]
   1ec58:	cmp	r0, #58	; 0x3a
   1ec5c:	bne	1ec84 <main@@Base+0xb9ac>
   1ec60:	add	r1, r6, #1
   1ec64:	sub	r0, r7, r1
   1ec68:	cmp	r0, #2
   1ec6c:	blt	1ede8 <main@@Base+0xbb10>
   1ec70:	ldrb	r0, [r1]
   1ec74:	cmp	r0, #32
   1ec78:	bls	1edd8 <main@@Base+0xbb00>
   1ec7c:	mov	r6, r1
   1ec80:	b	1edf8 <main@@Base+0xbb20>
   1ec84:	mov	r0, r5
   1ec88:	mov	r1, r6
   1ec8c:	mov	r2, r7
   1ec90:	mov	r3, #4
   1ec94:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1ec98:	b	1edf4 <main@@Base+0xbb1c>
   1ec9c:	bne	1ecac <main@@Base+0xb9d4>
   1eca0:	ldrb	r0, [r8, #2]!
   1eca4:	cmp	r0, #32
   1eca8:	bhi	1ecbc <main@@Base+0xb9e4>
   1ecac:	mov	r0, r5
   1ecb0:	mov	r2, r7
   1ecb4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ecb8:	mov	r8, r0
   1ecbc:	cmp	r4, r8
   1ecc0:	beq	1ed38 <main@@Base+0xba60>
   1ecc4:	mov	r4, #0
   1ecc8:	cmp	r8, r7
   1eccc:	str	r4, [sp, #20]
   1ecd0:	str	r4, [sp, #16]
   1ecd4:	strb	r4, [sp, #10]
   1ecd8:	str	r4, [sp, #12]
   1ecdc:	beq	1ed50 <main@@Base+0xba78>
   1ece0:	add	r0, sp, #16
   1ece4:	mov	r1, r8
   1ece8:	mov	r2, r7
   1ecec:	add	r3, sp, #12
   1ecf0:	str	r0, [sp]
   1ecf4:	mov	r0, r5
   1ecf8:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1ecfc:	cmp	r0, r8
   1ed00:	beq	1ed58 <main@@Base+0xba80>
   1ed04:	ldr	r3, [sp, #12]
   1ed08:	mov	r1, r0
   1ed0c:	ldr	r0, [sp, #16]
   1ed10:	ldr	r2, [sp, #20]
   1ed14:	cmp	r3, #0
   1ed18:	beq	1ed60 <main@@Base+0xba88>
   1ed1c:	subs	r3, r0, #129	; 0x81
   1ed20:	sbcs	r2, r2, #0
   1ed24:	bcc	1ed84 <main@@Base+0xbaac>
   1ed28:	mov	r0, r5
   1ed2c:	mov	r2, r7
   1ed30:	mov	r3, #8
   1ed34:	b	1ed78 <main@@Base+0xbaa0>
   1ed38:	mov	r0, r5
   1ed3c:	mov	r1, r4
   1ed40:	mov	r2, r7
   1ed44:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ed48:	mov	r1, r0
   1ed4c:	b	1ef18 <main@@Base+0xbc40>
   1ed50:	mov	r1, r7
   1ed54:	b	1ed94 <main@@Base+0xbabc>
   1ed58:	mov	r1, r8
   1ed5c:	b	1ed94 <main@@Base+0xbabc>
   1ed60:	subs	r3, r0, #128	; 0x80
   1ed64:	sbcs	r2, r2, #0
   1ed68:	bcc	1ed8c <main@@Base+0xbab4>
   1ed6c:	mov	r0, r5
   1ed70:	mov	r2, r7
   1ed74:	mov	r3, #7
   1ed78:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1ed7c:	mov	r1, r0
   1ed80:	b	1ed94 <main@@Base+0xbabc>
   1ed84:	rsb	r4, r0, #0
   1ed88:	b	1ed90 <main@@Base+0xbab8>
   1ed8c:	mov	r4, r0
   1ed90:	strb	r4, [sp, #10]
   1ed94:	cmp	r8, r1
   1ed98:	bne	1edd0 <main@@Base+0xbaf8>
   1ed9c:	movw	r3, #16852	; 0x41d4
   1eda0:	add	r0, sp, #10
   1eda4:	mov	r1, r8
   1eda8:	mov	r2, r7
   1edac:	str	r0, [sp]
   1edb0:	mov	r0, r5
   1edb4:	movt	r3, #4
   1edb8:	bl	1e2d8 <main@@Base+0xb000>
   1edbc:	mov	r1, r0
   1edc0:	cmp	r0, r8
   1edc4:	cmpne	r1, r7
   1edc8:	beq	1efcc <main@@Base+0xbcf4>
   1edcc:	ldrb	r4, [sp, #10]
   1edd0:	strb	r4, [r9, #2]
   1edd4:	b	1ef18 <main@@Base+0xbc40>
   1edd8:	bne	1ede8 <main@@Base+0xbb10>
   1eddc:	ldrb	r0, [r6, #2]!
   1ede0:	cmp	r0, #32
   1ede4:	bhi	1edf8 <main@@Base+0xbb20>
   1ede8:	mov	r0, r5
   1edec:	mov	r2, r7
   1edf0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1edf4:	mov	r6, r0
   1edf8:	cmp	r4, r6
   1edfc:	beq	1ee78 <main@@Base+0xbba0>
   1ee00:	mov	r4, #0
   1ee04:	cmp	r6, r7
   1ee08:	str	r4, [sp, #20]
   1ee0c:	str	r4, [sp, #16]
   1ee10:	strh	r4, [sp, #10]
   1ee14:	str	r4, [sp, #12]
   1ee18:	beq	1ee90 <main@@Base+0xbbb8>
   1ee1c:	add	r0, sp, #16
   1ee20:	mov	r1, r6
   1ee24:	mov	r2, r7
   1ee28:	add	r3, sp, #12
   1ee2c:	str	r0, [sp]
   1ee30:	mov	r0, r5
   1ee34:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1ee38:	cmp	r0, r6
   1ee3c:	beq	1ee98 <main@@Base+0xbbc0>
   1ee40:	ldr	r3, [sp, #12]
   1ee44:	mov	r1, r0
   1ee48:	ldr	r0, [sp, #16]
   1ee4c:	ldr	r2, [sp, #20]
   1ee50:	cmp	r3, #0
   1ee54:	beq	1eea0 <main@@Base+0xbbc8>
   1ee58:	movw	r3, #32769	; 0x8001
   1ee5c:	subs	r3, r0, r3
   1ee60:	sbcs	r2, r2, #0
   1ee64:	bcc	1eec4 <main@@Base+0xbbec>
   1ee68:	mov	r0, r5
   1ee6c:	mov	r2, r7
   1ee70:	mov	r3, #8
   1ee74:	b	1eeb8 <main@@Base+0xbbe0>
   1ee78:	mov	r0, r5
   1ee7c:	mov	r1, r4
   1ee80:	mov	r2, r7
   1ee84:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ee88:	mov	r1, r0
   1ee8c:	b	1ef14 <main@@Base+0xbc3c>
   1ee90:	mov	r1, r7
   1ee94:	b	1eed4 <main@@Base+0xbbfc>
   1ee98:	mov	r1, r6
   1ee9c:	b	1eed4 <main@@Base+0xbbfc>
   1eea0:	subs	r3, r0, #32768	; 0x8000
   1eea4:	sbcs	r2, r2, #0
   1eea8:	bcc	1eecc <main@@Base+0xbbf4>
   1eeac:	mov	r0, r5
   1eeb0:	mov	r2, r7
   1eeb4:	mov	r3, #7
   1eeb8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1eebc:	mov	r1, r0
   1eec0:	b	1eed4 <main@@Base+0xbbfc>
   1eec4:	rsb	r4, r0, #0
   1eec8:	b	1eed0 <main@@Base+0xbbf8>
   1eecc:	mov	r4, r0
   1eed0:	strh	r4, [sp, #10]
   1eed4:	cmp	r6, r1
   1eed8:	bne	1ef10 <main@@Base+0xbc38>
   1eedc:	movw	r3, #16864	; 0x41e0
   1eee0:	add	r0, sp, #10
   1eee4:	mov	r1, r6
   1eee8:	mov	r2, r7
   1eeec:	str	r0, [sp]
   1eef0:	mov	r0, r5
   1eef4:	movt	r3, #4
   1eef8:	bl	1e738 <main@@Base+0xb460>
   1eefc:	mov	r1, r0
   1ef00:	cmp	r0, r6
   1ef04:	cmpne	r1, r7
   1ef08:	beq	1efcc <main@@Base+0xbcf4>
   1ef0c:	ldrh	r4, [sp, #10]
   1ef10:	strh	r4, [r9]
   1ef14:	mov	r6, #1627389952	; 0x61000000
   1ef18:	sub	r0, r7, r1
   1ef1c:	cmp	r0, #2
   1ef20:	blt	1ef4c <main@@Base+0xbc74>
   1ef24:	ldrb	r0, [r1]
   1ef28:	cmp	r0, #32
   1ef2c:	bls	1ef38 <main@@Base+0xbc60>
   1ef30:	mov	r2, r1
   1ef34:	b	1ef5c <main@@Base+0xbc84>
   1ef38:	bne	1ef4c <main@@Base+0xbc74>
   1ef3c:	mov	r2, r1
   1ef40:	ldrb	r0, [r2, #1]!
   1ef44:	cmp	r0, #32
   1ef48:	bhi	1ef5c <main@@Base+0xbc84>
   1ef4c:	mov	r0, r5
   1ef50:	mov	r2, r7
   1ef54:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ef58:	mov	r2, r0
   1ef5c:	cmp	r2, r7
   1ef60:	beq	1efdc <main@@Base+0xbd04>
   1ef64:	ldrb	r0, [r2]
   1ef68:	cmp	r0, #44	; 0x2c
   1ef6c:	bne	1efe4 <main@@Base+0xbd0c>
   1ef70:	add	r1, r2, #1
   1ef74:	sub	r0, r7, r1
   1ef78:	cmp	r0, #2
   1ef7c:	blt	1efa4 <main@@Base+0xbccc>
   1ef80:	ldrb	r0, [r1]
   1ef84:	cmp	r0, #32
   1ef88:	bls	1ef94 <main@@Base+0xbcbc>
   1ef8c:	mov	r2, r1
   1ef90:	b	1efb4 <main@@Base+0xbcdc>
   1ef94:	bne	1efa4 <main@@Base+0xbccc>
   1ef98:	ldrb	r0, [r2, #2]!
   1ef9c:	cmp	r0, #32
   1efa0:	bhi	1efb4 <main@@Base+0xbcdc>
   1efa4:	mov	r0, r5
   1efa8:	mov	r2, r7
   1efac:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1efb0:	mov	r2, r0
   1efb4:	cmp	r2, r7
   1efb8:	beq	1f010 <main@@Base+0xbd38>
   1efbc:	ldrb	r0, [r2]
   1efc0:	cmp	r0, #125	; 0x7d
   1efc4:	bne	1ea48 <main@@Base+0xb770>
   1efc8:	b	1efec <main@@Base+0xbd14>
   1efcc:	mov	r0, r5
   1efd0:	mov	r2, r7
   1efd4:	mov	r3, #33	; 0x21
   1efd8:	b	1f054 <main@@Base+0xbd7c>
   1efdc:	mov	r1, r7
   1efe0:	b	1f084 <main@@Base+0xbdac>
   1efe4:	cmp	r0, #125	; 0x7d
   1efe8:	bne	1f044 <main@@Base+0xbd6c>
   1efec:	add	r3, r2, #1
   1eff0:	sub	r0, r7, r3
   1eff4:	cmp	r0, #2
   1eff8:	blt	1f070 <main@@Base+0xbd98>
   1effc:	ldrb	r0, [r3]
   1f000:	cmp	r0, #32
   1f004:	bls	1f05c <main@@Base+0xbd84>
   1f008:	mov	r1, r3
   1f00c:	b	1f084 <main@@Base+0xbdac>
   1f010:	mov	r0, r5
   1f014:	mov	r1, r7
   1f018:	b	1f04c <main@@Base+0xbd74>
   1f01c:	bne	1f02c <main@@Base+0xbd54>
   1f020:	ldrb	r0, [r1, #2]!
   1f024:	cmp	r0, #32
   1f028:	bhi	1f084 <main@@Base+0xbdac>
   1f02c:	mov	r1, r2
   1f030:	mov	r0, r5
   1f034:	mov	r2, r7
   1f038:	sub	sp, fp, #28
   1f03c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f040:	b	2d33c <flatcc_json_parser_space_ext@@Base>
   1f044:	mov	r0, r5
   1f048:	mov	r1, r2
   1f04c:	mov	r2, r7
   1f050:	mov	r3, #10
   1f054:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1f058:	b	1f080 <main@@Base+0xbda8>
   1f05c:	bne	1f070 <main@@Base+0xbd98>
   1f060:	ldrb	r0, [r2, #2]!
   1f064:	cmp	r0, #32
   1f068:	mov	r1, r2
   1f06c:	bhi	1f084 <main@@Base+0xbdac>
   1f070:	mov	r0, r5
   1f074:	mov	r1, r3
   1f078:	mov	r2, r7
   1f07c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1f080:	mov	r1, r0
   1f084:	mov	r0, r1
   1f088:	sub	sp, fp, #28
   1f08c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f094:	add	fp, sp, #28
   1f098:	sub	sp, sp, #68	; 0x44
   1f09c:	ldr	r9, [fp, #8]
   1f0a0:	mov	r5, r0
   1f0a4:	mov	r0, #0
   1f0a8:	mov	r8, r2
   1f0ac:	mov	r4, r1
   1f0b0:	cmp	r3, #4
   1f0b4:	str	r0, [r9]
   1f0b8:	bhi	1f10c <main@@Base+0xbe34>
   1f0bc:	add	r0, pc, #0
   1f0c0:	ldr	pc, [r0, r3, lsl #2]
   1f0c4:	ldrdeq	pc, [r1], -r8
   1f0c8:	andeq	pc, r1, r4, lsr r1	; <UNPREDICTABLE>
   1f0cc:	andeq	pc, r1, ip, asr #2
   1f0d0:	andeq	pc, r1, r0, lsr #3
   1f0d4:	strdeq	pc, [r1], -r4
   1f0d8:	sub	r0, r8, r4
   1f0dc:	cmp	r0, #4
   1f0e0:	blt	1f0f8 <main@@Base+0xbe20>
   1f0e4:	ldr	r0, [r4]
   1f0e8:	movw	r1, #30062	; 0x756e
   1f0ec:	movt	r1, #27756	; 0x6c6c
   1f0f0:	cmp	r0, r1
   1f0f4:	beq	1f2ac <main@@Base+0xbfd4>
   1f0f8:	mov	r0, r5
   1f0fc:	mov	r1, r4
   1f100:	mov	r2, r8
   1f104:	mov	r3, #26
   1f108:	b	1f128 <main@@Base+0xbe50>
   1f10c:	ldrb	r0, [r5, #8]
   1f110:	tst	r0, #1
   1f114:	bne	1f294 <main@@Base+0xbfbc>
   1f118:	mov	r0, r5
   1f11c:	mov	r1, r4
   1f120:	mov	r2, r8
   1f124:	mov	r3, #15
   1f128:	sub	sp, fp, #28
   1f12c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f130:	b	2d294 <flatcc_json_parser_set_error@@Base>
   1f134:	mov	r0, r5
   1f138:	mov	r1, r4
   1f13c:	mov	r2, r8
   1f140:	mov	r3, r9
   1f144:	bl	13350 <main@@Base+0x78>
   1f148:	b	22088 <main@@Base+0xedb0>
   1f14c:	mov	r0, #0
   1f150:	mov	r1, #4
   1f154:	str	r0, [r9]
   1f158:	ldr	r0, [r5]
   1f15c:	bl	2a60c <flatcc_builder_start_table@@Base>
   1f160:	cmp	r0, #0
   1f164:	bne	22074 <main@@Base+0xed9c>
   1f168:	cmp	r4, r8
   1f16c:	beq	1f26c <main@@Base+0xbf94>
   1f170:	ldrb	r0, [r4]
   1f174:	cmp	r0, #123	; 0x7b
   1f178:	bne	1f26c <main@@Base+0xbf94>
   1f17c:	add	r1, r4, #1
   1f180:	sub	r0, r8, r1
   1f184:	cmp	r0, #2
   1f188:	blt	1f31c <main@@Base+0xc044>
   1f18c:	ldrb	r0, [r1]
   1f190:	cmp	r0, #32
   1f194:	bls	1f30c <main@@Base+0xc034>
   1f198:	mov	r4, r1
   1f19c:	b	1f32c <main@@Base+0xc054>
   1f1a0:	mov	r0, #0
   1f1a4:	mov	r1, #0
   1f1a8:	str	r0, [r9]
   1f1ac:	ldr	r0, [r5]
   1f1b0:	bl	2a60c <flatcc_builder_start_table@@Base>
   1f1b4:	cmp	r0, #0
   1f1b8:	bne	22074 <main@@Base+0xed9c>
   1f1bc:	cmp	r4, r8
   1f1c0:	beq	1f26c <main@@Base+0xbf94>
   1f1c4:	ldrb	r0, [r4]
   1f1c8:	cmp	r0, #123	; 0x7b
   1f1cc:	bne	1f26c <main@@Base+0xbf94>
   1f1d0:	add	r1, r4, #1
   1f1d4:	sub	r0, r8, r1
   1f1d8:	cmp	r0, #2
   1f1dc:	blt	1fe78 <main@@Base+0xcba0>
   1f1e0:	ldrb	r0, [r1]
   1f1e4:	cmp	r0, #32
   1f1e8:	bls	1fe68 <main@@Base+0xcb90>
   1f1ec:	mov	r4, r1
   1f1f0:	b	1fe88 <main@@Base+0xcbb0>
   1f1f4:	mov	r0, #0
   1f1f8:	mov	r1, #4
   1f1fc:	str	r0, [r9]
   1f200:	ldr	r0, [r5]
   1f204:	bl	2a60c <flatcc_builder_start_table@@Base>
   1f208:	cmp	r0, #0
   1f20c:	bne	22074 <main@@Base+0xed9c>
   1f210:	sub	r0, fp, #36	; 0x24
   1f214:	mov	r1, r4
   1f218:	mov	r2, r8
   1f21c:	mov	r3, #1
   1f220:	str	r0, [sp]
   1f224:	mov	r0, r5
   1f228:	bl	2f8a4 <flatcc_json_parser_prepare_unions@@Base>
   1f22c:	cmp	r0, r8
   1f230:	beq	22074 <main@@Base+0xed9c>
   1f234:	cmp	r4, r8
   1f238:	beq	1f2b4 <main@@Base+0xbfdc>
   1f23c:	ldrb	r0, [r4]
   1f240:	cmp	r0, #123	; 0x7b
   1f244:	bne	1f2b4 <main@@Base+0xbfdc>
   1f248:	add	r1, r4, #1
   1f24c:	sub	r0, r8, r1
   1f250:	cmp	r0, #2
   1f254:	blt	20054 <main@@Base+0xcd7c>
   1f258:	ldrb	r0, [r1]
   1f25c:	cmp	r0, #32
   1f260:	bls	20044 <main@@Base+0xcd6c>
   1f264:	mov	r4, r1
   1f268:	b	20064 <main@@Base+0xcd8c>
   1f26c:	mov	r0, r5
   1f270:	mov	r1, r4
   1f274:	mov	r2, r8
   1f278:	mov	r3, #21
   1f27c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1f280:	mov	r4, r0
   1f284:	ldr	r0, [r5, #24]
   1f288:	cmp	r0, #0
   1f28c:	bne	22074 <main@@Base+0xed9c>
   1f290:	b	1f2f4 <main@@Base+0xc01c>
   1f294:	mov	r0, r5
   1f298:	mov	r1, r4
   1f29c:	mov	r2, r8
   1f2a0:	sub	sp, fp, #28
   1f2a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f2a8:	b	2dc04 <flatcc_json_parser_generic_json@@Base>
   1f2ac:	add	r4, r4, #4
   1f2b0:	b	220bc <main@@Base+0xede4>
   1f2b4:	mov	r0, r5
   1f2b8:	mov	r1, r4
   1f2bc:	mov	r2, r8
   1f2c0:	mov	r3, #21
   1f2c4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1f2c8:	mov	r4, r0
   1f2cc:	add	r0, r5, #24
   1f2d0:	ldr	r0, [r0]
   1f2d4:	cmp	r0, #0
   1f2d8:	bne	22074 <main@@Base+0xed9c>
   1f2dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f2e0:	mov	r0, r5
   1f2e4:	mov	r1, r4
   1f2e8:	mov	r2, r8
   1f2ec:	bl	2f928 <flatcc_json_parser_finalize_unions@@Base>
   1f2f0:	mov	r4, r0
   1f2f4:	ldr	r0, [r5]
   1f2f8:	bl	2af9c <flatcc_builder_end_table@@Base>
   1f2fc:	cmp	r0, #0
   1f300:	str	r0, [r9]
   1f304:	bne	2208c <main@@Base+0xedb4>
   1f308:	b	22074 <main@@Base+0xed9c>
   1f30c:	bne	1f31c <main@@Base+0xc044>
   1f310:	ldrb	r0, [r4, #2]!
   1f314:	cmp	r0, #32
   1f318:	bhi	1f32c <main@@Base+0xc054>
   1f31c:	mov	r0, r5
   1f320:	mov	r2, r8
   1f324:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1f328:	mov	r4, r0
   1f32c:	cmp	r4, r8
   1f330:	mov	r2, r8
   1f334:	beq	1f348 <main@@Base+0xc070>
   1f338:	ldrb	r0, [r4]
   1f33c:	cmp	r0, #125	; 0x7d
   1f340:	beq	1fea0 <main@@Base+0xcbc8>
   1f344:	mov	r2, r4
   1f348:	str	r5, [sp, #44]	; 0x2c
   1f34c:	str	r9, [sp, #40]	; 0x28
   1f350:	cmp	r2, r8
   1f354:	mov	sl, r8
   1f358:	beq	1f3a4 <main@@Base+0xc0cc>
   1f35c:	ldrb	r0, [r2]
   1f360:	cmp	r0, #46	; 0x2e
   1f364:	beq	1f37c <main@@Base+0xc0a4>
   1f368:	cmp	r0, #34	; 0x22
   1f36c:	bne	1f398 <main@@Base+0xc0c0>
   1f370:	mov	r0, #0
   1f374:	add	sl, r2, #1
   1f378:	b	1f3a0 <main@@Base+0xc0c8>
   1f37c:	mov	r1, r2
   1f380:	mov	r0, r5
   1f384:	mov	r2, r8
   1f388:	mov	r3, #5
   1f38c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1f390:	mov	sl, r0
   1f394:	b	1f3a4 <main@@Base+0xc0cc>
   1f398:	mov	r0, #1
   1f39c:	mov	sl, r2
   1f3a0:	str	r0, [r5, #12]
   1f3a4:	sub	lr, r8, sl
   1f3a8:	mov	r0, #8
   1f3ac:	cmp	lr, #8
   1f3b0:	movcc	r0, lr
   1f3b4:	and	r0, r0, #15
   1f3b8:	sub	r2, r0, #1
   1f3bc:	cmp	r2, #7
   1f3c0:	bhi	1fce0 <main@@Base+0xca08>
   1f3c4:	add	r4, pc, #24
   1f3c8:	mov	r0, #0
   1f3cc:	mov	r1, #0
   1f3d0:	mov	r3, #0
   1f3d4:	mov	r7, #0
   1f3d8:	mov	r6, #0
   1f3dc:	mov	r5, #0
   1f3e0:	ldr	pc, [r4, r2, lsl #2]
   1f3e4:	andeq	pc, r1, r4, lsr r4	; <UNPREDICTABLE>
   1f3e8:	andeq	pc, r1, ip, lsr #8
   1f3ec:	andeq	pc, r1, r4, lsr #8
   1f3f0:	andeq	pc, r1, ip, lsl r4	; <UNPREDICTABLE>
   1f3f4:	andeq	pc, r1, ip, lsl #8
   1f3f8:	andeq	pc, r1, r4, lsl #8
   1f3fc:	andeq	pc, r1, r4, lsl #8
   1f400:	andeq	pc, r1, r4, lsl #8
   1f404:	ldrb	r1, [sl, #5]
   1f408:	lsl	r1, r1, #16
   1f40c:	ldrb	r2, [sl, #4]
   1f410:	mov	r3, r0
   1f414:	orr	r1, r1, r2, lsl #24
   1f418:	mov	r0, r1
   1f41c:	ldrb	r1, [sl, #3]
   1f420:	orr	r7, r1, r3
   1f424:	ldrb	r1, [sl, #2]
   1f428:	orr	r6, r7, r1, lsl #8
   1f42c:	ldrb	r1, [sl, #1]
   1f430:	orr	r5, r6, r1, lsl #16
   1f434:	ldrb	r1, [sl]
   1f438:	movw	r3, #29234	; 0x7232
   1f43c:	lsr	r2, r0, #16
   1f440:	movt	r3, #27759	; 0x6c6f
   1f444:	orr	r9, r5, r1, lsl #24
   1f448:	movw	r1, #25455	; 0x636f
   1f44c:	orr	r2, r2, r9, lsl #16
   1f450:	eor	r1, r1, r9, lsr #16
   1f454:	eor	r2, r2, r3
   1f458:	orrs	r1, r2, r1
   1f45c:	bne	1f4a8 <main@@Base+0xc1d0>
   1f460:	cmp	lr, #7
   1f464:	mov	r7, sl
   1f468:	blt	1f694 <main@@Base+0xc3bc>
   1f46c:	ldr	r2, [sp, #44]	; 0x2c
   1f470:	mov	r1, sl
   1f474:	ldrb	r0, [r1, #6]!
   1f478:	ldr	r2, [r2, #12]
   1f47c:	cmp	r2, #0
   1f480:	beq	1f50c <main@@Base+0xc234>
   1f484:	cmp	r0, #33	; 0x21
   1f488:	bcc	1f498 <main@@Base+0xc1c0>
   1f48c:	cmp	r0, #58	; 0x3a
   1f490:	mov	r7, sl
   1f494:	bne	1f694 <main@@Base+0xc3bc>
   1f498:	ldr	r0, [sp, #44]	; 0x2c
   1f49c:	mov	r2, #0
   1f4a0:	str	r2, [r0, #12]
   1f4a4:	b	1f51c <main@@Base+0xc244>
   1f4a8:	movw	r1, #27759	; 0x6c6f
   1f4ac:	and	r0, r0, #-16777216	; 0xff000000
   1f4b0:	movt	r1, #25455	; 0x636f
   1f4b4:	eor	r0, r0, #1912602624	; 0x72000000
   1f4b8:	eor	r1, r9, r1
   1f4bc:	orrs	r0, r0, r1
   1f4c0:	bne	1f878 <main@@Base+0xc5a0>
   1f4c4:	cmp	lr, #6
   1f4c8:	mov	r7, sl
   1f4cc:	blt	1f7f0 <main@@Base+0xc518>
   1f4d0:	ldr	r2, [sp, #44]	; 0x2c
   1f4d4:	mov	r1, sl
   1f4d8:	ldrb	r0, [r1, #5]!
   1f4dc:	ldr	r2, [r2, #12]
   1f4e0:	cmp	r2, #0
   1f4e4:	beq	1f53c <main@@Base+0xc264>
   1f4e8:	cmp	r0, #33	; 0x21
   1f4ec:	bcc	1f4fc <main@@Base+0xc224>
   1f4f0:	cmp	r0, #58	; 0x3a
   1f4f4:	mov	r7, sl
   1f4f8:	bne	1f7f0 <main@@Base+0xc518>
   1f4fc:	ldr	r0, [sp, #44]	; 0x2c
   1f500:	mov	r2, #0
   1f504:	str	r2, [r0, #12]
   1f508:	b	1f54c <main@@Base+0xc274>
   1f50c:	cmp	r0, #34	; 0x22
   1f510:	mov	r7, sl
   1f514:	bne	1f694 <main@@Base+0xc3bc>
   1f518:	add	r1, sl, #7
   1f51c:	sub	r0, r8, r1
   1f520:	cmp	r0, #2
   1f524:	blt	1f580 <main@@Base+0xc2a8>
   1f528:	ldrb	r0, [r1]
   1f52c:	cmp	r0, #32
   1f530:	bls	1f56c <main@@Base+0xc294>
   1f534:	mov	r7, r1
   1f538:	b	1f598 <main@@Base+0xc2c0>
   1f53c:	cmp	r0, #34	; 0x22
   1f540:	mov	r7, sl
   1f544:	bne	1f7f0 <main@@Base+0xc518>
   1f548:	add	r1, sl, #6
   1f54c:	sub	r0, r8, r1
   1f550:	cmp	r0, #2
   1f554:	blt	1f600 <main@@Base+0xc328>
   1f558:	ldrb	r0, [r1]
   1f55c:	cmp	r0, #32
   1f560:	bls	1f5ec <main@@Base+0xc314>
   1f564:	mov	r7, r1
   1f568:	b	1f618 <main@@Base+0xc340>
   1f56c:	bne	1f580 <main@@Base+0xc2a8>
   1f570:	mov	r7, r1
   1f574:	ldrb	r0, [r7, #1]!
   1f578:	cmp	r0, #32
   1f57c:	bhi	1f598 <main@@Base+0xc2c0>
   1f580:	ldr	r0, [sp, #44]	; 0x2c
   1f584:	mov	r2, r8
   1f588:	mov	r4, lr
   1f58c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1f590:	mov	lr, r4
   1f594:	mov	r7, r0
   1f598:	cmp	r7, r8
   1f59c:	beq	1f5d0 <main@@Base+0xc2f8>
   1f5a0:	ldrb	r0, [r7]
   1f5a4:	cmp	r0, #58	; 0x3a
   1f5a8:	bne	1f5d0 <main@@Base+0xc2f8>
   1f5ac:	add	r1, r7, #1
   1f5b0:	sub	r0, r8, r1
   1f5b4:	cmp	r0, #2
   1f5b8:	blt	1f67c <main@@Base+0xc3a4>
   1f5bc:	ldrb	r0, [r1]
   1f5c0:	cmp	r0, #32
   1f5c4:	bls	1f66c <main@@Base+0xc394>
   1f5c8:	mov	r7, r1
   1f5cc:	b	1f694 <main@@Base+0xc3bc>
   1f5d0:	ldr	r0, [sp, #44]	; 0x2c
   1f5d4:	mov	r1, r7
   1f5d8:	mov	r2, r8
   1f5dc:	mov	r3, #4
   1f5e0:	mov	r4, lr
   1f5e4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1f5e8:	b	1f68c <main@@Base+0xc3b4>
   1f5ec:	bne	1f600 <main@@Base+0xc328>
   1f5f0:	mov	r7, r1
   1f5f4:	ldrb	r0, [r7, #1]!
   1f5f8:	cmp	r0, #32
   1f5fc:	bhi	1f618 <main@@Base+0xc340>
   1f600:	ldr	r0, [sp, #44]	; 0x2c
   1f604:	mov	r2, r8
   1f608:	mov	r4, lr
   1f60c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1f610:	mov	lr, r4
   1f614:	mov	r7, r0
   1f618:	cmp	r7, r8
   1f61c:	beq	1f650 <main@@Base+0xc378>
   1f620:	ldrb	r0, [r7]
   1f624:	cmp	r0, #58	; 0x3a
   1f628:	bne	1f650 <main@@Base+0xc378>
   1f62c:	add	r1, r7, #1
   1f630:	sub	r0, r8, r1
   1f634:	cmp	r0, #2
   1f638:	blt	1f7d8 <main@@Base+0xc500>
   1f63c:	ldrb	r0, [r1]
   1f640:	cmp	r0, #32
   1f644:	bls	1f7c8 <main@@Base+0xc4f0>
   1f648:	mov	r7, r1
   1f64c:	b	1f7f0 <main@@Base+0xc518>
   1f650:	ldr	r0, [sp, #44]	; 0x2c
   1f654:	mov	r1, r7
   1f658:	mov	r2, r8
   1f65c:	mov	r3, #4
   1f660:	mov	r4, lr
   1f664:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1f668:	b	1f7e8 <main@@Base+0xc510>
   1f66c:	bne	1f67c <main@@Base+0xc3a4>
   1f670:	ldrb	r0, [r7, #2]!
   1f674:	cmp	r0, #32
   1f678:	bhi	1f694 <main@@Base+0xc3bc>
   1f67c:	ldr	r0, [sp, #44]	; 0x2c
   1f680:	mov	r2, r8
   1f684:	mov	r4, lr
   1f688:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1f68c:	mov	lr, r4
   1f690:	mov	r7, r0
   1f694:	cmp	sl, r7
   1f698:	beq	1f878 <main@@Base+0xc5a0>
   1f69c:	mov	r6, #0
   1f6a0:	cmp	r7, r8
   1f6a4:	str	r6, [sp, #52]	; 0x34
   1f6a8:	str	r6, [sp, #48]	; 0x30
   1f6ac:	strb	r6, [fp, #-36]	; 0xffffffdc
   1f6b0:	str	r6, [fp, #-32]	; 0xffffffe0
   1f6b4:	beq	1f71c <main@@Base+0xc444>
   1f6b8:	add	r0, sp, #48	; 0x30
   1f6bc:	mov	r1, r7
   1f6c0:	mov	r2, r8
   1f6c4:	sub	r3, fp, #32
   1f6c8:	str	r0, [sp]
   1f6cc:	ldr	r5, [sp, #44]	; 0x2c
   1f6d0:	mov	r0, r5
   1f6d4:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1f6d8:	ldr	r9, [sp, #40]	; 0x28
   1f6dc:	cmp	r0, r7
   1f6e0:	beq	1f72c <main@@Base+0xc454>
   1f6e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f6e8:	mov	r4, r0
   1f6ec:	ldr	r0, [sp, #48]	; 0x30
   1f6f0:	ldr	r1, [sp, #52]	; 0x34
   1f6f4:	cmp	r2, #0
   1f6f8:	beq	1f734 <main@@Base+0xc45c>
   1f6fc:	subs	r2, r0, #129	; 0x81
   1f700:	sbcs	r1, r1, #0
   1f704:	bcc	1f75c <main@@Base+0xc484>
   1f708:	mov	r0, r5
   1f70c:	mov	r1, r4
   1f710:	mov	r2, r8
   1f714:	mov	r3, #8
   1f718:	b	1f750 <main@@Base+0xc478>
   1f71c:	ldr	r5, [sp, #44]	; 0x2c
   1f720:	ldr	r9, [sp, #40]	; 0x28
   1f724:	mov	r4, r8
   1f728:	b	1f76c <main@@Base+0xc494>
   1f72c:	mov	r4, r7
   1f730:	b	1f76c <main@@Base+0xc494>
   1f734:	subs	r2, r0, #128	; 0x80
   1f738:	sbcs	r1, r1, #0
   1f73c:	bcc	1f764 <main@@Base+0xc48c>
   1f740:	mov	r0, r5
   1f744:	mov	r1, r4
   1f748:	mov	r2, r8
   1f74c:	mov	r3, #7
   1f750:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1f754:	mov	r4, r0
   1f758:	b	1f76c <main@@Base+0xc494>
   1f75c:	rsb	r6, r0, #0
   1f760:	b	1f768 <main@@Base+0xc490>
   1f764:	mov	r6, r0
   1f768:	strb	r6, [fp, #-36]	; 0xffffffdc
   1f76c:	cmp	r7, r4
   1f770:	bne	1f7a8 <main@@Base+0xc4d0>
   1f774:	movw	r3, #16876	; 0x41ec
   1f778:	sub	r0, fp, #36	; 0x24
   1f77c:	mov	r1, r7
   1f780:	mov	r2, r8
   1f784:	str	r0, [sp]
   1f788:	mov	r0, r5
   1f78c:	movt	r3, #4
   1f790:	bl	1e2d8 <main@@Base+0xb000>
   1f794:	mov	r4, r0
   1f798:	cmp	r0, r7
   1f79c:	cmpne	r4, r8
   1f7a0:	beq	22074 <main@@Base+0xed9c>
   1f7a4:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   1f7a8:	uxtb	r0, r6
   1f7ac:	cmp	r0, #2
   1f7b0:	ldrbeq	r0, [r5, #8]
   1f7b4:	tsteq	r0, #2
   1f7b8:	beq	1fda4 <main@@Base+0xcacc>
   1f7bc:	ldr	r0, [r5]
   1f7c0:	mov	r1, #1
   1f7c4:	b	1fd8c <main@@Base+0xcab4>
   1f7c8:	bne	1f7d8 <main@@Base+0xc500>
   1f7cc:	ldrb	r0, [r7, #2]!
   1f7d0:	cmp	r0, #32
   1f7d4:	bhi	1f7f0 <main@@Base+0xc518>
   1f7d8:	ldr	r0, [sp, #44]	; 0x2c
   1f7dc:	mov	r2, r8
   1f7e0:	mov	r4, lr
   1f7e4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1f7e8:	mov	lr, r4
   1f7ec:	mov	r7, r0
   1f7f0:	cmp	sl, r7
   1f7f4:	beq	1f878 <main@@Base+0xc5a0>
   1f7f8:	mov	r6, #0
   1f7fc:	cmp	r7, r8
   1f800:	str	r6, [sp, #52]	; 0x34
   1f804:	str	r6, [sp, #48]	; 0x30
   1f808:	strb	r6, [fp, #-36]	; 0xffffffdc
   1f80c:	str	r6, [fp, #-32]	; 0xffffffe0
   1f810:	beq	1f930 <main@@Base+0xc658>
   1f814:	add	r0, sp, #48	; 0x30
   1f818:	mov	r1, r7
   1f81c:	mov	r2, r8
   1f820:	sub	r3, fp, #32
   1f824:	str	r0, [sp]
   1f828:	ldr	r5, [sp, #44]	; 0x2c
   1f82c:	mov	r0, r5
   1f830:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1f834:	ldr	r9, [sp, #40]	; 0x28
   1f838:	cmp	r0, r7
   1f83c:	beq	1f970 <main@@Base+0xc698>
   1f840:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f844:	mov	r4, r0
   1f848:	ldr	r0, [sp, #48]	; 0x30
   1f84c:	ldr	r1, [sp, #52]	; 0x34
   1f850:	cmp	r2, #0
   1f854:	beq	1f9a8 <main@@Base+0xc6d0>
   1f858:	subs	r2, r0, #129	; 0x81
   1f85c:	sbcs	r1, r1, #0
   1f860:	bcc	1f9d0 <main@@Base+0xc6f8>
   1f864:	mov	r0, r5
   1f868:	mov	r1, r4
   1f86c:	mov	r2, r8
   1f870:	mov	r3, #8
   1f874:	b	1f9c4 <main@@Base+0xc6ec>
   1f878:	movw	r1, #12800	; 0x3200
   1f87c:	bic	r0, r9, #255	; 0xff
   1f880:	movt	r1, #30051	; 0x7563
   1f884:	teq	r0, r1
   1f888:	bne	1f8d4 <main@@Base+0xc5fc>
   1f88c:	ldr	r5, [sp, #44]	; 0x2c
   1f890:	ldr	r9, [sp, #40]	; 0x28
   1f894:	cmp	lr, #4
   1f898:	mov	r7, sl
   1f89c:	blt	1fb44 <main@@Base+0xc86c>
   1f8a0:	mov	r1, sl
   1f8a4:	ldr	r2, [r5, #12]
   1f8a8:	ldrb	r0, [r1, #3]!
   1f8ac:	cmp	r2, #0
   1f8b0:	beq	1f940 <main@@Base+0xc668>
   1f8b4:	cmp	r0, #33	; 0x21
   1f8b8:	bcc	1f8c8 <main@@Base+0xc5f0>
   1f8bc:	cmp	r0, #58	; 0x3a
   1f8c0:	mov	r7, sl
   1f8c4:	bne	1fb44 <main@@Base+0xc86c>
   1f8c8:	mov	r0, #0
   1f8cc:	str	r0, [r5, #12]
   1f8d0:	b	1f950 <main@@Base+0xc678>
   1f8d4:	movw	r0, #0
   1f8d8:	bfc	r9, #0, #16
   1f8dc:	ldr	r5, [sp, #44]	; 0x2c
   1f8e0:	movt	r0, #30051	; 0x7563
   1f8e4:	teq	r9, r0
   1f8e8:	ldr	r9, [sp, #40]	; 0x28
   1f8ec:	bne	1fce0 <main@@Base+0xca08>
   1f8f0:	cmp	lr, #3
   1f8f4:	mov	r7, sl
   1f8f8:	blt	1fc74 <main@@Base+0xc99c>
   1f8fc:	mov	r1, sl
   1f900:	ldr	r2, [r5, #12]
   1f904:	ldrb	r0, [r1, #2]!
   1f908:	cmp	r2, #0
   1f90c:	beq	1f978 <main@@Base+0xc6a0>
   1f910:	cmp	r0, #33	; 0x21
   1f914:	bcc	1f924 <main@@Base+0xc64c>
   1f918:	cmp	r0, #58	; 0x3a
   1f91c:	mov	r7, sl
   1f920:	bne	1fc74 <main@@Base+0xc99c>
   1f924:	mov	r0, #0
   1f928:	str	r0, [r5, #12]
   1f92c:	b	1f988 <main@@Base+0xc6b0>
   1f930:	ldr	r5, [sp, #44]	; 0x2c
   1f934:	ldr	r9, [sp, #40]	; 0x28
   1f938:	mov	r4, r8
   1f93c:	b	1fa54 <main@@Base+0xc77c>
   1f940:	cmp	r0, #34	; 0x22
   1f944:	mov	r7, sl
   1f948:	bne	1fb44 <main@@Base+0xc86c>
   1f94c:	add	r1, sl, #4
   1f950:	sub	r0, r8, r1
   1f954:	cmp	r0, #2
   1f958:	blt	1f9ec <main@@Base+0xc714>
   1f95c:	ldrb	r0, [r1]
   1f960:	cmp	r0, #32
   1f964:	bls	1f9d8 <main@@Base+0xc700>
   1f968:	mov	r7, r1
   1f96c:	b	1f9fc <main@@Base+0xc724>
   1f970:	mov	r4, r7
   1f974:	b	1fa54 <main@@Base+0xc77c>
   1f978:	cmp	r0, #34	; 0x22
   1f97c:	mov	r7, sl
   1f980:	bne	1fc74 <main@@Base+0xc99c>
   1f984:	add	r1, sl, #3
   1f988:	sub	r0, r8, r1
   1f98c:	cmp	r0, #2
   1f990:	blt	1fac4 <main@@Base+0xc7ec>
   1f994:	ldrb	r0, [r1]
   1f998:	cmp	r0, #32
   1f99c:	bls	1fab0 <main@@Base+0xc7d8>
   1f9a0:	mov	r7, r1
   1f9a4:	b	1fad4 <main@@Base+0xc7fc>
   1f9a8:	subs	r2, r0, #128	; 0x80
   1f9ac:	sbcs	r1, r1, #0
   1f9b0:	bcc	1fa4c <main@@Base+0xc774>
   1f9b4:	mov	r0, r5
   1f9b8:	mov	r1, r4
   1f9bc:	mov	r2, r8
   1f9c0:	mov	r3, #7
   1f9c4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1f9c8:	mov	r4, r0
   1f9cc:	b	1fa54 <main@@Base+0xc77c>
   1f9d0:	rsb	r6, r0, #0
   1f9d4:	b	1fa50 <main@@Base+0xc778>
   1f9d8:	bne	1f9ec <main@@Base+0xc714>
   1f9dc:	mov	r7, r1
   1f9e0:	ldrb	r0, [r7, #1]!
   1f9e4:	cmp	r0, #32
   1f9e8:	bhi	1f9fc <main@@Base+0xc724>
   1f9ec:	mov	r0, r5
   1f9f0:	mov	r2, r8
   1f9f4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1f9f8:	mov	r7, r0
   1f9fc:	cmp	r7, r8
   1fa00:	beq	1fa34 <main@@Base+0xc75c>
   1fa04:	ldrb	r0, [r7]
   1fa08:	cmp	r0, #58	; 0x3a
   1fa0c:	bne	1fa34 <main@@Base+0xc75c>
   1fa10:	add	r1, r7, #1
   1fa14:	sub	r0, r8, r1
   1fa18:	cmp	r0, #2
   1fa1c:	blt	1fb34 <main@@Base+0xc85c>
   1fa20:	ldrb	r0, [r1]
   1fa24:	cmp	r0, #32
   1fa28:	bls	1fb24 <main@@Base+0xc84c>
   1fa2c:	mov	r7, r1
   1fa30:	b	1fb44 <main@@Base+0xc86c>
   1fa34:	mov	r0, r5
   1fa38:	mov	r1, r7
   1fa3c:	mov	r2, r8
   1fa40:	mov	r3, #4
   1fa44:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1fa48:	b	1fb40 <main@@Base+0xc868>
   1fa4c:	mov	r6, r0
   1fa50:	strb	r6, [fp, #-36]	; 0xffffffdc
   1fa54:	cmp	r7, r4
   1fa58:	bne	1fa90 <main@@Base+0xc7b8>
   1fa5c:	movw	r3, #16892	; 0x41fc
   1fa60:	sub	r0, fp, #36	; 0x24
   1fa64:	mov	r1, r7
   1fa68:	mov	r2, r8
   1fa6c:	str	r0, [sp]
   1fa70:	mov	r0, r5
   1fa74:	movt	r3, #4
   1fa78:	bl	1e2d8 <main@@Base+0xb000>
   1fa7c:	mov	r4, r0
   1fa80:	cmp	r0, r7
   1fa84:	cmpne	r4, r8
   1fa88:	beq	22074 <main@@Base+0xed9c>
   1fa8c:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   1fa90:	uxtb	r0, r6
   1fa94:	cmp	r0, #2
   1fa98:	ldrbeq	r0, [r5, #8]
   1fa9c:	tsteq	r0, #2
   1faa0:	beq	1fda4 <main@@Base+0xcacc>
   1faa4:	ldr	r0, [r5]
   1faa8:	mov	r1, #0
   1faac:	b	1fd8c <main@@Base+0xcab4>
   1fab0:	bne	1fac4 <main@@Base+0xc7ec>
   1fab4:	mov	r7, r1
   1fab8:	ldrb	r0, [r7, #1]!
   1fabc:	cmp	r0, #32
   1fac0:	bhi	1fad4 <main@@Base+0xc7fc>
   1fac4:	mov	r0, r5
   1fac8:	mov	r2, r8
   1facc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1fad0:	mov	r7, r0
   1fad4:	cmp	r7, r8
   1fad8:	beq	1fb0c <main@@Base+0xc834>
   1fadc:	ldrb	r0, [r7]
   1fae0:	cmp	r0, #58	; 0x3a
   1fae4:	bne	1fb0c <main@@Base+0xc834>
   1fae8:	add	r1, r7, #1
   1faec:	sub	r0, r8, r1
   1faf0:	cmp	r0, #2
   1faf4:	blt	1fc64 <main@@Base+0xc98c>
   1faf8:	ldrb	r0, [r1]
   1fafc:	cmp	r0, #32
   1fb00:	bls	1fc54 <main@@Base+0xc97c>
   1fb04:	mov	r7, r1
   1fb08:	b	1fc74 <main@@Base+0xc99c>
   1fb0c:	mov	r0, r5
   1fb10:	mov	r1, r7
   1fb14:	mov	r2, r8
   1fb18:	mov	r3, #4
   1fb1c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1fb20:	b	1fc70 <main@@Base+0xc998>
   1fb24:	bne	1fb34 <main@@Base+0xc85c>
   1fb28:	ldrb	r0, [r7, #2]!
   1fb2c:	cmp	r0, #32
   1fb30:	bhi	1fb44 <main@@Base+0xc86c>
   1fb34:	mov	r0, r5
   1fb38:	mov	r2, r8
   1fb3c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1fb40:	mov	r7, r0
   1fb44:	cmp	sl, r7
   1fb48:	beq	1fce0 <main@@Base+0xca08>
   1fb4c:	mov	r6, #0
   1fb50:	cmp	r7, r8
   1fb54:	str	r6, [sp, #52]	; 0x34
   1fb58:	str	r6, [sp, #48]	; 0x30
   1fb5c:	strb	r6, [fp, #-36]	; 0xffffffdc
   1fb60:	str	r6, [fp, #-32]	; 0xffffffe0
   1fb64:	beq	1fbb0 <main@@Base+0xc8d8>
   1fb68:	add	r0, sp, #48	; 0x30
   1fb6c:	mov	r1, r7
   1fb70:	mov	r2, r8
   1fb74:	sub	r3, fp, #32
   1fb78:	str	r0, [sp]
   1fb7c:	mov	r0, r5
   1fb80:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1fb84:	cmp	r0, r7
   1fb88:	beq	1fbb8 <main@@Base+0xc8e0>
   1fb8c:	mov	r4, r0
   1fb90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fb94:	cmp	r0, #0
   1fb98:	beq	1fbc0 <main@@Base+0xc8e8>
   1fb9c:	mov	r0, r5
   1fba0:	mov	r1, r4
   1fba4:	mov	r2, r8
   1fba8:	mov	r3, #8
   1fbac:	b	1fbe4 <main@@Base+0xc90c>
   1fbb0:	mov	r4, r8
   1fbb4:	b	1fbec <main@@Base+0xc914>
   1fbb8:	mov	r4, r7
   1fbbc:	b	1fbec <main@@Base+0xc914>
   1fbc0:	ldr	r0, [sp, #48]	; 0x30
   1fbc4:	ldr	r1, [sp, #52]	; 0x34
   1fbc8:	subs	r2, r0, #256	; 0x100
   1fbcc:	sbcs	r1, r1, #0
   1fbd0:	bcc	1fc48 <main@@Base+0xc970>
   1fbd4:	mov	r0, r5
   1fbd8:	mov	r1, r4
   1fbdc:	mov	r2, r8
   1fbe0:	mov	r3, #7
   1fbe4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1fbe8:	mov	r4, r0
   1fbec:	cmp	r7, r4
   1fbf0:	bne	1fc28 <main@@Base+0xc950>
   1fbf4:	movw	r3, #16908	; 0x420c
   1fbf8:	sub	r0, fp, #36	; 0x24
   1fbfc:	mov	r1, r7
   1fc00:	mov	r2, r8
   1fc04:	str	r0, [sp]
   1fc08:	mov	r0, r5
   1fc0c:	movt	r3, #4
   1fc10:	bl	1e510 <main@@Base+0xb238>
   1fc14:	mov	r4, r0
   1fc18:	cmp	r0, r7
   1fc1c:	cmpne	r4, r8
   1fc20:	beq	22074 <main@@Base+0xed9c>
   1fc24:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   1fc28:	uxtb	r0, r6
   1fc2c:	cmp	r0, #2
   1fc30:	ldrbeq	r0, [r5, #8]
   1fc34:	tsteq	r0, #2
   1fc38:	beq	1fda4 <main@@Base+0xcacc>
   1fc3c:	ldr	r0, [r5]
   1fc40:	mov	r1, #3
   1fc44:	b	1fd8c <main@@Base+0xcab4>
   1fc48:	mov	r6, r0
   1fc4c:	strb	r0, [fp, #-36]	; 0xffffffdc
   1fc50:	b	1fbec <main@@Base+0xc914>
   1fc54:	bne	1fc64 <main@@Base+0xc98c>
   1fc58:	ldrb	r0, [r7, #2]!
   1fc5c:	cmp	r0, #32
   1fc60:	bhi	1fc74 <main@@Base+0xc99c>
   1fc64:	mov	r0, r5
   1fc68:	mov	r2, r8
   1fc6c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1fc70:	mov	r7, r0
   1fc74:	cmp	sl, r7
   1fc78:	beq	1fce0 <main@@Base+0xca08>
   1fc7c:	mov	r6, #0
   1fc80:	cmp	r7, r8
   1fc84:	str	r6, [sp, #52]	; 0x34
   1fc88:	str	r6, [sp, #48]	; 0x30
   1fc8c:	strb	r6, [fp, #-36]	; 0xffffffdc
   1fc90:	str	r6, [fp, #-32]	; 0xffffffe0
   1fc94:	beq	1fcf8 <main@@Base+0xca20>
   1fc98:	add	r0, sp, #48	; 0x30
   1fc9c:	mov	r1, r7
   1fca0:	mov	r2, r8
   1fca4:	sub	r3, fp, #32
   1fca8:	str	r0, [sp]
   1fcac:	mov	r0, r5
   1fcb0:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   1fcb4:	cmp	r0, r7
   1fcb8:	beq	1fd00 <main@@Base+0xca28>
   1fcbc:	mov	r4, r0
   1fcc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fcc4:	cmp	r0, #0
   1fcc8:	beq	1fd08 <main@@Base+0xca30>
   1fccc:	mov	r0, r5
   1fcd0:	mov	r1, r4
   1fcd4:	mov	r2, r8
   1fcd8:	mov	r3, #8
   1fcdc:	b	1fd2c <main@@Base+0xca54>
   1fce0:	mov	r0, r5
   1fce4:	mov	r1, sl
   1fce8:	mov	r2, r8
   1fcec:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1fcf0:	mov	r4, r0
   1fcf4:	b	1fda4 <main@@Base+0xcacc>
   1fcf8:	mov	r4, r8
   1fcfc:	b	1fd34 <main@@Base+0xca5c>
   1fd00:	mov	r4, r7
   1fd04:	b	1fd34 <main@@Base+0xca5c>
   1fd08:	ldr	r0, [sp, #48]	; 0x30
   1fd0c:	ldr	r1, [sp, #52]	; 0x34
   1fd10:	subs	r2, r0, #256	; 0x100
   1fd14:	sbcs	r1, r1, #0
   1fd18:	bcc	1fe5c <main@@Base+0xcb84>
   1fd1c:	mov	r0, r5
   1fd20:	mov	r1, r4
   1fd24:	mov	r2, r8
   1fd28:	mov	r3, #7
   1fd2c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1fd30:	mov	r4, r0
   1fd34:	cmp	r7, r4
   1fd38:	bne	1fd70 <main@@Base+0xca98>
   1fd3c:	movw	r3, #16920	; 0x4218
   1fd40:	sub	r0, fp, #36	; 0x24
   1fd44:	mov	r1, r7
   1fd48:	mov	r2, r8
   1fd4c:	str	r0, [sp]
   1fd50:	mov	r0, r5
   1fd54:	movt	r3, #4
   1fd58:	bl	1e510 <main@@Base+0xb238>
   1fd5c:	mov	r4, r0
   1fd60:	cmp	r0, r7
   1fd64:	cmpne	r4, r8
   1fd68:	beq	22074 <main@@Base+0xed9c>
   1fd6c:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   1fd70:	uxtb	r0, r6
   1fd74:	cmp	r0, #2
   1fd78:	ldrbeq	r0, [r5, #8]
   1fd7c:	tsteq	r0, #2
   1fd80:	beq	1fda4 <main@@Base+0xcacc>
   1fd84:	ldr	r0, [r5]
   1fd88:	mov	r1, #2
   1fd8c:	mov	r2, #1
   1fd90:	mov	r3, #1
   1fd94:	bl	2b8dc <flatcc_builder_table_add@@Base>
   1fd98:	cmp	r0, #0
   1fd9c:	beq	22074 <main@@Base+0xed9c>
   1fda0:	strb	r6, [r0]
   1fda4:	sub	r0, r8, r4
   1fda8:	cmp	r0, #2
   1fdac:	blt	1fdd8 <main@@Base+0xcb00>
   1fdb0:	ldrb	r0, [r4]
   1fdb4:	cmp	r0, #32
   1fdb8:	bls	1fdc4 <main@@Base+0xcaec>
   1fdbc:	mov	r2, r4
   1fdc0:	b	1fdec <main@@Base+0xcb14>
   1fdc4:	bne	1fdd8 <main@@Base+0xcb00>
   1fdc8:	mov	r2, r4
   1fdcc:	ldrb	r0, [r2, #1]!
   1fdd0:	cmp	r0, #32
   1fdd4:	bhi	1fdec <main@@Base+0xcb14>
   1fdd8:	mov	r0, r5
   1fddc:	mov	r1, r4
   1fde0:	mov	r2, r8
   1fde4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1fde8:	mov	r2, r0
   1fdec:	cmp	r2, r8
   1fdf0:	beq	1fff4 <main@@Base+0xcd1c>
   1fdf4:	ldrb	r0, [r2]
   1fdf8:	cmp	r0, #44	; 0x2c
   1fdfc:	bne	21fb8 <main@@Base+0xece0>
   1fe00:	add	r1, r2, #1
   1fe04:	sub	r0, r8, r1
   1fe08:	cmp	r0, #2
   1fe0c:	blt	1fe34 <main@@Base+0xcb5c>
   1fe10:	ldrb	r0, [r1]
   1fe14:	cmp	r0, #32
   1fe18:	bls	1fe24 <main@@Base+0xcb4c>
   1fe1c:	mov	r2, r1
   1fe20:	b	1fe44 <main@@Base+0xcb6c>
   1fe24:	bne	1fe34 <main@@Base+0xcb5c>
   1fe28:	ldrb	r0, [r2, #2]!
   1fe2c:	cmp	r0, #32
   1fe30:	bhi	1fe44 <main@@Base+0xcb6c>
   1fe34:	mov	r0, r5
   1fe38:	mov	r2, r8
   1fe3c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1fe40:	mov	r2, r0
   1fe44:	cmp	r2, r8
   1fe48:	beq	1fffc <main@@Base+0xcd24>
   1fe4c:	ldrb	r0, [r2]
   1fe50:	cmp	r0, #125	; 0x7d
   1fe54:	bne	1f350 <main@@Base+0xc078>
   1fe58:	b	21fc0 <main@@Base+0xece8>
   1fe5c:	mov	r6, r0
   1fe60:	strb	r0, [fp, #-36]	; 0xffffffdc
   1fe64:	b	1fd34 <main@@Base+0xca5c>
   1fe68:	bne	1fe78 <main@@Base+0xcba0>
   1fe6c:	ldrb	r0, [r4, #2]!
   1fe70:	cmp	r0, #32
   1fe74:	bhi	1fe88 <main@@Base+0xcbb0>
   1fe78:	mov	r0, r5
   1fe7c:	mov	r2, r8
   1fe80:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1fe84:	mov	r4, r0
   1fe88:	cmp	r4, r8
   1fe8c:	mov	r3, r8
   1fe90:	beq	1fed4 <main@@Base+0xcbfc>
   1fe94:	ldrb	r0, [r4]
   1fe98:	cmp	r0, #125	; 0x7d
   1fe9c:	bne	1fed0 <main@@Base+0xcbf8>
   1fea0:	add	r1, r4, #1
   1fea4:	sub	r0, r8, r1
   1fea8:	cmp	r0, #2
   1feac:	blt	2204c <main@@Base+0xed74>
   1feb0:	ldrb	r0, [r1]
   1feb4:	cmp	r0, #32
   1feb8:	bhi	21fdc <main@@Base+0xed04>
   1febc:	bne	2204c <main@@Base+0xed74>
   1fec0:	ldrb	r0, [r4, #2]!
   1fec4:	cmp	r0, #32
   1fec8:	bhi	1f284 <main@@Base+0xbfac>
   1fecc:	b	2204c <main@@Base+0xed74>
   1fed0:	mov	r3, r4
   1fed4:	mov	r4, #0
   1fed8:	mov	r7, #1
   1fedc:	cmp	r3, r8
   1fee0:	mov	r1, r8
   1fee4:	beq	1ff2c <main@@Base+0xcc54>
   1fee8:	ldrb	r0, [r3]
   1feec:	cmp	r0, #46	; 0x2e
   1fef0:	beq	1ff08 <main@@Base+0xcc30>
   1fef4:	cmp	r0, #34	; 0x22
   1fef8:	bne	1ff24 <main@@Base+0xcc4c>
   1fefc:	str	r4, [r5, #12]
   1ff00:	add	r1, r3, #1
   1ff04:	b	1ff2c <main@@Base+0xcc54>
   1ff08:	mov	r1, r3
   1ff0c:	mov	r0, r5
   1ff10:	mov	r2, r8
   1ff14:	mov	r3, #5
   1ff18:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   1ff1c:	mov	r1, r0
   1ff20:	b	1ff2c <main@@Base+0xcc54>
   1ff24:	mov	r1, r3
   1ff28:	str	r7, [r5, #12]
   1ff2c:	mov	r0, r5
   1ff30:	mov	r2, r8
   1ff34:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   1ff38:	mov	r2, r0
   1ff3c:	sub	r0, r8, r0
   1ff40:	cmp	r0, #2
   1ff44:	blt	1ff70 <main@@Base+0xcc98>
   1ff48:	ldrb	r0, [r2]
   1ff4c:	cmp	r0, #32
   1ff50:	bls	1ff5c <main@@Base+0xcc84>
   1ff54:	mov	r3, r2
   1ff58:	b	1ff84 <main@@Base+0xccac>
   1ff5c:	bne	1ff70 <main@@Base+0xcc98>
   1ff60:	mov	r3, r2
   1ff64:	ldrb	r0, [r3, #1]!
   1ff68:	cmp	r0, #32
   1ff6c:	bhi	1ff84 <main@@Base+0xccac>
   1ff70:	mov	r1, r2
   1ff74:	mov	r0, r5
   1ff78:	mov	r2, r8
   1ff7c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ff80:	mov	r3, r0
   1ff84:	cmp	r3, r8
   1ff88:	beq	1fff4 <main@@Base+0xcd1c>
   1ff8c:	ldrb	r0, [r3]
   1ff90:	cmp	r0, #44	; 0x2c
   1ff94:	bne	20008 <main@@Base+0xcd30>
   1ff98:	add	r1, r3, #1
   1ff9c:	sub	r0, r8, r1
   1ffa0:	cmp	r0, #2
   1ffa4:	blt	1ffcc <main@@Base+0xccf4>
   1ffa8:	ldrb	r0, [r1]
   1ffac:	cmp	r0, #32
   1ffb0:	bls	1ffbc <main@@Base+0xcce4>
   1ffb4:	mov	r3, r1
   1ffb8:	b	1ffdc <main@@Base+0xcd04>
   1ffbc:	bne	1ffcc <main@@Base+0xccf4>
   1ffc0:	ldrb	r0, [r3, #2]!
   1ffc4:	cmp	r0, #32
   1ffc8:	bhi	1ffdc <main@@Base+0xcd04>
   1ffcc:	mov	r0, r5
   1ffd0:	mov	r2, r8
   1ffd4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   1ffd8:	mov	r3, r0
   1ffdc:	cmp	r3, r8
   1ffe0:	beq	1fffc <main@@Base+0xcd24>
   1ffe4:	ldrb	r0, [r3]
   1ffe8:	cmp	r0, #125	; 0x7d
   1ffec:	bne	1fedc <main@@Base+0xcc04>
   1fff0:	b	20010 <main@@Base+0xcd38>
   1fff4:	mov	r4, r8
   1fff8:	b	1f284 <main@@Base+0xbfac>
   1fffc:	mov	r0, r5
   20000:	mov	r1, r8
   20004:	b	2202c <main@@Base+0xed54>
   20008:	cmp	r0, #125	; 0x7d
   2000c:	bne	21fac <main@@Base+0xecd4>
   20010:	add	r1, r3, #1
   20014:	sub	r0, r8, r1
   20018:	cmp	r0, #2
   2001c:	blt	2204c <main@@Base+0xed74>
   20020:	ldrb	r0, [r1]
   20024:	cmp	r0, #32
   20028:	bhi	21fdc <main@@Base+0xed04>
   2002c:	bne	2204c <main@@Base+0xed74>
   20030:	ldrb	r0, [r3, #2]!
   20034:	cmp	r0, #32
   20038:	mov	r4, r3
   2003c:	bhi	1f284 <main@@Base+0xbfac>
   20040:	b	2204c <main@@Base+0xed74>
   20044:	bne	20054 <main@@Base+0xcd7c>
   20048:	ldrb	r0, [r4, #2]!
   2004c:	cmp	r0, #32
   20050:	bhi	20064 <main@@Base+0xcd8c>
   20054:	mov	r0, r5
   20058:	mov	r2, r8
   2005c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   20060:	mov	r4, r0
   20064:	cmp	r4, r8
   20068:	mov	r2, r8
   2006c:	beq	200a4 <main@@Base+0xcdcc>
   20070:	ldrb	r0, [r4]
   20074:	cmp	r0, #125	; 0x7d
   20078:	bne	200a0 <main@@Base+0xcdc8>
   2007c:	add	r1, r4, #1
   20080:	sub	r0, r8, r1
   20084:	cmp	r0, #2
   20088:	blt	22014 <main@@Base+0xed3c>
   2008c:	ldrb	r0, [r1]
   20090:	cmp	r0, #32
   20094:	bls	22004 <main@@Base+0xed2c>
   20098:	mov	r4, r1
   2009c:	b	1f2cc <main@@Base+0xbff4>
   200a0:	mov	r2, r4
   200a4:	add	r0, r5, #24
   200a8:	str	r0, [sp, #28]
   200ac:	add	r0, r5, #12
   200b0:	str	r0, [sp, #32]
   200b4:	movw	r0, #24436	; 0x5f74
   200b8:	movt	r0, #29299	; 0x7273
   200bc:	add	r0, r0, #65536	; 0x10000
   200c0:	add	r0, r0, #16777216	; 0x1000000
   200c4:	str	r0, [sp, #24]
   200c8:	str	r8, [sp, #36]	; 0x24
   200cc:	str	r5, [sp, #44]	; 0x2c
   200d0:	str	r9, [sp, #40]	; 0x28
   200d4:	cmp	r2, r8
   200d8:	mov	sl, r8
   200dc:	beq	20130 <main@@Base+0xce58>
   200e0:	ldrb	r0, [r2]
   200e4:	cmp	r0, #46	; 0x2e
   200e8:	beq	20104 <main@@Base+0xce2c>
   200ec:	cmp	r0, #34	; 0x22
   200f0:	bne	20120 <main@@Base+0xce48>
   200f4:	ldr	r0, [sp, #32]
   200f8:	mov	r1, #0
   200fc:	add	sl, r2, #1
   20100:	b	2012c <main@@Base+0xce54>
   20104:	mov	r1, r2
   20108:	mov	r0, r5
   2010c:	mov	r2, r8
   20110:	mov	r3, #5
   20114:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   20118:	mov	sl, r0
   2011c:	b	20130 <main@@Base+0xce58>
   20120:	ldr	r0, [sp, #32]
   20124:	mov	r1, #1
   20128:	mov	sl, r2
   2012c:	str	r1, [r0]
   20130:	sub	lr, r8, sl
   20134:	mov	r0, #8
   20138:	cmp	lr, #8
   2013c:	movcc	r0, lr
   20140:	and	r0, r0, #15
   20144:	sub	r2, r0, #1
   20148:	cmp	r2, #7
   2014c:	bhi	205b8 <main@@Base+0xd2e0>
   20150:	add	r0, pc, #32
   20154:	mov	r9, #0
   20158:	mov	ip, #0
   2015c:	mov	r5, #0
   20160:	mov	r1, #0
   20164:	mov	r3, #0
   20168:	mov	r6, #0
   2016c:	mov	r4, #0
   20170:	mov	r7, #0
   20174:	ldr	pc, [r0, r2, lsl #2]
   20178:	ldrdeq	r0, [r2], -ip
   2017c:	ldrdeq	r0, [r2], -r4
   20180:	andeq	r0, r2, ip, asr #3
   20184:	andeq	r0, r2, r4, asr #3
   20188:			; <UNDEFINED> instruction: 0x000201b8
   2018c:	andeq	r0, r2, ip, lsr #3
   20190:	muleq	r2, ip, r1
   20194:	muleq	r2, r8, r1
   20198:	ldrb	ip, [sl, #7]
   2019c:	ldrb	r0, [sl, #6]
   201a0:	mov	r5, r9
   201a4:	orr	r0, ip, r0, lsl #8
   201a8:	mov	r9, r0
   201ac:	ldrb	r0, [sl, #5]
   201b0:	mov	r1, r5
   201b4:	orr	r9, r9, r0, lsl #16
   201b8:	ldrb	r0, [sl, #4]
   201bc:	mov	r3, r1
   201c0:	orr	r9, r9, r0, lsl #24
   201c4:	ldrb	r0, [sl, #3]
   201c8:	orr	r6, r0, r3
   201cc:	ldrb	r0, [sl, #2]
   201d0:	orr	r4, r6, r0, lsl #8
   201d4:	ldrb	r0, [sl, #1]
   201d8:	orr	r7, r4, r0, lsl #16
   201dc:	movw	r2, #30976	; 0x7900
   201e0:	movt	r2, #24942	; 0x616e
   201e4:	add	r0, r2, #95	; 0x5f
   201e8:	eor	r1, r9, r0
   201ec:	ldrb	r0, [sl]
   201f0:	orr	r4, r7, r0, lsl #24
   201f4:	movw	r0, #28281	; 0x6e79
   201f8:	movt	r0, #28001	; 0x6d61
   201fc:	eor	r0, r4, r0
   20200:	orrs	r1, r1, r0
   20204:	bne	202d0 <main@@Base+0xcff8>
   20208:	ldr	r8, [sp, #36]	; 0x24
   2020c:	add	r4, sl, #8
   20210:	mov	r1, #8
   20214:	ldr	r5, [sp, #44]	; 0x2c
   20218:	ldr	r9, [sp, #40]	; 0x28
   2021c:	sub	r0, r8, r4
   20220:	cmp	r0, #8
   20224:	movcc	r1, r0
   20228:	and	r1, r1, #15
   2022c:	sub	r2, r1, #1
   20230:	cmp	r2, #7
   20234:	bhi	2078c <main@@Base+0xd4b4>
   20238:	add	r3, pc, #4
   2023c:	mov	r1, #0
   20240:	ldr	pc, [r3, r2, lsl #2]
   20244:	andeq	r0, r2, r8, ror r2
   20248:	andeq	r0, r2, r0, ror r2
   2024c:	andeq	r0, r2, r8, ror #4
   20250:	andeq	r0, r2, r4, ror #4
   20254:	andeq	r0, r2, r4, ror #4
   20258:	andeq	r0, r2, r4, ror #4
   2025c:	andeq	r0, r2, r4, ror #4
   20260:	andeq	r0, r2, r4, ror #4
   20264:	ldrb	r1, [sl, #11]
   20268:	ldrb	r2, [sl, #10]
   2026c:	orr	r1, r1, r2, lsl #8
   20270:	ldrb	r2, [sl, #9]
   20274:	orr	r1, r1, r2, lsl #16
   20278:	ldrb	r2, [r4]
   2027c:	orr	r1, r1, r2, lsl #24
   20280:	movw	r2, #28773	; 0x7065
   20284:	movt	r2, #29817	; 0x7479
   20288:	teq	r1, r2
   2028c:	bne	2078c <main@@Base+0xd4b4>
   20290:	cmp	r0, #5
   20294:	blt	2078c <main@@Base+0xd4b4>
   20298:	ldr	r2, [sp, #32]
   2029c:	mov	r1, sl
   202a0:	ldrb	r0, [r1, #12]!
   202a4:	ldr	r2, [r2]
   202a8:	cmp	r2, #0
   202ac:	beq	20360 <main@@Base+0xd088>
   202b0:	cmp	r0, #33	; 0x21
   202b4:	bcc	202c0 <main@@Base+0xcfe8>
   202b8:	cmp	r0, #58	; 0x3a
   202bc:	bne	2078c <main@@Base+0xd4b4>
   202c0:	ldr	r0, [sp, #32]
   202c4:	mov	r2, #0
   202c8:	str	r2, [r0]
   202cc:	b	2036c <main@@Base+0xd094>
   202d0:	ldr	r8, [sp, #36]	; 0x24
   202d4:	bic	r1, r9, #255	; 0xff
   202d8:	eor	r1, r1, r2
   202dc:	orrs	r0, r1, r0
   202e0:	bne	204dc <main@@Base+0xd204>
   202e4:	cmp	lr, #8
   202e8:	mov	r1, sl
   202ec:	blt	204a0 <main@@Base+0xd1c8>
   202f0:	ldr	r1, [sp, #32]
   202f4:	mov	r2, sl
   202f8:	ldrb	r0, [r2, #7]!
   202fc:	ldr	r1, [r1]
   20300:	cmp	r1, #0
   20304:	beq	2032c <main@@Base+0xd054>
   20308:	cmp	r0, #33	; 0x21
   2030c:	bcc	2031c <main@@Base+0xd044>
   20310:	cmp	r0, #58	; 0x3a
   20314:	mov	r1, sl
   20318:	bne	204a0 <main@@Base+0xd1c8>
   2031c:	ldr	r0, [sp, #32]
   20320:	mov	r1, #0
   20324:	str	r1, [r0]
   20328:	b	2033c <main@@Base+0xd064>
   2032c:	cmp	r0, #34	; 0x22
   20330:	mov	r1, sl
   20334:	bne	204a0 <main@@Base+0xd1c8>
   20338:	add	r2, sl, #8
   2033c:	sub	r0, r8, r2
   20340:	mov	r5, lr
   20344:	cmp	r0, #2
   20348:	blt	203a0 <main@@Base+0xd0c8>
   2034c:	ldrb	r0, [r2]
   20350:	cmp	r0, #32
   20354:	bls	2038c <main@@Base+0xd0b4>
   20358:	mov	r1, r2
   2035c:	b	203b8 <main@@Base+0xd0e0>
   20360:	cmp	r0, #34	; 0x22
   20364:	bne	2078c <main@@Base+0xd4b4>
   20368:	add	r1, sl, #13
   2036c:	sub	r0, r8, r1
   20370:	cmp	r0, #2
   20374:	blt	20418 <main@@Base+0xd140>
   20378:	ldrb	r0, [r1]
   2037c:	cmp	r0, #32
   20380:	bls	20404 <main@@Base+0xd12c>
   20384:	mov	r2, r1
   20388:	b	20428 <main@@Base+0xd150>
   2038c:	bne	203a0 <main@@Base+0xd0c8>
   20390:	mov	r1, r2
   20394:	ldrb	r0, [r1, #1]!
   20398:	cmp	r0, #32
   2039c:	bhi	203b8 <main@@Base+0xd0e0>
   203a0:	ldr	r0, [sp, #44]	; 0x2c
   203a4:	mov	r1, r2
   203a8:	mov	r2, r8
   203ac:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   203b0:	mov	lr, r5
   203b4:	mov	r1, r0
   203b8:	cmp	r1, r8
   203bc:	beq	203f0 <main@@Base+0xd118>
   203c0:	ldrb	r0, [r1]
   203c4:	cmp	r0, #58	; 0x3a
   203c8:	bne	203f0 <main@@Base+0xd118>
   203cc:	add	r2, r1, #1
   203d0:	sub	r0, r8, r2
   203d4:	cmp	r0, #2
   203d8:	blt	20488 <main@@Base+0xd1b0>
   203dc:	ldrb	r0, [r2]
   203e0:	cmp	r0, #32
   203e4:	bls	20478 <main@@Base+0xd1a0>
   203e8:	mov	r1, r2
   203ec:	b	204a0 <main@@Base+0xd1c8>
   203f0:	ldr	r0, [sp, #44]	; 0x2c
   203f4:	mov	r2, r8
   203f8:	mov	r3, #4
   203fc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   20400:	b	20498 <main@@Base+0xd1c0>
   20404:	bne	20418 <main@@Base+0xd140>
   20408:	mov	r2, r1
   2040c:	ldrb	r0, [r2, #1]!
   20410:	cmp	r0, #32
   20414:	bhi	20428 <main@@Base+0xd150>
   20418:	mov	r0, r5
   2041c:	mov	r2, r8
   20420:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   20424:	mov	r2, r0
   20428:	cmp	r2, r8
   2042c:	beq	20460 <main@@Base+0xd188>
   20430:	ldrb	r0, [r2]
   20434:	cmp	r0, #58	; 0x3a
   20438:	bne	20460 <main@@Base+0xd188>
   2043c:	add	r1, r2, #1
   20440:	sub	r0, r8, r1
   20444:	cmp	r0, #2
   20448:	blt	20728 <main@@Base+0xd450>
   2044c:	ldrb	r0, [r1]
   20450:	cmp	r0, #32
   20454:	bls	20718 <main@@Base+0xd440>
   20458:	mov	r2, r1
   2045c:	b	20738 <main@@Base+0xd460>
   20460:	mov	r1, r2
   20464:	mov	r0, r5
   20468:	mov	r2, r8
   2046c:	mov	r3, #4
   20470:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   20474:	b	20734 <main@@Base+0xd45c>
   20478:	bne	20488 <main@@Base+0xd1b0>
   2047c:	ldrb	r0, [r1, #2]!
   20480:	cmp	r0, #32
   20484:	bhi	204a0 <main@@Base+0xd1c8>
   20488:	ldr	r0, [sp, #44]	; 0x2c
   2048c:	mov	r1, r2
   20490:	mov	r2, r8
   20494:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   20498:	mov	lr, r5
   2049c:	mov	r1, r0
   204a0:	cmp	sl, r1
   204a4:	beq	204dc <main@@Base+0xd204>
   204a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   204ac:	mov	r2, #3
   204b0:	mov	r3, #0
   204b4:	str	r2, [sp]
   204b8:	mov	r2, r8
   204bc:	str	r0, [sp, #4]
   204c0:	movw	r0, #61584	; 0xf090
   204c4:	movt	r0, #1
   204c8:	str	r0, [sp, #8]
   204cc:	ldr	r5, [sp, #44]	; 0x2c
   204d0:	mov	r0, r5
   204d4:	bl	2ff7c <flatcc_json_parser_union_vector@@Base>
   204d8:	b	205c8 <main@@Base+0xd2f0>
   204dc:	lsr	r1, r9, #16
   204e0:	movw	r2, #27000	; 0x6978
   204e4:	movw	r0, #28786	; 0x7072
   204e8:	orr	r1, r1, r4, lsl #16
   204ec:	movt	r2, #25958	; 0x6566
   204f0:	eor	r0, r0, r4, lsr #16
   204f4:	eor	r1, r1, r2
   204f8:	orrs	r0, r1, r0
   204fc:	bne	20550 <main@@Base+0xd278>
   20500:	ldr	r5, [sp, #44]	; 0x2c
   20504:	ldr	r9, [sp, #40]	; 0x28
   20508:	cmp	lr, #7
   2050c:	mov	r1, sl
   20510:	blt	2087c <main@@Base+0xd5a4>
   20514:	ldr	r1, [sp, #32]
   20518:	mov	r2, sl
   2051c:	ldrb	r0, [r2, #6]!
   20520:	ldr	r1, [r1]
   20524:	cmp	r1, #0
   20528:	beq	205d0 <main@@Base+0xd2f8>
   2052c:	cmp	r0, #33	; 0x21
   20530:	bcc	20540 <main@@Base+0xd268>
   20534:	cmp	r0, #58	; 0x3a
   20538:	mov	r1, sl
   2053c:	bne	2087c <main@@Base+0xd5a4>
   20540:	ldr	r0, [sp, #32]
   20544:	mov	r1, #0
   20548:	str	r1, [r0]
   2054c:	b	205e0 <main@@Base+0xd308>
   20550:	movw	r0, #30313	; 0x7669
   20554:	ldr	r5, [sp, #44]	; 0x2c
   20558:	and	r1, r9, #-16777216	; 0xff000000
   2055c:	movt	r0, #28015	; 0x6d6f
   20560:	eor	r1, r1, #1694498816	; 0x65000000
   20564:	eor	r0, r4, r0
   20568:	orrs	r0, r1, r0
   2056c:	bne	205b8 <main@@Base+0xd2e0>
   20570:	cmp	lr, #6
   20574:	mov	r4, sl
   20578:	blt	208e0 <main@@Base+0xd608>
   2057c:	ldr	r2, [sp, #32]
   20580:	mov	r1, sl
   20584:	ldrb	r0, [r1, #5]!
   20588:	ldr	r2, [r2]
   2058c:	cmp	r2, #0
   20590:	beq	20600 <main@@Base+0xd328>
   20594:	cmp	r0, #33	; 0x21
   20598:	bcc	205a8 <main@@Base+0xd2d0>
   2059c:	cmp	r0, #58	; 0x3a
   205a0:	mov	r4, sl
   205a4:	bne	208e0 <main@@Base+0xd608>
   205a8:	ldr	r0, [sp, #32]
   205ac:	mov	r2, #0
   205b0:	str	r2, [r0]
   205b4:	b	20610 <main@@Base+0xd338>
   205b8:	mov	r0, r5
   205bc:	mov	r1, sl
   205c0:	mov	r2, r8
   205c4:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   205c8:	ldr	r9, [sp, #40]	; 0x28
   205cc:	b	2079c <main@@Base+0xd4c4>
   205d0:	cmp	r0, #34	; 0x22
   205d4:	mov	r1, sl
   205d8:	bne	2087c <main@@Base+0xd5a4>
   205dc:	add	r2, sl, #7
   205e0:	sub	r0, r8, r2
   205e4:	cmp	r0, #2
   205e8:	blt	20644 <main@@Base+0xd36c>
   205ec:	ldrb	r0, [r2]
   205f0:	cmp	r0, #32
   205f4:	bls	20630 <main@@Base+0xd358>
   205f8:	mov	r1, r2
   205fc:	b	20658 <main@@Base+0xd380>
   20600:	cmp	r0, #34	; 0x22
   20604:	mov	r4, sl
   20608:	bne	208e0 <main@@Base+0xd608>
   2060c:	add	r1, sl, #6
   20610:	sub	r0, r8, r1
   20614:	cmp	r0, #2
   20618:	blt	206b8 <main@@Base+0xd3e0>
   2061c:	ldrb	r0, [r1]
   20620:	cmp	r0, #32
   20624:	bls	206a4 <main@@Base+0xd3cc>
   20628:	mov	r4, r1
   2062c:	b	206c8 <main@@Base+0xd3f0>
   20630:	bne	20644 <main@@Base+0xd36c>
   20634:	mov	r1, r2
   20638:	ldrb	r0, [r1, #1]!
   2063c:	cmp	r0, #32
   20640:	bhi	20658 <main@@Base+0xd380>
   20644:	mov	r1, r2
   20648:	mov	r0, r5
   2064c:	mov	r2, r8
   20650:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   20654:	mov	r1, r0
   20658:	cmp	r1, r8
   2065c:	beq	20690 <main@@Base+0xd3b8>
   20660:	ldrb	r0, [r1]
   20664:	cmp	r0, #58	; 0x3a
   20668:	bne	20690 <main@@Base+0xd3b8>
   2066c:	add	r2, r1, #1
   20670:	sub	r0, r8, r2
   20674:	cmp	r0, #2
   20678:	blt	20868 <main@@Base+0xd590>
   2067c:	ldrb	r0, [r2]
   20680:	cmp	r0, #32
   20684:	bls	20858 <main@@Base+0xd580>
   20688:	mov	r1, r2
   2068c:	b	2087c <main@@Base+0xd5a4>
   20690:	mov	r0, r5
   20694:	mov	r2, r8
   20698:	mov	r3, #4
   2069c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   206a0:	b	20878 <main@@Base+0xd5a0>
   206a4:	bne	206b8 <main@@Base+0xd3e0>
   206a8:	mov	r4, r1
   206ac:	ldrb	r0, [r4, #1]!
   206b0:	cmp	r0, #32
   206b4:	bhi	206c8 <main@@Base+0xd3f0>
   206b8:	mov	r0, r5
   206bc:	mov	r2, r8
   206c0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   206c4:	mov	r4, r0
   206c8:	cmp	r4, r8
   206cc:	beq	20700 <main@@Base+0xd428>
   206d0:	ldrb	r0, [r4]
   206d4:	cmp	r0, #58	; 0x3a
   206d8:	bne	20700 <main@@Base+0xd428>
   206dc:	add	r1, r4, #1
   206e0:	sub	r0, r8, r1
   206e4:	cmp	r0, #2
   206e8:	blt	208d0 <main@@Base+0xd5f8>
   206ec:	ldrb	r0, [r1]
   206f0:	cmp	r0, #32
   206f4:	bls	208c0 <main@@Base+0xd5e8>
   206f8:	mov	r4, r1
   206fc:	b	208e0 <main@@Base+0xd608>
   20700:	mov	r0, r5
   20704:	mov	r1, r4
   20708:	mov	r2, r8
   2070c:	mov	r3, #4
   20710:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   20714:	b	208dc <main@@Base+0xd604>
   20718:	bne	20728 <main@@Base+0xd450>
   2071c:	ldrb	r0, [r2, #2]!
   20720:	cmp	r0, #32
   20724:	bhi	20738 <main@@Base+0xd460>
   20728:	mov	r0, r5
   2072c:	mov	r2, r8
   20730:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   20734:	mov	r2, r0
   20738:	cmp	r4, r2
   2073c:	beq	2078c <main@@Base+0xd4b4>
   20740:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20744:	mov	r1, #3
   20748:	mov	r3, #0
   2074c:	str	r1, [sp]
   20750:	mov	r1, r2
   20754:	mov	r2, r8
   20758:	str	r0, [sp, #4]
   2075c:	movw	r0, #16932	; 0x4224
   20760:	movt	r0, #4
   20764:	str	r0, [sp, #8]
   20768:	movw	r0, #61584	; 0xf090
   2076c:	movt	r0, #1
   20770:	str	r0, [sp, #12]
   20774:	movw	r0, #15936	; 0x3e40
   20778:	movt	r0, #2
   2077c:	str	r0, [sp, #16]
   20780:	mov	r0, r5
   20784:	bl	3043c <flatcc_json_parser_union_type_vector@@Base>
   20788:	b	2079c <main@@Base+0xd4c4>
   2078c:	mov	r0, r5
   20790:	mov	r1, r4
   20794:	mov	r2, r8
   20798:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   2079c:	mov	r4, r0
   207a0:	sub	r0, r8, r4
   207a4:	cmp	r0, #2
   207a8:	blt	207d4 <main@@Base+0xd4fc>
   207ac:	ldrb	r0, [r4]
   207b0:	cmp	r0, #32
   207b4:	bls	207c0 <main@@Base+0xd4e8>
   207b8:	mov	r2, r4
   207bc:	b	207e8 <main@@Base+0xd510>
   207c0:	bne	207d4 <main@@Base+0xd4fc>
   207c4:	mov	r2, r4
   207c8:	ldrb	r0, [r2, #1]!
   207cc:	cmp	r0, #32
   207d0:	bhi	207e8 <main@@Base+0xd510>
   207d4:	mov	r0, r5
   207d8:	mov	r1, r4
   207dc:	mov	r2, r8
   207e0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   207e4:	mov	r2, r0
   207e8:	cmp	r2, r8
   207ec:	beq	21f48 <main@@Base+0xec70>
   207f0:	ldrb	r0, [r2]
   207f4:	cmp	r0, #44	; 0x2c
   207f8:	bne	21f50 <main@@Base+0xec78>
   207fc:	add	r1, r2, #1
   20800:	sub	r0, r8, r1
   20804:	cmp	r0, #2
   20808:	blt	20830 <main@@Base+0xd558>
   2080c:	ldrb	r0, [r1]
   20810:	cmp	r0, #32
   20814:	bls	20820 <main@@Base+0xd548>
   20818:	mov	r2, r1
   2081c:	b	20840 <main@@Base+0xd568>
   20820:	bne	20830 <main@@Base+0xd558>
   20824:	ldrb	r0, [r2, #2]!
   20828:	cmp	r0, #32
   2082c:	bhi	20840 <main@@Base+0xd568>
   20830:	mov	r0, r5
   20834:	mov	r2, r8
   20838:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2083c:	mov	r2, r0
   20840:	cmp	r2, r8
   20844:	beq	21fa0 <main@@Base+0xecc8>
   20848:	ldrb	r0, [r2]
   2084c:	cmp	r0, #125	; 0x7d
   20850:	bne	200d4 <main@@Base+0xcdfc>
   20854:	b	21f58 <main@@Base+0xec80>
   20858:	bne	20868 <main@@Base+0xd590>
   2085c:	ldrb	r0, [r1, #2]!
   20860:	cmp	r0, #32
   20864:	bhi	2087c <main@@Base+0xd5a4>
   20868:	mov	r1, r2
   2086c:	mov	r0, r5
   20870:	mov	r2, r8
   20874:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   20878:	mov	r1, r0
   2087c:	cmp	sl, r1
   20880:	beq	20964 <main@@Base+0xd68c>
   20884:	mov	r0, r5
   20888:	mov	r2, r8
   2088c:	sub	r3, fp, #32
   20890:	bl	23e54 <main@@Base+0x10b7c>
   20894:	ldr	r6, [fp, #-32]	; 0xffffffe0
   20898:	mov	r4, r0
   2089c:	cmp	r6, #0
   208a0:	beq	22074 <main@@Base+0xed9c>
   208a4:	ldr	r0, [r5]
   208a8:	mov	r1, #0
   208ac:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   208b0:	cmp	r0, #0
   208b4:	beq	22074 <main@@Base+0xed9c>
   208b8:	str	r6, [r0]
   208bc:	b	207a0 <main@@Base+0xd4c8>
   208c0:	bne	208d0 <main@@Base+0xd5f8>
   208c4:	ldrb	r0, [r4, #2]!
   208c8:	cmp	r0, #32
   208cc:	bhi	208e0 <main@@Base+0xd608>
   208d0:	mov	r0, r5
   208d4:	mov	r2, r8
   208d8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   208dc:	mov	r4, r0
   208e0:	ldr	r9, [sp, #40]	; 0x28
   208e4:	cmp	sl, r4
   208e8:	beq	20964 <main@@Base+0xd68c>
   208ec:	mov	r0, #0
   208f0:	mov	r1, #10
   208f4:	str	r0, [fp, #-32]	; 0xffffffe0
   208f8:	ldr	r0, [r5]
   208fc:	bl	2a60c <flatcc_builder_start_table@@Base>
   20900:	cmp	r0, #0
   20904:	bne	2205c <main@@Base+0xed84>
   20908:	add	r0, sp, #48	; 0x30
   2090c:	mov	r1, r4
   20910:	mov	r2, r8
   20914:	mov	r3, #5
   20918:	str	r0, [sp]
   2091c:	mov	r0, r5
   20920:	bl	2f8a4 <flatcc_json_parser_prepare_unions@@Base>
   20924:	cmp	r0, r8
   20928:	beq	2205c <main@@Base+0xed84>
   2092c:	cmp	r4, r8
   20930:	beq	20970 <main@@Base+0xd698>
   20934:	ldrb	r0, [r4]
   20938:	cmp	r0, #123	; 0x7b
   2093c:	bne	20970 <main@@Base+0xd698>
   20940:	add	r1, r4, #1
   20944:	sub	r0, r8, r1
   20948:	cmp	r0, #2
   2094c:	blt	209f4 <main@@Base+0xd71c>
   20950:	ldrb	r0, [r1]
   20954:	cmp	r0, #32
   20958:	bls	209e4 <main@@Base+0xd70c>
   2095c:	mov	r4, r1
   20960:	b	20a04 <main@@Base+0xd72c>
   20964:	mov	r0, r5
   20968:	mov	r1, sl
   2096c:	b	20794 <main@@Base+0xd4bc>
   20970:	mov	r0, r5
   20974:	mov	r1, r4
   20978:	mov	r2, r8
   2097c:	mov	r3, #21
   20980:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   20984:	mov	r4, r0
   20988:	ldr	r0, [sp, #28]
   2098c:	ldr	r0, [r0]
   20990:	cmp	r0, #0
   20994:	bne	2205c <main@@Base+0xed84>
   20998:	ldr	r3, [sp, #48]	; 0x30
   2099c:	mov	r0, r5
   209a0:	mov	r1, r4
   209a4:	mov	r2, r8
   209a8:	bl	2f928 <flatcc_json_parser_finalize_unions@@Base>
   209ac:	mov	r4, r0
   209b0:	ldr	r0, [r5]
   209b4:	bl	2af9c <flatcc_builder_end_table@@Base>
   209b8:	cmp	r0, #0
   209bc:	str	r0, [fp, #-32]	; 0xffffffe0
   209c0:	beq	2205c <main@@Base+0xed84>
   209c4:	mov	r7, r0
   209c8:	ldr	r0, [r5]
   209cc:	mov	r1, #1
   209d0:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   209d4:	cmp	r0, #0
   209d8:	beq	22074 <main@@Base+0xed9c>
   209dc:	str	r7, [r0]
   209e0:	b	207a0 <main@@Base+0xd4c8>
   209e4:	bne	209f4 <main@@Base+0xd71c>
   209e8:	ldrb	r0, [r4, #2]!
   209ec:	cmp	r0, #32
   209f0:	bhi	20a04 <main@@Base+0xd72c>
   209f4:	mov	r0, r5
   209f8:	mov	r2, r8
   209fc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   20a00:	mov	r4, r0
   20a04:	cmp	r4, r8
   20a08:	mov	r2, r8
   20a0c:	beq	20a50 <main@@Base+0xd778>
   20a10:	ldrb	r0, [r4]
   20a14:	cmp	r0, #125	; 0x7d
   20a18:	bne	20a4c <main@@Base+0xd774>
   20a1c:	add	r1, r4, #1
   20a20:	sub	r0, r8, r1
   20a24:	cmp	r0, #2
   20a28:	blt	21f38 <main@@Base+0xec60>
   20a2c:	ldrb	r0, [r1]
   20a30:	cmp	r0, #32
   20a34:	bhi	21ef0 <main@@Base+0xec18>
   20a38:	bne	21f38 <main@@Base+0xec60>
   20a3c:	ldrb	r0, [r4, #2]!
   20a40:	cmp	r0, #32
   20a44:	bhi	20988 <main@@Base+0xd6b0>
   20a48:	b	21f38 <main@@Base+0xec60>
   20a4c:	mov	r2, r4
   20a50:	cmp	r2, r8
   20a54:	mov	r9, r8
   20a58:	beq	20aac <main@@Base+0xd7d4>
   20a5c:	ldrb	r0, [r2]
   20a60:	cmp	r0, #46	; 0x2e
   20a64:	beq	20a80 <main@@Base+0xd7a8>
   20a68:	cmp	r0, #34	; 0x22
   20a6c:	bne	20a9c <main@@Base+0xd7c4>
   20a70:	ldr	r0, [sp, #32]
   20a74:	mov	r1, #0
   20a78:	add	r9, r2, #1
   20a7c:	b	20aa8 <main@@Base+0xd7d0>
   20a80:	ldr	r0, [sp, #44]	; 0x2c
   20a84:	mov	r1, r2
   20a88:	mov	r2, r8
   20a8c:	mov	r3, #5
   20a90:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   20a94:	mov	r9, r0
   20a98:	b	20aac <main@@Base+0xd7d4>
   20a9c:	ldr	r0, [sp, #32]
   20aa0:	mov	r1, #1
   20aa4:	mov	r9, r2
   20aa8:	str	r1, [r0]
   20aac:	sub	ip, r8, r9
   20ab0:	mov	r0, #8
   20ab4:	cmp	ip, #8
   20ab8:	movcc	r0, ip
   20abc:	and	r0, r0, #15
   20ac0:	sub	r7, r0, #1
   20ac4:	cmp	r7, #7
   20ac8:	bhi	21934 <main@@Base+0xe65c>
   20acc:	add	r5, pc, #32
   20ad0:	mov	r1, #0
   20ad4:	mov	lr, #0
   20ad8:	mov	r8, #0
   20adc:	mov	r6, #0
   20ae0:	mov	r3, #0
   20ae4:	mov	r4, #0
   20ae8:	mov	r0, #0
   20aec:	mov	r2, #0
   20af0:	ldr	pc, [r5, r7, lsl #2]
   20af4:	andeq	r0, r2, r8, asr fp
   20af8:	andeq	r0, r2, r0, asr fp
   20afc:	andeq	r0, r2, r8, asr #22
   20b00:	andeq	r0, r2, r0, asr #22
   20b04:	andeq	r0, r2, r4, lsr fp
   20b08:	andeq	r0, r2, r8, lsr #22
   20b0c:	andeq	r0, r2, r8, lsl fp
   20b10:	andeq	r0, r2, r4, lsl fp
   20b14:	ldrb	lr, [r9, #7]
   20b18:	ldrb	r0, [r9, #6]
   20b1c:	mov	r8, r1
   20b20:	orr	r0, lr, r0, lsl #8
   20b24:	mov	r1, r0
   20b28:	ldrb	r0, [r9, #5]
   20b2c:	mov	r6, r8
   20b30:	orr	r1, r1, r0, lsl #16
   20b34:	ldrb	r0, [r9, #4]
   20b38:	mov	r3, r6
   20b3c:	orr	r1, r1, r0, lsl #24
   20b40:	ldrb	r0, [r9, #3]
   20b44:	orr	r4, r0, r3
   20b48:	ldrb	r0, [r9, #2]
   20b4c:	orr	r0, r4, r0, lsl #8
   20b50:	ldrb	r2, [r9, #1]
   20b54:	orr	r2, r0, r2, lsl #16
   20b58:	ldrb	r0, [r9]
   20b5c:	orr	r2, r2, r0, lsl #24
   20b60:	movw	r0, #29797	; 0x7465
   20b64:	movt	r0, #24931	; 0x6163
   20b68:	subs	r0, r1, r0
   20b6c:	movw	r0, #24946	; 0x6172
   20b70:	movt	r0, #25448	; 0x6368
   20b74:	sbcs	r0, r2, r0
   20b78:	bcs	20cd0 <main@@Base+0xd9f8>
   20b7c:	movw	r0, #29817	; 0x7479
   20b80:	movw	r3, #28005	; 0x6d65
   20b84:	ldr	r8, [sp, #36]	; 0x24
   20b88:	movt	r0, #28511	; 0x6f5f
   20b8c:	movt	r3, #25441	; 0x6361
   20b90:	eor	r0, r1, r0
   20b94:	eor	r3, r2, r3
   20b98:	orrs	r0, r0, r3
   20b9c:	beq	20fdc <main@@Base+0xdd04>
   20ba0:	movw	r0, #28265	; 0x6e69
   20ba4:	movw	r7, #29793	; 0x7461
   20ba8:	movt	r0, #26479	; 0x676f
   20bac:	movt	r7, #24942	; 0x616e
   20bb0:	eor	r0, r1, r0
   20bb4:	eor	r2, r2, r7
   20bb8:	orrs	r0, r0, r2
   20bbc:	bne	21068 <main@@Base+0xdd90>
   20bc0:	add	sl, r9, #8
   20bc4:	mov	r0, #8
   20bc8:	sub	ip, r8, sl
   20bcc:	cmp	ip, #8
   20bd0:	movcc	r0, ip
   20bd4:	and	r0, r0, #15
   20bd8:	sub	r6, r0, #1
   20bdc:	cmp	r6, #7
   20be0:	bhi	21d50 <main@@Base+0xea78>
   20be4:	add	r2, pc, #28
   20be8:	mov	r5, #0
   20bec:	mov	lr, #0
   20bf0:	mov	r1, #0
   20bf4:	mov	r3, #0
   20bf8:	mov	r4, #0
   20bfc:	mov	r7, #0
   20c00:	mov	r0, #0
   20c04:	ldr	pc, [r2, r6, lsl #2]
   20c08:	andeq	r0, r2, r4, ror #24
   20c0c:	andeq	r0, r2, ip, asr ip
   20c10:	andeq	r0, r2, r4, asr ip
   20c14:	andeq	r0, r2, ip, asr #24
   20c18:	andeq	r0, r2, r0, asr #24
   20c1c:	andeq	r0, r2, r0, lsr ip
   20c20:	andeq	r0, r2, r8, lsr #24
   20c24:	andeq	r0, r2, r8, lsr #24
   20c28:	ldrb	r0, [r9, #14]
   20c2c:	lsl	lr, r0, #8
   20c30:	ldrb	r0, [r9, #13]
   20c34:	mov	r1, r5
   20c38:	orr	r0, lr, r0, lsl #16
   20c3c:	mov	r5, r0
   20c40:	ldrb	r0, [r9, #12]
   20c44:	mov	r3, r1
   20c48:	orr	r5, r5, r0, lsl #24
   20c4c:	ldrb	r0, [r9, #11]
   20c50:	orr	r4, r0, r3
   20c54:	ldrb	r0, [r9, #10]
   20c58:	orr	r7, r4, r0, lsl #8
   20c5c:	ldrb	r0, [r9, #9]
   20c60:	orr	r0, r7, r0, lsl #16
   20c64:	ldrb	r1, [sl]
   20c68:	movw	r3, #25856	; 0x6500
   20c6c:	bic	r2, r5, #255	; 0xff
   20c70:	movt	r3, #31088	; 0x7970
   20c74:	eor	r2, r2, r3
   20c78:	orr	r1, r0, r1, lsl #24
   20c7c:	ldr	r0, [sp, #24]
   20c80:	eor	r0, r1, r0
   20c84:	orrs	r0, r2, r0
   20c88:	bne	211c4 <main@@Base+0xdeec>
   20c8c:	ldr	r8, [sp, #36]	; 0x24
   20c90:	cmp	ip, #8
   20c94:	blt	21d50 <main@@Base+0xea78>
   20c98:	ldr	r2, [sp, #32]
   20c9c:	mov	r1, r9
   20ca0:	ldrb	r0, [r1, #15]!
   20ca4:	ldr	r2, [r2]
   20ca8:	cmp	r2, #0
   20cac:	beq	21380 <main@@Base+0xe0a8>
   20cb0:	cmp	r0, #33	; 0x21
   20cb4:	bcc	20cc0 <main@@Base+0xd9e8>
   20cb8:	cmp	r0, #58	; 0x3a
   20cbc:	bne	21d50 <main@@Base+0xea78>
   20cc0:	ldr	r0, [sp, #32]
   20cc4:	mov	r2, #0
   20cc8:	str	r2, [r0]
   20ccc:	b	2138c <main@@Base+0xe0b4>
   20cd0:	movw	r0, #26720	; 0x6860
   20cd4:	ldr	r8, [sp, #36]	; 0x24
   20cd8:	movt	r0, #24419	; 0x5f63
   20cdc:	subs	r0, r0, r1
   20ce0:	movw	r0, #26990	; 0x696e
   20ce4:	movt	r0, #28001	; 0x6d61
   20ce8:	sbcs	r0, r0, r2
   20cec:	bcc	20e24 <main@@Base+0xdb4c>
   20cf0:	movw	r0, #29797	; 0x7465
   20cf4:	movt	r0, #24931	; 0x6163
   20cf8:	eor	r0, r1, r0
   20cfc:	movw	r1, #24946	; 0x6172
   20d00:	movt	r1, #25448	; 0x6368
   20d04:	eor	r1, r2, r1
   20d08:	orrs	r0, r0, r1
   20d0c:	bne	21934 <main@@Base+0xe65c>
   20d10:	add	sl, r9, #8
   20d14:	mov	r0, #8
   20d18:	sub	ip, r8, sl
   20d1c:	cmp	ip, #8
   20d20:	movcc	r0, ip
   20d24:	and	r0, r0, #15
   20d28:	sub	r6, r0, #1
   20d2c:	cmp	r6, #7
   20d30:	bhi	21d50 <main@@Base+0xea78>
   20d34:	add	r2, pc, #28
   20d38:	mov	r1, #0
   20d3c:	mov	lr, #0
   20d40:	mov	r5, #0
   20d44:	mov	r3, #0
   20d48:	mov	r4, #0
   20d4c:	mov	r7, #0
   20d50:	mov	r0, #0
   20d54:	ldr	pc, [r2, r6, lsl #2]
   20d58:			; <UNDEFINED> instruction: 0x00020db4
   20d5c:	andeq	r0, r2, ip, lsr #27
   20d60:	andeq	r0, r2, r4, lsr #27
   20d64:	muleq	r2, ip, sp
   20d68:	muleq	r2, r0, sp
   20d6c:	andeq	r0, r2, r0, lsl #27
   20d70:	andeq	r0, r2, r8, ror sp
   20d74:	andeq	r0, r2, r8, ror sp
   20d78:	ldrb	r0, [r9, #14]
   20d7c:	lsl	lr, r0, #8
   20d80:	ldrb	r0, [r9, #13]
   20d84:	mov	r5, r1
   20d88:	orr	r0, lr, r0, lsl #16
   20d8c:	mov	r1, r0
   20d90:	ldrb	r0, [r9, #12]
   20d94:	mov	r3, r5
   20d98:	orr	r1, r1, r0, lsl #24
   20d9c:	ldrb	r0, [r9, #11]
   20da0:	orr	r4, r0, r3
   20da4:	ldrb	r0, [r9, #10]
   20da8:	orr	r7, r4, r0, lsl #8
   20dac:	ldrb	r0, [r9, #9]
   20db0:	orr	r0, r7, r0, lsl #16
   20db4:	movw	r2, #25856	; 0x6500
   20db8:	bic	r1, r1, #255	; 0xff
   20dbc:	movt	r2, #31088	; 0x7970
   20dc0:	eor	r1, r1, r2
   20dc4:	ldrb	r2, [sl]
   20dc8:	orr	r0, r0, r2, lsl #24
   20dcc:	movw	r2, #24436	; 0x5f74
   20dd0:	movt	r2, #29299	; 0x7273
   20dd4:	eor	r2, r0, r2
   20dd8:	orrs	r1, r1, r2
   20ddc:	bne	2121c <main@@Base+0xdf44>
   20de0:	ldr	r8, [sp, #36]	; 0x24
   20de4:	cmp	ip, #8
   20de8:	blt	21d50 <main@@Base+0xea78>
   20dec:	ldr	r2, [sp, #32]
   20df0:	mov	r1, r9
   20df4:	ldrb	r0, [r1, #15]!
   20df8:	ldr	r2, [r2]
   20dfc:	cmp	r2, #0
   20e00:	beq	213fc <main@@Base+0xe124>
   20e04:	cmp	r0, #33	; 0x21
   20e08:	bcc	20e14 <main@@Base+0xdb3c>
   20e0c:	cmp	r0, #58	; 0x3a
   20e10:	bne	21d50 <main@@Base+0xea78>
   20e14:	ldr	r0, [sp, #32]
   20e18:	mov	r2, #0
   20e1c:	str	r2, [r0]
   20e20:	b	21408 <main@@Base+0xe130>
   20e24:	movw	r0, #26979	; 0x6963
   20e28:	movw	r3, #25701	; 0x6465
   20e2c:	movt	r0, #24427	; 0x5f6b
   20e30:	movt	r3, #29545	; 0x7369
   20e34:	eor	r0, r1, r0
   20e38:	eor	r3, r2, r3
   20e3c:	orrs	r0, r0, r3
   20e40:	beq	210c0 <main@@Base+0xdde8>
   20e44:	movw	r0, #26721	; 0x6861
   20e48:	movt	r0, #24419	; 0x5f63
   20e4c:	eor	r0, r1, r0
   20e50:	movw	r1, #26990	; 0x696e
   20e54:	movt	r1, #28001	; 0x6d61
   20e58:	eor	r1, r2, r1
   20e5c:	orrs	r0, r0, r1
   20e60:	bne	21934 <main@@Base+0xe65c>
   20e64:	add	r7, r9, #8
   20e68:	mov	r0, #8
   20e6c:	sub	lr, r8, r7
   20e70:	cmp	lr, #8
   20e74:	movcc	r0, lr
   20e78:	and	r0, r0, #15
   20e7c:	sub	r6, r0, #1
   20e80:	cmp	r6, #7
   20e84:	bhi	21dcc <main@@Base+0xeaf4>
   20e88:	str	r7, [sp, #20]
   20e8c:	add	r5, pc, #32
   20e90:	mov	r1, #0
   20e94:	mov	ip, #0
   20e98:	mov	sl, #0
   20e9c:	mov	r7, #0
   20ea0:	mov	r3, #0
   20ea4:	mov	r4, #0
   20ea8:	mov	r2, #0
   20eac:	mov	r0, #0
   20eb0:	ldr	pc, [r5, r6, lsl #2]
   20eb4:	andeq	r0, r2, r8, lsl pc
   20eb8:	andeq	r0, r2, r0, lsl pc
   20ebc:	andeq	r0, r2, r8, lsl #30
   20ec0:	andeq	r0, r2, r0, lsl #30
   20ec4:	strdeq	r0, [r2], -r4
   20ec8:	andeq	r0, r2, r8, ror #29
   20ecc:	ldrdeq	r0, [r2], -r8
   20ed0:	ldrdeq	r0, [r2], -r4
   20ed4:	ldrb	ip, [r9, #15]
   20ed8:	ldrb	r0, [r9, #14]
   20edc:	mov	sl, r1
   20ee0:	orr	r0, ip, r0, lsl #8
   20ee4:	mov	r1, r0
   20ee8:	ldrb	r0, [r9, #13]
   20eec:	mov	r7, sl
   20ef0:	orr	r1, r1, r0, lsl #16
   20ef4:	ldrb	r0, [r9, #12]
   20ef8:	mov	r3, r7
   20efc:	orr	r1, r1, r0, lsl #24
   20f00:	ldrb	r0, [r9, #11]
   20f04:	orr	r4, r0, r3
   20f08:	ldrb	r0, [r9, #10]
   20f0c:	orr	r2, r4, r0, lsl #8
   20f10:	ldrb	r0, [r9, #9]
   20f14:	orr	r0, r2, r0, lsl #16
   20f18:	ldr	r7, [sp, #20]
   20f1c:	movw	r2, #24436	; 0x5f74
   20f20:	movt	r2, #25970	; 0x6572
   20f24:	eor	r2, r1, r2
   20f28:	ldrb	r3, [r7]
   20f2c:	orr	r0, r0, r3, lsl #24
   20f30:	movw	r3, #25460	; 0x6374
   20f34:	movt	r3, #29281	; 0x7261
   20f38:	eor	r3, r0, r3
   20f3c:	orrs	r2, r2, r3
   20f40:	bne	21274 <main@@Base+0xdf9c>
   20f44:	ldr	r8, [sp, #36]	; 0x24
   20f48:	add	r7, r9, #16
   20f4c:	mov	r1, #8
   20f50:	sub	r0, r8, r7
   20f54:	cmp	r0, #8
   20f58:	movcc	r1, r0
   20f5c:	and	r2, r1, #15
   20f60:	sub	r1, r2, #3
   20f64:	cmp	r1, #6
   20f68:	bcs	213e0 <main@@Base+0xe108>
   20f6c:	ldrb	r1, [r9, #18]
   20f70:	lsl	r1, r1, #8
   20f74:	ldrb	r2, [r9, #17]
   20f78:	orr	r1, r1, r2, lsl #16
   20f7c:	ldrb	r2, [r7]
   20f80:	bic	r1, r1, #255	; 0xff
   20f84:	orr	r1, r1, r2, lsl #24
   20f88:	movw	r2, #25856	; 0x6500
   20f8c:	movt	r2, #31088	; 0x7970
   20f90:	teq	r1, r2
   20f94:	bne	21dcc <main@@Base+0xeaf4>
   20f98:	cmp	r0, #4
   20f9c:	blt	21dcc <main@@Base+0xeaf4>
   20fa0:	ldr	r2, [sp, #32]
   20fa4:	mov	r1, r9
   20fa8:	ldrb	r0, [r1, #19]!
   20fac:	ldr	r2, [r2]
   20fb0:	cmp	r2, #0
   20fb4:	beq	21728 <main@@Base+0xe450>
   20fb8:	ldr	r8, [sp, #36]	; 0x24
   20fbc:	cmp	r0, #33	; 0x21
   20fc0:	bcc	20fcc <main@@Base+0xdcf4>
   20fc4:	cmp	r0, #58	; 0x3a
   20fc8:	bne	21dcc <main@@Base+0xeaf4>
   20fcc:	ldr	r0, [sp, #32]
   20fd0:	mov	r2, #0
   20fd4:	str	r2, [r0]
   20fd8:	b	21738 <main@@Base+0xe460>
   20fdc:	add	r7, r9, #8
   20fe0:	mov	r1, #8
   20fe4:	sub	r0, r8, r7
   20fe8:	cmp	r0, #8
   20fec:	movcc	r1, r0
   20ff0:	and	r2, r1, #15
   20ff4:	sub	r1, r2, #2
   20ff8:	cmp	r1, #7
   20ffc:	bcs	212e4 <main@@Base+0xe00c>
   21000:	ldrb	r1, [r9, #9]
   21004:	lsl	r2, r1, #16
   21008:	mov	r1, #0
   2100c:	ldrb	r3, [r7]
   21010:	orr	r2, r2, r3, lsl #24
   21014:	movw	r3, #0
   21018:	movt	r3, #28773	; 0x7065
   2101c:	eor	r2, r2, r3
   21020:	orrs	r1, r1, r2
   21024:	bne	21dcc <main@@Base+0xeaf4>
   21028:	cmp	r0, #3
   2102c:	blt	21dcc <main@@Base+0xeaf4>
   21030:	ldr	r2, [sp, #32]
   21034:	mov	r1, r9
   21038:	ldrb	r0, [r1, #10]!
   2103c:	ldr	r2, [r2]
   21040:	cmp	r2, #0
   21044:	beq	213b0 <main@@Base+0xe0d8>
   21048:	cmp	r0, #33	; 0x21
   2104c:	bcc	21058 <main@@Base+0xdd80>
   21050:	cmp	r0, #58	; 0x3a
   21054:	bne	21dcc <main@@Base+0xeaf4>
   21058:	ldr	r0, [sp, #32]
   2105c:	mov	r2, #0
   21060:	str	r2, [r0]
   21064:	b	213bc <main@@Base+0xe0e4>
   21068:	and	r0, r1, #-16777216	; 0xff000000
   2106c:	eor	r0, r0, #1862270976	; 0x6f000000
   21070:	orrs	r0, r0, r3
   21074:	bne	21934 <main@@Base+0xe65c>
   21078:	cmp	ip, #6
   2107c:	mov	r1, r9
   21080:	blt	218f8 <main@@Base+0xe620>
   21084:	ldr	r1, [sp, #32]
   21088:	mov	r2, r9
   2108c:	ldrb	r0, [r2, #5]!
   21090:	ldr	r1, [r1]
   21094:	cmp	r1, #0
   21098:	beq	2134c <main@@Base+0xe074>
   2109c:	cmp	r0, #33	; 0x21
   210a0:	bcc	210b0 <main@@Base+0xddd8>
   210a4:	cmp	r0, #58	; 0x3a
   210a8:	mov	r1, r9
   210ac:	bne	218f8 <main@@Base+0xe620>
   210b0:	ldr	r0, [sp, #32]
   210b4:	mov	r1, #0
   210b8:	str	r1, [r0]
   210bc:	b	2135c <main@@Base+0xe084>
   210c0:	add	sl, r9, #8
   210c4:	mov	r1, #8
   210c8:	sub	r0, r8, sl
   210cc:	cmp	r0, #8
   210d0:	movcc	r1, r0
   210d4:	and	r1, r1, #15
   210d8:	sub	r3, r1, #1
   210dc:	cmp	r3, #7
   210e0:	bhi	21d50 <main@@Base+0xea78>
   210e4:	add	r6, pc, #24
   210e8:	mov	ip, #0
   210ec:	mov	r2, #0
   210f0:	mov	r1, #0
   210f4:	mov	r4, #0
   210f8:	mov	r5, #0
   210fc:	mov	r7, #0
   21100:	ldr	pc, [r6, r3, lsl #2]
   21104:	andeq	r1, r2, r4, asr r1
   21108:	andeq	r1, r2, ip, asr #2
   2110c:	andeq	r1, r2, r4, asr #2
   21110:	andeq	r1, r2, ip, lsr r1
   21114:	andeq	r1, r2, ip, lsr #2
   21118:	andeq	r1, r2, r4, lsr #2
   2111c:	andeq	r1, r2, r4, lsr #2
   21120:	andeq	r1, r2, r4, lsr #2
   21124:	ldrb	r1, [r9, #13]
   21128:	lsl	r2, r1, #16
   2112c:	ldrb	r1, [r9, #12]
   21130:	orr	r2, r2, r1, lsl #24
   21134:	mov	r1, ip
   21138:	mov	ip, r2
   2113c:	ldrb	r2, [r9, #11]
   21140:	orr	r4, r2, r1
   21144:	ldrb	r1, [r9, #10]
   21148:	orr	r5, r4, r1, lsl #8
   2114c:	ldrb	r1, [r9, #9]
   21150:	orr	r7, r5, r1, lsl #16
   21154:	ldrb	r1, [sl]
   21158:	lsr	r3, ip, #16
   2115c:	movw	r2, #27487	; 0x6b5f
   21160:	orr	r1, r7, r1, lsl #24
   21164:	movw	r7, #28773	; 0x7065
   21168:	orr	r3, r3, r1, lsl #16
   2116c:	movt	r7, #29817	; 0x7479
   21170:	eor	r2, r2, r1, lsr #16
   21174:	eor	r3, r3, r7
   21178:	orrs	r2, r3, r2
   2117c:	bne	212f8 <main@@Base+0xe020>
   21180:	ldr	r8, [sp, #36]	; 0x24
   21184:	cmp	r0, #7
   21188:	blt	21d50 <main@@Base+0xea78>
   2118c:	ldr	r2, [sp, #32]
   21190:	mov	r1, r9
   21194:	ldrb	r0, [r1, #14]!
   21198:	ldr	r2, [r2]
   2119c:	cmp	r2, #0
   211a0:	beq	2142c <main@@Base+0xe154>
   211a4:	cmp	r0, #33	; 0x21
   211a8:	bcc	211b4 <main@@Base+0xdedc>
   211ac:	cmp	r0, #58	; 0x3a
   211b0:	bne	21d50 <main@@Base+0xea78>
   211b4:	ldr	r0, [sp, #32]
   211b8:	mov	r2, #0
   211bc:	str	r2, [r0]
   211c0:	b	21438 <main@@Base+0xe160>
   211c4:	ldr	r8, [sp, #36]	; 0x24
   211c8:	movw	r0, #0
   211cc:	bfc	r1, #0, #16
   211d0:	movt	r0, #29556	; 0x7374
   211d4:	teq	r1, r0
   211d8:	bne	21d50 <main@@Base+0xea78>
   211dc:	cmp	ip, #3
   211e0:	blt	21d50 <main@@Base+0xea78>
   211e4:	ldr	r2, [sp, #32]
   211e8:	mov	r1, r9
   211ec:	ldrb	r0, [r1, #10]!
   211f0:	ldr	r2, [r2]
   211f4:	cmp	r2, #0
   211f8:	beq	21460 <main@@Base+0xe188>
   211fc:	cmp	r0, #33	; 0x21
   21200:	bcc	2120c <main@@Base+0xdf34>
   21204:	cmp	r0, #58	; 0x3a
   21208:	bne	21d50 <main@@Base+0xea78>
   2120c:	ldr	r0, [sp, #32]
   21210:	mov	r2, #0
   21214:	str	r2, [r0]
   21218:	b	2146c <main@@Base+0xe194>
   2121c:	ldr	r8, [sp, #36]	; 0x24
   21220:	movw	r1, #0
   21224:	bfc	r0, #0, #16
   21228:	movt	r1, #29299	; 0x7273
   2122c:	teq	r0, r1
   21230:	bne	21d50 <main@@Base+0xea78>
   21234:	cmp	ip, #3
   21238:	blt	21d50 <main@@Base+0xea78>
   2123c:	ldr	r2, [sp, #32]
   21240:	mov	r1, r9
   21244:	ldrb	r0, [r1, #10]!
   21248:	ldr	r2, [r2]
   2124c:	cmp	r2, #0
   21250:	beq	21494 <main@@Base+0xe1bc>
   21254:	cmp	r0, #33	; 0x21
   21258:	bcc	21264 <main@@Base+0xdf8c>
   2125c:	cmp	r0, #58	; 0x3a
   21260:	bne	21d50 <main@@Base+0xea78>
   21264:	ldr	r0, [sp, #32]
   21268:	mov	r2, #0
   2126c:	str	r2, [r0]
   21270:	b	214a0 <main@@Base+0xe1c8>
   21274:	movw	r2, #29281	; 0x7261
   21278:	lsr	r1, r1, #16
   2127c:	ldr	r8, [sp, #36]	; 0x24
   21280:	eor	r2, r2, r0, lsr #16
   21284:	orr	r0, r1, r0, lsl #16
   21288:	movw	r1, #25970	; 0x6572
   2128c:	movt	r1, #25460	; 0x6374
   21290:	eor	r0, r0, r1
   21294:	orrs	r0, r0, r2
   21298:	bne	21dcc <main@@Base+0xeaf4>
   2129c:	cmp	lr, #7
   212a0:	blt	21dcc <main@@Base+0xeaf4>
   212a4:	ldr	r2, [sp, #32]
   212a8:	mov	r1, r9
   212ac:	ldrb	r0, [r1, #14]!
   212b0:	ldr	r2, [r2]
   212b4:	cmp	r2, #0
   212b8:	beq	21640 <main@@Base+0xe368>
   212bc:	ldr	r8, [sp, #36]	; 0x24
   212c0:	ldr	r7, [sp, #20]
   212c4:	cmp	r0, #33	; 0x21
   212c8:	bcc	212d4 <main@@Base+0xdffc>
   212cc:	cmp	r0, #58	; 0x3a
   212d0:	bne	21dcc <main@@Base+0xeaf4>
   212d4:	ldr	r0, [sp, #32]
   212d8:	mov	r2, #0
   212dc:	str	r2, [r0]
   212e0:	b	21654 <main@@Base+0xe37c>
   212e4:	cmp	r2, #1
   212e8:	mov	r1, #0
   212ec:	mov	r2, #0
   212f0:	beq	2100c <main@@Base+0xdd34>
   212f4:	b	21dcc <main@@Base+0xeaf4>
   212f8:	ldr	r8, [sp, #36]	; 0x24
   212fc:	and	r1, r1, #-16777216	; 0xff000000
   21300:	teq	r1, #1795162112	; 0x6b000000
   21304:	bne	21d50 <main@@Base+0xea78>
   21308:	cmp	r0, #2
   2130c:	blt	21d50 <main@@Base+0xea78>
   21310:	ldr	r2, [sp, #32]
   21314:	mov	r1, r9
   21318:	ldrb	r0, [r1, #9]!
   2131c:	ldr	r2, [r2]
   21320:	cmp	r2, #0
   21324:	beq	21678 <main@@Base+0xe3a0>
   21328:	ldr	r8, [sp, #36]	; 0x24
   2132c:	cmp	r0, #33	; 0x21
   21330:	bcc	2133c <main@@Base+0xe064>
   21334:	cmp	r0, #58	; 0x3a
   21338:	bne	21d50 <main@@Base+0xea78>
   2133c:	ldr	r0, [sp, #32]
   21340:	mov	r2, #0
   21344:	str	r2, [r0]
   21348:	b	21688 <main@@Base+0xe3b0>
   2134c:	cmp	r0, #34	; 0x22
   21350:	mov	r1, r9
   21354:	bne	218f8 <main@@Base+0xe620>
   21358:	add	r2, r9, #6
   2135c:	sub	r0, r8, r2
   21360:	cmp	r0, #2
   21364:	blt	214dc <main@@Base+0xe204>
   21368:	ldrb	r0, [r2]
   2136c:	cmp	r0, #32
   21370:	bls	214c4 <main@@Base+0xe1ec>
   21374:	ldr	r8, [sp, #36]	; 0x24
   21378:	mov	r1, r2
   2137c:	b	214f0 <main@@Base+0xe218>
   21380:	cmp	r0, #34	; 0x22
   21384:	bne	21d50 <main@@Base+0xea78>
   21388:	add	r1, r9, #16
   2138c:	sub	r0, r8, r1
   21390:	cmp	r0, #2
   21394:	blt	21558 <main@@Base+0xe280>
   21398:	ldrb	r0, [r1]
   2139c:	cmp	r0, #32
   213a0:	bls	21540 <main@@Base+0xe268>
   213a4:	ldr	r8, [sp, #36]	; 0x24
   213a8:	mov	r2, r1
   213ac:	b	21568 <main@@Base+0xe290>
   213b0:	cmp	r0, #34	; 0x22
   213b4:	bne	21dcc <main@@Base+0xeaf4>
   213b8:	add	r1, r9, #11
   213bc:	sub	r0, r8, r1
   213c0:	cmp	r0, #2
   213c4:	blt	215d4 <main@@Base+0xe2fc>
   213c8:	ldrb	r0, [r1]
   213cc:	cmp	r0, #32
   213d0:	bls	215bc <main@@Base+0xe2e4>
   213d4:	ldr	r8, [sp, #36]	; 0x24
   213d8:	mov	r2, r1
   213dc:	b	215e4 <main@@Base+0xe30c>
   213e0:	mov	r1, #0
   213e4:	cmp	r2, #1
   213e8:	beq	21638 <main@@Base+0xe360>
   213ec:	ldr	r8, [sp, #36]	; 0x24
   213f0:	cmp	r2, #2
   213f4:	beq	20f74 <main@@Base+0xdc9c>
   213f8:	b	21dcc <main@@Base+0xeaf4>
   213fc:	cmp	r0, #34	; 0x22
   21400:	bne	21d50 <main@@Base+0xea78>
   21404:	add	r1, r9, #16
   21408:	sub	r0, r8, r1
   2140c:	cmp	r0, #2
   21410:	blt	216c4 <main@@Base+0xe3ec>
   21414:	ldrb	r0, [r1]
   21418:	cmp	r0, #32
   2141c:	bls	216ac <main@@Base+0xe3d4>
   21420:	ldr	r8, [sp, #36]	; 0x24
   21424:	mov	r2, r1
   21428:	b	216d4 <main@@Base+0xe3fc>
   2142c:	cmp	r0, #34	; 0x22
   21430:	bne	21d50 <main@@Base+0xea78>
   21434:	add	r1, r9, #15
   21438:	ldr	r4, [sp, #36]	; 0x24
   2143c:	sub	r0, r4, r1
   21440:	cmp	r0, #2
   21444:	blt	21774 <main@@Base+0xe49c>
   21448:	ldrb	r0, [r1]
   2144c:	cmp	r0, #32
   21450:	bls	2175c <main@@Base+0xe484>
   21454:	ldr	r4, [sp, #36]	; 0x24
   21458:	mov	r2, r1
   2145c:	b	21784 <main@@Base+0xe4ac>
   21460:	cmp	r0, #34	; 0x22
   21464:	bne	21d50 <main@@Base+0xea78>
   21468:	add	r1, r9, #11
   2146c:	ldr	r4, [sp, #36]	; 0x24
   21470:	sub	r0, r4, r1
   21474:	cmp	r0, #2
   21478:	blt	217f0 <main@@Base+0xe518>
   2147c:	ldrb	r0, [r1]
   21480:	cmp	r0, #32
   21484:	bls	217d8 <main@@Base+0xe500>
   21488:	ldr	r4, [sp, #36]	; 0x24
   2148c:	mov	r2, r1
   21490:	b	21800 <main@@Base+0xe528>
   21494:	cmp	r0, #34	; 0x22
   21498:	bne	21d50 <main@@Base+0xea78>
   2149c:	add	r1, r9, #11
   214a0:	ldr	r0, [sp, #36]	; 0x24
   214a4:	sub	r0, r0, r1
   214a8:	cmp	r0, #2
   214ac:	blt	21868 <main@@Base+0xe590>
   214b0:	ldrb	r0, [r1]
   214b4:	cmp	r0, #32
   214b8:	bls	21854 <main@@Base+0xe57c>
   214bc:	mov	r2, r1
   214c0:	b	21878 <main@@Base+0xe5a0>
   214c4:	ldr	r8, [sp, #36]	; 0x24
   214c8:	bne	214dc <main@@Base+0xe204>
   214cc:	mov	r1, r2
   214d0:	ldrb	r0, [r1, #1]!
   214d4:	cmp	r0, #32
   214d8:	bhi	214f0 <main@@Base+0xe218>
   214dc:	ldr	r0, [sp, #44]	; 0x2c
   214e0:	mov	r1, r2
   214e4:	mov	r2, r8
   214e8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   214ec:	mov	r1, r0
   214f0:	cmp	r1, r8
   214f4:	beq	2152c <main@@Base+0xe254>
   214f8:	ldrb	r0, [r1]
   214fc:	cmp	r0, #58	; 0x3a
   21500:	bne	2152c <main@@Base+0xe254>
   21504:	add	r2, r1, #1
   21508:	sub	r0, r8, r2
   2150c:	cmp	r0, #2
   21510:	blt	218e4 <main@@Base+0xe60c>
   21514:	ldrb	r0, [r2]
   21518:	cmp	r0, #32
   2151c:	bls	218d0 <main@@Base+0xe5f8>
   21520:	ldr	r8, [sp, #36]	; 0x24
   21524:	mov	r1, r2
   21528:	b	218f8 <main@@Base+0xe620>
   2152c:	ldr	r0, [sp, #44]	; 0x2c
   21530:	mov	r2, r8
   21534:	mov	r3, #4
   21538:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2153c:	b	218f4 <main@@Base+0xe61c>
   21540:	ldr	r8, [sp, #36]	; 0x24
   21544:	bne	21558 <main@@Base+0xe280>
   21548:	mov	r2, r1
   2154c:	ldrb	r0, [r2, #1]!
   21550:	cmp	r0, #32
   21554:	bhi	21568 <main@@Base+0xe290>
   21558:	ldr	r0, [sp, #44]	; 0x2c
   2155c:	mov	r2, r8
   21560:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21564:	mov	r2, r0
   21568:	cmp	r2, r8
   2156c:	beq	215a4 <main@@Base+0xe2cc>
   21570:	ldrb	r0, [r2]
   21574:	cmp	r0, #58	; 0x3a
   21578:	bne	215a4 <main@@Base+0xe2cc>
   2157c:	add	r1, r2, #1
   21580:	sub	r0, r8, r1
   21584:	cmp	r0, #2
   21588:	blt	21954 <main@@Base+0xe67c>
   2158c:	ldrb	r0, [r1]
   21590:	cmp	r0, #32
   21594:	bls	21940 <main@@Base+0xe668>
   21598:	ldr	r8, [sp, #36]	; 0x24
   2159c:	mov	r2, r1
   215a0:	b	21964 <main@@Base+0xe68c>
   215a4:	ldr	r0, [sp, #44]	; 0x2c
   215a8:	mov	r1, r2
   215ac:	mov	r2, r8
   215b0:	mov	r3, #4
   215b4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   215b8:	b	21960 <main@@Base+0xe688>
   215bc:	ldr	r8, [sp, #36]	; 0x24
   215c0:	bne	215d4 <main@@Base+0xe2fc>
   215c4:	mov	r2, r1
   215c8:	ldrb	r0, [r2, #1]!
   215cc:	cmp	r0, #32
   215d0:	bhi	215e4 <main@@Base+0xe30c>
   215d4:	ldr	r0, [sp, #44]	; 0x2c
   215d8:	mov	r2, r8
   215dc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   215e0:	mov	r2, r0
   215e4:	cmp	r2, r8
   215e8:	beq	21620 <main@@Base+0xe348>
   215ec:	ldrb	r0, [r2]
   215f0:	cmp	r0, #58	; 0x3a
   215f4:	bne	21620 <main@@Base+0xe348>
   215f8:	add	r1, r2, #1
   215fc:	sub	r0, r8, r1
   21600:	cmp	r0, #2
   21604:	blt	219a8 <main@@Base+0xe6d0>
   21608:	ldrb	r0, [r1]
   2160c:	cmp	r0, #32
   21610:	bls	21994 <main@@Base+0xe6bc>
   21614:	ldr	r8, [sp, #36]	; 0x24
   21618:	mov	r2, r1
   2161c:	b	219b8 <main@@Base+0xe6e0>
   21620:	ldr	r0, [sp, #44]	; 0x2c
   21624:	mov	r1, r2
   21628:	mov	r2, r8
   2162c:	mov	r3, #4
   21630:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   21634:	b	219b4 <main@@Base+0xe6dc>
   21638:	ldr	r8, [sp, #36]	; 0x24
   2163c:	b	20f7c <main@@Base+0xdca4>
   21640:	ldr	r8, [sp, #36]	; 0x24
   21644:	ldr	r7, [sp, #20]
   21648:	cmp	r0, #34	; 0x22
   2164c:	bne	21dcc <main@@Base+0xeaf4>
   21650:	add	r1, r9, #15
   21654:	ldr	r0, [sp, #36]	; 0x24
   21658:	sub	r0, r0, r1
   2165c:	cmp	r0, #2
   21660:	blt	219fc <main@@Base+0xe724>
   21664:	ldrb	r0, [r1]
   21668:	cmp	r0, #32
   2166c:	bls	219e8 <main@@Base+0xe710>
   21670:	mov	r2, r1
   21674:	b	21a0c <main@@Base+0xe734>
   21678:	ldr	r8, [sp, #36]	; 0x24
   2167c:	cmp	r0, #34	; 0x22
   21680:	bne	21d50 <main@@Base+0xea78>
   21684:	add	r1, r9, #10
   21688:	ldr	r0, [sp, #36]	; 0x24
   2168c:	sub	r0, r0, r1
   21690:	cmp	r0, #2
   21694:	blt	21a78 <main@@Base+0xe7a0>
   21698:	ldrb	r0, [r1]
   2169c:	cmp	r0, #32
   216a0:	bls	21a64 <main@@Base+0xe78c>
   216a4:	mov	r2, r1
   216a8:	b	21a88 <main@@Base+0xe7b0>
   216ac:	ldr	r8, [sp, #36]	; 0x24
   216b0:	bne	216c4 <main@@Base+0xe3ec>
   216b4:	mov	r2, r1
   216b8:	ldrb	r0, [r2, #1]!
   216bc:	cmp	r0, #32
   216c0:	bhi	216d4 <main@@Base+0xe3fc>
   216c4:	ldr	r0, [sp, #44]	; 0x2c
   216c8:	mov	r2, r8
   216cc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   216d0:	mov	r2, r0
   216d4:	cmp	r2, r8
   216d8:	beq	21710 <main@@Base+0xe438>
   216dc:	ldrb	r0, [r2]
   216e0:	cmp	r0, #58	; 0x3a
   216e4:	bne	21710 <main@@Base+0xe438>
   216e8:	add	r1, r2, #1
   216ec:	sub	r0, r8, r1
   216f0:	cmp	r0, #2
   216f4:	blt	21af4 <main@@Base+0xe81c>
   216f8:	ldrb	r0, [r1]
   216fc:	cmp	r0, #32
   21700:	bls	21ae0 <main@@Base+0xe808>
   21704:	ldr	r8, [sp, #36]	; 0x24
   21708:	mov	r2, r1
   2170c:	b	21b04 <main@@Base+0xe82c>
   21710:	ldr	r0, [sp, #44]	; 0x2c
   21714:	mov	r1, r2
   21718:	mov	r2, r8
   2171c:	mov	r3, #4
   21720:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   21724:	b	21b00 <main@@Base+0xe828>
   21728:	ldr	r8, [sp, #36]	; 0x24
   2172c:	cmp	r0, #34	; 0x22
   21730:	bne	21dcc <main@@Base+0xeaf4>
   21734:	add	r1, r9, #20
   21738:	ldr	r0, [sp, #36]	; 0x24
   2173c:	sub	r0, r0, r1
   21740:	cmp	r0, #2
   21744:	blt	21b70 <main@@Base+0xe898>
   21748:	ldrb	r0, [r1]
   2174c:	cmp	r0, #32
   21750:	bls	21b5c <main@@Base+0xe884>
   21754:	mov	r2, r1
   21758:	b	21b80 <main@@Base+0xe8a8>
   2175c:	ldr	r4, [sp, #36]	; 0x24
   21760:	bne	21774 <main@@Base+0xe49c>
   21764:	mov	r2, r1
   21768:	ldrb	r0, [r2, #1]!
   2176c:	cmp	r0, #32
   21770:	bhi	21784 <main@@Base+0xe4ac>
   21774:	ldr	r0, [sp, #44]	; 0x2c
   21778:	mov	r2, r4
   2177c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21780:	mov	r2, r0
   21784:	cmp	r2, r4
   21788:	beq	217c0 <main@@Base+0xe4e8>
   2178c:	ldrb	r0, [r2]
   21790:	cmp	r0, #58	; 0x3a
   21794:	bne	217c0 <main@@Base+0xe4e8>
   21798:	ldr	r0, [sp, #36]	; 0x24
   2179c:	add	r1, r2, #1
   217a0:	sub	r0, r0, r1
   217a4:	cmp	r0, #2
   217a8:	blt	21c24 <main@@Base+0xe94c>
   217ac:	ldrb	r0, [r1]
   217b0:	cmp	r0, #32
   217b4:	bls	21c14 <main@@Base+0xe93c>
   217b8:	mov	r2, r1
   217bc:	b	21c34 <main@@Base+0xe95c>
   217c0:	mov	r1, r2
   217c4:	ldr	r0, [sp, #44]	; 0x2c
   217c8:	ldr	r2, [sp, #36]	; 0x24
   217cc:	mov	r3, #4
   217d0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   217d4:	b	21c30 <main@@Base+0xe958>
   217d8:	ldr	r4, [sp, #36]	; 0x24
   217dc:	bne	217f0 <main@@Base+0xe518>
   217e0:	mov	r2, r1
   217e4:	ldrb	r0, [r2, #1]!
   217e8:	cmp	r0, #32
   217ec:	bhi	21800 <main@@Base+0xe528>
   217f0:	ldr	r0, [sp, #44]	; 0x2c
   217f4:	mov	r2, r4
   217f8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   217fc:	mov	r2, r0
   21800:	cmp	r2, r4
   21804:	beq	2183c <main@@Base+0xe564>
   21808:	ldrb	r0, [r2]
   2180c:	cmp	r0, #58	; 0x3a
   21810:	bne	2183c <main@@Base+0xe564>
   21814:	ldr	r0, [sp, #36]	; 0x24
   21818:	add	r1, r2, #1
   2181c:	sub	r0, r0, r1
   21820:	cmp	r0, #2
   21824:	blt	21be8 <main@@Base+0xe910>
   21828:	ldrb	r0, [r1]
   2182c:	cmp	r0, #32
   21830:	bls	21bd8 <main@@Base+0xe900>
   21834:	mov	r2, r1
   21838:	b	21bf8 <main@@Base+0xe920>
   2183c:	mov	r1, r2
   21840:	ldr	r0, [sp, #44]	; 0x2c
   21844:	ldr	r2, [sp, #36]	; 0x24
   21848:	mov	r3, #4
   2184c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   21850:	b	21bf4 <main@@Base+0xe91c>
   21854:	bne	21868 <main@@Base+0xe590>
   21858:	mov	r2, r1
   2185c:	ldrb	r0, [r2, #1]!
   21860:	cmp	r0, #32
   21864:	bhi	21878 <main@@Base+0xe5a0>
   21868:	ldr	r0, [sp, #44]	; 0x2c
   2186c:	ldr	r2, [sp, #36]	; 0x24
   21870:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21874:	mov	r2, r0
   21878:	ldr	r0, [sp, #36]	; 0x24
   2187c:	cmp	r2, r0
   21880:	beq	218b8 <main@@Base+0xe5e0>
   21884:	ldrb	r0, [r2]
   21888:	cmp	r0, #58	; 0x3a
   2188c:	bne	218b8 <main@@Base+0xe5e0>
   21890:	ldr	r0, [sp, #36]	; 0x24
   21894:	add	r1, r2, #1
   21898:	sub	r0, r0, r1
   2189c:	cmp	r0, #2
   218a0:	blt	21c78 <main@@Base+0xe9a0>
   218a4:	ldrb	r0, [r1]
   218a8:	cmp	r0, #32
   218ac:	bls	21c68 <main@@Base+0xe990>
   218b0:	mov	r2, r1
   218b4:	b	21c88 <main@@Base+0xe9b0>
   218b8:	mov	r1, r2
   218bc:	ldr	r0, [sp, #44]	; 0x2c
   218c0:	ldr	r2, [sp, #36]	; 0x24
   218c4:	mov	r3, #4
   218c8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   218cc:	b	21c84 <main@@Base+0xe9ac>
   218d0:	ldr	r8, [sp, #36]	; 0x24
   218d4:	bne	218e4 <main@@Base+0xe60c>
   218d8:	ldrb	r0, [r1, #2]!
   218dc:	cmp	r0, #32
   218e0:	bhi	218f8 <main@@Base+0xe620>
   218e4:	ldr	r0, [sp, #44]	; 0x2c
   218e8:	mov	r1, r2
   218ec:	mov	r2, r8
   218f0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   218f4:	mov	r1, r0
   218f8:	cmp	r9, r1
   218fc:	beq	21934 <main@@Base+0xe65c>
   21900:	ldr	r0, [sp, #48]	; 0x30
   21904:	mov	r2, #7
   21908:	mov	r3, #3
   2190c:	str	r2, [sp]
   21910:	mov	r2, r8
   21914:	str	r0, [sp, #4]
   21918:	movw	r0, #29400	; 0x72d8
   2191c:	movt	r0, #2
   21920:	str	r0, [sp, #8]
   21924:	ldr	r5, [sp, #44]	; 0x2c
   21928:	mov	r0, r5
   2192c:	bl	2f99c <flatcc_json_parser_union@@Base>
   21930:	b	21de0 <main@@Base+0xeb08>
   21934:	ldr	r5, [sp, #44]	; 0x2c
   21938:	mov	r1, r9
   2193c:	b	21dd4 <main@@Base+0xeafc>
   21940:	ldr	r8, [sp, #36]	; 0x24
   21944:	bne	21954 <main@@Base+0xe67c>
   21948:	ldrb	r0, [r2, #2]!
   2194c:	cmp	r0, #32
   21950:	bhi	21964 <main@@Base+0xe68c>
   21954:	ldr	r0, [sp, #44]	; 0x2c
   21958:	mov	r2, r8
   2195c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21960:	mov	r2, r0
   21964:	cmp	sl, r2
   21968:	beq	21d50 <main@@Base+0xea78>
   2196c:	ldr	r0, [sp, #48]	; 0x30
   21970:	mov	r1, #3
   21974:	mov	r3, #1
   21978:	str	r1, [sp]
   2197c:	mov	r1, r2
   21980:	mov	r2, r8
   21984:	str	r0, [sp, #4]
   21988:	movw	r0, #17068	; 0x42ac
   2198c:	movt	r0, #4
   21990:	b	21dac <main@@Base+0xead4>
   21994:	ldr	r8, [sp, #36]	; 0x24
   21998:	bne	219a8 <main@@Base+0xe6d0>
   2199c:	ldrb	r0, [r2, #2]!
   219a0:	cmp	r0, #32
   219a4:	bhi	219b8 <main@@Base+0xe6e0>
   219a8:	ldr	r0, [sp, #44]	; 0x2c
   219ac:	mov	r2, r8
   219b0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   219b4:	mov	r2, r0
   219b8:	cmp	r7, r2
   219bc:	beq	21dcc <main@@Base+0xeaf4>
   219c0:	ldr	r0, [sp, #48]	; 0x30
   219c4:	mov	r1, #7
   219c8:	mov	r3, #3
   219cc:	str	r1, [sp]
   219d0:	mov	r1, r2
   219d4:	mov	r2, r8
   219d8:	str	r0, [sp, #4]
   219dc:	movw	r0, #17084	; 0x42bc
   219e0:	movt	r0, #4
   219e4:	b	21dac <main@@Base+0xead4>
   219e8:	bne	219fc <main@@Base+0xe724>
   219ec:	mov	r2, r1
   219f0:	ldrb	r0, [r2, #1]!
   219f4:	cmp	r0, #32
   219f8:	bhi	21a0c <main@@Base+0xe734>
   219fc:	ldr	r0, [sp, #44]	; 0x2c
   21a00:	ldr	r2, [sp, #36]	; 0x24
   21a04:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21a08:	mov	r2, r0
   21a0c:	ldr	r0, [sp, #36]	; 0x24
   21a10:	cmp	r2, r0
   21a14:	beq	21a4c <main@@Base+0xe774>
   21a18:	ldrb	r0, [r2]
   21a1c:	cmp	r0, #58	; 0x3a
   21a20:	bne	21a4c <main@@Base+0xe774>
   21a24:	ldr	r0, [sp, #36]	; 0x24
   21a28:	add	r1, r2, #1
   21a2c:	sub	r0, r0, r1
   21a30:	cmp	r0, #2
   21a34:	blt	21cdc <main@@Base+0xea04>
   21a38:	ldrb	r0, [r1]
   21a3c:	cmp	r0, #32
   21a40:	bls	21ccc <main@@Base+0xe9f4>
   21a44:	mov	r2, r1
   21a48:	b	21cec <main@@Base+0xea14>
   21a4c:	mov	r1, r2
   21a50:	ldr	r0, [sp, #44]	; 0x2c
   21a54:	ldr	r2, [sp, #36]	; 0x24
   21a58:	mov	r3, #4
   21a5c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   21a60:	b	21ce8 <main@@Base+0xea10>
   21a64:	bne	21a78 <main@@Base+0xe7a0>
   21a68:	mov	r2, r1
   21a6c:	ldrb	r0, [r2, #1]!
   21a70:	cmp	r0, #32
   21a74:	bhi	21a88 <main@@Base+0xe7b0>
   21a78:	ldr	r0, [sp, #44]	; 0x2c
   21a7c:	ldr	r2, [sp, #36]	; 0x24
   21a80:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21a84:	mov	r2, r0
   21a88:	ldr	r0, [sp, #36]	; 0x24
   21a8c:	cmp	r2, r0
   21a90:	beq	21ac8 <main@@Base+0xe7f0>
   21a94:	ldrb	r0, [r2]
   21a98:	cmp	r0, #58	; 0x3a
   21a9c:	bne	21ac8 <main@@Base+0xe7f0>
   21aa0:	ldr	r0, [sp, #36]	; 0x24
   21aa4:	add	r1, r2, #1
   21aa8:	sub	r0, r0, r1
   21aac:	cmp	r0, #2
   21ab0:	blt	21d1c <main@@Base+0xea44>
   21ab4:	ldrb	r0, [r1]
   21ab8:	cmp	r0, #32
   21abc:	bls	21d0c <main@@Base+0xea34>
   21ac0:	mov	r2, r1
   21ac4:	b	21d2c <main@@Base+0xea54>
   21ac8:	mov	r1, r2
   21acc:	ldr	r0, [sp, #44]	; 0x2c
   21ad0:	ldr	r2, [sp, #36]	; 0x24
   21ad4:	mov	r3, #4
   21ad8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   21adc:	b	21d28 <main@@Base+0xea50>
   21ae0:	ldr	r8, [sp, #36]	; 0x24
   21ae4:	bne	21af4 <main@@Base+0xe81c>
   21ae8:	ldrb	r0, [r2, #2]!
   21aec:	cmp	r0, #32
   21af0:	bhi	21b04 <main@@Base+0xe82c>
   21af4:	ldr	r0, [sp, #44]	; 0x2c
   21af8:	mov	r2, r8
   21afc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21b00:	mov	r2, r0
   21b04:	cmp	sl, r2
   21b08:	beq	21d50 <main@@Base+0xea78>
   21b0c:	ldr	r0, [sp, #48]	; 0x30
   21b10:	mov	r1, #9
   21b14:	mov	r3, #4
   21b18:	str	r1, [sp]
   21b1c:	mov	r1, r2
   21b20:	mov	r2, r8
   21b24:	str	r0, [sp, #4]
   21b28:	movw	r0, #17100	; 0x42cc
   21b2c:	movt	r0, #4
   21b30:	str	r0, [sp, #8]
   21b34:	movw	r0, #29400	; 0x72d8
   21b38:	movt	r0, #2
   21b3c:	str	r0, [sp, #12]
   21b40:	movw	r0, #33120	; 0x8160
   21b44:	movt	r0, #2
   21b48:	str	r0, [sp, #16]
   21b4c:	ldr	r5, [sp, #44]	; 0x2c
   21b50:	mov	r0, r5
   21b54:	bl	3043c <flatcc_json_parser_union_type_vector@@Base>
   21b58:	b	21de0 <main@@Base+0xeb08>
   21b5c:	bne	21b70 <main@@Base+0xe898>
   21b60:	mov	r2, r1
   21b64:	ldrb	r0, [r2, #1]!
   21b68:	cmp	r0, #32
   21b6c:	bhi	21b80 <main@@Base+0xe8a8>
   21b70:	ldr	r0, [sp, #44]	; 0x2c
   21b74:	ldr	r2, [sp, #36]	; 0x24
   21b78:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21b7c:	mov	r2, r0
   21b80:	ldr	r0, [sp, #36]	; 0x24
   21b84:	cmp	r2, r0
   21b88:	beq	21bc0 <main@@Base+0xe8e8>
   21b8c:	ldrb	r0, [r2]
   21b90:	cmp	r0, #58	; 0x3a
   21b94:	bne	21bc0 <main@@Base+0xe8e8>
   21b98:	ldr	r0, [sp, #36]	; 0x24
   21b9c:	add	r1, r2, #1
   21ba0:	sub	r0, r0, r1
   21ba4:	cmp	r0, #2
   21ba8:	blt	21d6c <main@@Base+0xea94>
   21bac:	ldrb	r0, [r1]
   21bb0:	cmp	r0, #32
   21bb4:	bls	21d5c <main@@Base+0xea84>
   21bb8:	mov	r2, r1
   21bbc:	b	21d7c <main@@Base+0xeaa4>
   21bc0:	mov	r1, r2
   21bc4:	ldr	r0, [sp, #44]	; 0x2c
   21bc8:	ldr	r2, [sp, #36]	; 0x24
   21bcc:	mov	r3, #4
   21bd0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   21bd4:	b	21d78 <main@@Base+0xeaa0>
   21bd8:	bne	21be8 <main@@Base+0xe910>
   21bdc:	ldrb	r0, [r2, #2]!
   21be0:	cmp	r0, #32
   21be4:	bhi	21bf8 <main@@Base+0xe920>
   21be8:	ldr	r0, [sp, #44]	; 0x2c
   21bec:	ldr	r2, [sp, #36]	; 0x24
   21bf0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21bf4:	mov	r2, r0
   21bf8:	ldr	r8, [sp, #36]	; 0x24
   21bfc:	cmp	sl, r2
   21c00:	beq	21d50 <main@@Base+0xea78>
   21c04:	ldr	r0, [sp, #48]	; 0x30
   21c08:	mov	r1, #3
   21c0c:	mov	r3, #1
   21c10:	b	21d44 <main@@Base+0xea6c>
   21c14:	bne	21c24 <main@@Base+0xe94c>
   21c18:	ldrb	r0, [r2, #2]!
   21c1c:	cmp	r0, #32
   21c20:	bhi	21c34 <main@@Base+0xe95c>
   21c24:	ldr	r0, [sp, #44]	; 0x2c
   21c28:	ldr	r2, [sp, #36]	; 0x24
   21c2c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21c30:	mov	r2, r0
   21c34:	ldr	r8, [sp, #36]	; 0x24
   21c38:	cmp	sl, r2
   21c3c:	beq	21d50 <main@@Base+0xea78>
   21c40:	ldr	r0, [sp, #48]	; 0x30
   21c44:	mov	r1, #5
   21c48:	mov	r3, #2
   21c4c:	str	r1, [sp]
   21c50:	mov	r1, r2
   21c54:	mov	r2, r8
   21c58:	str	r0, [sp, #4]
   21c5c:	movw	r0, #17132	; 0x42ec
   21c60:	movt	r0, #4
   21c64:	b	21dac <main@@Base+0xead4>
   21c68:	bne	21c78 <main@@Base+0xe9a0>
   21c6c:	ldrb	r0, [r2, #2]!
   21c70:	cmp	r0, #32
   21c74:	bhi	21c88 <main@@Base+0xe9b0>
   21c78:	ldr	r0, [sp, #44]	; 0x2c
   21c7c:	ldr	r2, [sp, #36]	; 0x24
   21c80:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21c84:	mov	r2, r0
   21c88:	ldr	r8, [sp, #36]	; 0x24
   21c8c:	cmp	sl, r2
   21c90:	beq	21d50 <main@@Base+0xea78>
   21c94:	ldr	r0, [sp, #48]	; 0x30
   21c98:	mov	r1, #9
   21c9c:	mov	r3, #4
   21ca0:	str	r1, [sp]
   21ca4:	mov	r1, r2
   21ca8:	mov	r2, r8
   21cac:	str	r0, [sp, #4]
   21cb0:	movw	r0, #29400	; 0x72d8
   21cb4:	movt	r0, #2
   21cb8:	str	r0, [sp, #8]
   21cbc:	ldr	r5, [sp, #44]	; 0x2c
   21cc0:	mov	r0, r5
   21cc4:	bl	2ff7c <flatcc_json_parser_union_vector@@Base>
   21cc8:	b	21de0 <main@@Base+0xeb08>
   21ccc:	bne	21cdc <main@@Base+0xea04>
   21cd0:	ldrb	r0, [r2, #2]!
   21cd4:	cmp	r0, #32
   21cd8:	bhi	21cec <main@@Base+0xea14>
   21cdc:	ldr	r0, [sp, #44]	; 0x2c
   21ce0:	ldr	r2, [sp, #36]	; 0x24
   21ce4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21ce8:	mov	r2, r0
   21cec:	ldr	r7, [sp, #20]
   21cf0:	ldr	r8, [sp, #36]	; 0x24
   21cf4:	cmp	r7, r2
   21cf8:	beq	21dcc <main@@Base+0xeaf4>
   21cfc:	ldr	r0, [sp, #48]	; 0x30
   21d00:	mov	r1, #1
   21d04:	mov	r3, #0
   21d08:	b	21d44 <main@@Base+0xea6c>
   21d0c:	bne	21d1c <main@@Base+0xea44>
   21d10:	ldrb	r0, [r2, #2]!
   21d14:	cmp	r0, #32
   21d18:	bhi	21d2c <main@@Base+0xea54>
   21d1c:	ldr	r0, [sp, #44]	; 0x2c
   21d20:	ldr	r2, [sp, #36]	; 0x24
   21d24:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21d28:	mov	r2, r0
   21d2c:	ldr	r8, [sp, #36]	; 0x24
   21d30:	cmp	sl, r2
   21d34:	beq	21d50 <main@@Base+0xea78>
   21d38:	ldr	r0, [sp, #48]	; 0x30
   21d3c:	mov	r1, #5
   21d40:	mov	r3, #2
   21d44:	str	r1, [sp]
   21d48:	mov	r1, r2
   21d4c:	b	21910 <main@@Base+0xe638>
   21d50:	ldr	r5, [sp, #44]	; 0x2c
   21d54:	mov	r1, sl
   21d58:	b	21dd4 <main@@Base+0xeafc>
   21d5c:	bne	21d6c <main@@Base+0xea94>
   21d60:	ldrb	r0, [r2, #2]!
   21d64:	cmp	r0, #32
   21d68:	bhi	21d7c <main@@Base+0xeaa4>
   21d6c:	ldr	r0, [sp, #44]	; 0x2c
   21d70:	ldr	r2, [sp, #36]	; 0x24
   21d74:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21d78:	mov	r2, r0
   21d7c:	ldr	r8, [sp, #36]	; 0x24
   21d80:	cmp	r7, r2
   21d84:	beq	21dcc <main@@Base+0xeaf4>
   21d88:	ldr	r0, [sp, #48]	; 0x30
   21d8c:	mov	r1, #1
   21d90:	mov	r3, #0
   21d94:	str	r1, [sp]
   21d98:	mov	r1, r2
   21d9c:	mov	r2, r8
   21da0:	str	r0, [sp, #4]
   21da4:	movw	r0, #17116	; 0x42dc
   21da8:	movt	r0, #4
   21dac:	str	r0, [sp, #8]
   21db0:	movw	r0, #29400	; 0x72d8
   21db4:	movt	r0, #2
   21db8:	str	r0, [sp, #12]
   21dbc:	ldr	r5, [sp, #44]	; 0x2c
   21dc0:	mov	r0, r5
   21dc4:	bl	2fadc <flatcc_json_parser_union_type@@Base>
   21dc8:	b	21de0 <main@@Base+0xeb08>
   21dcc:	ldr	r5, [sp, #44]	; 0x2c
   21dd0:	mov	r1, r7
   21dd4:	mov	r0, r5
   21dd8:	mov	r2, r8
   21ddc:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   21de0:	ldr	r9, [sp, #40]	; 0x28
   21de4:	mov	r1, r0
   21de8:	sub	r0, r8, r0
   21dec:	cmp	r0, #2
   21df0:	blt	21e1c <main@@Base+0xeb44>
   21df4:	ldrb	r0, [r1]
   21df8:	cmp	r0, #32
   21dfc:	bls	21e08 <main@@Base+0xeb30>
   21e00:	mov	r2, r1
   21e04:	b	21e2c <main@@Base+0xeb54>
   21e08:	bne	21e1c <main@@Base+0xeb44>
   21e0c:	mov	r2, r1
   21e10:	ldrb	r0, [r2, #1]!
   21e14:	cmp	r0, #32
   21e18:	bhi	21e2c <main@@Base+0xeb54>
   21e1c:	mov	r0, r5
   21e20:	mov	r2, r8
   21e24:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21e28:	mov	r2, r0
   21e2c:	cmp	r2, r8
   21e30:	beq	21eb8 <main@@Base+0xebe0>
   21e34:	ldrb	r0, [r2]
   21e38:	cmp	r0, #44	; 0x2c
   21e3c:	bne	21ec0 <main@@Base+0xebe8>
   21e40:	add	r1, r2, #1
   21e44:	sub	r0, r8, r1
   21e48:	cmp	r0, #2
   21e4c:	blt	21e74 <main@@Base+0xeb9c>
   21e50:	ldrb	r0, [r1]
   21e54:	cmp	r0, #32
   21e58:	bls	21e64 <main@@Base+0xeb8c>
   21e5c:	mov	r2, r1
   21e60:	b	21e84 <main@@Base+0xebac>
   21e64:	bne	21e74 <main@@Base+0xeb9c>
   21e68:	ldrb	r0, [r2, #2]!
   21e6c:	cmp	r0, #32
   21e70:	bhi	21e84 <main@@Base+0xebac>
   21e74:	mov	r0, r5
   21e78:	mov	r2, r8
   21e7c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21e80:	mov	r2, r0
   21e84:	cmp	r2, r8
   21e88:	beq	21ef8 <main@@Base+0xec20>
   21e8c:	ldrb	r0, [r2]
   21e90:	cmp	r0, #125	; 0x7d
   21e94:	bne	20a50 <main@@Base+0xd778>
   21e98:	add	r1, r2, #1
   21e9c:	sub	r0, r8, r1
   21ea0:	cmp	r0, #2
   21ea4:	blt	21f38 <main@@Base+0xec60>
   21ea8:	ldrb	r0, [r1]
   21eac:	cmp	r0, #32
   21eb0:	bls	21f24 <main@@Base+0xec4c>
   21eb4:	b	21ef0 <main@@Base+0xec18>
   21eb8:	mov	r4, r8
   21ebc:	b	20988 <main@@Base+0xd6b0>
   21ec0:	cmp	r0, #125	; 0x7d
   21ec4:	bne	21f04 <main@@Base+0xec2c>
   21ec8:	add	r1, r2, #1
   21ecc:	sub	r0, r8, r1
   21ed0:	cmp	r0, #2
   21ed4:	blt	21f38 <main@@Base+0xec60>
   21ed8:	ldrb	r0, [r1]
   21edc:	cmp	r0, #32
   21ee0:	bls	21f18 <main@@Base+0xec40>
   21ee4:	ldr	r8, [sp, #36]	; 0x24
   21ee8:	ldr	r5, [sp, #44]	; 0x2c
   21eec:	ldr	r9, [sp, #40]	; 0x28
   21ef0:	mov	r4, r1
   21ef4:	b	20988 <main@@Base+0xd6b0>
   21ef8:	mov	r0, r5
   21efc:	mov	r1, r8
   21f00:	b	21f0c <main@@Base+0xec34>
   21f04:	mov	r0, r5
   21f08:	mov	r1, r2
   21f0c:	mov	r2, r8
   21f10:	mov	r3, #10
   21f14:	b	20980 <main@@Base+0xd6a8>
   21f18:	ldr	r8, [sp, #36]	; 0x24
   21f1c:	ldr	r5, [sp, #44]	; 0x2c
   21f20:	ldr	r9, [sp, #40]	; 0x28
   21f24:	bne	21f38 <main@@Base+0xec60>
   21f28:	ldrb	r0, [r2, #2]!
   21f2c:	cmp	r0, #32
   21f30:	mov	r4, r2
   21f34:	bhi	20988 <main@@Base+0xd6b0>
   21f38:	mov	r0, r5
   21f3c:	mov	r2, r8
   21f40:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21f44:	b	20984 <main@@Base+0xd6ac>
   21f48:	mov	r4, r8
   21f4c:	b	21ffc <main@@Base+0xed24>
   21f50:	cmp	r0, #125	; 0x7d
   21f54:	bne	21fe4 <main@@Base+0xed0c>
   21f58:	add	r4, r2, #1
   21f5c:	sub	r0, r8, r4
   21f60:	cmp	r0, #2
   21f64:	blt	21f8c <main@@Base+0xecb4>
   21f68:	ldrb	r0, [r4]
   21f6c:	cmp	r0, #32
   21f70:	bhi	21ffc <main@@Base+0xed24>
   21f74:	bne	21f8c <main@@Base+0xecb4>
   21f78:	ldrb	r0, [r2, #2]!
   21f7c:	cmp	r0, #32
   21f80:	bls	21f8c <main@@Base+0xecb4>
   21f84:	mov	r4, r2
   21f88:	b	21ffc <main@@Base+0xed24>
   21f8c:	mov	r0, r5
   21f90:	mov	r1, r4
   21f94:	mov	r2, r8
   21f98:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   21f9c:	b	21ff8 <main@@Base+0xed20>
   21fa0:	mov	r0, r5
   21fa4:	mov	r1, r8
   21fa8:	b	21fec <main@@Base+0xed14>
   21fac:	mov	r0, r5
   21fb0:	mov	r1, r3
   21fb4:	b	2202c <main@@Base+0xed54>
   21fb8:	cmp	r0, #125	; 0x7d
   21fbc:	bne	22024 <main@@Base+0xed4c>
   21fc0:	add	r1, r2, #1
   21fc4:	sub	r0, r8, r1
   21fc8:	cmp	r0, #2
   21fcc:	blt	2204c <main@@Base+0xed74>
   21fd0:	ldrb	r0, [r1]
   21fd4:	cmp	r0, #32
   21fd8:	bls	22038 <main@@Base+0xed60>
   21fdc:	mov	r4, r1
   21fe0:	b	1f284 <main@@Base+0xbfac>
   21fe4:	mov	r0, r5
   21fe8:	mov	r1, r2
   21fec:	mov	r2, r8
   21ff0:	mov	r3, #10
   21ff4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   21ff8:	mov	r4, r0
   21ffc:	ldr	r0, [sp, #28]
   22000:	b	1f2d0 <main@@Base+0xbff8>
   22004:	bne	22014 <main@@Base+0xed3c>
   22008:	ldrb	r0, [r4, #2]!
   2200c:	cmp	r0, #32
   22010:	bhi	1f2cc <main@@Base+0xbff4>
   22014:	mov	r0, r5
   22018:	mov	r2, r8
   2201c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   22020:	b	1f2c8 <main@@Base+0xbff0>
   22024:	mov	r0, r5
   22028:	mov	r1, r2
   2202c:	mov	r2, r8
   22030:	mov	r3, #10
   22034:	b	1f27c <main@@Base+0xbfa4>
   22038:	bne	2204c <main@@Base+0xed74>
   2203c:	ldrb	r0, [r2, #2]!
   22040:	cmp	r0, #32
   22044:	mov	r4, r2
   22048:	bhi	1f284 <main@@Base+0xbfac>
   2204c:	mov	r0, r5
   22050:	mov	r2, r8
   22054:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   22058:	b	1f280 <main@@Base+0xbfa8>
   2205c:	mov	r0, r5
   22060:	mov	r1, r4
   22064:	mov	r2, r8
   22068:	mov	r3, #33	; 0x21
   2206c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22070:	mov	r4, r0
   22074:	mov	r0, r5
   22078:	mov	r1, r4
   2207c:	mov	r2, r8
   22080:	mov	r3, #33	; 0x21
   22084:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22088:	mov	r4, r0
   2208c:	ldr	r0, [r5, #24]
   22090:	cmp	r0, #0
   22094:	bne	220bc <main@@Base+0xede4>
   22098:	ldr	r0, [r9]
   2209c:	cmp	r0, #0
   220a0:	bne	220bc <main@@Base+0xede4>
   220a4:	mov	r0, r5
   220a8:	mov	r1, r4
   220ac:	mov	r2, r8
   220b0:	mov	r3, #33	; 0x21
   220b4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   220b8:	mov	r4, r0
   220bc:	mov	r0, r4
   220c0:	sub	sp, fp, #28
   220c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   220cc:	add	fp, sp, #28
   220d0:	sub	sp, sp, #20
   220d4:	mov	sl, r1
   220d8:	sub	r1, r2, r1
   220dc:	cmp	r1, #8
   220e0:	movcs	r1, #8
   220e4:	and	r1, r1, #15
   220e8:	sub	r5, r1, #1
   220ec:	cmp	r5, #7
   220f0:	bhi	222f4 <main@@Base+0xf01c>
   220f4:	str	r2, [sp, #16]
   220f8:	str	r0, [sp, #12]
   220fc:	add	r0, pc, #36	; 0x24
   22100:	mov	lr, r3
   22104:	mov	r8, #0
   22108:	mov	ip, #0
   2210c:	mov	r2, #0
   22110:	mov	r1, #0
   22114:	mov	r3, #0
   22118:	mov	r7, #0
   2211c:	mov	r6, #0
   22120:	mov	r4, #0
   22124:	ldr	pc, [r0, r5, lsl #2]
   22128:	andeq	r2, r2, ip, lsl #3
   2212c:	andeq	r2, r2, r4, lsl #3
   22130:	andeq	r2, r2, ip, ror r1
   22134:	andeq	r2, r2, r4, ror r1
   22138:	andeq	r2, r2, r8, ror #2
   2213c:	andeq	r2, r2, ip, asr r1
   22140:	andeq	r2, r2, ip, asr #2
   22144:	andeq	r2, r2, r8, asr #2
   22148:	ldrb	ip, [sl, #7]
   2214c:	ldrb	r0, [sl, #6]
   22150:	mov	r2, r8
   22154:	orr	r0, ip, r0, lsl #8
   22158:	mov	r8, r0
   2215c:	ldrb	r0, [sl, #5]
   22160:	mov	r1, r2
   22164:	orr	r8, r8, r0, lsl #16
   22168:	ldrb	r0, [sl, #4]
   2216c:	mov	r3, r1
   22170:	orr	r8, r8, r0, lsl #24
   22174:	ldrb	r0, [sl, #3]
   22178:	orr	r7, r0, r3
   2217c:	ldrb	r0, [sl, #2]
   22180:	orr	r6, r7, r0, lsl #8
   22184:	ldrb	r0, [sl, #1]
   22188:	orr	r4, r6, r0, lsl #16
   2218c:	ldrb	r0, [sl]
   22190:	ldr	r7, [fp, #12]
   22194:	ldr	r5, [fp, #8]
   22198:	movw	r1, #28275	; 0x6e73
   2219c:	movt	r1, #19823	; 0x4d6f
   221a0:	orr	r9, r4, r0, lsl #24
   221a4:	movw	r0, #29184	; 0x7200
   221a8:	movt	r0, #29797	; 0x7465
   221ac:	subs	r2, r8, r0
   221b0:	sbcs	r2, r9, r1
   221b4:	bcs	221fc <main@@Base+0xef24>
   221b8:	movw	r1, #29696	; 0x7400
   221bc:	bic	r0, r9, #255	; 0xff
   221c0:	movt	r1, #16748	; 0x416c
   221c4:	teq	r0, r1
   221c8:	bne	222f4 <main@@Base+0xf01c>
   221cc:	ldr	r0, [sp, #12]
   221d0:	ldr	r2, [sp, #16]
   221d4:	mov	r1, sl
   221d8:	mov	r3, #3
   221dc:	mov	r4, lr
   221e0:	str	r7, [sp]
   221e4:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   221e8:	cmp	r0, sl
   221ec:	beq	222f4 <main@@Base+0xf01c>
   221f0:	mov	r1, #0
   221f4:	mov	r2, #4
   221f8:	b	2223c <main@@Base+0xef64>
   221fc:	add	r2, r0, #50	; 0x32
   22200:	eor	r1, r9, r1
   22204:	eor	r2, r8, r2
   22208:	orrs	r2, r2, r1
   2220c:	bne	2224c <main@@Base+0xef74>
   22210:	ldr	r0, [sp, #12]
   22214:	ldr	r2, [sp, #16]
   22218:	mov	r1, sl
   2221c:	mov	r3, #8
   22220:	mov	r4, lr
   22224:	str	r7, [sp]
   22228:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   2222c:	cmp	r0, sl
   22230:	beq	222f4 <main@@Base+0xf01c>
   22234:	mov	r1, #0
   22238:	mov	r2, #3
   2223c:	str	r2, [r5]
   22240:	str	r1, [r5, #4]
   22244:	str	r1, [r4]
   22248:	b	222f0 <main@@Base+0xf018>
   2224c:	ldr	r5, [sp, #16]
   22250:	ldr	r6, [sp, #12]
   22254:	bic	r2, r8, #255	; 0xff
   22258:	eor	r0, r2, r0
   2225c:	orrs	r0, r0, r1
   22260:	bne	222a4 <main@@Base+0xefcc>
   22264:	mov	r0, r6
   22268:	mov	r1, sl
   2226c:	mov	r2, r5
   22270:	mov	r3, #7
   22274:	str	r7, [sp]
   22278:	mov	r4, lr
   2227c:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   22280:	mov	lr, r4
   22284:	cmp	r0, sl
   22288:	beq	222a4 <main@@Base+0xefcc>
   2228c:	ldr	r3, [fp, #8]
   22290:	mov	r1, #0
   22294:	mov	r2, #1
   22298:	str	r2, [r3]
   2229c:	str	r1, [r3, #4]
   222a0:	b	222ec <main@@Base+0xf014>
   222a4:	movw	r0, #20037	; 0x4e45
   222a8:	movt	r0, #20047	; 0x4e4f
   222ac:	teq	r9, r0
   222b0:	bne	22300 <main@@Base+0xf028>
   222b4:	mov	r0, r6
   222b8:	mov	r1, sl
   222bc:	mov	r2, r5
   222c0:	mov	r3, #4
   222c4:	str	r7, [sp]
   222c8:	mov	r4, lr
   222cc:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   222d0:	mov	lr, r4
   222d4:	cmp	r0, sl
   222d8:	beq	22300 <main@@Base+0xf028>
   222dc:	ldr	r2, [fp, #8]
   222e0:	mov	r1, #0
   222e4:	str	r1, [r2]
   222e8:	str	r1, [r2, #4]
   222ec:	str	r1, [lr]
   222f0:	mov	sl, r0
   222f4:	mov	r0, sl
   222f8:	sub	sp, fp, #28
   222fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22300:	movw	r0, #28016	; 0x6d70
   22304:	movw	r1, #29556	; 0x7374
   22308:	movt	r0, #21353	; 0x5369
   2230c:	movt	r1, #21605	; 0x5465
   22310:	eor	r0, r8, r0
   22314:	eor	r1, r9, r1
   22318:	orrs	r0, r0, r1
   2231c:	bne	222f4 <main@@Base+0xf01c>
   22320:	str	lr, [sp, #8]
   22324:	add	lr, sl, #8
   22328:	sub	r0, r5, lr
   2232c:	cmp	r0, #8
   22330:	movcs	r0, #8
   22334:	and	r0, r0, #15
   22338:	sub	r5, r0, #1
   2233c:	cmp	r5, #7
   22340:	bhi	222f4 <main@@Base+0xf01c>
   22344:	add	r1, pc, #32
   22348:	mov	r9, #0
   2234c:	mov	ip, #0
   22350:	mov	r8, #0
   22354:	mov	r2, #0
   22358:	mov	r3, #0
   2235c:	mov	r0, #0
   22360:	mov	r4, #0
   22364:	mov	r6, #0
   22368:	ldr	pc, [r1, r5, lsl #2]
   2236c:	ldrdeq	r2, [r2], -r0
   22370:	andeq	r2, r2, r8, asr #7
   22374:	andeq	r2, r2, r0, asr #7
   22378:			; <UNDEFINED> instruction: 0x000223b8
   2237c:	andeq	r2, r2, ip, lsr #7
   22380:	andeq	r2, r2, r0, lsr #7
   22384:	muleq	r2, r0, r3
   22388:	andeq	r2, r2, ip, lsl #7
   2238c:	ldrb	ip, [sl, #15]
   22390:	ldrb	r0, [sl, #14]
   22394:	mov	r8, r9
   22398:	orr	r0, ip, r0, lsl #8
   2239c:	mov	r9, r0
   223a0:	ldrb	r0, [sl, #13]
   223a4:	mov	r2, r8
   223a8:	orr	r9, r9, r0, lsl #16
   223ac:	ldrb	r0, [sl, #12]
   223b0:	mov	r3, r2
   223b4:	orr	r9, r9, r0, lsl #24
   223b8:	ldrb	r0, [sl, #11]
   223bc:	orr	r0, r0, r3
   223c0:	ldrb	r1, [sl, #10]
   223c4:	orr	r4, r0, r1, lsl #8
   223c8:	ldrb	r0, [sl, #9]
   223cc:	orr	r6, r4, r0, lsl #16
   223d0:	ldrb	r1, [lr]
   223d4:	movw	r0, #25943	; 0x6557
   223d8:	movw	r2, #21601	; 0x5461
   223dc:	movt	r0, #25196	; 0x626c
   223e0:	movt	r2, #27749	; 0x6c65
   223e4:	eor	r0, r9, r0
   223e8:	orr	r1, r6, r1, lsl #24
   223ec:	eor	r1, r1, r2
   223f0:	orrs	r0, r0, r1
   223f4:	bne	222f4 <main@@Base+0xf01c>
   223f8:	ldr	r0, [sp, #16]
   223fc:	add	r9, sl, #16
   22400:	sub	r0, r0, r9
   22404:	cmp	r0, #8
   22408:	movcs	r0, #8
   2240c:	and	r0, r0, #15
   22410:	sub	r3, r0, #1
   22414:	cmp	r3, #7
   22418:	bhi	222f4 <main@@Base+0xf01c>
   2241c:	add	r1, pc, #28
   22420:	mov	r0, #0
   22424:	mov	ip, #0
   22428:	mov	lr, #0
   2242c:	mov	r2, #0
   22430:	mov	r5, #0
   22434:	mov	r6, #0
   22438:	mov	r4, #0
   2243c:	ldr	pc, [r1, r3, lsl #2]
   22440:	muleq	r2, ip, r4
   22444:	muleq	r2, r4, r4
   22448:	andeq	r2, r2, ip, lsl #9
   2244c:	andeq	r2, r2, r4, lsl #9
   22450:	andeq	r2, r2, r8, ror r4
   22454:	andeq	r2, r2, r8, ror #8
   22458:	andeq	r2, r2, r0, ror #8
   2245c:	andeq	r2, r2, r0, ror #8
   22460:	ldrb	r1, [sl, #22]
   22464:	lsl	ip, r1, #8
   22468:	ldrb	r1, [sl, #21]
   2246c:	mov	lr, r0
   22470:	orr	r1, ip, r1, lsl #16
   22474:	mov	r0, r1
   22478:	ldrb	r1, [sl, #20]
   2247c:	mov	r2, lr
   22480:	orr	r0, r0, r1, lsl #24
   22484:	ldrb	r1, [sl, #19]
   22488:	orr	r5, r1, r2
   2248c:	ldrb	r1, [sl, #18]
   22490:	orr	r6, r5, r1, lsl #8
   22494:	ldrb	r1, [sl, #17]
   22498:	orr	r4, r6, r1, lsl #16
   2249c:	movw	r1, #27904	; 0x6d00
   224a0:	movw	r2, #26693	; 0x6845
   224a4:	movt	r1, #28277	; 0x6e75
   224a8:	movt	r2, #26996	; 0x6974
   224ac:	eor	r0, r0, r1
   224b0:	ldrb	r1, [r9]
   224b4:	orr	r1, r4, r1, lsl #24
   224b8:	eor	r1, r1, r2
   224bc:	orrs	r0, r0, r1
   224c0:	bne	222f4 <main@@Base+0xf01c>
   224c4:	ldr	r0, [sp, #12]
   224c8:	ldr	r2, [sp, #16]
   224cc:	mov	r1, r9
   224d0:	mov	r3, #7
   224d4:	str	r7, [sp]
   224d8:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   224dc:	ldr	r3, [fp, #8]
   224e0:	cmp	r0, r9
   224e4:	beq	222f4 <main@@Base+0xf01c>
   224e8:	mov	r2, #2
   224ec:	mov	r1, #0
   224f0:	str	r2, [r3]
   224f4:	str	r1, [r3, #4]
   224f8:	ldr	r2, [sp, #8]
   224fc:	str	r1, [r2]
   22500:	b	222f0 <main@@Base+0xf018>
   22504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22508:	add	fp, sp, #28
   2250c:	sub	sp, sp, #44	; 0x2c
   22510:	mov	r6, r2
   22514:	ldr	r2, [fp, #8]
   22518:	mov	r5, r0
   2251c:	mov	r0, #0
   22520:	mov	r8, r3
   22524:	cmp	r1, r6
   22528:	strb	r0, [r2]
   2252c:	beq	22570 <main@@Base+0xf298>
   22530:	ldrb	r0, [r1]
   22534:	cmp	r0, #46	; 0x2e
   22538:	beq	22550 <main@@Base+0xf278>
   2253c:	cmp	r0, #34	; 0x22
   22540:	bne	22568 <main@@Base+0xf290>
   22544:	mov	r0, #0
   22548:	add	r1, r1, #1
   2254c:	b	2256c <main@@Base+0xf294>
   22550:	mov	r0, r5
   22554:	mov	r2, r6
   22558:	mov	r3, #5
   2255c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22560:	mov	r1, r0
   22564:	b	22570 <main@@Base+0xf298>
   22568:	mov	r0, #1
   2256c:	str	r0, [r5, #12]
   22570:	ldr	r0, [r5, #12]
   22574:	cmp	r0, #0
   22578:	beq	22584 <main@@Base+0xf2ac>
   2257c:	mov	r7, r1
   22580:	b	225c0 <main@@Base+0xf2e8>
   22584:	sub	r0, r6, r1
   22588:	cmp	r0, #2
   2258c:	blt	225b0 <main@@Base+0xf2d8>
   22590:	ldrb	r0, [r1]
   22594:	cmp	r0, #32
   22598:	bhi	2257c <main@@Base+0xf2a4>
   2259c:	bne	225b0 <main@@Base+0xf2d8>
   225a0:	mov	r7, r1
   225a4:	ldrb	r0, [r7, #1]!
   225a8:	cmp	r0, #32
   225ac:	bhi	225c0 <main@@Base+0xf2e8>
   225b0:	mov	r0, r5
   225b4:	mov	r2, r6
   225b8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   225bc:	mov	r7, r0
   225c0:	cmp	r7, r6
   225c4:	beq	226cc <main@@Base+0xf3f4>
   225c8:	mov	r1, #0
   225cc:	add	r0, r8, #4
   225d0:	add	sl, sp, #32
   225d4:	add	r9, sp, #28
   225d8:	str	r8, [sp, #12]
   225dc:	str	r1, [sp, #16]
   225e0:	mov	r1, #0
   225e4:	str	r0, [sp, #8]
   225e8:	str	r1, [sp, #20]
   225ec:	ldr	r4, [r8]
   225f0:	mov	r8, r0
   225f4:	add	r0, sp, #24
   225f8:	mov	r1, r7
   225fc:	mov	r2, r6
   22600:	mov	r3, r9
   22604:	str	sl, [sp]
   22608:	str	r0, [sp, #4]
   2260c:	mov	r0, r5
   22610:	blx	r4
   22614:	cmp	r0, r6
   22618:	beq	226cc <main@@Base+0xf3f4>
   2261c:	mov	r4, r0
   22620:	cmp	r0, r7
   22624:	bne	22638 <main@@Base+0xf360>
   22628:	ldr	r4, [r8], #4
   2262c:	cmp	r4, #0
   22630:	bne	225f4 <main@@Base+0xf31c>
   22634:	b	226d4 <main@@Base+0xf3fc>
   22638:	ldr	r7, [sp, #20]
   2263c:	cmp	r7, #0
   22640:	ldrne	r0, [r5, #12]
   22644:	cmpne	r0, #0
   22648:	bne	226f8 <main@@Base+0xf420>
   2264c:	ldr	r0, [sp, #28]
   22650:	cmp	r0, #0
   22654:	beq	22670 <main@@Base+0xf398>
   22658:	mov	r0, r5
   2265c:	mov	r1, r4
   22660:	mov	r2, r6
   22664:	mov	r3, #8
   22668:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2266c:	b	22688 <main@@Base+0xf3b0>
   22670:	ldr	r0, [sp, #32]
   22674:	ldr	r1, [sp, #36]	; 0x24
   22678:	orrs	r0, r0, r1
   2267c:	movwne	r0, #1
   22680:	str	r0, [sp, #16]
   22684:	mov	r0, r4
   22688:	ldr	r8, [sp, #12]
   2268c:	cmp	r0, r6
   22690:	beq	226cc <main@@Base+0xf3f4>
   22694:	ldr	r0, [fp, #8]
   22698:	ldr	r2, [sp, #16]
   2269c:	add	r7, r7, #1
   226a0:	str	r7, [sp, #20]
   226a4:	mov	r7, r4
   226a8:	mov	r1, r0
   226ac:	ldrb	r0, [r0]
   226b0:	add	r0, r0, r2
   226b4:	strb	r0, [r1]
   226b8:	ldr	r0, [sp, #24]
   226bc:	cmp	r0, #0
   226c0:	ldr	r0, [sp, #8]
   226c4:	bne	225ec <main@@Base+0xf314>
   226c8:	b	226ec <main@@Base+0xf414>
   226cc:	mov	r4, r6
   226d0:	b	226ec <main@@Base+0xf414>
   226d4:	mov	r0, r5
   226d8:	mov	r1, r7
   226dc:	mov	r2, r6
   226e0:	mov	r3, #23
   226e4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   226e8:	mov	r4, r0
   226ec:	mov	r0, r4
   226f0:	sub	sp, fp, #28
   226f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   226f8:	mov	r0, r5
   226fc:	mov	r1, r4
   22700:	mov	r2, r6
   22704:	mov	r3, #14
   22708:	b	226e4 <main@@Base+0xf40c>
   2270c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22710:	add	fp, sp, #28
   22714:	sub	sp, sp, #44	; 0x2c
   22718:	mov	r4, r2
   2271c:	ldr	r2, [fp, #8]
   22720:	mov	r5, r0
   22724:	mov	r0, #0
   22728:	mov	r6, r3
   2272c:	cmp	r1, r4
   22730:	str	r0, [r2]
   22734:	beq	22778 <main@@Base+0xf4a0>
   22738:	ldrb	r0, [r1]
   2273c:	cmp	r0, #46	; 0x2e
   22740:	beq	22758 <main@@Base+0xf480>
   22744:	cmp	r0, #34	; 0x22
   22748:	bne	22770 <main@@Base+0xf498>
   2274c:	mov	r0, #0
   22750:	add	r1, r1, #1
   22754:	b	22774 <main@@Base+0xf49c>
   22758:	mov	r0, r5
   2275c:	mov	r2, r4
   22760:	mov	r3, #5
   22764:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22768:	mov	r1, r0
   2276c:	b	22778 <main@@Base+0xf4a0>
   22770:	mov	r0, #1
   22774:	str	r0, [r5, #12]
   22778:	ldr	r0, [r5, #12]
   2277c:	cmp	r0, #0
   22780:	beq	2278c <main@@Base+0xf4b4>
   22784:	mov	r7, r1
   22788:	b	227c8 <main@@Base+0xf4f0>
   2278c:	sub	r0, r4, r1
   22790:	cmp	r0, #2
   22794:	blt	227b8 <main@@Base+0xf4e0>
   22798:	ldrb	r0, [r1]
   2279c:	cmp	r0, #32
   227a0:	bhi	22784 <main@@Base+0xf4ac>
   227a4:	bne	227b8 <main@@Base+0xf4e0>
   227a8:	mov	r7, r1
   227ac:	ldrb	r0, [r7, #1]!
   227b0:	cmp	r0, #32
   227b4:	bhi	227c8 <main@@Base+0xf4f0>
   227b8:	mov	r0, r5
   227bc:	mov	r2, r4
   227c0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   227c4:	mov	r7, r0
   227c8:	cmp	r7, r4
   227cc:	beq	22898 <main@@Base+0xf5c0>
   227d0:	add	r9, r6, #4
   227d4:	mov	r0, #0
   227d8:	add	sl, sp, #32
   227dc:	add	r8, sp, #28
   227e0:	str	r6, [sp, #16]
   227e4:	str	r0, [sp, #20]
   227e8:	str	r9, [sp, #12]
   227ec:	ldr	r6, [r6]
   227f0:	add	r0, sp, #24
   227f4:	mov	r1, r7
   227f8:	mov	r2, r4
   227fc:	mov	r3, r8
   22800:	str	sl, [sp]
   22804:	str	r0, [sp, #4]
   22808:	mov	r0, r5
   2280c:	blx	r6
   22810:	cmp	r0, r4
   22814:	beq	22898 <main@@Base+0xf5c0>
   22818:	cmp	r0, r7
   2281c:	bne	22830 <main@@Base+0xf558>
   22820:	ldr	r6, [r9], #4
   22824:	cmp	r6, #0
   22828:	bne	227f0 <main@@Base+0xf518>
   2282c:	b	228a0 <main@@Base+0xf5c8>
   22830:	ldr	r1, [sp, #20]
   22834:	mov	r7, r0
   22838:	cmp	r1, #0
   2283c:	ldrne	r0, [r5, #12]
   22840:	cmpne	r0, #0
   22844:	bne	228c4 <main@@Base+0xf5ec>
   22848:	add	r1, r1, #1
   2284c:	ldr	r0, [sp, #32]
   22850:	str	r1, [sp, #20]
   22854:	ldr	r1, [sp, #36]	; 0x24
   22858:	bl	310f4 <flatcc_json_parser_struct_as_root@@Base+0x650>
   2285c:	ldr	r2, [fp, #8]
   22860:	ldr	r1, [sp, #28]
   22864:	vmov	s2, r0
   22868:	ldr	r6, [sp, #16]
   2286c:	ldr	r9, [sp, #12]
   22870:	vneg.f32	s4, s2
   22874:	vldr	s0, [r2]
   22878:	cmp	r1, #0
   2287c:	vseleq.f32	s2, s2, s4
   22880:	vadd.f32	s0, s0, s2
   22884:	vstr	s0, [r2]
   22888:	ldr	r0, [sp, #24]
   2288c:	cmp	r0, #0
   22890:	bne	227ec <main@@Base+0xf514>
   22894:	b	228b8 <main@@Base+0xf5e0>
   22898:	mov	r7, r4
   2289c:	b	228b8 <main@@Base+0xf5e0>
   228a0:	mov	r0, r5
   228a4:	mov	r1, r7
   228a8:	mov	r2, r4
   228ac:	mov	r3, #23
   228b0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   228b4:	mov	r7, r0
   228b8:	mov	r0, r7
   228bc:	sub	sp, fp, #28
   228c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228c4:	mov	r0, r5
   228c8:	mov	r1, r7
   228cc:	mov	r2, r4
   228d0:	mov	r3, #14
   228d4:	b	228b0 <main@@Base+0xf5d8>
   228d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228dc:	add	fp, sp, #28
   228e0:	sub	sp, sp, #44	; 0x2c
   228e4:	mov	r6, r2
   228e8:	ldr	r2, [fp, #8]
   228ec:	mov	r5, r0
   228f0:	mov	r0, #0
   228f4:	mov	sl, r3
   228f8:	cmp	r1, r6
   228fc:	str	r0, [r2]
   22900:	beq	22944 <main@@Base+0xf66c>
   22904:	ldrb	r0, [r1]
   22908:	cmp	r0, #46	; 0x2e
   2290c:	beq	22924 <main@@Base+0xf64c>
   22910:	cmp	r0, #34	; 0x22
   22914:	bne	2293c <main@@Base+0xf664>
   22918:	mov	r0, #0
   2291c:	add	r1, r1, #1
   22920:	b	22940 <main@@Base+0xf668>
   22924:	mov	r0, r5
   22928:	mov	r2, r6
   2292c:	mov	r3, #5
   22930:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22934:	mov	r1, r0
   22938:	b	22944 <main@@Base+0xf66c>
   2293c:	mov	r0, #1
   22940:	str	r0, [r5, #12]
   22944:	ldr	r0, [r5, #12]
   22948:	cmp	r0, #0
   2294c:	beq	22958 <main@@Base+0xf680>
   22950:	mov	r7, r1
   22954:	b	22994 <main@@Base+0xf6bc>
   22958:	sub	r0, r6, r1
   2295c:	cmp	r0, #2
   22960:	blt	22984 <main@@Base+0xf6ac>
   22964:	ldrb	r0, [r1]
   22968:	cmp	r0, #32
   2296c:	bhi	22950 <main@@Base+0xf678>
   22970:	bne	22984 <main@@Base+0xf6ac>
   22974:	mov	r7, r1
   22978:	ldrb	r0, [r7, #1]!
   2297c:	cmp	r0, #32
   22980:	bhi	22994 <main@@Base+0xf6bc>
   22984:	mov	r0, r5
   22988:	mov	r2, r6
   2298c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   22990:	mov	r7, r0
   22994:	cmp	r7, r6
   22998:	beq	22ad0 <main@@Base+0xf7f8>
   2299c:	add	r0, sl, #4
   229a0:	mov	r1, #0
   229a4:	mov	r2, #0
   229a8:	add	r8, sp, #32
   229ac:	add	r9, sp, #28
   229b0:	str	sl, [sp, #12]
   229b4:	str	r1, [sp, #20]
   229b8:	str	r0, [sp, #8]
   229bc:	ldr	r4, [sl]
   229c0:	mov	sl, r0
   229c4:	str	r2, [sp, #16]
   229c8:	add	r0, sp, #24
   229cc:	mov	r1, r7
   229d0:	mov	r2, r6
   229d4:	mov	r3, r9
   229d8:	str	r8, [sp]
   229dc:	str	r0, [sp, #4]
   229e0:	mov	r0, r5
   229e4:	blx	r4
   229e8:	cmp	r0, r6
   229ec:	beq	22ad0 <main@@Base+0xf7f8>
   229f0:	mov	r4, r0
   229f4:	cmp	r0, r7
   229f8:	bne	22a0c <main@@Base+0xf734>
   229fc:	ldr	r4, [sl], #4
   22a00:	cmp	r4, #0
   22a04:	bne	229c8 <main@@Base+0xf6f0>
   22a08:	b	22ad8 <main@@Base+0xf800>
   22a0c:	ldr	r7, [sp, #20]
   22a10:	cmp	r7, #0
   22a14:	ldrne	r0, [r5, #12]
   22a18:	cmpne	r0, #0
   22a1c:	bne	22afc <main@@Base+0xf824>
   22a20:	ldr	r2, [sp, #28]
   22a24:	ldr	r0, [sp, #32]
   22a28:	ldr	r1, [sp, #36]	; 0x24
   22a2c:	cmp	r2, #0
   22a30:	beq	22a58 <main@@Base+0xf780>
   22a34:	ldr	sl, [sp, #12]
   22a38:	subs	r2, r0, #-2147483647	; 0x80000001
   22a3c:	sbcs	r1, r1, #0
   22a40:	bcc	22a84 <main@@Base+0xf7ac>
   22a44:	mov	r0, r5
   22a48:	mov	r1, r4
   22a4c:	mov	r2, r6
   22a50:	mov	r3, #8
   22a54:	b	22a78 <main@@Base+0xf7a0>
   22a58:	ldr	sl, [sp, #12]
   22a5c:	subs	r2, r0, #-2147483648	; 0x80000000
   22a60:	sbcs	r1, r1, #0
   22a64:	bcc	22a8c <main@@Base+0xf7b4>
   22a68:	mov	r0, r5
   22a6c:	mov	r1, r4
   22a70:	mov	r2, r6
   22a74:	mov	r3, #7
   22a78:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22a7c:	ldr	r2, [sp, #16]
   22a80:	b	22a94 <main@@Base+0xf7bc>
   22a84:	rsb	r2, r0, #0
   22a88:	b	22a90 <main@@Base+0xf7b8>
   22a8c:	mov	r2, r0
   22a90:	mov	r0, r4
   22a94:	cmp	r0, r6
   22a98:	beq	22ad0 <main@@Base+0xf7f8>
   22a9c:	ldr	r0, [fp, #8]
   22aa0:	add	r7, r7, #1
   22aa4:	str	r7, [sp, #20]
   22aa8:	mov	r7, r4
   22aac:	mov	r1, r0
   22ab0:	ldr	r0, [r0]
   22ab4:	add	r0, r0, r2
   22ab8:	str	r0, [r1]
   22abc:	ldr	r0, [sp, #24]
   22ac0:	cmp	r0, #0
   22ac4:	ldr	r0, [sp, #8]
   22ac8:	bne	229bc <main@@Base+0xf6e4>
   22acc:	b	22af0 <main@@Base+0xf818>
   22ad0:	mov	r4, r6
   22ad4:	b	22af0 <main@@Base+0xf818>
   22ad8:	mov	r0, r5
   22adc:	mov	r1, r7
   22ae0:	mov	r2, r6
   22ae4:	mov	r3, #23
   22ae8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22aec:	mov	r4, r0
   22af0:	mov	r0, r4
   22af4:	sub	sp, fp, #28
   22af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22afc:	mov	r0, r5
   22b00:	mov	r1, r4
   22b04:	mov	r2, r6
   22b08:	mov	r3, #14
   22b0c:	b	22ae8 <main@@Base+0xf810>
   22b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b14:	add	fp, sp, #28
   22b18:	sub	sp, sp, #52	; 0x34
   22b1c:	mov	r6, r2
   22b20:	ldr	r2, [fp, #8]
   22b24:	mov	r5, r0
   22b28:	mov	r0, #0
   22b2c:	mov	sl, r3
   22b30:	cmp	r1, r6
   22b34:	str	r0, [r2]
   22b38:	str	r0, [r2, #4]
   22b3c:	beq	22b80 <main@@Base+0xf8a8>
   22b40:	ldrb	r0, [r1]
   22b44:	cmp	r0, #46	; 0x2e
   22b48:	beq	22b60 <main@@Base+0xf888>
   22b4c:	cmp	r0, #34	; 0x22
   22b50:	bne	22b78 <main@@Base+0xf8a0>
   22b54:	mov	r0, #0
   22b58:	add	r1, r1, #1
   22b5c:	b	22b7c <main@@Base+0xf8a4>
   22b60:	mov	r0, r5
   22b64:	mov	r2, r6
   22b68:	mov	r3, #5
   22b6c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22b70:	mov	r1, r0
   22b74:	b	22b80 <main@@Base+0xf8a8>
   22b78:	mov	r0, #1
   22b7c:	str	r0, [r5, #12]
   22b80:	ldr	r0, [r5, #12]
   22b84:	cmp	r0, #0
   22b88:	beq	22b94 <main@@Base+0xf8bc>
   22b8c:	mov	r7, r1
   22b90:	b	22bd0 <main@@Base+0xf8f8>
   22b94:	sub	r0, r6, r1
   22b98:	cmp	r0, #2
   22b9c:	blt	22bc0 <main@@Base+0xf8e8>
   22ba0:	ldrb	r0, [r1]
   22ba4:	cmp	r0, #32
   22ba8:	bhi	22b8c <main@@Base+0xf8b4>
   22bac:	bne	22bc0 <main@@Base+0xf8e8>
   22bb0:	mov	r7, r1
   22bb4:	ldrb	r0, [r7, #1]!
   22bb8:	cmp	r0, #32
   22bbc:	bhi	22bd0 <main@@Base+0xf8f8>
   22bc0:	mov	r0, r5
   22bc4:	mov	r2, r6
   22bc8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   22bcc:	mov	r7, r0
   22bd0:	cmp	r7, r6
   22bd4:	beq	22d18 <main@@Base+0xfa40>
   22bd8:	add	r0, sl, #4
   22bdc:	mov	r1, #0
   22be0:	mov	r3, #0
   22be4:	add	r8, sp, #40	; 0x28
   22be8:	add	r9, sp, #36	; 0x24
   22bec:	mov	r2, #0
   22bf0:	str	sl, [sp, #16]
   22bf4:	str	r1, [sp, #28]
   22bf8:	str	r0, [sp, #12]
   22bfc:	ldr	r4, [sl]
   22c00:	mov	sl, r0
   22c04:	str	r2, [sp, #20]
   22c08:	str	r3, [sp, #24]
   22c0c:	add	r0, sp, #32
   22c10:	mov	r1, r7
   22c14:	mov	r2, r6
   22c18:	mov	r3, r9
   22c1c:	str	r8, [sp]
   22c20:	str	r0, [sp, #4]
   22c24:	mov	r0, r5
   22c28:	blx	r4
   22c2c:	cmp	r0, r6
   22c30:	beq	22d18 <main@@Base+0xfa40>
   22c34:	mov	r4, r0
   22c38:	cmp	r0, r7
   22c3c:	bne	22c50 <main@@Base+0xf978>
   22c40:	ldr	r4, [sl], #4
   22c44:	cmp	r4, #0
   22c48:	bne	22c0c <main@@Base+0xf934>
   22c4c:	b	22d20 <main@@Base+0xfa48>
   22c50:	ldr	r7, [sp, #28]
   22c54:	cmp	r7, #0
   22c58:	ldrne	r0, [r5, #12]
   22c5c:	cmpne	r0, #0
   22c60:	bne	22d44 <main@@Base+0xfa6c>
   22c64:	add	r2, sp, #36	; 0x24
   22c68:	ldm	r2, {r0, r1, r2}
   22c6c:	cmp	r0, #0
   22c70:	beq	22c98 <main@@Base+0xf9c0>
   22c74:	ldr	sl, [sp, #16]
   22c78:	subs	r0, r1, #1
   22c7c:	sbcs	r0, r2, #-2147483648	; 0x80000000
   22c80:	bcc	22cc8 <main@@Base+0xf9f0>
   22c84:	mov	r0, r5
   22c88:	mov	r1, r4
   22c8c:	mov	r2, r6
   22c90:	mov	r3, #8
   22c94:	b	22cb8 <main@@Base+0xf9e0>
   22c98:	ldr	sl, [sp, #16]
   22c9c:	cmn	r2, #1
   22ca0:	mov	r0, r4
   22ca4:	bgt	22cd4 <main@@Base+0xf9fc>
   22ca8:	mov	r0, r5
   22cac:	mov	r1, r4
   22cb0:	mov	r2, r6
   22cb4:	mov	r3, #7
   22cb8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22cbc:	ldr	r1, [sp, #24]
   22cc0:	ldr	r2, [sp, #20]
   22cc4:	b	22cd4 <main@@Base+0xf9fc>
   22cc8:	rsbs	r1, r1, #0
   22ccc:	mov	r0, r4
   22cd0:	rsc	r2, r2, #0
   22cd4:	cmp	r0, r6
   22cd8:	beq	22d18 <main@@Base+0xfa40>
   22cdc:	ldr	r0, [fp, #8]
   22ce0:	add	r7, r7, #1
   22ce4:	str	r7, [sp, #28]
   22ce8:	mov	r7, r0
   22cec:	ldm	r0, {r0, r3}
   22cf0:	adds	r0, r0, r1
   22cf4:	adc	r3, r3, r2
   22cf8:	stm	r7, {r0, r3}
   22cfc:	mov	r3, r1
   22d00:	mov	r7, r4
   22d04:	ldr	r0, [sp, #32]
   22d08:	cmp	r0, #0
   22d0c:	ldr	r0, [sp, #12]
   22d10:	bne	22bfc <main@@Base+0xf924>
   22d14:	b	22d38 <main@@Base+0xfa60>
   22d18:	mov	r4, r6
   22d1c:	b	22d38 <main@@Base+0xfa60>
   22d20:	mov	r0, r5
   22d24:	mov	r1, r7
   22d28:	mov	r2, r6
   22d2c:	mov	r3, #23
   22d30:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22d34:	mov	r4, r0
   22d38:	mov	r0, r4
   22d3c:	sub	sp, fp, #28
   22d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d44:	mov	r0, r5
   22d48:	mov	r1, r4
   22d4c:	mov	r2, r6
   22d50:	mov	r3, #14
   22d54:	b	22d30 <main@@Base+0xfa58>
   22d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d5c:	add	fp, sp, #28
   22d60:	sub	sp, sp, #44	; 0x2c
   22d64:	mov	r6, r2
   22d68:	ldr	r2, [fp, #8]
   22d6c:	mov	r5, r0
   22d70:	mov	r0, #0
   22d74:	mov	sl, r3
   22d78:	cmp	r1, r6
   22d7c:	str	r0, [r2]
   22d80:	beq	22dc4 <main@@Base+0xfaec>
   22d84:	ldrb	r0, [r1]
   22d88:	cmp	r0, #46	; 0x2e
   22d8c:	beq	22da4 <main@@Base+0xfacc>
   22d90:	cmp	r0, #34	; 0x22
   22d94:	bne	22dbc <main@@Base+0xfae4>
   22d98:	mov	r0, #0
   22d9c:	add	r1, r1, #1
   22da0:	b	22dc0 <main@@Base+0xfae8>
   22da4:	mov	r0, r5
   22da8:	mov	r2, r6
   22dac:	mov	r3, #5
   22db0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22db4:	mov	r1, r0
   22db8:	b	22dc4 <main@@Base+0xfaec>
   22dbc:	mov	r0, #1
   22dc0:	str	r0, [r5, #12]
   22dc4:	ldr	r0, [r5, #12]
   22dc8:	cmp	r0, #0
   22dcc:	beq	22dd8 <main@@Base+0xfb00>
   22dd0:	mov	r7, r1
   22dd4:	b	22e14 <main@@Base+0xfb3c>
   22dd8:	sub	r0, r6, r1
   22ddc:	cmp	r0, #2
   22de0:	blt	22e04 <main@@Base+0xfb2c>
   22de4:	ldrb	r0, [r1]
   22de8:	cmp	r0, #32
   22dec:	bhi	22dd0 <main@@Base+0xfaf8>
   22df0:	bne	22e04 <main@@Base+0xfb2c>
   22df4:	mov	r7, r1
   22df8:	ldrb	r0, [r7, #1]!
   22dfc:	cmp	r0, #32
   22e00:	bhi	22e14 <main@@Base+0xfb3c>
   22e04:	mov	r0, r5
   22e08:	mov	r2, r6
   22e0c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   22e10:	mov	r7, r0
   22e14:	cmp	r7, r6
   22e18:	beq	22f3c <main@@Base+0xfc64>
   22e1c:	mov	r1, #0
   22e20:	add	r0, sl, #4
   22e24:	add	r8, sp, #32
   22e28:	add	r9, sp, #28
   22e2c:	str	sl, [sp, #12]
   22e30:	str	r1, [sp, #16]
   22e34:	mov	r1, #0
   22e38:	str	r0, [sp, #8]
   22e3c:	str	r1, [sp, #20]
   22e40:	ldr	r4, [sl]
   22e44:	mov	sl, r0
   22e48:	add	r0, sp, #24
   22e4c:	mov	r1, r7
   22e50:	mov	r2, r6
   22e54:	mov	r3, r9
   22e58:	str	r8, [sp]
   22e5c:	str	r0, [sp, #4]
   22e60:	mov	r0, r5
   22e64:	blx	r4
   22e68:	cmp	r0, r6
   22e6c:	beq	22f3c <main@@Base+0xfc64>
   22e70:	mov	r4, r0
   22e74:	cmp	r0, r7
   22e78:	bne	22e8c <main@@Base+0xfbb4>
   22e7c:	ldr	r4, [sl], #4
   22e80:	cmp	r4, #0
   22e84:	bne	22e48 <main@@Base+0xfb70>
   22e88:	b	22f44 <main@@Base+0xfc6c>
   22e8c:	ldr	r7, [sp, #20]
   22e90:	cmp	r7, #0
   22e94:	ldrne	r0, [r5, #12]
   22e98:	cmpne	r0, #0
   22e9c:	bne	22f68 <main@@Base+0xfc90>
   22ea0:	ldr	r0, [sp, #28]
   22ea4:	cmp	r0, #0
   22ea8:	beq	22ec8 <main@@Base+0xfbf0>
   22eac:	mov	r0, r5
   22eb0:	mov	r1, r4
   22eb4:	mov	r2, r6
   22eb8:	mov	r3, #8
   22ebc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22ec0:	ldr	sl, [sp, #12]
   22ec4:	b	22efc <main@@Base+0xfc24>
   22ec8:	ldr	r0, [sp, #36]	; 0x24
   22ecc:	ldr	sl, [sp, #12]
   22ed0:	cmp	r0, #0
   22ed4:	beq	22ef0 <main@@Base+0xfc18>
   22ed8:	mov	r0, r5
   22edc:	mov	r1, r4
   22ee0:	mov	r2, r6
   22ee4:	mov	r3, #7
   22ee8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22eec:	b	22efc <main@@Base+0xfc24>
   22ef0:	ldr	r0, [sp, #32]
   22ef4:	str	r0, [sp, #16]
   22ef8:	mov	r0, r4
   22efc:	cmp	r0, r6
   22f00:	beq	22f3c <main@@Base+0xfc64>
   22f04:	ldr	r0, [fp, #8]
   22f08:	ldr	r2, [sp, #16]
   22f0c:	add	r7, r7, #1
   22f10:	str	r7, [sp, #20]
   22f14:	mov	r7, r4
   22f18:	mov	r1, r0
   22f1c:	ldr	r0, [r0]
   22f20:	add	r0, r0, r2
   22f24:	str	r0, [r1]
   22f28:	ldr	r0, [sp, #24]
   22f2c:	cmp	r0, #0
   22f30:	ldr	r0, [sp, #8]
   22f34:	bne	22e40 <main@@Base+0xfb68>
   22f38:	b	22f5c <main@@Base+0xfc84>
   22f3c:	mov	r4, r6
   22f40:	b	22f5c <main@@Base+0xfc84>
   22f44:	mov	r0, r5
   22f48:	mov	r1, r7
   22f4c:	mov	r2, r6
   22f50:	mov	r3, #23
   22f54:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22f58:	mov	r4, r0
   22f5c:	mov	r0, r4
   22f60:	sub	sp, fp, #28
   22f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f68:	mov	r0, r5
   22f6c:	mov	r1, r4
   22f70:	mov	r2, r6
   22f74:	mov	r3, #14
   22f78:	b	22f54 <main@@Base+0xfc7c>
   22f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22f80:	add	fp, sp, #28
   22f84:	sub	sp, sp, #52	; 0x34
   22f88:	mov	r6, r2
   22f8c:	ldr	r2, [fp, #8]
   22f90:	mov	r5, r0
   22f94:	mov	r0, #0
   22f98:	mov	r8, r3
   22f9c:	cmp	r1, r6
   22fa0:	str	r0, [r2]
   22fa4:	str	r0, [r2, #4]
   22fa8:	beq	22fec <main@@Base+0xfd14>
   22fac:	ldrb	r0, [r1]
   22fb0:	cmp	r0, #46	; 0x2e
   22fb4:	beq	22fcc <main@@Base+0xfcf4>
   22fb8:	cmp	r0, #34	; 0x22
   22fbc:	bne	22fe4 <main@@Base+0xfd0c>
   22fc0:	mov	r0, #0
   22fc4:	add	r1, r1, #1
   22fc8:	b	22fe8 <main@@Base+0xfd10>
   22fcc:	mov	r0, r5
   22fd0:	mov	r2, r6
   22fd4:	mov	r3, #5
   22fd8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   22fdc:	mov	r1, r0
   22fe0:	b	22fec <main@@Base+0xfd14>
   22fe4:	mov	r0, #1
   22fe8:	str	r0, [r5, #12]
   22fec:	ldr	r0, [r5, #12]
   22ff0:	cmp	r0, #0
   22ff4:	beq	23000 <main@@Base+0xfd28>
   22ff8:	mov	r7, r1
   22ffc:	b	2303c <main@@Base+0xfd64>
   23000:	sub	r0, r6, r1
   23004:	cmp	r0, #2
   23008:	blt	2302c <main@@Base+0xfd54>
   2300c:	ldrb	r0, [r1]
   23010:	cmp	r0, #32
   23014:	bhi	22ff8 <main@@Base+0xfd20>
   23018:	bne	2302c <main@@Base+0xfd54>
   2301c:	mov	r7, r1
   23020:	ldrb	r0, [r7, #1]!
   23024:	cmp	r0, #32
   23028:	bhi	2303c <main@@Base+0xfd64>
   2302c:	mov	r0, r5
   23030:	mov	r2, r6
   23034:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   23038:	mov	r7, r0
   2303c:	cmp	r7, r6
   23040:	beq	23154 <main@@Base+0xfe7c>
   23044:	mov	r1, #0
   23048:	add	r0, r8, #4
   2304c:	add	sl, sp, #40	; 0x28
   23050:	add	r9, sp, #36	; 0x24
   23054:	str	r8, [sp, #16]
   23058:	str	r1, [sp, #24]
   2305c:	mov	r1, #0
   23060:	str	r0, [sp, #12]
   23064:	str	r1, [sp, #20]
   23068:	mov	r1, #0
   2306c:	str	r1, [sp, #28]
   23070:	ldr	r4, [r8]
   23074:	mov	r8, r0
   23078:	add	r0, sp, #32
   2307c:	mov	r1, r7
   23080:	mov	r2, r6
   23084:	mov	r3, r9
   23088:	str	sl, [sp]
   2308c:	str	r0, [sp, #4]
   23090:	mov	r0, r5
   23094:	blx	r4
   23098:	cmp	r0, r6
   2309c:	beq	23154 <main@@Base+0xfe7c>
   230a0:	mov	r4, r0
   230a4:	cmp	r0, r7
   230a8:	bne	230bc <main@@Base+0xfde4>
   230ac:	ldr	r4, [r8], #4
   230b0:	cmp	r4, #0
   230b4:	bne	23078 <main@@Base+0xfda0>
   230b8:	b	2315c <main@@Base+0xfe84>
   230bc:	ldr	r7, [sp, #28]
   230c0:	cmp	r7, #0
   230c4:	ldrne	r0, [r5, #12]
   230c8:	cmpne	r0, #0
   230cc:	bne	23180 <main@@Base+0xfea8>
   230d0:	ldr	r0, [sp, #36]	; 0x24
   230d4:	cmp	r0, #0
   230d8:	beq	230f4 <main@@Base+0xfe1c>
   230dc:	mov	r0, r5
   230e0:	mov	r1, r4
   230e4:	mov	r2, r6
   230e8:	mov	r3, #8
   230ec:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   230f0:	b	23108 <main@@Base+0xfe30>
   230f4:	ldr	r0, [sp, #40]	; 0x28
   230f8:	str	r0, [sp, #24]
   230fc:	ldr	r0, [sp, #44]	; 0x2c
   23100:	str	r0, [sp, #20]
   23104:	mov	r0, r4
   23108:	ldr	r8, [sp, #16]
   2310c:	cmp	r0, r6
   23110:	beq	23154 <main@@Base+0xfe7c>
   23114:	ldr	r0, [fp, #8]
   23118:	add	r7, r7, #1
   2311c:	ldr	r3, [sp, #24]
   23120:	str	r7, [sp, #28]
   23124:	mov	r7, r4
   23128:	mov	r2, r0
   2312c:	ldrd	r0, [r0]
   23130:	adds	r0, r0, r3
   23134:	ldr	r3, [sp, #20]
   23138:	adc	r1, r1, r3
   2313c:	strd	r0, [r2]
   23140:	ldr	r0, [sp, #32]
   23144:	cmp	r0, #0
   23148:	ldr	r0, [sp, #12]
   2314c:	bne	23070 <main@@Base+0xfd98>
   23150:	b	23174 <main@@Base+0xfe9c>
   23154:	mov	r4, r6
   23158:	b	23174 <main@@Base+0xfe9c>
   2315c:	mov	r0, r5
   23160:	mov	r1, r7
   23164:	mov	r2, r6
   23168:	mov	r3, #23
   2316c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   23170:	mov	r4, r0
   23174:	mov	r0, r4
   23178:	sub	sp, fp, #28
   2317c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23180:	mov	r0, r5
   23184:	mov	r1, r4
   23188:	mov	r2, r6
   2318c:	mov	r3, #14
   23190:	b	2316c <main@@Base+0xfe94>
   23194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23198:	add	fp, sp, #28
   2319c:	sub	sp, sp, #44	; 0x2c
   231a0:	mov	r4, r2
   231a4:	ldr	r2, [fp, #8]
   231a8:	mov	r5, r0
   231ac:	mov	r0, #0
   231b0:	mov	r9, r3
   231b4:	cmp	r1, r4
   231b8:	str	r0, [r2]
   231bc:	str	r0, [r2, #4]
   231c0:	beq	23204 <main@@Base+0xff2c>
   231c4:	ldrb	r0, [r1]
   231c8:	cmp	r0, #46	; 0x2e
   231cc:	beq	231e4 <main@@Base+0xff0c>
   231d0:	cmp	r0, #34	; 0x22
   231d4:	bne	231fc <main@@Base+0xff24>
   231d8:	mov	r0, #0
   231dc:	add	r1, r1, #1
   231e0:	b	23200 <main@@Base+0xff28>
   231e4:	mov	r0, r5
   231e8:	mov	r2, r4
   231ec:	mov	r3, #5
   231f0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   231f4:	mov	r1, r0
   231f8:	b	23204 <main@@Base+0xff2c>
   231fc:	mov	r0, #1
   23200:	str	r0, [r5, #12]
   23204:	ldr	r0, [r5, #12]
   23208:	cmp	r0, #0
   2320c:	beq	23218 <main@@Base+0xff40>
   23210:	mov	r7, r1
   23214:	b	23254 <main@@Base+0xff7c>
   23218:	sub	r0, r4, r1
   2321c:	cmp	r0, #2
   23220:	blt	23244 <main@@Base+0xff6c>
   23224:	ldrb	r0, [r1]
   23228:	cmp	r0, #32
   2322c:	bhi	23210 <main@@Base+0xff38>
   23230:	bne	23244 <main@@Base+0xff6c>
   23234:	mov	r7, r1
   23238:	ldrb	r0, [r7, #1]!
   2323c:	cmp	r0, #32
   23240:	bhi	23254 <main@@Base+0xff7c>
   23244:	mov	r0, r5
   23248:	mov	r2, r4
   2324c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   23250:	mov	r7, r0
   23254:	cmp	r7, r4
   23258:	beq	23330 <main@@Base+0x10058>
   2325c:	add	r0, r9, #4
   23260:	mov	r1, #0
   23264:	add	sl, sp, #32
   23268:	add	r8, sp, #28
   2326c:	str	r9, [sp, #16]
   23270:	str	r1, [sp, #20]
   23274:	str	r0, [sp, #12]
   23278:	ldr	r6, [r9]
   2327c:	mov	r9, r0
   23280:	add	r0, sp, #24
   23284:	mov	r1, r7
   23288:	mov	r2, r4
   2328c:	mov	r3, r8
   23290:	str	sl, [sp]
   23294:	str	r0, [sp, #4]
   23298:	mov	r0, r5
   2329c:	blx	r6
   232a0:	cmp	r0, r4
   232a4:	beq	23330 <main@@Base+0x10058>
   232a8:	cmp	r0, r7
   232ac:	bne	232c0 <main@@Base+0xffe8>
   232b0:	ldr	r6, [r9], #4
   232b4:	cmp	r6, #0
   232b8:	bne	23280 <main@@Base+0xffa8>
   232bc:	b	23338 <main@@Base+0x10060>
   232c0:	ldr	r1, [sp, #20]
   232c4:	mov	r7, r0
   232c8:	cmp	r1, #0
   232cc:	ldrne	r0, [r5, #12]
   232d0:	cmpne	r0, #0
   232d4:	bne	2335c <main@@Base+0x10084>
   232d8:	add	r1, r1, #1
   232dc:	ldr	r0, [sp, #32]
   232e0:	str	r1, [sp, #20]
   232e4:	ldr	r1, [sp, #36]	; 0x24
   232e8:	bl	30ebc <flatcc_json_parser_struct_as_root@@Base+0x418>
   232ec:	ldr	r2, [fp, #8]
   232f0:	ldr	r3, [sp, #28]
   232f4:	vmov	d17, r0, r1
   232f8:	ldr	r9, [sp, #16]
   232fc:	vldr	d16, [r2]
   23300:	mov	r6, r2
   23304:	eor	r2, r1, #-2147483648	; 0x80000000
   23308:	cmp	r3, #0
   2330c:	vmov	d18, r0, r2
   23310:	vseleq.f64	d17, d17, d18
   23314:	vadd.f64	d16, d16, d17
   23318:	vstr	d16, [r6]
   2331c:	ldr	r0, [sp, #24]
   23320:	cmp	r0, #0
   23324:	ldr	r0, [sp, #12]
   23328:	bne	23278 <main@@Base+0xffa0>
   2332c:	b	23350 <main@@Base+0x10078>
   23330:	mov	r7, r4
   23334:	b	23350 <main@@Base+0x10078>
   23338:	mov	r0, r5
   2333c:	mov	r1, r7
   23340:	mov	r2, r4
   23344:	mov	r3, #23
   23348:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2334c:	mov	r7, r0
   23350:	mov	r0, r7
   23354:	sub	sp, fp, #28
   23358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2335c:	mov	r0, r5
   23360:	mov	r1, r7
   23364:	mov	r2, r4
   23368:	mov	r3, #14
   2336c:	b	23348 <main@@Base+0x10070>
   23370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23374:	add	fp, sp, #28
   23378:	sub	sp, sp, #12
   2337c:	mov	sl, r1
   23380:	sub	r1, r2, r1
   23384:	cmp	r1, #8
   23388:	movcs	r1, #8
   2338c:	and	r1, r1, #15
   23390:	sub	r5, r1, #1
   23394:	cmp	r5, #7
   23398:	bhi	235d4 <main@@Base+0x102fc>
   2339c:	str	r3, [sp, #8]
   233a0:	add	r7, pc, #32
   233a4:	mov	r8, #0
   233a8:	mov	ip, #0
   233ac:	mov	lr, #0
   233b0:	mov	r9, #0
   233b4:	mov	r6, #0
   233b8:	mov	r1, #0
   233bc:	mov	r3, #0
   233c0:	mov	r4, #0
   233c4:	ldr	pc, [r7, r5, lsl #2]
   233c8:	andeq	r3, r2, ip, lsr #8
   233cc:	andeq	r3, r2, r4, lsr #8
   233d0:	andeq	r3, r2, ip, lsl r4
   233d4:	andeq	r3, r2, r4, lsl r4
   233d8:	andeq	r3, r2, r8, lsl #8
   233dc:	strdeq	r3, [r2], -ip
   233e0:	andeq	r3, r2, ip, ror #7
   233e4:	andeq	r3, r2, r8, ror #7
   233e8:	ldrb	ip, [sl, #7]
   233ec:	ldrb	r1, [sl, #6]
   233f0:	mov	lr, r8
   233f4:	orr	r1, ip, r1, lsl #8
   233f8:	mov	r8, r1
   233fc:	ldrb	r1, [sl, #5]
   23400:	mov	r9, lr
   23404:	orr	r8, r8, r1, lsl #16
   23408:	ldrb	r1, [sl, #4]
   2340c:	mov	r6, r9
   23410:	orr	r8, r8, r1, lsl #24
   23414:	ldrb	r1, [sl, #3]
   23418:	orr	r1, r1, r6
   2341c:	ldrb	r3, [sl, #2]
   23420:	orr	r3, r1, r3, lsl #8
   23424:	ldrb	r1, [sl, #1]
   23428:	orr	r4, r3, r1, lsl #16
   2342c:	movw	r1, #28276	; 0x6e74
   23430:	movw	r7, #20577	; 0x5061
   23434:	ldr	r6, [fp, #12]
   23438:	movt	r1, #29285	; 0x7265
   2343c:	movt	r7, #18798	; 0x496e
   23440:	eor	r3, r8, r1
   23444:	ldrb	r1, [sl]
   23448:	orr	r1, r4, r1, lsl #24
   2344c:	eor	r7, r1, r7
   23450:	orrs	r3, r3, r7
   23454:	bne	23588 <main@@Base+0x102b0>
   23458:	add	r8, sl, #8
   2345c:	sub	r1, r2, r8
   23460:	cmp	r1, #8
   23464:	movcs	r1, #8
   23468:	and	r1, r1, #15
   2346c:	sub	r7, r1, #1
   23470:	cmp	r7, #7
   23474:	bhi	235d4 <main@@Base+0x102fc>
   23478:	str	r0, [sp, #4]
   2347c:	add	lr, pc, #32
   23480:	mov	r6, #0
   23484:	mov	r0, #0
   23488:	mov	r1, #0
   2348c:	mov	r5, #0
   23490:	mov	r4, #0
   23494:	mov	r3, #0
   23498:	mov	ip, #0
   2349c:	mov	r9, #0
   234a0:	ldr	pc, [lr, r7, lsl #2]
   234a4:	andeq	r3, r2, r8, lsl #10
   234a8:	andeq	r3, r2, r0, lsl #10
   234ac:	strdeq	r3, [r2], -r8
   234b0:	strdeq	r3, [r2], -r0
   234b4:	andeq	r3, r2, r4, ror #9
   234b8:	ldrdeq	r3, [r2], -r8
   234bc:	andeq	r3, r2, r8, asr #9
   234c0:	andeq	r3, r2, r4, asr #9
   234c4:	ldrb	r0, [sl, #15]
   234c8:	ldrb	r1, [sl, #14]
   234cc:	orr	r0, r0, r1, lsl #8
   234d0:	mov	r1, r6
   234d4:	mov	r6, r0
   234d8:	ldrb	r0, [sl, #13]
   234dc:	mov	r5, r1
   234e0:	orr	r6, r6, r0, lsl #16
   234e4:	ldrb	r0, [sl, #12]
   234e8:	mov	r4, r5
   234ec:	orr	r6, r6, r0, lsl #24
   234f0:	ldrb	r0, [sl, #11]
   234f4:	orr	r3, r0, r4
   234f8:	ldrb	r0, [sl, #10]
   234fc:	orr	ip, r3, r0, lsl #8
   23500:	ldrb	r0, [sl, #9]
   23504:	orr	r9, ip, r0, lsl #16
   23508:	ldrb	r1, [r8]
   2350c:	movw	r0, #24931	; 0x6163
   23510:	movw	r3, #28005	; 0x6d65
   23514:	movt	r0, #29552	; 0x7370
   23518:	movt	r3, #20065	; 0x4e61
   2351c:	eor	r0, r6, r0
   23520:	orr	r1, r9, r1, lsl #24
   23524:	eor	r1, r1, r3
   23528:	orrs	r0, r0, r1
   2352c:	bne	235d4 <main@@Base+0x102fc>
   23530:	add	r6, sl, #16
   23534:	mov	r1, #-268435456	; 0xf0000000
   23538:	sub	r0, r2, r6
   2353c:	cmp	r0, #8
   23540:	movcs	r0, #8
   23544:	add	r0, r1, r0, lsl #28
   23548:	asr	r0, r0, #28
   2354c:	cmp	r0, #0
   23550:	blt	235d4 <main@@Base+0x102fc>
   23554:	ldrb	r0, [r6]
   23558:	cmp	r0, #101	; 0x65
   2355c:	bne	235d4 <main@@Base+0x102fc>
   23560:	ldr	r0, [fp, #12]
   23564:	mov	r1, r6
   23568:	mov	r3, #1
   2356c:	mov	r8, #1
   23570:	str	r0, [sp]
   23574:	ldr	r0, [sp, #4]
   23578:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   2357c:	cmp	r0, r6
   23580:	bne	235b4 <main@@Base+0x102dc>
   23584:	b	235d4 <main@@Base+0x102fc>
   23588:	movw	r3, #20037	; 0x4e45
   2358c:	movt	r3, #20047	; 0x4e4f
   23590:	teq	r1, r3
   23594:	bne	235d4 <main@@Base+0x102fc>
   23598:	mov	r1, sl
   2359c:	mov	r3, #4
   235a0:	str	r6, [sp]
   235a4:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   235a8:	cmp	r0, sl
   235ac:	beq	235d4 <main@@Base+0x102fc>
   235b0:	mov	r8, #0
   235b4:	mov	sl, r0
   235b8:	ldr	r0, [fp, #8]
   235bc:	mov	r1, #0
   235c0:	str	r8, [r0]
   235c4:	str	r1, [r0, #4]
   235c8:	mov	r0, #0
   235cc:	ldr	r1, [sp, #8]
   235d0:	str	r0, [r1]
   235d4:	mov	r0, sl
   235d8:	sub	sp, fp, #28
   235dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   235e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235e4:	add	fp, sp, #28
   235e8:	sub	sp, sp, #12
   235ec:	mov	r5, r1
   235f0:	sub	r1, r2, r1
   235f4:	cmp	r1, #8
   235f8:	movcs	r1, #8
   235fc:	and	r1, r1, #15
   23600:	sub	r7, r1, #1
   23604:	cmp	r7, #7
   23608:	bhi	23784 <main@@Base+0x104ac>
   2360c:	str	r3, [sp, #8]
   23610:	add	r8, pc, #32
   23614:	mov	lr, #0
   23618:	mov	ip, #0
   2361c:	mov	r9, #0
   23620:	mov	sl, #0
   23624:	mov	r1, #0
   23628:	mov	r3, #0
   2362c:	mov	r4, #0
   23630:	mov	r6, #0
   23634:	ldr	pc, [r8, r7, lsl #2]
   23638:	muleq	r2, ip, r6
   2363c:	muleq	r2, r4, r6
   23640:	andeq	r3, r2, ip, lsl #13
   23644:	andeq	r3, r2, r4, lsl #13
   23648:	andeq	r3, r2, r8, ror r6
   2364c:	andeq	r3, r2, ip, ror #12
   23650:	andeq	r3, r2, ip, asr r6
   23654:	andeq	r3, r2, r8, asr r6
   23658:	ldrb	ip, [r5, #7]
   2365c:	ldrb	r1, [r5, #6]
   23660:	mov	r9, lr
   23664:	orr	r1, ip, r1, lsl #8
   23668:	mov	lr, r1
   2366c:	ldrb	r1, [r5, #5]
   23670:	mov	sl, r9
   23674:	orr	lr, lr, r1, lsl #16
   23678:	ldrb	r1, [r5, #4]
   2367c:	orr	lr, lr, r1, lsl #24
   23680:	mov	r1, sl
   23684:	ldrb	r3, [r5, #3]
   23688:	orr	r3, r3, r1
   2368c:	ldrb	r1, [r5, #2]
   23690:	orr	r4, r3, r1, lsl #8
   23694:	ldrb	r1, [r5, #1]
   23698:	orr	r6, r4, r1, lsl #16
   2369c:	ldrb	r1, [r5]
   236a0:	ldr	r3, [fp, #12]
   236a4:	ldr	r8, [fp, #8]
   236a8:	orr	r1, r6, r1, lsl #24
   236ac:	movw	r6, #30769	; 0x7831
   236b0:	movt	r6, #26725	; 0x6865
   236b4:	cmp	r1, r6
   236b8:	bhi	236e8 <main@@Base+0x10410>
   236bc:	teq	r1, r6
   236c0:	bne	23784 <main@@Base+0x104ac>
   236c4:	str	r3, [sp]
   236c8:	mov	r1, r5
   236cc:	mov	r3, #4
   236d0:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   236d4:	cmp	r0, r5
   236d8:	beq	23784 <main@@Base+0x104ac>
   236dc:	mov	r1, #0
   236e0:	mov	r2, #3
   236e4:	b	23770 <main@@Base+0x10498>
   236e8:	lsr	r4, lr, #16
   236ec:	movw	r7, #25959	; 0x6567
   236f0:	movw	r6, #26725	; 0x6865
   236f4:	orr	r4, r4, r1, lsl #16
   236f8:	movt	r7, #30830	; 0x786e
   236fc:	eor	r6, r6, r1, lsr #16
   23700:	eor	r7, r4, r7
   23704:	orrs	r7, r7, r6
   23708:	bne	2373c <main@@Base+0x10464>
   2370c:	str	r3, [sp]
   23710:	mov	r1, r5
   23714:	mov	r3, #6
   23718:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   2371c:	cmp	r0, r5
   23720:	beq	23784 <main@@Base+0x104ac>
   23724:	mvn	r2, #1
   23728:	mvn	r1, #0
   2372c:	str	r2, [r8]
   23730:	str	r1, [r8, #4]
   23734:	mov	r1, #1
   23738:	b	23778 <main@@Base+0x104a0>
   2373c:	movw	r7, #30770	; 0x7832
   23740:	movt	r7, #26725	; 0x6865
   23744:	teq	r1, r7
   23748:	bne	23784 <main@@Base+0x104ac>
   2374c:	str	r3, [sp]
   23750:	mov	r1, r5
   23754:	mov	r3, #4
   23758:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   2375c:	cmp	r0, r5
   23760:	beq	23784 <main@@Base+0x104ac>
   23764:	movw	r2, #48815	; 0xbeaf
   23768:	mov	r1, #0
   2376c:	movt	r2, #32431	; 0x7eaf
   23770:	str	r2, [r8]
   23774:	str	r1, [r8, #4]
   23778:	ldr	r2, [sp, #8]
   2377c:	mov	r5, r0
   23780:	str	r1, [r2]
   23784:	mov	r0, r5
   23788:	sub	sp, fp, #28
   2378c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23794:	add	fp, sp, #28
   23798:	sub	sp, sp, #12
   2379c:	mov	sl, r1
   237a0:	sub	r1, r2, r1
   237a4:	cmp	r1, #8
   237a8:	movcs	r1, #8
   237ac:	and	r1, r1, #15
   237b0:	sub	r4, r1, #1
   237b4:	cmp	r4, #7
   237b8:	bhi	23978 <main@@Base+0x106a0>
   237bc:	str	r3, [sp, #8]
   237c0:	add	r8, pc, #32
   237c4:	mov	r9, #0
   237c8:	mov	ip, #0
   237cc:	mov	lr, #0
   237d0:	mov	r7, #0
   237d4:	mov	r6, #0
   237d8:	mov	r3, #0
   237dc:	mov	r1, #0
   237e0:	mov	r5, #0
   237e4:	ldr	pc, [r8, r4, lsl #2]
   237e8:	andeq	r3, r2, ip, asr #16
   237ec:	andeq	r3, r2, r4, asr #16
   237f0:	andeq	r3, r2, ip, lsr r8
   237f4:	andeq	r3, r2, r4, lsr r8
   237f8:	andeq	r3, r2, r8, lsr #16
   237fc:	andeq	r3, r2, ip, lsl r8
   23800:	andeq	r3, r2, ip, lsl #16
   23804:	andeq	r3, r2, r8, lsl #16
   23808:	ldrb	ip, [sl, #7]
   2380c:	ldrb	r1, [sl, #6]
   23810:	mov	lr, r9
   23814:	orr	r1, ip, r1, lsl #8
   23818:	mov	r9, r1
   2381c:	ldrb	r1, [sl, #5]
   23820:	mov	r7, lr
   23824:	orr	r9, r9, r1, lsl #16
   23828:	ldrb	r1, [sl, #4]
   2382c:	mov	r6, r7
   23830:	orr	r9, r9, r1, lsl #24
   23834:	ldrb	r1, [sl, #3]
   23838:	orr	r3, r1, r6
   2383c:	ldrb	r1, [sl, #2]
   23840:	orr	r1, r3, r1, lsl #8
   23844:	ldrb	r3, [sl, #1]
   23848:	orr	r5, r1, r3, lsl #16
   2384c:	ldrb	r1, [sl]
   23850:	ldr	r3, [fp, #12]
   23854:	ldr	r6, [fp, #8]
   23858:	orr	r7, r5, r1, lsl #24
   2385c:	movw	r1, #29745	; 0x7431
   23860:	movt	r1, #26990	; 0x696e
   23864:	cmp	r7, r1
   23868:	bhi	23898 <main@@Base+0x105c0>
   2386c:	teq	r7, r1
   23870:	bne	23978 <main@@Base+0x106a0>
   23874:	str	r3, [sp]
   23878:	mov	r1, sl
   2387c:	mov	r3, #4
   23880:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23884:	cmp	r0, sl
   23888:	beq	23978 <main@@Base+0x106a0>
   2388c:	mov	r1, #0
   23890:	mov	r2, #2
   23894:	b	238e4 <main@@Base+0x1060c>
   23898:	movw	r4, #0
   2389c:	movw	r1, #29806	; 0x746e
   238a0:	movt	r4, #25959	; 0x6567
   238a4:	movt	r1, #26990	; 0x696e
   238a8:	subs	r5, r9, r4
   238ac:	sbcs	r5, r7, r1
   238b0:	bcs	238f0 <main@@Base+0x10618>
   238b4:	movw	r1, #29746	; 0x7432
   238b8:	movt	r1, #26990	; 0x696e
   238bc:	teq	r7, r1
   238c0:	bne	23978 <main@@Base+0x106a0>
   238c4:	str	r3, [sp]
   238c8:	mov	r1, sl
   238cc:	mov	r3, #4
   238d0:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   238d4:	cmp	r0, sl
   238d8:	beq	23978 <main@@Base+0x106a0>
   238dc:	mov	r1, #0
   238e0:	mov	r2, #42	; 0x2a
   238e4:	str	r2, [r6]
   238e8:	str	r1, [r6, #4]
   238ec:	b	2396c <main@@Base+0x10694>
   238f0:	eor	r1, r7, r1
   238f4:	add	r7, r4, #12800	; 0x3200
   238f8:	bic	r5, r9, #255	; 0xff
   238fc:	eor	r7, r5, r7
   23900:	orrs	r7, r7, r1
   23904:	bne	23930 <main@@Base+0x10658>
   23908:	str	r3, [sp]
   2390c:	mov	r1, sl
   23910:	mov	r3, #7
   23914:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23918:	cmp	r0, sl
   2391c:	beq	23978 <main@@Base+0x106a0>
   23920:	mvn	r2, #1
   23924:	mvn	r1, #0
   23928:	add	r2, r2, #1
   2392c:	b	23960 <main@@Base+0x10688>
   23930:	bfc	r9, #0, #16
   23934:	eor	r7, r9, r4
   23938:	orrs	r1, r7, r1
   2393c:	bne	23978 <main@@Base+0x106a0>
   23940:	str	r3, [sp]
   23944:	mov	r1, sl
   23948:	mov	r3, #6
   2394c:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23950:	cmp	r0, sl
   23954:	beq	23978 <main@@Base+0x106a0>
   23958:	mvn	r1, #0
   2395c:	mvn	r2, #1
   23960:	str	r2, [r6]
   23964:	str	r1, [r6, #4]
   23968:	mov	r1, #1
   2396c:	ldr	r2, [sp, #8]
   23970:	mov	sl, r0
   23974:	str	r1, [r2]
   23978:	mov	r0, sl
   2397c:	sub	sp, fp, #28
   23980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23984:	push	{r4, r5, r6, r7, fp, lr}
   23988:	add	fp, sp, #16
   2398c:	sub	sp, sp, #8
   23990:	mov	r5, r1
   23994:	sub	r1, r2, r1
   23998:	mov	r4, r3
   2399c:	cmp	r1, #8
   239a0:	movcs	r1, #8
   239a4:	and	r1, r1, #15
   239a8:	sub	r3, r1, #1
   239ac:	cmp	r3, #7
   239b0:	bhi	23ac4 <main@@Base+0x107ec>
   239b4:	add	r7, pc, #4
   239b8:	mov	r1, #0
   239bc:	ldr	pc, [r7, r3, lsl #2]
   239c0:	strdeq	r3, [r2], -r8
   239c4:	strdeq	r3, [r2], -r0
   239c8:	andeq	r3, r2, r8, ror #19
   239cc:	andeq	r3, r2, r0, ror #19
   239d0:	andeq	r3, r2, r0, ror #19
   239d4:	andeq	r3, r2, r0, ror #19
   239d8:	andeq	r3, r2, r0, ror #19
   239dc:	andeq	r3, r2, r0, ror #19
   239e0:	ldrb	r3, [r5, #3]
   239e4:	orr	r1, r3, r1
   239e8:	ldrb	r3, [r5, #2]
   239ec:	orr	r1, r1, r3, lsl #8
   239f0:	ldrb	r3, [r5, #1]
   239f4:	orr	r1, r1, r3, lsl #16
   239f8:	ldrb	r6, [r5]
   239fc:	ldr	r3, [fp, #12]
   23a00:	ldr	r7, [fp, #8]
   23a04:	orr	r1, r1, r6, lsl #24
   23a08:	movw	r6, #26417	; 0x6731
   23a0c:	movt	r6, #28261	; 0x6e65
   23a10:	cmp	r1, r6
   23a14:	bhi	23a44 <main@@Base+0x1076c>
   23a18:	teq	r1, r6
   23a1c:	bne	23ac4 <main@@Base+0x107ec>
   23a20:	str	r3, [sp]
   23a24:	mov	r1, r5
   23a28:	mov	r3, #4
   23a2c:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23a30:	cmp	r0, r5
   23a34:	beq	23ac4 <main@@Base+0x107ec>
   23a38:	mvn	r1, #0
   23a3c:	mvn	r2, #11
   23a40:	b	23ab0 <main@@Base+0x107d8>
   23a44:	movw	r6, #26418	; 0x6732
   23a48:	movt	r6, #28261	; 0x6e65
   23a4c:	teq	r1, r6
   23a50:	beq	23a8c <main@@Base+0x107b4>
   23a54:	movw	r6, #26419	; 0x6733
   23a58:	movt	r6, #28261	; 0x6e65
   23a5c:	teq	r1, r6
   23a60:	bne	23ac4 <main@@Base+0x107ec>
   23a64:	str	r3, [sp]
   23a68:	mov	r1, r5
   23a6c:	mov	r3, #4
   23a70:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23a74:	cmp	r0, r5
   23a78:	beq	23ac4 <main@@Base+0x107ec>
   23a7c:	mvn	r2, #11
   23a80:	mvn	r1, #0
   23a84:	add	r2, r2, #2
   23a88:	b	23ab0 <main@@Base+0x107d8>
   23a8c:	str	r3, [sp]
   23a90:	mov	r1, r5
   23a94:	mov	r3, #4
   23a98:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23a9c:	cmp	r0, r5
   23aa0:	beq	23ac4 <main@@Base+0x107ec>
   23aa4:	mvn	r2, #11
   23aa8:	mvn	r1, #0
   23aac:	add	r2, r2, #1
   23ab0:	str	r2, [r7]
   23ab4:	str	r1, [r7, #4]
   23ab8:	mov	r1, #1
   23abc:	mov	r5, r0
   23ac0:	str	r1, [r4]
   23ac4:	mov	r0, r5
   23ac8:	sub	sp, fp, #16
   23acc:	pop	{r4, r5, r6, r7, fp, pc}
   23ad0:	push	{r4, r5, fp, lr}
   23ad4:	add	fp, sp, #8
   23ad8:	sub	sp, sp, #8
   23adc:	mov	r4, r1
   23ae0:	sub	r1, r2, r1
   23ae4:	mov	r5, r3
   23ae8:	mov	r3, #-268435456	; 0xf0000000
   23aec:	cmp	r1, #8
   23af0:	movcs	r1, #8
   23af4:	add	r1, r3, r1, lsl #28
   23af8:	asr	r1, r1, #28
   23afc:	cmp	r1, #0
   23b00:	blt	23b44 <main@@Base+0x1086c>
   23b04:	ldrb	r1, [r4]
   23b08:	cmp	r1, #120	; 0x78
   23b0c:	bne	23b44 <main@@Base+0x1086c>
   23b10:	ldr	r1, [fp, #12]
   23b14:	mov	r3, #1
   23b18:	str	r1, [sp]
   23b1c:	mov	r1, r4
   23b20:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23b24:	cmp	r0, r4
   23b28:	beq	23b44 <main@@Base+0x1086c>
   23b2c:	ldr	r1, [fp, #8]
   23b30:	mov	r2, #0
   23b34:	mov	r4, r0
   23b38:	str	r2, [r1]
   23b3c:	str	r2, [r1, #4]
   23b40:	str	r2, [r5]
   23b44:	mov	r0, r4
   23b48:	sub	sp, fp, #8
   23b4c:	pop	{r4, r5, fp, pc}
   23b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b54:	add	fp, sp, #28
   23b58:	sub	sp, sp, #12
   23b5c:	mov	sl, r1
   23b60:	sub	r1, r2, r1
   23b64:	cmp	r1, #8
   23b68:	movcs	r1, #8
   23b6c:	and	r1, r1, #15
   23b70:	sub	r6, r1, #1
   23b74:	cmp	r6, #7
   23b78:	bhi	23df4 <main@@Base+0x10b1c>
   23b7c:	str	r3, [sp, #8]
   23b80:	add	r9, pc, #32
   23b84:	mov	r1, #0
   23b88:	mov	ip, #0
   23b8c:	mov	lr, #0
   23b90:	mov	r4, #0
   23b94:	mov	r7, #0
   23b98:	mov	r3, #0
   23b9c:	mov	r5, #0
   23ba0:	mov	r8, #0
   23ba4:	ldr	pc, [r9, r6, lsl #2]
   23ba8:	andeq	r3, r2, ip, lsl #24
   23bac:	andeq	r3, r2, r4, lsl #24
   23bb0:	strdeq	r3, [r2], -ip
   23bb4:	strdeq	r3, [r2], -r4
   23bb8:	andeq	r3, r2, r8, ror #23
   23bbc:	ldrdeq	r3, [r2], -ip
   23bc0:	andeq	r3, r2, ip, asr #23
   23bc4:	andeq	r3, r2, r8, asr #23
   23bc8:	ldrb	ip, [sl, #7]
   23bcc:	ldrb	r3, [sl, #6]
   23bd0:	mov	lr, r1
   23bd4:	orr	r3, ip, r3, lsl #8
   23bd8:	mov	r1, r3
   23bdc:	ldrb	r3, [sl, #5]
   23be0:	mov	r4, lr
   23be4:	orr	r1, r1, r3, lsl #16
   23be8:	ldrb	r3, [sl, #4]
   23bec:	mov	r7, r4
   23bf0:	orr	r1, r1, r3, lsl #24
   23bf4:	ldrb	r3, [sl, #3]
   23bf8:	orr	r3, r3, r7
   23bfc:	ldrb	r7, [sl, #2]
   23c00:	orr	r5, r3, r7, lsl #8
   23c04:	ldrb	r3, [sl, #1]
   23c08:	orr	r8, r5, r3, lsl #16
   23c0c:	ldrb	r3, [sl]
   23c10:	ldr	lr, [fp, #12]
   23c14:	ldr	r9, [fp, #8]
   23c18:	orr	r6, r8, r3, lsl #24
   23c1c:	movw	r3, #20036	; 0x4e44
   23c20:	movt	r3, #20047	; 0x4e4f
   23c24:	cmp	r6, r3
   23c28:	bhi	23c88 <main@@Base+0x109b0>
   23c2c:	movw	r7, #28160	; 0x6e00
   23c30:	movw	r4, #28523	; 0x6f6b
   23c34:	and	r3, r1, #-16777216	; 0xff000000
   23c38:	movt	r7, #18017	; 0x4661
   23c3c:	movt	r4, #17007	; 0x426f
   23c40:	subs	r5, r1, r7
   23c44:	sbcs	r5, r6, r4
   23c48:	bcs	23cd4 <main@@Base+0x109fc>
   23c4c:	movw	r1, #27756	; 0x6c6c
   23c50:	eor	r3, r3, #1694498816	; 0x65000000
   23c54:	movt	r1, #16997	; 0x4265
   23c58:	eor	r1, r6, r1
   23c5c:	orrs	r1, r3, r1
   23c60:	bne	23df4 <main@@Base+0x10b1c>
   23c64:	mov	r1, sl
   23c68:	mov	r3, #5
   23c6c:	str	lr, [sp]
   23c70:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23c74:	cmp	r0, sl
   23c78:	beq	23df4 <main@@Base+0x10b1c>
   23c7c:	mov	r1, #0
   23c80:	mov	r2, #9
   23c84:	b	23de0 <main@@Base+0x10b08>
   23c88:	movw	r7, #26725	; 0x6865
   23c8c:	mvn	r3, #-1912602624	; 0x8e000000
   23c90:	movt	r7, #20340	; 0x4f74
   23c94:	subs	r3, r3, r1
   23c98:	sbcs	r3, r7, r6
   23c9c:	bcc	23d10 <main@@Base+0x10a38>
   23ca0:	movw	r1, #20037	; 0x4e45
   23ca4:	movt	r1, #20047	; 0x4e4f
   23ca8:	teq	r6, r1
   23cac:	bne	23df4 <main@@Base+0x10b1c>
   23cb0:	mov	r1, sl
   23cb4:	mov	r3, #4
   23cb8:	str	lr, [sp]
   23cbc:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23cc0:	cmp	r0, sl
   23cc4:	beq	23df4 <main@@Base+0x10b1c>
   23cc8:	mov	r1, #0
   23ccc:	str	r1, [r9]
   23cd0:	b	23de4 <main@@Base+0x10b0c>
   23cd4:	movw	r5, #19553	; 0x4c61
   23cd8:	eor	r3, r3, #1845493760	; 0x6e000000
   23cdc:	movt	r5, #19829	; 0x4d75
   23ce0:	eor	r5, r6, r5
   23ce4:	orrs	r3, r3, r5
   23ce8:	bne	23d64 <main@@Base+0x10a8c>
   23cec:	mov	r1, sl
   23cf0:	mov	r3, #5
   23cf4:	str	lr, [sp]
   23cf8:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23cfc:	cmp	r0, sl
   23d00:	beq	23df4 <main@@Base+0x10b1c>
   23d04:	mov	r1, #0
   23d08:	mov	r2, #2
   23d0c:	b	23de0 <main@@Base+0x10b08>
   23d10:	movw	r4, #25964	; 0x656c
   23d14:	movw	ip, #28789	; 0x7075
   23d18:	movt	r4, #28282	; 0x6e7a
   23d1c:	movt	ip, #21089	; 0x5261
   23d20:	subs	r3, r1, r4
   23d24:	sbcs	r3, r6, ip
   23d28:	bcs	23d9c <main@@Base+0x10ac4>
   23d2c:	and	r1, r1, #-16777216	; 0xff000000
   23d30:	eor	r3, r6, r7
   23d34:	eor	r1, r1, #1912602624	; 0x72000000
   23d38:	orrs	r1, r1, r3
   23d3c:	bne	23df4 <main@@Base+0x10b1c>
   23d40:	mov	r1, sl
   23d44:	mov	r3, #5
   23d48:	str	lr, [sp]
   23d4c:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23d50:	cmp	r0, sl
   23d54:	beq	23df4 <main@@Base+0x10b1c>
   23d58:	mov	r1, #0
   23d5c:	mov	r2, #11
   23d60:	b	23de0 <main@@Base+0x10b08>
   23d64:	bic	r1, r1, #255	; 0xff
   23d68:	eor	r3, r6, r4
   23d6c:	eor	r1, r1, r7
   23d70:	orrs	r1, r1, r3
   23d74:	bne	23df4 <main@@Base+0x10b1c>
   23d78:	mov	r1, sl
   23d7c:	mov	r3, #7
   23d80:	str	lr, [sp]
   23d84:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23d88:	cmp	r0, sl
   23d8c:	beq	23df4 <main@@Base+0x10b1c>
   23d90:	mov	r1, #0
   23d94:	mov	r2, #10
   23d98:	b	23de0 <main@@Base+0x10b08>
   23d9c:	lsr	r5, r1, #16
   23da0:	movw	r7, #25956	; 0x6564
   23da4:	movw	r3, #21870	; 0x556e
   23da8:	orr	r5, r5, r6, lsl #16
   23dac:	movt	r7, #30067	; 0x7573
   23db0:	eor	r3, r3, r6, lsr #16
   23db4:	eor	r5, r5, r7
   23db8:	orrs	r3, r5, r3
   23dbc:	bne	23e00 <main@@Base+0x10b28>
   23dc0:	mov	r1, sl
   23dc4:	mov	r3, #6
   23dc8:	str	lr, [sp]
   23dcc:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23dd0:	cmp	r0, sl
   23dd4:	beq	23df4 <main@@Base+0x10b1c>
   23dd8:	mov	r1, #0
   23ddc:	mov	r2, #255	; 0xff
   23de0:	str	r2, [r9]
   23de4:	str	r1, [r9, #4]
   23de8:	ldr	r2, [sp, #8]
   23dec:	str	r1, [r2]
   23df0:	mov	sl, r0
   23df4:	mov	r0, sl
   23df8:	sub	sp, fp, #28
   23dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e00:	eor	r1, r1, r4
   23e04:	eor	r3, r6, ip
   23e08:	orrs	r1, r1, r3
   23e0c:	bne	23df4 <main@@Base+0x10b1c>
   23e10:	mov	r1, sl
   23e14:	mov	r3, #8
   23e18:	str	lr, [sp]
   23e1c:	mov	r4, #8
   23e20:	bl	2d7ec <flatcc_json_parser_match_constant@@Base>
   23e24:	cmp	r0, sl
   23e28:	beq	23df4 <main@@Base+0x10b1c>
   23e2c:	mov	r5, #0
   23e30:	strd	r4, [r9]
   23e34:	ldr	r1, [sp, #8]
   23e38:	str	r5, [r1]
   23e3c:	b	23df0 <main@@Base+0x10b18>
   23e40:	mov	r1, #0
   23e44:	cmp	r0, #5
   23e48:	movwcc	r1, #1
   23e4c:	mov	r0, r1
   23e50:	bx	lr
   23e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e58:	add	fp, sp, #28
   23e5c:	sub	sp, sp, #68	; 0x44
   23e60:	mov	r9, r0
   23e64:	mov	r0, #0
   23e68:	mov	r4, r1
   23e6c:	mov	r1, #3
   23e70:	mov	r6, r3
   23e74:	mov	r8, r2
   23e78:	str	r0, [r3]
   23e7c:	ldr	r0, [r9]
   23e80:	bl	2a60c <flatcc_builder_start_table@@Base>
   23e84:	cmp	r0, #0
   23e88:	bne	27110 <main@@Base+0x13e38>
   23e8c:	cmp	r4, r8
   23e90:	beq	23ec4 <main@@Base+0x10bec>
   23e94:	ldrb	r0, [r4]
   23e98:	cmp	r0, #123	; 0x7b
   23e9c:	bne	23ec4 <main@@Base+0x10bec>
   23ea0:	add	r1, r4, #1
   23ea4:	sub	r0, r8, r1
   23ea8:	cmp	r0, #2
   23eac:	blt	23ef4 <main@@Base+0x10c1c>
   23eb0:	ldrb	r0, [r1]
   23eb4:	cmp	r0, #32
   23eb8:	bls	23ee4 <main@@Base+0x10c0c>
   23ebc:	mov	r4, r1
   23ec0:	b	23f04 <main@@Base+0x10c2c>
   23ec4:	mov	r0, r9
   23ec8:	mov	r1, r4
   23ecc:	mov	r2, r8
   23ed0:	mov	r3, #21
   23ed4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   23ed8:	mov	r4, r0
   23edc:	add	r0, r9, #24
   23ee0:	b	27104 <main@@Base+0x13e2c>
   23ee4:	bne	23ef4 <main@@Base+0x10c1c>
   23ee8:	ldrb	r0, [r4, #2]!
   23eec:	cmp	r0, #32
   23ef0:	bhi	23f04 <main@@Base+0x10c2c>
   23ef4:	mov	r0, r9
   23ef8:	mov	r2, r8
   23efc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   23f00:	mov	r4, r0
   23f04:	cmp	r4, r8
   23f08:	mov	r2, r8
   23f0c:	beq	23f44 <main@@Base+0x10c6c>
   23f10:	ldrb	r0, [r4]
   23f14:	cmp	r0, #125	; 0x7d
   23f18:	bne	23f40 <main@@Base+0x10c68>
   23f1c:	add	r1, r4, #1
   23f20:	sub	r0, r8, r1
   23f24:	cmp	r0, #2
   23f28:	blt	2715c <main@@Base+0x13e84>
   23f2c:	ldrb	r0, [r1]
   23f30:	cmp	r0, #32
   23f34:	bls	2714c <main@@Base+0x13e74>
   23f38:	mov	r4, r1
   23f3c:	b	23edc <main@@Base+0x10c04>
   23f40:	mov	r2, r4
   23f44:	add	r0, r9, #24
   23f48:	movw	r1, #25186	; 0x6262
   23f4c:	str	r9, [sp, #24]
   23f50:	str	r6, [sp, #32]
   23f54:	str	r0, [sp, #20]
   23f58:	add	r0, r9, #12
   23f5c:	movt	r1, #25186	; 0x6262
   23f60:	str	r0, [sp, #28]
   23f64:	movw	r0, #257	; 0x101
   23f68:	movt	r0, #257	; 0x101
   23f6c:	add	r0, r1, r0
   23f70:	str	r0, [sp, #16]
   23f74:	movw	r0, #514	; 0x202
   23f78:	movt	r0, #514	; 0x202
   23f7c:	add	r0, r1, r0
   23f80:	str	r0, [sp, #12]
   23f84:	cmp	r2, r8
   23f88:	mov	sl, r8
   23f8c:	beq	23fe0 <main@@Base+0x10d08>
   23f90:	ldrb	r0, [r2]
   23f94:	cmp	r0, #46	; 0x2e
   23f98:	beq	23fb4 <main@@Base+0x10cdc>
   23f9c:	cmp	r0, #34	; 0x22
   23fa0:	bne	23fd0 <main@@Base+0x10cf8>
   23fa4:	ldr	r0, [sp, #28]
   23fa8:	mov	r1, #0
   23fac:	add	sl, r2, #1
   23fb0:	b	23fdc <main@@Base+0x10d04>
   23fb4:	mov	r1, r2
   23fb8:	mov	r0, r9
   23fbc:	mov	r2, r8
   23fc0:	mov	r3, #5
   23fc4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   23fc8:	mov	sl, r0
   23fcc:	b	23fe0 <main@@Base+0x10d08>
   23fd0:	ldr	r0, [sp, #28]
   23fd4:	mov	r1, #1
   23fd8:	mov	sl, r2
   23fdc:	str	r1, [r0]
   23fe0:	sub	r0, r8, sl
   23fe4:	mov	r1, #8
   23fe8:	cmp	r0, #8
   23fec:	movcs	r0, r1
   23ff0:	and	r0, r0, #15
   23ff4:	sub	r3, r0, #1
   23ff8:	cmp	r3, #7
   23ffc:	bhi	24290 <main@@Base+0x10fb8>
   24000:	add	r5, pc, #32
   24004:	mov	r0, #0
   24008:	mov	ip, #0
   2400c:	mov	lr, #0
   24010:	mov	r7, #0
   24014:	mov	r2, #0
   24018:	mov	r6, #0
   2401c:	mov	r4, #0
   24020:	mov	r1, #0
   24024:	ldr	pc, [r5, r3, lsl #2]
   24028:	andeq	r4, r2, ip, lsl #1
   2402c:	andeq	r4, r2, r4, lsl #1
   24030:	andeq	r4, r2, ip, ror r0
   24034:	andeq	r4, r2, r4, ror r0
   24038:	andeq	r4, r2, r8, rrx
   2403c:	andeq	r4, r2, ip, asr r0
   24040:	andeq	r4, r2, ip, asr #32
   24044:	andeq	r4, r2, r8, asr #32
   24048:	ldrb	ip, [sl, #7]
   2404c:	ldrb	r1, [sl, #6]
   24050:	mov	lr, r0
   24054:	orr	r1, ip, r1, lsl #8
   24058:	mov	r0, r1
   2405c:	ldrb	r1, [sl, #5]
   24060:	mov	r7, lr
   24064:	orr	r0, r0, r1, lsl #16
   24068:	ldrb	r1, [sl, #4]
   2406c:	mov	r2, r7
   24070:	orr	r0, r0, r1, lsl #24
   24074:	ldrb	r1, [sl, #3]
   24078:	orr	r6, r1, r2
   2407c:	ldrb	r1, [sl, #2]
   24080:	orr	r4, r6, r1, lsl #8
   24084:	ldrb	r1, [sl, #1]
   24088:	orr	r1, r4, r1, lsl #16
   2408c:	movw	r2, #28526	; 0x6f6e
   24090:	movt	r2, #27251	; 0x6a73
   24094:	eor	r0, r0, r2
   24098:	ldrb	r2, [sl]
   2409c:	orr	r1, r1, r2, lsl #24
   240a0:	movw	r2, #29556	; 0x7374
   240a4:	movt	r2, #29797	; 0x7465
   240a8:	eor	r1, r1, r2
   240ac:	orrs	r0, r0, r1
   240b0:	bne	24290 <main@@Base+0x10fb8>
   240b4:	add	r1, sl, #8
   240b8:	mov	r2, #8
   240bc:	sub	r0, r8, r1
   240c0:	cmp	r0, #8
   240c4:	movcs	r0, r2
   240c8:	and	r0, r0, #15
   240cc:	sub	r7, r0, #1
   240d0:	cmp	r7, #7
   240d4:	bhi	2429c <main@@Base+0x10fc4>
   240d8:	add	r0, pc, #32
   240dc:	mov	r9, #0
   240e0:	mov	ip, #0
   240e4:	mov	lr, #0
   240e8:	mov	r6, #0
   240ec:	mov	r3, #0
   240f0:	mov	r5, #0
   240f4:	mov	r2, #0
   240f8:	mov	r4, #0
   240fc:	ldr	pc, [r0, r7, lsl #2]
   24100:	andeq	r4, r2, r4, ror #2
   24104:	andeq	r4, r2, ip, asr r1
   24108:	andeq	r4, r2, r4, asr r1
   2410c:	andeq	r4, r2, ip, asr #2
   24110:	andeq	r4, r2, r0, asr #2
   24114:	andeq	r4, r2, r4, lsr r1
   24118:	andeq	r4, r2, r4, lsr #2
   2411c:	andeq	r4, r2, r0, lsr #2
   24120:	ldrb	ip, [sl, #15]
   24124:	ldrb	r0, [sl, #14]
   24128:	mov	lr, r9
   2412c:	orr	r0, ip, r0, lsl #8
   24130:	mov	r9, r0
   24134:	ldrb	r0, [sl, #13]
   24138:	mov	r6, lr
   2413c:	orr	r9, r9, r0, lsl #16
   24140:	ldrb	r0, [sl, #12]
   24144:	mov	r3, r6
   24148:	orr	r9, r9, r0, lsl #24
   2414c:	ldrb	r0, [sl, #11]
   24150:	orr	r5, r0, r3
   24154:	ldrb	r0, [sl, #10]
   24158:	orr	r2, r5, r0, lsl #8
   2415c:	ldrb	r0, [sl, #9]
   24160:	orr	r4, r2, r0, lsl #16
   24164:	ldrb	r2, [r1]
   24168:	movw	r0, #28769	; 0x7061
   2416c:	movw	r3, #25958	; 0x6566
   24170:	movt	r0, #27000	; 0x6978
   24174:	movt	r3, #28786	; 0x7072
   24178:	eor	r0, r9, r0
   2417c:	orr	r2, r4, r2, lsl #24
   24180:	eor	r2, r2, r3
   24184:	orrs	r0, r0, r2
   24188:	bne	2429c <main@@Base+0x10fc4>
   2418c:	add	ip, sl, #16
   24190:	mov	r0, #8
   24194:	sub	r9, r8, ip
   24198:	cmp	r9, #8
   2419c:	movcc	r0, r9
   241a0:	and	r0, r0, #15
   241a4:	sub	r2, r0, #1
   241a8:	cmp	r2, #7
   241ac:	bhi	24608 <main@@Base+0x11330>
   241b0:	add	r7, pc, #24
   241b4:	mov	r0, #0
   241b8:	mov	r1, #0
   241bc:	mov	r3, #0
   241c0:	mov	r6, #0
   241c4:	mov	r4, #0
   241c8:	mov	r5, #0
   241cc:	ldr	pc, [r7, r2, lsl #2]
   241d0:	andeq	r4, r2, r0, lsr #4
   241d4:	andeq	r4, r2, r8, lsl r2
   241d8:	andeq	r4, r2, r0, lsl r2
   241dc:	andeq	r4, r2, r8, lsl #4
   241e0:	strdeq	r4, [r2], -r8
   241e4:	strdeq	r4, [r2], -r0
   241e8:	strdeq	r4, [r2], -r0
   241ec:	strdeq	r4, [r2], -r0
   241f0:	ldrb	r1, [sl, #21]
   241f4:	lsl	r1, r1, #16
   241f8:	ldrb	r2, [sl, #20]
   241fc:	mov	r3, r0
   24200:	orr	r1, r1, r2, lsl #24
   24204:	mov	r0, r1
   24208:	ldrb	r1, [sl, #19]
   2420c:	orr	r6, r1, r3
   24210:	ldrb	r1, [sl, #18]
   24214:	orr	r4, r6, r1, lsl #8
   24218:	ldrb	r1, [sl, #17]
   2421c:	orr	r5, r4, r1, lsl #16
   24220:	mov	r6, r0
   24224:	movw	r1, #0
   24228:	movw	r3, #26990	; 0x696e
   2422c:	bfc	r6, #0, #16
   24230:	movt	r1, #26418	; 0x6732
   24234:	movt	r3, #29299	; 0x7273
   24238:	eor	r2, r6, r1
   2423c:	ldrb	r1, [ip]
   24240:	orr	r1, r5, r1, lsl #24
   24244:	eor	r5, r1, r3
   24248:	orrs	r2, r2, r5
   2424c:	bne	242a8 <main@@Base+0x10fd0>
   24250:	cmp	r9, #7
   24254:	blt	24608 <main@@Base+0x11330>
   24258:	ldr	r2, [sp, #28]
   2425c:	mov	r1, sl
   24260:	ldrb	r0, [r1, #22]!
   24264:	ldr	r2, [r2]
   24268:	cmp	r2, #0
   2426c:	beq	24304 <main@@Base+0x1102c>
   24270:	cmp	r0, #33	; 0x21
   24274:	bcc	24280 <main@@Base+0x10fa8>
   24278:	cmp	r0, #58	; 0x3a
   2427c:	bne	24608 <main@@Base+0x11330>
   24280:	ldr	r0, [sp, #28]
   24284:	mov	r2, #0
   24288:	str	r2, [r0]
   2428c:	b	24310 <main@@Base+0x11038>
   24290:	mov	r0, r9
   24294:	mov	r1, sl
   24298:	b	24614 <main@@Base+0x1133c>
   2429c:	ldr	r9, [sp, #24]
   242a0:	mov	r0, r9
   242a4:	b	24614 <main@@Base+0x1133c>
   242a8:	cmp	r9, #6
   242ac:	blt	245ac <main@@Base+0x112d4>
   242b0:	movw	r2, #26990	; 0x696e
   242b4:	and	r0, r0, #-16777216	; 0xff000000
   242b8:	movt	r2, #29299	; 0x7273
   242bc:	eor	r0, r0, #1728053248	; 0x67000000
   242c0:	eor	r1, r1, r2
   242c4:	orrs	r0, r0, r1
   242c8:	bne	245ac <main@@Base+0x112d4>
   242cc:	ldr	r2, [sp, #28]
   242d0:	mov	r1, sl
   242d4:	ldrb	r0, [r1, #21]!
   242d8:	ldr	r2, [r2]
   242dc:	cmp	r2, #0
   242e0:	beq	24334 <main@@Base+0x1105c>
   242e4:	cmp	r0, #33	; 0x21
   242e8:	bcc	242f4 <main@@Base+0x1101c>
   242ec:	cmp	r0, #58	; 0x3a
   242f0:	bne	245ac <main@@Base+0x112d4>
   242f4:	ldr	r0, [sp, #28]
   242f8:	mov	r2, #0
   242fc:	str	r2, [r0]
   24300:	b	24340 <main@@Base+0x11068>
   24304:	cmp	r0, #34	; 0x22
   24308:	bne	24608 <main@@Base+0x11330>
   2430c:	add	r1, sl, #23
   24310:	ldr	r5, [sp, #24]
   24314:	sub	r0, r8, r1
   24318:	cmp	r0, #2
   2431c:	blt	24374 <main@@Base+0x1109c>
   24320:	ldrb	r0, [r1]
   24324:	cmp	r0, #32
   24328:	bls	24360 <main@@Base+0x11088>
   2432c:	mov	r4, r1
   24330:	b	2438c <main@@Base+0x110b4>
   24334:	cmp	r0, #34	; 0x22
   24338:	bne	245ac <main@@Base+0x112d4>
   2433c:	add	r1, sl, #22
   24340:	sub	r0, r8, r1
   24344:	cmp	r0, #2
   24348:	blt	243f4 <main@@Base+0x1111c>
   2434c:	ldrb	r0, [r1]
   24350:	cmp	r0, #32
   24354:	bls	243e0 <main@@Base+0x11108>
   24358:	mov	r4, r1
   2435c:	b	2440c <main@@Base+0x11134>
   24360:	bne	24374 <main@@Base+0x1109c>
   24364:	mov	r4, r1
   24368:	ldrb	r0, [r4, #1]!
   2436c:	cmp	r0, #32
   24370:	bhi	2438c <main@@Base+0x110b4>
   24374:	mov	r0, r5
   24378:	mov	r2, r8
   2437c:	mov	r4, ip
   24380:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24384:	mov	ip, r4
   24388:	mov	r4, r0
   2438c:	mov	r6, ip
   24390:	cmp	r4, r8
   24394:	beq	243c8 <main@@Base+0x110f0>
   24398:	ldrb	r0, [r4]
   2439c:	cmp	r0, #58	; 0x3a
   243a0:	bne	243c8 <main@@Base+0x110f0>
   243a4:	add	r1, r4, #1
   243a8:	sub	r0, r8, r1
   243ac:	cmp	r0, #2
   243b0:	blt	24470 <main@@Base+0x11198>
   243b4:	ldrb	r0, [r1]
   243b8:	cmp	r0, #32
   243bc:	bls	24460 <main@@Base+0x11188>
   243c0:	mov	r4, r1
   243c4:	b	24480 <main@@Base+0x111a8>
   243c8:	mov	r0, r5
   243cc:	mov	r1, r4
   243d0:	mov	r2, r8
   243d4:	mov	r3, #4
   243d8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   243dc:	b	2447c <main@@Base+0x111a4>
   243e0:	bne	243f4 <main@@Base+0x1111c>
   243e4:	mov	r4, r1
   243e8:	ldrb	r0, [r4, #1]!
   243ec:	cmp	r0, #32
   243f0:	bhi	2440c <main@@Base+0x11134>
   243f4:	ldr	r0, [sp, #24]
   243f8:	mov	r2, r8
   243fc:	mov	r4, ip
   24400:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24404:	mov	ip, r4
   24408:	mov	r4, r0
   2440c:	mov	r7, ip
   24410:	cmp	r4, r8
   24414:	beq	24448 <main@@Base+0x11170>
   24418:	ldrb	r0, [r4]
   2441c:	cmp	r0, #58	; 0x3a
   24420:	bne	24448 <main@@Base+0x11170>
   24424:	add	r1, r4, #1
   24428:	sub	r0, r8, r1
   2442c:	cmp	r0, #2
   24430:	blt	2453c <main@@Base+0x11264>
   24434:	ldrb	r0, [r1]
   24438:	cmp	r0, #32
   2443c:	bls	2452c <main@@Base+0x11254>
   24440:	mov	r4, r1
   24444:	b	2454c <main@@Base+0x11274>
   24448:	ldr	r0, [sp, #24]
   2444c:	mov	r1, r4
   24450:	mov	r2, r8
   24454:	mov	r3, #4
   24458:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2445c:	b	24548 <main@@Base+0x11270>
   24460:	bne	24470 <main@@Base+0x11198>
   24464:	ldrb	r0, [r4, #2]!
   24468:	cmp	r0, #32
   2446c:	bhi	24480 <main@@Base+0x111a8>
   24470:	mov	r0, r5
   24474:	mov	r2, r8
   24478:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2447c:	mov	r4, r0
   24480:	mov	ip, r6
   24484:	cmp	r6, r4
   24488:	beq	24608 <main@@Base+0x11330>
   2448c:	ldr	r9, [sp, #24]
   24490:	mov	r1, #2
   24494:	ldr	r0, [r9]
   24498:	bl	2a60c <flatcc_builder_start_table@@Base>
   2449c:	cmp	r0, #0
   244a0:	bne	27170 <main@@Base+0x13e98>
   244a4:	cmp	r4, r8
   244a8:	beq	244e0 <main@@Base+0x11208>
   244ac:	ldrb	r0, [r4]
   244b0:	cmp	r0, #123	; 0x7b
   244b4:	bne	244e0 <main@@Base+0x11208>
   244b8:	ldr	r6, [sp, #32]
   244bc:	add	r1, r4, #1
   244c0:	sub	r0, r8, r1
   244c4:	cmp	r0, #2
   244c8:	blt	247e4 <main@@Base+0x1150c>
   244cc:	ldrb	r0, [r1]
   244d0:	cmp	r0, #32
   244d4:	bls	247d4 <main@@Base+0x114fc>
   244d8:	mov	r4, r1
   244dc:	b	247f4 <main@@Base+0x1151c>
   244e0:	mov	r0, r9
   244e4:	mov	r1, r4
   244e8:	mov	r2, r8
   244ec:	mov	r3, #21
   244f0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   244f4:	ldr	r6, [sp, #32]
   244f8:	mov	r4, r0
   244fc:	ldr	r0, [sp, #20]
   24500:	ldr	r0, [r0]
   24504:	cmp	r0, #0
   24508:	bne	27170 <main@@Base+0x13e98>
   2450c:	ldr	r0, [r9]
   24510:	bl	2af9c <flatcc_builder_end_table@@Base>
   24514:	cmp	r0, #0
   24518:	beq	27170 <main@@Base+0x13e98>
   2451c:	mov	r7, r0
   24520:	ldr	r0, [r9]
   24524:	mov	r1, #1
   24528:	b	24978 <main@@Base+0x116a0>
   2452c:	bne	2453c <main@@Base+0x11264>
   24530:	ldrb	r0, [r4, #2]!
   24534:	cmp	r0, #32
   24538:	bhi	2454c <main@@Base+0x11274>
   2453c:	ldr	r0, [sp, #24]
   24540:	mov	r2, r8
   24544:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24548:	mov	r4, r0
   2454c:	mov	ip, r7
   24550:	cmp	r7, r4
   24554:	beq	245ac <main@@Base+0x112d4>
   24558:	ldr	r9, [sp, #24]
   2455c:	mov	r1, #9
   24560:	ldr	r0, [r9]
   24564:	bl	2a60c <flatcc_builder_start_table@@Base>
   24568:	cmp	r0, #0
   2456c:	bne	27170 <main@@Base+0x13e98>
   24570:	cmp	r4, r8
   24574:	beq	246dc <main@@Base+0x11404>
   24578:	ldrb	r0, [r4]
   2457c:	cmp	r0, #123	; 0x7b
   24580:	bne	246dc <main@@Base+0x11404>
   24584:	ldr	r6, [sp, #32]
   24588:	add	r1, r4, #1
   2458c:	sub	r0, r8, r1
   24590:	cmp	r0, #2
   24594:	blt	24854 <main@@Base+0x1157c>
   24598:	ldrb	r0, [r1]
   2459c:	cmp	r0, #32
   245a0:	bls	24844 <main@@Base+0x1156c>
   245a4:	mov	r4, r1
   245a8:	b	24864 <main@@Base+0x1158c>
   245ac:	movw	r0, #0
   245b0:	movt	r0, #26418	; 0x6732
   245b4:	add	r0, r0, #65536	; 0x10000
   245b8:	eor	r0, r6, r0
   245bc:	orrs	r0, r0, r5
   245c0:	bne	24608 <main@@Base+0x11330>
   245c4:	cmp	r9, #7
   245c8:	ldr	r9, [sp, #24]
   245cc:	blt	2460c <main@@Base+0x11334>
   245d0:	ldr	r2, [sp, #28]
   245d4:	mov	r1, sl
   245d8:	ldrb	r0, [r1, #22]!
   245dc:	ldr	r2, [r2]
   245e0:	cmp	r2, #0
   245e4:	beq	24728 <main@@Base+0x11450>
   245e8:	cmp	r0, #33	; 0x21
   245ec:	bcc	245f8 <main@@Base+0x11320>
   245f0:	cmp	r0, #58	; 0x3a
   245f4:	bne	2460c <main@@Base+0x11334>
   245f8:	ldr	r0, [sp, #28]
   245fc:	mov	r2, #0
   24600:	str	r2, [r0]
   24604:	b	24734 <main@@Base+0x1145c>
   24608:	ldr	r9, [sp, #24]
   2460c:	mov	r0, r9
   24610:	mov	r1, ip
   24614:	mov	r2, r8
   24618:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   2461c:	ldr	r6, [sp, #32]
   24620:	mov	r4, r0
   24624:	sub	r0, r8, r4
   24628:	cmp	r0, #2
   2462c:	blt	24658 <main@@Base+0x11380>
   24630:	ldrb	r0, [r4]
   24634:	cmp	r0, #32
   24638:	bls	24644 <main@@Base+0x1136c>
   2463c:	mov	r2, r4
   24640:	b	2466c <main@@Base+0x11394>
   24644:	bne	24658 <main@@Base+0x11380>
   24648:	mov	r2, r4
   2464c:	ldrb	r0, [r2, #1]!
   24650:	cmp	r0, #32
   24654:	bhi	2466c <main@@Base+0x11394>
   24658:	mov	r0, r9
   2465c:	mov	r1, r4
   24660:	mov	r2, r8
   24664:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24668:	mov	r2, r0
   2466c:	cmp	r2, r8
   24670:	beq	27084 <main@@Base+0x13dac>
   24674:	ldrb	r0, [r2]
   24678:	cmp	r0, #44	; 0x2c
   2467c:	bne	2708c <main@@Base+0x13db4>
   24680:	add	r1, r2, #1
   24684:	sub	r0, r8, r1
   24688:	cmp	r0, #2
   2468c:	blt	246b4 <main@@Base+0x113dc>
   24690:	ldrb	r0, [r1]
   24694:	cmp	r0, #32
   24698:	bls	246a4 <main@@Base+0x113cc>
   2469c:	mov	r2, r1
   246a0:	b	246c4 <main@@Base+0x113ec>
   246a4:	bne	246b4 <main@@Base+0x113dc>
   246a8:	ldrb	r0, [r2, #2]!
   246ac:	cmp	r0, #32
   246b0:	bhi	246c4 <main@@Base+0x113ec>
   246b4:	mov	r0, r9
   246b8:	mov	r2, r8
   246bc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   246c0:	mov	r2, r0
   246c4:	cmp	r2, r8
   246c8:	beq	270dc <main@@Base+0x13e04>
   246cc:	ldrb	r0, [r2]
   246d0:	cmp	r0, #125	; 0x7d
   246d4:	bne	23f84 <main@@Base+0x10cac>
   246d8:	b	27094 <main@@Base+0x13dbc>
   246dc:	mov	r0, r9
   246e0:	mov	r1, r4
   246e4:	mov	r2, r8
   246e8:	mov	r3, #21
   246ec:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   246f0:	ldr	r6, [sp, #32]
   246f4:	mov	r4, r0
   246f8:	ldr	r0, [sp, #20]
   246fc:	ldr	r0, [r0]
   24700:	cmp	r0, #0
   24704:	bne	27170 <main@@Base+0x13e98>
   24708:	ldr	r0, [r9]
   2470c:	bl	2af9c <flatcc_builder_end_table@@Base>
   24710:	cmp	r0, #0
   24714:	beq	27170 <main@@Base+0x13e98>
   24718:	mov	r7, r0
   2471c:	ldr	r0, [r9]
   24720:	mov	r1, #0
   24724:	b	24978 <main@@Base+0x116a0>
   24728:	cmp	r0, #34	; 0x22
   2472c:	bne	2460c <main@@Base+0x11334>
   24730:	add	r1, sl, #23
   24734:	sub	r0, r8, r1
   24738:	cmp	r0, #2
   2473c:	blt	24768 <main@@Base+0x11490>
   24740:	ldrb	r0, [r1]
   24744:	cmp	r0, #32
   24748:	bls	24754 <main@@Base+0x1147c>
   2474c:	mov	r4, r1
   24750:	b	24780 <main@@Base+0x114a8>
   24754:	bne	24768 <main@@Base+0x11490>
   24758:	mov	r4, r1
   2475c:	ldrb	r0, [r4, #1]!
   24760:	cmp	r0, #32
   24764:	bhi	24780 <main@@Base+0x114a8>
   24768:	mov	r0, r9
   2476c:	mov	r2, r8
   24770:	mov	r4, ip
   24774:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24778:	mov	ip, r4
   2477c:	mov	r4, r0
   24780:	mov	r5, ip
   24784:	cmp	r4, r8
   24788:	beq	247bc <main@@Base+0x114e4>
   2478c:	ldrb	r0, [r4]
   24790:	cmp	r0, #58	; 0x3a
   24794:	bne	247bc <main@@Base+0x114e4>
   24798:	add	r1, r4, #1
   2479c:	sub	r0, r8, r1
   247a0:	cmp	r0, #2
   247a4:	blt	248c4 <main@@Base+0x115ec>
   247a8:	ldrb	r0, [r1]
   247ac:	cmp	r0, #32
   247b0:	bls	248b4 <main@@Base+0x115dc>
   247b4:	mov	r4, r1
   247b8:	b	248d4 <main@@Base+0x115fc>
   247bc:	mov	r0, r9
   247c0:	mov	r1, r4
   247c4:	mov	r2, r8
   247c8:	mov	r3, #4
   247cc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   247d0:	b	248d0 <main@@Base+0x115f8>
   247d4:	bne	247e4 <main@@Base+0x1150c>
   247d8:	ldrb	r0, [r4, #2]!
   247dc:	cmp	r0, #32
   247e0:	bhi	247f4 <main@@Base+0x1151c>
   247e4:	mov	r0, r9
   247e8:	mov	r2, r8
   247ec:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   247f0:	mov	r4, r0
   247f4:	cmp	r4, r8
   247f8:	mov	r2, r8
   247fc:	beq	24ac4 <main@@Base+0x117ec>
   24800:	ldrb	r0, [r4]
   24804:	cmp	r0, #125	; 0x7d
   24808:	bne	2483c <main@@Base+0x11564>
   2480c:	add	r1, r4, #1
   24810:	sub	r0, r8, r1
   24814:	cmp	r0, #2
   24818:	blt	25228 <main@@Base+0x11f50>
   2481c:	ldrb	r0, [r1]
   24820:	cmp	r0, #32
   24824:	bhi	251e8 <main@@Base+0x11f10>
   24828:	bne	25228 <main@@Base+0x11f50>
   2482c:	ldrb	r0, [r4, #2]!
   24830:	cmp	r0, #32
   24834:	bls	25228 <main@@Base+0x11f50>
   24838:	b	244fc <main@@Base+0x11224>
   2483c:	mov	r2, r4
   24840:	b	24ac4 <main@@Base+0x117ec>
   24844:	bne	24854 <main@@Base+0x1157c>
   24848:	ldrb	r0, [r4, #2]!
   2484c:	cmp	r0, #32
   24850:	bhi	24864 <main@@Base+0x1158c>
   24854:	mov	r0, r9
   24858:	mov	r2, r8
   2485c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24860:	mov	r4, r0
   24864:	cmp	r4, r8
   24868:	mov	r2, r8
   2486c:	beq	25c20 <main@@Base+0x12948>
   24870:	ldrb	r0, [r4]
   24874:	cmp	r0, #125	; 0x7d
   24878:	bne	248ac <main@@Base+0x115d4>
   2487c:	add	r1, r4, #1
   24880:	sub	r0, r8, r1
   24884:	cmp	r0, #2
   24888:	blt	27074 <main@@Base+0x13d9c>
   2488c:	ldrb	r0, [r1]
   24890:	cmp	r0, #32
   24894:	bhi	27034 <main@@Base+0x13d5c>
   24898:	bne	27074 <main@@Base+0x13d9c>
   2489c:	ldrb	r0, [r4, #2]!
   248a0:	cmp	r0, #32
   248a4:	bhi	246f8 <main@@Base+0x11420>
   248a8:	b	27074 <main@@Base+0x13d9c>
   248ac:	mov	r2, r4
   248b0:	b	25c20 <main@@Base+0x12948>
   248b4:	bne	248c4 <main@@Base+0x115ec>
   248b8:	ldrb	r0, [r4, #2]!
   248bc:	cmp	r0, #32
   248c0:	bhi	248d4 <main@@Base+0x115fc>
   248c4:	mov	r0, r9
   248c8:	mov	r2, r8
   248cc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   248d0:	mov	r4, r0
   248d4:	mov	ip, r5
   248d8:	cmp	r5, r4
   248dc:	beq	2460c <main@@Base+0x11334>
   248e0:	ldr	r0, [r9]
   248e4:	mov	r1, #2
   248e8:	bl	2a60c <flatcc_builder_start_table@@Base>
   248ec:	cmp	r0, #0
   248f0:	bne	27170 <main@@Base+0x13e98>
   248f4:	cmp	r4, r8
   248f8:	beq	24930 <main@@Base+0x11658>
   248fc:	ldrb	r0, [r4]
   24900:	cmp	r0, #123	; 0x7b
   24904:	bne	24930 <main@@Base+0x11658>
   24908:	ldr	r6, [sp, #32]
   2490c:	add	r1, r4, #1
   24910:	sub	r0, r8, r1
   24914:	cmp	r0, #2
   24918:	blt	2499c <main@@Base+0x116c4>
   2491c:	ldrb	r0, [r1]
   24920:	cmp	r0, #32
   24924:	bls	2498c <main@@Base+0x116b4>
   24928:	mov	r4, r1
   2492c:	b	249ac <main@@Base+0x116d4>
   24930:	mov	r0, r9
   24934:	mov	r1, r4
   24938:	mov	r2, r8
   2493c:	mov	r3, #21
   24940:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   24944:	ldr	r6, [sp, #32]
   24948:	mov	r4, r0
   2494c:	ldr	r0, [sp, #20]
   24950:	ldr	r0, [r0]
   24954:	cmp	r0, #0
   24958:	bne	27170 <main@@Base+0x13e98>
   2495c:	ldr	r0, [r9]
   24960:	bl	2af9c <flatcc_builder_end_table@@Base>
   24964:	cmp	r0, #0
   24968:	beq	27170 <main@@Base+0x13e98>
   2496c:	mov	r7, r0
   24970:	ldr	r0, [r9]
   24974:	mov	r1, #2
   24978:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   2497c:	cmp	r0, #0
   24980:	beq	27110 <main@@Base+0x13e38>
   24984:	str	r7, [r0]
   24988:	b	24624 <main@@Base+0x1134c>
   2498c:	bne	2499c <main@@Base+0x116c4>
   24990:	ldrb	r0, [r4, #2]!
   24994:	cmp	r0, #32
   24998:	bhi	249ac <main@@Base+0x116d4>
   2499c:	mov	r0, r9
   249a0:	mov	r2, r8
   249a4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   249a8:	mov	r4, r0
   249ac:	cmp	r4, r8
   249b0:	mov	r2, r8
   249b4:	beq	252f8 <main@@Base+0x12020>
   249b8:	ldrb	r0, [r4]
   249bc:	cmp	r0, #125	; 0x7d
   249c0:	bne	249f4 <main@@Base+0x1171c>
   249c4:	add	r1, r4, #1
   249c8:	sub	r0, r8, r1
   249cc:	cmp	r0, #2
   249d0:	blt	25b50 <main@@Base+0x12878>
   249d4:	ldrb	r0, [r1]
   249d8:	cmp	r0, #32
   249dc:	bhi	25b08 <main@@Base+0x12830>
   249e0:	bne	25b50 <main@@Base+0x12878>
   249e4:	ldrb	r0, [r4, #2]!
   249e8:	cmp	r0, #32
   249ec:	bls	25b50 <main@@Base+0x12878>
   249f0:	b	2494c <main@@Base+0x11674>
   249f4:	mov	r2, r4
   249f8:	b	252f8 <main@@Base+0x12020>
   249fc:	mov	r4, r8
   24a00:	b	24a48 <main@@Base+0x11770>
   24a04:	mov	r4, r7
   24a08:	b	24a48 <main@@Base+0x11770>
   24a0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24a10:	cmp	r0, #0
   24a14:	beq	24a38 <main@@Base+0x11760>
   24a18:	ldr	r9, [sp, #24]
   24a1c:	mov	r1, r4
   24a20:	mov	r2, r8
   24a24:	mov	r3, #7
   24a28:	mov	r0, r9
   24a2c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   24a30:	mov	r4, r0
   24a34:	b	24a44 <main@@Base+0x1176c>
   24a38:	ldr	r5, [fp, #-40]	; 0xffffffd8
   24a3c:	ldr	r9, [sp, #24]
   24a40:	str	r5, [fp, #-44]	; 0xffffffd4
   24a44:	ldr	r6, [sp, #32]
   24a48:	cmp	r7, r4
   24a4c:	bne	24a8c <main@@Base+0x117b4>
   24a50:	movw	r3, #16960	; 0x4240
   24a54:	sub	r0, fp, #44	; 0x2c
   24a58:	mov	r1, r7
   24a5c:	mov	r2, r8
   24a60:	str	r0, [sp]
   24a64:	mov	r0, r9
   24a68:	movt	r3, #4
   24a6c:	bl	22d58 <main@@Base+0xfa80>
   24a70:	mov	r4, r0
   24a74:	cmp	r0, r7
   24a78:	cmpne	r4, r8
   24a7c:	beq	2716c <main@@Base+0x13e94>
   24a80:	ldr	r5, [fp, #-44]	; 0xffffffd4
   24a84:	ldr	r9, [sp, #24]
   24a88:	ldr	r6, [sp, #32]
   24a8c:	cmp	r5, #0
   24a90:	bne	24aa0 <main@@Base+0x117c8>
   24a94:	ldrb	r0, [r9, #8]
   24a98:	tst	r0, #2
   24a9c:	beq	25104 <main@@Base+0x11e2c>
   24aa0:	ldr	r0, [r9]
   24aa4:	mov	r1, #1
   24aa8:	mov	r2, #4
   24aac:	mov	r3, #4
   24ab0:	bl	2b8dc <flatcc_builder_table_add@@Base>
   24ab4:	cmp	r0, #0
   24ab8:	beq	2716c <main@@Base+0x13e94>
   24abc:	str	r5, [r0]
   24ac0:	b	25104 <main@@Base+0x11e2c>
   24ac4:	cmp	r2, r8
   24ac8:	mov	r1, r8
   24acc:	beq	24b24 <main@@Base+0x1184c>
   24ad0:	ldrb	r0, [r2]
   24ad4:	cmp	r0, #46	; 0x2e
   24ad8:	beq	24af8 <main@@Base+0x11820>
   24adc:	cmp	r0, #34	; 0x22
   24ae0:	bne	24b14 <main@@Base+0x1183c>
   24ae4:	ldr	r0, [sp, #28]
   24ae8:	mov	r1, #0
   24aec:	str	r1, [r0]
   24af0:	add	r1, r2, #1
   24af4:	b	24b24 <main@@Base+0x1184c>
   24af8:	mov	r1, r2
   24afc:	mov	r0, r9
   24b00:	mov	r2, r8
   24b04:	mov	r3, #5
   24b08:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   24b0c:	mov	r1, r0
   24b10:	b	24b24 <main@@Base+0x1184c>
   24b14:	ldr	r0, [sp, #28]
   24b18:	mov	r1, #1
   24b1c:	str	r1, [r0]
   24b20:	mov	r1, r2
   24b24:	sub	r0, r8, r1
   24b28:	mov	r2, #8
   24b2c:	cmp	r0, #8
   24b30:	movcs	r0, r2
   24b34:	and	r0, r0, #15
   24b38:	sub	r7, r0, #1
   24b3c:	cmp	r7, #7
   24b40:	bhi	24d28 <main@@Base+0x11a50>
   24b44:	add	r0, pc, #32
   24b48:	mov	r9, #0
   24b4c:	mov	ip, #0
   24b50:	mov	lr, #0
   24b54:	mov	sl, #0
   24b58:	mov	r3, #0
   24b5c:	mov	r5, #0
   24b60:	mov	r2, #0
   24b64:	mov	r4, #0
   24b68:	ldr	pc, [r0, r7, lsl #2]
   24b6c:	ldrdeq	r4, [r2], -r0
   24b70:	andeq	r4, r2, r8, asr #23
   24b74:	andeq	r4, r2, r0, asr #23
   24b78:			; <UNDEFINED> instruction: 0x00024bb8
   24b7c:	andeq	r4, r2, ip, lsr #23
   24b80:	andeq	r4, r2, r0, lsr #23
   24b84:	muleq	r2, r0, fp
   24b88:	andeq	r4, r2, ip, lsl #23
   24b8c:	ldrb	ip, [r1, #7]
   24b90:	ldrb	r0, [r1, #6]
   24b94:	mov	lr, r9
   24b98:	orr	r0, ip, r0, lsl #8
   24b9c:	mov	r9, r0
   24ba0:	ldrb	r0, [r1, #5]
   24ba4:	mov	sl, lr
   24ba8:	orr	r9, r9, r0, lsl #16
   24bac:	ldrb	r0, [r1, #4]
   24bb0:	mov	r3, sl
   24bb4:	orr	r9, r9, r0, lsl #24
   24bb8:	ldrb	r0, [r1, #3]
   24bbc:	orr	r5, r0, r3
   24bc0:	ldrb	r0, [r1, #2]
   24bc4:	orr	r2, r5, r0, lsl #8
   24bc8:	ldrb	r0, [r1, #1]
   24bcc:	orr	r4, r2, r0, lsl #16
   24bd0:	ldrb	r2, [r1]
   24bd4:	movw	r0, #25186	; 0x6262
   24bd8:	movw	r3, #24929	; 0x6161
   24bdc:	movt	r0, #24418	; 0x5f62
   24be0:	movt	r3, #24929	; 0x6161
   24be4:	eor	r0, r9, r0
   24be8:	ldr	r9, [sp, #24]
   24bec:	orr	r2, r4, r2, lsl #24
   24bf0:	eor	r2, r2, r3
   24bf4:	orrs	r0, r0, r2
   24bf8:	bne	24d28 <main@@Base+0x11a50>
   24bfc:	add	r4, r1, #8
   24c00:	mov	r0, #8
   24c04:	sub	lr, r8, r4
   24c08:	cmp	lr, #8
   24c0c:	movcc	r0, lr
   24c10:	and	r0, r0, #15
   24c14:	sub	ip, r0, #1
   24c18:	cmp	ip, #7
   24c1c:	bhi	250f0 <main@@Base+0x11e18>
   24c20:	str	r4, [sp, #8]
   24c24:	add	r9, pc, #32
   24c28:	mov	r2, #0
   24c2c:	mov	r6, #0
   24c30:	mov	sl, #0
   24c34:	mov	r5, #0
   24c38:	mov	r7, #0
   24c3c:	mov	r4, #0
   24c40:	mov	r0, #0
   24c44:	mov	r3, #0
   24c48:	ldr	pc, [r9, ip, lsl #2]
   24c4c:			; <UNDEFINED> instruction: 0x00024cb0
   24c50:	andeq	r4, r2, r8, lsr #25
   24c54:	andeq	r4, r2, r0, lsr #25
   24c58:	muleq	r2, r8, ip
   24c5c:	andeq	r4, r2, ip, lsl #25
   24c60:	andeq	r4, r2, r0, lsl #25
   24c64:	andeq	r4, r2, r0, ror ip
   24c68:	andeq	r4, r2, ip, ror #24
   24c6c:	ldrb	r6, [r1, #15]
   24c70:	ldrb	r0, [r1, #14]
   24c74:	mov	sl, r2
   24c78:	orr	r0, r6, r0, lsl #8
   24c7c:	mov	r2, r0
   24c80:	ldrb	r0, [r1, #13]
   24c84:	mov	r5, sl
   24c88:	orr	r2, r2, r0, lsl #16
   24c8c:	ldrb	r0, [r1, #12]
   24c90:	mov	r7, r5
   24c94:	orr	r2, r2, r0, lsl #24
   24c98:	ldrb	r0, [r1, #11]
   24c9c:	orr	r4, r0, r7
   24ca0:	ldrb	r0, [r1, #10]
   24ca4:	orr	r0, r4, r0, lsl #8
   24ca8:	ldrb	r3, [r1, #9]
   24cac:	orr	r3, r0, r3, lsl #16
   24cb0:	ldr	r4, [sp, #8]
   24cb4:	movw	r7, #29440	; 0x7300
   24cb8:	bic	r0, r2, #255	; 0xff
   24cbc:	movt	r7, #25968	; 0x6570
   24cc0:	eor	r7, r0, r7
   24cc4:	ldrb	r0, [r4]
   24cc8:	orr	r0, r3, r0, lsl #24
   24ccc:	movw	r3, #29556	; 0x7374
   24cd0:	movt	r3, #25183	; 0x625f
   24cd4:	eor	r0, r0, r3
   24cd8:	orrs	r3, r7, r0
   24cdc:	bne	24d30 <main@@Base+0x11a58>
   24ce0:	ldr	r9, [sp, #24]
   24ce4:	ldr	r6, [sp, #32]
   24ce8:	cmp	lr, #8
   24cec:	blt	250f0 <main@@Base+0x11e18>
   24cf0:	ldr	r3, [sp, #28]
   24cf4:	mov	r2, r1
   24cf8:	ldrb	r0, [r2, #15]!
   24cfc:	ldr	r3, [r3]
   24d00:	cmp	r3, #0
   24d04:	beq	24d8c <main@@Base+0x11ab4>
   24d08:	cmp	r0, #33	; 0x21
   24d0c:	bcc	24d18 <main@@Base+0x11a40>
   24d10:	cmp	r0, #58	; 0x3a
   24d14:	bne	250f0 <main@@Base+0x11e18>
   24d18:	ldr	r0, [sp, #28]
   24d1c:	mov	r1, #0
   24d20:	str	r1, [r0]
   24d24:	b	24d98 <main@@Base+0x11ac0>
   24d28:	mov	r0, r9
   24d2c:	b	250f8 <main@@Base+0x11e20>
   24d30:	movw	r3, #29791	; 0x745f
   24d34:	ldr	r9, [sp, #24]
   24d38:	ldr	r6, [sp, #32]
   24d3c:	movt	r3, #24946	; 0x6172
   24d40:	eor	r2, r2, r3
   24d44:	orrs	r0, r2, r0
   24d48:	bne	250f0 <main@@Base+0x11e18>
   24d4c:	cmp	lr, #9
   24d50:	blt	250f0 <main@@Base+0x11e18>
   24d54:	ldr	r3, [sp, #28]
   24d58:	mov	r2, r1
   24d5c:	ldrb	r0, [r2, #16]!
   24d60:	ldr	r3, [r3]
   24d64:	cmp	r3, #0
   24d68:	beq	24db8 <main@@Base+0x11ae0>
   24d6c:	cmp	r0, #33	; 0x21
   24d70:	bcc	24d7c <main@@Base+0x11aa4>
   24d74:	cmp	r0, #58	; 0x3a
   24d78:	bne	250f0 <main@@Base+0x11e18>
   24d7c:	ldr	r0, [sp, #28]
   24d80:	mov	r1, #0
   24d84:	str	r1, [r0]
   24d88:	b	24dc4 <main@@Base+0x11aec>
   24d8c:	cmp	r0, #34	; 0x22
   24d90:	bne	250f0 <main@@Base+0x11e18>
   24d94:	add	r2, r1, #16
   24d98:	sub	r0, r8, r2
   24d9c:	cmp	r0, #2
   24da0:	blt	24df8 <main@@Base+0x11b20>
   24da4:	ldrb	r0, [r2]
   24da8:	cmp	r0, #32
   24dac:	bls	24de4 <main@@Base+0x11b0c>
   24db0:	mov	r7, r2
   24db4:	b	24e0c <main@@Base+0x11b34>
   24db8:	cmp	r0, #34	; 0x22
   24dbc:	bne	250f0 <main@@Base+0x11e18>
   24dc0:	add	r2, r1, #17
   24dc4:	sub	r0, r8, r2
   24dc8:	cmp	r0, #2
   24dcc:	blt	24e70 <main@@Base+0x11b98>
   24dd0:	ldrb	r0, [r2]
   24dd4:	cmp	r0, #32
   24dd8:	bls	24e5c <main@@Base+0x11b84>
   24ddc:	mov	r7, r2
   24de0:	b	24e84 <main@@Base+0x11bac>
   24de4:	bne	24df8 <main@@Base+0x11b20>
   24de8:	mov	r7, r2
   24dec:	ldrb	r0, [r7, #1]!
   24df0:	cmp	r0, #32
   24df4:	bhi	24e0c <main@@Base+0x11b34>
   24df8:	mov	r1, r2
   24dfc:	mov	r0, r9
   24e00:	mov	r2, r8
   24e04:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24e08:	mov	r7, r0
   24e0c:	cmp	r7, r8
   24e10:	beq	24e44 <main@@Base+0x11b6c>
   24e14:	ldrb	r0, [r7]
   24e18:	cmp	r0, #58	; 0x3a
   24e1c:	bne	24e44 <main@@Base+0x11b6c>
   24e20:	add	r1, r7, #1
   24e24:	sub	r0, r8, r1
   24e28:	cmp	r0, #2
   24e2c:	blt	24ef0 <main@@Base+0x11c18>
   24e30:	ldrb	r0, [r1]
   24e34:	cmp	r0, #32
   24e38:	bls	24ee0 <main@@Base+0x11c08>
   24e3c:	mov	r7, r1
   24e40:	b	24f00 <main@@Base+0x11c28>
   24e44:	mov	r0, r9
   24e48:	mov	r1, r7
   24e4c:	mov	r2, r8
   24e50:	mov	r3, #4
   24e54:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   24e58:	b	24efc <main@@Base+0x11c24>
   24e5c:	bne	24e70 <main@@Base+0x11b98>
   24e60:	mov	r7, r2
   24e64:	ldrb	r0, [r7, #1]!
   24e68:	cmp	r0, #32
   24e6c:	bhi	24e84 <main@@Base+0x11bac>
   24e70:	mov	r1, r2
   24e74:	mov	r0, r9
   24e78:	mov	r2, r8
   24e7c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24e80:	mov	r7, r0
   24e84:	cmp	r7, r8
   24e88:	beq	24ec8 <main@@Base+0x11bf0>
   24e8c:	ldrb	r0, [r7]
   24e90:	cmp	r0, #58	; 0x3a
   24e94:	bne	24ec8 <main@@Base+0x11bf0>
   24e98:	add	r1, r7, #1
   24e9c:	sub	r0, r8, r1
   24ea0:	cmp	r0, #2
   24ea4:	blt	2506c <main@@Base+0x11d94>
   24ea8:	ldrb	r0, [r1]
   24eac:	cmp	r0, #32
   24eb0:	bls	25050 <main@@Base+0x11d78>
   24eb4:	ldr	r9, [sp, #24]
   24eb8:	ldr	r6, [sp, #32]
   24ebc:	ldr	r4, [sp, #8]
   24ec0:	mov	r7, r1
   24ec4:	b	2507c <main@@Base+0x11da4>
   24ec8:	mov	r0, r9
   24ecc:	mov	r1, r7
   24ed0:	mov	r2, r8
   24ed4:	mov	r3, #4
   24ed8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   24edc:	b	25078 <main@@Base+0x11da0>
   24ee0:	bne	24ef0 <main@@Base+0x11c18>
   24ee4:	ldrb	r0, [r7, #2]!
   24ee8:	cmp	r0, #32
   24eec:	bhi	24f00 <main@@Base+0x11c28>
   24ef0:	mov	r0, r9
   24ef4:	mov	r2, r8
   24ef8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   24efc:	mov	r7, r0
   24f00:	cmp	r4, r7
   24f04:	beq	250f0 <main@@Base+0x11e18>
   24f08:	mov	r5, #0
   24f0c:	cmp	r7, r8
   24f10:	str	r5, [fp, #-36]	; 0xffffffdc
   24f14:	str	r5, [fp, #-40]	; 0xffffffd8
   24f18:	str	r5, [sp, #44]	; 0x2c
   24f1c:	str	r5, [sp, #40]	; 0x28
   24f20:	str	r5, [fp, #-44]	; 0xffffffd4
   24f24:	beq	24f80 <main@@Base+0x11ca8>
   24f28:	sub	r0, fp, #40	; 0x28
   24f2c:	mov	r1, r7
   24f30:	mov	r2, r8
   24f34:	sub	r3, fp, #44	; 0x2c
   24f38:	str	r0, [sp]
   24f3c:	mov	r0, r9
   24f40:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   24f44:	cmp	r0, r7
   24f48:	beq	24f8c <main@@Base+0x11cb4>
   24f4c:	sub	sl, fp, #44	; 0x2c
   24f50:	mov	r4, r0
   24f54:	ldm	sl, {r0, r5, sl}
   24f58:	cmp	r0, #0
   24f5c:	beq	24f9c <main@@Base+0x11cc4>
   24f60:	subs	r0, r5, #1
   24f64:	sbcs	r0, sl, #-2147483648	; 0x80000000
   24f68:	bcc	24fc8 <main@@Base+0x11cf0>
   24f6c:	mov	r0, r9
   24f70:	mov	r1, r4
   24f74:	mov	r2, r8
   24f78:	mov	r3, #8
   24f7c:	b	24fb4 <main@@Base+0x11cdc>
   24f80:	mov	sl, #0
   24f84:	mov	r4, r8
   24f88:	b	24fd8 <main@@Base+0x11d00>
   24f8c:	mov	r5, #0
   24f90:	mov	sl, #0
   24f94:	mov	r4, r7
   24f98:	b	24fd8 <main@@Base+0x11d00>
   24f9c:	cmn	sl, #1
   24fa0:	bgt	24fd0 <main@@Base+0x11cf8>
   24fa4:	mov	r0, r9
   24fa8:	mov	r1, r4
   24fac:	mov	r2, r8
   24fb0:	mov	r3, #7
   24fb4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   24fb8:	mov	r4, r0
   24fbc:	mov	r5, #0
   24fc0:	mov	sl, #0
   24fc4:	b	24fd8 <main@@Base+0x11d00>
   24fc8:	rsbs	r5, r5, #0
   24fcc:	rsc	sl, sl, #0
   24fd0:	str	r5, [sp, #40]	; 0x28
   24fd4:	str	sl, [sp, #44]	; 0x2c
   24fd8:	cmp	r7, r4
   24fdc:	bne	25018 <main@@Base+0x11d40>
   24fe0:	movw	r3, #16948	; 0x4234
   24fe4:	add	r0, sp, #40	; 0x28
   24fe8:	mov	r1, r7
   24fec:	mov	r2, r8
   24ff0:	str	r0, [sp]
   24ff4:	mov	r0, r9
   24ff8:	movt	r3, #4
   24ffc:	bl	22b10 <main@@Base+0xf838>
   25000:	mov	r4, r0
   25004:	cmp	r0, r7
   25008:	cmpne	r4, r8
   2500c:	beq	2716c <main@@Base+0x13e94>
   25010:	ldr	r5, [sp, #40]	; 0x28
   25014:	ldr	sl, [sp, #44]	; 0x2c
   25018:	orrs	r0, r5, sl
   2501c:	bne	2502c <main@@Base+0x11d54>
   25020:	ldrb	r0, [r9, #8]
   25024:	tst	r0, #2
   25028:	beq	25104 <main@@Base+0x11e2c>
   2502c:	ldr	r0, [r9]
   25030:	mov	r1, #0
   25034:	mov	r2, #8
   25038:	mov	r3, #8
   2503c:	bl	2b8dc <flatcc_builder_table_add@@Base>
   25040:	cmp	r0, #0
   25044:	beq	2716c <main@@Base+0x13e94>
   25048:	stm	r0, {r5, sl}
   2504c:	b	25104 <main@@Base+0x11e2c>
   25050:	ldr	r9, [sp, #24]
   25054:	ldr	r6, [sp, #32]
   25058:	ldr	r4, [sp, #8]
   2505c:	bne	2506c <main@@Base+0x11d94>
   25060:	ldrb	r0, [r7, #2]!
   25064:	cmp	r0, #32
   25068:	bhi	2507c <main@@Base+0x11da4>
   2506c:	mov	r0, r9
   25070:	mov	r2, r8
   25074:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25078:	mov	r7, r0
   2507c:	cmp	r4, r7
   25080:	beq	250f0 <main@@Base+0x11e18>
   25084:	mov	r5, #0
   25088:	cmp	r7, r8
   2508c:	str	r5, [fp, #-36]	; 0xffffffdc
   25090:	str	r5, [fp, #-40]	; 0xffffffd8
   25094:	str	r5, [fp, #-44]	; 0xffffffd4
   25098:	str	r5, [sp, #40]	; 0x28
   2509c:	beq	249fc <main@@Base+0x11724>
   250a0:	sub	r0, fp, #40	; 0x28
   250a4:	mov	r1, r7
   250a8:	mov	r2, r8
   250ac:	add	r3, sp, #40	; 0x28
   250b0:	str	r0, [sp]
   250b4:	mov	r0, r9
   250b8:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   250bc:	cmp	r0, r7
   250c0:	beq	24a04 <main@@Base+0x1172c>
   250c4:	mov	r4, r0
   250c8:	ldr	r0, [sp, #40]	; 0x28
   250cc:	cmp	r0, #0
   250d0:	beq	24a0c <main@@Base+0x11734>
   250d4:	mov	r0, r9
   250d8:	mov	r1, r4
   250dc:	mov	r2, r8
   250e0:	mov	r3, #8
   250e4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   250e8:	mov	r4, r0
   250ec:	b	24a48 <main@@Base+0x11770>
   250f0:	mov	r0, r9
   250f4:	mov	r1, r4
   250f8:	mov	r2, r8
   250fc:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   25100:	mov	r4, r0
   25104:	sub	r0, r8, r4
   25108:	cmp	r0, #2
   2510c:	blt	25138 <main@@Base+0x11e60>
   25110:	ldrb	r0, [r4]
   25114:	cmp	r0, #32
   25118:	bls	25124 <main@@Base+0x11e4c>
   2511c:	mov	r2, r4
   25120:	b	2514c <main@@Base+0x11e74>
   25124:	bne	25138 <main@@Base+0x11e60>
   25128:	mov	r2, r4
   2512c:	ldrb	r0, [r2, #1]!
   25130:	cmp	r0, #32
   25134:	bhi	2514c <main@@Base+0x11e74>
   25138:	mov	r0, r9
   2513c:	mov	r1, r4
   25140:	mov	r2, r8
   25144:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25148:	mov	r2, r0
   2514c:	cmp	r2, r8
   25150:	beq	251bc <main@@Base+0x11ee4>
   25154:	ldrb	r0, [r2]
   25158:	cmp	r0, #44	; 0x2c
   2515c:	bne	251c4 <main@@Base+0x11eec>
   25160:	add	r1, r2, #1
   25164:	sub	r0, r8, r1
   25168:	cmp	r0, #2
   2516c:	blt	25194 <main@@Base+0x11ebc>
   25170:	ldrb	r0, [r1]
   25174:	cmp	r0, #32
   25178:	bls	25184 <main@@Base+0x11eac>
   2517c:	mov	r2, r1
   25180:	b	251a4 <main@@Base+0x11ecc>
   25184:	bne	25194 <main@@Base+0x11ebc>
   25188:	ldrb	r0, [r2, #2]!
   2518c:	cmp	r0, #32
   25190:	bhi	251a4 <main@@Base+0x11ecc>
   25194:	mov	r0, r9
   25198:	mov	r2, r8
   2519c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   251a0:	mov	r2, r0
   251a4:	cmp	r2, r8
   251a8:	beq	251f0 <main@@Base+0x11f18>
   251ac:	ldrb	r0, [r2]
   251b0:	cmp	r0, #125	; 0x7d
   251b4:	bne	24ac4 <main@@Base+0x117ec>
   251b8:	b	251cc <main@@Base+0x11ef4>
   251bc:	mov	r4, r8
   251c0:	b	244fc <main@@Base+0x11224>
   251c4:	cmp	r0, #125	; 0x7d
   251c8:	bne	251fc <main@@Base+0x11f24>
   251cc:	add	r1, r2, #1
   251d0:	sub	r0, r8, r1
   251d4:	cmp	r0, #2
   251d8:	blt	25228 <main@@Base+0x11f50>
   251dc:	ldrb	r0, [r1]
   251e0:	cmp	r0, #32
   251e4:	bls	25214 <main@@Base+0x11f3c>
   251e8:	mov	r4, r1
   251ec:	b	244fc <main@@Base+0x11224>
   251f0:	mov	r0, r9
   251f4:	mov	r1, r8
   251f8:	b	25204 <main@@Base+0x11f2c>
   251fc:	mov	r0, r9
   25200:	mov	r1, r2
   25204:	mov	r2, r8
   25208:	mov	r3, #10
   2520c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   25210:	b	244f8 <main@@Base+0x11220>
   25214:	bne	25228 <main@@Base+0x11f50>
   25218:	ldrb	r0, [r2, #2]!
   2521c:	cmp	r0, #32
   25220:	mov	r4, r2
   25224:	bhi	244fc <main@@Base+0x11224>
   25228:	mov	r0, r9
   2522c:	mov	r2, r8
   25230:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25234:	b	244f8 <main@@Base+0x11220>
   25238:	mov	r4, r8
   2523c:	b	2526c <main@@Base+0x11f94>
   25240:	mov	r4, r7
   25244:	b	2526c <main@@Base+0x11f94>
   25248:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2524c:	cmp	r0, #0
   25250:	beq	252ec <main@@Base+0x12014>
   25254:	ldr	r0, [sp, #24]
   25258:	mov	r1, r4
   2525c:	mov	r2, r8
   25260:	mov	r3, #7
   25264:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   25268:	mov	r4, r0
   2526c:	ldr	r9, [sp, #24]
   25270:	cmp	r7, r4
   25274:	bne	252b0 <main@@Base+0x11fd8>
   25278:	movw	r3, #17044	; 0x4294
   2527c:	sub	r0, fp, #44	; 0x2c
   25280:	mov	r1, r7
   25284:	mov	r2, r8
   25288:	str	r0, [sp]
   2528c:	mov	r0, r9
   25290:	movt	r3, #4
   25294:	bl	22d58 <main@@Base+0xfa80>
   25298:	mov	r4, r0
   2529c:	cmp	r0, r7
   252a0:	cmpne	r4, r8
   252a4:	beq	2716c <main@@Base+0x13e94>
   252a8:	ldr	r5, [fp, #-44]	; 0xffffffd4
   252ac:	ldr	r9, [sp, #24]
   252b0:	cmp	r5, #0
   252b4:	bne	252c4 <main@@Base+0x11fec>
   252b8:	ldrb	r0, [r9, #8]
   252bc:	tst	r0, #2
   252c0:	beq	252e4 <main@@Base+0x1200c>
   252c4:	ldr	r0, [r9]
   252c8:	mov	r1, #1
   252cc:	mov	r2, #4
   252d0:	mov	r3, #4
   252d4:	bl	2b8dc <flatcc_builder_table_add@@Base>
   252d8:	cmp	r0, #0
   252dc:	beq	2716c <main@@Base+0x13e94>
   252e0:	str	r5, [r0]
   252e4:	ldr	r6, [sp, #32]
   252e8:	b	25a00 <main@@Base+0x12728>
   252ec:	ldr	r5, [fp, #-40]	; 0xffffffd8
   252f0:	str	r5, [fp, #-44]	; 0xffffffd4
   252f4:	b	2526c <main@@Base+0x11f94>
   252f8:	cmp	r2, r8
   252fc:	mov	r1, r8
   25300:	beq	25358 <main@@Base+0x12080>
   25304:	ldrb	r0, [r2]
   25308:	cmp	r0, #46	; 0x2e
   2530c:	beq	2532c <main@@Base+0x12054>
   25310:	cmp	r0, #34	; 0x22
   25314:	bne	25348 <main@@Base+0x12070>
   25318:	ldr	r0, [sp, #28]
   2531c:	mov	r1, #0
   25320:	str	r1, [r0]
   25324:	add	r1, r2, #1
   25328:	b	25358 <main@@Base+0x12080>
   2532c:	mov	r1, r2
   25330:	mov	r0, r9
   25334:	mov	r2, r8
   25338:	mov	r3, #5
   2533c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   25340:	mov	r1, r0
   25344:	b	25358 <main@@Base+0x12080>
   25348:	ldr	r0, [sp, #28]
   2534c:	mov	r1, #1
   25350:	str	r1, [r0]
   25354:	mov	r1, r2
   25358:	sub	r0, r8, r1
   2535c:	mov	r2, #8
   25360:	cmp	r0, #8
   25364:	movcs	r0, r2
   25368:	and	r0, r0, #15
   2536c:	sub	r7, r0, #1
   25370:	cmp	r7, #7
   25374:	bhi	255fc <main@@Base+0x12324>
   25378:	add	r0, pc, #32
   2537c:	mov	r9, #0
   25380:	mov	ip, #0
   25384:	mov	lr, #0
   25388:	mov	sl, #0
   2538c:	mov	r3, #0
   25390:	mov	r5, #0
   25394:	mov	r2, #0
   25398:	mov	r4, #0
   2539c:	ldr	pc, [r0, r7, lsl #2]
   253a0:	andeq	r5, r2, r4, lsl #8
   253a4:	strdeq	r5, [r2], -ip
   253a8:	strdeq	r5, [r2], -r4
   253ac:	andeq	r5, r2, ip, ror #7
   253b0:	andeq	r5, r2, r0, ror #7
   253b4:	ldrdeq	r5, [r2], -r4
   253b8:	andeq	r5, r2, r4, asr #7
   253bc:	andeq	r5, r2, r0, asr #7
   253c0:	ldrb	ip, [r1, #7]
   253c4:	ldrb	r0, [r1, #6]
   253c8:	mov	lr, r9
   253cc:	orr	r0, ip, r0, lsl #8
   253d0:	mov	r9, r0
   253d4:	ldrb	r0, [r1, #5]
   253d8:	mov	sl, lr
   253dc:	orr	r9, r9, r0, lsl #16
   253e0:	ldrb	r0, [r1, #4]
   253e4:	mov	r3, sl
   253e8:	orr	r9, r9, r0, lsl #24
   253ec:	ldrb	r0, [r1, #3]
   253f0:	orr	r5, r0, r3
   253f4:	ldrb	r0, [r1, #2]
   253f8:	orr	r2, r5, r0, lsl #8
   253fc:	ldrb	r0, [r1, #1]
   25400:	orr	r4, r2, r0, lsl #16
   25404:	ldrb	r2, [r1]
   25408:	movw	r0, #25186	; 0x6262
   2540c:	movw	r3, #24929	; 0x6161
   25410:	movt	r0, #24418	; 0x5f62
   25414:	movt	r3, #24929	; 0x6161
   25418:	eor	r0, r9, r0
   2541c:	ldr	r9, [sp, #24]
   25420:	orr	r2, r4, r2, lsl #24
   25424:	eor	r2, r2, r3
   25428:	orrs	r0, r0, r2
   2542c:	bne	255fc <main@@Base+0x12324>
   25430:	add	r4, r1, #8
   25434:	mov	r0, #8
   25438:	sub	lr, r8, r4
   2543c:	cmp	lr, #8
   25440:	movcc	r0, lr
   25444:	and	r0, r0, #15
   25448:	sub	ip, r0, #1
   2544c:	cmp	ip, #7
   25450:	bhi	2586c <main@@Base+0x12594>
   25454:	str	r4, [sp, #8]
   25458:	add	r9, pc, #32
   2545c:	mov	r2, #0
   25460:	mov	r6, #0
   25464:	mov	sl, #0
   25468:	mov	r5, #0
   2546c:	mov	r7, #0
   25470:	mov	r4, #0
   25474:	mov	r0, #0
   25478:	mov	r3, #0
   2547c:	ldr	pc, [r9, ip, lsl #2]
   25480:	andeq	r5, r2, r4, ror #9
   25484:	ldrdeq	r5, [r2], -ip
   25488:	ldrdeq	r5, [r2], -r4
   2548c:	andeq	r5, r2, ip, asr #9
   25490:	andeq	r5, r2, r0, asr #9
   25494:			; <UNDEFINED> instruction: 0x000254b4
   25498:	andeq	r5, r2, r4, lsr #9
   2549c:	andeq	r5, r2, r0, lsr #9
   254a0:	ldrb	r6, [r1, #15]
   254a4:	ldrb	r0, [r1, #14]
   254a8:	mov	sl, r2
   254ac:	orr	r0, r6, r0, lsl #8
   254b0:	mov	r2, r0
   254b4:	ldrb	r0, [r1, #13]
   254b8:	mov	r5, sl
   254bc:	orr	r2, r2, r0, lsl #16
   254c0:	ldrb	r0, [r1, #12]
   254c4:	mov	r7, r5
   254c8:	orr	r2, r2, r0, lsl #24
   254cc:	ldrb	r0, [r1, #11]
   254d0:	orr	r4, r0, r7
   254d4:	ldrb	r0, [r1, #10]
   254d8:	orr	r0, r4, r0, lsl #8
   254dc:	ldrb	r3, [r1, #9]
   254e0:	orr	r3, r0, r3, lsl #16
   254e4:	ldr	r4, [sp, #8]
   254e8:	movw	r0, #29791	; 0x745f
   254ec:	movt	r0, #24946	; 0x6172
   254f0:	eor	r7, r2, r0
   254f4:	ldrb	r0, [r4]
   254f8:	orr	r0, r3, r0, lsl #24
   254fc:	movw	r3, #29556	; 0x7374
   25500:	movt	r3, #25183	; 0x625f
   25504:	eor	r0, r0, r3
   25508:	orrs	r3, r7, r0
   2550c:	bne	25604 <main@@Base+0x1232c>
   25510:	add	r9, r1, #16
   25514:	mov	r2, #8
   25518:	ldr	r6, [sp, #32]
   2551c:	sub	ip, r8, r9
   25520:	cmp	ip, #8
   25524:	movcc	r2, ip
   25528:	and	r2, r2, #15
   2552c:	sub	r7, r2, #1
   25530:	cmp	r7, #7
   25534:	bhi	259e8 <main@@Base+0x12710>
   25538:	add	r0, pc, #20
   2553c:	mov	lr, #0
   25540:	mov	r3, #0
   25544:	mov	r2, #0
   25548:	mov	r5, #0
   2554c:	mov	r4, #0
   25550:	ldr	pc, [r0, r7, lsl #2]
   25554:	muleq	r2, r8, r5
   25558:	muleq	r2, r0, r5
   2555c:	andeq	r5, r2, r8, lsl #11
   25560:	andeq	r5, r2, ip, ror r5
   25564:	andeq	r5, r2, r4, ror r5
   25568:	andeq	r5, r2, r4, ror r5
   2556c:	andeq	r5, r2, r4, ror r5
   25570:	andeq	r5, r2, r4, ror r5
   25574:	ldrb	r0, [r1, #20]
   25578:	lsl	r3, r0, #24
   2557c:	ldrb	r0, [r1, #19]
   25580:	orr	r2, r0, lr
   25584:	mov	lr, r3
   25588:	ldrb	r0, [r1, #18]
   2558c:	orr	r5, r2, r0, lsl #8
   25590:	ldrb	r0, [r1, #17]
   25594:	orr	r4, r5, r0, lsl #16
   25598:	ldrb	r0, [r9]
   2559c:	movw	r2, #25968	; 0x6570
   255a0:	movt	r2, #29556	; 0x7374
   255a4:	orr	r0, r4, r0, lsl #24
   255a8:	eor	r0, r0, r2
   255ac:	and	r2, lr, #-16777216	; 0xff000000
   255b0:	eor	r2, r2, #1929379840	; 0x73000000
   255b4:	orrs	r0, r2, r0
   255b8:	bne	259e8 <main@@Base+0x12710>
   255bc:	cmp	ip, #6
   255c0:	blt	259e8 <main@@Base+0x12710>
   255c4:	ldr	r3, [sp, #28]
   255c8:	mov	r2, r1
   255cc:	ldrb	r0, [r2, #21]!
   255d0:	ldr	r3, [r3]
   255d4:	cmp	r3, #0
   255d8:	beq	25690 <main@@Base+0x123b8>
   255dc:	cmp	r0, #33	; 0x21
   255e0:	bcc	255ec <main@@Base+0x12314>
   255e4:	cmp	r0, #58	; 0x3a
   255e8:	bne	259e8 <main@@Base+0x12710>
   255ec:	ldr	r0, [sp, #28]
   255f0:	mov	r1, #0
   255f4:	str	r1, [r0]
   255f8:	b	2569c <main@@Base+0x123c4>
   255fc:	mov	r0, r9
   25600:	b	259f4 <main@@Base+0x1271c>
   25604:	movw	r3, #29440	; 0x7300
   25608:	ldr	r9, [sp, #24]
   2560c:	ldr	r6, [sp, #32]
   25610:	bic	r2, r2, #255	; 0xff
   25614:	movt	r3, #25968	; 0x6570
   25618:	eor	r2, r2, r3
   2561c:	orrs	r0, r2, r0
   25620:	bne	2586c <main@@Base+0x12594>
   25624:	cmp	lr, #8
   25628:	blt	2586c <main@@Base+0x12594>
   2562c:	ldr	r3, [sp, #28]
   25630:	mov	r2, r1
   25634:	ldrb	r0, [r2, #15]!
   25638:	ldr	r3, [r3]
   2563c:	cmp	r3, #0
   25640:	beq	25664 <main@@Base+0x1238c>
   25644:	cmp	r0, #33	; 0x21
   25648:	bcc	25654 <main@@Base+0x1237c>
   2564c:	cmp	r0, #58	; 0x3a
   25650:	bne	2586c <main@@Base+0x12594>
   25654:	ldr	r0, [sp, #28]
   25658:	mov	r1, #0
   2565c:	str	r1, [r0]
   25660:	b	25670 <main@@Base+0x12398>
   25664:	cmp	r0, #34	; 0x22
   25668:	bne	2586c <main@@Base+0x12594>
   2566c:	add	r2, r1, #16
   25670:	sub	r0, r8, r2
   25674:	cmp	r0, #2
   25678:	blt	256d0 <main@@Base+0x123f8>
   2567c:	ldrb	r0, [r2]
   25680:	cmp	r0, #32
   25684:	bls	256bc <main@@Base+0x123e4>
   25688:	mov	r7, r2
   2568c:	b	256e4 <main@@Base+0x1240c>
   25690:	cmp	r0, #34	; 0x22
   25694:	bne	259e8 <main@@Base+0x12710>
   25698:	add	r2, r1, #22
   2569c:	sub	r0, r8, r2
   256a0:	cmp	r0, #2
   256a4:	blt	25754 <main@@Base+0x1247c>
   256a8:	ldrb	r0, [r2]
   256ac:	cmp	r0, #32
   256b0:	bls	25740 <main@@Base+0x12468>
   256b4:	mov	r7, r2
   256b8:	b	25768 <main@@Base+0x12490>
   256bc:	bne	256d0 <main@@Base+0x123f8>
   256c0:	mov	r7, r2
   256c4:	ldrb	r0, [r7, #1]!
   256c8:	cmp	r0, #32
   256cc:	bhi	256e4 <main@@Base+0x1240c>
   256d0:	mov	r1, r2
   256d4:	mov	r0, r9
   256d8:	mov	r2, r8
   256dc:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   256e0:	mov	r7, r0
   256e4:	cmp	r7, r8
   256e8:	beq	25728 <main@@Base+0x12450>
   256ec:	ldrb	r0, [r7]
   256f0:	cmp	r0, #58	; 0x3a
   256f4:	bne	25728 <main@@Base+0x12450>
   256f8:	add	r1, r7, #1
   256fc:	sub	r0, r8, r1
   25700:	cmp	r0, #2
   25704:	blt	257d8 <main@@Base+0x12500>
   25708:	ldrb	r0, [r1]
   2570c:	cmp	r0, #32
   25710:	bls	257bc <main@@Base+0x124e4>
   25714:	ldr	r9, [sp, #24]
   25718:	ldr	r6, [sp, #32]
   2571c:	ldr	r4, [sp, #8]
   25720:	mov	r7, r1
   25724:	b	257e8 <main@@Base+0x12510>
   25728:	mov	r0, r9
   2572c:	mov	r1, r7
   25730:	mov	r2, r8
   25734:	mov	r3, #4
   25738:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2573c:	b	257e4 <main@@Base+0x1250c>
   25740:	bne	25754 <main@@Base+0x1247c>
   25744:	mov	r7, r2
   25748:	ldrb	r0, [r7, #1]!
   2574c:	cmp	r0, #32
   25750:	bhi	25768 <main@@Base+0x12490>
   25754:	ldr	r0, [sp, #24]
   25758:	mov	r1, r2
   2575c:	mov	r2, r8
   25760:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25764:	mov	r7, r0
   25768:	cmp	r7, r8
   2576c:	beq	257a4 <main@@Base+0x124cc>
   25770:	ldrb	r0, [r7]
   25774:	cmp	r0, #58	; 0x3a
   25778:	bne	257a4 <main@@Base+0x124cc>
   2577c:	add	r1, r7, #1
   25780:	sub	r0, r8, r1
   25784:	cmp	r0, #2
   25788:	blt	2596c <main@@Base+0x12694>
   2578c:	ldrb	r0, [r1]
   25790:	cmp	r0, #32
   25794:	bls	25958 <main@@Base+0x12680>
   25798:	ldr	r6, [sp, #32]
   2579c:	mov	r7, r1
   257a0:	b	2597c <main@@Base+0x126a4>
   257a4:	ldr	r0, [sp, #24]
   257a8:	mov	r1, r7
   257ac:	mov	r2, r8
   257b0:	mov	r3, #4
   257b4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   257b8:	b	25978 <main@@Base+0x126a0>
   257bc:	ldr	r9, [sp, #24]
   257c0:	ldr	r6, [sp, #32]
   257c4:	ldr	r4, [sp, #8]
   257c8:	bne	257d8 <main@@Base+0x12500>
   257cc:	ldrb	r0, [r7, #2]!
   257d0:	cmp	r0, #32
   257d4:	bhi	257e8 <main@@Base+0x12510>
   257d8:	mov	r0, r9
   257dc:	mov	r2, r8
   257e0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   257e4:	mov	r7, r0
   257e8:	cmp	r4, r7
   257ec:	beq	2586c <main@@Base+0x12594>
   257f0:	mov	r6, #0
   257f4:	cmp	r7, r8
   257f8:	str	r6, [fp, #-36]	; 0xffffffdc
   257fc:	str	r6, [fp, #-40]	; 0xffffffd8
   25800:	str	r6, [sp, #44]	; 0x2c
   25804:	str	r6, [sp, #40]	; 0x28
   25808:	str	r6, [fp, #-44]	; 0xffffffd4
   2580c:	beq	25878 <main@@Base+0x125a0>
   25810:	sub	r0, fp, #40	; 0x28
   25814:	mov	r1, r7
   25818:	mov	r2, r8
   2581c:	sub	r3, fp, #44	; 0x2c
   25820:	str	r0, [sp]
   25824:	mov	r0, r9
   25828:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   2582c:	cmp	r0, r7
   25830:	beq	25884 <main@@Base+0x125ac>
   25834:	mov	r4, r0
   25838:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2583c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   25840:	ldr	r5, [fp, #-36]	; 0xffffffdc
   25844:	cmp	r0, #0
   25848:	beq	25894 <main@@Base+0x125bc>
   2584c:	subs	r0, r6, #1
   25850:	sbcs	r0, r5, #-2147483648	; 0x80000000
   25854:	bcc	258c4 <main@@Base+0x125ec>
   25858:	ldr	r9, [sp, #24]
   2585c:	mov	r1, r4
   25860:	mov	r2, r8
   25864:	mov	r3, #8
   25868:	b	258ac <main@@Base+0x125d4>
   2586c:	mov	r0, r9
   25870:	mov	r1, r4
   25874:	b	259f4 <main@@Base+0x1271c>
   25878:	mov	r5, #0
   2587c:	mov	r4, r8
   25880:	b	258d8 <main@@Base+0x12600>
   25884:	mov	r6, #0
   25888:	mov	r5, #0
   2588c:	mov	r4, r7
   25890:	b	258d4 <main@@Base+0x125fc>
   25894:	cmn	r5, #1
   25898:	bgt	258cc <main@@Base+0x125f4>
   2589c:	ldr	r9, [sp, #24]
   258a0:	mov	r1, r4
   258a4:	mov	r2, r8
   258a8:	mov	r3, #7
   258ac:	mov	r0, r9
   258b0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   258b4:	mov	r4, r0
   258b8:	mov	r6, #0
   258bc:	mov	r5, #0
   258c0:	b	258d8 <main@@Base+0x12600>
   258c4:	rsbs	r6, r6, #0
   258c8:	rsc	r5, r5, #0
   258cc:	str	r6, [sp, #40]	; 0x28
   258d0:	str	r5, [sp, #44]	; 0x2c
   258d4:	ldr	r9, [sp, #24]
   258d8:	cmp	r7, r4
   258dc:	bne	2591c <main@@Base+0x12644>
   258e0:	movw	r3, #17056	; 0x42a0
   258e4:	add	r0, sp, #40	; 0x28
   258e8:	mov	r1, r7
   258ec:	mov	r2, r8
   258f0:	str	r0, [sp]
   258f4:	mov	r0, r9
   258f8:	movt	r3, #4
   258fc:	bl	22b10 <main@@Base+0xf838>
   25900:	mov	r4, r0
   25904:	cmp	r0, r7
   25908:	cmpne	r4, r8
   2590c:	beq	2716c <main@@Base+0x13e94>
   25910:	ldr	r6, [sp, #40]	; 0x28
   25914:	ldr	r5, [sp, #44]	; 0x2c
   25918:	ldr	r9, [sp, #24]
   2591c:	orrs	r0, r6, r5
   25920:	bne	25930 <main@@Base+0x12658>
   25924:	ldrb	r0, [r9, #8]
   25928:	tst	r0, #2
   2592c:	beq	252e4 <main@@Base+0x1200c>
   25930:	ldr	r0, [r9]
   25934:	mov	r1, #0
   25938:	mov	r2, #8
   2593c:	mov	r3, #8
   25940:	bl	2b8dc <flatcc_builder_table_add@@Base>
   25944:	cmp	r0, #0
   25948:	beq	2716c <main@@Base+0x13e94>
   2594c:	str	r6, [r0]
   25950:	str	r5, [r0, #4]
   25954:	b	252e4 <main@@Base+0x1200c>
   25958:	ldr	r6, [sp, #32]
   2595c:	bne	2596c <main@@Base+0x12694>
   25960:	ldrb	r0, [r7, #2]!
   25964:	cmp	r0, #32
   25968:	bhi	2597c <main@@Base+0x126a4>
   2596c:	ldr	r0, [sp, #24]
   25970:	mov	r2, r8
   25974:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25978:	mov	r7, r0
   2597c:	cmp	r9, r7
   25980:	beq	259e8 <main@@Base+0x12710>
   25984:	mov	r5, #0
   25988:	cmp	r7, r8
   2598c:	str	r5, [fp, #-36]	; 0xffffffdc
   25990:	str	r5, [fp, #-40]	; 0xffffffd8
   25994:	str	r5, [fp, #-44]	; 0xffffffd4
   25998:	str	r5, [sp, #40]	; 0x28
   2599c:	beq	25238 <main@@Base+0x11f60>
   259a0:	sub	r0, fp, #40	; 0x28
   259a4:	mov	r1, r7
   259a8:	mov	r2, r8
   259ac:	add	r3, sp, #40	; 0x28
   259b0:	str	r0, [sp]
   259b4:	ldr	r0, [sp, #24]
   259b8:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   259bc:	cmp	r0, r7
   259c0:	beq	25240 <main@@Base+0x11f68>
   259c4:	mov	r4, r0
   259c8:	ldr	r0, [sp, #40]	; 0x28
   259cc:	cmp	r0, #0
   259d0:	beq	25248 <main@@Base+0x11f70>
   259d4:	ldr	r0, [sp, #24]
   259d8:	mov	r1, r4
   259dc:	mov	r2, r8
   259e0:	mov	r3, #8
   259e4:	b	25264 <main@@Base+0x11f8c>
   259e8:	ldr	r0, [sp, #24]
   259ec:	mov	r1, r9
   259f0:	mov	r9, r0
   259f4:	mov	r2, r8
   259f8:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   259fc:	mov	r4, r0
   25a00:	sub	r0, r8, r4
   25a04:	cmp	r0, #2
   25a08:	blt	25a34 <main@@Base+0x1275c>
   25a0c:	ldrb	r0, [r4]
   25a10:	cmp	r0, #32
   25a14:	bls	25a20 <main@@Base+0x12748>
   25a18:	mov	r2, r4
   25a1c:	b	25a48 <main@@Base+0x12770>
   25a20:	bne	25a34 <main@@Base+0x1275c>
   25a24:	mov	r2, r4
   25a28:	ldrb	r0, [r2, #1]!
   25a2c:	cmp	r0, #32
   25a30:	bhi	25a48 <main@@Base+0x12770>
   25a34:	mov	r0, r9
   25a38:	mov	r1, r4
   25a3c:	mov	r2, r8
   25a40:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25a44:	mov	r2, r0
   25a48:	cmp	r2, r8
   25a4c:	beq	25ad4 <main@@Base+0x127fc>
   25a50:	ldrb	r0, [r2]
   25a54:	cmp	r0, #44	; 0x2c
   25a58:	bne	25adc <main@@Base+0x12804>
   25a5c:	add	r1, r2, #1
   25a60:	sub	r0, r8, r1
   25a64:	cmp	r0, #2
   25a68:	blt	25a90 <main@@Base+0x127b8>
   25a6c:	ldrb	r0, [r1]
   25a70:	cmp	r0, #32
   25a74:	bls	25a80 <main@@Base+0x127a8>
   25a78:	mov	r2, r1
   25a7c:	b	25aa0 <main@@Base+0x127c8>
   25a80:	bne	25a90 <main@@Base+0x127b8>
   25a84:	ldrb	r0, [r2, #2]!
   25a88:	cmp	r0, #32
   25a8c:	bhi	25aa0 <main@@Base+0x127c8>
   25a90:	mov	r0, r9
   25a94:	mov	r2, r8
   25a98:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25a9c:	mov	r2, r0
   25aa0:	cmp	r2, r8
   25aa4:	beq	25b10 <main@@Base+0x12838>
   25aa8:	ldrb	r0, [r2]
   25aac:	cmp	r0, #125	; 0x7d
   25ab0:	bne	252f8 <main@@Base+0x12020>
   25ab4:	add	r1, r2, #1
   25ab8:	sub	r0, r8, r1
   25abc:	cmp	r0, #2
   25ac0:	blt	25b50 <main@@Base+0x12878>
   25ac4:	ldrb	r0, [r1]
   25ac8:	cmp	r0, #32
   25acc:	bls	25b3c <main@@Base+0x12864>
   25ad0:	b	25b08 <main@@Base+0x12830>
   25ad4:	mov	r4, r8
   25ad8:	b	2494c <main@@Base+0x11674>
   25adc:	cmp	r0, #125	; 0x7d
   25ae0:	bne	25b1c <main@@Base+0x12844>
   25ae4:	add	r1, r2, #1
   25ae8:	sub	r0, r8, r1
   25aec:	cmp	r0, #2
   25af0:	blt	25b50 <main@@Base+0x12878>
   25af4:	ldrb	r0, [r1]
   25af8:	cmp	r0, #32
   25afc:	bls	25b34 <main@@Base+0x1285c>
   25b00:	ldr	r9, [sp, #24]
   25b04:	ldr	r6, [sp, #32]
   25b08:	mov	r4, r1
   25b0c:	b	2494c <main@@Base+0x11674>
   25b10:	mov	r0, r9
   25b14:	mov	r1, r8
   25b18:	b	25b24 <main@@Base+0x1284c>
   25b1c:	mov	r0, r9
   25b20:	mov	r1, r2
   25b24:	mov	r2, r8
   25b28:	mov	r3, #10
   25b2c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   25b30:	b	24948 <main@@Base+0x11670>
   25b34:	ldr	r9, [sp, #24]
   25b38:	ldr	r6, [sp, #32]
   25b3c:	bne	25b50 <main@@Base+0x12878>
   25b40:	ldrb	r0, [r2, #2]!
   25b44:	cmp	r0, #32
   25b48:	mov	r4, r2
   25b4c:	bhi	2494c <main@@Base+0x11674>
   25b50:	mov	r0, r9
   25b54:	mov	r2, r8
   25b58:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25b5c:	b	24948 <main@@Base+0x11670>
   25b60:	mov	r4, r8
   25b64:	b	25b94 <main@@Base+0x128bc>
   25b68:	mov	r4, r9
   25b6c:	b	25b94 <main@@Base+0x128bc>
   25b70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25b74:	cmp	r0, #0
   25b78:	beq	25c14 <main@@Base+0x1293c>
   25b7c:	ldr	r0, [sp, #24]
   25b80:	mov	r1, r4
   25b84:	mov	r2, r8
   25b88:	mov	r3, #7
   25b8c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   25b90:	mov	r4, r0
   25b94:	cmp	r9, r4
   25b98:	bne	25bd0 <main@@Base+0x128f8>
   25b9c:	sub	r0, fp, #44	; 0x2c
   25ba0:	movw	r3, #17032	; 0x4288
   25ba4:	mov	r1, r9
   25ba8:	mov	r2, r8
   25bac:	str	r0, [sp]
   25bb0:	ldr	r0, [sp, #24]
   25bb4:	movt	r3, #4
   25bb8:	bl	22d58 <main@@Base+0xfa80>
   25bbc:	mov	r4, r0
   25bc0:	cmp	r0, r9
   25bc4:	cmpne	r4, r8
   25bc8:	beq	2716c <main@@Base+0x13e94>
   25bcc:	ldr	r5, [fp, #-44]	; 0xffffffd4
   25bd0:	cmp	r5, #0
   25bd4:	bne	25be8 <main@@Base+0x12910>
   25bd8:	ldr	r0, [sp, #24]
   25bdc:	ldrb	r0, [r0, #8]
   25be0:	tst	r0, #2
   25be4:	beq	25c0c <main@@Base+0x12934>
   25be8:	ldr	r0, [sp, #24]
   25bec:	mov	r1, #8
   25bf0:	ldr	r0, [r0]
   25bf4:	mov	r2, #4
   25bf8:	mov	r3, #4
   25bfc:	bl	2b8dc <flatcc_builder_table_add@@Base>
   25c00:	cmp	r0, #0
   25c04:	beq	2716c <main@@Base+0x13e94>
   25c08:	str	r5, [r0]
   25c0c:	ldr	r9, [sp, #24]
   25c10:	b	26f4c <main@@Base+0x13c74>
   25c14:	ldr	r5, [fp, #-40]	; 0xffffffd8
   25c18:	str	r5, [fp, #-44]	; 0xffffffd4
   25c1c:	b	25b94 <main@@Base+0x128bc>
   25c20:	cmp	r2, r8
   25c24:	mov	sl, r8
   25c28:	beq	25c7c <main@@Base+0x129a4>
   25c2c:	ldrb	r0, [r2]
   25c30:	cmp	r0, #46	; 0x2e
   25c34:	beq	25c50 <main@@Base+0x12978>
   25c38:	cmp	r0, #34	; 0x22
   25c3c:	bne	25c6c <main@@Base+0x12994>
   25c40:	ldr	r0, [sp, #28]
   25c44:	mov	r1, #0
   25c48:	add	sl, r2, #1
   25c4c:	b	25c78 <main@@Base+0x129a0>
   25c50:	mov	r1, r2
   25c54:	mov	r0, r9
   25c58:	mov	r2, r8
   25c5c:	mov	r3, #5
   25c60:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   25c64:	mov	sl, r0
   25c68:	b	25c7c <main@@Base+0x129a4>
   25c6c:	ldr	r0, [sp, #28]
   25c70:	mov	r1, #1
   25c74:	mov	sl, r2
   25c78:	str	r1, [r0]
   25c7c:	sub	r9, r8, sl
   25c80:	mov	r0, #8
   25c84:	cmp	r9, #8
   25c88:	movcc	r0, r9
   25c8c:	and	r0, r0, #15
   25c90:	sub	r3, r0, #1
   25c94:	cmp	r3, #7
   25c98:	bhi	2669c <main@@Base+0x133c4>
   25c9c:	add	r5, pc, #32
   25ca0:	mov	r0, #0
   25ca4:	mov	ip, #0
   25ca8:	mov	lr, #0
   25cac:	mov	r7, #0
   25cb0:	mov	r2, #0
   25cb4:	mov	r6, #0
   25cb8:	mov	r4, #0
   25cbc:	mov	r1, #0
   25cc0:	ldr	pc, [r5, r3, lsl #2]
   25cc4:	andeq	r5, r2, r8, lsr #26
   25cc8:	andeq	r5, r2, r0, lsr #26
   25ccc:	andeq	r5, r2, r8, lsl sp
   25cd0:	andeq	r5, r2, r0, lsl sp
   25cd4:	andeq	r5, r2, r4, lsl #26
   25cd8:	strdeq	r5, [r2], -r8
   25cdc:	andeq	r5, r2, r8, ror #25
   25ce0:	andeq	r5, r2, r4, ror #25
   25ce4:	ldrb	ip, [sl, #7]
   25ce8:	ldrb	r1, [sl, #6]
   25cec:	mov	lr, r0
   25cf0:	orr	r1, ip, r1, lsl #8
   25cf4:	mov	r0, r1
   25cf8:	ldrb	r1, [sl, #5]
   25cfc:	mov	r7, lr
   25d00:	orr	r0, r0, r1, lsl #16
   25d04:	ldrb	r1, [sl, #4]
   25d08:	mov	r2, r7
   25d0c:	orr	r0, r0, r1, lsl #24
   25d10:	ldrb	r1, [sl, #3]
   25d14:	orr	r6, r1, r2
   25d18:	ldrb	r1, [sl, #2]
   25d1c:	orr	r4, r6, r1, lsl #8
   25d20:	ldrb	r1, [sl, #1]
   25d24:	orr	r1, r4, r1, lsl #16
   25d28:	ldrb	r2, [sl]
   25d2c:	orr	r7, r1, r2, lsl #24
   25d30:	movw	r1, #25442	; 0x6362
   25d34:	movt	r1, #25443	; 0x6363
   25d38:	cmp	r7, r1
   25d3c:	bhi	25dd4 <main@@Base+0x12afc>
   25d40:	movw	r1, #13108	; 0x3334
   25d44:	movt	r1, #12594	; 0x3132
   25d48:	eor	r5, r0, r1
   25d4c:	movw	r1, #24929	; 0x6161
   25d50:	movt	r1, #24929	; 0x6161
   25d54:	eor	r0, r7, r1
   25d58:	orrs	r0, r5, r0
   25d5c:	bne	25e3c <main@@Base+0x12b64>
   25d60:	add	r7, sl, #8
   25d64:	mov	r1, #8
   25d68:	mov	r2, #-268435456	; 0xf0000000
   25d6c:	sub	r0, r8, r7
   25d70:	cmp	r0, #8
   25d74:	movcc	r1, r0
   25d78:	add	r1, r2, r1, lsl #28
   25d7c:	asr	r1, r1, #28
   25d80:	cmp	r1, #0
   25d84:	blt	26f34 <main@@Base+0x13c5c>
   25d88:	ldrb	r1, [r7]
   25d8c:	cmp	r1, #53	; 0x35
   25d90:	bne	26f34 <main@@Base+0x13c5c>
   25d94:	cmp	r0, #2
   25d98:	blt	26f34 <main@@Base+0x13c5c>
   25d9c:	ldr	r2, [sp, #28]
   25da0:	mov	r1, sl
   25da4:	ldrb	r0, [r1, #9]!
   25da8:	ldr	r2, [r2]
   25dac:	cmp	r2, #0
   25db0:	beq	25fe8 <main@@Base+0x12d10>
   25db4:	cmp	r0, #33	; 0x21
   25db8:	bcc	25dc4 <main@@Base+0x12aec>
   25dbc:	cmp	r0, #58	; 0x3a
   25dc0:	bne	26f34 <main@@Base+0x13c5c>
   25dc4:	ldr	r0, [sp, #28]
   25dc8:	mov	r2, #0
   25dcc:	str	r2, [r0]
   25dd0:	b	25ff4 <main@@Base+0x12d1c>
   25dd4:	movw	r1, #13108	; 0x3334
   25dd8:	movt	r1, #12594	; 0x3132
   25ddc:	eor	r5, r0, r1
   25de0:	ldr	r0, [sp, #16]
   25de4:	eor	r0, r7, r0
   25de8:	orrs	r0, r5, r0
   25dec:	bne	25e8c <main@@Base+0x12bb4>
   25df0:	cmp	r9, #9
   25df4:	ldr	r9, [sp, #24]
   25df8:	mov	r7, sl
   25dfc:	blt	2611c <main@@Base+0x12e44>
   25e00:	ldr	r2, [sp, #28]
   25e04:	mov	r1, sl
   25e08:	ldrb	r0, [r1, #8]!
   25e0c:	ldr	r2, [r2]
   25e10:	cmp	r2, #0
   25e14:	beq	25ee4 <main@@Base+0x12c0c>
   25e18:	cmp	r0, #33	; 0x21
   25e1c:	bcc	25e2c <main@@Base+0x12b54>
   25e20:	cmp	r0, #58	; 0x3a
   25e24:	mov	r7, sl
   25e28:	bne	2611c <main@@Base+0x12e44>
   25e2c:	ldr	r0, [sp, #28]
   25e30:	mov	r2, #0
   25e34:	str	r2, [r0]
   25e38:	b	25ef4 <main@@Base+0x12c1c>
   25e3c:	teq	r7, r1
   25e40:	bne	263e0 <main@@Base+0x13108>
   25e44:	cmp	r9, #5
   25e48:	mov	r1, sl
   25e4c:	blt	263a8 <main@@Base+0x130d0>
   25e50:	ldr	r1, [sp, #28]
   25e54:	mov	r2, sl
   25e58:	ldrb	r0, [r2, #4]!
   25e5c:	ldr	r1, [r1]
   25e60:	cmp	r1, #0
   25e64:	beq	25f14 <main@@Base+0x12c3c>
   25e68:	cmp	r0, #33	; 0x21
   25e6c:	bcc	25e7c <main@@Base+0x12ba4>
   25e70:	cmp	r0, #58	; 0x3a
   25e74:	mov	r1, sl
   25e78:	bne	263a8 <main@@Base+0x130d0>
   25e7c:	ldr	r0, [sp, #28]
   25e80:	mov	r1, #0
   25e84:	str	r1, [r0]
   25e88:	b	25f24 <main@@Base+0x12c4c>
   25e8c:	movw	r0, #25443	; 0x6363
   25e90:	movt	r0, #25443	; 0x6363
   25e94:	teq	r7, r0
   25e98:	bne	26640 <main@@Base+0x13368>
   25e9c:	cmp	r9, #5
   25ea0:	mov	r1, sl
   25ea4:	blt	26608 <main@@Base+0x13330>
   25ea8:	ldr	r1, [sp, #28]
   25eac:	mov	r2, sl
   25eb0:	ldrb	r0, [r2, #4]!
   25eb4:	ldr	r1, [r1]
   25eb8:	cmp	r1, #0
   25ebc:	beq	25f44 <main@@Base+0x12c6c>
   25ec0:	cmp	r0, #33	; 0x21
   25ec4:	bcc	25ed4 <main@@Base+0x12bfc>
   25ec8:	cmp	r0, #58	; 0x3a
   25ecc:	mov	r1, sl
   25ed0:	bne	26608 <main@@Base+0x13330>
   25ed4:	ldr	r0, [sp, #28]
   25ed8:	mov	r1, #0
   25edc:	str	r1, [r0]
   25ee0:	b	25f54 <main@@Base+0x12c7c>
   25ee4:	cmp	r0, #34	; 0x22
   25ee8:	mov	r7, sl
   25eec:	bne	2611c <main@@Base+0x12e44>
   25ef0:	add	r1, sl, #9
   25ef4:	sub	r0, r8, r1
   25ef8:	cmp	r0, #2
   25efc:	blt	25f88 <main@@Base+0x12cb0>
   25f00:	ldrb	r0, [r1]
   25f04:	cmp	r0, #32
   25f08:	bls	25f74 <main@@Base+0x12c9c>
   25f0c:	mov	r7, r1
   25f10:	b	25f98 <main@@Base+0x12cc0>
   25f14:	cmp	r0, #34	; 0x22
   25f18:	mov	r1, sl
   25f1c:	bne	263a8 <main@@Base+0x130d0>
   25f20:	add	r2, sl, #5
   25f24:	sub	r0, r8, r2
   25f28:	cmp	r0, #2
   25f2c:	blt	26028 <main@@Base+0x12d50>
   25f30:	ldrb	r0, [r2]
   25f34:	cmp	r0, #32
   25f38:	bls	26014 <main@@Base+0x12d3c>
   25f3c:	mov	r1, r2
   25f40:	b	2603c <main@@Base+0x12d64>
   25f44:	cmp	r0, #34	; 0x22
   25f48:	mov	r1, sl
   25f4c:	bne	26608 <main@@Base+0x13330>
   25f50:	add	r2, sl, #5
   25f54:	sub	r0, r8, r2
   25f58:	cmp	r0, #2
   25f5c:	blt	2609c <main@@Base+0x12dc4>
   25f60:	ldrb	r0, [r2]
   25f64:	cmp	r0, #32
   25f68:	bls	26088 <main@@Base+0x12db0>
   25f6c:	mov	r1, r2
   25f70:	b	260b0 <main@@Base+0x12dd8>
   25f74:	bne	25f88 <main@@Base+0x12cb0>
   25f78:	mov	r7, r1
   25f7c:	ldrb	r0, [r7, #1]!
   25f80:	cmp	r0, #32
   25f84:	bhi	25f98 <main@@Base+0x12cc0>
   25f88:	mov	r0, r9
   25f8c:	mov	r2, r8
   25f90:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   25f94:	mov	r7, r0
   25f98:	cmp	r7, r8
   25f9c:	beq	25fd0 <main@@Base+0x12cf8>
   25fa0:	ldrb	r0, [r7]
   25fa4:	cmp	r0, #58	; 0x3a
   25fa8:	bne	25fd0 <main@@Base+0x12cf8>
   25fac:	add	r1, r7, #1
   25fb0:	sub	r0, r8, r1
   25fb4:	cmp	r0, #2
   25fb8:	blt	2610c <main@@Base+0x12e34>
   25fbc:	ldrb	r0, [r1]
   25fc0:	cmp	r0, #32
   25fc4:	bls	260fc <main@@Base+0x12e24>
   25fc8:	mov	r7, r1
   25fcc:	b	2611c <main@@Base+0x12e44>
   25fd0:	mov	r0, r9
   25fd4:	mov	r1, r7
   25fd8:	mov	r2, r8
   25fdc:	mov	r3, #4
   25fe0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   25fe4:	b	26118 <main@@Base+0x12e40>
   25fe8:	cmp	r0, #34	; 0x22
   25fec:	bne	26f34 <main@@Base+0x13c5c>
   25ff0:	add	r1, sl, #10
   25ff4:	sub	r0, r8, r1
   25ff8:	cmp	r0, #2
   25ffc:	blt	26324 <main@@Base+0x1304c>
   26000:	ldrb	r0, [r1]
   26004:	cmp	r0, #32
   26008:	bls	26310 <main@@Base+0x13038>
   2600c:	mov	r9, r1
   26010:	b	26334 <main@@Base+0x1305c>
   26014:	bne	26028 <main@@Base+0x12d50>
   26018:	mov	r1, r2
   2601c:	ldrb	r0, [r1, #1]!
   26020:	cmp	r0, #32
   26024:	bhi	2603c <main@@Base+0x12d64>
   26028:	ldr	r0, [sp, #24]
   2602c:	mov	r1, r2
   26030:	mov	r2, r8
   26034:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26038:	mov	r1, r0
   2603c:	cmp	r1, r8
   26040:	beq	26074 <main@@Base+0x12d9c>
   26044:	ldrb	r0, [r1]
   26048:	cmp	r0, #58	; 0x3a
   2604c:	bne	26074 <main@@Base+0x12d9c>
   26050:	add	r2, r1, #1
   26054:	sub	r0, r8, r2
   26058:	cmp	r0, #2
   2605c:	blt	26394 <main@@Base+0x130bc>
   26060:	ldrb	r0, [r2]
   26064:	cmp	r0, #32
   26068:	bls	26384 <main@@Base+0x130ac>
   2606c:	mov	r1, r2
   26070:	b	263a8 <main@@Base+0x130d0>
   26074:	ldr	r0, [sp, #24]
   26078:	mov	r2, r8
   2607c:	mov	r3, #4
   26080:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26084:	b	263a4 <main@@Base+0x130cc>
   26088:	bne	2609c <main@@Base+0x12dc4>
   2608c:	mov	r1, r2
   26090:	ldrb	r0, [r1, #1]!
   26094:	cmp	r0, #32
   26098:	bhi	260b0 <main@@Base+0x12dd8>
   2609c:	ldr	r0, [sp, #24]
   260a0:	mov	r1, r2
   260a4:	mov	r2, r8
   260a8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   260ac:	mov	r1, r0
   260b0:	cmp	r1, r8
   260b4:	beq	260e8 <main@@Base+0x12e10>
   260b8:	ldrb	r0, [r1]
   260bc:	cmp	r0, #58	; 0x3a
   260c0:	bne	260e8 <main@@Base+0x12e10>
   260c4:	add	r2, r1, #1
   260c8:	sub	r0, r8, r2
   260cc:	cmp	r0, #2
   260d0:	blt	265f4 <main@@Base+0x1331c>
   260d4:	ldrb	r0, [r2]
   260d8:	cmp	r0, #32
   260dc:	bls	265e4 <main@@Base+0x1330c>
   260e0:	mov	r1, r2
   260e4:	b	26608 <main@@Base+0x13330>
   260e8:	ldr	r0, [sp, #24]
   260ec:	mov	r2, r8
   260f0:	mov	r3, #4
   260f4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   260f8:	b	26604 <main@@Base+0x1332c>
   260fc:	bne	2610c <main@@Base+0x12e34>
   26100:	ldrb	r0, [r7, #2]!
   26104:	cmp	r0, #32
   26108:	bhi	2611c <main@@Base+0x12e44>
   2610c:	mov	r0, r9
   26110:	mov	r2, r8
   26114:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26118:	mov	r7, r0
   2611c:	cmp	sl, r7
   26120:	beq	261a0 <main@@Base+0x12ec8>
   26124:	mov	r5, #0
   26128:	cmp	r7, r8
   2612c:	str	r5, [fp, #-36]	; 0xffffffdc
   26130:	str	r5, [fp, #-40]	; 0xffffffd8
   26134:	str	r5, [sp, #44]	; 0x2c
   26138:	str	r5, [sp, #40]	; 0x28
   2613c:	str	r5, [fp, #-44]	; 0xffffffd4
   26140:	beq	26214 <main@@Base+0x12f3c>
   26144:	sub	r0, fp, #40	; 0x28
   26148:	mov	r1, r7
   2614c:	mov	r2, r8
   26150:	sub	r3, fp, #44	; 0x2c
   26154:	str	r0, [sp]
   26158:	mov	r0, r9
   2615c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   26160:	ldr	r6, [sp, #32]
   26164:	cmp	r0, r7
   26168:	beq	26224 <main@@Base+0x12f4c>
   2616c:	sub	sl, fp, #44	; 0x2c
   26170:	mov	r4, r0
   26174:	ldm	sl, {r0, r5, sl}
   26178:	cmp	r0, #0
   2617c:	beq	26234 <main@@Base+0x12f5c>
   26180:	subs	r0, r5, #1
   26184:	sbcs	r0, sl, #-2147483648	; 0x80000000
   26188:	bcc	26260 <main@@Base+0x12f88>
   2618c:	mov	r0, r9
   26190:	mov	r1, r4
   26194:	mov	r2, r8
   26198:	mov	r3, #8
   2619c:	b	2624c <main@@Base+0x12f74>
   261a0:	add	r7, sl, #8
   261a4:	mov	r1, #8
   261a8:	mov	r2, #-268435456	; 0xf0000000
   261ac:	sub	r0, r8, r7
   261b0:	cmp	r0, #8
   261b4:	movcc	r1, r0
   261b8:	add	r1, r2, r1, lsl #28
   261bc:	asr	r1, r1, #28
   261c0:	cmp	r1, #0
   261c4:	blt	26f38 <main@@Base+0x13c60>
   261c8:	ldrb	r1, [r7]
   261cc:	cmp	r1, #53	; 0x35
   261d0:	bne	26f38 <main@@Base+0x13c60>
   261d4:	cmp	r0, #2
   261d8:	blt	26f34 <main@@Base+0x13c5c>
   261dc:	ldr	r2, [sp, #28]
   261e0:	mov	r1, sl
   261e4:	ldrb	r0, [r1, #9]!
   261e8:	ldr	r2, [r2]
   261ec:	cmp	r2, #0
   261f0:	beq	262e4 <main@@Base+0x1300c>
   261f4:	cmp	r0, #33	; 0x21
   261f8:	bcc	26204 <main@@Base+0x12f2c>
   261fc:	cmp	r0, #58	; 0x3a
   26200:	bne	26f34 <main@@Base+0x13c5c>
   26204:	ldr	r0, [sp, #28]
   26208:	mov	r2, #0
   2620c:	str	r2, [r0]
   26210:	b	262f0 <main@@Base+0x13018>
   26214:	ldr	r6, [sp, #32]
   26218:	mov	sl, #0
   2621c:	mov	r4, r8
   26220:	b	26270 <main@@Base+0x12f98>
   26224:	mov	r5, #0
   26228:	mov	sl, #0
   2622c:	mov	r4, r7
   26230:	b	26270 <main@@Base+0x12f98>
   26234:	cmn	sl, #1
   26238:	bgt	26268 <main@@Base+0x12f90>
   2623c:	mov	r0, r9
   26240:	mov	r1, r4
   26244:	mov	r2, r8
   26248:	mov	r3, #7
   2624c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26250:	mov	r4, r0
   26254:	mov	r5, #0
   26258:	mov	sl, #0
   2625c:	b	26270 <main@@Base+0x12f98>
   26260:	rsbs	r5, r5, #0
   26264:	rsc	sl, sl, #0
   26268:	str	r5, [sp, #40]	; 0x28
   2626c:	str	sl, [sp, #44]	; 0x2c
   26270:	cmp	r7, r4
   26274:	bne	262b0 <main@@Base+0x12fd8>
   26278:	movw	r3, #16996	; 0x4264
   2627c:	add	r0, sp, #40	; 0x28
   26280:	mov	r1, r7
   26284:	mov	r2, r8
   26288:	str	r0, [sp]
   2628c:	mov	r0, r9
   26290:	movt	r3, #4
   26294:	bl	22b10 <main@@Base+0xf838>
   26298:	mov	r4, r0
   2629c:	cmp	r0, r7
   262a0:	cmpne	r4, r8
   262a4:	beq	27170 <main@@Base+0x13e98>
   262a8:	ldr	r5, [sp, #40]	; 0x28
   262ac:	ldr	sl, [sp, #44]	; 0x2c
   262b0:	orrs	r0, r5, sl
   262b4:	bne	262c4 <main@@Base+0x12fec>
   262b8:	ldrb	r0, [r9, #8]
   262bc:	tst	r0, #2
   262c0:	beq	26f50 <main@@Base+0x13c78>
   262c4:	ldr	r0, [r9]
   262c8:	mov	r1, #5
   262cc:	mov	r2, #8
   262d0:	mov	r3, #8
   262d4:	bl	2b8dc <flatcc_builder_table_add@@Base>
   262d8:	cmp	r0, #0
   262dc:	bne	26b14 <main@@Base+0x1383c>
   262e0:	b	27170 <main@@Base+0x13e98>
   262e4:	cmp	r0, #34	; 0x22
   262e8:	bne	26f34 <main@@Base+0x13c5c>
   262ec:	add	r1, sl, #10
   262f0:	sub	r0, r8, r1
   262f4:	cmp	r0, #2
   262f8:	blt	26768 <main@@Base+0x13490>
   262fc:	ldrb	r0, [r1]
   26300:	cmp	r0, #32
   26304:	bls	26754 <main@@Base+0x1347c>
   26308:	mov	r9, r1
   2630c:	b	26778 <main@@Base+0x134a0>
   26310:	bne	26324 <main@@Base+0x1304c>
   26314:	mov	r9, r1
   26318:	ldrb	r0, [r9, #1]!
   2631c:	cmp	r0, #32
   26320:	bhi	26334 <main@@Base+0x1305c>
   26324:	ldr	r0, [sp, #24]
   26328:	mov	r2, r8
   2632c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26330:	mov	r9, r0
   26334:	cmp	r9, r8
   26338:	beq	2636c <main@@Base+0x13094>
   2633c:	ldrb	r0, [r9]
   26340:	cmp	r0, #58	; 0x3a
   26344:	bne	2636c <main@@Base+0x13094>
   26348:	add	r1, r9, #1
   2634c:	sub	r0, r8, r1
   26350:	cmp	r0, #2
   26354:	blt	26b58 <main@@Base+0x13880>
   26358:	ldrb	r0, [r1]
   2635c:	cmp	r0, #32
   26360:	bls	26b48 <main@@Base+0x13870>
   26364:	mov	r9, r1
   26368:	b	26b68 <main@@Base+0x13890>
   2636c:	ldr	r0, [sp, #24]
   26370:	mov	r1, r9
   26374:	mov	r2, r8
   26378:	mov	r3, #4
   2637c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26380:	b	26b64 <main@@Base+0x1388c>
   26384:	bne	26394 <main@@Base+0x130bc>
   26388:	ldrb	r0, [r1, #2]!
   2638c:	cmp	r0, #32
   26390:	bhi	263a8 <main@@Base+0x130d0>
   26394:	ldr	r0, [sp, #24]
   26398:	mov	r1, r2
   2639c:	mov	r2, r8
   263a0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   263a4:	mov	r1, r0
   263a8:	cmp	sl, r1
   263ac:	beq	263e0 <main@@Base+0x13108>
   263b0:	ldr	r9, [sp, #24]
   263b4:	mov	r2, r8
   263b8:	add	r3, sp, #36	; 0x24
   263bc:	mov	r0, r9
   263c0:	bl	2f6d0 <flatcc_json_parser_build_string@@Base>
   263c4:	mov	r4, r0
   263c8:	ldr	r0, [sp, #36]	; 0x24
   263cc:	cmp	r0, #0
   263d0:	beq	27170 <main@@Base+0x13e98>
   263d4:	ldr	r0, [r9]
   263d8:	mov	r1, #0
   263dc:	b	26cec <main@@Base+0x13a14>
   263e0:	movw	r1, #25186	; 0x6262
   263e4:	movt	r1, #25186	; 0x6262
   263e8:	eor	r0, r7, r1
   263ec:	orrs	r0, r5, r0
   263f0:	bne	26440 <main@@Base+0x13168>
   263f4:	cmp	r9, #9
   263f8:	ldr	r9, [sp, #24]
   263fc:	mov	r7, sl
   26400:	blt	267ec <main@@Base+0x13514>
   26404:	ldr	r2, [sp, #28]
   26408:	mov	r1, sl
   2640c:	ldrb	r0, [r1, #8]!
   26410:	ldr	r2, [r2]
   26414:	cmp	r2, #0
   26418:	beq	26494 <main@@Base+0x131bc>
   2641c:	cmp	r0, #33	; 0x21
   26420:	bcc	26430 <main@@Base+0x13158>
   26424:	cmp	r0, #58	; 0x3a
   26428:	mov	r7, sl
   2642c:	bne	267ec <main@@Base+0x13514>
   26430:	ldr	r0, [sp, #28]
   26434:	mov	r2, #0
   26438:	str	r2, [r0]
   2643c:	b	264a4 <main@@Base+0x131cc>
   26440:	teq	r7, r1
   26444:	bne	2669c <main@@Base+0x133c4>
   26448:	cmp	r9, #5
   2644c:	ldr	r9, [sp, #24]
   26450:	mov	r1, sl
   26454:	blt	26cbc <main@@Base+0x139e4>
   26458:	ldr	r1, [sp, #28]
   2645c:	mov	r2, sl
   26460:	ldrb	r0, [r2, #4]!
   26464:	ldr	r1, [r1]
   26468:	cmp	r1, #0
   2646c:	beq	264c4 <main@@Base+0x131ec>
   26470:	cmp	r0, #33	; 0x21
   26474:	bcc	26484 <main@@Base+0x131ac>
   26478:	cmp	r0, #58	; 0x3a
   2647c:	mov	r1, sl
   26480:	bne	26cbc <main@@Base+0x139e4>
   26484:	ldr	r0, [sp, #28]
   26488:	mov	r1, #0
   2648c:	str	r1, [r0]
   26490:	b	264d4 <main@@Base+0x131fc>
   26494:	cmp	r0, #34	; 0x22
   26498:	mov	r7, sl
   2649c:	bne	267ec <main@@Base+0x13514>
   264a0:	add	r1, sl, #9
   264a4:	sub	r0, r8, r1
   264a8:	cmp	r0, #2
   264ac:	blt	26508 <main@@Base+0x13230>
   264b0:	ldrb	r0, [r1]
   264b4:	cmp	r0, #32
   264b8:	bls	264f4 <main@@Base+0x1321c>
   264bc:	mov	r7, r1
   264c0:	b	26518 <main@@Base+0x13240>
   264c4:	cmp	r0, #34	; 0x22
   264c8:	mov	r1, sl
   264cc:	bne	26cbc <main@@Base+0x139e4>
   264d0:	add	r2, sl, #5
   264d4:	sub	r0, r8, r2
   264d8:	cmp	r0, #2
   264dc:	blt	26580 <main@@Base+0x132a8>
   264e0:	ldrb	r0, [r2]
   264e4:	cmp	r0, #32
   264e8:	bls	2656c <main@@Base+0x13294>
   264ec:	mov	r1, r2
   264f0:	b	26594 <main@@Base+0x132bc>
   264f4:	bne	26508 <main@@Base+0x13230>
   264f8:	mov	r7, r1
   264fc:	ldrb	r0, [r7, #1]!
   26500:	cmp	r0, #32
   26504:	bhi	26518 <main@@Base+0x13240>
   26508:	mov	r0, r9
   2650c:	mov	r2, r8
   26510:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26514:	mov	r7, r0
   26518:	cmp	r7, r8
   2651c:	beq	26554 <main@@Base+0x1327c>
   26520:	ldrb	r0, [r7]
   26524:	cmp	r0, #58	; 0x3a
   26528:	bne	26554 <main@@Base+0x1327c>
   2652c:	add	r1, r7, #1
   26530:	sub	r0, r8, r1
   26534:	cmp	r0, #2
   26538:	blt	267dc <main@@Base+0x13504>
   2653c:	ldrb	r0, [r1]
   26540:	cmp	r0, #32
   26544:	bls	267c8 <main@@Base+0x134f0>
   26548:	ldr	r9, [sp, #24]
   2654c:	mov	r7, r1
   26550:	b	267ec <main@@Base+0x13514>
   26554:	mov	r0, r9
   26558:	mov	r1, r7
   2655c:	mov	r2, r8
   26560:	mov	r3, #4
   26564:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26568:	b	267e8 <main@@Base+0x13510>
   2656c:	bne	26580 <main@@Base+0x132a8>
   26570:	mov	r1, r2
   26574:	ldrb	r0, [r1, #1]!
   26578:	cmp	r0, #32
   2657c:	bhi	26594 <main@@Base+0x132bc>
   26580:	mov	r1, r2
   26584:	mov	r0, r9
   26588:	mov	r2, r8
   2658c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26590:	mov	r1, r0
   26594:	cmp	r1, r8
   26598:	beq	265d0 <main@@Base+0x132f8>
   2659c:	ldrb	r0, [r1]
   265a0:	cmp	r0, #58	; 0x3a
   265a4:	bne	265d0 <main@@Base+0x132f8>
   265a8:	add	r2, r1, #1
   265ac:	sub	r0, r8, r2
   265b0:	cmp	r0, #2
   265b4:	blt	26ca8 <main@@Base+0x139d0>
   265b8:	ldrb	r0, [r2]
   265bc:	cmp	r0, #32
   265c0:	bls	26c94 <main@@Base+0x139bc>
   265c4:	ldr	r9, [sp, #24]
   265c8:	mov	r1, r2
   265cc:	b	26cbc <main@@Base+0x139e4>
   265d0:	mov	r0, r9
   265d4:	mov	r2, r8
   265d8:	mov	r3, #4
   265dc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   265e0:	b	26cb8 <main@@Base+0x139e0>
   265e4:	bne	265f4 <main@@Base+0x1331c>
   265e8:	ldrb	r0, [r1, #2]!
   265ec:	cmp	r0, #32
   265f0:	bhi	26608 <main@@Base+0x13330>
   265f4:	ldr	r0, [sp, #24]
   265f8:	mov	r1, r2
   265fc:	mov	r2, r8
   26600:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26604:	mov	r1, r0
   26608:	cmp	sl, r1
   2660c:	beq	26640 <main@@Base+0x13368>
   26610:	ldr	r9, [sp, #24]
   26614:	mov	r2, r8
   26618:	add	r3, sp, #36	; 0x24
   2661c:	mov	r0, r9
   26620:	bl	2f6d0 <flatcc_json_parser_build_string@@Base>
   26624:	mov	r4, r0
   26628:	ldr	r0, [sp, #36]	; 0x24
   2662c:	cmp	r0, #0
   26630:	beq	27170 <main@@Base+0x13e98>
   26634:	ldr	r0, [r9]
   26638:	mov	r1, #4
   2663c:	b	26cec <main@@Base+0x13a14>
   26640:	ldr	r0, [sp, #12]
   26644:	eor	r0, r7, r0
   26648:	orrs	r0, r5, r0
   2664c:	bne	2669c <main@@Base+0x133c4>
   26650:	cmp	r9, #9
   26654:	ldr	r9, [sp, #24]
   26658:	mov	r7, sl
   2665c:	blt	26950 <main@@Base+0x13678>
   26660:	ldr	r2, [sp, #28]
   26664:	mov	r1, sl
   26668:	ldrb	r0, [r1, #8]!
   2666c:	ldr	r2, [r2]
   26670:	cmp	r2, #0
   26674:	beq	266ac <main@@Base+0x133d4>
   26678:	cmp	r0, #33	; 0x21
   2667c:	bcc	2668c <main@@Base+0x133b4>
   26680:	cmp	r0, #58	; 0x3a
   26684:	mov	r7, sl
   26688:	bne	26950 <main@@Base+0x13678>
   2668c:	ldr	r0, [sp, #28]
   26690:	mov	r2, #0
   26694:	str	r2, [r0]
   26698:	b	266bc <main@@Base+0x133e4>
   2669c:	ldr	r9, [sp, #24]
   266a0:	mov	r0, r9
   266a4:	mov	r1, sl
   266a8:	b	26f40 <main@@Base+0x13c68>
   266ac:	cmp	r0, #34	; 0x22
   266b0:	mov	r7, sl
   266b4:	bne	26950 <main@@Base+0x13678>
   266b8:	add	r1, sl, #9
   266bc:	sub	r0, r8, r1
   266c0:	cmp	r0, #2
   266c4:	blt	266f0 <main@@Base+0x13418>
   266c8:	ldrb	r0, [r1]
   266cc:	cmp	r0, #32
   266d0:	bls	266dc <main@@Base+0x13404>
   266d4:	mov	r7, r1
   266d8:	b	26700 <main@@Base+0x13428>
   266dc:	bne	266f0 <main@@Base+0x13418>
   266e0:	mov	r7, r1
   266e4:	ldrb	r0, [r7, #1]!
   266e8:	cmp	r0, #32
   266ec:	bhi	26700 <main@@Base+0x13428>
   266f0:	mov	r0, r9
   266f4:	mov	r2, r8
   266f8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   266fc:	mov	r7, r0
   26700:	cmp	r7, r8
   26704:	beq	2673c <main@@Base+0x13464>
   26708:	ldrb	r0, [r7]
   2670c:	cmp	r0, #58	; 0x3a
   26710:	bne	2673c <main@@Base+0x13464>
   26714:	add	r1, r7, #1
   26718:	sub	r0, r8, r1
   2671c:	cmp	r0, #2
   26720:	blt	26940 <main@@Base+0x13668>
   26724:	ldrb	r0, [r1]
   26728:	cmp	r0, #32
   2672c:	bls	2692c <main@@Base+0x13654>
   26730:	ldr	r9, [sp, #24]
   26734:	mov	r7, r1
   26738:	b	26950 <main@@Base+0x13678>
   2673c:	mov	r0, r9
   26740:	mov	r1, r7
   26744:	mov	r2, r8
   26748:	mov	r3, #4
   2674c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26750:	b	2694c <main@@Base+0x13674>
   26754:	bne	26768 <main@@Base+0x13490>
   26758:	mov	r9, r1
   2675c:	ldrb	r0, [r9, #1]!
   26760:	cmp	r0, #32
   26764:	bhi	26778 <main@@Base+0x134a0>
   26768:	ldr	r0, [sp, #24]
   2676c:	mov	r2, r8
   26770:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26774:	mov	r9, r0
   26778:	cmp	r9, r8
   2677c:	beq	267b0 <main@@Base+0x134d8>
   26780:	ldrb	r0, [r9]
   26784:	cmp	r0, #58	; 0x3a
   26788:	bne	267b0 <main@@Base+0x134d8>
   2678c:	add	r1, r9, #1
   26790:	sub	r0, r8, r1
   26794:	cmp	r0, #2
   26798:	blt	26d8c <main@@Base+0x13ab4>
   2679c:	ldrb	r0, [r1]
   267a0:	cmp	r0, #32
   267a4:	bls	26d7c <main@@Base+0x13aa4>
   267a8:	mov	r9, r1
   267ac:	b	26d9c <main@@Base+0x13ac4>
   267b0:	ldr	r0, [sp, #24]
   267b4:	mov	r1, r9
   267b8:	mov	r2, r8
   267bc:	mov	r3, #4
   267c0:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   267c4:	b	26d98 <main@@Base+0x13ac0>
   267c8:	ldr	r9, [sp, #24]
   267cc:	bne	267dc <main@@Base+0x13504>
   267d0:	ldrb	r0, [r7, #2]!
   267d4:	cmp	r0, #32
   267d8:	bhi	267ec <main@@Base+0x13514>
   267dc:	mov	r0, r9
   267e0:	mov	r2, r8
   267e4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   267e8:	mov	r7, r0
   267ec:	cmp	sl, r7
   267f0:	beq	266a0 <main@@Base+0x133c8>
   267f4:	mov	r5, #0
   267f8:	cmp	r7, r8
   267fc:	str	r5, [fp, #-36]	; 0xffffffdc
   26800:	str	r5, [fp, #-40]	; 0xffffffd8
   26804:	str	r5, [sp, #44]	; 0x2c
   26808:	str	r5, [sp, #40]	; 0x28
   2680c:	str	r5, [fp, #-44]	; 0xffffffd4
   26810:	beq	26870 <main@@Base+0x13598>
   26814:	sub	r0, fp, #40	; 0x28
   26818:	mov	r1, r7
   2681c:	mov	r2, r8
   26820:	sub	r3, fp, #44	; 0x2c
   26824:	str	r0, [sp]
   26828:	mov	r0, r9
   2682c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   26830:	ldr	r6, [sp, #32]
   26834:	cmp	r0, r7
   26838:	beq	26880 <main@@Base+0x135a8>
   2683c:	sub	sl, fp, #44	; 0x2c
   26840:	mov	r4, r0
   26844:	ldm	sl, {r0, r5, sl}
   26848:	cmp	r0, #0
   2684c:	beq	26890 <main@@Base+0x135b8>
   26850:	subs	r0, r5, #1
   26854:	sbcs	r0, sl, #-2147483648	; 0x80000000
   26858:	bcc	268bc <main@@Base+0x135e4>
   2685c:	mov	r0, r9
   26860:	mov	r1, r4
   26864:	mov	r2, r8
   26868:	mov	r3, #8
   2686c:	b	268a8 <main@@Base+0x135d0>
   26870:	ldr	r6, [sp, #32]
   26874:	mov	sl, #0
   26878:	mov	r4, r8
   2687c:	b	268cc <main@@Base+0x135f4>
   26880:	mov	r5, #0
   26884:	mov	sl, #0
   26888:	mov	r4, r7
   2688c:	b	268cc <main@@Base+0x135f4>
   26890:	cmn	sl, #1
   26894:	bgt	268c4 <main@@Base+0x135ec>
   26898:	mov	r0, r9
   2689c:	mov	r1, r4
   268a0:	mov	r2, r8
   268a4:	mov	r3, #7
   268a8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   268ac:	mov	r4, r0
   268b0:	mov	r5, #0
   268b4:	mov	sl, #0
   268b8:	b	268cc <main@@Base+0x135f4>
   268bc:	rsbs	r5, r5, #0
   268c0:	rsc	sl, sl, #0
   268c4:	str	r5, [sp, #40]	; 0x28
   268c8:	str	sl, [sp, #44]	; 0x2c
   268cc:	cmp	r7, r4
   268d0:	bne	2690c <main@@Base+0x13634>
   268d4:	movw	r3, #16984	; 0x4258
   268d8:	add	r0, sp, #40	; 0x28
   268dc:	mov	r1, r7
   268e0:	mov	r2, r8
   268e4:	str	r0, [sp]
   268e8:	mov	r0, r9
   268ec:	movt	r3, #4
   268f0:	bl	22b10 <main@@Base+0xf838>
   268f4:	mov	r4, r0
   268f8:	cmp	r0, r7
   268fc:	cmpne	r4, r8
   26900:	beq	2716c <main@@Base+0x13e94>
   26904:	ldr	r5, [sp, #40]	; 0x28
   26908:	ldr	sl, [sp, #44]	; 0x2c
   2690c:	orrs	r0, r5, sl
   26910:	bne	26920 <main@@Base+0x13648>
   26914:	ldrb	r0, [r9, #8]
   26918:	tst	r0, #2
   2691c:	beq	26f50 <main@@Base+0x13c78>
   26920:	ldr	r0, [r9]
   26924:	mov	r1, #3
   26928:	b	26b00 <main@@Base+0x13828>
   2692c:	ldr	r9, [sp, #24]
   26930:	bne	26940 <main@@Base+0x13668>
   26934:	ldrb	r0, [r7, #2]!
   26938:	cmp	r0, #32
   2693c:	bhi	26950 <main@@Base+0x13678>
   26940:	mov	r0, r9
   26944:	mov	r2, r8
   26948:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2694c:	mov	r7, r0
   26950:	cmp	sl, r7
   26954:	beq	269d4 <main@@Base+0x136fc>
   26958:	mov	r5, #0
   2695c:	cmp	r7, r8
   26960:	str	r5, [fp, #-36]	; 0xffffffdc
   26964:	str	r5, [fp, #-40]	; 0xffffffd8
   26968:	str	r5, [sp, #44]	; 0x2c
   2696c:	str	r5, [sp, #40]	; 0x28
   26970:	str	r5, [fp, #-44]	; 0xffffffd4
   26974:	beq	26a48 <main@@Base+0x13770>
   26978:	sub	r0, fp, #40	; 0x28
   2697c:	mov	r1, r7
   26980:	mov	r2, r8
   26984:	sub	r3, fp, #44	; 0x2c
   26988:	str	r0, [sp]
   2698c:	mov	r0, r9
   26990:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   26994:	ldr	r6, [sp, #32]
   26998:	cmp	r0, r7
   2699c:	beq	26a58 <main@@Base+0x13780>
   269a0:	sub	sl, fp, #44	; 0x2c
   269a4:	mov	r4, r0
   269a8:	ldm	sl, {r0, r5, sl}
   269ac:	cmp	r0, #0
   269b0:	beq	26a68 <main@@Base+0x13790>
   269b4:	subs	r0, r5, #1
   269b8:	sbcs	r0, sl, #-2147483648	; 0x80000000
   269bc:	bcc	26a94 <main@@Base+0x137bc>
   269c0:	mov	r0, r9
   269c4:	mov	r1, r4
   269c8:	mov	r2, r8
   269cc:	mov	r3, #8
   269d0:	b	26a80 <main@@Base+0x137a8>
   269d4:	add	r7, sl, #8
   269d8:	mov	r1, #8
   269dc:	mov	r2, #-268435456	; 0xf0000000
   269e0:	sub	r0, r8, r7
   269e4:	cmp	r0, #8
   269e8:	movcc	r1, r0
   269ec:	add	r1, r2, r1, lsl #28
   269f0:	asr	r1, r1, #28
   269f4:	cmp	r1, #0
   269f8:	blt	26f38 <main@@Base+0x13c60>
   269fc:	ldrb	r1, [r7]
   26a00:	cmp	r1, #53	; 0x35
   26a04:	bne	26f38 <main@@Base+0x13c60>
   26a08:	cmp	r0, #2
   26a0c:	blt	26f34 <main@@Base+0x13c5c>
   26a10:	ldr	r2, [sp, #28]
   26a14:	mov	r1, sl
   26a18:	ldrb	r0, [r1, #9]!
   26a1c:	ldr	r2, [r2]
   26a20:	cmp	r2, #0
   26a24:	beq	26b1c <main@@Base+0x13844>
   26a28:	cmp	r0, #33	; 0x21
   26a2c:	bcc	26a38 <main@@Base+0x13760>
   26a30:	cmp	r0, #58	; 0x3a
   26a34:	bne	26f34 <main@@Base+0x13c5c>
   26a38:	ldr	r0, [sp, #28]
   26a3c:	mov	r2, #0
   26a40:	str	r2, [r0]
   26a44:	b	26b28 <main@@Base+0x13850>
   26a48:	ldr	r6, [sp, #32]
   26a4c:	mov	sl, #0
   26a50:	mov	r4, r8
   26a54:	b	26aa4 <main@@Base+0x137cc>
   26a58:	mov	r5, #0
   26a5c:	mov	sl, #0
   26a60:	mov	r4, r7
   26a64:	b	26aa4 <main@@Base+0x137cc>
   26a68:	cmn	sl, #1
   26a6c:	bgt	26a9c <main@@Base+0x137c4>
   26a70:	mov	r0, r9
   26a74:	mov	r1, r4
   26a78:	mov	r2, r8
   26a7c:	mov	r3, #7
   26a80:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26a84:	mov	r4, r0
   26a88:	mov	r5, #0
   26a8c:	mov	sl, #0
   26a90:	b	26aa4 <main@@Base+0x137cc>
   26a94:	rsbs	r5, r5, #0
   26a98:	rsc	sl, sl, #0
   26a9c:	str	r5, [sp, #40]	; 0x28
   26aa0:	str	sl, [sp, #44]	; 0x2c
   26aa4:	cmp	r7, r4
   26aa8:	bne	26ae4 <main@@Base+0x1380c>
   26aac:	movw	r3, #17020	; 0x427c
   26ab0:	add	r0, sp, #40	; 0x28
   26ab4:	mov	r1, r7
   26ab8:	mov	r2, r8
   26abc:	str	r0, [sp]
   26ac0:	mov	r0, r9
   26ac4:	movt	r3, #4
   26ac8:	bl	22b10 <main@@Base+0xf838>
   26acc:	mov	r4, r0
   26ad0:	cmp	r0, r7
   26ad4:	cmpne	r4, r8
   26ad8:	beq	2716c <main@@Base+0x13e94>
   26adc:	ldr	r5, [sp, #40]	; 0x28
   26ae0:	ldr	sl, [sp, #44]	; 0x2c
   26ae4:	orrs	r0, r5, sl
   26ae8:	bne	26af8 <main@@Base+0x13820>
   26aec:	ldrb	r0, [r9, #8]
   26af0:	tst	r0, #2
   26af4:	beq	26f50 <main@@Base+0x13c78>
   26af8:	ldr	r0, [r9]
   26afc:	mov	r1, #7
   26b00:	mov	r2, #8
   26b04:	mov	r3, #8
   26b08:	bl	2b8dc <flatcc_builder_table_add@@Base>
   26b0c:	cmp	r0, #0
   26b10:	beq	2716c <main@@Base+0x13e94>
   26b14:	stm	r0, {r5, sl}
   26b18:	b	26f50 <main@@Base+0x13c78>
   26b1c:	cmp	r0, #34	; 0x22
   26b20:	bne	26f34 <main@@Base+0x13c5c>
   26b24:	add	r1, sl, #10
   26b28:	sub	r0, r8, r1
   26b2c:	cmp	r0, #2
   26b30:	blt	26d1c <main@@Base+0x13a44>
   26b34:	ldrb	r0, [r1]
   26b38:	cmp	r0, #32
   26b3c:	bls	26d08 <main@@Base+0x13a30>
   26b40:	mov	r9, r1
   26b44:	b	26d2c <main@@Base+0x13a54>
   26b48:	bne	26b58 <main@@Base+0x13880>
   26b4c:	ldrb	r0, [r9, #2]!
   26b50:	cmp	r0, #32
   26b54:	bhi	26b68 <main@@Base+0x13890>
   26b58:	ldr	r0, [sp, #24]
   26b5c:	mov	r2, r8
   26b60:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26b64:	mov	r9, r0
   26b68:	cmp	r7, r9
   26b6c:	beq	26f34 <main@@Base+0x13c5c>
   26b70:	mov	r5, #0
   26b74:	cmp	r9, r8
   26b78:	str	r5, [fp, #-36]	; 0xffffffdc
   26b7c:	str	r5, [fp, #-40]	; 0xffffffd8
   26b80:	str	r5, [fp, #-44]	; 0xffffffd4
   26b84:	str	r5, [sp, #40]	; 0x28
   26b88:	beq	26bd4 <main@@Base+0x138fc>
   26b8c:	sub	r0, fp, #40	; 0x28
   26b90:	mov	r1, r9
   26b94:	mov	r2, r8
   26b98:	add	r3, sp, #40	; 0x28
   26b9c:	str	r0, [sp]
   26ba0:	ldr	r0, [sp, #24]
   26ba4:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   26ba8:	cmp	r0, r9
   26bac:	beq	26bdc <main@@Base+0x13904>
   26bb0:	mov	r4, r0
   26bb4:	ldr	r0, [sp, #40]	; 0x28
   26bb8:	cmp	r0, #0
   26bbc:	beq	26be4 <main@@Base+0x1390c>
   26bc0:	ldr	r0, [sp, #24]
   26bc4:	mov	r1, r4
   26bc8:	mov	r2, r8
   26bcc:	mov	r3, #8
   26bd0:	b	26c00 <main@@Base+0x13928>
   26bd4:	mov	r4, r8
   26bd8:	b	26c08 <main@@Base+0x13930>
   26bdc:	mov	r4, r9
   26be0:	b	26c08 <main@@Base+0x13930>
   26be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26be8:	cmp	r0, #0
   26bec:	beq	26c88 <main@@Base+0x139b0>
   26bf0:	ldr	r0, [sp, #24]
   26bf4:	mov	r1, r4
   26bf8:	mov	r2, r8
   26bfc:	mov	r3, #7
   26c00:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26c04:	mov	r4, r0
   26c08:	ldr	r6, [sp, #32]
   26c0c:	cmp	r9, r4
   26c10:	bne	26c4c <main@@Base+0x13974>
   26c14:	sub	r0, fp, #44	; 0x2c
   26c18:	movw	r3, #16972	; 0x424c
   26c1c:	mov	r1, r9
   26c20:	mov	r2, r8
   26c24:	str	r0, [sp]
   26c28:	ldr	r0, [sp, #24]
   26c2c:	movt	r3, #4
   26c30:	bl	22d58 <main@@Base+0xfa80>
   26c34:	mov	r4, r0
   26c38:	cmp	r0, r9
   26c3c:	cmpne	r4, r8
   26c40:	beq	2716c <main@@Base+0x13e94>
   26c44:	ldr	r5, [fp, #-44]	; 0xffffffd4
   26c48:	ldr	r6, [sp, #32]
   26c4c:	ldr	r9, [sp, #24]
   26c50:	cmp	r5, #0
   26c54:	bne	26c64 <main@@Base+0x1398c>
   26c58:	ldrb	r0, [r9, #8]
   26c5c:	tst	r0, #2
   26c60:	beq	26f50 <main@@Base+0x13c78>
   26c64:	ldr	r0, [r9]
   26c68:	mov	r1, #1
   26c6c:	mov	r2, #4
   26c70:	mov	r3, #4
   26c74:	bl	2b8dc <flatcc_builder_table_add@@Base>
   26c78:	cmp	r0, #0
   26c7c:	beq	2716c <main@@Base+0x13e94>
   26c80:	str	r5, [r0]
   26c84:	b	26f50 <main@@Base+0x13c78>
   26c88:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26c8c:	str	r5, [fp, #-44]	; 0xffffffd4
   26c90:	b	26c08 <main@@Base+0x13930>
   26c94:	ldr	r9, [sp, #24]
   26c98:	bne	26ca8 <main@@Base+0x139d0>
   26c9c:	ldrb	r0, [r1, #2]!
   26ca0:	cmp	r0, #32
   26ca4:	bhi	26cbc <main@@Base+0x139e4>
   26ca8:	mov	r1, r2
   26cac:	mov	r0, r9
   26cb0:	mov	r2, r8
   26cb4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26cb8:	mov	r1, r0
   26cbc:	cmp	sl, r1
   26cc0:	beq	266a0 <main@@Base+0x133c8>
   26cc4:	mov	r0, r9
   26cc8:	mov	r2, r8
   26ccc:	add	r3, sp, #36	; 0x24
   26cd0:	bl	2f6d0 <flatcc_json_parser_build_string@@Base>
   26cd4:	mov	r4, r0
   26cd8:	ldr	r0, [sp, #36]	; 0x24
   26cdc:	cmp	r0, #0
   26ce0:	beq	27170 <main@@Base+0x13e98>
   26ce4:	ldr	r0, [r9]
   26ce8:	mov	r1, #2
   26cec:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   26cf0:	ldr	r6, [sp, #32]
   26cf4:	cmp	r0, #0
   26cf8:	beq	27170 <main@@Base+0x13e98>
   26cfc:	ldr	r1, [sp, #36]	; 0x24
   26d00:	str	r1, [r0]
   26d04:	b	26f50 <main@@Base+0x13c78>
   26d08:	bne	26d1c <main@@Base+0x13a44>
   26d0c:	mov	r9, r1
   26d10:	ldrb	r0, [r9, #1]!
   26d14:	cmp	r0, #32
   26d18:	bhi	26d2c <main@@Base+0x13a54>
   26d1c:	ldr	r0, [sp, #24]
   26d20:	mov	r2, r8
   26d24:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26d28:	mov	r9, r0
   26d2c:	cmp	r9, r8
   26d30:	beq	26d64 <main@@Base+0x13a8c>
   26d34:	ldrb	r0, [r9]
   26d38:	cmp	r0, #58	; 0x3a
   26d3c:	bne	26d64 <main@@Base+0x13a8c>
   26d40:	add	r1, r9, #1
   26d44:	sub	r0, r8, r1
   26d48:	cmp	r0, #2
   26d4c:	blt	26eb8 <main@@Base+0x13be0>
   26d50:	ldrb	r0, [r1]
   26d54:	cmp	r0, #32
   26d58:	bls	26ea8 <main@@Base+0x13bd0>
   26d5c:	mov	r9, r1
   26d60:	b	26ec8 <main@@Base+0x13bf0>
   26d64:	ldr	r0, [sp, #24]
   26d68:	mov	r1, r9
   26d6c:	mov	r2, r8
   26d70:	mov	r3, #4
   26d74:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26d78:	b	26ec4 <main@@Base+0x13bec>
   26d7c:	bne	26d8c <main@@Base+0x13ab4>
   26d80:	ldrb	r0, [r9, #2]!
   26d84:	cmp	r0, #32
   26d88:	bhi	26d9c <main@@Base+0x13ac4>
   26d8c:	ldr	r0, [sp, #24]
   26d90:	mov	r2, r8
   26d94:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26d98:	mov	r9, r0
   26d9c:	cmp	r7, r9
   26da0:	beq	26f34 <main@@Base+0x13c5c>
   26da4:	mov	r5, #0
   26da8:	cmp	r9, r8
   26dac:	str	r5, [fp, #-36]	; 0xffffffdc
   26db0:	str	r5, [fp, #-40]	; 0xffffffd8
   26db4:	str	r5, [fp, #-44]	; 0xffffffd4
   26db8:	str	r5, [sp, #40]	; 0x28
   26dbc:	beq	26e08 <main@@Base+0x13b30>
   26dc0:	sub	r0, fp, #40	; 0x28
   26dc4:	mov	r1, r9
   26dc8:	mov	r2, r8
   26dcc:	add	r3, sp, #40	; 0x28
   26dd0:	str	r0, [sp]
   26dd4:	ldr	r0, [sp, #24]
   26dd8:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   26ddc:	cmp	r0, r9
   26de0:	beq	26e10 <main@@Base+0x13b38>
   26de4:	mov	r4, r0
   26de8:	ldr	r0, [sp, #40]	; 0x28
   26dec:	cmp	r0, #0
   26df0:	beq	26e18 <main@@Base+0x13b40>
   26df4:	ldr	r0, [sp, #24]
   26df8:	mov	r1, r4
   26dfc:	mov	r2, r8
   26e00:	mov	r3, #8
   26e04:	b	26e34 <main@@Base+0x13b5c>
   26e08:	mov	r4, r8
   26e0c:	b	26e3c <main@@Base+0x13b64>
   26e10:	mov	r4, r9
   26e14:	b	26e3c <main@@Base+0x13b64>
   26e18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26e1c:	cmp	r0, #0
   26e20:	beq	26e9c <main@@Base+0x13bc4>
   26e24:	ldr	r0, [sp, #24]
   26e28:	mov	r1, r4
   26e2c:	mov	r2, r8
   26e30:	mov	r3, #7
   26e34:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   26e38:	mov	r4, r0
   26e3c:	cmp	r9, r4
   26e40:	bne	26e78 <main@@Base+0x13ba0>
   26e44:	sub	r0, fp, #44	; 0x2c
   26e48:	movw	r3, #17008	; 0x4270
   26e4c:	mov	r1, r9
   26e50:	mov	r2, r8
   26e54:	str	r0, [sp]
   26e58:	ldr	r0, [sp, #24]
   26e5c:	movt	r3, #4
   26e60:	bl	22d58 <main@@Base+0xfa80>
   26e64:	mov	r4, r0
   26e68:	cmp	r0, r9
   26e6c:	cmpne	r4, r8
   26e70:	beq	2716c <main@@Base+0x13e94>
   26e74:	ldr	r5, [fp, #-44]	; 0xffffffd4
   26e78:	cmp	r5, #0
   26e7c:	bne	26e90 <main@@Base+0x13bb8>
   26e80:	ldr	r0, [sp, #24]
   26e84:	ldrb	r0, [r0, #8]
   26e88:	tst	r0, #2
   26e8c:	beq	25c0c <main@@Base+0x12934>
   26e90:	ldr	r0, [sp, #24]
   26e94:	mov	r1, #6
   26e98:	b	25bf0 <main@@Base+0x12918>
   26e9c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26ea0:	str	r5, [fp, #-44]	; 0xffffffd4
   26ea4:	b	26e3c <main@@Base+0x13b64>
   26ea8:	bne	26eb8 <main@@Base+0x13be0>
   26eac:	ldrb	r0, [r9, #2]!
   26eb0:	cmp	r0, #32
   26eb4:	bhi	26ec8 <main@@Base+0x13bf0>
   26eb8:	ldr	r0, [sp, #24]
   26ebc:	mov	r2, r8
   26ec0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26ec4:	mov	r9, r0
   26ec8:	cmp	r7, r9
   26ecc:	beq	26f34 <main@@Base+0x13c5c>
   26ed0:	mov	r5, #0
   26ed4:	cmp	r9, r8
   26ed8:	str	r5, [fp, #-36]	; 0xffffffdc
   26edc:	str	r5, [fp, #-40]	; 0xffffffd8
   26ee0:	str	r5, [fp, #-44]	; 0xffffffd4
   26ee4:	str	r5, [sp, #40]	; 0x28
   26ee8:	beq	25b60 <main@@Base+0x12888>
   26eec:	sub	r0, fp, #40	; 0x28
   26ef0:	mov	r1, r9
   26ef4:	mov	r2, r8
   26ef8:	add	r3, sp, #40	; 0x28
   26efc:	str	r0, [sp]
   26f00:	ldr	r0, [sp, #24]
   26f04:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   26f08:	cmp	r0, r9
   26f0c:	beq	25b68 <main@@Base+0x12890>
   26f10:	mov	r4, r0
   26f14:	ldr	r0, [sp, #40]	; 0x28
   26f18:	cmp	r0, #0
   26f1c:	beq	25b70 <main@@Base+0x12898>
   26f20:	ldr	r0, [sp, #24]
   26f24:	mov	r1, r4
   26f28:	mov	r2, r8
   26f2c:	mov	r3, #8
   26f30:	b	25b8c <main@@Base+0x128b4>
   26f34:	ldr	r9, [sp, #24]
   26f38:	mov	r0, r9
   26f3c:	mov	r1, r7
   26f40:	mov	r2, r8
   26f44:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   26f48:	mov	r4, r0
   26f4c:	ldr	r6, [sp, #32]
   26f50:	sub	r0, r8, r4
   26f54:	cmp	r0, #2
   26f58:	blt	26f84 <main@@Base+0x13cac>
   26f5c:	ldrb	r0, [r4]
   26f60:	cmp	r0, #32
   26f64:	bls	26f70 <main@@Base+0x13c98>
   26f68:	mov	r2, r4
   26f6c:	b	26f98 <main@@Base+0x13cc0>
   26f70:	bne	26f84 <main@@Base+0x13cac>
   26f74:	mov	r2, r4
   26f78:	ldrb	r0, [r2, #1]!
   26f7c:	cmp	r0, #32
   26f80:	bhi	26f98 <main@@Base+0x13cc0>
   26f84:	mov	r0, r9
   26f88:	mov	r1, r4
   26f8c:	mov	r2, r8
   26f90:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26f94:	mov	r2, r0
   26f98:	cmp	r2, r8
   26f9c:	beq	27008 <main@@Base+0x13d30>
   26fa0:	ldrb	r0, [r2]
   26fa4:	cmp	r0, #44	; 0x2c
   26fa8:	bne	27010 <main@@Base+0x13d38>
   26fac:	add	r1, r2, #1
   26fb0:	sub	r0, r8, r1
   26fb4:	cmp	r0, #2
   26fb8:	blt	26fe0 <main@@Base+0x13d08>
   26fbc:	ldrb	r0, [r1]
   26fc0:	cmp	r0, #32
   26fc4:	bls	26fd0 <main@@Base+0x13cf8>
   26fc8:	mov	r2, r1
   26fcc:	b	26ff0 <main@@Base+0x13d18>
   26fd0:	bne	26fe0 <main@@Base+0x13d08>
   26fd4:	ldrb	r0, [r2, #2]!
   26fd8:	cmp	r0, #32
   26fdc:	bhi	26ff0 <main@@Base+0x13d18>
   26fe0:	mov	r0, r9
   26fe4:	mov	r2, r8
   26fe8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   26fec:	mov	r2, r0
   26ff0:	cmp	r2, r8
   26ff4:	beq	2703c <main@@Base+0x13d64>
   26ff8:	ldrb	r0, [r2]
   26ffc:	cmp	r0, #125	; 0x7d
   27000:	bne	25c20 <main@@Base+0x12948>
   27004:	b	27018 <main@@Base+0x13d40>
   27008:	mov	r4, r8
   2700c:	b	246f8 <main@@Base+0x11420>
   27010:	cmp	r0, #125	; 0x7d
   27014:	bne	27048 <main@@Base+0x13d70>
   27018:	add	r1, r2, #1
   2701c:	sub	r0, r8, r1
   27020:	cmp	r0, #2
   27024:	blt	27074 <main@@Base+0x13d9c>
   27028:	ldrb	r0, [r1]
   2702c:	cmp	r0, #32
   27030:	bls	27060 <main@@Base+0x13d88>
   27034:	mov	r4, r1
   27038:	b	246f8 <main@@Base+0x11420>
   2703c:	mov	r0, r9
   27040:	mov	r1, r8
   27044:	b	27050 <main@@Base+0x13d78>
   27048:	mov	r0, r9
   2704c:	mov	r1, r2
   27050:	mov	r2, r8
   27054:	mov	r3, #10
   27058:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2705c:	b	246f4 <main@@Base+0x1141c>
   27060:	bne	27074 <main@@Base+0x13d9c>
   27064:	ldrb	r0, [r2, #2]!
   27068:	cmp	r0, #32
   2706c:	mov	r4, r2
   27070:	bhi	246f8 <main@@Base+0x11420>
   27074:	mov	r0, r9
   27078:	mov	r2, r8
   2707c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27080:	b	246f4 <main@@Base+0x1141c>
   27084:	mov	r4, r8
   27088:	b	27100 <main@@Base+0x13e28>
   2708c:	cmp	r0, #125	; 0x7d
   27090:	bne	270e8 <main@@Base+0x13e10>
   27094:	add	r4, r2, #1
   27098:	sub	r0, r8, r4
   2709c:	cmp	r0, #2
   270a0:	blt	270c8 <main@@Base+0x13df0>
   270a4:	ldrb	r0, [r4]
   270a8:	cmp	r0, #32
   270ac:	bhi	27100 <main@@Base+0x13e28>
   270b0:	bne	270c8 <main@@Base+0x13df0>
   270b4:	ldrb	r0, [r2, #2]!
   270b8:	cmp	r0, #32
   270bc:	bls	270c8 <main@@Base+0x13df0>
   270c0:	mov	r4, r2
   270c4:	b	27100 <main@@Base+0x13e28>
   270c8:	mov	r0, r9
   270cc:	mov	r1, r4
   270d0:	mov	r2, r8
   270d4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   270d8:	b	270fc <main@@Base+0x13e24>
   270dc:	mov	r0, r9
   270e0:	mov	r1, r8
   270e4:	b	270f0 <main@@Base+0x13e18>
   270e8:	mov	r0, r9
   270ec:	mov	r1, r2
   270f0:	mov	r2, r8
   270f4:	mov	r3, #10
   270f8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   270fc:	mov	r4, r0
   27100:	ldr	r0, [sp, #20]
   27104:	ldr	r0, [r0]
   27108:	cmp	r0, #0
   2710c:	beq	27134 <main@@Base+0x13e5c>
   27110:	mov	r0, r9
   27114:	mov	r1, r4
   27118:	mov	r2, r8
   2711c:	mov	r3, #33	; 0x21
   27120:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   27124:	mov	r4, r0
   27128:	mov	r0, r4
   2712c:	sub	sp, fp, #28
   27130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27134:	ldr	r0, [r9]
   27138:	bl	2af9c <flatcc_builder_end_table@@Base>
   2713c:	cmp	r0, #0
   27140:	str	r0, [r6]
   27144:	bne	27128 <main@@Base+0x13e50>
   27148:	b	27110 <main@@Base+0x13e38>
   2714c:	bne	2715c <main@@Base+0x13e84>
   27150:	ldrb	r0, [r4, #2]!
   27154:	cmp	r0, #32
   27158:	bhi	23edc <main@@Base+0x10c04>
   2715c:	mov	r0, r9
   27160:	mov	r2, r8
   27164:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27168:	b	23ed8 <main@@Base+0x10c00>
   2716c:	ldr	r9, [sp, #24]
   27170:	mov	r0, r9
   27174:	mov	r1, r4
   27178:	mov	r2, r8
   2717c:	mov	r3, #33	; 0x21
   27180:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   27184:	mov	r4, r0
   27188:	b	27110 <main@@Base+0x13e38>
   2718c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27190:	add	fp, sp, #28
   27194:	push	{r3}		; (str r3, [sp, #-4]!)
   27198:	sub	r7, r2, r1
   2719c:	cmp	r7, #8
   271a0:	movcs	r7, #8
   271a4:	and	r7, r7, #15
   271a8:	sub	r5, r7, #1
   271ac:	cmp	r5, #7
   271b0:	bhi	27294 <main@@Base+0x13fbc>
   271b4:	add	lr, pc, #32
   271b8:	mov	ip, #0
   271bc:	mov	r3, #0
   271c0:	mov	r8, #0
   271c4:	mov	r9, #0
   271c8:	mov	sl, #0
   271cc:	mov	r7, #0
   271d0:	mov	r4, #0
   271d4:	mov	r6, #0
   271d8:	ldr	pc, [lr, r5, lsl #2]
   271dc:	andeq	r7, r2, r0, asr #4
   271e0:	andeq	r7, r2, r8, lsr r2
   271e4:	andeq	r7, r2, r0, lsr r2
   271e8:	andeq	r7, r2, r8, lsr #4
   271ec:	andeq	r7, r2, ip, lsl r2
   271f0:	andeq	r7, r2, r0, lsl r2
   271f4:	andeq	r7, r2, r0, lsl #4
   271f8:	strdeq	r7, [r2], -ip
   271fc:	ldrb	r3, [r1, #7]
   27200:	ldrb	r7, [r1, #6]
   27204:	mov	r8, ip
   27208:	orr	r3, r3, r7, lsl #8
   2720c:	mov	ip, r3
   27210:	ldrb	r3, [r1, #5]
   27214:	mov	r9, r8
   27218:	orr	ip, ip, r3, lsl #16
   2721c:	ldrb	r3, [r1, #4]
   27220:	mov	sl, r9
   27224:	orr	ip, ip, r3, lsl #24
   27228:	ldrb	r3, [r1, #3]
   2722c:	orr	r7, r3, sl
   27230:	ldrb	r3, [r1, #2]
   27234:	orr	r4, r7, r3, lsl #8
   27238:	ldrb	r3, [r1, #1]
   2723c:	orr	r6, r4, r3, lsl #16
   27240:	ldrb	r7, [r1]
   27244:	movw	r3, #29797	; 0x7465
   27248:	movt	r3, #24931	; 0x6163
   2724c:	eor	r3, ip, r3
   27250:	orr	r7, r6, r7, lsl #24
   27254:	movw	r6, #24946	; 0x6172
   27258:	movt	r6, #17256	; 0x4368
   2725c:	eor	r7, r7, r6
   27260:	orrs	r3, r3, r7
   27264:	bne	27294 <main@@Base+0x13fbc>
   27268:	add	lr, r1, #8
   2726c:	mov	r6, #-268435456	; 0xf0000000
   27270:	sub	r7, r2, lr
   27274:	cmp	r7, #8
   27278:	mov	r3, r7
   2727c:	movcs	r3, #8
   27280:	add	r3, r6, r3, lsl #28
   27284:	asr	r3, r3, #28
   27288:	cmp	r3, #0
   2728c:	cmpge	r7, #2
   27290:	bge	272a0 <main@@Base+0x13fc8>
   27294:	mov	r0, r1
   27298:	sub	sp, fp, #28
   2729c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   272a0:	ldrb	r3, [lr]
   272a4:	cmp	r3, #114	; 0x72
   272a8:	bne	27294 <main@@Base+0x13fbc>
   272ac:	ldrb	r3, [r1, #9]
   272b0:	mov	ip, lr
   272b4:	cmp	r3, #46	; 0x2e
   272b8:	addeq	ip, r1, #10
   272bc:	cmp	ip, lr
   272c0:	beq	27294 <main@@Base+0x13fbc>
   272c4:	ldr	r3, [sp]
   272c8:	mov	r1, ip
   272cc:	sub	sp, fp, #28
   272d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   272d4:	b	23b50 <main@@Base+0x10878>
   272d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   272dc:	add	fp, sp, #28
   272e0:	sub	sp, sp, #36	; 0x24
   272e4:	ldr	r7, [fp, #8]
   272e8:	mov	r9, r0
   272ec:	mov	r0, #0
   272f0:	mov	r8, r2
   272f4:	mov	r4, r1
   272f8:	cmp	r3, #11
   272fc:	str	r0, [r7]
   27300:	bhi	27354 <main@@Base+0x1407c>
   27304:	add	r0, pc, #0
   27308:	ldr	pc, [r0, r3, lsl #2]
   2730c:	muleq	r2, r4, r3
   27310:	andeq	r7, r2, r4, ror r3
   27314:	ldrdeq	r7, [r2], -r0
   27318:	andeq	r7, r2, r4, ror r3
   2731c:	andeq	r7, r2, r4, ror r3
   27320:	andeq	r7, r2, r4, ror r3
   27324:	andeq	r7, r2, r4, ror r3
   27328:	andeq	r7, r2, r4, ror r3
   2732c:	andeq	r7, r2, r4, lsr #8
   27330:	andeq	r7, r2, ip, lsr r3
   27334:	andeq	r7, r2, ip, lsr r3
   27338:	andeq	r7, r2, ip, asr r3
   2733c:	mov	r0, r9
   27340:	mov	r1, r4
   27344:	mov	r2, r8
   27348:	mov	r3, r7
   2734c:	bl	28188 <main@@Base+0x14eb0>
   27350:	b	2751c <main@@Base+0x14244>
   27354:	cmp	r3, #255	; 0xff
   27358:	bne	27374 <main@@Base+0x1409c>
   2735c:	mov	r0, r9
   27360:	mov	r1, r4
   27364:	mov	r2, r8
   27368:	mov	r3, r7
   2736c:	bl	2f6d0 <flatcc_json_parser_build_string@@Base>
   27370:	b	2751c <main@@Base+0x14244>
   27374:	ldrb	r0, [r9, #8]
   27378:	tst	r0, #1
   2737c:	bne	27480 <main@@Base+0x141a8>
   27380:	mov	r0, r9
   27384:	mov	r1, r4
   27388:	mov	r2, r8
   2738c:	mov	r3, #15
   27390:	b	273c4 <main@@Base+0x140ec>
   27394:	sub	r0, r8, r4
   27398:	cmp	r0, #4
   2739c:	blt	273b4 <main@@Base+0x140dc>
   273a0:	ldr	r0, [r4]
   273a4:	movw	r1, #30062	; 0x756e
   273a8:	movt	r1, #27756	; 0x6c6c
   273ac:	cmp	r0, r1
   273b0:	beq	2755c <main@@Base+0x14284>
   273b4:	mov	r0, r9
   273b8:	mov	r1, r4
   273bc:	mov	r2, r8
   273c0:	mov	r3, #26
   273c4:	sub	sp, fp, #28
   273c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   273cc:	b	2d294 <flatcc_json_parser_set_error@@Base>
   273d0:	mov	r0, #0
   273d4:	mov	r1, #1
   273d8:	str	r0, [r7]
   273dc:	ldr	r0, [r9]
   273e0:	bl	2a60c <flatcc_builder_start_table@@Base>
   273e4:	cmp	r0, #0
   273e8:	bne	27508 <main@@Base+0x14230>
   273ec:	cmp	r4, r8
   273f0:	beq	274e4 <main@@Base+0x1420c>
   273f4:	ldrb	r0, [r4]
   273f8:	cmp	r0, #123	; 0x7b
   273fc:	bne	274e4 <main@@Base+0x1420c>
   27400:	add	r1, r4, #1
   27404:	sub	r0, r8, r1
   27408:	cmp	r0, #2
   2740c:	blt	27a98 <main@@Base+0x147c0>
   27410:	ldrb	r0, [r1]
   27414:	cmp	r0, #32
   27418:	bls	27a88 <main@@Base+0x147b0>
   2741c:	mov	r4, r1
   27420:	b	27aa8 <main@@Base+0x147d0>
   27424:	mov	r0, #0
   27428:	mov	r1, #2
   2742c:	mov	r2, #2
   27430:	str	r0, [r7]
   27434:	ldr	r0, [r9]
   27438:	bl	298b0 <flatcc_builder_start_struct@@Base>
   2743c:	cmp	r0, #0
   27440:	beq	274d8 <main@@Base+0x14200>
   27444:	cmp	r4, r8
   27448:	beq	27498 <main@@Base+0x141c0>
   2744c:	ldrb	r1, [r4]
   27450:	cmp	r1, #123	; 0x7b
   27454:	bne	27498 <main@@Base+0x141c0>
   27458:	add	r1, r4, #1
   2745c:	str	r0, [sp, #4]
   27460:	sub	r0, r8, r1
   27464:	cmp	r0, #2
   27468:	blt	2758c <main@@Base+0x142b4>
   2746c:	ldrb	r0, [r1]
   27470:	cmp	r0, #32
   27474:	bls	2757c <main@@Base+0x142a4>
   27478:	mov	r4, r1
   2747c:	b	2759c <main@@Base+0x142c4>
   27480:	mov	r0, r9
   27484:	mov	r1, r4
   27488:	mov	r2, r8
   2748c:	sub	sp, fp, #28
   27490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27494:	b	2dc04 <flatcc_json_parser_generic_json@@Base>
   27498:	mov	r0, r9
   2749c:	mov	r1, r4
   274a0:	mov	r2, r8
   274a4:	mov	r3, #21
   274a8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   274ac:	mov	r4, r0
   274b0:	cmp	r4, r8
   274b4:	mov	r1, r8
   274b8:	beq	274dc <main@@Base+0x14204>
   274bc:	ldr	r0, [r9]
   274c0:	bl	29950 <flatcc_builder_end_struct@@Base>
   274c4:	cmp	r0, #0
   274c8:	mov	r1, r4
   274cc:	str	r0, [r7]
   274d0:	bne	27520 <main@@Base+0x14248>
   274d4:	b	274dc <main@@Base+0x14204>
   274d8:	mov	r1, r4
   274dc:	mov	r0, r9
   274e0:	b	27510 <main@@Base+0x14238>
   274e4:	mov	r0, r9
   274e8:	mov	r1, r4
   274ec:	mov	r2, r8
   274f0:	mov	r3, #21
   274f4:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   274f8:	mov	r4, r0
   274fc:	ldr	r0, [r9, #24]
   27500:	cmp	r0, #0
   27504:	beq	27564 <main@@Base+0x1428c>
   27508:	mov	r0, r9
   2750c:	mov	r1, r4
   27510:	mov	r2, r8
   27514:	mov	r3, #33	; 0x21
   27518:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2751c:	mov	r4, r0
   27520:	ldr	r0, [r9, #24]
   27524:	cmp	r0, #0
   27528:	bne	27550 <main@@Base+0x14278>
   2752c:	ldr	r0, [r7]
   27530:	cmp	r0, #0
   27534:	bne	27550 <main@@Base+0x14278>
   27538:	mov	r0, r9
   2753c:	mov	r1, r4
   27540:	mov	r2, r8
   27544:	mov	r3, #33	; 0x21
   27548:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2754c:	mov	r4, r0
   27550:	mov	r0, r4
   27554:	sub	sp, fp, #28
   27558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2755c:	add	r4, r4, #4
   27560:	b	27550 <main@@Base+0x14278>
   27564:	ldr	r0, [r9]
   27568:	bl	2af9c <flatcc_builder_end_table@@Base>
   2756c:	cmp	r0, #0
   27570:	str	r0, [r7]
   27574:	bne	27520 <main@@Base+0x14248>
   27578:	b	27508 <main@@Base+0x14230>
   2757c:	bne	2758c <main@@Base+0x142b4>
   27580:	ldrb	r0, [r4, #2]!
   27584:	cmp	r0, #32
   27588:	bhi	2759c <main@@Base+0x142c4>
   2758c:	mov	r0, r9
   27590:	mov	r2, r8
   27594:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27598:	mov	r4, r0
   2759c:	cmp	r4, r8
   275a0:	mov	r2, r8
   275a4:	beq	275e8 <main@@Base+0x14310>
   275a8:	ldrb	r0, [r4]
   275ac:	cmp	r0, #125	; 0x7d
   275b0:	bne	275e4 <main@@Base+0x1430c>
   275b4:	add	r1, r4, #1
   275b8:	sub	r0, r8, r1
   275bc:	cmp	r0, #2
   275c0:	blt	28100 <main@@Base+0x14e28>
   275c4:	ldrb	r0, [r1]
   275c8:	cmp	r0, #32
   275cc:	bhi	27a74 <main@@Base+0x1479c>
   275d0:	bne	28100 <main@@Base+0x14e28>
   275d4:	ldrb	r0, [r4, #2]!
   275d8:	cmp	r0, #32
   275dc:	bhi	274b0 <main@@Base+0x141d8>
   275e0:	b	28100 <main@@Base+0x14e28>
   275e4:	mov	r2, r4
   275e8:	str	r9, [sp, #12]
   275ec:	cmp	r2, r8
   275f0:	mov	r1, r8
   275f4:	beq	27640 <main@@Base+0x14368>
   275f8:	ldrb	r0, [r2]
   275fc:	cmp	r0, #46	; 0x2e
   27600:	beq	27618 <main@@Base+0x14340>
   27604:	cmp	r0, #34	; 0x22
   27608:	bne	27634 <main@@Base+0x1435c>
   2760c:	mov	r0, #0
   27610:	add	r1, r2, #1
   27614:	b	2763c <main@@Base+0x14364>
   27618:	mov	r1, r2
   2761c:	mov	r0, r9
   27620:	mov	r2, r8
   27624:	mov	r3, #5
   27628:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2762c:	mov	r1, r0
   27630:	b	27640 <main@@Base+0x14368>
   27634:	mov	r0, #1
   27638:	mov	r1, r2
   2763c:	str	r0, [r9, #12]
   27640:	sub	r0, r8, r1
   27644:	mov	r2, #8
   27648:	cmp	r0, #8
   2764c:	movcs	r0, r2
   27650:	and	r0, r0, #15
   27654:	sub	r4, r0, #1
   27658:	cmp	r4, #7
   2765c:	bhi	277a8 <main@@Base+0x144d0>
   27660:	add	r0, pc, #36	; 0x24
   27664:	mov	r9, r7
   27668:	mov	sl, #0
   2766c:	mov	ip, #0
   27670:	mov	lr, #0
   27674:	mov	r6, #0
   27678:	mov	r3, #0
   2767c:	mov	r5, #0
   27680:	mov	r2, #0
   27684:	mov	r7, #0
   27688:	ldr	pc, [r0, r4, lsl #2]
   2768c:	strdeq	r7, [r2], -r0
   27690:	andeq	r7, r2, r8, ror #13
   27694:	andeq	r7, r2, r0, ror #13
   27698:	ldrdeq	r7, [r2], -r8
   2769c:	andeq	r7, r2, ip, asr #13
   276a0:	andeq	r7, r2, r0, asr #13
   276a4:			; <UNDEFINED> instruction: 0x000276b0
   276a8:	andeq	r7, r2, ip, lsr #13
   276ac:	ldrb	ip, [r1, #7]
   276b0:	ldrb	r0, [r1, #6]
   276b4:	mov	lr, sl
   276b8:	orr	r0, ip, r0, lsl #8
   276bc:	mov	sl, r0
   276c0:	ldrb	r0, [r1, #5]
   276c4:	mov	r6, lr
   276c8:	orr	sl, sl, r0, lsl #16
   276cc:	ldrb	r0, [r1, #4]
   276d0:	mov	r3, r6
   276d4:	orr	sl, sl, r0, lsl #24
   276d8:	ldrb	r0, [r1, #3]
   276dc:	orr	r5, r0, r3
   276e0:	ldrb	r0, [r1, #2]
   276e4:	orr	r2, r5, r0, lsl #8
   276e8:	ldrb	r0, [r1, #1]
   276ec:	orr	r7, r2, r0, lsl #16
   276f0:	ldrb	r2, [r1]
   276f4:	movw	r0, #25966	; 0x656e
   276f8:	movw	r3, #26994	; 0x6972
   276fc:	movt	r0, #24428	; 0x5f6c
   27700:	movt	r3, #26721	; 0x6861
   27704:	eor	r0, sl, r0
   27708:	orr	r2, r7, r2, lsl #24
   2770c:	mov	r7, r9
   27710:	ldr	r9, [sp, #12]
   27714:	eor	r2, r2, r3
   27718:	orrs	r0, r0, r2
   2771c:	bne	277a8 <main@@Base+0x144d0>
   27720:	add	r4, r1, #8
   27724:	mov	r2, #8
   27728:	sub	r0, r8, r4
   2772c:	cmp	r0, #8
   27730:	movcc	r2, r0
   27734:	and	r3, r2, #15
   27738:	sub	r2, r3, #3
   2773c:	cmp	r2, #6
   27740:	bcs	277b0 <main@@Base+0x144d8>
   27744:	ldrb	r2, [r1, #10]
   27748:	lsl	r2, r2, #8
   2774c:	ldrb	r3, [r1, #9]
   27750:	orr	r2, r2, r3, lsl #16
   27754:	ldrb	r3, [r4]
   27758:	bic	r2, r2, #255	; 0xff
   2775c:	orr	r2, r2, r3, lsl #24
   27760:	movw	r3, #26624	; 0x6800
   27764:	movt	r3, #26484	; 0x6774
   27768:	teq	r2, r3
   2776c:	bne	278f4 <main@@Base+0x1461c>
   27770:	cmp	r0, #4
   27774:	blt	278f4 <main@@Base+0x1461c>
   27778:	mov	r2, r1
   2777c:	ldr	r3, [r9, #12]
   27780:	ldrb	r0, [r2, #11]!
   27784:	cmp	r3, #0
   27788:	beq	277c8 <main@@Base+0x144f0>
   2778c:	cmp	r0, #33	; 0x21
   27790:	bcc	2779c <main@@Base+0x144c4>
   27794:	cmp	r0, #58	; 0x3a
   27798:	bne	278f4 <main@@Base+0x1461c>
   2779c:	mov	r0, #0
   277a0:	str	r0, [r9, #12]
   277a4:	b	277d4 <main@@Base+0x144fc>
   277a8:	mov	r0, r9
   277ac:	b	278fc <main@@Base+0x14624>
   277b0:	mov	r2, #0
   277b4:	cmp	r3, #1
   277b8:	beq	27754 <main@@Base+0x1447c>
   277bc:	cmp	r3, #2
   277c0:	beq	2774c <main@@Base+0x14474>
   277c4:	b	278f4 <main@@Base+0x1461c>
   277c8:	cmp	r0, #34	; 0x22
   277cc:	bne	278f4 <main@@Base+0x1461c>
   277d0:	add	r2, r1, #12
   277d4:	sub	r0, r8, r2
   277d8:	cmp	r0, #2
   277dc:	blt	27808 <main@@Base+0x14530>
   277e0:	ldrb	r0, [r2]
   277e4:	cmp	r0, #32
   277e8:	bls	277f4 <main@@Base+0x1451c>
   277ec:	mov	r5, r2
   277f0:	b	2781c <main@@Base+0x14544>
   277f4:	bne	27808 <main@@Base+0x14530>
   277f8:	mov	r5, r2
   277fc:	ldrb	r0, [r5, #1]!
   27800:	cmp	r0, #32
   27804:	bhi	2781c <main@@Base+0x14544>
   27808:	mov	r1, r2
   2780c:	mov	r0, r9
   27810:	mov	r2, r8
   27814:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27818:	mov	r5, r0
   2781c:	cmp	r5, r8
   27820:	beq	27854 <main@@Base+0x1457c>
   27824:	ldrb	r0, [r5]
   27828:	cmp	r0, #58	; 0x3a
   2782c:	bne	27854 <main@@Base+0x1457c>
   27830:	add	r1, r5, #1
   27834:	sub	r0, r8, r1
   27838:	cmp	r0, #2
   2783c:	blt	2787c <main@@Base+0x145a4>
   27840:	ldrb	r0, [r1]
   27844:	cmp	r0, #32
   27848:	bls	2786c <main@@Base+0x14594>
   2784c:	mov	r5, r1
   27850:	b	2788c <main@@Base+0x145b4>
   27854:	mov	r0, r9
   27858:	mov	r1, r5
   2785c:	mov	r2, r8
   27860:	mov	r3, #4
   27864:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   27868:	b	27888 <main@@Base+0x145b0>
   2786c:	bne	2787c <main@@Base+0x145a4>
   27870:	ldrb	r0, [r5, #2]!
   27874:	cmp	r0, #32
   27878:	bhi	2788c <main@@Base+0x145b4>
   2787c:	mov	r0, r9
   27880:	mov	r2, r8
   27884:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27888:	mov	r5, r0
   2788c:	cmp	r4, r5
   27890:	beq	278f4 <main@@Base+0x1461c>
   27894:	mov	r4, #0
   27898:	cmp	r5, r8
   2789c:	str	r4, [sp, #28]
   278a0:	str	r4, [sp, #24]
   278a4:	strh	r4, [sp, #16]
   278a8:	str	r4, [sp, #20]
   278ac:	beq	279bc <main@@Base+0x146e4>
   278b0:	add	r0, sp, #24
   278b4:	mov	r1, r5
   278b8:	mov	r2, r8
   278bc:	add	r3, sp, #20
   278c0:	str	r0, [sp]
   278c4:	mov	r0, r9
   278c8:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   278cc:	cmp	r0, r5
   278d0:	beq	279c4 <main@@Base+0x146ec>
   278d4:	mov	r1, r0
   278d8:	ldr	r0, [sp, #20]
   278dc:	cmp	r0, #0
   278e0:	beq	279cc <main@@Base+0x146f4>
   278e4:	mov	r0, r9
   278e8:	mov	r2, r8
   278ec:	mov	r3, #8
   278f0:	b	279ec <main@@Base+0x14714>
   278f4:	mov	r0, r9
   278f8:	mov	r1, r4
   278fc:	mov	r2, r8
   27900:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   27904:	mov	r1, r0
   27908:	sub	r0, r8, r1
   2790c:	cmp	r0, #2
   27910:	blt	2793c <main@@Base+0x14664>
   27914:	ldrb	r0, [r1]
   27918:	cmp	r0, #32
   2791c:	bls	27928 <main@@Base+0x14650>
   27920:	mov	r2, r1
   27924:	b	2794c <main@@Base+0x14674>
   27928:	bne	2793c <main@@Base+0x14664>
   2792c:	mov	r2, r1
   27930:	ldrb	r0, [r2, #1]!
   27934:	cmp	r0, #32
   27938:	bhi	2794c <main@@Base+0x14674>
   2793c:	mov	r0, r9
   27940:	mov	r2, r8
   27944:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27948:	mov	r2, r0
   2794c:	cmp	r2, r8
   27950:	beq	27a48 <main@@Base+0x14770>
   27954:	ldrb	r0, [r2]
   27958:	cmp	r0, #44	; 0x2c
   2795c:	bne	27a50 <main@@Base+0x14778>
   27960:	add	r1, r2, #1
   27964:	sub	r0, r8, r1
   27968:	cmp	r0, #2
   2796c:	blt	27994 <main@@Base+0x146bc>
   27970:	ldrb	r0, [r1]
   27974:	cmp	r0, #32
   27978:	bls	27984 <main@@Base+0x146ac>
   2797c:	mov	r2, r1
   27980:	b	279a4 <main@@Base+0x146cc>
   27984:	bne	27994 <main@@Base+0x146bc>
   27988:	ldrb	r0, [r2, #2]!
   2798c:	cmp	r0, #32
   27990:	bhi	279a4 <main@@Base+0x146cc>
   27994:	mov	r0, r9
   27998:	mov	r2, r8
   2799c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   279a0:	mov	r2, r0
   279a4:	cmp	r2, r8
   279a8:	beq	27a7c <main@@Base+0x147a4>
   279ac:	ldrb	r0, [r2]
   279b0:	cmp	r0, #125	; 0x7d
   279b4:	bne	275ec <main@@Base+0x14314>
   279b8:	b	27a58 <main@@Base+0x14780>
   279bc:	mov	r1, r8
   279c0:	b	279f4 <main@@Base+0x1471c>
   279c4:	mov	r1, r5
   279c8:	b	279f4 <main@@Base+0x1471c>
   279cc:	ldr	r0, [sp, #24]
   279d0:	ldr	r2, [sp, #28]
   279d4:	subs	r3, r0, #65536	; 0x10000
   279d8:	sbcs	r2, r2, #0
   279dc:	bcc	27a3c <main@@Base+0x14764>
   279e0:	mov	r0, r9
   279e4:	mov	r2, r8
   279e8:	mov	r3, #7
   279ec:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   279f0:	mov	r1, r0
   279f4:	cmp	r5, r1
   279f8:	bne	27a30 <main@@Base+0x14758>
   279fc:	movw	r3, #17160	; 0x4308
   27a00:	add	r0, sp, #16
   27a04:	mov	r1, r5
   27a08:	mov	r2, r8
   27a0c:	str	r0, [sp]
   27a10:	mov	r0, r9
   27a14:	movt	r3, #4
   27a18:	bl	287b8 <main@@Base+0x154e0>
   27a1c:	mov	r1, r0
   27a20:	cmp	r0, r5
   27a24:	cmpne	r1, r8
   27a28:	beq	28148 <main@@Base+0x14e70>
   27a2c:	ldrh	r4, [sp, #16]
   27a30:	ldr	r0, [sp, #4]
   27a34:	strh	r4, [r0]
   27a38:	b	27908 <main@@Base+0x14630>
   27a3c:	mov	r4, r0
   27a40:	strh	r0, [sp, #16]
   27a44:	b	279f4 <main@@Base+0x1471c>
   27a48:	mov	r1, r8
   27a4c:	b	274dc <main@@Base+0x14204>
   27a50:	cmp	r0, #125	; 0x7d
   27a54:	bne	280d8 <main@@Base+0x14e00>
   27a58:	add	r1, r2, #1
   27a5c:	sub	r0, r8, r1
   27a60:	cmp	r0, #2
   27a64:	blt	28100 <main@@Base+0x14e28>
   27a68:	ldrb	r0, [r1]
   27a6c:	cmp	r0, #32
   27a70:	bls	280ec <main@@Base+0x14e14>
   27a74:	mov	r4, r1
   27a78:	b	274b0 <main@@Base+0x141d8>
   27a7c:	mov	r0, r9
   27a80:	mov	r1, r8
   27a84:	b	280e0 <main@@Base+0x14e08>
   27a88:	bne	27a98 <main@@Base+0x147c0>
   27a8c:	ldrb	r0, [r4, #2]!
   27a90:	cmp	r0, #32
   27a94:	bhi	27aa8 <main@@Base+0x147d0>
   27a98:	mov	r0, r9
   27a9c:	mov	r2, r8
   27aa0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27aa4:	mov	r4, r0
   27aa8:	cmp	r4, r8
   27aac:	mov	r2, r8
   27ab0:	beq	27af4 <main@@Base+0x1481c>
   27ab4:	ldrb	r0, [r4]
   27ab8:	cmp	r0, #125	; 0x7d
   27abc:	bne	27af0 <main@@Base+0x14818>
   27ac0:	add	r1, r4, #1
   27ac4:	sub	r0, r8, r1
   27ac8:	cmp	r0, #2
   27acc:	blt	28138 <main@@Base+0x14e60>
   27ad0:	ldrb	r0, [r1]
   27ad4:	cmp	r0, #32
   27ad8:	bhi	280c4 <main@@Base+0x14dec>
   27adc:	bne	28138 <main@@Base+0x14e60>
   27ae0:	ldrb	r0, [r4, #2]!
   27ae4:	cmp	r0, #32
   27ae8:	bhi	274fc <main@@Base+0x14224>
   27aec:	b	28138 <main@@Base+0x14e60>
   27af0:	mov	r2, r4
   27af4:	str	r7, [sp, #8]
   27af8:	cmp	r2, r8
   27afc:	mov	r1, r8
   27b00:	beq	27b4c <main@@Base+0x14874>
   27b04:	ldrb	r0, [r2]
   27b08:	cmp	r0, #46	; 0x2e
   27b0c:	beq	27b24 <main@@Base+0x1484c>
   27b10:	cmp	r0, #34	; 0x22
   27b14:	bne	27b40 <main@@Base+0x14868>
   27b18:	mov	r0, #0
   27b1c:	add	r1, r2, #1
   27b20:	b	27b48 <main@@Base+0x14870>
   27b24:	mov	r1, r2
   27b28:	mov	r0, r9
   27b2c:	mov	r2, r8
   27b30:	mov	r3, #5
   27b34:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   27b38:	mov	r1, r0
   27b3c:	b	27b4c <main@@Base+0x14874>
   27b40:	mov	r0, #1
   27b44:	mov	r1, r2
   27b48:	str	r0, [r9, #12]
   27b4c:	sub	r0, r8, r1
   27b50:	mov	r2, #8
   27b54:	cmp	r0, #8
   27b58:	movcs	r0, r2
   27b5c:	and	r0, r0, #15
   27b60:	sub	r4, r0, #1
   27b64:	cmp	r4, #7
   27b68:	bhi	27d90 <main@@Base+0x14ab8>
   27b6c:	add	sl, pc, #32
   27b70:	mov	r0, #0
   27b74:	mov	ip, #0
   27b78:	mov	lr, #0
   27b7c:	mov	r6, #0
   27b80:	mov	r3, #0
   27b84:	mov	r2, #0
   27b88:	mov	r7, #0
   27b8c:	mov	r5, #0
   27b90:	ldr	pc, [sl, r4, lsl #2]
   27b94:	strdeq	r7, [r2], -r8
   27b98:	strdeq	r7, [r2], -r0
   27b9c:	andeq	r7, r2, r8, ror #23
   27ba0:	andeq	r7, r2, r0, ror #23
   27ba4:	ldrdeq	r7, [r2], -r4
   27ba8:	andeq	r7, r2, r8, asr #23
   27bac:			; <UNDEFINED> instruction: 0x00027bb8
   27bb0:			; <UNDEFINED> instruction: 0x00027bb4
   27bb4:	ldrb	ip, [r1, #7]
   27bb8:	ldrb	r2, [r1, #6]
   27bbc:	mov	lr, r0
   27bc0:	orr	r2, ip, r2, lsl #8
   27bc4:	mov	r0, r2
   27bc8:	ldrb	r2, [r1, #5]
   27bcc:	mov	r6, lr
   27bd0:	orr	r0, r0, r2, lsl #16
   27bd4:	ldrb	r2, [r1, #4]
   27bd8:	mov	r3, r6
   27bdc:	orr	r0, r0, r2, lsl #24
   27be0:	ldrb	r2, [r1, #3]
   27be4:	orr	r2, r2, r3
   27be8:	ldrb	r3, [r1, #2]
   27bec:	orr	r7, r2, r3, lsl #8
   27bf0:	ldrb	r2, [r1, #1]
   27bf4:	orr	r5, r7, r2, lsl #16
   27bf8:	movw	r2, #24948	; 0x6174
   27bfc:	movw	r3, #28530	; 0x6f72
   27c00:	movt	r2, #25695	; 0x645f
   27c04:	movt	r3, #29559	; 0x7377
   27c08:	eor	r0, r0, r2
   27c0c:	ldrb	r2, [r1]
   27c10:	orr	r2, r5, r2, lsl #24
   27c14:	eor	r2, r2, r3
   27c18:	orrs	r0, r0, r2
   27c1c:	bne	27d90 <main@@Base+0x14ab8>
   27c20:	add	lr, r1, #8
   27c24:	mov	r2, #8
   27c28:	sub	r0, r8, lr
   27c2c:	cmp	r0, #8
   27c30:	movcs	r0, r2
   27c34:	and	r0, r0, #15
   27c38:	sub	r3, r0, #1
   27c3c:	cmp	r3, #7
   27c40:	bhi	27d98 <main@@Base+0x14ac0>
   27c44:	add	r6, pc, #36	; 0x24
   27c48:	mov	r2, #0
   27c4c:	mov	r0, #0
   27c50:	mov	sl, #0
   27c54:	mov	r4, #0
   27c58:	mov	r5, #0
   27c5c:	mov	r7, #0
   27c60:	mov	ip, #0
   27c64:	str	r2, [sp, #4]
   27c68:	mov	r2, #0
   27c6c:	ldr	pc, [r6, r3, lsl #2]
   27c70:	ldrdeq	r7, [r2], -ip
   27c74:	ldrdeq	r7, [r2], -r4
   27c78:	andeq	r7, r2, ip, asr #25
   27c7c:	andeq	r7, r2, r4, asr #25
   27c80:			; <UNDEFINED> instruction: 0x00027cb8
   27c84:	andeq	r7, r2, ip, lsr #25
   27c88:	muleq	r2, r8, ip
   27c8c:	muleq	r2, r0, ip
   27c90:	ldrb	r2, [r1, #15]
   27c94:	str	r2, [sp, #4]
   27c98:	ldrb	r2, [r1, #14]
   27c9c:	ldr	r3, [sp, #4]
   27ca0:	mov	sl, r0
   27ca4:	orr	r2, r3, r2, lsl #8
   27ca8:	mov	r0, r2
   27cac:	ldrb	r2, [r1, #13]
   27cb0:	mov	r4, sl
   27cb4:	orr	r0, r0, r2, lsl #16
   27cb8:	ldrb	r2, [r1, #12]
   27cbc:	mov	r5, r4
   27cc0:	orr	r0, r0, r2, lsl #24
   27cc4:	ldrb	r2, [r1, #11]
   27cc8:	orr	r2, r2, r5
   27ccc:	ldrb	r3, [r1, #10]
   27cd0:	orr	r7, r2, r3, lsl #8
   27cd4:	ldrb	r2, [r1, #9]
   27cd8:	orr	ip, r7, r2, lsl #16
   27cdc:	movw	r2, #24941	; 0x616d
   27ce0:	movw	r3, #25451	; 0x636b
   27ce4:	movt	r2, #24420	; 0x5f64
   27ce8:	movt	r3, #29793	; 0x7461
   27cec:	eor	r0, r0, r2
   27cf0:	ldrb	r2, [lr]
   27cf4:	orr	r2, ip, r2, lsl #24
   27cf8:	eor	r2, r2, r3
   27cfc:	orrs	r0, r0, r2
   27d00:	bne	27d98 <main@@Base+0x14ac0>
   27d04:	add	r4, r1, #16
   27d08:	mov	r2, #8
   27d0c:	sub	r0, r8, r4
   27d10:	cmp	r0, #8
   27d14:	movcc	r2, r0
   27d18:	and	r3, r2, #15
   27d1c:	sub	r2, r3, #3
   27d20:	cmp	r2, #6
   27d24:	bcs	27e68 <main@@Base+0x14b90>
   27d28:	ldrb	r2, [r1, #18]
   27d2c:	ldr	r7, [sp, #8]
   27d30:	lsl	r2, r2, #8
   27d34:	ldrb	r3, [r1, #17]
   27d38:	orr	r2, r2, r3, lsl #16
   27d3c:	ldrb	r3, [r4]
   27d40:	bic	r2, r2, #255	; 0xff
   27d44:	orr	r2, r2, r3, lsl #24
   27d48:	movw	r3, #25856	; 0x6500
   27d4c:	movt	r3, #24935	; 0x6167
   27d50:	teq	r2, r3
   27d54:	bne	27fc8 <main@@Base+0x14cf0>
   27d58:	cmp	r0, #4
   27d5c:	blt	27fc8 <main@@Base+0x14cf0>
   27d60:	mov	r2, r1
   27d64:	ldr	r3, [r9, #12]
   27d68:	ldrb	r0, [r2, #19]!
   27d6c:	cmp	r3, #0
   27d70:	beq	27e84 <main@@Base+0x14bac>
   27d74:	cmp	r0, #33	; 0x21
   27d78:	bcc	27d84 <main@@Base+0x14aac>
   27d7c:	cmp	r0, #58	; 0x3a
   27d80:	bne	27fc8 <main@@Base+0x14cf0>
   27d84:	mov	r0, #0
   27d88:	str	r0, [r9, #12]
   27d8c:	b	27e90 <main@@Base+0x14bb8>
   27d90:	mov	r0, r9
   27d94:	b	27da0 <main@@Base+0x14ac8>
   27d98:	mov	r0, r9
   27d9c:	mov	r1, lr
   27da0:	mov	r2, r8
   27da4:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   27da8:	ldr	r7, [sp, #8]
   27dac:	mov	r4, r0
   27db0:	sub	r0, r8, r4
   27db4:	cmp	r0, #2
   27db8:	blt	27de4 <main@@Base+0x14b0c>
   27dbc:	ldrb	r0, [r4]
   27dc0:	cmp	r0, #32
   27dc4:	bls	27dd0 <main@@Base+0x14af8>
   27dc8:	mov	r2, r4
   27dcc:	b	27df8 <main@@Base+0x14b20>
   27dd0:	bne	27de4 <main@@Base+0x14b0c>
   27dd4:	mov	r2, r4
   27dd8:	ldrb	r0, [r2, #1]!
   27ddc:	cmp	r0, #32
   27de0:	bhi	27df8 <main@@Base+0x14b20>
   27de4:	mov	r0, r9
   27de8:	mov	r1, r4
   27dec:	mov	r2, r8
   27df0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27df4:	mov	r2, r0
   27df8:	cmp	r2, r8
   27dfc:	beq	28098 <main@@Base+0x14dc0>
   27e00:	ldrb	r0, [r2]
   27e04:	cmp	r0, #44	; 0x2c
   27e08:	bne	280a0 <main@@Base+0x14dc8>
   27e0c:	add	r1, r2, #1
   27e10:	sub	r0, r8, r1
   27e14:	cmp	r0, #2
   27e18:	blt	27e40 <main@@Base+0x14b68>
   27e1c:	ldrb	r0, [r1]
   27e20:	cmp	r0, #32
   27e24:	bls	27e30 <main@@Base+0x14b58>
   27e28:	mov	r2, r1
   27e2c:	b	27e50 <main@@Base+0x14b78>
   27e30:	bne	27e40 <main@@Base+0x14b68>
   27e34:	ldrb	r0, [r2, #2]!
   27e38:	cmp	r0, #32
   27e3c:	bhi	27e50 <main@@Base+0x14b78>
   27e40:	mov	r0, r9
   27e44:	mov	r2, r8
   27e48:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27e4c:	mov	r2, r0
   27e50:	cmp	r2, r8
   27e54:	beq	280cc <main@@Base+0x14df4>
   27e58:	ldrb	r0, [r2]
   27e5c:	cmp	r0, #125	; 0x7d
   27e60:	bne	27af8 <main@@Base+0x14820>
   27e64:	b	280a8 <main@@Base+0x14dd0>
   27e68:	ldr	r7, [sp, #8]
   27e6c:	mov	r2, #0
   27e70:	cmp	r3, #1
   27e74:	beq	27d3c <main@@Base+0x14a64>
   27e78:	cmp	r3, #2
   27e7c:	beq	27d34 <main@@Base+0x14a5c>
   27e80:	b	27fc8 <main@@Base+0x14cf0>
   27e84:	cmp	r0, #34	; 0x22
   27e88:	bne	27fc8 <main@@Base+0x14cf0>
   27e8c:	add	r2, r1, #20
   27e90:	sub	r0, r8, r2
   27e94:	cmp	r0, #2
   27e98:	blt	27ec4 <main@@Base+0x14bec>
   27e9c:	ldrb	r0, [r2]
   27ea0:	cmp	r0, #32
   27ea4:	bls	27eb0 <main@@Base+0x14bd8>
   27ea8:	mov	r6, r2
   27eac:	b	27ed8 <main@@Base+0x14c00>
   27eb0:	bne	27ec4 <main@@Base+0x14bec>
   27eb4:	mov	r6, r2
   27eb8:	ldrb	r0, [r6, #1]!
   27ebc:	cmp	r0, #32
   27ec0:	bhi	27ed8 <main@@Base+0x14c00>
   27ec4:	mov	r1, r2
   27ec8:	mov	r0, r9
   27ecc:	mov	r2, r8
   27ed0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27ed4:	mov	r6, r0
   27ed8:	cmp	r6, r8
   27edc:	beq	27f10 <main@@Base+0x14c38>
   27ee0:	ldrb	r0, [r6]
   27ee4:	cmp	r0, #58	; 0x3a
   27ee8:	bne	27f10 <main@@Base+0x14c38>
   27eec:	add	r1, r6, #1
   27ef0:	sub	r0, r8, r1
   27ef4:	cmp	r0, #2
   27ef8:	blt	27f38 <main@@Base+0x14c60>
   27efc:	ldrb	r0, [r1]
   27f00:	cmp	r0, #32
   27f04:	bls	27f28 <main@@Base+0x14c50>
   27f08:	mov	r6, r1
   27f0c:	b	27f48 <main@@Base+0x14c70>
   27f10:	mov	r0, r9
   27f14:	mov	r1, r6
   27f18:	mov	r2, r8
   27f1c:	mov	r3, #4
   27f20:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   27f24:	b	27f44 <main@@Base+0x14c6c>
   27f28:	bne	27f38 <main@@Base+0x14c60>
   27f2c:	ldrb	r0, [r6, #2]!
   27f30:	cmp	r0, #32
   27f34:	bhi	27f48 <main@@Base+0x14c70>
   27f38:	mov	r0, r9
   27f3c:	mov	r2, r8
   27f40:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   27f44:	mov	r6, r0
   27f48:	cmp	r4, r6
   27f4c:	beq	27fc8 <main@@Base+0x14cf0>
   27f50:	mov	r5, #0
   27f54:	cmp	r6, r8
   27f58:	str	r5, [sp, #28]
   27f5c:	str	r5, [sp, #24]
   27f60:	str	r5, [sp, #16]
   27f64:	str	r5, [sp, #20]
   27f68:	beq	27fdc <main@@Base+0x14d04>
   27f6c:	add	r0, sp, #24
   27f70:	mov	r1, r6
   27f74:	mov	r2, r8
   27f78:	add	r3, sp, #20
   27f7c:	str	r0, [sp]
   27f80:	mov	r0, r9
   27f84:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   27f88:	cmp	r0, r6
   27f8c:	beq	27fe4 <main@@Base+0x14d0c>
   27f90:	ldr	r2, [sp, #20]
   27f94:	mov	r4, r0
   27f98:	ldr	r0, [sp, #24]
   27f9c:	ldr	r1, [sp, #28]
   27fa0:	cmp	r2, #0
   27fa4:	beq	27fec <main@@Base+0x14d14>
   27fa8:	subs	r2, r0, #-2147483647	; 0x80000001
   27fac:	sbcs	r1, r1, #0
   27fb0:	bcc	28014 <main@@Base+0x14d3c>
   27fb4:	mov	r0, r9
   27fb8:	mov	r1, r4
   27fbc:	mov	r2, r8
   27fc0:	mov	r3, #8
   27fc4:	b	28008 <main@@Base+0x14d30>
   27fc8:	mov	r0, r9
   27fcc:	mov	r1, r4
   27fd0:	mov	r2, r8
   27fd4:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   27fd8:	b	27dac <main@@Base+0x14ad4>
   27fdc:	mov	r4, r8
   27fe0:	b	28024 <main@@Base+0x14d4c>
   27fe4:	mov	r4, r6
   27fe8:	b	28024 <main@@Base+0x14d4c>
   27fec:	subs	r2, r0, #-2147483648	; 0x80000000
   27ff0:	sbcs	r1, r1, #0
   27ff4:	bcc	2801c <main@@Base+0x14d44>
   27ff8:	mov	r0, r9
   27ffc:	mov	r1, r4
   28000:	mov	r2, r8
   28004:	mov	r3, #7
   28008:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2800c:	mov	r4, r0
   28010:	b	28024 <main@@Base+0x14d4c>
   28014:	rsb	r5, r0, #0
   28018:	b	28020 <main@@Base+0x14d48>
   2801c:	mov	r5, r0
   28020:	str	r5, [sp, #16]
   28024:	cmp	r6, r4
   28028:	bne	28060 <main@@Base+0x14d88>
   2802c:	movw	r3, #17148	; 0x42fc
   28030:	add	r0, sp, #16
   28034:	mov	r1, r6
   28038:	mov	r2, r8
   2803c:	str	r0, [sp]
   28040:	mov	r0, r9
   28044:	movt	r3, #4
   28048:	bl	228d8 <main@@Base+0xf600>
   2804c:	mov	r4, r0
   28050:	cmp	r0, r6
   28054:	cmpne	r4, r8
   28058:	beq	28158 <main@@Base+0x14e80>
   2805c:	ldr	r5, [sp, #16]
   28060:	cmp	r5, #0
   28064:	bne	28074 <main@@Base+0x14d9c>
   28068:	ldrb	r0, [r9, #8]
   2806c:	tst	r0, #2
   28070:	beq	27db0 <main@@Base+0x14ad8>
   28074:	ldr	r0, [r9]
   28078:	mov	r1, #0
   2807c:	mov	r2, #4
   28080:	mov	r3, #4
   28084:	bl	2b8dc <flatcc_builder_table_add@@Base>
   28088:	cmp	r0, #0
   2808c:	beq	28158 <main@@Base+0x14e80>
   28090:	str	r5, [r0]
   28094:	b	27db0 <main@@Base+0x14ad8>
   28098:	mov	r4, r8
   2809c:	b	274fc <main@@Base+0x14224>
   280a0:	cmp	r0, #125	; 0x7d
   280a4:	bne	28110 <main@@Base+0x14e38>
   280a8:	add	r1, r2, #1
   280ac:	sub	r0, r8, r1
   280b0:	cmp	r0, #2
   280b4:	blt	28138 <main@@Base+0x14e60>
   280b8:	ldrb	r0, [r1]
   280bc:	cmp	r0, #32
   280c0:	bls	28124 <main@@Base+0x14e4c>
   280c4:	mov	r4, r1
   280c8:	b	274fc <main@@Base+0x14224>
   280cc:	mov	r0, r9
   280d0:	mov	r1, r8
   280d4:	b	28118 <main@@Base+0x14e40>
   280d8:	mov	r0, r9
   280dc:	mov	r1, r2
   280e0:	mov	r2, r8
   280e4:	mov	r3, #10
   280e8:	b	274a8 <main@@Base+0x141d0>
   280ec:	bne	28100 <main@@Base+0x14e28>
   280f0:	ldrb	r0, [r2, #2]!
   280f4:	cmp	r0, #32
   280f8:	mov	r4, r2
   280fc:	bhi	274b0 <main@@Base+0x141d8>
   28100:	mov	r0, r9
   28104:	mov	r2, r8
   28108:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2810c:	b	274ac <main@@Base+0x141d4>
   28110:	mov	r0, r9
   28114:	mov	r1, r2
   28118:	mov	r2, r8
   2811c:	mov	r3, #10
   28120:	b	274f4 <main@@Base+0x1421c>
   28124:	bne	28138 <main@@Base+0x14e60>
   28128:	ldrb	r0, [r2, #2]!
   2812c:	cmp	r0, #32
   28130:	mov	r4, r2
   28134:	bhi	274fc <main@@Base+0x14224>
   28138:	mov	r0, r9
   2813c:	mov	r2, r8
   28140:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   28144:	b	274f8 <main@@Base+0x14220>
   28148:	mov	r0, r9
   2814c:	mov	r2, r8
   28150:	mov	r3, #33	; 0x21
   28154:	b	274a8 <main@@Base+0x141d0>
   28158:	ldr	r7, [sp, #8]
   2815c:	b	27508 <main@@Base+0x14230>
   28160:	add	r0, r0, #1
   28164:	uxtb	r1, r0
   28168:	cmp	r1, #12
   2816c:	movhi	r0, #0
   28170:	bxhi	lr
   28174:	movw	r1, #5248	; 0x1480
   28178:	sxtb	r0, r0
   2817c:	movt	r1, #3
   28180:	ldr	r0, [r1, r0, lsl #2]
   28184:	bx	lr
   28188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2818c:	add	fp, sp, #28
   28190:	sub	sp, sp, #36	; 0x24
   28194:	mov	r9, r0
   28198:	mov	r0, #0
   2819c:	mov	sl, r2
   281a0:	mov	r6, r1
   281a4:	mov	r1, #4
   281a8:	mov	r2, #4
   281ac:	str	r3, [sp, #12]
   281b0:	str	r0, [r3]
   281b4:	ldr	r0, [r9]
   281b8:	bl	298b0 <flatcc_builder_start_struct@@Base>
   281bc:	cmp	r0, #0
   281c0:	beq	28244 <main@@Base+0x14f6c>
   281c4:	cmp	r6, sl
   281c8:	beq	28200 <main@@Base+0x14f28>
   281cc:	ldrb	r1, [r6]
   281d0:	cmp	r1, #123	; 0x7b
   281d4:	bne	28200 <main@@Base+0x14f28>
   281d8:	add	r1, r6, #1
   281dc:	str	r0, [sp, #8]
   281e0:	sub	r0, sl, r1
   281e4:	cmp	r0, #2
   281e8:	blt	28278 <main@@Base+0x14fa0>
   281ec:	ldrb	r0, [r1]
   281f0:	cmp	r0, #32
   281f4:	bls	28268 <main@@Base+0x14f90>
   281f8:	mov	r6, r1
   281fc:	b	28288 <main@@Base+0x14fb0>
   28200:	mov	r0, r9
   28204:	mov	r1, r6
   28208:	mov	r2, sl
   2820c:	mov	r3, #21
   28210:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   28214:	mov	r6, r0
   28218:	cmp	r6, sl
   2821c:	mov	r1, sl
   28220:	beq	28248 <main@@Base+0x14f70>
   28224:	ldr	r0, [r9]
   28228:	bl	29950 <flatcc_builder_end_struct@@Base>
   2822c:	ldr	r1, [sp, #12]
   28230:	cmp	r0, #0
   28234:	str	r0, [r1]
   28238:	mov	r1, r6
   2823c:	bne	2825c <main@@Base+0x14f84>
   28240:	b	28248 <main@@Base+0x14f70>
   28244:	mov	r1, r6
   28248:	mov	r0, r9
   2824c:	mov	r2, sl
   28250:	mov	r3, #33	; 0x21
   28254:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   28258:	mov	r6, r0
   2825c:	mov	r0, r6
   28260:	sub	sp, fp, #28
   28264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28268:	bne	28278 <main@@Base+0x14fa0>
   2826c:	ldrb	r0, [r6, #2]!
   28270:	cmp	r0, #32
   28274:	bhi	28288 <main@@Base+0x14fb0>
   28278:	mov	r0, r9
   2827c:	mov	r2, sl
   28280:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   28284:	mov	r6, r0
   28288:	cmp	r6, sl
   2828c:	mov	r2, sl
   28290:	beq	282d4 <main@@Base+0x14ffc>
   28294:	ldrb	r0, [r6]
   28298:	cmp	r0, #125	; 0x7d
   2829c:	bne	282d0 <main@@Base+0x14ff8>
   282a0:	add	r1, r6, #1
   282a4:	sub	r0, sl, r1
   282a8:	cmp	r0, #2
   282ac:	blt	28798 <main@@Base+0x154c0>
   282b0:	ldrb	r0, [r1]
   282b4:	cmp	r0, #32
   282b8:	bhi	2875c <main@@Base+0x15484>
   282bc:	bne	28798 <main@@Base+0x154c0>
   282c0:	ldrb	r0, [r6, #2]!
   282c4:	cmp	r0, #32
   282c8:	bhi	28218 <main@@Base+0x14f40>
   282cc:	b	28798 <main@@Base+0x154c0>
   282d0:	mov	r2, r6
   282d4:	cmp	r2, sl
   282d8:	mov	r1, sl
   282dc:	beq	28328 <main@@Base+0x15050>
   282e0:	ldrb	r0, [r2]
   282e4:	cmp	r0, #46	; 0x2e
   282e8:	beq	28300 <main@@Base+0x15028>
   282ec:	cmp	r0, #34	; 0x22
   282f0:	bne	2831c <main@@Base+0x15044>
   282f4:	mov	r0, #0
   282f8:	add	r1, r2, #1
   282fc:	b	28324 <main@@Base+0x1504c>
   28300:	mov	r1, r2
   28304:	mov	r0, r9
   28308:	mov	r2, sl
   2830c:	mov	r3, #5
   28310:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   28314:	mov	r1, r0
   28318:	b	28328 <main@@Base+0x15050>
   2831c:	mov	r0, #1
   28320:	mov	r1, r2
   28324:	str	r0, [r9, #12]
   28328:	sub	r0, sl, r1
   2832c:	mov	r2, #8
   28330:	cmp	r0, #8
   28334:	movcs	r0, r2
   28338:	and	r0, r0, #15
   2833c:	sub	r6, r0, #1
   28340:	cmp	r6, #7
   28344:	bhi	28480 <main@@Base+0x151a8>
   28348:	add	r0, pc, #32
   2834c:	mov	r8, #0
   28350:	mov	ip, #0
   28354:	mov	lr, #0
   28358:	mov	r7, #0
   2835c:	mov	r3, #0
   28360:	mov	r5, #0
   28364:	mov	r2, #0
   28368:	mov	r4, #0
   2836c:	ldr	pc, [r0, r6, lsl #2]
   28370:	ldrdeq	r8, [r2], -r4
   28374:	andeq	r8, r2, ip, asr #7
   28378:	andeq	r8, r2, r4, asr #7
   2837c:			; <UNDEFINED> instruction: 0x000283bc
   28380:			; <UNDEFINED> instruction: 0x000283b0
   28384:	andeq	r8, r2, r4, lsr #7
   28388:	muleq	r2, r4, r3
   2838c:	muleq	r2, r0, r3
   28390:	ldrb	ip, [r1, #7]
   28394:	ldrb	r0, [r1, #6]
   28398:	mov	lr, r8
   2839c:	orr	r0, ip, r0, lsl #8
   283a0:	mov	r8, r0
   283a4:	ldrb	r0, [r1, #5]
   283a8:	mov	r7, lr
   283ac:	orr	r8, r8, r0, lsl #16
   283b0:	ldrb	r0, [r1, #4]
   283b4:	mov	r3, r7
   283b8:	orr	r8, r8, r0, lsl #24
   283bc:	ldrb	r0, [r1, #3]
   283c0:	orr	r5, r0, r3
   283c4:	ldrb	r0, [r1, #2]
   283c8:	orr	r2, r5, r0, lsl #8
   283cc:	ldrb	r0, [r1, #1]
   283d0:	orr	r4, r2, r0, lsl #16
   283d4:	ldrb	r2, [r1]
   283d8:	movw	r0, #29285	; 0x7265
   283dc:	movw	r3, #28523	; 0x6f6b
   283e0:	movt	r0, #29535	; 0x735f
   283e4:	movt	r3, #25199	; 0x626f
   283e8:	eor	r0, r8, r0
   283ec:	orr	r2, r4, r2, lsl #24
   283f0:	eor	r2, r2, r3
   283f4:	orrs	r0, r0, r2
   283f8:	bne	28480 <main@@Base+0x151a8>
   283fc:	add	r8, r1, #8
   28400:	mov	r2, #8
   28404:	sub	r0, sl, r8
   28408:	cmp	r0, #8
   2840c:	movcc	r2, r0
   28410:	and	r3, r2, #15
   28414:	sub	r2, r3, #2
   28418:	cmp	r2, #7
   2841c:	bcs	28488 <main@@Base+0x151b0>
   28420:	ldrb	r2, [r1, #9]
   28424:	lsl	r3, r2, #16
   28428:	mov	r2, #0
   2842c:	ldrb	r7, [r8]
   28430:	orr	r3, r3, r7, lsl #24
   28434:	movw	r7, #0
   28438:	movt	r7, #24932	; 0x6164
   2843c:	eor	r3, r3, r7
   28440:	orrs	r2, r2, r3
   28444:	bne	285dc <main@@Base+0x15304>
   28448:	cmp	r0, #3
   2844c:	blt	285dc <main@@Base+0x15304>
   28450:	mov	r2, r1
   28454:	ldr	r3, [r9, #12]
   28458:	ldrb	r0, [r2, #10]!
   2845c:	cmp	r3, #0
   28460:	beq	2849c <main@@Base+0x151c4>
   28464:	cmp	r0, #33	; 0x21
   28468:	bcc	28474 <main@@Base+0x1519c>
   2846c:	cmp	r0, #58	; 0x3a
   28470:	bne	285dc <main@@Base+0x15304>
   28474:	mov	r0, #0
   28478:	str	r0, [r9, #12]
   2847c:	b	284a8 <main@@Base+0x151d0>
   28480:	mov	r0, r9
   28484:	b	285e4 <main@@Base+0x1530c>
   28488:	cmp	r3, #1
   2848c:	mov	r2, #0
   28490:	mov	r3, #0
   28494:	beq	2842c <main@@Base+0x15154>
   28498:	b	285dc <main@@Base+0x15304>
   2849c:	cmp	r0, #34	; 0x22
   284a0:	bne	285dc <main@@Base+0x15304>
   284a4:	add	r2, r1, #11
   284a8:	sub	r0, sl, r2
   284ac:	cmp	r0, #2
   284b0:	blt	284dc <main@@Base+0x15204>
   284b4:	ldrb	r0, [r2]
   284b8:	cmp	r0, #32
   284bc:	bls	284c8 <main@@Base+0x151f0>
   284c0:	mov	r7, r2
   284c4:	b	284f0 <main@@Base+0x15218>
   284c8:	bne	284dc <main@@Base+0x15204>
   284cc:	mov	r7, r2
   284d0:	ldrb	r0, [r7, #1]!
   284d4:	cmp	r0, #32
   284d8:	bhi	284f0 <main@@Base+0x15218>
   284dc:	mov	r1, r2
   284e0:	mov	r0, r9
   284e4:	mov	r2, sl
   284e8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   284ec:	mov	r7, r0
   284f0:	cmp	r7, sl
   284f4:	beq	28528 <main@@Base+0x15250>
   284f8:	ldrb	r0, [r7]
   284fc:	cmp	r0, #58	; 0x3a
   28500:	bne	28528 <main@@Base+0x15250>
   28504:	add	r1, r7, #1
   28508:	sub	r0, sl, r1
   2850c:	cmp	r0, #2
   28510:	blt	28550 <main@@Base+0x15278>
   28514:	ldrb	r0, [r1]
   28518:	cmp	r0, #32
   2851c:	bls	28540 <main@@Base+0x15268>
   28520:	mov	r7, r1
   28524:	b	28560 <main@@Base+0x15288>
   28528:	mov	r0, r9
   2852c:	mov	r1, r7
   28530:	mov	r2, sl
   28534:	mov	r3, #4
   28538:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   2853c:	b	2855c <main@@Base+0x15284>
   28540:	bne	28550 <main@@Base+0x15278>
   28544:	ldrb	r0, [r7, #2]!
   28548:	cmp	r0, #32
   2854c:	bhi	28560 <main@@Base+0x15288>
   28550:	mov	r0, r9
   28554:	mov	r2, sl
   28558:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2855c:	mov	r7, r0
   28560:	cmp	r8, r7
   28564:	beq	285dc <main@@Base+0x15304>
   28568:	mov	r6, #0
   2856c:	cmp	r7, sl
   28570:	str	r6, [sp, #28]
   28574:	str	r6, [sp, #24]
   28578:	str	r6, [sp, #16]
   2857c:	str	r6, [sp, #20]
   28580:	beq	286a4 <main@@Base+0x153cc>
   28584:	add	r0, sp, #24
   28588:	mov	r1, r7
   2858c:	mov	r2, sl
   28590:	add	r3, sp, #20
   28594:	str	r0, [sp]
   28598:	mov	r0, r9
   2859c:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   285a0:	cmp	r0, r7
   285a4:	beq	286ac <main@@Base+0x153d4>
   285a8:	ldr	r3, [sp, #20]
   285ac:	mov	r1, r0
   285b0:	ldr	r0, [sp, #24]
   285b4:	ldr	r2, [sp, #28]
   285b8:	cmp	r3, #0
   285bc:	beq	286b4 <main@@Base+0x153dc>
   285c0:	subs	r3, r0, #-2147483647	; 0x80000001
   285c4:	sbcs	r2, r2, #0
   285c8:	bcc	286d8 <main@@Base+0x15400>
   285cc:	mov	r0, r9
   285d0:	mov	r2, sl
   285d4:	mov	r3, #8
   285d8:	b	286cc <main@@Base+0x153f4>
   285dc:	mov	r0, r9
   285e0:	mov	r1, r8
   285e4:	mov	r2, sl
   285e8:	bl	2d9b4 <flatcc_json_parser_unmatched_symbol@@Base>
   285ec:	mov	r1, r0
   285f0:	sub	r0, sl, r1
   285f4:	cmp	r0, #2
   285f8:	blt	28624 <main@@Base+0x1534c>
   285fc:	ldrb	r0, [r1]
   28600:	cmp	r0, #32
   28604:	bls	28610 <main@@Base+0x15338>
   28608:	mov	r2, r1
   2860c:	b	28634 <main@@Base+0x1535c>
   28610:	bne	28624 <main@@Base+0x1534c>
   28614:	mov	r2, r1
   28618:	ldrb	r0, [r2, #1]!
   2861c:	cmp	r0, #32
   28620:	bhi	28634 <main@@Base+0x1535c>
   28624:	mov	r0, r9
   28628:	mov	r2, sl
   2862c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   28630:	mov	r2, r0
   28634:	cmp	r2, sl
   28638:	beq	28730 <main@@Base+0x15458>
   2863c:	ldrb	r0, [r2]
   28640:	cmp	r0, #44	; 0x2c
   28644:	bne	28738 <main@@Base+0x15460>
   28648:	add	r1, r2, #1
   2864c:	sub	r0, sl, r1
   28650:	cmp	r0, #2
   28654:	blt	2867c <main@@Base+0x153a4>
   28658:	ldrb	r0, [r1]
   2865c:	cmp	r0, #32
   28660:	bls	2866c <main@@Base+0x15394>
   28664:	mov	r2, r1
   28668:	b	2868c <main@@Base+0x153b4>
   2866c:	bne	2867c <main@@Base+0x153a4>
   28670:	ldrb	r0, [r2, #2]!
   28674:	cmp	r0, #32
   28678:	bhi	2868c <main@@Base+0x153b4>
   2867c:	mov	r0, r9
   28680:	mov	r2, sl
   28684:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   28688:	mov	r2, r0
   2868c:	cmp	r2, sl
   28690:	beq	28764 <main@@Base+0x1548c>
   28694:	ldrb	r0, [r2]
   28698:	cmp	r0, #125	; 0x7d
   2869c:	bne	282d4 <main@@Base+0x14ffc>
   286a0:	b	28740 <main@@Base+0x15468>
   286a4:	mov	r1, sl
   286a8:	b	286e8 <main@@Base+0x15410>
   286ac:	mov	r1, r7
   286b0:	b	286e8 <main@@Base+0x15410>
   286b4:	subs	r3, r0, #-2147483648	; 0x80000000
   286b8:	sbcs	r2, r2, #0
   286bc:	bcc	286e0 <main@@Base+0x15408>
   286c0:	mov	r0, r9
   286c4:	mov	r2, sl
   286c8:	mov	r3, #7
   286cc:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   286d0:	mov	r1, r0
   286d4:	b	286e8 <main@@Base+0x15410>
   286d8:	rsb	r6, r0, #0
   286dc:	b	286e4 <main@@Base+0x1540c>
   286e0:	mov	r6, r0
   286e4:	str	r6, [sp, #16]
   286e8:	cmp	r7, r1
   286ec:	bne	28724 <main@@Base+0x1544c>
   286f0:	movw	r3, #17172	; 0x4314
   286f4:	add	r0, sp, #16
   286f8:	mov	r1, r7
   286fc:	mov	r2, sl
   28700:	str	r0, [sp]
   28704:	mov	r0, r9
   28708:	movt	r3, #4
   2870c:	bl	228d8 <main@@Base+0xf600>
   28710:	mov	r1, r0
   28714:	cmp	r0, r7
   28718:	cmpne	r1, sl
   2871c:	beq	287a8 <main@@Base+0x154d0>
   28720:	ldr	r6, [sp, #16]
   28724:	ldr	r0, [sp, #8]
   28728:	str	r6, [r0]
   2872c:	b	285f0 <main@@Base+0x15318>
   28730:	mov	r1, sl
   28734:	b	28248 <main@@Base+0x14f70>
   28738:	cmp	r0, #125	; 0x7d
   2873c:	bne	28770 <main@@Base+0x15498>
   28740:	add	r1, r2, #1
   28744:	sub	r0, sl, r1
   28748:	cmp	r0, #2
   2874c:	blt	28798 <main@@Base+0x154c0>
   28750:	ldrb	r0, [r1]
   28754:	cmp	r0, #32
   28758:	bls	28784 <main@@Base+0x154ac>
   2875c:	mov	r6, r1
   28760:	b	28218 <main@@Base+0x14f40>
   28764:	mov	r0, r9
   28768:	mov	r1, sl
   2876c:	b	28778 <main@@Base+0x154a0>
   28770:	mov	r0, r9
   28774:	mov	r1, r2
   28778:	mov	r2, sl
   2877c:	mov	r3, #10
   28780:	b	28210 <main@@Base+0x14f38>
   28784:	bne	28798 <main@@Base+0x154c0>
   28788:	ldrb	r0, [r2, #2]!
   2878c:	cmp	r0, #32
   28790:	mov	r6, r2
   28794:	bhi	28218 <main@@Base+0x14f40>
   28798:	mov	r0, r9
   2879c:	mov	r2, sl
   287a0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   287a4:	b	28214 <main@@Base+0x14f3c>
   287a8:	mov	r0, r9
   287ac:	mov	r2, sl
   287b0:	mov	r3, #33	; 0x21
   287b4:	b	28210 <main@@Base+0x14f38>
   287b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   287bc:	add	fp, sp, #28
   287c0:	sub	sp, sp, #44	; 0x2c
   287c4:	mov	r6, r2
   287c8:	ldr	r2, [fp, #8]
   287cc:	mov	r5, r0
   287d0:	mov	r0, #0
   287d4:	mov	sl, r3
   287d8:	cmp	r1, r6
   287dc:	strh	r0, [r2]
   287e0:	beq	28824 <main@@Base+0x1554c>
   287e4:	ldrb	r0, [r1]
   287e8:	cmp	r0, #46	; 0x2e
   287ec:	beq	28804 <main@@Base+0x1552c>
   287f0:	cmp	r0, #34	; 0x22
   287f4:	bne	2881c <main@@Base+0x15544>
   287f8:	mov	r0, #0
   287fc:	add	r1, r1, #1
   28800:	b	28820 <main@@Base+0x15548>
   28804:	mov	r0, r5
   28808:	mov	r2, r6
   2880c:	mov	r3, #5
   28810:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   28814:	mov	r1, r0
   28818:	b	28824 <main@@Base+0x1554c>
   2881c:	mov	r0, #1
   28820:	str	r0, [r5, #12]
   28824:	ldr	r0, [r5, #12]
   28828:	cmp	r0, #0
   2882c:	beq	28838 <main@@Base+0x15560>
   28830:	mov	r7, r1
   28834:	b	28874 <main@@Base+0x1559c>
   28838:	sub	r0, r6, r1
   2883c:	cmp	r0, #2
   28840:	blt	28864 <main@@Base+0x1558c>
   28844:	ldrb	r0, [r1]
   28848:	cmp	r0, #32
   2884c:	bhi	28830 <main@@Base+0x15558>
   28850:	bne	28864 <main@@Base+0x1558c>
   28854:	mov	r7, r1
   28858:	ldrb	r0, [r7, #1]!
   2885c:	cmp	r0, #32
   28860:	bhi	28874 <main@@Base+0x1559c>
   28864:	mov	r0, r5
   28868:	mov	r2, r6
   2886c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   28870:	mov	r7, r0
   28874:	cmp	r7, r6
   28878:	beq	289a0 <main@@Base+0x156c8>
   2887c:	mov	r1, #0
   28880:	add	r0, sl, #4
   28884:	add	r8, sp, #32
   28888:	add	r9, sp, #28
   2888c:	str	sl, [sp, #12]
   28890:	str	r1, [sp, #16]
   28894:	mov	r1, #0
   28898:	str	r0, [sp, #8]
   2889c:	str	r1, [sp, #20]
   288a0:	ldr	r4, [sl]
   288a4:	mov	sl, r0
   288a8:	add	r0, sp, #24
   288ac:	mov	r1, r7
   288b0:	mov	r2, r6
   288b4:	mov	r3, r9
   288b8:	str	r8, [sp]
   288bc:	str	r0, [sp, #4]
   288c0:	mov	r0, r5
   288c4:	blx	r4
   288c8:	cmp	r0, r6
   288cc:	beq	289a0 <main@@Base+0x156c8>
   288d0:	mov	r4, r0
   288d4:	cmp	r0, r7
   288d8:	bne	288ec <main@@Base+0x15614>
   288dc:	ldr	r4, [sl], #4
   288e0:	cmp	r4, #0
   288e4:	bne	288a8 <main@@Base+0x155d0>
   288e8:	b	289a8 <main@@Base+0x156d0>
   288ec:	ldr	r7, [sp, #20]
   288f0:	cmp	r7, #0
   288f4:	ldrne	r0, [r5, #12]
   288f8:	cmpne	r0, #0
   288fc:	bne	289cc <main@@Base+0x156f4>
   28900:	ldr	r0, [sp, #28]
   28904:	cmp	r0, #0
   28908:	beq	28928 <main@@Base+0x15650>
   2890c:	mov	r0, r5
   28910:	mov	r1, r4
   28914:	mov	r2, r6
   28918:	mov	r3, #8
   2891c:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   28920:	ldr	sl, [sp, #12]
   28924:	b	28960 <main@@Base+0x15688>
   28928:	ldr	r0, [sp, #32]
   2892c:	ldr	r1, [sp, #36]	; 0x24
   28930:	ldr	sl, [sp, #12]
   28934:	subs	r2, r0, #65536	; 0x10000
   28938:	sbcs	r1, r1, #0
   2893c:	bcc	28958 <main@@Base+0x15680>
   28940:	mov	r0, r5
   28944:	mov	r1, r4
   28948:	mov	r2, r6
   2894c:	mov	r3, #7
   28950:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   28954:	b	28960 <main@@Base+0x15688>
   28958:	str	r0, [sp, #16]
   2895c:	mov	r0, r4
   28960:	cmp	r0, r6
   28964:	beq	289a0 <main@@Base+0x156c8>
   28968:	ldr	r0, [fp, #8]
   2896c:	ldr	r2, [sp, #16]
   28970:	add	r7, r7, #1
   28974:	str	r7, [sp, #20]
   28978:	mov	r7, r4
   2897c:	mov	r1, r0
   28980:	ldrh	r0, [r0]
   28984:	add	r0, r0, r2
   28988:	strh	r0, [r1]
   2898c:	ldr	r0, [sp, #24]
   28990:	cmp	r0, #0
   28994:	ldr	r0, [sp, #8]
   28998:	bne	288a0 <main@@Base+0x155c8>
   2899c:	b	289c0 <main@@Base+0x156e8>
   289a0:	mov	r4, r6
   289a4:	b	289c0 <main@@Base+0x156e8>
   289a8:	mov	r0, r5
   289ac:	mov	r1, r7
   289b0:	mov	r2, r6
   289b4:	mov	r3, #23
   289b8:	bl	2d294 <flatcc_json_parser_set_error@@Base>
   289bc:	mov	r4, r0
   289c0:	mov	r0, r4
   289c4:	sub	sp, fp, #28
   289c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   289cc:	mov	r0, r5
   289d0:	mov	r1, r4
   289d4:	mov	r2, r6
   289d8:	mov	r3, #14
   289dc:	b	289b8 <main@@Base+0x156e0>

000289e0 <flatcc_builder_default_alloc@@Base>:
   289e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   289e4:	add	fp, sp, #24
   289e8:	mov	r4, r1
   289ec:	cmp	r2, #0
   289f0:	beq	28a38 <flatcc_builder_default_alloc@@Base+0x58>
   289f4:	ldr	r0, [fp, #8]
   289f8:	mov	r8, r3
   289fc:	sub	r1, r0, #1
   28a00:	cmp	r1, #6
   28a04:	bhi	28a60 <flatcc_builder_default_alloc@@Base+0x80>
   28a08:	add	r3, pc, #4
   28a0c:	mov	r0, #256	; 0x100
   28a10:	ldr	pc, [r3, r1, lsl #2]
   28a14:	andeq	r8, r2, r4, ror sl
   28a18:	andeq	r8, r2, r0, ror #20
   28a1c:	andeq	r8, r2, r0, ror #20
   28a20:	andeq	r8, r2, r0, lsr sl
   28a24:	andeq	r8, r2, r8, ror #20
   28a28:	andeq	r8, r2, r0, ror #20
   28a2c:	andeq	r8, r2, r0, ror sl
   28a30:	mov	r0, #288	; 0x120
   28a34:	b	28a74 <flatcc_builder_default_alloc@@Base+0x94>
   28a38:	ldr	r0, [r4]
   28a3c:	cmp	r0, #0
   28a40:	beq	28a58 <flatcc_builder_default_alloc@@Base+0x78>
   28a44:	bl	12aa4 <free@plt>
   28a48:	mov	r6, #0
   28a4c:	str	r6, [r4]
   28a50:	str	r6, [r4, #4]
   28a54:	b	28ad0 <flatcc_builder_default_alloc@@Base+0xf0>
   28a58:	mov	r6, #0
   28a5c:	b	28ad0 <flatcc_builder_default_alloc@@Base+0xf0>
   28a60:	mov	r0, #32
   28a64:	b	28a74 <flatcc_builder_default_alloc@@Base+0x94>
   28a68:	mov	r0, r2
   28a6c:	b	28a74 <flatcc_builder_default_alloc@@Base+0x94>
   28a70:	mov	r0, #64	; 0x40
   28a74:	mov	r7, r0
   28a78:	lsl	r0, r0, #1
   28a7c:	cmp	r7, r2
   28a80:	bcc	28a74 <flatcc_builder_default_alloc@@Base+0x94>
   28a84:	ldr	r0, [r4, #4]
   28a88:	mov	r6, #0
   28a8c:	cmp	r0, r2
   28a90:	lsrcs	r0, r0, #1
   28a94:	cmpcs	r0, r7
   28a98:	bcs	28ad0 <flatcc_builder_default_alloc@@Base+0xf0>
   28a9c:	ldr	r0, [r4]
   28aa0:	mov	r1, r7
   28aa4:	bl	12af8 <realloc@plt>
   28aa8:	cmp	r0, #0
   28aac:	beq	28acc <flatcc_builder_default_alloc@@Base+0xec>
   28ab0:	cmp	r8, #0
   28ab4:	mov	r5, r0
   28ab8:	ldrne	r1, [r4, #4]
   28abc:	cmpne	r7, r1
   28ac0:	bhi	28ad8 <flatcc_builder_default_alloc@@Base+0xf8>
   28ac4:	stm	r4, {r5, r7}
   28ac8:	b	28ad0 <flatcc_builder_default_alloc@@Base+0xf0>
   28acc:	mvn	r6, #0
   28ad0:	mov	r0, r6
   28ad4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   28ad8:	add	r0, r5, r1
   28adc:	sub	r2, r7, r1
   28ae0:	mov	r1, #0
   28ae4:	bl	12b64 <memset@plt>
   28ae8:	b	28ac4 <flatcc_builder_default_alloc@@Base+0xe4>

00028aec <flatcc_builder_flush_vtable_cache@@Base>:
   28aec:	push	{r4, r5, fp, lr}
   28af0:	add	fp, sp, #8
   28af4:	mov	r4, r0
   28af8:	ldr	r0, [r0, #116]	; 0x74
   28afc:	cmp	r0, #0
   28b00:	popeq	{r4, r5, fp, pc}
   28b04:	ldr	r0, [r4, #92]	; 0x5c
   28b08:	ldr	r2, [r4, #96]	; 0x60
   28b0c:	mov	r1, #0
   28b10:	mov	r5, #0
   28b14:	bl	12b64 <memset@plt>
   28b18:	mov	r0, #16
   28b1c:	str	r5, [r4, #120]	; 0x78
   28b20:	str	r0, [r4, #124]	; 0x7c
   28b24:	pop	{r4, r5, fp, pc}

00028b28 <flatcc_builder_custom_init@@Base>:
   28b28:	push	{r4, r5, r6, r7, fp, lr}
   28b2c:	add	fp, sp, #16
   28b30:	mov	r6, r2
   28b34:	mov	r7, r1
   28b38:	mov	r1, #0
   28b3c:	mov	r2, #232	; 0xe8
   28b40:	mov	r5, r3
   28b44:	mov	r4, r0
   28b48:	bl	12b64 <memset@plt>
   28b4c:	ldr	r0, [fp, #8]
   28b50:	cmp	r7, #0
   28b54:	bne	28b6c <flatcc_builder_custom_init@@Base+0x44>
   28b58:	movw	r7, #51616	; 0xc9a0
   28b5c:	mov	r1, #1
   28b60:	add	r6, r4, #188	; 0xbc
   28b64:	movt	r7, #2
   28b68:	str	r1, [r4, #184]	; 0xb8
   28b6c:	movw	r1, #35296	; 0x89e0
   28b70:	cmp	r5, #0
   28b74:	str	r6, [r4, #36]	; 0x24
   28b78:	str	r0, [r4, #40]	; 0x28
   28b7c:	mov	r0, #0
   28b80:	str	r7, [r4, #44]	; 0x2c
   28b84:	movt	r1, #2
   28b88:	movne	r1, r5
   28b8c:	str	r1, [r4, #48]	; 0x30
   28b90:	pop	{r4, r5, r6, r7, fp, pc}

00028b94 <flatcc_builder_init@@Base>:
   28b94:	push	{r4, r5, fp, lr}
   28b98:	add	fp, sp, #8
   28b9c:	mov	r1, #0
   28ba0:	mov	r2, #232	; 0xe8
   28ba4:	mov	r4, r0
   28ba8:	mov	r5, #0
   28bac:	bl	12b64 <memset@plt>
   28bb0:	mov	r0, #1
   28bb4:	movw	r2, #51616	; 0xc9a0
   28bb8:	add	r1, r4, #188	; 0xbc
   28bbc:	str	r0, [r4, #184]	; 0xb8
   28bc0:	movw	r0, #35296	; 0x89e0
   28bc4:	movt	r2, #2
   28bc8:	str	r1, [r4, #36]	; 0x24
   28bcc:	str	r5, [r4, #40]	; 0x28
   28bd0:	movt	r0, #2
   28bd4:	str	r2, [r4, #44]	; 0x2c
   28bd8:	str	r0, [r4, #48]	; 0x30
   28bdc:	mov	r0, #0
   28be0:	pop	{r4, r5, fp, pc}

00028be4 <flatcc_builder_custom_reset@@Base>:
   28be4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28be8:	add	fp, sp, #24
   28bec:	sub	sp, sp, #8
   28bf0:	mov	r9, r2
   28bf4:	mov	r8, r1
   28bf8:	mov	r4, r0
   28bfc:	add	r7, r0, #52	; 0x34
   28c00:	mov	r5, #0
   28c04:	ldr	r0, [r7]
   28c08:	cmp	r0, #0
   28c0c:	beq	28c54 <flatcc_builder_custom_reset@@Base+0x70>
   28c10:	cmp	r9, #0
   28c14:	cmpne	r5, #5
   28c18:	beq	28c44 <flatcc_builder_custom_reset@@Base+0x60>
   28c1c:	ldr	r0, [r4, #40]	; 0x28
   28c20:	ldr	r6, [r4, #48]	; 0x30
   28c24:	mov	r1, r7
   28c28:	mov	r2, #1
   28c2c:	mov	r3, #1
   28c30:	str	r5, [sp]
   28c34:	blx	r6
   28c38:	cmp	r0, #0
   28c3c:	bne	28cf4 <flatcc_builder_custom_reset@@Base+0x110>
   28c40:	ldr	r0, [r7]
   28c44:	ldr	r2, [r7, #4]
   28c48:	mov	r1, #0
   28c4c:	bl	12b64 <memset@plt>
   28c50:	b	28c60 <flatcc_builder_custom_reset@@Base+0x7c>
   28c54:	ldr	r0, [r7, #4]
   28c58:	cmp	r0, #0
   28c5c:	bne	28d04 <flatcc_builder_custom_reset@@Base+0x120>
   28c60:	add	r5, r5, #1
   28c64:	add	r7, r7, #8
   28c68:	cmp	r5, #8
   28c6c:	bcc	28c04 <flatcc_builder_custom_reset@@Base+0x20>
   28c70:	mov	r0, #0
   28c74:	vmov.i32	q8, #0	; 0x00000000
   28c78:	mov	r5, #0
   28c7c:	str	r0, [r4, #120]	; 0x78
   28c80:	ldr	r1, [r4, #124]	; 0x7c
   28c84:	cmp	r1, #0
   28c88:	movne	r1, #16
   28c8c:	strne	r1, [r4, #124]	; 0x7c
   28c90:	add	r1, r4, #148	; 0x94
   28c94:	strh	r0, [r4, #128]	; 0x80
   28c98:	str	r0, [r4, #136]	; 0x88
   28c9c:	str	r0, [r4, #140]	; 0x8c
   28ca0:	str	r0, [r4, #32]
   28ca4:	cmp	r8, #0
   28ca8:	vst1.32	{d16-d17}, [r1]
   28cac:	ldr	r2, [r4, #60]	; 0x3c
   28cb0:	ldr	r1, [r4, #52]	; 0x34
   28cb4:	ldr	r3, [r4, #76]	; 0x4c
   28cb8:	str	r2, [r4, #16]
   28cbc:	str	r0, [r4, #20]
   28cc0:	str	r0, [r4, #24]
   28cc4:	movne	r0, #0
   28cc8:	str	r3, [r4]
   28ccc:	str	r1, [r4, #4]
   28cd0:	strne	r0, [r4, #172]	; 0xac
   28cd4:	strne	r0, [r4, #176]	; 0xb0
   28cd8:	strne	r0, [r4, #180]	; 0xb4
   28cdc:	ldr	r0, [r4, #184]	; 0xb8
   28ce0:	cmp	r0, #0
   28ce4:	beq	28cf8 <flatcc_builder_custom_reset@@Base+0x114>
   28ce8:	add	r0, r4, #188	; 0xbc
   28cec:	bl	2c870 <flatcc_emitter_reset@@Base>
   28cf0:	b	28cf8 <flatcc_builder_custom_reset@@Base+0x114>
   28cf4:	mvn	r5, #0
   28cf8:	mov	r0, r5
   28cfc:	sub	sp, fp, #24
   28d00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28d04:	movw	r0, #5812	; 0x16b4
   28d08:	movw	r1, #5830	; 0x16c6
   28d0c:	movw	r3, #5900	; 0x170c
   28d10:	movw	r2, #434	; 0x1b2
   28d14:	movt	r0, #3
   28d18:	movt	r1, #3
   28d1c:	movt	r3, #3
   28d20:	bl	12bc4 <__assert_fail@plt>

00028d24 <flatcc_builder_reset@@Base>:
   28d24:	mov	r1, #0
   28d28:	mov	r2, #0
   28d2c:	b	28be4 <flatcc_builder_custom_reset@@Base>

00028d30 <flatcc_builder_clear@@Base>:
   28d30:	push	{r4, r5, r6, r7, fp, lr}
   28d34:	add	fp, sp, #16
   28d38:	sub	sp, sp, #8
   28d3c:	mov	r7, r0
   28d40:	add	r5, r0, #52	; 0x34
   28d44:	mov	r6, #0
   28d48:	ldr	r0, [r7, #40]	; 0x28
   28d4c:	ldr	r4, [r7, #48]	; 0x30
   28d50:	mov	r1, r5
   28d54:	mov	r2, #0
   28d58:	mov	r3, #0
   28d5c:	str	r6, [sp]
   28d60:	blx	r4
   28d64:	add	r6, r6, #1
   28d68:	add	r5, r5, #8
   28d6c:	cmp	r6, #8
   28d70:	bne	28d48 <flatcc_builder_clear@@Base+0x18>
   28d74:	ldr	r0, [r7, #184]	; 0xb8
   28d78:	cmp	r0, #0
   28d7c:	beq	28d88 <flatcc_builder_clear@@Base+0x58>
   28d80:	add	r0, r7, #188	; 0xbc
   28d84:	bl	2c93c <flatcc_emitter_clear@@Base>
   28d88:	mov	r0, r7
   28d8c:	mov	r1, #0
   28d90:	mov	r2, #232	; 0xe8
   28d94:	sub	sp, fp, #16
   28d98:	pop	{r4, r5, r6, r7, fp, lr}
   28d9c:	b	12b64 <memset@plt>

00028da0 <flatcc_builder_enter_user_frame_ptr@@Base>:
   28da0:	push	{r4, r5, r6, r7, fp, lr}
   28da4:	add	fp, sp, #16
   28da8:	sub	sp, sp, #8
   28dac:	mov	r4, r0
   28db0:	ldr	r0, [r0, #112]	; 0x70
   28db4:	add	r1, r1, #7
   28db8:	ldr	r7, [r4, #228]	; 0xe4
   28dbc:	bic	r5, r1, #3
   28dc0:	add	r6, r4, #108	; 0x6c
   28dc4:	add	r2, r7, r5
   28dc8:	cmp	r2, r0
   28dcc:	bls	28df4 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   28dd0:	ldr	r0, [r4, #40]	; 0x28
   28dd4:	ldr	ip, [r4, #48]	; 0x30
   28dd8:	mov	r1, #7
   28ddc:	mov	r3, #0
   28de0:	str	r1, [sp]
   28de4:	mov	r1, r6
   28de8:	blx	ip
   28dec:	cmp	r0, #0
   28df0:	bne	28e40 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   28df4:	ldr	r0, [r6]
   28df8:	adds	r6, r0, r7
   28dfc:	beq	28e30 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   28e00:	mov	r0, r6
   28e04:	mov	r1, #0
   28e08:	mov	r2, r5
   28e0c:	bl	12b64 <memset@plt>
   28e10:	ldr	r0, [r4, #224]	; 0xe0
   28e14:	str	r0, [r6], #4
   28e18:	ldr	r0, [r4, #228]	; 0xe4
   28e1c:	add	r1, r0, #4
   28e20:	add	r0, r0, r5
   28e24:	str	r1, [r4, #224]	; 0xe0
   28e28:	str	r0, [r4, #228]	; 0xe4
   28e2c:	b	28e34 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   28e30:	mov	r6, #0
   28e34:	mov	r0, r6
   28e38:	sub	sp, fp, #16
   28e3c:	pop	{r4, r5, r6, r7, fp, pc}
   28e40:	movw	r0, #10348	; 0x286c
   28e44:	movw	r1, #5830	; 0x16c6
   28e48:	movw	r3, #9894	; 0x26a6
   28e4c:	mov	r2, #308	; 0x134
   28e50:	movt	r0, #3
   28e54:	movt	r1, #3
   28e58:	movt	r3, #3
   28e5c:	bl	12bc4 <__assert_fail@plt>

00028e60 <flatcc_builder_enter_user_frame@@Base>:
   28e60:	push	{r4, r5, r6, r7, fp, lr}
   28e64:	add	fp, sp, #16
   28e68:	sub	sp, sp, #8
   28e6c:	mov	r4, r0
   28e70:	ldr	r0, [r0, #112]	; 0x70
   28e74:	add	r1, r1, #7
   28e78:	ldr	r7, [r4, #228]	; 0xe4
   28e7c:	bic	r5, r1, #3
   28e80:	add	r6, r4, #108	; 0x6c
   28e84:	add	r2, r7, r5
   28e88:	cmp	r2, r0
   28e8c:	bls	28eb4 <flatcc_builder_enter_user_frame@@Base+0x54>
   28e90:	ldr	r0, [r4, #40]	; 0x28
   28e94:	ldr	ip, [r4, #48]	; 0x30
   28e98:	mov	r1, #7
   28e9c:	mov	r3, #0
   28ea0:	str	r1, [sp]
   28ea4:	mov	r1, r6
   28ea8:	blx	ip
   28eac:	cmp	r0, #0
   28eb0:	bne	28efc <flatcc_builder_enter_user_frame@@Base+0x9c>
   28eb4:	ldr	r0, [r6]
   28eb8:	adds	r6, r0, r7
   28ebc:	beq	28ef0 <flatcc_builder_enter_user_frame@@Base+0x90>
   28ec0:	mov	r0, r6
   28ec4:	mov	r1, #0
   28ec8:	mov	r2, r5
   28ecc:	bl	12b64 <memset@plt>
   28ed0:	ldr	r0, [r4, #224]	; 0xe0
   28ed4:	str	r0, [r6]
   28ed8:	ldr	r1, [r4, #228]	; 0xe4
   28edc:	add	r0, r1, #4
   28ee0:	add	r1, r1, r5
   28ee4:	str	r0, [r4, #224]	; 0xe0
   28ee8:	str	r1, [r4, #228]	; 0xe4
   28eec:	b	28ef4 <flatcc_builder_enter_user_frame@@Base+0x94>
   28ef0:	mov	r0, #0
   28ef4:	sub	sp, fp, #16
   28ef8:	pop	{r4, r5, r6, r7, fp, pc}
   28efc:	movw	r0, #10348	; 0x286c
   28f00:	movw	r1, #5830	; 0x16c6
   28f04:	movw	r3, #9894	; 0x26a6
   28f08:	mov	r2, #308	; 0x134
   28f0c:	movt	r0, #3
   28f10:	movt	r1, #3
   28f14:	movt	r3, #3
   28f18:	bl	12bc4 <__assert_fail@plt>

00028f1c <flatcc_builder_exit_user_frame@@Base>:
   28f1c:	ldr	r1, [r0, #224]	; 0xe0
   28f20:	cmp	r1, #0
   28f24:	subne	r2, r1, #4
   28f28:	strne	r2, [r0, #228]	; 0xe4
   28f2c:	ldrne	r2, [r0, #108]	; 0x6c
   28f30:	addne	r1, r2, r1
   28f34:	ldrne	r1, [r1, #-4]
   28f38:	strne	r1, [r0, #224]	; 0xe0
   28f3c:	movne	r0, r1
   28f40:	bxne	lr
   28f44:	push	{fp, lr}
   28f48:	mov	fp, sp
   28f4c:	movw	r0, #5962	; 0x174a
   28f50:	movw	r1, #5830	; 0x16c6
   28f54:	movw	r3, #5987	; 0x1763
   28f58:	movw	r2, #542	; 0x21e
   28f5c:	movt	r0, #3
   28f60:	movt	r1, #3
   28f64:	movt	r3, #3
   28f68:	bl	12bc4 <__assert_fail@plt>

00028f6c <flatcc_builder_exit_user_frame_at@@Base>:
   28f6c:	ldr	r2, [r0, #224]	; 0xe0
   28f70:	cmp	r2, r1
   28f74:	bcc	28f80 <flatcc_builder_exit_user_frame_at@@Base+0x14>
   28f78:	str	r1, [r0, #224]	; 0xe0
   28f7c:	b	28f1c <flatcc_builder_exit_user_frame@@Base>
   28f80:	push	{fp, lr}
   28f84:	mov	fp, sp
   28f88:	movw	r0, #6045	; 0x179d
   28f8c:	movw	r1, #5830	; 0x16c6
   28f90:	movw	r3, #6076	; 0x17bc
   28f94:	movw	r2, #551	; 0x227
   28f98:	movt	r0, #3
   28f9c:	movt	r1, #3
   28fa0:	movt	r3, #3
   28fa4:	bl	12bc4 <__assert_fail@plt>

00028fa8 <flatcc_builder_get_current_user_frame@@Base>:
   28fa8:	ldr	r0, [r0, #224]	; 0xe0
   28fac:	bx	lr

00028fb0 <flatcc_builder_get_user_frame_ptr@@Base>:
   28fb0:	ldr	r0, [r0, #108]	; 0x6c
   28fb4:	add	r0, r0, r1
   28fb8:	bx	lr

00028fbc <flatcc_builder_embed_buffer@@Base>:
   28fbc:	push	{r4, r5, r6, r7, fp, lr}
   28fc0:	add	fp, sp, #16
   28fc4:	sub	sp, sp, #88	; 0x58
   28fc8:	mov	r4, r0
   28fcc:	ldr	r0, [fp, #8]
   28fd0:	mov	r5, r3
   28fd4:	mov	r7, r2
   28fd8:	mov	r2, r1
   28fdc:	sub	r1, fp, #18
   28fe0:	strh	r0, [fp, #-18]	; 0xffffffee
   28fe4:	mov	r0, r4
   28fe8:	ldr	r3, [r4, #152]	; 0x98
   28fec:	cmp	r3, #0
   28ff0:	movwne	r3, #1
   28ff4:	bl	2912c <flatcc_builder_embed_buffer@@Base+0x170>
   28ff8:	ldr	r1, [fp, #12]
   28ffc:	ldrh	r3, [fp, #-18]	; 0xffffffee
   29000:	ldr	r0, [r4, #136]	; 0x88
   29004:	mov	r2, #0
   29008:	str	r2, [sp, #8]
   2900c:	str	r2, [sp, #12]
   29010:	and	r1, r1, #2
   29014:	sub	r3, r3, #1
   29018:	add	r1, r5, r1, lsl #1
   2901c:	sub	r1, r0, r1
   29020:	and	r3, r1, r3
   29024:	add	r1, r3, r5
   29028:	str	r1, [fp, #-24]	; 0xffffffe8
   2902c:	ldr	r1, [r4, #152]	; 0x98
   29030:	cmp	r1, #0
   29034:	mov	r1, #0
   29038:	beq	29058 <flatcc_builder_embed_buffer@@Base+0x9c>
   2903c:	sub	r1, fp, #24
   29040:	mov	r2, #1
   29044:	str	r1, [sp, #16]
   29048:	mov	r1, #4
   2904c:	str	r1, [sp, #8]
   29050:	str	r1, [sp, #20]
   29054:	str	r2, [sp, #12]
   29058:	cmp	r5, #0
   2905c:	beq	29080 <flatcc_builder_embed_buffer@@Base+0xc4>
   29060:	add	r6, sp, #8
   29064:	add	r1, r1, r5
   29068:	add	r6, r6, r2, lsl #3
   2906c:	add	r2, r2, #1
   29070:	str	r1, [sp, #8]
   29074:	str	r7, [r6, #8]
   29078:	str	r5, [r6, #12]
   2907c:	str	r2, [sp, #12]
   29080:	cmp	r3, #0
   29084:	beq	290b0 <flatcc_builder_embed_buffer@@Base+0xf4>
   29088:	add	r7, sp, #8
   2908c:	movw	r6, #5300	; 0x14b4
   29090:	add	r1, r1, r3
   29094:	add	r7, r7, r2, lsl #3
   29098:	add	r2, r2, #1
   2909c:	movt	r6, #3
   290a0:	str	r1, [sp, #8]
   290a4:	str	r6, [r7, #8]
   290a8:	str	r3, [r7, #12]
   290ac:	str	r2, [sp, #12]
   290b0:	cmp	r1, #0
   290b4:	ble	2910c <flatcc_builder_embed_buffer@@Base+0x150>
   290b8:	sub	r5, r0, r1
   290bc:	ldr	r0, [r4, #36]	; 0x24
   290c0:	ldr	r7, [r4, #44]	; 0x2c
   290c4:	str	r1, [sp]
   290c8:	add	r1, sp, #8
   290cc:	add	r1, r1, #8
   290d0:	mov	r3, r5
   290d4:	blx	r7
   290d8:	cmp	r0, #0
   290dc:	streq	r5, [r4, #136]	; 0x88
   290e0:	moveq	r0, r5
   290e4:	subeq	sp, fp, #16
   290e8:	popeq	{r4, r5, r6, r7, fp, pc}
   290ec:	movw	r0, #10348	; 0x286c
   290f0:	movw	r1, #5830	; 0x16c6
   290f4:	movw	r3, #10027	; 0x272b
   290f8:	movw	r2, #651	; 0x28b
   290fc:	movt	r0, #3
   29100:	movt	r1, #3
   29104:	movt	r3, #3
   29108:	bl	12bc4 <__assert_fail@plt>
   2910c:	movw	r0, #10348	; 0x286c
   29110:	movw	r1, #5830	; 0x16c6
   29114:	movw	r3, #10027	; 0x272b
   29118:	movw	r2, #647	; 0x287
   2911c:	movt	r0, #3
   29120:	movt	r1, #3
   29124:	movt	r3, #3
   29128:	bl	12bc4 <__assert_fail@plt>
   2912c:	push	{r4, sl, fp, lr}
   29130:	add	fp, sp, #8
   29134:	sub	sp, sp, #80	; 0x50
   29138:	cmp	r2, #0
   2913c:	bne	2914c <flatcc_builder_embed_buffer@@Base+0x190>
   29140:	ldrh	r2, [r0, #132]	; 0x84
   29144:	cmp	r2, #0
   29148:	movweq	r2, #1
   2914c:	ldrh	r4, [r1]
   29150:	cmp	r4, #4
   29154:	movwcc	r4, #4
   29158:	cmpcs	r4, r2
   2915c:	bcs	2916c <flatcc_builder_embed_buffer@@Base+0x1b0>
   29160:	cmp	r4, r2
   29164:	movcc	r4, r2
   29168:	strh	r4, [r1]
   2916c:	cmp	r3, #0
   29170:	bne	291e4 <flatcc_builder_embed_buffer@@Base+0x228>
   29174:	ldr	r4, [r0, #140]	; 0x8c
   29178:	sub	r1, r2, #1
   2917c:	ands	r1, r4, r1
   29180:	beq	291e4 <flatcc_builder_embed_buffer@@Base+0x228>
   29184:	movw	r2, #5300	; 0x14b4
   29188:	cmn	r1, #1
   2918c:	movt	r2, #3
   29190:	str	r2, [sp, #16]
   29194:	mov	r2, #1
   29198:	str	r1, [sp, #8]
   2919c:	str	r1, [sp, #20]
   291a0:	str	r2, [sp, #12]
   291a4:	add	r2, r1, r4
   291a8:	str	r2, [r0, #140]	; 0x8c
   291ac:	ble	291ec <flatcc_builder_embed_buffer@@Base+0x230>
   291b0:	ldr	r2, [r0, #36]	; 0x24
   291b4:	ldr	ip, [r0, #44]	; 0x2c
   291b8:	add	r0, sp, #8
   291bc:	str	r1, [sp]
   291c0:	mov	r3, r4
   291c4:	add	r1, r0, #8
   291c8:	mov	r0, r2
   291cc:	mov	r2, #1
   291d0:	blx	ip
   291d4:	cmp	r0, #0
   291d8:	bne	2920c <flatcc_builder_embed_buffer@@Base+0x250>
   291dc:	cmn	r4, #1
   291e0:	beq	2922c <flatcc_builder_embed_buffer@@Base+0x270>
   291e4:	sub	sp, fp, #8
   291e8:	pop	{r4, sl, fp, pc}
   291ec:	movw	r0, #10348	; 0x286c
   291f0:	movw	r1, #5830	; 0x16c6
   291f4:	movw	r3, #10215	; 0x27e7
   291f8:	movw	r2, #673	; 0x2a1
   291fc:	movt	r0, #3
   29200:	movt	r1, #3
   29204:	movt	r3, #3
   29208:	bl	12bc4 <__assert_fail@plt>
   2920c:	movw	r0, #10348	; 0x286c
   29210:	movw	r1, #5830	; 0x16c6
   29214:	movw	r3, #10215	; 0x27e7
   29218:	movw	r2, #677	; 0x2a5
   2921c:	movt	r0, #3
   29220:	movt	r1, #3
   29224:	movt	r3, #3
   29228:	bl	12bc4 <__assert_fail@plt>
   2922c:	movw	r0, #10348	; 0x286c
   29230:	movw	r1, #5830	; 0x16c6
   29234:	movw	r3, #9961	; 0x26e9
   29238:	movw	r2, #702	; 0x2be
   2923c:	movt	r0, #3
   29240:	movt	r1, #3
   29244:	movt	r3, #3
   29248:	bl	12bc4 <__assert_fail@plt>

0002924c <flatcc_builder_create_buffer@@Base>:
   2924c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29250:	add	fp, sp, #28
   29254:	sub	sp, sp, #100	; 0x64
   29258:	ldr	r8, [fp, #12]
   2925c:	mov	r4, r0
   29260:	ldr	r0, [fp, #8]
   29264:	mov	r7, r1
   29268:	mov	r5, #0
   2926c:	mov	r9, r3
   29270:	sub	r1, fp, #30
   29274:	str	r5, [sp, #12]
   29278:	and	r6, r8, #1
   2927c:	strh	r0, [fp, #-30]	; 0xffffffe2
   29280:	mov	r0, r4
   29284:	mov	r3, r6
   29288:	bl	2912c <flatcc_builder_embed_buffer@@Base+0x170>
   2928c:	ldrh	r0, [r4, #128]	; 0x80
   29290:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   29294:	cmp	r0, r1
   29298:	strhcc	r1, [r4, #128]	; 0x80
   2929c:	cmp	r7, #0
   292a0:	stmib	sp, {r6, r9}
   292a4:	beq	292c0 <flatcc_builder_create_buffer@@Base+0x74>
   292a8:	ldr	r5, [r7]
   292ac:	cmp	r5, #0
   292b0:	str	r5, [sp, #12]
   292b4:	movwne	r5, #1
   292b8:	lsl	r7, r5, #2
   292bc:	b	292c4 <flatcc_builder_create_buffer@@Base+0x78>
   292c0:	mov	r7, #0
   292c4:	ldr	r9, [r4, #136]	; 0x88
   292c8:	mov	sl, #4
   292cc:	mvn	r6, #3
   292d0:	mov	r3, #0
   292d4:	ands	ip, r8, #3
   292d8:	and	r2, sl, r8, lsl #1
   292dc:	str	r3, [sp, #20]
   292e0:	str	r3, [sp, #16]
   292e4:	sub	r2, r6, r2
   292e8:	sub	r6, r1, #1
   292ec:	mov	r1, #4
   292f0:	add	r2, r2, r9
   292f4:	sub	r2, r2, r7
   292f8:	beq	2931c <flatcc_builder_create_buffer@@Base+0xd0>
   292fc:	sub	r1, fp, #40	; 0x28
   29300:	mov	r3, #1
   29304:	str	r1, [sp, #24]
   29308:	mov	r1, #4
   2930c:	str	r1, [sp, #16]
   29310:	str	r1, [sp, #28]
   29314:	mov	r1, #8
   29318:	str	r3, [sp, #20]
   2931c:	add	lr, sp, #16
   29320:	and	r6, r2, r6
   29324:	sub	r0, fp, #36	; 0x24
   29328:	str	r1, [sp, #16]
   2932c:	cmp	r5, #0
   29330:	add	r2, lr, r3, lsl #3
   29334:	str	r0, [r2, #8]
   29338:	str	sl, [r2, #12]
   2933c:	add	r2, r3, #1
   29340:	str	r2, [sp, #20]
   29344:	beq	29368 <flatcc_builder_create_buffer@@Base+0x11c>
   29348:	add	r1, r1, r7
   2934c:	add	r0, lr, r2, lsl #3
   29350:	add	r2, sp, #12
   29354:	str	r1, [sp, #16]
   29358:	str	r2, [r0, #8]
   2935c:	orr	r2, r3, #2
   29360:	str	r7, [r0, #12]
   29364:	str	r2, [sp, #20]
   29368:	cmp	r6, #0
   2936c:	beq	29394 <flatcc_builder_create_buffer@@Base+0x148>
   29370:	movw	r3, #5300	; 0x14b4
   29374:	add	r1, r1, r6
   29378:	add	r0, lr, r2, lsl #3
   2937c:	add	r2, r2, #1
   29380:	movt	r3, #3
   29384:	str	r1, [sp, #16]
   29388:	str	r3, [r0, #8]
   2938c:	str	r6, [r0, #12]
   29390:	str	r2, [sp, #20]
   29394:	ldr	r5, [sp, #4]
   29398:	sub	r7, r9, r1
   2939c:	cmp	ip, #0
   293a0:	mov	r6, #144	; 0x90
   293a4:	ldr	r3, [sp, #8]
   293a8:	mov	r0, r7
   293ac:	addne	r0, r0, #4
   293b0:	cmp	r5, #0
   293b4:	sub	r3, r3, r0
   293b8:	movweq	r6, #140	; 0x8c
   293bc:	cmp	r1, #0
   293c0:	ldr	r6, [r4, r6]
   293c4:	str	r3, [fp, #-36]	; 0xffffffdc
   293c8:	sub	r0, r6, r0
   293cc:	str	r0, [fp, #-40]	; 0xffffffd8
   293d0:	ble	29428 <flatcc_builder_create_buffer@@Base+0x1dc>
   293d4:	ldr	r0, [r4, #36]	; 0x24
   293d8:	ldr	r6, [r4, #44]	; 0x2c
   293dc:	str	r1, [sp]
   293e0:	add	r1, lr, #8
   293e4:	mov	r3, r7
   293e8:	blx	r6
   293ec:	cmp	r0, #0
   293f0:	bne	29448 <flatcc_builder_create_buffer@@Base+0x1fc>
   293f4:	cmp	r7, #0
   293f8:	str	r7, [r4, #136]	; 0x88
   293fc:	movne	r0, r7
   29400:	subne	sp, fp, #28
   29404:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29408:	movw	r0, #10348	; 0x286c
   2940c:	movw	r1, #5830	; 0x16c6
   29410:	movw	r3, #6145	; 0x1801
   29414:	mov	r2, #772	; 0x304
   29418:	movt	r0, #3
   2941c:	movt	r1, #3
   29420:	movt	r3, #3
   29424:	bl	12bc4 <__assert_fail@plt>
   29428:	movw	r0, #10348	; 0x286c
   2942c:	movw	r1, #5830	; 0x16c6
   29430:	movw	r3, #10027	; 0x272b
   29434:	movw	r2, #647	; 0x287
   29438:	movt	r0, #3
   2943c:	movt	r1, #3
   29440:	movt	r3, #3
   29444:	bl	12bc4 <__assert_fail@plt>
   29448:	movw	r0, #10348	; 0x286c
   2944c:	movw	r1, #5830	; 0x16c6
   29450:	movw	r3, #10027	; 0x272b
   29454:	movw	r2, #651	; 0x28b
   29458:	movt	r0, #3
   2945c:	movt	r1, #3
   29460:	movt	r3, #3
   29464:	bl	12bc4 <__assert_fail@plt>

00029468 <flatcc_builder_create_struct@@Base>:
   29468:	push	{r4, r5, r6, sl, fp, lr}
   2946c:	add	fp, sp, #16
   29470:	sub	sp, sp, #80	; 0x50
   29474:	cmp	r3, #0
   29478:	beq	29550 <flatcc_builder_create_struct@@Base+0xe8>
   2947c:	mov	r5, r0
   29480:	ldrh	r0, [r0, #128]	; 0x80
   29484:	mov	r4, #0
   29488:	cmp	r0, r3
   2948c:	strhcc	r3, [r5, #128]	; 0x80
   29490:	sub	r3, r3, #1
   29494:	cmp	r2, #0
   29498:	ldr	r0, [r5, #136]	; 0x88
   2949c:	str	r4, [sp, #12]
   294a0:	str	r4, [sp, #8]
   294a4:	movne	r4, #1
   294a8:	strne	r1, [sp, #16]
   294ac:	strne	r2, [sp, #8]
   294b0:	strne	r2, [sp, #20]
   294b4:	strne	r4, [sp, #12]
   294b8:	sub	r6, r0, r2
   294bc:	and	r3, r6, r3
   294c0:	cmp	r3, #0
   294c4:	beq	294f0 <flatcc_builder_create_struct@@Base+0x88>
   294c8:	add	r1, sp, #8
   294cc:	movw	r6, #5300	; 0x14b4
   294d0:	add	r2, r3, r2
   294d4:	add	r1, r1, r4, lsl #3
   294d8:	add	r4, r4, #1
   294dc:	movt	r6, #3
   294e0:	str	r2, [sp, #8]
   294e4:	str	r6, [r1, #8]
   294e8:	str	r3, [r1, #12]
   294ec:	str	r4, [sp, #12]
   294f0:	cmp	r2, #0
   294f4:	ble	29570 <flatcc_builder_create_struct@@Base+0x108>
   294f8:	sub	r6, r0, r2
   294fc:	ldr	r0, [r5, #36]	; 0x24
   29500:	ldr	ip, [r5, #44]	; 0x2c
   29504:	add	r1, sp, #8
   29508:	str	r2, [sp]
   2950c:	mov	r2, r4
   29510:	add	r1, r1, #8
   29514:	mov	r3, r6
   29518:	blx	ip
   2951c:	cmp	r0, #0
   29520:	streq	r6, [r5, #136]	; 0x88
   29524:	moveq	r0, r6
   29528:	subeq	sp, fp, #16
   2952c:	popeq	{r4, r5, r6, sl, fp, pc}
   29530:	movw	r0, #10348	; 0x286c
   29534:	movw	r1, #5830	; 0x16c6
   29538:	movw	r3, #10027	; 0x272b
   2953c:	movw	r2, #651	; 0x28b
   29540:	movt	r0, #3
   29544:	movt	r1, #3
   29548:	movt	r3, #3
   2954c:	bl	12bc4 <__assert_fail@plt>
   29550:	movw	r0, #6276	; 0x1884
   29554:	movw	r1, #5830	; 0x16c6
   29558:	movw	r3, #6287	; 0x188f
   2955c:	movw	r2, #783	; 0x30f
   29560:	movt	r0, #3
   29564:	movt	r1, #3
   29568:	movt	r3, #3
   2956c:	bl	12bc4 <__assert_fail@plt>
   29570:	movw	r0, #10348	; 0x286c
   29574:	movw	r1, #5830	; 0x16c6
   29578:	movw	r3, #10027	; 0x272b
   2957c:	movw	r2, #647	; 0x287
   29580:	movt	r0, #3
   29584:	movt	r1, #3
   29588:	movt	r3, #3
   2958c:	bl	12bc4 <__assert_fail@plt>

00029590 <flatcc_builder_start_buffer@@Base>:
   29590:	push	{r4, r5, r6, r7, fp, lr}
   29594:	add	fp, sp, #16
   29598:	mov	r5, r1
   2959c:	ldrh	r1, [r0, #128]	; 0x80
   295a0:	mov	r6, r3
   295a4:	mov	r7, r2
   295a8:	mov	r4, r0
   295ac:	bl	2964c <flatcc_builder_start_buffer@@Base+0xbc>
   295b0:	mov	r1, r0
   295b4:	mvn	r0, #0
   295b8:	cmp	r1, #0
   295bc:	popne	{r4, r5, r6, r7, fp, pc}
   295c0:	mov	r0, #1
   295c4:	cmp	r5, #0
   295c8:	strh	r0, [r4, #128]	; 0x80
   295cc:	ldrh	r1, [r4, #132]	; 0x84
   295d0:	ldr	r2, [r4, #32]
   295d4:	strh	r1, [r2, #34]	; 0x22
   295d8:	strh	r7, [r4, #132]	; 0x84
   295dc:	ldrh	r1, [r4, #164]	; 0xa4
   295e0:	ldr	r2, [r4, #32]
   295e4:	strh	r1, [r2, #32]
   295e8:	strh	r6, [r4, #164]	; 0xa4
   295ec:	ldr	r1, [r4, #32]
   295f0:	ldr	r2, [r4, #144]	; 0x90
   295f4:	str	r2, [r1, #20]
   295f8:	ldr	r1, [r4, #32]
   295fc:	ldr	r2, [r4, #152]	; 0x98
   29600:	str	r2, [r1, #28]
   29604:	ldr	r3, [r4, #148]	; 0x94
   29608:	ldr	r1, [r4, #32]
   2960c:	ldr	r2, [r4, #136]	; 0x88
   29610:	ldr	r7, [r4, #168]	; 0xa8
   29614:	add	r6, r3, #1
   29618:	str	r2, [r4, #144]	; 0x90
   2961c:	str	r6, [r4, #148]	; 0x94
   29620:	str	r3, [r4, #152]	; 0x98
   29624:	str	r7, [r1, #16]
   29628:	movw	r1, #5300	; 0x14b4
   2962c:	movt	r1, #3
   29630:	movne	r1, r5
   29634:	ldr	r1, [r1]
   29638:	str	r1, [r4, #168]	; 0xa8
   2963c:	ldr	r1, [r4, #32]
   29640:	strh	r0, [r1, #14]
   29644:	mov	r0, #0
   29648:	pop	{r4, r5, r6, r7, fp, pc}
   2964c:	push	{r4, r5, r6, r7, fp, lr}
   29650:	add	fp, sp, #16
   29654:	sub	sp, sp, #8
   29658:	mov	r5, r1
   2965c:	ldr	r1, [r0, #156]	; 0x9c
   29660:	ldr	r2, [r0, #160]	; 0xa0
   29664:	mov	r4, r0
   29668:	add	r0, r1, #1
   2966c:	cmp	r1, r2
   29670:	str	r0, [r4, #156]	; 0x9c
   29674:	bge	29688 <flatcc_builder_start_buffer@@Base+0xf8>
   29678:	ldr	r0, [r4, #32]
   2967c:	add	r0, r0, #36	; 0x24
   29680:	str	r0, [r4, #32]
   29684:	b	2971c <flatcc_builder_start_buffer@@Base+0x18c>
   29688:	ldr	r2, [r4, #176]	; 0xb0
   2968c:	mvn	r6, #0
   29690:	cmp	r2, #1
   29694:	cmpge	r1, r2
   29698:	bge	29754 <flatcc_builder_start_buffer@@Base+0x1c4>
   2969c:	add	r7, r0, r0, lsl #3
   296a0:	ldr	r0, [r4, #88]	; 0x58
   296a4:	lsl	r2, r7, #2
   296a8:	cmp	r2, r0
   296ac:	bls	296d4 <flatcc_builder_start_buffer@@Base+0x144>
   296b0:	ldr	r0, [r4, #40]	; 0x28
   296b4:	ldr	ip, [r4, #48]	; 0x30
   296b8:	mov	r3, #4
   296bc:	add	r1, r4, #84	; 0x54
   296c0:	str	r3, [sp]
   296c4:	mov	r3, #0
   296c8:	blx	ip
   296cc:	cmp	r0, #0
   296d0:	bne	29760 <flatcc_builder_start_buffer@@Base+0x1d0>
   296d4:	ldr	r1, [r4, #84]	; 0x54
   296d8:	mvn	r0, #35	; 0x23
   296dc:	add	r0, r0, r7, lsl #2
   296e0:	adds	r0, r0, r1
   296e4:	str	r0, [r4, #32]
   296e8:	beq	29754 <flatcc_builder_start_buffer@@Base+0x1c4>
   296ec:	ldr	r1, [r4, #88]	; 0x58
   296f0:	movw	r3, #36409	; 0x8e39
   296f4:	ldr	r2, [r4, #176]	; 0xb0
   296f8:	movt	r3, #14563	; 0x38e3
   296fc:	umull	r1, r3, r1, r3
   29700:	lsr	r1, r3, #3
   29704:	cmp	r2, r3, lsr #3
   29708:	mov	r3, r1
   2970c:	movlt	r3, r2
   29710:	cmp	r2, #0
   29714:	movle	r3, r1
   29718:	str	r3, [r4, #160]	; 0xa0
   2971c:	ldr	r1, [r4, #20]
   29720:	mvn	r3, #3
   29724:	mov	r6, #0
   29728:	str	r1, [r0, #8]
   2972c:	ldrh	r2, [r4, #130]	; 0x82
   29730:	strh	r2, [r0, #12]
   29734:	strh	r5, [r4, #130]	; 0x82
   29738:	ldr	r2, [r4, #28]
   2973c:	stm	r0, {r2, r3}
   29740:	add	r0, r1, r2
   29744:	str	r6, [r4, #20]
   29748:	add	r0, r0, #7
   2974c:	bic	r0, r0, #7
   29750:	str	r0, [r4, #28]
   29754:	mov	r0, r6
   29758:	sub	sp, fp, #16
   2975c:	pop	{r4, r5, r6, r7, fp, pc}
   29760:	movw	r0, #10348	; 0x286c
   29764:	movw	r1, #5830	; 0x16c6
   29768:	movw	r3, #9894	; 0x26a6
   2976c:	mov	r2, #308	; 0x134
   29770:	movt	r0, #3
   29774:	movt	r1, #3
   29778:	movt	r3, #3
   2977c:	bl	12bc4 <__assert_fail@plt>

00029780 <flatcc_builder_end_buffer@@Base>:
   29780:	push	{r4, r5, r6, sl, fp, lr}
   29784:	add	fp, sp, #16
   29788:	sub	sp, sp, #8
   2978c:	mov	r4, r0
   29790:	ldr	r0, [r0, #32]
   29794:	ldrh	r0, [r0, #14]
   29798:	cmp	r0, #1
   2979c:	bne	29890 <flatcc_builder_end_buffer@@Base+0x110>
   297a0:	mov	r3, r1
   297a4:	ldr	r1, [r4, #152]	; 0x98
   297a8:	ldrh	r0, [r4, #164]	; 0xa4
   297ac:	ldrh	r2, [r4, #132]	; 0x84
   297b0:	cmp	r1, #0
   297b4:	ldrh	r1, [r4, #128]	; 0x80
   297b8:	and	r0, r0, #2
   297bc:	orrne	r0, r0, #1
   297c0:	cmp	r1, r2
   297c4:	movcc	r1, r2
   297c8:	strhcc	r2, [r4, #128]	; 0x80
   297cc:	str	r0, [sp, #4]
   297d0:	mov	r0, r4
   297d4:	str	r1, [sp]
   297d8:	add	r1, r4, #168	; 0xa8
   297dc:	bl	2924c <flatcc_builder_create_buffer@@Base>
   297e0:	mov	r6, r0
   297e4:	cmp	r0, #0
   297e8:	beq	29884 <flatcc_builder_end_buffer@@Base+0x104>
   297ec:	ldr	r1, [r4, #32]
   297f0:	ldr	r0, [r4, #16]
   297f4:	ldr	r2, [r4, #20]
   297f8:	ldr	r3, [r1, #20]
   297fc:	str	r3, [r4, #144]	; 0x90
   29800:	ldr	r3, [r1, #28]
   29804:	str	r3, [r4, #152]	; 0x98
   29808:	ldr	r3, [r1, #16]
   2980c:	str	r3, [r4, #168]	; 0xa8
   29810:	ldrh	r1, [r1, #32]
   29814:	strh	r1, [r4, #164]	; 0xa4
   29818:	mov	r1, #0
   2981c:	bl	12b64 <memset@plt>
   29820:	ldr	r0, [r4, #32]
   29824:	ldr	r1, [r4, #60]	; 0x3c
   29828:	ldr	r2, [r4, #64]	; 0x40
   2982c:	ldr	r3, [r0, #8]
   29830:	str	r3, [r4, #20]
   29834:	ldr	r3, [r0]
   29838:	str	r3, [r4, #28]
   2983c:	add	r1, r1, r3
   29840:	ldr	r5, [r0, #4]
   29844:	str	r1, [r4, #16]
   29848:	sub	r1, r2, r3
   2984c:	cmp	r1, r5
   29850:	movhi	r1, r5
   29854:	str	r1, [r4, #24]
   29858:	ldrh	r1, [r4, #130]	; 0x82
   2985c:	ldrh	r2, [r4, #128]	; 0x80
   29860:	cmp	r2, r1
   29864:	strhcc	r1, [r4, #128]	; 0x80
   29868:	ldrh	r1, [r0, #12]
   2986c:	sub	r0, r0, #36	; 0x24
   29870:	str	r0, [r4, #32]
   29874:	strh	r1, [r4, #130]	; 0x82
   29878:	ldr	r0, [r4, #156]	; 0x9c
   2987c:	sub	r0, r0, #1
   29880:	str	r0, [r4, #156]	; 0x9c
   29884:	mov	r0, r6
   29888:	sub	sp, fp, #16
   2988c:	pop	{r4, r5, r6, sl, fp, pc}
   29890:	movw	r0, #6389	; 0x18f5
   29894:	movw	r1, #5830	; 0x16c6
   29898:	movw	r3, #6433	; 0x1921
   2989c:	movw	r2, #838	; 0x346
   298a0:	movt	r0, #3
   298a4:	movt	r1, #3
   298a8:	movt	r3, #3
   298ac:	bl	12bc4 <__assert_fail@plt>

000298b0 <flatcc_builder_start_struct@@Base>:
   298b0:	push	{r4, r5, r6, r7, fp, lr}
   298b4:	add	fp, sp, #16
   298b8:	mov	r6, r1
   298bc:	mov	r1, r2
   298c0:	mov	r4, r0
   298c4:	bl	2964c <flatcc_builder_start_buffer@@Base+0xbc>
   298c8:	mov	r5, #0
   298cc:	cmp	r0, #0
   298d0:	bne	29940 <flatcc_builder_start_struct@@Base+0x90>
   298d4:	ldr	r1, [r4, #32]
   298d8:	mov	r0, #2
   298dc:	strh	r0, [r1, #14]
   298e0:	ldr	r2, [r4, #28]
   298e4:	ldr	r0, [r4, #60]	; 0x3c
   298e8:	ldr	r3, [r4, #64]	; 0x40
   298ec:	add	r0, r0, r2
   298f0:	sub	r2, r3, r2
   298f4:	mvn	r3, #3
   298f8:	cmn	r2, #4
   298fc:	str	r0, [r4, #16]
   29900:	movcs	r2, r3
   29904:	str	r2, [r4, #24]
   29908:	str	r3, [r1, #4]
   2990c:	ldr	r7, [r4, #20]
   29910:	add	r1, r7, r6
   29914:	cmp	r1, r2
   29918:	str	r1, [r4, #20]
   2991c:	bcc	2993c <flatcc_builder_start_struct@@Base+0x8c>
   29920:	add	r1, r1, #1
   29924:	mov	r0, r4
   29928:	mvn	r2, #3
   2992c:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29930:	cmp	r0, #0
   29934:	bne	29940 <flatcc_builder_start_struct@@Base+0x90>
   29938:	ldr	r0, [r4, #16]
   2993c:	add	r5, r0, r7
   29940:	mov	r0, r5
   29944:	pop	{r4, r5, r6, r7, fp, pc}

00029948 <flatcc_builder_struct_edit@@Base>:
   29948:	ldr	r0, [r0, #16]
   2994c:	bx	lr

00029950 <flatcc_builder_end_struct@@Base>:
   29950:	push	{r4, r5, fp, lr}
   29954:	add	fp, sp, #8
   29958:	mov	r4, r0
   2995c:	ldr	r0, [r0, #32]
   29960:	ldrh	r0, [r0, #14]
   29964:	cmp	r0, #2
   29968:	bne	29a08 <flatcc_builder_end_struct@@Base+0xb8>
   2996c:	ldrh	r3, [r4, #130]	; 0x82
   29970:	ldr	r1, [r4, #16]
   29974:	ldr	r2, [r4, #20]
   29978:	mov	r0, r4
   2997c:	bl	29468 <flatcc_builder_create_struct@@Base>
   29980:	mov	r5, r0
   29984:	cmp	r0, #0
   29988:	beq	29a00 <flatcc_builder_end_struct@@Base+0xb0>
   2998c:	ldr	r0, [r4, #16]
   29990:	ldr	r2, [r4, #20]
   29994:	mov	r1, #0
   29998:	bl	12b64 <memset@plt>
   2999c:	ldr	r0, [r4, #32]
   299a0:	ldr	r1, [r4, #60]	; 0x3c
   299a4:	ldr	ip, [r4, #64]	; 0x40
   299a8:	ldr	r3, [r0, #8]
   299ac:	str	r3, [r4, #20]
   299b0:	ldr	r3, [r0]
   299b4:	str	r3, [r4, #28]
   299b8:	add	r1, r1, r3
   299bc:	ldr	r2, [r0, #4]
   299c0:	str	r1, [r4, #16]
   299c4:	sub	r1, ip, r3
   299c8:	cmp	r1, r2
   299cc:	movhi	r1, r2
   299d0:	str	r1, [r4, #24]
   299d4:	ldrh	r1, [r4, #130]	; 0x82
   299d8:	ldrh	r2, [r4, #128]	; 0x80
   299dc:	cmp	r2, r1
   299e0:	strhcc	r1, [r4, #128]	; 0x80
   299e4:	ldrh	r1, [r0, #12]
   299e8:	sub	r0, r0, #36	; 0x24
   299ec:	str	r0, [r4, #32]
   299f0:	strh	r1, [r4, #130]	; 0x82
   299f4:	ldr	r0, [r4, #156]	; 0x9c
   299f8:	sub	r0, r0, #1
   299fc:	str	r0, [r4, #156]	; 0x9c
   29a00:	mov	r0, r5
   29a04:	pop	{r4, r5, fp, pc}
   29a08:	movw	r0, #6522	; 0x197a
   29a0c:	movw	r1, #5830	; 0x16c6
   29a10:	movw	r3, #6566	; 0x19a6
   29a14:	mov	r2, #872	; 0x368
   29a18:	movt	r0, #3
   29a1c:	movt	r1, #3
   29a20:	movt	r3, #3
   29a24:	bl	12bc4 <__assert_fail@plt>

00029a28 <flatcc_builder_extend_vector@@Base>:
   29a28:	push	{r4, r5, fp, lr}
   29a2c:	add	fp, sp, #8
   29a30:	mov	r4, r0
   29a34:	ldr	r0, [r0, #32]
   29a38:	ldr	r2, [r0, #20]
   29a3c:	adds	r2, r2, r1
   29a40:	bcs	29aa0 <flatcc_builder_extend_vector@@Base+0x78>
   29a44:	ldr	r3, [r0, #24]
   29a48:	cmp	r2, r3
   29a4c:	bhi	29aa0 <flatcc_builder_extend_vector@@Base+0x78>
   29a50:	str	r2, [r0, #20]
   29a54:	ldr	r0, [r4, #32]
   29a58:	ldr	r5, [r4, #20]
   29a5c:	ldr	r2, [r4, #24]
   29a60:	ldr	r0, [r0, #16]
   29a64:	mla	r0, r0, r1, r5
   29a68:	cmp	r0, r2
   29a6c:	str	r0, [r4, #20]
   29a70:	bcc	29a94 <flatcc_builder_extend_vector@@Base+0x6c>
   29a74:	add	r1, r0, #1
   29a78:	mov	r0, r4
   29a7c:	mvn	r2, #3
   29a80:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29a84:	mov	r1, r0
   29a88:	mov	r0, #0
   29a8c:	cmp	r1, #0
   29a90:	popne	{r4, r5, fp, pc}
   29a94:	ldr	r0, [r4, #16]
   29a98:	add	r0, r0, r5
   29a9c:	pop	{r4, r5, fp, pc}
   29aa0:	movw	r0, #10101	; 0x2775
   29aa4:	movw	r1, #5830	; 0x16c6
   29aa8:	movw	r3, #10128	; 0x2790
   29aac:	mov	r2, #892	; 0x37c
   29ab0:	movt	r0, #3
   29ab4:	movt	r1, #3
   29ab8:	movt	r3, #3
   29abc:	bl	12bc4 <__assert_fail@plt>

00029ac0 <flatcc_builder_vector_push@@Base>:
   29ac0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29ac4:	add	fp, sp, #24
   29ac8:	mov	r5, r0
   29acc:	ldr	r0, [r0, #32]
   29ad0:	mov	r8, r1
   29ad4:	ldrh	r1, [r0, #14]
   29ad8:	cmp	r1, #4
   29adc:	bne	29b60 <flatcc_builder_vector_push@@Base+0xa0>
   29ae0:	ldr	r1, [r0, #20]
   29ae4:	ldr	r2, [r0, #24]
   29ae8:	cmp	r1, r2
   29aec:	bhi	29b80 <flatcc_builder_vector_push@@Base+0xc0>
   29af0:	add	r1, r1, #1
   29af4:	str	r1, [r0, #20]
   29af8:	ldr	r0, [r5, #32]
   29afc:	ldr	r4, [r5, #20]
   29b00:	ldr	r1, [r5, #24]
   29b04:	ldr	r6, [r0, #16]
   29b08:	add	r0, r4, r6
   29b0c:	cmp	r0, r1
   29b10:	str	r0, [r5, #20]
   29b14:	bcc	29b34 <flatcc_builder_vector_push@@Base+0x74>
   29b18:	add	r1, r0, #1
   29b1c:	mov	r0, r5
   29b20:	mvn	r2, #3
   29b24:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29b28:	mov	r7, #0
   29b2c:	cmp	r0, #0
   29b30:	bne	29b58 <flatcc_builder_vector_push@@Base+0x98>
   29b34:	ldr	r0, [r5, #16]
   29b38:	adds	r7, r0, r4
   29b3c:	beq	29b54 <flatcc_builder_vector_push@@Base+0x94>
   29b40:	mov	r0, r7
   29b44:	mov	r1, r8
   29b48:	mov	r2, r6
   29b4c:	bl	12ab0 <memcpy@plt>
   29b50:	b	29b58 <flatcc_builder_vector_push@@Base+0x98>
   29b54:	mov	r7, #0
   29b58:	mov	r0, r7
   29b5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29b60:	movw	r0, #6633	; 0x19e9
   29b64:	movw	r1, #5830	; 0x16c6
   29b68:	movw	r3, #6677	; 0x1a15
   29b6c:	movw	r2, #907	; 0x38b
   29b70:	movt	r0, #3
   29b74:	movt	r1, #3
   29b78:	movt	r3, #3
   29b7c:	bl	12bc4 <__assert_fail@plt>
   29b80:	movw	r0, #6744	; 0x1a58
   29b84:	movw	r1, #5830	; 0x16c6
   29b88:	movw	r3, #6677	; 0x1a15
   29b8c:	mov	r2, #908	; 0x38c
   29b90:	movt	r0, #3
   29b94:	movt	r1, #3
   29b98:	movt	r3, #3
   29b9c:	bl	12bc4 <__assert_fail@plt>

00029ba0 <flatcc_builder_append_vector@@Base>:
   29ba0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29ba4:	add	fp, sp, #24
   29ba8:	mov	r6, r0
   29bac:	ldr	r0, [r0, #32]
   29bb0:	mov	r8, r1
   29bb4:	ldrh	r1, [r0, #14]
   29bb8:	cmp	r1, #4
   29bbc:	bne	29c68 <flatcc_builder_append_vector@@Base+0xc8>
   29bc0:	ldr	r1, [r0, #20]
   29bc4:	mov	r9, r2
   29bc8:	adds	r1, r1, r2
   29bcc:	bcs	29c48 <flatcc_builder_append_vector@@Base+0xa8>
   29bd0:	ldr	r2, [r0, #24]
   29bd4:	cmp	r1, r2
   29bd8:	bhi	29c48 <flatcc_builder_append_vector@@Base+0xa8>
   29bdc:	str	r1, [r0, #20]
   29be0:	ldr	r0, [r6, #32]
   29be4:	ldr	r4, [r6, #20]
   29be8:	ldr	r1, [r6, #24]
   29bec:	ldr	r5, [r0, #16]
   29bf0:	mla	r0, r5, r9, r4
   29bf4:	cmp	r0, r1
   29bf8:	str	r0, [r6, #20]
   29bfc:	bcc	29c1c <flatcc_builder_append_vector@@Base+0x7c>
   29c00:	add	r1, r0, #1
   29c04:	mov	r0, r6
   29c08:	mvn	r2, #3
   29c0c:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29c10:	mov	r7, #0
   29c14:	cmp	r0, #0
   29c18:	bne	29c40 <flatcc_builder_append_vector@@Base+0xa0>
   29c1c:	ldr	r0, [r6, #16]
   29c20:	adds	r7, r0, r4
   29c24:	beq	29c3c <flatcc_builder_append_vector@@Base+0x9c>
   29c28:	mul	r2, r5, r9
   29c2c:	mov	r0, r7
   29c30:	mov	r1, r8
   29c34:	bl	12ab0 <memcpy@plt>
   29c38:	b	29c40 <flatcc_builder_append_vector@@Base+0xa0>
   29c3c:	mov	r7, #0
   29c40:	mov	r0, r7
   29c44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29c48:	movw	r0, #10101	; 0x2775
   29c4c:	movw	r1, #5830	; 0x16c6
   29c50:	movw	r3, #10128	; 0x2790
   29c54:	mov	r2, #892	; 0x37c
   29c58:	movt	r0, #3
   29c5c:	movt	r1, #3
   29c60:	movt	r3, #3
   29c64:	bl	12bc4 <__assert_fail@plt>
   29c68:	movw	r0, #6633	; 0x19e9
   29c6c:	movw	r1, #5830	; 0x16c6
   29c70:	movw	r3, #6805	; 0x1a95
   29c74:	movw	r2, #915	; 0x393
   29c78:	movt	r0, #3
   29c7c:	movt	r1, #3
   29c80:	movt	r3, #3
   29c84:	bl	12bc4 <__assert_fail@plt>

00029c88 <flatcc_builder_extend_offset_vector@@Base>:
   29c88:	push	{r4, r5, fp, lr}
   29c8c:	add	fp, sp, #8
   29c90:	mov	r4, r0
   29c94:	ldr	r0, [r0, #32]
   29c98:	ldr	r2, [r0, #20]
   29c9c:	adds	r2, r2, r1
   29ca0:	cmpcc	r2, #1073741824	; 0x40000000
   29ca4:	bcc	29cc8 <flatcc_builder_extend_offset_vector@@Base+0x40>
   29ca8:	movw	r0, #10101	; 0x2775
   29cac:	movw	r1, #5830	; 0x16c6
   29cb0:	movw	r3, #10128	; 0x2790
   29cb4:	mov	r2, #892	; 0x37c
   29cb8:	movt	r0, #3
   29cbc:	movt	r1, #3
   29cc0:	movt	r3, #3
   29cc4:	bl	12bc4 <__assert_fail@plt>
   29cc8:	str	r2, [r0, #20]
   29ccc:	ldr	r5, [r4, #20]
   29cd0:	ldr	r2, [r4, #24]
   29cd4:	add	r0, r5, r1, lsl #2
   29cd8:	cmp	r0, r2
   29cdc:	str	r0, [r4, #20]
   29ce0:	bcc	29d04 <flatcc_builder_extend_offset_vector@@Base+0x7c>
   29ce4:	add	r1, r0, #1
   29ce8:	mov	r0, r4
   29cec:	mvn	r2, #3
   29cf0:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29cf4:	mov	r1, r0
   29cf8:	mov	r0, #0
   29cfc:	cmp	r1, #0
   29d00:	popne	{r4, r5, fp, pc}
   29d04:	ldr	r0, [r4, #16]
   29d08:	add	r0, r0, r5
   29d0c:	pop	{r4, r5, fp, pc}

00029d10 <flatcc_builder_offset_vector_push@@Base>:
   29d10:	push	{r4, r5, r6, r7, fp, lr}
   29d14:	add	fp, sp, #16
   29d18:	mov	r6, r0
   29d1c:	ldr	r0, [r0, #32]
   29d20:	mov	r4, r1
   29d24:	ldrh	r1, [r0, #14]
   29d28:	cmp	r1, #5
   29d2c:	bne	29d90 <flatcc_builder_offset_vector_push@@Base+0x80>
   29d30:	ldr	r1, [r0, #20]
   29d34:	mov	r5, #0
   29d38:	cmn	r1, #-1073741823	; 0xc0000001
   29d3c:	beq	29d88 <flatcc_builder_offset_vector_push@@Base+0x78>
   29d40:	add	r1, r1, #1
   29d44:	str	r1, [r0, #20]
   29d48:	ldr	r7, [r6, #20]
   29d4c:	ldr	r0, [r6, #24]
   29d50:	add	r1, r7, #4
   29d54:	cmp	r1, r0
   29d58:	str	r1, [r6, #20]
   29d5c:	bcc	29d78 <flatcc_builder_offset_vector_push@@Base+0x68>
   29d60:	add	r1, r7, #5
   29d64:	mov	r0, r6
   29d68:	mvn	r2, #3
   29d6c:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29d70:	cmp	r0, #0
   29d74:	bne	29d88 <flatcc_builder_offset_vector_push@@Base+0x78>
   29d78:	ldr	r0, [r6, #16]
   29d7c:	adds	r0, r0, r7
   29d80:	movne	r5, r0
   29d84:	strne	r4, [r0]
   29d88:	mov	r0, r5
   29d8c:	pop	{r4, r5, r6, r7, fp, pc}
   29d90:	movw	r0, #6882	; 0x1ae2
   29d94:	movw	r1, #5830	; 0x16c6
   29d98:	movw	r3, #6933	; 0x1b15
   29d9c:	movw	r2, #934	; 0x3a6
   29da0:	movt	r0, #3
   29da4:	movt	r1, #3
   29da8:	movt	r3, #3
   29dac:	bl	12bc4 <__assert_fail@plt>

00029db0 <flatcc_builder_append_offset_vector@@Base>:
   29db0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29db4:	add	fp, sp, #24
   29db8:	mov	r6, r0
   29dbc:	ldr	r0, [r0, #32]
   29dc0:	mov	r8, r1
   29dc4:	ldrh	r1, [r0, #14]
   29dc8:	cmp	r1, #5
   29dcc:	bne	29e68 <flatcc_builder_append_offset_vector@@Base+0xb8>
   29dd0:	ldr	r1, [r0, #20]
   29dd4:	mov	r5, r2
   29dd8:	adds	r1, r1, r2
   29ddc:	cmpcc	r1, #1073741824	; 0x40000000
   29de0:	bcc	29e04 <flatcc_builder_append_offset_vector@@Base+0x54>
   29de4:	movw	r0, #10101	; 0x2775
   29de8:	movw	r1, #5830	; 0x16c6
   29dec:	movw	r3, #10128	; 0x2790
   29df0:	mov	r2, #892	; 0x37c
   29df4:	movt	r0, #3
   29df8:	movt	r1, #3
   29dfc:	movt	r3, #3
   29e00:	bl	12bc4 <__assert_fail@plt>
   29e04:	str	r1, [r0, #20]
   29e08:	ldr	r4, [r6, #20]
   29e0c:	ldr	r1, [r6, #24]
   29e10:	add	r0, r4, r5, lsl #2
   29e14:	cmp	r0, r1
   29e18:	str	r0, [r6, #20]
   29e1c:	bcc	29e3c <flatcc_builder_append_offset_vector@@Base+0x8c>
   29e20:	add	r1, r0, #1
   29e24:	mov	r0, r6
   29e28:	mvn	r2, #3
   29e2c:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29e30:	mov	r7, #0
   29e34:	cmp	r0, #0
   29e38:	bne	29e60 <flatcc_builder_append_offset_vector@@Base+0xb0>
   29e3c:	ldr	r0, [r6, #16]
   29e40:	adds	r7, r0, r4
   29e44:	beq	29e5c <flatcc_builder_append_offset_vector@@Base+0xac>
   29e48:	lsl	r2, r5, #2
   29e4c:	mov	r0, r7
   29e50:	mov	r1, r8
   29e54:	bl	12ab0 <memcpy@plt>
   29e58:	b	29e60 <flatcc_builder_append_offset_vector@@Base+0xb0>
   29e5c:	mov	r7, #0
   29e60:	mov	r0, r7
   29e64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29e68:	movw	r0, #6882	; 0x1ae2
   29e6c:	movw	r1, #5830	; 0x16c6
   29e70:	movw	r3, #7031	; 0x1b77
   29e74:	mov	r2, #948	; 0x3b4
   29e78:	movt	r0, #3
   29e7c:	movt	r1, #3
   29e80:	movt	r3, #3
   29e84:	bl	12bc4 <__assert_fail@plt>

00029e88 <flatcc_builder_extend_string@@Base>:
   29e88:	push	{r4, r5, fp, lr}
   29e8c:	add	fp, sp, #8
   29e90:	mov	r4, r0
   29e94:	ldr	r0, [r0, #32]
   29e98:	ldrh	r2, [r0, #14]
   29e9c:	cmp	r2, #6
   29ea0:	bne	29ef8 <flatcc_builder_extend_string@@Base+0x70>
   29ea4:	ldr	r2, [r0, #20]
   29ea8:	adds	r2, r2, r1
   29eac:	bcs	29f18 <flatcc_builder_extend_string@@Base+0x90>
   29eb0:	str	r2, [r0, #20]
   29eb4:	ldr	r5, [r4, #20]
   29eb8:	ldr	r2, [r4, #24]
   29ebc:	add	r0, r5, r1
   29ec0:	cmp	r0, r2
   29ec4:	str	r0, [r4, #20]
   29ec8:	bcc	29eec <flatcc_builder_extend_string@@Base+0x64>
   29ecc:	add	r1, r0, #1
   29ed0:	mov	r0, r4
   29ed4:	mvn	r2, #3
   29ed8:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29edc:	mov	r1, r0
   29ee0:	mov	r0, #0
   29ee4:	cmp	r1, #0
   29ee8:	popne	{r4, r5, fp, pc}
   29eec:	ldr	r0, [r4, #16]
   29ef0:	add	r0, r0, r5
   29ef4:	pop	{r4, r5, fp, pc}
   29ef8:	movw	r0, #7147	; 0x1beb
   29efc:	movw	r1, #5830	; 0x16c6
   29f00:	movw	r3, #7191	; 0x1c17
   29f04:	movw	r2, #957	; 0x3bd
   29f08:	movt	r0, #3
   29f0c:	movt	r1, #3
   29f10:	movt	r3, #3
   29f14:	bl	12bc4 <__assert_fail@plt>
   29f18:	movw	r0, #10101	; 0x2775
   29f1c:	movw	r1, #5830	; 0x16c6
   29f20:	movw	r3, #10128	; 0x2790
   29f24:	mov	r2, #892	; 0x37c
   29f28:	movt	r0, #3
   29f2c:	movt	r1, #3
   29f30:	movt	r3, #3
   29f34:	bl	12bc4 <__assert_fail@plt>

00029f38 <flatcc_builder_append_string@@Base>:
   29f38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29f3c:	add	fp, sp, #24
   29f40:	mov	r6, r0
   29f44:	ldr	r0, [r0, #32]
   29f48:	mov	r8, r1
   29f4c:	ldrh	r1, [r0, #14]
   29f50:	cmp	r1, #6
   29f54:	bne	29fcc <flatcc_builder_append_string@@Base+0x94>
   29f58:	ldr	r1, [r0, #20]
   29f5c:	mov	r4, r2
   29f60:	adds	r1, r1, r2
   29f64:	bcs	29fec <flatcc_builder_append_string@@Base+0xb4>
   29f68:	str	r1, [r0, #20]
   29f6c:	ldr	r5, [r6, #20]
   29f70:	ldr	r1, [r6, #24]
   29f74:	add	r0, r5, r4
   29f78:	cmp	r0, r1
   29f7c:	str	r0, [r6, #20]
   29f80:	bcc	29fa0 <flatcc_builder_append_string@@Base+0x68>
   29f84:	add	r1, r0, #1
   29f88:	mov	r0, r6
   29f8c:	mvn	r2, #3
   29f90:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   29f94:	mov	r7, #0
   29f98:	cmp	r0, #0
   29f9c:	bne	29fc4 <flatcc_builder_append_string@@Base+0x8c>
   29fa0:	ldr	r0, [r6, #16]
   29fa4:	adds	r7, r0, r5
   29fa8:	beq	29fc0 <flatcc_builder_append_string@@Base+0x88>
   29fac:	mov	r0, r7
   29fb0:	mov	r1, r8
   29fb4:	mov	r2, r4
   29fb8:	bl	12ab0 <memcpy@plt>
   29fbc:	b	29fc4 <flatcc_builder_append_string@@Base+0x8c>
   29fc0:	mov	r7, #0
   29fc4:	mov	r0, r7
   29fc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29fcc:	movw	r0, #7147	; 0x1beb
   29fd0:	movw	r1, #5830	; 0x16c6
   29fd4:	movw	r3, #7254	; 0x1c56
   29fd8:	movw	r2, #966	; 0x3c6
   29fdc:	movt	r0, #3
   29fe0:	movt	r1, #3
   29fe4:	movt	r3, #3
   29fe8:	bl	12bc4 <__assert_fail@plt>
   29fec:	movw	r0, #10101	; 0x2775
   29ff0:	movw	r1, #5830	; 0x16c6
   29ff4:	movw	r3, #10128	; 0x2790
   29ff8:	mov	r2, #892	; 0x37c
   29ffc:	movt	r0, #3
   2a000:	movt	r1, #3
   2a004:	movt	r3, #3
   2a008:	bl	12bc4 <__assert_fail@plt>

0002a00c <flatcc_builder_append_string_str@@Base>:
   2a00c:	push	{r4, r5, fp, lr}
   2a010:	add	fp, sp, #8
   2a014:	mov	r5, r0
   2a018:	mov	r0, r1
   2a01c:	mov	r4, r1
   2a020:	bl	12b40 <strlen@plt>
   2a024:	mov	r2, r0
   2a028:	mov	r0, r5
   2a02c:	mov	r1, r4
   2a030:	pop	{r4, r5, fp, lr}
   2a034:	b	29f38 <flatcc_builder_append_string@@Base>

0002a038 <flatcc_builder_append_string_strn@@Base>:
   2a038:	push	{r4, r5, r6, sl, fp, lr}
   2a03c:	add	fp, sp, #16
   2a040:	mov	r6, r0
   2a044:	mov	r5, r1
   2a048:	mov	r0, r1
   2a04c:	mov	r1, #0
   2a050:	mov	r4, r2
   2a054:	bl	12b7c <memchr@plt>
   2a058:	cmp	r0, #0
   2a05c:	mov	r1, r5
   2a060:	subne	r4, r0, r5
   2a064:	mov	r0, r6
   2a068:	mov	r2, r4
   2a06c:	pop	{r4, r5, r6, sl, fp, lr}
   2a070:	b	29f38 <flatcc_builder_append_string@@Base>

0002a074 <flatcc_builder_truncate_vector@@Base>:
   2a074:	push	{fp, lr}
   2a078:	mov	fp, sp
   2a07c:	ldr	r2, [r0, #32]
   2a080:	ldrh	r3, [r2, #14]
   2a084:	cmp	r3, #4
   2a088:	bne	2a0d0 <flatcc_builder_truncate_vector@@Base+0x5c>
   2a08c:	ldr	r3, [r2, #20]
   2a090:	cmp	r3, r1
   2a094:	bcc	2a0f0 <flatcc_builder_truncate_vector@@Base+0x7c>
   2a098:	sub	r3, r3, r1
   2a09c:	str	r3, [r2, #20]
   2a0a0:	ldr	r2, [r0, #32]
   2a0a4:	ldr	r3, [r0, #20]
   2a0a8:	ldr	ip, [r0, #16]
   2a0ac:	ldr	r2, [r2, #16]
   2a0b0:	mls	r3, r2, r1, r3
   2a0b4:	mul	r2, r2, r1
   2a0b8:	mov	r1, #0
   2a0bc:	str	r3, [r0, #20]
   2a0c0:	add	r0, ip, r3
   2a0c4:	bl	12b64 <memset@plt>
   2a0c8:	mov	r0, #0
   2a0cc:	pop	{fp, pc}
   2a0d0:	movw	r0, #6633	; 0x19e9
   2a0d4:	movw	r1, #5830	; 0x16c6
   2a0d8:	movw	r3, #7331	; 0x1ca3
   2a0dc:	movw	r2, #985	; 0x3d9
   2a0e0:	movt	r0, #3
   2a0e4:	movt	r1, #3
   2a0e8:	movt	r3, #3
   2a0ec:	bl	12bc4 <__assert_fail@plt>
   2a0f0:	movw	r0, #7394	; 0x1ce2
   2a0f4:	movw	r1, #5830	; 0x16c6
   2a0f8:	movw	r3, #7331	; 0x1ca3
   2a0fc:	movw	r2, #986	; 0x3da
   2a100:	movt	r0, #3
   2a104:	movt	r1, #3
   2a108:	movt	r3, #3
   2a10c:	bl	12bc4 <__assert_fail@plt>

0002a110 <flatcc_builder_truncate_offset_vector@@Base>:
   2a110:	push	{fp, lr}
   2a114:	mov	fp, sp
   2a118:	ldr	r2, [r0, #32]
   2a11c:	ldrh	r3, [r2, #14]
   2a120:	cmp	r3, #5
   2a124:	bne	2a16c <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2a128:	ldr	r3, [r2, #20]
   2a12c:	cmp	r3, r1
   2a130:	bcc	2a18c <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2a134:	sub	r3, r3, r1
   2a138:	str	r3, [r2, #20]
   2a13c:	ldr	r2, [r0, #32]
   2a140:	ldr	r3, [r0, #20]
   2a144:	ldr	ip, [r0, #16]
   2a148:	ldr	r2, [r2, #16]
   2a14c:	mls	r3, r2, r1, r3
   2a150:	mul	r2, r2, r1
   2a154:	mov	r1, #0
   2a158:	str	r3, [r0, #20]
   2a15c:	add	r0, ip, r3
   2a160:	bl	12b64 <memset@plt>
   2a164:	mov	r0, #0
   2a168:	pop	{fp, pc}
   2a16c:	movw	r0, #6882	; 0x1ae2
   2a170:	movw	r1, #5830	; 0x16c6
   2a174:	movw	r3, #7430	; 0x1d06
   2a178:	movw	r2, #994	; 0x3e2
   2a17c:	movt	r0, #3
   2a180:	movt	r1, #3
   2a184:	movt	r3, #3
   2a188:	bl	12bc4 <__assert_fail@plt>
   2a18c:	movw	r0, #7500	; 0x1d4c
   2a190:	movw	r1, #5830	; 0x16c6
   2a194:	movw	r3, #7430	; 0x1d06
   2a198:	movw	r2, #995	; 0x3e3
   2a19c:	movt	r0, #3
   2a1a0:	movt	r1, #3
   2a1a4:	movt	r3, #3
   2a1a8:	bl	12bc4 <__assert_fail@plt>

0002a1ac <flatcc_builder_truncate_string@@Base>:
   2a1ac:	push	{fp, lr}
   2a1b0:	mov	fp, sp
   2a1b4:	mov	r2, r1
   2a1b8:	ldr	r1, [r0, #32]
   2a1bc:	ldrh	r3, [r1, #14]
   2a1c0:	cmp	r3, #6
   2a1c4:	bne	2a200 <flatcc_builder_truncate_string@@Base+0x54>
   2a1c8:	ldr	r3, [r1, #20]
   2a1cc:	cmp	r3, r2
   2a1d0:	bcc	2a220 <flatcc_builder_truncate_string@@Base+0x74>
   2a1d4:	sub	r3, r3, r2
   2a1d8:	str	r3, [r1, #20]
   2a1dc:	ldr	r3, [r0, #20]
   2a1e0:	ldr	r1, [r0, #16]
   2a1e4:	sub	r3, r3, r2
   2a1e8:	str	r3, [r0, #20]
   2a1ec:	add	r0, r1, r3
   2a1f0:	mov	r1, #0
   2a1f4:	bl	12b64 <memset@plt>
   2a1f8:	mov	r0, #0
   2a1fc:	pop	{fp, pc}
   2a200:	movw	r0, #7147	; 0x1beb
   2a204:	movw	r1, #5830	; 0x16c6
   2a208:	movw	r3, #7559	; 0x1d87
   2a20c:	movw	r2, #1003	; 0x3eb
   2a210:	movt	r0, #3
   2a214:	movt	r1, #3
   2a218:	movt	r3, #3
   2a21c:	bl	12bc4 <__assert_fail@plt>
   2a220:	movw	r0, #7622	; 0x1dc6
   2a224:	movw	r1, #5830	; 0x16c6
   2a228:	movw	r3, #7559	; 0x1d87
   2a22c:	mov	r2, #1004	; 0x3ec
   2a230:	movt	r0, #3
   2a234:	movt	r1, #3
   2a238:	movt	r3, #3
   2a23c:	bl	12bc4 <__assert_fail@plt>

0002a240 <flatcc_builder_start_vector@@Base>:
   2a240:	push	{r4, r5, r6, r7, fp, lr}
   2a244:	add	fp, sp, #16
   2a248:	mov	r7, #4
   2a24c:	cmp	r2, #4
   2a250:	mov	r6, r1
   2a254:	mov	r5, r3
   2a258:	mov	r4, r0
   2a25c:	movls	r2, r7
   2a260:	mov	r1, r2
   2a264:	bl	2964c <flatcc_builder_start_buffer@@Base+0xbc>
   2a268:	mov	r1, r0
   2a26c:	mvn	r0, #0
   2a270:	cmp	r1, #0
   2a274:	popne	{r4, r5, r6, r7, fp, pc}
   2a278:	ldr	r0, [r4, #32]
   2a27c:	str	r6, [r0, #16]
   2a280:	mov	r0, #0
   2a284:	ldr	r1, [r4, #32]
   2a288:	str	r0, [r1, #20]
   2a28c:	ldr	r1, [r4, #32]
   2a290:	str	r5, [r1, #24]
   2a294:	ldr	r1, [r4, #32]
   2a298:	strh	r7, [r1, #14]
   2a29c:	ldr	r2, [r4, #28]
   2a2a0:	ldr	r3, [r4, #60]	; 0x3c
   2a2a4:	ldr	r7, [r4, #64]	; 0x40
   2a2a8:	add	r3, r3, r2
   2a2ac:	sub	r2, r7, r2
   2a2b0:	str	r3, [r4, #16]
   2a2b4:	mvn	r3, #3
   2a2b8:	cmn	r2, #4
   2a2bc:	movcs	r2, r3
   2a2c0:	str	r2, [r4, #24]
   2a2c4:	str	r3, [r1, #4]
   2a2c8:	pop	{r4, r5, r6, r7, fp, pc}

0002a2cc <flatcc_builder_start_offset_vector@@Base>:
   2a2cc:	push	{r4, r5, fp, lr}
   2a2d0:	add	fp, sp, #8
   2a2d4:	mov	r1, #4
   2a2d8:	mov	r4, r0
   2a2dc:	mov	r5, #4
   2a2e0:	bl	2964c <flatcc_builder_start_buffer@@Base+0xbc>
   2a2e4:	mov	r1, r0
   2a2e8:	mvn	r0, #0
   2a2ec:	cmp	r1, #0
   2a2f0:	popne	{r4, r5, fp, pc}
   2a2f4:	ldr	r0, [r4, #32]
   2a2f8:	mov	r2, #5
   2a2fc:	str	r5, [r0, #16]
   2a300:	mov	r0, #0
   2a304:	ldr	r1, [r4, #32]
   2a308:	str	r0, [r1, #20]
   2a30c:	ldr	r1, [r4, #32]
   2a310:	strh	r2, [r1, #14]
   2a314:	ldr	r2, [r4, #28]
   2a318:	ldr	r3, [r4, #60]	; 0x3c
   2a31c:	ldr	r5, [r4, #64]	; 0x40
   2a320:	add	r3, r3, r2
   2a324:	sub	r2, r5, r2
   2a328:	str	r3, [r4, #16]
   2a32c:	mvn	r3, #3
   2a330:	cmn	r2, #4
   2a334:	movcs	r2, r3
   2a338:	str	r2, [r4, #24]
   2a33c:	str	r3, [r1, #4]
   2a340:	pop	{r4, r5, fp, pc}

0002a344 <flatcc_builder_create_offset_vector@@Base>:
   2a344:	push	{r4, r5, r6, sl, fp, lr}
   2a348:	add	fp, sp, #16
   2a34c:	mov	r6, r2
   2a350:	mov	r5, r1
   2a354:	mov	r4, r0
   2a358:	bl	2a2cc <flatcc_builder_start_offset_vector@@Base>
   2a35c:	cmp	r0, #0
   2a360:	beq	2a36c <flatcc_builder_create_offset_vector@@Base+0x28>
   2a364:	mov	r0, #0
   2a368:	pop	{r4, r5, r6, sl, fp, pc}
   2a36c:	mov	r0, r4
   2a370:	mov	r1, r6
   2a374:	bl	29c88 <flatcc_builder_extend_offset_vector@@Base>
   2a378:	cmp	r0, #0
   2a37c:	beq	2a364 <flatcc_builder_create_offset_vector@@Base+0x20>
   2a380:	lsl	r2, r6, #2
   2a384:	mov	r1, r5
   2a388:	bl	12ab0 <memcpy@plt>
   2a38c:	mov	r0, r4
   2a390:	pop	{r4, r5, r6, sl, fp, lr}
   2a394:	b	2a398 <flatcc_builder_end_offset_vector@@Base>

0002a398 <flatcc_builder_end_offset_vector@@Base>:
   2a398:	push	{r4, r5, fp, lr}
   2a39c:	add	fp, sp, #8
   2a3a0:	mov	r4, r0
   2a3a4:	ldr	r0, [r0, #32]
   2a3a8:	ldrh	r1, [r0, #14]
   2a3ac:	cmp	r1, #5
   2a3b0:	bne	2a450 <flatcc_builder_end_offset_vector@@Base+0xb8>
   2a3b4:	ldr	r2, [r0, #20]
   2a3b8:	ldr	r1, [r4, #16]
   2a3bc:	mov	r0, r4
   2a3c0:	mov	r3, #0
   2a3c4:	bl	2b3b8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2a3c8:	mov	r5, r0
   2a3cc:	cmp	r0, #0
   2a3d0:	beq	2a448 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2a3d4:	ldr	r0, [r4, #16]
   2a3d8:	ldr	r2, [r4, #20]
   2a3dc:	mov	r1, #0
   2a3e0:	bl	12b64 <memset@plt>
   2a3e4:	ldr	r0, [r4, #32]
   2a3e8:	ldr	r1, [r4, #60]	; 0x3c
   2a3ec:	ldr	ip, [r4, #64]	; 0x40
   2a3f0:	ldr	r3, [r0, #8]
   2a3f4:	str	r3, [r4, #20]
   2a3f8:	ldr	r3, [r0]
   2a3fc:	str	r3, [r4, #28]
   2a400:	add	r1, r1, r3
   2a404:	ldr	r2, [r0, #4]
   2a408:	str	r1, [r4, #16]
   2a40c:	sub	r1, ip, r3
   2a410:	cmp	r1, r2
   2a414:	movhi	r1, r2
   2a418:	str	r1, [r4, #24]
   2a41c:	ldrh	r1, [r4, #130]	; 0x82
   2a420:	ldrh	r2, [r4, #128]	; 0x80
   2a424:	cmp	r2, r1
   2a428:	strhcc	r1, [r4, #128]	; 0x80
   2a42c:	ldrh	r1, [r0, #12]
   2a430:	sub	r0, r0, #36	; 0x24
   2a434:	str	r0, [r4, #32]
   2a438:	strh	r1, [r4, #130]	; 0x82
   2a43c:	ldr	r0, [r4, #156]	; 0x9c
   2a440:	sub	r0, r0, #1
   2a444:	str	r0, [r4, #156]	; 0x9c
   2a448:	mov	r0, r5
   2a44c:	pop	{r4, r5, fp, pc}
   2a450:	movw	r0, #6882	; 0x1ae2
   2a454:	movw	r1, #5830	; 0x16c6
   2a458:	movw	r3, #8465	; 0x2111
   2a45c:	movw	r2, #1480	; 0x5c8
   2a460:	movt	r0, #3
   2a464:	movt	r1, #3
   2a468:	movt	r3, #3
   2a46c:	bl	12bc4 <__assert_fail@plt>

0002a470 <flatcc_builder_start_string@@Base>:
   2a470:	push	{r4, r5, fp, lr}
   2a474:	add	fp, sp, #8
   2a478:	mov	r1, #1
   2a47c:	mov	r4, r0
   2a480:	mov	r5, #1
   2a484:	bl	2964c <flatcc_builder_start_buffer@@Base+0xbc>
   2a488:	mov	r1, r0
   2a48c:	mvn	r0, #0
   2a490:	cmp	r1, #0
   2a494:	popne	{r4, r5, fp, pc}
   2a498:	ldr	r0, [r4, #32]
   2a49c:	mov	r2, #6
   2a4a0:	str	r5, [r0, #16]
   2a4a4:	mov	r0, #0
   2a4a8:	ldr	r1, [r4, #32]
   2a4ac:	str	r0, [r1, #20]
   2a4b0:	ldr	r1, [r4, #32]
   2a4b4:	strh	r2, [r1, #14]
   2a4b8:	ldr	r2, [r4, #28]
   2a4bc:	ldr	r3, [r4, #60]	; 0x3c
   2a4c0:	ldr	r5, [r4, #64]	; 0x40
   2a4c4:	add	r3, r3, r2
   2a4c8:	sub	r2, r5, r2
   2a4cc:	str	r3, [r4, #16]
   2a4d0:	mvn	r3, #3
   2a4d4:	cmn	r2, #4
   2a4d8:	movcs	r2, r3
   2a4dc:	str	r2, [r4, #24]
   2a4e0:	str	r3, [r1, #4]
   2a4e4:	pop	{r4, r5, fp, pc}

0002a4e8 <flatcc_builder_reserve_table@@Base>:
   2a4e8:	push	{r4, r5, r6, sl, fp, lr}
   2a4ec:	add	fp, sp, #16
   2a4f0:	sub	sp, sp, #8
   2a4f4:	cmn	r1, #1
   2a4f8:	ble	2a5cc <flatcc_builder_reserve_table@@Base+0xe4>
   2a4fc:	mov	r4, r0
   2a500:	ldr	r0, [r0, #32]
   2a504:	mov	r5, r1
   2a508:	ldr	r1, [r4, #56]	; 0x38
   2a50c:	ldrh	r2, [r0, #28]
   2a510:	ldr	r0, [r0, #16]
   2a514:	add	r6, r0, r2, lsl #1
   2a518:	add	r0, r6, r5, lsl #1
   2a51c:	add	r2, r0, #4
   2a520:	cmp	r2, r1
   2a524:	bls	2a54c <flatcc_builder_reserve_table@@Base+0x64>
   2a528:	ldr	r0, [r4, #40]	; 0x28
   2a52c:	ldr	ip, [r4, #48]	; 0x30
   2a530:	mov	r3, #0
   2a534:	add	r1, r4, #52	; 0x34
   2a538:	str	r3, [sp]
   2a53c:	mov	r3, #1
   2a540:	blx	ip
   2a544:	cmp	r0, #0
   2a548:	bne	2a5ec <flatcc_builder_reserve_table@@Base+0x104>
   2a54c:	ldr	r0, [r4, #52]	; 0x34
   2a550:	adds	r0, r0, r6
   2a554:	str	r0, [r4, #4]
   2a558:	beq	2a5c0 <flatcc_builder_reserve_table@@Base+0xd8>
   2a55c:	add	r0, r0, #4
   2a560:	lsl	r1, r5, #1
   2a564:	str	r0, [r4, #4]
   2a568:	ldr	r0, [r4, #32]
   2a56c:	ldr	r3, [r4, #80]	; 0x50
   2a570:	ldr	r5, [r0, #20]
   2a574:	orr	r0, r1, #1
   2a578:	add	r2, r5, r0
   2a57c:	cmp	r2, r3
   2a580:	bls	2a5a8 <flatcc_builder_reserve_table@@Base+0xc0>
   2a584:	ldr	r0, [r4, #40]	; 0x28
   2a588:	ldr	r6, [r4, #48]	; 0x30
   2a58c:	mov	r3, #3
   2a590:	add	r1, r4, #76	; 0x4c
   2a594:	str	r3, [sp]
   2a598:	mov	r3, #0
   2a59c:	blx	r6
   2a5a0:	cmp	r0, #0
   2a5a4:	bne	2a5ec <flatcc_builder_reserve_table@@Base+0x104>
   2a5a8:	ldr	r0, [r4, #76]	; 0x4c
   2a5ac:	adds	r0, r0, r5
   2a5b0:	str	r0, [r4]
   2a5b4:	mov	r0, #0
   2a5b8:	mvneq	r0, #0
   2a5bc:	b	2a5c4 <flatcc_builder_reserve_table@@Base+0xdc>
   2a5c0:	mvn	r0, #0
   2a5c4:	sub	sp, fp, #16
   2a5c8:	pop	{r4, r5, r6, sl, fp, pc}
   2a5cc:	movw	r0, #7721	; 0x1e29
   2a5d0:	movw	r1, #5830	; 0x16c6
   2a5d4:	movw	r3, #7656	; 0x1de8
   2a5d8:	movw	r2, #1065	; 0x429
   2a5dc:	movt	r0, #3
   2a5e0:	movt	r1, #3
   2a5e4:	movt	r3, #3
   2a5e8:	bl	12bc4 <__assert_fail@plt>
   2a5ec:	movw	r0, #10348	; 0x286c
   2a5f0:	movw	r1, #5830	; 0x16c6
   2a5f4:	movw	r3, #9894	; 0x26a6
   2a5f8:	mov	r2, #308	; 0x134
   2a5fc:	movt	r0, #3
   2a600:	movt	r1, #3
   2a604:	movt	r3, #3
   2a608:	bl	12bc4 <__assert_fail@plt>

0002a60c <flatcc_builder_start_table@@Base>:
   2a60c:	push	{r4, r5, r6, r7, fp, lr}
   2a610:	add	fp, sp, #16
   2a614:	sub	sp, sp, #8
   2a618:	mov	r6, r1
   2a61c:	mov	r1, #4
   2a620:	mov	r4, r0
   2a624:	bl	2964c <flatcc_builder_start_buffer@@Base+0xbc>
   2a628:	mvn	r5, #0
   2a62c:	cmp	r0, #0
   2a630:	beq	2a640 <flatcc_builder_start_table@@Base+0x34>
   2a634:	mov	r0, r5
   2a638:	sub	sp, fp, #16
   2a63c:	pop	{r4, r5, r6, r7, fp, pc}
   2a640:	mov	r1, r4
   2a644:	ldr	r2, [r4, #4]
   2a648:	ldr	r3, [r4, #32]
   2a64c:	ldr	r0, [r1, #52]!	; 0x34
   2a650:	sub	r0, r2, r0
   2a654:	str	r0, [r3, #16]
   2a658:	ldr	r0, [r4]
   2a65c:	ldr	r3, [r4, #76]	; 0x4c
   2a660:	ldr	r2, [r4, #32]
   2a664:	sub	r0, r0, r3
   2a668:	mov	r3, #0
   2a66c:	str	r0, [r2, #20]
   2a670:	ldr	r0, [r4, #12]
   2a674:	ldr	r2, [r4, #32]
   2a678:	str	r0, [r2, #24]
   2a67c:	ldr	r0, [r4, #32]
   2a680:	ldrh	r2, [r4, #8]
   2a684:	strh	r2, [r0, #28]
   2a688:	movw	r0, #15186	; 0x3b52
   2a68c:	strh	r3, [r4, #8]
   2a690:	mov	r2, #3
   2a694:	movt	r0, #12137	; 0x2f69
   2a698:	str	r0, [r4, #12]
   2a69c:	ldr	r0, [r4, #32]
   2a6a0:	strh	r2, [r0, #14]
   2a6a4:	ldrh	r2, [r0, #28]
   2a6a8:	ldr	r0, [r0, #16]
   2a6ac:	add	r7, r0, r2, lsl #1
   2a6b0:	add	r0, r7, r6, lsl #1
   2a6b4:	add	r2, r0, #4
   2a6b8:	ldr	r0, [r4, #56]	; 0x38
   2a6bc:	cmp	r2, r0
   2a6c0:	bls	2a6e0 <flatcc_builder_start_table@@Base+0xd4>
   2a6c4:	ldr	r0, [r4, #40]	; 0x28
   2a6c8:	ldr	ip, [r4, #48]	; 0x30
   2a6cc:	str	r3, [sp]
   2a6d0:	mov	r3, #1
   2a6d4:	blx	ip
   2a6d8:	cmp	r0, #0
   2a6dc:	bne	2a784 <flatcc_builder_start_table@@Base+0x178>
   2a6e0:	ldr	r0, [r4, #52]	; 0x34
   2a6e4:	adds	r0, r0, r7
   2a6e8:	str	r0, [r4, #4]
   2a6ec:	beq	2a634 <flatcc_builder_start_table@@Base+0x28>
   2a6f0:	add	r0, r0, #4
   2a6f4:	lsl	r1, r6, #1
   2a6f8:	str	r0, [r4, #4]
   2a6fc:	ldr	r0, [r4, #32]
   2a700:	ldr	r3, [r4, #80]	; 0x50
   2a704:	ldr	r6, [r0, #20]
   2a708:	orr	r0, r1, #1
   2a70c:	add	r2, r6, r0
   2a710:	cmp	r2, r3
   2a714:	bls	2a73c <flatcc_builder_start_table@@Base+0x130>
   2a718:	ldr	r0, [r4, #40]	; 0x28
   2a71c:	ldr	r7, [r4, #48]	; 0x30
   2a720:	mov	r3, #3
   2a724:	add	r1, r4, #76	; 0x4c
   2a728:	str	r3, [sp]
   2a72c:	mov	r3, #0
   2a730:	blx	r7
   2a734:	cmp	r0, #0
   2a738:	bne	2a784 <flatcc_builder_start_table@@Base+0x178>
   2a73c:	ldr	r0, [r4, #76]	; 0x4c
   2a740:	adds	r0, r0, r6
   2a744:	str	r0, [r4]
   2a748:	beq	2a634 <flatcc_builder_start_table@@Base+0x28>
   2a74c:	ldr	r0, [r4, #28]
   2a750:	ldr	r2, [r4, #60]	; 0x3c
   2a754:	ldr	r3, [r4, #64]	; 0x40
   2a758:	ldr	r1, [r4, #32]
   2a75c:	mov	r5, #0
   2a760:	add	r2, r2, r0
   2a764:	sub	r0, r3, r0
   2a768:	str	r2, [r4, #16]
   2a76c:	movw	r2, #65532	; 0xfffc
   2a770:	cmp	r0, r2
   2a774:	movcs	r0, r2
   2a778:	str	r0, [r4, #24]
   2a77c:	str	r2, [r1, #4]
   2a780:	b	2a634 <flatcc_builder_start_table@@Base+0x28>
   2a784:	movw	r0, #10348	; 0x286c
   2a788:	movw	r1, #5830	; 0x16c6
   2a78c:	movw	r3, #9894	; 0x26a6
   2a790:	mov	r2, #308	; 0x134
   2a794:	movt	r0, #3
   2a798:	movt	r1, #3
   2a79c:	movt	r3, #3
   2a7a0:	bl	12bc4 <__assert_fail@plt>

0002a7a4 <flatcc_builder_create_vtable@@Base>:
   2a7a4:	push	{r4, r5, fp, lr}
   2a7a8:	add	fp, sp, #8
   2a7ac:	sub	sp, sp, #80	; 0x50
   2a7b0:	mov	r3, r2
   2a7b4:	mov	r2, #0
   2a7b8:	mov	r4, r0
   2a7bc:	cmp	r3, #0
   2a7c0:	str	r2, [sp, #12]
   2a7c4:	str	r2, [sp, #8]
   2a7c8:	movne	r2, #1
   2a7cc:	strne	r1, [sp, #16]
   2a7d0:	strne	r3, [sp, #8]
   2a7d4:	strne	r3, [sp, #20]
   2a7d8:	strne	r2, [sp, #12]
   2a7dc:	ldr	r0, [r4, #152]	; 0x98
   2a7e0:	cmp	r0, #0
   2a7e4:	bne	2a7f4 <flatcc_builder_create_vtable@@Base+0x50>
   2a7e8:	ldr	r0, [r4, #180]	; 0xb4
   2a7ec:	cmp	r0, #0
   2a7f0:	beq	2a844 <flatcc_builder_create_vtable@@Base+0xa0>
   2a7f4:	cmp	r3, #0
   2a7f8:	beq	2a884 <flatcc_builder_create_vtable@@Base+0xe0>
   2a7fc:	ldr	r0, [r4, #136]	; 0x88
   2a800:	ldr	ip, [r4, #44]	; 0x2c
   2a804:	add	r1, sp, #8
   2a808:	add	r1, r1, #8
   2a80c:	sub	r5, r0, r3
   2a810:	ldr	r0, [r4, #36]	; 0x24
   2a814:	str	r3, [sp]
   2a818:	mov	r3, r5
   2a81c:	blx	ip
   2a820:	cmp	r0, #0
   2a824:	bne	2a8a4 <flatcc_builder_create_vtable@@Base+0x100>
   2a828:	cmp	r5, #0
   2a82c:	str	r5, [r4, #136]	; 0x88
   2a830:	beq	2a83c <flatcc_builder_create_vtable@@Base+0x98>
   2a834:	add	r0, r5, #1
   2a838:	b	2a87c <flatcc_builder_create_vtable@@Base+0xd8>
   2a83c:	mov	r0, #0
   2a840:	b	2a87c <flatcc_builder_create_vtable@@Base+0xd8>
   2a844:	ldr	r5, [r4, #140]	; 0x8c
   2a848:	ldr	r0, [r4, #36]	; 0x24
   2a84c:	ldr	ip, [r4, #44]	; 0x2c
   2a850:	add	r1, r5, r3
   2a854:	str	r1, [r4, #140]	; 0x8c
   2a858:	add	r1, sp, #8
   2a85c:	str	r3, [sp]
   2a860:	mov	r3, r5
   2a864:	add	r1, r1, #8
   2a868:	blx	ip
   2a86c:	cmp	r0, #0
   2a870:	bne	2a8c4 <flatcc_builder_create_vtable@@Base+0x120>
   2a874:	adds	r0, r5, #1
   2a878:	moveq	r0, #0
   2a87c:	sub	sp, fp, #8
   2a880:	pop	{r4, r5, fp, pc}
   2a884:	movw	r0, #10348	; 0x286c
   2a888:	movw	r1, #5830	; 0x16c6
   2a88c:	movw	r3, #10027	; 0x272b
   2a890:	movw	r2, #647	; 0x287
   2a894:	movt	r0, #3
   2a898:	movt	r1, #3
   2a89c:	movt	r3, #3
   2a8a0:	bl	12bc4 <__assert_fail@plt>
   2a8a4:	movw	r0, #10348	; 0x286c
   2a8a8:	movw	r1, #5830	; 0x16c6
   2a8ac:	movw	r3, #10027	; 0x272b
   2a8b0:	movw	r2, #651	; 0x28b
   2a8b4:	movt	r0, #3
   2a8b8:	movt	r1, #3
   2a8bc:	movt	r3, #3
   2a8c0:	bl	12bc4 <__assert_fail@plt>
   2a8c4:	movw	r0, #10348	; 0x286c
   2a8c8:	movw	r1, #5830	; 0x16c6
   2a8cc:	movw	r3, #10215	; 0x27e7
   2a8d0:	movw	r2, #677	; 0x2a5
   2a8d4:	movt	r0, #3
   2a8d8:	movt	r1, #3
   2a8dc:	movt	r3, #3
   2a8e0:	bl	12bc4 <__assert_fail@plt>

0002a8e4 <flatcc_builder_create_cached_vtable@@Base>:
   2a8e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a8e8:	add	fp, sp, #28
   2a8ec:	sub	sp, sp, #20
   2a8f0:	mov	sl, r0
   2a8f4:	ldr	r0, [r0, #116]	; 0x74
   2a8f8:	mov	r8, r3
   2a8fc:	mov	r5, r2
   2a900:	str	r1, [sp, #16]
   2a904:	cmp	r0, #0
   2a908:	beq	2a9ac <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2a90c:	ldr	r1, [sl, #92]	; 0x5c
   2a910:	rsb	r0, r0, #32
   2a914:	lsr	r0, r8, r0
   2a918:	add	r6, r1, r0, lsl #2
   2a91c:	cmp	r6, #0
   2a920:	beq	2aa70 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2a924:	ldr	r7, [r6]
   2a928:	str	r6, [sp, #12]
   2a92c:	cmp	r7, #0
   2a930:	beq	2aa78 <flatcc_builder_create_cached_vtable@@Base+0x194>
   2a934:	ldr	r4, [sl, #68]	; 0x44
   2a938:	ldr	r8, [sl, #100]	; 0x64
   2a93c:	mov	r0, #0
   2a940:	str	r0, [sp, #8]
   2a944:	add	r9, r8, r7
   2a948:	mov	r1, r4
   2a94c:	ldr	r0, [r9, #8]
   2a950:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2a954:	cmp	r0, r5
   2a958:	bne	2a970 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2a95c:	ldr	r0, [sp, #16]
   2a960:	mov	r2, r5
   2a964:	bl	12ac8 <memcmp@plt>
   2a968:	cmp	r0, #0
   2a96c:	beq	2a984 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2a970:	ldr	r7, [r9, #12]!
   2a974:	cmp	r7, #0
   2a978:	mov	r6, r9
   2a97c:	bne	2a944 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2a980:	b	2aa68 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2a984:	ldr	r0, [sl, #152]	; 0x98
   2a988:	ldr	r1, [r9, #4]
   2a98c:	cmp	r1, r0
   2a990:	beq	2abdc <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2a994:	mov	r6, r9
   2a998:	mov	r0, r9
   2a99c:	ldr	r7, [r6, #12]!
   2a9a0:	cmp	r7, #0
   2a9a4:	bne	2a940 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2a9a8:	b	2aa7c <flatcc_builder_create_cached_vtable@@Base+0x198>
   2a9ac:	ldr	r0, [sl, #124]	; 0x7c
   2a9b0:	cmp	r0, #0
   2a9b4:	bne	2ac28 <flatcc_builder_create_cached_vtable@@Base+0x344>
   2a9b8:	ldr	r0, [sl, #104]	; 0x68
   2a9bc:	add	r7, sl, #100	; 0x64
   2a9c0:	cmp	r0, #15
   2a9c4:	bhi	2a9f0 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2a9c8:	ldr	r0, [sl, #40]	; 0x28
   2a9cc:	ldr	r6, [sl, #48]	; 0x30
   2a9d0:	mov	r1, #6
   2a9d4:	mov	r2, #16
   2a9d8:	mov	r3, #0
   2a9dc:	str	r1, [sp]
   2a9e0:	mov	r1, r7
   2a9e4:	blx	r6
   2a9e8:	cmp	r0, #0
   2a9ec:	bne	2ac08 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2a9f0:	ldr	r0, [r7]
   2a9f4:	mov	r7, #0
   2a9f8:	cmp	r0, #0
   2a9fc:	beq	2ab1c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2aa00:	mov	r0, #16
   2aa04:	mov	r2, #5
   2aa08:	add	r1, sl, #92	; 0x5c
   2aa0c:	mov	r3, #1
   2aa10:	mov	r4, #256	; 0x100
   2aa14:	str	r0, [sl, #124]	; 0x7c
   2aa18:	ldr	r0, [sl, #40]	; 0x28
   2aa1c:	ldr	r6, [sl, #48]	; 0x30
   2aa20:	str	r2, [sp]
   2aa24:	mov	r2, #256	; 0x100
   2aa28:	blx	r6
   2aa2c:	cmp	r0, #0
   2aa30:	bne	2ab1c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2aa34:	ldr	r0, [sl, #96]	; 0x60
   2aa38:	mov	r1, r4
   2aa3c:	lsl	r4, r4, #1
   2aa40:	cmp	r0, r1, lsl #1
   2aa44:	bcs	2aa38 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2aa48:	lsr	r1, r1, #2
   2aa4c:	mvn	r0, #0
   2aa50:	mov	r2, #1
   2aa54:	add	r0, r0, #1
   2aa58:	cmp	r1, r2, lsl r0
   2aa5c:	bhi	2aa54 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2aa60:	str	r0, [sl, #116]	; 0x74
   2aa64:	b	2a90c <flatcc_builder_create_cached_vtable@@Base+0x28>
   2aa68:	ldr	r9, [sp, #8]
   2aa6c:	b	2aa7c <flatcc_builder_create_cached_vtable@@Base+0x198>
   2aa70:	mov	r7, #0
   2aa74:	b	2ab1c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2aa78:	mov	r9, #0
   2aa7c:	ldr	r4, [sl, #124]	; 0x7c
   2aa80:	ldr	r0, [sl, #104]	; 0x68
   2aa84:	add	r7, sl, #100	; 0x64
   2aa88:	add	r2, r4, #16
   2aa8c:	cmp	r2, r0
   2aa90:	bls	2aab8 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2aa94:	ldr	r0, [sl, #40]	; 0x28
   2aa98:	ldr	r6, [sl, #48]	; 0x30
   2aa9c:	mov	r1, #6
   2aaa0:	mov	r3, #0
   2aaa4:	str	r1, [sp]
   2aaa8:	mov	r1, r7
   2aaac:	blx	r6
   2aab0:	cmp	r0, #0
   2aab4:	bne	2ac08 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2aab8:	ldr	r0, [r7]
   2aabc:	mov	r7, #0
   2aac0:	adds	r4, r0, r4
   2aac4:	beq	2ab1c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2aac8:	ldr	r0, [sl, #124]	; 0x7c
   2aacc:	ldr	r1, [sl, #152]	; 0x98
   2aad0:	add	r2, r0, #16
   2aad4:	str	r2, [sl, #124]	; 0x7c
   2aad8:	ldr	r2, [sp, #12]
   2aadc:	str	r1, [r4, #4]
   2aae0:	ldr	r1, [r2]
   2aae4:	str	r1, [r4, #12]
   2aae8:	ldr	r1, [sp, #16]
   2aaec:	str	r0, [r2]
   2aaf0:	mov	r0, sl
   2aaf4:	mov	r2, r5
   2aaf8:	bl	2a7a4 <flatcc_builder_create_vtable@@Base>
   2aafc:	cmp	r0, #0
   2ab00:	str	r0, [r4]
   2ab04:	beq	2ab1c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2ab08:	cmp	r9, #0
   2ab0c:	beq	2ab28 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2ab10:	ldr	r0, [r9, #8]
   2ab14:	str	r0, [r4, #8]
   2ab18:	ldr	r7, [r4]
   2ab1c:	mov	r0, r7
   2ab20:	sub	sp, fp, #28
   2ab24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ab28:	ldr	r6, [sl, #120]	; 0x78
   2ab2c:	ldr	r0, [sl, #172]	; 0xac
   2ab30:	add	r2, r6, r5
   2ab34:	cmp	r0, #0
   2ab38:	beq	2ab74 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2ab3c:	cmp	r0, r2
   2ab40:	bcs	2ab74 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2ab44:	ldr	r0, [sl, #116]	; 0x74
   2ab48:	cmp	r0, #0
   2ab4c:	beq	2ab18 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2ab50:	ldr	r0, [sl, #92]	; 0x5c
   2ab54:	ldr	r2, [sl, #96]	; 0x60
   2ab58:	mov	r1, #0
   2ab5c:	mov	r5, #0
   2ab60:	bl	12b64 <memset@plt>
   2ab64:	mov	r0, #16
   2ab68:	str	r5, [sl, #120]	; 0x78
   2ab6c:	str	r0, [sl, #124]	; 0x7c
   2ab70:	b	2ab18 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2ab74:	ldr	r0, [sl, #72]	; 0x48
   2ab78:	add	r7, sl, #68	; 0x44
   2ab7c:	cmp	r2, r0
   2ab80:	bls	2aba8 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2ab84:	ldr	r0, [sl, #40]	; 0x28
   2ab88:	ldr	ip, [sl, #48]	; 0x30
   2ab8c:	mov	r1, #2
   2ab90:	mov	r3, #0
   2ab94:	str	r1, [sp]
   2ab98:	mov	r1, r7
   2ab9c:	blx	ip
   2aba0:	cmp	r0, #0
   2aba4:	bne	2ac08 <flatcc_builder_create_cached_vtable@@Base+0x324>
   2aba8:	ldr	r0, [r7]
   2abac:	adds	r0, r0, r6
   2abb0:	beq	2abd4 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2abb4:	ldr	r1, [sl, #120]	; 0x78
   2abb8:	mov	r2, r5
   2abbc:	str	r1, [r4, #8]
   2abc0:	add	r1, r1, r5
   2abc4:	str	r1, [sl, #120]	; 0x78
   2abc8:	ldr	r1, [sp, #16]
   2abcc:	bl	12ab0 <memcpy@plt>
   2abd0:	b	2ab18 <flatcc_builder_create_cached_vtable@@Base+0x234>
   2abd4:	mvn	r7, #0
   2abd8:	b	2ab1c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2abdc:	ldr	r0, [sp, #12]
   2abe0:	cmp	r6, r0
   2abe4:	beq	2ac00 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2abe8:	mov	r1, r0
   2abec:	ldr	r0, [r9, #12]
   2abf0:	str	r0, [r6]
   2abf4:	ldr	r0, [r1]
   2abf8:	str	r0, [r9, #12]
   2abfc:	str	r7, [r1]
   2ac00:	ldr	r7, [r9]
   2ac04:	b	2ab1c <flatcc_builder_create_cached_vtable@@Base+0x238>
   2ac08:	movw	r0, #10348	; 0x286c
   2ac0c:	movw	r1, #5830	; 0x16c6
   2ac10:	movw	r3, #9894	; 0x26a6
   2ac14:	mov	r2, #308	; 0x134
   2ac18:	movt	r0, #3
   2ac1c:	movt	r1, #3
   2ac20:	movt	r3, #3
   2ac24:	bl	12bc4 <__assert_fail@plt>
   2ac28:	movw	r0, #10288	; 0x2830
   2ac2c:	movw	r1, #5830	; 0x16c6
   2ac30:	movw	r3, #10303	; 0x283f
   2ac34:	movw	r2, #342	; 0x156
   2ac38:	movt	r0, #3
   2ac3c:	movt	r1, #3
   2ac40:	movt	r3, #3
   2ac44:	bl	12bc4 <__assert_fail@plt>

0002ac48 <flatcc_builder_create_table@@Base>:
   2ac48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ac4c:	add	fp, sp, #24
   2ac50:	sub	sp, sp, #80	; 0x50
   2ac54:	ldr	r5, [fp, #12]
   2ac58:	cmn	r5, #1
   2ac5c:	ble	2adb0 <flatcc_builder_create_table@@Base+0x168>
   2ac60:	ldr	ip, [fp, #16]
   2ac64:	tst	ip, #1
   2ac68:	beq	2add0 <flatcc_builder_create_table@@Base+0x188>
   2ac6c:	mov	r8, r0
   2ac70:	ldrh	r0, [r0, #128]	; 0x80
   2ac74:	cmp	r3, #4
   2ac78:	movls	r3, #4
   2ac7c:	cmp	r0, r3
   2ac80:	strhcc	r3, [r8, #128]	; 0x80
   2ac84:	sub	r3, r3, #1
   2ac88:	cmp	r5, #1
   2ac8c:	ldr	r4, [r8, #136]	; 0x88
   2ac90:	sub	r0, r4, r2
   2ac94:	and	r0, r0, r3
   2ac98:	add	r3, ip, r0
   2ac9c:	mvn	ip, #3
   2aca0:	sub	r6, ip, r2
   2aca4:	add	r4, r6, r4
   2aca8:	add	r6, r4, #1
   2acac:	sub	r3, r6, r3
   2acb0:	str	r3, [fp, #-28]	; 0xffffffe4
   2acb4:	blt	2ace0 <flatcc_builder_create_table@@Base+0x98>
   2acb8:	ldr	r3, [fp, #8]
   2acbc:	sub	r6, r4, r0
   2acc0:	sub	r4, ip, r6
   2acc4:	ldrh	r6, [r3], #2
   2acc8:	subs	r5, r5, #1
   2accc:	ldr	r7, [r6, r1]
   2acd0:	add	r7, r4, r7
   2acd4:	sub	r7, r7, r6
   2acd8:	str	r7, [r6, r1]
   2acdc:	bne	2acc4 <flatcc_builder_create_table@@Base+0x7c>
   2ace0:	sub	r3, fp, #28
   2ace4:	mov	r4, #4
   2ace8:	cmp	r2, #0
   2acec:	str	r3, [sp, #12]
   2acf0:	mov	r3, #1
   2acf4:	str	r4, [sp, #4]
   2acf8:	str	r4, [sp, #16]
   2acfc:	str	r3, [sp, #8]
   2ad00:	beq	2ad1c <flatcc_builder_create_table@@Base+0xd4>
   2ad04:	mov	r3, #2
   2ad08:	add	r4, r2, #4
   2ad0c:	str	r1, [sp, #20]
   2ad10:	str	r2, [sp, #24]
   2ad14:	str	r3, [sp, #8]
   2ad18:	str	r4, [sp, #4]
   2ad1c:	cmp	r0, #0
   2ad20:	beq	2ad4c <flatcc_builder_create_table@@Base+0x104>
   2ad24:	add	r1, sp, #4
   2ad28:	movw	r2, #5300	; 0x14b4
   2ad2c:	add	r4, r4, r0
   2ad30:	add	r1, r1, r3, lsl #3
   2ad34:	add	r3, r3, #1
   2ad38:	movt	r2, #3
   2ad3c:	str	r4, [sp, #4]
   2ad40:	str	r2, [r1, #8]
   2ad44:	str	r0, [r1, #12]
   2ad48:	str	r3, [sp, #8]
   2ad4c:	cmp	r4, #0
   2ad50:	ble	2adf0 <flatcc_builder_create_table@@Base+0x1a8>
   2ad54:	ldr	r0, [r8, #136]	; 0x88
   2ad58:	ldr	r7, [r8, #44]	; 0x2c
   2ad5c:	add	r1, sp, #4
   2ad60:	mov	r2, r3
   2ad64:	add	r1, r1, #8
   2ad68:	sub	r5, r0, r4
   2ad6c:	ldr	r0, [r8, #36]	; 0x24
   2ad70:	str	r4, [sp]
   2ad74:	mov	r3, r5
   2ad78:	blx	r7
   2ad7c:	cmp	r0, #0
   2ad80:	streq	r5, [r8, #136]	; 0x88
   2ad84:	moveq	r0, r5
   2ad88:	subeq	sp, fp, #24
   2ad8c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ad90:	movw	r0, #10348	; 0x286c
   2ad94:	movw	r1, #5830	; 0x16c6
   2ad98:	movw	r3, #10027	; 0x272b
   2ad9c:	movw	r2, #651	; 0x28b
   2ada0:	movt	r0, #3
   2ada4:	movt	r1, #3
   2ada8:	movt	r3, #3
   2adac:	bl	12bc4 <__assert_fail@plt>
   2adb0:	movw	r0, #7714	; 0x1e22
   2adb4:	movw	r1, #5830	; 0x16c6
   2adb8:	movw	r3, #7732	; 0x1e34
   2adbc:	movw	r2, #1237	; 0x4d5
   2adc0:	movt	r0, #3
   2adc4:	movt	r1, #3
   2adc8:	movt	r3, #3
   2adcc:	bl	12bc4 <__assert_fail@plt>
   2add0:	movw	r0, #7888	; 0x1ed0
   2add4:	movw	r1, #5830	; 0x16c6
   2add8:	movw	r3, #7732	; 0x1e34
   2addc:	movw	r2, #1243	; 0x4db
   2ade0:	movt	r0, #3
   2ade4:	movt	r1, #3
   2ade8:	movt	r3, #3
   2adec:	bl	12bc4 <__assert_fail@plt>
   2adf0:	movw	r0, #10348	; 0x286c
   2adf4:	movw	r1, #5830	; 0x16c6
   2adf8:	movw	r3, #10027	; 0x272b
   2adfc:	movw	r2, #647	; 0x287
   2ae00:	movt	r0, #3
   2ae04:	movt	r1, #3
   2ae08:	movt	r3, #3
   2ae0c:	bl	12bc4 <__assert_fail@plt>

0002ae10 <flatcc_builder_check_required_field@@Base>:
   2ae10:	ldr	r2, [r0, #32]
   2ae14:	ldrh	r2, [r2, #14]
   2ae18:	cmp	r2, #3
   2ae1c:	bne	2ae4c <flatcc_builder_check_required_field@@Base+0x3c>
   2ae20:	ldrh	r3, [r0, #8]
   2ae24:	mov	r2, #0
   2ae28:	cmp	r3, r1
   2ae2c:	bls	2ae44 <flatcc_builder_check_required_field@@Base+0x34>
   2ae30:	ldr	r0, [r0, #4]
   2ae34:	add	r0, r0, r1, lsl #1
   2ae38:	ldrh	r2, [r0]
   2ae3c:	cmp	r2, #0
   2ae40:	movwne	r2, #1
   2ae44:	mov	r0, r2
   2ae48:	bx	lr
   2ae4c:	push	{fp, lr}
   2ae50:	mov	fp, sp
   2ae54:	movw	r0, #7899	; 0x1edb
   2ae58:	movw	r1, #5830	; 0x16c6
   2ae5c:	movw	r3, #7942	; 0x1f06
   2ae60:	movw	r2, #1272	; 0x4f8
   2ae64:	movt	r0, #3
   2ae68:	movt	r1, #3
   2ae6c:	movt	r3, #3
   2ae70:	bl	12bc4 <__assert_fail@plt>

0002ae74 <flatcc_builder_check_union_field@@Base>:
   2ae74:	mov	r2, r0
   2ae78:	ldr	r0, [r0, #32]
   2ae7c:	ldrh	r0, [r0, #14]
   2ae80:	cmp	r0, #3
   2ae84:	bne	2aee4 <flatcc_builder_check_union_field@@Base+0x70>
   2ae88:	cmp	r1, #0
   2ae8c:	mov	r0, #0
   2ae90:	ldrhne	r3, [r2, #8]
   2ae94:	cmpne	r3, r1
   2ae98:	bhi	2aea0 <flatcc_builder_check_union_field@@Base+0x2c>
   2ae9c:	bx	lr
   2aea0:	ldr	r0, [r2, #4]
   2aea4:	add	r0, r0, r1, lsl #1
   2aea8:	ldrh	r1, [r0, #-2]
   2aeac:	cmp	r1, #0
   2aeb0:	beq	2aed4 <flatcc_builder_check_union_field@@Base+0x60>
   2aeb4:	ldr	r2, [r2, #16]
   2aeb8:	ldrh	r0, [r0]
   2aebc:	ldrb	r1, [r2, r1]
   2aec0:	cmp	r1, #0
   2aec4:	beq	2aed8 <flatcc_builder_check_union_field@@Base+0x64>
   2aec8:	cmp	r0, #0
   2aecc:	movwne	r0, #1
   2aed0:	bx	lr
   2aed4:	ldrh	r0, [r0]
   2aed8:	clz	r0, r0
   2aedc:	lsr	r0, r0, #5
   2aee0:	bx	lr
   2aee4:	push	{fp, lr}
   2aee8:	mov	fp, sp
   2aeec:	movw	r0, #7899	; 0x1edb
   2aef0:	movw	r1, #5830	; 0x16c6
   2aef4:	movw	r3, #8025	; 0x1f59
   2aef8:	movw	r2, #1279	; 0x4ff
   2aefc:	movt	r0, #3
   2af00:	movt	r1, #3
   2af04:	movt	r3, #3
   2af08:	bl	12bc4 <__assert_fail@plt>

0002af0c <flatcc_builder_check_required@@Base>:
   2af0c:	push	{fp, lr}
   2af10:	mov	fp, sp
   2af14:	mov	r3, r0
   2af18:	ldr	r0, [r0, #32]
   2af1c:	ldrh	r0, [r0, #14]
   2af20:	cmp	r0, #3
   2af24:	bne	2af7c <flatcc_builder_check_required@@Base+0x70>
   2af28:	ldrh	ip, [r3, #8]
   2af2c:	mov	r0, #0
   2af30:	cmp	ip, r2
   2af34:	movge	r0, #1
   2af38:	cmpge	r2, #1
   2af3c:	bge	2af44 <flatcc_builder_check_required@@Base+0x38>
   2af40:	pop	{fp, pc}
   2af44:	ldr	ip, [r3, #4]
   2af48:	mov	lr, #0
   2af4c:	b	2af60 <flatcc_builder_check_required@@Base+0x54>
   2af50:	add	lr, lr, #1
   2af54:	add	r1, r1, #2
   2af58:	cmp	lr, r2
   2af5c:	popge	{fp, pc}
   2af60:	ldrh	r3, [r1]
   2af64:	add	r3, ip, r3, lsl #1
   2af68:	ldrh	r3, [r3]
   2af6c:	cmp	r3, #0
   2af70:	bne	2af50 <flatcc_builder_check_required@@Base+0x44>
   2af74:	mov	r0, #0
   2af78:	pop	{fp, pc}
   2af7c:	movw	r0, #7899	; 0x1edb
   2af80:	movw	r1, #5830	; 0x16c6
   2af84:	movw	r3, #8105	; 0x1fa9
   2af88:	movw	r2, #1297	; 0x511
   2af8c:	movt	r0, #3
   2af90:	movt	r1, #3
   2af94:	movt	r3, #3
   2af98:	bl	12bc4 <__assert_fail@plt>

0002af9c <flatcc_builder_end_table@@Base>:
   2af9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2afa0:	add	fp, sp, #24
   2afa4:	sub	sp, sp, #16
   2afa8:	mov	r4, r0
   2afac:	ldr	r0, [r0, #32]
   2afb0:	ldrh	r0, [r0, #14]
   2afb4:	cmp	r0, #3
   2afb8:	bne	2b134 <flatcc_builder_end_table@@Base+0x198>
   2afbc:	ldrh	r0, [r4, #8]
   2afc0:	ldr	r5, [r4, #4]
   2afc4:	mov	r1, #4
   2afc8:	movw	r2, #31153	; 0x79b1
   2afcc:	movt	r2, #40503	; 0x9e37
   2afd0:	add	r0, r1, r0, lsl #1
   2afd4:	strh	r0, [r5, #-4]!
   2afd8:	ldrh	r1, [r4, #20]
   2afdc:	uxth	r6, r0
   2afe0:	add	r1, r1, #4
   2afe4:	strh	r1, [r5, #2]
   2afe8:	uxth	r1, r1
   2afec:	ldr	r0, [r4, #12]
   2aff0:	eor	r0, r0, r6
   2aff4:	mul	r0, r0, r2
   2aff8:	eor	r0, r0, r1
   2affc:	mov	r1, r5
   2b000:	mul	r3, r0, r2
   2b004:	mov	r0, r4
   2b008:	mov	r2, r6
   2b00c:	str	r3, [r4, #12]
   2b010:	bl	2a8e4 <flatcc_builder_create_cached_vtable@@Base>
   2b014:	cmp	r0, #0
   2b018:	beq	2b124 <flatcc_builder_end_table@@Base+0x188>
   2b01c:	mov	r7, r0
   2b020:	mov	r0, r5
   2b024:	mov	r1, #0
   2b028:	mov	r2, r6
   2b02c:	mov	r8, #0
   2b030:	bl	12b64 <memset@plt>
   2b034:	ldr	r5, [r4, #32]
   2b038:	ldr	r0, [r4, #76]	; 0x4c
   2b03c:	ldr	r6, [r4]
   2b040:	ldrh	r3, [r4, #130]	; 0x82
   2b044:	ldr	r1, [r4, #16]
   2b048:	ldr	r2, [r4, #20]
   2b04c:	ldr	r5, [r5, #20]
   2b050:	add	r0, r0, r5
   2b054:	sub	r6, r6, r0
   2b058:	asr	r6, r6, #1
   2b05c:	stm	sp, {r0, r6, r7}
   2b060:	mov	r0, r4
   2b064:	bl	2ac48 <flatcc_builder_create_table@@Base>
   2b068:	cmp	r0, #0
   2b06c:	beq	2b128 <flatcc_builder_end_table@@Base+0x18c>
   2b070:	ldr	r1, [r4, #32]
   2b074:	mov	r5, r0
   2b078:	ldr	r0, [r4, #16]
   2b07c:	ldr	r2, [r4, #20]
   2b080:	ldr	r3, [r4, #52]	; 0x34
   2b084:	ldr	r7, [r1, #24]
   2b088:	str	r7, [r4, #12]
   2b08c:	ldrh	r7, [r1, #28]
   2b090:	strh	r7, [r4, #8]
   2b094:	ldr	r7, [r1, #16]
   2b098:	add	r3, r3, r7
   2b09c:	str	r3, [r4, #4]
   2b0a0:	ldr	r3, [r4, #76]	; 0x4c
   2b0a4:	ldr	r1, [r1, #20]
   2b0a8:	add	r1, r3, r1
   2b0ac:	str	r1, [r4]
   2b0b0:	mov	r1, #0
   2b0b4:	bl	12b64 <memset@plt>
   2b0b8:	ldr	r0, [r4, #32]
   2b0bc:	ldr	r1, [r4, #60]	; 0x3c
   2b0c0:	ldr	r2, [r4, #64]	; 0x40
   2b0c4:	mov	r8, r5
   2b0c8:	ldr	r3, [r0, #8]
   2b0cc:	str	r3, [r4, #20]
   2b0d0:	ldr	r3, [r0]
   2b0d4:	str	r3, [r4, #28]
   2b0d8:	add	r1, r1, r3
   2b0dc:	ldr	r7, [r0, #4]
   2b0e0:	str	r1, [r4, #16]
   2b0e4:	sub	r1, r2, r3
   2b0e8:	cmp	r1, r7
   2b0ec:	movhi	r1, r7
   2b0f0:	str	r1, [r4, #24]
   2b0f4:	ldrh	r1, [r4, #130]	; 0x82
   2b0f8:	ldrh	r2, [r4, #128]	; 0x80
   2b0fc:	cmp	r2, r1
   2b100:	strhcc	r1, [r4, #128]	; 0x80
   2b104:	ldrh	r1, [r0, #12]
   2b108:	sub	r0, r0, #36	; 0x24
   2b10c:	str	r0, [r4, #32]
   2b110:	strh	r1, [r4, #130]	; 0x82
   2b114:	ldr	r0, [r4, #156]	; 0x9c
   2b118:	sub	r0, r0, #1
   2b11c:	str	r0, [r4, #156]	; 0x9c
   2b120:	b	2b128 <flatcc_builder_end_table@@Base+0x18c>
   2b124:	mov	r8, #0
   2b128:	mov	r0, r8
   2b12c:	sub	sp, fp, #24
   2b130:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b134:	movw	r0, #7899	; 0x1edb
   2b138:	movw	r1, #5830	; 0x16c6
   2b13c:	movw	r3, #8195	; 0x2003
   2b140:	movw	r2, #1317	; 0x525
   2b144:	movt	r0, #3
   2b148:	movt	r1, #3
   2b14c:	movt	r3, #3
   2b150:	bl	12bc4 <__assert_fail@plt>

0002b154 <flatcc_builder_create_vector@@Base>:
   2b154:	push	{r4, r5, r6, r7, fp, lr}
   2b158:	add	fp, sp, #16
   2b15c:	sub	sp, sp, #80	; 0x50
   2b160:	mov	r7, r0
   2b164:	ldr	r0, [fp, #12]
   2b168:	cmp	r2, r0
   2b16c:	bhi	2b26c <flatcc_builder_create_vector@@Base+0x118>
   2b170:	ldr	r0, [fp, #8]
   2b174:	mov	r4, r2
   2b178:	ldrh	r2, [r7, #128]	; 0x80
   2b17c:	mov	r5, #4
   2b180:	cmp	r0, #4
   2b184:	movls	r0, r5
   2b188:	cmp	r2, r0
   2b18c:	sub	r2, fp, #20
   2b190:	strhcc	r0, [r7, #128]	; 0x80
   2b194:	str	r4, [fp, #-20]	; 0xffffffec
   2b198:	sub	r0, r0, #1
   2b19c:	ldr	ip, [r7, #136]	; 0x88
   2b1a0:	str	r2, [sp, #12]
   2b1a4:	mov	r2, #1
   2b1a8:	str	r5, [sp, #4]
   2b1ac:	str	r5, [sp, #16]
   2b1b0:	str	r2, [sp, #8]
   2b1b4:	mls	r6, r3, r4, ip
   2b1b8:	mul	r3, r3, r4
   2b1bc:	and	r0, r6, r0
   2b1c0:	cmp	r3, #0
   2b1c4:	beq	2b1e0 <flatcc_builder_create_vector@@Base+0x8c>
   2b1c8:	mov	r2, #2
   2b1cc:	add	r5, r3, #4
   2b1d0:	str	r1, [sp, #20]
   2b1d4:	str	r3, [sp, #24]
   2b1d8:	str	r2, [sp, #8]
   2b1dc:	str	r5, [sp, #4]
   2b1e0:	cmp	r0, #0
   2b1e4:	beq	2b210 <flatcc_builder_create_vector@@Base+0xbc>
   2b1e8:	add	r1, sp, #4
   2b1ec:	movw	r3, #5300	; 0x14b4
   2b1f0:	add	r5, r5, r0
   2b1f4:	add	r1, r1, r2, lsl #3
   2b1f8:	add	r2, r2, #1
   2b1fc:	movt	r3, #3
   2b200:	str	r5, [sp, #4]
   2b204:	str	r3, [r1, #8]
   2b208:	str	r0, [r1, #12]
   2b20c:	str	r2, [sp, #8]
   2b210:	cmp	r5, #0
   2b214:	ble	2b28c <flatcc_builder_create_vector@@Base+0x138>
   2b218:	ldr	r0, [r7, #36]	; 0x24
   2b21c:	ldr	r6, [r7, #44]	; 0x2c
   2b220:	add	r1, sp, #4
   2b224:	sub	r4, ip, r5
   2b228:	str	r5, [sp]
   2b22c:	add	r1, r1, #8
   2b230:	mov	r3, r4
   2b234:	blx	r6
   2b238:	cmp	r0, #0
   2b23c:	streq	r4, [r7, #136]	; 0x88
   2b240:	moveq	r0, r4
   2b244:	subeq	sp, fp, #16
   2b248:	popeq	{r4, r5, r6, r7, fp, pc}
   2b24c:	movw	r0, #10348	; 0x286c
   2b250:	movw	r1, #5830	; 0x16c6
   2b254:	movw	r3, #10027	; 0x272b
   2b258:	movw	r2, #651	; 0x28b
   2b25c:	movt	r0, #3
   2b260:	movt	r1, #3
   2b264:	movt	r3, #3
   2b268:	bl	12bc4 <__assert_fail@plt>
   2b26c:	movw	r0, #8261	; 0x2045
   2b270:	movw	r1, #5830	; 0x16c6
   2b274:	movw	r3, #8280	; 0x2058
   2b278:	movw	r2, #1365	; 0x555
   2b27c:	movt	r0, #3
   2b280:	movt	r1, #3
   2b284:	movt	r3, #3
   2b288:	bl	12bc4 <__assert_fail@plt>
   2b28c:	movw	r0, #10348	; 0x286c
   2b290:	movw	r1, #5830	; 0x16c6
   2b294:	movw	r3, #10027	; 0x272b
   2b298:	movw	r2, #647	; 0x287
   2b29c:	movt	r0, #3
   2b2a0:	movt	r1, #3
   2b2a4:	movt	r3, #3
   2b2a8:	bl	12bc4 <__assert_fail@plt>

0002b2ac <flatcc_builder_end_vector@@Base>:
   2b2ac:	push	{r4, r5, fp, lr}
   2b2b0:	add	fp, sp, #8
   2b2b4:	sub	sp, sp, #8
   2b2b8:	mov	r4, r0
   2b2bc:	ldr	r0, [r0, #32]
   2b2c0:	ldrh	r1, [r0, #14]
   2b2c4:	cmp	r1, #4
   2b2c8:	bne	2b37c <flatcc_builder_end_vector@@Base+0xd0>
   2b2cc:	ldr	r3, [r0, #16]
   2b2d0:	ldr	r2, [r0, #20]
   2b2d4:	ldr	r0, [r0, #24]
   2b2d8:	ldr	r1, [r4, #16]
   2b2dc:	ldrh	r5, [r4, #130]	; 0x82
   2b2e0:	str	r0, [sp, #4]
   2b2e4:	mov	r0, r4
   2b2e8:	str	r5, [sp]
   2b2ec:	bl	2b154 <flatcc_builder_create_vector@@Base>
   2b2f0:	mov	r5, r0
   2b2f4:	cmp	r0, #0
   2b2f8:	beq	2b370 <flatcc_builder_end_vector@@Base+0xc4>
   2b2fc:	ldr	r0, [r4, #16]
   2b300:	ldr	r2, [r4, #20]
   2b304:	mov	r1, #0
   2b308:	bl	12b64 <memset@plt>
   2b30c:	ldr	r0, [r4, #32]
   2b310:	ldr	r1, [r4, #60]	; 0x3c
   2b314:	ldr	ip, [r4, #64]	; 0x40
   2b318:	ldr	r3, [r0, #8]
   2b31c:	str	r3, [r4, #20]
   2b320:	ldr	r3, [r0]
   2b324:	str	r3, [r4, #28]
   2b328:	add	r1, r1, r3
   2b32c:	ldr	r2, [r0, #4]
   2b330:	str	r1, [r4, #16]
   2b334:	sub	r1, ip, r3
   2b338:	cmp	r1, r2
   2b33c:	movhi	r1, r2
   2b340:	str	r1, [r4, #24]
   2b344:	ldrh	r1, [r4, #130]	; 0x82
   2b348:	ldrh	r2, [r4, #128]	; 0x80
   2b34c:	cmp	r2, r1
   2b350:	strhcc	r1, [r4, #128]	; 0x80
   2b354:	ldrh	r1, [r0, #12]
   2b358:	sub	r0, r0, #36	; 0x24
   2b35c:	str	r0, [r4, #32]
   2b360:	strh	r1, [r4, #130]	; 0x82
   2b364:	ldr	r0, [r4, #156]	; 0x9c
   2b368:	sub	r0, r0, #1
   2b36c:	str	r0, [r4, #156]	; 0x9c
   2b370:	mov	r0, r5
   2b374:	sub	sp, fp, #8
   2b378:	pop	{r4, r5, fp, pc}
   2b37c:	movw	r0, #6633	; 0x19e9
   2b380:	movw	r1, #5830	; 0x16c6
   2b384:	movw	r3, #8398	; 0x20ce
   2b388:	movw	r2, #1400	; 0x578
   2b38c:	movt	r0, #3
   2b390:	movt	r1, #3
   2b394:	movt	r3, #3
   2b398:	bl	12bc4 <__assert_fail@plt>

0002b39c <flatcc_builder_vector_count@@Base>:
   2b39c:	ldr	r0, [r0, #32]
   2b3a0:	ldr	r0, [r0, #20]
   2b3a4:	bx	lr

0002b3a8 <flatcc_builder_vector_edit@@Base>:
   2b3a8:	ldr	r0, [r0, #16]
   2b3ac:	bx	lr

0002b3b0 <flatcc_builder_create_offset_vector_direct@@Base>:
   2b3b0:	mov	r3, #0
   2b3b4:	b	2b3b8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2b3b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b3bc:	add	fp, sp, #24
   2b3c0:	sub	sp, sp, #80	; 0x50
   2b3c4:	mov	r6, #0
   2b3c8:	cmn	r2, #-1073741823	; 0xc0000001
   2b3cc:	bhi	2b508 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   2b3d0:	mov	r8, r0
   2b3d4:	ldrh	r0, [r0, #128]	; 0x80
   2b3d8:	sub	r7, fp, #28
   2b3dc:	mov	r5, #4
   2b3e0:	mov	r4, #1
   2b3e4:	cmp	r0, #3
   2b3e8:	movls	r0, #4
   2b3ec:	strhls	r0, [r8, #128]	; 0x80
   2b3f0:	str	r2, [fp, #-28]	; 0xffffffe4
   2b3f4:	ldr	ip, [r8, #136]	; 0x88
   2b3f8:	str	r7, [sp, #12]
   2b3fc:	mov	r7, #0
   2b400:	str	r5, [sp, #4]
   2b404:	str	r5, [sp, #16]
   2b408:	str	r4, [sp, #8]
   2b40c:	cmp	r7, r2, lsl #2
   2b410:	and	r6, ip, #3
   2b414:	beq	2b434 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   2b418:	lsl	r7, r2, #2
   2b41c:	mov	r4, #2
   2b420:	str	r1, [sp, #20]
   2b424:	add	r5, r7, #4
   2b428:	str	r7, [sp, #24]
   2b42c:	str	r4, [sp, #8]
   2b430:	str	r5, [sp, #4]
   2b434:	cmp	r6, #0
   2b438:	beq	2b464 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   2b43c:	add	r7, sp, #4
   2b440:	movw	r0, #5300	; 0x14b4
   2b444:	add	r5, r5, r6
   2b448:	add	r7, r7, r4, lsl #3
   2b44c:	add	r4, r4, #1
   2b450:	movt	r0, #3
   2b454:	str	r5, [sp, #4]
   2b458:	str	r0, [r7, #8]
   2b45c:	str	r6, [r7, #12]
   2b460:	str	r4, [sp, #8]
   2b464:	cmp	r2, #0
   2b468:	beq	2b4d0 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   2b46c:	mvn	r0, #3
   2b470:	mov	r6, #0
   2b474:	sub	r0, r0, ip
   2b478:	add	r0, r0, r5
   2b47c:	ldr	r7, [r1, r6, lsl #2]
   2b480:	cmp	r7, #0
   2b484:	beq	2b4a8 <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   2b488:	add	r7, r0, r7
   2b48c:	cmp	r3, #0
   2b490:	str	r7, [r1, r6, lsl #2]
   2b494:	beq	2b4bc <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   2b498:	ldrb	r7, [r3, r6]
   2b49c:	cmp	r7, #0
   2b4a0:	bne	2b4bc <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   2b4a4:	b	2b514 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   2b4a8:	cmp	r3, #0
   2b4ac:	beq	2b554 <flatcc_builder_create_offset_vector_direct@@Base+0x1a4>
   2b4b0:	ldrb	r7, [r3, r6]
   2b4b4:	cmp	r7, #0
   2b4b8:	bne	2b534 <flatcc_builder_create_offset_vector_direct@@Base+0x184>
   2b4bc:	add	r6, r6, #1
   2b4c0:	sub	r0, r0, #4
   2b4c4:	cmp	r6, r2
   2b4c8:	bcc	2b47c <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   2b4cc:	ldr	ip, [r8, #136]	; 0x88
   2b4d0:	cmp	r5, #0
   2b4d4:	ble	2b574 <flatcc_builder_create_offset_vector_direct@@Base+0x1c4>
   2b4d8:	ldr	r0, [r8, #36]	; 0x24
   2b4dc:	ldr	r7, [r8, #44]	; 0x2c
   2b4e0:	add	r1, sp, #4
   2b4e4:	sub	r6, ip, r5
   2b4e8:	mov	r2, r4
   2b4ec:	str	r5, [sp]
   2b4f0:	add	r1, r1, #8
   2b4f4:	mov	r3, r6
   2b4f8:	blx	r7
   2b4fc:	cmp	r0, #0
   2b500:	bne	2b594 <flatcc_builder_create_offset_vector_direct@@Base+0x1e4>
   2b504:	str	r6, [r8, #136]	; 0x88
   2b508:	mov	r0, r6
   2b50c:	sub	sp, fp, #24
   2b510:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b514:	movw	r0, #10336	; 0x2860
   2b518:	movw	r1, #5830	; 0x16c6
   2b51c:	movw	r3, #10350	; 0x286e
   2b520:	movw	r2, #1457	; 0x5b1
   2b524:	movt	r0, #3
   2b528:	movt	r1, #3
   2b52c:	movt	r3, #3
   2b530:	bl	12bc4 <__assert_fail@plt>
   2b534:	movw	r0, #10481	; 0x28f1
   2b538:	movw	r1, #5830	; 0x16c6
   2b53c:	movw	r3, #10350	; 0x286e
   2b540:	movw	r2, #1461	; 0x5b5
   2b544:	movt	r0, #3
   2b548:	movt	r1, #3
   2b54c:	movt	r3, #3
   2b550:	bl	12bc4 <__assert_fail@plt>
   2b554:	movw	r0, #10348	; 0x286c
   2b558:	movw	r1, #5830	; 0x16c6
   2b55c:	movw	r3, #10350	; 0x286e
   2b560:	movw	r2, #1463	; 0x5b7
   2b564:	movt	r0, #3
   2b568:	movt	r1, #3
   2b56c:	movt	r3, #3
   2b570:	bl	12bc4 <__assert_fail@plt>
   2b574:	movw	r0, #10348	; 0x286c
   2b578:	movw	r1, #5830	; 0x16c6
   2b57c:	movw	r3, #10027	; 0x272b
   2b580:	movw	r2, #647	; 0x287
   2b584:	movt	r0, #3
   2b588:	movt	r1, #3
   2b58c:	movt	r3, #3
   2b590:	bl	12bc4 <__assert_fail@plt>
   2b594:	movw	r0, #10348	; 0x286c
   2b598:	movw	r1, #5830	; 0x16c6
   2b59c:	movw	r3, #10027	; 0x272b
   2b5a0:	movw	r2, #651	; 0x28b
   2b5a4:	movt	r0, #3
   2b5a8:	movt	r1, #3
   2b5ac:	movt	r3, #3
   2b5b0:	bl	12bc4 <__assert_fail@plt>

0002b5b4 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2b5b4:	push	{r4, r5, fp, lr}
   2b5b8:	add	fp, sp, #8
   2b5bc:	mov	r4, r0
   2b5c0:	ldr	r0, [r0, #32]
   2b5c4:	mov	r3, r1
   2b5c8:	ldrh	r1, [r0, #14]
   2b5cc:	cmp	r1, #5
   2b5d0:	bne	2b66c <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   2b5d4:	ldr	r2, [r0, #20]
   2b5d8:	ldr	r1, [r4, #16]
   2b5dc:	mov	r0, r4
   2b5e0:	bl	2b3b8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2b5e4:	mov	r5, r0
   2b5e8:	cmp	r0, #0
   2b5ec:	beq	2b664 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   2b5f0:	ldr	r0, [r4, #16]
   2b5f4:	ldr	r2, [r4, #20]
   2b5f8:	mov	r1, #0
   2b5fc:	bl	12b64 <memset@plt>
   2b600:	ldr	r0, [r4, #32]
   2b604:	ldr	r1, [r4, #60]	; 0x3c
   2b608:	ldr	ip, [r4, #64]	; 0x40
   2b60c:	ldr	r3, [r0, #8]
   2b610:	str	r3, [r4, #20]
   2b614:	ldr	r3, [r0]
   2b618:	str	r3, [r4, #28]
   2b61c:	add	r1, r1, r3
   2b620:	ldr	r2, [r0, #4]
   2b624:	str	r1, [r4, #16]
   2b628:	sub	r1, ip, r3
   2b62c:	cmp	r1, r2
   2b630:	movhi	r1, r2
   2b634:	str	r1, [r4, #24]
   2b638:	ldrh	r1, [r4, #130]	; 0x82
   2b63c:	ldrh	r2, [r4, #128]	; 0x80
   2b640:	cmp	r2, r1
   2b644:	strhcc	r1, [r4, #128]	; 0x80
   2b648:	ldrh	r1, [r0, #12]
   2b64c:	sub	r0, r0, #36	; 0x24
   2b650:	str	r0, [r4, #32]
   2b654:	strh	r1, [r4, #130]	; 0x82
   2b658:	ldr	r0, [r4, #156]	; 0x9c
   2b65c:	sub	r0, r0, #1
   2b660:	str	r0, [r4, #156]	; 0x9c
   2b664:	mov	r0, r5
   2b668:	pop	{r4, r5, fp, pc}
   2b66c:	movw	r0, #6882	; 0x1ae2
   2b670:	movw	r1, #5830	; 0x16c6
   2b674:	movw	r3, #8539	; 0x215b
   2b678:	movw	r2, #1493	; 0x5d5
   2b67c:	movt	r0, #3
   2b680:	movt	r1, #3
   2b684:	movt	r3, #3
   2b688:	bl	12bc4 <__assert_fail@plt>

0002b68c <flatcc_builder_offset_vector_edit@@Base>:
   2b68c:	ldr	r0, [r0, #16]
   2b690:	bx	lr

0002b694 <flatcc_builder_offset_vector_count@@Base>:
   2b694:	ldr	r0, [r0, #32]
   2b698:	ldr	r0, [r0, #20]
   2b69c:	bx	lr

0002b6a0 <flatcc_builder_table_add_union@@Base>:
   2b6a0:	push	{r4, r5, r6, r7, fp, lr}
   2b6a4:	add	fp, sp, #16
   2b6a8:	mov	r5, r0
   2b6ac:	ldr	r0, [r0, #32]
   2b6b0:	ldrh	r0, [r0, #14]
   2b6b4:	cmp	r0, #3
   2b6b8:	bne	2b740 <flatcc_builder_table_add_union@@Base+0xa0>
   2b6bc:	mov	r7, r3
   2b6c0:	mov	r4, r2
   2b6c4:	mov	r6, r1
   2b6c8:	cmp	r3, #0
   2b6cc:	beq	2b6dc <flatcc_builder_table_add_union@@Base+0x3c>
   2b6d0:	uxtb	r0, r4
   2b6d4:	cmp	r0, #0
   2b6d8:	beq	2b760 <flatcc_builder_table_add_union@@Base+0xc0>
   2b6dc:	cmp	r7, #0
   2b6e0:	beq	2b6fc <flatcc_builder_table_add_union@@Base+0x5c>
   2b6e4:	mov	r0, r5
   2b6e8:	mov	r1, r6
   2b6ec:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   2b6f0:	cmp	r0, #0
   2b6f4:	beq	2b780 <flatcc_builder_table_add_union@@Base+0xe0>
   2b6f8:	str	r7, [r0]
   2b6fc:	sub	r1, r6, #1
   2b700:	mov	r0, r5
   2b704:	mov	r2, #1
   2b708:	mov	r3, #1
   2b70c:	bl	2b8dc <flatcc_builder_table_add@@Base>
   2b710:	cmp	r0, #0
   2b714:	strbne	r4, [r0]
   2b718:	movne	r0, #0
   2b71c:	popne	{r4, r5, r6, r7, fp, pc}
   2b720:	movw	r0, #8785	; 0x2251
   2b724:	movw	r1, #5830	; 0x16c6
   2b728:	movw	r3, #8653	; 0x21cd
   2b72c:	movw	r2, #1526	; 0x5f6
   2b730:	movt	r0, #3
   2b734:	movt	r1, #3
   2b738:	movt	r3, #3
   2b73c:	bl	12bc4 <__assert_fail@plt>
   2b740:	movw	r0, #7899	; 0x1edb
   2b744:	movw	r1, #5830	; 0x16c6
   2b748:	movw	r3, #8653	; 0x21cd
   2b74c:	movw	r2, #1518	; 0x5ee
   2b750:	movt	r0, #3
   2b754:	movt	r1, #3
   2b758:	movt	r3, #3
   2b75c:	bl	12bc4 <__assert_fail@plt>
   2b760:	movw	r0, #8741	; 0x2225
   2b764:	movw	r1, #5830	; 0x16c6
   2b768:	movw	r3, #8653	; 0x21cd
   2b76c:	movw	r2, #1519	; 0x5ef
   2b770:	movt	r0, #3
   2b774:	movt	r1, #3
   2b778:	movt	r3, #3
   2b77c:	bl	12bc4 <__assert_fail@plt>
   2b780:	movw	r0, #8775	; 0x2247
   2b784:	movw	r1, #5830	; 0x16c6
   2b788:	movw	r3, #8653	; 0x21cd
   2b78c:	movw	r2, #1522	; 0x5f2
   2b790:	movt	r0, #3
   2b794:	movt	r1, #3
   2b798:	movt	r3, #3
   2b79c:	bl	12bc4 <__assert_fail@plt>

0002b7a0 <flatcc_builder_table_add_offset@@Base>:
   2b7a0:	push	{r4, r5, r6, r7, fp, lr}
   2b7a4:	add	fp, sp, #16
   2b7a8:	mov	r4, r0
   2b7ac:	ldr	r0, [r0, #32]
   2b7b0:	ldrh	r0, [r0, #14]
   2b7b4:	cmp	r0, #3
   2b7b8:	bne	2b87c <flatcc_builder_table_add_offset@@Base+0xdc>
   2b7bc:	movw	r0, #32765	; 0x7ffd
   2b7c0:	mov	r5, r1
   2b7c4:	cmp	r1, r0
   2b7c8:	bcs	2b89c <flatcc_builder_table_add_offset@@Base+0xfc>
   2b7cc:	ldr	r0, [r4, #4]
   2b7d0:	add	r1, r0, r5, lsl #1
   2b7d4:	ldrh	r1, [r1]
   2b7d8:	cmp	r1, #0
   2b7dc:	bne	2b8bc <flatcc_builder_table_add_offset@@Base+0x11c>
   2b7e0:	ldr	r2, [r4, #20]
   2b7e4:	ldr	r1, [r4, #12]
   2b7e8:	ldr	r3, [r4, #24]
   2b7ec:	add	r2, r2, #3
   2b7f0:	eor	r1, r1, r5
   2b7f4:	bic	r7, r2, #3
   2b7f8:	movw	r2, #31153	; 0x79b1
   2b7fc:	movt	r2, #40503	; 0x9e37
   2b800:	add	r6, r7, #4
   2b804:	mul	r1, r1, r2
   2b808:	cmp	r6, r3
   2b80c:	str	r6, [r4, #20]
   2b810:	eor	r1, r1, #4
   2b814:	mul	r1, r1, r2
   2b818:	str	r1, [r4, #12]
   2b81c:	bls	2b844 <flatcc_builder_table_add_offset@@Base+0xa4>
   2b820:	mov	r0, r4
   2b824:	mov	r1, r6
   2b828:	movw	r2, #65532	; 0xfffc
   2b82c:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   2b830:	mov	r1, r0
   2b834:	mov	r0, #0
   2b838:	cmp	r1, #0
   2b83c:	popne	{r4, r5, r6, r7, fp, pc}
   2b840:	ldr	r0, [r4, #4]
   2b844:	uxth	r1, r5
   2b848:	add	r0, r0, r1, lsl #1
   2b84c:	strh	r6, [r0]
   2b850:	ldrh	r0, [r4, #8]
   2b854:	cmp	r0, r1
   2b858:	addls	r0, r5, #1
   2b85c:	strhls	r0, [r4, #8]
   2b860:	ldr	r0, [r4]
   2b864:	add	r1, r0, #2
   2b868:	str	r1, [r4]
   2b86c:	strh	r7, [r0]
   2b870:	ldr	r0, [r4, #16]
   2b874:	add	r0, r0, r7
   2b878:	pop	{r4, r5, r6, r7, fp, pc}
   2b87c:	movw	r0, #7899	; 0x1edb
   2b880:	movw	r1, #5830	; 0x16c6
   2b884:	movw	r3, #9679	; 0x25cf
   2b888:	movw	r2, #1811	; 0x713
   2b88c:	movt	r0, #3
   2b890:	movt	r1, #3
   2b894:	movt	r3, #3
   2b898:	bl	12bc4 <__assert_fail@plt>
   2b89c:	movw	r0, #9551	; 0x254f
   2b8a0:	movw	r1, #5830	; 0x16c6
   2b8a4:	movw	r3, #9679	; 0x25cf
   2b8a8:	movw	r2, #1812	; 0x714
   2b8ac:	movt	r0, #3
   2b8b0:	movt	r1, #3
   2b8b4:	movt	r3, #3
   2b8b8:	bl	12bc4 <__assert_fail@plt>
   2b8bc:	movw	r0, #10348	; 0x286c
   2b8c0:	movw	r1, #5830	; 0x16c6
   2b8c4:	movw	r3, #9679	; 0x25cf
   2b8c8:	movw	r2, #1819	; 0x71b
   2b8cc:	movt	r0, #3
   2b8d0:	movt	r1, #3
   2b8d4:	movt	r3, #3
   2b8d8:	bl	12bc4 <__assert_fail@plt>

0002b8dc <flatcc_builder_table_add@@Base>:
   2b8dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b8e0:	add	fp, sp, #24
   2b8e4:	mov	r4, r0
   2b8e8:	ldr	r0, [r0, #32]
   2b8ec:	ldrh	r0, [r0, #14]
   2b8f0:	cmp	r0, #3
   2b8f4:	bne	2b9c0 <flatcc_builder_table_add@@Base+0xe4>
   2b8f8:	movw	r0, #32765	; 0x7ffd
   2b8fc:	mov	r8, r1
   2b900:	cmp	r1, r0
   2b904:	bcs	2b9e0 <flatcc_builder_table_add@@Base+0x104>
   2b908:	ldrh	r0, [r4, #130]	; 0x82
   2b90c:	cmp	r0, r3
   2b910:	strhcc	r3, [r4, #130]	; 0x82
   2b914:	ldr	r0, [r4, #4]
   2b918:	add	r1, r0, r8, lsl #1
   2b91c:	ldrh	r1, [r1]
   2b920:	cmp	r1, #0
   2b924:	bne	2ba00 <flatcc_builder_table_add@@Base+0x124>
   2b928:	ldr	r1, [r4, #12]
   2b92c:	movw	r7, #31153	; 0x79b1
   2b930:	ldr	r6, [r4, #20]
   2b934:	ldr	r5, [r4, #24]
   2b938:	movt	r7, #40503	; 0x9e37
   2b93c:	eor	r1, r1, r8
   2b940:	mul	r1, r1, r7
   2b944:	eor	r1, r1, r2
   2b948:	mul	r1, r1, r7
   2b94c:	str	r1, [r4, #12]
   2b950:	add	r1, r3, r6
   2b954:	rsb	r3, r3, #0
   2b958:	sub	r1, r1, #1
   2b95c:	and	r6, r1, r3
   2b960:	add	r1, r6, r2
   2b964:	cmp	r1, r5
   2b968:	str	r1, [r4, #20]
   2b96c:	bcc	2b994 <flatcc_builder_table_add@@Base+0xb8>
   2b970:	add	r1, r1, #1
   2b974:	mov	r0, r4
   2b978:	movw	r2, #65532	; 0xfffc
   2b97c:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   2b980:	mov	r1, r0
   2b984:	mov	r0, #0
   2b988:	cmp	r1, #0
   2b98c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b990:	ldr	r0, [r4, #4]
   2b994:	uxth	r1, r8
   2b998:	add	r2, r6, #4
   2b99c:	add	r0, r0, r1, lsl #1
   2b9a0:	strh	r2, [r0]
   2b9a4:	ldrh	r0, [r4, #8]
   2b9a8:	cmp	r0, r1
   2b9ac:	addls	r0, r8, #1
   2b9b0:	strhls	r0, [r4, #8]
   2b9b4:	ldr	r0, [r4, #16]
   2b9b8:	add	r0, r0, r6
   2b9bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b9c0:	movw	r0, #7899	; 0x1edb
   2b9c4:	movw	r1, #5830	; 0x16c6
   2b9c8:	movw	r3, #9477	; 0x2505
   2b9cc:	movw	r2, #1773	; 0x6ed
   2b9d0:	movt	r0, #3
   2b9d4:	movt	r1, #3
   2b9d8:	movt	r3, #3
   2b9dc:	bl	12bc4 <__assert_fail@plt>
   2b9e0:	movw	r0, #9551	; 0x254f
   2b9e4:	movw	r1, #5830	; 0x16c6
   2b9e8:	movw	r3, #9477	; 0x2505
   2b9ec:	movw	r2, #1774	; 0x6ee
   2b9f0:	movt	r0, #3
   2b9f4:	movt	r1, #3
   2b9f8:	movt	r3, #3
   2b9fc:	bl	12bc4 <__assert_fail@plt>
   2ba00:	movw	r0, #10348	; 0x286c
   2ba04:	movw	r1, #5830	; 0x16c6
   2ba08:	movw	r3, #9477	; 0x2505
   2ba0c:	movw	r2, #1784	; 0x6f8
   2ba10:	movt	r0, #3
   2ba14:	movt	r1, #3
   2ba18:	movt	r3, #3
   2ba1c:	bl	12bc4 <__assert_fail@plt>

0002ba20 <flatcc_builder_table_add_union_vector@@Base>:
   2ba20:	push	{r4, r5, r6, r7, fp, lr}
   2ba24:	add	fp, sp, #16
   2ba28:	mov	r6, r0
   2ba2c:	ldr	r0, [r0, #32]
   2ba30:	ldrh	r0, [r0, #14]
   2ba34:	cmp	r0, #3
   2ba38:	bne	2baa0 <flatcc_builder_table_add_union_vector@@Base+0x80>
   2ba3c:	clz	r0, r3
   2ba40:	mov	r5, r1
   2ba44:	clz	r1, r2
   2ba48:	mov	r4, r3
   2ba4c:	mov	r7, r2
   2ba50:	lsr	r0, r0, #5
   2ba54:	lsr	r1, r1, #5
   2ba58:	cmp	r1, r0
   2ba5c:	bne	2bac0 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   2ba60:	cmp	r7, #0
   2ba64:	beq	2ba98 <flatcc_builder_table_add_union_vector@@Base+0x78>
   2ba68:	sub	r1, r5, #1
   2ba6c:	mov	r0, r6
   2ba70:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   2ba74:	cmp	r0, #0
   2ba78:	beq	2bae0 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   2ba7c:	str	r7, [r0]
   2ba80:	mov	r0, r6
   2ba84:	mov	r1, r5
   2ba88:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   2ba8c:	cmp	r0, #0
   2ba90:	beq	2bb00 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2ba94:	str	r4, [r0]
   2ba98:	mov	r0, #0
   2ba9c:	pop	{r4, r5, r6, r7, fp, pc}
   2baa0:	movw	r0, #7899	; 0x1edb
   2baa4:	movw	r1, #5830	; 0x16c6
   2baa8:	movw	r3, #8797	; 0x225d
   2baac:	mov	r2, #1536	; 0x600
   2bab0:	movt	r0, #3
   2bab4:	movt	r1, #3
   2bab8:	movt	r3, #3
   2babc:	bl	12bc4 <__assert_fail@plt>
   2bac0:	movw	r0, #8896	; 0x22c0
   2bac4:	movw	r1, #5830	; 0x16c6
   2bac8:	movw	r3, #8797	; 0x225d
   2bacc:	movw	r2, #1537	; 0x601
   2bad0:	movt	r0, #3
   2bad4:	movt	r1, #3
   2bad8:	movt	r3, #3
   2badc:	bl	12bc4 <__assert_fail@plt>
   2bae0:	movw	r0, #8775	; 0x2247
   2bae4:	movw	r1, #5830	; 0x16c6
   2bae8:	movw	r3, #8797	; 0x225d
   2baec:	movw	r2, #1540	; 0x604
   2baf0:	movt	r0, #3
   2baf4:	movt	r1, #3
   2baf8:	movt	r3, #3
   2bafc:	bl	12bc4 <__assert_fail@plt>
   2bb00:	movw	r0, #8775	; 0x2247
   2bb04:	movw	r1, #5830	; 0x16c6
   2bb08:	movw	r3, #8797	; 0x225d
   2bb0c:	movw	r2, #1544	; 0x608
   2bb10:	movt	r0, #3
   2bb14:	movt	r1, #3
   2bb18:	movt	r3, #3
   2bb1c:	bl	12bc4 <__assert_fail@plt>

0002bb20 <flatcc_builder_create_union_vector@@Base>:
   2bb20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bb24:	add	fp, sp, #28
   2bb28:	sub	sp, sp, #20
   2bb2c:	mov	sl, r0
   2bb30:	mov	r0, #0
   2bb34:	mov	r9, r3
   2bb38:	mov	r7, r2
   2bb3c:	mov	r4, r1
   2bb40:	str	r0, [sl]
   2bb44:	str	r0, [sl, #4]
   2bb48:	mov	r0, r1
   2bb4c:	bl	2a2cc <flatcc_builder_start_offset_vector@@Base>
   2bb50:	cmp	r0, #0
   2bb54:	beq	2bb60 <flatcc_builder_create_union_vector@@Base+0x40>
   2bb58:	sub	sp, fp, #28
   2bb5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bb60:	mov	r0, r4
   2bb64:	mov	r1, r9
   2bb68:	bl	29c88 <flatcc_builder_extend_offset_vector@@Base>
   2bb6c:	cmp	r0, #0
   2bb70:	beq	2bb58 <flatcc_builder_create_union_vector@@Base+0x38>
   2bb74:	ldr	r8, [r4, #20]
   2bb78:	ldr	r1, [r4, #24]
   2bb7c:	add	r0, r8, r9
   2bb80:	cmp	r0, r1
   2bb84:	str	r0, [r4, #20]
   2bb88:	bcc	2bba4 <flatcc_builder_create_union_vector@@Base+0x84>
   2bb8c:	add	r1, r0, #1
   2bb90:	mov	r0, r4
   2bb94:	mvn	r2, #3
   2bb98:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   2bb9c:	cmp	r0, #0
   2bba0:	bne	2bb58 <flatcc_builder_create_union_vector@@Base+0x38>
   2bba4:	ldr	r3, [r4, #16]
   2bba8:	adds	r2, r3, r8
   2bbac:	beq	2bb58 <flatcc_builder_create_union_vector@@Base+0x38>
   2bbb0:	cmp	r9, #0
   2bbb4:	beq	2bbe4 <flatcc_builder_create_union_vector@@Base+0xc4>
   2bbb8:	add	r0, r7, #4
   2bbbc:	mov	r1, r9
   2bbc0:	mov	r7, r3
   2bbc4:	mov	r6, r2
   2bbc8:	ldrb	r5, [r0, #-4]
   2bbcc:	subs	r1, r1, #1
   2bbd0:	strb	r5, [r6], #1
   2bbd4:	ldr	r5, [r0]
   2bbd8:	add	r0, r0, #8
   2bbdc:	str	r5, [r7], #4
   2bbe0:	bne	2bbc8 <flatcc_builder_create_union_vector@@Base+0xa8>
   2bbe4:	add	r0, sp, #8
   2bbe8:	mov	r1, r4
   2bbec:	str	r9, [sp]
   2bbf0:	bl	2bc78 <flatcc_builder_create_union_vector_direct@@Base>
   2bbf4:	ldr	r0, [sp, #8]
   2bbf8:	ldr	r1, [sp, #12]
   2bbfc:	stm	sl, {r0, r1}
   2bc00:	mov	r1, #0
   2bc04:	ldr	r0, [r4, #16]
   2bc08:	ldr	r2, [r4, #20]
   2bc0c:	bl	12b64 <memset@plt>
   2bc10:	ldr	r0, [r4, #32]
   2bc14:	ldr	r1, [r4, #60]	; 0x3c
   2bc18:	ldr	r2, [r4, #64]	; 0x40
   2bc1c:	ldr	r3, [r0, #8]
   2bc20:	str	r3, [r4, #20]
   2bc24:	ldr	r3, [r0]
   2bc28:	str	r3, [r4, #28]
   2bc2c:	add	r1, r1, r3
   2bc30:	ldr	r7, [r0, #4]
   2bc34:	str	r1, [r4, #16]
   2bc38:	sub	r1, r2, r3
   2bc3c:	cmp	r1, r7
   2bc40:	movhi	r1, r7
   2bc44:	str	r1, [r4, #24]
   2bc48:	ldrh	r1, [r4, #130]	; 0x82
   2bc4c:	ldrh	r2, [r4, #128]	; 0x80
   2bc50:	cmp	r2, r1
   2bc54:	strhcc	r1, [r4, #128]	; 0x80
   2bc58:	ldrh	r1, [r0, #12]
   2bc5c:	sub	r0, r0, #36	; 0x24
   2bc60:	str	r0, [r4, #32]
   2bc64:	strh	r1, [r4, #130]	; 0x82
   2bc68:	ldr	r0, [r4, #156]	; 0x9c
   2bc6c:	sub	r0, r0, #1
   2bc70:	str	r0, [r4, #156]	; 0x9c
   2bc74:	b	2bb58 <flatcc_builder_create_union_vector@@Base+0x38>

0002bc78 <flatcc_builder_create_union_vector_direct@@Base>:
   2bc78:	push	{r4, r5, r6, r7, fp, lr}
   2bc7c:	add	fp, sp, #16
   2bc80:	sub	sp, sp, #8
   2bc84:	ldr	r7, [fp, #8]
   2bc88:	mov	r5, r2
   2bc8c:	mov	r4, r0
   2bc90:	mov	r0, #0
   2bc94:	mov	r6, r1
   2bc98:	str	r0, [r4]
   2bc9c:	str	r0, [r4, #4]
   2bca0:	mov	r0, r1
   2bca4:	mov	r1, r3
   2bca8:	mov	r3, r5
   2bcac:	mov	r2, r7
   2bcb0:	bl	2b3b8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2bcb4:	cmp	r0, #0
   2bcb8:	str	r0, [r4, #4]
   2bcbc:	beq	2bce8 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2bcc0:	mvn	r0, #0
   2bcc4:	mov	r1, #1
   2bcc8:	mov	r2, r7
   2bccc:	mov	r3, #1
   2bcd0:	str	r1, [sp]
   2bcd4:	str	r0, [sp, #4]
   2bcd8:	mov	r0, r6
   2bcdc:	mov	r1, r5
   2bce0:	bl	2b154 <flatcc_builder_create_vector@@Base>
   2bce4:	str	r0, [r4]
   2bce8:	sub	sp, fp, #16
   2bcec:	pop	{r4, r5, r6, r7, fp, pc}

0002bcf0 <flatcc_builder_start_union_vector@@Base>:
   2bcf0:	push	{r4, sl, fp, lr}
   2bcf4:	add	fp, sp, #8
   2bcf8:	mov	r1, #4
   2bcfc:	mov	r4, r0
   2bd00:	bl	2964c <flatcc_builder_start_buffer@@Base+0xbc>
   2bd04:	mov	r1, r0
   2bd08:	mvn	r0, #0
   2bd0c:	cmp	r1, #0
   2bd10:	popne	{r4, sl, fp, pc}
   2bd14:	ldr	r0, [r4, #32]
   2bd18:	mov	r1, #8
   2bd1c:	mov	r2, #7
   2bd20:	str	r1, [r0, #16]
   2bd24:	mov	r0, #0
   2bd28:	ldr	r1, [r4, #32]
   2bd2c:	str	r0, [r1, #20]
   2bd30:	ldr	r1, [r4, #32]
   2bd34:	strh	r2, [r1, #14]
   2bd38:	ldr	r2, [r4, #28]
   2bd3c:	ldr	r3, [r4, #60]	; 0x3c
   2bd40:	ldr	ip, [r4, #64]	; 0x40
   2bd44:	add	r3, r3, r2
   2bd48:	sub	r2, ip, r2
   2bd4c:	str	r3, [r4, #16]
   2bd50:	mvn	r3, #3
   2bd54:	cmn	r2, #4
   2bd58:	movcs	r2, r3
   2bd5c:	str	r2, [r4, #24]
   2bd60:	str	r3, [r1, #4]
   2bd64:	pop	{r4, sl, fp, pc}

0002bd68 <flatcc_builder_end_union_vector@@Base>:
   2bd68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2bd6c:	add	fp, sp, #24
   2bd70:	sub	sp, sp, #16
   2bd74:	mov	r8, r0
   2bd78:	mov	r0, #0
   2bd7c:	mov	r4, r1
   2bd80:	str	r0, [r8]
   2bd84:	str	r0, [r8, #4]
   2bd88:	ldr	r0, [r1, #32]
   2bd8c:	ldrh	r1, [r0, #14]
   2bd90:	cmp	r1, #7
   2bd94:	bne	2beac <flatcc_builder_end_union_vector@@Base+0x144>
   2bd98:	ldr	r9, [r0, #20]
   2bd9c:	ldr	r7, [r4, #20]
   2bda0:	ldr	r1, [r4, #24]
   2bda4:	add	r0, r9, r9, lsl #2
   2bda8:	add	r0, r7, r0
   2bdac:	cmp	r0, r1
   2bdb0:	str	r0, [r4, #20]
   2bdb4:	bcc	2bdd0 <flatcc_builder_end_union_vector@@Base+0x68>
   2bdb8:	add	r1, r0, #1
   2bdbc:	mov	r0, r4
   2bdc0:	mvn	r2, #3
   2bdc4:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   2bdc8:	cmp	r0, #0
   2bdcc:	bne	2bea4 <flatcc_builder_end_union_vector@@Base+0x13c>
   2bdd0:	ldr	r0, [r4, #16]
   2bdd4:	adds	r3, r0, r7
   2bdd8:	beq	2bea4 <flatcc_builder_end_union_vector@@Base+0x13c>
   2bddc:	add	r2, r3, r9, lsl #2
   2bde0:	cmp	r9, #0
   2bde4:	beq	2be14 <flatcc_builder_end_union_vector@@Base+0xac>
   2bde8:	add	r0, r0, #4
   2bdec:	mov	r1, r9
   2bdf0:	mov	r7, r3
   2bdf4:	mov	r5, r2
   2bdf8:	ldrb	r6, [r0, #-4]
   2bdfc:	subs	r1, r1, #1
   2be00:	strb	r6, [r5], #1
   2be04:	ldr	r6, [r0]
   2be08:	add	r0, r0, #8
   2be0c:	str	r6, [r7], #4
   2be10:	bne	2bdf8 <flatcc_builder_end_union_vector@@Base+0x90>
   2be14:	add	r0, sp, #8
   2be18:	mov	r1, r4
   2be1c:	str	r9, [sp]
   2be20:	bl	2bc78 <flatcc_builder_create_union_vector_direct@@Base>
   2be24:	ldr	r0, [sp, #8]
   2be28:	ldr	r1, [sp, #12]
   2be2c:	stm	r8, {r0, r1}
   2be30:	mov	r1, #0
   2be34:	ldr	r0, [r4, #16]
   2be38:	ldr	r2, [r4, #20]
   2be3c:	bl	12b64 <memset@plt>
   2be40:	ldr	r0, [r4, #32]
   2be44:	ldr	r1, [r4, #60]	; 0x3c
   2be48:	ldr	r2, [r4, #64]	; 0x40
   2be4c:	ldr	r3, [r0, #8]
   2be50:	str	r3, [r4, #20]
   2be54:	ldr	r3, [r0]
   2be58:	str	r3, [r4, #28]
   2be5c:	add	r1, r1, r3
   2be60:	ldr	r7, [r0, #4]
   2be64:	str	r1, [r4, #16]
   2be68:	sub	r1, r2, r3
   2be6c:	cmp	r1, r7
   2be70:	movhi	r1, r7
   2be74:	str	r1, [r4, #24]
   2be78:	ldrh	r1, [r4, #130]	; 0x82
   2be7c:	ldrh	r2, [r4, #128]	; 0x80
   2be80:	cmp	r2, r1
   2be84:	strhcc	r1, [r4, #128]	; 0x80
   2be88:	ldrh	r1, [r0, #12]
   2be8c:	sub	r0, r0, #36	; 0x24
   2be90:	str	r0, [r4, #32]
   2be94:	strh	r1, [r4, #130]	; 0x82
   2be98:	ldr	r0, [r4, #156]	; 0x9c
   2be9c:	sub	r0, r0, #1
   2bea0:	str	r0, [r4, #156]	; 0x9c
   2bea4:	sub	sp, fp, #24
   2bea8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2beac:	movw	r0, #8936	; 0x22e8
   2beb0:	movw	r1, #5830	; 0x16c6
   2beb4:	movw	r3, #8986	; 0x231a
   2beb8:	movw	r2, #1617	; 0x651
   2bebc:	movt	r0, #3
   2bec0:	movt	r1, #3
   2bec4:	movt	r3, #3
   2bec8:	bl	12bc4 <__assert_fail@plt>

0002becc <flatcc_builder_union_vector_count@@Base>:
   2becc:	ldr	r0, [r0, #32]
   2bed0:	ldr	r0, [r0, #20]
   2bed4:	bx	lr

0002bed8 <flatcc_builder_union_vector_edit@@Base>:
   2bed8:	ldr	r0, [r0, #16]
   2bedc:	bx	lr

0002bee0 <flatcc_builder_extend_union_vector@@Base>:
   2bee0:	push	{r4, r5, fp, lr}
   2bee4:	add	fp, sp, #8
   2bee8:	mov	r4, r0
   2beec:	ldr	r0, [r0, #32]
   2bef0:	ldr	r2, [r0, #20]
   2bef4:	adds	r2, r2, r1
   2bef8:	cmpcc	r2, #536870912	; 0x20000000
   2befc:	bcc	2bf20 <flatcc_builder_extend_union_vector@@Base+0x40>
   2bf00:	movw	r0, #10101	; 0x2775
   2bf04:	movw	r1, #5830	; 0x16c6
   2bf08:	movw	r3, #10128	; 0x2790
   2bf0c:	mov	r2, #892	; 0x37c
   2bf10:	movt	r0, #3
   2bf14:	movt	r1, #3
   2bf18:	movt	r3, #3
   2bf1c:	bl	12bc4 <__assert_fail@plt>
   2bf20:	str	r2, [r0, #20]
   2bf24:	ldr	r5, [r4, #20]
   2bf28:	ldr	r2, [r4, #24]
   2bf2c:	add	r0, r5, r1, lsl #3
   2bf30:	cmp	r0, r2
   2bf34:	str	r0, [r4, #20]
   2bf38:	bcc	2bf5c <flatcc_builder_extend_union_vector@@Base+0x7c>
   2bf3c:	add	r1, r0, #1
   2bf40:	mov	r0, r4
   2bf44:	mvn	r2, #3
   2bf48:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   2bf4c:	mov	r1, r0
   2bf50:	mov	r0, #0
   2bf54:	cmp	r1, #0
   2bf58:	popne	{r4, r5, fp, pc}
   2bf5c:	ldr	r0, [r4, #16]
   2bf60:	add	r0, r0, r5
   2bf64:	pop	{r4, r5, fp, pc}

0002bf68 <flatcc_builder_truncate_union_vector@@Base>:
   2bf68:	push	{fp, lr}
   2bf6c:	mov	fp, sp
   2bf70:	ldr	r2, [r0, #32]
   2bf74:	ldrh	r3, [r2, #14]
   2bf78:	cmp	r3, #7
   2bf7c:	bne	2bfc4 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   2bf80:	ldr	r3, [r2, #20]
   2bf84:	cmp	r3, r1
   2bf88:	bcc	2bfe4 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   2bf8c:	sub	r3, r3, r1
   2bf90:	str	r3, [r2, #20]
   2bf94:	ldr	r2, [r0, #32]
   2bf98:	ldr	r3, [r0, #20]
   2bf9c:	ldr	ip, [r0, #16]
   2bfa0:	ldr	r2, [r2, #16]
   2bfa4:	mls	r3, r2, r1, r3
   2bfa8:	mul	r2, r2, r1
   2bfac:	mov	r1, #0
   2bfb0:	str	r3, [r0, #20]
   2bfb4:	add	r0, ip, r3
   2bfb8:	bl	12b64 <memset@plt>
   2bfbc:	mov	r0, #0
   2bfc0:	pop	{fp, pc}
   2bfc4:	movw	r0, #8936	; 0x22e8
   2bfc8:	movw	r1, #5830	; 0x16c6
   2bfcc:	movw	r3, #9069	; 0x236d
   2bfd0:	movw	r2, #1665	; 0x681
   2bfd4:	movt	r0, #3
   2bfd8:	movt	r1, #3
   2bfdc:	movt	r3, #3
   2bfe0:	bl	12bc4 <__assert_fail@plt>
   2bfe4:	movw	r0, #7500	; 0x1d4c
   2bfe8:	movw	r1, #5830	; 0x16c6
   2bfec:	movw	r3, #9069	; 0x236d
   2bff0:	movw	r2, #1666	; 0x682
   2bff4:	movt	r0, #3
   2bff8:	movt	r1, #3
   2bffc:	movt	r3, #3
   2c000:	bl	12bc4 <__assert_fail@plt>

0002c004 <flatcc_builder_union_vector_push@@Base>:
   2c004:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c008:	add	fp, sp, #24
   2c00c:	mov	r7, r0
   2c010:	ldr	r0, [r0, #32]
   2c014:	mov	r5, r1
   2c018:	ldrh	r1, [r0, #14]
   2c01c:	cmp	r1, #7
   2c020:	bne	2c088 <flatcc_builder_union_vector_push@@Base+0x84>
   2c024:	ldr	r1, [r0, #20]
   2c028:	mov	r6, #0
   2c02c:	cmn	r1, #-536870911	; 0xe0000001
   2c030:	beq	2c080 <flatcc_builder_union_vector_push@@Base+0x7c>
   2c034:	add	r1, r1, #1
   2c038:	mov	r8, r2
   2c03c:	str	r1, [r0, #20]
   2c040:	ldr	r4, [r7, #20]
   2c044:	ldr	r0, [r7, #24]
   2c048:	add	r1, r4, #8
   2c04c:	cmp	r1, r0
   2c050:	str	r1, [r7, #20]
   2c054:	bcc	2c070 <flatcc_builder_union_vector_push@@Base+0x6c>
   2c058:	add	r1, r4, #9
   2c05c:	mov	r0, r7
   2c060:	mvn	r2, #3
   2c064:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   2c068:	cmp	r0, #0
   2c06c:	bne	2c080 <flatcc_builder_union_vector_push@@Base+0x7c>
   2c070:	ldr	r0, [r7, #16]
   2c074:	adds	r0, r0, r4
   2c078:	movne	r6, r0
   2c07c:	stmne	r0, {r5, r8}
   2c080:	mov	r0, r6
   2c084:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c088:	movw	r0, #8936	; 0x22e8
   2c08c:	movw	r1, #5830	; 0x16c6
   2c090:	movw	r3, #9138	; 0x23b2
   2c094:	movw	r2, #1677	; 0x68d
   2c098:	movt	r0, #3
   2c09c:	movt	r1, #3
   2c0a0:	movt	r3, #3
   2c0a4:	bl	12bc4 <__assert_fail@plt>

0002c0a8 <flatcc_builder_append_union_vector@@Base>:
   2c0a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c0ac:	add	fp, sp, #24
   2c0b0:	mov	r6, r0
   2c0b4:	ldr	r0, [r0, #32]
   2c0b8:	mov	r8, r1
   2c0bc:	ldrh	r1, [r0, #14]
   2c0c0:	cmp	r1, #7
   2c0c4:	bne	2c160 <flatcc_builder_append_union_vector@@Base+0xb8>
   2c0c8:	ldr	r1, [r0, #20]
   2c0cc:	mov	r5, r2
   2c0d0:	adds	r1, r1, r2
   2c0d4:	cmpcc	r1, #536870912	; 0x20000000
   2c0d8:	bcc	2c0fc <flatcc_builder_append_union_vector@@Base+0x54>
   2c0dc:	movw	r0, #10101	; 0x2775
   2c0e0:	movw	r1, #5830	; 0x16c6
   2c0e4:	movw	r3, #10128	; 0x2790
   2c0e8:	mov	r2, #892	; 0x37c
   2c0ec:	movt	r0, #3
   2c0f0:	movt	r1, #3
   2c0f4:	movt	r3, #3
   2c0f8:	bl	12bc4 <__assert_fail@plt>
   2c0fc:	str	r1, [r0, #20]
   2c100:	ldr	r4, [r6, #20]
   2c104:	ldr	r1, [r6, #24]
   2c108:	add	r0, r4, r5, lsl #3
   2c10c:	cmp	r0, r1
   2c110:	str	r0, [r6, #20]
   2c114:	bcc	2c134 <flatcc_builder_append_union_vector@@Base+0x8c>
   2c118:	add	r1, r0, #1
   2c11c:	mov	r0, r6
   2c120:	mvn	r2, #3
   2c124:	bl	2c79c <flatcc_builder_get_emit_context@@Base+0x8>
   2c128:	mov	r7, #0
   2c12c:	cmp	r0, #0
   2c130:	bne	2c158 <flatcc_builder_append_union_vector@@Base+0xb0>
   2c134:	ldr	r0, [r6, #16]
   2c138:	adds	r7, r0, r4
   2c13c:	beq	2c154 <flatcc_builder_append_union_vector@@Base+0xac>
   2c140:	lsl	r2, r5, #3
   2c144:	mov	r0, r7
   2c148:	mov	r1, r8
   2c14c:	bl	12ab0 <memcpy@plt>
   2c150:	b	2c158 <flatcc_builder_append_union_vector@@Base+0xb0>
   2c154:	mov	r7, #0
   2c158:	mov	r0, r7
   2c15c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c160:	movw	r0, #8936	; 0x22e8
   2c164:	movw	r1, #5830	; 0x16c6
   2c168:	movw	r3, #9247	; 0x241f
   2c16c:	movw	r2, #1692	; 0x69c
   2c170:	movt	r0, #3
   2c174:	movt	r1, #3
   2c178:	movt	r3, #3
   2c17c:	bl	12bc4 <__assert_fail@plt>

0002c180 <flatcc_builder_create_string@@Base>:
   2c180:	push	{r4, r5, r6, sl, fp, lr}
   2c184:	add	fp, sp, #16
   2c188:	sub	sp, sp, #80	; 0x50
   2c18c:	str	r2, [fp, #-20]	; 0xffffffec
   2c190:	mvn	r5, r2
   2c194:	mov	r6, r0
   2c198:	mov	r3, #1
   2c19c:	cmp	r2, #0
   2c1a0:	ldr	ip, [r0, #136]	; 0x88
   2c1a4:	sub	r0, fp, #20
   2c1a8:	str	r0, [sp, #12]
   2c1ac:	mov	r0, #4
   2c1b0:	str	r0, [sp, #4]
   2c1b4:	str	r0, [sp, #16]
   2c1b8:	str	r3, [sp, #8]
   2c1bc:	add	r5, ip, r5
   2c1c0:	and	r5, r5, #3
   2c1c4:	add	r5, r5, #1
   2c1c8:	beq	2c1e4 <flatcc_builder_create_string@@Base+0x64>
   2c1cc:	mov	r3, #2
   2c1d0:	add	r0, r2, #4
   2c1d4:	str	r1, [sp, #20]
   2c1d8:	str	r2, [sp, #24]
   2c1dc:	str	r3, [sp, #8]
   2c1e0:	str	r0, [sp, #4]
   2c1e4:	movw	r2, #5300	; 0x14b4
   2c1e8:	add	lr, sp, #4
   2c1ec:	add	r1, r0, r5
   2c1f0:	add	r0, lr, r3, lsl #3
   2c1f4:	movt	r2, #3
   2c1f8:	str	r1, [sp, #4]
   2c1fc:	cmp	r1, #0
   2c200:	str	r2, [r0, #8]
   2c204:	add	r2, r3, #1
   2c208:	str	r5, [r0, #12]
   2c20c:	str	r2, [sp, #8]
   2c210:	ble	2c264 <flatcc_builder_create_string@@Base+0xe4>
   2c214:	ldr	r0, [r6, #36]	; 0x24
   2c218:	ldr	r4, [r6, #44]	; 0x2c
   2c21c:	sub	r5, ip, r1
   2c220:	str	r1, [sp]
   2c224:	add	r1, lr, #8
   2c228:	mov	r3, r5
   2c22c:	blx	r4
   2c230:	cmp	r0, #0
   2c234:	streq	r5, [r6, #136]	; 0x88
   2c238:	moveq	r0, r5
   2c23c:	subeq	sp, fp, #16
   2c240:	popeq	{r4, r5, r6, sl, fp, pc}
   2c244:	movw	r0, #10348	; 0x286c
   2c248:	movw	r1, #5830	; 0x16c6
   2c24c:	movw	r3, #10027	; 0x272b
   2c250:	movw	r2, #651	; 0x28b
   2c254:	movt	r0, #3
   2c258:	movt	r1, #3
   2c25c:	movt	r3, #3
   2c260:	bl	12bc4 <__assert_fail@plt>
   2c264:	movw	r0, #10348	; 0x286c
   2c268:	movw	r1, #5830	; 0x16c6
   2c26c:	movw	r3, #10027	; 0x272b
   2c270:	movw	r2, #647	; 0x287
   2c274:	movt	r0, #3
   2c278:	movt	r1, #3
   2c27c:	movt	r3, #3
   2c280:	bl	12bc4 <__assert_fail@plt>

0002c284 <flatcc_builder_create_string_str@@Base>:
   2c284:	push	{r4, r5, fp, lr}
   2c288:	add	fp, sp, #8
   2c28c:	mov	r5, r0
   2c290:	mov	r0, r1
   2c294:	mov	r4, r1
   2c298:	bl	12b40 <strlen@plt>
   2c29c:	mov	r2, r0
   2c2a0:	mov	r0, r5
   2c2a4:	mov	r1, r4
   2c2a8:	pop	{r4, r5, fp, lr}
   2c2ac:	b	2c180 <flatcc_builder_create_string@@Base>

0002c2b0 <flatcc_builder_create_string_strn@@Base>:
   2c2b0:	push	{r4, r5, r6, sl, fp, lr}
   2c2b4:	add	fp, sp, #16
   2c2b8:	mov	r6, r0
   2c2bc:	mov	r5, r1
   2c2c0:	mov	r0, r1
   2c2c4:	mov	r1, #0
   2c2c8:	mov	r4, r2
   2c2cc:	bl	12b7c <memchr@plt>
   2c2d0:	cmp	r0, #0
   2c2d4:	mov	r1, r5
   2c2d8:	subne	r4, r0, r5
   2c2dc:	mov	r0, r6
   2c2e0:	mov	r2, r4
   2c2e4:	pop	{r4, r5, r6, sl, fp, lr}
   2c2e8:	b	2c180 <flatcc_builder_create_string@@Base>

0002c2ec <flatcc_builder_end_string@@Base>:
   2c2ec:	push	{r4, r5, fp, lr}
   2c2f0:	add	fp, sp, #8
   2c2f4:	mov	r4, r0
   2c2f8:	ldr	r0, [r0, #32]
   2c2fc:	ldrh	r1, [r0, #14]
   2c300:	cmp	r1, #6
   2c304:	bne	2c3ac <flatcc_builder_end_string@@Base+0xc0>
   2c308:	ldr	r2, [r0, #20]
   2c30c:	ldr	r0, [r4, #20]
   2c310:	cmp	r2, r0
   2c314:	bne	2c3cc <flatcc_builder_end_string@@Base+0xe0>
   2c318:	ldr	r1, [r4, #16]
   2c31c:	mov	r0, r4
   2c320:	bl	2c180 <flatcc_builder_create_string@@Base>
   2c324:	mov	r5, r0
   2c328:	cmp	r0, #0
   2c32c:	beq	2c3a4 <flatcc_builder_end_string@@Base+0xb8>
   2c330:	ldr	r0, [r4, #16]
   2c334:	ldr	r2, [r4, #20]
   2c338:	mov	r1, #0
   2c33c:	bl	12b64 <memset@plt>
   2c340:	ldr	r0, [r4, #32]
   2c344:	ldr	r1, [r4, #60]	; 0x3c
   2c348:	ldr	ip, [r4, #64]	; 0x40
   2c34c:	ldr	r3, [r0, #8]
   2c350:	str	r3, [r4, #20]
   2c354:	ldr	r3, [r0]
   2c358:	str	r3, [r4, #28]
   2c35c:	add	r1, r1, r3
   2c360:	ldr	r2, [r0, #4]
   2c364:	str	r1, [r4, #16]
   2c368:	sub	r1, ip, r3
   2c36c:	cmp	r1, r2
   2c370:	movhi	r1, r2
   2c374:	str	r1, [r4, #24]
   2c378:	ldrh	r1, [r4, #130]	; 0x82
   2c37c:	ldrh	r2, [r4, #128]	; 0x80
   2c380:	cmp	r2, r1
   2c384:	strhcc	r1, [r4, #128]	; 0x80
   2c388:	ldrh	r1, [r0, #12]
   2c38c:	sub	r0, r0, #36	; 0x24
   2c390:	str	r0, [r4, #32]
   2c394:	strh	r1, [r4, #130]	; 0x82
   2c398:	ldr	r0, [r4, #156]	; 0x9c
   2c39c:	sub	r0, r0, #1
   2c3a0:	str	r0, [r4, #156]	; 0x9c
   2c3a4:	mov	r0, r5
   2c3a8:	pop	{r4, r5, fp, pc}
   2c3ac:	movw	r0, #7147	; 0x1beb
   2c3b0:	movw	r1, #5830	; 0x16c6
   2c3b4:	movw	r3, #9374	; 0x249e
   2c3b8:	movw	r2, #1732	; 0x6c4
   2c3bc:	movt	r0, #3
   2c3c0:	movt	r1, #3
   2c3c4:	movt	r3, #3
   2c3c8:	bl	12bc4 <__assert_fail@plt>
   2c3cc:	movw	r0, #9441	; 0x24e1
   2c3d0:	movw	r1, #5830	; 0x16c6
   2c3d4:	movw	r3, #9374	; 0x249e
   2c3d8:	movw	r2, #1733	; 0x6c5
   2c3dc:	movt	r0, #3
   2c3e0:	movt	r1, #3
   2c3e4:	movt	r3, #3
   2c3e8:	bl	12bc4 <__assert_fail@plt>

0002c3ec <flatcc_builder_string_edit@@Base>:
   2c3ec:	ldr	r0, [r0, #16]
   2c3f0:	bx	lr

0002c3f4 <flatcc_builder_string_len@@Base>:
   2c3f4:	ldr	r0, [r0, #32]
   2c3f8:	ldr	r0, [r0, #20]
   2c3fc:	bx	lr

0002c400 <flatcc_builder_table_edit@@Base>:
   2c400:	ldr	r2, [r0, #32]
   2c404:	ldrh	r2, [r2, #14]
   2c408:	cmp	r2, #3
   2c40c:	ldreq	r2, [r0, #16]
   2c410:	ldreq	r0, [r0, #20]
   2c414:	addeq	r0, r2, r0
   2c418:	subeq	r0, r0, r1
   2c41c:	bxeq	lr
   2c420:	push	{fp, lr}
   2c424:	mov	fp, sp
   2c428:	movw	r0, #7899	; 0x1edb
   2c42c:	movw	r1, #5830	; 0x16c6
   2c430:	movw	r3, #9619	; 0x2593
   2c434:	movw	r2, #1794	; 0x702
   2c438:	movt	r0, #3
   2c43c:	movt	r1, #3
   2c440:	movt	r3, #3
   2c444:	bl	12bc4 <__assert_fail@plt>

0002c448 <flatcc_builder_table_add_copy@@Base>:
   2c448:	push	{r4, r5, r6, sl, fp, lr}
   2c44c:	add	fp, sp, #16
   2c450:	mov	r4, r3
   2c454:	ldr	r3, [fp, #8]
   2c458:	mov	r5, r2
   2c45c:	mov	r2, r4
   2c460:	bl	2b8dc <flatcc_builder_table_add@@Base>
   2c464:	mov	r6, r0
   2c468:	cmp	r0, #0
   2c46c:	beq	2c480 <flatcc_builder_table_add_copy@@Base+0x38>
   2c470:	mov	r0, r6
   2c474:	mov	r1, r5
   2c478:	mov	r2, r4
   2c47c:	bl	12ab0 <memcpy@plt>
   2c480:	mov	r0, r6
   2c484:	pop	{r4, r5, r6, sl, fp, pc}

0002c488 <flatcc_builder_push_buffer_alignment@@Base>:
   2c488:	ldrh	r1, [r0, #128]	; 0x80
   2c48c:	mov	r2, #4
   2c490:	strh	r2, [r0, #128]	; 0x80
   2c494:	mov	r0, r1
   2c498:	bx	lr

0002c49c <flatcc_builder_pop_buffer_alignment@@Base>:
   2c49c:	ldrh	r2, [r0, #128]	; 0x80
   2c4a0:	cmp	r2, r1
   2c4a4:	strhcc	r1, [r0, #128]	; 0x80
   2c4a8:	bx	lr

0002c4ac <flatcc_builder_get_buffer_alignment@@Base>:
   2c4ac:	ldrh	r0, [r0, #128]	; 0x80
   2c4b0:	bx	lr

0002c4b4 <flatcc_builder_set_vtable_clustering@@Base>:
   2c4b4:	clz	r1, r1
   2c4b8:	lsr	r1, r1, #5
   2c4bc:	str	r1, [r0, #180]	; 0xb4
   2c4c0:	bx	lr

0002c4c4 <flatcc_builder_set_block_align@@Base>:
   2c4c4:	strh	r1, [r0, #132]	; 0x84
   2c4c8:	bx	lr

0002c4cc <flatcc_builder_get_level@@Base>:
   2c4cc:	ldr	r0, [r0, #156]	; 0x9c
   2c4d0:	bx	lr

0002c4d4 <flatcc_builder_set_max_level@@Base>:
   2c4d4:	str	r1, [r0, #176]	; 0xb0
   2c4d8:	ldr	r2, [r0, #160]	; 0xa0
   2c4dc:	cmp	r2, r1
   2c4e0:	strlt	r1, [r0, #160]	; 0xa0
   2c4e4:	bx	lr

0002c4e8 <flatcc_builder_get_buffer_size@@Base>:
   2c4e8:	ldr	r1, [r0, #136]	; 0x88
   2c4ec:	ldr	r0, [r0, #140]	; 0x8c
   2c4f0:	sub	r0, r0, r1
   2c4f4:	bx	lr

0002c4f8 <flatcc_builder_get_buffer_start@@Base>:
   2c4f8:	ldr	r0, [r0, #136]	; 0x88
   2c4fc:	bx	lr

0002c500 <flatcc_builder_get_buffer_end@@Base>:
   2c500:	ldr	r0, [r0, #140]	; 0x8c
   2c504:	bx	lr

0002c508 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2c508:	str	r1, [r0, #172]	; 0xac
   2c50c:	bx	lr

0002c510 <flatcc_builder_set_identifier@@Base>:
   2c510:	movw	r2, #5300	; 0x14b4
   2c514:	cmp	r1, #0
   2c518:	movt	r2, #3
   2c51c:	movne	r2, r1
   2c520:	ldr	r1, [r2]
   2c524:	str	r1, [r0, #168]	; 0xa8
   2c528:	bx	lr

0002c52c <flatcc_builder_get_type@@Base>:
   2c52c:	ldr	r0, [r0, #32]
   2c530:	cmp	r0, #0
   2c534:	ldrhne	r0, [r0, #14]
   2c538:	moveq	r0, #0
   2c53c:	bx	lr

0002c540 <flatcc_builder_get_type_at@@Base>:
   2c540:	mov	r2, r0
   2c544:	cmp	r1, #1
   2c548:	mov	r0, #0
   2c54c:	ldrge	r3, [r2, #156]	; 0x9c
   2c550:	cmpge	r3, r1
   2c554:	bge	2c55c <flatcc_builder_get_type_at@@Base+0x1c>
   2c558:	bx	lr
   2c55c:	sub	r0, r1, r3
   2c560:	ldr	r1, [r2, #32]
   2c564:	add	r0, r0, r0, lsl #3
   2c568:	add	r0, r1, r0, lsl #2
   2c56c:	ldrh	r0, [r0, #14]
   2c570:	bx	lr

0002c574 <flatcc_builder_get_direct_buffer@@Base>:
   2c574:	ldr	r2, [r0, #184]	; 0xb8
   2c578:	cmp	r2, #0
   2c57c:	beq	2c590 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   2c580:	ldr	r2, [r0, #188]	; 0xbc
   2c584:	ldr	r3, [r0, #192]	; 0xc0
   2c588:	cmp	r2, r3
   2c58c:	beq	2c5a0 <flatcc_builder_get_direct_buffer@@Base+0x2c>
   2c590:	mov	r0, #0
   2c594:	cmp	r1, #0
   2c598:	strne	r0, [r1]
   2c59c:	bx	lr
   2c5a0:	cmp	r1, #0
   2c5a4:	ldrne	r2, [r0, #212]	; 0xd4
   2c5a8:	strne	r2, [r1]
   2c5ac:	ldr	r0, [r0, #196]	; 0xc4
   2c5b0:	bx	lr

0002c5b4 <flatcc_builder_copy_buffer@@Base>:
   2c5b4:	push	{fp, lr}
   2c5b8:	mov	fp, sp
   2c5bc:	ldr	r3, [r0, #184]	; 0xb8
   2c5c0:	cmp	r3, #0
   2c5c4:	beq	2c5f8 <flatcc_builder_copy_buffer@@Base+0x44>
   2c5c8:	add	r0, r0, #188	; 0xbc
   2c5cc:	bl	2ccd4 <flatcc_emitter_copy_buffer@@Base>
   2c5d0:	cmp	r0, #0
   2c5d4:	popne	{fp, pc}
   2c5d8:	movw	r0, #6426	; 0x191a
   2c5dc:	movw	r1, #5830	; 0x16c6
   2c5e0:	movw	r3, #9758	; 0x261e
   2c5e4:	movw	r2, #1926	; 0x786
   2c5e8:	movt	r0, #3
   2c5ec:	movt	r1, #3
   2c5f0:	movt	r3, #3
   2c5f4:	bl	12bc4 <__assert_fail@plt>
   2c5f8:	mov	r0, #0
   2c5fc:	pop	{fp, pc}

0002c600 <flatcc_builder_finalize_buffer@@Base>:
   2c600:	push	{r4, r5, r6, sl, fp, lr}
   2c604:	add	fp, sp, #16
   2c608:	mov	r4, r0
   2c60c:	ldr	r0, [r0, #136]	; 0x88
   2c610:	cmp	r1, #0
   2c614:	ldr	r2, [r4, #140]	; 0x8c
   2c618:	sub	r5, r2, r0
   2c61c:	mov	r0, r5
   2c620:	strne	r5, [r1]
   2c624:	bl	12b10 <malloc@plt>
   2c628:	cmp	r0, #0
   2c62c:	beq	2c670 <flatcc_builder_finalize_buffer@@Base+0x70>
   2c630:	mov	r6, r0
   2c634:	mov	r0, r4
   2c638:	mov	r2, r5
   2c63c:	mov	r1, r6
   2c640:	bl	2c5b4 <flatcc_builder_copy_buffer@@Base>
   2c644:	cmp	r0, #0
   2c648:	movne	r0, r6
   2c64c:	popne	{r4, r5, r6, sl, fp, pc}
   2c650:	movw	r0, #10348	; 0x286c
   2c654:	movw	r1, #5830	; 0x16c6
   2c658:	movw	r3, #9827	; 0x2663
   2c65c:	movw	r2, #1948	; 0x79c
   2c660:	movt	r0, #3
   2c664:	movt	r1, #3
   2c668:	movt	r3, #3
   2c66c:	bl	12bc4 <__assert_fail@plt>
   2c670:	movw	r0, #10348	; 0x286c
   2c674:	movw	r1, #5830	; 0x16c6
   2c678:	movw	r3, #9827	; 0x2663
   2c67c:	movw	r2, #1944	; 0x798
   2c680:	movt	r0, #3
   2c684:	movt	r1, #3
   2c688:	movt	r3, #3
   2c68c:	bl	12bc4 <__assert_fail@plt>

0002c690 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2c690:	push	{r4, r5, r6, r7, fp, lr}
   2c694:	add	fp, sp, #16
   2c698:	sub	sp, sp, #8
   2c69c:	mov	r5, r0
   2c6a0:	mov	r4, r1
   2c6a4:	ldr	r0, [r0, #136]	; 0x88
   2c6a8:	ldr	r1, [r5, #140]	; 0x8c
   2c6ac:	cmp	r4, #0
   2c6b0:	sub	r0, r1, r0
   2c6b4:	mov	r1, #0
   2c6b8:	strne	r0, [r4]
   2c6bc:	ldrh	r2, [r5, #128]	; 0x80
   2c6c0:	str	r1, [sp, #4]
   2c6c4:	add	r0, r0, r2
   2c6c8:	cmp	r2, #4
   2c6cc:	mov	r1, r2
   2c6d0:	rsb	r2, r2, #0
   2c6d4:	sub	r0, r0, #1
   2c6d8:	movls	r1, #4
   2c6dc:	and	r7, r0, r2
   2c6e0:	add	r0, sp, #4
   2c6e4:	mov	r2, r7
   2c6e8:	bl	12b58 <posix_memalign@plt>
   2c6ec:	ldr	r6, [sp, #4]
   2c6f0:	cmp	r0, #0
   2c6f4:	cmpne	r6, #0
   2c6f8:	bne	2c71c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
   2c6fc:	cmp	r6, #0
   2c700:	beq	2c724 <flatcc_builder_finalize_aligned_buffer@@Base+0x94>
   2c704:	mov	r0, r5
   2c708:	mov	r1, r6
   2c70c:	mov	r2, r7
   2c710:	bl	2c5b4 <flatcc_builder_copy_buffer@@Base>
   2c714:	cmp	r0, #0
   2c718:	bne	2c730 <flatcc_builder_finalize_aligned_buffer@@Base+0xa0>
   2c71c:	mov	r0, r6
   2c720:	bl	12aa4 <free@plt>
   2c724:	mov	r6, #0
   2c728:	cmp	r4, #0
   2c72c:	strne	r6, [r4]
   2c730:	mov	r0, r6
   2c734:	sub	sp, fp, #16
   2c738:	pop	{r4, r5, r6, r7, fp, pc}

0002c73c <flatcc_builder_aligned_alloc@@Base>:
   2c73c:	push	{fp, lr}
   2c740:	mov	fp, sp
   2c744:	sub	sp, sp, #8
   2c748:	mov	r2, r1
   2c74c:	mov	r1, r0
   2c750:	mov	r0, #0
   2c754:	cmp	r1, #4
   2c758:	str	r0, [sp, #4]
   2c75c:	add	r0, sp, #4
   2c760:	movls	r1, #4
   2c764:	bl	12b58 <posix_memalign@plt>
   2c768:	mov	r1, r0
   2c76c:	ldr	r0, [sp, #4]
   2c770:	cmp	r1, #0
   2c774:	cmpne	r0, #0
   2c778:	beq	2c788 <flatcc_builder_aligned_alloc@@Base+0x4c>
   2c77c:	bl	12aa4 <free@plt>
   2c780:	mov	r0, #0
   2c784:	str	r0, [sp, #4]
   2c788:	mov	sp, fp
   2c78c:	pop	{fp, pc}

0002c790 <flatcc_builder_aligned_free@@Base>:
   2c790:	b	12aa4 <free@plt>

0002c794 <flatcc_builder_get_emit_context@@Base>:
   2c794:	ldr	r0, [r0, #36]	; 0x24
   2c798:	bx	lr
   2c79c:	push	{r4, r5, r6, sl, fp, lr}
   2c7a0:	add	fp, sp, #16
   2c7a4:	sub	sp, sp, #8
   2c7a8:	mov	r6, r2
   2c7ac:	ldr	r2, [r0, #28]
   2c7b0:	mov	r5, r0
   2c7b4:	ldr	r0, [r0, #40]	; 0x28
   2c7b8:	mov	r3, #1
   2c7bc:	ldr	r4, [r5, #48]	; 0x30
   2c7c0:	str	r3, [sp]
   2c7c4:	mov	r3, #1
   2c7c8:	add	r2, r2, r1
   2c7cc:	add	r1, r5, #60	; 0x3c
   2c7d0:	blx	r4
   2c7d4:	mov	r1, r0
   2c7d8:	mvn	r0, #0
   2c7dc:	cmp	r1, #0
   2c7e0:	bne	2c814 <flatcc_builder_get_emit_context@@Base+0x80>
   2c7e4:	ldr	r0, [r5, #28]
   2c7e8:	ldr	r2, [r5, #60]	; 0x3c
   2c7ec:	ldr	r3, [r5, #64]	; 0x40
   2c7f0:	ldr	r1, [r5, #32]
   2c7f4:	add	r2, r2, r0
   2c7f8:	sub	r0, r3, r0
   2c7fc:	cmp	r0, r6
   2c800:	str	r2, [r5, #16]
   2c804:	movhi	r0, r6
   2c808:	str	r0, [r5, #24]
   2c80c:	mov	r0, #0
   2c810:	str	r6, [r1, #4]
   2c814:	sub	sp, fp, #16
   2c818:	pop	{r4, r5, r6, sl, fp, pc}

0002c81c <flatcc_emitter_recycle_page@@Base>:
   2c81c:	ldr	r3, [r0]
   2c820:	mov	r2, r0
   2c824:	mvn	r0, #0
   2c828:	cmp	r3, r1
   2c82c:	ldrne	r2, [r2, #4]
   2c830:	cmpne	r2, r1
   2c834:	bne	2c83c <flatcc_emitter_recycle_page@@Base+0x20>
   2c838:	bx	lr
   2c83c:	ldr	r0, [r1, #2944]	; 0xb80
   2c840:	ldr	r2, [r1, #2948]	; 0xb84
   2c844:	str	r2, [r0, #2948]	; 0xb84
   2c848:	ldr	r2, [r1, #2948]	; 0xb84
   2c84c:	str	r0, [r2, #2944]	; 0xb80
   2c850:	ldr	r0, [r3, #2948]	; 0xb84
   2c854:	str	r3, [r1, #2944]	; 0xb80
   2c858:	str	r0, [r1, #2948]	; 0xb84
   2c85c:	str	r1, [r0, #2944]	; 0xb80
   2c860:	ldr	r0, [r1, #2944]	; 0xb80
   2c864:	str	r1, [r0, #2948]	; 0xb84
   2c868:	mov	r0, #0
   2c86c:	bx	lr

0002c870 <flatcc_emitter_reset@@Base>:
   2c870:	push	{r4, sl, fp, lr}
   2c874:	add	fp, sp, #8
   2c878:	ldr	r1, [r0]
   2c87c:	cmp	r1, #0
   2c880:	beq	2c938 <flatcc_emitter_reset@@Base+0xc8>
   2c884:	mov	r4, r0
   2c888:	add	r2, r1, #1472	; 0x5c0
   2c88c:	mov	r0, #1472	; 0x5c0
   2c890:	mov	r3, #0
   2c894:	stmib	r4, {r1, r2}
   2c898:	str	r0, [r4, #12]
   2c89c:	str	r2, [r4, #16]
   2c8a0:	str	r0, [r4, #20]
   2c8a4:	movw	r0, #64064	; 0xfa40
   2c8a8:	movt	r0, #65535	; 0xffff
   2c8ac:	str	r0, [r1, #2952]	; 0xb88
   2c8b0:	ldr	r2, [r4, #32]
   2c8b4:	ldr	r0, [r4, #24]
   2c8b8:	cmp	r2, #0
   2c8bc:	moveq	r2, r0
   2c8c0:	streq	r0, [r4, #32]
   2c8c4:	str	r3, [r4, #24]
   2c8c8:	add	r2, r2, r2, lsl #1
   2c8cc:	lsr	r2, r2, #2
   2c8d0:	add	r0, r2, r0, lsr #2
   2c8d4:	str	r0, [r4, #32]
   2c8d8:	ldr	r2, [r4, #28]
   2c8dc:	cmp	r2, r0, lsl #1
   2c8e0:	bls	2c938 <flatcc_emitter_reset@@Base+0xc8>
   2c8e4:	mov	r2, r1
   2c8e8:	ldr	r0, [r2, #2944]!	; 0xb80
   2c8ec:	cmp	r0, r1
   2c8f0:	beq	2c938 <flatcc_emitter_reset@@Base+0xc8>
   2c8f4:	ldr	r3, [r0, #2944]	; 0xb80
   2c8f8:	str	r3, [r2]
   2c8fc:	ldr	r2, [r0, #2944]	; 0xb80
   2c900:	str	r1, [r2, #2948]	; 0xb84
   2c904:	bl	12aa4 <free@plt>
   2c908:	ldr	r0, [r4, #28]
   2c90c:	ldr	r1, [r4, #32]
   2c910:	sub	r0, r0, #2944	; 0xb80
   2c914:	cmp	r0, r1, lsl #1
   2c918:	str	r0, [r4, #28]
   2c91c:	popls	{r4, sl, fp, pc}
   2c920:	ldr	r1, [r4, #4]
   2c924:	ldr	r3, [r4]
   2c928:	mov	r2, r1
   2c92c:	ldr	r0, [r2, #2944]!	; 0xb80
   2c930:	cmp	r0, r3
   2c934:	bne	2c8f4 <flatcc_emitter_reset@@Base+0x84>
   2c938:	pop	{r4, sl, fp, pc}

0002c93c <flatcc_emitter_clear@@Base>:
   2c93c:	push	{r4, r5, r6, sl, fp, lr}
   2c940:	add	fp, sp, #16
   2c944:	ldr	r5, [r0]
   2c948:	cmp	r5, #0
   2c94c:	popeq	{r4, r5, r6, sl, fp, pc}
   2c950:	mov	r4, r0
   2c954:	ldr	r0, [r5, #2948]	; 0xb84
   2c958:	mov	r6, #0
   2c95c:	str	r6, [r0, #2944]	; 0xb80
   2c960:	b	2c970 <flatcc_emitter_clear@@Base+0x34>
   2c964:	mov	r5, r0
   2c968:	ldr	r0, [r0, #2948]	; 0xb84
   2c96c:	bl	12aa4 <free@plt>
   2c970:	ldr	r0, [r5, #2944]	; 0xb80
   2c974:	cmp	r0, #0
   2c978:	bne	2c964 <flatcc_emitter_clear@@Base+0x28>
   2c97c:	mov	r0, r5
   2c980:	bl	12aa4 <free@plt>
   2c984:	vmov.i32	q8, #0	; 0x00000000
   2c988:	add	r0, r4, #16
   2c98c:	vst1.32	{d16-d17}, [r0]
   2c990:	mov	r0, #32
   2c994:	vst1.32	{d16-d17}, [r4], r0
   2c998:	str	r6, [r4]
   2c99c:	pop	{r4, r5, r6, sl, fp, pc}

0002c9a0 <flatcc_emitter@@Base>:
   2c9a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c9a4:	add	fp, sp, #28
   2c9a8:	sub	sp, sp, #4
   2c9ac:	mov	r6, r0
   2c9b0:	mov	r7, r1
   2c9b4:	ldr	r0, [r0, #24]
   2c9b8:	ldr	r1, [fp, #8]
   2c9bc:	mov	r4, r2
   2c9c0:	cmn	r3, #1
   2c9c4:	mov	r9, r6
   2c9c8:	add	r0, r0, r1
   2c9cc:	str	r0, [r6, #24]
   2c9d0:	ble	2cb08 <flatcc_emitter@@Base+0x168>
   2c9d4:	ldr	r0, [r9, #20]!
   2c9d8:	cmp	r0, r1
   2c9dc:	bcs	2cc70 <flatcc_emitter@@Base+0x2d0>
   2c9e0:	mov	r8, #0
   2c9e4:	cmp	r4, #0
   2c9e8:	beq	2ccc8 <flatcc_emitter@@Base+0x328>
   2c9ec:	movw	sl, #64064	; 0xfa40
   2c9f0:	movt	sl, #65535	; 0xffff
   2c9f4:	ldr	r8, [r7, #4]
   2c9f8:	cmp	r8, #0
   2c9fc:	beq	2caf8 <flatcc_emitter@@Base+0x158>
   2ca00:	ldr	r9, [r7]
   2ca04:	cmp	r8, r0
   2ca08:	mov	r5, r8
   2ca0c:	bls	2cac4 <flatcc_emitter@@Base+0x124>
   2ca10:	mov	r5, r0
   2ca14:	cmp	r5, #0
   2ca18:	bne	2cac4 <flatcc_emitter@@Base+0x124>
   2ca1c:	ldr	r5, [r6, #4]
   2ca20:	cmp	r5, #0
   2ca24:	beq	2ca38 <flatcc_emitter@@Base+0x98>
   2ca28:	ldr	r0, [r5, #2944]	; 0xb80
   2ca2c:	ldr	r1, [r6]
   2ca30:	cmp	r0, r1
   2ca34:	bne	2ca70 <flatcc_emitter@@Base+0xd0>
   2ca38:	movw	r0, #2956	; 0xb8c
   2ca3c:	bl	12b10 <malloc@plt>
   2ca40:	cmp	r0, #0
   2ca44:	beq	2cc80 <flatcc_emitter@@Base+0x2e0>
   2ca48:	ldr	r1, [r6, #28]
   2ca4c:	cmp	r5, #0
   2ca50:	add	r1, r1, #2944	; 0xb80
   2ca54:	str	r1, [r6, #28]
   2ca58:	beq	2ca94 <flatcc_emitter@@Base+0xf4>
   2ca5c:	ldr	r1, [r6]
   2ca60:	str	r1, [r0, #2944]	; 0xb80
   2ca64:	str	r5, [r0, #2948]	; 0xb84
   2ca68:	str	r0, [r1, #2948]	; 0xb84
   2ca6c:	str	r0, [r5, #2944]	; 0xb80
   2ca70:	mov	r5, #2944	; 0xb80
   2ca74:	str	r0, [r6, #4]
   2ca78:	str	r0, [r6, #16]
   2ca7c:	str	r5, [r6, #20]
   2ca80:	ldr	r1, [r0, #2948]	; 0xb84
   2ca84:	ldr	r1, [r1, #2952]	; 0xb88
   2ca88:	add	r1, r1, #2944	; 0xb80
   2ca8c:	str	r1, [r0, #2952]	; 0xb88
   2ca90:	b	2cab8 <flatcc_emitter@@Base+0x118>
   2ca94:	mov	r5, #1472	; 0x5c0
   2ca98:	add	r1, r0, #1472	; 0x5c0
   2ca9c:	str	r0, [r6]
   2caa0:	stmib	r6, {r0, r1, r5}
   2caa4:	str	r1, [r6, #16]
   2caa8:	str	r5, [r6, #20]
   2caac:	str	r0, [r0, #2944]	; 0xb80
   2cab0:	str	r0, [r0, #2948]	; 0xb84
   2cab4:	str	sl, [r0, #2952]	; 0xb88
   2cab8:	cmp	r8, r5
   2cabc:	bhi	2ca14 <flatcc_emitter@@Base+0x74>
   2cac0:	mov	r5, r8
   2cac4:	ldr	r0, [r6, #16]
   2cac8:	mov	r1, r9
   2cacc:	mov	r2, r5
   2cad0:	bl	12ab0 <memcpy@plt>
   2cad4:	ldr	r0, [r6, #16]
   2cad8:	ldr	r1, [r6, #20]
   2cadc:	add	r9, r9, r5
   2cae0:	subs	r8, r8, r5
   2cae4:	add	r2, r0, r5
   2cae8:	sub	r0, r1, r5
   2caec:	str	r2, [r6, #16]
   2caf0:	str	r0, [r6, #20]
   2caf4:	bne	2ca04 <flatcc_emitter@@Base+0x64>
   2caf8:	subs	r4, r4, #1
   2cafc:	add	r7, r7, #8
   2cb00:	bne	2c9f4 <flatcc_emitter@@Base+0x54>
   2cb04:	b	2cc68 <flatcc_emitter@@Base+0x2c8>
   2cb08:	ldr	r0, [r9, #12]!
   2cb0c:	cmp	r0, r1
   2cb10:	bcs	2cc88 <flatcc_emitter@@Base+0x2e8>
   2cb14:	mov	r8, #0
   2cb18:	cmp	r4, #0
   2cb1c:	beq	2ccc8 <flatcc_emitter@@Base+0x328>
   2cb20:	add	r0, r7, r4, lsl #3
   2cb24:	movw	sl, #2952	; 0xb88
   2cb28:	ldr	r8, [r0, #-4]
   2cb2c:	sub	r1, r0, #8
   2cb30:	str	r1, [sp]
   2cb34:	cmp	r8, #0
   2cb38:	beq	2cc5c <flatcc_emitter@@Base+0x2bc>
   2cb3c:	ldr	r0, [sp]
   2cb40:	ldr	r0, [r0]
   2cb44:	add	r7, r0, r8
   2cb48:	ldr	r1, [r9]
   2cb4c:	b	2cc14 <flatcc_emitter@@Base+0x274>
   2cb50:	ldr	r5, [r6]
   2cb54:	cmp	r5, #0
   2cb58:	beq	2cb80 <flatcc_emitter@@Base+0x1e0>
   2cb5c:	ldr	r0, [r5, #2948]	; 0xb84
   2cb60:	ldr	r1, [r6, #4]
   2cb64:	cmp	r0, r1
   2cb68:	beq	2cb80 <flatcc_emitter@@Base+0x1e0>
   2cb6c:	ldr	r1, [r5, #2952]	; 0xb88
   2cb70:	mov	r2, r0
   2cb74:	sub	r1, r1, #2944	; 0xb80
   2cb78:	str	r1, [r2, #2952]!	; 0xb88
   2cb7c:	b	2cbbc <flatcc_emitter@@Base+0x21c>
   2cb80:	movw	r0, #2956	; 0xb8c
   2cb84:	bl	12b10 <malloc@plt>
   2cb88:	cmp	r0, #0
   2cb8c:	beq	2cc80 <flatcc_emitter@@Base+0x2e0>
   2cb90:	ldr	r1, [r6, #28]
   2cb94:	cmp	r5, #0
   2cb98:	add	r1, r1, #2944	; 0xb80
   2cb9c:	str	r1, [r6, #28]
   2cba0:	beq	2cbe4 <flatcc_emitter@@Base+0x244>
   2cba4:	ldr	r1, [r6, #4]
   2cba8:	add	r2, r0, sl
   2cbac:	str	r5, [r0, #2944]	; 0xb80
   2cbb0:	str	r1, [r0, #2948]	; 0xb84
   2cbb4:	str	r0, [r5, #2948]	; 0xb84
   2cbb8:	str	r0, [r1, #2944]	; 0xb80
   2cbbc:	str	r0, [r6]
   2cbc0:	add	r3, r0, #2944	; 0xb80
   2cbc4:	mov	r1, #2944	; 0xb80
   2cbc8:	str	r3, [r6, #8]
   2cbcc:	str	r1, [r6, #12]
   2cbd0:	ldr	r0, [r0, #2944]	; 0xb80
   2cbd4:	ldr	r0, [r0, #2952]	; 0xb88
   2cbd8:	sub	r0, r0, #2944	; 0xb80
   2cbdc:	str	r0, [r2]
   2cbe0:	b	2cc14 <flatcc_emitter@@Base+0x274>
   2cbe4:	add	r2, r0, #1472	; 0x5c0
   2cbe8:	mov	r1, #1472	; 0x5c0
   2cbec:	str	r0, [r6]
   2cbf0:	stmib	r6, {r0, r2}
   2cbf4:	str	r1, [r6, #12]
   2cbf8:	str	r2, [r6, #16]
   2cbfc:	movw	r2, #64064	; 0xfa40
   2cc00:	str	r1, [r6, #20]
   2cc04:	str	r0, [r0, #2944]	; 0xb80
   2cc08:	str	r0, [r0, #2948]	; 0xb84
   2cc0c:	movt	r2, #65535	; 0xffff
   2cc10:	str	r2, [r0, #2952]	; 0xb88
   2cc14:	cmp	r8, r1
   2cc18:	bls	2cc2c <flatcc_emitter@@Base+0x28c>
   2cc1c:	cmp	r1, #0
   2cc20:	mov	r5, r1
   2cc24:	beq	2cb50 <flatcc_emitter@@Base+0x1b0>
   2cc28:	b	2cc30 <flatcc_emitter@@Base+0x290>
   2cc2c:	mov	r5, r8
   2cc30:	sub	r0, r1, r5
   2cc34:	sub	r7, r7, r5
   2cc38:	mov	r2, r5
   2cc3c:	str	r0, [r6, #12]
   2cc40:	mov	r1, r7
   2cc44:	ldr	r0, [r6, #8]
   2cc48:	sub	r0, r0, r5
   2cc4c:	str	r0, [r6, #8]
   2cc50:	bl	12ab0 <memcpy@plt>
   2cc54:	subs	r8, r8, r5
   2cc58:	bne	2cb48 <flatcc_emitter@@Base+0x1a8>
   2cc5c:	ldr	r0, [sp]
   2cc60:	subs	r4, r4, #1
   2cc64:	bne	2cb28 <flatcc_emitter@@Base+0x188>
   2cc68:	mov	r8, #0
   2cc6c:	b	2ccc8 <flatcc_emitter@@Base+0x328>
   2cc70:	ldr	r5, [r6, #16]
   2cc74:	add	r2, r5, r1
   2cc78:	str	r2, [r6, #16]
   2cc7c:	b	2cc94 <flatcc_emitter@@Base+0x2f4>
   2cc80:	mvn	r8, #0
   2cc84:	b	2ccc8 <flatcc_emitter@@Base+0x328>
   2cc88:	ldr	r2, [r6, #8]
   2cc8c:	sub	r5, r2, r1
   2cc90:	str	r5, [r6, #8]
   2cc94:	sub	r0, r0, r1
   2cc98:	mov	r8, #0
   2cc9c:	cmp	r4, #0
   2cca0:	str	r0, [r9]
   2cca4:	beq	2ccc8 <flatcc_emitter@@Base+0x328>
   2cca8:	ldm	r7, {r1, r2}
   2ccac:	mov	r0, r5
   2ccb0:	bl	12ab0 <memcpy@plt>
   2ccb4:	ldr	r0, [r7, #4]
   2ccb8:	add	r7, r7, #8
   2ccbc:	subs	r4, r4, #1
   2ccc0:	add	r5, r5, r0
   2ccc4:	bne	2cca8 <flatcc_emitter@@Base+0x308>
   2ccc8:	mov	r0, r8
   2cccc:	sub	sp, fp, #28
   2ccd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002ccd4 <flatcc_emitter_copy_buffer@@Base>:
   2ccd4:	push	{r4, r5, r6, sl, fp, lr}
   2ccd8:	add	fp, sp, #16
   2ccdc:	mov	r3, r2
   2cce0:	ldr	r2, [r0, #24]
   2cce4:	mov	r5, #0
   2cce8:	cmp	r2, r3
   2ccec:	bhi	2cd88 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2ccf0:	mov	r4, r0
   2ccf4:	ldr	r0, [r0]
   2ccf8:	cmp	r0, #0
   2ccfc:	beq	2cd88 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2cd00:	mov	r6, r1
   2cd04:	ldr	r1, [r4, #4]
   2cd08:	cmp	r0, r1
   2cd0c:	beq	2cd78 <flatcc_emitter_copy_buffer@@Base+0xa4>
   2cd10:	ldr	r0, [r4, #12]
   2cd14:	ldr	r1, [r4, #8]
   2cd18:	rsb	r5, r0, #2944	; 0xb80
   2cd1c:	mov	r0, r6
   2cd20:	mov	r2, r5
   2cd24:	bl	12ab0 <memcpy@plt>
   2cd28:	ldm	r4, {r0, r1}
   2cd2c:	add	r5, r6, r5
   2cd30:	ldr	r6, [r0, #2944]	; 0xb80
   2cd34:	cmp	r6, r1
   2cd38:	beq	2cd60 <flatcc_emitter_copy_buffer@@Base+0x8c>
   2cd3c:	mov	r0, r5
   2cd40:	mov	r1, r6
   2cd44:	mov	r2, #2944	; 0xb80
   2cd48:	bl	12ab0 <memcpy@plt>
   2cd4c:	ldr	r6, [r6, #2944]	; 0xb80
   2cd50:	ldr	r0, [r4, #4]
   2cd54:	add	r5, r5, #2944	; 0xb80
   2cd58:	cmp	r6, r0
   2cd5c:	bne	2cd3c <flatcc_emitter_copy_buffer@@Base+0x68>
   2cd60:	ldr	r0, [r4, #20]
   2cd64:	mov	r1, r6
   2cd68:	rsb	r2, r0, #2944	; 0xb80
   2cd6c:	mov	r0, r5
   2cd70:	bl	12ab0 <memcpy@plt>
   2cd74:	b	2cd88 <flatcc_emitter_copy_buffer@@Base+0xb4>
   2cd78:	ldr	r1, [r4, #8]
   2cd7c:	mov	r0, r6
   2cd80:	bl	12ab0 <memcpy@plt>
   2cd84:	mov	r5, r6
   2cd88:	mov	r0, r5
   2cd8c:	pop	{r4, r5, r6, sl, fp, pc}

0002cd90 <grisu3_diy_fp_encode_double@@Base>:
   2cd90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cd94:	add	fp, sp, #28
   2cd98:	sub	sp, sp, #44	; 0x2c
   2cd9c:	mov	r5, r2
   2cda0:	mov	r2, r0
   2cda4:	mov	r0, #0
   2cda8:	mov	r9, r3
   2cdac:	mov	r3, r1
   2cdb0:	str	r0, [sp]
   2cdb4:	str	r0, [sp, #4]
   2cdb8:	add	r0, sp, #24
   2cdbc:	bl	2d16c <grisu3_diy_fp_encode_double@@Base+0x3dc>
   2cdc0:	sub	r0, r5, r9
   2cdc4:	ldr	r5, [fp, #8]
   2cdc8:	cmp	r5, #0
   2cdcc:	movwne	r5, #4
   2cdd0:	cmn	r0, #348	; 0x15c
   2cdd4:	blt	2d0cc <grisu3_diy_fp_encode_double@@Base+0x33c>
   2cdd8:	cmp	r0, #348	; 0x15c
   2cddc:	bge	2d0ec <grisu3_diy_fp_encode_double@@Base+0x35c>
   2cde0:	add	r1, r0, #348	; 0x15c
   2cde4:	movw	r6, #10608	; 0x2970
   2cde8:	asr	r2, r1, #31
   2cdec:	movt	r6, #3
   2cdf0:	add	r1, r1, r2, lsr #29
   2cdf4:	mvn	r2, #15
   2cdf8:	and	r1, r2, r1, lsl #1
   2cdfc:	ldr	r8, [r6, r1]!
   2ce00:	ldrsh	r4, [r6, #10]
   2ce04:	cmp	r0, r4
   2ce08:	blt	2d10c <grisu3_diy_fp_encode_double@@Base+0x37c>
   2ce0c:	add	r1, r4, #8
   2ce10:	cmp	r1, r0
   2ce14:	ble	2d12c <grisu3_diy_fp_encode_double@@Base+0x39c>
   2ce18:	ldr	r1, [sp, #32]
   2ce1c:	ldr	r2, [sp, #24]
   2ce20:	ldr	r3, [sp, #28]
   2ce24:	ldr	ip, [sp, #36]	; 0x24
   2ce28:	cmp	r0, r4
   2ce2c:	rsb	r7, r1, #0
   2ce30:	lsl	r5, r5, r7
   2ce34:	beq	2ce98 <grisu3_diy_fp_encode_double@@Base+0x108>
   2ce38:	mvn	r7, r4
   2ce3c:	add	r4, r0, r7
   2ce40:	cmp	r4, #7
   2ce44:	bcs	2d14c <grisu3_diy_fp_encode_double@@Base+0x3bc>
   2ce48:	movw	r0, #10496	; 0x2900
   2ce4c:	stm	sp, {r1, ip}
   2ce50:	movt	r0, #3
   2ce54:	ldr	r1, [r0, r4, lsl #4]!
   2ce58:	str	r1, [sp, #8]
   2ce5c:	ldmib	r0, {r1, r7}
   2ce60:	ldr	r0, [r0, #12]
   2ce64:	str	r0, [sp, #20]
   2ce68:	add	r0, sp, #24
   2ce6c:	str	r7, [sp, #16]
   2ce70:	str	r1, [sp, #12]
   2ce74:	bl	2d210 <grisu3_diy_fp_encode_double@@Base+0x480>
   2ce78:	add	r0, r9, r4
   2ce7c:	ldr	r2, [sp, #24]
   2ce80:	ldr	r3, [sp, #28]
   2ce84:	ldr	r1, [sp, #32]
   2ce88:	ldr	ip, [sp, #36]	; 0x24
   2ce8c:	add	r0, r0, #1
   2ce90:	cmp	r0, #19
   2ce94:	addgt	r5, r5, #4
   2ce98:	ldr	r0, [r6, #4]
   2ce9c:	ldrsh	r7, [r6, #8]
   2cea0:	stm	sp, {r1, ip}
   2cea4:	mov	r6, #0
   2cea8:	str	r8, [sp, #8]
   2ceac:	str	r6, [sp, #20]
   2ceb0:	str	r0, [sp, #12]
   2ceb4:	add	r0, sp, #24
   2ceb8:	str	r7, [sp, #16]
   2cebc:	bl	2d210 <grisu3_diy_fp_encode_double@@Base+0x480>
   2cec0:	add	r4, sp, #24
   2cec4:	ldm	r4, {r2, r3, r4}
   2cec8:	ldr	r0, [sp, #36]	; 0x24
   2cecc:	str	r0, [sp, #4]
   2ced0:	add	r0, sp, #24
   2ced4:	str	r4, [sp]
   2ced8:	bl	2d16c <grisu3_diy_fp_encode_double@@Base+0x3dc>
   2cedc:	add	r7, sp, #24
   2cee0:	mov	r0, #9
   2cee4:	cmp	r5, #0
   2cee8:	movw	lr, #64462	; 0xfbce
   2ceec:	ldm	r7, {r1, r3, r7}
   2cef0:	movweq	r0, #8
   2cef4:	movt	lr, #65535	; 0xffff
   2cef8:	add	r0, r0, r5
   2cefc:	sub	r2, r4, r7
   2cf00:	lsl	r8, r0, r2
   2cf04:	sub	r0, lr, #1
   2cf08:	cmp	r7, r0
   2cf0c:	bgt	2cf60 <grisu3_diy_fp_encode_double@@Base+0x1d0>
   2cf10:	mvn	r0, #1136	; 0x470
   2cf14:	mov	r6, #64	; 0x40
   2cf18:	cmp	r7, r0
   2cf1c:	blt	2cf2c <grisu3_diy_fp_encode_double@@Base+0x19c>
   2cf20:	sub	r6, lr, r7
   2cf24:	cmp	r6, #61	; 0x3d
   2cf28:	blt	2cf60 <grisu3_diy_fp_encode_double@@Base+0x1d0>
   2cf2c:	sub	r0, r6, #62	; 0x3e
   2cf30:	mov	r2, #9
   2cf34:	add	r8, r2, r8, asr r0
   2cf38:	lsr	r1, r1, r0
   2cf3c:	rsb	r2, r6, #94	; 0x5e
   2cf40:	add	r7, r0, r7
   2cf44:	orr	r1, r1, r3, lsl r2
   2cf48:	sub	r2, r6, #94	; 0x5e
   2cf4c:	mov	r6, #62	; 0x3e
   2cf50:	cmp	r2, #0
   2cf54:	lsrge	r1, r3, r2
   2cf58:	lsr	r3, r3, r0
   2cf5c:	movwge	r3, #0
   2cf60:	lsr	r0, r1, r6
   2cf64:	rsb	r2, r6, #32
   2cf68:	add	r5, r7, r6
   2cf6c:	mov	r7, #1
   2cf70:	orr	r2, r0, r3, lsl r2
   2cf74:	sub	r0, r6, #32
   2cf78:	cmp	r0, #0
   2cf7c:	lsrge	r2, r3, r0
   2cf80:	lsr	r0, r3, r6
   2cf84:	sub	r3, r6, #1
   2cf88:	lsl	r7, r7, r3
   2cf8c:	sub	r3, r6, #33	; 0x21
   2cf90:	movwge	r0, #0
   2cf94:	cmp	r3, #0
   2cf98:	movwge	r7, #0
   2cf9c:	add	sl, r8, r7, lsl #3
   2cfa0:	cmp	r6, sl
   2cfa4:	blt	2cfc4 <grisu3_diy_fp_encode_double@@Base+0x234>
   2cfa8:	adds	r2, r2, #1
   2cfac:	adc	r0, r0, #0
   2cfb0:	tst	r0, #2097152	; 0x200000
   2cfb4:	beq	2cfc4 <grisu3_diy_fp_encode_double@@Base+0x234>
   2cfb8:	lsrs	r0, r0, #1
   2cfbc:	add	r5, r5, #1
   2cfc0:	rrx	r2, r2
   2cfc4:	and	r4, r7, r1
   2cfc8:	cmp	r0, #2097152	; 0x200000
   2cfcc:	bcc	2cff0 <grisu3_diy_fp_encode_double@@Base+0x260>
   2cfd0:	mov	r3, #0
   2cfd4:	lsrs	r1, r0, #1
   2cfd8:	add	r5, r5, #1
   2cfdc:	rrx	r2, r2
   2cfe0:	cmp	r3, r0, lsr #22
   2cfe4:	mov	r0, r1
   2cfe8:	bne	2cfd4 <grisu3_diy_fp_encode_double@@Base+0x244>
   2cfec:	b	2cff4 <grisu3_diy_fp_encode_double@@Base+0x264>
   2cff0:	mov	r1, r0
   2cff4:	ldr	ip, [fp, #12]
   2cff8:	lsl	r9, r7, #3
   2cffc:	lsl	r6, r4, #3
   2d000:	vmov.i32	d16, #0	; 0x00000000
   2d004:	cmp	r5, lr
   2d008:	blt	2d0a0 <grisu3_diy_fp_encode_double@@Base+0x310>
   2d00c:	and	r0, r1, #1048576	; 0x100000
   2d010:	mov	r3, #1
   2d014:	cmp	r5, lr
   2d018:	eor	r7, r3, r0, lsr #20
   2d01c:	beq	2d060 <grisu3_diy_fp_encode_double@@Base+0x2d0>
   2d020:	cmp	r0, #0
   2d024:	bne	2d060 <grisu3_diy_fp_encode_double@@Base+0x2d0>
   2d028:	mov	r3, #1
   2d02c:	lsl	r0, r1, #1
   2d030:	and	r1, r1, #524288	; 0x80000
   2d034:	sub	r4, r5, #1
   2d038:	cmn	r5, #1072	; 0x430
   2d03c:	orr	r0, r0, r2, lsr #31
   2d040:	eor	r7, r3, r1, lsr #19
   2d044:	lsl	r2, r2, #1
   2d048:	blt	2d068 <grisu3_diy_fp_encode_double@@Base+0x2d8>
   2d04c:	cmp	r1, #0
   2d050:	mov	r1, r0
   2d054:	mov	r5, r4
   2d058:	beq	2d02c <grisu3_diy_fp_encode_double@@Base+0x29c>
   2d05c:	b	2d068 <grisu3_diy_fp_encode_double@@Base+0x2d8>
   2d060:	mov	r4, r5
   2d064:	mov	r0, r1
   2d068:	cmp	r4, lr
   2d06c:	bne	2d080 <grisu3_diy_fp_encode_double@@Base+0x2f0>
   2d070:	mov	r1, #0
   2d074:	cmp	r7, #0
   2d078:	mov	r3, #0
   2d07c:	bne	2d090 <grisu3_diy_fp_encode_double@@Base+0x300>
   2d080:	movw	r1, #0
   2d084:	movt	r1, #17200	; 0x4330
   2d088:	add	r3, r1, r4, lsl #20
   2d08c:	mov	r1, #0
   2d090:	bfc	r0, #20, #12
   2d094:	orr	r1, r1, r2
   2d098:	orr	r0, r3, r0
   2d09c:	vmov	d16, r1, r0
   2d0a0:	cmp	r6, sl
   2d0a4:	mov	r1, #0
   2d0a8:	sub	r2, r9, r8
   2d0ac:	mov	r0, #0
   2d0b0:	vstr	d16, [ip]
   2d0b4:	movwge	r1, #1
   2d0b8:	cmp	r2, r6
   2d0bc:	movwge	r0, #1
   2d0c0:	orr	r0, r1, r0
   2d0c4:	sub	sp, fp, #28
   2d0c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d0cc:	movw	r0, #14179	; 0x3763
   2d0d0:	movw	r1, #12680	; 0x3188
   2d0d4:	movw	r3, #14210	; 0x3782
   2d0d8:	mov	r2, #80	; 0x50
   2d0dc:	movt	r0, #3
   2d0e0:	movt	r1, #3
   2d0e4:	movt	r3, #3
   2d0e8:	bl	12bc4 <__assert_fail@plt>
   2d0ec:	movw	r0, #14267	; 0x37bb
   2d0f0:	movw	r1, #12680	; 0x3188
   2d0f4:	movw	r3, #14210	; 0x3782
   2d0f8:	mov	r2, #81	; 0x51
   2d0fc:	movt	r0, #3
   2d100:	movt	r1, #3
   2d104:	movt	r3, #3
   2d108:	bl	12bc4 <__assert_fail@plt>
   2d10c:	movw	r0, #14310	; 0x37e6
   2d110:	movw	r1, #12680	; 0x3188
   2d114:	movw	r3, #14210	; 0x3782
   2d118:	mov	r2, #88	; 0x58
   2d11c:	movt	r0, #3
   2d120:	movt	r1, #3
   2d124:	movt	r3, #3
   2d128:	bl	12bc4 <__assert_fail@plt>
   2d12c:	movw	r0, #14325	; 0x37f5
   2d130:	movw	r1, #12680	; 0x3188
   2d134:	movw	r3, #14210	; 0x3782
   2d138:	mov	r2, #89	; 0x59
   2d13c:	movt	r0, #3
   2d140:	movt	r1, #3
   2d144:	movt	r3, #3
   2d148:	bl	12bc4 <__assert_fail@plt>
   2d14c:	movw	r0, #12652	; 0x316c
   2d150:	movw	r1, #12680	; 0x3188
   2d154:	movw	r3, #12767	; 0x31df
   2d158:	mov	r2, #185	; 0xb9
   2d15c:	movt	r0, #3
   2d160:	movt	r1, #3
   2d164:	movt	r3, #3
   2d168:	bl	12bc4 <__assert_fail@plt>
   2d16c:	push	{r4, sl, fp, lr}
   2d170:	add	fp, sp, #8
   2d174:	orrs	r1, r2, r3
   2d178:	beq	2d1f0 <grisu3_diy_fp_encode_double@@Base+0x460>
   2d17c:	ldr	ip, [fp, #12]
   2d180:	ldr	r1, [fp, #8]
   2d184:	mov	r4, #0
   2d188:	cmp	r4, r3, lsr #22
   2d18c:	bne	2d1a8 <grisu3_diy_fp_encode_double@@Base+0x418>
   2d190:	lsl	r3, r3, #10
   2d194:	sub	r1, r1, #10
   2d198:	orr	r3, r3, r2, lsr #22
   2d19c:	lsl	r2, r2, #10
   2d1a0:	cmp	r3, #4194304	; 0x400000
   2d1a4:	bcc	2d190 <grisu3_diy_fp_encode_double@@Base+0x400>
   2d1a8:	cmp	r3, #0
   2d1ac:	blt	2d1d8 <grisu3_diy_fp_encode_double@@Base+0x448>
   2d1b0:	mvn	lr, #0
   2d1b4:	lsl	r3, r3, #1
   2d1b8:	lsl	r4, r2, #1
   2d1bc:	sub	r1, r1, #1
   2d1c0:	orr	r3, r3, r2, lsr #31
   2d1c4:	subs	r2, lr, r2, lsl #1
   2d1c8:	sbcs	r2, lr, r3
   2d1cc:	mov	r2, r4
   2d1d0:	blt	2d1b4 <grisu3_diy_fp_encode_double@@Base+0x424>
   2d1d4:	b	2d1dc <grisu3_diy_fp_encode_double@@Base+0x44c>
   2d1d8:	mov	r4, r2
   2d1dc:	str	r4, [r0]
   2d1e0:	str	r3, [r0, #4]
   2d1e4:	str	r1, [r0, #8]
   2d1e8:	str	ip, [r0, #12]
   2d1ec:	pop	{r4, sl, fp, pc}
   2d1f0:	movw	r0, #14027	; 0x36cb
   2d1f4:	movw	r1, #14036	; 0x36d4
   2d1f8:	movw	r3, #14122	; 0x372a
   2d1fc:	mov	r2, #260	; 0x104
   2d200:	movt	r0, #3
   2d204:	movt	r1, #3
   2d208:	movt	r3, #3
   2d20c:	bl	12bc4 <__assert_fail@plt>
   2d210:	push	{r4, r5, fp, lr}
   2d214:	add	fp, sp, #8
   2d218:	ldr	ip, [fp, #24]
   2d21c:	ldr	r1, [fp, #8]
   2d220:	mov	r5, #0
   2d224:	add	r1, r1, ip
   2d228:	ldr	ip, [fp, #16]
   2d22c:	add	r1, r1, #64	; 0x40
   2d230:	str	r1, [r0, #8]
   2d234:	umull	r1, lr, ip, r2
   2d238:	umull	ip, r1, ip, r3
   2d23c:	adds	lr, ip, lr
   2d240:	ldr	ip, [fp, #20]
   2d244:	adc	r5, r5, #0
   2d248:	umull	r2, r4, ip, r2
   2d24c:	adds	r2, lr, r2
   2d250:	umaal	r1, r4, ip, r3
   2d254:	adc	r5, r5, #0
   2d258:	adds	r2, r2, #-2147483648	; 0x80000000
   2d25c:	adc	r2, r5, #0
   2d260:	adds	r1, r1, r2
   2d264:	str	r1, [r0]
   2d268:	adc	r1, r4, #0
   2d26c:	str	r1, [r0, #4]
   2d270:	pop	{r4, r5, fp, pc}

0002d274 <flatcc_json_parser_error_string@@Base>:
   2d274:	cmp	r0, #34	; 0x22
   2d278:	movwhi	r0, #13477	; 0x34a5
   2d27c:	movthi	r0, #3
   2d280:	bxhi	lr
   2d284:	movw	r1, #12512	; 0x30e0
   2d288:	movt	r1, #3
   2d28c:	ldr	r0, [r1, r0, lsl #2]
   2d290:	bx	lr

0002d294 <flatcc_json_parser_set_error@@Base>:
   2d294:	mov	ip, r2
   2d298:	ldr	r2, [r0, #24]
   2d29c:	cmp	r2, #0
   2d2a0:	bne	2d2bc <flatcc_json_parser_set_error@@Base+0x28>
   2d2a4:	str	r1, [r0, #36]	; 0x24
   2d2a8:	add	r1, r1, #1
   2d2ac:	ldr	r2, [r0, #4]
   2d2b0:	sub	r1, r1, r2
   2d2b4:	str	r1, [r0, #20]
   2d2b8:	str	r3, [r0, #24]
   2d2bc:	mov	r0, ip
   2d2c0:	bx	lr

0002d2c4 <flatcc_json_parser_string_part@@Base>:
   2d2c4:	cmp	r1, r2
   2d2c8:	beq	2d2f4 <flatcc_json_parser_string_part@@Base+0x30>
   2d2cc:	ldrb	r3, [r1]
   2d2d0:	cmp	r3, #32
   2d2d4:	bcc	2d328 <flatcc_json_parser_string_part@@Base+0x64>
   2d2d8:	cmp	r3, #34	; 0x22
   2d2dc:	cmpne	r3, #92	; 0x5c
   2d2e0:	beq	2d320 <flatcc_json_parser_string_part@@Base+0x5c>
   2d2e4:	add	r1, r1, #1
   2d2e8:	cmp	r2, r1
   2d2ec:	bne	2d2cc <flatcc_json_parser_string_part@@Base+0x8>
   2d2f0:	mov	r1, r2
   2d2f4:	ldr	r3, [r0, #24]
   2d2f8:	cmp	r3, #0
   2d2fc:	bne	2d31c <flatcc_json_parser_string_part@@Base+0x58>
   2d300:	mov	ip, #20
   2d304:	str	r1, [r0, #36]	; 0x24
   2d308:	add	r1, r1, #1
   2d30c:	ldr	r3, [r0, #4]
   2d310:	sub	r1, r1, r3
   2d314:	str	r1, [r0, #20]
   2d318:	str	ip, [r0, #24]
   2d31c:	mov	r1, r2
   2d320:	mov	r0, r1
   2d324:	bx	lr
   2d328:	ldr	r3, [r0, #24]
   2d32c:	cmp	r3, #0
   2d330:	bne	2d31c <flatcc_json_parser_string_part@@Base+0x58>
   2d334:	mov	ip, #17
   2d338:	b	2d304 <flatcc_json_parser_string_part@@Base+0x40>

0002d33c <flatcc_json_parser_space_ext@@Base>:
   2d33c:	mov	ip, r2
   2d340:	cmp	r1, r2
   2d344:	beq	2d410 <flatcc_json_parser_space_ext@@Base+0xd4>
   2d348:	ldrb	r3, [r1]
   2d34c:	cmp	r3, #32
   2d350:	bne	2d3a0 <flatcc_json_parser_space_ext@@Base+0x64>
   2d354:	add	r1, r1, #1
   2d358:	cmp	r1, ip
   2d35c:	bne	2d348 <flatcc_json_parser_space_ext@@Base+0xc>
   2d360:	b	2d410 <flatcc_json_parser_space_ext@@Base+0xd4>
   2d364:	sub	r2, ip, r1
   2d368:	mov	r3, #0
   2d36c:	cmp	r2, #2
   2d370:	ldrbge	r2, [r1, #1]
   2d374:	subge	r2, r2, #10
   2d378:	clzge	r2, r2
   2d37c:	lsrge	r3, r2, #5
   2d380:	add	r1, r1, r3
   2d384:	add	r1, r1, #1
   2d388:	str	r1, [r0, #4]
   2d38c:	ldr	r2, [r0, #16]
   2d390:	add	r2, r2, #1
   2d394:	str	r2, [r0, #16]
   2d398:	b	2d3a0 <flatcc_json_parser_space_ext@@Base+0x64>
   2d39c:	add	r1, r1, #1
   2d3a0:	cmp	r1, ip
   2d3a4:	beq	2d410 <flatcc_json_parser_space_ext@@Base+0xd4>
   2d3a8:	ldrb	r3, [r1]
   2d3ac:	cmp	r3, #32
   2d3b0:	bhi	2d40c <flatcc_json_parser_space_ext@@Base+0xd0>
   2d3b4:	cmp	r3, #12
   2d3b8:	bgt	2d3d0 <flatcc_json_parser_space_ext@@Base+0x94>
   2d3bc:	cmp	r3, #9
   2d3c0:	beq	2d39c <flatcc_json_parser_space_ext@@Base+0x60>
   2d3c4:	cmp	r3, #10
   2d3c8:	beq	2d384 <flatcc_json_parser_space_ext@@Base+0x48>
   2d3cc:	b	2d3e0 <flatcc_json_parser_space_ext@@Base+0xa4>
   2d3d0:	cmp	r3, #13
   2d3d4:	beq	2d364 <flatcc_json_parser_space_ext@@Base+0x28>
   2d3d8:	cmp	r3, #32
   2d3dc:	beq	2d358 <flatcc_json_parser_space_ext@@Base+0x1c>
   2d3e0:	ldr	r2, [r0, #24]
   2d3e4:	cmp	r2, #0
   2d3e8:	bne	2d410 <flatcc_json_parser_space_ext@@Base+0xd4>
   2d3ec:	str	r1, [r0, #36]	; 0x24
   2d3f0:	add	r1, r1, #1
   2d3f4:	mov	r2, #5
   2d3f8:	ldr	r3, [r0, #4]
   2d3fc:	sub	r1, r1, r3
   2d400:	str	r1, [r0, #20]
   2d404:	str	r2, [r0, #24]
   2d408:	b	2d410 <flatcc_json_parser_space_ext@@Base+0xd4>
   2d40c:	mov	ip, r1
   2d410:	mov	r0, ip
   2d414:	bx	lr

0002d418 <flatcc_json_parser_string_escape@@Base>:
   2d418:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d41c:	add	fp, sp, #24
   2d420:	sub	r7, r2, r1
   2d424:	cmp	r7, #2
   2d428:	blt	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d42c:	ldrb	r6, [r1]
   2d430:	cmp	r6, #92	; 0x5c
   2d434:	bne	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d438:	ldrb	r6, [r1, #1]
   2d43c:	cmp	r6, #97	; 0x61
   2d440:	bgt	2d464 <flatcc_json_parser_string_escape@@Base+0x4c>
   2d444:	cmp	r6, #34	; 0x22
   2d448:	beq	2d4c4 <flatcc_json_parser_string_escape@@Base+0xac>
   2d44c:	cmp	r6, #47	; 0x2f
   2d450:	beq	2d4cc <flatcc_json_parser_string_escape@@Base+0xb4>
   2d454:	cmp	r6, #92	; 0x5c
   2d458:	bne	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d45c:	movw	r0, #23553	; 0x5c01
   2d460:	b	2d550 <flatcc_json_parser_string_escape@@Base+0x138>
   2d464:	sub	r5, r6, #110	; 0x6e
   2d468:	cmp	r5, #10
   2d46c:	bhi	2d4ac <flatcc_json_parser_string_escape@@Base+0x94>
   2d470:	add	r6, pc, #0
   2d474:	ldr	pc, [r6, r5, lsl #2]
   2d478:	andeq	sp, r2, r4, lsr #9
   2d47c:	andeq	sp, r2, r8, lsl r5
   2d480:	andeq	sp, r2, r8, lsl r5
   2d484:	andeq	sp, r2, r8, lsl r5
   2d488:	ldrdeq	sp, [r2], -r4
   2d48c:	andeq	sp, r2, r8, lsl r5
   2d490:	ldrdeq	sp, [r2], -ip
   2d494:	andeq	sp, r2, r4, ror #9
   2d498:	andeq	sp, r2, r8, lsl r5
   2d49c:	andeq	sp, r2, r8, lsl r5
   2d4a0:	andeq	sp, r2, r8, lsl #10
   2d4a4:	movw	r0, #2561	; 0xa01
   2d4a8:	b	2d550 <flatcc_json_parser_string_escape@@Base+0x138>
   2d4ac:	cmp	r6, #98	; 0x62
   2d4b0:	beq	2d54c <flatcc_json_parser_string_escape@@Base+0x134>
   2d4b4:	cmp	r6, #102	; 0x66
   2d4b8:	bne	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d4bc:	movw	r0, #3073	; 0xc01
   2d4c0:	b	2d550 <flatcc_json_parser_string_escape@@Base+0x138>
   2d4c4:	movw	r0, #8705	; 0x2201
   2d4c8:	b	2d550 <flatcc_json_parser_string_escape@@Base+0x138>
   2d4cc:	movw	r0, #12033	; 0x2f01
   2d4d0:	b	2d550 <flatcc_json_parser_string_escape@@Base+0x138>
   2d4d4:	movw	r0, #3329	; 0xd01
   2d4d8:	b	2d550 <flatcc_json_parser_string_escape@@Base+0x138>
   2d4dc:	movw	r0, #2305	; 0x901
   2d4e0:	b	2d550 <flatcc_json_parser_string_escape@@Base+0x138>
   2d4e4:	cmp	r7, #5
   2d4e8:	ble	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d4ec:	ldrb	r7, [r1, #2]
   2d4f0:	sub	r6, r7, #48	; 0x30
   2d4f4:	uxtb	r6, r6
   2d4f8:	cmp	r6, #9
   2d4fc:	bhi	2d57c <flatcc_json_parser_string_escape@@Base+0x164>
   2d500:	lsl	ip, r7, #12
   2d504:	b	2d59c <flatcc_json_parser_string_escape@@Base+0x184>
   2d508:	mov	r6, #1
   2d50c:	cmp	r7, #3
   2d510:	strb	r6, [r3]
   2d514:	bgt	2d560 <flatcc_json_parser_string_escape@@Base+0x148>
   2d518:	mov	r7, #0
   2d51c:	strb	r7, [r3]
   2d520:	ldr	r3, [r0, #24]
   2d524:	cmp	r3, #0
   2d528:	bne	2d558 <flatcc_json_parser_string_escape@@Base+0x140>
   2d52c:	str	r1, [r0, #36]	; 0x24
   2d530:	add	r1, r1, #1
   2d534:	mov	r3, #18
   2d538:	ldr	r7, [r0, #4]
   2d53c:	sub	r1, r1, r7
   2d540:	str	r1, [r0, #20]
   2d544:	str	r3, [r0, #24]
   2d548:	b	2d558 <flatcc_json_parser_string_escape@@Base+0x140>
   2d54c:	movw	r0, #2049	; 0x801
   2d550:	strh	r0, [r3]
   2d554:	add	r2, r1, #2
   2d558:	mov	r0, r2
   2d55c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2d560:	ldrb	r7, [r1, #2]
   2d564:	sub	r6, r7, #48	; 0x30
   2d568:	uxtb	r6, r6
   2d56c:	cmp	r6, #9
   2d570:	bhi	2d5b8 <flatcc_json_parser_string_escape@@Base+0x1a0>
   2d574:	lsl	r7, r7, #4
   2d578:	b	2d5d4 <flatcc_json_parser_string_escape@@Base+0x1bc>
   2d57c:	orr	r6, r7, #32
   2d580:	sub	r6, r6, #97	; 0x61
   2d584:	uxtb	r6, r6
   2d588:	cmp	r6, #5
   2d58c:	bhi	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d590:	movw	r6, #36864	; 0x9000
   2d594:	movt	r6, #65535	; 0xffff
   2d598:	add	ip, r6, r7, lsl #12
   2d59c:	ldrb	lr, [r1, #3]
   2d5a0:	sub	r4, lr, #48	; 0x30
   2d5a4:	uxtb	r4, r4
   2d5a8:	cmp	r4, #10
   2d5ac:	bcs	2d610 <flatcc_json_parser_string_escape@@Base+0x1f8>
   2d5b0:	mov	r8, #53248	; 0xd000
   2d5b4:	b	2d628 <flatcc_json_parser_string_escape@@Base+0x210>
   2d5b8:	orr	r6, r7, #32
   2d5bc:	sub	r6, r6, #97	; 0x61
   2d5c0:	uxtb	r6, r6
   2d5c4:	cmp	r6, #5
   2d5c8:	bhi	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d5cc:	mvn	r6, #111	; 0x6f
   2d5d0:	add	r7, r6, r7, lsl #4
   2d5d4:	ldrb	r5, [r1, #3]
   2d5d8:	sub	r6, r5, #48	; 0x30
   2d5dc:	uxtb	r4, r6
   2d5e0:	cmp	r4, #10
   2d5e4:	bcc	2d600 <flatcc_json_parser_string_escape@@Base+0x1e8>
   2d5e8:	orr	r6, r5, #32
   2d5ec:	sub	r5, r6, #97	; 0x61
   2d5f0:	uxtb	r5, r5
   2d5f4:	cmp	r5, #5
   2d5f8:	bhi	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d5fc:	sub	r6, r6, #87	; 0x57
   2d600:	orr	r0, r6, r7
   2d604:	add	r2, r1, #4
   2d608:	strb	r0, [r3, #1]
   2d60c:	b	2d558 <flatcc_json_parser_string_escape@@Base+0x140>
   2d610:	orr	lr, lr, #32
   2d614:	mov	r8, #43264	; 0xa900
   2d618:	sub	r4, lr, #97	; 0x61
   2d61c:	uxtb	r4, r4
   2d620:	cmp	r4, #6
   2d624:	bcs	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d628:	ldrb	r5, [r1, #4]
   2d62c:	sub	r4, r5, #48	; 0x30
   2d630:	uxtb	r4, r4
   2d634:	cmp	r4, #10
   2d638:	bcs	2d644 <flatcc_json_parser_string_escape@@Base+0x22c>
   2d63c:	mov	r9, #64768	; 0xfd00
   2d640:	b	2d65c <flatcc_json_parser_string_escape@@Base+0x244>
   2d644:	orr	r5, r5, #32
   2d648:	movw	r9, #64144	; 0xfa90
   2d64c:	sub	r4, r5, #97	; 0x61
   2d650:	uxtb	r4, r4
   2d654:	cmp	r4, #6
   2d658:	bcs	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d65c:	ldrb	r7, [r1, #5]
   2d660:	sub	r4, r7, #48	; 0x30
   2d664:	uxtb	r4, r4
   2d668:	cmp	r4, #10
   2d66c:	bcs	2d67c <flatcc_json_parser_string_escape@@Base+0x264>
   2d670:	mvn	r0, #86	; 0x56
   2d674:	add	r4, r0, #39	; 0x27
   2d678:	b	2d694 <flatcc_json_parser_string_escape@@Base+0x27c>
   2d67c:	orr	r7, r7, #32
   2d680:	movw	r4, #65449	; 0xffa9
   2d684:	sub	r6, r7, #97	; 0x61
   2d688:	uxtb	r6, r6
   2d68c:	cmp	r6, #6
   2d690:	bcs	2d518 <flatcc_json_parser_string_escape@@Base+0x100>
   2d694:	add	r0, r8, lr, lsl #8
   2d698:	add	r2, r9, r5, lsl #4
   2d69c:	orr	r0, r0, ip
   2d6a0:	orr	r0, r0, r2
   2d6a4:	add	r2, r4, r7
   2d6a8:	orr	r0, r0, r2
   2d6ac:	uxth	r7, r0
   2d6b0:	cmp	r7, #127	; 0x7f
   2d6b4:	bhi	2d6c4 <flatcc_json_parser_string_escape@@Base+0x2ac>
   2d6b8:	mov	r2, #1
   2d6bc:	strb	r2, [r3]
   2d6c0:	b	2d718 <flatcc_json_parser_string_escape@@Base+0x300>
   2d6c4:	and	r2, r0, #63488	; 0xf800
   2d6c8:	mov	r6, #0
   2d6cc:	cmp	r6, r2, lsr #11
   2d6d0:	bne	2d6ec <flatcc_json_parser_string_escape@@Base+0x2d4>
   2d6d4:	mov	r7, #192	; 0xc0
   2d6d8:	mov	r2, #2
   2d6dc:	orr	r7, r7, r0, lsr #6
   2d6e0:	strb	r2, [r3]
   2d6e4:	strb	r7, [r3, #1]
   2d6e8:	b	2d710 <flatcc_json_parser_string_escape@@Base+0x2f8>
   2d6ec:	mov	r6, #224	; 0xe0
   2d6f0:	mov	r2, #3
   2d6f4:	orr	r6, r6, r7, lsr #12
   2d6f8:	strb	r2, [r3]
   2d6fc:	lsr	r7, r7, #6
   2d700:	strb	r6, [r3, #1]
   2d704:	mov	r6, #2
   2d708:	bfi	r7, r6, #6, #26
   2d70c:	strb	r7, [r3, #2]
   2d710:	mvn	r7, #-67108863	; 0xfc000001
   2d714:	bfi	r0, r7, #6, #26
   2d718:	strb	r0, [r3, r2]
   2d71c:	add	r2, r1, #6
   2d720:	b	2d558 <flatcc_json_parser_string_escape@@Base+0x140>

0002d724 <flatcc_json_parser_skip_constant@@Base>:
   2d724:	push	{r4, r5, r6, sl, fp, lr}
   2d728:	add	fp, sp, #16
   2d72c:	cmp	r1, r2
   2d730:	beq	2d7e0 <flatcc_json_parser_skip_constant@@Base+0xbc>
   2d734:	mov	r4, r2
   2d738:	mov	r5, r0
   2d73c:	ldrsb	r0, [r1]
   2d740:	mov	r6, r1
   2d744:	cmp	r0, #0
   2d748:	blt	2d75c <flatcc_json_parser_skip_constant@@Base+0x38>
   2d74c:	uxtb	r0, r0
   2d750:	cmp	r0, #95	; 0x5f
   2d754:	cmpne	r0, #46	; 0x2e
   2d758:	bne	2d76c <flatcc_json_parser_skip_constant@@Base+0x48>
   2d75c:	add	r1, r6, #1
   2d760:	cmp	r1, r4
   2d764:	bne	2d73c <flatcc_json_parser_skip_constant@@Base+0x18>
   2d768:	b	2d7d8 <flatcc_json_parser_skip_constant@@Base+0xb4>
   2d76c:	sub	r1, r0, #48	; 0x30
   2d770:	uxtb	r1, r1
   2d774:	cmp	r1, #9
   2d778:	bls	2d75c <flatcc_json_parser_skip_constant@@Base+0x38>
   2d77c:	orr	r1, r0, #32
   2d780:	sub	r1, r1, #97	; 0x61
   2d784:	uxtb	r1, r1
   2d788:	cmp	r1, #25
   2d78c:	bls	2d75c <flatcc_json_parser_skip_constant@@Base+0x38>
   2d790:	sub	r1, r4, r6
   2d794:	cmp	r1, #2
   2d798:	blt	2d7b8 <flatcc_json_parser_skip_constant@@Base+0x94>
   2d79c:	cmp	r0, #32
   2d7a0:	bhi	2d7e4 <flatcc_json_parser_skip_constant@@Base+0xc0>
   2d7a4:	bne	2d7b8 <flatcc_json_parser_skip_constant@@Base+0x94>
   2d7a8:	mov	r1, r6
   2d7ac:	ldrb	r0, [r1, #1]!
   2d7b0:	cmp	r0, #32
   2d7b4:	bhi	2d760 <flatcc_json_parser_skip_constant@@Base+0x3c>
   2d7b8:	mov	r0, r5
   2d7bc:	mov	r1, r6
   2d7c0:	mov	r2, r4
   2d7c4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2d7c8:	mov	r1, r0
   2d7cc:	cmp	r0, r6
   2d7d0:	bne	2d760 <flatcc_json_parser_skip_constant@@Base+0x3c>
   2d7d4:	b	2d7e4 <flatcc_json_parser_skip_constant@@Base+0xc0>
   2d7d8:	mov	r6, r4
   2d7dc:	b	2d7e4 <flatcc_json_parser_skip_constant@@Base+0xc0>
   2d7e0:	mov	r6, r1
   2d7e4:	mov	r0, r6
   2d7e8:	pop	{r4, r5, r6, sl, fp, pc}

0002d7ec <flatcc_json_parser_match_constant@@Base>:
   2d7ec:	push	{r4, r5, r6, r7, fp, lr}
   2d7f0:	add	fp, sp, #16
   2d7f4:	ldr	r7, [fp, #8]
   2d7f8:	mov	r4, r1
   2d7fc:	sub	r1, r2, r1
   2d800:	cmp	r1, r3
   2d804:	ble	2d904 <flatcc_json_parser_match_constant@@Base+0x118>
   2d808:	ldr	r1, [r0, #12]
   2d80c:	mov	r5, r2
   2d810:	add	r6, r4, r3
   2d814:	cmp	r1, #0
   2d818:	beq	2d89c <flatcc_json_parser_match_constant@@Base+0xb0>
   2d81c:	sub	r1, r5, r6
   2d820:	cmp	r1, #2
   2d824:	blt	2d84c <flatcc_json_parser_match_constant@@Base+0x60>
   2d828:	ldrb	r1, [r6]
   2d82c:	mov	r2, r6
   2d830:	cmp	r1, #32
   2d834:	bhi	2d85c <flatcc_json_parser_match_constant@@Base+0x70>
   2d838:	bne	2d84c <flatcc_json_parser_match_constant@@Base+0x60>
   2d83c:	mov	r2, r6
   2d840:	ldrb	r1, [r2, #1]!
   2d844:	cmp	r1, #32
   2d848:	bhi	2d85c <flatcc_json_parser_match_constant@@Base+0x70>
   2d84c:	mov	r1, r6
   2d850:	mov	r2, r5
   2d854:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2d858:	mov	r2, r0
   2d85c:	cmp	r2, r5
   2d860:	beq	2d914 <flatcc_json_parser_match_constant@@Base+0x128>
   2d864:	cmp	r2, r6
   2d868:	beq	2d924 <flatcc_json_parser_match_constant@@Base+0x138>
   2d86c:	ldrsb	r0, [r2]
   2d870:	cmp	r0, #95	; 0x5f
   2d874:	beq	2d894 <flatcc_json_parser_match_constant@@Base+0xa8>
   2d878:	cmn	r0, #1
   2d87c:	ble	2d894 <flatcc_json_parser_match_constant@@Base+0xa8>
   2d880:	orr	r0, r0, #32
   2d884:	sub	r0, r0, #97	; 0x61
   2d888:	uxtb	r0, r0
   2d88c:	cmp	r0, #25
   2d890:	bhi	2d924 <flatcc_json_parser_match_constant@@Base+0x138>
   2d894:	mov	r0, #1
   2d898:	b	2d90c <flatcc_json_parser_match_constant@@Base+0x120>
   2d89c:	ldrb	r1, [r6]
   2d8a0:	cmp	r1, #92	; 0x5c
   2d8a4:	beq	2d94c <flatcc_json_parser_match_constant@@Base+0x160>
   2d8a8:	cmp	r1, #34	; 0x22
   2d8ac:	beq	2d8e0 <flatcc_json_parser_match_constant@@Base+0xf4>
   2d8b0:	cmp	r1, #32
   2d8b4:	bne	2d904 <flatcc_json_parser_match_constant@@Base+0x118>
   2d8b8:	add	r1, r4, r3
   2d8bc:	add	r1, r1, #1
   2d8c0:	cmp	r5, r1
   2d8c4:	beq	2d914 <flatcc_json_parser_match_constant@@Base+0x128>
   2d8c8:	ldrb	r2, [r1], #1
   2d8cc:	cmp	r2, #32
   2d8d0:	beq	2d8c0 <flatcc_json_parser_match_constant@@Base+0xd4>
   2d8d4:	cmp	r2, #34	; 0x22
   2d8d8:	bne	2d9a8 <flatcc_json_parser_match_constant@@Base+0x1bc>
   2d8dc:	sub	r6, r1, #1
   2d8e0:	mvn	r2, r6
   2d8e4:	add	r1, r6, #1
   2d8e8:	cmp	r2, #2
   2d8ec:	blt	2d994 <flatcc_json_parser_match_constant@@Base+0x1a8>
   2d8f0:	ldrb	r2, [r1]
   2d8f4:	cmp	r2, #32
   2d8f8:	bls	2d980 <flatcc_json_parser_match_constant@@Base+0x194>
   2d8fc:	mov	r2, r1
   2d900:	b	2d9a0 <flatcc_json_parser_match_constant@@Base+0x1b4>
   2d904:	mov	r0, #0
   2d908:	mov	r2, r4
   2d90c:	str	r0, [r7]
   2d910:	b	2d944 <flatcc_json_parser_match_constant@@Base+0x158>
   2d914:	mov	r0, #0
   2d918:	str	r0, [r7]
   2d91c:	mov	r2, r5
   2d920:	b	2d944 <flatcc_json_parser_match_constant@@Base+0x158>
   2d924:	mov	r0, #0
   2d928:	str	r0, [r7]
   2d92c:	ldrb	r0, [r2]
   2d930:	cmp	r0, #44	; 0x2c
   2d934:	cmpne	r0, #93	; 0x5d
   2d938:	beq	2d944 <flatcc_json_parser_match_constant@@Base+0x158>
   2d93c:	cmp	r0, #125	; 0x7d
   2d940:	movne	r2, r4
   2d944:	mov	r0, r2
   2d948:	pop	{r4, r5, r6, r7, fp, pc}
   2d94c:	mov	r1, #0
   2d950:	str	r1, [r7]
   2d954:	ldr	r1, [r0, #24]
   2d958:	cmp	r1, #0
   2d95c:	bne	2d91c <flatcc_json_parser_match_constant@@Base+0x130>
   2d960:	str	r6, [r0, #36]	; 0x24
   2d964:	add	r3, r6, #1
   2d968:	mov	r1, #18
   2d96c:	ldr	r2, [r0, #4]
   2d970:	sub	r2, r3, r2
   2d974:	str	r2, [r0, #20]
   2d978:	str	r1, [r0, #24]
   2d97c:	b	2d91c <flatcc_json_parser_match_constant@@Base+0x130>
   2d980:	bne	2d994 <flatcc_json_parser_match_constant@@Base+0x1a8>
   2d984:	ldrb	r2, [r6, #2]!
   2d988:	cmp	r2, #32
   2d98c:	mov	r2, r6
   2d990:	bhi	2d9a0 <flatcc_json_parser_match_constant@@Base+0x1b4>
   2d994:	mov	r2, #0
   2d998:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2d99c:	mov	r2, r0
   2d9a0:	mov	r0, #0
   2d9a4:	b	2d90c <flatcc_json_parser_match_constant@@Base+0x120>
   2d9a8:	mov	r0, #1
   2d9ac:	sub	r2, r1, #1
   2d9b0:	b	2d90c <flatcc_json_parser_match_constant@@Base+0x120>

0002d9b4 <flatcc_json_parser_unmatched_symbol@@Base>:
   2d9b4:	push	{r4, r5, r6, sl, fp, lr}
   2d9b8:	add	fp, sp, #16
   2d9bc:	mov	r6, r0
   2d9c0:	ldrb	r0, [r0, #8]
   2d9c4:	mov	r4, r2
   2d9c8:	tst	r0, #1
   2d9cc:	bne	2d9f4 <flatcc_json_parser_unmatched_symbol@@Base+0x40>
   2d9d0:	ldr	r0, [r6, #24]
   2d9d4:	cmp	r0, #0
   2d9d8:	bne	2dbc8 <flatcc_json_parser_unmatched_symbol@@Base+0x214>
   2d9dc:	str	r1, [r6, #36]	; 0x24
   2d9e0:	add	r1, r1, #1
   2d9e4:	mov	r0, #13
   2d9e8:	ldr	r2, [r6, #4]
   2d9ec:	sub	r1, r1, r2
   2d9f0:	b	2dbc0 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   2d9f4:	ldr	r0, [r6, #12]
   2d9f8:	cmp	r0, #0
   2d9fc:	beq	2da7c <flatcc_json_parser_unmatched_symbol@@Base+0xc8>
   2da00:	cmp	r1, r4
   2da04:	beq	2db1c <flatcc_json_parser_unmatched_symbol@@Base+0x168>
   2da08:	ldrb	r3, [r1]
   2da0c:	cmp	r3, #33	; 0x21
   2da10:	bcc	2db1c <flatcc_json_parser_unmatched_symbol@@Base+0x168>
   2da14:	add	r0, r1, #1
   2da18:	uxtb	r2, r3
   2da1c:	cmp	r2, #46	; 0x2e
   2da20:	cmpne	r2, #95	; 0x5f
   2da24:	bne	2da44 <flatcc_json_parser_unmatched_symbol@@Base+0x90>
   2da28:	cmp	r4, r0
   2da2c:	beq	2dadc <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   2da30:	ldrb	r3, [r0], #1
   2da34:	add	r1, r1, #1
   2da38:	cmp	r3, #33	; 0x21
   2da3c:	bcs	2da18 <flatcc_json_parser_unmatched_symbol@@Base+0x64>
   2da40:	b	2dae0 <flatcc_json_parser_unmatched_symbol@@Base+0x12c>
   2da44:	sxtb	r5, r3
   2da48:	cmp	r5, #0
   2da4c:	blt	2da28 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   2da50:	sub	r5, r3, #48	; 0x30
   2da54:	uxtb	r5, r5
   2da58:	cmp	r5, #9
   2da5c:	bls	2da28 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   2da60:	orr	r3, r3, #32
   2da64:	sub	r3, r3, #97	; 0x61
   2da68:	uxtb	r3, r3
   2da6c:	cmp	r3, #26
   2da70:	bcc	2da28 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
   2da74:	sub	r1, r0, #1
   2da78:	b	2dae0 <flatcc_json_parser_unmatched_symbol@@Base+0x12c>
   2da7c:	cmp	r1, r4
   2da80:	beq	2dabc <flatcc_json_parser_unmatched_symbol@@Base+0x108>
   2da84:	ldrb	r0, [r1]
   2da88:	cmp	r0, #92	; 0x5c
   2da8c:	beq	2da9c <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   2da90:	cmp	r0, #34	; 0x22
   2da94:	bne	2daac <flatcc_json_parser_unmatched_symbol@@Base+0xf8>
   2da98:	b	2dad4 <flatcc_json_parser_unmatched_symbol@@Base+0x120>
   2da9c:	sub	r0, r4, r1
   2daa0:	cmp	r0, #2
   2daa4:	blt	2dabc <flatcc_json_parser_unmatched_symbol@@Base+0x108>
   2daa8:	add	r1, r1, #1
   2daac:	add	r1, r1, #1
   2dab0:	cmp	r1, r4
   2dab4:	bne	2da84 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
   2dab8:	mov	r1, r4
   2dabc:	ldr	r0, [r6, #24]
   2dac0:	mov	r2, r4
   2dac4:	cmp	r0, #0
   2dac8:	bne	2db20 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   2dacc:	mov	r0, #20
   2dad0:	b	2dafc <flatcc_json_parser_unmatched_symbol@@Base+0x148>
   2dad4:	add	r2, r1, #1
   2dad8:	b	2db20 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   2dadc:	mov	r1, r4
   2dae0:	cmp	r2, #46	; 0x2e
   2dae4:	bne	2db1c <flatcc_json_parser_unmatched_symbol@@Base+0x168>
   2dae8:	ldr	r0, [r6, #24]
   2daec:	mov	r2, r4
   2daf0:	cmp	r0, #0
   2daf4:	bne	2db20 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   2daf8:	mov	r0, #5
   2dafc:	str	r1, [r6, #36]	; 0x24
   2db00:	add	r1, r1, #1
   2db04:	ldr	r2, [r6, #4]
   2db08:	sub	r1, r1, r2
   2db0c:	mov	r2, r4
   2db10:	str	r1, [r6, #20]
   2db14:	str	r0, [r6, #24]
   2db18:	b	2db20 <flatcc_json_parser_unmatched_symbol@@Base+0x16c>
   2db1c:	mov	r2, r1
   2db20:	sub	r0, r4, r2
   2db24:	cmp	r0, #2
   2db28:	blt	2db54 <flatcc_json_parser_unmatched_symbol@@Base+0x1a0>
   2db2c:	ldrb	r0, [r2]
   2db30:	cmp	r0, #32
   2db34:	bls	2db40 <flatcc_json_parser_unmatched_symbol@@Base+0x18c>
   2db38:	mov	r3, r2
   2db3c:	b	2db68 <flatcc_json_parser_unmatched_symbol@@Base+0x1b4>
   2db40:	bne	2db54 <flatcc_json_parser_unmatched_symbol@@Base+0x1a0>
   2db44:	mov	r3, r2
   2db48:	ldrb	r0, [r3, #1]!
   2db4c:	cmp	r0, #32
   2db50:	bhi	2db68 <flatcc_json_parser_unmatched_symbol@@Base+0x1b4>
   2db54:	mov	r1, r2
   2db58:	mov	r0, r6
   2db5c:	mov	r2, r4
   2db60:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2db64:	mov	r3, r0
   2db68:	cmp	r3, r4
   2db6c:	beq	2dba0 <flatcc_json_parser_unmatched_symbol@@Base+0x1ec>
   2db70:	ldrb	r0, [r3]
   2db74:	cmp	r0, #58	; 0x3a
   2db78:	bne	2dba0 <flatcc_json_parser_unmatched_symbol@@Base+0x1ec>
   2db7c:	add	r1, r3, #1
   2db80:	sub	r0, r4, r1
   2db84:	cmp	r0, #2
   2db88:	blt	2dbe0 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
   2db8c:	ldrb	r0, [r1]
   2db90:	cmp	r0, #32
   2db94:	bls	2dbd0 <flatcc_json_parser_unmatched_symbol@@Base+0x21c>
   2db98:	mov	r3, r1
   2db9c:	b	2dbf0 <flatcc_json_parser_unmatched_symbol@@Base+0x23c>
   2dba0:	ldr	r0, [r6, #24]
   2dba4:	cmp	r0, #0
   2dba8:	bne	2dbc8 <flatcc_json_parser_unmatched_symbol@@Base+0x214>
   2dbac:	str	r3, [r6, #36]	; 0x24
   2dbb0:	add	r2, r3, #1
   2dbb4:	mov	r0, #4
   2dbb8:	ldr	r1, [r6, #4]
   2dbbc:	sub	r1, r2, r1
   2dbc0:	str	r1, [r6, #20]
   2dbc4:	str	r0, [r6, #24]
   2dbc8:	mov	r0, r4
   2dbcc:	pop	{r4, r5, r6, sl, fp, pc}
   2dbd0:	bne	2dbe0 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
   2dbd4:	ldrb	r0, [r3, #2]!
   2dbd8:	cmp	r0, #32
   2dbdc:	bhi	2dbf0 <flatcc_json_parser_unmatched_symbol@@Base+0x23c>
   2dbe0:	mov	r0, r6
   2dbe4:	mov	r2, r4
   2dbe8:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2dbec:	mov	r3, r0
   2dbf0:	mov	r0, r6
   2dbf4:	mov	r1, r3
   2dbf8:	mov	r2, r4
   2dbfc:	pop	{r4, r5, r6, sl, fp, lr}
   2dc00:	b	2dc04 <flatcc_json_parser_generic_json@@Base>

0002dc04 <flatcc_json_parser_generic_json@@Base>:
   2dc04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dc08:	add	fp, sp, #28
   2dc0c:	sub	sp, sp, #532	; 0x214
   2dc10:	mov	r7, r1
   2dc14:	cmp	r1, r2
   2dc18:	beq	2e61c <flatcc_json_parser_generic_json@@Base+0xa18>
   2dc1c:	mov	r5, r0
   2dc20:	add	r0, r2, #1
   2dc24:	add	r1, sp, #16
   2dc28:	mov	r4, r2
   2dc2c:	mov	sl, #0
   2dc30:	str	r0, [sp]
   2dc34:	add	r0, r5, #36	; 0x24
   2dc38:	sub	r9, r1, #1
   2dc3c:	add	r6, r5, #4
   2dc40:	add	r8, r5, #24
   2dc44:	str	r0, [sp, #8]
   2dc48:	add	r0, r5, #20
   2dc4c:	str	r0, [sp, #4]
   2dc50:	mov	r0, r1
   2dc54:	cmp	sl, #0
   2dc58:	beq	2decc <flatcc_json_parser_generic_json@@Base+0x2c8>
   2dc5c:	ldrb	r0, [r0, #-1]
   2dc60:	cmp	r0, #125	; 0x7d
   2dc64:	bne	2decc <flatcc_json_parser_generic_json@@Base+0x2c8>
   2dc68:	ldrb	r0, [r7]
   2dc6c:	cmp	r0, #46	; 0x2e
   2dc70:	beq	2dcd0 <flatcc_json_parser_generic_json@@Base+0xcc>
   2dc74:	cmp	r0, #34	; 0x22
   2dc78:	bne	2dd18 <flatcc_json_parser_generic_json@@Base+0x114>
   2dc7c:	mov	r0, #0
   2dc80:	mov	r2, r4
   2dc84:	str	r0, [r5, #12]
   2dc88:	add	r0, r7, #1
   2dc8c:	cmp	r0, r4
   2dc90:	beq	2ddf8 <flatcc_json_parser_generic_json@@Base+0x1f4>
   2dc94:	ldrb	r1, [r0]
   2dc98:	cmp	r1, #92	; 0x5c
   2dc9c:	beq	2dcac <flatcc_json_parser_generic_json@@Base+0xa8>
   2dca0:	cmp	r1, #34	; 0x22
   2dca4:	bne	2dcbc <flatcc_json_parser_generic_json@@Base+0xb8>
   2dca8:	b	2dda0 <flatcc_json_parser_generic_json@@Base+0x19c>
   2dcac:	sub	r1, r4, r0
   2dcb0:	cmp	r1, #2
   2dcb4:	blt	2ddf4 <flatcc_json_parser_generic_json@@Base+0x1f0>
   2dcb8:	add	r0, r0, #1
   2dcbc:	add	r0, r0, #1
   2dcc0:	cmp	r0, r4
   2dcc4:	bne	2dc94 <flatcc_json_parser_generic_json@@Base+0x90>
   2dcc8:	mov	r2, r4
   2dccc:	b	2ddf8 <flatcc_json_parser_generic_json@@Base+0x1f4>
   2dcd0:	ldr	r0, [r8]
   2dcd4:	cmp	r0, #0
   2dcd8:	bne	2dd00 <flatcc_json_parser_generic_json@@Base+0xfc>
   2dcdc:	mov	r0, #5
   2dce0:	add	r1, r7, #1
   2dce4:	str	r0, [r8]
   2dce8:	ldr	r0, [r6]
   2dcec:	sub	r0, r1, r0
   2dcf0:	ldr	r1, [sp, #4]
   2dcf4:	str	r0, [r1]
   2dcf8:	ldr	r0, [sp, #8]
   2dcfc:	str	r7, [r0]
   2dd00:	ldr	r0, [r5, #12]
   2dd04:	mov	r2, r4
   2dd08:	mov	r1, r4
   2dd0c:	cmp	r0, #0
   2dd10:	bne	2de30 <flatcc_json_parser_generic_json@@Base+0x22c>
   2dd14:	b	2ddf8 <flatcc_json_parser_generic_json@@Base+0x1f4>
   2dd18:	mov	r0, #1
   2dd1c:	cmp	r7, r4
   2dd20:	mov	r1, r4
   2dd24:	str	r0, [r5, #12]
   2dd28:	beq	2de30 <flatcc_json_parser_generic_json@@Base+0x22c>
   2dd2c:	ldrb	r2, [r7]
   2dd30:	cmp	r2, #33	; 0x21
   2dd34:	bcc	2ddec <flatcc_json_parser_generic_json@@Base+0x1e8>
   2dd38:	add	r0, r7, #1
   2dd3c:	uxtb	r1, r2
   2dd40:	cmp	r1, #46	; 0x2e
   2dd44:	cmpne	r1, #95	; 0x5f
   2dd48:	bne	2dd68 <flatcc_json_parser_generic_json@@Base+0x164>
   2dd4c:	cmp	r4, r0
   2dd50:	beq	2dda8 <flatcc_json_parser_generic_json@@Base+0x1a4>
   2dd54:	ldrb	r2, [r0], #1
   2dd58:	add	r7, r7, #1
   2dd5c:	cmp	r2, #33	; 0x21
   2dd60:	bcs	2dd3c <flatcc_json_parser_generic_json@@Base+0x138>
   2dd64:	b	2ddac <flatcc_json_parser_generic_json@@Base+0x1a8>
   2dd68:	sxtb	r3, r2
   2dd6c:	cmp	r3, #0
   2dd70:	blt	2dd4c <flatcc_json_parser_generic_json@@Base+0x148>
   2dd74:	sub	r3, r2, #48	; 0x30
   2dd78:	uxtb	r3, r3
   2dd7c:	cmp	r3, #9
   2dd80:	bls	2dd4c <flatcc_json_parser_generic_json@@Base+0x148>
   2dd84:	orr	r2, r2, #32
   2dd88:	sub	r2, r2, #97	; 0x61
   2dd8c:	uxtb	r2, r2
   2dd90:	cmp	r2, #26
   2dd94:	bcc	2dd4c <flatcc_json_parser_generic_json@@Base+0x148>
   2dd98:	sub	r7, r0, #1
   2dd9c:	b	2ddac <flatcc_json_parser_generic_json@@Base+0x1a8>
   2dda0:	add	r1, r0, #1
   2dda4:	b	2de30 <flatcc_json_parser_generic_json@@Base+0x22c>
   2dda8:	mov	r7, r4
   2ddac:	cmp	r1, #46	; 0x2e
   2ddb0:	bne	2ddec <flatcc_json_parser_generic_json@@Base+0x1e8>
   2ddb4:	ldr	r0, [r8]
   2ddb8:	mov	r1, r4
   2ddbc:	cmp	r0, #0
   2ddc0:	bne	2de30 <flatcc_json_parser_generic_json@@Base+0x22c>
   2ddc4:	mov	r0, #5
   2ddc8:	add	r1, r7, #1
   2ddcc:	str	r0, [r8]
   2ddd0:	ldr	r0, [r6]
   2ddd4:	sub	r0, r1, r0
   2ddd8:	ldr	r1, [sp, #4]
   2dddc:	str	r0, [r1]
   2dde0:	ldr	r0, [sp, #8]
   2dde4:	str	r7, [r0]
   2dde8:	b	2de2c <flatcc_json_parser_generic_json@@Base+0x228>
   2ddec:	mov	r1, r7
   2ddf0:	b	2de30 <flatcc_json_parser_generic_json@@Base+0x22c>
   2ddf4:	mov	r2, r0
   2ddf8:	ldr	r0, [r8]
   2ddfc:	mov	r1, r4
   2de00:	cmp	r0, #0
   2de04:	bne	2de30 <flatcc_json_parser_generic_json@@Base+0x22c>
   2de08:	mov	r0, #20
   2de0c:	add	r1, r2, #1
   2de10:	str	r0, [r8]
   2de14:	ldr	r0, [r6]
   2de18:	sub	r0, r1, r0
   2de1c:	ldr	r1, [sp, #4]
   2de20:	str	r0, [r1]
   2de24:	ldr	r0, [sp, #8]
   2de28:	str	r2, [r0]
   2de2c:	mov	r1, r4
   2de30:	sub	r0, r4, r1
   2de34:	cmp	r0, #2
   2de38:	blt	2de64 <flatcc_json_parser_generic_json@@Base+0x260>
   2de3c:	ldrb	r0, [r1]
   2de40:	cmp	r0, #32
   2de44:	bls	2de50 <flatcc_json_parser_generic_json@@Base+0x24c>
   2de48:	mov	r7, r1
   2de4c:	b	2de74 <flatcc_json_parser_generic_json@@Base+0x270>
   2de50:	bne	2de64 <flatcc_json_parser_generic_json@@Base+0x260>
   2de54:	mov	r7, r1
   2de58:	ldrb	r0, [r7, #1]!
   2de5c:	cmp	r0, #32
   2de60:	bhi	2de74 <flatcc_json_parser_generic_json@@Base+0x270>
   2de64:	mov	r0, r5
   2de68:	mov	r2, r4
   2de6c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2de70:	mov	r7, r0
   2de74:	cmp	r7, r4
   2de78:	beq	2e68c <flatcc_json_parser_generic_json@@Base+0xa88>
   2de7c:	ldrb	r0, [r7]
   2de80:	cmp	r0, #58	; 0x3a
   2de84:	bne	2e6a4 <flatcc_json_parser_generic_json@@Base+0xaa0>
   2de88:	add	r1, r7, #1
   2de8c:	sub	r0, r4, r1
   2de90:	cmp	r0, #2
   2de94:	blt	2debc <flatcc_json_parser_generic_json@@Base+0x2b8>
   2de98:	ldrb	r0, [r1]
   2de9c:	cmp	r0, #32
   2dea0:	bls	2deac <flatcc_json_parser_generic_json@@Base+0x2a8>
   2dea4:	mov	r7, r1
   2dea8:	b	2ded0 <flatcc_json_parser_generic_json@@Base+0x2cc>
   2deac:	bne	2debc <flatcc_json_parser_generic_json@@Base+0x2b8>
   2deb0:	ldrb	r0, [r7, #2]!
   2deb4:	cmp	r0, #32
   2deb8:	bhi	2ded0 <flatcc_json_parser_generic_json@@Base+0x2cc>
   2debc:	mov	r0, r5
   2dec0:	mov	r2, r4
   2dec4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2dec8:	mov	r7, r0
   2decc:	ldrb	r0, [r7]
   2ded0:	sub	r1, r0, #48	; 0x30
   2ded4:	cmp	r1, #10
   2ded8:	bcs	2df4c <flatcc_json_parser_generic_json@@Base+0x348>
   2dedc:	cmp	r7, r4
   2dee0:	beq	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2dee4:	cmp	r0, #45	; 0x2d
   2dee8:	bne	2defc <flatcc_json_parser_generic_json@@Base+0x2f8>
   2deec:	add	r7, r7, #1
   2def0:	cmp	r7, r4
   2def4:	beq	2e1c8 <flatcc_json_parser_generic_json@@Base+0x5c4>
   2def8:	ldrb	r0, [r7]
   2defc:	cmp	r0, #48	; 0x30
   2df00:	bne	2df68 <flatcc_json_parser_generic_json@@Base+0x364>
   2df04:	add	r1, r7, #1
   2df08:	cmp	r1, r4
   2df0c:	mov	r2, r4
   2df10:	beq	2e1e0 <flatcc_json_parser_generic_json@@Base+0x5dc>
   2df14:	ldrb	r0, [r1]
   2df18:	cmp	r0, #46	; 0x2e
   2df1c:	bne	2e118 <flatcc_json_parser_generic_json@@Base+0x514>
   2df20:	mov	r0, r1
   2df24:	ldrb	r2, [r0, #1]!
   2df28:	sub	r2, r2, #48	; 0x30
   2df2c:	uxtb	r2, r2
   2df30:	cmp	r2, #10
   2df34:	bcc	2e0e4 <flatcc_json_parser_generic_json@@Base+0x4e0>
   2df38:	ldr	r1, [r8]
   2df3c:	cmp	r1, #0
   2df40:	bne	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2df44:	mov	r1, #6
   2df48:	b	2e2f0 <flatcc_json_parser_generic_json@@Base+0x6ec>
   2df4c:	cmp	r0, #90	; 0x5a
   2df50:	bgt	2dfac <flatcc_json_parser_generic_json@@Base+0x3a8>
   2df54:	cmp	r0, #34	; 0x22
   2df58:	beq	2e01c <flatcc_json_parser_generic_json@@Base+0x418>
   2df5c:	cmp	r0, #45	; 0x2d
   2df60:	beq	2dedc <flatcc_json_parser_generic_json@@Base+0x2d8>
   2df64:	b	2e0c4 <flatcc_json_parser_generic_json@@Base+0x4c0>
   2df68:	sub	r0, r0, #49	; 0x31
   2df6c:	uxtb	r0, r0
   2df70:	cmp	r0, #8
   2df74:	bls	2dff4 <flatcc_json_parser_generic_json@@Base+0x3f0>
   2df78:	ldr	r0, [r8]
   2df7c:	cmp	r0, #0
   2df80:	bne	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2df84:	mov	r0, #6
   2df88:	add	r1, r7, #1
   2df8c:	str	r0, [r8]
   2df90:	ldr	r0, [r6]
   2df94:	sub	r0, r1, r0
   2df98:	ldr	r1, [sp, #4]
   2df9c:	str	r0, [r1]
   2dfa0:	ldr	r0, [sp, #8]
   2dfa4:	str	r7, [r0]
   2dfa8:	b	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2dfac:	cmp	r0, #91	; 0x5b
   2dfb0:	beq	2e08c <flatcc_json_parser_generic_json@@Base+0x488>
   2dfb4:	cmp	r0, #123	; 0x7b
   2dfb8:	bne	2e0c4 <flatcc_json_parser_generic_json@@Base+0x4c0>
   2dfbc:	cmp	sl, #512	; 0x200
   2dfc0:	beq	2e6b8 <flatcc_json_parser_generic_json@@Base+0xab4>
   2dfc4:	add	r0, sp, #16
   2dfc8:	mov	r1, #125	; 0x7d
   2dfcc:	strb	r1, [r0, sl]
   2dfd0:	add	r1, r7, #1
   2dfd4:	sub	r0, r4, r1
   2dfd8:	cmp	r0, #2
   2dfdc:	blt	2e274 <flatcc_json_parser_generic_json@@Base+0x670>
   2dfe0:	ldrb	r0, [r1]
   2dfe4:	cmp	r0, #32
   2dfe8:	bls	2e264 <flatcc_json_parser_generic_json@@Base+0x660>
   2dfec:	mov	r7, r1
   2dff0:	b	2e284 <flatcc_json_parser_generic_json@@Base+0x680>
   2dff4:	add	r0, r7, #1
   2dff8:	cmp	r4, r0
   2dffc:	beq	2e1dc <flatcc_json_parser_generic_json@@Base+0x5d8>
   2e000:	ldrb	r1, [r0], #1
   2e004:	sub	r1, r1, #48	; 0x30
   2e008:	uxtb	r1, r1
   2e00c:	cmp	r1, #10
   2e010:	bcc	2dff8 <flatcc_json_parser_generic_json@@Base+0x3f4>
   2e014:	sub	r1, r0, #1
   2e018:	b	2df08 <flatcc_json_parser_generic_json@@Base+0x304>
   2e01c:	cmp	r7, r4
   2e020:	beq	2e214 <flatcc_json_parser_generic_json@@Base+0x610>
   2e024:	add	r1, r7, #1
   2e028:	mov	r0, r4
   2e02c:	add	r7, sp, #12
   2e030:	cmp	r1, r4
   2e034:	beq	2e2e0 <flatcc_json_parser_generic_json@@Base+0x6dc>
   2e038:	ldrb	r0, [r1]
   2e03c:	cmp	r0, #34	; 0x22
   2e040:	beq	2e248 <flatcc_json_parser_generic_json@@Base+0x644>
   2e044:	mov	r0, r5
   2e048:	mov	r2, r4
   2e04c:	bl	2d2c4 <flatcc_json_parser_string_part@@Base>
   2e050:	mov	r1, r0
   2e054:	cmp	r0, r4
   2e058:	beq	2e068 <flatcc_json_parser_generic_json@@Base+0x464>
   2e05c:	ldrb	r0, [r1]
   2e060:	cmp	r0, #34	; 0x22
   2e064:	beq	2e248 <flatcc_json_parser_generic_json@@Base+0x644>
   2e068:	mov	r0, r5
   2e06c:	mov	r2, r4
   2e070:	mov	r3, r7
   2e074:	bl	2d418 <flatcc_json_parser_string_escape@@Base>
   2e078:	mov	r1, r0
   2e07c:	cmp	r0, r4
   2e080:	bne	2e038 <flatcc_json_parser_generic_json@@Base+0x434>
   2e084:	mov	r0, r4
   2e088:	b	2e2e0 <flatcc_json_parser_generic_json@@Base+0x6dc>
   2e08c:	cmp	sl, #512	; 0x200
   2e090:	beq	2e6b8 <flatcc_json_parser_generic_json@@Base+0xab4>
   2e094:	add	r0, sp, #16
   2e098:	mov	r1, #93	; 0x5d
   2e09c:	strb	r1, [r0, sl]
   2e0a0:	add	r1, r7, #1
   2e0a4:	sub	r0, r4, r1
   2e0a8:	cmp	r0, #2
   2e0ac:	blt	2e2ac <flatcc_json_parser_generic_json@@Base+0x6a8>
   2e0b0:	ldrb	r0, [r1]
   2e0b4:	cmp	r0, #32
   2e0b8:	bls	2e29c <flatcc_json_parser_generic_json@@Base+0x698>
   2e0bc:	mov	r7, r1
   2e0c0:	b	2e2bc <flatcc_json_parser_generic_json@@Base+0x6b8>
   2e0c4:	mov	r0, r5
   2e0c8:	mov	r1, r7
   2e0cc:	mov	r2, r4
   2e0d0:	bl	2d724 <flatcc_json_parser_skip_constant@@Base>
   2e0d4:	mov	r1, r0
   2e0d8:	cmp	r7, r0
   2e0dc:	bne	2e314 <flatcc_json_parser_generic_json@@Base+0x710>
   2e0e0:	b	2e6cc <flatcc_json_parser_generic_json@@Base+0xac8>
   2e0e4:	add	r1, r1, #2
   2e0e8:	mov	r2, r4
   2e0ec:	cmp	r1, r4
   2e0f0:	beq	2e1e0 <flatcc_json_parser_generic_json@@Base+0x5dc>
   2e0f4:	ldrb	r0, [r1]
   2e0f8:	sub	r2, r0, #48	; 0x30
   2e0fc:	uxtb	r2, r2
   2e100:	cmp	r2, #9
   2e104:	bhi	2e118 <flatcc_json_parser_generic_json@@Base+0x514>
   2e108:	add	r1, r1, #1
   2e10c:	cmp	r4, r1
   2e110:	bne	2e0f4 <flatcc_json_parser_generic_json@@Base+0x4f0>
   2e114:	b	2e1dc <flatcc_json_parser_generic_json@@Base+0x5d8>
   2e118:	cmp	r1, r4
   2e11c:	mov	r2, r4
   2e120:	beq	2e1e0 <flatcc_json_parser_generic_json@@Base+0x5dc>
   2e124:	orr	r2, r0, #32
   2e128:	cmp	r2, #101	; 0x65
   2e12c:	bne	2e18c <flatcc_json_parser_generic_json@@Base+0x588>
   2e130:	add	r0, r1, #1
   2e134:	cmp	r0, r4
   2e138:	beq	2e1c8 <flatcc_json_parser_generic_json@@Base+0x5c4>
   2e13c:	ldrb	r2, [r0]
   2e140:	cmp	r2, #45	; 0x2d
   2e144:	cmpne	r2, #43	; 0x2b
   2e148:	addeq	r0, r1, #2
   2e14c:	cmp	r0, r4
   2e150:	beq	2df38 <flatcc_json_parser_generic_json@@Base+0x334>
   2e154:	ldrb	r1, [r0]
   2e158:	sub	r1, r1, #48	; 0x30
   2e15c:	uxtb	r1, r1
   2e160:	cmp	r1, #9
   2e164:	bhi	2df38 <flatcc_json_parser_generic_json@@Base+0x334>
   2e168:	add	r1, r0, #1
   2e16c:	cmp	r4, r1
   2e170:	beq	2e1dc <flatcc_json_parser_generic_json@@Base+0x5d8>
   2e174:	ldrb	r0, [r1], #1
   2e178:	sub	r2, r0, #48	; 0x30
   2e17c:	uxtb	r2, r2
   2e180:	cmp	r2, #10
   2e184:	bcc	2e16c <flatcc_json_parser_generic_json@@Base+0x568>
   2e188:	sub	r1, r1, #1
   2e18c:	cmp	r1, r4
   2e190:	mov	r2, r4
   2e194:	beq	2e1e0 <flatcc_json_parser_generic_json@@Base+0x5dc>
   2e198:	cmp	r0, #43	; 0x2b
   2e19c:	bgt	2e5e4 <flatcc_json_parser_generic_json@@Base+0x9e0>
   2e1a0:	sub	r0, r0, #9
   2e1a4:	cmp	r0, #23
   2e1a8:	bhi	2e614 <flatcc_json_parser_generic_json@@Base+0xa10>
   2e1ac:	movw	r3, #23
   2e1b0:	mov	r2, #1
   2e1b4:	movt	r3, #128	; 0x80
   2e1b8:	tst	r3, r2, lsl r0
   2e1bc:	mov	r2, r1
   2e1c0:	bne	2e314 <flatcc_json_parser_generic_json@@Base+0x710>
   2e1c4:	b	2e1e0 <flatcc_json_parser_generic_json@@Base+0x5dc>
   2e1c8:	ldr	r0, [r8]
   2e1cc:	cmp	r0, #0
   2e1d0:	bne	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2e1d4:	mov	r0, #6
   2e1d8:	b	2e224 <flatcc_json_parser_generic_json@@Base+0x620>
   2e1dc:	mov	r2, r4
   2e1e0:	ldr	r0, [r8]
   2e1e4:	cmp	r0, #0
   2e1e8:	bne	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2e1ec:	mov	r0, #6
   2e1f0:	add	r1, r2, #1
   2e1f4:	str	r0, [r8]
   2e1f8:	ldr	r0, [r6]
   2e1fc:	sub	r0, r1, r0
   2e200:	ldr	r1, [sp, #4]
   2e204:	str	r0, [r1]
   2e208:	ldr	r0, [sp, #8]
   2e20c:	str	r2, [r0]
   2e210:	b	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2e214:	ldr	r0, [r8]
   2e218:	cmp	r0, #0
   2e21c:	bne	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2e220:	mov	r0, #16
   2e224:	str	r0, [r8]
   2e228:	ldr	r1, [sp]
   2e22c:	ldr	r0, [r6]
   2e230:	sub	r0, r1, r0
   2e234:	ldr	r1, [sp, #4]
   2e238:	str	r0, [r1]
   2e23c:	ldr	r0, [sp, #8]
   2e240:	str	r4, [r0]
   2e244:	b	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2e248:	cmp	r1, r4
   2e24c:	beq	2e2dc <flatcc_json_parser_generic_json@@Base+0x6d8>
   2e250:	ldrb	r0, [r1]
   2e254:	cmp	r0, #34	; 0x22
   2e258:	bne	2e2dc <flatcc_json_parser_generic_json@@Base+0x6d8>
   2e25c:	add	r1, r1, #1
   2e260:	b	2e314 <flatcc_json_parser_generic_json@@Base+0x710>
   2e264:	bne	2e274 <flatcc_json_parser_generic_json@@Base+0x670>
   2e268:	ldrb	r0, [r7, #2]!
   2e26c:	cmp	r0, #32
   2e270:	bhi	2e284 <flatcc_json_parser_generic_json@@Base+0x680>
   2e274:	mov	r0, r5
   2e278:	mov	r2, r4
   2e27c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2e280:	mov	r7, r0
   2e284:	cmp	r7, r4
   2e288:	beq	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>
   2e28c:	ldrb	r0, [r7]
   2e290:	add	sl, sl, #1
   2e294:	cmp	r0, #125	; 0x7d
   2e298:	b	2e2d0 <flatcc_json_parser_generic_json@@Base+0x6cc>
   2e29c:	bne	2e2ac <flatcc_json_parser_generic_json@@Base+0x6a8>
   2e2a0:	ldrb	r0, [r7, #2]!
   2e2a4:	cmp	r0, #32
   2e2a8:	bhi	2e2bc <flatcc_json_parser_generic_json@@Base+0x6b8>
   2e2ac:	mov	r0, r5
   2e2b0:	mov	r2, r4
   2e2b4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2e2b8:	mov	r7, r0
   2e2bc:	cmp	r7, r4
   2e2c0:	beq	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>
   2e2c4:	ldrb	r0, [r7]
   2e2c8:	add	sl, sl, #1
   2e2cc:	cmp	r0, #93	; 0x5d
   2e2d0:	mov	r1, r7
   2e2d4:	beq	2e314 <flatcc_json_parser_generic_json@@Base+0x710>
   2e2d8:	b	2e5d0 <flatcc_json_parser_generic_json@@Base+0x9cc>
   2e2dc:	mov	r0, r1
   2e2e0:	ldr	r1, [r8]
   2e2e4:	cmp	r1, #0
   2e2e8:	bne	2e310 <flatcc_json_parser_generic_json@@Base+0x70c>
   2e2ec:	mov	r1, #20
   2e2f0:	str	r1, [r8]
   2e2f4:	add	r2, r0, #1
   2e2f8:	ldr	r1, [r6]
   2e2fc:	sub	r1, r2, r1
   2e300:	ldr	r2, [sp, #4]
   2e304:	str	r1, [r2]
   2e308:	ldr	r1, [sp, #8]
   2e30c:	str	r0, [r1]
   2e310:	mov	r1, r4
   2e314:	subs	r2, r1, r4
   2e318:	mov	r3, sl
   2e31c:	movwne	r2, #1
   2e320:	cmp	sl, #0
   2e324:	movwne	r3, #1
   2e328:	cmpne	r1, r4
   2e32c:	beq	2e624 <flatcc_json_parser_generic_json@@Base+0xa20>
   2e330:	ldrb	r2, [r9, sl]
   2e334:	sub	r0, r4, r1
   2e338:	cmp	r2, #93	; 0x5d
   2e33c:	bne	2e35c <flatcc_json_parser_generic_json@@Base+0x758>
   2e340:	cmp	r0, #2
   2e344:	blt	2e38c <flatcc_json_parser_generic_json@@Base+0x788>
   2e348:	ldrb	r0, [r1]
   2e34c:	cmp	r0, #32
   2e350:	bls	2e378 <flatcc_json_parser_generic_json@@Base+0x774>
   2e354:	mov	r7, r1
   2e358:	b	2e39c <flatcc_json_parser_generic_json@@Base+0x798>
   2e35c:	cmp	r0, #2
   2e360:	blt	2e3e8 <flatcc_json_parser_generic_json@@Base+0x7e4>
   2e364:	ldrb	r0, [r1]
   2e368:	cmp	r0, #32
   2e36c:	bls	2e3d4 <flatcc_json_parser_generic_json@@Base+0x7d0>
   2e370:	mov	r7, r1
   2e374:	b	2e3f8 <flatcc_json_parser_generic_json@@Base+0x7f4>
   2e378:	bne	2e38c <flatcc_json_parser_generic_json@@Base+0x788>
   2e37c:	mov	r7, r1
   2e380:	ldrb	r0, [r7, #1]!
   2e384:	cmp	r0, #32
   2e388:	bhi	2e39c <flatcc_json_parser_generic_json@@Base+0x798>
   2e38c:	mov	r0, r5
   2e390:	mov	r2, r4
   2e394:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2e398:	mov	r7, r0
   2e39c:	cmp	r7, r4
   2e3a0:	mov	r1, r4
   2e3a4:	beq	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e3a8:	ldrb	r0, [r7]
   2e3ac:	cmp	r0, #44	; 0x2c
   2e3b0:	beq	2e454 <flatcc_json_parser_generic_json@@Base+0x850>
   2e3b4:	cmp	r0, #93	; 0x5d
   2e3b8:	beq	2e520 <flatcc_json_parser_generic_json@@Base+0x91c>
   2e3bc:	ldr	r0, [r8]
   2e3c0:	mov	r1, r4
   2e3c4:	cmp	r0, #0
   2e3c8:	bne	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e3cc:	mov	r0, #9
   2e3d0:	b	2e42c <flatcc_json_parser_generic_json@@Base+0x828>
   2e3d4:	bne	2e3e8 <flatcc_json_parser_generic_json@@Base+0x7e4>
   2e3d8:	mov	r7, r1
   2e3dc:	ldrb	r0, [r7, #1]!
   2e3e0:	cmp	r0, #32
   2e3e4:	bhi	2e3f8 <flatcc_json_parser_generic_json@@Base+0x7f4>
   2e3e8:	mov	r0, r5
   2e3ec:	mov	r2, r4
   2e3f0:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2e3f4:	mov	r7, r0
   2e3f8:	cmp	r7, r4
   2e3fc:	mov	r1, r4
   2e400:	beq	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e404:	ldrb	r0, [r7]
   2e408:	cmp	r0, #44	; 0x2c
   2e40c:	beq	2e478 <flatcc_json_parser_generic_json@@Base+0x874>
   2e410:	cmp	r0, #125	; 0x7d
   2e414:	beq	2e520 <flatcc_json_parser_generic_json@@Base+0x91c>
   2e418:	ldr	r0, [r8]
   2e41c:	mov	r1, r4
   2e420:	cmp	r0, #0
   2e424:	bne	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e428:	mov	r0, #10
   2e42c:	str	r0, [r8]
   2e430:	add	r1, r7, #1
   2e434:	ldr	r0, [r6]
   2e438:	sub	r0, r1, r0
   2e43c:	ldr	r1, [sp, #4]
   2e440:	str	r0, [r1]
   2e444:	ldr	r0, [sp, #8]
   2e448:	mov	r1, r4
   2e44c:	str	r7, [r0]
   2e450:	b	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e454:	add	r1, r7, #1
   2e458:	sub	r0, r4, r1
   2e45c:	cmp	r0, #2
   2e460:	blt	2e4ac <flatcc_json_parser_generic_json@@Base+0x8a8>
   2e464:	ldrb	r0, [r1]
   2e468:	cmp	r0, #32
   2e46c:	bls	2e49c <flatcc_json_parser_generic_json@@Base+0x898>
   2e470:	mov	r7, r1
   2e474:	b	2e4bc <flatcc_json_parser_generic_json@@Base+0x8b8>
   2e478:	add	r1, r7, #1
   2e47c:	sub	r0, r4, r1
   2e480:	cmp	r0, #2
   2e484:	blt	2e4fc <flatcc_json_parser_generic_json@@Base+0x8f8>
   2e488:	ldrb	r0, [r1]
   2e48c:	cmp	r0, #32
   2e490:	bls	2e4ec <flatcc_json_parser_generic_json@@Base+0x8e8>
   2e494:	mov	r7, r1
   2e498:	b	2e50c <flatcc_json_parser_generic_json@@Base+0x908>
   2e49c:	bne	2e4ac <flatcc_json_parser_generic_json@@Base+0x8a8>
   2e4a0:	ldrb	r0, [r7, #2]!
   2e4a4:	cmp	r0, #32
   2e4a8:	bhi	2e4bc <flatcc_json_parser_generic_json@@Base+0x8b8>
   2e4ac:	mov	r0, r5
   2e4b0:	mov	r2, r4
   2e4b4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2e4b8:	mov	r7, r0
   2e4bc:	cmp	r7, r4
   2e4c0:	beq	2e4d4 <flatcc_json_parser_generic_json@@Base+0x8d0>
   2e4c4:	ldrb	r0, [r7]
   2e4c8:	cmp	r0, #93	; 0x5d
   2e4cc:	beq	2e520 <flatcc_json_parser_generic_json@@Base+0x91c>
   2e4d0:	b	2e5d0 <flatcc_json_parser_generic_json@@Base+0x9cc>
   2e4d4:	ldr	r0, [r8]
   2e4d8:	mov	r1, r4
   2e4dc:	cmp	r0, #0
   2e4e0:	bne	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e4e4:	mov	r0, #9
   2e4e8:	b	2e5a8 <flatcc_json_parser_generic_json@@Base+0x9a4>
   2e4ec:	bne	2e4fc <flatcc_json_parser_generic_json@@Base+0x8f8>
   2e4f0:	ldrb	r0, [r7, #2]!
   2e4f4:	cmp	r0, #32
   2e4f8:	bhi	2e50c <flatcc_json_parser_generic_json@@Base+0x908>
   2e4fc:	mov	r0, r5
   2e500:	mov	r2, r4
   2e504:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2e508:	mov	r7, r0
   2e50c:	cmp	r7, r4
   2e510:	beq	2e594 <flatcc_json_parser_generic_json@@Base+0x990>
   2e514:	ldrb	r0, [r7]
   2e518:	cmp	r0, #125	; 0x7d
   2e51c:	bne	2e5d0 <flatcc_json_parser_generic_json@@Base+0x9cc>
   2e520:	add	r2, r7, #1
   2e524:	sub	r0, r4, r2
   2e528:	cmp	r0, #2
   2e52c:	blt	2e558 <flatcc_json_parser_generic_json@@Base+0x954>
   2e530:	ldrb	r0, [r2]
   2e534:	cmp	r0, #32
   2e538:	bls	2e544 <flatcc_json_parser_generic_json@@Base+0x940>
   2e53c:	mov	r1, r2
   2e540:	b	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e544:	bne	2e558 <flatcc_json_parser_generic_json@@Base+0x954>
   2e548:	ldrb	r0, [r7, #2]!
   2e54c:	cmp	r0, #32
   2e550:	mov	r1, r7
   2e554:	bhi	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e558:	mov	r1, r2
   2e55c:	mov	r0, r5
   2e560:	mov	r2, r4
   2e564:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2e568:	mov	r1, r0
   2e56c:	subs	r2, r1, r4
   2e570:	sub	r0, sl, #1
   2e574:	movwne	r2, #1
   2e578:	subs	r3, sl, #1
   2e57c:	movwne	r3, #1
   2e580:	beq	2e628 <flatcc_json_parser_generic_json@@Base+0xa24>
   2e584:	cmp	r1, r4
   2e588:	mov	sl, r0
   2e58c:	bne	2e330 <flatcc_json_parser_generic_json@@Base+0x72c>
   2e590:	b	2e628 <flatcc_json_parser_generic_json@@Base+0xa24>
   2e594:	ldr	r0, [r8]
   2e598:	mov	r1, r4
   2e59c:	cmp	r0, #0
   2e5a0:	bne	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e5a4:	mov	r0, #10
   2e5a8:	str	r0, [r8]
   2e5ac:	ldr	r1, [sp]
   2e5b0:	ldr	r0, [r6]
   2e5b4:	sub	r0, r1, r0
   2e5b8:	ldr	r1, [sp, #4]
   2e5bc:	str	r0, [r1]
   2e5c0:	ldr	r0, [sp, #8]
   2e5c4:	mov	r1, r4
   2e5c8:	str	r4, [r0]
   2e5cc:	b	2e56c <flatcc_json_parser_generic_json@@Base+0x968>
   2e5d0:	add	r0, sp, #16
   2e5d4:	cmp	r7, r4
   2e5d8:	add	r0, r0, sl
   2e5dc:	bne	2dc54 <flatcc_json_parser_generic_json@@Base+0x50>
   2e5e0:	b	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>
   2e5e4:	cmp	r0, #92	; 0x5c
   2e5e8:	bgt	2e5fc <flatcc_json_parser_generic_json@@Base+0x9f8>
   2e5ec:	cmp	r0, #44	; 0x2c
   2e5f0:	beq	2e314 <flatcc_json_parser_generic_json@@Base+0x710>
   2e5f4:	cmp	r0, #58	; 0x3a
   2e5f8:	b	2e608 <flatcc_json_parser_generic_json@@Base+0xa04>
   2e5fc:	cmp	r0, #93	; 0x5d
   2e600:	beq	2e314 <flatcc_json_parser_generic_json@@Base+0x710>
   2e604:	cmp	r0, #125	; 0x7d
   2e608:	mov	r2, r1
   2e60c:	beq	2e314 <flatcc_json_parser_generic_json@@Base+0x710>
   2e610:	b	2e1e0 <flatcc_json_parser_generic_json@@Base+0x5dc>
   2e614:	mov	r2, r1
   2e618:	b	2e1e0 <flatcc_json_parser_generic_json@@Base+0x5dc>
   2e61c:	mov	r1, r7
   2e620:	b	2e680 <flatcc_json_parser_generic_json@@Base+0xa7c>
   2e624:	mov	r0, sl
   2e628:	cmp	r2, #0
   2e62c:	bne	2e680 <flatcc_json_parser_generic_json@@Base+0xa7c>
   2e630:	cmp	r3, #0
   2e634:	beq	2e680 <flatcc_json_parser_generic_json@@Base+0xa7c>
   2e638:	ldr	r1, [r8]
   2e63c:	cmp	r1, #0
   2e640:	bne	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>
   2e644:	add	r1, sp, #16
   2e648:	add	r0, r1, r0
   2e64c:	mov	r1, #10
   2e650:	ldrb	r0, [r0, #-1]
   2e654:	cmp	r0, #93	; 0x5d
   2e658:	movweq	r1, #9
   2e65c:	str	r1, [r8]
   2e660:	ldr	r0, [r6]
   2e664:	ldr	r1, [sp]
   2e668:	sub	r0, r1, r0
   2e66c:	ldr	r1, [sp, #4]
   2e670:	str	r0, [r1]
   2e674:	ldr	r0, [sp, #8]
   2e678:	str	r4, [r0]
   2e67c:	mov	r1, r4
   2e680:	mov	r0, r1
   2e684:	sub	sp, fp, #28
   2e688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e68c:	ldr	r0, [r8]
   2e690:	cmp	r0, #0
   2e694:	bne	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>
   2e698:	mov	r0, #10
   2e69c:	str	r0, [r8]
   2e6a0:	b	2e660 <flatcc_json_parser_generic_json@@Base+0xa5c>
   2e6a4:	ldr	r0, [r8]
   2e6a8:	cmp	r0, #0
   2e6ac:	bne	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>
   2e6b0:	mov	r0, #4
   2e6b4:	b	2e6dc <flatcc_json_parser_generic_json@@Base+0xad8>
   2e6b8:	ldr	r0, [r8]
   2e6bc:	cmp	r0, #0
   2e6c0:	bne	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>
   2e6c4:	mov	r0, #2
   2e6c8:	b	2e6dc <flatcc_json_parser_generic_json@@Base+0xad8>
   2e6cc:	ldr	r0, [r8]
   2e6d0:	cmp	r0, #0
   2e6d4:	bne	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>
   2e6d8:	mov	r0, #5
   2e6dc:	str	r0, [r8]
   2e6e0:	add	r1, r7, #1
   2e6e4:	ldr	r0, [r6]
   2e6e8:	sub	r0, r1, r0
   2e6ec:	ldr	r1, [sp, #4]
   2e6f0:	str	r0, [r1]
   2e6f4:	ldr	r0, [sp, #8]
   2e6f8:	str	r7, [r0]
   2e6fc:	b	2e67c <flatcc_json_parser_generic_json@@Base+0xa78>

0002e700 <flatcc_json_parser_double@@Base>:
   2e700:	push	{r4, r5, r6, r7, fp, lr}
   2e704:	add	fp, sp, #16
   2e708:	mov	r5, r0
   2e70c:	mov	r0, #0
   2e710:	mov	r6, r1
   2e714:	cmp	r1, r2
   2e718:	str	r0, [r3]
   2e71c:	str	r0, [r3, #4]
   2e720:	moveq	r0, r6
   2e724:	popeq	{r4, r5, r6, r7, fp, pc}
   2e728:	mov	r0, r6
   2e72c:	mov	r4, r2
   2e730:	mov	r7, r3
   2e734:	ldrb	r1, [r0], #1
   2e738:	cmp	r1, #45	; 0x2d
   2e73c:	movne	r0, r6
   2e740:	sub	r2, r2, r0
   2e744:	cmp	r2, #2
   2e748:	blt	2e774 <flatcc_json_parser_double@@Base+0x74>
   2e74c:	sub	r1, r1, #45	; 0x2d
   2e750:	clz	r1, r1
   2e754:	lsr	r1, r1, #5
   2e758:	ldrb	r1, [r6, r1]
   2e75c:	cmp	r1, #46	; 0x2e
   2e760:	beq	2e7c0 <flatcc_json_parser_double@@Base+0xc0>
   2e764:	cmp	r1, #48	; 0x30
   2e768:	ldrbeq	r0, [r0, #1]
   2e76c:	cmpeq	r0, #48	; 0x30
   2e770:	beq	2e7c0 <flatcc_json_parser_double@@Base+0xc0>
   2e774:	sub	r1, r4, r6
   2e778:	mov	r0, r6
   2e77c:	mov	r2, r7
   2e780:	bl	2e7f0 <flatcc_json_parser_double@@Base+0xf0>
   2e784:	cmp	r0, #0
   2e788:	cmpne	r0, r6
   2e78c:	popne	{r4, r5, r6, r7, fp, pc}
   2e790:	vldr	d0, [r7]
   2e794:	bl	12aec <__isinf@plt>
   2e798:	ldr	r1, [r5, #24]
   2e79c:	cmp	r0, #0
   2e7a0:	beq	2e7b4 <flatcc_json_parser_double@@Base+0xb4>
   2e7a4:	cmp	r1, #0
   2e7a8:	bne	2e7e8 <flatcc_json_parser_double@@Base+0xe8>
   2e7ac:	mov	r0, #7
   2e7b0:	b	2e7d0 <flatcc_json_parser_double@@Base+0xd0>
   2e7b4:	cmp	r1, #0
   2e7b8:	bne	2e7e8 <flatcc_json_parser_double@@Base+0xe8>
   2e7bc:	b	2e7cc <flatcc_json_parser_double@@Base+0xcc>
   2e7c0:	ldr	r0, [r5, #24]
   2e7c4:	cmp	r0, #0
   2e7c8:	bne	2e7e8 <flatcc_json_parser_double@@Base+0xe8>
   2e7cc:	mov	r0, #6
   2e7d0:	str	r6, [r5, #36]	; 0x24
   2e7d4:	add	r2, r6, #1
   2e7d8:	ldr	r1, [r5, #4]
   2e7dc:	sub	r1, r2, r1
   2e7e0:	str	r1, [r5, #20]
   2e7e4:	str	r0, [r5, #24]
   2e7e8:	mov	r0, r4
   2e7ec:	pop	{r4, r5, r6, r7, fp, pc}
   2e7f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e7f4:	add	fp, sp, #28
   2e7f8:	sub	sp, sp, #36	; 0x24
   2e7fc:	cmp	r1, #1000	; 0x3e8
   2e800:	mov	r3, r1
   2e804:	mov	r6, #0
   2e808:	mov	r9, r0
   2e80c:	movge	r1, #1000	; 0x3e8
   2e810:	str	r6, [r2]
   2e814:	str	r6, [r2, #4]
   2e818:	add	lr, r0, r1
   2e81c:	add	r4, lr, #1
   2e820:	cmp	r4, r0
   2e824:	beq	2e898 <flatcc_json_parser_double@@Base+0x198>
   2e828:	ldrb	r0, [r9]
   2e82c:	mov	r5, r9
   2e830:	cmp	r0, #45	; 0x2d
   2e834:	bne	2e84c <flatcc_json_parser_double@@Base+0x14c>
   2e838:	cmp	r1, #0
   2e83c:	beq	2ebec <flatcc_json_parser_double@@Base+0x4ec>
   2e840:	add	r5, r9, #1
   2e844:	mov	r6, #1
   2e848:	ldrb	r0, [r5]
   2e84c:	cmp	r0, #48	; 0x30
   2e850:	bne	2e880 <flatcc_json_parser_double@@Base+0x180>
   2e854:	add	ip, r5, #1
   2e858:	cmp	r5, lr
   2e85c:	beq	2e8e0 <flatcc_json_parser_double@@Base+0x1e0>
   2e860:	ldrb	r1, [ip]
   2e864:	orr	r0, r1, #32
   2e868:	cmp	r0, #120	; 0x78
   2e86c:	bne	2e8b0 <flatcc_json_parser_double@@Base+0x1b0>
   2e870:	mov	r0, #0
   2e874:	str	r0, [r2]
   2e878:	str	r0, [r2, #4]
   2e87c:	b	2e898 <flatcc_json_parser_double@@Base+0x198>
   2e880:	sub	r1, r0, #49	; 0x31
   2e884:	uxtb	r1, r1
   2e888:	cmp	r1, #9
   2e88c:	bcc	2e8a0 <flatcc_json_parser_double@@Base+0x1a0>
   2e890:	cmp	r6, #0
   2e894:	movne	r9, #0
   2e898:	mov	r2, r9
   2e89c:	b	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2e8a0:	sub	r0, r0, #48	; 0x30
   2e8a4:	add	ip, r5, #1
   2e8a8:	asr	r1, r0, #31
   2e8ac:	b	2e8e8 <flatcc_json_parser_double@@Base+0x1e8>
   2e8b0:	cmp	r1, #48	; 0x30
   2e8b4:	mov	r0, #0
   2e8b8:	mov	r1, #0
   2e8bc:	bne	2e8e8 <flatcc_json_parser_double@@Base+0x1e8>
   2e8c0:	add	r0, r5, #2
   2e8c4:	mov	ip, r0
   2e8c8:	cmp	r4, r0
   2e8cc:	beq	2e8e0 <flatcc_json_parser_double@@Base+0x1e0>
   2e8d0:	mov	r0, ip
   2e8d4:	ldrb	r1, [r0], #1
   2e8d8:	cmp	r1, #48	; 0x30
   2e8dc:	beq	2e8c4 <flatcc_json_parser_double@@Base+0x1c4>
   2e8e0:	mov	r0, #0
   2e8e4:	mov	r1, #0
   2e8e8:	cmp	ip, r4
   2e8ec:	beq	2ebec <flatcc_json_parser_double@@Base+0x4ec>
   2e8f0:	movw	r5, #39321	; 0x9999
   2e8f4:	mov	sl, #10
   2e8f8:	mov	r7, ip
   2e8fc:	str	r6, [sp, #20]
   2e900:	str	r2, [sp, #24]
   2e904:	movt	r5, #6553	; 0x1999
   2e908:	ldrb	r8, [r7]
   2e90c:	sub	r2, r8, #48	; 0x30
   2e910:	uxtb	r6, r2
   2e914:	mov	r2, #0
   2e918:	cmp	r6, #9
   2e91c:	bhi	2e954 <flatcc_json_parser_double@@Base+0x254>
   2e920:	movw	r6, #39320	; 0x9998
   2e924:	movt	r6, #39321	; 0x9999
   2e928:	subs	r6, r6, r0
   2e92c:	sbcs	r6, r5, r1
   2e930:	bcc	2e964 <flatcc_json_parser_double@@Base+0x264>
   2e934:	add	r1, r1, r1, lsl #2
   2e938:	add	r7, r7, #1
   2e93c:	lsl	r1, r1, #1
   2e940:	umlal	r8, r1, r0, sl
   2e944:	subs	r0, r8, #48	; 0x30
   2e948:	sbc	r1, r1, #0
   2e94c:	cmp	r4, r7
   2e950:	bne	2e908 <flatcc_json_parser_double@@Base+0x208>
   2e954:	mov	r5, r1
   2e958:	mov	sl, #0
   2e95c:	str	r0, [sp, #28]
   2e960:	b	2e980 <flatcc_json_parser_double@@Base+0x280>
   2e964:	adds	r6, r0, #1
   2e968:	mov	sl, #1
   2e96c:	adc	r5, r1, #0
   2e970:	cmp	r8, #52	; 0x34
   2e974:	movls	r6, r0
   2e978:	movls	r5, r1
   2e97c:	str	r6, [sp, #28]
   2e980:	cmp	r7, r4
   2e984:	beq	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2e988:	sub	r8, r7, ip
   2e98c:	mvn	ip, r3
   2e990:	mov	r3, #0
   2e994:	cmn	ip, #1000	; 0x3e8
   2e998:	mov	r0, ip
   2e99c:	mvnlt	r0, #1000	; 0x3e8
   2e9a0:	mvn	r0, r0
   2e9a4:	sub	r0, r0, r7
   2e9a8:	add	r0, r9, r0
   2e9ac:	ldrb	r1, [r7]
   2e9b0:	cmp	r1, #48	; 0x30
   2e9b4:	bne	2e9d8 <flatcc_json_parser_double@@Base+0x2d8>
   2e9b8:	add	r1, r7, #1
   2e9bc:	cmp	r7, lr
   2e9c0:	sub	r0, r0, #1
   2e9c4:	add	r3, r3, #1
   2e9c8:	mov	r7, r1
   2e9cc:	bne	2e9ac <flatcc_json_parser_double@@Base+0x2ac>
   2e9d0:	mov	r7, r1
   2e9d4:	b	2ea20 <flatcc_json_parser_double@@Base+0x320>
   2e9d8:	sub	r1, r1, #49	; 0x31
   2e9dc:	uxtb	r1, r1
   2e9e0:	cmp	r1, #8
   2e9e4:	bhi	2ea20 <flatcc_json_parser_double@@Base+0x320>
   2e9e8:	mvn	r2, #0
   2e9ec:	mov	r1, r2
   2e9f0:	cmp	r0, #0
   2e9f4:	beq	2ea14 <flatcc_json_parser_double@@Base+0x314>
   2e9f8:	ldrb	r2, [r7, -r1]
   2e9fc:	sub	r0, r0, #1
   2ea00:	sub	r2, r2, #48	; 0x30
   2ea04:	uxtb	r6, r2
   2ea08:	sub	r2, r1, #1
   2ea0c:	cmp	r6, #10
   2ea10:	bcc	2e9ec <flatcc_json_parser_double@@Base+0x2ec>
   2ea14:	sub	r3, r3, r1
   2ea18:	sub	r7, r7, r1
   2ea1c:	mov	sl, #1
   2ea20:	mov	r2, #0
   2ea24:	cmp	r7, r4
   2ea28:	beq	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2ea2c:	ldrb	r0, [r7]
   2ea30:	cmp	r0, #46	; 0x2e
   2ea34:	bne	2ebc4 <flatcc_json_parser_double@@Base+0x4c4>
   2ea38:	mov	r6, r7
   2ea3c:	ldrb	r0, [r6, #1]!
   2ea40:	sub	r1, r0, #48	; 0x30
   2ea44:	uxtb	r1, r1
   2ea48:	cmp	r1, #9
   2ea4c:	bhi	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2ea50:	cmp	r7, lr
   2ea54:	beq	2eb0c <flatcc_json_parser_double@@Base+0x40c>
   2ea58:	cmn	ip, #1000	; 0x3e8
   2ea5c:	mvn	r1, #1
   2ea60:	str	sl, [sp, #12]
   2ea64:	str	r6, [sp, #8]
   2ea68:	str	r8, [sp, #16]
   2ea6c:	mvnlt	ip, #1000	; 0x3e8
   2ea70:	sub	r1, r1, ip
   2ea74:	sub	r1, r1, r7
   2ea78:	add	sl, r9, r1
   2ea7c:	mov	r1, #0
   2ea80:	mov	ip, r1
   2ea84:	ldr	r1, [sp, #28]
   2ea88:	movw	r6, #39320	; 0x9998
   2ea8c:	movt	r6, #39321	; 0x9999
   2ea90:	subs	r1, r6, r1
   2ea94:	movw	r1, #39321	; 0x9999
   2ea98:	movt	r1, #6553	; 0x1999
   2ea9c:	sbcs	r1, r1, r5
   2eaa0:	bcc	2eb14 <flatcc_json_parser_double@@Base+0x414>
   2eaa4:	add	r1, r5, r5, lsl #2
   2eaa8:	ldr	r5, [sp, #28]
   2eaac:	uxtb	r0, r0
   2eab0:	mov	r6, #10
   2eab4:	lsl	r1, r1, #1
   2eab8:	umlal	r0, r1, r5, r6
   2eabc:	add	r6, r7, ip
   2eac0:	subs	r0, r0, #48	; 0x30
   2eac4:	sbc	r5, r1, #0
   2eac8:	cmp	sl, ip
   2eacc:	str	r0, [sp, #28]
   2ead0:	beq	2eaf4 <flatcc_json_parser_double@@Base+0x3f4>
   2ead4:	ldrb	r0, [r6, #2]
   2ead8:	mov	r8, r5
   2eadc:	add	r1, ip, #1
   2eae0:	sub	r5, r0, #48	; 0x30
   2eae4:	uxtb	r5, r5
   2eae8:	cmp	r5, #10
   2eaec:	mov	r5, r8
   2eaf0:	bcc	2ea80 <flatcc_json_parser_double@@Base+0x380>
   2eaf4:	ldr	r8, [sp, #16]
   2eaf8:	ldr	sl, [sp, #12]
   2eafc:	sub	r0, r3, #1
   2eb00:	add	r7, r6, #2
   2eb04:	sub	r3, r0, ip
   2eb08:	b	2eb54 <flatcc_json_parser_double@@Base+0x454>
   2eb0c:	mov	r7, r6
   2eb10:	b	2eb58 <flatcc_json_parser_double@@Base+0x458>
   2eb14:	ldr	sl, [sp, #12]
   2eb18:	ldr	r8, [sp, #16]
   2eb1c:	add	r1, r7, ip
   2eb20:	sub	r3, r3, ip
   2eb24:	add	r7, r1, #1
   2eb28:	cmp	sl, #0
   2eb2c:	bne	2eb54 <flatcc_json_parser_double@@Base+0x454>
   2eb30:	ldr	r6, [sp, #28]
   2eb34:	uxtb	r0, r0
   2eb38:	mov	sl, #1
   2eb3c:	adds	r1, r6, #1
   2eb40:	adc	ip, r5, #0
   2eb44:	cmp	r0, #52	; 0x34
   2eb48:	movhi	r6, r1
   2eb4c:	movhi	r5, ip
   2eb50:	str	r6, [sp, #28]
   2eb54:	ldr	r6, [sp, #8]
   2eb58:	cmp	r7, r4
   2eb5c:	beq	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2eb60:	sub	r0, r7, r6
   2eb64:	add	r8, r0, r8
   2eb68:	ldrb	r0, [r7]
   2eb6c:	cmp	r0, #48	; 0x30
   2eb70:	bne	2eb88 <flatcc_json_parser_double@@Base+0x488>
   2eb74:	add	r7, r7, #1
   2eb78:	add	r3, r3, #1
   2eb7c:	cmp	r4, r7
   2eb80:	bne	2eb68 <flatcc_json_parser_double@@Base+0x468>
   2eb84:	b	2ebc4 <flatcc_json_parser_double@@Base+0x4c4>
   2eb88:	sub	r0, r0, #49	; 0x31
   2eb8c:	uxtb	r0, r0
   2eb90:	cmp	r0, #8
   2eb94:	bhi	2ebc4 <flatcc_json_parser_double@@Base+0x4c4>
   2eb98:	add	r0, r7, #1
   2eb9c:	mov	sl, #1
   2eba0:	mov	r7, r0
   2eba4:	cmp	r4, r0
   2eba8:	beq	2ebc4 <flatcc_json_parser_double@@Base+0x4c4>
   2ebac:	mov	r0, r7
   2ebb0:	ldrb	r1, [r0], #1
   2ebb4:	sub	r1, r1, #48	; 0x30
   2ebb8:	uxtb	r1, r1
   2ebbc:	cmp	r1, #10
   2ebc0:	bcc	2eba0 <flatcc_json_parser_double@@Base+0x4a0>
   2ebc4:	cmp	r7, r4
   2ebc8:	beq	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2ebcc:	ldrb	r0, [r7]
   2ebd0:	mov	ip, #0
   2ebd4:	orr	r0, r0, #32
   2ebd8:	cmp	r0, #101	; 0x65
   2ebdc:	bne	2ebfc <flatcc_json_parser_double@@Base+0x4fc>
   2ebe0:	sub	r0, r4, r7
   2ebe4:	cmp	r0, #2
   2ebe8:	bge	2ec6c <flatcc_json_parser_double@@Base+0x56c>
   2ebec:	mov	r2, #0
   2ebf0:	mov	r0, r2
   2ebf4:	sub	sp, fp, #28
   2ebf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ebfc:	mov	r0, #0
   2ec00:	cmp	r7, r4
   2ec04:	mov	r2, #0
   2ec08:	beq	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2ec0c:	ldr	r1, [sp, #28]
   2ec10:	cmp	ip, #0
   2ec14:	vmov.i32	d16, #0	; 0x00000000
   2ec18:	rsbne	r0, r0, #0
   2ec1c:	orrs	r1, r1, r5
   2ec20:	beq	2ec44 <flatcc_json_parser_double@@Base+0x544>
   2ec24:	add	r1, r8, r3
   2ec28:	add	r4, r1, r0
   2ec2c:	cmn	r4, #324	; 0x144
   2ec30:	blt	2ec44 <flatcc_json_parser_double@@Base+0x544>
   2ec34:	movw	r0, #310	; 0x136
   2ec38:	cmp	r4, r0
   2ec3c:	ble	2eca0 <flatcc_json_parser_double@@Base+0x5a0>
   2ec40:	vldr	d16, [pc, #880]	; 2efb8 <flatcc_json_parser_double@@Base+0x8b8>
   2ec44:	ldr	r0, [sp, #24]
   2ec48:	vstr	d16, [r0]
   2ec4c:	ldr	r0, [sp, #20]
   2ec50:	cmp	r0, #0
   2ec54:	ldrne	r0, [sp, #24]
   2ec58:	vldrne	d16, [r0]
   2ec5c:	vnegne.f64	d16, d16
   2ec60:	vstrne	d16, [r0]
   2ec64:	mov	r2, r7
   2ec68:	b	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2ec6c:	mov	r1, r7
   2ec70:	ldrb	r0, [r1, #1]!
   2ec74:	cmp	r0, #45	; 0x2d
   2ec78:	beq	2ed98 <flatcc_json_parser_double@@Base+0x698>
   2ec7c:	mov	ip, #0
   2ec80:	cmp	r0, #43	; 0x2b
   2ec84:	bne	2eda8 <flatcc_json_parser_double@@Base+0x6a8>
   2ec88:	add	r1, r7, #2
   2ec8c:	mov	r2, #0
   2ec90:	cmp	r1, r4
   2ec94:	beq	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2ec98:	mov	ip, #0
   2ec9c:	b	2eda8 <flatcc_json_parser_double@@Base+0x6a8>
   2eca0:	mov	r0, #0
   2eca4:	cmp	r0, r5, lsr #21
   2eca8:	bne	2ee08 <flatcc_json_parser_double@@Base+0x708>
   2ecac:	cmp	r4, #22
   2ecb0:	bhi	2ee08 <flatcc_json_parser_double@@Base+0x708>
   2ecb4:	ldr	r0, [sp, #28]
   2ecb8:	mov	r1, r5
   2ecbc:	bl	30ebc <flatcc_json_parser_struct_as_root@@Base+0x418>
   2ecc0:	sub	r2, r4, r8
   2ecc4:	vmov	d16, r0, r1
   2ecc8:	add	r0, r2, #22
   2eccc:	cmp	r0, #44	; 0x2c
   2ecd0:	bhi	2ec44 <flatcc_json_parser_double@@Base+0x544>
   2ecd4:	add	r1, pc, #0
   2ecd8:	ldr	pc, [r1, r0, lsl #2]
   2ecdc:	muleq	r2, r0, sp
   2ece0:	andeq	lr, r2, r4, asr lr
   2ece4:	andeq	lr, r2, ip, asr lr
   2ece8:	andeq	lr, r2, r4, ror #28
   2ecec:	andeq	lr, r2, ip, ror #28
   2ecf0:	andeq	lr, r2, r4, ror lr
   2ecf4:	andeq	lr, r2, ip, ror lr
   2ecf8:	andeq	lr, r2, r4, lsl #29
   2ecfc:	andeq	lr, r2, ip, lsl #29
   2ed00:	muleq	r2, r4, lr
   2ed04:	muleq	r2, ip, lr
   2ed08:	andeq	lr, r2, r4, lsr #29
   2ed0c:	andeq	lr, r2, ip, lsr #29
   2ed10:			; <UNDEFINED> instruction: 0x0002eeb4
   2ed14:			; <UNDEFINED> instruction: 0x0002eebc
   2ed18:	andeq	lr, r2, r4, asr #29
   2ed1c:	andeq	lr, r2, ip, asr #29
   2ed20:	ldrdeq	lr, [r2], -r4
   2ed24:	ldrdeq	lr, [r2], -ip
   2ed28:	andeq	lr, r2, r4, ror #29
   2ed2c:	andeq	lr, r2, ip, ror #29
   2ed30:	strdeq	lr, [r2], -r4
   2ed34:	andeq	lr, r2, r4, asr #24
   2ed38:	andeq	lr, r2, r0, lsl #30
   2ed3c:	andeq	lr, r2, r8, lsl #30
   2ed40:	andeq	lr, r2, r0, lsl pc
   2ed44:	andeq	lr, r2, r8, lsl pc
   2ed48:	andeq	lr, r2, r0, lsr #30
   2ed4c:	andeq	lr, r2, r8, lsr #30
   2ed50:	andeq	lr, r2, r0, lsr pc
   2ed54:	andeq	lr, r2, r8, lsr pc
   2ed58:	andeq	lr, r2, r0, asr #30
   2ed5c:	andeq	lr, r2, r8, asr #30
   2ed60:	andeq	lr, r2, r0, asr pc
   2ed64:	andeq	lr, r2, r8, asr pc
   2ed68:	andeq	lr, r2, r0, ror #30
   2ed6c:	andeq	lr, r2, r8, ror #30
   2ed70:	andeq	lr, r2, r0, ror pc
   2ed74:	andeq	lr, r2, r8, ror pc
   2ed78:	andeq	lr, r2, r0, lsl #31
   2ed7c:	andeq	lr, r2, r8, lsl #31
   2ed80:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   2ed84:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2ed88:	andeq	lr, r2, r0, lsr #31
   2ed8c:	andeq	lr, r2, r8, lsr #31
   2ed90:	vldr	d17, [pc, #712]	; 2f060 <flatcc_json_parser_double@@Base+0x960>
   2ed94:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ed98:	add	r1, r7, #2
   2ed9c:	mov	ip, #1
   2eda0:	cmp	r1, r4
   2eda4:	beq	2ebec <flatcc_json_parser_double@@Base+0x4ec>
   2eda8:	ldrb	r0, [r1]
   2edac:	mov	r7, r5
   2edb0:	mov	r2, #0
   2edb4:	sub	r0, r0, #48	; 0x30
   2edb8:	uxtb	r5, r0
   2edbc:	cmp	r5, #9
   2edc0:	bhi	2ebf0 <flatcc_json_parser_double@@Base+0x4f0>
   2edc4:	mov	r5, r7
   2edc8:	add	r7, r1, #1
   2edcc:	cmp	r1, lr
   2edd0:	beq	2ec00 <flatcc_json_parser_double@@Base+0x500>
   2edd4:	ldrb	r1, [r7]
   2edd8:	sub	r2, r1, #48	; 0x30
   2eddc:	uxtb	r2, r2
   2ede0:	cmp	r2, #9
   2ede4:	bhi	2ec00 <flatcc_json_parser_double@@Base+0x500>
   2ede8:	cmp	r0, #32768	; 0x8000
   2edec:	add	r7, r7, #1
   2edf0:	addlt	r0, r0, r0, lsl #2
   2edf4:	addlt	r0, r1, r0, lsl #1
   2edf8:	sublt	r0, r0, #48	; 0x30
   2edfc:	cmp	r4, r7
   2ee00:	bne	2edd4 <flatcc_json_parser_double@@Base+0x6d4>
   2ee04:	b	2ec00 <flatcc_json_parser_double@@Base+0x500>
   2ee08:	ldr	r0, [sp, #24]
   2ee0c:	mov	r1, r5
   2ee10:	mov	r2, r4
   2ee14:	mov	r3, r8
   2ee18:	str	sl, [sp]
   2ee1c:	str	r0, [sp, #4]
   2ee20:	ldr	r0, [sp, #28]
   2ee24:	bl	2cd90 <grisu3_diy_fp_encode_double@@Base>
   2ee28:	cmp	r0, #0
   2ee2c:	bne	2ec4c <flatcc_json_parser_double@@Base+0x54c>
   2ee30:	add	r1, sp, #32
   2ee34:	mov	r0, r9
   2ee38:	bl	12b70 <strtod@plt>
   2ee3c:	ldr	r0, [sp, #24]
   2ee40:	vstr	d0, [r0]
   2ee44:	ldr	r0, [sp, #32]
   2ee48:	cmp	r0, r7
   2ee4c:	movcc	r7, r0
   2ee50:	b	2ec64 <flatcc_json_parser_double@@Base+0x564>
   2ee54:	vldr	d17, [pc, #356]	; 2efc0 <flatcc_json_parser_double@@Base+0x8c0>
   2ee58:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee5c:	vldr	d17, [pc, #356]	; 2efc8 <flatcc_json_parser_double@@Base+0x8c8>
   2ee60:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee64:	vldr	d17, [pc, #356]	; 2efd0 <flatcc_json_parser_double@@Base+0x8d0>
   2ee68:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee6c:	vldr	d17, [pc, #356]	; 2efd8 <flatcc_json_parser_double@@Base+0x8d8>
   2ee70:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee74:	vldr	d17, [pc, #356]	; 2efe0 <flatcc_json_parser_double@@Base+0x8e0>
   2ee78:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee7c:	vldr	d17, [pc, #356]	; 2efe8 <flatcc_json_parser_double@@Base+0x8e8>
   2ee80:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee84:	vldr	d17, [pc, #356]	; 2eff0 <flatcc_json_parser_double@@Base+0x8f0>
   2ee88:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee8c:	vldr	d17, [pc, #356]	; 2eff8 <flatcc_json_parser_double@@Base+0x8f8>
   2ee90:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee94:	vldr	d17, [pc, #356]	; 2f000 <flatcc_json_parser_double@@Base+0x900>
   2ee98:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2ee9c:	vldr	d17, [pc, #356]	; 2f008 <flatcc_json_parser_double@@Base+0x908>
   2eea0:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eea4:	vldr	d17, [pc, #356]	; 2f010 <flatcc_json_parser_double@@Base+0x910>
   2eea8:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eeac:	vldr	d17, [pc, #356]	; 2f018 <flatcc_json_parser_double@@Base+0x918>
   2eeb0:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eeb4:	vldr	d17, [pc, #356]	; 2f020 <flatcc_json_parser_double@@Base+0x920>
   2eeb8:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eebc:	vldr	d17, [pc, #356]	; 2f028 <flatcc_json_parser_double@@Base+0x928>
   2eec0:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eec4:	vldr	d17, [pc, #356]	; 2f030 <flatcc_json_parser_double@@Base+0x930>
   2eec8:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eecc:	vldr	d17, [pc, #356]	; 2f038 <flatcc_json_parser_double@@Base+0x938>
   2eed0:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eed4:	vldr	d17, [pc, #356]	; 2f040 <flatcc_json_parser_double@@Base+0x940>
   2eed8:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eedc:	vldr	d17, [pc, #356]	; 2f048 <flatcc_json_parser_double@@Base+0x948>
   2eee0:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eee4:	vldr	d17, [pc, #356]	; 2f050 <flatcc_json_parser_double@@Base+0x950>
   2eee8:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eeec:	vldr	d17, [pc, #356]	; 2f058 <flatcc_json_parser_double@@Base+0x958>
   2eef0:	b	2eef8 <flatcc_json_parser_double@@Base+0x7f8>
   2eef4:	vmov.f64	d17, #36	; 0x41200000  10.0
   2eef8:	vdiv.f64	d16, d16, d17
   2eefc:	b	2ec44 <flatcc_json_parser_double@@Base+0x544>
   2ef00:	vmov.f64	d17, #36	; 0x41200000  10.0
   2ef04:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef08:	vldr	d17, [pc, #328]	; 2f058 <flatcc_json_parser_double@@Base+0x958>
   2ef0c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef10:	vldr	d17, [pc, #312]	; 2f050 <flatcc_json_parser_double@@Base+0x950>
   2ef14:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef18:	vldr	d17, [pc, #296]	; 2f048 <flatcc_json_parser_double@@Base+0x948>
   2ef1c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef20:	vldr	d17, [pc, #280]	; 2f040 <flatcc_json_parser_double@@Base+0x940>
   2ef24:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef28:	vldr	d17, [pc, #264]	; 2f038 <flatcc_json_parser_double@@Base+0x938>
   2ef2c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef30:	vldr	d17, [pc, #248]	; 2f030 <flatcc_json_parser_double@@Base+0x930>
   2ef34:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef38:	vldr	d17, [pc, #232]	; 2f028 <flatcc_json_parser_double@@Base+0x928>
   2ef3c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef40:	vldr	d17, [pc, #216]	; 2f020 <flatcc_json_parser_double@@Base+0x920>
   2ef44:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef48:	vldr	d17, [pc, #200]	; 2f018 <flatcc_json_parser_double@@Base+0x918>
   2ef4c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef50:	vldr	d17, [pc, #184]	; 2f010 <flatcc_json_parser_double@@Base+0x910>
   2ef54:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef58:	vldr	d17, [pc, #168]	; 2f008 <flatcc_json_parser_double@@Base+0x908>
   2ef5c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef60:	vldr	d17, [pc, #152]	; 2f000 <flatcc_json_parser_double@@Base+0x900>
   2ef64:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef68:	vldr	d17, [pc, #136]	; 2eff8 <flatcc_json_parser_double@@Base+0x8f8>
   2ef6c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef70:	vldr	d17, [pc, #120]	; 2eff0 <flatcc_json_parser_double@@Base+0x8f0>
   2ef74:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef78:	vldr	d17, [pc, #104]	; 2efe8 <flatcc_json_parser_double@@Base+0x8e8>
   2ef7c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef80:	vldr	d17, [pc, #88]	; 2efe0 <flatcc_json_parser_double@@Base+0x8e0>
   2ef84:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef88:	vldr	d17, [pc, #72]	; 2efd8 <flatcc_json_parser_double@@Base+0x8d8>
   2ef8c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef90:	vldr	d17, [pc, #56]	; 2efd0 <flatcc_json_parser_double@@Base+0x8d0>
   2ef94:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2ef98:	vldr	d17, [pc, #40]	; 2efc8 <flatcc_json_parser_double@@Base+0x8c8>
   2ef9c:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2efa0:	vldr	d17, [pc, #24]	; 2efc0 <flatcc_json_parser_double@@Base+0x8c0>
   2efa4:	b	2efac <flatcc_json_parser_double@@Base+0x8ac>
   2efa8:	vldr	d17, [pc, #176]	; 2f060 <flatcc_json_parser_double@@Base+0x960>
   2efac:	vmul.f64	d16, d16, d17
   2efb0:	b	2ec44 <flatcc_json_parser_double@@Base+0x544>
   2efb4:	nop	{0}
   2efb8:	andeq	r0, r0, r0
   2efbc:	svcvc	0x00f00000	; IMB
   2efc0:	usatle	lr, #2, r0, asr #30
   2efc4:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   2efc8:	ldmvc	r5!, {r6, sl, fp, pc}
   2efcc:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   2efd0:	addsvs	r3, r1, r0, lsl #26
   2efd4:	mvnmi	r5, #228, 16	; 0xe40000
   2efd8:	strbvs	ip, [lr, -r0, lsl #16]
   2efdc:			; <UNDEFINED> instruction: 0x43abc16d
   2efe0:	ldrbhi	sl, [r8]
   2efe4:	cmnmi	r6, #1459617792	; 0x57000000
   2efe8:	strbcc	r8, [r0, r0]!
   2efec:	movtmi	ip, #4985	; 0x1379
   2eff0:	ldrtcs	r0, [r4], -r0
   2eff4:	movwmi	r6, #52213	; 0xcbf5
   2eff8:	cdpne	0, 9, cr0, cr0, cr0, {0}
   2effc:	sbcsmi	fp, r6, #196, 24	; 0xc400
   2f000:	strb	r0, [r0, #-0]
   2f004:	adcmi	r3, r2, #156	; 0x9c
   2f008:	andge	r0, r0, #0
   2f00c:	rsbmi	r1, sp, #148, 20	; 0x94000
   2f010:	stmda	r0, {}	; <UNPREDICTABLE>
   2f014:	eorsmi	r4, r7, #7733248	; 0x760000
   2f018:	andcs	r0, r0, r0
   2f01c:	andmi	sl, r2, #95	; 0x5f
   2f020:	andeq	r0, r0, r0
   2f024:	bicmi	ip, sp, r5, ror #26
   2f028:	andeq	r0, r0, r0
   2f02c:	orrsmi	sp, r7, r4, lsl #15
   2f030:	andeq	r0, r0, r0
   2f034:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   2f038:	andeq	r0, r0, r0
   2f03c:	smlawbmi	lr, r0, r4, r8
   2f040:	andeq	r0, r0, r0
   2f044:	rscsmi	r6, r8, r0, lsl #20
   2f048:	andeq	r0, r0, r0
   2f04c:	sbcmi	r8, r3, r0, lsl #16
   2f050:	andeq	r0, r0, r0
   2f054:	addmi	r4, pc, r0
   2f058:	andeq	r0, r0, r0
   2f05c:	subsmi	r0, r9, r0
   2f060:			; <UNDEFINED> instruction: 0x064dd592
   2f064:	strmi	pc, [r0], #207	; 0xcf

0002f068 <flatcc_json_parser_float@@Base>:
   2f068:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f06c:	add	fp, sp, #24
   2f070:	vpush	{d8-d9}
   2f074:	sub	sp, sp, #8
   2f078:	mov	r8, r0
   2f07c:	mov	r0, #0
   2f080:	mov	r6, r1
   2f084:	cmp	r1, r2
   2f088:	str	r0, [r3]
   2f08c:	beq	2f150 <flatcc_json_parser_float@@Base+0xe8>
   2f090:	mov	r0, r6
   2f094:	mov	r5, r2
   2f098:	mov	r7, r3
   2f09c:	ldrb	r1, [r0], #1
   2f0a0:	cmp	r1, #45	; 0x2d
   2f0a4:	movne	r0, r6
   2f0a8:	sub	r2, r2, r0
   2f0ac:	cmp	r2, #2
   2f0b0:	blt	2f0dc <flatcc_json_parser_float@@Base+0x74>
   2f0b4:	sub	r1, r1, #45	; 0x2d
   2f0b8:	clz	r1, r1
   2f0bc:	lsr	r1, r1, #5
   2f0c0:	ldrb	r1, [r6, r1]
   2f0c4:	cmp	r1, #46	; 0x2e
   2f0c8:	beq	2f158 <flatcc_json_parser_float@@Base+0xf0>
   2f0cc:	cmp	r1, #48	; 0x30
   2f0d0:	ldrbeq	r0, [r0, #1]
   2f0d4:	cmpeq	r0, #48	; 0x30
   2f0d8:	beq	2f158 <flatcc_json_parser_float@@Base+0xf0>
   2f0dc:	sub	r1, r5, r6
   2f0e0:	mov	r2, sp
   2f0e4:	mov	r0, r6
   2f0e8:	bl	2e7f0 <flatcc_json_parser_double@@Base+0xf0>
   2f0ec:	vldr	d16, [sp]
   2f0f0:	mov	r4, r0
   2f0f4:	add	r0, pc, #164	; 0xa4
   2f0f8:	vcmpe.f64	d16, #0.0
   2f0fc:	vcvt.f32.f64	s16, d16
   2f100:	vmrs	APSR_nzcv, fpscr
   2f104:	vmov.f32	s0, s16
   2f108:	addmi	r0, r0, #4
   2f10c:	vldr	s18, [r0]
   2f110:	bl	12ae0 <__isinff@plt>
   2f114:	cmp	r0, #0
   2f118:	movne	r4, r6
   2f11c:	vseleq.f32	s0, s16, s18
   2f120:	cmp	r4, #0
   2f124:	vstr	s0, [r7]
   2f128:	cmpne	r4, r6
   2f12c:	bne	2f190 <flatcc_json_parser_float@@Base+0x128>
   2f130:	bl	12ae0 <__isinff@plt>
   2f134:	ldr	r1, [r8, #24]
   2f138:	cmp	r0, #0
   2f13c:	beq	2f168 <flatcc_json_parser_float@@Base+0x100>
   2f140:	cmp	r1, #0
   2f144:	bne	2f18c <flatcc_json_parser_float@@Base+0x124>
   2f148:	mov	r0, #7
   2f14c:	b	2f174 <flatcc_json_parser_float@@Base+0x10c>
   2f150:	mov	r4, r6
   2f154:	b	2f190 <flatcc_json_parser_float@@Base+0x128>
   2f158:	ldr	r0, [r8, #24]
   2f15c:	cmp	r0, #0
   2f160:	bne	2f18c <flatcc_json_parser_float@@Base+0x124>
   2f164:	b	2f170 <flatcc_json_parser_float@@Base+0x108>
   2f168:	cmp	r1, #0
   2f16c:	bne	2f18c <flatcc_json_parser_float@@Base+0x124>
   2f170:	mov	r0, #6
   2f174:	str	r6, [r8, #36]	; 0x24
   2f178:	add	r2, r6, #1
   2f17c:	ldr	r1, [r8, #4]
   2f180:	sub	r1, r2, r1
   2f184:	str	r1, [r8, #20]
   2f188:	str	r0, [r8, #24]
   2f18c:	mov	r4, r5
   2f190:	mov	r0, r4
   2f194:	sub	sp, fp, #40	; 0x28
   2f198:	vpop	{d8-d9}
   2f19c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f1a0:	svcvc	0x00800000
   2f1a4:			; <UNDEFINED> instruction: 0xff800000

0002f1a8 <flatcc_json_parser_integer@@Base>:
   2f1a8:	push	{r4, r5, r6, r7, fp, lr}
   2f1ac:	add	fp, sp, #16
   2f1b0:	mov	ip, r1
   2f1b4:	cmp	r1, r2
   2f1b8:	beq	2f2f0 <flatcc_json_parser_integer@@Base+0x148>
   2f1bc:	ldrb	r1, [ip]
   2f1c0:	mov	r4, #0
   2f1c4:	sub	r1, r1, #45	; 0x2d
   2f1c8:	clz	r1, r1
   2f1cc:	lsr	r1, r1, #5
   2f1d0:	str	r1, [r3]
   2f1d4:	add	r1, ip, r1
   2f1d8:	cmp	r1, r2
   2f1dc:	beq	2f244 <flatcc_json_parser_integer@@Base+0x9c>
   2f1e0:	mov	lr, #10
   2f1e4:	mov	r5, #0
   2f1e8:	ldrb	r6, [r1]
   2f1ec:	sub	r7, r6, #48	; 0x30
   2f1f0:	uxtb	r7, r7
   2f1f4:	cmp	r7, #9
   2f1f8:	bhi	2f254 <flatcc_json_parser_integer@@Base+0xac>
   2f1fc:	add	r7, r5, r5, lsl #2
   2f200:	lsl	r7, r7, #1
   2f204:	umlal	r6, r7, r4, lr
   2f208:	subs	r6, r6, #48	; 0x30
   2f20c:	sbc	r7, r7, #0
   2f210:	subs	r4, r6, r4
   2f214:	sbcs	r4, r7, r5
   2f218:	bcc	2f2a4 <flatcc_json_parser_integer@@Base+0xfc>
   2f21c:	add	r1, r1, #1
   2f220:	mov	r4, r6
   2f224:	mov	r5, r7
   2f228:	cmp	r2, r1
   2f22c:	bne	2f1e8 <flatcc_json_parser_integer@@Base+0x40>
   2f230:	mov	r3, #0
   2f234:	mov	r1, r2
   2f238:	mov	r4, r6
   2f23c:	mov	r5, r7
   2f240:	b	2f258 <flatcc_json_parser_integer@@Base+0xb0>
   2f244:	mov	r1, r2
   2f248:	mov	r5, #0
   2f24c:	mov	r3, #0
   2f250:	b	2f258 <flatcc_json_parser_integer@@Base+0xb0>
   2f254:	mov	r3, #1
   2f258:	cmp	r1, ip
   2f25c:	beq	2f2f0 <flatcc_json_parser_integer@@Base+0x148>
   2f260:	cmp	r3, #0
   2f264:	beq	2f2e4 <flatcc_json_parser_integer@@Base+0x13c>
   2f268:	ldrb	r3, [r1]
   2f26c:	cmp	r3, #46	; 0x2e
   2f270:	cmpne	r3, #101	; 0x65
   2f274:	bne	2f2dc <flatcc_json_parser_integer@@Base+0x134>
   2f278:	ldr	r3, [r0, #24]
   2f27c:	cmp	r3, #0
   2f280:	bne	2f2d4 <flatcc_json_parser_integer@@Base+0x12c>
   2f284:	str	r1, [r0, #36]	; 0x24
   2f288:	add	r1, r1, #1
   2f28c:	mov	r3, #12
   2f290:	ldr	r7, [r0, #4]
   2f294:	sub	r1, r1, r7
   2f298:	str	r1, [r0, #20]
   2f29c:	str	r3, [r0, #24]
   2f2a0:	b	2f2d4 <flatcc_json_parser_integer@@Base+0x12c>
   2f2a4:	ldr	r7, [r0, #24]
   2f2a8:	cmp	r7, #0
   2f2ac:	bne	2f2d4 <flatcc_json_parser_integer@@Base+0x12c>
   2f2b0:	str	r1, [r0, #36]	; 0x24
   2f2b4:	cmp	r3, #0
   2f2b8:	mov	r7, #8
   2f2bc:	add	r1, r1, #1
   2f2c0:	ldr	r3, [r0, #4]
   2f2c4:	movweq	r7, #7
   2f2c8:	sub	r1, r1, r3
   2f2cc:	str	r1, [r0, #20]
   2f2d0:	str	r7, [r0, #24]
   2f2d4:	mov	ip, r2
   2f2d8:	b	2f2f0 <flatcc_json_parser_integer@@Base+0x148>
   2f2dc:	cmp	r3, #69	; 0x45
   2f2e0:	beq	2f278 <flatcc_json_parser_integer@@Base+0xd0>
   2f2e4:	ldr	r0, [fp, #8]
   2f2e8:	mov	ip, r1
   2f2ec:	strd	r4, [r0]
   2f2f0:	mov	r0, ip
   2f2f4:	pop	{r4, r5, r6, r7, fp, pc}

0002f2f8 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   2f2f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f2fc:	add	fp, sp, #28
   2f300:	sub	sp, sp, #36	; 0x24
   2f304:	mov	r7, r3
   2f308:	mov	r4, r2
   2f30c:	mov	r5, r0
   2f310:	cmp	r1, r2
   2f314:	beq	2f32c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   2f318:	ldrb	r0, [r1]
   2f31c:	cmp	r0, #34	; 0x22
   2f320:	bne	2f32c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34>
   2f324:	add	r9, r1, #1
   2f328:	b	2f35c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   2f32c:	ldr	r0, [r5, #24]
   2f330:	mov	r9, r4
   2f334:	cmp	r0, #0
   2f338:	bne	2f35c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x64>
   2f33c:	str	r1, [r5, #36]	; 0x24
   2f340:	add	r1, r1, #1
   2f344:	mov	r0, #16
   2f348:	mov	r9, r4
   2f34c:	ldr	r2, [r5, #4]
   2f350:	sub	r1, r1, r2
   2f354:	str	r1, [r5, #20]
   2f358:	str	r0, [r5, #24]
   2f35c:	ldr	r6, [fp, #8]
   2f360:	mov	r0, r5
   2f364:	mov	r1, r9
   2f368:	mov	r2, r4
   2f36c:	bl	2d2c4 <flatcc_json_parser_string_part@@Base>
   2f370:	mov	sl, r0
   2f374:	cmp	r0, r4
   2f378:	mov	r0, r4
   2f37c:	beq	2f3b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   2f380:	ldrb	r0, [sl]
   2f384:	cmp	r0, #34	; 0x22
   2f388:	bne	2f3b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xbc>
   2f38c:	sub	r1, sl, r9
   2f390:	and	r0, r1, #3
   2f394:	str	r1, [sp, #28]
   2f398:	lsr	r1, r1, #2
   2f39c:	add	r8, r1, r1, lsl #1
   2f3a0:	cmp	r0, #2
   2f3a4:	beq	2f3f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xfc>
   2f3a8:	cmp	r0, #3
   2f3ac:	addeq	r8, r8, #2
   2f3b0:	b	2f3f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x100>
   2f3b4:	mov	r0, sl
   2f3b8:	mov	r1, #0
   2f3bc:	str	r1, [r7]
   2f3c0:	ldr	r1, [r5, #24]
   2f3c4:	cmp	r1, #0
   2f3c8:	bne	2f444 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2f3cc:	str	r0, [r5, #36]	; 0x24
   2f3d0:	mov	r1, #31
   2f3d4:	cmp	r6, #0
   2f3d8:	add	r0, r0, #1
   2f3dc:	ldr	r2, [r5, #4]
   2f3e0:	movwne	r1, #32
   2f3e4:	sub	r0, r0, r2
   2f3e8:	str	r0, [r5, #20]
   2f3ec:	str	r1, [r5, #24]
   2f3f0:	b	2f444 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2f3f4:	add	r8, r8, #1
   2f3f8:	ldr	r0, [r5]
   2f3fc:	mov	r1, #1
   2f400:	mov	r2, #1
   2f404:	mvn	r3, #0
   2f408:	bl	2a240 <flatcc_builder_start_vector@@Base>
   2f40c:	cmp	r0, #0
   2f410:	beq	2f450 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x158>
   2f414:	mov	r0, #0
   2f418:	str	r0, [r7]
   2f41c:	ldr	r0, [r5, #24]
   2f420:	cmp	r0, #0
   2f424:	bne	2f444 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2f428:	mov	r0, #33	; 0x21
   2f42c:	str	sl, [r5, #36]	; 0x24
   2f430:	add	r2, sl, #1
   2f434:	ldr	r1, [r5, #4]
   2f438:	sub	r1, r2, r1
   2f43c:	str	r1, [r5, #20]
   2f440:	str	r0, [r5, #24]
   2f444:	mov	r0, r4
   2f448:	sub	sp, fp, #28
   2f44c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f450:	ldr	r0, [r5]
   2f454:	mov	r1, r8
   2f458:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   2f45c:	cmp	r0, #0
   2f460:	beq	2f414 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   2f464:	movw	r1, #12256	; 0x2fe0
   2f468:	movw	r2, #12000	; 0x2ee0
   2f46c:	ldr	ip, [sp, #28]
   2f470:	cmp	r6, #0
   2f474:	str	r7, [sp, #8]
   2f478:	add	r7, sp, #32
   2f47c:	mov	r6, r9
   2f480:	str	r0, [sp, #4]
   2f484:	str	r0, [sp, #16]
   2f488:	str	r8, [sp, #24]
   2f48c:	movt	r1, #3
   2f490:	movt	r2, #3
   2f494:	movne	r2, r1
   2f498:	cmp	r8, #0
   2f49c:	mov	r1, r8
   2f4a0:	mvneq	r1, #0
   2f4a4:	str	r1, [sp, #20]
   2f4a8:	mov	r1, #0
   2f4ac:	str	ip, [sp, #12]
   2f4b0:	cmp	ip, r1
   2f4b4:	beq	2f55c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x264>
   2f4b8:	ldrb	r3, [r6, r1]
   2f4bc:	ldrb	lr, [r2, r3]
   2f4c0:	cmp	lr, #64	; 0x40
   2f4c4:	strb	lr, [r7, r1]
   2f4c8:	bcc	2f4e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
   2f4cc:	cmp	lr, #65	; 0x41
   2f4d0:	bne	2f598 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a0>
   2f4d4:	sub	r1, r1, #1
   2f4d8:	sub	ip, ip, #1
   2f4dc:	add	r6, r6, #1
   2f4e0:	add	r1, r1, #1
   2f4e4:	cmp	r1, #4
   2f4e8:	bcc	2f4b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   2f4ec:	ldr	r0, [sp, #20]
   2f4f0:	cmp	r0, #3
   2f4f4:	bcc	2f588 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   2f4f8:	ldrb	r3, [sp, #33]	; 0x21
   2f4fc:	ldrb	r1, [sp, #32]
   2f500:	mov	r0, r7
   2f504:	ldr	r8, [sp, #24]
   2f508:	sub	ip, ip, #4
   2f50c:	add	r6, r6, #4
   2f510:	lsr	r7, r3, #4
   2f514:	orr	r1, r7, r1, lsl #2
   2f518:	mov	r7, r0
   2f51c:	ldr	r0, [sp, #16]
   2f520:	strb	r1, [r0]
   2f524:	ldrb	r1, [sp, #34]	; 0x22
   2f528:	lsr	r1, r1, #2
   2f52c:	orr	r1, r1, r3, lsl #4
   2f530:	strb	r1, [r0, #1]
   2f534:	ldrb	r1, [sp, #34]	; 0x22
   2f538:	ldrb	r3, [sp, #35]	; 0x23
   2f53c:	orr	r1, r3, r1, lsl #6
   2f540:	strb	r1, [r0, #2]
   2f544:	ldr	r1, [sp, #20]
   2f548:	add	r0, r0, #3
   2f54c:	str	r0, [sp, #16]
   2f550:	subs	r1, r1, #3
   2f554:	bne	2f4a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ac>
   2f558:	b	2f648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   2f55c:	mov	r1, ip
   2f560:	mov	r0, ip
   2f564:	sub	ip, ip, r0
   2f568:	cmp	r1, #0
   2f56c:	beq	2f648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   2f570:	cmp	r1, #3
   2f574:	beq	2f5dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   2f578:	cmp	r1, #2
   2f57c:	ldrbeq	r1, [sp, #33]	; 0x21
   2f580:	tsteq	r1, #15
   2f584:	beq	2f630 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   2f588:	ldr	r0, [sp, #28]
   2f58c:	ldr	r1, [sp, #12]
   2f590:	sub	r0, r0, r1
   2f594:	b	2f658 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
   2f598:	cmp	lr, #66	; 0x42
   2f59c:	bne	2f628 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x330>
   2f5a0:	add	r3, r1, #1
   2f5a4:	mov	r0, r3
   2f5a8:	cmp	r3, ip
   2f5ac:	bcs	2f564 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   2f5b0:	cmp	r0, #7
   2f5b4:	bhi	2f564 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   2f5b8:	ldrb	r3, [r6, r0]
   2f5bc:	ldr	r8, [sp, #24]
   2f5c0:	ldrb	r3, [r2, r3]
   2f5c4:	sub	r3, r3, #65	; 0x41
   2f5c8:	uxtb	r7, r3
   2f5cc:	add	r3, r0, #1
   2f5d0:	cmp	r7, #2
   2f5d4:	bcc	2f5a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ac>
   2f5d8:	b	2f564 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   2f5dc:	ldr	r1, [sp, #20]
   2f5e0:	cmp	r1, #2
   2f5e4:	bcc	2f588 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   2f5e8:	ldrb	r1, [sp, #34]	; 0x22
   2f5ec:	ands	r2, r1, #3
   2f5f0:	bne	2f588 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x290>
   2f5f4:	ldrb	r3, [sp, #33]	; 0x21
   2f5f8:	ldrb	r2, [sp, #32]
   2f5fc:	ldr	r8, [sp, #24]
   2f600:	lsl	r7, r3, #4
   2f604:	orr	r1, r7, r1, lsr #2
   2f608:	ldr	r7, [sp, #16]
   2f60c:	strb	r1, [r7, #1]
   2f610:	lsr	r1, r3, #4
   2f614:	orr	r1, r1, r2, lsl #2
   2f618:	strb	r1, [r7]
   2f61c:	add	r7, r7, #2
   2f620:	str	r7, [sp, #16]
   2f624:	b	2f648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x350>
   2f628:	mov	r0, r1
   2f62c:	b	2f564 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x26c>
   2f630:	ldrb	r2, [sp, #32]
   2f634:	lsl	r2, r2, #2
   2f638:	orr	r1, r2, r1, lsr #4
   2f63c:	ldr	r2, [sp, #16]
   2f640:	strb	r1, [r2], #1
   2f644:	str	r2, [sp, #16]
   2f648:	cmp	ip, #0
   2f64c:	beq	2f668 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x370>
   2f650:	ldr	r0, [sp, #28]
   2f654:	sub	r0, r0, ip
   2f658:	ldr	r6, [fp, #8]
   2f65c:	ldr	r7, [sp, #8]
   2f660:	add	r0, r9, r0
   2f664:	b	2f3b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   2f668:	ldr	r0, [sp, #4]
   2f66c:	ldr	r1, [sp, #16]
   2f670:	ldr	r7, [sp, #8]
   2f674:	sub	r0, r1, r0
   2f678:	cmp	r8, r0
   2f67c:	bls	2f694 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   2f680:	sub	r1, r8, r0
   2f684:	ldr	r0, [r5]
   2f688:	bl	2a074 <flatcc_builder_truncate_vector@@Base>
   2f68c:	cmp	r0, #0
   2f690:	bne	2f414 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   2f694:	ldr	r0, [r5]
   2f698:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   2f69c:	cmp	r0, #0
   2f6a0:	str	r0, [r7]
   2f6a4:	beq	2f414 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x11c>
   2f6a8:	ldrb	r0, [sl]
   2f6ac:	cmp	r0, #34	; 0x22
   2f6b0:	bne	2f6bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   2f6b4:	add	r4, sl, #1
   2f6b8:	b	2f444 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2f6bc:	ldr	r0, [r5, #24]
   2f6c0:	cmp	r0, #0
   2f6c4:	bne	2f444 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   2f6c8:	mov	r0, #20
   2f6cc:	b	2f42c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x134>

0002f6d0 <flatcc_json_parser_build_string@@Base>:
   2f6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f6d4:	add	fp, sp, #28
   2f6d8:	sub	sp, sp, #4
   2f6dc:	mov	r9, r3
   2f6e0:	mov	sl, r2
   2f6e4:	mov	r5, r0
   2f6e8:	cmp	r1, r2
   2f6ec:	beq	2f704 <flatcc_json_parser_build_string@@Base+0x34>
   2f6f0:	ldrb	r0, [r1]
   2f6f4:	cmp	r0, #34	; 0x22
   2f6f8:	bne	2f704 <flatcc_json_parser_build_string@@Base+0x34>
   2f6fc:	add	r6, r1, #1
   2f700:	b	2f734 <flatcc_json_parser_build_string@@Base+0x64>
   2f704:	ldr	r0, [r5, #24]
   2f708:	mov	r6, sl
   2f70c:	cmp	r0, #0
   2f710:	bne	2f734 <flatcc_json_parser_build_string@@Base+0x64>
   2f714:	str	r1, [r5, #36]	; 0x24
   2f718:	add	r1, r1, #1
   2f71c:	mov	r0, #16
   2f720:	mov	r6, sl
   2f724:	ldr	r2, [r5, #4]
   2f728:	sub	r1, r1, r2
   2f72c:	str	r1, [r5, #20]
   2f730:	str	r0, [r5, #24]
   2f734:	mov	r0, r5
   2f738:	mov	r1, r6
   2f73c:	mov	r2, sl
   2f740:	bl	2d2c4 <flatcc_json_parser_string_part@@Base>
   2f744:	mov	r4, r0
   2f748:	cmp	r0, sl
   2f74c:	beq	2f774 <flatcc_json_parser_build_string@@Base+0xa4>
   2f750:	ldrb	r0, [r4]
   2f754:	cmp	r0, #34	; 0x22
   2f758:	bne	2f774 <flatcc_json_parser_build_string@@Base+0xa4>
   2f75c:	ldr	r0, [r5]
   2f760:	sub	r2, r4, r6
   2f764:	mov	r1, r6
   2f768:	bl	2c180 <flatcc_builder_create_string@@Base>
   2f76c:	mov	r6, r4
   2f770:	b	2f84c <flatcc_json_parser_build_string@@Base+0x17c>
   2f774:	ldr	r0, [r5]
   2f778:	bl	2a470 <flatcc_builder_start_string@@Base>
   2f77c:	cmp	r0, #0
   2f780:	beq	2f790 <flatcc_json_parser_build_string@@Base+0xc0>
   2f784:	mov	r0, #0
   2f788:	str	r0, [r9]
   2f78c:	b	2f898 <flatcc_json_parser_build_string@@Base+0x1c8>
   2f790:	ldr	r0, [r5]
   2f794:	sub	r2, r4, r6
   2f798:	mov	r1, r6
   2f79c:	bl	29f38 <flatcc_builder_append_string@@Base>
   2f7a0:	cmp	r0, #0
   2f7a4:	beq	2f784 <flatcc_json_parser_build_string@@Base+0xb4>
   2f7a8:	cmp	r4, sl
   2f7ac:	mov	r6, sl
   2f7b0:	beq	2f844 <flatcc_json_parser_build_string@@Base+0x174>
   2f7b4:	mov	r8, sp
   2f7b8:	add	r6, r8, #1
   2f7bc:	ldrb	r0, [r4]
   2f7c0:	cmp	r0, #34	; 0x22
   2f7c4:	beq	2f830 <flatcc_json_parser_build_string@@Base+0x160>
   2f7c8:	mov	r0, r5
   2f7cc:	mov	r1, r4
   2f7d0:	mov	r2, sl
   2f7d4:	mov	r3, r8
   2f7d8:	bl	2d418 <flatcc_json_parser_string_escape@@Base>
   2f7dc:	mov	r7, r0
   2f7e0:	ldr	r0, [r5]
   2f7e4:	ldrb	r2, [sp]
   2f7e8:	mov	r1, r6
   2f7ec:	bl	29f38 <flatcc_builder_append_string@@Base>
   2f7f0:	cmp	r0, #0
   2f7f4:	beq	2f838 <flatcc_json_parser_build_string@@Base+0x168>
   2f7f8:	mov	r0, r5
   2f7fc:	mov	r1, r7
   2f800:	mov	r2, sl
   2f804:	bl	2d2c4 <flatcc_json_parser_string_part@@Base>
   2f808:	cmp	r0, sl
   2f80c:	beq	2f840 <flatcc_json_parser_build_string@@Base+0x170>
   2f810:	mov	r4, r0
   2f814:	sub	r2, r0, r7
   2f818:	ldr	r0, [r5]
   2f81c:	mov	r1, r7
   2f820:	bl	29f38 <flatcc_builder_append_string@@Base>
   2f824:	cmp	r0, #0
   2f828:	bne	2f7bc <flatcc_json_parser_build_string@@Base+0xec>
   2f82c:	b	2f784 <flatcc_json_parser_build_string@@Base+0xb4>
   2f830:	mov	r6, r4
   2f834:	b	2f844 <flatcc_json_parser_build_string@@Base+0x174>
   2f838:	mov	r4, r7
   2f83c:	b	2f784 <flatcc_json_parser_build_string@@Base+0xb4>
   2f840:	mov	r6, sl
   2f844:	ldr	r0, [r5]
   2f848:	bl	2c2ec <flatcc_builder_end_string@@Base>
   2f84c:	cmp	r6, sl
   2f850:	str	r0, [r9]
   2f854:	beq	2f86c <flatcc_json_parser_build_string@@Base+0x19c>
   2f858:	ldrb	r0, [r6]
   2f85c:	cmp	r0, #34	; 0x22
   2f860:	bne	2f86c <flatcc_json_parser_build_string@@Base+0x19c>
   2f864:	add	r4, r6, #1
   2f868:	b	2f898 <flatcc_json_parser_build_string@@Base+0x1c8>
   2f86c:	ldr	r0, [r5, #24]
   2f870:	cmp	r0, #0
   2f874:	bne	2f894 <flatcc_json_parser_build_string@@Base+0x1c4>
   2f878:	str	r6, [r5, #36]	; 0x24
   2f87c:	add	r2, r6, #1
   2f880:	mov	r0, #20
   2f884:	ldr	r1, [r5, #4]
   2f888:	sub	r1, r2, r1
   2f88c:	str	r1, [r5, #20]
   2f890:	str	r0, [r5, #24]
   2f894:	mov	r4, sl
   2f898:	mov	r0, r4
   2f89c:	sub	sp, fp, #28
   2f8a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002f8a4 <flatcc_json_parser_prepare_unions@@Base>:
   2f8a4:	push	{r4, r5, r6, r7, fp, lr}
   2f8a8:	add	fp, sp, #16
   2f8ac:	mov	r5, r1
   2f8b0:	mov	r6, r0
   2f8b4:	add	r0, r3, r3, lsl #1
   2f8b8:	mov	r1, #8
   2f8bc:	mov	r7, r3
   2f8c0:	mov	r4, r2
   2f8c4:	add	r1, r1, r0, lsl #3
   2f8c8:	ldr	r0, [r6]
   2f8cc:	bl	28e60 <flatcc_builder_enter_user_frame@@Base>
   2f8d0:	mov	r1, r0
   2f8d4:	ldr	r0, [fp, #8]
   2f8d8:	cmp	r1, #0
   2f8dc:	str	r1, [r0]
   2f8e0:	beq	2f8f8 <flatcc_json_parser_prepare_unions@@Base+0x54>
   2f8e4:	ldr	r0, [r6]
   2f8e8:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   2f8ec:	mov	r4, r5
   2f8f0:	str	r7, [r0]
   2f8f4:	b	2f920 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   2f8f8:	ldr	r0, [r6, #24]
   2f8fc:	cmp	r0, #0
   2f900:	bne	2f920 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   2f904:	str	r5, [r6, #36]	; 0x24
   2f908:	add	r2, r5, #1
   2f90c:	mov	r0, #33	; 0x21
   2f910:	ldr	r1, [r6, #4]
   2f914:	sub	r1, r2, r1
   2f918:	str	r1, [r6, #20]
   2f91c:	str	r0, [r6, #24]
   2f920:	mov	r0, r4
   2f924:	pop	{r4, r5, r6, r7, fp, pc}

0002f928 <flatcc_json_parser_finalize_unions@@Base>:
   2f928:	push	{r4, r5, r6, r7, fp, lr}
   2f92c:	add	fp, sp, #16
   2f930:	mov	r6, r0
   2f934:	ldr	r0, [r0]
   2f938:	mov	r7, r1
   2f93c:	mov	r1, r3
   2f940:	mov	r5, r3
   2f944:	mov	r4, r2
   2f948:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   2f94c:	ldr	r0, [r0, #4]
   2f950:	cmp	r0, #0
   2f954:	beq	2f984 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   2f958:	ldr	r0, [r6, #24]
   2f95c:	cmp	r0, #0
   2f960:	bne	2f988 <flatcc_json_parser_finalize_unions@@Base+0x60>
   2f964:	str	r7, [r6, #36]	; 0x24
   2f968:	add	r2, r7, #1
   2f96c:	mov	r0, #27
   2f970:	ldr	r1, [r6, #4]
   2f974:	sub	r1, r2, r1
   2f978:	str	r1, [r6, #20]
   2f97c:	str	r0, [r6, #24]
   2f980:	b	2f988 <flatcc_json_parser_finalize_unions@@Base+0x60>
   2f984:	mov	r4, r7
   2f988:	ldr	r0, [r6]
   2f98c:	mov	r1, r5
   2f990:	bl	28f6c <flatcc_builder_exit_user_frame_at@@Base>
   2f994:	mov	r0, r4
   2f998:	pop	{r4, r5, r6, r7, fp, pc}

0002f99c <flatcc_json_parser_union@@Base>:
   2f99c:	push	{r4, r5, r6, r7, fp, lr}
   2f9a0:	add	fp, sp, #16
   2f9a4:	sub	sp, sp, #16
   2f9a8:	mov	r6, r1
   2f9ac:	mov	r5, r0
   2f9b0:	ldr	r0, [r0]
   2f9b4:	ldr	r1, [fp, #12]
   2f9b8:	mov	r7, r3
   2f9bc:	mov	r4, r2
   2f9c0:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   2f9c4:	add	r2, r0, #8
   2f9c8:	add	r3, r7, r7, lsl #1
   2f9cc:	mov	r1, r2
   2f9d0:	ldr	r7, [r1, r3, lsl #3]!
   2f9d4:	cmp	r7, #0
   2f9d8:	beq	2fa08 <flatcc_json_parser_union@@Base+0x6c>
   2f9dc:	ldr	r0, [r5, #24]
   2f9e0:	cmp	r0, #0
   2f9e4:	bne	2fac8 <flatcc_json_parser_union@@Base+0x12c>
   2f9e8:	mov	r0, #28
   2f9ec:	str	r6, [r5, #36]	; 0x24
   2f9f0:	add	r2, r6, #1
   2f9f4:	ldr	r1, [r5, #4]
   2f9f8:	sub	r1, r2, r1
   2f9fc:	str	r1, [r5, #20]
   2fa00:	str	r0, [r5, #24]
   2fa04:	b	2fac8 <flatcc_json_parser_union@@Base+0x12c>
   2fa08:	add	r2, r2, r3, lsl #3
   2fa0c:	ldrb	r3, [r2, #12]
   2fa10:	cmp	r3, #0
   2fa14:	beq	2fa84 <flatcc_json_parser_union@@Base+0xe8>
   2fa18:	ldrb	r3, [r2, #13]
   2fa1c:	cmp	r3, #0
   2fa20:	strb	r3, [sp, #8]
   2fa24:	beq	2fabc <flatcc_json_parser_union@@Base+0x120>
   2fa28:	ldr	r1, [r0, #4]
   2fa2c:	ldr	r7, [fp, #16]
   2fa30:	mov	r2, r4
   2fa34:	sub	r1, r1, #1
   2fa38:	str	r1, [r0, #4]
   2fa3c:	add	r0, sp, #8
   2fa40:	mov	r1, r6
   2fa44:	add	r0, r0, #4
   2fa48:	str	r0, [sp]
   2fa4c:	mov	r0, r5
   2fa50:	blx	r7
   2fa54:	cmp	r0, r4
   2fa58:	beq	2fac8 <flatcc_json_parser_union@@Base+0x12c>
   2fa5c:	mov	r6, r0
   2fa60:	ldr	r1, [fp, #8]
   2fa64:	ldr	r0, [r5]
   2fa68:	ldr	r2, [sp, #8]
   2fa6c:	ldr	r3, [sp, #12]
   2fa70:	bl	2b6a0 <flatcc_builder_table_add_union@@Base>
   2fa74:	cmp	r0, #0
   2fa78:	bne	2f9dc <flatcc_json_parser_union@@Base+0x40>
   2fa7c:	mov	r4, r6
   2fa80:	b	2fac8 <flatcc_json_parser_union@@Base+0x12c>
   2fa84:	ldr	r3, [r0, #4]
   2fa88:	add	r3, r3, #1
   2fa8c:	str	r3, [r0, #4]
   2fa90:	ldr	r0, [r5, #16]
   2fa94:	str	r0, [r2, #8]
   2fa98:	ldr	r0, [r5, #4]
   2fa9c:	str	r0, [r2, #4]
   2faa0:	str	r6, [r1]
   2faa4:	mov	r0, r5
   2faa8:	mov	r1, r6
   2faac:	mov	r2, r4
   2fab0:	bl	2dc04 <flatcc_json_parser_generic_json@@Base>
   2fab4:	mov	r4, r0
   2fab8:	b	2fac8 <flatcc_json_parser_union@@Base+0x12c>
   2fabc:	ldr	r0, [r5, #24]
   2fac0:	cmp	r0, #0
   2fac4:	beq	2fad4 <flatcc_json_parser_union@@Base+0x138>
   2fac8:	mov	r0, r4
   2facc:	sub	sp, fp, #16
   2fad0:	pop	{r4, r5, r6, r7, fp, pc}
   2fad4:	mov	r0, #25
   2fad8:	b	2f9ec <flatcc_json_parser_union@@Base+0x50>

0002fadc <flatcc_json_parser_union_type@@Base>:
   2fadc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fae0:	add	fp, sp, #28
   2fae4:	sub	sp, sp, #28
   2fae8:	mov	r7, r1
   2faec:	mov	r5, r0
   2faf0:	ldr	r0, [r0]
   2faf4:	ldr	r1, [fp, #12]
   2faf8:	mov	r4, r3
   2fafc:	mov	r8, r2
   2fb00:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   2fb04:	add	r2, r0, #8
   2fb08:	add	sl, r4, r4, lsl #1
   2fb0c:	mov	r6, r0
   2fb10:	str	r8, [sp, #8]
   2fb14:	add	r9, r2, sl, lsl #3
   2fb18:	mov	r0, r9
   2fb1c:	ldrb	r1, [r0, #12]!
   2fb20:	cmp	r1, #0
   2fb24:	beq	2fb60 <flatcc_json_parser_union_type@@Base+0x84>
   2fb28:	ldr	r0, [r5, #24]
   2fb2c:	cmp	r0, #0
   2fb30:	bne	2fb50 <flatcc_json_parser_union_type@@Base+0x74>
   2fb34:	str	r7, [r5, #36]	; 0x24
   2fb38:	mov	r0, #28
   2fb3c:	add	r2, r7, #1
   2fb40:	ldr	r1, [r5, #4]
   2fb44:	sub	r1, r2, r1
   2fb48:	str	r1, [r5, #20]
   2fb4c:	str	r0, [r5, #24]
   2fb50:	ldr	r3, [sp, #8]
   2fb54:	mov	r0, r3
   2fb58:	sub	sp, fp, #28
   2fb5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fb60:	mov	r1, #1
   2fb64:	mov	r4, r9
   2fb68:	str	r2, [sp, #4]
   2fb6c:	cmp	r7, r8
   2fb70:	mov	r2, r8
   2fb74:	strb	r1, [r0]
   2fb78:	mov	r0, #0
   2fb7c:	str	r0, [sp, #20]
   2fb80:	str	r0, [sp, #16]
   2fb84:	str	r0, [sp, #12]
   2fb88:	strb	r0, [r4, #13]!
   2fb8c:	beq	2fc30 <flatcc_json_parser_union_type@@Base+0x154>
   2fb90:	add	r0, sp, #16
   2fb94:	add	r3, sp, #12
   2fb98:	mov	r1, r7
   2fb9c:	str	r0, [sp]
   2fba0:	mov	r0, r5
   2fba4:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   2fba8:	ldr	r2, [sp, #8]
   2fbac:	cmp	r0, r7
   2fbb0:	beq	2fc30 <flatcc_json_parser_union_type@@Base+0x154>
   2fbb4:	ldr	r1, [sp, #12]
   2fbb8:	cmp	r1, #0
   2fbbc:	beq	2fbd8 <flatcc_json_parser_union_type@@Base+0xfc>
   2fbc0:	ldr	r1, [r5, #24]
   2fbc4:	mov	r3, r2
   2fbc8:	cmp	r1, #0
   2fbcc:	bne	2fc28 <flatcc_json_parser_union_type@@Base+0x14c>
   2fbd0:	mov	r1, #8
   2fbd4:	b	2fc00 <flatcc_json_parser_union_type@@Base+0x124>
   2fbd8:	ldr	r1, [sp, #16]
   2fbdc:	ldr	ip, [sp, #20]
   2fbe0:	subs	r3, r1, #256	; 0x100
   2fbe4:	sbcs	r3, ip, #0
   2fbe8:	bcc	2fc20 <flatcc_json_parser_union_type@@Base+0x144>
   2fbec:	ldr	r1, [r5, #24]
   2fbf0:	mov	r3, r2
   2fbf4:	cmp	r1, #0
   2fbf8:	bne	2fc28 <flatcc_json_parser_union_type@@Base+0x14c>
   2fbfc:	mov	r1, #7
   2fc00:	str	r0, [r5, #36]	; 0x24
   2fc04:	add	r0, r0, #1
   2fc08:	ldr	r3, [r5, #4]
   2fc0c:	sub	r0, r0, r3
   2fc10:	mov	r3, r2
   2fc14:	str	r0, [r5, #20]
   2fc18:	str	r1, [r5, #24]
   2fc1c:	b	2fc28 <flatcc_json_parser_union_type@@Base+0x14c>
   2fc20:	mov	r3, r0
   2fc24:	strb	r1, [r4]
   2fc28:	cmp	r3, r7
   2fc2c:	bne	2fc4c <flatcc_json_parser_union_type@@Base+0x170>
   2fc30:	ldr	r3, [fp, #16]
   2fc34:	mov	r0, r5
   2fc38:	mov	r1, r7
   2fc3c:	str	r4, [sp]
   2fc40:	bl	2fd38 <flatcc_json_parser_union_type@@Base+0x25c>
   2fc44:	ldr	r2, [sp, #8]
   2fc48:	mov	r3, r0
   2fc4c:	ldr	r0, [sp, #4]
   2fc50:	ldr	r1, [r0, sl, lsl #3]
   2fc54:	cmp	r1, #0
   2fc58:	beq	2fcf0 <flatcc_json_parser_union_type@@Base+0x214>
   2fc5c:	ldr	r0, [r6, #4]
   2fc60:	cmp	r0, #0
   2fc64:	beq	2fd18 <flatcc_json_parser_union_type@@Base+0x23c>
   2fc68:	sub	r0, r0, #1
   2fc6c:	mov	sl, r3
   2fc70:	ldr	r7, [fp, #20]
   2fc74:	str	r0, [r6, #4]
   2fc78:	ldr	r0, [r9, #8]
   2fc7c:	ldr	r8, [r5, #4]
   2fc80:	ldr	r6, [r5, #16]
   2fc84:	str	r0, [r5, #16]
   2fc88:	ldr	r0, [r9, #4]
   2fc8c:	str	r0, [r5, #4]
   2fc90:	add	r0, sp, #16
   2fc94:	ldrb	r3, [r4]
   2fc98:	add	r0, r0, #4
   2fc9c:	str	r0, [sp]
   2fca0:	mov	r0, r5
   2fca4:	strb	r3, [sp, #16]
   2fca8:	blx	r7
   2fcac:	ldr	r3, [sp, #8]
   2fcb0:	cmp	r0, r3
   2fcb4:	beq	2fb54 <flatcc_json_parser_union_type@@Base+0x78>
   2fcb8:	ldr	r1, [fp, #8]
   2fcbc:	ldr	r0, [r5]
   2fcc0:	ldr	r2, [sp, #16]
   2fcc4:	ldr	r3, [sp, #20]
   2fcc8:	bl	2b6a0 <flatcc_builder_table_add_union@@Base>
   2fccc:	cmp	r0, #0
   2fcd0:	beq	2fd08 <flatcc_json_parser_union_type@@Base+0x22c>
   2fcd4:	ldr	r0, [r5, #24]
   2fcd8:	cmp	r0, #0
   2fcdc:	bne	2fb50 <flatcc_json_parser_union_type@@Base+0x74>
   2fce0:	str	sl, [r5, #36]	; 0x24
   2fce4:	mov	r0, #28
   2fce8:	add	r2, sl, #1
   2fcec:	b	2fb40 <flatcc_json_parser_union_type@@Base+0x64>
   2fcf0:	ldrb	r0, [r4]
   2fcf4:	ldr	r1, [r6, #4]
   2fcf8:	cmp	r0, #0
   2fcfc:	addne	r1, r1, #1
   2fd00:	str	r1, [r6, #4]
   2fd04:	b	2fb54 <flatcc_json_parser_union_type@@Base+0x78>
   2fd08:	mov	r3, sl
   2fd0c:	str	r8, [r5, #4]
   2fd10:	str	r6, [r5, #16]
   2fd14:	b	2fb54 <flatcc_json_parser_union_type@@Base+0x78>
   2fd18:	movw	r0, #13485	; 0x34ad
   2fd1c:	movw	r1, #13500	; 0x34bc
   2fd20:	movw	r3, #13574	; 0x3506
   2fd24:	movw	r2, #965	; 0x3c5
   2fd28:	movt	r0, #3
   2fd2c:	movt	r1, #3
   2fd30:	movt	r3, #3
   2fd34:	bl	12bc4 <__assert_fail@plt>
   2fd38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fd3c:	add	fp, sp, #28
   2fd40:	sub	sp, sp, #44	; 0x2c
   2fd44:	mov	r4, r2
   2fd48:	mov	r2, r1
   2fd4c:	ldr	r1, [fp, #8]
   2fd50:	mov	r5, r0
   2fd54:	mov	r0, #0
   2fd58:	cmp	r2, r4
   2fd5c:	strb	r0, [r1]
   2fd60:	beq	2fdc4 <flatcc_json_parser_union_type@@Base+0x2e8>
   2fd64:	ldrb	r0, [r2]
   2fd68:	cmp	r0, #46	; 0x2e
   2fd6c:	beq	2fd88 <flatcc_json_parser_union_type@@Base+0x2ac>
   2fd70:	cmp	r0, #34	; 0x22
   2fd74:	bne	2fdbc <flatcc_json_parser_union_type@@Base+0x2e0>
   2fd78:	mov	r0, #0
   2fd7c:	add	r1, r2, #1
   2fd80:	str	r0, [r5, #12]
   2fd84:	b	2fdc8 <flatcc_json_parser_union_type@@Base+0x2ec>
   2fd88:	ldr	r0, [r5, #24]
   2fd8c:	mov	r1, r4
   2fd90:	cmp	r0, #0
   2fd94:	bne	2fdc8 <flatcc_json_parser_union_type@@Base+0x2ec>
   2fd98:	str	r2, [r5, #36]	; 0x24
   2fd9c:	add	r2, r2, #1
   2fda0:	mov	r0, #5
   2fda4:	ldr	r1, [r5, #4]
   2fda8:	sub	r1, r2, r1
   2fdac:	str	r1, [r5, #20]
   2fdb0:	str	r0, [r5, #24]
   2fdb4:	mov	r1, r4
   2fdb8:	b	2fdc8 <flatcc_json_parser_union_type@@Base+0x2ec>
   2fdbc:	mov	r0, #1
   2fdc0:	str	r0, [r5, #12]
   2fdc4:	mov	r1, r2
   2fdc8:	ldr	r0, [r5, #12]
   2fdcc:	cmp	r0, #0
   2fdd0:	beq	2fddc <flatcc_json_parser_union_type@@Base+0x300>
   2fdd4:	mov	r7, r1
   2fdd8:	b	2fe20 <flatcc_json_parser_union_type@@Base+0x344>
   2fddc:	sub	r0, r4, r1
   2fde0:	cmp	r0, #2
   2fde4:	blt	2fe08 <flatcc_json_parser_union_type@@Base+0x32c>
   2fde8:	ldrb	r0, [r1]
   2fdec:	cmp	r0, #32
   2fdf0:	bhi	2fdd4 <flatcc_json_parser_union_type@@Base+0x2f8>
   2fdf4:	bne	2fe08 <flatcc_json_parser_union_type@@Base+0x32c>
   2fdf8:	mov	r7, r1
   2fdfc:	ldrb	r0, [r7, #1]!
   2fe00:	cmp	r0, #32
   2fe04:	bhi	2fe20 <flatcc_json_parser_union_type@@Base+0x344>
   2fe08:	mov	r0, r5
   2fe0c:	mov	r2, r4
   2fe10:	mov	r6, r3
   2fe14:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   2fe18:	mov	r3, r6
   2fe1c:	mov	r7, r0
   2fe20:	cmp	r7, r4
   2fe24:	beq	2ff1c <flatcc_json_parser_union_type@@Base+0x440>
   2fe28:	add	r9, r3, #4
   2fe2c:	mov	r6, #0
   2fe30:	add	sl, sp, #32
   2fe34:	add	r8, sp, #28
   2fe38:	str	r3, [sp, #16]
   2fe3c:	str	r9, [sp, #12]
   2fe40:	str	r6, [sp, #20]
   2fe44:	mov	r6, r3
   2fe48:	ldr	r6, [r3]
   2fe4c:	add	r0, sp, #24
   2fe50:	mov	r1, r7
   2fe54:	mov	r2, r4
   2fe58:	mov	r3, r8
   2fe5c:	str	sl, [sp]
   2fe60:	str	r0, [sp, #4]
   2fe64:	mov	r0, r5
   2fe68:	blx	r6
   2fe6c:	cmp	r0, r4
   2fe70:	beq	2ff1c <flatcc_json_parser_union_type@@Base+0x440>
   2fe74:	cmp	r0, r7
   2fe78:	bne	2fe8c <flatcc_json_parser_union_type@@Base+0x3b0>
   2fe7c:	ldr	r6, [r9], #4
   2fe80:	cmp	r6, #0
   2fe84:	bne	2fe4c <flatcc_json_parser_union_type@@Base+0x370>
   2fe88:	b	2fef4 <flatcc_json_parser_union_type@@Base+0x418>
   2fe8c:	ldr	r6, [sp, #20]
   2fe90:	cmp	r6, #0
   2fe94:	ldrne	r1, [r5, #12]
   2fe98:	cmpne	r1, #0
   2fe9c:	bne	2ff50 <flatcc_json_parser_union_type@@Base+0x474>
   2fea0:	ldr	r1, [sp, #28]
   2fea4:	cmp	r1, #0
   2fea8:	bne	2ff28 <flatcc_json_parser_union_type@@Base+0x44c>
   2feac:	ldr	r1, [sp, #32]
   2feb0:	ldr	r2, [sp, #36]	; 0x24
   2feb4:	subs	r3, r1, #256	; 0x100
   2feb8:	sbcs	r2, r2, #0
   2febc:	bcs	2ff3c <flatcc_json_parser_union_type@@Base+0x460>
   2fec0:	ldr	r2, [fp, #8]
   2fec4:	ldr	r9, [sp, #12]
   2fec8:	add	r6, r6, #1
   2fecc:	mov	r7, r0
   2fed0:	mov	r3, r2
   2fed4:	ldrb	r2, [r2]
   2fed8:	add	r1, r2, r1
   2fedc:	strb	r1, [r3]
   2fee0:	ldr	r3, [sp, #16]
   2fee4:	ldr	r1, [sp, #24]
   2fee8:	cmp	r1, #0
   2feec:	bne	2fe40 <flatcc_json_parser_union_type@@Base+0x364>
   2fef0:	b	2ff20 <flatcc_json_parser_union_type@@Base+0x444>
   2fef4:	ldr	r0, [r5, #24]
   2fef8:	cmp	r0, #0
   2fefc:	bne	2ff1c <flatcc_json_parser_union_type@@Base+0x440>
   2ff00:	str	r7, [r5, #36]	; 0x24
   2ff04:	add	r2, r7, #1
   2ff08:	mov	r0, #23
   2ff0c:	ldr	r1, [r5, #4]
   2ff10:	sub	r1, r2, r1
   2ff14:	str	r1, [r5, #20]
   2ff18:	str	r0, [r5, #24]
   2ff1c:	mov	r0, r4
   2ff20:	sub	sp, fp, #28
   2ff24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ff28:	ldr	r1, [r5, #24]
   2ff2c:	cmp	r1, #0
   2ff30:	bne	2ff1c <flatcc_json_parser_union_type@@Base+0x440>
   2ff34:	mov	r1, #8
   2ff38:	b	2ff60 <flatcc_json_parser_union_type@@Base+0x484>
   2ff3c:	ldr	r1, [r5, #24]
   2ff40:	cmp	r1, #0
   2ff44:	bne	2ff1c <flatcc_json_parser_union_type@@Base+0x440>
   2ff48:	mov	r1, #7
   2ff4c:	b	2ff60 <flatcc_json_parser_union_type@@Base+0x484>
   2ff50:	ldr	r1, [r5, #24]
   2ff54:	cmp	r1, #0
   2ff58:	bne	2ff1c <flatcc_json_parser_union_type@@Base+0x440>
   2ff5c:	mov	r1, #14
   2ff60:	str	r0, [r5, #36]	; 0x24
   2ff64:	add	r0, r0, #1
   2ff68:	ldr	r2, [r5, #4]
   2ff6c:	sub	r0, r0, r2
   2ff70:	str	r0, [r5, #20]
   2ff74:	str	r1, [r5, #24]
   2ff78:	b	2ff1c <flatcc_json_parser_union_type@@Base+0x440>

0002ff7c <flatcc_json_parser_union_vector@@Base>:
   2ff7c:	push	{r4, r5, r6, r7, fp, lr}
   2ff80:	add	fp, sp, #16
   2ff84:	sub	sp, sp, #16
   2ff88:	mov	r6, r1
   2ff8c:	mov	r5, r0
   2ff90:	ldr	r0, [r0]
   2ff94:	ldr	r1, [fp, #12]
   2ff98:	mov	r7, r3
   2ff9c:	mov	r4, r2
   2ffa0:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   2ffa4:	add	r2, r0, #8
   2ffa8:	add	r3, r7, r7, lsl #1
   2ffac:	mov	r1, r2
   2ffb0:	ldr	r7, [r1, r3, lsl #3]!
   2ffb4:	cmp	r7, #0
   2ffb8:	beq	2fff0 <flatcc_json_parser_union_vector@@Base+0x74>
   2ffbc:	ldr	r0, [r5, #24]
   2ffc0:	cmp	r0, #0
   2ffc4:	bne	2ffe4 <flatcc_json_parser_union_vector@@Base+0x68>
   2ffc8:	str	r6, [r5, #36]	; 0x24
   2ffcc:	add	r2, r6, #1
   2ffd0:	mov	r0, #28
   2ffd4:	ldr	r1, [r5, #4]
   2ffd8:	sub	r1, r2, r1
   2ffdc:	str	r1, [r5, #20]
   2ffe0:	str	r0, [r5, #24]
   2ffe4:	mov	r0, r4
   2ffe8:	sub	sp, fp, #16
   2ffec:	pop	{r4, r5, r6, r7, fp, pc}
   2fff0:	add	r2, r2, r3, lsl #3
   2fff4:	ldr	r3, [r0, #4]
   2fff8:	ldrb	r7, [r2, #12]
   2fffc:	cmp	r7, #0
   30000:	beq	3003c <flatcc_json_parser_union_vector@@Base+0xc0>
   30004:	sub	r3, r3, #1
   30008:	ldr	r1, [fp, #16]
   3000c:	ldr	r7, [fp, #8]
   30010:	str	r3, [r0, #4]
   30014:	ldr	r0, [r2, #16]
   30018:	ldr	r3, [r2, #20]
   3001c:	mov	r2, r4
   30020:	stm	sp, {r0, r7}
   30024:	str	r1, [sp, #8]
   30028:	mov	r0, r5
   3002c:	mov	r1, r6
   30030:	bl	30070 <flatcc_json_parser_union_vector@@Base+0xf4>
   30034:	sub	sp, fp, #16
   30038:	pop	{r4, r5, r6, r7, fp, pc}
   3003c:	add	r3, r3, #1
   30040:	str	r3, [r0, #4]
   30044:	ldr	r0, [r5, #16]
   30048:	str	r0, [r2, #8]
   3004c:	ldr	r0, [r5, #4]
   30050:	str	r0, [r2, #4]
   30054:	str	r6, [r1]
   30058:	mov	r0, r5
   3005c:	mov	r1, r6
   30060:	mov	r2, r4
   30064:	sub	sp, fp, #16
   30068:	pop	{r4, r5, r6, r7, fp, lr}
   3006c:	b	2dc04 <flatcc_json_parser_generic_json@@Base>
   30070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30074:	add	fp, sp, #28
   30078:	sub	sp, sp, #12
   3007c:	mov	r5, r0
   30080:	mov	r0, #0
   30084:	mov	r8, r3
   30088:	mov	r6, r2
   3008c:	mov	r7, r1
   30090:	str	r0, [sp, #8]
   30094:	ldr	r0, [r5]
   30098:	bl	2a2cc <flatcc_builder_start_offset_vector@@Base>
   3009c:	cmp	r0, #0
   300a0:	beq	300c0 <flatcc_json_parser_union_vector@@Base+0x144>
   300a4:	ldr	r0, [r5, #24]
   300a8:	cmp	r0, #0
   300ac:	bne	3032c <flatcc_json_parser_union_vector@@Base+0x3b0>
   300b0:	str	r7, [r5, #36]	; 0x24
   300b4:	mov	r0, #33	; 0x21
   300b8:	add	r2, r7, #1
   300bc:	b	3031c <flatcc_json_parser_union_vector@@Base+0x3a0>
   300c0:	ldr	sl, [fp, #8]
   300c4:	cmp	r7, r6
   300c8:	beq	300fc <flatcc_json_parser_union_vector@@Base+0x180>
   300cc:	ldrb	r0, [r7]
   300d0:	cmp	r0, #91	; 0x5b
   300d4:	bne	300fc <flatcc_json_parser_union_vector@@Base+0x180>
   300d8:	add	r1, r7, #1
   300dc:	sub	r0, r6, r1
   300e0:	cmp	r0, #2
   300e4:	blt	30140 <flatcc_json_parser_union_vector@@Base+0x1c4>
   300e8:	ldrb	r0, [r1]
   300ec:	cmp	r0, #32
   300f0:	bls	30130 <flatcc_json_parser_union_vector@@Base+0x1b4>
   300f4:	mov	r7, r1
   300f8:	b	30150 <flatcc_json_parser_union_vector@@Base+0x1d4>
   300fc:	ldr	r0, [r5, #24]
   30100:	mov	r9, r6
   30104:	cmp	r0, #0
   30108:	bne	302fc <flatcc_json_parser_union_vector@@Base+0x380>
   3010c:	str	r7, [r5, #36]	; 0x24
   30110:	add	r2, r7, #1
   30114:	mov	r0, #22
   30118:	mov	r9, r6
   3011c:	ldr	r1, [r5, #4]
   30120:	sub	r1, r2, r1
   30124:	str	r1, [r5, #20]
   30128:	str	r0, [r5, #24]
   3012c:	b	302fc <flatcc_json_parser_union_vector@@Base+0x380>
   30130:	bne	30140 <flatcc_json_parser_union_vector@@Base+0x1c4>
   30134:	ldrb	r0, [r7, #2]!
   30138:	cmp	r0, #32
   3013c:	bhi	30150 <flatcc_json_parser_union_vector@@Base+0x1d4>
   30140:	mov	r0, r5
   30144:	mov	r2, r6
   30148:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   3014c:	mov	r7, r0
   30150:	cmp	r7, r6
   30154:	mov	r4, r6
   30158:	beq	30190 <flatcc_json_parser_union_vector@@Base+0x214>
   3015c:	ldrb	r0, [r7]
   30160:	cmp	r0, #93	; 0x5d
   30164:	bne	3018c <flatcc_json_parser_union_vector@@Base+0x210>
   30168:	add	r1, r7, #1
   3016c:	sub	r0, r6, r1
   30170:	cmp	r0, #2
   30174:	blt	302ec <flatcc_json_parser_union_vector@@Base+0x370>
   30178:	ldrb	r0, [r1]
   3017c:	cmp	r0, #32
   30180:	bls	302d8 <flatcc_json_parser_union_vector@@Base+0x35c>
   30184:	mov	r9, r1
   30188:	b	302fc <flatcc_json_parser_union_vector@@Base+0x380>
   3018c:	mov	r4, r7
   30190:	cmp	sl, #0
   30194:	beq	302bc <flatcc_json_parser_union_vector@@Base+0x340>
   30198:	add	r0, r6, #1
   3019c:	mov	sl, #0
   301a0:	add	r9, sp, #8
   301a4:	str	r0, [sp, #4]
   301a8:	ldr	r0, [r5]
   301ac:	mov	r1, r8
   301b0:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   301b4:	ldrb	r3, [r0, -sl]
   301b8:	ldr	r7, [fp, #16]
   301bc:	mov	r0, r5
   301c0:	mov	r1, r4
   301c4:	mov	r2, r6
   301c8:	str	r9, [sp]
   301cc:	blx	r7
   301d0:	cmp	r0, r6
   301d4:	beq	3032c <flatcc_json_parser_union_vector@@Base+0x3b0>
   301d8:	mov	r7, r0
   301dc:	ldr	r0, [r5]
   301e0:	mov	r1, #1
   301e4:	bl	29c88 <flatcc_builder_extend_offset_vector@@Base>
   301e8:	cmp	r0, #0
   301ec:	beq	300a4 <flatcc_json_parser_union_vector@@Base+0x128>
   301f0:	ldr	r1, [sp, #8]
   301f4:	str	r1, [r0]
   301f8:	sub	r0, r6, r7
   301fc:	cmp	r0, #2
   30200:	blt	3022c <flatcc_json_parser_union_vector@@Base+0x2b0>
   30204:	ldrb	r0, [r7]
   30208:	cmp	r0, #32
   3020c:	bls	30218 <flatcc_json_parser_union_vector@@Base+0x29c>
   30210:	mov	r4, r7
   30214:	b	30240 <flatcc_json_parser_union_vector@@Base+0x2c4>
   30218:	bne	3022c <flatcc_json_parser_union_vector@@Base+0x2b0>
   3021c:	mov	r4, r7
   30220:	ldrb	r0, [r4, #1]!
   30224:	cmp	r0, #32
   30228:	bhi	30240 <flatcc_json_parser_union_vector@@Base+0x2c4>
   3022c:	mov	r0, r5
   30230:	mov	r1, r7
   30234:	mov	r2, r6
   30238:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   3023c:	mov	r4, r0
   30240:	cmp	r4, r6
   30244:	beq	303b0 <flatcc_json_parser_union_vector@@Base+0x434>
   30248:	ldrb	r0, [r4]
   3024c:	cmp	r0, #44	; 0x2c
   30250:	bne	30338 <flatcc_json_parser_union_vector@@Base+0x3bc>
   30254:	add	r1, r4, #1
   30258:	sub	r0, r6, r1
   3025c:	cmp	r0, #2
   30260:	blt	30288 <flatcc_json_parser_union_vector@@Base+0x30c>
   30264:	ldrb	r0, [r1]
   30268:	cmp	r0, #32
   3026c:	bls	30278 <flatcc_json_parser_union_vector@@Base+0x2fc>
   30270:	mov	r4, r1
   30274:	b	30298 <flatcc_json_parser_union_vector@@Base+0x31c>
   30278:	bne	30288 <flatcc_json_parser_union_vector@@Base+0x30c>
   3027c:	ldrb	r0, [r4, #2]!
   30280:	cmp	r0, #32
   30284:	bhi	30298 <flatcc_json_parser_union_vector@@Base+0x31c>
   30288:	mov	r0, r5
   3028c:	mov	r2, r6
   30290:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   30294:	mov	r4, r0
   30298:	cmp	r4, r6
   3029c:	beq	30364 <flatcc_json_parser_union_vector@@Base+0x3e8>
   302a0:	ldrb	r0, [r4]
   302a4:	cmp	r0, #93	; 0x5d
   302a8:	beq	30340 <flatcc_json_parser_union_vector@@Base+0x3c4>
   302ac:	ldr	r0, [fp, #8]
   302b0:	sub	sl, sl, #1
   302b4:	adds	r0, r0, sl
   302b8:	bne	301a8 <flatcc_json_parser_union_vector@@Base+0x22c>
   302bc:	ldr	r0, [r5, #24]
   302c0:	cmp	r0, #0
   302c4:	bne	3032c <flatcc_json_parser_union_vector@@Base+0x3b0>
   302c8:	str	r4, [r5, #36]	; 0x24
   302cc:	mov	r0, #30
   302d0:	add	r2, r4, #1
   302d4:	b	3031c <flatcc_json_parser_union_vector@@Base+0x3a0>
   302d8:	bne	302ec <flatcc_json_parser_union_vector@@Base+0x370>
   302dc:	ldrb	r0, [r7, #2]!
   302e0:	cmp	r0, #32
   302e4:	mov	r9, r7
   302e8:	bhi	302fc <flatcc_json_parser_union_vector@@Base+0x380>
   302ec:	mov	r0, r5
   302f0:	mov	r2, r6
   302f4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   302f8:	mov	r9, r0
   302fc:	cmp	sl, #0
   30300:	beq	303ec <flatcc_json_parser_union_vector@@Base+0x470>
   30304:	ldr	r0, [r5, #24]
   30308:	cmp	r0, #0
   3030c:	bne	3032c <flatcc_json_parser_union_vector@@Base+0x3b0>
   30310:	str	r9, [r5, #36]	; 0x24
   30314:	mov	r0, #30
   30318:	add	r2, r9, #1
   3031c:	ldr	r1, [r5, #4]
   30320:	sub	r1, r2, r1
   30324:	str	r1, [r5, #20]
   30328:	str	r0, [r5, #24]
   3032c:	mov	r0, r6
   30330:	sub	sp, fp, #28
   30334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30338:	cmp	r0, #93	; 0x5d
   3033c:	bne	30384 <flatcc_json_parser_union_vector@@Base+0x408>
   30340:	add	r1, r4, #1
   30344:	sub	r0, r6, r1
   30348:	cmp	r0, #2
   3034c:	blt	303cc <flatcc_json_parser_union_vector@@Base+0x450>
   30350:	ldrb	r0, [r1]
   30354:	cmp	r0, #32
   30358:	bls	303b8 <flatcc_json_parser_union_vector@@Base+0x43c>
   3035c:	mov	r9, r1
   30360:	b	303dc <flatcc_json_parser_union_vector@@Base+0x460>
   30364:	ldr	r0, [r5, #24]
   30368:	mov	r9, r6
   3036c:	cmp	r0, #0
   30370:	bne	303dc <flatcc_json_parser_union_vector@@Base+0x460>
   30374:	str	r6, [r5, #36]	; 0x24
   30378:	ldr	r2, [sp, #4]
   3037c:	mov	r0, #9
   30380:	b	303a0 <flatcc_json_parser_union_vector@@Base+0x424>
   30384:	ldr	r0, [r5, #24]
   30388:	mov	r9, r6
   3038c:	cmp	r0, #0
   30390:	bne	303dc <flatcc_json_parser_union_vector@@Base+0x460>
   30394:	str	r4, [r5, #36]	; 0x24
   30398:	mov	r0, #9
   3039c:	add	r2, r4, #1
   303a0:	ldr	r1, [r5, #4]
   303a4:	sub	r1, r2, r1
   303a8:	str	r1, [r5, #20]
   303ac:	str	r0, [r5, #24]
   303b0:	mov	r9, r6
   303b4:	b	303dc <flatcc_json_parser_union_vector@@Base+0x460>
   303b8:	bne	303cc <flatcc_json_parser_union_vector@@Base+0x450>
   303bc:	ldrb	r0, [r4, #2]!
   303c0:	cmp	r0, #32
   303c4:	mov	r9, r4
   303c8:	bhi	303dc <flatcc_json_parser_union_vector@@Base+0x460>
   303cc:	mov	r0, r5
   303d0:	mov	r2, r6
   303d4:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   303d8:	mov	r9, r0
   303dc:	ldr	r0, [fp, #8]
   303e0:	add	r0, r0, sl
   303e4:	cmp	r0, #1
   303e8:	bne	30304 <flatcc_json_parser_union_vector@@Base+0x388>
   303ec:	ldr	r0, [r5]
   303f0:	mov	r1, r8
   303f4:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   303f8:	mov	r1, r0
   303fc:	ldr	r0, [r5]
   30400:	bl	2b5b4 <flatcc_builder_end_offset_vector_for_unions@@Base>
   30404:	cmp	r0, #0
   30408:	str	r0, [sp, #8]
   3040c:	beq	30434 <flatcc_json_parser_union_vector@@Base+0x4b8>
   30410:	ldr	r1, [fp, #12]
   30414:	ldr	r0, [r5]
   30418:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   3041c:	cmp	r0, #0
   30420:	beq	30434 <flatcc_json_parser_union_vector@@Base+0x4b8>
   30424:	ldr	r1, [sp, #8]
   30428:	mov	r6, r9
   3042c:	str	r1, [r0]
   30430:	b	3032c <flatcc_json_parser_union_vector@@Base+0x3b0>
   30434:	mov	r7, r9
   30438:	b	300a4 <flatcc_json_parser_union_vector@@Base+0x128>

0003043c <flatcc_json_parser_union_type_vector@@Base>:
   3043c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30440:	add	fp, sp, #28
   30444:	sub	sp, sp, #44	; 0x2c
   30448:	mov	r7, r1
   3044c:	mov	r5, r0
   30450:	ldr	r0, [r0]
   30454:	ldr	r1, [fp, #12]
   30458:	mov	r4, r3
   3045c:	mov	r6, r2
   30460:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   30464:	add	r0, r0, #8
   30468:	add	sl, r4, r4, lsl #1
   3046c:	add	r9, r0, sl, lsl #3
   30470:	mov	r0, r9
   30474:	ldrb	r1, [r0, #12]!
   30478:	cmp	r1, #0
   3047c:	beq	3049c <flatcc_json_parser_union_type_vector@@Base+0x60>
   30480:	ldr	r0, [r5, #24]
   30484:	cmp	r0, #0
   30488:	bne	30948 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   3048c:	mov	r0, #28
   30490:	str	r7, [r5, #36]	; 0x24
   30494:	add	r2, r7, #1
   30498:	b	30938 <flatcc_json_parser_union_type_vector@@Base+0x4fc>
   3049c:	mov	r1, #1
   304a0:	mov	r2, #1
   304a4:	mvn	r3, #0
   304a8:	strb	r1, [r0]
   304ac:	mov	r1, #1
   304b0:	ldr	r0, [r5]
   304b4:	bl	2a240 <flatcc_builder_start_vector@@Base>
   304b8:	cmp	r0, #0
   304bc:	beq	304c8 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   304c0:	mov	r4, r7
   304c4:	b	30920 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   304c8:	cmp	r7, r6
   304cc:	beq	30500 <flatcc_json_parser_union_type_vector@@Base+0xc4>
   304d0:	ldrb	r0, [r7]
   304d4:	cmp	r0, #91	; 0x5b
   304d8:	bne	30500 <flatcc_json_parser_union_type_vector@@Base+0xc4>
   304dc:	add	r1, r7, #1
   304e0:	sub	r0, r6, r1
   304e4:	cmp	r0, #2
   304e8:	blt	30544 <flatcc_json_parser_union_type_vector@@Base+0x108>
   304ec:	ldrb	r0, [r1]
   304f0:	cmp	r0, #32
   304f4:	bls	30534 <flatcc_json_parser_union_type_vector@@Base+0xf8>
   304f8:	mov	r7, r1
   304fc:	b	30554 <flatcc_json_parser_union_type_vector@@Base+0x118>
   30500:	ldr	r0, [r5, #24]
   30504:	mov	r8, r6
   30508:	cmp	r0, #0
   3050c:	bne	3081c <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   30510:	str	r7, [r5, #36]	; 0x24
   30514:	mov	r0, #22
   30518:	add	r2, r7, #1
   3051c:	ldr	r1, [r5, #4]
   30520:	sub	r1, r2, r1
   30524:	str	r1, [r5, #20]
   30528:	str	r0, [r5, #24]
   3052c:	mov	r8, r6
   30530:	b	3081c <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   30534:	bne	30544 <flatcc_json_parser_union_type_vector@@Base+0x108>
   30538:	ldrb	r0, [r7, #2]!
   3053c:	cmp	r0, #32
   30540:	bhi	30554 <flatcc_json_parser_union_type_vector@@Base+0x118>
   30544:	mov	r0, r5
   30548:	mov	r2, r6
   3054c:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   30550:	mov	r7, r0
   30554:	cmp	r7, r6
   30558:	mov	r4, r6
   3055c:	beq	30594 <flatcc_json_parser_union_type_vector@@Base+0x158>
   30560:	ldrb	r0, [r7]
   30564:	cmp	r0, #93	; 0x5d
   30568:	bne	30590 <flatcc_json_parser_union_type_vector@@Base+0x154>
   3056c:	add	r1, r7, #1
   30570:	sub	r0, r6, r1
   30574:	cmp	r0, #2
   30578:	blt	3080c <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3057c:	ldrb	r0, [r1]
   30580:	cmp	r0, #32
   30584:	bls	307bc <flatcc_json_parser_union_type_vector@@Base+0x380>
   30588:	mov	r8, r1
   3058c:	b	3081c <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   30590:	mov	r4, r7
   30594:	ldr	r0, [r5]
   30598:	mov	r1, #1
   3059c:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   305a0:	cmp	r0, #0
   305a4:	beq	30920 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   305a8:	mov	r1, r0
   305ac:	add	r0, r6, #1
   305b0:	str	r0, [sp, #16]
   305b4:	mov	r8, #0
   305b8:	cmp	r4, r6
   305bc:	str	r1, [sp, #20]
   305c0:	str	r8, [sp, #36]	; 0x24
   305c4:	str	r8, [sp, #32]
   305c8:	strb	r8, [sp, #27]
   305cc:	str	r8, [sp, #28]
   305d0:	beq	30674 <flatcc_json_parser_union_type_vector@@Base+0x238>
   305d4:	add	r0, sp, #32
   305d8:	mov	r1, r4
   305dc:	mov	r2, r6
   305e0:	add	r3, sp, #28
   305e4:	str	r0, [sp]
   305e8:	mov	r0, r5
   305ec:	bl	2f1a8 <flatcc_json_parser_integer@@Base>
   305f0:	cmp	r0, r4
   305f4:	beq	30630 <flatcc_json_parser_union_type_vector@@Base+0x1f4>
   305f8:	mov	r7, r0
   305fc:	ldr	r0, [sp, #28]
   30600:	cmp	r0, #0
   30604:	beq	30638 <flatcc_json_parser_union_type_vector@@Base+0x1fc>
   30608:	ldr	r0, [r5, #24]
   3060c:	cmp	r0, #0
   30610:	bne	30674 <flatcc_json_parser_union_type_vector@@Base+0x238>
   30614:	str	r7, [r5, #36]	; 0x24
   30618:	add	r1, r7, #1
   3061c:	ldr	r0, [r5, #4]
   30620:	sub	r0, r1, r0
   30624:	str	r0, [r5, #20]
   30628:	mov	r0, #8
   3062c:	b	30670 <flatcc_json_parser_union_type_vector@@Base+0x234>
   30630:	mov	r7, r4
   30634:	b	30678 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   30638:	ldr	r0, [sp, #32]
   3063c:	ldr	r1, [sp, #36]	; 0x24
   30640:	subs	r2, r0, #256	; 0x100
   30644:	sbcs	r1, r1, #0
   30648:	bcc	307b0 <flatcc_json_parser_union_type_vector@@Base+0x374>
   3064c:	ldr	r0, [r5, #24]
   30650:	cmp	r0, #0
   30654:	bne	30674 <flatcc_json_parser_union_type_vector@@Base+0x238>
   30658:	str	r7, [r5, #36]	; 0x24
   3065c:	add	r1, r7, #1
   30660:	ldr	r0, [r5, #4]
   30664:	sub	r0, r1, r0
   30668:	str	r0, [r5, #20]
   3066c:	mov	r0, #7
   30670:	str	r0, [r5, #24]
   30674:	mov	r7, r6
   30678:	cmp	r4, r7
   3067c:	bne	306b0 <flatcc_json_parser_union_type_vector@@Base+0x274>
   30680:	ldr	r3, [fp, #16]
   30684:	add	r0, sp, #27
   30688:	mov	r1, r4
   3068c:	mov	r2, r6
   30690:	str	r0, [sp]
   30694:	mov	r0, r5
   30698:	bl	2fd38 <flatcc_json_parser_union_type@@Base+0x25c>
   3069c:	mov	r7, r0
   306a0:	cmp	r0, r4
   306a4:	cmpne	r7, r6
   306a8:	beq	304c0 <flatcc_json_parser_union_type_vector@@Base+0x84>
   306ac:	ldrb	r8, [sp, #27]
   306b0:	ldr	r1, [fp, #24]
   306b4:	uxtb	r0, r8
   306b8:	blx	r1
   306bc:	cmp	r0, #0
   306c0:	bne	306d8 <flatcc_json_parser_union_type_vector@@Base+0x29c>
   306c4:	ldrb	r0, [r5, #8]
   306c8:	tst	r0, #1
   306cc:	beq	309a4 <flatcc_json_parser_union_type_vector@@Base+0x568>
   306d0:	mov	r8, #0
   306d4:	strb	r8, [sp, #27]
   306d8:	ldr	r0, [sp, #20]
   306dc:	strb	r8, [r0]
   306e0:	sub	r0, r6, r7
   306e4:	cmp	r0, #2
   306e8:	blt	30714 <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   306ec:	ldrb	r0, [r7]
   306f0:	cmp	r0, #32
   306f4:	bls	30700 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
   306f8:	mov	r4, r7
   306fc:	b	30728 <flatcc_json_parser_union_type_vector@@Base+0x2ec>
   30700:	bne	30714 <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   30704:	mov	r4, r7
   30708:	ldrb	r0, [r4, #1]!
   3070c:	cmp	r0, #32
   30710:	bhi	30728 <flatcc_json_parser_union_type_vector@@Base+0x2ec>
   30714:	mov	r0, r5
   30718:	mov	r1, r7
   3071c:	mov	r2, r6
   30720:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   30724:	mov	r4, r0
   30728:	cmp	r4, r6
   3072c:	beq	3052c <flatcc_json_parser_union_type_vector@@Base+0xf0>
   30730:	ldrb	r0, [r4]
   30734:	cmp	r0, #44	; 0x2c
   30738:	bne	307d4 <flatcc_json_parser_union_type_vector@@Base+0x398>
   3073c:	add	r1, r4, #1
   30740:	sub	r0, r6, r1
   30744:	cmp	r0, #2
   30748:	blt	30770 <flatcc_json_parser_union_type_vector@@Base+0x334>
   3074c:	ldrb	r0, [r1]
   30750:	cmp	r0, #32
   30754:	bls	30760 <flatcc_json_parser_union_type_vector@@Base+0x324>
   30758:	mov	r4, r1
   3075c:	b	30780 <flatcc_json_parser_union_type_vector@@Base+0x344>
   30760:	bne	30770 <flatcc_json_parser_union_type_vector@@Base+0x334>
   30764:	ldrb	r0, [r4, #2]!
   30768:	cmp	r0, #32
   3076c:	bhi	30780 <flatcc_json_parser_union_type_vector@@Base+0x344>
   30770:	mov	r0, r5
   30774:	mov	r2, r6
   30778:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   3077c:	mov	r4, r0
   30780:	cmp	r4, r6
   30784:	beq	30964 <flatcc_json_parser_union_type_vector@@Base+0x528>
   30788:	ldrb	r0, [r4]
   3078c:	cmp	r0, #93	; 0x5d
   30790:	beq	307dc <flatcc_json_parser_union_type_vector@@Base+0x3a0>
   30794:	ldr	r0, [r5]
   30798:	mov	r1, #1
   3079c:	bl	29a28 <flatcc_builder_extend_vector@@Base>
   307a0:	mov	r1, r0
   307a4:	cmp	r0, #0
   307a8:	bne	305b4 <flatcc_json_parser_union_type_vector@@Base+0x178>
   307ac:	b	30920 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   307b0:	mov	r8, r0
   307b4:	strb	r0, [sp, #27]
   307b8:	b	30678 <flatcc_json_parser_union_type_vector@@Base+0x23c>
   307bc:	bne	3080c <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   307c0:	ldrb	r0, [r7, #2]!
   307c4:	cmp	r0, #32
   307c8:	mov	r8, r7
   307cc:	bls	3080c <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   307d0:	b	3081c <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   307d4:	cmp	r0, #93	; 0x5d
   307d8:	bne	30984 <flatcc_json_parser_union_type_vector@@Base+0x548>
   307dc:	add	r1, r4, #1
   307e0:	sub	r0, r6, r1
   307e4:	cmp	r0, #2
   307e8:	blt	3080c <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   307ec:	ldrb	r0, [r1]
   307f0:	cmp	r0, #32
   307f4:	bhi	30588 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   307f8:	bne	3080c <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   307fc:	ldrb	r0, [r4, #2]!
   30800:	cmp	r0, #32
   30804:	mov	r8, r4
   30808:	bhi	3081c <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   3080c:	mov	r0, r5
   30810:	mov	r2, r6
   30814:	bl	2d33c <flatcc_json_parser_space_ext@@Base>
   30818:	mov	r8, r0
   3081c:	ldr	r0, [r5]
   30820:	bl	2b39c <flatcc_builder_vector_count@@Base>
   30824:	str	r0, [r9, #16]
   30828:	mov	r4, r0
   3082c:	ldr	r0, [r5]
   30830:	mov	r1, r4
   30834:	bl	28e60 <flatcc_builder_enter_user_frame@@Base>
   30838:	mov	r9, r0
   3083c:	ldr	r0, [r5]
   30840:	mov	r1, r9
   30844:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   30848:	mov	r7, r0
   3084c:	ldr	r0, [r5]
   30850:	bl	2b3a8 <flatcc_builder_vector_edit@@Base>
   30854:	mov	r1, r0
   30858:	mov	r0, r7
   3085c:	mov	r2, r4
   30860:	bl	12ab0 <memcpy@plt>
   30864:	ldr	r0, [r5]
   30868:	bl	2b2ac <flatcc_builder_end_vector@@Base>
   3086c:	cmp	r0, #0
   30870:	beq	3091c <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   30874:	ldr	r1, [fp, #8]
   30878:	mov	r7, r0
   3087c:	ldr	r0, [r5]
   30880:	sub	r1, r1, #1
   30884:	bl	2b7a0 <flatcc_builder_table_add_offset@@Base>
   30888:	cmp	r0, #0
   3088c:	beq	3091c <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   30890:	str	r7, [r0]
   30894:	ldr	r1, [fp, #12]
   30898:	ldr	r0, [r5]
   3089c:	bl	28fb0 <flatcc_builder_get_user_frame_ptr@@Base>
   308a0:	add	r2, r0, #8
   308a4:	mov	r3, r2
   308a8:	ldr	r1, [r3, sl, lsl #3]!
   308ac:	str	r9, [r3, #20]
   308b0:	cmp	r1, #0
   308b4:	ldr	r3, [r0, #4]
   308b8:	beq	30954 <flatcc_json_parser_union_type_vector@@Base+0x518>
   308bc:	cmp	r3, #0
   308c0:	beq	309b8 <flatcc_json_parser_union_type_vector@@Base+0x57c>
   308c4:	sub	r3, r3, #1
   308c8:	ldr	ip, [fp, #20]
   308cc:	str	r3, [r0, #4]
   308d0:	add	r0, r2, sl, lsl #3
   308d4:	mov	r3, r9
   308d8:	ldr	r2, [r0, #8]
   308dc:	ldr	sl, [r5, #4]
   308e0:	ldr	r7, [r5, #16]
   308e4:	str	r2, [r5, #16]
   308e8:	mov	r2, r6
   308ec:	ldr	r0, [r0, #4]
   308f0:	str	r0, [r5, #4]
   308f4:	ldr	r0, [fp, #8]
   308f8:	str	r4, [sp]
   308fc:	stmib	sp, {r0, ip}
   30900:	mov	r0, r5
   30904:	bl	30070 <flatcc_json_parser_union_vector@@Base+0xf4>
   30908:	cmp	r0, r6
   3090c:	beq	30948 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   30910:	str	sl, [r5, #4]
   30914:	str	r7, [r5, #16]
   30918:	b	3095c <flatcc_json_parser_union_type_vector@@Base+0x520>
   3091c:	mov	r4, r8
   30920:	ldr	r0, [r5, #24]
   30924:	cmp	r0, #0
   30928:	bne	30948 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   3092c:	str	r4, [r5, #36]	; 0x24
   30930:	mov	r0, #33	; 0x21
   30934:	add	r2, r4, #1
   30938:	ldr	r1, [r5, #4]
   3093c:	sub	r1, r2, r1
   30940:	str	r1, [r5, #20]
   30944:	str	r0, [r5, #24]
   30948:	mov	r0, r6
   3094c:	sub	sp, fp, #28
   30950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30954:	add	r1, r3, #1
   30958:	str	r1, [r0, #4]
   3095c:	mov	r6, r8
   30960:	b	30948 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   30964:	ldr	r0, [r5, #24]
   30968:	mov	r8, r6
   3096c:	cmp	r0, #0
   30970:	bne	3081c <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   30974:	str	r6, [r5, #36]	; 0x24
   30978:	ldr	r2, [sp, #16]
   3097c:	mov	r0, #9
   30980:	b	3051c <flatcc_json_parser_union_type_vector@@Base+0xe0>
   30984:	ldr	r0, [r5, #24]
   30988:	mov	r8, r6
   3098c:	cmp	r0, #0
   30990:	bne	3081c <flatcc_json_parser_union_type_vector@@Base+0x3e0>
   30994:	str	r4, [r5, #36]	; 0x24
   30998:	mov	r0, #9
   3099c:	add	r2, r4, #1
   309a0:	b	3051c <flatcc_json_parser_union_type_vector@@Base+0xe0>
   309a4:	ldr	r0, [r5, #24]
   309a8:	cmp	r0, #0
   309ac:	bne	30948 <flatcc_json_parser_union_type_vector@@Base+0x50c>
   309b0:	mov	r0, #15
   309b4:	b	30490 <flatcc_json_parser_union_type_vector@@Base+0x54>
   309b8:	movw	r0, #13485	; 0x34ad
   309bc:	movw	r1, #13500	; 0x34bc
   309c0:	movw	r3, #13778	; 0x35d2
   309c4:	movw	r2, #1122	; 0x462
   309c8:	movt	r0, #3
   309cc:	movt	r1, #3
   309d0:	movt	r3, #3
   309d4:	bl	12bc4 <__assert_fail@plt>

000309d8 <flatcc_json_parser_table_as_root@@Base>:
   309d8:	push	{r4, r5, r6, r7, fp, lr}
   309dc:	add	fp, sp, #16
   309e0:	sub	sp, sp, #48	; 0x30
   309e4:	add	r5, sp, #4
   309e8:	cmp	r1, #0
   309ec:	mov	r6, r0
   309f0:	vmov.i32	q8, #0	; 0x00000000
   309f4:	add	r7, r2, r3
   309f8:	mov	r4, r2
   309fc:	movne	r5, r1
   30a00:	mov	r1, #1
   30a04:	add	r0, r5, #12
   30a08:	vst1.32	{d16-d17}, [r0]
   30a0c:	add	r0, r5, #28
   30a10:	vst1.32	{d16-d17}, [r0]
   30a14:	ldr	r0, [fp, #8]
   30a18:	str	r6, [r5]
   30a1c:	str	r2, [r5, #4]
   30a20:	str	r0, [r5, #8]
   30a24:	str	r1, [r5, #16]
   30a28:	mov	r1, #2
   30a2c:	str	r2, [r5, #28]
   30a30:	str	r7, [r5, #32]
   30a34:	str	r2, [r5, #36]	; 0x24
   30a38:	mov	r2, #0
   30a3c:	and	r3, r1, r0, lsr #1
   30a40:	ldr	r1, [fp, #12]
   30a44:	mov	r0, r6
   30a48:	bl	29590 <flatcc_builder_start_buffer@@Base>
   30a4c:	mov	r1, r0
   30a50:	mvn	r0, #0
   30a54:	cmp	r1, #0
   30a58:	bne	30a9c <flatcc_json_parser_table_as_root@@Base+0xc4>
   30a5c:	ldr	ip, [fp, #16]
   30a60:	mov	r3, sp
   30a64:	mov	r0, r5
   30a68:	mov	r1, r4
   30a6c:	mov	r2, r7
   30a70:	blx	ip
   30a74:	ldr	r0, [r5, #24]
   30a78:	cmp	r0, #0
   30a7c:	bne	30a9c <flatcc_json_parser_table_as_root@@Base+0xc4>
   30a80:	ldr	r1, [sp]
   30a84:	mov	r0, r6
   30a88:	bl	29780 <flatcc_builder_end_buffer@@Base>
   30a8c:	cmp	r0, #0
   30a90:	mvn	r0, #0
   30a94:	movne	r0, #0
   30a98:	strne	r4, [r5, #40]	; 0x28
   30a9c:	sub	sp, fp, #16
   30aa0:	pop	{r4, r5, r6, r7, fp, pc}

00030aa4 <flatcc_json_parser_struct_as_root@@Base>:
   30aa4:	push	{r4, r5, r6, r7, fp, lr}
   30aa8:	add	fp, sp, #16
   30aac:	sub	sp, sp, #48	; 0x30
   30ab0:	add	r5, sp, #4
   30ab4:	cmp	r1, #0
   30ab8:	mov	r6, r0
   30abc:	vmov.i32	q8, #0	; 0x00000000
   30ac0:	add	r7, r2, r3
   30ac4:	mov	r4, r2
   30ac8:	movne	r5, r1
   30acc:	mov	r1, #1
   30ad0:	add	r0, r5, #12
   30ad4:	vst1.32	{d16-d17}, [r0]
   30ad8:	add	r0, r5, #28
   30adc:	vst1.32	{d16-d17}, [r0]
   30ae0:	ldr	r0, [fp, #8]
   30ae4:	str	r6, [r5]
   30ae8:	str	r2, [r5, #4]
   30aec:	str	r0, [r5, #8]
   30af0:	str	r1, [r5, #16]
   30af4:	mov	r1, #2
   30af8:	str	r2, [r5, #28]
   30afc:	str	r7, [r5, #32]
   30b00:	str	r2, [r5, #36]	; 0x24
   30b04:	mov	r2, #0
   30b08:	and	r3, r1, r0, lsr #1
   30b0c:	ldr	r1, [fp, #12]
   30b10:	mov	r0, r6
   30b14:	bl	29590 <flatcc_builder_start_buffer@@Base>
   30b18:	mov	r1, r0
   30b1c:	mvn	r0, #0
   30b20:	cmp	r1, #0
   30b24:	bne	30b68 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   30b28:	ldr	ip, [fp, #16]
   30b2c:	mov	r3, sp
   30b30:	mov	r0, r5
   30b34:	mov	r1, r4
   30b38:	mov	r2, r7
   30b3c:	blx	ip
   30b40:	ldr	r0, [r5, #24]
   30b44:	cmp	r0, #0
   30b48:	bne	30b68 <flatcc_json_parser_struct_as_root@@Base+0xc4>
   30b4c:	ldr	r1, [sp]
   30b50:	mov	r0, r6
   30b54:	bl	29780 <flatcc_builder_end_buffer@@Base>
   30b58:	cmp	r0, #0
   30b5c:	mvn	r0, #0
   30b60:	movne	r0, #0
   30b64:	strne	r4, [r5, #40]	; 0x28
   30b68:	sub	sp, fp, #16
   30b6c:	pop	{r4, r5, r6, r7, fp, pc}
   30b70:	eor	r1, r1, #-2147483648	; 0x80000000
   30b74:	b	30b7c <flatcc_json_parser_struct_as_root@@Base+0xd8>
   30b78:	eor	r3, r3, #-2147483648	; 0x80000000
   30b7c:	push	{r4, r5, lr}
   30b80:	lsl	r4, r1, #1
   30b84:	lsl	r5, r3, #1
   30b88:	teq	r4, r5
   30b8c:	teqeq	r0, r2
   30b90:	orrsne	ip, r4, r0
   30b94:	orrsne	ip, r5, r2
   30b98:	mvnsne	ip, r4, asr #21
   30b9c:	mvnsne	ip, r5, asr #21
   30ba0:	beq	30d8c <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   30ba4:	lsr	r4, r4, #21
   30ba8:	rsbs	r5, r4, r5, lsr #21
   30bac:	rsblt	r5, r5, #0
   30bb0:	ble	30bd0 <flatcc_json_parser_struct_as_root@@Base+0x12c>
   30bb4:	add	r4, r4, r5
   30bb8:	eor	r2, r0, r2
   30bbc:	eor	r3, r1, r3
   30bc0:	eor	r0, r2, r0
   30bc4:	eor	r1, r3, r1
   30bc8:	eor	r2, r0, r2
   30bcc:	eor	r3, r1, r3
   30bd0:	cmp	r5, #54	; 0x36
   30bd4:	pophi	{r4, r5, pc}
   30bd8:	tst	r1, #-2147483648	; 0x80000000
   30bdc:	lsl	r1, r1, #12
   30be0:	mov	ip, #1048576	; 0x100000
   30be4:	orr	r1, ip, r1, lsr #12
   30be8:	beq	30bf4 <flatcc_json_parser_struct_as_root@@Base+0x150>
   30bec:	rsbs	r0, r0, #0
   30bf0:	rsc	r1, r1, #0
   30bf4:	tst	r3, #-2147483648	; 0x80000000
   30bf8:	lsl	r3, r3, #12
   30bfc:	orr	r3, ip, r3, lsr #12
   30c00:	beq	30c0c <flatcc_json_parser_struct_as_root@@Base+0x168>
   30c04:	rsbs	r2, r2, #0
   30c08:	rsc	r3, r3, #0
   30c0c:	teq	r4, r5
   30c10:	beq	30d74 <flatcc_json_parser_struct_as_root@@Base+0x2d0>
   30c14:	sub	r4, r4, #1
   30c18:	rsbs	lr, r5, #32
   30c1c:	blt	30c38 <flatcc_json_parser_struct_as_root@@Base+0x194>
   30c20:	lsl	ip, r2, lr
   30c24:	adds	r0, r0, r2, lsr r5
   30c28:	adc	r1, r1, #0
   30c2c:	adds	r0, r0, r3, lsl lr
   30c30:	adcs	r1, r1, r3, asr r5
   30c34:	b	30c54 <flatcc_json_parser_struct_as_root@@Base+0x1b0>
   30c38:	sub	r5, r5, #32
   30c3c:	add	lr, lr, #32
   30c40:	cmp	r2, #1
   30c44:	lsl	ip, r3, lr
   30c48:	orrcs	ip, ip, #2
   30c4c:	adds	r0, r0, r3, asr r5
   30c50:	adcs	r1, r1, r3, asr #31
   30c54:	and	r5, r1, #-2147483648	; 0x80000000
   30c58:	bpl	30c68 <flatcc_json_parser_struct_as_root@@Base+0x1c4>
   30c5c:	rsbs	ip, ip, #0
   30c60:	rscs	r0, r0, #0
   30c64:	rsc	r1, r1, #0
   30c68:	cmp	r1, #1048576	; 0x100000
   30c6c:	bcc	30cac <flatcc_json_parser_struct_as_root@@Base+0x208>
   30c70:	cmp	r1, #2097152	; 0x200000
   30c74:	bcc	30c94 <flatcc_json_parser_struct_as_root@@Base+0x1f0>
   30c78:	lsrs	r1, r1, #1
   30c7c:	rrxs	r0, r0
   30c80:	rrx	ip, ip
   30c84:	add	r4, r4, #1
   30c88:	lsl	r2, r4, #21
   30c8c:	cmn	r2, #4194304	; 0x400000
   30c90:	bcs	30dec <flatcc_json_parser_struct_as_root@@Base+0x348>
   30c94:	cmp	ip, #-2147483648	; 0x80000000
   30c98:	lsrseq	ip, r0, #1
   30c9c:	adcs	r0, r0, #0
   30ca0:	adc	r1, r1, r4, lsl #20
   30ca4:	orr	r1, r1, r5
   30ca8:	pop	{r4, r5, pc}
   30cac:	lsls	ip, ip, #1
   30cb0:	adcs	r0, r0, r0
   30cb4:	adc	r1, r1, r1
   30cb8:	tst	r1, #1048576	; 0x100000
   30cbc:	sub	r4, r4, #1
   30cc0:	bne	30c94 <flatcc_json_parser_struct_as_root@@Base+0x1f0>
   30cc4:	teq	r1, #0
   30cc8:	moveq	r1, r0
   30ccc:	moveq	r0, #0
   30cd0:	clz	r3, r1
   30cd4:	addeq	r3, r3, #32
   30cd8:	sub	r3, r3, #11
   30cdc:	subs	r2, r3, #32
   30ce0:	bge	30d04 <flatcc_json_parser_struct_as_root@@Base+0x260>
   30ce4:	adds	r2, r2, #12
   30ce8:	ble	30d00 <flatcc_json_parser_struct_as_root@@Base+0x25c>
   30cec:	add	ip, r2, #20
   30cf0:	rsb	r2, r2, #12
   30cf4:	lsl	r0, r1, ip
   30cf8:	lsr	r1, r1, r2
   30cfc:	b	30d14 <flatcc_json_parser_struct_as_root@@Base+0x270>
   30d00:	add	r2, r2, #20
   30d04:	rsble	ip, r2, #32
   30d08:	lsl	r1, r1, r2
   30d0c:	orrle	r1, r1, r0, lsr ip
   30d10:	lslle	r0, r0, r2
   30d14:	subs	r4, r4, r3
   30d18:	addge	r1, r1, r4, lsl #20
   30d1c:	orrge	r1, r1, r5
   30d20:	popge	{r4, r5, pc}
   30d24:	mvn	r4, r4
   30d28:	subs	r4, r4, #31
   30d2c:	bge	30d68 <flatcc_json_parser_struct_as_root@@Base+0x2c4>
   30d30:	adds	r4, r4, #12
   30d34:	bgt	30d50 <flatcc_json_parser_struct_as_root@@Base+0x2ac>
   30d38:	add	r4, r4, #20
   30d3c:	rsb	r2, r4, #32
   30d40:	lsr	r0, r0, r4
   30d44:	orr	r0, r0, r1, lsl r2
   30d48:	orr	r1, r5, r1, lsr r4
   30d4c:	pop	{r4, r5, pc}
   30d50:	rsb	r4, r4, #12
   30d54:	rsb	r2, r4, #32
   30d58:	lsr	r0, r0, r2
   30d5c:	orr	r0, r0, r1, lsl r4
   30d60:	mov	r1, r5
   30d64:	pop	{r4, r5, pc}
   30d68:	lsr	r0, r1, r4
   30d6c:	mov	r1, r5
   30d70:	pop	{r4, r5, pc}
   30d74:	teq	r4, #0
   30d78:	eor	r3, r3, #1048576	; 0x100000
   30d7c:	eoreq	r1, r1, #1048576	; 0x100000
   30d80:	addeq	r4, r4, #1
   30d84:	subne	r5, r5, #1
   30d88:	b	30c14 <flatcc_json_parser_struct_as_root@@Base+0x170>
   30d8c:	mvns	ip, r4, asr #21
   30d90:	mvnsne	ip, r5, asr #21
   30d94:	beq	30dfc <flatcc_json_parser_struct_as_root@@Base+0x358>
   30d98:	teq	r4, r5
   30d9c:	teqeq	r0, r2
   30da0:	beq	30db4 <flatcc_json_parser_struct_as_root@@Base+0x310>
   30da4:	orrs	ip, r4, r0
   30da8:	moveq	r1, r3
   30dac:	moveq	r0, r2
   30db0:	pop	{r4, r5, pc}
   30db4:	teq	r1, r3
   30db8:	movne	r1, #0
   30dbc:	movne	r0, #0
   30dc0:	popne	{r4, r5, pc}
   30dc4:	lsrs	ip, r4, #21
   30dc8:	bne	30ddc <flatcc_json_parser_struct_as_root@@Base+0x338>
   30dcc:	lsls	r0, r0, #1
   30dd0:	adcs	r1, r1, r1
   30dd4:	orrcs	r1, r1, #-2147483648	; 0x80000000
   30dd8:	pop	{r4, r5, pc}
   30ddc:	adds	r4, r4, #4194304	; 0x400000
   30de0:	addcc	r1, r1, #1048576	; 0x100000
   30de4:	popcc	{r4, r5, pc}
   30de8:	and	r5, r1, #-2147483648	; 0x80000000
   30dec:	orr	r1, r5, #2130706432	; 0x7f000000
   30df0:	orr	r1, r1, #15728640	; 0xf00000
   30df4:	mov	r0, #0
   30df8:	pop	{r4, r5, pc}
   30dfc:	mvns	ip, r4, asr #21
   30e00:	movne	r1, r3
   30e04:	movne	r0, r2
   30e08:	mvnseq	ip, r5, asr #21
   30e0c:	movne	r3, r1
   30e10:	movne	r2, r0
   30e14:	orrs	r4, r0, r1, lsl #12
   30e18:	orrseq	r5, r2, r3, lsl #12
   30e1c:	teqeq	r1, r3
   30e20:	orrne	r1, r1, #524288	; 0x80000
   30e24:	pop	{r4, r5, pc}
   30e28:	teq	r0, #0
   30e2c:	moveq	r1, #0
   30e30:	bxeq	lr
   30e34:	push	{r4, r5, lr}
   30e38:	mov	r4, #1024	; 0x400
   30e3c:	add	r4, r4, #50	; 0x32
   30e40:	mov	r5, #0
   30e44:	mov	r1, #0
   30e48:	b	30cc4 <flatcc_json_parser_struct_as_root@@Base+0x220>
   30e4c:	teq	r0, #0
   30e50:	moveq	r1, #0
   30e54:	bxeq	lr
   30e58:	push	{r4, r5, lr}
   30e5c:	mov	r4, #1024	; 0x400
   30e60:	add	r4, r4, #50	; 0x32
   30e64:	ands	r5, r0, #-2147483648	; 0x80000000
   30e68:	rsbmi	r0, r0, #0
   30e6c:	mov	r1, #0
   30e70:	b	30cc4 <flatcc_json_parser_struct_as_root@@Base+0x220>
   30e74:	lsls	r2, r0, #1
   30e78:	asr	r1, r2, #3
   30e7c:	rrx	r1, r1
   30e80:	lsl	r0, r2, #28
   30e84:	andsne	r3, r2, #-16777216	; 0xff000000
   30e88:	teqne	r3, #-16777216	; 0xff000000
   30e8c:	eorne	r1, r1, #939524096	; 0x38000000
   30e90:	bxne	lr
   30e94:	bics	r2, r2, #-16777216	; 0xff000000
   30e98:	bxeq	lr
   30e9c:	teq	r3, #-16777216	; 0xff000000
   30ea0:	orreq	r1, r1, #524288	; 0x80000
   30ea4:	bxeq	lr
   30ea8:	push	{r4, r5, lr}
   30eac:	mov	r4, #896	; 0x380
   30eb0:	and	r5, r1, #-2147483648	; 0x80000000
   30eb4:	bic	r1, r1, #-2147483648	; 0x80000000
   30eb8:	b	30cc4 <flatcc_json_parser_struct_as_root@@Base+0x220>
   30ebc:	orrs	r2, r0, r1
   30ec0:	bxeq	lr
   30ec4:	push	{r4, r5, lr}
   30ec8:	mov	r5, #0
   30ecc:	b	30eec <flatcc_json_parser_struct_as_root@@Base+0x448>
   30ed0:	orrs	r2, r0, r1
   30ed4:	bxeq	lr
   30ed8:	push	{r4, r5, lr}
   30edc:	ands	r5, r1, #-2147483648	; 0x80000000
   30ee0:	bpl	30eec <flatcc_json_parser_struct_as_root@@Base+0x448>
   30ee4:	rsbs	r0, r0, #0
   30ee8:	rsc	r1, r1, #0
   30eec:	mov	r4, #1024	; 0x400
   30ef0:	add	r4, r4, #50	; 0x32
   30ef4:	lsrs	ip, r1, #22
   30ef8:	beq	30c68 <flatcc_json_parser_struct_as_root@@Base+0x1c4>
   30efc:	mov	r2, #3
   30f00:	lsrs	ip, ip, #3
   30f04:	addne	r2, r2, #3
   30f08:	lsrs	ip, ip, #3
   30f0c:	addne	r2, r2, #3
   30f10:	add	r2, r2, ip, lsr #3
   30f14:	rsb	r3, r2, #32
   30f18:	lsl	ip, r0, r3
   30f1c:	lsr	r0, r0, r2
   30f20:	orr	r0, r0, r1, lsl r3
   30f24:	lsr	r1, r1, r2
   30f28:	add	r4, r4, r2
   30f2c:	b	30c68 <flatcc_json_parser_struct_as_root@@Base+0x1c4>
   30f30:	eor	r0, r0, #-2147483648	; 0x80000000
   30f34:	b	30f3c <flatcc_json_parser_struct_as_root@@Base+0x498>
   30f38:	eor	r1, r1, #-2147483648	; 0x80000000
   30f3c:	lsls	r2, r0, #1
   30f40:	lslsne	r3, r1, #1
   30f44:	teqne	r2, r3
   30f48:	mvnsne	ip, r2, asr #24
   30f4c:	mvnsne	ip, r3, asr #24
   30f50:	beq	31048 <flatcc_json_parser_struct_as_root@@Base+0x5a4>
   30f54:	lsr	r2, r2, #24
   30f58:	rsbs	r3, r2, r3, lsr #24
   30f5c:	addgt	r2, r2, r3
   30f60:	eorgt	r1, r0, r1
   30f64:	eorgt	r0, r1, r0
   30f68:	eorgt	r1, r0, r1
   30f6c:	rsblt	r3, r3, #0
   30f70:	cmp	r3, #25
   30f74:	bxhi	lr
   30f78:	tst	r0, #-2147483648	; 0x80000000
   30f7c:	orr	r0, r0, #8388608	; 0x800000
   30f80:	bic	r0, r0, #-16777216	; 0xff000000
   30f84:	rsbne	r0, r0, #0
   30f88:	tst	r1, #-2147483648	; 0x80000000
   30f8c:	orr	r1, r1, #8388608	; 0x800000
   30f90:	bic	r1, r1, #-16777216	; 0xff000000
   30f94:	rsbne	r1, r1, #0
   30f98:	teq	r2, r3
   30f9c:	beq	31030 <flatcc_json_parser_struct_as_root@@Base+0x58c>
   30fa0:	sub	r2, r2, #1
   30fa4:	adds	r0, r0, r1, asr r3
   30fa8:	rsb	r3, r3, #32
   30fac:	lsl	r1, r1, r3
   30fb0:	and	r3, r0, #-2147483648	; 0x80000000
   30fb4:	bpl	30fc0 <flatcc_json_parser_struct_as_root@@Base+0x51c>
   30fb8:	rsbs	r1, r1, #0
   30fbc:	rsc	r0, r0, #0
   30fc0:	cmp	r0, #8388608	; 0x800000
   30fc4:	bcc	30ff8 <flatcc_json_parser_struct_as_root@@Base+0x554>
   30fc8:	cmp	r0, #16777216	; 0x1000000
   30fcc:	bcc	30fe4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   30fd0:	lsrs	r0, r0, #1
   30fd4:	rrx	r1, r1
   30fd8:	add	r2, r2, #1
   30fdc:	cmp	r2, #254	; 0xfe
   30fe0:	bcs	3109c <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   30fe4:	cmp	r1, #-2147483648	; 0x80000000
   30fe8:	adc	r0, r0, r2, lsl #23
   30fec:	biceq	r0, r0, #1
   30ff0:	orr	r0, r0, r3
   30ff4:	bx	lr
   30ff8:	lsls	r1, r1, #1
   30ffc:	adc	r0, r0, r0
   31000:	tst	r0, #8388608	; 0x800000
   31004:	sub	r2, r2, #1
   31008:	bne	30fe4 <flatcc_json_parser_struct_as_root@@Base+0x540>
   3100c:	clz	ip, r0
   31010:	sub	ip, ip, #8
   31014:	subs	r2, r2, ip
   31018:	lsl	r0, r0, ip
   3101c:	addge	r0, r0, r2, lsl #23
   31020:	rsblt	r2, r2, #0
   31024:	orrge	r0, r0, r3
   31028:	orrlt	r0, r3, r0, lsr r2
   3102c:	bx	lr
   31030:	teq	r2, #0
   31034:	eor	r1, r1, #8388608	; 0x800000
   31038:	eoreq	r0, r0, #8388608	; 0x800000
   3103c:	addeq	r2, r2, #1
   31040:	subne	r3, r3, #1
   31044:	b	30fa0 <flatcc_json_parser_struct_as_root@@Base+0x4fc>
   31048:	lsl	r3, r1, #1
   3104c:	mvns	ip, r2, asr #24
   31050:	mvnsne	ip, r3, asr #24
   31054:	beq	310a8 <flatcc_json_parser_struct_as_root@@Base+0x604>
   31058:	teq	r2, r3
   3105c:	beq	3106c <flatcc_json_parser_struct_as_root@@Base+0x5c8>
   31060:	teq	r2, #0
   31064:	moveq	r0, r1
   31068:	bx	lr
   3106c:	teq	r0, r1
   31070:	movne	r0, #0
   31074:	bxne	lr
   31078:	tst	r2, #-16777216	; 0xff000000
   3107c:	bne	3108c <flatcc_json_parser_struct_as_root@@Base+0x5e8>
   31080:	lsls	r0, r0, #1
   31084:	orrcs	r0, r0, #-2147483648	; 0x80000000
   31088:	bx	lr
   3108c:	adds	r2, r2, #33554432	; 0x2000000
   31090:	addcc	r0, r0, #8388608	; 0x800000
   31094:	bxcc	lr
   31098:	and	r3, r0, #-2147483648	; 0x80000000
   3109c:	orr	r0, r3, #2130706432	; 0x7f000000
   310a0:	orr	r0, r0, #8388608	; 0x800000
   310a4:	bx	lr
   310a8:	mvns	r2, r2, asr #24
   310ac:	movne	r0, r1
   310b0:	mvnseq	r3, r3, asr #24
   310b4:	movne	r1, r0
   310b8:	lsls	r2, r0, #9
   310bc:	lslseq	r3, r1, #9
   310c0:	teqeq	r0, r1
   310c4:	orrne	r0, r0, #4194304	; 0x400000
   310c8:	bx	lr
   310cc:	mov	r3, #0
   310d0:	b	310dc <flatcc_json_parser_struct_as_root@@Base+0x638>
   310d4:	ands	r3, r0, #-2147483648	; 0x80000000
   310d8:	rsbmi	r0, r0, #0
   310dc:	movs	ip, r0
   310e0:	bxeq	lr
   310e4:	orr	r3, r3, #1258291200	; 0x4b000000
   310e8:	mov	r1, r0
   310ec:	mov	r0, #0
   310f0:	b	31134 <flatcc_json_parser_struct_as_root@@Base+0x690>
   310f4:	orrs	r2, r0, r1
   310f8:	bxeq	lr
   310fc:	mov	r3, #0
   31100:	b	3111c <flatcc_json_parser_struct_as_root@@Base+0x678>
   31104:	orrs	r2, r0, r1
   31108:	bxeq	lr
   3110c:	ands	r3, r1, #-2147483648	; 0x80000000
   31110:	bpl	3111c <flatcc_json_parser_struct_as_root@@Base+0x678>
   31114:	rsbs	r0, r0, #0
   31118:	rsc	r1, r1, #0
   3111c:	movs	ip, r1
   31120:	moveq	ip, r0
   31124:	moveq	r1, r0
   31128:	moveq	r0, #0
   3112c:	orr	r3, r3, #1526726656	; 0x5b000000
   31130:	subeq	r3, r3, #268435456	; 0x10000000
   31134:	sub	r3, r3, #8388608	; 0x800000
   31138:	clz	r2, ip
   3113c:	subs	r2, r2, #8
   31140:	sub	r3, r3, r2, lsl #23
   31144:	blt	31164 <flatcc_json_parser_struct_as_root@@Base+0x6c0>
   31148:	add	r3, r3, r1, lsl r2
   3114c:	lsl	ip, r0, r2
   31150:	rsb	r2, r2, #32
   31154:	cmp	ip, #-2147483648	; 0x80000000
   31158:	adc	r0, r3, r0, lsr r2
   3115c:	biceq	r0, r0, #1
   31160:	bx	lr
   31164:	add	r2, r2, #32
   31168:	lsl	ip, r1, r2
   3116c:	rsb	r2, r2, #32
   31170:	orrs	r0, r0, ip, lsl #1
   31174:	adc	r0, r3, r1, lsr r2
   31178:	biceq	r0, r0, ip, lsr #31
   3117c:	bx	lr

00031180 <__libc_csu_init@@Base>:
   31180:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31184:	mov	r7, r0
   31188:	ldr	r6, [pc, #72]	; 311d8 <__libc_csu_init@@Base+0x58>
   3118c:	ldr	r5, [pc, #72]	; 311dc <__libc_csu_init@@Base+0x5c>
   31190:	add	r6, pc, r6
   31194:	add	r5, pc, r5
   31198:	sub	r6, r6, r5
   3119c:	mov	r8, r1
   311a0:	mov	r9, r2
   311a4:	bl	12a78 <fopen@plt-0x20>
   311a8:	asrs	r6, r6, #2
   311ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   311b0:	mov	r4, #0
   311b4:	add	r4, r4, #1
   311b8:	ldr	r3, [r5], #4
   311bc:	mov	r2, r9
   311c0:	mov	r1, r8
   311c4:	mov	r0, r7
   311c8:	blx	r3
   311cc:	cmp	r6, r4
   311d0:	bne	311b4 <__libc_csu_init@@Base+0x34>
   311d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   311d8:	andeq	r2, r1, r4, ror sp
   311dc:	andeq	r2, r1, ip, ror #26

000311e0 <__libc_csu_fini@@Base>:
   311e0:	bx	lr

Disassembly of section .fini:

000311e4 <.fini>:
   311e4:	push	{r3, lr}
   311e8:	pop	{r3, pc}
