
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011a60 <.init>:
   11a60:	push	{r3, lr}
   11a64:	bl	11fc0 <__assert_fail@plt+0x48>
   11a68:	pop	{r3, pc}

Disassembly of section .plt:

00011a6c <calloc@plt-0x14>:
   11a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11a70:	ldr	lr, [pc, #4]	; 11a7c <calloc@plt-0x4>
   11a74:	add	lr, pc, lr
   11a78:	ldr	pc, [lr, #8]!
   11a7c:	andeq	lr, r1, r4, lsl #11

00011a80 <calloc@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #122880	; 0x1e000
   11a88:	ldr	pc, [ip, #1412]!	; 0x584

00011a8c <fputs_unlocked@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #122880	; 0x1e000
   11a94:	ldr	pc, [ip, #1404]!	; 0x57c

00011a98 <__getdelim@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #122880	; 0x1e000
   11aa0:	ldr	pc, [ip, #1396]!	; 0x574

00011aa4 <getpwnam@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #122880	; 0x1e000
   11aac:	ldr	pc, [ip, #1388]!	; 0x56c

00011ab0 <strcmp@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #122880	; 0x1e000
   11ab8:	ldr	pc, [ip, #1380]!	; 0x564

00011abc <strtol@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #122880	; 0x1e000
   11ac4:	ldr	pc, [ip, #1372]!	; 0x55c

00011ac8 <setsockopt@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #122880	; 0x1e000
   11ad0:	ldr	pc, [ip, #1364]!	; 0x554

00011ad4 <strcspn@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #122880	; 0x1e000
   11adc:	ldr	pc, [ip, #1356]!	; 0x54c

00011ae0 <pause@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #122880	; 0x1e000
   11ae8:	ldr	pc, [ip, #1348]!	; 0x544

00011aec <printf@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #122880	; 0x1e000
   11af4:	ldr	pc, [ip, #1340]!	; 0x53c

00011af8 <read@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #122880	; 0x1e000
   11b00:	ldr	pc, [ip, #1332]!	; 0x534

00011b04 <getprotobyname@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #122880	; 0x1e000
   11b0c:	ldr	pc, [ip, #1324]!	; 0x52c

00011b10 <sigprocmask@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #122880	; 0x1e000
   11b18:	ldr	pc, [ip, #1316]!	; 0x524

00011b1c <memmove@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #122880	; 0x1e000
   11b24:	ldr	pc, [ip, #1308]!	; 0x51c

00011b28 <strchrnul@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #122880	; 0x1e000
   11b30:	ldr	pc, [ip, #1300]!	; 0x514

00011b34 <free@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #122880	; 0x1e000
   11b3c:	ldr	pc, [ip, #1292]!	; 0x50c

00011b40 <gai_strerror@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #122880	; 0x1e000
   11b48:	ldr	pc, [ip, #1284]!	; 0x504

00011b4c <strndup@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #122880	; 0x1e000
   11b54:	ldr	pc, [ip, #1276]!	; 0x4fc

00011b58 <_exit@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #122880	; 0x1e000
   11b60:	ldr	pc, [ip, #1268]!	; 0x4f4

00011b64 <memcpy@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #122880	; 0x1e000
   11b6c:	ldr	pc, [ip, #1260]!	; 0x4ec

00011b70 <signal@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #122880	; 0x1e000
   11b78:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b7c <time@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #122880	; 0x1e000
   11b84:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b88 <fwrite_unlocked@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #122880	; 0x1e000
   11b90:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b94 <select@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #122880	; 0x1e000
   11b9c:	ldr	pc, [ip, #1228]!	; 0x4cc

00011ba0 <sleep@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #122880	; 0x1e000
   11ba8:	ldr	pc, [ip, #1220]!	; 0x4c4

00011bac <ctime@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #122880	; 0x1e000
   11bb4:	ldr	pc, [ip, #1212]!	; 0x4bc

00011bb8 <recvfrom@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #122880	; 0x1e000
   11bc0:	ldr	pc, [ip, #1204]!	; 0x4b4

00011bc4 <strdup@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #122880	; 0x1e000
   11bcc:	ldr	pc, [ip, #1196]!	; 0x4ac

00011bd0 <alarm@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #122880	; 0x1e000
   11bd8:	ldr	pc, [ip, #1188]!	; 0x4a4

00011bdc <sysconf@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #122880	; 0x1e000
   11be4:	ldr	pc, [ip, #1180]!	; 0x49c

00011be8 <dup2@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #122880	; 0x1e000
   11bf0:	ldr	pc, [ip, #1172]!	; 0x494

00011bf4 <realloc@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #122880	; 0x1e000
   11bfc:	ldr	pc, [ip, #1164]!	; 0x48c

00011c00 <initgroups@plt>:
   11c00:	add	ip, pc, #0, 12
   11c04:	add	ip, ip, #122880	; 0x1e000
   11c08:	ldr	pc, [ip, #1156]!	; 0x484

00011c0c <chdir@plt>:
   11c0c:	add	ip, pc, #0, 12
   11c10:	add	ip, ip, #122880	; 0x1e000
   11c14:	ldr	pc, [ip, #1148]!	; 0x47c

00011c18 <strcasecmp@plt>:
   11c18:	add	ip, pc, #0, 12
   11c1c:	add	ip, ip, #122880	; 0x1e000
   11c20:	ldr	pc, [ip, #1140]!	; 0x474

00011c24 <funlockfile@plt>:
   11c24:	add	ip, pc, #0, 12
   11c28:	add	ip, ip, #122880	; 0x1e000
   11c2c:	ldr	pc, [ip, #1132]!	; 0x46c

00011c30 <accept@plt>:
   11c30:	add	ip, pc, #0, 12
   11c34:	add	ip, ip, #122880	; 0x1e000
   11c38:	ldr	pc, [ip, #1124]!	; 0x464

00011c3c <sigaction@plt>:
   11c3c:	add	ip, pc, #0, 12
   11c40:	add	ip, ip, #122880	; 0x1e000
   11c44:	ldr	pc, [ip, #1116]!	; 0x45c

00011c48 <fwrite@plt>:
   11c48:	add	ip, pc, #0, 12
   11c4c:	add	ip, ip, #122880	; 0x1e000
   11c50:	ldr	pc, [ip, #1108]!	; 0x454

00011c54 <strcat@plt>:
   11c54:	add	ip, pc, #0, 12
   11c58:	add	ip, ip, #122880	; 0x1e000
   11c5c:	ldr	pc, [ip, #1100]!	; 0x44c

00011c60 <gettimeofday@plt>:
   11c60:	add	ip, pc, #0, 12
   11c64:	add	ip, ip, #122880	; 0x1e000
   11c68:	ldr	pc, [ip, #1092]!	; 0x444

00011c6c <error@plt>:
   11c6c:	add	ip, pc, #0, 12
   11c70:	add	ip, ip, #122880	; 0x1e000
   11c74:	ldr	pc, [ip, #1084]!	; 0x43c

00011c78 <opendir@plt>:
   11c78:	add	ip, pc, #0, 12
   11c7c:	add	ip, ip, #122880	; 0x1e000
   11c80:	ldr	pc, [ip, #1076]!	; 0x434

00011c84 <open64@plt>:
   11c84:	add	ip, pc, #0, 12
   11c88:	add	ip, ip, #122880	; 0x1e000
   11c8c:	ldr	pc, [ip, #1068]!	; 0x42c

00011c90 <getenv@plt>:
   11c90:	add	ip, pc, #0, 12
   11c94:	add	ip, ip, #122880	; 0x1e000
   11c98:	ldr	pc, [ip, #1060]!	; 0x424

00011c9c <setgid@plt>:
   11c9c:	add	ip, pc, #0, 12
   11ca0:	add	ip, ip, #122880	; 0x1e000
   11ca4:	ldr	pc, [ip, #1052]!	; 0x41c

00011ca8 <malloc@plt>:
   11ca8:	add	ip, pc, #0, 12
   11cac:	add	ip, ip, #122880	; 0x1e000
   11cb0:	ldr	pc, [ip, #1044]!	; 0x414

00011cb4 <sigaddset@plt>:
   11cb4:	add	ip, pc, #0, 12
   11cb8:	add	ip, ip, #122880	; 0x1e000
   11cbc:	ldr	pc, [ip, #1036]!	; 0x40c

00011cc0 <__libc_start_main@plt>:
   11cc0:	add	ip, pc, #0, 12
   11cc4:	add	ip, ip, #122880	; 0x1e000
   11cc8:	ldr	pc, [ip, #1028]!	; 0x404

00011ccc <strerror@plt>:
   11ccc:	add	ip, pc, #0, 12
   11cd0:	add	ip, ip, #122880	; 0x1e000
   11cd4:	ldr	pc, [ip, #1020]!	; 0x3fc

00011cd8 <__ctype_tolower_loc@plt>:
   11cd8:	add	ip, pc, #0, 12
   11cdc:	add	ip, ip, #122880	; 0x1e000
   11ce0:	ldr	pc, [ip, #1012]!	; 0x3f4

00011ce4 <__gmon_start__@plt>:
   11ce4:	add	ip, pc, #0, 12
   11ce8:	add	ip, ip, #122880	; 0x1e000
   11cec:	ldr	pc, [ip, #1004]!	; 0x3ec

00011cf0 <__ctype_b_loc@plt>:
   11cf0:	add	ip, pc, #0, 12
   11cf4:	add	ip, ip, #122880	; 0x1e000
   11cf8:	ldr	pc, [ip, #996]!	; 0x3e4

00011cfc <getpid@plt>:
   11cfc:	add	ip, pc, #0, 12
   11d00:	add	ip, ip, #122880	; 0x1e000
   11d04:	ldr	pc, [ip, #988]!	; 0x3dc

00011d08 <exit@plt>:
   11d08:	add	ip, pc, #0, 12
   11d0c:	add	ip, ip, #122880	; 0x1e000
   11d10:	ldr	pc, [ip, #980]!	; 0x3d4

00011d14 <bcmp@plt>:
   11d14:	add	ip, pc, #0, 12
   11d18:	add	ip, ip, #122880	; 0x1e000
   11d1c:	ldr	pc, [ip, #972]!	; 0x3cc

00011d20 <strtoul@plt>:
   11d20:	add	ip, pc, #0, 12
   11d24:	add	ip, ip, #122880	; 0x1e000
   11d28:	ldr	pc, [ip, #964]!	; 0x3c4

00011d2c <strlen@plt>:
   11d2c:	add	ip, pc, #0, 12
   11d30:	add	ip, ip, #122880	; 0x1e000
   11d34:	ldr	pc, [ip, #956]!	; 0x3bc

00011d38 <setsid@plt>:
   11d38:	add	ip, pc, #0, 12
   11d3c:	add	ip, ip, #122880	; 0x1e000
   11d40:	ldr	pc, [ip, #948]!	; 0x3b4

00011d44 <strchr@plt>:
   11d44:	add	ip, pc, #0, 12
   11d48:	add	ip, ip, #122880	; 0x1e000
   11d4c:	ldr	pc, [ip, #940]!	; 0x3ac

00011d50 <setenv@plt>:
   11d50:	add	ip, pc, #0, 12
   11d54:	add	ip, ip, #122880	; 0x1e000
   11d58:	ldr	pc, [ip, #932]!	; 0x3a4

00011d5c <fprintf@plt>:
   11d5c:	add	ip, pc, #0, 12
   11d60:	add	ip, ip, #122880	; 0x1e000
   11d64:	ldr	pc, [ip, #924]!	; 0x39c

00011d68 <execv@plt>:
   11d68:	add	ip, pc, #0, 12
   11d6c:	add	ip, ip, #122880	; 0x1e000
   11d70:	ldr	pc, [ip, #916]!	; 0x394

00011d74 <__errno_location@plt>:
   11d74:	add	ip, pc, #0, 12
   11d78:	add	ip, ip, #122880	; 0x1e000
   11d7c:	ldr	pc, [ip, #908]!	; 0x38c

00011d80 <snprintf@plt>:
   11d80:	add	ip, pc, #0, 12
   11d84:	add	ip, ip, #122880	; 0x1e000
   11d88:	ldr	pc, [ip, #900]!	; 0x384

00011d8c <strerror_r@plt>:
   11d8c:	add	ip, pc, #0, 12
   11d90:	add	ip, ip, #122880	; 0x1e000
   11d94:	ldr	pc, [ip, #892]!	; 0x37c

00011d98 <bind@plt>:
   11d98:	add	ip, pc, #0, 12
   11d9c:	add	ip, ip, #122880	; 0x1e000
   11da0:	ldr	pc, [ip, #884]!	; 0x374

00011da4 <memset@plt>:
   11da4:	add	ip, pc, #0, 12
   11da8:	add	ip, ip, #122880	; 0x1e000
   11dac:	ldr	pc, [ip, #876]!	; 0x36c

00011db0 <strncpy@plt>:
   11db0:	add	ip, pc, #0, 12
   11db4:	add	ip, ip, #122880	; 0x1e000
   11db8:	ldr	pc, [ip, #868]!	; 0x364

00011dbc <sigsuspend@plt>:
   11dbc:	add	ip, pc, #0, 12
   11dc0:	add	ip, ip, #122880	; 0x1e000
   11dc4:	ldr	pc, [ip, #860]!	; 0x35c

00011dc8 <wait3@plt>:
   11dc8:	add	ip, pc, #0, 12
   11dcc:	add	ip, ip, #122880	; 0x1e000
   11dd0:	ldr	pc, [ip, #852]!	; 0x354

00011dd4 <write@plt>:
   11dd4:	add	ip, pc, #0, 12
   11dd8:	add	ip, ip, #122880	; 0x1e000
   11ddc:	ldr	pc, [ip, #844]!	; 0x34c

00011de0 <memchr@plt>:
   11de0:	add	ip, pc, #0, 12
   11de4:	add	ip, ip, #122880	; 0x1e000
   11de8:	ldr	pc, [ip, #836]!	; 0x344

00011dec <fclose@plt>:
   11dec:	add	ip, pc, #0, 12
   11df0:	add	ip, ip, #122880	; 0x1e000
   11df4:	ldr	pc, [ip, #828]!	; 0x33c

00011df8 <sendto@plt>:
   11df8:	add	ip, pc, #0, 12
   11dfc:	add	ip, ip, #122880	; 0x1e000
   11e00:	ldr	pc, [ip, #820]!	; 0x334

00011e04 <__overflow@plt>:
   11e04:	add	ip, pc, #0, 12
   11e08:	add	ip, ip, #122880	; 0x1e000
   11e0c:	ldr	pc, [ip, #812]!	; 0x32c

00011e10 <sigemptyset@plt>:
   11e10:	add	ip, pc, #0, 12
   11e14:	add	ip, ip, #122880	; 0x1e000
   11e18:	ldr	pc, [ip, #804]!	; 0x324

00011e1c <fork@plt>:
   11e1c:	add	ip, pc, #0, 12
   11e20:	add	ip, ip, #122880	; 0x1e000
   11e24:	ldr	pc, [ip, #796]!	; 0x31c

00011e28 <getnameinfo@plt>:
   11e28:	add	ip, pc, #0, 12
   11e2c:	add	ip, ip, #122880	; 0x1e000
   11e30:	ldr	pc, [ip, #788]!	; 0x314

00011e34 <strrchr@plt>:
   11e34:	add	ip, pc, #0, 12
   11e38:	add	ip, ip, #122880	; 0x1e000
   11e3c:	ldr	pc, [ip, #780]!	; 0x30c

00011e40 <listen@plt>:
   11e40:	add	ip, pc, #0, 12
   11e44:	add	ip, ip, #122880	; 0x1e000
   11e48:	ldr	pc, [ip, #772]!	; 0x304

00011e4c <vfprintf@plt>:
   11e4c:	add	ip, pc, #0, 12
   11e50:	add	ip, ip, #122880	; 0x1e000
   11e54:	ldr	pc, [ip, #764]!	; 0x2fc

00011e58 <fputc@plt>:
   11e58:	add	ip, pc, #0, 12
   11e5c:	add	ip, ip, #122880	; 0x1e000
   11e60:	ldr	pc, [ip, #756]!	; 0x2f4

00011e64 <syslog@plt>:
   11e64:	add	ip, pc, #0, 12
   11e68:	add	ip, ip, #122880	; 0x1e000
   11e6c:	ldr	pc, [ip, #748]!	; 0x2ec

00011e70 <setuid@plt>:
   11e70:	add	ip, pc, #0, 12
   11e74:	add	ip, ip, #122880	; 0x1e000
   11e78:	ldr	pc, [ip, #740]!	; 0x2e4

00011e7c <sprintf@plt>:
   11e7c:	add	ip, pc, #0, 12
   11e80:	add	ip, ip, #122880	; 0x1e000
   11e84:	ldr	pc, [ip, #732]!	; 0x2dc

00011e88 <readdir64@plt>:
   11e88:	add	ip, pc, #0, 12
   11e8c:	add	ip, ip, #122880	; 0x1e000
   11e90:	ldr	pc, [ip, #724]!	; 0x2d4

00011e94 <openlog@plt>:
   11e94:	add	ip, pc, #0, 12
   11e98:	add	ip, ip, #122880	; 0x1e000
   11e9c:	ldr	pc, [ip, #716]!	; 0x2cc

00011ea0 <getsockname@plt>:
   11ea0:	add	ip, pc, #0, 12
   11ea4:	add	ip, ip, #122880	; 0x1e000
   11ea8:	ldr	pc, [ip, #708]!	; 0x2c4

00011eac <flockfile@plt>:
   11eac:	add	ip, pc, #0, 12
   11eb0:	add	ip, ip, #122880	; 0x1e000
   11eb4:	ldr	pc, [ip, #700]!	; 0x2bc

00011eb8 <vsnprintf@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #122880	; 0x1e000
   11ec0:	ldr	pc, [ip, #692]!	; 0x2b4

00011ec4 <fopen64@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #122880	; 0x1e000
   11ecc:	ldr	pc, [ip, #684]!	; 0x2ac

00011ed0 <qsort@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #122880	; 0x1e000
   11ed8:	ldr	pc, [ip, #676]!	; 0x2a4

00011edc <getpeername@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #122880	; 0x1e000
   11ee4:	ldr	pc, [ip, #668]!	; 0x29c

00011ee8 <freeaddrinfo@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #122880	; 0x1e000
   11ef0:	ldr	pc, [ip, #660]!	; 0x294

00011ef4 <getaddrinfo@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #122880	; 0x1e000
   11efc:	ldr	pc, [ip, #652]!	; 0x28c

00011f00 <socket@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #122880	; 0x1e000
   11f08:	ldr	pc, [ip, #644]!	; 0x284

00011f0c <__xstat64@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #122880	; 0x1e000
   11f14:	ldr	pc, [ip, #636]!	; 0x27c

00011f18 <unsetenv@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #122880	; 0x1e000
   11f20:	ldr	pc, [ip, #628]!	; 0x274

00011f24 <strncmp@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #122880	; 0x1e000
   11f2c:	ldr	pc, [ip, #620]!	; 0x26c

00011f30 <abort@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #122880	; 0x1e000
   11f38:	ldr	pc, [ip, #612]!	; 0x264

00011f3c <recv@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #122880	; 0x1e000
   11f44:	ldr	pc, [ip, #604]!	; 0x25c

00011f48 <close@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #122880	; 0x1e000
   11f50:	ldr	pc, [ip, #596]!	; 0x254

00011f54 <closedir@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #122880	; 0x1e000
   11f5c:	ldr	pc, [ip, #588]!	; 0x24c

00011f60 <getgrnam@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #122880	; 0x1e000
   11f68:	ldr	pc, [ip, #580]!	; 0x244

00011f6c <strspn@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #122880	; 0x1e000
   11f74:	ldr	pc, [ip, #572]!	; 0x23c

00011f78 <__assert_fail@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #122880	; 0x1e000
   11f80:	ldr	pc, [ip, #564]!	; 0x234

Disassembly of section .text:

00011f84 <daemon@@Base-0x4b04>:
   11f84:	mov	fp, #0
   11f88:	mov	lr, #0
   11f8c:	pop	{r1}		; (ldr r1, [sp], #4)
   11f90:	mov	r2, sp
   11f94:	push	{r2}		; (str r2, [sp, #-4]!)
   11f98:	push	{r0}		; (str r0, [sp, #-4]!)
   11f9c:	ldr	ip, [pc, #16]	; 11fb4 <__assert_fail@plt+0x3c>
   11fa0:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa4:	ldr	r0, [pc, #12]	; 11fb8 <__assert_fail@plt+0x40>
   11fa8:	ldr	r3, [pc, #12]	; 11fbc <__assert_fail@plt+0x44>
   11fac:	bl	11cc0 <__libc_start_main@plt>
   11fb0:	bl	11f30 <abort@plt>
   11fb4:	andeq	sp, r1, r8, asr #31
   11fb8:	andeq	r5, r1, r4, asr #17
   11fbc:	andeq	sp, r1, r8, ror #30
   11fc0:	ldr	r3, [pc, #20]	; 11fdc <__assert_fail@plt+0x64>
   11fc4:	ldr	r2, [pc, #20]	; 11fe0 <__assert_fail@plt+0x68>
   11fc8:	add	r3, pc, r3
   11fcc:	ldr	r2, [r3, r2]
   11fd0:	cmp	r2, #0
   11fd4:	bxeq	lr
   11fd8:	b	11ce4 <__gmon_start__@plt>
   11fdc:	andeq	lr, r1, r0, lsr r0
   11fe0:			; <UNDEFINED> instruction: 0x000001b8
   11fe4:	ldr	r0, [pc, #24]	; 12004 <__assert_fail@plt+0x8c>
   11fe8:	ldr	r3, [pc, #24]	; 12008 <__assert_fail@plt+0x90>
   11fec:	cmp	r3, r0
   11ff0:	bxeq	lr
   11ff4:	ldr	r3, [pc, #16]	; 1200c <__assert_fail@plt+0x94>
   11ff8:	cmp	r3, #0
   11ffc:	bxeq	lr
   12000:	bx	r3
   12004:	andeq	r0, r3, r8, lsr #7
   12008:	andeq	r0, r3, r8, lsr #7
   1200c:	andeq	r0, r0, r0
   12010:	ldr	r0, [pc, #36]	; 1203c <__assert_fail@plt+0xc4>
   12014:	ldr	r1, [pc, #36]	; 12040 <__assert_fail@plt+0xc8>
   12018:	sub	r1, r1, r0
   1201c:	asr	r1, r1, #2
   12020:	add	r1, r1, r1, lsr #31
   12024:	asrs	r1, r1, #1
   12028:	bxeq	lr
   1202c:	ldr	r3, [pc, #16]	; 12044 <__assert_fail@plt+0xcc>
   12030:	cmp	r3, #0
   12034:	bxeq	lr
   12038:	bx	r3
   1203c:	andeq	r0, r3, r8, lsr #7
   12040:	andeq	r0, r3, r8, lsr #7
   12044:	andeq	r0, r0, r0
   12048:	push	{r4, lr}
   1204c:	ldr	r4, [pc, #24]	; 1206c <__assert_fail@plt+0xf4>
   12050:	ldrb	r3, [r4]
   12054:	cmp	r3, #0
   12058:	popne	{r4, pc}
   1205c:	bl	11fe4 <__assert_fail@plt+0x6c>
   12060:	mov	r3, #1
   12064:	strb	r3, [r4]
   12068:	pop	{r4, pc}
   1206c:			; <UNDEFINED> instruction: 0x000303b8
   12070:	b	12010 <__assert_fail@plt+0x98>
   12074:	push	{r4, r5, fp, lr}
   12078:	add	fp, sp, #8
   1207c:	sub	sp, sp, #8
   12080:	sub	sp, sp, #8192	; 0x2000
   12084:	mov	r4, r0
   12088:	ldr	r0, [r1, #12]
   1208c:	mov	r1, r4
   12090:	bl	15340 <__assert_fail@plt+0x33c8>
   12094:	add	r5, sp, #4
   12098:	mov	r0, r4
   1209c:	mov	r1, r5
   120a0:	mov	r2, #8192	; 0x2000
   120a4:	bl	11af8 <read@plt>
   120a8:	cmp	r0, #1
   120ac:	blt	120c8 <__assert_fail@plt+0x150>
   120b0:	mov	r2, r0
   120b4:	mov	r0, r4
   120b8:	mov	r1, r5
   120bc:	bl	11dd4 <write@plt>
   120c0:	cmp	r0, #0
   120c4:	bgt	12098 <__assert_fail@plt+0x120>
   120c8:	mov	r0, #0
   120cc:	bl	11d08 <exit@plt>
   120d0:	push	{r4, r5, r6, sl, fp, lr}
   120d4:	add	fp, sp, #16
   120d8:	sub	sp, sp, #144	; 0x90
   120dc:	sub	sp, sp, #8192	; 0x2000
   120e0:	mov	r4, r0
   120e4:	add	r0, sp, #140	; 0x8c
   120e8:	mov	r5, #128	; 0x80
   120ec:	add	r6, sp, #12
   120f0:	add	r1, sp, #144	; 0x90
   120f4:	mov	r2, #8192	; 0x2000
   120f8:	mov	r3, #0
   120fc:	str	r0, [sp, #4]
   12100:	mov	r0, r4
   12104:	str	r5, [sp, #140]	; 0x8c
   12108:	str	r6, [sp]
   1210c:	bl	11bb8 <recvfrom@plt>
   12110:	cmp	r0, #0
   12114:	bmi	12134 <__assert_fail@plt+0x1bc>
   12118:	mov	r2, r0
   1211c:	add	r1, sp, #144	; 0x90
   12120:	mov	r0, r4
   12124:	mov	r3, #0
   12128:	str	r6, [sp]
   1212c:	str	r5, [sp, #4]
   12130:	bl	11df8 <sendto@plt>
   12134:	sub	sp, fp, #16
   12138:	pop	{r4, r5, r6, sl, fp, pc}
   1213c:	push	{r4, r5, fp, lr}
   12140:	add	fp, sp, #8
   12144:	sub	sp, sp, #8
   12148:	sub	sp, sp, #8192	; 0x2000
   1214c:	mov	r4, r0
   12150:	ldr	r0, [r1, #12]
   12154:	mov	r1, r4
   12158:	bl	15340 <__assert_fail@plt+0x33c8>
   1215c:	add	r5, sp, #4
   12160:	mov	r0, r4
   12164:	mov	r1, r5
   12168:	mov	r2, #8192	; 0x2000
   1216c:	bl	11af8 <read@plt>
   12170:	cmp	r0, #0
   12174:	bgt	12160 <__assert_fail@plt+0x1e8>
   12178:	beq	1218c <__assert_fail@plt+0x214>
   1217c:	bl	11d74 <__errno_location@plt>
   12180:	ldr	r0, [r0]
   12184:	cmp	r0, #4
   12188:	beq	12160 <__assert_fail@plt+0x1e8>
   1218c:	mov	r0, #0
   12190:	bl	11d08 <exit@plt>
   12194:	push	{r4, r5, fp, lr}
   12198:	add	fp, sp, #8
   1219c:	sub	sp, sp, #8192	; 0x2000
   121a0:	mov	r1, sp
   121a4:	mov	r2, #8192	; 0x2000
   121a8:	bl	11af8 <read@plt>
   121ac:	sub	sp, fp, #8
   121b0:	pop	{r4, r5, fp, pc}
   121b4:	push	{r4, r5, fp, lr}
   121b8:	add	fp, sp, #8
   121bc:	sub	sp, sp, #16
   121c0:	mov	r4, r0
   121c4:	add	r0, sp, #8
   121c8:	mov	r1, #0
   121cc:	mov	r5, #0
   121d0:	bl	11c60 <gettimeofday@plt>
   121d4:	cmn	r0, #1
   121d8:	ble	121f4 <__assert_fail@plt+0x27c>
   121dc:	ldr	r0, [sp, #8]
   121e0:	movw	r1, #32384	; 0x7e80
   121e4:	movt	r1, #33706	; 0x83aa
   121e8:	add	r0, r0, r1
   121ec:	rev	r5, r0
   121f0:	b	12208 <__assert_fail@plt+0x290>
   121f4:	movw	r0, #1188	; 0x4a4
   121f8:	movt	r0, #3
   121fc:	ldrb	r0, [r0]
   12200:	cmp	r0, #0
   12204:	bne	12224 <__assert_fail@plt+0x2ac>
   12208:	add	r1, sp, #4
   1220c:	mov	r0, r4
   12210:	mov	r2, #4
   12214:	str	r5, [sp, #4]
   12218:	bl	11dd4 <write@plt>
   1221c:	sub	sp, fp, #8
   12220:	pop	{r4, r5, fp, pc}
   12224:	movw	r0, #944	; 0x3b0
   12228:	mov	r1, #26
   1222c:	mov	r2, #1
   12230:	movt	r0, #3
   12234:	ldr	r3, [r0]
   12238:	movw	r0, #58819	; 0xe5c3
   1223c:	movt	r0, #1
   12240:	bl	11c48 <fwrite@plt>
   12244:	b	12208 <__assert_fail@plt+0x290>
   12248:	push	{r4, r5, r6, sl, fp, lr}
   1224c:	add	fp, sp, #16
   12250:	sub	sp, sp, #152	; 0x98
   12254:	mov	r4, r0
   12258:	mov	r0, #128	; 0x80
   1225c:	add	r5, sp, #12
   12260:	sub	r1, fp, #28
   12264:	mov	r2, #4
   12268:	mov	r3, #0
   1226c:	str	r0, [sp, #8]
   12270:	add	r0, sp, #8
   12274:	str	r5, [sp]
   12278:	str	r0, [sp, #4]
   1227c:	mov	r0, r4
   12280:	bl	11bb8 <recvfrom@plt>
   12284:	cmp	r0, #0
   12288:	bmi	122f4 <__assert_fail@plt+0x37c>
   1228c:	sub	r0, fp, #24
   12290:	mov	r1, #0
   12294:	mov	r6, #0
   12298:	bl	11c60 <gettimeofday@plt>
   1229c:	cmn	r0, #1
   122a0:	ble	122bc <__assert_fail@plt+0x344>
   122a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122a8:	movw	r1, #32384	; 0x7e80
   122ac:	movt	r1, #33706	; 0x83aa
   122b0:	add	r0, r0, r1
   122b4:	rev	r6, r0
   122b8:	b	122d0 <__assert_fail@plt+0x358>
   122bc:	movw	r0, #1188	; 0x4a4
   122c0:	movt	r0, #3
   122c4:	ldrb	r0, [r0]
   122c8:	cmp	r0, #0
   122cc:	bne	122fc <__assert_fail@plt+0x384>
   122d0:	mov	r0, #128	; 0x80
   122d4:	sub	r1, fp, #28
   122d8:	mov	r2, #4
   122dc:	mov	r3, #0
   122e0:	str	r6, [fp, #-28]	; 0xffffffe4
   122e4:	str	r5, [sp]
   122e8:	str	r0, [sp, #4]
   122ec:	mov	r0, r4
   122f0:	bl	11df8 <sendto@plt>
   122f4:	sub	sp, fp, #16
   122f8:	pop	{r4, r5, r6, sl, fp, pc}
   122fc:	movw	r0, #944	; 0x3b0
   12300:	mov	r1, #26
   12304:	mov	r2, #1
   12308:	movt	r0, #3
   1230c:	ldr	r3, [r0]
   12310:	movw	r0, #58819	; 0xe5c3
   12314:	movt	r0, #1
   12318:	bl	11c48 <fwrite@plt>
   1231c:	b	122d0 <__assert_fail@plt+0x358>
   12320:	push	{r4, r5, r6, r7, fp, lr}
   12324:	add	fp, sp, #16
   12328:	sub	sp, sp, #264	; 0x108
   1232c:	mov	r4, r0
   12330:	mov	r0, #0
   12334:	bl	11b7c <time@plt>
   12338:	str	r0, [sp, #4]
   1233c:	add	r0, sp, #4
   12340:	bl	11bac <ctime@plt>
   12344:	movw	r1, #58846	; 0xe5de
   12348:	add	r5, sp, #8
   1234c:	mov	r2, r0
   12350:	movt	r1, #1
   12354:	mov	r0, r5
   12358:	bl	11e7c <sprintf@plt>
   1235c:	mov	r0, r5
   12360:	bl	11d2c <strlen@plt>
   12364:	mov	r2, r0
   12368:	mov	r0, r4
   1236c:	mov	r1, r5
   12370:	bl	11dd4 <write@plt>
   12374:	sub	sp, fp, #16
   12378:	pop	{r4, r5, r6, r7, fp, pc}
   1237c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12380:	add	fp, sp, #24
   12384:	sub	sp, sp, #400	; 0x190
   12388:	mov	r4, r0
   1238c:	mov	r0, #0
   12390:	bl	11b7c <time@plt>
   12394:	str	r0, [sp, #140]	; 0x8c
   12398:	add	r0, sp, #8
   1239c:	mov	r6, #128	; 0x80
   123a0:	add	r7, sp, #12
   123a4:	add	r1, sp, #144	; 0x90
   123a8:	mov	r2, #256	; 0x100
   123ac:	mov	r3, #0
   123b0:	str	r0, [sp, #4]
   123b4:	mov	r0, r4
   123b8:	str	r6, [sp, #8]
   123bc:	str	r7, [sp]
   123c0:	bl	11bb8 <recvfrom@plt>
   123c4:	cmp	r0, #0
   123c8:	bmi	12410 <__assert_fail@plt+0x498>
   123cc:	add	r0, sp, #140	; 0x8c
   123d0:	bl	11bac <ctime@plt>
   123d4:	movw	r1, #58846	; 0xe5de
   123d8:	add	r5, sp, #144	; 0x90
   123dc:	mov	r2, r0
   123e0:	movt	r1, #1
   123e4:	mov	r0, r5
   123e8:	bl	11e7c <sprintf@plt>
   123ec:	mov	r0, r5
   123f0:	bl	11d2c <strlen@plt>
   123f4:	mov	r2, r0
   123f8:	mov	r0, r4
   123fc:	mov	r1, r5
   12400:	mov	r3, #0
   12404:	str	r7, [sp]
   12408:	str	r6, [sp, #4]
   1240c:	bl	11df8 <sendto@plt>
   12410:	sub	sp, fp, #24
   12414:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12418:	push	{fp, lr}
   1241c:	mov	fp, sp
   12420:	sub	sp, sp, #80	; 0x50
   12424:	mov	r8, r0
   12428:	ldr	r0, [r1, #12]
   1242c:	mov	r1, r8
   12430:	bl	15340 <__assert_fail@plt+0x33c8>
   12434:	movw	r9, #1516	; 0x5ec
   12438:	movt	r9, #3
   1243c:	ldr	r0, [r9]
   12440:	cmp	r0, #0
   12444:	bne	1249c <__assert_fail@plt+0x524>
   12448:	movw	r0, #1256	; 0x4e8
   1244c:	mov	r4, #0
   12450:	movt	r0, #3
   12454:	str	r0, [r9]
   12458:	bl	11cf0 <__ctype_b_loc@plt>
   1245c:	mov	r1, #0
   12460:	b	12474 <__assert_fail@plt+0x4fc>
   12464:	add	r1, r1, #1
   12468:	add	r4, r4, #2
   1246c:	cmp	r1, #129	; 0x81
   12470:	beq	1249c <__assert_fail@plt+0x524>
   12474:	ldr	r2, [r0]
   12478:	add	r2, r2, r4
   1247c:	ldrb	r2, [r2, #1]
   12480:	tst	r2, #64	; 0x40
   12484:	beq	12464 <__assert_fail@plt+0x4ec>
   12488:	ldr	r2, [r9]
   1248c:	add	r3, r2, #1
   12490:	str	r3, [r9]
   12494:	strb	r1, [r2]
   12498:	b	12464 <__assert_fail@plt+0x4ec>
   1249c:	movw	sl, #1256	; 0x4e8
   124a0:	movw	r0, #2573	; 0xa0d
   124a4:	mov	r6, sp
   124a8:	movt	sl, #3
   124ac:	strh	r0, [sp, #72]	; 0x48
   124b0:	mov	r7, sl
   124b4:	b	124f4 <__assert_fail@plt+0x57c>
   124b8:	mov	r2, r4
   124bc:	bl	11b1c <memmove@plt>
   124c0:	add	r0, r6, r4
   124c4:	rsb	r2, r4, #72	; 0x48
   124c8:	mov	r1, sl
   124cc:	bl	11b64 <memcpy@plt>
   124d0:	add	r7, r7, #1
   124d4:	mov	r0, r8
   124d8:	mov	r1, r6
   124dc:	mov	r2, #74	; 0x4a
   124e0:	cmp	r7, r5
   124e4:	moveq	r7, sl
   124e8:	bl	11dd4 <write@plt>
   124ec:	cmp	r0, #74	; 0x4a
   124f0:	bne	12518 <__assert_fail@plt+0x5a0>
   124f4:	ldr	r5, [r9]
   124f8:	mov	r0, r6
   124fc:	mov	r1, r7
   12500:	sub	r4, r5, r7
   12504:	cmp	r4, #72	; 0x48
   12508:	blt	124b8 <__assert_fail@plt+0x540>
   1250c:	mov	r2, #72	; 0x48
   12510:	bl	11b1c <memmove@plt>
   12514:	b	124d0 <__assert_fail@plt+0x558>
   12518:	mov	r0, #0
   1251c:	bl	11d08 <exit@plt>
   12520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12524:	add	fp, sp, #28
   12528:	sub	sp, sp, #220	; 0xdc
   1252c:	movw	r7, #1516	; 0x5ec
   12530:	mov	r8, r0
   12534:	movw	r4, #1256	; 0x4e8
   12538:	movw	r9, #1184	; 0x4a0
   1253c:	movt	r7, #3
   12540:	movt	r4, #3
   12544:	movt	r9, #3
   12548:	ldr	r0, [r7]
   1254c:	cmp	r0, #0
   12550:	bne	125a4 <__assert_fail@plt+0x62c>
   12554:	str	r4, [r7]
   12558:	mov	r5, #0
   1255c:	bl	11cf0 <__ctype_b_loc@plt>
   12560:	mov	r1, #0
   12564:	b	12578 <__assert_fail@plt+0x600>
   12568:	add	r1, r1, #1
   1256c:	add	r5, r5, #2
   12570:	cmp	r1, #129	; 0x81
   12574:	beq	125a0 <__assert_fail@plt+0x628>
   12578:	ldr	r2, [r0]
   1257c:	add	r2, r2, r5
   12580:	ldrb	r2, [r2, #1]
   12584:	tst	r2, #64	; 0x40
   12588:	beq	12568 <__assert_fail@plt+0x5f0>
   1258c:	ldr	r2, [r7]
   12590:	add	r3, r2, #1
   12594:	str	r3, [r7]
   12598:	strb	r1, [r2]
   1259c:	b	12568 <__assert_fail@plt+0x5f0>
   125a0:	str	r4, [r9]
   125a4:	mov	r0, #128	; 0x80
   125a8:	add	r6, sp, #8
   125ac:	add	sl, sp, #88	; 0x58
   125b0:	mov	r2, #74	; 0x4a
   125b4:	mov	r3, #0
   125b8:	str	r0, [sp, #84]	; 0x54
   125bc:	add	r0, sp, #84	; 0x54
   125c0:	mov	r1, r6
   125c4:	str	sl, [sp]
   125c8:	str	r0, [sp, #4]
   125cc:	mov	r0, r8
   125d0:	bl	11bb8 <recvfrom@plt>
   125d4:	cmp	r0, #0
   125d8:	bmi	12668 <__assert_fail@plt+0x6f0>
   125dc:	ldr	r5, [r9]
   125e0:	ldr	r9, [r7]
   125e4:	sub	r7, r9, r5
   125e8:	cmp	r7, #72	; 0x48
   125ec:	blt	12604 <__assert_fail@plt+0x68c>
   125f0:	add	r0, sp, #8
   125f4:	mov	r1, r5
   125f8:	mov	r2, #72	; 0x48
   125fc:	bl	11b1c <memmove@plt>
   12600:	b	12628 <__assert_fail@plt+0x6b0>
   12604:	mov	r0, r6
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	11b1c <memmove@plt>
   12614:	movw	r1, #1256	; 0x4e8
   12618:	add	r0, r6, r7
   1261c:	rsb	r2, r7, #72	; 0x48
   12620:	movt	r1, #3
   12624:	bl	11b64 <memcpy@plt>
   12628:	add	r0, r5, #1
   1262c:	add	r1, sp, #8
   12630:	mov	r2, #74	; 0x4a
   12634:	mov	r3, #0
   12638:	str	sl, [sp]
   1263c:	cmp	r0, r9
   12640:	movne	r4, r0
   12644:	movw	r0, #1184	; 0x4a0
   12648:	movt	r0, #3
   1264c:	str	r4, [r0]
   12650:	movw	r0, #2573	; 0xa0d
   12654:	strh	r0, [sp, #80]	; 0x50
   12658:	mov	r0, #128	; 0x80
   1265c:	str	r0, [sp, #4]
   12660:	mov	r0, r8
   12664:	bl	11df8 <sendto@plt>
   12668:	sub	sp, fp, #28
   1266c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12670:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12674:	add	fp, sp, #24
   12678:	sub	sp, sp, #264	; 0x108
   1267c:	mov	r4, r0
   12680:	mov	r6, #0
   12684:	add	r5, sp, #1
   12688:	movw	r8, #258	; 0x102
   1268c:	mov	r9, #1
   12690:	movw	r7, #9217	; 0x2401
   12694:	sub	r2, r8, r6
   12698:	mov	r0, r4
   1269c:	mov	r1, r5
   126a0:	bl	11af8 <read@plt>
   126a4:	cmp	r0, #0
   126a8:	beq	126f8 <__assert_fail@plt+0x780>
   126ac:	bmi	1287c <__assert_fail@plt+0x904>
   126b0:	add	r1, r0, r6
   126b4:	ldrb	r2, [r5]
   126b8:	cmp	r2, #13
   126bc:	bls	126dc <__assert_fail@plt+0x764>
   126c0:	subs	r0, r0, #1
   126c4:	add	r5, r5, #1
   126c8:	add	r6, r6, #1
   126cc:	beq	126e8 <__assert_fail@plt+0x770>
   126d0:	ldrb	r2, [r5]
   126d4:	cmp	r2, #13
   126d8:	bhi	126c0 <__assert_fail@plt+0x748>
   126dc:	tst	r7, r9, lsl r2
   126e0:	beq	126c0 <__assert_fail@plt+0x748>
   126e4:	b	126f8 <__assert_fail@plt+0x780>
   126e8:	cmp	r1, r8
   126ec:	mov	r6, r1
   126f0:	blt	12694 <__assert_fail@plt+0x71c>
   126f4:	b	12704 <__assert_fail@plt+0x78c>
   126f8:	mov	r1, r6
   126fc:	cmn	r6, #1
   12700:	ble	1287c <__assert_fail@plt+0x904>
   12704:	add	r0, sp, #1
   12708:	mov	r2, #0
   1270c:	strb	r2, [r0, r1]
   12710:	movw	r0, #1188	; 0x4a4
   12714:	movt	r0, #3
   12718:	ldrb	r0, [r0]
   1271c:	cmp	r0, #0
   12720:	bne	12840 <__assert_fail@plt+0x8c8>
   12724:	movw	r1, #58910	; 0xe61e
   12728:	add	r0, sp, #1
   1272c:	movt	r1, #1
   12730:	bl	11c18 <strcasecmp@plt>
   12734:	movw	r1, #1552	; 0x610
   12738:	cmp	r0, #0
   1273c:	movt	r1, #3
   12740:	ldr	r5, [r1]
   12744:	beq	127c4 <__assert_fail@plt+0x84c>
   12748:	cmp	r5, #0
   1274c:	beq	12860 <__assert_fail@plt+0x8e8>
   12750:	add	r6, sp, #1
   12754:	ldr	r7, [r5, #64]	; 0x40
   12758:	sub	r0, r7, #1
   1275c:	cmp	r0, #1
   12760:	bls	12780 <__assert_fail@plt+0x808>
   12764:	ldr	r5, [r5, #220]	; 0xdc
   12768:	cmp	r5, #0
   1276c:	beq	12860 <__assert_fail@plt+0x8e8>
   12770:	ldr	r7, [r5, #64]	; 0x40
   12774:	sub	r0, r7, #1
   12778:	cmp	r0, #1
   1277c:	bhi	12764 <__assert_fail@plt+0x7ec>
   12780:	ldr	r1, [r5, #12]
   12784:	mov	r0, r6
   12788:	bl	11c18 <strcasecmp@plt>
   1278c:	cmp	r0, #0
   12790:	bne	12764 <__assert_fail@plt+0x7ec>
   12794:	cmp	r7, #2
   12798:	bne	127b0 <__assert_fail@plt+0x838>
   1279c:	movw	r1, #58915	; 0xe623
   127a0:	mov	r0, r4
   127a4:	mov	r2, #5
   127a8:	movt	r1, #1
   127ac:	bl	11dd4 <write@plt>
   127b0:	mov	r0, r4
   127b4:	mov	r1, r5
   127b8:	bl	12a08 <__assert_fail@plt+0xa90>
   127bc:	sub	sp, fp, #24
   127c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   127c4:	cmp	r5, #0
   127c8:	beq	12838 <__assert_fail@plt+0x8c0>
   127cc:	movw	r6, #58943	; 0xe63f
   127d0:	movt	r6, #1
   127d4:	ldr	r0, [r5, #64]	; 0x40
   127d8:	sub	r0, r0, #1
   127dc:	cmp	r0, #1
   127e0:	bls	12800 <__assert_fail@plt+0x888>
   127e4:	ldr	r5, [r5, #220]	; 0xdc
   127e8:	cmp	r5, #0
   127ec:	beq	12838 <__assert_fail@plt+0x8c0>
   127f0:	ldr	r0, [r5, #64]	; 0x40
   127f4:	sub	r0, r0, #1
   127f8:	cmp	r0, #1
   127fc:	bhi	127e4 <__assert_fail@plt+0x86c>
   12800:	ldr	r7, [r5, #12]
   12804:	mov	r0, r7
   12808:	bl	11d2c <strlen@plt>
   1280c:	mov	r2, r0
   12810:	mov	r0, r4
   12814:	mov	r1, r7
   12818:	bl	11dd4 <write@plt>
   1281c:	mov	r0, r4
   12820:	mov	r1, r6
   12824:	mov	r2, #2
   12828:	bl	11dd4 <write@plt>
   1282c:	ldr	r5, [r5, #220]	; 0xdc
   12830:	cmp	r5, #0
   12834:	bne	127f0 <__assert_fail@plt+0x878>
   12838:	mov	r0, #1
   1283c:	bl	11b58 <_exit@plt>
   12840:	movw	r0, #944	; 0x3b0
   12844:	movw	r1, #58884	; 0xe604
   12848:	add	r2, sp, #1
   1284c:	movt	r0, #3
   12850:	movt	r1, #1
   12854:	ldr	r0, [r0]
   12858:	bl	11d5c <fprintf@plt>
   1285c:	b	12724 <__assert_fail@plt+0x7ac>
   12860:	movw	r1, #58921	; 0xe629
   12864:	mov	r0, r4
   12868:	mov	r2, #24
   1286c:	movt	r1, #1
   12870:	bl	11dd4 <write@plt>
   12874:	mov	r0, #1
   12878:	bl	11d08 <exit@plt>
   1287c:	movw	r1, #58854	; 0xe5e6
   12880:	mov	r0, r4
   12884:	mov	r2, #29
   12888:	movt	r1, #1
   1288c:	bl	11dd4 <write@plt>
   12890:	mov	r0, #1
   12894:	bl	11b58 <_exit@plt>
   12898:	push	{r4, r5, r6, r7, fp, lr}
   1289c:	add	fp, sp, #16
   128a0:	movw	r6, #456	; 0x1c8
   128a4:	mov	r5, r0
   128a8:	mov	r4, #0
   128ac:	movt	r6, #3
   128b0:	ldr	r0, [r6]
   128b4:	cmp	r0, #0
   128b8:	beq	128fc <__assert_fail@plt+0x984>
   128bc:	ldr	r7, [r5, #16]
   128c0:	ldr	r1, [r6, #4]
   128c4:	cmp	r1, r7
   128c8:	beq	128e4 <__assert_fail@plt+0x96c>
   128cc:	ldr	r0, [r6, #16]!
   128d0:	cmp	r0, #0
   128d4:	beq	128fc <__assert_fail@plt+0x984>
   128d8:	ldr	r1, [r6, #4]
   128dc:	cmp	r1, r7
   128e0:	bne	128cc <__assert_fail@plt+0x954>
   128e4:	ldr	r1, [r5, #12]
   128e8:	bl	11ab0 <strcmp@plt>
   128ec:	cmp	r0, #0
   128f0:	bne	128cc <__assert_fail@plt+0x954>
   128f4:	mov	r0, r6
   128f8:	pop	{r4, r5, r6, r7, fp, pc}
   128fc:	mov	r0, r4
   12900:	pop	{r4, r5, r6, r7, fp, pc}
   12904:	push	{r4, r5, r6, r7, fp, lr}
   12908:	add	fp, sp, #16
   1290c:	sub	sp, sp, #144	; 0x90
   12910:	mov	r6, sp
   12914:	mov	r4, r1
   12918:	mov	r5, r0
   1291c:	mov	r1, #0
   12920:	mov	r2, #140	; 0x8c
   12924:	mov	r0, r6
   12928:	bl	11da4 <memset@plt>
   1292c:	orr	r7, r6, #4
   12930:	mov	r0, r7
   12934:	bl	11e10 <sigemptyset@plt>
   12938:	mov	r0, r7
   1293c:	mov	r1, r5
   12940:	bl	11cb4 <sigaddset@plt>
   12944:	mov	r0, #268435456	; 0x10000000
   12948:	mov	r1, r6
   1294c:	mov	r2, #0
   12950:	str	r0, [sp, #132]	; 0x84
   12954:	mov	r0, r5
   12958:	str	r4, [sp]
   1295c:	bl	11c3c <sigaction@plt>
   12960:	sub	sp, fp, #16
   12964:	pop	{r4, r5, r6, r7, fp, pc}
   12968:	push	{r4, r5, fp, lr}
   1296c:	add	fp, sp, #8
   12970:	sub	sp, sp, #128	; 0x80
   12974:	mov	r5, sp
   12978:	mov	r4, r0
   1297c:	mov	r0, r5
   12980:	bl	11e10 <sigemptyset@plt>
   12984:	mov	r0, r5
   12988:	mov	r1, #17
   1298c:	bl	11cb4 <sigaddset@plt>
   12990:	mov	r0, r5
   12994:	mov	r1, #1
   12998:	bl	11cb4 <sigaddset@plt>
   1299c:	mov	r0, r5
   129a0:	mov	r1, #14
   129a4:	bl	11cb4 <sigaddset@plt>
   129a8:	mov	r0, #0
   129ac:	mov	r1, r5
   129b0:	mov	r2, r4
   129b4:	bl	11b10 <sigprocmask@plt>
   129b8:	sub	sp, fp, #8
   129bc:	pop	{r4, r5, fp, pc}
   129c0:	cmp	r0, #0
   129c4:	beq	129d8 <__assert_fail@plt+0xa60>
   129c8:	mov	r1, r0
   129cc:	mov	r0, #2
   129d0:	mov	r2, #0
   129d4:	b	11b10 <sigprocmask@plt>
   129d8:	push	{r4, sl, fp, lr}
   129dc:	add	fp, sp, #8
   129e0:	sub	sp, sp, #128	; 0x80
   129e4:	mov	r4, sp
   129e8:	mov	r0, r4
   129ec:	bl	11e10 <sigemptyset@plt>
   129f0:	mov	r0, #2
   129f4:	mov	r1, r4
   129f8:	mov	r2, #0
   129fc:	bl	11b10 <sigprocmask@plt>
   12a00:	sub	sp, fp, #8
   12a04:	pop	{r4, sl, fp, pc}
   12a08:	push	{r4, r5, r6, sl, fp, lr}
   12a0c:	add	fp, sp, #16
   12a10:	sub	sp, sp, #56	; 0x38
   12a14:	mov	r5, r0
   12a18:	ldr	r0, [r1, #44]	; 0x2c
   12a1c:	mov	r4, r1
   12a20:	cmp	r0, #0
   12a24:	beq	12a40 <__assert_fail@plt+0xac8>
   12a28:	ldr	r2, [r0, #12]
   12a2c:	mov	r0, r5
   12a30:	mov	r1, r4
   12a34:	sub	sp, fp, #16
   12a38:	pop	{r4, r5, r6, sl, fp, lr}
   12a3c:	bx	r2
   12a40:	movw	r0, #1188	; 0x4a4
   12a44:	movt	r0, #3
   12a48:	ldrb	r0, [r0]
   12a4c:	cmp	r0, #0
   12a50:	beq	12a7c <__assert_fail@plt+0xb04>
   12a54:	movw	r0, #944	; 0x3b0
   12a58:	movt	r0, #3
   12a5c:	ldr	r6, [r0]
   12a60:	bl	11cfc <getpid@plt>
   12a64:	ldr	r3, [r4, #48]	; 0x30
   12a68:	movw	r1, #57521	; 0xe0b1
   12a6c:	mov	r2, r0
   12a70:	mov	r0, r6
   12a74:	movt	r1, #1
   12a78:	bl	11d5c <fprintf@plt>
   12a7c:	mov	r0, r5
   12a80:	mov	r1, #0
   12a84:	mov	r6, #0
   12a88:	bl	11be8 <dup2@plt>
   12a8c:	mov	r0, r5
   12a90:	bl	11f48 <close@plt>
   12a94:	mov	r0, #0
   12a98:	mov	r1, #1
   12a9c:	bl	11be8 <dup2@plt>
   12aa0:	mov	r0, #0
   12aa4:	mov	r1, #2
   12aa8:	bl	11be8 <dup2@plt>
   12aac:	ldr	r0, [r4, #36]	; 0x24
   12ab0:	bl	11aa4 <getpwnam@plt>
   12ab4:	cmp	r0, #0
   12ab8:	bne	12b04 <__assert_fail@plt+0xb8c>
   12abc:	ldr	r2, [r4, #12]
   12ac0:	ldr	r3, [r4, #20]
   12ac4:	ldr	r0, [r4, #36]	; 0x24
   12ac8:	movw	r1, #57534	; 0xe0be
   12acc:	movt	r1, #1
   12ad0:	str	r0, [sp]
   12ad4:	mov	r0, #3
   12ad8:	bl	11e64 <syslog@plt>
   12adc:	ldr	r0, [r4, #16]
   12ae0:	cmp	r0, #1
   12ae4:	beq	12afc <__assert_fail@plt+0xb84>
   12ae8:	add	r1, sp, #6
   12aec:	mov	r0, #0
   12af0:	mov	r2, #50	; 0x32
   12af4:	mov	r3, #0
   12af8:	bl	11f3c <recv@plt>
   12afc:	mov	r0, #1
   12b00:	bl	11b58 <_exit@plt>
   12b04:	mov	r5, r0
   12b08:	ldr	r0, [r4, #40]	; 0x28
   12b0c:	cmp	r0, #0
   12b10:	beq	12b48 <__assert_fail@plt+0xbd0>
   12b14:	ldrb	r1, [r0]
   12b18:	cmp	r1, #0
   12b1c:	beq	12b48 <__assert_fail@plt+0xbd0>
   12b20:	bl	11f60 <getgrnam@plt>
   12b24:	mov	r6, r0
   12b28:	cmp	r0, #0
   12b2c:	bne	12b48 <__assert_fail@plt+0xbd0>
   12b30:	ldr	r0, [r4, #40]	; 0x28
   12b34:	ldr	r2, [r4, #12]
   12b38:	ldr	r3, [r4, #20]
   12b3c:	movw	r1, #57558	; 0xe0d6
   12b40:	movt	r1, #1
   12b44:	b	12ad0 <__assert_fail@plt+0xb58>
   12b48:	ldr	r0, [r5, #8]
   12b4c:	cmp	r0, #0
   12b50:	bne	12b9c <__assert_fail@plt+0xc24>
   12b54:	ldr	r0, [r4, #48]	; 0x30
   12b58:	ldr	r1, [r4, #52]	; 0x34
   12b5c:	bl	11d68 <execv@plt>
   12b60:	ldr	r0, [r4, #16]
   12b64:	cmp	r0, #1
   12b68:	beq	12b80 <__assert_fail@plt+0xc08>
   12b6c:	add	r1, sp, #6
   12b70:	mov	r0, #0
   12b74:	mov	r2, #50	; 0x32
   12b78:	mov	r3, #0
   12b7c:	bl	11f3c <recv@plt>
   12b80:	ldr	r2, [r4, #48]	; 0x30
   12b84:	movw	r1, #57633	; 0xe121
   12b88:	mov	r0, #3
   12b8c:	movt	r1, #1
   12b90:	bl	11e64 <syslog@plt>
   12b94:	mov	r0, #1
   12b98:	bl	11b58 <_exit@plt>
   12b9c:	cmp	r6, #0
   12ba0:	beq	12bb0 <__assert_fail@plt+0xc38>
   12ba4:	ldr	r0, [r6, #8]
   12ba8:	cmp	r0, #0
   12bac:	bne	12bdc <__assert_fail@plt+0xc64>
   12bb0:	ldr	r0, [r5, #12]
   12bb4:	bl	11c9c <setgid@plt>
   12bb8:	cmn	r0, #1
   12bbc:	bgt	12bc8 <__assert_fail@plt+0xc50>
   12bc0:	ldr	r3, [r5, #12]
   12bc4:	b	12bec <__assert_fail@plt+0xc74>
   12bc8:	ldr	r0, [r5]
   12bcc:	cmp	r6, #0
   12bd0:	bne	12c0c <__assert_fail@plt+0xc94>
   12bd4:	ldr	r1, [r5, #12]
   12bd8:	b	12c18 <__assert_fail@plt+0xca0>
   12bdc:	bl	11c9c <setgid@plt>
   12be0:	cmp	r0, #0
   12be4:	bpl	12c08 <__assert_fail@plt+0xc90>
   12be8:	ldr	r3, [r6, #8]
   12bec:	ldr	r2, [r4, #12]
   12bf0:	movw	r1, #57583	; 0xe0ef
   12bf4:	movt	r1, #1
   12bf8:	mov	r0, #3
   12bfc:	bl	11e64 <syslog@plt>
   12c00:	mov	r0, #1
   12c04:	bl	11b58 <_exit@plt>
   12c08:	ldr	r0, [r5]
   12c0c:	ldr	r1, [r6, #8]
   12c10:	cmp	r1, #0
   12c14:	ldreq	r1, [r5, #12]
   12c18:	bl	11c00 <initgroups@plt>
   12c1c:	ldr	r0, [r5, #8]
   12c20:	bl	11e70 <setuid@plt>
   12c24:	cmn	r0, #1
   12c28:	bgt	12b54 <__assert_fail@plt+0xbdc>
   12c2c:	ldr	r3, [r5, #8]
   12c30:	ldr	r2, [r4, #12]
   12c34:	movw	r1, #57608	; 0xe108
   12c38:	movt	r1, #1
   12c3c:	mov	r0, #3
   12c40:	bl	11e64 <syslog@plt>
   12c44:	mov	r0, #1
   12c48:	bl	11b58 <_exit@plt>
   12c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c50:	add	fp, sp, #28
   12c54:	sub	sp, sp, #4
   12c58:	mov	r0, sp
   12c5c:	mov	r1, #1
   12c60:	mov	r2, #0
   12c64:	mov	r6, #1
   12c68:	bl	11dc8 <wait3@plt>
   12c6c:	cmp	r0, #1
   12c70:	blt	12da4 <__assert_fail@plt+0xe2c>
   12c74:	movw	r4, #1188	; 0x4a4
   12c78:	movw	r9, #1388	; 0x56c
   12c7c:	movw	r8, #1520	; 0x5f0
   12c80:	movw	r7, #57678	; 0xe14e
   12c84:	mov	r5, r0
   12c88:	movt	r4, #3
   12c8c:	movt	r9, #3
   12c90:	movt	r8, #3
   12c94:	movt	r7, #1
   12c98:	ldrb	r0, [r4]
   12c9c:	cmp	r0, #0
   12ca0:	beq	12cd0 <__assert_fail@plt+0xd58>
   12ca4:	b	12d80 <__assert_fail@plt+0xe08>
   12ca8:	mov	r0, sp
   12cac:	mov	r1, #1
   12cb0:	mov	r2, #0
   12cb4:	bl	11dc8 <wait3@plt>
   12cb8:	mov	r5, r0
   12cbc:	cmp	r0, #1
   12cc0:	blt	12da4 <__assert_fail@plt+0xe2c>
   12cc4:	ldrb	r0, [r4]
   12cc8:	cmp	r0, #0
   12ccc:	bne	12d80 <__assert_fail@plt+0xe08>
   12cd0:	movw	r0, #1552	; 0x610
   12cd4:	movt	r0, #3
   12cd8:	ldr	sl, [r0]
   12cdc:	cmp	sl, #0
   12ce0:	bne	12d30 <__assert_fail@plt+0xdb8>
   12ce4:	b	12ca8 <__assert_fail@plt+0xd30>
   12ce8:	ldrb	r0, [r4]
   12cec:	cmp	r0, #0
   12cf0:	bne	12d5c <__assert_fail@plt+0xde4>
   12cf4:	ldr	r0, [sl, #60]	; 0x3c
   12cf8:	asr	r1, r0, #31
   12cfc:	add	r1, r0, r1, lsr #27
   12d00:	and	r0, r0, #31
   12d04:	asr	r1, r1, #5
   12d08:	ldr	r2, [r9, r1, lsl #2]
   12d0c:	orr	r0, r2, r6, lsl r0
   12d10:	str	r0, [r9, r1, lsl #2]
   12d14:	ldr	r0, [r8]
   12d18:	add	r0, r0, #1
   12d1c:	str	r0, [r8]
   12d20:	str	r6, [sl, #24]
   12d24:	ldr	sl, [sl, #220]	; 0xdc
   12d28:	cmp	sl, #0
   12d2c:	beq	12ca8 <__assert_fail@plt+0xd30>
   12d30:	ldr	r0, [sl, #24]
   12d34:	cmp	r0, r5
   12d38:	bne	12d24 <__assert_fail@plt+0xdac>
   12d3c:	ldr	r3, [sp]
   12d40:	cmp	r3, #0
   12d44:	beq	12ce8 <__assert_fail@plt+0xd70>
   12d48:	ldr	r2, [sl, #48]	; 0x30
   12d4c:	mov	r0, #4
   12d50:	mov	r1, r7
   12d54:	bl	11e64 <syslog@plt>
   12d58:	b	12ce8 <__assert_fail@plt+0xd70>
   12d5c:	movw	r0, #944	; 0x3b0
   12d60:	ldr	r2, [sl, #12]
   12d64:	ldr	r3, [sl, #60]	; 0x3c
   12d68:	movw	r1, #57699	; 0xe163
   12d6c:	movt	r0, #3
   12d70:	movt	r1, #1
   12d74:	ldr	r0, [r0]
   12d78:	bl	11d5c <fprintf@plt>
   12d7c:	b	12cf4 <__assert_fail@plt+0xd7c>
   12d80:	movw	r0, #944	; 0x3b0
   12d84:	ldr	r3, [sp]
   12d88:	movw	r1, #57655	; 0xe137
   12d8c:	mov	r2, r5
   12d90:	movt	r0, #3
   12d94:	movt	r1, #1
   12d98:	ldr	r0, [r0]
   12d9c:	bl	11d5c <fprintf@plt>
   12da0:	b	12cd0 <__assert_fail@plt+0xd58>
   12da4:	sub	sp, fp, #28
   12da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dac:	push	{fp, lr}
   12db0:	mov	fp, sp
   12db4:	movw	r1, #58945	; 0xe641
   12db8:	cmp	r0, #0
   12dbc:	movt	r1, #1
   12dc0:	moveq	r0, r1
   12dc4:	bl	11bc4 <strdup@plt>
   12dc8:	cmp	r0, #0
   12dcc:	popne	{fp, pc}
   12dd0:	movw	r1, #57719	; 0xe177
   12dd4:	mov	r0, #3
   12dd8:	movt	r1, #1
   12ddc:	bl	11e64 <syslog@plt>
   12de0:	mvn	r0, #0
   12de4:	bl	11d08 <exit@plt>
   12de8:	push	{r4, r5, r6, sl, fp, lr}
   12dec:	add	fp, sp, #16
   12df0:	mov	r4, r0
   12df4:	mov	r0, r1
   12df8:	mov	r5, r1
   12dfc:	bl	18608 <argp_parse@@Base+0x1b64>
   12e00:	cmp	r0, #0
   12e04:	beq	12e20 <__assert_fail@plt+0xea8>
   12e08:	ldr	r1, [r4]
   12e0c:	mov	r2, r5
   12e10:	mov	r6, r0
   12e14:	bl	11b64 <memcpy@plt>
   12e18:	str	r6, [r4]
   12e1c:	pop	{r4, r5, r6, sl, fp, pc}
   12e20:	movw	r1, #57730	; 0xe182
   12e24:	mov	r0, #3
   12e28:	movt	r1, #1
   12e2c:	bl	11e64 <syslog@plt>
   12e30:	mvn	r0, #0
   12e34:	bl	11d08 <exit@plt>
   12e38:	push	{r4, r5, r6, sl, fp, lr}
   12e3c:	add	fp, sp, #16
   12e40:	mov	r4, r0
   12e44:	ldr	r0, [r0]
   12e48:	cmp	r0, #0
   12e4c:	beq	12e7c <__assert_fail@plt+0xf04>
   12e50:	bl	11d2c <strlen@plt>
   12e54:	add	r5, r0, #1
   12e58:	mov	r0, r5
   12e5c:	bl	18608 <argp_parse@@Base+0x1b64>
   12e60:	cmp	r0, #0
   12e64:	beq	12e80 <__assert_fail@plt+0xf08>
   12e68:	ldr	r1, [r4]
   12e6c:	mov	r2, r5
   12e70:	mov	r6, r0
   12e74:	bl	11b64 <memcpy@plt>
   12e78:	str	r6, [r4]
   12e7c:	pop	{r4, r5, r6, sl, fp, pc}
   12e80:	movw	r1, #57730	; 0xe182
   12e84:	mov	r0, #3
   12e88:	movt	r1, #1
   12e8c:	bl	11e64 <syslog@plt>
   12e90:	mvn	r0, #0
   12e94:	bl	11d08 <exit@plt>
   12e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e9c:	add	fp, sp, #28
   12ea0:	sub	sp, sp, #44	; 0x2c
   12ea4:	mov	ip, r0
   12ea8:	movw	r0, #944	; 0x3b0
   12eac:	ldr	r4, [r1, #64]	; 0x40
   12eb0:	ldm	r1, {r2, r3}
   12eb4:	movt	r0, #3
   12eb8:	ldr	r0, [r0]
   12ebc:	sub	r7, r4, #1
   12ec0:	cmp	r7, #1
   12ec4:	bhi	12ee4 <__assert_fail@plt+0xf6c>
   12ec8:	movw	r5, #57824	; 0xe1e0
   12ecc:	movw	lr, #58662	; 0xe526
   12ed0:	cmp	r4, #2
   12ed4:	movt	r5, #1
   12ed8:	movt	lr, #1
   12edc:	moveq	lr, r5
   12ee0:	b	12ef8 <__assert_fail@plt+0xf80>
   12ee4:	ldr	r4, [r1, #8]
   12ee8:	movw	lr, #57835	; 0xe1eb
   12eec:	movt	lr, #1
   12ef0:	cmp	r4, #0
   12ef4:	movne	lr, r4
   12ef8:	ldr	r4, [r1, #44]	; 0x2c
   12efc:	ldr	r8, [r1, #36]	; 0x24
   12f00:	ldr	r9, [r1, #40]	; 0x28
   12f04:	ldr	r6, [r1, #12]
   12f08:	ldr	r7, [r1, #20]
   12f0c:	ldr	sl, [r1, #24]
   12f10:	ldr	r5, [r1, #28]
   12f14:	cmp	r4, #0
   12f18:	beq	12f24 <__assert_fail@plt+0xfac>
   12f1c:	ldr	r4, [r4]
   12f20:	b	12f2c <__assert_fail@plt+0xfb4>
   12f24:	movw	r4, #57837	; 0xe1ed
   12f28:	movt	r4, #1
   12f2c:	ldr	r1, [r1, #48]	; 0x30
   12f30:	str	r4, [sp, #32]
   12f34:	str	r1, [sp, #36]	; 0x24
   12f38:	add	r1, sp, #8
   12f3c:	stm	sp, {ip, lr}
   12f40:	stm	r1, {r6, r7, sl}
   12f44:	add	r1, sp, #20
   12f48:	stm	r1, {r5, r8, r9}
   12f4c:	movw	r1, #57741	; 0xe18d
   12f50:	movt	r1, #1
   12f54:	bl	11d5c <fprintf@plt>
   12f58:	sub	sp, fp, #28
   12f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f64:	add	fp, sp, #28
   12f68:	sub	sp, sp, #20
   12f6c:	movw	r7, #57915	; 0xe23b
   12f70:	mov	r4, r0
   12f74:	mov	r0, #1
   12f78:	mov	r8, #2
   12f7c:	mov	sl, #4
   12f80:	add	r9, sp, #12
   12f84:	add	r6, sp, #16
   12f88:	movt	r7, #1
   12f8c:	add	r5, r4, #72	; 0x48
   12f90:	str	r0, [sp, #16]
   12f94:	b	12fdc <__assert_fail@plt+0x1064>
   12f98:	ldrb	r1, [r4, #70]	; 0x46
   12f9c:	cmp	r1, #0
   12fa0:	beq	13110 <__assert_fail@plt+0x1198>
   12fa4:	strh	r8, [r4, #68]	; 0x44
   12fa8:	ldr	r0, [r4, #60]	; 0x3c
   12fac:	bl	11f48 <close@plt>
   12fb0:	b	12fdc <__assert_fail@plt+0x1064>
   12fb4:	bl	11d74 <__errno_location@plt>
   12fb8:	ldr	r0, [r0]
   12fbc:	cmp	r0, #97	; 0x61
   12fc0:	ldrheq	r1, [r4, #68]	; 0x44
   12fc4:	cmpeq	r1, #10
   12fc8:	bne	13150 <__assert_fail@plt+0x11d8>
   12fcc:	ldrb	r1, [r4, #70]	; 0x46
   12fd0:	cmp	r1, #0
   12fd4:	beq	13150 <__assert_fail@plt+0x11d8>
   12fd8:	strh	r8, [r4, #68]	; 0x44
   12fdc:	ldr	r1, [r4, #16]
   12fe0:	ldrh	r0, [r4, #68]	; 0x44
   12fe4:	mov	r2, #0
   12fe8:	bl	11f00 <socket@plt>
   12fec:	cmn	r0, #1
   12ff0:	str	r0, [r4, #60]	; 0x3c
   12ff4:	ble	12fb4 <__assert_fail@plt+0x103c>
   12ff8:	ldrh	r1, [r4, #68]	; 0x44
   12ffc:	cmp	r1, #10
   13000:	bne	13040 <__assert_fail@plt+0x10c8>
   13004:	ldrb	r1, [r4, #70]	; 0x46
   13008:	mov	r2, #26
   1300c:	mov	r3, r9
   13010:	str	sl, [sp]
   13014:	clz	r1, r1
   13018:	lsr	r1, r1, #5
   1301c:	str	r1, [sp, #12]
   13020:	mov	r1, #41	; 0x29
   13024:	bl	11ac8 <setsockopt@plt>
   13028:	cmn	r0, #1
   1302c:	bgt	13040 <__assert_fail@plt+0x10c8>
   13030:	movw	r1, #57886	; 0xe21e
   13034:	mov	r0, #3
   13038:	movt	r1, #1
   1303c:	bl	11e64 <syslog@plt>
   13040:	ldr	r0, [r4, #20]
   13044:	mov	r1, r7
   13048:	mov	r2, #3
   1304c:	bl	11f24 <strncmp@plt>
   13050:	cmp	r0, #0
   13054:	bne	130ac <__assert_fail@plt+0x1134>
   13058:	movw	r0, #1524	; 0x5f4
   1305c:	movt	r0, #3
   13060:	ldrb	r0, [r0]
   13064:	tst	r0, #1
   13068:	beq	130ac <__assert_fail@plt+0x1134>
   1306c:	ldr	r0, [r4, #60]	; 0x3c
   13070:	mov	r1, #1
   13074:	mov	r2, #1
   13078:	mov	r3, r6
   1307c:	str	sl, [sp]
   13080:	bl	11ac8 <setsockopt@plt>
   13084:	cmn	r0, #1
   13088:	bgt	130ac <__assert_fail@plt+0x1134>
   1308c:	bl	11d74 <__errno_location@plt>
   13090:	ldr	r0, [r0]
   13094:	cmp	r0, #13
   13098:	beq	130ac <__assert_fail@plt+0x1134>
   1309c:	movw	r1, #57919	; 0xe23f
   130a0:	mov	r0, #3
   130a4:	movt	r1, #1
   130a8:	bl	11e64 <syslog@plt>
   130ac:	ldr	r0, [r4, #60]	; 0x3c
   130b0:	mov	r1, #1
   130b4:	mov	r2, #2
   130b8:	mov	r3, r6
   130bc:	str	sl, [sp]
   130c0:	bl	11ac8 <setsockopt@plt>
   130c4:	cmn	r0, #1
   130c8:	bgt	130dc <__assert_fail@plt+0x1164>
   130cc:	movw	r1, #57945	; 0xe259
   130d0:	mov	r0, #3
   130d4:	movt	r1, #1
   130d8:	bl	11e64 <syslog@plt>
   130dc:	ldr	r0, [r4, #60]	; 0x3c
   130e0:	ldr	r2, [r4, #200]	; 0xc8
   130e4:	mov	r1, r5
   130e8:	bl	11d98 <bind@plt>
   130ec:	cmn	r0, #1
   130f0:	bgt	131fc <__assert_fail@plt+0x1284>
   130f4:	bl	11d74 <__errno_location@plt>
   130f8:	ldr	r0, [r0]
   130fc:	orr	r1, r0, #2
   13100:	cmp	r1, #99	; 0x63
   13104:	ldrheq	r1, [r4, #68]	; 0x44
   13108:	cmpeq	r1, #10
   1310c:	beq	12f98 <__assert_fail@plt+0x1020>
   13110:	movw	r1, #1188	; 0x4a4
   13114:	ldr	r5, [r4, #8]
   13118:	movt	r1, #3
   1311c:	ldrb	r1, [r1]
   13120:	cmp	r5, #0
   13124:	beq	1318c <__assert_fail@plt+0x1214>
   13128:	cmp	r1, #0
   1312c:	bne	1320c <__assert_fail@plt+0x1294>
   13130:	ldr	r0, [r4, #20]
   13134:	ldr	r3, [r4, #12]
   13138:	movw	r1, #58005	; 0xe295
   1313c:	mov	r2, r5
   13140:	movt	r1, #1
   13144:	str	r0, [sp]
   13148:	mov	r0, #3
   1314c:	b	131a8 <__assert_fail@plt+0x1230>
   13150:	movw	r1, #1188	; 0x4a4
   13154:	movt	r1, #3
   13158:	ldrb	r1, [r1]
   1315c:	cmp	r1, #0
   13160:	bne	1324c <__assert_fail@plt+0x12d4>
   13164:	ldr	r2, [r4, #12]
   13168:	ldr	r3, [r4, #20]
   1316c:	movw	r1, #57868	; 0xe20c
   13170:	mov	r0, #3
   13174:	movt	r1, #1
   13178:	bl	11e64 <syslog@plt>
   1317c:	mov	r4, #1
   13180:	mov	r0, r4
   13184:	sub	sp, fp, #28
   13188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1318c:	cmp	r1, #0
   13190:	bne	13284 <__assert_fail@plt+0x130c>
   13194:	ldr	r2, [r4, #12]
   13198:	ldr	r3, [r4, #20]
   1319c:	movw	r1, #58008	; 0xe298
   131a0:	mov	r0, #3
   131a4:	movt	r1, #1
   131a8:	bl	11e64 <syslog@plt>
   131ac:	ldr	r0, [r4, #60]	; 0x3c
   131b0:	bl	11f48 <close@plt>
   131b4:	mvn	r0, #0
   131b8:	str	r0, [r4, #60]	; 0x3c
   131bc:	movw	r0, #1540	; 0x604
   131c0:	mov	r4, #1
   131c4:	movt	r0, #3
   131c8:	ldr	r1, [r0]
   131cc:	cmp	r1, #0
   131d0:	beq	131e0 <__assert_fail@plt+0x1268>
   131d4:	mov	r0, r4
   131d8:	sub	sp, fp, #28
   131dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e0:	mov	r4, #1
   131e4:	str	r4, [r0]
   131e8:	mov	r0, #600	; 0x258
   131ec:	bl	11bd0 <alarm@plt>
   131f0:	mov	r0, r4
   131f4:	sub	sp, fp, #28
   131f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131fc:	mov	r4, #0
   13200:	mov	r0, r4
   13204:	sub	sp, fp, #28
   13208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1320c:	movw	r1, #944	; 0x3b0
   13210:	ldr	r8, [r4, #12]
   13214:	ldr	r7, [r4, #20]
   13218:	movt	r1, #3
   1321c:	ldr	r6, [r1]
   13220:	bl	11ccc <strerror@plt>
   13224:	movw	r1, #57975	; 0xe277
   13228:	str	r0, [sp, #4]
   1322c:	mov	r0, r6
   13230:	mov	r2, r5
   13234:	mov	r3, r8
   13238:	str	r7, [sp]
   1323c:	movt	r1, #1
   13240:	bl	11d5c <fprintf@plt>
   13244:	ldr	r5, [r4, #8]
   13248:	b	13130 <__assert_fail@plt+0x11b8>
   1324c:	movw	r1, #944	; 0x3b0
   13250:	ldr	r5, [r4, #12]
   13254:	ldr	r6, [r4, #20]
   13258:	movt	r1, #3
   1325c:	ldr	r7, [r1]
   13260:	bl	11ccc <strerror@plt>
   13264:	movw	r1, #57840	; 0xe1f0
   13268:	str	r0, [sp]
   1326c:	mov	r0, r7
   13270:	mov	r2, r5
   13274:	mov	r3, r6
   13278:	movt	r1, #1
   1327c:	bl	11d5c <fprintf@plt>
   13280:	b	13164 <__assert_fail@plt+0x11ec>
   13284:	movw	r1, #944	; 0x3b0
   13288:	ldr	r5, [r4, #12]
   1328c:	ldr	r6, [r4, #20]
   13290:	movt	r1, #3
   13294:	ldr	r7, [r1]
   13298:	bl	11ccc <strerror@plt>
   1329c:	movw	r1, #58024	; 0xe2a8
   132a0:	str	r0, [sp]
   132a4:	mov	r0, r7
   132a8:	mov	r2, r5
   132ac:	mov	r3, r6
   132b0:	movt	r1, #1
   132b4:	bl	11d5c <fprintf@plt>
   132b8:	b	13194 <__assert_fail@plt+0x121c>
   132bc:	push	{r4, sl, fp, lr}
   132c0:	add	fp, sp, #8
   132c4:	mov	r4, r0
   132c8:	mov	r0, #1
   132cc:	strh	r0, [r4, #32]
   132d0:	ldr	r0, [r4, #60]	; 0x3c
   132d4:	cmn	r0, #1
   132d8:	beq	132e0 <__assert_fail@plt+0x1368>
   132dc:	pop	{r4, sl, fp, pc}
   132e0:	mov	r0, r4
   132e4:	bl	12f60 <__assert_fail@plt+0xfe8>
   132e8:	cmp	r0, #0
   132ec:	popne	{r4, sl, fp, pc}
   132f0:	ldr	r0, [r4, #16]
   132f4:	cmp	r0, #1
   132f8:	bne	13308 <__assert_fail@plt+0x1390>
   132fc:	ldr	r0, [r4, #60]	; 0x3c
   13300:	mov	r1, #10
   13304:	bl	11e40 <listen@plt>
   13308:	ldr	r3, [r4, #60]	; 0x3c
   1330c:	movw	ip, #1388	; 0x56c
   13310:	mov	r2, #1
   13314:	movt	ip, #3
   13318:	asr	r0, r3, #31
   1331c:	and	r1, r3, #31
   13320:	add	r0, r3, r0, lsr #27
   13324:	asr	r0, r0, #5
   13328:	ldr	lr, [ip, r0, lsl #2]
   1332c:	orr	r1, lr, r2, lsl r1
   13330:	str	r1, [ip, r0, lsl #2]
   13334:	movw	r0, #1520	; 0x5f0
   13338:	movt	r0, #3
   1333c:	ldr	r1, [r0]
   13340:	add	r1, r1, #1
   13344:	str	r1, [r0]
   13348:	movw	r0, #1384	; 0x568
   1334c:	movt	r0, #3
   13350:	ldr	r1, [r0]
   13354:	cmp	r3, r1
   13358:	strgt	r3, [r0]
   1335c:	movw	r0, #1188	; 0x4a4
   13360:	movt	r0, #3
   13364:	ldrb	r0, [r0]
   13368:	cmp	r0, #0
   1336c:	beq	132dc <__assert_fail@plt+0x1364>
   13370:	movw	r0, #944	; 0x3b0
   13374:	ldr	r2, [r4, #48]	; 0x30
   13378:	movw	r1, #58051	; 0xe2c3
   1337c:	movt	r0, #3
   13380:	movt	r1, #1
   13384:	ldr	r0, [r0]
   13388:	pop	{r4, sl, fp, lr}
   1338c:	b	11d5c <fprintf@plt>
   13390:	push	{r4, sl, fp, lr}
   13394:	add	fp, sp, #8
   13398:	movw	r0, #1540	; 0x604
   1339c:	mov	r1, #0
   133a0:	movt	r0, #3
   133a4:	str	r1, [r0]
   133a8:	movw	r0, #1552	; 0x610
   133ac:	movt	r0, #3
   133b0:	ldr	r4, [r0]
   133b4:	cmp	r4, #0
   133b8:	bne	133cc <__assert_fail@plt+0x1454>
   133bc:	b	133f0 <__assert_fail@plt+0x1478>
   133c0:	ldr	r4, [r4, #220]	; 0xdc
   133c4:	cmp	r4, #0
   133c8:	beq	133f0 <__assert_fail@plt+0x1478>
   133cc:	ldr	r0, [r4, #60]	; 0x3c
   133d0:	cmn	r0, #1
   133d4:	bne	133c0 <__assert_fail@plt+0x1448>
   133d8:	ldr	r0, [r4, #64]	; 0x40
   133dc:	sub	r0, r0, #1
   133e0:	cmp	r0, #2
   133e4:	movcs	r0, r4
   133e8:	blcs	12f60 <__assert_fail@plt+0xfe8>
   133ec:	b	133c0 <__assert_fail@plt+0x1448>
   133f0:	pop	{r4, sl, fp, pc}
   133f4:	push	{r4, sl, fp, lr}
   133f8:	add	fp, sp, #8
   133fc:	mov	r4, r0
   13400:	ldr	r0, [r0, #60]	; 0x3c
   13404:	cmp	r0, #0
   13408:	bmi	1344c <__assert_fail@plt+0x14d4>
   1340c:	movw	r1, #1520	; 0x5f0
   13410:	movw	ip, #1388	; 0x56c
   13414:	mov	r3, #1
   13418:	movt	r1, #3
   1341c:	movt	ip, #3
   13420:	ldr	r2, [r1]
   13424:	sub	r2, r2, #1
   13428:	str	r2, [r1]
   1342c:	lsr	r1, r0, #5
   13430:	and	r2, r0, #31
   13434:	ldr	lr, [ip, r1, lsl #2]
   13438:	bic	r2, lr, r3, lsl r2
   1343c:	str	r2, [ip, r1, lsl #2]
   13440:	bl	11f48 <close@plt>
   13444:	mvn	r0, #0
   13448:	str	r0, [r4, #60]	; 0x3c
   1344c:	mov	r0, #0
   13450:	str	r0, [r4, #208]	; 0xd0
   13454:	ldr	r0, [r4, #24]
   13458:	cmp	r0, #2
   1345c:	movge	r0, #1
   13460:	strge	r0, [r4, #24]
   13464:	pop	{r4, sl, fp, pc}
   13468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1346c:	add	fp, sp, #28
   13470:	sub	sp, sp, #308	; 0x134
   13474:	movw	r8, #1552	; 0x610
   13478:	movw	r7, #1188	; 0x4a4
   1347c:	mov	r5, r0
   13480:	movt	r8, #3
   13484:	movt	r7, #3
   13488:	ldr	r9, [r8]
   1348c:	cmp	r9, #0
   13490:	beq	13618 <__assert_fail@plt+0x16a0>
   13494:	add	r6, r5, #72	; 0x48
   13498:	b	134a8 <__assert_fail@plt+0x1530>
   1349c:	ldr	r9, [r9, #220]	; 0xdc
   134a0:	cmp	r9, #0
   134a4:	beq	13618 <__assert_fail@plt+0x16a0>
   134a8:	add	r0, r9, #72	; 0x48
   134ac:	mov	r1, r6
   134b0:	mov	r2, #128	; 0x80
   134b4:	bl	11d14 <bcmp@plt>
   134b8:	cmp	r0, #0
   134bc:	bne	1349c <__assert_fail@plt+0x1524>
   134c0:	ldr	r1, [r5, #12]
   134c4:	ldr	r0, [r9, #12]
   134c8:	bl	11ab0 <strcmp@plt>
   134cc:	cmp	r0, #0
   134d0:	bne	1349c <__assert_fail@plt+0x1524>
   134d4:	ldr	r1, [r5, #20]
   134d8:	ldr	r0, [r9, #20]
   134dc:	bl	11ab0 <strcmp@plt>
   134e0:	cmp	r0, #0
   134e4:	bne	1349c <__assert_fail@plt+0x1524>
   134e8:	ldr	r0, [r5, #64]	; 0x40
   134ec:	ldr	r1, [r9, #64]	; 0x40
   134f0:	sub	r0, r0, #1
   134f4:	sub	r1, r1, #1
   134f8:	cmp	r0, #2
   134fc:	mov	r0, #0
   13500:	movwcc	r0, #1
   13504:	cmp	r1, #2
   13508:	mov	r1, #0
   1350c:	movwcc	r1, #1
   13510:	cmp	r1, r0
   13514:	bne	1349c <__assert_fail@plt+0x1524>
   13518:	sub	r6, fp, #160	; 0xa0
   1351c:	mov	r0, r6
   13520:	bl	11e10 <sigemptyset@plt>
   13524:	mov	r0, r6
   13528:	mov	r1, #17
   1352c:	bl	11cb4 <sigaddset@plt>
   13530:	mov	r0, r6
   13534:	mov	r1, #1
   13538:	bl	11cb4 <sigaddset@plt>
   1353c:	mov	r0, r6
   13540:	mov	r1, #14
   13544:	bl	11cb4 <sigaddset@plt>
   13548:	add	r2, sp, #48	; 0x30
   1354c:	mov	r0, #0
   13550:	mov	r1, r6
   13554:	bl	11b10 <sigprocmask@plt>
   13558:	ldr	r0, [r5, #44]	; 0x2c
   1355c:	cmp	r0, #0
   13560:	bne	13584 <__assert_fail@plt+0x160c>
   13564:	ldr	r1, [r9, #24]
   13568:	ldr	r0, [r5, #24]
   1356c:	cmp	r1, #1
   13570:	beq	13580 <__assert_fail@plt+0x1608>
   13574:	cmp	r0, #0
   13578:	bne	13584 <__assert_fail@plt+0x160c>
   1357c:	mov	r0, #0
   13580:	str	r0, [r9, #24]
   13584:	ldr	r0, [r5, #36]	; 0x24
   13588:	cmp	r0, #0
   1358c:	ldrne	r1, [r9, #36]	; 0x24
   13590:	strne	r0, [r9, #36]	; 0x24
   13594:	strne	r1, [r5, #36]	; 0x24
   13598:	ldr	r0, [r5, #40]	; 0x28
   1359c:	cmp	r0, #0
   135a0:	ldrne	r1, [r9, #40]	; 0x28
   135a4:	strne	r0, [r9, #40]	; 0x28
   135a8:	strne	r1, [r5, #40]	; 0x28
   135ac:	ldr	r0, [r5, #48]	; 0x30
   135b0:	cmp	r0, #0
   135b4:	ldrne	r1, [r9, #48]	; 0x30
   135b8:	strne	r0, [r9, #48]	; 0x30
   135bc:	strne	r1, [r5, #48]	; 0x30
   135c0:	ldr	r1, [r9, #52]	; 0x34
   135c4:	ldr	r0, [r9, #56]	; 0x38
   135c8:	bl	167a4 <__assert_fail@plt+0x482c>
   135cc:	ldr	r0, [r5, #56]	; 0x38
   135d0:	add	r1, sp, #48	; 0x30
   135d4:	mov	r2, #0
   135d8:	str	r0, [r9, #56]	; 0x38
   135dc:	ldr	r0, [r5, #52]	; 0x34
   135e0:	str	r0, [r9, #52]	; 0x34
   135e4:	mov	r0, #0
   135e8:	str	r0, [r5, #52]	; 0x34
   135ec:	str	r0, [r5, #56]	; 0x38
   135f0:	mov	r0, #1
   135f4:	strh	r0, [r9, #32]
   135f8:	mov	r0, #2
   135fc:	bl	11b10 <sigprocmask@plt>
   13600:	ldrb	r0, [r7]
   13604:	cmp	r0, #0
   13608:	bne	1398c <__assert_fail@plt+0x1a14>
   1360c:	mov	r0, r9
   13610:	sub	sp, fp, #28
   13614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13618:	ldrb	r0, [r7]
   1361c:	cmp	r0, #0
   13620:	bne	138a0 <__assert_fail@plt+0x1928>
   13624:	mov	r0, #224	; 0xe0
   13628:	bl	18608 <argp_parse@@Base+0x1b64>
   1362c:	cmp	r0, #0
   13630:	beq	13974 <__assert_fail@plt+0x19fc>
   13634:	mov	r1, r5
   13638:	mov	r2, #224	; 0xe0
   1363c:	mov	r9, r0
   13640:	bl	11b64 <memcpy@plt>
   13644:	ldr	r0, [r9, #8]
   13648:	cmp	r0, #0
   1364c:	beq	1367c <__assert_fail@plt+0x1704>
   13650:	bl	11d2c <strlen@plt>
   13654:	add	r5, r0, #1
   13658:	mov	r0, r5
   1365c:	bl	18608 <argp_parse@@Base+0x1b64>
   13660:	cmp	r0, #0
   13664:	beq	13a54 <__assert_fail@plt+0x1adc>
   13668:	ldr	r1, [r9, #8]
   1366c:	mov	r2, r5
   13670:	mov	r6, r0
   13674:	bl	11b64 <memcpy@plt>
   13678:	str	r6, [r9, #8]
   1367c:	ldr	r0, [r9, #12]
   13680:	cmp	r0, #0
   13684:	beq	136b4 <__assert_fail@plt+0x173c>
   13688:	bl	11d2c <strlen@plt>
   1368c:	add	r5, r0, #1
   13690:	mov	r0, r5
   13694:	bl	18608 <argp_parse@@Base+0x1b64>
   13698:	cmp	r0, #0
   1369c:	beq	13a54 <__assert_fail@plt+0x1adc>
   136a0:	ldr	r1, [r9, #12]
   136a4:	mov	r2, r5
   136a8:	mov	r6, r0
   136ac:	bl	11b64 <memcpy@plt>
   136b0:	str	r6, [r9, #12]
   136b4:	ldr	r0, [r9, #20]
   136b8:	cmp	r0, #0
   136bc:	beq	136ec <__assert_fail@plt+0x1774>
   136c0:	bl	11d2c <strlen@plt>
   136c4:	add	r5, r0, #1
   136c8:	mov	r0, r5
   136cc:	bl	18608 <argp_parse@@Base+0x1b64>
   136d0:	cmp	r0, #0
   136d4:	beq	13a54 <__assert_fail@plt+0x1adc>
   136d8:	ldr	r1, [r9, #20]
   136dc:	mov	r2, r5
   136e0:	mov	r6, r0
   136e4:	bl	11b64 <memcpy@plt>
   136e8:	str	r6, [r9, #20]
   136ec:	ldr	r0, [r9, #36]	; 0x24
   136f0:	cmp	r0, #0
   136f4:	beq	13724 <__assert_fail@plt+0x17ac>
   136f8:	bl	11d2c <strlen@plt>
   136fc:	add	r5, r0, #1
   13700:	mov	r0, r5
   13704:	bl	18608 <argp_parse@@Base+0x1b64>
   13708:	cmp	r0, #0
   1370c:	beq	13a54 <__assert_fail@plt+0x1adc>
   13710:	ldr	r1, [r9, #36]	; 0x24
   13714:	mov	r2, r5
   13718:	mov	r6, r0
   1371c:	bl	11b64 <memcpy@plt>
   13720:	str	r6, [r9, #36]	; 0x24
   13724:	ldr	r0, [r9, #40]	; 0x28
   13728:	cmp	r0, #0
   1372c:	beq	1375c <__assert_fail@plt+0x17e4>
   13730:	bl	11d2c <strlen@plt>
   13734:	add	r5, r0, #1
   13738:	mov	r0, r5
   1373c:	bl	18608 <argp_parse@@Base+0x1b64>
   13740:	cmp	r0, #0
   13744:	beq	13a54 <__assert_fail@plt+0x1adc>
   13748:	ldr	r1, [r9, #40]	; 0x28
   1374c:	mov	r2, r5
   13750:	mov	r6, r0
   13754:	bl	11b64 <memcpy@plt>
   13758:	str	r6, [r9, #40]	; 0x28
   1375c:	ldr	r0, [r9, #48]	; 0x30
   13760:	cmp	r0, #0
   13764:	beq	13794 <__assert_fail@plt+0x181c>
   13768:	bl	11d2c <strlen@plt>
   1376c:	add	r5, r0, #1
   13770:	mov	r0, r5
   13774:	bl	18608 <argp_parse@@Base+0x1b64>
   13778:	cmp	r0, #0
   1377c:	beq	13a54 <__assert_fail@plt+0x1adc>
   13780:	ldr	r1, [r9, #48]	; 0x30
   13784:	mov	r2, r5
   13788:	mov	r6, r0
   1378c:	bl	11b64 <memcpy@plt>
   13790:	str	r6, [r9, #48]	; 0x30
   13794:	ldr	r0, [r9, #56]	; 0x38
   13798:	lsl	r6, r0, #2
   1379c:	mov	r0, r6
   137a0:	bl	18608 <argp_parse@@Base+0x1b64>
   137a4:	cmp	r0, #0
   137a8:	beq	13a54 <__assert_fail@plt+0x1adc>
   137ac:	ldr	r1, [r9, #52]	; 0x34
   137b0:	mov	r2, r6
   137b4:	mov	r5, r0
   137b8:	bl	11b64 <memcpy@plt>
   137bc:	str	r5, [r9, #52]	; 0x34
   137c0:	ldr	r1, [r9, #56]	; 0x38
   137c4:	cmp	r1, #0
   137c8:	beq	1382c <__assert_fail@plt+0x18b4>
   137cc:	mov	r4, #0
   137d0:	ldr	r0, [r5, r4, lsl #2]
   137d4:	cmp	r0, #0
   137d8:	beq	1380c <__assert_fail@plt+0x1894>
   137dc:	bl	11d2c <strlen@plt>
   137e0:	add	r6, r0, #1
   137e4:	mov	r0, r6
   137e8:	bl	18608 <argp_parse@@Base+0x1b64>
   137ec:	cmp	r0, #0
   137f0:	beq	13a54 <__assert_fail@plt+0x1adc>
   137f4:	ldr	r1, [r5, r4, lsl #2]
   137f8:	mov	r2, r6
   137fc:	mov	r7, r0
   13800:	bl	11b64 <memcpy@plt>
   13804:	str	r7, [r5, r4, lsl #2]
   13808:	ldr	r1, [r9, #56]	; 0x38
   1380c:	add	r4, r4, #1
   13810:	cmp	r4, r1
   13814:	bcs	1382c <__assert_fail@plt+0x18b4>
   13818:	ldr	r5, [r9, #52]	; 0x34
   1381c:	ldr	r0, [r5, r4, lsl #2]
   13820:	cmp	r0, #0
   13824:	bne	137dc <__assert_fail@plt+0x1864>
   13828:	b	1380c <__assert_fail@plt+0x1894>
   1382c:	mvn	r0, #0
   13830:	sub	r5, fp, #160	; 0xa0
   13834:	str	r0, [r9, #60]	; 0x3c
   13838:	mov	r0, r5
   1383c:	bl	11e10 <sigemptyset@plt>
   13840:	mov	r0, r5
   13844:	mov	r1, #17
   13848:	bl	11cb4 <sigaddset@plt>
   1384c:	mov	r0, r5
   13850:	mov	r1, #1
   13854:	bl	11cb4 <sigaddset@plt>
   13858:	mov	r0, r5
   1385c:	mov	r1, #14
   13860:	bl	11cb4 <sigaddset@plt>
   13864:	add	r6, sp, #48	; 0x30
   13868:	mov	r0, #0
   1386c:	mov	r1, r5
   13870:	mov	r2, r6
   13874:	bl	11b10 <sigprocmask@plt>
   13878:	ldr	r0, [r8]
   1387c:	mov	r1, r6
   13880:	mov	r2, #0
   13884:	str	r9, [r8]
   13888:	str	r0, [r9, #220]	; 0xdc
   1388c:	mov	r0, #2
   13890:	bl	11b10 <sigprocmask@plt>
   13894:	mov	r0, r9
   13898:	sub	sp, fp, #28
   1389c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138a0:	movw	r0, #944	; 0x3b0
   138a4:	ldr	r7, [r5, #64]	; 0x40
   138a8:	ldr	r2, [r5, #4]
   138ac:	ldr	r3, [r5]
   138b0:	movt	r0, #3
   138b4:	ldr	r0, [r0]
   138b8:	sub	r1, r7, #1
   138bc:	str	r2, [sp, #44]	; 0x2c
   138c0:	cmp	r1, #1
   138c4:	bhi	138e4 <__assert_fail@plt+0x196c>
   138c8:	movw	r6, #57824	; 0xe1e0
   138cc:	movw	r1, #58662	; 0xe526
   138d0:	cmp	r7, #2
   138d4:	movt	r6, #1
   138d8:	movt	r1, #1
   138dc:	moveq	r1, r6
   138e0:	b	138f8 <__assert_fail@plt+0x1980>
   138e4:	ldr	r7, [r5, #8]
   138e8:	movw	r1, #57835	; 0xe1eb
   138ec:	movt	r1, #1
   138f0:	cmp	r7, #0
   138f4:	movne	r1, r7
   138f8:	add	r9, r5, #20
   138fc:	ldr	r4, [r5, #44]	; 0x2c
   13900:	ldr	lr, [r5, #36]	; 0x24
   13904:	ldr	r2, [r5, #40]	; 0x28
   13908:	ldr	sl, [r5, #12]
   1390c:	ldm	r9, {r6, r7, r9}
   13910:	cmp	r4, #0
   13914:	bne	13924 <__assert_fail@plt+0x19ac>
   13918:	movw	r4, #57837	; 0xe1ed
   1391c:	movt	r4, #1
   13920:	b	13928 <__assert_fail@plt+0x19b0>
   13924:	ldr	r4, [r4]
   13928:	ldr	ip, [r5, #48]	; 0x30
   1392c:	str	r4, [sp, #32]
   13930:	movw	r4, #58077	; 0xe2dd
   13934:	movt	r4, #1
   13938:	str	r4, [sp]
   1393c:	str	ip, [sp, #36]	; 0x24
   13940:	stmib	sp, {r1, sl}
   13944:	add	r1, sp, #12
   13948:	stm	r1, {r6, r7, r9, lr}
   1394c:	str	r2, [sp, #28]
   13950:	mov	r2, r3
   13954:	ldr	r3, [sp, #44]	; 0x2c
   13958:	movw	r1, #57741	; 0xe18d
   1395c:	movt	r1, #1
   13960:	bl	11d5c <fprintf@plt>
   13964:	mov	r0, #224	; 0xe0
   13968:	bl	18608 <argp_parse@@Base+0x1b64>
   1396c:	cmp	r0, #0
   13970:	bne	13634 <__assert_fail@plt+0x16bc>
   13974:	movw	r1, #58553	; 0xe4b9
   13978:	movt	r1, #1
   1397c:	mov	r0, #3
   13980:	bl	11e64 <syslog@plt>
   13984:	mvn	r0, #0
   13988:	bl	11d08 <exit@plt>
   1398c:	movw	r0, #944	; 0x3b0
   13990:	ldr	r7, [r9, #64]	; 0x40
   13994:	ldm	r9, {r2, r3}
   13998:	movt	r0, #3
   1399c:	ldr	r0, [r0]
   139a0:	sub	r1, r7, #1
   139a4:	cmp	r1, #1
   139a8:	bhi	139c8 <__assert_fail@plt+0x1a50>
   139ac:	movw	r6, #57824	; 0xe1e0
   139b0:	movw	r1, #58662	; 0xe526
   139b4:	cmp	r7, #2
   139b8:	movt	r6, #1
   139bc:	movt	r1, #1
   139c0:	moveq	r1, r6
   139c4:	b	139dc <__assert_fail@plt+0x1a64>
   139c8:	ldr	r7, [r9, #8]
   139cc:	movw	r1, #57835	; 0xe1eb
   139d0:	movt	r1, #1
   139d4:	cmp	r7, #0
   139d8:	movne	r1, r7
   139dc:	ldr	r4, [r9, #44]	; 0x2c
   139e0:	ldr	lr, [r9, #36]	; 0x24
   139e4:	ldr	ip, [r9, #40]	; 0x28
   139e8:	ldr	sl, [r9, #12]
   139ec:	ldr	r8, [r9, #20]
   139f0:	ldr	r6, [r9, #24]
   139f4:	ldr	r7, [r9, #28]
   139f8:	cmp	r4, #0
   139fc:	bne	13a0c <__assert_fail@plt+0x1a94>
   13a00:	movw	r4, #57837	; 0xe1ed
   13a04:	movt	r4, #1
   13a08:	b	13a10 <__assert_fail@plt+0x1a98>
   13a0c:	ldr	r4, [r4]
   13a10:	ldr	r5, [r9, #48]	; 0x30
   13a14:	str	r4, [sp, #32]
   13a18:	movw	r4, #58072	; 0xe2d8
   13a1c:	movt	r4, #1
   13a20:	str	r4, [sp]
   13a24:	str	r5, [sp, #36]	; 0x24
   13a28:	stmib	sp, {r1, sl}
   13a2c:	add	r1, sp, #16
   13a30:	str	r8, [sp, #12]
   13a34:	stm	r1, {r6, r7, lr}
   13a38:	movw	r1, #57741	; 0xe18d
   13a3c:	str	ip, [sp, #28]
   13a40:	movt	r1, #1
   13a44:	bl	11d5c <fprintf@plt>
   13a48:	mov	r0, r9
   13a4c:	sub	sp, fp, #28
   13a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a54:	movw	r1, #57730	; 0xe182
   13a58:	movt	r1, #1
   13a5c:	mov	r0, #3
   13a60:	bl	11e64 <syslog@plt>
   13a64:	mvn	r0, #0
   13a68:	bl	11d08 <exit@plt>
   13a6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a70:	add	fp, sp, #24
   13a74:	sub	sp, sp, #32
   13a78:	ldr	r7, [r0, #8]
   13a7c:	mov	r8, r2
   13a80:	mov	r9, r1
   13a84:	mov	r6, r0
   13a88:	cmp	r7, #0
   13a8c:	beq	13b00 <__assert_fail@plt+0x1b88>
   13a90:	movw	r1, #58082	; 0xe2e2
   13a94:	mov	r0, r7
   13a98:	movt	r1, #1
   13a9c:	bl	11f6c <strspn@plt>
   13aa0:	mov	r4, r0
   13aa4:	mov	r0, r7
   13aa8:	bl	11d2c <strlen@plt>
   13aac:	mov	r5, #1
   13ab0:	cmp	r4, r0
   13ab4:	beq	13b04 <__assert_fail@plt+0x1b8c>
   13ab8:	mov	r0, r7
   13abc:	mov	r1, #58	; 0x3a
   13ac0:	bl	11d44 <strchr@plt>
   13ac4:	cmp	r0, #0
   13ac8:	beq	13ae4 <__assert_fail@plt+0x1b6c>
   13acc:	movw	r1, #58094	; 0xe2ee
   13ad0:	mov	r0, r7
   13ad4:	movt	r1, #1
   13ad8:	bl	11f6c <strspn@plt>
   13adc:	cmp	r0, #0
   13ae0:	bne	13b04 <__assert_fail@plt+0x1b8c>
   13ae4:	cmp	r7, #0
   13ae8:	beq	13b00 <__assert_fail@plt+0x1b88>
   13aec:	movw	r0, #1188	; 0x4a4
   13af0:	movt	r0, #3
   13af4:	ldrb	r0, [r0]
   13af8:	cmp	r0, #0
   13afc:	bne	13b7c <__assert_fail@plt+0x1c04>
   13b00:	mov	r5, #0
   13b04:	vmov.i32	q8, #0	; 0x00000000
   13b08:	mov	r0, sp
   13b0c:	add	r1, r0, #16
   13b10:	add	r0, r0, #4
   13b14:	vst1.32	{d16-d17}, [r1]
   13b18:	vst1.32	{d16-d17}, [r0]
   13b1c:	mov	r0, #1
   13b20:	str	r0, [sp]
   13b24:	mov	r0, #5
   13b28:	ldrb	r1, [r6, #70]	; 0x46
   13b2c:	cmp	r1, #0
   13b30:	beq	13b48 <__assert_fail@plt+0x1bd0>
   13b34:	ldrh	r1, [r6, #68]	; 0x44
   13b38:	cmp	r1, #2
   13b3c:	movne	r0, #9
   13b40:	strne	r0, [sp]
   13b44:	movne	r0, #13
   13b48:	cmp	r5, #0
   13b4c:	add	r2, r6, #8
   13b50:	mov	r3, r8
   13b54:	strne	r0, [sp]
   13b58:	ldrh	r0, [r6, #68]	; 0x44
   13b5c:	str	r0, [sp, #4]
   13b60:	ldm	r2, {r0, r1, r2}
   13b64:	str	r9, [sp, #12]
   13b68:	str	r2, [sp, #8]
   13b6c:	mov	r2, sp
   13b70:	bl	11ef4 <getaddrinfo@plt>
   13b74:	sub	sp, fp, #24
   13b78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13b7c:	movw	r0, #944	; 0x3b0
   13b80:	movw	r1, #58119	; 0xe307
   13b84:	mov	r2, r7
   13b88:	movt	r0, #3
   13b8c:	movt	r1, #1
   13b90:	ldr	r0, [r0]
   13b94:	bl	11d5c <fprintf@plt>
   13b98:	b	13b00 <__assert_fail@plt+0x1b88>
   13b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ba0:	add	fp, sp, #28
   13ba4:	sub	sp, sp, #4
   13ba8:	vpush	{d8-d9}
   13bac:	sub	sp, sp, #24
   13bb0:	ldr	r5, [r0, #20]
   13bb4:	movw	r6, #57915	; 0xe23b
   13bb8:	mov	r4, r0
   13bbc:	mov	r2, #3
   13bc0:	movt	r6, #1
   13bc4:	mov	r1, r6
   13bc8:	mov	r0, r5
   13bcc:	bl	11f24 <strncmp@plt>
   13bd0:	cmp	r0, #0
   13bd4:	beq	13bfc <__assert_fail@plt+0x1c84>
   13bd8:	movw	r6, #58142	; 0xe31e
   13bdc:	mov	r0, r5
   13be0:	mov	r2, #3
   13be4:	movt	r6, #1
   13be8:	mov	r1, r6
   13bec:	bl	11f24 <strncmp@plt>
   13bf0:	cmp	r0, #0
   13bf4:	moveq	r5, r6
   13bf8:	mov	r6, r5
   13bfc:	mov	r0, r6
   13c00:	bl	11b04 <getprotobyname@plt>
   13c04:	cmp	r0, #0
   13c08:	beq	13e04 <__assert_fail@plt+0x1e8c>
   13c0c:	ldr	r1, [r0, #8]
   13c10:	mov	r5, r0
   13c14:	add	r2, sp, #20
   13c18:	mov	r0, r4
   13c1c:	bl	13a6c <__assert_fail@plt+0x1af4>
   13c20:	cmn	r0, #9
   13c24:	bne	13c5c <__assert_fail@plt+0x1ce4>
   13c28:	ldrh	r1, [r4, #68]	; 0x44
   13c2c:	mvn	r0, #8
   13c30:	cmp	r1, #10
   13c34:	bne	13e1c <__assert_fail@plt+0x1ea4>
   13c38:	ldrb	r1, [r4, #70]	; 0x46
   13c3c:	cmp	r1, #0
   13c40:	beq	13e1c <__assert_fail@plt+0x1ea4>
   13c44:	mov	r0, #2
   13c48:	add	r2, sp, #20
   13c4c:	strh	r0, [r4, #68]	; 0x44
   13c50:	mov	r0, r4
   13c54:	ldr	r1, [r5, #8]
   13c58:	bl	13a6c <__assert_fail@plt+0x1af4>
   13c5c:	cmn	r0, #11
   13c60:	beq	13e24 <__assert_fail@plt+0x1eac>
   13c64:	cmp	r0, #0
   13c68:	bne	13e1c <__assert_fail@plt+0x1ea4>
   13c6c:	ldr	r5, [sp, #20]
   13c70:	mov	r6, #0
   13c74:	mov	r0, #0
   13c78:	cmp	r5, #0
   13c7c:	beq	13dfc <__assert_fail@plt+0x1e84>
   13c80:	add	r6, r4, #72	; 0x48
   13c84:	vmov.i32	q4, #0	; 0x00000000
   13c88:	add	r0, r6, #96	; 0x60
   13c8c:	add	r8, r6, #48	; 0x30
   13c90:	add	sl, r6, #32
   13c94:	add	r9, r6, #16
   13c98:	str	r0, [sp, #16]
   13c9c:	add	r0, r6, #80	; 0x50
   13ca0:	str	r0, [sp, #12]
   13ca4:	add	r0, r6, #64	; 0x40
   13ca8:	str	r0, [sp, #8]
   13cac:	b	13d34 <__assert_fail@plt+0x1dbc>
   13cb0:	ldr	r3, [r7, #60]	; 0x3c
   13cb4:	movw	r1, #1388	; 0x56c
   13cb8:	movt	r1, #3
   13cbc:	mov	lr, r1
   13cc0:	asr	r0, r3, #31
   13cc4:	and	r2, r3, #31
   13cc8:	add	r0, r3, r0, lsr #27
   13ccc:	asr	r0, r0, #5
   13cd0:	ldr	ip, [r1, r0, lsl #2]
   13cd4:	mov	r1, #1
   13cd8:	orr	r1, ip, r1, lsl r2
   13cdc:	str	r1, [lr, r0, lsl #2]
   13ce0:	movw	r0, #1520	; 0x5f0
   13ce4:	movt	r0, #3
   13ce8:	mov	r1, r0
   13cec:	ldr	r0, [r0]
   13cf0:	add	r0, r0, #1
   13cf4:	str	r0, [r1]
   13cf8:	movw	r0, #1384	; 0x568
   13cfc:	movt	r0, #3
   13d00:	ldr	r0, [r0]
   13d04:	cmp	r3, r0
   13d08:	movwgt	r0, #1384	; 0x568
   13d0c:	movtgt	r0, #3
   13d10:	strgt	r3, [r0]
   13d14:	movw	r0, #1188	; 0x4a4
   13d18:	movt	r0, #3
   13d1c:	ldrb	r0, [r0]
   13d20:	cmp	r0, #0
   13d24:	bne	13dcc <__assert_fail@plt+0x1e54>
   13d28:	ldr	r5, [r5, #28]
   13d2c:	cmp	r5, #0
   13d30:	beq	13df4 <__assert_fail@plt+0x1e7c>
   13d34:	mov	r0, r6
   13d38:	mov	r1, #112	; 0x70
   13d3c:	vst1.32	{d8-d9}, [r8]
   13d40:	vst1.32	{d8-d9}, [sl]
   13d44:	vst1.32	{d8-d9}, [r9]
   13d48:	vst1.32	{d8-d9}, [r0], r1
   13d4c:	vst1.32	{d8-d9}, [r0]
   13d50:	ldr	r0, [sp, #16]
   13d54:	vst1.32	{d8-d9}, [r0]
   13d58:	ldr	r0, [sp, #12]
   13d5c:	vst1.32	{d8-d9}, [r0]
   13d60:	ldr	r0, [sp, #8]
   13d64:	vst1.32	{d8-d9}, [r0]
   13d68:	mov	r0, r6
   13d6c:	ldr	r2, [r5, #16]
   13d70:	ldr	r1, [r5, #20]
   13d74:	bl	11b64 <memcpy@plt>
   13d78:	ldr	r0, [r5, #16]
   13d7c:	str	r0, [r4, #200]	; 0xc8
   13d80:	mov	r0, r4
   13d84:	bl	13468 <__assert_fail@plt+0x14f0>
   13d88:	mov	r7, r0
   13d8c:	mov	r0, #1
   13d90:	strh	r0, [r7, #32]
   13d94:	ldr	r0, [r7, #60]	; 0x3c
   13d98:	cmn	r0, #1
   13d9c:	bne	13d28 <__assert_fail@plt+0x1db0>
   13da0:	mov	r0, r7
   13da4:	bl	12f60 <__assert_fail@plt+0xfe8>
   13da8:	cmp	r0, #0
   13dac:	bne	13d28 <__assert_fail@plt+0x1db0>
   13db0:	ldr	r0, [r7, #16]
   13db4:	cmp	r0, #1
   13db8:	bne	13cb0 <__assert_fail@plt+0x1d38>
   13dbc:	ldr	r0, [r7, #60]	; 0x3c
   13dc0:	mov	r1, #10
   13dc4:	bl	11e40 <listen@plt>
   13dc8:	b	13cb0 <__assert_fail@plt+0x1d38>
   13dcc:	movw	r0, #944	; 0x3b0
   13dd0:	ldr	r2, [r7, #48]	; 0x30
   13dd4:	movw	r1, #58051	; 0xe2c3
   13dd8:	movt	r0, #3
   13ddc:	movt	r1, #1
   13de0:	ldr	r0, [r0]
   13de4:	bl	11d5c <fprintf@plt>
   13de8:	ldr	r5, [r5, #28]
   13dec:	cmp	r5, #0
   13df0:	bne	13d34 <__assert_fail@plt+0x1dbc>
   13df4:	ldr	r0, [sp, #20]
   13df8:	mov	r6, #0
   13dfc:	bl	11ee8 <freeaddrinfo@plt>
   13e00:	b	13e94 <__assert_fail@plt+0x1f1c>
   13e04:	ldr	r2, [r4, #20]
   13e08:	movw	r1, #58146	; 0xe322
   13e0c:	mov	r0, #3
   13e10:	movt	r1, #1
   13e14:	bl	11e64 <syslog@plt>
   13e18:	b	13e90 <__assert_fail@plt+0x1f18>
   13e1c:	bl	11b40 <gai_strerror@plt>
   13e20:	b	13e30 <__assert_fail@plt+0x1eb8>
   13e24:	bl	11d74 <__errno_location@plt>
   13e28:	ldr	r0, [r0]
   13e2c:	bl	11ccc <strerror@plt>
   13e30:	mov	r5, r0
   13e34:	movw	r0, #1188	; 0x4a4
   13e38:	ldr	r2, [r4, #8]
   13e3c:	movt	r0, #3
   13e40:	ldrb	r0, [r0]
   13e44:	cmp	r2, #0
   13e48:	beq	13e6c <__assert_fail@plt+0x1ef4>
   13e4c:	cmp	r0, #0
   13e50:	bne	13ea8 <__assert_fail@plt+0x1f30>
   13e54:	ldr	r0, [r4, #20]
   13e58:	ldr	r3, [r4, #12]
   13e5c:	movw	r1, #58202	; 0xe35a
   13e60:	movt	r1, #1
   13e64:	stm	sp, {r0, r5}
   13e68:	b	13e88 <__assert_fail@plt+0x1f10>
   13e6c:	cmp	r0, #0
   13e70:	bne	13ed4 <__assert_fail@plt+0x1f5c>
   13e74:	ldr	r2, [r4, #12]
   13e78:	ldr	r3, [r4, #20]
   13e7c:	movw	r1, #58205	; 0xe35d
   13e80:	str	r5, [sp]
   13e84:	movt	r1, #1
   13e88:	mov	r0, #3
   13e8c:	bl	11e64 <syslog@plt>
   13e90:	mov	r6, #1
   13e94:	mov	r0, r6
   13e98:	sub	sp, fp, #48	; 0x30
   13e9c:	vpop	{d8-d9}
   13ea0:	add	sp, sp, #4
   13ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ea8:	movw	r0, #944	; 0x3b0
   13eac:	ldr	r1, [r4, #20]
   13eb0:	ldr	r3, [r4, #12]
   13eb4:	movt	r0, #3
   13eb8:	ldr	r0, [r0]
   13ebc:	stm	sp, {r1, r5}
   13ec0:	movw	r1, #58167	; 0xe337
   13ec4:	movt	r1, #1
   13ec8:	bl	11d5c <fprintf@plt>
   13ecc:	ldr	r2, [r4, #8]
   13ed0:	b	13e54 <__assert_fail@plt+0x1edc>
   13ed4:	movw	r0, #944	; 0x3b0
   13ed8:	ldr	r2, [r4, #12]
   13edc:	ldr	r3, [r4, #20]
   13ee0:	movw	r1, #58228	; 0xe374
   13ee4:	str	r5, [sp]
   13ee8:	movt	r0, #3
   13eec:	movt	r1, #1
   13ef0:	ldr	r0, [r0]
   13ef4:	bl	11d5c <fprintf@plt>
   13ef8:	b	13e74 <__assert_fail@plt+0x1efc>
   13efc:	movw	r1, #57556	; 0xe0d4
   13f00:	movt	r1, #1
   13f04:	b	11ec4 <fopen64@plt>
   13f08:	cmp	r0, #0
   13f0c:	bxeq	lr
   13f10:	b	11dec <fclose@plt>
   13f14:	push	{r4, sl, fp, lr}
   13f18:	add	fp, sp, #8
   13f1c:	mov	r4, r0
   13f20:	ldr	r0, [r0, #8]
   13f24:	bl	17e80 <argp_parse@@Base+0x13dc>
   13f28:	ldr	r0, [r4, #12]
   13f2c:	bl	17e80 <argp_parse@@Base+0x13dc>
   13f30:	ldr	r0, [r4, #20]
   13f34:	bl	17e80 <argp_parse@@Base+0x13dc>
   13f38:	ldr	r0, [r4, #36]	; 0x24
   13f3c:	bl	17e80 <argp_parse@@Base+0x13dc>
   13f40:	ldr	r0, [r4, #40]	; 0x28
   13f44:	bl	17e80 <argp_parse@@Base+0x13dc>
   13f48:	ldr	r0, [r4, #48]	; 0x30
   13f4c:	bl	17e80 <argp_parse@@Base+0x13dc>
   13f50:	ldr	r1, [r4, #52]	; 0x34
   13f54:	ldr	r0, [r4, #56]	; 0x38
   13f58:	pop	{r4, sl, fp, lr}
   13f5c:	b	167a4 <__assert_fail@plt+0x482c>
   13f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f64:	add	fp, sp, #28
   13f68:	sub	sp, sp, #4
   13f6c:	movw	r6, #1544	; 0x608
   13f70:	mov	r4, r0
   13f74:	movt	r6, #3
   13f78:	ldr	r0, [r6]
   13f7c:	cmp	r0, #0
   13f80:	beq	13ff4 <__assert_fail@plt+0x207c>
   13f84:	movw	r9, #1536	; 0x600
   13f88:	movt	r9, #3
   13f8c:	ldr	r1, [r9]
   13f90:	add	r0, r0, r1
   13f94:	movw	r1, #58260	; 0xe394
   13f98:	movt	r1, #1
   13f9c:	bl	11ad4 <strcspn@plt>
   13fa0:	mov	r5, r0
   13fa4:	add	r0, r0, #1
   13fa8:	bl	18608 <argp_parse@@Base+0x1b64>
   13fac:	cmp	r0, #0
   13fb0:	str	r0, [r4, #8]
   13fb4:	beq	14020 <__assert_fail@plt+0x20a8>
   13fb8:	ldr	r8, [r9]
   13fbc:	ldr	r6, [r6]
   13fc0:	mov	r2, r5
   13fc4:	mov	r7, r0
   13fc8:	add	r1, r6, r8
   13fcc:	bl	11b64 <memcpy@plt>
   13fd0:	mov	sl, #0
   13fd4:	add	r0, r8, r5
   13fd8:	strb	sl, [r7, r5]
   13fdc:	str	r0, [r9]
   13fe0:	ldrb	r1, [r6, r0]
   13fe4:	cmp	r1, #0
   13fe8:	beq	14000 <__assert_fail@plt+0x2088>
   13fec:	add	r0, r0, #1
   13ff0:	str	r0, [r9]
   13ff4:	mov	r0, r4
   13ff8:	sub	sp, fp, #28
   13ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14000:	mov	r0, r6
   14004:	bl	17e80 <argp_parse@@Base+0x13dc>
   14008:	movw	r0, #1544	; 0x608
   1400c:	movt	r0, #3
   14010:	str	sl, [r0]
   14014:	mov	r0, r4
   14018:	sub	sp, fp, #28
   1401c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14020:	movw	r1, #58262	; 0xe396
   14024:	mov	r0, #3
   14028:	movt	r1, #1
   1402c:	bl	11e64 <syslog@plt>
   14030:	mvn	r0, #0
   14034:	bl	11d08 <exit@plt>
   14038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1403c:	add	fp, sp, #28
   14040:	sub	sp, sp, #28
   14044:	mov	sl, r0
   14048:	movw	r0, #1544	; 0x608
   1404c:	mov	r8, #0
   14050:	movt	r0, #3
   14054:	str	r8, [sp, #24]
   14058:	str	r8, [sp, #20]
   1405c:	ldr	r0, [r0]
   14060:	cmp	r0, #0
   14064:	beq	14084 <__assert_fail@plt+0x210c>
   14068:	movw	r6, #960	; 0x3c0
   1406c:	movt	r6, #3
   14070:	mov	r0, r6
   14074:	bl	13f60 <__assert_fail@plt+0x1fe8>
   14078:	mov	r0, r6
   1407c:	sub	sp, fp, #28
   14080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14084:	movw	r4, #960	; 0x3c0
   14088:	mov	r9, r2
   1408c:	str	r1, [sp, #8]
   14090:	mov	r1, #0
   14094:	mov	r2, #224	; 0xe0
   14098:	movt	r4, #3
   1409c:	mov	r0, r4
   140a0:	bl	11da4 <memset@plt>
   140a4:	movw	r5, #1188	; 0x4a4
   140a8:	mov	r1, #0
   140ac:	mov	r0, #0
   140b0:	movt	r5, #3
   140b4:	add	r7, r5, #4
   140b8:	add	r6, r5, #8
   140bc:	bl	167a4 <__assert_fail@plt+0x482c>
   140c0:	ldr	r0, [r4, #8]
   140c4:	bl	17e80 <argp_parse@@Base+0x13dc>
   140c8:	ldr	r0, [r4, #12]
   140cc:	bl	17e80 <argp_parse@@Base+0x13dc>
   140d0:	ldr	r0, [r4, #20]
   140d4:	bl	17e80 <argp_parse@@Base+0x13dc>
   140d8:	ldr	r0, [r4, #36]	; 0x24
   140dc:	bl	17e80 <argp_parse@@Base+0x13dc>
   140e0:	ldr	r0, [r4, #40]	; 0x28
   140e4:	bl	17e80 <argp_parse@@Base+0x13dc>
   140e8:	ldr	r0, [r4, #48]	; 0x30
   140ec:	bl	17e80 <argp_parse@@Base+0x13dc>
   140f0:	ldr	r1, [r4, #52]	; 0x34
   140f4:	ldr	r0, [r4, #56]	; 0x38
   140f8:	bl	167a4 <__assert_fail@plt+0x482c>
   140fc:	mov	r0, r4
   14100:	mov	r1, #0
   14104:	mov	r2, #224	; 0xe0
   14108:	bl	11da4 <memset@plt>
   1410c:	mov	r0, r7
   14110:	mov	r1, r6
   14114:	mov	r2, #10
   14118:	mov	r3, sl
   1411c:	bl	11a98 <__getdelim@plt>
   14120:	cmp	r0, #0
   14124:	bmi	147fc <__assert_fail@plt+0x2884>
   14128:	cmp	r0, #0
   1412c:	beq	14150 <__assert_fail@plt+0x21d8>
   14130:	ldr	r1, [r5, #4]
   14134:	sub	r0, r0, #1
   14138:	ldrb	r2, [r1, r0]
   1413c:	cmp	r2, #10
   14140:	strbeq	r8, [r1, r0]
   14144:	ldr	r0, [r9]
   14148:	add	r0, r0, #1
   1414c:	str	r0, [r9]
   14150:	ldr	r0, [r5, #4]
   14154:	ldrb	r1, [r0]
   14158:	cmp	r1, #35	; 0x23
   1415c:	cmpne	r1, #0
   14160:	bne	14184 <__assert_fail@plt+0x220c>
   14164:	mov	r0, r7
   14168:	mov	r1, r6
   1416c:	mov	r2, #10
   14170:	mov	r3, sl
   14174:	bl	11a98 <__getdelim@plt>
   14178:	cmp	r0, #0
   1417c:	bpl	14128 <__assert_fail@plt+0x21b0>
   14180:	b	147fc <__assert_fail@plt+0x2884>
   14184:	movw	r1, #58945	; 0xe641
   14188:	add	r2, sp, #24
   1418c:	add	r3, sp, #20
   14190:	str	r6, [sp, #12]
   14194:	movt	r1, #1
   14198:	bl	1643c <__assert_fail@plt+0x44c4>
   1419c:	cmp	r0, #0
   141a0:	bne	147a8 <__assert_fail@plt+0x2830>
   141a4:	ldr	r0, [sp, #24]
   141a8:	cmp	r0, #5
   141ac:	bgt	14240 <__assert_fail@plt+0x22c8>
   141b0:	cmp	r0, #1
   141b4:	bne	142d8 <__assert_fail@plt+0x2360>
   141b8:	ldr	r0, [sp, #20]
   141bc:	ldr	r8, [r0]
   141c0:	mov	r0, r8
   141c4:	bl	11d2c <strlen@plt>
   141c8:	sub	r0, r0, #1
   141cc:	ldrb	r1, [r8, r0]
   141d0:	cmp	r1, #58	; 0x3a
   141d4:	bne	142d8 <__assert_fail@plt+0x2360>
   141d8:	mov	r1, #0
   141dc:	strb	r1, [r8, r0]
   141e0:	movw	r0, #1556	; 0x614
   141e4:	movt	r0, #3
   141e8:	ldr	r0, [r0]
   141ec:	bl	17e80 <argp_parse@@Base+0x13dc>
   141f0:	ldr	r0, [sp, #20]
   141f4:	movw	r1, #57835	; 0xe1eb
   141f8:	movt	r1, #1
   141fc:	ldr	r8, [r0]
   14200:	mov	r0, r8
   14204:	bl	11ab0 <strcmp@plt>
   14208:	cmp	r0, #0
   1420c:	beq	147a8 <__assert_fail@plt+0x2830>
   14210:	movw	r0, #58945	; 0xe641
   14214:	cmp	r8, #0
   14218:	movt	r0, #1
   1421c:	moveq	r8, r0
   14220:	mov	r0, r8
   14224:	bl	11bc4 <strdup@plt>
   14228:	cmp	r0, #0
   1422c:	beq	14928 <__assert_fail@plt+0x29b0>
   14230:	movw	r1, #1556	; 0x614
   14234:	movt	r1, #3
   14238:	str	r0, [r1]
   1423c:	b	147a8 <__assert_fail@plt+0x2830>
   14240:	ldr	r0, [sp, #8]
   14244:	mov	r1, #58	; 0x3a
   14248:	str	r0, [r4]
   1424c:	ldr	r0, [r9]
   14250:	str	r0, [r4, #4]
   14254:	ldr	r0, [sp, #20]
   14258:	ldr	r8, [r0]
   1425c:	mov	r0, r8
   14260:	bl	11e34 <strrchr@plt>
   14264:	cmp	r0, #0
   14268:	beq	142ec <__assert_fail@plt+0x2374>
   1426c:	movw	r1, #57835	; 0xe1eb
   14270:	mov	r6, r0
   14274:	mov	r0, #0
   14278:	movt	r1, #1
   1427c:	strb	r0, [r6], #1
   14280:	mov	r0, r8
   14284:	bl	11ab0 <strcmp@plt>
   14288:	cmp	r0, #0
   1428c:	mov	r5, #1
   14290:	beq	142d0 <__assert_fail@plt+0x2358>
   14294:	movw	r0, #58945	; 0xe641
   14298:	cmp	r8, #0
   1429c:	movt	r0, #1
   142a0:	moveq	r8, r0
   142a4:	mov	r0, r8
   142a8:	bl	11bc4 <strdup@plt>
   142ac:	cmp	r0, #0
   142b0:	beq	14928 <__assert_fail@plt+0x29b0>
   142b4:	movw	r2, #1536	; 0x600
   142b8:	mov	r1, #0
   142bc:	movt	r2, #3
   142c0:	str	r1, [r2]
   142c4:	movw	r1, #1544	; 0x608
   142c8:	movt	r1, #3
   142cc:	str	r0, [r1]
   142d0:	mov	r8, r6
   142d4:	b	14334 <__assert_fail@plt+0x23bc>
   142d8:	ldr	r3, [r9]
   142dc:	movw	r1, #58273	; 0xe3a1
   142e0:	mov	r0, #3
   142e4:	movt	r1, #1
   142e8:	b	147a0 <__assert_fail@plt+0x2828>
   142ec:	movw	r0, #1556	; 0x614
   142f0:	mov	r5, #1
   142f4:	movt	r0, #3
   142f8:	ldr	r0, [r0]
   142fc:	cmp	r0, #0
   14300:	beq	14334 <__assert_fail@plt+0x23bc>
   14304:	bl	11bc4 <strdup@plt>
   14308:	cmp	r0, #0
   1430c:	beq	14928 <__assert_fail@plt+0x29b0>
   14310:	movw	r2, #1536	; 0x600
   14314:	mov	r1, #0
   14318:	movt	r2, #3
   1431c:	str	r1, [r2]
   14320:	movw	r1, #1544	; 0x608
   14324:	movt	r1, #3
   14328:	str	r0, [r1]
   1432c:	ldr	r0, [sp, #20]
   14330:	ldr	r8, [r0]
   14334:	movw	r1, #648	; 0x288
   14338:	mov	r0, r8
   1433c:	mov	r2, #7
   14340:	movt	r1, #3
   14344:	bl	11f24 <strncmp@plt>
   14348:	cmp	r0, #0
   1434c:	beq	14384 <__assert_fail@plt+0x240c>
   14350:	movw	r0, #58945	; 0xe641
   14354:	cmp	r8, #0
   14358:	movt	r0, #1
   1435c:	moveq	r8, r0
   14360:	mov	r0, r8
   14364:	bl	11bc4 <strdup@plt>
   14368:	cmp	r0, #0
   1436c:	beq	14928 <__assert_fail@plt+0x29b0>
   14370:	mov	r1, #0
   14374:	mov	r2, r4
   14378:	str	r1, [r4, #64]	; 0x40
   1437c:	str	r0, [r4, #12]
   14380:	b	143b4 <__assert_fail@plt+0x243c>
   14384:	mov	r0, r8
   14388:	mov	r6, r4
   1438c:	ldrb	r1, [r0, #7]!
   14390:	cmp	r1, #43	; 0x2b
   14394:	moveq	r0, #2
   14398:	strne	r5, [r4, #64]	; 0x40
   1439c:	streq	r0, [r4, #64]	; 0x40
   143a0:	addeq	r0, r8, #8
   143a4:	bl	11bc4 <strdup@plt>
   143a8:	cmp	r0, #0
   143ac:	beq	14928 <__assert_fail@plt+0x29b0>
   143b0:	str	r0, [r6, #12]
   143b4:	ldr	r6, [sp, #20]
   143b8:	movw	r1, #58299	; 0xe3bb
   143bc:	movt	r1, #1
   143c0:	ldr	r8, [r6, #4]
   143c4:	mov	r0, r8
   143c8:	bl	11ab0 <strcmp@plt>
   143cc:	cmp	r0, #0
   143d0:	beq	14458 <__assert_fail@plt+0x24e0>
   143d4:	movw	r1, #58306	; 0xe3c2
   143d8:	mov	r0, r8
   143dc:	movt	r1, #1
   143e0:	bl	11ab0 <strcmp@plt>
   143e4:	cmp	r0, #0
   143e8:	beq	14460 <__assert_fail@plt+0x24e8>
   143ec:	movw	r1, #58312	; 0xe3c8
   143f0:	mov	r0, r8
   143f4:	movt	r1, #1
   143f8:	bl	11ab0 <strcmp@plt>
   143fc:	cmp	r0, #0
   14400:	beq	14468 <__assert_fail@plt+0x24f0>
   14404:	movw	r1, #58316	; 0xe3cc
   14408:	mov	r0, r8
   1440c:	movt	r1, #1
   14410:	bl	11ab0 <strcmp@plt>
   14414:	cmp	r0, #0
   14418:	beq	14470 <__assert_fail@plt+0x24f8>
   1441c:	movw	r1, #58326	; 0xe3d6
   14420:	mov	r0, r8
   14424:	movt	r1, #1
   14428:	bl	11ab0 <strcmp@plt>
   1442c:	cmp	r0, #0
   14430:	beq	14478 <__assert_fail@plt+0x2500>
   14434:	ldr	r3, [r9]
   14438:	ldr	r2, [sp, #8]
   1443c:	movw	r1, #58330	; 0xe3da
   14440:	mov	r0, #4
   14444:	movt	r1, #1
   14448:	bl	11e64 <syslog@plt>
   1444c:	ldr	r6, [sp, #20]
   14450:	mvn	r0, #0
   14454:	b	1447c <__assert_fail@plt+0x2504>
   14458:	str	r5, [r4, #16]
   1445c:	b	14480 <__assert_fail@plt+0x2508>
   14460:	mov	r0, #2
   14464:	b	1447c <__assert_fail@plt+0x2504>
   14468:	mov	r0, #4
   1446c:	b	1447c <__assert_fail@plt+0x2504>
   14470:	mov	r0, #5
   14474:	b	1447c <__assert_fail@plt+0x2504>
   14478:	mov	r0, #3
   1447c:	str	r0, [r4, #16]
   14480:	ldr	r0, [r6, #8]
   14484:	movw	r1, #58945	; 0xe641
   14488:	movt	r1, #1
   1448c:	cmp	r0, #0
   14490:	moveq	r0, r1
   14494:	bl	11bc4 <strdup@plt>
   14498:	cmp	r0, #0
   1449c:	beq	14928 <__assert_fail@plt+0x29b0>
   144a0:	mov	r1, #2
   144a4:	strb	r5, [r4, #70]	; 0x46
   144a8:	mov	r2, #3
   144ac:	mov	r8, r0
   144b0:	strh	r1, [r4, #68]	; 0x44
   144b4:	movw	r1, #57915	; 0xe23b
   144b8:	str	r0, [r4, #20]
   144bc:	movt	r1, #1
   144c0:	bl	11f24 <strncmp@plt>
   144c4:	cmp	r0, #0
   144c8:	beq	144e8 <__assert_fail@plt+0x2570>
   144cc:	movw	r1, #58142	; 0xe31e
   144d0:	mov	r0, r8
   144d4:	mov	r2, #3
   144d8:	movt	r1, #1
   144dc:	bl	11f24 <strncmp@plt>
   144e0:	cmp	r0, #0
   144e4:	bne	14518 <__assert_fail@plt+0x25a0>
   144e8:	ldrb	r0, [r8, #3]
   144ec:	cmp	r0, #52	; 0x34
   144f0:	beq	14510 <__assert_fail@plt+0x2598>
   144f4:	cmp	r0, #54	; 0x36
   144f8:	bne	14518 <__assert_fail@plt+0x25a0>
   144fc:	mov	r0, #0
   14500:	mov	r1, r4
   14504:	strb	r0, [r4, #70]	; 0x46
   14508:	mov	r0, #10
   1450c:	b	14514 <__assert_fail@plt+0x259c>
   14510:	mov	r0, #2
   14514:	strh	r0, [r4, #68]	; 0x44
   14518:	ldr	r0, [sp, #20]
   1451c:	mov	r1, #46	; 0x2e
   14520:	ldr	r8, [r0, #12]
   14524:	mov	r0, r8
   14528:	bl	11d44 <strchr@plt>
   1452c:	cmp	r0, #0
   14530:	beq	1454c <__assert_fail@plt+0x25d4>
   14534:	mov	r5, r0
   14538:	mov	r0, #0
   1453c:	strb	r0, [r5], #1
   14540:	ldr	r0, [sp, #20]
   14544:	ldr	r8, [r0, #12]
   14548:	b	14550 <__assert_fail@plt+0x25d8>
   1454c:	mov	r5, #0
   14550:	movw	r1, #58356	; 0xe3f4
   14554:	mov	r0, r8
   14558:	movt	r1, #1
   1455c:	bl	11ab0 <strcmp@plt>
   14560:	cmp	r0, #0
   14564:	beq	145ac <__assert_fail@plt+0x2634>
   14568:	movw	r1, #58354	; 0xe3f2
   1456c:	mov	r0, r8
   14570:	movt	r1, #1
   14574:	bl	11ab0 <strcmp@plt>
   14578:	cmp	r0, #0
   1457c:	beq	145c8 <__assert_fail@plt+0x2650>
   14580:	ldr	r3, [r9]
   14584:	ldr	r2, [sp, #8]
   14588:	movw	r1, #58361	; 0xe3f9
   1458c:	mov	r0, #4
   14590:	movt	r1, #1
   14594:	bl	11e64 <syslog@plt>
   14598:	mov	r8, #0
   1459c:	mov	r6, r4
   145a0:	cmp	r5, #0
   145a4:	bne	145dc <__assert_fail@plt+0x2664>
   145a8:	b	1461c <__assert_fail@plt+0x26a4>
   145ac:	mov	r0, #1
   145b0:	mov	r6, r4
   145b4:	mov	r8, #0
   145b8:	str	r0, [r4, #24]
   145bc:	cmp	r5, #0
   145c0:	bne	145dc <__assert_fail@plt+0x2664>
   145c4:	b	1461c <__assert_fail@plt+0x26a4>
   145c8:	mov	r8, #0
   145cc:	mov	r6, r4
   145d0:	str	r8, [r4, #24]
   145d4:	cmp	r5, #0
   145d8:	beq	1461c <__assert_fail@plt+0x26a4>
   145dc:	mov	r0, r5
   145e0:	add	r1, sp, #16
   145e4:	mov	r2, #10
   145e8:	bl	11d20 <strtoul@plt>
   145ec:	str	r0, [r6, #28]
   145f0:	ldr	r0, [sp, #16]
   145f4:	ldrb	r0, [r0]
   145f8:	cmp	r0, #0
   145fc:	beq	1461c <__assert_fail@plt+0x26a4>
   14600:	ldr	r3, [r9]
   14604:	ldr	r2, [sp, #8]
   14608:	movw	r1, #58383	; 0xe40f
   1460c:	mov	r0, #4
   14610:	str	r5, [sp]
   14614:	movt	r1, #1
   14618:	bl	11e64 <syslog@plt>
   1461c:	ldr	r0, [r6, #64]	; 0x40
   14620:	sub	r0, r0, #1
   14624:	cmp	r0, #1
   14628:	bhi	14674 <__assert_fail@plt+0x26fc>
   1462c:	str	r8, [r6, #24]
   14630:	movw	r1, #57915	; 0xe23b
   14634:	mov	r2, #3
   14638:	ldr	r0, [r6, #20]
   1463c:	movt	r1, #1
   14640:	bl	11f24 <strncmp@plt>
   14644:	cmp	r0, #0
   14648:	beq	14668 <__assert_fail@plt+0x26f0>
   1464c:	ldr	r0, [r6, #12]
   14650:	ldr	r3, [r9]
   14654:	movw	r1, #58411	; 0xe42b
   14658:	movt	r1, #1
   1465c:	str	r0, [sp]
   14660:	mov	r0, #3
   14664:	b	147a0 <__assert_fail@plt+0x2828>
   14668:	ldr	r0, [r6, #16]
   1466c:	cmp	r0, #1
   14670:	bne	147c4 <__assert_fail@plt+0x284c>
   14674:	ldr	r0, [sp, #20]
   14678:	movw	r1, #58945	; 0xe641
   1467c:	movt	r1, #1
   14680:	ldr	r0, [r0, #16]
   14684:	cmp	r0, #0
   14688:	moveq	r0, r1
   1468c:	bl	11bc4 <strdup@plt>
   14690:	cmp	r0, #0
   14694:	beq	14928 <__assert_fail@plt+0x29b0>
   14698:	mov	r1, #58	; 0x3a
   1469c:	mov	r8, r0
   146a0:	str	r0, [r4, #36]	; 0x24
   146a4:	bl	11d44 <strchr@plt>
   146a8:	movw	r5, #456	; 0x1c8
   146ac:	cmp	r0, #0
   146b0:	movt	r5, #3
   146b4:	bne	146cc <__assert_fail@plt+0x2754>
   146b8:	mov	r0, r8
   146bc:	mov	r1, #46	; 0x2e
   146c0:	bl	11d44 <strchr@plt>
   146c4:	cmp	r0, #0
   146c8:	beq	147e0 <__assert_fail@plt+0x2868>
   146cc:	mov	r8, #0
   146d0:	strb	r8, [r0], #1
   146d4:	bl	11bc4 <strdup@plt>
   146d8:	cmp	r0, #0
   146dc:	beq	14928 <__assert_fail@plt+0x29b0>
   146e0:	str	r0, [r4, #40]	; 0x28
   146e4:	ldr	r0, [sp, #20]
   146e8:	movw	r1, #58945	; 0xe641
   146ec:	mov	r6, r4
   146f0:	movt	r1, #1
   146f4:	ldr	r0, [r0, #20]
   146f8:	cmp	r0, #0
   146fc:	moveq	r0, r1
   14700:	bl	11bc4 <strdup@plt>
   14704:	cmp	r0, #0
   14708:	beq	14928 <__assert_fail@plt+0x29b0>
   1470c:	movw	r1, #58500	; 0xe484
   14710:	str	r0, [r6, #48]	; 0x30
   14714:	movt	r1, #1
   14718:	bl	11ab0 <strcmp@plt>
   1471c:	cmp	r0, #0
   14720:	bne	1491c <__assert_fail@plt+0x29a4>
   14724:	ldr	r0, [r5]
   14728:	cmp	r0, #0
   1472c:	beq	14784 <__assert_fail@plt+0x280c>
   14730:	ldr	r1, [r6, #12]
   14734:	ldr	r6, [r6, #16]
   14738:	mov	r8, r5
   1473c:	ldr	r2, [r8, #4]
   14740:	cmp	r2, r6
   14744:	beq	14760 <__assert_fail@plt+0x27e8>
   14748:	ldr	r0, [r8, #16]!
   1474c:	cmp	r0, #0
   14750:	beq	14778 <__assert_fail@plt+0x2800>
   14754:	ldr	r2, [r8, #4]
   14758:	cmp	r2, r6
   1475c:	bne	14748 <__assert_fail@plt+0x27d0>
   14760:	mov	r5, r1
   14764:	bl	11ab0 <strcmp@plt>
   14768:	mov	r1, r5
   1476c:	cmp	r0, #0
   14770:	bne	14748 <__assert_fail@plt+0x27d0>
   14774:	b	1480c <__assert_fail@plt+0x2894>
   14778:	mov	r8, #0
   1477c:	mov	r6, r4
   14780:	b	14788 <__assert_fail@plt+0x2810>
   14784:	ldr	r1, [r6, #12]
   14788:	str	r8, [r6, #44]	; 0x2c
   1478c:	mov	r0, #3
   14790:	ldr	r3, [r9]
   14794:	str	r1, [sp]
   14798:	movw	r1, #58509	; 0xe48d
   1479c:	movt	r1, #1
   147a0:	ldr	r2, [sp, #8]
   147a4:	bl	11e64 <syslog@plt>
   147a8:	ldr	r1, [sp, #20]
   147ac:	ldr	r0, [sp, #24]
   147b0:	ldr	r6, [sp, #12]
   147b4:	movw	r5, #1188	; 0x4a4
   147b8:	mov	r8, #0
   147bc:	movt	r5, #3
   147c0:	b	140bc <__assert_fail@plt+0x2144>
   147c4:	ldr	r0, [r6, #12]
   147c8:	ldr	r3, [r9]
   147cc:	movw	r1, #58454	; 0xe456
   147d0:	movt	r1, #1
   147d4:	str	r0, [sp]
   147d8:	mov	r0, #3
   147dc:	b	147a0 <__assert_fail@plt+0x2828>
   147e0:	movw	r0, #58945	; 0xe641
   147e4:	movt	r0, #1
   147e8:	bl	11bc4 <strdup@plt>
   147ec:	cmp	r0, #0
   147f0:	mov	r8, #0
   147f4:	bne	146e0 <__assert_fail@plt+0x2768>
   147f8:	b	14928 <__assert_fail@plt+0x29b0>
   147fc:	mov	r6, #0
   14800:	mov	r0, r6
   14804:	sub	sp, fp, #28
   14808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1480c:	ldrsh	r1, [r8, #10]
   14810:	movw	r0, #960	; 0x3c0
   14814:	mov	r6, r4
   14818:	movt	r0, #3
   1481c:	str	r8, [r0, #44]	; 0x2c
   14820:	str	r1, [r0, #24]
   14824:	ldr	r0, [sp, #24]
   14828:	sub	r1, r0, #5
   1482c:	sub	r0, r0, #4
   14830:	str	r1, [r6, #56]	; 0x38
   14834:	mov	r1, #4
   14838:	bl	185b4 <argp_parse@@Base+0x1b10>
   1483c:	cmp	r0, #0
   14840:	str	r0, [r6, #52]	; 0x34
   14844:	beq	14940 <__assert_fail@plt+0x29c8>
   14848:	ldr	r1, [r6, #56]	; 0x38
   1484c:	mov	r5, #0
   14850:	mov	r7, #0
   14854:	cmp	r1, #0
   14858:	beq	14904 <__assert_fail@plt+0x298c>
   1485c:	ldr	r2, [sp, #20]
   14860:	mov	r7, #1
   14864:	cmp	r1, #1
   14868:	ldr	r3, [r2, #24]
   1486c:	str	r3, [r0]
   14870:	mov	r0, #0
   14874:	str	r0, [r2, #24]
   14878:	beq	148bc <__assert_fail@plt+0x2944>
   1487c:	mov	r2, #0
   14880:	ldr	r7, [sp, #20]
   14884:	ldr	r3, [r6, #52]	; 0x34
   14888:	add	r7, r7, r2, lsl #2
   1488c:	add	r3, r3, r2, lsl #2
   14890:	ldr	r7, [r7, #28]
   14894:	str	r7, [r3, #4]
   14898:	ldr	r3, [sp, #20]
   1489c:	add	r3, r3, r2, lsl #2
   148a0:	str	r0, [r3, #28]
   148a4:	add	r3, r2, #1
   148a8:	add	r2, r2, #2
   148ac:	cmp	r2, r1
   148b0:	mov	r2, r3
   148b4:	bcc	14880 <__assert_fail@plt+0x2908>
   148b8:	add	r7, r3, #1
   148bc:	cmp	r1, #1
   148c0:	bne	14904 <__assert_fail@plt+0x298c>
   148c4:	ldr	r4, [r6, #48]	; 0x30
   148c8:	mov	r1, #47	; 0x2f
   148cc:	mov	r0, r4
   148d0:	bl	11e34 <strrchr@plt>
   148d4:	cmp	r0, #0
   148d8:	addne	r4, r0, #1
   148dc:	movw	r0, #58945	; 0xe641
   148e0:	movt	r0, #1
   148e4:	cmp	r4, #0
   148e8:	moveq	r4, r0
   148ec:	mov	r0, r4
   148f0:	bl	11bc4 <strdup@plt>
   148f4:	cmp	r0, #0
   148f8:	beq	14928 <__assert_fail@plt+0x29b0>
   148fc:	ldr	r1, [r6, #52]	; 0x34
   14900:	str	r0, [r1]
   14904:	ldr	r0, [r6, #52]	; 0x34
   14908:	str	r5, [r0, r7, lsl #2]
   1490c:	ldr	r1, [sp, #20]
   14910:	ldr	r0, [sp, #24]
   14914:	bl	167a4 <__assert_fail@plt+0x482c>
   14918:	b	14070 <__assert_fail@plt+0x20f8>
   1491c:	mov	r0, #0
   14920:	str	r0, [r6, #44]	; 0x2c
   14924:	b	14824 <__assert_fail@plt+0x28ac>
   14928:	movw	r1, #57719	; 0xe177
   1492c:	mov	r0, #3
   14930:	movt	r1, #1
   14934:	bl	11e64 <syslog@plt>
   14938:	mvn	r0, #0
   1493c:	bl	11d08 <exit@plt>
   14940:	ldr	r3, [r9]
   14944:	ldr	r2, [sp, #8]
   14948:	movw	r1, #58545	; 0xe4b1
   1494c:	mov	r0, #3
   14950:	movt	r1, #1
   14954:	bl	11e64 <syslog@plt>
   14958:	mvn	r0, #0
   1495c:	bl	11d08 <exit@plt>
   14960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14964:	add	fp, sp, #28
   14968:	sub	sp, sp, #324	; 0x144
   1496c:	movw	r1, #57556	; 0xe0d4
   14970:	mov	r4, r0
   14974:	mov	r0, #0
   14978:	movt	r1, #1
   1497c:	str	r0, [sp, #60]	; 0x3c
   14980:	mov	r0, r4
   14984:	bl	11ec4 <fopen64@plt>
   14988:	cmp	r0, #0
   1498c:	beq	14d1c <__assert_fail@plt+0x2da4>
   14990:	add	r2, sp, #60	; 0x3c
   14994:	mov	r1, r4
   14998:	mov	r5, r0
   1499c:	bl	14038 <__assert_fail@plt+0x20c0>
   149a0:	cmp	r0, #0
   149a4:	beq	14ad4 <__assert_fail@plt+0x2b5c>
   149a8:	movw	r9, #58568	; 0xe4c8
   149ac:	movw	sl, #1544	; 0x608
   149b0:	mov	r6, r0
   149b4:	add	r7, sp, #60	; 0x3c
   149b8:	movt	r9, #1
   149bc:	movt	sl, #3
   149c0:	ldr	r0, [r6, #36]	; 0x24
   149c4:	bl	11aa4 <getpwnam@plt>
   149c8:	cmp	r0, #0
   149cc:	bne	14a18 <__assert_fail@plt+0x2aa0>
   149d0:	ldr	r0, [r6, #36]	; 0x24
   149d4:	ldr	r2, [r6, #12]
   149d8:	ldr	r3, [r6, #20]
   149dc:	mov	r1, r9
   149e0:	str	r0, [sp]
   149e4:	mov	r0, #3
   149e8:	bl	11e64 <syslog@plt>
   149ec:	mov	r0, r5
   149f0:	mov	r1, r4
   149f4:	mov	r2, r7
   149f8:	bl	14038 <__assert_fail@plt+0x20c0>
   149fc:	mov	r6, r0
   14a00:	cmp	r0, #0
   14a04:	beq	14ad4 <__assert_fail@plt+0x2b5c>
   14a08:	ldr	r0, [r6, #36]	; 0x24
   14a0c:	bl	11aa4 <getpwnam@plt>
   14a10:	cmp	r0, #0
   14a14:	beq	149d0 <__assert_fail@plt+0x2a58>
   14a18:	ldr	r0, [r6, #40]	; 0x28
   14a1c:	cmp	r0, #0
   14a20:	beq	14a3c <__assert_fail@plt+0x2ac4>
   14a24:	ldrb	r1, [r0]
   14a28:	cmp	r1, #0
   14a2c:	beq	14a3c <__assert_fail@plt+0x2ac4>
   14a30:	bl	11f60 <getgrnam@plt>
   14a34:	cmp	r0, #0
   14a38:	beq	14abc <__assert_fail@plt+0x2b44>
   14a3c:	ldr	r0, [r6, #64]	; 0x40
   14a40:	sub	r0, r0, #1
   14a44:	cmp	r0, #1
   14a48:	bhi	14a68 <__assert_fail@plt+0x2af0>
   14a4c:	mov	r0, #1
   14a50:	strh	r0, [r6, #32]
   14a54:	mvn	r0, #0
   14a58:	str	r0, [r6, #60]	; 0x3c
   14a5c:	mov	r0, r6
   14a60:	bl	13468 <__assert_fail@plt+0x14f0>
   14a64:	b	14a70 <__assert_fail@plt+0x2af8>
   14a68:	mov	r0, r6
   14a6c:	bl	13b9c <__assert_fail@plt+0x1c24>
   14a70:	ldr	r0, [r6, #8]
   14a74:	ldr	r8, [sl]
   14a78:	bl	17e80 <argp_parse@@Base+0x13dc>
   14a7c:	cmp	r8, #0
   14a80:	bne	149ec <__assert_fail@plt+0x2a74>
   14a84:	ldr	r0, [r6, #12]
   14a88:	bl	17e80 <argp_parse@@Base+0x13dc>
   14a8c:	ldr	r0, [r6, #20]
   14a90:	bl	17e80 <argp_parse@@Base+0x13dc>
   14a94:	ldr	r0, [r6, #36]	; 0x24
   14a98:	bl	17e80 <argp_parse@@Base+0x13dc>
   14a9c:	ldr	r0, [r6, #40]	; 0x28
   14aa0:	bl	17e80 <argp_parse@@Base+0x13dc>
   14aa4:	ldr	r0, [r6, #48]	; 0x30
   14aa8:	bl	17e80 <argp_parse@@Base+0x13dc>
   14aac:	ldr	r1, [r6, #52]	; 0x34
   14ab0:	ldr	r0, [r6, #56]	; 0x38
   14ab4:	bl	167a4 <__assert_fail@plt+0x482c>
   14ab8:	b	149ec <__assert_fail@plt+0x2a74>
   14abc:	ldr	r0, [r6, #40]	; 0x28
   14ac0:	ldr	r2, [r6, #12]
   14ac4:	ldr	r3, [r6, #20]
   14ac8:	movw	r1, #58610	; 0xe4f2
   14acc:	movt	r1, #1
   14ad0:	b	149e0 <__assert_fail@plt+0x2a68>
   14ad4:	mov	r0, r5
   14ad8:	bl	11dec <fclose@plt>
   14adc:	sub	r4, fp, #160	; 0xa0
   14ae0:	mov	r0, r4
   14ae4:	bl	11e10 <sigemptyset@plt>
   14ae8:	mov	r0, r4
   14aec:	mov	r1, #17
   14af0:	bl	11cb4 <sigaddset@plt>
   14af4:	mov	r0, r4
   14af8:	mov	r1, #1
   14afc:	mov	r6, #1
   14b00:	bl	11cb4 <sigaddset@plt>
   14b04:	mov	r0, r4
   14b08:	mov	r1, #14
   14b0c:	bl	11cb4 <sigaddset@plt>
   14b10:	add	r2, sp, #64	; 0x40
   14b14:	mov	r0, #0
   14b18:	mov	r1, r4
   14b1c:	mov	r7, #0
   14b20:	bl	11b10 <sigprocmask@plt>
   14b24:	movw	r5, #1552	; 0x610
   14b28:	movt	r5, #3
   14b2c:	ldr	r4, [r5]
   14b30:	cmp	r4, #0
   14b34:	beq	14d04 <__assert_fail@plt+0x2d8c>
   14b38:	movw	sl, #1520	; 0x5f0
   14b3c:	movw	r8, #1388	; 0x56c
   14b40:	movw	r9, #1188	; 0x4a4
   14b44:	movt	sl, #3
   14b48:	movt	r8, #3
   14b4c:	movt	r9, #3
   14b50:	ldrh	r0, [r4, #32]
   14b54:	cmp	r0, #0
   14b58:	beq	14bc8 <__assert_fail@plt+0x2c50>
   14b5c:	b	14c60 <__assert_fail@plt+0x2ce8>
   14b60:	ldrb	r0, [r9]
   14b64:	cmp	r0, #0
   14b68:	bne	14c1c <__assert_fail@plt+0x2ca4>
   14b6c:	ldr	r0, [r4, #8]
   14b70:	bl	17e80 <argp_parse@@Base+0x13dc>
   14b74:	ldr	r0, [r4, #12]
   14b78:	bl	17e80 <argp_parse@@Base+0x13dc>
   14b7c:	ldr	r0, [r4, #20]
   14b80:	bl	17e80 <argp_parse@@Base+0x13dc>
   14b84:	ldr	r0, [r4, #36]	; 0x24
   14b88:	bl	17e80 <argp_parse@@Base+0x13dc>
   14b8c:	ldr	r0, [r4, #40]	; 0x28
   14b90:	bl	17e80 <argp_parse@@Base+0x13dc>
   14b94:	ldr	r0, [r4, #48]	; 0x30
   14b98:	bl	17e80 <argp_parse@@Base+0x13dc>
   14b9c:	ldr	r1, [r4, #52]	; 0x34
   14ba0:	ldr	r0, [r4, #56]	; 0x38
   14ba4:	bl	167a4 <__assert_fail@plt+0x482c>
   14ba8:	mov	r0, r4
   14bac:	bl	17e80 <argp_parse@@Base+0x13dc>
   14bb0:	ldr	r4, [r5]
   14bb4:	cmp	r4, #0
   14bb8:	beq	14d04 <__assert_fail@plt+0x2d8c>
   14bbc:	ldrh	r0, [r4, #32]
   14bc0:	cmp	r0, #0
   14bc4:	bne	14c60 <__assert_fail@plt+0x2ce8>
   14bc8:	ldr	r0, [r4, #220]	; 0xdc
   14bcc:	str	r0, [r5]
   14bd0:	ldr	r0, [r4, #60]	; 0x3c
   14bd4:	cmp	r0, #0
   14bd8:	bmi	14b60 <__assert_fail@plt+0x2be8>
   14bdc:	ldr	r1, [sl]
   14be0:	and	r3, r0, #31
   14be4:	sub	r1, r1, #1
   14be8:	str	r1, [sl]
   14bec:	lsr	r1, r0, #5
   14bf0:	ldr	r2, [r8, r1, lsl #2]
   14bf4:	bic	r2, r2, r6, lsl r3
   14bf8:	str	r2, [r8, r1, lsl #2]
   14bfc:	bl	11f48 <close@plt>
   14c00:	mvn	r0, #0
   14c04:	str	r7, [r4, #208]	; 0xd0
   14c08:	str	r0, [r4, #60]	; 0x3c
   14c0c:	ldr	r0, [r4, #24]
   14c10:	cmp	r0, #2
   14c14:	strge	r6, [r4, #24]
   14c18:	b	14b60 <__assert_fail@plt+0x2be8>
   14c1c:	movw	r0, #944	; 0x3b0
   14c20:	ldm	r4, {r2, r7}
   14c24:	str	r7, [sp, #48]	; 0x30
   14c28:	movt	r0, #3
   14c2c:	ldr	r3, [r0]
   14c30:	ldr	r0, [r4, #64]	; 0x40
   14c34:	str	r2, [sp, #56]	; 0x38
   14c38:	sub	r1, r0, #1
   14c3c:	str	r3, [sp, #52]	; 0x34
   14c40:	cmp	r1, #1
   14c44:	bhi	14c74 <__assert_fail@plt+0x2cfc>
   14c48:	movw	r1, #58662	; 0xe526
   14c4c:	cmp	r0, #2
   14c50:	movw	r0, #57824	; 0xe1e0
   14c54:	movt	r1, #1
   14c58:	movt	r0, #1
   14c5c:	b	14c84 <__assert_fail@plt+0x2d0c>
   14c60:	add	r5, r4, #220	; 0xdc
   14c64:	ldr	r4, [r5]
   14c68:	cmp	r4, #0
   14c6c:	bne	14bbc <__assert_fail@plt+0x2c44>
   14c70:	b	14d04 <__assert_fail@plt+0x2d8c>
   14c74:	ldr	r1, [r4, #8]
   14c78:	movw	r0, #57835	; 0xe1eb
   14c7c:	movt	r0, #1
   14c80:	cmp	r1, #0
   14c84:	moveq	r1, r0
   14c88:	ldr	r0, [r4, #40]	; 0x28
   14c8c:	movw	lr, #57837	; 0xe1ed
   14c90:	ldr	r7, [r4, #36]	; 0x24
   14c94:	ldr	r6, [r4, #12]
   14c98:	ldr	ip, [r4, #20]
   14c9c:	ldr	r2, [r4, #24]
   14ca0:	ldr	r3, [r4, #28]
   14ca4:	movt	lr, #1
   14ca8:	str	r0, [sp, #44]	; 0x2c
   14cac:	ldr	r0, [r4, #44]	; 0x2c
   14cb0:	cmp	r0, #0
   14cb4:	ldrne	lr, [r0]
   14cb8:	ldr	r0, [r4, #48]	; 0x30
   14cbc:	str	r0, [sp, #36]	; 0x24
   14cc0:	movw	r0, #58653	; 0xe51d
   14cc4:	str	lr, [sp, #32]
   14cc8:	movt	r0, #1
   14ccc:	stm	sp, {r0, r1, r6, ip}
   14cd0:	add	r0, sp, #16
   14cd4:	movw	r1, #57741	; 0xe18d
   14cd8:	stm	r0, {r2, r3, r7}
   14cdc:	ldr	r0, [sp, #44]	; 0x2c
   14ce0:	ldr	r2, [sp, #56]	; 0x38
   14ce4:	ldr	r3, [sp, #48]	; 0x30
   14ce8:	movt	r1, #1
   14cec:	str	r0, [sp, #28]
   14cf0:	ldr	r0, [sp, #52]	; 0x34
   14cf4:	bl	11d5c <fprintf@plt>
   14cf8:	mov	r7, #0
   14cfc:	mov	r6, #1
   14d00:	b	14b6c <__assert_fail@plt+0x2bf4>
   14d04:	add	r1, sp, #64	; 0x40
   14d08:	mov	r0, #2
   14d0c:	mov	r2, #0
   14d10:	bl	11b10 <sigprocmask@plt>
   14d14:	sub	sp, fp, #28
   14d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d1c:	movw	r1, #57648	; 0xe130
   14d20:	mov	r0, #3
   14d24:	mov	r2, r4
   14d28:	movt	r1, #1
   14d2c:	bl	11e64 <syslog@plt>
   14d30:	sub	sp, fp, #28
   14d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d38:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d3c:	add	fp, sp, #24
   14d40:	sub	sp, sp, #224	; 0xe0
   14d44:	movw	r0, #1552	; 0x610
   14d48:	movt	r0, #3
   14d4c:	ldr	r5, [r0]
   14d50:	cmp	r5, #0
   14d54:	beq	14f38 <__assert_fail@plt+0x2fc0>
   14d58:	movw	r4, #58662	; 0xe526
   14d5c:	mov	r6, #0
   14d60:	mov	r7, #0
   14d64:	movt	r4, #1
   14d68:	ldrh	r0, [r5, #32]
   14d6c:	cmp	r0, #0
   14d70:	bne	14da4 <__assert_fail@plt+0x2e2c>
   14d74:	b	14d8c <__assert_fail@plt+0x2e14>
   14d78:	ldr	r0, [r5, #12]
   14d7c:	mov	r1, r4
   14d80:	bl	11ab0 <strcmp@plt>
   14d84:	cmp	r0, #0
   14d88:	beq	14dc4 <__assert_fail@plt+0x2e4c>
   14d8c:	ldr	r5, [r5, #220]	; 0xdc
   14d90:	cmp	r5, #0
   14d94:	beq	14de0 <__assert_fail@plt+0x2e68>
   14d98:	ldrh	r0, [r5, #32]
   14d9c:	cmp	r0, #0
   14da0:	beq	14d8c <__assert_fail@plt+0x2e14>
   14da4:	ldr	r0, [r5, #64]	; 0x40
   14da8:	sub	r0, r0, #1
   14dac:	cmp	r0, #1
   14db0:	bhi	14d78 <__assert_fail@plt+0x2e00>
   14db4:	mov	r7, #1
   14db8:	cmp	r6, #0
   14dbc:	beq	14d78 <__assert_fail@plt+0x2e00>
   14dc0:	b	14f38 <__assert_fail@plt+0x2fc0>
   14dc4:	cmp	r7, #0
   14dc8:	bne	14f38 <__assert_fail@plt+0x2fc0>
   14dcc:	mov	r6, #1
   14dd0:	mov	r7, #0
   14dd4:	ldr	r5, [r5, #220]	; 0xdc
   14dd8:	cmp	r5, #0
   14ddc:	bne	14d98 <__assert_fail@plt+0x2e20>
   14de0:	cmp	r7, #0
   14de4:	beq	14f38 <__assert_fail@plt+0x2fc0>
   14de8:	cmp	r6, #0
   14dec:	bne	14f38 <__assert_fail@plt+0x2fc0>
   14df0:	mov	r0, sp
   14df4:	mov	r1, #0
   14df8:	mov	r2, #220	; 0xdc
   14dfc:	add	r0, r0, #4
   14e00:	bl	11da4 <memset@plt>
   14e04:	movw	r0, #58658	; 0xe522
   14e08:	movt	r0, #1
   14e0c:	str	r0, [sp]
   14e10:	movw	r0, #58662	; 0xe526
   14e14:	movt	r0, #1
   14e18:	bl	11bc4 <strdup@plt>
   14e1c:	cmp	r0, #0
   14e20:	beq	14ff8 <__assert_fail@plt+0x3080>
   14e24:	mov	r4, r0
   14e28:	mov	r0, #1
   14e2c:	strh	r0, [sp, #32]
   14e30:	str	r0, [sp, #16]
   14e34:	movw	r0, #58669	; 0xe52d
   14e38:	str	r4, [sp, #12]
   14e3c:	movt	r0, #1
   14e40:	bl	11bc4 <strdup@plt>
   14e44:	cmp	r0, #0
   14e48:	beq	14ff8 <__assert_fail@plt+0x3080>
   14e4c:	mov	r5, r0
   14e50:	str	r0, [sp, #36]	; 0x24
   14e54:	movw	r0, #58945	; 0xe641
   14e58:	movt	r0, #1
   14e5c:	bl	11bc4 <strdup@plt>
   14e60:	cmp	r0, #0
   14e64:	beq	14ff8 <__assert_fail@plt+0x3080>
   14e68:	movw	r7, #456	; 0x1c8
   14e6c:	mov	r6, r0
   14e70:	str	r0, [sp, #40]	; 0x28
   14e74:	movt	r7, #3
   14e78:	ldr	r0, [r7]
   14e7c:	cmp	r0, #0
   14e80:	bne	14e94 <__assert_fail@plt+0x2f1c>
   14e84:	b	14f40 <__assert_fail@plt+0x2fc8>
   14e88:	ldr	r0, [r7, #16]!
   14e8c:	cmp	r0, #0
   14e90:	beq	14f40 <__assert_fail@plt+0x2fc8>
   14e94:	ldr	r1, [r7, #4]
   14e98:	cmp	r1, #1
   14e9c:	bne	14e88 <__assert_fail@plt+0x2f10>
   14ea0:	mov	r1, r4
   14ea4:	bl	11ab0 <strcmp@plt>
   14ea8:	cmp	r0, #0
   14eac:	bne	14e88 <__assert_fail@plt+0x2f10>
   14eb0:	ldrsh	r0, [r7, #10]
   14eb4:	str	r7, [sp, #44]	; 0x2c
   14eb8:	str	r0, [sp, #24]
   14ebc:	movw	r0, #58500	; 0xe484
   14ec0:	movt	r0, #1
   14ec4:	bl	11bc4 <strdup@plt>
   14ec8:	cmp	r0, #0
   14ecc:	beq	14ff8 <__assert_fail@plt+0x3080>
   14ed0:	mov	r1, #0
   14ed4:	str	r1, [sp, #64]	; 0x40
   14ed8:	mvn	r1, #0
   14edc:	str	r1, [sp, #60]	; 0x3c
   14ee0:	str	r0, [sp, #48]	; 0x30
   14ee4:	movw	r0, #58721	; 0xe561
   14ee8:	movt	r0, #1
   14eec:	bl	11bc4 <strdup@plt>
   14ef0:	cmp	r0, #0
   14ef4:	beq	14ff8 <__assert_fail@plt+0x3080>
   14ef8:	mov	r1, #1
   14efc:	strb	r1, [sp, #70]	; 0x46
   14f00:	mov	r1, #10
   14f04:	strh	r1, [sp, #68]	; 0x44
   14f08:	str	r0, [sp, #20]
   14f0c:	movw	r0, #1188	; 0x4a4
   14f10:	movt	r0, #3
   14f14:	ldrb	r0, [r0]
   14f18:	cmp	r0, #0
   14f1c:	bne	14fd4 <__assert_fail@plt+0x305c>
   14f20:	movw	r1, #58758	; 0xe586
   14f24:	mov	r0, #6
   14f28:	movt	r1, #1
   14f2c:	bl	11e64 <syslog@plt>
   14f30:	mov	r0, sp
   14f34:	bl	13b9c <__assert_fail@plt+0x1c24>
   14f38:	sub	sp, fp, #24
   14f3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14f40:	mov	r0, #0
   14f44:	str	r0, [sp, #44]	; 0x2c
   14f48:	mov	r0, #0
   14f4c:	bl	17e80 <argp_parse@@Base+0x13dc>
   14f50:	mov	r0, r4
   14f54:	bl	17e80 <argp_parse@@Base+0x13dc>
   14f58:	mov	r0, #0
   14f5c:	bl	17e80 <argp_parse@@Base+0x13dc>
   14f60:	mov	r0, r5
   14f64:	bl	17e80 <argp_parse@@Base+0x13dc>
   14f68:	mov	r0, r6
   14f6c:	bl	17e80 <argp_parse@@Base+0x13dc>
   14f70:	mov	r0, #0
   14f74:	bl	17e80 <argp_parse@@Base+0x13dc>
   14f78:	mov	r0, #0
   14f7c:	mov	r1, #0
   14f80:	bl	167a4 <__assert_fail@plt+0x482c>
   14f84:	movw	r0, #1188	; 0x4a4
   14f88:	movt	r0, #3
   14f8c:	ldrb	r0, [r0]
   14f90:	cmp	r0, #0
   14f94:	bne	14fb0 <__assert_fail@plt+0x3038>
   14f98:	movw	r1, #58674	; 0xe532
   14f9c:	mov	r0, #3
   14fa0:	movt	r1, #1
   14fa4:	bl	11e64 <syslog@plt>
   14fa8:	sub	sp, fp, #24
   14fac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14fb0:	movw	r0, #944	; 0x3b0
   14fb4:	mov	r1, #46	; 0x2e
   14fb8:	mov	r2, #1
   14fbc:	movt	r0, #3
   14fc0:	ldr	r3, [r0]
   14fc4:	movw	r0, #58674	; 0xe532
   14fc8:	movt	r0, #1
   14fcc:	bl	11c48 <fwrite@plt>
   14fd0:	b	14f98 <__assert_fail@plt+0x3020>
   14fd4:	movw	r0, #944	; 0x3b0
   14fd8:	mov	r1, #31
   14fdc:	mov	r2, #1
   14fe0:	movt	r0, #3
   14fe4:	ldr	r3, [r0]
   14fe8:	movw	r0, #58726	; 0xe566
   14fec:	movt	r0, #1
   14ff0:	bl	11c48 <fwrite@plt>
   14ff4:	b	14f20 <__assert_fail@plt+0x2fa8>
   14ff8:	movw	r1, #57719	; 0xe177
   14ffc:	mov	r0, #3
   15000:	movt	r1, #1
   15004:	bl	11e64 <syslog@plt>
   15008:	mvn	r0, #0
   1500c:	bl	11d08 <exit@plt>
   15010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15014:	add	fp, sp, #28
   15018:	sub	sp, sp, #212	; 0xd4
   1501c:	movw	r1, #1552	; 0x610
   15020:	movt	r1, #3
   15024:	ldr	r1, [r1]
   15028:	cmp	r1, #0
   1502c:	beq	15044 <__assert_fail@plt+0x30cc>
   15030:	mov	r2, #0
   15034:	strh	r2, [r1, #32]
   15038:	ldr	r1, [r1, #220]	; 0xdc
   1503c:	cmp	r1, #0
   15040:	bne	15034 <__assert_fail@plt+0x30bc>
   15044:	movw	r9, #1548	; 0x60c
   15048:	movt	r9, #3
   1504c:	ldr	r1, [r9]
   15050:	ldr	r1, [r1]
   15054:	cmp	r1, #0
   15058:	beq	15318 <__assert_fail@plt+0x33a0>
   1505c:	mov	sl, #0
   15060:	mov	r4, sp
   15064:	cmp	r0, #0
   15068:	beq	151bc <__assert_fail@plt+0x3244>
   1506c:	movw	r5, #57648	; 0xe130
   15070:	movt	r5, #1
   15074:	b	150a0 <__assert_fail@plt+0x3128>
   15078:	ldr	r0, [r9]
   1507c:	mov	r1, r5
   15080:	ldr	r2, [r0, sl, lsl #2]
   15084:	mov	r0, #3
   15088:	bl	11e64 <syslog@plt>
   1508c:	ldr	r0, [r9]
   15090:	add	sl, sl, #1
   15094:	ldr	r1, [r0, sl, lsl #2]
   15098:	cmp	r1, #0
   1509c:	beq	15318 <__assert_fail@plt+0x33a0>
   150a0:	mov	r0, #3
   150a4:	mov	r2, r4
   150a8:	bl	11f0c <__xstat64@plt>
   150ac:	cmp	r0, #0
   150b0:	bne	15078 <__assert_fail@plt+0x3100>
   150b4:	ldr	r0, [sp, #16]
   150b8:	and	r0, r0, #61440	; 0xf000
   150bc:	cmp	r0, #32768	; 0x8000
   150c0:	beq	15198 <__assert_fail@plt+0x3220>
   150c4:	cmp	r0, #16384	; 0x4000
   150c8:	bne	1508c <__assert_fail@plt+0x3114>
   150cc:	ldr	r0, [r9]
   150d0:	ldr	r0, [r0, sl, lsl #2]
   150d4:	bl	11c78 <opendir@plt>
   150d8:	cmp	r0, #0
   150dc:	beq	1508c <__assert_fail@plt+0x3114>
   150e0:	mov	r7, r0
   150e4:	bl	11e88 <readdir64@plt>
   150e8:	cmp	r0, #0
   150ec:	beq	151a8 <__assert_fail@plt+0x3230>
   150f0:	mov	r5, r0
   150f4:	b	15114 <__assert_fail@plt+0x319c>
   150f8:	mov	r0, r5
   150fc:	bl	17e80 <argp_parse@@Base+0x13dc>
   15100:	mov	r0, r7
   15104:	bl	11e88 <readdir64@plt>
   15108:	mov	r5, r0
   1510c:	cmp	r0, #0
   15110:	beq	151a8 <__assert_fail@plt+0x3230>
   15114:	ldr	r0, [r9]
   15118:	ldr	r0, [r0, sl, lsl #2]
   1511c:	bl	11d2c <strlen@plt>
   15120:	add	r6, r5, #19
   15124:	mov	r8, r0
   15128:	mov	r0, r6
   1512c:	bl	11d2c <strlen@plt>
   15130:	add	r0, r8, r0
   15134:	mov	r1, #1
   15138:	add	r0, r0, #2
   1513c:	bl	185b4 <argp_parse@@Base+0x1b10>
   15140:	cmp	r0, #0
   15144:	beq	15100 <__assert_fail@plt+0x3188>
   15148:	mov	r5, r0
   1514c:	ldr	r0, [r9]
   15150:	movw	r1, #58789	; 0xe5a5
   15154:	mov	r3, r6
   15158:	movt	r1, #1
   1515c:	ldr	r2, [r0, sl, lsl #2]
   15160:	mov	r0, r5
   15164:	bl	11e7c <sprintf@plt>
   15168:	mov	r0, #3
   1516c:	mov	r1, r5
   15170:	add	r2, sp, #104	; 0x68
   15174:	bl	11f0c <__xstat64@plt>
   15178:	cmp	r0, #0
   1517c:	bne	150f8 <__assert_fail@plt+0x3180>
   15180:	ldr	r0, [sp, #120]	; 0x78
   15184:	and	r0, r0, #61440	; 0xf000
   15188:	cmp	r0, #32768	; 0x8000
   1518c:	moveq	r0, r5
   15190:	bleq	14960 <__assert_fail@plt+0x29e8>
   15194:	b	150f8 <__assert_fail@plt+0x3180>
   15198:	ldr	r0, [r9]
   1519c:	ldr	r0, [r0, sl, lsl #2]
   151a0:	bl	14960 <__assert_fail@plt+0x29e8>
   151a4:	b	1508c <__assert_fail@plt+0x3114>
   151a8:	mov	r0, r7
   151ac:	bl	11f54 <closedir@plt>
   151b0:	movw	r5, #57648	; 0xe130
   151b4:	movt	r5, #1
   151b8:	b	1508c <__assert_fail@plt+0x3114>
   151bc:	add	r6, sp, #104	; 0x68
   151c0:	b	151e4 <__assert_fail@plt+0x326c>
   151c4:	mov	r0, r7
   151c8:	bl	11f54 <closedir@plt>
   151cc:	mov	r4, sp
   151d0:	ldr	r0, [r9]
   151d4:	add	sl, sl, #1
   151d8:	ldr	r1, [r0, sl, lsl #2]
   151dc:	cmp	r1, #0
   151e0:	beq	15318 <__assert_fail@plt+0x33a0>
   151e4:	mov	r0, #3
   151e8:	mov	r2, r4
   151ec:	bl	11f0c <__xstat64@plt>
   151f0:	cmp	r0, #0
   151f4:	bne	152dc <__assert_fail@plt+0x3364>
   151f8:	ldr	r0, [sp, #16]
   151fc:	and	r0, r0, #61440	; 0xf000
   15200:	cmp	r0, #16384	; 0x4000
   15204:	beq	15220 <__assert_fail@plt+0x32a8>
   15208:	cmp	r0, #32768	; 0x8000
   1520c:	bne	151d0 <__assert_fail@plt+0x3258>
   15210:	ldr	r0, [r9]
   15214:	ldr	r0, [r0, sl, lsl #2]
   15218:	bl	14960 <__assert_fail@plt+0x29e8>
   1521c:	b	151d0 <__assert_fail@plt+0x3258>
   15220:	ldr	r0, [r9]
   15224:	ldr	r0, [r0, sl, lsl #2]
   15228:	bl	11c78 <opendir@plt>
   1522c:	cmp	r0, #0
   15230:	beq	151d0 <__assert_fail@plt+0x3258>
   15234:	mov	r7, r0
   15238:	b	15244 <__assert_fail@plt+0x32cc>
   1523c:	mov	r0, r4
   15240:	bl	17e80 <argp_parse@@Base+0x13dc>
   15244:	mov	r0, r7
   15248:	bl	11e88 <readdir64@plt>
   1524c:	mov	r4, r0
   15250:	cmp	r0, #0
   15254:	beq	151c4 <__assert_fail@plt+0x324c>
   15258:	ldr	r0, [r9]
   1525c:	ldr	r0, [r0, sl, lsl #2]
   15260:	bl	11d2c <strlen@plt>
   15264:	add	r5, r4, #19
   15268:	mov	r8, r0
   1526c:	mov	r0, r5
   15270:	bl	11d2c <strlen@plt>
   15274:	add	r0, r8, r0
   15278:	mov	r1, #1
   1527c:	add	r0, r0, #2
   15280:	bl	185b4 <argp_parse@@Base+0x1b10>
   15284:	cmp	r0, #0
   15288:	beq	15244 <__assert_fail@plt+0x32cc>
   1528c:	mov	r4, r0
   15290:	ldr	r0, [r9]
   15294:	movw	r1, #58789	; 0xe5a5
   15298:	mov	r3, r5
   1529c:	movt	r1, #1
   152a0:	ldr	r2, [r0, sl, lsl #2]
   152a4:	mov	r0, r4
   152a8:	bl	11e7c <sprintf@plt>
   152ac:	mov	r0, #3
   152b0:	mov	r1, r4
   152b4:	mov	r2, r6
   152b8:	bl	11f0c <__xstat64@plt>
   152bc:	cmp	r0, #0
   152c0:	bne	1523c <__assert_fail@plt+0x32c4>
   152c4:	ldr	r0, [sp, #120]	; 0x78
   152c8:	and	r0, r0, #61440	; 0xf000
   152cc:	cmp	r0, #32768	; 0x8000
   152d0:	moveq	r0, r4
   152d4:	bleq	14960 <__assert_fail@plt+0x29e8>
   152d8:	b	1523c <__assert_fail@plt+0x32c4>
   152dc:	ldr	r0, [r9]
   152e0:	ldr	r7, [r0, sl, lsl #2]
   152e4:	movw	r0, #944	; 0x3b0
   152e8:	movt	r0, #3
   152ec:	ldr	r5, [r0]
   152f0:	bl	11d74 <__errno_location@plt>
   152f4:	ldr	r0, [r0]
   152f8:	bl	11ccc <strerror@plt>
   152fc:	movw	r1, #58795	; 0xe5ab
   15300:	mov	r3, r0
   15304:	mov	r0, r5
   15308:	mov	r2, r7
   1530c:	movt	r1, #1
   15310:	bl	11d5c <fprintf@plt>
   15314:	b	151d0 <__assert_fail@plt+0x3258>
   15318:	movw	r4, #1188	; 0x4a4
   1531c:	movt	r4, #3
   15320:	ldr	r0, [r4, #4]
   15324:	bl	17e80 <argp_parse@@Base+0x13dc>
   15328:	mov	r0, #0
   1532c:	str	r0, [r4, #4]
   15330:	str	r0, [r4, #8]
   15334:	bl	14d38 <__assert_fail@plt+0x2dc0>
   15338:	sub	sp, fp, #28
   1533c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15340:	push	{r4, r5, r6, sl, fp, lr}
   15344:	add	fp, sp, #16
   15348:	sub	sp, sp, #304	; 0x130
   1534c:	mov	r5, r0
   15350:	movw	r0, #1528	; 0x5f8
   15354:	mov	r3, r1
   15358:	sub	r1, fp, #148	; 0x94
   1535c:	sub	r2, fp, #20
   15360:	movt	r0, #3
   15364:	ldr	r0, [r0]
   15368:	ldr	r4, [r0]
   1536c:	mov	r0, #128	; 0x80
   15370:	str	r0, [fp, #-20]	; 0xffffffec
   15374:	mov	r0, r3
   15378:	bl	11edc <getpeername@plt>
   1537c:	cmp	r0, #0
   15380:	bne	153b8 <__assert_fail@plt+0x3440>
   15384:	mov	r1, #0
   15388:	mov	r0, #1
   1538c:	add	r6, sp, #12
   15390:	mov	r3, #80	; 0x50
   15394:	str	r0, [sp, #8]
   15398:	str	r1, [sp]
   1539c:	str	r1, [sp, #4]
   153a0:	sub	r0, fp, #148	; 0x94
   153a4:	mov	r1, #128	; 0x80
   153a8:	mov	r2, r6
   153ac:	bl	11e28 <getnameinfo@plt>
   153b0:	cmp	r0, #0
   153b4:	beq	1541c <__assert_fail@plt+0x34a4>
   153b8:	movw	r2, #62226	; 0xf312
   153bc:	add	r0, sp, #92	; 0x5c
   153c0:	movt	r2, #1
   153c4:	mov	r1, #80	; 0x50
   153c8:	mov	r3, r5
   153cc:	bl	11d80 <snprintf@plt>
   153d0:	movw	r5, #1532	; 0x5fc
   153d4:	add	r1, sp, #92	; 0x5c
   153d8:	movt	r5, #3
   153dc:	ldr	r0, [r5]
   153e0:	sub	r2, r0, r4
   153e4:	mov	r0, r4
   153e8:	bl	11db0 <strncpy@plt>
   153ec:	bl	11d2c <strlen@plt>
   153f0:	ldr	r1, [r5]
   153f4:	add	r0, r4, r0
   153f8:	cmp	r0, r1
   153fc:	bcs	15414 <__assert_fail@plt+0x349c>
   15400:	mov	r1, #32
   15404:	strb	r1, [r0], #1
   15408:	ldr	r2, [r5]
   1540c:	cmp	r0, r2
   15410:	bcc	15404 <__assert_fail@plt+0x348c>
   15414:	sub	sp, fp, #16
   15418:	pop	{r4, r5, r6, sl, fp, pc}
   1541c:	movw	r2, #58810	; 0xe5ba
   15420:	str	r6, [sp]
   15424:	add	r0, sp, #92	; 0x5c
   15428:	movt	r2, #1
   1542c:	b	153c4 <__assert_fail@plt+0x344c>
   15430:	push	{r4, r5, fp, lr}
   15434:	add	fp, sp, #8
   15438:	movw	r4, #1516	; 0x5ec
   1543c:	movw	r0, #1256	; 0x4e8
   15440:	mov	r5, #0
   15444:	movt	r4, #3
   15448:	movt	r0, #3
   1544c:	str	r0, [r4]
   15450:	bl	11cf0 <__ctype_b_loc@plt>
   15454:	mov	r1, #0
   15458:	b	1546c <__assert_fail@plt+0x34f4>
   1545c:	add	r1, r1, #1
   15460:	add	r5, r5, #2
   15464:	cmp	r1, #129	; 0x81
   15468:	beq	15494 <__assert_fail@plt+0x351c>
   1546c:	ldr	r2, [r0]
   15470:	add	r2, r2, r5
   15474:	ldrb	r2, [r2, #1]
   15478:	tst	r2, #64	; 0x40
   1547c:	beq	1545c <__assert_fail@plt+0x34e4>
   15480:	ldr	r2, [r4]
   15484:	add	r3, r2, #1
   15488:	str	r3, [r4]
   1548c:	strb	r1, [r2]
   15490:	b	1545c <__assert_fail@plt+0x34e4>
   15494:	pop	{r4, r5, fp, pc}
   15498:	push	{r4, sl, fp, lr}
   1549c:	add	fp, sp, #8
   154a0:	sub	sp, sp, #8
   154a4:	mov	r0, sp
   154a8:	mov	r1, #0
   154ac:	mov	r4, #0
   154b0:	bl	11c60 <gettimeofday@plt>
   154b4:	cmn	r0, #1
   154b8:	ble	154dc <__assert_fail@plt+0x3564>
   154bc:	ldr	r0, [sp]
   154c0:	movw	r1, #32384	; 0x7e80
   154c4:	movt	r1, #33706	; 0x83aa
   154c8:	add	r0, r0, r1
   154cc:	rev	r4, r0
   154d0:	mov	r0, r4
   154d4:	sub	sp, fp, #8
   154d8:	pop	{r4, sl, fp, pc}
   154dc:	movw	r0, #1188	; 0x4a4
   154e0:	movt	r0, #3
   154e4:	ldrb	r0, [r0]
   154e8:	cmp	r0, #0
   154ec:	bne	154fc <__assert_fail@plt+0x3584>
   154f0:	mov	r0, r4
   154f4:	sub	sp, fp, #8
   154f8:	pop	{r4, sl, fp, pc}
   154fc:	movw	r0, #944	; 0x3b0
   15500:	mov	r1, #26
   15504:	mov	r2, #1
   15508:	movt	r0, #3
   1550c:	ldr	r3, [r0]
   15510:	movw	r0, #58819	; 0xe5c3
   15514:	movt	r0, #1
   15518:	bl	11c48 <fwrite@plt>
   1551c:	mov	r0, r4
   15520:	sub	sp, fp, #8
   15524:	pop	{r4, sl, fp, pc}
   15528:	push	{r4, r5, r6, sl, fp, lr}
   1552c:	add	fp, sp, #16
   15530:	sub	sp, sp, #344	; 0x158
   15534:	mov	r6, r0
   15538:	mov	r0, #128	; 0x80
   1553c:	mov	r5, r1
   15540:	movw	r1, #58952	; 0xe648
   15544:	mov	r4, r2
   15548:	mov	r2, #1
   1554c:	str	r0, [sp, #12]
   15550:	movw	r0, #58946	; 0xe642
   15554:	movt	r1, #1
   15558:	movt	r0, #1
   1555c:	bl	11d50 <setenv@plt>
   15560:	movw	r0, #58956	; 0xe64c
   15564:	movt	r0, #1
   15568:	bl	11f18 <unsetenv@plt>
   1556c:	movw	r0, #58967	; 0xe657
   15570:	movt	r0, #1
   15574:	bl	11f18 <unsetenv@plt>
   15578:	movw	r0, #58980	; 0xe664
   1557c:	movt	r0, #1
   15580:	bl	11f18 <unsetenv@plt>
   15584:	movw	r0, #58993	; 0xe671
   15588:	movt	r0, #1
   1558c:	bl	11f18 <unsetenv@plt>
   15590:	movw	r0, #59005	; 0xe67d
   15594:	movt	r0, #1
   15598:	bl	11f18 <unsetenv@plt>
   1559c:	movw	r0, #59019	; 0xe68b
   155a0:	movt	r0, #1
   155a4:	bl	11f18 <unsetenv@plt>
   155a8:	add	r1, sp, #16
   155ac:	add	r2, sp, #12
   155b0:	mov	r0, r6
   155b4:	bl	11ea0 <getsockname@plt>
   155b8:	movw	r6, #1188	; 0x4a4
   155bc:	cmn	r0, #1
   155c0:	movt	r6, #3
   155c4:	ble	15624 <__assert_fail@plt+0x36ac>
   155c8:	ldr	r1, [sp, #12]
   155cc:	mov	r0, #3
   155d0:	mov	r2, #16
   155d4:	sub	r3, fp, #32
   155d8:	str	r3, [sp]
   155dc:	str	r2, [sp, #4]
   155e0:	str	r0, [sp, #8]
   155e4:	add	r0, sp, #16
   155e8:	add	r2, sp, #144	; 0x90
   155ec:	mov	r3, #184	; 0xb8
   155f0:	bl	11e28 <getnameinfo@plt>
   155f4:	cmp	r0, #0
   155f8:	beq	15638 <__assert_fail@plt+0x36c0>
   155fc:	bl	11b40 <gai_strerror@plt>
   15600:	movw	r1, #59127	; 0xe6f7
   15604:	mov	r2, r0
   15608:	mov	r0, #4
   1560c:	movt	r1, #1
   15610:	bl	11e64 <syslog@plt>
   15614:	ldrb	r0, [r6, #1]
   15618:	cmp	r0, #1
   1561c:	beq	156c8 <__assert_fail@plt+0x3750>
   15620:	b	1572c <__assert_fail@plt+0x37b4>
   15624:	movw	r1, #59033	; 0xe699
   15628:	movt	r1, #1
   1562c:	mov	r0, #4
   15630:	bl	11e64 <syslog@plt>
   15634:	b	1572c <__assert_fail@plt+0x37b4>
   15638:	movw	r0, #58956	; 0xe64c
   1563c:	add	r1, sp, #144	; 0x90
   15640:	mov	r2, #1
   15644:	movt	r0, #1
   15648:	bl	11d50 <setenv@plt>
   1564c:	cmn	r0, #1
   15650:	ble	15680 <__assert_fail@plt+0x3708>
   15654:	ldrb	r0, [r6]
   15658:	cmp	r0, #0
   1565c:	beq	15690 <__assert_fail@plt+0x3718>
   15660:	movw	r0, #944	; 0x3b0
   15664:	movw	r1, #59075	; 0xe6c3
   15668:	add	r2, sp, #144	; 0x90
   1566c:	movt	r0, #3
   15670:	movt	r1, #1
   15674:	ldr	r0, [r0]
   15678:	bl	11d5c <fprintf@plt>
   1567c:	b	15690 <__assert_fail@plt+0x3718>
   15680:	movw	r1, #59051	; 0xe6ab
   15684:	mov	r0, #4
   15688:	movt	r1, #1
   1568c:	bl	11e64 <syslog@plt>
   15690:	movw	r0, #58980	; 0xe664
   15694:	sub	r1, fp, #32
   15698:	mov	r2, #1
   1569c:	movt	r0, #1
   156a0:	bl	11d50 <setenv@plt>
   156a4:	cmn	r0, #1
   156a8:	bgt	156bc <__assert_fail@plt+0x3744>
   156ac:	movw	r1, #59101	; 0xe6dd
   156b0:	mov	r0, #4
   156b4:	movt	r1, #1
   156b8:	bl	11e64 <syslog@plt>
   156bc:	ldrb	r0, [r6, #1]
   156c0:	cmp	r0, #1
   156c4:	bne	1572c <__assert_fail@plt+0x37b4>
   156c8:	ldr	r1, [sp, #12]
   156cc:	mov	r0, #0
   156d0:	add	r2, sp, #144	; 0x90
   156d4:	mov	r3, #184	; 0xb8
   156d8:	str	r0, [sp]
   156dc:	str	r0, [sp, #4]
   156e0:	str	r0, [sp, #8]
   156e4:	add	r0, sp, #16
   156e8:	bl	11e28 <getnameinfo@plt>
   156ec:	cmp	r0, #0
   156f0:	beq	15710 <__assert_fail@plt+0x3798>
   156f4:	bl	11b40 <gai_strerror@plt>
   156f8:	movw	r1, #59127	; 0xe6f7
   156fc:	mov	r2, r0
   15700:	mov	r0, #4
   15704:	movt	r1, #1
   15708:	bl	11e64 <syslog@plt>
   1570c:	b	1572c <__assert_fail@plt+0x37b4>
   15710:	movw	r0, #58967	; 0xe657
   15714:	add	r1, sp, #144	; 0x90
   15718:	mov	r2, #1
   1571c:	movt	r0, #1
   15720:	bl	11d50 <setenv@plt>
   15724:	cmn	r0, #1
   15728:	ble	1587c <__assert_fail@plt+0x3904>
   1572c:	mov	r0, #3
   15730:	mov	r1, #16
   15734:	sub	r2, fp, #32
   15738:	mov	r3, #184	; 0xb8
   1573c:	str	r2, [sp]
   15740:	str	r1, [sp, #4]
   15744:	str	r0, [sp, #8]
   15748:	add	r2, sp, #144	; 0x90
   1574c:	mov	r0, r5
   15750:	mov	r1, r4
   15754:	bl	11e28 <getnameinfo@plt>
   15758:	cmp	r0, #0
   1575c:	beq	15780 <__assert_fail@plt+0x3808>
   15760:	bl	11b40 <gai_strerror@plt>
   15764:	movw	r1, #59127	; 0xe6f7
   15768:	mov	r2, r0
   1576c:	mov	r0, #4
   15770:	movt	r1, #1
   15774:	bl	11e64 <syslog@plt>
   15778:	sub	sp, fp, #16
   1577c:	pop	{r4, r5, r6, sl, fp, pc}
   15780:	movw	r0, #58993	; 0xe671
   15784:	add	r1, sp, #144	; 0x90
   15788:	mov	r2, #1
   1578c:	movt	r0, #1
   15790:	bl	11d50 <setenv@plt>
   15794:	cmn	r0, #1
   15798:	ble	157c8 <__assert_fail@plt+0x3850>
   1579c:	ldrb	r0, [r6]
   157a0:	cmp	r0, #0
   157a4:	beq	157d8 <__assert_fail@plt+0x3860>
   157a8:	movw	r0, #944	; 0x3b0
   157ac:	movw	r1, #59192	; 0xe738
   157b0:	add	r2, sp, #144	; 0x90
   157b4:	movt	r0, #3
   157b8:	movt	r1, #1
   157bc:	ldr	r0, [r0]
   157c0:	bl	11d5c <fprintf@plt>
   157c4:	b	157d8 <__assert_fail@plt+0x3860>
   157c8:	movw	r1, #59168	; 0xe720
   157cc:	mov	r0, #4
   157d0:	movt	r1, #1
   157d4:	bl	11e64 <syslog@plt>
   157d8:	movw	r0, #59005	; 0xe67d
   157dc:	sub	r1, fp, #32
   157e0:	mov	r2, #1
   157e4:	movt	r0, #1
   157e8:	bl	11d50 <setenv@plt>
   157ec:	cmn	r0, #1
   157f0:	ble	15804 <__assert_fail@plt+0x388c>
   157f4:	ldrb	r0, [r6, #1]
   157f8:	cmp	r0, #1
   157fc:	beq	15820 <__assert_fail@plt+0x38a8>
   15800:	b	15874 <__assert_fail@plt+0x38fc>
   15804:	movw	r1, #59219	; 0xe753
   15808:	mov	r0, #4
   1580c:	movt	r1, #1
   15810:	bl	11e64 <syslog@plt>
   15814:	ldrb	r0, [r6, #1]
   15818:	cmp	r0, #1
   1581c:	bne	15874 <__assert_fail@plt+0x38fc>
   15820:	mov	r0, #0
   15824:	add	r2, sp, #144	; 0x90
   15828:	mov	r1, r4
   1582c:	mov	r3, #184	; 0xb8
   15830:	str	r0, [sp]
   15834:	str	r0, [sp, #4]
   15838:	str	r0, [sp, #8]
   1583c:	mov	r0, r5
   15840:	bl	11e28 <getnameinfo@plt>
   15844:	cmp	r0, #0
   15848:	bne	15760 <__assert_fail@plt+0x37e8>
   1584c:	movw	r0, #59019	; 0xe68b
   15850:	add	r1, sp, #144	; 0x90
   15854:	mov	r2, #1
   15858:	movt	r0, #1
   1585c:	bl	11d50 <setenv@plt>
   15860:	cmn	r0, #1
   15864:	ble	15888 <__assert_fail@plt+0x3910>
   15868:	ldrb	r0, [r6]
   1586c:	cmp	r0, #0
   15870:	bne	158a0 <__assert_fail@plt+0x3928>
   15874:	sub	sp, fp, #16
   15878:	pop	{r4, r5, r6, sl, fp, pc}
   1587c:	movw	r1, #59143	; 0xe707
   15880:	movt	r1, #1
   15884:	b	1562c <__assert_fail@plt+0x36b4>
   15888:	movw	r1, #59245	; 0xe76d
   1588c:	mov	r0, #4
   15890:	movt	r1, #1
   15894:	bl	11e64 <syslog@plt>
   15898:	sub	sp, fp, #16
   1589c:	pop	{r4, r5, r6, sl, fp, pc}
   158a0:	movw	r0, #944	; 0x3b0
   158a4:	movw	r1, #59271	; 0xe787
   158a8:	add	r2, sp, #144	; 0x90
   158ac:	movt	r0, #3
   158b0:	movt	r1, #1
   158b4:	ldr	r0, [r0]
   158b8:	bl	11d5c <fprintf@plt>
   158bc:	sub	sp, fp, #16
   158c0:	pop	{r4, r5, r6, sl, fp, pc}
   158c4:	push	{r4, r5, fp, lr}
   158c8:	add	fp, sp, #8
   158cc:	sub	sp, sp, #296	; 0x128
   158d0:	mov	r5, r0
   158d4:	ldr	r0, [r1]
   158d8:	mov	r6, r2
   158dc:	mov	r4, r1
   158e0:	bl	17f70 <argp_parse@@Base+0x14cc>
   158e4:	movw	r0, #1528	; 0x5f8
   158e8:	cmp	r6, #0
   158ec:	movt	r0, #3
   158f0:	str	r4, [r0]
   158f4:	beq	15908 <__assert_fail@plt+0x3990>
   158f8:	ldr	r0, [r6]
   158fc:	cmp	r0, #0
   15900:	moveq	r6, r4
   15904:	b	1590c <__assert_fail@plt+0x3994>
   15908:	mov	r6, r4
   1590c:	ldr	r0, [r6], #4
   15910:	cmp	r0, #0
   15914:	bne	1590c <__assert_fail@plt+0x3994>
   15918:	ldr	r6, [r6, #-8]
   1591c:	mov	r0, r6
   15920:	bl	11d2c <strlen@plt>
   15924:	movw	r1, #1560	; 0x618
   15928:	movw	r2, #59300	; 0xe7a4
   1592c:	add	r0, r6, r0
   15930:	movw	r6, #800	; 0x320
   15934:	movt	r1, #3
   15938:	movt	r2, #1
   1593c:	movt	r6, #3
   15940:	str	r2, [r1]
   15944:	movw	r1, #1532	; 0x5fc
   15948:	movt	r1, #3
   1594c:	str	r0, [r1]
   15950:	movw	r0, #59324	; 0xe7bc
   15954:	add	r1, r6, #36	; 0x24
   15958:	movt	r0, #1
   1595c:	bl	17d8c <argp_parse@@Base+0x12e8>
   15960:	mov	r0, #0
   15964:	add	r1, sp, #148	; 0x94
   15968:	mov	r2, r4
   1596c:	mov	r3, #0
   15970:	str	r1, [sp]
   15974:	str	r0, [sp, #4]
   15978:	add	r0, r6, #8
   1597c:	mov	r1, r5
   15980:	bl	16aa4 <argp_parse@@Base>
   15984:	movw	r1, #1188	; 0x4a4
   15988:	movw	r6, #1548	; 0x60c
   1598c:	movt	r1, #3
   15990:	movt	r6, #3
   15994:	ldrb	r0, [r1, #1]
   15998:	cmp	r0, #1
   1599c:	moveq	r0, #1
   159a0:	strbeq	r0, [r1, #2]
   159a4:	ldr	r0, [sp, #148]	; 0x94
   159a8:	cmp	r0, r5
   159ac:	bge	15a00 <__assert_fail@plt+0x3a88>
   159b0:	sub	r0, r5, r0
   159b4:	mov	r1, #4
   159b8:	add	r0, r0, #1
   159bc:	bl	185b4 <argp_parse@@Base+0x1b10>
   159c0:	str	r0, [r6]
   159c4:	ldr	r0, [sp, #148]	; 0x94
   159c8:	cmp	r0, r5
   159cc:	bge	15a48 <__assert_fail@plt+0x3ad0>
   159d0:	mov	r7, #0
   159d4:	ldr	r0, [r4, r0, lsl #2]
   159d8:	bl	11bc4 <strdup@plt>
   159dc:	ldr	r1, [r6]
   159e0:	str	r0, [r1, r7]
   159e4:	add	r7, r7, #4
   159e8:	ldr	r0, [sp, #148]	; 0x94
   159ec:	add	r0, r0, #1
   159f0:	cmp	r0, r5
   159f4:	str	r0, [sp, #148]	; 0x94
   159f8:	blt	159d4 <__assert_fail@plt+0x3a5c>
   159fc:	b	15a48 <__assert_fail@plt+0x3ad0>
   15a00:	mov	r0, #3
   15a04:	mov	r1, #4
   15a08:	bl	185b4 <argp_parse@@Base+0x1b10>
   15a0c:	str	r0, [r6]
   15a10:	movw	r0, #59330	; 0xe7c2
   15a14:	movt	r0, #1
   15a18:	bl	11bc4 <strdup@plt>
   15a1c:	cmp	r0, #0
   15a20:	beq	16294 <__assert_fail@plt+0x431c>
   15a24:	ldr	r1, [r6]
   15a28:	str	r0, [r1]
   15a2c:	movw	r0, #59356	; 0xe7dc
   15a30:	movt	r0, #1
   15a34:	bl	11bc4 <strdup@plt>
   15a38:	cmp	r0, #0
   15a3c:	beq	16294 <__assert_fail@plt+0x431c>
   15a40:	ldr	r1, [r6]
   15a44:	str	r0, [r1, #4]
   15a48:	movw	r6, #1188	; 0x4a4
   15a4c:	movt	r6, #3
   15a50:	ldrb	r0, [r6]
   15a54:	cmp	r0, #0
   15a58:	bne	15a70 <__assert_fail@plt+0x3af8>
   15a5c:	mov	r0, #0
   15a60:	mov	r1, #0
   15a64:	bl	16a88 <daemon@@Base>
   15a68:	cmn	r0, #1
   15a6c:	ble	162ac <__assert_fail@plt+0x4334>
   15a70:	movw	r0, #59324	; 0xe7bc
   15a74:	mov	r1, #17
   15a78:	mov	r2, #24
   15a7c:	movt	r0, #1
   15a80:	bl	11e94 <openlog@plt>
   15a84:	ldrb	r0, [r6, #3]
   15a88:	cmp	r0, #0
   15a8c:	bne	15b0c <__assert_fail@plt+0x3b94>
   15a90:	movw	r5, #800	; 0x320
   15a94:	movw	r1, #58328	; 0xe3d8
   15a98:	movt	r5, #3
   15a9c:	movt	r1, #1
   15aa0:	ldr	r0, [r5, #4]
   15aa4:	bl	11ec4 <fopen64@plt>
   15aa8:	cmp	r0, #0
   15aac:	beq	15ae4 <__assert_fail@plt+0x3b6c>
   15ab0:	mov	r4, r0
   15ab4:	ldrb	r0, [r6]
   15ab8:	cmp	r0, #0
   15abc:	bne	16274 <__assert_fail@plt+0x42fc>
   15ac0:	bl	11cfc <getpid@plt>
   15ac4:	movw	r1, #57715	; 0xe173
   15ac8:	mov	r2, r0
   15acc:	mov	r0, r4
   15ad0:	movt	r1, #1
   15ad4:	bl	11d5c <fprintf@plt>
   15ad8:	mov	r0, r4
   15adc:	bl	11dec <fclose@plt>
   15ae0:	b	15b0c <__assert_fail@plt+0x3b94>
   15ae4:	ldr	r4, [r5, #4]
   15ae8:	bl	11d74 <__errno_location@plt>
   15aec:	ldr	r0, [r0]
   15af0:	bl	11ccc <strerror@plt>
   15af4:	movw	r1, #59440	; 0xe830
   15af8:	mov	r3, r0
   15afc:	mov	r0, #2
   15b00:	mov	r2, r4
   15b04:	movt	r1, #1
   15b08:	bl	11e64 <syslog@plt>
   15b0c:	add	r4, sp, #152	; 0x98
   15b10:	mov	r1, #0
   15b14:	mov	r2, #140	; 0x8c
   15b18:	mov	r8, #0
   15b1c:	mov	r0, r4
   15b20:	bl	11da4 <memset@plt>
   15b24:	orr	r5, r4, #4
   15b28:	mov	r0, r5
   15b2c:	bl	11e10 <sigemptyset@plt>
   15b30:	mov	r0, r5
   15b34:	mov	r1, #14
   15b38:	bl	11cb4 <sigaddset@plt>
   15b3c:	movw	r0, #13200	; 0x3390
   15b40:	mov	r7, #268435456	; 0x10000000
   15b44:	mov	r1, r4
   15b48:	mov	r2, #0
   15b4c:	movt	r0, #1
   15b50:	str	r7, [sp, #284]	; 0x11c
   15b54:	str	r0, [sp, #152]	; 0x98
   15b58:	mov	r0, #14
   15b5c:	bl	11c3c <sigaction@plt>
   15b60:	mov	r0, #0
   15b64:	bl	15010 <__assert_fail@plt+0x3098>
   15b68:	mov	r0, r4
   15b6c:	mov	r1, #0
   15b70:	mov	r2, #140	; 0x8c
   15b74:	bl	11da4 <memset@plt>
   15b78:	mov	r0, r5
   15b7c:	bl	11e10 <sigemptyset@plt>
   15b80:	mov	r0, r5
   15b84:	mov	r1, #1
   15b88:	bl	11cb4 <sigaddset@plt>
   15b8c:	movw	r0, #20496	; 0x5010
   15b90:	str	r7, [sp, #284]	; 0x11c
   15b94:	mov	r1, r4
   15b98:	mov	r2, #0
   15b9c:	movt	r0, #1
   15ba0:	str	r0, [sp, #152]	; 0x98
   15ba4:	mov	r0, #1
   15ba8:	bl	11c3c <sigaction@plt>
   15bac:	mov	r0, r4
   15bb0:	mov	r1, #0
   15bb4:	mov	r2, #140	; 0x8c
   15bb8:	bl	11da4 <memset@plt>
   15bbc:	mov	r0, r5
   15bc0:	bl	11e10 <sigemptyset@plt>
   15bc4:	mov	r0, r5
   15bc8:	mov	r1, #17
   15bcc:	bl	11cb4 <sigaddset@plt>
   15bd0:	movw	r0, #11340	; 0x2c4c
   15bd4:	str	r7, [sp, #284]	; 0x11c
   15bd8:	mov	r1, r4
   15bdc:	mov	r2, #0
   15be0:	movt	r0, #1
   15be4:	str	r0, [sp, #152]	; 0x98
   15be8:	mov	r0, #17
   15bec:	bl	11c3c <sigaction@plt>
   15bf0:	mov	r0, r4
   15bf4:	mov	r1, #0
   15bf8:	mov	r2, #140	; 0x8c
   15bfc:	bl	11da4 <memset@plt>
   15c00:	mov	r0, r5
   15c04:	bl	11e10 <sigemptyset@plt>
   15c08:	mov	r0, r5
   15c0c:	mov	r1, #13
   15c10:	bl	11cb4 <sigaddset@plt>
   15c14:	str	r7, [sp, #284]	; 0x11c
   15c18:	mov	r7, #1
   15c1c:	mov	r0, #13
   15c20:	mov	r1, r4
   15c24:	mov	r2, #0
   15c28:	str	r7, [sp, #152]	; 0x98
   15c2c:	bl	11c3c <sigaction@plt>
   15c30:	add	r5, sp, #152	; 0x98
   15c34:	mov	r1, #120	; 0x78
   15c38:	mov	r2, #99	; 0x63
   15c3c:	mov	r0, r5
   15c40:	bl	11da4 <memset@plt>
   15c44:	movw	r0, #59459	; 0xe843
   15c48:	mov	r1, r5
   15c4c:	mov	r2, #1
   15c50:	strb	r8, [sp, #251]	; 0xfb
   15c54:	movt	r0, #1
   15c58:	bl	11d50 <setenv@plt>
   15c5c:	movw	r5, #1520	; 0x5f0
   15c60:	add	r6, sp, #16
   15c64:	movt	r5, #3
   15c68:	ldr	r0, [r5]
   15c6c:	cmp	r0, #0
   15c70:	bne	15d38 <__assert_fail@plt+0x3dc0>
   15c74:	mov	r0, r6
   15c78:	bl	11e10 <sigemptyset@plt>
   15c7c:	mov	r0, r4
   15c80:	bl	11e10 <sigemptyset@plt>
   15c84:	mov	r0, r4
   15c88:	mov	r1, #17
   15c8c:	bl	11cb4 <sigaddset@plt>
   15c90:	mov	r0, r4
   15c94:	mov	r1, #1
   15c98:	bl	11cb4 <sigaddset@plt>
   15c9c:	mov	r0, r4
   15ca0:	mov	r1, #14
   15ca4:	bl	11cb4 <sigaddset@plt>
   15ca8:	mov	r0, #0
   15cac:	mov	r1, r4
   15cb0:	mov	r2, #0
   15cb4:	bl	11b10 <sigprocmask@plt>
   15cb8:	ldr	r0, [r5]
   15cbc:	cmp	r0, #0
   15cc0:	bne	15cd8 <__assert_fail@plt+0x3d60>
   15cc4:	mov	r0, r6
   15cc8:	bl	11dbc <sigsuspend@plt>
   15ccc:	ldr	r0, [r5]
   15cd0:	cmp	r0, #0
   15cd4:	beq	15cc4 <__assert_fail@plt+0x3d4c>
   15cd8:	mov	r0, r4
   15cdc:	bl	11e10 <sigemptyset@plt>
   15ce0:	mov	r0, #2
   15ce4:	mov	r1, r4
   15ce8:	mov	r2, #0
   15cec:	bl	11b10 <sigprocmask@plt>
   15cf0:	b	15d38 <__assert_fail@plt+0x3dc0>
   15cf4:	cmn	r9, #1
   15cf8:	bgt	15d1c <__assert_fail@plt+0x3da4>
   15cfc:	bl	11d74 <__errno_location@plt>
   15d00:	ldr	r0, [r0]
   15d04:	cmp	r0, #4
   15d08:	beq	15d1c <__assert_fail@plt+0x3da4>
   15d0c:	movw	r1, #59471	; 0xe84f
   15d10:	mov	r0, #4
   15d14:	movt	r1, #1
   15d18:	bl	11e64 <syslog@plt>
   15d1c:	mov	r0, #1
   15d20:	bl	11ba0 <sleep@plt>
   15d24:	movw	r5, #1520	; 0x5f0
   15d28:	movt	r5, #3
   15d2c:	ldr	r0, [r5]
   15d30:	cmp	r0, #0
   15d34:	beq	15c74 <__assert_fail@plt+0x3cfc>
   15d38:	movw	r1, #1388	; 0x56c
   15d3c:	mov	r0, r6
   15d40:	mov	r2, #128	; 0x80
   15d44:	movt	r1, #3
   15d48:	bl	11b64 <memcpy@plt>
   15d4c:	movw	r0, #1384	; 0x568
   15d50:	mov	r1, #0
   15d54:	mov	r2, #0
   15d58:	mov	r3, #0
   15d5c:	movt	r0, #3
   15d60:	str	r1, [sp]
   15d64:	mov	r1, r6
   15d68:	ldr	r0, [r0]
   15d6c:	add	r0, r0, #1
   15d70:	bl	11b94 <select@plt>
   15d74:	mov	r9, r0
   15d78:	cmp	r0, #1
   15d7c:	blt	15cf4 <__assert_fail@plt+0x3d7c>
   15d80:	movw	r0, #1552	; 0x610
   15d84:	movt	r0, #3
   15d88:	ldr	r8, [r0]
   15d8c:	cmp	r8, #0
   15d90:	beq	15d24 <__assert_fail@plt+0x3dac>
   15d94:	ldr	r0, [r8, #60]	; 0x3c
   15d98:	cmn	r0, #1
   15d9c:	beq	16234 <__assert_fail@plt+0x42bc>
   15da0:	asr	r1, r0, #31
   15da4:	add	r1, r0, r1, lsr #27
   15da8:	and	r0, r0, #31
   15dac:	asr	r1, r1, #5
   15db0:	ldr	r1, [r6, r1, lsl #2]
   15db4:	tst	r1, r7, lsl r0
   15db8:	beq	16234 <__assert_fail@plt+0x42bc>
   15dbc:	movw	r0, #1188	; 0x4a4
   15dc0:	movt	r0, #3
   15dc4:	ldrb	r0, [r0]
   15dc8:	cmp	r0, #0
   15dcc:	bne	16168 <__assert_fail@plt+0x41f0>
   15dd0:	ldr	r0, [r8, #24]
   15dd4:	mov	r5, r6
   15dd8:	sub	r9, r9, #1
   15ddc:	cmp	r0, #0
   15de0:	bne	15e48 <__assert_fail@plt+0x3ed0>
   15de4:	ldr	r0, [r8, #16]
   15de8:	cmp	r0, #1
   15dec:	bne	15e48 <__assert_fail@plt+0x3ed0>
   15df0:	mov	r0, #128	; 0x80
   15df4:	mov	r1, r4
   15df8:	add	r2, sp, #8
   15dfc:	str	r0, [sp, #8]
   15e00:	ldr	r0, [r8, #60]	; 0x3c
   15e04:	bl	11c30 <accept@plt>
   15e08:	movw	r6, #1188	; 0x4a4
   15e0c:	mov	sl, r0
   15e10:	movt	r6, #3
   15e14:	ldrb	r0, [r6]
   15e18:	cmp	r0, #0
   15e1c:	bne	161e8 <__assert_fail@plt+0x4270>
   15e20:	cmn	sl, #1
   15e24:	ble	1620c <__assert_fail@plt+0x4294>
   15e28:	ldrb	r0, [r6, #2]
   15e2c:	cmp	r0, #1
   15e30:	bne	15e4c <__assert_fail@plt+0x3ed4>
   15e34:	ldr	r2, [sp, #8]
   15e38:	mov	r0, sl
   15e3c:	mov	r1, r4
   15e40:	bl	15528 <__assert_fail@plt+0x35b0>
   15e44:	b	15e4c <__assert_fail@plt+0x3ed4>
   15e48:	ldr	sl, [r8, #60]	; 0x3c
   15e4c:	mov	r0, r4
   15e50:	bl	11e10 <sigemptyset@plt>
   15e54:	mov	r0, r4
   15e58:	mov	r1, #17
   15e5c:	bl	11cb4 <sigaddset@plt>
   15e60:	mov	r0, r4
   15e64:	mov	r1, #1
   15e68:	bl	11cb4 <sigaddset@plt>
   15e6c:	mov	r0, r4
   15e70:	mov	r1, #14
   15e74:	bl	11cb4 <sigaddset@plt>
   15e78:	mov	r0, #0
   15e7c:	mov	r1, r4
   15e80:	mov	r2, #0
   15e84:	bl	11b10 <sigprocmask@plt>
   15e88:	ldr	r0, [r8, #44]	; 0x2c
   15e8c:	cmp	r0, #0
   15e90:	beq	15ea0 <__assert_fail@plt+0x3f28>
   15e94:	ldrh	r0, [r0, #8]
   15e98:	cmp	r0, #0
   15e9c:	beq	16010 <__assert_fail@plt+0x4098>
   15ea0:	ldr	r1, [r8, #208]	; 0xd0
   15ea4:	add	r0, r1, #1
   15ea8:	cmp	r1, #0
   15eac:	str	r0, [r8, #208]	; 0xd0
   15eb0:	beq	15f60 <__assert_fail@plt+0x3fe8>
   15eb4:	ldr	r1, [r8, #28]
   15eb8:	mov	r2, #0
   15ebc:	cmp	r0, r1
   15ec0:	movwhi	r2, #1
   15ec4:	cmp	r1, #0
   15ec8:	movwne	r1, #1
   15ecc:	tst	r2, r1
   15ed0:	bne	15fcc <__assert_fail@plt+0x4054>
   15ed4:	movw	r1, #800	; 0x320
   15ed8:	movt	r1, #3
   15edc:	ldr	r1, [r1]
   15ee0:	cmp	r0, r1
   15ee4:	bcs	15fcc <__assert_fail@plt+0x4054>
   15ee8:	bl	11e1c <fork@plt>
   15eec:	cmn	r0, #1
   15ef0:	ble	15f78 <__assert_fail@plt+0x4000>
   15ef4:	mov	r7, #1
   15ef8:	cmp	r0, #0
   15efc:	beq	16014 <__assert_fail@plt+0x409c>
   15f00:	ldr	r1, [r8, #24]
   15f04:	mov	r6, #0
   15f08:	cmp	r1, #0
   15f0c:	beq	16018 <__assert_fail@plt+0x40a0>
   15f10:	str	r0, [r8, #24]
   15f14:	ldr	r0, [r8, #60]	; 0x3c
   15f18:	cmp	r0, #0
   15f1c:	bmi	16018 <__assert_fail@plt+0x40a0>
   15f20:	movw	r2, #1388	; 0x56c
   15f24:	lsr	r1, r0, #5
   15f28:	mov	r7, #1
   15f2c:	and	r0, r0, #31
   15f30:	movt	r2, #3
   15f34:	mov	r3, r2
   15f38:	ldr	r2, [r2, r1, lsl #2]
   15f3c:	bic	r0, r2, r7, lsl r0
   15f40:	str	r0, [r3, r1, lsl #2]
   15f44:	movw	r0, #1520	; 0x5f0
   15f48:	movt	r0, #3
   15f4c:	mov	r1, r0
   15f50:	ldr	r0, [r0]
   15f54:	sub	r0, r0, #1
   15f58:	str	r0, [r1]
   15f5c:	b	16018 <__assert_fail@plt+0x40a0>
   15f60:	add	r0, r8, #212	; 0xd4
   15f64:	mov	r1, #0
   15f68:	bl	11c60 <gettimeofday@plt>
   15f6c:	bl	11e1c <fork@plt>
   15f70:	cmn	r0, #1
   15f74:	bgt	15ef4 <__assert_fail@plt+0x3f7c>
   15f78:	movw	r1, #59570	; 0xe8b2
   15f7c:	mov	r0, #3
   15f80:	movt	r1, #1
   15f84:	bl	11e64 <syslog@plt>
   15f88:	ldr	r0, [r8, #24]
   15f8c:	cmp	r0, #0
   15f90:	bne	15fa8 <__assert_fail@plt+0x4030>
   15f94:	ldr	r0, [r8, #16]
   15f98:	cmp	r0, #1
   15f9c:	bne	15fa8 <__assert_fail@plt+0x4030>
   15fa0:	mov	r0, sl
   15fa4:	bl	11f48 <close@plt>
   15fa8:	mov	r0, r4
   15fac:	bl	11e10 <sigemptyset@plt>
   15fb0:	mov	r0, #2
   15fb4:	mov	r1, r4
   15fb8:	mov	r2, #0
   15fbc:	bl	11b10 <sigprocmask@plt>
   15fc0:	mov	r0, #1
   15fc4:	bl	11ba0 <sleep@plt>
   15fc8:	b	16230 <__assert_fail@plt+0x42b8>
   15fcc:	add	r0, sp, #8
   15fd0:	mov	r1, #0
   15fd4:	bl	11c60 <gettimeofday@plt>
   15fd8:	mov	r0, r8
   15fdc:	ldr	r2, [sp, #8]
   15fe0:	ldr	r1, [r0, #212]!	; 0xd4
   15fe4:	sub	r1, r2, r1
   15fe8:	cmp	r1, #61	; 0x3d
   15fec:	blt	160e4 <__assert_fail@plt+0x416c>
   15ff0:	ldr	r1, [sp, #8]
   15ff4:	ldr	r2, [sp, #12]
   15ff8:	stm	r0, {r1, r2}
   15ffc:	str	r7, [r8, #208]	; 0xd0
   16000:	bl	11e1c <fork@plt>
   16004:	cmn	r0, #1
   16008:	bgt	15ef4 <__assert_fail@plt+0x3f7c>
   1600c:	b	15f78 <__assert_fail@plt+0x4000>
   16010:	mov	r7, #0
   16014:	mov	r6, #1
   16018:	mov	r0, r4
   1601c:	bl	11e10 <sigemptyset@plt>
   16020:	mov	r0, #2
   16024:	mov	r1, r4
   16028:	mov	r2, #0
   1602c:	bl	11b10 <sigprocmask@plt>
   16030:	cmp	r6, #0
   16034:	movw	r6, #1188	; 0x4a4
   16038:	movt	r6, #3
   1603c:	beq	160b4 <__assert_fail@plt+0x413c>
   16040:	ldrb	r1, [r6]
   16044:	eor	r0, r7, #1
   16048:	clz	r1, r1
   1604c:	lsr	r1, r1, #5
   16050:	orrs	r0, r0, r1
   16054:	bne	1605c <__assert_fail@plt+0x40e4>
   16058:	bl	11d38 <setsid@plt>
   1605c:	cmp	r7, #0
   16060:	beq	160a8 <__assert_fail@plt+0x4130>
   16064:	ldrb	r0, [r6]
   16068:	cmp	r0, #0
   1606c:	bne	1624c <__assert_fail@plt+0x42d4>
   16070:	movw	r0, #1384	; 0x568
   16074:	movt	r0, #3
   16078:	ldr	r7, [r0]
   1607c:	cmp	r7, #3
   16080:	bge	16094 <__assert_fail@plt+0x411c>
   16084:	b	160a8 <__assert_fail@plt+0x4130>
   16088:	sub	r7, r7, #1
   1608c:	cmp	r7, #2
   16090:	ble	160a8 <__assert_fail@plt+0x4130>
   16094:	cmp	sl, r7
   16098:	beq	16088 <__assert_fail@plt+0x4110>
   1609c:	mov	r0, r7
   160a0:	bl	11f48 <close@plt>
   160a4:	b	16088 <__assert_fail@plt+0x4110>
   160a8:	mov	r0, sl
   160ac:	mov	r1, r8
   160b0:	bl	12a08 <__assert_fail@plt+0xa90>
   160b4:	ldr	r0, [r8, #24]
   160b8:	cmp	r0, #0
   160bc:	beq	160c8 <__assert_fail@plt+0x4150>
   160c0:	mov	r7, #1
   160c4:	b	16230 <__assert_fail@plt+0x42b8>
   160c8:	ldr	r0, [r8, #16]
   160cc:	mov	r7, #1
   160d0:	cmp	r0, #1
   160d4:	bne	16230 <__assert_fail@plt+0x42b8>
   160d8:	mov	r0, sl
   160dc:	bl	11f48 <close@plt>
   160e0:	b	16230 <__assert_fail@plt+0x42b8>
   160e4:	ldr	r2, [r8, #12]
   160e8:	ldr	r3, [r8, #20]
   160ec:	movw	r1, #59519	; 0xe87f
   160f0:	mov	r0, #3
   160f4:	movt	r1, #1
   160f8:	bl	11e64 <syslog@plt>
   160fc:	ldr	r0, [r8, #60]	; 0x3c
   16100:	cmp	r0, #0
   16104:	bmi	1614c <__assert_fail@plt+0x41d4>
   16108:	movw	r1, #1520	; 0x5f0
   1610c:	and	r3, r0, #31
   16110:	movt	r1, #3
   16114:	mov	r2, r1
   16118:	ldr	r1, [r1]
   1611c:	sub	r1, r1, #1
   16120:	str	r1, [r2]
   16124:	movw	r2, #1388	; 0x56c
   16128:	lsr	r1, r0, #5
   1612c:	movt	r2, #3
   16130:	mov	r6, r2
   16134:	ldr	r2, [r2, r1, lsl #2]
   16138:	bic	r2, r2, r7, lsl r3
   1613c:	str	r2, [r6, r1, lsl #2]
   16140:	bl	11f48 <close@plt>
   16144:	mvn	r0, #0
   16148:	str	r0, [r8, #60]	; 0x3c
   1614c:	mov	r0, #0
   16150:	str	r0, [r8, #208]	; 0xd0
   16154:	ldr	r0, [r8, #24]
   16158:	cmp	r0, #2
   1615c:	blt	16188 <__assert_fail@plt+0x4210>
   16160:	str	r7, [r8, #24]
   16164:	b	161a4 <__assert_fail@plt+0x422c>
   16168:	movw	r0, #944	; 0x3b0
   1616c:	ldr	r2, [r8, #12]
   16170:	movw	r1, #58892	; 0xe60c
   16174:	movt	r0, #3
   16178:	movt	r1, #1
   1617c:	ldr	r0, [r0]
   16180:	bl	11d5c <fprintf@plt>
   16184:	b	15dd0 <__assert_fail@plt+0x3e58>
   16188:	cmp	r0, #0
   1618c:	bne	161a4 <__assert_fail@plt+0x422c>
   16190:	ldr	r0, [r8, #16]
   16194:	cmp	r0, #1
   16198:	bne	161a4 <__assert_fail@plt+0x422c>
   1619c:	mov	r0, sl
   161a0:	bl	11f48 <close@plt>
   161a4:	mov	r0, r4
   161a8:	bl	11e10 <sigemptyset@plt>
   161ac:	mov	r0, #2
   161b0:	mov	r1, r4
   161b4:	mov	r2, #0
   161b8:	bl	11b10 <sigprocmask@plt>
   161bc:	movw	r0, #1540	; 0x604
   161c0:	movt	r0, #3
   161c4:	ldr	r0, [r0]
   161c8:	cmp	r0, #0
   161cc:	bne	16230 <__assert_fail@plt+0x42b8>
   161d0:	movw	r0, #1540	; 0x604
   161d4:	movt	r0, #3
   161d8:	str	r7, [r0]
   161dc:	mov	r0, #600	; 0x258
   161e0:	bl	11bd0 <alarm@plt>
   161e4:	b	16230 <__assert_fail@plt+0x42b8>
   161e8:	movw	r0, #944	; 0x3b0
   161ec:	movw	r1, #59482	; 0xe85a
   161f0:	mov	r2, sl
   161f4:	movt	r0, #3
   161f8:	movt	r1, #1
   161fc:	ldr	r0, [r0]
   16200:	bl	11d5c <fprintf@plt>
   16204:	cmn	sl, #1
   16208:	bgt	15e28 <__assert_fail@plt+0x3eb0>
   1620c:	bl	11d74 <__errno_location@plt>
   16210:	ldr	r0, [r0]
   16214:	cmp	r0, #4
   16218:	beq	16230 <__assert_fail@plt+0x42b8>
   1621c:	ldr	r2, [r8, #12]
   16220:	movw	r1, #59499	; 0xe86b
   16224:	mov	r0, #4
   16228:	movt	r1, #1
   1622c:	bl	11e64 <syslog@plt>
   16230:	mov	r6, r5
   16234:	cmp	r9, #0
   16238:	beq	15d24 <__assert_fail@plt+0x3dac>
   1623c:	ldr	r8, [r8, #220]	; 0xdc
   16240:	cmp	r8, #0
   16244:	bne	15d94 <__assert_fail@plt+0x3e1c>
   16248:	b	15d24 <__assert_fail@plt+0x3dac>
   1624c:	movw	r0, #1384	; 0x568
   16250:	movw	r1, #59579	; 0xe8bb
   16254:	movt	r0, #3
   16258:	movt	r1, #1
   1625c:	ldr	r2, [r0]
   16260:	movw	r0, #944	; 0x3b0
   16264:	movt	r0, #3
   16268:	ldr	r0, [r0]
   1626c:	bl	11d5c <fprintf@plt>
   16270:	b	16070 <__assert_fail@plt+0x40f8>
   16274:	movw	r0, #944	; 0x3b0
   16278:	ldr	r2, [r5, #4]
   1627c:	movw	r1, #59415	; 0xe817
   16280:	movt	r0, #3
   16284:	movt	r1, #1
   16288:	ldr	r0, [r0]
   1628c:	bl	11d5c <fprintf@plt>
   16290:	b	15ac0 <__assert_fail@plt+0x3b48>
   16294:	movw	r1, #57719	; 0xe177
   16298:	mov	r0, #3
   1629c:	movt	r1, #1
   162a0:	bl	11e64 <syslog@plt>
   162a4:	mvn	r0, #0
   162a8:	bl	11d08 <exit@plt>
   162ac:	ldr	r2, [r4]
   162b0:	movw	r1, #59379	; 0xe7f3
   162b4:	mov	r0, #27
   162b8:	movt	r1, #1
   162bc:	bl	11e64 <syslog@plt>
   162c0:	mov	r0, #1
   162c4:	bl	11d08 <exit@plt>
   162c8:	push	{r4, r5, fp, lr}
   162cc:	add	fp, sp, #8
   162d0:	sub	sp, sp, #8
   162d4:	mov	r5, r1
   162d8:	mov	r4, #7
   162dc:	cmp	r0, #111	; 0x6f
   162e0:	ble	16320 <__assert_fail@plt+0x43a8>
   162e4:	cmp	r0, #112	; 0x70
   162e8:	beq	16364 <__assert_fail@plt+0x43ec>
   162ec:	cmp	r0, #256	; 0x100
   162f0:	beq	16394 <__assert_fail@plt+0x441c>
   162f4:	movw	r1, #257	; 0x101
   162f8:	cmp	r0, r1
   162fc:	bne	163f4 <__assert_fail@plt+0x447c>
   16300:	movw	r0, #1188	; 0x4a4
   16304:	mov	r1, #1
   16308:	movt	r0, #3
   1630c:	strb	r1, [r0, #1]
   16310:	mov	r4, #0
   16314:	mov	r0, r4
   16318:	sub	sp, fp, #8
   1631c:	pop	{r4, r5, fp, pc}
   16320:	cmp	r0, #82	; 0x52
   16324:	beq	163b4 <__assert_fail@plt+0x443c>
   16328:	cmp	r0, #100	; 0x64
   1632c:	bne	163f4 <__assert_fail@plt+0x447c>
   16330:	movw	r0, #1188	; 0x4a4
   16334:	mov	r1, #1
   16338:	movt	r0, #3
   1633c:	strb	r1, [r0]
   16340:	movw	r0, #1524	; 0x5f4
   16344:	movt	r0, #3
   16348:	ldr	r1, [r0]
   1634c:	orr	r1, r1, #1
   16350:	str	r1, [r0]
   16354:	mov	r4, #0
   16358:	mov	r0, r4
   1635c:	sub	sp, fp, #8
   16360:	pop	{r4, r5, fp, pc}
   16364:	cmp	r5, #0
   16368:	beq	16400 <__assert_fail@plt+0x4488>
   1636c:	ldrb	r0, [r5]
   16370:	cmp	r0, #0
   16374:	beq	16400 <__assert_fail@plt+0x4488>
   16378:	movw	r0, #800	; 0x320
   1637c:	movt	r0, #3
   16380:	str	r5, [r0, #4]
   16384:	mov	r4, #0
   16388:	mov	r0, r4
   1638c:	sub	sp, fp, #8
   16390:	pop	{r4, r5, fp, pc}
   16394:	movw	r0, #1188	; 0x4a4
   16398:	mov	r1, #1
   1639c:	movt	r0, #3
   163a0:	strb	r1, [r0, #2]
   163a4:	mov	r4, #0
   163a8:	mov	r0, r4
   163ac:	sub	sp, fp, #8
   163b0:	pop	{r4, r5, fp, pc}
   163b4:	add	r1, sp, #4
   163b8:	mov	r0, r5
   163bc:	mov	r2, #0
   163c0:	mov	r4, #0
   163c4:	bl	11abc <strtol@plt>
   163c8:	cmp	r0, #1
   163cc:	blt	163e0 <__assert_fail@plt+0x4468>
   163d0:	ldr	r1, [sp, #4]
   163d4:	ldrb	r1, [r1]
   163d8:	cmp	r1, #0
   163dc:	beq	16420 <__assert_fail@plt+0x44a8>
   163e0:	movw	r1, #59927	; 0xea17
   163e4:	mov	r0, #3
   163e8:	mov	r2, r5
   163ec:	movt	r1, #1
   163f0:	bl	11e64 <syslog@plt>
   163f4:	mov	r0, r4
   163f8:	sub	sp, fp, #8
   163fc:	pop	{r4, r5, fp, pc}
   16400:	movw	r0, #1188	; 0x4a4
   16404:	mov	r1, #1
   16408:	movt	r0, #3
   1640c:	strb	r1, [r0, #3]
   16410:	mov	r4, #0
   16414:	mov	r0, r4
   16418:	sub	sp, fp, #8
   1641c:	pop	{r4, r5, fp, pc}
   16420:	movw	r1, #800	; 0x320
   16424:	movt	r1, #3
   16428:	str	r0, [r1]
   1642c:	mov	r4, #0
   16430:	mov	r0, r4
   16434:	sub	sp, fp, #8
   16438:	pop	{r4, r5, fp, pc}
   1643c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16440:	add	fp, sp, #28
   16444:	sub	sp, sp, #20
   16448:	mov	r6, r3
   1644c:	mov	sl, r2
   16450:	str	r1, [sp, #16]
   16454:	mov	r7, r0
   16458:	bl	11d2c <strlen@plt>
   1645c:	mov	r4, r0
   16460:	mov	r0, #0
   16464:	sub	r5, r7, #1
   16468:	str	r0, [sl]
   1646c:	str	r0, [r6]
   16470:	cmp	r4, #1
   16474:	blt	165ac <__assert_fail@plt+0x4634>
   16478:	bl	11cf0 <__ctype_b_loc@plt>
   1647c:	ldrb	r1, [r5, r4]
   16480:	ldr	r0, [r0]
   16484:	sub	r4, r4, #1
   16488:	add	r0, r0, r1, lsl #1
   1648c:	ldrb	r0, [r0, #1]
   16490:	tst	r0, #32
   16494:	bne	16470 <__assert_fail@plt+0x44f8>
   16498:	str	r6, [sp, #4]
   1649c:	add	r9, r4, #1
   164a0:	add	r6, r7, #1
   164a4:	mov	r5, #0
   164a8:	mov	r8, #1
   164ac:	mov	r4, #1
   164b0:	str	r7, [sp, #12]
   164b4:	cmp	r5, r9
   164b8:	str	r4, [sl]
   164bc:	bge	16508 <__assert_fail@plt+0x4590>
   164c0:	b	164e8 <__assert_fail@plt+0x4570>
   164c4:	mov	r7, r5
   164c8:	add	r5, r7, #1
   164cc:	ldr	r7, [sp, #12]
   164d0:	add	r4, r4, #1
   164d4:	cmp	r5, r9
   164d8:	bge	165bc <__assert_fail@plt+0x4644>
   164dc:	cmp	r5, r9
   164e0:	str	r4, [sl]
   164e4:	bge	16508 <__assert_fail@plt+0x4590>
   164e8:	ldrb	r0, [r7, r5]
   164ec:	cmp	r0, #32
   164f0:	cmpne	r0, #9
   164f4:	bne	16508 <__assert_fail@plt+0x4590>
   164f8:	add	r5, r5, #1
   164fc:	cmp	r9, r5
   16500:	bne	164e8 <__assert_fail@plt+0x4570>
   16504:	mov	r5, r9
   16508:	ldrb	r0, [r7, r5]
   1650c:	cmp	r0, #39	; 0x27
   16510:	cmpne	r0, #34	; 0x22
   16514:	bne	16548 <__assert_fail@plt+0x45d0>
   16518:	ldrb	r1, [r6, r5]
   1651c:	add	r7, r5, #1
   16520:	cmp	r7, r9
   16524:	bge	16538 <__assert_fail@plt+0x45c0>
   16528:	cmp	r1, r0
   1652c:	mov	r5, r7
   16530:	bne	16518 <__assert_fail@plt+0x45a0>
   16534:	b	164c8 <__assert_fail@plt+0x4550>
   16538:	add	r5, r5, #1
   1653c:	cmp	r1, #34	; 0x22
   16540:	beq	164c4 <__assert_fail@plt+0x454c>
   16544:	b	16554 <__assert_fail@plt+0x45dc>
   16548:	mov	r1, r0
   1654c:	cmp	r1, #34	; 0x22
   16550:	beq	164c4 <__assert_fail@plt+0x454c>
   16554:	ldr	r0, [sp, #16]
   16558:	bl	11d44 <strchr@plt>
   1655c:	cmp	r0, #0
   16560:	bne	164c4 <__assert_fail@plt+0x454c>
   16564:	b	16578 <__assert_fail@plt+0x4600>
   16568:	ldr	r0, [sp, #16]
   1656c:	bl	11d44 <strchr@plt>
   16570:	cmp	r0, #0
   16574:	bne	164c8 <__assert_fail@plt+0x4550>
   16578:	mov	r7, r5
   1657c:	add	r5, r5, #1
   16580:	cmp	r5, r9
   16584:	bge	164c8 <__assert_fail@plt+0x4550>
   16588:	ldrb	r1, [r6, r7]
   1658c:	sub	r0, r1, #9
   16590:	cmp	r0, #25
   16594:	bhi	16568 <__assert_fail@plt+0x45f0>
   16598:	movw	r2, #1
   1659c:	movt	r2, #640	; 0x280
   165a0:	tst	r2, r8, lsl r0
   165a4:	beq	16568 <__assert_fail@plt+0x45f0>
   165a8:	b	164c8 <__assert_fail@plt+0x4550>
   165ac:	mov	r4, #1
   165b0:	mov	r0, r4
   165b4:	sub	sp, fp, #28
   165b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165bc:	mov	r0, r4
   165c0:	mov	r1, #4
   165c4:	bl	185b4 <argp_parse@@Base+0x1b10>
   165c8:	ldr	r1, [sp, #4]
   165cc:	mov	r2, #0
   165d0:	str	r0, [r1]
   165d4:	ldr	r1, [sl]
   165d8:	cmp	r1, #1
   165dc:	blt	1678c <__assert_fail@plt+0x4814>
   165e0:	mov	r1, #0
   165e4:	mov	r5, #0
   165e8:	str	sl, [sp]
   165ec:	cmp	r5, r9
   165f0:	str	r1, [sp, #8]
   165f4:	bge	16618 <__assert_fail@plt+0x46a0>
   165f8:	ldrb	r0, [r7, r5]
   165fc:	cmp	r0, #32
   16600:	cmpne	r0, #9
   16604:	bne	16618 <__assert_fail@plt+0x46a0>
   16608:	add	r5, r5, #1
   1660c:	cmp	r9, r5
   16610:	bne	165f8 <__assert_fail@plt+0x4680>
   16614:	mov	r5, r9
   16618:	ldrb	r4, [r7, r5]
   1661c:	cmp	r4, #39	; 0x27
   16620:	beq	16634 <__assert_fail@plt+0x46bc>
   16624:	cmp	r4, #34	; 0x22
   16628:	mov	r1, r4
   1662c:	mov	r8, r5
   16630:	bne	1665c <__assert_fail@plt+0x46e4>
   16634:	mov	r0, r5
   16638:	ldrb	r1, [r6, r0]
   1663c:	add	sl, r0, #1
   16640:	cmp	sl, r9
   16644:	bge	16658 <__assert_fail@plt+0x46e0>
   16648:	cmp	r1, r4
   1664c:	mov	r0, sl
   16650:	bne	16638 <__assert_fail@plt+0x46c0>
   16654:	b	16694 <__assert_fail@plt+0x471c>
   16658:	add	r8, r0, #1
   1665c:	cmp	r1, #34	; 0x22
   16660:	bne	16680 <__assert_fail@plt+0x4708>
   16664:	mov	sl, r8
   16668:	cmp	r4, #39	; 0x27
   1666c:	bne	1669c <__assert_fail@plt+0x4724>
   16670:	ldrb	r0, [r7, sl]
   16674:	cmp	r0, #39	; 0x27
   16678:	bne	16704 <__assert_fail@plt+0x478c>
   1667c:	b	166b0 <__assert_fail@plt+0x4738>
   16680:	ldr	r0, [sp, #16]
   16684:	bl	11d44 <strchr@plt>
   16688:	cmp	r0, #0
   1668c:	beq	166cc <__assert_fail@plt+0x4754>
   16690:	mov	sl, r8
   16694:	cmp	r4, #39	; 0x27
   16698:	beq	16670 <__assert_fail@plt+0x46f8>
   1669c:	cmp	r4, #34	; 0x22
   166a0:	bne	16704 <__assert_fail@plt+0x478c>
   166a4:	ldrb	r0, [r7, sl]
   166a8:	cmp	r0, #34	; 0x22
   166ac:	bne	16704 <__assert_fail@plt+0x478c>
   166b0:	sub	r0, sl, #1
   166b4:	add	r5, r5, #1
   166b8:	b	16708 <__assert_fail@plt+0x4790>
   166bc:	ldr	r0, [sp, #16]
   166c0:	bl	11d44 <strchr@plt>
   166c4:	cmp	r0, #0
   166c8:	bne	16694 <__assert_fail@plt+0x471c>
   166cc:	mov	sl, r8
   166d0:	add	r8, r8, #1
   166d4:	cmp	r8, r9
   166d8:	bge	16694 <__assert_fail@plt+0x471c>
   166dc:	ldrb	r1, [r6, sl]
   166e0:	sub	r0, r1, #9
   166e4:	cmp	r0, #25
   166e8:	bhi	166bc <__assert_fail@plt+0x4744>
   166ec:	movw	r2, #1
   166f0:	mov	r3, #1
   166f4:	movt	r2, #640	; 0x280
   166f8:	tst	r2, r3, lsl r0
   166fc:	beq	166bc <__assert_fail@plt+0x4744>
   16700:	b	16694 <__assert_fail@plt+0x471c>
   16704:	mov	r0, sl
   16708:	sub	r7, r0, r5
   1670c:	mov	r1, #1
   16710:	mov	r4, #1
   16714:	add	r0, r7, #2
   16718:	bl	185b4 <argp_parse@@Base+0x1b10>
   1671c:	ldr	r8, [sp, #4]
   16720:	ldr	r2, [sp, #8]
   16724:	ldr	r1, [r8]
   16728:	str	r0, [r1, r2, lsl #2]
   1672c:	ldr	r0, [r8]
   16730:	ldr	r0, [r0, r2, lsl #2]
   16734:	cmp	r0, #0
   16738:	beq	16798 <__assert_fail@plt+0x4820>
   1673c:	add	r4, r7, #1
   16740:	ldr	r7, [sp, #12]
   16744:	mov	r1, r5
   16748:	add	r5, sl, #1
   1674c:	mov	r2, r4
   16750:	add	r1, r7, r1
   16754:	bl	11b64 <memcpy@plt>
   16758:	ldr	r1, [sp, #8]
   1675c:	ldr	r0, [r8]
   16760:	mov	r2, #0
   16764:	ldr	r0, [r0, r1, lsl #2]
   16768:	add	r1, r1, #1
   1676c:	strb	r2, [r0, r4]
   16770:	ldr	r0, [sp]
   16774:	ldr	r0, [r0]
   16778:	cmp	r1, r0
   1677c:	blt	165ec <__assert_fail@plt+0x4674>
   16780:	ldr	r0, [r8]
   16784:	mov	r2, #0
   16788:	b	16790 <__assert_fail@plt+0x4818>
   1678c:	mov	r1, #0
   16790:	mov	r4, #0
   16794:	str	r2, [r0, r1, lsl #2]
   16798:	mov	r0, r4
   1679c:	sub	sp, fp, #28
   167a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167a4:	push	{r4, r5, r6, sl, fp, lr}
   167a8:	add	fp, sp, #16
   167ac:	mov	r4, r1
   167b0:	cmp	r0, #1
   167b4:	blt	167d4 <__assert_fail@plt+0x485c>
   167b8:	mov	r5, r0
   167bc:	sub	r6, r4, #4
   167c0:	ldr	r0, [r6, r5, lsl #2]
   167c4:	bl	17e80 <argp_parse@@Base+0x13dc>
   167c8:	sub	r5, r5, #1
   167cc:	cmp	r5, #0
   167d0:	bgt	167c0 <__assert_fail@plt+0x4848>
   167d4:	mov	r0, r4
   167d8:	bl	17e80 <argp_parse@@Base+0x13dc>
   167dc:	mov	r0, #1
   167e0:	pop	{r4, r5, r6, sl, fp, pc}
   167e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167e8:	add	fp, sp, #28
   167ec:	sub	sp, sp, #4
   167f0:	cmp	r2, #0
   167f4:	beq	16898 <__assert_fail@plt+0x4920>
   167f8:	mov	r4, r0
   167fc:	mov	r0, #1
   16800:	mov	r5, r2
   16804:	mov	r7, r1
   16808:	bl	18608 <argp_parse@@Base+0x1b64>
   1680c:	cmp	r0, #0
   16810:	beq	16898 <__assert_fail@plt+0x4920>
   16814:	mov	r9, #0
   16818:	mov	r6, r0
   1681c:	cmp	r4, #1
   16820:	strb	r9, [r0]
   16824:	blt	168f0 <__assert_fail@plt+0x4978>
   16828:	str	r5, [sp]
   1682c:	mov	r5, #0
   16830:	mov	sl, #32
   16834:	mov	r8, #0
   16838:	b	16854 <__assert_fail@plt+0x48dc>
   1683c:	ldr	r1, [r7, r8, lsl #2]
   16840:	mov	r0, r6
   16844:	bl	11c54 <strcat@plt>
   16848:	add	r8, r8, #1
   1684c:	cmp	r4, r8
   16850:	beq	168a8 <__assert_fail@plt+0x4930>
   16854:	ldr	r0, [r7, r8, lsl #2]
   16858:	bl	11d2c <strlen@plt>
   1685c:	add	r0, r5, r0
   16860:	add	r5, r0, #2
   16864:	mov	r0, r6
   16868:	mov	r1, r5
   1686c:	bl	18638 <argp_parse@@Base+0x1b94>
   16870:	cmp	r0, #0
   16874:	beq	16898 <__assert_fail@plt+0x4920>
   16878:	mov	r6, r0
   1687c:	cmp	r8, #0
   16880:	beq	1683c <__assert_fail@plt+0x48c4>
   16884:	mov	r0, r6
   16888:	bl	11d2c <strlen@plt>
   1688c:	add	r0, r6, r0
   16890:	strh	sl, [r0]
   16894:	b	1683c <__assert_fail@plt+0x48c4>
   16898:	mov	r9, #1
   1689c:	mov	r0, r9
   168a0:	sub	sp, fp, #28
   168a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168a8:	ldrb	r0, [r6]
   168ac:	ldr	r5, [sp]
   168b0:	cmp	r0, #0
   168b4:	beq	168f0 <__assert_fail@plt+0x4978>
   168b8:	mov	r0, r6
   168bc:	bl	11d2c <strlen@plt>
   168c0:	add	r0, r0, r6
   168c4:	ldrb	r1, [r0, #-1]!
   168c8:	cmp	r1, #32
   168cc:	bne	168f0 <__assert_fail@plt+0x4978>
   168d0:	mov	r4, #0
   168d4:	strb	r4, [r0]
   168d8:	mov	r0, r6
   168dc:	bl	11d2c <strlen@plt>
   168e0:	add	r0, r0, r6
   168e4:	ldrb	r1, [r0, #-1]!
   168e8:	cmp	r1, #32
   168ec:	beq	168d4 <__assert_fail@plt+0x495c>
   168f0:	str	r6, [r5]
   168f4:	mov	r0, r9
   168f8:	sub	sp, fp, #28
   168fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16900:	push	{r4, sl, fp, lr}
   16904:	add	fp, sp, #8
   16908:	mov	r0, #0
   1690c:	bl	11bd0 <alarm@plt>
   16910:	mov	r4, r0
   16914:	mov	r0, #14
   16918:	mov	r1, #0
   1691c:	bl	11b70 <signal@plt>
   16920:	cmp	r4, #0
   16924:	popne	{r4, sl, fp, pc}
   16928:	movw	r2, #60001	; 0xea61
   1692c:	mov	r0, #1
   16930:	mov	r1, #0
   16934:	movt	r2, #1
   16938:	pop	{r4, sl, fp, lr}
   1693c:	b	11c6c <error@plt>
   16940:	push	{r4, r5, r6, r7, fp, lr}
   16944:	add	fp, sp, #16
   16948:	mov	r7, r2
   1694c:	mov	r5, r1
   16950:	mov	r6, r0
   16954:	bl	11cfc <getpid@plt>
   16958:	mov	r4, r0
   1695c:	bl	11e1c <fork@plt>
   16960:	cmn	r0, #1
   16964:	beq	169d0 <__assert_fail@plt+0x4a58>
   16968:	cmp	r0, #0
   1696c:	bne	16a5c <__assert_fail@plt+0x4ae4>
   16970:	bl	11d38 <setsid@plt>
   16974:	mov	r1, r0
   16978:	mvn	r0, #0
   1697c:	cmn	r1, #1
   16980:	beq	169d0 <__assert_fail@plt+0x4a58>
   16984:	mov	r0, #1
   16988:	mov	r1, #1
   1698c:	bl	11b70 <signal@plt>
   16990:	bl	11e1c <fork@plt>
   16994:	cmn	r0, #1
   16998:	beq	169d0 <__assert_fail@plt+0x4a58>
   1699c:	cmp	r0, #0
   169a0:	bne	16a80 <__assert_fail@plt+0x4b08>
   169a4:	cmp	r6, #0
   169a8:	bne	169c4 <__assert_fail@plt+0x4a4c>
   169ac:	movw	r0, #61440	; 0xf000
   169b0:	movt	r0, #1
   169b4:	bl	11c0c <chdir@plt>
   169b8:	cmp	r0, #0
   169bc:	mvn	r0, #0
   169c0:	bmi	169d0 <__assert_fail@plt+0x4a58>
   169c4:	cmp	r5, #0
   169c8:	beq	169d4 <__assert_fail@plt+0x4a5c>
   169cc:	mov	r0, r4
   169d0:	pop	{r4, r5, r6, r7, fp, pc}
   169d4:	mov	r0, #4
   169d8:	bl	11bdc <sysconf@plt>
   169dc:	cmn	r0, #1
   169e0:	mov	r5, r0
   169e4:	movweq	r5, #64	; 0x40
   169e8:	cmp	r5, #1
   169ec:	blt	16a08 <__assert_fail@plt+0x4a90>
   169f0:	mov	r6, #0
   169f4:	mov	r0, r6
   169f8:	bl	11f48 <close@plt>
   169fc:	add	r6, r6, #1
   16a00:	cmp	r5, r6
   16a04:	bne	169f4 <__assert_fail@plt+0x4a7c>
   16a08:	movw	r0, #60029	; 0xea7d
   16a0c:	mov	r1, #2
   16a10:	mov	r2, #0
   16a14:	movt	r0, #1
   16a18:	bl	11c84 <open64@plt>
   16a1c:	cmn	r0, #1
   16a20:	beq	169cc <__assert_fail@plt+0x4a54>
   16a24:	mov	r1, #0
   16a28:	mov	r5, r0
   16a2c:	bl	11be8 <dup2@plt>
   16a30:	mov	r0, r5
   16a34:	mov	r1, #1
   16a38:	bl	11be8 <dup2@plt>
   16a3c:	mov	r0, r5
   16a40:	mov	r1, #2
   16a44:	bl	11be8 <dup2@plt>
   16a48:	cmp	r5, #3
   16a4c:	blt	169cc <__assert_fail@plt+0x4a54>
   16a50:	mov	r0, r5
   16a54:	bl	11f48 <close@plt>
   16a58:	b	169cc <__assert_fail@plt+0x4a54>
   16a5c:	cmp	r7, #1
   16a60:	blt	16a80 <__assert_fail@plt+0x4b08>
   16a64:	movw	r1, #26880	; 0x6900
   16a68:	mov	r0, #14
   16a6c:	movt	r1, #1
   16a70:	bl	11b70 <signal@plt>
   16a74:	mov	r0, r7
   16a78:	bl	11bd0 <alarm@plt>
   16a7c:	bl	11ae0 <pause@plt>
   16a80:	mov	r0, #0
   16a84:	bl	11b58 <_exit@plt>

00016a88 <daemon@@Base>:
   16a88:	push	{fp, lr}
   16a8c:	mov	fp, sp
   16a90:	mov	r2, #0
   16a94:	bl	16940 <__assert_fail@plt+0x49c8>
   16a98:	cmn	r0, #1
   16a9c:	movwne	r0, #0
   16aa0:	pop	{fp, pc}

00016aa4 <argp_parse@@Base>:
   16aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16aa8:	add	fp, sp, #28
   16aac:	sub	sp, sp, #212	; 0xd4
   16ab0:	mov	r4, r3
   16ab4:	mov	r6, r2
   16ab8:	mov	r7, r1
   16abc:	mov	r5, r0
   16ac0:	tst	r3, #1
   16ac4:	bne	16af8 <argp_parse@@Base+0x54>
   16ac8:	movw	r0, #940	; 0x3ac
   16acc:	movt	r0, #3
   16ad0:	ldr	r1, [r0]
   16ad4:	cmp	r1, #0
   16ad8:	bne	16ae4 <argp_parse@@Base+0x40>
   16adc:	ldr	r1, [r6]
   16ae0:	str	r1, [r0]
   16ae4:	movw	r8, #936	; 0x3a8
   16ae8:	movt	r8, #3
   16aec:	ldr	r0, [r8]
   16af0:	cmp	r0, #0
   16af4:	beq	16bb4 <argp_parse@@Base+0x110>
   16af8:	tst	r4, #16
   16afc:	str	r6, [fp, #-228]	; 0xffffff1c
   16b00:	str	r7, [fp, #-232]	; 0xffffff18
   16b04:	bne	16bd0 <argp_parse@@Base+0x12c>
   16b08:	mov	r1, sp
   16b0c:	sub	r3, r1, #64	; 0x40
   16b10:	mov	sp, r3
   16b14:	mov	r2, sp
   16b18:	sub	r0, r2, #32
   16b1c:	mov	sp, r0
   16b20:	vmov.i32	q8, #0	; 0x00000000
   16b24:	sub	r2, r2, #20
   16b28:	cmp	r5, #0
   16b2c:	vst1.32	{d16-d17}, [r2]
   16b30:	mov	r2, r0
   16b34:	vst1.64	{d16-d17}, [r2]!
   16b38:	str	r3, [r2]
   16b3c:	sub	r2, r1, #32
   16b40:	sub	r1, r1, #48	; 0x30
   16b44:	vst1.64	{d16-d17}, [r2]
   16b48:	vst1.64	{d16-d17}, [r1]
   16b4c:	mov	r1, #48	; 0x30
   16b50:	mov	r2, r3
   16b54:	vst1.64	{d16-d17}, [r2], r1
   16b58:	vst1.64	{d16-d17}, [r2]
   16b5c:	movw	r2, #60040	; 0xea88
   16b60:	strne	r5, [r3], #16
   16b64:	movt	r2, #1
   16b68:	mov	r1, r3
   16b6c:	str	r2, [r1], #16
   16b70:	movw	r2, #1564	; 0x61c
   16b74:	movt	r2, #3
   16b78:	ldr	r2, [r2]
   16b7c:	cmp	r2, #0
   16b80:	bne	16b98 <argp_parse@@Base+0xf4>
   16b84:	movw	r2, #1204	; 0x4b4
   16b88:	movt	r2, #3
   16b8c:	ldr	r2, [r2]
   16b90:	cmp	r2, #0
   16b94:	beq	16ba8 <argp_parse@@Base+0x104>
   16b98:	movw	r2, #60068	; 0xeaa4
   16b9c:	mov	r3, r1
   16ba0:	movt	r2, #1
   16ba4:	str	r2, [r1]
   16ba8:	mov	r1, #0
   16bac:	str	r1, [r3, #16]
   16bb0:	b	16bd4 <argp_parse@@Base+0x130>
   16bb4:	ldr	r0, [r6]
   16bb8:	bl	17de8 <argp_parse@@Base+0x1344>
   16bbc:	str	r0, [r8]
   16bc0:	tst	r4, #16
   16bc4:	str	r6, [fp, #-228]	; 0xffffff1c
   16bc8:	str	r7, [fp, #-232]	; 0xffffff18
   16bcc:	beq	16b08 <argp_parse@@Base+0x64>
   16bd0:	mov	r0, r5
   16bd4:	vmov.i32	q8, #0	; 0x00000000
   16bd8:	sub	r9, fp, #96	; 0x60
   16bdc:	mov	r7, #12
   16be0:	mov	r5, #0
   16be4:	cmp	r0, #0
   16be8:	str	r4, [fp, #-224]	; 0xffffff20
   16bec:	str	r0, [fp, #-236]	; 0xffffff14
   16bf0:	mov	r1, r9
   16bf4:	str	r5, [fp, #-52]	; 0xffffffcc
   16bf8:	str	r5, [fp, #-56]	; 0xffffffc8
   16bfc:	str	r5, [fp, #-60]	; 0xffffffc4
   16c00:	vst1.64	{d16-d17}, [r1], r7
   16c04:	vst1.32	{d16-d17}, [r1]
   16c08:	mov	r1, #1
   16c0c:	bic	r3, r1, r4, lsr #2
   16c10:	str	r3, [fp, #-64]	; 0xffffffc0
   16c14:	beq	16c4c <argp_parse@@Base+0x1a8>
   16c18:	sub	r1, fp, #64	; 0x40
   16c1c:	bl	179e0 <argp_parse@@Base+0xf3c>
   16c20:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16c28:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16c2c:	mov	r6, #16
   16c30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16c34:	add	r2, r2, r2, lsl #3
   16c38:	add	r1, r6, r1, lsl #4
   16c3c:	mov	r6, #36	; 0x24
   16c40:	lsl	r5, r0, #2
   16c44:	add	r8, r6, r2, lsl #2
   16c48:	b	16c54 <argp_parse@@Base+0x1b0>
   16c4c:	mov	r8, #36	; 0x24
   16c50:	mov	r1, #16
   16c54:	add	r4, r8, r5
   16c58:	add	sl, r4, r1
   16c5c:	add	r0, r3, sl
   16c60:	add	r0, r0, #1
   16c64:	bl	18608 <argp_parse@@Base+0x1b64>
   16c68:	cmp	r0, #0
   16c6c:	str	r0, [fp, #-100]	; 0xffffff9c
   16c70:	beq	17758 <argp_parse@@Base+0xcb4>
   16c74:	mov	r6, r0
   16c78:	mov	r0, #12
   16c7c:	sub	r1, fp, #220	; 0xdc
   16c80:	mov	r2, r5
   16c84:	vld1.64	{d16-d17}, [r9], r0
   16c88:	add	r0, r1, #20
   16c8c:	add	r7, r6, r8
   16c90:	add	r8, r6, r4
   16c94:	add	r4, r6, sl
   16c98:	vld1.32	{d18-d19}, [r9]
   16c9c:	mov	r9, r1
   16ca0:	vst1.32	{d16-d17}, [r0]
   16ca4:	add	r0, r1, #32
   16ca8:	mov	r1, #0
   16cac:	vst1.32	{d18-d19}, [r0]
   16cb0:	mov	r0, #1
   16cb4:	str	r6, [fp, #-172]	; 0xffffff54
   16cb8:	str	r0, [fp, #-204]	; 0xffffff34
   16cbc:	str	r0, [fp, #-208]	; 0xffffff30
   16cc0:	mov	r0, r7
   16cc4:	str	r7, [fp, #-164]	; 0xffffff5c
   16cc8:	str	r8, [fp, #-212]	; 0xffffff2c
   16ccc:	str	r4, [fp, #-216]	; 0xffffff28
   16cd0:	bl	11da4 <memset@plt>
   16cd4:	ldr	sl, [fp, #-224]	; 0xffffff20
   16cd8:	mov	r0, #45	; 0x2d
   16cdc:	str	r7, [fp, #-36]	; 0xffffffdc
   16ce0:	str	r8, [fp, #-40]	; 0xffffffd8
   16ce4:	str	r4, [fp, #-44]	; 0xffffffd4
   16ce8:	str	r9, [fp, #-48]	; 0xffffffd0
   16cec:	tst	sl, #8
   16cf0:	moveq	r0, #43	; 0x2b
   16cf4:	tsteq	sl, #4
   16cf8:	beq	1732c <argp_parse@@Base+0x888>
   16cfc:	add	r1, r4, #1
   16d00:	strb	r0, [r4]
   16d04:	str	r1, [fp, #-44]	; 0xffffffd4
   16d08:	ldr	r0, [fp, #-236]	; 0xffffff14
   16d0c:	ldr	r5, [fp, #-228]	; 0xffffff1c
   16d10:	ldr	r9, [fp, #-232]	; 0xffffff18
   16d14:	mov	r3, #0
   16d18:	strb	r3, [r1]
   16d1c:	str	r3, [r8]
   16d20:	cmp	r0, #0
   16d24:	str	r0, [fp, #-220]	; 0xffffff24
   16d28:	beq	16d60 <argp_parse@@Base+0x2bc>
   16d2c:	sub	sp, sp, #8
   16d30:	sub	r1, fp, #48	; 0x30
   16d34:	mov	r2, #0
   16d38:	mov	r3, r6
   16d3c:	str	r1, [sp]
   16d40:	mov	r1, #0
   16d44:	bl	17acc <argp_parse@@Base+0x1028>
   16d48:	add	sp, sp, #8
   16d4c:	str	r0, [fp, #-168]	; 0xffffff58
   16d50:	mov	r6, r0
   16d54:	ldr	r3, [fp, #-220]	; 0xffffff24
   16d58:	ldr	r4, [fp, #-172]	; 0xffffff54
   16d5c:	b	16d68 <argp_parse@@Base+0x2c4>
   16d60:	mov	r4, r6
   16d64:	str	r6, [fp, #-168]	; 0xffffff58
   16d68:	vmov.i32	q8, #0	; 0x00000000
   16d6c:	sub	r1, fp, #220	; 0xdc
   16d70:	mov	r7, #0
   16d74:	mov	r0, #1
   16d78:	mov	r8, r5
   16d7c:	cmp	r4, r6
   16d80:	mov	r2, r1
   16d84:	add	r1, r1, #84	; 0x54
   16d88:	str	r7, [fp, #-116]	; 0xffffff8c
   16d8c:	str	r7, [fp, #-120]	; 0xffffff88
   16d90:	vst1.32	{d16-d17}, [r1]
   16d94:	str	sl, [fp, #-140]	; 0xffffff74
   16d98:	str	r5, [fp, #-148]	; 0xffffff6c
   16d9c:	str	r9, [fp, #-152]	; 0xffffff68
   16da0:	str	r3, [fp, #-156]	; 0xffffff64
   16da4:	str	r2, [fp, #-104]	; 0xffffff98
   16da8:	str	r7, [fp, #-144]	; 0xffffff70
   16dac:	str	r0, [fp, #-160]	; 0xffffff60
   16db0:	movw	r0, #944	; 0x3b0
   16db4:	add	sl, r2, #64	; 0x40
   16db8:	movt	r0, #3
   16dbc:	ldr	r0, [r0]
   16dc0:	str	r0, [fp, #-112]	; 0xffffff90
   16dc4:	movw	r0, #948	; 0x3b4
   16dc8:	movt	r0, #3
   16dcc:	ldr	r0, [r0]
   16dd0:	str	r0, [fp, #-108]	; 0xffffff94
   16dd4:	bcs	16ec0 <argp_parse@@Base+0x41c>
   16dd8:	ldr	r0, [fp, #12]
   16ddc:	str	r0, [r4, #24]
   16de0:	cmp	r7, #7
   16de4:	cmpne	r7, #0
   16de8:	beq	16e50 <argp_parse@@Base+0x3ac>
   16dec:	b	17758 <argp_parse@@Base+0xcb4>
   16df0:	ldr	r0, [r4, #32]
   16df4:	mov	r1, #0
   16df8:	mov	r2, sl
   16dfc:	str	r0, [fp, #-120]	; 0xffffff88
   16e00:	ldr	r0, [r4, #24]
   16e04:	str	r0, [fp, #-128]	; 0xffffff80
   16e08:	ldr	r0, [r4, #28]
   16e0c:	str	r0, [fp, #-124]	; 0xffffff84
   16e10:	ldr	r0, [r4, #12]
   16e14:	str	r0, [fp, #-136]	; 0xffffff78
   16e18:	movw	r0, #6
   16e1c:	movt	r0, #256	; 0x100
   16e20:	sub	r0, r0, #3
   16e24:	blx	r3
   16e28:	mov	r7, r0
   16e2c:	ldr	r0, [fp, #-120]	; 0xffffff88
   16e30:	str	r0, [r4, #32]
   16e34:	ldr	r0, [fp, #-168]	; 0xffffff58
   16e38:	add	r4, r4, #36	; 0x24
   16e3c:	cmp	r4, r0
   16e40:	bcs	16eb4 <argp_parse@@Base+0x410>
   16e44:	cmp	r7, #7
   16e48:	cmpne	r7, #0
   16e4c:	bne	17758 <argp_parse@@Base+0xcb4>
   16e50:	ldr	r0, [r4, #16]
   16e54:	cmp	r0, #0
   16e58:	beq	16e6c <argp_parse@@Base+0x3c8>
   16e5c:	ldr	r1, [r4, #20]
   16e60:	ldr	r0, [r0, #28]
   16e64:	ldr	r0, [r0, r1, lsl #2]
   16e68:	str	r0, [r4, #24]
   16e6c:	ldr	r3, [r4]
   16e70:	cmp	r3, #0
   16e74:	bne	16df0 <argp_parse@@Base+0x34c>
   16e78:	ldr	r0, [r4, #4]
   16e7c:	mov	r7, #7
   16e80:	ldr	r0, [r0, #16]
   16e84:	cmp	r0, #0
   16e88:	beq	16e34 <argp_parse@@Base+0x390>
   16e8c:	ldr	r0, [r0]
   16e90:	cmp	r0, #0
   16e94:	beq	16e34 <argp_parse@@Base+0x390>
   16e98:	ldr	r0, [r4, #24]
   16e9c:	ldr	r1, [r4, #28]
   16ea0:	str	r0, [r1]
   16ea4:	ldr	r3, [r4]
   16ea8:	cmp	r3, #0
   16eac:	bne	16df0 <argp_parse@@Base+0x34c>
   16eb0:	b	16e34 <argp_parse@@Base+0x390>
   16eb4:	cmp	r7, #7
   16eb8:	cmpne	r7, #0
   16ebc:	bne	17758 <argp_parse@@Base+0xcb4>
   16ec0:	ldr	r0, [fp, #-140]	; 0xffffff74
   16ec4:	tst	r0, #2
   16ec8:	bne	16ef4 <argp_parse@@Base+0x450>
   16ecc:	mov	r0, #1
   16ed0:	str	r0, [fp, #-204]	; 0xffffff34
   16ed4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16ed8:	cmp	r0, r8
   16edc:	bne	16f28 <argp_parse@@Base+0x484>
   16ee0:	ldr	r0, [r8]
   16ee4:	cmp	r0, #0
   16ee8:	beq	16f28 <argp_parse@@Base+0x484>
   16eec:	bl	17de8 <argp_parse@@Base+0x1344>
   16ef0:	b	16f34 <argp_parse@@Base+0x490>
   16ef4:	mov	r1, #0
   16ef8:	tst	r0, #1
   16efc:	str	r1, [fp, #-204]	; 0xffffff34
   16f00:	beq	16f1c <argp_parse@@Base+0x478>
   16f04:	ldr	r0, [fp, #-152]	; 0xffffff68
   16f08:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16f0c:	sub	r1, r1, #4
   16f10:	add	r0, r0, #1
   16f14:	str	r1, [fp, #-148]	; 0xffffff6c
   16f18:	str	r0, [fp, #-152]	; 0xffffff68
   16f1c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16f20:	cmp	r0, r8
   16f24:	beq	16ee0 <argp_parse@@Base+0x43c>
   16f28:	movw	r0, #936	; 0x3a8
   16f2c:	movt	r0, #3
   16f30:	ldr	r0, [r0]
   16f34:	str	r0, [fp, #-116]	; 0xffffff8c
   16f38:	sub	r0, fp, #220	; 0xdc
   16f3c:	mov	r8, #0
   16f40:	add	r6, r0, #12
   16f44:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16f48:	cmp	r0, #0
   16f4c:	bne	16f70 <argp_parse@@Base+0x4cc>
   16f50:	b	16f80 <argp_parse@@Base+0x4dc>
   16f54:	cmp	r0, #7
   16f58:	beq	17334 <argp_parse@@Base+0x890>
   16f5c:	cmp	r0, #0
   16f60:	bne	175a8 <argp_parse@@Base+0xb04>
   16f64:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16f68:	cmp	r0, #0
   16f6c:	beq	16f80 <argp_parse@@Base+0x4dc>
   16f70:	ldr	r9, [fp, #-144]	; 0xffffff70
   16f74:	cmp	r9, r0
   16f78:	bge	17034 <argp_parse@@Base+0x590>
   16f7c:	str	r8, [fp, #-132]	; 0xffffff7c
   16f80:	ldr	r0, [fp, #-160]	; 0xffffff60
   16f84:	ldr	r9, [fp, #-144]	; 0xffffff70
   16f88:	cmp	r0, #0
   16f8c:	beq	17034 <argp_parse@@Base+0x590>
   16f90:	mvn	r0, #0
   16f94:	str	r0, [fp, #-200]	; 0xffffff38
   16f98:	str	r9, [fp, #-208]	; 0xffffff30
   16f9c:	ldr	r2, [fp, #-216]	; 0xffffff28
   16fa0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   16fa4:	ldr	r0, [fp, #-152]	; 0xffffff68
   16fa8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16fac:	ldrb	r7, [fp, #-140]	; 0xffffff74
   16fb0:	sub	sp, sp, #8
   16fb4:	tst	r7, #64	; 0x40
   16fb8:	bne	16fcc <argp_parse@@Base+0x528>
   16fbc:	str	r8, [sp]
   16fc0:	str	r6, [sp, #4]
   16fc4:	bl	17ed4 <argp_parse@@Base+0x1430>
   16fc8:	b	16fd8 <argp_parse@@Base+0x534>
   16fcc:	str	r8, [sp]
   16fd0:	str	r6, [sp, #4]
   16fd4:	bl	17f38 <argp_parse@@Base+0x1494>
   16fd8:	add	sp, sp, #8
   16fdc:	ldr	r9, [fp, #-208]	; 0xffffff30
   16fe0:	mov	r7, r0
   16fe4:	cmn	r0, #1
   16fe8:	str	r9, [fp, #-144]	; 0xffffff70
   16fec:	beq	17008 <argp_parse@@Base+0x564>
   16ff0:	cmp	r7, #63	; 0x3f
   16ff4:	beq	171d8 <argp_parse@@Base+0x734>
   16ff8:	cmp	r7, #1
   16ffc:	bne	171e8 <argp_parse@@Base+0x744>
   17000:	ldr	r7, [fp, #-196]	; 0xffffff3c
   17004:	b	1706c <argp_parse@@Base+0x5c8>
   17008:	cmp	r9, #2
   1700c:	str	r8, [fp, #-160]	; 0xffffff60
   17010:	blt	17034 <argp_parse@@Base+0x590>
   17014:	ldr	r0, [fp, #-148]	; 0xffffff6c
   17018:	movw	r1, #60523	; 0xec6b
   1701c:	movt	r1, #1
   17020:	add	r0, r0, r9, lsl #2
   17024:	ldr	r0, [r0, #-4]
   17028:	bl	11ab0 <strcmp@plt>
   1702c:	cmp	r0, #0
   17030:	streq	r9, [fp, #-132]	; 0xffffff7c
   17034:	ldr	r2, [fp, #-152]	; 0xffffff68
   17038:	mov	r1, #1
   1703c:	mov	r0, #7
   17040:	cmp	r9, r2
   17044:	bge	17350 <argp_parse@@Base+0x8ac>
   17048:	ldrb	r2, [fp, #-140]	; 0xffffff74
   1704c:	tst	r2, #4
   17050:	bne	17350 <argp_parse@@Base+0x8ac>
   17054:	add	r0, r9, #1
   17058:	str	r0, [fp, #-144]	; 0xffffff70
   1705c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   17060:	ldr	r7, [r1, r9, lsl #2]
   17064:	mov	r9, r0
   17068:	str	r7, [fp, #-196]	; 0xffffff3c
   1706c:	sub	r0, r9, #1
   17070:	str	r0, [fp, #-144]	; 0xffffff70
   17074:	ldr	r1, [fp, #-172]	; 0xffffff54
   17078:	ldr	r2, [fp, #-168]	; 0xffffff58
   1707c:	cmp	r1, r2
   17080:	bcs	17334 <argp_parse@@Base+0x890>
   17084:	add	r4, r1, #24
   17088:	add	r1, r0, #1
   1708c:	str	r1, [fp, #-144]	; 0xffffff70
   17090:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17094:	cmp	r3, #0
   17098:	beq	17150 <argp_parse@@Base+0x6ac>
   1709c:	ldr	r0, [r4, #8]
   170a0:	mov	r1, r7
   170a4:	mov	r2, sl
   170a8:	mov	r5, #0
   170ac:	str	r0, [fp, #-120]	; 0xffffff88
   170b0:	ldr	r0, [r4]
   170b4:	str	r0, [fp, #-128]	; 0xffffff80
   170b8:	ldr	r0, [r4, #4]
   170bc:	str	r0, [fp, #-124]	; 0xffffff84
   170c0:	ldr	r0, [r4, #-12]
   170c4:	str	r0, [fp, #-136]	; 0xffffff78
   170c8:	mov	r0, #0
   170cc:	blx	r3
   170d0:	ldr	r1, [fp, #-120]	; 0xffffff88
   170d4:	cmp	r0, #7
   170d8:	str	r1, [r4, #8]
   170dc:	bne	17168 <argp_parse@@Base+0x6c4>
   170e0:	ldr	r0, [fp, #-144]	; 0xffffff70
   170e4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   170e8:	sub	r0, r0, #1
   170ec:	cmp	r3, #0
   170f0:	str	r0, [fp, #-144]	; 0xffffff70
   170f4:	beq	17154 <argp_parse@@Base+0x6b0>
   170f8:	ldr	r0, [r4]
   170fc:	mov	r1, #0
   17100:	mov	r2, sl
   17104:	str	r0, [fp, #-128]	; 0xffffff80
   17108:	ldr	r0, [r4, #4]
   1710c:	str	r0, [fp, #-124]	; 0xffffff84
   17110:	ldr	r0, [r4, #-12]
   17114:	str	r0, [fp, #-136]	; 0xffffff78
   17118:	movw	r0, #6
   1711c:	movt	r0, #256	; 0x100
   17120:	blx	r3
   17124:	ldr	r1, [fp, #-120]	; 0xffffff88
   17128:	str	r1, [r4, #8]
   1712c:	cmp	r0, #7
   17130:	bne	17160 <argp_parse@@Base+0x6bc>
   17134:	ldr	r2, [fp, #-168]	; 0xffffff58
   17138:	add	r1, r4, #12
   1713c:	cmp	r1, r2
   17140:	bcs	17160 <argp_parse@@Base+0x6bc>
   17144:	ldr	r0, [fp, #-144]	; 0xffffff70
   17148:	add	r4, r4, #36	; 0x24
   1714c:	b	17088 <argp_parse@@Base+0x5e4>
   17150:	str	r0, [fp, #-144]	; 0xffffff70
   17154:	mov	r0, #7
   17158:	cmp	r0, #7
   1715c:	beq	17134 <argp_parse@@Base+0x690>
   17160:	movw	r5, #6
   17164:	movt	r5, #256	; 0x100
   17168:	cmp	r0, #0
   1716c:	bne	16f54 <argp_parse@@Base+0x4b0>
   17170:	movw	r0, #6
   17174:	movt	r0, #256	; 0x100
   17178:	cmp	r5, r0
   1717c:	bne	171b4 <argp_parse@@Base+0x710>
   17180:	ldr	r0, [fp, #-152]	; 0xffffff68
   17184:	str	r0, [fp, #-144]	; 0xffffff70
   17188:	cmp	r0, r9
   1718c:	blt	171c0 <argp_parse@@Base+0x71c>
   17190:	ldr	r1, [r4, #-12]
   17194:	sub	r0, r0, r9
   17198:	add	r0, r0, r1
   1719c:	add	r0, r0, #1
   171a0:	str	r0, [r4, #-12]
   171a4:	mov	r0, #0
   171a8:	cmp	r0, #0
   171ac:	beq	16f64 <argp_parse@@Base+0x4c0>
   171b0:	b	175a8 <argp_parse@@Base+0xb04>
   171b4:	ldr	r0, [fp, #-144]	; 0xffffff70
   171b8:	cmp	r0, r9
   171bc:	bge	17190 <argp_parse@@Base+0x6ec>
   171c0:	mov	r0, #1
   171c4:	str	r0, [fp, #-160]	; 0xffffff60
   171c8:	mov	r0, #0
   171cc:	cmp	r0, #0
   171d0:	beq	16f64 <argp_parse@@Base+0x4c0>
   171d4:	b	175a8 <argp_parse@@Base+0xb04>
   171d8:	ldr	r0, [fp, #-200]	; 0xffffff38
   171dc:	cmn	r0, #1
   171e0:	beq	17260 <argp_parse@@Base+0x7bc>
   171e4:	b	17798 <argp_parse@@Base+0xcf4>
   171e8:	cmp	r8, r7, asr #24
   171ec:	beq	17260 <argp_parse@@Base+0x7bc>
   171f0:	asr	r0, r7, #24
   171f4:	ldr	r1, [fp, #-172]	; 0xffffff54
   171f8:	sub	r0, r0, #1
   171fc:	add	r0, r0, r0, lsl #3
   17200:	ldr	r3, [r1, r0, lsl #2]
   17204:	cmp	r3, #0
   17208:	beq	17764 <argp_parse@@Base+0xcc0>
   1720c:	add	r4, r1, r0, lsl #2
   17210:	tst	r7, #8388608	; 0x800000
   17214:	mov	r2, sl
   17218:	ldr	r0, [r4, #32]!
   1721c:	str	r0, [fp, #-120]	; 0xffffff88
   17220:	ldr	r0, [r4, #-8]
   17224:	str	r0, [fp, #-128]	; 0xffffff80
   17228:	ldr	r0, [r4, #-4]
   1722c:	str	r0, [fp, #-124]	; 0xffffff84
   17230:	ldr	r0, [r4, #-20]	; 0xffffffec
   17234:	str	r0, [fp, #-136]	; 0xffffff78
   17238:	bic	r0, r7, #-16777216	; 0xff000000
   1723c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   17240:	orrne	r0, r0, #-16777216	; 0xff000000
   17244:	blx	r3
   17248:	mov	r1, #0
   1724c:	ldr	r2, [fp, #-120]	; 0xffffff88
   17250:	cmp	r0, #7
   17254:	str	r2, [r4]
   17258:	bne	16f5c <argp_parse@@Base+0x4b8>
   1725c:	b	17300 <argp_parse@@Base+0x85c>
   17260:	ldr	r0, [fp, #-216]	; 0xffffff28
   17264:	mov	r1, r7
   17268:	bl	11d44 <strchr@plt>
   1726c:	cmp	r0, #0
   17270:	beq	17308 <argp_parse@@Base+0x864>
   17274:	ldr	r1, [fp, #-172]	; 0xffffff54
   17278:	ldr	r2, [fp, #-168]	; 0xffffff58
   1727c:	cmp	r1, r2
   17280:	bcs	17308 <argp_parse@@Base+0x864>
   17284:	add	r1, r1, #24
   17288:	ldr	r3, [r1, #-16]
   1728c:	cmp	r3, r0
   17290:	bhi	172ac <argp_parse@@Base+0x808>
   17294:	add	r3, r1, #36	; 0x24
   17298:	add	r1, r1, #12
   1729c:	cmp	r1, r2
   172a0:	mov	r1, r3
   172a4:	bcc	17288 <argp_parse@@Base+0x7e4>
   172a8:	b	17308 <argp_parse@@Base+0x864>
   172ac:	ldr	r3, [r1, #-24]	; 0xffffffe8
   172b0:	cmp	r3, #0
   172b4:	beq	17308 <argp_parse@@Base+0x864>
   172b8:	mov	r4, r1
   172bc:	mov	r2, sl
   172c0:	ldr	r0, [r4, #8]!
   172c4:	str	r0, [fp, #-120]	; 0xffffff88
   172c8:	ldr	r0, [r1]
   172cc:	str	r0, [fp, #-128]	; 0xffffff80
   172d0:	ldr	r0, [r1, #4]
   172d4:	str	r0, [fp, #-124]	; 0xffffff84
   172d8:	ldr	r0, [r1, #-12]
   172dc:	str	r0, [fp, #-136]	; 0xffffff78
   172e0:	mov	r0, r7
   172e4:	ldr	r1, [fp, #-196]	; 0xffffff3c
   172e8:	blx	r3
   172ec:	mov	r1, #1
   172f0:	ldr	r2, [fp, #-120]	; 0xffffff88
   172f4:	cmp	r0, #7
   172f8:	str	r2, [r4]
   172fc:	bne	16f5c <argp_parse@@Base+0x4b8>
   17300:	cmp	r1, #0
   17304:	beq	17764 <argp_parse@@Base+0xcc0>
   17308:	movw	r1, #60526	; 0xec6e
   1730c:	movw	r3, #60264	; 0xeb68
   17310:	mov	r0, sl
   17314:	mov	r2, r7
   17318:	movt	r1, #1
   1731c:	movt	r3, #1
   17320:	bl	19f40 <argp_error@@Base>
   17324:	mov	r0, #0
   17328:	b	1733c <argp_parse@@Base+0x898>
   1732c:	mov	r1, r4
   17330:	b	16d08 <argp_parse@@Base+0x264>
   17334:	mov	r7, #1
   17338:	mov	r0, #1
   1733c:	add	r1, r7, #1
   17340:	clz	r1, r1
   17344:	lsr	r1, r1, #5
   17348:	orr	r1, r1, r0
   1734c:	mov	r0, #7
   17350:	subs	r7, r0, #7
   17354:	movne	r7, r0
   17358:	cmp	r1, #0
   1735c:	moveq	r7, r0
   17360:	cmp	r7, #0
   17364:	beq	1742c <argp_parse@@Base+0x988>
   17368:	cmp	r7, #0
   1736c:	beq	175f8 <argp_parse@@Base+0xb54>
   17370:	cmp	r7, #7
   17374:	bne	1738c <argp_parse@@Base+0x8e8>
   17378:	ldr	r1, [fp, #-112]	; 0xffffff90
   1737c:	mov	r0, sl
   17380:	mov	r2, #260	; 0x104
   17384:	bl	19e84 <argp_state_help@@Base>
   17388:	mov	r7, #7
   1738c:	ldr	r4, [fp, #-172]	; 0xffffff54
   17390:	ldr	r0, [fp, #-168]	; 0xffffff58
   17394:	cmp	r4, r0
   17398:	bcs	176c0 <argp_parse@@Base+0xc1c>
   1739c:	movw	r1, #6
   173a0:	movt	r1, #256	; 0x100
   173a4:	sub	r6, r1, #1
   173a8:	ldr	r3, [r4]
   173ac:	cmp	r3, #0
   173b0:	bne	173cc <argp_parse@@Base+0x928>
   173b4:	add	r4, r4, #36	; 0x24
   173b8:	cmp	r4, r0
   173bc:	bcs	17414 <argp_parse@@Base+0x970>
   173c0:	ldr	r3, [r4]
   173c4:	cmp	r3, #0
   173c8:	beq	173b4 <argp_parse@@Base+0x910>
   173cc:	ldr	r0, [r4, #32]
   173d0:	mov	r1, #0
   173d4:	mov	r2, sl
   173d8:	str	r0, [fp, #-120]	; 0xffffff88
   173dc:	ldr	r0, [r4, #24]
   173e0:	str	r0, [fp, #-128]	; 0xffffff80
   173e4:	ldr	r0, [r4, #28]
   173e8:	str	r0, [fp, #-124]	; 0xffffff84
   173ec:	ldr	r0, [r4, #12]
   173f0:	str	r0, [fp, #-136]	; 0xffffff78
   173f4:	mov	r0, r6
   173f8:	blx	r3
   173fc:	ldr	r0, [fp, #-120]	; 0xffffff88
   17400:	str	r0, [r4, #32]
   17404:	ldr	r0, [fp, #-168]	; 0xffffff58
   17408:	add	r4, r4, #36	; 0x24
   1740c:	cmp	r4, r0
   17410:	bcc	173c0 <argp_parse@@Base+0x91c>
   17414:	ldr	r4, [fp, #-172]	; 0xffffff54
   17418:	ldr	r0, [fp, #-168]	; 0xffffff58
   1741c:	sub	r6, r0, #36	; 0x24
   17420:	cmp	r6, r4
   17424:	bcs	176d0 <argp_parse@@Base+0xc2c>
   17428:	b	17748 <argp_parse@@Base+0xca4>
   1742c:	ldr	r1, [fp, #-152]	; 0xffffff68
   17430:	ldr	r0, [fp, #-144]	; 0xffffff70
   17434:	cmp	r0, r1
   17438:	bne	17594 <argp_parse@@Base+0xaf0>
   1743c:	ldr	r4, [fp, #-172]	; 0xffffff54
   17440:	ldr	r1, [fp, #-168]	; 0xffffff58
   17444:	mov	r0, #0
   17448:	cmp	r4, r1
   1744c:	bcs	174f0 <argp_parse@@Base+0xa4c>
   17450:	movw	r0, #6
   17454:	mov	r7, #0
   17458:	movt	r0, #256	; 0x100
   1745c:	sub	r6, r0, #4
   17460:	mov	r0, #0
   17464:	cmp	r0, #7
   17468:	cmpne	r0, #0
   1746c:	beq	174c4 <argp_parse@@Base+0xa20>
   17470:	b	174ec <argp_parse@@Base+0xa48>
   17474:	ldr	r0, [r4, #32]
   17478:	mov	r1, #0
   1747c:	mov	r2, sl
   17480:	str	r0, [fp, #-120]	; 0xffffff88
   17484:	ldr	r0, [r4, #24]
   17488:	str	r0, [fp, #-128]	; 0xffffff80
   1748c:	ldr	r0, [r4, #28]
   17490:	str	r7, [fp, #-136]	; 0xffffff78
   17494:	str	r0, [fp, #-124]	; 0xffffff84
   17498:	mov	r0, r6
   1749c:	blx	r3
   174a0:	ldr	r1, [fp, #-120]	; 0xffffff88
   174a4:	str	r1, [r4, #32]
   174a8:	ldr	r1, [fp, #-168]	; 0xffffff58
   174ac:	add	r4, r4, #36	; 0x24
   174b0:	cmp	r4, r1
   174b4:	bcs	174ec <argp_parse@@Base+0xa48>
   174b8:	cmp	r0, #7
   174bc:	cmpne	r0, #0
   174c0:	bne	174ec <argp_parse@@Base+0xa48>
   174c4:	ldr	r2, [r4, #12]
   174c8:	cmp	r2, #0
   174cc:	bne	174ac <argp_parse@@Base+0xa08>
   174d0:	ldr	r3, [r4]
   174d4:	cmp	r3, #0
   174d8:	bne	17474 <argp_parse@@Base+0x9d0>
   174dc:	mov	r0, #7
   174e0:	add	r4, r4, #36	; 0x24
   174e4:	cmp	r4, r1
   174e8:	bcc	174b8 <argp_parse@@Base+0xa14>
   174ec:	ldr	r4, [fp, #-172]	; 0xffffff54
   174f0:	sub	r7, r1, #36	; 0x24
   174f4:	cmp	r7, r4
   174f8:	bcc	17588 <argp_parse@@Base+0xae4>
   174fc:	movw	r1, #6
   17500:	movt	r1, #256	; 0x100
   17504:	sub	r6, r1, #5
   17508:	cmp	r0, #7
   1750c:	cmpne	r0, #0
   17510:	beq	17534 <argp_parse@@Base+0xa90>
   17514:	b	175dc <argp_parse@@Base+0xb38>
   17518:	mov	r0, #7
   1751c:	sub	r7, r7, #36	; 0x24
   17520:	cmp	r7, r4
   17524:	bcc	17588 <argp_parse@@Base+0xae4>
   17528:	cmp	r0, #7
   1752c:	cmpne	r0, #0
   17530:	bne	175dc <argp_parse@@Base+0xb38>
   17534:	ldr	r3, [r7]
   17538:	cmp	r3, #0
   1753c:	beq	17518 <argp_parse@@Base+0xa74>
   17540:	ldr	r0, [r7, #32]
   17544:	mov	r1, #0
   17548:	mov	r2, sl
   1754c:	str	r0, [fp, #-120]	; 0xffffff88
   17550:	ldr	r0, [r7, #24]
   17554:	str	r0, [fp, #-128]	; 0xffffff80
   17558:	ldr	r0, [r7, #28]
   1755c:	str	r0, [fp, #-124]	; 0xffffff84
   17560:	ldr	r0, [r7, #12]
   17564:	str	r0, [fp, #-136]	; 0xffffff78
   17568:	mov	r0, r6
   1756c:	blx	r3
   17570:	ldr	r1, [fp, #-120]	; 0xffffff88
   17574:	str	r1, [r7, #32]
   17578:	ldr	r4, [fp, #-172]	; 0xffffff54
   1757c:	sub	r7, r7, #36	; 0x24
   17580:	cmp	r7, r4
   17584:	bcs	17528 <argp_parse@@Base+0xa84>
   17588:	subs	r7, r0, #7
   1758c:	movne	r7, r0
   17590:	b	175e0 <argp_parse@@Base+0xb3c>
   17594:	ldr	r1, [fp, #8]
   17598:	cmp	r1, #0
   1759c:	beq	175b0 <argp_parse@@Base+0xb0c>
   175a0:	str	r0, [r1]
   175a4:	b	175f8 <argp_parse@@Base+0xb54>
   175a8:	mov	r1, #0
   175ac:	b	17350 <argp_parse@@Base+0x8ac>
   175b0:	ldrb	r0, [fp, #-140]	; 0xffffff74
   175b4:	tst	r0, #2
   175b8:	bne	17378 <argp_parse@@Base+0x8d4>
   175bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   175c0:	cmp	r0, #0
   175c4:	beq	17378 <argp_parse@@Base+0x8d4>
   175c8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   175cc:	movw	r1, #60547	; 0xec83
   175d0:	movt	r1, #1
   175d4:	bl	11d5c <fprintf@plt>
   175d8:	b	17378 <argp_parse@@Base+0x8d4>
   175dc:	mov	r7, r0
   175e0:	ldr	r1, [fp, #8]
   175e4:	cmp	r1, #0
   175e8:	ldrne	r0, [fp, #-144]	; 0xffffff70
   175ec:	strne	r0, [r1]
   175f0:	cmp	r7, #0
   175f4:	bne	17370 <argp_parse@@Base+0x8cc>
   175f8:	ldr	r0, [fp, #-168]	; 0xffffff58
   175fc:	ldr	r4, [fp, #-172]	; 0xffffff54
   17600:	mov	r7, #0
   17604:	sub	r5, r0, #36	; 0x24
   17608:	cmp	r5, r4
   1760c:	bcc	176c0 <argp_parse@@Base+0xc1c>
   17610:	movw	r1, #6
   17614:	mov	r0, #0
   17618:	movt	r1, #256	; 0x100
   1761c:	sub	r6, r1, #2
   17620:	cmp	r0, #7
   17624:	cmpne	r0, #0
   17628:	beq	1764c <argp_parse@@Base+0xba8>
   1762c:	b	176bc <argp_parse@@Base+0xc18>
   17630:	mov	r0, #7
   17634:	sub	r5, r5, #36	; 0x24
   17638:	cmp	r5, r4
   1763c:	bcc	176a0 <argp_parse@@Base+0xbfc>
   17640:	cmp	r0, #7
   17644:	cmpne	r0, #0
   17648:	bne	176bc <argp_parse@@Base+0xc18>
   1764c:	ldr	r3, [r5]
   17650:	cmp	r3, #0
   17654:	beq	17630 <argp_parse@@Base+0xb8c>
   17658:	ldr	r0, [r5, #32]
   1765c:	mov	r1, #0
   17660:	mov	r2, sl
   17664:	str	r0, [fp, #-120]	; 0xffffff88
   17668:	ldr	r0, [r5, #24]
   1766c:	str	r0, [fp, #-128]	; 0xffffff80
   17670:	ldr	r0, [r5, #28]
   17674:	str	r0, [fp, #-124]	; 0xffffff84
   17678:	ldr	r0, [r5, #12]
   1767c:	str	r0, [fp, #-136]	; 0xffffff78
   17680:	mov	r0, r6
   17684:	blx	r3
   17688:	ldr	r1, [fp, #-120]	; 0xffffff88
   1768c:	str	r1, [r5, #32]
   17690:	ldr	r4, [fp, #-172]	; 0xffffff54
   17694:	sub	r5, r5, #36	; 0x24
   17698:	cmp	r5, r4
   1769c:	bcs	17640 <argp_parse@@Base+0xb9c>
   176a0:	subs	r7, r0, #7
   176a4:	movne	r7, r0
   176a8:	ldr	r0, [fp, #-168]	; 0xffffff58
   176ac:	sub	r6, r0, #36	; 0x24
   176b0:	cmp	r6, r4
   176b4:	bcc	17748 <argp_parse@@Base+0xca4>
   176b8:	b	176d0 <argp_parse@@Base+0xc2c>
   176bc:	mov	r7, r0
   176c0:	ldr	r0, [fp, #-168]	; 0xffffff58
   176c4:	sub	r6, r0, #36	; 0x24
   176c8:	cmp	r6, r4
   176cc:	bcc	17748 <argp_parse@@Base+0xca4>
   176d0:	movw	r0, #6
   176d4:	movt	r0, #256	; 0x100
   176d8:	add	r5, r0, #1
   176dc:	ldr	r3, [r6]
   176e0:	cmp	r3, #0
   176e4:	bne	17700 <argp_parse@@Base+0xc5c>
   176e8:	sub	r6, r6, #36	; 0x24
   176ec:	cmp	r6, r4
   176f0:	bcc	17748 <argp_parse@@Base+0xca4>
   176f4:	ldr	r3, [r6]
   176f8:	cmp	r3, #0
   176fc:	beq	176e8 <argp_parse@@Base+0xc44>
   17700:	ldr	r0, [r6, #32]
   17704:	mov	r1, #0
   17708:	mov	r2, sl
   1770c:	str	r0, [fp, #-120]	; 0xffffff88
   17710:	ldr	r0, [r6, #24]
   17714:	str	r0, [fp, #-128]	; 0xffffff80
   17718:	ldr	r0, [r6, #28]
   1771c:	str	r0, [fp, #-124]	; 0xffffff84
   17720:	ldr	r0, [r6, #12]
   17724:	str	r0, [fp, #-136]	; 0xffffff78
   17728:	mov	r0, r5
   1772c:	blx	r3
   17730:	ldr	r0, [fp, #-120]	; 0xffffff88
   17734:	str	r0, [r6, #32]
   17738:	ldr	r4, [fp, #-172]	; 0xffffff54
   1773c:	sub	r6, r6, #36	; 0x24
   17740:	cmp	r6, r4
   17744:	bcs	176f4 <argp_parse@@Base+0xc50>
   17748:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1774c:	bl	17e80 <argp_parse@@Base+0x13dc>
   17750:	cmp	r7, #7
   17754:	movweq	r7, #22
   17758:	mov	r0, r7
   1775c:	sub	sp, fp, #28
   17760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17764:	ldr	r0, [fp, #-212]	; 0xffffff2c
   17768:	ldr	r1, [r0, #12]
   1776c:	cmp	r1, r7
   17770:	beq	177a0 <argp_parse@@Base+0xcfc>
   17774:	ldr	r1, [r0]
   17778:	cmp	r1, #0
   1777c:	beq	177a0 <argp_parse@@Base+0xcfc>
   17780:	add	r1, r0, #16
   17784:	ldr	r0, [r0, #28]
   17788:	cmp	r0, r7
   1778c:	mov	r0, r1
   17790:	bne	17774 <argp_parse@@Base+0xcd0>
   17794:	b	177a4 <argp_parse@@Base+0xd00>
   17798:	mov	r1, #0
   1779c:	b	1734c <argp_parse@@Base+0x8a8>
   177a0:	mov	r1, r0
   177a4:	ldr	r0, [r1]
   177a8:	movw	r1, #60534	; 0xec76
   177ac:	movw	r3, #60264	; 0xeb68
   177b0:	movw	r2, #60543	; 0xec7f
   177b4:	movt	r1, #1
   177b8:	movt	r3, #1
   177bc:	movt	r2, #1
   177c0:	cmp	r0, #0
   177c4:	movne	r2, r0
   177c8:	mov	r0, sl
   177cc:	b	17320 <argp_parse@@Base+0x87c>
   177d0:	mov	ip, r0
   177d4:	mov	r0, #0
   177d8:	cmp	r1, #0
   177dc:	beq	1780c <argp_parse@@Base+0xd68>
   177e0:	ldr	r3, [r1, #52]	; 0x34
   177e4:	ldr	r1, [r3, #48]	; 0x30
   177e8:	ldr	r3, [r3, #52]	; 0x34
   177ec:	cmp	r1, r3
   177f0:	bxcs	lr
   177f4:	ldr	r2, [r1, #4]
   177f8:	cmp	r2, ip
   177fc:	beq	17808 <argp_parse@@Base+0xd64>
   17800:	add	r1, r1, #36	; 0x24
   17804:	b	177ec <argp_parse@@Base+0xd48>
   17808:	ldr	r0, [r1, #24]
   1780c:	bx	lr
   17810:	push	{r4, r5, r6, sl, fp, lr}
   17814:	add	fp, sp, #16
   17818:	mov	r5, r2
   1781c:	mov	r6, r1
   17820:	mov	r4, #7
   17824:	cmn	r0, #3
   17828:	bgt	17858 <argp_parse@@Base+0xdb4>
   1782c:	cmn	r0, #4
   17830:	beq	17884 <argp_parse@@Base+0xde0>
   17834:	cmn	r0, #3
   17838:	bne	17920 <argp_parse@@Base+0xe7c>
   1783c:	ldr	r1, [r5, #48]	; 0x30
   17840:	mov	r0, r5
   17844:	movw	r2, #513	; 0x201
   17848:	bl	19e84 <argp_state_help@@Base>
   1784c:	mov	r4, #0
   17850:	mov	r0, r4
   17854:	pop	{r4, r5, r6, sl, fp, pc}
   17858:	cmn	r0, #2
   1785c:	beq	178e0 <argp_parse@@Base+0xe3c>
   17860:	cmp	r0, #63	; 0x3f
   17864:	bne	17920 <argp_parse@@Base+0xe7c>
   17868:	ldr	r1, [r5, #48]	; 0x30
   1786c:	mov	r0, r5
   17870:	movw	r2, #634	; 0x27a
   17874:	bl	19e84 <argp_state_help@@Base>
   17878:	mov	r4, #0
   1787c:	mov	r0, r4
   17880:	pop	{r4, r5, r6, sl, fp, pc}
   17884:	movw	r0, #60461	; 0xec2d
   17888:	cmp	r6, #0
   1788c:	mov	r1, #0
   17890:	mov	r2, #10
   17894:	mov	r4, #0
   17898:	movt	r0, #1
   1789c:	movne	r0, r6
   178a0:	bl	11abc <strtol@plt>
   178a4:	movw	r5, #1200	; 0x4b0
   178a8:	movt	r5, #3
   178ac:	str	r0, [r5]
   178b0:	ldr	r0, [r5]
   178b4:	subs	r0, r0, #1
   178b8:	str	r0, [r5]
   178bc:	blt	17920 <argp_parse@@Base+0xe7c>
   178c0:	mov	r0, #1
   178c4:	bl	11ba0 <sleep@plt>
   178c8:	ldr	r0, [r5]
   178cc:	sub	r1, r0, #1
   178d0:	cmp	r0, #0
   178d4:	str	r1, [r5]
   178d8:	bgt	178c0 <argp_parse@@Base+0xe1c>
   178dc:	b	17920 <argp_parse@@Base+0xe7c>
   178e0:	movw	r0, #940	; 0x3ac
   178e4:	movt	r0, #3
   178e8:	str	r6, [r0]
   178ec:	mov	r0, r6
   178f0:	bl	17de8 <argp_parse@@Base+0x1344>
   178f4:	movw	r1, #936	; 0x3a8
   178f8:	str	r0, [r5, #40]	; 0x28
   178fc:	mov	r4, #0
   17900:	movt	r1, #3
   17904:	str	r0, [r1]
   17908:	ldr	r0, [r5, #16]
   1790c:	and	r0, r0, #3
   17910:	cmp	r0, #1
   17914:	bne	17920 <argp_parse@@Base+0xe7c>
   17918:	ldr	r0, [r5, #8]
   1791c:	str	r6, [r0]
   17920:	mov	r0, r4
   17924:	pop	{r4, r5, r6, sl, fp, pc}
   17928:	push	{r4, sl, fp, lr}
   1792c:	add	fp, sp, #8
   17930:	mov	r1, r0
   17934:	mov	r0, #7
   17938:	cmp	r1, #86	; 0x56
   1793c:	popne	{r4, sl, fp, pc}
   17940:	movw	r0, #1204	; 0x4b4
   17944:	mov	r4, r2
   17948:	movt	r0, #3
   1794c:	ldr	r2, [r0]
   17950:	cmp	r2, #0
   17954:	beq	17978 <argp_parse@@Base+0xed4>
   17958:	ldr	r0, [r4, #48]	; 0x30
   1795c:	mov	r1, r4
   17960:	blx	r2
   17964:	ldrb	r1, [r4, #16]
   17968:	mov	r0, #0
   1796c:	tst	r1, #32
   17970:	beq	179ac <argp_parse@@Base+0xf08>
   17974:	pop	{r4, sl, fp, pc}
   17978:	movw	r0, #1564	; 0x61c
   1797c:	movt	r0, #3
   17980:	ldr	r2, [r0]
   17984:	cmp	r2, #0
   17988:	beq	179b4 <argp_parse@@Base+0xf10>
   1798c:	ldr	r0, [r4, #48]	; 0x30
   17990:	movw	r1, #60674	; 0xed02
   17994:	movt	r1, #1
   17998:	bl	11d5c <fprintf@plt>
   1799c:	ldrb	r1, [r4, #16]
   179a0:	mov	r0, #0
   179a4:	tst	r1, #32
   179a8:	bne	17974 <argp_parse@@Base+0xed0>
   179ac:	mov	r0, #0
   179b0:	bl	11d08 <exit@plt>
   179b4:	movw	r1, #61730	; 0xf122
   179b8:	movw	r2, #60488	; 0xec48
   179bc:	mov	r0, r4
   179c0:	movt	r1, #1
   179c4:	movt	r2, #1
   179c8:	bl	19f40 <argp_error@@Base>
   179cc:	ldrb	r1, [r4, #16]
   179d0:	mov	r0, #0
   179d4:	tst	r1, #32
   179d8:	bne	17974 <argp_parse@@Base+0xed0>
   179dc:	b	179ac <argp_parse@@Base+0xf08>
   179e0:	push	{r4, r5, fp, lr}
   179e4:	add	fp, sp, #8
   179e8:	ldr	r2, [r0]
   179ec:	ldr	ip, [r0, #16]
   179f0:	mov	r4, r1
   179f4:	cmp	r2, #0
   179f8:	beq	17a70 <argp_parse@@Base+0xfcc>
   179fc:	ldr	r0, [r4, #8]
   17a00:	mov	r3, #0
   17a04:	add	r0, r0, #1
   17a08:	str	r0, [r4, #8]
   17a0c:	mov	r0, #0
   17a10:	add	r5, r2, r3, lsl #3
   17a14:	ldr	r1, [r5, #4]
   17a18:	cmp	r1, #0
   17a1c:	beq	17a38 <argp_parse@@Base+0xf94>
   17a20:	add	r3, r3, #3
   17a24:	add	r0, r0, #1
   17a28:	add	r5, r2, r3, lsl #3
   17a2c:	ldr	r1, [r5, #4]
   17a30:	cmp	r1, #0
   17a34:	bne	17a20 <argp_parse@@Base+0xf7c>
   17a38:	ldr	r1, [r2, r3, lsl #3]
   17a3c:	cmp	r1, #0
   17a40:	bne	17a20 <argp_parse@@Base+0xf7c>
   17a44:	ldr	r1, [r5, #16]
   17a48:	cmp	r1, #0
   17a4c:	bne	17a20 <argp_parse@@Base+0xf7c>
   17a50:	ldr	r1, [r5, #20]
   17a54:	cmp	r1, #0
   17a58:	bne	17a20 <argp_parse@@Base+0xf7c>
   17a5c:	ldr	r1, [r4]
   17a60:	mov	r2, r4
   17a64:	add	r1, r1, r3
   17a68:	str	r1, [r2], #4
   17a6c:	b	17a84 <argp_parse@@Base+0xfe0>
   17a70:	ldr	r0, [r0, #4]
   17a74:	cmp	r0, #0
   17a78:	beq	17a90 <argp_parse@@Base+0xfec>
   17a7c:	add	r2, r4, #8
   17a80:	mov	r0, #1
   17a84:	ldr	r1, [r2]
   17a88:	add	r0, r1, r0
   17a8c:	str	r0, [r2]
   17a90:	cmp	ip, #0
   17a94:	beq	17ac8 <argp_parse@@Base+0x1024>
   17a98:	ldr	r0, [ip]
   17a9c:	cmp	r0, #0
   17aa0:	popeq	{r4, r5, fp, pc}
   17aa4:	add	r5, ip, #16
   17aa8:	mov	r1, r4
   17aac:	bl	179e0 <argp_parse@@Base+0xf3c>
   17ab0:	ldr	r0, [r4, #12]
   17ab4:	add	r0, r0, #1
   17ab8:	str	r0, [r4, #12]
   17abc:	ldr	r0, [r5], #16
   17ac0:	cmp	r0, #0
   17ac4:	bne	17aa8 <argp_parse@@Base+0x1004>
   17ac8:	pop	{r4, r5, fp, pc}
   17acc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ad0:	add	fp, sp, #28
   17ad4:	sub	sp, sp, #28
   17ad8:	ldr	sl, [r0]
   17adc:	ldr	r5, [r0, #16]
   17ae0:	ldr	r6, [fp, #8]
   17ae4:	mov	r7, r3
   17ae8:	cmp	sl, #0
   17aec:	beq	17cc8 <argp_parse@@Base+0x1224>
   17af0:	str	r0, [sp, #8]
   17af4:	add	r0, sp, #16
   17af8:	mov	r8, sl
   17afc:	str	r2, [sp, #12]
   17b00:	stm	r0, {r1, r5, r7}
   17b04:	ldr	r5, [r8, #4]
   17b08:	cmp	r5, #0
   17b0c:	bne	17bb4 <argp_parse@@Base+0x1110>
   17b10:	b	17b90 <argp_parse@@Base+0x10ec>
   17b14:	ldr	r0, [r6, #8]
   17b18:	str	r5, [r0]
   17b1c:	ldr	r1, [sl, #8]
   17b20:	cmp	r1, #0
   17b24:	beq	17ca8 <argp_parse@@Base+0x1204>
   17b28:	ldrb	r1, [sl, #12]
   17b2c:	tst	r1, #1
   17b30:	mov	r1, #2
   17b34:	movweq	r1, #1
   17b38:	mov	r5, #0
   17b3c:	stmib	r0, {r1, r5}
   17b40:	ldr	r1, [r8, #4]
   17b44:	ldr	r2, [r7, #48]	; 0x30
   17b48:	ldr	r3, [sp, #24]
   17b4c:	cmp	r1, #0
   17b50:	sub	r2, r3, r2
   17b54:	mov	r3, #956301312	; 0x39000000
   17b58:	ldreq	r1, [sl, #4]
   17b5c:	lsr	r2, r2, #2
   17b60:	mul	r2, r2, r3
   17b64:	bic	r1, r1, #-16777216	; 0xff000000
   17b68:	orr	r1, r2, r1
   17b6c:	add	r1, r1, #16777216	; 0x1000000
   17b70:	str	r1, [r0, #12]
   17b74:	add	r1, r0, #16
   17b78:	str	r1, [r6, #8]
   17b7c:	str	r5, [r0, #16]
   17b80:	add	r8, r8, #24
   17b84:	ldr	r5, [r8, #4]
   17b88:	cmp	r5, #0
   17b8c:	bne	17bb4 <argp_parse@@Base+0x1110>
   17b90:	ldr	r0, [r8]
   17b94:	cmp	r0, #0
   17b98:	bne	17bb4 <argp_parse@@Base+0x1110>
   17b9c:	ldr	r0, [r8, #16]
   17ba0:	cmp	r0, #0
   17ba4:	bne	17bb4 <argp_parse@@Base+0x1110>
   17ba8:	ldr	r0, [r8, #20]
   17bac:	cmp	r0, #0
   17bb0:	beq	17cb0 <argp_parse@@Base+0x120c>
   17bb4:	ldr	r0, [r8, #12]
   17bb8:	tst	r0, #4
   17bbc:	moveq	sl, r8
   17bc0:	ldrb	r1, [sl, #12]
   17bc4:	tst	r1, #8
   17bc8:	bne	17b80 <argp_parse@@Base+0x10dc>
   17bcc:	sub	r1, r5, #1
   17bd0:	cmp	r1, #254	; 0xfe
   17bd4:	bhi	17c54 <argp_parse@@Base+0x11b0>
   17bd8:	ands	r0, r0, #8
   17bdc:	bne	17c54 <argp_parse@@Base+0x11b0>
   17be0:	bl	11cf0 <__ctype_b_loc@plt>
   17be4:	ldr	r0, [r0]
   17be8:	add	r0, r0, r5, lsl #1
   17bec:	ldrb	r0, [r0, #1]
   17bf0:	tst	r0, #64	; 0x40
   17bf4:	beq	17c54 <argp_parse@@Base+0x11b0>
   17bf8:	ldr	r0, [r6, #4]
   17bfc:	add	r1, r0, #1
   17c00:	str	r1, [r6, #4]
   17c04:	strb	r5, [r0]
   17c08:	ldr	r0, [sl, #8]
   17c0c:	cmp	r0, #0
   17c10:	beq	17c48 <argp_parse@@Base+0x11a4>
   17c14:	ldr	r0, [r6, #4]
   17c18:	add	r1, r0, #1
   17c1c:	str	r1, [r6, #4]
   17c20:	mov	r1, #58	; 0x3a
   17c24:	strb	r1, [r0]
   17c28:	ldrb	r0, [sl, #12]
   17c2c:	tst	r0, #1
   17c30:	beq	17c48 <argp_parse@@Base+0x11a4>
   17c34:	ldr	r0, [r6, #4]
   17c38:	add	r1, r0, #1
   17c3c:	str	r1, [r6, #4]
   17c40:	mov	r1, #58	; 0x3a
   17c44:	strb	r1, [r0]
   17c48:	ldr	r0, [r6, #4]
   17c4c:	mov	r1, #0
   17c50:	strb	r1, [r0]
   17c54:	ldr	r5, [r8]
   17c58:	cmp	r5, #0
   17c5c:	beq	17b80 <argp_parse@@Base+0x10dc>
   17c60:	ldr	r7, [r6]
   17c64:	ldr	r9, [r7, #8]
   17c68:	ldr	r0, [r9]
   17c6c:	cmp	r0, #0
   17c70:	beq	17b14 <argp_parse@@Base+0x1070>
   17c74:	mov	r4, r9
   17c78:	mov	r1, r5
   17c7c:	bl	11ab0 <strcmp@plt>
   17c80:	cmp	r0, #0
   17c84:	beq	17c98 <argp_parse@@Base+0x11f4>
   17c88:	ldr	r0, [r4, #16]!
   17c8c:	cmp	r0, #0
   17c90:	bne	17c78 <argp_parse@@Base+0x11d4>
   17c94:	b	17b14 <argp_parse@@Base+0x1070>
   17c98:	sub	r0, r4, r9
   17c9c:	cmn	r0, #1
   17ca0:	bgt	17b80 <argp_parse@@Base+0x10dc>
   17ca4:	b	17b14 <argp_parse@@Base+0x1070>
   17ca8:	mov	r1, #0
   17cac:	b	17b38 <argp_parse@@Base+0x1094>
   17cb0:	ldr	r0, [sp, #8]
   17cb4:	add	r7, sp, #16
   17cb8:	ldr	r2, [sp, #12]
   17cbc:	ldm	r7, {r1, r5, r7}
   17cc0:	ldr	r3, [r0, #4]
   17cc4:	b	17cd4 <argp_parse@@Base+0x1230>
   17cc8:	ldr	r3, [r0, #4]
   17ccc:	cmp	r3, #0
   17cd0:	beq	17d78 <argp_parse@@Base+0x12d4>
   17cd4:	str	r0, [r7, #4]
   17cd8:	str	r3, [r7]
   17cdc:	mov	r0, #0
   17ce0:	cmp	r5, #0
   17ce4:	add	ip, r7, #12
   17ce8:	ldr	r3, [r6, #4]
   17cec:	str	r0, [r7, #32]
   17cf0:	str	r0, [r7, #24]
   17cf4:	stm	ip, {r0, r1, r2}
   17cf8:	str	r0, [r7, #28]
   17cfc:	str	r3, [r7, #8]
   17d00:	beq	17d28 <argp_parse@@Base+0x1284>
   17d04:	ldr	r1, [r5, r0, lsl #2]
   17d08:	add	r0, r0, #4
   17d0c:	cmp	r1, #0
   17d10:	bne	17d04 <argp_parse@@Base+0x1260>
   17d14:	ldr	r1, [r6, #12]
   17d18:	add	r0, r1, r0
   17d1c:	str	r1, [r7, #28]
   17d20:	sub	r0, r0, #4
   17d24:	str	r0, [r6, #12]
   17d28:	add	r3, r7, #36	; 0x24
   17d2c:	cmp	r5, #0
   17d30:	beq	17d6c <argp_parse@@Base+0x12c8>
   17d34:	ldr	r0, [r5]
   17d38:	cmp	r0, #0
   17d3c:	beq	17d6c <argp_parse@@Base+0x12c8>
   17d40:	add	r4, r5, #16
   17d44:	mov	r5, #0
   17d48:	mov	r1, r7
   17d4c:	mov	r2, r5
   17d50:	str	r6, [sp]
   17d54:	bl	17acc <argp_parse@@Base+0x1028>
   17d58:	mov	r3, r0
   17d5c:	ldr	r0, [r4, r5, lsl #4]
   17d60:	add	r5, r5, #1
   17d64:	cmp	r0, #0
   17d68:	bne	17d48 <argp_parse@@Base+0x12a4>
   17d6c:	mov	r0, r3
   17d70:	sub	sp, fp, #28
   17d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d78:	mov	r3, r7
   17d7c:	mov	r7, #0
   17d80:	cmp	r5, #0
   17d84:	bne	17d34 <argp_parse@@Base+0x1290>
   17d88:	b	17d6c <argp_parse@@Base+0x12c8>
   17d8c:	movw	r2, #1208	; 0x4b8
   17d90:	movt	r2, #3
   17d94:	stm	r2, {r0, r1}
   17d98:	movw	r0, #1204	; 0x4b4
   17d9c:	movw	r1, #32176	; 0x7db0
   17da0:	movt	r0, #3
   17da4:	movt	r1, #1
   17da8:	str	r1, [r0]
   17dac:	bx	lr
   17db0:	push	{fp, lr}
   17db4:	mov	fp, sp
   17db8:	sub	sp, sp, #8
   17dbc:	movw	r2, #1208	; 0x4b8
   17dc0:	movw	r3, #60585	; 0xeca9
   17dc4:	movt	r2, #3
   17dc8:	movt	r3, #1
   17dcc:	ldm	r2, {r1, r2}
   17dd0:	str	r2, [sp]
   17dd4:	movw	r2, #60571	; 0xec9b
   17dd8:	movt	r2, #1
   17ddc:	bl	182e8 <argp_parse@@Base+0x1844>
   17de0:	mov	sp, fp
   17de4:	pop	{fp, pc}
   17de8:	sub	r0, r0, #1
   17dec:	ldrb	r3, [r0, #1]!
   17df0:	cmp	r3, #47	; 0x2f
   17df4:	beq	17dec <argp_parse@@Base+0x1348>
   17df8:	mov	r2, #0
   17dfc:	mov	r1, r0
   17e00:	uxtb	r3, r3
   17e04:	cmp	r3, #47	; 0x2f
   17e08:	bne	17e20 <argp_parse@@Base+0x137c>
   17e0c:	ldrb	r3, [r1, #1]!
   17e10:	mov	r2, #1
   17e14:	uxtb	r3, r3
   17e18:	cmp	r3, #47	; 0x2f
   17e1c:	beq	17e0c <argp_parse@@Base+0x1368>
   17e20:	cmp	r3, #0
   17e24:	bxeq	lr
   17e28:	tst	r2, #1
   17e2c:	mov	r2, #0
   17e30:	movne	r0, r1
   17e34:	ldrb	r3, [r1, #1]!
   17e38:	uxtb	r3, r3
   17e3c:	cmp	r3, #47	; 0x2f
   17e40:	bne	17e20 <argp_parse@@Base+0x137c>
   17e44:	b	17e0c <argp_parse@@Base+0x1368>
   17e48:	push	{r4, sl, fp, lr}
   17e4c:	add	fp, sp, #8
   17e50:	mov	r4, r0
   17e54:	bl	11d2c <strlen@plt>
   17e58:	mov	r1, r0
   17e5c:	sub	r2, r4, #1
   17e60:	mov	r0, r1
   17e64:	cmp	r1, #2
   17e68:	bcc	17e7c <argp_parse@@Base+0x13d8>
   17e6c:	ldrb	r3, [r2, r0]
   17e70:	sub	r1, r0, #1
   17e74:	cmp	r3, #47	; 0x2f
   17e78:	beq	17e60 <argp_parse@@Base+0x13bc>
   17e7c:	pop	{r4, sl, fp, pc}
   17e80:	push	{r4, r5, r6, sl, fp, lr}
   17e84:	add	fp, sp, #16
   17e88:	mov	r4, r0
   17e8c:	bl	11d74 <__errno_location@plt>
   17e90:	ldr	r6, [r0]
   17e94:	mov	r5, r0
   17e98:	mov	r0, r4
   17e9c:	bl	11b34 <free@plt>
   17ea0:	str	r6, [r5]
   17ea4:	pop	{r4, r5, r6, sl, fp, pc}
   17ea8:	push	{fp, lr}
   17eac:	mov	fp, sp
   17eb0:	sub	sp, sp, #16
   17eb4:	mov	ip, #0
   17eb8:	str	ip, [sp, #8]
   17ebc:	str	ip, [sp, #4]
   17ec0:	ldr	ip, [fp, #8]
   17ec4:	str	ip, [sp]
   17ec8:	bl	1d6cc <argp_failure@@Base+0x3624>
   17ecc:	mov	sp, fp
   17ed0:	pop	{fp, pc}
   17ed4:	push	{fp, lr}
   17ed8:	mov	fp, sp
   17edc:	sub	sp, sp, #16
   17ee0:	mov	ip, #0
   17ee4:	str	ip, [sp, #12]
   17ee8:	str	ip, [sp, #4]
   17eec:	ldr	ip, [fp, #12]
   17ef0:	str	ip, [sp, #8]
   17ef4:	ldr	ip, [fp, #8]
   17ef8:	str	ip, [sp]
   17efc:	bl	1c1ac <argp_failure@@Base+0x2104>
   17f00:	mov	sp, fp
   17f04:	pop	{fp, pc}
   17f08:	push	{fp, lr}
   17f0c:	mov	fp, sp
   17f10:	sub	sp, sp, #16
   17f14:	mov	ip, #0
   17f18:	str	ip, [sp, #8]
   17f1c:	mov	ip, #1
   17f20:	str	ip, [sp, #4]
   17f24:	ldr	ip, [fp, #8]
   17f28:	str	ip, [sp]
   17f2c:	bl	1d6cc <argp_failure@@Base+0x3624>
   17f30:	mov	sp, fp
   17f34:	pop	{fp, pc}
   17f38:	push	{fp, lr}
   17f3c:	mov	fp, sp
   17f40:	sub	sp, sp, #16
   17f44:	mov	ip, #0
   17f48:	str	ip, [sp, #12]
   17f4c:	mov	ip, #1
   17f50:	str	ip, [sp, #4]
   17f54:	ldr	ip, [fp, #12]
   17f58:	str	ip, [sp, #8]
   17f5c:	ldr	ip, [fp, #8]
   17f60:	str	ip, [sp]
   17f64:	bl	1c1ac <argp_failure@@Base+0x2104>
   17f68:	mov	sp, fp
   17f6c:	pop	{fp, pc}
   17f70:	push	{r4, r5, fp, lr}
   17f74:	add	fp, sp, #8
   17f78:	cmp	r0, #0
   17f7c:	beq	18010 <argp_parse@@Base+0x156c>
   17f80:	mov	r1, #47	; 0x2f
   17f84:	mov	r4, r0
   17f88:	bl	11e34 <strrchr@plt>
   17f8c:	cmp	r0, #0
   17f90:	mov	r5, r4
   17f94:	addne	r5, r0, #1
   17f98:	sub	r0, r5, r4
   17f9c:	cmp	r0, #7
   17fa0:	blt	17ff4 <argp_parse@@Base+0x1550>
   17fa4:	movw	r1, #60654	; 0xecee
   17fa8:	sub	r0, r5, #7
   17fac:	mov	r2, #7
   17fb0:	movt	r1, #1
   17fb4:	bl	11f24 <strncmp@plt>
   17fb8:	cmp	r0, #0
   17fbc:	bne	17ff4 <argp_parse@@Base+0x1550>
   17fc0:	movw	r1, #60662	; 0xecf6
   17fc4:	mov	r0, r5
   17fc8:	mov	r2, #3
   17fcc:	movt	r1, #1
   17fd0:	bl	11f24 <strncmp@plt>
   17fd4:	cmp	r0, #0
   17fd8:	beq	17fe4 <argp_parse@@Base+0x1540>
   17fdc:	mov	r4, r5
   17fe0:	b	17ff4 <argp_parse@@Base+0x1550>
   17fe4:	movw	r0, #936	; 0x3a8
   17fe8:	add	r4, r5, #3
   17fec:	movt	r0, #3
   17ff0:	str	r4, [r0]
   17ff4:	movw	r0, #940	; 0x3ac
   17ff8:	movt	r0, #3
   17ffc:	str	r4, [r0]
   18000:	movw	r0, #1216	; 0x4c0
   18004:	movt	r0, #3
   18008:	str	r4, [r0]
   1800c:	pop	{r4, r5, fp, pc}
   18010:	movw	r0, #944	; 0x3b0
   18014:	mov	r1, #55	; 0x37
   18018:	mov	r2, #1
   1801c:	movt	r0, #3
   18020:	ldr	r3, [r0]
   18024:	movw	r0, #60598	; 0xecb6
   18028:	movt	r0, #1
   1802c:	bl	11c48 <fwrite@plt>
   18030:	bl	11f30 <abort@plt>
   18034:	push	{r4, r5, r6, r7, fp, lr}
   18038:	add	fp, sp, #16
   1803c:	sub	sp, sp, #32
   18040:	ldr	r7, [fp, #12]
   18044:	ldr	r6, [fp, #8]
   18048:	mov	r4, r2
   1804c:	mov	r5, r0
   18050:	cmp	r1, #0
   18054:	beq	18074 <argp_parse@@Base+0x15d0>
   18058:	mov	r2, r1
   1805c:	movw	r1, #60666	; 0xecfa
   18060:	str	r3, [sp]
   18064:	mov	r0, r5
   18068:	mov	r3, r4
   1806c:	movt	r1, #1
   18070:	b	18084 <argp_parse@@Base+0x15e0>
   18074:	movw	r1, #60678	; 0xed06
   18078:	mov	r0, r5
   1807c:	mov	r2, r4
   18080:	movt	r1, #1
   18084:	bl	11d5c <fprintf@plt>
   18088:	movw	r1, #61442	; 0xf002
   1808c:	movw	r2, #60685	; 0xed0d
   18090:	mov	r0, r5
   18094:	movw	r3, #2022	; 0x7e6
   18098:	movt	r1, #1
   1809c:	movt	r2, #1
   180a0:	bl	11d5c <fprintf@plt>
   180a4:	mov	r0, #10
   180a8:	mov	r1, r5
   180ac:	bl	11e58 <fputc@plt>
   180b0:	movw	r1, #60689	; 0xed11
   180b4:	movw	r2, #60860	; 0xedbc
   180b8:	mov	r0, r5
   180bc:	movt	r1, #1
   180c0:	movt	r2, #1
   180c4:	bl	11d5c <fprintf@plt>
   180c8:	mov	r0, #10
   180cc:	mov	r1, r5
   180d0:	bl	11e58 <fputc@plt>
   180d4:	cmp	r7, #9
   180d8:	bhi	18114 <argp_parse@@Base+0x1670>
   180dc:	add	r0, pc, #0
   180e0:	ldr	pc, [r0, r7, lsl #2]
   180e4:	andeq	r8, r1, ip, lsl #2
   180e8:	andeq	r8, r1, r4, asr r1
   180ec:	andeq	r8, r1, r0, ror r1
   180f0:	andeq	r8, r1, ip, lsl #3
   180f4:			; <UNDEFINED> instruction: 0x000181b0
   180f8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   180fc:	andeq	r8, r1, r0, lsl #4
   18100:	andeq	r8, r1, r0, lsr r2
   18104:	andeq	r8, r1, r8, lsr #5
   18108:	andeq	r8, r1, r8, ror #4
   1810c:	sub	sp, fp, #16
   18110:	pop	{r4, r5, r6, r7, fp, pc}
   18114:	add	r7, r6, #8
   18118:	add	lr, r6, #20
   1811c:	ldm	r6, {r2, r3}
   18120:	ldr	r6, [r6, #32]
   18124:	ldm	r7, {r0, r1, r7}
   18128:	ldm	lr, {r4, ip, lr}
   1812c:	stm	sp, {r0, r1, r7}
   18130:	movw	r1, #61213	; 0xef1d
   18134:	add	r0, sp, #12
   18138:	stm	r0, {r4, ip, lr}
   1813c:	str	r6, [sp, #24]
   18140:	movt	r1, #1
   18144:	mov	r0, r5
   18148:	bl	11d5c <fprintf@plt>
   1814c:	sub	sp, fp, #16
   18150:	pop	{r4, r5, r6, r7, fp, pc}
   18154:	ldr	r2, [r6]
   18158:	movw	r1, #60894	; 0xedde
   1815c:	mov	r0, r5
   18160:	movt	r1, #1
   18164:	sub	sp, fp, #16
   18168:	pop	{r4, r5, r6, r7, fp, lr}
   1816c:	b	11d5c <fprintf@plt>
   18170:	ldm	r6, {r2, r3}
   18174:	movw	r1, #60910	; 0xedee
   18178:	mov	r0, r5
   1817c:	movt	r1, #1
   18180:	sub	sp, fp, #16
   18184:	pop	{r4, r5, r6, r7, fp, lr}
   18188:	b	11d5c <fprintf@plt>
   1818c:	ldr	r0, [r6, #8]
   18190:	movw	r1, #60933	; 0xee05
   18194:	ldm	r6, {r2, r3}
   18198:	movt	r1, #1
   1819c:	str	r0, [sp]
   181a0:	mov	r0, r5
   181a4:	bl	11d5c <fprintf@plt>
   181a8:	sub	sp, fp, #16
   181ac:	pop	{r4, r5, r6, r7, fp, pc}
   181b0:	ldr	r0, [r6, #8]
   181b4:	ldm	r6, {r2, r3}
   181b8:	ldr	r1, [r6, #12]
   181bc:	stm	sp, {r0, r1}
   181c0:	movw	r1, #60961	; 0xee21
   181c4:	movt	r1, #1
   181c8:	mov	r0, r5
   181cc:	bl	11d5c <fprintf@plt>
   181d0:	sub	sp, fp, #16
   181d4:	pop	{r4, r5, r6, r7, fp, pc}
   181d8:	add	r7, r6, #8
   181dc:	ldm	r6, {r2, r3}
   181e0:	ldm	r7, {r0, r1, r7}
   181e4:	stm	sp, {r0, r1, r7}
   181e8:	movw	r1, #60993	; 0xee41
   181ec:	movt	r1, #1
   181f0:	mov	r0, r5
   181f4:	bl	11d5c <fprintf@plt>
   181f8:	sub	sp, fp, #16
   181fc:	pop	{r4, r5, r6, r7, fp, pc}
   18200:	add	r7, r6, #8
   18204:	ldm	r6, {r2, r3}
   18208:	ldr	r6, [r6, #20]
   1820c:	ldm	r7, {r0, r1, r7}
   18210:	stm	sp, {r0, r1, r7}
   18214:	movw	r1, #61029	; 0xee65
   18218:	str	r6, [sp, #12]
   1821c:	movt	r1, #1
   18220:	mov	r0, r5
   18224:	bl	11d5c <fprintf@plt>
   18228:	sub	sp, fp, #16
   1822c:	pop	{r4, r5, r6, r7, fp, pc}
   18230:	add	r7, r6, #8
   18234:	ldm	r6, {r2, r3}
   18238:	ldr	r4, [r6, #20]
   1823c:	ldr	r6, [r6, #24]
   18240:	ldm	r7, {r0, r1, r7}
   18244:	stm	sp, {r0, r1, r7}
   18248:	movw	r1, #61069	; 0xee8d
   1824c:	str	r4, [sp, #12]
   18250:	str	r6, [sp, #16]
   18254:	movt	r1, #1
   18258:	mov	r0, r5
   1825c:	bl	11d5c <fprintf@plt>
   18260:	sub	sp, fp, #16
   18264:	pop	{r4, r5, r6, r7, fp, pc}
   18268:	add	r7, r6, #8
   1826c:	add	lr, r6, #20
   18270:	ldm	r6, {r2, r3}
   18274:	ldr	r6, [r6, #32]
   18278:	ldm	r7, {r0, r1, r7}
   1827c:	ldm	lr, {r4, ip, lr}
   18280:	stm	sp, {r0, r1, r7}
   18284:	movw	r1, #61161	; 0xeee9
   18288:	add	r0, sp, #12
   1828c:	stm	r0, {r4, ip, lr}
   18290:	str	r6, [sp, #24]
   18294:	movt	r1, #1
   18298:	mov	r0, r5
   1829c:	bl	11d5c <fprintf@plt>
   182a0:	sub	sp, fp, #16
   182a4:	pop	{r4, r5, r6, r7, fp, pc}
   182a8:	add	r7, r6, #8
   182ac:	ldm	r6, {r2, r3}
   182b0:	ldr	r4, [r6, #20]
   182b4:	ldr	ip, [r6, #24]
   182b8:	ldr	r6, [r6, #28]
   182bc:	ldm	r7, {r0, r1, r7}
   182c0:	stm	sp, {r0, r1, r7}
   182c4:	movw	r1, #61113	; 0xeeb9
   182c8:	str	r4, [sp, #12]
   182cc:	str	ip, [sp, #16]
   182d0:	str	r6, [sp, #20]
   182d4:	movt	r1, #1
   182d8:	mov	r0, r5
   182dc:	bl	11d5c <fprintf@plt>
   182e0:	sub	sp, fp, #16
   182e4:	pop	{r4, r5, r6, r7, fp, pc}
   182e8:	push	{r4, sl, fp, lr}
   182ec:	add	fp, sp, #8
   182f0:	sub	sp, sp, #8
   182f4:	ldr	ip, [fp, #8]
   182f8:	mov	lr, #0
   182fc:	ldr	r4, [ip, lr, lsl #2]
   18300:	add	lr, lr, #1
   18304:	cmp	r4, #0
   18308:	bne	182fc <argp_parse@@Base+0x1858>
   1830c:	sub	r4, lr, #1
   18310:	str	ip, [sp]
   18314:	str	r4, [sp, #4]
   18318:	bl	18034 <argp_parse@@Base+0x1590>
   1831c:	sub	sp, fp, #8
   18320:	pop	{r4, sl, fp, pc}
   18324:	push	{fp, lr}
   18328:	mov	fp, sp
   1832c:	sub	sp, sp, #48	; 0x30
   18330:	ldr	ip, [fp, #8]
   18334:	ldr	lr, [ip]
   18338:	cmp	lr, #0
   1833c:	str	lr, [sp, #8]
   18340:	beq	183dc <argp_parse@@Base+0x1938>
   18344:	ldr	lr, [ip, #4]
   18348:	cmp	lr, #0
   1834c:	str	lr, [sp, #12]
   18350:	beq	183e4 <argp_parse@@Base+0x1940>
   18354:	ldr	lr, [ip, #8]
   18358:	cmp	lr, #0
   1835c:	str	lr, [sp, #16]
   18360:	beq	183ec <argp_parse@@Base+0x1948>
   18364:	ldr	lr, [ip, #12]
   18368:	cmp	lr, #0
   1836c:	str	lr, [sp, #20]
   18370:	beq	183f4 <argp_parse@@Base+0x1950>
   18374:	ldr	lr, [ip, #16]
   18378:	cmp	lr, #0
   1837c:	str	lr, [sp, #24]
   18380:	beq	183fc <argp_parse@@Base+0x1958>
   18384:	ldr	lr, [ip, #20]
   18388:	cmp	lr, #0
   1838c:	str	lr, [sp, #28]
   18390:	beq	18404 <argp_parse@@Base+0x1960>
   18394:	ldr	lr, [ip, #24]
   18398:	cmp	lr, #0
   1839c:	str	lr, [sp, #32]
   183a0:	beq	1840c <argp_parse@@Base+0x1968>
   183a4:	ldr	lr, [ip, #28]
   183a8:	cmp	lr, #0
   183ac:	str	lr, [sp, #36]	; 0x24
   183b0:	beq	18414 <argp_parse@@Base+0x1970>
   183b4:	ldr	lr, [ip, #32]
   183b8:	cmp	lr, #0
   183bc:	str	lr, [sp, #40]	; 0x28
   183c0:	beq	1841c <argp_parse@@Base+0x1978>
   183c4:	ldr	lr, [ip, #36]	; 0x24
   183c8:	mov	ip, #10
   183cc:	cmp	lr, #0
   183d0:	str	lr, [sp, #44]	; 0x2c
   183d4:	movweq	ip, #9
   183d8:	b	18420 <argp_parse@@Base+0x197c>
   183dc:	mov	ip, #0
   183e0:	b	18420 <argp_parse@@Base+0x197c>
   183e4:	mov	ip, #1
   183e8:	b	18420 <argp_parse@@Base+0x197c>
   183ec:	mov	ip, #2
   183f0:	b	18420 <argp_parse@@Base+0x197c>
   183f4:	mov	ip, #3
   183f8:	b	18420 <argp_parse@@Base+0x197c>
   183fc:	mov	ip, #4
   18400:	b	18420 <argp_parse@@Base+0x197c>
   18404:	mov	ip, #5
   18408:	b	18420 <argp_parse@@Base+0x197c>
   1840c:	mov	ip, #6
   18410:	b	18420 <argp_parse@@Base+0x197c>
   18414:	mov	ip, #7
   18418:	b	18420 <argp_parse@@Base+0x197c>
   1841c:	mov	ip, #8
   18420:	add	lr, sp, #8
   18424:	str	ip, [sp, #4]
   18428:	str	lr, [sp]
   1842c:	bl	18034 <argp_parse@@Base+0x1590>
   18430:	mov	sp, fp
   18434:	pop	{fp, pc}
   18438:	push	{fp, lr}
   1843c:	mov	fp, sp
   18440:	sub	sp, sp, #56	; 0x38
   18444:	add	ip, fp, #8
   18448:	str	ip, [sp, #12]
   1844c:	ldr	lr, [fp, #8]
   18450:	cmp	lr, #0
   18454:	str	lr, [sp, #16]
   18458:	beq	184f4 <argp_parse@@Base+0x1a50>
   1845c:	ldr	lr, [ip, #4]
   18460:	cmp	lr, #0
   18464:	str	lr, [sp, #20]
   18468:	beq	184fc <argp_parse@@Base+0x1a58>
   1846c:	ldr	lr, [ip, #8]
   18470:	cmp	lr, #0
   18474:	str	lr, [sp, #24]
   18478:	beq	18504 <argp_parse@@Base+0x1a60>
   1847c:	ldr	lr, [ip, #12]
   18480:	cmp	lr, #0
   18484:	str	lr, [sp, #28]
   18488:	beq	1850c <argp_parse@@Base+0x1a68>
   1848c:	ldr	lr, [ip, #16]
   18490:	cmp	lr, #0
   18494:	str	lr, [sp, #32]
   18498:	beq	18514 <argp_parse@@Base+0x1a70>
   1849c:	ldr	lr, [ip, #20]
   184a0:	cmp	lr, #0
   184a4:	str	lr, [sp, #36]	; 0x24
   184a8:	beq	1851c <argp_parse@@Base+0x1a78>
   184ac:	ldr	lr, [ip, #24]
   184b0:	cmp	lr, #0
   184b4:	str	lr, [sp, #40]	; 0x28
   184b8:	beq	18524 <argp_parse@@Base+0x1a80>
   184bc:	ldr	lr, [ip, #28]
   184c0:	cmp	lr, #0
   184c4:	str	lr, [sp, #44]	; 0x2c
   184c8:	beq	1852c <argp_parse@@Base+0x1a88>
   184cc:	ldr	lr, [ip, #32]
   184d0:	cmp	lr, #0
   184d4:	str	lr, [sp, #48]	; 0x30
   184d8:	beq	18534 <argp_parse@@Base+0x1a90>
   184dc:	ldr	lr, [ip, #36]	; 0x24
   184e0:	mov	ip, #10
   184e4:	cmp	lr, #0
   184e8:	str	lr, [sp, #52]	; 0x34
   184ec:	movweq	ip, #9
   184f0:	b	18538 <argp_parse@@Base+0x1a94>
   184f4:	mov	ip, #0
   184f8:	b	18538 <argp_parse@@Base+0x1a94>
   184fc:	mov	ip, #1
   18500:	b	18538 <argp_parse@@Base+0x1a94>
   18504:	mov	ip, #2
   18508:	b	18538 <argp_parse@@Base+0x1a94>
   1850c:	mov	ip, #3
   18510:	b	18538 <argp_parse@@Base+0x1a94>
   18514:	mov	ip, #4
   18518:	b	18538 <argp_parse@@Base+0x1a94>
   1851c:	mov	ip, #5
   18520:	b	18538 <argp_parse@@Base+0x1a94>
   18524:	mov	ip, #6
   18528:	b	18538 <argp_parse@@Base+0x1a94>
   1852c:	mov	ip, #7
   18530:	b	18538 <argp_parse@@Base+0x1a94>
   18534:	mov	ip, #8
   18538:	add	lr, sp, #16
   1853c:	str	ip, [sp, #4]
   18540:	str	lr, [sp]
   18544:	bl	18034 <argp_parse@@Base+0x1590>
   18548:	mov	sp, fp
   1854c:	pop	{fp, pc}
   18550:	push	{fp, lr}
   18554:	mov	fp, sp
   18558:	movw	r0, #948	; 0x3b4
   1855c:	movt	r0, #3
   18560:	ldr	r1, [r0]
   18564:	mov	r0, #10
   18568:	bl	11e58 <fputc@plt>
   1856c:	movw	r0, #61273	; 0xef59
   18570:	movw	r1, #61293	; 0xef6d
   18574:	movt	r0, #1
   18578:	movt	r1, #1
   1857c:	bl	11aec <printf@plt>
   18580:	movw	r0, #61315	; 0xef83
   18584:	movw	r1, #60571	; 0xec9b
   18588:	movw	r2, #61335	; 0xef97
   1858c:	movt	r0, #1
   18590:	movt	r1, #1
   18594:	movt	r2, #1
   18598:	bl	11aec <printf@plt>
   1859c:	movw	r0, #61374	; 0xefbe
   185a0:	movw	r1, #61413	; 0xefe5
   185a4:	movt	r0, #1
   185a8:	movt	r1, #1
   185ac:	pop	{fp, lr}
   185b0:	b	11aec <printf@plt>
   185b4:	clz	r2, r1
   185b8:	clz	r3, r0
   185bc:	lsr	r2, r2, #5
   185c0:	lsr	r3, r3, #5
   185c4:	orrs	r2, r3, r2
   185c8:	movwne	r1, #1
   185cc:	movwne	r0, #1
   185d0:	cmp	r1, #0
   185d4:	beq	18604 <argp_parse@@Base+0x1b60>
   185d8:	mvn	r2, #-2147483648	; 0x80000000
   185dc:	udiv	r2, r2, r1
   185e0:	cmp	r2, r0
   185e4:	bcs	18604 <argp_parse@@Base+0x1b60>
   185e8:	push	{fp, lr}
   185ec:	mov	fp, sp
   185f0:	bl	11d74 <__errno_location@plt>
   185f4:	mov	r1, #12
   185f8:	str	r1, [r0]
   185fc:	mov	r0, #0
   18600:	pop	{fp, pc}
   18604:	b	11a80 <calloc@plt>
   18608:	cmp	r0, #0
   1860c:	movweq	r0, #1
   18610:	cmn	r0, #1
   18614:	ble	1861c <argp_parse@@Base+0x1b78>
   18618:	b	11ca8 <malloc@plt>
   1861c:	push	{fp, lr}
   18620:	mov	fp, sp
   18624:	bl	11d74 <__errno_location@plt>
   18628:	mov	r1, #12
   1862c:	str	r1, [r0]
   18630:	mov	r0, #0
   18634:	pop	{fp, pc}
   18638:	push	{fp, lr}
   1863c:	mov	fp, sp
   18640:	cmp	r0, #0
   18644:	beq	18660 <argp_parse@@Base+0x1bbc>
   18648:	cmp	r1, #0
   1864c:	beq	1866c <argp_parse@@Base+0x1bc8>
   18650:	cmn	r1, #1
   18654:	ble	18678 <argp_parse@@Base+0x1bd4>
   18658:	pop	{fp, lr}
   1865c:	b	11bf4 <realloc@plt>
   18660:	mov	r0, r1
   18664:	pop	{fp, lr}
   18668:	b	18608 <argp_parse@@Base+0x1b64>
   1866c:	bl	17e80 <argp_parse@@Base+0x13dc>
   18670:	mov	r0, #0
   18674:	pop	{fp, pc}
   18678:	bl	11d74 <__errno_location@plt>
   1867c:	mov	r1, #12
   18680:	str	r1, [r0]
   18684:	mov	r0, #0
   18688:	pop	{fp, pc}

0001868c <argp_help@@Base>:
   1868c:	push	{fp, lr}
   18690:	mov	fp, sp
   18694:	sub	sp, sp, #8
   18698:	mov	ip, r2
   1869c:	mov	r2, r1
   186a0:	str	r3, [sp]
   186a4:	mov	r1, #0
   186a8:	mov	r3, ip
   186ac:	bl	186b8 <argp_help@@Base+0x2c>
   186b0:	mov	sp, fp
   186b4:	pop	{fp, pc}
   186b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   186bc:	add	fp, sp, #28
   186c0:	sub	sp, sp, #108	; 0x6c
   186c4:	cmp	r2, #0
   186c8:	str	r1, [fp, #-96]	; 0xffffffa0
   186cc:	str	r0, [fp, #-104]	; 0xffffff98
   186d0:	beq	19cb0 <argp_help@@Base+0x1624>
   186d4:	ldr	r0, [fp, #8]
   186d8:	mov	r6, r3
   186dc:	mov	r5, r2
   186e0:	str	r0, [fp, #-92]	; 0xffffffa4
   186e4:	mov	r0, r2
   186e8:	bl	11eac <flockfile@plt>
   186ec:	movw	sl, #880	; 0x370
   186f0:	str	r6, [fp, #-128]	; 0xffffff80
   186f4:	movt	sl, #3
   186f8:	ldr	r0, [sl, #36]	; 0x24
   186fc:	cmp	r0, #0
   18700:	bne	18cc8 <argp_help@@Base+0x63c>
   18704:	movw	r0, #61605	; 0xf0a5
   18708:	movt	r0, #1
   1870c:	bl	11c90 <getenv@plt>
   18710:	mov	r8, r0
   18714:	mov	r0, #32
   18718:	mov	r1, sl
   1871c:	add	r3, sl, #16
   18720:	sub	r2, fp, #88	; 0x58
   18724:	vld1.64	{d16-d17}, [r1], r0
   18728:	vld1.64	{d18-d19}, [r3]
   1872c:	add	r7, r2, #16
   18730:	cmp	r8, #0
   18734:	vldr	d20, [r1]
   18738:	mov	r1, r2
   1873c:	vst1.64	{d16-d17}, [r1], r0
   18740:	vst1.64	{d18-d19}, [r7]
   18744:	vstr	d20, [r1]
   18748:	beq	18cc8 <argp_help@@Base+0x63c>
   1874c:	str	r7, [fp, #-112]	; 0xffffff90
   18750:	str	r3, [fp, #-108]	; 0xffffff94
   18754:	str	r5, [fp, #-132]	; 0xffffff7c
   18758:	ldrb	r5, [r8]
   1875c:	cmp	r5, #0
   18760:	beq	18bc4 <argp_help@@Base+0x538>
   18764:	movw	r7, #62264	; 0xf338
   18768:	movt	r7, #1
   1876c:	bl	11cf0 <__ctype_b_loc@plt>
   18770:	str	r0, [fp, #-100]	; 0xffffff9c
   18774:	b	187ac <argp_help@@Base+0x120>
   18778:	ldrb	r0, [r5, #15]
   1877c:	sub	r1, fp, #88	; 0x58
   18780:	str	r6, [r1, r0]
   18784:	ldr	r6, [fp, #-128]	; 0xffffff80
   18788:	movw	sl, #880	; 0x370
   1878c:	movt	sl, #3
   18790:	mov	r8, r4
   18794:	ldrb	r0, [r8], #1
   18798:	cmp	r0, #44	; 0x2c
   1879c:	movne	r8, r4
   187a0:	ldrb	r5, [r8]
   187a4:	cmp	r5, #0
   187a8:	beq	18bc4 <argp_help@@Base+0x538>
   187ac:	ldr	r0, [fp, #-100]	; 0xffffff9c
   187b0:	uxtb	r1, r5
   187b4:	ldr	r0, [r0]
   187b8:	add	r1, r0, r1, lsl #1
   187bc:	ldrh	r1, [r1]
   187c0:	tst	r1, #8192	; 0x2000
   187c4:	beq	187dc <argp_help@@Base+0x150>
   187c8:	ldrb	r5, [r8, #1]!
   187cc:	add	r1, r0, r5, lsl #1
   187d0:	ldrh	r1, [r1]
   187d4:	tst	r1, #8192	; 0x2000
   187d8:	bne	187c8 <argp_help@@Base+0x13c>
   187dc:	tst	r1, #1024	; 0x400
   187e0:	beq	18b80 <argp_help@@Base+0x4f4>
   187e4:	mov	r3, r5
   187e8:	mov	r2, r8
   187ec:	b	187f4 <argp_help@@Base+0x168>
   187f0:	ldrb	r3, [r2, #1]!
   187f4:	uxtb	r6, r3
   187f8:	add	r1, r0, r6, lsl #1
   187fc:	ldrh	r1, [r1]
   18800:	tst	r1, #8
   18804:	bne	187f0 <argp_help@@Base+0x164>
   18808:	cmp	r6, #95	; 0x5f
   1880c:	cmpne	r6, #45	; 0x2d
   18810:	beq	187f0 <argp_help@@Base+0x164>
   18814:	tst	r1, #8192	; 0x2000
   18818:	mov	r4, r2
   1881c:	beq	18838 <argp_help@@Base+0x1ac>
   18820:	mov	r4, r2
   18824:	ldrb	r3, [r4, #1]!
   18828:	add	r1, r0, r3, lsl #1
   1882c:	ldrh	r1, [r1]
   18830:	tst	r1, #8192	; 0x2000
   18834:	bne	18824 <argp_help@@Base+0x198>
   18838:	sub	r9, r2, r8
   1883c:	uxtb	r2, r3
   18840:	cmp	r2, #0
   18844:	cmpne	r2, #44	; 0x2c
   18848:	bne	188b8 <argp_help@@Base+0x22c>
   1884c:	uxtb	r0, r5
   18850:	mov	sl, #1
   18854:	cmp	r0, #110	; 0x6e
   18858:	bne	188a0 <argp_help@@Base+0x214>
   1885c:	ldrb	r0, [r8, #1]
   18860:	mov	sl, #1
   18864:	cmp	r0, #111	; 0x6f
   18868:	bne	188a0 <argp_help@@Base+0x214>
   1886c:	ldrb	r0, [r8, #2]
   18870:	mov	sl, #1
   18874:	cmp	r0, #45	; 0x2d
   18878:	bne	188a0 <argp_help@@Base+0x214>
   1887c:	sub	r9, r9, #3
   18880:	add	r8, r8, #3
   18884:	mov	r6, #0
   18888:	mov	sl, #1
   1888c:	mov	r0, r7
   18890:	bl	11d2c <strlen@plt>
   18894:	cmp	r0, r9
   18898:	beq	1895c <argp_help@@Base+0x2d0>
   1889c:	b	18978 <argp_help@@Base+0x2ec>
   188a0:	mov	r6, #1
   188a4:	mov	r0, r7
   188a8:	bl	11d2c <strlen@plt>
   188ac:	cmp	r0, r9
   188b0:	beq	1895c <argp_help@@Base+0x2d0>
   188b4:	b	18978 <argp_help@@Base+0x2ec>
   188b8:	cmp	r2, #61	; 0x3d
   188bc:	bne	188d4 <argp_help@@Base+0x248>
   188c0:	ldrb	r1, [r4, #1]!
   188c4:	add	r1, r0, r1, lsl #1
   188c8:	ldrh	r1, [r1]
   188cc:	tst	r1, #8192	; 0x2000
   188d0:	bne	188c0 <argp_help@@Base+0x234>
   188d4:	mov	sl, #0
   188d8:	tst	r1, #2048	; 0x800
   188dc:	bne	188f8 <argp_help@@Base+0x26c>
   188e0:	mov	r6, #0
   188e4:	mov	r0, r7
   188e8:	bl	11d2c <strlen@plt>
   188ec:	cmp	r0, r9
   188f0:	beq	1895c <argp_help@@Base+0x2d0>
   188f4:	b	18978 <argp_help@@Base+0x2ec>
   188f8:	mov	r0, r4
   188fc:	mov	r1, #0
   18900:	mov	r2, #10
   18904:	bl	11abc <strtol@plt>
   18908:	mov	r6, r0
   1890c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18910:	sub	r4, r4, #1
   18914:	ldr	r0, [r0]
   18918:	ldrb	r1, [r4, #1]!
   1891c:	add	r1, r0, r1, lsl #1
   18920:	ldrh	r1, [r1]
   18924:	tst	r1, #2048	; 0x800
   18928:	bne	18918 <argp_help@@Base+0x28c>
   1892c:	mov	sl, #0
   18930:	tst	r1, #8192	; 0x2000
   18934:	beq	1894c <argp_help@@Base+0x2c0>
   18938:	ldrb	r1, [r4, #1]!
   1893c:	add	r1, r0, r1, lsl #1
   18940:	ldrb	r1, [r1, #1]
   18944:	tst	r1, #32
   18948:	bne	18938 <argp_help@@Base+0x2ac>
   1894c:	mov	r0, r7
   18950:	bl	11d2c <strlen@plt>
   18954:	cmp	r0, r9
   18958:	bne	18978 <argp_help@@Base+0x2ec>
   1895c:	mov	r0, r8
   18960:	mov	r1, r7
   18964:	mov	r2, r9
   18968:	bl	11f24 <strncmp@plt>
   1896c:	cmp	r0, #0
   18970:	mov	r5, r7
   18974:	beq	18afc <argp_help@@Base+0x470>
   18978:	add	r5, r7, #16
   1897c:	mov	r0, r5
   18980:	bl	11d2c <strlen@plt>
   18984:	cmp	r0, r9
   18988:	bne	189a4 <argp_help@@Base+0x318>
   1898c:	mov	r0, r8
   18990:	mov	r1, r5
   18994:	mov	r2, r9
   18998:	bl	11f24 <strncmp@plt>
   1899c:	cmp	r0, #0
   189a0:	beq	18afc <argp_help@@Base+0x470>
   189a4:	add	r5, r7, #32
   189a8:	mov	r0, r5
   189ac:	bl	11d2c <strlen@plt>
   189b0:	cmp	r0, r9
   189b4:	bne	189d0 <argp_help@@Base+0x344>
   189b8:	mov	r0, r8
   189bc:	mov	r1, r5
   189c0:	mov	r2, r9
   189c4:	bl	11f24 <strncmp@plt>
   189c8:	cmp	r0, #0
   189cc:	beq	18afc <argp_help@@Base+0x470>
   189d0:	add	r5, r7, #48	; 0x30
   189d4:	mov	r0, r5
   189d8:	bl	11d2c <strlen@plt>
   189dc:	cmp	r0, r9
   189e0:	bne	189fc <argp_help@@Base+0x370>
   189e4:	mov	r0, r8
   189e8:	mov	r1, r5
   189ec:	mov	r2, r9
   189f0:	bl	11f24 <strncmp@plt>
   189f4:	cmp	r0, #0
   189f8:	beq	18afc <argp_help@@Base+0x470>
   189fc:	add	r5, r7, #64	; 0x40
   18a00:	mov	r0, r5
   18a04:	bl	11d2c <strlen@plt>
   18a08:	cmp	r0, r9
   18a0c:	bne	18a28 <argp_help@@Base+0x39c>
   18a10:	mov	r0, r8
   18a14:	mov	r1, r5
   18a18:	mov	r2, r9
   18a1c:	bl	11f24 <strncmp@plt>
   18a20:	cmp	r0, #0
   18a24:	beq	18afc <argp_help@@Base+0x470>
   18a28:	add	r5, r7, #80	; 0x50
   18a2c:	mov	r0, r5
   18a30:	bl	11d2c <strlen@plt>
   18a34:	cmp	r0, r9
   18a38:	bne	18a54 <argp_help@@Base+0x3c8>
   18a3c:	mov	r0, r8
   18a40:	mov	r1, r5
   18a44:	mov	r2, r9
   18a48:	bl	11f24 <strncmp@plt>
   18a4c:	cmp	r0, #0
   18a50:	beq	18afc <argp_help@@Base+0x470>
   18a54:	add	r5, r7, #96	; 0x60
   18a58:	mov	r0, r5
   18a5c:	bl	11d2c <strlen@plt>
   18a60:	cmp	r0, r9
   18a64:	bne	18a80 <argp_help@@Base+0x3f4>
   18a68:	mov	r0, r8
   18a6c:	mov	r1, r5
   18a70:	mov	r2, r9
   18a74:	bl	11f24 <strncmp@plt>
   18a78:	cmp	r0, #0
   18a7c:	beq	18afc <argp_help@@Base+0x470>
   18a80:	add	r5, r7, #112	; 0x70
   18a84:	mov	r0, r5
   18a88:	bl	11d2c <strlen@plt>
   18a8c:	cmp	r0, r9
   18a90:	bne	18aac <argp_help@@Base+0x420>
   18a94:	mov	r0, r8
   18a98:	mov	r1, r5
   18a9c:	mov	r2, r9
   18aa0:	bl	11f24 <strncmp@plt>
   18aa4:	cmp	r0, #0
   18aa8:	beq	18afc <argp_help@@Base+0x470>
   18aac:	add	r5, r7, #128	; 0x80
   18ab0:	mov	r0, r5
   18ab4:	bl	11d2c <strlen@plt>
   18ab8:	cmp	r0, r9
   18abc:	bne	18ad8 <argp_help@@Base+0x44c>
   18ac0:	mov	r0, r8
   18ac4:	mov	r1, r5
   18ac8:	mov	r2, r9
   18acc:	bl	11f24 <strncmp@plt>
   18ad0:	cmp	r0, #0
   18ad4:	beq	18afc <argp_help@@Base+0x470>
   18ad8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18adc:	movw	sl, #880	; 0x370
   18ae0:	movt	sl, #3
   18ae4:	cmp	r0, #0
   18ae8:	sub	sp, sp, #8
   18aec:	beq	18b54 <argp_help@@Base+0x4c8>
   18af0:	str	r9, [sp]
   18af4:	str	r8, [sp, #4]
   18af8:	b	18b60 <argp_help@@Base+0x4d4>
   18afc:	cmp	sl, #0
   18b00:	beq	18778 <argp_help@@Base+0xec>
   18b04:	ldrb	r0, [r5, #14]
   18b08:	cmp	r0, #0
   18b0c:	bne	18778 <argp_help@@Base+0xec>
   18b10:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18b14:	sub	sp, sp, #8
   18b18:	cmp	r0, #0
   18b1c:	beq	18b2c <argp_help@@Base+0x4a0>
   18b20:	str	r9, [sp]
   18b24:	str	r8, [sp, #4]
   18b28:	b	18b38 <argp_help@@Base+0x4ac>
   18b2c:	str	r9, [sp]
   18b30:	str	r8, [sp, #4]
   18b34:	mov	r0, #0
   18b38:	movw	r3, #61619	; 0xf0b3
   18b3c:	mov	r1, #0
   18b40:	mov	r2, #0
   18b44:	movt	r3, #1
   18b48:	bl	1a0a8 <argp_failure@@Base>
   18b4c:	add	sp, sp, #8
   18b50:	b	18784 <argp_help@@Base+0xf8>
   18b54:	str	r9, [sp]
   18b58:	str	r8, [sp, #4]
   18b5c:	mov	r0, #0
   18b60:	movw	r3, #61666	; 0xf0e2
   18b64:	mov	r1, #0
   18b68:	mov	r2, #0
   18b6c:	movt	r3, #1
   18b70:	bl	1a0a8 <argp_failure@@Base>
   18b74:	add	sp, sp, #8
   18b78:	ldr	r6, [fp, #-128]	; 0xffffff80
   18b7c:	b	18790 <argp_help@@Base+0x104>
   18b80:	tst	r5, #255	; 0xff
   18b84:	beq	18bc4 <argp_help@@Base+0x538>
   18b88:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18b8c:	sub	sp, sp, #8
   18b90:	cmp	r0, #0
   18b94:	beq	18ba4 <argp_help@@Base+0x518>
   18b98:	movw	r3, #61704	; 0xf108
   18b9c:	str	r8, [sp]
   18ba0:	b	18bb0 <argp_help@@Base+0x524>
   18ba4:	movw	r3, #61704	; 0xf108
   18ba8:	str	r8, [sp]
   18bac:	mov	r0, #0
   18bb0:	movt	r3, #1
   18bb4:	mov	r1, #0
   18bb8:	mov	r2, #0
   18bbc:	bl	1a0a8 <argp_failure@@Base>
   18bc0:	add	sp, sp, #8
   18bc4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   18bc8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18bcc:	movw	r0, #62264	; 0xf338
   18bd0:	movt	r0, #1
   18bd4:	cmp	r2, r1
   18bd8:	bge	18c5c <argp_help@@Base+0x5d0>
   18bdc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18be0:	cmp	r2, r1
   18be4:	bge	18c64 <argp_help@@Base+0x5d8>
   18be8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18bec:	cmp	r2, r1
   18bf0:	bge	18c6c <argp_help@@Base+0x5e0>
   18bf4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18bf8:	cmp	r2, r1
   18bfc:	bge	18c74 <argp_help@@Base+0x5e8>
   18c00:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18c04:	cmp	r2, r1
   18c08:	bge	18c7c <argp_help@@Base+0x5f0>
   18c0c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18c10:	ldr	r5, [fp, #-132]	; 0xffffff7c
   18c14:	cmp	r2, r1
   18c18:	bge	19e7c <argp_help@@Base+0x17f0>
   18c1c:	ldr	r0, [fp, #-112]	; 0xffffff90
   18c20:	sub	r1, fp, #88	; 0x58
   18c24:	mov	r2, r1
   18c28:	mov	r1, sl
   18c2c:	vld1.64	{d16-d17}, [r0]
   18c30:	mov	r0, #32
   18c34:	vld1.64	{d18-d19}, [r2], r0
   18c38:	ldr	r0, [fp, #-108]	; 0xffffff94
   18c3c:	vst1.64	{d16-d17}, [r0]
   18c40:	mov	r0, #36	; 0x24
   18c44:	vst1.64	{d18-d19}, [r1], r0
   18c48:	mov	r0, #1
   18c4c:	str	r0, [r1]
   18c50:	ldr	r0, [r2]
   18c54:	str	r0, [sl, #32]
   18c58:	b	18cc8 <argp_help@@Base+0x63c>
   18c5c:	add	r2, r0, #32
   18c60:	b	18c80 <argp_help@@Base+0x5f4>
   18c64:	add	r2, r0, #48	; 0x30
   18c68:	b	18c80 <argp_help@@Base+0x5f4>
   18c6c:	add	r2, r0, #64	; 0x40
   18c70:	b	18c80 <argp_help@@Base+0x5f4>
   18c74:	add	r2, r0, #80	; 0x50
   18c78:	b	18c80 <argp_help@@Base+0x5f4>
   18c7c:	add	r2, r0, #96	; 0x60
   18c80:	ldr	r5, [fp, #-132]	; 0xffffff7c
   18c84:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18c88:	sub	sp, sp, #8
   18c8c:	movw	r1, #61785	; 0xf159
   18c90:	cmp	r0, #0
   18c94:	movt	r1, #1
   18c98:	beq	18ca8 <argp_help@@Base+0x61c>
   18c9c:	movw	r3, #61733	; 0xf125
   18ca0:	stm	sp, {r1, r2}
   18ca4:	b	18cb4 <argp_help@@Base+0x628>
   18ca8:	movw	r3, #61733	; 0xf125
   18cac:	stm	sp, {r1, r2}
   18cb0:	mov	r0, #0
   18cb4:	movt	r3, #1
   18cb8:	mov	r1, #0
   18cbc:	mov	r2, #0
   18cc0:	bl	1a0a8 <argp_failure@@Base>
   18cc4:	add	sp, sp, #8
   18cc8:	ldr	r2, [sl, #32]
   18ccc:	mov	r0, #0
   18cd0:	mov	r1, #0
   18cd4:	mov	r3, #0
   18cd8:	str	r0, [fp, #-108]	; 0xffffff94
   18cdc:	mov	r0, r5
   18ce0:	bl	1d7a0 <argp_failure@@Base+0x36f8>
   18ce4:	cmp	r0, #0
   18ce8:	beq	19b7c <argp_help@@Base+0x14f0>
   18cec:	mov	r9, r0
   18cf0:	tst	r6, #11
   18cf4:	str	r5, [fp, #-132]	; 0xffffff7c
   18cf8:	beq	18ec4 <argp_help@@Base+0x838>
   18cfc:	ldr	r0, [fp, #-104]	; 0xffffff98
   18d00:	mov	r1, #0
   18d04:	bl	1a2cc <argp_failure@@Base+0x224>
   18d08:	ldr	r4, [r0, #4]
   18d0c:	str	r0, [fp, #-108]	; 0xffffff94
   18d10:	cmp	r4, #0
   18d14:	beq	18ec4 <argp_help@@Base+0x838>
   18d18:	ldr	r6, [r0]
   18d1c:	movw	sl, #58910	; 0xe61e
   18d20:	mov	r5, r4
   18d24:	movt	sl, #1
   18d28:	str	r6, [fp, #-100]	; 0xffffff9c
   18d2c:	ldr	r7, [r6, #4]
   18d30:	cmp	r7, #0
   18d34:	bne	18d50 <argp_help@@Base+0x6c4>
   18d38:	subs	r5, r5, #1
   18d3c:	add	r6, r6, #28
   18d40:	beq	18da4 <argp_help@@Base+0x718>
   18d44:	ldr	r7, [r6, #4]
   18d48:	cmp	r7, #0
   18d4c:	beq	18d38 <argp_help@@Base+0x6ac>
   18d50:	ldr	r0, [r6]
   18d54:	add	r8, r0, #12
   18d58:	ldr	r0, [r8, #-12]
   18d5c:	cmp	r0, #0
   18d60:	bne	18d7c <argp_help@@Base+0x6f0>
   18d64:	subs	r7, r7, #1
   18d68:	add	r8, r8, #24
   18d6c:	beq	18d38 <argp_help@@Base+0x6ac>
   18d70:	ldr	r0, [r8, #-12]
   18d74:	cmp	r0, #0
   18d78:	beq	18d64 <argp_help@@Base+0x6d8>
   18d7c:	ldrb	r1, [r8]
   18d80:	tst	r1, #2
   18d84:	bne	18d64 <argp_help@@Base+0x6d8>
   18d88:	mov	r1, sl
   18d8c:	bl	11ab0 <strcmp@plt>
   18d90:	cmp	r0, #0
   18d94:	bne	18d64 <argp_help@@Base+0x6d8>
   18d98:	cmp	r6, #0
   18d9c:	mvnne	r0, #0
   18da0:	strne	r0, [r6, #12]
   18da4:	ldr	r6, [fp, #-100]	; 0xffffff9c
   18da8:	movw	sl, #60480	; 0xec40
   18dac:	mov	r8, r4
   18db0:	movt	sl, #1
   18db4:	ldr	r7, [r6, #4]
   18db8:	cmp	r7, #0
   18dbc:	bne	18dd8 <argp_help@@Base+0x74c>
   18dc0:	subs	r8, r8, #1
   18dc4:	add	r6, r6, #28
   18dc8:	beq	18e2c <argp_help@@Base+0x7a0>
   18dcc:	ldr	r7, [r6, #4]
   18dd0:	cmp	r7, #0
   18dd4:	beq	18dc0 <argp_help@@Base+0x734>
   18dd8:	ldr	r0, [r6]
   18ddc:	add	r5, r0, #12
   18de0:	ldr	r0, [r5, #-12]
   18de4:	cmp	r0, #0
   18de8:	bne	18e04 <argp_help@@Base+0x778>
   18dec:	subs	r7, r7, #1
   18df0:	add	r5, r5, #24
   18df4:	beq	18dc0 <argp_help@@Base+0x734>
   18df8:	ldr	r0, [r5, #-12]
   18dfc:	cmp	r0, #0
   18e00:	beq	18dec <argp_help@@Base+0x760>
   18e04:	ldrb	r1, [r5]
   18e08:	tst	r1, #2
   18e0c:	bne	18dec <argp_help@@Base+0x760>
   18e10:	mov	r1, sl
   18e14:	bl	11ab0 <strcmp@plt>
   18e18:	cmp	r0, #0
   18e1c:	bne	18dec <argp_help@@Base+0x760>
   18e20:	cmp	r6, #0
   18e24:	mvnne	r0, #0
   18e28:	strne	r0, [r6, #12]
   18e2c:	cmp	r4, #0
   18e30:	beq	19ce0 <argp_help@@Base+0x1654>
   18e34:	sub	r2, r4, #1
   18e38:	ldr	r6, [fp, #-128]	; 0xffffff80
   18e3c:	movw	sl, #880	; 0x370
   18e40:	and	r0, r4, #3
   18e44:	mov	r1, #0
   18e48:	cmp	r2, #3
   18e4c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18e50:	movt	sl, #3
   18e54:	bcc	18e90 <argp_help@@Base+0x804>
   18e58:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18e5c:	sub	r3, r4, r0
   18e60:	mov	r1, #0
   18e64:	add	r7, r1, #3
   18e68:	str	r1, [r2, #24]
   18e6c:	str	r7, [r2, #108]	; 0x6c
   18e70:	add	r7, r1, #2
   18e74:	str	r7, [r2, #80]	; 0x50
   18e78:	add	r7, r1, #1
   18e7c:	add	r1, r1, #4
   18e80:	str	r7, [r2, #52]	; 0x34
   18e84:	add	r2, r2, #112	; 0x70
   18e88:	cmp	r3, r1
   18e8c:	bne	18e64 <argp_help@@Base+0x7d8>
   18e90:	cmp	r0, #0
   18e94:	beq	18eac <argp_help@@Base+0x820>
   18e98:	add	r2, r2, #24
   18e9c:	str	r1, [r2], #28
   18ea0:	subs	r0, r0, #1
   18ea4:	add	r1, r1, #1
   18ea8:	bne	18e9c <argp_help@@Base+0x810>
   18eac:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18eb0:	movw	r3, #46832	; 0xb6f0
   18eb4:	mov	r1, r4
   18eb8:	mov	r2, #28
   18ebc:	movt	r3, #1
   18ec0:	bl	11ed0 <qsort@plt>
   18ec4:	tst	r6, #3
   18ec8:	beq	19cf4 <argp_help@@Base+0x1668>
   18ecc:	ldr	r1, [fp, #-104]	; 0xffffff98
   18ed0:	ldr	r0, [r1, #8]
   18ed4:	ldr	r1, [r1, #16]
   18ed8:	bl	1aa68 <argp_failure@@Base+0x9c0>
   18edc:	mov	r2, r0
   18ee0:	add	r0, r0, #7
   18ee4:	bic	r0, r0, #7
   18ee8:	sub	r5, sp, r0
   18eec:	mov	sp, r5
   18ef0:	mov	r0, r5
   18ef4:	mov	r1, #0
   18ef8:	bl	11da4 <memset@plt>
   18efc:	movw	r7, #61516	; 0xf04c
   18f00:	movt	r7, #1
   18f04:	b	18f28 <argp_help@@Base+0x89c>
   18f08:	add	r1, r0, #1
   18f0c:	str	r1, [r9, #28]
   18f10:	mov	r1, #10
   18f14:	strb	r1, [r0]
   18f18:	cmp	r7, #0
   18f1c:	movw	r7, #61523	; 0xf053
   18f20:	movt	r7, #1
   18f24:	beq	190ec <argp_help@@Base+0xa60>
   18f28:	movw	r0, #880	; 0x370
   18f2c:	ldr	r1, [r9, #24]
   18f30:	ldr	r2, [r9, #28]
   18f34:	mov	sl, r6
   18f38:	movt	r0, #3
   18f3c:	ldr	r6, [r0, #28]
   18f40:	ldr	r0, [r9, #16]
   18f44:	sub	r1, r2, r1
   18f48:	cmp	r1, r0
   18f4c:	bls	18f58 <argp_help@@Base+0x8cc>
   18f50:	mov	r0, r9
   18f54:	bl	1d86c <argp_failure@@Base+0x37c4>
   18f58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18f5c:	movw	r1, #61510	; 0xf046
   18f60:	ldr	r4, [r9, #12]
   18f64:	mov	r0, r9
   18f68:	mov	r2, r7
   18f6c:	str	r6, [r9, #12]
   18f70:	str	r5, [fp, #-88]	; 0xffffffa8
   18f74:	movt	r1, #1
   18f78:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   18f7c:	movw	r0, #880	; 0x370
   18f80:	ldr	r1, [r9, #24]
   18f84:	ldr	r2, [r9, #28]
   18f88:	movt	r0, #3
   18f8c:	ldr	r6, [r0, #28]
   18f90:	ldr	r0, [r9, #16]
   18f94:	sub	r1, r2, r1
   18f98:	cmp	r1, r0
   18f9c:	bls	18fa8 <argp_help@@Base+0x91c>
   18fa0:	mov	r0, r9
   18fa4:	bl	1d86c <argp_failure@@Base+0x37c4>
   18fa8:	ldr	r8, [r9, #4]
   18fac:	str	r6, [r9, #4]
   18fb0:	mov	r6, sl
   18fb4:	tst	sl, #2
   18fb8:	bne	18fd0 <argp_help@@Base+0x944>
   18fbc:	ldr	r0, [fp, #-108]	; 0xffffff94
   18fc0:	mov	r1, r9
   18fc4:	bl	1aadc <argp_failure@@Base+0xa34>
   18fc8:	orr	r6, r6, #2
   18fcc:	b	19034 <argp_help@@Base+0x9a8>
   18fd0:	ldr	r0, [fp, #-108]	; 0xffffff94
   18fd4:	ldr	r0, [r0, #4]
   18fd8:	cmp	r0, #0
   18fdc:	beq	19034 <argp_help@@Base+0x9a8>
   18fe0:	ldr	r0, [r9, #28]
   18fe4:	ldr	r1, [r9, #32]
   18fe8:	add	r2, r0, #12
   18fec:	cmp	r2, r1
   18ff0:	bls	1900c <argp_help@@Base+0x980>
   18ff4:	mov	r0, r9
   18ff8:	mov	r1, #12
   18ffc:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19000:	cmp	r0, #0
   19004:	beq	19034 <argp_help@@Base+0x9a8>
   19008:	ldr	r0, [r9, #28]
   1900c:	movw	r1, #62248	; 0xf328
   19010:	movt	r1, #1
   19014:	vldr	d16, [r1]
   19018:	movw	r1, #11822	; 0x2e2e
   1901c:	movt	r1, #23854	; 0x5d2e
   19020:	str	r1, [r0, #8]
   19024:	vst1.8	{d16}, [r0]
   19028:	ldr	r0, [r9, #28]
   1902c:	add	r0, r0, #12
   19030:	str	r0, [r9, #28]
   19034:	sub	sp, sp, #8
   19038:	str	r9, [sp]
   1903c:	sub	r2, fp, #88	; 0x58
   19040:	mov	r3, #1
   19044:	ldr	r0, [fp, #-104]	; 0xffffff98
   19048:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1904c:	bl	1aef8 <argp_failure@@Base+0xe50>
   19050:	add	sp, sp, #8
   19054:	mov	r7, r0
   19058:	ldr	r2, [r9, #24]
   1905c:	ldr	r0, [r9, #28]
   19060:	ldr	r1, [r9, #16]
   19064:	sub	r2, r0, r2
   19068:	cmp	r2, r1
   1906c:	bls	190a8 <argp_help@@Base+0xa1c>
   19070:	mov	r0, r9
   19074:	bl	1d86c <argp_failure@@Base+0x37c4>
   19078:	ldr	r2, [r9, #24]
   1907c:	ldr	r0, [r9, #28]
   19080:	ldr	r1, [r9, #16]
   19084:	sub	r2, r0, r2
   19088:	cmp	r2, r1
   1908c:	str	r4, [r9, #12]
   19090:	bhi	190b4 <argp_help@@Base+0xa28>
   19094:	str	r8, [r9, #4]
   19098:	ldr	r1, [r9, #32]
   1909c:	cmp	r0, r1
   190a0:	bcc	18f08 <argp_help@@Base+0x87c>
   190a4:	b	190d0 <argp_help@@Base+0xa44>
   190a8:	cmp	r2, r1
   190ac:	str	r4, [r9, #12]
   190b0:	bls	19094 <argp_help@@Base+0xa08>
   190b4:	mov	r0, r9
   190b8:	bl	1d86c <argp_failure@@Base+0x37c4>
   190bc:	ldr	r0, [r9, #28]
   190c0:	str	r8, [r9, #4]
   190c4:	ldr	r1, [r9, #32]
   190c8:	cmp	r0, r1
   190cc:	bcc	18f08 <argp_help@@Base+0x87c>
   190d0:	mov	r0, r9
   190d4:	mov	r1, #1
   190d8:	bl	1dde8 <argp_failure@@Base+0x3d40>
   190dc:	cmp	r0, #0
   190e0:	beq	18f18 <argp_help@@Base+0x88c>
   190e4:	ldr	r0, [r9, #28]
   190e8:	b	18f08 <argp_help@@Base+0x87c>
   190ec:	movw	sl, #880	; 0x370
   190f0:	mov	r5, #1
   190f4:	movt	sl, #3
   190f8:	tst	r6, #16
   190fc:	beq	19128 <argp_help@@Base+0xa9c>
   19100:	sub	sp, sp, #8
   19104:	mov	r0, #1
   19108:	mov	r2, #0
   1910c:	mov	r3, #0
   19110:	stm	sp, {r0, r9}
   19114:	ldr	r0, [fp, #-104]	; 0xffffff98
   19118:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1911c:	bl	1b20c <argp_failure@@Base+0x1164>
   19120:	add	sp, sp, #8
   19124:	orr	r5, r0, r5
   19128:	tst	r6, #4
   1912c:	bne	19b8c <argp_help@@Base+0x1500>
   19130:	tst	r6, #8
   19134:	beq	19bb0 <argp_help@@Base+0x1524>
   19138:	ldr	r0, [fp, #-108]	; 0xffffff94
   1913c:	ldr	r1, [r0, #4]
   19140:	cmp	r1, #0
   19144:	beq	19bb0 <argp_help@@Base+0x1524>
   19148:	str	r6, [fp, #-128]	; 0xffffff80
   1914c:	cmp	r5, #0
   19150:	ldr	r4, [fp, #-108]	; 0xffffff94
   19154:	beq	19194 <argp_help@@Base+0xb08>
   19158:	ldr	r0, [r9, #28]
   1915c:	ldr	r1, [r9, #32]
   19160:	cmp	r0, r1
   19164:	bcc	19180 <argp_help@@Base+0xaf4>
   19168:	mov	r0, r9
   1916c:	mov	r1, #1
   19170:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19174:	cmp	r0, #0
   19178:	beq	19190 <argp_help@@Base+0xb04>
   1917c:	ldr	r0, [r9, #28]
   19180:	add	r1, r0, #1
   19184:	str	r1, [r9, #28]
   19188:	mov	r1, #10
   1918c:	strb	r1, [r0]
   19190:	ldr	r1, [r4, #4]
   19194:	ldr	r5, [r4]
   19198:	mov	r0, #0
   1919c:	cmp	r1, #0
   191a0:	str	r0, [fp, #-44]	; 0xffffffd4
   191a4:	str	r0, [fp, #-48]	; 0xffffffd0
   191a8:	str	r0, [fp, #-40]	; 0xffffffd8
   191ac:	beq	19ccc <argp_help@@Base+0x1640>
   191b0:	add	r0, r9, #28
   191b4:	str	r0, [fp, #-100]	; 0xffffff9c
   191b8:	b	191d4 <argp_help@@Base+0xb48>
   191bc:	ldr	r1, [fp, #-116]	; 0xffffff8c
   191c0:	ldr	r0, [fp, #-120]	; 0xffffff88
   191c4:	add	r5, r5, #28
   191c8:	subs	r1, r1, #1
   191cc:	str	r0, [r9, #12]
   191d0:	beq	19cb8 <argp_help@@Base+0x162c>
   191d4:	ldr	r0, [r5, #8]
   191d8:	str	r1, [fp, #-116]	; 0xffffff8c
   191dc:	ldr	r1, [r9, #24]
   191e0:	ldr	r2, [r9, #28]
   191e4:	ldr	r4, [r5]
   191e8:	str	r0, [fp, #-92]	; 0xffffffa4
   191ec:	ldr	r0, [r9, #16]
   191f0:	sub	r1, r2, r1
   191f4:	cmp	r1, r0
   191f8:	bls	19204 <argp_help@@Base+0xb78>
   191fc:	mov	r0, r9
   19200:	bl	1d86c <argp_failure@@Base+0x37c4>
   19204:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19208:	mov	r7, #0
   1920c:	ldr	r1, [r9, #12]
   19210:	ldr	r2, [r9, #4]
   19214:	mov	r8, r4
   19218:	str	r7, [r9, #4]
   1921c:	str	r0, [fp, #-72]	; 0xffffffb8
   19220:	mov	r0, #1
   19224:	str	r1, [fp, #-120]	; 0xffffff88
   19228:	str	r2, [fp, #-124]	; 0xffffff84
   1922c:	str	r0, [fp, #-76]	; 0xffffffb4
   19230:	sub	r0, fp, #48	; 0x30
   19234:	str	r0, [fp, #-80]	; 0xffffffb0
   19238:	str	r9, [fp, #-84]	; 0xffffffac
   1923c:	str	r5, [fp, #-88]	; 0xffffffa8
   19240:	ldrb	r0, [r4, #12]
   19244:	tst	r0, #8
   19248:	bne	19290 <argp_help@@Base+0xc04>
   1924c:	ldr	r0, [r5, #4]
   19250:	cmp	r0, #0
   19254:	beq	19290 <argp_help@@Base+0xc04>
   19258:	add	r1, r4, #12
   1925c:	ldr	r2, [r1, #-12]
   19260:	cmp	r2, #0
   19264:	bne	19280 <argp_help@@Base+0xbf4>
   19268:	add	r1, r1, #24
   1926c:	subs	r0, r0, #1
   19270:	beq	19290 <argp_help@@Base+0xc04>
   19274:	ldr	r2, [r1, #-12]
   19278:	cmp	r2, #0
   1927c:	beq	19268 <argp_help@@Base+0xbdc>
   19280:	ldrb	r2, [r1]
   19284:	tst	r2, #2
   19288:	bne	19268 <argp_help@@Base+0xbdc>
   1928c:	mov	r7, #1
   19290:	ldr	r1, [r9, #24]
   19294:	ldr	r2, [r9, #28]
   19298:	ldr	r0, [r9, #16]
   1929c:	ldr	r4, [sl, #8]
   192a0:	sub	r1, r2, r1
   192a4:	cmp	r1, r0
   192a8:	bls	192b4 <argp_help@@Base+0xc28>
   192ac:	mov	r0, r9
   192b0:	bl	1d86c <argp_failure@@Base+0x37c4>
   192b4:	str	r4, [r9, #12]
   192b8:	mov	r4, r8
   192bc:	str	r5, [fp, #-112]	; 0xffffff90
   192c0:	ldr	r6, [r5, #4]
   192c4:	cmp	r6, #0
   192c8:	beq	195cc <argp_help@@Base+0xf40>
   192cc:	cmp	r7, #0
   192d0:	beq	19470 <argp_help@@Base+0xde4>
   192d4:	add	r7, r4, #12
   192d8:	ldr	r5, [r7]
   192dc:	tst	r5, #8
   192e0:	bne	192ec <argp_help@@Base+0xc60>
   192e4:	b	19304 <argp_help@@Base+0xc78>
   192e8:	mov	r4, r8
   192ec:	add	r7, r7, #24
   192f0:	subs	r6, r6, #1
   192f4:	beq	195cc <argp_help@@Base+0xf40>
   192f8:	ldr	r5, [r7]
   192fc:	tst	r5, #8
   19300:	bne	192ec <argp_help@@Base+0xc60>
   19304:	ldr	r4, [r7, #-8]
   19308:	sub	r0, r4, #1
   1930c:	cmp	r0, #254	; 0xfe
   19310:	bhi	192e8 <argp_help@@Base+0xc5c>
   19314:	bl	11cf0 <__ctype_b_loc@plt>
   19318:	ldr	r0, [r0]
   1931c:	add	r0, r0, r4, lsl #1
   19320:	ldrb	r0, [r0, #1]
   19324:	tst	r0, #64	; 0x40
   19328:	bne	19340 <argp_help@@Base+0xcb4>
   1932c:	mov	r4, r8
   19330:	add	r7, r7, #24
   19334:	subs	r6, r6, #1
   19338:	bne	192f8 <argp_help@@Base+0xc6c>
   1933c:	b	195cc <argp_help@@Base+0xf40>
   19340:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19344:	ldrb	r0, [r0]
   19348:	cmp	r4, r0
   1934c:	bne	19420 <argp_help@@Base+0xd94>
   19350:	tst	r5, #2
   19354:	mov	r4, r8
   19358:	bne	19454 <argp_help@@Base+0xdc8>
   1935c:	ldr	r0, [sl, #8]
   19360:	sub	r1, fp, #88	; 0x58
   19364:	bl	1bcf4 <argp_failure@@Base+0x1c4c>
   19368:	ldr	r0, [r9, #28]
   1936c:	ldr	r1, [r9, #32]
   19370:	cmp	r0, r1
   19374:	bcc	19394 <argp_help@@Base+0xd08>
   19378:	mov	r0, r9
   1937c:	mov	r1, #1
   19380:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19384:	cmp	r0, #0
   19388:	beq	193a8 <argp_help@@Base+0xd1c>
   1938c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19390:	ldr	r0, [r0]
   19394:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19398:	add	r1, r0, #1
   1939c:	str	r1, [r2]
   193a0:	mov	r1, #45	; 0x2d
   193a4:	strb	r1, [r0]
   193a8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   193ac:	ldr	r0, [r9, #28]
   193b0:	ldr	r1, [r9, #32]
   193b4:	ldrb	r5, [r2]
   193b8:	cmp	r0, r1
   193bc:	bcc	193dc <argp_help@@Base+0xd50>
   193c0:	mov	r0, r9
   193c4:	mov	r1, #1
   193c8:	bl	1dde8 <argp_failure@@Base+0x3d40>
   193cc:	cmp	r0, #0
   193d0:	beq	193ec <argp_help@@Base+0xd60>
   193d4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   193d8:	ldr	r0, [r0]
   193dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   193e0:	add	r1, r0, #1
   193e4:	str	r1, [r2]
   193e8:	strb	r5, [r0]
   193ec:	ldr	r0, [sl]
   193f0:	ldr	r2, [r4, #8]
   193f4:	cmp	r0, #0
   193f8:	beq	19434 <argp_help@@Base+0xda8>
   193fc:	cmp	r2, #0
   19400:	beq	19454 <argp_help@@Base+0xdc8>
   19404:	ldrb	r0, [r4, #12]
   19408:	tst	r0, #1
   1940c:	bne	19444 <argp_help@@Base+0xdb8>
   19410:	movw	r1, #61729	; 0xf121
   19414:	mov	r0, r9
   19418:	movt	r1, #1
   1941c:	b	19450 <argp_help@@Base+0xdc4>
   19420:	mov	r4, r8
   19424:	add	r7, r7, #24
   19428:	subs	r6, r6, #1
   1942c:	bne	192f8 <argp_help@@Base+0xc6c>
   19430:	b	195cc <argp_help@@Base+0xf40>
   19434:	cmp	r2, #0
   19438:	movne	r0, #1
   1943c:	strne	r0, [fp, #-40]	; 0xffffffd8
   19440:	b	19454 <argp_help@@Base+0xdc8>
   19444:	movw	r1, #58814	; 0xe5be
   19448:	mov	r0, r9
   1944c:	movt	r1, #1
   19450:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   19454:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19458:	add	r0, r0, #1
   1945c:	str	r0, [fp, #-92]	; 0xffffffa4
   19460:	add	r7, r7, #24
   19464:	subs	r6, r6, #1
   19468:	bne	192f8 <argp_help@@Base+0xc6c>
   1946c:	b	195cc <argp_help@@Base+0xf40>
   19470:	add	r7, r4, #12
   19474:	ldr	r5, [r7]
   19478:	tst	r5, #8
   1947c:	bne	1948c <argp_help@@Base+0xe00>
   19480:	b	194a4 <argp_help@@Base+0xe18>
   19484:	movw	sl, #880	; 0x370
   19488:	movt	sl, #3
   1948c:	add	r7, r7, #24
   19490:	subs	r6, r6, #1
   19494:	beq	195cc <argp_help@@Base+0xf40>
   19498:	ldr	r5, [r7]
   1949c:	tst	r5, #8
   194a0:	bne	1948c <argp_help@@Base+0xe00>
   194a4:	ldr	sl, [r7, #-8]
   194a8:	sub	r0, sl, #1
   194ac:	cmp	r0, #254	; 0xfe
   194b0:	bhi	19484 <argp_help@@Base+0xdf8>
   194b4:	bl	11cf0 <__ctype_b_loc@plt>
   194b8:	ldr	r0, [r0]
   194bc:	add	r0, r0, sl, lsl #1
   194c0:	ldrb	r0, [r0, #1]
   194c4:	tst	r0, #64	; 0x40
   194c8:	beq	19484 <argp_help@@Base+0xdf8>
   194cc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   194d0:	ldrb	r0, [r0]
   194d4:	cmp	sl, r0
   194d8:	bne	19484 <argp_help@@Base+0xdf8>
   194dc:	movw	sl, #880	; 0x370
   194e0:	tst	r5, #2
   194e4:	movt	sl, #3
   194e8:	bne	195b4 <argp_help@@Base+0xf28>
   194ec:	ldr	r0, [sl, #8]
   194f0:	sub	r1, fp, #88	; 0x58
   194f4:	bl	1bcf4 <argp_failure@@Base+0x1c4c>
   194f8:	ldr	r0, [r9, #28]
   194fc:	ldr	r1, [r9, #32]
   19500:	cmp	r0, r1
   19504:	bcc	19524 <argp_help@@Base+0xe98>
   19508:	mov	r0, r9
   1950c:	mov	r1, #1
   19510:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19514:	cmp	r0, #0
   19518:	beq	19538 <argp_help@@Base+0xeac>
   1951c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19520:	ldr	r0, [r0]
   19524:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19528:	add	r1, r0, #1
   1952c:	str	r1, [r2]
   19530:	mov	r1, #45	; 0x2d
   19534:	strb	r1, [r0]
   19538:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1953c:	ldr	r0, [r9, #28]
   19540:	ldr	r1, [r9, #32]
   19544:	ldrb	r5, [r2]
   19548:	cmp	r0, r1
   1954c:	bcc	1956c <argp_help@@Base+0xee0>
   19550:	mov	r0, r9
   19554:	mov	r1, #1
   19558:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1955c:	cmp	r0, #0
   19560:	beq	1957c <argp_help@@Base+0xef0>
   19564:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19568:	ldr	r0, [r0]
   1956c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19570:	add	r1, r0, #1
   19574:	str	r1, [r2]
   19578:	strb	r5, [r0]
   1957c:	ldr	r2, [r4, #8]
   19580:	cmp	r2, #0
   19584:	beq	195b4 <argp_help@@Base+0xf28>
   19588:	ldrb	r0, [r4, #12]
   1958c:	tst	r0, #1
   19590:	bne	195a4 <argp_help@@Base+0xf18>
   19594:	movw	r1, #61729	; 0xf121
   19598:	mov	r0, r9
   1959c:	movt	r1, #1
   195a0:	b	195b0 <argp_help@@Base+0xf24>
   195a4:	movw	r1, #58814	; 0xe5be
   195a8:	mov	r0, r9
   195ac:	movt	r1, #1
   195b0:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   195b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   195b8:	add	r0, r0, #1
   195bc:	str	r0, [fp, #-92]	; 0xffffffa4
   195c0:	add	r7, r7, #24
   195c4:	subs	r6, r6, #1
   195c8:	bne	19498 <argp_help@@Base+0xe0c>
   195cc:	ldrb	r0, [r4, #12]
   195d0:	tst	r0, #8
   195d4:	bne	196a4 <argp_help@@Base+0x1018>
   195d8:	ldr	r1, [r9, #24]
   195dc:	ldr	r2, [r9, #28]
   195e0:	ldr	r0, [r9, #16]
   195e4:	ldr	r4, [sl, #12]
   195e8:	sub	r1, r2, r1
   195ec:	cmp	r1, r0
   195f0:	bls	195fc <argp_help@@Base+0xf70>
   195f4:	mov	r0, r9
   195f8:	bl	1d86c <argp_failure@@Base+0x37c4>
   195fc:	ldr	r0, [fp, #-112]	; 0xffffff90
   19600:	str	r4, [r9, #12]
   19604:	mov	r4, r8
   19608:	ldr	r5, [r0, #4]
   1960c:	cmp	r5, #0
   19610:	beq	1978c <argp_help@@Base+0x1100>
   19614:	add	r6, r4, #12
   19618:	ldr	r0, [r6, #-12]
   1961c:	cmp	r0, #0
   19620:	bne	19650 <argp_help@@Base+0xfc4>
   19624:	b	19638 <argp_help@@Base+0xfac>
   19628:	movw	r1, #62230	; 0xf316
   1962c:	mov	r0, r9
   19630:	movt	r1, #1
   19634:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   19638:	add	r6, r6, #24
   1963c:	subs	r5, r5, #1
   19640:	beq	1978c <argp_help@@Base+0x1100>
   19644:	ldr	r0, [r6, #-12]
   19648:	cmp	r0, #0
   1964c:	beq	19638 <argp_help@@Base+0xfac>
   19650:	ldrb	r0, [r6]
   19654:	tst	r0, #2
   19658:	bne	19638 <argp_help@@Base+0xfac>
   1965c:	ldr	r0, [sl, #12]
   19660:	sub	r1, fp, #88	; 0x58
   19664:	bl	1bcf4 <argp_failure@@Base+0x1c4c>
   19668:	ldr	r2, [r6, #-12]
   1966c:	movw	r1, #62225	; 0xf311
   19670:	mov	r0, r9
   19674:	movt	r1, #1
   19678:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   1967c:	ldr	r2, [r4, #8]
   19680:	cmp	r2, #0
   19684:	beq	19638 <argp_help@@Base+0xfac>
   19688:	ldrb	r0, [r4, #12]
   1968c:	tst	r0, #1
   19690:	beq	19628 <argp_help@@Base+0xf9c>
   19694:	movw	r1, #62234	; 0xf31a
   19698:	mov	r0, r9
   1969c:	movt	r1, #1
   196a0:	b	19634 <argp_help@@Base+0xfa8>
   196a4:	ldr	r1, [r9, #24]
   196a8:	ldr	r2, [r9, #28]
   196ac:	ldr	r0, [r9, #16]
   196b0:	ldr	r4, [sl, #16]
   196b4:	sub	r1, r2, r1
   196b8:	cmp	r1, r0
   196bc:	bls	196c8 <argp_help@@Base+0x103c>
   196c0:	mov	r0, r9
   196c4:	bl	1d86c <argp_failure@@Base+0x37c4>
   196c8:	ldr	r0, [fp, #-112]	; 0xffffff90
   196cc:	str	r4, [r9, #12]
   196d0:	mov	r4, r8
   196d4:	ldr	r6, [r0, #4]
   196d8:	cmp	r6, #0
   196dc:	beq	1978c <argp_help@@Base+0x1100>
   196e0:	add	r8, r4, #12
   196e4:	ldr	r0, [r8, #-12]
   196e8:	cmp	r0, #0
   196ec:	bne	19728 <argp_help@@Base+0x109c>
   196f0:	b	19710 <argp_help@@Base+0x1084>
   196f4:	mov	r1, r5
   196f8:	mov	r2, r7
   196fc:	bl	11b64 <memcpy@plt>
   19700:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19704:	ldr	r0, [r1]
   19708:	add	r0, r0, r7
   1970c:	str	r0, [r1]
   19710:	add	r8, r8, #24
   19714:	subs	r6, r6, #1
   19718:	beq	1978c <argp_help@@Base+0x1100>
   1971c:	ldr	r0, [r8, #-12]
   19720:	cmp	r0, #0
   19724:	beq	19710 <argp_help@@Base+0x1084>
   19728:	ldrb	r0, [r8]
   1972c:	tst	r0, #2
   19730:	bne	19710 <argp_help@@Base+0x1084>
   19734:	ldr	r0, [sl, #16]
   19738:	sub	r1, fp, #88	; 0x58
   1973c:	bl	1bcf4 <argp_failure@@Base+0x1c4c>
   19740:	ldr	r5, [r8, #-12]
   19744:	mov	r0, r5
   19748:	bl	11d2c <strlen@plt>
   1974c:	cmp	r0, #0
   19750:	beq	19710 <argp_help@@Base+0x1084>
   19754:	mov	r7, r0
   19758:	ldr	r0, [r9, #28]
   1975c:	ldr	r1, [r9, #32]
   19760:	add	r2, r0, r7
   19764:	cmp	r2, r1
   19768:	bls	196f4 <argp_help@@Base+0x1068>
   1976c:	mov	r0, r9
   19770:	mov	r1, r7
   19774:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19778:	cmp	r0, #0
   1977c:	beq	19710 <argp_help@@Base+0x1084>
   19780:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19784:	ldr	r0, [r0]
   19788:	b	196f4 <argp_help@@Base+0x1068>
   1978c:	ldr	r1, [r9, #24]
   19790:	ldr	r2, [r9, #28]
   19794:	ldr	r0, [r9, #16]
   19798:	sub	r1, r2, r1
   1979c:	cmp	r1, r0
   197a0:	bls	197ac <argp_help@@Base+0x1120>
   197a4:	mov	r0, r9
   197a8:	bl	1d86c <argp_failure@@Base+0x37c4>
   197ac:	mov	r0, #0
   197b0:	ldr	r5, [fp, #-112]	; 0xffffff90
   197b4:	str	r0, [r9, #4]
   197b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   197bc:	cmp	r0, #0
   197c0:	beq	1981c <argp_help@@Base+0x1190>
   197c4:	ldrb	r0, [r4, #12]
   197c8:	mov	r6, r4
   197cc:	tst	r0, #8
   197d0:	bne	197fc <argp_help@@Base+0x1170>
   197d4:	ldr	r4, [r6, #4]
   197d8:	sub	r0, r4, #1
   197dc:	cmp	r0, #254	; 0xfe
   197e0:	bhi	197fc <argp_help@@Base+0x1170>
   197e4:	bl	11cf0 <__ctype_b_loc@plt>
   197e8:	ldr	r0, [r0]
   197ec:	add	r0, r0, r4, lsl #1
   197f0:	ldrb	r0, [r0, #1]
   197f4:	tst	r0, #64	; 0x40
   197f8:	bne	19b30 <argp_help@@Base+0x14a4>
   197fc:	ldr	r0, [r6]
   19800:	cmp	r0, #0
   19804:	bne	19b30 <argp_help@@Base+0x14a4>
   19808:	ldr	r1, [r5, #20]
   1980c:	ldr	r0, [r6, #16]
   19810:	sub	r2, fp, #88	; 0x58
   19814:	bl	1bf00 <argp_failure@@Base+0x1e58>
   19818:	b	19b2c <argp_help@@Base+0x14a0>
   1981c:	ldr	r6, [r5, #20]
   19820:	ldr	r5, [r4, #16]
   19824:	cmp	r6, #0
   19828:	mov	r8, r5
   1982c:	beq	19868 <argp_help@@Base+0x11dc>
   19830:	ldr	r0, [r6, #20]
   19834:	mov	r8, r5
   19838:	cmp	r0, #0
   1983c:	beq	19868 <argp_help@@Base+0x11dc>
   19840:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19844:	ldr	r7, [r4, #4]
   19848:	mov	r0, r6
   1984c:	bl	177d0 <argp_parse@@Base+0xd2c>
   19850:	ldr	r3, [r6, #20]
   19854:	mov	r2, r0
   19858:	mov	r0, r7
   1985c:	mov	r1, r5
   19860:	blx	r3
   19864:	mov	r8, r0
   19868:	cmp	r8, #0
   1986c:	beq	19ac0 <argp_help@@Base+0x1434>
   19870:	ldrb	r0, [r8]
   19874:	cmp	r0, #0
   19878:	beq	19ab0 <argp_help@@Base+0x1424>
   1987c:	ldr	r1, [r9, #24]
   19880:	ldr	r2, [r9, #28]
   19884:	ldr	r0, [r9, #16]
   19888:	str	r5, [fp, #-92]	; 0xffffffa4
   1988c:	sub	r1, r2, r1
   19890:	cmp	r1, r0
   19894:	bls	198b0 <argp_help@@Base+0x1224>
   19898:	mov	r0, r9
   1989c:	bl	1d86c <argp_failure@@Base+0x37c4>
   198a0:	ldr	r1, [r9, #24]
   198a4:	ldr	r2, [r9, #28]
   198a8:	ldr	r0, [r9, #16]
   198ac:	sub	r1, r2, r1
   198b0:	ldr	r6, [sl, #20]
   198b4:	ldr	r4, [r9, #20]
   198b8:	cmp	r1, r0
   198bc:	mov	r5, r6
   198c0:	bls	198e0 <argp_help@@Base+0x1254>
   198c4:	mov	r0, r9
   198c8:	bl	1d86c <argp_failure@@Base+0x37c4>
   198cc:	ldr	r1, [r9, #24]
   198d0:	ldr	r2, [r9, #28]
   198d4:	ldr	r5, [sl, #20]
   198d8:	ldr	r0, [r9, #16]
   198dc:	sub	r1, r2, r1
   198e0:	bic	r7, r4, r4, asr #31
   198e4:	str	r6, [r9, #4]
   198e8:	cmp	r1, r0
   198ec:	mov	r6, r5
   198f0:	bls	19900 <argp_help@@Base+0x1274>
   198f4:	mov	r0, r9
   198f8:	bl	1d86c <argp_failure@@Base+0x37c4>
   198fc:	ldr	r6, [sl, #20]
   19900:	add	r0, r6, #3
   19904:	str	r5, [r9, #12]
   19908:	cmp	r7, r0
   1990c:	bls	19968 <argp_help@@Base+0x12dc>
   19910:	ldr	r0, [r9, #28]
   19914:	ldr	r1, [r9, #32]
   19918:	ldr	r5, [fp, #-92]	; 0xffffffa4
   1991c:	cmp	r0, r1
   19920:	bcc	19940 <argp_help@@Base+0x12b4>
   19924:	mov	r0, r9
   19928:	mov	r1, #1
   1992c:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19930:	cmp	r0, #0
   19934:	beq	19a50 <argp_help@@Base+0x13c4>
   19938:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1993c:	ldr	r0, [r0]
   19940:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19944:	add	r1, r0, #1
   19948:	str	r1, [r2]
   1994c:	mov	r1, #10
   19950:	strb	r1, [r0]
   19954:	mov	r0, r8
   19958:	bl	11d2c <strlen@plt>
   1995c:	cmp	r0, #0
   19960:	bne	19a60 <argp_help@@Base+0x13d4>
   19964:	b	19ab0 <argp_help@@Base+0x1424>
   19968:	cmp	r7, r6
   1996c:	bcs	199fc <argp_help@@Base+0x1370>
   19970:	ldr	r1, [r9, #24]
   19974:	ldr	r2, [r9, #28]
   19978:	ldr	r0, [r9, #16]
   1997c:	ldr	r5, [fp, #-92]	; 0xffffffa4
   19980:	sub	r1, r2, r1
   19984:	cmp	r1, r0
   19988:	bls	19994 <argp_help@@Base+0x1308>
   1998c:	mov	r0, r9
   19990:	bl	1d86c <argp_failure@@Base+0x37c4>
   19994:	ldr	r0, [r9, #20]
   19998:	cmp	r0, #0
   1999c:	subgt	r6, r6, r0
   199a0:	cmp	r6, #1
   199a4:	bge	199d0 <argp_help@@Base+0x1344>
   199a8:	b	19a50 <argp_help@@Base+0x13c4>
   199ac:	ldr	r0, [fp, #-100]	; 0xffffff9c
   199b0:	ldr	r0, [r0]
   199b4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   199b8:	add	r1, r0, #1
   199bc:	str	r1, [r2]
   199c0:	mov	r1, #32
   199c4:	strb	r1, [r0]
   199c8:	cmp	r6, #0
   199cc:	ble	19a50 <argp_help@@Base+0x13c4>
   199d0:	ldr	r0, [r9, #28]
   199d4:	ldr	r1, [r9, #32]
   199d8:	sub	r6, r6, #1
   199dc:	cmp	r0, r1
   199e0:	bcc	199b4 <argp_help@@Base+0x1328>
   199e4:	mov	r0, r9
   199e8:	mov	r1, #1
   199ec:	bl	1dde8 <argp_failure@@Base+0x3d40>
   199f0:	cmp	r0, #0
   199f4:	bne	199ac <argp_help@@Base+0x1320>
   199f8:	b	199c8 <argp_help@@Base+0x133c>
   199fc:	ldr	r0, [r9, #28]
   19a00:	ldr	r1, [r9, #32]
   19a04:	ldr	r5, [fp, #-92]	; 0xffffffa4
   19a08:	add	r2, r0, #3
   19a0c:	cmp	r2, r1
   19a10:	bls	19a30 <argp_help@@Base+0x13a4>
   19a14:	mov	r0, r9
   19a18:	mov	r1, #3
   19a1c:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19a20:	cmp	r0, #0
   19a24:	beq	19a50 <argp_help@@Base+0x13c4>
   19a28:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19a2c:	ldr	r0, [r0]
   19a30:	mov	r1, #32
   19a34:	strb	r1, [r0, #2]
   19a38:	movw	r1, #8224	; 0x2020
   19a3c:	strh	r1, [r0]
   19a40:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19a44:	ldr	r0, [r1]
   19a48:	add	r0, r0, #3
   19a4c:	str	r0, [r1]
   19a50:	mov	r0, r8
   19a54:	bl	11d2c <strlen@plt>
   19a58:	cmp	r0, #0
   19a5c:	beq	19ab0 <argp_help@@Base+0x1424>
   19a60:	mov	r6, r0
   19a64:	ldr	r0, [r9, #28]
   19a68:	ldr	r1, [r9, #32]
   19a6c:	add	r2, r0, r6
   19a70:	cmp	r2, r1
   19a74:	bls	19a94 <argp_help@@Base+0x1408>
   19a78:	mov	r0, r9
   19a7c:	mov	r1, r6
   19a80:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19a84:	cmp	r0, #0
   19a88:	beq	19ab0 <argp_help@@Base+0x1424>
   19a8c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19a90:	ldr	r0, [r0]
   19a94:	mov	r1, r8
   19a98:	mov	r2, r6
   19a9c:	bl	11b64 <memcpy@plt>
   19aa0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19aa4:	ldr	r0, [r1]
   19aa8:	add	r0, r0, r6
   19aac:	str	r0, [r1]
   19ab0:	cmp	r8, r5
   19ab4:	beq	19ac0 <argp_help@@Base+0x1434>
   19ab8:	mov	r0, r8
   19abc:	bl	17e80 <argp_parse@@Base+0x13dc>
   19ac0:	ldr	r2, [r9, #24]
   19ac4:	ldr	r0, [r9, #28]
   19ac8:	ldr	r1, [r9, #16]
   19acc:	sub	r2, r0, r2
   19ad0:	cmp	r2, r1
   19ad4:	bls	19ae4 <argp_help@@Base+0x1458>
   19ad8:	mov	r0, r9
   19adc:	bl	1d86c <argp_failure@@Base+0x37c4>
   19ae0:	ldr	r0, [r9, #28]
   19ae4:	mov	r1, #0
   19ae8:	ldr	r5, [fp, #-112]	; 0xffffff90
   19aec:	str	r1, [r9, #4]
   19af0:	ldr	r1, [r9, #32]
   19af4:	cmp	r0, r1
   19af8:	bcc	19b18 <argp_help@@Base+0x148c>
   19afc:	mov	r0, r9
   19b00:	mov	r1, #1
   19b04:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19b08:	cmp	r0, #0
   19b0c:	beq	19b2c <argp_help@@Base+0x14a0>
   19b10:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19b14:	ldr	r0, [r0]
   19b18:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19b1c:	add	r1, r0, #1
   19b20:	str	r1, [r2]
   19b24:	mov	r1, #10
   19b28:	strb	r1, [r0]
   19b2c:	str	r5, [fp, #-48]	; 0xffffffd0
   19b30:	ldr	r1, [r9, #24]
   19b34:	ldr	r2, [r9, #28]
   19b38:	ldr	r0, [r9, #16]
   19b3c:	sub	r1, r2, r1
   19b40:	cmp	r1, r0
   19b44:	bls	19b60 <argp_help@@Base+0x14d4>
   19b48:	mov	r0, r9
   19b4c:	bl	1d86c <argp_failure@@Base+0x37c4>
   19b50:	ldr	r1, [r9, #24]
   19b54:	ldr	r2, [r9, #28]
   19b58:	ldr	r0, [r9, #16]
   19b5c:	sub	r1, r2, r1
   19b60:	ldr	r2, [fp, #-124]	; 0xffffff84
   19b64:	cmp	r1, r0
   19b68:	str	r2, [r9, #4]
   19b6c:	bls	191bc <argp_help@@Base+0xb30>
   19b70:	mov	r0, r9
   19b74:	bl	1d86c <argp_failure@@Base+0x37c4>
   19b78:	b	191bc <argp_help@@Base+0xb30>
   19b7c:	mov	r0, r5
   19b80:	sub	sp, fp, #28
   19b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b88:	b	11c24 <funlockfile@plt>
   19b8c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19b90:	movw	r1, #61530	; 0xf05a
   19b94:	mov	r0, r9
   19b98:	movt	r1, #1
   19b9c:	mov	r3, r2
   19ba0:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   19ba4:	mov	r5, #1
   19ba8:	tst	r6, #8
   19bac:	bne	19138 <argp_help@@Base+0xaac>
   19bb0:	tst	r6, #32
   19bb4:	beq	19be0 <argp_help@@Base+0x1554>
   19bb8:	sub	sp, sp, #8
   19bbc:	mov	r0, #0
   19bc0:	mov	r2, #1
   19bc4:	mov	r3, r5
   19bc8:	stm	sp, {r0, r9}
   19bcc:	ldr	r0, [fp, #-104]	; 0xffffff98
   19bd0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19bd4:	bl	1b20c <argp_failure@@Base+0x1164>
   19bd8:	add	sp, sp, #8
   19bdc:	orr	r5, r0, r5
   19be0:	tst	r6, #64	; 0x40
   19be4:	beq	19c50 <argp_help@@Base+0x15c4>
   19be8:	movw	r6, #1560	; 0x618
   19bec:	movt	r6, #3
   19bf0:	ldr	r0, [r6]
   19bf4:	cmp	r0, #0
   19bf8:	beq	19c50 <argp_help@@Base+0x15c4>
   19bfc:	cmp	r5, #0
   19c00:	beq	19c3c <argp_help@@Base+0x15b0>
   19c04:	ldr	r0, [r9, #28]
   19c08:	ldr	r1, [r9, #32]
   19c0c:	cmp	r0, r1
   19c10:	bcc	19c2c <argp_help@@Base+0x15a0>
   19c14:	mov	r0, r9
   19c18:	mov	r1, #1
   19c1c:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19c20:	cmp	r0, #0
   19c24:	beq	19c3c <argp_help@@Base+0x15b0>
   19c28:	ldr	r0, [r9, #28]
   19c2c:	add	r1, r0, #1
   19c30:	str	r1, [r9, #28]
   19c34:	mov	r1, #10
   19c38:	strb	r1, [r0]
   19c3c:	ldr	r2, [r6]
   19c40:	movw	r1, #61585	; 0xf091
   19c44:	mov	r0, r9
   19c48:	movt	r1, #1
   19c4c:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   19c50:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19c54:	bl	11c24 <funlockfile@plt>
   19c58:	ldr	r5, [fp, #-108]	; 0xffffff94
   19c5c:	cmp	r5, #0
   19c60:	beq	19ca8 <argp_help@@Base+0x161c>
   19c64:	ldr	r0, [r5, #12]
   19c68:	cmp	r0, #0
   19c6c:	beq	19c84 <argp_help@@Base+0x15f8>
   19c70:	ldr	r4, [r0, #24]
   19c74:	bl	17e80 <argp_parse@@Base+0x13dc>
   19c78:	cmp	r4, #0
   19c7c:	mov	r0, r4
   19c80:	bne	19c70 <argp_help@@Base+0x15e4>
   19c84:	ldr	r0, [r5, #4]
   19c88:	cmp	r0, #0
   19c8c:	beq	19ca0 <argp_help@@Base+0x1614>
   19c90:	ldr	r0, [r5]
   19c94:	bl	17e80 <argp_parse@@Base+0x13dc>
   19c98:	ldr	r0, [r5, #8]
   19c9c:	bl	17e80 <argp_parse@@Base+0x13dc>
   19ca0:	mov	r0, r5
   19ca4:	bl	17e80 <argp_parse@@Base+0x13dc>
   19ca8:	mov	r0, r9
   19cac:	bl	1d828 <argp_failure@@Base+0x3780>
   19cb0:	sub	sp, fp, #28
   19cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19cbc:	cmp	r0, #0
   19cc0:	ldrne	r0, [sl, #4]
   19cc4:	cmpne	r0, #0
   19cc8:	bne	19d04 <argp_help@@Base+0x1678>
   19ccc:	ldr	r6, [fp, #-128]	; 0xffffff80
   19cd0:	mov	r5, #1
   19cd4:	tst	r6, #32
   19cd8:	bne	19bb8 <argp_help@@Base+0x152c>
   19cdc:	b	19be0 <argp_help@@Base+0x1554>
   19ce0:	ldr	r6, [fp, #-128]	; 0xffffff80
   19ce4:	movw	sl, #880	; 0x370
   19ce8:	movt	sl, #3
   19cec:	tst	r6, #3
   19cf0:	bne	18ecc <argp_help@@Base+0x840>
   19cf4:	mov	r5, #0
   19cf8:	tst	r6, #16
   19cfc:	bne	19100 <argp_help@@Base+0xa74>
   19d00:	b	19128 <argp_help@@Base+0xa9c>
   19d04:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19d08:	movw	r5, #62109	; 0xf29d
   19d0c:	movt	r5, #1
   19d10:	cmp	r0, #0
   19d14:	beq	19d64 <argp_help@@Base+0x16d8>
   19d18:	ldr	r6, [r0]
   19d1c:	cmp	r6, #0
   19d20:	beq	19d64 <argp_help@@Base+0x16d8>
   19d24:	ldr	r0, [r6, #20]
   19d28:	cmp	r0, #0
   19d2c:	beq	19d64 <argp_help@@Base+0x16d8>
   19d30:	ldr	r1, [fp, #-96]	; 0xffffffa0
   19d34:	mov	r0, r6
   19d38:	bl	177d0 <argp_parse@@Base+0xd2c>
   19d3c:	ldr	r3, [r6, #20]
   19d40:	movw	r1, #62109	; 0xf29d
   19d44:	mov	r2, r0
   19d48:	movw	r0, #5
   19d4c:	movt	r0, #512	; 0x200
   19d50:	movt	r1, #1
   19d54:	blx	r3
   19d58:	mov	r5, r0
   19d5c:	cmp	r0, #0
   19d60:	beq	19ccc <argp_help@@Base+0x1640>
   19d64:	ldrb	r0, [r5]
   19d68:	cmp	r0, #0
   19d6c:	beq	19e50 <argp_help@@Base+0x17c4>
   19d70:	ldr	r0, [r9, #28]
   19d74:	ldr	r1, [r9, #32]
   19d78:	cmp	r0, r1
   19d7c:	bcc	19d9c <argp_help@@Base+0x1710>
   19d80:	mov	r0, r9
   19d84:	mov	r1, #1
   19d88:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19d8c:	cmp	r0, #0
   19d90:	beq	19db0 <argp_help@@Base+0x1724>
   19d94:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19d98:	ldr	r0, [r0]
   19d9c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19da0:	add	r1, r0, #1
   19da4:	str	r1, [r2]
   19da8:	mov	r1, #10
   19dac:	strb	r1, [r0]
   19db0:	mov	r0, r5
   19db4:	bl	11d2c <strlen@plt>
   19db8:	cmp	r0, #0
   19dbc:	beq	19e10 <argp_help@@Base+0x1784>
   19dc0:	mov	r6, r0
   19dc4:	ldr	r0, [r9, #28]
   19dc8:	ldr	r1, [r9, #32]
   19dcc:	add	r2, r0, r6
   19dd0:	cmp	r2, r1
   19dd4:	bls	19df4 <argp_help@@Base+0x1768>
   19dd8:	mov	r0, r9
   19ddc:	mov	r1, r6
   19de0:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19de4:	cmp	r0, #0
   19de8:	beq	19e10 <argp_help@@Base+0x1784>
   19dec:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19df0:	ldr	r0, [r0]
   19df4:	mov	r1, r5
   19df8:	mov	r2, r6
   19dfc:	bl	11b64 <memcpy@plt>
   19e00:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19e04:	ldr	r0, [r1]
   19e08:	add	r0, r0, r6
   19e0c:	str	r0, [r1]
   19e10:	ldr	r0, [r9, #28]
   19e14:	ldr	r1, [r9, #32]
   19e18:	cmp	r0, r1
   19e1c:	bcc	19e3c <argp_help@@Base+0x17b0>
   19e20:	mov	r0, r9
   19e24:	mov	r1, #1
   19e28:	bl	1dde8 <argp_failure@@Base+0x3d40>
   19e2c:	cmp	r0, #0
   19e30:	beq	19e50 <argp_help@@Base+0x17c4>
   19e34:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19e38:	ldr	r0, [r0]
   19e3c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19e40:	add	r1, r0, #1
   19e44:	str	r1, [r2]
   19e48:	mov	r1, #10
   19e4c:	strb	r1, [r0]
   19e50:	movw	r0, #62109	; 0xf29d
   19e54:	movt	r0, #1
   19e58:	cmp	r5, r0
   19e5c:	beq	19ccc <argp_help@@Base+0x1640>
   19e60:	mov	r0, r5
   19e64:	bl	17e80 <argp_parse@@Base+0x13dc>
   19e68:	ldr	r6, [fp, #-128]	; 0xffffff80
   19e6c:	mov	r5, #1
   19e70:	tst	r6, #32
   19e74:	bne	19bb8 <argp_help@@Base+0x152c>
   19e78:	b	19be0 <argp_help@@Base+0x1554>
   19e7c:	add	r2, r0, #112	; 0x70
   19e80:	b	18c84 <argp_help@@Base+0x5f8>

00019e84 <argp_state_help@@Base>:
   19e84:	push	{r4, r5, fp, lr}
   19e88:	add	fp, sp, #8
   19e8c:	sub	sp, sp, #8
   19e90:	mov	r4, r2
   19e94:	mov	r2, r1
   19e98:	cmp	r0, #0
   19e9c:	beq	19ee8 <argp_state_help@@Base+0x64>
   19ea0:	cmp	r2, #0
   19ea4:	beq	19f20 <argp_state_help@@Base+0x9c>
   19ea8:	ldr	r1, [r0, #16]
   19eac:	mov	r5, r0
   19eb0:	ands	r0, r1, #2
   19eb4:	bne	19f20 <argp_state_help@@Base+0x9c>
   19eb8:	ldr	r3, [r5, #40]	; 0x28
   19ebc:	ldr	r0, [r5]
   19ec0:	and	r1, r1, #64	; 0x40
   19ec4:	orr	r4, r4, r1, lsl #1
   19ec8:	mov	r1, r5
   19ecc:	str	r3, [sp]
   19ed0:	mov	r3, r4
   19ed4:	bl	186b8 <argp_help@@Base+0x2c>
   19ed8:	ldrb	r0, [r5, #16]
   19edc:	tst	r0, #32
   19ee0:	beq	19f10 <argp_state_help@@Base+0x8c>
   19ee4:	b	19f20 <argp_state_help@@Base+0x9c>
   19ee8:	cmp	r2, #0
   19eec:	beq	19f20 <argp_state_help@@Base+0x9c>
   19ef0:	movw	r0, #936	; 0x3a8
   19ef4:	mov	r1, #0
   19ef8:	mov	r3, r4
   19efc:	movt	r0, #3
   19f00:	ldr	r0, [r0]
   19f04:	str	r0, [sp]
   19f08:	mov	r0, #0
   19f0c:	bl	186b8 <argp_help@@Base+0x2c>
   19f10:	tst	r4, #256	; 0x100
   19f14:	bne	19f28 <argp_state_help@@Base+0xa4>
   19f18:	tst	r4, #512	; 0x200
   19f1c:	bne	19f38 <argp_state_help@@Base+0xb4>
   19f20:	sub	sp, fp, #8
   19f24:	pop	{r4, r5, fp, pc}
   19f28:	movw	r0, #932	; 0x3a4
   19f2c:	movt	r0, #3
   19f30:	ldr	r0, [r0]
   19f34:	bl	11d08 <exit@plt>
   19f38:	mov	r0, #0
   19f3c:	bl	11d08 <exit@plt>

00019f40 <argp_error@@Base>:
   19f40:	sub	sp, sp, #8
   19f44:	push	{r4, r5, r6, sl, fp, lr}
   19f48:	add	fp, sp, #16
   19f4c:	sub	sp, sp, #8
   19f50:	mov	r6, r1
   19f54:	mov	r4, r0
   19f58:	cmp	r0, #0
   19f5c:	str	r2, [fp, #8]
   19f60:	str	r3, [fp, #12]
   19f64:	beq	19f94 <argp_error@@Base+0x54>
   19f68:	ldrb	r0, [r4, #16]
   19f6c:	tst	r0, #2
   19f70:	bne	19f84 <argp_error@@Base+0x44>
   19f74:	add	r0, r4, #44	; 0x2c
   19f78:	ldr	r5, [r0]
   19f7c:	cmp	r5, #0
   19f80:	bne	19fa8 <argp_error@@Base+0x68>
   19f84:	sub	sp, fp, #16
   19f88:	pop	{r4, r5, r6, sl, fp, lr}
   19f8c:	add	sp, sp, #8
   19f90:	bx	lr
   19f94:	movw	r0, #944	; 0x3b0
   19f98:	movt	r0, #3
   19f9c:	ldr	r5, [r0]
   19fa0:	cmp	r5, #0
   19fa4:	beq	19f84 <argp_error@@Base+0x44>
   19fa8:	mov	r0, r5
   19fac:	bl	11eac <flockfile@plt>
   19fb0:	add	r0, fp, #8
   19fb4:	cmp	r4, #0
   19fb8:	mov	r1, r5
   19fbc:	str	r0, [sp, #4]
   19fc0:	movw	r0, #936	; 0x3a8
   19fc4:	movt	r0, #3
   19fc8:	addne	r0, r4, #40	; 0x28
   19fcc:	ldr	r0, [r0]
   19fd0:	bl	11a8c <fputs_unlocked@plt>
   19fd4:	ldr	r0, [r5, #20]
   19fd8:	ldr	r1, [r5, #24]
   19fdc:	cmp	r0, r1
   19fe0:	bcs	1a06c <argp_error@@Base+0x12c>
   19fe4:	add	r1, r0, #1
   19fe8:	str	r1, [r5, #20]
   19fec:	mov	r1, #58	; 0x3a
   19ff0:	strb	r1, [r0]
   19ff4:	ldr	r0, [r5, #20]
   19ff8:	ldr	r1, [r5, #24]
   19ffc:	cmp	r0, r1
   1a000:	bcs	1a088 <argp_error@@Base+0x148>
   1a004:	add	r1, r0, #1
   1a008:	str	r1, [r5, #20]
   1a00c:	mov	r1, #32
   1a010:	strb	r1, [r0]
   1a014:	ldr	r2, [sp, #4]
   1a018:	mov	r0, r5
   1a01c:	mov	r1, r6
   1a020:	bl	11e4c <vfprintf@plt>
   1a024:	ldr	r0, [r5, #20]
   1a028:	ldr	r1, [r5, #24]
   1a02c:	cmp	r0, r1
   1a030:	bcs	1a098 <argp_error@@Base+0x158>
   1a034:	add	r1, r0, #1
   1a038:	str	r1, [r5, #20]
   1a03c:	mov	r1, #10
   1a040:	strb	r1, [r0]
   1a044:	mov	r0, r4
   1a048:	mov	r1, r5
   1a04c:	mov	r2, #260	; 0x104
   1a050:	bl	19e84 <argp_state_help@@Base>
   1a054:	mov	r0, r5
   1a058:	bl	11c24 <funlockfile@plt>
   1a05c:	sub	sp, fp, #16
   1a060:	pop	{r4, r5, r6, sl, fp, lr}
   1a064:	add	sp, sp, #8
   1a068:	bx	lr
   1a06c:	mov	r0, r5
   1a070:	mov	r1, #58	; 0x3a
   1a074:	bl	11e04 <__overflow@plt>
   1a078:	ldr	r0, [r5, #20]
   1a07c:	ldr	r1, [r5, #24]
   1a080:	cmp	r0, r1
   1a084:	bcc	1a004 <argp_error@@Base+0xc4>
   1a088:	mov	r0, r5
   1a08c:	mov	r1, #32
   1a090:	bl	11e04 <__overflow@plt>
   1a094:	b	1a014 <argp_error@@Base+0xd4>
   1a098:	mov	r0, r5
   1a09c:	mov	r1, #10
   1a0a0:	bl	11e04 <__overflow@plt>
   1a0a4:	b	1a044 <argp_error@@Base+0x104>

0001a0a8 <argp_failure@@Base>:
   1a0a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a0ac:	add	fp, sp, #24
   1a0b0:	sub	sp, sp, #200	; 0xc8
   1a0b4:	mov	r4, r3
   1a0b8:	mov	r7, r2
   1a0bc:	mov	r8, r1
   1a0c0:	mov	r5, r0
   1a0c4:	cmp	r0, #0
   1a0c8:	beq	1a0ec <argp_failure@@Base+0x44>
   1a0cc:	ldrb	r0, [r5, #16]
   1a0d0:	tst	r0, #2
   1a0d4:	bne	1a26c <argp_failure@@Base+0x1c4>
   1a0d8:	add	r0, r5, #44	; 0x2c
   1a0dc:	ldr	r6, [r0]
   1a0e0:	cmp	r6, #0
   1a0e4:	bne	1a100 <argp_failure@@Base+0x58>
   1a0e8:	b	1a26c <argp_failure@@Base+0x1c4>
   1a0ec:	movw	r0, #944	; 0x3b0
   1a0f0:	movt	r0, #3
   1a0f4:	ldr	r6, [r0]
   1a0f8:	cmp	r6, #0
   1a0fc:	beq	1a26c <argp_failure@@Base+0x1c4>
   1a100:	mov	r0, r6
   1a104:	bl	11eac <flockfile@plt>
   1a108:	movw	r0, #936	; 0x3a8
   1a10c:	cmp	r5, #0
   1a110:	mov	r1, r6
   1a114:	movt	r0, #3
   1a118:	addne	r0, r5, #40	; 0x28
   1a11c:	ldr	r0, [r0]
   1a120:	bl	11a8c <fputs_unlocked@plt>
   1a124:	cmp	r4, #0
   1a128:	beq	1a184 <argp_failure@@Base+0xdc>
   1a12c:	add	r0, fp, #8
   1a130:	str	r0, [sp]
   1a134:	ldr	r0, [r6, #20]
   1a138:	ldr	r1, [r6, #24]
   1a13c:	cmp	r0, r1
   1a140:	bcs	1a274 <argp_failure@@Base+0x1cc>
   1a144:	add	r1, r0, #1
   1a148:	str	r1, [r6, #20]
   1a14c:	mov	r1, #58	; 0x3a
   1a150:	strb	r1, [r0]
   1a154:	ldr	r0, [r6, #20]
   1a158:	ldr	r1, [r6, #24]
   1a15c:	cmp	r0, r1
   1a160:	bcs	1a290 <argp_failure@@Base+0x1e8>
   1a164:	add	r1, r0, #1
   1a168:	str	r1, [r6, #20]
   1a16c:	mov	r1, #32
   1a170:	strb	r1, [r0]
   1a174:	ldr	r2, [sp]
   1a178:	mov	r0, r6
   1a17c:	mov	r1, r4
   1a180:	bl	11e4c <vfprintf@plt>
   1a184:	cmp	r7, #0
   1a188:	beq	1a208 <argp_failure@@Base+0x160>
   1a18c:	ldr	r0, [r6, #20]
   1a190:	ldr	r1, [r6, #24]
   1a194:	cmp	r0, r1
   1a198:	bcs	1a2a0 <argp_failure@@Base+0x1f8>
   1a19c:	add	r1, r0, #1
   1a1a0:	str	r1, [r6, #20]
   1a1a4:	mov	r1, #58	; 0x3a
   1a1a8:	strb	r1, [r0]
   1a1ac:	ldr	r0, [r6, #20]
   1a1b0:	ldr	r1, [r6, #24]
   1a1b4:	cmp	r0, r1
   1a1b8:	bcs	1a2bc <argp_failure@@Base+0x214>
   1a1bc:	add	r1, r0, #1
   1a1c0:	str	r1, [r6, #20]
   1a1c4:	mov	r1, #32
   1a1c8:	strb	r1, [r0]
   1a1cc:	mov	r1, sp
   1a1d0:	mov	r0, r7
   1a1d4:	mov	r2, #200	; 0xc8
   1a1d8:	bl	11d8c <strerror_r@plt>
   1a1dc:	cmp	r0, #0
   1a1e0:	bne	1a200 <argp_failure@@Base+0x158>
   1a1e4:	mov	r0, r7
   1a1e8:	bl	11ccc <strerror@plt>
   1a1ec:	mov	r1, r0
   1a1f0:	movw	r0, #61489	; 0xf031
   1a1f4:	cmp	r1, #0
   1a1f8:	movt	r0, #1
   1a1fc:	movne	r0, r1
   1a200:	mov	r1, r6
   1a204:	bl	11a8c <fputs_unlocked@plt>
   1a208:	ldr	r0, [r6, #20]
   1a20c:	ldr	r1, [r6, #24]
   1a210:	cmp	r0, r1
   1a214:	bcs	1a250 <argp_failure@@Base+0x1a8>
   1a218:	add	r1, r0, #1
   1a21c:	str	r1, [r6, #20]
   1a220:	mov	r1, #10
   1a224:	strb	r1, [r0]
   1a228:	mov	r0, r6
   1a22c:	bl	11c24 <funlockfile@plt>
   1a230:	cmp	r8, #0
   1a234:	beq	1a26c <argp_failure@@Base+0x1c4>
   1a238:	cmp	r5, #0
   1a23c:	ldrbne	r0, [r5, #16]
   1a240:	tstne	r0, #32
   1a244:	bne	1a26c <argp_failure@@Base+0x1c4>
   1a248:	mov	r0, r8
   1a24c:	bl	11d08 <exit@plt>
   1a250:	mov	r0, r6
   1a254:	mov	r1, #10
   1a258:	bl	11e04 <__overflow@plt>
   1a25c:	mov	r0, r6
   1a260:	bl	11c24 <funlockfile@plt>
   1a264:	cmp	r8, #0
   1a268:	bne	1a238 <argp_failure@@Base+0x190>
   1a26c:	sub	sp, fp, #24
   1a270:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a274:	mov	r0, r6
   1a278:	mov	r1, #58	; 0x3a
   1a27c:	bl	11e04 <__overflow@plt>
   1a280:	ldr	r0, [r6, #20]
   1a284:	ldr	r1, [r6, #24]
   1a288:	cmp	r0, r1
   1a28c:	bcc	1a164 <argp_failure@@Base+0xbc>
   1a290:	mov	r0, r6
   1a294:	mov	r1, #32
   1a298:	bl	11e04 <__overflow@plt>
   1a29c:	b	1a174 <argp_failure@@Base+0xcc>
   1a2a0:	mov	r0, r6
   1a2a4:	mov	r1, #58	; 0x3a
   1a2a8:	bl	11e04 <__overflow@plt>
   1a2ac:	ldr	r0, [r6, #20]
   1a2b0:	ldr	r1, [r6, #24]
   1a2b4:	cmp	r0, r1
   1a2b8:	bcc	1a1bc <argp_failure@@Base+0x114>
   1a2bc:	mov	r0, r6
   1a2c0:	mov	r1, #32
   1a2c4:	bl	11e04 <__overflow@plt>
   1a2c8:	b	1a1cc <argp_failure@@Base+0x124>
   1a2cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2d0:	add	fp, sp, #28
   1a2d4:	sub	sp, sp, #52	; 0x34
   1a2d8:	ldr	r4, [r0]
   1a2dc:	ldr	r7, [r0, #16]
   1a2e0:	mov	r8, r0
   1a2e4:	mov	r0, #16
   1a2e8:	mov	sl, r1
   1a2ec:	bl	18608 <argp_parse@@Base+0x1b64>
   1a2f0:	cmp	r0, #0
   1a2f4:	beq	1a9e8 <argp_failure@@Base+0x940>
   1a2f8:	mov	r9, r0
   1a2fc:	mov	r0, #0
   1a300:	cmp	r4, #0
   1a304:	str	r8, [sp, #40]	; 0x28
   1a308:	mov	r1, r9
   1a30c:	str	r9, [fp, #-32]	; 0xffffffe0
   1a310:	str	r0, [r1, #12]!
   1a314:	str	r1, [sp, #28]
   1a318:	str	r0, [r1, #-8]
   1a31c:	beq	1a57c <argp_failure@@Base+0x4d4>
   1a320:	ldrb	r0, [r4, #12]
   1a324:	str	r7, [sp, #12]
   1a328:	tst	r0, #4
   1a32c:	bne	1aa08 <argp_failure@@Base+0x960>
   1a330:	add	r5, r4, #12
   1a334:	mov	r6, #0
   1a338:	mov	r8, #0
   1a33c:	ldr	r7, [r5, #-8]
   1a340:	cmp	r7, #0
   1a344:	bne	1a380 <argp_failure@@Base+0x2d8>
   1a348:	b	1a35c <argp_failure@@Base+0x2b4>
   1a34c:	add	r5, r5, #24
   1a350:	ldr	r7, [r5, #-8]
   1a354:	cmp	r7, #0
   1a358:	bne	1a380 <argp_failure@@Base+0x2d8>
   1a35c:	ldr	r0, [r5, #-12]
   1a360:	cmp	r0, #0
   1a364:	bne	1a380 <argp_failure@@Base+0x2d8>
   1a368:	ldr	r0, [r5, #4]
   1a36c:	cmp	r0, #0
   1a370:	bne	1a380 <argp_failure@@Base+0x2d8>
   1a374:	ldr	r0, [r5, #8]
   1a378:	cmp	r0, #0
   1a37c:	beq	1a3c0 <argp_failure@@Base+0x318>
   1a380:	ldr	r0, [r5]
   1a384:	sub	r1, r7, #1
   1a388:	tst	r0, #4
   1a38c:	addeq	r6, r6, #1
   1a390:	streq	r6, [r9, #4]
   1a394:	cmp	r1, #254	; 0xfe
   1a398:	bhi	1a34c <argp_failure@@Base+0x2a4>
   1a39c:	ands	r0, r0, #8
   1a3a0:	bne	1a34c <argp_failure@@Base+0x2a4>
   1a3a4:	bl	11cf0 <__ctype_b_loc@plt>
   1a3a8:	ldr	r0, [r0]
   1a3ac:	add	r0, r0, r7, lsl #1
   1a3b0:	ldrb	r0, [r0, #1]
   1a3b4:	tst	r0, #64	; 0x40
   1a3b8:	addne	r8, r8, #1
   1a3bc:	b	1a34c <argp_failure@@Base+0x2a4>
   1a3c0:	rsb	r0, r6, r6, lsl #3
   1a3c4:	lsl	r0, r0, #2
   1a3c8:	bl	18608 <argp_parse@@Base+0x1b64>
   1a3cc:	mov	r5, r0
   1a3d0:	str	r0, [r9]
   1a3d4:	add	r0, r8, #1
   1a3d8:	bl	18608 <argp_parse@@Base+0x1b64>
   1a3dc:	cmp	r5, #0
   1a3e0:	str	r0, [r9, #8]
   1a3e4:	movne	r7, r0
   1a3e8:	cmpne	r0, #0
   1a3ec:	bne	1a410 <argp_failure@@Base+0x368>
   1a3f0:	movw	r0, #61889	; 0xf1c1
   1a3f4:	movw	r1, #61797	; 0xf165
   1a3f8:	movw	r3, #61809	; 0xf171
   1a3fc:	movw	r2, #474	; 0x1da
   1a400:	movt	r0, #1
   1a404:	movt	r1, #1
   1a408:	movt	r3, #1
   1a40c:	bl	11f78 <__assert_fail@plt>
   1a410:	movw	r0, #37450	; 0x924a
   1a414:	movt	r0, #2340	; 0x924
   1a418:	cmp	r6, r0
   1a41c:	bcs	1aa28 <argp_failure@@Base+0x980>
   1a420:	mov	r8, #0
   1a424:	mov	r0, #0
   1a428:	ldr	r1, [r4, #4]
   1a42c:	cmp	r1, #0
   1a430:	bne	1a474 <argp_failure@@Base+0x3cc>
   1a434:	b	1a450 <argp_failure@@Base+0x3a8>
   1a438:	mov	r4, r0
   1a43c:	add	r5, r5, #28
   1a440:	mov	r0, r9
   1a444:	ldr	r1, [r4, #4]
   1a448:	cmp	r1, #0
   1a44c:	bne	1a474 <argp_failure@@Base+0x3cc>
   1a450:	ldr	r2, [r4]
   1a454:	cmp	r2, #0
   1a458:	bne	1a474 <argp_failure@@Base+0x3cc>
   1a45c:	ldr	r2, [r4, #16]
   1a460:	cmp	r2, #0
   1a464:	bne	1a474 <argp_failure@@Base+0x3cc>
   1a468:	ldr	r2, [r4, #20]
   1a46c:	cmp	r2, #0
   1a470:	beq	1a568 <argp_failure@@Base+0x4c0>
   1a474:	stm	r5, {r4, r8}
   1a478:	str	r7, [r5, #8]
   1a47c:	ldr	r9, [r4, #20]
   1a480:	cmp	r9, #0
   1a484:	bne	1a4a0 <argp_failure@@Base+0x3f8>
   1a488:	ldr	r2, [r4]
   1a48c:	cmp	r2, #0
   1a490:	bne	1a49c <argp_failure@@Base+0x3f4>
   1a494:	cmp	r1, #0
   1a498:	addeq	r0, r0, #1
   1a49c:	mov	r9, r0
   1a4a0:	ldr	r0, [sp, #40]	; 0x28
   1a4a4:	mov	r1, #0
   1a4a8:	str	r9, [r5, #12]
   1a4ac:	str	sl, [r5, #16]
   1a4b0:	str	r0, [r5, #20]
   1a4b4:	add	r0, r1, #1
   1a4b8:	str	r0, [r5, #4]
   1a4bc:	ldrb	r0, [r4, #12]
   1a4c0:	tst	r0, #8
   1a4c4:	bne	1a51c <argp_failure@@Base+0x474>
   1a4c8:	ldr	r6, [r4, #4]
   1a4cc:	sub	r0, r6, #1
   1a4d0:	cmp	r0, #254	; 0xfe
   1a4d4:	bhi	1a51c <argp_failure@@Base+0x474>
   1a4d8:	bl	11cf0 <__ctype_b_loc@plt>
   1a4dc:	ldr	r0, [r0]
   1a4e0:	add	r0, r0, r6, lsl #1
   1a4e4:	ldrb	r0, [r0, #1]
   1a4e8:	tst	r0, #64	; 0x40
   1a4ec:	beq	1a51c <argp_failure@@Base+0x474>
   1a4f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4f4:	ldr	r0, [r0, #8]
   1a4f8:	cmp	r0, r7
   1a4fc:	bcs	1a518 <argp_failure@@Base+0x470>
   1a500:	ldrb	r1, [r0], #1
   1a504:	uxtb	r2, r6
   1a508:	cmp	r1, r2
   1a50c:	beq	1a51c <argp_failure@@Base+0x474>
   1a510:	cmp	r7, r0
   1a514:	bne	1a500 <argp_failure@@Base+0x458>
   1a518:	strb	r6, [r7], #1
   1a51c:	ldr	r1, [r4, #28]
   1a520:	add	r0, r4, #24
   1a524:	cmp	r1, #0
   1a528:	bne	1a550 <argp_failure@@Base+0x4a8>
   1a52c:	ldr	r1, [r0]
   1a530:	cmp	r1, #0
   1a534:	bne	1a550 <argp_failure@@Base+0x4a8>
   1a538:	ldr	r1, [r4, #40]	; 0x28
   1a53c:	cmp	r1, #0
   1a540:	bne	1a550 <argp_failure@@Base+0x4a8>
   1a544:	ldr	r1, [r4, #44]	; 0x2c
   1a548:	cmp	r1, #0
   1a54c:	beq	1a438 <argp_failure@@Base+0x390>
   1a550:	ldrb	r1, [r4, #36]	; 0x24
   1a554:	tst	r1, #4
   1a558:	beq	1a438 <argp_failure@@Base+0x390>
   1a55c:	ldr	r1, [r5, #4]
   1a560:	mov	r4, r0
   1a564:	b	1a4b4 <argp_failure@@Base+0x40c>
   1a568:	mov	r0, #0
   1a56c:	ldr	r8, [sp, #40]	; 0x28
   1a570:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1a574:	strb	r0, [r7]
   1a578:	ldr	r7, [sp, #12]
   1a57c:	cmp	r7, #0
   1a580:	beq	1a9bc <argp_failure@@Base+0x914>
   1a584:	ldr	r0, [r7]
   1a588:	cmp	r0, #0
   1a58c:	beq	1a9bc <argp_failure@@Base+0x914>
   1a590:	str	sl, [sp, #4]
   1a594:	ldr	r4, [r7, #12]
   1a598:	cmp	r4, #0
   1a59c:	bne	1a5dc <argp_failure@@Base+0x534>
   1a5a0:	b	1a5e4 <argp_failure@@Base+0x53c>
   1a5a4:	ldr	r1, [r6]
   1a5a8:	ldr	r2, [r6, #8]
   1a5ac:	str	r1, [r9]
   1a5b0:	stmib	r9, {r0, r2}
   1a5b4:	mov	r0, #0
   1a5b8:	str	r0, [r6, #4]
   1a5bc:	mov	r0, r6
   1a5c0:	bl	17e80 <argp_parse@@Base+0x13dc>
   1a5c4:	ldr	r0, [r7, #16]!
   1a5c8:	cmp	r0, #0
   1a5cc:	beq	1a9bc <argp_failure@@Base+0x914>
   1a5d0:	ldr	r4, [r7, #12]
   1a5d4:	cmp	r4, #0
   1a5d8:	beq	1a5e4 <argp_failure@@Base+0x53c>
   1a5dc:	ldr	r5, [r7, #8]
   1a5e0:	b	1a5f4 <argp_failure@@Base+0x54c>
   1a5e4:	ldr	r5, [r7, #8]
   1a5e8:	mov	r1, sl
   1a5ec:	cmp	r5, #0
   1a5f0:	beq	1a64c <argp_failure@@Base+0x5a4>
   1a5f4:	ldr	r6, [r8, #16]
   1a5f8:	mov	r0, #28
   1a5fc:	bl	18608 <argp_parse@@Base+0x1b64>
   1a600:	mov	r1, r0
   1a604:	cmp	r0, #0
   1a608:	beq	1a64c <argp_failure@@Base+0x5a4>
   1a60c:	sub	r0, r7, r6
   1a610:	cmp	sl, #0
   1a614:	str	r5, [r1]
   1a618:	asr	r0, r0, #4
   1a61c:	stmib	r1, {r0, r4, sl}
   1a620:	str	r8, [r1, #16]
   1a624:	beq	1a634 <argp_failure@@Base+0x58c>
   1a628:	ldr	r0, [sl, #20]
   1a62c:	add	r0, r0, #1
   1a630:	b	1a638 <argp_failure@@Base+0x590>
   1a634:	mov	r0, #0
   1a638:	ldr	r3, [sp, #28]
   1a63c:	str	r0, [r1, #20]
   1a640:	ldr	r2, [r3]
   1a644:	str	r1, [r3]
   1a648:	str	r2, [r1, #24]
   1a64c:	ldr	r0, [r7]
   1a650:	bl	1a2cc <argp_failure@@Base+0x224>
   1a654:	ldr	r1, [sp, #28]
   1a658:	mov	r6, r0
   1a65c:	ldr	r2, [r1]
   1a660:	mov	r0, r1
   1a664:	add	r1, r2, #24
   1a668:	cmp	r2, #0
   1a66c:	bne	1a65c <argp_failure@@Base+0x5b4>
   1a670:	ldr	r1, [r6, #12]
   1a674:	str	r1, [r0]
   1a678:	mov	r0, #0
   1a67c:	str	r0, [r6, #12]
   1a680:	ldr	r0, [r6, #4]
   1a684:	cmp	r0, #0
   1a688:	beq	1a5bc <argp_failure@@Base+0x514>
   1a68c:	ldr	r1, [r9, #4]
   1a690:	cmp	r1, #0
   1a694:	beq	1a5a4 <argp_failure@@Base+0x4fc>
   1a698:	add	r5, r1, r0
   1a69c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a6a0:	rsb	r0, r5, r5, lsl #3
   1a6a4:	lsl	r0, r0, #2
   1a6a8:	bl	18608 <argp_parse@@Base+0x1b64>
   1a6ac:	ldr	r4, [r9, #8]
   1a6b0:	str	r0, [sp, #24]
   1a6b4:	mov	r0, r4
   1a6b8:	bl	11d2c <strlen@plt>
   1a6bc:	mov	r8, r0
   1a6c0:	ldr	r0, [r6, #8]
   1a6c4:	bl	11d2c <strlen@plt>
   1a6c8:	add	r0, r8, r0
   1a6cc:	str	r8, [sp, #16]
   1a6d0:	ldr	r8, [sp, #24]
   1a6d4:	add	r0, r0, #1
   1a6d8:	bl	18608 <argp_parse@@Base+0x1b64>
   1a6dc:	cmp	r8, #0
   1a6e0:	cmpne	r0, #0
   1a6e4:	beq	1a9c8 <argp_failure@@Base+0x920>
   1a6e8:	str	r0, [sp, #36]	; 0x24
   1a6ec:	movw	r0, #37450	; 0x924a
   1a6f0:	str	r6, [sp, #20]
   1a6f4:	str	r7, [sp, #12]
   1a6f8:	str	r5, [sp, #8]
   1a6fc:	movt	r0, #2340	; 0x924
   1a700:	cmp	r5, r0
   1a704:	bcs	1aa48 <argp_failure@@Base+0x9a0>
   1a708:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1a70c:	ldr	r1, [r9]
   1a710:	mov	r0, r8
   1a714:	rsb	r6, r5, r5, lsl #3
   1a718:	lsl	r2, r6, #2
   1a71c:	bl	11b64 <memcpy@plt>
   1a720:	add	r0, r8, r6, lsl #2
   1a724:	ldr	r6, [sp, #20]
   1a728:	ldm	r6, {r1, r2}
   1a72c:	rsb	r2, r2, r2, lsl #3
   1a730:	lsl	r2, r2, #2
   1a734:	bl	11b64 <memcpy@plt>
   1a738:	ldr	r0, [sp, #36]	; 0x24
   1a73c:	ldr	r2, [sp, #16]
   1a740:	mov	r1, r4
   1a744:	bl	11b64 <memcpy@plt>
   1a748:	tst	r5, #1
   1a74c:	mov	r0, r5
   1a750:	beq	1a774 <argp_failure@@Base+0x6cc>
   1a754:	ldr	r1, [sp, #24]
   1a758:	ldr	r2, [sp, #36]	; 0x24
   1a75c:	ldr	r0, [r1, #8]
   1a760:	add	r8, r1, #28
   1a764:	sub	r0, r0, r4
   1a768:	add	r0, r2, r0
   1a76c:	str	r0, [r1, #8]
   1a770:	sub	r0, r5, #1
   1a774:	ldr	r3, [sp, #36]	; 0x24
   1a778:	cmp	r5, #1
   1a77c:	beq	1a7ac <argp_failure@@Base+0x704>
   1a780:	ldr	r1, [r8, #8]
   1a784:	ldr	r2, [r8, #36]	; 0x24
   1a788:	subs	r0, r0, #2
   1a78c:	sub	r1, r1, r4
   1a790:	add	r1, r3, r1
   1a794:	str	r1, [r8, #8]
   1a798:	sub	r1, r2, r4
   1a79c:	add	r1, r3, r1
   1a7a0:	str	r1, [r8, #36]	; 0x24
   1a7a4:	add	r8, r8, #56	; 0x38
   1a7a8:	bne	1a780 <argp_failure@@Base+0x6d8>
   1a7ac:	ldr	r4, [sp, #16]
   1a7b0:	add	r0, r3, r4
   1a7b4:	str	r0, [fp, #-36]	; 0xffffffdc
   1a7b8:	ldr	r0, [r6, #4]
   1a7bc:	cmp	r0, #0
   1a7c0:	beq	1a938 <argp_failure@@Base+0x890>
   1a7c4:	ldr	sl, [r6, #8]
   1a7c8:	cmp	r4, #0
   1a7cc:	str	r0, [sp, #32]
   1a7d0:	bgt	1a7f0 <argp_failure@@Base+0x748>
   1a7d4:	b	1a8a8 <argp_failure@@Base+0x800>
   1a7d8:	ldr	r0, [sp, #32]
   1a7dc:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1a7e0:	add	r8, r8, #28
   1a7e4:	subs	r0, r0, #1
   1a7e8:	str	r0, [sp, #32]
   1a7ec:	beq	1a938 <argp_failure@@Base+0x890>
   1a7f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a7f4:	str	r0, [r8, #8]
   1a7f8:	ldr	r6, [r8, #4]
   1a7fc:	cmp	r6, #0
   1a800:	beq	1a7d8 <argp_failure@@Base+0x730>
   1a804:	ldr	r9, [r8]
   1a808:	ldrb	r0, [r9, #12]
   1a80c:	tst	r0, #8
   1a810:	bne	1a828 <argp_failure@@Base+0x780>
   1a814:	b	1a840 <argp_failure@@Base+0x798>
   1a818:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a81c:	strb	r7, [r0], #1
   1a820:	str	r0, [fp, #-36]	; 0xffffffdc
   1a824:	add	sl, sl, #1
   1a828:	subs	r6, r6, #1
   1a82c:	add	r9, r9, #24
   1a830:	beq	1a7d8 <argp_failure@@Base+0x730>
   1a834:	ldrb	r0, [r9, #12]
   1a838:	tst	r0, #8
   1a83c:	bne	1a828 <argp_failure@@Base+0x780>
   1a840:	ldr	r5, [r9, #4]
   1a844:	sub	r0, r5, #1
   1a848:	cmp	r0, #254	; 0xfe
   1a84c:	bhi	1a828 <argp_failure@@Base+0x780>
   1a850:	ldrb	r7, [sl]
   1a854:	bl	11cf0 <__ctype_b_loc@plt>
   1a858:	cmp	r5, r7
   1a85c:	bne	1a828 <argp_failure@@Base+0x780>
   1a860:	ldr	r0, [r0]
   1a864:	ldr	r1, [sp, #36]	; 0x24
   1a868:	add	r0, r0, r5, lsl #1
   1a86c:	ldrh	r0, [r0]
   1a870:	ands	r0, r0, #16384	; 0x4000
   1a874:	mov	r0, r4
   1a878:	beq	1a828 <argp_failure@@Base+0x780>
   1a87c:	ldrb	r2, [r1], #1
   1a880:	cmp	r2, r7
   1a884:	beq	1a824 <argp_failure@@Base+0x77c>
   1a888:	subs	r0, r0, #1
   1a88c:	bne	1a87c <argp_failure@@Base+0x7d4>
   1a890:	b	1a818 <argp_failure@@Base+0x770>
   1a894:	ldr	r0, [sp, #32]
   1a898:	add	r8, r8, #28
   1a89c:	subs	r0, r0, #1
   1a8a0:	str	r0, [sp, #32]
   1a8a4:	beq	1a938 <argp_failure@@Base+0x890>
   1a8a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a8ac:	str	r0, [r8, #8]
   1a8b0:	ldr	r6, [r8, #4]
   1a8b4:	cmp	r6, #0
   1a8b8:	beq	1a894 <argp_failure@@Base+0x7ec>
   1a8bc:	ldr	r0, [r8]
   1a8c0:	add	r7, r0, #12
   1a8c4:	ldrb	r0, [r7]
   1a8c8:	tst	r0, #8
   1a8cc:	beq	1a8e8 <argp_failure@@Base+0x840>
   1a8d0:	add	r7, r7, #24
   1a8d4:	subs	r6, r6, #1
   1a8d8:	beq	1a894 <argp_failure@@Base+0x7ec>
   1a8dc:	ldrb	r0, [r7]
   1a8e0:	tst	r0, #8
   1a8e4:	bne	1a8d0 <argp_failure@@Base+0x828>
   1a8e8:	ldr	r4, [r7, #-8]
   1a8ec:	sub	r0, r4, #1
   1a8f0:	cmp	r0, #254	; 0xfe
   1a8f4:	bhi	1a8d0 <argp_failure@@Base+0x828>
   1a8f8:	ldrb	r5, [sl]
   1a8fc:	bl	11cf0 <__ctype_b_loc@plt>
   1a900:	cmp	r4, r5
   1a904:	bne	1a8d0 <argp_failure@@Base+0x828>
   1a908:	ldr	r0, [r0]
   1a90c:	add	r0, r0, r4, lsl #1
   1a910:	ldrh	r0, [r0]
   1a914:	ands	r0, r0, #16384	; 0x4000
   1a918:	ldrne	r0, [fp, #-36]	; 0xffffffdc
   1a91c:	addne	sl, sl, #1
   1a920:	strbne	r5, [r0], #1
   1a924:	strne	r0, [fp, #-36]	; 0xffffffdc
   1a928:	add	r7, r7, #24
   1a92c:	subs	r6, r6, #1
   1a930:	bne	1a8dc <argp_failure@@Base+0x834>
   1a934:	b	1a894 <argp_failure@@Base+0x7ec>
   1a938:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a93c:	mov	r0, #0
   1a940:	strb	r0, [r1]
   1a944:	ldr	r0, [r9]
   1a948:	bl	17e80 <argp_parse@@Base+0x13dc>
   1a94c:	ldr	r0, [r9, #8]
   1a950:	bl	17e80 <argp_parse@@Base+0x13dc>
   1a954:	ldr	r0, [sp, #24]
   1a958:	ldr	r6, [sp, #20]
   1a95c:	str	r0, [r9]
   1a960:	ldr	r0, [sp, #8]
   1a964:	str	r0, [r9, #4]
   1a968:	ldr	r0, [sp, #36]	; 0x24
   1a96c:	str	r0, [r9, #8]
   1a970:	ldr	r0, [r6, #12]
   1a974:	cmp	r0, #0
   1a978:	beq	1a990 <argp_failure@@Base+0x8e8>
   1a97c:	ldr	r4, [r0, #24]
   1a980:	bl	17e80 <argp_parse@@Base+0x13dc>
   1a984:	cmp	r4, #0
   1a988:	mov	r0, r4
   1a98c:	bne	1a97c <argp_failure@@Base+0x8d4>
   1a990:	ldr	r0, [r6, #4]
   1a994:	ldr	sl, [sp, #4]
   1a998:	ldr	r8, [sp, #40]	; 0x28
   1a99c:	ldr	r7, [sp, #12]
   1a9a0:	cmp	r0, #0
   1a9a4:	beq	1a5bc <argp_failure@@Base+0x514>
   1a9a8:	ldr	r0, [r6]
   1a9ac:	bl	17e80 <argp_parse@@Base+0x13dc>
   1a9b0:	ldr	r0, [r6, #8]
   1a9b4:	bl	17e80 <argp_parse@@Base+0x13dc>
   1a9b8:	b	1a5bc <argp_failure@@Base+0x514>
   1a9bc:	mov	r0, r9
   1a9c0:	sub	sp, fp, #28
   1a9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a9c8:	movw	r0, #61981	; 0xf21d
   1a9cc:	movw	r1, #61797	; 0xf165
   1a9d0:	movw	r3, #62006	; 0xf236
   1a9d4:	movw	r2, #970	; 0x3ca
   1a9d8:	movt	r0, #1
   1a9dc:	movt	r1, #1
   1a9e0:	movt	r3, #1
   1a9e4:	bl	11f78 <__assert_fail@plt>
   1a9e8:	movw	r0, #61793	; 0xf161
   1a9ec:	movw	r1, #61797	; 0xf165
   1a9f0:	movw	r3, #61809	; 0xf171
   1a9f4:	movw	r2, #450	; 0x1c2
   1a9f8:	movt	r0, #1
   1a9fc:	movt	r1, #1
   1aa00:	movt	r3, #1
   1aa04:	bl	11f78 <__assert_fail@plt>
   1aa08:	movw	r0, #61873	; 0xf1b1
   1aa0c:	movw	r1, #61797	; 0xf165
   1aa10:	movw	r3, #61809	; 0xf171
   1aa14:	mov	r2, #460	; 0x1cc
   1aa18:	movt	r0, #1
   1aa1c:	movt	r1, #1
   1aa20:	movt	r3, #1
   1aa24:	bl	11f78 <__assert_fail@plt>
   1aa28:	movw	r0, #61924	; 0xf1e4
   1aa2c:	movw	r1, #61797	; 0xf165
   1aa30:	movw	r3, #61809	; 0xf171
   1aa34:	mov	r2, #476	; 0x1dc
   1aa38:	movt	r0, #1
   1aa3c:	movt	r1, #1
   1aa40:	movt	r3, #1
   1aa44:	bl	11f78 <__assert_fail@plt>
   1aa48:	movw	r0, #61929	; 0xf1e9
   1aa4c:	movw	r1, #61797	; 0xf165
   1aa50:	movw	r3, #62006	; 0xf236
   1aa54:	mov	r2, #972	; 0x3cc
   1aa58:	movt	r0, #1
   1aa5c:	movt	r1, #1
   1aa60:	movt	r3, #1
   1aa64:	bl	11f78 <__assert_fail@plt>
   1aa68:	push	{r4, r5, fp, lr}
   1aa6c:	add	fp, sp, #8
   1aa70:	mov	r5, r1
   1aa74:	cmp	r0, #0
   1aa78:	beq	1aac8 <argp_failure@@Base+0xa20>
   1aa7c:	mov	r1, #10
   1aa80:	bl	11d44 <strchr@plt>
   1aa84:	cmp	r0, #0
   1aa88:	mov	r4, r0
   1aa8c:	movwne	r4, #1
   1aa90:	cmp	r5, #0
   1aa94:	beq	1aad4 <argp_failure@@Base+0xa2c>
   1aa98:	ldr	r1, [r5]
   1aa9c:	cmp	r1, #0
   1aaa0:	beq	1aad4 <argp_failure@@Base+0xa2c>
   1aaa4:	add	r5, r5, #16
   1aaa8:	ldr	r0, [r1, #8]
   1aaac:	ldr	r1, [r1, #16]
   1aab0:	bl	1aa68 <argp_failure@@Base+0x9c0>
   1aab4:	ldr	r1, [r5], #16
   1aab8:	add	r4, r0, r4
   1aabc:	cmp	r1, #0
   1aac0:	bne	1aaa8 <argp_failure@@Base+0xa00>
   1aac4:	b	1aad4 <argp_failure@@Base+0xa2c>
   1aac8:	mov	r4, #0
   1aacc:	cmp	r5, #0
   1aad0:	bne	1aa98 <argp_failure@@Base+0x9f0>
   1aad4:	mov	r0, r4
   1aad8:	pop	{r4, r5, fp, pc}
   1aadc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aae0:	add	fp, sp, #28
   1aae4:	sub	sp, sp, #28
   1aae8:	ldr	r4, [r0, #4]
   1aaec:	str	r1, [fp, #-40]	; 0xffffffd8
   1aaf0:	cmp	r4, #0
   1aaf4:	beq	1aef0 <argp_failure@@Base+0xe48>
   1aaf8:	mov	r5, r0
   1aafc:	ldr	r0, [r0, #8]
   1ab00:	bl	11d2c <strlen@plt>
   1ab04:	add	r0, r0, #8
   1ab08:	bic	r0, r0, #7
   1ab0c:	sub	r0, sp, r0
   1ab10:	mov	sp, r0
   1ab14:	ldr	r7, [r5]
   1ab18:	str	r0, [fp, #-52]	; 0xffffffcc
   1ab1c:	str	r0, [fp, #-48]	; 0xffffffd0
   1ab20:	str	r5, [fp, #-44]	; 0xffffffd4
   1ab24:	ldr	r6, [r7, #4]
   1ab28:	str	r4, [fp, #-36]	; 0xffffffdc
   1ab2c:	cmp	r6, #0
   1ab30:	bne	1ab58 <argp_failure@@Base+0xab0>
   1ab34:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1ab38:	ldr	r6, [fp, #-44]	; 0xffffffd4
   1ab3c:	add	r7, r7, #28
   1ab40:	subs	r4, r4, #1
   1ab44:	beq	1ac0c <argp_failure@@Base+0xb64>
   1ab48:	ldr	r6, [r7, #4]
   1ab4c:	str	r4, [fp, #-36]	; 0xffffffdc
   1ab50:	cmp	r6, #0
   1ab54:	beq	1ab34 <argp_failure@@Base+0xa8c>
   1ab58:	ldr	r4, [r7]
   1ab5c:	ldr	r5, [r7, #8]
   1ab60:	mov	sl, r4
   1ab64:	ldr	r8, [sl, #12]
   1ab68:	tst	r8, #8
   1ab6c:	bne	1ab78 <argp_failure@@Base+0xad0>
   1ab70:	b	1ab90 <argp_failure@@Base+0xae8>
   1ab74:	add	r5, r5, #1
   1ab78:	subs	r6, r6, #1
   1ab7c:	add	sl, sl, #24
   1ab80:	beq	1ab34 <argp_failure@@Base+0xa8c>
   1ab84:	ldr	r8, [sl, #12]
   1ab88:	tst	r8, #8
   1ab8c:	bne	1ab78 <argp_failure@@Base+0xad0>
   1ab90:	ldr	r9, [sl, #4]
   1ab94:	sub	r0, r9, #1
   1ab98:	cmp	r0, #254	; 0xfe
   1ab9c:	bhi	1ab78 <argp_failure@@Base+0xad0>
   1aba0:	bl	11cf0 <__ctype_b_loc@plt>
   1aba4:	ldr	r0, [r0]
   1aba8:	add	r0, r0, r9, lsl #1
   1abac:	ldrb	r0, [r0, #1]
   1abb0:	tst	r0, #64	; 0x40
   1abb4:	beq	1ab78 <argp_failure@@Base+0xad0>
   1abb8:	ldrb	r0, [r5]
   1abbc:	cmp	r9, r0
   1abc0:	bne	1ab78 <argp_failure@@Base+0xad0>
   1abc4:	tst	r8, #4
   1abc8:	moveq	r4, sl
   1abcc:	tst	r8, #2
   1abd0:	bne	1ab74 <argp_failure@@Base+0xacc>
   1abd4:	ldr	r0, [sl, #8]
   1abd8:	cmp	r0, #0
   1abdc:	bne	1ab74 <argp_failure@@Base+0xacc>
   1abe0:	ldr	r0, [r4, #8]
   1abe4:	cmp	r0, #0
   1abe8:	bne	1ab74 <argp_failure@@Base+0xacc>
   1abec:	ldr	r0, [r4, #12]
   1abf0:	orr	r0, r0, r8
   1abf4:	tst	r0, #16
   1abf8:	bne	1ab74 <argp_failure@@Base+0xacc>
   1abfc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ac00:	strb	r9, [r0], #1
   1ac04:	str	r0, [fp, #-48]	; 0xffffffd0
   1ac08:	b	1ab74 <argp_failure@@Base+0xacc>
   1ac0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ac10:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1ac14:	cmp	r1, r2
   1ac18:	bls	1ac34 <argp_failure@@Base+0xb8c>
   1ac1c:	mov	r0, #0
   1ac20:	strb	r0, [r1]
   1ac24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ac28:	movw	r1, #62050	; 0xf262
   1ac2c:	movt	r1, #1
   1ac30:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   1ac34:	ldr	r5, [r6, #4]
   1ac38:	cmp	r5, #0
   1ac3c:	beq	1aef0 <argp_failure@@Base+0xe48>
   1ac40:	ldr	r8, [r6]
   1ac44:	ldr	r9, [r8, #4]
   1ac48:	cmp	r9, #0
   1ac4c:	bne	1ac68 <argp_failure@@Base+0xbc0>
   1ac50:	subs	r5, r5, #1
   1ac54:	add	r8, r8, #28
   1ac58:	beq	1ae0c <argp_failure@@Base+0xd64>
   1ac5c:	ldr	r9, [r8, #4]
   1ac60:	cmp	r9, #0
   1ac64:	beq	1ac50 <argp_failure@@Base+0xba8>
   1ac68:	ldr	sl, [r8]
   1ac6c:	ldr	r4, [r8, #8]
   1ac70:	str	sl, [fp, #-36]	; 0xffffffdc
   1ac74:	ldr	r6, [sl, #12]
   1ac78:	tst	r6, #8
   1ac7c:	bne	1ac9c <argp_failure@@Base+0xbf4>
   1ac80:	b	1acb4 <argp_failure@@Base+0xc0c>
   1ac84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ac88:	movw	r1, #62057	; 0xf269
   1ac8c:	mov	r2, r7
   1ac90:	movt	r1, #1
   1ac94:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   1ac98:	add	r4, r4, #1
   1ac9c:	subs	r9, r9, #1
   1aca0:	add	sl, sl, #24
   1aca4:	beq	1ac50 <argp_failure@@Base+0xba8>
   1aca8:	ldr	r6, [sl, #12]
   1acac:	tst	r6, #8
   1acb0:	bne	1ac9c <argp_failure@@Base+0xbf4>
   1acb4:	ldr	r7, [sl, #4]
   1acb8:	sub	r0, r7, #1
   1acbc:	cmp	r0, #254	; 0xfe
   1acc0:	bhi	1ac9c <argp_failure@@Base+0xbf4>
   1acc4:	bl	11cf0 <__ctype_b_loc@plt>
   1acc8:	ldr	r0, [r0]
   1accc:	add	r0, r0, r7, lsl #1
   1acd0:	ldrb	r0, [r0, #1]
   1acd4:	tst	r0, #64	; 0x40
   1acd8:	beq	1ac9c <argp_failure@@Base+0xbf4>
   1acdc:	ldrb	r0, [r4]
   1ace0:	cmp	r7, r0
   1ace4:	bne	1ac9c <argp_failure@@Base+0xbf4>
   1ace8:	tst	r6, #4
   1acec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1acf0:	moveq	r0, sl
   1acf4:	tst	r6, #2
   1acf8:	str	r0, [fp, #-36]	; 0xffffffdc
   1acfc:	bne	1ac98 <argp_failure@@Base+0xbf0>
   1ad00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ad04:	ldr	r3, [sl, #8]
   1ad08:	ldr	r0, [r0, #12]
   1ad0c:	cmp	r3, #0
   1ad10:	orr	r0, r0, r6
   1ad14:	bne	1ad20 <argp_failure@@Base+0xc78>
   1ad18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ad1c:	ldr	r3, [r1, #8]
   1ad20:	tst	r0, #16
   1ad24:	bne	1ac98 <argp_failure@@Base+0xbf0>
   1ad28:	cmp	r3, #0
   1ad2c:	beq	1ac98 <argp_failure@@Base+0xbf0>
   1ad30:	tst	r0, #1
   1ad34:	bne	1ac84 <argp_failure@@Base+0xbdc>
   1ad38:	mov	r0, r3
   1ad3c:	str	r3, [fp, #-48]	; 0xffffffd0
   1ad40:	bl	11d2c <strlen@plt>
   1ad44:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1ad48:	add	r6, r0, #6
   1ad4c:	ldr	r2, [r7, #24]
   1ad50:	ldr	r0, [r7, #28]
   1ad54:	ldr	r1, [r7, #16]
   1ad58:	sub	r2, r0, r2
   1ad5c:	cmp	r2, r1
   1ad60:	bls	1ad70 <argp_failure@@Base+0xcc8>
   1ad64:	mov	r0, r7
   1ad68:	bl	1d86c <argp_failure@@Base+0x37c4>
   1ad6c:	ldr	r0, [r7, #28]
   1ad70:	ldr	r3, [r7, #20]
   1ad74:	ldr	r2, [r7, #8]
   1ad78:	ldr	r1, [r7, #32]
   1ad7c:	cmp	r3, #0
   1ad80:	addgt	r6, r6, r3
   1ad84:	cmp	r6, r2
   1ad88:	bcs	1adc0 <argp_failure@@Base+0xd18>
   1ad8c:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1ad90:	cmp	r0, r1
   1ad94:	bcc	1adb0 <argp_failure@@Base+0xd08>
   1ad98:	mov	r0, r7
   1ad9c:	mov	r1, #1
   1ada0:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1ada4:	cmp	r0, #0
   1ada8:	beq	1adf4 <argp_failure@@Base+0xd4c>
   1adac:	ldr	r0, [r7, #28]
   1adb0:	add	r1, r0, #1
   1adb4:	str	r1, [r7, #28]
   1adb8:	mov	r1, #32
   1adbc:	b	1adf0 <argp_failure@@Base+0xd48>
   1adc0:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1adc4:	cmp	r0, r1
   1adc8:	bcc	1ade4 <argp_failure@@Base+0xd3c>
   1adcc:	mov	r0, r7
   1add0:	mov	r1, #1
   1add4:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1add8:	cmp	r0, #0
   1addc:	beq	1adf4 <argp_failure@@Base+0xd4c>
   1ade0:	ldr	r0, [r7, #28]
   1ade4:	add	r1, r0, #1
   1ade8:	str	r1, [r7, #28]
   1adec:	mov	r1, #10
   1adf0:	strb	r1, [r0]
   1adf4:	ldr	r2, [sl, #4]
   1adf8:	movw	r1, #62068	; 0xf274
   1adfc:	mov	r0, r7
   1ae00:	mov	r3, r6
   1ae04:	movt	r1, #1
   1ae08:	b	1ac94 <argp_failure@@Base+0xbec>
   1ae0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae10:	ldr	r4, [r0, #4]
   1ae14:	cmp	r4, #0
   1ae18:	beq	1aef0 <argp_failure@@Base+0xe48>
   1ae1c:	ldr	r6, [r0]
   1ae20:	movw	sl, #62101	; 0xf295
   1ae24:	movw	r9, #62077	; 0xf27d
   1ae28:	movt	sl, #1
   1ae2c:	movt	r9, #1
   1ae30:	ldr	r7, [r6, #4]
   1ae34:	cmp	r7, #0
   1ae38:	bne	1ae54 <argp_failure@@Base+0xdac>
   1ae3c:	subs	r4, r4, #1
   1ae40:	add	r6, r6, #28
   1ae44:	beq	1aef0 <argp_failure@@Base+0xe48>
   1ae48:	ldr	r7, [r6, #4]
   1ae4c:	cmp	r7, #0
   1ae50:	beq	1ae3c <argp_failure@@Base+0xd94>
   1ae54:	ldr	r8, [r6]
   1ae58:	mov	r5, r8
   1ae5c:	ldr	r2, [r5]
   1ae60:	cmp	r2, #0
   1ae64:	bne	1ae90 <argp_failure@@Base+0xde8>
   1ae68:	b	1ae78 <argp_failure@@Base+0xdd0>
   1ae6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae70:	mov	r1, sl
   1ae74:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   1ae78:	subs	r7, r7, #1
   1ae7c:	add	r5, r5, #24
   1ae80:	beq	1ae3c <argp_failure@@Base+0xd94>
   1ae84:	ldr	r2, [r5]
   1ae88:	cmp	r2, #0
   1ae8c:	beq	1ae78 <argp_failure@@Base+0xdd0>
   1ae90:	ldr	r0, [r5, #12]
   1ae94:	tst	r0, #4
   1ae98:	moveq	r8, r5
   1ae9c:	tst	r0, #2
   1aea0:	bne	1ae78 <argp_failure@@Base+0xdd0>
   1aea4:	ldr	r3, [r5, #8]
   1aea8:	ldr	r1, [r8, #12]
   1aeac:	cmp	r3, #0
   1aeb0:	orr	r0, r1, r0
   1aeb4:	ldreq	r3, [r8, #8]
   1aeb8:	tst	r0, #16
   1aebc:	bne	1ae78 <argp_failure@@Base+0xdd0>
   1aec0:	cmp	r3, #0
   1aec4:	beq	1ae6c <argp_failure@@Base+0xdc4>
   1aec8:	tst	r0, #1
   1aecc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aed0:	movne	r1, r9
   1aed4:	movweq	r1, #62090	; 0xf28a
   1aed8:	movteq	r1, #1
   1aedc:	bl	1ded4 <argp_failure@@Base+0x3e2c>
   1aee0:	subs	r7, r7, #1
   1aee4:	add	r5, r5, #24
   1aee8:	bne	1ae84 <argp_failure@@Base+0xddc>
   1aeec:	b	1ae3c <argp_failure@@Base+0xd94>
   1aef0:	sub	sp, fp, #28
   1aef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aefc:	add	fp, sp, #28
   1af00:	sub	sp, sp, #28
   1af04:	ldr	r5, [r0, #8]
   1af08:	mov	r7, r0
   1af0c:	ldr	sl, [r0, #16]
   1af10:	ldr	r0, [r2]
   1af14:	mov	r4, r3
   1af18:	mov	r9, r2
   1af1c:	mov	r8, r1
   1af20:	cmp	r7, #0
   1af24:	mov	r6, r5
   1af28:	str	r0, [sp, #20]
   1af2c:	beq	1af68 <argp_failure@@Base+0xec0>
   1af30:	ldr	r0, [r7, #20]
   1af34:	mov	r6, r5
   1af38:	cmp	r0, #0
   1af3c:	beq	1af68 <argp_failure@@Base+0xec0>
   1af40:	mov	r0, r7
   1af44:	mov	r1, r8
   1af48:	bl	177d0 <argp_parse@@Base+0xd2c>
   1af4c:	ldr	r3, [r7, #20]
   1af50:	mov	r2, r0
   1af54:	movw	r0, #6
   1af58:	mov	r1, r5
   1af5c:	movt	r0, #512	; 0x200
   1af60:	blx	r3
   1af64:	mov	r6, r0
   1af68:	cmp	r6, #0
   1af6c:	beq	1afd0 <argp_failure@@Base+0xf28>
   1af70:	mov	r0, r6
   1af74:	mov	r1, #10
   1af78:	bl	11b28 <strchrnul@plt>
   1af7c:	mov	r7, r0
   1af80:	ldrb	r0, [r0]
   1af84:	str	r5, [sp, #12]
   1af88:	str	r6, [sp, #16]
   1af8c:	stmib	sp, {r8, sl}
   1af90:	cmp	r0, #0
   1af94:	beq	1b040 <argp_failure@@Base+0xf98>
   1af98:	ldr	r0, [sp, #20]
   1af9c:	ldrb	r6, [r0]
   1afa0:	cmp	r6, #0
   1afa4:	beq	1b04c <argp_failure@@Base+0xfa4>
   1afa8:	mov	r8, #0
   1afac:	add	sl, r7, #1
   1afb0:	mov	r1, #10
   1afb4:	mov	r0, sl
   1afb8:	bl	11b28 <strchrnul@plt>
   1afbc:	add	r8, r8, #1
   1afc0:	mov	r7, r0
   1afc4:	cmp	r8, r6
   1afc8:	bcc	1afac <argp_failure@@Base+0xf04>
   1afcc:	b	1b050 <argp_failure@@Base+0xfa8>
   1afd0:	mov	r0, #0
   1afd4:	mov	r7, #0
   1afd8:	str	r0, [sp, #24]
   1afdc:	cmp	sl, #0
   1afe0:	beq	1b1b0 <argp_failure@@Base+0x1108>
   1afe4:	ldr	r0, [sl]
   1afe8:	cmp	r0, #0
   1afec:	beq	1b1b0 <argp_failure@@Base+0x1108>
   1aff0:	add	r6, sl, #16
   1aff4:	ldr	r5, [fp, #8]
   1aff8:	ldr	sl, [sp, #24]
   1affc:	mov	r1, r8
   1b000:	mov	r2, r9
   1b004:	mov	r3, r4
   1b008:	str	r5, [sp]
   1b00c:	bl	1aef8 <argp_failure@@Base+0xe50>
   1b010:	clz	r0, r0
   1b014:	lsr	r4, r0, #5
   1b018:	ldr	r0, [r6], #16
   1b01c:	cmp	r0, #0
   1b020:	bne	1affc <argp_failure@@Base+0xf54>
   1b024:	cmp	sl, #0
   1b028:	cmpne	r4, #0
   1b02c:	bne	1b1c0 <argp_failure@@Base+0x1118>
   1b030:	clz	r0, r4
   1b034:	lsr	r0, r0, #5
   1b038:	sub	sp, fp, #28
   1b03c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b040:	mov	r0, #0
   1b044:	mov	sl, r6
   1b048:	b	1b060 <argp_failure@@Base+0xfb8>
   1b04c:	ldr	sl, [sp, #16]
   1b050:	ldr	r0, [r9]
   1b054:	add	r0, r0, #1
   1b058:	str	r0, [r9]
   1b05c:	mov	r0, #1
   1b060:	str	r0, [sp, #24]
   1b064:	ldr	r8, [fp, #8]
   1b068:	sub	r2, r7, sl
   1b06c:	add	r6, r2, #1
   1b070:	ldr	r3, [r8, #24]
   1b074:	ldr	r0, [r8, #28]
   1b078:	ldr	r1, [r8, #16]
   1b07c:	sub	r3, r0, r3
   1b080:	cmp	r3, r1
   1b084:	bls	1b09c <argp_failure@@Base+0xff4>
   1b088:	mov	r0, r8
   1b08c:	mov	r5, r2
   1b090:	bl	1d86c <argp_failure@@Base+0x37c4>
   1b094:	ldr	r0, [r8, #28]
   1b098:	mov	r2, r5
   1b09c:	ldr	r3, [r8, #20]
   1b0a0:	ldr	r5, [r8, #8]
   1b0a4:	ldr	r1, [r8, #32]
   1b0a8:	cmp	r3, #0
   1b0ac:	addgt	r6, r6, r3
   1b0b0:	cmp	r6, r5
   1b0b4:	bcs	1b0fc <argp_failure@@Base+0x1054>
   1b0b8:	ldr	r8, [sp, #4]
   1b0bc:	cmp	r0, r1
   1b0c0:	bcc	1b0e8 <argp_failure@@Base+0x1040>
   1b0c4:	ldr	r6, [fp, #8]
   1b0c8:	mov	r1, #1
   1b0cc:	mov	r5, r2
   1b0d0:	mov	r0, r6
   1b0d4:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b0d8:	mov	r2, r5
   1b0dc:	cmp	r0, #0
   1b0e0:	beq	1b140 <argp_failure@@Base+0x1098>
   1b0e4:	ldr	r0, [r6, #28]
   1b0e8:	ldr	r6, [fp, #8]
   1b0ec:	add	r1, r0, #1
   1b0f0:	str	r1, [r6, #28]
   1b0f4:	mov	r1, #32
   1b0f8:	b	1b13c <argp_failure@@Base+0x1094>
   1b0fc:	ldr	r8, [sp, #4]
   1b100:	cmp	r0, r1
   1b104:	bcc	1b12c <argp_failure@@Base+0x1084>
   1b108:	ldr	r6, [fp, #8]
   1b10c:	mov	r1, #1
   1b110:	mov	r5, r2
   1b114:	mov	r0, r6
   1b118:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b11c:	mov	r2, r5
   1b120:	cmp	r0, #0
   1b124:	beq	1b140 <argp_failure@@Base+0x1098>
   1b128:	ldr	r0, [r6, #28]
   1b12c:	ldr	r6, [fp, #8]
   1b130:	add	r1, r0, #1
   1b134:	str	r1, [r6, #28]
   1b138:	mov	r1, #10
   1b13c:	strb	r1, [r0]
   1b140:	ldr	r0, [r6, #28]
   1b144:	ldr	r1, [r6, #32]
   1b148:	add	r3, r0, r2
   1b14c:	cmp	r3, r1
   1b150:	bls	1b178 <argp_failure@@Base+0x10d0>
   1b154:	mov	r0, r6
   1b158:	mov	r1, r2
   1b15c:	mov	r5, r2
   1b160:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b164:	cmp	r0, #0
   1b168:	beq	1b190 <argp_failure@@Base+0x10e8>
   1b16c:	ldr	r6, [fp, #8]
   1b170:	mov	r2, r5
   1b174:	ldr	r0, [r6, #28]
   1b178:	mov	r1, sl
   1b17c:	mov	r5, r2
   1b180:	bl	11b64 <memcpy@plt>
   1b184:	ldr	r0, [r6, #28]
   1b188:	add	r0, r0, r5
   1b18c:	str	r0, [r6, #28]
   1b190:	ldr	r0, [sp, #16]
   1b194:	ldr	r1, [sp, #12]
   1b198:	cmp	r0, r1
   1b19c:	beq	1b1a4 <argp_failure@@Base+0x10fc>
   1b1a0:	bl	17e80 <argp_parse@@Base+0x13dc>
   1b1a4:	ldr	sl, [sp, #8]
   1b1a8:	cmp	sl, #0
   1b1ac:	bne	1afe4 <argp_failure@@Base+0xf3c>
   1b1b0:	ldr	sl, [sp, #24]
   1b1b4:	cmp	sl, #0
   1b1b8:	cmpne	r4, #0
   1b1bc:	beq	1b030 <argp_failure@@Base+0xf88>
   1b1c0:	ldr	r2, [sp, #20]
   1b1c4:	ldrb	r1, [r7]
   1b1c8:	ldrb	r0, [r2]
   1b1cc:	cmp	r1, #0
   1b1d0:	beq	1b1f0 <argp_failure@@Base+0x1148>
   1b1d4:	add	r0, r0, #1
   1b1d8:	mov	r4, #0
   1b1dc:	strb	r0, [r2]
   1b1e0:	clz	r0, r4
   1b1e4:	lsr	r0, r0, #5
   1b1e8:	sub	sp, fp, #28
   1b1ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1f0:	cmp	r0, #0
   1b1f4:	movne	r0, #0
   1b1f8:	strbne	r0, [r2]
   1b1fc:	clz	r0, r4
   1b200:	lsr	r0, r0, #5
   1b204:	sub	sp, fp, #28
   1b208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b20c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b210:	add	fp, sp, #28
   1b214:	sub	sp, sp, #28
   1b218:	ldr	r6, [r0, #12]
   1b21c:	mov	r5, r0
   1b220:	ldr	r0, [r0, #16]
   1b224:	mov	sl, r2
   1b228:	mov	r7, #0
   1b22c:	str	r3, [sp, #24]
   1b230:	str	r1, [sp, #20]
   1b234:	cmp	r6, #0
   1b238:	str	r0, [sp, #16]
   1b23c:	beq	1b278 <argp_failure@@Base+0x11d0>
   1b240:	mov	r0, r6
   1b244:	mov	r1, #11
   1b248:	bl	11d44 <strchr@plt>
   1b24c:	cmp	r0, #0
   1b250:	mov	r9, r0
   1b254:	mov	r4, r0
   1b258:	subne	r9, r9, r6
   1b25c:	cmp	sl, #0
   1b260:	movne	r9, #0
   1b264:	cmp	r0, #0
   1b268:	addne	r4, r4, #1
   1b26c:	cmp	sl, #0
   1b270:	moveq	r4, r6
   1b274:	b	1b280 <argp_failure@@Base+0x11d8>
   1b278:	mov	r9, #0
   1b27c:	mov	r4, #0
   1b280:	ldr	r0, [r5, #20]
   1b284:	movw	r6, #1
   1b288:	movt	r6, #512	; 0x200
   1b28c:	cmp	r0, #0
   1b290:	beq	1b398 <argp_failure@@Base+0x12f0>
   1b294:	cmp	r9, #0
   1b298:	beq	1b2ac <argp_failure@@Base+0x1204>
   1b29c:	mov	r0, r4
   1b2a0:	mov	r1, r9
   1b2a4:	bl	11b4c <strndup@plt>
   1b2a8:	mov	r4, r0
   1b2ac:	ldr	r1, [sp, #20]
   1b2b0:	mov	r0, r5
   1b2b4:	bl	177d0 <argp_parse@@Base+0xd2c>
   1b2b8:	ldr	r3, [r5, #20]
   1b2bc:	mov	r7, r0
   1b2c0:	cmp	sl, #0
   1b2c4:	mov	r0, r6
   1b2c8:	mov	r1, r4
   1b2cc:	addne	r0, r0, #1
   1b2d0:	mov	r2, r7
   1b2d4:	blx	r3
   1b2d8:	mov	r3, r0
   1b2dc:	cmp	r3, #0
   1b2e0:	str	r7, [sp, #8]
   1b2e4:	beq	1b3a8 <argp_failure@@Base+0x1300>
   1b2e8:	ldr	r0, [sp, #24]
   1b2ec:	str	r3, [sp, #12]
   1b2f0:	cmp	r0, #0
   1b2f4:	beq	1b338 <argp_failure@@Base+0x1290>
   1b2f8:	ldr	r0, [fp, #12]
   1b2fc:	ldr	r2, [r0, #28]
   1b300:	ldr	r1, [r0, #32]
   1b304:	cmp	r2, r1
   1b308:	bcc	1b328 <argp_failure@@Base+0x1280>
   1b30c:	mov	r1, #1
   1b310:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b314:	ldr	r3, [sp, #12]
   1b318:	cmp	r0, #0
   1b31c:	beq	1b338 <argp_failure@@Base+0x1290>
   1b320:	ldr	r0, [fp, #12]
   1b324:	ldr	r2, [r0, #28]
   1b328:	add	r1, r2, #1
   1b32c:	str	r1, [r0, #28]
   1b330:	mov	r1, #10
   1b334:	strb	r1, [r2]
   1b338:	cmp	r9, #0
   1b33c:	beq	1b3bc <argp_failure@@Base+0x1314>
   1b340:	cmp	r3, r4
   1b344:	bne	1b3bc <argp_failure@@Base+0x1314>
   1b348:	mov	r7, r5
   1b34c:	ldr	r5, [fp, #12]
   1b350:	mov	r8, r6
   1b354:	ldr	r0, [r5, #28]
   1b358:	ldr	r1, [r5, #32]
   1b35c:	add	r2, r0, r9
   1b360:	cmp	r2, r1
   1b364:	bls	1b380 <argp_failure@@Base+0x12d8>
   1b368:	mov	r0, r5
   1b36c:	mov	r1, r9
   1b370:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b374:	cmp	r0, #0
   1b378:	beq	1b420 <argp_failure@@Base+0x1378>
   1b37c:	ldr	r0, [r5, #28]
   1b380:	mov	r1, r4
   1b384:	mov	r2, r9
   1b388:	bl	11b64 <memcpy@plt>
   1b38c:	ldr	r0, [r5, #28]
   1b390:	add	r0, r0, r9
   1b394:	b	1b41c <argp_failure@@Base+0x1374>
   1b398:	mov	r3, r4
   1b39c:	cmp	r3, #0
   1b3a0:	str	r7, [sp, #8]
   1b3a4:	bne	1b2e8 <argp_failure@@Base+0x1240>
   1b3a8:	mov	r8, #0
   1b3ac:	cmp	r9, #0
   1b3b0:	cmpne	r4, #0
   1b3b4:	beq	1b4d0 <argp_failure@@Base+0x1428>
   1b3b8:	b	1b4bc <argp_failure@@Base+0x1414>
   1b3bc:	mov	r0, r3
   1b3c0:	mov	r8, r6
   1b3c4:	mov	r7, r5
   1b3c8:	bl	11d2c <strlen@plt>
   1b3cc:	ldr	r5, [fp, #12]
   1b3d0:	cmp	r0, #0
   1b3d4:	beq	1b420 <argp_failure@@Base+0x1378>
   1b3d8:	mov	r6, r0
   1b3dc:	ldr	r0, [r5, #28]
   1b3e0:	ldr	r1, [r5, #32]
   1b3e4:	add	r2, r0, r6
   1b3e8:	cmp	r2, r1
   1b3ec:	bls	1b408 <argp_failure@@Base+0x1360>
   1b3f0:	mov	r0, r5
   1b3f4:	mov	r1, r6
   1b3f8:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b3fc:	cmp	r0, #0
   1b400:	beq	1b420 <argp_failure@@Base+0x1378>
   1b404:	ldr	r0, [r5, #28]
   1b408:	ldr	r1, [sp, #12]
   1b40c:	mov	r2, r6
   1b410:	bl	11b64 <memcpy@plt>
   1b414:	ldr	r0, [r5, #28]
   1b418:	add	r0, r0, r6
   1b41c:	str	r0, [r5, #28]
   1b420:	ldr	r1, [r5, #24]
   1b424:	ldr	r2, [r5, #28]
   1b428:	ldr	r0, [r5, #16]
   1b42c:	sub	r1, r2, r1
   1b430:	cmp	r1, r0
   1b434:	bls	1b440 <argp_failure@@Base+0x1398>
   1b438:	mov	r0, r5
   1b43c:	bl	1d86c <argp_failure@@Base+0x37c4>
   1b440:	ldr	r1, [r5, #20]
   1b444:	ldr	r0, [r5, #4]
   1b448:	ldr	r2, [sp, #12]
   1b44c:	mov	r6, r8
   1b450:	bic	r1, r1, r1, asr #31
   1b454:	cmp	r1, r0
   1b458:	bls	1b498 <argp_failure@@Base+0x13f0>
   1b45c:	ldr	r0, [r5, #28]
   1b460:	ldr	r1, [r5, #32]
   1b464:	cmp	r0, r1
   1b468:	bcc	1b488 <argp_failure@@Base+0x13e0>
   1b46c:	mov	r0, r5
   1b470:	mov	r1, #1
   1b474:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b478:	ldr	r2, [sp, #12]
   1b47c:	cmp	r0, #0
   1b480:	beq	1b498 <argp_failure@@Base+0x13f0>
   1b484:	ldr	r0, [r5, #28]
   1b488:	add	r1, r0, #1
   1b48c:	str	r1, [r5, #28]
   1b490:	mov	r1, #10
   1b494:	strb	r1, [r0]
   1b498:	mov	r8, #1
   1b49c:	cmp	r2, r4
   1b4a0:	beq	1b4ac <argp_failure@@Base+0x1404>
   1b4a4:	mov	r0, r2
   1b4a8:	bl	17e80 <argp_parse@@Base+0x13dc>
   1b4ac:	mov	r5, r7
   1b4b0:	cmp	r9, #0
   1b4b4:	cmpne	r4, #0
   1b4b8:	beq	1b4d0 <argp_failure@@Base+0x1428>
   1b4bc:	ldr	r0, [r5, #20]
   1b4c0:	cmp	r0, #0
   1b4c4:	beq	1b4d0 <argp_failure@@Base+0x1428>
   1b4c8:	mov	r0, r4
   1b4cc:	bl	17e80 <argp_parse@@Base+0x13dc>
   1b4d0:	str	sl, [sp, #12]
   1b4d4:	cmp	sl, #0
   1b4d8:	ldr	r9, [sp, #24]
   1b4dc:	ldr	sl, [sp, #20]
   1b4e0:	ldr	r4, [sp, #16]
   1b4e4:	beq	1b640 <argp_failure@@Base+0x1598>
   1b4e8:	ldr	r3, [r5, #20]
   1b4ec:	cmp	r3, #0
   1b4f0:	beq	1b640 <argp_failure@@Base+0x1598>
   1b4f4:	ldr	r2, [sp, #8]
   1b4f8:	add	r0, r6, #3
   1b4fc:	mov	r1, #0
   1b500:	blx	r3
   1b504:	cmp	r0, #0
   1b508:	beq	1b640 <argp_failure@@Base+0x1598>
   1b50c:	mov	r7, r0
   1b510:	orrs	r0, r8, r9
   1b514:	beq	1b554 <argp_failure@@Base+0x14ac>
   1b518:	ldr	r0, [fp, #12]
   1b51c:	ldr	r2, [r0, #28]
   1b520:	ldr	r1, [r0, #32]
   1b524:	cmp	r2, r1
   1b528:	bcc	1b544 <argp_failure@@Base+0x149c>
   1b52c:	mov	r1, #1
   1b530:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b534:	cmp	r0, #0
   1b538:	beq	1b554 <argp_failure@@Base+0x14ac>
   1b53c:	ldr	r0, [fp, #12]
   1b540:	ldr	r2, [r0, #28]
   1b544:	add	r1, r2, #1
   1b548:	str	r1, [r0, #28]
   1b54c:	mov	r1, #10
   1b550:	strb	r1, [r2]
   1b554:	mov	r0, r7
   1b558:	mov	r5, r4
   1b55c:	bl	11d2c <strlen@plt>
   1b560:	ldr	r4, [fp, #12]
   1b564:	cmp	r0, #0
   1b568:	beq	1b5b4 <argp_failure@@Base+0x150c>
   1b56c:	mov	r6, r0
   1b570:	ldr	r0, [r4, #28]
   1b574:	ldr	r1, [r4, #32]
   1b578:	add	r2, r0, r6
   1b57c:	cmp	r2, r1
   1b580:	bls	1b59c <argp_failure@@Base+0x14f4>
   1b584:	mov	r0, r4
   1b588:	mov	r1, r6
   1b58c:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b590:	cmp	r0, #0
   1b594:	beq	1b5b4 <argp_failure@@Base+0x150c>
   1b598:	ldr	r0, [r4, #28]
   1b59c:	mov	r1, r7
   1b5a0:	mov	r2, r6
   1b5a4:	bl	11b64 <memcpy@plt>
   1b5a8:	ldr	r0, [r4, #28]
   1b5ac:	add	r0, r0, r6
   1b5b0:	str	r0, [r4, #28]
   1b5b4:	mov	r0, r7
   1b5b8:	bl	17e80 <argp_parse@@Base+0x13dc>
   1b5bc:	ldr	r1, [r4, #24]
   1b5c0:	ldr	r2, [r4, #28]
   1b5c4:	ldr	r0, [r4, #16]
   1b5c8:	sub	r1, r2, r1
   1b5cc:	cmp	r1, r0
   1b5d0:	bls	1b5dc <argp_failure@@Base+0x1534>
   1b5d4:	mov	r0, r4
   1b5d8:	bl	1d86c <argp_failure@@Base+0x37c4>
   1b5dc:	ldr	r1, [r4, #20]
   1b5e0:	ldr	r0, [r4, #4]
   1b5e4:	mov	r8, #1
   1b5e8:	bic	r1, r1, r1, asr #31
   1b5ec:	cmp	r1, r0
   1b5f0:	bls	1b63c <argp_failure@@Base+0x1594>
   1b5f4:	ldr	r0, [r4, #28]
   1b5f8:	ldr	r1, [r4, #32]
   1b5fc:	cmp	r0, r1
   1b600:	bcc	1b628 <argp_failure@@Base+0x1580>
   1b604:	mov	r0, r4
   1b608:	mov	r1, #1
   1b60c:	mov	r8, #1
   1b610:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1b614:	cmp	r0, #0
   1b618:	mov	r4, r5
   1b61c:	beq	1b640 <argp_failure@@Base+0x1598>
   1b620:	ldr	r4, [fp, #12]
   1b624:	ldr	r0, [r4, #28]
   1b628:	add	r1, r0, #1
   1b62c:	mov	r8, #1
   1b630:	str	r1, [r4, #28]
   1b634:	mov	r1, #10
   1b638:	strb	r1, [r0]
   1b63c:	mov	r4, r5
   1b640:	cmp	r4, #0
   1b644:	beq	1b6e4 <argp_failure@@Base+0x163c>
   1b648:	ldr	r0, [r4]
   1b64c:	cmp	r0, #0
   1b650:	beq	1b6e4 <argp_failure@@Base+0x163c>
   1b654:	ldr	r7, [fp, #8]
   1b658:	cmp	r7, #0
   1b65c:	beq	1b6a8 <argp_failure@@Base+0x1600>
   1b660:	add	r6, r4, #16
   1b664:	ldr	r4, [fp, #12]
   1b668:	ldr	r5, [sp, #12]
   1b66c:	cmp	r9, #0
   1b670:	movwne	r9, #1
   1b674:	cmp	r8, #0
   1b678:	bne	1b6e4 <argp_failure@@Base+0x163c>
   1b67c:	mov	r1, sl
   1b680:	mov	r2, r5
   1b684:	mov	r3, r9
   1b688:	str	r7, [sp]
   1b68c:	str	r4, [sp, #4]
   1b690:	bl	1b20c <argp_failure@@Base+0x1164>
   1b694:	mov	r8, r0
   1b698:	ldr	r0, [r6], #16
   1b69c:	cmp	r0, #0
   1b6a0:	bne	1b674 <argp_failure@@Base+0x15cc>
   1b6a4:	b	1b6e4 <argp_failure@@Base+0x163c>
   1b6a8:	ldr	r5, [fp, #12]
   1b6ac:	ldr	r7, [sp, #12]
   1b6b0:	add	r4, r4, #16
   1b6b4:	mov	r6, #0
   1b6b8:	orrs	r3, r8, r9
   1b6bc:	mov	r1, sl
   1b6c0:	mov	r2, r7
   1b6c4:	str	r6, [sp]
   1b6c8:	str	r5, [sp, #4]
   1b6cc:	movwne	r3, #1
   1b6d0:	bl	1b20c <argp_failure@@Base+0x1164>
   1b6d4:	orr	r8, r0, r8
   1b6d8:	ldr	r0, [r4], #16
   1b6dc:	cmp	r0, #0
   1b6e0:	bne	1b6b8 <argp_failure@@Base+0x1610>
   1b6e4:	mov	r0, r8
   1b6e8:	sub	sp, fp, #28
   1b6ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b6f4:	add	fp, sp, #28
   1b6f8:	sub	sp, sp, #28
   1b6fc:	mov	r7, r0
   1b700:	ldr	r0, [r0, #16]
   1b704:	mov	r6, r1
   1b708:	cmp	r0, #0
   1b70c:	beq	1b754 <argp_failure@@Base+0x16ac>
   1b710:	mov	r2, r0
   1b714:	mov	r1, r2
   1b718:	ldr	r2, [r2, #12]
   1b71c:	cmp	r2, #0
   1b720:	bne	1b714 <argp_failure@@Base+0x166c>
   1b724:	add	r2, r1, #8
   1b728:	ldr	r1, [r6, #16]
   1b72c:	ldr	r3, [r2]
   1b730:	cmp	r1, #0
   1b734:	beq	1b768 <argp_failure@@Base+0x16c0>
   1b738:	mov	r2, r1
   1b73c:	mov	r5, r2
   1b740:	ldr	r2, [r2, #12]
   1b744:	cmp	r2, #0
   1b748:	bne	1b73c <argp_failure@@Base+0x1694>
   1b74c:	add	r2, r5, #8
   1b750:	b	1b76c <argp_failure@@Base+0x16c4>
   1b754:	add	r2, r7, #12
   1b758:	ldr	r1, [r6, #16]
   1b75c:	ldr	r3, [r2]
   1b760:	cmp	r1, #0
   1b764:	bne	1b738 <argp_failure@@Base+0x1690>
   1b768:	add	r2, r6, #12
   1b76c:	ldr	r5, [r2]
   1b770:	orr	r4, r5, r3
   1b774:	sub	r2, r3, r5
   1b778:	cmn	r4, #1
   1b77c:	mov	r4, r2
   1b780:	suble	r4, r5, r3
   1b784:	ands	r3, r5, r3
   1b788:	movmi	r4, r2
   1b78c:	cmp	r4, #0
   1b790:	bne	1b7b0 <argp_failure@@Base+0x1708>
   1b794:	cmp	r0, #0
   1b798:	mov	r4, r0
   1b79c:	movwne	r4, #1
   1b7a0:	cmp	r1, #0
   1b7a4:	subne	r4, r4, #1
   1b7a8:	cmp	r4, #0
   1b7ac:	beq	1b7bc <argp_failure@@Base+0x1714>
   1b7b0:	mov	r0, r4
   1b7b4:	sub	sp, fp, #28
   1b7b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7bc:	cmp	r0, #0
   1b7c0:	beq	1b840 <argp_failure@@Base+0x1798>
   1b7c4:	ldr	r3, [r1, #20]
   1b7c8:	ldr	r2, [r0, #20]
   1b7cc:	cmp	r2, r3
   1b7d0:	ble	1b800 <argp_failure@@Base+0x1758>
   1b7d4:	ldr	r0, [r0, #12]
   1b7d8:	ldr	r2, [r0, #20]
   1b7dc:	cmp	r2, r3
   1b7e0:	bgt	1b7d4 <argp_failure@@Base+0x172c>
   1b7e4:	bl	1bc88 <argp_failure@@Base+0x1be0>
   1b7e8:	cmp	r0, #0
   1b7ec:	mov	r4, r0
   1b7f0:	movweq	r4, #1
   1b7f4:	mov	r0, r4
   1b7f8:	sub	sp, fp, #28
   1b7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b800:	bge	1b830 <argp_failure@@Base+0x1788>
   1b804:	ldr	r1, [r1, #12]
   1b808:	ldr	r3, [r1, #20]
   1b80c:	cmp	r2, r3
   1b810:	blt	1b804 <argp_failure@@Base+0x175c>
   1b814:	bl	1bc88 <argp_failure@@Base+0x1be0>
   1b818:	cmp	r0, #0
   1b81c:	mov	r4, r0
   1b820:	mvneq	r4, #0
   1b824:	mov	r0, r4
   1b828:	sub	sp, fp, #28
   1b82c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b830:	bl	1bc88 <argp_failure@@Base+0x1be0>
   1b834:	mov	r4, r0
   1b838:	cmp	r0, #0
   1b83c:	bne	1b7b0 <argp_failure@@Base+0x1708>
   1b840:	ldr	r0, [r7, #12]
   1b844:	ldr	r1, [r6, #12]
   1b848:	orr	r2, r1, r0
   1b84c:	sub	r3, r0, r1
   1b850:	cmn	r2, #1
   1b854:	mov	r4, r3
   1b858:	suble	r4, r1, r0
   1b85c:	ands	r0, r1, r0
   1b860:	movmi	r4, r3
   1b864:	cmp	r4, #0
   1b868:	bne	1b7b0 <argp_failure@@Base+0x1708>
   1b86c:	ldr	r4, [r7, #4]
   1b870:	ldr	sl, [r7]
   1b874:	mov	r9, #0
   1b878:	cmp	r4, #0
   1b87c:	beq	1b8c0 <argp_failure@@Base+0x1818>
   1b880:	add	r0, sl, #12
   1b884:	mov	r1, r4
   1b888:	ldr	r9, [r0, #-12]
   1b88c:	cmp	r9, #0
   1b890:	bne	1b8ac <argp_failure@@Base+0x1804>
   1b894:	add	r0, r0, #24
   1b898:	subs	r1, r1, #1
   1b89c:	beq	1b8bc <argp_failure@@Base+0x1814>
   1b8a0:	ldr	r9, [r0, #-12]
   1b8a4:	cmp	r9, #0
   1b8a8:	beq	1b894 <argp_failure@@Base+0x17ec>
   1b8ac:	ldrb	r2, [r0]
   1b8b0:	tst	r2, #2
   1b8b4:	bne	1b894 <argp_failure@@Base+0x17ec>
   1b8b8:	b	1b8c0 <argp_failure@@Base+0x1818>
   1b8bc:	mov	r9, #0
   1b8c0:	ldr	r3, [r6, #4]
   1b8c4:	ldr	ip, [r6]
   1b8c8:	cmp	r3, #0
   1b8cc:	beq	1b90c <argp_failure@@Base+0x1864>
   1b8d0:	add	r0, ip, #12
   1b8d4:	mov	r1, r3
   1b8d8:	ldr	r5, [r0, #-12]
   1b8dc:	cmp	r5, #0
   1b8e0:	bne	1b8fc <argp_failure@@Base+0x1854>
   1b8e4:	add	r0, r0, #24
   1b8e8:	subs	r1, r1, #1
   1b8ec:	beq	1b90c <argp_failure@@Base+0x1864>
   1b8f0:	ldr	r5, [r0, #-12]
   1b8f4:	cmp	r5, #0
   1b8f8:	beq	1b8e4 <argp_failure@@Base+0x183c>
   1b8fc:	ldrb	r2, [r0]
   1b900:	tst	r2, #2
   1b904:	bne	1b8e4 <argp_failure@@Base+0x183c>
   1b908:	b	1b910 <argp_failure@@Base+0x1868>
   1b90c:	mov	r5, #0
   1b910:	ldr	r1, [sl, #12]
   1b914:	mov	r8, #0
   1b918:	cmp	r9, #0
   1b91c:	str	r4, [sp, #12]
   1b920:	str	r3, [sp, #16]
   1b924:	str	sl, [sp, #8]
   1b928:	str	r1, [sp, #24]
   1b92c:	beq	1b9a4 <argp_failure@@Base+0x18fc>
   1b930:	ands	r0, r1, #8
   1b934:	beq	1b9a4 <argp_failure@@Base+0x18fc>
   1b938:	str	ip, [sp, #20]
   1b93c:	bl	11cf0 <__ctype_b_loc@plt>
   1b940:	ldrb	r1, [r9]
   1b944:	ldr	r0, [r0]
   1b948:	add	r2, r0, r1, lsl #1
   1b94c:	ldrb	r2, [r2, #1]
   1b950:	tst	r2, #32
   1b954:	beq	1b96c <argp_failure@@Base+0x18c4>
   1b958:	ldrb	r1, [r9, #1]!
   1b95c:	add	r2, r0, r1, lsl #1
   1b960:	ldrb	r2, [r2, #1]
   1b964:	tst	r2, #32
   1b968:	bne	1b958 <argp_failure@@Base+0x18b0>
   1b96c:	ldr	ip, [sp, #20]
   1b970:	subs	r4, r1, #45	; 0x2d
   1b974:	movwne	r4, #1
   1b978:	cmp	r1, #0
   1b97c:	beq	1b99c <argp_failure@@Base+0x18f4>
   1b980:	uxtb	r1, r1
   1b984:	ldrb	r1, [r0, r1, lsl #1]
   1b988:	tst	r1, #8
   1b98c:	bne	1b99c <argp_failure@@Base+0x18f4>
   1b990:	ldrb	r1, [r9, #1]!
   1b994:	cmp	r1, #0
   1b998:	bne	1b980 <argp_failure@@Base+0x18d8>
   1b99c:	ldr	r1, [sp, #24]
   1b9a0:	b	1b9a8 <argp_failure@@Base+0x1900>
   1b9a4:	mov	r4, #0
   1b9a8:	ldr	r0, [ip, #12]
   1b9ac:	cmp	r5, #0
   1b9b0:	str	r0, [sp, #4]
   1b9b4:	andsne	r0, r0, #8
   1b9b8:	beq	1ba24 <argp_failure@@Base+0x197c>
   1b9bc:	mov	sl, ip
   1b9c0:	bl	11cf0 <__ctype_b_loc@plt>
   1b9c4:	ldrb	r1, [r5]
   1b9c8:	ldr	r0, [r0]
   1b9cc:	add	r2, r0, r1, lsl #1
   1b9d0:	ldrb	r2, [r2, #1]
   1b9d4:	tst	r2, #32
   1b9d8:	beq	1b9f0 <argp_failure@@Base+0x1948>
   1b9dc:	ldrb	r1, [r5, #1]!
   1b9e0:	add	r2, r0, r1, lsl #1
   1b9e4:	ldrb	r2, [r2, #1]
   1b9e8:	tst	r2, #32
   1b9ec:	bne	1b9dc <argp_failure@@Base+0x1934>
   1b9f0:	subs	r8, r1, #45	; 0x2d
   1b9f4:	mov	ip, sl
   1b9f8:	movwne	r8, #1
   1b9fc:	cmp	r1, #0
   1ba00:	beq	1ba20 <argp_failure@@Base+0x1978>
   1ba04:	uxtb	r1, r1
   1ba08:	ldrb	r1, [r0, r1, lsl #1]
   1ba0c:	tst	r1, #8
   1ba10:	bne	1ba20 <argp_failure@@Base+0x1978>
   1ba14:	ldrb	r1, [r5, #1]!
   1ba18:	cmp	r1, #0
   1ba1c:	bne	1ba04 <argp_failure@@Base+0x195c>
   1ba20:	ldr	r1, [sp, #24]
   1ba24:	subs	r4, r4, r8
   1ba28:	bne	1b7b0 <argp_failure@@Base+0x1708>
   1ba2c:	ldr	r0, [sp, #12]
   1ba30:	mov	r2, #0
   1ba34:	str	ip, [sp, #20]
   1ba38:	cmp	r0, #0
   1ba3c:	beq	1bad4 <argp_failure@@Base+0x1a2c>
   1ba40:	sub	sl, r0, #1
   1ba44:	ldr	r0, [sp, #8]
   1ba48:	ldr	r4, [r7, #8]
   1ba4c:	add	r8, r0, #36	; 0x24
   1ba50:	tst	r1, #8
   1ba54:	beq	1ba7c <argp_failure@@Base+0x19d4>
   1ba58:	mov	r2, #0
   1ba5c:	cmp	sl, #0
   1ba60:	beq	1bad4 <argp_failure@@Base+0x1a2c>
   1ba64:	cmp	r2, #0
   1ba68:	bne	1bad4 <argp_failure@@Base+0x1a2c>
   1ba6c:	ldr	r1, [r8], #24
   1ba70:	sub	sl, sl, #1
   1ba74:	tst	r1, #8
   1ba78:	bne	1ba58 <argp_failure@@Base+0x19b0>
   1ba7c:	ldr	r7, [r8, #-32]	; 0xffffffe0
   1ba80:	sub	r0, r7, #1
   1ba84:	cmp	r0, #254	; 0xfe
   1ba88:	bhi	1ba58 <argp_failure@@Base+0x19b0>
   1ba8c:	str	r1, [sp, #24]
   1ba90:	bl	11cf0 <__ctype_b_loc@plt>
   1ba94:	ldr	r0, [r0]
   1ba98:	add	r0, r0, r7, lsl #1
   1ba9c:	ldrb	r0, [r0, #1]
   1baa0:	tst	r0, #64	; 0x40
   1baa4:	beq	1ba58 <argp_failure@@Base+0x19b0>
   1baa8:	ldrb	r0, [r4]
   1baac:	mov	r2, r7
   1bab0:	cmp	r7, r0
   1bab4:	bne	1ba58 <argp_failure@@Base+0x19b0>
   1bab8:	ldr	r0, [sp, #24]
   1babc:	add	r4, r4, #1
   1bac0:	tst	r0, #2
   1bac4:	mov	r0, #0
   1bac8:	movne	r2, r0
   1bacc:	cmp	sl, #0
   1bad0:	bne	1ba64 <argp_failure@@Base+0x19bc>
   1bad4:	ldr	r0, [sp, #16]
   1bad8:	mov	sl, #0
   1badc:	mov	r1, r2
   1bae0:	str	r2, [sp, #24]
   1bae4:	cmp	r0, #0
   1bae8:	beq	1bb84 <argp_failure@@Base+0x1adc>
   1baec:	sub	r7, r0, #1
   1baf0:	ldr	r0, [sp, #20]
   1baf4:	ldr	r6, [r6, #8]
   1baf8:	ldr	r4, [sp, #4]
   1bafc:	add	r8, r0, #36	; 0x24
   1bb00:	tst	r4, #8
   1bb04:	bne	1bb10 <argp_failure@@Base+0x1a68>
   1bb08:	b	1bb34 <argp_failure@@Base+0x1a8c>
   1bb0c:	ldr	r2, [sp, #24]
   1bb10:	mov	sl, #0
   1bb14:	cmp	r7, #0
   1bb18:	beq	1bb84 <argp_failure@@Base+0x1adc>
   1bb1c:	cmp	sl, #0
   1bb20:	bne	1bb84 <argp_failure@@Base+0x1adc>
   1bb24:	ldr	r4, [r8], #24
   1bb28:	sub	r7, r7, #1
   1bb2c:	tst	r4, #8
   1bb30:	bne	1bb10 <argp_failure@@Base+0x1a68>
   1bb34:	ldr	sl, [r8, #-32]	; 0xffffffe0
   1bb38:	sub	r0, sl, #1
   1bb3c:	cmp	r0, #254	; 0xfe
   1bb40:	bhi	1bb10 <argp_failure@@Base+0x1a68>
   1bb44:	bl	11cf0 <__ctype_b_loc@plt>
   1bb48:	ldr	r0, [r0]
   1bb4c:	add	r0, r0, sl, lsl #1
   1bb50:	ldrb	r0, [r0, #1]
   1bb54:	tst	r0, #64	; 0x40
   1bb58:	beq	1bb0c <argp_failure@@Base+0x1a64>
   1bb5c:	ldrb	r0, [r6]
   1bb60:	ldr	r2, [sp, #24]
   1bb64:	cmp	sl, r0
   1bb68:	bne	1bb10 <argp_failure@@Base+0x1a68>
   1bb6c:	tst	r4, #2
   1bb70:	mov	r0, #0
   1bb74:	add	r6, r6, #1
   1bb78:	movne	sl, r0
   1bb7c:	cmp	r7, #0
   1bb80:	bne	1bb1c <argp_failure@@Base+0x1a74>
   1bb84:	tst	r2, #255	; 0xff
   1bb88:	mov	r6, r2
   1bb8c:	beq	1bbac <argp_failure@@Base+0x1b04>
   1bb90:	tst	sl, #255	; 0xff
   1bb94:	mov	r7, sl
   1bb98:	bne	1bbe0 <argp_failure@@Base+0x1b38>
   1bb9c:	cmp	r5, #0
   1bba0:	beq	1bbc8 <argp_failure@@Base+0x1b20>
   1bba4:	ldrb	r7, [r5]
   1bba8:	b	1bbe0 <argp_failure@@Base+0x1b38>
   1bbac:	cmp	r9, #0
   1bbb0:	beq	1bbd0 <argp_failure@@Base+0x1b28>
   1bbb4:	ldrb	r6, [r9]
   1bbb8:	tst	sl, #255	; 0xff
   1bbbc:	mov	r7, sl
   1bbc0:	bne	1bbe0 <argp_failure@@Base+0x1b38>
   1bbc4:	b	1bb9c <argp_failure@@Base+0x1af4>
   1bbc8:	mov	r7, #0
   1bbcc:	b	1bbe0 <argp_failure@@Base+0x1b38>
   1bbd0:	mov	r6, #0
   1bbd4:	tst	sl, #255	; 0xff
   1bbd8:	mov	r7, sl
   1bbdc:	beq	1bb9c <argp_failure@@Base+0x1af4>
   1bbe0:	bl	11cd8 <__ctype_tolower_loc@plt>
   1bbe4:	ldr	r2, [r0]
   1bbe8:	uxtb	r0, r7
   1bbec:	uxtb	r1, r6
   1bbf0:	ldr	r3, [r2, r0, lsl #2]
   1bbf4:	ldr	r2, [r2, r1, lsl #2]
   1bbf8:	subs	r4, r2, r3
   1bbfc:	subseq	r4, r0, r1
   1bc00:	bne	1b7b0 <argp_failure@@Base+0x1708>
   1bc04:	ldr	r0, [sp, #24]
   1bc08:	uxtb	r4, r0
   1bc0c:	cmp	r4, #0
   1bc10:	movwne	r4, #1
   1bc14:	tst	sl, #255	; 0xff
   1bc18:	subne	r4, r4, #1
   1bc1c:	cmp	r4, #0
   1bc20:	bne	1b7b0 <argp_failure@@Base+0x1708>
   1bc24:	ldr	r0, [sp, #24]
   1bc28:	tst	r0, #255	; 0xff
   1bc2c:	beq	1bc40 <argp_failure@@Base+0x1b98>
   1bc30:	mov	r4, #0
   1bc34:	mov	r0, r4
   1bc38:	sub	sp, fp, #28
   1bc3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc40:	cmp	r9, #0
   1bc44:	mov	r4, r9
   1bc48:	movwne	r4, #1
   1bc4c:	cmp	r5, #0
   1bc50:	subne	r4, r4, #1
   1bc54:	cmp	r4, #0
   1bc58:	bne	1b7b0 <argp_failure@@Base+0x1708>
   1bc5c:	cmp	r9, #0
   1bc60:	beq	1bc30 <argp_failure@@Base+0x1b88>
   1bc64:	mov	r0, r9
   1bc68:	mov	r1, r5
   1bc6c:	bl	11c18 <strcasecmp@plt>
   1bc70:	cmp	r0, #0
   1bc74:	mov	r4, r0
   1bc78:	moveq	r4, #0
   1bc7c:	mov	r0, r4
   1bc80:	sub	sp, fp, #28
   1bc84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc88:	push	{r4, r5, fp, lr}
   1bc8c:	add	fp, sp, #8
   1bc90:	mov	r4, r1
   1bc94:	mov	r5, r0
   1bc98:	ldr	r1, [r1, #12]
   1bc9c:	ldr	r0, [r0, #12]
   1bca0:	cmp	r0, r1
   1bca4:	beq	1bcb8 <argp_failure@@Base+0x1c10>
   1bca8:	bl	1bc88 <argp_failure@@Base+0x1be0>
   1bcac:	cmp	r0, #0
   1bcb0:	beq	1bcb8 <argp_failure@@Base+0x1c10>
   1bcb4:	pop	{r4, r5, fp, pc}
   1bcb8:	ldr	r1, [r5, #8]
   1bcbc:	ldr	r2, [r4, #8]
   1bcc0:	orr	r0, r2, r1
   1bcc4:	sub	r3, r1, r2
   1bcc8:	cmn	r0, #1
   1bccc:	mov	r0, r3
   1bcd0:	suble	r0, r2, r1
   1bcd4:	ands	r1, r2, r1
   1bcd8:	movmi	r0, r3
   1bcdc:	cmp	r0, #0
   1bce0:	popne	{r4, r5, fp, pc}
   1bce4:	ldr	r0, [r5, #4]
   1bce8:	ldr	r1, [r4, #4]
   1bcec:	sub	r0, r1, r0
   1bcf0:	pop	{r4, r5, fp, pc}
   1bcf4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bcf8:	add	fp, sp, #24
   1bcfc:	mov	r4, r0
   1bd00:	ldr	r0, [r1, #12]
   1bd04:	mov	r5, r1
   1bd08:	cmp	r0, #0
   1bd0c:	beq	1bd88 <argp_failure@@Base+0x1ce0>
   1bd10:	ldr	r1, [r5, #8]
   1bd14:	ldr	r0, [r5]
   1bd18:	ldr	r6, [r1]
   1bd1c:	ldr	r7, [r0, #16]
   1bd20:	cmp	r6, #0
   1bd24:	ldrne	r1, [r1, #4]
   1bd28:	cmpne	r1, #0
   1bd2c:	bne	1bdd0 <argp_failure@@Base+0x1d28>
   1bd30:	cmp	r7, #0
   1bd34:	beq	1be70 <argp_failure@@Base+0x1dc8>
   1bd38:	ldr	r0, [r7]
   1bd3c:	cmp	r0, #0
   1bd40:	beq	1be70 <argp_failure@@Base+0x1dc8>
   1bd44:	ldrb	r1, [r0]
   1bd48:	cmp	r1, #0
   1bd4c:	beq	1be70 <argp_failure@@Base+0x1dc8>
   1bd50:	cmp	r6, #0
   1bd54:	beq	1be34 <argp_failure@@Base+0x1d8c>
   1bd58:	ldr	r1, [r6, #16]
   1bd5c:	cmp	r1, r7
   1bd60:	beq	1be70 <argp_failure@@Base+0x1dc8>
   1bd64:	cmp	r1, #0
   1bd68:	beq	1be28 <argp_failure@@Base+0x1d80>
   1bd6c:	ldr	r1, [r1, #12]
   1bd70:	cmp	r1, r7
   1bd74:	cmpne	r1, #0
   1bd78:	bne	1bd6c <argp_failure@@Base+0x1cc4>
   1bd7c:	cmp	r1, r7
   1bd80:	bne	1be34 <argp_failure@@Base+0x1d8c>
   1bd84:	b	1be70 <argp_failure@@Base+0x1dc8>
   1bd88:	ldr	r6, [r5, #4]
   1bd8c:	ldr	r0, [r6, #28]
   1bd90:	ldr	r1, [r6, #32]
   1bd94:	add	r2, r0, #2
   1bd98:	cmp	r2, r1
   1bd9c:	bls	1bdb8 <argp_failure@@Base+0x1d10>
   1bda0:	mov	r0, r6
   1bda4:	mov	r1, #2
   1bda8:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1bdac:	cmp	r0, #0
   1bdb0:	beq	1be78 <argp_failure@@Base+0x1dd0>
   1bdb4:	ldr	r0, [r6, #28]
   1bdb8:	movw	r1, #8236	; 0x202c
   1bdbc:	strh	r1, [r0]
   1bdc0:	ldr	r0, [r6, #28]
   1bdc4:	add	r0, r0, #2
   1bdc8:	str	r0, [r6, #28]
   1bdcc:	b	1be78 <argp_failure@@Base+0x1dd0>
   1bdd0:	ldr	r1, [r6, #12]
   1bdd4:	ldr	r0, [r0, #12]
   1bdd8:	cmp	r0, r1
   1bddc:	beq	1bd30 <argp_failure@@Base+0x1c88>
   1bde0:	ldr	r8, [r5, #4]
   1bde4:	ldr	r0, [r8, #28]
   1bde8:	ldr	r1, [r8, #32]
   1bdec:	cmp	r0, r1
   1bdf0:	bcc	1be0c <argp_failure@@Base+0x1d64>
   1bdf4:	mov	r0, r8
   1bdf8:	mov	r1, #1
   1bdfc:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1be00:	cmp	r0, #0
   1be04:	beq	1bd30 <argp_failure@@Base+0x1c88>
   1be08:	ldr	r0, [r8, #28]
   1be0c:	add	r1, r0, #1
   1be10:	str	r1, [r8, #28]
   1be14:	mov	r1, #10
   1be18:	strb	r1, [r0]
   1be1c:	cmp	r7, #0
   1be20:	bne	1bd38 <argp_failure@@Base+0x1c90>
   1be24:	b	1be70 <argp_failure@@Base+0x1dc8>
   1be28:	mov	r1, #0
   1be2c:	cmp	r1, r7
   1be30:	beq	1be70 <argp_failure@@Base+0x1dc8>
   1be34:	ldr	r1, [r5, #4]
   1be38:	mov	r2, r5
   1be3c:	ldr	r8, [r1, #12]
   1be40:	ldr	r1, [r7, #16]
   1be44:	bl	1bf00 <argp_failure@@Base+0x1e58>
   1be48:	ldr	r6, [r5, #4]
   1be4c:	ldr	r1, [r6, #24]
   1be50:	ldr	r2, [r6, #28]
   1be54:	ldr	r0, [r6, #16]
   1be58:	sub	r1, r2, r1
   1be5c:	cmp	r1, r0
   1be60:	bls	1be6c <argp_failure@@Base+0x1dc4>
   1be64:	mov	r0, r6
   1be68:	bl	1d86c <argp_failure@@Base+0x37c4>
   1be6c:	str	r8, [r6, #12]
   1be70:	mov	r0, #0
   1be74:	str	r0, [r5, #12]
   1be78:	ldr	r5, [r5, #4]
   1be7c:	ldr	r1, [r5, #24]
   1be80:	ldr	r2, [r5, #28]
   1be84:	ldr	r0, [r5, #16]
   1be88:	sub	r1, r2, r1
   1be8c:	cmp	r1, r0
   1be90:	bls	1be9c <argp_failure@@Base+0x1df4>
   1be94:	mov	r0, r5
   1be98:	bl	1d86c <argp_failure@@Base+0x37c4>
   1be9c:	ldr	r0, [r5, #20]
   1bea0:	cmp	r0, #0
   1bea4:	subgt	r4, r4, r0
   1bea8:	cmp	r4, #1
   1beac:	blt	1befc <argp_failure@@Base+0x1e54>
   1beb0:	mov	r6, #32
   1beb4:	b	1becc <argp_failure@@Base+0x1e24>
   1beb8:	add	r1, r0, #1
   1bebc:	str	r1, [r5, #28]
   1bec0:	strb	r6, [r0]
   1bec4:	cmp	r4, #0
   1bec8:	ble	1befc <argp_failure@@Base+0x1e54>
   1becc:	ldr	r0, [r5, #28]
   1bed0:	ldr	r1, [r5, #32]
   1bed4:	sub	r4, r4, #1
   1bed8:	cmp	r0, r1
   1bedc:	bcc	1beb8 <argp_failure@@Base+0x1e10>
   1bee0:	mov	r0, r5
   1bee4:	mov	r1, #1
   1bee8:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1beec:	cmp	r0, #0
   1bef0:	beq	1bec4 <argp_failure@@Base+0x1e1c>
   1bef4:	ldr	r0, [r5, #28]
   1bef8:	b	1beb8 <argp_failure@@Base+0x1e10>
   1befc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bf00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf04:	add	fp, sp, #28
   1bf08:	sub	sp, sp, #4
   1bf0c:	mov	r9, r2
   1bf10:	mov	r8, r0
   1bf14:	cmp	r1, #0
   1bf18:	mov	r6, r0
   1bf1c:	beq	1bf5c <argp_failure@@Base+0x1eb4>
   1bf20:	ldr	r0, [r1, #20]
   1bf24:	mov	r4, r1
   1bf28:	mov	r6, r8
   1bf2c:	cmp	r0, #0
   1bf30:	beq	1bf5c <argp_failure@@Base+0x1eb4>
   1bf34:	ldr	r1, [r9, #16]
   1bf38:	mov	r0, r4
   1bf3c:	bl	177d0 <argp_parse@@Base+0xd2c>
   1bf40:	ldr	r3, [r4, #20]
   1bf44:	mov	r2, r0
   1bf48:	movw	r0, #3
   1bf4c:	mov	r1, r8
   1bf50:	movt	r0, #512	; 0x200
   1bf54:	blx	r3
   1bf58:	mov	r6, r0
   1bf5c:	cmp	r6, #0
   1bf60:	beq	1c18c <argp_failure@@Base+0x20e4>
   1bf64:	ldrb	r0, [r6]
   1bf68:	cmp	r0, #0
   1bf6c:	beq	1c180 <argp_failure@@Base+0x20d8>
   1bf70:	ldr	r0, [r9, #8]
   1bf74:	ldr	r0, [r0]
   1bf78:	cmp	r0, #0
   1bf7c:	beq	1bfbc <argp_failure@@Base+0x1f14>
   1bf80:	ldr	r4, [r9, #4]
   1bf84:	ldr	r0, [r4, #28]
   1bf88:	ldr	r1, [r4, #32]
   1bf8c:	cmp	r0, r1
   1bf90:	bcc	1bfac <argp_failure@@Base+0x1f04>
   1bf94:	mov	r0, r4
   1bf98:	mov	r1, #1
   1bf9c:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1bfa0:	cmp	r0, #0
   1bfa4:	beq	1bfbc <argp_failure@@Base+0x1f14>
   1bfa8:	ldr	r0, [r4, #28]
   1bfac:	add	r1, r0, #1
   1bfb0:	str	r1, [r4, #28]
   1bfb4:	mov	r1, #10
   1bfb8:	strb	r1, [r0]
   1bfbc:	ldr	r7, [r9, #4]
   1bfc0:	movw	sl, #880	; 0x370
   1bfc4:	movt	sl, #3
   1bfc8:	ldr	r4, [sl, #24]
   1bfcc:	ldr	r1, [r7, #24]
   1bfd0:	ldr	r2, [r7, #28]
   1bfd4:	ldr	r0, [r7, #16]
   1bfd8:	sub	r1, r2, r1
   1bfdc:	cmp	r1, r0
   1bfe0:	bls	1bfec <argp_failure@@Base+0x1f44>
   1bfe4:	mov	r0, r7
   1bfe8:	bl	1d86c <argp_failure@@Base+0x37c4>
   1bfec:	ldr	r0, [r7, #20]
   1bff0:	cmp	r0, #0
   1bff4:	subgt	r4, r4, r0
   1bff8:	cmp	r4, #1
   1bffc:	blt	1c04c <argp_failure@@Base+0x1fa4>
   1c000:	mov	r5, #32
   1c004:	b	1c01c <argp_failure@@Base+0x1f74>
   1c008:	add	r1, r0, #1
   1c00c:	str	r1, [r7, #28]
   1c010:	strb	r5, [r0]
   1c014:	cmp	r4, #0
   1c018:	ble	1c04c <argp_failure@@Base+0x1fa4>
   1c01c:	ldr	r0, [r7, #28]
   1c020:	ldr	r1, [r7, #32]
   1c024:	sub	r4, r4, #1
   1c028:	cmp	r0, r1
   1c02c:	bcc	1c008 <argp_failure@@Base+0x1f60>
   1c030:	mov	r0, r7
   1c034:	mov	r1, #1
   1c038:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1c03c:	cmp	r0, #0
   1c040:	beq	1c014 <argp_failure@@Base+0x1f6c>
   1c044:	ldr	r0, [r7, #28]
   1c048:	b	1c008 <argp_failure@@Base+0x1f60>
   1c04c:	ldr	r4, [r9, #4]
   1c050:	ldr	r5, [sl, #24]
   1c054:	ldr	r1, [r4, #24]
   1c058:	ldr	r2, [r4, #28]
   1c05c:	ldr	r0, [r4, #16]
   1c060:	mov	r7, r4
   1c064:	sub	r1, r2, r1
   1c068:	mov	r2, sl
   1c06c:	mov	sl, r5
   1c070:	cmp	r1, r0
   1c074:	bls	1c09c <argp_failure@@Base+0x1ff4>
   1c078:	mov	r0, r4
   1c07c:	mov	r7, r2
   1c080:	bl	1d86c <argp_failure@@Base+0x37c4>
   1c084:	ldr	sl, [r7, #24]
   1c088:	ldr	r7, [r9, #4]
   1c08c:	ldr	r1, [r7, #24]
   1c090:	ldr	r2, [r7, #28]
   1c094:	ldr	r0, [r7, #16]
   1c098:	sub	r1, r2, r1
   1c09c:	str	r5, [r4, #4]
   1c0a0:	cmp	r1, r0
   1c0a4:	mov	r5, r7
   1c0a8:	bls	1c0b8 <argp_failure@@Base+0x2010>
   1c0ac:	mov	r0, r7
   1c0b0:	bl	1d86c <argp_failure@@Base+0x37c4>
   1c0b4:	ldr	r5, [r9, #4]
   1c0b8:	mov	r0, r6
   1c0bc:	str	sl, [r7, #12]
   1c0c0:	bl	11d2c <strlen@plt>
   1c0c4:	cmp	r0, #0
   1c0c8:	beq	1c114 <argp_failure@@Base+0x206c>
   1c0cc:	mov	r4, r0
   1c0d0:	ldr	r0, [r5, #28]
   1c0d4:	ldr	r1, [r5, #32]
   1c0d8:	add	r2, r0, r4
   1c0dc:	cmp	r2, r1
   1c0e0:	bls	1c0fc <argp_failure@@Base+0x2054>
   1c0e4:	mov	r0, r5
   1c0e8:	mov	r1, r4
   1c0ec:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1c0f0:	cmp	r0, #0
   1c0f4:	beq	1c114 <argp_failure@@Base+0x206c>
   1c0f8:	ldr	r0, [r5, #28]
   1c0fc:	mov	r1, r6
   1c100:	mov	r2, r4
   1c104:	bl	11b64 <memcpy@plt>
   1c108:	ldr	r0, [r5, #28]
   1c10c:	add	r0, r0, r4
   1c110:	str	r0, [r5, #28]
   1c114:	ldr	r5, [r9, #4]
   1c118:	ldr	r2, [r5, #24]
   1c11c:	ldr	r0, [r5, #28]
   1c120:	ldr	r1, [r5, #16]
   1c124:	mov	r4, r5
   1c128:	sub	r2, r0, r2
   1c12c:	cmp	r2, r1
   1c130:	bls	1c144 <argp_failure@@Base+0x209c>
   1c134:	mov	r0, r5
   1c138:	bl	1d86c <argp_failure@@Base+0x37c4>
   1c13c:	ldr	r4, [r9, #4]
   1c140:	ldr	r0, [r4, #28]
   1c144:	mov	r1, #0
   1c148:	str	r1, [r5, #4]
   1c14c:	ldr	r1, [r4, #32]
   1c150:	cmp	r0, r1
   1c154:	bcc	1c170 <argp_failure@@Base+0x20c8>
   1c158:	mov	r0, r4
   1c15c:	mov	r1, #1
   1c160:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1c164:	cmp	r0, #0
   1c168:	beq	1c180 <argp_failure@@Base+0x20d8>
   1c16c:	ldr	r0, [r4, #28]
   1c170:	add	r1, r0, #1
   1c174:	str	r1, [r4, #28]
   1c178:	mov	r1, #10
   1c17c:	strb	r1, [r0]
   1c180:	ldr	r0, [r9, #8]
   1c184:	mov	r1, #1
   1c188:	str	r1, [r0, #4]
   1c18c:	cmp	r6, r8
   1c190:	beq	1c1a4 <argp_failure@@Base+0x20fc>
   1c194:	mov	r0, r6
   1c198:	sub	sp, fp, #28
   1c19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1a0:	b	17e80 <argp_parse@@Base+0x13dc>
   1c1a4:	sub	sp, fp, #28
   1c1a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1b0:	add	fp, sp, #28
   1c1b4:	sub	sp, sp, #92	; 0x5c
   1c1b8:	mvn	r4, #0
   1c1bc:	cmp	r0, #1
   1c1c0:	blt	1cd0c <argp_failure@@Base+0x2c64>
   1c1c4:	ldr	ip, [fp, #16]
   1c1c8:	mov	r9, r2
   1c1cc:	mov	r2, r0
   1c1d0:	mov	r8, r1
   1c1d4:	mov	r0, #0
   1c1d8:	str	r3, [fp, #-48]	; 0xffffffd0
   1c1dc:	ldr	r6, [ip]
   1c1e0:	ldr	r4, [ip, #4]
   1c1e4:	str	r0, [ip, #12]
   1c1e8:	cmp	r6, #0
   1c1ec:	beq	1c210 <argp_failure@@Base+0x2168>
   1c1f0:	ldr	r0, [ip, #16]
   1c1f4:	cmp	r0, #0
   1c1f8:	beq	1c218 <argp_failure@@Base+0x2170>
   1c1fc:	ldrb	r0, [r9]
   1c200:	cmp	r0, #45	; 0x2d
   1c204:	cmpne	r0, #43	; 0x2b
   1c208:	addeq	r9, r9, #1
   1c20c:	b	1c28c <argp_failure@@Base+0x21e4>
   1c210:	mov	r6, #1
   1c214:	str	r6, [ip]
   1c218:	mov	r0, #0
   1c21c:	str	r6, [ip, #28]
   1c220:	str	r6, [ip, #32]
   1c224:	str	r0, [ip, #20]
   1c228:	ldrb	r1, [r9]
   1c22c:	cmp	r1, #43	; 0x2b
   1c230:	beq	1c240 <argp_failure@@Base+0x2198>
   1c234:	cmp	r1, #45	; 0x2d
   1c238:	bne	1c24c <argp_failure@@Base+0x21a4>
   1c23c:	mov	r0, #2
   1c240:	str	r0, [ip, #24]
   1c244:	add	r9, r9, #1
   1c248:	b	1c284 <argp_failure@@Base+0x21dc>
   1c24c:	ldr	r0, [fp, #20]
   1c250:	cmp	r0, #0
   1c254:	bne	1c27c <argp_failure@@Base+0x21d4>
   1c258:	movw	r0, #62481	; 0xf411
   1c25c:	mov	r5, ip
   1c260:	mov	r7, r2
   1c264:	movt	r0, #1
   1c268:	bl	11c90 <getenv@plt>
   1c26c:	mov	r2, r7
   1c270:	mov	ip, r5
   1c274:	cmp	r0, #0
   1c278:	beq	1cd18 <argp_failure@@Base+0x2c70>
   1c27c:	mov	r0, #0
   1c280:	str	r0, [ip, #24]
   1c284:	mov	r0, #1
   1c288:	str	r0, [ip, #16]
   1c28c:	ldrb	r0, [r9]
   1c290:	ldr	r5, [ip, #20]
   1c294:	str	r8, [fp, #-32]	; 0xffffffe0
   1c298:	subs	r1, r0, #58	; 0x3a
   1c29c:	movne	r1, r4
   1c2a0:	cmp	r5, #0
   1c2a4:	str	r1, [fp, #-44]	; 0xffffffd4
   1c2a8:	beq	1c31c <argp_failure@@Base+0x2274>
   1c2ac:	ldrb	r0, [r5]
   1c2b0:	cmp	r0, #0
   1c2b4:	beq	1c31c <argp_failure@@Base+0x2274>
   1c2b8:	str	r2, [fp, #-36]	; 0xffffffdc
   1c2bc:	add	r8, r5, #1
   1c2c0:	mov	r0, r9
   1c2c4:	mov	r7, ip
   1c2c8:	str	r8, [ip, #20]
   1c2cc:	ldrb	r4, [r5]
   1c2d0:	mov	r1, r4
   1c2d4:	bl	11d44 <strchr@plt>
   1c2d8:	ldrb	r1, [r5, #1]
   1c2dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c2e0:	cmp	r1, #0
   1c2e4:	orr	r1, r4, #1
   1c2e8:	addeq	r6, r6, #1
   1c2ec:	streq	r6, [r7]
   1c2f0:	cmp	r1, #59	; 0x3b
   1c2f4:	cmpne	r0, #0
   1c2f8:	bne	1c37c <argp_failure@@Base+0x22d4>
   1c2fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c300:	cmp	r0, #0
   1c304:	bne	1cd4c <argp_failure@@Base+0x2ca4>
   1c308:	str	r4, [r7, #8]
   1c30c:	mov	r4, #63	; 0x3f
   1c310:	mov	r0, r4
   1c314:	sub	sp, fp, #28
   1c318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c31c:	mov	r3, ip
   1c320:	str	r9, [sp, #48]	; 0x30
   1c324:	mov	r5, ip
   1c328:	ldr	r9, [r3, #32]!
   1c32c:	cmp	r9, r6
   1c330:	strgt	r6, [r3]
   1c334:	movgt	r9, r6
   1c338:	ldr	r7, [r5, #28]!
   1c33c:	cmp	r7, r6
   1c340:	strgt	r6, [r5]
   1c344:	movgt	r7, r6
   1c348:	ldr	r4, [ip, #24]
   1c34c:	cmp	r4, #1
   1c350:	bne	1c828 <argp_failure@@Base+0x2780>
   1c354:	cmp	r7, r9
   1c358:	cmpne	r9, r6
   1c35c:	bne	1c408 <argp_failure@@Base+0x2360>
   1c360:	cmp	r9, r6
   1c364:	mov	r1, r5
   1c368:	mov	r0, r6
   1c36c:	bne	1c7d4 <argp_failure@@Base+0x272c>
   1c370:	cmp	r6, r2
   1c374:	blt	1c7f8 <argp_failure@@Base+0x2750>
   1c378:	b	1c814 <argp_failure@@Base+0x276c>
   1c37c:	ldrb	r2, [r0]
   1c380:	ldrb	r1, [r0, #1]
   1c384:	cmp	r2, #87	; 0x57
   1c388:	bne	1c3e0 <argp_failure@@Base+0x2338>
   1c38c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c390:	cmp	r2, #0
   1c394:	beq	1c3e0 <argp_failure@@Base+0x2338>
   1c398:	cmp	r1, #59	; 0x3b
   1c39c:	bne	1c3e0 <argp_failure@@Base+0x2338>
   1c3a0:	ldrb	r0, [r8]
   1c3a4:	cmp	r0, #0
   1c3a8:	bne	1cd7c <argp_failure@@Base+0x2cd4>
   1c3ac:	cmp	r6, r3
   1c3b0:	bne	1cd74 <argp_failure@@Base+0x2ccc>
   1c3b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c3b8:	cmp	r0, #0
   1c3bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c3c0:	bne	1ce7c <argp_failure@@Base+0x2dd4>
   1c3c4:	str	r4, [r7, #8]
   1c3c8:	ldrb	r4, [r9]
   1c3cc:	cmp	r4, #58	; 0x3a
   1c3d0:	movwne	r4, #63	; 0x3f
   1c3d4:	mov	r0, r4
   1c3d8:	sub	sp, fp, #28
   1c3dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3e0:	cmp	r1, #58	; 0x3a
   1c3e4:	bne	1cd0c <argp_failure@@Base+0x2c64>
   1c3e8:	ldrb	r0, [r0, #2]
   1c3ec:	ldrb	r1, [r8]
   1c3f0:	cmp	r0, #58	; 0x3a
   1c3f4:	bne	1c944 <argp_failure@@Base+0x289c>
   1c3f8:	cmp	r1, #0
   1c3fc:	bne	1c94c <argp_failure@@Base+0x28a4>
   1c400:	mov	r0, #0
   1c404:	b	1ce3c <argp_failure@@Base+0x2d94>
   1c408:	cmp	r6, r9
   1c40c:	str	r4, [sp, #28]
   1c410:	str	r5, [sp, #56]	; 0x38
   1c414:	str	r7, [fp, #-40]	; 0xffffffd8
   1c418:	str	r3, [sp, #52]	; 0x34
   1c41c:	str	r2, [fp, #-36]	; 0xffffffdc
   1c420:	ble	1c7b0 <argp_failure@@Base+0x2708>
   1c424:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c428:	cmp	r0, r9
   1c42c:	bge	1c7b0 <argp_failure@@Base+0x2708>
   1c430:	add	r0, r8, r9, lsl #2
   1c434:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1c438:	mov	r2, r6
   1c43c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c440:	sub	r0, r8, r9, lsl #2
   1c444:	str	r0, [sp, #32]
   1c448:	rsb	r0, r9, #1
   1c44c:	add	r0, r8, r0, lsl #2
   1c450:	str	r0, [sp, #44]	; 0x2c
   1c454:	mvn	r0, r9
   1c458:	str	r0, [fp, #-56]	; 0xffffffc8
   1c45c:	add	r0, r8, r0, lsl #2
   1c460:	add	r0, r0, #4
   1c464:	str	r0, [sp, #24]
   1c468:	add	r0, r8, #4
   1c46c:	str	r0, [sp, #60]	; 0x3c
   1c470:	sub	r4, r9, lr
   1c474:	sub	r0, r2, r9
   1c478:	cmp	r0, r4
   1c47c:	bgt	1c4a4 <argp_failure@@Base+0x23fc>
   1c480:	b	1c550 <argp_failure@@Base+0x24a8>
   1c484:	mov	r2, sl
   1c488:	cmp	r2, r9
   1c48c:	cmpgt	r9, lr
   1c490:	ble	1c7b0 <argp_failure@@Base+0x2708>
   1c494:	sub	r4, r9, lr
   1c498:	sub	r0, r2, r9
   1c49c:	cmp	r0, r4
   1c4a0:	ble	1c550 <argp_failure@@Base+0x24a8>
   1c4a4:	sub	sl, r2, r4
   1c4a8:	cmp	r4, #1
   1c4ac:	blt	1c484 <argp_failure@@Base+0x23dc>
   1c4b0:	mov	r3, #0
   1c4b4:	cmp	r4, #4
   1c4b8:	bcc	1c70c <argp_failure@@Base+0x2664>
   1c4bc:	add	r5, r8, r2, lsl #2
   1c4c0:	add	r1, r8, lr, lsl #2
   1c4c4:	cmp	r1, r5
   1c4c8:	bcs	1c4dc <argp_failure@@Base+0x2434>
   1c4cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c4d0:	add	r5, r8, sl, lsl #2
   1c4d4:	cmp	r5, r0
   1c4d8:	bcc	1c70c <argp_failure@@Base+0x2664>
   1c4dc:	bic	r3, r4, #3
   1c4e0:	mov	r0, #1
   1c4e4:	str	sl, [sp, #40]	; 0x28
   1c4e8:	subs	r5, r3, #4
   1c4ec:	add	r5, r0, r5, lsr #2
   1c4f0:	and	r0, r5, #1
   1c4f4:	str	r0, [sp, #36]	; 0x24
   1c4f8:	beq	1c6c8 <argp_failure@@Base+0x2620>
   1c4fc:	sub	r8, r5, r0
   1c500:	ldr	r0, [sp, #24]
   1c504:	add	r5, r2, lr
   1c508:	mov	r7, #0
   1c50c:	add	sl, r0, r5, lsl #2
   1c510:	mov	r5, #0
   1c514:	add	ip, r1, r5
   1c518:	add	r0, sl, r5
   1c51c:	add	r5, r5, #32
   1c520:	subs	r8, r8, #2
   1c524:	add	r7, r7, #8
   1c528:	vld1.32	{d16-d17}, [r0]
   1c52c:	vld1.32	{d18-d19}, [ip]
   1c530:	vst1.32	{d16-d17}, [ip]!
   1c534:	vst1.32	{d18-d19}, [r0]!
   1c538:	vld1.32	{d16-d17}, [r0]
   1c53c:	vld1.32	{d18-d19}, [ip]
   1c540:	vst1.32	{d16-d17}, [ip]
   1c544:	vst1.32	{d18-d19}, [r0]
   1c548:	bne	1c514 <argp_failure@@Base+0x246c>
   1c54c:	b	1c6cc <argp_failure@@Base+0x2624>
   1c550:	cmp	r0, #1
   1c554:	blt	1c6b0 <argp_failure@@Base+0x2608>
   1c558:	mov	sl, #0
   1c55c:	cmp	r0, #3
   1c560:	bls	1c62c <argp_failure@@Base+0x2584>
   1c564:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c568:	add	r1, r3, r2, lsl #2
   1c56c:	add	r8, r3, lr, lsl #2
   1c570:	cmp	r8, r1
   1c574:	bcs	1c590 <argp_failure@@Base+0x24e8>
   1c578:	ldr	r3, [sp, #32]
   1c57c:	add	r1, r2, lr
   1c580:	add	r1, r3, r1, lsl #2
   1c584:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c588:	cmp	r3, r1
   1c58c:	bcc	1c62c <argp_failure@@Base+0x2584>
   1c590:	bic	sl, r0, #3
   1c594:	mov	r3, #1
   1c598:	subs	r1, sl, #4
   1c59c:	add	r1, r3, r1, lsr #2
   1c5a0:	and	r3, r1, #1
   1c5a4:	str	r3, [sp, #40]	; 0x28
   1c5a8:	beq	1c798 <argp_failure@@Base+0x26f0>
   1c5ac:	sub	r7, r3, r1
   1c5b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c5b4:	mov	r1, #0
   1c5b8:	mov	ip, #32
   1c5bc:	mov	r5, r3
   1c5c0:	mov	r4, r8
   1c5c4:	adds	r7, r7, #2
   1c5c8:	add	r1, r1, #8
   1c5cc:	vld1.32	{d16-d17}, [r5]!
   1c5d0:	vld1.32	{d18-d19}, [r4]!
   1c5d4:	vst1.32	{d16-d17}, [r8], ip
   1c5d8:	vst1.32	{d18-d19}, [r3], ip
   1c5dc:	vld1.32	{d16-d17}, [r5]
   1c5e0:	vld1.32	{d18-d19}, [r4]
   1c5e4:	vst1.32	{d16-d17}, [r4]
   1c5e8:	vst1.32	{d18-d19}, [r5]
   1c5ec:	bne	1c5bc <argp_failure@@Base+0x2514>
   1c5f0:	ldr	r3, [sp, #40]	; 0x28
   1c5f4:	ldr	ip, [fp, #16]
   1c5f8:	cmp	r3, #0
   1c5fc:	beq	1c624 <argp_failure@@Base+0x257c>
   1c600:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1c604:	add	r3, r1, lr
   1c608:	add	r1, r1, r9
   1c60c:	add	r3, r4, r3, lsl #2
   1c610:	add	r1, r4, r1, lsl #2
   1c614:	vld1.32	{d16-d17}, [r1]
   1c618:	vld1.32	{d18-d19}, [r3]
   1c61c:	vst1.32	{d16-d17}, [r3]
   1c620:	vst1.32	{d18-d19}, [r1]
   1c624:	cmp	r0, sl
   1c628:	beq	1c6b0 <argp_failure@@Base+0x2608>
   1c62c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1c630:	tst	r0, #1
   1c634:	mov	r4, sl
   1c638:	add	r1, r2, r1
   1c63c:	beq	1c660 <argp_failure@@Base+0x25b8>
   1c640:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c644:	add	r7, sl, r9
   1c648:	add	r4, sl, lr
   1c64c:	ldr	r5, [r3, r7, lsl #2]
   1c650:	ldr	r8, [r3, r4, lsl #2]
   1c654:	str	r5, [r3, r4, lsl #2]
   1c658:	orr	r4, sl, #1
   1c65c:	str	r8, [r3, r7, lsl #2]
   1c660:	cmp	r1, sl
   1c664:	beq	1c6b0 <argp_failure@@Base+0x2608>
   1c668:	ldr	r3, [sp, #60]	; 0x3c
   1c66c:	add	r1, lr, r4
   1c670:	add	r4, r9, r4
   1c674:	add	r1, r3, r1, lsl #2
   1c678:	add	r3, r3, r4, lsl #2
   1c67c:	sub	r4, r4, r2
   1c680:	ldr	r7, [r1, #-4]
   1c684:	ldr	r5, [r3, #-4]
   1c688:	adds	r4, r4, #2
   1c68c:	str	r5, [r1, #-4]
   1c690:	str	r7, [r3, #-4]
   1c694:	ldr	r7, [r1]
   1c698:	ldr	r5, [r3]
   1c69c:	str	r5, [r1]
   1c6a0:	str	r7, [r3]
   1c6a4:	add	r1, r1, #8
   1c6a8:	add	r3, r3, #8
   1c6ac:	bne	1c680 <argp_failure@@Base+0x25d8>
   1c6b0:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1c6b4:	add	lr, r0, lr
   1c6b8:	cmp	r2, r9
   1c6bc:	cmpgt	r9, lr
   1c6c0:	bgt	1c494 <argp_failure@@Base+0x23ec>
   1c6c4:	b	1c7b0 <argp_failure@@Base+0x2708>
   1c6c8:	mov	r7, #0
   1c6cc:	ldr	r0, [sp, #36]	; 0x24
   1c6d0:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1c6d4:	ldr	sl, [sp, #40]	; 0x28
   1c6d8:	cmp	r0, #0
   1c6dc:	beq	1c700 <argp_failure@@Base+0x2658>
   1c6e0:	add	r0, r7, lr
   1c6e4:	add	r1, r7, sl
   1c6e8:	add	r0, r8, r0, lsl #2
   1c6ec:	add	r1, r8, r1, lsl #2
   1c6f0:	vld1.32	{d16-d17}, [r1]
   1c6f4:	vld1.32	{d18-d19}, [r0]
   1c6f8:	vst1.32	{d16-d17}, [r0]
   1c6fc:	vst1.32	{d18-d19}, [r1]
   1c700:	ldr	ip, [fp, #16]
   1c704:	cmp	r4, r3
   1c708:	beq	1c484 <argp_failure@@Base+0x23dc>
   1c70c:	mvn	r0, r3
   1c710:	tst	r4, #1
   1c714:	add	r1, r9, r0
   1c718:	beq	1c738 <argp_failure@@Base+0x2690>
   1c71c:	add	r0, r3, lr
   1c720:	add	r5, r3, sl
   1c724:	orr	r3, r3, #1
   1c728:	ldr	r7, [r8, r0, lsl #2]
   1c72c:	ldr	r4, [r8, r5, lsl #2]
   1c730:	str	r4, [r8, r0, lsl #2]
   1c734:	str	r7, [r8, r5, lsl #2]
   1c738:	cmp	r1, lr
   1c73c:	beq	1c484 <argp_failure@@Base+0x23dc>
   1c740:	ldr	r4, [sp, #60]	; 0x3c
   1c744:	add	r0, lr, r3
   1c748:	sub	r1, r9, r3
   1c74c:	add	r4, r4, r0, lsl #2
   1c750:	add	r0, r2, lr
   1c754:	ldr	r2, [sp, #44]	; 0x2c
   1c758:	add	r0, r0, r3
   1c75c:	add	r2, r2, r0, lsl #2
   1c760:	ldr	r0, [r4, #-4]
   1c764:	ldr	r3, [r2, #-4]
   1c768:	sub	r1, r1, #2
   1c76c:	cmp	lr, r1
   1c770:	str	r3, [r4, #-4]
   1c774:	str	r0, [r2, #-4]
   1c778:	ldr	r0, [r4]
   1c77c:	ldr	r3, [r2]
   1c780:	str	r3, [r4]
   1c784:	str	r0, [r2]
   1c788:	add	r2, r2, #8
   1c78c:	add	r4, r4, #8
   1c790:	bne	1c760 <argp_failure@@Base+0x26b8>
   1c794:	b	1c484 <argp_failure@@Base+0x23dc>
   1c798:	mov	r1, #0
   1c79c:	ldr	r3, [sp, #40]	; 0x28
   1c7a0:	ldr	ip, [fp, #16]
   1c7a4:	cmp	r3, #0
   1c7a8:	bne	1c600 <argp_failure@@Base+0x2558>
   1c7ac:	b	1c624 <argp_failure@@Base+0x257c>
   1c7b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c7b4:	ldr	r3, [sp, #52]	; 0x34
   1c7b8:	ldr	r5, [sp, #56]	; 0x38
   1c7bc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c7c0:	ldr	r4, [sp, #28]
   1c7c4:	add	r0, r0, r6
   1c7c8:	mov	r1, r3
   1c7cc:	sub	r0, r0, r9
   1c7d0:	str	r0, [r5]
   1c7d4:	mov	r7, r0
   1c7d8:	str	r6, [r1]
   1c7dc:	cmp	r6, r2
   1c7e0:	blt	1c7f8 <argp_failure@@Base+0x2750>
   1c7e4:	b	1c814 <argp_failure@@Base+0x276c>
   1c7e8:	add	r6, r6, #1
   1c7ec:	cmp	r2, r6
   1c7f0:	str	r6, [ip]
   1c7f4:	beq	1c81c <argp_failure@@Base+0x2774>
   1c7f8:	ldr	r0, [r8, r6, lsl #2]
   1c7fc:	ldrb	r1, [r0]
   1c800:	cmp	r1, #45	; 0x2d
   1c804:	bne	1c7e8 <argp_failure@@Base+0x2740>
   1c808:	ldrb	r0, [r0, #1]
   1c80c:	cmp	r0, #0
   1c810:	beq	1c7e8 <argp_failure@@Base+0x2740>
   1c814:	mov	r9, r6
   1c818:	b	1c820 <argp_failure@@Base+0x2778>
   1c81c:	mov	r9, r2
   1c820:	mov	r6, r9
   1c824:	str	r9, [r3]
   1c828:	cmp	r6, r2
   1c82c:	beq	1cd00 <argp_failure@@Base+0x2c58>
   1c830:	mov	sl, r4
   1c834:	movw	r4, #60523	; 0xec6b
   1c838:	ldr	r0, [r8, r6, lsl #2]
   1c83c:	str	r5, [sp, #56]	; 0x38
   1c840:	str	r7, [fp, #-40]	; 0xffffffd8
   1c844:	str	r3, [sp, #52]	; 0x34
   1c848:	str	r2, [fp, #-36]	; 0xffffffdc
   1c84c:	movt	r4, #1
   1c850:	mov	r1, r4
   1c854:	bl	11ab0 <strcmp@plt>
   1c858:	cmp	r0, #0
   1c85c:	beq	1c8ec <argp_failure@@Base+0x2844>
   1c860:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c864:	ldr	ip, [fp, #16]
   1c868:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1c86c:	cmp	r6, r2
   1c870:	beq	1cd00 <argp_failure@@Base+0x2c58>
   1c874:	ldr	r5, [r8, r6, lsl #2]
   1c878:	mov	r3, r4
   1c87c:	mvn	r4, #0
   1c880:	ldrb	r0, [r5]
   1c884:	cmp	r0, #45	; 0x2d
   1c888:	bne	1c924 <argp_failure@@Base+0x287c>
   1c88c:	mov	r7, r5
   1c890:	ldrb	r1, [r7, #1]!
   1c894:	cmp	r1, #0
   1c898:	beq	1c924 <argp_failure@@Base+0x287c>
   1c89c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c8a0:	cmp	r0, #0
   1c8a4:	beq	1ce6c <argp_failure@@Base+0x2dc4>
   1c8a8:	ldr	r9, [fp, #12]
   1c8ac:	cmp	r1, #45	; 0x2d
   1c8b0:	bne	1cdc8 <argp_failure@@Base+0x2d20>
   1c8b4:	add	r0, r5, #2
   1c8b8:	mov	r1, r8
   1c8bc:	str	r0, [ip, #20]
   1c8c0:	ldr	r0, [fp, #8]
   1c8c4:	stm	sp, {r0, r9, ip}
   1c8c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c8cc:	str	r3, [sp, #16]
   1c8d0:	str	r0, [sp, #12]
   1c8d4:	mov	r0, r2
   1c8d8:	ldr	r2, [sp, #48]	; 0x30
   1c8dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c8e0:	bl	1cec4 <argp_failure@@Base+0x2e1c>
   1c8e4:	sub	sp, fp, #28
   1c8e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c8f0:	ldr	ip, [fp, #16]
   1c8f4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1c8f8:	add	r2, r6, #1
   1c8fc:	cmp	r0, r9
   1c900:	str	r2, [ip]
   1c904:	cmpne	r9, r2
   1c908:	bne	1c95c <argp_failure@@Base+0x28b4>
   1c90c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c910:	ldr	r1, [sp, #56]	; 0x38
   1c914:	cmp	r0, r9
   1c918:	mov	r0, r2
   1c91c:	beq	1cce8 <argp_failure@@Base+0x2c40>
   1c920:	b	1ccf0 <argp_failure@@Base+0x2c48>
   1c924:	cmp	sl, #0
   1c928:	addne	r0, r6, #1
   1c92c:	strne	r5, [ip, #12]
   1c930:	movne	r4, #1
   1c934:	strne	r0, [ip]
   1c938:	mov	r0, r4
   1c93c:	sub	sp, fp, #28
   1c940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c944:	cmp	r1, #0
   1c948:	beq	1cd20 <argp_failure@@Base+0x2c78>
   1c94c:	add	r0, r6, #1
   1c950:	str	r8, [r7, #12]
   1c954:	str	r0, [r7]
   1c958:	b	1ce40 <argp_failure@@Base+0x2d98>
   1c95c:	cmp	r6, r9
   1c960:	str	r2, [sp, #48]	; 0x30
   1c964:	blt	1ccc8 <argp_failure@@Base+0x2c20>
   1c968:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c96c:	cmp	r0, r9
   1c970:	bge	1ccc8 <argp_failure@@Base+0x2c20>
   1c974:	add	r0, r8, r9, lsl #2
   1c978:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1c97c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c980:	sub	r0, r8, r9, lsl #2
   1c984:	str	r0, [sp, #44]	; 0x2c
   1c988:	rsb	r0, r9, #1
   1c98c:	add	r0, r8, r0, lsl #2
   1c990:	str	r0, [fp, #-56]	; 0xffffffc8
   1c994:	mvn	r0, r9
   1c998:	str	r0, [fp, #-48]	; 0xffffffd0
   1c99c:	add	r0, r8, r0, lsl #2
   1c9a0:	add	r0, r0, #4
   1c9a4:	str	r0, [sp, #40]	; 0x28
   1c9a8:	add	r0, r8, #4
   1c9ac:	str	r0, [fp, #-52]	; 0xffffffcc
   1c9b0:	ldr	r0, [sp, #48]	; 0x30
   1c9b4:	sub	r4, r9, ip
   1c9b8:	sub	sl, r0, r9
   1c9bc:	cmp	sl, r4
   1c9c0:	bgt	1c9e8 <argp_failure@@Base+0x2940>
   1c9c4:	b	1ca90 <argp_failure@@Base+0x29e8>
   1c9c8:	mov	r0, r3
   1c9cc:	cmp	r0, r9
   1c9d0:	cmpgt	r9, ip
   1c9d4:	ble	1ccc8 <argp_failure@@Base+0x2c20>
   1c9d8:	sub	r4, r9, ip
   1c9dc:	sub	sl, r0, r9
   1c9e0:	cmp	sl, r4
   1c9e4:	ble	1ca90 <argp_failure@@Base+0x29e8>
   1c9e8:	sub	r3, r0, r4
   1c9ec:	cmp	r4, #1
   1c9f0:	blt	1c9c8 <argp_failure@@Base+0x2920>
   1c9f4:	mov	r1, #0
   1c9f8:	cmp	r4, #4
   1c9fc:	bcc	1cb70 <argp_failure@@Base+0x2ac8>
   1ca00:	add	r2, r8, r0, lsl #2
   1ca04:	add	r7, r8, ip, lsl #2
   1ca08:	cmp	r7, r2
   1ca0c:	bcs	1ca20 <argp_failure@@Base+0x2978>
   1ca10:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1ca14:	add	r2, r8, r3, lsl #2
   1ca18:	cmp	r2, r5
   1ca1c:	bcc	1cb70 <argp_failure@@Base+0x2ac8>
   1ca20:	bic	r1, r4, #3
   1ca24:	mov	r6, #1
   1ca28:	subs	r2, r1, #4
   1ca2c:	add	r2, r6, r2, lsr #2
   1ca30:	and	r6, r2, #1
   1ca34:	str	r6, [sp, #60]	; 0x3c
   1ca38:	beq	1cb30 <argp_failure@@Base+0x2a88>
   1ca3c:	ldr	r5, [sp, #40]	; 0x28
   1ca40:	sub	r2, r6, r2
   1ca44:	add	r6, ip, r0
   1ca48:	add	lr, r5, r6, lsl #2
   1ca4c:	mov	r5, #0
   1ca50:	mov	r6, #0
   1ca54:	add	sl, r7, r5
   1ca58:	add	r8, lr, r5
   1ca5c:	adds	r2, r2, #2
   1ca60:	add	r5, r5, #32
   1ca64:	add	r6, r6, #8
   1ca68:	vld1.32	{d16-d17}, [r8]
   1ca6c:	vld1.32	{d18-d19}, [sl]
   1ca70:	vst1.32	{d16-d17}, [sl]!
   1ca74:	vst1.32	{d18-d19}, [r8]!
   1ca78:	vld1.32	{d16-d17}, [r8]
   1ca7c:	vld1.32	{d18-d19}, [sl]
   1ca80:	vst1.32	{d16-d17}, [sl]
   1ca84:	vst1.32	{d18-d19}, [r8]
   1ca88:	bne	1ca54 <argp_failure@@Base+0x29ac>
   1ca8c:	b	1cb34 <argp_failure@@Base+0x2a8c>
   1ca90:	cmp	sl, #1
   1ca94:	blt	1ccb8 <argp_failure@@Base+0x2c10>
   1ca98:	mov	r1, #0
   1ca9c:	cmp	sl, #3
   1caa0:	bls	1cc38 <argp_failure@@Base+0x2b90>
   1caa4:	add	r2, r8, r0, lsl #2
   1caa8:	add	r7, r8, ip, lsl #2
   1caac:	cmp	r7, r2
   1cab0:	bcs	1cacc <argp_failure@@Base+0x2a24>
   1cab4:	ldr	r3, [sp, #44]	; 0x2c
   1cab8:	add	r2, ip, r0
   1cabc:	add	r2, r3, r2, lsl #2
   1cac0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cac4:	cmp	r3, r2
   1cac8:	bcc	1cc38 <argp_failure@@Base+0x2b90>
   1cacc:	bic	r1, sl, #3
   1cad0:	mov	r3, #1
   1cad4:	subs	r2, r1, #4
   1cad8:	add	r2, r3, r2, lsr #2
   1cadc:	and	r3, r2, #1
   1cae0:	str	r3, [sp, #60]	; 0x3c
   1cae4:	beq	1cbfc <argp_failure@@Base+0x2b54>
   1cae8:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1caec:	sub	r6, r3, r2
   1caf0:	mov	r4, #0
   1caf4:	mov	lr, #32
   1caf8:	mov	r2, r5
   1cafc:	mov	r3, r7
   1cb00:	adds	r6, r6, #2
   1cb04:	add	r4, r4, #8
   1cb08:	vld1.32	{d16-d17}, [r2]!
   1cb0c:	vld1.32	{d18-d19}, [r3]!
   1cb10:	vst1.32	{d16-d17}, [r7], lr
   1cb14:	vst1.32	{d18-d19}, [r5], lr
   1cb18:	vld1.32	{d16-d17}, [r2]
   1cb1c:	vld1.32	{d18-d19}, [r3]
   1cb20:	vst1.32	{d16-d17}, [r3]
   1cb24:	vst1.32	{d18-d19}, [r2]
   1cb28:	bne	1caf8 <argp_failure@@Base+0x2a50>
   1cb2c:	b	1cc00 <argp_failure@@Base+0x2b58>
   1cb30:	mov	r6, #0
   1cb34:	ldr	r2, [sp, #60]	; 0x3c
   1cb38:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1cb3c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1cb40:	cmp	r2, #0
   1cb44:	beq	1cb68 <argp_failure@@Base+0x2ac0>
   1cb48:	add	r2, r6, ip
   1cb4c:	add	r7, r6, r3
   1cb50:	add	r2, r8, r2, lsl #2
   1cb54:	add	r7, r8, r7, lsl #2
   1cb58:	vld1.32	{d16-d17}, [r7]
   1cb5c:	vld1.32	{d18-d19}, [r2]
   1cb60:	vst1.32	{d16-d17}, [r2]
   1cb64:	vst1.32	{d18-d19}, [r7]
   1cb68:	cmp	r4, r1
   1cb6c:	beq	1c9c8 <argp_failure@@Base+0x2920>
   1cb70:	mvn	r2, r1
   1cb74:	tst	r4, #1
   1cb78:	add	r2, r9, r2
   1cb7c:	beq	1cb9c <argp_failure@@Base+0x2af4>
   1cb80:	add	r7, r1, ip
   1cb84:	add	r5, r1, r3
   1cb88:	orr	r1, r1, #1
   1cb8c:	ldr	r6, [r8, r7, lsl #2]
   1cb90:	ldr	r4, [r8, r5, lsl #2]
   1cb94:	str	r4, [r8, r7, lsl #2]
   1cb98:	str	r6, [r8, r5, lsl #2]
   1cb9c:	cmp	r2, ip
   1cba0:	beq	1c9c8 <argp_failure@@Base+0x2920>
   1cba4:	add	r0, ip, r0
   1cba8:	sub	r2, r9, r1
   1cbac:	add	r7, ip, r1
   1cbb0:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1cbb4:	add	r0, r0, r1
   1cbb8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cbbc:	add	r7, r4, r7, lsl #2
   1cbc0:	add	r0, r1, r0, lsl #2
   1cbc4:	ldr	r1, [r7, #-4]
   1cbc8:	ldr	r6, [r0, #-4]
   1cbcc:	sub	r2, r2, #2
   1cbd0:	cmp	ip, r2
   1cbd4:	str	r6, [r7, #-4]
   1cbd8:	str	r1, [r0, #-4]
   1cbdc:	ldr	r1, [r7]
   1cbe0:	ldr	r6, [r0]
   1cbe4:	str	r6, [r7]
   1cbe8:	str	r1, [r0]
   1cbec:	add	r0, r0, #8
   1cbf0:	add	r7, r7, #8
   1cbf4:	bne	1cbc4 <argp_failure@@Base+0x2b1c>
   1cbf8:	b	1c9c8 <argp_failure@@Base+0x2920>
   1cbfc:	mov	r4, #0
   1cc00:	ldr	r2, [sp, #60]	; 0x3c
   1cc04:	cmp	r2, #0
   1cc08:	beq	1cc2c <argp_failure@@Base+0x2b84>
   1cc0c:	add	r2, r4, ip
   1cc10:	add	r3, r4, r9
   1cc14:	add	r2, r8, r2, lsl #2
   1cc18:	add	r3, r8, r3, lsl #2
   1cc1c:	vld1.32	{d16-d17}, [r3]
   1cc20:	vld1.32	{d18-d19}, [r2]
   1cc24:	vst1.32	{d16-d17}, [r2]
   1cc28:	vst1.32	{d18-d19}, [r3]
   1cc2c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1cc30:	cmp	sl, r1
   1cc34:	beq	1ccb8 <argp_failure@@Base+0x2c10>
   1cc38:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cc3c:	tst	sl, #1
   1cc40:	mov	r3, r1
   1cc44:	add	r2, r0, r2
   1cc48:	beq	1cc68 <argp_failure@@Base+0x2bc0>
   1cc4c:	add	r6, r1, r9
   1cc50:	add	r3, r1, ip
   1cc54:	ldr	r5, [r8, r6, lsl #2]
   1cc58:	ldr	r7, [r8, r3, lsl #2]
   1cc5c:	str	r5, [r8, r3, lsl #2]
   1cc60:	orr	r3, r1, #1
   1cc64:	str	r7, [r8, r6, lsl #2]
   1cc68:	cmp	r2, r1
   1cc6c:	beq	1ccb8 <argp_failure@@Base+0x2c10>
   1cc70:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cc74:	add	r1, ip, r3
   1cc78:	add	r3, r9, r3
   1cc7c:	add	r1, r2, r1, lsl #2
   1cc80:	add	r2, r2, r3, lsl #2
   1cc84:	sub	r3, r3, r0
   1cc88:	ldr	r7, [r1, #-4]
   1cc8c:	ldr	r6, [r2, #-4]
   1cc90:	adds	r3, r3, #2
   1cc94:	str	r6, [r1, #-4]
   1cc98:	str	r7, [r2, #-4]
   1cc9c:	ldr	r7, [r1]
   1cca0:	ldr	r6, [r2]
   1cca4:	str	r6, [r1]
   1cca8:	str	r7, [r2]
   1ccac:	add	r1, r1, #8
   1ccb0:	add	r2, r2, #8
   1ccb4:	bne	1cc88 <argp_failure@@Base+0x2be0>
   1ccb8:	add	ip, sl, ip
   1ccbc:	cmp	r0, r9
   1ccc0:	cmpgt	r9, ip
   1ccc4:	bgt	1c9d8 <argp_failure@@Base+0x2930>
   1ccc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cccc:	ldr	r2, [sp, #48]	; 0x30
   1ccd0:	ldr	r1, [sp, #56]	; 0x38
   1ccd4:	ldr	ip, [fp, #16]
   1ccd8:	add	r0, r0, r2
   1ccdc:	sub	r0, r0, r9
   1cce0:	str	r0, [r1]
   1cce4:	ldr	r1, [sp, #52]	; 0x34
   1cce8:	str	r2, [r1]
   1ccec:	str	r0, [fp, #-40]	; 0xffffffd8
   1ccf0:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1ccf4:	str	lr, [ip]
   1ccf8:	str	lr, [ip, #32]
   1ccfc:	mov	r9, lr
   1cd00:	cmp	r7, r9
   1cd04:	mvn	r4, #0
   1cd08:	strne	r7, [ip]
   1cd0c:	mov	r0, r4
   1cd10:	sub	sp, fp, #28
   1cd14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd18:	mov	r0, #1
   1cd1c:	b	1c280 <argp_failure@@Base+0x21d8>
   1cd20:	cmp	r6, r3
   1cd24:	bne	1ce2c <argp_failure@@Base+0x2d84>
   1cd28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cd2c:	cmp	r0, #0
   1cd30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd34:	bne	1cea0 <argp_failure@@Base+0x2df8>
   1cd38:	str	r4, [r7, #8]
   1cd3c:	ldrb	r4, [r9]
   1cd40:	cmp	r4, #58	; 0x3a
   1cd44:	movwne	r4, #63	; 0x3f
   1cd48:	b	1ce40 <argp_failure@@Base+0x2d98>
   1cd4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd50:	movw	r1, #62408	; 0xf3c8
   1cd54:	mov	r3, r4
   1cd58:	movt	r1, #1
   1cd5c:	ldr	r2, [r0]
   1cd60:	movw	r0, #944	; 0x3b0
   1cd64:	movt	r0, #3
   1cd68:	ldr	r0, [r0]
   1cd6c:	bl	11d5c <fprintf@plt>
   1cd70:	b	1c308 <argp_failure@@Base+0x2260>
   1cd74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd78:	ldr	r8, [r0, r6, lsl #2]
   1cd7c:	ldr	r2, [fp, #8]
   1cd80:	movw	r1, #62477	; 0xf40d
   1cd84:	str	r8, [r7, #12]
   1cd88:	mov	r0, #0
   1cd8c:	movt	r1, #1
   1cd90:	str	r0, [r7, #12]
   1cd94:	str	r8, [r7, #20]
   1cd98:	str	r2, [sp]
   1cd9c:	stmib	sp, {r0, r7}
   1cda0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cda4:	str	r1, [sp, #16]
   1cda8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cdac:	mov	r2, r9
   1cdb0:	str	r0, [sp, #12]
   1cdb4:	mov	r0, r3
   1cdb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cdbc:	bl	1cec4 <argp_failure@@Base+0x2e1c>
   1cdc0:	sub	sp, fp, #28
   1cdc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cdc8:	cmp	r9, #0
   1cdcc:	beq	1ce6c <argp_failure@@Base+0x2dc4>
   1cdd0:	ldrb	r0, [r5, #2]
   1cdd4:	cmp	r0, #0
   1cdd8:	beq	1ce54 <argp_failure@@Base+0x2dac>
   1cddc:	ldr	r1, [fp, #8]
   1cde0:	movw	r0, #60524	; 0xec6c
   1cde4:	str	r7, [ip, #20]
   1cde8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cdec:	movt	r0, #1
   1cdf0:	stm	sp, {r1, r9, ip}
   1cdf4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cdf8:	str	r0, [sp, #16]
   1cdfc:	mov	r0, r2
   1ce00:	ldr	r2, [sp, #48]	; 0x30
   1ce04:	str	r1, [sp, #12]
   1ce08:	mov	r1, r8
   1ce0c:	bl	1cec4 <argp_failure@@Base+0x2e1c>
   1ce10:	ldr	ip, [fp, #16]
   1ce14:	mov	r4, r0
   1ce18:	cmn	r0, #1
   1ce1c:	bne	1cd0c <argp_failure@@Base+0x2c64>
   1ce20:	ldr	r6, [ip]
   1ce24:	ldr	r5, [r8, r6, lsl #2]
   1ce28:	b	1ce6c <argp_failure@@Base+0x2dc4>
   1ce2c:	add	r0, r6, #1
   1ce30:	str	r0, [r7]
   1ce34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce38:	ldr	r0, [r0, r6, lsl #2]
   1ce3c:	str	r0, [r7, #12]
   1ce40:	mov	r0, #0
   1ce44:	str	r0, [r7, #20]
   1ce48:	mov	r0, r4
   1ce4c:	sub	sp, fp, #28
   1ce50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce54:	ldr	r0, [sp, #48]	; 0x30
   1ce58:	bl	11d44 <strchr@plt>
   1ce5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ce60:	ldr	ip, [fp, #16]
   1ce64:	cmp	r0, #0
   1ce68:	beq	1cddc <argp_failure@@Base+0x2d34>
   1ce6c:	ldr	r9, [sp, #48]	; 0x30
   1ce70:	add	r5, r5, #1
   1ce74:	str	r5, [ip, #20]
   1ce78:	b	1c2bc <argp_failure@@Base+0x2214>
   1ce7c:	ldr	r2, [r0]
   1ce80:	movw	r0, #944	; 0x3b0
   1ce84:	movw	r1, #62436	; 0xf3e4
   1ce88:	mov	r3, r4
   1ce8c:	movt	r0, #3
   1ce90:	movt	r1, #1
   1ce94:	ldr	r0, [r0]
   1ce98:	bl	11d5c <fprintf@plt>
   1ce9c:	b	1c3c4 <argp_failure@@Base+0x231c>
   1cea0:	ldr	r2, [r0]
   1cea4:	movw	r0, #944	; 0x3b0
   1cea8:	movw	r1, #62436	; 0xf3e4
   1ceac:	mov	r3, r4
   1ceb0:	movt	r0, #3
   1ceb4:	movt	r1, #1
   1ceb8:	ldr	r0, [r0]
   1cebc:	bl	11d5c <fprintf@plt>
   1cec0:	b	1cd38 <argp_failure@@Base+0x2c90>
   1cec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cec8:	add	fp, sp, #28
   1cecc:	sub	sp, sp, #44	; 0x2c
   1ced0:	str	r0, [sp, #8]
   1ced4:	ldr	r0, [fp, #16]
   1ced8:	str	r2, [sp, #12]
   1cedc:	str	r1, [sp, #16]
   1cee0:	ldr	r8, [r0, #20]
   1cee4:	mov	r9, r8
   1cee8:	b	1cef0 <argp_failure@@Base+0x2e48>
   1ceec:	add	r9, r9, #1
   1cef0:	ldrb	r0, [r9]
   1cef4:	cmp	r0, #0
   1cef8:	cmpne	r0, #61	; 0x3d
   1cefc:	bne	1ceec <argp_failure@@Base+0x2e44>
   1cf00:	ldr	sl, [r3]
   1cf04:	mvn	r0, #0
   1cf08:	str	r0, [sp, #24]
   1cf0c:	cmp	sl, #0
   1cf10:	beq	1d0bc <argp_failure@@Base+0x3014>
   1cf14:	sub	r0, r9, r8
   1cf18:	mov	r4, #0
   1cf1c:	mov	r6, sl
   1cf20:	mov	r7, r3
   1cf24:	str	r3, [sp, #28]
   1cf28:	str	r0, [fp, #-32]	; 0xffffffe0
   1cf2c:	b	1cf40 <argp_failure@@Base+0x2e98>
   1cf30:	ldr	r6, [r7, #16]!
   1cf34:	add	r4, r4, #1
   1cf38:	cmp	r6, #0
   1cf3c:	beq	1cf74 <argp_failure@@Base+0x2ecc>
   1cf40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cf44:	mov	r0, r6
   1cf48:	mov	r1, r8
   1cf4c:	bl	11f24 <strncmp@plt>
   1cf50:	cmp	r0, #0
   1cf54:	bne	1cf30 <argp_failure@@Base+0x2e88>
   1cf58:	mov	r0, r6
   1cf5c:	bl	11d2c <strlen@plt>
   1cf60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cf64:	cmp	r1, r0
   1cf68:	bne	1cf30 <argp_failure@@Base+0x2e88>
   1cf6c:	str	r4, [sp, #24]
   1cf70:	b	1d330 <argp_failure@@Base+0x3288>
   1cf74:	cmp	sl, #0
   1cf78:	beq	1d0d8 <argp_failure@@Base+0x3030>
   1cf7c:	ldr	r0, [fp, #12]
   1cf80:	cmp	r0, #0
   1cf84:	beq	1d158 <argp_failure@@Base+0x30b0>
   1cf88:	ldr	r0, [fp, #20]
   1cf8c:	cmp	r0, #0
   1cf90:	beq	1d474 <argp_failure@@Base+0x33cc>
   1cf94:	mov	r0, #0
   1cf98:	ldr	r6, [sp, #28]
   1cf9c:	mov	r5, #0
   1cfa0:	mov	r7, #0
   1cfa4:	str	r0, [sp, #32]
   1cfa8:	mvn	r0, #0
   1cfac:	str	r0, [sp, #24]
   1cfb0:	mov	r0, #0
   1cfb4:	str	r0, [sp, #4]
   1cfb8:	mov	r0, #0
   1cfbc:	str	r0, [sp, #20]
   1cfc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cfc4:	mov	r0, sl
   1cfc8:	mov	r1, r8
   1cfcc:	bl	11f24 <strncmp@plt>
   1cfd0:	cmp	r0, #0
   1cfd4:	beq	1cffc <argp_failure@@Base+0x2f54>
   1cfd8:	mov	r1, r5
   1cfdc:	ldr	sl, [r6, #16]!
   1cfe0:	cmp	sl, #0
   1cfe4:	beq	1d30c <argp_failure@@Base+0x3264>
   1cfe8:	ldr	r0, [fp, #16]
   1cfec:	add	r1, r1, #1
   1cff0:	mov	r5, r1
   1cff4:	ldr	r8, [r0, #20]
   1cff8:	b	1cfc0 <argp_failure@@Base+0x2f18>
   1cffc:	cmp	r7, #0
   1d000:	beq	1d07c <argp_failure@@Base+0x2fd4>
   1d004:	ldr	r0, [sp, #32]
   1d008:	mov	r1, r5
   1d00c:	cmp	r0, #0
   1d010:	bne	1cfdc <argp_failure@@Base+0x2f34>
   1d014:	ldr	r8, [sp, #20]
   1d018:	cmp	r8, #0
   1d01c:	bne	1d058 <argp_failure@@Base+0x2fb0>
   1d020:	mov	r0, r4
   1d024:	bl	18608 <argp_parse@@Base+0x1b64>
   1d028:	cmp	r0, #0
   1d02c:	beq	1d098 <argp_failure@@Base+0x2ff0>
   1d030:	mov	r1, #0
   1d034:	mov	r2, r4
   1d038:	mov	r8, r0
   1d03c:	bl	11da4 <memset@plt>
   1d040:	ldr	r0, [sp, #24]
   1d044:	mov	r1, #1
   1d048:	mov	r2, #1
   1d04c:	str	r1, [sp, #4]
   1d050:	mov	r1, r5
   1d054:	strb	r2, [r8, r0]
   1d058:	mov	r0, #1
   1d05c:	str	r8, [sp, #20]
   1d060:	strb	r0, [r8, r1]
   1d064:	mov	r0, #0
   1d068:	str	r0, [sp, #32]
   1d06c:	ldr	sl, [r6, #16]!
   1d070:	cmp	sl, #0
   1d074:	bne	1cfe8 <argp_failure@@Base+0x2f40>
   1d078:	b	1d30c <argp_failure@@Base+0x3264>
   1d07c:	mov	r7, r6
   1d080:	mov	r1, r5
   1d084:	str	r5, [sp, #24]
   1d088:	ldr	sl, [r6, #16]!
   1d08c:	cmp	sl, #0
   1d090:	bne	1cfe8 <argp_failure@@Base+0x2f40>
   1d094:	b	1d30c <argp_failure@@Base+0x3264>
   1d098:	mov	r0, #1
   1d09c:	mov	r1, r5
   1d0a0:	str	r0, [sp, #32]
   1d0a4:	mov	r0, #0
   1d0a8:	str	r0, [sp, #20]
   1d0ac:	ldr	sl, [r6, #16]!
   1d0b0:	cmp	sl, #0
   1d0b4:	bne	1cfe8 <argp_failure@@Base+0x2f40>
   1d0b8:	b	1d30c <argp_failure@@Base+0x3264>
   1d0bc:	mov	r0, #0
   1d0c0:	mov	r4, #0
   1d0c4:	mov	r7, #0
   1d0c8:	mov	r1, #0
   1d0cc:	mov	r8, #0
   1d0d0:	mov	r6, r3
   1d0d4:	b	1d0ec <argp_failure@@Base+0x3044>
   1d0d8:	ldr	r6, [sp, #28]
   1d0dc:	mov	r0, #0
   1d0e0:	mov	r7, #0
   1d0e4:	mov	r1, #0
   1d0e8:	mov	r8, #0
   1d0ec:	str	r0, [sp, #32]
   1d0f0:	cmp	r1, #0
   1d0f4:	ldreq	r0, [sp, #32]
   1d0f8:	cmpeq	r0, #0
   1d0fc:	beq	1d328 <argp_failure@@Base+0x3280>
   1d100:	ldr	r0, [fp, #20]
   1d104:	cmp	r0, #0
   1d108:	bne	1d540 <argp_failure@@Base+0x3498>
   1d10c:	cmp	r8, #0
   1d110:	beq	1d11c <argp_failure@@Base+0x3074>
   1d114:	mov	r0, r1
   1d118:	bl	17e80 <argp_parse@@Base+0x13dc>
   1d11c:	ldr	r0, [fp, #16]
   1d120:	ldr	r4, [r0, #20]
   1d124:	mov	r5, r0
   1d128:	mov	r0, r4
   1d12c:	bl	11d2c <strlen@plt>
   1d130:	mov	r1, #0
   1d134:	add	r0, r4, r0
   1d138:	str	r1, [r5, #8]
   1d13c:	str	r0, [r5, #20]
   1d140:	ldr	r0, [r5]
   1d144:	add	r0, r0, #1
   1d148:	str	r0, [r5]
   1d14c:	mov	r0, #63	; 0x3f
   1d150:	sub	sp, fp, #28
   1d154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d158:	mov	r0, #0
   1d15c:	mov	r6, #0
   1d160:	mov	r7, #0
   1d164:	str	r0, [sp, #36]	; 0x24
   1d168:	mvn	r0, #0
   1d16c:	str	r0, [sp, #24]
   1d170:	mov	r0, #0
   1d174:	str	r0, [sp, #32]
   1d178:	mov	r0, #0
   1d17c:	str	r0, [sp, #4]
   1d180:	mov	r0, #0
   1d184:	str	r0, [sp, #20]
   1d188:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d18c:	mov	r0, sl
   1d190:	mov	r1, r8
   1d194:	bl	11f24 <strncmp@plt>
   1d198:	cmp	r0, #0
   1d19c:	beq	1d1d0 <argp_failure@@Base+0x3128>
   1d1a0:	ldr	r5, [sp, #28]
   1d1a4:	ldr	r3, [sp, #36]	; 0x24
   1d1a8:	add	r0, r5, r6, lsl #4
   1d1ac:	ldr	sl, [r0, #16]
   1d1b0:	cmp	sl, #0
   1d1b4:	beq	1d30c <argp_failure@@Base+0x3264>
   1d1b8:	ldr	r0, [fp, #16]
   1d1bc:	add	r3, r3, #16
   1d1c0:	add	r6, r6, #1
   1d1c4:	str	r3, [sp, #36]	; 0x24
   1d1c8:	ldr	r8, [r0, #20]
   1d1cc:	b	1d188 <argp_failure@@Base+0x30e0>
   1d1d0:	ldr	r5, [sp, #28]
   1d1d4:	ldr	r3, [sp, #36]	; 0x24
   1d1d8:	cmp	r7, #0
   1d1dc:	add	r0, r5, r3
   1d1e0:	beq	1d278 <argp_failure@@Base+0x31d0>
   1d1e4:	ldr	r1, [r0, #4]
   1d1e8:	ldr	r2, [r7, #4]
   1d1ec:	cmp	r2, r1
   1d1f0:	bne	1d204 <argp_failure@@Base+0x315c>
   1d1f4:	ldr	r1, [r0, #8]
   1d1f8:	ldr	r2, [r7, #8]
   1d1fc:	cmp	r2, r1
   1d200:	beq	1d294 <argp_failure@@Base+0x31ec>
   1d204:	ldr	r0, [sp, #32]
   1d208:	cmp	r0, #0
   1d20c:	bne	1d1a8 <argp_failure@@Base+0x3100>
   1d210:	ldr	r0, [fp, #20]
   1d214:	cmp	r0, #0
   1d218:	beq	1d2b4 <argp_failure@@Base+0x320c>
   1d21c:	ldr	r8, [sp, #20]
   1d220:	mov	r0, #0
   1d224:	str	r0, [sp, #32]
   1d228:	cmp	r8, #0
   1d22c:	bne	1d2c8 <argp_failure@@Base+0x3220>
   1d230:	mov	r0, r4
   1d234:	bl	18608 <argp_parse@@Base+0x1b64>
   1d238:	cmp	r0, #0
   1d23c:	beq	1d2e8 <argp_failure@@Base+0x3240>
   1d240:	mov	r8, r0
   1d244:	mov	r0, #0
   1d248:	mov	r1, #0
   1d24c:	mov	r2, r4
   1d250:	str	r0, [sp, #32]
   1d254:	mov	r0, r8
   1d258:	bl	11da4 <memset@plt>
   1d25c:	ldr	r3, [sp, #36]	; 0x24
   1d260:	ldr	r0, [sp, #24]
   1d264:	mov	r2, #1
   1d268:	mov	r1, #1
   1d26c:	str	r1, [sp, #4]
   1d270:	strb	r2, [r8, r0]
   1d274:	b	1d2c8 <argp_failure@@Base+0x3220>
   1d278:	mov	r7, r0
   1d27c:	str	r6, [sp, #24]
   1d280:	add	r0, r5, r6, lsl #4
   1d284:	ldr	sl, [r0, #16]
   1d288:	cmp	sl, #0
   1d28c:	bne	1d1b8 <argp_failure@@Base+0x3110>
   1d290:	b	1d30c <argp_failure@@Base+0x3264>
   1d294:	ldr	r1, [sp, #32]
   1d298:	cmp	r1, #0
   1d29c:	bne	1d1a8 <argp_failure@@Base+0x3100>
   1d2a0:	ldr	r0, [r0, #12]
   1d2a4:	ldr	r1, [r7, #12]
   1d2a8:	cmp	r1, r0
   1d2ac:	bne	1d210 <argp_failure@@Base+0x3168>
   1d2b0:	b	1d1a8 <argp_failure@@Base+0x3100>
   1d2b4:	ldr	r8, [sp, #20]
   1d2b8:	mov	r0, #1
   1d2bc:	str	r0, [sp, #32]
   1d2c0:	cmp	r8, #0
   1d2c4:	beq	1d2f4 <argp_failure@@Base+0x324c>
   1d2c8:	mov	r0, #1
   1d2cc:	str	r8, [sp, #20]
   1d2d0:	strb	r0, [r8, r6]
   1d2d4:	add	r0, r5, r6, lsl #4
   1d2d8:	ldr	sl, [r0, #16]
   1d2dc:	cmp	sl, #0
   1d2e0:	bne	1d1b8 <argp_failure@@Base+0x3110>
   1d2e4:	b	1d30c <argp_failure@@Base+0x3264>
   1d2e8:	ldr	r3, [sp, #36]	; 0x24
   1d2ec:	mov	r0, #1
   1d2f0:	str	r0, [sp, #32]
   1d2f4:	mov	r0, #0
   1d2f8:	str	r0, [sp, #20]
   1d2fc:	add	r0, r5, r6, lsl #4
   1d300:	ldr	sl, [r0, #16]
   1d304:	cmp	sl, #0
   1d308:	bne	1d1b8 <argp_failure@@Base+0x3110>
   1d30c:	ldr	r6, [sp, #28]
   1d310:	ldr	r1, [sp, #20]
   1d314:	ldr	r8, [sp, #4]
   1d318:	cmp	r1, #0
   1d31c:	ldreq	r0, [sp, #32]
   1d320:	cmpeq	r0, #0
   1d324:	bne	1d100 <argp_failure@@Base+0x3058>
   1d328:	cmp	r7, #0
   1d32c:	beq	1d3d0 <argp_failure@@Base+0x3328>
   1d330:	ldr	r1, [fp, #16]
   1d334:	mov	r0, #0
   1d338:	str	r0, [r1, #20]
   1d33c:	mov	r2, r1
   1d340:	ldr	r1, [r1]
   1d344:	add	r0, r1, #1
   1d348:	str	r0, [r2]
   1d34c:	ldrb	r3, [r9]
   1d350:	ldr	r2, [r7, #4]
   1d354:	cmp	r3, #0
   1d358:	beq	1d374 <argp_failure@@Base+0x32cc>
   1d35c:	cmp	r2, #0
   1d360:	beq	1d450 <argp_failure@@Base+0x33a8>
   1d364:	ldr	r1, [fp, #16]
   1d368:	add	r0, r9, #1
   1d36c:	str	r0, [r1, #12]
   1d370:	b	1d3a0 <argp_failure@@Base+0x32f8>
   1d374:	cmp	r2, #1
   1d378:	bne	1d3a0 <argp_failure@@Base+0x32f8>
   1d37c:	ldr	r2, [sp, #8]
   1d380:	cmp	r0, r2
   1d384:	bge	1d510 <argp_failure@@Base+0x3468>
   1d388:	ldr	r2, [fp, #16]
   1d38c:	add	r1, r1, #2
   1d390:	str	r1, [r2]
   1d394:	ldr	r1, [sp, #16]
   1d398:	ldr	r0, [r1, r0, lsl #2]
   1d39c:	str	r0, [r2, #12]
   1d3a0:	ldr	r0, [fp, #8]
   1d3a4:	cmp	r0, #0
   1d3a8:	ldrne	r1, [sp, #24]
   1d3ac:	strne	r1, [r0]
   1d3b0:	ldr	r1, [r7, #8]
   1d3b4:	ldr	r0, [r7, #12]
   1d3b8:	cmp	r1, #0
   1d3bc:	beq	1d538 <argp_failure@@Base+0x3490>
   1d3c0:	str	r0, [r1]
   1d3c4:	mov	r0, #0
   1d3c8:	sub	sp, fp, #28
   1d3cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d3d0:	ldr	r0, [fp, #12]
   1d3d4:	cmp	r0, #0
   1d3d8:	beq	1d41c <argp_failure@@Base+0x3374>
   1d3dc:	ldr	r0, [fp, #16]
   1d3e0:	ldr	r1, [sp, #16]
   1d3e4:	ldr	r0, [r0]
   1d3e8:	ldr	r0, [r1, r0, lsl #2]
   1d3ec:	ldrb	r0, [r0, #1]
   1d3f0:	cmp	r0, #45	; 0x2d
   1d3f4:	beq	1d41c <argp_failure@@Base+0x3374>
   1d3f8:	ldr	r0, [fp, #16]
   1d3fc:	ldr	r0, [r0, #20]
   1d400:	ldrb	r1, [r0]
   1d404:	ldr	r0, [sp, #12]
   1d408:	bl	11d44 <strchr@plt>
   1d40c:	mov	r1, r0
   1d410:	mvn	r0, #0
   1d414:	cmp	r1, #0
   1d418:	bne	1d538 <argp_failure@@Base+0x3490>
   1d41c:	ldr	r0, [fp, #20]
   1d420:	cmp	r0, #0
   1d424:	bne	1d638 <argp_failure@@Base+0x3590>
   1d428:	ldr	r1, [fp, #16]
   1d42c:	mov	r0, #0
   1d430:	str	r0, [r1, #20]
   1d434:	str	r0, [r1, #8]
   1d438:	ldr	r0, [r1]
   1d43c:	add	r0, r0, #1
   1d440:	str	r0, [r1]
   1d444:	mov	r0, #63	; 0x3f
   1d448:	sub	sp, fp, #28
   1d44c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d450:	ldr	r0, [fp, #20]
   1d454:	cmp	r0, #0
   1d458:	bne	1d66c <argp_failure@@Base+0x35c4>
   1d45c:	ldr	r0, [r7, #12]
   1d460:	ldr	r1, [fp, #16]
   1d464:	str	r0, [r1, #8]
   1d468:	mov	r0, #63	; 0x3f
   1d46c:	sub	sp, fp, #28
   1d470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d474:	ldr	r5, [sp, #28]
   1d478:	mov	r0, #0
   1d47c:	mov	r6, #0
   1d480:	mov	r7, #0
   1d484:	str	r0, [sp, #32]
   1d488:	mvn	r0, #0
   1d48c:	str	r0, [sp, #24]
   1d490:	b	1d4b4 <argp_failure@@Base+0x340c>
   1d494:	ldr	r0, [sp, #32]
   1d498:	cmp	r0, #0
   1d49c:	movweq	r0, #1
   1d4a0:	str	r0, [sp, #32]
   1d4a4:	ldr	sl, [r5, #16]!
   1d4a8:	add	r6, r6, #1
   1d4ac:	cmp	sl, #0
   1d4b0:	beq	1d4f0 <argp_failure@@Base+0x3448>
   1d4b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d4b8:	mov	r0, sl
   1d4bc:	mov	r1, r8
   1d4c0:	bl	11f24 <strncmp@plt>
   1d4c4:	cmp	r0, #0
   1d4c8:	bne	1d4a4 <argp_failure@@Base+0x33fc>
   1d4cc:	cmp	r7, #0
   1d4d0:	bne	1d494 <argp_failure@@Base+0x33ec>
   1d4d4:	mov	r7, r5
   1d4d8:	mov	r0, r6
   1d4dc:	str	r6, [sp, #24]
   1d4e0:	ldr	sl, [r5, #16]!
   1d4e4:	add	r6, r6, #1
   1d4e8:	cmp	sl, #0
   1d4ec:	bne	1d4b4 <argp_failure@@Base+0x340c>
   1d4f0:	ldr	r6, [sp, #28]
   1d4f4:	mov	r1, #0
   1d4f8:	mov	r8, #0
   1d4fc:	cmp	r1, #0
   1d500:	ldreq	r0, [sp, #32]
   1d504:	cmpeq	r0, #0
   1d508:	bne	1d100 <argp_failure@@Base+0x3058>
   1d50c:	b	1d328 <argp_failure@@Base+0x3280>
   1d510:	ldr	r0, [fp, #20]
   1d514:	cmp	r0, #0
   1d518:	bne	1d69c <argp_failure@@Base+0x35f4>
   1d51c:	ldr	r0, [r7, #12]
   1d520:	ldr	r1, [fp, #16]
   1d524:	str	r0, [r1, #8]
   1d528:	ldr	r0, [sp, #12]
   1d52c:	ldrb	r0, [r0]
   1d530:	cmp	r0, #58	; 0x3a
   1d534:	movwne	r0, #63	; 0x3f
   1d538:	sub	sp, fp, #28
   1d53c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d540:	movw	sl, #944	; 0x3b0
   1d544:	mov	r9, r1
   1d548:	ldr	r1, [sp, #32]
   1d54c:	movt	sl, #3
   1d550:	ldr	r0, [sl]
   1d554:	cmp	r1, #0
   1d558:	beq	1d590 <argp_failure@@Base+0x34e8>
   1d55c:	ldr	r1, [sp, #16]
   1d560:	ldr	r3, [fp, #24]
   1d564:	ldr	r2, [r1]
   1d568:	ldr	r1, [fp, #16]
   1d56c:	ldr	r1, [r1, #20]
   1d570:	str	r1, [sp]
   1d574:	movw	r1, #62497	; 0xf421
   1d578:	movt	r1, #1
   1d57c:	bl	11d5c <fprintf@plt>
   1d580:	mov	r1, r9
   1d584:	cmp	r8, #0
   1d588:	bne	1d114 <argp_failure@@Base+0x306c>
   1d58c:	b	1d11c <argp_failure@@Base+0x3074>
   1d590:	bl	11eac <flockfile@plt>
   1d594:	ldr	r1, [fp, #16]
   1d598:	ldr	r0, [sp, #16]
   1d59c:	ldr	r5, [fp, #24]
   1d5a0:	ldr	r1, [r1, #20]
   1d5a4:	ldr	r2, [r0]
   1d5a8:	ldr	r0, [sl]
   1d5ac:	mov	r3, r5
   1d5b0:	str	r1, [sp]
   1d5b4:	movw	r1, #62529	; 0xf441
   1d5b8:	movt	r1, #1
   1d5bc:	bl	11d5c <fprintf@plt>
   1d5c0:	cmp	r4, #0
   1d5c4:	beq	1d614 <argp_failure@@Base+0x356c>
   1d5c8:	mov	r7, r9
   1d5cc:	ldrb	r0, [r7]
   1d5d0:	cmp	r0, #0
   1d5d4:	bne	1d5ec <argp_failure@@Base+0x3544>
   1d5d8:	add	r6, r6, #16
   1d5dc:	add	r7, r7, #1
   1d5e0:	subs	r4, r4, #1
   1d5e4:	bne	1d5cc <argp_failure@@Base+0x3524>
   1d5e8:	b	1d614 <argp_failure@@Base+0x356c>
   1d5ec:	ldr	r3, [r6]
   1d5f0:	ldr	r0, [sl]
   1d5f4:	movw	r1, #62576	; 0xf470
   1d5f8:	mov	r2, r5
   1d5fc:	movt	r1, #1
   1d600:	bl	11d5c <fprintf@plt>
   1d604:	add	r6, r6, #16
   1d608:	add	r7, r7, #1
   1d60c:	subs	r4, r4, #1
   1d610:	bne	1d5cc <argp_failure@@Base+0x3524>
   1d614:	ldr	r1, [sl]
   1d618:	mov	r0, #10
   1d61c:	bl	11e58 <fputc@plt>
   1d620:	ldr	r0, [sl]
   1d624:	bl	11c24 <funlockfile@plt>
   1d628:	mov	r1, r9
   1d62c:	cmp	r8, #0
   1d630:	bne	1d114 <argp_failure@@Base+0x306c>
   1d634:	b	1d11c <argp_failure@@Base+0x3074>
   1d638:	ldr	r1, [fp, #16]
   1d63c:	ldr	r0, [sp, #16]
   1d640:	ldr	r3, [fp, #24]
   1d644:	ldr	r2, [r0]
   1d648:	movw	r0, #944	; 0x3b0
   1d64c:	ldr	r1, [r1, #20]
   1d650:	movt	r0, #3
   1d654:	ldr	r0, [r0]
   1d658:	str	r1, [sp]
   1d65c:	movw	r1, #62584	; 0xf478
   1d660:	movt	r1, #1
   1d664:	bl	11d5c <fprintf@plt>
   1d668:	b	1d428 <argp_failure@@Base+0x3380>
   1d66c:	ldr	r0, [sp, #16]
   1d670:	ldr	r1, [r7]
   1d674:	ldr	r3, [fp, #24]
   1d678:	ldr	r2, [r0]
   1d67c:	movw	r0, #944	; 0x3b0
   1d680:	str	r1, [sp]
   1d684:	movw	r1, #62616	; 0xf498
   1d688:	movt	r0, #3
   1d68c:	movt	r1, #1
   1d690:	ldr	r0, [r0]
   1d694:	bl	11d5c <fprintf@plt>
   1d698:	b	1d45c <argp_failure@@Base+0x33b4>
   1d69c:	ldr	r0, [sp, #16]
   1d6a0:	ldr	r1, [r7]
   1d6a4:	ldr	r3, [fp, #24]
   1d6a8:	ldr	r2, [r0]
   1d6ac:	movw	r0, #944	; 0x3b0
   1d6b0:	str	r1, [sp]
   1d6b4:	movw	r1, #62661	; 0xf4c5
   1d6b8:	movt	r0, #3
   1d6bc:	movt	r1, #1
   1d6c0:	ldr	r0, [r0]
   1d6c4:	bl	11d5c <fprintf@plt>
   1d6c8:	b	1d51c <argp_failure@@Base+0x3474>
   1d6cc:	push	{r4, r5, r6, r7, fp, lr}
   1d6d0:	add	fp, sp, #16
   1d6d4:	sub	sp, sp, #16
   1d6d8:	movw	r6, #920	; 0x398
   1d6dc:	movw	r7, #1220	; 0x4c4
   1d6e0:	movt	r6, #3
   1d6e4:	movt	r7, #3
   1d6e8:	ldm	r6, {r4, r5}
   1d6ec:	str	r7, [sp, #8]
   1d6f0:	stm	r7, {r4, r5}
   1d6f4:	ldr	r5, [fp, #16]
   1d6f8:	str	r5, [sp, #12]
   1d6fc:	ldr	r5, [fp, #12]
   1d700:	str	r5, [sp, #4]
   1d704:	ldr	r5, [fp, #8]
   1d708:	str	r5, [sp]
   1d70c:	bl	1c1ac <argp_failure@@Base+0x2104>
   1d710:	ldr	r1, [r7]
   1d714:	ldr	r2, [r7, #8]
   1d718:	ldr	r3, [r7, #12]
   1d71c:	str	r1, [r6]
   1d720:	movw	r1, #1568	; 0x620
   1d724:	str	r2, [r6, #8]
   1d728:	movt	r1, #3
   1d72c:	str	r3, [r1]
   1d730:	sub	sp, fp, #16
   1d734:	pop	{r4, r5, r6, r7, fp, pc}
   1d738:	push	{r4, r5, r6, sl, fp, lr}
   1d73c:	add	fp, sp, #16
   1d740:	sub	sp, sp, #16
   1d744:	movw	r5, #920	; 0x398
   1d748:	movw	r6, #1220	; 0x4c4
   1d74c:	movt	r5, #3
   1d750:	movt	r6, #3
   1d754:	ldm	r5, {r3, r4}
   1d758:	stm	r6, {r3, r4}
   1d75c:	mov	r4, #0
   1d760:	mov	r3, #1
   1d764:	str	r4, [sp]
   1d768:	stmib	sp, {r4, r6}
   1d76c:	str	r3, [sp, #12]
   1d770:	mov	r3, #0
   1d774:	bl	1c1ac <argp_failure@@Base+0x2104>
   1d778:	ldr	r1, [r6]
   1d77c:	ldr	r2, [r6, #8]
   1d780:	ldr	r3, [r6, #12]
   1d784:	str	r1, [r5]
   1d788:	movw	r1, #1568	; 0x620
   1d78c:	str	r2, [r5, #8]
   1d790:	movt	r1, #3
   1d794:	str	r3, [r1]
   1d798:	sub	sp, fp, #16
   1d79c:	pop	{r4, r5, r6, sl, fp, pc}
   1d7a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d7a4:	add	fp, sp, #24
   1d7a8:	mov	r7, r0
   1d7ac:	mov	r0, #36	; 0x24
   1d7b0:	mov	r8, r3
   1d7b4:	mov	r9, r2
   1d7b8:	mov	r6, r1
   1d7bc:	bl	18608 <argp_parse@@Base+0x1b64>
   1d7c0:	cmp	r0, #0
   1d7c4:	beq	1d80c <argp_failure@@Base+0x3764>
   1d7c8:	mov	r5, #0
   1d7cc:	str	r7, [r0]
   1d7d0:	stmib	r0, {r6, r9}
   1d7d4:	str	r8, [r0, #12]
   1d7d8:	mov	r4, r0
   1d7dc:	str	r5, [r0, #16]
   1d7e0:	str	r5, [r0, #20]
   1d7e4:	mov	r0, #200	; 0xc8
   1d7e8:	bl	18608 <argp_parse@@Base+0x1b64>
   1d7ec:	cmp	r0, #0
   1d7f0:	str	r0, [r4, #24]
   1d7f4:	beq	1d818 <argp_failure@@Base+0x3770>
   1d7f8:	add	r1, r0, #200	; 0xc8
   1d7fc:	str	r0, [r4, #28]
   1d800:	mov	r0, r4
   1d804:	str	r1, [r4, #32]
   1d808:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d80c:	mov	r5, #0
   1d810:	mov	r0, r5
   1d814:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d818:	mov	r0, r4
   1d81c:	bl	17e80 <argp_parse@@Base+0x13dc>
   1d820:	mov	r0, r5
   1d824:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d828:	push	{r4, sl, fp, lr}
   1d82c:	add	fp, sp, #8
   1d830:	mov	r4, r0
   1d834:	bl	1d86c <argp_failure@@Base+0x37c4>
   1d838:	ldr	r0, [r4, #24]
   1d83c:	ldr	r1, [r4, #28]
   1d840:	cmp	r1, r0
   1d844:	bls	1d858 <argp_failure@@Base+0x37b0>
   1d848:	ldr	r3, [r4]
   1d84c:	sub	r2, r1, r0
   1d850:	mov	r1, #1
   1d854:	bl	11b88 <fwrite_unlocked@plt>
   1d858:	ldr	r0, [r4, #24]
   1d85c:	bl	17e80 <argp_parse@@Base+0x13dc>
   1d860:	mov	r0, r4
   1d864:	pop	{r4, sl, fp, lr}
   1d868:	b	17e80 <argp_parse@@Base+0x13dc>
   1d86c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d870:	add	fp, sp, #28
   1d874:	sub	sp, sp, #12
   1d878:	mov	sl, r0
   1d87c:	ldr	r0, [r0, #16]
   1d880:	ldr	r1, [sl, #24]
   1d884:	ldr	r8, [sl, #28]
   1d888:	add	r5, r1, r0
   1d88c:	cmp	r5, r8
   1d890:	bcs	1ddd4 <argp_failure@@Base+0x3d2c>
   1d894:	ldr	r7, [sl, #20]
   1d898:	mov	r3, #32
   1d89c:	cmp	r7, #0
   1d8a0:	bne	1d8d8 <argp_failure@@Base+0x3830>
   1d8a4:	b	1d8e0 <argp_failure@@Base+0x3838>
   1d8a8:	ldr	r0, [sp, #8]
   1d8ac:	cmp	r7, #0
   1d8b0:	mvneq	r7, #0
   1d8b4:	str	r7, [sl, #20]
   1d8b8:	sub	r0, r0, r6
   1d8bc:	add	r0, r0, r9
   1d8c0:	add	r8, r5, r0
   1d8c4:	str	r8, [sl, #28]
   1d8c8:	cmp	r5, r8
   1d8cc:	bcs	1ddd4 <argp_failure@@Base+0x3d2c>
   1d8d0:	cmp	r7, #0
   1d8d4:	beq	1d8e0 <argp_failure@@Base+0x3838>
   1d8d8:	mov	r9, r5
   1d8dc:	b	1d980 <argp_failure@@Base+0x38d8>
   1d8e0:	ldr	r7, [sl, #4]
   1d8e4:	cmp	r7, #0
   1d8e8:	beq	1db00 <argp_failure@@Base+0x3a58>
   1d8ec:	ldr	r1, [sl, #32]
   1d8f0:	add	r0, r8, r7
   1d8f4:	mov	r4, r7
   1d8f8:	cmp	r0, r1
   1d8fc:	bcs	1d934 <argp_failure@@Base+0x388c>
   1d900:	add	r9, r5, r7
   1d904:	sub	r2, r8, r5
   1d908:	mov	r1, r5
   1d90c:	mov	r0, r9
   1d910:	bl	11b1c <memmove@plt>
   1d914:	ldr	r0, [sl, #28]
   1d918:	mov	r1, #32
   1d91c:	mov	r2, r7
   1d920:	add	r0, r0, r7
   1d924:	str	r0, [sl, #28]
   1d928:	mov	r0, r5
   1d92c:	bl	11da4 <memset@plt>
   1d930:	b	1d978 <argp_failure@@Base+0x38d0>
   1d934:	ldr	r0, [sl]
   1d938:	ldr	r1, [r0, #20]
   1d93c:	ldr	r2, [r0, #24]
   1d940:	cmp	r1, r2
   1d944:	bcs	1d960 <argp_failure@@Base+0x38b8>
   1d948:	add	r2, r1, #1
   1d94c:	str	r2, [r0, #20]
   1d950:	strb	r3, [r1]
   1d954:	subs	r4, r4, #1
   1d958:	bne	1d934 <argp_failure@@Base+0x388c>
   1d95c:	b	1d974 <argp_failure@@Base+0x38cc>
   1d960:	mov	r1, #32
   1d964:	bl	11e04 <__overflow@plt>
   1d968:	mov	r3, #32
   1d96c:	subs	r4, r4, #1
   1d970:	bne	1d934 <argp_failure@@Base+0x388c>
   1d974:	mov	r9, r5
   1d978:	str	r7, [sl, #20]
   1d97c:	ldr	r8, [sl, #28]
   1d980:	sub	r6, r8, r9
   1d984:	mov	r0, r9
   1d988:	mov	r1, #10
   1d98c:	mov	r2, r6
   1d990:	bl	11de0 <memchr@plt>
   1d994:	cmn	r7, #1
   1d998:	mov	r4, r0
   1d99c:	movle	r7, #0
   1d9a0:	strle	r7, [sl, #20]
   1d9a4:	cmp	r4, #0
   1d9a8:	beq	1d9dc <argp_failure@@Base+0x3934>
   1d9ac:	ldr	r5, [sl, #8]
   1d9b0:	sub	r0, r4, r9
   1d9b4:	mov	r3, #32
   1d9b8:	add	r0, r0, r7
   1d9bc:	cmp	r0, r5
   1d9c0:	bge	1d9f0 <argp_failure@@Base+0x3948>
   1d9c4:	mov	r7, #0
   1d9c8:	add	r5, r4, #1
   1d9cc:	str	r7, [sl, #20]
   1d9d0:	cmp	r5, r8
   1d9d4:	bcc	1d8d0 <argp_failure@@Base+0x3828>
   1d9d8:	b	1ddd4 <argp_failure@@Base+0x3d2c>
   1d9dc:	ldr	r5, [sl, #8]
   1d9e0:	add	r0, r7, r6
   1d9e4:	mov	r4, r8
   1d9e8:	cmp	r0, r5
   1d9ec:	bcc	1ddb8 <argp_failure@@Base+0x3d10>
   1d9f0:	ldr	r0, [sl, #12]
   1d9f4:	cmn	r0, #1
   1d9f8:	str	r0, [sp, #4]
   1d9fc:	ble	1da58 <argp_failure@@Base+0x39b0>
   1da00:	subs	r0, r5, r7
   1da04:	mov	r1, #0
   1da08:	str	r6, [sp, #8]
   1da0c:	add	r5, r9, r0
   1da10:	bmi	1dab4 <argp_failure@@Base+0x3a0c>
   1da14:	str	r0, [sp]
   1da18:	bl	11cf0 <__ctype_b_loc@plt>
   1da1c:	ldr	r0, [r0]
   1da20:	mov	r7, r5
   1da24:	ldrb	r1, [r7]
   1da28:	ldrb	r1, [r0, r1, lsl #1]
   1da2c:	tst	r1, #1
   1da30:	bne	1db08 <argp_failure@@Base+0x3a60>
   1da34:	sub	r7, r7, #1
   1da38:	cmp	r7, r9
   1da3c:	bcs	1da24 <argp_failure@@Base+0x397c>
   1da40:	ldr	r0, [sp]
   1da44:	mov	r1, #0
   1da48:	add	r6, r7, #1
   1da4c:	cmp	r6, r9
   1da50:	bhi	1dac4 <argp_failure@@Base+0x3a1c>
   1da54:	b	1db1c <argp_failure@@Base+0x3a74>
   1da58:	mov	r0, r6
   1da5c:	sub	r6, r5, #1
   1da60:	cmp	r4, r8
   1da64:	bcs	1ddc0 <argp_failure@@Base+0x3d18>
   1da68:	sub	r0, r6, r7
   1da6c:	sub	r2, r8, r4
   1da70:	mov	r1, r4
   1da74:	add	r0, r9, r0
   1da78:	bl	11b1c <memmove@plt>
   1da7c:	ldr	r0, [sl, #20]
   1da80:	ldr	r1, [sl, #28]
   1da84:	mov	r7, #0
   1da88:	mov	r3, #32
   1da8c:	add	r5, r9, r5
   1da90:	str	r7, [sl, #20]
   1da94:	sub	r0, r6, r0
   1da98:	add	r0, r9, r0
   1da9c:	sub	r0, r4, r0
   1daa0:	add	r8, r1, r0
   1daa4:	str	r8, [sl, #28]
   1daa8:	cmp	r5, r8
   1daac:	bcc	1d8d0 <argp_failure@@Base+0x3828>
   1dab0:	b	1ddd4 <argp_failure@@Base+0x3d2c>
   1dab4:	mov	r7, r5
   1dab8:	add	r6, r7, #1
   1dabc:	cmp	r6, r9
   1dac0:	bls	1db1c <argp_failure@@Base+0x3a74>
   1dac4:	cmp	r1, #0
   1dac8:	beq	1dbf4 <argp_failure@@Base+0x3b4c>
   1dacc:	ldr	r4, [sp, #4]
   1dad0:	sub	r1, r7, #1
   1dad4:	mov	r7, r1
   1dad8:	cmp	r1, r9
   1dadc:	bcc	1dbf8 <argp_failure@@Base+0x3b50>
   1dae0:	bl	11cf0 <__ctype_b_loc@plt>
   1dae4:	mov	r1, r7
   1dae8:	ldr	r0, [r0]
   1daec:	ldrb	r2, [r1], #-1
   1daf0:	ldrb	r0, [r0, r2, lsl #1]
   1daf4:	tst	r0, #1
   1daf8:	bne	1dad4 <argp_failure@@Base+0x3a2c>
   1dafc:	b	1dbf8 <argp_failure@@Base+0x3b50>
   1db00:	mov	r7, #0
   1db04:	b	1d8d8 <argp_failure@@Base+0x3830>
   1db08:	ldr	r0, [sp]
   1db0c:	mov	r1, #1
   1db10:	add	r6, r7, #1
   1db14:	cmp	r6, r9
   1db18:	bhi	1dac4 <argp_failure@@Base+0x3a1c>
   1db1c:	cmp	r5, r4
   1db20:	bcs	1db54 <argp_failure@@Base+0x3aac>
   1db24:	add	r0, r9, r0
   1db28:	add	r1, r0, #1
   1db2c:	mov	r5, r1
   1db30:	cmp	r1, r4
   1db34:	bcs	1db54 <argp_failure@@Base+0x3aac>
   1db38:	bl	11cf0 <__ctype_b_loc@plt>
   1db3c:	mov	r1, r5
   1db40:	ldr	r0, [r0]
   1db44:	ldrb	r2, [r1], #1
   1db48:	ldrb	r0, [r0, r2, lsl #1]
   1db4c:	tst	r0, #1
   1db50:	beq	1db2c <argp_failure@@Base+0x3a84>
   1db54:	cmp	r5, r4
   1db58:	beq	1dd8c <argp_failure@@Base+0x3ce4>
   1db5c:	bl	11cf0 <__ctype_b_loc@plt>
   1db60:	ldr	r0, [r0]
   1db64:	mov	r6, r5
   1db68:	ldrb	r1, [r6, #1]!
   1db6c:	ldrb	r1, [r0, r1, lsl #1]
   1db70:	tst	r1, #1
   1db74:	bne	1db68 <argp_failure@@Base+0x3ac0>
   1db78:	ldr	r4, [sp, #4]
   1db7c:	mov	r3, #32
   1db80:	add	r0, r8, #1
   1db84:	cmp	r6, r0
   1db88:	bne	1dc0c <argp_failure@@Base+0x3b64>
   1db8c:	cmp	r8, r6
   1db90:	bls	1dca0 <argp_failure@@Base+0x3bf8>
   1db94:	ldr	r0, [sl, #32]
   1db98:	sub	r1, r0, r5
   1db9c:	cmp	r1, r4
   1dba0:	bgt	1dca0 <argp_failure@@Base+0x3bf8>
   1dba4:	sub	r0, r0, r8
   1dba8:	add	r1, r4, #1
   1dbac:	cmp	r0, r1
   1dbb0:	ble	1dc38 <argp_failure@@Base+0x3b90>
   1dbb4:	mov	r0, r4
   1dbb8:	sub	r4, r8, r6
   1dbbc:	add	r7, r5, #1
   1dbc0:	mov	r1, r6
   1dbc4:	add	r0, r7, r0
   1dbc8:	mov	r2, r4
   1dbcc:	bl	11b1c <memmove@plt>
   1dbd0:	ldr	r0, [sl, #12]
   1dbd4:	mov	r1, #10
   1dbd8:	mov	r3, #32
   1dbdc:	strb	r1, [r5]
   1dbe0:	mov	r5, r7
   1dbe4:	add	r6, r7, r0
   1dbe8:	add	r0, r6, r4
   1dbec:	sub	r0, r0, r9
   1dbf0:	b	1dc88 <argp_failure@@Base+0x3be0>
   1dbf4:	ldr	r4, [sp, #4]
   1dbf8:	add	r5, r7, #1
   1dbfc:	mov	r3, #32
   1dc00:	add	r0, r8, #1
   1dc04:	cmp	r6, r0
   1dc08:	beq	1db8c <argp_failure@@Base+0x3ae4>
   1dc0c:	cmp	r8, r6
   1dc10:	bls	1dca0 <argp_failure@@Base+0x3bf8>
   1dc14:	mvn	r0, r5
   1dc18:	add	r0, r0, r6
   1dc1c:	cmp	r0, r4
   1dc20:	bge	1dca0 <argp_failure@@Base+0x3bf8>
   1dc24:	ldr	r0, [sl, #32]
   1dc28:	sub	r0, r0, r8
   1dc2c:	add	r1, r4, #1
   1dc30:	cmp	r0, r1
   1dc34:	bgt	1dbb4 <argp_failure@@Base+0x3b0c>
   1dc38:	ldr	r0, [sl, #24]
   1dc3c:	cmp	r5, r0
   1dc40:	bls	1dc58 <argp_failure@@Base+0x3bb0>
   1dc44:	ldr	r3, [sl]
   1dc48:	sub	r2, r5, r0
   1dc4c:	mov	r1, #1
   1dc50:	bl	11b88 <fwrite_unlocked@plt>
   1dc54:	mov	r3, #32
   1dc58:	ldr	r0, [sl]
   1dc5c:	ldr	r1, [r0, #20]
   1dc60:	ldr	r2, [r0, #24]
   1dc64:	cmp	r1, r2
   1dc68:	bcs	1dda8 <argp_failure@@Base+0x3d00>
   1dc6c:	add	r2, r1, #1
   1dc70:	str	r2, [r0, #20]
   1dc74:	mov	r0, #10
   1dc78:	strb	r0, [r1]
   1dc7c:	ldr	r5, [sl, #24]
   1dc80:	sub	r0, r8, r5
   1dc84:	mov	r9, r5
   1dc88:	str	r0, [sp, #8]
   1dc8c:	ldr	r7, [sl, #12]
   1dc90:	sub	r0, r6, r5
   1dc94:	cmp	r0, r7
   1dc98:	blt	1dcb8 <argp_failure@@Base+0x3c10>
   1dc9c:	b	1dd3c <argp_failure@@Base+0x3c94>
   1dca0:	mov	r0, #10
   1dca4:	strb	r0, [r5], #1
   1dca8:	ldr	r7, [sl, #12]
   1dcac:	sub	r0, r6, r5
   1dcb0:	cmp	r0, r7
   1dcb4:	bge	1dd3c <argp_failure@@Base+0x3c94>
   1dcb8:	ldr	r0, [sp, #8]
   1dcbc:	add	r0, r9, r0
   1dcc0:	add	r0, r0, #1
   1dcc4:	cmp	r6, r0
   1dcc8:	bne	1dcdc <argp_failure@@Base+0x3c34>
   1dccc:	ldr	r0, [sl, #32]
   1dcd0:	sub	r0, r0, r6
   1dcd4:	cmp	r0, r7
   1dcd8:	bge	1dd3c <argp_failure@@Base+0x3c94>
   1dcdc:	cmp	r7, #1
   1dce0:	blt	1dd60 <argp_failure@@Base+0x3cb8>
   1dce4:	mov	r4, #0
   1dce8:	ldr	r0, [sl]
   1dcec:	ldr	r1, [r0, #20]
   1dcf0:	ldr	r2, [r0, #24]
   1dcf4:	cmp	r1, r2
   1dcf8:	bcs	1dd1c <argp_failure@@Base+0x3c74>
   1dcfc:	add	r2, r1, #1
   1dd00:	str	r2, [r0, #20]
   1dd04:	strb	r3, [r1]
   1dd08:	ldr	r7, [sl, #12]
   1dd0c:	add	r4, r4, #1
   1dd10:	cmp	r4, r7
   1dd14:	blt	1dce8 <argp_failure@@Base+0x3c40>
   1dd18:	b	1dd60 <argp_failure@@Base+0x3cb8>
   1dd1c:	mov	r1, #32
   1dd20:	bl	11e04 <__overflow@plt>
   1dd24:	mov	r3, #32
   1dd28:	ldr	r7, [sl, #12]
   1dd2c:	add	r4, r4, #1
   1dd30:	cmp	r4, r7
   1dd34:	blt	1dce8 <argp_failure@@Base+0x3c40>
   1dd38:	b	1dd60 <argp_failure@@Base+0x3cb8>
   1dd3c:	cmp	r7, #1
   1dd40:	blt	1dd60 <argp_failure@@Base+0x3cb8>
   1dd44:	mov	r0, #0
   1dd48:	strb	r3, [r5, r0]
   1dd4c:	add	r0, r0, #1
   1dd50:	ldr	r7, [sl, #12]
   1dd54:	cmp	r0, r7
   1dd58:	blt	1dd48 <argp_failure@@Base+0x3ca0>
   1dd5c:	add	r5, r5, r0
   1dd60:	cmp	r5, r6
   1dd64:	bcs	1d8a8 <argp_failure@@Base+0x3800>
   1dd68:	ldr	r0, [sp, #8]
   1dd6c:	mov	r1, r6
   1dd70:	add	r0, r9, r0
   1dd74:	sub	r2, r0, r6
   1dd78:	mov	r0, r5
   1dd7c:	bl	11b1c <memmove@plt>
   1dd80:	ldr	r7, [sl, #12]
   1dd84:	mov	r3, #32
   1dd88:	b	1d8a8 <argp_failure@@Base+0x3800>
   1dd8c:	mov	r7, #0
   1dd90:	add	r5, r4, #1
   1dd94:	mov	r3, #32
   1dd98:	str	r7, [sl, #20]
   1dd9c:	cmp	r5, r8
   1dda0:	bcc	1d8d0 <argp_failure@@Base+0x3828>
   1dda4:	b	1ddd4 <argp_failure@@Base+0x3d2c>
   1dda8:	mov	r1, #10
   1ddac:	bl	11e04 <__overflow@plt>
   1ddb0:	mov	r3, #32
   1ddb4:	b	1dc7c <argp_failure@@Base+0x3bd4>
   1ddb8:	str	r0, [sl, #20]
   1ddbc:	b	1ddd4 <argp_failure@@Base+0x3d2c>
   1ddc0:	add	r0, r7, r0
   1ddc4:	str	r0, [sl, #20]
   1ddc8:	sub	r0, r6, r0
   1ddcc:	add	r8, r8, r0
   1ddd0:	str	r8, [sl, #28]
   1ddd4:	ldr	r0, [sl, #24]
   1ddd8:	sub	r0, r8, r0
   1dddc:	str	r0, [sl, #16]
   1dde0:	sub	sp, fp, #28
   1dde4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dde8:	push	{r4, r5, r6, sl, fp, lr}
   1ddec:	add	fp, sp, #16
   1ddf0:	mov	r4, r0
   1ddf4:	mov	r5, r1
   1ddf8:	ldr	r0, [r0, #28]
   1ddfc:	mov	r6, #1
   1de00:	ldr	r1, [r4, #32]
   1de04:	sub	r0, r1, r0
   1de08:	cmp	r0, r5
   1de0c:	bcs	1decc <argp_failure@@Base+0x3e24>
   1de10:	mov	r0, r4
   1de14:	bl	1d86c <argp_failure@@Base+0x37c4>
   1de18:	ldr	r0, [r4, #24]
   1de1c:	ldr	r1, [r4, #28]
   1de20:	ldr	r3, [r4]
   1de24:	sub	r2, r1, r0
   1de28:	mov	r1, #1
   1de2c:	bl	11b88 <fwrite_unlocked@plt>
   1de30:	mov	r1, r0
   1de34:	ldr	r0, [r4, #24]
   1de38:	ldr	r2, [r4, #28]
   1de3c:	sub	r3, r2, r0
   1de40:	cmp	r1, r3
   1de44:	bne	1de98 <argp_failure@@Base+0x3df0>
   1de48:	mov	r1, #0
   1de4c:	mov	r6, #1
   1de50:	str	r1, [r4, #16]
   1de54:	str	r0, [r4, #28]
   1de58:	ldr	r1, [r4, #32]
   1de5c:	sub	r1, r1, r0
   1de60:	cmp	r1, r5
   1de64:	bcs	1decc <argp_failure@@Base+0x3e24>
   1de68:	adds	r5, r1, r5
   1de6c:	bcs	1debc <argp_failure@@Base+0x3e14>
   1de70:	mov	r1, r5
   1de74:	bl	18638 <argp_parse@@Base+0x1b94>
   1de78:	cmp	r0, #0
   1de7c:	beq	1debc <argp_failure@@Base+0x3e14>
   1de80:	str	r0, [r4, #24]
   1de84:	add	r1, r0, r5
   1de88:	str	r0, [r4, #28]
   1de8c:	mov	r0, r6
   1de90:	str	r1, [r4, #32]
   1de94:	pop	{r4, r5, r6, sl, fp, pc}
   1de98:	sub	r2, r2, r1
   1de9c:	str	r2, [r4, #28]
   1dea0:	sub	r2, r2, r0
   1dea4:	ldr	r3, [r4, #16]
   1dea8:	sub	r3, r3, r1
   1deac:	add	r1, r0, r1
   1deb0:	str	r3, [r4, #16]
   1deb4:	bl	11b1c <memmove@plt>
   1deb8:	b	1dec8 <argp_failure@@Base+0x3e20>
   1debc:	bl	11d74 <__errno_location@plt>
   1dec0:	mov	r1, #12
   1dec4:	str	r1, [r0]
   1dec8:	mov	r6, #0
   1decc:	mov	r0, r6
   1ded0:	pop	{r4, r5, r6, sl, fp, pc}
   1ded4:	sub	sp, sp, #8
   1ded8:	push	{r4, r5, r6, r7, fp, lr}
   1dedc:	add	fp, sp, #16
   1dee0:	sub	sp, sp, #8
   1dee4:	mov	r5, r1
   1dee8:	mov	r4, r0
   1deec:	mov	r1, #150	; 0x96
   1def0:	add	r6, fp, #8
   1def4:	str	r2, [fp, #8]
   1def8:	str	r3, [fp, #12]
   1defc:	mov	r0, r4
   1df00:	bl	1dde8 <argp_failure@@Base+0x3d40>
   1df04:	cmp	r0, #0
   1df08:	beq	1df54 <argp_failure@@Base+0x3eac>
   1df0c:	str	r6, [sp, #4]
   1df10:	mov	r2, r5
   1df14:	mov	r3, r6
   1df18:	ldr	r0, [r4, #28]
   1df1c:	ldr	r1, [r4, #32]
   1df20:	sub	r7, r1, r0
   1df24:	mov	r1, r7
   1df28:	bl	11eb8 <vsnprintf@plt>
   1df2c:	add	r1, r0, #1
   1df30:	cmp	r0, r7
   1df34:	bcs	1defc <argp_failure@@Base+0x3e54>
   1df38:	ldr	r1, [r4, #28]
   1df3c:	add	r1, r1, r0
   1df40:	str	r1, [r4, #28]
   1df44:	sub	sp, fp, #16
   1df48:	pop	{r4, r5, r6, r7, fp, lr}
   1df4c:	add	sp, sp, #8
   1df50:	bx	lr
   1df54:	mvn	r0, #0
   1df58:	sub	sp, fp, #16
   1df5c:	pop	{r4, r5, r6, r7, fp, lr}
   1df60:	add	sp, sp, #8
   1df64:	bx	lr
   1df68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1df6c:	mov	r7, r0
   1df70:	ldr	r6, [pc, #72]	; 1dfc0 <argp_failure@@Base+0x3f18>
   1df74:	ldr	r5, [pc, #72]	; 1dfc4 <argp_failure@@Base+0x3f1c>
   1df78:	add	r6, pc, r6
   1df7c:	add	r5, pc, r5
   1df80:	sub	r6, r6, r5
   1df84:	mov	r8, r1
   1df88:	mov	r9, r2
   1df8c:	bl	11a60 <calloc@plt-0x20>
   1df90:	asrs	r6, r6, #2
   1df94:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1df98:	mov	r4, #0
   1df9c:	add	r4, r4, #1
   1dfa0:	ldr	r3, [r5], #4
   1dfa4:	mov	r2, r9
   1dfa8:	mov	r1, r8
   1dfac:	mov	r0, r7
   1dfb0:	blx	r3
   1dfb4:	cmp	r6, r4
   1dfb8:	bne	1df9c <argp_failure@@Base+0x3ef4>
   1dfbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dfc0:	andeq	r1, r1, r4, lsl #31
   1dfc4:	andeq	r1, r1, ip, ror pc
   1dfc8:	bx	lr

Disassembly of section .fini:

0001dfcc <.fini>:
   1dfcc:	push	{r3, lr}
   1dfd0:	pop	{r3, pc}
