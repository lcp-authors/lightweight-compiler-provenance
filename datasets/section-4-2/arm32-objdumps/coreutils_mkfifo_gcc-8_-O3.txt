
../repos/coreutils/src/mkfifo:     file format elf32-littlearm


Disassembly of section .init:

000113ec <.init>:
   113ec:	push	{r3, lr}
   113f0:	bl	11cc4 <__assert_fail@plt+0x498>
   113f4:	pop	{r3, pc}

Disassembly of section .plt:

000113f8 <fstatfs64@plt-0x14>:
   113f8:	push	{lr}		; (str lr, [sp, #-4]!)
   113fc:	ldr	lr, [pc, #4]	; 11408 <fstatfs64@plt-0x4>
   11400:	add	lr, pc, lr
   11404:	ldr	pc, [lr, #8]!
   11408:	strdeq	ip, [r1], -r8

0001140c <fstatfs64@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #28, 20	; 0x1c000
   11414:	ldr	pc, [ip, #3064]!	; 0xbf8

00011418 <selabel_lookup@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #28, 20	; 0x1c000
   11420:	ldr	pc, [ip, #3056]!	; 0xbf0

00011424 <calloc@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #28, 20	; 0x1c000
   1142c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011430 <fputs_unlocked@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #28, 20	; 0x1c000
   11438:	ldr	pc, [ip, #3040]!	; 0xbe0

0001143c <raise@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #28, 20	; 0x1c000
   11444:	ldr	pc, [ip, #3032]!	; 0xbd8

00011448 <is_selinux_enabled@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #28, 20	; 0x1c000
   11450:	ldr	pc, [ip, #3024]!	; 0xbd0

00011454 <strcmp@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #28, 20	; 0x1c000
   1145c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011460 <context_type_get@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #28, 20	; 0x1c000
   11468:	ldr	pc, [ip, #3008]!	; 0xbc0

0001146c <fflush@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #28, 20	; 0x1c000
   11474:	ldr	pc, [ip, #3000]!	; 0xbb8

00011478 <lsetfilecon@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #28, 20	; 0x1c000
   11480:	ldr	pc, [ip, #2992]!	; 0xbb0

00011484 <memmove@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #28, 20	; 0x1c000
   1148c:	ldr	pc, [ip, #2984]!	; 0xba8

00011490 <free@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #28, 20	; 0x1c000
   11498:	ldr	pc, [ip, #2976]!	; 0xba0

0001149c <faccessat@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #28, 20	; 0x1c000
   114a4:	ldr	pc, [ip, #2968]!	; 0xb98

000114a8 <_exit@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #28, 20	; 0x1c000
   114b0:	ldr	pc, [ip, #2960]!	; 0xb90

000114b4 <memcpy@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #28, 20	; 0x1c000
   114bc:	ldr	pc, [ip, #2952]!	; 0xb88

000114c0 <mbsinit@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #28, 20	; 0x1c000
   114c8:	ldr	pc, [ip, #2944]!	; 0xb80

000114cc <context_new@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #28, 20	; 0x1c000
   114d4:	ldr	pc, [ip, #2936]!	; 0xb78

000114d8 <memcmp@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #28, 20	; 0x1c000
   114e0:	ldr	pc, [ip, #2928]!	; 0xb70

000114e4 <fputc_unlocked@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #28, 20	; 0x1c000
   114ec:	ldr	pc, [ip, #2920]!	; 0xb68

000114f0 <dcgettext@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #28, 20	; 0x1c000
   114f8:	ldr	pc, [ip, #2912]!	; 0xb60

000114fc <context_type_set@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #28, 20	; 0x1c000
   11504:	ldr	pc, [ip, #2904]!	; 0xb58

00011508 <realloc@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #28, 20	; 0x1c000
   11510:	ldr	pc, [ip, #2896]!	; 0xb50

00011514 <fgetfilecon@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #28, 20	; 0x1c000
   1151c:	ldr	pc, [ip, #2888]!	; 0xb48

00011520 <textdomain@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #28, 20	; 0x1c000
   11528:	ldr	pc, [ip, #2880]!	; 0xb40

0001152c <rawmemchr@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #28, 20	; 0x1c000
   11534:	ldr	pc, [ip, #2872]!	; 0xb38

00011538 <__fxstatat64@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #28, 20	; 0x1c000
   11540:	ldr	pc, [ip, #2864]!	; 0xb30

00011544 <iswprint@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #28, 20	; 0x1c000
   1154c:	ldr	pc, [ip, #2856]!	; 0xb28

00011550 <__fxstat64@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #28, 20	; 0x1c000
   11558:	ldr	pc, [ip, #2848]!	; 0xb20

0001155c <readlink@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #28, 20	; 0x1c000
   11564:	ldr	pc, [ip, #2840]!	; 0xb18

00011568 <fwrite@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #28, 20	; 0x1c000
   11570:	ldr	pc, [ip, #2832]!	; 0xb10

00011574 <lseek64@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #28, 20	; 0x1c000
   1157c:	ldr	pc, [ip, #2824]!	; 0xb08

00011580 <__ctype_get_mb_cur_max@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #28, 20	; 0x1c000
   11588:	ldr	pc, [ip, #2816]!	; 0xb00

0001158c <getcon@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #28, 20	; 0x1c000
   11594:	ldr	pc, [ip, #2808]!	; 0xaf8

00011598 <__fpending@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #28, 20	; 0x1c000
   115a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000115a4 <mbrtowc@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #28, 20	; 0x1c000
   115ac:	ldr	pc, [ip, #2792]!	; 0xae8

000115b0 <error@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #28, 20	; 0x1c000
   115b8:	ldr	pc, [ip, #2784]!	; 0xae0

000115bc <open64@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #28, 20	; 0x1c000
   115c4:	ldr	pc, [ip, #2776]!	; 0xad8

000115c8 <lgetfilecon@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #28, 20	; 0x1c000
   115d0:	ldr	pc, [ip, #2768]!	; 0xad0

000115d4 <malloc@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #28, 20	; 0x1c000
   115dc:	ldr	pc, [ip, #2760]!	; 0xac8

000115e0 <__libc_start_main@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #28, 20	; 0x1c000
   115e8:	ldr	pc, [ip, #2752]!	; 0xac0

000115ec <__freading@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #28, 20	; 0x1c000
   115f4:	ldr	pc, [ip, #2744]!	; 0xab8

000115f8 <__gmon_start__@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #28, 20	; 0x1c000
   11600:	ldr	pc, [ip, #2736]!	; 0xab0

00011604 <context_free@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #28, 20	; 0x1c000
   1160c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011610 <mempcpy@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #28, 20	; 0x1c000
   11618:	ldr	pc, [ip, #2720]!	; 0xaa0

0001161c <getopt_long@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #28, 20	; 0x1c000
   11624:	ldr	pc, [ip, #2712]!	; 0xa98

00011628 <__ctype_b_loc@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #28, 20	; 0x1c000
   11630:	ldr	pc, [ip, #2704]!	; 0xa90

00011634 <getcwd@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #28, 20	; 0x1c000
   1163c:	ldr	pc, [ip, #2696]!	; 0xa88

00011640 <exit@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #28, 20	; 0x1c000
   11648:	ldr	pc, [ip, #2688]!	; 0xa80

0001164c <getfilecon@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #28, 20	; 0x1c000
   11654:	ldr	pc, [ip, #2680]!	; 0xa78

00011658 <strlen@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #28, 20	; 0x1c000
   11660:	ldr	pc, [ip, #2672]!	; 0xa70

00011664 <selabel_open@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #28, 20	; 0x1c000
   1166c:	ldr	pc, [ip, #2664]!	; 0xa68

00011670 <openat64@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #28, 20	; 0x1c000
   11678:	ldr	pc, [ip, #2656]!	; 0xa60

0001167c <setfscreatecon@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #28, 20	; 0x1c000
   11684:	ldr	pc, [ip, #2648]!	; 0xa58

00011688 <__errno_location@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #28, 20	; 0x1c000
   11690:	ldr	pc, [ip, #2640]!	; 0xa50

00011694 <__sprintf_chk@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #28, 20	; 0x1c000
   1169c:	ldr	pc, [ip, #2632]!	; 0xa48

000116a0 <__cxa_atexit@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #28, 20	; 0x1c000
   116a8:	ldr	pc, [ip, #2624]!	; 0xa40

000116ac <memset@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #28, 20	; 0x1c000
   116b4:	ldr	pc, [ip, #2616]!	; 0xa38

000116b8 <__printf_chk@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #28, 20	; 0x1c000
   116c0:	ldr	pc, [ip, #2608]!	; 0xa30

000116c4 <fileno@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #28, 20	; 0x1c000
   116cc:	ldr	pc, [ip, #2600]!	; 0xa28

000116d0 <__fprintf_chk@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #28, 20	; 0x1c000
   116d8:	ldr	pc, [ip, #2592]!	; 0xa20

000116dc <fclose@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #28, 20	; 0x1c000
   116e4:	ldr	pc, [ip, #2584]!	; 0xa18

000116e8 <fseeko64@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #28, 20	; 0x1c000
   116f0:	ldr	pc, [ip, #2576]!	; 0xa10

000116f4 <fcntl64@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #28, 20	; 0x1c000
   116fc:	ldr	pc, [ip, #2568]!	; 0xa08

00011700 <setlocale@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #28, 20	; 0x1c000
   11708:	ldr	pc, [ip, #2560]!	; 0xa00

0001170c <fsetfilecon@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #28, 20	; 0x1c000
   11714:	ldr	pc, [ip, #2552]!	; 0x9f8

00011718 <strrchr@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #28, 20	; 0x1c000
   11720:	ldr	pc, [ip, #2544]!	; 0x9f0

00011724 <nl_langinfo@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #28, 20	; 0x1c000
   1172c:	ldr	pc, [ip, #2536]!	; 0x9e8

00011730 <readdir64@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #28, 20	; 0x1c000
   11738:	ldr	pc, [ip, #2528]!	; 0x9e0

0001173c <fdopendir@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #28, 20	; 0x1c000
   11744:	ldr	pc, [ip, #2520]!	; 0x9d8

00011748 <security_compute_create@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #28, 20	; 0x1c000
   11750:	ldr	pc, [ip, #2512]!	; 0x9d0

00011754 <dirfd@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #28, 20	; 0x1c000
   1175c:	ldr	pc, [ip, #2504]!	; 0x9c8

00011760 <fchdir@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #28, 20	; 0x1c000
   11768:	ldr	pc, [ip, #2496]!	; 0x9c0

0001176c <qsort@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #28, 20	; 0x1c000
   11774:	ldr	pc, [ip, #2488]!	; 0x9b8

00011778 <freecon@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #28, 20	; 0x1c000
   11780:	ldr	pc, [ip, #2480]!	; 0x9b0

00011784 <bindtextdomain@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #28, 20	; 0x1c000
   1178c:	ldr	pc, [ip, #2472]!	; 0x9a8

00011790 <getfscreatecon@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #28, 20	; 0x1c000
   11798:	ldr	pc, [ip, #2464]!	; 0x9a0

0001179c <umask@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #28, 20	; 0x1c000
   117a4:	ldr	pc, [ip, #2456]!	; 0x998

000117a8 <context_str@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #28, 20	; 0x1c000
   117b0:	ldr	pc, [ip, #2448]!	; 0x990

000117b4 <chmod@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #28, 20	; 0x1c000
   117bc:	ldr	pc, [ip, #2440]!	; 0x988

000117c0 <__xstat64@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #28, 20	; 0x1c000
   117c8:	ldr	pc, [ip, #2432]!	; 0x980

000117cc <strncmp@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #28, 20	; 0x1c000
   117d4:	ldr	pc, [ip, #2424]!	; 0x978

000117d8 <abort@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #28, 20	; 0x1c000
   117e0:	ldr	pc, [ip, #2416]!	; 0x970

000117e4 <close@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #28, 20	; 0x1c000
   117ec:	ldr	pc, [ip, #2408]!	; 0x968

000117f0 <__lxstat64@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #28, 20	; 0x1c000
   117f8:	ldr	pc, [ip, #2400]!	; 0x960

000117fc <mkfifo@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #28, 20	; 0x1c000
   11804:	ldr	pc, [ip, #2392]!	; 0x958

00011808 <mode_to_security_class@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #28, 20	; 0x1c000
   11810:	ldr	pc, [ip, #2384]!	; 0x950

00011814 <closedir@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #28, 20	; 0x1c000
   1181c:	ldr	pc, [ip, #2376]!	; 0x948

00011820 <strspn@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #28, 20	; 0x1c000
   11828:	ldr	pc, [ip, #2368]!	; 0x940

0001182c <__assert_fail@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #28, 20	; 0x1c000
   11834:	ldr	pc, [ip, #2360]!	; 0x938

Disassembly of section .text:

00011838 <lchmod@@Base-0x5988>:
   11838:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1183c:	mov	r5, r1
   11840:	strd	r6, [sp, #8]
   11844:	movw	r6, #54752	; 0xd5e0
   11848:	movt	r6, #1
   1184c:	strd	r8, [sp, #16]
   11850:	mov	r9, #0
   11854:	mov	r8, r0
   11858:	strd	sl, [sp, #24]
   1185c:	movw	r7, #57824	; 0xe1e0
   11860:	movt	r7, #2
   11864:	str	lr, [sp, #32]
   11868:	sub	sp, sp, #28
   1186c:	mov	fp, r9
   11870:	ldr	r0, [r1]
   11874:	str	r9, [sp, #8]
   11878:	bl	17914 <lchmod@@Base+0x754>
   1187c:	movw	r1, #55260	; 0xd7dc
   11880:	movt	r1, #1
   11884:	ldr	sl, [pc, #1016]	; 11c84 <__assert_fail@plt+0x458>
   11888:	mov	r0, #6
   1188c:	bl	11700 <setlocale@plt>
   11890:	movw	r1, #54608	; 0xd550
   11894:	movt	r1, #1
   11898:	movw	r0, #54440	; 0xd4a8
   1189c:	movt	r0, #1
   118a0:	bl	11784 <bindtextdomain@plt>
   118a4:	movw	r0, #54440	; 0xd4a8
   118a8:	movt	r0, #1
   118ac:	bl	11520 <textdomain@plt>
   118b0:	movw	r0, #11856	; 0x2e50
   118b4:	movt	r0, #1
   118b8:	bl	1d164 <lchmod@@Base+0x5fa4>
   118bc:	mov	r4, #0
   118c0:	mov	r3, sl
   118c4:	mov	r2, r6
   118c8:	mov	r1, r5
   118cc:	mov	r0, r8
   118d0:	str	r4, [sp]
   118d4:	bl	1161c <getopt_long@plt>
   118d8:	cmn	r0, #1
   118dc:	beq	119e0 <__assert_fail@plt+0x1b4>
   118e0:	cmn	r0, #2
   118e4:	beq	11c38 <__assert_fail@plt+0x40c>
   118e8:	ble	11954 <__assert_fail@plt+0x128>
   118ec:	cmp	r0, #90	; 0x5a
   118f0:	bne	1199c <__assert_fail@plt+0x170>
   118f4:	bl	11448 <is_selinux_enabled@plt>
   118f8:	cmp	r0, #0
   118fc:	ble	119ac <__assert_fail@plt+0x180>
   11900:	ldr	r2, [r7]
   11904:	cmp	r2, #0
   11908:	strne	r2, [sp, #8]
   1190c:	bne	118bc <__assert_fail@plt+0x90>
   11910:	mov	r1, r2
   11914:	mov	r0, r2
   11918:	bl	11664 <selabel_open@plt>
   1191c:	subs	r9, r0, #0
   11920:	bne	118bc <__assert_fail@plt+0x90>
   11924:	bl	11688 <__errno_location@plt>
   11928:	ldr	r4, [r0]
   1192c:	mov	r2, #5
   11930:	mov	r0, r9
   11934:	movw	r1, #54632	; 0xd568
   11938:	movt	r1, #1
   1193c:	bl	114f0 <dcgettext@plt>
   11940:	mov	r2, r0
   11944:	mov	r0, r9
   11948:	mov	r1, r4
   1194c:	bl	115b0 <error@plt>
   11950:	b	118bc <__assert_fail@plt+0x90>
   11954:	cmn	r0, #3
   11958:	bne	11c30 <__assert_fail@plt+0x404>
   1195c:	movw	r2, #54736	; 0xd5d0
   11960:	movt	r2, #1
   11964:	movw	r3, #57724	; 0xe17c
   11968:	movt	r3, #2
   1196c:	movw	r0, #57820	; 0xe1dc
   11970:	movt	r0, #2
   11974:	stm	sp, {r2, r4}
   11978:	movw	r1, #53776	; 0xd210
   1197c:	movt	r1, #1
   11980:	ldr	r0, [r0]
   11984:	movw	r2, #54436	; 0xd4a4
   11988:	movt	r2, #1
   1198c:	ldr	r3, [r3]
   11990:	bl	1bd10 <lchmod@@Base+0x4b50>
   11994:	mov	r0, r4
   11998:	bl	11640 <exit@plt>
   1199c:	cmp	r0, #109	; 0x6d
   119a0:	bne	11c30 <__assert_fail@plt+0x404>
   119a4:	ldr	fp, [r7]
   119a8:	b	118bc <__assert_fail@plt+0x90>
   119ac:	ldr	r3, [r7]
   119b0:	cmp	r3, #0
   119b4:	beq	118bc <__assert_fail@plt+0x90>
   119b8:	mov	r2, #5
   119bc:	mov	r0, r4
   119c0:	movw	r1, #54660	; 0xd584
   119c4:	movt	r1, #1
   119c8:	bl	114f0 <dcgettext@plt>
   119cc:	mov	r2, r0
   119d0:	mov	r1, r4
   119d4:	mov	r0, r4
   119d8:	bl	115b0 <error@plt>
   119dc:	b	118bc <__assert_fail@plt+0x90>
   119e0:	movw	r6, #57808	; 0xe1d0
   119e4:	movt	r6, #2
   119e8:	ldr	r3, [r6]
   119ec:	cmp	r3, r8
   119f0:	beq	11c0c <__assert_fail@plt+0x3e0>
   119f4:	ldr	r3, [sp, #8]
   119f8:	cmp	r3, #0
   119fc:	beq	11a4c <__assert_fail@plt+0x220>
   11a00:	mov	r0, r3
   11a04:	bl	1167c <setfscreatecon@plt>
   11a08:	cmp	r0, #0
   11a0c:	bge	11a4c <__assert_fail@plt+0x220>
   11a10:	bl	11688 <__errno_location@plt>
   11a14:	ldr	r5, [r0]
   11a18:	mov	r2, #5
   11a1c:	mov	r0, r4
   11a20:	movw	r1, #54772	; 0xd5f4
   11a24:	movt	r1, #1
   11a28:	bl	114f0 <dcgettext@plt>
   11a2c:	mov	r4, r0
   11a30:	ldr	r0, [sp, #8]
   11a34:	bl	1b284 <lchmod@@Base+0x40c4>
   11a38:	mov	r3, r0
   11a3c:	mov	r2, r4
   11a40:	mov	r1, r5
   11a44:	mov	r0, #1
   11a48:	bl	115b0 <error@plt>
   11a4c:	cmp	fp, #0
   11a50:	beq	11b8c <__assert_fail@plt+0x360>
   11a54:	mov	r0, fp
   11a58:	bl	172e4 <lchmod@@Base+0x124>
   11a5c:	subs	sl, r0, #0
   11a60:	beq	11c64 <__assert_fail@plt+0x438>
   11a64:	mov	r0, #0
   11a68:	mov	r7, r0
   11a6c:	bl	1179c <umask@plt>
   11a70:	mov	r4, r0
   11a74:	bl	1179c <umask@plt>
   11a78:	mov	r2, r4
   11a7c:	mov	r3, sl
   11a80:	str	r7, [sp]
   11a84:	mov	r1, r7
   11a88:	movw	r0, #438	; 0x1b6
   11a8c:	bl	176e0 <lchmod@@Base+0x520>
   11a90:	mov	r4, r0
   11a94:	mov	r0, sl
   11a98:	bl	13204 <__assert_fail@plt+0x19d8>
   11a9c:	bic	r3, r4, #508	; 0x1fc
   11aa0:	bic	r3, r3, #3
   11aa4:	cmp	r3, r7
   11aa8:	bne	11c40 <__assert_fail@plt+0x414>
   11aac:	ldr	r3, [r6]
   11ab0:	cmp	r3, r8
   11ab4:	bge	11b94 <__assert_fail@plt+0x368>
   11ab8:	movw	r2, #54908	; 0xd67c
   11abc:	movt	r2, #1
   11ac0:	str	r2, [sp, #20]
   11ac4:	movw	r2, #54884	; 0xd664
   11ac8:	movt	r2, #1
   11acc:	str	r2, [sp, #12]
   11ad0:	mov	r2, #0
   11ad4:	str	r2, [sp, #8]
   11ad8:	b	11b10 <__assert_fail@plt+0x2e4>
   11adc:	cmp	fp, #0
   11ae0:	beq	11afc <__assert_fail@plt+0x2d0>
   11ae4:	ldr	r3, [r6]
   11ae8:	mov	r1, r4
   11aec:	ldr	r0, [r5, r3, lsl #2]
   11af0:	bl	171c0 <lchmod@@Base>
   11af4:	cmp	r0, #0
   11af8:	bne	11bbc <__assert_fail@plt+0x390>
   11afc:	ldr	r3, [r6]
   11b00:	add	r3, r3, #1
   11b04:	cmp	r3, r8
   11b08:	str	r3, [r6]
   11b0c:	bge	11b9c <__assert_fail@plt+0x370>
   11b10:	cmp	r9, #0
   11b14:	beq	11b28 <__assert_fail@plt+0x2fc>
   11b18:	mov	r2, #4096	; 0x1000
   11b1c:	mov	r0, r9
   11b20:	ldr	r1, [r5, r3, lsl #2]
   11b24:	bl	12378 <__assert_fail@plt+0xb4c>
   11b28:	ldr	r3, [r6]
   11b2c:	mov	r1, r4
   11b30:	ldr	r0, [r5, r3, lsl #2]
   11b34:	bl	117fc <mkfifo@plt>
   11b38:	subs	r7, r0, #0
   11b3c:	beq	11adc <__assert_fail@plt+0x2b0>
   11b40:	bl	11688 <__errno_location@plt>
   11b44:	mov	r3, #1
   11b48:	mov	r2, #5
   11b4c:	ldr	r7, [r0]
   11b50:	mov	r0, #0
   11b54:	ldr	r1, [sp, #12]
   11b58:	str	r3, [sp, #8]
   11b5c:	bl	114f0 <dcgettext@plt>
   11b60:	ldr	r3, [r6]
   11b64:	mov	sl, r0
   11b68:	mov	r0, #4
   11b6c:	ldr	r1, [r5, r3, lsl #2]
   11b70:	bl	19f58 <lchmod@@Base+0x2d98>
   11b74:	mov	r3, r0
   11b78:	mov	r2, sl
   11b7c:	mov	r1, r7
   11b80:	mov	r0, #0
   11b84:	bl	115b0 <error@plt>
   11b88:	b	11afc <__assert_fail@plt+0x2d0>
   11b8c:	movw	r4, #438	; 0x1b6
   11b90:	b	11aac <__assert_fail@plt+0x280>
   11b94:	mov	r3, #0
   11b98:	str	r3, [sp, #8]
   11b9c:	ldr	r0, [sp, #8]
   11ba0:	add	sp, sp, #28
   11ba4:	ldrd	r4, [sp]
   11ba8:	ldrd	r6, [sp, #8]
   11bac:	ldrd	r8, [sp, #16]
   11bb0:	ldrd	sl, [sp, #24]
   11bb4:	add	sp, sp, #32
   11bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bbc:	bl	11688 <__errno_location@plt>
   11bc0:	mov	r3, #1
   11bc4:	mov	r2, #5
   11bc8:	ldr	sl, [r0]
   11bcc:	mov	r0, r7
   11bd0:	ldr	r1, [sp, #20]
   11bd4:	str	r3, [sp, #8]
   11bd8:	bl	114f0 <dcgettext@plt>
   11bdc:	ldr	r3, [r6]
   11be0:	mov	r2, r0
   11be4:	mov	r0, #4
   11be8:	str	r2, [sp, #16]
   11bec:	ldr	r1, [r5, r3, lsl #2]
   11bf0:	bl	19f58 <lchmod@@Base+0x2d98>
   11bf4:	mov	r3, r0
   11bf8:	mov	r1, sl
   11bfc:	ldr	r2, [sp, #16]
   11c00:	mov	r0, r7
   11c04:	bl	115b0 <error@plt>
   11c08:	b	11afc <__assert_fail@plt+0x2d0>
   11c0c:	mov	r2, #5
   11c10:	movw	r1, #54756	; 0xd5e4
   11c14:	movt	r1, #1
   11c18:	mov	r0, r4
   11c1c:	bl	114f0 <dcgettext@plt>
   11c20:	mov	r2, r0
   11c24:	mov	r1, r4
   11c28:	mov	r0, r4
   11c2c:	bl	115b0 <error@plt>
   11c30:	mov	r0, #1
   11c34:	bl	11d78 <__assert_fail@plt+0x54c>
   11c38:	mov	r0, r4
   11c3c:	bl	11d78 <__assert_fail@plt+0x54c>
   11c40:	mov	r2, #5
   11c44:	movw	r1, #54840	; 0xd638
   11c48:	movt	r1, #1
   11c4c:	mov	r0, r7
   11c50:	bl	114f0 <dcgettext@plt>
   11c54:	mov	r2, r0
   11c58:	mov	r1, r7
   11c5c:	mov	r0, #1
   11c60:	bl	115b0 <error@plt>
   11c64:	mov	r2, #5
   11c68:	movw	r1, #54824	; 0xd628
   11c6c:	movt	r1, #1
   11c70:	bl	114f0 <dcgettext@plt>
   11c74:	mov	r2, r0
   11c78:	mov	r1, sl
   11c7c:	mov	r0, #1
   11c80:	bl	115b0 <error@plt>
   11c84:	andeq	sp, r1, r0, asr #3
   11c88:	mov	fp, #0
   11c8c:	mov	lr, #0
   11c90:	pop	{r1}		; (ldr r1, [sp], #4)
   11c94:	mov	r2, sp
   11c98:	push	{r2}		; (str r2, [sp, #-4]!)
   11c9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11ca0:	ldr	ip, [pc, #16]	; 11cb8 <__assert_fail@plt+0x48c>
   11ca4:	push	{ip}		; (str ip, [sp, #-4]!)
   11ca8:	ldr	r0, [pc, #12]	; 11cbc <__assert_fail@plt+0x490>
   11cac:	ldr	r3, [pc, #12]	; 11cc0 <__assert_fail@plt+0x494>
   11cb0:	bl	115e0 <__libc_start_main@plt>
   11cb4:	bl	117d8 <abort@plt>
   11cb8:	andeq	sp, r1, r0, ror #2
   11cbc:	andeq	r1, r1, r8, lsr r8
   11cc0:	andeq	sp, r1, r0, lsl #2
   11cc4:	ldr	r3, [pc, #20]	; 11ce0 <__assert_fail@plt+0x4b4>
   11cc8:	ldr	r2, [pc, #20]	; 11ce4 <__assert_fail@plt+0x4b8>
   11ccc:	add	r3, pc, r3
   11cd0:	ldr	r2, [r3, r2]
   11cd4:	cmp	r2, #0
   11cd8:	bxeq	lr
   11cdc:	b	115f8 <__gmon_start__@plt>
   11ce0:	andeq	ip, r1, ip, lsr #6
   11ce4:	andeq	r0, r0, r0, ror r1
   11ce8:	ldr	r0, [pc, #24]	; 11d08 <__assert_fail@plt+0x4dc>
   11cec:	ldr	r3, [pc, #24]	; 11d0c <__assert_fail@plt+0x4e0>
   11cf0:	cmp	r3, r0
   11cf4:	bxeq	lr
   11cf8:	ldr	r3, [pc, #16]	; 11d10 <__assert_fail@plt+0x4e4>
   11cfc:	cmp	r3, #0
   11d00:	bxeq	lr
   11d04:	bx	r3
   11d08:	andeq	lr, r2, r4, asr #3
   11d0c:	andeq	lr, r2, r4, asr #3
   11d10:	andeq	r0, r0, r0
   11d14:	ldr	r0, [pc, #36]	; 11d40 <__assert_fail@plt+0x514>
   11d18:	ldr	r1, [pc, #36]	; 11d44 <__assert_fail@plt+0x518>
   11d1c:	sub	r1, r1, r0
   11d20:	asr	r1, r1, #2
   11d24:	add	r1, r1, r1, lsr #31
   11d28:	asrs	r1, r1, #1
   11d2c:	bxeq	lr
   11d30:	ldr	r3, [pc, #16]	; 11d48 <__assert_fail@plt+0x51c>
   11d34:	cmp	r3, #0
   11d38:	bxeq	lr
   11d3c:	bx	r3
   11d40:	andeq	lr, r2, r4, asr #3
   11d44:	andeq	lr, r2, r4, asr #3
   11d48:	andeq	r0, r0, r0
   11d4c:	push	{r4, lr}
   11d50:	ldr	r4, [pc, #24]	; 11d70 <__assert_fail@plt+0x544>
   11d54:	ldrb	r3, [r4]
   11d58:	cmp	r3, #0
   11d5c:	popne	{r4, pc}
   11d60:	bl	11ce8 <__assert_fail@plt+0x4bc>
   11d64:	mov	r3, #1
   11d68:	strb	r3, [r4]
   11d6c:	pop	{r4, pc}
   11d70:	andeq	lr, r2, r4, ror #3
   11d74:	b	11d14 <__assert_fail@plt+0x4e8>
   11d78:	subs	r6, r0, #0
   11d7c:	str	r7, [sp, #-8]!
   11d80:	str	lr, [sp, #4]
   11d84:	sub	sp, sp, #56	; 0x38
   11d88:	beq	11dd0 <__assert_fail@plt+0x5a4>
   11d8c:	movw	r3, #57816	; 0xe1d8
   11d90:	movt	r3, #2
   11d94:	ldr	r4, [r3]
   11d98:	mov	r2, #5
   11d9c:	movw	r1, #53784	; 0xd218
   11da0:	movt	r1, #1
   11da4:	mov	r0, #0
   11da8:	bl	114f0 <dcgettext@plt>
   11dac:	movw	r3, #57840	; 0xe1f0
   11db0:	movt	r3, #2
   11db4:	mov	r2, r0
   11db8:	mov	r1, #1
   11dbc:	ldr	r3, [r3]
   11dc0:	mov	r0, r4
   11dc4:	bl	116d0 <__fprintf_chk@plt>
   11dc8:	mov	r0, r6
   11dcc:	bl	11640 <exit@plt>
   11dd0:	mov	r2, #5
   11dd4:	movw	r1, #53824	; 0xd240
   11dd8:	movt	r1, #1
   11ddc:	movw	r7, #57820	; 0xe1dc
   11de0:	movt	r7, #2
   11de4:	bl	114f0 <dcgettext@plt>
   11de8:	movw	r3, #57840	; 0xe1f0
   11dec:	movt	r3, #2
   11df0:	mov	r1, r0
   11df4:	mov	r0, #1
   11df8:	ldr	r2, [r3]
   11dfc:	bl	116b8 <__printf_chk@plt>
   11e00:	mov	r2, #5
   11e04:	movw	r1, #53856	; 0xd260
   11e08:	movt	r1, #1
   11e0c:	mov	r0, r6
   11e10:	bl	114f0 <dcgettext@plt>
   11e14:	ldr	r1, [r7]
   11e18:	bl	11430 <fputs_unlocked@plt>
   11e1c:	mov	r2, #5
   11e20:	movw	r1, #53908	; 0xd294
   11e24:	movt	r1, #1
   11e28:	mov	r0, r6
   11e2c:	bl	114f0 <dcgettext@plt>
   11e30:	ldr	r1, [r7]
   11e34:	bl	11430 <fputs_unlocked@plt>
   11e38:	mov	r2, #5
   11e3c:	movw	r1, #53984	; 0xd2e0
   11e40:	movt	r1, #1
   11e44:	mov	r0, r6
   11e48:	bl	114f0 <dcgettext@plt>
   11e4c:	ldr	r1, [r7]
   11e50:	bl	11430 <fputs_unlocked@plt>
   11e54:	mov	r2, #5
   11e58:	movw	r1, #54060	; 0xd32c
   11e5c:	movt	r1, #1
   11e60:	mov	r0, r6
   11e64:	bl	114f0 <dcgettext@plt>
   11e68:	ldr	r1, [r7]
   11e6c:	bl	11430 <fputs_unlocked@plt>
   11e70:	mov	r2, #5
   11e74:	movw	r1, #54268	; 0xd3fc
   11e78:	movt	r1, #1
   11e7c:	mov	r0, r6
   11e80:	bl	114f0 <dcgettext@plt>
   11e84:	ldr	r1, [r7]
   11e88:	bl	11430 <fputs_unlocked@plt>
   11e8c:	mov	r2, #5
   11e90:	movw	r1, #54316	; 0xd42c
   11e94:	movt	r1, #1
   11e98:	mov	r0, r6
   11e9c:	bl	114f0 <dcgettext@plt>
   11ea0:	ldr	r1, [r7]
   11ea4:	bl	11430 <fputs_unlocked@plt>
   11ea8:	movw	lr, #53640	; 0xd188
   11eac:	movt	lr, #1
   11eb0:	ldr	ip, [lr]
   11eb4:	ldr	r4, [lr, #4]
   11eb8:	ldrd	r8, [lr, #8]
   11ebc:	subs	r1, ip, #0
   11ec0:	str	ip, [sp]
   11ec4:	ldrd	r2, [lr, #16]
   11ec8:	str	r4, [sp, #4]
   11ecc:	ldrd	r4, [lr, #24]
   11ed0:	strd	r8, [sp, #8]
   11ed4:	ldrd	r8, [lr, #32]
   11ed8:	strd	r2, [sp, #16]
   11edc:	ldrd	r2, [lr, #40]	; 0x28
   11ee0:	strd	r4, [sp, #24]
   11ee4:	ldrd	r4, [lr, #48]	; 0x30
   11ee8:	strd	r8, [sp, #32]
   11eec:	strd	r2, [sp, #40]	; 0x28
   11ef0:	strd	r4, [sp, #48]	; 0x30
   11ef4:	movwne	r5, #53776	; 0xd210
   11ef8:	mov	r4, sp
   11efc:	movtne	r5, #1
   11f00:	bne	11ff8 <__assert_fail@plt+0x7cc>
   11f04:	ldr	r4, [r4, #4]
   11f08:	movw	r1, #54372	; 0xd464
   11f0c:	movt	r1, #1
   11f10:	mov	r2, #5
   11f14:	cmp	r4, #0
   11f18:	beq	1200c <__assert_fail@plt+0x7e0>
   11f1c:	mov	r0, #0
   11f20:	bl	114f0 <dcgettext@plt>
   11f24:	mov	r1, r0
   11f28:	movw	r3, #54396	; 0xd47c
   11f2c:	movt	r3, #1
   11f30:	movw	r2, #54436	; 0xd4a4
   11f34:	movt	r2, #1
   11f38:	mov	r0, #1
   11f3c:	bl	116b8 <__printf_chk@plt>
   11f40:	mov	r1, #0
   11f44:	mov	r0, #5
   11f48:	bl	11700 <setlocale@plt>
   11f4c:	cmp	r0, #0
   11f50:	movweq	r5, #53776	; 0xd210
   11f54:	movteq	r5, #1
   11f58:	beq	11f7c <__assert_fail@plt+0x750>
   11f5c:	movw	r1, #54452	; 0xd4b4
   11f60:	movt	r1, #1
   11f64:	mov	r2, #3
   11f68:	movw	r5, #53776	; 0xd210
   11f6c:	movt	r5, #1
   11f70:	bl	117cc <strncmp@plt>
   11f74:	cmp	r0, #0
   11f78:	bne	120c4 <__assert_fail@plt+0x898>
   11f7c:	mov	r2, #5
   11f80:	movw	r1, #54528	; 0xd500
   11f84:	movt	r1, #1
   11f88:	mov	r0, #0
   11f8c:	bl	114f0 <dcgettext@plt>
   11f90:	mov	r1, r0
   11f94:	movw	r3, #53776	; 0xd210
   11f98:	movt	r3, #1
   11f9c:	movw	r2, #54396	; 0xd47c
   11fa0:	movt	r2, #1
   11fa4:	mov	r0, #1
   11fa8:	bl	116b8 <__printf_chk@plt>
   11fac:	mov	r2, #5
   11fb0:	movw	r1, #54556	; 0xd51c
   11fb4:	movt	r1, #1
   11fb8:	mov	r0, #0
   11fbc:	bl	114f0 <dcgettext@plt>
   11fc0:	movw	r2, #54948	; 0xd6a4
   11fc4:	movt	r2, #1
   11fc8:	cmp	r4, r5
   11fcc:	movw	r3, #55260	; 0xd7dc
   11fd0:	movt	r3, #1
   11fd4:	mov	r1, r0
   11fd8:	moveq	r3, r2
   11fdc:	mov	r2, r4
   11fe0:	mov	r0, #1
   11fe4:	bl	116b8 <__printf_chk@plt>
   11fe8:	b	11dc8 <__assert_fail@plt+0x59c>
   11fec:	ldr	r1, [r4, #8]!
   11ff0:	cmp	r1, #0
   11ff4:	beq	11f04 <__assert_fail@plt+0x6d8>
   11ff8:	mov	r0, r5
   11ffc:	bl	11454 <strcmp@plt>
   12000:	cmp	r0, #0
   12004:	bne	11fec <__assert_fail@plt+0x7c0>
   12008:	b	11f04 <__assert_fail@plt+0x6d8>
   1200c:	mov	r0, r4
   12010:	bl	114f0 <dcgettext@plt>
   12014:	mov	r1, r0
   12018:	movw	r3, #54396	; 0xd47c
   1201c:	movt	r3, #1
   12020:	movw	r2, #54436	; 0xd4a4
   12024:	movt	r2, #1
   12028:	mov	r0, #1
   1202c:	bl	116b8 <__printf_chk@plt>
   12030:	mov	r1, r4
   12034:	mov	r0, #5
   12038:	bl	11700 <setlocale@plt>
   1203c:	cmp	r0, #0
   12040:	beq	1205c <__assert_fail@plt+0x830>
   12044:	movw	r1, #54452	; 0xd4b4
   12048:	movt	r1, #1
   1204c:	mov	r2, #3
   12050:	bl	117cc <strncmp@plt>
   12054:	cmp	r0, #0
   12058:	bne	120b8 <__assert_fail@plt+0x88c>
   1205c:	mov	r2, #5
   12060:	movw	r1, #54528	; 0xd500
   12064:	movt	r1, #1
   12068:	mov	r0, #0
   1206c:	bl	114f0 <dcgettext@plt>
   12070:	mov	r1, r0
   12074:	movw	r3, #53776	; 0xd210
   12078:	movt	r3, #1
   1207c:	movw	r2, #54396	; 0xd47c
   12080:	movt	r2, #1
   12084:	mov	r0, #1
   12088:	bl	116b8 <__printf_chk@plt>
   1208c:	movw	r1, #54556	; 0xd51c
   12090:	movt	r1, #1
   12094:	mov	r2, #5
   12098:	mov	r0, #0
   1209c:	bl	114f0 <dcgettext@plt>
   120a0:	movw	r4, #53776	; 0xd210
   120a4:	movt	r4, #1
   120a8:	movw	r3, #54948	; 0xd6a4
   120ac:	movt	r3, #1
   120b0:	mov	r1, r0
   120b4:	b	11fdc <__assert_fail@plt+0x7b0>
   120b8:	movw	r5, #53776	; 0xd210
   120bc:	movt	r5, #1
   120c0:	mov	r4, r5
   120c4:	mov	r2, #5
   120c8:	movw	r1, #54456	; 0xd4b8
   120cc:	movt	r1, #1
   120d0:	mov	r0, #0
   120d4:	bl	114f0 <dcgettext@plt>
   120d8:	ldr	r1, [r7]
   120dc:	bl	11430 <fputs_unlocked@plt>
   120e0:	b	11f7c <__assert_fail@plt+0x750>
   120e4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   120e8:	mov	r4, #0
   120ec:	strd	r6, [sp, #8]
   120f0:	mov	r6, r1
   120f4:	strd	r8, [sp, #16]
   120f8:	subs	r9, r0, #0
   120fc:	str	lr, [sp, #24]
   12100:	sub	sp, sp, #116	; 0x74
   12104:	str	r4, [sp]
   12108:	str	r4, [sp, #4]
   1210c:	beq	12234 <__assert_fail@plt+0xa08>
   12110:	mov	r1, #32768	; 0x8000
   12114:	mov	r0, r6
   12118:	bl	115bc <open64@plt>
   1211c:	mov	r5, r0
   12120:	bl	11688 <__errno_location@plt>
   12124:	cmn	r5, #1
   12128:	mov	r7, r0
   1212c:	beq	121dc <__assert_fail@plt+0x9b0>
   12130:	add	r2, sp, #8
   12134:	mov	r1, r5
   12138:	mov	r0, #3
   1213c:	bl	11550 <__fxstat64@plt>
   12140:	cmp	r0, #0
   12144:	blt	12300 <__assert_fail@plt+0xad4>
   12148:	mov	r0, r9
   1214c:	mov	r2, r6
   12150:	ldr	r3, [sp, #24]
   12154:	mov	r1, sp
   12158:	bl	11418 <selabel_lookup@plt>
   1215c:	cmp	r0, #0
   12160:	blt	122d4 <__assert_fail@plt+0xaa8>
   12164:	ldr	r0, [sp]
   12168:	bl	114cc <context_new@plt>
   1216c:	subs	r9, r0, #0
   12170:	beq	12344 <__assert_fail@plt+0xb18>
   12174:	cmn	r5, #1
   12178:	add	r1, sp, #4
   1217c:	beq	122a8 <__assert_fail@plt+0xa7c>
   12180:	mov	r0, r5
   12184:	bl	1b6f4 <lchmod@@Base+0x4534>
   12188:	cmp	r0, #0
   1218c:	blt	12310 <__assert_fail@plt+0xae4>
   12190:	ldr	r0, [sp, #4]
   12194:	bl	114cc <context_new@plt>
   12198:	subs	r4, r0, #0
   1219c:	beq	12314 <__assert_fail@plt+0xae8>
   121a0:	mov	r0, r9
   121a4:	bl	11460 <context_type_get@plt>
   121a8:	subs	r1, r0, #0
   121ac:	beq	121c0 <__assert_fail@plt+0x994>
   121b0:	mov	r0, r4
   121b4:	bl	114fc <context_type_set@plt>
   121b8:	cmp	r0, #0
   121bc:	beq	1231c <__assert_fail@plt+0xaf0>
   121c0:	ldr	r8, [r7]
   121c4:	cmn	r5, #1
   121c8:	beq	12208 <__assert_fail@plt+0x9dc>
   121cc:	mvn	r6, #0
   121d0:	mov	r0, r5
   121d4:	bl	117e4 <close@plt>
   121d8:	b	1220c <__assert_fail@plt+0x9e0>
   121dc:	ldr	r8, [r0]
   121e0:	cmp	r8, #40	; 0x28
   121e4:	bne	122a0 <__assert_fail@plt+0xa74>
   121e8:	add	r2, sp, #8
   121ec:	mov	r1, r6
   121f0:	mov	r0, #3
   121f4:	bl	117f0 <__lxstat64@plt>
   121f8:	cmp	r0, #0
   121fc:	bge	12148 <__assert_fail@plt+0x91c>
   12200:	ldr	r8, [r7]
   12204:	mov	r9, r4
   12208:	mov	r6, r5
   1220c:	mov	r0, r9
   12210:	bl	11604 <context_free@plt>
   12214:	mov	r0, r4
   12218:	bl	11604 <context_free@plt>
   1221c:	ldr	r0, [sp]
   12220:	bl	11778 <freecon@plt>
   12224:	ldr	r0, [sp, #4]
   12228:	bl	11778 <freecon@plt>
   1222c:	str	r8, [r7]
   12230:	b	12284 <__assert_fail@plt+0xa58>
   12234:	add	r0, sp, #4
   12238:	bl	11790 <getfscreatecon@plt>
   1223c:	cmp	r0, r4
   12240:	blt	12370 <__assert_fail@plt+0xb44>
   12244:	bl	11688 <__errno_location@plt>
   12248:	ldr	r5, [sp, #4]
   1224c:	mov	r4, r0
   12250:	cmp	r5, #0
   12254:	moveq	r3, #61	; 0x3d
   12258:	mvneq	r6, #0
   1225c:	streq	r3, [r0]
   12260:	beq	12284 <__assert_fail@plt+0xa58>
   12264:	mov	r1, r5
   12268:	mov	r0, r6
   1226c:	bl	11478 <lsetfilecon@plt>
   12270:	ldr	r5, [r4]
   12274:	mov	r6, r0
   12278:	ldr	r0, [sp, #4]
   1227c:	bl	11778 <freecon@plt>
   12280:	str	r5, [r4]
   12284:	mov	r0, r6
   12288:	add	sp, sp, #116	; 0x74
   1228c:	ldrd	r4, [sp]
   12290:	ldrd	r6, [sp, #8]
   12294:	ldrd	r8, [sp, #16]
   12298:	add	sp, sp, #24
   1229c:	pop	{pc}		; (ldr pc, [sp], #4)
   122a0:	mov	r9, r4
   122a4:	b	12208 <__assert_fail@plt+0x9dc>
   122a8:	mov	r0, r6
   122ac:	bl	1b664 <lchmod@@Base+0x44a4>
   122b0:	cmp	r0, #0
   122b4:	blt	12350 <__assert_fail@plt+0xb24>
   122b8:	ldr	r0, [sp, #4]
   122bc:	bl	114cc <context_new@plt>
   122c0:	subs	r4, r0, #0
   122c4:	bne	121a0 <__assert_fail@plt+0x974>
   122c8:	mov	r6, r5
   122cc:	ldr	r8, [r7]
   122d0:	b	1220c <__assert_fail@plt+0x9e0>
   122d4:	ldr	r8, [r7]
   122d8:	cmp	r8, #2
   122dc:	movne	r4, #0
   122e0:	movne	r9, r4
   122e4:	bne	121c4 <__assert_fail@plt+0x998>
   122e8:	mov	r3, #61	; 0x3d
   122ec:	mov	r4, #0
   122f0:	mov	r8, r3
   122f4:	mov	r9, r4
   122f8:	str	r3, [r7]
   122fc:	b	121c4 <__assert_fail@plt+0x998>
   12300:	mvn	r6, #0
   12304:	mov	r9, r4
   12308:	ldr	r8, [r7]
   1230c:	b	121d0 <__assert_fail@plt+0x9a4>
   12310:	mov	r4, #0
   12314:	mvn	r6, #0
   12318:	b	12308 <__assert_fail@plt+0xadc>
   1231c:	mov	r0, r4
   12320:	bl	117a8 <context_str@plt>
   12324:	subs	r1, r0, #0
   12328:	beq	121c0 <__assert_fail@plt+0x994>
   1232c:	cmn	r5, #1
   12330:	beq	1235c <__assert_fail@plt+0xb30>
   12334:	mov	r0, r5
   12338:	bl	1170c <fsetfilecon@plt>
   1233c:	mov	r6, r0
   12340:	b	12308 <__assert_fail@plt+0xadc>
   12344:	mov	r4, r9
   12348:	ldr	r8, [r7]
   1234c:	b	121c4 <__assert_fail@plt+0x998>
   12350:	mov	r4, #0
   12354:	ldr	r8, [r7]
   12358:	b	12208 <__assert_fail@plt+0x9dc>
   1235c:	mov	r0, r6
   12360:	bl	11478 <lsetfilecon@plt>
   12364:	mov	r5, r0
   12368:	ldr	r8, [r7]
   1236c:	b	12208 <__assert_fail@plt+0x9dc>
   12370:	mvn	r6, #0
   12374:	b	12284 <__assert_fail@plt+0xa58>
   12378:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1237c:	mov	r4, r1
   12380:	strd	r6, [sp, #8]
   12384:	mov	r7, #0
   12388:	mov	r6, r2
   1238c:	strd	r8, [sp, #16]
   12390:	mov	r9, r0
   12394:	str	lr, [sp, #24]
   12398:	sub	sp, sp, #20
   1239c:	str	r7, [sp]
   123a0:	str	r7, [sp, #4]
   123a4:	bl	11688 <__errno_location@plt>
   123a8:	ldrb	r3, [r4]
   123ac:	mov	r8, r0
   123b0:	cmp	r3, #47	; 0x2f
   123b4:	beq	123d0 <__assert_fail@plt+0xba4>
   123b8:	mov	r0, r4
   123bc:	mov	r1, #2
   123c0:	bl	126c8 <__assert_fail@plt+0xe9c>
   123c4:	subs	r4, r0, #0
   123c8:	mov	r7, r4
   123cc:	beq	12598 <__assert_fail@plt+0xd6c>
   123d0:	mov	r0, r9
   123d4:	mov	r3, r6
   123d8:	mov	r2, r4
   123dc:	mov	r1, sp
   123e0:	bl	11418 <selabel_lookup@plt>
   123e4:	cmp	r0, #0
   123e8:	blt	12550 <__assert_fail@plt+0xd24>
   123ec:	mov	r9, #0
   123f0:	mov	r0, r4
   123f4:	str	r9, [sp, #8]
   123f8:	str	r9, [sp, #12]
   123fc:	bl	12f3c <__assert_fail@plt+0x1710>
   12400:	mov	r4, r0
   12404:	add	r0, sp, #8
   12408:	bl	1158c <getcon@plt>
   1240c:	cmp	r0, r9
   12410:	blt	12514 <__assert_fail@plt+0xce8>
   12414:	add	r1, sp, #12
   12418:	mov	r0, r4
   1241c:	bl	1b5d4 <lchmod@@Base+0x4414>
   12420:	cmp	r0, r9
   12424:	blt	12514 <__assert_fail@plt+0xce8>
   12428:	mov	r0, r6
   1242c:	bl	11808 <mode_to_security_class@plt>
   12430:	subs	r2, r0, #0
   12434:	beq	12514 <__assert_fail@plt+0xce8>
   12438:	add	r3, sp, #4
   1243c:	ldrd	r0, [sp, #8]
   12440:	bl	11748 <security_compute_create@plt>
   12444:	ldr	r5, [r8]
   12448:	mov	r6, r0
   1244c:	mov	r0, r4
   12450:	bl	13204 <__assert_fail@plt+0x19d8>
   12454:	ldr	r0, [sp, #8]
   12458:	bl	11778 <freecon@plt>
   1245c:	ldr	r0, [sp, #12]
   12460:	bl	11778 <freecon@plt>
   12464:	cmp	r6, r9
   12468:	str	r5, [r8]
   1246c:	blt	1255c <__assert_fail@plt+0xd30>
   12470:	ldr	r0, [sp]
   12474:	bl	114cc <context_new@plt>
   12478:	subs	r4, r0, #0
   1247c:	beq	1256c <__assert_fail@plt+0xd40>
   12480:	ldr	r0, [sp, #4]
   12484:	bl	114cc <context_new@plt>
   12488:	subs	r6, r0, #0
   1248c:	beq	12544 <__assert_fail@plt+0xd18>
   12490:	mov	r0, r4
   12494:	bl	11460 <context_type_get@plt>
   12498:	subs	r1, r0, #0
   1249c:	beq	12544 <__assert_fail@plt+0xd18>
   124a0:	mov	r0, r6
   124a4:	bl	114fc <context_type_set@plt>
   124a8:	cmp	r0, #0
   124ac:	bne	12544 <__assert_fail@plt+0xd18>
   124b0:	mov	r0, r6
   124b4:	bl	117a8 <context_str@plt>
   124b8:	cmp	r0, #0
   124bc:	beq	12544 <__assert_fail@plt+0xd18>
   124c0:	bl	1167c <setfscreatecon@plt>
   124c4:	ldr	r5, [r8]
   124c8:	mov	r9, r0
   124cc:	mov	r0, r4
   124d0:	bl	11604 <context_free@plt>
   124d4:	mov	r0, r6
   124d8:	bl	11604 <context_free@plt>
   124dc:	ldr	r0, [sp]
   124e0:	bl	11778 <freecon@plt>
   124e4:	ldr	r0, [sp, #4]
   124e8:	bl	11778 <freecon@plt>
   124ec:	mov	r0, r7
   124f0:	bl	13204 <__assert_fail@plt+0x19d8>
   124f4:	mov	r0, r9
   124f8:	str	r5, [r8]
   124fc:	add	sp, sp, #20
   12500:	ldrd	r4, [sp]
   12504:	ldrd	r6, [sp, #8]
   12508:	ldrd	r8, [sp, #16]
   1250c:	add	sp, sp, #24
   12510:	pop	{pc}		; (ldr pc, [sp], #4)
   12514:	ldr	r5, [r8]
   12518:	mov	r0, r4
   1251c:	mov	r6, #0
   12520:	bl	13204 <__assert_fail@plt+0x19d8>
   12524:	ldr	r0, [sp, #8]
   12528:	mov	r4, r6
   1252c:	mvn	r9, #0
   12530:	bl	11778 <freecon@plt>
   12534:	ldr	r0, [sp, #12]
   12538:	bl	11778 <freecon@plt>
   1253c:	str	r5, [r8]
   12540:	b	124cc <__assert_fail@plt+0xca0>
   12544:	mvn	r9, #0
   12548:	ldr	r5, [r8]
   1254c:	b	124cc <__assert_fail@plt+0xca0>
   12550:	ldr	r5, [r8]
   12554:	cmp	r5, #2
   12558:	beq	1257c <__assert_fail@plt+0xd50>
   1255c:	mov	r4, #0
   12560:	mvn	r9, #0
   12564:	mov	r6, r4
   12568:	b	124cc <__assert_fail@plt+0xca0>
   1256c:	mov	r6, r4
   12570:	mvn	r9, #0
   12574:	ldr	r5, [r8]
   12578:	b	124cc <__assert_fail@plt+0xca0>
   1257c:	mov	r3, #61	; 0x3d
   12580:	mov	r4, #0
   12584:	mov	r5, r3
   12588:	mov	r6, r4
   1258c:	mvn	r9, #0
   12590:	str	r3, [r8]
   12594:	b	124cc <__assert_fail@plt+0xca0>
   12598:	mov	r6, r4
   1259c:	mvn	r9, #0
   125a0:	ldr	r5, [r8]
   125a4:	b	124cc <__assert_fail@plt+0xca0>
   125a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   125ac:	mov	r4, r1
   125b0:	mov	r5, r2
   125b4:	strd	r6, [sp, #8]
   125b8:	mov	r6, r0
   125bc:	str	r8, [sp, #16]
   125c0:	str	lr, [sp, #20]
   125c4:	sub	sp, sp, #8
   125c8:	ldrb	r3, [r1]
   125cc:	cmp	r3, #47	; 0x2f
   125d0:	moveq	r8, #0
   125d4:	bne	12678 <__assert_fail@plt+0xe4c>
   125d8:	bl	11688 <__errno_location@plt>
   125dc:	cmp	r5, #0
   125e0:	mov	r7, r0
   125e4:	beq	126a0 <__assert_fail@plt+0xe74>
   125e8:	mov	r2, #0
   125ec:	mov	r1, #16
   125f0:	str	r4, [sp]
   125f4:	mov	r0, sp
   125f8:	mov	r4, r2
   125fc:	str	r2, [sp, #4]
   12600:	bl	1c51c <lchmod@@Base+0x535c>
   12604:	mov	r5, r0
   12608:	b	1261c <__assert_fail@plt+0xdf0>
   1260c:	ldr	r1, [r5, #24]
   12610:	bl	120e4 <__assert_fail@plt+0x8b8>
   12614:	cmp	r0, #0
   12618:	ldrlt	r4, [r7]
   1261c:	mov	r0, r5
   12620:	bl	14eac <__assert_fail@plt+0x3680>
   12624:	cmp	r0, #0
   12628:	mov	r0, r6
   1262c:	bne	1260c <__assert_fail@plt+0xde0>
   12630:	ldr	r3, [r7]
   12634:	mov	r0, r5
   12638:	cmp	r3, #0
   1263c:	movne	r4, r3
   12640:	bl	14ca4 <__assert_fail@plt+0x3478>
   12644:	cmp	r0, #0
   12648:	mov	r0, r8
   1264c:	ldrne	r4, [r7]
   12650:	bl	13204 <__assert_fail@plt+0x19d8>
   12654:	clz	r4, r4
   12658:	lsr	r4, r4, #5
   1265c:	mov	r0, r4
   12660:	add	sp, sp, #8
   12664:	ldrd	r4, [sp]
   12668:	ldrd	r6, [sp, #8]
   1266c:	ldr	r8, [sp, #16]
   12670:	add	sp, sp, #20
   12674:	pop	{pc}		; (ldr pc, [sp], #4)
   12678:	mov	r0, r1
   1267c:	mov	r1, #2
   12680:	bl	126c8 <__assert_fail@plt+0xe9c>
   12684:	subs	r4, r0, #0
   12688:	movne	r8, r4
   1268c:	beq	1265c <__assert_fail@plt+0xe30>
   12690:	bl	11688 <__errno_location@plt>
   12694:	cmp	r5, #0
   12698:	mov	r7, r0
   1269c:	bne	125e8 <__assert_fail@plt+0xdbc>
   126a0:	mov	r1, r4
   126a4:	mov	r0, r6
   126a8:	bl	120e4 <__assert_fail@plt+0x8b8>
   126ac:	ldr	r5, [r7]
   126b0:	adds	r4, r0, #1
   126b4:	mov	r0, r8
   126b8:	movne	r4, #1
   126bc:	bl	13204 <__assert_fail@plt+0x19d8>
   126c0:	str	r5, [r7]
   126c4:	b	1265c <__assert_fail@plt+0xe30>
   126c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   126cc:	strd	r6, [sp, #8]
   126d0:	strd	sl, [sp, #24]
   126d4:	and	fp, r1, #3
   126d8:	sub	r3, fp, #1
   126dc:	strd	r8, [sp, #16]
   126e0:	tst	r3, fp
   126e4:	str	lr, [sp, #32]
   126e8:	sub	sp, sp, #3248	; 0xcb0
   126ec:	sub	sp, sp, #4
   126f0:	bne	1280c <__assert_fail@plt+0xfe0>
   126f4:	cmp	r0, #0
   126f8:	mov	r5, r0
   126fc:	beq	1280c <__assert_fail@plt+0xfe0>
   12700:	ldrb	r9, [r0]
   12704:	cmp	r9, #0
   12708:	beq	12be0 <__assert_fail@plt+0x13b4>
   1270c:	add	r3, sp, #1184	; 0x4a0
   12710:	cmp	r9, #47	; 0x2f
   12714:	add	r3, r3, #8
   12718:	mov	r6, r1
   1271c:	addne	r4, sp, #160	; 0xa0
   12720:	mov	r1, #1024	; 0x400
   12724:	str	r3, [sp, #1184]	; 0x4a0
   12728:	add	r3, sp, #160	; 0xa0
   1272c:	str	r3, [sp, #152]	; 0x98
   12730:	add	r3, sp, #2224	; 0x8b0
   12734:	str	r1, [sp, #156]	; 0x9c
   12738:	str	r1, [sp, #1188]	; 0x4a4
   1273c:	str	r3, [sp, #2216]	; 0x8a8
   12740:	movne	r3, r4
   12744:	subne	r7, r3, #8
   12748:	str	r1, [sp, #2220]	; 0x8ac
   1274c:	beq	12820 <__assert_fail@plt+0xff4>
   12750:	mov	r0, r4
   12754:	bl	11634 <getcwd@plt>
   12758:	cmp	r0, #0
   1275c:	bne	12d6c <__assert_fail@plt+0x1540>
   12760:	bl	11688 <__errno_location@plt>
   12764:	ldr	r3, [r0]
   12768:	cmp	r3, #12
   1276c:	beq	12d30 <__assert_fail@plt+0x1504>
   12770:	cmp	r3, #34	; 0x22
   12774:	beq	127f0 <__assert_fail@plt+0xfc4>
   12778:	mov	r6, r4
   1277c:	mov	r7, #1
   12780:	ldr	r0, [sp, #1184]	; 0x4a0
   12784:	add	r3, sp, #1184	; 0x4a0
   12788:	add	r3, r3, #8
   1278c:	cmp	r0, r3
   12790:	beq	12798 <__assert_fail@plt+0xf6c>
   12794:	bl	13204 <__assert_fail@plt+0x19d8>
   12798:	ldr	r0, [sp, #2216]	; 0x8a8
   1279c:	add	r3, sp, #2224	; 0x8b0
   127a0:	cmp	r0, r3
   127a4:	beq	127ac <__assert_fail@plt+0xf80>
   127a8:	bl	13204 <__assert_fail@plt+0x19d8>
   127ac:	cmp	r7, #0
   127b0:	bne	12bc0 <__assert_fail@plt+0x1394>
   127b4:	add	r0, sp, #152	; 0x98
   127b8:	strb	r7, [r4], #1
   127bc:	sub	r1, r4, r6
   127c0:	bl	1b418 <lchmod@@Base+0x4258>
   127c4:	subs	r9, r0, #0
   127c8:	beq	12d30 <__assert_fail@plt+0x1504>
   127cc:	mov	r0, r9
   127d0:	add	sp, sp, #3248	; 0xcb0
   127d4:	add	sp, sp, #4
   127d8:	ldrd	r4, [sp]
   127dc:	ldrd	r6, [sp, #8]
   127e0:	ldrd	r8, [sp, #16]
   127e4:	ldrd	sl, [sp, #24]
   127e8:	add	sp, sp, #32
   127ec:	pop	{pc}		; (ldr pc, [sp], #4)
   127f0:	mov	r0, r7
   127f4:	bl	1b488 <lchmod@@Base+0x42c8>
   127f8:	cmp	r0, #0
   127fc:	beq	12d30 <__assert_fail@plt+0x1504>
   12800:	ldr	r4, [sp, #152]	; 0x98
   12804:	ldr	r1, [sp, #156]	; 0x9c
   12808:	b	12750 <__assert_fail@plt+0xf24>
   1280c:	bl	11688 <__errno_location@plt>
   12810:	mov	r3, #22
   12814:	mov	r9, #0
   12818:	str	r3, [r0]
   1281c:	b	127cc <__assert_fail@plt+0xfa0>
   12820:	and	r3, r6, #4
   12824:	add	r4, sp, #161	; 0xa1
   12828:	str	r3, [sp, #12]
   1282c:	add	r3, sp, #160	; 0xa0
   12830:	mov	r6, r3
   12834:	strb	r9, [sp, #160]	; 0xa0
   12838:	mov	r3, #0
   1283c:	movw	r2, #55084	; 0xd72c
   12840:	movt	r2, #1
   12844:	str	fp, [sp, #16]
   12848:	str	r3, [sp, #20]
   1284c:	strd	r2, [sp, #24]
   12850:	str	r3, [sp, #32]
   12854:	movw	r3, #55080	; 0xd728
   12858:	movt	r3, #1
   1285c:	str	r3, [sp, #36]	; 0x24
   12860:	movw	r3, #28876	; 0x70cc
   12864:	movt	r3, #1
   12868:	str	r3, [sp, #40]	; 0x28
   1286c:	cmp	r9, #47	; 0x2f
   12870:	movne	r3, r9
   12874:	movne	r7, r5
   12878:	bne	12894 <__assert_fail@plt+0x1068>
   1287c:	ldrb	r3, [r5, #1]!
   12880:	cmp	r3, #47	; 0x2f
   12884:	beq	1287c <__assert_fail@plt+0x1050>
   12888:	cmp	r3, #0
   1288c:	beq	12a0c <__assert_fail@plt+0x11e0>
   12890:	mov	r7, r5
   12894:	mov	r8, r5
   12898:	ldrb	r9, [r5, #1]!
   1289c:	cmp	r9, #0
   128a0:	cmpne	r9, #47	; 0x2f
   128a4:	bne	12894 <__assert_fail@plt+0x1068>
   128a8:	subs	sl, r5, r7
   128ac:	beq	12a0c <__assert_fail@plt+0x11e0>
   128b0:	cmp	sl, #1
   128b4:	beq	12a34 <__assert_fail@plt+0x1208>
   128b8:	cmp	r3, #46	; 0x2e
   128bc:	cmpeq	sl, #2
   128c0:	beq	12a48 <__assert_fail@plt+0x121c>
   128c4:	ldrb	r3, [r4, #-1]
   128c8:	cmp	r3, #47	; 0x2f
   128cc:	beq	128d8 <__assert_fail@plt+0x10ac>
   128d0:	mov	r3, #47	; 0x2f
   128d4:	strb	r3, [r4], #1
   128d8:	ldr	r3, [sp, #156]	; 0x9c
   128dc:	add	r9, sl, #2
   128e0:	add	r3, r6, r3
   128e4:	sub	r3, r3, r4
   128e8:	cmp	r3, r9
   128ec:	bcs	1291c <__assert_fail@plt+0x10f0>
   128f0:	add	r0, sp, #152	; 0x98
   128f4:	sub	r4, r4, r6
   128f8:	bl	1b51c <lchmod@@Base+0x435c>
   128fc:	cmp	r0, #0
   12900:	beq	12d30 <__assert_fail@plt+0x1504>
   12904:	ldr	r6, [sp, #152]	; 0x98
   12908:	ldr	r3, [sp, #156]	; 0x9c
   1290c:	sub	r3, r3, r4
   12910:	add	r4, r6, r4
   12914:	cmp	r3, r9
   12918:	bcc	128f0 <__assert_fail@plt+0x10c4>
   1291c:	mov	r2, sl
   12920:	mov	r0, r4
   12924:	mov	r1, r7
   12928:	bl	11610 <mempcpy@plt>
   1292c:	ldr	r2, [sp, #12]
   12930:	mov	r3, #0
   12934:	mov	r4, r0
   12938:	strb	r3, [r0]
   1293c:	cmp	r2, r3
   12940:	beq	12a80 <__assert_fail@plt+0x1254>
   12944:	ldr	r3, [sp, #16]
   12948:	ldrb	r9, [r8, #1]
   1294c:	cmp	r3, #2
   12950:	beq	12a04 <__assert_fail@plt+0x11d8>
   12954:	cmp	r9, #47	; 0x2f
   12958:	bne	129a8 <__assert_fail@plt+0x117c>
   1295c:	mov	r3, r5
   12960:	ldrb	r2, [r3, #1]
   12964:	add	r0, r3, #1
   12968:	cmp	r2, #47	; 0x2f
   1296c:	moveq	r3, r0
   12970:	beq	12960 <__assert_fail@plt+0x1134>
   12974:	cmp	r2, #0
   12978:	add	r3, r3, #2
   1297c:	beq	12b6c <__assert_fail@plt+0x1340>
   12980:	cmp	r2, #46	; 0x2e
   12984:	bne	129a8 <__assert_fail@plt+0x117c>
   12988:	ldrb	r2, [r0, #1]
   1298c:	cmp	r2, #0
   12990:	beq	12b6c <__assert_fail@plt+0x1340>
   12994:	cmp	r2, #46	; 0x2e
   12998:	beq	12cbc <__assert_fail@plt+0x1490>
   1299c:	cmp	r2, #47	; 0x2f
   129a0:	beq	12960 <__assert_fail@plt+0x1134>
   129a4:	b	12ccc <__assert_fail@plt+0x14a0>
   129a8:	ldr	r3, [sp, #12]
   129ac:	cmp	r3, #0
   129b0:	bne	12b98 <__assert_fail@plt+0x136c>
   129b4:	bl	11688 <__errno_location@plt>
   129b8:	ldr	r7, [r0]
   129bc:	subs	r7, r7, #22
   129c0:	movne	r7, #1
   129c4:	cmp	r7, #0
   129c8:	beq	12a00 <__assert_fail@plt+0x11d4>
   129cc:	ldr	r3, [sp, #16]
   129d0:	cmp	r3, #1
   129d4:	bne	12a1c <__assert_fail@plt+0x11f0>
   129d8:	bl	11688 <__errno_location@plt>
   129dc:	ldr	r3, [r0]
   129e0:	cmp	r3, #2
   129e4:	bne	12a1c <__assert_fail@plt+0x11f0>
   129e8:	mov	r0, r5
   129ec:	ldr	r1, [sp, #24]
   129f0:	bl	11820 <strspn@plt>
   129f4:	ldrb	r3, [r5, r0]
   129f8:	cmp	r3, #0
   129fc:	bne	12a1c <__assert_fail@plt+0x11f0>
   12a00:	ldrb	r9, [r8, #1]
   12a04:	cmp	r9, #0
   12a08:	bne	1286c <__assert_fail@plt+0x1040>
   12a0c:	add	r3, r6, #1
   12a10:	cmp	r4, r3
   12a14:	bhi	12d54 <__assert_fail@plt+0x1528>
   12a18:	mov	r7, #0
   12a1c:	ldr	r3, [sp, #20]
   12a20:	cmp	r3, #0
   12a24:	beq	12780 <__assert_fail@plt+0xf54>
   12a28:	mov	r0, r3
   12a2c:	bl	1658c <__assert_fail@plt+0x4d60>
   12a30:	b	12780 <__assert_fail@plt+0xf54>
   12a34:	cmp	r3, #46	; 0x2e
   12a38:	bne	128c4 <__assert_fail@plt+0x1098>
   12a3c:	cmp	r9, #0
   12a40:	bne	1286c <__assert_fail@plt+0x1040>
   12a44:	b	12a0c <__assert_fail@plt+0x11e0>
   12a48:	ldrb	r3, [r7, #1]
   12a4c:	cmp	r3, #46	; 0x2e
   12a50:	bne	128c4 <__assert_fail@plt+0x1098>
   12a54:	add	r3, r6, #1
   12a58:	cmp	r4, r3
   12a5c:	bls	12a04 <__assert_fail@plt+0x11d8>
   12a60:	sub	r3, r4, #1
   12a64:	cmp	r3, r6
   12a68:	bls	12a78 <__assert_fail@plt+0x124c>
   12a6c:	ldrb	r2, [r4, #-2]
   12a70:	cmp	r2, #47	; 0x2f
   12a74:	bne	12d34 <__assert_fail@plt+0x1508>
   12a78:	mov	r4, r3
   12a7c:	b	12a04 <__assert_fail@plt+0x11d8>
   12a80:	add	r3, sp, #2224	; 0x8b0
   12a84:	sub	r9, r3, #8
   12a88:	b	12a9c <__assert_fail@plt+0x1270>
   12a8c:	mov	r0, r9
   12a90:	bl	1b488 <lchmod@@Base+0x42c8>
   12a94:	cmp	r0, #0
   12a98:	beq	12d30 <__assert_fail@plt+0x1504>
   12a9c:	ldr	sl, [sp, #2216]	; 0x8a8
   12aa0:	mov	r0, r6
   12aa4:	ldr	fp, [sp, #2220]	; 0x8ac
   12aa8:	mov	r1, sl
   12aac:	sub	fp, fp, #1
   12ab0:	mov	r2, fp
   12ab4:	bl	1155c <readlink@plt>
   12ab8:	cmp	fp, r0
   12abc:	ble	12a8c <__assert_fail@plt+0x1260>
   12ac0:	cmp	r0, #0
   12ac4:	mov	r9, r0
   12ac8:	blt	12944 <__assert_fail@plt+0x1118>
   12acc:	ldr	r3, [sp, #32]
   12ad0:	cmp	r3, #19
   12ad4:	addle	r3, r3, #1
   12ad8:	strle	r3, [sp, #32]
   12adc:	ble	12c00 <__assert_fail@plt+0x13d4>
   12ae0:	ldrb	r3, [r7]
   12ae4:	cmp	r3, #0
   12ae8:	beq	12c00 <__assert_fail@plt+0x13d4>
   12aec:	mov	r3, #0
   12af0:	sub	fp, r7, r5
   12af4:	mov	r0, #3
   12af8:	add	r2, sp, #48	; 0x30
   12afc:	strb	r3, [r4, fp]
   12b00:	ldrb	r1, [r6]
   12b04:	ldr	r3, [sp, #36]	; 0x24
   12b08:	cmp	r1, #0
   12b0c:	movne	r3, r6
   12b10:	mov	r1, r3
   12b14:	bl	117c0 <__xstat64@plt>
   12b18:	cmp	r0, #0
   12b1c:	bne	12b64 <__assert_fail@plt+0x1338>
   12b20:	ldr	r2, [sp, #20]
   12b24:	ldrb	r3, [r7]
   12b28:	cmp	r2, #0
   12b2c:	strb	r3, [r4, fp]
   12b30:	beq	12d00 <__assert_fail@plt+0x14d4>
   12b34:	add	r2, sp, #48	; 0x30
   12b38:	mov	r1, r7
   12b3c:	ldr	r0, [sp, #20]
   12b40:	bl	131b0 <__assert_fail@plt+0x1984>
   12b44:	cmp	r0, #0
   12b48:	beq	12bf0 <__assert_fail@plt+0x13c4>
   12b4c:	ldr	r3, [sp, #16]
   12b50:	cmp	r3, #2
   12b54:	beq	12a00 <__assert_fail@plt+0x11d4>
   12b58:	bl	11688 <__errno_location@plt>
   12b5c:	mov	r3, #40	; 0x28
   12b60:	str	r3, [r0]
   12b64:	mov	r7, #1
   12b68:	b	12a1c <__assert_fail@plt+0x11f0>
   12b6c:	ldr	r3, [sp, #24]
   12b70:	mov	r2, #0
   12b74:	mov	r1, r6
   12b78:	mvn	r0, #99	; 0x63
   12b7c:	ldrh	ip, [r3]
   12b80:	mov	r3, #512	; 0x200
   12b84:	strh	ip, [r4]
   12b88:	bl	1149c <faccessat@plt>
   12b8c:	adds	r7, r0, #0
   12b90:	movne	r7, #1
   12b94:	b	129c4 <__assert_fail@plt+0x1198>
   12b98:	cmp	r9, #0
   12b9c:	bne	12a04 <__assert_fail@plt+0x11d8>
   12ba0:	mov	r2, r9
   12ba4:	mov	r3, #512	; 0x200
   12ba8:	mov	r1, r6
   12bac:	mvn	r0, #99	; 0x63
   12bb0:	bl	1149c <faccessat@plt>
   12bb4:	adds	r7, r0, #0
   12bb8:	movne	r7, #1
   12bbc:	b	129c4 <__assert_fail@plt+0x1198>
   12bc0:	ldr	r0, [sp, #152]	; 0x98
   12bc4:	add	r3, sp, #160	; 0xa0
   12bc8:	cmp	r0, r3
   12bcc:	moveq	r9, #0
   12bd0:	beq	127cc <__assert_fail@plt+0xfa0>
   12bd4:	bl	13204 <__assert_fail@plt+0x19d8>
   12bd8:	mov	r9, #0
   12bdc:	b	127cc <__assert_fail@plt+0xfa0>
   12be0:	bl	11688 <__errno_location@plt>
   12be4:	mov	r3, #2
   12be8:	str	r3, [r0]
   12bec:	b	127cc <__assert_fail@plt+0xfa0>
   12bf0:	add	r2, sp, #48	; 0x30
   12bf4:	mov	r1, r7
   12bf8:	ldr	r0, [sp, #20]
   12bfc:	bl	13118 <__assert_fail@plt+0x18ec>
   12c00:	ldr	r2, [sp, #28]
   12c04:	mov	r3, #0
   12c08:	mov	r0, r5
   12c0c:	strb	r3, [sl, r9]
   12c10:	ldr	fp, [sp, #1184]	; 0x4a0
   12c14:	cmp	r2, r3
   12c18:	beq	12cdc <__assert_fail@plt+0x14b0>
   12c1c:	sub	r3, r5, fp
   12c20:	str	r3, [sp, #44]	; 0x2c
   12c24:	bl	11658 <strlen@plt>
   12c28:	ldr	r2, [sp, #1188]	; 0x4a4
   12c2c:	add	r7, r0, r9
   12c30:	mov	r8, r0
   12c34:	cmp	r7, r2
   12c38:	bcc	12c68 <__assert_fail@plt+0x143c>
   12c3c:	add	r0, sp, #1184	; 0x4a0
   12c40:	bl	1b51c <lchmod@@Base+0x435c>
   12c44:	cmp	r0, #0
   12c48:	beq	12d30 <__assert_fail@plt+0x1504>
   12c4c:	ldr	r3, [sp, #1188]	; 0x4a4
   12c50:	cmp	r3, r7
   12c54:	bls	12c3c <__assert_fail@plt+0x1410>
   12c58:	ldr	r3, [sp, #28]
   12c5c:	ldr	fp, [sp, #1184]	; 0x4a0
   12c60:	cmp	r3, #0
   12c64:	beq	12c70 <__assert_fail@plt+0x1444>
   12c68:	ldr	r3, [sp, #44]	; 0x2c
   12c6c:	add	r5, fp, r3
   12c70:	mov	r1, r5
   12c74:	add	r2, r8, #1
   12c78:	add	r0, fp, r9
   12c7c:	bl	11484 <memmove@plt>
   12c80:	mov	r2, r9
   12c84:	mov	r1, sl
   12c88:	mov	r0, fp
   12c8c:	bl	114b4 <memcpy@plt>
   12c90:	ldrb	r3, [sl]
   12c94:	mov	r5, r0
   12c98:	add	r2, r6, #1
   12c9c:	cmp	r3, #47	; 0x2f
   12ca0:	beq	12df8 <__assert_fail@plt+0x15cc>
   12ca4:	cmp	r4, r2
   12ca8:	ldrb	r9, [r0]
   12cac:	bhi	12dbc <__assert_fail@plt+0x1590>
   12cb0:	mov	r3, #1
   12cb4:	str	r3, [sp, #28]
   12cb8:	b	12a04 <__assert_fail@plt+0x11d8>
   12cbc:	ldrb	r3, [r0, #2]
   12cc0:	cmp	r3, #47	; 0x2f
   12cc4:	cmpne	r3, #0
   12cc8:	beq	12b6c <__assert_fail@plt+0x1340>
   12ccc:	ldr	r3, [sp, #12]
   12cd0:	cmp	r3, #0
   12cd4:	beq	129b4 <__assert_fail@plt+0x1188>
   12cd8:	b	12a04 <__assert_fail@plt+0x11d8>
   12cdc:	bl	11658 <strlen@plt>
   12ce0:	ldr	r2, [sp, #1188]	; 0x4a4
   12ce4:	add	r7, r9, r0
   12ce8:	mov	r8, r0
   12cec:	cmp	r7, r2
   12cf0:	bcc	12c70 <__assert_fail@plt+0x1444>
   12cf4:	ldr	r3, [sp, #28]
   12cf8:	str	r3, [sp, #44]	; 0x2c
   12cfc:	b	12c3c <__assert_fail@plt+0x1410>
   12d00:	ldr	ip, [sp, #40]	; 0x28
   12d04:	mov	r1, r2
   12d08:	movw	r3, #28768	; 0x7060
   12d0c:	movt	r3, #1
   12d10:	movw	r2, #28696	; 0x7018
   12d14:	movt	r2, #1
   12d18:	mov	r0, #7
   12d1c:	str	ip, [sp]
   12d20:	bl	1624c <__assert_fail@plt+0x4a20>
   12d24:	subs	r3, r0, #0
   12d28:	str	r3, [sp, #20]
   12d2c:	bne	12b34 <__assert_fail@plt+0x1308>
   12d30:	bl	1c4d8 <lchmod@@Base+0x5318>
   12d34:	sub	r3, r4, #2
   12d38:	cmp	r3, r6
   12d3c:	mov	r4, r3
   12d40:	beq	12a04 <__assert_fail@plt+0x11d8>
   12d44:	ldrb	r2, [r3, #-1]!
   12d48:	cmp	r2, #47	; 0x2f
   12d4c:	beq	12a04 <__assert_fail@plt+0x11d8>
   12d50:	b	12d38 <__assert_fail@plt+0x150c>
   12d54:	ldrb	r3, [r4, #-1]
   12d58:	cmp	r3, #47	; 0x2f
   12d5c:	bne	12a18 <__assert_fail@plt+0x11ec>
   12d60:	sub	r4, r4, #1
   12d64:	mov	r7, #0
   12d68:	b	12a1c <__assert_fail@plt+0x11f0>
   12d6c:	mov	r0, r4
   12d70:	mov	r1, #0
   12d74:	bl	1152c <rawmemchr@plt>
   12d78:	ldrb	r9, [r5]
   12d7c:	and	r3, r6, #4
   12d80:	str	r3, [sp, #12]
   12d84:	cmp	r9, #0
   12d88:	movne	r6, r4
   12d8c:	movne	r4, r0
   12d90:	bne	12838 <__assert_fail@plt+0x100c>
   12d94:	add	r3, r4, #1
   12d98:	cmp	r0, r3
   12d9c:	bls	12dac <__assert_fail@plt+0x1580>
   12da0:	ldrb	r3, [r0, #-1]
   12da4:	cmp	r3, #47	; 0x2f
   12da8:	beq	12e20 <__assert_fail@plt+0x15f4>
   12dac:	mov	r6, r4
   12db0:	mov	r7, r9
   12db4:	mov	r4, r0
   12db8:	b	12780 <__assert_fail@plt+0xf54>
   12dbc:	sub	r3, r4, #1
   12dc0:	cmp	r3, r6
   12dc4:	bls	12e10 <__assert_fail@plt+0x15e4>
   12dc8:	ldrb	r2, [r4, #-2]
   12dcc:	cmp	r2, #47	; 0x2f
   12dd0:	beq	12e10 <__assert_fail@plt+0x15e4>
   12dd4:	sub	r3, r4, #2
   12dd8:	cmp	r6, r3
   12ddc:	mov	r4, r3
   12de0:	beq	12cb0 <__assert_fail@plt+0x1484>
   12de4:	ldrb	r2, [r3, #-1]
   12de8:	sub	r3, r3, #1
   12dec:	cmp	r2, #47	; 0x2f
   12df0:	beq	12cb0 <__assert_fail@plt+0x1484>
   12df4:	b	12dd8 <__assert_fail@plt+0x15ac>
   12df8:	mov	r4, r2
   12dfc:	mov	r2, #1
   12e00:	strb	r3, [r6]
   12e04:	ldrb	r9, [r0]
   12e08:	str	r2, [sp, #28]
   12e0c:	b	12a04 <__assert_fail@plt+0x11d8>
   12e10:	mov	r4, r3
   12e14:	mov	r3, #1
   12e18:	str	r3, [sp, #28]
   12e1c:	b	12a04 <__assert_fail@plt+0x11d8>
   12e20:	mov	r6, r4
   12e24:	mov	r4, r0
   12e28:	str	r9, [sp, #20]
   12e2c:	b	12d60 <__assert_fail@plt+0x1534>
   12e30:	movw	r3, #57832	; 0xe1e8
   12e34:	movt	r3, #2
   12e38:	str	r0, [r3]
   12e3c:	bx	lr
   12e40:	movw	r3, #57832	; 0xe1e8
   12e44:	movt	r3, #2
   12e48:	strb	r0, [r3, #4]
   12e4c:	bx	lr
   12e50:	movw	r3, #57820	; 0xe1dc
   12e54:	movt	r3, #2
   12e58:	strd	r4, [sp, #-16]!
   12e5c:	ldr	r0, [r3]
   12e60:	str	r6, [sp, #8]
   12e64:	str	lr, [sp, #12]
   12e68:	sub	sp, sp, #8
   12e6c:	bl	1c788 <lchmod@@Base+0x55c8>
   12e70:	cmp	r0, #0
   12e74:	beq	12ea0 <__assert_fail@plt+0x1674>
   12e78:	movw	r4, #57832	; 0xe1e8
   12e7c:	movt	r4, #2
   12e80:	ldrb	r6, [r4, #4]
   12e84:	bl	11688 <__errno_location@plt>
   12e88:	mov	r5, r0
   12e8c:	cmp	r6, #0
   12e90:	beq	12ecc <__assert_fail@plt+0x16a0>
   12e94:	ldr	r3, [r0]
   12e98:	cmp	r3, #32
   12e9c:	bne	12ecc <__assert_fail@plt+0x16a0>
   12ea0:	movw	r3, #57816	; 0xe1d8
   12ea4:	movt	r3, #2
   12ea8:	ldr	r0, [r3]
   12eac:	bl	1c788 <lchmod@@Base+0x55c8>
   12eb0:	cmp	r0, #0
   12eb4:	bne	12f14 <__assert_fail@plt+0x16e8>
   12eb8:	add	sp, sp, #8
   12ebc:	ldrd	r4, [sp]
   12ec0:	ldr	r6, [sp, #8]
   12ec4:	add	sp, sp, #12
   12ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   12ecc:	movw	r1, #55088	; 0xd730
   12ed0:	movt	r1, #1
   12ed4:	mov	r2, #5
   12ed8:	mov	r0, #0
   12edc:	bl	114f0 <dcgettext@plt>
   12ee0:	mov	r6, r0
   12ee4:	ldr	r0, [r4]
   12ee8:	cmp	r0, #0
   12eec:	beq	12f24 <__assert_fail@plt+0x16f8>
   12ef0:	ldr	r4, [r5]
   12ef4:	bl	1a708 <lchmod@@Base+0x3548>
   12ef8:	mov	r3, r0
   12efc:	movw	r2, #55100	; 0xd73c
   12f00:	movt	r2, #1
   12f04:	mov	r0, #0
   12f08:	str	r6, [sp]
   12f0c:	mov	r1, r4
   12f10:	bl	115b0 <error@plt>
   12f14:	movw	r3, #57728	; 0xe180
   12f18:	movt	r3, #2
   12f1c:	ldr	r0, [r3]
   12f20:	bl	114a8 <_exit@plt>
   12f24:	mov	r3, r6
   12f28:	movw	r2, #55104	; 0xd740
   12f2c:	movt	r2, #1
   12f30:	ldr	r1, [r5]
   12f34:	bl	115b0 <error@plt>
   12f38:	b	12f14 <__assert_fail@plt+0x16e8>
   12f3c:	str	r4, [sp, #-8]!
   12f40:	str	lr, [sp, #4]
   12f44:	bl	13000 <__assert_fail@plt+0x17d4>
   12f48:	cmp	r0, #0
   12f4c:	beq	12f5c <__assert_fail@plt+0x1730>
   12f50:	ldr	r4, [sp]
   12f54:	add	sp, sp, #4
   12f58:	pop	{pc}		; (ldr pc, [sp], #4)
   12f5c:	bl	1c4d8 <lchmod@@Base+0x5318>
   12f60:	strd	r4, [sp, #-16]!
   12f64:	mov	r4, r0
   12f68:	str	r6, [sp, #8]
   12f6c:	str	lr, [sp, #12]
   12f70:	ldrb	ip, [r0]
   12f74:	sub	r5, ip, #47	; 0x2f
   12f78:	clz	r5, r5
   12f7c:	bl	1c6b4 <lchmod@@Base+0x54f4>
   12f80:	lsr	r5, r5, #5
   12f84:	sub	r0, r0, r4
   12f88:	cmp	r0, r5
   12f8c:	bls	12fe8 <__assert_fail@plt+0x17bc>
   12f90:	sub	r3, r0, #1
   12f94:	ldrb	r2, [r4, r3]
   12f98:	cmp	r2, #47	; 0x2f
   12f9c:	bne	12fe8 <__assert_fail@plt+0x17bc>
   12fa0:	cmp	r3, r5
   12fa4:	bls	12ff8 <__assert_fail@plt+0x17cc>
   12fa8:	add	r2, r4, r0
   12fac:	ldrb	r2, [r2, #-2]
   12fb0:	cmp	r2, #47	; 0x2f
   12fb4:	bne	12ff8 <__assert_fail@plt+0x17cc>
   12fb8:	sub	r0, r0, #3
   12fbc:	sub	ip, r4, #1
   12fc0:	add	r3, r4, r0
   12fc4:	add	ip, ip, r5
   12fc8:	rsb	r2, r4, #1
   12fcc:	b	12fdc <__assert_fail@plt+0x17b0>
   12fd0:	ldrb	r1, [r3], #-1
   12fd4:	cmp	r1, #47	; 0x2f
   12fd8:	bne	12fe8 <__assert_fail@plt+0x17bc>
   12fdc:	cmp	r3, ip
   12fe0:	add	r0, r2, r3
   12fe4:	bne	12fd0 <__assert_fail@plt+0x17a4>
   12fe8:	ldrd	r4, [sp]
   12fec:	ldr	r6, [sp, #8]
   12ff0:	add	sp, sp, #12
   12ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ff8:	mov	r0, r3
   12ffc:	b	12fe8 <__assert_fail@plt+0x17bc>
   13000:	strd	r4, [sp, #-16]!
   13004:	mov	r5, r0
   13008:	str	r6, [sp, #8]
   1300c:	str	lr, [sp, #12]
   13010:	ldrb	r6, [r0]
   13014:	bl	1c6b4 <lchmod@@Base+0x54f4>
   13018:	sub	r4, r0, r5
   1301c:	sub	r6, r6, #47	; 0x2f
   13020:	clz	r6, r6
   13024:	lsr	r6, r6, #5
   13028:	cmp	r6, r4
   1302c:	bcs	13088 <__assert_fail@plt+0x185c>
   13030:	sub	r3, r4, #1
   13034:	ldrb	r2, [r5, r3]
   13038:	cmp	r2, #47	; 0x2f
   1303c:	bne	130e0 <__assert_fail@plt+0x18b4>
   13040:	cmp	r6, r3
   13044:	bcs	13110 <__assert_fail@plt+0x18e4>
   13048:	add	r2, r5, r4
   1304c:	ldrb	r2, [r2, #-2]
   13050:	cmp	r2, #47	; 0x2f
   13054:	bne	130dc <__assert_fail@plt+0x18b0>
   13058:	sub	r4, r4, #3
   1305c:	sub	r2, r5, #1
   13060:	add	r3, r5, r4
   13064:	add	r6, r2, r6
   13068:	rsb	r1, r5, #1
   1306c:	b	1307c <__assert_fail@plt+0x1850>
   13070:	ldrb	r2, [r3], #-1
   13074:	cmp	r2, #47	; 0x2f
   13078:	bne	130e0 <__assert_fail@plt+0x18b4>
   1307c:	cmp	r3, r6
   13080:	add	r4, r1, r3
   13084:	bne	13070 <__assert_fail@plt+0x1844>
   13088:	add	r0, r4, #1
   1308c:	cmp	r4, #0
   13090:	addeq	r0, r0, #1
   13094:	bl	1c620 <lchmod@@Base+0x5460>
   13098:	subs	r6, r0, #0
   1309c:	beq	13108 <__assert_fail@plt+0x18dc>
   130a0:	mov	r1, r5
   130a4:	mov	r2, r4
   130a8:	bl	114b4 <memcpy@plt>
   130ac:	cmp	r4, #0
   130b0:	bne	130c0 <__assert_fail@plt+0x1894>
   130b4:	mov	r3, #46	; 0x2e
   130b8:	mov	r4, #1
   130bc:	strb	r3, [r6]
   130c0:	mov	r3, #0
   130c4:	strb	r3, [r6, r4]
   130c8:	mov	r0, r6
   130cc:	ldrd	r4, [sp]
   130d0:	ldr	r6, [sp, #8]
   130d4:	add	sp, sp, #12
   130d8:	pop	{pc}		; (ldr pc, [sp], #4)
   130dc:	mov	r4, r3
   130e0:	add	r0, r4, #1
   130e4:	cmp	r4, #0
   130e8:	addeq	r0, r0, #1
   130ec:	bl	1c620 <lchmod@@Base+0x5460>
   130f0:	subs	r6, r0, #0
   130f4:	beq	13108 <__assert_fail@plt+0x18dc>
   130f8:	mov	r1, r5
   130fc:	mov	r2, r4
   13100:	bl	114b4 <memcpy@plt>
   13104:	b	130c0 <__assert_fail@plt+0x1894>
   13108:	mov	r6, #0
   1310c:	b	130c8 <__assert_fail@plt+0x189c>
   13110:	mov	r4, r3
   13114:	b	13088 <__assert_fail@plt+0x185c>
   13118:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1311c:	strd	r6, [sp, #8]
   13120:	str	r8, [sp, #16]
   13124:	subs	r8, r0, #0
   13128:	str	lr, [sp, #20]
   1312c:	beq	13198 <__assert_fail@plt+0x196c>
   13130:	mov	r0, #24
   13134:	mov	r4, r1
   13138:	mov	r7, r2
   1313c:	bl	1bf20 <lchmod@@Base+0x4d60>
   13140:	mov	r6, r0
   13144:	mov	r0, r4
   13148:	bl	1c48c <lchmod@@Base+0x52cc>
   1314c:	ldrd	r4, [r7]
   13150:	mov	r1, r6
   13154:	str	r0, [r6]
   13158:	mov	r0, r8
   1315c:	ldrd	r2, [r7, #96]	; 0x60
   13160:	strd	r2, [r6, #8]
   13164:	strd	r4, [r6, #16]
   13168:	bl	16ab4 <__assert_fail@plt+0x5288>
   1316c:	cmp	r0, #0
   13170:	beq	131ac <__assert_fail@plt+0x1980>
   13174:	cmp	r6, r0
   13178:	beq	13198 <__assert_fail@plt+0x196c>
   1317c:	mov	r0, r6
   13180:	ldrd	r4, [sp]
   13184:	ldrd	r6, [sp, #8]
   13188:	ldr	r8, [sp, #16]
   1318c:	ldr	lr, [sp, #20]
   13190:	add	sp, sp, #24
   13194:	b	170cc <__assert_fail@plt+0x58a0>
   13198:	ldrd	r4, [sp]
   1319c:	ldrd	r6, [sp, #8]
   131a0:	ldr	r8, [sp, #16]
   131a4:	add	sp, sp, #20
   131a8:	pop	{pc}		; (ldr pc, [sp], #4)
   131ac:	bl	1c4d8 <lchmod@@Base+0x5318>
   131b0:	subs	r3, r0, #0
   131b4:	beq	131fc <__assert_fail@plt+0x19d0>
   131b8:	mov	r3, r1
   131bc:	strd	r4, [sp, #-12]!
   131c0:	ldrd	r4, [r2, #96]	; 0x60
   131c4:	str	lr, [sp, #8]
   131c8:	sub	sp, sp, #28
   131cc:	mov	r1, sp
   131d0:	str	r3, [sp]
   131d4:	ldrd	r2, [r2]
   131d8:	strd	r4, [sp, #8]
   131dc:	strd	r2, [sp, #16]
   131e0:	bl	15ec8 <__assert_fail@plt+0x469c>
   131e4:	adds	r0, r0, #0
   131e8:	movne	r0, #1
   131ec:	add	sp, sp, #28
   131f0:	ldrd	r4, [sp]
   131f4:	add	sp, sp, #8
   131f8:	pop	{pc}		; (ldr pc, [sp], #4)
   131fc:	mov	r0, r3
   13200:	bx	lr
   13204:	strd	r4, [sp, #-12]!
   13208:	mov	r5, r0
   1320c:	str	lr, [sp, #8]
   13210:	sub	sp, sp, #12
   13214:	bl	11688 <__errno_location@plt>
   13218:	mov	r4, r0
   1321c:	mov	r2, #0
   13220:	ldr	r3, [r4]
   13224:	mov	r0, r5
   13228:	str	r2, [r4]
   1322c:	str	r3, [sp]
   13230:	str	r3, [sp, #4]
   13234:	bl	11490 <free@plt>
   13238:	ldr	r3, [r4]
   1323c:	add	r2, sp, #8
   13240:	clz	r3, r3
   13244:	lsr	r3, r3, #5
   13248:	add	r3, r2, r3, lsl #2
   1324c:	ldr	r3, [r3, #-8]
   13250:	str	r3, [r4]
   13254:	add	sp, sp, #12
   13258:	ldrd	r4, [sp]
   1325c:	add	sp, sp, #8
   13260:	pop	{pc}		; (ldr pc, [sp], #4)
   13264:	strd	r4, [sp, #-8]!
   13268:	ldrd	r2, [r1, #8]
   1326c:	ldrd	r4, [r0, #8]
   13270:	cmp	r5, r3
   13274:	cmpeq	r4, r2
   13278:	movne	r0, #0
   1327c:	bne	13298 <__assert_fail@plt+0x1a6c>
   13280:	ldrd	r4, [r0]
   13284:	ldrd	r2, [r1]
   13288:	cmp	r5, r3
   1328c:	cmpeq	r4, r2
   13290:	moveq	r0, #1
   13294:	movne	r0, #0
   13298:	ldrd	r4, [sp]
   1329c:	add	sp, sp, #8
   132a0:	bx	lr
   132a4:	mov	r2, r1
   132a8:	mov	r3, #0
   132ac:	str	r4, [sp, #-8]!
   132b0:	ldrd	r0, [r0, #8]
   132b4:	str	lr, [sp, #4]
   132b8:	bl	1cf8c <lchmod@@Base+0x5dcc>
   132bc:	ldr	r4, [sp]
   132c0:	add	sp, sp, #4
   132c4:	mov	r0, r2
   132c8:	pop	{pc}		; (ldr pc, [sp], #4)
   132cc:	mov	r2, r1
   132d0:	mov	r3, #0
   132d4:	str	r4, [sp, #-8]!
   132d8:	ldrd	r0, [r0]
   132dc:	str	lr, [sp, #4]
   132e0:	bl	1cf8c <lchmod@@Base+0x5dcc>
   132e4:	ldr	r4, [sp]
   132e8:	add	sp, sp, #4
   132ec:	mov	r0, r2
   132f0:	pop	{pc}		; (ldr pc, [sp], #4)
   132f4:	strd	r4, [sp, #-8]!
   132f8:	ldrd	r2, [r1]
   132fc:	ldrd	r4, [r0]
   13300:	cmp	r5, r3
   13304:	cmpeq	r4, r2
   13308:	ldrd	r4, [sp]
   1330c:	add	sp, sp, #8
   13310:	moveq	r0, #1
   13314:	movne	r0, #0
   13318:	bx	lr
   1331c:	ldr	r2, [r0]
   13320:	ldr	r3, [r1]
   13324:	ldrd	r0, [r2, #160]	; 0xa0
   13328:	ldrd	r2, [r3, #160]	; 0xa0
   1332c:	cmp	r1, r3
   13330:	cmpeq	r0, r2
   13334:	movhi	r0, #1
   13338:	movls	r0, #0
   1333c:	movcc	r3, #1
   13340:	movcs	r3, #0
   13344:	sub	r0, r0, r3
   13348:	bx	lr
   1334c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13350:	mov	r5, r2
   13354:	mov	r4, r1
   13358:	ldr	r2, [r0, #40]	; 0x28
   1335c:	strd	r6, [sp, #8]
   13360:	mov	r6, r0
   13364:	str	r8, [sp, #16]
   13368:	str	lr, [sp, #20]
   1336c:	ldr	r0, [r0, #8]
   13370:	cmp	r2, r5
   13374:	ldr	r7, [r6, #44]	; 0x2c
   13378:	bcs	133a0 <__assert_fail@plt+0x1b74>
   1337c:	add	r1, r5, #40	; 0x28
   13380:	cmn	r1, #-1073741823	; 0xc0000001
   13384:	str	r1, [r6, #40]	; 0x28
   13388:	bhi	13420 <__assert_fail@plt+0x1bf4>
   1338c:	lsl	r1, r1, #2
   13390:	bl	1c65c <lchmod@@Base+0x549c>
   13394:	cmp	r0, #0
   13398:	strne	r0, [r6, #8]
   1339c:	beq	1341c <__assert_fail@plt+0x1bf0>
   133a0:	cmp	r4, #0
   133a4:	movne	r2, r0
   133a8:	beq	133bc <__assert_fail@plt+0x1b90>
   133ac:	str	r4, [r2], #4
   133b0:	ldr	r4, [r4, #8]
   133b4:	cmp	r4, #0
   133b8:	bne	133ac <__assert_fail@plt+0x1b80>
   133bc:	mov	r3, r7
   133c0:	mov	r2, #4
   133c4:	mov	r1, r5
   133c8:	bl	1176c <qsort@plt>
   133cc:	ldr	lr, [r6, #8]
   133d0:	subs	r3, r5, #1
   133d4:	ldr	r0, [lr]
   133d8:	moveq	r2, r0
   133dc:	beq	13400 <__assert_fail@plt+0x1bd4>
   133e0:	mov	r2, lr
   133e4:	ldr	r1, [r2]
   133e8:	subs	r3, r3, #1
   133ec:	ldr	ip, [r2, #4]!
   133f0:	str	ip, [r1, #8]
   133f4:	bne	133e4 <__assert_fail@plt+0x1bb8>
   133f8:	add	r5, lr, r5, lsl #2
   133fc:	ldr	r2, [r5, #-4]
   13400:	mov	r3, #0
   13404:	str	r3, [r2, #8]
   13408:	ldrd	r4, [sp]
   1340c:	ldrd	r6, [sp, #8]
   13410:	ldr	r8, [sp, #16]
   13414:	add	sp, sp, #20
   13418:	pop	{pc}		; (ldr pc, [sp], #4)
   1341c:	ldr	r0, [r6, #8]
   13420:	bl	13204 <__assert_fail@plt+0x19d8>
   13424:	mov	r3, #0
   13428:	mov	r0, r4
   1342c:	str	r3, [r6, #8]
   13430:	str	r3, [r6, #40]	; 0x28
   13434:	b	13408 <__assert_fail@plt+0x1bdc>
   13438:	strd	r4, [sp, #-20]!	; 0xffffffec
   1343c:	ldr	r5, [r0, #44]	; 0x2c
   13440:	ldr	r3, [r5, #48]	; 0x30
   13444:	strd	r6, [sp, #8]
   13448:	str	lr, [sp, #16]
   1344c:	sub	sp, sp, #100	; 0x64
   13450:	tst	r3, #512	; 0x200
   13454:	beq	134e4 <__assert_fail@plt+0x1cb8>
   13458:	ldr	r4, [r5, #52]	; 0x34
   1345c:	mov	r7, r1
   13460:	mov	r6, r0
   13464:	cmp	r4, #0
   13468:	beq	13490 <__assert_fail@plt+0x1c64>
   1346c:	ldrd	r2, [r6, #64]	; 0x40
   13470:	add	r1, sp, #8
   13474:	mov	r0, r4
   13478:	strd	r2, [sp, #8]
   1347c:	bl	15ec8 <__assert_fail@plt+0x469c>
   13480:	cmp	r0, #0
   13484:	beq	134c8 <__assert_fail@plt+0x1c9c>
   13488:	ldr	r0, [r0, #8]
   1348c:	b	134e8 <__assert_fail@plt+0x1cbc>
   13490:	movw	r0, #12804	; 0x3204
   13494:	movt	r0, #1
   13498:	mov	r1, r4
   1349c:	movw	r3, #13044	; 0x32f4
   134a0:	movt	r3, #1
   134a4:	movw	r2, #13004	; 0x32cc
   134a8:	movt	r2, #1
   134ac:	str	r0, [sp]
   134b0:	mov	r0, #13
   134b4:	bl	1624c <__assert_fail@plt+0x4a20>
   134b8:	cmp	r0, #0
   134bc:	mov	r4, r0
   134c0:	str	r0, [r5, #52]	; 0x34
   134c4:	bne	1346c <__assert_fail@plt+0x1c40>
   134c8:	cmp	r7, #0
   134cc:	blt	134e4 <__assert_fail@plt+0x1cb8>
   134d0:	mov	r0, r7
   134d4:	add	r1, sp, #8
   134d8:	bl	1140c <fstatfs64@plt>
   134dc:	cmp	r0, #0
   134e0:	beq	134fc <__assert_fail@plt+0x1cd0>
   134e4:	mov	r0, #0
   134e8:	add	sp, sp, #100	; 0x64
   134ec:	ldrd	r4, [sp]
   134f0:	ldrd	r6, [sp, #8]
   134f4:	add	sp, sp, #16
   134f8:	pop	{pc}		; (ldr pc, [sp], #4)
   134fc:	cmp	r4, #0
   13500:	beq	13540 <__assert_fail@plt+0x1d14>
   13504:	mov	r0, #16
   13508:	bl	1c620 <lchmod@@Base+0x5460>
   1350c:	subs	r5, r0, #0
   13510:	beq	13540 <__assert_fail@plt+0x1d14>
   13514:	ldr	ip, [sp, #8]
   13518:	mov	r0, r4
   1351c:	mov	r1, r5
   13520:	ldrd	r2, [r6, #64]	; 0x40
   13524:	strd	r2, [r5]
   13528:	str	ip, [r5, #8]
   1352c:	bl	16ab4 <__assert_fail@plt+0x5288>
   13530:	cmp	r0, #0
   13534:	beq	13548 <__assert_fail@plt+0x1d1c>
   13538:	cmp	r5, r0
   1353c:	bne	13554 <__assert_fail@plt+0x1d28>
   13540:	ldr	r0, [sp, #8]
   13544:	b	134e8 <__assert_fail@plt+0x1cbc>
   13548:	mov	r0, r5
   1354c:	bl	13204 <__assert_fail@plt+0x19d8>
   13550:	b	13540 <__assert_fail@plt+0x1d14>
   13554:	bl	117d8 <abort@plt>
   13558:	ldr	ip, [r2, #48]	; 0x30
   1355c:	strd	r4, [sp, #-16]!
   13560:	mov	r4, r2
   13564:	add	r5, r2, #64	; 0x40
   13568:	ldr	r2, [r2, #24]
   1356c:	str	r6, [sp, #8]
   13570:	str	lr, [sp, #12]
   13574:	sub	sp, sp, #8
   13578:	cmp	ip, #0
   1357c:	bne	135f4 <__assert_fail@plt+0x1dc8>
   13580:	tst	r1, #1
   13584:	beq	135f4 <__assert_fail@plt+0x1dc8>
   13588:	mov	r1, r2
   1358c:	mov	r0, #3
   13590:	mov	r2, r5
   13594:	bl	117c0 <__xstat64@plt>
   13598:	cmp	r0, #0
   1359c:	beq	13620 <__assert_fail@plt+0x1df4>
   135a0:	bl	11688 <__errno_location@plt>
   135a4:	ldr	r3, [r0]
   135a8:	mov	r6, r0
   135ac:	cmp	r3, #2
   135b0:	bne	135d8 <__assert_fail@plt+0x1dac>
   135b4:	mov	r2, r5
   135b8:	mov	r0, #3
   135bc:	ldr	r1, [r4, #24]
   135c0:	bl	117f0 <__lxstat64@plt>
   135c4:	subs	r3, r0, #0
   135c8:	moveq	r0, #13
   135cc:	streq	r3, [r6]
   135d0:	beq	13644 <__assert_fail@plt+0x1e18>
   135d4:	ldr	r3, [r6]
   135d8:	mov	r0, r5
   135dc:	mov	r2, #104	; 0x68
   135e0:	str	r3, [r4, #32]
   135e4:	mov	r1, #0
   135e8:	bl	116ac <memset@plt>
   135ec:	mov	r0, #10
   135f0:	b	13644 <__assert_fail@plt+0x1e18>
   135f4:	ubfx	ip, r1, #1, #1
   135f8:	orrs	r3, r3, ip
   135fc:	bne	13588 <__assert_fail@plt+0x1d5c>
   13600:	mov	ip, #256	; 0x100
   13604:	mov	r1, r0
   13608:	mov	r3, r5
   1360c:	mov	r0, #3
   13610:	str	ip, [sp]
   13614:	bl	11538 <__fxstatat64@plt>
   13618:	cmp	r0, #0
   1361c:	bne	136a0 <__assert_fail@plt+0x1e74>
   13620:	ldr	r3, [r4, #80]	; 0x50
   13624:	and	r3, r3, #61440	; 0xf000
   13628:	cmp	r3, #16384	; 0x4000
   1362c:	beq	13658 <__assert_fail@plt+0x1e2c>
   13630:	cmp	r3, #40960	; 0xa000
   13634:	beq	136ac <__assert_fail@plt+0x1e80>
   13638:	cmp	r3, #32768	; 0x8000
   1363c:	movne	r0, #3
   13640:	moveq	r0, #8
   13644:	add	sp, sp, #8
   13648:	ldrd	r4, [sp]
   1364c:	ldr	r6, [sp, #8]
   13650:	add	sp, sp, #12
   13654:	pop	{pc}		; (ldr pc, [sp], #4)
   13658:	ldrb	r3, [r4, #168]	; 0xa8
   1365c:	cmp	r3, #46	; 0x2e
   13660:	bne	13684 <__assert_fail@plt+0x1e58>
   13664:	ldrb	r3, [r4, #169]	; 0xa9
   13668:	cmp	r3, #0
   1366c:	beq	1368c <__assert_fail@plt+0x1e60>
   13670:	ldr	r3, [r4, #168]	; 0xa8
   13674:	bic	r3, r3, #-16777216	; 0xff000000
   13678:	bic	r3, r3, #255	; 0xff
   1367c:	cmp	r3, #11776	; 0x2e00
   13680:	beq	1368c <__assert_fail@plt+0x1e60>
   13684:	mov	r0, #1
   13688:	b	13644 <__assert_fail@plt+0x1e18>
   1368c:	ldr	r3, [r4, #48]	; 0x30
   13690:	cmp	r3, #0
   13694:	moveq	r0, #1
   13698:	movne	r0, #5
   1369c:	b	13644 <__assert_fail@plt+0x1e18>
   136a0:	bl	11688 <__errno_location@plt>
   136a4:	ldr	r3, [r0]
   136a8:	b	135d8 <__assert_fail@plt+0x1dac>
   136ac:	mov	r0, #12
   136b0:	b	13644 <__assert_fail@plt+0x1e18>
   136b4:	movw	r3, #258	; 0x102
   136b8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   136bc:	tst	r0, r3
   136c0:	strd	r6, [sp, #8]
   136c4:	strd	r8, [sp, #16]
   136c8:	mov	r8, r2
   136cc:	str	sl, [sp, #24]
   136d0:	mov	sl, r1
   136d4:	str	lr, [sp, #28]
   136d8:	beq	1375c <__assert_fail@plt+0x1f30>
   136dc:	mov	r0, #24
   136e0:	bl	1c620 <lchmod@@Base+0x5460>
   136e4:	subs	r9, r0, #0
   136e8:	beq	13780 <__assert_fail@plt+0x1f54>
   136ec:	ldrd	r6, [r8, #64]	; 0x40
   136f0:	mov	r1, r9
   136f4:	ldrd	r4, [r8, #160]	; 0xa0
   136f8:	ldr	r0, [sl]
   136fc:	strd	r6, [r9]
   13700:	str	r8, [r9, #16]
   13704:	strd	r4, [r9, #8]
   13708:	bl	16ab4 <__assert_fail@plt+0x5288>
   1370c:	cmp	r9, r0
   13710:	mov	r4, r0
   13714:	beq	13740 <__assert_fail@plt+0x1f14>
   13718:	mov	r0, r9
   1371c:	bl	13204 <__assert_fail@plt+0x19d8>
   13720:	cmp	r4, #0
   13724:	beq	13780 <__assert_fail@plt+0x1f54>
   13728:	ldr	r3, [r4, #16]
   1372c:	mov	r2, #2
   13730:	mov	r0, #1
   13734:	str	r3, [r8]
   13738:	strh	r2, [r8, #56]	; 0x38
   1373c:	b	13744 <__assert_fail@plt+0x1f18>
   13740:	mov	r0, #1
   13744:	ldrd	r4, [sp]
   13748:	ldrd	r6, [sp, #8]
   1374c:	ldrd	r8, [sp, #16]
   13750:	ldr	sl, [sp, #24]
   13754:	add	sp, sp, #28
   13758:	pop	{pc}		; (ldr pc, [sp], #4)
   1375c:	add	r1, r2, #64	; 0x40
   13760:	ldr	r0, [sl]
   13764:	bl	1c838 <lchmod@@Base+0x5678>
   13768:	cmp	r0, #0
   1376c:	beq	13740 <__assert_fail@plt+0x1f14>
   13770:	mov	r3, #2
   13774:	str	r8, [r8]
   13778:	strh	r3, [r8, #56]	; 0x38
   1377c:	b	13744 <__assert_fail@plt+0x1f18>
   13780:	mov	r0, #0
   13784:	b	13744 <__assert_fail@plt+0x1f18>
   13788:	movw	r3, #258	; 0x102
   1378c:	mov	ip, r1
   13790:	strd	r4, [sp, #-12]!
   13794:	tst	r0, r3
   13798:	str	lr, [sp, #8]
   1379c:	sub	sp, sp, #28
   137a0:	bne	137f0 <__assert_fail@plt+0x1fc4>
   137a4:	ldr	r3, [r2, #4]
   137a8:	cmp	r3, #0
   137ac:	beq	137e0 <__assert_fail@plt+0x1fb4>
   137b0:	ldr	r1, [r3, #48]	; 0x30
   137b4:	cmp	r1, #0
   137b8:	blt	137e0 <__assert_fail@plt+0x1fb4>
   137bc:	ldr	ip, [ip]
   137c0:	ldrd	r0, [ip, #16]
   137c4:	orrs	r1, r0, r1
   137c8:	beq	13850 <__assert_fail@plt+0x2024>
   137cc:	ldrd	r4, [ip]
   137d0:	ldrd	r0, [r2, #160]	; 0xa0
   137d4:	cmp	r5, r1
   137d8:	cmpeq	r4, r0
   137dc:	beq	13828 <__assert_fail@plt+0x1ffc>
   137e0:	add	sp, sp, #28
   137e4:	ldrd	r4, [sp]
   137e8:	add	sp, sp, #8
   137ec:	pop	{pc}		; (ldr pc, [sp], #4)
   137f0:	ldrd	r4, [r2, #64]	; 0x40
   137f4:	mov	r1, sp
   137f8:	ldrd	r2, [r2, #160]	; 0xa0
   137fc:	ldr	r0, [ip]
   13800:	strd	r4, [sp]
   13804:	strd	r2, [sp, #8]
   13808:	bl	16cd8 <__assert_fail@plt+0x54ac>
   1380c:	cmp	r0, #0
   13810:	beq	13850 <__assert_fail@plt+0x2024>
   13814:	bl	13204 <__assert_fail@plt+0x19d8>
   13818:	add	sp, sp, #28
   1381c:	ldrd	r4, [sp]
   13820:	add	sp, sp, #8
   13824:	pop	{pc}		; (ldr pc, [sp], #4)
   13828:	ldrd	r0, [ip, #8]
   1382c:	ldrd	r4, [r2, #64]	; 0x40
   13830:	cmp	r1, r5
   13834:	cmpeq	r0, r4
   13838:	bne	137e0 <__assert_fail@plt+0x1fb4>
   1383c:	ldrd	r0, [r3, #64]	; 0x40
   13840:	ldrd	r2, [r3, #160]	; 0xa0
   13844:	strd	r2, [ip]
   13848:	strd	r0, [ip, #8]
   1384c:	b	137e0 <__assert_fail@plt+0x1fb4>
   13850:	bl	117d8 <abort@plt>
   13854:	ldr	r3, [r0, #48]	; 0x30
   13858:	strd	r4, [sp, #-16]!
   1385c:	add	r5, r0, #60	; 0x3c
   13860:	str	r6, [sp, #8]
   13864:	str	lr, [sp, #12]
   13868:	ands	r6, r3, #4
   1386c:	movne	r6, #0
   13870:	bne	138ac <__assert_fail@plt+0x2080>
   13874:	tst	r3, #512	; 0x200
   13878:	mov	r4, r0
   1387c:	beq	138dc <__assert_fail@plt+0x20b0>
   13880:	mov	r0, r5
   13884:	ldr	r1, [r4, #32]
   13888:	bl	17128 <__assert_fail@plt+0x58fc>
   1388c:	cmp	r0, #0
   13890:	bge	138f0 <__assert_fail@plt+0x20c4>
   13894:	mvn	r3, #99	; 0x63
   13898:	str	r3, [r4, #32]
   1389c:	b	138ac <__assert_fail@plt+0x2080>
   138a0:	bl	17170 <__assert_fail@plt+0x5944>
   138a4:	cmp	r0, #0
   138a8:	bge	138d4 <__assert_fail@plt+0x20a8>
   138ac:	mov	r0, r5
   138b0:	bl	17120 <__assert_fail@plt+0x58f4>
   138b4:	cmp	r0, #0
   138b8:	mov	r0, r5
   138bc:	beq	138a0 <__assert_fail@plt+0x2074>
   138c0:	mov	r0, r6
   138c4:	ldrd	r4, [sp]
   138c8:	ldr	r6, [sp, #8]
   138cc:	add	sp, sp, #12
   138d0:	pop	{pc}		; (ldr pc, [sp], #4)
   138d4:	bl	117e4 <close@plt>
   138d8:	b	138ac <__assert_fail@plt+0x2080>
   138dc:	ldr	r0, [r0, #28]
   138e0:	bl	11760 <fchdir@plt>
   138e4:	adds	r6, r0, #0
   138e8:	movne	r6, #1
   138ec:	b	138ac <__assert_fail@plt+0x2080>
   138f0:	bl	117e4 <close@plt>
   138f4:	mvn	r3, #99	; 0x63
   138f8:	str	r3, [r4, #32]
   138fc:	b	138ac <__assert_fail@plt+0x2080>
   13900:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13904:	mov	r5, r0
   13908:	mov	r4, r2
   1390c:	strd	r6, [sp, #8]
   13910:	strd	r8, [sp, #16]
   13914:	mov	r8, r1
   13918:	ldr	r9, [r0, #48]	; 0x30
   1391c:	str	sl, [sp, #24]
   13920:	subs	sl, r3, #0
   13924:	str	lr, [sp, #28]
   13928:	sub	sp, sp, #104	; 0x68
   1392c:	and	r6, r9, #4
   13930:	beq	13a2c <__assert_fail@plt+0x2200>
   13934:	movw	r1, #55156	; 0xd774
   13938:	movt	r1, #1
   1393c:	mov	r0, sl
   13940:	bl	11454 <strcmp@plt>
   13944:	cmp	r0, #0
   13948:	bne	13a2c <__assert_fail@plt+0x2200>
   1394c:	cmp	r6, #0
   13950:	bne	13a6c <__assert_fail@plt+0x2240>
   13954:	cmp	r4, #0
   13958:	bge	13ba8 <__assert_fail@plt+0x237c>
   1395c:	tst	r9, #512	; 0x200
   13960:	beq	13ab0 <__assert_fail@plt+0x2284>
   13964:	add	r6, r5, #60	; 0x3c
   13968:	mov	r0, r6
   1396c:	bl	17120 <__assert_fail@plt+0x58f4>
   13970:	cmp	r0, #0
   13974:	beq	13b30 <__assert_fail@plt+0x2304>
   13978:	lsl	r2, r9, #11
   1397c:	mov	r6, #1
   13980:	and	r2, r2, #32768	; 0x8000
   13984:	orr	r2, r2, #540672	; 0x84000
   13988:	orr	r2, r2, #2304	; 0x900
   1398c:	mov	r1, sl
   13990:	ldr	r0, [r5, #32]
   13994:	bl	17870 <lchmod@@Base+0x6b0>
   13998:	mov	r7, r0
   1399c:	cmp	r7, #0
   139a0:	blt	13ba0 <__assert_fail@plt+0x2374>
   139a4:	ldr	r9, [r5, #48]	; 0x30
   139a8:	tst	r9, #2
   139ac:	beq	13a48 <__assert_fail@plt+0x221c>
   139b0:	mov	r2, sp
   139b4:	mov	r1, r7
   139b8:	mov	r0, #3
   139bc:	bl	11550 <__fxstat64@plt>
   139c0:	cmp	r0, #0
   139c4:	bne	13aa8 <__assert_fail@plt+0x227c>
   139c8:	ldrd	r2, [sp]
   139cc:	ldrd	r0, [r8, #64]	; 0x40
   139d0:	cmp	r1, r3
   139d4:	cmpeq	r0, r2
   139d8:	bne	13a9c <__assert_fail@plt+0x2270>
   139dc:	ldrd	r2, [sp, #96]	; 0x60
   139e0:	ldrd	r0, [r8, #160]	; 0xa0
   139e4:	cmp	r1, r3
   139e8:	cmpeq	r0, r2
   139ec:	bne	13a9c <__assert_fail@plt+0x2270>
   139f0:	ldr	r9, [r5, #48]	; 0x30
   139f4:	tst	r9, #512	; 0x200
   139f8:	bne	13ad8 <__assert_fail@plt+0x22ac>
   139fc:	mov	r0, r7
   13a00:	bl	11760 <fchdir@plt>
   13a04:	mov	r9, r0
   13a08:	cmp	r4, #0
   13a0c:	bge	13a7c <__assert_fail@plt+0x2250>
   13a10:	bl	11688 <__errno_location@plt>
   13a14:	mov	r4, r0
   13a18:	mov	r0, r7
   13a1c:	ldr	r5, [r4]
   13a20:	bl	117e4 <close@plt>
   13a24:	str	r5, [r4]
   13a28:	b	13a7c <__assert_fail@plt+0x2250>
   13a2c:	cmp	r6, #0
   13a30:	bne	13a6c <__assert_fail@plt+0x2240>
   13a34:	cmp	r4, #0
   13a38:	movge	r7, r4
   13a3c:	blt	13b60 <__assert_fail@plt+0x2334>
   13a40:	tst	r9, #2
   13a44:	bne	139b0 <__assert_fail@plt+0x2184>
   13a48:	cmp	sl, #0
   13a4c:	beq	139f4 <__assert_fail@plt+0x21c8>
   13a50:	mov	r0, sl
   13a54:	movw	r1, #55156	; 0xd774
   13a58:	movt	r1, #1
   13a5c:	bl	11454 <strcmp@plt>
   13a60:	cmp	r0, #0
   13a64:	bne	139f4 <__assert_fail@plt+0x21c8>
   13a68:	b	139b0 <__assert_fail@plt+0x2184>
   13a6c:	mvn	r3, r4
   13a70:	lsr	r3, r3, #31
   13a74:	ands	r9, r3, r9, lsr #9
   13a78:	bne	13b20 <__assert_fail@plt+0x22f4>
   13a7c:	mov	r0, r9
   13a80:	add	sp, sp, #104	; 0x68
   13a84:	ldrd	r4, [sp]
   13a88:	ldrd	r6, [sp, #8]
   13a8c:	ldrd	r8, [sp, #16]
   13a90:	ldr	sl, [sp, #24]
   13a94:	add	sp, sp, #28
   13a98:	pop	{pc}		; (ldr pc, [sp], #4)
   13a9c:	bl	11688 <__errno_location@plt>
   13aa0:	mov	r3, #2
   13aa4:	str	r3, [r0]
   13aa8:	mvn	r9, #0
   13aac:	b	13a08 <__assert_fail@plt+0x21dc>
   13ab0:	lsl	r2, r9, #11
   13ab4:	mov	r6, #1
   13ab8:	and	r2, r2, #32768	; 0x8000
   13abc:	orr	r2, r2, #540672	; 0x84000
   13ac0:	orr	r2, r2, #2304	; 0x900
   13ac4:	mov	r1, r2
   13ac8:	mov	r0, sl
   13acc:	bl	1cbcc <lchmod@@Base+0x5a0c>
   13ad0:	mov	r7, r0
   13ad4:	b	1399c <__assert_fail@plt+0x2170>
   13ad8:	ldr	r1, [r5, #32]
   13adc:	sub	r3, r1, r7
   13ae0:	cmn	r1, #100	; 0x64
   13ae4:	clz	r3, r3
   13ae8:	lsr	r3, r3, #5
   13aec:	moveq	r3, #0
   13af0:	cmp	r3, #0
   13af4:	bne	13bbc <__assert_fail@plt+0x2390>
   13af8:	cmp	r6, #0
   13afc:	beq	13b80 <__assert_fail@plt+0x2354>
   13b00:	mvn	r3, r1
   13b04:	eor	r9, r9, #4
   13b08:	lsr	r3, r3, #31
   13b0c:	ands	r3, r3, r9, lsr #2
   13b10:	bne	13b98 <__assert_fail@plt+0x236c>
   13b14:	mov	r9, #0
   13b18:	str	r7, [r5, #32]
   13b1c:	b	13a7c <__assert_fail@plt+0x2250>
   13b20:	mov	r0, r4
   13b24:	mov	r9, #0
   13b28:	bl	117e4 <close@plt>
   13b2c:	b	13a7c <__assert_fail@plt+0x2250>
   13b30:	mov	r0, r6
   13b34:	bl	17170 <__assert_fail@plt+0x5944>
   13b38:	ldr	r9, [r5, #48]	; 0x30
   13b3c:	subs	r7, r0, #0
   13b40:	movlt	r6, #1
   13b44:	andlt	r3, r9, #512	; 0x200
   13b48:	blt	13b64 <__assert_fail@plt+0x2338>
   13b4c:	tst	r9, #2
   13b50:	mov	r4, r7
   13b54:	mov	r6, #1
   13b58:	beq	139f4 <__assert_fail@plt+0x21c8>
   13b5c:	b	139b0 <__assert_fail@plt+0x2184>
   13b60:	and	r3, r9, #512	; 0x200
   13b64:	lsl	r2, r9, #11
   13b68:	cmp	r3, #0
   13b6c:	and	r2, r2, #32768	; 0x8000
   13b70:	orr	r2, r2, #540672	; 0x84000
   13b74:	orr	r2, r2, #2304	; 0x900
   13b78:	bne	1398c <__assert_fail@plt+0x2160>
   13b7c:	b	13ac4 <__assert_fail@plt+0x2298>
   13b80:	add	r0, r5, #60	; 0x3c
   13b84:	bl	17128 <__assert_fail@plt+0x58fc>
   13b88:	cmp	r0, #0
   13b8c:	blt	13b14 <__assert_fail@plt+0x22e8>
   13b90:	bl	117e4 <close@plt>
   13b94:	b	13b14 <__assert_fail@plt+0x22e8>
   13b98:	mov	r0, r1
   13b9c:	b	13b90 <__assert_fail@plt+0x2364>
   13ba0:	mvn	r9, #0
   13ba4:	b	13a7c <__assert_fail@plt+0x2250>
   13ba8:	tst	r9, #2
   13bac:	mov	r7, r4
   13bb0:	mov	r6, #1
   13bb4:	beq	13a50 <__assert_fail@plt+0x2224>
   13bb8:	b	139b0 <__assert_fail@plt+0x2184>
   13bbc:	bl	117d8 <abort@plt>
   13bc0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13bc4:	strd	r6, [sp, #8]
   13bc8:	mov	r6, r0
   13bcc:	strd	sl, [sp, #24]
   13bd0:	ldr	fp, [r0]
   13bd4:	strd	r8, [sp, #16]
   13bd8:	str	lr, [sp, #32]
   13bdc:	sub	sp, sp, #76	; 0x4c
   13be0:	str	r1, [sp, #40]	; 0x28
   13be4:	ldr	r0, [fp, #12]
   13be8:	cmp	r0, #0
   13bec:	str	r0, [sp, #48]	; 0x30
   13bf0:	beq	14060 <__assert_fail@plt+0x2834>
   13bf4:	bl	11754 <dirfd@plt>
   13bf8:	cmp	r0, #0
   13bfc:	str	r0, [sp, #68]	; 0x44
   13c00:	blt	145d4 <__assert_fail@plt+0x2da8>
   13c04:	ldr	r3, [r6, #44]	; 0x2c
   13c08:	cmp	r3, #0
   13c0c:	beq	14480 <__assert_fail@plt+0x2c54>
   13c10:	ldr	r3, [r6, #48]	; 0x30
   13c14:	mvn	r2, #0
   13c18:	str	r2, [sp, #28]
   13c1c:	mov	r2, #1
   13c20:	str	r2, [sp, #60]	; 0x3c
   13c24:	ldr	r1, [fp, #28]
   13c28:	ldr	r0, [fp, #40]	; 0x28
   13c2c:	sub	r2, r0, #1
   13c30:	str	r0, [sp, #4]
   13c34:	ldrb	r1, [r1, r2]
   13c38:	cmp	r1, #47	; 0x2f
   13c3c:	beq	13c4c <__assert_fail@plt+0x2420>
   13c40:	add	r1, r0, #1
   13c44:	mov	r2, r0
   13c48:	str	r1, [sp, #4]
   13c4c:	ands	r3, r3, #4
   13c50:	streq	r3, [sp, #32]
   13c54:	beq	13c70 <__assert_fail@plt+0x2444>
   13c58:	ldr	r3, [r6, #24]
   13c5c:	mov	r0, #47	; 0x2f
   13c60:	add	r1, r3, r2
   13c64:	strb	r0, [r3, r2]
   13c68:	add	r3, r1, #1
   13c6c:	str	r3, [sp, #32]
   13c70:	movw	r3, #6548	; 0x1994
   13c74:	movt	r3, #258	; 0x102
   13c78:	ldr	r2, [r6, #36]	; 0x24
   13c7c:	movw	r0, #19778	; 0x4d42
   13c80:	movt	r0, #65363	; 0xff53
   13c84:	str	fp, [sp, #16]
   13c88:	str	r3, [sp, #52]	; 0x34
   13c8c:	mov	r1, #0
   13c90:	ldr	r3, [fp, #48]	; 0x30
   13c94:	mov	r9, r1
   13c98:	mov	fp, r1
   13c9c:	str	r0, [sp, #56]	; 0x38
   13ca0:	ldr	r0, [sp, #4]
   13ca4:	str	r1, [sp, #12]
   13ca8:	str	r1, [sp, #36]	; 0x24
   13cac:	add	r3, r3, #1
   13cb0:	sub	r2, r2, r0
   13cb4:	str	r1, [sp, #44]	; 0x2c
   13cb8:	str	r2, [sp, #20]
   13cbc:	str	r3, [sp, #24]
   13cc0:	b	13cd8 <__assert_fail@plt+0x24ac>
   13cc4:	ldr	r3, [sp, #28]
   13cc8:	add	r9, r9, #1
   13ccc:	cmp	r9, r3
   13cd0:	bcs	141bc <__assert_fail@plt+0x2990>
   13cd4:	mov	fp, r4
   13cd8:	ldr	r3, [sp, #16]
   13cdc:	ldr	r4, [r3, #12]
   13ce0:	cmp	r4, #0
   13ce4:	beq	142fc <__assert_fail@plt+0x2ad0>
   13ce8:	bl	11688 <__errno_location@plt>
   13cec:	mov	sl, r0
   13cf0:	mov	r3, #0
   13cf4:	mov	r0, r4
   13cf8:	str	r3, [sl]
   13cfc:	bl	11730 <readdir64@plt>
   13d00:	subs	r7, r0, #0
   13d04:	beq	143d0 <__assert_fail@plt+0x2ba4>
   13d08:	ldr	r3, [r6, #48]	; 0x30
   13d0c:	tst	r3, #32
   13d10:	bne	13d20 <__assert_fail@plt+0x24f4>
   13d14:	ldrb	r3, [r7, #19]
   13d18:	cmp	r3, #46	; 0x2e
   13d1c:	beq	13f20 <__assert_fail@plt+0x26f4>
   13d20:	add	r1, r7, #19
   13d24:	mov	r0, r1
   13d28:	str	r1, [sp, #8]
   13d2c:	bl	11658 <strlen@plt>
   13d30:	mov	r5, r0
   13d34:	add	r0, r0, #176	; 0xb0
   13d38:	bic	r0, r0, #7
   13d3c:	bl	1c620 <lchmod@@Base+0x5460>
   13d40:	subs	r4, r0, #0
   13d44:	beq	13f54 <__assert_fail@plt+0x2728>
   13d48:	add	r8, r4, #168	; 0xa8
   13d4c:	mov	r2, r5
   13d50:	ldr	r1, [sp, #8]
   13d54:	mov	r0, r8
   13d58:	bl	114b4 <memcpy@plt>
   13d5c:	ldr	r3, [sp, #20]
   13d60:	mov	r1, #0
   13d64:	add	r0, r4, r5
   13d68:	mov	ip, #196608	; 0x30000
   13d6c:	ldr	r2, [r6, #24]
   13d70:	strb	r1, [r0, #168]	; 0xa8
   13d74:	str	r1, [r4, #12]
   13d78:	cmp	r3, r5
   13d7c:	str	r1, [r4, #16]
   13d80:	str	r1, [r4, #20]
   13d84:	str	r2, [r4, #28]
   13d88:	str	r1, [r4, #32]
   13d8c:	str	r6, [r4, #44]	; 0x2c
   13d90:	str	r5, [r4, #52]	; 0x34
   13d94:	str	ip, [r4, #58]	; 0x3a
   13d98:	bls	13e5c <__assert_fail@plt+0x2630>
   13d9c:	ldr	r3, [sp, #4]
   13da0:	adds	r5, r5, r3
   13da4:	bcs	146bc <__assert_fail@plt+0x2e90>
   13da8:	ldr	r3, [sp, #24]
   13dac:	str	r5, [r4, #40]	; 0x28
   13db0:	ldr	ip, [r6]
   13db4:	ldr	r1, [r6, #48]	; 0x30
   13db8:	str	r3, [r4, #48]	; 0x30
   13dbc:	ldrd	r2, [r7]
   13dc0:	str	ip, [r4, #4]
   13dc4:	tst	r1, #4
   13dc8:	streq	r8, [r4, #24]
   13dcc:	strd	r2, [r4, #160]	; 0xa0
   13dd0:	bne	13efc <__assert_fail@plt+0x26d0>
   13dd4:	ldr	r3, [r6, #44]	; 0x2c
   13dd8:	cmp	r3, #0
   13ddc:	beq	13de8 <__assert_fail@plt+0x25bc>
   13de0:	ands	r3, r1, #1024	; 0x400
   13de4:	beq	13f40 <__assert_fail@plt+0x2714>
   13de8:	ldrb	r3, [r7, #18]
   13dec:	tst	r1, #8
   13df0:	sub	r0, r3, #1
   13df4:	beq	13e00 <__assert_fail@plt+0x25d4>
   13df8:	tst	r3, #251	; 0xfb
   13dfc:	bne	13ffc <__assert_fail@plt+0x27d0>
   13e00:	mov	r3, #11
   13e04:	cmp	r0, r3
   13e08:	strh	r3, [r4, #56]	; 0x38
   13e0c:	bls	13ee0 <__assert_fail@plt+0x26b4>
   13e10:	mov	r1, #0
   13e14:	mov	r2, #2
   13e18:	mov	r3, #0
   13e1c:	str	r1, [r4, #80]	; 0x50
   13e20:	strd	r2, [r4, #112]	; 0x70
   13e24:	ldr	r2, [sp, #12]
   13e28:	mov	r3, #0
   13e2c:	str	r3, [r4, #8]
   13e30:	cmp	r2, r3
   13e34:	movw	r3, #10000	; 0x2710
   13e38:	strne	r4, [fp, #8]
   13e3c:	streq	r4, [sp, #12]
   13e40:	cmp	r9, r3
   13e44:	bne	13cc4 <__assert_fail@plt+0x2498>
   13e48:	ldr	r5, [r6, #44]	; 0x2c
   13e4c:	cmp	r5, #0
   13e50:	beq	14170 <__assert_fail@plt+0x2944>
   13e54:	movw	r9, #10001	; 0x2711
   13e58:	b	13cd4 <__assert_fail@plt+0x24a8>
   13e5c:	ldr	ip, [r6, #36]	; 0x24
   13e60:	ldr	r3, [sp, #4]
   13e64:	add	r0, ip, #256	; 0x100
   13e68:	add	r0, r0, #1
   13e6c:	add	r0, r0, r3
   13e70:	add	r0, r0, r5
   13e74:	cmp	ip, r0
   13e78:	bhi	14038 <__assert_fail@plt+0x280c>
   13e7c:	mov	r1, r0
   13e80:	str	r0, [r6, #36]	; 0x24
   13e84:	mov	r0, r2
   13e88:	str	r2, [sp, #8]
   13e8c:	bl	1c65c <lchmod@@Base+0x549c>
   13e90:	cmp	r0, #0
   13e94:	ldr	r2, [sp, #8]
   13e98:	beq	1442c <__assert_fail@plt+0x2c00>
   13e9c:	cmp	r2, r0
   13ea0:	str	r0, [r6, #24]
   13ea4:	beq	13ec4 <__assert_fail@plt+0x2698>
   13ea8:	ldr	r2, [r6, #48]	; 0x30
   13eac:	tst	r2, #4
   13eb0:	ldrne	r3, [sp, #4]
   13eb4:	addne	r3, r0, r3
   13eb8:	strne	r3, [sp, #32]
   13ebc:	mov	r3, #1
   13ec0:	str	r3, [sp, #36]	; 0x24
   13ec4:	ldr	r3, [sp, #4]
   13ec8:	ldr	r2, [r6, #36]	; 0x24
   13ecc:	sub	r3, r2, r3
   13ed0:	str	r3, [sp, #20]
   13ed4:	b	13d9c <__assert_fail@plt+0x2570>
   13ed8:	mov	r3, #11
   13edc:	strh	r3, [r4, #56]	; 0x38
   13ee0:	movw	r3, #55108	; 0xd744
   13ee4:	movt	r3, #1
   13ee8:	ldr	r1, [r3, r0, lsl #2]
   13eec:	mov	r2, #2
   13ef0:	mov	r3, #0
   13ef4:	str	r1, [r4, #80]	; 0x50
   13ef8:	b	13e20 <__assert_fail@plt+0x25f4>
   13efc:	ldr	ip, [r4, #28]
   13f00:	mov	r1, r8
   13f04:	ldr	r2, [r4, #52]	; 0x34
   13f08:	ldr	r0, [sp, #32]
   13f0c:	str	ip, [r4, #24]
   13f10:	add	r2, r2, #1
   13f14:	bl	11484 <memmove@plt>
   13f18:	ldr	r1, [r6, #48]	; 0x30
   13f1c:	b	13dd4 <__assert_fail@plt+0x25a8>
   13f20:	ldrb	r3, [r7, #20]
   13f24:	cmp	r3, #0
   13f28:	beq	13f38 <__assert_fail@plt+0x270c>
   13f2c:	ldrh	r3, [r7, #20]
   13f30:	cmp	r3, #46	; 0x2e
   13f34:	bne	13d20 <__assert_fail@plt+0x24f4>
   13f38:	mov	r4, fp
   13f3c:	b	13cd4 <__assert_fail@plt+0x24a8>
   13f40:	mov	r2, r4
   13f44:	ldr	r0, [r6, #32]
   13f48:	bl	13558 <__assert_fail@plt+0x1d2c>
   13f4c:	strh	r0, [r4, #56]	; 0x38
   13f50:	b	13e24 <__assert_fail@plt+0x25f8>
   13f54:	ldr	r5, [sl]
   13f58:	ldr	r8, [sp, #12]
   13f5c:	ldr	fp, [sp, #16]
   13f60:	mov	r0, r4
   13f64:	bl	13204 <__assert_fail@plt+0x19d8>
   13f68:	cmp	r8, #0
   13f6c:	bne	13fd8 <__assert_fail@plt+0x27ac>
   13f70:	ldr	r0, [fp, #12]
   13f74:	bl	11814 <closedir@plt>
   13f78:	ldr	r3, [r6, #48]	; 0x30
   13f7c:	mov	r2, #0
   13f80:	mov	r1, #7
   13f84:	mov	r8, r2
   13f88:	str	r2, [fp, #12]
   13f8c:	strh	r1, [fp, #56]	; 0x38
   13f90:	orr	r3, r3, #8192	; 0x2000
   13f94:	str	r3, [r6, #48]	; 0x30
   13f98:	str	r5, [sl]
   13f9c:	mov	r0, r8
   13fa0:	add	sp, sp, #76	; 0x4c
   13fa4:	ldrd	r4, [sp]
   13fa8:	ldrd	r6, [sp, #8]
   13fac:	ldrd	r8, [sp, #16]
   13fb0:	ldrd	sl, [sp, #24]
   13fb4:	add	sp, sp, #32
   13fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   13fbc:	mov	r0, r3
   13fc0:	bl	11814 <closedir@plt>
   13fc4:	mov	r0, r8
   13fc8:	bl	13204 <__assert_fail@plt+0x19d8>
   13fcc:	cmp	r4, #0
   13fd0:	beq	13f70 <__assert_fail@plt+0x2744>
   13fd4:	mov	r8, r4
   13fd8:	mov	r0, r8
   13fdc:	ldr	r4, [r8, #8]
   13fe0:	ldr	r3, [r8, #12]
   13fe4:	cmp	r3, #0
   13fe8:	bne	13fbc <__assert_fail@plt+0x2790>
   13fec:	bl	13204 <__assert_fail@plt+0x19d8>
   13ff0:	cmp	r4, #0
   13ff4:	bne	13fd4 <__assert_fail@plt+0x27a8>
   13ff8:	b	13f70 <__assert_fail@plt+0x2744>
   13ffc:	ubfx	r2, r1, #4, #1
   14000:	cmp	r3, #10
   14004:	moveq	r3, r2
   14008:	orrne	r3, r2, #1
   1400c:	cmp	r3, #0
   14010:	beq	13ed8 <__assert_fail@plt+0x26ac>
   14014:	mov	r3, #11
   14018:	cmp	r0, r3
   1401c:	strh	r3, [r4, #56]	; 0x38
   14020:	bls	14278 <__assert_fail@plt+0x2a4c>
   14024:	mov	r1, #0
   14028:	mov	r2, #1
   1402c:	mov	r3, #0
   14030:	str	r1, [r4, #80]	; 0x50
   14034:	b	13e20 <__assert_fail@plt+0x25f4>
   14038:	mov	r0, r2
   1403c:	ldr	r8, [sp, #12]
   14040:	ldr	fp, [sp, #16]
   14044:	bl	13204 <__assert_fail@plt+0x19d8>
   14048:	mov	r3, #36	; 0x24
   1404c:	mov	r1, #0
   14050:	mov	r5, r3
   14054:	str	r1, [r6, #24]
   14058:	str	r3, [sl]
   1405c:	b	13f60 <__assert_fail@plt+0x2734>
   14060:	ldr	r3, [r6, #48]	; 0x30
   14064:	ldr	r1, [fp, #24]
   14068:	and	r2, r3, #516	; 0x204
   1406c:	cmp	r2, #512	; 0x200
   14070:	ldreq	r0, [r6, #32]
   14074:	mvnne	r0, #99	; 0x63
   14078:	ands	r2, r3, #16
   1407c:	beq	1408c <__assert_fail@plt+0x2860>
   14080:	tst	r3, #1
   14084:	moveq	r2, #32768	; 0x8000
   14088:	bne	14294 <__assert_fail@plt+0x2a68>
   1408c:	add	r3, sp, #68	; 0x44
   14090:	bl	178b0 <lchmod@@Base+0x6f0>
   14094:	cmp	r0, #0
   14098:	mov	r8, r0
   1409c:	str	r0, [fp, #12]
   140a0:	beq	14628 <__assert_fail@plt+0x2dfc>
   140a4:	ldrh	r3, [fp, #56]	; 0x38
   140a8:	ldr	r0, [r6, #48]	; 0x30
   140ac:	cmp	r3, #11
   140b0:	beq	14568 <__assert_fail@plt+0x2d3c>
   140b4:	tst	r0, #256	; 0x100
   140b8:	bne	144ac <__assert_fail@plt+0x2c80>
   140bc:	ldr	r2, [r6, #44]	; 0x2c
   140c0:	movw	r3, #34464	; 0x86a0
   140c4:	movt	r3, #1
   140c8:	cmp	r2, #0
   140cc:	mvnne	r3, #0
   140d0:	str	r3, [sp, #28]
   140d4:	ldr	r3, [sp, #40]	; 0x28
   140d8:	cmp	r3, #2
   140dc:	beq	1449c <__assert_fail@plt+0x2c70>
   140e0:	ldr	r3, [r6, #48]	; 0x30
   140e4:	ldr	r0, [sp, #68]	; 0x44
   140e8:	and	r3, r3, #56	; 0x38
   140ec:	cmp	r3, #24
   140f0:	beq	142a4 <__assert_fail@plt+0x2a78>
   140f4:	ldr	r3, [sp, #40]	; 0x28
   140f8:	sub	r4, r3, #3
   140fc:	clz	r4, r4
   14100:	lsr	r4, r4, #5
   14104:	ldr	r3, [r6, #48]	; 0x30
   14108:	tst	r3, #512	; 0x200
   1410c:	bne	14614 <__assert_fail@plt+0x2de8>
   14110:	cmp	r0, #0
   14114:	bge	145a8 <__assert_fail@plt+0x2d7c>
   14118:	cmp	r4, #0
   1411c:	beq	1412c <__assert_fail@plt+0x2900>
   14120:	bl	11688 <__errno_location@plt>
   14124:	ldr	r3, [r0]
   14128:	str	r3, [fp, #32]
   1412c:	ldrh	r3, [fp, #58]	; 0x3a
   14130:	ldr	r0, [fp, #12]
   14134:	orr	r3, r3, #1
   14138:	strh	r3, [fp, #58]	; 0x3a
   1413c:	bl	11814 <closedir@plt>
   14140:	ldr	r3, [r6, #48]	; 0x30
   14144:	mov	r2, #0
   14148:	str	r2, [fp, #12]
   1414c:	tst	r3, #512	; 0x200
   14150:	beq	14160 <__assert_fail@plt+0x2934>
   14154:	ldr	r0, [sp, #68]	; 0x44
   14158:	cmp	r0, r2
   1415c:	bge	14608 <__assert_fail@plt+0x2ddc>
   14160:	mov	r2, #0
   14164:	str	r2, [fp, #12]
   14168:	str	r2, [sp, #60]	; 0x3c
   1416c:	b	13c24 <__assert_fail@plt+0x23f8>
   14170:	ldr	r0, [sp, #16]
   14174:	ldr	r1, [sp, #68]	; 0x44
   14178:	bl	13438 <__assert_fail@plt+0x1c0c>
   1417c:	movw	r3, #26985	; 0x6969
   14180:	cmp	r0, r3
   14184:	beq	141a8 <__assert_fail@plt+0x297c>
   14188:	ldr	r3, [sp, #52]	; 0x34
   1418c:	cmp	r0, r3
   14190:	beq	141a8 <__assert_fail@plt+0x297c>
   14194:	ldr	r3, [sp, #56]	; 0x38
   14198:	cmp	r0, r3
   1419c:	movne	r3, #1
   141a0:	strne	r3, [sp, #44]	; 0x2c
   141a4:	bne	13e54 <__assert_fail@plt+0x2628>
   141a8:	ldr	r3, [sp, #28]
   141ac:	add	r9, r9, #1
   141b0:	str	r5, [sp, #44]	; 0x2c
   141b4:	cmp	r9, r3
   141b8:	bcc	13cd4 <__assert_fail@plt+0x24a8>
   141bc:	ldr	r8, [sp, #12]
   141c0:	ldr	r3, [sp, #36]	; 0x24
   141c4:	ldr	fp, [sp, #16]
   141c8:	cmp	r3, #0
   141cc:	beq	14310 <__assert_fail@plt+0x2ae4>
   141d0:	ldr	r3, [r6, #4]
   141d4:	ldr	r1, [r6, #24]
   141d8:	cmp	r3, #0
   141dc:	beq	14210 <__assert_fail@plt+0x29e4>
   141e0:	ldr	r2, [r3, #24]
   141e4:	add	r0, r3, #168	; 0xa8
   141e8:	cmp	r2, r0
   141ec:	beq	14418 <__assert_fail@plt+0x2bec>
   141f0:	ldr	r0, [r3, #28]
   141f4:	str	r1, [r3, #28]
   141f8:	sub	r2, r2, r0
   141fc:	add	r2, r1, r2
   14200:	str	r2, [r3, #24]
   14204:	ldr	r3, [r3, #8]
   14208:	cmp	r3, #0
   1420c:	bne	141e0 <__assert_fail@plt+0x29b4>
   14210:	ldr	r3, [r8, #48]	; 0x30
   14214:	cmp	r3, #0
   14218:	movge	r3, r8
   1421c:	bge	14234 <__assert_fail@plt+0x2a08>
   14220:	b	14310 <__assert_fail@plt+0x2ae4>
   14224:	ldr	r3, [r2, #48]	; 0x30
   14228:	cmp	r3, #0
   1422c:	blt	14310 <__assert_fail@plt+0x2ae4>
   14230:	mov	r3, r2
   14234:	ldr	r2, [r3, #24]
   14238:	add	r0, r3, #168	; 0xa8
   1423c:	cmp	r2, r0
   14240:	beq	14254 <__assert_fail@plt+0x2a28>
   14244:	ldr	r0, [r3, #28]
   14248:	sub	r2, r2, r0
   1424c:	add	r2, r1, r2
   14250:	str	r2, [r3, #24]
   14254:	ldr	r2, [r3, #8]
   14258:	str	r1, [r3, #28]
   1425c:	cmp	r2, #0
   14260:	bne	14224 <__assert_fail@plt+0x29f8>
   14264:	ldr	r2, [r3, #4]
   14268:	ldr	r3, [r2, #48]	; 0x30
   1426c:	cmp	r3, #0
   14270:	bge	14230 <__assert_fail@plt+0x2a04>
   14274:	b	14310 <__assert_fail@plt+0x2ae4>
   14278:	movw	r3, #55108	; 0xd744
   1427c:	movt	r3, #1
   14280:	ldr	r1, [r3, r0, lsl #2]
   14284:	mov	r2, #1
   14288:	mov	r3, #0
   1428c:	str	r1, [r4, #80]	; 0x50
   14290:	b	13e20 <__assert_fail@plt+0x25f4>
   14294:	ldr	r2, [fp, #48]	; 0x30
   14298:	cmp	r2, #0
   1429c:	movne	r2, #32768	; 0x8000
   142a0:	b	1408c <__assert_fail@plt+0x2860>
   142a4:	ldr	r3, [fp, #84]	; 0x54
   142a8:	cmp	r3, #2
   142ac:	bne	140f4 <__assert_fail@plt+0x28c8>
   142b0:	mov	r1, r0
   142b4:	mov	r0, fp
   142b8:	bl	13438 <__assert_fail@plt+0x1c0c>
   142bc:	movw	r3, #26985	; 0x6969
   142c0:	cmp	r0, r3
   142c4:	beq	146b4 <__assert_fail@plt+0x2e88>
   142c8:	bgt	14698 <__assert_fail@plt+0x2e6c>
   142cc:	movw	r3, #19778	; 0x4d42
   142d0:	movt	r3, #65363	; 0xff53
   142d4:	cmp	r0, r3
   142d8:	beq	146b4 <__assert_fail@plt+0x2e88>
   142dc:	cmp	r0, #0
   142e0:	beq	146b4 <__assert_fail@plt+0x2e88>
   142e4:	ldr	r3, [sp, #40]	; 0x28
   142e8:	cmp	r3, #3
   142ec:	bne	1449c <__assert_fail@plt+0x2c70>
   142f0:	mov	r4, #0
   142f4:	ldr	r0, [sp, #68]	; 0x44
   142f8:	b	14104 <__assert_fail@plt+0x28d8>
   142fc:	ldr	r8, [sp, #12]
   14300:	mov	fp, r3
   14304:	ldr	r3, [sp, #36]	; 0x24
   14308:	cmp	r3, #0
   1430c:	bne	141d0 <__assert_fail@plt+0x29a4>
   14310:	ldr	r3, [r6, #48]	; 0x30
   14314:	tst	r3, #4
   14318:	beq	14348 <__assert_fail@plt+0x2b1c>
   1431c:	ldr	r2, [sp, #4]
   14320:	ldr	r3, [r6, #36]	; 0x24
   14324:	cmp	r9, #0
   14328:	cmpne	r3, r2
   1432c:	bne	1433c <__assert_fail@plt+0x2b10>
   14330:	ldr	r3, [sp, #32]
   14334:	sub	r3, r3, #1
   14338:	str	r3, [sp, #32]
   1433c:	ldr	r2, [sp, #32]
   14340:	mov	r3, #0
   14344:	strb	r3, [r2]
   14348:	ldr	r2, [sp, #48]	; 0x30
   1434c:	ldr	r3, [sp, #60]	; 0x3c
   14350:	cmp	r2, #0
   14354:	movne	r3, #0
   14358:	cmp	r3, #0
   1435c:	beq	14394 <__assert_fail@plt+0x2b68>
   14360:	ldr	r3, [sp, #40]	; 0x28
   14364:	cmp	r9, #0
   14368:	cmpne	r3, #1
   1436c:	bne	1439c <__assert_fail@plt+0x2b70>
   14370:	ldr	r3, [fp, #48]	; 0x30
   14374:	cmp	r3, #0
   14378:	bne	14584 <__assert_fail@plt+0x2d58>
   1437c:	mov	r0, r6
   14380:	bl	13854 <__assert_fail@plt+0x2028>
   14384:	adds	r0, r0, #0
   14388:	movne	r0, #1
   1438c:	cmp	r0, #0
   14390:	bne	14638 <__assert_fail@plt+0x2e0c>
   14394:	cmp	r9, #0
   14398:	beq	144f8 <__assert_fail@plt+0x2ccc>
   1439c:	ldr	r3, [sp, #44]	; 0x2c
   143a0:	cmp	r3, #0
   143a4:	bne	14454 <__assert_fail@plt+0x2c28>
   143a8:	ldr	r3, [r6, #44]	; 0x2c
   143ac:	cmp	r3, #0
   143b0:	cmpne	r9, #1
   143b4:	beq	13f9c <__assert_fail@plt+0x2770>
   143b8:	mov	r1, r8
   143bc:	mov	r2, r9
   143c0:	mov	r0, r6
   143c4:	bl	1334c <__assert_fail@plt+0x1b20>
   143c8:	mov	r8, r0
   143cc:	b	13f9c <__assert_fail@plt+0x2770>
   143d0:	ldr	r3, [sl]
   143d4:	ldr	r8, [sp, #12]
   143d8:	ldr	fp, [sp, #16]
   143dc:	cmp	r3, #0
   143e0:	beq	143fc <__assert_fail@plt+0x2bd0>
   143e4:	ldr	r2, [sp, #48]	; 0x30
   143e8:	str	r3, [fp, #32]
   143ec:	orrs	r2, r2, r9
   143f0:	moveq	r3, #4
   143f4:	movne	r3, #7
   143f8:	strh	r3, [fp, #56]	; 0x38
   143fc:	ldr	r0, [fp, #12]
   14400:	cmp	r0, #0
   14404:	beq	14304 <__assert_fail@plt+0x2ad8>
   14408:	bl	11814 <closedir@plt>
   1440c:	mov	r3, #0
   14410:	str	r3, [fp, #12]
   14414:	b	14304 <__assert_fail@plt+0x2ad8>
   14418:	str	r1, [r3, #28]
   1441c:	ldr	r3, [r3, #8]
   14420:	cmp	r3, #0
   14424:	bne	141e0 <__assert_fail@plt+0x29b4>
   14428:	b	14210 <__assert_fail@plt+0x29e4>
   1442c:	mov	r1, r0
   14430:	ldr	r0, [r6, #24]
   14434:	str	r1, [sp, #4]
   14438:	ldr	r8, [sp, #12]
   1443c:	ldr	fp, [sp, #16]
   14440:	bl	13204 <__assert_fail@plt+0x19d8>
   14444:	ldr	r1, [sp, #4]
   14448:	ldr	r5, [sl]
   1444c:	str	r1, [r6, #24]
   14450:	b	13f60 <__assert_fail@plt+0x2734>
   14454:	movw	r3, #13084	; 0x331c
   14458:	movt	r3, #1
   1445c:	mov	r1, r8
   14460:	mov	r2, r9
   14464:	mov	r0, r6
   14468:	str	r3, [r6, #44]	; 0x2c
   1446c:	bl	1334c <__assert_fail@plt+0x1b20>
   14470:	mov	r3, #0
   14474:	mov	r8, r0
   14478:	str	r3, [r6, #44]	; 0x2c
   1447c:	b	13f9c <__assert_fail@plt+0x2770>
   14480:	movw	r3, #34464	; 0x86a0
   14484:	movt	r3, #1
   14488:	mov	r2, #1
   1448c:	str	r3, [sp, #28]
   14490:	str	r2, [sp, #60]	; 0x3c
   14494:	ldr	r3, [r6, #48]	; 0x30
   14498:	b	13c24 <__assert_fail@plt+0x23f8>
   1449c:	mov	r3, #0
   144a0:	str	r3, [sp, #60]	; 0x3c
   144a4:	ldr	r3, [r6, #48]	; 0x30
   144a8:	b	13c24 <__assert_fail@plt+0x23f8>
   144ac:	add	r4, r6, #56	; 0x38
   144b0:	mov	r2, fp
   144b4:	mov	r1, r4
   144b8:	bl	13788 <__assert_fail@plt+0x1f5c>
   144bc:	mov	r3, #0
   144c0:	mov	r2, fp
   144c4:	ldr	r0, [r6, #32]
   144c8:	ldr	r1, [r6, #48]	; 0x30
   144cc:	bl	13558 <__assert_fail@plt+0x1d2c>
   144d0:	mov	r2, fp
   144d4:	mov	r1, r4
   144d8:	ldr	r0, [r6, #48]	; 0x30
   144dc:	bl	136b4 <__assert_fail@plt+0x1e88>
   144e0:	subs	r8, r0, #0
   144e4:	bne	140bc <__assert_fail@plt+0x2890>
   144e8:	bl	11688 <__errno_location@plt>
   144ec:	mov	r3, #12
   144f0:	str	r3, [r0]
   144f4:	b	13f9c <__assert_fail@plt+0x2770>
   144f8:	ldr	r3, [sp, #40]	; 0x28
   144fc:	cmp	r3, #3
   14500:	bne	14518 <__assert_fail@plt+0x2cec>
   14504:	ldrh	r3, [fp, #56]	; 0x38
   14508:	cmp	r3, #4
   1450c:	cmpne	r3, #7
   14510:	movne	r3, #6
   14514:	strhne	r3, [fp, #56]	; 0x38
   14518:	cmp	r8, #0
   1451c:	bne	14540 <__assert_fail@plt+0x2d14>
   14520:	b	14560 <__assert_fail@plt+0x2d34>
   14524:	mov	r0, r3
   14528:	bl	11814 <closedir@plt>
   1452c:	mov	r0, r8
   14530:	bl	13204 <__assert_fail@plt+0x19d8>
   14534:	cmp	r4, #0
   14538:	beq	14560 <__assert_fail@plt+0x2d34>
   1453c:	mov	r8, r4
   14540:	mov	r0, r8
   14544:	ldr	r4, [r8, #8]
   14548:	ldr	r3, [r8, #12]
   1454c:	cmp	r3, #0
   14550:	bne	14524 <__assert_fail@plt+0x2cf8>
   14554:	bl	13204 <__assert_fail@plt+0x19d8>
   14558:	cmp	r4, #0
   1455c:	bne	1453c <__assert_fail@plt+0x2d10>
   14560:	mov	r8, #0
   14564:	b	13f9c <__assert_fail@plt+0x2770>
   14568:	mov	r1, r0
   1456c:	mov	r3, #0
   14570:	ldr	r0, [r6, #32]
   14574:	mov	r2, fp
   14578:	bl	13558 <__assert_fail@plt+0x1d2c>
   1457c:	strh	r0, [fp, #56]	; 0x38
   14580:	b	140bc <__assert_fail@plt+0x2890>
   14584:	movw	r3, #55156	; 0xd774
   14588:	movt	r3, #1
   1458c:	ldr	r1, [fp, #4]
   14590:	mvn	r2, #0
   14594:	mov	r0, r6
   14598:	bl	13900 <__assert_fail@plt+0x20d4>
   1459c:	adds	r0, r0, #0
   145a0:	movne	r0, #1
   145a4:	b	1438c <__assert_fail@plt+0x2b60>
   145a8:	mov	r2, r0
   145ac:	mov	r3, #0
   145b0:	mov	r1, fp
   145b4:	mov	r0, r6
   145b8:	bl	13900 <__assert_fail@plt+0x20d4>
   145bc:	cmp	r0, #0
   145c0:	bne	14118 <__assert_fail@plt+0x28ec>
   145c4:	mov	r3, #1
   145c8:	str	r3, [sp, #60]	; 0x3c
   145cc:	ldr	r3, [r6, #48]	; 0x30
   145d0:	b	13c24 <__assert_fail@plt+0x23f8>
   145d4:	ldr	r0, [fp, #12]
   145d8:	mov	r8, #0
   145dc:	bl	11814 <closedir@plt>
   145e0:	ldr	r3, [sp, #40]	; 0x28
   145e4:	str	r8, [fp, #12]
   145e8:	cmp	r3, #3
   145ec:	bne	14560 <__assert_fail@plt+0x2d34>
   145f0:	mov	r3, #4
   145f4:	strh	r3, [fp, #56]	; 0x38
   145f8:	bl	11688 <__errno_location@plt>
   145fc:	ldr	r3, [r0]
   14600:	str	r3, [fp, #32]
   14604:	b	13f9c <__assert_fail@plt+0x2770>
   14608:	bl	117e4 <close@plt>
   1460c:	ldr	r3, [r6, #48]	; 0x30
   14610:	b	14160 <__assert_fail@plt+0x2934>
   14614:	mov	r2, #3
   14618:	movw	r1, #1030	; 0x406
   1461c:	bl	1c9e4 <lchmod@@Base+0x5824>
   14620:	str	r0, [sp, #68]	; 0x44
   14624:	b	14110 <__assert_fail@plt+0x28e4>
   14628:	ldr	r3, [sp, #40]	; 0x28
   1462c:	cmp	r3, #3
   14630:	bne	14560 <__assert_fail@plt+0x2d34>
   14634:	b	145f0 <__assert_fail@plt+0x2dc4>
   14638:	ldr	r3, [r6, #48]	; 0x30
   1463c:	mov	r2, #7
   14640:	cmp	r8, #0
   14644:	strh	r2, [fp, #56]	; 0x38
   14648:	orr	r3, r3, #8192	; 0x2000
   1464c:	str	r3, [r6, #48]	; 0x30
   14650:	bne	14674 <__assert_fail@plt+0x2e48>
   14654:	b	14560 <__assert_fail@plt+0x2d34>
   14658:	mov	r0, r3
   1465c:	bl	11814 <closedir@plt>
   14660:	mov	r0, r8
   14664:	bl	13204 <__assert_fail@plt+0x19d8>
   14668:	cmp	r4, #0
   1466c:	beq	14560 <__assert_fail@plt+0x2d34>
   14670:	mov	r8, r4
   14674:	mov	r0, r8
   14678:	ldr	r4, [r8, #8]
   1467c:	ldr	r3, [r8, #12]
   14680:	cmp	r3, #0
   14684:	bne	14658 <__assert_fail@plt+0x2e2c>
   14688:	bl	13204 <__assert_fail@plt+0x19d8>
   1468c:	cmp	r4, #0
   14690:	bne	14670 <__assert_fail@plt+0x2e44>
   14694:	b	14560 <__assert_fail@plt+0x2d34>
   14698:	movw	r3, #40864	; 0x9fa0
   1469c:	cmp	r0, r3
   146a0:	beq	146b4 <__assert_fail@plt+0x2e88>
   146a4:	movw	r3, #16719	; 0x414f
   146a8:	movt	r3, #21318	; 0x5346
   146ac:	cmp	r0, r3
   146b0:	bne	142e4 <__assert_fail@plt+0x2ab8>
   146b4:	ldr	r0, [sp, #68]	; 0x44
   146b8:	b	140f4 <__assert_fail@plt+0x28c8>
   146bc:	ldr	r8, [sp, #12]
   146c0:	mov	r0, r4
   146c4:	ldr	fp, [sp, #16]
   146c8:	bl	13204 <__assert_fail@plt+0x19d8>
   146cc:	cmp	r8, #0
   146d0:	bne	146f4 <__assert_fail@plt+0x2ec8>
   146d4:	b	14714 <__assert_fail@plt+0x2ee8>
   146d8:	mov	r0, r3
   146dc:	bl	11814 <closedir@plt>
   146e0:	mov	r0, r8
   146e4:	bl	13204 <__assert_fail@plt+0x19d8>
   146e8:	cmp	r4, #0
   146ec:	beq	14714 <__assert_fail@plt+0x2ee8>
   146f0:	mov	r8, r4
   146f4:	mov	r0, r8
   146f8:	ldr	r4, [r8, #8]
   146fc:	ldr	r3, [r8, #12]
   14700:	cmp	r3, #0
   14704:	bne	146d8 <__assert_fail@plt+0x2eac>
   14708:	bl	13204 <__assert_fail@plt+0x19d8>
   1470c:	cmp	r4, #0
   14710:	bne	146f0 <__assert_fail@plt+0x2ec4>
   14714:	ldr	r0, [fp, #12]
   14718:	mov	r8, #0
   1471c:	bl	11814 <closedir@plt>
   14720:	ldr	r3, [r6, #48]	; 0x30
   14724:	mov	r1, #7
   14728:	mov	r2, #36	; 0x24
   1472c:	str	r8, [fp, #12]
   14730:	strh	r1, [fp, #56]	; 0x38
   14734:	orr	r3, r3, #8192	; 0x2000
   14738:	str	r3, [r6, #48]	; 0x30
   1473c:	str	r2, [sl]
   14740:	b	13f9c <__assert_fail@plt+0x2770>
   14744:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14748:	strd	r6, [sp, #8]
   1474c:	bic	r7, r1, #4080	; 0xff0
   14750:	bic	r7, r7, #15
   14754:	strd	r8, [sp, #16]
   14758:	strd	sl, [sp, #24]
   1475c:	cmp	r7, #0
   14760:	str	lr, [sp, #32]
   14764:	sub	sp, sp, #36	; 0x24
   14768:	str	r2, [sp, #12]
   1476c:	bne	14bd8 <__assert_fail@plt+0x33ac>
   14770:	and	r3, r1, #516	; 0x204
   14774:	mov	r5, r1
   14778:	cmp	r3, #516	; 0x204
   1477c:	beq	14b6c <__assert_fail@plt+0x3340>
   14780:	ands	r7, r1, #18
   14784:	beq	14b6c <__assert_fail@plt+0x3340>
   14788:	mov	r9, r0
   1478c:	mov	r1, #96	; 0x60
   14790:	mov	r0, #1
   14794:	bl	1c5ac <lchmod@@Base+0x53ec>
   14798:	subs	r7, r0, #0
   1479c:	beq	14ae4 <__assert_fail@plt+0x32b8>
   147a0:	ldr	r3, [sp, #12]
   147a4:	tst	r5, #2
   147a8:	mvn	r2, #99	; 0x63
   147ac:	streq	r5, [r7, #48]	; 0x30
   147b0:	str	r2, [r7, #32]
   147b4:	str	r3, [r7, #44]	; 0x2c
   147b8:	bicne	r3, r5, #512	; 0x200
   147bc:	orrne	r3, r3, #4
   147c0:	strne	r3, [r7, #48]	; 0x30
   147c4:	ldr	r3, [r9]
   147c8:	cmp	r3, #0
   147cc:	beq	14c24 <__assert_fail@plt+0x33f8>
   147d0:	mov	r6, r9
   147d4:	mov	r4, #0
   147d8:	mov	r0, r3
   147dc:	bl	11658 <strlen@plt>
   147e0:	ldr	r3, [r6, #4]!
   147e4:	cmp	r4, r0
   147e8:	movcc	r4, r0
   147ec:	cmp	r3, #0
   147f0:	bne	147d8 <__assert_fail@plt+0x2fac>
   147f4:	add	r4, r4, #1
   147f8:	cmp	r4, #4096	; 0x1000
   147fc:	movcc	r4, #4096	; 0x1000
   14800:	ldr	r0, [r7, #24]
   14804:	ldr	r3, [r7, #36]	; 0x24
   14808:	add	r1, r3, #256	; 0x100
   1480c:	add	r1, r1, r4
   14810:	cmp	r3, r1
   14814:	bhi	14bec <__assert_fail@plt+0x33c0>
   14818:	str	r1, [r7, #36]	; 0x24
   1481c:	bl	1c65c <lchmod@@Base+0x549c>
   14820:	subs	r4, r0, #0
   14824:	beq	14c70 <__assert_fail@plt+0x3444>
   14828:	ldr	r3, [r9]
   1482c:	str	r4, [r7, #24]
   14830:	cmp	r3, #0
   14834:	str	r3, [sp, #16]
   14838:	beq	14bc4 <__assert_fail@plt+0x3398>
   1483c:	mov	r0, #176	; 0xb0
   14840:	bl	1c620 <lchmod@@Base+0x5460>
   14844:	subs	ip, r0, #0
   14848:	str	ip, [sp, #16]
   1484c:	beq	14b54 <__assert_fail@plt+0x3328>
   14850:	ldr	r2, [sp, #12]
   14854:	mov	r3, #0
   14858:	mvn	r1, #0
   1485c:	ldr	r0, [r7, #24]
   14860:	str	r3, [ip, #12]
   14864:	str	r3, [ip, #16]
   14868:	cmp	r2, r3
   1486c:	mov	r2, #196608	; 0x30000
   14870:	str	r3, [ip, #20]
   14874:	str	r7, [ip, #44]	; 0x2c
   14878:	str	r3, [ip, #32]
   1487c:	str	r3, [ip, #52]	; 0x34
   14880:	strb	r3, [ip, #168]	; 0xa8
   14884:	moveq	r3, #1
   14888:	str	r0, [ip, #28]
   1488c:	streq	r3, [sp, #24]
   14890:	str	r1, [ip, #48]	; 0x30
   14894:	str	r2, [ip, #58]	; 0x3a
   14898:	ldr	fp, [r9]
   1489c:	beq	148ac <__assert_fail@plt+0x3080>
   148a0:	ldr	r3, [r7, #48]	; 0x30
   148a4:	ubfx	r3, r3, #10, #1
   148a8:	str	r3, [sp, #24]
   148ac:	cmp	fp, #0
   148b0:	beq	14c9c <__assert_fail@plt+0x3470>
   148b4:	eor	r5, r5, #2048	; 0x800
   148b8:	mov	r3, #0
   148bc:	ubfx	r2, r5, #11, #1
   148c0:	mov	r6, r3
   148c4:	mov	sl, r3
   148c8:	mov	r8, r3
   148cc:	str	r2, [sp, #20]
   148d0:	str	r3, [sp, #28]
   148d4:	b	14910 <__assert_fail@plt+0x30e4>
   148d8:	ldr	r2, [sp, #12]
   148dc:	mov	r3, #11
   148e0:	mov	r0, #2
   148e4:	mov	r1, #0
   148e8:	strh	r3, [r4, #56]	; 0x38
   148ec:	strd	r0, [r4, #112]	; 0x70
   148f0:	cmp	r2, #0
   148f4:	beq	14bb0 <__assert_fail@plt+0x3384>
   148f8:	str	r8, [r4, #8]
   148fc:	mov	r8, r4
   14900:	ldr	fp, [r9, #4]!
   14904:	add	sl, sl, #1
   14908:	cmp	fp, #0
   1490c:	beq	14a0c <__assert_fail@plt+0x31e0>
   14910:	mov	r0, fp
   14914:	bl	11658 <strlen@plt>
   14918:	ldr	r3, [sp, #20]
   1491c:	mov	r5, r0
   14920:	cmp	r0, #2
   14924:	movls	r3, #0
   14928:	andhi	r3, r3, #1
   1492c:	cmp	r3, #0
   14930:	bne	14b7c <__assert_fail@plt+0x3350>
   14934:	add	r0, r5, #176	; 0xb0
   14938:	bic	r0, r0, #7
   1493c:	bl	1c620 <lchmod@@Base+0x5460>
   14940:	subs	r4, r0, #0
   14944:	beq	14b04 <__assert_fail@plt+0x32d8>
   14948:	add	r3, r4, #168	; 0xa8
   1494c:	mov	r1, fp
   14950:	mov	r0, r3
   14954:	mov	r2, r5
   14958:	bl	114b4 <memcpy@plt>
   1495c:	add	ip, r4, r5
   14960:	ldr	r2, [sp, #24]
   14964:	mov	r3, r0
   14968:	cmp	r8, #0
   1496c:	mov	r1, #3
   14970:	strb	r6, [ip, #168]	; 0xa8
   14974:	moveq	r2, #0
   14978:	ldr	ip, [sp, #16]
   1497c:	ldr	r0, [r7, #24]
   14980:	cmp	r2, #0
   14984:	str	ip, [r4, #4]
   14988:	str	r6, [r4, #12]
   1498c:	str	r6, [r4, #16]
   14990:	str	r6, [r4, #20]
   14994:	str	r3, [r4, #24]
   14998:	str	r0, [r4, #28]
   1499c:	str	r6, [r4, #32]
   149a0:	str	r7, [r4, #44]	; 0x2c
   149a4:	str	r6, [r4, #48]	; 0x30
   149a8:	str	r5, [r4, #52]	; 0x34
   149ac:	strh	r6, [r4, #58]	; 0x3a
   149b0:	strh	r1, [r4, #60]	; 0x3c
   149b4:	bne	148d8 <__assert_fail@plt+0x30ac>
   149b8:	mov	r3, r2
   149bc:	mov	r2, r4
   149c0:	ldr	r0, [r7, #32]
   149c4:	ldr	r1, [r7, #48]	; 0x30
   149c8:	bl	13558 <__assert_fail@plt+0x1d2c>
   149cc:	ldr	r3, [sp, #12]
   149d0:	strh	r0, [r4, #56]	; 0x38
   149d4:	cmp	r3, #0
   149d8:	bne	148f8 <__assert_fail@plt+0x30cc>
   149dc:	cmp	r8, #0
   149e0:	str	r3, [r4, #8]
   149e4:	moveq	r8, r4
   149e8:	streq	r4, [sp, #28]
   149ec:	beq	14900 <__assert_fail@plt+0x30d4>
   149f0:	ldr	r3, [sp, #28]
   149f4:	str	r4, [sp, #28]
   149f8:	str	r4, [r3, #8]
   149fc:	ldr	fp, [r9, #4]!
   14a00:	add	sl, sl, #1
   14a04:	cmp	fp, #0
   14a08:	bne	14910 <__assert_fail@plt+0x30e4>
   14a0c:	ldr	r3, [sp, #12]
   14a10:	cmp	r3, #0
   14a14:	cmpne	sl, #1
   14a18:	bls	14a30 <__assert_fail@plt+0x3204>
   14a1c:	mov	r1, r8
   14a20:	mov	r2, sl
   14a24:	mov	r0, r7
   14a28:	bl	1334c <__assert_fail@plt+0x1b20>
   14a2c:	mov	r8, r0
   14a30:	mov	r0, #176	; 0xb0
   14a34:	bl	1c620 <lchmod@@Base+0x5460>
   14a38:	cmp	r0, #0
   14a3c:	streq	r0, [r7]
   14a40:	beq	14b04 <__assert_fail@plt+0x32d8>
   14a44:	ldr	lr, [r7, #24]
   14a48:	movw	r4, #258	; 0x102
   14a4c:	mov	r1, #0
   14a50:	mov	ip, #1
   14a54:	mov	r2, #9
   14a58:	str	r0, [r7]
   14a5c:	ldr	r3, [r7, #48]	; 0x30
   14a60:	str	r8, [r0, #8]
   14a64:	str	r1, [r0, #12]
   14a68:	str	r1, [r0, #16]
   14a6c:	str	r1, [r0, #20]
   14a70:	tst	r4, r3
   14a74:	mov	r3, #3
   14a78:	str	lr, [r0, #28]
   14a7c:	str	r1, [r0, #32]
   14a80:	str	r7, [r0, #44]	; 0x2c
   14a84:	str	ip, [r0, #48]	; 0x30
   14a88:	str	r1, [r0, #52]	; 0x34
   14a8c:	str	r2, [r0, #56]	; 0x38
   14a90:	strh	r3, [r0, #60]	; 0x3c
   14a94:	strb	r1, [r0, #168]	; 0xa8
   14a98:	beq	14c08 <__assert_fail@plt+0x33dc>
   14a9c:	movw	r0, #12804	; 0x3204
   14aa0:	movt	r0, #1
   14aa4:	movw	r3, #12900	; 0x3264
   14aa8:	movt	r3, #1
   14aac:	movw	r2, #12964	; 0x32a4
   14ab0:	movt	r2, #1
   14ab4:	str	r0, [sp]
   14ab8:	mov	r0, #31
   14abc:	bl	1624c <__assert_fail@plt+0x4a20>
   14ac0:	cmp	r0, #0
   14ac4:	str	r0, [r7, #56]	; 0x38
   14ac8:	beq	14b04 <__assert_fail@plt+0x32d8>
   14acc:	ldr	r3, [r7, #48]	; 0x30
   14ad0:	tst	r3, #516	; 0x204
   14ad4:	beq	14c2c <__assert_fail@plt+0x3400>
   14ad8:	mvn	r1, #0
   14adc:	add	r0, r7, #60	; 0x3c
   14ae0:	bl	170f4 <__assert_fail@plt+0x58c8>
   14ae4:	mov	r0, r7
   14ae8:	add	sp, sp, #36	; 0x24
   14aec:	ldrd	r4, [sp]
   14af0:	ldrd	r6, [sp, #8]
   14af4:	ldrd	r8, [sp, #16]
   14af8:	ldrd	sl, [sp, #24]
   14afc:	add	sp, sp, #32
   14b00:	pop	{pc}		; (ldr pc, [sp], #4)
   14b04:	cmp	r8, #0
   14b08:	bne	14b2c <__assert_fail@plt+0x3300>
   14b0c:	b	14b4c <__assert_fail@plt+0x3320>
   14b10:	mov	r0, r3
   14b14:	bl	11814 <closedir@plt>
   14b18:	mov	r0, r8
   14b1c:	bl	13204 <__assert_fail@plt+0x19d8>
   14b20:	cmp	r4, #0
   14b24:	beq	14b4c <__assert_fail@plt+0x3320>
   14b28:	mov	r8, r4
   14b2c:	mov	r0, r8
   14b30:	ldr	r4, [r8, #8]
   14b34:	ldr	r3, [r8, #12]
   14b38:	cmp	r3, #0
   14b3c:	bne	14b10 <__assert_fail@plt+0x32e4>
   14b40:	bl	13204 <__assert_fail@plt+0x19d8>
   14b44:	cmp	r4, #0
   14b48:	bne	14b28 <__assert_fail@plt+0x32fc>
   14b4c:	ldr	r0, [sp, #16]
   14b50:	bl	13204 <__assert_fail@plt+0x19d8>
   14b54:	ldr	r0, [r7, #24]
   14b58:	bl	13204 <__assert_fail@plt+0x19d8>
   14b5c:	mov	r0, r7
   14b60:	mov	r7, #0
   14b64:	bl	13204 <__assert_fail@plt+0x19d8>
   14b68:	b	14ae4 <__assert_fail@plt+0x32b8>
   14b6c:	bl	11688 <__errno_location@plt>
   14b70:	mov	r3, #22
   14b74:	str	r3, [r0]
   14b78:	b	14ae4 <__assert_fail@plt+0x32b8>
   14b7c:	sub	r3, r0, #1
   14b80:	ldrb	r2, [fp, r3]
   14b84:	add	r3, fp, r3
   14b88:	cmp	r2, #47	; 0x2f
   14b8c:	bne	14934 <__assert_fail@plt+0x3108>
   14b90:	ldrb	r2, [r3, #-1]!
   14b94:	cmp	r2, #47	; 0x2f
   14b98:	bne	14934 <__assert_fail@plt+0x3108>
   14b9c:	sub	r5, r5, #1
   14ba0:	cmp	r5, #1
   14ba4:	bne	14b90 <__assert_fail@plt+0x3364>
   14ba8:	mov	r0, #176	; 0xb0
   14bac:	b	1493c <__assert_fail@plt+0x3110>
   14bb0:	ldr	r3, [sp, #28]
   14bb4:	str	r2, [r4, #8]
   14bb8:	str	r4, [sp, #28]
   14bbc:	str	r4, [r3, #8]
   14bc0:	b	149fc <__assert_fail@plt+0x31d0>
   14bc4:	ldr	r3, [sp, #12]
   14bc8:	cmp	r3, #0
   14bcc:	beq	14c94 <__assert_fail@plt+0x3468>
   14bd0:	ldr	fp, [sp, #16]
   14bd4:	b	148a0 <__assert_fail@plt+0x3074>
   14bd8:	bl	11688 <__errno_location@plt>
   14bdc:	mov	r3, #22
   14be0:	mov	r7, #0
   14be4:	str	r3, [r0]
   14be8:	b	14ae4 <__assert_fail@plt+0x32b8>
   14bec:	bl	13204 <__assert_fail@plt+0x19d8>
   14bf0:	mov	r3, #0
   14bf4:	str	r3, [r7, #24]
   14bf8:	bl	11688 <__errno_location@plt>
   14bfc:	mov	r3, #36	; 0x24
   14c00:	str	r3, [r0]
   14c04:	b	14b5c <__assert_fail@plt+0x3330>
   14c08:	mov	r0, #32
   14c0c:	bl	1c620 <lchmod@@Base+0x5460>
   14c10:	cmp	r0, #0
   14c14:	str	r0, [r7, #56]	; 0x38
   14c18:	beq	14b04 <__assert_fail@plt+0x32d8>
   14c1c:	bl	1c810 <lchmod@@Base+0x5650>
   14c20:	b	14acc <__assert_fail@plt+0x32a0>
   14c24:	mov	r4, #4096	; 0x1000
   14c28:	b	14800 <__assert_fail@plt+0x2fd4>
   14c2c:	lsl	r2, r3, #11
   14c30:	tst	r3, #512	; 0x200
   14c34:	and	r2, r2, #32768	; 0x8000
   14c38:	orr	r2, r2, #540672	; 0x84000
   14c3c:	orr	r2, r2, #2304	; 0x900
   14c40:	beq	14c80 <__assert_fail@plt+0x3454>
   14c44:	movw	r1, #55080	; 0xd728
   14c48:	movt	r1, #1
   14c4c:	ldr	r0, [r7, #32]
   14c50:	bl	17870 <lchmod@@Base+0x6b0>
   14c54:	cmp	r0, #0
   14c58:	str	r0, [r7, #28]
   14c5c:	bge	14ad8 <__assert_fail@plt+0x32ac>
   14c60:	ldr	r3, [r7, #48]	; 0x30
   14c64:	orr	r3, r3, #4
   14c68:	str	r3, [r7, #48]	; 0x30
   14c6c:	b	14ad8 <__assert_fail@plt+0x32ac>
   14c70:	ldr	r0, [r7, #24]
   14c74:	bl	13204 <__assert_fail@plt+0x19d8>
   14c78:	str	r4, [r7, #24]
   14c7c:	b	14b5c <__assert_fail@plt+0x3330>
   14c80:	mov	r1, r2
   14c84:	movw	r0, #55080	; 0xd728
   14c88:	movt	r0, #1
   14c8c:	bl	1cbcc <lchmod@@Base+0x5a0c>
   14c90:	b	14c54 <__assert_fail@plt+0x3428>
   14c94:	ldr	r8, [sp, #16]
   14c98:	b	14a30 <__assert_fail@plt+0x3204>
   14c9c:	mov	r8, fp
   14ca0:	b	14a30 <__assert_fail@plt+0x3204>
   14ca4:	ldr	r3, [r0]
   14ca8:	strd	r4, [sp, #-16]!
   14cac:	str	r6, [sp, #8]
   14cb0:	mov	r6, r0
   14cb4:	str	lr, [sp, #12]
   14cb8:	cmp	r3, #0
   14cbc:	beq	14d10 <__assert_fail@plt+0x34e4>
   14cc0:	ldr	r2, [r3, #48]	; 0x30
   14cc4:	cmp	r2, #0
   14cc8:	bge	14ce4 <__assert_fail@plt+0x34b8>
   14ccc:	b	14e94 <__assert_fail@plt+0x3668>
   14cd0:	bl	13204 <__assert_fail@plt+0x19d8>
   14cd4:	ldr	r3, [r4, #48]	; 0x30
   14cd8:	cmp	r3, #0
   14cdc:	blt	14d08 <__assert_fail@plt+0x34dc>
   14ce0:	mov	r3, r4
   14ce4:	ldr	r4, [r3, #8]
   14ce8:	mov	r0, r3
   14cec:	cmp	r4, #0
   14cf0:	bne	14cd0 <__assert_fail@plt+0x34a4>
   14cf4:	ldr	r4, [r3, #4]
   14cf8:	bl	13204 <__assert_fail@plt+0x19d8>
   14cfc:	ldr	r3, [r4, #48]	; 0x30
   14d00:	cmp	r3, #0
   14d04:	bge	14ce0 <__assert_fail@plt+0x34b4>
   14d08:	mov	r0, r4
   14d0c:	bl	13204 <__assert_fail@plt+0x19d8>
   14d10:	ldr	r4, [r6, #4]
   14d14:	cmp	r4, #0
   14d18:	bne	14d3c <__assert_fail@plt+0x3510>
   14d1c:	b	14d5c <__assert_fail@plt+0x3530>
   14d20:	mov	r0, r3
   14d24:	bl	11814 <closedir@plt>
   14d28:	mov	r0, r4
   14d2c:	bl	13204 <__assert_fail@plt+0x19d8>
   14d30:	cmp	r5, #0
   14d34:	beq	14d5c <__assert_fail@plt+0x3530>
   14d38:	mov	r4, r5
   14d3c:	mov	r0, r4
   14d40:	ldr	r5, [r4, #8]
   14d44:	ldr	r3, [r4, #12]
   14d48:	cmp	r3, #0
   14d4c:	bne	14d20 <__assert_fail@plt+0x34f4>
   14d50:	bl	13204 <__assert_fail@plt+0x19d8>
   14d54:	cmp	r5, #0
   14d58:	bne	14d38 <__assert_fail@plt+0x350c>
   14d5c:	ldr	r0, [r6, #8]
   14d60:	bl	13204 <__assert_fail@plt+0x19d8>
   14d64:	ldr	r0, [r6, #24]
   14d68:	bl	13204 <__assert_fail@plt+0x19d8>
   14d6c:	ldr	r3, [r6, #48]	; 0x30
   14d70:	tst	r3, #512	; 0x200
   14d74:	beq	14e24 <__assert_fail@plt+0x35f8>
   14d78:	ldr	r0, [r6, #32]
   14d7c:	cmp	r0, #0
   14d80:	bge	14e0c <__assert_fail@plt+0x35e0>
   14d84:	mov	r5, #0
   14d88:	add	r4, r6, #60	; 0x3c
   14d8c:	b	14d9c <__assert_fail@plt+0x3570>
   14d90:	bl	17170 <__assert_fail@plt+0x5944>
   14d94:	cmp	r0, #0
   14d98:	bge	14e04 <__assert_fail@plt+0x35d8>
   14d9c:	mov	r0, r4
   14da0:	bl	17120 <__assert_fail@plt+0x58f4>
   14da4:	cmp	r0, #0
   14da8:	mov	r0, r4
   14dac:	beq	14d90 <__assert_fail@plt+0x3564>
   14db0:	ldr	r0, [r6, #52]	; 0x34
   14db4:	cmp	r0, #0
   14db8:	beq	14dc0 <__assert_fail@plt+0x3594>
   14dbc:	bl	1658c <__assert_fail@plt+0x4d60>
   14dc0:	ldr	r3, [r6, #48]	; 0x30
   14dc4:	movw	r2, #258	; 0x102
   14dc8:	ldr	r0, [r6, #56]	; 0x38
   14dcc:	tst	r2, r3
   14dd0:	beq	14e5c <__assert_fail@plt+0x3630>
   14dd4:	cmp	r0, #0
   14dd8:	beq	14de0 <__assert_fail@plt+0x35b4>
   14ddc:	bl	1658c <__assert_fail@plt+0x4d60>
   14de0:	mov	r0, r6
   14de4:	bl	13204 <__assert_fail@plt+0x19d8>
   14de8:	cmp	r5, #0
   14dec:	bne	14e9c <__assert_fail@plt+0x3670>
   14df0:	mov	r0, r5
   14df4:	ldrd	r4, [sp]
   14df8:	ldr	r6, [sp, #8]
   14dfc:	add	sp, sp, #12
   14e00:	pop	{pc}		; (ldr pc, [sp], #4)
   14e04:	bl	117e4 <close@plt>
   14e08:	b	14d9c <__assert_fail@plt+0x3570>
   14e0c:	bl	117e4 <close@plt>
   14e10:	cmp	r0, #0
   14e14:	beq	14d84 <__assert_fail@plt+0x3558>
   14e18:	bl	11688 <__errno_location@plt>
   14e1c:	ldr	r5, [r0]
   14e20:	b	14d88 <__assert_fail@plt+0x355c>
   14e24:	tst	r3, #4
   14e28:	bne	14d84 <__assert_fail@plt+0x3558>
   14e2c:	ldr	r0, [r6, #28]
   14e30:	bl	11760 <fchdir@plt>
   14e34:	cmp	r0, #0
   14e38:	bne	14e64 <__assert_fail@plt+0x3638>
   14e3c:	ldr	r0, [r6, #28]
   14e40:	bl	117e4 <close@plt>
   14e44:	cmp	r0, #0
   14e48:	beq	14d84 <__assert_fail@plt+0x3558>
   14e4c:	bl	11688 <__errno_location@plt>
   14e50:	mov	r4, r0
   14e54:	ldr	r5, [r4]
   14e58:	b	14d88 <__assert_fail@plt+0x355c>
   14e5c:	bl	13204 <__assert_fail@plt+0x19d8>
   14e60:	b	14de0 <__assert_fail@plt+0x35b4>
   14e64:	bl	11688 <__errno_location@plt>
   14e68:	ldr	r5, [r0]
   14e6c:	mov	r4, r0
   14e70:	ldr	r0, [r6, #28]
   14e74:	bl	117e4 <close@plt>
   14e78:	adds	r3, r0, #0
   14e7c:	movne	r3, #1
   14e80:	cmp	r5, #0
   14e84:	movne	r3, #0
   14e88:	cmp	r3, #0
   14e8c:	beq	14d88 <__assert_fail@plt+0x355c>
   14e90:	b	14e54 <__assert_fail@plt+0x3628>
   14e94:	mov	r4, r3
   14e98:	b	14d08 <__assert_fail@plt+0x34dc>
   14e9c:	bl	11688 <__errno_location@plt>
   14ea0:	str	r5, [r0]
   14ea4:	mvn	r5, #0
   14ea8:	b	14df0 <__assert_fail@plt+0x35c4>
   14eac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14eb0:	ldr	r4, [r0]
   14eb4:	strd	r6, [sp, #8]
   14eb8:	str	r8, [sp, #16]
   14ebc:	str	lr, [sp, #20]
   14ec0:	sub	sp, sp, #8
   14ec4:	cmp	r4, #0
   14ec8:	beq	150d8 <__assert_fail@plt+0x38ac>
   14ecc:	ldr	r1, [r0, #48]	; 0x30
   14ed0:	ands	r3, r1, #8192	; 0x2000
   14ed4:	bne	150d8 <__assert_fail@plt+0x38ac>
   14ed8:	ldrh	r2, [r4, #60]	; 0x3c
   14edc:	mov	r8, r0
   14ee0:	mov	r0, #3
   14ee4:	strh	r0, [r4, #60]	; 0x3c
   14ee8:	cmp	r2, #1
   14eec:	beq	15330 <__assert_fail@plt+0x3b04>
   14ef0:	cmp	r2, #2
   14ef4:	ldrh	r3, [r4, #56]	; 0x38
   14ef8:	beq	14ff8 <__assert_fail@plt+0x37cc>
   14efc:	cmp	r3, #1
   14f00:	bne	14f30 <__assert_fail@plt+0x3704>
   14f04:	b	150f8 <__assert_fail@plt+0x38cc>
   14f08:	mov	r0, r4
   14f0c:	str	r5, [r8]
   14f10:	bl	13204 <__assert_fail@plt+0x19d8>
   14f14:	ldr	r4, [r5, #48]	; 0x30
   14f18:	cmp	r4, #0
   14f1c:	beq	15178 <__assert_fail@plt+0x394c>
   14f20:	ldrh	r3, [r5, #60]	; 0x3c
   14f24:	mov	r4, r5
   14f28:	cmp	r3, #4
   14f2c:	bne	1524c <__assert_fail@plt+0x3a20>
   14f30:	ldr	r5, [r4, #8]
   14f34:	cmp	r5, #0
   14f38:	bne	14f08 <__assert_fail@plt+0x36dc>
   14f3c:	ldr	r6, [r4, #4]
   14f40:	ldr	r3, [r6, #12]
   14f44:	cmp	r3, #0
   14f48:	bne	154a8 <__assert_fail@plt+0x3c7c>
   14f4c:	mov	r0, r4
   14f50:	str	r6, [r8]
   14f54:	bl	13204 <__assert_fail@plt+0x19d8>
   14f58:	ldr	r3, [r6, #48]	; 0x30
   14f5c:	cmn	r3, #1
   14f60:	beq	15488 <__assert_fail@plt+0x3c5c>
   14f64:	ldrh	r3, [r6, #56]	; 0x38
   14f68:	cmp	r3, #11
   14f6c:	beq	1532c <__assert_fail@plt+0x3b00>
   14f70:	ldr	r2, [r8, #24]
   14f74:	mov	r1, #0
   14f78:	ldr	r3, [r6, #40]	; 0x28
   14f7c:	strb	r1, [r2, r3]
   14f80:	ldr	r3, [r6, #48]	; 0x30
   14f84:	cmp	r3, r1
   14f88:	beq	150a4 <__assert_fail@plt+0x3878>
   14f8c:	ldrh	r3, [r6, #58]	; 0x3a
   14f90:	tst	r3, #2
   14f94:	beq	153e4 <__assert_fail@plt+0x3bb8>
   14f98:	ldr	r3, [r8, #48]	; 0x30
   14f9c:	ldr	r4, [r6, #36]	; 0x24
   14fa0:	tst	r3, #4
   14fa4:	bne	14fec <__assert_fail@plt+0x37c0>
   14fa8:	tst	r3, #512	; 0x200
   14fac:	beq	15584 <__assert_fail@plt+0x3d58>
   14fb0:	ldr	r1, [r8, #32]
   14fb4:	sub	r3, r4, r1
   14fb8:	cmn	r1, #100	; 0x64
   14fbc:	clz	r3, r3
   14fc0:	lsr	r3, r3, #5
   14fc4:	moveq	r3, #0
   14fc8:	cmp	r3, #0
   14fcc:	bne	1532c <__assert_fail@plt+0x3b00>
   14fd0:	add	r0, r8, #60	; 0x3c
   14fd4:	bl	17128 <__assert_fail@plt+0x58fc>
   14fd8:	cmp	r0, #0
   14fdc:	blt	14fe4 <__assert_fail@plt+0x37b8>
   14fe0:	bl	117e4 <close@plt>
   14fe4:	str	r4, [r8, #32]
   14fe8:	ldr	r4, [r6, #36]	; 0x24
   14fec:	mov	r0, r4
   14ff0:	bl	117e4 <close@plt>
   14ff4:	b	153ec <__assert_fail@plt+0x3bc0>
   14ff8:	sub	r2, r3, #12
   14ffc:	cmp	r2, #1
   15000:	bls	152e8 <__assert_fail@plt+0x3abc>
   15004:	cmp	r3, #1
   15008:	bne	14f30 <__assert_fail@plt+0x3704>
   1500c:	tst	r1, #64	; 0x40
   15010:	beq	15028 <__assert_fail@plt+0x37fc>
   15014:	ldrd	r2, [r8, #16]
   15018:	ldrd	r6, [r4, #64]	; 0x40
   1501c:	cmp	r7, r3
   15020:	cmpeq	r6, r2
   15024:	bne	15100 <__assert_fail@plt+0x38d4>
   15028:	ldr	r5, [r8, #4]
   1502c:	cmp	r5, #0
   15030:	beq	15390 <__assert_fail@plt+0x3b64>
   15034:	tst	r1, #4096	; 0x1000
   15038:	bne	15344 <__assert_fail@plt+0x3b18>
   1503c:	mvn	r2, #0
   15040:	mov	r1, r4
   15044:	ldr	r3, [r4, #24]
   15048:	mov	r0, r8
   1504c:	bl	13900 <__assert_fail@plt+0x20d4>
   15050:	cmp	r0, #0
   15054:	beq	15470 <__assert_fail@plt+0x3c44>
   15058:	bl	11688 <__errno_location@plt>
   1505c:	ldrh	r3, [r4, #58]	; 0x3a
   15060:	ldr	r2, [r0]
   15064:	orr	r3, r3, #1
   15068:	str	r2, [r4, #32]
   1506c:	strh	r3, [r4, #58]	; 0x3a
   15070:	ldr	r4, [r8, #4]
   15074:	cmp	r4, #0
   15078:	beq	15098 <__assert_fail@plt+0x386c>
   1507c:	mov	r3, r4
   15080:	ldr	r2, [r3, #4]
   15084:	ldr	r2, [r2, #24]
   15088:	str	r2, [r3, #24]
   1508c:	ldr	r3, [r3, #8]
   15090:	cmp	r3, #0
   15094:	bne	15080 <__assert_fail@plt+0x3854>
   15098:	mov	r3, #0
   1509c:	str	r3, [r8, #4]
   150a0:	b	15254 <__assert_fail@plt+0x3a28>
   150a4:	mov	r0, r8
   150a8:	bl	13854 <__assert_fail@plt+0x2028>
   150ac:	cmp	r0, #0
   150b0:	beq	153ec <__assert_fail@plt+0x3bc0>
   150b4:	bl	11688 <__errno_location@plt>
   150b8:	ldr	r3, [r8, #48]	; 0x30
   150bc:	ldr	r2, [r0]
   150c0:	orr	r0, r3, #8192	; 0x2000
   150c4:	ldrh	r3, [r6, #56]	; 0x38
   150c8:	str	r2, [r6, #32]
   150cc:	str	r0, [r8, #48]	; 0x30
   150d0:	cmp	r3, #2
   150d4:	bne	15400 <__assert_fail@plt+0x3bd4>
   150d8:	mov	r4, #0
   150dc:	mov	r0, r4
   150e0:	add	sp, sp, #8
   150e4:	ldrd	r4, [sp]
   150e8:	ldrd	r6, [sp, #8]
   150ec:	ldr	r8, [sp, #16]
   150f0:	add	sp, sp, #20
   150f4:	pop	{pc}		; (ldr pc, [sp], #4)
   150f8:	cmp	r2, #4
   150fc:	bne	1500c <__assert_fail@plt+0x37e0>
   15100:	ldrh	r3, [r4, #58]	; 0x3a
   15104:	tst	r3, #2
   15108:	bne	154e8 <__assert_fail@plt+0x3cbc>
   1510c:	ldr	r5, [r8, #4]
   15110:	cmp	r5, #0
   15114:	bne	1514c <__assert_fail@plt+0x3920>
   15118:	mov	r3, #6
   1511c:	mov	r2, r4
   15120:	ldr	r0, [r8, #48]	; 0x30
   15124:	add	r1, r8, #56	; 0x38
   15128:	strh	r3, [r4, #56]	; 0x38
   1512c:	bl	13788 <__assert_fail@plt+0x1f5c>
   15130:	b	150dc <__assert_fail@plt+0x38b0>
   15134:	bl	11814 <closedir@plt>
   15138:	mov	r0, r5
   1513c:	bl	13204 <__assert_fail@plt+0x19d8>
   15140:	cmp	r6, #0
   15144:	beq	1516c <__assert_fail@plt+0x3940>
   15148:	mov	r5, r6
   1514c:	ldr	r6, [r5, #8]
   15150:	ldr	r0, [r5, #12]
   15154:	cmp	r0, #0
   15158:	bne	15134 <__assert_fail@plt+0x3908>
   1515c:	mov	r0, r5
   15160:	bl	13204 <__assert_fail@plt+0x19d8>
   15164:	cmp	r6, #0
   15168:	bne	15148 <__assert_fail@plt+0x391c>
   1516c:	mov	r3, #0
   15170:	str	r3, [r8, #4]
   15174:	b	15118 <__assert_fail@plt+0x38ec>
   15178:	mov	r0, r8
   1517c:	bl	13854 <__assert_fail@plt+0x2028>
   15180:	ldr	r3, [r8, #48]	; 0x30
   15184:	cmp	r0, #0
   15188:	orrne	r3, r3, #8192	; 0x2000
   1518c:	strne	r3, [r8, #48]	; 0x30
   15190:	bne	150dc <__assert_fail@plt+0x38b0>
   15194:	movw	r2, #258	; 0x102
   15198:	ldr	r0, [r8, #56]	; 0x38
   1519c:	tst	r2, r3
   151a0:	beq	154e0 <__assert_fail@plt+0x3cb4>
   151a4:	cmp	r0, #0
   151a8:	beq	151b0 <__assert_fail@plt+0x3984>
   151ac:	bl	1658c <__assert_fail@plt+0x4d60>
   151b0:	ldr	r2, [r5, #52]	; 0x34
   151b4:	add	r4, r5, #168	; 0xa8
   151b8:	mov	r1, r4
   151bc:	ldr	r0, [r8, #24]
   151c0:	str	r2, [r5, #40]	; 0x28
   151c4:	add	r2, r2, #1
   151c8:	bl	11484 <memmove@plt>
   151cc:	mov	r0, r4
   151d0:	mov	r1, #47	; 0x2f
   151d4:	bl	11718 <strrchr@plt>
   151d8:	cmp	r0, #0
   151dc:	beq	1520c <__assert_fail@plt+0x39e0>
   151e0:	cmp	r4, r0
   151e4:	beq	15478 <__assert_fail@plt+0x3c4c>
   151e8:	add	r6, r0, #1
   151ec:	mov	r0, r6
   151f0:	bl	11658 <strlen@plt>
   151f4:	mov	r7, r0
   151f8:	mov	r1, r6
   151fc:	mov	r0, r4
   15200:	add	r2, r7, #1
   15204:	bl	11484 <memmove@plt>
   15208:	str	r7, [r5, #52]	; 0x34
   1520c:	ldr	r3, [r8, #24]
   15210:	movw	r1, #258	; 0x102
   15214:	ldr	r2, [r8, #48]	; 0x30
   15218:	str	r3, [r5, #24]
   1521c:	str	r3, [r5, #28]
   15220:	tst	r1, r2
   15224:	bne	15438 <__assert_fail@plt+0x3c0c>
   15228:	mov	r0, #32
   1522c:	bl	1c620 <lchmod@@Base+0x5460>
   15230:	cmp	r0, #0
   15234:	str	r0, [r8, #56]	; 0x38
   15238:	beq	15578 <__assert_fail@plt+0x3d4c>
   1523c:	bl	1c810 <lchmod@@Base+0x5650>
   15240:	mov	r4, r5
   15244:	ldrh	r3, [r5, #56]	; 0x38
   15248:	b	15298 <__assert_fail@plt+0x3a6c>
   1524c:	cmp	r3, #2
   15250:	beq	154f4 <__assert_fail@plt+0x3cc8>
   15254:	ldr	r0, [r4, #4]
   15258:	mov	ip, #47	; 0x2f
   1525c:	add	r1, r4, #168	; 0xa8
   15260:	ldr	r3, [r8, #24]
   15264:	ldr	lr, [r0, #28]
   15268:	ldr	r2, [r0, #40]	; 0x28
   1526c:	sub	r0, r2, #1
   15270:	ldrb	lr, [lr, r0]
   15274:	cmp	lr, ip
   15278:	movne	r0, r2
   1527c:	strb	ip, [r3, r0]
   15280:	add	r0, r3, r0
   15284:	ldr	r2, [r4, #52]	; 0x34
   15288:	add	r0, r0, #1
   1528c:	add	r2, r2, #1
   15290:	bl	11484 <memmove@plt>
   15294:	ldrh	r3, [r4, #56]	; 0x38
   15298:	cmp	r3, #11
   1529c:	str	r4, [r8]
   152a0:	beq	15310 <__assert_fail@plt+0x3ae4>
   152a4:	cmp	r3, #1
   152a8:	bne	150dc <__assert_fail@plt+0x38b0>
   152ac:	ldr	r3, [r4, #48]	; 0x30
   152b0:	add	r1, r8, #56	; 0x38
   152b4:	ldr	r0, [r8, #48]	; 0x30
   152b8:	cmp	r3, #0
   152bc:	ldrdeq	r2, [r4, #64]	; 0x40
   152c0:	strdeq	r2, [r8, #16]
   152c4:	mov	r2, r4
   152c8:	bl	136b4 <__assert_fail@plt+0x1e88>
   152cc:	subs	r5, r0, #0
   152d0:	bne	150dc <__assert_fail@plt+0x38b0>
   152d4:	bl	11688 <__errno_location@plt>
   152d8:	mov	r3, #12
   152dc:	mov	r4, r5
   152e0:	str	r3, [r0]
   152e4:	b	150dc <__assert_fail@plt+0x38b0>
   152e8:	mov	r3, #1
   152ec:	mov	r2, r4
   152f0:	ldr	r0, [r8, #32]
   152f4:	bl	13558 <__assert_fail@plt+0x1d2c>
   152f8:	cmp	r0, #1
   152fc:	strh	r0, [r4, #56]	; 0x38
   15300:	beq	1559c <__assert_fail@plt+0x3d70>
   15304:	cmp	r0, #11
   15308:	str	r4, [r8]
   1530c:	bne	150dc <__assert_fail@plt+0x38b0>
   15310:	ldrd	r2, [r4, #112]	; 0x70
   15314:	cmp	r3, #0
   15318:	cmpeq	r2, #2
   1531c:	beq	15524 <__assert_fail@plt+0x3cf8>
   15320:	cmp	r3, #0
   15324:	cmpeq	r2, #1
   15328:	beq	150dc <__assert_fail@plt+0x38b0>
   1532c:	bl	117d8 <abort@plt>
   15330:	mov	r2, r4
   15334:	ldr	r0, [r8, #32]
   15338:	bl	13558 <__assert_fail@plt+0x1d2c>
   1533c:	strh	r0, [r4, #56]	; 0x38
   15340:	b	150dc <__assert_fail@plt+0x38b0>
   15344:	bic	r1, r1, #4096	; 0x1000
   15348:	str	r1, [r8, #48]	; 0x30
   1534c:	b	15368 <__assert_fail@plt+0x3b3c>
   15350:	bl	11814 <closedir@plt>
   15354:	mov	r0, r5
   15358:	bl	13204 <__assert_fail@plt+0x19d8>
   1535c:	cmp	r6, #0
   15360:	beq	15388 <__assert_fail@plt+0x3b5c>
   15364:	mov	r5, r6
   15368:	ldr	r6, [r5, #8]
   1536c:	ldr	r0, [r5, #12]
   15370:	cmp	r0, #0
   15374:	bne	15350 <__assert_fail@plt+0x3b24>
   15378:	mov	r0, r5
   1537c:	bl	13204 <__assert_fail@plt+0x19d8>
   15380:	cmp	r6, #0
   15384:	bne	15364 <__assert_fail@plt+0x3b38>
   15388:	mov	r3, #0
   1538c:	str	r3, [r8, #4]
   15390:	mov	r1, #3
   15394:	mov	r0, r8
   15398:	bl	13bc0 <__assert_fail@plt+0x2394>
   1539c:	cmp	r0, #0
   153a0:	str	r0, [r8, #4]
   153a4:	movne	r4, r0
   153a8:	bne	15098 <__assert_fail@plt+0x386c>
   153ac:	ldr	r0, [r8, #48]	; 0x30
   153b0:	tst	r0, #8192	; 0x2000
   153b4:	bne	150d8 <__assert_fail@plt+0x38ac>
   153b8:	ldr	r3, [r4, #32]
   153bc:	cmp	r3, #0
   153c0:	beq	153d4 <__assert_fail@plt+0x3ba8>
   153c4:	ldrh	r3, [r4, #56]	; 0x38
   153c8:	cmp	r3, #4
   153cc:	movne	r3, #7
   153d0:	strhne	r3, [r4, #56]	; 0x38
   153d4:	add	r1, r8, #56	; 0x38
   153d8:	mov	r2, r4
   153dc:	bl	13788 <__assert_fail@plt+0x1f5c>
   153e0:	b	150dc <__assert_fail@plt+0x38b0>
   153e4:	tst	r3, #1
   153e8:	beq	15544 <__assert_fail@plt+0x3d18>
   153ec:	ldrh	r3, [r6, #56]	; 0x38
   153f0:	ldr	r0, [r8, #48]	; 0x30
   153f4:	cmp	r3, #2
   153f8:	beq	15428 <__assert_fail@plt+0x3bfc>
   153fc:	ldr	r2, [r6, #32]
   15400:	cmp	r2, #0
   15404:	movne	r3, #7
   15408:	strhne	r3, [r6, #56]	; 0x38
   1540c:	bne	15428 <__assert_fail@plt+0x3bfc>
   15410:	mov	r3, #6
   15414:	mov	r2, r6
   15418:	add	r1, r8, #56	; 0x38
   1541c:	strh	r3, [r6, #56]	; 0x38
   15420:	bl	13788 <__assert_fail@plt+0x1f5c>
   15424:	ldr	r0, [r8, #48]	; 0x30
   15428:	tst	r0, #8192	; 0x2000
   1542c:	moveq	r4, r6
   15430:	beq	150dc <__assert_fail@plt+0x38b0>
   15434:	b	150d8 <__assert_fail@plt+0x38ac>
   15438:	movw	r1, #12804	; 0x3204
   1543c:	movt	r1, #1
   15440:	movw	r3, #12900	; 0x3264
   15444:	movt	r3, #1
   15448:	movw	r2, #12964	; 0x32a4
   1544c:	movt	r2, #1
   15450:	str	r1, [sp]
   15454:	mov	r0, #31
   15458:	mov	r1, #0
   1545c:	bl	1624c <__assert_fail@plt+0x4a20>
   15460:	mov	r4, r5
   15464:	ldrh	r3, [r5, #56]	; 0x38
   15468:	str	r0, [r8, #56]	; 0x38
   1546c:	b	15298 <__assert_fail@plt+0x3a6c>
   15470:	ldr	r4, [r8, #4]
   15474:	b	15098 <__assert_fail@plt+0x386c>
   15478:	ldrb	r3, [r4, #1]
   1547c:	cmp	r3, #0
   15480:	beq	1520c <__assert_fail@plt+0x39e0>
   15484:	b	151e8 <__assert_fail@plt+0x39bc>
   15488:	mov	r0, r6
   1548c:	bl	13204 <__assert_fail@plt+0x19d8>
   15490:	bl	11688 <__errno_location@plt>
   15494:	mov	r3, #0
   15498:	mov	r4, r3
   1549c:	str	r3, [r0]
   154a0:	str	r3, [r8]
   154a4:	b	150dc <__assert_fail@plt+0x38b0>
   154a8:	ldr	r2, [r8, #24]
   154ac:	mov	r1, #3
   154b0:	mov	r0, r8
   154b4:	ldr	r3, [r6, #40]	; 0x28
   154b8:	str	r6, [r8]
   154bc:	strb	r5, [r2, r3]
   154c0:	bl	13bc0 <__assert_fail@plt+0x2394>
   154c4:	subs	r3, r0, #0
   154c8:	bne	15568 <__assert_fail@plt+0x3d3c>
   154cc:	ldr	r3, [r8, #48]	; 0x30
   154d0:	tst	r3, #8192	; 0x2000
   154d4:	bne	150d8 <__assert_fail@plt+0x38ac>
   154d8:	ldr	r6, [r4, #4]
   154dc:	b	14f4c <__assert_fail@plt+0x3720>
   154e0:	bl	13204 <__assert_fail@plt+0x19d8>
   154e4:	b	151b0 <__assert_fail@plt+0x3984>
   154e8:	ldr	r0, [r4, #36]	; 0x24
   154ec:	bl	117e4 <close@plt>
   154f0:	b	1510c <__assert_fail@plt+0x38e0>
   154f4:	mov	r3, #1
   154f8:	mov	r2, r5
   154fc:	ldr	r0, [r8, #32]
   15500:	ldr	r1, [r8, #48]	; 0x30
   15504:	bl	13558 <__assert_fail@plt+0x1d2c>
   15508:	cmp	r0, #1
   1550c:	strh	r0, [r5, #56]	; 0x38
   15510:	beq	155f4 <__assert_fail@plt+0x3dc8>
   15514:	mov	r3, #3
   15518:	mov	r4, r5
   1551c:	strh	r3, [r5, #60]	; 0x3c
   15520:	b	15254 <__assert_fail@plt+0x3a28>
   15524:	mov	r3, #0
   15528:	mov	r2, r4
   1552c:	ldr	r0, [r8, #32]
   15530:	ldr	r1, [r8, #48]	; 0x30
   15534:	bl	13558 <__assert_fail@plt+0x1d2c>
   15538:	mov	r3, r0
   1553c:	strh	r0, [r4, #56]	; 0x38
   15540:	b	152a4 <__assert_fail@plt+0x3a78>
   15544:	movw	r3, #55156	; 0xd774
   15548:	movt	r3, #1
   1554c:	ldr	r1, [r6, #4]
   15550:	mvn	r2, #0
   15554:	mov	r0, r8
   15558:	bl	13900 <__assert_fail@plt+0x20d4>
   1555c:	cmp	r0, #0
   15560:	beq	153ec <__assert_fail@plt+0x3bc0>
   15564:	b	150b4 <__assert_fail@plt+0x3888>
   15568:	mov	r0, r4
   1556c:	mov	r4, r3
   15570:	bl	13204 <__assert_fail@plt+0x19d8>
   15574:	b	15254 <__assert_fail@plt+0x3a28>
   15578:	ldrh	r3, [r5, #56]	; 0x38
   1557c:	mov	r4, r5
   15580:	b	15298 <__assert_fail@plt+0x3a6c>
   15584:	mov	r0, r4
   15588:	bl	11760 <fchdir@plt>
   1558c:	cmp	r0, #0
   15590:	bne	15644 <__assert_fail@plt+0x3e18>
   15594:	ldr	r4, [r6, #36]	; 0x24
   15598:	b	14fec <__assert_fail@plt+0x37c0>
   1559c:	ldr	r3, [r8, #48]	; 0x30
   155a0:	tst	r3, #4
   155a4:	strne	r4, [r8]
   155a8:	bne	152ac <__assert_fail@plt+0x3a80>
   155ac:	lsl	r2, r3, #11
   155b0:	tst	r3, #512	; 0x200
   155b4:	and	r2, r2, #32768	; 0x8000
   155b8:	orr	r2, r2, #540672	; 0x84000
   155bc:	orr	r2, r2, #2304	; 0x900
   155c0:	beq	15664 <__assert_fail@plt+0x3e38>
   155c4:	movw	r1, #55080	; 0xd728
   155c8:	movt	r1, #1
   155cc:	ldr	r0, [r8, #32]
   155d0:	bl	17870 <lchmod@@Base+0x6b0>
   155d4:	cmp	r0, #0
   155d8:	str	r0, [r4, #36]	; 0x24
   155dc:	blt	15678 <__assert_fail@plt+0x3e4c>
   155e0:	ldrh	r2, [r4, #58]	; 0x3a
   155e4:	ldrh	r3, [r4, #56]	; 0x38
   155e8:	orr	r2, r2, #2
   155ec:	strh	r2, [r4, #58]	; 0x3a
   155f0:	b	15298 <__assert_fail@plt+0x3a6c>
   155f4:	ldr	r3, [r8, #48]	; 0x30
   155f8:	tst	r3, #4
   155fc:	bne	15514 <__assert_fail@plt+0x3ce8>
   15600:	lsl	r2, r3, #11
   15604:	tst	r3, #512	; 0x200
   15608:	and	r2, r2, #32768	; 0x8000
   1560c:	orr	r2, r2, #540672	; 0x84000
   15610:	orr	r2, r2, #2304	; 0x900
   15614:	beq	15694 <__assert_fail@plt+0x3e68>
   15618:	movw	r1, #55080	; 0xd728
   1561c:	movt	r1, #1
   15620:	ldr	r0, [r8, #32]
   15624:	bl	17870 <lchmod@@Base+0x6b0>
   15628:	cmp	r0, #0
   1562c:	str	r0, [r5, #36]	; 0x24
   15630:	blt	156a8 <__assert_fail@plt+0x3e7c>
   15634:	ldrh	r3, [r5, #58]	; 0x3a
   15638:	orr	r3, r3, #2
   1563c:	strh	r3, [r5, #58]	; 0x3a
   15640:	b	15514 <__assert_fail@plt+0x3ce8>
   15644:	bl	11688 <__errno_location@plt>
   15648:	ldr	r3, [r8, #48]	; 0x30
   1564c:	ldr	r2, [r0]
   15650:	ldr	r4, [r6, #36]	; 0x24
   15654:	orr	r3, r3, #8192	; 0x2000
   15658:	str	r2, [r6, #32]
   1565c:	str	r3, [r8, #48]	; 0x30
   15660:	b	14fec <__assert_fail@plt+0x37c0>
   15664:	mov	r1, r2
   15668:	movw	r0, #55080	; 0xd728
   1566c:	movt	r0, #1
   15670:	bl	1cbcc <lchmod@@Base+0x5a0c>
   15674:	b	155d4 <__assert_fail@plt+0x3da8>
   15678:	bl	11688 <__errno_location@plt>
   1567c:	ldr	r3, [r0]
   15680:	mov	r2, #7
   15684:	str	r3, [r4, #32]
   15688:	strh	r2, [r4, #56]	; 0x38
   1568c:	str	r4, [r8]
   15690:	b	150dc <__assert_fail@plt+0x38b0>
   15694:	mov	r1, r2
   15698:	movw	r0, #55080	; 0xd728
   1569c:	movt	r0, #1
   156a0:	bl	1cbcc <lchmod@@Base+0x5a0c>
   156a4:	b	15628 <__assert_fail@plt+0x3dfc>
   156a8:	bl	11688 <__errno_location@plt>
   156ac:	ldr	r3, [r0]
   156b0:	mov	r2, #7
   156b4:	str	r3, [r5, #32]
   156b8:	strh	r2, [r5, #56]	; 0x38
   156bc:	b	15514 <__assert_fail@plt+0x3ce8>
   156c0:	cmp	r2, #4
   156c4:	bhi	156d8 <__assert_fail@plt+0x3eac>
   156c8:	mov	r3, #0
   156cc:	strh	r2, [r1, #60]	; 0x3c
   156d0:	mov	r0, r3
   156d4:	bx	lr
   156d8:	str	r4, [sp, #-8]!
   156dc:	str	lr, [sp, #4]
   156e0:	bl	11688 <__errno_location@plt>
   156e4:	mov	r2, #22
   156e8:	mov	r3, #1
   156ec:	ldr	r4, [sp]
   156f0:	add	sp, sp, #4
   156f4:	str	r2, [r0]
   156f8:	mov	r0, r3
   156fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15700:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15704:	mov	r5, r0
   15708:	strd	r6, [sp, #8]
   1570c:	strd	r8, [sp, #16]
   15710:	mov	r8, r1
   15714:	str	sl, [sp, #24]
   15718:	str	lr, [sp, #28]
   1571c:	bl	11688 <__errno_location@plt>
   15720:	bics	r2, r8, #4096	; 0x1000
   15724:	mov	r6, r0
   15728:	movne	r3, #22
   1572c:	movne	r0, #0
   15730:	strne	r3, [r6]
   15734:	bne	157fc <__assert_fail@plt+0x3fd0>
   15738:	ldr	r9, [r5]
   1573c:	str	r2, [r6]
   15740:	ldr	r3, [r5, #48]	; 0x30
   15744:	ands	r0, r3, #8192	; 0x2000
   15748:	bne	158ac <__assert_fail@plt+0x4080>
   1574c:	ldrh	r3, [r9, #56]	; 0x38
   15750:	cmp	r3, #9
   15754:	beq	158b4 <__assert_fail@plt+0x4088>
   15758:	cmp	r3, #1
   1575c:	bne	157fc <__assert_fail@plt+0x3fd0>
   15760:	ldr	r4, [r5, #4]
   15764:	cmp	r4, #0
   15768:	bne	15788 <__assert_fail@plt+0x3f5c>
   1576c:	b	157a8 <__assert_fail@plt+0x3f7c>
   15770:	bl	11814 <closedir@plt>
   15774:	mov	r0, r4
   15778:	bl	13204 <__assert_fail@plt+0x19d8>
   1577c:	cmp	r7, #0
   15780:	beq	157a8 <__assert_fail@plt+0x3f7c>
   15784:	mov	r4, r7
   15788:	ldr	r7, [r4, #8]
   1578c:	ldr	r0, [r4, #12]
   15790:	cmp	r0, #0
   15794:	bne	15770 <__assert_fail@plt+0x3f44>
   15798:	mov	r0, r4
   1579c:	bl	13204 <__assert_fail@plt+0x19d8>
   157a0:	cmp	r7, #0
   157a4:	bne	15784 <__assert_fail@plt+0x3f58>
   157a8:	cmp	r8, #4096	; 0x1000
   157ac:	movne	r4, #1
   157b0:	bne	157c4 <__assert_fail@plt+0x3f98>
   157b4:	ldr	r3, [r5, #48]	; 0x30
   157b8:	mov	r4, #2
   157bc:	orr	r3, r3, #4096	; 0x1000
   157c0:	str	r3, [r5, #48]	; 0x30
   157c4:	ldr	r3, [r9, #48]	; 0x30
   157c8:	cmp	r3, #0
   157cc:	bne	157ec <__assert_fail@plt+0x3fc0>
   157d0:	ldr	r3, [r9, #24]
   157d4:	ldrb	r3, [r3]
   157d8:	cmp	r3, #47	; 0x2f
   157dc:	beq	157ec <__assert_fail@plt+0x3fc0>
   157e0:	ldr	r3, [r5, #48]	; 0x30
   157e4:	tst	r3, #4
   157e8:	beq	15814 <__assert_fail@plt+0x3fe8>
   157ec:	mov	r1, r4
   157f0:	mov	r0, r5
   157f4:	bl	13bc0 <__assert_fail@plt+0x2394>
   157f8:	str	r0, [r5, #4]
   157fc:	ldrd	r4, [sp]
   15800:	ldrd	r6, [sp, #8]
   15804:	ldrd	r8, [sp, #16]
   15808:	ldr	sl, [sp, #24]
   1580c:	add	sp, sp, #28
   15810:	pop	{pc}		; (ldr pc, [sp], #4)
   15814:	lsl	r2, r3, #11
   15818:	tst	r3, #512	; 0x200
   1581c:	and	r2, r2, #32768	; 0x8000
   15820:	orr	r2, r2, #540672	; 0x84000
   15824:	orr	r2, r2, #2304	; 0x900
   15828:	beq	158bc <__assert_fail@plt+0x4090>
   1582c:	movw	r1, #55080	; 0xd728
   15830:	movt	r1, #1
   15834:	ldr	r0, [r5, #32]
   15838:	bl	17870 <lchmod@@Base+0x6b0>
   1583c:	mov	r7, r0
   15840:	cmp	r7, #0
   15844:	movlt	r3, #0
   15848:	movlt	r0, r3
   1584c:	strlt	r3, [r5, #4]
   15850:	blt	157fc <__assert_fail@plt+0x3fd0>
   15854:	mov	r1, r4
   15858:	mov	r0, r5
   1585c:	bl	13bc0 <__assert_fail@plt+0x2394>
   15860:	ldr	r3, [r5, #48]	; 0x30
   15864:	str	r0, [r5, #4]
   15868:	ands	r4, r3, #512	; 0x200
   1586c:	beq	158d4 <__assert_fail@plt+0x40a8>
   15870:	ldr	r1, [r5, #32]
   15874:	sub	r3, r7, r1
   15878:	cmn	r1, #100	; 0x64
   1587c:	clz	r3, r3
   15880:	lsr	r3, r3, #5
   15884:	moveq	r3, #0
   15888:	cmp	r3, #0
   1588c:	bne	1590c <__assert_fail@plt+0x40e0>
   15890:	add	r0, r5, #60	; 0x3c
   15894:	bl	17128 <__assert_fail@plt+0x58fc>
   15898:	cmp	r0, #0
   1589c:	blt	158a4 <__assert_fail@plt+0x4078>
   158a0:	bl	117e4 <close@plt>
   158a4:	str	r7, [r5, #32]
   158a8:	b	158ec <__assert_fail@plt+0x40c0>
   158ac:	mov	r0, r2
   158b0:	b	157fc <__assert_fail@plt+0x3fd0>
   158b4:	ldr	r0, [r9, #8]
   158b8:	b	157fc <__assert_fail@plt+0x3fd0>
   158bc:	mov	r1, r2
   158c0:	movw	r0, #55080	; 0xd728
   158c4:	movt	r0, #1
   158c8:	bl	1cbcc <lchmod@@Base+0x5a0c>
   158cc:	mov	r7, r0
   158d0:	b	15840 <__assert_fail@plt+0x4014>
   158d4:	mov	r0, r7
   158d8:	bl	11760 <fchdir@plt>
   158dc:	cmp	r0, #0
   158e0:	bne	158f4 <__assert_fail@plt+0x40c8>
   158e4:	mov	r0, r7
   158e8:	bl	117e4 <close@plt>
   158ec:	ldr	r0, [r5, #4]
   158f0:	b	157fc <__assert_fail@plt+0x3fd0>
   158f4:	ldr	r5, [r6]
   158f8:	mov	r0, r7
   158fc:	bl	117e4 <close@plt>
   15900:	mov	r0, r4
   15904:	str	r5, [r6]
   15908:	b	157fc <__assert_fail@plt+0x3fd0>
   1590c:	bl	117d8 <abort@plt>
   15910:	ror	r0, r0, #3
   15914:	udiv	r3, r0, r1
   15918:	mls	r0, r3, r1, r0
   1591c:	bx	lr
   15920:	sub	r0, r1, r0
   15924:	clz	r0, r0
   15928:	lsr	r0, r0, #5
   1592c:	bx	lr
   15930:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15934:	mov	r5, r1
   15938:	strd	r6, [sp, #8]
   1593c:	mov	r6, r0
   15940:	mov	r7, r3
   15944:	mov	r0, r1
   15948:	strd	r8, [sp, #16]
   1594c:	strd	sl, [sp, #24]
   15950:	mov	fp, r2
   15954:	str	lr, [sp, #32]
   15958:	sub	sp, sp, #4
   1595c:	ldr	r1, [r6, #8]
   15960:	ldr	r3, [r6, #24]
   15964:	blx	r3
   15968:	ldr	r3, [r6, #8]
   1596c:	cmp	r0, r3
   15970:	bcs	15a8c <__assert_fail@plt+0x4260>
   15974:	ldr	r8, [r6]
   15978:	lsl	r9, r0, #3
   1597c:	mov	sl, r0
   15980:	add	r4, r8, r9
   15984:	str	r4, [fp]
   15988:	ldr	r1, [r8, r0, lsl #3]
   1598c:	cmp	r1, #0
   15990:	beq	15a84 <__assert_fail@plt+0x4258>
   15994:	cmp	r1, r5
   15998:	beq	15a4c <__assert_fail@plt+0x4220>
   1599c:	mov	r0, r5
   159a0:	ldr	r3, [r6, #28]
   159a4:	blx	r3
   159a8:	cmp	r0, #0
   159ac:	bne	15a48 <__assert_fail@plt+0x421c>
   159b0:	ldr	r3, [r4, #4]
   159b4:	cmp	r3, #0
   159b8:	beq	15a84 <__assert_fail@plt+0x4258>
   159bc:	ldr	r1, [r3]
   159c0:	cmp	r5, r1
   159c4:	bne	159e8 <__assert_fail@plt+0x41bc>
   159c8:	b	15a04 <__assert_fail@plt+0x41d8>
   159cc:	ldr	r4, [r4, #4]
   159d0:	ldr	r3, [r4, #4]
   159d4:	cmp	r3, #0
   159d8:	beq	15a84 <__assert_fail@plt+0x4258>
   159dc:	ldr	r1, [r3]
   159e0:	cmp	r1, r5
   159e4:	beq	15a04 <__assert_fail@plt+0x41d8>
   159e8:	mov	r0, r5
   159ec:	ldr	r3, [r6, #28]
   159f0:	blx	r3
   159f4:	cmp	r0, #0
   159f8:	beq	159cc <__assert_fail@plt+0x41a0>
   159fc:	ldr	r3, [r4, #4]
   15a00:	ldr	r1, [r3]
   15a04:	cmp	r7, #0
   15a08:	beq	15a28 <__assert_fail@plt+0x41fc>
   15a0c:	ldr	r0, [r3, #4]
   15a10:	mov	r2, #0
   15a14:	str	r0, [r4, #4]
   15a18:	str	r2, [r3]
   15a1c:	ldr	r2, [r6, #36]	; 0x24
   15a20:	str	r2, [r3, #4]
   15a24:	str	r3, [r6, #36]	; 0x24
   15a28:	mov	r0, r1
   15a2c:	add	sp, sp, #4
   15a30:	ldrd	r4, [sp]
   15a34:	ldrd	r6, [sp, #8]
   15a38:	ldrd	r8, [sp, #16]
   15a3c:	ldrd	sl, [sp, #24]
   15a40:	add	sp, sp, #32
   15a44:	pop	{pc}		; (ldr pc, [sp], #4)
   15a48:	ldr	r1, [r8, sl, lsl #3]
   15a4c:	cmp	r7, #0
   15a50:	beq	15a28 <__assert_fail@plt+0x41fc>
   15a54:	ldr	r0, [r4, #4]
   15a58:	cmp	r0, #0
   15a5c:	streq	r0, [r8, sl, lsl #3]
   15a60:	beq	15a28 <__assert_fail@plt+0x41fc>
   15a64:	ldrd	r2, [r0]
   15a68:	mov	ip, #0
   15a6c:	strd	r2, [r8, r9]
   15a70:	str	ip, [r0]
   15a74:	ldr	r3, [r6, #36]	; 0x24
   15a78:	str	r3, [r0, #4]
   15a7c:	str	r0, [r6, #36]	; 0x24
   15a80:	b	15a28 <__assert_fail@plt+0x41fc>
   15a84:	mov	r1, #0
   15a88:	b	15a28 <__assert_fail@plt+0x41fc>
   15a8c:	bl	117d8 <abort@plt>
   15a90:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15a94:	ldr	r3, [r1, #4]
   15a98:	strd	r6, [sp, #8]
   15a9c:	ldr	r6, [r1]
   15aa0:	strd	r8, [sp, #16]
   15aa4:	str	sl, [sp, #24]
   15aa8:	str	lr, [sp, #28]
   15aac:	cmp	r6, r3
   15ab0:	bcs	15b90 <__assert_fail@plt+0x4364>
   15ab4:	mov	r8, r2
   15ab8:	mov	r5, r0
   15abc:	mov	r7, r1
   15ac0:	add	r6, r6, #8
   15ac4:	mov	r9, #0
   15ac8:	b	15ad8 <__assert_fail@plt+0x42ac>
   15acc:	cmp	r3, r6
   15ad0:	add	r6, r6, #8
   15ad4:	bls	15b90 <__assert_fail@plt+0x4364>
   15ad8:	ldr	sl, [r6, #-8]
   15adc:	cmp	sl, #0
   15ae0:	beq	15acc <__assert_fail@plt+0x42a0>
   15ae4:	ldr	r4, [r6, #-4]
   15ae8:	cmp	r4, #0
   15aec:	beq	15b74 <__assert_fail@plt+0x4348>
   15af0:	ldr	r1, [r5, #8]
   15af4:	b	15b10 <__assert_fail@plt+0x42e4>
   15af8:	ldr	r3, [ip, #4]
   15afc:	cmp	r2, #0
   15b00:	str	r3, [r4, #4]
   15b04:	str	r4, [ip, #4]
   15b08:	mov	r4, r2
   15b0c:	beq	15b70 <__assert_fail@plt+0x4344>
   15b10:	ldr	sl, [r4]
   15b14:	ldr	r3, [r5, #24]
   15b18:	mov	r0, sl
   15b1c:	blx	r3
   15b20:	ldr	r1, [r5, #8]
   15b24:	cmp	r0, r1
   15b28:	bcs	15c44 <__assert_fail@plt+0x4418>
   15b2c:	ldr	r3, [r5]
   15b30:	ldr	r2, [r4, #4]
   15b34:	ldr	lr, [r3, r0, lsl #3]
   15b38:	add	ip, r3, r0, lsl #3
   15b3c:	cmp	lr, #0
   15b40:	bne	15af8 <__assert_fail@plt+0x42cc>
   15b44:	ldr	ip, [r5, #12]
   15b48:	cmp	r2, #0
   15b4c:	str	sl, [r3, r0, lsl #3]
   15b50:	add	ip, ip, #1
   15b54:	str	ip, [r5, #12]
   15b58:	str	lr, [r4]
   15b5c:	ldr	r3, [r5, #36]	; 0x24
   15b60:	str	r3, [r4, #4]
   15b64:	str	r4, [r5, #36]	; 0x24
   15b68:	mov	r4, r2
   15b6c:	bne	15b10 <__assert_fail@plt+0x42e4>
   15b70:	ldr	sl, [r6, #-8]
   15b74:	cmp	r8, #0
   15b78:	str	r9, [r6, #-4]
   15b7c:	beq	15bac <__assert_fail@plt+0x4380>
   15b80:	ldr	r3, [r7, #4]
   15b84:	cmp	r3, r6
   15b88:	add	r6, r6, #8
   15b8c:	bhi	15ad8 <__assert_fail@plt+0x42ac>
   15b90:	mov	r0, #1
   15b94:	ldrd	r4, [sp]
   15b98:	ldrd	r6, [sp, #8]
   15b9c:	ldrd	r8, [sp, #16]
   15ba0:	ldr	sl, [sp, #24]
   15ba4:	add	sp, sp, #28
   15ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   15bac:	mov	r0, sl
   15bb0:	ldr	r1, [r5, #8]
   15bb4:	ldr	r3, [r5, #24]
   15bb8:	blx	r3
   15bbc:	ldr	r3, [r5, #8]
   15bc0:	cmp	r0, r3
   15bc4:	bcs	15c44 <__assert_fail@plt+0x4418>
   15bc8:	ldr	r3, [r5]
   15bcc:	ldr	r2, [r3, r0, lsl #3]
   15bd0:	add	r4, r3, r0, lsl #3
   15bd4:	cmp	r2, #0
   15bd8:	beq	15c18 <__assert_fail@plt+0x43ec>
   15bdc:	ldr	r0, [r5, #36]	; 0x24
   15be0:	cmp	r0, #0
   15be4:	beq	15c2c <__assert_fail@plt+0x4400>
   15be8:	ldr	r3, [r0, #4]
   15bec:	str	r3, [r5, #36]	; 0x24
   15bf0:	ldr	r3, [r4, #4]
   15bf4:	str	sl, [r0]
   15bf8:	str	r3, [r0, #4]
   15bfc:	str	r0, [r4, #4]
   15c00:	ldr	r2, [r7, #12]
   15c04:	str	r9, [r6, #-8]
   15c08:	ldr	r3, [r7, #4]
   15c0c:	sub	r2, r2, #1
   15c10:	str	r2, [r7, #12]
   15c14:	b	15acc <__assert_fail@plt+0x42a0>
   15c18:	ldr	r2, [r5, #12]
   15c1c:	str	sl, [r3, r0, lsl #3]
   15c20:	add	r2, r2, #1
   15c24:	str	r2, [r5, #12]
   15c28:	b	15c00 <__assert_fail@plt+0x43d4>
   15c2c:	mov	r0, #8
   15c30:	bl	1c620 <lchmod@@Base+0x5460>
   15c34:	cmp	r0, #0
   15c38:	bne	15bf0 <__assert_fail@plt+0x43c4>
   15c3c:	mov	r0, r8
   15c40:	b	15b94 <__assert_fail@plt+0x4368>
   15c44:	bl	117d8 <abort@plt>
   15c48:	ldr	r0, [r0, #8]
   15c4c:	bx	lr
   15c50:	ldr	r0, [r0, #12]
   15c54:	bx	lr
   15c58:	ldr	r0, [r0, #16]
   15c5c:	bx	lr
   15c60:	ldm	r0, {r1, r3}
   15c64:	cmp	r1, r3
   15c68:	bcs	15cdc <__assert_fail@plt+0x44b0>
   15c6c:	sub	ip, r3, #1
   15c70:	add	r3, r1, #16
   15c74:	sub	ip, ip, r1
   15c78:	mov	r0, #0
   15c7c:	bic	ip, ip, #7
   15c80:	add	r1, r1, #8
   15c84:	add	ip, ip, r3
   15c88:	b	15c98 <__assert_fail@plt+0x446c>
   15c8c:	add	r1, r1, #8
   15c90:	cmp	r1, ip
   15c94:	beq	15cd8 <__assert_fail@plt+0x44ac>
   15c98:	ldr	r3, [r1, #-8]
   15c9c:	cmp	r3, #0
   15ca0:	beq	15c8c <__assert_fail@plt+0x4460>
   15ca4:	ldr	r3, [r1, #-4]
   15ca8:	mov	r2, #1
   15cac:	cmp	r3, #0
   15cb0:	beq	15cc4 <__assert_fail@plt+0x4498>
   15cb4:	ldr	r3, [r3, #4]
   15cb8:	add	r2, r2, #1
   15cbc:	cmp	r3, #0
   15cc0:	bne	15cb4 <__assert_fail@plt+0x4488>
   15cc4:	cmp	r0, r2
   15cc8:	add	r1, r1, #8
   15ccc:	movcc	r0, r2
   15cd0:	cmp	r1, ip
   15cd4:	bne	15c98 <__assert_fail@plt+0x446c>
   15cd8:	bx	lr
   15cdc:	mov	r0, #0
   15ce0:	bx	lr
   15ce4:	ldm	r0, {r1, r3}
   15ce8:	push	{lr}		; (str lr, [sp, #-4]!)
   15cec:	cmp	r1, r3
   15cf0:	bcs	15d84 <__assert_fail@plt+0x4558>
   15cf4:	sub	ip, r3, #1
   15cf8:	mov	r2, #0
   15cfc:	sub	ip, ip, r1
   15d00:	add	r3, r1, #16
   15d04:	bic	ip, ip, #7
   15d08:	add	r1, r1, #8
   15d0c:	add	ip, ip, r3
   15d10:	mov	lr, r2
   15d14:	b	15d24 <__assert_fail@plt+0x44f8>
   15d18:	add	r1, r1, #8
   15d1c:	cmp	r1, ip
   15d20:	beq	15d60 <__assert_fail@plt+0x4534>
   15d24:	ldr	r3, [r1, #-8]
   15d28:	cmp	r3, #0
   15d2c:	beq	15d18 <__assert_fail@plt+0x44ec>
   15d30:	ldr	r3, [r1, #-4]
   15d34:	add	lr, lr, #1
   15d38:	add	r2, r2, #1
   15d3c:	cmp	r3, #0
   15d40:	beq	15d18 <__assert_fail@plt+0x44ec>
   15d44:	ldr	r3, [r3, #4]
   15d48:	add	r2, r2, #1
   15d4c:	cmp	r3, #0
   15d50:	bne	15d44 <__assert_fail@plt+0x4518>
   15d54:	add	r1, r1, #8
   15d58:	cmp	r1, ip
   15d5c:	bne	15d24 <__assert_fail@plt+0x44f8>
   15d60:	ldr	r3, [r0, #12]
   15d64:	cmp	r3, lr
   15d68:	movne	r0, #0
   15d6c:	bne	15d80 <__assert_fail@plt+0x4554>
   15d70:	ldr	r0, [r0, #16]
   15d74:	sub	r0, r0, r2
   15d78:	clz	r0, r0
   15d7c:	lsr	r0, r0, #5
   15d80:	pop	{pc}		; (ldr pc, [sp], #4)
   15d84:	mov	r2, #0
   15d88:	mov	lr, r2
   15d8c:	b	15d60 <__assert_fail@plt+0x4534>
   15d90:	strd	r4, [sp, #-20]!	; 0xffffffec
   15d94:	mov	r4, r1
   15d98:	ldr	r2, [r0]
   15d9c:	ldr	r1, [r0, #4]
   15da0:	ldr	r3, [r0, #16]
   15da4:	strd	r6, [sp, #8]
   15da8:	str	lr, [sp, #16]
   15dac:	sub	sp, sp, #12
   15db0:	cmp	r2, r1
   15db4:	ldrd	r6, [r0, #8]
   15db8:	bcs	15eb8 <__assert_fail@plt+0x468c>
   15dbc:	sub	ip, r1, #1
   15dc0:	add	r1, r2, #16
   15dc4:	sub	ip, ip, r2
   15dc8:	add	r0, r2, #8
   15dcc:	bic	ip, ip, #7
   15dd0:	mov	r5, #0
   15dd4:	add	ip, ip, r1
   15dd8:	b	15de8 <__assert_fail@plt+0x45bc>
   15ddc:	add	r0, r0, #8
   15de0:	cmp	r0, ip
   15de4:	beq	15e28 <__assert_fail@plt+0x45fc>
   15de8:	ldr	r2, [r0, #-8]
   15dec:	cmp	r2, #0
   15df0:	beq	15ddc <__assert_fail@plt+0x45b0>
   15df4:	ldr	r2, [r0, #-4]
   15df8:	mov	r1, #1
   15dfc:	cmp	r2, #0
   15e00:	beq	15e14 <__assert_fail@plt+0x45e8>
   15e04:	ldr	r2, [r2, #4]
   15e08:	add	r1, r1, #1
   15e0c:	cmp	r2, #0
   15e10:	bne	15e04 <__assert_fail@plt+0x45d8>
   15e14:	cmp	r5, r1
   15e18:	add	r0, r0, #8
   15e1c:	movcc	r5, r1
   15e20:	cmp	r0, ip
   15e24:	bne	15de8 <__assert_fail@plt+0x45bc>
   15e28:	mov	r1, #1
   15e2c:	mov	r0, r4
   15e30:	movw	r2, #55180	; 0xd78c
   15e34:	movt	r2, #1
   15e38:	bl	116d0 <__fprintf_chk@plt>
   15e3c:	mov	r3, r6
   15e40:	mov	r1, #1
   15e44:	mov	r0, r4
   15e48:	movw	r2, #55204	; 0xd7a4
   15e4c:	movt	r2, #1
   15e50:	bl	116d0 <__fprintf_chk@plt>
   15e54:	vmov	s15, r7
   15e58:	mov	r3, r7
   15e5c:	mov	r1, #1
   15e60:	vldr	d5, [pc, #88]	; 15ec0 <__assert_fail@plt+0x4694>
   15e64:	mov	r0, r4
   15e68:	movw	r2, #55228	; 0xd7bc
   15e6c:	movt	r2, #1
   15e70:	vcvt.f64.u32	d6, s15
   15e74:	vmov	s15, r6
   15e78:	vmul.f64	d6, d6, d5
   15e7c:	vcvt.f64.u32	d7, s15
   15e80:	vdiv.f64	d5, d6, d7
   15e84:	vstr	d5, [sp]
   15e88:	bl	116d0 <__fprintf_chk@plt>
   15e8c:	mov	r3, r5
   15e90:	mov	r0, r4
   15e94:	movw	r2, #55264	; 0xd7e0
   15e98:	movt	r2, #1
   15e9c:	mov	r1, #1
   15ea0:	add	sp, sp, #12
   15ea4:	ldrd	r4, [sp]
   15ea8:	ldrd	r6, [sp, #8]
   15eac:	ldr	lr, [sp, #16]
   15eb0:	add	sp, sp, #20
   15eb4:	b	116d0 <__fprintf_chk@plt>
   15eb8:	mov	r5, #0
   15ebc:	b	15e28 <__assert_fail@plt+0x45fc>
   15ec0:	andeq	r0, r0, r0
   15ec4:	subsmi	r0, r9, r0
   15ec8:	strd	r4, [sp, #-16]!
   15ecc:	mov	r5, r1
   15ed0:	str	r6, [sp, #8]
   15ed4:	mov	r6, r0
   15ed8:	mov	r0, r1
   15edc:	str	lr, [sp, #12]
   15ee0:	ldr	r1, [r6, #8]
   15ee4:	ldr	r3, [r6, #24]
   15ee8:	blx	r3
   15eec:	ldr	r3, [r6, #8]
   15ef0:	cmp	r0, r3
   15ef4:	bcs	15f64 <__assert_fail@plt+0x4738>
   15ef8:	ldr	r4, [r6]
   15efc:	ldr	r1, [r4, r0, lsl #3]
   15f00:	add	r4, r4, r0, lsl #3
   15f04:	cmp	r1, #0
   15f08:	beq	15f44 <__assert_fail@plt+0x4718>
   15f0c:	cmp	r1, r5
   15f10:	bne	15f24 <__assert_fail@plt+0x46f8>
   15f14:	b	15f48 <__assert_fail@plt+0x471c>
   15f18:	ldr	r1, [r4]
   15f1c:	cmp	r5, r1
   15f20:	beq	15f48 <__assert_fail@plt+0x471c>
   15f24:	mov	r0, r5
   15f28:	ldr	r3, [r6, #28]
   15f2c:	blx	r3
   15f30:	cmp	r0, #0
   15f34:	bne	15f5c <__assert_fail@plt+0x4730>
   15f38:	ldr	r4, [r4, #4]
   15f3c:	cmp	r4, #0
   15f40:	bne	15f18 <__assert_fail@plt+0x46ec>
   15f44:	mov	r1, #0
   15f48:	ldrd	r4, [sp]
   15f4c:	mov	r0, r1
   15f50:	ldr	r6, [sp, #8]
   15f54:	add	sp, sp, #12
   15f58:	pop	{pc}		; (ldr pc, [sp], #4)
   15f5c:	ldr	r1, [r4]
   15f60:	b	15f48 <__assert_fail@plt+0x471c>
   15f64:	bl	117d8 <abort@plt>
   15f68:	ldr	r3, [r0, #16]
   15f6c:	cmp	r3, #0
   15f70:	beq	15fc4 <__assert_fail@plt+0x4798>
   15f74:	ldr	r3, [r0]
   15f78:	ldr	r2, [r0, #4]
   15f7c:	cmp	r3, r2
   15f80:	bcs	15fb8 <__assert_fail@plt+0x478c>
   15f84:	ldr	r0, [r3]
   15f88:	cmp	r0, #0
   15f8c:	bxne	lr
   15f90:	sub	r2, r2, #1
   15f94:	sub	r2, r2, r3
   15f98:	bic	r2, r2, #7
   15f9c:	add	r2, r3, r2
   15fa0:	b	15fb0 <__assert_fail@plt+0x4784>
   15fa4:	ldr	r0, [r3, #8]!
   15fa8:	cmp	r0, #0
   15fac:	bxne	lr
   15fb0:	cmp	r3, r2
   15fb4:	bne	15fa4 <__assert_fail@plt+0x4778>
   15fb8:	str	r4, [sp, #-8]!
   15fbc:	str	lr, [sp, #4]
   15fc0:	bl	117d8 <abort@plt>
   15fc4:	mov	r0, r3
   15fc8:	bx	lr
   15fcc:	strd	r4, [sp, #-16]!
   15fd0:	mov	r5, r0
   15fd4:	mov	r4, r1
   15fd8:	mov	r0, r1
   15fdc:	ldr	r1, [r5, #8]
   15fe0:	ldr	r3, [r5, #24]
   15fe4:	str	r6, [sp, #8]
   15fe8:	str	lr, [sp, #12]
   15fec:	blx	r3
   15ff0:	ldr	r3, [r5, #8]
   15ff4:	cmp	r0, r3
   15ff8:	bcs	16060 <__assert_fail@plt+0x4834>
   15ffc:	ldr	r2, [r5]
   16000:	add	r2, r2, r0, lsl #3
   16004:	mov	r3, r2
   16008:	b	16014 <__assert_fail@plt+0x47e8>
   1600c:	cmp	r3, #0
   16010:	beq	1602c <__assert_fail@plt+0x4800>
   16014:	ldm	r3, {r1, r3}
   16018:	cmp	r1, r4
   1601c:	bne	1600c <__assert_fail@plt+0x47e0>
   16020:	cmp	r3, #0
   16024:	ldrne	r0, [r3]
   16028:	bne	16050 <__assert_fail@plt+0x4824>
   1602c:	ldr	r3, [r5, #4]
   16030:	b	16040 <__assert_fail@plt+0x4814>
   16034:	ldr	r0, [r2]
   16038:	cmp	r0, #0
   1603c:	bne	16050 <__assert_fail@plt+0x4824>
   16040:	add	r2, r2, #8
   16044:	cmp	r3, r2
   16048:	bhi	16034 <__assert_fail@plt+0x4808>
   1604c:	mov	r0, #0
   16050:	ldrd	r4, [sp]
   16054:	ldr	r6, [sp, #8]
   16058:	add	sp, sp, #12
   1605c:	pop	{pc}		; (ldr pc, [sp], #4)
   16060:	bl	117d8 <abort@plt>
   16064:	strd	r4, [sp, #-16]!
   16068:	mov	r3, #0
   1606c:	ldr	r5, [r0]
   16070:	str	r6, [sp, #8]
   16074:	str	lr, [sp, #12]
   16078:	ldr	lr, [r0, #4]
   1607c:	cmp	lr, r5
   16080:	bls	1609c <__assert_fail@plt+0x4870>
   16084:	ldr	ip, [r5]
   16088:	cmp	ip, #0
   1608c:	bne	160b0 <__assert_fail@plt+0x4884>
   16090:	add	r5, r5, #8
   16094:	cmp	r5, lr
   16098:	bcc	16084 <__assert_fail@plt+0x4858>
   1609c:	ldrd	r4, [sp]
   160a0:	mov	r0, r3
   160a4:	ldr	r6, [sp, #8]
   160a8:	add	sp, sp, #12
   160ac:	pop	{pc}		; (ldr pc, [sp], #4)
   160b0:	cmp	r2, r3
   160b4:	bls	1609c <__assert_fail@plt+0x4870>
   160b8:	str	ip, [r1, r3, lsl #2]
   160bc:	add	r4, r3, #1
   160c0:	lsl	lr, r3, #2
   160c4:	ldr	ip, [r5, #4]
   160c8:	cmp	ip, #0
   160cc:	beq	1612c <__assert_fail@plt+0x4900>
   160d0:	cmp	r2, r4
   160d4:	bls	16120 <__assert_fail@plt+0x48f4>
   160d8:	ldr	r6, [ip]
   160dc:	add	r3, r3, #2
   160e0:	str	r6, [r1, r4, lsl #2]
   160e4:	ldr	ip, [ip, #4]
   160e8:	cmp	ip, #0
   160ec:	beq	16118 <__assert_fail@plt+0x48ec>
   160f0:	add	lr, lr, #4
   160f4:	add	lr, r1, lr
   160f8:	cmp	r2, r3
   160fc:	add	r3, r3, #1
   16100:	beq	16124 <__assert_fail@plt+0x48f8>
   16104:	ldr	r4, [ip]
   16108:	str	r4, [lr, #4]!
   1610c:	ldr	ip, [ip, #4]
   16110:	cmp	ip, #0
   16114:	bne	160f8 <__assert_fail@plt+0x48cc>
   16118:	ldr	lr, [r0, #4]
   1611c:	b	16090 <__assert_fail@plt+0x4864>
   16120:	mov	r2, r4
   16124:	mov	r3, r2
   16128:	b	1609c <__assert_fail@plt+0x4870>
   1612c:	mov	r3, r4
   16130:	ldr	lr, [r0, #4]
   16134:	b	16090 <__assert_fail@plt+0x4864>
   16138:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1613c:	ldr	r3, [r0, #4]
   16140:	strd	r6, [sp, #8]
   16144:	strd	r8, [sp, #16]
   16148:	ldr	r8, [r0]
   1614c:	str	sl, [sp, #24]
   16150:	str	lr, [sp, #28]
   16154:	cmp	r3, r8
   16158:	bls	161d4 <__assert_fail@plt+0x49a8>
   1615c:	mov	r7, r2
   16160:	mov	r6, r1
   16164:	mov	r9, r0
   16168:	mov	r5, #0
   1616c:	ldr	r0, [r8]
   16170:	cmp	r0, #0
   16174:	bne	161a0 <__assert_fail@plt+0x4974>
   16178:	add	r8, r8, #8
   1617c:	cmp	r8, r3
   16180:	bcc	1616c <__assert_fail@plt+0x4940>
   16184:	mov	r0, r5
   16188:	ldrd	r4, [sp]
   1618c:	ldrd	r6, [sp, #8]
   16190:	ldrd	r8, [sp, #16]
   16194:	ldr	sl, [sp, #24]
   16198:	add	sp, sp, #28
   1619c:	pop	{pc}		; (ldr pc, [sp], #4)
   161a0:	mov	r4, r8
   161a4:	b	161ac <__assert_fail@plt+0x4980>
   161a8:	ldr	r0, [r4]
   161ac:	mov	r1, r7
   161b0:	blx	r6
   161b4:	cmp	r0, #0
   161b8:	beq	16184 <__assert_fail@plt+0x4958>
   161bc:	ldr	r4, [r4, #4]
   161c0:	add	r5, r5, #1
   161c4:	cmp	r4, #0
   161c8:	bne	161a8 <__assert_fail@plt+0x497c>
   161cc:	ldr	r3, [r9, #4]
   161d0:	b	16178 <__assert_fail@plt+0x494c>
   161d4:	mov	r5, #0
   161d8:	b	16184 <__assert_fail@plt+0x4958>
   161dc:	ldrb	r2, [r0]
   161e0:	cmp	r2, #0
   161e4:	beq	16210 <__assert_fail@plt+0x49e4>
   161e8:	mov	r3, #0
   161ec:	rsb	r3, r3, r3, lsl #5
   161f0:	add	r3, r3, r2
   161f4:	ldrb	r2, [r0, #1]!
   161f8:	udiv	ip, r3, r1
   161fc:	cmp	r2, #0
   16200:	mls	r3, r1, ip, r3
   16204:	bne	161ec <__assert_fail@plt+0x49c0>
   16208:	mov	r0, r3
   1620c:	bx	lr
   16210:	mov	r3, r2
   16214:	mov	r0, r3
   16218:	bx	lr
   1621c:	movw	r3, #55160	; 0xd778
   16220:	movt	r3, #1
   16224:	strd	r4, [sp, #-8]!
   16228:	ldrd	r4, [r3]
   1622c:	ldr	r1, [r3, #16]
   16230:	ldrd	r2, [r3, #8]
   16234:	strd	r4, [r0]
   16238:	ldrd	r4, [sp]
   1623c:	add	sp, sp, #8
   16240:	strd	r2, [r0, #8]
   16244:	str	r1, [r0, #16]
   16248:	bx	lr
   1624c:	cmp	r2, #0
   16250:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16254:	movw	r4, #22800	; 0x5910
   16258:	movt	r4, #1
   1625c:	movne	r4, r2
   16260:	strd	r6, [sp, #8]
   16264:	cmp	r3, #0
   16268:	str	r8, [sp, #16]
   1626c:	mov	r8, r0
   16270:	mov	r0, #40	; 0x28
   16274:	movw	r5, #22816	; 0x5920
   16278:	movt	r5, #1
   1627c:	mov	r7, r1
   16280:	str	lr, [sp, #20]
   16284:	movne	r5, r3
   16288:	bl	1c620 <lchmod@@Base+0x5460>
   1628c:	subs	r6, r0, #0
   16290:	beq	162d4 <__assert_fail@plt+0x4aa8>
   16294:	cmp	r7, #0
   16298:	movw	r3, #55160	; 0xd778
   1629c:	movt	r3, #1
   162a0:	beq	16360 <__assert_fail@plt+0x4b34>
   162a4:	cmp	r7, r3
   162a8:	str	r7, [r6, #20]
   162ac:	beq	16364 <__assert_fail@plt+0x4b38>
   162b0:	vldr	s14, [pc, #456]	; 16480 <__assert_fail@plt+0x4c54>
   162b4:	vldr	s15, [r7, #8]
   162b8:	vcmpe.f32	s15, s14
   162bc:	vmrs	APSR_nzcv, fpscr
   162c0:	bgt	162ec <__assert_fail@plt+0x4ac0>
   162c4:	str	r3, [r6, #20]
   162c8:	mov	r0, r6
   162cc:	mov	r6, #0
   162d0:	bl	13204 <__assert_fail@plt+0x19d8>
   162d4:	mov	r0, r6
   162d8:	ldrd	r4, [sp]
   162dc:	ldrd	r6, [sp, #8]
   162e0:	ldr	r8, [sp, #16]
   162e4:	add	sp, sp, #20
   162e8:	pop	{pc}		; (ldr pc, [sp], #4)
   162ec:	vldr	s13, [pc, #400]	; 16484 <__assert_fail@plt+0x4c58>
   162f0:	vcmpe.f32	s15, s13
   162f4:	vmrs	APSR_nzcv, fpscr
   162f8:	bpl	162c4 <__assert_fail@plt+0x4a98>
   162fc:	vldr	s13, [pc, #388]	; 16488 <__assert_fail@plt+0x4c5c>
   16300:	vldr	s12, [r7, #12]
   16304:	vcmpe.f32	s12, s13
   16308:	vmrs	APSR_nzcv, fpscr
   1630c:	ble	162c4 <__assert_fail@plt+0x4a98>
   16310:	vldr	s13, [r7]
   16314:	vcmpe.f32	s13, #0.0
   16318:	vmrs	APSR_nzcv, fpscr
   1631c:	blt	162c4 <__assert_fail@plt+0x4a98>
   16320:	vadd.f32	s14, s13, s14
   16324:	vldr	s13, [r7, #4]
   16328:	vcmpe.f32	s14, s13
   1632c:	vmrs	APSR_nzcv, fpscr
   16330:	bpl	162c4 <__assert_fail@plt+0x4a98>
   16334:	vldr	s12, [pc, #336]	; 1648c <__assert_fail@plt+0x4c60>
   16338:	vcmpe.f32	s13, s12
   1633c:	vmrs	APSR_nzcv, fpscr
   16340:	bhi	162c4 <__assert_fail@plt+0x4a98>
   16344:	vcmpe.f32	s15, s14
   16348:	vmrs	APSR_nzcv, fpscr
   1634c:	ble	162c4 <__assert_fail@plt+0x4a98>
   16350:	ldrb	r3, [r7, #16]
   16354:	cmp	r3, #0
   16358:	bne	1638c <__assert_fail@plt+0x4b60>
   1635c:	b	16368 <__assert_fail@plt+0x4b3c>
   16360:	str	r3, [r6, #20]
   16364:	vldr	s15, [pc, #292]	; 16490 <__assert_fail@plt+0x4c64>
   16368:	vmov	s14, r8
   1636c:	vldr	s13, [pc, #288]	; 16494 <__assert_fail@plt+0x4c68>
   16370:	vcvt.f32.u32	s12, s14
   16374:	vdiv.f32	s14, s12, s15
   16378:	vcmpe.f32	s14, s13
   1637c:	vmrs	APSR_nzcv, fpscr
   16380:	bge	16414 <__assert_fail@plt+0x4be8>
   16384:	vcvt.u32.f32	s15, s14
   16388:	vmov	r8, s15
   1638c:	cmp	r8, #10
   16390:	movcs	r3, r8
   16394:	movcc	r3, #10
   16398:	orr	r3, r3, #1
   1639c:	cmn	r3, #1
   163a0:	beq	16414 <__assert_fail@plt+0x4be8>
   163a4:	movw	lr, #43691	; 0xaaab
   163a8:	movt	lr, #43690	; 0xaaaa
   163ac:	umull	r1, r2, lr, r3
   163b0:	cmp	r3, #9
   163b4:	lsr	r2, r2, #1
   163b8:	add	r2, r2, r2, lsl #1
   163bc:	sub	r2, r3, r2
   163c0:	bls	16400 <__assert_fail@plt+0x4bd4>
   163c4:	cmp	r2, #0
   163c8:	beq	16408 <__assert_fail@plt+0x4bdc>
   163cc:	mov	ip, #16
   163d0:	mov	r0, #9
   163d4:	mov	r1, #3
   163d8:	b	163e4 <__assert_fail@plt+0x4bb8>
   163dc:	cmp	r2, #0
   163e0:	beq	16408 <__assert_fail@plt+0x4bdc>
   163e4:	add	r1, r1, #2
   163e8:	add	r0, r0, ip
   163ec:	cmp	r0, r3
   163f0:	add	ip, ip, #8
   163f4:	udiv	r2, r3, r1
   163f8:	mls	r2, r1, r2, r3
   163fc:	bcc	163dc <__assert_fail@plt+0x4bb0>
   16400:	cmp	r2, #0
   16404:	bne	16420 <__assert_fail@plt+0x4bf4>
   16408:	add	r3, r3, #2
   1640c:	cmn	r3, #1
   16410:	bne	163ac <__assert_fail@plt+0x4b80>
   16414:	mov	r3, #0
   16418:	str	r3, [r6, #8]
   1641c:	b	162c8 <__assert_fail@plt+0x4a9c>
   16420:	lsrs	r2, r3, #30
   16424:	movne	r7, #1
   16428:	moveq	r7, #0
   1642c:	tst	r3, #536870912	; 0x20000000
   16430:	bne	16414 <__assert_fail@plt+0x4be8>
   16434:	cmp	r7, #0
   16438:	bne	16414 <__assert_fail@plt+0x4be8>
   1643c:	mov	r0, r3
   16440:	mov	r1, #8
   16444:	str	r3, [r6, #8]
   16448:	bl	1c5ac <lchmod@@Base+0x53ec>
   1644c:	cmp	r0, #0
   16450:	str	r0, [r6]
   16454:	beq	162c8 <__assert_fail@plt+0x4a9c>
   16458:	ldr	r3, [r6, #8]
   1645c:	str	r7, [r6, #12]
   16460:	str	r7, [r6, #16]
   16464:	strd	r4, [r6, #24]
   16468:	str	r7, [r6, #36]	; 0x24
   1646c:	add	r0, r0, r3, lsl #3
   16470:	ldr	r3, [sp, #24]
   16474:	str	r0, [r6, #4]
   16478:	str	r3, [r6, #32]
   1647c:	b	162d4 <__assert_fail@plt+0x4aa8>
   16480:	stclcc	12, cr12, [ip, #820]	; 0x334
   16484:	svccc	0x00666666
   16488:	svccc	0x008ccccd
   1648c:	svccc	0x00800000
   16490:	svccc	0x004ccccd
   16494:	svcmi	0x00800000
   16498:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1649c:	mov	r5, r0
   164a0:	ldr	r2, [r0, #4]
   164a4:	strd	r6, [sp, #8]
   164a8:	ldr	r6, [r0]
   164ac:	str	r8, [sp, #16]
   164b0:	str	lr, [sp, #20]
   164b4:	cmp	r6, r2
   164b8:	addcc	r6, r6, #8
   164bc:	movcc	r7, #0
   164c0:	bcc	164d4 <__assert_fail@plt+0x4ca8>
   164c4:	b	16548 <__assert_fail@plt+0x4d1c>
   164c8:	cmp	r2, r6
   164cc:	add	r6, r6, #8
   164d0:	bls	16548 <__assert_fail@plt+0x4d1c>
   164d4:	ldr	r3, [r6, #-8]
   164d8:	cmp	r3, #0
   164dc:	beq	164c8 <__assert_fail@plt+0x4c9c>
   164e0:	ldr	r4, [r6, #-4]
   164e4:	ldr	r3, [r5, #32]
   164e8:	cmp	r4, #0
   164ec:	beq	16520 <__assert_fail@plt+0x4cf4>
   164f0:	cmp	r3, #0
   164f4:	beq	16568 <__assert_fail@plt+0x4d3c>
   164f8:	ldr	r0, [r4]
   164fc:	blx	r3
   16500:	ldr	r1, [r4, #4]
   16504:	ldr	r3, [r5, #32]
   16508:	ldr	r2, [r5, #36]	; 0x24
   1650c:	str	r7, [r4]
   16510:	str	r2, [r4, #4]
   16514:	str	r4, [r5, #36]	; 0x24
   16518:	subs	r4, r1, #0
   1651c:	bne	164f0 <__assert_fail@plt+0x4cc4>
   16520:	cmp	r3, #0
   16524:	beq	16530 <__assert_fail@plt+0x4d04>
   16528:	ldr	r0, [r6, #-8]
   1652c:	blx	r3
   16530:	str	r7, [r6, #-8]
   16534:	str	r7, [r6, #-4]
   16538:	ldr	r2, [r5, #4]
   1653c:	cmp	r2, r6
   16540:	add	r6, r6, #8
   16544:	bhi	164d4 <__assert_fail@plt+0x4ca8>
   16548:	mov	r3, #0
   1654c:	ldrd	r6, [sp, #8]
   16550:	ldr	r8, [sp, #16]
   16554:	str	r3, [r5, #12]
   16558:	str	r3, [r5, #16]
   1655c:	ldrd	r4, [sp]
   16560:	add	sp, sp, #20
   16564:	pop	{pc}		; (ldr pc, [sp], #4)
   16568:	ldr	r2, [r5, #36]	; 0x24
   1656c:	str	r7, [r4]
   16570:	ldr	r3, [r4, #4]
   16574:	str	r2, [r4, #4]
   16578:	mov	r2, r4
   1657c:	str	r2, [r5, #36]	; 0x24
   16580:	subs	r4, r3, #0
   16584:	bne	1656c <__assert_fail@plt+0x4d40>
   16588:	b	16530 <__assert_fail@plt+0x4d04>
   1658c:	strd	r4, [sp, #-16]!
   16590:	ldr	r2, [r0, #32]
   16594:	ldr	r5, [r0]
   16598:	ldr	r3, [r0, #4]
   1659c:	cmp	r2, #0
   165a0:	str	r6, [sp, #8]
   165a4:	mov	r6, r0
   165a8:	str	lr, [sp, #12]
   165ac:	beq	16614 <__assert_fail@plt+0x4de8>
   165b0:	ldr	r2, [r0, #16]
   165b4:	cmp	r2, #0
   165b8:	beq	16614 <__assert_fail@plt+0x4de8>
   165bc:	cmp	r5, r3
   165c0:	bcc	165d4 <__assert_fail@plt+0x4da8>
   165c4:	b	16648 <__assert_fail@plt+0x4e1c>
   165c8:	add	r5, r5, #8
   165cc:	cmp	r5, r3
   165d0:	bcs	16610 <__assert_fail@plt+0x4de4>
   165d4:	ldr	r0, [r5]
   165d8:	cmp	r0, #0
   165dc:	beq	165c8 <__assert_fail@plt+0x4d9c>
   165e0:	mov	r4, r5
   165e4:	b	165ec <__assert_fail@plt+0x4dc0>
   165e8:	ldr	r0, [r4]
   165ec:	ldr	r3, [r6, #32]
   165f0:	blx	r3
   165f4:	ldr	r4, [r4, #4]
   165f8:	cmp	r4, #0
   165fc:	bne	165e8 <__assert_fail@plt+0x4dbc>
   16600:	ldr	r3, [r6, #4]
   16604:	add	r5, r5, #8
   16608:	cmp	r5, r3
   1660c:	bcc	165d4 <__assert_fail@plt+0x4da8>
   16610:	ldr	r5, [r6]
   16614:	cmp	r3, r5
   16618:	bls	16648 <__assert_fail@plt+0x4e1c>
   1661c:	ldr	r0, [r5, #4]
   16620:	cmp	r0, #0
   16624:	beq	1663c <__assert_fail@plt+0x4e10>
   16628:	ldr	r4, [r0, #4]
   1662c:	bl	13204 <__assert_fail@plt+0x19d8>
   16630:	subs	r0, r4, #0
   16634:	bne	16628 <__assert_fail@plt+0x4dfc>
   16638:	ldr	r3, [r6, #4]
   1663c:	add	r5, r5, #8
   16640:	cmp	r5, r3
   16644:	bcc	1661c <__assert_fail@plt+0x4df0>
   16648:	ldr	r0, [r6, #36]	; 0x24
   1664c:	cmp	r0, #0
   16650:	beq	16664 <__assert_fail@plt+0x4e38>
   16654:	ldr	r4, [r0, #4]
   16658:	bl	13204 <__assert_fail@plt+0x19d8>
   1665c:	subs	r0, r4, #0
   16660:	bne	16654 <__assert_fail@plt+0x4e28>
   16664:	ldr	r0, [r6]
   16668:	bl	13204 <__assert_fail@plt+0x19d8>
   1666c:	mov	r0, r6
   16670:	ldrd	r4, [sp]
   16674:	ldr	r6, [sp, #8]
   16678:	ldr	lr, [sp, #12]
   1667c:	add	sp, sp, #16
   16680:	b	13204 <__assert_fail@plt+0x19d8>
   16684:	ldr	r3, [r0, #20]
   16688:	strd	r4, [sp, #-20]!	; 0xffffffec
   1668c:	mov	r5, r0
   16690:	ldrb	r2, [r3, #16]
   16694:	strd	r6, [sp, #8]
   16698:	str	lr, [sp, #16]
   1669c:	sub	sp, sp, #44	; 0x2c
   166a0:	cmp	r2, #0
   166a4:	bne	166d0 <__assert_fail@plt+0x4ea4>
   166a8:	vmov	s15, r1
   166ac:	vldr	s12, [r3, #8]
   166b0:	vldr	s13, [pc, #444]	; 16874 <__assert_fail@plt+0x5048>
   166b4:	vcvt.f32.u32	s15, s15
   166b8:	vdiv.f32	s14, s15, s12
   166bc:	vcmpe.f32	s14, s13
   166c0:	vmrs	APSR_nzcv, fpscr
   166c4:	vcvtlt.u32.f32	s15, s14
   166c8:	vmovlt	r1, s15
   166cc:	bge	16754 <__assert_fail@plt+0x4f28>
   166d0:	cmp	r1, #10
   166d4:	movcc	r1, #10
   166d8:	orr	r4, r1, #1
   166dc:	cmn	r4, #1
   166e0:	beq	16754 <__assert_fail@plt+0x4f28>
   166e4:	movw	ip, #43691	; 0xaaab
   166e8:	movt	ip, #43690	; 0xaaaa
   166ec:	umull	r2, r3, ip, r4
   166f0:	cmp	r4, #9
   166f4:	lsr	r3, r3, #1
   166f8:	add	r3, r3, r3, lsl #1
   166fc:	sub	r3, r4, r3
   16700:	bls	16740 <__assert_fail@plt+0x4f14>
   16704:	cmp	r3, #0
   16708:	beq	16748 <__assert_fail@plt+0x4f1c>
   1670c:	mov	r0, #16
   16710:	mov	r1, #9
   16714:	mov	r2, #3
   16718:	b	16728 <__assert_fail@plt+0x4efc>
   1671c:	cmp	r3, #0
   16720:	add	r0, r0, #8
   16724:	beq	16748 <__assert_fail@plt+0x4f1c>
   16728:	add	r2, r2, #2
   1672c:	add	r1, r1, r0
   16730:	cmp	r1, r4
   16734:	udiv	r3, r4, r2
   16738:	mls	r3, r2, r3, r4
   1673c:	bcc	1671c <__assert_fail@plt+0x4ef0>
   16740:	cmp	r3, #0
   16744:	bne	16770 <__assert_fail@plt+0x4f44>
   16748:	add	r4, r4, #2
   1674c:	cmn	r4, #1
   16750:	bne	166ec <__assert_fail@plt+0x4ec0>
   16754:	mov	r4, #0
   16758:	mov	r0, r4
   1675c:	add	sp, sp, #44	; 0x2c
   16760:	ldrd	r4, [sp]
   16764:	ldrd	r6, [sp, #8]
   16768:	add	sp, sp, #16
   1676c:	pop	{pc}		; (ldr pc, [sp], #4)
   16770:	lsrs	r3, r4, #30
   16774:	movne	r6, #1
   16778:	moveq	r6, #0
   1677c:	tst	r4, #536870912	; 0x20000000
   16780:	bne	16754 <__assert_fail@plt+0x4f28>
   16784:	cmp	r6, #0
   16788:	bne	16754 <__assert_fail@plt+0x4f28>
   1678c:	ldr	r3, [r5, #8]
   16790:	cmp	r3, r4
   16794:	beq	1683c <__assert_fail@plt+0x5010>
   16798:	mov	r1, #8
   1679c:	mov	r0, r4
   167a0:	bl	1c5ac <lchmod@@Base+0x53ec>
   167a4:	cmp	r0, #0
   167a8:	str	r0, [sp]
   167ac:	beq	16754 <__assert_fail@plt+0x4f28>
   167b0:	add	r3, r0, r4, lsl #3
   167b4:	ldr	r7, [r5, #20]
   167b8:	mov	r2, r6
   167bc:	mov	r0, sp
   167c0:	mov	r1, r5
   167c4:	ldr	lr, [r5, #28]
   167c8:	stmib	sp, {r3, r4, r6}
   167cc:	ldr	r4, [r5, #24]
   167d0:	strd	r6, [sp, #16]
   167d4:	ldr	ip, [r5, #32]
   167d8:	ldr	r3, [r5, #36]	; 0x24
   167dc:	str	r4, [sp, #24]
   167e0:	str	lr, [sp, #28]
   167e4:	str	ip, [sp, #32]
   167e8:	str	r3, [sp, #36]	; 0x24
   167ec:	bl	15a90 <__assert_fail@plt+0x4264>
   167f0:	subs	r4, r0, #0
   167f4:	bne	16844 <__assert_fail@plt+0x5018>
   167f8:	ldr	r3, [sp, #36]	; 0x24
   167fc:	mov	r2, #1
   16800:	mov	r1, sp
   16804:	mov	r0, r5
   16808:	str	r3, [r5, #36]	; 0x24
   1680c:	bl	15a90 <__assert_fail@plt+0x4264>
   16810:	cmp	r0, #0
   16814:	beq	16870 <__assert_fail@plt+0x5044>
   16818:	mov	r1, sp
   1681c:	mov	r0, r5
   16820:	mov	r2, r4
   16824:	bl	15a90 <__assert_fail@plt+0x4264>
   16828:	cmp	r0, #0
   1682c:	beq	16870 <__assert_fail@plt+0x5044>
   16830:	ldr	r0, [sp]
   16834:	bl	13204 <__assert_fail@plt+0x19d8>
   16838:	b	16758 <__assert_fail@plt+0x4f2c>
   1683c:	mov	r4, #1
   16840:	b	16758 <__assert_fail@plt+0x4f2c>
   16844:	ldr	r0, [r5]
   16848:	bl	13204 <__assert_fail@plt+0x19d8>
   1684c:	ldrd	r2, [sp]
   16850:	ldr	r1, [sp, #8]
   16854:	strd	r2, [r5]
   16858:	ldr	r2, [sp, #12]
   1685c:	str	r1, [r5, #8]
   16860:	ldr	r3, [sp, #36]	; 0x24
   16864:	str	r2, [r5, #12]
   16868:	str	r3, [r5, #36]	; 0x24
   1686c:	b	16758 <__assert_fail@plt+0x4f2c>
   16870:	bl	117d8 <abort@plt>
   16874:	svcmi	0x00800000
   16878:	strd	r4, [sp, #-16]!
   1687c:	str	r6, [sp, #8]
   16880:	subs	r6, r1, #0
   16884:	str	lr, [sp, #12]
   16888:	sub	sp, sp, #8
   1688c:	beq	16a18 <__assert_fail@plt+0x51ec>
   16890:	mov	r3, #0
   16894:	mov	r5, r2
   16898:	add	r2, sp, #4
   1689c:	mov	r4, r0
   168a0:	bl	15930 <__assert_fail@plt+0x4104>
   168a4:	subs	r3, r0, #0
   168a8:	beq	168d4 <__assert_fail@plt+0x50a8>
   168ac:	cmp	r5, #0
   168b0:	moveq	r0, r5
   168b4:	beq	168c0 <__assert_fail@plt+0x5094>
   168b8:	mov	r0, #0
   168bc:	str	r3, [r5]
   168c0:	add	sp, sp, #8
   168c4:	ldrd	r4, [sp]
   168c8:	ldr	r6, [sp, #8]
   168cc:	add	sp, sp, #12
   168d0:	pop	{pc}		; (ldr pc, [sp], #4)
   168d4:	vldr	s15, [r4, #8]
   168d8:	vldr	s14, [r4, #12]
   168dc:	ldr	r3, [r4, #20]
   168e0:	vcvt.f32.u32	s15, s15
   168e4:	vcvt.f32.u32	s14, s14
   168e8:	vldr	s13, [r3, #8]
   168ec:	vmul.f32	s12, s13, s15
   168f0:	vcmpe.f32	s14, s12
   168f4:	vmrs	APSR_nzcv, fpscr
   168f8:	bgt	16940 <__assert_fail@plt+0x5114>
   168fc:	ldr	r2, [sp, #4]
   16900:	ldr	r3, [r2]
   16904:	cmp	r3, #0
   16908:	beq	16a44 <__assert_fail@plt+0x5218>
   1690c:	ldr	r3, [r4, #36]	; 0x24
   16910:	cmp	r3, #0
   16914:	beq	16a68 <__assert_fail@plt+0x523c>
   16918:	ldr	r1, [r3, #4]
   1691c:	str	r1, [r4, #36]	; 0x24
   16920:	ldr	r1, [r4, #16]
   16924:	mov	r0, #1
   16928:	ldr	ip, [r2, #4]
   1692c:	add	r1, r1, r0
   16930:	stm	r3, {r6, ip}
   16934:	str	r3, [r2, #4]
   16938:	str	r1, [r4, #16]
   1693c:	b	168c0 <__assert_fail@plt+0x5094>
   16940:	movw	r2, #55160	; 0xd778
   16944:	movt	r2, #1
   16948:	cmp	r3, r2
   1694c:	beq	16a80 <__assert_fail@plt+0x5254>
   16950:	vldr	s12, [pc, #320]	; 16a98 <__assert_fail@plt+0x526c>
   16954:	vcmpe.f32	s13, s12
   16958:	vmrs	APSR_nzcv, fpscr
   1695c:	ble	16a1c <__assert_fail@plt+0x51f0>
   16960:	vldr	s11, [pc, #308]	; 16a9c <__assert_fail@plt+0x5270>
   16964:	vcmpe.f32	s13, s11
   16968:	vmrs	APSR_nzcv, fpscr
   1696c:	bpl	16a1c <__assert_fail@plt+0x51f0>
   16970:	vldr	s10, [pc, #296]	; 16aa0 <__assert_fail@plt+0x5274>
   16974:	vldr	s11, [r3, #12]
   16978:	vcmpe.f32	s11, s10
   1697c:	vmrs	APSR_nzcv, fpscr
   16980:	ble	16a1c <__assert_fail@plt+0x51f0>
   16984:	vldr	s10, [r3]
   16988:	vcmpe.f32	s10, #0.0
   1698c:	vmrs	APSR_nzcv, fpscr
   16990:	blt	16a1c <__assert_fail@plt+0x51f0>
   16994:	vadd.f32	s12, s10, s12
   16998:	vldr	s10, [r3, #4]
   1699c:	vcmpe.f32	s12, s10
   169a0:	vmrs	APSR_nzcv, fpscr
   169a4:	bpl	16a1c <__assert_fail@plt+0x51f0>
   169a8:	vldr	s9, [pc, #244]	; 16aa4 <__assert_fail@plt+0x5278>
   169ac:	vcmpe.f32	s10, s9
   169b0:	vmrs	APSR_nzcv, fpscr
   169b4:	bhi	16a1c <__assert_fail@plt+0x51f0>
   169b8:	vcmpe.f32	s13, s12
   169bc:	vmrs	APSR_nzcv, fpscr
   169c0:	ble	16a1c <__assert_fail@plt+0x51f0>
   169c4:	ldrb	r3, [r3, #16]
   169c8:	vmul.f32	s15, s15, s11
   169cc:	cmp	r3, #0
   169d0:	beq	16a3c <__assert_fail@plt+0x5210>
   169d4:	vldr	s14, [pc, #204]	; 16aa8 <__assert_fail@plt+0x527c>
   169d8:	vcmpe.f32	s15, s14
   169dc:	vmrs	APSR_nzcv, fpscr
   169e0:	bge	16a78 <__assert_fail@plt+0x524c>
   169e4:	vcvt.u32.f32	s15, s15
   169e8:	mov	r0, r4
   169ec:	vmov	r1, s15
   169f0:	bl	16684 <__assert_fail@plt+0x4e58>
   169f4:	cmp	r0, #0
   169f8:	beq	16a78 <__assert_fail@plt+0x524c>
   169fc:	add	r2, sp, #4
   16a00:	mov	r3, #0
   16a04:	mov	r1, r6
   16a08:	mov	r0, r4
   16a0c:	bl	15930 <__assert_fail@plt+0x4104>
   16a10:	cmp	r0, #0
   16a14:	beq	168fc <__assert_fail@plt+0x50d0>
   16a18:	bl	117d8 <abort@plt>
   16a1c:	vldr	s13, [pc, #136]	; 16aac <__assert_fail@plt+0x5280>
   16a20:	str	r2, [r4, #20]
   16a24:	vmul.f32	s12, s15, s13
   16a28:	vcmpe.f32	s14, s12
   16a2c:	vmrs	APSR_nzcv, fpscr
   16a30:	ble	168fc <__assert_fail@plt+0x50d0>
   16a34:	vldr	s14, [pc, #116]	; 16ab0 <__assert_fail@plt+0x5284>
   16a38:	vmul.f32	s15, s15, s14
   16a3c:	vmul.f32	s15, s15, s13
   16a40:	b	169d4 <__assert_fail@plt+0x51a8>
   16a44:	ldr	r1, [r4, #12]
   16a48:	mov	r0, #1
   16a4c:	ldr	r3, [r4, #16]
   16a50:	str	r6, [r2]
   16a54:	add	r2, r1, r0
   16a58:	add	r3, r3, r0
   16a5c:	str	r2, [r4, #12]
   16a60:	str	r3, [r4, #16]
   16a64:	b	168c0 <__assert_fail@plt+0x5094>
   16a68:	mov	r0, #8
   16a6c:	bl	1c620 <lchmod@@Base+0x5460>
   16a70:	subs	r3, r0, #0
   16a74:	bne	16a90 <__assert_fail@plt+0x5264>
   16a78:	mvn	r0, #0
   16a7c:	b	168c0 <__assert_fail@plt+0x5094>
   16a80:	vldr	s14, [pc, #40]	; 16ab0 <__assert_fail@plt+0x5284>
   16a84:	vldr	s13, [pc, #32]	; 16aac <__assert_fail@plt+0x5280>
   16a88:	vmul.f32	s15, s15, s14
   16a8c:	b	16a3c <__assert_fail@plt+0x5210>
   16a90:	ldr	r2, [sp, #4]
   16a94:	b	16920 <__assert_fail@plt+0x50f4>
   16a98:	stclcc	12, cr12, [ip, #820]	; 0x334
   16a9c:	svccc	0x00666666
   16aa0:	svccc	0x008ccccd
   16aa4:	svccc	0x00800000
   16aa8:	svcmi	0x00800000
   16aac:	svccc	0x004ccccd
   16ab0:	svccc	0x00b4fdf4
   16ab4:	strd	r4, [sp, #-16]!
   16ab8:	str	r6, [sp, #8]
   16abc:	subs	r6, r1, #0
   16ac0:	str	lr, [sp, #12]
   16ac4:	sub	sp, sp, #8
   16ac8:	beq	16c44 <__assert_fail@plt+0x5418>
   16acc:	mov	r3, #0
   16ad0:	add	r2, sp, #4
   16ad4:	mov	r4, r0
   16ad8:	bl	15930 <__assert_fail@plt+0x4104>
   16adc:	subs	r5, r0, #0
   16ae0:	beq	16afc <__assert_fail@plt+0x52d0>
   16ae4:	mov	r0, r5
   16ae8:	add	sp, sp, #8
   16aec:	ldrd	r4, [sp]
   16af0:	ldr	r6, [sp, #8]
   16af4:	add	sp, sp, #12
   16af8:	pop	{pc}		; (ldr pc, [sp], #4)
   16afc:	vldr	s15, [r4, #8]
   16b00:	vldr	s14, [r4, #12]
   16b04:	ldr	r3, [r4, #20]
   16b08:	vcvt.f32.u32	s15, s15
   16b0c:	vcvt.f32.u32	s14, s14
   16b10:	vldr	s13, [r3, #8]
   16b14:	vmul.f32	s12, s13, s15
   16b18:	vcmpe.f32	s14, s12
   16b1c:	vmrs	APSR_nzcv, fpscr
   16b20:	bgt	16b6c <__assert_fail@plt+0x5340>
   16b24:	ldr	r3, [sp, #4]
   16b28:	ldr	r2, [r3]
   16b2c:	cmp	r2, #0
   16b30:	beq	16c70 <__assert_fail@plt+0x5444>
   16b34:	ldr	r0, [r4, #36]	; 0x24
   16b38:	cmp	r0, #0
   16b3c:	beq	16c94 <__assert_fail@plt+0x5468>
   16b40:	ldr	r2, [r0, #4]
   16b44:	str	r2, [r4, #36]	; 0x24
   16b48:	ldr	r2, [r4, #16]
   16b4c:	mov	r5, r6
   16b50:	ldr	r1, [r3, #4]
   16b54:	str	r6, [r0]
   16b58:	add	r2, r2, #1
   16b5c:	str	r1, [r0, #4]
   16b60:	str	r0, [r3, #4]
   16b64:	str	r2, [r4, #16]
   16b68:	b	16ae4 <__assert_fail@plt+0x52b8>
   16b6c:	movw	r2, #55160	; 0xd778
   16b70:	movt	r2, #1
   16b74:	cmp	r3, r2
   16b78:	beq	16cac <__assert_fail@plt+0x5480>
   16b7c:	vldr	s12, [pc, #312]	; 16cbc <__assert_fail@plt+0x5490>
   16b80:	vcmpe.f32	s13, s12
   16b84:	vmrs	APSR_nzcv, fpscr
   16b88:	ble	16c48 <__assert_fail@plt+0x541c>
   16b8c:	vldr	s11, [pc, #300]	; 16cc0 <__assert_fail@plt+0x5494>
   16b90:	vcmpe.f32	s13, s11
   16b94:	vmrs	APSR_nzcv, fpscr
   16b98:	bpl	16c48 <__assert_fail@plt+0x541c>
   16b9c:	vldr	s10, [pc, #288]	; 16cc4 <__assert_fail@plt+0x5498>
   16ba0:	vldr	s11, [r3, #12]
   16ba4:	vcmpe.f32	s11, s10
   16ba8:	vmrs	APSR_nzcv, fpscr
   16bac:	ble	16c48 <__assert_fail@plt+0x541c>
   16bb0:	vldr	s10, [r3]
   16bb4:	vcmpe.f32	s10, #0.0
   16bb8:	vmrs	APSR_nzcv, fpscr
   16bbc:	blt	16c48 <__assert_fail@plt+0x541c>
   16bc0:	vadd.f32	s12, s10, s12
   16bc4:	vldr	s10, [r3, #4]
   16bc8:	vcmpe.f32	s12, s10
   16bcc:	vmrs	APSR_nzcv, fpscr
   16bd0:	bpl	16c48 <__assert_fail@plt+0x541c>
   16bd4:	vldr	s9, [pc, #236]	; 16cc8 <__assert_fail@plt+0x549c>
   16bd8:	vcmpe.f32	s10, s9
   16bdc:	vmrs	APSR_nzcv, fpscr
   16be0:	bhi	16c48 <__assert_fail@plt+0x541c>
   16be4:	vcmpe.f32	s13, s12
   16be8:	vmrs	APSR_nzcv, fpscr
   16bec:	ble	16c48 <__assert_fail@plt+0x541c>
   16bf0:	ldrb	r3, [r3, #16]
   16bf4:	vmul.f32	s15, s15, s11
   16bf8:	cmp	r3, #0
   16bfc:	beq	16c68 <__assert_fail@plt+0x543c>
   16c00:	vldr	s14, [pc, #196]	; 16ccc <__assert_fail@plt+0x54a0>
   16c04:	vcmpe.f32	s15, s14
   16c08:	vmrs	APSR_nzcv, fpscr
   16c0c:	bge	16ae4 <__assert_fail@plt+0x52b8>
   16c10:	vcvt.u32.f32	s15, s15
   16c14:	mov	r0, r4
   16c18:	vmov	r1, s15
   16c1c:	bl	16684 <__assert_fail@plt+0x4e58>
   16c20:	cmp	r0, #0
   16c24:	beq	16ae4 <__assert_fail@plt+0x52b8>
   16c28:	add	r2, sp, #4
   16c2c:	mov	r3, #0
   16c30:	mov	r1, r6
   16c34:	mov	r0, r4
   16c38:	bl	15930 <__assert_fail@plt+0x4104>
   16c3c:	cmp	r0, #0
   16c40:	beq	16b24 <__assert_fail@plt+0x52f8>
   16c44:	bl	117d8 <abort@plt>
   16c48:	vldr	s13, [pc, #128]	; 16cd0 <__assert_fail@plt+0x54a4>
   16c4c:	str	r2, [r4, #20]
   16c50:	vmul.f32	s12, s15, s13
   16c54:	vcmpe.f32	s14, s12
   16c58:	vmrs	APSR_nzcv, fpscr
   16c5c:	ble	16b24 <__assert_fail@plt+0x52f8>
   16c60:	vldr	s14, [pc, #108]	; 16cd4 <__assert_fail@plt+0x54a8>
   16c64:	vmul.f32	s15, s15, s14
   16c68:	vmul.f32	s15, s15, s13
   16c6c:	b	16c00 <__assert_fail@plt+0x53d4>
   16c70:	ldr	r2, [r4, #12]
   16c74:	mov	r5, r6
   16c78:	str	r6, [r3]
   16c7c:	ldr	r3, [r4, #16]
   16c80:	add	r2, r2, #1
   16c84:	add	r3, r3, #1
   16c88:	str	r2, [r4, #12]
   16c8c:	str	r3, [r4, #16]
   16c90:	b	16ae4 <__assert_fail@plt+0x52b8>
   16c94:	mov	r0, #8
   16c98:	bl	1c620 <lchmod@@Base+0x5460>
   16c9c:	cmp	r0, #0
   16ca0:	beq	16ae4 <__assert_fail@plt+0x52b8>
   16ca4:	ldr	r3, [sp, #4]
   16ca8:	b	16b48 <__assert_fail@plt+0x531c>
   16cac:	vldr	s14, [pc, #32]	; 16cd4 <__assert_fail@plt+0x54a8>
   16cb0:	vldr	s13, [pc, #24]	; 16cd0 <__assert_fail@plt+0x54a4>
   16cb4:	vmul.f32	s15, s15, s14
   16cb8:	b	16c68 <__assert_fail@plt+0x543c>
   16cbc:	stclcc	12, cr12, [ip, #820]	; 0x334
   16cc0:	svccc	0x00666666
   16cc4:	svccc	0x008ccccd
   16cc8:	svccc	0x00800000
   16ccc:	svcmi	0x00800000
   16cd0:	svccc	0x004ccccd
   16cd4:	svccc	0x00b4fdf4
   16cd8:	strd	r4, [sp, #-16]!
   16cdc:	mov	r3, #1
   16ce0:	mov	r4, r0
   16ce4:	str	r6, [sp, #8]
   16ce8:	str	lr, [sp, #12]
   16cec:	sub	sp, sp, #8
   16cf0:	add	r2, sp, #4
   16cf4:	bl	15930 <__assert_fail@plt+0x4104>
   16cf8:	subs	r5, r0, #0
   16cfc:	beq	16d1c <__assert_fail@plt+0x54f0>
   16d00:	ldr	r2, [sp, #4]
   16d04:	ldr	r3, [r4, #16]
   16d08:	ldr	r2, [r2]
   16d0c:	sub	r3, r3, #1
   16d10:	str	r3, [r4, #16]
   16d14:	cmp	r2, #0
   16d18:	beq	16d34 <__assert_fail@plt+0x5508>
   16d1c:	mov	r0, r5
   16d20:	add	sp, sp, #8
   16d24:	ldrd	r4, [sp]
   16d28:	ldr	r6, [sp, #8]
   16d2c:	add	sp, sp, #12
   16d30:	pop	{pc}		; (ldr pc, [sp], #4)
   16d34:	vldr	s15, [r4, #8]
   16d38:	ldr	r3, [r4, #12]
   16d3c:	ldr	r2, [r4, #20]
   16d40:	vcvt.f32.u32	s15, s15
   16d44:	sub	r3, r3, #1
   16d48:	vmov	s14, r3
   16d4c:	vldr	s13, [r2]
   16d50:	str	r3, [r4, #12]
   16d54:	vmul.f32	s12, s13, s15
   16d58:	vcvt.f32.u32	s14, s14
   16d5c:	vcmpe.f32	s14, s12
   16d60:	vmrs	APSR_nzcv, fpscr
   16d64:	bpl	16d1c <__assert_fail@plt+0x54f0>
   16d68:	movw	r3, #55160	; 0xd778
   16d6c:	movt	r3, #1
   16d70:	cmp	r2, r3
   16d74:	beq	16e54 <__assert_fail@plt+0x5628>
   16d78:	vldr	s11, [pc, #224]	; 16e60 <__assert_fail@plt+0x5634>
   16d7c:	vldr	s12, [r2, #8]
   16d80:	vcmpe.f32	s12, s11
   16d84:	vmrs	APSR_nzcv, fpscr
   16d88:	ble	16e3c <__assert_fail@plt+0x5610>
   16d8c:	vldr	s10, [pc, #208]	; 16e64 <__assert_fail@plt+0x5638>
   16d90:	vcmpe.f32	s12, s10
   16d94:	vmrs	APSR_nzcv, fpscr
   16d98:	bpl	16e3c <__assert_fail@plt+0x5610>
   16d9c:	vldr	s10, [pc, #196]	; 16e68 <__assert_fail@plt+0x563c>
   16da0:	vldr	s9, [r2, #12]
   16da4:	vcmpe.f32	s9, s10
   16da8:	vmrs	APSR_nzcv, fpscr
   16dac:	ble	16e3c <__assert_fail@plt+0x5610>
   16db0:	vcmpe.f32	s13, #0.0
   16db4:	vmrs	APSR_nzcv, fpscr
   16db8:	blt	16e3c <__assert_fail@plt+0x5610>
   16dbc:	vadd.f32	s13, s13, s11
   16dc0:	vldr	s11, [r2, #4]
   16dc4:	vcmpe.f32	s13, s11
   16dc8:	vmrs	APSR_nzcv, fpscr
   16dcc:	bpl	16e3c <__assert_fail@plt+0x5610>
   16dd0:	vldr	s10, [pc, #148]	; 16e6c <__assert_fail@plt+0x5640>
   16dd4:	vcmpe.f32	s11, s10
   16dd8:	vmrs	APSR_nzcv, fpscr
   16ddc:	bhi	16e3c <__assert_fail@plt+0x5610>
   16de0:	vcmpe.f32	s12, s13
   16de4:	vmrs	APSR_nzcv, fpscr
   16de8:	ble	16e3c <__assert_fail@plt+0x5610>
   16dec:	ldrb	r3, [r2, #16]
   16df0:	vmul.f32	s15, s15, s11
   16df4:	cmp	r3, #0
   16df8:	beq	16e58 <__assert_fail@plt+0x562c>
   16dfc:	vcvt.u32.f32	s15, s15
   16e00:	mov	r0, r4
   16e04:	vmov	r1, s15
   16e08:	bl	16684 <__assert_fail@plt+0x4e58>
   16e0c:	cmp	r0, #0
   16e10:	bne	16d1c <__assert_fail@plt+0x54f0>
   16e14:	ldr	r0, [r4, #36]	; 0x24
   16e18:	cmp	r0, #0
   16e1c:	beq	16e30 <__assert_fail@plt+0x5604>
   16e20:	ldr	r6, [r0, #4]
   16e24:	bl	13204 <__assert_fail@plt+0x19d8>
   16e28:	subs	r0, r6, #0
   16e2c:	bne	16e20 <__assert_fail@plt+0x55f4>
   16e30:	mov	r3, #0
   16e34:	str	r3, [r4, #36]	; 0x24
   16e38:	b	16d1c <__assert_fail@plt+0x54f0>
   16e3c:	vldr	s13, [pc, #44]	; 16e70 <__assert_fail@plt+0x5644>
   16e40:	str	r3, [r4, #20]
   16e44:	vmul.f32	s13, s15, s13
   16e48:	vcmpe.f32	s14, s13
   16e4c:	vmrs	APSR_nzcv, fpscr
   16e50:	bpl	16d1c <__assert_fail@plt+0x54f0>
   16e54:	vldr	s12, [pc, #24]	; 16e74 <__assert_fail@plt+0x5648>
   16e58:	vmul.f32	s15, s15, s12
   16e5c:	b	16dfc <__assert_fail@plt+0x55d0>
   16e60:	stclcc	12, cr12, [ip, #820]	; 0x334
   16e64:	svccc	0x00666666
   16e68:	svccc	0x008ccccd
   16e6c:	svccc	0x00800000
   16e70:	andeq	r0, r0, r0
   16e74:	svccc	0x004ccccd
   16e78:	strd	r4, [sp, #-16]!
   16e7c:	mov	r3, #1
   16e80:	mov	r4, r0
   16e84:	str	r6, [sp, #8]
   16e88:	str	lr, [sp, #12]
   16e8c:	sub	sp, sp, #8
   16e90:	add	r2, sp, #4
   16e94:	bl	15930 <__assert_fail@plt+0x4104>
   16e98:	subs	r5, r0, #0
   16e9c:	beq	16ebc <__assert_fail@plt+0x5690>
   16ea0:	ldr	r2, [sp, #4]
   16ea4:	ldr	r3, [r4, #16]
   16ea8:	ldr	r2, [r2]
   16eac:	sub	r3, r3, #1
   16eb0:	str	r3, [r4, #16]
   16eb4:	cmp	r2, #0
   16eb8:	beq	16ed4 <__assert_fail@plt+0x56a8>
   16ebc:	mov	r0, r5
   16ec0:	add	sp, sp, #8
   16ec4:	ldrd	r4, [sp]
   16ec8:	ldr	r6, [sp, #8]
   16ecc:	add	sp, sp, #12
   16ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ed4:	vldr	s15, [r4, #8]
   16ed8:	ldr	r3, [r4, #12]
   16edc:	ldr	r2, [r4, #20]
   16ee0:	vcvt.f32.u32	s15, s15
   16ee4:	sub	r3, r3, #1
   16ee8:	vmov	s14, r3
   16eec:	vldr	s13, [r2]
   16ef0:	str	r3, [r4, #12]
   16ef4:	vmul.f32	s12, s13, s15
   16ef8:	vcvt.f32.u32	s14, s14
   16efc:	vcmpe.f32	s14, s12
   16f00:	vmrs	APSR_nzcv, fpscr
   16f04:	bpl	16ebc <__assert_fail@plt+0x5690>
   16f08:	movw	r3, #55160	; 0xd778
   16f0c:	movt	r3, #1
   16f10:	cmp	r2, r3
   16f14:	beq	16ff4 <__assert_fail@plt+0x57c8>
   16f18:	vldr	s11, [pc, #224]	; 17000 <__assert_fail@plt+0x57d4>
   16f1c:	vldr	s12, [r2, #8]
   16f20:	vcmpe.f32	s12, s11
   16f24:	vmrs	APSR_nzcv, fpscr
   16f28:	ble	16fdc <__assert_fail@plt+0x57b0>
   16f2c:	vldr	s10, [pc, #208]	; 17004 <__assert_fail@plt+0x57d8>
   16f30:	vcmpe.f32	s12, s10
   16f34:	vmrs	APSR_nzcv, fpscr
   16f38:	bpl	16fdc <__assert_fail@plt+0x57b0>
   16f3c:	vldr	s10, [pc, #196]	; 17008 <__assert_fail@plt+0x57dc>
   16f40:	vldr	s9, [r2, #12]
   16f44:	vcmpe.f32	s9, s10
   16f48:	vmrs	APSR_nzcv, fpscr
   16f4c:	ble	16fdc <__assert_fail@plt+0x57b0>
   16f50:	vcmpe.f32	s13, #0.0
   16f54:	vmrs	APSR_nzcv, fpscr
   16f58:	blt	16fdc <__assert_fail@plt+0x57b0>
   16f5c:	vadd.f32	s13, s13, s11
   16f60:	vldr	s11, [r2, #4]
   16f64:	vcmpe.f32	s13, s11
   16f68:	vmrs	APSR_nzcv, fpscr
   16f6c:	bpl	16fdc <__assert_fail@plt+0x57b0>
   16f70:	vldr	s10, [pc, #148]	; 1700c <__assert_fail@plt+0x57e0>
   16f74:	vcmpe.f32	s11, s10
   16f78:	vmrs	APSR_nzcv, fpscr
   16f7c:	bhi	16fdc <__assert_fail@plt+0x57b0>
   16f80:	vcmpe.f32	s12, s13
   16f84:	vmrs	APSR_nzcv, fpscr
   16f88:	ble	16fdc <__assert_fail@plt+0x57b0>
   16f8c:	ldrb	r3, [r2, #16]
   16f90:	vmul.f32	s15, s15, s11
   16f94:	cmp	r3, #0
   16f98:	beq	16ff8 <__assert_fail@plt+0x57cc>
   16f9c:	vcvt.u32.f32	s15, s15
   16fa0:	mov	r0, r4
   16fa4:	vmov	r1, s15
   16fa8:	bl	16684 <__assert_fail@plt+0x4e58>
   16fac:	cmp	r0, #0
   16fb0:	bne	16ebc <__assert_fail@plt+0x5690>
   16fb4:	ldr	r0, [r4, #36]	; 0x24
   16fb8:	cmp	r0, #0
   16fbc:	beq	16fd0 <__assert_fail@plt+0x57a4>
   16fc0:	ldr	r6, [r0, #4]
   16fc4:	bl	13204 <__assert_fail@plt+0x19d8>
   16fc8:	subs	r0, r6, #0
   16fcc:	bne	16fc0 <__assert_fail@plt+0x5794>
   16fd0:	mov	r3, #0
   16fd4:	str	r3, [r4, #36]	; 0x24
   16fd8:	b	16ebc <__assert_fail@plt+0x5690>
   16fdc:	vldr	s13, [pc, #44]	; 17010 <__assert_fail@plt+0x57e4>
   16fe0:	str	r3, [r4, #20]
   16fe4:	vmul.f32	s13, s15, s13
   16fe8:	vcmpe.f32	s14, s13
   16fec:	vmrs	APSR_nzcv, fpscr
   16ff0:	bpl	16ebc <__assert_fail@plt+0x5690>
   16ff4:	vldr	s12, [pc, #24]	; 17014 <__assert_fail@plt+0x57e8>
   16ff8:	vmul.f32	s15, s15, s12
   16ffc:	b	16f9c <__assert_fail@plt+0x5770>
   17000:	stclcc	12, cr12, [ip, #820]	; 0x334
   17004:	svccc	0x00666666
   17008:	svccc	0x008ccccd
   1700c:	svccc	0x00800000
   17010:	andeq	r0, r0, r0
   17014:	svccc	0x004ccccd
   17018:	strd	r4, [sp, #-16]!
   1701c:	mov	r4, r0
   17020:	mov	r5, r1
   17024:	ldr	r0, [r0]
   17028:	str	r6, [sp, #8]
   1702c:	str	lr, [sp, #12]
   17030:	bl	1cd3c <lchmod@@Base+0x5b7c>
   17034:	ldr	ip, [r4, #8]
   17038:	mov	r2, r5
   1703c:	mov	r3, #0
   17040:	ldr	r1, [r4, #12]
   17044:	eor	r0, r0, ip
   17048:	bl	1cf8c <lchmod@@Base+0x5dcc>
   1704c:	ldrd	r4, [sp]
   17050:	mov	r0, r2
   17054:	ldr	r6, [sp, #8]
   17058:	add	sp, sp, #12
   1705c:	pop	{pc}		; (ldr pc, [sp], #4)
   17060:	strd	r4, [sp, #-16]!
   17064:	ldrd	r2, [r1, #8]
   17068:	ldrd	r4, [r0, #8]
   1706c:	str	r6, [sp, #8]
   17070:	str	lr, [sp, #12]
   17074:	cmp	r5, r3
   17078:	cmpeq	r4, r2
   1707c:	beq	17094 <__assert_fail@plt+0x5868>
   17080:	ldrd	r4, [sp]
   17084:	mov	r0, #0
   17088:	ldr	r6, [sp, #8]
   1708c:	add	sp, sp, #12
   17090:	pop	{pc}		; (ldr pc, [sp], #4)
   17094:	ldrd	r4, [r0, #16]
   17098:	ldrd	r2, [r1, #16]
   1709c:	cmp	r5, r3
   170a0:	cmpeq	r4, r2
   170a4:	bne	17080 <__assert_fail@plt+0x5854>
   170a8:	ldr	r0, [r0]
   170ac:	ldr	r1, [r1]
   170b0:	bl	11454 <strcmp@plt>
   170b4:	clz	r0, r0
   170b8:	ldrd	r4, [sp]
   170bc:	lsr	r0, r0, #5
   170c0:	ldr	r6, [sp, #8]
   170c4:	add	sp, sp, #12
   170c8:	pop	{pc}		; (ldr pc, [sp], #4)
   170cc:	str	r4, [sp, #-8]!
   170d0:	mov	r4, r0
   170d4:	ldr	r0, [r0]
   170d8:	str	lr, [sp, #4]
   170dc:	bl	13204 <__assert_fail@plt+0x19d8>
   170e0:	mov	r0, r4
   170e4:	ldr	r4, [sp]
   170e8:	ldr	lr, [sp, #4]
   170ec:	add	sp, sp, #8
   170f0:	b	13204 <__assert_fail@plt+0x19d8>
   170f4:	mov	r3, #0
   170f8:	mov	r2, #1
   170fc:	str	r1, [r0]
   17100:	str	r1, [r0, #4]
   17104:	str	r1, [r0, #8]
   17108:	str	r1, [r0, #12]
   1710c:	str	r1, [r0, #16]
   17110:	str	r3, [r0, #20]
   17114:	str	r3, [r0, #24]
   17118:	strb	r2, [r0, #28]
   1711c:	bx	lr
   17120:	ldrb	r0, [r0, #28]
   17124:	bx	lr
   17128:	ldrb	ip, [r0, #28]
   1712c:	mov	r2, r0
   17130:	ldr	r3, [r0, #20]
   17134:	eor	ip, ip, #1
   17138:	add	r3, ip, r3
   1713c:	and	r3, r3, #3
   17140:	ldr	r0, [r0, r3, lsl #2]
   17144:	str	r1, [r2, r3, lsl #2]
   17148:	ldr	r1, [r2, #24]
   1714c:	str	r3, [r2, #20]
   17150:	cmp	r1, r3
   17154:	bne	17164 <__assert_fail@plt+0x5938>
   17158:	add	ip, ip, r1
   1715c:	and	ip, ip, #3
   17160:	str	ip, [r2, #24]
   17164:	mov	r3, #0
   17168:	strb	r3, [r2, #28]
   1716c:	bx	lr
   17170:	ldrb	r3, [r0, #28]
   17174:	cmp	r3, #0
   17178:	bne	171b4 <__assert_fail@plt+0x5988>
   1717c:	ldr	r1, [r0, #16]
   17180:	ldr	r3, [r0, #20]
   17184:	ldr	r2, [r0, r3, lsl #2]
   17188:	str	r1, [r0, r3, lsl #2]
   1718c:	ldr	r1, [r0, #24]
   17190:	cmp	r3, r1
   17194:	moveq	r3, #1
   17198:	strbeq	r3, [r0, #28]
   1719c:	beq	171ac <__assert_fail@plt+0x5980>
   171a0:	add	r3, r3, #3
   171a4:	and	r3, r3, #3
   171a8:	str	r3, [r0, #20]
   171ac:	mov	r0, r2
   171b0:	bx	lr
   171b4:	str	r4, [sp, #-8]!
   171b8:	str	lr, [sp, #4]
   171bc:	bl	117d8 <abort@plt>

000171c0 <lchmod@@Base>:
   171c0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   171c4:	mov	r5, r1
   171c8:	mov	r1, #2654208	; 0x288000
   171cc:	strd	r6, [sp, #8]
   171d0:	strd	r8, [sp, #16]
   171d4:	mov	r9, r0
   171d8:	str	lr, [sp, #24]
   171dc:	sub	sp, sp, #148	; 0x94
   171e0:	bl	115bc <open64@plt>
   171e4:	subs	r4, r0, #0
   171e8:	blt	17284 <lchmod@@Base+0xc4>
   171ec:	mov	r0, #4096	; 0x1000
   171f0:	add	r3, sp, #40	; 0x28
   171f4:	mov	r1, r4
   171f8:	movw	r2, #55260	; 0xd7dc
   171fc:	movt	r2, #1
   17200:	str	r0, [sp]
   17204:	mov	r0, #3
   17208:	bl	11538 <__fxstatat64@plt>
   1720c:	mov	r6, r0
   17210:	bl	11688 <__errno_location@plt>
   17214:	cmp	r6, #0
   17218:	mov	r7, r0
   1721c:	bne	172cc <lchmod@@Base+0x10c>
   17220:	ldr	r3, [sp, #56]	; 0x38
   17224:	and	r3, r3, #61440	; 0xf000
   17228:	cmp	r3, #40960	; 0xa000
   1722c:	beq	172b4 <lchmod@@Base+0xf4>
   17230:	mov	r2, #26
   17234:	mov	r1, #1
   17238:	str	r4, [sp]
   1723c:	movw	r3, #55288	; 0xd7f8
   17240:	movt	r3, #1
   17244:	add	r0, sp, #12
   17248:	bl	11694 <__sprintf_chk@plt>
   1724c:	mov	r1, r5
   17250:	add	r0, sp, #12
   17254:	bl	117b4 <chmod@plt>
   17258:	mov	r6, r0
   1725c:	mov	r0, r4
   17260:	ldr	r8, [r7]
   17264:	bl	117e4 <close@plt>
   17268:	cmp	r6, #0
   1726c:	moveq	r4, r6
   17270:	beq	17284 <lchmod@@Base+0xc4>
   17274:	cmp	r8, #2
   17278:	beq	172a0 <lchmod@@Base+0xe0>
   1727c:	mov	r4, r6
   17280:	str	r8, [r7]
   17284:	mov	r0, r4
   17288:	add	sp, sp, #148	; 0x94
   1728c:	ldrd	r4, [sp]
   17290:	ldrd	r6, [sp, #8]
   17294:	ldrd	r8, [sp, #16]
   17298:	add	sp, sp, #24
   1729c:	pop	{pc}		; (ldr pc, [sp], #4)
   172a0:	mov	r1, r5
   172a4:	mov	r0, r9
   172a8:	bl	117b4 <chmod@plt>
   172ac:	mov	r4, r0
   172b0:	b	17284 <lchmod@@Base+0xc4>
   172b4:	mov	r0, r4
   172b8:	mvn	r4, #0
   172bc:	bl	117e4 <close@plt>
   172c0:	mov	r3, #95	; 0x5f
   172c4:	str	r3, [r7]
   172c8:	b	17284 <lchmod@@Base+0xc4>
   172cc:	ldr	r5, [r7]
   172d0:	mov	r0, r4
   172d4:	mvn	r4, #0
   172d8:	bl	117e4 <close@plt>
   172dc:	str	r5, [r7]
   172e0:	b	17284 <lchmod@@Base+0xc4>
   172e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   172e8:	mov	r5, r0
   172ec:	strd	r6, [sp, #8]
   172f0:	strd	r8, [sp, #16]
   172f4:	strd	sl, [sp, #24]
   172f8:	str	lr, [sp, #32]
   172fc:	sub	sp, sp, #4
   17300:	ldrb	r3, [r0]
   17304:	sub	r2, r3, #48	; 0x30
   17308:	cmp	r2, #7
   1730c:	bls	17454 <lchmod@@Base+0x294>
   17310:	cmp	r3, #0
   17314:	moveq	r0, #1
   17318:	beq	17348 <lchmod@@Base+0x188>
   1731c:	mov	r1, r5
   17320:	mov	r0, #1
   17324:	and	r2, r3, #239	; 0xef
   17328:	cmp	r3, #43	; 0x2b
   1732c:	cmpne	r2, #45	; 0x2d
   17330:	ldrb	r3, [r1, #1]!
   17334:	moveq	r2, #1
   17338:	movne	r2, #0
   1733c:	add	r0, r0, r2
   17340:	cmp	r3, #0
   17344:	bne	17324 <lchmod@@Base+0x164>
   17348:	mov	r1, #16
   1734c:	movw	fp, #519	; 0x207
   17350:	bl	1c084 <lchmod@@Base+0x4ec4>
   17354:	mov	r8, #3
   17358:	mov	ip, #0
   1735c:	mov	r4, #0
   17360:	ldrb	r3, [r5]
   17364:	mov	lr, r5
   17368:	add	r5, r5, #1
   1736c:	cmp	r3, #97	; 0x61
   17370:	beq	175fc <lchmod@@Base+0x43c>
   17374:	bls	173b4 <lchmod@@Base+0x1f4>
   17378:	cmp	r3, #111	; 0x6f
   1737c:	beq	175f4 <lchmod@@Base+0x434>
   17380:	cmp	r3, #117	; 0x75
   17384:	beq	17604 <lchmod@@Base+0x444>
   17388:	cmp	r3, #103	; 0x67
   1738c:	beq	1760c <lchmod@@Base+0x44c>
   17390:	bl	13204 <__assert_fail@plt+0x19d8>
   17394:	mov	r0, #0
   17398:	add	sp, sp, #4
   1739c:	ldrd	r4, [sp]
   173a0:	ldrd	r6, [sp, #8]
   173a4:	ldrd	r8, [sp, #16]
   173a8:	ldrd	sl, [sp, #24]
   173ac:	add	sp, sp, #32
   173b0:	pop	{pc}		; (ldr pc, [sp], #4)
   173b4:	cmp	r3, #45	; 0x2d
   173b8:	beq	173cc <lchmod@@Base+0x20c>
   173bc:	cmp	r3, #61	; 0x3d
   173c0:	beq	173cc <lchmod@@Base+0x20c>
   173c4:	cmp	r3, #43	; 0x2b
   173c8:	bne	17390 <lchmod@@Base+0x1d0>
   173cc:	add	r6, ip, #1
   173d0:	mov	r7, #1
   173d4:	add	ip, r0, ip, lsl #4
   173d8:	movw	r5, #4095	; 0xfff
   173dc:	b	1742c <lchmod@@Base+0x26c>
   173e0:	cmp	r2, #117	; 0x75
   173e4:	addeq	r2, lr, #2
   173e8:	moveq	r9, #448	; 0x1c0
   173ec:	bne	17500 <lchmod@@Base+0x340>
   173f0:	strb	r3, [ip]
   173f4:	ldrb	r3, [lr, #2]
   173f8:	mov	lr, r2
   173fc:	strb	r8, [ip, #1]
   17400:	stmib	ip, {r4, r9}
   17404:	cmp	r4, #0
   17408:	andne	r9, r9, r4
   1740c:	and	r2, r3, #239	; 0xef
   17410:	add	ip, ip, #16
   17414:	str	r9, [ip, #-4]
   17418:	cmp	r3, #43	; 0x2b
   1741c:	cmpne	r2, #45	; 0x2d
   17420:	add	r2, r6, #1
   17424:	bne	1765c <lchmod@@Base+0x49c>
   17428:	mov	r6, r2
   1742c:	ldrb	r2, [lr, #1]
   17430:	add	r1, lr, #1
   17434:	cmp	r2, #103	; 0x67
   17438:	beq	175e8 <lchmod@@Base+0x428>
   1743c:	bls	17490 <lchmod@@Base+0x2d0>
   17440:	cmp	r2, #111	; 0x6f
   17444:	bne	173e0 <lchmod@@Base+0x220>
   17448:	add	r2, lr, #2
   1744c:	mov	r9, #7
   17450:	b	173f0 <lchmod@@Base+0x230>
   17454:	mov	r2, r0
   17458:	mov	r4, #0
   1745c:	b	17470 <lchmod@@Base+0x2b0>
   17460:	ldrb	r3, [r2]
   17464:	sub	r1, r3, #48	; 0x30
   17468:	cmp	r1, #7
   1746c:	bhi	17618 <lchmod@@Base+0x458>
   17470:	ldrb	r3, [r2], #1
   17474:	lsl	r4, r4, #3
   17478:	sub	r4, r4, #48	; 0x30
   1747c:	add	r4, r3, r4
   17480:	cmp	r4, #4096	; 0x1000
   17484:	bcc	17460 <lchmod@@Base+0x2a0>
   17488:	mov	r0, #0
   1748c:	b	17398 <lchmod@@Base+0x1d8>
   17490:	sub	lr, r2, #48	; 0x30
   17494:	cmp	lr, #7
   17498:	movls	r2, #0
   1749c:	bhi	17500 <lchmod@@Base+0x340>
   174a0:	ldrb	lr, [r1], #1
   174a4:	lsl	r2, r2, #3
   174a8:	sub	r2, r2, #48	; 0x30
   174ac:	add	r2, lr, r2
   174b0:	cmp	r2, #4096	; 0x1000
   174b4:	bcs	17390 <lchmod@@Base+0x1d0>
   174b8:	ldrb	r9, [r1]
   174bc:	sub	lr, r9, #48	; 0x30
   174c0:	cmp	lr, #7
   174c4:	bls	174a0 <lchmod@@Base+0x2e0>
   174c8:	cmp	r4, #0
   174cc:	bne	17390 <lchmod@@Base+0x1d0>
   174d0:	cmp	r9, #0
   174d4:	cmpne	r9, #44	; 0x2c
   174d8:	bne	17390 <lchmod@@Base+0x1d0>
   174dc:	movw	r4, #4095	; 0xfff
   174e0:	mov	lr, r1
   174e4:	strb	r3, [ip]
   174e8:	mov	r3, r9
   174ec:	mov	r9, r4
   174f0:	strb	r7, [ip, #1]
   174f4:	str	r5, [ip, #4]
   174f8:	str	r2, [ip, #8]
   174fc:	b	1740c <lchmod@@Base+0x24c>
   17500:	mov	sl, #1
   17504:	mov	r9, #0
   17508:	sub	lr, r2, #88	; 0x58
   1750c:	cmp	lr, #32
   17510:	ldrls	pc, [pc, lr, lsl #2]
   17514:	b	175d0 <lchmod@@Base+0x410>
   17518:	muleq	r1, ip, r5
   1751c:	ldrdeq	r7, [r1], -r0
   17520:	ldrdeq	r7, [r1], -r0
   17524:	ldrdeq	r7, [r1], -r0
   17528:	ldrdeq	r7, [r1], -r0
   1752c:	ldrdeq	r7, [r1], -r0
   17530:	ldrdeq	r7, [r1], -r0
   17534:	ldrdeq	r7, [r1], -r0
   17538:	ldrdeq	r7, [r1], -r0
   1753c:	ldrdeq	r7, [r1], -r0
   17540:	ldrdeq	r7, [r1], -r0
   17544:	ldrdeq	r7, [r1], -r0
   17548:	ldrdeq	r7, [r1], -r0
   1754c:	ldrdeq	r7, [r1], -r0
   17550:	ldrdeq	r7, [r1], -r0
   17554:	ldrdeq	r7, [r1], -r0
   17558:	ldrdeq	r7, [r1], -r0
   1755c:	ldrdeq	r7, [r1], -r0
   17560:	ldrdeq	r7, [r1], -r0
   17564:	ldrdeq	r7, [r1], -r0
   17568:	ldrdeq	r7, [r1], -r0
   1756c:	ldrdeq	r7, [r1], -r0
   17570:	ldrdeq	r7, [r1], -r0
   17574:	ldrdeq	r7, [r1], -r0
   17578:	ldrdeq	r7, [r1], -r0
   1757c:	ldrdeq	r7, [r1], -r0
   17580:	andeq	r7, r1, r8, asr #11
   17584:	andeq	r7, r1, r0, asr #11
   17588:			; <UNDEFINED> instruction: 0x000175b8
   1758c:	ldrdeq	r7, [r1], -r0
   17590:	ldrdeq	r7, [r1], -r0
   17594:			; <UNDEFINED> instruction: 0x000175b0
   17598:	andeq	r7, r1, r8, lsr #11
   1759c:	mov	sl, #2
   175a0:	ldrb	r2, [r1, #1]!
   175a4:	b	17508 <lchmod@@Base+0x348>
   175a8:	orr	r9, r9, #73	; 0x49
   175ac:	b	175a0 <lchmod@@Base+0x3e0>
   175b0:	orr	r9, r9, #146	; 0x92
   175b4:	b	175a0 <lchmod@@Base+0x3e0>
   175b8:	orr	r9, r9, #512	; 0x200
   175bc:	b	175a0 <lchmod@@Base+0x3e0>
   175c0:	orr	r9, r9, #3072	; 0xc00
   175c4:	b	175a0 <lchmod@@Base+0x3e0>
   175c8:	orr	r9, r9, #292	; 0x124
   175cc:	b	175a0 <lchmod@@Base+0x3e0>
   175d0:	mov	lr, r1
   175d4:	strb	r3, [ip]
   175d8:	mov	r3, r2
   175dc:	strb	sl, [ip, #1]
   175e0:	stmib	ip, {r4, r9}
   175e4:	b	17404 <lchmod@@Base+0x244>
   175e8:	add	r2, lr, #2
   175ec:	mov	r9, #56	; 0x38
   175f0:	b	173f0 <lchmod@@Base+0x230>
   175f4:	orr	r4, r4, fp
   175f8:	b	17360 <lchmod@@Base+0x1a0>
   175fc:	movw	r4, #4095	; 0xfff
   17600:	b	17360 <lchmod@@Base+0x1a0>
   17604:	orr	r4, r4, #2496	; 0x9c0
   17608:	b	17360 <lchmod@@Base+0x1a0>
   1760c:	orr	r4, r4, #1072	; 0x430
   17610:	orr	r4, r4, #8
   17614:	b	17360 <lchmod@@Base+0x1a0>
   17618:	cmp	r3, #0
   1761c:	bne	17488 <lchmod@@Base+0x2c8>
   17620:	sub	r2, r2, r5
   17624:	mov	r0, #32
   17628:	cmp	r2, #4
   1762c:	andle	r5, r4, #3072	; 0xc00
   17630:	movwgt	r5, #4095	; 0xfff
   17634:	mvnle	r5, r5, lsr #10
   17638:	mvnle	r5, r5, lsl #10
   1763c:	bl	1bf20 <lchmod@@Base+0x4d60>
   17640:	movw	r1, #317	; 0x13d
   17644:	movw	r2, #4095	; 0xfff
   17648:	mov	r3, #0
   1764c:	strh	r1, [r0]
   17650:	stmib	r0, {r2, r4, r5}
   17654:	strb	r3, [r0, #17]
   17658:	b	17398 <lchmod@@Base+0x1d8>
   1765c:	cmp	r3, #44	; 0x2c
   17660:	bne	17670 <lchmod@@Base+0x4b0>
   17664:	add	r5, lr, #1
   17668:	mov	ip, r6
   1766c:	b	1735c <lchmod@@Base+0x19c>
   17670:	cmp	r3, #0
   17674:	addeq	r6, r0, r6, lsl #4
   17678:	strbeq	r3, [r6, #1]
   1767c:	beq	17398 <lchmod@@Base+0x1d8>
   17680:	b	17390 <lchmod@@Base+0x1d0>
   17684:	strd	r4, [sp, #-12]!
   17688:	mov	r1, r0
   1768c:	mov	r0, #3
   17690:	str	lr, [sp, #8]
   17694:	sub	sp, sp, #108	; 0x6c
   17698:	mov	r2, sp
   1769c:	bl	117c0 <__xstat64@plt>
   176a0:	subs	r4, r0, #0
   176a4:	movne	r0, #0
   176a8:	bne	176d0 <lchmod@@Base+0x510>
   176ac:	ldr	r5, [sp, #16]
   176b0:	mov	r0, #32
   176b4:	bl	1bf20 <lchmod@@Base+0x4d60>
   176b8:	movw	r3, #4095	; 0xfff
   176bc:	movw	r2, #317	; 0x13d
   176c0:	strh	r2, [r0]
   176c4:	stmib	r0, {r3, r5}
   176c8:	str	r3, [r0, #12]
   176cc:	strb	r4, [r0, #17]
   176d0:	add	sp, sp, #108	; 0x6c
   176d4:	ldrd	r4, [sp]
   176d8:	add	sp, sp, #8
   176dc:	pop	{pc}		; (ldr pc, [sp], #4)
   176e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   176e4:	ubfx	r0, r0, #0, #12
   176e8:	strd	r6, [sp, #8]
   176ec:	strd	r8, [sp, #16]
   176f0:	strd	sl, [sp, #24]
   176f4:	str	lr, [sp, #32]
   176f8:	ldrb	lr, [r3, #1]
   176fc:	ldr	sl, [sp, #36]	; 0x24
   17700:	cmp	lr, #0
   17704:	beq	17868 <lchmod@@Base+0x6a8>
   17708:	add	r3, r3, #16
   1770c:	mvn	r2, r2
   17710:	mov	r7, #0
   17714:	mvn	r8, #3072	; 0xc00
   17718:	movw	r9, #438	; 0x1b6
   1771c:	b	177a4 <lchmod@@Base+0x5e4>
   17720:	cmp	lr, #2
   17724:	mvn	r4, #0
   17728:	beq	17858 <lchmod@@Base+0x698>
   1772c:	mov	r5, r1
   17730:	cmp	lr, #3
   17734:	bne	17768 <lchmod@@Base+0x5a8>
   17738:	and	ip, ip, r0
   1773c:	and	lr, ip, #292	; 0x124
   17740:	cmp	lr, #0
   17744:	movne	lr, r9
   17748:	moveq	lr, #146	; 0x92
   1774c:	movne	fp, #292	; 0x124
   17750:	moveq	fp, #0
   17754:	tst	ip, #146	; 0x92
   17758:	moveq	lr, fp
   1775c:	tst	ip, #73	; 0x49
   17760:	orrne	lr, lr, #73	; 0x49
   17764:	orr	ip, lr, ip
   17768:	cmp	r6, #0
   1776c:	and	ip, ip, r4
   17770:	ldrb	lr, [r3, #-16]
   17774:	bne	177e0 <lchmod@@Base+0x620>
   17778:	cmp	lr, #45	; 0x2d
   1777c:	and	ip, ip, r2
   17780:	beq	17840 <lchmod@@Base+0x680>
   17784:	cmp	lr, #61	; 0x3d
   17788:	beq	17800 <lchmod@@Base+0x640>
   1778c:	cmp	lr, #43	; 0x2b
   17790:	beq	1784c <lchmod@@Base+0x68c>
   17794:	add	r3, r3, #16
   17798:	ldrb	lr, [r3, #-15]
   1779c:	cmp	lr, #0
   177a0:	beq	17820 <lchmod@@Base+0x660>
   177a4:	cmp	r1, #0
   177a8:	ldr	r6, [r3, #-12]
   177ac:	ldr	ip, [r3, #-8]
   177b0:	beq	17720 <lchmod@@Base+0x560>
   177b4:	cmp	lr, #2
   177b8:	ldr	r4, [r3, #-4]
   177bc:	mvn	r5, r4
   177c0:	orr	r4, r4, r8
   177c4:	and	r5, r5, #3072	; 0xc00
   177c8:	bne	17730 <lchmod@@Base+0x570>
   177cc:	orr	ip, ip, #73	; 0x49
   177d0:	cmp	r6, #0
   177d4:	ldrb	lr, [r3, #-16]
   177d8:	and	ip, ip, r4
   177dc:	beq	17778 <lchmod@@Base+0x5b8>
   177e0:	cmp	lr, #45	; 0x2d
   177e4:	and	ip, ip, r6
   177e8:	beq	17840 <lchmod@@Base+0x680>
   177ec:	cmp	lr, #61	; 0x3d
   177f0:	bne	1778c <lchmod@@Base+0x5cc>
   177f4:	mvn	r6, r6
   177f8:	orr	r5, r5, r6
   177fc:	mvn	r4, r5
   17800:	add	r3, r3, #16
   17804:	ldrb	lr, [r3, #-15]
   17808:	ubfx	r4, r4, #0, #12
   1780c:	and	r0, r0, r5
   17810:	orr	r0, r0, ip
   17814:	orr	r7, r7, r4
   17818:	cmp	lr, #0
   1781c:	bne	177a4 <lchmod@@Base+0x5e4>
   17820:	cmp	sl, #0
   17824:	ldrd	r4, [sp]
   17828:	strne	r7, [sl]
   1782c:	ldrd	r6, [sp, #8]
   17830:	ldrd	r8, [sp, #16]
   17834:	ldrd	sl, [sp, #24]
   17838:	add	sp, sp, #32
   1783c:	pop	{pc}		; (ldr pc, [sp], #4)
   17840:	orr	r7, r7, ip
   17844:	bic	r0, r0, ip
   17848:	b	17794 <lchmod@@Base+0x5d4>
   1784c:	orr	r7, r7, ip
   17850:	orr	r0, r0, ip
   17854:	b	17794 <lchmod@@Base+0x5d4>
   17858:	ands	r5, r0, #73	; 0x49
   1785c:	beq	17768 <lchmod@@Base+0x5a8>
   17860:	mov	r5, r1
   17864:	b	177cc <lchmod@@Base+0x60c>
   17868:	mov	r7, lr
   1786c:	b	17820 <lchmod@@Base+0x660>
   17870:	push	{r2, r3}
   17874:	push	{lr}		; (str lr, [sp, #-4]!)
   17878:	sub	sp, sp, #12
   1787c:	ldr	r2, [sp, #16]
   17880:	ands	r3, r2, #64	; 0x40
   17884:	bne	178a0 <lchmod@@Base+0x6e0>
   17888:	bl	11670 <openat64@plt>
   1788c:	bl	1b784 <lchmod@@Base+0x45c4>
   17890:	add	sp, sp, #12
   17894:	pop	{lr}		; (ldr lr, [sp], #4)
   17898:	add	sp, sp, #8
   1789c:	bx	lr
   178a0:	add	ip, sp, #20
   178a4:	ldr	r3, [sp, #20]
   178a8:	str	ip, [sp, #4]
   178ac:	b	17888 <lchmod@@Base+0x6c8>
   178b0:	orr	r2, r2, #540672	; 0x84000
   178b4:	strd	r4, [sp, #-16]!
   178b8:	orr	r2, r2, #2304	; 0x900
   178bc:	str	r6, [sp, #8]
   178c0:	mov	r6, r3
   178c4:	str	lr, [sp, #12]
   178c8:	bl	17870 <lchmod@@Base+0x6b0>
   178cc:	subs	r5, r0, #0
   178d0:	movlt	r4, #0
   178d4:	blt	178e8 <lchmod@@Base+0x728>
   178d8:	bl	1173c <fdopendir@plt>
   178dc:	subs	r4, r0, #0
   178e0:	beq	178fc <lchmod@@Base+0x73c>
   178e4:	str	r5, [r6]
   178e8:	mov	r0, r4
   178ec:	ldrd	r4, [sp]
   178f0:	ldr	r6, [sp, #8]
   178f4:	add	sp, sp, #12
   178f8:	pop	{pc}		; (ldr pc, [sp], #4)
   178fc:	bl	11688 <__errno_location@plt>
   17900:	mov	r6, r0
   17904:	mov	r0, r5
   17908:	ldr	r5, [r6]
   1790c:	bl	117e4 <close@plt>
   17910:	b	178e4 <lchmod@@Base+0x724>
   17914:	strd	r4, [sp, #-16]!
   17918:	subs	r4, r0, #0
   1791c:	str	r6, [sp, #8]
   17920:	str	lr, [sp, #12]
   17924:	beq	179bc <lchmod@@Base+0x7fc>
   17928:	mov	r1, #47	; 0x2f
   1792c:	bl	11718 <strrchr@plt>
   17930:	subs	r5, r0, #0
   17934:	beq	17994 <lchmod@@Base+0x7d4>
   17938:	add	r6, r5, #1
   1793c:	sub	r3, r6, r4
   17940:	cmp	r3, #6
   17944:	ble	17994 <lchmod@@Base+0x7d4>
   17948:	movw	r1, #55364	; 0xd844
   1794c:	movt	r1, #1
   17950:	mov	r2, #7
   17954:	sub	r0, r5, #6
   17958:	bl	117cc <strncmp@plt>
   1795c:	cmp	r0, #0
   17960:	bne	17994 <lchmod@@Base+0x7d4>
   17964:	movw	r1, #55372	; 0xd84c
   17968:	movt	r1, #1
   1796c:	mov	r2, #3
   17970:	mov	r0, r6
   17974:	bl	117cc <strncmp@plt>
   17978:	cmp	r0, #0
   1797c:	movne	r4, r6
   17980:	bne	17994 <lchmod@@Base+0x7d4>
   17984:	add	r4, r5, #4
   17988:	movw	r3, #57800	; 0xe1c8
   1798c:	movt	r3, #2
   17990:	str	r4, [r3]
   17994:	movw	r2, #57840	; 0xe1f0
   17998:	movt	r2, #2
   1799c:	ldr	r6, [sp, #8]
   179a0:	movw	r3, #57804	; 0xe1cc
   179a4:	movt	r3, #2
   179a8:	str	r4, [r2]
   179ac:	str	r4, [r3]
   179b0:	ldrd	r4, [sp]
   179b4:	add	sp, sp, #12
   179b8:	pop	{pc}		; (ldr pc, [sp], #4)
   179bc:	movw	r3, #57816	; 0xe1d8
   179c0:	movt	r3, #2
   179c4:	movw	r0, #55308	; 0xd80c
   179c8:	movt	r0, #1
   179cc:	ldr	r3, [r3]
   179d0:	mov	r2, #55	; 0x37
   179d4:	mov	r1, #1
   179d8:	bl	11568 <fwrite@plt>
   179dc:	bl	117d8 <abort@plt>
   179e0:	mov	r2, #5
   179e4:	strd	r4, [sp, #-16]!
   179e8:	mov	r5, r0
   179ec:	str	r6, [sp, #8]
   179f0:	mov	r6, r1
   179f4:	mov	r1, r0
   179f8:	mov	r0, #0
   179fc:	str	lr, [sp, #12]
   17a00:	bl	114f0 <dcgettext@plt>
   17a04:	cmp	r5, r0
   17a08:	mov	r4, r0
   17a0c:	beq	17a24 <lchmod@@Base+0x864>
   17a10:	mov	r0, r4
   17a14:	ldrd	r4, [sp]
   17a18:	ldr	r6, [sp, #8]
   17a1c:	add	sp, sp, #12
   17a20:	pop	{pc}		; (ldr pc, [sp], #4)
   17a24:	bl	1cd70 <lchmod@@Base+0x5bb0>
   17a28:	ldrb	r3, [r0]
   17a2c:	bic	r3, r3, #32
   17a30:	cmp	r3, #85	; 0x55
   17a34:	bne	17a9c <lchmod@@Base+0x8dc>
   17a38:	ldrb	r3, [r0, #1]
   17a3c:	bic	r3, r3, #32
   17a40:	cmp	r3, #84	; 0x54
   17a44:	bne	17b1c <lchmod@@Base+0x95c>
   17a48:	ldrb	r3, [r0, #2]
   17a4c:	bic	r3, r3, #32
   17a50:	cmp	r3, #70	; 0x46
   17a54:	bne	17b1c <lchmod@@Base+0x95c>
   17a58:	ldrb	r3, [r0, #3]
   17a5c:	cmp	r3, #45	; 0x2d
   17a60:	bne	17b1c <lchmod@@Base+0x95c>
   17a64:	ldrb	r3, [r0, #4]
   17a68:	cmp	r3, #56	; 0x38
   17a6c:	bne	17b1c <lchmod@@Base+0x95c>
   17a70:	ldrb	r3, [r0, #5]
   17a74:	cmp	r3, #0
   17a78:	bne	17b1c <lchmod@@Base+0x95c>
   17a7c:	ldrb	r2, [r4]
   17a80:	movw	r3, #55464	; 0xd8a8
   17a84:	movt	r3, #1
   17a88:	movw	r4, #55476	; 0xd8b4
   17a8c:	movt	r4, #1
   17a90:	cmp	r2, #96	; 0x60
   17a94:	movne	r4, r3
   17a98:	b	17a10 <lchmod@@Base+0x850>
   17a9c:	cmp	r3, #71	; 0x47
   17aa0:	bne	17b1c <lchmod@@Base+0x95c>
   17aa4:	ldrb	r3, [r0, #1]
   17aa8:	bic	r3, r3, #32
   17aac:	cmp	r3, #66	; 0x42
   17ab0:	bne	17b1c <lchmod@@Base+0x95c>
   17ab4:	ldrb	r3, [r0, #2]
   17ab8:	cmp	r3, #49	; 0x31
   17abc:	bne	17b1c <lchmod@@Base+0x95c>
   17ac0:	ldrb	r3, [r0, #3]
   17ac4:	cmp	r3, #56	; 0x38
   17ac8:	bne	17b1c <lchmod@@Base+0x95c>
   17acc:	ldrb	r3, [r0, #4]
   17ad0:	cmp	r3, #48	; 0x30
   17ad4:	bne	17b1c <lchmod@@Base+0x95c>
   17ad8:	ldrb	r3, [r0, #5]
   17adc:	cmp	r3, #51	; 0x33
   17ae0:	bne	17b1c <lchmod@@Base+0x95c>
   17ae4:	ldrb	r3, [r0, #6]
   17ae8:	cmp	r3, #48	; 0x30
   17aec:	bne	17b1c <lchmod@@Base+0x95c>
   17af0:	ldrb	r3, [r0, #7]
   17af4:	cmp	r3, #0
   17af8:	bne	17b1c <lchmod@@Base+0x95c>
   17afc:	ldrb	r2, [r4]
   17b00:	movw	r3, #55468	; 0xd8ac
   17b04:	movt	r3, #1
   17b08:	movw	r4, #55472	; 0xd8b0
   17b0c:	movt	r4, #1
   17b10:	cmp	r2, #96	; 0x60
   17b14:	movne	r4, r3
   17b18:	b	17a10 <lchmod@@Base+0x850>
   17b1c:	movw	r3, #55480	; 0xd8b8
   17b20:	movt	r3, #1
   17b24:	cmp	r6, #9
   17b28:	movw	r4, #55460	; 0xd8a4
   17b2c:	movt	r4, #1
   17b30:	movne	r4, r3
   17b34:	b	17a10 <lchmod@@Base+0x850>
   17b38:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17b3c:	strd	r6, [sp, #8]
   17b40:	strd	r8, [sp, #16]
   17b44:	mov	r8, r3
   17b48:	strd	sl, [sp, #24]
   17b4c:	mov	fp, r0
   17b50:	mov	sl, r1
   17b54:	str	lr, [sp, #32]
   17b58:	sub	sp, sp, #140	; 0x8c
   17b5c:	ldr	r3, [sp, #180]	; 0xb4
   17b60:	str	r2, [sp, #28]
   17b64:	and	r4, r3, #2
   17b68:	ubfx	r3, r3, #1, #1
   17b6c:	str	r3, [sp, #44]	; 0x2c
   17b70:	bl	11580 <__ctype_get_mb_cur_max@plt>
   17b74:	ldr	r3, [sp, #176]	; 0xb0
   17b78:	str	r0, [sp, #76]	; 0x4c
   17b7c:	cmp	r3, #10
   17b80:	ldrls	pc, [pc, r3, lsl #2]
   17b84:	b	19520 <lchmod@@Base+0x2360>
   17b88:	andeq	r8, r1, r8
   17b8c:	andeq	r8, r1, r4, lsr #2
   17b90:	andeq	r8, r1, r0, lsr #13
   17b94:	muleq	r1, r0, r1
   17b98:	andeq	r7, r1, r0, lsl pc
   17b9c:	andeq	r7, r1, ip, lsl #31
   17ba0:	andeq	r8, r1, r4, rrx
   17ba4:	andeq	r8, r1, ip, asr #1
   17ba8:			; <UNDEFINED> instruction: 0x00017bb4
   17bac:			; <UNDEFINED> instruction: 0x00017bb4
   17bb0:			; <UNDEFINED> instruction: 0x00017bb4
   17bb4:	ldr	r3, [sp, #176]	; 0xb0
   17bb8:	cmp	r3, #10
   17bbc:	beq	17be8 <lchmod@@Base+0xa28>
   17bc0:	mov	r1, r3
   17bc4:	movw	r0, #55484	; 0xd8bc
   17bc8:	movt	r0, #1
   17bcc:	bl	179e0 <lchmod@@Base+0x820>
   17bd0:	str	r0, [sp, #188]	; 0xbc
   17bd4:	movw	r0, #55480	; 0xd8b8
   17bd8:	movt	r0, #1
   17bdc:	ldr	r1, [sp, #176]	; 0xb0
   17be0:	bl	179e0 <lchmod@@Base+0x820>
   17be4:	str	r0, [sp, #192]	; 0xc0
   17be8:	cmp	r4, #0
   17bec:	movne	r4, #0
   17bf0:	beq	192ac <lchmod@@Base+0x20ec>
   17bf4:	mov	r5, #0
   17bf8:	ldr	r0, [sp, #192]	; 0xc0
   17bfc:	mov	r9, r5
   17c00:	str	r5, [sp, #64]	; 0x40
   17c04:	bl	11658 <strlen@plt>
   17c08:	mov	r3, #1
   17c0c:	ldr	r2, [sp, #44]	; 0x2c
   17c10:	cmp	r0, r5
   17c14:	moveq	r2, r5
   17c18:	str	r3, [sp, #32]
   17c1c:	str	r3, [sp, #48]	; 0x30
   17c20:	str	r5, [sp, #52]	; 0x34
   17c24:	str	r3, [sp, #60]	; 0x3c
   17c28:	ldr	r3, [sp, #180]	; 0xb4
   17c2c:	str	r0, [sp, #56]	; 0x38
   17c30:	str	r5, [sp, #68]	; 0x44
   17c34:	str	r5, [sp, #80]	; 0x50
   17c38:	str	r5, [sp, #84]	; 0x54
   17c3c:	and	r3, r3, #1
   17c40:	str	r2, [sp, #88]	; 0x58
   17c44:	str	r3, [sp, #92]	; 0x5c
   17c48:	ldr	r3, [sp, #180]	; 0xb4
   17c4c:	and	r3, r3, #4
   17c50:	str	r3, [sp, #96]	; 0x60
   17c54:	ldr	r3, [sp, #192]	; 0xc0
   17c58:	str	r3, [sp, #72]	; 0x48
   17c5c:	mov	r3, fp
   17c60:	mov	r7, #0
   17c64:	mov	fp, r9
   17c68:	mov	r9, r3
   17c6c:	cmn	r8, #1
   17c70:	beq	18274 <lchmod@@Base+0x10b4>
   17c74:	subs	r6, r8, r7
   17c78:	movne	r6, #1
   17c7c:	cmp	r6, #0
   17c80:	beq	1828c <lchmod@@Base+0x10cc>
   17c84:	ldr	r0, [sp, #28]
   17c88:	ldr	r3, [sp, #48]	; 0x30
   17c8c:	cmp	r3, #0
   17c90:	add	r3, r0, r7
   17c94:	str	r3, [sp, #36]	; 0x24
   17c98:	beq	18718 <lchmod@@Base+0x1558>
   17c9c:	ldr	r2, [sp, #56]	; 0x38
   17ca0:	cmp	r2, #0
   17ca4:	beq	18c18 <lchmod@@Base+0x1a58>
   17ca8:	cmp	r2, #1
   17cac:	mov	r3, r2
   17cb0:	movls	r3, #0
   17cb4:	movhi	r3, #1
   17cb8:	cmn	r8, #1
   17cbc:	add	r5, r7, r2
   17cc0:	movne	r3, #0
   17cc4:	cmp	r3, #0
   17cc8:	beq	17cd4 <lchmod@@Base+0xb14>
   17ccc:	bl	11658 <strlen@plt>
   17cd0:	mov	r8, r0
   17cd4:	cmp	r5, r8
   17cd8:	bhi	18c18 <lchmod@@Base+0x1a58>
   17cdc:	ldr	r0, [sp, #36]	; 0x24
   17ce0:	ldr	r2, [sp, #56]	; 0x38
   17ce4:	ldr	r1, [sp, #72]	; 0x48
   17ce8:	bl	114d8 <memcmp@plt>
   17cec:	cmp	r0, #0
   17cf0:	bne	18c18 <lchmod@@Base+0x1a58>
   17cf4:	ldr	r3, [sp, #44]	; 0x2c
   17cf8:	cmp	r3, #0
   17cfc:	bne	193c4 <lchmod@@Base+0x2204>
   17d00:	ldr	r3, [sp, #36]	; 0x24
   17d04:	ldrb	r5, [r3]
   17d08:	cmp	r5, #126	; 0x7e
   17d0c:	ldrls	pc, [pc, r5, lsl #2]
   17d10:	b	191ac <lchmod@@Base+0x1fec>
   17d14:	andeq	r8, r1, r8, ror #7
   17d18:	andeq	r9, r1, ip, lsr #3
   17d1c:	andeq	r9, r1, ip, lsr #3
   17d20:	andeq	r9, r1, ip, lsr #3
   17d24:	andeq	r9, r1, ip, lsr #3
   17d28:	andeq	r9, r1, ip, lsr #3
   17d2c:	andeq	r9, r1, ip, lsr #3
   17d30:	andeq	r8, r1, r0, asr #6
   17d34:	andeq	r8, r1, r8, lsr r3
   17d38:	andeq	r8, r1, r8, asr #6
   17d3c:	andeq	r8, r1, ip, asr #9
   17d40:			; <UNDEFINED> instruction: 0x000184bc
   17d44:	andeq	r8, r1, r4, ror #3
   17d48:	muleq	r1, r8, r4
   17d4c:	andeq	r9, r1, ip, lsr #3
   17d50:	andeq	r9, r1, ip, lsr #3
   17d54:	andeq	r9, r1, ip, lsr #3
   17d58:	andeq	r9, r1, ip, lsr #3
   17d5c:	andeq	r9, r1, ip, lsr #3
   17d60:	andeq	r9, r1, ip, lsr #3
   17d64:	andeq	r9, r1, ip, lsr #3
   17d68:	andeq	r9, r1, ip, lsr #3
   17d6c:	andeq	r9, r1, ip, lsr #3
   17d70:	andeq	r9, r1, ip, lsr #3
   17d74:	andeq	r9, r1, ip, lsr #3
   17d78:	andeq	r9, r1, ip, lsr #3
   17d7c:	andeq	r9, r1, ip, lsr #3
   17d80:	andeq	r9, r1, ip, lsr #3
   17d84:	andeq	r9, r1, ip, lsr #3
   17d88:	andeq	r9, r1, ip, lsr #3
   17d8c:	andeq	r9, r1, ip, lsr #3
   17d90:	andeq	r9, r1, ip, lsr #3
   17d94:	andeq	r8, r1, r4, asr #10
   17d98:	andeq	r8, r1, r8, lsr r5
   17d9c:	andeq	r8, r1, r8, lsr r5
   17da0:	andeq	r8, r1, ip, lsr #10
   17da4:	andeq	r8, r1, r8, lsr r5
   17da8:	andeq	r8, r1, r0, lsl r6
   17dac:	andeq	r8, r1, r8, lsr r5
   17db0:	andeq	r8, r1, r0, lsl #13
   17db4:	andeq	r8, r1, r8, lsr r5
   17db8:	andeq	r8, r1, r8, lsr r5
   17dbc:	andeq	r8, r1, r8, lsr r5
   17dc0:	andeq	r8, r1, r0, lsl r6
   17dc4:	andeq	r8, r1, r0, lsl r6
   17dc8:	andeq	r8, r1, r0, lsl r6
   17dcc:	andeq	r8, r1, r0, lsl r6
   17dd0:	andeq	r8, r1, r0, lsl r6
   17dd4:	andeq	r8, r1, r0, lsl r6
   17dd8:	andeq	r8, r1, r0, lsl r6
   17ddc:	andeq	r8, r1, r0, lsl r6
   17de0:	andeq	r8, r1, r0, lsl r6
   17de4:	andeq	r8, r1, r0, lsl r6
   17de8:	andeq	r8, r1, r0, lsl r6
   17dec:	andeq	r8, r1, r0, lsl r6
   17df0:	andeq	r8, r1, r0, lsl r6
   17df4:	andeq	r8, r1, r0, lsl r6
   17df8:	andeq	r8, r1, r0, lsl r6
   17dfc:	andeq	r8, r1, r0, lsl r6
   17e00:	andeq	r8, r1, r8, lsr r5
   17e04:	andeq	r8, r1, r8, lsr r5
   17e08:	andeq	r8, r1, r8, lsr r5
   17e0c:	andeq	r8, r1, r8, lsr r5
   17e10:	andeq	r8, r1, r0, lsr r6
   17e14:	andeq	r9, r1, ip, lsr #3
   17e18:	andeq	r8, r1, r0, lsl r6
   17e1c:	andeq	r8, r1, r0, lsl r6
   17e20:	andeq	r8, r1, r0, lsl r6
   17e24:	andeq	r8, r1, r0, lsl r6
   17e28:	andeq	r8, r1, r0, lsl r6
   17e2c:	andeq	r8, r1, r0, lsl r6
   17e30:	andeq	r8, r1, r0, lsl r6
   17e34:	andeq	r8, r1, r0, lsl r6
   17e38:	andeq	r8, r1, r0, lsl r6
   17e3c:	andeq	r8, r1, r0, lsl r6
   17e40:	andeq	r8, r1, r0, lsl r6
   17e44:	andeq	r8, r1, r0, lsl r6
   17e48:	andeq	r8, r1, r0, lsl r6
   17e4c:	andeq	r8, r1, r0, lsl r6
   17e50:	andeq	r8, r1, r0, lsl r6
   17e54:	andeq	r8, r1, r0, lsl r6
   17e58:	andeq	r8, r1, r0, lsl r6
   17e5c:	andeq	r8, r1, r0, lsl r6
   17e60:	andeq	r8, r1, r0, lsl r6
   17e64:	andeq	r8, r1, r0, lsl r6
   17e68:	andeq	r8, r1, r0, lsl r6
   17e6c:	andeq	r8, r1, r0, lsl r6
   17e70:	andeq	r8, r1, r0, lsl r6
   17e74:	andeq	r8, r1, r0, lsl r6
   17e78:	andeq	r8, r1, r0, lsl r6
   17e7c:	andeq	r8, r1, r0, lsl r6
   17e80:	andeq	r8, r1, r8, lsr r5
   17e84:	ldrdeq	r8, [r1], -r4
   17e88:	andeq	r8, r1, r0, lsl r6
   17e8c:	andeq	r8, r1, r8, lsr r5
   17e90:	andeq	r8, r1, r0, lsl r6
   17e94:	andeq	r8, r1, r8, lsr r5
   17e98:	andeq	r8, r1, r0, lsl r6
   17e9c:	andeq	r8, r1, r0, lsl r6
   17ea0:	andeq	r8, r1, r0, lsl r6
   17ea4:	andeq	r8, r1, r0, lsl r6
   17ea8:	andeq	r8, r1, r0, lsl r6
   17eac:	andeq	r8, r1, r0, lsl r6
   17eb0:	andeq	r8, r1, r0, lsl r6
   17eb4:	andeq	r8, r1, r0, lsl r6
   17eb8:	andeq	r8, r1, r0, lsl r6
   17ebc:	andeq	r8, r1, r0, lsl r6
   17ec0:	andeq	r8, r1, r0, lsl r6
   17ec4:	andeq	r8, r1, r0, lsl r6
   17ec8:	andeq	r8, r1, r0, lsl r6
   17ecc:	andeq	r8, r1, r0, lsl r6
   17ed0:	andeq	r8, r1, r0, lsl r6
   17ed4:	andeq	r8, r1, r0, lsl r6
   17ed8:	andeq	r8, r1, r0, lsl r6
   17edc:	andeq	r8, r1, r0, lsl r6
   17ee0:	andeq	r8, r1, r0, lsl r6
   17ee4:	andeq	r8, r1, r0, lsl r6
   17ee8:	andeq	r8, r1, r0, lsl r6
   17eec:	andeq	r8, r1, r0, lsl r6
   17ef0:	andeq	r8, r1, r0, lsl r6
   17ef4:	andeq	r8, r1, r0, lsl r6
   17ef8:	andeq	r8, r1, r0, lsl r6
   17efc:	andeq	r8, r1, r0, lsl r6
   17f00:	andeq	r8, r1, r0, ror #9
   17f04:	andeq	r8, r1, r8, lsr r5
   17f08:	andeq	r8, r1, r0, ror #9
   17f0c:	andeq	r8, r1, ip, lsr #10
   17f10:	ldr	r3, [sp, #180]	; 0xb4
   17f14:	cmp	r4, #0
   17f18:	and	r3, r3, #1
   17f1c:	str	r3, [sp, #92]	; 0x5c
   17f20:	ldr	r3, [sp, #180]	; 0xb4
   17f24:	and	r3, r3, #4
   17f28:	str	r3, [sp, #96]	; 0x60
   17f2c:	moveq	r3, #1
   17f30:	streq	r3, [sp, #60]	; 0x3c
   17f34:	beq	186c4 <lchmod@@Base+0x1504>
   17f38:	mov	r3, #0
   17f3c:	mov	r2, #1
   17f40:	mov	r4, r3
   17f44:	mov	r9, r3
   17f48:	str	r2, [sp, #32]
   17f4c:	str	r2, [sp, #44]	; 0x2c
   17f50:	str	r3, [sp, #48]	; 0x30
   17f54:	str	r2, [sp, #52]	; 0x34
   17f58:	str	r2, [sp, #56]	; 0x38
   17f5c:	str	r3, [sp, #60]	; 0x3c
   17f60:	str	r2, [sp, #64]	; 0x40
   17f64:	str	r2, [sp, #68]	; 0x44
   17f68:	str	r3, [sp, #80]	; 0x50
   17f6c:	str	r3, [sp, #84]	; 0x54
   17f70:	str	r3, [sp, #88]	; 0x58
   17f74:	movw	r3, #55480	; 0xd8b8
   17f78:	movt	r3, #1
   17f7c:	str	r3, [sp, #72]	; 0x48
   17f80:	mov	r3, #2
   17f84:	str	r3, [sp, #176]	; 0xb0
   17f88:	b	17c5c <lchmod@@Base+0xa9c>
   17f8c:	ldr	r3, [sp, #180]	; 0xb4
   17f90:	cmp	r4, #0
   17f94:	and	r3, r3, #1
   17f98:	str	r3, [sp, #92]	; 0x5c
   17f9c:	ldr	r3, [sp, #180]	; 0xb4
   17fa0:	and	r3, r3, #4
   17fa4:	str	r3, [sp, #96]	; 0x60
   17fa8:	bne	1937c <lchmod@@Base+0x21bc>
   17fac:	cmp	sl, #0
   17fb0:	beq	19128 <lchmod@@Base+0x1f68>
   17fb4:	mov	r3, #34	; 0x22
   17fb8:	mov	r2, r4
   17fbc:	mov	r1, #1
   17fc0:	mov	r9, r2
   17fc4:	strb	r3, [fp]
   17fc8:	movw	r3, #55460	; 0xd8a4
   17fcc:	movt	r3, #1
   17fd0:	mov	r4, r1
   17fd4:	str	r1, [sp, #32]
   17fd8:	str	r2, [sp, #44]	; 0x2c
   17fdc:	str	r1, [sp, #48]	; 0x30
   17fe0:	str	r2, [sp, #52]	; 0x34
   17fe4:	str	r1, [sp, #56]	; 0x38
   17fe8:	str	r1, [sp, #60]	; 0x3c
   17fec:	str	r2, [sp, #64]	; 0x40
   17ff0:	str	r2, [sp, #68]	; 0x44
   17ff4:	str	r3, [sp, #72]	; 0x48
   17ff8:	str	r2, [sp, #80]	; 0x50
   17ffc:	str	r2, [sp, #84]	; 0x54
   18000:	str	r2, [sp, #88]	; 0x58
   18004:	b	17c5c <lchmod@@Base+0xa9c>
   18008:	mov	r3, #0
   1800c:	mov	r2, #1
   18010:	mov	r9, r3
   18014:	str	r2, [sp, #32]
   18018:	str	r3, [sp, #44]	; 0x2c
   1801c:	str	r3, [sp, #48]	; 0x30
   18020:	str	r3, [sp, #52]	; 0x34
   18024:	str	r3, [sp, #60]	; 0x3c
   18028:	strd	r2, [sp, #64]	; 0x40
   1802c:	str	r3, [sp, #72]	; 0x48
   18030:	str	r3, [sp, #80]	; 0x50
   18034:	str	r3, [sp, #88]	; 0x58
   18038:	ldr	r3, [sp, #180]	; 0xb4
   1803c:	and	r3, r3, r2
   18040:	str	r3, [sp, #92]	; 0x5c
   18044:	ldr	r3, [sp, #180]	; 0xb4
   18048:	and	r3, r3, #4
   1804c:	str	r3, [sp, #96]	; 0x60
   18050:	ldr	r3, [sp, #176]	; 0xb0
   18054:	mov	r4, r3
   18058:	str	r3, [sp, #56]	; 0x38
   1805c:	str	r3, [sp, #84]	; 0x54
   18060:	b	17c5c <lchmod@@Base+0xa9c>
   18064:	mov	r3, #1
   18068:	mov	r4, #0
   1806c:	mov	r9, r4
   18070:	str	r3, [sp, #32]
   18074:	str	r3, [sp, #44]	; 0x2c
   18078:	str	r3, [sp, #48]	; 0x30
   1807c:	str	r4, [sp, #52]	; 0x34
   18080:	str	r3, [sp, #56]	; 0x38
   18084:	str	r3, [sp, #60]	; 0x3c
   18088:	str	r3, [sp, #88]	; 0x58
   1808c:	movw	r3, #55460	; 0xd8a4
   18090:	movt	r3, #1
   18094:	str	r4, [sp, #64]	; 0x40
   18098:	str	r4, [sp, #68]	; 0x44
   1809c:	str	r3, [sp, #72]	; 0x48
   180a0:	ldr	r3, [sp, #180]	; 0xb4
   180a4:	str	r4, [sp, #80]	; 0x50
   180a8:	str	r4, [sp, #84]	; 0x54
   180ac:	and	r3, r3, #1
   180b0:	str	r3, [sp, #92]	; 0x5c
   180b4:	ldr	r3, [sp, #180]	; 0xb4
   180b8:	and	r3, r3, #4
   180bc:	str	r3, [sp, #96]	; 0x60
   180c0:	mov	r3, #5
   180c4:	str	r3, [sp, #176]	; 0xb0
   180c8:	b	17c5c <lchmod@@Base+0xa9c>
   180cc:	mov	r3, #1
   180d0:	mov	r4, #0
   180d4:	mov	r9, r4
   180d8:	str	r3, [sp, #32]
   180dc:	str	r4, [sp, #44]	; 0x2c
   180e0:	str	r3, [sp, #48]	; 0x30
   180e4:	str	r3, [sp, #60]	; 0x3c
   180e8:	ldr	r3, [sp, #180]	; 0xb4
   180ec:	str	r4, [sp, #52]	; 0x34
   180f0:	str	r4, [sp, #56]	; 0x38
   180f4:	str	r4, [sp, #64]	; 0x40
   180f8:	str	r4, [sp, #68]	; 0x44
   180fc:	and	r3, r3, #1
   18100:	str	r4, [sp, #72]	; 0x48
   18104:	str	r4, [sp, #80]	; 0x50
   18108:	str	r4, [sp, #84]	; 0x54
   1810c:	str	r3, [sp, #92]	; 0x5c
   18110:	ldr	r3, [sp, #180]	; 0xb4
   18114:	str	r4, [sp, #88]	; 0x58
   18118:	and	r3, r3, #4
   1811c:	str	r3, [sp, #96]	; 0x60
   18120:	b	17c5c <lchmod@@Base+0xa9c>
   18124:	mov	r3, #0
   18128:	mov	r2, #1
   1812c:	ldr	r1, [sp, #176]	; 0xb0
   18130:	mov	r4, r3
   18134:	mov	r9, r3
   18138:	movw	r3, #55480	; 0xd8b8
   1813c:	movt	r3, #1
   18140:	str	r2, [sp, #32]
   18144:	str	r2, [sp, #44]	; 0x2c
   18148:	str	r4, [sp, #48]	; 0x30
   1814c:	strd	r2, [sp, #68]	; 0x44
   18150:	ldr	r3, [sp, #180]	; 0xb4
   18154:	str	r2, [sp, #52]	; 0x34
   18158:	str	r1, [sp, #56]	; 0x38
   1815c:	str	r4, [sp, #60]	; 0x3c
   18160:	str	r2, [sp, #64]	; 0x40
   18164:	and	r3, r3, r2
   18168:	str	r4, [sp, #80]	; 0x50
   1816c:	str	r4, [sp, #84]	; 0x54
   18170:	str	r4, [sp, #88]	; 0x58
   18174:	str	r3, [sp, #92]	; 0x5c
   18178:	ldr	r3, [sp, #180]	; 0xb4
   1817c:	and	r3, r3, #4
   18180:	str	r3, [sp, #96]	; 0x60
   18184:	mov	r3, #2
   18188:	str	r3, [sp, #176]	; 0xb0
   1818c:	b	17c5c <lchmod@@Base+0xa9c>
   18190:	mov	r3, #1
   18194:	mov	r2, #0
   18198:	mov	r4, r2
   1819c:	mov	r9, r2
   181a0:	str	r3, [sp, #32]
   181a4:	str	r3, [sp, #44]	; 0x2c
   181a8:	str	r2, [sp, #48]	; 0x30
   181ac:	str	r3, [sp, #52]	; 0x34
   181b0:	str	r3, [sp, #56]	; 0x38
   181b4:	str	r3, [sp, #60]	; 0x3c
   181b8:	str	r3, [sp, #64]	; 0x40
   181bc:	str	r3, [sp, #68]	; 0x44
   181c0:	str	r3, [sp, #88]	; 0x58
   181c4:	movw	r3, #55480	; 0xd8b8
   181c8:	movt	r3, #1
   181cc:	str	r3, [sp, #72]	; 0x48
   181d0:	ldr	r3, [sp, #180]	; 0xb4
   181d4:	str	r2, [sp, #80]	; 0x50
   181d8:	str	r2, [sp, #84]	; 0x54
   181dc:	and	r3, r3, #1
   181e0:	b	18174 <lchmod@@Base+0xfb4>
   181e4:	mov	r5, #102	; 0x66
   181e8:	mov	r6, #0
   181ec:	ldr	r3, [sp, #44]	; 0x2c
   181f0:	cmp	r3, #0
   181f4:	bne	190a4 <lchmod@@Base+0x1ee4>
   181f8:	ldr	r2, [sp, #52]	; 0x34
   181fc:	eor	r3, fp, #1
   18200:	ands	r3, r2, r3
   18204:	beq	1823c <lchmod@@Base+0x107c>
   18208:	cmp	sl, r4
   1820c:	mov	fp, r3
   18210:	movhi	r2, #39	; 0x27
   18214:	strbhi	r2, [r9, r4]
   18218:	add	r2, r4, #1
   1821c:	cmp	sl, r2
   18220:	movhi	r1, #36	; 0x24
   18224:	strbhi	r1, [r9, r2]
   18228:	add	r2, r4, #2
   1822c:	add	r4, r4, #3
   18230:	cmp	sl, r2
   18234:	movhi	r1, #39	; 0x27
   18238:	strbhi	r1, [r9, r2]
   1823c:	cmp	sl, r4
   18240:	add	r7, r7, #1
   18244:	movhi	r3, #92	; 0x5c
   18248:	strbhi	r3, [r9, r4]
   1824c:	add	r4, r4, #1
   18250:	cmp	r4, sl
   18254:	ldr	r3, [sp, #32]
   18258:	strbcc	r5, [r9, r4]
   1825c:	cmp	r6, #0
   18260:	add	r4, r4, #1
   18264:	moveq	r3, #0
   18268:	cmn	r8, #1
   1826c:	str	r3, [sp, #32]
   18270:	bne	17c74 <lchmod@@Base+0xab4>
   18274:	ldr	r3, [sp, #28]
   18278:	ldrb	r6, [r3, r7]
   1827c:	adds	r6, r6, #0
   18280:	movne	r6, #1
   18284:	cmp	r6, #0
   18288:	bne	17c84 <lchmod@@Base+0xac4>
   1828c:	mov	r3, r9
   18290:	mov	r9, fp
   18294:	mov	fp, r3
   18298:	ldr	r3, [sp, #68]	; 0x44
   1829c:	cmp	r4, #0
   182a0:	movne	r3, #0
   182a4:	cmp	r3, #0
   182a8:	bne	1949c <lchmod@@Base+0x22dc>
   182ac:	ldr	r3, [sp, #44]	; 0x2c
   182b0:	ldr	r2, [sp, #52]	; 0x34
   182b4:	eor	r3, r3, #1
   182b8:	ands	r2, r3, r2
   182bc:	beq	193d4 <lchmod@@Base+0x2214>
   182c0:	ldr	r3, [sp, #80]	; 0x50
   182c4:	cmp	r3, #0
   182c8:	beq	193d8 <lchmod@@Base+0x2218>
   182cc:	ldr	r3, [sp, #32]
   182d0:	cmp	r3, #0
   182d4:	bne	1944c <lchmod@@Base+0x228c>
   182d8:	ldr	r3, [sp, #84]	; 0x54
   182dc:	adds	r3, r3, #0
   182e0:	movne	r3, #1
   182e4:	cmp	sl, #0
   182e8:	movne	r3, #0
   182ec:	cmp	r3, #0
   182f0:	ldreq	r2, [sp, #80]	; 0x50
   182f4:	beq	193d8 <lchmod@@Base+0x2218>
   182f8:	ldr	r2, [sp, #84]	; 0x54
   182fc:	mov	sl, r2
   18300:	mov	r0, #0
   18304:	mov	r4, #1
   18308:	mov	r1, #39	; 0x27
   1830c:	str	r0, [sp, #44]	; 0x2c
   18310:	strb	r1, [fp]
   18314:	str	r0, [sp, #48]	; 0x30
   18318:	str	r4, [sp, #52]	; 0x34
   1831c:	str	r4, [sp, #56]	; 0x38
   18320:	str	r4, [sp, #64]	; 0x40
   18324:	str	r0, [sp, #68]	; 0x44
   18328:	str	r3, [sp, #80]	; 0x50
   1832c:	str	r2, [sp, #84]	; 0x54
   18330:	str	r0, [sp, #88]	; 0x58
   18334:	b	17f74 <lchmod@@Base+0xdb4>
   18338:	mov	r5, #98	; 0x62
   1833c:	b	181e8 <lchmod@@Base+0x1028>
   18340:	mov	r5, #97	; 0x61
   18344:	b	181e8 <lchmod@@Base+0x1028>
   18348:	ldr	r3, [sp, #48]	; 0x30
   1834c:	str	r3, [sp, #40]	; 0x28
   18350:	mov	r3, #116	; 0x74
   18354:	ldr	r2, [sp, #68]	; 0x44
   18358:	cmp	r2, #0
   1835c:	bne	18558 <lchmod@@Base+0x1398>
   18360:	ldr	r2, [sp, #60]	; 0x3c
   18364:	cmp	r2, #0
   18368:	bne	184b4 <lchmod@@Base+0x12f4>
   1836c:	ldr	r3, [sp, #44]	; 0x2c
   18370:	mov	r6, #0
   18374:	cmp	r3, #0
   18378:	beq	18524 <lchmod@@Base+0x1364>
   1837c:	mov	r3, fp
   18380:	ldr	r2, [sp, #184]	; 0xb8
   18384:	cmp	r2, #0
   18388:	beq	183a8 <lchmod@@Base+0x11e8>
   1838c:	ubfx	r1, r5, #5, #8
   18390:	mov	r0, r2
   18394:	and	r2, r5, #31
   18398:	ldr	r1, [r0, r1, lsl #2]
   1839c:	lsr	r2, r1, r2
   183a0:	tst	r2, #1
   183a4:	bne	181ec <lchmod@@Base+0x102c>
   183a8:	ldr	r2, [sp, #40]	; 0x28
   183ac:	cmp	r2, #0
   183b0:	addeq	r7, r7, #1
   183b4:	bne	181ec <lchmod@@Base+0x102c>
   183b8:	cmp	r3, #0
   183bc:	beq	18250 <lchmod@@Base+0x1090>
   183c0:	cmp	sl, r4
   183c4:	mov	fp, #0
   183c8:	movhi	r3, #39	; 0x27
   183cc:	strbhi	r3, [r9, r4]
   183d0:	add	r3, r4, #1
   183d4:	add	r4, r4, #2
   183d8:	cmp	sl, r3
   183dc:	movhi	r2, #39	; 0x27
   183e0:	strbhi	r2, [r9, r3]
   183e4:	b	18250 <lchmod@@Base+0x1090>
   183e8:	ldr	r3, [sp, #48]	; 0x30
   183ec:	str	r3, [sp, #40]	; 0x28
   183f0:	eor	r3, fp, #1
   183f4:	ldr	r2, [sp, #52]	; 0x34
   183f8:	ands	r2, r2, r3
   183fc:	beq	190bc <lchmod@@Base+0x1efc>
   18400:	cmp	sl, r4
   18404:	movhi	r3, #39	; 0x27
   18408:	strbhi	r3, [r9, r4]
   1840c:	add	r3, r4, #1
   18410:	cmp	sl, r3
   18414:	movhi	r1, #36	; 0x24
   18418:	strbhi	r1, [r9, r3]
   1841c:	add	r3, r4, #2
   18420:	cmp	sl, r3
   18424:	movhi	r1, #39	; 0x27
   18428:	strbhi	r1, [r9, r3]
   1842c:	add	r3, r4, #3
   18430:	cmp	sl, r3
   18434:	bls	19108 <lchmod@@Base+0x1f48>
   18438:	mov	r4, r3
   1843c:	mov	r3, #92	; 0x5c
   18440:	mov	fp, r2
   18444:	mov	r2, r4
   18448:	strb	r3, [r9, r4]
   1844c:	ldr	r3, [sp, #176]	; 0xb0
   18450:	add	r4, r4, #1
   18454:	cmp	r3, #2
   18458:	beq	19170 <lchmod@@Base+0x1fb0>
   1845c:	add	r3, r7, #1
   18460:	cmp	r3, r8
   18464:	bcs	1847c <lchmod@@Base+0x12bc>
   18468:	ldr	r1, [sp, #28]
   1846c:	ldrb	r3, [r1, r3]
   18470:	sub	r3, r3, #48	; 0x30
   18474:	cmp	r3, #9
   18478:	bls	19180 <lchmod@@Base+0x1fc0>
   1847c:	mov	r3, #0
   18480:	mov	r5, #48	; 0x30
   18484:	ldr	r6, [sp, #64]	; 0x40
   18488:	cmp	r6, #0
   1848c:	beq	18380 <lchmod@@Base+0x11c0>
   18490:	mov	r6, #0
   18494:	b	183a8 <lchmod@@Base+0x11e8>
   18498:	ldr	r3, [sp, #48]	; 0x30
   1849c:	str	r3, [sp, #40]	; 0x28
   184a0:	ldr	r2, [sp, #60]	; 0x3c
   184a4:	mov	r5, #13
   184a8:	mov	r3, #114	; 0x72
   184ac:	cmp	r2, #0
   184b0:	beq	1836c <lchmod@@Base+0x11ac>
   184b4:	mov	r5, r3
   184b8:	b	181e8 <lchmod@@Base+0x1028>
   184bc:	ldr	r3, [sp, #48]	; 0x30
   184c0:	str	r3, [sp, #40]	; 0x28
   184c4:	mov	r3, #118	; 0x76
   184c8:	b	18360 <lchmod@@Base+0x11a0>
   184cc:	ldr	r3, [sp, #48]	; 0x30
   184d0:	str	r3, [sp, #40]	; 0x28
   184d4:	mov	r5, #10
   184d8:	mov	r3, #110	; 0x6e
   184dc:	b	18360 <lchmod@@Base+0x11a0>
   184e0:	ldr	r3, [sp, #48]	; 0x30
   184e4:	cmn	r8, #1
   184e8:	str	r3, [sp, #40]	; 0x28
   184ec:	beq	18934 <lchmod@@Base+0x1774>
   184f0:	subs	r3, r8, #1
   184f4:	movne	r3, #1
   184f8:	cmp	r3, #0
   184fc:	bne	18508 <lchmod@@Base+0x1348>
   18500:	cmp	r7, #0
   18504:	beq	1854c <lchmod@@Base+0x138c>
   18508:	mov	r6, #0
   1850c:	ldr	r3, [sp, #64]	; 0x40
   18510:	cmp	r3, #0
   18514:	beq	1837c <lchmod@@Base+0x11bc>
   18518:	ldr	r3, [sp, #44]	; 0x2c
   1851c:	cmp	r3, #0
   18520:	bne	1837c <lchmod@@Base+0x11bc>
   18524:	mov	r3, fp
   18528:	b	183a8 <lchmod@@Base+0x11e8>
   1852c:	ldr	r3, [sp, #48]	; 0x30
   18530:	str	r3, [sp, #40]	; 0x28
   18534:	b	18500 <lchmod@@Base+0x1340>
   18538:	ldr	r3, [sp, #48]	; 0x30
   1853c:	str	r3, [sp, #40]	; 0x28
   18540:	b	18508 <lchmod@@Base+0x1348>
   18544:	ldr	r6, [sp, #48]	; 0x30
   18548:	str	r6, [sp, #40]	; 0x28
   1854c:	ldr	r3, [sp, #68]	; 0x44
   18550:	cmp	r3, #0
   18554:	beq	1850c <lchmod@@Base+0x134c>
   18558:	mov	r3, #2
   1855c:	mov	fp, r9
   18560:	str	r3, [sp, #176]	; 0xb0
   18564:	ldr	r3, [sp, #60]	; 0x3c
   18568:	cmp	r3, #0
   1856c:	ldr	r3, [sp, #176]	; 0xb0
   18570:	movne	r3, #4
   18574:	str	r3, [sp, #176]	; 0xb0
   18578:	mov	lr, #0
   1857c:	mov	r0, fp
   18580:	ldr	r2, [sp, #28]
   18584:	ldr	r3, [sp, #180]	; 0xb4
   18588:	ldr	r1, [sp, #188]	; 0xbc
   1858c:	bic	ip, r3, #2
   18590:	ldr	r3, [sp, #176]	; 0xb0
   18594:	stm	sp, {r3, ip, lr}
   18598:	mov	r3, r8
   1859c:	ldr	ip, [sp, #192]	; 0xc0
   185a0:	str	r1, [sp, #12]
   185a4:	mov	r1, sl
   185a8:	str	ip, [sp, #16]
   185ac:	bl	17b38 <lchmod@@Base+0x978>
   185b0:	mov	r4, r0
   185b4:	mov	r0, r4
   185b8:	add	sp, sp, #140	; 0x8c
   185bc:	ldrd	r4, [sp]
   185c0:	ldrd	r6, [sp, #8]
   185c4:	ldrd	r8, [sp, #16]
   185c8:	ldrd	sl, [sp, #24]
   185cc:	add	sp, sp, #32
   185d0:	pop	{pc}		; (ldr pc, [sp], #4)
   185d4:	ldr	r3, [sp, #48]	; 0x30
   185d8:	str	r3, [sp, #40]	; 0x28
   185dc:	ldr	r3, [sp, #176]	; 0xb0
   185e0:	cmp	r3, #2
   185e4:	beq	1895c <lchmod@@Base+0x179c>
   185e8:	ldr	r3, [sp, #88]	; 0x58
   185ec:	cmp	r3, #0
   185f0:	moveq	r5, #92	; 0x5c
   185f4:	moveq	r3, r5
   185f8:	beq	18360 <lchmod@@Base+0x11a0>
   185fc:	add	r7, r7, #1
   18600:	mov	r3, fp
   18604:	mov	r6, #0
   18608:	mov	r5, #92	; 0x5c
   1860c:	b	183b8 <lchmod@@Base+0x11f8>
   18610:	ldr	r3, [sp, #64]	; 0x40
   18614:	cmp	r3, #0
   18618:	bne	19490 <lchmod@@Base+0x22d0>
   1861c:	ldr	r2, [sp, #48]	; 0x30
   18620:	mov	r3, fp
   18624:	mov	r6, r2
   18628:	str	r2, [sp, #40]	; 0x28
   1862c:	b	18380 <lchmod@@Base+0x11c0>
   18630:	ldr	r3, [sp, #176]	; 0xb0
   18634:	cmp	r3, #2
   18638:	beq	193cc <lchmod@@Base+0x220c>
   1863c:	cmp	r3, #5
   18640:	ldr	r3, [sp, #48]	; 0x30
   18644:	str	r3, [sp, #40]	; 0x28
   18648:	bne	18674 <lchmod@@Base+0x14b4>
   1864c:	ldr	r3, [sp, #96]	; 0x60
   18650:	cmp	r3, #0
   18654:	beq	190d0 <lchmod@@Base+0x1f10>
   18658:	add	r3, r7, #2
   1865c:	cmp	r3, r8
   18660:	bcs	18674 <lchmod@@Base+0x14b4>
   18664:	ldr	r2, [sp, #36]	; 0x24
   18668:	ldrb	r5, [r2, #1]
   1866c:	cmp	r5, #63	; 0x3f
   18670:	beq	191b8 <lchmod@@Base+0x1ff8>
   18674:	mov	r6, #0
   18678:	mov	r5, #63	; 0x3f
   1867c:	b	1850c <lchmod@@Base+0x134c>
   18680:	ldr	r3, [sp, #176]	; 0xb0
   18684:	cmp	r3, #2
   18688:	ldr	r3, [sp, #48]	; 0x30
   1868c:	beq	18e74 <lchmod@@Base+0x1cb4>
   18690:	mov	r5, #39	; 0x27
   18694:	str	r3, [sp, #40]	; 0x28
   18698:	str	r6, [sp, #80]	; 0x50
   1869c:	b	1850c <lchmod@@Base+0x134c>
   186a0:	ldr	r3, [sp, #180]	; 0xb4
   186a4:	cmp	r4, #0
   186a8:	and	r3, r3, #1
   186ac:	str	r3, [sp, #92]	; 0x5c
   186b0:	ldr	r3, [sp, #180]	; 0xb4
   186b4:	and	r3, r3, #4
   186b8:	str	r3, [sp, #96]	; 0x60
   186bc:	bne	194dc <lchmod@@Base+0x231c>
   186c0:	str	r4, [sp, #60]	; 0x3c
   186c4:	cmp	sl, #0
   186c8:	bne	194c0 <lchmod@@Base+0x2300>
   186cc:	mov	r3, #1
   186d0:	movw	r2, #55480	; 0xd8b8
   186d4:	movt	r2, #1
   186d8:	mov	r4, r3
   186dc:	mov	r3, #2
   186e0:	mov	r9, sl
   186e4:	str	r4, [sp, #32]
   186e8:	str	sl, [sp, #44]	; 0x2c
   186ec:	str	sl, [sp, #48]	; 0x30
   186f0:	str	r4, [sp, #52]	; 0x34
   186f4:	str	r4, [sp, #56]	; 0x38
   186f8:	str	r4, [sp, #64]	; 0x40
   186fc:	str	sl, [sp, #68]	; 0x44
   18700:	str	r2, [sp, #72]	; 0x48
   18704:	str	sl, [sp, #80]	; 0x50
   18708:	str	sl, [sp, #84]	; 0x54
   1870c:	str	sl, [sp, #88]	; 0x58
   18710:	str	r3, [sp, #176]	; 0xb0
   18714:	b	17c5c <lchmod@@Base+0xa9c>
   18718:	ldrb	r5, [r0, r7]
   1871c:	cmp	r5, #126	; 0x7e
   18720:	ldrls	pc, [pc, r5, lsl #2]
   18724:	b	18a88 <lchmod@@Base+0x18c8>
   18728:	andeq	r8, r1, r4, asr sl
   1872c:	andeq	r8, r1, r8, lsl #21
   18730:	andeq	r8, r1, r8, lsl #21
   18734:	andeq	r8, r1, r8, lsl #21
   18738:	andeq	r8, r1, r8, lsl #21
   1873c:	andeq	r8, r1, r8, lsl #21
   18740:	andeq	r8, r1, r8, lsl #21
   18744:	andeq	r8, r1, r4, asr #20
   18748:	andeq	r8, r1, r4, lsr sl
   1874c:			; <UNDEFINED> instruction: 0x000189b8
   18750:	andeq	r8, r1, r4, lsr #20
   18754:	muleq	r1, r8, r9
   18758:	andeq	r8, r1, r8, ror sl
   1875c:	andeq	r8, r1, r4, lsl #20
   18760:	andeq	r8, r1, r8, lsl #21
   18764:	andeq	r8, r1, r8, lsl #21
   18768:	andeq	r8, r1, r8, lsl #21
   1876c:	andeq	r8, r1, r8, lsl #21
   18770:	andeq	r8, r1, r8, lsl #21
   18774:	andeq	r8, r1, r8, lsl #21
   18778:	andeq	r8, r1, r8, lsl #21
   1877c:	andeq	r8, r1, r8, lsl #21
   18780:	andeq	r8, r1, r8, lsl #21
   18784:	andeq	r8, r1, r8, lsl #21
   18788:	andeq	r8, r1, r8, lsl #21
   1878c:	andeq	r8, r1, r8, lsl #21
   18790:	andeq	r8, r1, r8, lsl #21
   18794:	andeq	r8, r1, r8, lsl #21
   18798:	andeq	r8, r1, r8, lsl #21
   1879c:	andeq	r8, r1, r8, lsl #21
   187a0:	andeq	r8, r1, r8, lsl #21
   187a4:	andeq	r8, r1, r8, lsl #21
   187a8:	andeq	r8, r1, ip, lsr #19
   187ac:	andeq	r8, r1, r4, lsl sl
   187b0:	andeq	r8, r1, r4, lsl sl
   187b4:	andeq	r8, r1, ip, lsl #19
   187b8:	andeq	r8, r1, r4, lsl sl
   187bc:	andeq	r8, r1, r0, lsl #19
   187c0:	andeq	r8, r1, r4, lsl sl
   187c4:	strdeq	r8, [r1], -r0
   187c8:	andeq	r8, r1, r4, lsl sl
   187cc:	andeq	r8, r1, r4, lsl sl
   187d0:	andeq	r8, r1, r4, lsl sl
   187d4:	andeq	r8, r1, r0, lsl #19
   187d8:	andeq	r8, r1, r0, lsl #19
   187dc:	andeq	r8, r1, r0, lsl #19
   187e0:	andeq	r8, r1, r0, lsl #19
   187e4:	andeq	r8, r1, r0, lsl #19
   187e8:	andeq	r8, r1, r0, lsl #19
   187ec:	andeq	r8, r1, r0, lsl #19
   187f0:	andeq	r8, r1, r0, lsl #19
   187f4:	andeq	r8, r1, r0, lsl #19
   187f8:	andeq	r8, r1, r0, lsl #19
   187fc:	andeq	r8, r1, r0, lsl #19
   18800:	andeq	r8, r1, r0, lsl #19
   18804:	andeq	r8, r1, r0, lsl #19
   18808:	andeq	r8, r1, r0, lsl #19
   1880c:	andeq	r8, r1, r0, lsl #19
   18810:	andeq	r8, r1, r0, lsl #19
   18814:	andeq	r8, r1, r4, lsl sl
   18818:	andeq	r8, r1, r4, lsl sl
   1881c:	andeq	r8, r1, r4, lsl sl
   18820:	andeq	r8, r1, r4, lsl sl
   18824:	andeq	r8, r1, r8, asr #19
   18828:	andeq	r8, r1, r8, lsl #21
   1882c:	andeq	r8, r1, r0, lsl #19
   18830:	andeq	r8, r1, r0, lsl #19
   18834:	andeq	r8, r1, r0, lsl #19
   18838:	andeq	r8, r1, r0, lsl #19
   1883c:	andeq	r8, r1, r0, lsl #19
   18840:	andeq	r8, r1, r0, lsl #19
   18844:	andeq	r8, r1, r0, lsl #19
   18848:	andeq	r8, r1, r0, lsl #19
   1884c:	andeq	r8, r1, r0, lsl #19
   18850:	andeq	r8, r1, r0, lsl #19
   18854:	andeq	r8, r1, r0, lsl #19
   18858:	andeq	r8, r1, r0, lsl #19
   1885c:	andeq	r8, r1, r0, lsl #19
   18860:	andeq	r8, r1, r0, lsl #19
   18864:	andeq	r8, r1, r0, lsl #19
   18868:	andeq	r8, r1, r0, lsl #19
   1886c:	andeq	r8, r1, r0, lsl #19
   18870:	andeq	r8, r1, r0, lsl #19
   18874:	andeq	r8, r1, r0, lsl #19
   18878:	andeq	r8, r1, r0, lsl #19
   1887c:	andeq	r8, r1, r0, lsl #19
   18880:	andeq	r8, r1, r0, lsl #19
   18884:	andeq	r8, r1, r0, lsl #19
   18888:	andeq	r8, r1, r0, lsl #19
   1888c:	andeq	r8, r1, r0, lsl #19
   18890:	andeq	r8, r1, r0, lsl #19
   18894:	andeq	r8, r1, r4, lsl sl
   18898:	andeq	r8, r1, r8, asr #18
   1889c:	andeq	r8, r1, r0, lsl #19
   188a0:	andeq	r8, r1, r4, lsl sl
   188a4:	andeq	r8, r1, r0, lsl #19
   188a8:	andeq	r8, r1, r4, lsl sl
   188ac:	andeq	r8, r1, r0, lsl #19
   188b0:	andeq	r8, r1, r0, lsl #19
   188b4:	andeq	r8, r1, r0, lsl #19
   188b8:	andeq	r8, r1, r0, lsl #19
   188bc:	andeq	r8, r1, r0, lsl #19
   188c0:	andeq	r8, r1, r0, lsl #19
   188c4:	andeq	r8, r1, r0, lsl #19
   188c8:	andeq	r8, r1, r0, lsl #19
   188cc:	andeq	r8, r1, r0, lsl #19
   188d0:	andeq	r8, r1, r0, lsl #19
   188d4:	andeq	r8, r1, r0, lsl #19
   188d8:	andeq	r8, r1, r0, lsl #19
   188dc:	andeq	r8, r1, r0, lsl #19
   188e0:	andeq	r8, r1, r0, lsl #19
   188e4:	andeq	r8, r1, r0, lsl #19
   188e8:	andeq	r8, r1, r0, lsl #19
   188ec:	andeq	r8, r1, r0, lsl #19
   188f0:	andeq	r8, r1, r0, lsl #19
   188f4:	andeq	r8, r1, r0, lsl #19
   188f8:	andeq	r8, r1, r0, lsl #19
   188fc:	andeq	r8, r1, r0, lsl #19
   18900:	andeq	r8, r1, r0, lsl #19
   18904:	andeq	r8, r1, r0, lsl #19
   18908:	andeq	r8, r1, r0, lsl #19
   1890c:	andeq	r8, r1, r0, lsl #19
   18910:	andeq	r8, r1, r0, lsl #19
   18914:	andeq	r8, r1, r4, lsr #18
   18918:	andeq	r8, r1, r4, lsl sl
   1891c:	andeq	r8, r1, r4, lsr #18
   18920:	andeq	r8, r1, ip, lsl #19
   18924:	mov	r3, #0
   18928:	cmn	r8, #1
   1892c:	str	r3, [sp, #40]	; 0x28
   18930:	bne	184f0 <lchmod@@Base+0x1330>
   18934:	ldr	r3, [sp, #28]
   18938:	ldrb	r3, [r3, #1]
   1893c:	adds	r3, r3, #0
   18940:	movne	r3, #1
   18944:	b	184f8 <lchmod@@Base+0x1338>
   18948:	mov	r3, #0
   1894c:	str	r3, [sp, #40]	; 0x28
   18950:	ldr	r3, [sp, #176]	; 0xb0
   18954:	cmp	r3, #2
   18958:	bne	185e8 <lchmod@@Base+0x1428>
   1895c:	ldr	r3, [sp, #44]	; 0x2c
   18960:	cmp	r3, #0
   18964:	bne	192a4 <lchmod@@Base+0x20e4>
   18968:	mov	r6, r3
   1896c:	add	r7, r7, #1
   18970:	mov	r3, fp
   18974:	mov	r5, #92	; 0x5c
   18978:	b	183b8 <lchmod@@Base+0x11f8>
   1897c:	ldr	r6, [sp, #48]	; 0x30
   18980:	mov	r3, #0
   18984:	str	r3, [sp, #40]	; 0x28
   18988:	b	1850c <lchmod@@Base+0x134c>
   1898c:	mov	r3, #0
   18990:	str	r3, [sp, #40]	; 0x28
   18994:	b	18500 <lchmod@@Base+0x1340>
   18998:	mov	r3, #0
   1899c:	str	r3, [sp, #40]	; 0x28
   189a0:	mov	r3, #118	; 0x76
   189a4:	b	18360 <lchmod@@Base+0x11a0>
   189a8:	ldr	r6, [sp, #48]	; 0x30
   189ac:	mov	r3, #0
   189b0:	str	r3, [sp, #40]	; 0x28
   189b4:	b	1854c <lchmod@@Base+0x138c>
   189b8:	mov	r3, #0
   189bc:	str	r3, [sp, #40]	; 0x28
   189c0:	mov	r3, #116	; 0x74
   189c4:	b	18354 <lchmod@@Base+0x1194>
   189c8:	ldr	r3, [sp, #176]	; 0xb0
   189cc:	cmp	r3, #2
   189d0:	beq	18ee0 <lchmod@@Base+0x1d20>
   189d4:	cmp	r3, #5
   189d8:	mov	r3, #0
   189dc:	str	r3, [sp, #40]	; 0x28
   189e0:	beq	1864c <lchmod@@Base+0x148c>
   189e4:	mov	r6, #0
   189e8:	mov	r5, #63	; 0x3f
   189ec:	b	1850c <lchmod@@Base+0x134c>
   189f0:	ldr	r3, [sp, #176]	; 0xb0
   189f4:	cmp	r3, #2
   189f8:	beq	18e68 <lchmod@@Base+0x1ca8>
   189fc:	mov	r3, #0
   18a00:	b	18690 <lchmod@@Base+0x14d0>
   18a04:	mov	r3, #0
   18a08:	str	r3, [sp, #40]	; 0x28
   18a0c:	mov	r3, #114	; 0x72
   18a10:	b	18354 <lchmod@@Base+0x1194>
   18a14:	mov	r3, #0
   18a18:	mov	r6, r3
   18a1c:	str	r3, [sp, #40]	; 0x28
   18a20:	b	1854c <lchmod@@Base+0x138c>
   18a24:	mov	r3, #0
   18a28:	str	r3, [sp, #40]	; 0x28
   18a2c:	mov	r3, #110	; 0x6e
   18a30:	b	18354 <lchmod@@Base+0x1194>
   18a34:	mov	r3, #0
   18a38:	str	r3, [sp, #40]	; 0x28
   18a3c:	mov	r3, #98	; 0x62
   18a40:	b	18360 <lchmod@@Base+0x11a0>
   18a44:	mov	r3, #0
   18a48:	str	r3, [sp, #40]	; 0x28
   18a4c:	mov	r3, #97	; 0x61
   18a50:	b	18360 <lchmod@@Base+0x11a0>
   18a54:	ldr	r3, [sp, #60]	; 0x3c
   18a58:	cmp	r3, #0
   18a5c:	bne	18e4c <lchmod@@Base+0x1c8c>
   18a60:	ldr	r3, [sp, #92]	; 0x5c
   18a64:	cmp	r3, #0
   18a68:	addne	r7, r7, #1
   18a6c:	bne	17c6c <lchmod@@Base+0xaac>
   18a70:	str	r3, [sp, #40]	; 0x28
   18a74:	b	1836c <lchmod@@Base+0x11ac>
   18a78:	mov	r3, #0
   18a7c:	str	r3, [sp, #40]	; 0x28
   18a80:	mov	r3, #102	; 0x66
   18a84:	b	18360 <lchmod@@Base+0x11a0>
   18a88:	mov	r3, #0
   18a8c:	str	r3, [sp, #40]	; 0x28
   18a90:	ldr	r3, [sp, #76]	; 0x4c
   18a94:	cmp	r3, #1
   18a98:	bne	18f00 <lchmod@@Base+0x1d40>
   18a9c:	bl	11628 <__ctype_b_loc@plt>
   18aa0:	ldr	r2, [r0]
   18aa4:	sxth	r3, r5
   18aa8:	lsl	r3, r3, #1
   18aac:	ldr	r1, [sp, #76]	; 0x4c
   18ab0:	ldrh	r3, [r2, r3]
   18ab4:	mov	r0, r1
   18ab8:	and	r3, r3, #16384	; 0x4000
   18abc:	cmp	r3, #0
   18ac0:	ldr	r3, [sp, #60]	; 0x3c
   18ac4:	movne	r6, #1
   18ac8:	moveq	r6, #0
   18acc:	movne	r2, #0
   18ad0:	andeq	r2, r3, #1
   18ad4:	cmp	r2, #0
   18ad8:	beq	1850c <lchmod@@Base+0x134c>
   18adc:	ldr	r2, [sp, #60]	; 0x3c
   18ae0:	mov	r6, #0
   18ae4:	add	r1, r0, r7
   18ae8:	mov	ip, #39	; 0x27
   18aec:	str	r6, [sp, #100]	; 0x64
   18af0:	mov	r0, #0
   18af4:	ldr	lr, [sp, #36]	; 0x24
   18af8:	str	r8, [sp, #36]	; 0x24
   18afc:	ldr	r6, [sp, #40]	; 0x28
   18b00:	ldr	r8, [sp, #44]	; 0x2c
   18b04:	b	18bb4 <lchmod@@Base+0x19f4>
   18b08:	cmp	r8, #0
   18b0c:	bne	190e8 <lchmod@@Base+0x1f28>
   18b10:	ldr	r0, [sp, #52]	; 0x34
   18b14:	eor	r3, fp, #1
   18b18:	ands	r3, r0, r3
   18b1c:	beq	18b4c <lchmod@@Base+0x198c>
   18b20:	cmp	sl, r4
   18b24:	add	r0, r4, #1
   18b28:	strbhi	ip, [r9, r4]
   18b2c:	cmp	sl, r0
   18b30:	movhi	fp, #36	; 0x24
   18b34:	strbhi	fp, [r9, r0]
   18b38:	add	r0, r4, #2
   18b3c:	mov	fp, r3
   18b40:	cmp	sl, r0
   18b44:	add	r4, r4, #3
   18b48:	strbhi	ip, [r9, r0]
   18b4c:	cmp	sl, r4
   18b50:	movhi	r3, #92	; 0x5c
   18b54:	strbhi	r3, [r9, r4]
   18b58:	add	r3, r4, #1
   18b5c:	cmp	sl, r3
   18b60:	bls	18b70 <lchmod@@Base+0x19b0>
   18b64:	lsr	r0, r5, #6
   18b68:	add	r0, r0, #48	; 0x30
   18b6c:	strb	r0, [r9, r3]
   18b70:	add	r3, r4, #2
   18b74:	cmp	sl, r3
   18b78:	bls	18b88 <lchmod@@Base+0x19c8>
   18b7c:	ubfx	r0, r5, #3, #3
   18b80:	add	r0, r0, #48	; 0x30
   18b84:	strb	r0, [r9, r3]
   18b88:	add	r7, r7, #1
   18b8c:	and	r5, r5, #7
   18b90:	cmp	r1, r7
   18b94:	add	r5, r5, #48	; 0x30
   18b98:	add	r4, r4, #3
   18b9c:	bls	190fc <lchmod@@Base+0x1f3c>
   18ba0:	mov	r0, r2
   18ba4:	cmp	sl, r4
   18ba8:	strbhi	r5, [r9, r4]
   18bac:	add	r4, r4, #1
   18bb0:	ldrb	r5, [lr, #1]!
   18bb4:	cmp	r2, #0
   18bb8:	bne	18b08 <lchmod@@Base+0x1948>
   18bbc:	eor	r3, r0, #1
   18bc0:	cmp	r6, #0
   18bc4:	and	r3, r3, fp
   18bc8:	uxtb	r3, r3
   18bcc:	beq	18be0 <lchmod@@Base+0x1a20>
   18bd0:	cmp	sl, r4
   18bd4:	movhi	r6, #92	; 0x5c
   18bd8:	strbhi	r6, [r9, r4]
   18bdc:	add	r4, r4, #1
   18be0:	add	r7, r7, #1
   18be4:	cmp	r7, r1
   18be8:	bcs	190dc <lchmod@@Base+0x1f1c>
   18bec:	cmp	r3, #0
   18bf0:	beq	19120 <lchmod@@Base+0x1f60>
   18bf4:	cmp	sl, r4
   18bf8:	add	r3, r4, #1
   18bfc:	mov	r6, #0
   18c00:	strbhi	ip, [r9, r4]
   18c04:	cmp	sl, r3
   18c08:	add	r4, r4, #2
   18c0c:	mov	fp, r6
   18c10:	strbhi	ip, [r9, r3]
   18c14:	b	18ba4 <lchmod@@Base+0x19e4>
   18c18:	ldr	r3, [sp, #36]	; 0x24
   18c1c:	ldrb	r5, [r3]
   18c20:	cmp	r5, #126	; 0x7e
   18c24:	ldrls	pc, [pc, r5, lsl #2]
   18c28:	b	18a88 <lchmod@@Base+0x18c8>
   18c2c:	andeq	r8, r1, ip, asr #28
   18c30:	andeq	r8, r1, r8, lsl #21
   18c34:	andeq	r8, r1, r8, lsl #21
   18c38:	andeq	r8, r1, r8, lsl #21
   18c3c:	andeq	r8, r1, r8, lsl #21
   18c40:	andeq	r8, r1, r8, lsl #21
   18c44:	andeq	r8, r1, r8, lsl #21
   18c48:	andeq	r8, r1, r0, asr #6
   18c4c:	andeq	r8, r1, r8, lsr r3
   18c50:			; <UNDEFINED> instruction: 0x000189b8
   18c54:	andeq	r8, r1, r0, asr #28
   18c58:	muleq	r1, r8, r9
   18c5c:	andeq	r8, r1, r4, ror #3
   18c60:	andeq	r8, r1, r4, lsr lr
   18c64:	andeq	r8, r1, r8, lsl #21
   18c68:	andeq	r8, r1, r8, lsl #21
   18c6c:	andeq	r8, r1, r8, lsl #21
   18c70:	andeq	r8, r1, r8, lsl #21
   18c74:	andeq	r8, r1, r8, lsl #21
   18c78:	andeq	r8, r1, r8, lsl #21
   18c7c:	andeq	r8, r1, r8, lsl #21
   18c80:	andeq	r8, r1, r8, lsl #21
   18c84:	andeq	r8, r1, r8, lsl #21
   18c88:	andeq	r8, r1, r8, lsl #21
   18c8c:	andeq	r8, r1, r8, lsl #21
   18c90:	andeq	r8, r1, r8, lsl #21
   18c94:	andeq	r8, r1, r8, lsl #21
   18c98:	andeq	r8, r1, r8, lsl #21
   18c9c:	andeq	r8, r1, r8, lsl #21
   18ca0:	andeq	r8, r1, r8, lsl #21
   18ca4:	andeq	r8, r1, r8, lsl #21
   18ca8:	andeq	r8, r1, r8, lsl #21
   18cac:	andeq	r8, r1, r8, lsr #19
   18cb0:	andeq	r8, r1, r8, lsr #28
   18cb4:	andeq	r8, r1, r8, lsr #28
   18cb8:	andeq	r8, r1, ip, lsl #19
   18cbc:	andeq	r8, r1, r8, lsr #28
   18cc0:	andeq	r8, r1, ip, ror r9
   18cc4:	andeq	r8, r1, r8, lsr #28
   18cc8:	strdeq	r8, [r1], -r0
   18ccc:	andeq	r8, r1, r8, lsr #28
   18cd0:	andeq	r8, r1, r8, lsr #28
   18cd4:	andeq	r8, r1, r8, lsr #28
   18cd8:	andeq	r8, r1, ip, ror r9
   18cdc:	andeq	r8, r1, ip, ror r9
   18ce0:	andeq	r8, r1, ip, ror r9
   18ce4:	andeq	r8, r1, ip, ror r9
   18ce8:	andeq	r8, r1, ip, ror r9
   18cec:	andeq	r8, r1, ip, ror r9
   18cf0:	andeq	r8, r1, ip, ror r9
   18cf4:	andeq	r8, r1, ip, ror r9
   18cf8:	andeq	r8, r1, ip, ror r9
   18cfc:	andeq	r8, r1, ip, ror r9
   18d00:	andeq	r8, r1, ip, ror r9
   18d04:	andeq	r8, r1, ip, ror r9
   18d08:	andeq	r8, r1, ip, ror r9
   18d0c:	andeq	r8, r1, ip, ror r9
   18d10:	andeq	r8, r1, ip, ror r9
   18d14:	andeq	r8, r1, ip, ror r9
   18d18:	andeq	r8, r1, r8, lsr #28
   18d1c:	andeq	r8, r1, r8, lsr #28
   18d20:	andeq	r8, r1, r8, lsr #28
   18d24:	andeq	r8, r1, r8, lsr #28
   18d28:	andeq	r8, r1, r8, asr #19
   18d2c:	andeq	r8, r1, r8, lsl #21
   18d30:	andeq	r8, r1, ip, ror r9
   18d34:	andeq	r8, r1, ip, ror r9
   18d38:	andeq	r8, r1, ip, ror r9
   18d3c:	andeq	r8, r1, ip, ror r9
   18d40:	andeq	r8, r1, ip, ror r9
   18d44:	andeq	r8, r1, ip, ror r9
   18d48:	andeq	r8, r1, ip, ror r9
   18d4c:	andeq	r8, r1, ip, ror r9
   18d50:	andeq	r8, r1, ip, ror r9
   18d54:	andeq	r8, r1, ip, ror r9
   18d58:	andeq	r8, r1, ip, ror r9
   18d5c:	andeq	r8, r1, ip, ror r9
   18d60:	andeq	r8, r1, ip, ror r9
   18d64:	andeq	r8, r1, ip, ror r9
   18d68:	andeq	r8, r1, ip, ror r9
   18d6c:	andeq	r8, r1, ip, ror r9
   18d70:	andeq	r8, r1, ip, ror r9
   18d74:	andeq	r8, r1, ip, ror r9
   18d78:	andeq	r8, r1, ip, ror r9
   18d7c:	andeq	r8, r1, ip, ror r9
   18d80:	andeq	r8, r1, ip, ror r9
   18d84:	andeq	r8, r1, ip, ror r9
   18d88:	andeq	r8, r1, ip, ror r9
   18d8c:	andeq	r8, r1, ip, ror r9
   18d90:	andeq	r8, r1, ip, ror r9
   18d94:	andeq	r8, r1, ip, ror r9
   18d98:	andeq	r8, r1, r8, lsr #28
   18d9c:	andeq	r8, r1, r8, asr #18
   18da0:	andeq	r8, r1, ip, ror r9
   18da4:	andeq	r8, r1, r8, lsr #28
   18da8:	andeq	r8, r1, ip, ror r9
   18dac:	andeq	r8, r1, r8, lsr #28
   18db0:	andeq	r8, r1, ip, ror r9
   18db4:	andeq	r8, r1, ip, ror r9
   18db8:	andeq	r8, r1, ip, ror r9
   18dbc:	andeq	r8, r1, ip, ror r9
   18dc0:	andeq	r8, r1, ip, ror r9
   18dc4:	andeq	r8, r1, ip, ror r9
   18dc8:	andeq	r8, r1, ip, ror r9
   18dcc:	andeq	r8, r1, ip, ror r9
   18dd0:	andeq	r8, r1, ip, ror r9
   18dd4:	andeq	r8, r1, ip, ror r9
   18dd8:	andeq	r8, r1, ip, ror r9
   18ddc:	andeq	r8, r1, ip, ror r9
   18de0:	andeq	r8, r1, ip, ror r9
   18de4:	andeq	r8, r1, ip, ror r9
   18de8:	andeq	r8, r1, ip, ror r9
   18dec:	andeq	r8, r1, ip, ror r9
   18df0:	andeq	r8, r1, ip, ror r9
   18df4:	andeq	r8, r1, ip, ror r9
   18df8:	andeq	r8, r1, ip, ror r9
   18dfc:	andeq	r8, r1, ip, ror r9
   18e00:	andeq	r8, r1, ip, ror r9
   18e04:	andeq	r8, r1, ip, ror r9
   18e08:	andeq	r8, r1, ip, ror r9
   18e0c:	andeq	r8, r1, ip, ror r9
   18e10:	andeq	r8, r1, ip, ror r9
   18e14:	andeq	r8, r1, ip, ror r9
   18e18:	andeq	r8, r1, r4, lsr #18
   18e1c:	andeq	r8, r1, r8, lsr #28
   18e20:	andeq	r8, r1, r4, lsr #18
   18e24:	andeq	r8, r1, ip, lsl #19
   18e28:	mov	r3, #0
   18e2c:	str	r3, [sp, #40]	; 0x28
   18e30:	b	18508 <lchmod@@Base+0x1348>
   18e34:	mov	r3, #0
   18e38:	str	r3, [sp, #40]	; 0x28
   18e3c:	b	184a0 <lchmod@@Base+0x12e0>
   18e40:	mov	r3, #0
   18e44:	str	r3, [sp, #40]	; 0x28
   18e48:	b	184d4 <lchmod@@Base+0x1314>
   18e4c:	ldr	r3, [sp, #44]	; 0x2c
   18e50:	cmp	r3, #0
   18e54:	beq	183ec <lchmod@@Base+0x122c>
   18e58:	ldr	r3, [sp, #52]	; 0x34
   18e5c:	mov	fp, r9
   18e60:	str	r3, [sp, #60]	; 0x3c
   18e64:	b	18564 <lchmod@@Base+0x13a4>
   18e68:	ldr	r3, [sp, #44]	; 0x2c
   18e6c:	cmp	r3, #0
   18e70:	bne	192a4 <lchmod@@Base+0x20e4>
   18e74:	str	r3, [sp, #40]	; 0x28
   18e78:	cmp	sl, #0
   18e7c:	ldr	r3, [sp, #84]	; 0x54
   18e80:	clz	r3, r3
   18e84:	lsr	r3, r3, #5
   18e88:	moveq	r3, #0
   18e8c:	cmp	r3, #0
   18e90:	strne	sl, [sp, #84]	; 0x54
   18e94:	movne	sl, #0
   18e98:	bne	18ec8 <lchmod@@Base+0x1d08>
   18e9c:	cmp	sl, r4
   18ea0:	movhi	r3, #39	; 0x27
   18ea4:	strbhi	r3, [r9, r4]
   18ea8:	add	r3, r4, #1
   18eac:	cmp	sl, r3
   18eb0:	movhi	r2, #92	; 0x5c
   18eb4:	strbhi	r2, [r9, r3]
   18eb8:	add	r3, r4, #2
   18ebc:	cmp	sl, r3
   18ec0:	movhi	r2, #39	; 0x27
   18ec4:	strbhi	r2, [r9, r3]
   18ec8:	mov	r3, #0
   18ecc:	add	r4, r4, #3
   18ed0:	str	r6, [sp, #80]	; 0x50
   18ed4:	mov	fp, r3
   18ed8:	mov	r5, #39	; 0x27
   18edc:	b	183a8 <lchmod@@Base+0x11e8>
   18ee0:	ldr	r3, [sp, #44]	; 0x2c
   18ee4:	cmp	r3, #0
   18ee8:	bne	192a4 <lchmod@@Base+0x20e4>
   18eec:	mov	r6, #0
   18ef0:	mov	r5, #63	; 0x3f
   18ef4:	str	r3, [sp, #40]	; 0x28
   18ef8:	mov	r3, fp
   18efc:	b	183a8 <lchmod@@Base+0x11e8>
   18f00:	mov	r2, #0
   18f04:	mov	r3, #0
   18f08:	cmn	r8, #1
   18f0c:	strd	r2, [sp, #128]	; 0x80
   18f10:	bne	18f20 <lchmod@@Base+0x1d60>
   18f14:	ldr	r0, [sp, #28]
   18f18:	bl	11658 <strlen@plt>
   18f1c:	mov	r8, r0
   18f20:	str	r9, [sp, #100]	; 0x64
   18f24:	mov	r3, #0
   18f28:	strd	sl, [sp, #104]	; 0x68
   18f2c:	ldr	sl, [sp, #28]
   18f30:	str	r5, [sp, #112]	; 0x70
   18f34:	mov	r5, r3
   18f38:	ldr	r9, [sp, #68]	; 0x44
   18f3c:	str	r4, [sp, #116]	; 0x74
   18f40:	add	r4, r7, r5
   18f44:	add	r3, sp, #128	; 0x80
   18f48:	add	fp, sl, r4
   18f4c:	sub	r2, r8, r4
   18f50:	mov	r1, fp
   18f54:	add	r0, sp, #124	; 0x7c
   18f58:	bl	1cdbc <lchmod@@Base+0x5bfc>
   18f5c:	subs	r1, r0, #0
   18f60:	beq	18fa0 <lchmod@@Base+0x1de0>
   18f64:	cmn	r1, #1
   18f68:	beq	192f8 <lchmod@@Base+0x2138>
   18f6c:	cmn	r1, #2
   18f70:	beq	19318 <lchmod@@Base+0x2158>
   18f74:	cmp	r9, #0
   18f78:	bne	18fd0 <lchmod@@Base+0x1e10>
   18f7c:	ldr	r0, [sp, #124]	; 0x7c
   18f80:	add	r5, r5, r1
   18f84:	bl	11544 <iswprint@plt>
   18f88:	cmp	r0, #0
   18f8c:	add	r0, sp, #128	; 0x80
   18f90:	moveq	r6, #0
   18f94:	bl	114c0 <mbsinit@plt>
   18f98:	cmp	r0, #0
   18f9c:	beq	18f40 <lchmod@@Base+0x1d80>
   18fa0:	ldr	r3, [sp, #60]	; 0x3c
   18fa4:	add	r9, sp, #100	; 0x64
   18fa8:	mov	r0, r5
   18fac:	ldm	r9, {r9, sl, fp}
   18fb0:	eor	r2, r6, #1
   18fb4:	ldr	r5, [sp, #112]	; 0x70
   18fb8:	and	r2, r2, r3
   18fbc:	uxtb	r2, r2
   18fc0:	ldr	r4, [sp, #116]	; 0x74
   18fc4:	cmp	r0, #1
   18fc8:	bhi	18ae4 <lchmod@@Base+0x1924>
   18fcc:	b	18ad4 <lchmod@@Base+0x1914>
   18fd0:	cmp	r1, #1
   18fd4:	beq	18f7c <lchmod@@Base+0x1dbc>
   18fd8:	add	r2, r4, #1
   18fdc:	add	r3, sl, r1
   18fe0:	add	r2, sl, r2
   18fe4:	add	r4, r3, r4
   18fe8:	ldrb	r3, [r2], #1
   18fec:	sub	r3, r3, #91	; 0x5b
   18ff0:	cmp	r3, #33	; 0x21
   18ff4:	ldrls	pc, [pc, r3, lsl #2]
   18ff8:	b	19084 <lchmod@@Base+0x1ec4>
   18ffc:	muleq	r1, r0, r0
   19000:	muleq	r1, r0, r0
   19004:	andeq	r9, r1, r4, lsl #1
   19008:	muleq	r1, r0, r0
   1900c:	andeq	r9, r1, r4, lsl #1
   19010:	muleq	r1, r0, r0
   19014:	andeq	r9, r1, r4, lsl #1
   19018:	andeq	r9, r1, r4, lsl #1
   1901c:	andeq	r9, r1, r4, lsl #1
   19020:	andeq	r9, r1, r4, lsl #1
   19024:	andeq	r9, r1, r4, lsl #1
   19028:	andeq	r9, r1, r4, lsl #1
   1902c:	andeq	r9, r1, r4, lsl #1
   19030:	andeq	r9, r1, r4, lsl #1
   19034:	andeq	r9, r1, r4, lsl #1
   19038:	andeq	r9, r1, r4, lsl #1
   1903c:	andeq	r9, r1, r4, lsl #1
   19040:	andeq	r9, r1, r4, lsl #1
   19044:	andeq	r9, r1, r4, lsl #1
   19048:	andeq	r9, r1, r4, lsl #1
   1904c:	andeq	r9, r1, r4, lsl #1
   19050:	andeq	r9, r1, r4, lsl #1
   19054:	andeq	r9, r1, r4, lsl #1
   19058:	andeq	r9, r1, r4, lsl #1
   1905c:	andeq	r9, r1, r4, lsl #1
   19060:	andeq	r9, r1, r4, lsl #1
   19064:	andeq	r9, r1, r4, lsl #1
   19068:	andeq	r9, r1, r4, lsl #1
   1906c:	andeq	r9, r1, r4, lsl #1
   19070:	andeq	r9, r1, r4, lsl #1
   19074:	andeq	r9, r1, r4, lsl #1
   19078:	andeq	r9, r1, r4, lsl #1
   1907c:	andeq	r9, r1, r4, lsl #1
   19080:	muleq	r1, r0, r0
   19084:	cmp	r4, r2
   19088:	bne	18fe8 <lchmod@@Base+0x1e28>
   1908c:	b	18f7c <lchmod@@Base+0x1dbc>
   19090:	mov	r3, #2
   19094:	ldr	fp, [sp, #100]	; 0x64
   19098:	str	r3, [sp, #176]	; 0xb0
   1909c:	ldr	sl, [sp, #104]	; 0x68
   190a0:	b	18564 <lchmod@@Base+0x13a4>
   190a4:	ldr	r2, [sp, #52]	; 0x34
   190a8:	mov	fp, r9
   190ac:	ldr	r3, [sp, #60]	; 0x3c
   190b0:	and	r3, r3, r2
   190b4:	str	r3, [sp, #60]	; 0x3c
   190b8:	b	18564 <lchmod@@Base+0x13a4>
   190bc:	cmp	sl, r4
   190c0:	movhi	r2, fp
   190c4:	bhi	1843c <lchmod@@Base+0x127c>
   190c8:	mov	r2, r4
   190cc:	b	1844c <lchmod@@Base+0x128c>
   190d0:	mov	r6, r3
   190d4:	mov	r5, #63	; 0x3f
   190d8:	b	1850c <lchmod@@Base+0x134c>
   190dc:	ldr	r8, [sp, #36]	; 0x24
   190e0:	ldr	r6, [sp, #100]	; 0x64
   190e4:	b	183b8 <lchmod@@Base+0x11f8>
   190e8:	mov	fp, r9
   190ec:	ldr	r8, [sp, #36]	; 0x24
   190f0:	ldr	r3, [sp, #52]	; 0x34
   190f4:	str	r3, [sp, #60]	; 0x3c
   190f8:	b	18564 <lchmod@@Base+0x13a4>
   190fc:	ldr	r8, [sp, #36]	; 0x24
   19100:	ldr	r6, [sp, #100]	; 0x64
   19104:	b	18250 <lchmod@@Base+0x1090>
   19108:	mov	r3, #0
   1910c:	add	r4, r4, #4
   19110:	mov	fp, r2
   19114:	mov	r6, r3
   19118:	mov	r5, #48	; 0x30
   1911c:	b	183a8 <lchmod@@Base+0x11e8>
   19120:	mov	r6, r3
   19124:	b	18ba4 <lchmod@@Base+0x19e4>
   19128:	mov	r3, #1
   1912c:	movw	r2, #55460	; 0xd8a4
   19130:	movt	r2, #1
   19134:	mov	r4, r3
   19138:	mov	r9, sl
   1913c:	str	r3, [sp, #32]
   19140:	str	sl, [sp, #44]	; 0x2c
   19144:	str	r3, [sp, #48]	; 0x30
   19148:	str	sl, [sp, #52]	; 0x34
   1914c:	str	r3, [sp, #56]	; 0x38
   19150:	str	r3, [sp, #60]	; 0x3c
   19154:	str	sl, [sp, #64]	; 0x40
   19158:	str	sl, [sp, #68]	; 0x44
   1915c:	str	r2, [sp, #72]	; 0x48
   19160:	str	sl, [sp, #80]	; 0x50
   19164:	str	sl, [sp, #84]	; 0x54
   19168:	str	sl, [sp, #88]	; 0x58
   1916c:	b	17c5c <lchmod@@Base+0xa9c>
   19170:	mov	r3, #0
   19174:	mov	r5, #48	; 0x30
   19178:	mov	r6, r3
   1917c:	b	183a8 <lchmod@@Base+0x11e8>
   19180:	cmp	sl, r4
   19184:	mov	r5, #48	; 0x30
   19188:	movhi	r3, #48	; 0x30
   1918c:	strbhi	r3, [r9, r4]
   19190:	add	r3, r2, #2
   19194:	add	r4, r2, #3
   19198:	cmp	sl, r3
   1919c:	movhi	r1, #48	; 0x30
   191a0:	strbhi	r1, [r9, r3]
   191a4:	mov	r3, #0
   191a8:	b	18484 <lchmod@@Base+0x12c4>
   191ac:	ldr	r3, [sp, #48]	; 0x30
   191b0:	str	r3, [sp, #40]	; 0x28
   191b4:	b	18a90 <lchmod@@Base+0x18d0>
   191b8:	ldr	r2, [sp, #28]
   191bc:	ldrb	r2, [r2, r3]
   191c0:	sub	r1, r2, #33	; 0x21
   191c4:	cmp	r1, #29
   191c8:	ldrls	pc, [pc, r1, lsl #2]
   191cc:	b	18508 <lchmod@@Base+0x1348>
   191d0:	andeq	r9, r1, r8, asr #4
   191d4:	andeq	r8, r1, r8, lsl #10
   191d8:	andeq	r8, r1, r8, lsl #10
   191dc:	andeq	r8, r1, r8, lsl #10
   191e0:	andeq	r8, r1, r8, lsl #10
   191e4:	andeq	r8, r1, r8, lsl #10
   191e8:	andeq	r9, r1, r8, asr #4
   191ec:	andeq	r9, r1, r8, asr #4
   191f0:	andeq	r9, r1, r8, asr #4
   191f4:	andeq	r8, r1, r8, lsl #10
   191f8:	andeq	r8, r1, r8, lsl #10
   191fc:	andeq	r8, r1, r8, lsl #10
   19200:	andeq	r9, r1, r8, asr #4
   19204:	andeq	r8, r1, r8, lsl #10
   19208:	andeq	r9, r1, r8, asr #4
   1920c:	andeq	r8, r1, r8, lsl #10
   19210:	andeq	r8, r1, r8, lsl #10
   19214:	andeq	r8, r1, r8, lsl #10
   19218:	andeq	r8, r1, r8, lsl #10
   1921c:	andeq	r8, r1, r8, lsl #10
   19220:	andeq	r8, r1, r8, lsl #10
   19224:	andeq	r8, r1, r8, lsl #10
   19228:	andeq	r8, r1, r8, lsl #10
   1922c:	andeq	r8, r1, r8, lsl #10
   19230:	andeq	r8, r1, r8, lsl #10
   19234:	andeq	r8, r1, r8, lsl #10
   19238:	andeq	r8, r1, r8, lsl #10
   1923c:	andeq	r9, r1, r8, asr #4
   19240:	andeq	r9, r1, r8, asr #4
   19244:	andeq	r9, r1, r8, asr #4
   19248:	ldr	r1, [sp, #44]	; 0x2c
   1924c:	cmp	r1, #0
   19250:	bne	194b0 <lchmod@@Base+0x22f0>
   19254:	cmp	sl, r4
   19258:	mov	r7, r3
   1925c:	movhi	r1, #63	; 0x3f
   19260:	mov	r5, r2
   19264:	mov	r3, fp
   19268:	strbhi	r1, [r9, r4]
   1926c:	add	r1, r4, #1
   19270:	cmp	sl, r1
   19274:	movhi	r0, #34	; 0x22
   19278:	strbhi	r0, [r9, r1]
   1927c:	add	r1, r4, #2
   19280:	cmp	sl, r1
   19284:	movhi	r0, #34	; 0x22
   19288:	strbhi	r0, [r9, r1]
   1928c:	add	r1, r4, #3
   19290:	add	r4, r4, #4
   19294:	cmp	sl, r1
   19298:	movhi	r0, #63	; 0x3f
   1929c:	strbhi	r0, [r9, r1]
   192a0:	b	18484 <lchmod@@Base+0x12c4>
   192a4:	mov	fp, r9
   192a8:	b	18564 <lchmod@@Base+0x13a4>
   192ac:	ldr	r3, [sp, #188]	; 0xbc
   192b0:	ldrb	r3, [r3]
   192b4:	cmp	r3, #0
   192b8:	beq	17bf4 <lchmod@@Base+0xa34>
   192bc:	ldr	r2, [sp, #188]	; 0xbc
   192c0:	cmp	sl, r4
   192c4:	bls	192e4 <lchmod@@Base+0x2124>
   192c8:	strb	r3, [fp, r4]
   192cc:	add	r4, r4, #1
   192d0:	ldrb	r3, [r2, #1]!
   192d4:	cmp	r3, #0
   192d8:	beq	17bf4 <lchmod@@Base+0xa34>
   192dc:	cmp	sl, r4
   192e0:	bhi	192c8 <lchmod@@Base+0x2108>
   192e4:	ldrb	r3, [r2, #1]!
   192e8:	add	r4, r4, #1
   192ec:	cmp	r3, #0
   192f0:	bne	192c0 <lchmod@@Base+0x2100>
   192f4:	b	17bf4 <lchmod@@Base+0xa34>
   192f8:	add	r9, sp, #100	; 0x64
   192fc:	mov	r0, r5
   19300:	ldr	r2, [sp, #60]	; 0x3c
   19304:	mov	r6, #0
   19308:	ldm	r9, {r9, sl, fp}
   1930c:	ldr	r5, [sp, #112]	; 0x70
   19310:	ldr	r4, [sp, #116]	; 0x74
   19314:	b	18fc4 <lchmod@@Base+0x1e04>
   19318:	cmp	r4, r8
   1931c:	add	r9, sp, #100	; 0x64
   19320:	mov	r1, r4
   19324:	mov	r2, fp
   19328:	ldm	r9, {r9, sl, fp}
   1932c:	mov	r3, r5
   19330:	mov	r0, r5
   19334:	ldr	r5, [sp, #112]	; 0x70
   19338:	ldr	r4, [sp, #116]	; 0x74
   1933c:	bcs	19370 <lchmod@@Base+0x21b0>
   19340:	ldrb	r6, [r2]
   19344:	cmp	r6, #0
   19348:	bne	1935c <lchmod@@Base+0x219c>
   1934c:	b	194a8 <lchmod@@Base+0x22e8>
   19350:	ldrb	r6, [r2, #1]!
   19354:	cmp	r6, #0
   19358:	beq	19440 <lchmod@@Base+0x2280>
   1935c:	add	r3, r3, #1
   19360:	add	r1, r7, r3
   19364:	cmp	r8, r1
   19368:	bhi	19350 <lchmod@@Base+0x2190>
   1936c:	mov	r0, r3
   19370:	mov	r6, #0
   19374:	ldr	r2, [sp, #60]	; 0x3c
   19378:	b	18fc4 <lchmod@@Base+0x1e04>
   1937c:	mov	r3, #1
   19380:	mov	r4, #0
   19384:	mov	r9, r4
   19388:	str	r3, [sp, #32]
   1938c:	str	r3, [sp, #44]	; 0x2c
   19390:	str	r3, [sp, #48]	; 0x30
   19394:	str	r4, [sp, #52]	; 0x34
   19398:	str	r3, [sp, #56]	; 0x38
   1939c:	str	r3, [sp, #60]	; 0x3c
   193a0:	str	r3, [sp, #88]	; 0x58
   193a4:	movw	r3, #55460	; 0xd8a4
   193a8:	movt	r3, #1
   193ac:	str	r4, [sp, #64]	; 0x40
   193b0:	str	r4, [sp, #68]	; 0x44
   193b4:	str	r3, [sp, #72]	; 0x48
   193b8:	str	r4, [sp, #80]	; 0x50
   193bc:	str	r4, [sp, #84]	; 0x54
   193c0:	b	17c5c <lchmod@@Base+0xa9c>
   193c4:	mov	fp, r9
   193c8:	b	18578 <lchmod@@Base+0x13b8>
   193cc:	ldr	r3, [sp, #48]	; 0x30
   193d0:	b	18eec <lchmod@@Base+0x1d2c>
   193d4:	mov	r2, r3
   193d8:	ldr	r3, [sp, #72]	; 0x48
   193dc:	cmp	r3, #0
   193e0:	moveq	r2, #0
   193e4:	andne	r2, r2, #1
   193e8:	cmp	r2, #0
   193ec:	beq	1941c <lchmod@@Base+0x225c>
   193f0:	mov	r2, r3
   193f4:	ldrb	r3, [r3]
   193f8:	cmp	r3, #0
   193fc:	beq	1941c <lchmod@@Base+0x225c>
   19400:	cmp	sl, r4
   19404:	bls	1942c <lchmod@@Base+0x226c>
   19408:	strb	r3, [fp, r4]
   1940c:	add	r4, r4, #1
   19410:	ldrb	r3, [r2, #1]!
   19414:	cmp	r3, #0
   19418:	bne	19400 <lchmod@@Base+0x2240>
   1941c:	cmp	sl, r4
   19420:	movhi	r3, #0
   19424:	strbhi	r3, [fp, r4]
   19428:	b	185b4 <lchmod@@Base+0x13f4>
   1942c:	ldrb	r3, [r2, #1]!
   19430:	add	r4, r4, #1
   19434:	cmp	r3, #0
   19438:	bne	19400 <lchmod@@Base+0x2240>
   1943c:	b	1941c <lchmod@@Base+0x225c>
   19440:	mov	r0, r3
   19444:	ldr	r2, [sp, #60]	; 0x3c
   19448:	b	18fc4 <lchmod@@Base+0x1e04>
   1944c:	mov	ip, #5
   19450:	mov	r3, r8
   19454:	ldr	r1, [sp, #84]	; 0x54
   19458:	str	ip, [sp]
   1945c:	ldr	r2, [sp, #180]	; 0xb4
   19460:	ldr	ip, [sp, #188]	; 0xbc
   19464:	ldr	r0, [sp, #184]	; 0xb8
   19468:	str	r2, [sp, #4]
   1946c:	ldr	r2, [sp, #28]
   19470:	str	ip, [sp, #12]
   19474:	ldr	ip, [sp, #192]	; 0xc0
   19478:	str	r0, [sp, #8]
   1947c:	mov	r0, fp
   19480:	str	ip, [sp, #16]
   19484:	bl	17b38 <lchmod@@Base+0x978>
   19488:	mov	r4, r0
   1948c:	b	185b4 <lchmod@@Base+0x13f4>
   19490:	mov	r6, r3
   19494:	str	r3, [sp, #40]	; 0x28
   19498:	b	18524 <lchmod@@Base+0x1364>
   1949c:	mov	r3, #2
   194a0:	str	r3, [sp, #176]	; 0xb0
   194a4:	b	18564 <lchmod@@Base+0x13a4>
   194a8:	ldr	r2, [sp, #60]	; 0x3c
   194ac:	b	18fc4 <lchmod@@Base+0x1e04>
   194b0:	mov	r3, #5
   194b4:	mov	fp, r9
   194b8:	str	r3, [sp, #176]	; 0xb0
   194bc:	b	18578 <lchmod@@Base+0x13b8>
   194c0:	mov	r1, #1
   194c4:	mov	r9, #0
   194c8:	mov	r3, r9
   194cc:	mov	r2, r9
   194d0:	str	r1, [sp, #32]
   194d4:	str	sl, [sp, #84]	; 0x54
   194d8:	b	18300 <lchmod@@Base+0x1140>
   194dc:	mov	r3, #0
   194e0:	mov	r2, #1
   194e4:	mov	r9, r3
   194e8:	mov	r4, r3
   194ec:	str	r2, [sp, #32]
   194f0:	strd	r2, [sp, #44]	; 0x2c
   194f4:	strd	r2, [sp, #56]	; 0x38
   194f8:	str	r3, [sp, #80]	; 0x50
   194fc:	str	r3, [sp, #84]	; 0x54
   19500:	str	r3, [sp, #88]	; 0x58
   19504:	movw	r3, #55480	; 0xd8b8
   19508:	movt	r3, #1
   1950c:	str	r2, [sp, #52]	; 0x34
   19510:	str	r2, [sp, #64]	; 0x40
   19514:	str	r2, [sp, #68]	; 0x44
   19518:	str	r3, [sp, #72]	; 0x48
   1951c:	b	17c5c <lchmod@@Base+0xa9c>
   19520:	bl	117d8 <abort@plt>
   19524:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19528:	mov	r4, r0
   1952c:	mov	r5, r3
   19530:	strd	r6, [sp, #8]
   19534:	movw	r7, #57732	; 0xe184
   19538:	movt	r7, #2
   1953c:	strd	r8, [sp, #16]
   19540:	strd	sl, [sp, #24]
   19544:	mov	sl, r1
   19548:	mov	fp, r2
   1954c:	str	lr, [sp, #32]
   19550:	sub	sp, sp, #60	; 0x3c
   19554:	bl	11688 <__errno_location@plt>
   19558:	mov	r8, r0
   1955c:	cmn	r4, #-2147483647	; 0x80000001
   19560:	ldr	r6, [r7]
   19564:	movne	r0, #0
   19568:	moveq	r0, #1
   1956c:	ldr	r3, [r8]
   19570:	orrs	r0, r0, r4, lsr #31
   19574:	str	r3, [sp, #28]
   19578:	bne	19708 <lchmod@@Base+0x2548>
   1957c:	ldr	r3, [r7, #4]
   19580:	cmp	r3, r4
   19584:	bgt	195e4 <lchmod@@Base+0x2424>
   19588:	add	r1, r7, #8
   1958c:	sub	r2, r4, r3
   19590:	str	r3, [sp, #52]	; 0x34
   19594:	cmp	r6, r1
   19598:	add	r2, r2, #1
   1959c:	beq	196e0 <lchmod@@Base+0x2520>
   195a0:	mov	r1, #8
   195a4:	mov	r0, r6
   195a8:	mvn	r3, #-2147483648	; 0x80000000
   195ac:	str	r1, [sp]
   195b0:	add	r1, sp, #52	; 0x34
   195b4:	bl	1c20c <lchmod@@Base+0x504c>
   195b8:	mov	r6, r0
   195bc:	str	r0, [r7]
   195c0:	ldr	r0, [r7, #4]
   195c4:	mov	r1, #0
   195c8:	ldr	r2, [sp, #52]	; 0x34
   195cc:	sub	r2, r2, r0
   195d0:	add	r0, r6, r0, lsl #3
   195d4:	lsl	r2, r2, #3
   195d8:	bl	116ac <memset@plt>
   195dc:	ldr	r3, [sp, #52]	; 0x34
   195e0:	str	r3, [r7, #4]
   195e4:	ldr	r1, [r5, #4]
   195e8:	add	r0, r6, r4, lsl #3
   195ec:	add	ip, r5, #8
   195f0:	mov	r3, fp
   195f4:	mov	r2, sl
   195f8:	ldr	r7, [r0, #4]
   195fc:	str	r0, [sp, #36]	; 0x24
   19600:	str	ip, [sp, #40]	; 0x28
   19604:	orr	r0, r1, #1
   19608:	ldr	r9, [r6, r4, lsl #3]
   1960c:	str	ip, [sp, #8]
   19610:	ldr	lr, [r5, #44]	; 0x2c
   19614:	str	r0, [sp, #4]
   19618:	ldr	ip, [r5]
   1961c:	mov	r1, r9
   19620:	str	ip, [sp, #32]
   19624:	ldr	ip, [r5, #40]	; 0x28
   19628:	str	ip, [sp, #12]
   1962c:	ldr	ip, [sp, #32]
   19630:	str	lr, [sp, #16]
   19634:	str	r0, [sp, #44]	; 0x2c
   19638:	mov	r0, r7
   1963c:	str	ip, [sp]
   19640:	bl	17b38 <lchmod@@Base+0x978>
   19644:	cmp	r9, r0
   19648:	bhi	196b8 <lchmod@@Base+0x24f8>
   1964c:	add	r9, r0, #1
   19650:	movw	r3, #57844	; 0xe1f4
   19654:	movt	r3, #2
   19658:	cmp	r7, r3
   1965c:	str	r9, [r6, r4, lsl #3]
   19660:	beq	1966c <lchmod@@Base+0x24ac>
   19664:	mov	r0, r7
   19668:	bl	13204 <__assert_fail@plt+0x19d8>
   1966c:	mov	r0, r9
   19670:	bl	1bf68 <lchmod@@Base+0x4da8>
   19674:	ldr	ip, [r5]
   19678:	mov	r3, fp
   1967c:	mov	r2, sl
   19680:	mov	r1, r9
   19684:	mov	r7, r0
   19688:	ldr	lr, [sp, #36]	; 0x24
   1968c:	ldr	r4, [r5, #40]	; 0x28
   19690:	str	r0, [lr, #4]
   19694:	ldr	lr, [r5, #44]	; 0x2c
   19698:	str	ip, [sp]
   1969c:	ldr	ip, [sp, #44]	; 0x2c
   196a0:	str	ip, [sp, #4]
   196a4:	ldr	ip, [sp, #40]	; 0x28
   196a8:	str	r4, [sp, #12]
   196ac:	str	lr, [sp, #16]
   196b0:	str	ip, [sp, #8]
   196b4:	bl	17b38 <lchmod@@Base+0x978>
   196b8:	ldr	r3, [sp, #28]
   196bc:	mov	r0, r7
   196c0:	str	r3, [r8]
   196c4:	add	sp, sp, #60	; 0x3c
   196c8:	ldrd	r4, [sp]
   196cc:	ldrd	r6, [sp, #8]
   196d0:	ldrd	r8, [sp, #16]
   196d4:	ldrd	sl, [sp, #24]
   196d8:	add	sp, sp, #32
   196dc:	pop	{pc}		; (ldr pc, [sp], #4)
   196e0:	mov	r1, #8
   196e4:	mvn	r3, #-2147483648	; 0x80000000
   196e8:	str	r1, [sp]
   196ec:	add	r1, sp, #52	; 0x34
   196f0:	bl	1c20c <lchmod@@Base+0x504c>
   196f4:	ldrd	r2, [r7, #8]
   196f8:	mov	r6, r0
   196fc:	str	r0, [r7]
   19700:	strd	r2, [r0]
   19704:	b	195c0 <lchmod@@Base+0x2400>
   19708:	bl	117d8 <abort@plt>
   1970c:	strd	r4, [sp, #-16]!
   19710:	mov	r5, r0
   19714:	str	r6, [sp, #8]
   19718:	str	lr, [sp, #12]
   1971c:	bl	11688 <__errno_location@plt>
   19720:	mov	r4, r0
   19724:	cmp	r5, #0
   19728:	ldr	r0, [pc, #32]	; 19750 <lchmod@@Base+0x2590>
   1972c:	mov	r1, #48	; 0x30
   19730:	movne	r0, r5
   19734:	ldr	r6, [r4]
   19738:	bl	1c3ac <lchmod@@Base+0x51ec>
   1973c:	str	r6, [r4]
   19740:	ldrd	r4, [sp]
   19744:	ldr	r6, [sp, #8]
   19748:	add	sp, sp, #12
   1974c:	pop	{pc}		; (ldr pc, [sp], #4)
   19750:	strdeq	lr, [r2], -r4
   19754:	ldr	r3, [pc, #12]	; 19768 <lchmod@@Base+0x25a8>
   19758:	cmp	r0, #0
   1975c:	moveq	r0, r3
   19760:	ldr	r0, [r0]
   19764:	bx	lr
   19768:	strdeq	lr, [r2], -r4
   1976c:	ldr	r3, [pc, #12]	; 19780 <lchmod@@Base+0x25c0>
   19770:	cmp	r0, #0
   19774:	moveq	r0, r3
   19778:	str	r1, [r0]
   1977c:	bx	lr
   19780:	strdeq	lr, [r2], -r4
   19784:	ldr	r3, [pc, #52]	; 197c0 <lchmod@@Base+0x2600>
   19788:	cmp	r0, #0
   1978c:	push	{lr}		; (str lr, [sp, #-4]!)
   19790:	lsr	lr, r1, #5
   19794:	and	r1, r1, #31
   19798:	moveq	r0, r3
   1979c:	add	r3, r0, #8
   197a0:	ldr	ip, [r3, lr, lsl #2]
   197a4:	lsr	r0, ip, r1
   197a8:	eor	r2, r2, r0
   197ac:	and	r0, r0, #1
   197b0:	and	r2, r2, #1
   197b4:	eor	r1, ip, r2, lsl r1
   197b8:	str	r1, [r3, lr, lsl #2]
   197bc:	pop	{pc}		; (ldr pc, [sp], #4)
   197c0:	strdeq	lr, [r2], -r4
   197c4:	ldr	r3, [pc, #16]	; 197dc <lchmod@@Base+0x261c>
   197c8:	cmp	r0, #0
   197cc:	movne	r3, r0
   197d0:	ldr	r0, [r3, #4]
   197d4:	str	r1, [r3, #4]
   197d8:	bx	lr
   197dc:	strdeq	lr, [r2], -r4
   197e0:	ldr	r3, [pc, #48]	; 19818 <lchmod@@Base+0x2658>
   197e4:	cmp	r0, #0
   197e8:	mov	ip, #10
   197ec:	moveq	r0, r3
   197f0:	cmp	r2, #0
   197f4:	cmpne	r1, #0
   197f8:	str	ip, [r0]
   197fc:	beq	1980c <lchmod@@Base+0x264c>
   19800:	str	r1, [r0, #40]	; 0x28
   19804:	str	r2, [r0, #44]	; 0x2c
   19808:	bx	lr
   1980c:	str	r4, [sp, #-8]!
   19810:	str	lr, [sp, #4]
   19814:	bl	117d8 <abort@plt>
   19818:	strdeq	lr, [r2], -r4
   1981c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   19820:	strd	r6, [sp, #8]
   19824:	mov	r7, r0
   19828:	mov	r6, r1
   1982c:	strd	r8, [sp, #16]
   19830:	mov	r8, r2
   19834:	mov	r9, r3
   19838:	str	lr, [sp, #24]
   1983c:	sub	sp, sp, #28
   19840:	ldr	r4, [sp, #56]	; 0x38
   19844:	ldr	ip, [pc, #104]	; 198b4 <lchmod@@Base+0x26f4>
   19848:	cmp	r4, #0
   1984c:	moveq	r4, ip
   19850:	bl	11688 <__errno_location@plt>
   19854:	ldr	ip, [r4, #44]	; 0x2c
   19858:	mov	r5, r0
   1985c:	mov	r1, r6
   19860:	add	lr, r4, #8
   19864:	mov	r3, r9
   19868:	ldr	r6, [r5]
   1986c:	mov	r2, r8
   19870:	mov	r0, r7
   19874:	str	ip, [sp, #16]
   19878:	ldr	ip, [r4, #40]	; 0x28
   1987c:	str	lr, [sp, #8]
   19880:	str	ip, [sp, #12]
   19884:	ldr	ip, [r4, #4]
   19888:	str	ip, [sp, #4]
   1988c:	ldr	ip, [r4]
   19890:	str	ip, [sp]
   19894:	bl	17b38 <lchmod@@Base+0x978>
   19898:	str	r6, [r5]
   1989c:	add	sp, sp, #28
   198a0:	ldrd	r4, [sp]
   198a4:	ldrd	r6, [sp, #8]
   198a8:	ldrd	r8, [sp, #16]
   198ac:	add	sp, sp, #24
   198b0:	pop	{pc}		; (ldr pc, [sp], #4)
   198b4:	strdeq	lr, [r2], -r4
   198b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   198bc:	cmp	r2, #0
   198c0:	ldr	r4, [pc, #192]	; 19988 <lchmod@@Base+0x27c8>
   198c4:	movne	r4, r2
   198c8:	strd	r6, [sp, #8]
   198cc:	strd	r8, [sp, #16]
   198d0:	mov	r9, r1
   198d4:	mov	r8, r0
   198d8:	strd	sl, [sp, #24]
   198dc:	str	lr, [sp, #32]
   198e0:	sub	sp, sp, #36	; 0x24
   198e4:	bl	11688 <__errno_location@plt>
   198e8:	ldr	r5, [r4, #4]
   198ec:	mov	r6, r0
   198f0:	add	r7, r4, #8
   198f4:	mov	r1, #0
   198f8:	mov	r3, r9
   198fc:	ldr	ip, [r4, #44]	; 0x2c
   19900:	mov	r2, r8
   19904:	mov	r0, r1
   19908:	ldr	sl, [r6]
   1990c:	orr	r5, r5, #1
   19910:	str	ip, [sp, #16]
   19914:	ldr	ip, [r4, #40]	; 0x28
   19918:	stmib	sp, {r5, r7, ip}
   1991c:	ldr	ip, [r4]
   19920:	str	ip, [sp]
   19924:	bl	17b38 <lchmod@@Base+0x978>
   19928:	add	r1, r0, #1
   1992c:	mov	r0, r1
   19930:	str	r1, [sp, #28]
   19934:	bl	1bf68 <lchmod@@Base+0x4da8>
   19938:	ldr	ip, [r4, #44]	; 0x2c
   1993c:	mov	fp, r0
   19940:	mov	r3, r9
   19944:	mov	r2, r8
   19948:	ldr	r1, [sp, #28]
   1994c:	str	ip, [sp, #16]
   19950:	ldr	ip, [r4, #40]	; 0x28
   19954:	stmib	sp, {r5, r7, ip}
   19958:	ldr	ip, [r4]
   1995c:	str	ip, [sp]
   19960:	bl	17b38 <lchmod@@Base+0x978>
   19964:	mov	r0, fp
   19968:	str	sl, [r6]
   1996c:	add	sp, sp, #36	; 0x24
   19970:	ldrd	r4, [sp]
   19974:	ldrd	r6, [sp, #8]
   19978:	ldrd	r8, [sp, #16]
   1997c:	ldrd	sl, [sp, #24]
   19980:	add	sp, sp, #32
   19984:	pop	{pc}		; (ldr pc, [sp], #4)
   19988:	strdeq	lr, [r2], -r4
   1998c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19990:	cmp	r3, #0
   19994:	ldr	r4, [pc, #220]	; 19a78 <lchmod@@Base+0x28b8>
   19998:	movne	r4, r3
   1999c:	strd	r6, [sp, #8]
   199a0:	mov	r6, r2
   199a4:	strd	r8, [sp, #16]
   199a8:	mov	r9, r0
   199ac:	strd	sl, [sp, #24]
   199b0:	mov	sl, r1
   199b4:	str	lr, [sp, #32]
   199b8:	sub	sp, sp, #44	; 0x2c
   199bc:	bl	11688 <__errno_location@plt>
   199c0:	ldr	r5, [r4, #4]
   199c4:	mov	r7, r0
   199c8:	mov	r1, #0
   199cc:	add	r8, r4, #8
   199d0:	mov	r3, sl
   199d4:	ldr	ip, [r4, #44]	; 0x2c
   199d8:	mov	r2, r9
   199dc:	mov	r0, r1
   199e0:	ldr	lr, [r7]
   199e4:	cmp	r6, r1
   199e8:	orreq	r5, r5, #1
   199ec:	str	ip, [sp, #16]
   199f0:	ldr	ip, [r4, #40]	; 0x28
   199f4:	stmib	sp, {r5, r8, ip}
   199f8:	ldr	ip, [r4]
   199fc:	str	lr, [sp, #28]
   19a00:	str	ip, [sp]
   19a04:	bl	17b38 <lchmod@@Base+0x978>
   19a08:	add	r1, r0, #1
   19a0c:	mov	fp, r0
   19a10:	mov	r0, r1
   19a14:	str	r1, [sp, #36]	; 0x24
   19a18:	bl	1bf68 <lchmod@@Base+0x4da8>
   19a1c:	ldr	ip, [r4, #44]	; 0x2c
   19a20:	mov	r3, sl
   19a24:	mov	r2, r9
   19a28:	ldr	r1, [sp, #36]	; 0x24
   19a2c:	str	ip, [sp, #16]
   19a30:	ldr	ip, [r4, #40]	; 0x28
   19a34:	str	r0, [sp, #32]
   19a38:	stmib	sp, {r5, r8, ip}
   19a3c:	ldr	ip, [r4]
   19a40:	str	ip, [sp]
   19a44:	bl	17b38 <lchmod@@Base+0x978>
   19a48:	ldr	lr, [sp, #28]
   19a4c:	cmp	r6, #0
   19a50:	ldr	r0, [sp, #32]
   19a54:	str	lr, [r7]
   19a58:	strne	fp, [r6]
   19a5c:	add	sp, sp, #44	; 0x2c
   19a60:	ldrd	r4, [sp]
   19a64:	ldrd	r6, [sp, #8]
   19a68:	ldrd	r8, [sp, #16]
   19a6c:	ldrd	sl, [sp, #24]
   19a70:	add	sp, sp, #32
   19a74:	pop	{pc}		; (ldr pc, [sp], #4)
   19a78:	strdeq	lr, [r2], -r4
   19a7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19a80:	movw	r5, #57732	; 0xe184
   19a84:	movt	r5, #2
   19a88:	ldr	r3, [r5, #4]
   19a8c:	strd	r6, [sp, #8]
   19a90:	str	r8, [sp, #16]
   19a94:	str	lr, [sp, #20]
   19a98:	ldr	r7, [r5]
   19a9c:	cmp	r3, #1
   19aa0:	ble	19ac4 <lchmod@@Base+0x2904>
   19aa4:	mov	r4, #1
   19aa8:	add	r6, r7, #4
   19aac:	ldr	r0, [r6, r4, lsl #3]
   19ab0:	add	r4, r4, #1
   19ab4:	bl	13204 <__assert_fail@plt+0x19d8>
   19ab8:	ldr	r3, [r5, #4]
   19abc:	cmp	r3, r4
   19ac0:	bgt	19aac <lchmod@@Base+0x28ec>
   19ac4:	ldr	r0, [r7, #4]
   19ac8:	movw	r4, #57844	; 0xe1f4
   19acc:	movt	r4, #2
   19ad0:	cmp	r0, r4
   19ad4:	beq	19ae8 <lchmod@@Base+0x2928>
   19ad8:	bl	13204 <__assert_fail@plt+0x19d8>
   19adc:	mov	r3, #256	; 0x100
   19ae0:	str	r3, [r5, #8]
   19ae4:	str	r4, [r5, #12]
   19ae8:	ldr	r4, [pc, #44]	; 19b1c <lchmod@@Base+0x295c>
   19aec:	cmp	r7, r4
   19af0:	beq	19b00 <lchmod@@Base+0x2940>
   19af4:	mov	r0, r7
   19af8:	bl	13204 <__assert_fail@plt+0x19d8>
   19afc:	str	r4, [r5]
   19b00:	mov	r3, #1
   19b04:	ldrd	r6, [sp, #8]
   19b08:	str	r3, [r5, #4]
   19b0c:	ldrd	r4, [sp]
   19b10:	ldr	r8, [sp, #16]
   19b14:	add	sp, sp, #20
   19b18:	pop	{pc}		; (ldr pc, [sp], #4)
   19b1c:	andeq	lr, r2, ip, lsl #3
   19b20:	ldr	r3, [pc, #4]	; 19b2c <lchmod@@Base+0x296c>
   19b24:	mvn	r2, #0
   19b28:	b	19524 <lchmod@@Base+0x2364>
   19b2c:	strdeq	lr, [r2], -r4
   19b30:	ldr	r3, [pc]	; 19b38 <lchmod@@Base+0x2978>
   19b34:	b	19524 <lchmod@@Base+0x2364>
   19b38:	strdeq	lr, [r2], -r4
   19b3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19b40:	movw	r4, #57732	; 0xe184
   19b44:	movt	r4, #2
   19b48:	strd	r6, [sp, #8]
   19b4c:	strd	r8, [sp, #16]
   19b50:	strd	sl, [sp, #24]
   19b54:	mov	sl, r0
   19b58:	str	lr, [sp, #32]
   19b5c:	sub	sp, sp, #44	; 0x2c
   19b60:	bl	11688 <__errno_location@plt>
   19b64:	ldr	r3, [r0]
   19b68:	mov	r8, r0
   19b6c:	ldr	r2, [r4, #4]
   19b70:	ldr	r5, [r4]
   19b74:	str	r3, [sp, #28]
   19b78:	cmp	r2, #0
   19b7c:	bgt	19bd8 <lchmod@@Base+0x2a18>
   19b80:	add	r3, r4, #8
   19b84:	str	r2, [sp, #36]	; 0x24
   19b88:	rsb	r2, r2, #1
   19b8c:	cmp	r5, r3
   19b90:	beq	19ca4 <lchmod@@Base+0x2ae4>
   19b94:	mov	r1, #8
   19b98:	mov	r0, r5
   19b9c:	mvn	r3, #-2147483648	; 0x80000000
   19ba0:	str	r1, [sp]
   19ba4:	add	r1, sp, #36	; 0x24
   19ba8:	bl	1c20c <lchmod@@Base+0x504c>
   19bac:	mov	r5, r0
   19bb0:	str	r0, [r4]
   19bb4:	ldr	r0, [r4, #4]
   19bb8:	mov	r1, #0
   19bbc:	ldr	r2, [sp, #36]	; 0x24
   19bc0:	sub	r2, r2, r0
   19bc4:	add	r0, r5, r0, lsl #3
   19bc8:	lsl	r2, r2, #3
   19bcc:	bl	116ac <memset@plt>
   19bd0:	ldr	r3, [sp, #36]	; 0x24
   19bd4:	str	r3, [r4, #4]
   19bd8:	movw	r4, #57844	; 0xe1f4
   19bdc:	movt	r4, #2
   19be0:	ldr	r9, [r5]
   19be4:	add	fp, r4, #264	; 0x108
   19be8:	mvn	r3, #0
   19bec:	ldr	r7, [r4, #260]	; 0x104
   19bf0:	mov	r2, sl
   19bf4:	ldr	r6, [r5, #4]
   19bf8:	str	fp, [sp, #8]
   19bfc:	mov	r1, r9
   19c00:	ldr	ip, [r4, #256]	; 0x100
   19c04:	orr	r7, r7, #1
   19c08:	ldr	lr, [r4, #300]	; 0x12c
   19c0c:	mov	r0, r6
   19c10:	str	ip, [sp]
   19c14:	str	r7, [sp, #4]
   19c18:	str	lr, [sp, #16]
   19c1c:	ldr	ip, [r4, #296]	; 0x128
   19c20:	str	ip, [sp, #12]
   19c24:	bl	17b38 <lchmod@@Base+0x978>
   19c28:	cmp	r9, r0
   19c2c:	bhi	19c7c <lchmod@@Base+0x2abc>
   19c30:	add	r9, r0, #1
   19c34:	cmp	r6, r4
   19c38:	str	r9, [r5]
   19c3c:	beq	19c48 <lchmod@@Base+0x2a88>
   19c40:	mov	r0, r6
   19c44:	bl	13204 <__assert_fail@plt+0x19d8>
   19c48:	mov	r0, r9
   19c4c:	bl	1bf68 <lchmod@@Base+0x4da8>
   19c50:	ldr	r3, [r4, #256]	; 0x100
   19c54:	mov	r2, sl
   19c58:	mov	r1, r9
   19c5c:	mov	r6, r0
   19c60:	ldr	lr, [r4, #296]	; 0x128
   19c64:	ldr	ip, [r4, #300]	; 0x12c
   19c68:	str	r0, [r5, #4]
   19c6c:	stm	sp, {r3, r7, fp, lr}
   19c70:	mvn	r3, #0
   19c74:	str	ip, [sp, #16]
   19c78:	bl	17b38 <lchmod@@Base+0x978>
   19c7c:	ldr	r3, [sp, #28]
   19c80:	mov	r0, r6
   19c84:	str	r3, [r8]
   19c88:	add	sp, sp, #44	; 0x2c
   19c8c:	ldrd	r4, [sp]
   19c90:	ldrd	r6, [sp, #8]
   19c94:	ldrd	r8, [sp, #16]
   19c98:	ldrd	sl, [sp, #24]
   19c9c:	add	sp, sp, #32
   19ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   19ca4:	mov	r0, #8
   19ca8:	mvn	r3, #-2147483648	; 0x80000000
   19cac:	add	r1, sp, #36	; 0x24
   19cb0:	str	r0, [sp]
   19cb4:	mov	r0, #0
   19cb8:	bl	1c20c <lchmod@@Base+0x504c>
   19cbc:	ldrd	r2, [r4, #8]
   19cc0:	mov	r5, r0
   19cc4:	str	r0, [r4]
   19cc8:	strd	r2, [r0]
   19ccc:	b	19bb4 <lchmod@@Base+0x29f4>
   19cd0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19cd4:	movw	r4, #57732	; 0xe184
   19cd8:	movt	r4, #2
   19cdc:	strd	r6, [sp, #8]
   19ce0:	strd	r8, [sp, #16]
   19ce4:	strd	sl, [sp, #24]
   19ce8:	mov	sl, r0
   19cec:	mov	fp, r1
   19cf0:	str	lr, [sp, #32]
   19cf4:	sub	sp, sp, #44	; 0x2c
   19cf8:	bl	11688 <__errno_location@plt>
   19cfc:	ldr	r3, [r0]
   19d00:	mov	r8, r0
   19d04:	ldr	r2, [r4, #4]
   19d08:	ldr	r5, [r4]
   19d0c:	str	r3, [sp, #28]
   19d10:	cmp	r2, #0
   19d14:	bgt	19d70 <lchmod@@Base+0x2bb0>
   19d18:	add	r3, r4, #8
   19d1c:	str	r2, [sp, #36]	; 0x24
   19d20:	rsb	r2, r2, #1
   19d24:	cmp	r5, r3
   19d28:	beq	19e4c <lchmod@@Base+0x2c8c>
   19d2c:	mov	r1, #8
   19d30:	mov	r0, r5
   19d34:	mvn	r3, #-2147483648	; 0x80000000
   19d38:	str	r1, [sp]
   19d3c:	add	r1, sp, #36	; 0x24
   19d40:	bl	1c20c <lchmod@@Base+0x504c>
   19d44:	mov	r5, r0
   19d48:	str	r0, [r4]
   19d4c:	ldr	r0, [r4, #4]
   19d50:	mov	r1, #0
   19d54:	ldr	r2, [sp, #36]	; 0x24
   19d58:	sub	r2, r2, r0
   19d5c:	add	r0, r5, r0, lsl #3
   19d60:	lsl	r2, r2, #3
   19d64:	bl	116ac <memset@plt>
   19d68:	ldr	r3, [sp, #36]	; 0x24
   19d6c:	str	r3, [r4, #4]
   19d70:	movw	r4, #57844	; 0xe1f4
   19d74:	movt	r4, #2
   19d78:	ldr	r9, [r5]
   19d7c:	add	r0, r4, #264	; 0x108
   19d80:	mov	r3, fp
   19d84:	ldr	r7, [r4, #260]	; 0x104
   19d88:	mov	r2, sl
   19d8c:	ldr	r6, [r5, #4]
   19d90:	str	r0, [sp, #8]
   19d94:	mov	r1, r9
   19d98:	ldr	ip, [r4, #256]	; 0x100
   19d9c:	orr	r7, r7, #1
   19da0:	ldr	lr, [r4, #300]	; 0x12c
   19da4:	mov	r0, r6
   19da8:	str	ip, [sp]
   19dac:	str	r7, [sp, #4]
   19db0:	str	lr, [sp, #16]
   19db4:	ldr	ip, [r4, #296]	; 0x128
   19db8:	str	ip, [sp, #12]
   19dbc:	bl	17b38 <lchmod@@Base+0x978>
   19dc0:	cmp	r9, r0
   19dc4:	bhi	19e24 <lchmod@@Base+0x2c64>
   19dc8:	add	r9, r0, #1
   19dcc:	cmp	r6, r4
   19dd0:	str	r9, [r5]
   19dd4:	beq	19de0 <lchmod@@Base+0x2c20>
   19dd8:	mov	r0, r6
   19ddc:	bl	13204 <__assert_fail@plt+0x19d8>
   19de0:	mov	r0, r9
   19de4:	bl	1bf68 <lchmod@@Base+0x4da8>
   19de8:	ldr	ip, [r4, #256]	; 0x100
   19dec:	mov	r1, r9
   19df0:	mov	r3, fp
   19df4:	mov	r2, sl
   19df8:	mov	r6, r0
   19dfc:	ldr	r9, [r4, #296]	; 0x128
   19e00:	ldr	lr, [r4, #300]	; 0x12c
   19e04:	str	r0, [r5, #4]
   19e08:	str	ip, [sp]
   19e0c:	ldr	ip, [pc, #100]	; 19e78 <lchmod@@Base+0x2cb8>
   19e10:	str	r7, [sp, #4]
   19e14:	str	ip, [sp, #8]
   19e18:	str	r9, [sp, #12]
   19e1c:	str	lr, [sp, #16]
   19e20:	bl	17b38 <lchmod@@Base+0x978>
   19e24:	ldr	r3, [sp, #28]
   19e28:	mov	r0, r6
   19e2c:	str	r3, [r8]
   19e30:	add	sp, sp, #44	; 0x2c
   19e34:	ldrd	r4, [sp]
   19e38:	ldrd	r6, [sp, #8]
   19e3c:	ldrd	r8, [sp, #16]
   19e40:	ldrd	sl, [sp, #24]
   19e44:	add	sp, sp, #32
   19e48:	pop	{pc}		; (ldr pc, [sp], #4)
   19e4c:	mov	r0, #8
   19e50:	mvn	r3, #-2147483648	; 0x80000000
   19e54:	add	r1, sp, #36	; 0x24
   19e58:	str	r0, [sp]
   19e5c:	mov	r0, #0
   19e60:	bl	1c20c <lchmod@@Base+0x504c>
   19e64:	ldrd	r2, [r4, #8]
   19e68:	mov	r5, r0
   19e6c:	str	r0, [r4]
   19e70:	strd	r2, [r0]
   19e74:	b	19d4c <lchmod@@Base+0x2b8c>
   19e78:	strdeq	lr, [r2], -ip
   19e7c:	strd	r4, [sp, #-20]!	; 0xffffffec
   19e80:	mov	r4, #0
   19e84:	mov	r5, #0
   19e88:	strd	r6, [sp, #8]
   19e8c:	cmp	r1, #10
   19e90:	str	lr, [sp, #16]
   19e94:	sub	sp, sp, #100	; 0x64
   19e98:	strd	r4, [sp, #48]	; 0x30
   19e9c:	beq	19ee4 <lchmod@@Base+0x2d24>
   19ea0:	mov	r3, sp
   19ea4:	strd	r4, [sp, #8]
   19ea8:	str	r1, [sp, #48]	; 0x30
   19eac:	mov	r1, r2
   19eb0:	mvn	r2, #0
   19eb4:	ldrd	r6, [sp, #48]	; 0x30
   19eb8:	strd	r6, [sp]
   19ebc:	strd	r4, [sp, #16]
   19ec0:	strd	r4, [sp, #24]
   19ec4:	strd	r4, [sp, #32]
   19ec8:	strd	r4, [sp, #40]	; 0x28
   19ecc:	bl	19524 <lchmod@@Base+0x2364>
   19ed0:	add	sp, sp, #100	; 0x64
   19ed4:	ldrd	r4, [sp]
   19ed8:	ldrd	r6, [sp, #8]
   19edc:	add	sp, sp, #16
   19ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   19ee4:	bl	117d8 <abort@plt>
   19ee8:	strd	r4, [sp, #-20]!	; 0xffffffec
   19eec:	mov	r4, #0
   19ef0:	mov	r5, #0
   19ef4:	strd	r6, [sp, #8]
   19ef8:	cmp	r1, #10
   19efc:	str	lr, [sp, #16]
   19f00:	sub	sp, sp, #100	; 0x64
   19f04:	strd	r4, [sp, #48]	; 0x30
   19f08:	beq	19f54 <lchmod@@Base+0x2d94>
   19f0c:	mov	ip, r2
   19f10:	mov	r2, r3
   19f14:	strd	r4, [sp, #8]
   19f18:	str	r1, [sp, #48]	; 0x30
   19f1c:	mov	r3, sp
   19f20:	mov	r1, ip
   19f24:	ldrd	r6, [sp, #48]	; 0x30
   19f28:	strd	r6, [sp]
   19f2c:	strd	r4, [sp, #16]
   19f30:	strd	r4, [sp, #24]
   19f34:	strd	r4, [sp, #32]
   19f38:	strd	r4, [sp, #40]	; 0x28
   19f3c:	bl	19524 <lchmod@@Base+0x2364>
   19f40:	add	sp, sp, #100	; 0x64
   19f44:	ldrd	r4, [sp]
   19f48:	ldrd	r6, [sp, #8]
   19f4c:	add	sp, sp, #16
   19f50:	pop	{pc}		; (ldr pc, [sp], #4)
   19f54:	bl	117d8 <abort@plt>
   19f58:	mov	r2, #0
   19f5c:	mov	r3, #0
   19f60:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19f64:	strd	r6, [sp, #8]
   19f68:	cmp	r0, #10
   19f6c:	strd	r8, [sp, #16]
   19f70:	strd	sl, [sp, #24]
   19f74:	str	lr, [sp, #32]
   19f78:	sub	sp, sp, #124	; 0x7c
   19f7c:	strd	r2, [sp, #72]	; 0x48
   19f80:	strd	r2, [sp, #80]	; 0x50
   19f84:	strd	r2, [sp, #88]	; 0x58
   19f88:	strd	r2, [sp, #96]	; 0x60
   19f8c:	strd	r2, [sp, #104]	; 0x68
   19f90:	strd	r2, [sp, #112]	; 0x70
   19f94:	beq	1a138 <lchmod@@Base+0x2f78>
   19f98:	mov	r6, r1
   19f9c:	movw	r4, #57732	; 0xe184
   19fa0:	movt	r4, #2
   19fa4:	str	r0, [sp, #72]	; 0x48
   19fa8:	ldrd	r0, [sp, #72]	; 0x48
   19fac:	strd	r0, [sp, #24]
   19fb0:	strd	r2, [sp, #32]
   19fb4:	strd	r2, [sp, #40]	; 0x28
   19fb8:	strd	r2, [sp, #48]	; 0x30
   19fbc:	strd	r2, [sp, #56]	; 0x38
   19fc0:	strd	r2, [sp, #64]	; 0x40
   19fc4:	bl	11688 <__errno_location@plt>
   19fc8:	mov	r8, r0
   19fcc:	ldr	r5, [r4]
   19fd0:	ldr	r2, [r4, #4]
   19fd4:	ldr	r9, [r0]
   19fd8:	cmp	r2, #0
   19fdc:	bgt	1a038 <lchmod@@Base+0x2e78>
   19fe0:	add	r3, r4, #8
   19fe4:	str	r2, [sp, #72]	; 0x48
   19fe8:	rsb	r2, r2, #1
   19fec:	cmp	r5, r3
   19ff0:	beq	1a10c <lchmod@@Base+0x2f4c>
   19ff4:	mov	r3, #8
   19ff8:	mov	r0, r5
   19ffc:	add	r1, sp, #72	; 0x48
   1a000:	str	r3, [sp]
   1a004:	mvn	r3, #-2147483648	; 0x80000000
   1a008:	bl	1c20c <lchmod@@Base+0x504c>
   1a00c:	mov	r5, r0
   1a010:	str	r0, [r4]
   1a014:	ldr	r0, [r4, #4]
   1a018:	mov	r1, #0
   1a01c:	ldr	r2, [sp, #72]	; 0x48
   1a020:	sub	r2, r2, r0
   1a024:	add	r0, r5, r0, lsl #3
   1a028:	lsl	r2, r2, #3
   1a02c:	bl	116ac <memset@plt>
   1a030:	ldr	r3, [sp, #72]	; 0x48
   1a034:	str	r3, [r4, #4]
   1a038:	ldr	sl, [r5]
   1a03c:	add	r0, sp, #32
   1a040:	mvn	r3, #0
   1a044:	mov	r2, r6
   1a048:	ldr	r7, [sp, #28]
   1a04c:	ldr	r4, [r5, #4]
   1a050:	mov	r1, sl
   1a054:	str	r0, [sp, #8]
   1a058:	ldr	lr, [sp, #24]
   1a05c:	orr	r7, r7, #1
   1a060:	ldr	ip, [sp, #64]	; 0x40
   1a064:	mov	r0, r4
   1a068:	ldr	fp, [sp, #68]	; 0x44
   1a06c:	str	lr, [sp]
   1a070:	str	r7, [sp, #4]
   1a074:	str	ip, [sp, #12]
   1a078:	str	fp, [sp, #16]
   1a07c:	bl	17b38 <lchmod@@Base+0x978>
   1a080:	cmp	sl, r0
   1a084:	bhi	1a0e8 <lchmod@@Base+0x2f28>
   1a088:	add	sl, r0, #1
   1a08c:	movw	r3, #57844	; 0xe1f4
   1a090:	movt	r3, #2
   1a094:	cmp	r4, r3
   1a098:	str	sl, [r5]
   1a09c:	beq	1a0a8 <lchmod@@Base+0x2ee8>
   1a0a0:	mov	r0, r4
   1a0a4:	bl	13204 <__assert_fail@plt+0x19d8>
   1a0a8:	mov	r0, sl
   1a0ac:	bl	1bf68 <lchmod@@Base+0x4da8>
   1a0b0:	ldr	r3, [sp, #24]
   1a0b4:	mov	r2, r6
   1a0b8:	mov	r1, sl
   1a0bc:	mov	r4, r0
   1a0c0:	ldr	lr, [sp, #64]	; 0x40
   1a0c4:	ldr	ip, [sp, #68]	; 0x44
   1a0c8:	str	r0, [r5, #4]
   1a0cc:	add	r5, sp, #32
   1a0d0:	stm	sp, {r3, r7}
   1a0d4:	mvn	r3, #0
   1a0d8:	str	r5, [sp, #8]
   1a0dc:	str	lr, [sp, #12]
   1a0e0:	str	ip, [sp, #16]
   1a0e4:	bl	17b38 <lchmod@@Base+0x978>
   1a0e8:	mov	r0, r4
   1a0ec:	str	r9, [r8]
   1a0f0:	add	sp, sp, #124	; 0x7c
   1a0f4:	ldrd	r4, [sp]
   1a0f8:	ldrd	r6, [sp, #8]
   1a0fc:	ldrd	r8, [sp, #16]
   1a100:	ldrd	sl, [sp, #24]
   1a104:	add	sp, sp, #32
   1a108:	pop	{pc}		; (ldr pc, [sp], #4)
   1a10c:	mov	r0, #8
   1a110:	mvn	r3, #-2147483648	; 0x80000000
   1a114:	add	r1, sp, #72	; 0x48
   1a118:	str	r0, [sp]
   1a11c:	mov	r0, #0
   1a120:	bl	1c20c <lchmod@@Base+0x504c>
   1a124:	ldrd	r2, [r4, #8]
   1a128:	mov	r5, r0
   1a12c:	str	r0, [r4]
   1a130:	strd	r2, [r0]
   1a134:	b	1a014 <lchmod@@Base+0x2e54>
   1a138:	bl	117d8 <abort@plt>
   1a13c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a140:	cmp	r0, #10
   1a144:	strd	r6, [sp, #8]
   1a148:	mov	r6, #0
   1a14c:	mov	r7, #0
   1a150:	strd	r8, [sp, #16]
   1a154:	strd	sl, [sp, #24]
   1a158:	str	lr, [sp, #32]
   1a15c:	sub	sp, sp, #124	; 0x7c
   1a160:	strd	r6, [sp, #72]	; 0x48
   1a164:	strd	r6, [sp, #80]	; 0x50
   1a168:	strd	r6, [sp, #88]	; 0x58
   1a16c:	strd	r6, [sp, #96]	; 0x60
   1a170:	strd	r6, [sp, #104]	; 0x68
   1a174:	strd	r6, [sp, #112]	; 0x70
   1a178:	beq	1a324 <lchmod@@Base+0x3164>
   1a17c:	mov	sl, r2
   1a180:	movw	r5, #57732	; 0xe184
   1a184:	movt	r5, #2
   1a188:	str	r0, [sp, #72]	; 0x48
   1a18c:	mov	r9, r1
   1a190:	ldrd	r2, [sp, #72]	; 0x48
   1a194:	strd	r2, [sp, #24]
   1a198:	strd	r6, [sp, #32]
   1a19c:	strd	r6, [sp, #40]	; 0x28
   1a1a0:	strd	r6, [sp, #48]	; 0x30
   1a1a4:	strd	r6, [sp, #56]	; 0x38
   1a1a8:	strd	r6, [sp, #64]	; 0x40
   1a1ac:	bl	11688 <__errno_location@plt>
   1a1b0:	mov	r7, r0
   1a1b4:	ldr	r4, [r5]
   1a1b8:	ldr	r2, [r5, #4]
   1a1bc:	ldr	fp, [r0]
   1a1c0:	cmp	r2, #0
   1a1c4:	bgt	1a220 <lchmod@@Base+0x3060>
   1a1c8:	add	r3, r5, #8
   1a1cc:	str	r2, [sp, #72]	; 0x48
   1a1d0:	rsb	r2, r2, #1
   1a1d4:	cmp	r4, r3
   1a1d8:	beq	1a2f8 <lchmod@@Base+0x3138>
   1a1dc:	mov	r3, #8
   1a1e0:	mov	r0, r4
   1a1e4:	add	r1, sp, #72	; 0x48
   1a1e8:	str	r3, [sp]
   1a1ec:	mvn	r3, #-2147483648	; 0x80000000
   1a1f0:	bl	1c20c <lchmod@@Base+0x504c>
   1a1f4:	mov	r4, r0
   1a1f8:	str	r0, [r5]
   1a1fc:	ldr	r0, [r5, #4]
   1a200:	mov	r1, #0
   1a204:	ldr	r2, [sp, #72]	; 0x48
   1a208:	sub	r2, r2, r0
   1a20c:	add	r0, r4, r0, lsl #3
   1a210:	lsl	r2, r2, #3
   1a214:	bl	116ac <memset@plt>
   1a218:	ldr	r3, [sp, #72]	; 0x48
   1a21c:	str	r3, [r5, #4]
   1a220:	ldr	ip, [sp, #24]
   1a224:	add	r0, sp, #32
   1a228:	mov	r3, sl
   1a22c:	mov	r2, r9
   1a230:	ldr	r6, [sp, #28]
   1a234:	ldr	r8, [r4]
   1a238:	ldr	r5, [r4, #4]
   1a23c:	str	ip, [sp]
   1a240:	orr	r6, r6, #1
   1a244:	ldr	ip, [sp, #64]	; 0x40
   1a248:	mov	r1, r8
   1a24c:	str	r6, [sp, #4]
   1a250:	ldr	lr, [sp, #68]	; 0x44
   1a254:	str	r0, [sp, #8]
   1a258:	mov	r0, r5
   1a25c:	str	ip, [sp, #12]
   1a260:	str	lr, [sp, #16]
   1a264:	bl	17b38 <lchmod@@Base+0x978>
   1a268:	cmp	r8, r0
   1a26c:	bhi	1a2d4 <lchmod@@Base+0x3114>
   1a270:	add	r8, r0, #1
   1a274:	movw	r3, #57844	; 0xe1f4
   1a278:	movt	r3, #2
   1a27c:	cmp	r5, r3
   1a280:	str	r8, [r4]
   1a284:	beq	1a290 <lchmod@@Base+0x30d0>
   1a288:	mov	r0, r5
   1a28c:	bl	13204 <__assert_fail@plt+0x19d8>
   1a290:	mov	r0, r8
   1a294:	bl	1bf68 <lchmod@@Base+0x4da8>
   1a298:	ldr	lr, [sp, #24]
   1a29c:	mov	r1, r8
   1a2a0:	mov	r3, sl
   1a2a4:	mov	r2, r9
   1a2a8:	mov	r5, r0
   1a2ac:	ldr	r8, [sp, #64]	; 0x40
   1a2b0:	ldr	ip, [sp, #68]	; 0x44
   1a2b4:	str	r0, [r4, #4]
   1a2b8:	str	lr, [sp]
   1a2bc:	add	lr, sp, #32
   1a2c0:	str	r6, [sp, #4]
   1a2c4:	str	lr, [sp, #8]
   1a2c8:	str	r8, [sp, #12]
   1a2cc:	str	ip, [sp, #16]
   1a2d0:	bl	17b38 <lchmod@@Base+0x978>
   1a2d4:	mov	r0, r5
   1a2d8:	str	fp, [r7]
   1a2dc:	add	sp, sp, #124	; 0x7c
   1a2e0:	ldrd	r4, [sp]
   1a2e4:	ldrd	r6, [sp, #8]
   1a2e8:	ldrd	r8, [sp, #16]
   1a2ec:	ldrd	sl, [sp, #24]
   1a2f0:	add	sp, sp, #32
   1a2f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a2f8:	mov	r0, #8
   1a2fc:	mvn	r3, #-2147483648	; 0x80000000
   1a300:	add	r1, sp, #72	; 0x48
   1a304:	str	r0, [sp]
   1a308:	mov	r0, #0
   1a30c:	bl	1c20c <lchmod@@Base+0x504c>
   1a310:	ldrd	r2, [r5, #8]
   1a314:	mov	r4, r0
   1a318:	str	r0, [r5]
   1a31c:	strd	r2, [r0]
   1a320:	b	1a1fc <lchmod@@Base+0x303c>
   1a324:	bl	117d8 <abort@plt>
   1a328:	ldr	r3, [pc, #492]	; 1a51c <lchmod@@Base+0x335c>
   1a32c:	lsr	ip, r2, #5
   1a330:	and	r2, r2, #31
   1a334:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a338:	movw	r5, #57732	; 0xe184
   1a33c:	movt	r5, #2
   1a340:	strd	r6, [sp, #8]
   1a344:	strd	r8, [sp, #16]
   1a348:	strd	sl, [sp, #24]
   1a34c:	mov	sl, r0
   1a350:	mov	fp, r1
   1a354:	ldrd	r0, [r3]
   1a358:	str	lr, [sp, #32]
   1a35c:	sub	sp, sp, #92	; 0x5c
   1a360:	ldrd	r8, [r3, #8]
   1a364:	add	r6, sp, #48	; 0x30
   1a368:	strd	r0, [sp, #40]	; 0x28
   1a36c:	ldrd	r0, [r3, #16]
   1a370:	strd	r8, [sp, #48]	; 0x30
   1a374:	ldrd	r8, [r3, #24]
   1a378:	strd	r0, [sp, #56]	; 0x38
   1a37c:	ldrd	r0, [r3, #32]
   1a380:	strd	r8, [sp, #64]	; 0x40
   1a384:	ldrd	r8, [r3, #40]	; 0x28
   1a388:	strd	r0, [sp, #72]	; 0x48
   1a38c:	strd	r8, [sp, #80]	; 0x50
   1a390:	ldr	r3, [r6, ip, lsl #2]
   1a394:	mvn	r1, r3, lsr r2
   1a398:	and	r1, r1, #1
   1a39c:	eor	r2, r3, r1, lsl r2
   1a3a0:	str	r2, [r6, ip, lsl #2]
   1a3a4:	bl	11688 <__errno_location@plt>
   1a3a8:	ldr	r3, [r0]
   1a3ac:	mov	r8, r0
   1a3b0:	ldr	r2, [r5, #4]
   1a3b4:	ldr	r4, [r5]
   1a3b8:	str	r3, [sp, #28]
   1a3bc:	cmp	r2, #0
   1a3c0:	bgt	1a41c <lchmod@@Base+0x325c>
   1a3c4:	add	r3, r5, #8
   1a3c8:	str	r2, [sp, #36]	; 0x24
   1a3cc:	rsb	r2, r2, #1
   1a3d0:	cmp	r4, r3
   1a3d4:	beq	1a4f0 <lchmod@@Base+0x3330>
   1a3d8:	mov	r1, #8
   1a3dc:	mov	r0, r4
   1a3e0:	mvn	r3, #-2147483648	; 0x80000000
   1a3e4:	str	r1, [sp]
   1a3e8:	add	r1, sp, #36	; 0x24
   1a3ec:	bl	1c20c <lchmod@@Base+0x504c>
   1a3f0:	mov	r4, r0
   1a3f4:	str	r0, [r5]
   1a3f8:	ldr	r0, [r5, #4]
   1a3fc:	mov	r1, #0
   1a400:	ldr	r2, [sp, #36]	; 0x24
   1a404:	sub	r2, r2, r0
   1a408:	add	r0, r4, r0, lsl #3
   1a40c:	lsl	r2, r2, #3
   1a410:	bl	116ac <memset@plt>
   1a414:	ldr	r3, [sp, #36]	; 0x24
   1a418:	str	r3, [r5, #4]
   1a41c:	ldr	ip, [sp, #40]	; 0x28
   1a420:	mov	r3, fp
   1a424:	mov	r2, sl
   1a428:	ldr	r7, [sp, #44]	; 0x2c
   1a42c:	ldr	r9, [r4]
   1a430:	ldr	r5, [r4, #4]
   1a434:	str	ip, [sp]
   1a438:	orr	r7, r7, #1
   1a43c:	ldr	ip, [sp, #80]	; 0x50
   1a440:	mov	r1, r9
   1a444:	str	r7, [sp, #4]
   1a448:	ldr	lr, [sp, #84]	; 0x54
   1a44c:	mov	r0, r5
   1a450:	str	r6, [sp, #8]
   1a454:	str	ip, [sp, #12]
   1a458:	str	lr, [sp, #16]
   1a45c:	bl	17b38 <lchmod@@Base+0x978>
   1a460:	cmp	r9, r0
   1a464:	bhi	1a4c8 <lchmod@@Base+0x3308>
   1a468:	add	r9, r0, #1
   1a46c:	movw	r3, #57844	; 0xe1f4
   1a470:	movt	r3, #2
   1a474:	cmp	r5, r3
   1a478:	str	r9, [r4]
   1a47c:	beq	1a488 <lchmod@@Base+0x32c8>
   1a480:	mov	r0, r5
   1a484:	bl	13204 <__assert_fail@plt+0x19d8>
   1a488:	mov	r0, r9
   1a48c:	bl	1bf68 <lchmod@@Base+0x4da8>
   1a490:	mov	r1, r9
   1a494:	ldr	ip, [sp, #40]	; 0x28
   1a498:	mov	r3, fp
   1a49c:	mov	r2, sl
   1a4a0:	mov	r5, r0
   1a4a4:	ldr	r9, [sp, #80]	; 0x50
   1a4a8:	ldr	lr, [sp, #84]	; 0x54
   1a4ac:	str	r0, [r4, #4]
   1a4b0:	str	ip, [sp]
   1a4b4:	str	r7, [sp, #4]
   1a4b8:	str	r6, [sp, #8]
   1a4bc:	str	r9, [sp, #12]
   1a4c0:	str	lr, [sp, #16]
   1a4c4:	bl	17b38 <lchmod@@Base+0x978>
   1a4c8:	ldr	r3, [sp, #28]
   1a4cc:	mov	r0, r5
   1a4d0:	str	r3, [r8]
   1a4d4:	add	sp, sp, #92	; 0x5c
   1a4d8:	ldrd	r4, [sp]
   1a4dc:	ldrd	r6, [sp, #8]
   1a4e0:	ldrd	r8, [sp, #16]
   1a4e4:	ldrd	sl, [sp, #24]
   1a4e8:	add	sp, sp, #32
   1a4ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4f0:	mov	r0, #8
   1a4f4:	mvn	r3, #-2147483648	; 0x80000000
   1a4f8:	add	r1, sp, #36	; 0x24
   1a4fc:	str	r0, [sp]
   1a500:	mov	r0, #0
   1a504:	bl	1c20c <lchmod@@Base+0x504c>
   1a508:	ldrd	r2, [r5, #8]
   1a50c:	mov	r4, r0
   1a510:	str	r0, [r5]
   1a514:	strd	r2, [r0]
   1a518:	b	1a3f8 <lchmod@@Base+0x3238>
   1a51c:	strdeq	lr, [r2], -r4
   1a520:	ldr	ip, [pc, #476]	; 1a704 <lchmod@@Base+0x3544>
   1a524:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a528:	movw	r4, #57732	; 0xe184
   1a52c:	movt	r4, #2
   1a530:	ldrd	r2, [ip, #8]
   1a534:	strd	r6, [sp, #8]
   1a538:	lsr	r7, r1, #5
   1a53c:	mov	r6, r0
   1a540:	strd	r8, [sp, #16]
   1a544:	str	lr, [sp, #32]
   1a548:	and	lr, r1, #31
   1a54c:	ldrd	r0, [ip]
   1a550:	strd	sl, [sp, #24]
   1a554:	sub	sp, sp, #84	; 0x54
   1a558:	add	r5, sp, #40	; 0x28
   1a55c:	strd	r0, [sp, #32]
   1a560:	strd	r2, [sp, #40]	; 0x28
   1a564:	ldrd	r0, [ip, #16]
   1a568:	ldrd	r2, [ip, #24]
   1a56c:	strd	r0, [sp, #48]	; 0x30
   1a570:	ldrd	r0, [ip, #32]
   1a574:	strd	r2, [sp, #56]	; 0x38
   1a578:	ldrd	r2, [ip, #40]	; 0x28
   1a57c:	strd	r0, [sp, #64]	; 0x40
   1a580:	strd	r2, [sp, #72]	; 0x48
   1a584:	ldr	r1, [r5, r7, lsl #2]
   1a588:	mvn	r3, r1, lsr lr
   1a58c:	and	r3, r3, #1
   1a590:	eor	r1, r1, r3, lsl lr
   1a594:	str	r1, [r5, r7, lsl #2]
   1a598:	bl	11688 <__errno_location@plt>
   1a59c:	mov	r9, r0
   1a5a0:	ldr	sl, [r0]
   1a5a4:	ldr	r2, [r4, #4]
   1a5a8:	ldr	r7, [r4]
   1a5ac:	cmp	r2, #0
   1a5b0:	bgt	1a60c <lchmod@@Base+0x344c>
   1a5b4:	add	r3, r4, #8
   1a5b8:	str	r2, [sp, #28]
   1a5bc:	rsb	r2, r2, #1
   1a5c0:	cmp	r7, r3
   1a5c4:	beq	1a6d8 <lchmod@@Base+0x3518>
   1a5c8:	mov	r1, #8
   1a5cc:	mov	r0, r7
   1a5d0:	mvn	r3, #-2147483648	; 0x80000000
   1a5d4:	str	r1, [sp]
   1a5d8:	add	r1, sp, #28
   1a5dc:	bl	1c20c <lchmod@@Base+0x504c>
   1a5e0:	mov	r7, r0
   1a5e4:	str	r0, [r4]
   1a5e8:	ldr	r0, [r4, #4]
   1a5ec:	mov	r1, #0
   1a5f0:	ldr	r2, [sp, #28]
   1a5f4:	sub	r2, r2, r0
   1a5f8:	add	r0, r7, r0, lsl #3
   1a5fc:	lsl	r2, r2, #3
   1a600:	bl	116ac <memset@plt>
   1a604:	ldr	r3, [sp, #28]
   1a608:	str	r3, [r4, #4]
   1a60c:	ldr	ip, [sp, #32]
   1a610:	mvn	r3, #0
   1a614:	mov	r2, r6
   1a618:	ldr	r8, [sp, #36]	; 0x24
   1a61c:	ldr	fp, [r7]
   1a620:	ldr	r4, [r7, #4]
   1a624:	str	ip, [sp]
   1a628:	orr	r8, r8, #1
   1a62c:	ldr	ip, [sp, #72]	; 0x48
   1a630:	mov	r1, fp
   1a634:	str	r8, [sp, #4]
   1a638:	ldr	lr, [sp, #76]	; 0x4c
   1a63c:	mov	r0, r4
   1a640:	str	r5, [sp, #8]
   1a644:	str	ip, [sp, #12]
   1a648:	str	lr, [sp, #16]
   1a64c:	bl	17b38 <lchmod@@Base+0x978>
   1a650:	cmp	fp, r0
   1a654:	bhi	1a6b4 <lchmod@@Base+0x34f4>
   1a658:	add	fp, r0, #1
   1a65c:	movw	r3, #57844	; 0xe1f4
   1a660:	movt	r3, #2
   1a664:	cmp	r4, r3
   1a668:	str	fp, [r7]
   1a66c:	beq	1a678 <lchmod@@Base+0x34b8>
   1a670:	mov	r0, r4
   1a674:	bl	13204 <__assert_fail@plt+0x19d8>
   1a678:	mov	r0, fp
   1a67c:	bl	1bf68 <lchmod@@Base+0x4da8>
   1a680:	ldr	r3, [sp, #32]
   1a684:	mov	r2, r6
   1a688:	mov	r1, fp
   1a68c:	mov	r4, r0
   1a690:	ldr	lr, [sp, #72]	; 0x48
   1a694:	ldr	ip, [sp, #76]	; 0x4c
   1a698:	str	r0, [r7, #4]
   1a69c:	stm	sp, {r3, r8}
   1a6a0:	mvn	r3, #0
   1a6a4:	str	r5, [sp, #8]
   1a6a8:	str	lr, [sp, #12]
   1a6ac:	str	ip, [sp, #16]
   1a6b0:	bl	17b38 <lchmod@@Base+0x978>
   1a6b4:	mov	r0, r4
   1a6b8:	str	sl, [r9]
   1a6bc:	add	sp, sp, #84	; 0x54
   1a6c0:	ldrd	r4, [sp]
   1a6c4:	ldrd	r6, [sp, #8]
   1a6c8:	ldrd	r8, [sp, #16]
   1a6cc:	ldrd	sl, [sp, #24]
   1a6d0:	add	sp, sp, #32
   1a6d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6d8:	mov	r0, #8
   1a6dc:	mvn	r3, #-2147483648	; 0x80000000
   1a6e0:	add	r1, sp, #28
   1a6e4:	str	r0, [sp]
   1a6e8:	mov	r0, #0
   1a6ec:	bl	1c20c <lchmod@@Base+0x504c>
   1a6f0:	ldrd	r2, [r4, #8]
   1a6f4:	mov	r7, r0
   1a6f8:	str	r0, [r4]
   1a6fc:	strd	r2, [r0]
   1a700:	b	1a5e8 <lchmod@@Base+0x3428>
   1a704:	strdeq	lr, [r2], -r4
   1a708:	ldr	ip, [pc, #472]	; 1a8e8 <lchmod@@Base+0x3728>
   1a70c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a710:	mov	r5, r0
   1a714:	movw	r4, #57732	; 0xe184
   1a718:	movt	r4, #2
   1a71c:	ldrd	r2, [ip]
   1a720:	ldrd	r0, [ip, #8]
   1a724:	strd	r6, [sp, #8]
   1a728:	strd	r8, [sp, #16]
   1a72c:	strd	sl, [sp, #24]
   1a730:	str	lr, [sp, #32]
   1a734:	sub	sp, sp, #84	; 0x54
   1a738:	strd	r2, [sp, #32]
   1a73c:	strd	r0, [sp, #40]	; 0x28
   1a740:	ldr	r6, [sp, #44]	; 0x2c
   1a744:	ldrd	r2, [ip, #16]
   1a748:	ldrd	r0, [ip, #24]
   1a74c:	mvn	lr, r6
   1a750:	and	lr, lr, #67108864	; 0x4000000
   1a754:	eor	lr, lr, r6
   1a758:	ldrd	r6, [ip, #40]	; 0x28
   1a75c:	strd	r2, [sp, #48]	; 0x30
   1a760:	ldrd	r2, [ip, #32]
   1a764:	str	lr, [sp, #44]	; 0x2c
   1a768:	strd	r0, [sp, #56]	; 0x38
   1a76c:	strd	r2, [sp, #64]	; 0x40
   1a770:	strd	r6, [sp, #72]	; 0x48
   1a774:	bl	11688 <__errno_location@plt>
   1a778:	mov	r8, r0
   1a77c:	ldr	r9, [r0]
   1a780:	ldr	r2, [r4, #4]
   1a784:	ldr	r6, [r4]
   1a788:	cmp	r2, #0
   1a78c:	bgt	1a7e8 <lchmod@@Base+0x3628>
   1a790:	add	r3, r4, #8
   1a794:	str	r2, [sp, #28]
   1a798:	rsb	r2, r2, #1
   1a79c:	cmp	r6, r3
   1a7a0:	beq	1a8bc <lchmod@@Base+0x36fc>
   1a7a4:	mov	r1, #8
   1a7a8:	mov	r0, r6
   1a7ac:	mvn	r3, #-2147483648	; 0x80000000
   1a7b0:	str	r1, [sp]
   1a7b4:	add	r1, sp, #28
   1a7b8:	bl	1c20c <lchmod@@Base+0x504c>
   1a7bc:	mov	r6, r0
   1a7c0:	str	r0, [r4]
   1a7c4:	ldr	r0, [r4, #4]
   1a7c8:	mov	r1, #0
   1a7cc:	ldr	r2, [sp, #28]
   1a7d0:	sub	r2, r2, r0
   1a7d4:	add	r0, r6, r0, lsl #3
   1a7d8:	lsl	r2, r2, #3
   1a7dc:	bl	116ac <memset@plt>
   1a7e0:	ldr	r3, [sp, #28]
   1a7e4:	str	r3, [r4, #4]
   1a7e8:	ldr	sl, [r6]
   1a7ec:	add	r0, sp, #40	; 0x28
   1a7f0:	mvn	r3, #0
   1a7f4:	mov	r2, r5
   1a7f8:	ldr	r7, [sp, #36]	; 0x24
   1a7fc:	ldr	r4, [r6, #4]
   1a800:	mov	r1, sl
   1a804:	str	r0, [sp, #8]
   1a808:	ldr	lr, [sp, #32]
   1a80c:	orr	r7, r7, #1
   1a810:	ldr	ip, [sp, #72]	; 0x48
   1a814:	mov	r0, r4
   1a818:	ldr	fp, [sp, #76]	; 0x4c
   1a81c:	str	lr, [sp]
   1a820:	str	r7, [sp, #4]
   1a824:	str	ip, [sp, #12]
   1a828:	str	fp, [sp, #16]
   1a82c:	bl	17b38 <lchmod@@Base+0x978>
   1a830:	cmp	sl, r0
   1a834:	bhi	1a898 <lchmod@@Base+0x36d8>
   1a838:	add	sl, r0, #1
   1a83c:	movw	r3, #57844	; 0xe1f4
   1a840:	movt	r3, #2
   1a844:	cmp	r4, r3
   1a848:	str	sl, [r6]
   1a84c:	beq	1a858 <lchmod@@Base+0x3698>
   1a850:	mov	r0, r4
   1a854:	bl	13204 <__assert_fail@plt+0x19d8>
   1a858:	mov	r0, sl
   1a85c:	bl	1bf68 <lchmod@@Base+0x4da8>
   1a860:	ldr	r3, [sp, #32]
   1a864:	mov	r2, r5
   1a868:	add	r5, sp, #40	; 0x28
   1a86c:	mov	r1, sl
   1a870:	mov	r4, r0
   1a874:	ldr	lr, [sp, #72]	; 0x48
   1a878:	ldr	ip, [sp, #76]	; 0x4c
   1a87c:	str	r0, [r6, #4]
   1a880:	stm	sp, {r3, r7}
   1a884:	mvn	r3, #0
   1a888:	str	r5, [sp, #8]
   1a88c:	str	lr, [sp, #12]
   1a890:	str	ip, [sp, #16]
   1a894:	bl	17b38 <lchmod@@Base+0x978>
   1a898:	mov	r0, r4
   1a89c:	str	r9, [r8]
   1a8a0:	add	sp, sp, #84	; 0x54
   1a8a4:	ldrd	r4, [sp]
   1a8a8:	ldrd	r6, [sp, #8]
   1a8ac:	ldrd	r8, [sp, #16]
   1a8b0:	ldrd	sl, [sp, #24]
   1a8b4:	add	sp, sp, #32
   1a8b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8bc:	mov	r0, #8
   1a8c0:	mvn	r3, #-2147483648	; 0x80000000
   1a8c4:	add	r1, sp, #28
   1a8c8:	str	r0, [sp]
   1a8cc:	mov	r0, #0
   1a8d0:	bl	1c20c <lchmod@@Base+0x504c>
   1a8d4:	ldrd	r2, [r4, #8]
   1a8d8:	mov	r6, r0
   1a8dc:	str	r0, [r4]
   1a8e0:	strd	r2, [r0]
   1a8e4:	b	1a7c4 <lchmod@@Base+0x3604>
   1a8e8:	strdeq	lr, [r2], -r4
   1a8ec:	ldr	ip, [pc, #480]	; 1aad4 <lchmod@@Base+0x3914>
   1a8f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a8f4:	mov	r5, r0
   1a8f8:	movw	r4, #57732	; 0xe184
   1a8fc:	movt	r4, #2
   1a900:	ldrd	r2, [ip]
   1a904:	strd	r6, [sp, #8]
   1a908:	mov	r6, r1
   1a90c:	ldrd	r0, [ip, #8]
   1a910:	strd	r8, [sp, #16]
   1a914:	strd	sl, [sp, #24]
   1a918:	str	lr, [sp, #32]
   1a91c:	sub	sp, sp, #84	; 0x54
   1a920:	ldrd	r8, [ip, #40]	; 0x28
   1a924:	strd	r2, [sp, #32]
   1a928:	strd	r0, [sp, #40]	; 0x28
   1a92c:	ldrd	r2, [ip, #16]
   1a930:	ldr	r7, [sp, #44]	; 0x2c
   1a934:	ldrd	r0, [ip, #24]
   1a938:	strd	r2, [sp, #48]	; 0x30
   1a93c:	ldrd	r2, [ip, #32]
   1a940:	mvn	lr, r7
   1a944:	and	lr, lr, #67108864	; 0x4000000
   1a948:	eor	lr, lr, r7
   1a94c:	str	lr, [sp, #44]	; 0x2c
   1a950:	strd	r0, [sp, #56]	; 0x38
   1a954:	strd	r2, [sp, #64]	; 0x40
   1a958:	strd	r8, [sp, #72]	; 0x48
   1a95c:	bl	11688 <__errno_location@plt>
   1a960:	mov	r9, r0
   1a964:	ldr	sl, [r0]
   1a968:	ldr	r2, [r4, #4]
   1a96c:	ldr	r7, [r4]
   1a970:	cmp	r2, #0
   1a974:	bgt	1a9d0 <lchmod@@Base+0x3810>
   1a978:	add	r3, r4, #8
   1a97c:	str	r2, [sp, #28]
   1a980:	rsb	r2, r2, #1
   1a984:	cmp	r7, r3
   1a988:	beq	1aaa8 <lchmod@@Base+0x38e8>
   1a98c:	mov	r1, #8
   1a990:	mov	r0, r7
   1a994:	mvn	r3, #-2147483648	; 0x80000000
   1a998:	str	r1, [sp]
   1a99c:	add	r1, sp, #28
   1a9a0:	bl	1c20c <lchmod@@Base+0x504c>
   1a9a4:	mov	r7, r0
   1a9a8:	str	r0, [r4]
   1a9ac:	ldr	r0, [r4, #4]
   1a9b0:	mov	r1, #0
   1a9b4:	ldr	r2, [sp, #28]
   1a9b8:	sub	r2, r2, r0
   1a9bc:	add	r0, r7, r0, lsl #3
   1a9c0:	lsl	r2, r2, #3
   1a9c4:	bl	116ac <memset@plt>
   1a9c8:	ldr	r3, [sp, #28]
   1a9cc:	str	r3, [r4, #4]
   1a9d0:	ldr	ip, [sp, #32]
   1a9d4:	add	r0, sp, #40	; 0x28
   1a9d8:	mov	r3, r6
   1a9dc:	mov	r2, r5
   1a9e0:	ldr	r8, [sp, #36]	; 0x24
   1a9e4:	ldr	fp, [r7]
   1a9e8:	ldr	r4, [r7, #4]
   1a9ec:	str	ip, [sp]
   1a9f0:	orr	r8, r8, #1
   1a9f4:	ldr	ip, [sp, #72]	; 0x48
   1a9f8:	mov	r1, fp
   1a9fc:	str	r8, [sp, #4]
   1aa00:	ldr	lr, [sp, #76]	; 0x4c
   1aa04:	str	r0, [sp, #8]
   1aa08:	mov	r0, r4
   1aa0c:	str	ip, [sp, #12]
   1aa10:	str	lr, [sp, #16]
   1aa14:	bl	17b38 <lchmod@@Base+0x978>
   1aa18:	cmp	fp, r0
   1aa1c:	bhi	1aa84 <lchmod@@Base+0x38c4>
   1aa20:	add	fp, r0, #1
   1aa24:	movw	r3, #57844	; 0xe1f4
   1aa28:	movt	r3, #2
   1aa2c:	cmp	r4, r3
   1aa30:	str	fp, [r7]
   1aa34:	beq	1aa40 <lchmod@@Base+0x3880>
   1aa38:	mov	r0, r4
   1aa3c:	bl	13204 <__assert_fail@plt+0x19d8>
   1aa40:	mov	r0, fp
   1aa44:	bl	1bf68 <lchmod@@Base+0x4da8>
   1aa48:	ldr	lr, [sp, #32]
   1aa4c:	mov	r2, r5
   1aa50:	mov	r3, r6
   1aa54:	mov	r1, fp
   1aa58:	mov	r4, r0
   1aa5c:	ldr	r5, [sp, #72]	; 0x48
   1aa60:	ldr	ip, [sp, #76]	; 0x4c
   1aa64:	str	r0, [r7, #4]
   1aa68:	str	lr, [sp]
   1aa6c:	add	lr, sp, #40	; 0x28
   1aa70:	str	r8, [sp, #4]
   1aa74:	str	lr, [sp, #8]
   1aa78:	str	r5, [sp, #12]
   1aa7c:	str	ip, [sp, #16]
   1aa80:	bl	17b38 <lchmod@@Base+0x978>
   1aa84:	mov	r0, r4
   1aa88:	str	sl, [r9]
   1aa8c:	add	sp, sp, #84	; 0x54
   1aa90:	ldrd	r4, [sp]
   1aa94:	ldrd	r6, [sp, #8]
   1aa98:	ldrd	r8, [sp, #16]
   1aa9c:	ldrd	sl, [sp, #24]
   1aaa0:	add	sp, sp, #32
   1aaa4:	pop	{pc}		; (ldr pc, [sp], #4)
   1aaa8:	mov	r0, #8
   1aaac:	mvn	r3, #-2147483648	; 0x80000000
   1aab0:	add	r1, sp, #28
   1aab4:	str	r0, [sp]
   1aab8:	mov	r0, #0
   1aabc:	bl	1c20c <lchmod@@Base+0x504c>
   1aac0:	ldrd	r2, [r4, #8]
   1aac4:	mov	r7, r0
   1aac8:	str	r0, [r4]
   1aacc:	strd	r2, [r0]
   1aad0:	b	1a9ac <lchmod@@Base+0x37ec>
   1aad4:	strdeq	lr, [r2], -r4
   1aad8:	strd	r4, [sp, #-12]!
   1aadc:	mov	r4, #0
   1aae0:	mov	r5, #0
   1aae4:	str	lr, [sp, #8]
   1aae8:	sub	sp, sp, #100	; 0x64
   1aaec:	cmp	r1, #10
   1aaf0:	strd	r4, [sp]
   1aaf4:	strd	r4, [sp, #8]
   1aaf8:	strd	r4, [sp, #16]
   1aafc:	strd	r4, [sp, #24]
   1ab00:	strd	r4, [sp, #32]
   1ab04:	strd	r4, [sp, #40]	; 0x28
   1ab08:	beq	1ab38 <lchmod@@Base+0x3978>
   1ab0c:	mov	ip, #67108864	; 0x4000000
   1ab10:	mov	r3, sp
   1ab14:	str	r1, [sp]
   1ab18:	mov	r1, r2
   1ab1c:	mvn	r2, #0
   1ab20:	str	ip, [sp, #12]
   1ab24:	bl	19524 <lchmod@@Base+0x2364>
   1ab28:	add	sp, sp, #100	; 0x64
   1ab2c:	ldrd	r4, [sp]
   1ab30:	add	sp, sp, #8
   1ab34:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab38:	bl	117d8 <abort@plt>
   1ab3c:	ldr	ip, [pc, #156]	; 1abe0 <lchmod@@Base+0x3a20>
   1ab40:	cmp	r2, #0
   1ab44:	cmpne	r1, #0
   1ab48:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1ab4c:	strd	r6, [sp, #8]
   1ab50:	mov	r6, r2
   1ab54:	str	r8, [sp, #16]
   1ab58:	mov	r8, r3
   1ab5c:	strd	sl, [sp, #20]
   1ab60:	ldrd	r4, [ip]
   1ab64:	str	lr, [sp, #28]
   1ab68:	sub	sp, sp, #48	; 0x30
   1ab6c:	mov	lr, #10
   1ab70:	ldrd	r2, [ip, #8]
   1ab74:	ldrd	sl, [ip, #16]
   1ab78:	strd	r4, [sp]
   1ab7c:	ldrd	r4, [ip, #32]
   1ab80:	str	lr, [sp]
   1ab84:	strd	r2, [sp, #8]
   1ab88:	strd	sl, [sp, #16]
   1ab8c:	ldrd	r2, [ip, #24]
   1ab90:	ldrd	sl, [ip, #40]	; 0x28
   1ab94:	strd	r2, [sp, #24]
   1ab98:	strd	r4, [sp, #32]
   1ab9c:	strd	sl, [sp, #40]	; 0x28
   1aba0:	beq	1abdc <lchmod@@Base+0x3a1c>
   1aba4:	mov	r7, r1
   1aba8:	mov	r3, sp
   1abac:	mov	r1, r8
   1abb0:	mvn	r2, #0
   1abb4:	str	r7, [sp, #40]	; 0x28
   1abb8:	str	r6, [sp, #44]	; 0x2c
   1abbc:	bl	19524 <lchmod@@Base+0x2364>
   1abc0:	add	sp, sp, #48	; 0x30
   1abc4:	ldrd	r4, [sp]
   1abc8:	ldrd	r6, [sp, #8]
   1abcc:	ldr	r8, [sp, #16]
   1abd0:	ldrd	sl, [sp, #20]
   1abd4:	add	sp, sp, #28
   1abd8:	pop	{pc}		; (ldr pc, [sp], #4)
   1abdc:	bl	117d8 <abort@plt>
   1abe0:	strdeq	lr, [r2], -r4
   1abe4:	ldr	ip, [pc, #156]	; 1ac88 <lchmod@@Base+0x3ac8>
   1abe8:	cmp	r2, #0
   1abec:	cmpne	r1, #0
   1abf0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1abf4:	strd	r6, [sp, #8]
   1abf8:	mov	r6, r2
   1abfc:	str	r8, [sp, #16]
   1ac00:	mov	r8, r3
   1ac04:	strd	sl, [sp, #20]
   1ac08:	ldrd	r4, [ip]
   1ac0c:	str	lr, [sp, #28]
   1ac10:	sub	sp, sp, #48	; 0x30
   1ac14:	mov	lr, #10
   1ac18:	ldrd	r2, [ip, #8]
   1ac1c:	ldrd	sl, [ip, #16]
   1ac20:	strd	r4, [sp]
   1ac24:	ldrd	r4, [ip, #32]
   1ac28:	str	lr, [sp]
   1ac2c:	strd	r2, [sp, #8]
   1ac30:	strd	sl, [sp, #16]
   1ac34:	ldrd	r2, [ip, #24]
   1ac38:	ldrd	sl, [ip, #40]	; 0x28
   1ac3c:	strd	r2, [sp, #24]
   1ac40:	strd	r4, [sp, #32]
   1ac44:	strd	sl, [sp, #40]	; 0x28
   1ac48:	beq	1ac84 <lchmod@@Base+0x3ac4>
   1ac4c:	ldr	r2, [sp, #80]	; 0x50
   1ac50:	mov	r7, r1
   1ac54:	mov	r3, sp
   1ac58:	mov	r1, r8
   1ac5c:	str	r7, [sp, #40]	; 0x28
   1ac60:	str	r6, [sp, #44]	; 0x2c
   1ac64:	bl	19524 <lchmod@@Base+0x2364>
   1ac68:	add	sp, sp, #48	; 0x30
   1ac6c:	ldrd	r4, [sp]
   1ac70:	ldrd	r6, [sp, #8]
   1ac74:	ldr	r8, [sp, #16]
   1ac78:	ldrd	sl, [sp, #20]
   1ac7c:	add	sp, sp, #28
   1ac80:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac84:	bl	117d8 <abort@plt>
   1ac88:	strdeq	lr, [r2], -r4
   1ac8c:	ldr	ip, [pc, #512]	; 1ae94 <lchmod@@Base+0x3cd4>
   1ac90:	cmp	r0, #0
   1ac94:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ac98:	ldrd	r4, [ip, #16]
   1ac9c:	strd	r6, [sp, #8]
   1aca0:	clz	r6, r1
   1aca4:	mov	r7, r1
   1aca8:	strd	r8, [sp, #16]
   1acac:	mov	r8, r0
   1acb0:	lsr	r6, r6, #5
   1acb4:	strd	sl, [sp, #24]
   1acb8:	mov	fp, r2
   1acbc:	mov	sl, #10
   1acc0:	ldrd	r2, [ip]
   1acc4:	moveq	r6, #1
   1acc8:	str	lr, [sp, #32]
   1accc:	sub	sp, sp, #92	; 0x5c
   1acd0:	cmp	r6, #0
   1acd4:	ldrd	r0, [ip, #8]
   1acd8:	strd	r2, [sp, #40]	; 0x28
   1acdc:	strd	r4, [sp, #56]	; 0x38
   1ace0:	ldrd	r2, [ip, #24]
   1ace4:	strd	r0, [sp, #48]	; 0x30
   1ace8:	ldrd	r0, [ip, #32]
   1acec:	str	sl, [sp, #40]	; 0x28
   1acf0:	ldrd	r4, [ip, #40]	; 0x28
   1acf4:	strd	r2, [sp, #64]	; 0x40
   1acf8:	strd	r0, [sp, #72]	; 0x48
   1acfc:	strd	r4, [sp, #80]	; 0x50
   1ad00:	bne	1ae90 <lchmod@@Base+0x3cd0>
   1ad04:	movw	r5, #57732	; 0xe184
   1ad08:	movt	r5, #2
   1ad0c:	str	r8, [sp, #80]	; 0x50
   1ad10:	str	r7, [sp, #84]	; 0x54
   1ad14:	bl	11688 <__errno_location@plt>
   1ad18:	ldr	r3, [r0]
   1ad1c:	mov	r9, r0
   1ad20:	ldr	r2, [r5, #4]
   1ad24:	ldr	r4, [r5]
   1ad28:	str	r3, [sp, #28]
   1ad2c:	cmp	r2, #0
   1ad30:	movgt	r1, sl
   1ad34:	bgt	1ad9c <lchmod@@Base+0x3bdc>
   1ad38:	add	r3, r5, #8
   1ad3c:	str	r2, [sp, #36]	; 0x24
   1ad40:	rsb	r2, r2, #1
   1ad44:	cmp	r4, r3
   1ad48:	beq	1ae64 <lchmod@@Base+0x3ca4>
   1ad4c:	mov	r1, #8
   1ad50:	mov	r0, r4
   1ad54:	mvn	r3, #-2147483648	; 0x80000000
   1ad58:	str	r1, [sp]
   1ad5c:	add	r1, sp, #36	; 0x24
   1ad60:	bl	1c20c <lchmod@@Base+0x504c>
   1ad64:	mov	r4, r0
   1ad68:	str	r0, [r5]
   1ad6c:	ldr	r0, [r5, #4]
   1ad70:	mov	r1, #0
   1ad74:	ldr	r2, [sp, #36]	; 0x24
   1ad78:	sub	r2, r2, r0
   1ad7c:	add	r0, r4, r0, lsl #3
   1ad80:	lsl	r2, r2, #3
   1ad84:	bl	116ac <memset@plt>
   1ad88:	ldr	r3, [sp, #36]	; 0x24
   1ad8c:	ldr	r1, [sp, #40]	; 0x28
   1ad90:	ldr	r8, [sp, #80]	; 0x50
   1ad94:	str	r3, [r5, #4]
   1ad98:	ldr	r7, [sp, #84]	; 0x54
   1ad9c:	mvn	r3, #0
   1ada0:	mov	r2, fp
   1ada4:	ldr	r6, [sp, #44]	; 0x2c
   1ada8:	ldr	sl, [r4]
   1adac:	ldr	r5, [r4, #4]
   1adb0:	orr	r6, r6, #1
   1adb4:	stm	sp, {r1, r6}
   1adb8:	add	r1, sp, #48	; 0x30
   1adbc:	str	r8, [sp, #12]
   1adc0:	mov	r0, r5
   1adc4:	str	r1, [sp, #8]
   1adc8:	mov	r1, sl
   1adcc:	str	r7, [sp, #16]
   1add0:	bl	17b38 <lchmod@@Base+0x978>
   1add4:	cmp	sl, r0
   1add8:	bhi	1ae3c <lchmod@@Base+0x3c7c>
   1addc:	add	r7, r0, #1
   1ade0:	movw	r3, #57844	; 0xe1f4
   1ade4:	movt	r3, #2
   1ade8:	cmp	r5, r3
   1adec:	str	r7, [r4]
   1adf0:	beq	1adfc <lchmod@@Base+0x3c3c>
   1adf4:	mov	r0, r5
   1adf8:	bl	13204 <__assert_fail@plt+0x19d8>
   1adfc:	mov	r0, r7
   1ae00:	bl	1bf68 <lchmod@@Base+0x4da8>
   1ae04:	ldr	r3, [sp, #40]	; 0x28
   1ae08:	mov	r2, fp
   1ae0c:	mov	r1, r7
   1ae10:	mov	r5, r0
   1ae14:	ldr	lr, [sp, #80]	; 0x50
   1ae18:	ldr	ip, [sp, #84]	; 0x54
   1ae1c:	str	r0, [r4, #4]
   1ae20:	add	r4, sp, #48	; 0x30
   1ae24:	stm	sp, {r3, r6}
   1ae28:	mvn	r3, #0
   1ae2c:	str	r4, [sp, #8]
   1ae30:	str	lr, [sp, #12]
   1ae34:	str	ip, [sp, #16]
   1ae38:	bl	17b38 <lchmod@@Base+0x978>
   1ae3c:	ldr	r3, [sp, #28]
   1ae40:	mov	r0, r5
   1ae44:	str	r3, [r9]
   1ae48:	add	sp, sp, #92	; 0x5c
   1ae4c:	ldrd	r4, [sp]
   1ae50:	ldrd	r6, [sp, #8]
   1ae54:	ldrd	r8, [sp, #16]
   1ae58:	ldrd	sl, [sp, #24]
   1ae5c:	add	sp, sp, #32
   1ae60:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae64:	mov	r1, #8
   1ae68:	mvn	r3, #-2147483648	; 0x80000000
   1ae6c:	mov	r0, r6
   1ae70:	str	r1, [sp]
   1ae74:	add	r1, sp, #36	; 0x24
   1ae78:	bl	1c20c <lchmod@@Base+0x504c>
   1ae7c:	ldrd	r2, [r5, #8]
   1ae80:	mov	r4, r0
   1ae84:	str	r0, [r5]
   1ae88:	strd	r2, [r0]
   1ae8c:	b	1ad6c <lchmod@@Base+0x3bac>
   1ae90:	bl	117d8 <abort@plt>
   1ae94:	strdeq	lr, [r2], -r4
   1ae98:	ldr	ip, [pc, #536]	; 1b0b8 <lchmod@@Base+0x3ef8>
   1ae9c:	cmp	r0, #0
   1aea0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1aea4:	ldrd	r4, [ip, #16]
   1aea8:	strd	r6, [sp, #8]
   1aeac:	mov	r6, r1
   1aeb0:	mov	r7, r0
   1aeb4:	strd	r8, [sp, #16]
   1aeb8:	mov	r9, #10
   1aebc:	strd	sl, [sp, #24]
   1aec0:	mov	sl, r2
   1aec4:	mov	fp, r3
   1aec8:	str	lr, [sp, #32]
   1aecc:	clz	lr, r1
   1aed0:	sub	sp, sp, #92	; 0x5c
   1aed4:	ldrd	r2, [ip]
   1aed8:	lsr	lr, lr, #5
   1aedc:	moveq	lr, #1
   1aee0:	ldrd	r0, [ip, #8]
   1aee4:	cmp	lr, #0
   1aee8:	strd	r4, [sp, #56]	; 0x38
   1aeec:	ldrd	r4, [ip, #40]	; 0x28
   1aef0:	str	lr, [sp, #28]
   1aef4:	strd	r2, [sp, #40]	; 0x28
   1aef8:	ldrd	r2, [ip, #24]
   1aefc:	strd	r0, [sp, #48]	; 0x30
   1af00:	ldrd	r0, [ip, #32]
   1af04:	str	r9, [sp, #40]	; 0x28
   1af08:	strd	r2, [sp, #64]	; 0x40
   1af0c:	strd	r4, [sp, #80]	; 0x50
   1af10:	strd	r0, [sp, #72]	; 0x48
   1af14:	bne	1b0b4 <lchmod@@Base+0x3ef4>
   1af18:	movw	r5, #57732	; 0xe184
   1af1c:	movt	r5, #2
   1af20:	str	r7, [sp, #80]	; 0x50
   1af24:	str	r6, [sp, #84]	; 0x54
   1af28:	bl	11688 <__errno_location@plt>
   1af2c:	ldr	r3, [r0]
   1af30:	mov	r8, r0
   1af34:	ldr	r2, [r5, #4]
   1af38:	ldr	r4, [r5]
   1af3c:	str	r3, [sp, #24]
   1af40:	cmp	r2, #0
   1af44:	movgt	r1, r9
   1af48:	bgt	1afb0 <lchmod@@Base+0x3df0>
   1af4c:	add	r3, r5, #8
   1af50:	str	r2, [sp, #36]	; 0x24
   1af54:	rsb	r2, r2, #1
   1af58:	cmp	r4, r3
   1af5c:	beq	1b088 <lchmod@@Base+0x3ec8>
   1af60:	mov	r1, #8
   1af64:	mov	r0, r4
   1af68:	mvn	r3, #-2147483648	; 0x80000000
   1af6c:	str	r1, [sp]
   1af70:	add	r1, sp, #36	; 0x24
   1af74:	bl	1c20c <lchmod@@Base+0x504c>
   1af78:	mov	r4, r0
   1af7c:	str	r0, [r5]
   1af80:	ldr	r0, [r5, #4]
   1af84:	mov	r1, #0
   1af88:	ldr	r2, [sp, #36]	; 0x24
   1af8c:	sub	r2, r2, r0
   1af90:	add	r0, r4, r0, lsl #3
   1af94:	lsl	r2, r2, #3
   1af98:	bl	116ac <memset@plt>
   1af9c:	ldr	r3, [sp, #36]	; 0x24
   1afa0:	ldr	r1, [sp, #40]	; 0x28
   1afa4:	ldr	r7, [sp, #80]	; 0x50
   1afa8:	str	r3, [r5, #4]
   1afac:	ldr	r6, [sp, #84]	; 0x54
   1afb0:	mov	r3, fp
   1afb4:	mov	r2, sl
   1afb8:	ldr	r0, [sp, #44]	; 0x2c
   1afbc:	ldr	r9, [r4]
   1afc0:	ldr	r5, [r4, #4]
   1afc4:	orr	r0, r0, #1
   1afc8:	str	r1, [sp]
   1afcc:	add	r1, sp, #48	; 0x30
   1afd0:	str	r0, [sp, #4]
   1afd4:	str	r1, [sp, #8]
   1afd8:	mov	r1, r9
   1afdc:	str	r7, [sp, #12]
   1afe0:	str	r6, [sp, #16]
   1afe4:	str	r0, [sp, #28]
   1afe8:	mov	r0, r5
   1afec:	bl	17b38 <lchmod@@Base+0x978>
   1aff0:	cmp	r9, r0
   1aff4:	bhi	1b060 <lchmod@@Base+0x3ea0>
   1aff8:	add	r6, r0, #1
   1affc:	movw	r3, #57844	; 0xe1f4
   1b000:	movt	r3, #2
   1b004:	cmp	r5, r3
   1b008:	str	r6, [r4]
   1b00c:	beq	1b018 <lchmod@@Base+0x3e58>
   1b010:	mov	r0, r5
   1b014:	bl	13204 <__assert_fail@plt+0x19d8>
   1b018:	mov	r0, r6
   1b01c:	bl	1bf68 <lchmod@@Base+0x4da8>
   1b020:	ldr	lr, [sp, #40]	; 0x28
   1b024:	mov	r1, r6
   1b028:	mov	r3, fp
   1b02c:	mov	r2, sl
   1b030:	mov	r5, r0
   1b034:	ldr	r6, [sp, #80]	; 0x50
   1b038:	ldr	ip, [sp, #84]	; 0x54
   1b03c:	str	r0, [r4, #4]
   1b040:	str	lr, [sp]
   1b044:	ldr	lr, [sp, #28]
   1b048:	str	lr, [sp, #4]
   1b04c:	add	lr, sp, #48	; 0x30
   1b050:	str	r6, [sp, #12]
   1b054:	str	lr, [sp, #8]
   1b058:	str	ip, [sp, #16]
   1b05c:	bl	17b38 <lchmod@@Base+0x978>
   1b060:	ldr	r3, [sp, #24]
   1b064:	mov	r0, r5
   1b068:	str	r3, [r8]
   1b06c:	add	sp, sp, #92	; 0x5c
   1b070:	ldrd	r4, [sp]
   1b074:	ldrd	r6, [sp, #8]
   1b078:	ldrd	r8, [sp, #16]
   1b07c:	ldrd	sl, [sp, #24]
   1b080:	add	sp, sp, #32
   1b084:	pop	{pc}		; (ldr pc, [sp], #4)
   1b088:	mov	r1, #8
   1b08c:	mvn	r3, #-2147483648	; 0x80000000
   1b090:	ldr	r0, [sp, #28]
   1b094:	str	r1, [sp]
   1b098:	add	r1, sp, #36	; 0x24
   1b09c:	bl	1c20c <lchmod@@Base+0x504c>
   1b0a0:	ldrd	r2, [r5, #8]
   1b0a4:	mov	r4, r0
   1b0a8:	str	r0, [r5]
   1b0ac:	strd	r2, [r0]
   1b0b0:	b	1af80 <lchmod@@Base+0x3dc0>
   1b0b4:	bl	117d8 <abort@plt>
   1b0b8:	strdeq	lr, [r2], -r4
   1b0bc:	ldr	r3, [pc]	; 1b0c4 <lchmod@@Base+0x3f04>
   1b0c0:	b	19524 <lchmod@@Base+0x2364>
   1b0c4:	muleq	r2, r4, r1
   1b0c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b0cc:	movw	r4, #57732	; 0xe184
   1b0d0:	movt	r4, #2
   1b0d4:	strd	r6, [sp, #8]
   1b0d8:	strd	r8, [sp, #16]
   1b0dc:	strd	sl, [sp, #24]
   1b0e0:	mov	sl, r0
   1b0e4:	mov	fp, r1
   1b0e8:	str	lr, [sp, #32]
   1b0ec:	sub	sp, sp, #44	; 0x2c
   1b0f0:	bl	11688 <__errno_location@plt>
   1b0f4:	ldr	r3, [r0]
   1b0f8:	mov	r8, r0
   1b0fc:	ldr	r2, [r4, #4]
   1b100:	ldr	r5, [r4]
   1b104:	str	r3, [sp, #28]
   1b108:	cmp	r2, #0
   1b10c:	bgt	1b168 <lchmod@@Base+0x3fa8>
   1b110:	add	r3, r4, #8
   1b114:	str	r2, [sp, #36]	; 0x24
   1b118:	rsb	r2, r2, #1
   1b11c:	cmp	r5, r3
   1b120:	beq	1b244 <lchmod@@Base+0x4084>
   1b124:	mov	r1, #8
   1b128:	mov	r0, r5
   1b12c:	mvn	r3, #-2147483648	; 0x80000000
   1b130:	str	r1, [sp]
   1b134:	add	r1, sp, #36	; 0x24
   1b138:	bl	1c20c <lchmod@@Base+0x504c>
   1b13c:	mov	r5, r0
   1b140:	str	r0, [r4]
   1b144:	ldr	r0, [r4, #4]
   1b148:	mov	r1, #0
   1b14c:	ldr	r2, [sp, #36]	; 0x24
   1b150:	sub	r2, r2, r0
   1b154:	add	r0, r5, r0, lsl #3
   1b158:	lsl	r2, r2, #3
   1b15c:	bl	116ac <memset@plt>
   1b160:	ldr	r3, [sp, #36]	; 0x24
   1b164:	str	r3, [r4, #4]
   1b168:	ldr	ip, [r4, #16]
   1b16c:	mov	r3, fp
   1b170:	mov	r2, sl
   1b174:	ldr	r7, [r4, #20]
   1b178:	ldr	r0, [pc, #240]	; 1b270 <lchmod@@Base+0x40b0>
   1b17c:	ldr	r9, [r5]
   1b180:	orr	r7, r7, #1
   1b184:	ldr	r6, [r5, #4]
   1b188:	str	ip, [sp]
   1b18c:	ldr	ip, [r4, #56]	; 0x38
   1b190:	mov	r1, r9
   1b194:	str	r7, [sp, #4]
   1b198:	ldr	lr, [r4, #60]	; 0x3c
   1b19c:	str	r0, [sp, #8]
   1b1a0:	mov	r0, r6
   1b1a4:	str	ip, [sp, #12]
   1b1a8:	str	lr, [sp, #16]
   1b1ac:	bl	17b38 <lchmod@@Base+0x978>
   1b1b0:	cmp	r9, r0
   1b1b4:	bhi	1b21c <lchmod@@Base+0x405c>
   1b1b8:	add	r9, r0, #1
   1b1bc:	movw	r3, #57844	; 0xe1f4
   1b1c0:	movt	r3, #2
   1b1c4:	cmp	r6, r3
   1b1c8:	str	r9, [r5]
   1b1cc:	beq	1b1d8 <lchmod@@Base+0x4018>
   1b1d0:	mov	r0, r6
   1b1d4:	bl	13204 <__assert_fail@plt+0x19d8>
   1b1d8:	mov	r0, r9
   1b1dc:	bl	1bf68 <lchmod@@Base+0x4da8>
   1b1e0:	ldr	ip, [r4, #16]
   1b1e4:	mov	r1, r9
   1b1e8:	mov	r3, fp
   1b1ec:	mov	r2, sl
   1b1f0:	mov	r6, r0
   1b1f4:	ldr	r9, [r4, #56]	; 0x38
   1b1f8:	ldr	lr, [r4, #60]	; 0x3c
   1b1fc:	str	r0, [r5, #4]
   1b200:	str	ip, [sp]
   1b204:	ldr	ip, [pc, #100]	; 1b270 <lchmod@@Base+0x40b0>
   1b208:	str	r7, [sp, #4]
   1b20c:	str	ip, [sp, #8]
   1b210:	str	r9, [sp, #12]
   1b214:	str	lr, [sp, #16]
   1b218:	bl	17b38 <lchmod@@Base+0x978>
   1b21c:	ldr	r3, [sp, #28]
   1b220:	mov	r0, r6
   1b224:	str	r3, [r8]
   1b228:	add	sp, sp, #44	; 0x2c
   1b22c:	ldrd	r4, [sp]
   1b230:	ldrd	r6, [sp, #8]
   1b234:	ldrd	r8, [sp, #16]
   1b238:	ldrd	sl, [sp, #24]
   1b23c:	add	sp, sp, #32
   1b240:	pop	{pc}		; (ldr pc, [sp], #4)
   1b244:	mov	r0, #8
   1b248:	mvn	r3, #-2147483648	; 0x80000000
   1b24c:	add	r1, sp, #36	; 0x24
   1b250:	str	r0, [sp]
   1b254:	mov	r0, #0
   1b258:	bl	1c20c <lchmod@@Base+0x504c>
   1b25c:	ldrd	r2, [r4, #8]
   1b260:	mov	r5, r0
   1b264:	str	r0, [r4]
   1b268:	strd	r2, [r0]
   1b26c:	b	1b144 <lchmod@@Base+0x3f84>
   1b270:	muleq	r2, ip, r1
   1b274:	ldr	r3, [pc, #4]	; 1b280 <lchmod@@Base+0x40c0>
   1b278:	mvn	r2, #0
   1b27c:	b	19524 <lchmod@@Base+0x2364>
   1b280:	muleq	r2, r4, r1
   1b284:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b288:	movw	r4, #57732	; 0xe184
   1b28c:	movt	r4, #2
   1b290:	strd	r6, [sp, #8]
   1b294:	strd	r8, [sp, #16]
   1b298:	strd	sl, [sp, #24]
   1b29c:	mov	sl, r0
   1b2a0:	str	lr, [sp, #32]
   1b2a4:	sub	sp, sp, #44	; 0x2c
   1b2a8:	bl	11688 <__errno_location@plt>
   1b2ac:	ldr	r3, [r0]
   1b2b0:	mov	r8, r0
   1b2b4:	ldr	r2, [r4, #4]
   1b2b8:	ldr	r5, [r4]
   1b2bc:	str	r3, [sp, #28]
   1b2c0:	cmp	r2, #0
   1b2c4:	bgt	1b320 <lchmod@@Base+0x4160>
   1b2c8:	add	r3, r4, #8
   1b2cc:	str	r2, [sp, #36]	; 0x24
   1b2d0:	rsb	r2, r2, #1
   1b2d4:	cmp	r5, r3
   1b2d8:	beq	1b3e8 <lchmod@@Base+0x4228>
   1b2dc:	mov	r1, #8
   1b2e0:	mov	r0, r5
   1b2e4:	mvn	r3, #-2147483648	; 0x80000000
   1b2e8:	str	r1, [sp]
   1b2ec:	add	r1, sp, #36	; 0x24
   1b2f0:	bl	1c20c <lchmod@@Base+0x504c>
   1b2f4:	mov	r5, r0
   1b2f8:	str	r0, [r4]
   1b2fc:	ldr	r0, [r4, #4]
   1b300:	mov	r1, #0
   1b304:	ldr	r2, [sp, #36]	; 0x24
   1b308:	sub	r2, r2, r0
   1b30c:	add	r0, r5, r0, lsl #3
   1b310:	lsl	r2, r2, #3
   1b314:	bl	116ac <memset@plt>
   1b318:	ldr	r3, [sp, #36]	; 0x24
   1b31c:	str	r3, [r4, #4]
   1b320:	ldr	ip, [r4, #16]
   1b324:	mvn	r3, #0
   1b328:	mov	r2, sl
   1b32c:	ldr	r7, [r4, #20]
   1b330:	ldr	fp, [pc, #220]	; 1b414 <lchmod@@Base+0x4254>
   1b334:	ldr	r9, [r5]
   1b338:	orr	r7, r7, #1
   1b33c:	ldr	r6, [r5, #4]
   1b340:	str	ip, [sp]
   1b344:	ldr	ip, [r4, #56]	; 0x38
   1b348:	mov	r1, r9
   1b34c:	stmib	sp, {r7, fp}
   1b350:	ldr	lr, [r4, #60]	; 0x3c
   1b354:	mov	r0, r6
   1b358:	str	ip, [sp, #12]
   1b35c:	str	lr, [sp, #16]
   1b360:	bl	17b38 <lchmod@@Base+0x978>
   1b364:	cmp	r9, r0
   1b368:	bhi	1b3c0 <lchmod@@Base+0x4200>
   1b36c:	add	r9, r0, #1
   1b370:	movw	r3, #57844	; 0xe1f4
   1b374:	movt	r3, #2
   1b378:	cmp	r6, r3
   1b37c:	str	r9, [r5]
   1b380:	beq	1b38c <lchmod@@Base+0x41cc>
   1b384:	mov	r0, r6
   1b388:	bl	13204 <__assert_fail@plt+0x19d8>
   1b38c:	mov	r0, r9
   1b390:	bl	1bf68 <lchmod@@Base+0x4da8>
   1b394:	ldr	r3, [r4, #16]
   1b398:	mov	r2, sl
   1b39c:	mov	r1, r9
   1b3a0:	mov	r6, r0
   1b3a4:	ldr	lr, [r4, #56]	; 0x38
   1b3a8:	ldr	ip, [r4, #60]	; 0x3c
   1b3ac:	str	r0, [r5, #4]
   1b3b0:	stm	sp, {r3, r7, fp, lr}
   1b3b4:	mvn	r3, #0
   1b3b8:	str	ip, [sp, #16]
   1b3bc:	bl	17b38 <lchmod@@Base+0x978>
   1b3c0:	ldr	r3, [sp, #28]
   1b3c4:	mov	r0, r6
   1b3c8:	str	r3, [r8]
   1b3cc:	add	sp, sp, #44	; 0x2c
   1b3d0:	ldrd	r4, [sp]
   1b3d4:	ldrd	r6, [sp, #8]
   1b3d8:	ldrd	r8, [sp, #16]
   1b3dc:	ldrd	sl, [sp, #24]
   1b3e0:	add	sp, sp, #32
   1b3e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3e8:	mov	r0, #8
   1b3ec:	mvn	r3, #-2147483648	; 0x80000000
   1b3f0:	add	r1, sp, #36	; 0x24
   1b3f4:	str	r0, [sp]
   1b3f8:	mov	r0, #0
   1b3fc:	bl	1c20c <lchmod@@Base+0x504c>
   1b400:	ldrd	r2, [r4, #8]
   1b404:	mov	r5, r0
   1b408:	str	r0, [r4]
   1b40c:	strd	r2, [r0]
   1b410:	b	1b2fc <lchmod@@Base+0x413c>
   1b414:	muleq	r2, ip, r1
   1b418:	strd	r4, [sp, #-16]!
   1b41c:	ldr	r4, [r0], #8
   1b420:	str	r6, [sp, #8]
   1b424:	str	lr, [sp, #12]
   1b428:	cmp	r4, r0
   1b42c:	beq	1b458 <lchmod@@Base+0x4298>
   1b430:	mov	r0, r4
   1b434:	bl	1c65c <lchmod@@Base+0x549c>
   1b438:	cmp	r0, #0
   1b43c:	movne	r3, r0
   1b440:	moveq	r3, r4
   1b444:	ldrd	r4, [sp]
   1b448:	mov	r0, r3
   1b44c:	ldr	r6, [sp, #8]
   1b450:	add	sp, sp, #12
   1b454:	pop	{pc}		; (ldr pc, [sp], #4)
   1b458:	mov	r0, r1
   1b45c:	mov	r5, r1
   1b460:	bl	1c620 <lchmod@@Base+0x5460>
   1b464:	subs	r3, r0, #0
   1b468:	beq	1b444 <lchmod@@Base+0x4284>
   1b46c:	mov	r2, r5
   1b470:	mov	r1, r4
   1b474:	ldrd	r4, [sp]
   1b478:	ldr	r6, [sp, #8]
   1b47c:	ldr	lr, [sp, #12]
   1b480:	add	sp, sp, #16
   1b484:	b	114b4 <memcpy@plt>
   1b488:	strd	r4, [sp, #-16]!
   1b48c:	mov	r5, r0
   1b490:	mov	r4, r0
   1b494:	ldr	r3, [r0, #4]
   1b498:	ldr	r0, [r5], #8
   1b49c:	str	r6, [sp, #8]
   1b4a0:	str	lr, [sp, #12]
   1b4a4:	lsl	r6, r3, #1
   1b4a8:	cmp	r0, r5
   1b4ac:	beq	1b4b8 <lchmod@@Base+0x42f8>
   1b4b0:	bl	13204 <__assert_fail@plt+0x19d8>
   1b4b4:	ldr	r3, [r4, #4]
   1b4b8:	cmp	r6, r3
   1b4bc:	bcc	1b4f4 <lchmod@@Base+0x4334>
   1b4c0:	mov	r0, r6
   1b4c4:	bl	1c620 <lchmod@@Base+0x5460>
   1b4c8:	cmp	r0, #0
   1b4cc:	mov	r3, r0
   1b4d0:	mov	r2, r0
   1b4d4:	beq	1b510 <lchmod@@Base+0x4350>
   1b4d8:	mov	r2, #1
   1b4dc:	stm	r4, {r3, r6}
   1b4e0:	mov	r0, r2
   1b4e4:	ldrd	r4, [sp]
   1b4e8:	ldr	r6, [sp, #8]
   1b4ec:	add	sp, sp, #12
   1b4f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4f4:	bl	11688 <__errno_location@plt>
   1b4f8:	mov	r1, #12
   1b4fc:	mov	r3, r5
   1b500:	mov	r6, #1024	; 0x400
   1b504:	mov	r2, #0
   1b508:	str	r1, [r0]
   1b50c:	b	1b4dc <lchmod@@Base+0x431c>
   1b510:	mov	r3, r5
   1b514:	mov	r6, #1024	; 0x400
   1b518:	b	1b4dc <lchmod@@Base+0x431c>
   1b51c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b520:	mov	r5, r0
   1b524:	mov	r4, r0
   1b528:	ldr	r3, [r0, #4]
   1b52c:	strd	r6, [sp, #8]
   1b530:	ldr	r7, [r5], #8
   1b534:	str	r8, [sp, #16]
   1b538:	str	lr, [sp, #20]
   1b53c:	lsl	r6, r3, #1
   1b540:	cmp	r7, r5
   1b544:	beq	1b588 <lchmod@@Base+0x43c8>
   1b548:	cmp	r3, r6
   1b54c:	bhi	1b5ac <lchmod@@Base+0x43ec>
   1b550:	mov	r0, r7
   1b554:	mov	r1, r6
   1b558:	bl	1c65c <lchmod@@Base+0x549c>
   1b55c:	subs	r8, r0, #0
   1b560:	ldreq	r7, [r4]
   1b564:	beq	1b5b8 <lchmod@@Base+0x43f8>
   1b568:	mov	r0, #1
   1b56c:	str	r8, [r4]
   1b570:	str	r6, [r4, #4]
   1b574:	ldrd	r4, [sp]
   1b578:	ldrd	r6, [sp, #8]
   1b57c:	ldr	r8, [sp, #16]
   1b580:	add	sp, sp, #20
   1b584:	pop	{pc}		; (ldr pc, [sp], #4)
   1b588:	mov	r0, r6
   1b58c:	bl	1c620 <lchmod@@Base+0x5460>
   1b590:	subs	r8, r0, #0
   1b594:	moveq	r0, r8
   1b598:	beq	1b574 <lchmod@@Base+0x43b4>
   1b59c:	mov	r1, r7
   1b5a0:	ldr	r2, [r4, #4]
   1b5a4:	bl	114b4 <memcpy@plt>
   1b5a8:	b	1b568 <lchmod@@Base+0x43a8>
   1b5ac:	bl	11688 <__errno_location@plt>
   1b5b0:	mov	r3, #12
   1b5b4:	str	r3, [r0]
   1b5b8:	mov	r0, r7
   1b5bc:	bl	13204 <__assert_fail@plt+0x19d8>
   1b5c0:	mov	r3, #1024	; 0x400
   1b5c4:	mov	r0, #0
   1b5c8:	str	r5, [r4]
   1b5cc:	str	r3, [r4, #4]
   1b5d0:	b	1b574 <lchmod@@Base+0x43b4>
   1b5d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b5d8:	mov	r5, r1
   1b5dc:	strd	r6, [sp, #8]
   1b5e0:	str	r8, [sp, #16]
   1b5e4:	str	lr, [sp, #20]
   1b5e8:	bl	1164c <getfilecon@plt>
   1b5ec:	subs	r4, r0, #0
   1b5f0:	beq	1b650 <lchmod@@Base+0x4490>
   1b5f4:	cmp	r4, #10
   1b5f8:	beq	1b614 <lchmod@@Base+0x4454>
   1b5fc:	mov	r0, r4
   1b600:	ldrd	r4, [sp]
   1b604:	ldrd	r6, [sp, #8]
   1b608:	ldr	r8, [sp, #16]
   1b60c:	add	sp, sp, #20
   1b610:	pop	{pc}		; (ldr pc, [sp], #4)
   1b614:	ldr	r6, [r5]
   1b618:	movw	r1, #55588	; 0xd924
   1b61c:	movt	r1, #1
   1b620:	mov	r0, r6
   1b624:	bl	11454 <strcmp@plt>
   1b628:	subs	r7, r0, #0
   1b62c:	bne	1b5fc <lchmod@@Base+0x443c>
   1b630:	mov	r0, r6
   1b634:	mvn	r4, #0
   1b638:	bl	11778 <freecon@plt>
   1b63c:	str	r7, [r5]
   1b640:	bl	11688 <__errno_location@plt>
   1b644:	mov	r3, #61	; 0x3d
   1b648:	str	r3, [r0]
   1b64c:	b	1b5fc <lchmod@@Base+0x443c>
   1b650:	bl	11688 <__errno_location@plt>
   1b654:	mov	r3, #95	; 0x5f
   1b658:	mvn	r4, #0
   1b65c:	str	r3, [r0]
   1b660:	b	1b5fc <lchmod@@Base+0x443c>
   1b664:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b668:	mov	r5, r1
   1b66c:	strd	r6, [sp, #8]
   1b670:	str	r8, [sp, #16]
   1b674:	str	lr, [sp, #20]
   1b678:	bl	115c8 <lgetfilecon@plt>
   1b67c:	subs	r4, r0, #0
   1b680:	beq	1b6e0 <lchmod@@Base+0x4520>
   1b684:	cmp	r4, #10
   1b688:	beq	1b6a4 <lchmod@@Base+0x44e4>
   1b68c:	mov	r0, r4
   1b690:	ldrd	r4, [sp]
   1b694:	ldrd	r6, [sp, #8]
   1b698:	ldr	r8, [sp, #16]
   1b69c:	add	sp, sp, #20
   1b6a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6a4:	ldr	r6, [r5]
   1b6a8:	movw	r1, #55588	; 0xd924
   1b6ac:	movt	r1, #1
   1b6b0:	mov	r0, r6
   1b6b4:	bl	11454 <strcmp@plt>
   1b6b8:	subs	r7, r0, #0
   1b6bc:	bne	1b68c <lchmod@@Base+0x44cc>
   1b6c0:	mov	r0, r6
   1b6c4:	mvn	r4, #0
   1b6c8:	bl	11778 <freecon@plt>
   1b6cc:	str	r7, [r5]
   1b6d0:	bl	11688 <__errno_location@plt>
   1b6d4:	mov	r3, #61	; 0x3d
   1b6d8:	str	r3, [r0]
   1b6dc:	b	1b68c <lchmod@@Base+0x44cc>
   1b6e0:	bl	11688 <__errno_location@plt>
   1b6e4:	mov	r3, #95	; 0x5f
   1b6e8:	mvn	r4, #0
   1b6ec:	str	r3, [r0]
   1b6f0:	b	1b68c <lchmod@@Base+0x44cc>
   1b6f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b6f8:	mov	r5, r1
   1b6fc:	strd	r6, [sp, #8]
   1b700:	str	r8, [sp, #16]
   1b704:	str	lr, [sp, #20]
   1b708:	bl	11514 <fgetfilecon@plt>
   1b70c:	subs	r4, r0, #0
   1b710:	beq	1b770 <lchmod@@Base+0x45b0>
   1b714:	cmp	r4, #10
   1b718:	beq	1b734 <lchmod@@Base+0x4574>
   1b71c:	mov	r0, r4
   1b720:	ldrd	r4, [sp]
   1b724:	ldrd	r6, [sp, #8]
   1b728:	ldr	r8, [sp, #16]
   1b72c:	add	sp, sp, #20
   1b730:	pop	{pc}		; (ldr pc, [sp], #4)
   1b734:	ldr	r6, [r5]
   1b738:	movw	r1, #55588	; 0xd924
   1b73c:	movt	r1, #1
   1b740:	mov	r0, r6
   1b744:	bl	11454 <strcmp@plt>
   1b748:	subs	r7, r0, #0
   1b74c:	bne	1b71c <lchmod@@Base+0x455c>
   1b750:	mov	r0, r6
   1b754:	mvn	r4, #0
   1b758:	bl	11778 <freecon@plt>
   1b75c:	str	r7, [r5]
   1b760:	bl	11688 <__errno_location@plt>
   1b764:	mov	r3, #61	; 0x3d
   1b768:	str	r3, [r0]
   1b76c:	b	1b71c <lchmod@@Base+0x455c>
   1b770:	bl	11688 <__errno_location@plt>
   1b774:	mov	r3, #95	; 0x5f
   1b778:	mvn	r4, #0
   1b77c:	str	r3, [r0]
   1b780:	b	1b71c <lchmod@@Base+0x455c>
   1b784:	cmp	r0, #2
   1b788:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b78c:	mov	r4, r0
   1b790:	strd	r6, [sp, #8]
   1b794:	str	r8, [sp, #16]
   1b798:	str	lr, [sp, #20]
   1b79c:	bls	1b7b8 <lchmod@@Base+0x45f8>
   1b7a0:	mov	r0, r4
   1b7a4:	ldrd	r4, [sp]
   1b7a8:	ldrd	r6, [sp, #8]
   1b7ac:	ldr	r8, [sp, #16]
   1b7b0:	add	sp, sp, #20
   1b7b4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7b8:	bl	1ce64 <lchmod@@Base+0x5ca4>
   1b7bc:	mov	r7, r0
   1b7c0:	bl	11688 <__errno_location@plt>
   1b7c4:	mov	r5, r0
   1b7c8:	mov	r0, r4
   1b7cc:	ldr	r6, [r5]
   1b7d0:	mov	r4, r7
   1b7d4:	bl	117e4 <close@plt>
   1b7d8:	str	r6, [r5]
   1b7dc:	b	1b7a0 <lchmod@@Base+0x45e0>
   1b7e0:	cmp	r1, #0
   1b7e4:	strd	r4, [sp, #-16]!
   1b7e8:	mov	ip, r3
   1b7ec:	str	r6, [sp, #8]
   1b7f0:	mov	r4, r0
   1b7f4:	str	lr, [sp, #12]
   1b7f8:	sub	sp, sp, #32
   1b7fc:	ldr	r5, [sp, #48]	; 0x30
   1b800:	ldr	r6, [sp, #52]	; 0x34
   1b804:	beq	1b948 <lchmod@@Base+0x4788>
   1b808:	mov	r3, r1
   1b80c:	mov	r1, #1
   1b810:	stm	sp, {r2, ip}
   1b814:	movw	r2, #55600	; 0xd930
   1b818:	movt	r2, #1
   1b81c:	bl	116d0 <__fprintf_chk@plt>
   1b820:	mov	r2, #5
   1b824:	movw	r1, #55620	; 0xd944
   1b828:	movt	r1, #1
   1b82c:	mov	r0, #0
   1b830:	bl	114f0 <dcgettext@plt>
   1b834:	movw	ip, #2022	; 0x7e6
   1b838:	mov	r3, r0
   1b83c:	mov	r1, #1
   1b840:	movw	r2, #56348	; 0xdc1c
   1b844:	movt	r2, #1
   1b848:	mov	r0, r4
   1b84c:	str	ip, [sp]
   1b850:	bl	116d0 <__fprintf_chk@plt>
   1b854:	mov	r1, r4
   1b858:	mov	r0, #10
   1b85c:	bl	114e4 <fputc_unlocked@plt>
   1b860:	mov	r2, #5
   1b864:	movw	r1, #55624	; 0xd948
   1b868:	movt	r1, #1
   1b86c:	mov	r0, #0
   1b870:	bl	114f0 <dcgettext@plt>
   1b874:	mov	r2, r0
   1b878:	mov	r1, #1
   1b87c:	movw	r3, #55796	; 0xd9f4
   1b880:	movt	r3, #1
   1b884:	mov	r0, r4
   1b888:	bl	116d0 <__fprintf_chk@plt>
   1b88c:	mov	r1, r4
   1b890:	mov	r0, #10
   1b894:	bl	114e4 <fputc_unlocked@plt>
   1b898:	cmp	r6, #9
   1b89c:	ldrls	pc, [pc, r6, lsl #2]
   1b8a0:	b	1bbb4 <lchmod@@Base+0x49f4>
   1b8a4:	andeq	fp, r1, r4, lsr r9
   1b8a8:	andeq	fp, r1, r4, ror #18
   1b8ac:	andeq	fp, r1, r0, lsr #19
   1b8b0:	andeq	fp, r1, r0, ror #19
   1b8b4:	andeq	fp, r1, r8, lsr #20
   1b8b8:	andeq	fp, r1, r0, ror #20
   1b8bc:	andeq	fp, r1, r8, lsr #21
   1b8c0:	strdeq	fp, [r1], -ip
   1b8c4:	andeq	fp, r1, r4, asr fp
   1b8c8:	andeq	fp, r1, ip, asr #17
   1b8cc:	movw	r1, #56100	; 0xdb24
   1b8d0:	movt	r1, #1
   1b8d4:	mov	r2, #5
   1b8d8:	mov	r0, #0
   1b8dc:	bl	114f0 <dcgettext@plt>
   1b8e0:	ldr	lr, [r5, #4]
   1b8e4:	mov	r2, r0
   1b8e8:	mov	r1, #1
   1b8ec:	mov	r0, r4
   1b8f0:	ldr	r3, [r5, #8]
   1b8f4:	ldr	ip, [r5, #32]
   1b8f8:	str	lr, [sp]
   1b8fc:	ldr	lr, [r5, #12]
   1b900:	str	ip, [sp, #28]
   1b904:	ldr	ip, [r5, #28]
   1b908:	str	r3, [sp, #4]
   1b90c:	ldr	r3, [r5, #16]
   1b910:	str	lr, [sp, #8]
   1b914:	ldr	lr, [r5, #20]
   1b918:	str	ip, [sp, #24]
   1b91c:	ldr	ip, [r5, #24]
   1b920:	str	r3, [sp, #12]
   1b924:	ldr	r3, [r5]
   1b928:	str	lr, [sp, #16]
   1b92c:	str	ip, [sp, #20]
   1b930:	bl	116d0 <__fprintf_chk@plt>
   1b934:	add	sp, sp, #32
   1b938:	ldrd	r4, [sp]
   1b93c:	ldr	r6, [sp, #8]
   1b940:	add	sp, sp, #12
   1b944:	pop	{pc}		; (ldr pc, [sp], #4)
   1b948:	mov	r3, r2
   1b94c:	mov	r1, #1
   1b950:	str	ip, [sp]
   1b954:	movw	r2, #55612	; 0xd93c
   1b958:	movt	r2, #1
   1b95c:	bl	116d0 <__fprintf_chk@plt>
   1b960:	b	1b820 <lchmod@@Base+0x4660>
   1b964:	mov	r2, #5
   1b968:	movw	r1, #55832	; 0xda18
   1b96c:	movt	r1, #1
   1b970:	mov	r0, #0
   1b974:	bl	114f0 <dcgettext@plt>
   1b978:	ldr	r3, [r5]
   1b97c:	mov	r2, r0
   1b980:	mov	r1, #1
   1b984:	mov	r0, r4
   1b988:	add	sp, sp, #32
   1b98c:	ldrd	r4, [sp]
   1b990:	ldr	r6, [sp, #8]
   1b994:	ldr	lr, [sp, #12]
   1b998:	add	sp, sp, #16
   1b99c:	b	116d0 <__fprintf_chk@plt>
   1b9a0:	mov	r2, #5
   1b9a4:	movw	r1, #55848	; 0xda28
   1b9a8:	movt	r1, #1
   1b9ac:	mov	r0, #0
   1b9b0:	bl	114f0 <dcgettext@plt>
   1b9b4:	ldm	r5, {r3, ip}
   1b9b8:	mov	r2, r0
   1b9bc:	mov	r1, #1
   1b9c0:	mov	r0, r4
   1b9c4:	str	ip, [sp, #48]	; 0x30
   1b9c8:	add	sp, sp, #32
   1b9cc:	ldrd	r4, [sp]
   1b9d0:	ldr	r6, [sp, #8]
   1b9d4:	ldr	lr, [sp, #12]
   1b9d8:	add	sp, sp, #16
   1b9dc:	b	116d0 <__fprintf_chk@plt>
   1b9e0:	mov	r2, #5
   1b9e4:	movw	r1, #55872	; 0xda40
   1b9e8:	movt	r1, #1
   1b9ec:	mov	r0, #0
   1b9f0:	bl	114f0 <dcgettext@plt>
   1b9f4:	ldm	r5, {r3, lr}
   1b9f8:	mov	r2, r0
   1b9fc:	mov	r1, #1
   1ba00:	mov	r0, r4
   1ba04:	ldr	ip, [r5, #8]
   1ba08:	str	lr, [sp, #48]	; 0x30
   1ba0c:	str	ip, [sp, #52]	; 0x34
   1ba10:	add	sp, sp, #32
   1ba14:	ldrd	r4, [sp]
   1ba18:	ldr	r6, [sp, #8]
   1ba1c:	ldr	lr, [sp, #12]
   1ba20:	add	sp, sp, #16
   1ba24:	b	116d0 <__fprintf_chk@plt>
   1ba28:	mov	r2, #5
   1ba2c:	movw	r1, #55900	; 0xda5c
   1ba30:	movt	r1, #1
   1ba34:	mov	r0, #0
   1ba38:	bl	114f0 <dcgettext@plt>
   1ba3c:	ldmib	r5, {r3, ip, lr}
   1ba40:	mov	r2, r0
   1ba44:	mov	r1, #1
   1ba48:	mov	r0, r4
   1ba4c:	str	r3, [sp]
   1ba50:	ldr	r3, [r5]
   1ba54:	stmib	sp, {ip, lr}
   1ba58:	bl	116d0 <__fprintf_chk@plt>
   1ba5c:	b	1b934 <lchmod@@Base+0x4774>
   1ba60:	mov	r2, #5
   1ba64:	movw	r1, #55932	; 0xda7c
   1ba68:	movt	r1, #1
   1ba6c:	mov	r0, #0
   1ba70:	bl	114f0 <dcgettext@plt>
   1ba74:	ldmib	r5, {ip, lr}
   1ba78:	mov	r2, r0
   1ba7c:	mov	r1, #1
   1ba80:	mov	r0, r4
   1ba84:	ldr	r3, [r5, #16]
   1ba88:	str	ip, [sp]
   1ba8c:	ldr	ip, [r5, #12]
   1ba90:	str	r3, [sp, #12]
   1ba94:	ldr	r3, [r5]
   1ba98:	str	lr, [sp, #4]
   1ba9c:	str	ip, [sp, #8]
   1baa0:	bl	116d0 <__fprintf_chk@plt>
   1baa4:	b	1b934 <lchmod@@Base+0x4774>
   1baa8:	mov	r2, #5
   1baac:	movw	r1, #55968	; 0xdaa0
   1bab0:	movt	r1, #1
   1bab4:	mov	r0, #0
   1bab8:	bl	114f0 <dcgettext@plt>
   1babc:	ldr	lr, [r5, #4]
   1bac0:	mov	r2, r0
   1bac4:	mov	r1, #1
   1bac8:	mov	r0, r4
   1bacc:	ldr	r3, [r5, #8]
   1bad0:	ldr	ip, [r5, #20]
   1bad4:	str	lr, [sp]
   1bad8:	ldr	lr, [r5, #12]
   1badc:	str	ip, [sp, #16]
   1bae0:	ldr	ip, [r5, #16]
   1bae4:	str	r3, [sp, #4]
   1bae8:	ldr	r3, [r5]
   1baec:	str	lr, [sp, #8]
   1baf0:	str	ip, [sp, #12]
   1baf4:	bl	116d0 <__fprintf_chk@plt>
   1baf8:	b	1b934 <lchmod@@Base+0x4774>
   1bafc:	mov	r2, #5
   1bb00:	movw	r1, #56008	; 0xdac8
   1bb04:	movt	r1, #1
   1bb08:	mov	r0, #0
   1bb0c:	bl	114f0 <dcgettext@plt>
   1bb10:	ldmib	r5, {r3, ip}
   1bb14:	mov	r2, r0
   1bb18:	mov	r1, #1
   1bb1c:	mov	r0, r4
   1bb20:	ldr	lr, [r5, #24]
   1bb24:	str	r3, [sp]
   1bb28:	ldr	r3, [r5, #12]
   1bb2c:	str	lr, [sp, #20]
   1bb30:	ldr	lr, [r5, #20]
   1bb34:	str	ip, [sp, #4]
   1bb38:	ldr	ip, [r5, #16]
   1bb3c:	str	r3, [sp, #8]
   1bb40:	ldr	r3, [r5]
   1bb44:	str	ip, [sp, #12]
   1bb48:	str	lr, [sp, #16]
   1bb4c:	bl	116d0 <__fprintf_chk@plt>
   1bb50:	b	1b934 <lchmod@@Base+0x4774>
   1bb54:	mov	r2, #5
   1bb58:	movw	r1, #56052	; 0xdaf4
   1bb5c:	movt	r1, #1
   1bb60:	mov	r0, #0
   1bb64:	bl	114f0 <dcgettext@plt>
   1bb68:	ldmib	r5, {ip, lr}
   1bb6c:	mov	r2, r0
   1bb70:	mov	r1, #1
   1bb74:	mov	r0, r4
   1bb78:	ldr	r3, [r5, #28]
   1bb7c:	str	ip, [sp]
   1bb80:	ldr	ip, [r5, #12]
   1bb84:	str	r3, [sp, #24]
   1bb88:	ldr	r3, [r5, #24]
   1bb8c:	str	lr, [sp, #4]
   1bb90:	ldr	lr, [r5, #16]
   1bb94:	str	ip, [sp, #8]
   1bb98:	ldr	ip, [r5, #20]
   1bb9c:	str	r3, [sp, #20]
   1bba0:	ldr	r3, [r5]
   1bba4:	str	lr, [sp, #12]
   1bba8:	str	ip, [sp, #16]
   1bbac:	bl	116d0 <__fprintf_chk@plt>
   1bbb0:	b	1b934 <lchmod@@Base+0x4774>
   1bbb4:	movw	r1, #56152	; 0xdb58
   1bbb8:	movt	r1, #1
   1bbbc:	b	1b8d4 <lchmod@@Base+0x4714>
   1bbc0:	strd	r4, [sp, #-12]!
   1bbc4:	str	lr, [sp, #8]
   1bbc8:	sub	sp, sp, #12
   1bbcc:	ldr	r5, [sp, #24]
   1bbd0:	ldr	ip, [r5]
   1bbd4:	cmp	ip, #0
   1bbd8:	beq	1bbf4 <lchmod@@Base+0x4a34>
   1bbdc:	mov	lr, r5
   1bbe0:	mov	ip, #0
   1bbe4:	ldr	r4, [lr, #4]!
   1bbe8:	add	ip, ip, #1
   1bbec:	cmp	r4, #0
   1bbf0:	bne	1bbe4 <lchmod@@Base+0x4a24>
   1bbf4:	stm	sp, {r5, ip}
   1bbf8:	bl	1b7e0 <lchmod@@Base+0x4620>
   1bbfc:	add	sp, sp, #12
   1bc00:	ldrd	r4, [sp]
   1bc04:	add	sp, sp, #8
   1bc08:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc0c:	push	{lr}		; (str lr, [sp, #-4]!)
   1bc10:	sub	sp, sp, #52	; 0x34
   1bc14:	ldr	ip, [sp, #56]	; 0x38
   1bc18:	ldr	lr, [ip]
   1bc1c:	cmp	lr, #0
   1bc20:	str	lr, [sp, #8]
   1bc24:	beq	1bcbc <lchmod@@Base+0x4afc>
   1bc28:	ldr	lr, [ip, #4]
   1bc2c:	cmp	lr, #0
   1bc30:	str	lr, [sp, #12]
   1bc34:	beq	1bcd0 <lchmod@@Base+0x4b10>
   1bc38:	ldr	lr, [ip, #8]
   1bc3c:	cmp	lr, #0
   1bc40:	str	lr, [sp, #16]
   1bc44:	beq	1bcd8 <lchmod@@Base+0x4b18>
   1bc48:	ldr	lr, [ip, #12]
   1bc4c:	cmp	lr, #0
   1bc50:	str	lr, [sp, #20]
   1bc54:	beq	1bce0 <lchmod@@Base+0x4b20>
   1bc58:	ldr	lr, [ip, #16]
   1bc5c:	cmp	lr, #0
   1bc60:	str	lr, [sp, #24]
   1bc64:	beq	1bce8 <lchmod@@Base+0x4b28>
   1bc68:	ldr	lr, [ip, #20]
   1bc6c:	cmp	lr, #0
   1bc70:	str	lr, [sp, #28]
   1bc74:	beq	1bcf0 <lchmod@@Base+0x4b30>
   1bc78:	ldr	lr, [ip, #24]
   1bc7c:	cmp	lr, #0
   1bc80:	str	lr, [sp, #32]
   1bc84:	beq	1bcf8 <lchmod@@Base+0x4b38>
   1bc88:	ldr	lr, [ip, #28]
   1bc8c:	cmp	lr, #0
   1bc90:	str	lr, [sp, #36]	; 0x24
   1bc94:	beq	1bd00 <lchmod@@Base+0x4b40>
   1bc98:	ldr	lr, [ip, #32]
   1bc9c:	cmp	lr, #0
   1bca0:	str	lr, [sp, #40]	; 0x28
   1bca4:	beq	1bd08 <lchmod@@Base+0x4b48>
   1bca8:	ldr	ip, [ip, #36]	; 0x24
   1bcac:	cmp	ip, #0
   1bcb0:	str	ip, [sp, #44]	; 0x2c
   1bcb4:	movne	lr, #10
   1bcb8:	moveq	lr, #9
   1bcbc:	add	ip, sp, #8
   1bcc0:	stm	sp, {ip, lr}
   1bcc4:	bl	1b7e0 <lchmod@@Base+0x4620>
   1bcc8:	add	sp, sp, #52	; 0x34
   1bccc:	pop	{pc}		; (ldr pc, [sp], #4)
   1bcd0:	mov	lr, #1
   1bcd4:	b	1bcbc <lchmod@@Base+0x4afc>
   1bcd8:	mov	lr, #2
   1bcdc:	b	1bcbc <lchmod@@Base+0x4afc>
   1bce0:	mov	lr, #3
   1bce4:	b	1bcbc <lchmod@@Base+0x4afc>
   1bce8:	mov	lr, #4
   1bcec:	b	1bcbc <lchmod@@Base+0x4afc>
   1bcf0:	mov	lr, #5
   1bcf4:	b	1bcbc <lchmod@@Base+0x4afc>
   1bcf8:	mov	lr, #6
   1bcfc:	b	1bcbc <lchmod@@Base+0x4afc>
   1bd00:	mov	lr, #7
   1bd04:	b	1bcbc <lchmod@@Base+0x4afc>
   1bd08:	mov	lr, #8
   1bd0c:	b	1bcbc <lchmod@@Base+0x4afc>
   1bd10:	push	{r3}		; (str r3, [sp, #-4]!)
   1bd14:	push	{lr}		; (str lr, [sp, #-4]!)
   1bd18:	sub	sp, sp, #56	; 0x38
   1bd1c:	ldr	ip, [sp, #64]	; 0x40
   1bd20:	add	r3, sp, #64	; 0x40
   1bd24:	str	r3, [sp, #12]
   1bd28:	cmp	ip, #0
   1bd2c:	str	ip, [sp, #16]
   1bd30:	beq	1bdc8 <lchmod@@Base+0x4c08>
   1bd34:	ldr	ip, [sp, #68]	; 0x44
   1bd38:	cmp	ip, #0
   1bd3c:	str	ip, [sp, #20]
   1bd40:	beq	1bdec <lchmod@@Base+0x4c2c>
   1bd44:	ldr	ip, [sp, #72]	; 0x48
   1bd48:	cmp	ip, #0
   1bd4c:	str	ip, [sp, #24]
   1bd50:	beq	1bdf4 <lchmod@@Base+0x4c34>
   1bd54:	ldr	ip, [sp, #76]	; 0x4c
   1bd58:	cmp	ip, #0
   1bd5c:	str	ip, [sp, #28]
   1bd60:	beq	1bdfc <lchmod@@Base+0x4c3c>
   1bd64:	ldr	ip, [sp, #80]	; 0x50
   1bd68:	cmp	ip, #0
   1bd6c:	str	ip, [sp, #32]
   1bd70:	beq	1be04 <lchmod@@Base+0x4c44>
   1bd74:	ldr	ip, [sp, #84]	; 0x54
   1bd78:	cmp	ip, #0
   1bd7c:	str	ip, [sp, #36]	; 0x24
   1bd80:	beq	1be0c <lchmod@@Base+0x4c4c>
   1bd84:	ldr	ip, [sp, #88]	; 0x58
   1bd88:	cmp	ip, #0
   1bd8c:	str	ip, [sp, #40]	; 0x28
   1bd90:	beq	1be14 <lchmod@@Base+0x4c54>
   1bd94:	ldr	ip, [sp, #92]	; 0x5c
   1bd98:	cmp	ip, #0
   1bd9c:	str	ip, [sp, #44]	; 0x2c
   1bda0:	beq	1be1c <lchmod@@Base+0x4c5c>
   1bda4:	ldr	ip, [sp, #96]	; 0x60
   1bda8:	cmp	ip, #0
   1bdac:	str	ip, [sp, #48]	; 0x30
   1bdb0:	beq	1be24 <lchmod@@Base+0x4c64>
   1bdb4:	ldr	r3, [sp, #100]	; 0x64
   1bdb8:	cmp	r3, #0
   1bdbc:	str	r3, [sp, #52]	; 0x34
   1bdc0:	movne	ip, #10
   1bdc4:	moveq	ip, #9
   1bdc8:	ldr	r3, [sp, #60]	; 0x3c
   1bdcc:	add	lr, sp, #16
   1bdd0:	str	lr, [sp]
   1bdd4:	str	ip, [sp, #4]
   1bdd8:	bl	1b7e0 <lchmod@@Base+0x4620>
   1bddc:	add	sp, sp, #56	; 0x38
   1bde0:	pop	{lr}		; (ldr lr, [sp], #4)
   1bde4:	add	sp, sp, #4
   1bde8:	bx	lr
   1bdec:	mov	ip, #1
   1bdf0:	b	1bdc8 <lchmod@@Base+0x4c08>
   1bdf4:	mov	ip, #2
   1bdf8:	b	1bdc8 <lchmod@@Base+0x4c08>
   1bdfc:	mov	ip, #3
   1be00:	b	1bdc8 <lchmod@@Base+0x4c08>
   1be04:	mov	ip, #4
   1be08:	b	1bdc8 <lchmod@@Base+0x4c08>
   1be0c:	mov	ip, #5
   1be10:	b	1bdc8 <lchmod@@Base+0x4c08>
   1be14:	mov	ip, #6
   1be18:	b	1bdc8 <lchmod@@Base+0x4c08>
   1be1c:	mov	ip, #7
   1be20:	b	1bdc8 <lchmod@@Base+0x4c08>
   1be24:	mov	ip, #8
   1be28:	b	1bdc8 <lchmod@@Base+0x4c08>
   1be2c:	movw	r3, #57820	; 0xe1dc
   1be30:	movt	r3, #2
   1be34:	str	r4, [sp, #-8]!
   1be38:	mov	r0, #10
   1be3c:	ldr	r1, [r3]
   1be40:	str	lr, [sp, #4]
   1be44:	bl	114e4 <fputc_unlocked@plt>
   1be48:	mov	r2, #5
   1be4c:	movw	r1, #56212	; 0xdb94
   1be50:	movt	r1, #1
   1be54:	mov	r0, #0
   1be58:	bl	114f0 <dcgettext@plt>
   1be5c:	mov	r1, r0
   1be60:	movw	r2, #56232	; 0xdba8
   1be64:	movt	r2, #1
   1be68:	mov	r0, #1
   1be6c:	bl	116b8 <__printf_chk@plt>
   1be70:	mov	r2, #5
   1be74:	movw	r1, #56256	; 0xdbc0
   1be78:	movt	r1, #1
   1be7c:	mov	r0, #0
   1be80:	bl	114f0 <dcgettext@plt>
   1be84:	mov	r1, r0
   1be88:	movw	r3, #54396	; 0xd47c
   1be8c:	movt	r3, #1
   1be90:	movw	r2, #54436	; 0xd4a4
   1be94:	movt	r2, #1
   1be98:	mov	r0, #1
   1be9c:	bl	116b8 <__printf_chk@plt>
   1bea0:	mov	r2, #5
   1bea4:	movw	r1, #56276	; 0xdbd4
   1bea8:	movt	r1, #1
   1beac:	mov	r0, #0
   1beb0:	bl	114f0 <dcgettext@plt>
   1beb4:	mov	r1, r0
   1beb8:	movw	r2, #56316	; 0xdbfc
   1bebc:	movt	r2, #1
   1bec0:	mov	r0, #1
   1bec4:	ldr	r4, [sp]
   1bec8:	ldr	lr, [sp, #4]
   1becc:	add	sp, sp, #8
   1bed0:	b	116b8 <__printf_chk@plt>
   1bed4:	strd	r4, [sp, #-16]!
   1bed8:	mov	r4, r0
   1bedc:	mov	r5, r2
   1bee0:	str	r6, [sp, #8]
   1bee4:	mov	r6, r1
   1bee8:	str	lr, [sp, #12]
   1beec:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1bef0:	cmp	r0, #0
   1bef4:	beq	1bf08 <lchmod@@Base+0x4d48>
   1bef8:	ldrd	r4, [sp]
   1befc:	ldr	r6, [sp, #8]
   1bf00:	add	sp, sp, #12
   1bf04:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf08:	cmp	r4, #0
   1bf0c:	beq	1bf1c <lchmod@@Base+0x4d5c>
   1bf10:	cmp	r6, #0
   1bf14:	cmpne	r5, #0
   1bf18:	beq	1bef8 <lchmod@@Base+0x4d38>
   1bf1c:	bl	1c4d8 <lchmod@@Base+0x5318>
   1bf20:	str	r4, [sp, #-8]!
   1bf24:	str	lr, [sp, #4]
   1bf28:	bl	1c620 <lchmod@@Base+0x5460>
   1bf2c:	cmp	r0, #0
   1bf30:	beq	1bf40 <lchmod@@Base+0x4d80>
   1bf34:	ldr	r4, [sp]
   1bf38:	add	sp, sp, #4
   1bf3c:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf40:	bl	1c4d8 <lchmod@@Base+0x5318>
   1bf44:	str	r4, [sp, #-8]!
   1bf48:	str	lr, [sp, #4]
   1bf4c:	bl	1c620 <lchmod@@Base+0x5460>
   1bf50:	cmp	r0, #0
   1bf54:	beq	1bf64 <lchmod@@Base+0x4da4>
   1bf58:	ldr	r4, [sp]
   1bf5c:	add	sp, sp, #4
   1bf60:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf64:	bl	1c4d8 <lchmod@@Base+0x5318>
   1bf68:	str	r4, [sp, #-8]!
   1bf6c:	str	lr, [sp, #4]
   1bf70:	bl	1c620 <lchmod@@Base+0x5460>
   1bf74:	cmp	r0, #0
   1bf78:	beq	1bf88 <lchmod@@Base+0x4dc8>
   1bf7c:	ldr	r4, [sp]
   1bf80:	add	sp, sp, #4
   1bf84:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf88:	bl	1c4d8 <lchmod@@Base+0x5318>
   1bf8c:	strd	r4, [sp, #-16]!
   1bf90:	mov	r5, r0
   1bf94:	mov	r4, r1
   1bf98:	str	r6, [sp, #8]
   1bf9c:	str	lr, [sp, #12]
   1bfa0:	bl	1c65c <lchmod@@Base+0x549c>
   1bfa4:	cmp	r0, #0
   1bfa8:	beq	1bfbc <lchmod@@Base+0x4dfc>
   1bfac:	ldrd	r4, [sp]
   1bfb0:	ldr	r6, [sp, #8]
   1bfb4:	add	sp, sp, #12
   1bfb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bfbc:	adds	r4, r4, #0
   1bfc0:	movne	r4, #1
   1bfc4:	cmp	r5, #0
   1bfc8:	moveq	r4, #1
   1bfcc:	cmp	r4, #0
   1bfd0:	beq	1bfac <lchmod@@Base+0x4dec>
   1bfd4:	bl	1c4d8 <lchmod@@Base+0x5318>
   1bfd8:	cmp	r1, #0
   1bfdc:	orreq	r1, r1, #1
   1bfe0:	str	r4, [sp, #-8]!
   1bfe4:	str	lr, [sp, #4]
   1bfe8:	bl	1c65c <lchmod@@Base+0x549c>
   1bfec:	cmp	r0, #0
   1bff0:	beq	1c000 <lchmod@@Base+0x4e40>
   1bff4:	ldr	r4, [sp]
   1bff8:	add	sp, sp, #4
   1bffc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c000:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c004:	strd	r4, [sp, #-16]!
   1c008:	mov	r4, r0
   1c00c:	mov	r5, r2
   1c010:	str	r6, [sp, #8]
   1c014:	mov	r6, r1
   1c018:	str	lr, [sp, #12]
   1c01c:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1c020:	cmp	r0, #0
   1c024:	beq	1c038 <lchmod@@Base+0x4e78>
   1c028:	ldrd	r4, [sp]
   1c02c:	ldr	r6, [sp, #8]
   1c030:	add	sp, sp, #12
   1c034:	pop	{pc}		; (ldr pc, [sp], #4)
   1c038:	cmp	r4, #0
   1c03c:	beq	1c04c <lchmod@@Base+0x4e8c>
   1c040:	cmp	r6, #0
   1c044:	cmpne	r5, #0
   1c048:	beq	1c028 <lchmod@@Base+0x4e68>
   1c04c:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c050:	cmp	r2, #0
   1c054:	cmpne	r1, #0
   1c058:	str	r4, [sp, #-8]!
   1c05c:	moveq	r2, #1
   1c060:	str	lr, [sp, #4]
   1c064:	moveq	r1, r2
   1c068:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1c06c:	cmp	r0, #0
   1c070:	beq	1c080 <lchmod@@Base+0x4ec0>
   1c074:	ldr	r4, [sp]
   1c078:	add	sp, sp, #4
   1c07c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c080:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c084:	mov	r2, r1
   1c088:	mov	r1, r0
   1c08c:	str	r4, [sp, #-8]!
   1c090:	mov	r0, #0
   1c094:	str	lr, [sp, #4]
   1c098:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1c09c:	cmp	r0, #0
   1c0a0:	beq	1c0b0 <lchmod@@Base+0x4ef0>
   1c0a4:	ldr	r4, [sp]
   1c0a8:	add	sp, sp, #4
   1c0ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0b0:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c0b4:	cmp	r1, #0
   1c0b8:	cmpne	r0, #0
   1c0bc:	str	r4, [sp, #-8]!
   1c0c0:	moveq	r2, #1
   1c0c4:	movne	r2, r1
   1c0c8:	str	lr, [sp, #4]
   1c0cc:	movne	r1, r0
   1c0d0:	moveq	r1, r2
   1c0d4:	mov	r0, #0
   1c0d8:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1c0dc:	cmp	r0, #0
   1c0e0:	beq	1c0f0 <lchmod@@Base+0x4f30>
   1c0e4:	ldr	r4, [sp]
   1c0e8:	add	sp, sp, #4
   1c0ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0f0:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c0f4:	cmp	r0, #0
   1c0f8:	strd	r4, [sp, #-16]!
   1c0fc:	mov	r5, r1
   1c100:	ldr	r4, [r1]
   1c104:	str	r6, [sp, #8]
   1c108:	str	lr, [sp, #12]
   1c10c:	beq	1c154 <lchmod@@Base+0x4f94>
   1c110:	lsr	r3, r4, #1
   1c114:	add	r3, r3, #1
   1c118:	adds	r4, r4, r3
   1c11c:	bcs	1c150 <lchmod@@Base+0x4f90>
   1c120:	mov	r2, #1
   1c124:	mov	r1, r4
   1c128:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1c12c:	cmp	r0, #0
   1c130:	beq	1c148 <lchmod@@Base+0x4f88>
   1c134:	ldr	r6, [sp, #8]
   1c138:	str	r4, [r5]
   1c13c:	ldrd	r4, [sp]
   1c140:	add	sp, sp, #12
   1c144:	pop	{pc}		; (ldr pc, [sp], #4)
   1c148:	cmp	r4, #0
   1c14c:	beq	1c134 <lchmod@@Base+0x4f74>
   1c150:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c154:	cmp	r4, #0
   1c158:	mov	r2, #1
   1c15c:	moveq	r4, #64	; 0x40
   1c160:	mov	r1, r4
   1c164:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1c168:	cmp	r0, #0
   1c16c:	bne	1c134 <lchmod@@Base+0x4f74>
   1c170:	b	1c150 <lchmod@@Base+0x4f90>
   1c174:	cmp	r0, #0
   1c178:	strd	r4, [sp, #-16]!
   1c17c:	mov	r5, r1
   1c180:	ldr	r4, [r1]
   1c184:	str	r6, [sp, #8]
   1c188:	mov	r6, r2
   1c18c:	str	lr, [sp, #12]
   1c190:	beq	1c1d8 <lchmod@@Base+0x5018>
   1c194:	lsr	r3, r4, #1
   1c198:	add	r3, r3, #1
   1c19c:	adds	r4, r4, r3
   1c1a0:	bcs	1c1d4 <lchmod@@Base+0x5014>
   1c1a4:	mov	r1, r4
   1c1a8:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1c1ac:	cmp	r0, #0
   1c1b0:	beq	1c1c8 <lchmod@@Base+0x5008>
   1c1b4:	ldr	r6, [sp, #8]
   1c1b8:	str	r4, [r5]
   1c1bc:	ldrd	r4, [sp]
   1c1c0:	add	sp, sp, #12
   1c1c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c1c8:	cmp	r4, #0
   1c1cc:	cmpne	r6, #0
   1c1d0:	beq	1c1b4 <lchmod@@Base+0x4ff4>
   1c1d4:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c1d8:	cmp	r4, #0
   1c1dc:	bne	1c1f0 <lchmod@@Base+0x5030>
   1c1e0:	mov	r4, #64	; 0x40
   1c1e4:	udiv	r4, r4, r2
   1c1e8:	cmp	r2, #64	; 0x40
   1c1ec:	addhi	r4, r4, #1
   1c1f0:	mov	r2, r6
   1c1f4:	mov	r1, r4
   1c1f8:	mov	r0, #0
   1c1fc:	bl	1ce2c <lchmod@@Base+0x5c6c>
   1c200:	cmp	r0, #0
   1c204:	bne	1c1b4 <lchmod@@Base+0x4ff4>
   1c208:	b	1c1d4 <lchmod@@Base+0x5014>
   1c20c:	ldr	ip, [r1]
   1c210:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1c214:	strd	r6, [sp, #8]
   1c218:	mov	r7, r1
   1c21c:	mov	r6, r0
   1c220:	str	r8, [sp, #16]
   1c224:	mvn	r8, r3
   1c228:	lsr	r8, r8, #31
   1c22c:	str	lr, [sp, #20]
   1c230:	asr	r1, ip, #1
   1c234:	ldr	lr, [sp, #24]
   1c238:	adds	r4, ip, r1
   1c23c:	mvnvs	r4, #-2147483648	; 0x80000000
   1c240:	cmp	r3, r4
   1c244:	movge	r1, #0
   1c248:	andlt	r1, r8, #1
   1c24c:	cmp	r1, #0
   1c250:	movne	r4, r3
   1c254:	smull	r0, r1, r4, lr
   1c258:	cmp	r1, r0, asr #31
   1c25c:	bne	1c30c <lchmod@@Base+0x514c>
   1c260:	cmp	r0, #63	; 0x3f
   1c264:	mov	r5, r0
   1c268:	ble	1c2d8 <lchmod@@Base+0x5118>
   1c26c:	cmp	r6, #0
   1c270:	sub	r1, r4, ip
   1c274:	streq	r6, [r7]
   1c278:	cmp	r1, r2
   1c27c:	bge	1c2ac <lchmod@@Base+0x50ec>
   1c280:	adds	r4, ip, r2
   1c284:	bvs	1c308 <lchmod@@Base+0x5148>
   1c288:	cmp	r4, r3
   1c28c:	movle	r3, #0
   1c290:	andgt	r3, r8, #1
   1c294:	cmp	r3, #0
   1c298:	bne	1c308 <lchmod@@Base+0x5148>
   1c29c:	smull	r0, r1, r4, lr
   1c2a0:	cmp	r1, r0, asr #31
   1c2a4:	mov	r5, r0
   1c2a8:	bne	1c308 <lchmod@@Base+0x5148>
   1c2ac:	mov	r1, r5
   1c2b0:	mov	r0, r6
   1c2b4:	bl	1c65c <lchmod@@Base+0x549c>
   1c2b8:	cmp	r0, #0
   1c2bc:	beq	1c2ec <lchmod@@Base+0x512c>
   1c2c0:	ldr	r8, [sp, #16]
   1c2c4:	str	r4, [r7]
   1c2c8:	ldrd	r4, [sp]
   1c2cc:	ldrd	r6, [sp, #8]
   1c2d0:	add	sp, sp, #20
   1c2d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2d8:	mov	r0, #64	; 0x40
   1c2dc:	sdiv	r4, r0, lr
   1c2e0:	mls	r5, lr, r4, r0
   1c2e4:	sub	r5, r0, r5
   1c2e8:	b	1c26c <lchmod@@Base+0x50ac>
   1c2ec:	adds	r5, r5, #0
   1c2f0:	movne	r5, #1
   1c2f4:	cmp	r6, #0
   1c2f8:	movne	r6, r5
   1c2fc:	moveq	r6, #1
   1c300:	cmp	r6, #0
   1c304:	beq	1c2c0 <lchmod@@Base+0x5100>
   1c308:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c30c:	mvn	r0, #-2147483648	; 0x80000000
   1c310:	b	1c2dc <lchmod@@Base+0x511c>
   1c314:	mov	r1, #1
   1c318:	str	r4, [sp, #-8]!
   1c31c:	str	lr, [sp, #4]
   1c320:	bl	1c5ac <lchmod@@Base+0x53ec>
   1c324:	cmp	r0, #0
   1c328:	beq	1c338 <lchmod@@Base+0x5178>
   1c32c:	ldr	r4, [sp]
   1c330:	add	sp, sp, #4
   1c334:	pop	{pc}		; (ldr pc, [sp], #4)
   1c338:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c33c:	mov	r1, #1
   1c340:	str	r4, [sp, #-8]!
   1c344:	str	lr, [sp, #4]
   1c348:	bl	1c5ac <lchmod@@Base+0x53ec>
   1c34c:	cmp	r0, #0
   1c350:	beq	1c360 <lchmod@@Base+0x51a0>
   1c354:	ldr	r4, [sp]
   1c358:	add	sp, sp, #4
   1c35c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c360:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c364:	str	r4, [sp, #-8]!
   1c368:	str	lr, [sp, #4]
   1c36c:	bl	1c5ac <lchmod@@Base+0x53ec>
   1c370:	cmp	r0, #0
   1c374:	beq	1c384 <lchmod@@Base+0x51c4>
   1c378:	ldr	r4, [sp]
   1c37c:	add	sp, sp, #4
   1c380:	pop	{pc}		; (ldr pc, [sp], #4)
   1c384:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c388:	str	r4, [sp, #-8]!
   1c38c:	str	lr, [sp, #4]
   1c390:	bl	1c5ac <lchmod@@Base+0x53ec>
   1c394:	cmp	r0, #0
   1c398:	beq	1c3a8 <lchmod@@Base+0x51e8>
   1c39c:	ldr	r4, [sp]
   1c3a0:	add	sp, sp, #4
   1c3a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3a8:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c3ac:	strd	r4, [sp, #-16]!
   1c3b0:	mov	r4, r1
   1c3b4:	str	r6, [sp, #8]
   1c3b8:	mov	r6, r0
   1c3bc:	mov	r0, r1
   1c3c0:	str	lr, [sp, #12]
   1c3c4:	bl	1c620 <lchmod@@Base+0x5460>
   1c3c8:	subs	r5, r0, #0
   1c3cc:	beq	1c3f0 <lchmod@@Base+0x5230>
   1c3d0:	mov	r2, r4
   1c3d4:	mov	r1, r6
   1c3d8:	bl	114b4 <memcpy@plt>
   1c3dc:	mov	r0, r5
   1c3e0:	ldrd	r4, [sp]
   1c3e4:	ldr	r6, [sp, #8]
   1c3e8:	add	sp, sp, #12
   1c3ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3f0:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c3f4:	strd	r4, [sp, #-16]!
   1c3f8:	mov	r4, r1
   1c3fc:	str	r6, [sp, #8]
   1c400:	mov	r6, r0
   1c404:	mov	r0, r1
   1c408:	str	lr, [sp, #12]
   1c40c:	bl	1c620 <lchmod@@Base+0x5460>
   1c410:	subs	r5, r0, #0
   1c414:	beq	1c438 <lchmod@@Base+0x5278>
   1c418:	mov	r2, r4
   1c41c:	mov	r1, r6
   1c420:	bl	114b4 <memcpy@plt>
   1c424:	mov	r0, r5
   1c428:	ldrd	r4, [sp]
   1c42c:	ldr	r6, [sp, #8]
   1c430:	add	sp, sp, #12
   1c434:	pop	{pc}		; (ldr pc, [sp], #4)
   1c438:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c43c:	strd	r4, [sp, #-16]!
   1c440:	mov	r4, r1
   1c444:	str	r6, [sp, #8]
   1c448:	mov	r6, r0
   1c44c:	add	r0, r1, #1
   1c450:	str	lr, [sp, #12]
   1c454:	bl	1c620 <lchmod@@Base+0x5460>
   1c458:	subs	r5, r0, #0
   1c45c:	beq	1c488 <lchmod@@Base+0x52c8>
   1c460:	mov	r3, #0
   1c464:	mov	r1, r6
   1c468:	mov	r2, r4
   1c46c:	strb	r3, [r5, r4]
   1c470:	bl	114b4 <memcpy@plt>
   1c474:	mov	r0, r5
   1c478:	ldrd	r4, [sp]
   1c47c:	ldr	r6, [sp, #8]
   1c480:	add	sp, sp, #12
   1c484:	pop	{pc}		; (ldr pc, [sp], #4)
   1c488:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c48c:	strd	r4, [sp, #-16]!
   1c490:	str	r6, [sp, #8]
   1c494:	mov	r6, r0
   1c498:	str	lr, [sp, #12]
   1c49c:	bl	11658 <strlen@plt>
   1c4a0:	add	r4, r0, #1
   1c4a4:	mov	r0, r4
   1c4a8:	bl	1c620 <lchmod@@Base+0x5460>
   1c4ac:	subs	r5, r0, #0
   1c4b0:	beq	1c4d4 <lchmod@@Base+0x5314>
   1c4b4:	mov	r2, r4
   1c4b8:	mov	r1, r6
   1c4bc:	bl	114b4 <memcpy@plt>
   1c4c0:	mov	r0, r5
   1c4c4:	ldrd	r4, [sp]
   1c4c8:	ldr	r6, [sp, #8]
   1c4cc:	add	sp, sp, #12
   1c4d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c4d4:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c4d8:	movw	r3, #57728	; 0xe180
   1c4dc:	movt	r3, #2
   1c4e0:	str	r4, [sp, #-8]!
   1c4e4:	ldr	r4, [r3]
   1c4e8:	mov	r2, #5
   1c4ec:	movw	r1, #56396	; 0xdc4c
   1c4f0:	movt	r1, #1
   1c4f4:	mov	r0, #0
   1c4f8:	str	lr, [sp, #4]
   1c4fc:	bl	114f0 <dcgettext@plt>
   1c500:	mov	r3, r0
   1c504:	movw	r2, #55104	; 0xd740
   1c508:	movt	r2, #1
   1c50c:	mov	r1, #0
   1c510:	mov	r0, r4
   1c514:	bl	115b0 <error@plt>
   1c518:	bl	117d8 <abort@plt>
   1c51c:	orr	r1, r1, #512	; 0x200
   1c520:	str	r4, [sp, #-8]!
   1c524:	str	lr, [sp, #4]
   1c528:	bl	14744 <__assert_fail@plt+0x2f18>
   1c52c:	cmp	r0, #0
   1c530:	beq	1c540 <lchmod@@Base+0x5380>
   1c534:	ldr	r4, [sp]
   1c538:	add	sp, sp, #4
   1c53c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c540:	bl	11688 <__errno_location@plt>
   1c544:	ldr	r3, [r0]
   1c548:	cmp	r3, #22
   1c54c:	beq	1c554 <lchmod@@Base+0x5394>
   1c550:	bl	1c4d8 <lchmod@@Base+0x5318>
   1c554:	movw	r3, #56416	; 0xdc60
   1c558:	movt	r3, #1
   1c55c:	movw	r1, #56428	; 0xdc6c
   1c560:	movt	r1, #1
   1c564:	movw	r0, #56440	; 0xdc78
   1c568:	movt	r0, #1
   1c56c:	mov	r2, #41	; 0x29
   1c570:	bl	1182c <__assert_fail@plt>
   1c574:	ldr	r3, [r0, #48]	; 0x30
   1c578:	and	r3, r3, #17
   1c57c:	cmp	r3, #16
   1c580:	beq	1c5a4 <lchmod@@Base+0x53e4>
   1c584:	cmp	r3, #17
   1c588:	beq	1c594 <lchmod@@Base+0x53d4>
   1c58c:	mov	r0, #0
   1c590:	bx	lr
   1c594:	ldr	r0, [r1, #48]	; 0x30
   1c598:	adds	r0, r0, #0
   1c59c:	movne	r0, #1
   1c5a0:	bx	lr
   1c5a4:	mov	r0, #1
   1c5a8:	bx	lr
   1c5ac:	cmp	r1, #0
   1c5b0:	cmpne	r0, #0
   1c5b4:	beq	1c600 <lchmod@@Base+0x5440>
   1c5b8:	strd	r4, [sp, #-16]!
   1c5bc:	umull	r4, r5, r0, r1
   1c5c0:	str	r6, [sp, #8]
   1c5c4:	str	lr, [sp, #12]
   1c5c8:	adds	r3, r5, #0
   1c5cc:	movne	r3, #1
   1c5d0:	cmp	r4, #0
   1c5d4:	blt	1c5e0 <lchmod@@Base+0x5420>
   1c5d8:	cmp	r3, #0
   1c5dc:	beq	1c60c <lchmod@@Base+0x544c>
   1c5e0:	bl	11688 <__errno_location@plt>
   1c5e4:	mov	r3, #12
   1c5e8:	ldrd	r4, [sp]
   1c5ec:	ldr	r6, [sp, #8]
   1c5f0:	add	sp, sp, #12
   1c5f4:	str	r3, [r0]
   1c5f8:	mov	r0, #0
   1c5fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c600:	mov	r1, #1
   1c604:	mov	r0, r1
   1c608:	b	11424 <calloc@plt>
   1c60c:	ldrd	r4, [sp]
   1c610:	ldr	r6, [sp, #8]
   1c614:	ldr	lr, [sp, #12]
   1c618:	add	sp, sp, #16
   1c61c:	b	11424 <calloc@plt>
   1c620:	cmp	r0, #0
   1c624:	beq	1c630 <lchmod@@Base+0x5470>
   1c628:	blt	1c638 <lchmod@@Base+0x5478>
   1c62c:	b	115d4 <malloc@plt>
   1c630:	mov	r0, #1
   1c634:	b	115d4 <malloc@plt>
   1c638:	str	r4, [sp, #-8]!
   1c63c:	str	lr, [sp, #4]
   1c640:	bl	11688 <__errno_location@plt>
   1c644:	mov	r3, #12
   1c648:	ldr	r4, [sp]
   1c64c:	add	sp, sp, #4
   1c650:	str	r3, [r0]
   1c654:	mov	r0, #0
   1c658:	pop	{pc}		; (ldr pc, [sp], #4)
   1c65c:	cmp	r0, #0
   1c660:	beq	1c688 <lchmod@@Base+0x54c8>
   1c664:	cmp	r1, #0
   1c668:	str	r4, [sp, #-8]!
   1c66c:	str	lr, [sp, #4]
   1c670:	beq	1c690 <lchmod@@Base+0x54d0>
   1c674:	blt	1c6a4 <lchmod@@Base+0x54e4>
   1c678:	ldr	r4, [sp]
   1c67c:	ldr	lr, [sp, #4]
   1c680:	add	sp, sp, #8
   1c684:	b	11508 <realloc@plt>
   1c688:	mov	r0, r1
   1c68c:	b	1c620 <lchmod@@Base+0x5460>
   1c690:	bl	13204 <__assert_fail@plt+0x19d8>
   1c694:	ldr	r4, [sp]
   1c698:	add	sp, sp, #4
   1c69c:	mov	r0, #0
   1c6a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c6a4:	bl	11688 <__errno_location@plt>
   1c6a8:	mov	r3, #12
   1c6ac:	str	r3, [r0]
   1c6b0:	b	1c694 <lchmod@@Base+0x54d4>
   1c6b4:	ldrb	r3, [r0]
   1c6b8:	cmp	r3, #47	; 0x2f
   1c6bc:	bne	1c6cc <lchmod@@Base+0x550c>
   1c6c0:	ldrb	r3, [r0, #1]!
   1c6c4:	cmp	r3, #47	; 0x2f
   1c6c8:	beq	1c6c0 <lchmod@@Base+0x5500>
   1c6cc:	cmp	r3, #0
   1c6d0:	beq	1c700 <lchmod@@Base+0x5540>
   1c6d4:	mov	r2, r0
   1c6d8:	mov	r1, #0
   1c6dc:	cmp	r3, #47	; 0x2f
   1c6e0:	moveq	r1, #1
   1c6e4:	beq	1c6f4 <lchmod@@Base+0x5534>
   1c6e8:	cmp	r1, #0
   1c6ec:	movne	r0, r2
   1c6f0:	movne	r1, #0
   1c6f4:	ldrb	r3, [r2, #1]!
   1c6f8:	cmp	r3, #0
   1c6fc:	bne	1c6dc <lchmod@@Base+0x551c>
   1c700:	bx	lr
   1c704:	str	r4, [sp, #-8]!
   1c708:	mov	r4, r0
   1c70c:	str	lr, [sp, #4]
   1c710:	bl	11658 <strlen@plt>
   1c714:	cmp	r0, #1
   1c718:	bls	1c72c <lchmod@@Base+0x556c>
   1c71c:	sub	r2, r0, #1
   1c720:	ldrb	r1, [r4, r2]
   1c724:	cmp	r1, #47	; 0x2f
   1c728:	beq	1c738 <lchmod@@Base+0x5578>
   1c72c:	ldr	r4, [sp]
   1c730:	add	sp, sp, #4
   1c734:	pop	{pc}		; (ldr pc, [sp], #4)
   1c738:	cmp	r2, #1
   1c73c:	beq	1c750 <lchmod@@Base+0x5590>
   1c740:	add	r1, r4, r0
   1c744:	ldrb	r1, [r1, #-2]
   1c748:	cmp	r1, #47	; 0x2f
   1c74c:	beq	1c760 <lchmod@@Base+0x55a0>
   1c750:	ldr	r4, [sp]
   1c754:	add	sp, sp, #4
   1c758:	mov	r0, r2
   1c75c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c760:	sub	r3, r0, #3
   1c764:	rsb	r0, r4, #1
   1c768:	add	r3, r4, r3
   1c76c:	cmp	r3, r4
   1c770:	add	r2, r0, r3
   1c774:	beq	1c750 <lchmod@@Base+0x5590>
   1c778:	ldrb	r1, [r3], #-1
   1c77c:	cmp	r1, #47	; 0x2f
   1c780:	bne	1c750 <lchmod@@Base+0x5590>
   1c784:	b	1c76c <lchmod@@Base+0x55ac>
   1c788:	strd	r4, [sp, #-16]!
   1c78c:	mov	r4, r0
   1c790:	str	r6, [sp, #8]
   1c794:	str	lr, [sp, #12]
   1c798:	bl	11598 <__fpending@plt>
   1c79c:	ldr	r5, [r4]
   1c7a0:	mov	r6, r0
   1c7a4:	mov	r0, r4
   1c7a8:	bl	1c930 <lchmod@@Base+0x5770>
   1c7ac:	mov	r4, r0
   1c7b0:	and	r5, r5, #32
   1c7b4:	cmp	r5, #0
   1c7b8:	bne	1c7f0 <lchmod@@Base+0x5630>
   1c7bc:	cmp	r0, #0
   1c7c0:	beq	1c7dc <lchmod@@Base+0x561c>
   1c7c4:	cmp	r6, #0
   1c7c8:	bne	1c808 <lchmod@@Base+0x5648>
   1c7cc:	bl	11688 <__errno_location@plt>
   1c7d0:	ldr	r4, [r0]
   1c7d4:	subs	r4, r4, #9
   1c7d8:	mvnne	r4, #0
   1c7dc:	mov	r0, r4
   1c7e0:	ldrd	r4, [sp]
   1c7e4:	ldr	r6, [sp, #8]
   1c7e8:	add	sp, sp, #12
   1c7ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7f0:	cmp	r0, #0
   1c7f4:	bne	1c808 <lchmod@@Base+0x5648>
   1c7f8:	bl	11688 <__errno_location@plt>
   1c7fc:	str	r4, [r0]
   1c800:	mvn	r4, #0
   1c804:	b	1c7dc <lchmod@@Base+0x561c>
   1c808:	mvn	r4, #0
   1c80c:	b	1c7dc <lchmod@@Base+0x561c>
   1c810:	movw	r3, #62998	; 0xf616
   1c814:	movt	r3, #149	; 0x95
   1c818:	strd	r4, [sp, #-8]!
   1c81c:	mov	r4, #0
   1c820:	mov	r5, #0
   1c824:	strd	r4, [r0, #16]
   1c828:	str	r3, [r0, #24]
   1c82c:	ldrd	r4, [sp]
   1c830:	add	sp, sp, #8
   1c834:	bx	lr
   1c838:	ldr	r2, [r0, #24]
   1c83c:	movw	r3, #62998	; 0xf616
   1c840:	movt	r3, #149	; 0x95
   1c844:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c848:	strd	r6, [sp, #8]
   1c84c:	strd	r8, [sp, #16]
   1c850:	strd	sl, [sp, #24]
   1c854:	cmp	r2, r3
   1c858:	str	lr, [sp, #32]
   1c85c:	sub	sp, sp, #4
   1c860:	bne	1c910 <lchmod@@Base+0x5750>
   1c864:	ldrd	r6, [r0, #16]
   1c868:	ldrd	sl, [r1, #96]	; 0x60
   1c86c:	orrs	r3, r6, r7
   1c870:	beq	1c8c4 <lchmod@@Base+0x5704>
   1c874:	ldrd	r2, [r0]
   1c878:	cmp	r3, fp
   1c87c:	cmpeq	r2, sl
   1c880:	beq	1c8e4 <lchmod@@Base+0x5724>
   1c884:	adds	r8, r6, #1
   1c888:	adc	r9, r7, #0
   1c88c:	and	r2, r6, r8
   1c890:	and	r3, r7, r9
   1c894:	orrs	r3, r2, r3
   1c898:	strd	r8, [r0, #16]
   1c89c:	movne	r1, #0
   1c8a0:	beq	1c900 <lchmod@@Base+0x5740>
   1c8a4:	mov	r0, r1
   1c8a8:	add	sp, sp, #4
   1c8ac:	ldrd	r4, [sp]
   1c8b0:	ldrd	r6, [sp, #8]
   1c8b4:	ldrd	r8, [sp, #16]
   1c8b8:	ldrd	sl, [sp, #24]
   1c8bc:	add	sp, sp, #32
   1c8c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c8c4:	mov	r2, #1
   1c8c8:	mov	r3, #0
   1c8cc:	strd	r2, [r0, #16]
   1c8d0:	ldrd	r2, [r1]
   1c8d4:	mov	r1, #0
   1c8d8:	strd	sl, [r0]
   1c8dc:	strd	r2, [r0, #8]
   1c8e0:	b	1c8a4 <lchmod@@Base+0x56e4>
   1c8e4:	ldrd	r4, [r1]
   1c8e8:	ldrd	r2, [r0, #8]
   1c8ec:	cmp	r5, r3
   1c8f0:	cmpeq	r4, r2
   1c8f4:	bne	1c884 <lchmod@@Base+0x56c4>
   1c8f8:	mov	r1, #1
   1c8fc:	b	1c8a4 <lchmod@@Base+0x56e4>
   1c900:	orrs	r3, r8, r9
   1c904:	bne	1c8d0 <lchmod@@Base+0x5710>
   1c908:	mov	r1, #1
   1c90c:	b	1c8a4 <lchmod@@Base+0x56e4>
   1c910:	movw	r3, #56456	; 0xdc88
   1c914:	movt	r3, #1
   1c918:	movw	r1, #56468	; 0xdc94
   1c91c:	movt	r1, #1
   1c920:	movw	r0, #56488	; 0xdca8
   1c924:	movt	r0, #1
   1c928:	mov	r2, #60	; 0x3c
   1c92c:	bl	1182c <__assert_fail@plt>
   1c930:	strd	r4, [sp, #-12]!
   1c934:	mov	r4, r0
   1c938:	str	lr, [sp, #8]
   1c93c:	sub	sp, sp, #12
   1c940:	bl	116c4 <fileno@plt>
   1c944:	cmp	r0, #0
   1c948:	mov	r0, r4
   1c94c:	blt	1c9d0 <lchmod@@Base+0x5810>
   1c950:	bl	115ec <__freading@plt>
   1c954:	cmp	r0, #0
   1c958:	bne	1c99c <lchmod@@Base+0x57dc>
   1c95c:	mov	r0, r4
   1c960:	bl	1cc0c <lchmod@@Base+0x5a4c>
   1c964:	cmp	r0, #0
   1c968:	beq	1c9cc <lchmod@@Base+0x580c>
   1c96c:	bl	11688 <__errno_location@plt>
   1c970:	mov	r5, r0
   1c974:	mov	r0, r4
   1c978:	ldr	r4, [r5]
   1c97c:	bl	116dc <fclose@plt>
   1c980:	cmp	r4, #0
   1c984:	mvnne	r0, #0
   1c988:	strne	r4, [r5]
   1c98c:	add	sp, sp, #12
   1c990:	ldrd	r4, [sp]
   1c994:	add	sp, sp, #8
   1c998:	pop	{pc}		; (ldr pc, [sp], #4)
   1c99c:	mov	r0, r4
   1c9a0:	bl	116c4 <fileno@plt>
   1c9a4:	mov	r1, #1
   1c9a8:	mov	r2, #0
   1c9ac:	mov	r3, #0
   1c9b0:	str	r1, [sp]
   1c9b4:	bl	11574 <lseek64@plt>
   1c9b8:	mvn	r3, #0
   1c9bc:	mvn	r2, #0
   1c9c0:	cmp	r1, r3
   1c9c4:	cmpeq	r0, r2
   1c9c8:	bne	1c95c <lchmod@@Base+0x579c>
   1c9cc:	mov	r0, r4
   1c9d0:	add	sp, sp, #12
   1c9d4:	ldrd	r4, [sp]
   1c9d8:	ldr	lr, [sp, #8]
   1c9dc:	add	sp, sp, #12
   1c9e0:	b	116dc <fclose@plt>
   1c9e4:	push	{r1, r2, r3}
   1c9e8:	strd	r4, [sp, #-20]!	; 0xffffffec
   1c9ec:	strd	r6, [sp, #8]
   1c9f0:	str	lr, [sp, #16]
   1c9f4:	sub	sp, sp, #8
   1c9f8:	ldr	r1, [sp, #28]
   1c9fc:	add	r2, sp, #32
   1ca00:	str	r2, [sp, #4]
   1ca04:	cmp	r1, #0
   1ca08:	beq	1cae4 <lchmod@@Base+0x5924>
   1ca0c:	movw	r3, #1030	; 0x406
   1ca10:	mov	r6, r0
   1ca14:	cmp	r1, r3
   1ca18:	beq	1caf4 <lchmod@@Base+0x5934>
   1ca1c:	cmp	r1, #11
   1ca20:	beq	1ca9c <lchmod@@Base+0x58dc>
   1ca24:	ble	1ca7c <lchmod@@Base+0x58bc>
   1ca28:	movw	r2, #1031	; 0x407
   1ca2c:	cmp	r1, r2
   1ca30:	bgt	1cab8 <lchmod@@Base+0x58f8>
   1ca34:	cmp	r1, r3
   1ca38:	bge	1ca48 <lchmod@@Base+0x5888>
   1ca3c:	movw	r3, #1025	; 0x401
   1ca40:	cmp	r1, r3
   1ca44:	beq	1ca9c <lchmod@@Base+0x58dc>
   1ca48:	ldr	r3, [sp, #4]
   1ca4c:	mov	r0, r6
   1ca50:	ldr	r2, [r3]
   1ca54:	bl	116f4 <fcntl64@plt>
   1ca58:	mov	r4, r0
   1ca5c:	mov	r0, r4
   1ca60:	add	sp, sp, #8
   1ca64:	ldrd	r4, [sp]
   1ca68:	ldrd	r6, [sp, #8]
   1ca6c:	ldr	lr, [sp, #16]
   1ca70:	add	sp, sp, #20
   1ca74:	add	sp, sp, #12
   1ca78:	bx	lr
   1ca7c:	cmp	r1, #4
   1ca80:	beq	1ca48 <lchmod@@Base+0x5888>
   1ca84:	bgt	1caac <lchmod@@Base+0x58ec>
   1ca88:	cmp	r1, #2
   1ca8c:	beq	1ca48 <lchmod@@Base+0x5888>
   1ca90:	bgt	1ca9c <lchmod@@Base+0x58dc>
   1ca94:	cmp	r1, #1
   1ca98:	bne	1ca48 <lchmod@@Base+0x5888>
   1ca9c:	mov	r0, r6
   1caa0:	bl	116f4 <fcntl64@plt>
   1caa4:	mov	r4, r0
   1caa8:	b	1ca5c <lchmod@@Base+0x589c>
   1caac:	cmp	r1, #9
   1cab0:	bne	1ca48 <lchmod@@Base+0x5888>
   1cab4:	b	1ca9c <lchmod@@Base+0x58dc>
   1cab8:	movw	r3, #1033	; 0x409
   1cabc:	cmp	r1, r3
   1cac0:	beq	1ca48 <lchmod@@Base+0x5888>
   1cac4:	blt	1ca9c <lchmod@@Base+0x58dc>
   1cac8:	movw	r3, #1034	; 0x40a
   1cacc:	cmp	r1, r3
   1cad0:	bne	1ca48 <lchmod@@Base+0x5888>
   1cad4:	mov	r0, r6
   1cad8:	bl	116f4 <fcntl64@plt>
   1cadc:	mov	r4, r0
   1cae0:	b	1ca5c <lchmod@@Base+0x589c>
   1cae4:	ldr	r2, [sp, #32]
   1cae8:	bl	116f4 <fcntl64@plt>
   1caec:	mov	r4, r0
   1caf0:	b	1ca5c <lchmod@@Base+0x589c>
   1caf4:	movw	r5, #58148	; 0xe324
   1caf8:	movt	r5, #2
   1cafc:	ldr	r7, [r2]
   1cb00:	add	r2, sp, #36	; 0x24
   1cb04:	ldr	r3, [r5]
   1cb08:	str	r2, [sp, #4]
   1cb0c:	mov	r2, r7
   1cb10:	cmp	r3, #0
   1cb14:	blt	1cb30 <lchmod@@Base+0x5970>
   1cb18:	bl	116f4 <fcntl64@plt>
   1cb1c:	subs	r4, r0, #0
   1cb20:	blt	1cb98 <lchmod@@Base+0x59d8>
   1cb24:	mov	r3, #1
   1cb28:	str	r3, [r5]
   1cb2c:	b	1ca5c <lchmod@@Base+0x589c>
   1cb30:	mov	r1, #0
   1cb34:	bl	116f4 <fcntl64@plt>
   1cb38:	subs	r4, r0, #0
   1cb3c:	blt	1ca5c <lchmod@@Base+0x589c>
   1cb40:	ldr	r3, [r5]
   1cb44:	cmn	r3, #1
   1cb48:	bne	1ca5c <lchmod@@Base+0x589c>
   1cb4c:	mov	r1, #1
   1cb50:	mov	r0, r4
   1cb54:	bl	116f4 <fcntl64@plt>
   1cb58:	subs	r2, r0, #0
   1cb5c:	blt	1cb78 <lchmod@@Base+0x59b8>
   1cb60:	orr	r2, r2, #1
   1cb64:	mov	r1, #2
   1cb68:	mov	r0, r4
   1cb6c:	bl	116f4 <fcntl64@plt>
   1cb70:	cmn	r0, #1
   1cb74:	bne	1ca5c <lchmod@@Base+0x589c>
   1cb78:	bl	11688 <__errno_location@plt>
   1cb7c:	mov	r5, r0
   1cb80:	mov	r0, r4
   1cb84:	ldr	r6, [r5]
   1cb88:	mvn	r4, #0
   1cb8c:	bl	117e4 <close@plt>
   1cb90:	str	r6, [r5]
   1cb94:	b	1ca5c <lchmod@@Base+0x589c>
   1cb98:	bl	11688 <__errno_location@plt>
   1cb9c:	ldr	r3, [r0]
   1cba0:	cmp	r3, #22
   1cba4:	bne	1cb24 <lchmod@@Base+0x5964>
   1cba8:	mov	r2, r7
   1cbac:	mov	r0, r6
   1cbb0:	mov	r1, #0
   1cbb4:	bl	116f4 <fcntl64@plt>
   1cbb8:	subs	r4, r0, #0
   1cbbc:	mvnge	r3, #0
   1cbc0:	strge	r3, [r5]
   1cbc4:	bge	1cb4c <lchmod@@Base+0x598c>
   1cbc8:	b	1ca5c <lchmod@@Base+0x589c>
   1cbcc:	push	{r1, r2, r3}
   1cbd0:	push	{lr}		; (str lr, [sp, #-4]!)
   1cbd4:	sub	sp, sp, #8
   1cbd8:	ldr	r1, [sp, #12]
   1cbdc:	ands	r2, r1, #64	; 0x40
   1cbe0:	bne	1cbfc <lchmod@@Base+0x5a3c>
   1cbe4:	bl	115bc <open64@plt>
   1cbe8:	bl	1b784 <lchmod@@Base+0x45c4>
   1cbec:	add	sp, sp, #8
   1cbf0:	pop	{lr}		; (ldr lr, [sp], #4)
   1cbf4:	add	sp, sp, #12
   1cbf8:	bx	lr
   1cbfc:	add	r3, sp, #16
   1cc00:	ldr	r2, [sp, #16]
   1cc04:	str	r3, [sp, #4]
   1cc08:	b	1cbe4 <lchmod@@Base+0x5a24>
   1cc0c:	str	r4, [sp, #-8]!
   1cc10:	subs	r4, r0, #0
   1cc14:	str	lr, [sp, #4]
   1cc18:	sub	sp, sp, #8
   1cc1c:	beq	1cc38 <lchmod@@Base+0x5a78>
   1cc20:	bl	115ec <__freading@plt>
   1cc24:	cmp	r0, #0
   1cc28:	beq	1cc38 <lchmod@@Base+0x5a78>
   1cc2c:	ldr	r3, [r4]
   1cc30:	tst	r3, #256	; 0x100
   1cc34:	bne	1cc50 <lchmod@@Base+0x5a90>
   1cc38:	mov	r0, r4
   1cc3c:	add	sp, sp, #8
   1cc40:	ldr	r4, [sp]
   1cc44:	ldr	lr, [sp, #4]
   1cc48:	add	sp, sp, #8
   1cc4c:	b	1146c <fflush@plt>
   1cc50:	mov	r1, #1
   1cc54:	mov	r2, #0
   1cc58:	mov	r3, #0
   1cc5c:	mov	r0, r4
   1cc60:	str	r1, [sp]
   1cc64:	bl	1cc6c <lchmod@@Base+0x5aac>
   1cc68:	b	1cc38 <lchmod@@Base+0x5a78>
   1cc6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1cc70:	mov	r4, r0
   1cc74:	ldr	ip, [r0, #4]
   1cc78:	strd	r6, [sp, #8]
   1cc7c:	str	lr, [sp, #20]
   1cc80:	ldr	lr, [r0, #8]
   1cc84:	str	r8, [sp, #16]
   1cc88:	sub	sp, sp, #8
   1cc8c:	ldr	r5, [sp, #32]
   1cc90:	cmp	lr, ip
   1cc94:	beq	1ccbc <lchmod@@Base+0x5afc>
   1cc98:	mov	r0, r4
   1cc9c:	str	r5, [sp, #32]
   1cca0:	add	sp, sp, #8
   1cca4:	ldrd	r4, [sp]
   1cca8:	ldrd	r6, [sp, #8]
   1ccac:	ldr	r8, [sp, #16]
   1ccb0:	ldr	lr, [sp, #20]
   1ccb4:	add	sp, sp, #24
   1ccb8:	b	116e8 <fseeko64@plt>
   1ccbc:	ldr	ip, [r0, #16]
   1ccc0:	ldr	lr, [r0, #20]
   1ccc4:	cmp	lr, ip
   1ccc8:	bne	1cc98 <lchmod@@Base+0x5ad8>
   1cccc:	ldr	r8, [r0, #36]	; 0x24
   1ccd0:	cmp	r8, #0
   1ccd4:	bne	1cc98 <lchmod@@Base+0x5ad8>
   1ccd8:	mov	r6, r2
   1ccdc:	mov	r7, r3
   1cce0:	bl	116c4 <fileno@plt>
   1cce4:	mov	r2, r6
   1cce8:	mov	r3, r7
   1ccec:	str	r5, [sp]
   1ccf0:	bl	11574 <lseek64@plt>
   1ccf4:	mvn	r3, #0
   1ccf8:	mvn	r2, #0
   1ccfc:	cmp	r1, r3
   1cd00:	cmpeq	r0, r2
   1cd04:	beq	1cd34 <lchmod@@Base+0x5b74>
   1cd08:	ldr	r3, [r4]
   1cd0c:	strd	r0, [r4, #80]	; 0x50
   1cd10:	bic	r3, r3, #16
   1cd14:	str	r3, [r4]
   1cd18:	mov	r0, r8
   1cd1c:	add	sp, sp, #8
   1cd20:	ldrd	r4, [sp]
   1cd24:	ldrd	r6, [sp, #8]
   1cd28:	ldr	r8, [sp, #16]
   1cd2c:	add	sp, sp, #20
   1cd30:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd34:	mvn	r8, #0
   1cd38:	b	1cd18 <lchmod@@Base+0x5b58>
   1cd3c:	ldrb	r3, [r0]
   1cd40:	cmp	r3, #0
   1cd44:	beq	1cd68 <lchmod@@Base+0x5ba8>
   1cd48:	mov	r2, #0
   1cd4c:	add	r2, r3, r2, ror #23
   1cd50:	ldrb	r3, [r0, #1]!
   1cd54:	cmp	r3, #0
   1cd58:	bne	1cd4c <lchmod@@Base+0x5b8c>
   1cd5c:	udiv	r3, r2, r1
   1cd60:	mls	r0, r1, r3, r2
   1cd64:	bx	lr
   1cd68:	mov	r0, r3
   1cd6c:	bx	lr
   1cd70:	mov	r0, #14
   1cd74:	str	r4, [sp, #-8]!
   1cd78:	str	lr, [sp, #4]
   1cd7c:	bl	11724 <nl_langinfo@plt>
   1cd80:	cmp	r0, #0
   1cd84:	beq	1cda8 <lchmod@@Base+0x5be8>
   1cd88:	ldrb	r2, [r0]
   1cd8c:	movw	r3, #56512	; 0xdcc0
   1cd90:	movt	r3, #1
   1cd94:	ldr	r4, [sp]
   1cd98:	add	sp, sp, #4
   1cd9c:	cmp	r2, #0
   1cda0:	moveq	r0, r3
   1cda4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cda8:	ldr	r4, [sp]
   1cdac:	add	sp, sp, #4
   1cdb0:	movw	r0, #56512	; 0xdcc0
   1cdb4:	movt	r0, #1
   1cdb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cdbc:	strd	r4, [sp, #-20]!	; 0xffffffec
   1cdc0:	mov	r5, r2
   1cdc4:	strd	r6, [sp, #8]
   1cdc8:	subs	r6, r0, #0
   1cdcc:	mov	r7, r1
   1cdd0:	str	lr, [sp, #16]
   1cdd4:	sub	sp, sp, #12
   1cdd8:	addeq	r6, sp, #4
   1cddc:	mov	r0, r6
   1cde0:	bl	115a4 <mbrtowc@plt>
   1cde4:	cmp	r5, #0
   1cde8:	cmnne	r0, #3
   1cdec:	mov	r4, r0
   1cdf0:	bhi	1ce0c <lchmod@@Base+0x5c4c>
   1cdf4:	mov	r0, r4
   1cdf8:	add	sp, sp, #12
   1cdfc:	ldrd	r4, [sp]
   1ce00:	ldrd	r6, [sp, #8]
   1ce04:	add	sp, sp, #16
   1ce08:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce0c:	mov	r0, #0
   1ce10:	bl	1ce70 <lchmod@@Base+0x5cb0>
   1ce14:	cmp	r0, #0
   1ce18:	bne	1cdf4 <lchmod@@Base+0x5c34>
   1ce1c:	ldrb	r3, [r7]
   1ce20:	mov	r4, #1
   1ce24:	str	r3, [r6]
   1ce28:	b	1cdf4 <lchmod@@Base+0x5c34>
   1ce2c:	umull	r2, r3, r1, r2
   1ce30:	cmp	r3, #0
   1ce34:	bne	1ce40 <lchmod@@Base+0x5c80>
   1ce38:	mov	r1, r2
   1ce3c:	b	1c65c <lchmod@@Base+0x549c>
   1ce40:	str	r4, [sp, #-8]!
   1ce44:	str	lr, [sp, #4]
   1ce48:	bl	11688 <__errno_location@plt>
   1ce4c:	mov	r3, #12
   1ce50:	ldr	r4, [sp]
   1ce54:	add	sp, sp, #4
   1ce58:	str	r3, [r0]
   1ce5c:	mov	r0, #0
   1ce60:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce64:	mov	r2, #3
   1ce68:	mov	r1, #0
   1ce6c:	b	1c9e4 <lchmod@@Base+0x5824>
   1ce70:	push	{lr}		; (str lr, [sp, #-4]!)
   1ce74:	sub	sp, sp, #268	; 0x10c
   1ce78:	movw	r2, #257	; 0x101
   1ce7c:	add	r1, sp, #4
   1ce80:	bl	1cec8 <lchmod@@Base+0x5d08>
   1ce84:	cmp	r0, #0
   1ce88:	movne	r0, #0
   1ce8c:	bne	1cec0 <lchmod@@Base+0x5d00>
   1ce90:	movw	r1, #56520	; 0xdcc8
   1ce94:	movt	r1, #1
   1ce98:	add	r0, sp, #4
   1ce9c:	bl	11454 <strcmp@plt>
   1cea0:	cmp	r0, #0
   1cea4:	beq	1cec0 <lchmod@@Base+0x5d00>
   1cea8:	add	r0, sp, #4
   1ceac:	movw	r1, #56524	; 0xdccc
   1ceb0:	movt	r1, #1
   1ceb4:	bl	11454 <strcmp@plt>
   1ceb8:	adds	r0, r0, #0
   1cebc:	movne	r0, #1
   1cec0:	add	sp, sp, #268	; 0x10c
   1cec4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cec8:	strd	r4, [sp, #-16]!
   1cecc:	mov	r5, r1
   1ced0:	mov	r1, #0
   1ced4:	mov	r4, r2
   1ced8:	str	r6, [sp, #8]
   1cedc:	str	lr, [sp, #12]
   1cee0:	bl	11700 <setlocale@plt>
   1cee4:	subs	r6, r0, #0
   1cee8:	beq	1cf68 <lchmod@@Base+0x5da8>
   1ceec:	bl	11658 <strlen@plt>
   1cef0:	cmp	r4, r0
   1cef4:	bhi	1cf14 <lchmod@@Base+0x5d54>
   1cef8:	cmp	r4, #0
   1cefc:	moveq	r0, #34	; 0x22
   1cf00:	bne	1cf38 <lchmod@@Base+0x5d78>
   1cf04:	ldrd	r4, [sp]
   1cf08:	ldr	r6, [sp, #8]
   1cf0c:	add	sp, sp, #12
   1cf10:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf14:	add	r2, r0, #1
   1cf18:	mov	r1, r6
   1cf1c:	mov	r0, r5
   1cf20:	bl	114b4 <memcpy@plt>
   1cf24:	ldrd	r4, [sp]
   1cf28:	mov	r0, #0
   1cf2c:	ldr	r6, [sp, #8]
   1cf30:	add	sp, sp, #12
   1cf34:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf38:	sub	r4, r4, #1
   1cf3c:	mov	r1, r6
   1cf40:	mov	r2, r4
   1cf44:	mov	r0, r5
   1cf48:	bl	114b4 <memcpy@plt>
   1cf4c:	mov	r3, #0
   1cf50:	mov	r0, #34	; 0x22
   1cf54:	strb	r3, [r5, r4]
   1cf58:	ldrd	r4, [sp]
   1cf5c:	ldr	r6, [sp, #8]
   1cf60:	add	sp, sp, #12
   1cf64:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf68:	cmp	r4, #0
   1cf6c:	mov	r0, #22
   1cf70:	strbne	r6, [r5]
   1cf74:	ldrd	r4, [sp]
   1cf78:	ldr	r6, [sp, #8]
   1cf7c:	add	sp, sp, #12
   1cf80:	pop	{pc}		; (ldr pc, [sp], #4)
   1cf84:	mov	r1, #0
   1cf88:	b	11700 <setlocale@plt>
   1cf8c:	cmp	r3, #0
   1cf90:	cmpeq	r2, #0
   1cf94:	bne	1cfac <lchmod@@Base+0x5dec>
   1cf98:	cmp	r1, #0
   1cf9c:	cmpeq	r0, #0
   1cfa0:	mvnne	r1, #0
   1cfa4:	mvnne	r0, #0
   1cfa8:	b	1cfc8 <lchmod@@Base+0x5e08>
   1cfac:	sub	sp, sp, #8
   1cfb0:	push	{sp, lr}
   1cfb4:	bl	1cfd8 <lchmod@@Base+0x5e18>
   1cfb8:	ldr	lr, [sp, #4]
   1cfbc:	add	sp, sp, #8
   1cfc0:	pop	{r2, r3}
   1cfc4:	bx	lr
   1cfc8:	push	{r1, lr}
   1cfcc:	mov	r0, #8
   1cfd0:	bl	1143c <raise@plt>
   1cfd4:	pop	{r1, pc}
   1cfd8:	cmp	r1, r3
   1cfdc:	cmpeq	r0, r2
   1cfe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cfe4:	mov	r4, r0
   1cfe8:	movcc	r0, #0
   1cfec:	mov	r5, r1
   1cff0:	ldr	lr, [sp, #36]	; 0x24
   1cff4:	movcc	r1, r0
   1cff8:	bcc	1d0f4 <lchmod@@Base+0x5f34>
   1cffc:	cmp	r3, #0
   1d000:	clzeq	ip, r2
   1d004:	clzne	ip, r3
   1d008:	addeq	ip, ip, #32
   1d00c:	cmp	r5, #0
   1d010:	clzeq	r1, r4
   1d014:	addeq	r1, r1, #32
   1d018:	clzne	r1, r5
   1d01c:	sub	ip, ip, r1
   1d020:	sub	sl, ip, #32
   1d024:	lsl	r9, r3, ip
   1d028:	rsb	fp, ip, #32
   1d02c:	orr	r9, r9, r2, lsl sl
   1d030:	orr	r9, r9, r2, lsr fp
   1d034:	lsl	r8, r2, ip
   1d038:	cmp	r5, r9
   1d03c:	cmpeq	r4, r8
   1d040:	movcc	r0, #0
   1d044:	movcc	r1, r0
   1d048:	bcc	1d064 <lchmod@@Base+0x5ea4>
   1d04c:	mov	r0, #1
   1d050:	subs	r4, r4, r8
   1d054:	lsl	r1, r0, sl
   1d058:	orr	r1, r1, r0, lsr fp
   1d05c:	lsl	r0, r0, ip
   1d060:	sbc	r5, r5, r9
   1d064:	cmp	ip, #0
   1d068:	beq	1d0f4 <lchmod@@Base+0x5f34>
   1d06c:	lsr	r6, r8, #1
   1d070:	orr	r6, r6, r9, lsl #31
   1d074:	lsr	r7, r9, #1
   1d078:	mov	r2, ip
   1d07c:	b	1d0a0 <lchmod@@Base+0x5ee0>
   1d080:	subs	r3, r4, r6
   1d084:	sbc	r8, r5, r7
   1d088:	adds	r3, r3, r3
   1d08c:	adc	r8, r8, r8
   1d090:	adds	r4, r3, #1
   1d094:	adc	r5, r8, #0
   1d098:	subs	r2, r2, #1
   1d09c:	beq	1d0bc <lchmod@@Base+0x5efc>
   1d0a0:	cmp	r5, r7
   1d0a4:	cmpeq	r4, r6
   1d0a8:	bcs	1d080 <lchmod@@Base+0x5ec0>
   1d0ac:	adds	r4, r4, r4
   1d0b0:	adc	r5, r5, r5
   1d0b4:	subs	r2, r2, #1
   1d0b8:	bne	1d0a0 <lchmod@@Base+0x5ee0>
   1d0bc:	lsr	r3, r4, ip
   1d0c0:	orr	r3, r3, r5, lsl fp
   1d0c4:	lsr	r2, r5, ip
   1d0c8:	orr	r3, r3, r5, lsr sl
   1d0cc:	adds	r0, r0, r4
   1d0d0:	mov	r4, r3
   1d0d4:	lsl	r3, r2, ip
   1d0d8:	orr	r3, r3, r4, lsl sl
   1d0dc:	lsl	ip, r4, ip
   1d0e0:	orr	r3, r3, r4, lsr fp
   1d0e4:	adc	r1, r1, r5
   1d0e8:	subs	r0, r0, ip
   1d0ec:	mov	r5, r2
   1d0f0:	sbc	r1, r1, r3
   1d0f4:	cmp	lr, #0
   1d0f8:	strdne	r4, [lr]
   1d0fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d100:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d104:	mov	r7, r0
   1d108:	ldr	r6, [pc, #72]	; 1d158 <lchmod@@Base+0x5f98>
   1d10c:	ldr	r5, [pc, #72]	; 1d15c <lchmod@@Base+0x5f9c>
   1d110:	add	r6, pc, r6
   1d114:	add	r5, pc, r5
   1d118:	sub	r6, r6, r5
   1d11c:	mov	r8, r1
   1d120:	mov	r9, r2
   1d124:	bl	113ec <fstatfs64@plt-0x20>
   1d128:	asrs	r6, r6, #2
   1d12c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d130:	mov	r4, #0
   1d134:	add	r4, r4, #1
   1d138:	ldr	r3, [r5], #4
   1d13c:	mov	r2, r9
   1d140:	mov	r1, r8
   1d144:	mov	r0, r7
   1d148:	blx	r3
   1d14c:	cmp	r6, r4
   1d150:	bne	1d134 <lchmod@@Base+0x5f74>
   1d154:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d158:	strdeq	r0, [r1], -r4
   1d15c:	andeq	r0, r1, ip, ror #27
   1d160:	bx	lr
   1d164:	ldr	r3, [pc, #12]	; 1d178 <lchmod@@Base+0x5fb8>
   1d168:	mov	r1, #0
   1d16c:	add	r3, pc, r3
   1d170:	ldr	r2, [r3]
   1d174:	b	116a0 <__cxa_atexit@plt>
   1d178:	andeq	r1, r1, r4

Disassembly of section .fini:

0001d17c <.fini>:
   1d17c:	push	{r3, lr}
   1d180:	pop	{r3, pc}
