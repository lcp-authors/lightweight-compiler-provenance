
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000007a0 <_init>:
 7a0:	push	{r3, lr}
 7a4:	bl	874 <call_weak_fn>
 7a8:	pop	{r3, pc}

Disassembly of section .plt:

000007ac <.plt>:
 7ac:	push	{lr}		; (str lr, [sp, #-4]!)
 7b0:	ldr	lr, [pc, #4]	; 7bc <.plt+0x10>
 7b4:	add	lr, pc, lr
 7b8:	ldr	pc, [lr, #8]!
 7bc:	.word	0x00011844

000007c0 <__cxa_finalize@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2116]!	; 0x844

000007cc <sendto_one@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2108]!	; 0x83c

000007d8 <user_mode@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2100]!	; 0x834

000007e4 <sendto_realops_snomask@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2092]!	; 0x82c

000007f0 <find_umode_slot@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2084]!	; 0x824

000007fc <rb_free_rb_dlink_node@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2076]!	; 0x81c

00000808 <__gmon_start__@plt>:
 808:	add	ip, pc, #0, 12
 80c:	add	ip, ip, #69632	; 0x11000
 810:	ldr	pc, [ip, #2068]!	; 0x814

00000814 <rb_make_rb_dlink_node@plt>:
 814:	add	ip, pc, #0, 12
 818:	add	ip, ip, #69632	; 0x11000
 81c:	ldr	pc, [ip, #2060]!	; 0x80c

00000820 <sendto_one_numeric@plt>:
 820:	add	ip, pc, #0, 12
 824:	add	ip, ip, #69632	; 0x11000
 828:	ldr	pc, [ip, #2052]!	; 0x804

0000082c <find_person@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2044]!	; 0x7fc

00000838 <sendto_one_notice@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #2036]!	; 0x7f4

00000844 <find_named_person@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000850 <privilegeset_in_set@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #2020]!	; 0x7e4

0000085c <__assert_fail@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #2012]!	; 0x7dc

00000868 <construct_umodebuf@plt>:
 868:	add	ip, pc, #0, 12
 86c:	add	ip, ip, #69632	; 0x11000
 870:	ldr	pc, [ip, #2004]!	; 0x7d4

Disassembly of section .text:

00000874 <call_weak_fn>:
     874:	ldr	r3, [pc, #20]	; 890 <call_weak_fn+0x1c>
     878:	ldr	r2, [pc, #20]	; 894 <call_weak_fn+0x20>
     87c:	add	r3, pc, r3
     880:	ldr	r2, [r3, r2]
     884:	cmp	r2, #0
     888:	bxeq	lr
     88c:	b	808 <__gmon_start__@plt>
     890:	.word	0x0001177c
     894:	.word	0x00000054

00000898 <deregister_tm_clones>:
     898:	ldr	r0, [pc, #44]	; 8cc <deregister_tm_clones+0x34>
     89c:	ldr	r3, [pc, #44]	; 8d0 <deregister_tm_clones+0x38>
     8a0:	add	r0, pc, r0
     8a4:	add	r3, pc, r3
     8a8:	cmp	r3, r0
     8ac:	ldr	r3, [pc, #32]	; 8d4 <deregister_tm_clones+0x3c>
     8b0:	add	r3, pc, r3
     8b4:	bxeq	lr
     8b8:	ldr	r2, [pc, #24]	; 8d8 <deregister_tm_clones+0x40>
     8bc:	ldr	r3, [r3, r2]
     8c0:	cmp	r3, #0
     8c4:	bxeq	lr
     8c8:	bx	r3
     8cc:	.word	0x00011888
     8d0:	.word	0x00011884
     8d4:	.word	0x00011748
     8d8:	.word	0x0000004c

000008dc <register_tm_clones>:
     8dc:	ldr	r0, [pc, #56]	; 91c <register_tm_clones+0x40>
     8e0:	ldr	r3, [pc, #56]	; 920 <register_tm_clones+0x44>
     8e4:	add	r0, pc, r0
     8e8:	add	r3, pc, r3
     8ec:	sub	r1, r3, r0
     8f0:	ldr	r3, [pc, #44]	; 924 <register_tm_clones+0x48>
     8f4:	asr	r1, r1, #2
     8f8:	add	r3, pc, r3
     8fc:	add	r1, r1, r1, lsr #31
     900:	asrs	r1, r1, #1
     904:	bxeq	lr
     908:	ldr	r2, [pc, #24]	; 928 <register_tm_clones+0x4c>
     90c:	ldr	r3, [r3, r2]
     910:	cmp	r3, #0
     914:	bxeq	lr
     918:	bx	r3
     91c:	.word	0x00011844
     920:	.word	0x00011840
     924:	.word	0x00011700
     928:	.word	0x0000005c

0000092c <__do_global_dtors_aux>:
     92c:	ldr	r3, [pc, #76]	; 980 <__do_global_dtors_aux+0x54>
     930:	ldr	r2, [pc, #76]	; 984 <__do_global_dtors_aux+0x58>
     934:	add	r3, pc, r3
     938:	add	r2, pc, r2
     93c:	ldrb	r3, [r3]
     940:	cmp	r3, #0
     944:	bxne	lr
     948:	ldr	r3, [pc, #56]	; 988 <__do_global_dtors_aux+0x5c>
     94c:	push	{r4, lr}
     950:	ldr	r3, [r2, r3]
     954:	cmp	r3, #0
     958:	beq	968 <__do_global_dtors_aux+0x3c>
     95c:	ldr	r3, [pc, #40]	; 98c <__do_global_dtors_aux+0x60>
     960:	ldr	r0, [pc, r3]
     964:	bl	7c0 <__cxa_finalize@plt>
     968:	bl	898 <deregister_tm_clones>
     96c:	ldr	r3, [pc, #28]	; 990 <__do_global_dtors_aux+0x64>
     970:	mov	r2, #1
     974:	add	r3, pc, r3
     978:	strb	r2, [r3]
     97c:	pop	{r4, pc}
     980:	.word	0x000117f4
     984:	.word	0x000116c0
     988:	.word	0x00000048
     98c:	.word	0x000116fc
     990:	.word	0x000117b4

00000994 <frame_dummy>:
     994:	b	8dc <register_tm_clones>

00000998 <h_hdl_stats_request>:
     998:	push	{r4, r5, r6, r7, fp, lr}
     99c:	add	fp, sp, #16
     9a0:	sub	sp, sp, #8
     9a4:	mov	r4, r0
     9a8:	ldr	r0, [r0, #8]
     9ac:	cmp	r0, #112	; 0x70
     9b0:	bne	a40 <h_hdl_stats_request+0xa8>
     9b4:	ldr	r7, [pc, #140]	; a48 <h_hdl_stats_request+0xb0>
     9b8:	ldr	r7, [pc, r7]
     9bc:	mov	r5, #0
     9c0:	cmp	r7, #0
     9c4:	beq	a20 <h_hdl_stats_request+0x88>
     9c8:	ldr	r6, [pc, #124]	; a4c <h_hdl_stats_request+0xb4>
     9cc:	add	r6, pc, r6
     9d0:	b	9e0 <h_hdl_stats_request+0x48>
     9d4:	ldr	r7, [r7, #8]
     9d8:	cmp	r7, #0
     9dc:	beq	a20 <h_hdl_stats_request+0x88>
     9e0:	ldr	r1, [r7]
     9e4:	ldr	r0, [r1, #24]
     9e8:	ldr	r0, [r0, #24]
     9ec:	cmp	r0, #0
     9f0:	bne	9d4 <h_hdl_stats_request+0x3c>
     9f4:	ldr	r0, [r4]
     9f8:	add	r2, r1, #163	; 0xa3
     9fc:	add	r3, r1, #152	; 0x98
     a00:	str	r3, [sp]
     a04:	str	r2, [sp, #4]
     a08:	add	r3, r1, #88	; 0x58
     a0c:	mov	r1, #249	; 0xf9
     a10:	mov	r2, r6
     a14:	bl	820 <sendto_one_numeric@plt>
     a18:	add	r5, r5, #1
     a1c:	b	9d4 <h_hdl_stats_request+0x3c>
     a20:	ldr	r0, [r4]
     a24:	ldr	r2, [pc, #36]	; a50 <h_hdl_stats_request+0xb8>
     a28:	add	r2, pc, r2
     a2c:	mov	r1, #249	; 0xf9
     a30:	mov	r3, r5
     a34:	bl	820 <sendto_one_numeric@plt>
     a38:	mov	r0, #1
     a3c:	str	r0, [r4, #12]
     a40:	sub	sp, fp, #16
     a44:	pop	{r4, r5, r6, r7, fp, pc}
     a48:	.word	0x00011774
     a4c:	.word	0x000009d8
     a50:	.word	0x0000098a

00000a54 <h_hdl_new_remote_user>:
     a54:	ldr	r1, [r0, #56]	; 0x38
     a58:	ldr	r2, [pc, #16]	; a70 <h_hdl_new_remote_user+0x1c>
     a5c:	ldr	r2, [pc, r2]
     a60:	ldr	r2, [r2, #288]	; 0x120
     a64:	tst	r2, r1
     a68:	bxeq	lr
     a6c:	b	ef4 <helper_add>
     a70:	.word	0x000115ec

00000a74 <h_hdl_client_exit>:
     a74:	ldr	r0, [r0, #4]
     a78:	b	1068 <recurse_client_exit>

00000a7c <h_hdl_umode_changed>:
     a7c:	push	{r4, r5, r6, sl, fp, lr}
     a80:	add	fp, sp, #16
     a84:	sub	sp, sp, #8
     a88:	ldr	r4, [r0]
     a8c:	ldr	r0, [r0, #4]
     a90:	ldr	r1, [r4, #56]	; 0x38
     a94:	eor	r0, r1, r0
     a98:	ldr	r6, [pc, #208]	; b70 <h_hdl_umode_changed+0xf4>
     a9c:	ldr	r6, [pc, r6]
     aa0:	ldr	r2, [r6, #288]	; 0x120
     aa4:	and	r5, r0, r2
     aa8:	tst	r2, r1
     aac:	beq	b0c <h_hdl_umode_changed+0x90>
     ab0:	ldrb	r0, [r4, #65]	; 0x41
     ab4:	tst	r0, #32
     ab8:	beq	af4 <h_hdl_umode_changed+0x78>
     abc:	ldrh	r0, [r4, #80]	; 0x50
     ac0:	cmp	r0, #64	; 0x40
     ac4:	bne	af4 <h_hdl_umode_changed+0x78>
     ac8:	ldr	r0, [r4, #24]
     acc:	cmp	r0, #0
     ad0:	beq	b24 <h_hdl_umode_changed+0xa8>
     ad4:	ldr	r0, [r0, #36]	; 0x24
     ad8:	cmp	r0, #0
     adc:	beq	b24 <h_hdl_umode_changed+0xa8>
     ae0:	ldr	r1, [pc, #140]	; b74 <h_hdl_umode_changed+0xf8>
     ae4:	add	r1, pc, r1
     ae8:	bl	850 <privilegeset_in_set@plt>
     aec:	cmp	r0, #0
     af0:	beq	b24 <h_hdl_umode_changed+0xa8>
     af4:	cmp	r5, #0
     af8:	beq	b68 <h_hdl_umode_changed+0xec>
     afc:	mov	r0, r4
     b00:	sub	sp, fp, #16
     b04:	pop	{r4, r5, r6, sl, fp, lr}
     b08:	b	ef4 <helper_add>
     b0c:	cmp	r5, #0
     b10:	beq	b68 <h_hdl_umode_changed+0xec>
     b14:	mov	r0, r4
     b18:	sub	sp, fp, #16
     b1c:	pop	{r4, r5, r6, sl, fp, lr}
     b20:	b	1108 <helper_delete>
     b24:	ldr	r0, [pc, #76]	; b78 <h_hdl_umode_changed+0xfc>
     b28:	add	r0, pc, r0
     b2c:	ldr	r1, [r4, #56]	; 0x38
     b30:	ldr	r2, [r6, #288]	; 0x120
     b34:	bic	r1, r1, r2
     b38:	str	r1, [r4, #56]	; 0x38
     b3c:	str	r0, [sp]
     b40:	add	r3, r4, #88	; 0x58
     b44:	ldr	r0, [pc, #48]	; b7c <h_hdl_umode_changed+0x100>
     b48:	ldr	r0, [pc, r0]
     b4c:	add	r2, r0, #88	; 0x58
     b50:	ldr	r1, [pc, #40]	; b80 <h_hdl_umode_changed+0x104>
     b54:	add	r1, pc, r1
     b58:	mov	r0, r4
     b5c:	bl	7cc <sendto_one@plt>
     b60:	cmp	r5, #0
     b64:	beq	b14 <h_hdl_umode_changed+0x98>
     b68:	sub	sp, fp, #16
     b6c:	pop	{r4, r5, r6, sl, fp, pc}
     b70:	.word	0x000115ac
     b74:	.word	0x000009f1
     b78:	.word	0x000009ad
     b7c:	.word	0x00011510
     b80:	.word	0x000007b8

00000b84 <h_hdl_whois>:
     b84:	ldr	r1, [pc, #76]	; bd8 <h_hdl_whois+0x54>
     b88:	ldr	r1, [pc, r1]
     b8c:	ldr	r2, [r1, #288]	; 0x120
     b90:	ldr	r1, [r0, #4]
     b94:	ldr	r3, [r1, #56]	; 0x38
     b98:	tst	r2, r3
     b9c:	bxeq	lr
     ba0:	ldr	r0, [r0]
     ba4:	ldr	r2, [r1, #24]
     ba8:	ldr	r2, [r2, #24]
     bac:	cmp	r2, #0
     bb0:	beq	bc4 <h_hdl_whois+0x40>
     bb4:	ldrb	r2, [r2]
     bb8:	cmp	r2, #0
     bbc:	beq	bc4 <h_hdl_whois+0x40>
     bc0:	bx	lr
     bc4:	add	r3, r1, #88	; 0x58
     bc8:	ldr	r2, [pc, #12]	; bdc <h_hdl_whois+0x58>
     bcc:	add	r2, pc, r2
     bd0:	movw	r1, #310	; 0x136
     bd4:	b	820 <sendto_one_numeric@plt>
     bd8:	.word	0x000114c0
     bdc:	.word	0x0000091a

00000be0 <me_dehelper>:
     be0:	push	{r4, r5, fp, lr}
     be4:	add	fp, sp, #8
     be8:	mov	r4, r2
     bec:	ldr	r5, [fp, #8]
     bf0:	ldr	r0, [r5, #4]
     bf4:	bl	82c <find_person@plt>
     bf8:	cmp	r0, #0
     bfc:	beq	c28 <me_dehelper+0x48>
     c00:	mov	r1, r0
     c04:	ldrb	r0, [r0, #65]	; 0x41
     c08:	tst	r0, #32
     c0c:	popeq	{r4, r5, fp, pc}
     c10:	ldrh	r0, [r1, #80]	; 0x50
     c14:	cmp	r0, #64	; 0x40
     c18:	bne	c44 <me_dehelper+0x64>
     c1c:	mov	r0, r4
     c20:	pop	{r4, r5, fp, lr}
     c24:	b	e4c <do_dehelper>
     c28:	ldr	r3, [r5, #4]
     c2c:	ldr	r2, [pc, #20]	; c48 <me_dehelper+0x68>
     c30:	add	r2, pc, r2
     c34:	mov	r0, r4
     c38:	movw	r1, #401	; 0x191
     c3c:	pop	{r4, r5, fp, lr}
     c40:	b	820 <sendto_one_numeric@plt>
     c44:	pop	{r4, r5, fp, pc}
     c48:	.word	0x00000703

00000c4c <mo_dehelper>:
     c4c:	push	{r4, r5, fp, lr}
     c50:	add	fp, sp, #8
     c54:	sub	sp, sp, #8
     c58:	mov	r4, r2
     c5c:	ldr	r0, [r2, #24]
     c60:	cmp	r0, #0
     c64:	beq	ccc <mo_dehelper+0x80>
     c68:	ldr	r0, [r0, #36]	; 0x24
     c6c:	cmp	r0, #0
     c70:	beq	ccc <mo_dehelper+0x80>
     c74:	ldr	r5, [fp, #8]
     c78:	ldr	r1, [pc, #220]	; d5c <mo_dehelper+0x110>
     c7c:	add	r1, pc, r1
     c80:	bl	850 <privilegeset_in_set@plt>
     c84:	cmp	r0, #0
     c88:	beq	ccc <mo_dehelper+0x80>
     c8c:	ldr	r0, [r5, #4]
     c90:	bl	844 <find_named_person@plt>
     c94:	cmp	r0, #0
     c98:	beq	d3c <mo_dehelper+0xf0>
     c9c:	mov	r2, r0
     ca0:	ldrb	r0, [r0, #65]	; 0x41
     ca4:	tst	r0, #32
     ca8:	beq	d00 <mo_dehelper+0xb4>
     cac:	ldrh	r0, [r2, #80]	; 0x50
     cb0:	cmp	r0, #64	; 0x40
     cb4:	bne	d00 <mo_dehelper+0xb4>
     cb8:	mov	r0, r4
     cbc:	mov	r1, r2
     cc0:	sub	sp, fp, #8
     cc4:	pop	{r4, r5, fp, lr}
     cc8:	b	e4c <do_dehelper>
     ccc:	ldr	r0, [pc, #140]	; d60 <mo_dehelper+0x114>
     cd0:	add	r0, pc, r0
     cd4:	str	r0, [sp]
     cd8:	add	r3, r4, #88	; 0x58
     cdc:	ldr	r0, [pc, #128]	; d64 <mo_dehelper+0x118>
     ce0:	ldr	r0, [pc, r0]
     ce4:	add	r2, r0, #88	; 0x58
     ce8:	ldr	r1, [pc, #120]	; d68 <mo_dehelper+0x11c>
     cec:	add	r1, pc, r1
     cf0:	mov	r0, r4
     cf4:	bl	7cc <sendto_one@plt>
     cf8:	sub	sp, fp, #8
     cfc:	pop	{r4, r5, fp, pc}
     d00:	mov	r0, r2
     d04:	ldrb	r1, [r0, #396]!	; 0x18c
     d08:	cmp	r1, #0
     d0c:	addeq	r0, r2, #88	; 0x58
     d10:	ldr	r1, [r2, #32]
     d14:	ldrb	r3, [r4, #396]!	; 0x18c
     d18:	str	r0, [sp]
     d1c:	cmp	r3, #0
     d20:	subeq	r4, r4, #308	; 0x134
     d24:	add	r3, r1, #88	; 0x58
     d28:	ldr	r1, [pc, #60]	; d6c <mo_dehelper+0x120>
     d2c:	add	r1, pc, r1
     d30:	mov	r0, r2
     d34:	mov	r2, r4
     d38:	b	cf4 <mo_dehelper+0xa8>
     d3c:	ldr	r3, [r5, #4]
     d40:	ldr	r2, [pc, #40]	; d70 <mo_dehelper+0x124>
     d44:	add	r2, pc, r2
     d48:	mov	r0, r4
     d4c:	movw	r1, #401	; 0x191
     d50:	sub	sp, fp, #8
     d54:	pop	{r4, r5, fp, lr}
     d58:	b	820 <sendto_one_numeric@plt>
     d5c:	.word	0x00000682
     d60:	.word	0x00000633
     d64:	.word	0x00011378
     d68:	.word	0x00000620
     d6c:	.word	0x00000620
     d70:	.word	0x000005ef

00000d74 <_modinit>:
     d74:	push	{r4, r5, fp, lr}
     d78:	add	fp, sp, #8
     d7c:	bl	7f0 <find_umode_slot@plt>
     d80:	ldr	r4, [pc, #100]	; dec <_modinit+0x78>
     d84:	ldr	r4, [pc, r4]
     d88:	str	r0, [r4, #288]	; 0x120
     d8c:	bl	868 <construct_umodebuf@plt>
     d90:	ldr	r0, [pc, #88]	; df0 <_modinit+0x7c>
     d94:	ldr	r0, [pc, r0]
     d98:	ldr	r5, [r0]
     d9c:	cmp	r5, #0
     da0:	bne	db4 <_modinit+0x40>
     da4:	b	de4 <_modinit+0x70>
     da8:	ldr	r5, [r5, #8]
     dac:	cmp	r5, #0
     db0:	beq	de4 <_modinit+0x70>
     db4:	ldr	r0, [r5]
     db8:	ldrh	r1, [r0, #80]	; 0x50
     dbc:	cmp	r1, #64	; 0x40
     dc0:	bne	da8 <_modinit+0x34>
     dc4:	ldr	r1, [r0, #24]
     dc8:	cmp	r1, #0
     dcc:	beq	da8 <_modinit+0x34>
     dd0:	ldr	r1, [r0, #56]	; 0x38
     dd4:	ldr	r2, [r4, #288]	; 0x120
     dd8:	tst	r2, r1
     ddc:	blne	ef4 <helper_add>
     de0:	b	da8 <_modinit+0x34>
     de4:	mov	r0, #0
     de8:	pop	{r4, r5, fp, pc}
     dec:	.word	0x000112c4
     df0:	.word	0x000112bc

00000df4 <_moddeinit>:
     df4:	push	{r4, r5, fp, lr}
     df8:	add	fp, sp, #8
     dfc:	ldr	r0, [pc, #64]	; e44 <_moddeinit+0x50>
     e00:	ldr	r0, [pc, r0]
     e04:	mov	r1, #0
     e08:	str	r1, [r0, #288]	; 0x120
     e0c:	bl	868 <construct_umodebuf@plt>
     e10:	ldr	r4, [pc, #48]	; e48 <_moddeinit+0x54>
     e14:	ldr	r4, [pc, r4]
     e18:	cmp	r4, #0
     e1c:	popeq	{r4, r5, fp, pc}
     e20:	ldr	r5, [r4, #8]
     e24:	mov	r0, r4
     e28:	bl	1214 <rb_dlinkDelete>
     e2c:	mov	r0, r4
     e30:	bl	7fc <rb_free_rb_dlink_node@plt>
     e34:	cmp	r5, #0
     e38:	mov	r4, r5
     e3c:	bne	e20 <_moddeinit+0x2c>
     e40:	pop	{r4, r5, fp, pc}
     e44:	.word	0x00011248
     e48:	.word	0x00011318

00000e4c <do_dehelper>:
     e4c:	push	{r4, r5, r6, sl, fp, lr}
     e50:	add	fp, sp, #16
     e54:	sub	sp, sp, #24
     e58:	mov	r4, r1
     e5c:	ldr	r1, [r1, #56]	; 0x38
     e60:	ldr	r2, [pc, #124]	; ee4 <do_dehelper+0x98>
     e64:	ldr	r2, [pc, r2]
     e68:	ldr	r2, [r2, #288]	; 0x120
     e6c:	tst	r2, r1
     e70:	beq	edc <do_dehelper+0x90>
     e74:	add	r6, r4, #88	; 0x58
     e78:	str	r6, [sp]
     e7c:	add	r5, r0, #88	; 0x58
     e80:	ldr	r2, [pc, #96]	; ee8 <do_dehelper+0x9c>
     e84:	add	r2, pc, r2
     e88:	mov	r0, #256	; 0x100
     e8c:	mov	r1, #256	; 0x100
     e90:	mov	r3, r5
     e94:	bl	7e4 <sendto_realops_snomask@plt>
     e98:	ldr	r1, [pc, #76]	; eec <do_dehelper+0xa0>
     e9c:	add	r1, pc, r1
     ea0:	mov	r0, r4
     ea4:	mov	r2, r5
     ea8:	bl	838 <sendto_one_notice@plt>
     eac:	mov	r0, #0
     eb0:	str	r0, [sp, #20]
     eb4:	ldr	r0, [pc, #52]	; ef0 <do_dehelper+0xa4>
     eb8:	add	r0, pc, r0
     ebc:	str	r0, [sp, #16]
     ec0:	str	r6, [sp, #8]
     ec4:	str	r6, [sp, #12]
     ec8:	add	r3, sp, #8
     ecc:	mov	r0, r4
     ed0:	mov	r1, r4
     ed4:	mov	r2, #3
     ed8:	bl	7d8 <user_mode@plt>
     edc:	sub	sp, fp, #16
     ee0:	pop	{r4, r5, r6, sl, fp, pc}
     ee4:	.word	0x000111e4
     ee8:	.word	0x000004e1
     eec:	.word	0x000004e4
     ef0:	.word	0x000004e9

00000ef4 <helper_add>:
     ef4:	push	{r4, sl, fp, lr}
     ef8:	add	fp, sp, #8
     efc:	mov	r4, r0
     f00:	bl	f20 <rb_dlinkFind>
     f04:	cmp	r0, #0
     f08:	popne	{r4, sl, fp, pc}
     f0c:	bl	814 <rb_make_rb_dlink_node@plt>
     f10:	mov	r1, r0
     f14:	mov	r0, r4
     f18:	pop	{r4, sl, fp, lr}
     f1c:	b	f9c <rb_dlinkAdd>

00000f20 <rb_dlinkFind>:
     f20:	push	{fp, lr}
     f24:	mov	fp, sp
     f28:	cmp	r0, #0
     f2c:	beq	f6c <rb_dlinkFind+0x4c>
     f30:	mov	r1, r0
     f34:	mov	r0, #0
     f38:	ldr	r2, [pc, #76]	; f8c <rb_dlinkFind+0x6c>
     f3c:	ldr	r2, [pc, r2]
     f40:	cmp	r2, #0
     f44:	beq	f60 <rb_dlinkFind+0x40>
     f48:	ldr	r3, [r2]
     f4c:	cmp	r3, r1
     f50:	beq	f64 <rb_dlinkFind+0x44>
     f54:	ldr	r2, [r2, #8]
     f58:	cmp	r2, #0
     f5c:	bne	f48 <rb_dlinkFind+0x28>
     f60:	pop	{fp, pc}
     f64:	mov	r0, r2
     f68:	pop	{fp, pc}
     f6c:	ldr	r0, [pc, #28]	; f90 <rb_dlinkFind+0x70>
     f70:	add	r0, pc, r0
     f74:	ldr	r1, [pc, #24]	; f94 <rb_dlinkFind+0x74>
     f78:	add	r1, pc, r1
     f7c:	ldr	r3, [pc, #20]	; f98 <rb_dlinkFind+0x78>
     f80:	add	r3, pc, r3
     f84:	movw	r2, #311	; 0x137
     f88:	bl	85c <__assert_fail@plt>
     f8c:	.word	0x000111f0
     f90:	.word	0x000004a7
     f94:	.word	0x0000044e
     f98:	.word	0x00000462

00000f9c <rb_dlinkAdd>:
     f9c:	push	{fp, lr}
     fa0:	mov	fp, sp
     fa4:	cmp	r0, #0
     fa8:	beq	1008 <rb_dlinkAdd+0x6c>
     fac:	cmp	r1, #0
     fb0:	beq	1028 <rb_dlinkAdd+0x8c>
     fb4:	mov	r2, #0
     fb8:	stm	r1, {r0, r2}
     fbc:	ldr	r2, [pc, #132]	; 1048 <rb_dlinkAdd+0xac>
     fc0:	ldr	r2, [pc, r2]
     fc4:	str	r2, [r1, #8]
     fc8:	cmp	r2, #0
     fcc:	ldr	r0, [pc, #120]	; 104c <rb_dlinkAdd+0xb0>
     fd0:	add	r0, pc, r0
     fd4:	beq	fe4 <rb_dlinkAdd+0x48>
     fd8:	add	r2, r2, #4
     fdc:	str	r1, [r2]
     fe0:	b	ff4 <rb_dlinkAdd+0x58>
     fe4:	mov	r2, r0
     fe8:	ldr	r3, [r2, #4]!
     fec:	cmp	r3, #0
     ff0:	streq	r1, [r2]
     ff4:	str	r1, [r0]
     ff8:	ldr	r1, [r0, #8]
     ffc:	add	r1, r1, #1
    1000:	str	r1, [r0, #8]
    1004:	pop	{fp, pc}
    1008:	ldr	r0, [pc, #64]	; 1050 <rb_dlinkAdd+0xb4>
    100c:	add	r0, pc, r0
    1010:	ldr	r1, [pc, #60]	; 1054 <rb_dlinkAdd+0xb8>
    1014:	add	r1, pc, r1
    1018:	ldr	r3, [pc, #56]	; 1058 <rb_dlinkAdd+0xbc>
    101c:	add	r3, pc, r3
    1020:	mov	r2, #143	; 0x8f
    1024:	bl	85c <__assert_fail@plt>
    1028:	ldr	r0, [pc, #44]	; 105c <rb_dlinkAdd+0xc0>
    102c:	add	r0, pc, r0
    1030:	ldr	r1, [pc, #40]	; 1060 <rb_dlinkAdd+0xc4>
    1034:	add	r1, pc, r1
    1038:	ldr	r3, [pc, #36]	; 1064 <rb_dlinkAdd+0xc8>
    103c:	add	r3, pc, r3
    1040:	mov	r2, #144	; 0x90
    1044:	bl	85c <__assert_fail@plt>
    1048:	.word	0x0001116c
    104c:	.word	0x0001115c
    1050:	.word	0x0000040b
    1054:	.word	0x000003b2
    1058:	.word	0x00000408
    105c:	.word	0x00000433
    1060:	.word	0x00000392
    1064:	.word	0x000003e8

00001068 <recurse_client_exit>:
    1068:	push	{r4, r5, fp, lr}
    106c:	add	fp, sp, #8
    1070:	mov	r4, r0
    1074:	ldrh	r0, [r0, #80]	; 0x50
    1078:	cmp	r0, #32
    107c:	beq	10b8 <recurse_client_exit+0x50>
    1080:	cmp	r0, #64	; 0x40
    1084:	bne	1100 <recurse_client_exit+0x98>
    1088:	ldr	r0, [r4, #24]
    108c:	cmp	r0, #0
    1090:	beq	1100 <recurse_client_exit+0x98>
    1094:	ldr	r0, [r4, #56]	; 0x38
    1098:	ldr	r1, [pc, #100]	; 1104 <recurse_client_exit+0x9c>
    109c:	ldr	r1, [pc, r1]
    10a0:	ldr	r1, [r1, #288]	; 0x120
    10a4:	tst	r1, r0
    10a8:	popeq	{r4, r5, fp, pc}
    10ac:	mov	r0, r4
    10b0:	pop	{r4, r5, fp, lr}
    10b4:	b	1108 <helper_delete>
    10b8:	ldr	r0, [r4, #28]
    10bc:	ldr	r5, [r0, #48]	; 0x30
    10c0:	cmp	r5, #0
    10c4:	beq	10dc <recurse_client_exit+0x74>
    10c8:	ldr	r0, [r5]
    10cc:	bl	1068 <recurse_client_exit>
    10d0:	ldr	r5, [r5, #8]
    10d4:	cmp	r5, #0
    10d8:	bne	10c8 <recurse_client_exit+0x60>
    10dc:	ldr	r0, [r4, #28]
    10e0:	ldr	r4, [r0, #36]	; 0x24
    10e4:	cmp	r4, #0
    10e8:	beq	1100 <recurse_client_exit+0x98>
    10ec:	ldr	r0, [r4]
    10f0:	bl	1068 <recurse_client_exit>
    10f4:	ldr	r4, [r4, #8]
    10f8:	cmp	r4, #0
    10fc:	bne	10ec <recurse_client_exit+0x84>
    1100:	pop	{r4, r5, fp, pc}
    1104:	.word	0x00010fac

00001108 <helper_delete>:
    1108:	b	110c <rb_dlinkFindDestroy>

0000110c <rb_dlinkFindDestroy>:
    110c:	push	{fp, lr}
    1110:	mov	fp, sp
    1114:	cmp	r0, #0
    1118:	beq	1130 <rb_dlinkFindDestroy+0x24>
    111c:	bl	115c <rb_dlinkFindDelete>
    1120:	cmp	r0, #0
    1124:	popeq	{fp, pc}
    1128:	pop	{fp, lr}
    112c:	b	7fc <rb_free_rb_dlink_node@plt>
    1130:	ldr	r0, [pc, #24]	; 1150 <rb_dlinkFindDestroy+0x44>
    1134:	add	r0, pc, r0
    1138:	ldr	r1, [pc, #20]	; 1154 <rb_dlinkFindDestroy+0x48>
    113c:	add	r1, pc, r1
    1140:	ldr	r3, [pc, #16]	; 1158 <rb_dlinkFindDestroy+0x4c>
    1144:	add	r3, pc, r3
    1148:	mov	r2, #288	; 0x120
    114c:	bl	85c <__assert_fail@plt>
    1150:	.word	0x000002e3
    1154:	.word	0x0000028a
    1158:	.word	0x00000325

0000115c <rb_dlinkFindDelete>:
    115c:	push	{fp, lr}
    1160:	mov	fp, sp
    1164:	cmp	r0, #0
    1168:	beq	11e0 <rb_dlinkFindDelete+0x84>
    116c:	mov	r1, r0
    1170:	ldr	r2, [pc, #136]	; 1200 <rb_dlinkFindDelete+0xa4>
    1174:	ldr	r2, [pc, r2]
    1178:	mov	r0, r2
    117c:	cmp	r2, #0
    1180:	beq	11dc <rb_dlinkFindDelete+0x80>
    1184:	ldr	r3, [r0]
    1188:	ldr	r2, [r0, #8]
    118c:	cmp	r3, r1
    1190:	bne	1178 <rb_dlinkFindDelete+0x1c>
    1194:	ldr	ip, [pc, #104]	; 1204 <rb_dlinkFindDelete+0xa8>
    1198:	add	ip, pc, ip
    119c:	add	r3, r2, #4
    11a0:	cmp	r2, #0
    11a4:	addeq	r3, ip, #4
    11a8:	ldr	r2, [r0, #4]
    11ac:	str	r2, [r3]
    11b0:	ldmib	r0, {r2, r3}
    11b4:	cmp	r2, #0
    11b8:	mov	r1, ip
    11bc:	addne	r1, r2, #8
    11c0:	str	r3, [r1]
    11c4:	mov	r1, #0
    11c8:	str	r1, [r0, #4]
    11cc:	str	r1, [r0, #8]
    11d0:	ldr	r1, [ip, #8]
    11d4:	sub	r1, r1, #1
    11d8:	str	r1, [ip, #8]
    11dc:	pop	{fp, pc}
    11e0:	ldr	r0, [pc, #32]	; 1208 <rb_dlinkFindDelete+0xac>
    11e4:	add	r0, pc, r0
    11e8:	ldr	r1, [pc, #28]	; 120c <rb_dlinkFindDelete+0xb0>
    11ec:	add	r1, pc, r1
    11f0:	ldr	r3, [pc, #24]	; 1210 <rb_dlinkFindDelete+0xb4>
    11f4:	add	r3, pc, r3
    11f8:	movw	r2, #259	; 0x103
    11fc:	bl	85c <__assert_fail@plt>
    1200:	.word	0x00010fb8
    1204:	.word	0x00010f94
    1208:	.word	0x00000233
    120c:	.word	0x000001da
    1210:	.word	0x000002a6

00001214 <rb_dlinkDelete>:
    1214:	push	{fp, lr}
    1218:	mov	fp, sp
    121c:	cmp	r0, #0
    1220:	beq	1270 <rb_dlinkDelete+0x5c>
    1224:	ldr	ip, [pc, #100]	; 1290 <rb_dlinkDelete+0x7c>
    1228:	add	ip, pc, ip
    122c:	ldmib	r0, {r2, r3}
    1230:	add	r1, r3, #4
    1234:	cmp	r3, #0
    1238:	addeq	r1, ip, #4
    123c:	str	r2, [r1]
    1240:	ldmib	r0, {r1, r2}
    1244:	cmp	r1, #0
    1248:	mov	r3, ip
    124c:	addne	r3, r1, #8
    1250:	str	r2, [r3]
    1254:	mov	r1, #0
    1258:	str	r1, [r0, #4]
    125c:	str	r1, [r0, #8]
    1260:	ldr	r0, [ip, #8]
    1264:	sub	r0, r0, #1
    1268:	str	r0, [ip, #8]
    126c:	pop	{fp, pc}
    1270:	ldr	r0, [pc, #28]	; 1294 <rb_dlinkDelete+0x80>
    1274:	add	r0, pc, r0
    1278:	ldr	r1, [pc, #24]	; 1298 <rb_dlinkDelete+0x84>
    127c:	add	r1, pc, r1
    1280:	ldr	r3, [pc, #20]	; 129c <rb_dlinkDelete+0x88>
    1284:	add	r3, pc, r3
    1288:	mov	r2, #235	; 0xeb
    128c:	bl	85c <__assert_fail@plt>
    1290:	.word	0x00010f04
    1294:	.word	0x000001eb
    1298:	.word	0x0000014a
    129c:	.word	0x0000027d

Disassembly of section .fini:

000012a0 <_fini>:
    12a0:	push	{r3, lr}
    12a4:	pop	{r3, pc}
