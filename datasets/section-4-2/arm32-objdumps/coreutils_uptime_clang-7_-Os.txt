
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

000111c8 <.init>:
   111c8:	push	{r3, lr}
   111cc:	bl	1156c <putchar_unlocked@plt+0x48>
   111d0:	pop	{r3, pc}

Disassembly of section .plt:

000111d4 <calloc@plt-0x14>:
   111d4:	push	{lr}		; (str lr, [sp, #-4]!)
   111d8:	ldr	lr, [pc, #4]	; 111e4 <calloc@plt-0x4>
   111dc:	add	lr, pc, lr
   111e0:	ldr	pc, [lr, #8]!
   111e4:	andeq	r6, r1, ip, lsl lr

000111e8 <calloc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3612]!	; 0xe1c

000111f4 <fputs_unlocked@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3604]!	; 0xe14

00011200 <gmtime_r@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3596]!	; 0xe0c

0001120c <strcmp@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3588]!	; 0xe04

00011218 <mktime@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3580]!	; 0xdfc

00011224 <fflush@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011230 <utmpxname@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3564]!	; 0xdec

0001123c <free@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3556]!	; 0xde4

00011248 <_exit@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3548]!	; 0xddc

00011254 <memcpy@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011260 <mbsinit@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3532]!	; 0xdcc

0001126c <time@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3524]!	; 0xdc4

00011278 <memcmp@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3516]!	; 0xdbc

00011284 <dcgettext@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011290 <setutxent@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3500]!	; 0xdac

0001129c <realloc@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3492]!	; 0xda4

000112a8 <localtime_r@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b4 <textdomain@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3476]!	; 0xd94

000112c0 <iswprint@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112cc <tzset@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3460]!	; 0xd84

000112d8 <fwrite@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e4 <lseek64@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3444]!	; 0xd74

000112f0 <__ctype_get_mb_cur_max@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3436]!	; 0xd6c

000112fc <__fpending@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3428]!	; 0xd64

00011308 <ferror_unlocked@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #90112	; 0x16000
   11310:	ldr	pc, [ip, #3420]!	; 0xd5c

00011314 <mbrtowc@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #90112	; 0x16000
   1131c:	ldr	pc, [ip, #3412]!	; 0xd54

00011320 <error@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #90112	; 0x16000
   11328:	ldr	pc, [ip, #3404]!	; 0xd4c

0001132c <getenv@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #90112	; 0x16000
   11334:	ldr	pc, [ip, #3396]!	; 0xd44

00011338 <malloc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #90112	; 0x16000
   11340:	ldr	pc, [ip, #3388]!	; 0xd3c

00011344 <__libc_start_main@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #90112	; 0x16000
   1134c:	ldr	pc, [ip, #3380]!	; 0xd34

00011350 <strftime@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #90112	; 0x16000
   11358:	ldr	pc, [ip, #3372]!	; 0xd2c

0001135c <__freading@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #90112	; 0x16000
   11364:	ldr	pc, [ip, #3364]!	; 0xd24

00011368 <localtime@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #90112	; 0x16000
   11370:	ldr	pc, [ip, #3356]!	; 0xd1c

00011374 <__ctype_tolower_loc@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #90112	; 0x16000
   1137c:	ldr	pc, [ip, #3348]!	; 0xd14

00011380 <__ctype_toupper_loc@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #90112	; 0x16000
   11388:	ldr	pc, [ip, #3340]!	; 0xd0c

0001138c <__gmon_start__@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #90112	; 0x16000
   11394:	ldr	pc, [ip, #3332]!	; 0xd04

00011398 <getopt_long@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #90112	; 0x16000
   113a0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a4 <kill@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #90112	; 0x16000
   113ac:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b0 <__ctype_b_loc@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #90112	; 0x16000
   113b8:	ldr	pc, [ip, #3308]!	; 0xcec

000113bc <exit@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #90112	; 0x16000
   113c4:	ldr	pc, [ip, #3300]!	; 0xce4

000113c8 <strlen@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #90112	; 0x16000
   113d0:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d4 <setenv@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #90112	; 0x16000
   113dc:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e0 <__errno_location@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #90112	; 0x16000
   113e8:	ldr	pc, [ip, #3276]!	; 0xccc

000113ec <__cxa_atexit@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #90112	; 0x16000
   113f4:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f8 <memset@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #90112	; 0x16000
   11400:	ldr	pc, [ip, #3260]!	; 0xcbc

00011404 <strncpy@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #90112	; 0x16000
   1140c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011410 <__printf_chk@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #90112	; 0x16000
   11418:	ldr	pc, [ip, #3244]!	; 0xcac

0001141c <fileno@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #90112	; 0x16000
   11424:	ldr	pc, [ip, #3236]!	; 0xca4

00011428 <__fprintf_chk@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #90112	; 0x16000
   11430:	ldr	pc, [ip, #3228]!	; 0xc9c

00011434 <fclose@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #90112	; 0x16000
   1143c:	ldr	pc, [ip, #3220]!	; 0xc94

00011440 <fseeko64@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #90112	; 0x16000
   11448:	ldr	pc, [ip, #3212]!	; 0xc8c

0001144c <getloadavg@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #90112	; 0x16000
   11454:	ldr	pc, [ip, #3204]!	; 0xc84

00011458 <strtod_l@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #90112	; 0x16000
   11460:	ldr	pc, [ip, #3196]!	; 0xc7c

00011464 <endutxent@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #90112	; 0x16000
   1146c:	ldr	pc, [ip, #3188]!	; 0xc74

00011470 <setlocale@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #90112	; 0x16000
   11478:	ldr	pc, [ip, #3180]!	; 0xc6c

0001147c <strrchr@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #90112	; 0x16000
   11484:	ldr	pc, [ip, #3172]!	; 0xc64

00011488 <nl_langinfo@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #90112	; 0x16000
   11490:	ldr	pc, [ip, #3164]!	; 0xc5c

00011494 <fputc@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #90112	; 0x16000
   1149c:	ldr	pc, [ip, #3156]!	; 0xc54

000114a0 <newlocale@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #90112	; 0x16000
   114a8:	ldr	pc, [ip, #3148]!	; 0xc4c

000114ac <timegm@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #90112	; 0x16000
   114b4:	ldr	pc, [ip, #3140]!	; 0xc44

000114b8 <fopen64@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #90112	; 0x16000
   114c0:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c4 <fgets_unlocked@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #90112	; 0x16000
   114cc:	ldr	pc, [ip, #3124]!	; 0xc34

000114d0 <bindtextdomain@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #90112	; 0x16000
   114d8:	ldr	pc, [ip, #3116]!	; 0xc2c

000114dc <unsetenv@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #90112	; 0x16000
   114e4:	ldr	pc, [ip, #3108]!	; 0xc24

000114e8 <fputs@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #90112	; 0x16000
   114f0:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f4 <strncmp@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #90112	; 0x16000
   114fc:	ldr	pc, [ip, #3092]!	; 0xc14

00011500 <abort@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #90112	; 0x16000
   11508:	ldr	pc, [ip, #3084]!	; 0xc0c

0001150c <getutxent@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #90112	; 0x16000
   11514:	ldr	pc, [ip, #3076]!	; 0xc04

00011518 <dcngettext@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #90112	; 0x16000
   11520:	ldr	pc, [ip, #3068]!	; 0xbfc

00011524 <putchar_unlocked@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #90112	; 0x16000
   1152c:	ldr	pc, [ip, #3060]!	; 0xbf4

Disassembly of section .text:

00011530 <.text>:
   11530:	mov	fp, #0
   11534:	mov	lr, #0
   11538:	pop	{r1}		; (ldr r1, [sp], #4)
   1153c:	mov	r2, sp
   11540:	push	{r2}		; (str r2, [sp, #-4]!)
   11544:	push	{r0}		; (str r0, [sp, #-4]!)
   11548:	ldr	ip, [pc, #16]	; 11560 <putchar_unlocked@plt+0x3c>
   1154c:	push	{ip}		; (str ip, [sp, #-4]!)
   11550:	ldr	r0, [pc, #12]	; 11564 <putchar_unlocked@plt+0x40>
   11554:	ldr	r3, [pc, #12]	; 11568 <putchar_unlocked@plt+0x44>
   11558:	bl	11344 <__libc_start_main@plt>
   1155c:	bl	11500 <abort@plt>
   11560:	andeq	r6, r1, r4, lsr #15
   11564:	muleq	r1, r8, r8
   11568:	andeq	r6, r1, r4, asr #14
   1156c:	ldr	r3, [pc, #20]	; 11588 <putchar_unlocked@plt+0x64>
   11570:	ldr	r2, [pc, #20]	; 1158c <putchar_unlocked@plt+0x68>
   11574:	add	r3, pc, r3
   11578:	ldr	r2, [r3, r2]
   1157c:	cmp	r2, #0
   11580:	bxeq	lr
   11584:	b	1138c <__gmon_start__@plt>
   11588:	andeq	r6, r1, r4, lsl #21
   1158c:	andeq	r0, r0, r4, lsr #2
   11590:	ldr	r0, [pc, #24]	; 115b0 <putchar_unlocked@plt+0x8c>
   11594:	ldr	r3, [pc, #24]	; 115b4 <putchar_unlocked@plt+0x90>
   11598:	cmp	r3, r0
   1159c:	bxeq	lr
   115a0:	ldr	r3, [pc, #16]	; 115b8 <putchar_unlocked@plt+0x94>
   115a4:	cmp	r3, #0
   115a8:	bxeq	lr
   115ac:	bx	r3
   115b0:	andeq	r8, r2, r8, ror r1
   115b4:	andeq	r8, r2, r8, ror r1
   115b8:	andeq	r0, r0, r0
   115bc:	ldr	r0, [pc, #36]	; 115e8 <putchar_unlocked@plt+0xc4>
   115c0:	ldr	r1, [pc, #36]	; 115ec <putchar_unlocked@plt+0xc8>
   115c4:	sub	r1, r1, r0
   115c8:	asr	r1, r1, #2
   115cc:	add	r1, r1, r1, lsr #31
   115d0:	asrs	r1, r1, #1
   115d4:	bxeq	lr
   115d8:	ldr	r3, [pc, #16]	; 115f0 <putchar_unlocked@plt+0xcc>
   115dc:	cmp	r3, #0
   115e0:	bxeq	lr
   115e4:	bx	r3
   115e8:	andeq	r8, r2, r8, ror r1
   115ec:	andeq	r8, r2, r8, ror r1
   115f0:	andeq	r0, r0, r0
   115f4:	push	{r4, lr}
   115f8:	ldr	r4, [pc, #24]	; 11618 <putchar_unlocked@plt+0xf4>
   115fc:	ldrb	r3, [r4]
   11600:	cmp	r3, #0
   11604:	popne	{r4, pc}
   11608:	bl	11590 <putchar_unlocked@plt+0x6c>
   1160c:	mov	r3, #1
   11610:	strb	r3, [r4]
   11614:	pop	{r4, pc}
   11618:	muleq	r2, r4, r1
   1161c:	b	115bc <putchar_unlocked@plt+0x98>
   11620:	push	{fp, lr}
   11624:	mov	fp, sp
   11628:	sub	sp, sp, #56	; 0x38
   1162c:	mov	r8, r0
   11630:	cmp	r0, #0
   11634:	bne	11858 <putchar_unlocked@plt+0x334>
   11638:	movw	r1, #26611	; 0x67f3
   1163c:	mov	r0, #0
   11640:	mov	r2, #5
   11644:	movt	r1, #1
   11648:	bl	11284 <dcgettext@plt>
   1164c:	mov	r1, r0
   11650:	movw	r0, #33188	; 0x81a4
   11654:	movt	r0, #2
   11658:	ldr	r2, [r0]
   1165c:	mov	r0, #1
   11660:	bl	11410 <__printf_chk@plt>
   11664:	movw	r1, #26641	; 0x6811
   11668:	mov	r0, #0
   1166c:	mov	r2, #5
   11670:	movt	r1, #1
   11674:	bl	11284 <dcgettext@plt>
   11678:	mov	r1, r0
   1167c:	mov	r0, #1
   11680:	bl	11410 <__printf_chk@plt>
   11684:	movw	r1, #26826	; 0x68ca
   11688:	mov	r0, #0
   1168c:	mov	r2, #5
   11690:	movt	r1, #1
   11694:	bl	11284 <dcgettext@plt>
   11698:	mov	r1, r0
   1169c:	mov	r0, #1
   116a0:	bl	11410 <__printf_chk@plt>
   116a4:	movw	r1, #26910	; 0x691e
   116a8:	mov	r0, #0
   116ac:	mov	r2, #5
   116b0:	movt	r1, #1
   116b4:	bl	11284 <dcgettext@plt>
   116b8:	movw	r2, #26969	; 0x6959
   116bc:	movw	r3, #26983	; 0x6967
   116c0:	mov	r1, r0
   116c4:	mov	r0, #1
   116c8:	movt	r2, #1
   116cc:	movt	r3, #1
   116d0:	bl	11410 <__printf_chk@plt>
   116d4:	movw	r1, #26997	; 0x6975
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	movt	r1, #1
   116e4:	bl	11284 <dcgettext@plt>
   116e8:	movw	r9, #33164	; 0x818c
   116ec:	movt	r9, #2
   116f0:	ldr	r1, [r9]
   116f4:	bl	111f4 <fputs_unlocked@plt>
   116f8:	movw	r1, #27042	; 0x69a2
   116fc:	mov	r0, #0
   11700:	mov	r2, #5
   11704:	movt	r1, #1
   11708:	bl	11284 <dcgettext@plt>
   1170c:	ldr	r1, [r9]
   11710:	bl	111f4 <fputs_unlocked@plt>
   11714:	movw	r0, #27704	; 0x6c38
   11718:	mov	r6, sp
   1171c:	movt	r0, #1
   11720:	mov	r1, r6
   11724:	ldm	r0!, {r2, r3, r4, r5}
   11728:	stmia	r1!, {r2, r3, r4, r5}
   1172c:	ldm	r0!, {r2, r3, r4, r5, r7}
   11730:	stmia	r1!, {r2, r3, r4, r5, r7}
   11734:	ldm	r0, {r2, r3, r4, r5, r7}
   11738:	stm	r1, {r2, r3, r4, r5, r7}
   1173c:	movw	r1, #27196	; 0x6a3c
   11740:	movw	r5, #27513	; 0x6b79
   11744:	movt	r1, #1
   11748:	movt	r5, #1
   1174c:	mov	r0, r5
   11750:	bl	1120c <strcmp@plt>
   11754:	cmp	r0, #0
   11758:	ldrne	r1, [r6, #8]!
   1175c:	cmpne	r1, #0
   11760:	bne	1174c <putchar_unlocked@plt+0x228>
   11764:	ldr	r6, [r6, #4]
   11768:	movw	r1, #27291	; 0x6a9b
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	movt	r1, #1
   11778:	bl	11284 <dcgettext@plt>
   1177c:	movw	r2, #27120	; 0x69f0
   11780:	movw	r3, #27314	; 0x6ab2
   11784:	mov	r1, r0
   11788:	mov	r0, #1
   1178c:	movt	r2, #1
   11790:	movt	r3, #1
   11794:	bl	11410 <__printf_chk@plt>
   11798:	cmp	r6, #0
   1179c:	mov	r0, #5
   117a0:	mov	r1, #0
   117a4:	moveq	r6, r5
   117a8:	bl	11470 <setlocale@plt>
   117ac:	cmp	r0, #0
   117b0:	beq	117e8 <putchar_unlocked@plt+0x2c4>
   117b4:	movw	r1, #27354	; 0x6ada
   117b8:	mov	r2, #3
   117bc:	movt	r1, #1
   117c0:	bl	114f4 <strncmp@plt>
   117c4:	cmp	r0, #0
   117c8:	beq	117e8 <putchar_unlocked@plt+0x2c4>
   117cc:	movw	r1, #27358	; 0x6ade
   117d0:	mov	r0, #0
   117d4:	mov	r2, #5
   117d8:	movt	r1, #1
   117dc:	bl	11284 <dcgettext@plt>
   117e0:	ldr	r1, [r9]
   117e4:	bl	111f4 <fputs_unlocked@plt>
   117e8:	movw	r1, #27429	; 0x6b25
   117ec:	mov	r0, #0
   117f0:	mov	r2, #5
   117f4:	movt	r1, #1
   117f8:	bl	11284 <dcgettext@plt>
   117fc:	movw	r2, #27314	; 0x6ab2
   11800:	mov	r1, r0
   11804:	mov	r0, #1
   11808:	mov	r3, r5
   1180c:	movt	r2, #1
   11810:	bl	11410 <__printf_chk@plt>
   11814:	movw	r1, #27456	; 0x6b40
   11818:	mov	r0, #0
   1181c:	mov	r2, #5
   11820:	movt	r1, #1
   11824:	bl	11284 <dcgettext@plt>
   11828:	movw	r3, #26968	; 0x6958
   1182c:	mov	r1, r0
   11830:	movw	r0, #27224	; 0x6a58
   11834:	cmp	r6, r5
   11838:	mov	r2, r6
   1183c:	movt	r0, #1
   11840:	movt	r3, #1
   11844:	moveq	r3, r0
   11848:	mov	r0, #1
   1184c:	bl	11410 <__printf_chk@plt>
   11850:	mov	r0, r8
   11854:	bl	113bc <exit@plt>
   11858:	movw	r0, #33160	; 0x8188
   1185c:	movw	r1, #26572	; 0x67cc
   11860:	mov	r2, #5
   11864:	movt	r0, #2
   11868:	movt	r1, #1
   1186c:	ldr	r5, [r0]
   11870:	mov	r0, #0
   11874:	bl	11284 <dcgettext@plt>
   11878:	mov	r2, r0
   1187c:	movw	r0, #33188	; 0x81a4
   11880:	mov	r1, #1
   11884:	movt	r0, #2
   11888:	ldr	r3, [r0]
   1188c:	mov	r0, r5
   11890:	bl	11428 <__fprintf_chk@plt>
   11894:	b	11850 <putchar_unlocked@plt+0x32c>
   11898:	push	{r4, r5, r6, sl, fp, lr}
   1189c:	add	fp, sp, #16
   118a0:	sub	sp, sp, #32
   118a4:	mov	r5, r0
   118a8:	ldr	r0, [r1]
   118ac:	mov	r4, r1
   118b0:	bl	13924 <putchar_unlocked@plt+0x2400>
   118b4:	movw	r1, #26968	; 0x6958
   118b8:	mov	r0, #6
   118bc:	movt	r1, #1
   118c0:	bl	11470 <setlocale@plt>
   118c4:	movw	r6, #27124	; 0x69f4
   118c8:	movw	r1, #27096	; 0x69d8
   118cc:	movt	r6, #1
   118d0:	movt	r1, #1
   118d4:	mov	r0, r6
   118d8:	bl	114d0 <bindtextdomain@plt>
   118dc:	mov	r0, r6
   118e0:	bl	112b4 <textdomain@plt>
   118e4:	movw	r0, #7776	; 0x1e60
   118e8:	movt	r0, #1
   118ec:	bl	167a8 <putchar_unlocked@plt+0x5284>
   118f0:	movw	r0, #33072	; 0x8130
   118f4:	movw	r3, #27151	; 0x6a0f
   118f8:	movw	r1, #5664	; 0x1620
   118fc:	mov	r2, #1
   11900:	movw	lr, #27167	; 0x6a1f
   11904:	movw	r6, #27134	; 0x69fe
   11908:	mov	ip, #0
   1190c:	movt	r0, #2
   11910:	movt	r3, #1
   11914:	movt	r1, #1
   11918:	movt	lr, #1
   1191c:	movt	r6, #1
   11920:	ldr	r0, [r0]
   11924:	stm	sp, {r0, r2}
   11928:	movw	r2, #27513	; 0x6b79
   1192c:	str	r3, [sp, #16]
   11930:	movw	r3, #27120	; 0x69f0
   11934:	str	r1, [sp, #8]
   11938:	mov	r0, r5
   1193c:	mov	r1, r4
   11940:	str	r6, [sp, #12]
   11944:	str	lr, [sp, #20]
   11948:	str	ip, [sp, #24]
   1194c:	movt	r2, #1
   11950:	movt	r3, #1
   11954:	bl	1385c <putchar_unlocked@plt+0x2338>
   11958:	movw	r6, #33152	; 0x8180
   1195c:	movt	r6, #2
   11960:	ldr	r0, [r6]
   11964:	sub	r1, r5, r0
   11968:	cmp	r1, #1
   1196c:	beq	11988 <putchar_unlocked@plt+0x464>
   11970:	cmp	r1, #0
   11974:	bne	11994 <putchar_unlocked@plt+0x470>
   11978:	movw	r0, #26969	; 0x6959
   1197c:	mov	r1, #1
   11980:	movt	r0, #1
   11984:	bl	119d8 <putchar_unlocked@plt+0x4b4>
   11988:	ldr	r0, [r4, r0, lsl #2]
   1198c:	mov	r1, #0
   11990:	bl	119d8 <putchar_unlocked@plt+0x4b4>
   11994:	movw	r1, #27179	; 0x6a2b
   11998:	mov	r0, #0
   1199c:	mov	r2, #5
   119a0:	movt	r1, #1
   119a4:	bl	11284 <dcgettext@plt>
   119a8:	mov	r5, r0
   119ac:	ldr	r0, [r6]
   119b0:	add	r0, r4, r0, lsl #2
   119b4:	ldr	r0, [r0, #4]
   119b8:	bl	15328 <putchar_unlocked@plt+0x3e04>
   119bc:	mov	r3, r0
   119c0:	mov	r0, #0
   119c4:	mov	r1, #0
   119c8:	mov	r2, r5
   119cc:	bl	11320 <error@plt>
   119d0:	mov	r0, #1
   119d4:	bl	11620 <putchar_unlocked@plt+0xfc>
   119d8:	push	{fp, lr}
   119dc:	mov	fp, sp
   119e0:	sub	sp, sp, #8
   119e4:	mov	r4, r0
   119e8:	mov	r0, #0
   119ec:	mov	r3, r1
   119f0:	add	r1, sp, #4
   119f4:	mov	r2, sp
   119f8:	str	r0, [sp]
   119fc:	mov	r0, r4
   11a00:	bl	154c8 <putchar_unlocked@plt+0x3fa4>
   11a04:	cmp	r0, #0
   11a08:	bne	11a20 <putchar_unlocked@plt+0x4fc>
   11a0c:	ldr	r1, [sp]
   11a10:	ldr	r0, [sp, #4]
   11a14:	bl	11a50 <putchar_unlocked@plt+0x52c>
   11a18:	mov	r0, #0
   11a1c:	bl	113bc <exit@plt>
   11a20:	bl	113e0 <__errno_location@plt>
   11a24:	ldr	r5, [r0]
   11a28:	mov	r0, #0
   11a2c:	mov	r1, #3
   11a30:	mov	r2, r4
   11a34:	bl	15194 <putchar_unlocked@plt+0x3c70>
   11a38:	movw	r2, #27793	; 0x6c91
   11a3c:	mov	r3, r0
   11a40:	mov	r0, #1
   11a44:	mov	r1, r5
   11a48:	movt	r2, #1
   11a4c:	bl	11320 <error@plt>
   11a50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a54:	add	fp, sp, #24
   11a58:	sub	sp, sp, #16
   11a5c:	sub	sp, sp, #8192	; 0x2000
   11a60:	mov	r5, r1
   11a64:	movw	r1, #27658	; 0x6c0a
   11a68:	mov	r6, r0
   11a6c:	movw	r0, #27507	; 0x6b73
   11a70:	movt	r0, #1
   11a74:	movt	r1, #1
   11a78:	bl	114b8 <fopen64@plt>
   11a7c:	mov	r7, #0
   11a80:	cmp	r0, #0
   11a84:	mov	r9, #0
   11a88:	beq	11b00 <putchar_unlocked@plt+0x5dc>
   11a8c:	mov	r4, r0
   11a90:	add	r8, sp, #8
   11a94:	mov	r1, #8192	; 0x2000
   11a98:	mov	r0, r8
   11a9c:	mov	r2, r4
   11aa0:	bl	114c4 <fgets_unlocked@plt>
   11aa4:	mov	r9, #0
   11aa8:	cmp	r0, r8
   11aac:	bne	11af8 <putchar_unlocked@plt+0x5d4>
   11ab0:	sub	r1, fp, #32
   11ab4:	mov	r0, r8
   11ab8:	bl	11dd8 <putchar_unlocked@plt+0x8b4>
   11abc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ac0:	cmp	r8, r0
   11ac4:	beq	11af4 <putchar_unlocked@plt+0x5d0>
   11ac8:	vldr	d16, [pc, #768]	; 11dd0 <putchar_unlocked@plt+0x8ac>
   11acc:	vcvt.s32.f64	s2, d0
   11ad0:	mvn	r0, #0
   11ad4:	vmov	r9, s2
   11ad8:	vcmpe.f64	d0, d16
   11adc:	vmrs	APSR_nzcv, fpscr
   11ae0:	vcmpe.f64	d0, #0.0
   11ae4:	movpl	r9, r0
   11ae8:	vmrs	APSR_nzcv, fpscr
   11aec:	movlt	r9, r0
   11af0:	b	11af8 <putchar_unlocked@plt+0x5d4>
   11af4:	mov	r9, #0
   11af8:	mov	r0, r4
   11afc:	bl	11f48 <putchar_unlocked@plt+0xa24>
   11b00:	cmp	r6, #0
   11b04:	mov	r4, #0
   11b08:	beq	11b50 <putchar_unlocked@plt+0x62c>
   11b0c:	mov	r4, #0
   11b10:	mov	r7, #0
   11b14:	ldrb	r0, [r5, #44]	; 0x2c
   11b18:	ldrh	r1, [r5]
   11b1c:	sub	r6, r6, #1
   11b20:	cmp	r0, #0
   11b24:	sub	r2, r1, #7
   11b28:	movwne	r0, #1
   11b2c:	cmp	r1, #2
   11b30:	clz	r2, r2
   11b34:	ldreq	r7, [r5, #340]	; 0x154
   11b38:	lsr	r2, r2, #5
   11b3c:	add	r5, r5, #384	; 0x180
   11b40:	cmp	r6, #0
   11b44:	and	r0, r2, r0
   11b48:	add	r4, r4, r0
   11b4c:	bne	11b14 <putchar_unlocked@plt+0x5f0>
   11b50:	mov	r0, #0
   11b54:	bl	1126c <time@plt>
   11b58:	cmp	r9, #0
   11b5c:	str	r0, [fp, #-32]	; 0xffffffe0
   11b60:	bne	11b70 <putchar_unlocked@plt+0x64c>
   11b64:	cmp	r7, #0
   11b68:	beq	11da4 <putchar_unlocked@plt+0x880>
   11b6c:	sub	r9, r0, r7
   11b70:	sub	r0, fp, #32
   11b74:	bl	11368 <localtime@plt>
   11b78:	cmp	r0, #0
   11b7c:	beq	11bc4 <putchar_unlocked@plt+0x6a0>
   11b80:	mov	r5, r0
   11b84:	movw	r0, #33164	; 0x818c
   11b88:	movw	r1, #27543	; 0x6b97
   11b8c:	mov	r2, #5
   11b90:	mov	r7, #0
   11b94:	movt	r0, #2
   11b98:	movt	r1, #1
   11b9c:	ldr	r6, [r0]
   11ba0:	mov	r0, #0
   11ba4:	bl	11284 <dcgettext@plt>
   11ba8:	mov	r1, r0
   11bac:	mov	r0, r6
   11bb0:	mov	r2, r5
   11bb4:	mov	r3, #0
   11bb8:	str	r7, [sp]
   11bbc:	bl	12040 <putchar_unlocked@plt+0xb1c>
   11bc0:	b	11be4 <putchar_unlocked@plt+0x6c0>
   11bc4:	movw	r1, #27555	; 0x6ba3
   11bc8:	mov	r0, #0
   11bcc:	mov	r2, #5
   11bd0:	movt	r1, #1
   11bd4:	bl	11284 <dcgettext@plt>
   11bd8:	mov	r1, r0
   11bdc:	mov	r0, #1
   11be0:	bl	11410 <__printf_chk@plt>
   11be4:	cmn	r9, #1
   11be8:	beq	11c8c <putchar_unlocked@plt+0x768>
   11bec:	movw	r0, #17671	; 0x4507
   11bf0:	movt	r0, #49710	; 0xc22e
   11bf4:	smmla	r0, r9, r0, r9
   11bf8:	asr	r1, r0, #16
   11bfc:	add	r6, r1, r0, lsr #31
   11c00:	movw	r0, #44672	; 0xae80
   11c04:	movw	r1, #46021	; 0xb3c5
   11c08:	movt	r0, #65534	; 0xfffe
   11c0c:	movt	r1, #37282	; 0x91a2
   11c10:	mla	r0, r6, r0, r9
   11c14:	smmla	r1, r0, r1, r0
   11c18:	asr	r2, r1, #11
   11c1c:	add	r5, r2, r1, lsr #31
   11c20:	movw	r1, #61936	; 0xf1f0
   11c24:	movt	r1, #65535	; 0xffff
   11c28:	mla	r0, r5, r1, r0
   11c2c:	movw	r1, #34953	; 0x8889
   11c30:	movt	r1, #34952	; 0x8888
   11c34:	smmla	r0, r0, r1, r0
   11c38:	asr	r1, r0, #5
   11c3c:	add	r8, r1, r0, lsr #31
   11c40:	movw	r0, #20864	; 0x5180
   11c44:	movt	r0, #1
   11c48:	cmp	r9, r0
   11c4c:	blt	11cb0 <putchar_unlocked@plt+0x78c>
   11c50:	movw	r1, #27588	; 0x6bc4
   11c54:	movw	r2, #27611	; 0x6bdb
   11c58:	mov	r0, #5
   11c5c:	mov	r3, r6
   11c60:	str	r0, [sp]
   11c64:	movt	r1, #1
   11c68:	movt	r2, #1
   11c6c:	mov	r0, #0
   11c70:	bl	11518 <dcngettext@plt>
   11c74:	mov	r1, r0
   11c78:	str	r8, [sp]
   11c7c:	mov	r0, #1
   11c80:	mov	r2, r6
   11c84:	mov	r3, r5
   11c88:	b	11cd4 <putchar_unlocked@plt+0x7b0>
   11c8c:	movw	r1, #27566	; 0x6bae
   11c90:	mov	r0, #0
   11c94:	mov	r2, #5
   11c98:	movt	r1, #1
   11c9c:	bl	11284 <dcgettext@plt>
   11ca0:	mov	r1, r0
   11ca4:	mov	r0, #1
   11ca8:	bl	11410 <__printf_chk@plt>
   11cac:	b	11cd8 <putchar_unlocked@plt+0x7b4>
   11cb0:	movw	r1, #27635	; 0x6bf3
   11cb4:	mov	r0, #0
   11cb8:	mov	r2, #5
   11cbc:	movt	r1, #1
   11cc0:	bl	11284 <dcgettext@plt>
   11cc4:	mov	r1, r0
   11cc8:	mov	r0, #1
   11ccc:	mov	r2, r5
   11cd0:	mov	r3, r8
   11cd4:	bl	11410 <__printf_chk@plt>
   11cd8:	movw	r1, #27651	; 0x6c03
   11cdc:	movw	r2, #27660	; 0x6c0c
   11ce0:	mov	r0, #5
   11ce4:	mov	r3, r4
   11ce8:	str	r0, [sp]
   11cec:	movt	r1, #1
   11cf0:	movt	r2, #1
   11cf4:	mov	r0, #0
   11cf8:	bl	11518 <dcngettext@plt>
   11cfc:	mov	r1, r0
   11d00:	mov	r0, #1
   11d04:	mov	r2, r4
   11d08:	bl	11410 <__printf_chk@plt>
   11d0c:	add	r0, sp, #8
   11d10:	mov	r1, #3
   11d14:	bl	1144c <getloadavg@plt>
   11d18:	cmn	r0, #1
   11d1c:	beq	11d94 <putchar_unlocked@plt+0x870>
   11d20:	mov	r4, r0
   11d24:	cmp	r0, #1
   11d28:	blt	11d9c <putchar_unlocked@plt+0x878>
   11d2c:	movw	r1, #27670	; 0x6c16
   11d30:	mov	r0, #0
   11d34:	mov	r2, #5
   11d38:	movt	r1, #1
   11d3c:	bl	11284 <dcgettext@plt>
   11d40:	vldr	d16, [sp, #8]
   11d44:	mov	r1, r0
   11d48:	mov	r0, #1
   11d4c:	vmov	r2, r3, d16
   11d50:	bl	11410 <__printf_chk@plt>
   11d54:	cmp	r4, #1
   11d58:	beq	11d94 <putchar_unlocked@plt+0x870>
   11d5c:	vldr	d16, [sp, #16]
   11d60:	movw	r1, #27692	; 0x6c2c
   11d64:	mov	r0, #1
   11d68:	movt	r1, #1
   11d6c:	vmov	r2, r3, d16
   11d70:	bl	11410 <__printf_chk@plt>
   11d74:	cmp	r4, #3
   11d78:	blt	11d94 <putchar_unlocked@plt+0x870>
   11d7c:	vldr	d16, [sp, #24]
   11d80:	movw	r1, #27692	; 0x6c2c
   11d84:	mov	r0, #1
   11d88:	movt	r1, #1
   11d8c:	vmov	r2, r3, d16
   11d90:	bl	11410 <__printf_chk@plt>
   11d94:	mov	r0, #10
   11d98:	bl	11524 <putchar_unlocked@plt>
   11d9c:	sub	sp, fp, #24
   11da0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11da4:	bl	113e0 <__errno_location@plt>
   11da8:	ldr	r4, [r0]
   11dac:	movw	r1, #27520	; 0x6b80
   11db0:	mov	r0, #0
   11db4:	mov	r2, #5
   11db8:	movt	r1, #1
   11dbc:	bl	11284 <dcgettext@plt>
   11dc0:	mov	r2, r0
   11dc4:	mov	r0, #1
   11dc8:	mov	r1, r4
   11dcc:	bl	11320 <error@plt>
   11dd0:			; <UNDEFINED> instruction: 0xffc00000
   11dd4:	ldrshmi	pc, [pc, #255]	; 11edb <putchar_unlocked@plt+0x9b7>	; <UNPREDICTABLE>
   11dd8:	push	{r4, r5, r6, sl, fp, lr}
   11ddc:	add	fp, sp, #16
   11de0:	movw	r6, #33176	; 0x8198
   11de4:	mov	r5, r0
   11de8:	mov	r4, r1
   11dec:	movt	r6, #2
   11df0:	ldr	r0, [r6]
   11df4:	cmp	r0, #0
   11df8:	bne	11e14 <putchar_unlocked@plt+0x8f0>
   11dfc:	movw	r1, #27775	; 0x6c7f
   11e00:	movw	r0, #8127	; 0x1fbf
   11e04:	mov	r2, #0
   11e08:	movt	r1, #1
   11e0c:	bl	114a0 <newlocale@plt>
   11e10:	str	r0, [r6]
   11e14:	ldr	r2, [r6]
   11e18:	cmp	r2, #0
   11e1c:	beq	11e30 <putchar_unlocked@plt+0x90c>
   11e20:	mov	r0, r5
   11e24:	mov	r1, r4
   11e28:	pop	{r4, r5, r6, sl, fp, lr}
   11e2c:	b	11458 <strtod_l@plt>
   11e30:	cmp	r4, #0
   11e34:	vmov.i32	d0, #0	; 0x00000000
   11e38:	strne	r5, [r4]
   11e3c:	pop	{r4, r5, r6, sl, fp, pc}
   11e40:	movw	r1, #33180	; 0x819c
   11e44:	movt	r1, #2
   11e48:	str	r0, [r1]
   11e4c:	bx	lr
   11e50:	movw	r1, #33184	; 0x81a0
   11e54:	movt	r1, #2
   11e58:	strb	r0, [r1]
   11e5c:	bx	lr
   11e60:	push	{r4, r5, r6, sl, fp, lr}
   11e64:	add	fp, sp, #16
   11e68:	sub	sp, sp, #8
   11e6c:	movw	r0, #33164	; 0x818c
   11e70:	movt	r0, #2
   11e74:	ldr	r0, [r0]
   11e78:	bl	164d0 <putchar_unlocked@plt+0x4fac>
   11e7c:	cmp	r0, #0
   11e80:	beq	11ea8 <putchar_unlocked@plt+0x984>
   11e84:	movw	r0, #33184	; 0x81a0
   11e88:	movt	r0, #2
   11e8c:	ldrb	r0, [r0]
   11e90:	cmp	r0, #0
   11e94:	beq	11ec8 <putchar_unlocked@plt+0x9a4>
   11e98:	bl	113e0 <__errno_location@plt>
   11e9c:	ldr	r0, [r0]
   11ea0:	cmp	r0, #32
   11ea4:	bne	11ec8 <putchar_unlocked@plt+0x9a4>
   11ea8:	movw	r0, #33160	; 0x8188
   11eac:	movt	r0, #2
   11eb0:	ldr	r0, [r0]
   11eb4:	bl	164d0 <putchar_unlocked@plt+0x4fac>
   11eb8:	cmp	r0, #0
   11ebc:	subeq	sp, fp, #16
   11ec0:	popeq	{r4, r5, r6, sl, fp, pc}
   11ec4:	b	11f38 <putchar_unlocked@plt+0xa14>
   11ec8:	movw	r1, #27777	; 0x6c81
   11ecc:	mov	r0, #0
   11ed0:	mov	r2, #5
   11ed4:	movt	r1, #1
   11ed8:	bl	11284 <dcgettext@plt>
   11edc:	mov	r4, r0
   11ee0:	movw	r0, #33180	; 0x819c
   11ee4:	movt	r0, #2
   11ee8:	ldr	r6, [r0]
   11eec:	bl	113e0 <__errno_location@plt>
   11ef0:	ldr	r5, [r0]
   11ef4:	cmp	r6, #0
   11ef8:	bne	11f14 <putchar_unlocked@plt+0x9f0>
   11efc:	movw	r2, #27793	; 0x6c91
   11f00:	mov	r0, #0
   11f04:	mov	r1, r5
   11f08:	mov	r3, r4
   11f0c:	movt	r2, #1
   11f10:	b	11f34 <putchar_unlocked@plt+0xa10>
   11f14:	mov	r0, r6
   11f18:	bl	150e8 <putchar_unlocked@plt+0x3bc4>
   11f1c:	movw	r2, #27789	; 0x6c8d
   11f20:	mov	r3, r0
   11f24:	str	r4, [sp]
   11f28:	mov	r0, #0
   11f2c:	mov	r1, r5
   11f30:	movt	r2, #1
   11f34:	bl	11320 <error@plt>
   11f38:	movw	r0, #33076	; 0x8134
   11f3c:	movt	r0, #2
   11f40:	ldr	r0, [r0]
   11f44:	bl	11248 <_exit@plt>
   11f48:	push	{r4, r5, r6, sl, fp, lr}
   11f4c:	add	fp, sp, #16
   11f50:	sub	sp, sp, #8
   11f54:	mov	r4, r0
   11f58:	bl	1141c <fileno@plt>
   11f5c:	cmn	r0, #1
   11f60:	ble	11fd4 <putchar_unlocked@plt+0xab0>
   11f64:	mov	r0, r4
   11f68:	bl	1135c <__freading@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	11f9c <putchar_unlocked@plt+0xa78>
   11f74:	mov	r0, r4
   11f78:	bl	1141c <fileno@plt>
   11f7c:	mov	r1, #1
   11f80:	mov	r2, #0
   11f84:	mov	r3, #0
   11f88:	str	r1, [sp]
   11f8c:	bl	112e4 <lseek64@plt>
   11f90:	and	r0, r0, r1
   11f94:	cmn	r0, #1
   11f98:	beq	11fd4 <putchar_unlocked@plt+0xab0>
   11f9c:	mov	r0, r4
   11fa0:	bl	11fe4 <putchar_unlocked@plt+0xac0>
   11fa4:	cmp	r0, #0
   11fa8:	beq	11fd4 <putchar_unlocked@plt+0xab0>
   11fac:	bl	113e0 <__errno_location@plt>
   11fb0:	ldr	r6, [r0]
   11fb4:	mov	r5, r0
   11fb8:	mov	r0, r4
   11fbc:	bl	11434 <fclose@plt>
   11fc0:	cmp	r6, #0
   11fc4:	strne	r6, [r5]
   11fc8:	mvnne	r0, #0
   11fcc:	sub	sp, fp, #16
   11fd0:	pop	{r4, r5, r6, sl, fp, pc}
   11fd4:	mov	r0, r4
   11fd8:	sub	sp, fp, #16
   11fdc:	pop	{r4, r5, r6, sl, fp, lr}
   11fe0:	b	11434 <fclose@plt>
   11fe4:	push	{r4, sl, fp, lr}
   11fe8:	add	fp, sp, #8
   11fec:	sub	sp, sp, #8
   11ff0:	mov	r4, r0
   11ff4:	cmp	r0, #0
   11ff8:	beq	12014 <putchar_unlocked@plt+0xaf0>
   11ffc:	mov	r0, r4
   12000:	bl	1135c <__freading@plt>
   12004:	cmp	r0, #0
   12008:	ldrbne	r0, [r4, #1]
   1200c:	tstne	r0, #1
   12010:	bne	12024 <putchar_unlocked@plt+0xb00>
   12014:	mov	r0, r4
   12018:	sub	sp, fp, #8
   1201c:	pop	{r4, sl, fp, lr}
   12020:	b	11224 <fflush@plt>
   12024:	mov	r0, #1
   12028:	mov	r2, #0
   1202c:	mov	r3, #0
   12030:	str	r0, [sp]
   12034:	mov	r0, r4
   12038:	bl	13708 <putchar_unlocked@plt+0x21e4>
   1203c:	b	12014 <putchar_unlocked@plt+0xaf0>
   12040:	push	{fp, lr}
   12044:	mov	fp, sp
   12048:	sub	sp, sp, #16
   1204c:	str	r3, [sp, #8]
   12050:	mvn	r3, #0
   12054:	str	r3, [sp, #4]
   12058:	mov	r3, #0
   1205c:	str	r3, [sp]
   12060:	ldr	r3, [fp, #8]
   12064:	str	r3, [sp, #12]
   12068:	mov	r3, #0
   1206c:	bl	12078 <putchar_unlocked@plt+0xb54>
   12070:	mov	sp, fp
   12074:	pop	{fp, pc}
   12078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1207c:	add	fp, sp, #28
   12080:	sub	sp, sp, #124	; 0x7c
   12084:	sub	sp, sp, #1024	; 0x400
   12088:	str	r3, [sp, #80]	; 0x50
   1208c:	mov	r4, r2
   12090:	mov	r9, r1
   12094:	str	r0, [sp, #92]	; 0x5c
   12098:	bl	113e0 <__errno_location@plt>
   1209c:	mov	r2, r4
   120a0:	movw	r6, #26968	; 0x6958
   120a4:	ldrb	r3, [r9]
   120a8:	str	r0, [sp, #60]	; 0x3c
   120ac:	ldr	r1, [r2, #8]!
   120b0:	movt	r6, #1
   120b4:	cmp	r1, #0
   120b8:	mov	r7, r1
   120bc:	movweq	r7, #12
   120c0:	cmp	r1, #12
   120c4:	subgt	r7, r1, #12
   120c8:	ldr	r1, [r2, #32]
   120cc:	cmp	r1, #0
   120d0:	movne	r6, r1
   120d4:	ldr	r1, [r0]
   120d8:	cmp	r3, #0
   120dc:	str	r1, [sp, #56]	; 0x38
   120e0:	beq	1213c <putchar_unlocked@plt+0xc18>
   120e4:	sub	r0, fp, #46	; 0x2e
   120e8:	ldr	r8, [fp, #12]
   120ec:	mov	r5, #0
   120f0:	str	r2, [sp, #32]
   120f4:	str	r6, [sp, #36]	; 0x24
   120f8:	str	r7, [sp, #28]
   120fc:	str	r4, [sp, #76]	; 0x4c
   12100:	add	r1, r0, #13
   12104:	add	r0, r0, #14
   12108:	str	r1, [sp, #20]
   1210c:	add	r1, sp, #96	; 0x60
   12110:	str	r0, [sp, #64]	; 0x40
   12114:	add	r1, r1, #1
   12118:	str	r1, [sp, #48]	; 0x30
   1211c:	add	r1, r4, #12
   12120:	str	r1, [sp, #24]
   12124:	sub	r1, fp, #51	; 0x33
   12128:	add	r2, r1, #3
   1212c:	add	r0, r1, #2
   12130:	str	r2, [sp, #52]	; 0x34
   12134:	str	r0, [sp, #68]	; 0x44
   12138:	b	1236c <putchar_unlocked@plt+0xe48>
   1213c:	mov	r5, #0
   12140:	b	1364c <putchar_unlocked@plt+0x2128>
   12144:	sub	r0, r8, #6
   12148:	bic	r5, r0, r0, asr #31
   1214c:	b	12a44 <putchar_unlocked@plt+0x1520>
   12150:	movw	r7, #63636	; 0xf894
   12154:	movt	r7, #65535	; 0xffff
   12158:	sub	r7, r7, r3
   1215c:	add	r3, r1, #100	; 0x64
   12160:	cmp	r6, r7
   12164:	rsblt	r3, r1, #0
   12168:	b	13180 <putchar_unlocked@plt+0x1c5c>
   1216c:	movw	r5, #63636	; 0xf894
   12170:	add	r3, r7, #100	; 0x64
   12174:	movt	r5, #65535	; 0xffff
   12178:	cmp	r1, r5
   1217c:	rsblt	r3, r7, #0
   12180:	b	13180 <putchar_unlocked@plt+0x1c5c>
   12184:	ldr	r0, [sp, #88]	; 0x58
   12188:	mov	lr, r5
   1218c:	mov	r2, r9
   12190:	mov	r5, r0
   12194:	b	12eec <putchar_unlocked@plt+0x19c8>
   12198:	cmp	r1, #0
   1219c:	beq	12314 <putchar_unlocked@plt+0xdf0>
   121a0:	movw	r4, #10000	; 0x2710
   121a4:	mov	r6, #1
   121a8:	mla	r1, r3, r4, r1
   121ac:	mov	r3, #100	; 0x64
   121b0:	mov	r4, #9
   121b4:	mla	r3, lr, r3, r1
   121b8:	mov	r1, #20
   121bc:	b	12330 <putchar_unlocked@plt+0xe0c>
   121c0:	ldr	r3, [sp, #92]	; 0x5c
   121c4:	mov	r1, r2
   121c8:	sub	r0, fp, #46	; 0x2e
   121cc:	mov	r2, #1
   121d0:	bl	112d8 <fwrite@plt>
   121d4:	cmp	sl, #45	; 0x2d
   121d8:	mov	r5, #0
   121dc:	subne	r0, r8, #9
   121e0:	subne	r0, r0, r4
   121e4:	bicne	r5, r0, r0, asr #31
   121e8:	mvn	r0, #9
   121ec:	sub	r0, r0, r6
   121f0:	sub	r0, r0, r4
   121f4:	cmp	r5, r0
   121f8:	bcs	1365c <putchar_unlocked@plt+0x2138>
   121fc:	ldr	r7, [sp, #92]	; 0x5c
   12200:	mov	r8, r6
   12204:	cmp	r7, #0
   12208:	cmpne	r5, #0
   1220c:	bne	12220 <putchar_unlocked@plt+0xcfc>
   12210:	add	r0, r5, r8
   12214:	add	r0, r0, r4
   12218:	add	r5, r0, #9
   1221c:	b	1363c <putchar_unlocked@plt+0x2118>
   12220:	uxtb	r0, sl
   12224:	cmp	r0, #43	; 0x2b
   12228:	beq	12238 <putchar_unlocked@plt+0xd14>
   1222c:	cmp	r0, #48	; 0x30
   12230:	mov	r6, r5
   12234:	bne	12254 <putchar_unlocked@plt+0xd30>
   12238:	mov	r6, r5
   1223c:	mov	r0, #48	; 0x30
   12240:	mov	r1, r7
   12244:	bl	11494 <fputc@plt>
   12248:	subs	r6, r6, #1
   1224c:	bne	1223c <putchar_unlocked@plt+0xd18>
   12250:	b	12210 <putchar_unlocked@plt+0xcec>
   12254:	mov	r0, #32
   12258:	mov	r1, r7
   1225c:	bl	11494 <fputc@plt>
   12260:	subs	r6, r6, #1
   12264:	bne	12254 <putchar_unlocked@plt+0xd30>
   12268:	b	12210 <putchar_unlocked@plt+0xcec>
   1226c:	ldr	r7, [sp, #92]	; 0x5c
   12270:	cmp	r5, #0
   12274:	beq	1228c <putchar_unlocked@plt+0xd68>
   12278:	mov	r0, #32
   1227c:	mov	r1, r7
   12280:	bl	11494 <fputc@plt>
   12284:	subs	r5, r5, #1
   12288:	bne	12278 <putchar_unlocked@plt+0xd54>
   1228c:	tst	r4, #1
   12290:	beq	122a4 <putchar_unlocked@plt+0xd80>
   12294:	ldr	r0, [sp, #92]	; 0x5c
   12298:	ldr	r1, [sp, #36]	; 0x24
   1229c:	mov	r2, r8
   122a0:	b	1359c <putchar_unlocked@plt+0x2078>
   122a4:	ldr	r1, [sp, #72]	; 0x48
   122a8:	eor	r0, r4, #1
   122ac:	and	r0, r1, r0
   122b0:	tst	r0, #1
   122b4:	beq	122c8 <putchar_unlocked@plt+0xda4>
   122b8:	ldr	r0, [sp, #92]	; 0x5c
   122bc:	ldr	r1, [sp, #36]	; 0x24
   122c0:	mov	r2, r8
   122c4:	b	135bc <putchar_unlocked@plt+0x2098>
   122c8:	ldr	r0, [sp, #36]	; 0x24
   122cc:	mov	r1, r8
   122d0:	b	135cc <putchar_unlocked@plt+0x20a8>
   122d4:	ldr	r6, [sp, #92]	; 0x5c
   122d8:	mov	r0, #32
   122dc:	mov	r1, r6
   122e0:	bl	11494 <fputc@plt>
   122e4:	subs	r5, r5, #1
   122e8:	bne	122d8 <putchar_unlocked@plt+0xdb4>
   122ec:	mov	r0, #10
   122f0:	b	12354 <putchar_unlocked@plt+0xe30>
   122f4:	ldr	r6, [sp, #92]	; 0x5c
   122f8:	mov	r0, #32
   122fc:	mov	r1, r6
   12300:	bl	11494 <fputc@plt>
   12304:	subs	r5, r5, #1
   12308:	bne	122f8 <putchar_unlocked@plt+0xdd4>
   1230c:	mov	r0, #9
   12310:	b	12354 <putchar_unlocked@plt+0xe30>
   12314:	cmp	lr, #0
   12318:	beq	12364 <putchar_unlocked@plt+0xe40>
   1231c:	mov	r1, #100	; 0x64
   12320:	mov	r4, #6
   12324:	mov	r6, #1
   12328:	mla	r3, r3, r1, lr
   1232c:	mov	r1, #4
   12330:	mov	lr, r5
   12334:	b	131f8 <putchar_unlocked@plt+0x1cd4>
   12338:	ldr	r6, [sp, #92]	; 0x5c
   1233c:	mov	r0, #32
   12340:	mov	r1, r6
   12344:	bl	11494 <fputc@plt>
   12348:	subs	r5, r5, #1
   1234c:	bne	1233c <putchar_unlocked@plt+0xe18>
   12350:	ldrb	r0, [r9]
   12354:	mov	r1, r6
   12358:	bl	11494 <fputc@plt>
   1235c:	mov	r5, r7
   12360:	b	123f4 <putchar_unlocked@plt+0xed0>
   12364:	mov	r4, #3
   12368:	b	1348c <putchar_unlocked@plt+0x1f68>
   1236c:	uxtb	r1, r3
   12370:	cmp	r1, #37	; 0x25
   12374:	bne	1238c <putchar_unlocked@plt+0xe68>
   12378:	ldr	lr, [sp, #80]	; 0x50
   1237c:	mov	r4, #0
   12380:	mov	r0, #0
   12384:	str	r9, [sp, #84]	; 0x54
   12388:	b	12414 <putchar_unlocked@plt+0xef0>
   1238c:	bic	r1, r8, r8, asr #31
   12390:	mov	r4, #1
   12394:	mvn	r2, r5
   12398:	cmp	r1, #1
   1239c:	movhi	r4, r1
   123a0:	cmp	r4, r2
   123a4:	bcs	1365c <putchar_unlocked@plt+0x2138>
   123a8:	ldr	r7, [sp, #92]	; 0x5c
   123ac:	cmp	r7, #0
   123b0:	beq	123f4 <putchar_unlocked@plt+0xed0>
   123b4:	cmp	r1, #2
   123b8:	bcc	123e8 <putchar_unlocked@plt+0xec4>
   123bc:	mov	r8, r5
   123c0:	sub	r5, r1, #1
   123c4:	mov	r6, #0
   123c8:	mov	r0, #32
   123cc:	mov	r1, r7
   123d0:	bl	11494 <fputc@plt>
   123d4:	add	r6, r6, #1
   123d8:	cmp	r6, r5
   123dc:	bcc	123c8 <putchar_unlocked@plt+0xea4>
   123e0:	ldrb	r3, [r9]
   123e4:	mov	r5, r8
   123e8:	uxtb	r0, r3
   123ec:	mov	r1, r7
   123f0:	bl	11494 <fputc@plt>
   123f4:	add	r5, r4, r5
   123f8:	b	1363c <putchar_unlocked@plt+0x2118>
   123fc:	mov	r4, #1
   12400:	b	12410 <putchar_unlocked@plt+0xeec>
   12404:	cmp	r0, #94	; 0x5e
   12408:	bne	12454 <putchar_unlocked@plt+0xf30>
   1240c:	mov	lr, #1
   12410:	mov	r0, sl
   12414:	add	r1, r9, #2
   12418:	b	1242c <putchar_unlocked@plt+0xf08>
   1241c:	cmp	r0, #48	; 0x30
   12420:	cmpne	r0, #95	; 0x5f
   12424:	bne	12404 <putchar_unlocked@plt+0xee0>
   12428:	add	r1, r1, #1
   1242c:	add	r9, r9, #1
   12430:	mov	sl, r0
   12434:	ldrb	r0, [r9]
   12438:	cmp	r0, #47	; 0x2f
   1243c:	bgt	1241c <putchar_unlocked@plt+0xef8>
   12440:	cmp	r0, #43	; 0x2b
   12444:	cmpne	r0, #45	; 0x2d
   12448:	beq	12428 <putchar_unlocked@plt+0xf04>
   1244c:	cmp	r0, #35	; 0x23
   12450:	beq	123fc <putchar_unlocked@plt+0xed8>
   12454:	sub	r2, r0, #48	; 0x30
   12458:	cmp	r2, #9
   1245c:	bhi	124c8 <putchar_unlocked@plt+0xfa4>
   12460:	movw	r6, #52428	; 0xcccc
   12464:	mov	r8, #0
   12468:	mov	r7, #-2147483648	; 0x80000000
   1246c:	movt	r6, #3276	; 0xccc
   12470:	cmn	r8, #1
   12474:	ble	12484 <putchar_unlocked@plt+0xf60>
   12478:	cmp	r8, r6
   1247c:	bgt	12494 <putchar_unlocked@plt+0xf70>
   12480:	b	1249c <putchar_unlocked@plt+0xf78>
   12484:	beq	1249c <putchar_unlocked@plt+0xf78>
   12488:	sdiv	r2, r7, r8
   1248c:	cmp	r2, #10
   12490:	bge	1249c <putchar_unlocked@plt+0xf78>
   12494:	mvn	r8, #-2147483648	; 0x80000000
   12498:	b	124b4 <putchar_unlocked@plt+0xf90>
   1249c:	add	r2, r8, r8, lsl #2
   124a0:	lsl	r3, r2, #1
   124a4:	uxtab	r0, r3, r0
   124a8:	sub	r8, r0, #48	; 0x30
   124ac:	cmp	r8, r2, lsl #1
   124b0:	mvnvs	r8, #-2147483648	; 0x80000000
   124b4:	ldrb	r0, [r1], #1
   124b8:	sub	r2, r0, #48	; 0x30
   124bc:	cmp	r2, #10
   124c0:	bcc	12470 <putchar_unlocked@plt+0xf4c>
   124c4:	sub	r9, r1, #1
   124c8:	cmp	r0, #79	; 0x4f
   124cc:	cmpne	r0, #69	; 0x45
   124d0:	bne	124dc <putchar_unlocked@plt+0xfb8>
   124d4:	ldrb	ip, [r9, #1]!
   124d8:	b	124e4 <putchar_unlocked@plt+0xfc0>
   124dc:	mov	ip, r0
   124e0:	mov	r0, #0
   124e4:	sub	r1, ip, #37	; 0x25
   124e8:	str	r5, [sp, #88]	; 0x58
   124ec:	cmp	r1, #85	; 0x55
   124f0:	bhi	12774 <putchar_unlocked@plt+0x1250>
   124f4:	movw	r6, #27814	; 0x6ca6
   124f8:	add	r2, pc, #12
   124fc:	mov	r7, #0
   12500:	mvn	r5, #0
   12504:	movt	r6, #1
   12508:	ldr	pc, [r2, r1, lsl #2]
   1250c:	andeq	r2, r1, r4, lsl #15
   12510:	andeq	r2, r1, r4, ror #29
   12514:	andeq	r2, r1, r4, ror #29
   12518:	andeq	r2, r1, r4, ror #29
   1251c:	andeq	r2, r1, r4, ror #29
   12520:	andeq	r2, r1, r4, ror #29
   12524:	andeq	r2, r1, r4, ror #29
   12528:	andeq	r2, r1, r4, ror #29
   1252c:	andeq	r2, r1, r4, ror #29
   12530:	andeq	r2, r1, r4, ror #29
   12534:	andeq	r2, r1, r4, ror #29
   12538:	andeq	r2, r1, r4, ror #29
   1253c:	andeq	r2, r1, r4, ror #29
   12540:	andeq	r2, r1, r4, ror #29
   12544:	andeq	r2, r1, r4, ror #29
   12548:	andeq	r2, r1, r4, ror #29
   1254c:	andeq	r2, r1, r4, ror #29
   12550:	andeq	r2, r1, r4, ror #29
   12554:	andeq	r2, r1, r4, ror #29
   12558:	andeq	r2, r1, r4, ror #29
   1255c:	andeq	r2, r1, r4, ror #29
   12560:	andeq	r2, r1, r4, lsl #16
   12564:	andeq	r2, r1, r4, ror #29
   12568:	andeq	r2, r1, r4, ror #29
   1256c:	andeq	r2, r1, r4, ror #29
   12570:	andeq	r2, r1, r4, ror #29
   12574:	andeq	r2, r1, r4, ror #29
   12578:	andeq	r2, r1, r4, ror #29
   1257c:	andeq	r2, r1, r8, ror #16
   12580:	andeq	r2, r1, r0, lsl #17
   12584:	muleq	r1, r8, r8
   12588:	andeq	r2, r1, ip, lsr #17
   1258c:	andeq	r2, r1, r4, ror #29
   12590:	andeq	r2, r1, r0, asr #17
   12594:	andeq	r2, r1, r4, ror #12
   12598:	andeq	r2, r1, ip, ror #17
   1259c:	strdeq	r2, [r1], -ip
   125a0:	andeq	r2, r1, r4, ror #29
   125a4:	andeq	r2, r1, r4, ror #29
   125a8:	andeq	r2, r1, r4, ror #29
   125ac:	andeq	r2, r1, r0, lsl r9
   125b0:	andeq	r2, r1, r4, lsr #18
   125b4:	andeq	r2, r1, r4, ror #29
   125b8:	andeq	r2, r1, r4, lsl sl
   125bc:	andeq	r2, r1, r4, ror #29
   125c0:	andeq	r2, r1, r4, asr #20
   125c4:	andeq	r2, r1, ip, lsr #20
   125c8:	andeq	r2, r1, ip, lsr sl
   125cc:	strdeq	r2, [r1], -r8
   125d0:	andeq	r2, r1, r4, ror #12
   125d4:	andeq	r2, r1, r4, lsr #22
   125d8:	andeq	r2, r1, r0, ror fp
   125dc:	andeq	r2, r1, r4, lsl #23
   125e0:			; <UNDEFINED> instruction: 0x00012bb0
   125e4:	andeq	r2, r1, r4, ror #29
   125e8:	andeq	r2, r1, r4, ror #29
   125ec:	andeq	r2, r1, r4, ror #29
   125f0:	andeq	r2, r1, r4, ror #29
   125f4:	andeq	r2, r1, r4, ror #29
   125f8:	andeq	r2, r1, r4, ror #29
   125fc:	andeq	r2, r1, r0, lsr ip
   12600:	andeq	r2, r1, r0, ror #14
   12604:	andeq	r2, r1, r8, asr #24
   12608:	andeq	r2, r1, ip, asr ip
   1260c:	andeq	r2, r1, r0, ror ip
   12610:	andeq	r2, r1, r4, ror #29
   12614:	andeq	r2, r1, r4, ror #12
   12618:	andeq	r2, r1, r0, ror #14
   1261c:	andeq	r2, r1, r4, ror #29
   12620:	andeq	r2, r1, r8, ror ip
   12624:	muleq	r1, r4, ip
   12628:	andeq	r2, r1, r8, lsr #25
   1262c:	andeq	r2, r1, r0, asr #25
   12630:	andeq	r2, r1, r8, ror #25
   12634:	andeq	r2, r1, r4, ror #29
   12638:	andeq	r2, r1, r8, lsl sl
   1263c:	andeq	r2, r1, r8, asr sp
   12640:	andeq	r3, r1, r0, lsr #9
   12644:	andeq	r2, r1, r8, ror sp
   12648:	andeq	r2, r1, r0, lsr #28
   1264c:	muleq	r1, r0, lr
   12650:	andeq	r2, r1, r4, ror #29
   12654:	andeq	r2, r1, r4, asr #29
   12658:	ldrdeq	r2, [r1], -ip
   1265c:	andeq	r2, r1, ip, asr #31
   12660:	andeq	r2, r1, r8, lsr #16
   12664:	cmp	r0, #69	; 0x45
   12668:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   1266c:	ldr	r1, [sp, #76]	; 0x4c
   12670:	movw	r5, #9363	; 0x2493
   12674:	movt	r5, #37449	; 0x9249
   12678:	ldr	r3, [r1, #28]
   1267c:	ldr	r2, [r1, #24]
   12680:	ldr	r6, [r1, #20]
   12684:	movw	r1, #382	; 0x17e
   12688:	add	r1, r3, r1
   1268c:	cmp	r6, #0
   12690:	sub	r1, r1, r2
   12694:	smmla	r4, r1, r5, r1
   12698:	asr	r7, r4, #2
   1269c:	add	r4, r7, r4, lsr #31
   126a0:	rsb	r4, r4, r4, lsl #3
   126a4:	sub	r1, r4, r1
   126a8:	add	r1, r3, r1
   126ac:	add	r4, r1, #3
   126b0:	mvn	r1, #99	; 0x63
   126b4:	movwlt	r1, #300	; 0x12c
   126b8:	cmn	r4, #1
   126bc:	add	r7, r1, r6
   126c0:	ble	12fe0 <putchar_unlocked@plt+0x1abc>
   126c4:	movw	r1, #365	; 0x16d
   126c8:	tst	r7, #3
   126cc:	bne	12720 <putchar_unlocked@plt+0x11fc>
   126d0:	movw	r1, #34079	; 0x851f
   126d4:	str	lr, [sp, #72]	; 0x48
   126d8:	mov	lr, #100	; 0x64
   126dc:	movt	r1, #20971	; 0x51eb
   126e0:	smmul	r1, r7, r1
   126e4:	asr	r5, r1, #5
   126e8:	add	r5, r5, r1, lsr #31
   126ec:	mls	lr, r5, lr, r7
   126f0:	asr	r5, r1, #7
   126f4:	add	r1, r5, r1, lsr #31
   126f8:	mov	r5, #400	; 0x190
   126fc:	mls	r5, r1, r5, r7
   12700:	movw	r1, #365	; 0x16d
   12704:	cmp	r5, #0
   12708:	movw	r5, #9363	; 0x2493
   1270c:	movweq	r1, #366	; 0x16e
   12710:	cmp	lr, #0
   12714:	ldr	lr, [sp, #72]	; 0x48
   12718:	movt	r5, #37449	; 0x9249
   1271c:	movwne	r1, #366	; 0x16e
   12720:	movw	r7, #382	; 0x17e
   12724:	add	r1, r2, r1
   12728:	add	r3, r3, r7
   1272c:	sub	r1, r3, r1
   12730:	smmla	r1, r1, r5, r1
   12734:	asr	r3, r1, #2
   12738:	add	r1, r3, r1, lsr #31
   1273c:	rsb	r1, r1, r1, lsl #3
   12740:	add	r1, r1, r2
   12744:	movw	r2, #379	; 0x17b
   12748:	sub	r1, r1, r2
   1274c:	mov	r2, #1
   12750:	cmn	r1, #1
   12754:	eor	r3, r2, r1, lsr #31
   12758:	movgt	r4, r1
   1275c:	b	13064 <putchar_unlocked@plt+0x1b40>
   12760:	orr	lr, r4, lr
   12764:	mov	r7, #0
   12768:	cmp	r0, #69	; 0x45
   1276c:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12770:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   12774:	cmp	ip, #0
   12778:	bne	12ee4 <putchar_unlocked@plt+0x19c0>
   1277c:	sub	r2, r9, #1
   12780:	b	12ee8 <putchar_unlocked@plt+0x19c4>
   12784:	ldr	r0, [sp, #84]	; 0x54
   12788:	ldr	r5, [sp, #88]	; 0x58
   1278c:	sub	r2, r9, #1
   12790:	cmp	r2, r0
   12794:	bne	12eec <putchar_unlocked@plt+0x19c8>
   12798:	subs	r0, sl, #45	; 0x2d
   1279c:	mvn	r1, r5
   127a0:	bicne	r0, r8, r8, asr #31
   127a4:	cmp	r0, #1
   127a8:	mov	r4, r0
   127ac:	movls	r4, #1
   127b0:	cmp	r4, r1
   127b4:	bcs	1365c <putchar_unlocked@plt+0x2138>
   127b8:	ldr	r1, [sp, #92]	; 0x5c
   127bc:	cmp	r1, #0
   127c0:	beq	123f4 <putchar_unlocked@plt+0xed0>
   127c4:	ldr	r6, [sp, #92]	; 0x5c
   127c8:	mov	r7, r5
   127cc:	cmp	r0, #2
   127d0:	bcc	12350 <putchar_unlocked@plt+0xe2c>
   127d4:	uxtb	r1, sl
   127d8:	sub	r5, r0, #1
   127dc:	cmp	r1, #43	; 0x2b
   127e0:	cmpne	r1, #48	; 0x30
   127e4:	bne	12338 <putchar_unlocked@plt+0xe14>
   127e8:	ldr	r6, [sp, #92]	; 0x5c
   127ec:	mov	r0, #48	; 0x30
   127f0:	mov	r1, r6
   127f4:	bl	11494 <fputc@plt>
   127f8:	subs	r5, r5, #1
   127fc:	bne	127ec <putchar_unlocked@plt+0x12c8>
   12800:	b	12350 <putchar_unlocked@plt+0xe2c>
   12804:	mov	r7, #1
   12808:	b	12810 <putchar_unlocked@plt+0x12ec>
   1280c:	add	r7, r7, #1
   12810:	ldrb	r1, [r9, r7]
   12814:	cmp	r1, #58	; 0x3a
   12818:	beq	1280c <putchar_unlocked@plt+0x12e8>
   1281c:	cmp	r1, #122	; 0x7a
   12820:	bne	12ee4 <putchar_unlocked@plt+0x19c0>
   12824:	add	r9, r9, r7
   12828:	ldr	r2, [sp, #76]	; 0x4c
   1282c:	ldr	r1, [r2, #32]
   12830:	cmp	r1, #0
   12834:	blt	13560 <putchar_unlocked@plt+0x203c>
   12838:	ldr	r1, [r2, #36]	; 0x24
   1283c:	mov	r5, lr
   12840:	cmp	r1, #0
   12844:	blt	13414 <putchar_unlocked@plt+0x1ef0>
   12848:	mov	r2, #0
   1284c:	bne	13418 <putchar_unlocked@plt+0x1ef4>
   12850:	ldr	r2, [sp, #36]	; 0x24
   12854:	ldrb	r2, [r2]
   12858:	sub	r2, r2, #45	; 0x2d
   1285c:	clz	r2, r2
   12860:	lsr	r2, r2, #5
   12864:	b	13418 <putchar_unlocked@plt+0x1ef4>
   12868:	cmp	r0, #0
   1286c:	bne	12ee4 <putchar_unlocked@plt+0x19c0>
   12870:	orr	lr, r4, lr
   12874:	mov	r7, #0
   12878:	mov	ip, #65	; 0x41
   1287c:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   12880:	cmp	r0, #69	; 0x45
   12884:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12888:	orr	lr, r4, lr
   1288c:	mov	r7, #0
   12890:	mov	ip, #66	; 0x42
   12894:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   12898:	cmp	r0, #69	; 0x45
   1289c:	bne	130bc <putchar_unlocked@plt+0x1b98>
   128a0:	mov	r7, #0
   128a4:	mov	ip, #67	; 0x43
   128a8:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   128ac:	cmp	r0, #0
   128b0:	bne	12ee4 <putchar_unlocked@plt+0x19c0>
   128b4:	movw	r6, #27796	; 0x6c94
   128b8:	movt	r6, #1
   128bc:	b	12a44 <putchar_unlocked@plt+0x1520>
   128c0:	cmp	r0, #0
   128c4:	bne	12ee4 <putchar_unlocked@plt+0x19c0>
   128c8:	movw	r6, #27805	; 0x6c9d
   128cc:	cmp	sl, #0
   128d0:	movt	r6, #1
   128d4:	bne	12144 <putchar_unlocked@plt+0xc20>
   128d8:	cmp	r8, #0
   128dc:	bge	12144 <putchar_unlocked@plt+0xc20>
   128e0:	mov	sl, #43	; 0x2b
   128e4:	mov	r5, #4
   128e8:	b	12a44 <putchar_unlocked@plt+0x1520>
   128ec:	cmp	r0, #69	; 0x45
   128f0:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   128f4:	ldr	r1, [sp, #32]
   128f8:	b	12c68 <putchar_unlocked@plt+0x1744>
   128fc:	mov	r4, #2
   12900:	cmp	r0, #69	; 0x45
   12904:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12908:	ldr	r3, [sp, #28]
   1290c:	b	131e4 <putchar_unlocked@plt+0x1cc0>
   12910:	cmp	r0, #69	; 0x45
   12914:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12918:	ldr	r1, [sp, #76]	; 0x4c
   1291c:	ldr	r3, [r1, #4]
   12920:	b	131e0 <putchar_unlocked@plt+0x1cbc>
   12924:	cmp	r0, #69	; 0x45
   12928:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   1292c:	ldr	r1, [fp, #20]
   12930:	ldr	r6, [sp, #88]	; 0x58
   12934:	cmp	r8, #1
   12938:	mov	r4, #0
   1293c:	mov	r0, #8
   12940:	movwlt	r8, #9
   12944:	b	12964 <putchar_unlocked@plt+0x1440>
   12948:	movw	r2, #26215	; 0x6667
   1294c:	sub	r0, r0, #1
   12950:	sub	r4, r4, #1
   12954:	movt	r2, #26214	; 0x6666
   12958:	smmul	r1, r1, r2
   1295c:	asr	r2, r1, #2
   12960:	add	r1, r2, r1, lsr #31
   12964:	add	r2, r4, #9
   12968:	cmp	r8, r2
   1296c:	blt	12948 <putchar_unlocked@plt+0x1424>
   12970:	movw	r3, #26215	; 0x6667
   12974:	cmp	r2, #2
   12978:	movt	r3, #26214	; 0x6666
   1297c:	blt	1299c <putchar_unlocked@plt+0x1478>
   12980:	smmul	r7, r1, r3
   12984:	asr	r5, r7, #2
   12988:	add	r7, r5, r7, lsr #31
   1298c:	add	r7, r7, r7, lsl #2
   12990:	sub	r7, r1, r7, lsl #1
   12994:	cmp	r7, #0
   12998:	beq	12948 <putchar_unlocked@plt+0x1424>
   1299c:	cmp	r2, #1
   129a0:	sub	ip, fp, #46	; 0x2e
   129a4:	blt	129dc <putchar_unlocked@plt+0x14b8>
   129a8:	smmul	r7, r1, r3
   129ac:	asr	r5, r7, #2
   129b0:	add	r7, r5, r7, lsr #31
   129b4:	add	r5, r7, r7, lsl #2
   129b8:	sub	r1, r1, r5, lsl #1
   129bc:	add	r1, r1, #48	; 0x30
   129c0:	strb	r1, [ip, r0]
   129c4:	sub	r1, r0, #1
   129c8:	add	r0, r0, #1
   129cc:	cmp	r0, #1
   129d0:	mov	r0, r1
   129d4:	mov	r1, r7
   129d8:	bgt	129a8 <putchar_unlocked@plt+0x1484>
   129dc:	cmp	sl, #0
   129e0:	mvn	r0, r6
   129e4:	movweq	sl, #48	; 0x30
   129e8:	cmp	r2, r0
   129ec:	bcs	1365c <putchar_unlocked@plt+0x2138>
   129f0:	ldr	r0, [sp, #92]	; 0x5c
   129f4:	cmp	r0, #0
   129f8:	beq	121d4 <putchar_unlocked@plt+0xcb0>
   129fc:	tst	lr, #1
   12a00:	beq	121c0 <putchar_unlocked@plt+0xc9c>
   12a04:	ldr	r0, [sp, #92]	; 0x5c
   12a08:	sub	r1, fp, #46	; 0x2e
   12a0c:	bl	136c4 <putchar_unlocked@plt+0x21a0>
   12a10:	b	121d4 <putchar_unlocked@plt+0xcb0>
   12a14:	mov	r7, #1
   12a18:	eor	r1, r4, #1
   12a1c:	orr	r7, r4, r7
   12a20:	mov	ip, #112	; 0x70
   12a24:	and	lr, lr, r1
   12a28:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   12a2c:	cmp	r0, #69	; 0x45
   12a30:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12a34:	ldr	r1, [sp, #76]	; 0x4c
   12a38:	b	12c68 <putchar_unlocked@plt+0x1744>
   12a3c:	movw	r6, #27820	; 0x6cac
   12a40:	movt	r6, #1
   12a44:	ldr	r0, [fp, #16]
   12a48:	ldr	r2, [sp, #76]	; 0x4c
   12a4c:	str	r5, [sp, #84]	; 0x54
   12a50:	str	r5, [sp, #4]
   12a54:	and	r5, lr, #1
   12a58:	mov	r1, r6
   12a5c:	str	sl, [sp]
   12a60:	mov	r3, r5
   12a64:	str	r0, [sp, #8]
   12a68:	ldr	r0, [fp, #20]
   12a6c:	str	r0, [sp, #12]
   12a70:	mov	r0, #0
   12a74:	bl	12078 <putchar_unlocked@plt+0xb54>
   12a78:	subs	r1, sl, #45	; 0x2d
   12a7c:	ldr	r2, [sp, #88]	; 0x58
   12a80:	mov	r4, r0
   12a84:	movne	r1, r8
   12a88:	cmp	r8, #0
   12a8c:	movwlt	r1, #0
   12a90:	cmp	r1, r0
   12a94:	mov	r8, r2
   12a98:	movhi	r4, r1
   12a9c:	mvn	r2, r2
   12aa0:	cmp	r4, r2
   12aa4:	bcs	1365c <putchar_unlocked@plt+0x2138>
   12aa8:	ldr	r2, [sp, #92]	; 0x5c
   12aac:	cmp	r2, #0
   12ab0:	beq	13634 <putchar_unlocked@plt+0x2110>
   12ab4:	ldr	r7, [sp, #92]	; 0x5c
   12ab8:	cmp	r1, r0
   12abc:	str	r6, [sp, #72]	; 0x48
   12ac0:	bls	13604 <putchar_unlocked@plt+0x20e0>
   12ac4:	cmp	sl, #43	; 0x2b
   12ac8:	sub	r6, r1, r0
   12acc:	cmpne	sl, #48	; 0x30
   12ad0:	bne	135e4 <putchar_unlocked@plt+0x20c0>
   12ad4:	ldr	r7, [sp, #92]	; 0x5c
   12ad8:	cmp	r6, #0
   12adc:	beq	13604 <putchar_unlocked@plt+0x20e0>
   12ae0:	mov	r0, #48	; 0x30
   12ae4:	mov	r1, r7
   12ae8:	bl	11494 <fputc@plt>
   12aec:	subs	r6, r6, #1
   12af0:	bne	12ae0 <putchar_unlocked@plt+0x15bc>
   12af4:	b	13604 <putchar_unlocked@plt+0x20e0>
   12af8:	cmp	r0, #69	; 0x45
   12afc:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12b00:	ldr	r2, [sp, #76]	; 0x4c
   12b04:	ldr	r1, [r2, #24]
   12b08:	ldr	r2, [r2, #28]
   12b0c:	add	r2, r2, #7
   12b10:	sub	r1, r2, r1
   12b14:	movw	r2, #9363	; 0x2493
   12b18:	movt	r2, #37449	; 0x9249
   12b1c:	smmla	r1, r1, r2, r1
   12b20:	b	12b64 <putchar_unlocked@plt+0x1640>
   12b24:	cmp	r0, #69	; 0x45
   12b28:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12b2c:	ldr	r2, [sp, #76]	; 0x4c
   12b30:	movw	r3, #9363	; 0x2493
   12b34:	movt	r3, #37449	; 0x9249
   12b38:	ldr	r1, [r2, #24]
   12b3c:	ldr	r2, [r2, #28]
   12b40:	add	r1, r1, #6
   12b44:	smmla	r7, r1, r3, r1
   12b48:	asr	r5, r7, #2
   12b4c:	add	r7, r5, r7, lsr #31
   12b50:	rsb	r7, r7, r7, lsl #3
   12b54:	sub	r1, r7, r1
   12b58:	add	r1, r2, r1
   12b5c:	add	r1, r1, #7
   12b60:	smmla	r1, r1, r3, r1
   12b64:	asr	r2, r1, #2
   12b68:	add	r3, r2, r1, lsr #31
   12b6c:	b	131e0 <putchar_unlocked@plt+0x1cbc>
   12b70:	cmp	r0, #79	; 0x4f
   12b74:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12b78:	mov	r7, #0
   12b7c:	mov	ip, #88	; 0x58
   12b80:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   12b84:	cmp	r0, #69	; 0x45
   12b88:	beq	13498 <putchar_unlocked@plt+0x1f74>
   12b8c:	cmp	r0, #79	; 0x4f
   12b90:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12b94:	ldr	r1, [sp, #76]	; 0x4c
   12b98:	movw	r3, #63636	; 0xf894
   12b9c:	mov	r2, #0
   12ba0:	movt	r3, #65535	; 0xffff
   12ba4:	ldr	r1, [r1, #20]
   12ba8:	cmp	r1, r3
   12bac:	b	13170 <putchar_unlocked@plt+0x1c4c>
   12bb0:	ldr	r0, [sp, #36]	; 0x24
   12bb4:	subs	r5, sl, #45	; 0x2d
   12bb8:	str	lr, [sp, #72]	; 0x48
   12bbc:	bicne	r5, r8, r8, asr #31
   12bc0:	bl	113c8 <strlen@plt>
   12bc4:	mov	r8, r0
   12bc8:	cmp	r5, r0
   12bcc:	mov	r6, r0
   12bd0:	ldr	r0, [sp, #88]	; 0x58
   12bd4:	movhi	r6, r5
   12bd8:	mvn	r0, r0
   12bdc:	cmp	r6, r0
   12be0:	bcs	1365c <putchar_unlocked@plt+0x2138>
   12be4:	ldr	r0, [sp, #92]	; 0x5c
   12be8:	cmp	r0, #0
   12bec:	beq	135d8 <putchar_unlocked@plt+0x20b4>
   12bf0:	cmp	r5, r8
   12bf4:	bls	1228c <putchar_unlocked@plt+0xd68>
   12bf8:	uxtb	r0, sl
   12bfc:	sub	r5, r5, r8
   12c00:	cmp	r0, #43	; 0x2b
   12c04:	cmpne	r0, #48	; 0x30
   12c08:	bne	1226c <putchar_unlocked@plt+0xd48>
   12c0c:	ldr	r7, [sp, #92]	; 0x5c
   12c10:	cmp	r5, #0
   12c14:	beq	1228c <putchar_unlocked@plt+0xd68>
   12c18:	mov	r0, #48	; 0x30
   12c1c:	mov	r1, r7
   12c20:	bl	11494 <fputc@plt>
   12c24:	subs	r5, r5, #1
   12c28:	bne	12c18 <putchar_unlocked@plt+0x16f4>
   12c2c:	b	1228c <putchar_unlocked@plt+0xd68>
   12c30:	cmp	r0, #0
   12c34:	bne	12ee4 <putchar_unlocked@plt+0x19c0>
   12c38:	orr	lr, r4, lr
   12c3c:	mov	r7, #0
   12c40:	mov	ip, #97	; 0x61
   12c44:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   12c48:	cmp	r0, #79	; 0x4f
   12c4c:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12c50:	mov	r7, #0
   12c54:	mov	ip, #99	; 0x63
   12c58:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   12c5c:	cmp	r0, #69	; 0x45
   12c60:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12c64:	ldr	r1, [sp, #24]
   12c68:	ldr	r3, [r1]
   12c6c:	b	131e0 <putchar_unlocked@plt+0x1cbc>
   12c70:	ldr	r1, [sp, #24]
   12c74:	b	12c98 <putchar_unlocked@plt+0x1774>
   12c78:	cmp	r0, #69	; 0x45
   12c7c:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12c80:	ldr	r1, [sp, #76]	; 0x4c
   12c84:	mov	r2, #0
   12c88:	mov	r4, #3
   12c8c:	ldr	r1, [r1, #28]
   12c90:	b	12cd8 <putchar_unlocked@plt+0x17b4>
   12c94:	ldr	r1, [sp, #32]
   12c98:	cmp	r0, #69	; 0x45
   12c9c:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12ca0:	ldr	r3, [r1]
   12ca4:	b	12cb4 <putchar_unlocked@plt+0x1790>
   12ca8:	ldr	r3, [sp, #28]
   12cac:	cmp	r0, #69	; 0x45
   12cb0:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12cb4:	cmp	sl, #0
   12cb8:	movweq	sl, #95	; 0x5f
   12cbc:	b	131e0 <putchar_unlocked@plt+0x1cbc>
   12cc0:	cmp	r0, #69	; 0x45
   12cc4:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12cc8:	ldr	r1, [sp, #76]	; 0x4c
   12ccc:	mov	r2, #0
   12cd0:	mov	r4, #2
   12cd4:	ldr	r1, [r1, #16]
   12cd8:	cmn	r1, #1
   12cdc:	add	r3, r1, #1
   12ce0:	movwlt	r2, #1
   12ce4:	b	131e8 <putchar_unlocked@plt+0x1cc4>
   12ce8:	ldr	r5, [sp, #88]	; 0x58
   12cec:	subs	r0, sl, #45	; 0x2d
   12cf0:	bicne	r0, r8, r8, asr #31
   12cf4:	cmp	r0, #1
   12cf8:	mov	r4, r0
   12cfc:	movls	r4, #1
   12d00:	mvn	r1, r5
   12d04:	cmp	r4, r1
   12d08:	bcs	1365c <putchar_unlocked@plt+0x2138>
   12d0c:	ldr	r1, [sp, #92]	; 0x5c
   12d10:	cmp	r1, #0
   12d14:	beq	123f4 <putchar_unlocked@plt+0xed0>
   12d18:	ldr	r6, [sp, #92]	; 0x5c
   12d1c:	mov	r7, r5
   12d20:	cmp	r0, #2
   12d24:	bcc	122ec <putchar_unlocked@plt+0xdc8>
   12d28:	uxtb	r1, sl
   12d2c:	sub	r5, r0, #1
   12d30:	cmp	r1, #43	; 0x2b
   12d34:	cmpne	r1, #48	; 0x30
   12d38:	bne	122d4 <putchar_unlocked@plt+0xdb0>
   12d3c:	ldr	r6, [sp, #92]	; 0x5c
   12d40:	mov	r0, #48	; 0x30
   12d44:	mov	r1, r6
   12d48:	bl	11494 <fputc@plt>
   12d4c:	subs	r5, r5, #1
   12d50:	bne	12d40 <putchar_unlocked@plt+0x181c>
   12d54:	b	122ec <putchar_unlocked@plt+0xdc8>
   12d58:	ldr	r1, [sp, #76]	; 0x4c
   12d5c:	mov	r2, #11
   12d60:	mov	r4, #1
   12d64:	ldr	r1, [r1, #16]
   12d68:	mul	r1, r1, r2
   12d6c:	mov	r2, #0
   12d70:	add	r3, r4, r1, asr #5
   12d74:	b	131e8 <putchar_unlocked@plt+0x1cc4>
   12d78:	ldr	ip, [sp, #76]	; 0x4c
   12d7c:	str	lr, [sp, #72]	; 0x48
   12d80:	add	r1, sp, #96	; 0x60
   12d84:	mov	r6, r1
   12d88:	ldm	ip!, {r2, r3, r4, r5, r7}
   12d8c:	stmia	r6!, {r2, r3, r4, r5, r7}
   12d90:	ldm	ip, {r0, r2, r3, r4, r5, r7}
   12d94:	stm	r6, {r0, r2, r3, r4, r5, r7}
   12d98:	mvn	r0, #0
   12d9c:	str	r0, [sp, #124]	; 0x7c
   12da0:	ldr	r0, [fp, #16]
   12da4:	bl	1597c <putchar_unlocked@plt+0x4458>
   12da8:	ldr	r1, [sp, #124]	; 0x7c
   12dac:	cmp	r1, #0
   12db0:	blt	13678 <putchar_unlocked@plt+0x2154>
   12db4:	ldr	r1, [sp, #20]
   12db8:	lsr	r2, r0, #31
   12dbc:	mov	r3, r0
   12dc0:	movw	r7, #26215	; 0x6667
   12dc4:	cmp	r0, #0
   12dc8:	movt	r7, #26214	; 0x6666
   12dcc:	smmul	r7, r3, r7
   12dd0:	asr	r5, r7, #2
   12dd4:	add	r7, r5, r7, lsr #31
   12dd8:	add	r5, r7, r7, lsl #2
   12ddc:	sub	r5, r3, r5, lsl #1
   12de0:	add	r3, r3, #9
   12de4:	rsblt	r5, r5, #0
   12de8:	cmp	r3, #18
   12dec:	mov	r3, r7
   12df0:	add	r5, r5, #48	; 0x30
   12df4:	strb	r5, [r1], #-1
   12df8:	bhi	12dc0 <putchar_unlocked@plt+0x189c>
   12dfc:	ldr	lr, [sp, #72]	; 0x48
   12e00:	cmp	r8, #0
   12e04:	add	r5, r1, #1
   12e08:	mov	r6, #0
   12e0c:	movwlt	r8, #1
   12e10:	cmp	sl, #0
   12e14:	movweq	sl, #48	; 0x30
   12e18:	mov	r4, r8
   12e1c:	b	13274 <putchar_unlocked@plt+0x1d50>
   12e20:	ldr	r5, [sp, #88]	; 0x58
   12e24:	subs	r0, sl, #45	; 0x2d
   12e28:	bicne	r0, r8, r8, asr #31
   12e2c:	cmp	r0, #1
   12e30:	mov	r4, r0
   12e34:	movls	r4, #1
   12e38:	mvn	r1, r5
   12e3c:	cmp	r4, r1
   12e40:	bcs	1365c <putchar_unlocked@plt+0x2138>
   12e44:	ldr	r1, [sp, #92]	; 0x5c
   12e48:	cmp	r1, #0
   12e4c:	beq	123f4 <putchar_unlocked@plt+0xed0>
   12e50:	ldr	r6, [sp, #92]	; 0x5c
   12e54:	mov	r7, r5
   12e58:	cmp	r0, #2
   12e5c:	bcc	1230c <putchar_unlocked@plt+0xde8>
   12e60:	uxtb	r1, sl
   12e64:	sub	r5, r0, #1
   12e68:	cmp	r1, #43	; 0x2b
   12e6c:	cmpne	r1, #48	; 0x30
   12e70:	bne	122f4 <putchar_unlocked@plt+0xdd0>
   12e74:	ldr	r6, [sp, #92]	; 0x5c
   12e78:	mov	r0, #48	; 0x30
   12e7c:	mov	r1, r6
   12e80:	bl	11494 <fputc@plt>
   12e84:	subs	r5, r5, #1
   12e88:	bne	12e78 <putchar_unlocked@plt+0x1954>
   12e8c:	b	1230c <putchar_unlocked@plt+0xde8>
   12e90:	ldr	r1, [sp, #76]	; 0x4c
   12e94:	movw	r2, #9363	; 0x2493
   12e98:	mov	r4, #1
   12e9c:	movt	r2, #37449	; 0x9249
   12ea0:	ldr	r1, [r1, #24]
   12ea4:	add	r1, r1, #6
   12ea8:	smmla	r2, r1, r2, r1
   12eac:	asr	r3, r2, #2
   12eb0:	add	r2, r3, r2, lsr #31
   12eb4:	rsb	r2, r2, r2, lsl #3
   12eb8:	sub	r1, r1, r2
   12ebc:	add	r3, r1, #1
   12ec0:	b	131e4 <putchar_unlocked@plt+0x1cc0>
   12ec4:	cmp	r0, #69	; 0x45
   12ec8:	beq	12ee4 <putchar_unlocked@plt+0x19c0>
   12ecc:	ldr	r1, [sp, #76]	; 0x4c
   12ed0:	mov	r4, #1
   12ed4:	ldr	r3, [r1, #24]
   12ed8:	b	131e4 <putchar_unlocked@plt+0x1cc0>
   12edc:	cmp	r0, #79	; 0x4f
   12ee0:	bne	13110 <putchar_unlocked@plt+0x1bec>
   12ee4:	mov	r2, r9
   12ee8:	ldr	r5, [sp, #88]	; 0x58
   12eec:	ldr	r1, [sp, #84]	; 0x54
   12ef0:	subs	r0, sl, #45	; 0x2d
   12ef4:	bicne	r0, r8, r8, asr #31
   12ef8:	sub	r1, r2, r1
   12efc:	add	r4, r1, #1
   12f00:	mvn	r1, r5
   12f04:	cmp	r0, r4
   12f08:	mov	r6, r4
   12f0c:	movhi	r6, r0
   12f10:	cmp	r6, r1
   12f14:	bcs	1365c <putchar_unlocked@plt+0x2138>
   12f18:	mov	r9, r5
   12f1c:	ldr	r5, [sp, #92]	; 0x5c
   12f20:	cmp	r5, #0
   12f24:	beq	12fbc <putchar_unlocked@plt+0x1a98>
   12f28:	mov	r8, lr
   12f2c:	cmp	r0, r4
   12f30:	str	r2, [sp, #88]	; 0x58
   12f34:	bls	12f88 <putchar_unlocked@plt+0x1a64>
   12f38:	sub	r7, r0, r4
   12f3c:	uxtb	r0, sl
   12f40:	cmp	r0, #43	; 0x2b
   12f44:	cmpne	r0, #48	; 0x30
   12f48:	bne	12f6c <putchar_unlocked@plt+0x1a48>
   12f4c:	cmp	r7, #0
   12f50:	beq	12f88 <putchar_unlocked@plt+0x1a64>
   12f54:	mov	r0, #48	; 0x30
   12f58:	mov	r1, r5
   12f5c:	bl	11494 <fputc@plt>
   12f60:	subs	r7, r7, #1
   12f64:	bne	12f54 <putchar_unlocked@plt+0x1a30>
   12f68:	b	12f88 <putchar_unlocked@plt+0x1a64>
   12f6c:	cmp	r7, #0
   12f70:	beq	12f88 <putchar_unlocked@plt+0x1a64>
   12f74:	mov	r0, #32
   12f78:	mov	r1, r5
   12f7c:	bl	11494 <fputc@plt>
   12f80:	subs	r7, r7, #1
   12f84:	bne	12f74 <putchar_unlocked@plt+0x1a50>
   12f88:	tst	r8, #1
   12f8c:	beq	12fa4 <putchar_unlocked@plt+0x1a80>
   12f90:	ldr	r1, [sp, #84]	; 0x54
   12f94:	mov	r0, r5
   12f98:	mov	r2, r4
   12f9c:	bl	136c4 <putchar_unlocked@plt+0x21a0>
   12fa0:	b	12fb8 <putchar_unlocked@plt+0x1a94>
   12fa4:	ldr	r0, [sp, #84]	; 0x54
   12fa8:	mov	r1, r4
   12fac:	mov	r2, #1
   12fb0:	mov	r3, r5
   12fb4:	bl	112d8 <fwrite@plt>
   12fb8:	ldr	r2, [sp, #88]	; 0x58
   12fbc:	mov	r5, r9
   12fc0:	add	r5, r6, r9
   12fc4:	mov	r9, r2
   12fc8:	b	1363c <putchar_unlocked@plt+0x2118>
   12fcc:	cmp	r0, #69	; 0x45
   12fd0:	bne	1311c <putchar_unlocked@plt+0x1bf8>
   12fd4:	mov	r7, #0
   12fd8:	mov	ip, #121	; 0x79
   12fdc:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   12fe0:	sub	r7, r7, #1
   12fe4:	movw	r4, #365	; 0x16d
   12fe8:	tst	r7, #3
   12fec:	bne	13038 <putchar_unlocked@plt+0x1b14>
   12ff0:	movw	r1, #34079	; 0x851f
   12ff4:	movt	r1, #20971	; 0x51eb
   12ff8:	smmul	r1, r7, r1
   12ffc:	asr	r4, r1, #5
   13000:	add	r5, r4, r1, lsr #31
   13004:	mov	r4, #100	; 0x64
   13008:	mls	r5, r5, r4, r7
   1300c:	asr	r4, r1, #7
   13010:	add	r1, r4, r1, lsr #31
   13014:	mov	r4, #400	; 0x190
   13018:	mls	r1, r1, r4, r7
   1301c:	movw	r4, #365	; 0x16d
   13020:	cmp	r1, #0
   13024:	movweq	r4, #366	; 0x16e
   13028:	cmp	r5, #0
   1302c:	movw	r5, #9363	; 0x2493
   13030:	movt	r5, #37449	; 0x9249
   13034:	movwne	r4, #366	; 0x16e
   13038:	add	r1, r4, r3
   1303c:	movw	r3, #382	; 0x17e
   13040:	sub	r2, r3, r2
   13044:	add	r1, r2, r1
   13048:	smmla	r1, r1, r5, r1
   1304c:	asr	r3, r1, #2
   13050:	add	r1, r3, r1, lsr #31
   13054:	mvn	r3, #0
   13058:	rsb	r1, r1, r1, lsl #3
   1305c:	sub	r1, r1, r2
   13060:	add	r4, r1, #3
   13064:	cmp	ip, #71	; 0x47
   13068:	beq	13158 <putchar_unlocked@plt+0x1c34>
   1306c:	cmp	ip, #103	; 0x67
   13070:	bne	131d0 <putchar_unlocked@plt+0x1cac>
   13074:	movw	r1, #34079	; 0x851f
   13078:	mov	r4, #2
   1307c:	movt	r1, #20971	; 0x51eb
   13080:	smmul	r2, r6, r1
   13084:	asr	r7, r2, #5
   13088:	add	r2, r7, r2, lsr #31
   1308c:	mov	r7, #100	; 0x64
   13090:	mls	r2, r2, r7, r6
   13094:	add	r2, r3, r2
   13098:	smmul	r1, r2, r1
   1309c:	asr	r5, r1, #5
   130a0:	add	r1, r5, r1, lsr #31
   130a4:	mls	r1, r1, r7, r2
   130a8:	mov	r2, #0
   130ac:	cmn	r1, #1
   130b0:	ble	12150 <putchar_unlocked@plt+0xc2c>
   130b4:	mov	r3, r1
   130b8:	b	13180 <putchar_unlocked@plt+0x1c5c>
   130bc:	ldr	r1, [sp, #76]	; 0x4c
   130c0:	movw	r7, #63636	; 0xf894
   130c4:	mov	r3, #0
   130c8:	mvn	r5, #98	; 0x62
   130cc:	mov	r2, #0
   130d0:	mov	r4, #2
   130d4:	movt	r7, #65535	; 0xffff
   130d8:	ldr	r1, [r1, #20]
   130dc:	cmp	r1, r7
   130e0:	movwge	r3, #1
   130e4:	cmp	r1, r7
   130e8:	and	r3, r3, r1, lsr #31
   130ec:	movwlt	r2, #1
   130f0:	smlabb	r3, r3, r5, r1
   130f4:	movw	r5, #34079	; 0x851f
   130f8:	movt	r5, #20971	; 0x51eb
   130fc:	smmul	r3, r3, r5
   13100:	asr	r5, r3, #5
   13104:	add	r3, r5, r3, lsr #31
   13108:	add	r3, r3, #19
   1310c:	b	13180 <putchar_unlocked@plt+0x1c5c>
   13110:	mov	r7, #0
   13114:	mov	ip, #120	; 0x78
   13118:	b	134a0 <putchar_unlocked@plt+0x1f7c>
   1311c:	ldr	r1, [sp, #76]	; 0x4c
   13120:	movw	r2, #34079	; 0x851f
   13124:	mov	r4, #2
   13128:	movt	r2, #20971	; 0x51eb
   1312c:	ldr	r1, [r1, #20]
   13130:	smmul	r2, r1, r2
   13134:	asr	r3, r2, #5
   13138:	add	r2, r3, r2, lsr #31
   1313c:	mov	r3, #100	; 0x64
   13140:	mls	r7, r2, r3, r1
   13144:	mov	r2, #0
   13148:	cmn	r7, #1
   1314c:	ble	1216c <putchar_unlocked@plt+0xc48>
   13150:	mov	r3, r7
   13154:	b	13180 <putchar_unlocked@plt+0x1c5c>
   13158:	movw	r1, #63636	; 0xf894
   1315c:	mov	r2, #0
   13160:	movt	r1, #65535	; 0xffff
   13164:	sub	r1, r1, r3
   13168:	cmp	r6, r1
   1316c:	add	r1, r6, r3
   13170:	movwlt	r2, #1
   13174:	movw	r3, #1900	; 0x76c
   13178:	mov	r4, #4
   1317c:	add	r3, r1, r3
   13180:	ldr	r1, [fp, #8]
   13184:	cmp	sl, #0
   13188:	mov	r6, #0
   1318c:	moveq	sl, r1
   13190:	mov	r1, #0
   13194:	cmp	sl, #43	; 0x2b
   13198:	bne	131f8 <putchar_unlocked@plt+0x1cd4>
   1319c:	cmp	r4, r8
   131a0:	mov	r5, #0
   131a4:	mov	r6, r4
   131a8:	movw	r4, #9999	; 0x270f
   131ac:	mov	r7, #0
   131b0:	movwlt	r5, #1
   131b4:	cmp	r6, #2
   131b8:	movweq	r4, #99	; 0x63
   131bc:	cmp	r4, r3
   131c0:	mov	r4, r6
   131c4:	movwcc	r7, #1
   131c8:	orr	r6, r5, r7
   131cc:	b	131f8 <putchar_unlocked@plt+0x1cd4>
   131d0:	smmla	r1, r4, r5, r4
   131d4:	asr	r2, r1, #2
   131d8:	add	r1, r2, r1, lsr #31
   131dc:	add	r3, r1, #1
   131e0:	mov	r4, #2
   131e4:	lsr	r2, r3, #31
   131e8:	cmp	r2, #0
   131ec:	mov	r1, #0
   131f0:	mov	r6, #0
   131f4:	movwne	r2, #1
   131f8:	cmp	r0, #79	; 0x4f
   131fc:	moveq	r7, #0
   13200:	cmpeq	r2, #0
   13204:	beq	134a0 <putchar_unlocked@plt+0x1f7c>
   13208:	ldr	r5, [sp, #64]	; 0x40
   1320c:	cmp	r2, #0
   13210:	rsbne	r3, r3, #0
   13214:	tst	r1, #1
   13218:	asr	r1, r1, #1
   1321c:	movne	r0, #58	; 0x3a
   13220:	strbne	r0, [r5, #-1]!
   13224:	movw	r0, #52429	; 0xcccd
   13228:	cmp	r3, #9
   1322c:	movt	r0, #52428	; 0xcccc
   13230:	umull	r0, r7, r3, r0
   13234:	lsr	r0, r7, #3
   13238:	add	r7, r0, r0, lsl #2
   1323c:	sub	r7, r3, r7, lsl #1
   13240:	mov	r3, r0
   13244:	orr	r7, r7, #48	; 0x30
   13248:	strb	r7, [r5, #-1]!
   1324c:	bhi	13214 <putchar_unlocked@plt+0x1cf0>
   13250:	cmp	r1, #0
   13254:	mov	r3, r0
   13258:	bne	13214 <putchar_unlocked@plt+0x1cf0>
   1325c:	cmp	r8, #0
   13260:	movge	r4, r8
   13264:	cmp	r6, #0
   13268:	movwne	r6, #43	; 0x2b
   1326c:	cmp	sl, #0
   13270:	movweq	sl, #48	; 0x30
   13274:	ldr	r1, [sp, #64]	; 0x40
   13278:	cmp	r2, #0
   1327c:	mov	r0, r4
   13280:	str	lr, [sp, #72]	; 0x48
   13284:	movwne	r6, #45	; 0x2d
   13288:	cmp	r6, #0
   1328c:	subne	r0, r0, #1
   13290:	sub	r2, r1, r5
   13294:	sub	r8, r0, r2
   13298:	mov	r0, r6
   1329c:	str	r2, [sp, #84]	; 0x54
   132a0:	cmp	r8, #1
   132a4:	str	r0, [sp, #40]	; 0x28
   132a8:	movwlt	r8, #0
   132ac:	subs	r6, sl, #45	; 0x2d
   132b0:	moveq	r8, r6
   132b4:	cmp	r0, #0
   132b8:	beq	13308 <putchar_unlocked@plt+0x1de4>
   132bc:	cmp	sl, #95	; 0x5f
   132c0:	bne	13310 <putchar_unlocked@plt+0x1dec>
   132c4:	str	r4, [sp, #44]	; 0x2c
   132c8:	ldr	r4, [sp, #92]	; 0x5c
   132cc:	cmp	r4, #0
   132d0:	cmpne	r8, #0
   132d4:	beq	132f0 <putchar_unlocked@plt+0x1dcc>
   132d8:	mov	r7, r8
   132dc:	mov	r0, #32
   132e0:	mov	r1, r4
   132e4:	bl	11494 <fputc@plt>
   132e8:	subs	r7, r7, #1
   132ec:	bne	132dc <putchar_unlocked@plt+0x1db8>
   132f0:	ldr	r4, [sp, #44]	; 0x2c
   132f4:	ldr	r0, [sp, #88]	; 0x58
   132f8:	ldr	r2, [sp, #84]	; 0x54
   132fc:	sub	r4, r4, r8
   13300:	add	r0, r8, r0
   13304:	b	13314 <putchar_unlocked@plt+0x1df0>
   13308:	ldr	r7, [sp, #88]	; 0x58
   1330c:	b	1334c <putchar_unlocked@plt+0x1e28>
   13310:	ldr	r0, [sp, #88]	; 0x58
   13314:	cmn	r0, #3
   13318:	bhi	1365c <putchar_unlocked@plt+0x2138>
   1331c:	ldr	r1, [sp, #92]	; 0x5c
   13320:	mov	r7, r0
   13324:	cmp	r1, #0
   13328:	beq	13344 <putchar_unlocked@plt+0x1e20>
   1332c:	ldr	r0, [sp, #40]	; 0x28
   13330:	str	r4, [sp, #44]	; 0x2c
   13334:	mov	r8, r2
   13338:	bl	11494 <fputc@plt>
   1333c:	ldr	r4, [sp, #44]	; 0x2c
   13340:	mov	r2, r8
   13344:	sub	r4, r4, #1
   13348:	add	r7, r7, #1
   1334c:	cmp	sl, #45	; 0x2d
   13350:	mvn	r0, r7
   13354:	bicne	r6, r4, r4, asr #31
   13358:	mov	r4, r2
   1335c:	cmp	r6, r2
   13360:	movhi	r4, r6
   13364:	cmp	r4, r0
   13368:	bcs	1365c <putchar_unlocked@plt+0x2138>
   1336c:	ldr	r0, [sp, #92]	; 0x5c
   13370:	mov	r8, r7
   13374:	cmp	r0, #0
   13378:	beq	13634 <putchar_unlocked@plt+0x2110>
   1337c:	cmp	r6, r2
   13380:	bls	133dc <putchar_unlocked@plt+0x1eb8>
   13384:	ldr	r0, [sp, #84]	; 0x54
   13388:	cmp	sl, #43	; 0x2b
   1338c:	cmpne	sl, #48	; 0x30
   13390:	sub	r6, r6, r0
   13394:	bne	133bc <putchar_unlocked@plt+0x1e98>
   13398:	ldr	r7, [sp, #92]	; 0x5c
   1339c:	cmp	r6, #0
   133a0:	beq	133dc <putchar_unlocked@plt+0x1eb8>
   133a4:	mov	r0, #48	; 0x30
   133a8:	mov	r1, r7
   133ac:	bl	11494 <fputc@plt>
   133b0:	subs	r6, r6, #1
   133b4:	bne	133a4 <putchar_unlocked@plt+0x1e80>
   133b8:	b	133dc <putchar_unlocked@plt+0x1eb8>
   133bc:	ldr	r7, [sp, #92]	; 0x5c
   133c0:	cmp	r6, #0
   133c4:	beq	133dc <putchar_unlocked@plt+0x1eb8>
   133c8:	mov	r0, #32
   133cc:	mov	r1, r7
   133d0:	bl	11494 <fputc@plt>
   133d4:	subs	r6, r6, #1
   133d8:	bne	133c8 <putchar_unlocked@plt+0x1ea4>
   133dc:	ldr	r0, [sp, #72]	; 0x48
   133e0:	tst	r0, #1
   133e4:	beq	133fc <putchar_unlocked@plt+0x1ed8>
   133e8:	ldr	r0, [sp, #92]	; 0x5c
   133ec:	ldr	r2, [sp, #84]	; 0x54
   133f0:	mov	r1, r5
   133f4:	bl	136c4 <putchar_unlocked@plt+0x21a0>
   133f8:	b	13634 <putchar_unlocked@plt+0x2110>
   133fc:	ldr	r1, [sp, #84]	; 0x54
   13400:	ldr	r3, [sp, #92]	; 0x5c
   13404:	mov	r0, r5
   13408:	mov	r2, #1
   1340c:	bl	112d8 <fwrite@plt>
   13410:	b	13634 <putchar_unlocked@plt+0x2110>
   13414:	mov	r2, #1
   13418:	cmp	r7, #3
   1341c:	bhi	12184 <putchar_unlocked@plt+0xc60>
   13420:	movw	r3, #34953	; 0x8889
   13424:	mov	r6, r7
   13428:	movt	r3, #34952	; 0x8888
   1342c:	smmla	r7, r1, r3, r1
   13430:	asr	r4, r7, #5
   13434:	add	r4, r4, r7, lsr #31
   13438:	smmla	r3, r4, r3, r4
   1343c:	asr	r7, r3, #5
   13440:	add	r3, r7, r3, lsr #31
   13444:	rsb	r3, r3, r3, lsl #4
   13448:	sub	lr, r4, r3, lsl #2
   1344c:	movw	r3, #46021	; 0xb3c5
   13450:	rsb	r4, r4, r4, lsl #4
   13454:	movt	r3, #37282	; 0x91a2
   13458:	smmla	r3, r1, r3, r1
   1345c:	sub	r1, r1, r4, lsl #2
   13460:	add	r4, pc, #8
   13464:	asr	r7, r3, #11
   13468:	add	r3, r7, r3, lsr #31
   1346c:	ldr	pc, [r4, r6, lsl #2]
   13470:	andeq	r3, r1, r0, lsl #9
   13474:	andeq	r2, r1, ip, lsl r3
   13478:	andeq	r2, r1, r0, lsr #3
   1347c:	muleq	r1, r8, r1
   13480:	mov	r1, #100	; 0x64
   13484:	mov	r4, #5
   13488:	mla	r3, r3, r1, lr
   1348c:	mov	r6, #1
   13490:	mov	r1, #0
   13494:	b	12330 <putchar_unlocked@plt+0xe0c>
   13498:	mov	r7, #0
   1349c:	mov	ip, #89	; 0x59
   134a0:	movw	r1, #9504	; 0x2520
   134a4:	cmp	r0, #0
   134a8:	ldr	r3, [sp, #76]	; 0x4c
   134ac:	sub	r2, fp, #51	; 0x33
   134b0:	str	lr, [sp, #72]	; 0x48
   134b4:	strh	r1, [fp, #-51]	; 0xffffffcd
   134b8:	ldr	r1, [sp, #68]	; 0x44
   134bc:	strbne	r0, [fp, #-49]	; 0xffffffcf
   134c0:	mov	r0, #0
   134c4:	ldrne	r1, [sp, #52]	; 0x34
   134c8:	strb	r0, [r1, #1]
   134cc:	strb	ip, [r1]
   134d0:	add	r0, sp, #96	; 0x60
   134d4:	mov	r1, #1024	; 0x400
   134d8:	bl	11350 <strftime@plt>
   134dc:	cmp	r0, #0
   134e0:	beq	13560 <putchar_unlocked@plt+0x203c>
   134e4:	subs	r1, sl, #45	; 0x2d
   134e8:	sub	r4, r0, #1
   134ec:	ldr	r0, [sp, #88]	; 0x58
   134f0:	movne	r1, r8
   134f4:	cmp	r8, #0
   134f8:	mov	r6, r4
   134fc:	movwlt	r1, #0
   13500:	cmp	r1, r4
   13504:	movhi	r6, r1
   13508:	mvn	r0, r0
   1350c:	cmp	r6, r0
   13510:	bcs	1365c <putchar_unlocked@plt+0x2138>
   13514:	ldr	r0, [sp, #92]	; 0x5c
   13518:	cmp	r0, #0
   1351c:	beq	135d8 <putchar_unlocked@plt+0x20b4>
   13520:	mov	r8, r7
   13524:	cmp	r1, r4
   13528:	bls	13588 <putchar_unlocked@plt+0x2064>
   1352c:	cmp	sl, #43	; 0x2b
   13530:	sub	r7, r1, r4
   13534:	cmpne	sl, #48	; 0x30
   13538:	bne	13568 <putchar_unlocked@plt+0x2044>
   1353c:	ldr	r5, [sp, #92]	; 0x5c
   13540:	cmp	r7, #0
   13544:	beq	13588 <putchar_unlocked@plt+0x2064>
   13548:	mov	r0, #48	; 0x30
   1354c:	mov	r1, r5
   13550:	bl	11494 <fputc@plt>
   13554:	subs	r7, r7, #1
   13558:	bne	13548 <putchar_unlocked@plt+0x2024>
   1355c:	b	13588 <putchar_unlocked@plt+0x2064>
   13560:	ldr	r5, [sp, #88]	; 0x58
   13564:	b	1363c <putchar_unlocked@plt+0x2118>
   13568:	ldr	r5, [sp, #92]	; 0x5c
   1356c:	cmp	r7, #0
   13570:	beq	13588 <putchar_unlocked@plt+0x2064>
   13574:	mov	r0, #32
   13578:	mov	r1, r5
   1357c:	bl	11494 <fputc@plt>
   13580:	subs	r7, r7, #1
   13584:	bne	13574 <putchar_unlocked@plt+0x2050>
   13588:	tst	r8, #1
   1358c:	beq	135a4 <putchar_unlocked@plt+0x2080>
   13590:	ldr	r0, [sp, #92]	; 0x5c
   13594:	ldr	r1, [sp, #48]	; 0x30
   13598:	mov	r2, r4
   1359c:	bl	13680 <putchar_unlocked@plt+0x215c>
   135a0:	b	135d8 <putchar_unlocked@plt+0x20b4>
   135a4:	ldr	r0, [sp, #72]	; 0x48
   135a8:	tst	r0, #1
   135ac:	beq	135c4 <putchar_unlocked@plt+0x20a0>
   135b0:	ldr	r0, [sp, #92]	; 0x5c
   135b4:	ldr	r1, [sp, #48]	; 0x30
   135b8:	mov	r2, r4
   135bc:	bl	136c4 <putchar_unlocked@plt+0x21a0>
   135c0:	b	135d8 <putchar_unlocked@plt+0x20b4>
   135c4:	ldr	r0, [sp, #48]	; 0x30
   135c8:	mov	r1, r4
   135cc:	ldr	r3, [sp, #92]	; 0x5c
   135d0:	mov	r2, #1
   135d4:	bl	112d8 <fwrite@plt>
   135d8:	ldr	r5, [sp, #88]	; 0x58
   135dc:	add	r5, r6, r5
   135e0:	b	1363c <putchar_unlocked@plt+0x2118>
   135e4:	ldr	r7, [sp, #92]	; 0x5c
   135e8:	cmp	r6, #0
   135ec:	beq	13604 <putchar_unlocked@plt+0x20e0>
   135f0:	mov	r0, #32
   135f4:	mov	r1, r7
   135f8:	bl	11494 <fputc@plt>
   135fc:	subs	r6, r6, #1
   13600:	bne	135f0 <putchar_unlocked@plt+0x20cc>
   13604:	ldr	r0, [sp, #84]	; 0x54
   13608:	ldr	r1, [sp, #72]	; 0x48
   1360c:	ldr	r2, [sp, #76]	; 0x4c
   13610:	mov	r3, r5
   13614:	str	sl, [sp]
   13618:	str	r0, [sp, #4]
   1361c:	ldr	r0, [fp, #16]
   13620:	str	r0, [sp, #8]
   13624:	ldr	r0, [fp, #20]
   13628:	str	r0, [sp, #12]
   1362c:	mov	r0, r7
   13630:	bl	12078 <putchar_unlocked@plt+0xb54>
   13634:	mov	r5, r8
   13638:	add	r5, r4, r8
   1363c:	ldrb	r3, [r9, #1]!
   13640:	mvn	r8, #0
   13644:	cmp	r3, #0
   13648:	bne	1236c <putchar_unlocked@plt+0xe48>
   1364c:	ldr	r0, [sp, #60]	; 0x3c
   13650:	ldr	r1, [sp, #56]	; 0x38
   13654:	str	r1, [r0]
   13658:	b	1366c <putchar_unlocked@plt+0x2148>
   1365c:	mov	r0, #34	; 0x22
   13660:	ldr	r1, [sp, #60]	; 0x3c
   13664:	mov	r5, #0
   13668:	str	r0, [r1]
   1366c:	mov	r0, r5
   13670:	sub	sp, fp, #28
   13674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13678:	mov	r0, #75	; 0x4b
   1367c:	b	13660 <putchar_unlocked@plt+0x213c>
   13680:	push	{r4, r5, r6, r7, fp, lr}
   13684:	add	fp, sp, #16
   13688:	cmp	r2, #0
   1368c:	popeq	{r4, r5, r6, r7, fp, pc}
   13690:	mov	r4, r2
   13694:	mov	r5, r1
   13698:	mov	r6, r0
   1369c:	bl	11374 <__ctype_tolower_loc@plt>
   136a0:	mov	r7, r0
   136a4:	ldrb	r0, [r5], #1
   136a8:	ldr	r1, [r7]
   136ac:	ldr	r0, [r1, r0, lsl #2]
   136b0:	mov	r1, r6
   136b4:	bl	11494 <fputc@plt>
   136b8:	subs	r4, r4, #1
   136bc:	bne	136a4 <putchar_unlocked@plt+0x2180>
   136c0:	pop	{r4, r5, r6, r7, fp, pc}
   136c4:	push	{r4, r5, r6, r7, fp, lr}
   136c8:	add	fp, sp, #16
   136cc:	cmp	r2, #0
   136d0:	popeq	{r4, r5, r6, r7, fp, pc}
   136d4:	mov	r4, r2
   136d8:	mov	r5, r1
   136dc:	mov	r6, r0
   136e0:	bl	11380 <__ctype_toupper_loc@plt>
   136e4:	mov	r7, r0
   136e8:	ldrb	r0, [r5], #1
   136ec:	ldr	r1, [r7]
   136f0:	ldr	r0, [r1, r0, lsl #2]
   136f4:	mov	r1, r6
   136f8:	bl	11494 <fputc@plt>
   136fc:	subs	r4, r4, #1
   13700:	bne	136e8 <putchar_unlocked@plt+0x21c4>
   13704:	pop	{r4, r5, r6, r7, fp, pc}
   13708:	push	{r4, r5, r6, r7, fp, lr}
   1370c:	add	fp, sp, #16
   13710:	sub	sp, sp, #8
   13714:	mov	r4, r0
   13718:	ldr	r0, [r0, #4]
   1371c:	mov	r5, r3
   13720:	mov	r6, r2
   13724:	ldr	r1, [r4, #8]
   13728:	cmp	r1, r0
   1372c:	bne	13748 <putchar_unlocked@plt+0x2224>
   13730:	ldrd	r0, [r4, #16]
   13734:	cmp	r1, r0
   13738:	bne	13748 <putchar_unlocked@plt+0x2224>
   1373c:	ldr	r0, [r4, #36]	; 0x24
   13740:	cmp	r0, #0
   13744:	beq	13760 <putchar_unlocked@plt+0x223c>
   13748:	mov	r0, r4
   1374c:	mov	r2, r6
   13750:	mov	r3, r5
   13754:	sub	sp, fp, #16
   13758:	pop	{r4, r5, r6, r7, fp, lr}
   1375c:	b	11440 <fseeko64@plt>
   13760:	ldr	r7, [fp, #8]
   13764:	mov	r0, r4
   13768:	bl	1141c <fileno@plt>
   1376c:	mov	r2, r6
   13770:	mov	r3, r5
   13774:	str	r7, [sp]
   13778:	bl	112e4 <lseek64@plt>
   1377c:	and	r2, r0, r1
   13780:	cmn	r2, #1
   13784:	beq	137a0 <putchar_unlocked@plt+0x227c>
   13788:	strd	r0, [r4, #80]	; 0x50
   1378c:	ldr	r0, [r4]
   13790:	bic	r0, r0, #16
   13794:	str	r0, [r4]
   13798:	mov	r0, #0
   1379c:	b	137a4 <putchar_unlocked@plt+0x2280>
   137a0:	mvn	r0, #0
   137a4:	sub	sp, fp, #16
   137a8:	pop	{r4, r5, r6, r7, fp, pc}
   137ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   137b0:	add	fp, sp, #24
   137b4:	sub	sp, sp, #8
   137b8:	movw	r6, #33168	; 0x8190
   137bc:	mov	r4, #0
   137c0:	cmp	r0, #2
   137c4:	movt	r6, #2
   137c8:	ldr	r7, [r6]
   137cc:	str	r4, [r6]
   137d0:	bne	13844 <putchar_unlocked@plt+0x2320>
   137d4:	mov	r8, r3
   137d8:	movw	r3, #27844	; 0x6cc4
   137dc:	mov	r5, r2
   137e0:	movw	r2, #27829	; 0x6cb5
   137e4:	mov	r0, #2
   137e8:	str	r4, [sp]
   137ec:	movt	r2, #1
   137f0:	movt	r3, #1
   137f4:	bl	11398 <getopt_long@plt>
   137f8:	cmp	r0, #104	; 0x68
   137fc:	beq	13838 <putchar_unlocked@plt+0x2314>
   13800:	cmp	r0, #118	; 0x76
   13804:	bne	13844 <putchar_unlocked@plt+0x2320>
   13808:	movw	r0, #33164	; 0x818c
   1380c:	ldr	r3, [fp, #8]
   13810:	add	r1, fp, #16
   13814:	mov	r2, r8
   13818:	movt	r0, #2
   1381c:	str	r1, [sp, #4]
   13820:	str	r1, [sp]
   13824:	mov	r1, r5
   13828:	ldr	r0, [r0]
   1382c:	bl	15e14 <putchar_unlocked@plt+0x48f0>
   13830:	mov	r0, #0
   13834:	bl	113bc <exit@plt>
   13838:	ldr	r1, [fp, #12]
   1383c:	mov	r0, #0
   13840:	blx	r1
   13844:	movw	r0, #33152	; 0x8180
   13848:	str	r7, [r6]
   1384c:	movt	r0, #2
   13850:	str	r4, [r0]
   13854:	sub	sp, fp, #24
   13858:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1385c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13860:	add	fp, sp, #24
   13864:	sub	sp, sp, #8
   13868:	movw	r6, #33168	; 0x8190
   1386c:	mov	r8, r3
   13870:	ldr	r3, [fp, #12]
   13874:	mov	r5, r2
   13878:	mov	r2, #1
   1387c:	movw	r4, #26968	; 0x6958
   13880:	movt	r6, #2
   13884:	movt	r4, #1
   13888:	ldr	r7, [r6]
   1388c:	str	r2, [r6]
   13890:	mov	r2, #0
   13894:	str	r2, [sp]
   13898:	movw	r2, #27829	; 0x6cb5
   1389c:	cmp	r3, #0
   138a0:	movt	r2, #1
   138a4:	movw	r3, #27844	; 0x6cc4
   138a8:	movne	r2, r4
   138ac:	movt	r3, #1
   138b0:	bl	11398 <getopt_long@plt>
   138b4:	cmn	r0, #1
   138b8:	beq	138e8 <putchar_unlocked@plt+0x23c4>
   138bc:	ldr	r1, [fp, #16]
   138c0:	cmp	r0, #104	; 0x68
   138c4:	beq	138e0 <putchar_unlocked@plt+0x23bc>
   138c8:	cmp	r0, #118	; 0x76
   138cc:	beq	138f4 <putchar_unlocked@plt+0x23d0>
   138d0:	movw	r0, #33076	; 0x8134
   138d4:	movt	r0, #2
   138d8:	ldr	r0, [r0]
   138dc:	b	138e4 <putchar_unlocked@plt+0x23c0>
   138e0:	mov	r0, #0
   138e4:	blx	r1
   138e8:	str	r7, [r6]
   138ec:	sub	sp, fp, #24
   138f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   138f4:	movw	r0, #33164	; 0x818c
   138f8:	ldr	r3, [fp, #8]
   138fc:	add	r1, fp, #20
   13900:	mov	r2, r8
   13904:	movt	r0, #2
   13908:	str	r1, [sp, #4]
   1390c:	str	r1, [sp]
   13910:	mov	r1, r5
   13914:	ldr	r0, [r0]
   13918:	bl	15e14 <putchar_unlocked@plt+0x48f0>
   1391c:	mov	r0, #0
   13920:	bl	113bc <exit@plt>
   13924:	push	{r4, r5, fp, lr}
   13928:	add	fp, sp, #8
   1392c:	cmp	r0, #0
   13930:	beq	139c4 <putchar_unlocked@plt+0x24a0>
   13934:	mov	r1, #47	; 0x2f
   13938:	mov	r4, r0
   1393c:	bl	1147c <strrchr@plt>
   13940:	cmp	r0, #0
   13944:	mov	r5, r4
   13948:	addne	r5, r0, #1
   1394c:	sub	r0, r5, r4
   13950:	cmp	r0, #7
   13954:	blt	139a8 <putchar_unlocked@plt+0x2484>
   13958:	movw	r1, #27948	; 0x6d2c
   1395c:	sub	r0, r5, #7
   13960:	mov	r2, #7
   13964:	movt	r1, #1
   13968:	bl	114f4 <strncmp@plt>
   1396c:	cmp	r0, #0
   13970:	bne	139a8 <putchar_unlocked@plt+0x2484>
   13974:	movw	r1, #27956	; 0x6d34
   13978:	mov	r0, r5
   1397c:	mov	r2, #3
   13980:	movt	r1, #1
   13984:	bl	114f4 <strncmp@plt>
   13988:	cmp	r0, #0
   1398c:	beq	13998 <putchar_unlocked@plt+0x2474>
   13990:	mov	r4, r5
   13994:	b	139a8 <putchar_unlocked@plt+0x2484>
   13998:	movw	r0, #33144	; 0x8178
   1399c:	add	r4, r5, #3
   139a0:	movt	r0, #2
   139a4:	str	r4, [r0]
   139a8:	movw	r0, #33148	; 0x817c
   139ac:	movt	r0, #2
   139b0:	str	r4, [r0]
   139b4:	movw	r0, #33188	; 0x81a4
   139b8:	movt	r0, #2
   139bc:	str	r4, [r0]
   139c0:	pop	{r4, r5, fp, pc}
   139c4:	movw	r0, #33160	; 0x8188
   139c8:	movt	r0, #2
   139cc:	ldr	r1, [r0]
   139d0:	movw	r0, #27892	; 0x6cf4
   139d4:	movt	r0, #1
   139d8:	bl	114e8 <fputs@plt>
   139dc:	bl	11500 <abort@plt>
   139e0:	push	{r4, r5, r6, sl, fp, lr}
   139e4:	add	fp, sp, #16
   139e8:	mov	r4, r0
   139ec:	movw	r0, #33192	; 0x81a8
   139f0:	movt	r0, #2
   139f4:	cmp	r4, #0
   139f8:	moveq	r4, r0
   139fc:	bl	113e0 <__errno_location@plt>
   13a00:	ldr	r6, [r0]
   13a04:	mov	r5, r0
   13a08:	mov	r0, r4
   13a0c:	mov	r1, #48	; 0x30
   13a10:	bl	162b8 <putchar_unlocked@plt+0x4d94>
   13a14:	str	r6, [r5]
   13a18:	pop	{r4, r5, r6, sl, fp, pc}
   13a1c:	movw	r1, #33192	; 0x81a8
   13a20:	cmp	r0, #0
   13a24:	movt	r1, #2
   13a28:	movne	r1, r0
   13a2c:	ldr	r0, [r1]
   13a30:	bx	lr
   13a34:	movw	r2, #33192	; 0x81a8
   13a38:	cmp	r0, #0
   13a3c:	movt	r2, #2
   13a40:	movne	r2, r0
   13a44:	str	r1, [r2]
   13a48:	bx	lr
   13a4c:	movw	r3, #33192	; 0x81a8
   13a50:	cmp	r0, #0
   13a54:	movt	r3, #2
   13a58:	movne	r3, r0
   13a5c:	ubfx	r0, r1, #5, #3
   13a60:	and	r1, r1, #31
   13a64:	add	r0, r3, r0, lsl #2
   13a68:	ldr	r3, [r0, #8]
   13a6c:	eor	r2, r2, r3, lsr r1
   13a70:	and	r2, r2, #1
   13a74:	eor	r2, r3, r2, lsl r1
   13a78:	str	r2, [r0, #8]
   13a7c:	mov	r0, #1
   13a80:	and	r0, r0, r3, lsr r1
   13a84:	bx	lr
   13a88:	movw	r2, #33192	; 0x81a8
   13a8c:	cmp	r0, #0
   13a90:	movt	r2, #2
   13a94:	movne	r2, r0
   13a98:	ldr	r0, [r2, #4]
   13a9c:	str	r1, [r2, #4]
   13aa0:	bx	lr
   13aa4:	movw	r3, #33192	; 0x81a8
   13aa8:	cmp	r0, #0
   13aac:	movt	r3, #2
   13ab0:	movne	r3, r0
   13ab4:	cmp	r1, #0
   13ab8:	mov	r0, #10
   13abc:	cmpne	r2, #0
   13ac0:	str	r0, [r3]
   13ac4:	bne	13ad4 <putchar_unlocked@plt+0x25b0>
   13ac8:	push	{fp, lr}
   13acc:	mov	fp, sp
   13ad0:	bl	11500 <abort@plt>
   13ad4:	str	r1, [r3, #40]	; 0x28
   13ad8:	str	r2, [r3, #44]	; 0x2c
   13adc:	bx	lr
   13ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ae4:	add	fp, sp, #28
   13ae8:	sub	sp, sp, #20
   13aec:	mov	r7, r0
   13af0:	ldr	r0, [fp, #8]
   13af4:	movw	r5, #33192	; 0x81a8
   13af8:	mov	r8, r3
   13afc:	mov	r9, r2
   13b00:	mov	sl, r1
   13b04:	movt	r5, #2
   13b08:	cmp	r0, #0
   13b0c:	movne	r5, r0
   13b10:	bl	113e0 <__errno_location@plt>
   13b14:	mov	r4, r0
   13b18:	ldm	r5, {r0, r1}
   13b1c:	ldr	r2, [r5, #40]	; 0x28
   13b20:	ldr	r3, [r5, #44]	; 0x2c
   13b24:	add	r5, r5, #8
   13b28:	ldr	r6, [r4]
   13b2c:	stm	sp, {r0, r1, r5}
   13b30:	str	r2, [sp, #12]
   13b34:	str	r3, [sp, #16]
   13b38:	mov	r0, r7
   13b3c:	mov	r1, sl
   13b40:	mov	r2, r9
   13b44:	mov	r3, r8
   13b48:	bl	13b58 <putchar_unlocked@plt+0x2634>
   13b4c:	str	r6, [r4]
   13b50:	sub	sp, fp, #28
   13b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b5c:	add	fp, sp, #28
   13b60:	sub	sp, sp, #156	; 0x9c
   13b64:	str	r0, [fp, #-56]	; 0xffffffc8
   13b68:	ldr	r0, [fp, #12]
   13b6c:	mov	r4, r1
   13b70:	str	r3, [sp, #80]	; 0x50
   13b74:	str	r2, [fp, #-84]	; 0xffffffac
   13b78:	and	r1, r0, #4
   13b7c:	str	r1, [sp, #24]
   13b80:	and	r1, r0, #1
   13b84:	str	r1, [sp, #28]
   13b88:	ubfx	r7, r0, #1, #1
   13b8c:	bl	112f0 <__ctype_get_mb_cur_max@plt>
   13b90:	str	r0, [sp, #32]
   13b94:	ldr	r0, [fp, #24]
   13b98:	ldr	r9, [fp, #8]
   13b9c:	mov	r2, #0
   13ba0:	mov	r1, #0
   13ba4:	mov	r5, #0
   13ba8:	str	r2, [sp, #52]	; 0x34
   13bac:	mov	r2, #1
   13bb0:	str	r0, [sp, #72]	; 0x48
   13bb4:	ldr	r0, [fp, #20]
   13bb8:	str	r0, [sp, #64]	; 0x40
   13bbc:	mov	r0, #0
   13bc0:	str	r0, [sp, #92]	; 0x5c
   13bc4:	mov	r0, #0
   13bc8:	str	r0, [fp, #-76]	; 0xffffffb4
   13bcc:	mov	r0, #0
   13bd0:	cmp	r9, #10
   13bd4:	str	r1, [sp, #68]	; 0x44
   13bd8:	bhi	14bd8 <putchar_unlocked@plt+0x36b4>
   13bdc:	add	r1, pc, #28
   13be0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13be4:	ldr	lr, [sp, #80]	; 0x50
   13be8:	mov	r6, r4
   13bec:	mov	r8, #0
   13bf0:	mov	r3, #1
   13bf4:	mov	sl, #0
   13bf8:	mov	r4, r2
   13bfc:	ldr	pc, [r1, r9, lsl #2]
   13c00:	ldrdeq	r3, [r1], -r0
   13c04:	andeq	r3, r1, ip, lsl #26
   13c08:	andeq	r3, r1, r0, ror #25
   13c0c:	andeq	r3, r1, r8, asr #25
   13c10:	andeq	r3, r1, r0, lsl #26
   13c14:	andeq	r3, r1, r8, asr sp
   13c18:	strdeq	r3, [r1], -r0
   13c1c:			; <UNDEFINED> instruction: 0x00013db8
   13c20:	andeq	r3, r1, ip, lsr #24
   13c24:	andeq	r3, r1, ip, lsr #24
   13c28:	andeq	r3, r1, r4, asr ip
   13c2c:	movw	r0, #28040	; 0x6d88
   13c30:	mov	r1, r9
   13c34:	movt	r0, #1
   13c38:	bl	15340 <putchar_unlocked@plt+0x3e1c>
   13c3c:	str	r0, [sp, #64]	; 0x40
   13c40:	movw	r0, #28042	; 0x6d8a
   13c44:	mov	r1, r9
   13c48:	movt	r0, #1
   13c4c:	bl	15340 <putchar_unlocked@plt+0x3e1c>
   13c50:	str	r0, [sp, #72]	; 0x48
   13c54:	mov	r8, #0
   13c58:	mov	sl, r7
   13c5c:	tst	r7, #1
   13c60:	str	r5, [fp, #-48]	; 0xffffffd0
   13c64:	bne	13ca0 <putchar_unlocked@plt+0x277c>
   13c68:	ldr	r0, [sp, #64]	; 0x40
   13c6c:	ldrb	r0, [r0]
   13c70:	cmp	r0, #0
   13c74:	beq	13ca0 <putchar_unlocked@plt+0x277c>
   13c78:	ldr	r1, [sp, #64]	; 0x40
   13c7c:	mov	r8, #0
   13c80:	add	r1, r1, #1
   13c84:	cmp	r8, r6
   13c88:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13c8c:	strbcc	r0, [r2, r8]
   13c90:	ldrb	r0, [r1, r8]
   13c94:	add	r8, r8, #1
   13c98:	cmp	r0, #0
   13c9c:	bne	13c84 <putchar_unlocked@plt+0x2760>
   13ca0:	ldr	r7, [sp, #72]	; 0x48
   13ca4:	mov	r0, r7
   13ca8:	bl	113c8 <strlen@plt>
   13cac:	ldr	ip, [fp, #-84]	; 0xffffffac
   13cb0:	ldr	lr, [sp, #80]	; 0x50
   13cb4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13cb8:	str	r0, [fp, #-76]	; 0xffffffb4
   13cbc:	str	r7, [sp, #92]	; 0x5c
   13cc0:	mov	r3, #1
   13cc4:	b	13db8 <putchar_unlocked@plt+0x2894>
   13cc8:	mov	r0, #1
   13ccc:	b	13d0c <putchar_unlocked@plt+0x27e8>
   13cd0:	mov	r9, #0
   13cd4:	mov	r8, #0
   13cd8:	mov	r3, r0
   13cdc:	b	13db4 <putchar_unlocked@plt+0x2890>
   13ce0:	tst	r7, #1
   13ce4:	bne	13d0c <putchar_unlocked@plt+0x27e8>
   13ce8:	mov	r3, r0
   13cec:	b	13d34 <putchar_unlocked@plt+0x2810>
   13cf0:	mov	r0, #1
   13cf4:	mov	r8, #0
   13cf8:	mov	r9, #5
   13cfc:	b	13d6c <putchar_unlocked@plt+0x2848>
   13d00:	mov	r3, #1
   13d04:	tst	r7, #1
   13d08:	beq	13d34 <putchar_unlocked@plt+0x2810>
   13d0c:	mov	r1, #1
   13d10:	mov	r8, #0
   13d14:	mov	r9, #2
   13d18:	mov	r3, r0
   13d1c:	mov	sl, #1
   13d20:	str	r1, [fp, #-76]	; 0xffffffb4
   13d24:	movw	r1, #28042	; 0x6d8a
   13d28:	movt	r1, #1
   13d2c:	str	r1, [sp, #92]	; 0x5c
   13d30:	b	13db8 <putchar_unlocked@plt+0x2894>
   13d34:	cmp	r6, #0
   13d38:	mov	r8, #1
   13d3c:	mov	r9, #2
   13d40:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   13d44:	movne	r0, #39	; 0x27
   13d48:	strbne	r0, [r1]
   13d4c:	movw	r0, #28042	; 0x6d8a
   13d50:	movt	r0, #1
   13d54:	b	13da8 <putchar_unlocked@plt+0x2884>
   13d58:	mov	r9, #5
   13d5c:	tst	r7, #1
   13d60:	beq	13d88 <putchar_unlocked@plt+0x2864>
   13d64:	mov	r0, #1
   13d68:	mov	r8, #0
   13d6c:	str	r0, [fp, #-76]	; 0xffffffb4
   13d70:	movw	r0, #28038	; 0x6d86
   13d74:	mov	r3, #1
   13d78:	mov	sl, #1
   13d7c:	movt	r0, #1
   13d80:	str	r0, [sp, #92]	; 0x5c
   13d84:	b	13db8 <putchar_unlocked@plt+0x2894>
   13d88:	cmp	r6, #0
   13d8c:	mov	r8, #1
   13d90:	mov	r3, #1
   13d94:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   13d98:	movne	r0, #34	; 0x22
   13d9c:	strbne	r0, [r1]
   13da0:	movw	r0, #28038	; 0x6d86
   13da4:	movt	r0, #1
   13da8:	str	r0, [sp, #92]	; 0x5c
   13dac:	mov	r0, #1
   13db0:	str	r0, [fp, #-76]	; 0xffffffb4
   13db4:	mov	sl, #0
   13db8:	ldr	r0, [fp, #16]
   13dbc:	mov	r7, #0
   13dc0:	str	r9, [fp, #-64]	; 0xffffffc0
   13dc4:	str	sl, [fp, #-72]	; 0xffffffb8
   13dc8:	str	r3, [sp, #84]	; 0x54
   13dcc:	cmp	r0, #0
   13dd0:	movwne	r0, #1
   13dd4:	and	r0, r0, sl
   13dd8:	str	r0, [fp, #-88]	; 0xffffffa8
   13ddc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13de0:	cmp	r0, #0
   13de4:	movwne	r0, #1
   13de8:	subs	r2, r9, #2
   13dec:	and	r1, r0, sl
   13df0:	str	r2, [fp, #-80]	; 0xffffffb0
   13df4:	and	r1, r3, r1
   13df8:	str	r1, [sp, #44]	; 0x2c
   13dfc:	clz	r1, r2
   13e00:	lsr	r1, r1, #5
   13e04:	and	r1, r1, sl
   13e08:	str	r1, [sp, #56]	; 0x38
   13e0c:	mov	r1, r2
   13e10:	eor	r2, sl, #1
   13e14:	movwne	r1, #1
   13e18:	str	r2, [sp, #88]	; 0x58
   13e1c:	orr	r2, r1, r2
   13e20:	and	r1, r1, r3
   13e24:	and	r0, r0, r1
   13e28:	str	r2, [sp, #60]	; 0x3c
   13e2c:	str	r1, [fp, #-68]	; 0xffffffbc
   13e30:	str	r0, [fp, #-60]	; 0xffffffc4
   13e34:	eor	r0, r3, #1
   13e38:	str	r0, [sp, #48]	; 0x30
   13e3c:	cmn	lr, #1
   13e40:	beq	13e50 <putchar_unlocked@plt+0x292c>
   13e44:	cmp	r7, lr
   13e48:	bne	13e5c <putchar_unlocked@plt+0x2938>
   13e4c:	b	14a08 <putchar_unlocked@plt+0x34e4>
   13e50:	ldrb	r0, [ip, r7]
   13e54:	cmp	r0, #0
   13e58:	beq	14a10 <putchar_unlocked@plt+0x34ec>
   13e5c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13e60:	mov	r9, #0
   13e64:	str	r5, [fp, #-48]	; 0xffffffd0
   13e68:	str	r6, [fp, #-52]	; 0xffffffcc
   13e6c:	cmp	r0, #0
   13e70:	beq	13eb0 <putchar_unlocked@plt+0x298c>
   13e74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13e78:	mov	r5, r4
   13e7c:	add	r4, r7, r0
   13e80:	cmp	r0, #2
   13e84:	bcc	13ea0 <putchar_unlocked@plt+0x297c>
   13e88:	cmn	lr, #1
   13e8c:	bne	13ea0 <putchar_unlocked@plt+0x297c>
   13e90:	mov	r0, ip
   13e94:	bl	113c8 <strlen@plt>
   13e98:	ldr	ip, [fp, #-84]	; 0xffffffac
   13e9c:	mov	lr, r0
   13ea0:	cmp	r4, lr
   13ea4:	bls	13eb8 <putchar_unlocked@plt+0x2994>
   13ea8:	mov	r6, #0
   13eac:	b	13ef8 <putchar_unlocked@plt+0x29d4>
   13eb0:	mov	r6, #0
   13eb4:	b	13efc <putchar_unlocked@plt+0x29d8>
   13eb8:	ldr	r1, [sp, #92]	; 0x5c
   13ebc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13ec0:	add	r0, ip, r7
   13ec4:	mov	r4, lr
   13ec8:	bl	11278 <memcmp@plt>
   13ecc:	ldr	r2, [sp, #88]	; 0x58
   13ed0:	cmp	r0, #0
   13ed4:	mov	r1, r0
   13ed8:	movwne	r1, #1
   13edc:	orr	r1, r1, r2
   13ee0:	tst	r1, #1
   13ee4:	beq	14aa4 <putchar_unlocked@plt+0x3580>
   13ee8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13eec:	clz	r0, r0
   13ef0:	mov	lr, r4
   13ef4:	lsr	r6, r0, #5
   13ef8:	mov	r4, r5
   13efc:	ldrb	r5, [ip, r7]
   13f00:	cmp	r5, #126	; 0x7e
   13f04:	bhi	142cc <putchar_unlocked@plt+0x2da8>
   13f08:	add	r3, pc, #16
   13f0c:	mov	sl, #1
   13f10:	mov	r2, #110	; 0x6e
   13f14:	mov	r0, #97	; 0x61
   13f18:	mov	r1, #0
   13f1c:	ldr	pc, [r3, r5, lsl #2]
   13f20:			; <UNDEFINED> instruction: 0x000141b0
   13f24:	andeq	r4, r1, ip, asr #5
   13f28:	andeq	r4, r1, ip, asr #5
   13f2c:	andeq	r4, r1, ip, asr #5
   13f30:	andeq	r4, r1, ip, asr #5
   13f34:	andeq	r4, r1, ip, asr #5
   13f38:	andeq	r4, r1, ip, asr #5
   13f3c:	andeq	r4, r1, r0, ror r3
   13f40:	muleq	r1, r0, r1
   13f44:	andeq	r4, r1, r8, lsl #3
   13f48:	muleq	r1, ip, r1
   13f4c:	andeq	r4, r1, r0, lsr #4
   13f50:	andeq	r4, r1, r0, lsl #3
   13f54:	muleq	r1, r8, r1
   13f58:	andeq	r4, r1, ip, asr #5
   13f5c:	andeq	r4, r1, ip, asr #5
   13f60:	andeq	r4, r1, ip, asr #5
   13f64:	andeq	r4, r1, ip, asr #5
   13f68:	andeq	r4, r1, ip, asr #5
   13f6c:	andeq	r4, r1, ip, asr #5
   13f70:	andeq	r4, r1, ip, asr #5
   13f74:	andeq	r4, r1, ip, asr #5
   13f78:	andeq	r4, r1, ip, asr #5
   13f7c:	andeq	r4, r1, ip, asr #5
   13f80:	andeq	r4, r1, ip, asr #5
   13f84:	andeq	r4, r1, ip, asr #5
   13f88:	andeq	r4, r1, ip, asr #5
   13f8c:	andeq	r4, r1, ip, asr #5
   13f90:	andeq	r4, r1, ip, asr #5
   13f94:	andeq	r4, r1, ip, asr #5
   13f98:	andeq	r4, r1, ip, asr #5
   13f9c:	andeq	r4, r1, ip, asr #5
   13fa0:	andeq	r4, r1, r0, lsr r3
   13fa4:	andeq	r4, r1, r4, lsr r3
   13fa8:	andeq	r4, r1, r4, lsr r3
   13fac:	andeq	r4, r1, r0, lsr r1
   13fb0:	andeq	r4, r1, r4, lsr r3
   13fb4:	andeq	r4, r1, ip, lsl r1
   13fb8:	andeq	r4, r1, r4, lsr r3
   13fbc:	andeq	r4, r1, r8, lsr #4
   13fc0:	andeq	r4, r1, r4, lsr r3
   13fc4:	andeq	r4, r1, r4, lsr r3
   13fc8:	andeq	r4, r1, r4, lsr r3
   13fcc:	andeq	r4, r1, ip, lsl r1
   13fd0:	andeq	r4, r1, ip, lsl r1
   13fd4:	andeq	r4, r1, ip, lsl r1
   13fd8:	andeq	r4, r1, ip, lsl r1
   13fdc:	andeq	r4, r1, ip, lsl r1
   13fe0:	andeq	r4, r1, ip, lsl r1
   13fe4:	andeq	r4, r1, ip, lsl r1
   13fe8:	andeq	r4, r1, ip, lsl r1
   13fec:	andeq	r4, r1, ip, lsl r1
   13ff0:	andeq	r4, r1, ip, lsl r1
   13ff4:	andeq	r4, r1, ip, lsl r1
   13ff8:	andeq	r4, r1, ip, lsl r1
   13ffc:	andeq	r4, r1, ip, lsl r1
   14000:	andeq	r4, r1, ip, lsl r1
   14004:	andeq	r4, r1, ip, lsl r1
   14008:	andeq	r4, r1, ip, lsl r1
   1400c:	andeq	r4, r1, r4, lsr r3
   14010:	andeq	r4, r1, r4, lsr r3
   14014:	andeq	r4, r1, r4, lsr r3
   14018:	andeq	r4, r1, r4, lsr r3
   1401c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14020:	andeq	r4, r1, ip, asr #5
   14024:	andeq	r4, r1, ip, lsl r1
   14028:	andeq	r4, r1, ip, lsl r1
   1402c:	andeq	r4, r1, ip, lsl r1
   14030:	andeq	r4, r1, ip, lsl r1
   14034:	andeq	r4, r1, ip, lsl r1
   14038:	andeq	r4, r1, ip, lsl r1
   1403c:	andeq	r4, r1, ip, lsl r1
   14040:	andeq	r4, r1, ip, lsl r1
   14044:	andeq	r4, r1, ip, lsl r1
   14048:	andeq	r4, r1, ip, lsl r1
   1404c:	andeq	r4, r1, ip, lsl r1
   14050:	andeq	r4, r1, ip, lsl r1
   14054:	andeq	r4, r1, ip, lsl r1
   14058:	andeq	r4, r1, ip, lsl r1
   1405c:	andeq	r4, r1, ip, lsl r1
   14060:	andeq	r4, r1, ip, lsl r1
   14064:	andeq	r4, r1, ip, lsl r1
   14068:	andeq	r4, r1, ip, lsl r1
   1406c:	andeq	r4, r1, ip, lsl r1
   14070:	andeq	r4, r1, ip, lsl r1
   14074:	andeq	r4, r1, ip, lsl r1
   14078:	andeq	r4, r1, ip, lsl r1
   1407c:	andeq	r4, r1, ip, lsl r1
   14080:	andeq	r4, r1, ip, lsl r1
   14084:	andeq	r4, r1, ip, lsl r1
   14088:	andeq	r4, r1, ip, lsl r1
   1408c:	andeq	r4, r1, r4, lsr r3
   14090:	andeq	r4, r1, ip, asr r1
   14094:	andeq	r4, r1, ip, lsl r1
   14098:	andeq	r4, r1, r4, lsr r3
   1409c:	andeq	r4, r1, ip, lsl r1
   140a0:	andeq	r4, r1, r4, lsr r3
   140a4:	andeq	r4, r1, ip, lsl r1
   140a8:	andeq	r4, r1, ip, lsl r1
   140ac:	andeq	r4, r1, ip, lsl r1
   140b0:	andeq	r4, r1, ip, lsl r1
   140b4:	andeq	r4, r1, ip, lsl r1
   140b8:	andeq	r4, r1, ip, lsl r1
   140bc:	andeq	r4, r1, ip, lsl r1
   140c0:	andeq	r4, r1, ip, lsl r1
   140c4:	andeq	r4, r1, ip, lsl r1
   140c8:	andeq	r4, r1, ip, lsl r1
   140cc:	andeq	r4, r1, ip, lsl r1
   140d0:	andeq	r4, r1, ip, lsl r1
   140d4:	andeq	r4, r1, ip, lsl r1
   140d8:	andeq	r4, r1, ip, lsl r1
   140dc:	andeq	r4, r1, ip, lsl r1
   140e0:	andeq	r4, r1, ip, lsl r1
   140e4:	andeq	r4, r1, ip, lsl r1
   140e8:	andeq	r4, r1, ip, lsl r1
   140ec:	andeq	r4, r1, ip, lsl r1
   140f0:	andeq	r4, r1, ip, lsl r1
   140f4:	andeq	r4, r1, ip, lsl r1
   140f8:	andeq	r4, r1, ip, lsl r1
   140fc:	andeq	r4, r1, ip, lsl r1
   14100:	andeq	r4, r1, ip, lsl r1
   14104:	andeq	r4, r1, ip, lsl r1
   14108:	andeq	r4, r1, ip, lsl r1
   1410c:	andeq	r4, r1, r0, asr #2
   14110:	andeq	r4, r1, r4, lsr r3
   14114:	andeq	r4, r1, r0, asr #2
   14118:	andeq	r4, r1, r0, lsr r1
   1411c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14120:	cmp	r0, #0
   14124:	beq	14384 <putchar_unlocked@plt+0x2e60>
   14128:	ldr	r0, [fp, #16]
   1412c:	b	14388 <putchar_unlocked@plt+0x2e64>
   14130:	mov	sl, #0
   14134:	cmp	r7, #0
   14138:	bne	145a0 <putchar_unlocked@plt+0x307c>
   1413c:	b	14330 <putchar_unlocked@plt+0x2e0c>
   14140:	mov	sl, #0
   14144:	cmn	lr, #1
   14148:	beq	1431c <putchar_unlocked@plt+0x2df8>
   1414c:	cmp	r7, #0
   14150:	cmpeq	lr, #1
   14154:	bne	145a0 <putchar_unlocked@plt+0x307c>
   14158:	b	14330 <putchar_unlocked@plt+0x2e0c>
   1415c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14160:	cmp	r0, #2
   14164:	bne	14354 <putchar_unlocked@plt+0x2e30>
   14168:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1416c:	tst	r0, #1
   14170:	bne	14ac0 <putchar_unlocked@plt+0x359c>
   14174:	mov	r9, #0
   14178:	mov	r0, #92	; 0x5c
   1417c:	b	14368 <putchar_unlocked@plt+0x2e44>
   14180:	mov	r0, #102	; 0x66
   14184:	b	14370 <putchar_unlocked@plt+0x2e4c>
   14188:	mov	r2, #116	; 0x74
   1418c:	b	1419c <putchar_unlocked@plt+0x2c78>
   14190:	mov	r0, #98	; 0x62
   14194:	b	14370 <putchar_unlocked@plt+0x2e4c>
   14198:	mov	r2, #114	; 0x72
   1419c:	ldr	r0, [sp, #60]	; 0x3c
   141a0:	tst	r0, #1
   141a4:	mov	r0, r2
   141a8:	bne	14370 <putchar_unlocked@plt+0x2e4c>
   141ac:	b	14ac0 <putchar_unlocked@plt+0x359c>
   141b0:	ldr	r0, [sp, #84]	; 0x54
   141b4:	tst	r0, #1
   141b8:	beq	1445c <putchar_unlocked@plt+0x2f38>
   141bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   141c0:	tst	r0, #1
   141c4:	bne	14bc8 <putchar_unlocked@plt+0x36a4>
   141c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   141cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   141d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   141d4:	cmp	r0, #2
   141d8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   141dc:	movwne	r0, #1
   141e0:	orr	r0, r0, r3
   141e4:	tst	r0, #1
   141e8:	beq	148dc <putchar_unlocked@plt+0x33b8>
   141ec:	mov	r0, r8
   141f0:	b	1491c <putchar_unlocked@plt+0x33f8>
   141f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   141f8:	mov	r9, #0
   141fc:	mov	r5, #63	; 0x3f
   14200:	cmp	r0, #5
   14204:	beq	145a8 <putchar_unlocked@plt+0x3084>
   14208:	cmp	r0, #2
   1420c:	bne	14668 <putchar_unlocked@plt+0x3144>
   14210:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14214:	tst	r0, #1
   14218:	beq	1466c <putchar_unlocked@plt+0x3148>
   1421c:	b	14ac0 <putchar_unlocked@plt+0x359c>
   14220:	mov	r0, #118	; 0x76
   14224:	b	14370 <putchar_unlocked@plt+0x2e4c>
   14228:	mov	r0, #1
   1422c:	mov	r5, #39	; 0x27
   14230:	str	r0, [sp, #52]	; 0x34
   14234:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14238:	cmp	r0, #2
   1423c:	bne	142c4 <putchar_unlocked@plt+0x2da0>
   14240:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14244:	tst	r0, #1
   14248:	bne	14ac0 <putchar_unlocked@plt+0x359c>
   1424c:	ldr	r3, [sp, #68]	; 0x44
   14250:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14254:	mov	r9, #0
   14258:	clz	r1, r2
   1425c:	cmp	r3, #0
   14260:	mov	r0, r3
   14264:	movwne	r0, #1
   14268:	lsr	r1, r1, #5
   1426c:	orrs	r0, r0, r1
   14270:	moveq	r3, r2
   14274:	moveq	r2, r0
   14278:	cmp	r8, r2
   1427c:	str	r3, [sp, #68]	; 0x44
   14280:	str	r2, [fp, #-52]	; 0xffffffcc
   14284:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   14288:	movcc	r0, #39	; 0x27
   1428c:	strbcc	r0, [r1, r8]
   14290:	add	r0, r8, #1
   14294:	cmp	r0, r2
   14298:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1429c:	movcc	r1, #92	; 0x5c
   142a0:	strbcc	r1, [r3, r0]
   142a4:	add	r0, r8, #2
   142a8:	add	r8, r8, #3
   142ac:	cmp	r0, r2
   142b0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   142b4:	movcc	r1, #39	; 0x27
   142b8:	strbcc	r1, [r2, r0]
   142bc:	mov	r0, #0
   142c0:	str	r0, [fp, #-48]	; 0xffffffd0
   142c4:	mov	sl, #1
   142c8:	b	1411c <putchar_unlocked@plt+0x2bf8>
   142cc:	ldr	r0, [sp, #32]
   142d0:	cmp	r0, #1
   142d4:	bne	14480 <putchar_unlocked@plt+0x2f5c>
   142d8:	str	lr, [sp, #80]	; 0x50
   142dc:	bl	113b0 <__ctype_b_loc@plt>
   142e0:	ldr	r0, [r0]
   142e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   142e8:	mov	r1, #1
   142ec:	add	r0, r0, r5, lsl #1
   142f0:	ldrb	r0, [r0, #1]
   142f4:	ubfx	sl, r0, #6, #1
   142f8:	ldr	r0, [sp, #48]	; 0x30
   142fc:	mov	r2, r1
   14300:	cmp	r1, #1
   14304:	orr	r0, sl, r0
   14308:	bhi	14674 <putchar_unlocked@plt+0x3150>
   1430c:	tst	r0, #1
   14310:	beq	14674 <putchar_unlocked@plt+0x3150>
   14314:	ldr	lr, [sp, #80]	; 0x50
   14318:	b	1411c <putchar_unlocked@plt+0x2bf8>
   1431c:	cmp	r7, #0
   14320:	bne	1459c <putchar_unlocked@plt+0x3078>
   14324:	ldrb	r0, [ip, #1]
   14328:	cmp	r0, #0
   1432c:	bne	1459c <putchar_unlocked@plt+0x3078>
   14330:	mov	r1, #1
   14334:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14338:	cmp	r0, #2
   1433c:	bne	1434c <putchar_unlocked@plt+0x2e28>
   14340:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14344:	tst	r0, #1
   14348:	bne	14ac0 <putchar_unlocked@plt+0x359c>
   1434c:	mov	sl, r1
   14350:	b	1411c <putchar_unlocked@plt+0x2bf8>
   14354:	ldr	r1, [sp, #44]	; 0x2c
   14358:	mov	r9, #0
   1435c:	mov	r0, #92	; 0x5c
   14360:	cmp	r1, #0
   14364:	beq	14370 <putchar_unlocked@plt+0x2e4c>
   14368:	mov	sl, #0
   1436c:	b	14888 <putchar_unlocked@plt+0x3364>
   14370:	ldr	r1, [sp, #84]	; 0x54
   14374:	mov	sl, #0
   14378:	mov	r9, #0
   1437c:	tst	r1, #1
   14380:	bne	143bc <putchar_unlocked@plt+0x2e98>
   14384:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14388:	cmp	r0, #0
   1438c:	mov	r0, r5
   14390:	beq	143b4 <putchar_unlocked@plt+0x2e90>
   14394:	ldr	r1, [fp, #16]
   14398:	ubfx	r0, r5, #5, #3
   1439c:	mov	r2, #1
   143a0:	ldr	r0, [r1, r0, lsl #2]
   143a4:	and	r1, r5, #31
   143a8:	tst	r0, r2, lsl r1
   143ac:	mov	r0, r5
   143b0:	bne	143bc <putchar_unlocked@plt+0x2e98>
   143b4:	cmp	r6, #0
   143b8:	beq	14888 <putchar_unlocked@plt+0x3364>
   143bc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   143c0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   143c4:	tst	r1, #1
   143c8:	bne	14a9c <putchar_unlocked@plt+0x3578>
   143cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   143d0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   143d4:	cmp	r1, #2
   143d8:	ldr	r1, [fp, #-80]	; 0xffffffb0
   143dc:	movwne	r1, #1
   143e0:	orr	r1, r1, r5
   143e4:	tst	r1, #1
   143e8:	bne	1442c <putchar_unlocked@plt+0x2f08>
   143ec:	cmp	r8, r6
   143f0:	mov	r5, #1
   143f4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   143f8:	movcc	r1, #39	; 0x27
   143fc:	strbcc	r1, [r2, r8]
   14400:	add	r1, r8, #1
   14404:	cmp	r1, r6
   14408:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1440c:	movcc	r2, #36	; 0x24
   14410:	strbcc	r2, [r3, r1]
   14414:	add	r1, r8, #2
   14418:	add	r8, r8, #3
   1441c:	cmp	r1, r6
   14420:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14424:	movcc	r2, #39	; 0x27
   14428:	strbcc	r2, [r3, r1]
   1442c:	cmp	r8, r6
   14430:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14434:	movcc	r1, #92	; 0x5c
   14438:	strbcc	r1, [r2, r8]
   1443c:	add	r8, r8, #1
   14440:	cmp	r8, r6
   14444:	and	r4, r4, sl
   14448:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   1444c:	strbcc	r0, [r1, r8]
   14450:	add	r8, r8, #1
   14454:	add	r7, r7, #1
   14458:	b	13e3c <putchar_unlocked@plt+0x2918>
   1445c:	ldr	r0, [sp, #28]
   14460:	mov	sl, #0
   14464:	mov	r9, #0
   14468:	mov	r5, #0
   1446c:	cmp	r0, #0
   14470:	beq	14384 <putchar_unlocked@plt+0x2e60>
   14474:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14478:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1447c:	b	14454 <putchar_unlocked@plt+0x2f30>
   14480:	mov	r0, #0
   14484:	cmn	lr, #1
   14488:	str	r6, [sp, #76]	; 0x4c
   1448c:	str	r4, [sp, #20]
   14490:	str	r0, [fp, #-36]	; 0xffffffdc
   14494:	str	r0, [fp, #-40]	; 0xffffffd8
   14498:	bne	144ac <putchar_unlocked@plt+0x2f88>
   1449c:	mov	r0, ip
   144a0:	bl	113c8 <strlen@plt>
   144a4:	ldr	ip, [fp, #-84]	; 0xffffffac
   144a8:	mov	lr, r0
   144ac:	add	r0, ip, r7
   144b0:	mov	sl, #1
   144b4:	mov	r6, #0
   144b8:	sub	r4, fp, #40	; 0x28
   144bc:	str	lr, [sp, #80]	; 0x50
   144c0:	str	r0, [sp, #36]	; 0x24
   144c4:	str	r6, [sp, #40]	; 0x28
   144c8:	add	r6, r6, r7
   144cc:	sub	r0, fp, #44	; 0x2c
   144d0:	mov	r3, r4
   144d4:	add	r1, ip, r6
   144d8:	sub	r2, lr, r6
   144dc:	bl	165b0 <putchar_unlocked@plt+0x508c>
   144e0:	cmp	r0, #0
   144e4:	beq	149f0 <putchar_unlocked@plt+0x34cc>
   144e8:	cmn	r0, #1
   144ec:	beq	149b0 <putchar_unlocked@plt+0x348c>
   144f0:	ldr	lr, [sp, #80]	; 0x50
   144f4:	cmn	r0, #2
   144f8:	beq	149b8 <putchar_unlocked@plt+0x3494>
   144fc:	ldr	r2, [sp, #56]	; 0x38
   14500:	cmp	r0, #2
   14504:	mov	r1, #0
   14508:	movwcc	r1, #1
   1450c:	eor	r2, r2, #1
   14510:	orrs	r1, r2, r1
   14514:	bne	14560 <putchar_unlocked@plt+0x303c>
   14518:	ldr	r1, [sp, #40]	; 0x28
   1451c:	ldr	r2, [sp, #36]	; 0x24
   14520:	add	ip, r2, r1
   14524:	mov	r2, #1
   14528:	ldrb	r3, [ip, r2]
   1452c:	sub	r6, r3, #94	; 0x5e
   14530:	cmp	r6, #30
   14534:	bhi	14548 <putchar_unlocked@plt+0x3024>
   14538:	mov	r4, #1
   1453c:	mov	r1, #1073741829	; 0x40000005
   14540:	tst	r1, r4, lsl r6
   14544:	bne	14abc <putchar_unlocked@plt+0x3598>
   14548:	sub	r3, r3, #91	; 0x5b
   1454c:	cmp	r3, #2
   14550:	bcc	14abc <putchar_unlocked@plt+0x3598>
   14554:	add	r2, r2, #1
   14558:	cmp	r2, r0
   1455c:	bcc	14528 <putchar_unlocked@plt+0x3004>
   14560:	ldr	r6, [sp, #40]	; 0x28
   14564:	add	r6, r0, r6
   14568:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1456c:	bl	112c0 <iswprint@plt>
   14570:	cmp	r0, #0
   14574:	sub	r4, fp, #40	; 0x28
   14578:	movwne	r0, #1
   1457c:	and	sl, sl, r0
   14580:	mov	r0, r4
   14584:	bl	11260 <mbsinit@plt>
   14588:	ldr	lr, [sp, #80]	; 0x50
   1458c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14590:	cmp	r0, #0
   14594:	beq	144c4 <putchar_unlocked@plt+0x2fa0>
   14598:	b	149f8 <putchar_unlocked@plt+0x34d4>
   1459c:	mvn	lr, #0
   145a0:	mov	r9, #0
   145a4:	b	1411c <putchar_unlocked@plt+0x2bf8>
   145a8:	ldr	r0, [sp, #24]
   145ac:	cmp	r0, #0
   145b0:	beq	14668 <putchar_unlocked@plt+0x3144>
   145b4:	add	r0, r7, #2
   145b8:	cmp	r0, lr
   145bc:	bcs	14668 <putchar_unlocked@plt+0x3144>
   145c0:	add	r1, ip, r7
   145c4:	ldrb	r1, [r1, #1]
   145c8:	cmp	r1, #63	; 0x3f
   145cc:	bne	14668 <putchar_unlocked@plt+0x3144>
   145d0:	ldrb	r5, [ip, r0]
   145d4:	sub	r1, r5, #33	; 0x21
   145d8:	cmp	r1, #29
   145dc:	bhi	14668 <putchar_unlocked@plt+0x3144>
   145e0:	movw	r3, #20929	; 0x51c1
   145e4:	mov	r2, #1
   145e8:	movt	r3, #14336	; 0x3800
   145ec:	tst	r3, r2, lsl r1
   145f0:	beq	14668 <putchar_unlocked@plt+0x3144>
   145f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   145f8:	tst	r1, #1
   145fc:	bne	14bd0 <putchar_unlocked@plt+0x36ac>
   14600:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14604:	mov	r7, r0
   14608:	cmp	r8, r1
   1460c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14610:	movcc	r1, #63	; 0x3f
   14614:	strbcc	r1, [r2, r8]
   14618:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1461c:	add	r1, r8, #1
   14620:	cmp	r1, r2
   14624:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14628:	movcc	r2, #34	; 0x22
   1462c:	strbcc	r2, [r3, r1]
   14630:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14634:	add	r1, r8, #2
   14638:	cmp	r1, r2
   1463c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14640:	movcc	r2, #34	; 0x22
   14644:	strbcc	r2, [r3, r1]
   14648:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1464c:	add	r1, r8, #3
   14650:	add	r8, r8, #4
   14654:	cmp	r1, r2
   14658:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1465c:	movcc	r2, #63	; 0x3f
   14660:	strbcc	r2, [r3, r1]
   14664:	b	1466c <putchar_unlocked@plt+0x3148>
   14668:	mov	r5, #63	; 0x3f
   1466c:	mov	sl, #0
   14670:	b	1411c <putchar_unlocked@plt+0x2bf8>
   14674:	str	r0, [sp, #40]	; 0x28
   14678:	add	r0, r2, r7
   1467c:	str	r6, [sp, #76]	; 0x4c
   14680:	add	r1, r7, #1
   14684:	ldr	lr, [sp, #80]	; 0x50
   14688:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1468c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14690:	mov	r3, #0
   14694:	str	r0, [sp, #36]	; 0x24
   14698:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1469c:	b	14730 <putchar_unlocked@plt+0x320c>
   146a0:	str	r0, [sp, #76]	; 0x4c
   146a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   146a8:	cmp	r9, #0
   146ac:	movwne	r9, #1
   146b0:	mvn	r7, r0
   146b4:	orr	r7, r7, r9
   146b8:	tst	r7, #1
   146bc:	bne	1470c <putchar_unlocked@plt+0x31e8>
   146c0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   146c4:	cmp	r8, r6
   146c8:	bcs	146e0 <putchar_unlocked@plt+0x31bc>
   146cc:	ldr	r7, [fp, #-56]	; 0xffffffc8
   146d0:	mov	r2, r4
   146d4:	mov	r4, #39	; 0x27
   146d8:	strb	r4, [r7, r8]
   146dc:	mov	r4, r2
   146e0:	add	r7, r8, #1
   146e4:	cmp	r7, r6
   146e8:	bcs	14700 <putchar_unlocked@plt+0x31dc>
   146ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   146f0:	mov	r2, r4
   146f4:	mov	r4, #39	; 0x27
   146f8:	strb	r4, [r0, r7]
   146fc:	mov	r4, r2
   14700:	add	r8, r8, #2
   14704:	mov	r0, #0
   14708:	b	14714 <putchar_unlocked@plt+0x31f0>
   1470c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14710:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14714:	cmp	r8, r6
   14718:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1471c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14720:	strbcc	r5, [r2, r8]
   14724:	add	r8, r8, #1
   14728:	ldrb	r5, [ip, r1]
   1472c:	add	r1, r1, #1
   14730:	ldr	r2, [sp, #40]	; 0x28
   14734:	tst	r2, #1
   14738:	beq	14774 <putchar_unlocked@plt+0x3250>
   1473c:	ldr	r2, [sp, #76]	; 0x4c
   14740:	str	r0, [fp, #-48]	; 0xffffffd0
   14744:	tst	r2, #1
   14748:	beq	1476c <putchar_unlocked@plt+0x3248>
   1474c:	cmp	r8, r6
   14750:	bcs	14768 <putchar_unlocked@plt+0x3244>
   14754:	ldr	r6, [fp, #-56]	; 0xffffffc8
   14758:	mov	r2, r4
   1475c:	mov	r4, #92	; 0x5c
   14760:	strb	r4, [r6, r8]
   14764:	mov	r4, r2
   14768:	add	r8, r8, #1
   1476c:	mov	r0, #0
   14770:	b	14868 <putchar_unlocked@plt+0x3344>
   14774:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14778:	tst	r2, #1
   1477c:	bne	14ac8 <putchar_unlocked@plt+0x35a4>
   14780:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14784:	cmp	r7, #2
   14788:	movwne	r3, #1
   1478c:	orr	r3, r3, r0
   14790:	tst	r3, #1
   14794:	bne	147f0 <putchar_unlocked@plt+0x32cc>
   14798:	cmp	r8, r6
   1479c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   147a0:	movcc	r3, #39	; 0x27
   147a4:	strbcc	r3, [r2, r8]
   147a8:	add	r3, r8, #1
   147ac:	cmp	r3, r6
   147b0:	bcs	147c8 <putchar_unlocked@plt+0x32a4>
   147b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   147b8:	mov	r7, r4
   147bc:	mov	r4, #36	; 0x24
   147c0:	strb	r4, [r2, r3]
   147c4:	mov	r4, r7
   147c8:	add	r3, r8, #2
   147cc:	cmp	r3, r6
   147d0:	bcs	147e8 <putchar_unlocked@plt+0x32c4>
   147d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   147d8:	mov	r7, r4
   147dc:	mov	r4, #39	; 0x27
   147e0:	strb	r4, [r2, r3]
   147e4:	mov	r4, r7
   147e8:	add	r8, r8, #3
   147ec:	mov	r0, #1
   147f0:	cmp	r8, r6
   147f4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   147f8:	movcc	r3, #92	; 0x5c
   147fc:	strbcc	r3, [r2, r8]
   14800:	add	r3, r8, #1
   14804:	cmp	r3, r6
   14808:	bcs	14828 <putchar_unlocked@plt+0x3304>
   1480c:	mov	r2, r4
   14810:	and	r7, r5, #192	; 0xc0
   14814:	mov	r4, #48	; 0x30
   14818:	orr	r7, r4, r7, lsr #6
   1481c:	mov	r4, r2
   14820:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14824:	strb	r7, [r2, r3]
   14828:	add	r3, r8, #2
   1482c:	cmp	r3, r6
   14830:	bcs	14850 <putchar_unlocked@plt+0x332c>
   14834:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14838:	mov	r6, r4
   1483c:	lsr	r7, r5, #3
   14840:	mov	r4, #6
   14844:	bfi	r7, r4, #3, #29
   14848:	mov	r4, r6
   1484c:	strb	r7, [r2, r3]
   14850:	str	r0, [fp, #-48]	; 0xffffffd0
   14854:	ldr	r0, [sp, #76]	; 0x4c
   14858:	mov	r3, #6
   1485c:	add	r8, r8, #3
   14860:	bfi	r5, r3, #3, #29
   14864:	mov	r3, #1
   14868:	ldr	r2, [sp, #36]	; 0x24
   1486c:	and	r9, r3, #1
   14870:	cmp	r2, r1
   14874:	bhi	146a0 <putchar_unlocked@plt+0x317c>
   14878:	cmp	r9, #0
   1487c:	sub	r7, r1, #1
   14880:	mov	r0, r5
   14884:	movwne	r9, #1
   14888:	cmp	r9, #0
   1488c:	bne	148d0 <putchar_unlocked@plt+0x33ac>
   14890:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14894:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14898:	tst	r5, #1
   1489c:	beq	14440 <putchar_unlocked@plt+0x2f1c>
   148a0:	cmp	r8, r6
   148a4:	mov	r5, #0
   148a8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   148ac:	movcc	r1, #39	; 0x27
   148b0:	strbcc	r1, [r2, r8]
   148b4:	add	r1, r8, #1
   148b8:	add	r8, r8, #2
   148bc:	cmp	r1, r6
   148c0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   148c4:	movcc	r2, #39	; 0x27
   148c8:	strbcc	r2, [r3, r1]
   148cc:	b	14440 <putchar_unlocked@plt+0x2f1c>
   148d0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   148d4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   148d8:	b	14440 <putchar_unlocked@plt+0x2f1c>
   148dc:	cmp	r8, r1
   148e0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   148e4:	movcc	r0, #39	; 0x27
   148e8:	strbcc	r0, [r2, r8]
   148ec:	add	r0, r8, #1
   148f0:	cmp	r0, r1
   148f4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   148f8:	movcc	r2, #36	; 0x24
   148fc:	strbcc	r2, [r3, r0]
   14900:	add	r0, r8, #2
   14904:	cmp	r0, r1
   14908:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1490c:	movcc	r2, #39	; 0x27
   14910:	strbcc	r2, [r3, r0]
   14914:	add	r0, r8, #3
   14918:	mov	r3, #1
   1491c:	cmp	r0, r1
   14920:	add	r8, r0, #1
   14924:	str	r3, [fp, #-48]	; 0xffffffd0
   14928:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1492c:	movcc	r1, #92	; 0x5c
   14930:	strbcc	r1, [r2, r0]
   14934:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14938:	cmp	r1, #2
   1493c:	beq	149a0 <putchar_unlocked@plt+0x347c>
   14940:	add	r1, r7, #1
   14944:	mov	sl, #0
   14948:	mov	r9, #1
   1494c:	mov	r5, #48	; 0x30
   14950:	cmp	r1, lr
   14954:	bcs	1411c <putchar_unlocked@plt+0x2bf8>
   14958:	ldrb	r1, [ip, r1]
   1495c:	sub	r1, r1, #48	; 0x30
   14960:	uxtb	r1, r1
   14964:	cmp	r1, #9
   14968:	bhi	1411c <putchar_unlocked@plt+0x2bf8>
   1496c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14970:	cmp	r8, r1
   14974:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14978:	movcc	r1, #48	; 0x30
   1497c:	strbcc	r1, [r2, r8]
   14980:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14984:	add	r1, r0, #2
   14988:	add	r8, r0, #3
   1498c:	cmp	r1, r2
   14990:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14994:	movcc	r2, #48	; 0x30
   14998:	strbcc	r2, [r3, r1]
   1499c:	b	1411c <putchar_unlocked@plt+0x2bf8>
   149a0:	mov	r0, #48	; 0x30
   149a4:	mov	r9, #1
   149a8:	mov	sl, #0
   149ac:	b	143b4 <putchar_unlocked@plt+0x2e90>
   149b0:	mov	sl, #0
   149b4:	b	149f0 <putchar_unlocked@plt+0x34cc>
   149b8:	mov	sl, #0
   149bc:	cmp	lr, r6
   149c0:	bls	149f0 <putchar_unlocked@plt+0x34cc>
   149c4:	ldr	ip, [fp, #-84]	; 0xffffffac
   149c8:	ldr	r6, [sp, #40]	; 0x28
   149cc:	ldr	r0, [sp, #36]	; 0x24
   149d0:	ldrb	r0, [r0, r6]
   149d4:	cmp	r0, #0
   149d8:	beq	149f8 <putchar_unlocked@plt+0x34d4>
   149dc:	add	r6, r6, #1
   149e0:	add	r0, r7, r6
   149e4:	cmp	r0, lr
   149e8:	bcc	149cc <putchar_unlocked@plt+0x34a8>
   149ec:	b	149f8 <putchar_unlocked@plt+0x34d4>
   149f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   149f4:	ldr	r6, [sp, #40]	; 0x28
   149f8:	mov	r1, r6
   149fc:	ldr	r4, [sp, #20]
   14a00:	ldr	r6, [sp, #76]	; 0x4c
   14a04:	b	142f8 <putchar_unlocked@plt+0x2dd4>
   14a08:	mov	lr, r7
   14a0c:	b	14a14 <putchar_unlocked@plt+0x34f0>
   14a10:	mvn	lr, #0
   14a14:	ldr	r9, [fp, #-64]	; 0xffffffc0
   14a18:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14a1c:	eor	r0, r9, #2
   14a20:	orr	r0, r0, r8
   14a24:	clz	r0, r0
   14a28:	lsr	r0, r0, #5
   14a2c:	tst	r1, r0
   14a30:	bne	14b2c <putchar_unlocked@plt+0x3608>
   14a34:	mov	r0, r1
   14a38:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14a3c:	cmp	r9, #2
   14a40:	movwne	r1, #1
   14a44:	orr	r0, r0, r1
   14a48:	tst	r0, #1
   14a4c:	bne	14b6c <putchar_unlocked@plt+0x3648>
   14a50:	ldr	r0, [sp, #52]	; 0x34
   14a54:	ldr	r1, [sp, #68]	; 0x44
   14a58:	str	lr, [sp, #80]	; 0x50
   14a5c:	eor	r0, r0, #1
   14a60:	tst	r0, #1
   14a64:	bne	14b6c <putchar_unlocked@plt+0x3648>
   14a68:	tst	r4, #1
   14a6c:	bne	14b34 <putchar_unlocked@plt+0x3610>
   14a70:	mov	r7, #0
   14a74:	cmp	r1, #0
   14a78:	beq	14b64 <putchar_unlocked@plt+0x3640>
   14a7c:	ldr	r0, [sp, #84]	; 0x54
   14a80:	mov	r3, #0
   14a84:	cmp	r6, #0
   14a88:	mov	r2, #0
   14a8c:	mov	r4, r1
   14a90:	str	r3, [fp, #-72]	; 0xffffffb8
   14a94:	beq	13bd0 <putchar_unlocked@plt+0x26ac>
   14a98:	b	14b6c <putchar_unlocked@plt+0x3648>
   14a9c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14aa0:	b	14ac8 <putchar_unlocked@plt+0x35a4>
   14aa4:	ldr	ip, [fp, #-84]	; 0xffffffac
   14aa8:	mov	r2, #1
   14aac:	mov	lr, r4
   14ab0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14ab4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14ab8:	b	14acc <putchar_unlocked@plt+0x35a8>
   14abc:	ldr	ip, [fp, #-84]	; 0xffffffac
   14ac0:	mov	r7, #2
   14ac4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14ac8:	ldr	r2, [sp, #84]	; 0x54
   14acc:	mov	r0, #0
   14ad0:	ldr	r1, [fp, #12]
   14ad4:	tst	r2, #1
   14ad8:	mov	r2, r7
   14adc:	mov	r3, lr
   14ae0:	str	r0, [sp, #8]
   14ae4:	ldr	r0, [sp, #64]	; 0x40
   14ae8:	movwne	r2, #4
   14aec:	cmp	r7, #2
   14af0:	movne	r2, r7
   14af4:	str	r2, [sp]
   14af8:	mov	r2, ip
   14afc:	bic	r1, r1, #2
   14b00:	str	r0, [sp, #12]
   14b04:	ldr	r0, [sp, #72]	; 0x48
   14b08:	str	r1, [sp, #4]
   14b0c:	mov	r1, r6
   14b10:	str	r0, [sp, #16]
   14b14:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14b18:	bl	13b58 <putchar_unlocked@plt+0x2634>
   14b1c:	mov	r8, r0
   14b20:	mov	r0, r8
   14b24:	sub	sp, fp, #28
   14b28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b2c:	mov	r7, #2
   14b30:	b	14ac8 <putchar_unlocked@plt+0x35a4>
   14b34:	mov	r0, #5
   14b38:	ldr	r2, [fp, #-84]	; 0xffffffac
   14b3c:	ldr	r3, [sp, #80]	; 0x50
   14b40:	str	r0, [sp]
   14b44:	ldr	r0, [fp, #12]
   14b48:	str	r0, [sp, #4]
   14b4c:	ldr	r0, [fp, #16]
   14b50:	str	r0, [sp, #8]
   14b54:	ldr	r0, [sp, #64]	; 0x40
   14b58:	str	r0, [sp, #12]
   14b5c:	ldr	r0, [sp, #72]	; 0x48
   14b60:	b	14b10 <putchar_unlocked@plt+0x35ec>
   14b64:	mov	r0, #0
   14b68:	str	r0, [fp, #-72]	; 0xffffffb8
   14b6c:	ldr	r1, [sp, #92]	; 0x5c
   14b70:	cmp	r1, #0
   14b74:	beq	14bb4 <putchar_unlocked@plt+0x3690>
   14b78:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14b7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14b80:	tst	r0, #1
   14b84:	bne	14bb8 <putchar_unlocked@plt+0x3694>
   14b88:	ldrb	r0, [r1]
   14b8c:	cmp	r0, #0
   14b90:	beq	14bb8 <putchar_unlocked@plt+0x3694>
   14b94:	add	r1, r1, #1
   14b98:	cmp	r8, r6
   14b9c:	strbcc	r0, [r2, r8]
   14ba0:	add	r8, r8, #1
   14ba4:	ldrb	r0, [r1], #1
   14ba8:	cmp	r0, #0
   14bac:	bne	14b98 <putchar_unlocked@plt+0x3674>
   14bb0:	b	14bb8 <putchar_unlocked@plt+0x3694>
   14bb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14bb8:	cmp	r8, r6
   14bbc:	movcc	r0, #0
   14bc0:	strbcc	r0, [r2, r8]
   14bc4:	b	14b20 <putchar_unlocked@plt+0x35fc>
   14bc8:	mov	r2, #1
   14bcc:	b	14ab0 <putchar_unlocked@plt+0x358c>
   14bd0:	mov	r7, #5
   14bd4:	b	14ac4 <putchar_unlocked@plt+0x35a0>
   14bd8:	bl	11500 <abort@plt>
   14bdc:	mov	r3, r2
   14be0:	mov	r2, #0
   14be4:	b	14be8 <putchar_unlocked@plt+0x36c4>
   14be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bec:	add	fp, sp, #28
   14bf0:	sub	sp, sp, #36	; 0x24
   14bf4:	movw	r8, #33192	; 0x81a8
   14bf8:	cmp	r3, #0
   14bfc:	mov	r4, r2
   14c00:	str	r2, [sp, #24]
   14c04:	mov	r5, r1
   14c08:	mov	r6, r0
   14c0c:	str	r0, [sp, #20]
   14c10:	movt	r8, #2
   14c14:	movne	r8, r3
   14c18:	bl	113e0 <__errno_location@plt>
   14c1c:	str	r0, [sp, #28]
   14c20:	cmp	r4, #0
   14c24:	add	sl, r8, #8
   14c28:	ldm	r8, {r3, r9}
   14c2c:	ldr	r7, [r0]
   14c30:	ldr	r1, [r8, #40]	; 0x28
   14c34:	ldr	r2, [r8, #44]	; 0x2c
   14c38:	mov	r0, #0
   14c3c:	orreq	r9, r9, #1
   14c40:	str	r7, [sp, #32]
   14c44:	mov	r7, r5
   14c48:	stm	sp, {r3, r9, sl}
   14c4c:	str	r1, [sp, #12]
   14c50:	str	r2, [sp, #16]
   14c54:	mov	r1, #0
   14c58:	mov	r2, r6
   14c5c:	mov	r3, r5
   14c60:	bl	13b58 <putchar_unlocked@plt+0x2634>
   14c64:	add	r4, r0, #1
   14c68:	mov	r5, r0
   14c6c:	mov	r0, r4
   14c70:	bl	15f98 <putchar_unlocked@plt+0x4a74>
   14c74:	mov	r6, r0
   14c78:	ldr	r0, [r8]
   14c7c:	ldr	r2, [r8, #44]	; 0x2c
   14c80:	ldr	r1, [r8, #40]	; 0x28
   14c84:	mov	r3, r7
   14c88:	stm	sp, {r0, r9, sl}
   14c8c:	str	r2, [sp, #16]
   14c90:	str	r1, [sp, #12]
   14c94:	mov	r0, r6
   14c98:	mov	r1, r4
   14c9c:	ldr	r2, [sp, #20]
   14ca0:	bl	13b58 <putchar_unlocked@plt+0x2634>
   14ca4:	ldr	r0, [sp, #24]
   14ca8:	ldr	r1, [sp, #32]
   14cac:	ldr	r2, [sp, #28]
   14cb0:	cmp	r0, #0
   14cb4:	str	r1, [r2]
   14cb8:	strne	r5, [r0]
   14cbc:	mov	r0, r6
   14cc0:	sub	sp, fp, #28
   14cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ccc:	add	fp, sp, #24
   14cd0:	movw	r5, #33084	; 0x813c
   14cd4:	movw	r8, #33080	; 0x8138
   14cd8:	movt	r5, #2
   14cdc:	movt	r8, #2
   14ce0:	ldr	r0, [r5]
   14ce4:	ldr	r4, [r8]
   14ce8:	cmp	r0, #2
   14cec:	blt	14d18 <putchar_unlocked@plt+0x37f4>
   14cf0:	add	r7, r4, #12
   14cf4:	mov	r6, #0
   14cf8:	ldr	r0, [r7, r6, lsl #3]
   14cfc:	bl	16550 <putchar_unlocked@plt+0x502c>
   14d00:	ldr	r1, [r5]
   14d04:	add	r2, r6, #2
   14d08:	add	r0, r6, #1
   14d0c:	mov	r6, r0
   14d10:	cmp	r2, r1
   14d14:	blt	14cf8 <putchar_unlocked@plt+0x37d4>
   14d18:	ldr	r0, [r4, #4]
   14d1c:	movw	r7, #33240	; 0x81d8
   14d20:	movt	r7, #2
   14d24:	cmp	r0, r7
   14d28:	beq	14d40 <putchar_unlocked@plt+0x381c>
   14d2c:	bl	16550 <putchar_unlocked@plt+0x502c>
   14d30:	movw	r0, #33088	; 0x8140
   14d34:	mov	r6, #256	; 0x100
   14d38:	movt	r0, #2
   14d3c:	strd	r6, [r0]
   14d40:	movw	r6, #33088	; 0x8140
   14d44:	movt	r6, #2
   14d48:	cmp	r4, r6
   14d4c:	beq	14d5c <putchar_unlocked@plt+0x3838>
   14d50:	mov	r0, r4
   14d54:	bl	16550 <putchar_unlocked@plt+0x502c>
   14d58:	str	r6, [r8]
   14d5c:	mov	r0, #1
   14d60:	str	r0, [r5]
   14d64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d68:	movw	r3, #33192	; 0x81a8
   14d6c:	mvn	r2, #0
   14d70:	movt	r3, #2
   14d74:	b	14d78 <putchar_unlocked@plt+0x3854>
   14d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d7c:	add	fp, sp, #28
   14d80:	sub	sp, sp, #44	; 0x2c
   14d84:	mov	r7, r3
   14d88:	str	r2, [sp, #36]	; 0x24
   14d8c:	str	r1, [sp, #32]
   14d90:	mov	r5, r0
   14d94:	bl	113e0 <__errno_location@plt>
   14d98:	cmp	r5, #0
   14d9c:	blt	14f08 <putchar_unlocked@plt+0x39e4>
   14da0:	cmn	r5, #-2147483647	; 0x80000001
   14da4:	beq	14f08 <putchar_unlocked@plt+0x39e4>
   14da8:	movw	r8, #33084	; 0x813c
   14dac:	movw	r4, #33080	; 0x8138
   14db0:	str	r0, [sp, #28]
   14db4:	ldr	r0, [r0]
   14db8:	movt	r8, #2
   14dbc:	movt	r4, #2
   14dc0:	ldr	r1, [r8]
   14dc4:	ldr	r6, [r4]
   14dc8:	str	r0, [sp, #24]
   14dcc:	cmp	r1, r5
   14dd0:	ble	14ddc <putchar_unlocked@plt+0x38b8>
   14dd4:	mov	sl, r6
   14dd8:	b	14e44 <putchar_unlocked@plt+0x3920>
   14ddc:	movw	r9, #33088	; 0x8140
   14de0:	mov	r0, #8
   14de4:	add	r2, r5, #1
   14de8:	str	r1, [fp, #-32]	; 0xffffffe0
   14dec:	mvn	r3, #-2147483648	; 0x80000000
   14df0:	movt	r9, #2
   14df4:	str	r0, [sp]
   14df8:	sub	r2, r2, r1
   14dfc:	sub	r1, fp, #32
   14e00:	subs	r0, r6, r9
   14e04:	movne	r0, r6
   14e08:	bl	160c8 <putchar_unlocked@plt+0x4ba4>
   14e0c:	cmp	r6, r9
   14e10:	mov	sl, r0
   14e14:	str	r0, [r4]
   14e18:	ldrdeq	r0, [r9]
   14e1c:	stmeq	sl, {r0, r1}
   14e20:	ldr	r1, [r8]
   14e24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e28:	add	r0, sl, r1, lsl #3
   14e2c:	sub	r1, r2, r1
   14e30:	lsl	r2, r1, #3
   14e34:	mov	r1, #0
   14e38:	bl	113f8 <memset@plt>
   14e3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e40:	str	r0, [r8]
   14e44:	mov	r9, sl
   14e48:	ldr	r6, [r9, r5, lsl #3]!
   14e4c:	ldr	r4, [r9, #4]!
   14e50:	ldm	r7, {r0, r1}
   14e54:	ldr	r2, [r7, #40]	; 0x28
   14e58:	ldr	r3, [r7, #44]	; 0x2c
   14e5c:	orr	r8, r1, #1
   14e60:	add	r1, r7, #8
   14e64:	stm	sp, {r0, r8}
   14e68:	add	r0, sp, #8
   14e6c:	str	r1, [sp, #20]
   14e70:	stm	r0, {r1, r2, r3}
   14e74:	mov	r0, r4
   14e78:	mov	r1, r6
   14e7c:	ldr	r2, [sp, #32]
   14e80:	ldr	r3, [sp, #36]	; 0x24
   14e84:	bl	13b58 <putchar_unlocked@plt+0x2634>
   14e88:	cmp	r6, r0
   14e8c:	bhi	14ef0 <putchar_unlocked@plt+0x39cc>
   14e90:	add	r6, r0, #1
   14e94:	movw	r0, #33240	; 0x81d8
   14e98:	movt	r0, #2
   14e9c:	str	r6, [sl, r5, lsl #3]
   14ea0:	cmp	r4, r0
   14ea4:	beq	14eb0 <putchar_unlocked@plt+0x398c>
   14ea8:	mov	r0, r4
   14eac:	bl	16550 <putchar_unlocked@plt+0x502c>
   14eb0:	mov	r0, r6
   14eb4:	bl	15f98 <putchar_unlocked@plt+0x4a74>
   14eb8:	str	r0, [r9]
   14ebc:	mov	r4, r0
   14ec0:	add	r3, sp, #8
   14ec4:	ldr	r0, [r7]
   14ec8:	ldr	r1, [r7, #40]	; 0x28
   14ecc:	ldr	r2, [r7, #44]	; 0x2c
   14ed0:	stm	sp, {r0, r8}
   14ed4:	ldr	r0, [sp, #20]
   14ed8:	stm	r3, {r0, r1, r2}
   14edc:	mov	r0, r4
   14ee0:	mov	r1, r6
   14ee4:	ldr	r2, [sp, #32]
   14ee8:	ldr	r3, [sp, #36]	; 0x24
   14eec:	bl	13b58 <putchar_unlocked@plt+0x2634>
   14ef0:	ldr	r0, [sp, #28]
   14ef4:	ldr	r1, [sp, #24]
   14ef8:	str	r1, [r0]
   14efc:	mov	r0, r4
   14f00:	sub	sp, fp, #28
   14f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f08:	bl	11500 <abort@plt>
   14f0c:	movw	r3, #33192	; 0x81a8
   14f10:	movt	r3, #2
   14f14:	b	14d78 <putchar_unlocked@plt+0x3854>
   14f18:	movw	r3, #33192	; 0x81a8
   14f1c:	mov	r1, r0
   14f20:	mov	r0, #0
   14f24:	mvn	r2, #0
   14f28:	movt	r3, #2
   14f2c:	b	14d78 <putchar_unlocked@plt+0x3854>
   14f30:	movw	r3, #33192	; 0x81a8
   14f34:	mov	r2, r1
   14f38:	mov	r1, r0
   14f3c:	mov	r0, #0
   14f40:	movt	r3, #2
   14f44:	b	14d78 <putchar_unlocked@plt+0x3854>
   14f48:	push	{fp, lr}
   14f4c:	mov	fp, sp
   14f50:	sub	sp, sp, #48	; 0x30
   14f54:	vmov.i32	q8, #0	; 0x00000000
   14f58:	mov	ip, #32
   14f5c:	mov	r3, sp
   14f60:	mov	lr, r2
   14f64:	cmp	r1, #10
   14f68:	add	r2, r3, #16
   14f6c:	vst1.64	{d16-d17}, [r3], ip
   14f70:	vst1.64	{d16-d17}, [r3]
   14f74:	vst1.64	{d16-d17}, [r2]
   14f78:	beq	14f98 <putchar_unlocked@plt+0x3a74>
   14f7c:	str	r1, [sp]
   14f80:	mov	r3, sp
   14f84:	mov	r1, lr
   14f88:	mvn	r2, #0
   14f8c:	bl	14d78 <putchar_unlocked@plt+0x3854>
   14f90:	mov	sp, fp
   14f94:	pop	{fp, pc}
   14f98:	bl	11500 <abort@plt>
   14f9c:	push	{r4, sl, fp, lr}
   14fa0:	add	fp, sp, #8
   14fa4:	sub	sp, sp, #48	; 0x30
   14fa8:	mov	ip, r3
   14fac:	mov	r3, sp
   14fb0:	vmov.i32	q8, #0	; 0x00000000
   14fb4:	mov	lr, #32
   14fb8:	cmp	r1, #10
   14fbc:	add	r4, r3, #16
   14fc0:	vst1.64	{d16-d17}, [r3], lr
   14fc4:	vst1.64	{d16-d17}, [r3]
   14fc8:	vst1.64	{d16-d17}, [r4]
   14fcc:	beq	14fec <putchar_unlocked@plt+0x3ac8>
   14fd0:	str	r1, [sp]
   14fd4:	mov	r1, r2
   14fd8:	mov	r3, sp
   14fdc:	mov	r2, ip
   14fe0:	bl	14d78 <putchar_unlocked@plt+0x3854>
   14fe4:	sub	sp, fp, #8
   14fe8:	pop	{r4, sl, fp, pc}
   14fec:	bl	11500 <abort@plt>
   14ff0:	mov	r2, r1
   14ff4:	mov	r1, r0
   14ff8:	mov	r0, #0
   14ffc:	b	14f48 <putchar_unlocked@plt+0x3a24>
   15000:	mov	r3, r2
   15004:	mov	r2, r1
   15008:	mov	r1, r0
   1500c:	mov	r0, #0
   15010:	b	14f9c <putchar_unlocked@plt+0x3a78>
   15014:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15018:	add	fp, sp, #24
   1501c:	sub	sp, sp, #48	; 0x30
   15020:	movw	r8, #33192	; 0x81a8
   15024:	mov	lr, r0
   15028:	mov	r3, sp
   1502c:	mov	ip, r1
   15030:	movt	r8, #2
   15034:	mov	r1, r3
   15038:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   1503c:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   15040:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   15044:	stm	r1, {r0, r4, r5, r6, r7, r9}
   15048:	ubfx	r0, r2, #5, #3
   1504c:	and	r2, r2, #31
   15050:	mov	r4, #1
   15054:	add	r0, r3, r0, lsl #2
   15058:	ldr	r1, [r0, #8]
   1505c:	bic	r4, r4, r1, lsr r2
   15060:	eor	r1, r1, r4, lsl r2
   15064:	mov	r2, ip
   15068:	str	r1, [r0, #8]
   1506c:	mov	r0, #0
   15070:	mov	r1, lr
   15074:	bl	14d78 <putchar_unlocked@plt+0x3854>
   15078:	sub	sp, fp, #24
   1507c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15080:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15084:	add	fp, sp, #24
   15088:	sub	sp, sp, #48	; 0x30
   1508c:	movw	lr, #33192	; 0x81a8
   15090:	mov	ip, r0
   15094:	mov	r3, sp
   15098:	movt	lr, #2
   1509c:	mov	r2, r3
   150a0:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   150a4:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   150a8:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   150ac:	stm	r2, {r0, r4, r5, r6, r7, r8}
   150b0:	ubfx	r0, r1, #5, #3
   150b4:	and	r1, r1, #31
   150b8:	mov	r7, #1
   150bc:	add	r0, r3, r0, lsl #2
   150c0:	ldr	r2, [r0, #8]
   150c4:	bic	r7, r7, r2, lsr r1
   150c8:	eor	r1, r2, r7, lsl r1
   150cc:	mvn	r2, #0
   150d0:	str	r1, [r0, #8]
   150d4:	mov	r0, #0
   150d8:	mov	r1, ip
   150dc:	bl	14d78 <putchar_unlocked@plt+0x3854>
   150e0:	sub	sp, fp, #24
   150e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   150e8:	push	{r4, r5, r6, r7, fp, lr}
   150ec:	add	fp, sp, #16
   150f0:	sub	sp, sp, #48	; 0x30
   150f4:	movw	lr, #33192	; 0x81a8
   150f8:	mov	ip, r0
   150fc:	mov	r3, sp
   15100:	movt	lr, #2
   15104:	mov	r2, r3
   15108:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   1510c:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   15110:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   15114:	stm	r2, {r0, r1, r4, r5, r6, r7}
   15118:	mov	r1, ip
   1511c:	mvn	r2, #0
   15120:	ldr	r0, [sp, #12]
   15124:	orr	r0, r0, #67108864	; 0x4000000
   15128:	str	r0, [sp, #12]
   1512c:	mov	r0, #0
   15130:	bl	14d78 <putchar_unlocked@plt+0x3854>
   15134:	sub	sp, fp, #16
   15138:	pop	{r4, r5, r6, r7, fp, pc}
   1513c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15140:	add	fp, sp, #24
   15144:	sub	sp, sp, #48	; 0x30
   15148:	movw	r8, #33192	; 0x81a8
   1514c:	mov	ip, r1
   15150:	mov	lr, r0
   15154:	mov	r3, sp
   15158:	movt	r8, #2
   1515c:	mov	r2, r3
   15160:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   15164:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   15168:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   1516c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   15170:	mov	r1, lr
   15174:	mov	r2, ip
   15178:	ldr	r0, [sp, #12]
   1517c:	orr	r0, r0, #67108864	; 0x4000000
   15180:	str	r0, [sp, #12]
   15184:	mov	r0, #0
   15188:	bl	14d78 <putchar_unlocked@plt+0x3854>
   1518c:	sub	sp, fp, #24
   15190:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15194:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15198:	add	fp, sp, #24
   1519c:	sub	sp, sp, #96	; 0x60
   151a0:	mov	lr, sp
   151a4:	vmov.i32	q8, #0	; 0x00000000
   151a8:	mov	ip, r2
   151ac:	cmp	r1, #10
   151b0:	add	r3, lr, #16
   151b4:	mov	r2, lr
   151b8:	vst1.64	{d16-d17}, [r3]
   151bc:	mov	r3, #28
   151c0:	vst1.64	{d16-d17}, [r2], r3
   151c4:	vst1.32	{d16-d17}, [r2]
   151c8:	beq	15208 <putchar_unlocked@plt+0x3ce4>
   151cc:	str	r1, [sp, #48]	; 0x30
   151d0:	add	r3, sp, #48	; 0x30
   151d4:	ldm	lr!, {r2, r4, r5, r6, r7}
   151d8:	add	r1, r3, #4
   151dc:	stmia	r1!, {r2, r4, r5, r6, r7}
   151e0:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   151e4:	stm	r1, {r2, r4, r5, r6, r7, r8}
   151e8:	mvn	r2, #0
   151ec:	ldr	r1, [sp, #60]	; 0x3c
   151f0:	orr	r1, r1, #67108864	; 0x4000000
   151f4:	str	r1, [sp, #60]	; 0x3c
   151f8:	mov	r1, ip
   151fc:	bl	14d78 <putchar_unlocked@plt+0x3854>
   15200:	sub	sp, fp, #24
   15204:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15208:	bl	11500 <abort@plt>
   1520c:	push	{fp, lr}
   15210:	mov	fp, sp
   15214:	sub	sp, sp, #8
   15218:	mvn	ip, #0
   1521c:	str	ip, [sp]
   15220:	bl	1522c <putchar_unlocked@plt+0x3d08>
   15224:	mov	sp, fp
   15228:	pop	{fp, pc}
   1522c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15230:	add	fp, sp, #24
   15234:	sub	sp, sp, #48	; 0x30
   15238:	movw	ip, #33192	; 0x81a8
   1523c:	mov	lr, r3
   15240:	mov	r3, sp
   15244:	cmp	r1, #0
   15248:	movt	ip, #2
   1524c:	cmpne	r2, #0
   15250:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   15254:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   15258:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   1525c:	stm	r3, {r4, r5, r6, r7, r8, r9}
   15260:	mov	r3, #10
   15264:	str	r3, [sp]
   15268:	bne	15270 <putchar_unlocked@plt+0x3d4c>
   1526c:	bl	11500 <abort@plt>
   15270:	ldr	ip, [fp, #8]
   15274:	str	r2, [sp, #44]	; 0x2c
   15278:	str	r1, [sp, #40]	; 0x28
   1527c:	mov	r3, sp
   15280:	mov	r1, lr
   15284:	mov	r2, ip
   15288:	bl	14d78 <putchar_unlocked@plt+0x3854>
   1528c:	sub	sp, fp, #24
   15290:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15294:	push	{fp, lr}
   15298:	mov	fp, sp
   1529c:	sub	sp, sp, #8
   152a0:	mov	r3, r2
   152a4:	mov	r2, r1
   152a8:	mov	r1, r0
   152ac:	mvn	r0, #0
   152b0:	str	r0, [sp]
   152b4:	mov	r0, #0
   152b8:	bl	1522c <putchar_unlocked@plt+0x3d08>
   152bc:	mov	sp, fp
   152c0:	pop	{fp, pc}
   152c4:	push	{fp, lr}
   152c8:	mov	fp, sp
   152cc:	sub	sp, sp, #8
   152d0:	mov	ip, r2
   152d4:	mov	r2, r1
   152d8:	mov	r1, r0
   152dc:	str	r3, [sp]
   152e0:	mov	r0, #0
   152e4:	mov	r3, ip
   152e8:	bl	1522c <putchar_unlocked@plt+0x3d08>
   152ec:	mov	sp, fp
   152f0:	pop	{fp, pc}
   152f4:	movw	r3, #33096	; 0x8148
   152f8:	movt	r3, #2
   152fc:	b	14d78 <putchar_unlocked@plt+0x3854>
   15300:	movw	r3, #33096	; 0x8148
   15304:	mov	r2, r1
   15308:	mov	r1, r0
   1530c:	mov	r0, #0
   15310:	movt	r3, #2
   15314:	b	14d78 <putchar_unlocked@plt+0x3854>
   15318:	movw	r3, #33096	; 0x8148
   1531c:	mvn	r2, #0
   15320:	movt	r3, #2
   15324:	b	14d78 <putchar_unlocked@plt+0x3854>
   15328:	movw	r3, #33096	; 0x8148
   1532c:	mov	r1, r0
   15330:	mov	r0, #0
   15334:	mvn	r2, #0
   15338:	movt	r3, #2
   1533c:	b	14d78 <putchar_unlocked@plt+0x3854>
   15340:	push	{r4, r5, fp, lr}
   15344:	add	fp, sp, #8
   15348:	mov	r5, r0
   1534c:	mov	r4, r1
   15350:	mov	r0, #0
   15354:	mov	r2, #5
   15358:	mov	r1, r5
   1535c:	bl	11284 <dcgettext@plt>
   15360:	cmp	r0, r5
   15364:	popne	{r4, r5, fp, pc}
   15368:	bl	16578 <putchar_unlocked@plt+0x5054>
   1536c:	ldrb	r1, [r0]
   15370:	and	r1, r1, #223	; 0xdf
   15374:	cmp	r1, #71	; 0x47
   15378:	beq	153e0 <putchar_unlocked@plt+0x3ebc>
   1537c:	cmp	r1, #85	; 0x55
   15380:	bne	15404 <putchar_unlocked@plt+0x3ee0>
   15384:	ldrb	r1, [r0, #1]
   15388:	and	r1, r1, #223	; 0xdf
   1538c:	cmp	r1, #84	; 0x54
   15390:	bne	15404 <putchar_unlocked@plt+0x3ee0>
   15394:	ldrb	r1, [r0, #2]
   15398:	and	r1, r1, #223	; 0xdf
   1539c:	cmp	r1, #70	; 0x46
   153a0:	ldrbeq	r1, [r0, #3]
   153a4:	cmpeq	r1, #45	; 0x2d
   153a8:	bne	15404 <putchar_unlocked@plt+0x3ee0>
   153ac:	ldrb	r1, [r0, #4]
   153b0:	cmp	r1, #56	; 0x38
   153b4:	ldrbeq	r0, [r0, #5]
   153b8:	cmpeq	r0, #0
   153bc:	bne	15404 <putchar_unlocked@plt+0x3ee0>
   153c0:	ldrb	r1, [r5]
   153c4:	movw	r2, #28044	; 0x6d8c
   153c8:	movw	r0, #28048	; 0x6d90
   153cc:	movt	r2, #1
   153d0:	movt	r0, #1
   153d4:	cmp	r1, #96	; 0x60
   153d8:	moveq	r0, r2
   153dc:	pop	{r4, r5, fp, pc}
   153e0:	ldrb	r1, [r0, #1]
   153e4:	and	r1, r1, #223	; 0xdf
   153e8:	cmp	r1, #66	; 0x42
   153ec:	bne	15404 <putchar_unlocked@plt+0x3ee0>
   153f0:	ldrb	r1, [r0, #2]
   153f4:	cmp	r1, #49	; 0x31
   153f8:	ldrbeq	r1, [r0, #3]
   153fc:	cmpeq	r1, #56	; 0x38
   15400:	beq	15420 <putchar_unlocked@plt+0x3efc>
   15404:	movw	r1, #28038	; 0x6d86
   15408:	movw	r0, #28042	; 0x6d8a
   1540c:	cmp	r4, #9
   15410:	movt	r1, #1
   15414:	movt	r0, #1
   15418:	moveq	r0, r1
   1541c:	pop	{r4, r5, fp, pc}
   15420:	ldrb	r1, [r0, #4]
   15424:	cmp	r1, #48	; 0x30
   15428:	ldrbeq	r1, [r0, #5]
   1542c:	cmpeq	r1, #51	; 0x33
   15430:	bne	15404 <putchar_unlocked@plt+0x3ee0>
   15434:	ldrb	r1, [r0, #6]
   15438:	cmp	r1, #48	; 0x30
   1543c:	ldrbeq	r0, [r0, #7]
   15440:	cmpeq	r0, #0
   15444:	bne	15404 <putchar_unlocked@plt+0x3ee0>
   15448:	ldrb	r1, [r5]
   1544c:	movw	r2, #28052	; 0x6d94
   15450:	movw	r0, #28056	; 0x6d98
   15454:	movt	r2, #1
   15458:	movt	r0, #1
   1545c:	b	153d4 <putchar_unlocked@plt+0x3eb0>
   15460:	push	{r4, r5, fp, lr}
   15464:	add	fp, sp, #8
   15468:	mov	r5, r0
   1546c:	mov	r0, #33	; 0x21
   15470:	bl	15f68 <putchar_unlocked@plt+0x4a44>
   15474:	add	r1, r5, #44	; 0x2c
   15478:	mov	r2, #32
   1547c:	mov	r4, r0
   15480:	bl	11404 <strncpy@plt>
   15484:	mov	r5, #0
   15488:	mov	r0, r4
   1548c:	strb	r5, [r4, #32]
   15490:	bl	113c8 <strlen@plt>
   15494:	cmp	r0, #1
   15498:	blt	154c0 <putchar_unlocked@plt+0x3f9c>
   1549c:	add	r1, r4, r0
   154a0:	mov	r0, r1
   154a4:	ldrb	r2, [r0, #-1]!
   154a8:	cmp	r2, #32
   154ac:	bne	154c0 <putchar_unlocked@plt+0x3f9c>
   154b0:	strb	r5, [r1, #-1]
   154b4:	cmp	r4, r0
   154b8:	mov	r1, r0
   154bc:	bcc	154a4 <putchar_unlocked@plt+0x3f80>
   154c0:	mov	r0, r4
   154c4:	pop	{r4, r5, fp, pc}
   154c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154cc:	add	fp, sp, #28
   154d0:	sub	sp, sp, #20
   154d4:	mov	r6, #0
   154d8:	mov	r5, r3
   154dc:	str	r2, [sp, #12]
   154e0:	str	r1, [sp, #8]
   154e4:	str	r6, [sp, #16]
   154e8:	bl	11230 <utmpxname@plt>
   154ec:	bl	11290 <setutxent@plt>
   154f0:	bl	1150c <getutxent@plt>
   154f4:	cmp	r0, #0
   154f8:	beq	155d4 <putchar_unlocked@plt+0x40b0>
   154fc:	mov	r4, r0
   15500:	and	r7, r5, #1
   15504:	and	r8, r5, #2
   15508:	mov	r5, #0
   1550c:	mov	r9, #384	; 0x180
   15510:	add	sl, sp, #16
   15514:	mov	r6, #0
   15518:	ldrb	r0, [r4, #44]	; 0x2c
   1551c:	cmp	r0, #0
   15520:	mov	r0, #0
   15524:	ldrhne	r0, [r4]
   15528:	subne	r0, r0, #7
   1552c:	clzne	r0, r0
   15530:	lsrne	r0, r0, #5
   15534:	cmp	r8, #0
   15538:	beq	15544 <putchar_unlocked@plt+0x4020>
   1553c:	cmp	r0, #0
   15540:	beq	155c0 <putchar_unlocked@plt+0x409c>
   15544:	cmp	r7, #0
   15548:	beq	15580 <putchar_unlocked@plt+0x405c>
   1554c:	eors	r0, r0, #1
   15550:	bne	15580 <putchar_unlocked@plt+0x405c>
   15554:	ldr	r0, [r4, #4]
   15558:	cmp	r0, #1
   1555c:	blt	15580 <putchar_unlocked@plt+0x405c>
   15560:	mov	r1, #0
   15564:	bl	113a4 <kill@plt>
   15568:	cmn	r0, #1
   1556c:	bgt	15580 <putchar_unlocked@plt+0x405c>
   15570:	bl	113e0 <__errno_location@plt>
   15574:	ldr	r0, [r0]
   15578:	cmp	r0, #3
   1557c:	beq	155c0 <putchar_unlocked@plt+0x409c>
   15580:	ldr	r0, [sp, #16]
   15584:	cmp	r5, r0
   15588:	bne	155a8 <putchar_unlocked@plt+0x4084>
   1558c:	mov	r0, r6
   15590:	mov	r1, sl
   15594:	mov	r2, #1
   15598:	mvn	r3, #0
   1559c:	str	r9, [sp]
   155a0:	bl	160c8 <putchar_unlocked@plt+0x4ba4>
   155a4:	mov	r6, r0
   155a8:	add	r0, r5, r5, lsl #1
   155ac:	mov	r1, r4
   155b0:	mov	r2, #384	; 0x180
   155b4:	add	r0, r6, r0, lsl #7
   155b8:	bl	11254 <memcpy@plt>
   155bc:	add	r5, r5, #1
   155c0:	bl	1150c <getutxent@plt>
   155c4:	mov	r4, r0
   155c8:	cmp	r0, #0
   155cc:	bne	15518 <putchar_unlocked@plt+0x3ff4>
   155d0:	b	155d8 <putchar_unlocked@plt+0x40b4>
   155d4:	mov	r5, #0
   155d8:	bl	11464 <endutxent@plt>
   155dc:	ldr	r0, [sp, #8]
   155e0:	str	r5, [r0]
   155e4:	ldr	r0, [sp, #12]
   155e8:	str	r6, [r0]
   155ec:	mov	r0, #0
   155f0:	sub	sp, fp, #28
   155f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155fc:	add	fp, sp, #24
   15600:	mov	r4, r0
   15604:	cmp	r0, #0
   15608:	beq	1562c <putchar_unlocked@plt+0x4108>
   1560c:	mov	r0, r4
   15610:	bl	113c8 <strlen@plt>
   15614:	add	r5, r0, #1
   15618:	cmp	r5, #58	; 0x3a
   1561c:	bls	15630 <putchar_unlocked@plt+0x410c>
   15620:	add	r0, r0, #10
   15624:	bic	r0, r0, #3
   15628:	b	15634 <putchar_unlocked@plt+0x4110>
   1562c:	mov	r5, #0
   15630:	mov	r0, #64	; 0x40
   15634:	bl	16450 <putchar_unlocked@plt+0x4f2c>
   15638:	mov	r6, r0
   1563c:	cmp	r0, #0
   15640:	beq	1567c <putchar_unlocked@plt+0x4158>
   15644:	cmp	r4, #0
   15648:	mov	r0, r4
   1564c:	mov	r8, #0
   15650:	mov	r7, r6
   15654:	movwne	r0, #1
   15658:	str	r8, [r6]
   1565c:	strb	r0, [r6, #4]
   15660:	strb	r8, [r7, #5]!
   15664:	beq	1567c <putchar_unlocked@plt+0x4158>
   15668:	mov	r0, r7
   1566c:	mov	r1, r4
   15670:	mov	r2, r5
   15674:	bl	11254 <memcpy@plt>
   15678:	strb	r8, [r7, r5]
   1567c:	mov	r0, r6
   15680:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15684:	push	{r4, sl, fp, lr}
   15688:	add	fp, sp, #8
   1568c:	cmp	r0, #2
   15690:	popcc	{r4, sl, fp, pc}
   15694:	ldr	r4, [r0]
   15698:	bl	16550 <putchar_unlocked@plt+0x502c>
   1569c:	cmp	r4, #0
   156a0:	mov	r0, r4
   156a4:	bne	15694 <putchar_unlocked@plt+0x4170>
   156a8:	pop	{r4, sl, fp, pc}
   156ac:	push	{r4, r5, r6, r7, fp, lr}
   156b0:	add	fp, sp, #16
   156b4:	mov	r4, r2
   156b8:	mov	r7, r1
   156bc:	cmp	r0, #0
   156c0:	beq	15704 <putchar_unlocked@plt+0x41e0>
   156c4:	mov	r6, r0
   156c8:	bl	15734 <putchar_unlocked@plt+0x4210>
   156cc:	cmp	r0, #0
   156d0:	moveq	r0, #0
   156d4:	popeq	{r4, r5, r6, r7, fp, pc}
   156d8:	mov	r5, r0
   156dc:	mov	r0, r7
   156e0:	mov	r1, r4
   156e4:	bl	112a8 <localtime_r@plt>
   156e8:	cmp	r0, #0
   156ec:	beq	15714 <putchar_unlocked@plt+0x41f0>
   156f0:	mov	r0, r6
   156f4:	mov	r1, r4
   156f8:	bl	157e8 <putchar_unlocked@plt+0x42c4>
   156fc:	eor	r6, r0, #1
   15700:	b	15718 <putchar_unlocked@plt+0x41f4>
   15704:	mov	r0, r7
   15708:	mov	r1, r4
   1570c:	pop	{r4, r5, r6, r7, fp, lr}
   15710:	b	11200 <gmtime_r@plt>
   15714:	mov	r6, #1
   15718:	mov	r0, r5
   1571c:	bl	15914 <putchar_unlocked@plt+0x43f0>
   15720:	cmp	r0, #0
   15724:	movne	r0, r4
   15728:	cmp	r6, #0
   1572c:	movwne	r0, #0
   15730:	pop	{r4, r5, r6, r7, fp, pc}
   15734:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15738:	add	fp, sp, #24
   1573c:	mov	r5, r0
   15740:	movw	r0, #28144	; 0x6df0
   15744:	movt	r0, #1
   15748:	bl	1132c <getenv@plt>
   1574c:	mov	r4, r0
   15750:	ldrb	r0, [r5, #4]
   15754:	cmp	r4, #0
   15758:	beq	15770 <putchar_unlocked@plt+0x424c>
   1575c:	cmp	r0, #0
   15760:	beq	15778 <putchar_unlocked@plt+0x4254>
   15764:	add	r0, r5, #5
   15768:	mov	r1, r4
   1576c:	bl	1120c <strcmp@plt>
   15770:	cmp	r0, #0
   15774:	beq	157a8 <putchar_unlocked@plt+0x4284>
   15778:	mov	r0, r4
   1577c:	bl	155f8 <putchar_unlocked@plt+0x40d4>
   15780:	mov	r7, #0
   15784:	cmp	r0, #0
   15788:	beq	157e0 <putchar_unlocked@plt+0x42bc>
   1578c:	mov	r4, r0
   15790:	mov	r0, r5
   15794:	bl	15a58 <putchar_unlocked@plt+0x4534>
   15798:	cmp	r0, #0
   1579c:	beq	157b0 <putchar_unlocked@plt+0x428c>
   157a0:	mov	r7, r4
   157a4:	b	157e0 <putchar_unlocked@plt+0x42bc>
   157a8:	mov	r7, #1
   157ac:	b	157e0 <putchar_unlocked@plt+0x42bc>
   157b0:	bl	113e0 <__errno_location@plt>
   157b4:	ldr	r8, [r0]
   157b8:	mov	r5, r0
   157bc:	cmp	r4, #2
   157c0:	bcc	157dc <putchar_unlocked@plt+0x42b8>
   157c4:	ldr	r6, [r4]
   157c8:	mov	r0, r4
   157cc:	bl	16550 <putchar_unlocked@plt+0x502c>
   157d0:	cmp	r6, #0
   157d4:	mov	r4, r6
   157d8:	bne	157c4 <putchar_unlocked@plt+0x42a0>
   157dc:	str	r8, [r5]
   157e0:	mov	r0, r7
   157e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   157e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157ec:	add	fp, sp, #28
   157f0:	sub	sp, sp, #4
   157f4:	ldr	r7, [r1, #40]	; 0x28
   157f8:	mov	r8, #1
   157fc:	cmp	r7, #0
   15800:	beq	158a4 <putchar_unlocked@plt+0x4380>
   15804:	mov	r5, r1
   15808:	mov	r6, r0
   1580c:	cmp	r7, r1
   15810:	bcc	15820 <putchar_unlocked@plt+0x42fc>
   15814:	add	r0, r5, #44	; 0x2c
   15818:	cmp	r7, r0
   1581c:	bcc	158a4 <putchar_unlocked@plt+0x4380>
   15820:	ldrb	r0, [r7]
   15824:	cmp	r0, #0
   15828:	beq	15898 <putchar_unlocked@plt+0x4374>
   1582c:	add	r4, r6, #5
   15830:	b	15880 <putchar_unlocked@plt+0x435c>
   15834:	ldrb	r0, [r4]
   15838:	cmp	r0, #0
   1583c:	bne	15858 <putchar_unlocked@plt+0x4334>
   15840:	add	r0, r6, #5
   15844:	cmp	r4, r0
   15848:	bne	158b0 <putchar_unlocked@plt+0x438c>
   1584c:	ldrb	r0, [r6, #4]
   15850:	cmp	r0, #0
   15854:	beq	158b0 <putchar_unlocked@plt+0x438c>
   15858:	mov	r0, r4
   1585c:	bl	113c8 <strlen@plt>
   15860:	add	r4, r4, r0
   15864:	ldrb	r0, [r4, #1]!
   15868:	cmp	r0, #0
   1586c:	bne	15880 <putchar_unlocked@plt+0x435c>
   15870:	ldr	r0, [r6]
   15874:	cmp	r0, #0
   15878:	addne	r4, r0, #5
   1587c:	movne	r6, r0
   15880:	mov	r0, r4
   15884:	mov	r1, r7
   15888:	bl	1120c <strcmp@plt>
   1588c:	cmp	r0, #0
   15890:	bne	15834 <putchar_unlocked@plt+0x4310>
   15894:	b	158a0 <putchar_unlocked@plt+0x437c>
   15898:	movw	r4, #26968	; 0x6958
   1589c:	movt	r4, #1
   158a0:	str	r4, [r5, #40]	; 0x28
   158a4:	mov	r0, r8
   158a8:	sub	sp, fp, #28
   158ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158b0:	add	r0, r6, #64	; 0x40
   158b4:	sub	sl, r0, r4
   158b8:	mov	r0, r7
   158bc:	bl	113c8 <strlen@plt>
   158c0:	add	r9, r0, #1
   158c4:	cmp	r9, sl
   158c8:	bge	158e8 <putchar_unlocked@plt+0x43c4>
   158cc:	mov	r0, r4
   158d0:	mov	r1, r7
   158d4:	mov	r2, r9
   158d8:	bl	11254 <memcpy@plt>
   158dc:	mov	r0, #0
   158e0:	strb	r0, [r4, r9]
   158e4:	b	158a0 <putchar_unlocked@plt+0x437c>
   158e8:	mov	r0, r7
   158ec:	bl	155f8 <putchar_unlocked@plt+0x40d4>
   158f0:	cmp	r0, #0
   158f4:	str	r0, [r6]
   158f8:	beq	1590c <putchar_unlocked@plt+0x43e8>
   158fc:	mov	r1, #0
   15900:	add	r4, r0, #5
   15904:	strb	r1, [r0, #4]
   15908:	b	158a0 <putchar_unlocked@plt+0x437c>
   1590c:	mov	r8, #0
   15910:	b	158a4 <putchar_unlocked@plt+0x4380>
   15914:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15918:	add	fp, sp, #24
   1591c:	cmp	r0, #1
   15920:	beq	15970 <putchar_unlocked@plt+0x444c>
   15924:	mov	r7, r0
   15928:	bl	113e0 <__errno_location@plt>
   1592c:	ldr	r8, [r0]
   15930:	mov	r6, r0
   15934:	mov	r0, r7
   15938:	bl	15a58 <putchar_unlocked@plt+0x4534>
   1593c:	cmp	r0, #0
   15940:	mov	r5, r0
   15944:	ldreq	r8, [r6]
   15948:	cmp	r7, #2
   1594c:	bcc	15968 <putchar_unlocked@plt+0x4444>
   15950:	ldr	r4, [r7]
   15954:	mov	r0, r7
   15958:	bl	16550 <putchar_unlocked@plt+0x502c>
   1595c:	cmp	r4, #0
   15960:	mov	r7, r4
   15964:	bne	15950 <putchar_unlocked@plt+0x442c>
   15968:	str	r8, [r6]
   1596c:	b	15974 <putchar_unlocked@plt+0x4450>
   15970:	mov	r5, #1
   15974:	mov	r0, r5
   15978:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1597c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15980:	add	fp, sp, #24
   15984:	sub	sp, sp, #48	; 0x30
   15988:	mov	r4, r1
   1598c:	cmp	r0, #0
   15990:	beq	15a30 <putchar_unlocked@plt+0x450c>
   15994:	mov	r6, r0
   15998:	bl	15734 <putchar_unlocked@plt+0x4210>
   1599c:	cmp	r0, #0
   159a0:	beq	15a48 <putchar_unlocked@plt+0x4524>
   159a4:	mov	r1, #32
   159a8:	mov	r2, r4
   159ac:	mov	r7, r0
   159b0:	mov	r0, sp
   159b4:	vld1.32	{d16-d17}, [r2], r1
   159b8:	mov	r3, r0
   159bc:	vst1.32	{d16-d17}, [r3], r1
   159c0:	ldr	r1, [r4, #16]
   159c4:	ldr	r5, [r4, #20]
   159c8:	str	r1, [sp, #16]
   159cc:	mvn	r1, #0
   159d0:	str	r1, [sp, #28]
   159d4:	str	r5, [sp, #20]
   159d8:	ldr	r1, [r2]
   159dc:	str	r1, [r3]
   159e0:	bl	11218 <mktime@plt>
   159e4:	mov	r5, r0
   159e8:	ldr	r0, [sp, #28]
   159ec:	cmn	r0, #1
   159f0:	ble	15a40 <putchar_unlocked@plt+0x451c>
   159f4:	mov	r8, sp
   159f8:	mov	r0, r6
   159fc:	mov	r1, r8
   15a00:	bl	157e8 <putchar_unlocked@plt+0x42c4>
   15a04:	mov	r6, r0
   15a08:	mov	r0, r7
   15a0c:	bl	15914 <putchar_unlocked@plt+0x43f0>
   15a10:	cmp	r6, #0
   15a14:	cmpne	r0, #0
   15a18:	beq	15a48 <putchar_unlocked@plt+0x4524>
   15a1c:	ldm	r8!, {r0, r1, r2, r3, r7}
   15a20:	stmia	r4!, {r0, r1, r2, r3, r7}
   15a24:	ldm	r8, {r0, r1, r2, r3, r6, r7}
   15a28:	stm	r4, {r0, r1, r2, r3, r6, r7}
   15a2c:	b	15a4c <putchar_unlocked@plt+0x4528>
   15a30:	mov	r0, r4
   15a34:	sub	sp, fp, #24
   15a38:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a3c:	b	114ac <timegm@plt>
   15a40:	mov	r0, r7
   15a44:	bl	15914 <putchar_unlocked@plt+0x43f0>
   15a48:	mvn	r5, #0
   15a4c:	mov	r0, r5
   15a50:	sub	sp, fp, #24
   15a54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a58:	push	{fp, lr}
   15a5c:	mov	fp, sp
   15a60:	ldrb	r1, [r0, #4]
   15a64:	cmp	r1, #0
   15a68:	beq	15a84 <putchar_unlocked@plt+0x4560>
   15a6c:	add	r1, r0, #5
   15a70:	movw	r0, #28144	; 0x6df0
   15a74:	mov	r2, #1
   15a78:	movt	r0, #1
   15a7c:	bl	113d4 <setenv@plt>
   15a80:	b	15a90 <putchar_unlocked@plt+0x456c>
   15a84:	movw	r0, #28144	; 0x6df0
   15a88:	movt	r0, #1
   15a8c:	bl	114dc <unsetenv@plt>
   15a90:	mov	r1, #0
   15a94:	cmp	r0, #0
   15a98:	bne	15aa4 <putchar_unlocked@plt+0x4580>
   15a9c:	bl	112cc <tzset@plt>
   15aa0:	mov	r1, #1
   15aa4:	mov	r0, r1
   15aa8:	pop	{fp, pc}
   15aac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ab0:	add	fp, sp, #24
   15ab4:	sub	sp, sp, #32
   15ab8:	ldr	r6, [fp, #12]
   15abc:	ldr	r7, [fp, #8]
   15ac0:	mov	r4, r2
   15ac4:	mov	r8, r0
   15ac8:	cmp	r1, #0
   15acc:	beq	15af4 <putchar_unlocked@plt+0x45d0>
   15ad0:	movw	r2, #28147	; 0x6df3
   15ad4:	mov	r5, r1
   15ad8:	str	r3, [sp, #4]
   15adc:	str	r4, [sp]
   15ae0:	mov	r0, r8
   15ae4:	mov	r1, #1
   15ae8:	movt	r2, #1
   15aec:	mov	r3, r5
   15af0:	b	15b0c <putchar_unlocked@plt+0x45e8>
   15af4:	movw	r2, #28159	; 0x6dff
   15af8:	str	r3, [sp]
   15afc:	mov	r0, r8
   15b00:	mov	r1, #1
   15b04:	mov	r3, r4
   15b08:	movt	r2, #1
   15b0c:	bl	11428 <__fprintf_chk@plt>
   15b10:	movw	r1, #28166	; 0x6e06
   15b14:	mov	r0, #0
   15b18:	mov	r2, #5
   15b1c:	movt	r1, #1
   15b20:	bl	11284 <dcgettext@plt>
   15b24:	movw	r2, #28884	; 0x70d4
   15b28:	mov	r3, r0
   15b2c:	movw	r0, #2022	; 0x7e6
   15b30:	mov	r1, #1
   15b34:	str	r0, [sp]
   15b38:	movt	r2, #1
   15b3c:	mov	r0, r8
   15b40:	bl	11428 <__fprintf_chk@plt>
   15b44:	movw	r4, #26967	; 0x6957
   15b48:	mov	r1, r8
   15b4c:	movt	r4, #1
   15b50:	mov	r0, r4
   15b54:	bl	111f4 <fputs_unlocked@plt>
   15b58:	movw	r1, #28170	; 0x6e0a
   15b5c:	mov	r0, #0
   15b60:	mov	r2, #5
   15b64:	movt	r1, #1
   15b68:	bl	11284 <dcgettext@plt>
   15b6c:	movw	r3, #28341	; 0x6eb5
   15b70:	mov	r2, r0
   15b74:	mov	r0, r8
   15b78:	mov	r1, #1
   15b7c:	movt	r3, #1
   15b80:	bl	11428 <__fprintf_chk@plt>
   15b84:	mov	r0, r4
   15b88:	mov	r1, r8
   15b8c:	bl	111f4 <fputs_unlocked@plt>
   15b90:	cmp	r6, #9
   15b94:	bhi	15bf8 <putchar_unlocked@plt+0x46d4>
   15b98:	add	r0, pc, #0
   15b9c:	ldr	pc, [r0, r6, lsl #2]
   15ba0:	ldrdeq	r5, [r1], -r0
   15ba4:	andeq	r5, r1, r8, asr #23
   15ba8:	andeq	r5, r1, r4, lsl #24
   15bac:	andeq	r5, r1, ip, lsr #24
   15bb0:	andeq	r5, r1, r4, asr ip
   15bb4:	andeq	r5, r1, ip, ror ip
   15bb8:	andeq	r5, r1, r4, lsr #25
   15bbc:	ldrdeq	r5, [r1], -ip
   15bc0:	andeq	r5, r1, ip, ror sp
   15bc4:	andeq	r5, r1, r4, lsr #26
   15bc8:	movw	r1, #28375	; 0x6ed7
   15bcc:	mov	r0, #0
   15bd0:	mov	r2, #5
   15bd4:	movt	r1, #1
   15bd8:	bl	11284 <dcgettext@plt>
   15bdc:	ldr	r3, [r7]
   15be0:	mov	r2, r0
   15be4:	mov	r0, r8
   15be8:	mov	r1, #1
   15bec:	sub	sp, fp, #24
   15bf0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15bf4:	b	11428 <__fprintf_chk@plt>
   15bf8:	movw	r1, #28694	; 0x7016
   15bfc:	movt	r1, #1
   15c00:	b	15d2c <putchar_unlocked@plt+0x4808>
   15c04:	movw	r1, #28391	; 0x6ee7
   15c08:	mov	r0, #0
   15c0c:	mov	r2, #5
   15c10:	movt	r1, #1
   15c14:	bl	11284 <dcgettext@plt>
   15c18:	mov	r2, r0
   15c1c:	ldr	r3, [r7]
   15c20:	ldr	r0, [r7, #4]
   15c24:	str	r0, [sp]
   15c28:	b	15d18 <putchar_unlocked@plt+0x47f4>
   15c2c:	movw	r1, #28414	; 0x6efe
   15c30:	mov	r0, #0
   15c34:	mov	r2, #5
   15c38:	movt	r1, #1
   15c3c:	bl	11284 <dcgettext@plt>
   15c40:	ldr	r3, [r7]
   15c44:	mov	r2, r0
   15c48:	ldmib	r7, {r0, r1}
   15c4c:	stm	sp, {r0, r1}
   15c50:	b	15d18 <putchar_unlocked@plt+0x47f4>
   15c54:	movw	r1, #28442	; 0x6f1a
   15c58:	mov	r0, #0
   15c5c:	mov	r2, #5
   15c60:	movt	r1, #1
   15c64:	bl	11284 <dcgettext@plt>
   15c68:	ldr	r3, [r7]
   15c6c:	mov	r2, r0
   15c70:	ldmib	r7, {r0, r1, r7}
   15c74:	stm	sp, {r0, r1, r7}
   15c78:	b	15d18 <putchar_unlocked@plt+0x47f4>
   15c7c:	movw	r1, #28474	; 0x6f3a
   15c80:	mov	r0, #0
   15c84:	mov	r2, #5
   15c88:	movt	r1, #1
   15c8c:	bl	11284 <dcgettext@plt>
   15c90:	ldr	r3, [r7]
   15c94:	mov	r2, r0
   15c98:	ldmib	r7, {r0, r1, r6, r7}
   15c9c:	stm	sp, {r0, r1, r6, r7}
   15ca0:	b	15d18 <putchar_unlocked@plt+0x47f4>
   15ca4:	movw	r1, #28510	; 0x6f5e
   15ca8:	mov	r0, #0
   15cac:	mov	r2, #5
   15cb0:	movt	r1, #1
   15cb4:	bl	11284 <dcgettext@plt>
   15cb8:	ldr	r3, [r7]
   15cbc:	mov	r2, r0
   15cc0:	ldmib	r7, {r0, r1, r6}
   15cc4:	ldr	r5, [r7, #16]
   15cc8:	ldr	r7, [r7, #20]
   15ccc:	stm	sp, {r0, r1, r6}
   15cd0:	str	r5, [sp, #12]
   15cd4:	str	r7, [sp, #16]
   15cd8:	b	15d18 <putchar_unlocked@plt+0x47f4>
   15cdc:	movw	r1, #28550	; 0x6f86
   15ce0:	mov	r0, #0
   15ce4:	mov	r2, #5
   15ce8:	movt	r1, #1
   15cec:	bl	11284 <dcgettext@plt>
   15cf0:	ldr	r3, [r7]
   15cf4:	mov	r2, r0
   15cf8:	ldmib	r7, {r0, r1, r6}
   15cfc:	ldr	r5, [r7, #16]
   15d00:	ldr	r4, [r7, #20]
   15d04:	ldr	r7, [r7, #24]
   15d08:	stm	sp, {r0, r1, r6}
   15d0c:	str	r5, [sp, #12]
   15d10:	str	r4, [sp, #16]
   15d14:	str	r7, [sp, #20]
   15d18:	mov	r0, r8
   15d1c:	mov	r1, #1
   15d20:	b	15dcc <putchar_unlocked@plt+0x48a8>
   15d24:	movw	r1, #28642	; 0x6fe2
   15d28:	movt	r1, #1
   15d2c:	mov	r0, #0
   15d30:	mov	r2, #5
   15d34:	bl	11284 <dcgettext@plt>
   15d38:	mov	ip, r0
   15d3c:	ldr	r3, [r7]
   15d40:	ldr	r0, [r7, #4]
   15d44:	ldr	r1, [r7, #8]
   15d48:	ldr	r6, [r7, #12]
   15d4c:	ldr	r5, [r7, #16]
   15d50:	ldr	r4, [r7, #20]
   15d54:	ldr	r2, [r7, #24]
   15d58:	ldr	lr, [r7, #28]
   15d5c:	ldr	r7, [r7, #32]
   15d60:	stm	sp, {r0, r1, r6}
   15d64:	str	r5, [sp, #12]
   15d68:	str	r4, [sp, #16]
   15d6c:	str	r2, [sp, #20]
   15d70:	str	lr, [sp, #24]
   15d74:	str	r7, [sp, #28]
   15d78:	b	15dc0 <putchar_unlocked@plt+0x489c>
   15d7c:	movw	r1, #28594	; 0x6fb2
   15d80:	mov	r0, #0
   15d84:	mov	r2, #5
   15d88:	movt	r1, #1
   15d8c:	bl	11284 <dcgettext@plt>
   15d90:	mov	ip, r0
   15d94:	ldr	r3, [r7]
   15d98:	ldmib	r7, {r0, r1, r6}
   15d9c:	ldr	r5, [r7, #16]
   15da0:	ldr	r4, [r7, #20]
   15da4:	ldr	r2, [r7, #24]
   15da8:	ldr	r7, [r7, #28]
   15dac:	stm	sp, {r0, r1, r6}
   15db0:	str	r5, [sp, #12]
   15db4:	str	r4, [sp, #16]
   15db8:	str	r2, [sp, #20]
   15dbc:	str	r7, [sp, #24]
   15dc0:	mov	r0, r8
   15dc4:	mov	r1, #1
   15dc8:	mov	r2, ip
   15dcc:	bl	11428 <__fprintf_chk@plt>
   15dd0:	sub	sp, fp, #24
   15dd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15dd8:	push	{r4, sl, fp, lr}
   15ddc:	add	fp, sp, #8
   15de0:	sub	sp, sp, #8
   15de4:	ldr	ip, [fp, #8]
   15de8:	mov	lr, #0
   15dec:	ldr	r4, [ip, lr, lsl #2]
   15df0:	add	lr, lr, #1
   15df4:	cmp	r4, #0
   15df8:	bne	15dec <putchar_unlocked@plt+0x48c8>
   15dfc:	sub	r4, lr, #1
   15e00:	str	ip, [sp]
   15e04:	str	r4, [sp, #4]
   15e08:	bl	15aac <putchar_unlocked@plt+0x4588>
   15e0c:	sub	sp, fp, #8
   15e10:	pop	{r4, sl, fp, pc}
   15e14:	push	{r4, r5, fp, lr}
   15e18:	add	fp, sp, #8
   15e1c:	sub	sp, sp, #48	; 0x30
   15e20:	ldr	r4, [fp, #8]
   15e24:	mov	ip, #0
   15e28:	add	lr, sp, #8
   15e2c:	ldr	r5, [r4]
   15e30:	cmp	r5, #0
   15e34:	str	r5, [lr, ip, lsl #2]
   15e38:	beq	15e4c <putchar_unlocked@plt+0x4928>
   15e3c:	add	ip, ip, #1
   15e40:	add	r4, r4, #4
   15e44:	cmp	ip, #10
   15e48:	bcc	15e2c <putchar_unlocked@plt+0x4908>
   15e4c:	str	lr, [sp]
   15e50:	str	ip, [sp, #4]
   15e54:	bl	15aac <putchar_unlocked@plt+0x4588>
   15e58:	sub	sp, fp, #8
   15e5c:	pop	{r4, r5, fp, pc}
   15e60:	push	{fp, lr}
   15e64:	mov	fp, sp
   15e68:	sub	sp, sp, #8
   15e6c:	add	ip, fp, #8
   15e70:	str	ip, [sp, #4]
   15e74:	str	ip, [sp]
   15e78:	bl	15e14 <putchar_unlocked@plt+0x48f0>
   15e7c:	mov	sp, fp
   15e80:	pop	{fp, pc}
   15e84:	push	{fp, lr}
   15e88:	mov	fp, sp
   15e8c:	movw	r0, #33164	; 0x818c
   15e90:	movt	r0, #2
   15e94:	ldr	r1, [r0]
   15e98:	movw	r0, #26967	; 0x6957
   15e9c:	movt	r0, #1
   15ea0:	bl	111f4 <fputs_unlocked@plt>
   15ea4:	movw	r1, #28754	; 0x7052
   15ea8:	mov	r0, #0
   15eac:	mov	r2, #5
   15eb0:	movt	r1, #1
   15eb4:	bl	11284 <dcgettext@plt>
   15eb8:	movw	r2, #28774	; 0x7066
   15ebc:	mov	r1, r0
   15ec0:	mov	r0, #1
   15ec4:	movt	r2, #1
   15ec8:	bl	11410 <__printf_chk@plt>
   15ecc:	movw	r1, #28796	; 0x707c
   15ed0:	mov	r0, #0
   15ed4:	mov	r2, #5
   15ed8:	movt	r1, #1
   15edc:	bl	11284 <dcgettext@plt>
   15ee0:	movw	r2, #27120	; 0x69f0
   15ee4:	movw	r3, #27314	; 0x6ab2
   15ee8:	mov	r1, r0
   15eec:	mov	r0, #1
   15ef0:	movt	r2, #1
   15ef4:	movt	r3, #1
   15ef8:	bl	11410 <__printf_chk@plt>
   15efc:	movw	r1, #28816	; 0x7090
   15f00:	mov	r0, #0
   15f04:	mov	r2, #5
   15f08:	movt	r1, #1
   15f0c:	bl	11284 <dcgettext@plt>
   15f10:	movw	r2, #28855	; 0x70b7
   15f14:	mov	r1, r0
   15f18:	mov	r0, #1
   15f1c:	movt	r2, #1
   15f20:	pop	{fp, lr}
   15f24:	b	11410 <__printf_chk@plt>
   15f28:	b	15f2c <putchar_unlocked@plt+0x4a08>
   15f2c:	push	{r4, r5, r6, sl, fp, lr}
   15f30:	add	fp, sp, #16
   15f34:	mov	r4, r2
   15f38:	mov	r5, r1
   15f3c:	mov	r6, r0
   15f40:	bl	16610 <putchar_unlocked@plt+0x50ec>
   15f44:	cmp	r0, #0
   15f48:	popne	{r4, r5, r6, sl, fp, pc}
   15f4c:	cmp	r6, #0
   15f50:	beq	15f64 <putchar_unlocked@plt+0x4a40>
   15f54:	cmp	r5, #0
   15f58:	cmpne	r4, #0
   15f5c:	bne	15f64 <putchar_unlocked@plt+0x4a40>
   15f60:	pop	{r4, r5, r6, sl, fp, pc}
   15f64:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   15f68:	push	{fp, lr}
   15f6c:	mov	fp, sp
   15f70:	bl	16450 <putchar_unlocked@plt+0x4f2c>
   15f74:	cmp	r0, #0
   15f78:	popne	{fp, pc}
   15f7c:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   15f80:	push	{fp, lr}
   15f84:	mov	fp, sp
   15f88:	bl	16450 <putchar_unlocked@plt+0x4f2c>
   15f8c:	cmp	r0, #0
   15f90:	popne	{fp, pc}
   15f94:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   15f98:	push	{fp, lr}
   15f9c:	mov	fp, sp
   15fa0:	bl	16450 <putchar_unlocked@plt+0x4f2c>
   15fa4:	cmp	r0, #0
   15fa8:	popne	{fp, pc}
   15fac:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   15fb0:	push	{r4, r5, fp, lr}
   15fb4:	add	fp, sp, #8
   15fb8:	mov	r4, r1
   15fbc:	mov	r5, r0
   15fc0:	bl	16480 <putchar_unlocked@plt+0x4f5c>
   15fc4:	cmp	r0, #0
   15fc8:	popne	{r4, r5, fp, pc}
   15fcc:	cmp	r5, #0
   15fd0:	beq	15fe0 <putchar_unlocked@plt+0x4abc>
   15fd4:	cmp	r4, #0
   15fd8:	bne	15fe0 <putchar_unlocked@plt+0x4abc>
   15fdc:	pop	{r4, r5, fp, pc}
   15fe0:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   15fe4:	push	{fp, lr}
   15fe8:	mov	fp, sp
   15fec:	cmp	r1, #0
   15ff0:	orreq	r1, r1, #1
   15ff4:	bl	16480 <putchar_unlocked@plt+0x4f5c>
   15ff8:	cmp	r0, #0
   15ffc:	popne	{fp, pc}
   16000:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   16004:	push	{fp, lr}
   16008:	mov	fp, sp
   1600c:	clz	r3, r2
   16010:	lsr	ip, r3, #5
   16014:	clz	r3, r1
   16018:	lsr	r3, r3, #5
   1601c:	orrs	r3, r3, ip
   16020:	movwne	r1, #1
   16024:	movwne	r2, #1
   16028:	bl	16610 <putchar_unlocked@plt+0x50ec>
   1602c:	cmp	r0, #0
   16030:	popne	{fp, pc}
   16034:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   16038:	push	{fp, lr}
   1603c:	mov	fp, sp
   16040:	mov	r2, r1
   16044:	mov	r1, r0
   16048:	mov	r0, #0
   1604c:	bl	16610 <putchar_unlocked@plt+0x50ec>
   16050:	cmp	r0, #0
   16054:	popne	{fp, pc}
   16058:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   1605c:	mov	r2, r1
   16060:	mov	r1, r0
   16064:	mov	r0, #0
   16068:	b	16004 <putchar_unlocked@plt+0x4ae0>
   1606c:	mov	r2, #1
   16070:	b	16074 <putchar_unlocked@plt+0x4b50>
   16074:	push	{r4, r5, fp, lr}
   16078:	add	fp, sp, #8
   1607c:	ldr	r5, [r1]
   16080:	mov	r4, r1
   16084:	cmp	r0, #0
   16088:	beq	160a0 <putchar_unlocked@plt+0x4b7c>
   1608c:	mov	r1, #1
   16090:	add	r1, r1, r5, lsr #1
   16094:	adds	r5, r5, r1
   16098:	bcc	160b8 <putchar_unlocked@plt+0x4b94>
   1609c:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   160a0:	cmp	r5, #0
   160a4:	bne	160b8 <putchar_unlocked@plt+0x4b94>
   160a8:	mov	r1, #64	; 0x40
   160ac:	cmp	r2, #64	; 0x40
   160b0:	udiv	r5, r1, r2
   160b4:	addhi	r5, r5, #1
   160b8:	mov	r1, r5
   160bc:	bl	15f2c <putchar_unlocked@plt+0x4a08>
   160c0:	str	r5, [r4]
   160c4:	pop	{r4, r5, fp, pc}
   160c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   160cc:	add	fp, sp, #24
   160d0:	ldr	r6, [r1]
   160d4:	mov	r8, r1
   160d8:	ldr	r4, [fp, #8]
   160dc:	add	r1, r6, r6, asr #1
   160e0:	cmp	r1, r6
   160e4:	mvnvs	r1, #-2147483648	; 0x80000000
   160e8:	cmp	r1, r3
   160ec:	mov	r5, r1
   160f0:	movgt	r5, r3
   160f4:	cmn	r3, #1
   160f8:	movle	r5, r1
   160fc:	cmn	r4, #1
   16100:	ble	16120 <putchar_unlocked@plt+0x4bfc>
   16104:	cmp	r4, #0
   16108:	beq	16174 <putchar_unlocked@plt+0x4c50>
   1610c:	cmn	r5, #1
   16110:	ble	16148 <putchar_unlocked@plt+0x4c24>
   16114:	mvn	r7, #-2147483648	; 0x80000000
   16118:	udiv	r1, r7, r4
   1611c:	b	1613c <putchar_unlocked@plt+0x4c18>
   16120:	cmn	r5, #1
   16124:	ble	16164 <putchar_unlocked@plt+0x4c40>
   16128:	cmn	r4, #1
   1612c:	beq	16174 <putchar_unlocked@plt+0x4c50>
   16130:	mov	r1, #-2147483648	; 0x80000000
   16134:	mvn	r7, #-2147483648	; 0x80000000
   16138:	sdiv	r1, r1, r4
   1613c:	cmp	r1, r5
   16140:	bge	16174 <putchar_unlocked@plt+0x4c50>
   16144:	b	16184 <putchar_unlocked@plt+0x4c60>
   16148:	beq	16174 <putchar_unlocked@plt+0x4c50>
   1614c:	mov	r1, #-2147483648	; 0x80000000
   16150:	mvn	r7, #-2147483648	; 0x80000000
   16154:	sdiv	r1, r1, r5
   16158:	cmp	r1, r4
   1615c:	bge	16174 <putchar_unlocked@plt+0x4c50>
   16160:	b	16184 <putchar_unlocked@plt+0x4c60>
   16164:	mvn	r7, #-2147483648	; 0x80000000
   16168:	sdiv	r1, r7, r4
   1616c:	cmp	r5, r1
   16170:	blt	16184 <putchar_unlocked@plt+0x4c60>
   16174:	mul	r1, r5, r4
   16178:	mov	r7, #64	; 0x40
   1617c:	cmp	r1, #63	; 0x3f
   16180:	bgt	1618c <putchar_unlocked@plt+0x4c68>
   16184:	sdiv	r5, r7, r4
   16188:	mul	r1, r5, r4
   1618c:	cmp	r0, #0
   16190:	moveq	r7, #0
   16194:	streq	r7, [r8]
   16198:	sub	r7, r5, r6
   1619c:	cmp	r7, r2
   161a0:	bge	16244 <putchar_unlocked@plt+0x4d20>
   161a4:	add	r5, r6, r2
   161a8:	mov	r2, #0
   161ac:	mov	r1, #0
   161b0:	cmp	r5, r3
   161b4:	movwgt	r2, #1
   161b8:	cmn	r3, #1
   161bc:	movwgt	r1, #1
   161c0:	cmp	r5, r6
   161c4:	bvs	1622c <putchar_unlocked@plt+0x4d08>
   161c8:	ands	r1, r1, r2
   161cc:	bne	1622c <putchar_unlocked@plt+0x4d08>
   161d0:	cmn	r4, #1
   161d4:	ble	161f4 <putchar_unlocked@plt+0x4cd0>
   161d8:	cmp	r4, #0
   161dc:	beq	16240 <putchar_unlocked@plt+0x4d1c>
   161e0:	cmn	r5, #1
   161e4:	ble	16218 <putchar_unlocked@plt+0x4cf4>
   161e8:	mvn	r1, #-2147483648	; 0x80000000
   161ec:	udiv	r1, r1, r4
   161f0:	b	1620c <putchar_unlocked@plt+0x4ce8>
   161f4:	cmn	r5, #1
   161f8:	ble	16230 <putchar_unlocked@plt+0x4d0c>
   161fc:	cmn	r4, #1
   16200:	beq	16240 <putchar_unlocked@plt+0x4d1c>
   16204:	mov	r1, #-2147483648	; 0x80000000
   16208:	sdiv	r1, r1, r4
   1620c:	cmp	r1, r5
   16210:	bge	16240 <putchar_unlocked@plt+0x4d1c>
   16214:	b	1622c <putchar_unlocked@plt+0x4d08>
   16218:	beq	16240 <putchar_unlocked@plt+0x4d1c>
   1621c:	mov	r1, #-2147483648	; 0x80000000
   16220:	sdiv	r1, r1, r5
   16224:	cmp	r1, r4
   16228:	bge	16240 <putchar_unlocked@plt+0x4d1c>
   1622c:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   16230:	mvn	r1, #-2147483648	; 0x80000000
   16234:	sdiv	r1, r1, r4
   16238:	cmp	r5, r1
   1623c:	blt	1622c <putchar_unlocked@plt+0x4d08>
   16240:	mul	r1, r5, r4
   16244:	bl	15fb0 <putchar_unlocked@plt+0x4a8c>
   16248:	str	r5, [r8]
   1624c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16250:	push	{fp, lr}
   16254:	mov	fp, sp
   16258:	mov	r1, #1
   1625c:	bl	163fc <putchar_unlocked@plt+0x4ed8>
   16260:	cmp	r0, #0
   16264:	popne	{fp, pc}
   16268:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   1626c:	push	{fp, lr}
   16270:	mov	fp, sp
   16274:	bl	163fc <putchar_unlocked@plt+0x4ed8>
   16278:	cmp	r0, #0
   1627c:	popne	{fp, pc}
   16280:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   16284:	push	{fp, lr}
   16288:	mov	fp, sp
   1628c:	mov	r1, #1
   16290:	bl	163fc <putchar_unlocked@plt+0x4ed8>
   16294:	cmp	r0, #0
   16298:	popne	{fp, pc}
   1629c:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   162a0:	push	{fp, lr}
   162a4:	mov	fp, sp
   162a8:	bl	163fc <putchar_unlocked@plt+0x4ed8>
   162ac:	cmp	r0, #0
   162b0:	popne	{fp, pc}
   162b4:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   162b8:	push	{r4, r5, r6, sl, fp, lr}
   162bc:	add	fp, sp, #16
   162c0:	mov	r5, r0
   162c4:	mov	r0, r1
   162c8:	mov	r4, r1
   162cc:	bl	16450 <putchar_unlocked@plt+0x4f2c>
   162d0:	cmp	r0, #0
   162d4:	beq	162f0 <putchar_unlocked@plt+0x4dcc>
   162d8:	mov	r1, r5
   162dc:	mov	r2, r4
   162e0:	mov	r6, r0
   162e4:	bl	11254 <memcpy@plt>
   162e8:	mov	r0, r6
   162ec:	pop	{r4, r5, r6, sl, fp, pc}
   162f0:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   162f4:	push	{r4, r5, r6, sl, fp, lr}
   162f8:	add	fp, sp, #16
   162fc:	mov	r5, r0
   16300:	mov	r0, r1
   16304:	mov	r4, r1
   16308:	bl	16450 <putchar_unlocked@plt+0x4f2c>
   1630c:	cmp	r0, #0
   16310:	beq	1632c <putchar_unlocked@plt+0x4e08>
   16314:	mov	r1, r5
   16318:	mov	r2, r4
   1631c:	mov	r6, r0
   16320:	bl	11254 <memcpy@plt>
   16324:	mov	r0, r6
   16328:	pop	{r4, r5, r6, sl, fp, pc}
   1632c:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   16330:	push	{r4, r5, r6, sl, fp, lr}
   16334:	add	fp, sp, #16
   16338:	mov	r5, r0
   1633c:	add	r0, r1, #1
   16340:	mov	r4, r1
   16344:	bl	16450 <putchar_unlocked@plt+0x4f2c>
   16348:	cmp	r0, #0
   1634c:	beq	16374 <putchar_unlocked@plt+0x4e50>
   16350:	mov	r6, r0
   16354:	mov	r0, #0
   16358:	mov	r1, r5
   1635c:	mov	r2, r4
   16360:	strb	r0, [r6, r4]
   16364:	mov	r0, r6
   16368:	bl	11254 <memcpy@plt>
   1636c:	mov	r0, r6
   16370:	pop	{r4, r5, r6, sl, fp, pc}
   16374:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   16378:	push	{r4, r5, r6, sl, fp, lr}
   1637c:	add	fp, sp, #16
   16380:	mov	r4, r0
   16384:	bl	113c8 <strlen@plt>
   16388:	add	r5, r0, #1
   1638c:	mov	r0, r5
   16390:	bl	16450 <putchar_unlocked@plt+0x4f2c>
   16394:	cmp	r0, #0
   16398:	beq	163b4 <putchar_unlocked@plt+0x4e90>
   1639c:	mov	r1, r4
   163a0:	mov	r2, r5
   163a4:	mov	r6, r0
   163a8:	bl	11254 <memcpy@plt>
   163ac:	mov	r0, r6
   163b0:	pop	{r4, r5, r6, sl, fp, pc}
   163b4:	bl	163b8 <putchar_unlocked@plt+0x4e94>
   163b8:	push	{fp, lr}
   163bc:	mov	fp, sp
   163c0:	movw	r0, #33076	; 0x8134
   163c4:	movw	r1, #28931	; 0x7103
   163c8:	mov	r2, #5
   163cc:	movt	r0, #2
   163d0:	movt	r1, #1
   163d4:	ldr	r4, [r0]
   163d8:	mov	r0, #0
   163dc:	bl	11284 <dcgettext@plt>
   163e0:	movw	r2, #27793	; 0x6c91
   163e4:	mov	r3, r0
   163e8:	mov	r0, r4
   163ec:	mov	r1, #0
   163f0:	movt	r2, #1
   163f4:	bl	11320 <error@plt>
   163f8:	bl	11500 <abort@plt>
   163fc:	clz	r2, r1
   16400:	clz	r3, r0
   16404:	lsr	r2, r2, #5
   16408:	lsr	r3, r3, #5
   1640c:	orrs	r2, r3, r2
   16410:	movwne	r1, #1
   16414:	movwne	r0, #1
   16418:	cmp	r1, #0
   1641c:	beq	1644c <putchar_unlocked@plt+0x4f28>
   16420:	mvn	r2, #-2147483648	; 0x80000000
   16424:	udiv	r2, r2, r1
   16428:	cmp	r2, r0
   1642c:	bcs	1644c <putchar_unlocked@plt+0x4f28>
   16430:	push	{fp, lr}
   16434:	mov	fp, sp
   16438:	bl	113e0 <__errno_location@plt>
   1643c:	mov	r1, #12
   16440:	str	r1, [r0]
   16444:	mov	r0, #0
   16448:	pop	{fp, pc}
   1644c:	b	111e8 <calloc@plt>
   16450:	cmp	r0, #0
   16454:	movweq	r0, #1
   16458:	cmn	r0, #1
   1645c:	ble	16464 <putchar_unlocked@plt+0x4f40>
   16460:	b	11338 <malloc@plt>
   16464:	push	{fp, lr}
   16468:	mov	fp, sp
   1646c:	bl	113e0 <__errno_location@plt>
   16470:	mov	r1, #12
   16474:	str	r1, [r0]
   16478:	mov	r0, #0
   1647c:	pop	{fp, pc}
   16480:	push	{fp, lr}
   16484:	mov	fp, sp
   16488:	cmp	r0, #0
   1648c:	beq	164a8 <putchar_unlocked@plt+0x4f84>
   16490:	cmp	r1, #0
   16494:	beq	164b4 <putchar_unlocked@plt+0x4f90>
   16498:	cmn	r1, #1
   1649c:	ble	164bc <putchar_unlocked@plt+0x4f98>
   164a0:	pop	{fp, lr}
   164a4:	b	1129c <realloc@plt>
   164a8:	mov	r0, r1
   164ac:	pop	{fp, lr}
   164b0:	b	16450 <putchar_unlocked@plt+0x4f2c>
   164b4:	bl	16550 <putchar_unlocked@plt+0x502c>
   164b8:	b	164c8 <putchar_unlocked@plt+0x4fa4>
   164bc:	bl	113e0 <__errno_location@plt>
   164c0:	mov	r1, #12
   164c4:	str	r1, [r0]
   164c8:	mov	r0, #0
   164cc:	pop	{fp, pc}
   164d0:	push	{r4, r5, r6, sl, fp, lr}
   164d4:	add	fp, sp, #16
   164d8:	mov	r4, r0
   164dc:	bl	112fc <__fpending@plt>
   164e0:	mov	r5, r0
   164e4:	mov	r0, r4
   164e8:	bl	11308 <ferror_unlocked@plt>
   164ec:	mov	r6, r0
   164f0:	mov	r0, r4
   164f4:	bl	11f48 <putchar_unlocked@plt+0xa24>
   164f8:	cmp	r6, #0
   164fc:	beq	1651c <putchar_unlocked@plt+0x4ff8>
   16500:	mvn	r4, #0
   16504:	cmp	r0, #0
   16508:	bne	16548 <putchar_unlocked@plt+0x5024>
   1650c:	bl	113e0 <__errno_location@plt>
   16510:	mov	r1, #0
   16514:	str	r1, [r0]
   16518:	b	16548 <putchar_unlocked@plt+0x5024>
   1651c:	cmp	r0, #0
   16520:	mov	r4, r0
   16524:	mvnne	r4, #0
   16528:	cmp	r5, #0
   1652c:	bne	16548 <putchar_unlocked@plt+0x5024>
   16530:	cmp	r0, #0
   16534:	beq	16548 <putchar_unlocked@plt+0x5024>
   16538:	bl	113e0 <__errno_location@plt>
   1653c:	ldr	r0, [r0]
   16540:	subs	r4, r0, #9
   16544:	mvnne	r4, #0
   16548:	mov	r0, r4
   1654c:	pop	{r4, r5, r6, sl, fp, pc}
   16550:	push	{r4, r5, r6, sl, fp, lr}
   16554:	add	fp, sp, #16
   16558:	mov	r4, r0
   1655c:	bl	113e0 <__errno_location@plt>
   16560:	ldr	r6, [r0]
   16564:	mov	r5, r0
   16568:	mov	r0, r4
   1656c:	bl	1123c <free@plt>
   16570:	str	r6, [r5]
   16574:	pop	{r4, r5, r6, sl, fp, pc}
   16578:	push	{fp, lr}
   1657c:	mov	fp, sp
   16580:	mov	r0, #14
   16584:	bl	11488 <nl_langinfo@plt>
   16588:	movw	r1, #26968	; 0x6958
   1658c:	cmp	r0, #0
   16590:	movt	r1, #1
   16594:	movne	r1, r0
   16598:	movw	r0, #28948	; 0x7114
   1659c:	ldrb	r2, [r1]
   165a0:	movt	r0, #1
   165a4:	cmp	r2, #0
   165a8:	movne	r0, r1
   165ac:	pop	{fp, pc}
   165b0:	push	{r4, r5, r6, r7, fp, lr}
   165b4:	add	fp, sp, #16
   165b8:	sub	sp, sp, #8
   165bc:	add	r5, sp, #4
   165c0:	cmp	r0, #0
   165c4:	mov	r7, r2
   165c8:	mov	r4, r1
   165cc:	movne	r5, r0
   165d0:	mov	r0, r5
   165d4:	bl	11314 <mbrtowc@plt>
   165d8:	mov	r6, r0
   165dc:	cmp	r7, #0
   165e0:	beq	16604 <putchar_unlocked@plt+0x50e0>
   165e4:	cmn	r6, #2
   165e8:	bcc	16604 <putchar_unlocked@plt+0x50e0>
   165ec:	mov	r0, #0
   165f0:	bl	1664c <putchar_unlocked@plt+0x5128>
   165f4:	cmp	r0, #0
   165f8:	ldrbeq	r0, [r4]
   165fc:	moveq	r6, #1
   16600:	streq	r0, [r5]
   16604:	mov	r0, r6
   16608:	sub	sp, fp, #16
   1660c:	pop	{r4, r5, r6, r7, fp, pc}
   16610:	cmp	r2, #0
   16614:	beq	16644 <putchar_unlocked@plt+0x5120>
   16618:	mvn	r3, #0
   1661c:	udiv	r3, r3, r2
   16620:	cmp	r3, r1
   16624:	bcs	16644 <putchar_unlocked@plt+0x5120>
   16628:	push	{fp, lr}
   1662c:	mov	fp, sp
   16630:	bl	113e0 <__errno_location@plt>
   16634:	mov	r1, #12
   16638:	str	r1, [r0]
   1663c:	mov	r0, #0
   16640:	pop	{fp, pc}
   16644:	mul	r1, r2, r1
   16648:	b	16480 <putchar_unlocked@plt+0x4f5c>
   1664c:	push	{r4, sl, fp, lr}
   16650:	add	fp, sp, #8
   16654:	sub	sp, sp, #264	; 0x108
   16658:	add	r1, sp, #7
   1665c:	movw	r2, #257	; 0x101
   16660:	bl	166b0 <putchar_unlocked@plt+0x518c>
   16664:	mov	r4, #0
   16668:	cmp	r0, #0
   1666c:	bne	166a4 <putchar_unlocked@plt+0x5180>
   16670:	movw	r1, #27775	; 0x6c7f
   16674:	add	r0, sp, #7
   16678:	movt	r1, #1
   1667c:	bl	1120c <strcmp@plt>
   16680:	cmp	r0, #0
   16684:	beq	166a4 <putchar_unlocked@plt+0x5180>
   16688:	movw	r1, #28954	; 0x711a
   1668c:	add	r0, sp, #7
   16690:	movt	r1, #1
   16694:	bl	1120c <strcmp@plt>
   16698:	mov	r4, r0
   1669c:	cmp	r0, #0
   166a0:	movwne	r4, #1
   166a4:	mov	r0, r4
   166a8:	sub	sp, fp, #8
   166ac:	pop	{r4, sl, fp, pc}
   166b0:	push	{r4, r5, r6, r7, fp, lr}
   166b4:	add	fp, sp, #16
   166b8:	mov	r4, r1
   166bc:	mov	r1, #0
   166c0:	mov	r6, r2
   166c4:	bl	11470 <setlocale@plt>
   166c8:	cmp	r0, #0
   166cc:	beq	166f8 <putchar_unlocked@plt+0x51d4>
   166d0:	mov	r7, r0
   166d4:	bl	113c8 <strlen@plt>
   166d8:	cmp	r0, r6
   166dc:	bcs	1670c <putchar_unlocked@plt+0x51e8>
   166e0:	add	r2, r0, #1
   166e4:	mov	r0, r4
   166e8:	mov	r1, r7
   166ec:	bl	11254 <memcpy@plt>
   166f0:	mov	r5, #0
   166f4:	b	16734 <putchar_unlocked@plt+0x5210>
   166f8:	cmp	r6, #0
   166fc:	mov	r5, #22
   16700:	movne	r0, #0
   16704:	strbne	r0, [r4]
   16708:	b	16734 <putchar_unlocked@plt+0x5210>
   1670c:	mov	r5, #34	; 0x22
   16710:	cmp	r6, #0
   16714:	beq	16734 <putchar_unlocked@plt+0x5210>
   16718:	sub	r6, r6, #1
   1671c:	mov	r0, r4
   16720:	mov	r1, r7
   16724:	mov	r2, r6
   16728:	bl	11254 <memcpy@plt>
   1672c:	mov	r0, #0
   16730:	strb	r0, [r4, r6]
   16734:	mov	r0, r5
   16738:	pop	{r4, r5, r6, r7, fp, pc}
   1673c:	mov	r1, #0
   16740:	b	11470 <setlocale@plt>
   16744:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16748:	mov	r7, r0
   1674c:	ldr	r6, [pc, #72]	; 1679c <putchar_unlocked@plt+0x5278>
   16750:	ldr	r5, [pc, #72]	; 167a0 <putchar_unlocked@plt+0x527c>
   16754:	add	r6, pc, r6
   16758:	add	r5, pc, r5
   1675c:	sub	r6, r6, r5
   16760:	mov	r8, r1
   16764:	mov	r9, r2
   16768:	bl	111c8 <calloc@plt-0x20>
   1676c:	asrs	r6, r6, #2
   16770:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16774:	mov	r4, #0
   16778:	add	r4, r4, #1
   1677c:	ldr	r3, [r5], #4
   16780:	mov	r2, r9
   16784:	mov	r1, r8
   16788:	mov	r0, r7
   1678c:	blx	r3
   16790:	cmp	r6, r4
   16794:	bne	16778 <putchar_unlocked@plt+0x5254>
   16798:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1679c:			; <UNDEFINED> instruction: 0x000117b0
   167a0:	andeq	r1, r1, r8, lsr #15
   167a4:	bx	lr
   167a8:	ldr	r3, [pc, #12]	; 167bc <putchar_unlocked@plt+0x5298>
   167ac:	mov	r1, #0
   167b0:	add	r3, pc, r3
   167b4:	ldr	r2, [r3]
   167b8:	b	113ec <__cxa_atexit@plt>
   167bc:	andeq	r1, r1, r4, ror r9

Disassembly of section .fini:

000167c0 <.fini>:
   167c0:	push	{r3, lr}
   167c4:	pop	{r3, pc}
