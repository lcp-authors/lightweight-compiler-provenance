
../repos/coreutils/src/uname:     file format elf32-littlearm


Disassembly of section .init:

00010b0c <.init>:
   10b0c:	push	{r3, lr}
   10b10:	bl	11108 <putchar_unlocked@plt+0x3cc>
   10b14:	pop	{r3, pc}

Disassembly of section .plt:

00010b18 <calloc@plt-0x14>:
   10b18:	push	{lr}		; (str lr, [sp, #-4]!)
   10b1c:	ldr	lr, [pc, #4]	; 10b28 <calloc@plt-0x4>
   10b20:	add	lr, pc, lr
   10b24:	ldr	pc, [lr, #8]!
   10b28:	ldrdeq	r4, [r1], -r8

00010b2c <calloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #20, 20	; 0x14000
   10b34:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b38 <fputs_unlocked@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #20, 20	; 0x14000
   10b40:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b44 <strcmp@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #20, 20	; 0x14000
   10b4c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b50 <fflush@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #20, 20	; 0x14000
   10b58:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b5c <free@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #20, 20	; 0x14000
   10b64:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b68 <_exit@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #20, 20	; 0x14000
   10b70:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b74 <memcpy@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #20, 20	; 0x14000
   10b7c:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b80 <mbsinit@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #20, 20	; 0x14000
   10b88:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b8c <memcmp@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1176]!	; 0x498

00010b98 <fputc_unlocked@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1168]!	; 0x490

00010ba4 <uname@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1160]!	; 0x488

00010bb0 <dcgettext@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1152]!	; 0x480

00010bbc <realloc@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1144]!	; 0x478

00010bc8 <textdomain@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1136]!	; 0x470

00010bd4 <iswprint@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1128]!	; 0x468

00010be0 <lseek64@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1120]!	; 0x460

00010bec <__ctype_get_mb_cur_max@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1112]!	; 0x458

00010bf8 <__fpending@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1104]!	; 0x450

00010c04 <ferror_unlocked@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1096]!	; 0x448

00010c10 <mbrtowc@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1088]!	; 0x440

00010c1c <error@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1080]!	; 0x438

00010c28 <malloc@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1072]!	; 0x430

00010c34 <__libc_start_main@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1064]!	; 0x428

00010c40 <__freading@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1056]!	; 0x420

00010c4c <__gmon_start__@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1048]!	; 0x418

00010c58 <getopt_long@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1040]!	; 0x410

00010c64 <__ctype_b_loc@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #1032]!	; 0x408

00010c70 <exit@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #1024]!	; 0x400

00010c7c <strlen@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c88 <__errno_location@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c94 <__cxa_atexit@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010ca0 <memset@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #992]!	; 0x3e0

00010cac <__printf_chk@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #984]!	; 0x3d8

00010cb8 <fileno@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #976]!	; 0x3d0

00010cc4 <__fprintf_chk@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #968]!	; 0x3c8

00010cd0 <fclose@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #960]!	; 0x3c0

00010cdc <fseeko64@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #952]!	; 0x3b8

00010ce8 <setlocale@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #944]!	; 0x3b0

00010cf4 <strrchr@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #936]!	; 0x3a8

00010d00 <nl_langinfo@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #928]!	; 0x3a0

00010d0c <bindtextdomain@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #920]!	; 0x398

00010d18 <fputs@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #912]!	; 0x390

00010d24 <strncmp@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #904]!	; 0x388

00010d30 <abort@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #896]!	; 0x380

00010d3c <putchar_unlocked@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00010d48 <.text>:
   10d48:	push	{r4, lr}
   10d4c:	bl	10c88 <__errno_location@plt>
   10d50:	mov	r3, #12
   10d54:	str	r3, [r0]
   10d58:	mov	r0, #0
   10d5c:	pop	{r4, pc}
   10d60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d64:	mov	r6, r0
   10d68:	sub	sp, sp, #408	; 0x198
   10d6c:	mov	r5, r1
   10d70:	mov	r4, #0
   10d74:	ldr	r7, [pc, #768]	; 1107c <putchar_unlocked@plt+0x340>
   10d78:	ldr	r0, [r1]
   10d7c:	bl	11564 <putchar_unlocked@plt+0x828>
   10d80:	ldr	r1, [pc, #760]	; 11080 <putchar_unlocked@plt+0x344>
   10d84:	mov	r0, #6
   10d88:	bl	10ce8 <setlocale@plt>
   10d8c:	ldr	r1, [pc, #752]	; 11084 <putchar_unlocked@plt+0x348>
   10d90:	ldr	r0, [pc, #752]	; 11088 <putchar_unlocked@plt+0x34c>
   10d94:	bl	10d0c <bindtextdomain@plt>
   10d98:	ldr	r0, [pc, #744]	; 11088 <putchar_unlocked@plt+0x34c>
   10d9c:	bl	10bc8 <textdomain@plt>
   10da0:	ldr	r0, [pc, #740]	; 1108c <putchar_unlocked@plt+0x350>
   10da4:	bl	138a0 <putchar_unlocked@plt+0x2b64>
   10da8:	ldr	r3, [r7]
   10dac:	cmp	r3, #2
   10db0:	beq	10e70 <putchar_unlocked@plt+0x134>
   10db4:	mov	r8, r7
   10db8:	ldr	r9, [pc, #720]	; 11090 <putchar_unlocked@plt+0x354>
   10dbc:	mov	sl, r4
   10dc0:	ldr	r7, [pc, #716]	; 11094 <putchar_unlocked@plt+0x358>
   10dc4:	mov	r3, r9
   10dc8:	mov	r2, r7
   10dcc:	str	sl, [sp]
   10dd0:	mov	r1, r5
   10dd4:	mov	r0, r6
   10dd8:	bl	10c58 <getopt_long@plt>
   10ddc:	cmn	r0, #1
   10de0:	bne	10eb0 <putchar_unlocked@plt+0x174>
   10de4:	ldr	r7, [pc, #684]	; 11098 <putchar_unlocked@plt+0x35c>
   10de8:	ldr	r3, [r7]
   10dec:	cmp	r6, r3
   10df0:	beq	10f90 <putchar_unlocked@plt+0x254>
   10df4:	mov	r2, #5
   10df8:	ldr	r1, [pc, #668]	; 1109c <putchar_unlocked@plt+0x360>
   10dfc:	mov	r0, #0
   10e00:	bl	10bb0 <dcgettext@plt>
   10e04:	ldr	r3, [r7]
   10e08:	mov	r4, r0
   10e0c:	ldr	r0, [r5, r3, lsl #2]
   10e10:	bl	12b64 <putchar_unlocked@plt+0x1e28>
   10e14:	mov	r1, #0
   10e18:	mov	r3, r0
   10e1c:	mov	r2, r4
   10e20:	mov	r0, r1
   10e24:	bl	10c1c <error@plt>
   10e28:	b	10ea8 <putchar_unlocked@plt+0x16c>
   10e2c:	ldr	r3, [pc, #620]	; 110a0 <putchar_unlocked@plt+0x364>
   10e30:	ldr	ip, [r7]
   10e34:	ldr	r0, [pc, #616]	; 110a4 <putchar_unlocked@plt+0x368>
   10e38:	stmib	sp, {r3, r4}
   10e3c:	ldr	r3, [pc, #612]	; 110a8 <putchar_unlocked@plt+0x36c>
   10e40:	cmp	ip, #1
   10e44:	ldr	r1, [pc, #608]	; 110ac <putchar_unlocked@plt+0x370>
   10e48:	movne	r1, r0
   10e4c:	ldr	r0, [pc, #604]	; 110b0 <putchar_unlocked@plt+0x374>
   10e50:	str	r3, [sp]
   10e54:	ldr	r3, [pc, #600]	; 110b4 <putchar_unlocked@plt+0x378>
   10e58:	ldr	r2, [pc, #600]	; 110b8 <putchar_unlocked@plt+0x37c>
   10e5c:	ldr	r0, [r0]
   10e60:	ldr	r3, [r3]
   10e64:	bl	12fb0 <putchar_unlocked@plt+0x2274>
   10e68:	mov	r0, r4
   10e6c:	bl	10c70 <exit@plt>
   10e70:	ldr	r3, [pc, #580]	; 110bc <putchar_unlocked@plt+0x380>
   10e74:	mov	r1, r5
   10e78:	mov	r0, r6
   10e7c:	str	r4, [sp]
   10e80:	ldr	r2, [pc, #504]	; 11080 <putchar_unlocked@plt+0x344>
   10e84:	bl	10c58 <getopt_long@plt>
   10e88:	cmn	r0, #1
   10e8c:	moveq	r4, #16
   10e90:	beq	10de4 <putchar_unlocked@plt+0xa8>
   10e94:	cmn	r0, #3
   10e98:	beq	10e2c <putchar_unlocked@plt+0xf0>
   10e9c:	cmn	r0, #2
   10ea0:	moveq	r0, #0
   10ea4:	beq	10eac <putchar_unlocked@plt+0x170>
   10ea8:	mov	r0, #1
   10eac:	bl	11204 <putchar_unlocked@plt+0x4c8>
   10eb0:	cmp	r0, #110	; 0x6e
   10eb4:	beq	10f68 <putchar_unlocked@plt+0x22c>
   10eb8:	bgt	10f24 <putchar_unlocked@plt+0x1e8>
   10ebc:	cmp	r0, #97	; 0x61
   10ec0:	beq	10f88 <putchar_unlocked@plt+0x24c>
   10ec4:	bgt	10f0c <putchar_unlocked@plt+0x1d0>
   10ec8:	cmn	r0, #3
   10ecc:	bne	10e9c <putchar_unlocked@plt+0x160>
   10ed0:	ldr	ip, [r8]
   10ed4:	mov	r4, #0
   10ed8:	ldr	r3, [pc, #456]	; 110a8 <putchar_unlocked@plt+0x36c>
   10edc:	ldr	r0, [pc, #448]	; 110a4 <putchar_unlocked@plt+0x368>
   10ee0:	cmp	ip, #1
   10ee4:	ldr	r1, [pc, #448]	; 110ac <putchar_unlocked@plt+0x370>
   10ee8:	stm	sp, {r3, r4}
   10eec:	ldr	r3, [pc, #448]	; 110b4 <putchar_unlocked@plt+0x378>
   10ef0:	movne	r1, r0
   10ef4:	ldr	r0, [pc, #436]	; 110b0 <putchar_unlocked@plt+0x374>
   10ef8:	ldr	r2, [pc, #440]	; 110b8 <putchar_unlocked@plt+0x37c>
   10efc:	ldr	r3, [r3]
   10f00:	ldr	r0, [r0]
   10f04:	bl	12fb0 <putchar_unlocked@plt+0x2274>
   10f08:	b	10e68 <putchar_unlocked@plt+0x12c>
   10f0c:	cmp	r0, #105	; 0x69
   10f10:	beq	10f78 <putchar_unlocked@plt+0x23c>
   10f14:	cmp	r0, #109	; 0x6d
   10f18:	bne	10ea8 <putchar_unlocked@plt+0x16c>
   10f1c:	orr	r4, r4, #16
   10f20:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f24:	cmp	r0, #114	; 0x72
   10f28:	beq	10f70 <putchar_unlocked@plt+0x234>
   10f2c:	bgt	10f48 <putchar_unlocked@plt+0x20c>
   10f30:	cmp	r0, #111	; 0x6f
   10f34:	beq	10f80 <putchar_unlocked@plt+0x244>
   10f38:	cmp	r0, #112	; 0x70
   10f3c:	bne	10ea8 <putchar_unlocked@plt+0x16c>
   10f40:	orr	r4, r4, #32
   10f44:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f48:	cmp	r0, #115	; 0x73
   10f4c:	beq	10f60 <putchar_unlocked@plt+0x224>
   10f50:	cmp	r0, #118	; 0x76
   10f54:	bne	10ea8 <putchar_unlocked@plt+0x16c>
   10f58:	orr	r4, r4, #8
   10f5c:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f60:	orr	r4, r4, #1
   10f64:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f68:	orr	r4, r4, #2
   10f6c:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f70:	orr	r4, r4, #4
   10f74:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f78:	orr	r4, r4, #64	; 0x40
   10f7c:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f80:	orr	r4, r4, #128	; 0x80
   10f84:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f88:	mvn	r4, #0
   10f8c:	b	10dc4 <putchar_unlocked@plt+0x88>
   10f90:	cmp	r4, #0
   10f94:	beq	10fd8 <putchar_unlocked@plt+0x29c>
   10f98:	tst	r4, #31
   10f9c:	beq	11030 <putchar_unlocked@plt+0x2f4>
   10fa0:	add	r0, sp, #16
   10fa4:	bl	10ba4 <uname@plt>
   10fa8:	cmn	r0, #1
   10fac:	bne	10fe0 <putchar_unlocked@plt+0x2a4>
   10fb0:	bl	10c88 <__errno_location@plt>
   10fb4:	ldr	r4, [r0]
   10fb8:	mov	r2, #5
   10fbc:	mov	r0, #0
   10fc0:	ldr	r1, [pc, #248]	; 110c0 <putchar_unlocked@plt+0x384>
   10fc4:	bl	10bb0 <dcgettext@plt>
   10fc8:	mov	r2, r0
   10fcc:	mov	r0, #1
   10fd0:	mov	r1, r4
   10fd4:	bl	10c1c <error@plt>
   10fd8:	mov	r4, #1
   10fdc:	b	10fa0 <putchar_unlocked@plt+0x264>
   10fe0:	tst	r4, #1
   10fe4:	beq	10ff0 <putchar_unlocked@plt+0x2b4>
   10fe8:	add	r0, sp, #16
   10fec:	bl	111bc <putchar_unlocked@plt+0x480>
   10ff0:	tst	r4, #2
   10ff4:	beq	11000 <putchar_unlocked@plt+0x2c4>
   10ff8:	add	r0, sp, #81	; 0x51
   10ffc:	bl	111bc <putchar_unlocked@plt+0x480>
   11000:	tst	r4, #4
   11004:	beq	11010 <putchar_unlocked@plt+0x2d4>
   11008:	add	r0, sp, #146	; 0x92
   1100c:	bl	111bc <putchar_unlocked@plt+0x480>
   11010:	tst	r4, #8
   11014:	beq	11020 <putchar_unlocked@plt+0x2e4>
   11018:	add	r0, sp, #211	; 0xd3
   1101c:	bl	111bc <putchar_unlocked@plt+0x480>
   11020:	tst	r4, #16
   11024:	beq	11030 <putchar_unlocked@plt+0x2f4>
   11028:	add	r0, sp, #276	; 0x114
   1102c:	bl	111bc <putchar_unlocked@plt+0x480>
   11030:	adds	r5, r4, #1
   11034:	movne	r5, #1
   11038:	ands	r3, r5, r4, lsr #5
   1103c:	beq	11048 <putchar_unlocked@plt+0x30c>
   11040:	ldr	r0, [pc, #124]	; 110c4 <putchar_unlocked@plt+0x388>
   11044:	bl	111bc <putchar_unlocked@plt+0x480>
   11048:	ands	r3, r5, r4, lsr #6
   1104c:	beq	11058 <putchar_unlocked@plt+0x31c>
   11050:	ldr	r0, [pc, #108]	; 110c4 <putchar_unlocked@plt+0x388>
   11054:	bl	111bc <putchar_unlocked@plt+0x480>
   11058:	tst	r4, #128	; 0x80
   1105c:	beq	11068 <putchar_unlocked@plt+0x32c>
   11060:	ldr	r0, [pc, #96]	; 110c8 <putchar_unlocked@plt+0x38c>
   11064:	bl	111bc <putchar_unlocked@plt+0x480>
   11068:	mov	r0, #10
   1106c:	bl	10d3c <putchar_unlocked@plt>
   11070:	mov	r0, #0
   11074:	add	sp, sp, #408	; 0x198
   11078:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1107c:	andeq	r5, r2, ip, asr #1
   11080:	andeq	r3, r1, r3, lsl sp
   11084:	andeq	r3, r1, sp, asr lr
   11088:			; <UNDEFINED> instruction: 0x00013dba
   1108c:	muleq	r1, r0, r4
   11090:	andeq	r3, r1, ip, lsr #18
   11094:	andeq	r3, r1, pc, lsl #29
   11098:	andeq	r5, r2, r0, lsr #2
   1109c:	muleq	r1, r9, lr
   110a0:	andeq	r3, r1, r5, ror lr
   110a4:	andeq	r3, r1, sl, lsl sl
   110a8:	andeq	r3, r1, pc, ror lr
   110ac:	andeq	r3, r1, r4, lsl sl
   110b0:	andeq	r5, r2, ip, lsr #2
   110b4:	ldrdeq	r5, [r2], -r0
   110b8:			; <UNDEFINED> instruction: 0x00013db6
   110bc:	strdeq	r3, [r1], -ip
   110c0:	andeq	r3, r1, sl, lsr #29
   110c4:	andeq	r3, r1, ip, lsl #20
   110c8:	andeq	r3, r1, r1, asr #29
   110cc:	mov	fp, #0
   110d0:	mov	lr, #0
   110d4:	pop	{r1}		; (ldr r1, [sp], #4)
   110d8:	mov	r2, sp
   110dc:	push	{r2}		; (str r2, [sp, #-4]!)
   110e0:	push	{r0}		; (str r0, [sp, #-4]!)
   110e4:	ldr	ip, [pc, #16]	; 110fc <putchar_unlocked@plt+0x3c0>
   110e8:	push	{ip}		; (str ip, [sp, #-4]!)
   110ec:	ldr	r0, [pc, #12]	; 11100 <putchar_unlocked@plt+0x3c4>
   110f0:	ldr	r3, [pc, #12]	; 11104 <putchar_unlocked@plt+0x3c8>
   110f4:	bl	10c34 <__libc_start_main@plt>
   110f8:	bl	10d30 <abort@plt>
   110fc:	muleq	r1, ip, r8
   11100:	andeq	r0, r1, r0, ror #26
   11104:	andeq	r3, r1, ip, lsr r8
   11108:	ldr	r3, [pc, #20]	; 11124 <putchar_unlocked@plt+0x3e8>
   1110c:	ldr	r2, [pc, #20]	; 11128 <putchar_unlocked@plt+0x3ec>
   11110:	add	r3, pc, r3
   11114:	ldr	r2, [r3, r2]
   11118:	cmp	r2, #0
   1111c:	bxeq	lr
   11120:	b	10c4c <__gmon_start__@plt>
   11124:	andeq	r3, r1, r8, ror #29
   11128:	andeq	r0, r0, r0, asr #1
   1112c:	ldr	r0, [pc, #24]	; 1114c <putchar_unlocked@plt+0x410>
   11130:	ldr	r3, [pc, #24]	; 11150 <putchar_unlocked@plt+0x414>
   11134:	cmp	r3, r0
   11138:	bxeq	lr
   1113c:	ldr	r3, [pc, #16]	; 11154 <putchar_unlocked@plt+0x418>
   11140:	cmp	r3, #0
   11144:	bxeq	lr
   11148:	bx	r3
   1114c:	andeq	r5, r2, r8, lsl r1
   11150:	andeq	r5, r2, r8, lsl r1
   11154:	andeq	r0, r0, r0
   11158:	ldr	r0, [pc, #36]	; 11184 <putchar_unlocked@plt+0x448>
   1115c:	ldr	r1, [pc, #36]	; 11188 <putchar_unlocked@plt+0x44c>
   11160:	sub	r1, r1, r0
   11164:	asr	r1, r1, #2
   11168:	add	r1, r1, r1, lsr #31
   1116c:	asrs	r1, r1, #1
   11170:	bxeq	lr
   11174:	ldr	r3, [pc, #16]	; 1118c <putchar_unlocked@plt+0x450>
   11178:	cmp	r3, #0
   1117c:	bxeq	lr
   11180:	bx	r3
   11184:	andeq	r5, r2, r8, lsl r1
   11188:	andeq	r5, r2, r8, lsl r1
   1118c:	andeq	r0, r0, r0
   11190:	push	{r4, lr}
   11194:	ldr	r4, [pc, #24]	; 111b4 <putchar_unlocked@plt+0x478>
   11198:	ldrb	r3, [r4]
   1119c:	cmp	r3, #0
   111a0:	popne	{r4, pc}
   111a4:	bl	1112c <putchar_unlocked@plt+0x3f0>
   111a8:	mov	r3, #1
   111ac:	strb	r3, [r4]
   111b0:	pop	{r4, pc}
   111b4:	andeq	r5, r2, r0, lsr r1
   111b8:	b	11158 <putchar_unlocked@plt+0x41c>
   111bc:	ldr	r3, [pc, #56]	; 111fc <putchar_unlocked@plt+0x4c0>
   111c0:	push	{r4, r5, r6, lr}
   111c4:	mov	r5, r0
   111c8:	ldrb	r2, [r3]
   111cc:	mov	r4, r3
   111d0:	cmp	r2, #0
   111d4:	beq	111e0 <putchar_unlocked@plt+0x4a4>
   111d8:	mov	r0, #32
   111dc:	bl	10d3c <putchar_unlocked@plt>
   111e0:	mov	r3, #1
   111e4:	mov	r0, r5
   111e8:	strb	r3, [r4]
   111ec:	ldr	r3, [pc, #12]	; 11200 <putchar_unlocked@plt+0x4c4>
   111f0:	pop	{r4, r5, r6, lr}
   111f4:	ldr	r1, [r3]
   111f8:	b	10b38 <fputs_unlocked@plt>
   111fc:	andeq	r5, r2, r1, lsr r1
   11200:	andeq	r5, r2, ip, lsr #2
   11204:	push	{r7, lr}
   11208:	subs	r7, r0, #0
   1120c:	sub	sp, sp, #56	; 0x38
   11210:	ldr	r4, [pc, #508]	; 11414 <putchar_unlocked@plt+0x6d8>
   11214:	beq	1124c <putchar_unlocked@plt+0x510>
   11218:	mov	r2, #5
   1121c:	mov	r0, #0
   11220:	ldr	r3, [pc, #496]	; 11418 <putchar_unlocked@plt+0x6dc>
   11224:	ldr	r1, [pc, #496]	; 1141c <putchar_unlocked@plt+0x6e0>
   11228:	ldr	r5, [r3]
   1122c:	bl	10bb0 <dcgettext@plt>
   11230:	mov	r2, r0
   11234:	mov	r1, #1
   11238:	ldr	r3, [r4]
   1123c:	mov	r0, r5
   11240:	bl	10cc4 <__fprintf_chk@plt>
   11244:	mov	r0, r7
   11248:	bl	10c70 <exit@plt>
   1124c:	mov	r2, #5
   11250:	ldr	r1, [pc, #456]	; 11420 <putchar_unlocked@plt+0x6e4>
   11254:	bl	10bb0 <dcgettext@plt>
   11258:	mov	r1, r0
   1125c:	mov	r0, #1
   11260:	ldr	r2, [r4]
   11264:	bl	10cac <__printf_chk@plt>
   11268:	ldr	r3, [pc, #436]	; 11424 <putchar_unlocked@plt+0x6e8>
   1126c:	ldr	r5, [pc, #436]	; 11428 <putchar_unlocked@plt+0x6ec>
   11270:	ldr	r2, [r3]
   11274:	mov	r4, r3
   11278:	cmp	r2, #1
   1127c:	mov	r2, #5
   11280:	ldrne	r1, [pc, #420]	; 1142c <putchar_unlocked@plt+0x6f0>
   11284:	bne	112a4 <putchar_unlocked@plt+0x568>
   11288:	mov	r0, r7
   1128c:	ldr	r1, [pc, #412]	; 11430 <putchar_unlocked@plt+0x6f4>
   11290:	bl	10bb0 <dcgettext@plt>
   11294:	ldr	r1, [r5]
   11298:	bl	10b38 <fputs_unlocked@plt>
   1129c:	ldr	r1, [pc, #400]	; 11434 <putchar_unlocked@plt+0x6f8>
   112a0:	mov	r2, #5
   112a4:	mov	r0, r7
   112a8:	mov	r6, sp
   112ac:	bl	10bb0 <dcgettext@plt>
   112b0:	ldr	r1, [r5]
   112b4:	bl	10b38 <fputs_unlocked@plt>
   112b8:	mov	r2, #5
   112bc:	ldr	r1, [pc, #372]	; 11438 <putchar_unlocked@plt+0x6fc>
   112c0:	mov	r0, #0
   112c4:	bl	10bb0 <dcgettext@plt>
   112c8:	ldr	r1, [r5]
   112cc:	bl	10b38 <fputs_unlocked@plt>
   112d0:	mov	r2, #5
   112d4:	ldr	r1, [pc, #352]	; 1143c <putchar_unlocked@plt+0x700>
   112d8:	mov	r0, #0
   112dc:	bl	10bb0 <dcgettext@plt>
   112e0:	ldr	r1, [r5]
   112e4:	bl	10b38 <fputs_unlocked@plt>
   112e8:	ldr	r2, [r4]
   112ec:	mov	ip, sp
   112f0:	ldr	r3, [pc, #328]	; 11440 <putchar_unlocked@plt+0x704>
   112f4:	ldr	lr, [pc, #328]	; 11444 <putchar_unlocked@plt+0x708>
   112f8:	cmp	r2, #1
   112fc:	ldr	r4, [pc, #324]	; 11448 <putchar_unlocked@plt+0x70c>
   11300:	movne	r4, r3
   11304:	ldm	lr!, {r0, r1, r2, r3}
   11308:	stmia	ip!, {r0, r1, r2, r3}
   1130c:	ldm	lr!, {r0, r1, r2, r3}
   11310:	stmia	ip!, {r0, r1, r2, r3}
   11314:	ldm	lr!, {r0, r1, r2, r3}
   11318:	stmia	ip!, {r0, r1, r2, r3}
   1131c:	ldm	lr, {r0, r1}
   11320:	stm	ip, {r0, r1}
   11324:	ldr	r1, [r6]
   11328:	cmp	r1, #0
   1132c:	bne	113cc <putchar_unlocked@plt+0x690>
   11330:	ldr	r6, [r6, #4]
   11334:	mov	r2, #5
   11338:	mov	r0, #0
   1133c:	ldr	r1, [pc, #264]	; 1144c <putchar_unlocked@plt+0x710>
   11340:	cmp	r6, #0
   11344:	moveq	r6, r4
   11348:	bl	10bb0 <dcgettext@plt>
   1134c:	mov	r1, r0
   11350:	ldr	r3, [pc, #248]	; 11450 <putchar_unlocked@plt+0x714>
   11354:	mov	r0, #1
   11358:	ldr	r2, [pc, #244]	; 11454 <putchar_unlocked@plt+0x718>
   1135c:	bl	10cac <__printf_chk@plt>
   11360:	mov	r1, #0
   11364:	mov	r0, #5
   11368:	bl	10ce8 <setlocale@plt>
   1136c:	cmp	r0, #0
   11370:	bne	113e4 <putchar_unlocked@plt+0x6a8>
   11374:	mov	r2, #5
   11378:	ldr	r1, [pc, #216]	; 11458 <putchar_unlocked@plt+0x71c>
   1137c:	mov	r0, #0
   11380:	bl	10bb0 <dcgettext@plt>
   11384:	mov	r1, r0
   11388:	mov	r3, r4
   1138c:	ldr	r2, [pc, #188]	; 11450 <putchar_unlocked@plt+0x714>
   11390:	mov	r0, #1
   11394:	bl	10cac <__printf_chk@plt>
   11398:	mov	r2, #5
   1139c:	ldr	r1, [pc, #184]	; 1145c <putchar_unlocked@plt+0x720>
   113a0:	mov	r0, #0
   113a4:	bl	10bb0 <dcgettext@plt>
   113a8:	ldr	r2, [pc, #176]	; 11460 <putchar_unlocked@plt+0x724>
   113ac:	cmp	r4, r6
   113b0:	mov	r1, r0
   113b4:	mov	r0, #1
   113b8:	ldr	r3, [pc, #164]	; 11464 <putchar_unlocked@plt+0x728>
   113bc:	moveq	r3, r2
   113c0:	mov	r2, r6
   113c4:	bl	10cac <__printf_chk@plt>
   113c8:	b	11244 <putchar_unlocked@plt+0x508>
   113cc:	mov	r0, r4
   113d0:	bl	10b44 <strcmp@plt>
   113d4:	cmp	r0, #0
   113d8:	beq	11330 <putchar_unlocked@plt+0x5f4>
   113dc:	add	r6, r6, #8
   113e0:	b	11324 <putchar_unlocked@plt+0x5e8>
   113e4:	mov	r2, #3
   113e8:	ldr	r1, [pc, #120]	; 11468 <putchar_unlocked@plt+0x72c>
   113ec:	bl	10d24 <strncmp@plt>
   113f0:	cmp	r0, #0
   113f4:	beq	11374 <putchar_unlocked@plt+0x638>
   113f8:	mov	r2, #5
   113fc:	ldr	r1, [pc, #104]	; 1146c <putchar_unlocked@plt+0x730>
   11400:	mov	r0, #0
   11404:	bl	10bb0 <dcgettext@plt>
   11408:	ldr	r1, [r5]
   1140c:	bl	10b38 <fputs_unlocked@plt>
   11410:	b	11374 <putchar_unlocked@plt+0x638>
   11414:	andeq	r5, r2, ip, lsr r1
   11418:	andeq	r5, r2, r8, lsr #2
   1141c:	andeq	r3, r1, pc, lsl sl
   11420:	andeq	r3, r1, r6, asr #20
   11424:	andeq	r5, r2, ip, asr #1
   11428:	andeq	r5, r2, ip, lsr #2
   1142c:	strdeq	r3, [r1], -r6
   11430:	andeq	r3, r1, sp, asr sl
   11434:	andeq	r3, r1, r7, asr #23
   11438:	andeq	r3, r1, r4, lsl sp
   1143c:	andeq	r3, r1, r1, asr #26
   11440:	andeq	r3, r1, sl, lsl sl
   11444:	andeq	r3, r1, r4, asr #17
   11448:	andeq	r3, r1, r4, lsl sl
   1144c:	andeq	r3, r1, r7, ror sp
   11450:	andeq	r3, r1, lr, lsl #27
   11454:			; <UNDEFINED> instruction: 0x00013db6
   11458:	andeq	r3, r1, pc, lsl #28
   1145c:	andeq	r3, r1, sl, lsr #28
   11460:	andeq	r3, r1, r7, ror #29
   11464:	andeq	r3, r1, r3, lsl sp
   11468:	andeq	r3, r1, r4, asr #27
   1146c:	andeq	r3, r1, r8, asr #27
   11470:	ldr	r3, [pc, #4]	; 1147c <putchar_unlocked@plt+0x740>
   11474:	str	r0, [r3]
   11478:	bx	lr
   1147c:	andeq	r5, r2, r4, lsr r1
   11480:	ldr	r3, [pc, #4]	; 1148c <putchar_unlocked@plt+0x750>
   11484:	strb	r0, [r3, #4]
   11488:	bx	lr
   1148c:	andeq	r5, r2, r4, lsr r1
   11490:	ldr	r3, [pc, #176]	; 11548 <putchar_unlocked@plt+0x80c>
   11494:	push	{r0, r1, r4, r5, r6, lr}
   11498:	ldr	r0, [r3]
   1149c:	bl	13434 <putchar_unlocked@plt+0x26f8>
   114a0:	cmp	r0, #0
   114a4:	beq	1152c <putchar_unlocked@plt+0x7f0>
   114a8:	ldr	r4, [pc, #156]	; 1154c <putchar_unlocked@plt+0x810>
   114ac:	bl	10c88 <__errno_location@plt>
   114b0:	mov	r5, r0
   114b4:	ldrb	r6, [r4, #4]
   114b8:	cmp	r6, #0
   114bc:	beq	114cc <putchar_unlocked@plt+0x790>
   114c0:	ldr	r3, [r0]
   114c4:	cmp	r3, #32
   114c8:	beq	1152c <putchar_unlocked@plt+0x7f0>
   114cc:	mov	r2, #5
   114d0:	ldr	r1, [pc, #120]	; 11550 <putchar_unlocked@plt+0x814>
   114d4:	mov	r0, #0
   114d8:	bl	10bb0 <dcgettext@plt>
   114dc:	mov	r6, r0
   114e0:	ldr	r0, [r4]
   114e4:	cmp	r0, #0
   114e8:	beq	11518 <putchar_unlocked@plt+0x7dc>
   114ec:	ldr	r4, [r5]
   114f0:	bl	12a14 <putchar_unlocked@plt+0x1cd8>
   114f4:	mov	r3, r0
   114f8:	ldr	r2, [pc, #84]	; 11554 <putchar_unlocked@plt+0x818>
   114fc:	mov	r0, #0
   11500:	str	r6, [sp]
   11504:	mov	r1, r4
   11508:	bl	10c1c <error@plt>
   1150c:	ldr	r3, [pc, #68]	; 11558 <putchar_unlocked@plt+0x81c>
   11510:	ldr	r0, [r3]
   11514:	bl	10b68 <_exit@plt>
   11518:	mov	r3, r6
   1151c:	ldr	r2, [pc, #56]	; 1155c <putchar_unlocked@plt+0x820>
   11520:	ldr	r1, [r5]
   11524:	bl	10c1c <error@plt>
   11528:	b	1150c <putchar_unlocked@plt+0x7d0>
   1152c:	ldr	r3, [pc, #44]	; 11560 <putchar_unlocked@plt+0x824>
   11530:	ldr	r0, [r3]
   11534:	bl	13434 <putchar_unlocked@plt+0x26f8>
   11538:	cmp	r0, #0
   1153c:	bne	1150c <putchar_unlocked@plt+0x7d0>
   11540:	add	sp, sp, #8
   11544:	pop	{r4, r5, r6, pc}
   11548:	andeq	r5, r2, ip, lsr #2
   1154c:	andeq	r5, r2, r4, lsr r1
   11550:			; <UNDEFINED> instruction: 0x00013fb2
   11554:			; <UNDEFINED> instruction: 0x00013fbe
   11558:	ldrdeq	r5, [r2], -r4
   1155c:	andeq	r3, r1, r2, asr #31
   11560:	andeq	r5, r2, r8, lsr #2
   11564:	push	{r4, r5, r6, lr}
   11568:	subs	r4, r0, #0
   1156c:	bne	11584 <putchar_unlocked@plt+0x848>
   11570:	ldr	r3, [pc, #124]	; 115f4 <putchar_unlocked@plt+0x8b8>
   11574:	ldr	r0, [pc, #124]	; 115f8 <putchar_unlocked@plt+0x8bc>
   11578:	ldr	r1, [r3]
   1157c:	bl	10d18 <fputs@plt>
   11580:	bl	10d30 <abort@plt>
   11584:	mov	r1, #47	; 0x2f
   11588:	bl	10cf4 <strrchr@plt>
   1158c:	subs	r6, r0, #0
   11590:	beq	115e0 <putchar_unlocked@plt+0x8a4>
   11594:	add	r5, r6, #1
   11598:	sub	r3, r5, r4
   1159c:	cmp	r3, #6
   115a0:	ble	115e0 <putchar_unlocked@plt+0x8a4>
   115a4:	mov	r2, #7
   115a8:	ldr	r1, [pc, #76]	; 115fc <putchar_unlocked@plt+0x8c0>
   115ac:	sub	r0, r6, #6
   115b0:	bl	10d24 <strncmp@plt>
   115b4:	cmp	r0, #0
   115b8:	bne	115e0 <putchar_unlocked@plt+0x8a4>
   115bc:	mov	r2, #3
   115c0:	ldr	r1, [pc, #56]	; 11600 <putchar_unlocked@plt+0x8c4>
   115c4:	mov	r0, r5
   115c8:	bl	10d24 <strncmp@plt>
   115cc:	cmp	r0, #0
   115d0:	ldreq	r3, [pc, #44]	; 11604 <putchar_unlocked@plt+0x8c8>
   115d4:	addeq	r4, r6, #4
   115d8:	movne	r4, r5
   115dc:	streq	r4, [r3]
   115e0:	ldr	r3, [pc, #32]	; 11608 <putchar_unlocked@plt+0x8cc>
   115e4:	str	r4, [r3]
   115e8:	ldr	r3, [pc, #28]	; 1160c <putchar_unlocked@plt+0x8d0>
   115ec:	str	r4, [r3]
   115f0:	pop	{r4, r5, r6, pc}
   115f4:	andeq	r5, r2, r8, lsr #2
   115f8:	andeq	r3, r1, r5, asr #31
   115fc:	strdeq	r3, [r1], -sp
   11600:	andeq	r4, r1, r5
   11604:	andeq	r5, r2, r8, lsl r1
   11608:	andeq	r5, r2, ip, lsr r1
   1160c:	andeq	r5, r2, ip, lsl r1
   11610:	push	{r4, lr}
   11614:	mov	r2, #48	; 0x30
   11618:	mov	r4, r1
   1161c:	mov	r1, #0
   11620:	bl	10ca0 <memset@plt>
   11624:	cmp	r4, #10
   11628:	bne	11630 <putchar_unlocked@plt+0x8f4>
   1162c:	bl	10d30 <abort@plt>
   11630:	str	r4, [r0]
   11634:	pop	{r4, pc}
   11638:	push	{r4, r5, r6, lr}
   1163c:	mov	r2, #5
   11640:	mov	r6, r0
   11644:	mov	r5, r1
   11648:	mov	r1, r0
   1164c:	mov	r0, #0
   11650:	bl	10bb0 <dcgettext@plt>
   11654:	cmp	r6, r0
   11658:	mov	r4, r0
   1165c:	bne	116cc <putchar_unlocked@plt+0x990>
   11660:	bl	136ac <putchar_unlocked@plt+0x2970>
   11664:	ldrb	r3, [r0]
   11668:	bic	r3, r3, #32
   1166c:	cmp	r3, #85	; 0x55
   11670:	bne	116d4 <putchar_unlocked@plt+0x998>
   11674:	ldrb	r3, [r0, #1]
   11678:	bic	r3, r3, #32
   1167c:	cmp	r3, #84	; 0x54
   11680:	bne	11744 <putchar_unlocked@plt+0xa08>
   11684:	ldrb	r3, [r0, #2]
   11688:	bic	r3, r3, #32
   1168c:	cmp	r3, #70	; 0x46
   11690:	bne	11744 <putchar_unlocked@plt+0xa08>
   11694:	ldrb	r3, [r0, #3]
   11698:	cmp	r3, #45	; 0x2d
   1169c:	bne	11744 <putchar_unlocked@plt+0xa08>
   116a0:	ldrb	r3, [r0, #4]
   116a4:	cmp	r3, #56	; 0x38
   116a8:	bne	11744 <putchar_unlocked@plt+0xa08>
   116ac:	ldrb	r3, [r0, #5]
   116b0:	cmp	r3, #0
   116b4:	bne	11744 <putchar_unlocked@plt+0xa08>
   116b8:	ldrb	r2, [r4]
   116bc:	ldr	r3, [pc, #144]	; 11754 <putchar_unlocked@plt+0xa18>
   116c0:	ldr	r4, [pc, #144]	; 11758 <putchar_unlocked@plt+0xa1c>
   116c4:	cmp	r2, #96	; 0x60
   116c8:	movne	r4, r3
   116cc:	mov	r0, r4
   116d0:	pop	{r4, r5, r6, pc}
   116d4:	cmp	r3, #71	; 0x47
   116d8:	bne	11744 <putchar_unlocked@plt+0xa08>
   116dc:	ldrb	r3, [r0, #1]
   116e0:	bic	r3, r3, #32
   116e4:	cmp	r3, #66	; 0x42
   116e8:	bne	11744 <putchar_unlocked@plt+0xa08>
   116ec:	ldrb	r3, [r0, #2]
   116f0:	cmp	r3, #49	; 0x31
   116f4:	bne	11744 <putchar_unlocked@plt+0xa08>
   116f8:	ldrb	r3, [r0, #3]
   116fc:	cmp	r3, #56	; 0x38
   11700:	bne	11744 <putchar_unlocked@plt+0xa08>
   11704:	ldrb	r3, [r0, #4]
   11708:	cmp	r3, #48	; 0x30
   1170c:	bne	11744 <putchar_unlocked@plt+0xa08>
   11710:	ldrb	r3, [r0, #5]
   11714:	cmp	r3, #51	; 0x33
   11718:	bne	11744 <putchar_unlocked@plt+0xa08>
   1171c:	ldrb	r3, [r0, #6]
   11720:	cmp	r3, #48	; 0x30
   11724:	bne	11744 <putchar_unlocked@plt+0xa08>
   11728:	ldrb	r3, [r0, #7]
   1172c:	cmp	r3, #0
   11730:	bne	11744 <putchar_unlocked@plt+0xa08>
   11734:	ldrb	r2, [r4]
   11738:	ldr	r3, [pc, #28]	; 1175c <putchar_unlocked@plt+0xa20>
   1173c:	ldr	r4, [pc, #28]	; 11760 <putchar_unlocked@plt+0xa24>
   11740:	b	116c4 <putchar_unlocked@plt+0x988>
   11744:	ldr	r4, [pc, #24]	; 11764 <putchar_unlocked@plt+0xa28>
   11748:	cmp	r5, #9
   1174c:	ldr	r3, [pc, #20]	; 11768 <putchar_unlocked@plt+0xa2c>
   11750:	b	116c8 <putchar_unlocked@plt+0x98c>
   11754:	andeq	r4, r1, r2, rrx
   11758:	andeq	r4, r1, sp, rrx
   1175c:	andeq	r4, r1, r6, rrx
   11760:	andeq	r4, r1, r9, rrx
   11764:	andeq	r4, r1, r0, rrx
   11768:	andeq	r4, r1, r1, ror r0
   1176c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11770:	sub	sp, sp, #108	; 0x6c
   11774:	mov	r8, r0
   11778:	mov	r5, r1
   1177c:	mov	r6, #0
   11780:	str	r3, [sp, #40]	; 0x28
   11784:	str	r2, [sp, #48]	; 0x30
   11788:	ldr	sl, [sp, #144]	; 0x90
   1178c:	bl	10bec <__ctype_get_mb_cur_max@plt>
   11790:	ldr	r3, [sp, #148]	; 0x94
   11794:	str	r6, [sp, #24]
   11798:	str	r6, [sp, #32]
   1179c:	str	r6, [sp, #44]	; 0x2c
   117a0:	str	r6, [sp, #52]	; 0x34
   117a4:	ubfx	r7, r3, #1, #1
   117a8:	mov	r3, #1
   117ac:	str	r6, [sp, #60]	; 0x3c
   117b0:	str	r3, [sp, #72]	; 0x48
   117b4:	str	r0, [sp, #76]	; 0x4c
   117b8:	cmp	sl, #10
   117bc:	ldrls	pc, [pc, sl, lsl #2]
   117c0:	b	11a04 <putchar_unlocked@plt+0xcc8>
   117c4:	strdeq	r1, [r1], -r0
   117c8:	andeq	r1, r1, ip, lsl sl
   117cc:	andeq	r1, r1, r0, lsr #19
   117d0:			; <UNDEFINED> instruction: 0x000119b8
   117d4:	andeq	r1, r1, r8, lsl #19
   117d8:	andeq	r1, r1, r0, ror #17
   117dc:	andeq	r1, r1, r0, asr #17
   117e0:	andeq	r1, r1, r8, lsl #20
   117e4:	andeq	r1, r1, r0, lsl r9
   117e8:	andeq	r1, r1, r0, lsl r9
   117ec:	andeq	r1, r1, r0, lsl r9
   117f0:	mov	r4, sl
   117f4:	mov	r7, #0
   117f8:	mov	r9, r5
   117fc:	mov	r3, #0
   11800:	str	r6, [sp, #68]	; 0x44
   11804:	str	r3, [sp, #28]
   11808:	ldr	r3, [sp, #40]	; 0x28
   1180c:	cmn	r3, #1
   11810:	bne	123b0 <putchar_unlocked@plt+0x1674>
   11814:	ldr	r2, [sp, #28]
   11818:	ldr	r3, [sp, #48]	; 0x30
   1181c:	ldrb	r3, [r3, r2]
   11820:	adds	r3, r3, #0
   11824:	movne	r3, #1
   11828:	str	r3, [sp, #36]	; 0x24
   1182c:	ldr	r3, [sp, #36]	; 0x24
   11830:	cmp	r3, #0
   11834:	bne	11a40 <putchar_unlocked@plt+0xd04>
   11838:	sub	r3, sl, #2
   1183c:	cmp	r4, #0
   11840:	clz	r3, r3
   11844:	movne	r2, #0
   11848:	lsr	r3, r3, #5
   1184c:	andeq	r2, r3, r7
   11850:	cmp	r2, #0
   11854:	bne	11c04 <putchar_unlocked@plt+0xec8>
   11858:	eor	r7, r7, #1
   1185c:	ands	r3, r3, r7
   11860:	beq	12428 <putchar_unlocked@plt+0x16ec>
   11864:	ldr	r2, [sp, #68]	; 0x44
   11868:	cmp	r2, #0
   1186c:	beq	123f0 <putchar_unlocked@plt+0x16b4>
   11870:	ldr	r3, [sp, #72]	; 0x48
   11874:	cmp	r3, #0
   11878:	beq	123c4 <putchar_unlocked@plt+0x1688>
   1187c:	ldr	r2, [sp, #48]	; 0x30
   11880:	ldr	r3, [sp, #160]	; 0xa0
   11884:	ldr	r1, [sp, #60]	; 0x3c
   11888:	str	r3, [sp, #16]
   1188c:	ldr	r3, [sp, #156]	; 0x9c
   11890:	str	r3, [sp, #12]
   11894:	ldr	r3, [sp, #152]	; 0x98
   11898:	str	r3, [sp, #8]
   1189c:	ldr	r3, [sp, #148]	; 0x94
   118a0:	str	r3, [sp, #4]
   118a4:	mov	r3, #5
   118a8:	str	r3, [sp]
   118ac:	ldr	r3, [sp, #40]	; 0x28
   118b0:	mov	r0, r8
   118b4:	bl	1176c <putchar_unlocked@plt+0xa30>
   118b8:	mov	r4, r0
   118bc:	b	1241c <putchar_unlocked@plt+0x16e0>
   118c0:	ldr	r3, [pc, #2948]	; 1244c <putchar_unlocked@plt+0x1710>
   118c4:	mov	r7, #1
   118c8:	mov	r4, #0
   118cc:	mov	sl, #5
   118d0:	str	r7, [sp, #24]
   118d4:	str	r7, [sp, #32]
   118d8:	str	r3, [sp, #44]	; 0x2c
   118dc:	b	117f8 <putchar_unlocked@plt+0xabc>
   118e0:	cmp	r7, #0
   118e4:	bne	11a28 <putchar_unlocked@plt+0xcec>
   118e8:	cmp	r5, #0
   118ec:	mov	r4, #1
   118f0:	movne	r3, #34	; 0x22
   118f4:	strbne	r3, [r8]
   118f8:	mov	r3, #1
   118fc:	str	r3, [sp, #24]
   11900:	str	r3, [sp, #32]
   11904:	ldr	r3, [pc, #2880]	; 1244c <putchar_unlocked@plt+0x1710>
   11908:	str	r3, [sp, #44]	; 0x2c
   1190c:	b	117f8 <putchar_unlocked@plt+0xabc>
   11910:	cmp	sl, #10
   11914:	beq	11938 <putchar_unlocked@plt+0xbfc>
   11918:	mov	r1, sl
   1191c:	ldr	r0, [pc, #2860]	; 12450 <putchar_unlocked@plt+0x1714>
   11920:	bl	11638 <putchar_unlocked@plt+0x8fc>
   11924:	mov	r1, sl
   11928:	str	r0, [sp, #156]	; 0x9c
   1192c:	ldr	r0, [pc, #2848]	; 12454 <putchar_unlocked@plt+0x1718>
   11930:	bl	11638 <putchar_unlocked@plt+0x8fc>
   11934:	str	r0, [sp, #160]	; 0xa0
   11938:	cmp	r7, #0
   1193c:	moveq	r4, r7
   11940:	beq	11958 <putchar_unlocked@plt+0xc1c>
   11944:	mov	r4, #0
   11948:	b	11968 <putchar_unlocked@plt+0xc2c>
   1194c:	cmp	r5, r4
   11950:	strbhi	r3, [r8, r4]
   11954:	add	r4, r4, #1
   11958:	ldr	r3, [sp, #156]	; 0x9c
   1195c:	ldrb	r3, [r3, r4]
   11960:	cmp	r3, #0
   11964:	bne	1194c <putchar_unlocked@plt+0xc10>
   11968:	ldr	r0, [sp, #160]	; 0xa0
   1196c:	bl	10c7c <strlen@plt>
   11970:	ldr	r3, [sp, #160]	; 0xa0
   11974:	str	r0, [sp, #32]
   11978:	str	r3, [sp, #44]	; 0x2c
   1197c:	mov	r3, #1
   11980:	str	r3, [sp, #24]
   11984:	b	117f8 <putchar_unlocked@plt+0xabc>
   11988:	mov	r3, #1
   1198c:	cmp	r7, #0
   11990:	streq	r3, [sp, #24]
   11994:	beq	119d8 <putchar_unlocked@plt+0xc9c>
   11998:	str	r3, [sp, #32]
   1199c:	b	119c4 <putchar_unlocked@plt+0xc88>
   119a0:	cmp	r7, #0
   119a4:	beq	119d8 <putchar_unlocked@plt+0xc9c>
   119a8:	mov	r3, #1
   119ac:	str	r3, [sp, #32]
   119b0:	ldr	r3, [pc, #2716]	; 12454 <putchar_unlocked@plt+0x1718>
   119b4:	b	11a38 <putchar_unlocked@plt+0xcfc>
   119b8:	mov	r7, #1
   119bc:	str	r7, [sp, #24]
   119c0:	str	r7, [sp, #32]
   119c4:	ldr	r3, [pc, #2696]	; 12454 <putchar_unlocked@plt+0x1718>
   119c8:	mov	r4, #0
   119cc:	str	r3, [sp, #44]	; 0x2c
   119d0:	mov	sl, #2
   119d4:	b	117f8 <putchar_unlocked@plt+0xabc>
   119d8:	cmp	r5, #0
   119dc:	movne	r3, #39	; 0x27
   119e0:	movne	r7, #0
   119e4:	strbne	r3, [r8]
   119e8:	moveq	r7, r5
   119ec:	mov	r3, #1
   119f0:	mov	r4, #1
   119f4:	str	r3, [sp, #32]
   119f8:	ldr	r3, [pc, #2644]	; 12454 <putchar_unlocked@plt+0x1718>
   119fc:	str	r3, [sp, #44]	; 0x2c
   11a00:	b	119d0 <putchar_unlocked@plt+0xc94>
   11a04:	bl	10d30 <abort@plt>
   11a08:	mov	r3, #1
   11a0c:	mov	r7, #0
   11a10:	str	r3, [sp, #24]
   11a14:	mov	r4, #0
   11a18:	b	117f8 <putchar_unlocked@plt+0xabc>
   11a1c:	mov	r7, #1
   11a20:	str	sl, [sp, #32]
   11a24:	b	119c4 <putchar_unlocked@plt+0xc88>
   11a28:	mov	r3, #1
   11a2c:	str	r7, [sp, #24]
   11a30:	str	r3, [sp, #32]
   11a34:	ldr	r3, [pc, #2576]	; 1244c <putchar_unlocked@plt+0x1710>
   11a38:	str	r3, [sp, #44]	; 0x2c
   11a3c:	b	11a14 <putchar_unlocked@plt+0xcd8>
   11a40:	ldr	fp, [sp, #24]
   11a44:	ldr	r3, [sp, #32]
   11a48:	cmp	sl, #2
   11a4c:	moveq	fp, #0
   11a50:	andne	fp, fp, #1
   11a54:	adds	r5, r3, #0
   11a58:	movne	r5, #1
   11a5c:	ands	r3, fp, r5
   11a60:	str	r3, [sp, #64]	; 0x40
   11a64:	beq	11b34 <putchar_unlocked@plt+0xdf8>
   11a68:	ldr	r3, [sp, #28]
   11a6c:	ldr	r2, [sp, #32]
   11a70:	cmp	r2, #1
   11a74:	add	r6, r3, r2
   11a78:	mov	r3, r2
   11a7c:	ldr	r2, [sp, #40]	; 0x28
   11a80:	movls	r3, #0
   11a84:	movhi	r3, #1
   11a88:	cmn	r2, #1
   11a8c:	movne	r3, #0
   11a90:	cmp	r3, #0
   11a94:	beq	11aa4 <putchar_unlocked@plt+0xd68>
   11a98:	ldr	r0, [sp, #48]	; 0x30
   11a9c:	bl	10c7c <strlen@plt>
   11aa0:	str	r0, [sp, #40]	; 0x28
   11aa4:	ldr	r3, [sp, #40]	; 0x28
   11aa8:	cmp	r6, r3
   11aac:	bhi	11b2c <putchar_unlocked@plt+0xdf0>
   11ab0:	ldr	r0, [sp, #28]
   11ab4:	ldr	r2, [sp, #32]
   11ab8:	ldr	r3, [sp, #48]	; 0x30
   11abc:	ldr	r1, [sp, #44]	; 0x2c
   11ac0:	add	r0, r3, r0
   11ac4:	bl	10b8c <memcmp@plt>
   11ac8:	cmp	r0, #0
   11acc:	bne	11b2c <putchar_unlocked@plt+0xdf0>
   11ad0:	cmp	r7, #0
   11ad4:	beq	11b34 <putchar_unlocked@plt+0xdf8>
   11ad8:	str	r7, [sp, #24]
   11adc:	ldr	r3, [sp, #24]
   11ae0:	mov	r1, r9
   11ae4:	ldr	r2, [sp, #48]	; 0x30
   11ae8:	cmp	sl, #2
   11aec:	movne	r3, #0
   11af0:	andeq	r3, r3, #1
   11af4:	cmp	r3, #0
   11af8:	ldr	r3, [sp, #160]	; 0xa0
   11afc:	movne	sl, #4
   11b00:	str	sl, [sp]
   11b04:	str	r3, [sp, #16]
   11b08:	ldr	r3, [sp, #156]	; 0x9c
   11b0c:	str	r3, [sp, #12]
   11b10:	mov	r3, #0
   11b14:	str	r3, [sp, #8]
   11b18:	ldr	r3, [sp, #148]	; 0x94
   11b1c:	bic	r3, r3, #2
   11b20:	str	r3, [sp, #4]
   11b24:	ldr	r3, [sp, #40]	; 0x28
   11b28:	b	118b0 <putchar_unlocked@plt+0xb74>
   11b2c:	mov	r3, #0
   11b30:	str	r3, [sp, #64]	; 0x40
   11b34:	ldr	r2, [sp, #28]
   11b38:	ldr	r3, [sp, #48]	; 0x30
   11b3c:	add	r3, r3, r2
   11b40:	str	r3, [sp, #80]	; 0x50
   11b44:	ldr	r3, [sp, #48]	; 0x30
   11b48:	ldrb	r6, [r3, r2]
   11b4c:	cmp	r6, #58	; 0x3a
   11b50:	bhi	11cb4 <putchar_unlocked@plt+0xf78>
   11b54:	cmp	r6, #43	; 0x2b
   11b58:	bcs	11e74 <putchar_unlocked@plt+0x1138>
   11b5c:	cmp	r6, #32
   11b60:	beq	11ec8 <putchar_unlocked@plt+0x118c>
   11b64:	bhi	11c0c <putchar_unlocked@plt+0xed0>
   11b68:	cmp	r6, #9
   11b6c:	beq	12070 <putchar_unlocked@plt+0x1334>
   11b70:	bhi	11bd0 <putchar_unlocked@plt+0xe94>
   11b74:	cmp	r6, #7
   11b78:	beq	12080 <putchar_unlocked@plt+0x1344>
   11b7c:	bhi	1209c <putchar_unlocked@plt+0x1360>
   11b80:	cmp	r6, #0
   11b84:	beq	11ee4 <putchar_unlocked@plt+0x11a8>
   11b88:	ldr	r3, [sp, #76]	; 0x4c
   11b8c:	cmp	r3, #1
   11b90:	bne	120e8 <putchar_unlocked@plt+0x13ac>
   11b94:	bl	10c64 <__ctype_b_loc@plt>
   11b98:	ldr	r2, [r0]
   11b9c:	sxth	r3, r6
   11ba0:	lsl	r3, r3, #1
   11ba4:	ldrh	r5, [r2, r3]
   11ba8:	ldr	r3, [sp, #76]	; 0x4c
   11bac:	ubfx	r5, r5, #14, #1
   11bb0:	str	r3, [sp, #56]	; 0x38
   11bb4:	ldr	r3, [sp, #24]
   11bb8:	eor	fp, r5, #1
   11bbc:	and	fp, fp, r3
   11bc0:	ands	fp, fp, #255	; 0xff
   11bc4:	beq	11da4 <putchar_unlocked@plt+0x1068>
   11bc8:	mov	r5, #0
   11bcc:	b	12194 <putchar_unlocked@plt+0x1458>
   11bd0:	cmp	r6, #11
   11bd4:	beq	120a4 <putchar_unlocked@plt+0x1368>
   11bd8:	bcc	12078 <putchar_unlocked@plt+0x133c>
   11bdc:	cmp	r6, #12
   11be0:	beq	120ac <putchar_unlocked@plt+0x1370>
   11be4:	cmp	r6, #13
   11be8:	moveq	r3, #114	; 0x72
   11bec:	bne	11b88 <putchar_unlocked@plt+0xe4c>
   11bf0:	cmp	sl, #2
   11bf4:	movne	r2, #0
   11bf8:	andeq	r2, r7, #1
   11bfc:	cmp	r2, #0
   11c00:	beq	12084 <putchar_unlocked@plt+0x1348>
   11c04:	mov	sl, #2
   11c08:	b	11adc <putchar_unlocked@plt+0xda0>
   11c0c:	cmp	r6, #37	; 0x25
   11c10:	beq	11e74 <putchar_unlocked@plt+0x1138>
   11c14:	bhi	11c28 <putchar_unlocked@plt+0xeec>
   11c18:	cmp	r6, #35	; 0x23
   11c1c:	beq	11ebc <putchar_unlocked@plt+0x1180>
   11c20:	mov	r5, #0
   11c24:	b	11ecc <putchar_unlocked@plt+0x1190>
   11c28:	cmp	r6, #39	; 0x27
   11c2c:	bne	11c20 <putchar_unlocked@plt+0xee4>
   11c30:	cmp	sl, #2
   11c34:	ldrne	r5, [sp, #36]	; 0x24
   11c38:	movne	r3, r5
   11c3c:	strne	r3, [sp, #68]	; 0x44
   11c40:	bne	11fc0 <putchar_unlocked@plt+0x1284>
   11c44:	cmp	r7, #0
   11c48:	bne	11adc <putchar_unlocked@plt+0xda0>
   11c4c:	ldr	r3, [sp, #60]	; 0x3c
   11c50:	cmp	r9, #0
   11c54:	clz	r3, r3
   11c58:	lsr	r3, r3, #5
   11c5c:	moveq	r3, #0
   11c60:	cmp	r3, #0
   11c64:	strne	r9, [sp, #60]	; 0x3c
   11c68:	movne	r9, #0
   11c6c:	bne	11c7c <putchar_unlocked@plt+0xf40>
   11c70:	cmp	r9, r4
   11c74:	movhi	r3, #39	; 0x27
   11c78:	strbhi	r3, [r8, r4]
   11c7c:	add	r3, r4, #1
   11c80:	ldr	r5, [sp, #36]	; 0x24
   11c84:	mov	fp, #0
   11c88:	cmp	r3, r9
   11c8c:	movcc	r2, #92	; 0x5c
   11c90:	str	fp, [sp, #52]	; 0x34
   11c94:	strbcc	r2, [r8, r3]
   11c98:	add	r3, r4, #2
   11c9c:	add	r4, r4, #3
   11ca0:	cmp	r3, r9
   11ca4:	str	r5, [sp, #68]	; 0x44
   11ca8:	movcc	r2, #39	; 0x27
   11cac:	strbcc	r2, [r8, r3]
   11cb0:	b	11da4 <putchar_unlocked@plt+0x1068>
   11cb4:	cmp	r6, #94	; 0x5e
   11cb8:	beq	11c20 <putchar_unlocked@plt+0xee4>
   11cbc:	bhi	11e7c <putchar_unlocked@plt+0x1140>
   11cc0:	cmp	r6, #90	; 0x5a
   11cc4:	bhi	11e68 <putchar_unlocked@plt+0x112c>
   11cc8:	cmp	r6, #65	; 0x41
   11ccc:	bcs	11e74 <putchar_unlocked@plt+0x1138>
   11cd0:	cmp	r6, #62	; 0x3e
   11cd4:	bls	11c20 <putchar_unlocked@plt+0xee4>
   11cd8:	cmp	r6, #63	; 0x3f
   11cdc:	bne	11b88 <putchar_unlocked@plt+0xe4c>
   11ce0:	cmp	sl, #2
   11ce4:	beq	11fc8 <putchar_unlocked@plt+0x128c>
   11ce8:	cmp	sl, #5
   11cec:	movne	fp, #0
   11cf0:	bne	12398 <putchar_unlocked@plt+0x165c>
   11cf4:	ldr	r3, [sp, #148]	; 0x94
   11cf8:	tst	r3, #4
   11cfc:	beq	11fd0 <putchar_unlocked@plt+0x1294>
   11d00:	ldr	r3, [sp, #28]
   11d04:	add	r2, r3, #2
   11d08:	ldr	r3, [sp, #40]	; 0x28
   11d0c:	cmp	r2, r3
   11d10:	bcs	11fd0 <putchar_unlocked@plt+0x1294>
   11d14:	ldr	r1, [sp, #28]
   11d18:	ldr	r3, [sp, #48]	; 0x30
   11d1c:	add	r3, r3, r1
   11d20:	ldrb	r1, [r3, #1]
   11d24:	cmp	r1, #63	; 0x3f
   11d28:	bne	11fd0 <putchar_unlocked@plt+0x1294>
   11d2c:	ldr	r3, [sp, #48]	; 0x30
   11d30:	ldrb	r6, [r3, r2]
   11d34:	sub	r3, r6, #33	; 0x21
   11d38:	uxtb	r3, r3
   11d3c:	cmp	r3, #29
   11d40:	bhi	123a0 <putchar_unlocked@plt+0x1664>
   11d44:	ldr	r0, [pc, #1804]	; 12458 <putchar_unlocked@plt+0x171c>
   11d48:	mov	r5, #1
   11d4c:	ands	r5, r0, r5, lsl r3
   11d50:	beq	123a8 <putchar_unlocked@plt+0x166c>
   11d54:	cmp	r7, #0
   11d58:	bne	11adc <putchar_unlocked@plt+0xda0>
   11d5c:	cmp	r9, r4
   11d60:	add	r3, r4, #1
   11d64:	str	r2, [sp, #28]
   11d68:	mov	r5, #0
   11d6c:	strbhi	r1, [r8, r4]
   11d70:	cmp	r9, r3
   11d74:	mov	fp, r5
   11d78:	movhi	r1, #34	; 0x22
   11d7c:	strbhi	r1, [r8, r3]
   11d80:	add	r3, r4, #2
   11d84:	cmp	r9, r3
   11d88:	movhi	r1, #34	; 0x22
   11d8c:	strbhi	r1, [r8, r3]
   11d90:	add	r3, r4, #3
   11d94:	add	r4, r4, #4
   11d98:	cmp	r9, r3
   11d9c:	movhi	r1, #63	; 0x3f
   11da0:	strbhi	r1, [r8, r3]
   11da4:	ldr	r3, [sp, #24]
   11da8:	eor	r3, r3, #1
   11dac:	cmp	sl, #2
   11db0:	orreq	r3, r3, #1
   11db4:	eor	r3, r3, #1
   11db8:	orr	r3, r7, r3
   11dbc:	tst	r3, #255	; 0xff
   11dc0:	beq	11dec <putchar_unlocked@plt+0x10b0>
   11dc4:	ldr	r3, [sp, #152]	; 0x98
   11dc8:	cmp	r3, #0
   11dcc:	beq	11dec <putchar_unlocked@plt+0x10b0>
   11dd0:	ldr	r1, [sp, #152]	; 0x98
   11dd4:	ubfx	r2, r6, #5, #8
   11dd8:	and	r3, r6, #31
   11ddc:	ldr	r2, [r1, r2, lsl #2]
   11de0:	lsr	r3, r2, r3
   11de4:	tst	r3, #1
   11de8:	bne	11df8 <putchar_unlocked@plt+0x10bc>
   11dec:	ldr	r3, [sp, #64]	; 0x40
   11df0:	cmp	r3, #0
   11df4:	beq	11ff0 <putchar_unlocked@plt+0x12b4>
   11df8:	sub	r3, sl, #2
   11dfc:	cmp	r7, #0
   11e00:	clz	r3, r3
   11e04:	lsr	r3, r3, #5
   11e08:	bne	11adc <putchar_unlocked@plt+0xda0>
   11e0c:	ldr	r2, [sp, #52]	; 0x34
   11e10:	eor	r2, r2, #1
   11e14:	ands	r3, r3, r2
   11e18:	beq	11e50 <putchar_unlocked@plt+0x1114>
   11e1c:	cmp	r9, r4
   11e20:	str	r3, [sp, #52]	; 0x34
   11e24:	movhi	r2, #39	; 0x27
   11e28:	strbhi	r2, [r8, r4]
   11e2c:	add	r2, r4, #1
   11e30:	cmp	r9, r2
   11e34:	movhi	r1, #36	; 0x24
   11e38:	strbhi	r1, [r8, r2]
   11e3c:	add	r2, r4, #2
   11e40:	add	r4, r4, #3
   11e44:	cmp	r9, r2
   11e48:	movhi	r1, #39	; 0x27
   11e4c:	strbhi	r1, [r8, r2]
   11e50:	cmp	r9, r4
   11e54:	ldr	fp, [sp, #36]	; 0x24
   11e58:	movhi	r3, #92	; 0x5c
   11e5c:	strbhi	r3, [r8, r4]
   11e60:	add	r4, r4, #1
   11e64:	b	11ff0 <putchar_unlocked@plt+0x12b4>
   11e68:	cmp	r6, #92	; 0x5c
   11e6c:	beq	11fd8 <putchar_unlocked@plt+0x129c>
   11e70:	bls	11c20 <putchar_unlocked@plt+0xee4>
   11e74:	ldr	r5, [sp, #36]	; 0x24
   11e78:	b	11fc0 <putchar_unlocked@plt+0x1284>
   11e7c:	cmp	r6, #122	; 0x7a
   11e80:	bhi	11ea0 <putchar_unlocked@plt+0x1164>
   11e84:	cmp	r6, #97	; 0x61
   11e88:	bcs	11e74 <putchar_unlocked@plt+0x1138>
   11e8c:	cmp	r6, #95	; 0x5f
   11e90:	beq	11e74 <putchar_unlocked@plt+0x1138>
   11e94:	cmp	r6, #96	; 0x60
   11e98:	bne	11b88 <putchar_unlocked@plt+0xe4c>
   11e9c:	b	11c20 <putchar_unlocked@plt+0xee4>
   11ea0:	cmp	r6, #124	; 0x7c
   11ea4:	beq	11c20 <putchar_unlocked@plt+0xee4>
   11ea8:	bcc	120b4 <putchar_unlocked@plt+0x1378>
   11eac:	cmp	r6, #125	; 0x7d
   11eb0:	beq	120b4 <putchar_unlocked@plt+0x1378>
   11eb4:	cmp	r6, #126	; 0x7e
   11eb8:	bne	11b88 <putchar_unlocked@plt+0xe4c>
   11ebc:	ldr	r3, [sp, #28]
   11ec0:	cmp	r3, #0
   11ec4:	bne	11fd0 <putchar_unlocked@plt+0x1294>
   11ec8:	ldr	r5, [sp, #36]	; 0x24
   11ecc:	cmp	sl, #2
   11ed0:	movne	fp, #0
   11ed4:	andeq	fp, r7, #1
   11ed8:	cmp	fp, #0
   11edc:	beq	11da4 <putchar_unlocked@plt+0x1068>
   11ee0:	b	11c04 <putchar_unlocked@plt+0xec8>
   11ee4:	ldr	r3, [sp, #24]
   11ee8:	cmp	r3, #0
   11eec:	beq	11fb4 <putchar_unlocked@plt+0x1278>
   11ef0:	sub	r2, sl, #2
   11ef4:	cmp	r7, #0
   11ef8:	clz	r2, r2
   11efc:	lsr	r2, r2, #5
   11f00:	bne	11ad8 <putchar_unlocked@plt+0xd9c>
   11f04:	ldr	r3, [sp, #52]	; 0x34
   11f08:	eor	r3, r3, #1
   11f0c:	ands	r2, r2, r3
   11f10:	moveq	r3, r4
   11f14:	beq	11f4c <putchar_unlocked@plt+0x1210>
   11f18:	cmp	r9, r4
   11f1c:	str	r2, [sp, #52]	; 0x34
   11f20:	movhi	r3, #39	; 0x27
   11f24:	strbhi	r3, [r8, r4]
   11f28:	add	r3, r4, #1
   11f2c:	cmp	r9, r3
   11f30:	movhi	r1, #36	; 0x24
   11f34:	strbhi	r1, [r8, r3]
   11f38:	add	r3, r4, #2
   11f3c:	cmp	r9, r3
   11f40:	movhi	r1, #39	; 0x27
   11f44:	strbhi	r1, [r8, r3]
   11f48:	add	r3, r4, #3
   11f4c:	cmp	r9, r3
   11f50:	add	r4, r3, #1
   11f54:	movhi	r2, #92	; 0x5c
   11f58:	strbhi	r2, [r8, r3]
   11f5c:	cmp	fp, #0
   11f60:	beq	12388 <putchar_unlocked@plt+0x164c>
   11f64:	ldr	r2, [sp, #28]
   11f68:	ldr	r1, [sp, #40]	; 0x28
   11f6c:	add	r2, r2, #1
   11f70:	cmp	r2, r1
   11f74:	bcs	11fac <putchar_unlocked@plt+0x1270>
   11f78:	ldr	r1, [sp, #48]	; 0x30
   11f7c:	mov	r6, #48	; 0x30
   11f80:	ldrb	r2, [r1, r2]
   11f84:	sub	r2, r2, #48	; 0x30
   11f88:	cmp	r2, #9
   11f8c:	bhi	12398 <putchar_unlocked@plt+0x165c>
   11f90:	cmp	r9, r4
   11f94:	add	r2, r3, #2
   11f98:	strbhi	r6, [r8, r4]
   11f9c:	cmp	r9, r2
   11fa0:	add	r4, r3, #3
   11fa4:	movhi	r1, #48	; 0x30
   11fa8:	strbhi	r1, [r8, r2]
   11fac:	mov	r5, #0
   11fb0:	b	12390 <putchar_unlocked@plt+0x1654>
   11fb4:	ldr	r3, [sp, #148]	; 0x94
   11fb8:	ands	r5, r3, #1
   11fbc:	bne	12044 <putchar_unlocked@plt+0x1308>
   11fc0:	mov	fp, #0
   11fc4:	b	11da4 <putchar_unlocked@plt+0x1068>
   11fc8:	cmp	r7, #0
   11fcc:	bne	11adc <putchar_unlocked@plt+0xda0>
   11fd0:	mov	r5, #0
   11fd4:	b	11fc0 <putchar_unlocked@plt+0x1284>
   11fd8:	cmp	sl, #2
   11fdc:	bne	12050 <putchar_unlocked@plt+0x1314>
   11fe0:	cmp	r7, #0
   11fe4:	bne	11adc <putchar_unlocked@plt+0xda0>
   11fe8:	mov	r5, r7
   11fec:	mov	fp, r7
   11ff0:	ldr	r3, [sp, #52]	; 0x34
   11ff4:	eor	fp, fp, #1
   11ff8:	tst	r3, fp
   11ffc:	beq	12028 <putchar_unlocked@plt+0x12ec>
   12000:	cmp	r9, r4
   12004:	movhi	r3, #39	; 0x27
   12008:	strbhi	r3, [r8, r4]
   1200c:	add	r3, r4, #1
   12010:	add	r4, r4, #2
   12014:	cmp	r9, r3
   12018:	movhi	r2, #39	; 0x27
   1201c:	strbhi	r2, [r8, r3]
   12020:	mov	r3, #0
   12024:	str	r3, [sp, #52]	; 0x34
   12028:	cmp	r9, r4
   1202c:	ldr	r3, [sp, #72]	; 0x48
   12030:	strbhi	r6, [r8, r4]
   12034:	cmp	r5, #0
   12038:	add	r4, r4, #1
   1203c:	moveq	r3, #0
   12040:	str	r3, [sp, #72]	; 0x48
   12044:	ldr	r3, [sp, #28]
   12048:	add	r3, r3, #1
   1204c:	b	11804 <putchar_unlocked@plt+0xac8>
   12050:	ldr	r3, [sp, #24]
   12054:	and	r3, r3, r7
   12058:	tst	r5, r3
   1205c:	moveq	r3, r6
   12060:	beq	11bf0 <putchar_unlocked@plt+0xeb4>
   12064:	mov	fp, #0
   12068:	mov	r5, fp
   1206c:	b	11ff0 <putchar_unlocked@plt+0x12b4>
   12070:	mov	r3, #116	; 0x74
   12074:	b	11bf0 <putchar_unlocked@plt+0xeb4>
   12078:	mov	r3, #110	; 0x6e
   1207c:	b	11bf0 <putchar_unlocked@plt+0xeb4>
   12080:	mov	r3, #97	; 0x61
   12084:	ldr	r2, [sp, #24]
   12088:	cmp	r2, #0
   1208c:	beq	11fd0 <putchar_unlocked@plt+0x1294>
   12090:	mov	r6, r3
   12094:	mov	r5, #0
   12098:	b	11df8 <putchar_unlocked@plt+0x10bc>
   1209c:	mov	r3, #98	; 0x62
   120a0:	b	12084 <putchar_unlocked@plt+0x1348>
   120a4:	mov	r3, #118	; 0x76
   120a8:	b	12084 <putchar_unlocked@plt+0x1348>
   120ac:	mov	r3, #102	; 0x66
   120b0:	b	12084 <putchar_unlocked@plt+0x1348>
   120b4:	ldr	r3, [sp, #40]	; 0x28
   120b8:	cmn	r3, #1
   120bc:	bne	120dc <putchar_unlocked@plt+0x13a0>
   120c0:	ldr	r3, [sp, #48]	; 0x30
   120c4:	ldrb	r3, [r3, #1]
   120c8:	adds	r3, r3, #0
   120cc:	movne	r3, #1
   120d0:	cmp	r3, #0
   120d4:	bne	11fd0 <putchar_unlocked@plt+0x1294>
   120d8:	b	11ebc <putchar_unlocked@plt+0x1180>
   120dc:	ldr	r3, [sp, #40]	; 0x28
   120e0:	subs	r3, r3, #1
   120e4:	b	120cc <putchar_unlocked@plt+0x1390>
   120e8:	mov	r3, #0
   120ec:	mov	r2, #0
   120f0:	strd	r2, [sp, #96]	; 0x60
   120f4:	ldr	r3, [sp, #40]	; 0x28
   120f8:	cmn	r3, #1
   120fc:	bne	1210c <putchar_unlocked@plt+0x13d0>
   12100:	ldr	r0, [sp, #48]	; 0x30
   12104:	bl	10c7c <strlen@plt>
   12108:	str	r0, [sp, #40]	; 0x28
   1210c:	ldr	r5, [sp, #36]	; 0x24
   12110:	mov	r3, #0
   12114:	str	r3, [sp, #56]	; 0x38
   12118:	ldr	r3, [sp, #28]
   1211c:	add	r0, sp, #92	; 0x5c
   12120:	ldr	r1, [sp, #40]	; 0x28
   12124:	ldr	r2, [sp, #56]	; 0x38
   12128:	add	r2, r3, r2
   1212c:	ldr	r3, [sp, #48]	; 0x30
   12130:	add	fp, r3, r2
   12134:	sub	r2, r1, r2
   12138:	add	r3, sp, #96	; 0x60
   1213c:	mov	r1, fp
   12140:	bl	136e0 <putchar_unlocked@plt+0x29a4>
   12144:	subs	r2, r0, #0
   12148:	beq	12188 <putchar_unlocked@plt+0x144c>
   1214c:	cmn	r2, #1
   12150:	beq	1235c <putchar_unlocked@plt+0x1620>
   12154:	cmn	r2, #2
   12158:	bne	122cc <putchar_unlocked@plt+0x1590>
   1215c:	ldr	r3, [sp, #28]
   12160:	ldr	r2, [sp, #56]	; 0x38
   12164:	add	r3, r3, r2
   12168:	ldr	r2, [sp, #40]	; 0x28
   1216c:	cmp	r2, r3
   12170:	bls	1235c <putchar_unlocked@plt+0x1620>
   12174:	ldr	r2, [sp, #56]	; 0x38
   12178:	ldr	r3, [sp, #80]	; 0x50
   1217c:	ldrb	r5, [r3, r2]
   12180:	cmp	r5, #0
   12184:	bne	122bc <putchar_unlocked@plt+0x1580>
   12188:	ldr	r3, [sp, #56]	; 0x38
   1218c:	cmp	r3, #1
   12190:	bls	11bb4 <putchar_unlocked@plt+0xe78>
   12194:	ldr	r3, [sp, #28]
   12198:	mov	fp, #0
   1219c:	mov	ip, #92	; 0x5c
   121a0:	ldr	r2, [sp, #56]	; 0x38
   121a4:	add	r3, r3, r2
   121a8:	ldr	r2, [sp, #24]
   121ac:	str	r3, [sp, #36]	; 0x24
   121b0:	eor	r3, r5, #1
   121b4:	and	r3, r3, r2
   121b8:	mov	r2, #39	; 0x27
   121bc:	uxtb	r3, r3
   121c0:	cmp	r3, #0
   121c4:	beq	12364 <putchar_unlocked@plt+0x1628>
   121c8:	sub	r0, sl, #2
   121cc:	cmp	r7, #0
   121d0:	clz	r0, r0
   121d4:	lsr	r0, r0, #5
   121d8:	bne	11ad8 <putchar_unlocked@plt+0xd9c>
   121dc:	ldr	r1, [sp, #52]	; 0x34
   121e0:	eor	r1, r1, #1
   121e4:	ands	r1, r0, r1
   121e8:	beq	12218 <putchar_unlocked@plt+0x14dc>
   121ec:	cmp	r9, r4
   121f0:	add	r0, r4, #1
   121f4:	str	r1, [sp, #52]	; 0x34
   121f8:	strbhi	r2, [r8, r4]
   121fc:	cmp	r9, r0
   12200:	movhi	lr, #36	; 0x24
   12204:	strbhi	lr, [r8, r0]
   12208:	add	r0, r4, #2
   1220c:	add	r4, r4, #3
   12210:	cmp	r9, r0
   12214:	strbhi	r2, [r8, r0]
   12218:	cmp	r9, r4
   1221c:	add	r0, r4, #1
   12220:	mov	fp, r3
   12224:	strbhi	ip, [r8, r4]
   12228:	cmp	r9, r0
   1222c:	lsrhi	r1, r6, #6
   12230:	addhi	r1, r1, #48	; 0x30
   12234:	strbhi	r1, [r8, r0]
   12238:	add	r0, r4, #2
   1223c:	add	r4, r4, #3
   12240:	cmp	r9, r0
   12244:	ubfxhi	r1, r6, #3, #3
   12248:	and	r6, r6, #7
   1224c:	add	r6, r6, #48	; 0x30
   12250:	addhi	r1, r1, #48	; 0x30
   12254:	strbhi	r1, [r8, r0]
   12258:	eor	r0, fp, #1
   1225c:	ldr	r1, [sp, #28]
   12260:	ldr	lr, [sp, #52]	; 0x34
   12264:	add	r1, r1, #1
   12268:	and	r0, r0, lr
   1226c:	ldr	lr, [sp, #36]	; 0x24
   12270:	cmp	r1, lr
   12274:	bcs	11ff0 <putchar_unlocked@plt+0x12b4>
   12278:	cmp	r0, #0
   1227c:	beq	122a0 <putchar_unlocked@plt+0x1564>
   12280:	cmp	r9, r4
   12284:	add	r0, r4, #1
   12288:	strbhi	r2, [r8, r4]
   1228c:	cmp	r9, r0
   12290:	add	r4, r4, #2
   12294:	strbhi	r2, [r8, r0]
   12298:	mov	r0, #0
   1229c:	str	r0, [sp, #52]	; 0x34
   122a0:	ldr	r0, [sp, #48]	; 0x30
   122a4:	cmp	r9, r4
   122a8:	str	r1, [sp, #28]
   122ac:	strbhi	r6, [r8, r4]
   122b0:	add	r4, r4, #1
   122b4:	ldrb	r6, [r0, r1]
   122b8:	b	121c0 <putchar_unlocked@plt+0x1484>
   122bc:	ldr	r3, [sp, #56]	; 0x38
   122c0:	add	r3, r3, #1
   122c4:	str	r3, [sp, #56]	; 0x38
   122c8:	b	1215c <putchar_unlocked@plt+0x1420>
   122cc:	cmp	sl, #2
   122d0:	movne	r3, #0
   122d4:	andeq	r3, r7, #1
   122d8:	cmp	r3, #0
   122dc:	movne	r1, #1
   122e0:	bne	1233c <putchar_unlocked@plt+0x1600>
   122e4:	ldr	r0, [sp, #92]	; 0x5c
   122e8:	str	r2, [sp, #84]	; 0x54
   122ec:	bl	10bd4 <iswprint@plt>
   122f0:	ldr	r3, [sp, #56]	; 0x38
   122f4:	cmp	r0, #0
   122f8:	add	r0, sp, #96	; 0x60
   122fc:	moveq	r5, #0
   12300:	ldr	r2, [sp, #84]	; 0x54
   12304:	add	r3, r3, r2
   12308:	str	r3, [sp, #56]	; 0x38
   1230c:	bl	10b80 <mbsinit@plt>
   12310:	cmp	r0, #0
   12314:	beq	12118 <putchar_unlocked@plt+0x13dc>
   12318:	b	12188 <putchar_unlocked@plt+0x144c>
   1231c:	ldrb	r3, [fp, #1]!
   12320:	cmp	r3, #94	; 0x5e
   12324:	beq	11c04 <putchar_unlocked@plt+0xec8>
   12328:	bhi	12348 <putchar_unlocked@plt+0x160c>
   1232c:	sub	r3, r3, #91	; 0x5b
   12330:	cmp	r3, #1
   12334:	bls	11c04 <putchar_unlocked@plt+0xec8>
   12338:	add	r1, r1, #1
   1233c:	cmp	r1, r2
   12340:	bne	1231c <putchar_unlocked@plt+0x15e0>
   12344:	b	122e4 <putchar_unlocked@plt+0x15a8>
   12348:	cmp	r3, #96	; 0x60
   1234c:	beq	11c04 <putchar_unlocked@plt+0xec8>
   12350:	cmp	r3, #124	; 0x7c
   12354:	bne	12338 <putchar_unlocked@plt+0x15fc>
   12358:	b	11c04 <putchar_unlocked@plt+0xec8>
   1235c:	mov	r5, #0
   12360:	b	12188 <putchar_unlocked@plt+0x144c>
   12364:	ldr	r1, [sp, #64]	; 0x40
   12368:	cmp	r1, #0
   1236c:	beq	12258 <putchar_unlocked@plt+0x151c>
   12370:	cmp	r9, r4
   12374:	mov	r1, #0
   12378:	strbhi	ip, [r8, r4]
   1237c:	add	r4, r4, #1
   12380:	str	r1, [sp, #64]	; 0x40
   12384:	b	12258 <putchar_unlocked@plt+0x151c>
   12388:	mov	r5, fp
   1238c:	ldr	fp, [sp, #24]
   12390:	mov	r6, #48	; 0x30
   12394:	b	11da4 <putchar_unlocked@plt+0x1068>
   12398:	mov	r5, #0
   1239c:	b	11da4 <putchar_unlocked@plt+0x1068>
   123a0:	mov	r6, r1
   123a4:	b	11fd0 <putchar_unlocked@plt+0x1294>
   123a8:	mov	r6, r1
   123ac:	b	11fc0 <putchar_unlocked@plt+0x1284>
   123b0:	ldr	r2, [sp, #28]
   123b4:	ldr	r3, [sp, #40]	; 0x28
   123b8:	subs	r3, r3, r2
   123bc:	movne	r3, #1
   123c0:	b	11828 <putchar_unlocked@plt+0xaec>
   123c4:	ldr	r3, [sp, #60]	; 0x3c
   123c8:	mov	sl, #2
   123cc:	ldr	r7, [sp, #72]	; 0x48
   123d0:	adds	r6, r3, #0
   123d4:	mov	r5, r3
   123d8:	movne	r6, #1
   123dc:	cmp	r9, #0
   123e0:	movne	r6, #0
   123e4:	cmp	r6, #0
   123e8:	bne	117b8 <putchar_unlocked@plt+0xa7c>
   123ec:	ldr	r3, [sp, #68]	; 0x44
   123f0:	ldr	r2, [sp, #44]	; 0x2c
   123f4:	cmp	r2, #0
   123f8:	moveq	r3, #0
   123fc:	andne	r3, r3, #1
   12400:	cmp	r3, #0
   12404:	movne	r3, r2
   12408:	subne	r3, r3, #1
   1240c:	bne	1243c <putchar_unlocked@plt+0x1700>
   12410:	cmp	r9, r4
   12414:	movhi	r3, #0
   12418:	strbhi	r3, [r8, r4]
   1241c:	mov	r0, r4
   12420:	add	sp, sp, #108	; 0x6c
   12424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12428:	mov	r3, r7
   1242c:	b	123f0 <putchar_unlocked@plt+0x16b4>
   12430:	cmp	r9, r4
   12434:	strbhi	r2, [r8, r4]
   12438:	add	r4, r4, #1
   1243c:	ldrb	r2, [r3, #1]!
   12440:	cmp	r2, #0
   12444:	bne	12430 <putchar_unlocked@plt+0x16f4>
   12448:	b	12410 <putchar_unlocked@plt+0x16d4>
   1244c:	andeq	r4, r1, r0, rrx
   12450:	andeq	r4, r1, r3, ror r0
   12454:	andeq	r4, r1, r1, ror r0
   12458:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   1245c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12460:	sub	sp, sp, #52	; 0x34
   12464:	mov	r6, r0
   12468:	mov	r5, r3
   1246c:	mov	r8, r1
   12470:	mov	r9, r2
   12474:	bl	10c88 <__errno_location@plt>
   12478:	ldr	r3, [r0]
   1247c:	cmn	r6, #-2147483647	; 0x80000001
   12480:	str	r0, [sp, #24]
   12484:	ldr	r7, [pc, #368]	; 125fc <putchar_unlocked@plt+0x18c0>
   12488:	str	r3, [sp, #32]
   1248c:	movne	r3, #0
   12490:	moveq	r3, #1
   12494:	orrs	r3, r3, r6, lsr #31
   12498:	ldr	r4, [r7]
   1249c:	beq	124a4 <putchar_unlocked@plt+0x1768>
   124a0:	bl	10d30 <abort@plt>
   124a4:	ldr	r2, [r7, #4]
   124a8:	cmp	r2, r6
   124ac:	bgt	1251c <putchar_unlocked@plt+0x17e0>
   124b0:	add	sl, r7, #8
   124b4:	mov	r3, #8
   124b8:	cmp	r4, sl
   124bc:	add	r1, sp, #44	; 0x2c
   124c0:	str	r2, [sp, #44]	; 0x2c
   124c4:	sub	r2, r6, r2
   124c8:	movne	r0, r4
   124cc:	moveq	r0, #0
   124d0:	add	r2, r2, #1
   124d4:	str	r3, [sp]
   124d8:	mvn	r3, #-2147483648	; 0x80000000
   124dc:	bl	131b0 <putchar_unlocked@plt+0x2474>
   124e0:	cmp	r4, sl
   124e4:	mov	fp, r0
   124e8:	str	r0, [r7]
   124ec:	ldmeq	r4, {r0, r1}
   124f0:	mov	r4, fp
   124f4:	ldr	r2, [sp, #44]	; 0x2c
   124f8:	stmeq	fp, {r0, r1}
   124fc:	mov	r1, #0
   12500:	ldr	r0, [r7, #4]
   12504:	sub	r2, r2, r0
   12508:	add	r0, fp, r0, lsl #3
   1250c:	lsl	r2, r2, #3
   12510:	bl	10ca0 <memset@plt>
   12514:	ldr	r3, [sp, #44]	; 0x2c
   12518:	str	r3, [r7, #4]
   1251c:	ldr	r3, [r5, #4]
   12520:	add	sl, r4, r6, lsl #3
   12524:	mov	r2, r8
   12528:	ldr	fp, [r4, r6, lsl #3]
   1252c:	ldr	r7, [sl, #4]
   12530:	orr	r3, r3, #1
   12534:	str	r3, [sp, #28]
   12538:	add	r3, r5, #8
   1253c:	mov	r1, fp
   12540:	str	r3, [sp, #36]	; 0x24
   12544:	mov	r0, r7
   12548:	ldr	r3, [r5, #44]	; 0x2c
   1254c:	str	r3, [sp, #16]
   12550:	ldr	r3, [r5, #40]	; 0x28
   12554:	str	r3, [sp, #12]
   12558:	add	r3, r5, #8
   1255c:	str	r3, [sp, #8]
   12560:	ldr	r3, [sp, #28]
   12564:	str	r3, [sp, #4]
   12568:	ldr	r3, [r5]
   1256c:	str	r3, [sp]
   12570:	mov	r3, r9
   12574:	bl	1176c <putchar_unlocked@plt+0xa30>
   12578:	cmp	fp, r0
   1257c:	bhi	125e4 <putchar_unlocked@plt+0x18a8>
   12580:	ldr	r3, [pc, #120]	; 12600 <putchar_unlocked@plt+0x18c4>
   12584:	add	fp, r0, #1
   12588:	str	fp, [r4, r6, lsl #3]
   1258c:	cmp	r7, r3
   12590:	beq	1259c <putchar_unlocked@plt+0x1860>
   12594:	mov	r0, r7
   12598:	bl	1359c <putchar_unlocked@plt+0x2860>
   1259c:	mov	r0, fp
   125a0:	bl	130a0 <putchar_unlocked@plt+0x2364>
   125a4:	ldr	r3, [r5, #44]	; 0x2c
   125a8:	mov	r2, r8
   125ac:	mov	r1, fp
   125b0:	str	r0, [sl, #4]
   125b4:	mov	r7, r0
   125b8:	str	r3, [sp, #16]
   125bc:	ldr	r3, [r5, #40]	; 0x28
   125c0:	str	r3, [sp, #12]
   125c4:	add	r3, r5, #8
   125c8:	str	r3, [sp, #8]
   125cc:	ldr	r3, [sp, #28]
   125d0:	str	r3, [sp, #4]
   125d4:	ldr	r3, [r5]
   125d8:	str	r3, [sp]
   125dc:	mov	r3, r9
   125e0:	bl	1176c <putchar_unlocked@plt+0xa30>
   125e4:	ldr	r3, [sp, #24]
   125e8:	mov	r0, r7
   125ec:	ldr	r2, [sp, #32]
   125f0:	str	r2, [r3]
   125f4:	add	sp, sp, #52	; 0x34
   125f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125fc:	ldrdeq	r5, [r2], -r8
   12600:	andeq	r5, r2, r0, asr #2
   12604:	push	{r4, r5, r6, lr}
   12608:	mov	r5, r0
   1260c:	bl	10c88 <__errno_location@plt>
   12610:	mov	r4, r0
   12614:	cmp	r5, #0
   12618:	ldr	r0, [pc, #20]	; 12634 <putchar_unlocked@plt+0x18f8>
   1261c:	mov	r1, #48	; 0x30
   12620:	movne	r0, r5
   12624:	ldr	r6, [r4]
   12628:	bl	132a0 <putchar_unlocked@plt+0x2564>
   1262c:	str	r6, [r4]
   12630:	pop	{r4, r5, r6, pc}
   12634:	andeq	r5, r2, r0, asr #4
   12638:	ldr	r3, [pc, #12]	; 1264c <putchar_unlocked@plt+0x1910>
   1263c:	cmp	r0, #0
   12640:	moveq	r0, r3
   12644:	ldr	r0, [r0]
   12648:	bx	lr
   1264c:	andeq	r5, r2, r0, asr #4
   12650:	ldr	r3, [pc, #12]	; 12664 <putchar_unlocked@plt+0x1928>
   12654:	cmp	r0, #0
   12658:	moveq	r0, r3
   1265c:	str	r1, [r0]
   12660:	bx	lr
   12664:	andeq	r5, r2, r0, asr #4
   12668:	ldr	r3, [pc, #52]	; 126a4 <putchar_unlocked@plt+0x1968>
   1266c:	cmp	r0, #0
   12670:	push	{lr}		; (str lr, [sp, #-4]!)
   12674:	lsr	lr, r1, #5
   12678:	and	r1, r1, #31
   1267c:	moveq	r0, r3
   12680:	add	r3, r0, #8
   12684:	ldr	ip, [r3, lr, lsl #2]
   12688:	lsr	r0, ip, r1
   1268c:	eor	r2, r2, r0
   12690:	and	r0, r0, #1
   12694:	and	r2, r2, #1
   12698:	eor	r1, ip, r2, lsl r1
   1269c:	str	r1, [r3, lr, lsl #2]
   126a0:	pop	{pc}		; (ldr pc, [sp], #4)
   126a4:	andeq	r5, r2, r0, asr #4
   126a8:	ldr	r3, [pc, #16]	; 126c0 <putchar_unlocked@plt+0x1984>
   126ac:	cmp	r0, #0
   126b0:	movne	r3, r0
   126b4:	ldr	r0, [r3, #4]
   126b8:	str	r1, [r3, #4]
   126bc:	bx	lr
   126c0:	andeq	r5, r2, r0, asr #4
   126c4:	ldr	r3, [pc, #44]	; 126f8 <putchar_unlocked@plt+0x19bc>
   126c8:	cmp	r0, #0
   126cc:	moveq	r0, r3
   126d0:	mov	r3, #10
   126d4:	cmp	r2, #0
   126d8:	cmpne	r1, #0
   126dc:	str	r3, [r0]
   126e0:	bne	126ec <putchar_unlocked@plt+0x19b0>
   126e4:	push	{r4, lr}
   126e8:	bl	10d30 <abort@plt>
   126ec:	str	r1, [r0, #40]	; 0x28
   126f0:	str	r2, [r0, #44]	; 0x2c
   126f4:	bx	lr
   126f8:	andeq	r5, r2, r0, asr #4
   126fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12700:	sub	sp, sp, #24
   12704:	mov	sl, r3
   12708:	mov	r7, r0
   1270c:	mov	r8, r1
   12710:	mov	r9, r2
   12714:	ldr	r4, [sp, #56]	; 0x38
   12718:	ldr	r3, [pc, #88]	; 12778 <putchar_unlocked@plt+0x1a3c>
   1271c:	cmp	r4, #0
   12720:	moveq	r4, r3
   12724:	bl	10c88 <__errno_location@plt>
   12728:	ldr	r3, [r4, #44]	; 0x2c
   1272c:	mov	r5, r0
   12730:	mov	r2, r9
   12734:	mov	r1, r8
   12738:	mov	r0, r7
   1273c:	ldr	r6, [r5]
   12740:	str	r3, [sp, #16]
   12744:	ldr	r3, [r4, #40]	; 0x28
   12748:	str	r3, [sp, #12]
   1274c:	add	r3, r4, #8
   12750:	str	r3, [sp, #8]
   12754:	ldr	r3, [r4, #4]
   12758:	str	r3, [sp, #4]
   1275c:	ldr	r3, [r4]
   12760:	str	r3, [sp]
   12764:	mov	r3, sl
   12768:	bl	1176c <putchar_unlocked@plt+0xa30>
   1276c:	str	r6, [r5]
   12770:	add	sp, sp, #24
   12774:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12778:	andeq	r5, r2, r0, asr #4
   1277c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12780:	cmp	r3, #0
   12784:	sub	sp, sp, #44	; 0x2c
   12788:	mov	r6, r2
   1278c:	mov	sl, r1
   12790:	mov	r9, r0
   12794:	ldr	r4, [pc, #176]	; 1284c <putchar_unlocked@plt+0x1b10>
   12798:	movne	r4, r3
   1279c:	bl	10c88 <__errno_location@plt>
   127a0:	ldr	r3, [r0]
   127a4:	mov	r1, #0
   127a8:	mov	r2, r9
   127ac:	mov	r8, r0
   127b0:	mov	r0, r1
   127b4:	ldr	r5, [r4, #4]
   127b8:	add	fp, r4, #8
   127bc:	str	r3, [sp, #28]
   127c0:	ldr	r3, [r4, #44]	; 0x2c
   127c4:	cmp	r6, #0
   127c8:	orreq	r5, r5, #1
   127cc:	str	r3, [sp, #16]
   127d0:	ldr	r3, [r4, #40]	; 0x28
   127d4:	stmib	sp, {r5, fp}
   127d8:	str	r3, [sp, #12]
   127dc:	ldr	r3, [r4]
   127e0:	str	r3, [sp]
   127e4:	mov	r3, sl
   127e8:	bl	1176c <putchar_unlocked@plt+0xa30>
   127ec:	add	r1, r0, #1
   127f0:	mov	r7, r0
   127f4:	mov	r0, r1
   127f8:	str	r1, [sp, #36]	; 0x24
   127fc:	bl	130a0 <putchar_unlocked@plt+0x2364>
   12800:	ldr	r3, [r4, #44]	; 0x2c
   12804:	mov	r2, r9
   12808:	ldr	r1, [sp, #36]	; 0x24
   1280c:	str	r3, [sp, #16]
   12810:	ldr	r3, [r4, #40]	; 0x28
   12814:	stmib	sp, {r5, fp}
   12818:	str	r0, [sp, #32]
   1281c:	str	r3, [sp, #12]
   12820:	ldr	r3, [r4]
   12824:	str	r3, [sp]
   12828:	mov	r3, sl
   1282c:	bl	1176c <putchar_unlocked@plt+0xa30>
   12830:	ldr	r3, [sp, #28]
   12834:	cmp	r6, #0
   12838:	ldr	r0, [sp, #32]
   1283c:	str	r3, [r8]
   12840:	strne	r7, [r6]
   12844:	add	sp, sp, #44	; 0x2c
   12848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1284c:	andeq	r5, r2, r0, asr #4
   12850:	mov	r3, r2
   12854:	mov	r2, #0
   12858:	b	1277c <putchar_unlocked@plt+0x1a40>
   1285c:	push	{r4, r5, r6, r7, r8, lr}
   12860:	mov	r6, #1
   12864:	ldr	r4, [pc, #100]	; 128d0 <putchar_unlocked@plt+0x1b94>
   12868:	ldr	r5, [r4]
   1286c:	add	r7, r5, #4
   12870:	ldr	r3, [r4, #4]
   12874:	cmp	r3, r6
   12878:	bgt	128c0 <putchar_unlocked@plt+0x1b84>
   1287c:	ldr	r6, [pc, #80]	; 128d4 <putchar_unlocked@plt+0x1b98>
   12880:	ldr	r0, [r5, #4]
   12884:	cmp	r0, r6
   12888:	beq	1289c <putchar_unlocked@plt+0x1b60>
   1288c:	bl	1359c <putchar_unlocked@plt+0x2860>
   12890:	mov	r3, #256	; 0x100
   12894:	str	r3, [r4, #8]
   12898:	str	r6, [r4, #12]
   1289c:	ldr	r6, [pc, #52]	; 128d8 <putchar_unlocked@plt+0x1b9c>
   128a0:	cmp	r5, r6
   128a4:	beq	128b4 <putchar_unlocked@plt+0x1b78>
   128a8:	mov	r0, r5
   128ac:	bl	1359c <putchar_unlocked@plt+0x2860>
   128b0:	str	r6, [r4]
   128b4:	mov	r3, #1
   128b8:	str	r3, [r4, #4]
   128bc:	pop	{r4, r5, r6, r7, r8, pc}
   128c0:	ldr	r0, [r7, r6, lsl #3]
   128c4:	add	r6, r6, #1
   128c8:	bl	1359c <putchar_unlocked@plt+0x2860>
   128cc:	b	12870 <putchar_unlocked@plt+0x1b34>
   128d0:	ldrdeq	r5, [r2], -r8
   128d4:	andeq	r5, r2, r0, asr #2
   128d8:	andeq	r5, r2, r0, ror #1
   128dc:	ldr	r3, [pc, #4]	; 128e8 <putchar_unlocked@plt+0x1bac>
   128e0:	mvn	r2, #0
   128e4:	b	1245c <putchar_unlocked@plt+0x1720>
   128e8:	andeq	r5, r2, r0, asr #4
   128ec:	ldr	r3, [pc]	; 128f4 <putchar_unlocked@plt+0x1bb8>
   128f0:	b	1245c <putchar_unlocked@plt+0x1720>
   128f4:	andeq	r5, r2, r0, asr #4
   128f8:	mov	r1, r0
   128fc:	mov	r0, #0
   12900:	b	128dc <putchar_unlocked@plt+0x1ba0>
   12904:	mov	r2, r1
   12908:	mov	r1, r0
   1290c:	mov	r0, #0
   12910:	b	128ec <putchar_unlocked@plt+0x1bb0>
   12914:	push	{r4, r5, lr}
   12918:	sub	sp, sp, #52	; 0x34
   1291c:	mov	r5, r2
   12920:	mov	r4, r0
   12924:	mov	r0, sp
   12928:	bl	11610 <putchar_unlocked@plt+0x8d4>
   1292c:	mov	r3, sp
   12930:	mvn	r2, #0
   12934:	mov	r1, r5
   12938:	mov	r0, r4
   1293c:	bl	1245c <putchar_unlocked@plt+0x1720>
   12940:	add	sp, sp, #52	; 0x34
   12944:	pop	{r4, r5, pc}
   12948:	push	{r4, r5, r6, lr}
   1294c:	sub	sp, sp, #48	; 0x30
   12950:	mov	r5, r2
   12954:	mov	r6, r3
   12958:	mov	r4, r0
   1295c:	mov	r0, sp
   12960:	bl	11610 <putchar_unlocked@plt+0x8d4>
   12964:	mov	r3, sp
   12968:	mov	r2, r6
   1296c:	mov	r1, r5
   12970:	mov	r0, r4
   12974:	bl	1245c <putchar_unlocked@plt+0x1720>
   12978:	add	sp, sp, #48	; 0x30
   1297c:	pop	{r4, r5, r6, pc}
   12980:	mov	r2, r1
   12984:	mov	r1, r0
   12988:	mov	r0, #0
   1298c:	b	12914 <putchar_unlocked@plt+0x1bd8>
   12990:	mov	r3, r2
   12994:	mov	r2, r1
   12998:	mov	r1, r0
   1299c:	mov	r0, #0
   129a0:	b	12948 <putchar_unlocked@plt+0x1c0c>
   129a4:	push	{r4, r5, r6, lr}
   129a8:	mov	r4, r0
   129ac:	mov	r5, r1
   129b0:	mov	r6, r2
   129b4:	sub	sp, sp, #48	; 0x30
   129b8:	mov	ip, sp
   129bc:	ldr	lr, [pc, #64]	; 12a04 <putchar_unlocked@plt+0x1cc8>
   129c0:	ldm	lr!, {r0, r1, r2, r3}
   129c4:	stmia	ip!, {r0, r1, r2, r3}
   129c8:	ldm	lr!, {r0, r1, r2, r3}
   129cc:	stmia	ip!, {r0, r1, r2, r3}
   129d0:	ldm	lr, {r0, r1, r2, r3}
   129d4:	stm	ip, {r0, r1, r2, r3}
   129d8:	mov	r1, r6
   129dc:	mov	r2, #1
   129e0:	mov	r0, sp
   129e4:	bl	12668 <putchar_unlocked@plt+0x192c>
   129e8:	mov	r3, sp
   129ec:	mov	r2, r5
   129f0:	mov	r1, r4
   129f4:	mov	r0, #0
   129f8:	bl	1245c <putchar_unlocked@plt+0x1720>
   129fc:	add	sp, sp, #48	; 0x30
   12a00:	pop	{r4, r5, r6, pc}
   12a04:	andeq	r5, r2, r0, asr #4
   12a08:	mov	r2, r1
   12a0c:	mvn	r1, #0
   12a10:	b	129a4 <putchar_unlocked@plt+0x1c68>
   12a14:	mov	r1, #58	; 0x3a
   12a18:	b	12a08 <putchar_unlocked@plt+0x1ccc>
   12a1c:	mov	r2, #58	; 0x3a
   12a20:	b	129a4 <putchar_unlocked@plt+0x1c68>
   12a24:	push	{r4, r5, lr}
   12a28:	sub	sp, sp, #100	; 0x64
   12a2c:	mov	r4, r0
   12a30:	mov	r0, sp
   12a34:	mov	r5, r2
   12a38:	bl	11610 <putchar_unlocked@plt+0x8d4>
   12a3c:	mov	ip, sp
   12a40:	add	lr, sp, #48	; 0x30
   12a44:	ldm	ip!, {r0, r1, r2, r3}
   12a48:	stmia	lr!, {r0, r1, r2, r3}
   12a4c:	ldm	ip!, {r0, r1, r2, r3}
   12a50:	stmia	lr!, {r0, r1, r2, r3}
   12a54:	ldm	ip, {r0, r1, r2, r3}
   12a58:	stm	lr, {r0, r1, r2, r3}
   12a5c:	mov	r2, #1
   12a60:	mov	r1, #58	; 0x3a
   12a64:	add	r0, sp, #48	; 0x30
   12a68:	bl	12668 <putchar_unlocked@plt+0x192c>
   12a6c:	add	r3, sp, #48	; 0x30
   12a70:	mvn	r2, #0
   12a74:	mov	r1, r5
   12a78:	mov	r0, r4
   12a7c:	bl	1245c <putchar_unlocked@plt+0x1720>
   12a80:	add	sp, sp, #100	; 0x64
   12a84:	pop	{r4, r5, pc}
   12a88:	push	{r4, r5, r6, r7, lr}
   12a8c:	mov	r4, r0
   12a90:	mov	r6, r1
   12a94:	mov	r7, r2
   12a98:	mov	r5, r3
   12a9c:	sub	sp, sp, #52	; 0x34
   12aa0:	ldr	lr, [pc, #68]	; 12aec <putchar_unlocked@plt+0x1db0>
   12aa4:	mov	ip, sp
   12aa8:	ldm	lr!, {r0, r1, r2, r3}
   12aac:	stmia	ip!, {r0, r1, r2, r3}
   12ab0:	ldm	lr!, {r0, r1, r2, r3}
   12ab4:	stmia	ip!, {r0, r1, r2, r3}
   12ab8:	ldm	lr, {r0, r1, r2, r3}
   12abc:	stm	ip, {r0, r1, r2, r3}
   12ac0:	mov	r2, r7
   12ac4:	mov	r1, r6
   12ac8:	mov	r0, sp
   12acc:	bl	126c4 <putchar_unlocked@plt+0x1988>
   12ad0:	ldr	r2, [sp, #72]	; 0x48
   12ad4:	mov	r3, sp
   12ad8:	mov	r1, r5
   12adc:	mov	r0, r4
   12ae0:	bl	1245c <putchar_unlocked@plt+0x1720>
   12ae4:	add	sp, sp, #52	; 0x34
   12ae8:	pop	{r4, r5, r6, r7, pc}
   12aec:	andeq	r5, r2, r0, asr #4
   12af0:	mvn	ip, #0
   12af4:	push	{r0, r1, r2, lr}
   12af8:	str	ip, [sp]
   12afc:	bl	12a88 <putchar_unlocked@plt+0x1d4c>
   12b00:	add	sp, sp, #12
   12b04:	pop	{pc}		; (ldr pc, [sp], #4)
   12b08:	mov	r3, r2
   12b0c:	mov	r2, r1
   12b10:	mov	r1, r0
   12b14:	mov	r0, #0
   12b18:	b	12af0 <putchar_unlocked@plt+0x1db4>
   12b1c:	push	{r0, r1, r2, lr}
   12b20:	str	r3, [sp]
   12b24:	mov	r3, r2
   12b28:	mov	r2, r1
   12b2c:	mov	r1, r0
   12b30:	mov	r0, #0
   12b34:	bl	12a88 <putchar_unlocked@plt+0x1d4c>
   12b38:	add	sp, sp, #12
   12b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b40:	ldr	r3, [pc]	; 12b48 <putchar_unlocked@plt+0x1e0c>
   12b44:	b	1245c <putchar_unlocked@plt+0x1720>
   12b48:	andeq	r5, r2, r8, ror #1
   12b4c:	mov	r2, r1
   12b50:	mov	r1, r0
   12b54:	mov	r0, #0
   12b58:	b	12b40 <putchar_unlocked@plt+0x1e04>
   12b5c:	mvn	r2, #0
   12b60:	b	12b40 <putchar_unlocked@plt+0x1e04>
   12b64:	mov	r1, r0
   12b68:	mov	r0, #0
   12b6c:	b	12b5c <putchar_unlocked@plt+0x1e20>
   12b70:	push	{r4, r5, r6, lr}
   12b74:	cmp	r1, #0
   12b78:	sub	sp, sp, #32
   12b7c:	mov	r5, r0
   12b80:	ldr	r4, [sp, #48]	; 0x30
   12b84:	ldr	r6, [sp, #52]	; 0x34
   12b88:	beq	12c3c <putchar_unlocked@plt+0x1f00>
   12b8c:	strd	r2, [sp]
   12b90:	mov	r3, r1
   12b94:	mov	r1, #1
   12b98:	ldr	r2, [pc, #856]	; 12ef8 <putchar_unlocked@plt+0x21bc>
   12b9c:	bl	10cc4 <__fprintf_chk@plt>
   12ba0:	mov	r2, #5
   12ba4:	ldr	r1, [pc, #848]	; 12efc <putchar_unlocked@plt+0x21c0>
   12ba8:	mov	r0, #0
   12bac:	bl	10bb0 <dcgettext@plt>
   12bb0:	movw	r3, #2022	; 0x7e6
   12bb4:	ldr	r2, [pc, #836]	; 12f00 <putchar_unlocked@plt+0x21c4>
   12bb8:	mov	r1, #1
   12bbc:	str	r3, [sp]
   12bc0:	mov	r3, r0
   12bc4:	mov	r0, r5
   12bc8:	bl	10cc4 <__fprintf_chk@plt>
   12bcc:	mov	r1, r5
   12bd0:	mov	r0, #10
   12bd4:	bl	10b98 <fputc_unlocked@plt>
   12bd8:	mov	r2, #5
   12bdc:	ldr	r1, [pc, #800]	; 12f04 <putchar_unlocked@plt+0x21c8>
   12be0:	mov	r0, #0
   12be4:	bl	10bb0 <dcgettext@plt>
   12be8:	mov	r2, r0
   12bec:	mov	r1, #1
   12bf0:	ldr	r3, [pc, #784]	; 12f08 <putchar_unlocked@plt+0x21cc>
   12bf4:	mov	r0, r5
   12bf8:	bl	10cc4 <__fprintf_chk@plt>
   12bfc:	mov	r1, r5
   12c00:	mov	r0, #10
   12c04:	bl	10b98 <fputc_unlocked@plt>
   12c08:	cmp	r6, #9
   12c0c:	ldrls	pc, [pc, r6, lsl #2]
   12c10:	b	12eec <putchar_unlocked@plt+0x21b0>
   12c14:	andeq	r2, r1, ip, lsr #26
   12c18:	andeq	r2, r1, r4, asr ip
   12c1c:	andeq	r2, r1, r0, lsl #25
   12c20:			; <UNDEFINED> instruction: 0x00012cb4
   12c24:	strdeq	r2, [r1], -r0
   12c28:	andeq	r2, r1, r4, lsr sp
   12c2c:	andeq	r2, r1, ip, ror sp
   12c30:	andeq	r2, r1, ip, asr #27
   12c34:	andeq	r2, r1, r4, lsr #28
   12c38:	andeq	r2, r1, r4, lsl #29
   12c3c:	mov	r1, #1
   12c40:	str	r3, [sp]
   12c44:	mov	r3, r2
   12c48:	ldr	r2, [pc, #700]	; 12f0c <putchar_unlocked@plt+0x21d0>
   12c4c:	bl	10cc4 <__fprintf_chk@plt>
   12c50:	b	12ba0 <putchar_unlocked@plt+0x1e64>
   12c54:	mov	r2, #5
   12c58:	ldr	r1, [pc, #688]	; 12f10 <putchar_unlocked@plt+0x21d4>
   12c5c:	mov	r0, #0
   12c60:	bl	10bb0 <dcgettext@plt>
   12c64:	ldr	r3, [r4]
   12c68:	mov	r2, r0
   12c6c:	mov	r1, #1
   12c70:	mov	r0, r5
   12c74:	add	sp, sp, #32
   12c78:	pop	{r4, r5, r6, lr}
   12c7c:	b	10cc4 <__fprintf_chk@plt>
   12c80:	mov	r2, #5
   12c84:	ldr	r1, [pc, #648]	; 12f14 <putchar_unlocked@plt+0x21d8>
   12c88:	mov	r0, #0
   12c8c:	bl	10bb0 <dcgettext@plt>
   12c90:	ldr	r3, [r4, #4]
   12c94:	mov	r2, r0
   12c98:	mov	r1, #1
   12c9c:	mov	r0, r5
   12ca0:	str	r3, [sp, #48]	; 0x30
   12ca4:	ldr	r3, [r4]
   12ca8:	add	sp, sp, #32
   12cac:	pop	{r4, r5, r6, lr}
   12cb0:	b	10cc4 <__fprintf_chk@plt>
   12cb4:	mov	r2, #5
   12cb8:	ldr	r1, [pc, #600]	; 12f18 <putchar_unlocked@plt+0x21dc>
   12cbc:	mov	r0, #0
   12cc0:	bl	10bb0 <dcgettext@plt>
   12cc4:	ldr	r3, [r4, #8]
   12cc8:	mov	r2, r0
   12ccc:	mov	r1, #1
   12cd0:	mov	r0, r5
   12cd4:	str	r3, [sp, #52]	; 0x34
   12cd8:	ldr	r3, [r4, #4]
   12cdc:	str	r3, [sp, #48]	; 0x30
   12ce0:	ldr	r3, [r4]
   12ce4:	add	sp, sp, #32
   12ce8:	pop	{r4, r5, r6, lr}
   12cec:	b	10cc4 <__fprintf_chk@plt>
   12cf0:	mov	r2, #5
   12cf4:	ldr	r1, [pc, #544]	; 12f1c <putchar_unlocked@plt+0x21e0>
   12cf8:	mov	r0, #0
   12cfc:	bl	10bb0 <dcgettext@plt>
   12d00:	ldr	r3, [r4, #12]
   12d04:	mov	r2, r0
   12d08:	mov	r1, #1
   12d0c:	mov	r0, r5
   12d10:	str	r3, [sp, #8]
   12d14:	ldr	r3, [r4, #8]
   12d18:	str	r3, [sp, #4]
   12d1c:	ldr	r3, [r4, #4]
   12d20:	str	r3, [sp]
   12d24:	ldr	r3, [r4]
   12d28:	bl	10cc4 <__fprintf_chk@plt>
   12d2c:	add	sp, sp, #32
   12d30:	pop	{r4, r5, r6, pc}
   12d34:	mov	r2, #5
   12d38:	ldr	r1, [pc, #480]	; 12f20 <putchar_unlocked@plt+0x21e4>
   12d3c:	mov	r0, #0
   12d40:	bl	10bb0 <dcgettext@plt>
   12d44:	ldr	r3, [r4, #16]
   12d48:	mov	r2, r0
   12d4c:	mov	r1, #1
   12d50:	mov	r0, r5
   12d54:	str	r3, [sp, #12]
   12d58:	ldr	r3, [r4, #12]
   12d5c:	str	r3, [sp, #8]
   12d60:	ldr	r3, [r4, #8]
   12d64:	str	r3, [sp, #4]
   12d68:	ldr	r3, [r4, #4]
   12d6c:	str	r3, [sp]
   12d70:	ldr	r3, [r4]
   12d74:	bl	10cc4 <__fprintf_chk@plt>
   12d78:	b	12d2c <putchar_unlocked@plt+0x1ff0>
   12d7c:	mov	r2, #5
   12d80:	ldr	r1, [pc, #412]	; 12f24 <putchar_unlocked@plt+0x21e8>
   12d84:	mov	r0, #0
   12d88:	bl	10bb0 <dcgettext@plt>
   12d8c:	ldr	r3, [r4, #20]
   12d90:	mov	r2, r0
   12d94:	mov	r1, #1
   12d98:	mov	r0, r5
   12d9c:	str	r3, [sp, #16]
   12da0:	ldr	r3, [r4, #16]
   12da4:	str	r3, [sp, #12]
   12da8:	ldr	r3, [r4, #12]
   12dac:	str	r3, [sp, #8]
   12db0:	ldr	r3, [r4, #8]
   12db4:	str	r3, [sp, #4]
   12db8:	ldr	r3, [r4, #4]
   12dbc:	str	r3, [sp]
   12dc0:	ldr	r3, [r4]
   12dc4:	bl	10cc4 <__fprintf_chk@plt>
   12dc8:	b	12d2c <putchar_unlocked@plt+0x1ff0>
   12dcc:	mov	r2, #5
   12dd0:	ldr	r1, [pc, #336]	; 12f28 <putchar_unlocked@plt+0x21ec>
   12dd4:	mov	r0, #0
   12dd8:	bl	10bb0 <dcgettext@plt>
   12ddc:	ldr	r3, [r4, #24]
   12de0:	mov	r2, r0
   12de4:	mov	r1, #1
   12de8:	mov	r0, r5
   12dec:	str	r3, [sp, #20]
   12df0:	ldr	r3, [r4, #20]
   12df4:	str	r3, [sp, #16]
   12df8:	ldr	r3, [r4, #16]
   12dfc:	str	r3, [sp, #12]
   12e00:	ldr	r3, [r4, #12]
   12e04:	str	r3, [sp, #8]
   12e08:	ldr	r3, [r4, #8]
   12e0c:	str	r3, [sp, #4]
   12e10:	ldr	r3, [r4, #4]
   12e14:	str	r3, [sp]
   12e18:	ldr	r3, [r4]
   12e1c:	bl	10cc4 <__fprintf_chk@plt>
   12e20:	b	12d2c <putchar_unlocked@plt+0x1ff0>
   12e24:	mov	r2, #5
   12e28:	ldr	r1, [pc, #252]	; 12f2c <putchar_unlocked@plt+0x21f0>
   12e2c:	mov	r0, #0
   12e30:	bl	10bb0 <dcgettext@plt>
   12e34:	ldr	r3, [r4, #28]
   12e38:	mov	r2, r0
   12e3c:	mov	r1, #1
   12e40:	mov	r0, r5
   12e44:	str	r3, [sp, #24]
   12e48:	ldr	r3, [r4, #24]
   12e4c:	str	r3, [sp, #20]
   12e50:	ldr	r3, [r4, #20]
   12e54:	str	r3, [sp, #16]
   12e58:	ldr	r3, [r4, #16]
   12e5c:	str	r3, [sp, #12]
   12e60:	ldr	r3, [r4, #12]
   12e64:	str	r3, [sp, #8]
   12e68:	ldr	r3, [r4, #8]
   12e6c:	str	r3, [sp, #4]
   12e70:	ldr	r3, [r4, #4]
   12e74:	str	r3, [sp]
   12e78:	ldr	r3, [r4]
   12e7c:	bl	10cc4 <__fprintf_chk@plt>
   12e80:	b	12d2c <putchar_unlocked@plt+0x1ff0>
   12e84:	ldr	r1, [pc, #164]	; 12f30 <putchar_unlocked@plt+0x21f4>
   12e88:	mov	r2, #5
   12e8c:	mov	r0, #0
   12e90:	bl	10bb0 <dcgettext@plt>
   12e94:	ldr	r3, [r4, #32]
   12e98:	mov	r2, r0
   12e9c:	mov	r1, #1
   12ea0:	mov	r0, r5
   12ea4:	str	r3, [sp, #28]
   12ea8:	ldr	r3, [r4, #28]
   12eac:	str	r3, [sp, #24]
   12eb0:	ldr	r3, [r4, #24]
   12eb4:	str	r3, [sp, #20]
   12eb8:	ldr	r3, [r4, #20]
   12ebc:	str	r3, [sp, #16]
   12ec0:	ldr	r3, [r4, #16]
   12ec4:	str	r3, [sp, #12]
   12ec8:	ldr	r3, [r4, #12]
   12ecc:	str	r3, [sp, #8]
   12ed0:	ldr	r3, [r4, #8]
   12ed4:	str	r3, [sp, #4]
   12ed8:	ldr	r3, [r4, #4]
   12edc:	str	r3, [sp]
   12ee0:	ldr	r3, [r4]
   12ee4:	bl	10cc4 <__fprintf_chk@plt>
   12ee8:	b	12d2c <putchar_unlocked@plt+0x1ff0>
   12eec:	mov	r2, #5
   12ef0:	ldr	r1, [pc, #60]	; 12f34 <putchar_unlocked@plt+0x21f8>
   12ef4:	b	12e8c <putchar_unlocked@plt+0x2150>
   12ef8:	andeq	r4, r1, r3, asr #1
   12efc:	ldrdeq	r4, [r1], -r6
   12f00:	andeq	r4, r1, r4, lsr #7
   12f04:	ldrdeq	r4, [r1], -sl
   12f08:	andeq	r4, r1, r5, lsl #3
   12f0c:	andeq	r4, r1, pc, asr #1
   12f10:	andeq	r4, r1, r7, lsr #3
   12f14:			; <UNDEFINED> instruction: 0x000141b7
   12f18:	andeq	r4, r1, lr, asr #3
   12f1c:	andeq	r4, r1, sl, ror #3
   12f20:	andeq	r4, r1, sl, lsl #4
   12f24:	andeq	r4, r1, lr, lsr #4
   12f28:	andeq	r4, r1, r6, asr r2
   12f2c:	andeq	r4, r1, r2, lsl #5
   12f30:			; <UNDEFINED> instruction: 0x000142b2
   12f34:	andeq	r4, r1, r6, ror #5
   12f38:	push	{r0, r1, r4, lr}
   12f3c:	mov	ip, #0
   12f40:	ldr	lr, [sp, #16]
   12f44:	ldr	r4, [lr, ip, lsl #2]
   12f48:	cmp	r4, #0
   12f4c:	bne	12f64 <putchar_unlocked@plt+0x2228>
   12f50:	str	lr, [sp]
   12f54:	str	ip, [sp, #4]
   12f58:	bl	12b70 <putchar_unlocked@plt+0x1e34>
   12f5c:	add	sp, sp, #8
   12f60:	pop	{r4, pc}
   12f64:	add	ip, ip, #1
   12f68:	b	12f44 <putchar_unlocked@plt+0x2208>
   12f6c:	push	{r4, r5, r6, lr}
   12f70:	sub	sp, sp, #48	; 0x30
   12f74:	mov	ip, #0
   12f78:	add	lr, sp, #8
   12f7c:	mov	r5, lr
   12f80:	ldr	r6, [sp, #64]	; 0x40
   12f84:	ldr	r4, [r6, ip, lsl #2]
   12f88:	cmp	r4, #0
   12f8c:	str	r4, [lr], #4
   12f90:	beq	12fa0 <putchar_unlocked@plt+0x2264>
   12f94:	add	ip, ip, #1
   12f98:	cmp	ip, #10
   12f9c:	bne	12f84 <putchar_unlocked@plt+0x2248>
   12fa0:	stm	sp, {r5, ip}
   12fa4:	bl	12b70 <putchar_unlocked@plt+0x1e34>
   12fa8:	add	sp, sp, #48	; 0x30
   12fac:	pop	{r4, r5, r6, pc}
   12fb0:	push	{r3}		; (str r3, [sp, #-4]!)
   12fb4:	push	{r0, r1, r2, r3, lr}
   12fb8:	add	r3, sp, #24
   12fbc:	str	r3, [sp]
   12fc0:	str	r3, [sp, #12]
   12fc4:	ldr	r3, [sp, #20]
   12fc8:	bl	12f6c <putchar_unlocked@plt+0x2230>
   12fcc:	add	sp, sp, #16
   12fd0:	pop	{lr}		; (ldr lr, [sp], #4)
   12fd4:	add	sp, sp, #4
   12fd8:	bx	lr
   12fdc:	ldr	r3, [pc, #116]	; 13058 <putchar_unlocked@plt+0x231c>
   12fe0:	mov	r0, #10
   12fe4:	push	{r4, lr}
   12fe8:	ldr	r1, [r3]
   12fec:	bl	10b98 <fputc_unlocked@plt>
   12ff0:	mov	r2, #5
   12ff4:	ldr	r1, [pc, #96]	; 1305c <putchar_unlocked@plt+0x2320>
   12ff8:	mov	r0, #0
   12ffc:	bl	10bb0 <dcgettext@plt>
   13000:	mov	r1, r0
   13004:	ldr	r2, [pc, #84]	; 13060 <putchar_unlocked@plt+0x2324>
   13008:	mov	r0, #1
   1300c:	bl	10cac <__printf_chk@plt>
   13010:	mov	r2, #5
   13014:	ldr	r1, [pc, #72]	; 13064 <putchar_unlocked@plt+0x2328>
   13018:	mov	r0, #0
   1301c:	bl	10bb0 <dcgettext@plt>
   13020:	mov	r1, r0
   13024:	ldr	r3, [pc, #60]	; 13068 <putchar_unlocked@plt+0x232c>
   13028:	mov	r0, #1
   1302c:	ldr	r2, [pc, #56]	; 1306c <putchar_unlocked@plt+0x2330>
   13030:	bl	10cac <__printf_chk@plt>
   13034:	mov	r2, #5
   13038:	ldr	r1, [pc, #48]	; 13070 <putchar_unlocked@plt+0x2334>
   1303c:	mov	r0, #0
   13040:	bl	10bb0 <dcgettext@plt>
   13044:	mov	r1, r0
   13048:	ldr	r2, [pc, #36]	; 13074 <putchar_unlocked@plt+0x2338>
   1304c:	mov	r0, #1
   13050:	pop	{r4, lr}
   13054:	b	10cac <__printf_chk@plt>
   13058:	andeq	r5, r2, ip, lsr #2
   1305c:	andeq	r4, r1, r2, lsr #6
   13060:	andeq	r4, r1, r6, lsr r3
   13064:	andeq	r4, r1, ip, asr #6
   13068:	andeq	r3, r1, lr, lsl #27
   1306c:			; <UNDEFINED> instruction: 0x00013db6
   13070:	andeq	r4, r1, r0, ror #6
   13074:	andeq	r4, r1, r7, lsl #7
   13078:	push	{r4, lr}
   1307c:	bl	133c4 <putchar_unlocked@plt+0x2688>
   13080:	cmp	r0, #0
   13084:	popne	{r4, pc}
   13088:	bl	13330 <putchar_unlocked@plt+0x25f4>
   1308c:	push	{r4, lr}
   13090:	bl	133c4 <putchar_unlocked@plt+0x2688>
   13094:	cmp	r0, #0
   13098:	popne	{r4, pc}
   1309c:	bl	13330 <putchar_unlocked@plt+0x25f4>
   130a0:	b	13078 <putchar_unlocked@plt+0x233c>
   130a4:	push	{r4, r5, r6, lr}
   130a8:	mov	r5, r0
   130ac:	mov	r4, r1
   130b0:	bl	133f0 <putchar_unlocked@plt+0x26b4>
   130b4:	cmp	r0, #0
   130b8:	popne	{r4, r5, r6, pc}
   130bc:	adds	r4, r4, #0
   130c0:	movne	r4, #1
   130c4:	cmp	r5, #0
   130c8:	moveq	r4, #1
   130cc:	cmp	r4, #0
   130d0:	popeq	{r4, r5, r6, pc}
   130d4:	bl	13330 <putchar_unlocked@plt+0x25f4>
   130d8:	push	{r4, lr}
   130dc:	bl	13688 <putchar_unlocked@plt+0x294c>
   130e0:	cmp	r0, #0
   130e4:	popne	{r4, pc}
   130e8:	bl	13330 <putchar_unlocked@plt+0x25f4>
   130ec:	push	{r4, r5, r6, lr}
   130f0:	mov	r6, r0
   130f4:	mov	r5, r1
   130f8:	mov	r4, r2
   130fc:	bl	13730 <putchar_unlocked@plt+0x29f4>
   13100:	cmp	r0, #0
   13104:	popne	{r4, r5, r6, pc}
   13108:	cmp	r6, #0
   1310c:	beq	1311c <putchar_unlocked@plt+0x23e0>
   13110:	cmp	r5, #0
   13114:	cmpne	r4, #0
   13118:	popeq	{r4, r5, r6, pc}
   1311c:	bl	13330 <putchar_unlocked@plt+0x25f4>
   13120:	b	130ec <putchar_unlocked@plt+0x23b0>
   13124:	push	{r4, lr}
   13128:	bl	13698 <putchar_unlocked@plt+0x295c>
   1312c:	cmp	r0, #0
   13130:	popne	{r4, pc}
   13134:	bl	13330 <putchar_unlocked@plt+0x25f4>
   13138:	mov	r2, r1
   1313c:	mov	r1, r0
   13140:	mov	r0, #0
   13144:	b	130ec <putchar_unlocked@plt+0x23b0>
   13148:	mov	r2, r1
   1314c:	mov	r1, r0
   13150:	mov	r0, #0
   13154:	b	13124 <putchar_unlocked@plt+0x23e8>
   13158:	cmp	r0, #0
   1315c:	push	{r4, r5, r6, lr}
   13160:	mov	r5, r1
   13164:	ldr	r4, [r1]
   13168:	bne	13194 <putchar_unlocked@plt+0x2458>
   1316c:	cmp	r4, #0
   13170:	bne	13184 <putchar_unlocked@plt+0x2448>
   13174:	mov	r4, #64	; 0x40
   13178:	udiv	r4, r4, r2
   1317c:	cmp	r2, #64	; 0x40
   13180:	addhi	r4, r4, #1
   13184:	mov	r1, r4
   13188:	bl	130ec <putchar_unlocked@plt+0x23b0>
   1318c:	str	r4, [r5]
   13190:	pop	{r4, r5, r6, pc}
   13194:	lsr	r3, r4, #1
   13198:	add	r3, r3, #1
   1319c:	adds	r4, r4, r3
   131a0:	bcc	13184 <putchar_unlocked@plt+0x2448>
   131a4:	bl	13330 <putchar_unlocked@plt+0x25f4>
   131a8:	mov	r2, #1
   131ac:	b	13158 <putchar_unlocked@plt+0x241c>
   131b0:	ldr	ip, [r1]
   131b4:	push	{r4, r5, r6, r7, r8, lr}
   131b8:	mov	r5, r1
   131bc:	mvn	r8, r3
   131c0:	lsr	r8, r8, #31
   131c4:	ldr	lr, [sp, #24]
   131c8:	asr	r1, ip, #1
   131cc:	adds	r4, ip, r1
   131d0:	mvnvs	r4, #-2147483648	; 0x80000000
   131d4:	cmp	r3, r4
   131d8:	movge	r1, #0
   131dc:	andlt	r1, r8, #1
   131e0:	cmp	r1, #0
   131e4:	movne	r4, r3
   131e8:	smull	r6, r7, r4, lr
   131ec:	cmp	r7, r6, asr #31
   131f0:	bne	13208 <putchar_unlocked@plt+0x24cc>
   131f4:	cmp	r6, #63	; 0x3f
   131f8:	mov	r1, r6
   131fc:	bgt	13218 <putchar_unlocked@plt+0x24dc>
   13200:	mov	r1, #64	; 0x40
   13204:	b	1320c <putchar_unlocked@plt+0x24d0>
   13208:	mvn	r1, #-2147483648	; 0x80000000
   1320c:	sdiv	r4, r1, lr
   13210:	mls	r6, lr, r4, r1
   13214:	sub	r1, r1, r6
   13218:	cmp	r0, #0
   1321c:	sub	r6, r4, ip
   13220:	streq	r0, [r5]
   13224:	cmp	r6, r2
   13228:	bge	1325c <putchar_unlocked@plt+0x2520>
   1322c:	adds	r4, ip, r2
   13230:	bvs	13258 <putchar_unlocked@plt+0x251c>
   13234:	cmp	r4, r3
   13238:	movle	r3, #0
   1323c:	andgt	r3, r8, #1
   13240:	cmp	r3, #0
   13244:	bne	13258 <putchar_unlocked@plt+0x251c>
   13248:	smull	r2, r3, r4, lr
   1324c:	cmp	r3, r2, asr #31
   13250:	mov	r1, r2
   13254:	beq	1325c <putchar_unlocked@plt+0x2520>
   13258:	bl	13330 <putchar_unlocked@plt+0x25f4>
   1325c:	bl	130a4 <putchar_unlocked@plt+0x2368>
   13260:	str	r4, [r5]
   13264:	pop	{r4, r5, r6, r7, r8, pc}
   13268:	push	{r4, lr}
   1326c:	bl	13370 <putchar_unlocked@plt+0x2634>
   13270:	cmp	r0, #0
   13274:	popne	{r4, pc}
   13278:	bl	13330 <putchar_unlocked@plt+0x25f4>
   1327c:	mov	r1, #1
   13280:	b	13268 <putchar_unlocked@plt+0x252c>
   13284:	push	{r4, lr}
   13288:	bl	13370 <putchar_unlocked@plt+0x2634>
   1328c:	cmp	r0, #0
   13290:	popne	{r4, pc}
   13294:	bl	13330 <putchar_unlocked@plt+0x25f4>
   13298:	mov	r1, #1
   1329c:	b	13284 <putchar_unlocked@plt+0x2548>
   132a0:	push	{r4, r5, r6, lr}
   132a4:	mov	r4, r1
   132a8:	mov	r5, r0
   132ac:	mov	r0, r1
   132b0:	bl	13078 <putchar_unlocked@plt+0x233c>
   132b4:	mov	r2, r4
   132b8:	mov	r1, r5
   132bc:	pop	{r4, r5, r6, lr}
   132c0:	b	10b74 <memcpy@plt>
   132c4:	push	{r4, r5, r6, lr}
   132c8:	mov	r4, r1
   132cc:	mov	r5, r0
   132d0:	mov	r0, r1
   132d4:	bl	1308c <putchar_unlocked@plt+0x2350>
   132d8:	mov	r2, r4
   132dc:	mov	r1, r5
   132e0:	pop	{r4, r5, r6, lr}
   132e4:	b	10b74 <memcpy@plt>
   132e8:	push	{r4, r5, r6, lr}
   132ec:	mov	r5, r0
   132f0:	add	r0, r1, #1
   132f4:	mov	r4, r1
   132f8:	bl	1308c <putchar_unlocked@plt+0x2350>
   132fc:	mov	r2, #0
   13300:	mov	r1, r5
   13304:	strb	r2, [r0, r4]
   13308:	mov	r2, r4
   1330c:	pop	{r4, r5, r6, lr}
   13310:	b	10b74 <memcpy@plt>
   13314:	push	{r4, lr}
   13318:	mov	r4, r0
   1331c:	bl	10c7c <strlen@plt>
   13320:	add	r1, r0, #1
   13324:	mov	r0, r4
   13328:	pop	{r4, lr}
   1332c:	b	132a0 <putchar_unlocked@plt+0x2564>
   13330:	ldr	r3, [pc, #44]	; 13364 <putchar_unlocked@plt+0x2628>
   13334:	mov	r2, #5
   13338:	mov	r0, #0
   1333c:	push	{r4, lr}
   13340:	ldr	r1, [pc, #32]	; 13368 <putchar_unlocked@plt+0x262c>
   13344:	ldr	r4, [r3]
   13348:	bl	10bb0 <dcgettext@plt>
   1334c:	mov	r3, r0
   13350:	ldr	r2, [pc, #20]	; 1336c <putchar_unlocked@plt+0x2630>
   13354:	mov	r1, #0
   13358:	mov	r0, r4
   1335c:	bl	10c1c <error@plt>
   13360:	bl	10d30 <abort@plt>
   13364:	ldrdeq	r5, [r2], -r4
   13368:	ldrdeq	r4, [r1], -r3
   1336c:	andeq	r3, r1, r2, asr #31
   13370:	cmp	r1, #0
   13374:	cmpne	r0, #0
   13378:	beq	133b0 <putchar_unlocked@plt+0x2674>
   1337c:	push	{r4, r5, r6, lr}
   13380:	umull	r4, r5, r0, r1
   13384:	adds	r3, r5, #0
   13388:	movne	r3, #1
   1338c:	cmp	r4, #0
   13390:	blt	1339c <putchar_unlocked@plt+0x2660>
   13394:	cmp	r3, #0
   13398:	beq	133bc <putchar_unlocked@plt+0x2680>
   1339c:	bl	10c88 <__errno_location@plt>
   133a0:	mov	r3, #12
   133a4:	str	r3, [r0]
   133a8:	mov	r0, #0
   133ac:	pop	{r4, r5, r6, pc}
   133b0:	mov	r1, #1
   133b4:	mov	r0, r1
   133b8:	b	10b2c <calloc@plt>
   133bc:	pop	{r4, r5, r6, lr}
   133c0:	b	133b8 <putchar_unlocked@plt+0x267c>
   133c4:	cmp	r0, #0
   133c8:	beq	133e8 <putchar_unlocked@plt+0x26ac>
   133cc:	bge	133ec <putchar_unlocked@plt+0x26b0>
   133d0:	push	{r4, lr}
   133d4:	bl	10c88 <__errno_location@plt>
   133d8:	mov	r3, #12
   133dc:	str	r3, [r0]
   133e0:	mov	r0, #0
   133e4:	pop	{r4, pc}
   133e8:	mov	r0, #1
   133ec:	b	10c28 <malloc@plt>
   133f0:	cmp	r0, #0
   133f4:	bne	13400 <putchar_unlocked@plt+0x26c4>
   133f8:	mov	r0, r1
   133fc:	b	133c4 <putchar_unlocked@plt+0x2688>
   13400:	cmp	r1, #0
   13404:	push	{r4, lr}
   13408:	bne	13418 <putchar_unlocked@plt+0x26dc>
   1340c:	bl	1359c <putchar_unlocked@plt+0x2860>
   13410:	mov	r0, #0
   13414:	pop	{r4, pc}
   13418:	blt	13424 <putchar_unlocked@plt+0x26e8>
   1341c:	pop	{r4, lr}
   13420:	b	10bbc <realloc@plt>
   13424:	bl	10c88 <__errno_location@plt>
   13428:	mov	r3, #12
   1342c:	str	r3, [r0]
   13430:	b	13410 <putchar_unlocked@plt+0x26d4>
   13434:	push	{r4, r5, r6, lr}
   13438:	mov	r4, r0
   1343c:	bl	10bf8 <__fpending@plt>
   13440:	mov	r5, r0
   13444:	mov	r0, r4
   13448:	bl	10c04 <ferror_unlocked@plt>
   1344c:	mov	r6, r0
   13450:	mov	r0, r4
   13454:	bl	134a4 <putchar_unlocked@plt+0x2768>
   13458:	cmp	r6, #0
   1345c:	mov	r4, r0
   13460:	bne	1348c <putchar_unlocked@plt+0x2750>
   13464:	cmp	r0, #0
   13468:	beq	13484 <putchar_unlocked@plt+0x2748>
   1346c:	cmp	r5, #0
   13470:	bne	1349c <putchar_unlocked@plt+0x2760>
   13474:	bl	10c88 <__errno_location@plt>
   13478:	ldr	r4, [r0]
   1347c:	subs	r4, r4, #9
   13480:	mvnne	r4, #0
   13484:	mov	r0, r4
   13488:	pop	{r4, r5, r6, pc}
   1348c:	cmp	r0, #0
   13490:	bne	1349c <putchar_unlocked@plt+0x2760>
   13494:	bl	10c88 <__errno_location@plt>
   13498:	str	r4, [r0]
   1349c:	mvn	r4, #0
   134a0:	b	13484 <putchar_unlocked@plt+0x2748>
   134a4:	push	{r0, r1, r2, r4, r5, lr}
   134a8:	mov	r4, r0
   134ac:	bl	10cb8 <fileno@plt>
   134b0:	cmp	r0, #0
   134b4:	mov	r0, r4
   134b8:	bge	134c8 <putchar_unlocked@plt+0x278c>
   134bc:	add	sp, sp, #12
   134c0:	pop	{r4, r5, lr}
   134c4:	b	10cd0 <fclose@plt>
   134c8:	bl	10c40 <__freading@plt>
   134cc:	cmp	r0, #0
   134d0:	bne	1350c <putchar_unlocked@plt+0x27d0>
   134d4:	mov	r0, r4
   134d8:	bl	1354c <putchar_unlocked@plt+0x2810>
   134dc:	cmp	r0, #0
   134e0:	bne	13540 <putchar_unlocked@plt+0x2804>
   134e4:	mov	r5, #0
   134e8:	mov	r0, r4
   134ec:	bl	10cd0 <fclose@plt>
   134f0:	cmp	r5, #0
   134f4:	beq	13504 <putchar_unlocked@plt+0x27c8>
   134f8:	bl	10c88 <__errno_location@plt>
   134fc:	str	r5, [r0]
   13500:	mvn	r0, #0
   13504:	add	sp, sp, #12
   13508:	pop	{r4, r5, pc}
   1350c:	mov	r0, r4
   13510:	bl	10cb8 <fileno@plt>
   13514:	mov	r3, #1
   13518:	mov	r2, #0
   1351c:	str	r3, [sp]
   13520:	mov	r3, #0
   13524:	bl	10be0 <lseek64@plt>
   13528:	mvn	r3, #0
   1352c:	mvn	r2, #0
   13530:	cmp	r1, r3
   13534:	cmpeq	r0, r2
   13538:	bne	134d4 <putchar_unlocked@plt+0x2798>
   1353c:	b	134e4 <putchar_unlocked@plt+0x27a8>
   13540:	bl	10c88 <__errno_location@plt>
   13544:	ldr	r5, [r0]
   13548:	b	134e8 <putchar_unlocked@plt+0x27ac>
   1354c:	push	{r0, r1, r4, lr}
   13550:	subs	r4, r0, #0
   13554:	bne	13568 <putchar_unlocked@plt+0x282c>
   13558:	mov	r0, r4
   1355c:	add	sp, sp, #8
   13560:	pop	{r4, lr}
   13564:	b	10b50 <fflush@plt>
   13568:	bl	10c40 <__freading@plt>
   1356c:	cmp	r0, #0
   13570:	beq	13558 <putchar_unlocked@plt+0x281c>
   13574:	ldr	r3, [r4]
   13578:	tst	r3, #256	; 0x100
   1357c:	beq	13558 <putchar_unlocked@plt+0x281c>
   13580:	mov	r3, #1
   13584:	mov	r2, #0
   13588:	mov	r0, r4
   1358c:	str	r3, [sp]
   13590:	mov	r3, #0
   13594:	bl	135ec <putchar_unlocked@plt+0x28b0>
   13598:	b	13558 <putchar_unlocked@plt+0x281c>
   1359c:	push	{r0, r1, r2, r4, r5, lr}
   135a0:	mov	r5, r0
   135a4:	bl	10c88 <__errno_location@plt>
   135a8:	mov	r4, r0
   135ac:	mov	r0, r5
   135b0:	ldr	r3, [r4]
   135b4:	str	r3, [sp]
   135b8:	str	r3, [sp, #4]
   135bc:	mov	r3, #0
   135c0:	str	r3, [r4]
   135c4:	bl	10b5c <free@plt>
   135c8:	ldr	r3, [r4]
   135cc:	add	r2, sp, #8
   135d0:	clz	r3, r3
   135d4:	lsr	r3, r3, #5
   135d8:	add	r3, r2, r3, lsl #2
   135dc:	ldr	r3, [r3, #-8]
   135e0:	str	r3, [r4]
   135e4:	add	sp, sp, #12
   135e8:	pop	{r4, r5, pc}
   135ec:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   135f0:	mov	r4, r0
   135f4:	ldmib	r0, {ip, lr}
   135f8:	ldr	r8, [sp, #32]
   135fc:	cmp	lr, ip
   13600:	bne	13670 <putchar_unlocked@plt+0x2934>
   13604:	ldr	ip, [r0, #16]
   13608:	ldr	lr, [r0, #20]
   1360c:	cmp	lr, ip
   13610:	bne	13670 <putchar_unlocked@plt+0x2934>
   13614:	ldr	r5, [r0, #36]	; 0x24
   13618:	cmp	r5, #0
   1361c:	bne	13670 <putchar_unlocked@plt+0x2934>
   13620:	mov	r6, r2
   13624:	mov	r7, r3
   13628:	bl	10cb8 <fileno@plt>
   1362c:	mov	r2, r6
   13630:	mov	r3, r7
   13634:	str	r8, [sp]
   13638:	bl	10be0 <lseek64@plt>
   1363c:	mvn	r3, #0
   13640:	mvn	r2, #0
   13644:	cmp	r1, r3
   13648:	cmpeq	r0, r2
   1364c:	mvneq	r0, #0
   13650:	beq	13668 <putchar_unlocked@plt+0x292c>
   13654:	ldr	r3, [r4]
   13658:	strd	r0, [r4, #80]	; 0x50
   1365c:	mov	r0, r5
   13660:	bic	r3, r3, #16
   13664:	str	r3, [r4]
   13668:	add	sp, sp, #8
   1366c:	pop	{r4, r5, r6, r7, r8, pc}
   13670:	mov	r0, r4
   13674:	str	r8, [sp, #32]
   13678:	add	sp, sp, #8
   1367c:	pop	{r4, r5, r6, r7, r8, lr}
   13680:	b	10cdc <fseeko64@plt>
   13684:	b	133c4 <putchar_unlocked@plt+0x2688>
   13688:	cmp	r1, #0
   1368c:	orreq	r1, r1, #1
   13690:	b	133f0 <putchar_unlocked@plt+0x26b4>
   13694:	b	13370 <putchar_unlocked@plt+0x2634>
   13698:	cmp	r2, #0
   1369c:	cmpne	r1, #0
   136a0:	moveq	r2, #1
   136a4:	moveq	r1, r2
   136a8:	b	13730 <putchar_unlocked@plt+0x29f4>
   136ac:	push	{r4, lr}
   136b0:	mov	r0, #14
   136b4:	bl	10d00 <nl_langinfo@plt>
   136b8:	cmp	r0, #0
   136bc:	beq	136d4 <putchar_unlocked@plt+0x2998>
   136c0:	ldrb	r2, [r0]
   136c4:	ldr	r3, [pc, #16]	; 136dc <putchar_unlocked@plt+0x29a0>
   136c8:	cmp	r2, #0
   136cc:	moveq	r0, r3
   136d0:	pop	{r4, pc}
   136d4:	ldr	r0, [pc]	; 136dc <putchar_unlocked@plt+0x29a0>
   136d8:	pop	{r4, pc}
   136dc:	andeq	r4, r1, r4, ror #7
   136e0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   136e4:	subs	r5, r0, #0
   136e8:	mov	r7, r2
   136ec:	addeq	r5, sp, #4
   136f0:	mov	r6, r1
   136f4:	mov	r0, r5
   136f8:	bl	10c10 <mbrtowc@plt>
   136fc:	cmp	r7, #0
   13700:	cmnne	r0, #3
   13704:	mov	r4, r0
   13708:	bls	13724 <putchar_unlocked@plt+0x29e8>
   1370c:	mov	r0, #0
   13710:	bl	1375c <putchar_unlocked@plt+0x2a20>
   13714:	cmp	r0, #0
   13718:	ldrbeq	r3, [r6]
   1371c:	moveq	r4, #1
   13720:	streq	r3, [r5]
   13724:	mov	r0, r4
   13728:	add	sp, sp, #12
   1372c:	pop	{r4, r5, r6, r7, pc}
   13730:	umull	r2, r3, r1, r2
   13734:	cmp	r3, #0
   13738:	bne	13744 <putchar_unlocked@plt+0x2a08>
   1373c:	mov	r1, r2
   13740:	b	133f0 <putchar_unlocked@plt+0x26b4>
   13744:	push	{r4, lr}
   13748:	bl	10c88 <__errno_location@plt>
   1374c:	mov	r3, #12
   13750:	str	r3, [r0]
   13754:	mov	r0, #0
   13758:	pop	{r4, pc}
   1375c:	push	{lr}		; (str lr, [sp, #-4]!)
   13760:	sub	sp, sp, #268	; 0x10c
   13764:	movw	r2, #257	; 0x101
   13768:	add	r1, sp, #4
   1376c:	bl	137b8 <putchar_unlocked@plt+0x2a7c>
   13770:	cmp	r0, #0
   13774:	movne	r0, #0
   13778:	bne	137a8 <putchar_unlocked@plt+0x2a6c>
   1377c:	ldr	r1, [pc, #44]	; 137b0 <putchar_unlocked@plt+0x2a74>
   13780:	add	r0, sp, #4
   13784:	bl	10b44 <strcmp@plt>
   13788:	cmp	r0, #0
   1378c:	beq	137a4 <putchar_unlocked@plt+0x2a68>
   13790:	ldr	r1, [pc, #28]	; 137b4 <putchar_unlocked@plt+0x2a78>
   13794:	add	r0, sp, #4
   13798:	bl	10b44 <strcmp@plt>
   1379c:	adds	r0, r0, #0
   137a0:	movne	r0, #1
   137a4:	and	r0, r0, #1
   137a8:	add	sp, sp, #268	; 0x10c
   137ac:	pop	{pc}		; (ldr pc, [sp], #4)
   137b0:	andeq	r4, r1, sl, ror #7
   137b4:	andeq	r4, r1, ip, ror #7
   137b8:	push	{r4, r5, r6, lr}
   137bc:	mov	r5, r1
   137c0:	mov	r1, #0
   137c4:	mov	r4, r2
   137c8:	bl	10ce8 <setlocale@plt>
   137cc:	subs	r6, r0, #0
   137d0:	bne	137e4 <putchar_unlocked@plt+0x2aa8>
   137d4:	cmp	r4, #0
   137d8:	mov	r0, #22
   137dc:	strbne	r6, [r5]
   137e0:	pop	{r4, r5, r6, pc}
   137e4:	bl	10c7c <strlen@plt>
   137e8:	cmp	r4, r0
   137ec:	bls	13808 <putchar_unlocked@plt+0x2acc>
   137f0:	add	r2, r0, #1
   137f4:	mov	r1, r6
   137f8:	mov	r0, r5
   137fc:	bl	10b74 <memcpy@plt>
   13800:	mov	r0, #0
   13804:	pop	{r4, r5, r6, pc}
   13808:	cmp	r4, #0
   1380c:	beq	1382c <putchar_unlocked@plt+0x2af0>
   13810:	sub	r4, r4, #1
   13814:	mov	r1, r6
   13818:	mov	r2, r4
   1381c:	mov	r0, r5
   13820:	bl	10b74 <memcpy@plt>
   13824:	mov	r3, #0
   13828:	strb	r3, [r5, r4]
   1382c:	mov	r0, #34	; 0x22
   13830:	pop	{r4, r5, r6, pc}
   13834:	mov	r1, #0
   13838:	b	10ce8 <setlocale@plt>
   1383c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13840:	mov	r7, r0
   13844:	ldr	r6, [pc, #72]	; 13894 <putchar_unlocked@plt+0x2b58>
   13848:	ldr	r5, [pc, #72]	; 13898 <putchar_unlocked@plt+0x2b5c>
   1384c:	add	r6, pc, r6
   13850:	add	r5, pc, r5
   13854:	sub	r6, r6, r5
   13858:	mov	r8, r1
   1385c:	mov	r9, r2
   13860:	bl	10b0c <calloc@plt-0x20>
   13864:	asrs	r6, r6, #2
   13868:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1386c:	mov	r4, #0
   13870:	add	r4, r4, #1
   13874:	ldr	r3, [r5], #4
   13878:	mov	r2, r9
   1387c:	mov	r1, r8
   13880:	mov	r0, r7
   13884:	blx	r3
   13888:	cmp	r6, r4
   1388c:	bne	13870 <putchar_unlocked@plt+0x2b34>
   13890:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13894:	andeq	r1, r1, r0, asr #13
   13898:			; <UNDEFINED> instruction: 0x000116b8
   1389c:	bx	lr
   138a0:	ldr	r3, [pc, #12]	; 138b4 <putchar_unlocked@plt+0x2b78>
   138a4:	mov	r1, #0
   138a8:	add	r3, pc, r3
   138ac:	ldr	r2, [r3]
   138b0:	b	10c94 <__cxa_atexit@plt>
   138b4:	andeq	r1, r1, r8, lsl r8

Disassembly of section .fini:

000138b8 <.fini>:
   138b8:	push	{r3, lr}
   138bc:	pop	{r3, pc}
