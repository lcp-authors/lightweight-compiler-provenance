
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010d88 <.init>:
   10d88:	push	{r3, lr}
   10d8c:	bl	1105c <rb_base64_encode@plt+0x50>
   10d90:	pop	{r3, pc}

Disassembly of section .plt:

00010d94 <open@plt-0x14>:
   10d94:	push	{lr}		; (str lr, [sp, #-4]!)
   10d98:	ldr	lr, [pc, #4]	; 10da4 <open@plt-0x4>
   10d9c:	add	lr, pc, lr
   10da0:	ldr	pc, [lr, #8]!
   10da4:	andeq	r4, r1, ip, asr r2

00010da8 <open@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #604]!	; 0x25c

00010db4 <sigemptyset@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #596]!	; 0x254

00010dc0 <strerror@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #588]!	; 0x24c

00010dcc <rb_get_type@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #580]!	; 0x244

00010dd8 <abort@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #572]!	; 0x23c

00010de4 <rb_event_addish@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #564]!	; 0x234

00010df0 <rb_ignore_errno@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #556]!	; 0x22c

00010dfc <__libc_start_main@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #548]!	; 0x224

00010e08 <rb_setselect@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #540]!	; 0x21c

00010e14 <__gmon_start__@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #532]!	; 0x214

00010e20 <rb_send_fd_buf@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #524]!	; 0x20c

00010e2c <vsnprintf@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #516]!	; 0x204

00010e38 <getenv@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #508]!	; 0x1fc

00010e44 <calloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e50 <rb_set_nb@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #492]!	; 0x1ec

00010e5c <memset@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #484]!	; 0x1e4

00010e68 <rb_linebuf_parse@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #476]!	; 0x1dc

00010e74 <rb_strlcpy@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e80 <rb_init_rawbuffers@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #460]!	; 0x1cc

00010e8c <free@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #452]!	; 0x1c4

00010e98 <rb_lib_loop@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #444]!	; 0x1bc

00010ea4 <rb_read@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #436]!	; 0x1b4

00010eb0 <rb_set_type@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #428]!	; 0x1ac

00010ebc <rb_linebuf_get@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec8 <rb_linebuf_flush@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #412]!	; 0x19c

00010ed4 <strlen@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #404]!	; 0x194

00010ee0 <memcpy@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #396]!	; 0x18c

00010eec <rb_linebuf_donebuf@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #388]!	; 0x184

00010ef8 <rb_strcasestr@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #20, 20	; 0x14000
   10f00:	ldr	pc, [ip, #380]!	; 0x17c

00010f04 <rb_close@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #20, 20	; 0x14000
   10f0c:	ldr	pc, [ip, #372]!	; 0x174

00010f10 <strtol@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #20, 20	; 0x14000
   10f18:	ldr	pc, [ip, #364]!	; 0x16c

00010f1c <sigaddset@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #20, 20	; 0x14000
   10f24:	ldr	pc, [ip, #356]!	; 0x164

00010f28 <rb_rawbuf_length@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #20, 20	; 0x14000
   10f30:	ldr	pc, [ip, #348]!	; 0x15c

00010f34 <rb_free_rawbuffer@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #20, 20	; 0x14000
   10f3c:	ldr	pc, [ip, #340]!	; 0x154

00010f40 <close@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #20, 20	; 0x14000
   10f48:	ldr	pc, [ip, #332]!	; 0x14c

00010f4c <fwrite@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #20, 20	; 0x14000
   10f54:	ldr	pc, [ip, #324]!	; 0x144

00010f58 <rb_outofmemory@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #20, 20	; 0x14000
   10f60:	ldr	pc, [ip, #316]!	; 0x13c

00010f64 <rb_rawbuf_get@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #20, 20	; 0x14000
   10f6c:	ldr	pc, [ip, #308]!	; 0x134

00010f70 <sigaction@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #20, 20	; 0x14000
   10f78:	ldr	pc, [ip, #300]!	; 0x12c

00010f7c <rb_lib_init@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #20, 20	; 0x14000
   10f84:	ldr	pc, [ip, #292]!	; 0x124

00010f88 <rb_new_rawbuffer@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #20, 20	; 0x14000
   10f90:	ldr	pc, [ip, #284]!	; 0x11c

00010f94 <rb_open@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #20, 20	; 0x14000
   10f9c:	ldr	pc, [ip, #276]!	; 0x114

00010fa0 <rb_recv_fd_buf@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #20, 20	; 0x14000
   10fa8:	ldr	pc, [ip, #268]!	; 0x10c

00010fac <dup2@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #260]!	; 0x104

00010fb8 <rb_linebuf_newbuf@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #252]!	; 0xfc

00010fc4 <rb_linebuf_init@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #244]!	; 0xf4

00010fd0 <getrlimit@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #236]!	; 0xec

00010fdc <rb_rawbuf_append@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #228]!	; 0xe4

00010fe8 <rb_rawbuf_flush@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #220]!	; 0xdc

00010ff4 <exit@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #212]!	; 0xd4

00011000 <__errno_location@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #204]!	; 0xcc

0001100c <rb_base64_encode@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #196]!	; 0xc4

Disassembly of section .text:

00011020 <.text>:
   11020:	mov	fp, #0
   11024:	mov	lr, #0
   11028:	pop	{r1}		; (ldr r1, [sp], #4)
   1102c:	mov	r2, sp
   11030:	push	{r2}		; (str r2, [sp, #-4]!)
   11034:	push	{r0}		; (str r0, [sp, #-4]!)
   11038:	ldr	ip, [pc, #16]	; 11050 <rb_base64_encode@plt+0x44>
   1103c:	push	{ip}		; (str ip, [sp, #-4]!)
   11040:	ldr	r0, [pc, #12]	; 11054 <rb_base64_encode@plt+0x48>
   11044:	ldr	r3, [pc, #12]	; 11058 <rb_base64_encode@plt+0x4c>
   11048:	bl	10dfc <__libc_start_main@plt>
   1104c:	bl	10dd8 <abort@plt>
   11050:	andeq	r4, r1, r4, asr r0
   11054:	andeq	r1, r1, r0, lsl r1
   11058:	strdeq	r3, [r1], -r4
   1105c:	ldr	r3, [pc, #20]	; 11078 <rb_base64_encode@plt+0x6c>
   11060:	ldr	r2, [pc, #20]	; 1107c <rb_base64_encode@plt+0x70>
   11064:	add	r3, pc, r3
   11068:	ldr	r2, [r3, r2]
   1106c:	cmp	r2, #0
   11070:	bxeq	lr
   11074:	b	10e14 <__gmon_start__@plt>
   11078:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1107c:	ldrdeq	r0, [r0], -ip
   11080:	ldr	r0, [pc, #24]	; 110a0 <rb_base64_encode@plt+0x94>
   11084:	ldr	r3, [pc, #24]	; 110a4 <rb_base64_encode@plt+0x98>
   11088:	cmp	r3, r0
   1108c:	bxeq	lr
   11090:	ldr	r3, [pc, #16]	; 110a8 <rb_base64_encode@plt+0x9c>
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andeq	r5, r2, r8, ror #1
   110a4:	andeq	r5, r2, r8, ror #1
   110a8:	andeq	r0, r0, r0
   110ac:	ldr	r0, [pc, #36]	; 110d8 <rb_base64_encode@plt+0xcc>
   110b0:	ldr	r1, [pc, #36]	; 110dc <rb_base64_encode@plt+0xd0>
   110b4:	sub	r1, r1, r0
   110b8:	asr	r1, r1, #2
   110bc:	add	r1, r1, r1, lsr #31
   110c0:	asrs	r1, r1, #1
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <rb_base64_encode@plt+0xd4>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	r5, r2, r8, ror #1
   110dc:	andeq	r5, r2, r8, ror #1
   110e0:	andeq	r0, r0, r0
   110e4:	push	{r4, lr}
   110e8:	ldr	r4, [pc, #24]	; 11108 <rb_base64_encode@plt+0xfc>
   110ec:	ldrb	r3, [r4]
   110f0:	cmp	r3, #0
   110f4:	popne	{r4, pc}
   110f8:	bl	11080 <rb_base64_encode@plt+0x74>
   110fc:	mov	r3, #1
   11100:	strb	r3, [r4]
   11104:	pop	{r4, pc}
   11108:	andeq	r5, r2, ip, ror #1
   1110c:	b	110ac <rb_base64_encode@plt+0xa0>
   11110:	push	{fp, lr}
   11114:	mov	fp, sp
   11118:	sub	sp, sp, #24
   1111c:	sub	r1, fp, #8
   11120:	mov	r0, #7
   11124:	bl	10fd0 <getrlimit@plt>
   11128:	ldr	r7, [fp, #-8]
   1112c:	cmp	r0, #0
   11130:	movw	r0, #16484	; 0x4064
   11134:	movt	r0, #1
   11138:	movwne	r7, #65535	; 0xffff
   1113c:	bl	10e38 <getenv@plt>
   11140:	mov	r5, r0
   11144:	movw	r0, #16491	; 0x406b
   11148:	movt	r0, #1
   1114c:	bl	10e38 <getenv@plt>
   11150:	mov	r4, r0
   11154:	movw	r0, #16500	; 0x4074
   11158:	movt	r0, #1
   1115c:	bl	10e38 <getenv@plt>
   11160:	cmp	r5, #0
   11164:	beq	11178 <rb_base64_encode@plt+0x16c>
   11168:	cmp	r4, #0
   1116c:	movne	r8, r0
   11170:	cmpne	r0, #0
   11174:	bne	111b8 <rb_base64_encode@plt+0x1ac>
   11178:	movw	r4, #20712	; 0x50e8
   1117c:	movw	r0, #16509	; 0x407d
   11180:	mov	r1, #52	; 0x34
   11184:	mov	r2, #1
   11188:	movt	r4, #2
   1118c:	movt	r0, #1
   11190:	ldr	r3, [r4]
   11194:	bl	10f4c <fwrite@plt>
   11198:	ldr	r3, [r4]
   1119c:	movw	r0, #16562	; 0x40b2
   111a0:	mov	r1, #49	; 0x31
   111a4:	mov	r2, #1
   111a8:	movt	r0, #1
   111ac:	bl	10f4c <fwrite@plt>
   111b0:	mov	r0, #1
   111b4:	bl	10ff4 <exit@plt>
   111b8:	mov	r0, r5
   111bc:	mov	r1, #0
   111c0:	mov	r2, #10
   111c4:	mov	r6, #0
   111c8:	bl	10f10 <strtol@plt>
   111cc:	mov	r5, r0
   111d0:	mov	r0, r4
   111d4:	mov	r1, #0
   111d8:	mov	r2, #10
   111dc:	bl	10f10 <strtol@plt>
   111e0:	mov	r4, r0
   111e4:	mov	r0, r8
   111e8:	mov	r1, #0
   111ec:	mov	r2, #10
   111f0:	bl	10f10 <strtol@plt>
   111f4:	movw	r8, #44732	; 0xaebc
   111f8:	cmp	r7, #1
   111fc:	movt	r8, #2
   11200:	str	r0, [r8]
   11204:	blt	11240 <rb_base64_encode@plt+0x234>
   11208:	cmp	r5, r6
   1120c:	cmpne	r4, r6
   11210:	bne	11224 <rb_base64_encode@plt+0x218>
   11214:	add	r6, r6, #1
   11218:	cmp	r7, r6
   1121c:	bne	11208 <rb_base64_encode@plt+0x1fc>
   11220:	b	11240 <rb_base64_encode@plt+0x234>
   11224:	cmp	r6, #3
   11228:	bcc	11214 <rb_base64_encode@plt+0x208>
   1122c:	mov	r0, r6
   11230:	bl	10f40 <close@plt>
   11234:	add	r6, r6, #1
   11238:	cmp	r7, r6
   1123c:	bne	11208 <rb_base64_encode@plt+0x1fc>
   11240:	movw	r0, #16612	; 0x40e4
   11244:	mov	r1, #2
   11248:	movt	r0, #1
   1124c:	bl	10da8 <open@plt>
   11250:	cmp	r0, #0
   11254:	blt	11290 <rb_base64_encode@plt+0x284>
   11258:	cmp	r5, #0
   1125c:	mov	r6, r0
   11260:	cmpne	r4, #0
   11264:	bne	11364 <rb_base64_encode@plt+0x358>
   11268:	cmp	r5, #1
   1126c:	cmpne	r4, #1
   11270:	bne	1137c <rb_base64_encode@plt+0x370>
   11274:	cmp	r5, #2
   11278:	cmpne	r4, #2
   1127c:	bne	11394 <rb_base64_encode@plt+0x388>
   11280:	cmp	r6, #3
   11284:	blt	11290 <rb_base64_encode@plt+0x284>
   11288:	mov	r0, r6
   1128c:	bl	10f40 <close@plt>
   11290:	bl	113ac <rb_base64_encode@plt+0x3a0>
   11294:	mov	r0, #4096	; 0x1000
   11298:	mov	r1, #1024	; 0x400
   1129c:	mov	r2, #0
   112a0:	mov	r3, #0
   112a4:	str	r7, [sp]
   112a8:	str	r1, [sp, #4]
   112ac:	str	r0, [sp, #8]
   112b0:	mov	r0, #0
   112b4:	mov	r1, #0
   112b8:	bl	10f7c <rb_lib_init@plt>
   112bc:	mov	r0, #4096	; 0x1000
   112c0:	bl	10fc4 <rb_linebuf_init@plt>
   112c4:	mov	r0, #4096	; 0x1000
   112c8:	bl	10e80 <rb_init_rawbuffers@plt>
   112cc:	mov	r0, #48	; 0x30
   112d0:	bl	1145c <rb_base64_encode@plt+0x450>
   112d4:	movw	r2, #16622	; 0x40ee
   112d8:	str	r0, [r8, #4]
   112dc:	mov	r0, r5
   112e0:	mov	r1, #4
   112e4:	movt	r2, #1
   112e8:	bl	10f94 <rb_open@plt>
   112ec:	ldr	r1, [r8, #4]
   112f0:	movw	r2, #16642	; 0x4102
   112f4:	movt	r2, #1
   112f8:	str	r0, [r1, #16]
   112fc:	mov	r0, r4
   11300:	mov	r1, #8
   11304:	bl	10f94 <rb_open@plt>
   11308:	ldr	r1, [r8, #4]
   1130c:	str	r0, [r1, #20]
   11310:	ldr	r0, [r1, #16]
   11314:	bl	10e50 <rb_set_nb@plt>
   11318:	ldr	r0, [r8, #4]
   1131c:	ldr	r0, [r0, #20]
   11320:	bl	10e50 <rb_set_nb@plt>
   11324:	movw	r0, #16652	; 0x410c
   11328:	movw	r1, #5244	; 0x147c
   1132c:	mov	r2, #0
   11330:	mov	r3, #10
   11334:	movt	r0, #1
   11338:	movt	r1, #1
   1133c:	bl	10de4 <rb_event_addish@plt>
   11340:	ldr	r0, [r8, #4]
   11344:	mov	r1, #0
   11348:	ldr	r0, [r0, #20]
   1134c:	bl	114f0 <rb_base64_encode@plt+0x4e4>
   11350:	ldr	r1, [r8, #4]
   11354:	ldr	r0, [r1, #16]
   11358:	bl	1155c <rb_base64_encode@plt+0x550>
   1135c:	mov	r0, #0
   11360:	bl	10e98 <rb_lib_loop@plt>
   11364:	mov	r0, r6
   11368:	mov	r1, #0
   1136c:	bl	10fac <dup2@plt>
   11370:	cmp	r5, #1
   11374:	cmpne	r4, #1
   11378:	beq	11274 <rb_base64_encode@plt+0x268>
   1137c:	mov	r0, r6
   11380:	mov	r1, #1
   11384:	bl	10fac <dup2@plt>
   11388:	cmp	r5, #2
   1138c:	cmpne	r4, #2
   11390:	beq	11280 <rb_base64_encode@plt+0x274>
   11394:	mov	r0, r6
   11398:	mov	r1, #2
   1139c:	bl	10fac <dup2@plt>
   113a0:	cmp	r6, #3
   113a4:	bge	11288 <rb_base64_encode@plt+0x27c>
   113a8:	b	11290 <rb_base64_encode@plt+0x284>
   113ac:	push	{r4, r5, fp, lr}
   113b0:	add	fp, sp, #8
   113b4:	sub	sp, sp, #144	; 0x90
   113b8:	mov	r0, #1
   113bc:	add	r4, sp, #4
   113c0:	str	r0, [sp, #4]
   113c4:	mov	r0, #0
   113c8:	add	r5, r4, #4
   113cc:	str	r0, [sp, #136]	; 0x88
   113d0:	mov	r0, r5
   113d4:	bl	10db4 <sigemptyset@plt>
   113d8:	mov	r0, r5
   113dc:	mov	r1, #13
   113e0:	bl	10f1c <sigaddset@plt>
   113e4:	mov	r0, r5
   113e8:	mov	r1, #14
   113ec:	bl	10f1c <sigaddset@plt>
   113f0:	mov	r0, r5
   113f4:	mov	r1, #5
   113f8:	bl	10f1c <sigaddset@plt>
   113fc:	mov	r0, r5
   11400:	mov	r1, #28
   11404:	bl	10f1c <sigaddset@plt>
   11408:	mov	r0, #28
   1140c:	mov	r1, r4
   11410:	mov	r2, #0
   11414:	bl	10f70 <sigaction@plt>
   11418:	mov	r0, #13
   1141c:	mov	r1, r4
   11420:	mov	r2, #0
   11424:	bl	10f70 <sigaction@plt>
   11428:	mov	r0, #5
   1142c:	mov	r1, r4
   11430:	mov	r2, #0
   11434:	bl	10f70 <sigaction@plt>
   11438:	movw	r0, #6396	; 0x18fc
   1143c:	mov	r1, r4
   11440:	mov	r2, #0
   11444:	movt	r0, #1
   11448:	str	r0, [sp, #4]
   1144c:	mov	r0, #14
   11450:	bl	10f70 <sigaction@plt>
   11454:	sub	sp, fp, #8
   11458:	pop	{r4, r5, fp, pc}
   1145c:	push	{fp, lr}
   11460:	mov	fp, sp
   11464:	mov	r1, r0
   11468:	mov	r0, #1
   1146c:	bl	10e44 <calloc@plt>
   11470:	cmp	r0, #0
   11474:	popne	{fp, pc}
   11478:	bl	10f58 <rb_outofmemory@plt>
   1147c:	push	{r4, r5, r6, sl, fp, lr}
   11480:	add	fp, sp, #16
   11484:	movw	r5, #20720	; 0x50f0
   11488:	movt	r5, #2
   1148c:	ldr	r6, [r5]
   11490:	cmp	r6, #0
   11494:	bne	114ac <rb_base64_encode@plt+0x4a0>
   11498:	b	114e0 <rb_base64_encode@plt+0x4d4>
   1149c:	mov	r0, r4
   114a0:	bl	10e8c <free@plt>
   114a4:	cmp	r6, #0
   114a8:	beq	114e0 <rb_base64_encode@plt+0x4d4>
   114ac:	ldr	r4, [r6]
   114b0:	ldr	r6, [r6, #8]
   114b4:	add	r0, r4, #52	; 0x34
   114b8:	bl	10eec <rb_linebuf_donebuf@plt>
   114bc:	add	r0, r4, #24
   114c0:	bl	10eec <rb_linebuf_donebuf@plt>
   114c4:	ldr	r0, [r4, #20]
   114c8:	bl	10f34 <rb_free_rawbuffer@plt>
   114cc:	ldr	r0, [r4, #16]
   114d0:	bl	10f34 <rb_free_rawbuffer@plt>
   114d4:	cmp	r4, #0
   114d8:	bne	1149c <rb_base64_encode@plt+0x490>
   114dc:	b	114a4 <rb_base64_encode@plt+0x498>
   114e0:	mov	r0, #0
   114e4:	str	r0, [r5]
   114e8:	str	r0, [r5, #4]
   114ec:	pop	{r4, r5, r6, sl, fp, pc}
   114f0:	push	{r4, r5, r6, r7, fp, lr}
   114f4:	add	fp, sp, #16
   114f8:	sub	sp, sp, #16384	; 0x4000
   114fc:	mov	r4, r0
   11500:	mov	r5, sp
   11504:	mov	r0, r4
   11508:	mov	r1, r5
   1150c:	mov	r2, #16384	; 0x4000
   11510:	bl	10ea4 <rb_read@plt>
   11514:	cmp	r0, #0
   11518:	bgt	11504 <rb_base64_encode@plt+0x4f8>
   1151c:	beq	11554 <rb_base64_encode@plt+0x548>
   11520:	bl	11000 <__errno_location@plt>
   11524:	ldr	r0, [r0]
   11528:	bl	10df0 <rb_ignore_errno@plt>
   1152c:	cmp	r0, #0
   11530:	beq	11554 <rb_base64_encode@plt+0x548>
   11534:	movw	r2, #5360	; 0x14f0
   11538:	mov	r0, r4
   1153c:	mov	r1, #1
   11540:	mov	r3, #0
   11544:	movt	r2, #1
   11548:	bl	10e08 <rb_setselect@plt>
   1154c:	sub	sp, fp, #16
   11550:	pop	{r4, r5, r6, r7, fp, pc}
   11554:	mov	r0, #0
   11558:	bl	10ff4 <exit@plt>
   1155c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11560:	add	fp, sp, #28
   11564:	sub	sp, sp, #12
   11568:	mov	r4, r1
   1156c:	mov	r0, #1
   11570:	mov	r1, #40	; 0x28
   11574:	bl	10e44 <calloc@plt>
   11578:	cmp	r0, #0
   1157c:	beq	118f0 <rb_base64_encode@plt+0x8e4>
   11580:	mov	r5, r0
   11584:	add	r0, r4, #24
   11588:	mov	r8, #16384	; 0x4000
   1158c:	mov	r7, #4
   11590:	mov	r9, #0
   11594:	str	r0, [sp, #8]
   11598:	mov	r0, #1
   1159c:	mov	r1, #16384	; 0x4000
   115a0:	bl	10e44 <calloc@plt>
   115a4:	cmp	r0, #0
   115a8:	beq	118f0 <rb_base64_encode@plt+0x8e4>
   115ac:	str	r0, [r5, #12]
   115b0:	str	r8, [r5, #16]
   115b4:	mov	r1, r0
   115b8:	add	r3, r5, #20
   115bc:	mov	r2, #16384	; 0x4000
   115c0:	ldr	r0, [r4, #16]
   115c4:	str	r7, [sp]
   115c8:	bl	10fa0 <rb_recv_fd_buf@plt>
   115cc:	mov	r6, r0
   115d0:	cmp	r0, #0
   115d4:	ble	11690 <rb_base64_encode@plt+0x684>
   115d8:	str	r6, [r5, #16]
   115dc:	ldr	r0, [r4, #28]
   115e0:	str	r5, [r5]
   115e4:	cmp	r0, #0
   115e8:	stmib	r5, {r0, r9}
   115ec:	beq	115fc <rb_base64_encode@plt+0x5f0>
   115f0:	add	r0, r0, #8
   115f4:	str	r5, [r0]
   115f8:	b	1160c <rb_base64_encode@plt+0x600>
   115fc:	ldr	r0, [sp, #8]
   11600:	ldr	r0, [r0]
   11604:	cmp	r0, #0
   11608:	beq	11688 <rb_base64_encode@plt+0x67c>
   1160c:	str	r5, [r4, #28]
   11610:	ldr	r0, [r4, #32]
   11614:	add	r0, r0, #1
   11618:	str	r0, [r4, #32]
   1161c:	ldr	r0, [r5, #20]
   11620:	cmp	r0, #0
   11624:	beq	11654 <rb_base64_encode@plt+0x648>
   11628:	ldr	r0, [r5, #24]
   1162c:	cmp	r0, #0
   11630:	beq	1165c <rb_base64_encode@plt+0x650>
   11634:	ldr	r0, [r5, #28]
   11638:	cmp	r0, #0
   1163c:	beq	11664 <rb_base64_encode@plt+0x658>
   11640:	ldr	r0, [r5, #32]
   11644:	cmp	r0, #0
   11648:	mov	r0, #4
   1164c:	movweq	r0, #3
   11650:	b	11668 <rb_base64_encode@plt+0x65c>
   11654:	mov	r0, #0
   11658:	b	11668 <rb_base64_encode@plt+0x65c>
   1165c:	mov	r0, #1
   11660:	b	11668 <rb_base64_encode@plt+0x65c>
   11664:	mov	r0, #2
   11668:	str	r0, [r5, #36]	; 0x24
   1166c:	mov	r0, #1
   11670:	mov	r1, #40	; 0x28
   11674:	bl	10e44 <calloc@plt>
   11678:	mov	r5, r0
   1167c:	cmp	r0, #0
   11680:	bne	11598 <rb_base64_encode@plt+0x58c>
   11684:	b	118f0 <rb_base64_encode@plt+0x8e4>
   11688:	ldr	r0, [sp, #8]
   1168c:	b	115f4 <rb_base64_encode@plt+0x5e8>
   11690:	ldr	r0, [r5, #12]
   11694:	cmp	r0, #0
   11698:	beq	116a0 <rb_base64_encode@plt+0x694>
   1169c:	bl	10e8c <free@plt>
   116a0:	mov	r0, r5
   116a4:	bl	10e8c <free@plt>
   116a8:	cmp	r6, #0
   116ac:	beq	118f4 <rb_base64_encode@plt+0x8e8>
   116b0:	bl	11000 <__errno_location@plt>
   116b4:	ldr	r0, [r0]
   116b8:	bl	10df0 <rb_ignore_errno@plt>
   116bc:	cmp	r0, #0
   116c0:	beq	118f4 <rb_base64_encode@plt+0x8e8>
   116c4:	ldr	r0, [sp, #8]
   116c8:	ldr	sl, [r0]
   116cc:	cmp	sl, #0
   116d0:	beq	118d0 <rb_base64_encode@plt+0x8c4>
   116d4:	mov	r8, #0
   116d8:	ldr	r5, [sl]
   116dc:	ldr	r9, [sl, #8]
   116e0:	ldr	r0, [r5, #12]
   116e4:	ldrb	r0, [r0]
   116e8:	cmp	r0, #65	; 0x41
   116ec:	bne	11870 <rb_base64_encode@plt+0x864>
   116f0:	ldr	r0, [r5, #36]	; 0x24
   116f4:	cmp	r0, #2
   116f8:	bne	117c4 <rb_base64_encode@plt+0x7b8>
   116fc:	ldr	r0, [r5, #16]
   11700:	cmp	r0, #5
   11704:	bne	117cc <rb_base64_encode@plt+0x7c0>
   11708:	ldr	r7, [r5, #20]
   1170c:	ldr	r8, [r5, #24]
   11710:	mov	r0, #1
   11714:	mov	r1, #168	; 0xa8
   11718:	bl	10e44 <calloc@plt>
   1171c:	cmp	r0, #0
   11720:	beq	118f0 <rb_base64_encode@plt+0x8e4>
   11724:	mov	r6, r0
   11728:	str	r4, [r0, #12]
   1172c:	mvn	r0, #0
   11730:	add	r1, r6, #80	; 0x50
   11734:	stm	r1, {r0, r7, r8}
   11738:	mov	r0, r7
   1173c:	bl	10e50 <rb_set_nb@plt>
   11740:	mov	r0, r8
   11744:	bl	10e50 <rb_set_nb@plt>
   11748:	add	r0, r6, #52	; 0x34
   1174c:	bl	10fb8 <rb_linebuf_newbuf@plt>
   11750:	add	r0, r6, #24
   11754:	bl	10fb8 <rb_linebuf_newbuf@plt>
   11758:	bl	10f88 <rb_new_rawbuffer@plt>
   1175c:	str	r0, [r6, #20]
   11760:	bl	10f88 <rb_new_rawbuffer@plt>
   11764:	str	r0, [r6, #16]
   11768:	movw	r1, #19923	; 0x4dd3
   1176c:	movw	r7, #20732	; 0x50fc
   11770:	mov	r8, #0
   11774:	ldr	r0, [r5, #12]
   11778:	movt	r1, #4194	; 0x1062
   1177c:	movt	r7, #2
   11780:	ldr	r0, [r0, #1]
   11784:	umull	r1, r2, r0, r1
   11788:	str	r0, [r6, #80]	; 0x50
   1178c:	str	r6, [r6]
   11790:	str	r8, [r6, #4]
   11794:	lsr	r1, r2, #7
   11798:	mov	r2, #2000	; 0x7d0
   1179c:	mls	r0, r1, r2, r0
   117a0:	mov	r1, r7
   117a4:	add	r0, r0, r0, lsl #1
   117a8:	ldr	r2, [r1, r0, lsl #2]!
   117ac:	cmp	r2, #0
   117b0:	str	r2, [r6, #8]
   117b4:	beq	117f0 <rb_base64_encode@plt+0x7e4>
   117b8:	add	r2, r2, #4
   117bc:	str	r6, [r2]
   117c0:	b	11800 <rb_base64_encode@plt+0x7f4>
   117c4:	cmp	r0, #1
   117c8:	blt	11870 <rb_base64_encode@plt+0x864>
   117cc:	add	r6, r5, #20
   117d0:	mov	r7, #0
   117d4:	ldr	r0, [r6, r7, lsl #2]
   117d8:	bl	10f04 <rb_close@plt>
   117dc:	ldr	r0, [r5, #36]	; 0x24
   117e0:	add	r7, r7, #1
   117e4:	cmp	r7, r0
   117e8:	blt	117d4 <rb_base64_encode@plt+0x7c8>
   117ec:	b	11870 <rb_base64_encode@plt+0x864>
   117f0:	add	r2, r7, r0, lsl #2
   117f4:	ldr	r3, [r2, #4]!
   117f8:	cmp	r3, #0
   117fc:	streq	r6, [r2]
   11800:	str	r6, [r1]
   11804:	add	r0, r7, r0, lsl #2
   11808:	ldr	r1, [r0, #8]
   1180c:	add	r1, r1, #1
   11810:	str	r1, [r0, #8]
   11814:	ldrb	r0, [r6, #128]	; 0x80
   11818:	orr	r0, r0, #4
   1181c:	strb	r0, [r6, #128]	; 0x80
   11820:	ldr	r0, [r6, #84]	; 0x54
   11824:	bl	10dcc <rb_get_type@plt>
   11828:	tst	r0, #64	; 0x40
   1182c:	beq	1183c <rb_base64_encode@plt+0x830>
   11830:	ldr	r0, [r6, #84]	; 0x54
   11834:	mov	r1, #4
   11838:	bl	10eb0 <rb_set_type@plt>
   1183c:	ldr	r0, [r6, #88]	; 0x58
   11840:	bl	10dcc <rb_get_type@plt>
   11844:	cmp	r0, #64	; 0x40
   11848:	bne	11858 <rb_base64_encode@plt+0x84c>
   1184c:	ldr	r0, [r6, #88]	; 0x58
   11850:	mov	r1, #4
   11854:	bl	10eb0 <rb_set_type@plt>
   11858:	ldr	r0, [r6, #84]	; 0x54
   1185c:	mov	r1, r6
   11860:	bl	11900 <rb_base64_encode@plt+0x8f4>
   11864:	ldr	r0, [r6, #88]	; 0x58
   11868:	mov	r1, r6
   1186c:	bl	11a34 <rb_base64_encode@plt+0xa28>
   11870:	ldr	r0, [sl, #8]
   11874:	ldr	r1, [sl, #4]
   11878:	ldr	r2, [sp, #8]
   1187c:	cmp	r0, #0
   11880:	streq	r1, [r4, #28]
   11884:	strne	r1, [r0, #4]
   11888:	ldrne	r1, [sl, #4]
   1188c:	cmp	r1, #0
   11890:	addne	r2, r1, #8
   11894:	str	r0, [r2]
   11898:	str	r8, [sl, #4]
   1189c:	str	r8, [sl, #8]
   118a0:	ldr	r0, [r4, #32]
   118a4:	sub	r0, r0, #1
   118a8:	str	r0, [r4, #32]
   118ac:	ldr	r0, [r5, #12]
   118b0:	cmp	r0, #0
   118b4:	beq	118bc <rb_base64_encode@plt+0x8b0>
   118b8:	bl	10e8c <free@plt>
   118bc:	mov	r0, r5
   118c0:	bl	10e8c <free@plt>
   118c4:	cmp	r9, #0
   118c8:	mov	sl, r9
   118cc:	bne	116d8 <rb_base64_encode@plt+0x6cc>
   118d0:	ldr	r0, [r4, #16]
   118d4:	movw	r2, #5468	; 0x155c
   118d8:	mov	r1, #1
   118dc:	mov	r3, r4
   118e0:	movt	r2, #1
   118e4:	sub	sp, fp, #28
   118e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118ec:	b	10e08 <rb_setselect@plt>
   118f0:	bl	10f58 <rb_outofmemory@plt>
   118f4:	mov	r0, #0
   118f8:	bl	10ff4 <exit@plt>
   118fc:	bx	lr
   11900:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11904:	add	fp, sp, #24
   11908:	sub	sp, sp, #16384	; 0x4000
   1190c:	mov	r4, r1
   11910:	mov	r5, r0
   11914:	mov	r0, sp
   11918:	mov	r1, #0
   1191c:	mov	r2, #16384	; 0x4000
   11920:	bl	10e5c <memset@plt>
   11924:	cmp	r4, #0
   11928:	beq	119b0 <rb_base64_encode@plt+0x9a4>
   1192c:	ldrb	r0, [r4, #128]	; 0x80
   11930:	tst	r0, #2
   11934:	bne	119b0 <rb_base64_encode@plt+0x9a4>
   11938:	bne	119b0 <rb_base64_encode@plt+0x9a4>
   1193c:	mov	r6, sp
   11940:	mov	r0, r5
   11944:	mov	r1, r6
   11948:	mov	r2, #16384	; 0x4000
   1194c:	bl	10ea4 <rb_read@plt>
   11950:	cmn	r0, #1
   11954:	ble	119b8 <rb_base64_encode@plt+0x9ac>
   11958:	mov	r7, r0
   1195c:	cmp	r0, #0
   11960:	beq	119f8 <rb_base64_encode@plt+0x9ec>
   11964:	ldr	r0, [r4, #20]
   11968:	mov	r1, r6
   1196c:	mov	r2, r7
   11970:	bl	10fdc <rb_rawbuf_append@plt>
   11974:	ldrb	r0, [r4, #128]	; 0x80
   11978:	tst	r0, #8
   1197c:	bne	11994 <rb_base64_encode@plt+0x988>
   11980:	mov	r0, r4
   11984:	bl	11ebc <rb_base64_encode@plt+0xeb0>
   11988:	cmp	r7, #16384	; 0x4000
   1198c:	bcs	119a4 <rb_base64_encode@plt+0x998>
   11990:	b	11a14 <rb_base64_encode@plt+0xa08>
   11994:	mov	r0, r4
   11998:	bl	120c8 <rb_base64_encode@plt+0x10bc>
   1199c:	cmp	r7, #16384	; 0x4000
   119a0:	bcc	11a14 <rb_base64_encode@plt+0xa08>
   119a4:	ldrb	r0, [r4, #128]	; 0x80
   119a8:	tst	r0, #2
   119ac:	beq	11940 <rb_base64_encode@plt+0x934>
   119b0:	sub	sp, fp, #24
   119b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   119b8:	bl	11000 <__errno_location@plt>
   119bc:	ldr	r0, [r0]
   119c0:	bl	10df0 <rb_ignore_errno@plt>
   119c4:	cmp	r0, #0
   119c8:	beq	119f8 <rb_base64_encode@plt+0x9ec>
   119cc:	movw	r2, #6400	; 0x1900
   119d0:	mov	r0, r5
   119d4:	mov	r1, #1
   119d8:	mov	r3, r4
   119dc:	movt	r2, #1
   119e0:	bl	10e08 <rb_setselect@plt>
   119e4:	ldr	r0, [r4, #88]	; 0x58
   119e8:	mov	r1, r4
   119ec:	bl	11b9c <rb_base64_encode@plt+0xb90>
   119f0:	sub	sp, fp, #24
   119f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   119f8:	movw	r2, #16669	; 0x411d
   119fc:	mov	r0, r4
   11a00:	mov	r1, #0
   11a04:	movt	r2, #1
   11a08:	bl	11c64 <rb_base64_encode@plt+0xc58>
   11a0c:	sub	sp, fp, #24
   11a10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11a14:	movw	r2, #6400	; 0x1900
   11a18:	mov	r0, r5
   11a1c:	mov	r1, #1
   11a20:	mov	r3, r4
   11a24:	movt	r2, #1
   11a28:	bl	10e08 <rb_setselect@plt>
   11a2c:	sub	sp, fp, #24
   11a30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11a34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11a38:	add	fp, sp, #24
   11a3c:	sub	sp, sp, #16384	; 0x4000
   11a40:	mov	r4, r1
   11a44:	mov	r0, sp
   11a48:	mov	r1, #0
   11a4c:	mov	r2, #16384	; 0x4000
   11a50:	bl	10e5c <memset@plt>
   11a54:	cmp	r4, #0
   11a58:	beq	11b6c <rb_base64_encode@plt+0xb60>
   11a5c:	ldrb	r0, [r4, #128]	; 0x80
   11a60:	tst	r0, #2
   11a64:	bne	11b6c <rb_base64_encode@plt+0xb60>
   11a68:	ldr	r0, [r4, #16]
   11a6c:	bl	10f28 <rb_rawbuf_length@plt>
   11a70:	cmp	r0, #4096	; 0x1000
   11a74:	blt	11ab8 <rb_base64_encode@plt+0xaac>
   11a78:	ldrb	r0, [r4, #128]	; 0x80
   11a7c:	mov	r1, #1
   11a80:	mov	r2, #0
   11a84:	mov	r3, #0
   11a88:	orr	r0, r0, #1
   11a8c:	strb	r0, [r4, #128]	; 0x80
   11a90:	ldr	r0, [r4, #88]	; 0x58
   11a94:	bl	10e08 <rb_setselect@plt>
   11a98:	ldrb	r0, [r4, #128]	; 0x80
   11a9c:	tst	r0, #8
   11aa0:	beq	11b6c <rb_base64_encode@plt+0xb60>
   11aa4:	ldr	r0, [r4, #84]	; 0x54
   11aa8:	mov	r1, r4
   11aac:	bl	12554 <rb_base64_encode@plt+0x1548>
   11ab0:	sub	sp, fp, #24
   11ab4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11ab8:	add	r5, r4, #52	; 0x34
   11abc:	add	r7, r4, #112	; 0x70
   11ac0:	mov	r6, sp
   11ac4:	ldrb	r0, [r4, #128]	; 0x80
   11ac8:	tst	r0, #2
   11acc:	bne	11b6c <rb_base64_encode@plt+0xb60>
   11ad0:	ldr	r0, [r4, #88]	; 0x58
   11ad4:	mov	r1, r6
   11ad8:	mov	r2, #16384	; 0x4000
   11adc:	bl	10ea4 <rb_read@plt>
   11ae0:	cmp	r0, #0
   11ae4:	beq	11b74 <rb_base64_encode@plt+0xb68>
   11ae8:	mov	r2, r0
   11aec:	cmn	r0, #1
   11af0:	ble	11b34 <rb_base64_encode@plt+0xb28>
   11af4:	ldrd	r0, [r7]
   11af8:	mov	r3, #0
   11afc:	adds	r0, r0, r2
   11b00:	adc	r1, r1, r2, asr #31
   11b04:	strd	r0, [r7]
   11b08:	mov	r0, r5
   11b0c:	mov	r1, r6
   11b10:	bl	10e68 <rb_linebuf_parse@plt>
   11b14:	ldrb	r0, [r4, #128]	; 0x80
   11b18:	tst	r0, #2
   11b1c:	bne	11b6c <rb_base64_encode@plt+0xb60>
   11b20:	ldr	r0, [r4, #16]
   11b24:	bl	10f28 <rb_rawbuf_length@plt>
   11b28:	cmp	r0, #4096	; 0x1000
   11b2c:	blt	11ac4 <rb_base64_encode@plt+0xab8>
   11b30:	b	11a78 <rb_base64_encode@plt+0xa6c>
   11b34:	bl	11000 <__errno_location@plt>
   11b38:	ldr	r0, [r0]
   11b3c:	bl	10df0 <rb_ignore_errno@plt>
   11b40:	cmp	r0, #0
   11b44:	beq	11b74 <rb_base64_encode@plt+0xb68>
   11b48:	ldr	r0, [r4, #88]	; 0x58
   11b4c:	movw	r2, #6708	; 0x1a34
   11b50:	mov	r1, #1
   11b54:	mov	r3, r4
   11b58:	movt	r2, #1
   11b5c:	bl	10e08 <rb_setselect@plt>
   11b60:	ldrb	r0, [r4, #128]	; 0x80
   11b64:	tst	r0, #8
   11b68:	bne	11b8c <rb_base64_encode@plt+0xb80>
   11b6c:	sub	sp, fp, #24
   11b70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11b74:	mov	r0, r4
   11b78:	mov	r1, #0
   11b7c:	mov	r2, #0
   11b80:	bl	11c64 <rb_base64_encode@plt+0xc58>
   11b84:	sub	sp, fp, #24
   11b88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11b8c:	mov	r0, r4
   11b90:	bl	1234c <rb_base64_encode@plt+0x1340>
   11b94:	sub	sp, fp, #24
   11b98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11b9c:	push	{r4, r5, r6, r7, fp, lr}
   11ba0:	add	fp, sp, #16
   11ba4:	mov	r5, r0
   11ba8:	ldrb	r0, [r1, #128]	; 0x80
   11bac:	tst	r0, #2
   11bb0:	popne	{r4, r5, r6, r7, fp, pc}
   11bb4:	add	r6, r1, #24
   11bb8:	mov	r4, r1
   11bbc:	mov	r0, r5
   11bc0:	mov	r1, r6
   11bc4:	bl	10ec8 <rb_linebuf_flush@plt>
   11bc8:	cmp	r0, #1
   11bcc:	blt	11bf8 <rb_base64_encode@plt+0xbec>
   11bd0:	add	r7, r4, #120	; 0x78
   11bd4:	ldrd	r2, [r7]
   11bd8:	mov	r1, r6
   11bdc:	adds	r2, r2, r0
   11be0:	adc	r3, r3, r0, asr #31
   11be4:	mov	r0, r5
   11be8:	strd	r2, [r7]
   11bec:	bl	10ec8 <rb_linebuf_flush@plt>
   11bf0:	cmp	r0, #0
   11bf4:	bgt	11bd4 <rb_base64_encode@plt+0xbc8>
   11bf8:	cmp	r0, #0
   11bfc:	beq	11c3c <rb_base64_encode@plt+0xc30>
   11c00:	bl	11000 <__errno_location@plt>
   11c04:	ldr	r0, [r0]
   11c08:	bl	10df0 <rb_ignore_errno@plt>
   11c0c:	cmp	r0, #0
   11c10:	beq	11c3c <rb_base64_encode@plt+0xc30>
   11c14:	ldr	r1, [r4, #40]	; 0x28
   11c18:	ldr	r0, [r4, #88]	; 0x58
   11c1c:	cmp	r1, #1
   11c20:	blt	11c50 <rb_base64_encode@plt+0xc44>
   11c24:	movw	r2, #7068	; 0x1b9c
   11c28:	mov	r1, #2
   11c2c:	mov	r3, r4
   11c30:	movt	r2, #1
   11c34:	pop	{r4, r5, r6, r7, fp, lr}
   11c38:	b	10e08 <rb_setselect@plt>
   11c3c:	mov	r0, r4
   11c40:	mov	r1, #0
   11c44:	mov	r2, #0
   11c48:	pop	{r4, r5, r6, r7, fp, lr}
   11c4c:	b	11c64 <rb_base64_encode@plt+0xc58>
   11c50:	mov	r1, #2
   11c54:	mov	r2, #0
   11c58:	mov	r3, #0
   11c5c:	pop	{r4, r5, r6, r7, fp, lr}
   11c60:	b	10e08 <rb_setselect@plt>
   11c64:	sub	sp, sp, #4
   11c68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c6c:	add	fp, sp, #24
   11c70:	sub	sp, sp, #388	; 0x184
   11c74:	str	r3, [fp, #8]
   11c78:	mov	r4, r0
   11c7c:	ldrb	r0, [r0, #128]	; 0x80
   11c80:	tst	r0, #2
   11c84:	bne	11e6c <rb_base64_encode@plt+0xe60>
   11c88:	tst	r0, #8
   11c8c:	mov	r5, r2
   11c90:	mov	r6, r1
   11c94:	movne	r0, r4
   11c98:	blne	1234c <rb_base64_encode@plt+0x1340>
   11c9c:	ldr	r0, [r4, #16]
   11ca0:	ldr	r1, [r4, #84]	; 0x54
   11ca4:	bl	10fe8 <rb_rawbuf_flush@plt>
   11ca8:	ldr	r0, [r4, #88]	; 0x58
   11cac:	add	r1, r4, #24
   11cb0:	bl	10ec8 <rb_linebuf_flush@plt>
   11cb4:	ldr	r0, [r4, #84]	; 0x54
   11cb8:	bl	10f04 <rb_close@plt>
   11cbc:	ldrb	r0, [r4, #128]	; 0x80
   11cc0:	movw	r3, #19923	; 0x4dd3
   11cc4:	movt	r3, #4194	; 0x1062
   11cc8:	orr	r0, r0, #2
   11ccc:	strb	r0, [r4, #128]	; 0x80
   11cd0:	ldr	r2, [r4, #80]	; 0x50
   11cd4:	ldr	r0, [r4, #8]
   11cd8:	ldr	r1, [r4, #4]
   11cdc:	umull	r3, r7, r2, r3
   11ce0:	cmp	r0, #0
   11ce4:	lsr	r3, r7, #7
   11ce8:	mov	r7, #2000	; 0x7d0
   11cec:	mls	r2, r3, r7, r2
   11cf0:	movw	r3, #20732	; 0x50fc
   11cf4:	mov	r7, #0
   11cf8:	add	r2, r2, r2, lsl #1
   11cfc:	movt	r3, #2
   11d00:	add	r2, r3, r2, lsl #2
   11d04:	streq	r1, [r2, #4]
   11d08:	strne	r1, [r0, #4]
   11d0c:	mov	r3, r2
   11d10:	ldrne	r1, [r4, #4]
   11d14:	cmp	r1, #0
   11d18:	addne	r3, r1, #8
   11d1c:	cmp	r6, #0
   11d20:	str	r0, [r3]
   11d24:	str	r7, [r4, #4]
   11d28:	str	r7, [r4, #8]
   11d2c:	cmpne	r5, #0
   11d30:	ldr	r0, [r2, #8]
   11d34:	sub	r0, r0, #1
   11d38:	str	r0, [r2, #8]
   11d3c:	ldr	r0, [r4, #88]	; 0x58
   11d40:	bne	11d70 <rb_base64_encode@plt+0xd64>
   11d44:	bl	10f04 <rb_close@plt>
   11d48:	movw	r0, #20720	; 0x50f0
   11d4c:	stm	r4, {r4, r7}
   11d50:	movt	r0, #2
   11d54:	ldr	r1, [r0]
   11d58:	cmp	r1, #0
   11d5c:	str	r1, [r4, #8]
   11d60:	beq	11e4c <rb_base64_encode@plt+0xe40>
   11d64:	add	r1, r1, #4
   11d68:	str	r4, [r1]
   11d6c:	b	11e5c <rb_base64_encode@plt+0xe50>
   11d70:	movw	r2, #9348	; 0x2484
   11d74:	mov	r1, #1
   11d78:	mov	r3, r4
   11d7c:	movt	r2, #1
   11d80:	bl	10e08 <rb_setselect@plt>
   11d84:	ldr	r0, [r4, #88]	; 0x58
   11d88:	mov	r1, #2
   11d8c:	mov	r2, #0
   11d90:	mov	r3, #0
   11d94:	bl	10e08 <rb_setselect@plt>
   11d98:	sub	r6, fp, #156	; 0x9c
   11d9c:	add	r3, fp, #8
   11da0:	mov	r1, #128	; 0x80
   11da4:	mov	r2, r5
   11da8:	mov	r0, r6
   11dac:	str	r3, [fp, #-28]	; 0xffffffe4
   11db0:	bl	10e2c <vsnprintf@plt>
   11db4:	mov	r0, #68	; 0x44
   11db8:	mov	r1, r6
   11dbc:	mov	r2, #251	; 0xfb
   11dc0:	strb	r0, [sp]
   11dc4:	ldr	r0, [r4, #80]	; 0x50
   11dc8:	str	r0, [sp, #1]
   11dcc:	mov	r0, sp
   11dd0:	orr	r0, r0, #5
   11dd4:	bl	10e74 <rb_strlcpy@plt>
   11dd8:	mov	r0, r6
   11ddc:	bl	10ed4 <strlen@plt>
   11de0:	ldr	r4, [r4, #12]
   11de4:	mov	r6, r0
   11de8:	mov	r0, #1
   11dec:	mov	r1, #40	; 0x28
   11df0:	bl	10e44 <calloc@plt>
   11df4:	cmp	r0, #0
   11df8:	beq	11eb8 <rb_base64_encode@plt+0xeac>
   11dfc:	add	r6, r6, #6
   11e00:	mov	r5, r0
   11e04:	mov	r0, #1
   11e08:	mov	r1, r6
   11e0c:	bl	10e44 <calloc@plt>
   11e10:	cmp	r0, #0
   11e14:	beq	11eb8 <rb_base64_encode@plt+0xeac>
   11e18:	mov	r1, sp
   11e1c:	mov	r2, r6
   11e20:	str	r0, [r5, #12]
   11e24:	str	r6, [r5, #16]
   11e28:	bl	10ee0 <memcpy@plt>
   11e2c:	str	r5, [r5]
   11e30:	ldr	r0, [r4, #40]	; 0x28
   11e34:	cmp	r0, #0
   11e38:	str	r0, [r5, #4]
   11e3c:	beq	11e7c <rb_base64_encode@plt+0xe70>
   11e40:	add	r0, r0, #8
   11e44:	str	r5, [r0]
   11e48:	b	11e8c <rb_base64_encode@plt+0xe80>
   11e4c:	mov	r1, r0
   11e50:	ldr	r2, [r1, #4]!
   11e54:	cmp	r2, #0
   11e58:	streq	r4, [r1]
   11e5c:	str	r4, [r0]
   11e60:	ldr	r1, [r0, #8]
   11e64:	add	r1, r1, #1
   11e68:	str	r1, [r0, #8]
   11e6c:	sub	sp, fp, #24
   11e70:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   11e74:	add	sp, sp, #4
   11e78:	bx	lr
   11e7c:	mov	r0, r4
   11e80:	ldr	r1, [r0, #36]!	; 0x24
   11e84:	cmp	r1, #0
   11e88:	streq	r5, [r0]
   11e8c:	str	r5, [r4, #40]	; 0x28
   11e90:	ldr	r1, [r4, #44]	; 0x2c
   11e94:	ldr	r0, [r4, #16]
   11e98:	add	r1, r1, #1
   11e9c:	str	r1, [r4, #44]	; 0x2c
   11ea0:	mov	r1, r4
   11ea4:	bl	1268c <rb_base64_encode@plt+0x1680>
   11ea8:	sub	sp, fp, #24
   11eac:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   11eb0:	add	sp, sp, #4
   11eb4:	bx	lr
   11eb8:	bl	10f58 <rb_outofmemory@plt>
   11ebc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ec0:	add	fp, sp, #28
   11ec4:	sub	sp, sp, #124	; 0x7c
   11ec8:	sub	sp, sp, #16384	; 0x4000
   11ecc:	add	r5, sp, #120	; 0x78
   11ed0:	mov	sl, r0
   11ed4:	mov	r1, #0
   11ed8:	mov	r2, #16384	; 0x4000
   11edc:	mov	r8, #0
   11ee0:	mov	r0, r5
   11ee4:	bl	10e5c <memset@plt>
   11ee8:	ldr	r0, [sl, #20]
   11eec:	mov	r1, r5
   11ef0:	mov	r2, #16384	; 0x4000
   11ef4:	bl	10f64 <rb_rawbuf_get@plt>
   11ef8:	add	r7, sl, #128	; 0x80
   11efc:	cmp	r0, #0
   11f00:	beq	11fbc <rb_base64_encode@plt+0xfb0>
   11f04:	movw	r9, #16737	; 0x4161
   11f08:	add	r6, sl, #129	; 0x81
   11f0c:	add	r4, r5, #16384	; 0x4000
   11f10:	movt	r9, #1
   11f14:	mov	r0, r5
   11f18:	mov	r1, r9
   11f1c:	bl	10ef8 <rb_strcasestr@plt>
   11f20:	cmp	r0, #0
   11f24:	beq	11fa4 <rb_base64_encode@plt+0xf98>
   11f28:	add	r1, r0, #18
   11f2c:	cmp	r1, r4
   11f30:	bcc	11f44 <rb_base64_encode@plt+0xf38>
   11f34:	b	11f54 <rb_base64_encode@plt+0xf48>
   11f38:	add	r1, r1, #1
   11f3c:	cmp	r1, r4
   11f40:	bcs	11f54 <rb_base64_encode@plt+0xf48>
   11f44:	ldrb	r0, [r1]
   11f48:	cmp	r0, #32
   11f4c:	cmpne	r0, #9
   11f50:	beq	11f38 <rb_base64_encode@plt+0xf2c>
   11f54:	cmp	r1, r4
   11f58:	bcs	11f8c <rb_base64_encode@plt+0xf80>
   11f5c:	mov	r0, r1
   11f60:	ldrb	r2, [r0]
   11f64:	cmp	r2, #0
   11f68:	beq	11f8c <rb_base64_encode@plt+0xf80>
   11f6c:	cmp	r2, #13
   11f70:	cmpne	r2, #10
   11f74:	beq	11f88 <rb_base64_encode@plt+0xf7c>
   11f78:	add	r0, r0, #1
   11f7c:	cmp	r0, r4
   11f80:	bcc	11f60 <rb_base64_encode@plt+0xf54>
   11f84:	b	11f8c <rb_base64_encode@plt+0xf80>
   11f88:	strb	r8, [r0]
   11f8c:	mov	r0, r6
   11f90:	mov	r2, #37	; 0x25
   11f94:	bl	10e74 <rb_strlcpy@plt>
   11f98:	ldrb	r0, [r7]
   11f9c:	orr	r0, r0, #8
   11fa0:	strb	r0, [r7]
   11fa4:	ldr	r0, [sl, #20]
   11fa8:	mov	r1, r5
   11fac:	mov	r2, #16384	; 0x4000
   11fb0:	bl	10f64 <rb_rawbuf_get@plt>
   11fb4:	cmp	r0, #0
   11fb8:	bne	11f14 <rb_base64_encode@plt+0xf08>
   11fbc:	ldrb	r0, [r7]
   11fc0:	tst	r0, #8
   11fc4:	beq	12050 <rb_base64_encode@plt+0x1044>
   11fc8:	add	r5, sp, #24
   11fcc:	mov	r0, r5
   11fd0:	bl	127f0 <rb_base64_encode@plt+0x17e4>
   11fd4:	add	r6, sl, #129	; 0x81
   11fd8:	mov	r0, r6
   11fdc:	bl	10ed4 <strlen@plt>
   11fe0:	mov	r2, r0
   11fe4:	mov	r0, r5
   11fe8:	mov	r1, r6
   11fec:	bl	12830 <rb_base64_encode@plt+0x1824>
   11ff0:	movw	r1, #16756	; 0x4174
   11ff4:	mov	r0, r5
   11ff8:	mov	r2, #36	; 0x24
   11ffc:	movt	r1, #1
   12000:	bl	12830 <rb_base64_encode@plt+0x1824>
   12004:	add	r6, sp, #4
   12008:	mov	r0, r5
   1200c:	mov	r1, r6
   12010:	bl	13d70 <rb_base64_encode@plt+0x2d64>
   12014:	mov	r0, r6
   12018:	mov	r1, #20
   1201c:	bl	1100c <rb_base64_encode@plt>
   12020:	mov	r5, r0
   12024:	ldrb	r0, [sl, #128]	; 0x80
   12028:	tst	r0, #2
   1202c:	beq	12064 <rb_base64_encode@plt+0x1058>
   12030:	tst	r0, #2
   12034:	beq	12084 <rb_base64_encode@plt+0x1078>
   12038:	tst	r0, #2
   1203c:	beq	120a8 <rb_base64_encode@plt+0x109c>
   12040:	cmp	r5, #0
   12044:	beq	12050 <rb_base64_encode@plt+0x1044>
   12048:	mov	r0, r5
   1204c:	bl	10e8c <free@plt>
   12050:	ldr	r0, [sl, #84]	; 0x54
   12054:	mov	r1, sl
   12058:	bl	12554 <rb_base64_encode@plt+0x1548>
   1205c:	sub	sp, fp, #28
   12060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12064:	ldr	r0, [sl, #16]
   12068:	movw	r1, #16793	; 0x4199
   1206c:	mov	r2, #129	; 0x81
   12070:	movt	r1, #1
   12074:	bl	10fdc <rb_rawbuf_append@plt>
   12078:	ldrb	r0, [sl, #128]	; 0x80
   1207c:	tst	r0, #2
   12080:	bne	12038 <rb_base64_encode@plt+0x102c>
   12084:	mov	r0, r5
   12088:	bl	10ed4 <strlen@plt>
   1208c:	mov	r2, r0
   12090:	ldr	r0, [sl, #16]
   12094:	mov	r1, r5
   12098:	bl	10fdc <rb_rawbuf_append@plt>
   1209c:	ldrb	r0, [sl, #128]	; 0x80
   120a0:	tst	r0, #2
   120a4:	bne	12040 <rb_base64_encode@plt+0x1034>
   120a8:	ldr	r0, [sl, #16]
   120ac:	movw	r1, #16923	; 0x421b
   120b0:	mov	r2, #4
   120b4:	movt	r1, #1
   120b8:	bl	10fdc <rb_rawbuf_append@plt>
   120bc:	cmp	r5, #0
   120c0:	bne	12048 <rb_base64_encode@plt+0x103c>
   120c4:	b	12050 <rb_base64_encode@plt+0x1044>
   120c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120cc:	add	fp, sp, #28
   120d0:	sub	sp, sp, #12
   120d4:	sub	sp, sp, #16384	; 0x4000
   120d8:	mov	r4, r0
   120dc:	ldr	r0, [r0, #20]
   120e0:	mov	r1, sp
   120e4:	mov	r2, #2
   120e8:	bl	10f64 <rb_rawbuf_get@plt>
   120ec:	cmp	r0, #2
   120f0:	bne	12338 <rb_base64_encode@plt+0x132c>
   120f4:	add	sl, r4, #24
   120f8:	mov	r6, sp
   120fc:	add	r7, sp, #8
   12100:	add	r8, sp, #6
   12104:	add	r5, sp, #2
   12108:	b	12130 <rb_base64_encode@plt+0x1124>
   1210c:	and	r3, r0, #3
   12110:	ldrb	r1, [r7, r0]
   12114:	ldrb	r3, [r5, r3]
   12118:	eor	r1, r3, r1
   1211c:	strb	r1, [r7, r0]
   12120:	add	r0, r0, #1
   12124:	cmp	r2, r0
   12128:	bne	1210c <rb_base64_encode@plt+0x1100>
   1212c:	b	12310 <rb_base64_encode@plt+0x1304>
   12130:	ldrb	r0, [sp, #1]
   12134:	and	r2, r0, #127	; 0x7f
   12138:	cmp	r2, #127	; 0x7f
   1213c:	strb	r2, [sp, #1]
   12140:	beq	12320 <rb_base64_encode@plt+0x1314>
   12144:	lsr	r9, r0, #7
   12148:	cmp	r2, #126	; 0x7e
   1214c:	bne	121ac <rb_base64_encode@plt+0x11a0>
   12150:	mov	r0, r7
   12154:	mov	r1, #0
   12158:	mov	r2, #16384	; 0x4000
   1215c:	bl	10e5c <memset@plt>
   12160:	ldr	r0, [r4, #20]
   12164:	mov	r1, r8
   12168:	mov	r2, #2
   1216c:	bl	10f64 <rb_rawbuf_get@plt>
   12170:	cmp	r0, #0
   12174:	beq	12238 <rb_base64_encode@plt+0x122c>
   12178:	ldrh	r0, [sp, #6]
   1217c:	cmp	r9, #0
   12180:	rev16	r1, r0
   12184:	strh	r1, [sp, #6]
   12188:	beq	12268 <rb_base64_encode@plt+0x125c>
   1218c:	ldr	r0, [r4, #20]
   12190:	mov	r1, r5
   12194:	mov	r2, #4
   12198:	bl	10f64 <rb_rawbuf_get@plt>
   1219c:	cmp	r0, #0
   121a0:	beq	12250 <rb_base64_encode@plt+0x1244>
   121a4:	ldrh	r2, [sp, #6]
   121a8:	b	12270 <rb_base64_encode@plt+0x1264>
   121ac:	cmp	r9, #0
   121b0:	beq	121d0 <rb_base64_encode@plt+0x11c4>
   121b4:	ldr	r0, [r4, #20]
   121b8:	mov	r1, r5
   121bc:	mov	r2, #4
   121c0:	bl	10f64 <rb_rawbuf_get@plt>
   121c4:	cmp	r0, #0
   121c8:	beq	12250 <rb_base64_encode@plt+0x1244>
   121cc:	ldrb	r2, [sp, #1]
   121d0:	ldr	r0, [r4, #20]
   121d4:	mov	r1, r7
   121d8:	bl	10f64 <rb_rawbuf_get@plt>
   121dc:	cmp	r0, #0
   121e0:	beq	122d8 <rb_base64_encode@plt+0x12cc>
   121e4:	mov	r2, r0
   121e8:	cmp	r9, #0
   121ec:	beq	12310 <rb_base64_encode@plt+0x1304>
   121f0:	cmp	r2, #1
   121f4:	blt	12310 <rb_base64_encode@plt+0x1304>
   121f8:	mov	r0, #0
   121fc:	cmp	r2, #16
   12200:	bcc	1210c <rb_base64_encode@plt+0x1100>
   12204:	sub	r1, r2, #1
   12208:	cmp	r1, #3
   1220c:	bhi	1210c <rb_base64_encode@plt+0x1100>
   12210:	vld1.8	{d16-d17}, [r5]
   12214:	bic	r0, r2, #15
   12218:	mov	r3, r7
   1221c:	mov	r1, r0
   12220:	vld1.8	{d18-d19}, [r3]
   12224:	subs	r1, r1, #16
   12228:	veor	q9, q8, q9
   1222c:	vst1.8	{d18-d19}, [r3]!
   12230:	bne	12220 <rb_base64_encode@plt+0x1214>
   12234:	b	12124 <rb_base64_encode@plt+0x1118>
   12238:	movw	r2, #16928	; 0x4220
   1223c:	mov	r0, r4
   12240:	mov	r1, #1
   12244:	movt	r2, #1
   12248:	bl	11c64 <rb_base64_encode@plt+0xc58>
   1224c:	b	12320 <rb_base64_encode@plt+0x1314>
   12250:	movw	r2, #16974	; 0x424e
   12254:	mov	r0, r4
   12258:	mov	r1, #1
   1225c:	movt	r2, #1
   12260:	bl	11c64 <rb_base64_encode@plt+0xc58>
   12264:	b	12320 <rb_base64_encode@plt+0x1314>
   12268:	rev	r0, r0
   1226c:	lsr	r2, r0, #16
   12270:	ldr	r0, [r4, #20]
   12274:	mov	r1, r7
   12278:	bl	10f64 <rb_rawbuf_get@plt>
   1227c:	cmp	r0, #0
   12280:	beq	122d8 <rb_base64_encode@plt+0x12cc>
   12284:	mov	r2, r0
   12288:	cmp	r9, #0
   1228c:	beq	12310 <rb_base64_encode@plt+0x1304>
   12290:	cmp	r2, #1
   12294:	blt	12310 <rb_base64_encode@plt+0x1304>
   12298:	mov	r0, #0
   1229c:	cmp	r2, #16
   122a0:	bcc	122f0 <rb_base64_encode@plt+0x12e4>
   122a4:	sub	r1, r2, #1
   122a8:	cmp	r1, #3
   122ac:	bhi	122f0 <rb_base64_encode@plt+0x12e4>
   122b0:	vld1.8	{d16-d17}, [r5]
   122b4:	bic	r0, r2, #15
   122b8:	mov	r3, r7
   122bc:	mov	r1, r0
   122c0:	vld1.8	{d18-d19}, [r3]
   122c4:	subs	r1, r1, #16
   122c8:	veor	q9, q8, q9
   122cc:	vst1.8	{d18-d19}, [r3]!
   122d0:	bne	122c0 <rb_base64_encode@plt+0x12b4>
   122d4:	b	12308 <rb_base64_encode@plt+0x12fc>
   122d8:	movw	r2, #17018	; 0x427a
   122dc:	mov	r0, r4
   122e0:	mov	r1, #1
   122e4:	movt	r2, #1
   122e8:	bl	11c64 <rb_base64_encode@plt+0xc58>
   122ec:	b	12320 <rb_base64_encode@plt+0x1314>
   122f0:	and	r3, r0, #3
   122f4:	ldrb	r1, [r7, r0]
   122f8:	ldrb	r3, [r5, r3]
   122fc:	eor	r1, r3, r1
   12300:	strb	r1, [r7, r0]
   12304:	add	r0, r0, #1
   12308:	cmp	r2, r0
   1230c:	bne	122f0 <rb_base64_encode@plt+0x12e4>
   12310:	mov	r0, sl
   12314:	mov	r1, r7
   12318:	mov	r3, #1
   1231c:	bl	10e68 <rb_linebuf_parse@plt>
   12320:	ldr	r0, [r4, #20]
   12324:	mov	r1, r6
   12328:	mov	r2, #2
   1232c:	bl	10f64 <rb_rawbuf_get@plt>
   12330:	cmp	r0, #2
   12334:	beq	12130 <rb_base64_encode@plt+0x1124>
   12338:	ldr	r0, [r4, #88]	; 0x58
   1233c:	mov	r1, r4
   12340:	bl	11b9c <rb_base64_encode@plt+0xb90>
   12344:	sub	sp, fp, #28
   12348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1234c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12350:	add	fp, sp, #28
   12354:	sub	sp, sp, #20
   12358:	sub	sp, sp, #16384	; 0x4000
   1235c:	add	r6, sp, #8
   12360:	mov	r4, r0
   12364:	mov	r1, #0
   12368:	mov	r2, #16384	; 0x4000
   1236c:	mov	sl, #0
   12370:	mov	r0, r6
   12374:	bl	10e5c <memset@plt>
   12378:	add	r5, r4, #52	; 0x34
   1237c:	mov	r1, r6
   12380:	mov	r2, #16384	; 0x4000
   12384:	mov	r3, #0
   12388:	str	sl, [sp]
   1238c:	mov	r0, r5
   12390:	bl	10ebc <rb_linebuf_get@plt>
   12394:	mov	r6, r0
   12398:	ldrb	r0, [r4, #128]	; 0x80
   1239c:	cmp	r6, #0
   123a0:	beq	12468 <rb_base64_encode@plt+0x145c>
   123a4:	movw	r8, #16925	; 0x421d
   123a8:	sub	r9, fp, #36	; 0x24
   123ac:	add	r7, sp, #8
   123b0:	movt	r8, #1
   123b4:	tst	r0, #2
   123b8:	bne	12440 <rb_base64_encode@plt+0x1434>
   123bc:	cmp	r6, #122	; 0x7a
   123c0:	bgt	123e4 <rb_base64_encode@plt+0x13d8>
   123c4:	mov	r0, #129	; 0x81
   123c8:	mov	r1, r9
   123cc:	mov	r2, #2
   123d0:	strh	r0, [fp, #-36]	; 0xffffffdc
   123d4:	add	r0, r6, #2
   123d8:	and	r0, r0, #127	; 0x7f
   123dc:	strb	r0, [fp, #-35]	; 0xffffffdd
   123e0:	b	12400 <rb_base64_encode@plt+0x13f4>
   123e4:	movw	r0, #32385	; 0x7e81
   123e8:	mov	r1, r9
   123ec:	mov	r2, #4
   123f0:	str	r0, [fp, #-36]	; 0xffffffdc
   123f4:	add	r0, r6, #2
   123f8:	rev16	r0, r0
   123fc:	strh	r0, [fp, #-34]	; 0xffffffde
   12400:	ldr	r0, [r4, #16]
   12404:	bl	10fdc <rb_rawbuf_append@plt>
   12408:	ldrb	r0, [r4, #128]	; 0x80
   1240c:	tst	r0, #2
   12410:	bne	12428 <rb_base64_encode@plt+0x141c>
   12414:	ldr	r0, [r4, #16]
   12418:	mov	r1, r7
   1241c:	mov	r2, r6
   12420:	bl	10fdc <rb_rawbuf_append@plt>
   12424:	ldrb	r0, [r4, #128]	; 0x80
   12428:	tst	r0, #2
   1242c:	bne	12440 <rb_base64_encode@plt+0x1434>
   12430:	ldr	r0, [r4, #16]
   12434:	mov	r1, r8
   12438:	mov	r2, #2
   1243c:	bl	10fdc <rb_rawbuf_append@plt>
   12440:	mov	r0, r5
   12444:	mov	r1, r7
   12448:	mov	r2, #16384	; 0x4000
   1244c:	mov	r3, #0
   12450:	str	sl, [sp]
   12454:	bl	10ebc <rb_linebuf_get@plt>
   12458:	mov	r6, r0
   1245c:	ldrb	r0, [r4, #128]	; 0x80
   12460:	cmp	r6, #0
   12464:	bne	123b4 <rb_base64_encode@plt+0x13a8>
   12468:	tst	r0, #8
   1246c:	beq	1247c <rb_base64_encode@plt+0x1470>
   12470:	ldr	r0, [r4, #84]	; 0x54
   12474:	mov	r1, r4
   12478:	bl	12554 <rb_base64_encode@plt+0x1548>
   1247c:	sub	sp, fp, #28
   12480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12484:	push	{r4, r5, r6, r7, fp, lr}
   12488:	add	fp, sp, #16
   1248c:	sub	sp, sp, #16384	; 0x4000
   12490:	cmp	r1, #0
   12494:	beq	124ec <rb_base64_encode@plt+0x14e0>
   12498:	mov	r4, r1
   1249c:	mov	r5, sp
   124a0:	ldr	r0, [r4, #88]	; 0x58
   124a4:	mov	r1, r5
   124a8:	mov	r2, #16384	; 0x4000
   124ac:	bl	10ea4 <rb_read@plt>
   124b0:	cmp	r0, #0
   124b4:	beq	124f4 <rb_base64_encode@plt+0x14e8>
   124b8:	cmn	r0, #1
   124bc:	bgt	124a0 <rb_base64_encode@plt+0x1494>
   124c0:	bl	11000 <__errno_location@plt>
   124c4:	ldr	r0, [r0]
   124c8:	bl	10df0 <rb_ignore_errno@plt>
   124cc:	cmp	r0, #0
   124d0:	beq	124f4 <rb_base64_encode@plt+0x14e8>
   124d4:	ldr	r0, [r4, #88]	; 0x58
   124d8:	movw	r2, #9348	; 0x2484
   124dc:	mov	r1, #1
   124e0:	mov	r3, r4
   124e4:	movt	r2, #1
   124e8:	bl	10e08 <rb_setselect@plt>
   124ec:	sub	sp, fp, #16
   124f0:	pop	{r4, r5, r6, r7, fp, pc}
   124f4:	ldr	r0, [r4, #88]	; 0x58
   124f8:	bl	10f04 <rb_close@plt>
   124fc:	mov	r0, #0
   12500:	str	r0, [r4, #4]
   12504:	movw	r0, #20720	; 0x50f0
   12508:	str	r4, [r4]
   1250c:	movt	r0, #2
   12510:	ldr	r1, [r0]
   12514:	cmp	r1, #0
   12518:	str	r1, [r4, #8]
   1251c:	beq	1252c <rb_base64_encode@plt+0x1520>
   12520:	add	r1, r1, #4
   12524:	str	r4, [r1]
   12528:	b	1253c <rb_base64_encode@plt+0x1530>
   1252c:	mov	r1, r0
   12530:	ldr	r2, [r1, #4]!
   12534:	cmp	r2, #0
   12538:	streq	r4, [r1]
   1253c:	str	r4, [r0]
   12540:	ldr	r1, [r0, #8]
   12544:	add	r1, r1, #1
   12548:	str	r1, [r0, #8]
   1254c:	sub	sp, fp, #16
   12550:	pop	{r4, r5, r6, r7, fp, pc}
   12554:	push	{r4, r5, r6, sl, fp, lr}
   12558:	add	fp, sp, #16
   1255c:	mov	r5, r0
   12560:	ldrb	r0, [r1, #128]	; 0x80
   12564:	tst	r0, #2
   12568:	bne	1266c <rb_base64_encode@plt+0x1660>
   1256c:	ldr	r0, [r1, #16]
   12570:	mov	r4, r1
   12574:	mov	r1, r5
   12578:	bl	10fe8 <rb_rawbuf_flush@plt>
   1257c:	cmp	r0, #1
   12580:	blt	125ac <rb_base64_encode@plt+0x15a0>
   12584:	add	r6, r4, #96	; 0x60
   12588:	ldrd	r2, [r6]
   1258c:	mov	r1, r5
   12590:	adds	r2, r2, r0
   12594:	adc	r3, r3, r0, asr #31
   12598:	strd	r2, [r6]
   1259c:	ldr	r0, [r4, #16]
   125a0:	bl	10fe8 <rb_rawbuf_flush@plt>
   125a4:	cmp	r0, #0
   125a8:	bgt	12588 <rb_base64_encode@plt+0x157c>
   125ac:	cmp	r0, #0
   125b0:	beq	125f8 <rb_base64_encode@plt+0x15ec>
   125b4:	bl	11000 <__errno_location@plt>
   125b8:	mov	r5, r0
   125bc:	ldr	r0, [r0]
   125c0:	bl	10df0 <rb_ignore_errno@plt>
   125c4:	cmp	r0, #0
   125c8:	beq	1261c <rb_base64_encode@plt+0x1610>
   125cc:	ldr	r0, [r4, #16]
   125d0:	bl	10f28 <rb_rawbuf_length@plt>
   125d4:	mov	r1, r0
   125d8:	ldr	r0, [r4, #84]	; 0x54
   125dc:	cmp	r1, #1
   125e0:	blt	12640 <rb_base64_encode@plt+0x1634>
   125e4:	movw	r2, #9556	; 0x2554
   125e8:	mov	r1, #2
   125ec:	mov	r3, r4
   125f0:	movt	r2, #1
   125f4:	b	1264c <rb_base64_encode@plt+0x1640>
   125f8:	movw	r2, #16700	; 0x413c
   125fc:	movw	r3, #16703	; 0x413f
   12600:	mov	r0, r4
   12604:	mov	r1, #1
   12608:	movt	r2, #1
   1260c:	movt	r3, #1
   12610:	bl	11c64 <rb_base64_encode@plt+0xc58>
   12614:	bl	11000 <__errno_location@plt>
   12618:	mov	r5, r0
   1261c:	ldr	r0, [r5]
   12620:	bl	10dc0 <strerror@plt>
   12624:	movw	r2, #16687	; 0x412f
   12628:	mov	r3, r0
   1262c:	mov	r0, r4
   12630:	mov	r1, #1
   12634:	movt	r2, #1
   12638:	pop	{r4, r5, r6, sl, fp, lr}
   1263c:	b	11c64 <rb_base64_encode@plt+0xc58>
   12640:	mov	r1, #2
   12644:	mov	r2, #0
   12648:	mov	r3, #0
   1264c:	bl	10e08 <rb_setselect@plt>
   12650:	ldrb	r0, [r4, #128]	; 0x80
   12654:	tst	r0, #1
   12658:	popeq	{r4, r5, r6, sl, fp, pc}
   1265c:	ldr	r0, [r4, #16]
   12660:	bl	10f28 <rb_rawbuf_length@plt>
   12664:	cmp	r0, #0
   12668:	beq	12670 <rb_base64_encode@plt+0x1664>
   1266c:	pop	{r4, r5, r6, sl, fp, pc}
   12670:	ldrb	r0, [r4, #128]	; 0x80
   12674:	mov	r1, r4
   12678:	and	r0, r0, #254	; 0xfe
   1267c:	strb	r0, [r4, #128]	; 0x80
   12680:	ldr	r0, [r4, #88]	; 0x58
   12684:	pop	{r4, r5, r6, sl, fp, lr}
   12688:	b	11a34 <rb_base64_encode@plt+0xa28>
   1268c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12690:	add	fp, sp, #28
   12694:	sub	sp, sp, #20
   12698:	mov	r0, r1
   1269c:	mov	r4, r1
   126a0:	add	r8, r1, #44	; 0x2c
   126a4:	ldr	sl, [r0, #36]!	; 0x24
   126a8:	cmp	sl, #0
   126ac:	str	r0, [sp, #16]
   126b0:	beq	127ac <rb_base64_encode@plt+0x17a0>
   126b4:	str	r4, [sp, #12]
   126b8:	ldr	r5, [sl]
   126bc:	movw	r7, #44732	; 0xaebc
   126c0:	ldr	r0, [r4, #16]
   126c4:	ldr	r9, [sl, #8]
   126c8:	movt	r7, #2
   126cc:	ldr	r7, [r7]
   126d0:	ldr	r1, [r5, #16]
   126d4:	ldr	r3, [r5, #12]
   126d8:	ldr	r2, [r5, #36]	; 0x24
   126dc:	stm	sp, {r1, r7}
   126e0:	add	r7, r5, #20
   126e4:	mov	r1, r7
   126e8:	bl	10e20 <rb_send_fd_buf@plt>
   126ec:	mov	r6, r0
   126f0:	cmp	r0, #1
   126f4:	blt	1277c <rb_base64_encode@plt+0x1770>
   126f8:	ldr	r0, [sl, #8]
   126fc:	ldr	r1, [sl, #4]
   12700:	ldr	r2, [sp, #16]
   12704:	cmp	r0, #0
   12708:	streq	r1, [r4, #40]	; 0x28
   1270c:	strne	r1, [r0, #4]
   12710:	ldrne	r1, [sl, #4]
   12714:	cmp	r1, #0
   12718:	addne	r2, r1, #8
   1271c:	str	r0, [r2]
   12720:	mov	r0, #0
   12724:	str	r0, [sl, #4]
   12728:	str	r0, [sl, #8]
   1272c:	ldr	r0, [r8]
   12730:	sub	r0, r0, #1
   12734:	str	r0, [r8]
   12738:	ldr	r0, [r5, #36]	; 0x24
   1273c:	cmp	r0, #1
   12740:	blt	12760 <rb_base64_encode@plt+0x1754>
   12744:	mov	r4, #0
   12748:	ldr	r0, [r7, r4, lsl #2]
   1274c:	bl	10f04 <rb_close@plt>
   12750:	ldr	r0, [r5, #36]	; 0x24
   12754:	add	r4, r4, #1
   12758:	cmp	r4, r0
   1275c:	blt	12748 <rb_base64_encode@plt+0x173c>
   12760:	ldr	r0, [r5, #12]
   12764:	cmp	r0, #0
   12768:	beq	12770 <rb_base64_encode@plt+0x1764>
   1276c:	bl	10e8c <free@plt>
   12770:	mov	r0, r5
   12774:	bl	10e8c <free@plt>
   12778:	ldr	r4, [sp, #12]
   1277c:	cmp	r6, #0
   12780:	beq	127dc <rb_base64_encode@plt+0x17d0>
   12784:	cmn	r6, #1
   12788:	bgt	127a0 <rb_base64_encode@plt+0x1794>
   1278c:	bl	11000 <__errno_location@plt>
   12790:	ldr	r0, [r0]
   12794:	bl	10df0 <rb_ignore_errno@plt>
   12798:	cmp	r0, #0
   1279c:	beq	127dc <rb_base64_encode@plt+0x17d0>
   127a0:	cmp	r9, #0
   127a4:	mov	sl, r9
   127a8:	bne	126b8 <rb_base64_encode@plt+0x16ac>
   127ac:	ldr	r0, [r8]
   127b0:	cmp	r0, #0
   127b4:	subeq	sp, fp, #28
   127b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127bc:	ldr	r0, [r4, #16]
   127c0:	movw	r2, #9868	; 0x268c
   127c4:	mov	r1, #2
   127c8:	mov	r3, r4
   127cc:	movt	r2, #1
   127d0:	sub	sp, fp, #28
   127d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127d8:	b	10e08 <rb_setselect@plt>
   127dc:	mov	r0, #0
   127e0:	bl	10ff4 <exit@plt>
	...
   127f0:	add	r2, pc, #40	; 0x28
   127f4:	movw	r1, #57840	; 0xe1f0
   127f8:	vld1.64	{d16-d17}, [r2 :128]
   127fc:	movt	r1, #50130	; 0xc3d2
   12800:	str	r1, [r0, #16]
   12804:	mov	r1, #24
   12808:	vst1.32	{d16-d17}, [r0], r1
   1280c:	mov	r1, #0
   12810:	str	r1, [r0]
   12814:	str	r1, [r0, #4]
   12818:	bx	lr
   1281c:	nop	{0}
   12820:	strbvs	r2, [r5, -r1, lsl #6]
   12824:	svc	0x00cdab89
   12828:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1282c:	eorsne	r5, r2, r6, ror r4
   12830:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12834:	add	fp, sp, #24
   12838:	mov	r5, r1
   1283c:	mov	r7, r0
   12840:	ldrd	r0, [r0, #24]
   12844:	mov	r4, r2
   12848:	adds	r2, r0, r2, lsl #3
   1284c:	adc	r3, r1, #0
   12850:	strd	r2, [r7, #24]
   12854:	ubfx	r9, r0, #3, #6
   12858:	add	r0, r9, r4
   1285c:	cmp	r0, #63	; 0x3f
   12860:	bls	128bc <rb_base64_encode@plt+0x18b0>
   12864:	add	r8, r7, #32
   12868:	rsb	r6, r9, #64	; 0x40
   1286c:	mov	r1, r5
   12870:	add	r0, r8, r9
   12874:	mov	r2, r6
   12878:	bl	10ee0 <memcpy@plt>
   1287c:	mov	r0, r7
   12880:	mov	r1, r8
   12884:	bl	128dc <rb_base64_encode@plt+0x18d0>
   12888:	rsb	r0, r9, #127	; 0x7f
   1288c:	cmp	r0, r4
   12890:	bcs	128c8 <rb_base64_encode@plt+0x18bc>
   12894:	add	r1, r5, r6
   12898:	mov	r0, r7
   1289c:	bl	128dc <rb_base64_encode@plt+0x18d0>
   128a0:	add	r1, r6, #127	; 0x7f
   128a4:	add	r0, r6, #64	; 0x40
   128a8:	cmp	r1, r4
   128ac:	mov	r6, r0
   128b0:	bcc	12894 <rb_base64_encode@plt+0x1888>
   128b4:	mov	r6, r0
   128b8:	b	128c8 <rb_base64_encode@plt+0x18bc>
   128bc:	add	r0, r7, r9
   128c0:	mov	r6, #0
   128c4:	add	r8, r0, #32
   128c8:	add	r1, r5, r6
   128cc:	sub	r2, r4, r6
   128d0:	mov	r0, r8
   128d4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   128d8:	b	10ee0 <memcpy@plt>
   128dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128e0:	add	fp, sp, #28
   128e4:	sub	sp, sp, #180	; 0xb4
   128e8:	ldr	r3, [r0, #8]
   128ec:	ldr	r4, [r0, #4]
   128f0:	ldr	r6, [r0]
   128f4:	ldr	r5, [r0, #12]
   128f8:	mov	ip, r0
   128fc:	str	r0, [sp, #76]	; 0x4c
   12900:	ldr	r0, [r1, #4]
   12904:	ldr	r7, [r1]
   12908:	ldr	sl, [r1, #8]
   1290c:	ldr	r9, [r1, #12]
   12910:	eor	r2, r3, r4, ror #2
   12914:	str	r0, [fp, #-36]	; 0xffffffdc
   12918:	rev	r0, r0
   1291c:	str	r7, [fp, #-40]	; 0xffffffd8
   12920:	mov	r8, r3
   12924:	str	r3, [sp, #80]	; 0x50
   12928:	str	r5, [sp, #88]	; 0x58
   1292c:	str	r4, [sp, #92]	; 0x5c
   12930:	str	r6, [sp, #84]	; 0x54
   12934:	str	sl, [fp, #-68]	; 0xffffffbc
   12938:	str	r9, [sp, #104]	; 0x68
   1293c:	and	r2, r2, r6
   12940:	add	r0, r0, r5
   12944:	eor	r2, r2, r3
   12948:	add	r0, r0, r2
   1294c:	eor	r2, r5, r3
   12950:	rev	r3, r7
   12954:	ldr	r7, [ip, #16]
   12958:	ldr	ip, [r1, #52]	; 0x34
   1295c:	and	r2, r2, r4
   12960:	add	r3, r3, r6, ror #27
   12964:	eor	r2, r2, r5
   12968:	add	r3, r3, r7
   1296c:	str	r7, [sp, #72]	; 0x48
   12970:	movw	r7, #31129	; 0x7999
   12974:	str	ip, [fp, #-72]	; 0xffffffb8
   12978:	movt	r7, #23170	; 0x5a82
   1297c:	add	r2, r3, r2
   12980:	add	r3, r2, r7
   12984:	rev	r2, sl
   12988:	mov	lr, r7
   1298c:	ldr	sl, [r1, #60]	; 0x3c
   12990:	add	r0, r0, r3, ror #27
   12994:	add	r2, r2, r8
   12998:	mov	r8, r6
   1299c:	add	r5, r0, r7
   129a0:	ror	r0, r4, #2
   129a4:	mov	r7, r4
   129a8:	eor	r0, r0, r6, ror #2
   129ac:	and	r0, r3, r0
   129b0:	str	sl, [fp, #-80]	; 0xffffffb0
   129b4:	eor	r0, r0, r4, ror #2
   129b8:	add	r0, r2, r0
   129bc:	rev	r2, r9
   129c0:	ldr	r9, [r1, #56]	; 0x38
   129c4:	add	r0, r0, r5, ror #27
   129c8:	add	r2, r2, r7, ror #2
   129cc:	ldr	r7, [r1, #16]
   129d0:	add	r4, r0, lr
   129d4:	ror	r0, r3, #2
   129d8:	eor	r0, r0, r6, ror #2
   129dc:	and	r0, r5, r0
   129e0:	str	r9, [fp, #-76]	; 0xffffffb4
   129e4:	eor	r0, r0, r6, ror #2
   129e8:	rev	r6, r7
   129ec:	str	r7, [fp, #-92]	; 0xffffffa4
   129f0:	ldr	r7, [r1, #20]
   129f4:	add	r0, r2, r0
   129f8:	ror	r2, r5, #2
   129fc:	add	r6, r6, r8, ror #2
   12a00:	eor	r2, r2, r3, ror #2
   12a04:	add	r0, r0, r4, ror #27
   12a08:	and	r2, r4, r2
   12a0c:	add	r0, r0, lr
   12a10:	eor	r2, r2, r3, ror #2
   12a14:	str	r7, [fp, #-100]	; 0xffffff9c
   12a18:	rev	r7, r7
   12a1c:	add	r2, r6, r2
   12a20:	ror	r6, r4, #2
   12a24:	add	r3, r7, r3, ror #2
   12a28:	ldr	r7, [r1, #24]
   12a2c:	eor	r6, r6, r5, ror #2
   12a30:	add	r2, r2, r0, ror #27
   12a34:	and	r6, r0, r6
   12a38:	add	r2, r2, lr
   12a3c:	eor	r8, r6, r5, ror #2
   12a40:	ror	r6, r0, #2
   12a44:	eor	r6, r6, r4, ror #2
   12a48:	add	r3, r3, r8
   12a4c:	str	r7, [fp, #-48]	; 0xffffffd0
   12a50:	rev	r7, r7
   12a54:	and	r6, r2, r6
   12a58:	add	r3, r3, r2, ror #27
   12a5c:	add	r5, r7, r5, ror #2
   12a60:	eor	r8, r6, r4, ror #2
   12a64:	ldr	r6, [r1, #28]
   12a68:	add	r3, r3, lr
   12a6c:	add	r5, r5, r8
   12a70:	add	r5, r5, r3, ror #27
   12a74:	add	r7, r5, lr
   12a78:	ror	r5, r2, #2
   12a7c:	eor	r5, r5, r0, ror #2
   12a80:	str	r6, [fp, #-96]	; 0xffffffa0
   12a84:	rev	r6, r6
   12a88:	and	r5, r3, r5
   12a8c:	add	r4, r6, r4, ror #2
   12a90:	ldr	r6, [r1, #32]
   12a94:	eor	r8, r5, r0, ror #2
   12a98:	add	r4, r4, r8
   12a9c:	add	r4, r4, r7, ror #27
   12aa0:	add	r5, r4, lr
   12aa4:	ror	r4, r3, #2
   12aa8:	str	r6, [fp, #-32]	; 0xffffffe0
   12aac:	rev	r6, r6
   12ab0:	eor	r4, r4, r2, ror #2
   12ab4:	add	r0, r6, r0, ror #2
   12ab8:	ldr	r6, [r1, #36]	; 0x24
   12abc:	and	r4, r7, r4
   12ac0:	eor	r8, r4, r2, ror #2
   12ac4:	ror	r4, r7, #2
   12ac8:	eor	r4, r4, r3, ror #2
   12acc:	add	r0, r0, r8
   12ad0:	and	r4, r5, r4
   12ad4:	str	r6, [fp, #-52]	; 0xffffffcc
   12ad8:	rev	r6, r6
   12adc:	add	r0, r0, r5, ror #27
   12ae0:	eor	r8, r4, r3, ror #2
   12ae4:	add	r2, r6, r2, ror #2
   12ae8:	add	r0, r0, lr
   12aec:	add	r2, r2, r8
   12af0:	add	r2, r2, r0, ror #27
   12af4:	add	r6, r2, lr
   12af8:	ror	r2, r5, #2
   12afc:	eor	r2, r2, r7, ror #2
   12b00:	and	r2, r0, r2
   12b04:	eor	r8, r2, r7, ror #2
   12b08:	ldr	r2, [r1, #40]	; 0x28
   12b0c:	rev	r4, r2
   12b10:	str	r2, [fp, #-84]	; 0xffffffac
   12b14:	add	r3, r4, r3, ror #2
   12b18:	add	r2, r3, r8
   12b1c:	ldr	r3, [r1, #44]	; 0x2c
   12b20:	add	r2, r2, r6, ror #27
   12b24:	add	r8, r2, lr
   12b28:	ror	r2, r0, #2
   12b2c:	eor	r2, r2, r5, ror #2
   12b30:	and	r2, r6, r2
   12b34:	str	r3, [fp, #-64]	; 0xffffffc0
   12b38:	rev	r3, r3
   12b3c:	add	r3, r3, r7, ror #2
   12b40:	eor	r2, r2, r5, ror #2
   12b44:	ldr	r7, [fp, #-40]	; 0xffffffd8
   12b48:	add	r2, r3, r2
   12b4c:	ldr	r3, [r1, #48]	; 0x30
   12b50:	rev	r1, sl
   12b54:	add	r2, r2, r8, ror #27
   12b58:	str	r1, [fp, #-88]	; 0xffffffa8
   12b5c:	add	r1, r1, r8, ror #2
   12b60:	add	r4, r2, lr
   12b64:	ror	r2, r6, #2
   12b68:	eor	r2, r2, r0, ror #2
   12b6c:	and	r2, r8, r2
   12b70:	str	r3, [fp, #-44]	; 0xffffffd4
   12b74:	rev	r3, r3
   12b78:	add	r3, r3, r5, ror #2
   12b7c:	eor	r2, r2, r0, ror #2
   12b80:	rev	r5, ip
   12b84:	add	r2, r3, r2
   12b88:	ror	r3, r8, #2
   12b8c:	add	r0, r5, r0, ror #2
   12b90:	rev	r5, r9
   12b94:	eor	r3, r3, r6, ror #2
   12b98:	add	r2, r2, r4, ror #27
   12b9c:	str	r5, [sp, #96]	; 0x60
   12ba0:	add	r5, r5, r6, ror #2
   12ba4:	and	r3, r4, r3
   12ba8:	add	r2, r2, lr
   12bac:	eor	r3, r3, r6, ror #2
   12bb0:	add	r0, r0, r3
   12bb4:	add	r0, r0, r2, ror #27
   12bb8:	add	r3, r0, lr
   12bbc:	ror	r0, r4, #2
   12bc0:	eor	r0, r0, r8, ror #2
   12bc4:	and	r0, r2, r0
   12bc8:	eor	r0, r0, r8, ror #2
   12bcc:	ldr	r8, [fp, #-68]	; 0xffffffbc
   12bd0:	add	r0, r5, r0
   12bd4:	ror	r5, r2, #2
   12bd8:	eor	r5, r5, r4, ror #2
   12bdc:	add	r0, r0, r3, ror #27
   12be0:	and	r5, r3, r5
   12be4:	add	r0, r0, lr
   12be8:	eor	r6, r8, r7
   12bec:	ldr	r7, [fp, #-32]	; 0xffffffe0
   12bf0:	eor	r5, r5, r4, ror #2
   12bf4:	add	r1, r1, r5
   12bf8:	ror	r5, r3, #2
   12bfc:	eor	r5, r5, r2, ror #2
   12c00:	add	r1, r1, r0, ror #27
   12c04:	and	r5, r0, r5
   12c08:	add	r1, r1, lr
   12c0c:	eor	r6, r6, r7
   12c10:	eor	r5, r5, r2, ror #2
   12c14:	eor	r6, r6, ip
   12c18:	mov	ip, lr
   12c1c:	rev	r7, r6
   12c20:	ror	r6, r7, #31
   12c24:	str	r7, [fp, #-56]	; 0xffffffc8
   12c28:	ldr	r7, [fp, #-36]	; 0xffffffdc
   12c2c:	add	r6, r6, r4, ror #2
   12c30:	add	r6, r6, r5
   12c34:	add	r6, r6, r1, ror #27
   12c38:	add	r4, r6, lr
   12c3c:	ldr	lr, [sp, #104]	; 0x68
   12c40:	ror	r6, r0, #2
   12c44:	eor	r6, r6, r3, ror #2
   12c48:	and	r6, r1, r6
   12c4c:	eor	r6, r6, r3, ror #2
   12c50:	eor	r5, lr, r7
   12c54:	ldr	r7, [fp, #-52]	; 0xffffffcc
   12c58:	eor	r5, r5, r7
   12c5c:	eor	r5, r5, r9
   12c60:	mov	r9, ip
   12c64:	rev	r5, r5
   12c68:	ror	r7, r5, #31
   12c6c:	str	r5, [fp, #-60]	; 0xffffffc4
   12c70:	ldr	r5, [fp, #-84]	; 0xffffffac
   12c74:	add	r2, r7, r2, ror #2
   12c78:	ldr	r7, [fp, #-92]	; 0xffffffa4
   12c7c:	add	r2, r2, r6
   12c80:	add	r2, r2, r4, ror #27
   12c84:	add	ip, r2, ip
   12c88:	ror	r2, r1, #2
   12c8c:	eor	r6, r7, r8
   12c90:	eor	r2, r2, r0, ror #2
   12c94:	eor	r6, r6, r5
   12c98:	ldr	r5, [fp, #-64]	; 0xffffffc0
   12c9c:	and	r2, r4, r2
   12ca0:	eor	r6, r6, sl
   12ca4:	ldr	sl, [fp, #-100]	; 0xffffff9c
   12ca8:	eor	r2, r2, r0, ror #2
   12cac:	rev	r8, r6
   12cb0:	ror	r6, r8, #31
   12cb4:	str	r8, [fp, #-68]	; 0xffffffbc
   12cb8:	add	r3, r6, r3, ror #2
   12cbc:	str	r6, [sp, #68]	; 0x44
   12cc0:	eor	r6, sl, lr
   12cc4:	add	r2, r3, r2
   12cc8:	ror	r3, r4, #2
   12ccc:	eor	r6, r6, r5
   12cd0:	ldr	r5, [fp, #-56]	; 0xffffffc8
   12cd4:	eor	r3, r3, r1, ror #2
   12cd8:	add	r2, r2, ip, ror #27
   12cdc:	rev	r6, r6
   12ce0:	and	r3, ip, r3
   12ce4:	add	r2, r2, r9
   12ce8:	eor	r3, r3, r1, ror #2
   12cec:	eor	r6, r6, r5, ror #31
   12cf0:	ror	r5, r6, #31
   12cf4:	str	r6, [fp, #-40]	; 0xffffffd8
   12cf8:	ldr	r6, [fp, #-48]	; 0xffffffd0
   12cfc:	add	r0, r5, r0, ror #2
   12d00:	str	r5, [sp, #60]	; 0x3c
   12d04:	ldr	r5, [fp, #-44]	; 0xffffffd4
   12d08:	add	r0, r0, r3
   12d0c:	add	r0, r0, r2, ror #27
   12d10:	eor	r7, r6, r7
   12d14:	add	r3, r0, r9
   12d18:	ror	r0, ip, #2
   12d1c:	eor	r7, r7, r5
   12d20:	ldr	r5, [fp, #-60]	; 0xffffffc4
   12d24:	eor	r0, r0, r4, ror #2
   12d28:	rev	r7, r7
   12d2c:	eor	r0, r0, r2
   12d30:	eor	r9, r7, r5, ror #31
   12d34:	ror	r5, r9, #31
   12d38:	str	r9, [fp, #-92]	; 0xffffffa4
   12d3c:	add	r1, r5, r1, ror #2
   12d40:	str	r5, [sp, #56]	; 0x38
   12d44:	ldr	r5, [fp, #-96]	; 0xffffffa0
   12d48:	add	r0, r1, r0
   12d4c:	movw	r1, #60321	; 0xeba1
   12d50:	add	r0, r0, r3, ror #27
   12d54:	movt	r1, #28377	; 0x6ed9
   12d58:	add	r0, r0, r1
   12d5c:	ror	r1, r2, #2
   12d60:	eor	r1, r1, ip, ror #2
   12d64:	eor	r7, r5, sl
   12d68:	eor	lr, r1, r3
   12d6c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12d70:	eor	r7, r7, r1
   12d74:	rev	r7, r7
   12d78:	eor	r7, r7, r8, ror #31
   12d7c:	ldr	r8, [fp, #-32]	; 0xffffffe0
   12d80:	ror	r1, r7, #31
   12d84:	mov	sl, r7
   12d88:	str	r7, [fp, #-100]	; 0xffffff9c
   12d8c:	add	r7, r1, r4, ror #2
   12d90:	str	r1, [sp, #52]	; 0x34
   12d94:	add	r1, r7, lr
   12d98:	movw	r7, #60321	; 0xeba1
   12d9c:	add	r1, r1, r0, ror #27
   12da0:	movt	r7, #28377	; 0x6ed9
   12da4:	eor	r4, r8, r6
   12da8:	ldr	r6, [fp, #-40]	; 0xffffffd8
   12dac:	add	lr, r1, r7
   12db0:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12db4:	ror	r1, r3, #2
   12db8:	eor	r1, r1, r2, ror #2
   12dbc:	eor	r1, r1, r0
   12dc0:	eor	r4, r4, r7
   12dc4:	rev	r4, r4
   12dc8:	eor	r4, r4, r6, ror #31
   12dcc:	ror	r6, r4, #31
   12dd0:	str	r4, [fp, #-48]	; 0xffffffd0
   12dd4:	add	r7, r6, ip, ror #2
   12dd8:	str	r6, [sp, #44]	; 0x2c
   12ddc:	movw	r6, #60321	; 0xeba1
   12de0:	add	r1, r7, r1
   12de4:	ldr	r7, [fp, #-52]	; 0xffffffcc
   12de8:	movt	r6, #28377	; 0x6ed9
   12dec:	add	r1, r1, lr, ror #27
   12df0:	add	ip, r1, r6
   12df4:	ror	r1, r0, #2
   12df8:	eor	r1, r1, r3, ror #2
   12dfc:	eor	r4, r7, r5
   12e00:	ldr	r5, [fp, #-80]	; 0xffffffb0
   12e04:	eor	r1, r1, lr
   12e08:	eor	r4, r4, r5
   12e0c:	rev	r4, r4
   12e10:	eor	r4, r4, r9, ror #31
   12e14:	ldr	r9, [fp, #-84]	; 0xffffffac
   12e18:	ror	r5, r4, #31
   12e1c:	str	r4, [fp, #-36]	; 0xffffffdc
   12e20:	add	r2, r5, r2, ror #2
   12e24:	str	r5, [sp, #24]
   12e28:	mov	r5, r6
   12e2c:	add	r1, r2, r1
   12e30:	add	r1, r1, ip, ror #27
   12e34:	eor	r4, r9, r8
   12e38:	ldr	r8, [fp, #-44]	; 0xffffffd4
   12e3c:	add	r2, r1, r6
   12e40:	ldr	r6, [fp, #-56]	; 0xffffffc8
   12e44:	rev	r4, r4
   12e48:	ror	r1, lr, #2
   12e4c:	eor	r1, r1, r0, ror #2
   12e50:	eor	r1, r1, ip
   12e54:	eor	r4, r4, r6, ror #31
   12e58:	mov	r6, r5
   12e5c:	eor	r4, r4, sl, ror #31
   12e60:	str	r4, [fp, #-32]	; 0xffffffe0
   12e64:	ror	r4, r4, #31
   12e68:	add	r3, r4, r3, ror #2
   12e6c:	str	r4, [sp, #16]
   12e70:	ldr	r4, [fp, #-60]	; 0xffffffc4
   12e74:	add	r1, r3, r1
   12e78:	add	r1, r1, r2, ror #27
   12e7c:	add	r3, r1, r5
   12e80:	ldr	r5, [fp, #-64]	; 0xffffffc0
   12e84:	ror	r1, ip, #2
   12e88:	eor	r1, r1, lr, ror #2
   12e8c:	eor	r1, r1, r2
   12e90:	eor	r7, r5, r7
   12e94:	rev	r7, r7
   12e98:	eor	r7, r7, r4, ror #31
   12e9c:	ldr	r4, [fp, #-48]	; 0xffffffd0
   12ea0:	eor	sl, r7, r4, ror #31
   12ea4:	ldr	r4, [fp, #-68]	; 0xffffffbc
   12ea8:	ror	r7, sl, #31
   12eac:	str	sl, [sp, #100]	; 0x64
   12eb0:	add	r0, r7, r0, ror #2
   12eb4:	str	r7, [sp, #64]	; 0x40
   12eb8:	eor	r7, r8, r9
   12ebc:	rev	r7, r7
   12ec0:	add	r0, r0, r1
   12ec4:	eor	r7, r7, r4, ror #31
   12ec8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12ecc:	add	r0, r0, r3, ror #27
   12ed0:	add	r1, r0, r6
   12ed4:	ror	r0, r2, #2
   12ed8:	eor	r0, r0, ip, ror #2
   12edc:	eor	r0, r0, r3
   12ee0:	eor	r4, r7, r4, ror #31
   12ee4:	str	r4, [fp, #-52]	; 0xffffffcc
   12ee8:	ror	r4, r4, #31
   12eec:	add	r7, r4, lr, ror #2
   12ef0:	str	r4, [sp]
   12ef4:	add	r0, r7, r0
   12ef8:	add	r0, r0, r1, ror #27
   12efc:	add	lr, r0, r6
   12f00:	ldr	r6, [fp, #-72]	; 0xffffffb8
   12f04:	ror	r0, r3, #2
   12f08:	eor	r0, r0, r2, ror #2
   12f0c:	eor	r4, r0, r1
   12f10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f14:	eor	r7, r6, r5
   12f18:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12f1c:	rev	r7, r7
   12f20:	eor	r7, r7, r0, ror #31
   12f24:	eor	r9, r7, r5, ror #31
   12f28:	ldr	r5, [fp, #-76]	; 0xffffffb4
   12f2c:	ror	r0, r9, #31
   12f30:	str	r9, [sp, #104]	; 0x68
   12f34:	add	r7, r0, ip, ror #2
   12f38:	str	r0, [sp, #12]
   12f3c:	movw	ip, #60321	; 0xeba1
   12f40:	add	r0, r7, r4
   12f44:	movw	r7, #60321	; 0xeba1
   12f48:	movt	ip, #28377	; 0x6ed9
   12f4c:	eor	r4, r5, r8
   12f50:	ldr	r5, [fp, #-92]	; 0xffffffa4
   12f54:	add	r0, r0, lr, ror #27
   12f58:	movt	r7, #28377	; 0x6ed9
   12f5c:	rev	r4, r4
   12f60:	add	r0, r0, r7
   12f64:	ror	r7, r1, #2
   12f68:	eor	r7, r7, r3, ror #2
   12f6c:	eor	r7, r7, lr
   12f70:	eor	r4, r4, r5, ror #31
   12f74:	eor	r5, r4, sl, ror #31
   12f78:	ldr	sl, [fp, #-56]	; 0xffffffc8
   12f7c:	ror	r4, r5, #31
   12f80:	str	r5, [fp, #-96]	; 0xffffffa0
   12f84:	add	r2, r4, r2, ror #2
   12f88:	str	r4, [sp, #8]
   12f8c:	ror	r4, lr, #2
   12f90:	add	r2, r2, r7
   12f94:	ldr	r7, [fp, #-80]	; 0xffffffb0
   12f98:	eor	r4, r4, r1, ror #2
   12f9c:	eor	r4, r4, r0
   12fa0:	add	r2, r2, r0, ror #27
   12fa4:	add	r2, r2, ip
   12fa8:	eor	r7, r7, r6
   12fac:	ldr	r6, [fp, #-100]	; 0xffffff9c
   12fb0:	rev	r7, r7
   12fb4:	eor	r7, r7, r6, ror #31
   12fb8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12fbc:	eor	r6, r7, r6, ror #31
   12fc0:	ldr	r7, [sp, #96]	; 0x60
   12fc4:	str	r6, [fp, #-44]	; 0xffffffd4
   12fc8:	ror	r6, r6, #31
   12fcc:	add	r3, r6, r3, ror #2
   12fd0:	str	r6, [sp, #4]
   12fd4:	ldr	r6, [fp, #-48]	; 0xffffffd0
   12fd8:	add	r3, r3, r4
   12fdc:	ror	r4, r0, #2
   12fe0:	eor	r7, r7, sl, ror #31
   12fe4:	eor	r4, r4, lr, ror #2
   12fe8:	add	r3, r3, r2, ror #27
   12fec:	eor	r4, r4, r2
   12ff0:	add	r3, r3, ip
   12ff4:	eor	r7, r7, r6, ror #31
   12ff8:	eor	r8, r7, r9, ror #31
   12ffc:	ldr	r7, [fp, #-88]	; 0xffffffa8
   13000:	ror	r6, r8, #31
   13004:	str	r8, [fp, #-76]	; 0xffffffb4
   13008:	add	r1, r6, r1, ror #2
   1300c:	str	r6, [sp, #20]
   13010:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13014:	add	r1, r1, r4
   13018:	ror	r4, r2, #2
   1301c:	add	r1, r1, r3, ror #27
   13020:	eor	r4, r4, r0, ror #2
   13024:	add	r1, r1, ip
   13028:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1302c:	eor	r4, r4, r3
   13030:	eor	r7, r7, ip, ror #31
   13034:	eor	r7, r7, r6, ror #31
   13038:	movw	r6, #60321	; 0xeba1
   1303c:	eor	r9, r7, r5, ror #31
   13040:	movt	r6, #28377	; 0x6ed9
   13044:	ror	r5, r9, #31
   13048:	str	r9, [fp, #-88]	; 0xffffffa8
   1304c:	add	r7, r5, lr, ror #2
   13050:	str	r5, [sp, #28]
   13054:	ldr	r5, [sp, #68]	; 0x44
   13058:	add	r7, r7, r4
   1305c:	ror	r4, r3, #2
   13060:	add	r7, r7, r1, ror #27
   13064:	eor	r4, r4, r2, ror #2
   13068:	add	r7, r7, r6
   1306c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13070:	eor	r4, r4, r1
   13074:	eor	r5, r5, sl, ror #31
   13078:	movw	sl, #60321	; 0xeba1
   1307c:	movt	sl, #28377	; 0x6ed9
   13080:	eor	r5, r5, r6, ror #31
   13084:	ldr	r6, [fp, #-44]	; 0xffffffd4
   13088:	eor	r6, r5, r6, ror #31
   1308c:	ror	r5, r6, #31
   13090:	str	r6, [sp, #96]	; 0x60
   13094:	ldr	r6, [sp, #60]	; 0x3c
   13098:	add	r0, r5, r0, ror #2
   1309c:	str	r5, [sp, #48]	; 0x30
   130a0:	ror	r5, r1, #2
   130a4:	add	r0, r0, r4
   130a8:	eor	r5, r5, r3, ror #2
   130ac:	eor	r5, r5, r7
   130b0:	add	r0, r0, r7, ror #27
   130b4:	eor	r4, r6, ip, ror #31
   130b8:	ldr	r6, [sp, #100]	; 0x64
   130bc:	add	r0, r0, sl
   130c0:	eor	r4, r4, r6, ror #31
   130c4:	eor	r4, r4, r8, ror #31
   130c8:	ror	r6, r4, #31
   130cc:	mov	r8, r4
   130d0:	str	r4, [fp, #-80]	; 0xffffffb0
   130d4:	ldr	r4, [sp, #56]	; 0x38
   130d8:	add	r2, r6, r2, ror #2
   130dc:	str	r6, [sp, #32]
   130e0:	ldr	r6, [fp, #-68]	; 0xffffffbc
   130e4:	add	r2, r2, r5
   130e8:	ror	r5, r7, #2
   130ec:	eor	r5, r5, r1, ror #2
   130f0:	add	r2, r2, r0, ror #27
   130f4:	eor	lr, r5, r0
   130f8:	add	r2, r2, sl
   130fc:	eor	r4, r4, r6, ror #31
   13100:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13104:	eor	r4, r4, r6, ror #31
   13108:	eor	r4, r4, r9, ror #31
   1310c:	mov	r9, sl
   13110:	ror	r5, r4, #31
   13114:	mov	r6, r4
   13118:	str	r4, [fp, #-84]	; 0xffffffac
   1311c:	ldr	r4, [sp, #52]	; 0x34
   13120:	add	r3, r5, r3, ror #2
   13124:	str	r5, [sp, #36]	; 0x24
   13128:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1312c:	add	r3, r3, lr
   13130:	add	r3, r3, r2, ror #27
   13134:	add	lr, r3, sl
   13138:	ldr	sl, [sp, #96]	; 0x60
   1313c:	ror	r3, r0, #2
   13140:	eor	r4, r4, r5, ror #31
   13144:	ldr	r5, [sp, #104]	; 0x68
   13148:	eor	r3, r3, r7, ror #2
   1314c:	eor	r3, r3, r2
   13150:	eor	r4, r4, r5, ror #31
   13154:	eor	r5, r4, sl, ror #31
   13158:	ror	r4, r5, #31
   1315c:	mov	ip, r5
   13160:	str	r5, [fp, #-72]	; 0xffffffb8
   13164:	ldr	r5, [fp, #-92]	; 0xffffffa4
   13168:	add	r1, r4, r1, ror #2
   1316c:	str	r4, [sp, #40]	; 0x28
   13170:	ldr	r4, [sp, #44]	; 0x2c
   13174:	add	r1, r1, r3
   13178:	ror	r3, r2, #2
   1317c:	add	r1, r1, lr, ror #27
   13180:	eor	r3, r3, r0, ror #2
   13184:	add	r1, r1, r9
   13188:	eor	r3, r3, lr
   1318c:	eor	r4, r4, r5, ror #31
   13190:	ldr	r5, [fp, #-96]	; 0xffffffa0
   13194:	eor	r4, r4, r5, ror #31
   13198:	eor	r5, r4, r8, ror #31
   1319c:	movw	r8, #60321	; 0xeba1
   131a0:	ror	r4, r5, #31
   131a4:	mov	r9, r5
   131a8:	str	r5, [fp, #-92]	; 0xffffffa4
   131ac:	ldr	r5, [sp, #24]
   131b0:	movt	r8, #28377	; 0x6ed9
   131b4:	str	r4, [sp, #44]	; 0x2c
   131b8:	add	r4, r4, r7, ror #2
   131bc:	ldr	r7, [fp, #-100]	; 0xffffff9c
   131c0:	add	r3, r4, r3
   131c4:	movw	r4, #60321	; 0xeba1
   131c8:	add	r3, r3, r1, ror #27
   131cc:	movt	r4, #28377	; 0x6ed9
   131d0:	add	r3, r3, r4
   131d4:	ror	r4, lr, #2
   131d8:	eor	r5, r5, r7, ror #31
   131dc:	ldr	r7, [fp, #-44]	; 0xffffffd4
   131e0:	eor	r4, r4, r2, ror #2
   131e4:	eor	r4, r4, r1
   131e8:	eor	r5, r5, r7, ror #31
   131ec:	eor	r7, r5, r6, ror #31
   131f0:	ror	r5, r7, #31
   131f4:	mov	r6, r7
   131f8:	str	r7, [fp, #-56]	; 0xffffffc8
   131fc:	ldr	r7, [fp, #-48]	; 0xffffffd0
   13200:	add	r0, r5, r0, ror #2
   13204:	str	r5, [sp, #52]	; 0x34
   13208:	add	r0, r0, r4
   1320c:	ldr	r4, [sp, #16]
   13210:	add	r0, r0, r3, ror #27
   13214:	add	r5, r0, r8
   13218:	ror	r0, r1, #2
   1321c:	eor	r0, r0, lr, ror #2
   13220:	eor	r4, r4, r7, ror #31
   13224:	ldr	r7, [fp, #-76]	; 0xffffffb4
   13228:	eor	r0, r0, r3
   1322c:	eor	r4, r4, r7, ror #31
   13230:	ldr	r7, [sp]
   13234:	eor	ip, r4, ip, ror #31
   13238:	ror	r4, ip, #31
   1323c:	str	ip, [fp, #-64]	; 0xffffffc0
   13240:	add	r2, r4, r2, ror #2
   13244:	str	r4, [fp, #-48]	; 0xffffffd0
   13248:	add	r0, r2, r0
   1324c:	add	r0, r0, r5, ror #27
   13250:	add	r2, r0, r8
   13254:	orr	r0, r2, r5, ror #2
   13258:	and	r4, r2, r5, ror #2
   1325c:	and	r0, r0, r3, ror #2
   13260:	orr	r0, r0, r4
   13264:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13268:	eor	r4, r7, r4, ror #31
   1326c:	movw	r7, #60321	; 0xeba1
   13270:	eor	r4, r4, sl, ror #31
   13274:	movt	r7, #28377	; 0x6ed9
   13278:	movw	sl, #48348	; 0xbcdc
   1327c:	eor	r8, r4, r6, ror #31
   13280:	movt	sl, #36635	; 0x8f1b
   13284:	ror	r6, r8, #31
   13288:	str	r8, [fp, #-60]	; 0xffffffc4
   1328c:	add	r4, r6, r1, ror #2
   13290:	str	r6, [sp, #68]	; 0x44
   13294:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13298:	add	r0, r4, r0
   1329c:	ror	r4, r3, #2
   132a0:	eor	r1, r4, r1, ror #2
   132a4:	eor	r4, r1, r5
   132a8:	ldr	r1, [sp, #64]	; 0x40
   132ac:	eor	r1, r1, r6, ror #31
   132b0:	ldr	r6, [fp, #-88]	; 0xffffffa8
   132b4:	eor	r1, r1, r6, ror #31
   132b8:	eor	r9, r1, r9, ror #31
   132bc:	ror	r6, r9, #31
   132c0:	str	r9, [sp, #16]
   132c4:	add	r1, r6, lr, ror #2
   132c8:	str	r6, [sp, #24]
   132cc:	add	r1, r1, r4
   132d0:	ldr	r4, [sp, #100]	; 0x64
   132d4:	add	r1, r1, r2, ror #27
   132d8:	add	r6, r1, r7
   132dc:	orr	r1, r6, r2, ror #2
   132e0:	and	r7, r6, r2, ror #2
   132e4:	add	r0, r0, r6, ror #27
   132e8:	and	r1, r1, r5, ror #2
   132ec:	add	r0, r0, sl
   132f0:	orr	r1, r1, r7
   132f4:	ldr	r7, [sp, #12]
   132f8:	eor	r7, r7, r4, ror #31
   132fc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13300:	eor	r7, r7, r4, ror #31
   13304:	eor	r7, r7, ip, ror #31
   13308:	ror	r4, r7, #31
   1330c:	mov	lr, r7
   13310:	str	r7, [fp, #-68]	; 0xffffffbc
   13314:	and	r7, r0, r6, ror #2
   13318:	add	r3, r4, r3, ror #2
   1331c:	str	r4, [sp, #100]	; 0x64
   13320:	ldr	r4, [fp, #-52]	; 0xffffffcc
   13324:	add	r1, r3, r1
   13328:	add	r1, r1, r0, ror #27
   1332c:	add	r3, r1, sl
   13330:	orr	r1, r0, r6, ror #2
   13334:	and	r1, r1, r2, ror #2
   13338:	orr	r1, r1, r7
   1333c:	ldr	r7, [sp, #8]
   13340:	eor	r7, r7, r4, ror #31
   13344:	ldr	r4, [fp, #-84]	; 0xffffffac
   13348:	eor	r7, r7, r4, ror #31
   1334c:	eor	ip, r7, r9, ror #31
   13350:	ror	r4, ip, #31
   13354:	str	ip, [sp, #12]
   13358:	add	r7, r4, r5, ror #2
   1335c:	str	r4, [sp, #64]	; 0x40
   13360:	ldr	r4, [sp, #4]
   13364:	add	r1, r7, r1
   13368:	and	r7, r3, r0, ror #2
   1336c:	add	r1, r1, r3, ror #27
   13370:	add	r5, r1, sl
   13374:	orr	r1, r3, r0, ror #2
   13378:	and	r1, r1, r6, ror #2
   1337c:	orr	r1, r1, r7
   13380:	ldr	r7, [sp, #104]	; 0x68
   13384:	eor	r7, r4, r7, ror #31
   13388:	ldr	r4, [fp, #-72]	; 0xffffffb8
   1338c:	eor	r7, r7, r4, ror #31
   13390:	eor	r4, r7, r8, ror #31
   13394:	and	r7, r5, r3, ror #2
   13398:	mov	r8, sl
   1339c:	str	r4, [fp, #-32]	; 0xffffffe0
   133a0:	ror	r4, r4, #31
   133a4:	add	r2, r4, r2, ror #2
   133a8:	str	r4, [sp, #104]	; 0x68
   133ac:	ldr	r4, [sp, #20]
   133b0:	add	r1, r2, r1
   133b4:	add	r1, r1, r5, ror #27
   133b8:	add	r2, r1, sl
   133bc:	orr	r1, r5, r3, ror #2
   133c0:	and	r1, r1, r0, ror #2
   133c4:	orr	r1, r1, r7
   133c8:	ldr	r7, [fp, #-96]	; 0xffffffa0
   133cc:	eor	r7, r4, r7, ror #31
   133d0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   133d4:	eor	r7, r7, r4, ror #31
   133d8:	eor	r7, r7, lr, ror #31
   133dc:	ror	r4, r7, #31
   133e0:	str	r7, [fp, #-96]	; 0xffffffa0
   133e4:	add	r7, r4, r6, ror #2
   133e8:	str	r4, [sp, #60]	; 0x3c
   133ec:	ldr	r4, [sp, #28]
   133f0:	ldr	r6, [fp, #-44]	; 0xffffffd4
   133f4:	add	r1, r7, r1
   133f8:	and	r7, r2, r5, ror #2
   133fc:	add	r1, r1, r2, ror #27
   13400:	add	lr, r1, sl
   13404:	orr	r1, r2, r5, ror #2
   13408:	mov	sl, ip
   1340c:	and	r1, r1, r3, ror #2
   13410:	orr	r1, r1, r7
   13414:	eor	r7, r4, r6, ror #31
   13418:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1341c:	ldr	r6, [fp, #-88]	; 0xffffffa8
   13420:	eor	r7, r7, r4, ror #31
   13424:	ldr	r4, [fp, #-76]	; 0xffffffb4
   13428:	eor	r7, r7, ip, ror #31
   1342c:	str	r7, [fp, #-100]	; 0xffffff9c
   13430:	ror	r7, r7, #31
   13434:	add	r0, r7, r0, ror #2
   13438:	str	r7, [sp, #56]	; 0x38
   1343c:	and	r7, lr, r2, ror #2
   13440:	add	r0, r0, r1
   13444:	orr	r1, lr, r2, ror #2
   13448:	add	r0, r0, lr, ror #27
   1344c:	and	r1, r1, r5, ror #2
   13450:	add	ip, r0, r8
   13454:	ldr	r0, [sp, #48]	; 0x30
   13458:	orr	r1, r1, r7
   1345c:	eor	r7, r0, r4, ror #31
   13460:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13464:	movw	r4, #48348	; 0xbcdc
   13468:	movt	r4, #36635	; 0x8f1b
   1346c:	eor	r7, r7, r0, ror #31
   13470:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13474:	eor	r8, r7, r0, ror #31
   13478:	and	r7, ip, lr, ror #2
   1347c:	ror	r0, r8, #31
   13480:	str	r8, [fp, #-76]	; 0xffffffb4
   13484:	add	r3, r0, r3, ror #2
   13488:	str	r0, [sp, #48]	; 0x30
   1348c:	ldr	r0, [sp, #32]
   13490:	add	r1, r3, r1
   13494:	add	r1, r1, ip, ror #27
   13498:	add	r3, r1, r4
   1349c:	orr	r1, ip, lr, ror #2
   134a0:	and	r1, r1, r2, ror #2
   134a4:	orr	r1, r1, r7
   134a8:	eor	r7, r0, r6, ror #31
   134ac:	ldr	r6, [sp, #96]	; 0x60
   134b0:	eor	r7, r7, r9, ror #31
   134b4:	ldr	r9, [fp, #-96]	; 0xffffffa0
   134b8:	eor	r0, r7, r9, ror #31
   134bc:	str	r0, [fp, #-36]	; 0xffffffdc
   134c0:	ror	r0, r0, #31
   134c4:	add	r7, r0, r5, ror #2
   134c8:	str	r0, [fp, #-88]	; 0xffffffa8
   134cc:	ldr	r0, [sp, #36]	; 0x24
   134d0:	add	r1, r7, r1
   134d4:	and	r7, r3, ip, ror #2
   134d8:	add	r1, r1, r3, ror #27
   134dc:	add	r5, r1, r4
   134e0:	orr	r1, r3, ip, ror #2
   134e4:	and	r1, r1, lr, ror #2
   134e8:	orr	r1, r1, r7
   134ec:	eor	r7, r0, r6, ror #31
   134f0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   134f4:	ldr	r6, [fp, #-100]	; 0xffffff9c
   134f8:	eor	r7, r7, r0, ror #31
   134fc:	eor	r0, r7, r6, ror #31
   13500:	and	r7, r5, r3, ror #2
   13504:	str	r0, [fp, #-40]	; 0xffffffd8
   13508:	ror	r0, r0, #31
   1350c:	add	r2, r0, r2, ror #2
   13510:	str	r0, [sp, #96]	; 0x60
   13514:	ldr	r0, [sp, #40]	; 0x28
   13518:	add	r1, r2, r1
   1351c:	add	r1, r1, r5, ror #27
   13520:	add	r2, r1, r4
   13524:	orr	r1, r5, r3, ror #2
   13528:	and	r1, r1, ip, ror #2
   1352c:	orr	r1, r1, r7
   13530:	ldr	r7, [fp, #-80]	; 0xffffffb0
   13534:	eor	r7, r0, r7, ror #31
   13538:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1353c:	eor	r7, r7, r0, ror #31
   13540:	eor	r0, r7, r8, ror #31
   13544:	mov	r8, r4
   13548:	str	r0, [fp, #-44]	; 0xffffffd4
   1354c:	ror	r0, r0, #31
   13550:	add	r7, r0, lr, ror #2
   13554:	str	r0, [sp, #40]	; 0x28
   13558:	ldr	r0, [sp, #44]	; 0x2c
   1355c:	add	r1, r7, r1
   13560:	and	r7, r2, r5, ror #2
   13564:	add	r1, r1, r2, ror #27
   13568:	add	lr, r1, r4
   1356c:	ldr	r4, [fp, #-84]	; 0xffffffac
   13570:	orr	r1, r2, r5, ror #2
   13574:	and	r1, r1, r3, ror #2
   13578:	orr	r1, r1, r7
   1357c:	eor	r7, r0, r4, ror #31
   13580:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13584:	ldr	r4, [fp, #-72]	; 0xffffffb8
   13588:	eor	r7, r7, sl, ror #31
   1358c:	eor	r0, r7, r0, ror #31
   13590:	and	r7, lr, r2, ror #2
   13594:	str	r0, [fp, #-80]	; 0xffffffb0
   13598:	ror	r0, r0, #31
   1359c:	str	r0, [sp, #44]	; 0x2c
   135a0:	add	r0, r0, ip, ror #2
   135a4:	mov	ip, r8
   135a8:	add	r0, r0, r1
   135ac:	orr	r1, lr, r2, ror #2
   135b0:	and	r1, r1, r5, ror #2
   135b4:	add	r0, r0, lr, ror #27
   135b8:	orr	sl, r1, r7
   135bc:	ldr	r7, [sp, #52]	; 0x34
   135c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   135c4:	add	r0, r0, r8
   135c8:	eor	r7, r7, r4, ror #31
   135cc:	ldr	r4, [fp, #-92]	; 0xffffffa4
   135d0:	eor	r7, r7, r1, ror #31
   135d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   135d8:	eor	r8, r7, r1, ror #31
   135dc:	ror	r7, r8, #31
   135e0:	str	r8, [sp, #32]
   135e4:	add	r3, r7, r3, ror #2
   135e8:	str	r7, [sp, #52]	; 0x34
   135ec:	and	r7, r0, lr, ror #2
   135f0:	add	r1, r3, sl
   135f4:	add	r1, r1, r0, ror #27
   135f8:	add	r3, r1, ip
   135fc:	orr	r1, r0, lr, ror #2
   13600:	and	r1, r1, r2, ror #2
   13604:	orr	r1, r1, r7
   13608:	ldr	r7, [fp, #-48]	; 0xffffffd0
   1360c:	eor	r7, r7, r4, ror #31
   13610:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13614:	eor	r7, r7, r9, ror #31
   13618:	ldr	r9, [fp, #-80]	; 0xffffffb0
   1361c:	eor	r4, r7, r4, ror #31
   13620:	str	r4, [fp, #-48]	; 0xffffffd0
   13624:	ror	r4, r4, #31
   13628:	add	r7, r4, r5, ror #2
   1362c:	ldr	r5, [fp, #-56]	; 0xffffffc8
   13630:	str	r4, [fp, #-92]	; 0xffffffa4
   13634:	mov	r4, ip
   13638:	add	r1, r7, r1
   1363c:	and	r7, r3, r0, ror #2
   13640:	add	r1, r1, r3, ror #27
   13644:	add	sl, r1, ip
   13648:	orr	r1, r3, r0, ror #2
   1364c:	and	r1, r1, lr, ror #2
   13650:	orr	r1, r1, r7
   13654:	ldr	r7, [sp, #24]
   13658:	eor	r7, r7, r5, ror #31
   1365c:	ldr	r5, [sp, #68]	; 0x44
   13660:	eor	r7, r7, r6, ror #31
   13664:	ldr	r6, [fp, #-76]	; 0xffffffb4
   13668:	eor	r7, r7, r9, ror #31
   1366c:	str	r7, [fp, #-52]	; 0xffffffcc
   13670:	ror	r7, r7, #31
   13674:	add	r2, r7, r2, ror #2
   13678:	str	r7, [sp, #36]	; 0x24
   1367c:	and	r7, sl, r3, ror #2
   13680:	add	r1, r2, r1
   13684:	add	r1, r1, sl, ror #27
   13688:	add	r2, r1, ip
   1368c:	orr	r1, sl, r3, ror #2
   13690:	and	r1, r1, r0, ror #2
   13694:	orr	r1, r1, r7
   13698:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1369c:	eor	r7, r5, r7, ror #31
   136a0:	ldr	r5, [sp, #16]
   136a4:	eor	r7, r7, r6, ror #31
   136a8:	eor	r6, r7, r8, ror #31
   136ac:	ror	r7, r6, #31
   136b0:	mov	ip, r6
   136b4:	str	r6, [fp, #-72]	; 0xffffffb8
   136b8:	and	r6, r2, sl, ror #2
   136bc:	str	r7, [sp, #68]	; 0x44
   136c0:	add	r7, r7, lr, ror #2
   136c4:	add	r1, r7, r1
   136c8:	orr	r7, r2, sl, ror #2
   136cc:	and	r7, r7, r3, ror #2
   136d0:	add	r1, r1, r2, ror #27
   136d4:	orr	r7, r7, r6
   136d8:	ldr	r6, [sp, #100]	; 0x64
   136dc:	add	r1, r1, r4
   136e0:	eor	r6, r6, r5, ror #31
   136e4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   136e8:	eor	r6, r6, r5, ror #31
   136ec:	ldr	r5, [fp, #-48]	; 0xffffffd0
   136f0:	eor	r6, r6, r5, ror #31
   136f4:	ror	r5, r6, #31
   136f8:	mov	lr, r6
   136fc:	and	r6, r1, r2, ror #2
   13700:	add	r0, r5, r0, ror #2
   13704:	str	r5, [sp, #100]	; 0x64
   13708:	ldr	r5, [fp, #-60]	; 0xffffffc4
   1370c:	str	lr, [sp, #28]
   13710:	add	r0, r0, r7
   13714:	orr	r7, r1, r2, ror #2
   13718:	and	r7, r7, sl, ror #2
   1371c:	add	r0, r0, r1, ror #27
   13720:	orr	r7, r7, r6
   13724:	ldr	r6, [sp, #64]	; 0x40
   13728:	add	r0, r0, r4
   1372c:	eor	r6, r6, r5, ror #31
   13730:	ldr	r5, [fp, #-40]	; 0xffffffd8
   13734:	eor	r6, r6, r5, ror #31
   13738:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1373c:	eor	r5, r6, r5, ror #31
   13740:	and	r6, r0, r1, ror #2
   13744:	str	r5, [fp, #-56]	; 0xffffffc8
   13748:	ror	r5, r5, #31
   1374c:	add	r3, r5, r3, ror #2
   13750:	str	r5, [sp, #64]	; 0x40
   13754:	ldr	r5, [fp, #-68]	; 0xffffffbc
   13758:	add	r3, r3, r7
   1375c:	orr	r7, r0, r1, ror #2
   13760:	and	r7, r7, r2, ror #2
   13764:	add	r3, r3, r0, ror #27
   13768:	orr	r7, r7, r6
   1376c:	ldr	r6, [sp, #104]	; 0x68
   13770:	add	r3, r3, r4
   13774:	eor	r6, r6, r5, ror #31
   13778:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1377c:	eor	r6, r6, r5, ror #31
   13780:	eor	r6, r6, ip, ror #31
   13784:	ror	r5, r6, #31
   13788:	str	r6, [fp, #-68]	; 0xffffffbc
   1378c:	add	r6, r5, sl, ror #2
   13790:	str	r5, [sp, #104]	; 0x68
   13794:	ldr	r5, [sp, #60]	; 0x3c
   13798:	mov	sl, lr
   1379c:	add	r7, r6, r7
   137a0:	and	r6, r3, r0, ror #2
   137a4:	add	r7, r7, r3, ror #27
   137a8:	add	ip, r7, r4
   137ac:	orr	r7, r3, r0, ror #2
   137b0:	and	r7, r7, r1, ror #2
   137b4:	orr	r7, r7, r6
   137b8:	ldr	r6, [sp, #12]
   137bc:	eor	r6, r5, r6, ror #31
   137c0:	eor	r6, r6, r9, ror #31
   137c4:	eor	lr, r6, lr, ror #31
   137c8:	ror	r6, lr, #31
   137cc:	str	lr, [fp, #-84]	; 0xffffffac
   137d0:	add	r2, r6, r2, ror #2
   137d4:	str	r6, [sp, #60]	; 0x3c
   137d8:	ldr	r6, [sp, #56]	; 0x38
   137dc:	add	r2, r2, r7
   137e0:	and	r7, ip, r3, ror #2
   137e4:	add	r2, r2, ip, ror #27
   137e8:	add	r5, r2, r4
   137ec:	orr	r2, ip, r3, ror #2
   137f0:	and	r2, r2, r0, ror #2
   137f4:	orr	r9, r2, r7
   137f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   137fc:	eor	r7, r6, r2, ror #31
   13800:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13804:	eor	r7, r7, r8, ror #31
   13808:	eor	r6, r7, r2, ror #31
   1380c:	ror	r2, r6, #31
   13810:	mov	r7, r6
   13814:	str	r6, [fp, #-64]	; 0xffffffc0
   13818:	ldr	r6, [fp, #-96]	; 0xffffffa0
   1381c:	add	r1, r2, r1, ror #2
   13820:	str	r2, [sp, #56]	; 0x38
   13824:	ldr	r2, [sp, #48]	; 0x30
   13828:	add	r1, r1, r9
   1382c:	ldr	r9, [fp, #-68]	; 0xffffffbc
   13830:	add	r1, r1, r5, ror #27
   13834:	add	r4, r1, r4
   13838:	ror	r1, ip, #2
   1383c:	eor	r2, r2, r6, ror #31
   13840:	ldr	r6, [fp, #-48]	; 0xffffffd0
   13844:	eor	r1, r1, r3, ror #2
   13848:	eor	r1, r1, r5
   1384c:	eor	r2, r2, r6, ror #31
   13850:	eor	r8, r2, r9, ror #31
   13854:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13858:	ror	r6, r8, #31
   1385c:	str	r8, [fp, #-60]	; 0xffffffc4
   13860:	add	r0, r6, r0, ror #2
   13864:	str	r6, [sp, #48]	; 0x30
   13868:	ldr	r6, [fp, #-100]	; 0xffffff9c
   1386c:	add	r0, r0, r1
   13870:	movw	r1, #49622	; 0xc1d6
   13874:	add	r0, r0, r4, ror #27
   13878:	movt	r1, #51810	; 0xca62
   1387c:	add	r0, r0, r1
   13880:	ror	r1, r5, #2
   13884:	eor	r2, r2, r6, ror #31
   13888:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1388c:	eor	r1, r1, ip, ror #2
   13890:	eor	r1, r1, r4
   13894:	eor	r2, r2, r6, ror #31
   13898:	eor	r2, r2, lr, ror #31
   1389c:	ror	r6, r2, #31
   138a0:	str	r2, [fp, #-32]	; 0xffffffe0
   138a4:	add	r2, r6, r3, ror #2
   138a8:	str	r6, [fp, #-100]	; 0xffffff9c
   138ac:	ldr	r3, [sp, #96]	; 0x60
   138b0:	ldr	r6, [fp, #-76]	; 0xffffffb4
   138b4:	add	r1, r2, r1
   138b8:	movw	r2, #49622	; 0xc1d6
   138bc:	add	r1, r1, r0, ror #27
   138c0:	movt	r2, #51810	; 0xca62
   138c4:	add	r1, r1, r2
   138c8:	ror	r2, r4, #2
   138cc:	eor	r3, r3, r6, ror #31
   138d0:	ldr	r6, [fp, #-72]	; 0xffffffb8
   138d4:	eor	r2, r2, r5, ror #2
   138d8:	eor	r2, r2, r0
   138dc:	eor	r3, r3, r6, ror #31
   138e0:	eor	lr, r3, r7, ror #31
   138e4:	ldr	r7, [sp, #40]	; 0x28
   138e8:	ror	r6, lr, #31
   138ec:	str	lr, [sp, #96]	; 0x60
   138f0:	add	r3, r6, ip, ror #2
   138f4:	str	r6, [fp, #-96]	; 0xffffffa0
   138f8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   138fc:	add	r2, r3, r2
   13900:	movw	r3, #49622	; 0xc1d6
   13904:	add	r2, r2, r1, ror #27
   13908:	movt	r3, #51810	; 0xca62
   1390c:	add	r2, r2, r3
   13910:	ror	r3, r0, #2
   13914:	eor	r7, r7, r6, ror #31
   13918:	eor	r3, r3, r4, ror #2
   1391c:	eor	r7, r7, sl, ror #31
   13920:	eor	r3, r3, r1
   13924:	eor	r7, r7, r8, ror #31
   13928:	ror	r6, r7, #31
   1392c:	mov	ip, r7
   13930:	str	r7, [fp, #-36]	; 0xffffffdc
   13934:	add	r7, r6, r5, ror #2
   13938:	movw	r5, #49622	; 0xc1d6
   1393c:	str	r6, [fp, #-88]	; 0xffffffa8
   13940:	add	r3, r7, r3
   13944:	movt	r5, #51810	; 0xca62
   13948:	add	r3, r3, r2, ror #27
   1394c:	add	r7, r3, r5
   13950:	ror	r3, r1, #2
   13954:	ldr	r5, [sp, #44]	; 0x2c
   13958:	eor	r3, r3, r0, ror #2
   1395c:	eor	sl, r3, r2
   13960:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13964:	eor	r6, r5, r3, ror #31
   13968:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1396c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   13970:	eor	r6, r6, r3, ror #31
   13974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13978:	eor	r8, r6, r3, ror #31
   1397c:	ror	r3, r8, #31
   13980:	str	r8, [sp, #44]	; 0x2c
   13984:	add	r6, r3, r4, ror #2
   13988:	str	r3, [fp, #-76]	; 0xffffffb4
   1398c:	add	r3, r6, sl
   13990:	ldr	r6, [sp, #52]	; 0x34
   13994:	movw	sl, #49622	; 0xc1d6
   13998:	add	r3, r3, r7, ror #27
   1399c:	movt	sl, #51810	; 0xca62
   139a0:	add	r4, r3, sl
   139a4:	ror	r3, r2, #2
   139a8:	eor	r3, r3, r1, ror #2
   139ac:	eor	r6, r6, r5, ror #31
   139b0:	eor	r3, r3, r7
   139b4:	eor	r6, r6, r9, ror #31
   139b8:	eor	r5, r6, lr, ror #31
   139bc:	ror	r6, r5, #31
   139c0:	mov	r9, r5
   139c4:	str	r5, [sp, #52]	; 0x34
   139c8:	ldr	r5, [fp, #-80]	; 0xffffffb0
   139cc:	add	r0, r6, r0, ror #2
   139d0:	str	r6, [fp, #-44]	; 0xffffffd4
   139d4:	ldr	r6, [fp, #-92]	; 0xffffffa4
   139d8:	add	r0, r0, r3
   139dc:	ror	r3, r7, #2
   139e0:	eor	r3, r3, r2, ror #2
   139e4:	add	r0, r0, r4, ror #27
   139e8:	eor	r3, r3, r4
   139ec:	add	r0, r0, sl
   139f0:	eor	r6, r6, r5, ror #31
   139f4:	ldr	r5, [fp, #-84]	; 0xffffffac
   139f8:	eor	r6, r6, r5, ror #31
   139fc:	eor	r5, r6, ip, ror #31
   13a00:	ror	r6, r5, #31
   13a04:	mov	ip, r5
   13a08:	str	r5, [fp, #-92]	; 0xffffffa4
   13a0c:	ldr	r5, [sp, #32]
   13a10:	add	r1, r6, r1, ror #2
   13a14:	ldr	r6, [sp, #36]	; 0x24
   13a18:	add	r1, r1, r3
   13a1c:	ror	r3, r4, #2
   13a20:	eor	r3, r3, r7, ror #2
   13a24:	add	r1, r1, r0, ror #27
   13a28:	eor	r3, r3, r0
   13a2c:	add	r1, r1, sl
   13a30:	eor	r6, r6, r5, ror #31
   13a34:	ldr	r5, [fp, #-64]	; 0xffffffc0
   13a38:	eor	r6, r6, r5, ror #31
   13a3c:	eor	r5, r6, r8, ror #31
   13a40:	ror	r6, r5, #31
   13a44:	mov	r8, r5
   13a48:	str	r5, [sp, #40]	; 0x28
   13a4c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13a50:	add	r2, r6, r2, ror #2
   13a54:	ldr	r6, [sp, #68]	; 0x44
   13a58:	add	r2, r2, r3
   13a5c:	ror	r3, r0, #2
   13a60:	eor	r3, r3, r4, ror #2
   13a64:	add	r2, r2, r1, ror #27
   13a68:	eor	r3, r3, r1
   13a6c:	add	r2, r2, sl
   13a70:	eor	r6, r6, r5, ror #31
   13a74:	ldr	r5, [fp, #-60]	; 0xffffffc4
   13a78:	eor	r6, r6, r5, ror #31
   13a7c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   13a80:	eor	r9, r6, r9, ror #31
   13a84:	ror	r6, r9, #31
   13a88:	str	r9, [fp, #-80]	; 0xffffffb0
   13a8c:	add	r7, r6, r7, ror #2
   13a90:	add	r3, r7, r3
   13a94:	ror	r7, r1, #2
   13a98:	eor	r7, r7, r0, ror #2
   13a9c:	add	r3, r3, r2, ror #27
   13aa0:	eor	r6, r7, r2
   13aa4:	ldr	r7, [sp, #100]	; 0x64
   13aa8:	add	r3, r3, sl
   13aac:	eor	r7, r7, r5, ror #31
   13ab0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13ab4:	eor	r7, r7, r5, ror #31
   13ab8:	ldr	r5, [sp, #28]
   13abc:	eor	r7, r7, ip, ror #31
   13ac0:	str	r7, [fp, #-40]	; 0xffffffd8
   13ac4:	ror	r7, r7, #31
   13ac8:	add	r7, r7, r4, ror #2
   13acc:	ror	r4, r2, #2
   13ad0:	add	r7, r7, r6
   13ad4:	ldr	r6, [fp, #-72]	; 0xffffffb8
   13ad8:	eor	r4, r4, r1, ror #2
   13adc:	add	r7, r7, r3, ror #27
   13ae0:	eor	r4, r4, r3
   13ae4:	add	ip, r7, sl
   13ae8:	ldr	r7, [sp, #64]	; 0x40
   13aec:	eor	r6, r7, r6, ror #31
   13af0:	ldr	r7, [sp, #60]	; 0x3c
   13af4:	eor	r6, r6, lr, ror #31
   13af8:	eor	r8, r6, r8, ror #31
   13afc:	ror	r6, r8, #31
   13b00:	str	r8, [fp, #-52]	; 0xffffffcc
   13b04:	add	r0, r6, r0, ror #2
   13b08:	ldr	r6, [sp, #104]	; 0x68
   13b0c:	add	r0, r0, r4
   13b10:	ror	r4, r3, #2
   13b14:	eor	r4, r4, r2, ror #2
   13b18:	add	r0, r0, ip, ror #27
   13b1c:	eor	r4, r4, ip
   13b20:	add	r0, r0, sl
   13b24:	eor	r6, r6, r5, ror #31
   13b28:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13b2c:	eor	r6, r6, r5, ror #31
   13b30:	eor	r5, r6, r9, ror #31
   13b34:	ror	r6, r5, #31
   13b38:	mov	r9, r5
   13b3c:	str	r5, [fp, #-48]	; 0xffffffd0
   13b40:	add	r1, r6, r1, ror #2
   13b44:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13b48:	add	r1, r1, r4
   13b4c:	add	r1, r1, r0, ror #27
   13b50:	add	r4, r1, sl
   13b54:	ror	r1, ip, #2
   13b58:	eor	r6, r7, r6, ror #31
   13b5c:	ldr	r7, [sp, #44]	; 0x2c
   13b60:	eor	r1, r1, r3, ror #2
   13b64:	eor	r1, r1, r0
   13b68:	eor	r5, r6, r7, ror #31
   13b6c:	ldr	r7, [fp, #-40]	; 0xffffffd8
   13b70:	mov	r6, sl
   13b74:	eor	lr, r5, r7, ror #31
   13b78:	ldr	r7, [sp, #56]	; 0x38
   13b7c:	ror	r5, lr, #31
   13b80:	add	r2, r5, r2, ror #2
   13b84:	ldr	r5, [fp, #-68]	; 0xffffffbc
   13b88:	add	r1, r2, r1
   13b8c:	ror	r2, r0, #2
   13b90:	add	r1, r1, r4, ror #27
   13b94:	eor	r2, r2, ip, ror #2
   13b98:	add	r1, r1, sl
   13b9c:	eor	r2, r2, r4
   13ba0:	eor	r5, r7, r5, ror #31
   13ba4:	ldr	r7, [sp, #52]	; 0x34
   13ba8:	eor	r7, r5, r7, ror #31
   13bac:	eor	sl, r7, r8, ror #31
   13bb0:	ror	r5, sl, #31
   13bb4:	add	r3, r5, r3, ror #2
   13bb8:	ldr	r5, [sp, #48]	; 0x30
   13bbc:	add	r2, r3, r2
   13bc0:	ror	r3, r4, #2
   13bc4:	add	r2, r2, r1, ror #27
   13bc8:	eor	r3, r3, r0, ror #2
   13bcc:	add	r2, r2, r6
   13bd0:	ldr	r6, [fp, #-84]	; 0xffffffac
   13bd4:	eor	r3, r3, r1
   13bd8:	eor	r5, r5, r6, ror #31
   13bdc:	ldr	r6, [fp, #-92]	; 0xffffffa4
   13be0:	eor	r5, r5, r6, ror #31
   13be4:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13be8:	eor	r8, r5, r9, ror #31
   13bec:	ldr	r5, [fp, #-100]	; 0xffffff9c
   13bf0:	ror	r7, r8, #31
   13bf4:	add	r7, r7, ip, ror #2
   13bf8:	add	r3, r7, r3
   13bfc:	movw	r7, #49622	; 0xc1d6
   13c00:	eor	r5, r5, r6, ror #31
   13c04:	ldr	r6, [sp, #40]	; 0x28
   13c08:	add	r3, r3, r2, ror #27
   13c0c:	movt	r7, #51810	; 0xca62
   13c10:	add	r3, r3, r7
   13c14:	ror	r7, r1, #2
   13c18:	eor	r7, r7, r4, ror #2
   13c1c:	eor	r7, r7, r2
   13c20:	eor	r5, r5, r6, ror #31
   13c24:	ldr	r6, [sp, #76]	; 0x4c
   13c28:	eor	r9, r5, lr, ror #31
   13c2c:	movw	lr, #49622	; 0xc1d6
   13c30:	ror	r5, r9, #31
   13c34:	movt	lr, #51810	; 0xca62
   13c38:	add	r0, r5, r0, ror #2
   13c3c:	ldr	r5, [fp, #-60]	; 0xffffffc4
   13c40:	add	r0, r0, r7
   13c44:	ldr	r7, [sp, #72]	; 0x48
   13c48:	add	r0, r0, r3, ror #27
   13c4c:	add	r0, r0, lr
   13c50:	add	r7, r7, r0, ror #2
   13c54:	str	r7, [r6, #16]
   13c58:	ror	r7, r2, #2
   13c5c:	eor	r7, r7, r1, ror #2
   13c60:	eor	ip, r7, r3
   13c64:	ldr	r7, [fp, #-96]	; 0xffffffa0
   13c68:	eor	r7, r7, r5, ror #31
   13c6c:	ldr	r5, [fp, #-80]	; 0xffffffb0
   13c70:	eor	r7, r7, r5, ror #31
   13c74:	ldr	r5, [sp, #88]	; 0x58
   13c78:	eor	sl, r7, sl, ror #31
   13c7c:	ror	r7, sl, #31
   13c80:	add	r7, r7, r4, ror #2
   13c84:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13c88:	add	r7, r7, ip
   13c8c:	mov	ip, lr
   13c90:	add	r7, r7, r0, ror #27
   13c94:	add	r7, r7, lr
   13c98:	mov	lr, r6
   13c9c:	add	r5, r5, r7, ror #2
   13ca0:	str	r5, [r6, #12]
   13ca4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13ca8:	ror	r5, r3, #2
   13cac:	eor	r5, r5, r2, ror #2
   13cb0:	eor	r5, r5, r0
   13cb4:	eor	r4, r4, r6, ror #31
   13cb8:	ldr	r6, [fp, #-40]	; 0xffffffd8
   13cbc:	eor	r4, r4, r6, ror #31
   13cc0:	ldr	r6, [sp, #96]	; 0x60
   13cc4:	eor	r4, r4, r8, ror #31
   13cc8:	ror	r4, r4, #31
   13ccc:	add	r1, r4, r1, ror #2
   13cd0:	ldr	r4, [sp, #80]	; 0x50
   13cd4:	add	r1, r1, r5
   13cd8:	add	r1, r1, r7, ror #27
   13cdc:	add	r1, r1, ip
   13ce0:	add	r5, r4, r1, ror #2
   13ce4:	ldr	r4, [fp, #-76]	; 0xffffffb4
   13ce8:	str	r5, [lr, #8]
   13cec:	ror	r5, r0, #2
   13cf0:	eor	r5, r5, r3, ror #2
   13cf4:	eor	r5, r5, r7
   13cf8:	ror	r7, r7, #2
   13cfc:	eor	r4, r4, r6, ror #31
   13d00:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13d04:	eor	r0, r7, r0, ror #2
   13d08:	ldr	r7, [fp, #-36]	; 0xffffffdc
   13d0c:	eor	r0, r0, r1
   13d10:	eor	r4, r4, r6, ror #31
   13d14:	eor	r6, r4, r9, ror #31
   13d18:	ldr	r4, [sp, #92]	; 0x5c
   13d1c:	ror	r6, r6, #31
   13d20:	add	r2, r6, r2, ror #2
   13d24:	add	r2, r2, r5
   13d28:	add	r2, r2, r1, ror #27
   13d2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d30:	add	r2, r2, ip
   13d34:	add	r6, r2, r4
   13d38:	str	r6, [lr, #4]
   13d3c:	eor	r1, r1, r7, ror #31
   13d40:	ldr	r7, [fp, #-48]	; 0xffffffd0
   13d44:	eor	r1, r1, r7, ror #31
   13d48:	ldr	r7, [sp, #84]	; 0x54
   13d4c:	eor	r1, r1, sl, ror #31
   13d50:	add	r1, r7, r1, ror #31
   13d54:	add	r1, r1, r3, ror #2
   13d58:	add	r0, r1, r0
   13d5c:	add	r0, r0, r2, ror #27
   13d60:	add	r0, r0, ip
   13d64:	str	r0, [lr]
   13d68:	sub	sp, fp, #28
   13d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d74:	add	fp, sp, #24
   13d78:	sub	sp, sp, #8
   13d7c:	mov	r7, r0
   13d80:	mov	r4, r0
   13d84:	mov	r9, r1
   13d88:	ldr	r0, [r7, #24]!
   13d8c:	ldr	r1, [r7, #4]
   13d90:	lsr	r2, r0, #24
   13d94:	strb	r2, [sp, #4]
   13d98:	lsr	r2, r0, #16
   13d9c:	strb	r2, [sp, #5]
   13da0:	lsr	r2, r0, #8
   13da4:	strb	r2, [sp, #6]
   13da8:	strb	r0, [sp, #7]
   13dac:	lsr	r2, r1, #16
   13db0:	strb	r1, [sp, #3]
   13db4:	strb	r2, [sp, #1]
   13db8:	lsr	r2, r1, #24
   13dbc:	strb	r2, [sp]
   13dc0:	lsr	r2, r1, #8
   13dc4:	strb	r2, [sp, #2]
   13dc8:	adds	r2, r0, #8
   13dcc:	adc	r3, r1, #0
   13dd0:	strd	r2, [r7]
   13dd4:	ubfx	r0, r0, #3, #6
   13dd8:	cmp	r0, #63	; 0x3f
   13ddc:	bne	13e00 <rb_base64_encode@plt+0x2df4>
   13de0:	mov	r0, #128	; 0x80
   13de4:	add	r6, r4, #32
   13de8:	strb	r0, [r4, #95]	; 0x5f
   13dec:	mov	r0, r4
   13df0:	mov	r1, r6
   13df4:	bl	128dc <rb_base64_encode@plt+0x18d0>
   13df8:	mov	r0, #1
   13dfc:	b	13e0c <rb_base64_encode@plt+0x2e00>
   13e00:	add	r0, r4, r0
   13e04:	add	r6, r0, #32
   13e08:	mov	r0, #0
   13e0c:	movw	r1, #17059	; 0x42a3
   13e10:	eor	r2, r0, #1
   13e14:	movt	r1, #1
   13e18:	add	r1, r1, r0
   13e1c:	mov	r0, r6
   13e20:	bl	10ee0 <memcpy@plt>
   13e24:	ldrd	r2, [r7]
   13e28:	and	r0, r2, #504	; 0x1f8
   13e2c:	ubfx	r1, r2, #3, #6
   13e30:	teq	r0, #448	; 0x1c0
   13e34:	beq	13ea4 <rb_base64_encode@plt+0x2e98>
   13e38:	movw	r5, #17061	; 0x42a5
   13e3c:	add	r6, r4, #32
   13e40:	mov	r8, #0
   13e44:	movt	r5, #1
   13e48:	adds	r0, r2, #8
   13e4c:	adc	r3, r3, #0
   13e50:	cmp	r1, #63	; 0x3f
   13e54:	stm	r7, {r0, r3}
   13e58:	bne	13e78 <rb_base64_encode@plt+0x2e6c>
   13e5c:	mov	r0, r4
   13e60:	mov	r1, r6
   13e64:	strb	r8, [r4, #95]	; 0x5f
   13e68:	bl	128dc <rb_base64_encode@plt+0x18d0>
   13e6c:	mov	r2, #1
   13e70:	mov	r0, r6
   13e74:	b	13e84 <rb_base64_encode@plt+0x2e78>
   13e78:	add	r0, r4, r1
   13e7c:	mov	r2, #0
   13e80:	add	r0, r0, #32
   13e84:	add	r1, r5, r2
   13e88:	eor	r2, r2, #1
   13e8c:	bl	10ee0 <memcpy@plt>
   13e90:	ldrd	r2, [r7]
   13e94:	and	r0, r2, #504	; 0x1f8
   13e98:	ubfx	r1, r2, #3, #6
   13e9c:	teq	r0, #448	; 0x1c0
   13ea0:	bne	13e48 <rb_base64_encode@plt+0x2e3c>
   13ea4:	adds	r0, r2, #64	; 0x40
   13ea8:	adc	r3, r3, #0
   13eac:	stm	r7, {r0, r3}
   13eb0:	add	r0, r1, #8
   13eb4:	cmp	r0, #63	; 0x3f
   13eb8:	bls	13ef0 <rb_base64_encode@plt+0x2ee4>
   13ebc:	add	r6, r4, #32
   13ec0:	rsb	r7, r1, #64	; 0x40
   13ec4:	mov	r8, sp
   13ec8:	add	r0, r6, r1
   13ecc:	mov	r1, r8
   13ed0:	mov	r2, r7
   13ed4:	bl	10ee0 <memcpy@plt>
   13ed8:	mov	r0, r4
   13edc:	mov	r1, r6
   13ee0:	bl	128dc <rb_base64_encode@plt+0x18d0>
   13ee4:	add	r1, r8, r7
   13ee8:	rsb	r2, r7, #8
   13eec:	b	13f00 <rb_base64_encode@plt+0x2ef4>
   13ef0:	add	r0, r4, r1
   13ef4:	mov	r2, #8
   13ef8:	mov	r1, sp
   13efc:	add	r6, r0, #32
   13f00:	mov	r0, r6
   13f04:	bl	10ee0 <memcpy@plt>
   13f08:	ldrb	r0, [r4, #3]
   13f0c:	vmov.i32	q8, #0	; 0x00000000
   13f10:	strb	r0, [r9]
   13f14:	ldrh	r0, [r4, #2]
   13f18:	strb	r0, [r9, #1]
   13f1c:	ldr	r0, [r4]
   13f20:	lsr	r0, r0, #8
   13f24:	strb	r0, [r9, #2]
   13f28:	ldr	r0, [r4]
   13f2c:	strb	r0, [r9, #3]
   13f30:	ldrb	r0, [r4, #7]
   13f34:	strb	r0, [r9, #4]
   13f38:	ldrh	r0, [r4, #6]
   13f3c:	strb	r0, [r9, #5]
   13f40:	ldr	r0, [r4, #4]
   13f44:	lsr	r0, r0, #8
   13f48:	strb	r0, [r9, #6]
   13f4c:	ldr	r0, [r4, #4]
   13f50:	strb	r0, [r9, #7]
   13f54:	ldrb	r0, [r4, #11]
   13f58:	strb	r0, [r9, #8]
   13f5c:	ldrh	r0, [r4, #10]
   13f60:	strb	r0, [r9, #9]
   13f64:	ldr	r0, [r4, #8]
   13f68:	lsr	r0, r0, #8
   13f6c:	strb	r0, [r9, #10]
   13f70:	ldr	r0, [r4, #8]
   13f74:	strb	r0, [r9, #11]
   13f78:	ldrb	r0, [r4, #15]
   13f7c:	strb	r0, [r9, #12]
   13f80:	ldrh	r0, [r4, #14]
   13f84:	strb	r0, [r9, #13]
   13f88:	ldr	r0, [r4, #12]
   13f8c:	lsr	r0, r0, #8
   13f90:	strb	r0, [r9, #14]
   13f94:	ldr	r0, [r4, #12]
   13f98:	strb	r0, [r9, #15]
   13f9c:	ldrb	r0, [r4, #19]
   13fa0:	strb	r0, [r9, #16]
   13fa4:	ldrh	r0, [r4, #18]
   13fa8:	strb	r0, [r9, #17]
   13fac:	mov	r0, r4
   13fb0:	ldr	r1, [r0, #16]!
   13fb4:	lsr	r1, r1, #8
   13fb8:	strb	r1, [r9, #18]
   13fbc:	ldr	r1, [r0]
   13fc0:	strb	r1, [r9, #19]
   13fc4:	add	r1, r4, #64	; 0x40
   13fc8:	vst1.64	{d16-d17}, [r0]
   13fcc:	mov	r0, #80	; 0x50
   13fd0:	vst1.64	{d16-d17}, [r1]
   13fd4:	add	r1, r4, #48	; 0x30
   13fd8:	vst1.64	{d16-d17}, [r1]
   13fdc:	add	r1, r4, #32
   13fe0:	vst1.64	{d16-d17}, [r4], r0
   13fe4:	vst1.64	{d16-d17}, [r1]
   13fe8:	vst1.64	{d16-d17}, [r4]
   13fec:	sub	sp, fp, #24
   13ff0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ff4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ff8:	mov	r7, r0
   13ffc:	ldr	r6, [pc, #72]	; 1404c <rb_base64_encode@plt+0x3040>
   14000:	ldr	r5, [pc, #72]	; 14050 <rb_base64_encode@plt+0x3044>
   14004:	add	r6, pc, r6
   14008:	add	r5, pc, r5
   1400c:	sub	r6, r6, r5
   14010:	mov	r8, r1
   14014:	mov	r9, r2
   14018:	bl	10d88 <open@plt-0x20>
   1401c:	asrs	r6, r6, #2
   14020:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14024:	mov	r4, #0
   14028:	add	r4, r4, #1
   1402c:	ldr	r3, [r5], #4
   14030:	mov	r2, r9
   14034:	mov	r1, r8
   14038:	mov	r0, r7
   1403c:	blx	r3
   14040:	cmp	r6, r4
   14044:	bne	14028 <rb_base64_encode@plt+0x301c>
   14048:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1404c:	andeq	r0, r1, r8, ror #29
   14050:	andeq	r0, r1, r0, ror #29
   14054:	bx	lr

Disassembly of section .fini:

00014058 <.fini>:
   14058:	push	{r3, lr}
   1405c:	pop	{r3, pc}
