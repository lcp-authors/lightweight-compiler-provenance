
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010d9c <.init>:
   10d9c:	push	{r3, lr}
   10da0:	bl	1105c <__mempcpy_chk@plt+0x48>
   10da4:	pop	{r3, pc}

Disassembly of section .plt:

00010da8 <calloc@plt-0x14>:
   10da8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dac:	ldr	lr, [pc, #4]	; 10db8 <calloc@plt-0x4>
   10db0:	add	lr, pc, lr
   10db4:	ldr	pc, [lr, #8]!
   10db8:	andeq	r5, r1, r8, asr #4

00010dbc <calloc@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #584]!	; 0x248

00010dc8 <fputs_unlocked@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #576]!	; 0x240

00010dd4 <strcmp@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #568]!	; 0x238

00010de0 <fflush@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #560]!	; 0x230

00010dec <free@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #552]!	; 0x228

00010df8 <_exit@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #544]!	; 0x220

00010e04 <memcpy@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #536]!	; 0x218

00010e10 <execvp@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #528]!	; 0x210

00010e1c <mbsinit@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #520]!	; 0x208

00010e28 <signal@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #512]!	; 0x200

00010e34 <memcmp@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e40 <dcgettext@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #496]!	; 0x1f0

00010e4c <dup2@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #488]!	; 0x1e8

00010e58 <realloc@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #480]!	; 0x1e0

00010e64 <textdomain@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e70 <iswprint@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #464]!	; 0x1d0

00010e7c <fwrite@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #456]!	; 0x1c8

00010e88 <lseek64@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #448]!	; 0x1c0

00010e94 <__ctype_get_mb_cur_max@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #440]!	; 0x1b8

00010ea0 <__fpending@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #432]!	; 0x1b0

00010eac <mbrtowc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb8 <error@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec4 <open64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #408]!	; 0x198

00010ed0 <getenv@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #400]!	; 0x190

00010edc <malloc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #392]!	; 0x188

00010ee8 <__libc_start_main@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #384]!	; 0x180

00010ef4 <__freading@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #376]!	; 0x178

00010f00 <__gmon_start__@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #368]!	; 0x170

00010f0c <getopt_long@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #360]!	; 0x168

00010f18 <__ctype_b_loc@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #352]!	; 0x160

00010f24 <exit@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #344]!	; 0x158

00010f30 <strlen@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #336]!	; 0x150

00010f3c <__errno_location@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #328]!	; 0x148

00010f48 <__cxa_atexit@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #320]!	; 0x140

00010f54 <memset@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #312]!	; 0x138

00010f60 <__printf_chk@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #304]!	; 0x130

00010f6c <fileno@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #296]!	; 0x128

00010f78 <__fprintf_chk@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #288]!	; 0x120

00010f84 <fclose@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #280]!	; 0x118

00010f90 <fseeko64@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #272]!	; 0x110

00010f9c <fcntl64@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #264]!	; 0x108

00010fa8 <setlocale@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #256]!	; 0x100

00010fb4 <strrchr@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #248]!	; 0xf8

00010fc0 <nl_langinfo@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #240]!	; 0xf0

00010fcc <bindtextdomain@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #232]!	; 0xe8

00010fd8 <umask@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #224]!	; 0xe0

00010fe4 <isatty@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #216]!	; 0xd8

00010ff0 <strncmp@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #208]!	; 0xd0

00010ffc <abort@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #200]!	; 0xc8

00011008 <close@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #192]!	; 0xc0

00011014 <__mempcpy_chk@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #184]!	; 0xb8

Disassembly of section .text:

00011020 <.text>:
   11020:	mov	fp, #0
   11024:	mov	lr, #0
   11028:	pop	{r1}		; (ldr r1, [sp], #4)
   1102c:	mov	r2, sp
   11030:	push	{r2}		; (str r2, [sp, #-4]!)
   11034:	push	{r0}		; (str r0, [sp, #-4]!)
   11038:	ldr	ip, [pc, #16]	; 11050 <__mempcpy_chk@plt+0x3c>
   1103c:	push	{ip}		; (str ip, [sp, #-4]!)
   11040:	ldr	r0, [pc, #12]	; 11054 <__mempcpy_chk@plt+0x40>
   11044:	ldr	r3, [pc, #12]	; 11058 <__mempcpy_chk@plt+0x44>
   11048:	bl	10ee8 <__libc_start_main@plt>
   1104c:	bl	10ffc <abort@plt>
   11050:	andeq	r5, r1, ip, lsr #1
   11054:	andeq	r1, r1, r0, lsr #7
   11058:	andeq	r5, r1, ip, asr #32
   1105c:	ldr	r3, [pc, #20]	; 11078 <__mempcpy_chk@plt+0x64>
   11060:	ldr	r2, [pc, #20]	; 1107c <__mempcpy_chk@plt+0x68>
   11064:	add	r3, pc, r3
   11068:	ldr	r2, [r3, r2]
   1106c:	cmp	r2, #0
   11070:	bxeq	lr
   11074:	b	10f00 <__gmon_start__@plt>
   11078:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1107c:	ldrdeq	r0, [r0], -r8
   11080:	ldr	r0, [pc, #24]	; 110a0 <__mempcpy_chk@plt+0x8c>
   11084:	ldr	r3, [pc, #24]	; 110a4 <__mempcpy_chk@plt+0x90>
   11088:	cmp	r3, r0
   1108c:	bxeq	lr
   11090:	ldr	r3, [pc, #16]	; 110a8 <__mempcpy_chk@plt+0x94>
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andeq	r6, r2, r0, lsr r1
   110a4:	andeq	r6, r2, r0, lsr r1
   110a8:	andeq	r0, r0, r0
   110ac:	ldr	r0, [pc, #36]	; 110d8 <__mempcpy_chk@plt+0xc4>
   110b0:	ldr	r1, [pc, #36]	; 110dc <__mempcpy_chk@plt+0xc8>
   110b4:	sub	r1, r1, r0
   110b8:	asr	r1, r1, #2
   110bc:	add	r1, r1, r1, lsr #31
   110c0:	asrs	r1, r1, #1
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0xcc>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	r6, r2, r0, lsr r1
   110dc:	andeq	r6, r2, r0, lsr r1
   110e0:	andeq	r0, r0, r0
   110e4:	push	{r4, lr}
   110e8:	ldr	r4, [pc, #24]	; 11108 <__mempcpy_chk@plt+0xf4>
   110ec:	ldrb	r3, [r4]
   110f0:	cmp	r3, #0
   110f4:	popne	{r4, pc}
   110f8:	bl	11080 <__mempcpy_chk@plt+0x6c>
   110fc:	mov	r3, #1
   11100:	strb	r3, [r4]
   11104:	pop	{r4, pc}
   11108:	andeq	r6, r2, ip, asr #2
   1110c:	b	110ac <__mempcpy_chk@plt+0x98>
   11110:	push	{fp, lr}
   11114:	mov	fp, sp
   11118:	sub	sp, sp, #56	; 0x38
   1111c:	mov	r4, r0
   11120:	cmp	r0, #0
   11124:	bne	1135c <__mempcpy_chk@plt+0x348>
   11128:	movw	r1, #20731	; 0x50fb
   1112c:	mov	r0, #0
   11130:	mov	r2, #5
   11134:	movt	r1, #1
   11138:	bl	10e40 <dcgettext@plt>
   1113c:	movw	r5, #24924	; 0x615c
   11140:	mov	r1, r0
   11144:	mov	r0, #1
   11148:	movt	r5, #2
   1114c:	ldr	r2, [r5]
   11150:	mov	r3, r2
   11154:	bl	10f60 <__printf_chk@plt>
   11158:	movw	r1, #20776	; 0x5128
   1115c:	mov	r0, #0
   11160:	mov	r2, #5
   11164:	movt	r1, #1
   11168:	bl	10e40 <dcgettext@plt>
   1116c:	movw	r7, #24900	; 0x6144
   11170:	movt	r7, #2
   11174:	ldr	r1, [r7]
   11178:	bl	10dc8 <fputs_unlocked@plt>
   1117c:	movw	r1, #20816	; 0x5150
   11180:	mov	r0, #0
   11184:	mov	r2, #5
   11188:	movt	r1, #1
   1118c:	bl	10e40 <dcgettext@plt>
   11190:	ldr	r1, [r7]
   11194:	bl	10dc8 <fputs_unlocked@plt>
   11198:	movw	r1, #20861	; 0x517d
   1119c:	mov	r0, #0
   111a0:	mov	r2, #5
   111a4:	movt	r1, #1
   111a8:	bl	10e40 <dcgettext@plt>
   111ac:	ldr	r1, [r7]
   111b0:	bl	10dc8 <fputs_unlocked@plt>
   111b4:	movw	r1, #20915	; 0x51b3
   111b8:	mov	r0, #0
   111bc:	mov	r2, #5
   111c0:	movt	r1, #1
   111c4:	bl	10e40 <dcgettext@plt>
   111c8:	ldr	r2, [r5]
   111cc:	mov	r1, r0
   111d0:	mov	r0, #1
   111d4:	bl	10f60 <__printf_chk@plt>
   111d8:	movw	r1, #21206	; 0x52d6
   111dc:	mov	r0, #0
   111e0:	mov	r2, #5
   111e4:	movt	r1, #1
   111e8:	bl	10e40 <dcgettext@plt>
   111ec:	movw	r5, #21397	; 0x5395
   111f0:	mov	r1, r0
   111f4:	mov	r0, #1
   111f8:	movt	r5, #1
   111fc:	mov	r2, r5
   11200:	bl	10f60 <__printf_chk@plt>
   11204:	movw	r0, #22048	; 0x5620
   11208:	mov	r2, #48	; 0x30
   1120c:	mov	r6, sp
   11210:	movt	r0, #1
   11214:	add	r1, r0, #32
   11218:	add	r3, r0, #16
   1121c:	vld1.64	{d18-d19}, [r0], r2
   11220:	vld1.64	{d16-d17}, [r1]
   11224:	vld1.64	{d20-d21}, [r3]
   11228:	add	r1, r6, #32
   1122c:	vldr	d22, [r0]
   11230:	add	r0, r6, #16
   11234:	vst1.64	{d16-d17}, [r1]
   11238:	movw	r1, #21734	; 0x54e6
   1123c:	vst1.64	{d20-d21}, [r0]
   11240:	mov	r0, r6
   11244:	vst1.64	{d18-d19}, [r0], r2
   11248:	movt	r1, #1
   1124c:	vstr	d22, [r0]
   11250:	mov	r0, r5
   11254:	bl	10dd4 <strcmp@plt>
   11258:	cmp	r0, #0
   1125c:	ldrne	r1, [r6, #8]!
   11260:	cmpne	r1, #0
   11264:	bne	11250 <__mempcpy_chk@plt+0x23c>
   11268:	ldr	r6, [r6, #4]
   1126c:	movw	r1, #21829	; 0x5545
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	movt	r1, #1
   1127c:	bl	10e40 <dcgettext@plt>
   11280:	movw	r2, #21443	; 0x53c3
   11284:	movw	r3, #21852	; 0x555c
   11288:	mov	r1, r0
   1128c:	mov	r0, #1
   11290:	movt	r2, #1
   11294:	movt	r3, #1
   11298:	bl	10f60 <__printf_chk@plt>
   1129c:	cmp	r6, #0
   112a0:	mov	r0, #5
   112a4:	mov	r1, #0
   112a8:	moveq	r6, r5
   112ac:	bl	10fa8 <setlocale@plt>
   112b0:	cmp	r0, #0
   112b4:	beq	112ec <__mempcpy_chk@plt+0x2d8>
   112b8:	movw	r1, #21892	; 0x5584
   112bc:	mov	r2, #3
   112c0:	movt	r1, #1
   112c4:	bl	10ff0 <strncmp@plt>
   112c8:	cmp	r0, #0
   112cc:	beq	112ec <__mempcpy_chk@plt+0x2d8>
   112d0:	movw	r1, #21896	; 0x5588
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	movt	r1, #1
   112e0:	bl	10e40 <dcgettext@plt>
   112e4:	ldr	r1, [r7]
   112e8:	bl	10dc8 <fputs_unlocked@plt>
   112ec:	movw	r1, #21967	; 0x55cf
   112f0:	mov	r0, #0
   112f4:	mov	r2, #5
   112f8:	movt	r1, #1
   112fc:	bl	10e40 <dcgettext@plt>
   11300:	movw	r2, #21852	; 0x555c
   11304:	mov	r1, r0
   11308:	mov	r0, #1
   1130c:	mov	r3, r5
   11310:	movt	r2, #1
   11314:	bl	10f60 <__printf_chk@plt>
   11318:	movw	r1, #21994	; 0x55ea
   1131c:	mov	r0, #0
   11320:	mov	r2, #5
   11324:	movt	r1, #1
   11328:	bl	10e40 <dcgettext@plt>
   1132c:	movw	r3, #20815	; 0x514f
   11330:	mov	r1, r0
   11334:	movw	r0, #21762	; 0x5502
   11338:	cmp	r6, r5
   1133c:	mov	r2, r6
   11340:	movt	r0, #1
   11344:	movt	r3, #1
   11348:	moveq	r3, r0
   1134c:	mov	r0, #1
   11350:	bl	10f60 <__printf_chk@plt>
   11354:	mov	r0, r4
   11358:	bl	10f24 <exit@plt>
   1135c:	movw	r0, #24896	; 0x6140
   11360:	movw	r1, #20692	; 0x50d4
   11364:	mov	r2, #5
   11368:	movt	r0, #2
   1136c:	movt	r1, #1
   11370:	ldr	r5, [r0]
   11374:	mov	r0, #0
   11378:	bl	10e40 <dcgettext@plt>
   1137c:	mov	r2, r0
   11380:	movw	r0, #24924	; 0x615c
   11384:	mov	r1, #1
   11388:	movt	r0, #2
   1138c:	ldr	r3, [r0]
   11390:	mov	r0, r5
   11394:	bl	10f78 <__fprintf_chk@plt>
   11398:	mov	r0, r4
   1139c:	bl	10f24 <exit@plt>
   113a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a4:	add	fp, sp, #28
   113a8:	sub	sp, sp, #36	; 0x24
   113ac:	mov	r4, r0
   113b0:	ldr	r0, [r1]
   113b4:	mov	r9, r1
   113b8:	bl	11edc <__mempcpy_chk@plt+0xec8>
   113bc:	movw	r1, #20815	; 0x514f
   113c0:	mov	r0, #6
   113c4:	movt	r1, #1
   113c8:	bl	10fa8 <setlocale@plt>
   113cc:	movw	r5, #21447	; 0x53c7
   113d0:	movw	r1, #21403	; 0x539b
   113d4:	movt	r5, #1
   113d8:	movt	r1, #1
   113dc:	mov	r0, r5
   113e0:	bl	10fcc <bindtextdomain@plt>
   113e4:	mov	r0, r5
   113e8:	bl	10e64 <textdomain@plt>
   113ec:	movw	r0, #21427	; 0x53b3
   113f0:	movt	r0, #1
   113f4:	bl	10ed0 <getenv@plt>
   113f8:	cmp	r0, #0
   113fc:	mov	sl, #127	; 0x7f
   11400:	movw	r0, #24812	; 0x60ec
   11404:	movweq	sl, #125	; 0x7d
   11408:	movt	r0, #2
   1140c:	str	sl, [r0]
   11410:	movw	r0, #6416	; 0x1910
   11414:	movt	r0, #1
   11418:	bl	150b0 <__mempcpy_chk@plt+0x409c>
   1141c:	movw	r0, #24808	; 0x60e8
   11420:	movw	r2, #4368	; 0x1110
   11424:	movw	r1, #21457	; 0x53d1
   11428:	mov	r5, #0
   1142c:	movw	r3, #21443	; 0x53c3
   11430:	movt	r0, #2
   11434:	movt	r2, #1
   11438:	movt	r1, #1
   1143c:	movt	r3, #1
   11440:	ldr	r0, [r0]
   11444:	stm	sp, {r0, r5}
   11448:	str	r2, [sp, #8]
   1144c:	movw	r2, #21397	; 0x5395
   11450:	str	r1, [sp, #12]
   11454:	mov	r0, r4
   11458:	mov	r1, r9
   1145c:	str	r5, [sp, #16]
   11460:	movt	r2, #1
   11464:	bl	11e14 <__mempcpy_chk@plt+0xe00>
   11468:	movw	r0, #24888	; 0x6138
   1146c:	movt	r0, #2
   11470:	ldr	r0, [r0]
   11474:	cmp	r0, r4
   11478:	bge	118c4 <__mempcpy_chk@plt+0x8b0>
   1147c:	mov	r0, #0
   11480:	bl	10fe4 <isatty@plt>
   11484:	mov	r6, r0
   11488:	mov	r0, #1
   1148c:	bl	10fe4 <isatty@plt>
   11490:	mov	r7, r0
   11494:	cmp	r0, #0
   11498:	bne	114b0 <__mempcpy_chk@plt+0x49c>
   1149c:	bl	10f3c <__errno_location@plt>
   114a0:	ldr	r0, [r0]
   114a4:	sub	r0, r0, #9
   114a8:	clz	r0, r0
   114ac:	lsr	r5, r0, #5
   114b0:	mov	r0, #2
   114b4:	bl	10fe4 <isatty@plt>
   114b8:	mov	r8, r0
   114bc:	cmp	r6, #0
   114c0:	beq	114ec <__mempcpy_chk@plt+0x4d8>
   114c4:	movw	r1, #21486	; 0x53ee
   114c8:	mov	r0, #0
   114cc:	mov	r2, #1
   114d0:	mov	r3, #0
   114d4:	movt	r1, #1
   114d8:	bl	11bdc <__mempcpy_chk@plt+0xbc8>
   114dc:	cmn	r0, #1
   114e0:	ble	115a4 <__mempcpy_chk@plt+0x590>
   114e4:	orrs	r0, r8, r7
   114e8:	beq	115d8 <__mempcpy_chk@plt+0x5c4>
   114ec:	cmp	r7, #0
   114f0:	str	r6, [sp, #32]
   114f4:	beq	11608 <__mempcpy_chk@plt+0x5f4>
   114f8:	mvn	r0, #384	; 0x180
   114fc:	str	r5, [sp, #28]
   11500:	bl	10fd8 <umask@plt>
   11504:	movw	r1, #21552	; 0x5430
   11508:	mov	r5, r0
   1150c:	mov	r0, #1
   11510:	movw	r2, #1089	; 0x441
   11514:	mov	r3, #384	; 0x180
   11518:	movt	r1, #1
   1151c:	bl	11bdc <__mempcpy_chk@plt+0xbc8>
   11520:	mov	r6, r0
   11524:	cmn	r0, #1
   11528:	ble	11650 <__mempcpy_chk@plt+0x63c>
   1152c:	str	r9, [sp, #24]
   11530:	movw	r9, #21552	; 0x5430
   11534:	mov	r4, #0
   11538:	movt	r9, #1
   1153c:	mov	r0, r5
   11540:	bl	10fd8 <umask@plt>
   11544:	ldr	r2, [sp, #32]
   11548:	movw	r0, #21585	; 0x5451
   1154c:	movw	r1, #21604	; 0x5464
   11550:	movt	r0, #1
   11554:	movt	r1, #1
   11558:	cmp	r2, #0
   1155c:	mov	r2, #5
   11560:	movne	r1, r0
   11564:	mov	r0, #0
   11568:	bl	10e40 <dcgettext@plt>
   1156c:	mov	r5, r0
   11570:	mov	r0, #4
   11574:	mov	r1, r9
   11578:	bl	13930 <__mempcpy_chk@plt+0x291c>
   1157c:	mov	r3, r0
   11580:	mov	r0, #0
   11584:	mov	r1, #0
   11588:	mov	r2, r5
   1158c:	bl	10eb8 <error@plt>
   11590:	mov	r0, r4
   11594:	bl	11d3c <__mempcpy_chk@plt+0xd28>
   11598:	ldr	r9, [sp, #24]
   1159c:	ldr	r5, [sp, #28]
   115a0:	b	116bc <__mempcpy_chk@plt+0x6a8>
   115a4:	bl	10f3c <__errno_location@plt>
   115a8:	ldr	r4, [r0]
   115ac:	movw	r1, #21496	; 0x53f8
   115b0:	mov	r0, #0
   115b4:	mov	r2, #5
   115b8:	movt	r1, #1
   115bc:	bl	10e40 <dcgettext@plt>
   115c0:	mov	r2, r0
   115c4:	mov	r0, sl
   115c8:	mov	r1, r4
   115cc:	bl	10eb8 <error@plt>
   115d0:	orrs	r0, r8, r7
   115d4:	bne	114ec <__mempcpy_chk@plt+0x4d8>
   115d8:	movw	r1, #21537	; 0x5421
   115dc:	mov	r0, #0
   115e0:	mov	r2, #5
   115e4:	movt	r1, #1
   115e8:	bl	10e40 <dcgettext@plt>
   115ec:	mov	r2, r0
   115f0:	mov	r0, #0
   115f4:	mov	r1, #0
   115f8:	bl	10eb8 <error@plt>
   115fc:	cmp	r7, #0
   11600:	str	r6, [sp, #32]
   11604:	bne	114f8 <__mempcpy_chk@plt+0x4e4>
   11608:	cmp	r8, #0
   1160c:	mov	r0, r8
   11610:	mov	r6, #1
   11614:	movwne	r0, #1
   11618:	tst	r5, r0
   1161c:	beq	116bc <__mempcpy_chk@plt+0x6a8>
   11620:	mvn	r0, #384	; 0x180
   11624:	str	r5, [sp, #28]
   11628:	bl	10fd8 <umask@plt>
   1162c:	mov	r5, r0
   11630:	movw	r0, #21552	; 0x5430
   11634:	movw	r1, #1089	; 0x441
   11638:	mov	r2, #384	; 0x180
   1163c:	movt	r0, #1
   11640:	bl	10ec4 <open64@plt>
   11644:	mov	r6, r0
   11648:	cmn	r0, #1
   1164c:	bgt	1152c <__mempcpy_chk@plt+0x518>
   11650:	bl	10f3c <__errno_location@plt>
   11654:	ldr	r6, [r0]
   11658:	mov	r4, r0
   1165c:	movw	r0, #21562	; 0x543a
   11660:	movt	r0, #1
   11664:	bl	10ed0 <getenv@plt>
   11668:	cmp	r0, #0
   1166c:	beq	1180c <__mempcpy_chk@plt+0x7f8>
   11670:	movw	r1, #21552	; 0x5430
   11674:	mov	r2, #0
   11678:	str	r6, [sp, #20]
   1167c:	str	r9, [sp, #24]
   11680:	movt	r1, #1
   11684:	bl	11c44 <__mempcpy_chk@plt+0xc30>
   11688:	mov	r9, r0
   1168c:	cmp	r7, #0
   11690:	beq	11818 <__mempcpy_chk@plt+0x804>
   11694:	mov	r0, #1
   11698:	mov	r1, r9
   1169c:	movw	r2, #1089	; 0x441
   116a0:	mov	r3, #384	; 0x180
   116a4:	bl	11bdc <__mempcpy_chk@plt+0xbc8>
   116a8:	mov	r6, r0
   116ac:	cmn	r0, #1
   116b0:	ble	11834 <__mempcpy_chk@plt+0x820>
   116b4:	mov	r4, r9
   116b8:	b	1153c <__mempcpy_chk@plt+0x528>
   116bc:	cmp	r8, #0
   116c0:	beq	11738 <__mempcpy_chk@plt+0x724>
   116c4:	mov	r0, #2
   116c8:	movw	r1, #1030	; 0x406
   116cc:	mov	r2, #3
   116d0:	bl	119fc <__mempcpy_chk@plt+0x9e8>
   116d4:	mov	r4, r0
   116d8:	cmp	r7, #0
   116dc:	bne	11718 <__mempcpy_chk@plt+0x704>
   116e0:	ldr	r2, [sp, #32]
   116e4:	movw	r0, #21627	; 0x547b
   116e8:	movw	r1, #21646	; 0x548e
   116ec:	movt	r0, #1
   116f0:	movt	r1, #1
   116f4:	cmp	r2, #0
   116f8:	mov	r2, #5
   116fc:	movne	r1, r0
   11700:	mov	r0, #0
   11704:	bl	10e40 <dcgettext@plt>
   11708:	mov	r2, r0
   1170c:	mov	r0, #0
   11710:	mov	r1, #0
   11714:	bl	10eb8 <error@plt>
   11718:	mov	r0, r6
   1171c:	mov	r1, #2
   11720:	bl	10e4c <dup2@plt>
   11724:	cmn	r0, #1
   11728:	ble	11740 <__mempcpy_chk@plt+0x72c>
   1172c:	cmp	r5, #0
   11730:	bne	1177c <__mempcpy_chk@plt+0x768>
   11734:	b	11784 <__mempcpy_chk@plt+0x770>
   11738:	mov	r4, #2
   1173c:	b	11784 <__mempcpy_chk@plt+0x770>
   11740:	bl	10f3c <__errno_location@plt>
   11744:	mov	r7, r5
   11748:	ldr	r5, [r0]
   1174c:	movw	r1, #21675	; 0x54ab
   11750:	mov	r0, #0
   11754:	mov	r2, #5
   11758:	movt	r1, #1
   1175c:	bl	10e40 <dcgettext@plt>
   11760:	mov	r2, r0
   11764:	mov	r1, r5
   11768:	mov	r0, sl
   1176c:	mov	r5, r7
   11770:	bl	10eb8 <error@plt>
   11774:	cmp	r5, #0
   11778:	beq	11784 <__mempcpy_chk@plt+0x770>
   1177c:	mov	r0, r6
   11780:	bl	11008 <close@plt>
   11784:	movw	r0, #24896	; 0x6140
   11788:	movt	r0, #2
   1178c:	ldr	r0, [r0]
   11790:	ldrb	r0, [r0]
   11794:	tst	r0, #32
   11798:	bne	118b8 <__mempcpy_chk@plt+0x8a4>
   1179c:	mov	r0, #1
   117a0:	mov	r1, #1
   117a4:	bl	10e28 <signal@plt>
   117a8:	movw	r0, #24888	; 0x6138
   117ac:	movt	r0, #2
   117b0:	ldr	r0, [r0]
   117b4:	ldr	r0, [r9, r0, lsl #2]!
   117b8:	mov	r1, r9
   117bc:	bl	10e10 <execvp@plt>
   117c0:	bl	10f3c <__errno_location@plt>
   117c4:	ldr	r5, [r0]
   117c8:	mov	sl, #126	; 0x7e
   117cc:	mov	r0, r4
   117d0:	mov	r1, #2
   117d4:	cmp	r5, #2
   117d8:	movweq	sl, #127	; 0x7f
   117dc:	bl	10e4c <dup2@plt>
   117e0:	cmp	r0, #2
   117e4:	bne	118b8 <__mempcpy_chk@plt+0x8a4>
   117e8:	movw	r1, #21709	; 0x54cd
   117ec:	mov	r0, #0
   117f0:	mov	r2, #5
   117f4:	movt	r1, #1
   117f8:	bl	10e40 <dcgettext@plt>
   117fc:	ldr	r1, [r9]
   11800:	mov	r4, r0
   11804:	mov	r0, #4
   11808:	b	118a0 <__mempcpy_chk@plt+0x88c>
   1180c:	mov	r9, #0
   11810:	mov	r5, r6
   11814:	b	1183c <__mempcpy_chk@plt+0x828>
   11818:	mov	r0, r9
   1181c:	movw	r1, #1089	; 0x441
   11820:	mov	r2, #384	; 0x180
   11824:	bl	10ec4 <open64@plt>
   11828:	mov	r6, r0
   1182c:	cmn	r0, #1
   11830:	bgt	116b4 <__mempcpy_chk@plt+0x6a0>
   11834:	ldr	r5, [r4]
   11838:	ldr	r6, [sp, #20]
   1183c:	movw	r1, #21567	; 0x543f
   11840:	mov	r0, #0
   11844:	mov	r2, #5
   11848:	movt	r1, #1
   1184c:	bl	10e40 <dcgettext@plt>
   11850:	movw	r1, #21552	; 0x5430
   11854:	mov	r4, r0
   11858:	mov	r0, #4
   1185c:	movt	r1, #1
   11860:	bl	13930 <__mempcpy_chk@plt+0x291c>
   11864:	mov	r3, r0
   11868:	mov	r0, #0
   1186c:	mov	r1, r6
   11870:	mov	r2, r4
   11874:	bl	10eb8 <error@plt>
   11878:	cmp	r9, #0
   1187c:	beq	118b8 <__mempcpy_chk@plt+0x8a4>
   11880:	movw	r1, #21567	; 0x543f
   11884:	mov	r0, #0
   11888:	mov	r2, #5
   1188c:	movt	r1, #1
   11890:	bl	10e40 <dcgettext@plt>
   11894:	mov	r4, r0
   11898:	mov	r0, #4
   1189c:	mov	r1, r9
   118a0:	bl	13930 <__mempcpy_chk@plt+0x291c>
   118a4:	mov	r3, r0
   118a8:	mov	r0, #0
   118ac:	mov	r1, r5
   118b0:	mov	r2, r4
   118b4:	bl	10eb8 <error@plt>
   118b8:	mov	r0, sl
   118bc:	sub	sp, fp, #28
   118c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118c4:	movw	r1, #21470	; 0x53de
   118c8:	mov	r0, #0
   118cc:	mov	r2, #5
   118d0:	movt	r1, #1
   118d4:	bl	10e40 <dcgettext@plt>
   118d8:	mov	r2, r0
   118dc:	mov	r0, #0
   118e0:	mov	r1, #0
   118e4:	bl	10eb8 <error@plt>
   118e8:	mov	r0, sl
   118ec:	bl	11110 <__mempcpy_chk@plt+0xfc>
   118f0:	movw	r1, #24912	; 0x6150
   118f4:	movt	r1, #2
   118f8:	str	r0, [r1, #4]
   118fc:	bx	lr
   11900:	movw	r1, #24912	; 0x6150
   11904:	movt	r1, #2
   11908:	strb	r0, [r1]
   1190c:	bx	lr
   11910:	push	{r4, r5, r6, sl, fp, lr}
   11914:	add	fp, sp, #16
   11918:	sub	sp, sp, #8
   1191c:	movw	r0, #24900	; 0x6144
   11920:	movt	r0, #2
   11924:	ldr	r0, [r0]
   11928:	bl	14c44 <__mempcpy_chk@plt+0x3c30>
   1192c:	cmp	r0, #0
   11930:	beq	11958 <__mempcpy_chk@plt+0x944>
   11934:	movw	r5, #24912	; 0x6150
   11938:	movt	r5, #2
   1193c:	ldrb	r0, [r5]
   11940:	cmp	r0, #0
   11944:	beq	11984 <__mempcpy_chk@plt+0x970>
   11948:	bl	10f3c <__errno_location@plt>
   1194c:	ldr	r0, [r0]
   11950:	cmp	r0, #32
   11954:	bne	11984 <__mempcpy_chk@plt+0x970>
   11958:	movw	r0, #24896	; 0x6140
   1195c:	movt	r0, #2
   11960:	ldr	r0, [r0]
   11964:	bl	14c44 <__mempcpy_chk@plt+0x3c30>
   11968:	cmp	r0, #0
   1196c:	subeq	sp, fp, #16
   11970:	popeq	{r4, r5, r6, sl, fp, pc}
   11974:	movw	r0, #24812	; 0x60ec
   11978:	movt	r0, #2
   1197c:	ldr	r0, [r0]
   11980:	bl	10df8 <_exit@plt>
   11984:	movw	r1, #22119	; 0x5667
   11988:	mov	r0, #0
   1198c:	mov	r2, #5
   11990:	movt	r1, #1
   11994:	bl	10e40 <dcgettext@plt>
   11998:	ldr	r6, [r5, #4]
   1199c:	mov	r4, r0
   119a0:	bl	10f3c <__errno_location@plt>
   119a4:	ldr	r5, [r0]
   119a8:	cmp	r6, #0
   119ac:	bne	119c8 <__mempcpy_chk@plt+0x9b4>
   119b0:	movw	r2, #22135	; 0x5677
   119b4:	mov	r0, #0
   119b8:	mov	r1, r5
   119bc:	mov	r3, r4
   119c0:	movt	r2, #1
   119c4:	b	119e8 <__mempcpy_chk@plt+0x9d4>
   119c8:	mov	r0, r6
   119cc:	bl	13ad0 <__mempcpy_chk@plt+0x2abc>
   119d0:	movw	r2, #22131	; 0x5673
   119d4:	mov	r3, r0
   119d8:	str	r4, [sp]
   119dc:	mov	r0, #0
   119e0:	mov	r1, r5
   119e4:	movt	r2, #1
   119e8:	bl	10eb8 <error@plt>
   119ec:	movw	r0, #24812	; 0x60ec
   119f0:	movt	r0, #2
   119f4:	ldr	r0, [r0]
   119f8:	bl	10df8 <_exit@plt>
   119fc:	sub	sp, sp, #8
   11a00:	push	{r4, r5, r6, r7, fp, lr}
   11a04:	add	fp, sp, #16
   11a08:	sub	sp, sp, #8
   11a0c:	mov	r5, r0
   11a10:	add	r0, fp, #8
   11a14:	cmp	r1, #11
   11a18:	str	r3, [fp, #12]
   11a1c:	str	r2, [fp, #8]
   11a20:	str	r0, [sp, #4]
   11a24:	bhi	11a60 <__mempcpy_chk@plt+0xa4c>
   11a28:	mov	r0, #1
   11a2c:	movw	r2, #1300	; 0x514
   11a30:	tst	r2, r0, lsl r1
   11a34:	bne	11b20 <__mempcpy_chk@plt+0xb0c>
   11a38:	movw	r2, #2570	; 0xa0a
   11a3c:	tst	r2, r0, lsl r1
   11a40:	bne	11a88 <__mempcpy_chk@plt+0xa74>
   11a44:	cmp	r1, #0
   11a48:	bne	11a60 <__mempcpy_chk@plt+0xa4c>
   11a4c:	ldr	r0, [sp, #4]
   11a50:	add	r1, r0, #4
   11a54:	str	r1, [sp, #4]
   11a58:	mov	r1, #0
   11a5c:	b	11b2c <__mempcpy_chk@plt+0xb18>
   11a60:	sub	r0, r1, #1024	; 0x400
   11a64:	cmp	r0, #10
   11a68:	bhi	11b20 <__mempcpy_chk@plt+0xb0c>
   11a6c:	mov	r2, #1
   11a70:	movw	r3, #645	; 0x285
   11a74:	tst	r3, r2, lsl r0
   11a78:	bne	11b20 <__mempcpy_chk@plt+0xb0c>
   11a7c:	movw	r3, #1282	; 0x502
   11a80:	tst	r3, r2, lsl r0
   11a84:	beq	11a94 <__mempcpy_chk@plt+0xa80>
   11a88:	mov	r0, r5
   11a8c:	bl	10f9c <fcntl64@plt>
   11a90:	b	11b38 <__mempcpy_chk@plt+0xb24>
   11a94:	cmp	r0, #6
   11a98:	bne	11b20 <__mempcpy_chk@plt+0xb0c>
   11a9c:	ldr	r0, [sp, #4]
   11aa0:	movw	r7, #24920	; 0x6158
   11aa4:	movt	r7, #2
   11aa8:	add	r1, r0, #4
   11aac:	str	r1, [sp, #4]
   11ab0:	ldr	r6, [r0]
   11ab4:	ldr	r0, [r7]
   11ab8:	cmp	r0, #0
   11abc:	blt	11b5c <__mempcpy_chk@plt+0xb48>
   11ac0:	mov	r0, r5
   11ac4:	movw	r1, #1030	; 0x406
   11ac8:	mov	r2, r6
   11acc:	bl	10f9c <fcntl64@plt>
   11ad0:	mov	r4, r0
   11ad4:	cmn	r0, #1
   11ad8:	bgt	11b50 <__mempcpy_chk@plt+0xb3c>
   11adc:	bl	10f3c <__errno_location@plt>
   11ae0:	ldr	r0, [r0]
   11ae4:	cmp	r0, #22
   11ae8:	bne	11b50 <__mempcpy_chk@plt+0xb3c>
   11aec:	mov	r0, r5
   11af0:	mov	r1, #0
   11af4:	mov	r2, r6
   11af8:	bl	10f9c <fcntl64@plt>
   11afc:	mov	r4, r0
   11b00:	cmp	r0, #0
   11b04:	blt	11b3c <__mempcpy_chk@plt+0xb28>
   11b08:	mvn	r0, #0
   11b0c:	str	r0, [r7]
   11b10:	mov	r0, #1
   11b14:	cmp	r0, #0
   11b18:	bne	11b88 <__mempcpy_chk@plt+0xb74>
   11b1c:	b	11b3c <__mempcpy_chk@plt+0xb28>
   11b20:	ldr	r0, [sp, #4]
   11b24:	add	r2, r0, #4
   11b28:	str	r2, [sp, #4]
   11b2c:	ldr	r2, [r0]
   11b30:	mov	r0, r5
   11b34:	bl	10f9c <fcntl64@plt>
   11b38:	mov	r4, r0
   11b3c:	mov	r0, r4
   11b40:	sub	sp, fp, #16
   11b44:	pop	{r4, r5, r6, r7, fp, lr}
   11b48:	add	sp, sp, #8
   11b4c:	bx	lr
   11b50:	mov	r0, #1
   11b54:	str	r0, [r7]
   11b58:	b	11b3c <__mempcpy_chk@plt+0xb28>
   11b5c:	mov	r0, r5
   11b60:	mov	r1, #0
   11b64:	mov	r2, r6
   11b68:	bl	10f9c <fcntl64@plt>
   11b6c:	mov	r4, r0
   11b70:	ldr	r0, [r7]
   11b74:	add	r0, r0, #1
   11b78:	clz	r0, r0
   11b7c:	lsr	r0, r0, #5
   11b80:	cmp	r0, #0
   11b84:	beq	11b3c <__mempcpy_chk@plt+0xb28>
   11b88:	cmp	r4, #0
   11b8c:	blt	11b3c <__mempcpy_chk@plt+0xb28>
   11b90:	mov	r0, r4
   11b94:	mov	r1, #1
   11b98:	bl	10f9c <fcntl64@plt>
   11b9c:	cmp	r0, #0
   11ba0:	blt	11bbc <__mempcpy_chk@plt+0xba8>
   11ba4:	orr	r2, r0, #1
   11ba8:	mov	r0, r4
   11bac:	mov	r1, #2
   11bb0:	bl	10f9c <fcntl64@plt>
   11bb4:	cmn	r0, #1
   11bb8:	bne	11b3c <__mempcpy_chk@plt+0xb28>
   11bbc:	bl	10f3c <__errno_location@plt>
   11bc0:	ldr	r6, [r0]
   11bc4:	mov	r5, r0
   11bc8:	mov	r0, r4
   11bcc:	bl	11008 <close@plt>
   11bd0:	str	r6, [r5]
   11bd4:	mvn	r4, #0
   11bd8:	b	11b3c <__mempcpy_chk@plt+0xb28>
   11bdc:	push	{r4, r5, r6, r7, fp, lr}
   11be0:	add	fp, sp, #16
   11be4:	mov	r5, r0
   11be8:	mov	r0, r1
   11bec:	mov	r1, r2
   11bf0:	mov	r2, r3
   11bf4:	bl	10ec4 <open64@plt>
   11bf8:	mov	r4, r0
   11bfc:	cmp	r0, r5
   11c00:	beq	11c3c <__mempcpy_chk@plt+0xc28>
   11c04:	cmp	r4, #0
   11c08:	blt	11c3c <__mempcpy_chk@plt+0xc28>
   11c0c:	mov	r0, r4
   11c10:	mov	r1, r5
   11c14:	bl	10e4c <dup2@plt>
   11c18:	mov	r5, r0
   11c1c:	bl	10f3c <__errno_location@plt>
   11c20:	ldr	r7, [r0]
   11c24:	mov	r6, r0
   11c28:	mov	r0, r4
   11c2c:	bl	11008 <close@plt>
   11c30:	mov	r0, r5
   11c34:	str	r7, [r6]
   11c38:	pop	{r4, r5, r6, r7, fp, pc}
   11c3c:	mov	r0, r4
   11c40:	pop	{r4, r5, r6, r7, fp, pc}
   11c44:	push	{fp, lr}
   11c48:	mov	fp, sp
   11c4c:	bl	11c5c <__mempcpy_chk@plt+0xc48>
   11c50:	cmp	r0, #0
   11c54:	popne	{fp, pc}
   11c58:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   11c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c60:	add	fp, sp, #28
   11c64:	push	{r2}		; (str r2, [sp, #-4]!)
   11c68:	mov	sl, r1
   11c6c:	mov	r7, r0
   11c70:	bl	14bac <__mempcpy_chk@plt+0x3b98>
   11c74:	sub	r4, r0, r7
   11c78:	bl	14c0c <__mempcpy_chk@plt+0x3bf8>
   11c7c:	mov	r6, r0
   11c80:	add	r5, r4, r0
   11c84:	mov	r0, sl
   11c88:	bl	10f30 <strlen@plt>
   11c8c:	mov	r9, r0
   11c90:	cmp	r6, #0
   11c94:	beq	11cbc <__mempcpy_chk@plt+0xca8>
   11c98:	add	r0, r7, r5
   11c9c:	mov	r4, #0
   11ca0:	ldrb	r0, [r0, #-1]
   11ca4:	cmp	r0, #47	; 0x2f
   11ca8:	beq	11ccc <__mempcpy_chk@plt+0xcb8>
   11cac:	ldrb	r0, [sl]
   11cb0:	subs	r4, r0, #47	; 0x2f
   11cb4:	movwne	r4, #47	; 0x2f
   11cb8:	b	11ccc <__mempcpy_chk@plt+0xcb8>
   11cbc:	ldrb	r0, [sl]
   11cc0:	mov	r4, #0
   11cc4:	cmp	r0, #47	; 0x2f
   11cc8:	movweq	r4, #46	; 0x2e
   11ccc:	uxtb	r8, r4
   11cd0:	add	r0, r9, r5
   11cd4:	cmp	r8, #0
   11cd8:	movwne	r8, #1
   11cdc:	add	r0, r0, r8
   11ce0:	add	r0, r0, #1
   11ce4:	bl	14b28 <__mempcpy_chk@plt+0x3b14>
   11ce8:	mov	r6, r0
   11cec:	cmp	r0, #0
   11cf0:	beq	11d30 <__mempcpy_chk@plt+0xd1c>
   11cf4:	mov	r0, r6
   11cf8:	mov	r1, r7
   11cfc:	mov	r2, r5
   11d00:	mvn	r3, #0
   11d04:	bl	11014 <__mempcpy_chk@plt>
   11d08:	ldr	r1, [sp]
   11d0c:	strb	r4, [r0], r8
   11d10:	mov	r2, r9
   11d14:	mvn	r3, #0
   11d18:	cmp	r1, #0
   11d1c:	strne	r0, [r1]
   11d20:	mov	r1, sl
   11d24:	bl	11014 <__mempcpy_chk@plt>
   11d28:	mov	r1, #0
   11d2c:	strb	r1, [r0]
   11d30:	mov	r0, r6
   11d34:	sub	sp, fp, #28
   11d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d3c:	push	{r4, r5, r6, sl, fp, lr}
   11d40:	add	fp, sp, #16
   11d44:	mov	r4, r0
   11d48:	bl	10f3c <__errno_location@plt>
   11d4c:	ldr	r6, [r0]
   11d50:	mov	r5, r0
   11d54:	mov	r0, r4
   11d58:	bl	10dec <free@plt>
   11d5c:	str	r6, [r5]
   11d60:	pop	{r4, r5, r6, sl, fp, pc}
   11d64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d68:	add	fp, sp, #24
   11d6c:	sub	sp, sp, #8
   11d70:	movw	r6, #24904	; 0x6148
   11d74:	mov	r4, #0
   11d78:	cmp	r0, #2
   11d7c:	movt	r6, #2
   11d80:	ldr	r7, [r6]
   11d84:	str	r4, [r6]
   11d88:	bne	11dfc <__mempcpy_chk@plt+0xde8>
   11d8c:	mov	r8, r3
   11d90:	movw	r3, #22156	; 0x568c
   11d94:	mov	r5, r2
   11d98:	movw	r2, #22138	; 0x567a
   11d9c:	mov	r0, #2
   11da0:	str	r4, [sp]
   11da4:	movt	r2, #1
   11da8:	movt	r3, #1
   11dac:	bl	10f0c <getopt_long@plt>
   11db0:	cmp	r0, #104	; 0x68
   11db4:	beq	11df0 <__mempcpy_chk@plt+0xddc>
   11db8:	cmp	r0, #118	; 0x76
   11dbc:	bne	11dfc <__mempcpy_chk@plt+0xde8>
   11dc0:	movw	r0, #24900	; 0x6144
   11dc4:	ldr	r3, [fp, #8]
   11dc8:	add	r1, fp, #16
   11dcc:	mov	r2, r8
   11dd0:	movt	r0, #2
   11dd4:	str	r1, [sp, #4]
   11dd8:	str	r1, [sp]
   11ddc:	mov	r1, r5
   11de0:	ldr	r0, [r0]
   11de4:	bl	141e8 <__mempcpy_chk@plt+0x31d4>
   11de8:	mov	r0, #0
   11dec:	bl	10f24 <exit@plt>
   11df0:	ldr	r1, [fp, #12]
   11df4:	mov	r0, #0
   11df8:	blx	r1
   11dfc:	movw	r0, #24888	; 0x6138
   11e00:	str	r7, [r6]
   11e04:	movt	r0, #2
   11e08:	str	r4, [r0]
   11e0c:	sub	sp, fp, #24
   11e10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11e18:	add	fp, sp, #24
   11e1c:	sub	sp, sp, #8
   11e20:	movw	r6, #24904	; 0x6148
   11e24:	mov	r8, r3
   11e28:	ldr	r3, [fp, #12]
   11e2c:	mov	r5, r2
   11e30:	mov	r2, #1
   11e34:	movw	r4, #20815	; 0x514f
   11e38:	movt	r6, #2
   11e3c:	movt	r4, #1
   11e40:	ldr	r7, [r6]
   11e44:	str	r2, [r6]
   11e48:	mov	r2, #0
   11e4c:	str	r2, [sp]
   11e50:	movw	r2, #22138	; 0x567a
   11e54:	cmp	r3, #0
   11e58:	movt	r2, #1
   11e5c:	movw	r3, #22156	; 0x568c
   11e60:	movne	r2, r4
   11e64:	movt	r3, #1
   11e68:	bl	10f0c <getopt_long@plt>
   11e6c:	cmn	r0, #1
   11e70:	beq	11ea0 <__mempcpy_chk@plt+0xe8c>
   11e74:	ldr	r1, [fp, #16]
   11e78:	cmp	r0, #104	; 0x68
   11e7c:	beq	11e98 <__mempcpy_chk@plt+0xe84>
   11e80:	cmp	r0, #118	; 0x76
   11e84:	beq	11eac <__mempcpy_chk@plt+0xe98>
   11e88:	movw	r0, #24812	; 0x60ec
   11e8c:	movt	r0, #2
   11e90:	ldr	r0, [r0]
   11e94:	b	11e9c <__mempcpy_chk@plt+0xe88>
   11e98:	mov	r0, #0
   11e9c:	blx	r1
   11ea0:	str	r7, [r6]
   11ea4:	sub	sp, fp, #24
   11ea8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11eac:	movw	r0, #24900	; 0x6144
   11eb0:	ldr	r3, [fp, #8]
   11eb4:	add	r1, fp, #20
   11eb8:	mov	r2, r8
   11ebc:	movt	r0, #2
   11ec0:	str	r1, [sp, #4]
   11ec4:	str	r1, [sp]
   11ec8:	mov	r1, r5
   11ecc:	ldr	r0, [r0]
   11ed0:	bl	141e8 <__mempcpy_chk@plt+0x31d4>
   11ed4:	mov	r0, #0
   11ed8:	bl	10f24 <exit@plt>
   11edc:	push	{r4, r5, fp, lr}
   11ee0:	add	fp, sp, #8
   11ee4:	cmp	r0, #0
   11ee8:	beq	11f7c <__mempcpy_chk@plt+0xf68>
   11eec:	mov	r1, #47	; 0x2f
   11ef0:	mov	r4, r0
   11ef4:	bl	10fb4 <strrchr@plt>
   11ef8:	cmp	r0, #0
   11efc:	mov	r5, r4
   11f00:	addne	r5, r0, #1
   11f04:	sub	r0, r5, r4
   11f08:	cmp	r0, #7
   11f0c:	blt	11f60 <__mempcpy_chk@plt+0xf4c>
   11f10:	movw	r1, #22260	; 0x56f4
   11f14:	sub	r0, r5, #7
   11f18:	mov	r2, #7
   11f1c:	movt	r1, #1
   11f20:	bl	10ff0 <strncmp@plt>
   11f24:	cmp	r0, #0
   11f28:	bne	11f60 <__mempcpy_chk@plt+0xf4c>
   11f2c:	movw	r1, #22268	; 0x56fc
   11f30:	mov	r0, r5
   11f34:	mov	r2, #3
   11f38:	movt	r1, #1
   11f3c:	bl	10ff0 <strncmp@plt>
   11f40:	cmp	r0, #0
   11f44:	beq	11f50 <__mempcpy_chk@plt+0xf3c>
   11f48:	mov	r4, r5
   11f4c:	b	11f60 <__mempcpy_chk@plt+0xf4c>
   11f50:	movw	r0, #24880	; 0x6130
   11f54:	add	r4, r5, #3
   11f58:	movt	r0, #2
   11f5c:	str	r4, [r0]
   11f60:	movw	r0, #24884	; 0x6134
   11f64:	movt	r0, #2
   11f68:	str	r4, [r0]
   11f6c:	movw	r0, #24924	; 0x615c
   11f70:	movt	r0, #2
   11f74:	str	r4, [r0]
   11f78:	pop	{r4, r5, fp, pc}
   11f7c:	movw	r0, #24896	; 0x6140
   11f80:	mov	r1, #55	; 0x37
   11f84:	mov	r2, #1
   11f88:	movt	r0, #2
   11f8c:	ldr	r3, [r0]
   11f90:	movw	r0, #22204	; 0x56bc
   11f94:	movt	r0, #1
   11f98:	bl	10e7c <fwrite@plt>
   11f9c:	bl	10ffc <abort@plt>
   11fa0:	push	{r4, r5, r6, sl, fp, lr}
   11fa4:	add	fp, sp, #16
   11fa8:	mov	r4, r0
   11fac:	movw	r0, #24928	; 0x6160
   11fb0:	movt	r0, #2
   11fb4:	cmp	r4, #0
   11fb8:	moveq	r4, r0
   11fbc:	bl	10f3c <__errno_location@plt>
   11fc0:	ldr	r6, [r0]
   11fc4:	mov	r5, r0
   11fc8:	mov	r0, r4
   11fcc:	mov	r1, #48	; 0x30
   11fd0:	bl	14990 <__mempcpy_chk@plt+0x397c>
   11fd4:	str	r6, [r5]
   11fd8:	pop	{r4, r5, r6, sl, fp, pc}
   11fdc:	movw	r1, #24928	; 0x6160
   11fe0:	cmp	r0, #0
   11fe4:	movt	r1, #2
   11fe8:	movne	r1, r0
   11fec:	ldr	r0, [r1]
   11ff0:	bx	lr
   11ff4:	movw	r2, #24928	; 0x6160
   11ff8:	cmp	r0, #0
   11ffc:	movt	r2, #2
   12000:	movne	r2, r0
   12004:	str	r1, [r2]
   12008:	bx	lr
   1200c:	movw	r3, #24928	; 0x6160
   12010:	cmp	r0, #0
   12014:	movt	r3, #2
   12018:	movne	r3, r0
   1201c:	ubfx	r0, r1, #5, #3
   12020:	and	r1, r1, #31
   12024:	add	r0, r3, r0, lsl #2
   12028:	ldr	r3, [r0, #8]
   1202c:	eor	r2, r2, r3, lsr r1
   12030:	and	r2, r2, #1
   12034:	eor	r2, r3, r2, lsl r1
   12038:	str	r2, [r0, #8]
   1203c:	mov	r0, #1
   12040:	and	r0, r0, r3, lsr r1
   12044:	bx	lr
   12048:	movw	r2, #24928	; 0x6160
   1204c:	cmp	r0, #0
   12050:	movt	r2, #2
   12054:	movne	r2, r0
   12058:	ldr	r0, [r2, #4]
   1205c:	str	r1, [r2, #4]
   12060:	bx	lr
   12064:	movw	r3, #24928	; 0x6160
   12068:	cmp	r0, #0
   1206c:	movt	r3, #2
   12070:	movne	r3, r0
   12074:	cmp	r1, #0
   12078:	mov	r0, #10
   1207c:	cmpne	r2, #0
   12080:	str	r0, [r3]
   12084:	bne	12094 <__mempcpy_chk@plt+0x1080>
   12088:	push	{fp, lr}
   1208c:	mov	fp, sp
   12090:	bl	10ffc <abort@plt>
   12094:	str	r1, [r3, #40]	; 0x28
   12098:	str	r2, [r3, #44]	; 0x2c
   1209c:	bx	lr
   120a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120a4:	add	fp, sp, #28
   120a8:	sub	sp, sp, #20
   120ac:	mov	r7, r0
   120b0:	ldr	r0, [fp, #8]
   120b4:	movw	r5, #24928	; 0x6160
   120b8:	mov	r8, r3
   120bc:	mov	r9, r2
   120c0:	mov	sl, r1
   120c4:	movt	r5, #2
   120c8:	cmp	r0, #0
   120cc:	movne	r5, r0
   120d0:	bl	10f3c <__errno_location@plt>
   120d4:	mov	r4, r0
   120d8:	ldm	r5, {r0, r1}
   120dc:	ldr	r2, [r5, #40]	; 0x28
   120e0:	ldr	r3, [r5, #44]	; 0x2c
   120e4:	add	r5, r5, #8
   120e8:	ldr	r6, [r4]
   120ec:	stm	sp, {r0, r1, r5}
   120f0:	str	r2, [sp, #12]
   120f4:	str	r3, [sp, #16]
   120f8:	mov	r0, r7
   120fc:	mov	r1, sl
   12100:	mov	r2, r9
   12104:	mov	r3, r8
   12108:	bl	12118 <__mempcpy_chk@plt+0x1104>
   1210c:	str	r6, [r4]
   12110:	sub	sp, fp, #28
   12114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1211c:	add	fp, sp, #28
   12120:	sub	sp, sp, #156	; 0x9c
   12124:	str	r0, [sp, #76]	; 0x4c
   12128:	ldr	r0, [fp, #12]
   1212c:	mov	r6, r1
   12130:	str	r3, [sp, #84]	; 0x54
   12134:	str	r2, [fp, #-84]	; 0xffffffac
   12138:	and	r1, r0, #4
   1213c:	str	r1, [sp, #24]
   12140:	and	r1, r0, #1
   12144:	str	r1, [sp, #28]
   12148:	ubfx	r8, r0, #1, #1
   1214c:	bl	10e94 <__ctype_get_mb_cur_max@plt>
   12150:	str	r0, [sp, #32]
   12154:	ldr	r0, [fp, #24]
   12158:	ldr	r7, [fp, #8]
   1215c:	mov	r1, #0
   12160:	mov	r2, #0
   12164:	mov	r4, #1
   12168:	str	r1, [sp, #52]	; 0x34
   1216c:	str	r0, [sp, #72]	; 0x48
   12170:	ldr	r0, [fp, #20]
   12174:	str	r0, [sp, #68]	; 0x44
   12178:	mov	r0, #0
   1217c:	str	r0, [sp, #48]	; 0x30
   12180:	mov	r0, #0
   12184:	str	r0, [sp, #92]	; 0x5c
   12188:	mov	r0, #0
   1218c:	str	r0, [fp, #-76]	; 0xffffffb4
   12190:	mov	r0, #0
   12194:	cmp	r7, #10
   12198:	bhi	13480 <__mempcpy_chk@plt+0x246c>
   1219c:	add	r1, pc, #28
   121a0:	mov	sl, r6
   121a4:	ldr	r6, [sp, #76]	; 0x4c
   121a8:	ldr	ip, [fp, #-84]	; 0xffffffac
   121ac:	ldr	lr, [sp, #84]	; 0x54
   121b0:	mov	r9, #0
   121b4:	mov	r3, #1
   121b8:	mov	r5, #0
   121bc:	ldr	pc, [r1, r7, lsl #2]
   121c0:	muleq	r1, r0, r2
   121c4:	andeq	r2, r1, ip, asr #5
   121c8:	andeq	r2, r1, r0, lsr #5
   121cc:	andeq	r2, r1, r8, lsl #5
   121d0:	andeq	r2, r1, r0, asr #5
   121d4:	strdeq	r2, [r1], -r4
   121d8:			; <UNDEFINED> instruction: 0x000122b0
   121dc:	andeq	r2, r1, r0, lsl #10
   121e0:	andeq	r2, r1, ip, ror #3
   121e4:	andeq	r2, r1, ip, ror #3
   121e8:	muleq	r1, r4, r4
   121ec:	mov	r9, r4
   121f0:	movw	r4, #22352	; 0x5750
   121f4:	mov	r5, r8
   121f8:	mov	r8, r2
   121fc:	mov	r0, #0
   12200:	mov	r2, #5
   12204:	movt	r4, #1
   12208:	mov	r1, r4
   1220c:	bl	10e40 <dcgettext@plt>
   12210:	cmp	r0, r4
   12214:	str	r0, [sp, #68]	; 0x44
   12218:	bne	123a8 <__mempcpy_chk@plt+0x1394>
   1221c:	bl	14e70 <__mempcpy_chk@plt+0x3e5c>
   12220:	ldrb	r1, [r0]
   12224:	and	r1, r1, #223	; 0xdf
   12228:	cmp	r1, #71	; 0x47
   1222c:	beq	12374 <__mempcpy_chk@plt+0x1360>
   12230:	cmp	r1, #85	; 0x55
   12234:	bne	1238c <__mempcpy_chk@plt+0x1378>
   12238:	ldrb	r1, [r0, #1]
   1223c:	and	r1, r1, #223	; 0xdf
   12240:	cmp	r1, #84	; 0x54
   12244:	bne	1238c <__mempcpy_chk@plt+0x1378>
   12248:	ldrb	r1, [r0, #2]
   1224c:	and	r1, r1, #223	; 0xdf
   12250:	cmp	r1, #70	; 0x46
   12254:	bne	1238c <__mempcpy_chk@plt+0x1378>
   12258:	ldrb	r1, [r0, #3]
   1225c:	cmp	r1, #45	; 0x2d
   12260:	ldrbeq	r1, [r0, #4]
   12264:	cmpeq	r1, #56	; 0x38
   12268:	bne	1238c <__mempcpy_chk@plt+0x1378>
   1226c:	ldrb	r0, [r0, #5]
   12270:	cmp	r0, #0
   12274:	movw	r0, #22356	; 0x5754
   12278:	movt	r0, #1
   1227c:	str	r0, [sp, #68]	; 0x44
   12280:	bne	1238c <__mempcpy_chk@plt+0x1378>
   12284:	b	123a8 <__mempcpy_chk@plt+0x1394>
   12288:	mov	r0, #1
   1228c:	b	122cc <__mempcpy_chk@plt+0x12b8>
   12290:	mov	r7, #0
   12294:	mov	r9, #0
   12298:	mov	r3, r0
   1229c:	b	1236c <__mempcpy_chk@plt+0x1358>
   122a0:	tst	r8, #1
   122a4:	bne	122cc <__mempcpy_chk@plt+0x12b8>
   122a8:	mov	r3, r0
   122ac:	b	12324 <__mempcpy_chk@plt+0x1310>
   122b0:	mov	r0, #1
   122b4:	mov	r9, #0
   122b8:	mov	r7, #5
   122bc:	b	12308 <__mempcpy_chk@plt+0x12f4>
   122c0:	mov	r3, #1
   122c4:	tst	r8, #1
   122c8:	beq	12324 <__mempcpy_chk@plt+0x1310>
   122cc:	mov	r1, #1
   122d0:	mov	r9, #0
   122d4:	mov	r7, #2
   122d8:	mov	r3, r0
   122dc:	mov	r5, #1
   122e0:	str	r1, [fp, #-76]	; 0xffffffb4
   122e4:	movw	r1, #22354	; 0x5752
   122e8:	movt	r1, #1
   122ec:	str	r1, [sp, #92]	; 0x5c
   122f0:	b	12500 <__mempcpy_chk@plt+0x14ec>
   122f4:	mov	r7, #5
   122f8:	tst	r8, #1
   122fc:	beq	12344 <__mempcpy_chk@plt+0x1330>
   12300:	mov	r0, #1
   12304:	mov	r9, #0
   12308:	str	r0, [fp, #-76]	; 0xffffffb4
   1230c:	movw	r0, #22350	; 0x574e
   12310:	mov	r3, #1
   12314:	mov	r5, #1
   12318:	movt	r0, #1
   1231c:	str	r0, [sp, #92]	; 0x5c
   12320:	b	12500 <__mempcpy_chk@plt+0x14ec>
   12324:	cmp	sl, #0
   12328:	mov	r9, #1
   1232c:	mov	r7, #2
   12330:	movne	r0, #39	; 0x27
   12334:	strbne	r0, [r6]
   12338:	movw	r0, #22354	; 0x5752
   1233c:	movt	r0, #1
   12340:	b	12360 <__mempcpy_chk@plt+0x134c>
   12344:	cmp	sl, #0
   12348:	mov	r9, #1
   1234c:	mov	r3, #1
   12350:	movne	r0, #34	; 0x22
   12354:	strbne	r0, [r6]
   12358:	movw	r0, #22350	; 0x574e
   1235c:	movt	r0, #1
   12360:	str	r0, [sp, #92]	; 0x5c
   12364:	mov	r0, #1
   12368:	str	r0, [fp, #-76]	; 0xffffffb4
   1236c:	mov	r5, #0
   12370:	b	12500 <__mempcpy_chk@plt+0x14ec>
   12374:	ldrb	r1, [r0, #1]
   12378:	and	r1, r1, #223	; 0xdf
   1237c:	cmp	r1, #66	; 0x42
   12380:	ldrbeq	r1, [r0, #2]
   12384:	cmpeq	r1, #49	; 0x31
   12388:	beq	132a8 <__mempcpy_chk@plt+0x2294>
   1238c:	movw	r0, #22354	; 0x5752
   12390:	movw	r1, #22350	; 0x574e
   12394:	cmp	r7, #9
   12398:	movt	r0, #1
   1239c:	movt	r1, #1
   123a0:	moveq	r0, r1
   123a4:	str	r0, [sp, #68]	; 0x44
   123a8:	movw	r4, #22354	; 0x5752
   123ac:	mov	r0, #0
   123b0:	mov	r2, #5
   123b4:	movt	r4, #1
   123b8:	mov	r1, r4
   123bc:	bl	10e40 <dcgettext@plt>
   123c0:	cmp	r0, r4
   123c4:	str	r0, [sp, #72]	; 0x48
   123c8:	beq	123d8 <__mempcpy_chk@plt+0x13c4>
   123cc:	mov	r4, r9
   123d0:	mov	r2, r8
   123d4:	b	12490 <__mempcpy_chk@plt+0x147c>
   123d8:	bl	14e70 <__mempcpy_chk@plt+0x3e5c>
   123dc:	ldrb	r1, [r0]
   123e0:	mov	r4, r9
   123e4:	and	r1, r1, #223	; 0xdf
   123e8:	cmp	r1, #71	; 0x47
   123ec:	beq	12448 <__mempcpy_chk@plt+0x1434>
   123f0:	cmp	r1, #85	; 0x55
   123f4:	mov	r2, r8
   123f8:	bne	12470 <__mempcpy_chk@plt+0x145c>
   123fc:	ldrb	r1, [r0, #1]
   12400:	and	r1, r1, #223	; 0xdf
   12404:	cmp	r1, #84	; 0x54
   12408:	bne	12470 <__mempcpy_chk@plt+0x145c>
   1240c:	ldrb	r1, [r0, #2]
   12410:	and	r1, r1, #223	; 0xdf
   12414:	cmp	r1, #70	; 0x46
   12418:	ldrbeq	r1, [r0, #3]
   1241c:	cmpeq	r1, #45	; 0x2d
   12420:	bne	12470 <__mempcpy_chk@plt+0x145c>
   12424:	ldrb	r1, [r0, #4]
   12428:	cmp	r1, #56	; 0x38
   1242c:	ldrbeq	r0, [r0, #5]
   12430:	cmpeq	r0, #0
   12434:	bne	12470 <__mempcpy_chk@plt+0x145c>
   12438:	movw	r0, #22360	; 0x5758
   1243c:	movt	r0, #1
   12440:	str	r0, [sp, #72]	; 0x48
   12444:	b	12490 <__mempcpy_chk@plt+0x147c>
   12448:	ldrb	r1, [r0, #1]
   1244c:	mov	r2, r8
   12450:	and	r1, r1, #223	; 0xdf
   12454:	cmp	r1, #66	; 0x42
   12458:	bne	12470 <__mempcpy_chk@plt+0x145c>
   1245c:	ldrb	r1, [r0, #2]
   12460:	cmp	r1, #49	; 0x31
   12464:	ldrbeq	r1, [r0, #3]
   12468:	cmpeq	r1, #56	; 0x38
   1246c:	beq	132ec <__mempcpy_chk@plt+0x22d8>
   12470:	movw	r0, #22354	; 0x5752
   12474:	cmp	r7, #9
   12478:	movt	r0, #1
   1247c:	mov	r1, r0
   12480:	movw	r0, #22350	; 0x574e
   12484:	movt	r0, #1
   12488:	moveq	r1, r0
   1248c:	str	r1, [sp, #72]	; 0x48
   12490:	mov	r8, r5
   12494:	mov	r9, #0
   12498:	tst	r8, #1
   1249c:	mov	r5, r8
   124a0:	str	r2, [fp, #-48]	; 0xffffffd0
   124a4:	bne	124dc <__mempcpy_chk@plt+0x14c8>
   124a8:	ldr	r0, [sp, #68]	; 0x44
   124ac:	ldrb	r0, [r0]
   124b0:	cmp	r0, #0
   124b4:	beq	124dc <__mempcpy_chk@plt+0x14c8>
   124b8:	ldr	r1, [sp, #68]	; 0x44
   124bc:	mov	r9, #0
   124c0:	add	r1, r1, #1
   124c4:	cmp	r9, sl
   124c8:	strbcc	r0, [r6, r9]
   124cc:	ldrb	r0, [r1, r9]
   124d0:	add	r9, r9, #1
   124d4:	cmp	r0, #0
   124d8:	bne	124c4 <__mempcpy_chk@plt+0x14b0>
   124dc:	ldr	r8, [sp, #72]	; 0x48
   124e0:	mov	r0, r8
   124e4:	bl	10f30 <strlen@plt>
   124e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   124ec:	ldr	lr, [sp, #84]	; 0x54
   124f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   124f4:	str	r0, [fp, #-76]	; 0xffffffb4
   124f8:	str	r8, [sp, #92]	; 0x5c
   124fc:	mov	r3, #1
   12500:	ldr	r0, [fp, #16]
   12504:	str	r7, [fp, #-64]	; 0xffffffc0
   12508:	str	r5, [fp, #-72]	; 0xffffffb8
   1250c:	str	r3, [sp, #80]	; 0x50
   12510:	cmp	r0, #0
   12514:	movwne	r0, #1
   12518:	and	r0, r0, r5
   1251c:	str	r0, [fp, #-88]	; 0xffffffa8
   12520:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12524:	cmp	r0, #0
   12528:	movwne	r0, #1
   1252c:	subs	r7, r7, #2
   12530:	and	r1, r0, r5
   12534:	str	r7, [fp, #-80]	; 0xffffffb0
   12538:	and	r1, r3, r1
   1253c:	str	r1, [sp, #40]	; 0x28
   12540:	clz	r1, r7
   12544:	lsr	r1, r1, #5
   12548:	and	r1, r1, r5
   1254c:	eor	r5, r5, #1
   12550:	str	r1, [sp, #36]	; 0x24
   12554:	mov	r1, r7
   12558:	str	r5, [sp, #88]	; 0x58
   1255c:	mov	r7, #0
   12560:	movwne	r1, #1
   12564:	orr	r5, r1, r5
   12568:	and	r1, r1, r3
   1256c:	and	r0, r0, r1
   12570:	str	r5, [sp, #60]	; 0x3c
   12574:	str	r1, [fp, #-68]	; 0xffffffbc
   12578:	str	r0, [fp, #-60]	; 0xffffffc4
   1257c:	eor	r0, r3, #1
   12580:	str	r0, [sp, #44]	; 0x2c
   12584:	cmn	lr, #1
   12588:	beq	12598 <__mempcpy_chk@plt+0x1584>
   1258c:	cmp	r7, lr
   12590:	bne	125a4 <__mempcpy_chk@plt+0x1590>
   12594:	b	1321c <__mempcpy_chk@plt+0x2208>
   12598:	ldrb	r0, [ip, r7]
   1259c:	cmp	r0, #0
   125a0:	beq	13224 <__mempcpy_chk@plt+0x2210>
   125a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   125a8:	mov	r8, #0
   125ac:	str	r4, [fp, #-52]	; 0xffffffcc
   125b0:	str	r2, [fp, #-48]	; 0xffffffd0
   125b4:	cmp	r0, #0
   125b8:	beq	125ec <__mempcpy_chk@plt+0x15d8>
   125bc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   125c0:	add	r4, r7, r0
   125c4:	cmp	r0, #2
   125c8:	bcc	125e4 <__mempcpy_chk@plt+0x15d0>
   125cc:	cmn	lr, #1
   125d0:	bne	125e4 <__mempcpy_chk@plt+0x15d0>
   125d4:	mov	r0, ip
   125d8:	bl	10f30 <strlen@plt>
   125dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   125e0:	mov	lr, r0
   125e4:	cmp	r4, lr
   125e8:	bls	12604 <__mempcpy_chk@plt+0x15f0>
   125ec:	mov	r0, #0
   125f0:	str	r0, [fp, #-56]	; 0xffffffc8
   125f4:	ldrb	r5, [ip, r7]
   125f8:	cmp	r5, #126	; 0x7e
   125fc:	bls	12654 <__mempcpy_chk@plt+0x1640>
   12600:	b	12a5c <__mempcpy_chk@plt+0x1a48>
   12604:	ldr	r1, [sp, #92]	; 0x5c
   12608:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1260c:	add	r0, ip, r7
   12610:	mov	r4, lr
   12614:	bl	10e34 <memcmp@plt>
   12618:	ldr	r2, [sp, #88]	; 0x58
   1261c:	cmp	r0, #0
   12620:	mov	r1, r0
   12624:	movwne	r1, #1
   12628:	orr	r1, r1, r2
   1262c:	tst	r1, #1
   12630:	beq	13330 <__mempcpy_chk@plt+0x231c>
   12634:	ldr	ip, [fp, #-84]	; 0xffffffac
   12638:	clz	r0, r0
   1263c:	mov	lr, r4
   12640:	lsr	r0, r0, #5
   12644:	str	r0, [fp, #-56]	; 0xffffffc8
   12648:	ldrb	r5, [ip, r7]
   1264c:	cmp	r5, #126	; 0x7e
   12650:	bhi	12a5c <__mempcpy_chk@plt+0x1a48>
   12654:	add	r3, pc, #16
   12658:	mov	r4, #1
   1265c:	mov	r2, #110	; 0x6e
   12660:	mov	r0, #97	; 0x61
   12664:	mov	r1, #0
   12668:	ldr	pc, [r3, r5, lsl #2]
   1266c:	andeq	r2, r1, ip, lsr r9
   12670:	andeq	r2, r1, ip, asr sl
   12674:	andeq	r2, r1, ip, asr sl
   12678:	andeq	r2, r1, ip, asr sl
   1267c:	andeq	r2, r1, ip, asr sl
   12680:	andeq	r2, r1, ip, asr sl
   12684:	andeq	r2, r1, ip, asr sl
   12688:	andeq	r2, r1, r8, lsr fp
   1268c:	andeq	r2, r1, ip, lsl r9
   12690:	andeq	r2, r1, r4, lsl #18
   12694:	andeq	r2, r1, r8, lsr #18
   12698:			; <UNDEFINED> instruction: 0x000129b8
   1269c:	strdeq	r2, [r1], -ip
   126a0:	andeq	r2, r1, r4, lsr #18
   126a4:	andeq	r2, r1, ip, asr sl
   126a8:	andeq	r2, r1, ip, asr sl
   126ac:	andeq	r2, r1, ip, asr sl
   126b0:	andeq	r2, r1, ip, asr sl
   126b4:	andeq	r2, r1, ip, asr sl
   126b8:	andeq	r2, r1, ip, asr sl
   126bc:	andeq	r2, r1, ip, asr sl
   126c0:	andeq	r2, r1, ip, asr sl
   126c4:	andeq	r2, r1, ip, asr sl
   126c8:	andeq	r2, r1, ip, asr sl
   126cc:	andeq	r2, r1, ip, asr sl
   126d0:	andeq	r2, r1, ip, asr sl
   126d4:	andeq	r2, r1, ip, asr sl
   126d8:	andeq	r2, r1, ip, asr sl
   126dc:	andeq	r2, r1, ip, asr sl
   126e0:	andeq	r2, r1, ip, asr sl
   126e4:	andeq	r2, r1, ip, asr sl
   126e8:	andeq	r2, r1, ip, asr sl
   126ec:			; <UNDEFINED> instruction: 0x00012ab4
   126f0:			; <UNDEFINED> instruction: 0x00012ab8
   126f4:			; <UNDEFINED> instruction: 0x00012ab8
   126f8:	andeq	r2, r1, r8, lsl #17
   126fc:			; <UNDEFINED> instruction: 0x00012ab8
   12700:	andeq	r2, r1, r8, ror #16
   12704:			; <UNDEFINED> instruction: 0x00012ab8
   12708:	andeq	r2, r1, r0, asr #19
   1270c:			; <UNDEFINED> instruction: 0x00012ab8
   12710:			; <UNDEFINED> instruction: 0x00012ab8
   12714:			; <UNDEFINED> instruction: 0x00012ab8
   12718:	andeq	r2, r1, r8, ror #16
   1271c:	andeq	r2, r1, r8, ror #16
   12720:	andeq	r2, r1, r8, ror #16
   12724:	andeq	r2, r1, r8, ror #16
   12728:	andeq	r2, r1, r8, ror #16
   1272c:	andeq	r2, r1, r8, ror #16
   12730:	andeq	r2, r1, r8, ror #16
   12734:	andeq	r2, r1, r8, ror #16
   12738:	andeq	r2, r1, r8, ror #16
   1273c:	andeq	r2, r1, r8, ror #16
   12740:	andeq	r2, r1, r8, ror #16
   12744:	andeq	r2, r1, r8, ror #16
   12748:	andeq	r2, r1, r8, ror #16
   1274c:	andeq	r2, r1, r8, ror #16
   12750:	andeq	r2, r1, r8, ror #16
   12754:	andeq	r2, r1, r8, ror #16
   12758:			; <UNDEFINED> instruction: 0x00012ab8
   1275c:			; <UNDEFINED> instruction: 0x00012ab8
   12760:			; <UNDEFINED> instruction: 0x00012ab8
   12764:			; <UNDEFINED> instruction: 0x00012ab8
   12768:	andeq	r2, r1, ip, ror r9
   1276c:	andeq	r2, r1, ip, asr sl
   12770:	andeq	r2, r1, r8, ror #16
   12774:	andeq	r2, r1, r8, ror #16
   12778:	andeq	r2, r1, r8, ror #16
   1277c:	andeq	r2, r1, r8, ror #16
   12780:	andeq	r2, r1, r8, ror #16
   12784:	andeq	r2, r1, r8, ror #16
   12788:	andeq	r2, r1, r8, ror #16
   1278c:	andeq	r2, r1, r8, ror #16
   12790:	andeq	r2, r1, r8, ror #16
   12794:	andeq	r2, r1, r8, ror #16
   12798:	andeq	r2, r1, r8, ror #16
   1279c:	andeq	r2, r1, r8, ror #16
   127a0:	andeq	r2, r1, r8, ror #16
   127a4:	andeq	r2, r1, r8, ror #16
   127a8:	andeq	r2, r1, r8, ror #16
   127ac:	andeq	r2, r1, r8, ror #16
   127b0:	andeq	r2, r1, r8, ror #16
   127b4:	andeq	r2, r1, r8, ror #16
   127b8:	andeq	r2, r1, r8, ror #16
   127bc:	andeq	r2, r1, r8, ror #16
   127c0:	andeq	r2, r1, r8, ror #16
   127c4:	andeq	r2, r1, r8, ror #16
   127c8:	andeq	r2, r1, r8, ror #16
   127cc:	andeq	r2, r1, r8, ror #16
   127d0:	andeq	r2, r1, r8, ror #16
   127d4:	andeq	r2, r1, r8, ror #16
   127d8:			; <UNDEFINED> instruction: 0x00012ab8
   127dc:	andeq	r2, r1, r8, asr #17
   127e0:	andeq	r2, r1, r8, ror #16
   127e4:			; <UNDEFINED> instruction: 0x00012ab8
   127e8:	andeq	r2, r1, r8, ror #16
   127ec:			; <UNDEFINED> instruction: 0x00012ab8
   127f0:	andeq	r2, r1, r8, ror #16
   127f4:	andeq	r2, r1, r8, ror #16
   127f8:	andeq	r2, r1, r8, ror #16
   127fc:	andeq	r2, r1, r8, ror #16
   12800:	andeq	r2, r1, r8, ror #16
   12804:	andeq	r2, r1, r8, ror #16
   12808:	andeq	r2, r1, r8, ror #16
   1280c:	andeq	r2, r1, r8, ror #16
   12810:	andeq	r2, r1, r8, ror #16
   12814:	andeq	r2, r1, r8, ror #16
   12818:	andeq	r2, r1, r8, ror #16
   1281c:	andeq	r2, r1, r8, ror #16
   12820:	andeq	r2, r1, r8, ror #16
   12824:	andeq	r2, r1, r8, ror #16
   12828:	andeq	r2, r1, r8, ror #16
   1282c:	andeq	r2, r1, r8, ror #16
   12830:	andeq	r2, r1, r8, ror #16
   12834:	andeq	r2, r1, r8, ror #16
   12838:	andeq	r2, r1, r8, ror #16
   1283c:	andeq	r2, r1, r8, ror #16
   12840:	andeq	r2, r1, r8, ror #16
   12844:	andeq	r2, r1, r8, ror #16
   12848:	andeq	r2, r1, r8, ror #16
   1284c:	andeq	r2, r1, r8, ror #16
   12850:	andeq	r2, r1, r8, ror #16
   12854:	andeq	r2, r1, r8, ror #16
   12858:	andeq	r2, r1, r8, lsr #17
   1285c:			; <UNDEFINED> instruction: 0x00012ab8
   12860:	andeq	r2, r1, r8, lsr #17
   12864:	andeq	r2, r1, r8, lsl #17
   12868:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1286c:	cmp	r0, #0
   12870:	beq	12b4c <__mempcpy_chk@plt+0x1b38>
   12874:	ldr	r0, [fp, #16]
   12878:	cmp	r0, #0
   1287c:	mov	r0, r5
   12880:	bne	12b5c <__mempcpy_chk@plt+0x1b48>
   12884:	b	12b7c <__mempcpy_chk@plt+0x1b68>
   12888:	mov	r4, #0
   1288c:	cmp	r7, #0
   12890:	beq	12ab4 <__mempcpy_chk@plt+0x1aa0>
   12894:	mov	r8, #0
   12898:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1289c:	cmp	r0, #0
   128a0:	bne	12874 <__mempcpy_chk@plt+0x1860>
   128a4:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   128a8:	mov	r4, #0
   128ac:	cmn	lr, #1
   128b0:	beq	12a8c <__mempcpy_chk@plt+0x1a78>
   128b4:	cmp	r7, #0
   128b8:	bne	12894 <__mempcpy_chk@plt+0x1880>
   128bc:	cmp	lr, #1
   128c0:	beq	12ab4 <__mempcpy_chk@plt+0x1aa0>
   128c4:	b	12894 <__mempcpy_chk@plt+0x1880>
   128c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   128cc:	cmp	r0, #2
   128d0:	bne	12ae4 <__mempcpy_chk@plt+0x1ad0>
   128d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   128d8:	tst	r0, #1
   128dc:	bne	13344 <__mempcpy_chk@plt+0x2330>
   128e0:	mov	r8, #0
   128e4:	mov	r0, #92	; 0x5c
   128e8:	mov	r4, #0
   128ec:	cmp	r8, #0
   128f0:	beq	12b04 <__mempcpy_chk@plt+0x1af0>
   128f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   128f8:	b	12bf8 <__mempcpy_chk@plt+0x1be4>
   128fc:	mov	r0, #102	; 0x66
   12900:	b	12b38 <__mempcpy_chk@plt+0x1b24>
   12904:	mov	r2, #116	; 0x74
   12908:	ldr	r0, [sp, #60]	; 0x3c
   1290c:	tst	r0, #1
   12910:	mov	r0, r2
   12914:	bne	12b38 <__mempcpy_chk@plt+0x1b24>
   12918:	b	13344 <__mempcpy_chk@plt+0x2330>
   1291c:	mov	r0, #98	; 0x62
   12920:	b	12b38 <__mempcpy_chk@plt+0x1b24>
   12924:	mov	r2, #114	; 0x72
   12928:	ldr	r0, [sp, #60]	; 0x3c
   1292c:	tst	r0, #1
   12930:	mov	r0, r2
   12934:	bne	12b38 <__mempcpy_chk@plt+0x1b24>
   12938:	b	13344 <__mempcpy_chk@plt+0x2330>
   1293c:	ldr	r0, [sp, #80]	; 0x50
   12940:	tst	r0, #1
   12944:	beq	12c20 <__mempcpy_chk@plt+0x1c0c>
   12948:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1294c:	tst	r0, #1
   12950:	bne	1346c <__mempcpy_chk@plt+0x2458>
   12954:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12958:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1295c:	cmp	r0, #2
   12960:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12964:	movwne	r0, #1
   12968:	orr	r0, r0, r2
   1296c:	tst	r0, #1
   12970:	beq	12f18 <__mempcpy_chk@plt+0x1f04>
   12974:	mov	r0, r9
   12978:	b	12f4c <__mempcpy_chk@plt+0x1f38>
   1297c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12980:	mov	r8, #0
   12984:	mov	r5, #63	; 0x3f
   12988:	cmp	r0, #5
   1298c:	beq	12dd4 <__mempcpy_chk@plt+0x1dc0>
   12990:	cmp	r0, #2
   12994:	bne	12e84 <__mempcpy_chk@plt+0x1e70>
   12998:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1299c:	tst	r0, #1
   129a0:	bne	13344 <__mempcpy_chk@plt+0x2330>
   129a4:	mov	r4, #0
   129a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   129ac:	cmp	r0, #0
   129b0:	bne	12874 <__mempcpy_chk@plt+0x1860>
   129b4:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   129b8:	mov	r0, #118	; 0x76
   129bc:	b	12b38 <__mempcpy_chk@plt+0x1b24>
   129c0:	mov	r0, #1
   129c4:	mov	r5, #39	; 0x27
   129c8:	str	r0, [sp, #52]	; 0x34
   129cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   129d0:	cmp	r0, #2
   129d4:	bne	12a48 <__mempcpy_chk@plt+0x1a34>
   129d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   129dc:	tst	r0, #1
   129e0:	bne	13344 <__mempcpy_chk@plt+0x2330>
   129e4:	ldr	r2, [sp, #48]	; 0x30
   129e8:	clz	r1, sl
   129ec:	mov	r8, #0
   129f0:	lsr	r1, r1, #5
   129f4:	cmp	r2, #0
   129f8:	mov	r0, r2
   129fc:	movwne	r0, #1
   12a00:	orrs	r0, r0, r1
   12a04:	moveq	r2, sl
   12a08:	moveq	sl, r0
   12a0c:	cmp	r9, sl
   12a10:	str	r2, [sp, #48]	; 0x30
   12a14:	movcc	r0, #39	; 0x27
   12a18:	strbcc	r0, [r6, r9]
   12a1c:	add	r0, r9, #1
   12a20:	cmp	r0, sl
   12a24:	movcc	r1, #92	; 0x5c
   12a28:	strbcc	r1, [r6, r0]
   12a2c:	add	r0, r9, #2
   12a30:	add	r9, r9, #3
   12a34:	cmp	r0, sl
   12a38:	movcc	r1, #39	; 0x27
   12a3c:	strbcc	r1, [r6, r0]
   12a40:	mov	r0, #0
   12a44:	str	r0, [fp, #-48]	; 0xffffffd0
   12a48:	mov	r4, #1
   12a4c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12a50:	cmp	r0, #0
   12a54:	bne	12874 <__mempcpy_chk@plt+0x1860>
   12a58:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   12a5c:	ldr	r0, [sp, #32]
   12a60:	cmp	r0, #1
   12a64:	bne	12c50 <__mempcpy_chk@plt+0x1c3c>
   12a68:	str	lr, [sp, #84]	; 0x54
   12a6c:	bl	10f18 <__ctype_b_loc@plt>
   12a70:	ldr	r0, [r0]
   12a74:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a78:	mov	r1, #1
   12a7c:	add	r0, r0, r5, lsl #1
   12a80:	ldrb	r0, [r0, #1]
   12a84:	ubfx	r4, r0, #6, #1
   12a88:	b	13048 <__mempcpy_chk@plt+0x2034>
   12a8c:	cmp	r7, #0
   12a90:	ldrbeq	r0, [ip, #1]
   12a94:	cmpeq	r0, #0
   12a98:	beq	12ab4 <__mempcpy_chk@plt+0x1aa0>
   12a9c:	mvn	lr, #0
   12aa0:	mov	r8, #0
   12aa4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12aa8:	cmp	r0, #0
   12aac:	bne	12874 <__mempcpy_chk@plt+0x1860>
   12ab0:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   12ab4:	mov	r1, #1
   12ab8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12abc:	cmp	r0, #2
   12ac0:	bne	12ad0 <__mempcpy_chk@plt+0x1abc>
   12ac4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12ac8:	tst	r0, #1
   12acc:	bne	13344 <__mempcpy_chk@plt+0x2330>
   12ad0:	mov	r4, r1
   12ad4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12ad8:	cmp	r0, #0
   12adc:	bne	12874 <__mempcpy_chk@plt+0x1860>
   12ae0:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   12ae4:	ldr	r1, [sp, #40]	; 0x28
   12ae8:	mov	r8, #0
   12aec:	mov	r0, #92	; 0x5c
   12af0:	cmp	r1, #0
   12af4:	beq	12b38 <__mempcpy_chk@plt+0x1b24>
   12af8:	mov	r4, #0
   12afc:	cmp	r8, #0
   12b00:	bne	128f4 <__mempcpy_chk@plt+0x18e0>
   12b04:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12b08:	tst	r2, #1
   12b0c:	beq	12bf8 <__mempcpy_chk@plt+0x1be4>
   12b10:	cmp	r9, sl
   12b14:	movcc	r1, #39	; 0x27
   12b18:	strbcc	r1, [r6, r9]
   12b1c:	add	r1, r9, #1
   12b20:	add	r9, r9, #2
   12b24:	cmp	r1, sl
   12b28:	movcc	r2, #39	; 0x27
   12b2c:	strbcc	r2, [r6, r1]
   12b30:	mov	r2, #0
   12b34:	b	12bf8 <__mempcpy_chk@plt+0x1be4>
   12b38:	ldr	r1, [sp, #80]	; 0x50
   12b3c:	mov	r4, #0
   12b40:	mov	r8, #0
   12b44:	tst	r1, #1
   12b48:	bne	12b88 <__mempcpy_chk@plt+0x1b74>
   12b4c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12b50:	cmp	r0, #0
   12b54:	mov	r0, r5
   12b58:	beq	12b7c <__mempcpy_chk@plt+0x1b68>
   12b5c:	ldr	r1, [fp, #16]
   12b60:	ubfx	r0, r5, #5, #3
   12b64:	mov	r2, #1
   12b68:	ldr	r0, [r1, r0, lsl #2]
   12b6c:	and	r1, r5, #31
   12b70:	tst	r0, r2, lsl r1
   12b74:	mov	r0, r5
   12b78:	bne	12b88 <__mempcpy_chk@plt+0x1b74>
   12b7c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12b80:	cmp	r1, #0
   12b84:	beq	12fe0 <__mempcpy_chk@plt+0x1fcc>
   12b88:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12b8c:	tst	r1, #1
   12b90:	bne	13324 <__mempcpy_chk@plt+0x2310>
   12b94:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12b98:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12b9c:	cmp	r1, #2
   12ba0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12ba4:	movwne	r1, #1
   12ba8:	orr	r1, r1, r2
   12bac:	tst	r1, #1
   12bb0:	bne	12be8 <__mempcpy_chk@plt+0x1bd4>
   12bb4:	cmp	r9, sl
   12bb8:	movcc	r1, #39	; 0x27
   12bbc:	strbcc	r1, [r6, r9]
   12bc0:	add	r1, r9, #1
   12bc4:	cmp	r1, sl
   12bc8:	movcc	r2, #36	; 0x24
   12bcc:	strbcc	r2, [r6, r1]
   12bd0:	add	r1, r9, #2
   12bd4:	add	r9, r9, #3
   12bd8:	cmp	r1, sl
   12bdc:	movcc	r2, #39	; 0x27
   12be0:	strbcc	r2, [r6, r1]
   12be4:	mov	r2, #1
   12be8:	cmp	r9, sl
   12bec:	movcc	r1, #92	; 0x5c
   12bf0:	strbcc	r1, [r6, r9]
   12bf4:	add	r9, r9, #1
   12bf8:	cmp	r9, sl
   12bfc:	add	r7, r7, #1
   12c00:	strbcc	r0, [r6, r9]
   12c04:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12c08:	add	r9, r9, #1
   12c0c:	and	r0, r0, r4
   12c10:	mov	r4, r0
   12c14:	cmn	lr, #1
   12c18:	bne	1258c <__mempcpy_chk@plt+0x1578>
   12c1c:	b	12598 <__mempcpy_chk@plt+0x1584>
   12c20:	ldr	r0, [sp, #28]
   12c24:	mov	r4, #0
   12c28:	mov	r8, #0
   12c2c:	mov	r5, #0
   12c30:	cmp	r0, #0
   12c34:	beq	12b4c <__mempcpy_chk@plt+0x1b38>
   12c38:	ldr	r4, [fp, #-52]	; 0xffffffcc
   12c3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c40:	add	r7, r7, #1
   12c44:	cmn	lr, #1
   12c48:	bne	1258c <__mempcpy_chk@plt+0x1578>
   12c4c:	b	12598 <__mempcpy_chk@plt+0x1584>
   12c50:	mov	r0, #0
   12c54:	cmn	lr, #1
   12c58:	str	r0, [fp, #-36]	; 0xffffffdc
   12c5c:	str	r0, [fp, #-40]	; 0xffffffd8
   12c60:	bne	12c74 <__mempcpy_chk@plt+0x1c60>
   12c64:	mov	r0, ip
   12c68:	bl	10f30 <strlen@plt>
   12c6c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12c70:	mov	lr, r0
   12c74:	ldr	r0, [sp, #36]	; 0x24
   12c78:	str	sl, [sp, #56]	; 0x38
   12c7c:	str	lr, [sp, #84]	; 0x54
   12c80:	cmp	r0, #0
   12c84:	beq	12e9c <__mempcpy_chk@plt+0x1e88>
   12c88:	add	r0, ip, r7
   12c8c:	mov	r4, #1
   12c90:	mov	r6, #0
   12c94:	sub	sl, fp, #40	; 0x28
   12c98:	str	r0, [sp, #20]
   12c9c:	str	r6, [sp, #64]	; 0x40
   12ca0:	add	r6, r6, r7
   12ca4:	sub	r0, fp, #44	; 0x2c
   12ca8:	mov	r3, sl
   12cac:	add	r1, ip, r6
   12cb0:	sub	r2, lr, r6
   12cb4:	bl	14ea8 <__mempcpy_chk@plt+0x3e94>
   12cb8:	cmn	r0, #2
   12cbc:	beq	12ff8 <__mempcpy_chk@plt+0x1fe4>
   12cc0:	ldr	sl, [sp, #56]	; 0x38
   12cc4:	cmn	r0, #1
   12cc8:	beq	12fec <__mempcpy_chk@plt+0x1fd8>
   12ccc:	cmp	r0, #0
   12cd0:	beq	12ff0 <__mempcpy_chk@plt+0x1fdc>
   12cd4:	cmp	r0, #2
   12cd8:	bcc	12d98 <__mempcpy_chk@plt+0x1d84>
   12cdc:	ldr	r1, [sp, #64]	; 0x40
   12ce0:	ldr	r2, [sp, #20]
   12ce4:	add	r1, r2, r1
   12ce8:	mov	r2, #1
   12cec:	ldrb	r3, [r1, r2]
   12cf0:	sub	r3, r3, #91	; 0x5b
   12cf4:	cmp	r3, #33	; 0x21
   12cf8:	bhi	12d8c <__mempcpy_chk@plt+0x1d78>
   12cfc:	add	r6, pc, #0
   12d00:	ldr	pc, [r6, r3, lsl #2]
   12d04:	andeq	r3, r1, r0, asr r3
   12d08:	andeq	r3, r1, r0, asr r3
   12d0c:	andeq	r2, r1, ip, lsl #27
   12d10:	andeq	r3, r1, r0, asr r3
   12d14:	andeq	r2, r1, ip, lsl #27
   12d18:	andeq	r3, r1, r0, asr r3
   12d1c:	andeq	r2, r1, ip, lsl #27
   12d20:	andeq	r2, r1, ip, lsl #27
   12d24:	andeq	r2, r1, ip, lsl #27
   12d28:	andeq	r2, r1, ip, lsl #27
   12d2c:	andeq	r2, r1, ip, lsl #27
   12d30:	andeq	r2, r1, ip, lsl #27
   12d34:	andeq	r2, r1, ip, lsl #27
   12d38:	andeq	r2, r1, ip, lsl #27
   12d3c:	andeq	r2, r1, ip, lsl #27
   12d40:	andeq	r2, r1, ip, lsl #27
   12d44:	andeq	r2, r1, ip, lsl #27
   12d48:	andeq	r2, r1, ip, lsl #27
   12d4c:	andeq	r2, r1, ip, lsl #27
   12d50:	andeq	r2, r1, ip, lsl #27
   12d54:	andeq	r2, r1, ip, lsl #27
   12d58:	andeq	r2, r1, ip, lsl #27
   12d5c:	andeq	r2, r1, ip, lsl #27
   12d60:	andeq	r2, r1, ip, lsl #27
   12d64:	andeq	r2, r1, ip, lsl #27
   12d68:	andeq	r2, r1, ip, lsl #27
   12d6c:	andeq	r2, r1, ip, lsl #27
   12d70:	andeq	r2, r1, ip, lsl #27
   12d74:	andeq	r2, r1, ip, lsl #27
   12d78:	andeq	r2, r1, ip, lsl #27
   12d7c:	andeq	r2, r1, ip, lsl #27
   12d80:	andeq	r2, r1, ip, lsl #27
   12d84:	andeq	r2, r1, ip, lsl #27
   12d88:	andeq	r3, r1, r0, asr r3
   12d8c:	add	r2, r2, #1
   12d90:	cmp	r2, r0
   12d94:	bcc	12cec <__mempcpy_chk@plt+0x1cd8>
   12d98:	ldr	r6, [sp, #64]	; 0x40
   12d9c:	add	r6, r0, r6
   12da0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12da4:	bl	10e70 <iswprint@plt>
   12da8:	cmp	r0, #0
   12dac:	sub	sl, fp, #40	; 0x28
   12db0:	movwne	r0, #1
   12db4:	and	r4, r4, r0
   12db8:	mov	r0, sl
   12dbc:	bl	10e1c <mbsinit@plt>
   12dc0:	ldr	ip, [fp, #-84]	; 0xffffffac
   12dc4:	ldr	lr, [sp, #84]	; 0x54
   12dc8:	cmp	r0, #0
   12dcc:	beq	12c9c <__mempcpy_chk@plt+0x1c88>
   12dd0:	b	1303c <__mempcpy_chk@plt+0x2028>
   12dd4:	ldr	r0, [sp, #24]
   12dd8:	cmp	r0, #0
   12ddc:	beq	12e84 <__mempcpy_chk@plt+0x1e70>
   12de0:	add	r0, r7, #2
   12de4:	cmp	r0, lr
   12de8:	bcs	12e84 <__mempcpy_chk@plt+0x1e70>
   12dec:	add	r1, ip, r7
   12df0:	ldrb	r1, [r1, #1]
   12df4:	cmp	r1, #63	; 0x3f
   12df8:	bne	12e84 <__mempcpy_chk@plt+0x1e70>
   12dfc:	ldrb	r5, [ip, r0]
   12e00:	sub	r1, r5, #33	; 0x21
   12e04:	cmp	r1, #29
   12e08:	bhi	12e84 <__mempcpy_chk@plt+0x1e70>
   12e0c:	movw	r3, #20929	; 0x51c1
   12e10:	mov	r2, #1
   12e14:	movt	r3, #14336	; 0x3800
   12e18:	tst	r3, r2, lsl r1
   12e1c:	beq	12e84 <__mempcpy_chk@plt+0x1e70>
   12e20:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12e24:	tst	r1, #1
   12e28:	bne	13474 <__mempcpy_chk@plt+0x2460>
   12e2c:	cmp	r9, sl
   12e30:	mov	r7, r0
   12e34:	mov	r4, #0
   12e38:	movcc	r1, #63	; 0x3f
   12e3c:	strbcc	r1, [r6, r9]
   12e40:	add	r1, r9, #1
   12e44:	cmp	r1, sl
   12e48:	movcc	r2, #34	; 0x22
   12e4c:	strbcc	r2, [r6, r1]
   12e50:	add	r1, r9, #2
   12e54:	cmp	r1, sl
   12e58:	movcc	r2, #34	; 0x22
   12e5c:	strbcc	r2, [r6, r1]
   12e60:	add	r1, r9, #3
   12e64:	add	r9, r9, #4
   12e68:	cmp	r1, sl
   12e6c:	movcc	r2, #63	; 0x3f
   12e70:	strbcc	r2, [r6, r1]
   12e74:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12e78:	cmp	r0, #0
   12e7c:	bne	12874 <__mempcpy_chk@plt+0x1860>
   12e80:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   12e84:	mov	r5, #63	; 0x3f
   12e88:	mov	r4, #0
   12e8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12e90:	cmp	r0, #0
   12e94:	bne	12874 <__mempcpy_chk@plt+0x1860>
   12e98:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   12e9c:	mov	r4, #1
   12ea0:	mov	r6, #0
   12ea4:	sub	sl, fp, #40	; 0x28
   12ea8:	str	r6, [sp, #64]	; 0x40
   12eac:	add	r6, r6, r7
   12eb0:	sub	r0, fp, #44	; 0x2c
   12eb4:	mov	r3, sl
   12eb8:	add	r1, ip, r6
   12ebc:	sub	r2, lr, r6
   12ec0:	bl	14ea8 <__mempcpy_chk@plt+0x3e94>
   12ec4:	cmn	r0, #2
   12ec8:	beq	12ff8 <__mempcpy_chk@plt+0x1fe4>
   12ecc:	cmn	r0, #1
   12ed0:	beq	12fec <__mempcpy_chk@plt+0x1fd8>
   12ed4:	ldr	r6, [sp, #64]	; 0x40
   12ed8:	cmp	r0, #0
   12edc:	beq	13038 <__mempcpy_chk@plt+0x2024>
   12ee0:	add	r6, r0, r6
   12ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ee8:	bl	10e70 <iswprint@plt>
   12eec:	cmp	r0, #0
   12ef0:	sub	sl, fp, #40	; 0x28
   12ef4:	movwne	r0, #1
   12ef8:	and	r4, r4, r0
   12efc:	mov	r0, sl
   12f00:	bl	10e1c <mbsinit@plt>
   12f04:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f08:	ldr	lr, [sp, #84]	; 0x54
   12f0c:	cmp	r0, #0
   12f10:	beq	12ea8 <__mempcpy_chk@plt+0x1e94>
   12f14:	b	1303c <__mempcpy_chk@plt+0x2028>
   12f18:	cmp	r9, sl
   12f1c:	mov	r2, #1
   12f20:	movcc	r0, #39	; 0x27
   12f24:	strbcc	r0, [r6, r9]
   12f28:	add	r0, r9, #1
   12f2c:	cmp	r0, sl
   12f30:	movcc	r1, #36	; 0x24
   12f34:	strbcc	r1, [r6, r0]
   12f38:	add	r0, r9, #2
   12f3c:	cmp	r0, sl
   12f40:	movcc	r1, #39	; 0x27
   12f44:	strbcc	r1, [r6, r0]
   12f48:	add	r0, r9, #3
   12f4c:	cmp	r0, sl
   12f50:	add	r9, r0, #1
   12f54:	str	r2, [fp, #-48]	; 0xffffffd0
   12f58:	movcc	r1, #92	; 0x5c
   12f5c:	strbcc	r1, [r6, r0]
   12f60:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12f64:	cmp	r1, #2
   12f68:	beq	12fc8 <__mempcpy_chk@plt+0x1fb4>
   12f6c:	add	r1, r7, #1
   12f70:	mov	r4, #0
   12f74:	mov	r8, #1
   12f78:	mov	r5, #48	; 0x30
   12f7c:	cmp	r1, lr
   12f80:	bcs	12868 <__mempcpy_chk@plt+0x1854>
   12f84:	ldrb	r1, [ip, r1]
   12f88:	sub	r1, r1, #48	; 0x30
   12f8c:	uxtb	r1, r1
   12f90:	cmp	r1, #9
   12f94:	bhi	12868 <__mempcpy_chk@plt+0x1854>
   12f98:	cmp	r9, sl
   12f9c:	movcc	r1, #48	; 0x30
   12fa0:	strbcc	r1, [r6, r9]
   12fa4:	add	r1, r0, #2
   12fa8:	add	r9, r0, #3
   12fac:	cmp	r1, sl
   12fb0:	movcc	r2, #48	; 0x30
   12fb4:	strbcc	r2, [r6, r1]
   12fb8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12fbc:	cmp	r0, #0
   12fc0:	bne	12874 <__mempcpy_chk@plt+0x1860>
   12fc4:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   12fc8:	mov	r0, #48	; 0x30
   12fcc:	mov	r8, #1
   12fd0:	mov	r4, #0
   12fd4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12fd8:	cmp	r1, #0
   12fdc:	bne	12b88 <__mempcpy_chk@plt+0x1b74>
   12fe0:	cmp	r8, #0
   12fe4:	beq	12b04 <__mempcpy_chk@plt+0x1af0>
   12fe8:	b	128f4 <__mempcpy_chk@plt+0x18e0>
   12fec:	mov	r4, #0
   12ff0:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ff4:	b	13030 <__mempcpy_chk@plt+0x201c>
   12ff8:	ldr	r1, [sp, #84]	; 0x54
   12ffc:	ldr	ip, [fp, #-84]	; 0xffffffac
   13000:	mov	r4, #0
   13004:	cmp	r6, r1
   13008:	bcs	13030 <__mempcpy_chk@plt+0x201c>
   1300c:	ldrb	r0, [ip, r6]
   13010:	cmp	r0, #0
   13014:	beq	13030 <__mempcpy_chk@plt+0x201c>
   13018:	ldr	r0, [sp, #64]	; 0x40
   1301c:	add	r0, r0, #1
   13020:	add	r6, r0, r7
   13024:	str	r0, [sp, #64]	; 0x40
   13028:	cmp	r6, r1
   1302c:	bcc	1300c <__mempcpy_chk@plt+0x1ff8>
   13030:	ldr	r6, [sp, #64]	; 0x40
   13034:	b	1303c <__mempcpy_chk@plt+0x2028>
   13038:	ldr	ip, [fp, #-84]	; 0xffffffac
   1303c:	mov	r1, r6
   13040:	ldr	r6, [sp, #76]	; 0x4c
   13044:	ldr	sl, [sp, #56]	; 0x38
   13048:	ldr	r0, [sp, #44]	; 0x2c
   1304c:	cmp	r1, #1
   13050:	orr	r2, r4, r0
   13054:	mov	r0, r1
   13058:	bhi	13078 <__mempcpy_chk@plt+0x2064>
   1305c:	tst	r2, #1
   13060:	beq	13078 <__mempcpy_chk@plt+0x2064>
   13064:	ldr	lr, [sp, #84]	; 0x54
   13068:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1306c:	cmp	r0, #0
   13070:	bne	12874 <__mempcpy_chk@plt+0x1860>
   13074:	b	12b4c <__mempcpy_chk@plt+0x1b38>
   13078:	str	r2, [sp, #64]	; 0x40
   1307c:	add	r0, r0, r7
   13080:	add	r1, r7, #1
   13084:	ldr	lr, [sp, #84]	; 0x54
   13088:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1308c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13090:	mov	r3, #0
   13094:	str	r0, [sp, #56]	; 0x38
   13098:	ldr	r0, [sp, #64]	; 0x40
   1309c:	tst	r0, #1
   130a0:	bne	13188 <__mempcpy_chk@plt+0x2174>
   130a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   130a8:	tst	r0, #1
   130ac:	bne	13328 <__mempcpy_chk@plt+0x2314>
   130b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   130b4:	cmp	r7, #2
   130b8:	movwne	r3, #1
   130bc:	orr	r3, r3, r2
   130c0:	tst	r3, #1
   130c4:	bne	130fc <__mempcpy_chk@plt+0x20e8>
   130c8:	cmp	r9, sl
   130cc:	add	r3, r9, #1
   130d0:	movcc	r2, #39	; 0x27
   130d4:	strbcc	r2, [r6, r9]
   130d8:	cmp	r3, sl
   130dc:	movcc	r2, #36	; 0x24
   130e0:	strbcc	r2, [r6, r3]
   130e4:	add	r3, r9, #2
   130e8:	add	r9, r9, #3
   130ec:	cmp	r3, sl
   130f0:	movcc	r2, #39	; 0x27
   130f4:	strbcc	r2, [r6, r3]
   130f8:	mov	r2, #1
   130fc:	cmp	r9, sl
   13100:	mov	r0, r2
   13104:	movcc	r3, #92	; 0x5c
   13108:	strbcc	r3, [r6, r9]
   1310c:	add	r3, r9, #1
   13110:	cmp	r3, sl
   13114:	andcc	r7, r5, #192	; 0xc0
   13118:	movcc	r2, #48	; 0x30
   1311c:	orrcc	r7, r2, r7, lsr #6
   13120:	strbcc	r7, [r6, r3]
   13124:	add	r3, r9, #2
   13128:	add	r9, r9, #3
   1312c:	cmp	r3, sl
   13130:	lsrcc	r7, r5, #3
   13134:	movcc	r2, #6
   13138:	bficc	r7, r2, #3, #29
   1313c:	mov	r2, #6
   13140:	strbcc	r7, [r6, r3]
   13144:	bfi	r5, r2, #3, #29
   13148:	mov	r3, #1
   1314c:	mov	r2, r0
   13150:	ldr	r0, [sp, #56]	; 0x38
   13154:	and	r8, r3, #1
   13158:	cmp	r0, r1
   1315c:	bhi	131bc <__mempcpy_chk@plt+0x21a8>
   13160:	b	131fc <__mempcpy_chk@plt+0x21e8>
   13164:	cmp	r9, sl
   13168:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1316c:	strbcc	r5, [r6, r9]
   13170:	add	r9, r9, #1
   13174:	ldrb	r5, [ip, r1]
   13178:	add	r1, r1, #1
   1317c:	ldr	r0, [sp, #64]	; 0x40
   13180:	tst	r0, #1
   13184:	beq	130a4 <__mempcpy_chk@plt+0x2090>
   13188:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1318c:	tst	r7, #1
   13190:	beq	131a4 <__mempcpy_chk@plt+0x2190>
   13194:	cmp	r9, sl
   13198:	movcc	r7, #92	; 0x5c
   1319c:	strbcc	r7, [r6, r9]
   131a0:	add	r9, r9, #1
   131a4:	mov	r7, #0
   131a8:	str	r7, [fp, #-56]	; 0xffffffc8
   131ac:	ldr	r0, [sp, #56]	; 0x38
   131b0:	and	r8, r3, #1
   131b4:	cmp	r0, r1
   131b8:	bls	131fc <__mempcpy_chk@plt+0x21e8>
   131bc:	cmp	r8, #0
   131c0:	mvn	r7, r2
   131c4:	movwne	r8, #1
   131c8:	orr	r7, r7, r8
   131cc:	tst	r7, #1
   131d0:	bne	13164 <__mempcpy_chk@plt+0x2150>
   131d4:	cmp	r9, sl
   131d8:	movcc	r7, #39	; 0x27
   131dc:	strbcc	r7, [r6, r9]
   131e0:	add	r7, r9, #1
   131e4:	add	r9, r9, #2
   131e8:	cmp	r7, sl
   131ec:	movcc	r2, #39	; 0x27
   131f0:	strbcc	r2, [r6, r7]
   131f4:	mov	r2, #0
   131f8:	b	13164 <__mempcpy_chk@plt+0x2150>
   131fc:	cmp	r8, #0
   13200:	sub	r7, r1, #1
   13204:	mov	r0, r5
   13208:	str	r2, [fp, #-48]	; 0xffffffd0
   1320c:	movwne	r8, #1
   13210:	cmp	r8, #0
   13214:	beq	12b04 <__mempcpy_chk@plt+0x1af0>
   13218:	b	128f4 <__mempcpy_chk@plt+0x18e0>
   1321c:	mov	lr, r7
   13220:	b	13228 <__mempcpy_chk@plt+0x2214>
   13224:	mvn	lr, #0
   13228:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1322c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13230:	eor	r0, r7, #2
   13234:	orr	r0, r0, r9
   13238:	clz	r0, r0
   1323c:	lsr	r0, r0, #5
   13240:	tst	r1, r0
   13244:	bne	13344 <__mempcpy_chk@plt+0x2330>
   13248:	mov	r0, r1
   1324c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13250:	cmp	r7, #2
   13254:	movwne	r1, #1
   13258:	orr	r0, r0, r1
   1325c:	tst	r0, #1
   13260:	ldreq	r0, [sp, #52]	; 0x34
   13264:	streq	lr, [sp, #84]	; 0x54
   13268:	eoreq	r0, r0, #1
   1326c:	tsteq	r0, #1
   13270:	bne	13408 <__mempcpy_chk@plt+0x23f4>
   13274:	tst	r4, #1
   13278:	bne	133c4 <__mempcpy_chk@plt+0x23b0>
   1327c:	ldr	r6, [sp, #48]	; 0x30
   13280:	mov	r8, #0
   13284:	cmp	r6, #0
   13288:	beq	13400 <__mempcpy_chk@plt+0x23ec>
   1328c:	ldr	r0, [sp, #80]	; 0x50
   13290:	mov	r1, #0
   13294:	cmp	sl, #0
   13298:	mov	r4, #0
   1329c:	str	r1, [fp, #-72]	; 0xffffffb8
   132a0:	beq	12194 <__mempcpy_chk@plt+0x1180>
   132a4:	b	13408 <__mempcpy_chk@plt+0x23f4>
   132a8:	ldrb	r1, [r0, #3]
   132ac:	cmp	r1, #56	; 0x38
   132b0:	ldrbeq	r1, [r0, #4]
   132b4:	cmpeq	r1, #48	; 0x30
   132b8:	bne	1238c <__mempcpy_chk@plt+0x1378>
   132bc:	ldrb	r1, [r0, #5]
   132c0:	cmp	r1, #51	; 0x33
   132c4:	ldrbeq	r1, [r0, #6]
   132c8:	cmpeq	r1, #48	; 0x30
   132cc:	bne	1238c <__mempcpy_chk@plt+0x1378>
   132d0:	ldrb	r0, [r0, #7]
   132d4:	cmp	r0, #0
   132d8:	movw	r0, #22364	; 0x575c
   132dc:	movt	r0, #1
   132e0:	str	r0, [sp, #68]	; 0x44
   132e4:	bne	1238c <__mempcpy_chk@plt+0x1378>
   132e8:	b	123a8 <__mempcpy_chk@plt+0x1394>
   132ec:	ldrb	r1, [r0, #4]
   132f0:	cmp	r1, #48	; 0x30
   132f4:	ldrbeq	r1, [r0, #5]
   132f8:	cmpeq	r1, #51	; 0x33
   132fc:	bne	12470 <__mempcpy_chk@plt+0x145c>
   13300:	ldrb	r1, [r0, #6]
   13304:	cmp	r1, #48	; 0x30
   13308:	ldrbeq	r0, [r0, #7]
   1330c:	cmpeq	r0, #0
   13310:	bne	12470 <__mempcpy_chk@plt+0x145c>
   13314:	movw	r0, #22368	; 0x5760
   13318:	movt	r0, #1
   1331c:	str	r0, [sp, #72]	; 0x48
   13320:	b	12490 <__mempcpy_chk@plt+0x147c>
   13324:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13328:	ldr	r2, [sp, #80]	; 0x50
   1332c:	b	13364 <__mempcpy_chk@plt+0x2350>
   13330:	ldr	ip, [fp, #-84]	; 0xffffffac
   13334:	mov	r2, #1
   13338:	mov	lr, r4
   1333c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13340:	b	13364 <__mempcpy_chk@plt+0x2350>
   13344:	ldr	r2, [sp, #80]	; 0x50
   13348:	mov	r7, #2
   1334c:	b	13364 <__mempcpy_chk@plt+0x2350>
   13350:	ldr	r6, [sp, #76]	; 0x4c
   13354:	ldr	ip, [fp, #-84]	; 0xffffffac
   13358:	ldr	lr, [sp, #84]	; 0x54
   1335c:	ldr	r2, [sp, #80]	; 0x50
   13360:	mov	r7, #2
   13364:	mov	r0, #0
   13368:	ldr	r1, [fp, #12]
   1336c:	tst	r2, #1
   13370:	mov	r2, r7
   13374:	mov	r3, lr
   13378:	str	r0, [sp, #8]
   1337c:	ldr	r0, [sp, #68]	; 0x44
   13380:	movwne	r2, #4
   13384:	cmp	r7, #2
   13388:	movne	r2, r7
   1338c:	str	r2, [sp]
   13390:	mov	r2, ip
   13394:	bic	r1, r1, #2
   13398:	str	r0, [sp, #12]
   1339c:	ldr	r0, [sp, #72]	; 0x48
   133a0:	str	r1, [sp, #4]
   133a4:	mov	r1, sl
   133a8:	str	r0, [sp, #16]
   133ac:	mov	r0, r6
   133b0:	bl	12118 <__mempcpy_chk@plt+0x1104>
   133b4:	mov	r9, r0
   133b8:	mov	r0, r9
   133bc:	sub	sp, fp, #28
   133c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133c4:	mov	r0, #5
   133c8:	ldr	r1, [sp, #48]	; 0x30
   133cc:	ldr	r2, [fp, #-84]	; 0xffffffac
   133d0:	ldr	r3, [sp, #84]	; 0x54
   133d4:	str	r0, [sp]
   133d8:	ldr	r0, [fp, #12]
   133dc:	str	r0, [sp, #4]
   133e0:	ldr	r0, [fp, #16]
   133e4:	str	r0, [sp, #8]
   133e8:	ldr	r0, [sp, #68]	; 0x44
   133ec:	str	r0, [sp, #12]
   133f0:	ldr	r0, [sp, #72]	; 0x48
   133f4:	str	r0, [sp, #16]
   133f8:	ldr	r0, [sp, #76]	; 0x4c
   133fc:	b	133b0 <__mempcpy_chk@plt+0x239c>
   13400:	mov	r0, #0
   13404:	str	r0, [fp, #-72]	; 0xffffffb8
   13408:	ldr	r1, [sp, #92]	; 0x5c
   1340c:	cmp	r1, #0
   13410:	beq	13450 <__mempcpy_chk@plt+0x243c>
   13414:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13418:	ldr	r2, [sp, #76]	; 0x4c
   1341c:	tst	r0, #1
   13420:	bne	13454 <__mempcpy_chk@plt+0x2440>
   13424:	ldrb	r0, [r1]
   13428:	cmp	r0, #0
   1342c:	beq	13454 <__mempcpy_chk@plt+0x2440>
   13430:	add	r1, r1, #1
   13434:	cmp	r9, sl
   13438:	strbcc	r0, [r2, r9]
   1343c:	add	r9, r9, #1
   13440:	ldrb	r0, [r1], #1
   13444:	cmp	r0, #0
   13448:	bne	13434 <__mempcpy_chk@plt+0x2420>
   1344c:	b	13454 <__mempcpy_chk@plt+0x2440>
   13450:	ldr	r2, [sp, #76]	; 0x4c
   13454:	cmp	r9, sl
   13458:	movcc	r0, #0
   1345c:	strbcc	r0, [r2, r9]
   13460:	mov	r0, r9
   13464:	sub	sp, fp, #28
   13468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1346c:	mov	r2, #1
   13470:	b	1333c <__mempcpy_chk@plt+0x2328>
   13474:	ldr	r2, [sp, #80]	; 0x50
   13478:	mov	r7, #5
   1347c:	b	13364 <__mempcpy_chk@plt+0x2350>
   13480:	bl	10ffc <abort@plt>
   13484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13488:	add	fp, sp, #28
   1348c:	sub	sp, sp, #28
   13490:	movw	r5, #24928	; 0x6160
   13494:	cmp	r2, #0
   13498:	mov	r4, r1
   1349c:	mov	r7, r0
   134a0:	str	r0, [sp, #20]
   134a4:	movt	r5, #2
   134a8:	movne	r5, r2
   134ac:	bl	10f3c <__errno_location@plt>
   134b0:	mov	sl, r0
   134b4:	ldm	r5, {r0, r1}
   134b8:	ldr	r2, [r5, #40]	; 0x28
   134bc:	ldr	r3, [r5, #44]	; 0x2c
   134c0:	add	r9, r5, #8
   134c4:	ldr	r6, [sl]
   134c8:	orr	r8, r1, #1
   134cc:	mov	r1, #0
   134d0:	str	r6, [sp, #24]
   134d4:	stm	sp, {r0, r8, r9}
   134d8:	str	r2, [sp, #12]
   134dc:	str	r3, [sp, #16]
   134e0:	mov	r0, #0
   134e4:	mov	r2, r7
   134e8:	mov	r3, r4
   134ec:	mov	r6, r4
   134f0:	bl	12118 <__mempcpy_chk@plt+0x1104>
   134f4:	add	r7, r0, #1
   134f8:	mov	r0, r7
   134fc:	bl	14560 <__mempcpy_chk@plt+0x354c>
   13500:	mov	r4, r0
   13504:	ldr	r0, [r5]
   13508:	ldr	r2, [r5, #44]	; 0x2c
   1350c:	ldr	r1, [r5, #40]	; 0x28
   13510:	mov	r3, r6
   13514:	stm	sp, {r0, r8, r9}
   13518:	str	r2, [sp, #16]
   1351c:	str	r1, [sp, #12]
   13520:	mov	r0, r4
   13524:	mov	r1, r7
   13528:	ldr	r2, [sp, #20]
   1352c:	bl	12118 <__mempcpy_chk@plt+0x1104>
   13530:	ldr	r0, [sp, #24]
   13534:	str	r0, [sl]
   13538:	mov	r0, r4
   1353c:	sub	sp, fp, #28
   13540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13548:	add	fp, sp, #28
   1354c:	sub	sp, sp, #36	; 0x24
   13550:	movw	r8, #24928	; 0x6160
   13554:	cmp	r3, #0
   13558:	mov	r4, r2
   1355c:	str	r2, [sp, #24]
   13560:	mov	r5, r1
   13564:	mov	r6, r0
   13568:	str	r0, [sp, #20]
   1356c:	movt	r8, #2
   13570:	movne	r8, r3
   13574:	bl	10f3c <__errno_location@plt>
   13578:	str	r0, [sp, #28]
   1357c:	cmp	r4, #0
   13580:	add	sl, r8, #8
   13584:	ldm	r8, {r3, r9}
   13588:	ldr	r7, [r0]
   1358c:	ldr	r1, [r8, #40]	; 0x28
   13590:	ldr	r2, [r8, #44]	; 0x2c
   13594:	mov	r0, #0
   13598:	orreq	r9, r9, #1
   1359c:	str	r7, [sp, #32]
   135a0:	mov	r7, r5
   135a4:	stm	sp, {r3, r9, sl}
   135a8:	str	r1, [sp, #12]
   135ac:	str	r2, [sp, #16]
   135b0:	mov	r1, #0
   135b4:	mov	r2, r6
   135b8:	mov	r3, r5
   135bc:	bl	12118 <__mempcpy_chk@plt+0x1104>
   135c0:	add	r4, r0, #1
   135c4:	mov	r5, r0
   135c8:	mov	r0, r4
   135cc:	bl	14560 <__mempcpy_chk@plt+0x354c>
   135d0:	mov	r6, r0
   135d4:	ldr	r0, [r8]
   135d8:	ldr	r2, [r8, #44]	; 0x2c
   135dc:	ldr	r1, [r8, #40]	; 0x28
   135e0:	mov	r3, r7
   135e4:	stm	sp, {r0, r9, sl}
   135e8:	str	r2, [sp, #16]
   135ec:	str	r1, [sp, #12]
   135f0:	mov	r0, r6
   135f4:	mov	r1, r4
   135f8:	ldr	r2, [sp, #20]
   135fc:	bl	12118 <__mempcpy_chk@plt+0x1104>
   13600:	ldr	r0, [sp, #24]
   13604:	ldr	r1, [sp, #32]
   13608:	ldr	r2, [sp, #28]
   1360c:	cmp	r0, #0
   13610:	str	r1, [r2]
   13614:	strne	r5, [r0]
   13618:	mov	r0, r6
   1361c:	sub	sp, fp, #28
   13620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13624:	push	{r4, r5, r6, r7, fp, lr}
   13628:	add	fp, sp, #16
   1362c:	movw	r4, #24864	; 0x6120
   13630:	movt	r4, #2
   13634:	ldrd	r6, [r4]
   13638:	cmp	r7, #2
   1363c:	blt	13668 <__mempcpy_chk@plt+0x2654>
   13640:	add	r5, r6, #12
   13644:	mov	r7, #0
   13648:	ldr	r0, [r5, r7, lsl #3]
   1364c:	bl	11d3c <__mempcpy_chk@plt+0xd28>
   13650:	ldr	r1, [r4, #4]
   13654:	add	r2, r7, #2
   13658:	add	r0, r7, #1
   1365c:	mov	r7, r0
   13660:	cmp	r2, r1
   13664:	blt	13648 <__mempcpy_chk@plt+0x2634>
   13668:	ldr	r0, [r6, #4]
   1366c:	movw	r5, #24976	; 0x6190
   13670:	movt	r5, #2
   13674:	cmp	r0, r5
   13678:	beq	1368c <__mempcpy_chk@plt+0x2678>
   1367c:	bl	11d3c <__mempcpy_chk@plt+0xd28>
   13680:	mov	r0, #256	; 0x100
   13684:	str	r0, [r4, #8]
   13688:	str	r5, [r4, #12]
   1368c:	add	r5, r4, #8
   13690:	cmp	r6, r5
   13694:	beq	136a4 <__mempcpy_chk@plt+0x2690>
   13698:	mov	r0, r6
   1369c:	bl	11d3c <__mempcpy_chk@plt+0xd28>
   136a0:	str	r5, [r4]
   136a4:	mov	r0, #1
   136a8:	str	r0, [r4, #4]
   136ac:	pop	{r4, r5, r6, r7, fp, pc}
   136b0:	movw	r3, #24928	; 0x6160
   136b4:	mvn	r2, #0
   136b8:	movt	r3, #2
   136bc:	b	136c0 <__mempcpy_chk@plt+0x26ac>
   136c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136c4:	add	fp, sp, #28
   136c8:	sub	sp, sp, #44	; 0x2c
   136cc:	mov	r7, r3
   136d0:	str	r2, [sp, #36]	; 0x24
   136d4:	str	r1, [sp, #32]
   136d8:	mov	r5, r0
   136dc:	bl	10f3c <__errno_location@plt>
   136e0:	cmp	r5, #0
   136e4:	blt	13848 <__mempcpy_chk@plt+0x2834>
   136e8:	cmn	r5, #-2147483647	; 0x80000001
   136ec:	beq	13848 <__mempcpy_chk@plt+0x2834>
   136f0:	movw	r8, #24864	; 0x6120
   136f4:	mov	r4, r0
   136f8:	movt	r8, #2
   136fc:	ldr	r6, [r8]
   13700:	ldr	r1, [r8, #4]
   13704:	ldr	r0, [r0]
   13708:	str	r4, [sp, #28]
   1370c:	cmp	r1, r5
   13710:	str	r0, [sp, #24]
   13714:	ble	13720 <__mempcpy_chk@plt+0x270c>
   13718:	mov	sl, r6
   1371c:	b	13784 <__mempcpy_chk@plt+0x2770>
   13720:	mov	r0, #8
   13724:	add	r9, r8, #8
   13728:	add	r2, r5, #1
   1372c:	str	r1, [fp, #-32]	; 0xffffffe0
   13730:	mvn	r3, #-2147483648	; 0x80000000
   13734:	str	r0, [sp]
   13738:	subs	r0, r6, r9
   1373c:	sub	r2, r2, r1
   13740:	sub	r1, fp, #32
   13744:	movne	r0, r6
   13748:	bl	14760 <__mempcpy_chk@plt+0x374c>
   1374c:	str	r0, [r8]
   13750:	cmp	r6, r9
   13754:	mov	sl, r0
   13758:	ldrdeq	r0, [r8, #8]
   1375c:	stmeq	sl, {r0, r1}
   13760:	ldr	r1, [r8, #4]
   13764:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13768:	add	r0, sl, r1, lsl #3
   1376c:	sub	r1, r2, r1
   13770:	lsl	r2, r1, #3
   13774:	mov	r1, #0
   13778:	bl	10f54 <memset@plt>
   1377c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13780:	str	r0, [r8, #4]
   13784:	mov	r9, sl
   13788:	ldr	r6, [r9, r5, lsl #3]!
   1378c:	ldr	r4, [r9, #4]!
   13790:	ldm	r7, {r0, r1}
   13794:	ldr	r2, [r7, #40]	; 0x28
   13798:	ldr	r3, [r7, #44]	; 0x2c
   1379c:	orr	r8, r1, #1
   137a0:	add	r1, r7, #8
   137a4:	stm	sp, {r0, r8}
   137a8:	add	r0, sp, #8
   137ac:	str	r1, [sp, #20]
   137b0:	stm	r0, {r1, r2, r3}
   137b4:	mov	r0, r4
   137b8:	mov	r1, r6
   137bc:	ldr	r2, [sp, #32]
   137c0:	ldr	r3, [sp, #36]	; 0x24
   137c4:	bl	12118 <__mempcpy_chk@plt+0x1104>
   137c8:	cmp	r6, r0
   137cc:	bhi	13830 <__mempcpy_chk@plt+0x281c>
   137d0:	add	r6, r0, #1
   137d4:	movw	r0, #24976	; 0x6190
   137d8:	movt	r0, #2
   137dc:	str	r6, [sl, r5, lsl #3]
   137e0:	cmp	r4, r0
   137e4:	beq	137f0 <__mempcpy_chk@plt+0x27dc>
   137e8:	mov	r0, r4
   137ec:	bl	11d3c <__mempcpy_chk@plt+0xd28>
   137f0:	mov	r0, r6
   137f4:	bl	14560 <__mempcpy_chk@plt+0x354c>
   137f8:	str	r0, [r9]
   137fc:	mov	r4, r0
   13800:	add	r3, sp, #8
   13804:	ldr	r0, [r7]
   13808:	ldr	r1, [r7, #40]	; 0x28
   1380c:	ldr	r2, [r7, #44]	; 0x2c
   13810:	stm	sp, {r0, r8}
   13814:	ldr	r0, [sp, #20]
   13818:	stm	r3, {r0, r1, r2}
   1381c:	mov	r0, r4
   13820:	mov	r1, r6
   13824:	ldr	r2, [sp, #32]
   13828:	ldr	r3, [sp, #36]	; 0x24
   1382c:	bl	12118 <__mempcpy_chk@plt+0x1104>
   13830:	ldr	r1, [sp, #24]
   13834:	ldr	r0, [sp, #28]
   13838:	str	r1, [r0]
   1383c:	mov	r0, r4
   13840:	sub	sp, fp, #28
   13844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13848:	bl	10ffc <abort@plt>
   1384c:	movw	r3, #24928	; 0x6160
   13850:	movt	r3, #2
   13854:	b	136c0 <__mempcpy_chk@plt+0x26ac>
   13858:	movw	r3, #24928	; 0x6160
   1385c:	mov	r1, r0
   13860:	mov	r0, #0
   13864:	mvn	r2, #0
   13868:	movt	r3, #2
   1386c:	b	136c0 <__mempcpy_chk@plt+0x26ac>
   13870:	movw	r3, #24928	; 0x6160
   13874:	mov	r2, r1
   13878:	mov	r1, r0
   1387c:	mov	r0, #0
   13880:	movt	r3, #2
   13884:	b	136c0 <__mempcpy_chk@plt+0x26ac>
   13888:	push	{fp, lr}
   1388c:	mov	fp, sp
   13890:	sub	sp, sp, #48	; 0x30
   13894:	vmov.i32	q8, #0	; 0x00000000
   13898:	mov	ip, #32
   1389c:	mov	r3, sp
   138a0:	mov	lr, r2
   138a4:	cmp	r1, #10
   138a8:	add	r2, r3, #16
   138ac:	vst1.64	{d16-d17}, [r3], ip
   138b0:	vst1.64	{d16-d17}, [r3]
   138b4:	vst1.64	{d16-d17}, [r2]
   138b8:	beq	138d8 <__mempcpy_chk@plt+0x28c4>
   138bc:	str	r1, [sp]
   138c0:	mov	r3, sp
   138c4:	mov	r1, lr
   138c8:	mvn	r2, #0
   138cc:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   138d0:	mov	sp, fp
   138d4:	pop	{fp, pc}
   138d8:	bl	10ffc <abort@plt>
   138dc:	push	{r4, sl, fp, lr}
   138e0:	add	fp, sp, #8
   138e4:	sub	sp, sp, #48	; 0x30
   138e8:	mov	ip, r3
   138ec:	mov	r3, sp
   138f0:	vmov.i32	q8, #0	; 0x00000000
   138f4:	mov	lr, #32
   138f8:	cmp	r1, #10
   138fc:	add	r4, r3, #16
   13900:	vst1.64	{d16-d17}, [r3], lr
   13904:	vst1.64	{d16-d17}, [r3]
   13908:	vst1.64	{d16-d17}, [r4]
   1390c:	beq	1392c <__mempcpy_chk@plt+0x2918>
   13910:	str	r1, [sp]
   13914:	mov	r1, r2
   13918:	mov	r3, sp
   1391c:	mov	r2, ip
   13920:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13924:	sub	sp, fp, #8
   13928:	pop	{r4, sl, fp, pc}
   1392c:	bl	10ffc <abort@plt>
   13930:	push	{fp, lr}
   13934:	mov	fp, sp
   13938:	sub	sp, sp, #48	; 0x30
   1393c:	mov	r3, sp
   13940:	vmov.i32	q8, #0	; 0x00000000
   13944:	mov	ip, #32
   13948:	cmp	r0, #10
   1394c:	add	r2, r3, #16
   13950:	vst1.64	{d16-d17}, [r3], ip
   13954:	vst1.64	{d16-d17}, [r3]
   13958:	vst1.64	{d16-d17}, [r2]
   1395c:	beq	1397c <__mempcpy_chk@plt+0x2968>
   13960:	str	r0, [sp]
   13964:	mov	r3, sp
   13968:	mov	r0, #0
   1396c:	mvn	r2, #0
   13970:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13974:	mov	sp, fp
   13978:	pop	{fp, pc}
   1397c:	bl	10ffc <abort@plt>
   13980:	push	{fp, lr}
   13984:	mov	fp, sp
   13988:	sub	sp, sp, #48	; 0x30
   1398c:	mov	r3, sp
   13990:	vmov.i32	q8, #0	; 0x00000000
   13994:	mov	ip, #32
   13998:	cmp	r0, #10
   1399c:	add	lr, r3, #16
   139a0:	vst1.64	{d16-d17}, [r3], ip
   139a4:	vst1.64	{d16-d17}, [r3]
   139a8:	vst1.64	{d16-d17}, [lr]
   139ac:	beq	139c8 <__mempcpy_chk@plt+0x29b4>
   139b0:	str	r0, [sp]
   139b4:	mov	r3, sp
   139b8:	mov	r0, #0
   139bc:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   139c0:	mov	sp, fp
   139c4:	pop	{fp, pc}
   139c8:	bl	10ffc <abort@plt>
   139cc:	push	{r4, sl, fp, lr}
   139d0:	add	fp, sp, #8
   139d4:	sub	sp, sp, #48	; 0x30
   139d8:	mov	lr, r0
   139dc:	movw	r0, #24928	; 0x6160
   139e0:	mov	r3, #32
   139e4:	mov	ip, r1
   139e8:	mov	r4, #1
   139ec:	movt	r0, #2
   139f0:	add	r1, r0, #16
   139f4:	vld1.64	{d16-d17}, [r0], r3
   139f8:	mov	r3, sp
   139fc:	vld1.64	{d18-d19}, [r1]
   13a00:	add	r1, r3, #16
   13a04:	vld1.64	{d20-d21}, [r0]
   13a08:	add	r0, r3, #32
   13a0c:	vst1.64	{d18-d19}, [r1]
   13a10:	mov	r1, r3
   13a14:	vst1.64	{d20-d21}, [r0]
   13a18:	mov	r0, #28
   13a1c:	and	r0, r0, r2, lsr #3
   13a20:	and	r2, r2, #31
   13a24:	vst1.64	{d16-d17}, [r1], r0
   13a28:	ldr	r0, [r1, #8]
   13a2c:	bic	r4, r4, r0, lsr r2
   13a30:	eor	r0, r0, r4, lsl r2
   13a34:	mov	r2, ip
   13a38:	str	r0, [r1, #8]
   13a3c:	mov	r0, #0
   13a40:	mov	r1, lr
   13a44:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13a48:	sub	sp, fp, #8
   13a4c:	pop	{r4, sl, fp, pc}
   13a50:	push	{fp, lr}
   13a54:	mov	fp, sp
   13a58:	sub	sp, sp, #48	; 0x30
   13a5c:	mov	ip, r0
   13a60:	movw	r0, #24928	; 0x6160
   13a64:	mov	r3, #32
   13a68:	movt	r0, #2
   13a6c:	add	r2, r0, #16
   13a70:	vld1.64	{d16-d17}, [r0], r3
   13a74:	mov	r3, sp
   13a78:	vld1.64	{d18-d19}, [r2]
   13a7c:	add	r2, r3, #16
   13a80:	vld1.64	{d20-d21}, [r0]
   13a84:	add	r0, r3, #32
   13a88:	vst1.64	{d18-d19}, [r2]
   13a8c:	mov	r2, r3
   13a90:	vst1.64	{d20-d21}, [r0]
   13a94:	mov	r0, #28
   13a98:	and	r0, r0, r1, lsr #3
   13a9c:	and	r1, r1, #31
   13aa0:	vst1.64	{d16-d17}, [r2], r0
   13aa4:	mov	r0, #1
   13aa8:	ldr	lr, [r2, #8]
   13aac:	bic	r0, r0, lr, lsr r1
   13ab0:	eor	r0, lr, r0, lsl r1
   13ab4:	mov	r1, ip
   13ab8:	str	r0, [r2, #8]
   13abc:	mov	r0, #0
   13ac0:	mvn	r2, #0
   13ac4:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13ac8:	mov	sp, fp
   13acc:	pop	{fp, pc}
   13ad0:	push	{fp, lr}
   13ad4:	mov	fp, sp
   13ad8:	sub	sp, sp, #48	; 0x30
   13adc:	movw	r2, #24928	; 0x6160
   13ae0:	mov	r3, #32
   13ae4:	mov	r1, r0
   13ae8:	movt	r2, #2
   13aec:	add	r0, r2, #16
   13af0:	vld1.64	{d16-d17}, [r2], r3
   13af4:	mov	r3, sp
   13af8:	vld1.64	{d18-d19}, [r0]
   13afc:	add	r0, r3, #16
   13b00:	vld1.64	{d20-d21}, [r2]
   13b04:	mov	r2, r3
   13b08:	vst1.64	{d18-d19}, [r0]
   13b0c:	add	r0, r3, #32
   13b10:	vst1.64	{d20-d21}, [r0]
   13b14:	mov	r0, #12
   13b18:	vst1.64	{d16-d17}, [r2], r0
   13b1c:	ldr	r0, [r2]
   13b20:	orr	r0, r0, #67108864	; 0x4000000
   13b24:	str	r0, [r2]
   13b28:	mov	r0, #0
   13b2c:	mvn	r2, #0
   13b30:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13b34:	mov	sp, fp
   13b38:	pop	{fp, pc}
   13b3c:	push	{fp, lr}
   13b40:	mov	fp, sp
   13b44:	sub	sp, sp, #48	; 0x30
   13b48:	mov	ip, r1
   13b4c:	mov	r1, r0
   13b50:	movw	r0, #24928	; 0x6160
   13b54:	mov	r3, #32
   13b58:	movt	r0, #2
   13b5c:	add	r2, r0, #16
   13b60:	vld1.64	{d16-d17}, [r0], r3
   13b64:	mov	r3, sp
   13b68:	vld1.64	{d18-d19}, [r2]
   13b6c:	add	r2, r3, #16
   13b70:	vld1.64	{d20-d21}, [r0]
   13b74:	add	r0, r3, #32
   13b78:	vst1.64	{d18-d19}, [r2]
   13b7c:	mov	r2, r3
   13b80:	vst1.64	{d20-d21}, [r0]
   13b84:	mov	r0, #12
   13b88:	vst1.64	{d16-d17}, [r2], r0
   13b8c:	ldr	r0, [r2]
   13b90:	orr	r0, r0, #67108864	; 0x4000000
   13b94:	str	r0, [r2]
   13b98:	mov	r0, #0
   13b9c:	mov	r2, ip
   13ba0:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13ba4:	mov	sp, fp
   13ba8:	pop	{fp, pc}
   13bac:	push	{r4, sl, fp, lr}
   13bb0:	add	fp, sp, #8
   13bb4:	sub	sp, sp, #96	; 0x60
   13bb8:	mov	ip, r2
   13bbc:	mov	r2, sp
   13bc0:	vmov.i32	q8, #0	; 0x00000000
   13bc4:	mov	r4, #28
   13bc8:	cmp	r1, #10
   13bcc:	mov	r3, r2
   13bd0:	add	lr, r2, #16
   13bd4:	vst1.64	{d16-d17}, [r3], r4
   13bd8:	vst1.64	{d16-d17}, [lr]
   13bdc:	vst1.32	{d16-d17}, [r3]
   13be0:	beq	13c30 <__mempcpy_chk@plt+0x2c1c>
   13be4:	vld1.64	{d16-d17}, [r2], r4
   13be8:	vld1.64	{d18-d19}, [lr]
   13bec:	add	r3, sp, #48	; 0x30
   13bf0:	add	r4, r3, #4
   13bf4:	vld1.32	{d20-d21}, [r2]
   13bf8:	add	r2, r3, #20
   13bfc:	vst1.32	{d16-d17}, [r4]
   13c00:	vst1.32	{d18-d19}, [r2]
   13c04:	add	r2, r3, #32
   13c08:	vst1.32	{d20-d21}, [r2]
   13c0c:	str	r1, [sp, #48]	; 0x30
   13c10:	mvn	r2, #0
   13c14:	ldr	r1, [sp, #60]	; 0x3c
   13c18:	orr	r1, r1, #67108864	; 0x4000000
   13c1c:	str	r1, [sp, #60]	; 0x3c
   13c20:	mov	r1, ip
   13c24:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13c28:	sub	sp, fp, #8
   13c2c:	pop	{r4, sl, fp, pc}
   13c30:	bl	10ffc <abort@plt>
   13c34:	push	{r4, r5, fp, lr}
   13c38:	add	fp, sp, #8
   13c3c:	sub	sp, sp, #48	; 0x30
   13c40:	mov	ip, r3
   13c44:	movw	r3, #24928	; 0x6160
   13c48:	mov	lr, #32
   13c4c:	cmp	r1, #0
   13c50:	mov	r5, sp
   13c54:	movt	r3, #2
   13c58:	cmpne	r2, #0
   13c5c:	add	r4, r3, #16
   13c60:	vld1.64	{d16-d17}, [r3], lr
   13c64:	vld1.64	{d18-d19}, [r4]
   13c68:	add	r4, r5, #16
   13c6c:	vld1.64	{d20-d21}, [r3]
   13c70:	vst1.64	{d16-d17}, [r5], lr
   13c74:	mov	r3, #10
   13c78:	vst1.64	{d18-d19}, [r4]
   13c7c:	vst1.64	{d20-d21}, [r5]
   13c80:	str	r3, [sp]
   13c84:	bne	13c8c <__mempcpy_chk@plt+0x2c78>
   13c88:	bl	10ffc <abort@plt>
   13c8c:	str	r2, [sp, #44]	; 0x2c
   13c90:	str	r1, [sp, #40]	; 0x28
   13c94:	mov	r3, sp
   13c98:	mov	r1, ip
   13c9c:	mvn	r2, #0
   13ca0:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13ca4:	sub	sp, fp, #8
   13ca8:	pop	{r4, r5, fp, pc}
   13cac:	push	{r4, r5, fp, lr}
   13cb0:	add	fp, sp, #8
   13cb4:	sub	sp, sp, #48	; 0x30
   13cb8:	mov	lr, r3
   13cbc:	movw	r3, #24928	; 0x6160
   13cc0:	mov	ip, #32
   13cc4:	cmp	r1, #0
   13cc8:	mov	r5, sp
   13ccc:	movt	r3, #2
   13cd0:	cmpne	r2, #0
   13cd4:	add	r4, r3, #16
   13cd8:	vld1.64	{d16-d17}, [r3], ip
   13cdc:	vld1.64	{d18-d19}, [r4]
   13ce0:	add	r4, r5, #16
   13ce4:	vld1.64	{d20-d21}, [r3]
   13ce8:	vst1.64	{d16-d17}, [r5], ip
   13cec:	mov	r3, #10
   13cf0:	vst1.64	{d18-d19}, [r4]
   13cf4:	vst1.64	{d20-d21}, [r5]
   13cf8:	str	r3, [sp]
   13cfc:	bne	13d04 <__mempcpy_chk@plt+0x2cf0>
   13d00:	bl	10ffc <abort@plt>
   13d04:	ldr	ip, [fp, #8]
   13d08:	str	r2, [sp, #44]	; 0x2c
   13d0c:	str	r1, [sp, #40]	; 0x28
   13d10:	mov	r3, sp
   13d14:	mov	r1, lr
   13d18:	mov	r2, ip
   13d1c:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13d20:	sub	sp, fp, #8
   13d24:	pop	{r4, r5, fp, pc}
   13d28:	push	{r4, sl, fp, lr}
   13d2c:	add	fp, sp, #8
   13d30:	sub	sp, sp, #48	; 0x30
   13d34:	mov	ip, r2
   13d38:	movw	r2, #24928	; 0x6160
   13d3c:	mov	lr, #32
   13d40:	cmp	r0, #0
   13d44:	mov	r4, sp
   13d48:	movt	r2, #2
   13d4c:	cmpne	r1, #0
   13d50:	add	r3, r2, #16
   13d54:	vld1.64	{d16-d17}, [r2], lr
   13d58:	vld1.64	{d18-d19}, [r3]
   13d5c:	add	r3, r4, #16
   13d60:	vld1.64	{d20-d21}, [r2]
   13d64:	vst1.64	{d16-d17}, [r4], lr
   13d68:	mov	r2, #10
   13d6c:	vst1.64	{d18-d19}, [r3]
   13d70:	vst1.64	{d20-d21}, [r4]
   13d74:	str	r2, [sp]
   13d78:	bne	13d80 <__mempcpy_chk@plt+0x2d6c>
   13d7c:	bl	10ffc <abort@plt>
   13d80:	str	r1, [sp, #44]	; 0x2c
   13d84:	str	r0, [sp, #40]	; 0x28
   13d88:	mov	r3, sp
   13d8c:	mov	r0, #0
   13d90:	mov	r1, ip
   13d94:	mvn	r2, #0
   13d98:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13d9c:	sub	sp, fp, #8
   13da0:	pop	{r4, sl, fp, pc}
   13da4:	push	{r4, r5, fp, lr}
   13da8:	add	fp, sp, #8
   13dac:	sub	sp, sp, #48	; 0x30
   13db0:	mov	lr, r2
   13db4:	movw	r2, #24928	; 0x6160
   13db8:	mov	ip, r3
   13dbc:	mov	r3, #32
   13dc0:	cmp	r0, #0
   13dc4:	mov	r5, sp
   13dc8:	movt	r2, #2
   13dcc:	cmpne	r1, #0
   13dd0:	add	r4, r2, #16
   13dd4:	vld1.64	{d16-d17}, [r2], r3
   13dd8:	vld1.64	{d18-d19}, [r4]
   13ddc:	add	r4, r5, #16
   13de0:	vld1.64	{d20-d21}, [r2]
   13de4:	vst1.64	{d16-d17}, [r5], r3
   13de8:	mov	r2, #10
   13dec:	vst1.64	{d18-d19}, [r4]
   13df0:	vst1.64	{d20-d21}, [r5]
   13df4:	str	r2, [sp]
   13df8:	bne	13e00 <__mempcpy_chk@plt+0x2dec>
   13dfc:	bl	10ffc <abort@plt>
   13e00:	str	r1, [sp, #44]	; 0x2c
   13e04:	str	r0, [sp, #40]	; 0x28
   13e08:	mov	r3, sp
   13e0c:	mov	r0, #0
   13e10:	mov	r1, lr
   13e14:	mov	r2, ip
   13e18:	bl	136c0 <__mempcpy_chk@plt+0x26ac>
   13e1c:	sub	sp, fp, #8
   13e20:	pop	{r4, r5, fp, pc}
   13e24:	movw	r3, #24816	; 0x60f0
   13e28:	movt	r3, #2
   13e2c:	b	136c0 <__mempcpy_chk@plt+0x26ac>
   13e30:	movw	r3, #24816	; 0x60f0
   13e34:	mov	r2, r1
   13e38:	mov	r1, r0
   13e3c:	mov	r0, #0
   13e40:	movt	r3, #2
   13e44:	b	136c0 <__mempcpy_chk@plt+0x26ac>
   13e48:	movw	r3, #24816	; 0x60f0
   13e4c:	mvn	r2, #0
   13e50:	movt	r3, #2
   13e54:	b	136c0 <__mempcpy_chk@plt+0x26ac>
   13e58:	movw	r3, #24816	; 0x60f0
   13e5c:	mov	r1, r0
   13e60:	mov	r0, #0
   13e64:	mvn	r2, #0
   13e68:	movt	r3, #2
   13e6c:	b	136c0 <__mempcpy_chk@plt+0x26ac>
   13e70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e74:	add	fp, sp, #24
   13e78:	sub	sp, sp, #32
   13e7c:	ldr	r6, [fp, #12]
   13e80:	ldr	r7, [fp, #8]
   13e84:	mov	r4, r2
   13e88:	mov	r8, r0
   13e8c:	cmp	r1, #0
   13e90:	beq	13eb8 <__mempcpy_chk@plt+0x2ea4>
   13e94:	movw	r2, #22456	; 0x57b8
   13e98:	mov	r5, r1
   13e9c:	str	r3, [sp, #4]
   13ea0:	str	r4, [sp]
   13ea4:	mov	r0, r8
   13ea8:	mov	r1, #1
   13eac:	movt	r2, #1
   13eb0:	mov	r3, r5
   13eb4:	b	13ed0 <__mempcpy_chk@plt+0x2ebc>
   13eb8:	movw	r2, #22468	; 0x57c4
   13ebc:	str	r3, [sp]
   13ec0:	mov	r0, r8
   13ec4:	mov	r1, #1
   13ec8:	mov	r3, r4
   13ecc:	movt	r2, #1
   13ed0:	bl	10f78 <__fprintf_chk@plt>
   13ed4:	movw	r1, #22475	; 0x57cb
   13ed8:	mov	r0, #0
   13edc:	mov	r2, #5
   13ee0:	movt	r1, #1
   13ee4:	bl	10e40 <dcgettext@plt>
   13ee8:	movw	r2, #23193	; 0x5a99
   13eec:	mov	r3, r0
   13ef0:	movw	r0, #2022	; 0x7e6
   13ef4:	mov	r1, #1
   13ef8:	str	r0, [sp]
   13efc:	movt	r2, #1
   13f00:	mov	r0, r8
   13f04:	bl	10f78 <__fprintf_chk@plt>
   13f08:	movw	r4, #20814	; 0x514e
   13f0c:	mov	r1, r8
   13f10:	movt	r4, #1
   13f14:	mov	r0, r4
   13f18:	bl	10dc8 <fputs_unlocked@plt>
   13f1c:	movw	r1, #22479	; 0x57cf
   13f20:	mov	r0, #0
   13f24:	mov	r2, #5
   13f28:	movt	r1, #1
   13f2c:	bl	10e40 <dcgettext@plt>
   13f30:	movw	r3, #22650	; 0x587a
   13f34:	mov	r2, r0
   13f38:	mov	r0, r8
   13f3c:	mov	r1, #1
   13f40:	movt	r3, #1
   13f44:	bl	10f78 <__fprintf_chk@plt>
   13f48:	mov	r0, r4
   13f4c:	mov	r1, r8
   13f50:	bl	10dc8 <fputs_unlocked@plt>
   13f54:	cmp	r6, #9
   13f58:	bhi	13f94 <__mempcpy_chk@plt+0x2f80>
   13f5c:	add	r0, pc, #0
   13f60:	ldr	pc, [r0, r6, lsl #2]
   13f64:	andeq	r3, r1, ip, lsl #31
   13f68:	andeq	r3, r1, r0, lsr #31
   13f6c:	ldrdeq	r3, [r1], -r0
   13f70:	strdeq	r3, [r1], -r8
   13f74:	andeq	r4, r1, r0, lsr #32
   13f78:	andeq	r4, r1, r8, asr #32
   13f7c:	andeq	r4, r1, r0, ror r0
   13f80:	andeq	r4, r1, r8, lsr #1
   13f84:	andeq	r4, r1, r0, asr r1
   13f88:	strdeq	r4, [r1], -r8
   13f8c:	sub	sp, fp, #24
   13f90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13f94:	movw	r1, #23003	; 0x59db
   13f98:	movt	r1, #1
   13f9c:	b	14100 <__mempcpy_chk@plt+0x30ec>
   13fa0:	movw	r1, #22684	; 0x589c
   13fa4:	mov	r0, #0
   13fa8:	mov	r2, #5
   13fac:	movt	r1, #1
   13fb0:	bl	10e40 <dcgettext@plt>
   13fb4:	ldr	r3, [r7]
   13fb8:	mov	r2, r0
   13fbc:	mov	r0, r8
   13fc0:	mov	r1, #1
   13fc4:	sub	sp, fp, #24
   13fc8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13fcc:	b	10f78 <__fprintf_chk@plt>
   13fd0:	movw	r1, #22700	; 0x58ac
   13fd4:	mov	r0, #0
   13fd8:	mov	r2, #5
   13fdc:	movt	r1, #1
   13fe0:	bl	10e40 <dcgettext@plt>
   13fe4:	mov	r2, r0
   13fe8:	ldr	r3, [r7]
   13fec:	ldr	r0, [r7, #4]
   13ff0:	str	r0, [sp]
   13ff4:	b	140e4 <__mempcpy_chk@plt+0x30d0>
   13ff8:	movw	r1, #22723	; 0x58c3
   13ffc:	mov	r0, #0
   14000:	mov	r2, #5
   14004:	movt	r1, #1
   14008:	bl	10e40 <dcgettext@plt>
   1400c:	ldr	r3, [r7]
   14010:	mov	r2, r0
   14014:	ldmib	r7, {r0, r1}
   14018:	stm	sp, {r0, r1}
   1401c:	b	140e4 <__mempcpy_chk@plt+0x30d0>
   14020:	movw	r1, #22751	; 0x58df
   14024:	mov	r0, #0
   14028:	mov	r2, #5
   1402c:	movt	r1, #1
   14030:	bl	10e40 <dcgettext@plt>
   14034:	ldr	r3, [r7]
   14038:	mov	r2, r0
   1403c:	ldmib	r7, {r0, r1, r7}
   14040:	stm	sp, {r0, r1, r7}
   14044:	b	140e4 <__mempcpy_chk@plt+0x30d0>
   14048:	movw	r1, #22783	; 0x58ff
   1404c:	mov	r0, #0
   14050:	mov	r2, #5
   14054:	movt	r1, #1
   14058:	bl	10e40 <dcgettext@plt>
   1405c:	ldr	r3, [r7]
   14060:	mov	r2, r0
   14064:	ldmib	r7, {r0, r1, r6, r7}
   14068:	stm	sp, {r0, r1, r6, r7}
   1406c:	b	140e4 <__mempcpy_chk@plt+0x30d0>
   14070:	movw	r1, #22819	; 0x5923
   14074:	mov	r0, #0
   14078:	mov	r2, #5
   1407c:	movt	r1, #1
   14080:	bl	10e40 <dcgettext@plt>
   14084:	ldr	r3, [r7]
   14088:	mov	r2, r0
   1408c:	ldmib	r7, {r0, r1, r6}
   14090:	ldr	r5, [r7, #16]
   14094:	ldr	r7, [r7, #20]
   14098:	stm	sp, {r0, r1, r6}
   1409c:	str	r5, [sp, #12]
   140a0:	str	r7, [sp, #16]
   140a4:	b	140e4 <__mempcpy_chk@plt+0x30d0>
   140a8:	movw	r1, #22859	; 0x594b
   140ac:	mov	r0, #0
   140b0:	mov	r2, #5
   140b4:	movt	r1, #1
   140b8:	bl	10e40 <dcgettext@plt>
   140bc:	ldr	r3, [r7]
   140c0:	mov	r2, r0
   140c4:	ldmib	r7, {r0, r1, r6}
   140c8:	ldr	r5, [r7, #16]
   140cc:	ldr	r4, [r7, #20]
   140d0:	ldr	r7, [r7, #24]
   140d4:	stm	sp, {r0, r1, r6}
   140d8:	str	r5, [sp, #12]
   140dc:	str	r4, [sp, #16]
   140e0:	str	r7, [sp, #20]
   140e4:	mov	r0, r8
   140e8:	mov	r1, #1
   140ec:	bl	10f78 <__fprintf_chk@plt>
   140f0:	sub	sp, fp, #24
   140f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   140f8:	movw	r1, #22951	; 0x59a7
   140fc:	movt	r1, #1
   14100:	mov	r0, #0
   14104:	mov	r2, #5
   14108:	bl	10e40 <dcgettext@plt>
   1410c:	mov	ip, r0
   14110:	ldr	r3, [r7]
   14114:	ldr	r0, [r7, #4]
   14118:	ldr	r1, [r7, #8]
   1411c:	ldr	r6, [r7, #12]
   14120:	ldr	r5, [r7, #16]
   14124:	ldr	r4, [r7, #20]
   14128:	ldr	r2, [r7, #24]
   1412c:	ldr	lr, [r7, #28]
   14130:	ldr	r7, [r7, #32]
   14134:	stm	sp, {r0, r1, r6}
   14138:	str	r5, [sp, #12]
   1413c:	str	r4, [sp, #16]
   14140:	str	r2, [sp, #20]
   14144:	str	lr, [sp, #24]
   14148:	str	r7, [sp, #28]
   1414c:	b	14194 <__mempcpy_chk@plt+0x3180>
   14150:	movw	r1, #22903	; 0x5977
   14154:	mov	r0, #0
   14158:	mov	r2, #5
   1415c:	movt	r1, #1
   14160:	bl	10e40 <dcgettext@plt>
   14164:	mov	ip, r0
   14168:	ldr	r3, [r7]
   1416c:	ldmib	r7, {r0, r1, r6}
   14170:	ldr	r5, [r7, #16]
   14174:	ldr	r4, [r7, #20]
   14178:	ldr	r2, [r7, #24]
   1417c:	ldr	r7, [r7, #28]
   14180:	stm	sp, {r0, r1, r6}
   14184:	str	r5, [sp, #12]
   14188:	str	r4, [sp, #16]
   1418c:	str	r2, [sp, #20]
   14190:	str	r7, [sp, #24]
   14194:	mov	r0, r8
   14198:	mov	r1, #1
   1419c:	mov	r2, ip
   141a0:	bl	10f78 <__fprintf_chk@plt>
   141a4:	sub	sp, fp, #24
   141a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141ac:	push	{r4, sl, fp, lr}
   141b0:	add	fp, sp, #8
   141b4:	sub	sp, sp, #8
   141b8:	ldr	ip, [fp, #8]
   141bc:	mov	lr, #0
   141c0:	ldr	r4, [ip, lr, lsl #2]
   141c4:	add	lr, lr, #1
   141c8:	cmp	r4, #0
   141cc:	bne	141c0 <__mempcpy_chk@plt+0x31ac>
   141d0:	sub	r4, lr, #1
   141d4:	str	ip, [sp]
   141d8:	str	r4, [sp, #4]
   141dc:	bl	13e70 <__mempcpy_chk@plt+0x2e5c>
   141e0:	sub	sp, fp, #8
   141e4:	pop	{r4, sl, fp, pc}
   141e8:	push	{fp, lr}
   141ec:	mov	fp, sp
   141f0:	sub	sp, sp, #48	; 0x30
   141f4:	ldr	ip, [fp, #8]
   141f8:	ldr	lr, [ip]
   141fc:	cmp	lr, #0
   14200:	str	lr, [sp, #8]
   14204:	beq	142a0 <__mempcpy_chk@plt+0x328c>
   14208:	ldr	lr, [ip, #4]
   1420c:	cmp	lr, #0
   14210:	str	lr, [sp, #12]
   14214:	beq	142a8 <__mempcpy_chk@plt+0x3294>
   14218:	ldr	lr, [ip, #8]
   1421c:	cmp	lr, #0
   14220:	str	lr, [sp, #16]
   14224:	beq	142b0 <__mempcpy_chk@plt+0x329c>
   14228:	ldr	lr, [ip, #12]
   1422c:	cmp	lr, #0
   14230:	str	lr, [sp, #20]
   14234:	beq	142b8 <__mempcpy_chk@plt+0x32a4>
   14238:	ldr	lr, [ip, #16]
   1423c:	cmp	lr, #0
   14240:	str	lr, [sp, #24]
   14244:	beq	142c0 <__mempcpy_chk@plt+0x32ac>
   14248:	ldr	lr, [ip, #20]
   1424c:	cmp	lr, #0
   14250:	str	lr, [sp, #28]
   14254:	beq	142c8 <__mempcpy_chk@plt+0x32b4>
   14258:	ldr	lr, [ip, #24]
   1425c:	cmp	lr, #0
   14260:	str	lr, [sp, #32]
   14264:	beq	142d0 <__mempcpy_chk@plt+0x32bc>
   14268:	ldr	lr, [ip, #28]
   1426c:	cmp	lr, #0
   14270:	str	lr, [sp, #36]	; 0x24
   14274:	beq	142d8 <__mempcpy_chk@plt+0x32c4>
   14278:	ldr	lr, [ip, #32]
   1427c:	cmp	lr, #0
   14280:	str	lr, [sp, #40]	; 0x28
   14284:	beq	142e0 <__mempcpy_chk@plt+0x32cc>
   14288:	ldr	lr, [ip, #36]	; 0x24
   1428c:	mov	ip, #10
   14290:	cmp	lr, #0
   14294:	str	lr, [sp, #44]	; 0x2c
   14298:	movweq	ip, #9
   1429c:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142a0:	mov	ip, #0
   142a4:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142a8:	mov	ip, #1
   142ac:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142b0:	mov	ip, #2
   142b4:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142b8:	mov	ip, #3
   142bc:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142c0:	mov	ip, #4
   142c4:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142c8:	mov	ip, #5
   142cc:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142d0:	mov	ip, #6
   142d4:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142d8:	mov	ip, #7
   142dc:	b	142e4 <__mempcpy_chk@plt+0x32d0>
   142e0:	mov	ip, #8
   142e4:	add	lr, sp, #8
   142e8:	str	ip, [sp, #4]
   142ec:	str	lr, [sp]
   142f0:	bl	13e70 <__mempcpy_chk@plt+0x2e5c>
   142f4:	mov	sp, fp
   142f8:	pop	{fp, pc}
   142fc:	push	{fp, lr}
   14300:	mov	fp, sp
   14304:	sub	sp, sp, #56	; 0x38
   14308:	add	ip, fp, #8
   1430c:	str	ip, [sp, #12]
   14310:	ldr	lr, [fp, #8]
   14314:	cmp	lr, #0
   14318:	str	lr, [sp, #16]
   1431c:	beq	143b8 <__mempcpy_chk@plt+0x33a4>
   14320:	ldr	lr, [ip, #4]
   14324:	cmp	lr, #0
   14328:	str	lr, [sp, #20]
   1432c:	beq	143c0 <__mempcpy_chk@plt+0x33ac>
   14330:	ldr	lr, [ip, #8]
   14334:	cmp	lr, #0
   14338:	str	lr, [sp, #24]
   1433c:	beq	143c8 <__mempcpy_chk@plt+0x33b4>
   14340:	ldr	lr, [ip, #12]
   14344:	cmp	lr, #0
   14348:	str	lr, [sp, #28]
   1434c:	beq	143d0 <__mempcpy_chk@plt+0x33bc>
   14350:	ldr	lr, [ip, #16]
   14354:	cmp	lr, #0
   14358:	str	lr, [sp, #32]
   1435c:	beq	143d8 <__mempcpy_chk@plt+0x33c4>
   14360:	ldr	lr, [ip, #20]
   14364:	cmp	lr, #0
   14368:	str	lr, [sp, #36]	; 0x24
   1436c:	beq	143e0 <__mempcpy_chk@plt+0x33cc>
   14370:	ldr	lr, [ip, #24]
   14374:	cmp	lr, #0
   14378:	str	lr, [sp, #40]	; 0x28
   1437c:	beq	143e8 <__mempcpy_chk@plt+0x33d4>
   14380:	ldr	lr, [ip, #28]
   14384:	cmp	lr, #0
   14388:	str	lr, [sp, #44]	; 0x2c
   1438c:	beq	143f0 <__mempcpy_chk@plt+0x33dc>
   14390:	ldr	lr, [ip, #32]
   14394:	cmp	lr, #0
   14398:	str	lr, [sp, #48]	; 0x30
   1439c:	beq	143f8 <__mempcpy_chk@plt+0x33e4>
   143a0:	ldr	lr, [ip, #36]	; 0x24
   143a4:	mov	ip, #10
   143a8:	cmp	lr, #0
   143ac:	str	lr, [sp, #52]	; 0x34
   143b0:	movweq	ip, #9
   143b4:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143b8:	mov	ip, #0
   143bc:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143c0:	mov	ip, #1
   143c4:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143c8:	mov	ip, #2
   143cc:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143d0:	mov	ip, #3
   143d4:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143d8:	mov	ip, #4
   143dc:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143e0:	mov	ip, #5
   143e4:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143e8:	mov	ip, #6
   143ec:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143f0:	mov	ip, #7
   143f4:	b	143fc <__mempcpy_chk@plt+0x33e8>
   143f8:	mov	ip, #8
   143fc:	add	lr, sp, #16
   14400:	str	ip, [sp, #4]
   14404:	str	lr, [sp]
   14408:	bl	13e70 <__mempcpy_chk@plt+0x2e5c>
   1440c:	mov	sp, fp
   14410:	pop	{fp, pc}
   14414:	push	{fp, lr}
   14418:	mov	fp, sp
   1441c:	movw	r0, #24900	; 0x6144
   14420:	movt	r0, #2
   14424:	ldr	r1, [r0]
   14428:	movw	r0, #20814	; 0x514e
   1442c:	movt	r0, #1
   14430:	bl	10dc8 <fputs_unlocked@plt>
   14434:	movw	r1, #23063	; 0x5a17
   14438:	mov	r0, #0
   1443c:	mov	r2, #5
   14440:	movt	r1, #1
   14444:	bl	10e40 <dcgettext@plt>
   14448:	movw	r2, #23083	; 0x5a2b
   1444c:	mov	r1, r0
   14450:	mov	r0, #1
   14454:	movt	r2, #1
   14458:	bl	10f60 <__printf_chk@plt>
   1445c:	movw	r1, #23105	; 0x5a41
   14460:	mov	r0, #0
   14464:	mov	r2, #5
   14468:	movt	r1, #1
   1446c:	bl	10e40 <dcgettext@plt>
   14470:	movw	r2, #21443	; 0x53c3
   14474:	movw	r3, #21852	; 0x555c
   14478:	mov	r1, r0
   1447c:	mov	r0, #1
   14480:	movt	r2, #1
   14484:	movt	r3, #1
   14488:	bl	10f60 <__printf_chk@plt>
   1448c:	movw	r1, #23125	; 0x5a55
   14490:	mov	r0, #0
   14494:	mov	r2, #5
   14498:	movt	r1, #1
   1449c:	bl	10e40 <dcgettext@plt>
   144a0:	movw	r2, #23164	; 0x5a7c
   144a4:	mov	r1, r0
   144a8:	mov	r0, #1
   144ac:	movt	r2, #1
   144b0:	pop	{fp, lr}
   144b4:	b	10f60 <__printf_chk@plt>
   144b8:	push	{r4, r5, r6, sl, fp, lr}
   144bc:	add	fp, sp, #16
   144c0:	mov	r4, r2
   144c4:	mov	r5, r1
   144c8:	mov	r6, r0
   144cc:	bl	14f08 <__mempcpy_chk@plt+0x3ef4>
   144d0:	cmp	r0, #0
   144d4:	popne	{r4, r5, r6, sl, fp, pc}
   144d8:	cmp	r6, #0
   144dc:	beq	144f0 <__mempcpy_chk@plt+0x34dc>
   144e0:	cmp	r5, #0
   144e4:	cmpne	r4, #0
   144e8:	bne	144f0 <__mempcpy_chk@plt+0x34dc>
   144ec:	pop	{r4, r5, r6, sl, fp, pc}
   144f0:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   144f4:	push	{r4, r5, r6, sl, fp, lr}
   144f8:	add	fp, sp, #16
   144fc:	mov	r4, r2
   14500:	mov	r5, r1
   14504:	mov	r6, r0
   14508:	bl	14f08 <__mempcpy_chk@plt+0x3ef4>
   1450c:	cmp	r0, #0
   14510:	popne	{r4, r5, r6, sl, fp, pc}
   14514:	cmp	r6, #0
   14518:	beq	1452c <__mempcpy_chk@plt+0x3518>
   1451c:	cmp	r5, #0
   14520:	cmpne	r4, #0
   14524:	bne	1452c <__mempcpy_chk@plt+0x3518>
   14528:	pop	{r4, r5, r6, sl, fp, pc}
   1452c:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14530:	push	{fp, lr}
   14534:	mov	fp, sp
   14538:	bl	14b28 <__mempcpy_chk@plt+0x3b14>
   1453c:	cmp	r0, #0
   14540:	popne	{fp, pc}
   14544:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14548:	push	{fp, lr}
   1454c:	mov	fp, sp
   14550:	bl	14b28 <__mempcpy_chk@plt+0x3b14>
   14554:	cmp	r0, #0
   14558:	popne	{fp, pc}
   1455c:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14560:	push	{fp, lr}
   14564:	mov	fp, sp
   14568:	bl	14b28 <__mempcpy_chk@plt+0x3b14>
   1456c:	cmp	r0, #0
   14570:	popne	{fp, pc}
   14574:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14578:	push	{r4, r5, fp, lr}
   1457c:	add	fp, sp, #8
   14580:	mov	r4, r1
   14584:	mov	r5, r0
   14588:	bl	14b58 <__mempcpy_chk@plt+0x3b44>
   1458c:	cmp	r0, #0
   14590:	popne	{r4, r5, fp, pc}
   14594:	cmp	r5, #0
   14598:	beq	145a8 <__mempcpy_chk@plt+0x3594>
   1459c:	cmp	r4, #0
   145a0:	bne	145a8 <__mempcpy_chk@plt+0x3594>
   145a4:	pop	{r4, r5, fp, pc}
   145a8:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   145ac:	push	{fp, lr}
   145b0:	mov	fp, sp
   145b4:	cmp	r1, #0
   145b8:	orreq	r1, r1, #1
   145bc:	bl	14b58 <__mempcpy_chk@plt+0x3b44>
   145c0:	cmp	r0, #0
   145c4:	popne	{fp, pc}
   145c8:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   145cc:	push	{fp, lr}
   145d0:	mov	fp, sp
   145d4:	clz	r3, r2
   145d8:	lsr	ip, r3, #5
   145dc:	clz	r3, r1
   145e0:	lsr	r3, r3, #5
   145e4:	orrs	r3, r3, ip
   145e8:	movwne	r1, #1
   145ec:	movwne	r2, #1
   145f0:	bl	14f08 <__mempcpy_chk@plt+0x3ef4>
   145f4:	cmp	r0, #0
   145f8:	popne	{fp, pc}
   145fc:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14600:	push	{fp, lr}
   14604:	mov	fp, sp
   14608:	mov	r2, r1
   1460c:	mov	r1, r0
   14610:	mov	r0, #0
   14614:	bl	14f08 <__mempcpy_chk@plt+0x3ef4>
   14618:	cmp	r0, #0
   1461c:	popne	{fp, pc}
   14620:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14624:	push	{fp, lr}
   14628:	mov	fp, sp
   1462c:	mov	r2, r1
   14630:	mov	r1, r0
   14634:	clz	r0, r2
   14638:	clz	r3, r1
   1463c:	lsr	r0, r0, #5
   14640:	lsr	r3, r3, #5
   14644:	orrs	r0, r3, r0
   14648:	movwne	r1, #1
   1464c:	movwne	r2, #1
   14650:	mov	r0, #0
   14654:	bl	14f08 <__mempcpy_chk@plt+0x3ef4>
   14658:	cmp	r0, #0
   1465c:	popne	{fp, pc}
   14660:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14664:	push	{r4, r5, r6, sl, fp, lr}
   14668:	add	fp, sp, #16
   1466c:	ldr	r5, [r1]
   14670:	mov	r4, r1
   14674:	mov	r6, r0
   14678:	cmp	r0, #0
   1467c:	beq	14694 <__mempcpy_chk@plt+0x3680>
   14680:	mov	r0, #1
   14684:	add	r0, r0, r5, lsr #1
   14688:	adds	r5, r5, r0
   1468c:	bcc	1469c <__mempcpy_chk@plt+0x3688>
   14690:	b	146d8 <__mempcpy_chk@plt+0x36c4>
   14694:	cmp	r5, #0
   14698:	movweq	r5, #64	; 0x40
   1469c:	mov	r0, r6
   146a0:	mov	r1, r5
   146a4:	mov	r2, #1
   146a8:	bl	14f08 <__mempcpy_chk@plt+0x3ef4>
   146ac:	cmp	r5, #0
   146b0:	mov	r1, r5
   146b4:	movwne	r1, #1
   146b8:	cmp	r0, #0
   146bc:	bne	146d0 <__mempcpy_chk@plt+0x36bc>
   146c0:	clz	r2, r6
   146c4:	lsr	r2, r2, #5
   146c8:	orrs	r1, r2, r1
   146cc:	bne	146d8 <__mempcpy_chk@plt+0x36c4>
   146d0:	str	r5, [r4]
   146d4:	pop	{r4, r5, r6, sl, fp, pc}
   146d8:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   146dc:	push	{r4, r5, r6, r7, fp, lr}
   146e0:	add	fp, sp, #16
   146e4:	ldr	r5, [r1]
   146e8:	mov	r6, r2
   146ec:	mov	r4, r1
   146f0:	mov	r7, r0
   146f4:	cmp	r0, #0
   146f8:	beq	14710 <__mempcpy_chk@plt+0x36fc>
   146fc:	mov	r0, #1
   14700:	add	r0, r0, r5, lsr #1
   14704:	adds	r5, r5, r0
   14708:	bcc	14728 <__mempcpy_chk@plt+0x3714>
   1470c:	b	1475c <__mempcpy_chk@plt+0x3748>
   14710:	cmp	r5, #0
   14714:	bne	14728 <__mempcpy_chk@plt+0x3714>
   14718:	mov	r0, #64	; 0x40
   1471c:	cmp	r6, #64	; 0x40
   14720:	udiv	r5, r0, r6
   14724:	addhi	r5, r5, #1
   14728:	mov	r0, r7
   1472c:	mov	r1, r5
   14730:	mov	r2, r6
   14734:	bl	14f08 <__mempcpy_chk@plt+0x3ef4>
   14738:	cmp	r0, #0
   1473c:	bne	14754 <__mempcpy_chk@plt+0x3740>
   14740:	cmp	r7, #0
   14744:	beq	1475c <__mempcpy_chk@plt+0x3748>
   14748:	cmp	r6, #0
   1474c:	cmpne	r5, #0
   14750:	bne	1475c <__mempcpy_chk@plt+0x3748>
   14754:	str	r5, [r4]
   14758:	pop	{r4, r5, r6, r7, fp, pc}
   1475c:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14760:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14764:	add	fp, sp, #24
   14768:	mov	r8, r1
   1476c:	ldr	r1, [r1]
   14770:	mov	r5, r0
   14774:	add	r0, r1, r1, asr #1
   14778:	cmp	r0, r1
   1477c:	mvnvs	r0, #-2147483648	; 0x80000000
   14780:	cmp	r0, r3
   14784:	mov	r7, r0
   14788:	movgt	r7, r3
   1478c:	cmn	r3, #1
   14790:	movle	r7, r0
   14794:	ldr	r0, [fp, #8]
   14798:	cmn	r0, #1
   1479c:	ble	147c4 <__mempcpy_chk@plt+0x37b0>
   147a0:	cmp	r0, #0
   147a4:	beq	14818 <__mempcpy_chk@plt+0x3804>
   147a8:	cmn	r7, #1
   147ac:	ble	147ec <__mempcpy_chk@plt+0x37d8>
   147b0:	mvn	r4, #-2147483648	; 0x80000000
   147b4:	udiv	r6, r4, r0
   147b8:	cmp	r6, r7
   147bc:	bge	14818 <__mempcpy_chk@plt+0x3804>
   147c0:	b	14828 <__mempcpy_chk@plt+0x3814>
   147c4:	cmn	r7, #1
   147c8:	ble	14808 <__mempcpy_chk@plt+0x37f4>
   147cc:	cmn	r0, #1
   147d0:	beq	14818 <__mempcpy_chk@plt+0x3804>
   147d4:	mov	r6, #-2147483648	; 0x80000000
   147d8:	mvn	r4, #-2147483648	; 0x80000000
   147dc:	sdiv	r6, r6, r0
   147e0:	cmp	r6, r7
   147e4:	bge	14818 <__mempcpy_chk@plt+0x3804>
   147e8:	b	14828 <__mempcpy_chk@plt+0x3814>
   147ec:	beq	14818 <__mempcpy_chk@plt+0x3804>
   147f0:	mov	r6, #-2147483648	; 0x80000000
   147f4:	mvn	r4, #-2147483648	; 0x80000000
   147f8:	sdiv	r6, r6, r7
   147fc:	cmp	r6, r0
   14800:	bge	14818 <__mempcpy_chk@plt+0x3804>
   14804:	b	14828 <__mempcpy_chk@plt+0x3814>
   14808:	mvn	r4, #-2147483648	; 0x80000000
   1480c:	sdiv	r6, r4, r0
   14810:	cmp	r7, r6
   14814:	blt	14828 <__mempcpy_chk@plt+0x3814>
   14818:	mul	r6, r7, r0
   1481c:	mov	r4, #64	; 0x40
   14820:	cmp	r6, #63	; 0x3f
   14824:	bgt	14830 <__mempcpy_chk@plt+0x381c>
   14828:	sdiv	r7, r4, r0
   1482c:	mul	r6, r7, r0
   14830:	cmp	r5, #0
   14834:	moveq	r4, #0
   14838:	streq	r4, [r8]
   1483c:	sub	r4, r7, r1
   14840:	cmp	r4, r2
   14844:	bge	148f0 <__mempcpy_chk@plt+0x38dc>
   14848:	add	r7, r1, r2
   1484c:	mov	r6, #0
   14850:	mov	r2, #0
   14854:	cmp	r7, r3
   14858:	movwgt	r6, #1
   1485c:	cmn	r3, #1
   14860:	movwgt	r2, #1
   14864:	cmp	r7, r1
   14868:	bvs	14924 <__mempcpy_chk@plt+0x3910>
   1486c:	ands	r1, r2, r6
   14870:	bne	14924 <__mempcpy_chk@plt+0x3910>
   14874:	cmn	r0, #1
   14878:	ble	148a0 <__mempcpy_chk@plt+0x388c>
   1487c:	cmp	r0, #0
   14880:	beq	148ec <__mempcpy_chk@plt+0x38d8>
   14884:	cmn	r7, #1
   14888:	ble	148c4 <__mempcpy_chk@plt+0x38b0>
   1488c:	mvn	r1, #-2147483648	; 0x80000000
   14890:	udiv	r1, r1, r0
   14894:	cmp	r1, r7
   14898:	bge	148ec <__mempcpy_chk@plt+0x38d8>
   1489c:	b	14924 <__mempcpy_chk@plt+0x3910>
   148a0:	cmn	r7, #1
   148a4:	ble	148dc <__mempcpy_chk@plt+0x38c8>
   148a8:	cmn	r0, #1
   148ac:	beq	148ec <__mempcpy_chk@plt+0x38d8>
   148b0:	mov	r1, #-2147483648	; 0x80000000
   148b4:	sdiv	r1, r1, r0
   148b8:	cmp	r1, r7
   148bc:	bge	148ec <__mempcpy_chk@plt+0x38d8>
   148c0:	b	14924 <__mempcpy_chk@plt+0x3910>
   148c4:	beq	148ec <__mempcpy_chk@plt+0x38d8>
   148c8:	mov	r1, #-2147483648	; 0x80000000
   148cc:	sdiv	r1, r1, r7
   148d0:	cmp	r1, r0
   148d4:	bge	148ec <__mempcpy_chk@plt+0x38d8>
   148d8:	b	14924 <__mempcpy_chk@plt+0x3910>
   148dc:	mvn	r1, #-2147483648	; 0x80000000
   148e0:	sdiv	r1, r1, r0
   148e4:	cmp	r7, r1
   148e8:	blt	14924 <__mempcpy_chk@plt+0x3910>
   148ec:	mul	r6, r7, r0
   148f0:	mov	r0, r5
   148f4:	mov	r1, r6
   148f8:	bl	14b58 <__mempcpy_chk@plt+0x3b44>
   148fc:	cmp	r6, #0
   14900:	movwne	r6, #1
   14904:	cmp	r0, #0
   14908:	bne	1491c <__mempcpy_chk@plt+0x3908>
   1490c:	clz	r1, r5
   14910:	lsr	r1, r1, #5
   14914:	orrs	r1, r1, r6
   14918:	bne	14924 <__mempcpy_chk@plt+0x3910>
   1491c:	str	r7, [r8]
   14920:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14924:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14928:	push	{fp, lr}
   1492c:	mov	fp, sp
   14930:	mov	r1, #1
   14934:	bl	14ad4 <__mempcpy_chk@plt+0x3ac0>
   14938:	cmp	r0, #0
   1493c:	popne	{fp, pc}
   14940:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14944:	push	{fp, lr}
   14948:	mov	fp, sp
   1494c:	bl	14ad4 <__mempcpy_chk@plt+0x3ac0>
   14950:	cmp	r0, #0
   14954:	popne	{fp, pc}
   14958:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   1495c:	push	{fp, lr}
   14960:	mov	fp, sp
   14964:	mov	r1, #1
   14968:	bl	14ad4 <__mempcpy_chk@plt+0x3ac0>
   1496c:	cmp	r0, #0
   14970:	popne	{fp, pc}
   14974:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14978:	push	{fp, lr}
   1497c:	mov	fp, sp
   14980:	bl	14ad4 <__mempcpy_chk@plt+0x3ac0>
   14984:	cmp	r0, #0
   14988:	popne	{fp, pc}
   1498c:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14990:	push	{r4, r5, r6, sl, fp, lr}
   14994:	add	fp, sp, #16
   14998:	mov	r5, r0
   1499c:	mov	r0, r1
   149a0:	mov	r4, r1
   149a4:	bl	14b28 <__mempcpy_chk@plt+0x3b14>
   149a8:	cmp	r0, #0
   149ac:	beq	149c8 <__mempcpy_chk@plt+0x39b4>
   149b0:	mov	r1, r5
   149b4:	mov	r2, r4
   149b8:	mov	r6, r0
   149bc:	bl	10e04 <memcpy@plt>
   149c0:	mov	r0, r6
   149c4:	pop	{r4, r5, r6, sl, fp, pc}
   149c8:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   149cc:	push	{r4, r5, r6, sl, fp, lr}
   149d0:	add	fp, sp, #16
   149d4:	mov	r5, r0
   149d8:	mov	r0, r1
   149dc:	mov	r4, r1
   149e0:	bl	14b28 <__mempcpy_chk@plt+0x3b14>
   149e4:	cmp	r0, #0
   149e8:	beq	14a04 <__mempcpy_chk@plt+0x39f0>
   149ec:	mov	r1, r5
   149f0:	mov	r2, r4
   149f4:	mov	r6, r0
   149f8:	bl	10e04 <memcpy@plt>
   149fc:	mov	r0, r6
   14a00:	pop	{r4, r5, r6, sl, fp, pc}
   14a04:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14a08:	push	{r4, r5, r6, sl, fp, lr}
   14a0c:	add	fp, sp, #16
   14a10:	mov	r5, r0
   14a14:	add	r0, r1, #1
   14a18:	mov	r4, r1
   14a1c:	bl	14b28 <__mempcpy_chk@plt+0x3b14>
   14a20:	cmp	r0, #0
   14a24:	beq	14a4c <__mempcpy_chk@plt+0x3a38>
   14a28:	mov	r6, r0
   14a2c:	mov	r0, #0
   14a30:	mov	r1, r5
   14a34:	mov	r2, r4
   14a38:	strb	r0, [r6, r4]
   14a3c:	mov	r0, r6
   14a40:	bl	10e04 <memcpy@plt>
   14a44:	mov	r0, r6
   14a48:	pop	{r4, r5, r6, sl, fp, pc}
   14a4c:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14a50:	push	{r4, r5, r6, sl, fp, lr}
   14a54:	add	fp, sp, #16
   14a58:	mov	r4, r0
   14a5c:	bl	10f30 <strlen@plt>
   14a60:	add	r5, r0, #1
   14a64:	mov	r0, r5
   14a68:	bl	14b28 <__mempcpy_chk@plt+0x3b14>
   14a6c:	cmp	r0, #0
   14a70:	beq	14a8c <__mempcpy_chk@plt+0x3a78>
   14a74:	mov	r1, r4
   14a78:	mov	r2, r5
   14a7c:	mov	r6, r0
   14a80:	bl	10e04 <memcpy@plt>
   14a84:	mov	r0, r6
   14a88:	pop	{r4, r5, r6, sl, fp, pc}
   14a8c:	bl	14a90 <__mempcpy_chk@plt+0x3a7c>
   14a90:	push	{fp, lr}
   14a94:	mov	fp, sp
   14a98:	movw	r0, #24812	; 0x60ec
   14a9c:	movw	r1, #23240	; 0x5ac8
   14aa0:	mov	r2, #5
   14aa4:	movt	r0, #2
   14aa8:	movt	r1, #1
   14aac:	ldr	r4, [r0]
   14ab0:	mov	r0, #0
   14ab4:	bl	10e40 <dcgettext@plt>
   14ab8:	movw	r2, #22135	; 0x5677
   14abc:	mov	r3, r0
   14ac0:	mov	r0, r4
   14ac4:	mov	r1, #0
   14ac8:	movt	r2, #1
   14acc:	bl	10eb8 <error@plt>
   14ad0:	bl	10ffc <abort@plt>
   14ad4:	clz	r2, r1
   14ad8:	clz	r3, r0
   14adc:	lsr	r2, r2, #5
   14ae0:	lsr	r3, r3, #5
   14ae4:	orrs	r2, r3, r2
   14ae8:	movwne	r1, #1
   14aec:	movwne	r0, #1
   14af0:	cmp	r1, #0
   14af4:	beq	14b24 <__mempcpy_chk@plt+0x3b10>
   14af8:	mvn	r2, #-2147483648	; 0x80000000
   14afc:	udiv	r2, r2, r1
   14b00:	cmp	r2, r0
   14b04:	bcs	14b24 <__mempcpy_chk@plt+0x3b10>
   14b08:	push	{fp, lr}
   14b0c:	mov	fp, sp
   14b10:	bl	10f3c <__errno_location@plt>
   14b14:	mov	r1, #12
   14b18:	str	r1, [r0]
   14b1c:	mov	r0, #0
   14b20:	pop	{fp, pc}
   14b24:	b	10dbc <calloc@plt>
   14b28:	cmp	r0, #0
   14b2c:	movweq	r0, #1
   14b30:	cmn	r0, #1
   14b34:	ble	14b3c <__mempcpy_chk@plt+0x3b28>
   14b38:	b	10edc <malloc@plt>
   14b3c:	push	{fp, lr}
   14b40:	mov	fp, sp
   14b44:	bl	10f3c <__errno_location@plt>
   14b48:	mov	r1, #12
   14b4c:	str	r1, [r0]
   14b50:	mov	r0, #0
   14b54:	pop	{fp, pc}
   14b58:	push	{fp, lr}
   14b5c:	mov	fp, sp
   14b60:	cmp	r0, #0
   14b64:	beq	14b80 <__mempcpy_chk@plt+0x3b6c>
   14b68:	cmp	r1, #0
   14b6c:	beq	14b8c <__mempcpy_chk@plt+0x3b78>
   14b70:	cmn	r1, #1
   14b74:	ble	14b98 <__mempcpy_chk@plt+0x3b84>
   14b78:	pop	{fp, lr}
   14b7c:	b	10e58 <realloc@plt>
   14b80:	mov	r0, r1
   14b84:	pop	{fp, lr}
   14b88:	b	14b28 <__mempcpy_chk@plt+0x3b14>
   14b8c:	bl	11d3c <__mempcpy_chk@plt+0xd28>
   14b90:	mov	r0, #0
   14b94:	pop	{fp, pc}
   14b98:	bl	10f3c <__errno_location@plt>
   14b9c:	mov	r1, #12
   14ba0:	str	r1, [r0]
   14ba4:	mov	r0, #0
   14ba8:	pop	{fp, pc}
   14bac:	sub	r0, r0, #1
   14bb0:	ldrb	r3, [r0, #1]!
   14bb4:	cmp	r3, #47	; 0x2f
   14bb8:	beq	14bb0 <__mempcpy_chk@plt+0x3b9c>
   14bbc:	mov	r2, #0
   14bc0:	mov	r1, r0
   14bc4:	uxtb	r3, r3
   14bc8:	cmp	r3, #47	; 0x2f
   14bcc:	beq	14bf4 <__mempcpy_chk@plt+0x3be0>
   14bd0:	cmp	r3, #0
   14bd4:	bxeq	lr
   14bd8:	tst	r2, #1
   14bdc:	mov	r2, #0
   14be0:	movne	r0, r1
   14be4:	ldrb	r3, [r1, #1]!
   14be8:	uxtb	r3, r3
   14bec:	cmp	r3, #47	; 0x2f
   14bf0:	bne	14bd0 <__mempcpy_chk@plt+0x3bbc>
   14bf4:	ldrb	r3, [r1, #1]!
   14bf8:	mov	r2, #1
   14bfc:	uxtb	r3, r3
   14c00:	cmp	r3, #47	; 0x2f
   14c04:	bne	14bd0 <__mempcpy_chk@plt+0x3bbc>
   14c08:	b	14bf4 <__mempcpy_chk@plt+0x3be0>
   14c0c:	push	{r4, sl, fp, lr}
   14c10:	add	fp, sp, #8
   14c14:	mov	r4, r0
   14c18:	bl	10f30 <strlen@plt>
   14c1c:	mov	r1, r0
   14c20:	sub	r2, r4, #1
   14c24:	mov	r0, r1
   14c28:	cmp	r1, #2
   14c2c:	popcc	{r4, sl, fp, pc}
   14c30:	ldrb	r3, [r2, r0]
   14c34:	sub	r1, r0, #1
   14c38:	cmp	r3, #47	; 0x2f
   14c3c:	beq	14c24 <__mempcpy_chk@plt+0x3c10>
   14c40:	pop	{r4, sl, fp, pc}
   14c44:	push	{r4, r5, r6, sl, fp, lr}
   14c48:	add	fp, sp, #16
   14c4c:	mov	r4, r0
   14c50:	bl	10ea0 <__fpending@plt>
   14c54:	ldr	r6, [r4]
   14c58:	mov	r5, r0
   14c5c:	mov	r0, r4
   14c60:	bl	14cc8 <__mempcpy_chk@plt+0x3cb4>
   14c64:	tst	r6, #32
   14c68:	bne	14ca0 <__mempcpy_chk@plt+0x3c8c>
   14c6c:	cmp	r0, #0
   14c70:	mov	r4, r0
   14c74:	mvnne	r4, #0
   14c78:	cmp	r5, #0
   14c7c:	bne	14cac <__mempcpy_chk@plt+0x3c98>
   14c80:	cmp	r0, #0
   14c84:	beq	14cac <__mempcpy_chk@plt+0x3c98>
   14c88:	bl	10f3c <__errno_location@plt>
   14c8c:	ldr	r0, [r0]
   14c90:	subs	r4, r0, #9
   14c94:	mvnne	r4, #0
   14c98:	mov	r0, r4
   14c9c:	pop	{r4, r5, r6, sl, fp, pc}
   14ca0:	mvn	r4, #0
   14ca4:	cmp	r0, #0
   14ca8:	beq	14cb4 <__mempcpy_chk@plt+0x3ca0>
   14cac:	mov	r0, r4
   14cb0:	pop	{r4, r5, r6, sl, fp, pc}
   14cb4:	bl	10f3c <__errno_location@plt>
   14cb8:	mov	r1, #0
   14cbc:	str	r1, [r0]
   14cc0:	mov	r0, r4
   14cc4:	pop	{r4, r5, r6, sl, fp, pc}
   14cc8:	push	{r4, r5, r6, sl, fp, lr}
   14ccc:	add	fp, sp, #16
   14cd0:	sub	sp, sp, #8
   14cd4:	mov	r4, r0
   14cd8:	bl	10f6c <fileno@plt>
   14cdc:	cmn	r0, #1
   14ce0:	ble	14d54 <__mempcpy_chk@plt+0x3d40>
   14ce4:	mov	r0, r4
   14ce8:	bl	10ef4 <__freading@plt>
   14cec:	cmp	r0, #0
   14cf0:	beq	14d1c <__mempcpy_chk@plt+0x3d08>
   14cf4:	mov	r0, r4
   14cf8:	bl	10f6c <fileno@plt>
   14cfc:	mov	r1, #1
   14d00:	mov	r2, #0
   14d04:	mov	r3, #0
   14d08:	str	r1, [sp]
   14d0c:	bl	10e88 <lseek64@plt>
   14d10:	and	r0, r0, r1
   14d14:	cmn	r0, #1
   14d18:	beq	14d54 <__mempcpy_chk@plt+0x3d40>
   14d1c:	mov	r0, r4
   14d20:	bl	14d64 <__mempcpy_chk@plt+0x3d50>
   14d24:	cmp	r0, #0
   14d28:	beq	14d54 <__mempcpy_chk@plt+0x3d40>
   14d2c:	bl	10f3c <__errno_location@plt>
   14d30:	ldr	r6, [r0]
   14d34:	mov	r5, r0
   14d38:	mov	r0, r4
   14d3c:	bl	10f84 <fclose@plt>
   14d40:	cmp	r6, #0
   14d44:	strne	r6, [r5]
   14d48:	mvnne	r0, #0
   14d4c:	sub	sp, fp, #16
   14d50:	pop	{r4, r5, r6, sl, fp, pc}
   14d54:	mov	r0, r4
   14d58:	sub	sp, fp, #16
   14d5c:	pop	{r4, r5, r6, sl, fp, lr}
   14d60:	b	10f84 <fclose@plt>
   14d64:	push	{r4, sl, fp, lr}
   14d68:	add	fp, sp, #8
   14d6c:	sub	sp, sp, #8
   14d70:	mov	r4, r0
   14d74:	cmp	r0, #0
   14d78:	beq	14d94 <__mempcpy_chk@plt+0x3d80>
   14d7c:	mov	r0, r4
   14d80:	bl	10ef4 <__freading@plt>
   14d84:	cmp	r0, #0
   14d88:	ldrbne	r0, [r4, #1]
   14d8c:	tstne	r0, #1
   14d90:	bne	14da4 <__mempcpy_chk@plt+0x3d90>
   14d94:	mov	r0, r4
   14d98:	sub	sp, fp, #8
   14d9c:	pop	{r4, sl, fp, lr}
   14da0:	b	10de0 <fflush@plt>
   14da4:	mov	r0, #1
   14da8:	mov	r2, #0
   14dac:	mov	r3, #0
   14db0:	str	r0, [sp]
   14db4:	mov	r0, r4
   14db8:	bl	14dcc <__mempcpy_chk@plt+0x3db8>
   14dbc:	mov	r0, r4
   14dc0:	sub	sp, fp, #8
   14dc4:	pop	{r4, sl, fp, lr}
   14dc8:	b	10de0 <fflush@plt>
   14dcc:	push	{r4, r5, r6, r7, fp, lr}
   14dd0:	add	fp, sp, #16
   14dd4:	sub	sp, sp, #8
   14dd8:	mov	r4, r0
   14ddc:	ldr	r0, [r0, #4]
   14de0:	mov	r5, r3
   14de4:	mov	r6, r2
   14de8:	ldr	r1, [r4, #8]
   14dec:	cmp	r1, r0
   14df0:	bne	14e0c <__mempcpy_chk@plt+0x3df8>
   14df4:	ldrd	r0, [r4, #16]
   14df8:	cmp	r1, r0
   14dfc:	bne	14e0c <__mempcpy_chk@plt+0x3df8>
   14e00:	ldr	r0, [r4, #36]	; 0x24
   14e04:	cmp	r0, #0
   14e08:	beq	14e24 <__mempcpy_chk@plt+0x3e10>
   14e0c:	mov	r0, r4
   14e10:	mov	r2, r6
   14e14:	mov	r3, r5
   14e18:	sub	sp, fp, #16
   14e1c:	pop	{r4, r5, r6, r7, fp, lr}
   14e20:	b	10f90 <fseeko64@plt>
   14e24:	ldr	r7, [fp, #8]
   14e28:	mov	r0, r4
   14e2c:	bl	10f6c <fileno@plt>
   14e30:	mov	r2, r6
   14e34:	mov	r3, r5
   14e38:	str	r7, [sp]
   14e3c:	bl	10e88 <lseek64@plt>
   14e40:	and	r2, r0, r1
   14e44:	cmn	r2, #1
   14e48:	mvneq	r0, #0
   14e4c:	subeq	sp, fp, #16
   14e50:	popeq	{r4, r5, r6, r7, fp, pc}
   14e54:	strd	r0, [r4, #80]	; 0x50
   14e58:	ldr	r0, [r4]
   14e5c:	bic	r0, r0, #16
   14e60:	str	r0, [r4]
   14e64:	mov	r0, #0
   14e68:	sub	sp, fp, #16
   14e6c:	pop	{r4, r5, r6, r7, fp, pc}
   14e70:	push	{fp, lr}
   14e74:	mov	fp, sp
   14e78:	mov	r0, #14
   14e7c:	bl	10fc0 <nl_langinfo@plt>
   14e80:	movw	r1, #20815	; 0x514f
   14e84:	cmp	r0, #0
   14e88:	movt	r1, #1
   14e8c:	movne	r1, r0
   14e90:	movw	r0, #23257	; 0x5ad9
   14e94:	ldrb	r2, [r1]
   14e98:	movt	r0, #1
   14e9c:	cmp	r2, #0
   14ea0:	movne	r0, r1
   14ea4:	pop	{fp, pc}
   14ea8:	push	{r4, r5, r6, r7, fp, lr}
   14eac:	add	fp, sp, #16
   14eb0:	sub	sp, sp, #8
   14eb4:	add	r5, sp, #4
   14eb8:	cmp	r0, #0
   14ebc:	mov	r7, r2
   14ec0:	mov	r4, r1
   14ec4:	movne	r5, r0
   14ec8:	mov	r0, r5
   14ecc:	bl	10eac <mbrtowc@plt>
   14ed0:	mov	r6, r0
   14ed4:	cmp	r7, #0
   14ed8:	beq	14efc <__mempcpy_chk@plt+0x3ee8>
   14edc:	cmn	r6, #2
   14ee0:	bcc	14efc <__mempcpy_chk@plt+0x3ee8>
   14ee4:	mov	r0, #0
   14ee8:	bl	14f44 <__mempcpy_chk@plt+0x3f30>
   14eec:	cmp	r0, #0
   14ef0:	ldrbeq	r0, [r4]
   14ef4:	moveq	r6, #1
   14ef8:	streq	r0, [r5]
   14efc:	mov	r0, r6
   14f00:	sub	sp, fp, #16
   14f04:	pop	{r4, r5, r6, r7, fp, pc}
   14f08:	cmp	r2, #0
   14f0c:	beq	14f3c <__mempcpy_chk@plt+0x3f28>
   14f10:	mvn	r3, #0
   14f14:	udiv	r3, r3, r2
   14f18:	cmp	r3, r1
   14f1c:	bcs	14f3c <__mempcpy_chk@plt+0x3f28>
   14f20:	push	{fp, lr}
   14f24:	mov	fp, sp
   14f28:	bl	10f3c <__errno_location@plt>
   14f2c:	mov	r1, #12
   14f30:	str	r1, [r0]
   14f34:	mov	r0, #0
   14f38:	pop	{fp, pc}
   14f3c:	mul	r1, r2, r1
   14f40:	b	14b58 <__mempcpy_chk@plt+0x3b44>
   14f44:	push	{r4, sl, fp, lr}
   14f48:	add	fp, sp, #8
   14f4c:	sub	sp, sp, #264	; 0x108
   14f50:	add	r1, sp, #7
   14f54:	movw	r2, #257	; 0x101
   14f58:	bl	14fa8 <__mempcpy_chk@plt+0x3f94>
   14f5c:	mov	r4, #0
   14f60:	cmp	r0, #0
   14f64:	bne	14f9c <__mempcpy_chk@plt+0x3f88>
   14f68:	movw	r1, #23263	; 0x5adf
   14f6c:	add	r0, sp, #7
   14f70:	movt	r1, #1
   14f74:	bl	10dd4 <strcmp@plt>
   14f78:	cmp	r0, #0
   14f7c:	beq	14f9c <__mempcpy_chk@plt+0x3f88>
   14f80:	movw	r1, #23265	; 0x5ae1
   14f84:	add	r0, sp, #7
   14f88:	movt	r1, #1
   14f8c:	bl	10dd4 <strcmp@plt>
   14f90:	mov	r4, r0
   14f94:	cmp	r0, #0
   14f98:	movwne	r4, #1
   14f9c:	mov	r0, r4
   14fa0:	sub	sp, fp, #8
   14fa4:	pop	{r4, sl, fp, pc}
   14fa8:	push	{r4, r5, r6, r7, fp, lr}
   14fac:	add	fp, sp, #16
   14fb0:	mov	r4, r1
   14fb4:	mov	r1, #0
   14fb8:	mov	r6, r2
   14fbc:	bl	10fa8 <setlocale@plt>
   14fc0:	cmp	r0, #0
   14fc4:	beq	14ff4 <__mempcpy_chk@plt+0x3fe0>
   14fc8:	mov	r7, r0
   14fcc:	bl	10f30 <strlen@plt>
   14fd0:	cmp	r0, r6
   14fd4:	bcs	15014 <__mempcpy_chk@plt+0x4000>
   14fd8:	add	r2, r0, #1
   14fdc:	mov	r0, r4
   14fe0:	mov	r1, r7
   14fe4:	bl	10e04 <memcpy@plt>
   14fe8:	mov	r5, #0
   14fec:	mov	r0, r5
   14ff0:	pop	{r4, r5, r6, r7, fp, pc}
   14ff4:	cmp	r6, #0
   14ff8:	mov	r5, #22
   14ffc:	movne	r0, #0
   15000:	strbne	r0, [r4]
   15004:	movne	r0, r5
   15008:	popne	{r4, r5, r6, r7, fp, pc}
   1500c:	mov	r0, r5
   15010:	pop	{r4, r5, r6, r7, fp, pc}
   15014:	mov	r5, #34	; 0x22
   15018:	cmp	r6, #0
   1501c:	beq	1503c <__mempcpy_chk@plt+0x4028>
   15020:	sub	r6, r6, #1
   15024:	mov	r0, r4
   15028:	mov	r1, r7
   1502c:	mov	r2, r6
   15030:	bl	10e04 <memcpy@plt>
   15034:	mov	r0, #0
   15038:	strb	r0, [r4, r6]
   1503c:	mov	r0, r5
   15040:	pop	{r4, r5, r6, r7, fp, pc}
   15044:	mov	r1, #0
   15048:	b	10fa8 <setlocale@plt>
   1504c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15050:	mov	r7, r0
   15054:	ldr	r6, [pc, #72]	; 150a4 <__mempcpy_chk@plt+0x4090>
   15058:	ldr	r5, [pc, #72]	; 150a8 <__mempcpy_chk@plt+0x4094>
   1505c:	add	r6, pc, r6
   15060:	add	r5, pc, r5
   15064:	sub	r6, r6, r5
   15068:	mov	r8, r1
   1506c:	mov	r9, r2
   15070:	bl	10d9c <calloc@plt-0x20>
   15074:	asrs	r6, r6, #2
   15078:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1507c:	mov	r4, #0
   15080:	add	r4, r4, #1
   15084:	ldr	r3, [r5], #4
   15088:	mov	r2, r9
   1508c:	mov	r1, r8
   15090:	mov	r0, r7
   15094:	blx	r3
   15098:	cmp	r6, r4
   1509c:	bne	15080 <__mempcpy_chk@plt+0x406c>
   150a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   150a4:	andeq	r0, r1, r8, lsr #29
   150a8:	andeq	r0, r1, r0, lsr #29
   150ac:	bx	lr
   150b0:	ldr	r3, [pc, #12]	; 150c4 <__mempcpy_chk@plt+0x40b0>
   150b4:	mov	r1, #0
   150b8:	add	r3, pc, r3
   150bc:	ldr	r2, [r3]
   150c0:	b	10f48 <__cxa_atexit@plt>
   150c4:	andeq	r1, r1, r4, lsr #32

Disassembly of section .fini:

000150c8 <.fini>:
   150c8:	push	{r3, lr}
   150cc:	pop	{r3, pc}
