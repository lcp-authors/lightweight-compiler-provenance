
../repos/coreutils/src/realpath:     file format elf32-littlearm


Disassembly of section .init:

00010d98 <.init>:
   10d98:	push	{r3, lr}
   10d9c:	bl	1105c <__mempcpy_chk@plt+0x4c>
   10da0:	pop	{r3, pc}

Disassembly of section .plt:

00010da4 <calloc@plt-0x14>:
   10da4:	push	{lr}		; (str lr, [sp, #-4]!)
   10da8:	ldr	lr, [pc, #4]	; 10db4 <calloc@plt-0x4>
   10dac:	add	lr, pc, lr
   10db0:	ldr	pc, [lr, #8]!
   10db4:	andeq	r7, r1, ip, asr #4

00010db8 <calloc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #94208	; 0x17000
   10dc0:	ldr	pc, [ip, #588]!	; 0x24c

00010dc4 <fputs_unlocked@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #580]!	; 0x244

00010dd0 <raise@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #572]!	; 0x23c

00010ddc <strcmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #564]!	; 0x234

00010de8 <fflush@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #556]!	; 0x22c

00010df4 <memmove@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #94208	; 0x17000
   10dfc:	ldr	pc, [ip, #548]!	; 0x224

00010e00 <free@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #94208	; 0x17000
   10e08:	ldr	pc, [ip, #540]!	; 0x21c

00010e0c <faccessat@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #94208	; 0x17000
   10e14:	ldr	pc, [ip, #532]!	; 0x214

00010e18 <_exit@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #94208	; 0x17000
   10e20:	ldr	pc, [ip, #524]!	; 0x20c

00010e24 <memcpy@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #94208	; 0x17000
   10e2c:	ldr	pc, [ip, #516]!	; 0x204

00010e30 <mbsinit@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #94208	; 0x17000
   10e38:	ldr	pc, [ip, #508]!	; 0x1fc

00010e3c <memcmp@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #94208	; 0x17000
   10e44:	ldr	pc, [ip, #500]!	; 0x1f4

00010e48 <dcgettext@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #94208	; 0x17000
   10e50:	ldr	pc, [ip, #492]!	; 0x1ec

00010e54 <realloc@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #94208	; 0x17000
   10e5c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e60 <textdomain@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #94208	; 0x17000
   10e68:	ldr	pc, [ip, #476]!	; 0x1dc

00010e6c <rawmemchr@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #94208	; 0x17000
   10e74:	ldr	pc, [ip, #468]!	; 0x1d4

00010e78 <iswprint@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #94208	; 0x17000
   10e80:	ldr	pc, [ip, #460]!	; 0x1cc

00010e84 <readlink@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #94208	; 0x17000
   10e8c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e90 <fwrite@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #94208	; 0x17000
   10e98:	ldr	pc, [ip, #444]!	; 0x1bc

00010e9c <lseek64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #94208	; 0x17000
   10ea4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea8 <__ctype_get_mb_cur_max@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #94208	; 0x17000
   10eb0:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb4 <__fpending@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #94208	; 0x17000
   10ebc:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec0 <mbrtowc@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #94208	; 0x17000
   10ec8:	ldr	pc, [ip, #412]!	; 0x19c

00010ecc <error@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #94208	; 0x17000
   10ed4:	ldr	pc, [ip, #404]!	; 0x194

00010ed8 <malloc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #94208	; 0x17000
   10ee0:	ldr	pc, [ip, #396]!	; 0x18c

00010ee4 <__libc_start_main@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #94208	; 0x17000
   10eec:	ldr	pc, [ip, #388]!	; 0x184

00010ef0 <__freading@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #94208	; 0x17000
   10ef8:	ldr	pc, [ip, #380]!	; 0x17c

00010efc <__gmon_start__@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #94208	; 0x17000
   10f04:	ldr	pc, [ip, #372]!	; 0x174

00010f08 <getopt_long@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #94208	; 0x17000
   10f10:	ldr	pc, [ip, #364]!	; 0x16c

00010f14 <__ctype_b_loc@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #94208	; 0x17000
   10f1c:	ldr	pc, [ip, #356]!	; 0x164

00010f20 <getcwd@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #94208	; 0x17000
   10f28:	ldr	pc, [ip, #348]!	; 0x15c

00010f2c <exit@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #94208	; 0x17000
   10f34:	ldr	pc, [ip, #340]!	; 0x154

00010f38 <strlen@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #94208	; 0x17000
   10f40:	ldr	pc, [ip, #332]!	; 0x14c

00010f44 <__errno_location@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #94208	; 0x17000
   10f4c:	ldr	pc, [ip, #324]!	; 0x144

00010f50 <__cxa_atexit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #94208	; 0x17000
   10f58:	ldr	pc, [ip, #316]!	; 0x13c

00010f5c <memset@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #94208	; 0x17000
   10f64:	ldr	pc, [ip, #308]!	; 0x134

00010f68 <__printf_chk@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #94208	; 0x17000
   10f70:	ldr	pc, [ip, #300]!	; 0x12c

00010f74 <fileno@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #94208	; 0x17000
   10f7c:	ldr	pc, [ip, #292]!	; 0x124

00010f80 <__fprintf_chk@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #94208	; 0x17000
   10f88:	ldr	pc, [ip, #284]!	; 0x11c

00010f8c <fclose@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #94208	; 0x17000
   10f94:	ldr	pc, [ip, #276]!	; 0x114

00010f98 <fseeko64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #94208	; 0x17000
   10fa0:	ldr	pc, [ip, #268]!	; 0x10c

00010fa4 <__overflow@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #94208	; 0x17000
   10fac:	ldr	pc, [ip, #260]!	; 0x104

00010fb0 <setlocale@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #94208	; 0x17000
   10fb8:	ldr	pc, [ip, #252]!	; 0xfc

00010fbc <strrchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #94208	; 0x17000
   10fc4:	ldr	pc, [ip, #244]!	; 0xf4

00010fc8 <nl_langinfo@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #94208	; 0x17000
   10fd0:	ldr	pc, [ip, #236]!	; 0xec

00010fd4 <bindtextdomain@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #94208	; 0x17000
   10fdc:	ldr	pc, [ip, #228]!	; 0xe4

00010fe0 <__xstat64@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #94208	; 0x17000
   10fe8:	ldr	pc, [ip, #220]!	; 0xdc

00010fec <strncmp@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #94208	; 0x17000
   10ff4:	ldr	pc, [ip, #212]!	; 0xd4

00010ff8 <abort@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #94208	; 0x17000
   11000:	ldr	pc, [ip, #204]!	; 0xcc

00011004 <strspn@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #94208	; 0x17000
   1100c:	ldr	pc, [ip, #196]!	; 0xc4

00011010 <__mempcpy_chk@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #94208	; 0x17000
   11018:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011020 <.text>:
   11020:	mov	fp, #0
   11024:	mov	lr, #0
   11028:	pop	{r1}		; (ldr r1, [sp], #4)
   1102c:	mov	r2, sp
   11030:	push	{r2}		; (str r2, [sp, #-4]!)
   11034:	push	{r0}		; (str r0, [sp, #-4]!)
   11038:	ldr	ip, [pc, #16]	; 11050 <__mempcpy_chk@plt+0x40>
   1103c:	push	{ip}		; (str ip, [sp, #-4]!)
   11040:	ldr	r0, [pc, #12]	; 11054 <__mempcpy_chk@plt+0x44>
   11044:	ldr	r3, [pc, #12]	; 11058 <__mempcpy_chk@plt+0x48>
   11048:	bl	10ee4 <__libc_start_main@plt>
   1104c:	bl	10ff8 <abort@plt>
   11050:	strdeq	r7, [r1], -r8
   11054:	andeq	r1, r1, r0, ror r3
   11058:	muleq	r1, r8, r1
   1105c:	ldr	r3, [pc, #20]	; 11078 <__mempcpy_chk@plt+0x68>
   11060:	ldr	r2, [pc, #20]	; 1107c <__mempcpy_chk@plt+0x6c>
   11064:	add	r3, pc, r3
   11068:	ldr	r2, [r3, r2]
   1106c:	cmp	r2, #0
   11070:	bxeq	lr
   11074:	b	10efc <__gmon_start__@plt>
   11078:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1107c:	ldrdeq	r0, [r0], -r8
   11080:	ldr	r0, [pc, #24]	; 110a0 <__mempcpy_chk@plt+0x90>
   11084:	ldr	r3, [pc, #24]	; 110a4 <__mempcpy_chk@plt+0x94>
   11088:	cmp	r3, r0
   1108c:	bxeq	lr
   11090:	ldr	r3, [pc, #16]	; 110a8 <__mempcpy_chk@plt+0x98>
   11094:	cmp	r3, #0
   11098:	bxeq	lr
   1109c:	bx	r3
   110a0:	andeq	r8, r2, r0, lsr r1
   110a4:	andeq	r8, r2, r0, lsr r1
   110a8:	andeq	r0, r0, r0
   110ac:	ldr	r0, [pc, #36]	; 110d8 <__mempcpy_chk@plt+0xc8>
   110b0:	ldr	r1, [pc, #36]	; 110dc <__mempcpy_chk@plt+0xcc>
   110b4:	sub	r1, r1, r0
   110b8:	asr	r1, r1, #2
   110bc:	add	r1, r1, r1, lsr #31
   110c0:	asrs	r1, r1, #1
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <__mempcpy_chk@plt+0xd0>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	r8, r2, r0, lsr r1
   110dc:	andeq	r8, r2, r0, lsr r1
   110e0:	andeq	r0, r0, r0
   110e4:	push	{r4, lr}
   110e8:	ldr	r4, [pc, #24]	; 11108 <__mempcpy_chk@plt+0xf8>
   110ec:	ldrb	r3, [r4]
   110f0:	cmp	r3, #0
   110f4:	popne	{r4, pc}
   110f8:	bl	11080 <__mempcpy_chk@plt+0x70>
   110fc:	mov	r3, #1
   11100:	strb	r3, [r4]
   11104:	pop	{r4, pc}
   11108:	andeq	r8, r2, ip, asr #2
   1110c:	b	110ac <__mempcpy_chk@plt+0x9c>
   11110:	push	{fp, lr}
   11114:	mov	fp, sp
   11118:	sub	sp, sp, #56	; 0x38
   1111c:	mov	r4, r0
   11120:	cmp	r0, #0
   11124:	bne	1132c <__mempcpy_chk@plt+0x31c>
   11128:	movw	r1, #29259	; 0x724b
   1112c:	mov	r0, #0
   11130:	mov	r2, #5
   11134:	movt	r1, #1
   11138:	bl	10e48 <dcgettext@plt>
   1113c:	mov	r1, r0
   11140:	movw	r0, #33124	; 0x8164
   11144:	movt	r0, #2
   11148:	ldr	r2, [r0]
   1114c:	mov	r0, #1
   11150:	bl	10f68 <__printf_chk@plt>
   11154:	movw	r1, #29290	; 0x726a
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	movt	r1, #1
   11164:	bl	10e48 <dcgettext@plt>
   11168:	movw	r7, #33092	; 0x8144
   1116c:	movt	r7, #2
   11170:	ldr	r1, [r7]
   11174:	bl	10dc4 <fputs_unlocked@plt>
   11178:	movw	r1, #29369	; 0x72b9
   1117c:	mov	r0, #0
   11180:	mov	r2, #5
   11184:	movt	r1, #1
   11188:	bl	10e48 <dcgettext@plt>
   1118c:	ldr	r1, [r7]
   11190:	bl	10dc4 <fputs_unlocked@plt>
   11194:	movw	r1, #29995	; 0x752b
   11198:	mov	r0, #0
   1119c:	mov	r2, #5
   111a0:	movt	r1, #1
   111a4:	bl	10e48 <dcgettext@plt>
   111a8:	ldr	r1, [r7]
   111ac:	bl	10dc4 <fputs_unlocked@plt>
   111b0:	movw	r1, #30040	; 0x7558
   111b4:	mov	r0, #0
   111b8:	mov	r2, #5
   111bc:	movt	r1, #1
   111c0:	bl	10e48 <dcgettext@plt>
   111c4:	ldr	r1, [r7]
   111c8:	bl	10dc4 <fputs_unlocked@plt>
   111cc:	movw	r0, #30848	; 0x7880
   111d0:	mov	r2, #48	; 0x30
   111d4:	mov	r6, sp
   111d8:	movw	r5, #30094	; 0x758e
   111dc:	movt	r0, #1
   111e0:	movt	r5, #1
   111e4:	add	r1, r0, #32
   111e8:	add	r3, r0, #16
   111ec:	vld1.64	{d18-d19}, [r0], r2
   111f0:	vld1.64	{d16-d17}, [r1]
   111f4:	vld1.64	{d20-d21}, [r3]
   111f8:	add	r1, r6, #32
   111fc:	vldr	d22, [r0]
   11200:	add	r0, r6, #16
   11204:	vst1.64	{d16-d17}, [r1]
   11208:	movw	r1, #30179	; 0x75e3
   1120c:	vst1.64	{d20-d21}, [r0]
   11210:	mov	r0, r6
   11214:	vst1.64	{d18-d19}, [r0], r2
   11218:	movt	r1, #1
   1121c:	vstr	d22, [r0]
   11220:	mov	r0, r5
   11224:	bl	10ddc <strcmp@plt>
   11228:	cmp	r0, #0
   1122c:	ldrne	r1, [r6, #8]!
   11230:	cmpne	r1, #0
   11234:	bne	11220 <__mempcpy_chk@plt+0x210>
   11238:	ldr	r6, [r6, #4]
   1123c:	movw	r1, #30274	; 0x7642
   11240:	mov	r0, #0
   11244:	mov	r2, #5
   11248:	movt	r1, #1
   1124c:	bl	10e48 <dcgettext@plt>
   11250:	movw	r2, #30135	; 0x75b7
   11254:	movw	r3, #30297	; 0x7659
   11258:	mov	r1, r0
   1125c:	mov	r0, #1
   11260:	movt	r2, #1
   11264:	movt	r3, #1
   11268:	bl	10f68 <__printf_chk@plt>
   1126c:	cmp	r6, #0
   11270:	mov	r0, #5
   11274:	mov	r1, #0
   11278:	moveq	r6, r5
   1127c:	bl	10fb0 <setlocale@plt>
   11280:	cmp	r0, #0
   11284:	beq	112bc <__mempcpy_chk@plt+0x2ac>
   11288:	movw	r1, #30337	; 0x7681
   1128c:	mov	r2, #3
   11290:	movt	r1, #1
   11294:	bl	10fec <strncmp@plt>
   11298:	cmp	r0, #0
   1129c:	beq	112bc <__mempcpy_chk@plt+0x2ac>
   112a0:	movw	r1, #30341	; 0x7685
   112a4:	mov	r0, #0
   112a8:	mov	r2, #5
   112ac:	movt	r1, #1
   112b0:	bl	10e48 <dcgettext@plt>
   112b4:	ldr	r1, [r7]
   112b8:	bl	10dc4 <fputs_unlocked@plt>
   112bc:	movw	r1, #30412	; 0x76cc
   112c0:	mov	r0, #0
   112c4:	mov	r2, #5
   112c8:	movt	r1, #1
   112cc:	bl	10e48 <dcgettext@plt>
   112d0:	movw	r2, #30297	; 0x7659
   112d4:	mov	r1, r0
   112d8:	mov	r0, #1
   112dc:	mov	r3, r5
   112e0:	movt	r2, #1
   112e4:	bl	10f68 <__printf_chk@plt>
   112e8:	movw	r1, #30439	; 0x76e7
   112ec:	mov	r0, #0
   112f0:	mov	r2, #5
   112f4:	movt	r1, #1
   112f8:	bl	10e48 <dcgettext@plt>
   112fc:	movw	r3, #29368	; 0x72b8
   11300:	mov	r1, r0
   11304:	movw	r0, #30207	; 0x75ff
   11308:	cmp	r6, r5
   1130c:	mov	r2, r6
   11310:	movt	r0, #1
   11314:	movt	r3, #1
   11318:	moveq	r3, r0
   1131c:	mov	r0, #1
   11320:	bl	10f68 <__printf_chk@plt>
   11324:	mov	r0, r4
   11328:	bl	10f2c <exit@plt>
   1132c:	movw	r0, #33088	; 0x8140
   11330:	movw	r1, #29220	; 0x7224
   11334:	mov	r2, #5
   11338:	movt	r0, #2
   1133c:	movt	r1, #1
   11340:	ldr	r5, [r0]
   11344:	mov	r0, #0
   11348:	bl	10e48 <dcgettext@plt>
   1134c:	mov	r2, r0
   11350:	movw	r0, #33124	; 0x8164
   11354:	mov	r1, #1
   11358:	movt	r0, #2
   1135c:	ldr	r3, [r0]
   11360:	mov	r0, r5
   11364:	bl	10f80 <__fprintf_chk@plt>
   11368:	mov	r0, r4
   1136c:	bl	10f2c <exit@plt>
   11370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11374:	add	fp, sp, #28
   11378:	sub	sp, sp, #132	; 0x84
   1137c:	mov	sl, r0
   11380:	ldr	r0, [r1]
   11384:	mov	r5, r1
   11388:	bl	13d7c <__mempcpy_chk@plt+0x2d6c>
   1138c:	movw	r1, #29368	; 0x72b8
   11390:	mov	r0, #6
   11394:	movt	r1, #1
   11398:	bl	10fb0 <setlocale@plt>
   1139c:	movw	r4, #30139	; 0x75bb
   113a0:	movw	r1, #30103	; 0x7597
   113a4:	movt	r4, #1
   113a8:	movt	r1, #1
   113ac:	mov	r0, r4
   113b0:	bl	10fd4 <bindtextdomain@plt>
   113b4:	mov	r0, r4
   113b8:	bl	10e60 <textdomain@plt>
   113bc:	movw	r0, #10012	; 0x271c
   113c0:	movt	r0, #1
   113c4:	bl	171fc <__mempcpy_chk@plt+0x61ec>
   113c8:	mov	r1, r5
   113cc:	movw	r5, #30127	; 0x75af
   113d0:	movw	r4, #30640	; 0x77b0
   113d4:	movw	r9, #33104	; 0x8150
   113d8:	mov	r0, #1
   113dc:	mov	r7, #0
   113e0:	mov	r6, #0
   113e4:	mov	r8, #0
   113e8:	str	sl, [sp, #16]
   113ec:	movt	r5, #1
   113f0:	movt	r4, #1
   113f4:	movt	r9, #2
   113f8:	str	r0, [sp, #20]
   113fc:	str	r1, [sp, #12]
   11400:	b	1140c <__mempcpy_chk@plt+0x3fc>
   11404:	ldr	r1, [sp, #12]
   11408:	ldr	sl, [sp, #16]
   1140c:	mov	r0, sl
   11410:	mov	r2, r5
   11414:	mov	r3, r4
   11418:	str	r7, [sp]
   1141c:	bl	10f08 <getopt_long@plt>
   11420:	cmp	r0, #75	; 0x4b
   11424:	ble	11590 <__mempcpy_chk@plt+0x580>
   11428:	sub	r1, r0, #76	; 0x4c
   1142c:	cmp	r1, #46	; 0x2e
   11430:	bhi	11504 <__mempcpy_chk@plt+0x4f4>
   11434:	add	r0, pc, #0
   11438:	ldr	pc, [r0, r1, lsl #2]
   1143c:	strdeq	r1, [r1], -r8
   11440:	strdeq	r1, [r1], -r0
   11444:	strdeq	r1, [r1], -r0
   11448:	strdeq	r1, [r1], -r0
   1144c:	andeq	r1, r1, r8, lsr r5
   11450:	strdeq	r1, [r1], -r0
   11454:	strdeq	r1, [r1], -r0
   11458:	strdeq	r1, [r1], -r0
   1145c:	strdeq	r1, [r1], -r0
   11460:	strdeq	r1, [r1], -r0
   11464:	strdeq	r1, [r1], -r0
   11468:	strdeq	r1, [r1], -r0
   1146c:	strdeq	r1, [r1], -r0
   11470:	strdeq	r1, [r1], -r0
   11474:	strdeq	r1, [r1], -r0
   11478:	strdeq	r1, [r1], -r0
   1147c:	strdeq	r1, [r1], -r0
   11480:	strdeq	r1, [r1], -r0
   11484:	strdeq	r1, [r1], -r0
   11488:	strdeq	r1, [r1], -r0
   1148c:	strdeq	r1, [r1], -r0
   11490:	strdeq	r1, [r1], -r0
   11494:	strdeq	r1, [r1], -r0
   11498:	strdeq	r1, [r1], -r0
   1149c:	strdeq	r1, [r1], -r0
   114a0:	andeq	r1, r1, ip, lsr #10
   114a4:	strdeq	r1, [r1], -r0
   114a8:	strdeq	r1, [r1], -r0
   114ac:	strdeq	r1, [r1], -r0
   114b0:	strdeq	r1, [r1], -r0
   114b4:	strdeq	r1, [r1], -r0
   114b8:	strdeq	r1, [r1], -r0
   114bc:	strdeq	r1, [r1], -r0
   114c0:	andeq	r1, r1, ip, lsl r5
   114c4:	strdeq	r1, [r1], -r0
   114c8:	strdeq	r1, [r1], -r0
   114cc:	strdeq	r1, [r1], -r0
   114d0:	andeq	r1, r1, ip, asr r5
   114d4:	strdeq	r1, [r1], -r0
   114d8:	andeq	r1, r1, r8, asr #10
   114dc:	strdeq	r1, [r1], -r0
   114e0:	strdeq	r1, [r1], -r0
   114e4:	strdeq	r1, [r1], -r0
   114e8:	strdeq	r1, [r1], -r0
   114ec:	strdeq	r1, [r1], -r0
   114f0:	strdeq	r1, [r1], -r0
   114f4:	andeq	r1, r1, r8, ror #10
   114f8:	mov	r0, #1
   114fc:	strb	r0, [r9]
   11500:	b	1154c <__mempcpy_chk@plt+0x53c>
   11504:	cmp	r0, #256	; 0x100
   11508:	bne	11574 <__mempcpy_chk@plt+0x564>
   1150c:	movw	r0, #33096	; 0x8148
   11510:	movt	r0, #2
   11514:	ldr	r6, [r0]
   11518:	b	11404 <__mempcpy_chk@plt+0x3f4>
   1151c:	ldr	r0, [sp, #20]
   11520:	mov	r1, #2
   11524:	bfi	r0, r1, #0, #2
   11528:	b	11554 <__mempcpy_chk@plt+0x544>
   1152c:	ldr	r0, [sp, #20]
   11530:	bic	r0, r0, #3
   11534:	b	11554 <__mempcpy_chk@plt+0x544>
   11538:	ldr	r0, [sp, #20]
   1153c:	strb	r7, [r9]
   11540:	bic	r0, r0, #4
   11544:	b	11554 <__mempcpy_chk@plt+0x544>
   11548:	strb	r7, [r9]
   1154c:	ldr	r0, [sp, #20]
   11550:	orr	r0, r0, #4
   11554:	str	r0, [sp, #20]
   11558:	b	11404 <__mempcpy_chk@plt+0x3f4>
   1155c:	mov	r0, #1
   11560:	strb	r0, [r9, #1]
   11564:	b	11404 <__mempcpy_chk@plt+0x3f4>
   11568:	mov	r0, #1
   1156c:	strb	r0, [r9, #2]
   11570:	b	11404 <__mempcpy_chk@plt+0x3f4>
   11574:	movw	r1, #257	; 0x101
   11578:	cmp	r0, r1
   1157c:	bne	11af0 <__mempcpy_chk@plt+0xae0>
   11580:	movw	r0, #33096	; 0x8148
   11584:	movt	r0, #2
   11588:	ldr	r8, [r0]
   1158c:	b	11404 <__mempcpy_chk@plt+0x3f4>
   11590:	cmn	r0, #1
   11594:	bne	11a64 <__mempcpy_chk@plt+0xa54>
   11598:	movw	r0, #33080	; 0x8138
   1159c:	ldr	sl, [sp, #16]
   115a0:	movt	r0, #2
   115a4:	ldr	r0, [r0]
   115a8:	cmp	r0, sl
   115ac:	bge	11ac4 <__mempcpy_chk@plt+0xab4>
   115b0:	ldr	r0, [sp, #20]
   115b4:	cmp	r8, #0
   115b8:	mov	r4, r8
   115bc:	moveq	r4, r6
   115c0:	cmp	r6, #0
   115c4:	movne	r4, r6
   115c8:	cmp	r4, #0
   115cc:	and	r6, r0, #3
   115d0:	beq	11690 <__mempcpy_chk@plt+0x680>
   115d4:	ldr	r1, [sp, #20]
   115d8:	mov	r0, r4
   115dc:	bl	11f30 <__mempcpy_chk@plt+0xf20>
   115e0:	mov	r5, r0
   115e4:	ldrb	r0, [r9]
   115e8:	cmp	r0, #1
   115ec:	bne	11650 <__mempcpy_chk@plt+0x640>
   115f0:	cmp	r5, #0
   115f4:	beq	11650 <__mempcpy_chk@plt+0x640>
   115f8:	ldr	r0, [sp, #20]
   115fc:	bic	r1, r0, #4
   11600:	mov	r0, r5
   11604:	bl	11f30 <__mempcpy_chk@plt+0xf20>
   11608:	mov	r7, r0
   1160c:	mov	r0, r5
   11610:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   11614:	cmp	r7, #0
   11618:	str	r7, [r9, #4]
   1161c:	bne	11660 <__mempcpy_chk@plt+0x650>
   11620:	bl	10f44 <__errno_location@plt>
   11624:	ldr	r5, [r0]
   11628:	mov	r0, #0
   1162c:	mov	r1, #3
   11630:	mov	r2, r4
   11634:	bl	15a4c <__mempcpy_chk@plt+0x4a3c>
   11638:	movw	r2, #30964	; 0x78f4
   1163c:	mov	r3, r0
   11640:	mov	r0, #1
   11644:	mov	r1, r5
   11648:	movt	r2, #1
   1164c:	bl	10ecc <error@plt>
   11650:	mov	r7, r5
   11654:	cmp	r7, #0
   11658:	str	r7, [r9, #4]
   1165c:	beq	11620 <__mempcpy_chk@plt+0x610>
   11660:	cmp	r6, #0
   11664:	bne	11690 <__mempcpy_chk@plt+0x680>
   11668:	add	r2, sp, #24
   1166c:	mov	r0, #3
   11670:	mov	r1, r7
   11674:	bl	10fe0 <__xstat64@plt>
   11678:	cmp	r0, #0
   1167c:	bne	11af8 <__mempcpy_chk@plt+0xae8>
   11680:	ldr	r0, [sp, #40]	; 0x28
   11684:	and	r0, r0, #61440	; 0xf000
   11688:	cmp	r0, #16384	; 0x4000
   1168c:	bne	11b38 <__mempcpy_chk@plt+0xb28>
   11690:	cmp	r8, r4
   11694:	beq	11718 <__mempcpy_chk@plt+0x708>
   11698:	cmp	r8, #0
   1169c:	beq	11860 <__mempcpy_chk@plt+0x850>
   116a0:	ldr	r1, [sp, #20]
   116a4:	mov	r0, r8
   116a8:	bl	11f30 <__mempcpy_chk@plt+0xf20>
   116ac:	mov	r5, r0
   116b0:	ldrb	r0, [r9]
   116b4:	cmp	r0, #1
   116b8:	bne	11720 <__mempcpy_chk@plt+0x710>
   116bc:	cmp	r5, #0
   116c0:	beq	11720 <__mempcpy_chk@plt+0x710>
   116c4:	ldr	r0, [sp, #20]
   116c8:	bic	r1, r0, #4
   116cc:	mov	r0, r5
   116d0:	bl	11f30 <__mempcpy_chk@plt+0xf20>
   116d4:	mov	r4, r0
   116d8:	mov	r0, r5
   116dc:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   116e0:	cmp	r4, #0
   116e4:	bne	1172c <__mempcpy_chk@plt+0x71c>
   116e8:	bl	10f44 <__errno_location@plt>
   116ec:	ldr	r4, [r0]
   116f0:	mov	r0, #0
   116f4:	mov	r1, #3
   116f8:	mov	r2, r8
   116fc:	bl	15a4c <__mempcpy_chk@plt+0x4a3c>
   11700:	movw	r2, #30964	; 0x78f4
   11704:	mov	r3, r0
   11708:	mov	r0, #1
   1170c:	mov	r1, r4
   11710:	movt	r2, #1
   11714:	bl	10ecc <error@plt>
   11718:	ldr	r0, [r9, #4]
   1171c:	b	1185c <__mempcpy_chk@plt+0x84c>
   11720:	mov	r4, r5
   11724:	cmp	r4, #0
   11728:	beq	116e8 <__mempcpy_chk@plt+0x6d8>
   1172c:	cmp	r6, #0
   11730:	beq	11754 <__mempcpy_chk@plt+0x744>
   11734:	ldrb	r0, [r4, #1]
   11738:	ldr	r3, [r9, #4]
   1173c:	cmp	r0, #47	; 0x2f
   11740:	beq	117b8 <__mempcpy_chk@plt+0x7a8>
   11744:	cmp	r0, #0
   11748:	beq	117a8 <__mempcpy_chk@plt+0x798>
   1174c:	ldrb	r1, [r3, #1]
   11750:	b	117c8 <__mempcpy_chk@plt+0x7b8>
   11754:	add	r2, sp, #24
   11758:	mov	r0, #3
   1175c:	mov	r1, r4
   11760:	bl	10fe0 <__xstat64@plt>
   11764:	cmp	r0, #0
   11768:	bne	11b48 <__mempcpy_chk@plt+0xb38>
   1176c:	ldr	r0, [sp, #40]	; 0x28
   11770:	and	r0, r0, #61440	; 0xf000
   11774:	cmp	r0, #16384	; 0x4000
   11778:	bne	11b88 <__mempcpy_chk@plt+0xb78>
   1177c:	ldrb	r0, [r4, #1]
   11780:	ldr	r3, [r9, #4]
   11784:	cmp	r0, #0
   11788:	beq	117a8 <__mempcpy_chk@plt+0x798>
   1178c:	cmp	r0, #47	; 0x2f
   11790:	bne	117fc <__mempcpy_chk@plt+0x7ec>
   11794:	ldrb	r2, [r4, #2]
   11798:	ldrb	r1, [r3, #1]
   1179c:	cmp	r2, #0
   117a0:	bne	11800 <__mempcpy_chk@plt+0x7f0>
   117a4:	b	11838 <__mempcpy_chk@plt+0x828>
   117a8:	ldrb	r0, [r3, #1]
   117ac:	cmp	r0, #47	; 0x2f
   117b0:	bne	11840 <__mempcpy_chk@plt+0x830>
   117b4:	b	11848 <__mempcpy_chk@plt+0x838>
   117b8:	ldrb	r2, [r4, #2]
   117bc:	ldrb	r1, [r3, #1]
   117c0:	cmp	r2, #0
   117c4:	beq	11838 <__mempcpy_chk@plt+0x828>
   117c8:	add	r2, r4, #2
   117cc:	add	r3, r3, #2
   117d0:	tst	r1, #255	; 0xff
   117d4:	beq	11848 <__mempcpy_chk@plt+0x838>
   117d8:	uxtb	r1, r1
   117dc:	uxtb	r0, r0
   117e0:	cmp	r0, r1
   117e4:	bne	11848 <__mempcpy_chk@plt+0x838>
   117e8:	ldrb	r0, [r2], #1
   117ec:	ldrb	r1, [r3], #1
   117f0:	cmp	r0, #0
   117f4:	bne	117d0 <__mempcpy_chk@plt+0x7c0>
   117f8:	b	11830 <__mempcpy_chk@plt+0x820>
   117fc:	ldrb	r1, [r3, #1]
   11800:	add	r2, r4, #2
   11804:	add	r3, r3, #2
   11808:	tst	r1, #255	; 0xff
   1180c:	beq	11848 <__mempcpy_chk@plt+0x838>
   11810:	uxtb	r1, r1
   11814:	uxtb	r0, r0
   11818:	cmp	r0, r1
   1181c:	bne	11848 <__mempcpy_chk@plt+0x838>
   11820:	ldrb	r0, [r2], #1
   11824:	ldrb	r1, [r3], #1
   11828:	cmp	r0, #0
   1182c:	bne	11808 <__mempcpy_chk@plt+0x7f8>
   11830:	cmp	r1, #0
   11834:	beq	11840 <__mempcpy_chk@plt+0x830>
   11838:	cmp	r1, #47	; 0x2f
   1183c:	bne	11848 <__mempcpy_chk@plt+0x838>
   11840:	str	r4, [r9, #8]
   11844:	b	11860 <__mempcpy_chk@plt+0x850>
   11848:	mov	r0, r4
   1184c:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   11850:	ldr	r0, [r9, #4]
   11854:	mov	r1, #0
   11858:	str	r1, [r9, #4]
   1185c:	str	r0, [r9, #8]
   11860:	movw	r0, #33080	; 0x8138
   11864:	movt	r0, #2
   11868:	ldr	r1, [r0]
   1186c:	mov	r0, #0
   11870:	cmp	r1, sl
   11874:	bge	11a5c <__mempcpy_chk@plt+0xa4c>
   11878:	ldr	r0, [sp, #20]
   1187c:	movw	sl, #33092	; 0x8144
   11880:	mov	r6, #1
   11884:	movt	sl, #2
   11888:	bic	r0, r0, #4
   1188c:	str	r0, [sp, #8]
   11890:	b	1189c <__mempcpy_chk@plt+0x88c>
   11894:	bl	10fa4 <__overflow@plt>
   11898:	b	11a24 <__mempcpy_chk@plt+0xa14>
   1189c:	ldr	r0, [sp, #12]
   118a0:	ldr	r5, [r0, r1, lsl #2]
   118a4:	ldr	r1, [sp, #20]
   118a8:	mov	r0, r5
   118ac:	bl	11f30 <__mempcpy_chk@plt+0xf20>
   118b0:	mov	r4, r0
   118b4:	ldrb	r0, [r9]
   118b8:	cmp	r0, #1
   118bc:	bne	11930 <__mempcpy_chk@plt+0x920>
   118c0:	cmp	r4, #0
   118c4:	beq	11930 <__mempcpy_chk@plt+0x920>
   118c8:	ldr	r1, [sp, #8]
   118cc:	mov	r0, r4
   118d0:	bl	11f30 <__mempcpy_chk@plt+0xf20>
   118d4:	mov	r8, r0
   118d8:	mov	r0, r4
   118dc:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   118e0:	cmp	r8, #0
   118e4:	bne	1193c <__mempcpy_chk@plt+0x92c>
   118e8:	ldrb	r0, [r9, #1]
   118ec:	mov	r7, #0
   118f0:	cmp	r0, #0
   118f4:	bne	11a30 <__mempcpy_chk@plt+0xa20>
   118f8:	bl	10f44 <__errno_location@plt>
   118fc:	ldr	r4, [r0]
   11900:	mov	r0, #0
   11904:	mov	r1, #3
   11908:	mov	r2, r5
   1190c:	mov	r7, #0
   11910:	bl	15a4c <__mempcpy_chk@plt+0x4a3c>
   11914:	movw	r2, #30964	; 0x78f4
   11918:	mov	r3, r0
   1191c:	mov	r0, #0
   11920:	mov	r1, r4
   11924:	movt	r2, #1
   11928:	bl	10ecc <error@plt>
   1192c:	b	11a30 <__mempcpy_chk@plt+0xa20>
   11930:	mov	r8, r4
   11934:	cmp	r8, #0
   11938:	beq	118e8 <__mempcpy_chk@plt+0x8d8>
   1193c:	ldr	r1, [r9, #4]
   11940:	cmp	r1, #0
   11944:	beq	119e8 <__mempcpy_chk@plt+0x9d8>
   11948:	ldr	r3, [r9, #8]
   1194c:	cmp	r3, #0
   11950:	beq	119d0 <__mempcpy_chk@plt+0x9c0>
   11954:	ldrb	r0, [r3, #1]
   11958:	cmp	r0, #0
   1195c:	beq	1197c <__mempcpy_chk@plt+0x96c>
   11960:	cmp	r0, #47	; 0x2f
   11964:	bne	1198c <__mempcpy_chk@plt+0x97c>
   11968:	ldrb	r7, [r3, #2]
   1196c:	ldrb	r2, [r8, #1]
   11970:	cmp	r7, #0
   11974:	bne	11990 <__mempcpy_chk@plt+0x980>
   11978:	b	119c8 <__mempcpy_chk@plt+0x9b8>
   1197c:	ldrb	r0, [r8, #1]
   11980:	cmp	r0, #47	; 0x2f
   11984:	bne	119d0 <__mempcpy_chk@plt+0x9c0>
   11988:	b	119e8 <__mempcpy_chk@plt+0x9d8>
   1198c:	ldrb	r2, [r8, #1]
   11990:	add	r3, r3, #2
   11994:	add	r5, r8, #2
   11998:	tst	r2, #255	; 0xff
   1199c:	beq	119e8 <__mempcpy_chk@plt+0x9d8>
   119a0:	uxtb	r2, r2
   119a4:	uxtb	r0, r0
   119a8:	cmp	r0, r2
   119ac:	bne	119e8 <__mempcpy_chk@plt+0x9d8>
   119b0:	ldrb	r0, [r3], #1
   119b4:	ldrb	r2, [r5], #1
   119b8:	cmp	r0, #0
   119bc:	bne	11998 <__mempcpy_chk@plt+0x988>
   119c0:	cmp	r2, #0
   119c4:	beq	119d0 <__mempcpy_chk@plt+0x9c0>
   119c8:	cmp	r2, #47	; 0x2f
   119cc:	bne	119e8 <__mempcpy_chk@plt+0x9d8>
   119d0:	mov	r0, r8
   119d4:	mov	r2, #0
   119d8:	mov	r3, #0
   119dc:	bl	11bb0 <__mempcpy_chk@plt+0xba0>
   119e0:	cmp	r0, #0
   119e4:	bne	119f4 <__mempcpy_chk@plt+0x9e4>
   119e8:	ldr	r1, [sl]
   119ec:	mov	r0, r8
   119f0:	bl	10dc4 <fputs_unlocked@plt>
   119f4:	ldrb	r0, [r9, #2]
   119f8:	mov	r1, #10
   119fc:	cmp	r0, #0
   11a00:	ldr	r0, [sl]
   11a04:	movwne	r1, #0
   11a08:	ldr	r2, [r0, #20]
   11a0c:	ldr	r3, [r0, #24]
   11a10:	cmp	r2, r3
   11a14:	bcs	11894 <__mempcpy_chk@plt+0x884>
   11a18:	add	r3, r2, #1
   11a1c:	str	r3, [r0, #20]
   11a20:	strb	r1, [r2]
   11a24:	mov	r0, r8
   11a28:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   11a2c:	mov	r7, #1
   11a30:	movw	r0, #33080	; 0x8138
   11a34:	and	r6, r6, r7
   11a38:	movt	r0, #2
   11a3c:	mov	r2, r0
   11a40:	ldr	r0, [r0]
   11a44:	add	r1, r0, #1
   11a48:	ldr	r0, [sp, #16]
   11a4c:	str	r1, [r2]
   11a50:	cmp	r1, r0
   11a54:	blt	1189c <__mempcpy_chk@plt+0x88c>
   11a58:	eor	r0, r6, #1
   11a5c:	sub	sp, fp, #28
   11a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a64:	cmn	r0, #3
   11a68:	bne	11ab4 <__mempcpy_chk@plt+0xaa4>
   11a6c:	movw	r0, #33000	; 0x80e8
   11a70:	movw	r2, #30149	; 0x75c5
   11a74:	mov	r1, #0
   11a78:	movt	r0, #2
   11a7c:	movt	r2, #1
   11a80:	str	r1, [sp, #4]
   11a84:	movw	r1, #30094	; 0x758e
   11a88:	ldr	r3, [r0]
   11a8c:	movw	r0, #33092	; 0x8144
   11a90:	str	r2, [sp]
   11a94:	movw	r2, #30135	; 0x75b7
   11a98:	movt	r1, #1
   11a9c:	movt	r0, #2
   11aa0:	movt	r2, #1
   11aa4:	ldr	r0, [r0]
   11aa8:	bl	16328 <__mempcpy_chk@plt+0x5318>
   11aac:	mov	r0, #0
   11ab0:	bl	10f2c <exit@plt>
   11ab4:	cmn	r0, #2
   11ab8:	bne	11af0 <__mempcpy_chk@plt+0xae0>
   11abc:	mov	r0, #0
   11ac0:	bl	11110 <__mempcpy_chk@plt+0x100>
   11ac4:	movw	r1, #30163	; 0x75d3
   11ac8:	mov	r0, #0
   11acc:	mov	r2, #5
   11ad0:	movt	r1, #1
   11ad4:	bl	10e48 <dcgettext@plt>
   11ad8:	mov	r2, r0
   11adc:	mov	r0, #0
   11ae0:	mov	r1, #0
   11ae4:	bl	10ecc <error@plt>
   11ae8:	mov	r0, #1
   11aec:	bl	11110 <__mempcpy_chk@plt+0x100>
   11af0:	mov	r0, #1
   11af4:	bl	11110 <__mempcpy_chk@plt+0x100>
   11af8:	bl	10f44 <__errno_location@plt>
   11afc:	ldr	r4, [r0]
   11b00:	movw	r1, #30618	; 0x779a
   11b04:	mov	r0, #0
   11b08:	mov	r2, #5
   11b0c:	movt	r1, #1
   11b10:	bl	10e48 <dcgettext@plt>
   11b14:	mov	r5, r0
   11b18:	mov	r0, #4
   11b1c:	mov	r1, r7
   11b20:	bl	157d0 <__mempcpy_chk@plt+0x47c0>
   11b24:	mov	r3, r0
   11b28:	mov	r0, #1
   11b2c:	mov	r1, r4
   11b30:	mov	r2, r5
   11b34:	bl	10ecc <error@plt>
   11b38:	mov	r0, #0
   11b3c:	mov	r1, #3
   11b40:	mov	r2, r4
   11b44:	b	11b94 <__mempcpy_chk@plt+0xb84>
   11b48:	bl	10f44 <__errno_location@plt>
   11b4c:	ldr	r5, [r0]
   11b50:	movw	r1, #30618	; 0x779a
   11b54:	mov	r0, #0
   11b58:	mov	r2, #5
   11b5c:	movt	r1, #1
   11b60:	bl	10e48 <dcgettext@plt>
   11b64:	mov	r6, r0
   11b68:	mov	r0, #4
   11b6c:	mov	r1, r4
   11b70:	bl	157d0 <__mempcpy_chk@plt+0x47c0>
   11b74:	mov	r3, r0
   11b78:	mov	r0, #1
   11b7c:	mov	r1, r5
   11b80:	mov	r2, r6
   11b84:	bl	10ecc <error@plt>
   11b88:	mov	r0, #0
   11b8c:	mov	r1, #3
   11b90:	mov	r2, r8
   11b94:	bl	15a4c <__mempcpy_chk@plt+0x4a3c>
   11b98:	movw	r2, #30964	; 0x78f4
   11b9c:	mov	r3, r0
   11ba0:	mov	r0, #1
   11ba4:	mov	r1, #20
   11ba8:	movt	r2, #1
   11bac:	bl	10ecc <error@plt>
   11bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bb4:	add	fp, sp, #28
   11bb8:	sub	sp, sp, #4
   11bbc:	mov	r7, r1
   11bc0:	ldrb	r1, [r1, #1]
   11bc4:	mov	r6, r0
   11bc8:	ldrb	r0, [r0, #1]
   11bcc:	mov	r4, #0
   11bd0:	sub	r0, r0, #47	; 0x2f
   11bd4:	sub	r1, r1, #47	; 0x2f
   11bd8:	clz	r0, r0
   11bdc:	clz	r1, r1
   11be0:	lsr	r0, r0, #5
   11be4:	lsr	r1, r1, #5
   11be8:	teq	r1, r0
   11bec:	bne	11e38 <__mempcpy_chk@plt+0xe28>
   11bf0:	mov	sl, r3
   11bf4:	ldrb	r3, [r7]
   11bf8:	ldrb	r1, [r6]
   11bfc:	mov	r8, r2
   11c00:	cmp	r3, #0
   11c04:	beq	11c54 <__mempcpy_chk@plt+0xc44>
   11c08:	mov	r0, #0
   11c0c:	mov	r2, #1
   11c10:	tst	r1, #255	; 0xff
   11c14:	beq	11c78 <__mempcpy_chk@plt+0xc68>
   11c18:	uxtb	r4, r1
   11c1c:	uxtb	r5, r3
   11c20:	cmp	r5, r4
   11c24:	bne	11c78 <__mempcpy_chk@plt+0xc68>
   11c28:	ldrb	r3, [r7, r2]
   11c2c:	ldrb	r1, [r6, r2]
   11c30:	cmp	r4, #47	; 0x2f
   11c34:	moveq	r0, r2
   11c38:	add	r2, r2, #1
   11c3c:	cmp	r3, #0
   11c40:	bne	11c10 <__mempcpy_chk@plt+0xc00>
   11c44:	sub	r2, r2, #1
   11c48:	cmp	r1, #0
   11c4c:	bne	11c64 <__mempcpy_chk@plt+0xc54>
   11c50:	b	11e48 <__mempcpy_chk@plt+0xe38>
   11c54:	mov	r2, #0
   11c58:	mov	r0, #0
   11c5c:	cmp	r1, #0
   11c60:	beq	11e48 <__mempcpy_chk@plt+0xe38>
   11c64:	cmp	r1, #47	; 0x2f
   11c68:	moveq	r0, r2
   11c6c:	cmp	r0, #0
   11c70:	bne	11c90 <__mempcpy_chk@plt+0xc80>
   11c74:	b	11e54 <__mempcpy_chk@plt+0xe44>
   11c78:	tst	r1, #255	; 0xff
   11c7c:	uxtbeq	r1, r3
   11c80:	cmpeq	r1, #47	; 0x2f
   11c84:	beq	11e44 <__mempcpy_chk@plt+0xe34>
   11c88:	cmp	r0, #0
   11c8c:	beq	11e54 <__mempcpy_chk@plt+0xe44>
   11c90:	ldrb	r1, [r6, r0]!
   11c94:	ldrb	r0, [r7, r0]!
   11c98:	cmp	r1, #47	; 0x2f
   11c9c:	mov	r5, r6
   11ca0:	sub	r1, r1, #47	; 0x2f
   11ca4:	addeq	r5, r5, #1
   11ca8:	cmp	r0, #47	; 0x2f
   11cac:	clz	r1, r1
   11cb0:	addeq	r7, r7, #1
   11cb4:	lsr	r1, r1, #5
   11cb8:	ldrb	r0, [r7]
   11cbc:	cmp	r0, #0
   11cc0:	beq	11cf4 <__mempcpy_chk@plt+0xce4>
   11cc4:	cmp	r8, #0
   11cc8:	str	r1, [sp]
   11ccc:	beq	11d40 <__mempcpy_chk@plt+0xd30>
   11cd0:	mov	r4, #1
   11cd4:	cmp	sl, #3
   11cd8:	bcc	11d60 <__mempcpy_chk@plt+0xd50>
   11cdc:	movw	r0, #11822	; 0x2e2e
   11ce0:	mov	r4, #0
   11ce4:	sub	sl, sl, #2
   11ce8:	strh	r0, [r8]
   11cec:	strb	r4, [r8, #2]!
   11cf0:	b	11d60 <__mempcpy_chk@plt+0xd50>
   11cf4:	ldrb	r0, [r6, r1]
   11cf8:	movw	r1, #30906	; 0x78ba
   11cfc:	movt	r1, #1
   11d00:	cmp	r0, #0
   11d04:	moveq	r5, r1
   11d08:	cmp	r8, #0
   11d0c:	beq	11e64 <__mempcpy_chk@plt+0xe54>
   11d10:	mov	r0, r5
   11d14:	bl	10f38 <strlen@plt>
   11d18:	cmp	r0, sl
   11d1c:	bcs	11ee4 <__mempcpy_chk@plt+0xed4>
   11d20:	add	r2, r0, #1
   11d24:	mov	r0, r8
   11d28:	mov	r1, r5
   11d2c:	bl	10e24 <memcpy@plt>
   11d30:	mov	r4, #1
   11d34:	mov	r0, r4
   11d38:	sub	sp, fp, #28
   11d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d40:	movw	r0, #33092	; 0x8144
   11d44:	movt	r0, #2
   11d48:	ldr	r1, [r0]
   11d4c:	movw	r0, #30905	; 0x78b9
   11d50:	movt	r0, #1
   11d54:	bl	10dc4 <fputs_unlocked@plt>
   11d58:	mov	r8, #0
   11d5c:	mov	r4, #0
   11d60:	movw	r9, #30904	; 0x78b8
   11d64:	movt	r9, #1
   11d68:	ldrb	r0, [r7]
   11d6c:	cmp	r0, #47	; 0x2f
   11d70:	bne	11d88 <__mempcpy_chk@plt+0xd78>
   11d74:	b	11d94 <__mempcpy_chk@plt+0xd84>
   11d78:	add	r7, r7, #1
   11d7c:	ldrb	r0, [r7]
   11d80:	cmp	r0, #47	; 0x2f
   11d84:	beq	11d94 <__mempcpy_chk@plt+0xd84>
   11d88:	cmp	r0, #0
   11d8c:	bne	11d78 <__mempcpy_chk@plt+0xd68>
   11d90:	b	11de4 <__mempcpy_chk@plt+0xdd4>
   11d94:	cmp	r8, #0
   11d98:	beq	11dbc <__mempcpy_chk@plt+0xdac>
   11d9c:	mov	r0, #1
   11da0:	cmp	sl, #4
   11da4:	bcc	11dd8 <__mempcpy_chk@plt+0xdc8>
   11da8:	movw	r0, #11823	; 0x2e2f
   11dac:	sub	sl, sl, #3
   11db0:	movt	r0, #46	; 0x2e
   11db4:	str	r0, [r8], #3
   11db8:	b	11dd4 <__mempcpy_chk@plt+0xdc4>
   11dbc:	movw	r0, #33092	; 0x8144
   11dc0:	movt	r0, #2
   11dc4:	ldr	r1, [r0]
   11dc8:	mov	r0, r9
   11dcc:	bl	10dc4 <fputs_unlocked@plt>
   11dd0:	mov	r8, #0
   11dd4:	mov	r0, #0
   11dd8:	and	r1, r4, #1
   11ddc:	orr	r4, r0, r1
   11de0:	b	11d78 <__mempcpy_chk@plt+0xd68>
   11de4:	ldr	r0, [sp]
   11de8:	ldrb	r0, [r6, r0]
   11dec:	and	r6, r4, #1
   11df0:	cmp	r0, #0
   11df4:	beq	11e2c <__mempcpy_chk@plt+0xe1c>
   11df8:	cmp	r8, #0
   11dfc:	beq	11e88 <__mempcpy_chk@plt+0xe78>
   11e00:	mov	r4, #1
   11e04:	cmp	sl, #1
   11e08:	bls	11eb4 <__mempcpy_chk@plt+0xea4>
   11e0c:	mov	r0, #47	; 0x2f
   11e10:	sub	sl, sl, #1
   11e14:	strh	r0, [r8], #1
   11e18:	mov	r0, r5
   11e1c:	bl	10f38 <strlen@plt>
   11e20:	cmp	r0, sl
   11e24:	bcc	11ec8 <__mempcpy_chk@plt+0xeb8>
   11e28:	b	11edc <__mempcpy_chk@plt+0xecc>
   11e2c:	mov	r4, #1
   11e30:	cmp	r6, #0
   11e34:	bne	11ee4 <__mempcpy_chk@plt+0xed4>
   11e38:	mov	r0, r4
   11e3c:	sub	sp, fp, #28
   11e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e44:	sub	r2, r2, #1
   11e48:	mov	r0, r2
   11e4c:	cmp	r0, #0
   11e50:	bne	11c90 <__mempcpy_chk@plt+0xc80>
   11e54:	mov	r4, #0
   11e58:	mov	r0, r4
   11e5c:	sub	sp, fp, #28
   11e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e64:	movw	r0, #33092	; 0x8144
   11e68:	movt	r0, #2
   11e6c:	ldr	r1, [r0]
   11e70:	mov	r0, r5
   11e74:	bl	10dc4 <fputs_unlocked@plt>
   11e78:	mov	r4, #1
   11e7c:	mov	r0, r4
   11e80:	sub	sp, fp, #28
   11e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e88:	movw	r0, #33092	; 0x8144
   11e8c:	movt	r0, #2
   11e90:	ldr	r1, [r0]
   11e94:	mov	r4, r0
   11e98:	movw	r0, #32079	; 0x7d4f
   11e9c:	movt	r0, #1
   11ea0:	bl	10dc4 <fputs_unlocked@plt>
   11ea4:	ldr	r1, [r4]
   11ea8:	mov	r0, r5
   11eac:	bl	10dc4 <fputs_unlocked@plt>
   11eb0:	b	11ed8 <__mempcpy_chk@plt+0xec8>
   11eb4:	mov	r6, #1
   11eb8:	mov	r0, r5
   11ebc:	bl	10f38 <strlen@plt>
   11ec0:	cmp	r0, sl
   11ec4:	bcs	11edc <__mempcpy_chk@plt+0xecc>
   11ec8:	add	r2, r0, #1
   11ecc:	mov	r0, r8
   11ed0:	mov	r1, r5
   11ed4:	bl	10e24 <memcpy@plt>
   11ed8:	mov	r4, #0
   11edc:	orrs	r0, r4, r6
   11ee0:	beq	11f20 <__mempcpy_chk@plt+0xf10>
   11ee4:	movw	r1, #30908	; 0x78bc
   11ee8:	mov	r0, #0
   11eec:	mov	r2, #5
   11ef0:	mov	r4, #0
   11ef4:	movt	r1, #1
   11ef8:	bl	10e48 <dcgettext@plt>
   11efc:	movw	r2, #30964	; 0x78f4
   11f00:	mov	r3, r0
   11f04:	mov	r0, #0
   11f08:	mov	r1, #36	; 0x24
   11f0c:	movt	r2, #1
   11f10:	bl	10ecc <error@plt>
   11f14:	mov	r0, r4
   11f18:	sub	sp, fp, #28
   11f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f20:	mov	r4, #1
   11f24:	mov	r0, r4
   11f28:	sub	sp, fp, #28
   11f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f34:	add	fp, sp, #28
   11f38:	sub	sp, sp, #180	; 0xb4
   11f3c:	sub	sp, sp, #3072	; 0xc00
   11f40:	mov	r8, r0
   11f44:	and	r7, r1, #3
   11f48:	sub	r0, r1, #1
   11f4c:	tst	r0, r7
   11f50:	beq	11f70 <__mempcpy_chk@plt+0xf60>
   11f54:	bl	10f44 <__errno_location@plt>
   11f58:	mov	r1, #22
   11f5c:	mov	r4, #0
   11f60:	str	r1, [r0]
   11f64:	mov	r0, r4
   11f68:	sub	sp, fp, #28
   11f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f70:	cmp	r8, #0
   11f74:	beq	11f54 <__mempcpy_chk@plt+0xf44>
   11f78:	ldrb	r0, [r8]
   11f7c:	cmp	r0, #0
   11f80:	beq	12588 <__mempcpy_chk@plt+0x1578>
   11f84:	sub	lr, fp, #1024	; 0x400
   11f88:	mov	r4, r1
   11f8c:	mov	r1, #1024	; 0x400
   11f90:	cmp	r0, #47	; 0x2f
   11f94:	sub	r2, lr, #40	; 0x28
   11f98:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11f9c:	add	r2, r2, #8
   11fa0:	str	r2, [sp, #12]
   11fa4:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11fa8:	add	r2, sp, #1184	; 0x4a0
   11fac:	add	r2, r2, #8
   11fb0:	str	r2, [sp, #1184]	; 0x4a0
   11fb4:	str	r2, [sp, #16]
   11fb8:	add	r2, sp, #48	; 0x30
   11fbc:	str	r1, [sp, #1188]	; 0x4a4
   11fc0:	add	r5, r2, #8
   11fc4:	mov	r0, r5
   11fc8:	str	r5, [sp, #48]	; 0x30
   11fcc:	str	r1, [sp, #52]	; 0x34
   11fd0:	str	r5, [sp, #8]
   11fd4:	bne	12594 <__mempcpy_chk@plt+0x1584>
   11fd8:	mov	r1, r8
   11fdc:	mov	r2, #0
   11fe0:	mov	r3, #1024	; 0x400
   11fe4:	bl	11010 <__mempcpy_chk@plt>
   11fe8:	mov	r6, r0
   11fec:	mov	r0, #47	; 0x2f
   11ff0:	strb	r0, [r6], #1
   11ff4:	ldrb	r0, [r8]
   11ff8:	cmp	r0, #0
   11ffc:	beq	125c0 <__mempcpy_chk@plt+0x15b0>
   12000:	and	r1, r4, #4
   12004:	add	r9, sp, #48	; 0x30
   12008:	str	r7, [sp, #32]
   1200c:	str	r1, [sp, #40]	; 0x28
   12010:	mov	r1, #0
   12014:	str	r1, [sp, #24]
   12018:	mov	r1, #0
   1201c:	str	r1, [sp, #36]	; 0x24
   12020:	mov	r1, #0
   12024:	str	r1, [sp, #20]
   12028:	uxtb	r1, r0
   1202c:	cmp	r1, #47	; 0x2f
   12030:	bne	12040 <__mempcpy_chk@plt+0x1030>
   12034:	ldrb	r0, [r8, #1]!
   12038:	cmp	r0, #47	; 0x2f
   1203c:	beq	12034 <__mempcpy_chk@plt+0x1024>
   12040:	mov	r1, r0
   12044:	mov	sl, r8
   12048:	uxtb	r1, r1
   1204c:	cmp	r1, #0
   12050:	cmpne	r1, #47	; 0x2f
   12054:	beq	1206c <__mempcpy_chk@plt+0x105c>
   12058:	ldrb	r1, [sl, #1]!
   1205c:	uxtb	r1, r1
   12060:	cmp	r1, #0
   12064:	cmpne	r1, #47	; 0x2f
   12068:	bne	12058 <__mempcpy_chk@plt+0x1048>
   1206c:	sub	r2, sl, r8
   12070:	cmp	r2, #1
   12074:	beq	120e0 <__mempcpy_chk@plt+0x10d0>
   12078:	cmp	r2, #2
   1207c:	beq	1208c <__mempcpy_chk@plt+0x107c>
   12080:	cmp	r2, #0
   12084:	bne	12100 <__mempcpy_chk@plt+0x10f0>
   12088:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   1208c:	uxtb	r0, r0
   12090:	cmp	r0, #46	; 0x2e
   12094:	ldrbeq	r0, [r8, #1]
   12098:	cmpeq	r0, #46	; 0x2e
   1209c:	bne	12100 <__mempcpy_chk@plt+0x10f0>
   120a0:	add	r0, r5, #1
   120a4:	cmp	r6, r0
   120a8:	bls	1254c <__mempcpy_chk@plt+0x153c>
   120ac:	sub	r0, r6, #1
   120b0:	mov	r6, r0
   120b4:	cmp	r0, r5
   120b8:	bls	12560 <__mempcpy_chk@plt+0x1550>
   120bc:	mov	r0, r6
   120c0:	ldrb	r1, [r0, #-1]!
   120c4:	cmp	r1, #47	; 0x2f
   120c8:	bne	120b0 <__mempcpy_chk@plt+0x10a0>
   120cc:	mov	r8, sl
   120d0:	ldrb	r0, [r8]
   120d4:	cmp	r0, #0
   120d8:	bne	12028 <__mempcpy_chk@plt+0x1018>
   120dc:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   120e0:	uxtb	r0, r0
   120e4:	cmp	r0, #46	; 0x2e
   120e8:	bne	12100 <__mempcpy_chk@plt+0x10f0>
   120ec:	mov	r8, sl
   120f0:	ldrb	r0, [r8]
   120f4:	cmp	r0, #0
   120f8:	bne	12028 <__mempcpy_chk@plt+0x1018>
   120fc:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   12100:	ldrb	r0, [r6, #-1]
   12104:	add	r4, r2, #2
   12108:	str	r2, [sp, #44]	; 0x2c
   1210c:	cmp	r0, #47	; 0x2f
   12110:	movne	r0, #47	; 0x2f
   12114:	strbne	r0, [r6], #1
   12118:	ldr	r0, [sp, #52]	; 0x34
   1211c:	add	r0, r5, r0
   12120:	sub	r0, r0, r6
   12124:	cmp	r0, r4
   12128:	bcs	12160 <__mempcpy_chk@plt+0x1150>
   1212c:	mov	r0, r9
   12130:	bl	15de8 <__mempcpy_chk@plt+0x4dd8>
   12134:	cmp	r0, #0
   12138:	beq	126d8 <__mempcpy_chk@plt+0x16c8>
   1213c:	sub	r0, r6, r5
   12140:	ldr	r5, [sp, #48]	; 0x30
   12144:	ldr	r1, [sp, #52]	; 0x34
   12148:	add	r6, r5, r0
   1214c:	add	r0, r5, r1
   12150:	sub	r0, r0, r6
   12154:	cmp	r0, r4
   12158:	bcc	1212c <__mempcpy_chk@plt+0x111c>
   1215c:	ldr	r2, [sp, #44]	; 0x2c
   12160:	mov	r0, r6
   12164:	mov	r1, r8
   12168:	mvn	r3, #0
   1216c:	bl	11010 <__mempcpy_chk@plt>
   12170:	mov	r6, r0
   12174:	mov	r0, #0
   12178:	strb	r0, [r6]
   1217c:	ldr	r0, [sp, #40]	; 0x28
   12180:	cmp	r0, #0
   12184:	bne	121e8 <__mempcpy_chk@plt+0x11d8>
   12188:	ldr	r0, [sp, #1188]	; 0x4a4
   1218c:	ldr	r7, [sp, #1184]	; 0x4a0
   12190:	sub	r9, r0, #1
   12194:	mov	r0, r5
   12198:	mov	r1, r7
   1219c:	mov	r2, r9
   121a0:	bl	10e84 <readlink@plt>
   121a4:	cmp	r0, r9
   121a8:	blt	121c0 <__mempcpy_chk@plt+0x11b0>
   121ac:	add	r0, sp, #1184	; 0x4a0
   121b0:	bl	15d78 <__mempcpy_chk@plt+0x4d68>
   121b4:	cmp	r0, #0
   121b8:	bne	12188 <__mempcpy_chk@plt+0x1178>
   121bc:	b	126d8 <__mempcpy_chk@plt+0x16c8>
   121c0:	mov	r4, r0
   121c4:	cmp	r0, #0
   121c8:	add	r9, sp, #48	; 0x30
   121cc:	blt	121e8 <__mempcpy_chk@plt+0x11d8>
   121d0:	ldr	r0, [sp, #24]
   121d4:	cmp	r0, #19
   121d8:	bgt	12298 <__mempcpy_chk@plt+0x1288>
   121dc:	add	r0, r0, #1
   121e0:	str	r0, [sp, #24]
   121e4:	b	12424 <__mempcpy_chk@plt+0x1414>
   121e8:	ldr	r7, [sp, #32]
   121ec:	cmp	r7, #2
   121f0:	bne	12208 <__mempcpy_chk@plt+0x11f8>
   121f4:	mov	r8, sl
   121f8:	ldrb	r0, [r8]
   121fc:	cmp	r0, #0
   12200:	bne	12028 <__mempcpy_chk@plt+0x1018>
   12204:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   12208:	ldrb	r0, [sl]
   1220c:	cmp	r0, #47	; 0x2f
   12210:	bne	12368 <__mempcpy_chk@plt+0x1358>
   12214:	mov	r2, sl
   12218:	mov	r1, r2
   1221c:	ldrb	r3, [r2, #1]!
   12220:	cmp	r3, #47	; 0x2f
   12224:	beq	12218 <__mempcpy_chk@plt+0x1208>
   12228:	cmp	r3, #46	; 0x2e
   1222c:	bne	12360 <__mempcpy_chk@plt+0x1350>
   12230:	add	r2, r1, #2
   12234:	ldrb	r3, [r2]
   12238:	cmp	r3, #47	; 0x2f
   1223c:	beq	12218 <__mempcpy_chk@plt+0x1208>
   12240:	cmp	r3, #0
   12244:	beq	12260 <__mempcpy_chk@plt+0x1250>
   12248:	cmp	r3, #46	; 0x2e
   1224c:	bne	12368 <__mempcpy_chk@plt+0x1358>
   12250:	ldrb	r1, [r1, #3]
   12254:	cmp	r1, #47	; 0x2f
   12258:	cmpne	r1, #0
   1225c:	bne	12368 <__mempcpy_chk@plt+0x1358>
   12260:	mov	r0, #47	; 0x2f
   12264:	mov	r1, r5
   12268:	mov	r2, #0
   1226c:	mov	r3, #512	; 0x200
   12270:	strh	r0, [r6]
   12274:	mvn	r0, #99	; 0x63
   12278:	bl	10e0c <faccessat@plt>
   1227c:	cmp	r0, #0
   12280:	bne	123d0 <__mempcpy_chk@plt+0x13c0>
   12284:	mov	r8, sl
   12288:	ldrb	r0, [r8]
   1228c:	cmp	r0, #0
   12290:	bne	12028 <__mempcpy_chk@plt+0x1018>
   12294:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   12298:	ldrb	r0, [r8]
   1229c:	cmp	r0, #0
   122a0:	beq	12424 <__mempcpy_chk@plt+0x1414>
   122a4:	ldr	r9, [sp, #44]	; 0x2c
   122a8:	mov	r0, #0
   122ac:	add	lr, sp, #1024	; 0x400
   122b0:	mov	r1, r5
   122b4:	add	r2, lr, #56	; 0x38
   122b8:	strb	r0, [r6, -r9]
   122bc:	ldrb	r0, [r5]
   122c0:	cmp	r0, #0
   122c4:	movw	r0, #30906	; 0x78ba
   122c8:	movt	r0, #1
   122cc:	moveq	r1, r0
   122d0:	mov	r0, #3
   122d4:	bl	10fe0 <__xstat64@plt>
   122d8:	cmp	r0, #0
   122dc:	bne	126e8 <__mempcpy_chk@plt+0x16d8>
   122e0:	rsb	r0, r9, #0
   122e4:	ldr	r9, [sp, #20]
   122e8:	ldrb	r1, [r8]
   122ec:	cmp	r9, #0
   122f0:	strb	r1, [r6, r0]
   122f4:	bne	1232c <__mempcpy_chk@plt+0x131c>
   122f8:	movw	r0, #15708	; 0x3d5c
   122fc:	movw	r2, #15564	; 0x3ccc
   12300:	movw	r3, #15620	; 0x3d04
   12304:	mov	r1, #0
   12308:	movt	r0, #1
   1230c:	movt	r2, #1
   12310:	movt	r3, #1
   12314:	str	r0, [sp]
   12318:	mov	r0, #7
   1231c:	bl	12d98 <__mempcpy_chk@plt+0x1d88>
   12320:	mov	r9, r0
   12324:	cmp	r0, #0
   12328:	beq	126d8 <__mempcpy_chk@plt+0x16c8>
   1232c:	add	lr, sp, #1024	; 0x400
   12330:	mov	r0, r9
   12334:	mov	r1, r8
   12338:	add	r2, lr, #56	; 0x38
   1233c:	bl	12884 <__mempcpy_chk@plt+0x1874>
   12340:	cmp	r0, #0
   12344:	str	r9, [sp, #20]
   12348:	beq	12410 <__mempcpy_chk@plt+0x1400>
   1234c:	ldr	r7, [sp, #32]
   12350:	cmp	r7, #2
   12354:	bne	126dc <__mempcpy_chk@plt+0x16cc>
   12358:	mov	r8, sl
   1235c:	b	124f0 <__mempcpy_chk@plt+0x14e0>
   12360:	cmp	r3, #0
   12364:	beq	12260 <__mempcpy_chk@plt+0x1250>
   12368:	ldr	r1, [sp, #40]	; 0x28
   1236c:	cmp	r1, #0
   12370:	beq	12390 <__mempcpy_chk@plt+0x1380>
   12374:	cmp	r0, #0
   12378:	beq	123b4 <__mempcpy_chk@plt+0x13a4>
   1237c:	mov	r8, sl
   12380:	ldrb	r0, [r8]
   12384:	cmp	r0, #0
   12388:	bne	12028 <__mempcpy_chk@plt+0x1018>
   1238c:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   12390:	bl	10f44 <__errno_location@plt>
   12394:	ldr	r0, [r0]
   12398:	cmp	r0, #22
   1239c:	bne	123d0 <__mempcpy_chk@plt+0x13c0>
   123a0:	mov	r8, sl
   123a4:	ldrb	r0, [r8]
   123a8:	cmp	r0, #0
   123ac:	bne	12028 <__mempcpy_chk@plt+0x1018>
   123b0:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   123b4:	mvn	r0, #99	; 0x63
   123b8:	mov	r1, r5
   123bc:	mov	r2, #0
   123c0:	mov	r3, #512	; 0x200
   123c4:	bl	10e0c <faccessat@plt>
   123c8:	cmp	r0, #0
   123cc:	beq	12574 <__mempcpy_chk@plt+0x1564>
   123d0:	mov	r4, #1
   123d4:	cmp	r7, #1
   123d8:	bne	125e8 <__mempcpy_chk@plt+0x15d8>
   123dc:	bl	10f44 <__errno_location@plt>
   123e0:	ldr	r0, [r0]
   123e4:	cmp	r0, #2
   123e8:	bne	125e8 <__mempcpy_chk@plt+0x15d8>
   123ec:	movw	r1, #32079	; 0x7d4f
   123f0:	mov	r0, sl
   123f4:	movt	r1, #1
   123f8:	bl	11004 <strspn@plt>
   123fc:	ldrb	r0, [sl, r0]
   12400:	mov	r8, sl
   12404:	cmp	r0, #0
   12408:	beq	1253c <__mempcpy_chk@plt+0x152c>
   1240c:	b	125e8 <__mempcpy_chk@plt+0x15d8>
   12410:	add	lr, sp, #1024	; 0x400
   12414:	mov	r0, r9
   12418:	mov	r1, r8
   1241c:	add	r2, lr, #56	; 0x38
   12420:	bl	12808 <__mempcpy_chk@plt+0x17f8>
   12424:	mov	r0, #0
   12428:	strb	r0, [r7, r4]
   1242c:	ldr	r0, [sp, #36]	; 0x24
   12430:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12434:	tst	r0, #1
   12438:	ldr	r0, [sp, #28]
   1243c:	subne	r0, sl, r8
   12440:	str	r0, [sp, #28]
   12444:	mov	r0, sl
   12448:	bl	10f38 <strlen@plt>
   1244c:	adds	r9, r0, r4
   12450:	str	r0, [sp, #44]	; 0x2c
   12454:	bcs	126d8 <__mempcpy_chk@plt+0x16c8>
   12458:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1245c:	cmp	r0, r9
   12460:	bhi	12488 <__mempcpy_chk@plt+0x1478>
   12464:	sub	lr, fp, #1024	; 0x400
   12468:	sub	r0, lr, #40	; 0x28
   1246c:	bl	15de8 <__mempcpy_chk@plt+0x4dd8>
   12470:	cmp	r0, #0
   12474:	beq	126d8 <__mempcpy_chk@plt+0x16c8>
   12478:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   1247c:	cmp	r0, r9
   12480:	bls	12464 <__mempcpy_chk@plt+0x1454>
   12484:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12488:	ldr	r0, [sp, #36]	; 0x24
   1248c:	ldr	r1, [sp, #44]	; 0x2c
   12490:	tst	r0, #1
   12494:	ldr	r0, [sp, #28]
   12498:	add	r2, r1, #1
   1249c:	addne	sl, r8, r0
   124a0:	add	r0, r8, r4
   124a4:	mov	r1, sl
   124a8:	bl	10df4 <memmove@plt>
   124ac:	mov	r0, r8
   124b0:	mov	r1, r7
   124b4:	mov	r2, r4
   124b8:	bl	10e24 <memcpy@plt>
   124bc:	ldrb	r0, [r7]
   124c0:	cmp	r0, #47	; 0x2f
   124c4:	bne	12504 <__mempcpy_chk@plt+0x14f4>
   124c8:	mov	r0, r5
   124cc:	mov	r1, r7
   124d0:	mov	r2, #0
   124d4:	mvn	r3, #0
   124d8:	bl	11010 <__mempcpy_chk@plt>
   124dc:	mov	r6, r0
   124e0:	mov	r0, #47	; 0x2f
   124e4:	strb	r0, [r6], #1
   124e8:	mov	r0, #1
   124ec:	str	r0, [sp, #36]	; 0x24
   124f0:	add	r9, sp, #48	; 0x30
   124f4:	ldrb	r0, [r8]
   124f8:	cmp	r0, #0
   124fc:	bne	12028 <__mempcpy_chk@plt+0x1018>
   12500:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   12504:	add	r0, r5, #1
   12508:	mov	r1, #1
   1250c:	add	r9, sp, #48	; 0x30
   12510:	cmp	r6, r0
   12514:	str	r1, [sp, #36]	; 0x24
   12518:	bls	1253c <__mempcpy_chk@plt+0x152c>
   1251c:	sub	r0, r6, #1
   12520:	mov	r6, r0
   12524:	cmp	r0, r5
   12528:	bls	1253c <__mempcpy_chk@plt+0x152c>
   1252c:	mov	r0, r6
   12530:	ldrb	r1, [r0, #-1]!
   12534:	cmp	r1, #47	; 0x2f
   12538:	bne	12520 <__mempcpy_chk@plt+0x1510>
   1253c:	ldrb	r0, [r8]
   12540:	cmp	r0, #0
   12544:	bne	12028 <__mempcpy_chk@plt+0x1018>
   12548:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   1254c:	mov	r8, sl
   12550:	ldrb	r0, [r8]
   12554:	cmp	r0, #0
   12558:	bne	12028 <__mempcpy_chk@plt+0x1018>
   1255c:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   12560:	mov	r8, sl
   12564:	ldrb	r0, [r8]
   12568:	cmp	r0, #0
   1256c:	bne	12028 <__mempcpy_chk@plt+0x1018>
   12570:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   12574:	mov	r8, sl
   12578:	ldrb	r0, [r8]
   1257c:	cmp	r0, #0
   12580:	bne	12028 <__mempcpy_chk@plt+0x1018>
   12584:	b	125c8 <__mempcpy_chk@plt+0x15b8>
   12588:	bl	10f44 <__errno_location@plt>
   1258c:	mov	r1, #2
   12590:	b	11f5c <__mempcpy_chk@plt+0xf4c>
   12594:	mov	r1, #1024	; 0x400
   12598:	bl	10f20 <getcwd@plt>
   1259c:	cmp	r0, #0
   125a0:	beq	1260c <__mempcpy_chk@plt+0x15fc>
   125a4:	mov	r0, r5
   125a8:	mov	r1, #0
   125ac:	bl	10e6c <rawmemchr@plt>
   125b0:	mov	r6, r0
   125b4:	ldrb	r0, [r8]
   125b8:	cmp	r0, #0
   125bc:	bne	12000 <__mempcpy_chk@plt+0xff0>
   125c0:	mov	r0, #0
   125c4:	str	r0, [sp, #20]
   125c8:	add	r0, r5, #1
   125cc:	cmp	r6, r0
   125d0:	bls	125e4 <__mempcpy_chk@plt+0x15d4>
   125d4:	mov	r0, r6
   125d8:	ldrb	r1, [r0, #-1]!
   125dc:	cmp	r1, #47	; 0x2f
   125e0:	moveq	r6, r0
   125e4:	mov	r4, #0
   125e8:	ldr	r0, [sp, #20]
   125ec:	cmp	r0, #0
   125f0:	beq	12664 <__mempcpy_chk@plt+0x1654>
   125f4:	bl	130b4 <__mempcpy_chk@plt+0x20a4>
   125f8:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   125fc:	ldr	r1, [sp, #12]
   12600:	cmp	r0, r1
   12604:	bne	12674 <__mempcpy_chk@plt+0x1664>
   12608:	b	12678 <__mempcpy_chk@plt+0x1668>
   1260c:	bl	10f44 <__errno_location@plt>
   12610:	ldr	r5, [sp, #8]
   12614:	mov	r6, r0
   12618:	add	r9, sp, #48	; 0x30
   1261c:	ldr	r0, [r6]
   12620:	cmp	r0, #34	; 0x22
   12624:	bne	12654 <__mempcpy_chk@plt+0x1644>
   12628:	mov	r0, r9
   1262c:	bl	15d78 <__mempcpy_chk@plt+0x4d68>
   12630:	cmp	r0, #0
   12634:	beq	126d8 <__mempcpy_chk@plt+0x16c8>
   12638:	ldr	r5, [sp, #48]	; 0x30
   1263c:	ldr	r1, [sp, #52]	; 0x34
   12640:	mov	r0, r5
   12644:	bl	10f20 <getcwd@plt>
   12648:	cmp	r0, #0
   1264c:	beq	1261c <__mempcpy_chk@plt+0x160c>
   12650:	b	125a4 <__mempcpy_chk@plt+0x1594>
   12654:	cmp	r0, #12
   12658:	beq	126d8 <__mempcpy_chk@plt+0x16c8>
   1265c:	mov	r4, #1
   12660:	mov	r6, r5
   12664:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   12668:	ldr	r1, [sp, #12]
   1266c:	cmp	r0, r1
   12670:	beq	12678 <__mempcpy_chk@plt+0x1668>
   12674:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   12678:	ldr	r0, [sp, #1184]	; 0x4a0
   1267c:	ldr	r1, [sp, #16]
   12680:	cmp	r0, r1
   12684:	beq	1268c <__mempcpy_chk@plt+0x167c>
   12688:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   1268c:	cmp	r4, #0
   12690:	beq	126b8 <__mempcpy_chk@plt+0x16a8>
   12694:	ldr	r0, [sp, #48]	; 0x30
   12698:	ldr	r1, [sp, #8]
   1269c:	mov	r4, #0
   126a0:	cmp	r0, r1
   126a4:	beq	11f64 <__mempcpy_chk@plt+0xf54>
   126a8:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   126ac:	mov	r0, r4
   126b0:	sub	sp, fp, #28
   126b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126b8:	mov	r0, #0
   126bc:	strb	r0, [r6], #1
   126c0:	add	r0, sp, #48	; 0x30
   126c4:	sub	r1, r6, r5
   126c8:	bl	15d10 <__mempcpy_chk@plt+0x4d00>
   126cc:	mov	r4, r0
   126d0:	cmp	r0, #0
   126d4:	bne	11f64 <__mempcpy_chk@plt+0xf54>
   126d8:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   126dc:	bl	10f44 <__errno_location@plt>
   126e0:	mov	r1, #40	; 0x28
   126e4:	str	r1, [r0]
   126e8:	mov	r4, #1
   126ec:	ldr	r0, [sp, #20]
   126f0:	cmp	r0, #0
   126f4:	bne	125f4 <__mempcpy_chk@plt+0x15e4>
   126f8:	b	12664 <__mempcpy_chk@plt+0x1654>
   126fc:	movw	r1, #33116	; 0x815c
   12700:	movt	r1, #2
   12704:	str	r0, [r1, #4]
   12708:	bx	lr
   1270c:	movw	r1, #33116	; 0x815c
   12710:	movt	r1, #2
   12714:	strb	r0, [r1]
   12718:	bx	lr
   1271c:	push	{r4, r5, r6, sl, fp, lr}
   12720:	add	fp, sp, #16
   12724:	sub	sp, sp, #8
   12728:	movw	r0, #33092	; 0x8144
   1272c:	movt	r0, #2
   12730:	ldr	r0, [r0]
   12734:	bl	16bd8 <__mempcpy_chk@plt+0x5bc8>
   12738:	cmp	r0, #0
   1273c:	beq	12764 <__mempcpy_chk@plt+0x1754>
   12740:	movw	r5, #33116	; 0x815c
   12744:	movt	r5, #2
   12748:	ldrb	r0, [r5]
   1274c:	cmp	r0, #0
   12750:	beq	12790 <__mempcpy_chk@plt+0x1780>
   12754:	bl	10f44 <__errno_location@plt>
   12758:	ldr	r0, [r0]
   1275c:	cmp	r0, #32
   12760:	bne	12790 <__mempcpy_chk@plt+0x1780>
   12764:	movw	r0, #33088	; 0x8140
   12768:	movt	r0, #2
   1276c:	ldr	r0, [r0]
   12770:	bl	16bd8 <__mempcpy_chk@plt+0x5bc8>
   12774:	cmp	r0, #0
   12778:	subeq	sp, fp, #16
   1277c:	popeq	{r4, r5, r6, sl, fp, pc}
   12780:	movw	r0, #33004	; 0x80ec
   12784:	movt	r0, #2
   12788:	ldr	r0, [r0]
   1278c:	bl	10e18 <_exit@plt>
   12790:	movw	r1, #30948	; 0x78e4
   12794:	mov	r0, #0
   12798:	mov	r2, #5
   1279c:	movt	r1, #1
   127a0:	bl	10e48 <dcgettext@plt>
   127a4:	ldr	r6, [r5, #4]
   127a8:	mov	r4, r0
   127ac:	bl	10f44 <__errno_location@plt>
   127b0:	ldr	r5, [r0]
   127b4:	cmp	r6, #0
   127b8:	bne	127d4 <__mempcpy_chk@plt+0x17c4>
   127bc:	movw	r2, #30964	; 0x78f4
   127c0:	mov	r0, #0
   127c4:	mov	r1, r5
   127c8:	mov	r3, r4
   127cc:	movt	r2, #1
   127d0:	b	127f4 <__mempcpy_chk@plt+0x17e4>
   127d4:	mov	r0, r6
   127d8:	bl	15970 <__mempcpy_chk@plt+0x4960>
   127dc:	movw	r2, #30960	; 0x78f0
   127e0:	mov	r3, r0
   127e4:	str	r4, [sp]
   127e8:	mov	r0, #0
   127ec:	mov	r1, r5
   127f0:	movt	r2, #1
   127f4:	bl	10ecc <error@plt>
   127f8:	movw	r0, #33004	; 0x80ec
   127fc:	movt	r0, #2
   12800:	ldr	r0, [r0]
   12804:	bl	10e18 <_exit@plt>
   12808:	push	{r4, r5, r6, r7, fp, lr}
   1280c:	add	fp, sp, #16
   12810:	cmp	r0, #0
   12814:	popeq	{r4, r5, r6, r7, fp, pc}
   12818:	mov	r5, r0
   1281c:	mov	r0, #24
   12820:	mov	r6, r2
   12824:	mov	r7, r1
   12828:	bl	1655c <__mempcpy_chk@plt+0x554c>
   1282c:	mov	r4, r0
   12830:	mov	r0, r7
   12834:	bl	16a7c <__mempcpy_chk@plt+0x5a6c>
   12838:	str	r0, [r4]
   1283c:	ldrd	r0, [r6, #96]	; 0x60
   12840:	str	r1, [r4, #12]
   12844:	str	r0, [r4, #8]
   12848:	ldrd	r0, [r6]
   1284c:	str	r1, [r4, #20]
   12850:	str	r0, [r4, #16]
   12854:	mov	r0, r5
   12858:	mov	r1, r4
   1285c:	bl	139d0 <__mempcpy_chk@plt+0x29c0>
   12860:	cmp	r0, #0
   12864:	beq	12880 <__mempcpy_chk@plt+0x1870>
   12868:	cmp	r0, r4
   1286c:	beq	1287c <__mempcpy_chk@plt+0x186c>
   12870:	mov	r0, r4
   12874:	pop	{r4, r5, r6, r7, fp, lr}
   12878:	b	13d5c <__mempcpy_chk@plt+0x2d4c>
   1287c:	pop	{r4, r5, r6, r7, fp, pc}
   12880:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   12884:	cmp	r0, #0
   12888:	moveq	r0, #0
   1288c:	bxeq	lr
   12890:	push	{r4, r5, fp, lr}
   12894:	add	fp, sp, #8
   12898:	sub	sp, sp, #24
   1289c:	str	r1, [sp]
   128a0:	mov	r1, sp
   128a4:	ldrd	r4, [r2, #96]	; 0x60
   128a8:	str	r5, [sp, #12]
   128ac:	str	r4, [sp, #8]
   128b0:	ldrd	r2, [r2]
   128b4:	str	r3, [sp, #20]
   128b8:	str	r2, [sp, #16]
   128bc:	bl	12ad0 <__mempcpy_chk@plt+0x1ac0>
   128c0:	cmp	r0, #0
   128c4:	movwne	r0, #1
   128c8:	sub	sp, fp, #8
   128cc:	pop	{r4, r5, fp, pc}
   128d0:	push	{r4, r5, r6, sl, fp, lr}
   128d4:	add	fp, sp, #16
   128d8:	mov	r4, r0
   128dc:	bl	10f44 <__errno_location@plt>
   128e0:	ldr	r6, [r0]
   128e4:	mov	r5, r0
   128e8:	mov	r0, r4
   128ec:	bl	10e00 <free@plt>
   128f0:	str	r6, [r5]
   128f4:	pop	{r4, r5, r6, sl, fp, pc}
   128f8:	ldr	r0, [r0, #8]
   128fc:	bx	lr
   12900:	ldr	r0, [r0, #12]
   12904:	bx	lr
   12908:	ldr	r0, [r0, #16]
   1290c:	bx	lr
   12910:	ldm	r0, {r2, ip}
   12914:	mov	r0, #0
   12918:	cmp	r2, ip
   1291c:	bxcs	lr
   12920:	mov	r0, #0
   12924:	ldr	r1, [r2]
   12928:	cmp	r1, #0
   1292c:	beq	12950 <__mempcpy_chk@plt+0x1940>
   12930:	mov	r3, #0
   12934:	mov	r1, r2
   12938:	ldr	r1, [r1, #4]
   1293c:	add	r3, r3, #1
   12940:	cmp	r1, #0
   12944:	bne	12938 <__mempcpy_chk@plt+0x1928>
   12948:	cmp	r3, r0
   1294c:	movhi	r0, r3
   12950:	add	r2, r2, #8
   12954:	cmp	r2, ip
   12958:	bcc	12924 <__mempcpy_chk@plt+0x1914>
   1295c:	bx	lr
   12960:	push	{fp, lr}
   12964:	mov	fp, sp
   12968:	ldm	r0, {r3, ip}
   1296c:	mov	lr, #0
   12970:	mov	r1, #0
   12974:	cmp	r3, ip
   12978:	bcs	129b4 <__mempcpy_chk@plt+0x19a4>
   1297c:	mov	r1, #0
   12980:	mov	lr, #0
   12984:	ldr	r2, [r3]
   12988:	cmp	r2, #0
   1298c:	beq	129a8 <__mempcpy_chk@plt+0x1998>
   12990:	mov	r2, r3
   12994:	ldr	r2, [r2, #4]
   12998:	add	r1, r1, #1
   1299c:	cmp	r2, #0
   129a0:	bne	12994 <__mempcpy_chk@plt+0x1984>
   129a4:	add	lr, lr, #1
   129a8:	add	r3, r3, #8
   129ac:	cmp	r3, ip
   129b0:	bcc	12984 <__mempcpy_chk@plt+0x1974>
   129b4:	ldr	r2, [r0, #12]
   129b8:	cmp	lr, r2
   129bc:	bne	129d4 <__mempcpy_chk@plt+0x19c4>
   129c0:	ldr	r2, [r0, #16]
   129c4:	mov	r0, #1
   129c8:	cmp	r1, r2
   129cc:	movne	r0, #0
   129d0:	pop	{fp, pc}
   129d4:	mov	r0, #0
   129d8:	pop	{fp, pc}
   129dc:	nop	{0}
   129e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   129e4:	add	fp, sp, #24
   129e8:	sub	sp, sp, #8
   129ec:	ldr	r6, [r0]
   129f0:	ldmib	r0, {r2, r7, r8}
   129f4:	ldr	r3, [r0, #16]
   129f8:	mov	r4, r1
   129fc:	mov	r5, #0
   12a00:	cmp	r6, r2
   12a04:	bcs	12a44 <__mempcpy_chk@plt+0x1a34>
   12a08:	mov	r5, #0
   12a0c:	ldr	r0, [r6]
   12a10:	cmp	r0, #0
   12a14:	beq	12a38 <__mempcpy_chk@plt+0x1a28>
   12a18:	mov	r0, #0
   12a1c:	mov	r1, r6
   12a20:	ldr	r1, [r1, #4]
   12a24:	add	r0, r0, #1
   12a28:	cmp	r1, #0
   12a2c:	bne	12a20 <__mempcpy_chk@plt+0x1a10>
   12a30:	cmp	r0, r5
   12a34:	movhi	r5, r0
   12a38:	add	r6, r6, #8
   12a3c:	cmp	r6, r2
   12a40:	bcc	12a0c <__mempcpy_chk@plt+0x19fc>
   12a44:	movw	r2, #30967	; 0x78f7
   12a48:	mov	r0, r4
   12a4c:	mov	r1, #1
   12a50:	movt	r2, #1
   12a54:	bl	10f80 <__fprintf_chk@plt>
   12a58:	movw	r2, #30991	; 0x790f
   12a5c:	mov	r0, r4
   12a60:	mov	r1, #1
   12a64:	mov	r3, r7
   12a68:	movt	r2, #1
   12a6c:	bl	10f80 <__fprintf_chk@plt>
   12a70:	vldr	d16, [pc, #80]	; 12ac8 <__mempcpy_chk@plt+0x1ab8>
   12a74:	vmov	s0, r8
   12a78:	movw	r2, #31015	; 0x7927
   12a7c:	mov	r0, r4
   12a80:	mov	r1, #1
   12a84:	mov	r3, r8
   12a88:	vcvt.f64.u32	d17, s0
   12a8c:	vmov	s0, r7
   12a90:	movt	r2, #1
   12a94:	vcvt.f64.u32	d18, s0
   12a98:	vmul.f64	d16, d17, d16
   12a9c:	vdiv.f64	d16, d16, d18
   12aa0:	vstr	d16, [sp]
   12aa4:	bl	10f80 <__fprintf_chk@plt>
   12aa8:	movw	r2, #31048	; 0x7948
   12aac:	mov	r0, r4
   12ab0:	mov	r1, #1
   12ab4:	mov	r3, r5
   12ab8:	movt	r2, #1
   12abc:	sub	sp, fp, #24
   12ac0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ac4:	b	10f80 <__fprintf_chk@plt>
   12ac8:	andeq	r0, r0, r0
   12acc:	subsmi	r0, r9, r0
   12ad0:	push	{r4, r5, r6, r7, fp, lr}
   12ad4:	add	fp, sp, #16
   12ad8:	mov	r4, r1
   12adc:	ldr	r1, [r0, #8]
   12ae0:	ldr	r2, [r0, #24]
   12ae4:	mov	r5, r0
   12ae8:	mov	r0, r4
   12aec:	blx	r2
   12af0:	ldr	r1, [r5, #8]
   12af4:	cmp	r0, r1
   12af8:	bcs	12b64 <__mempcpy_chk@plt+0x1b54>
   12afc:	ldr	r7, [r5]
   12b00:	mov	r6, #0
   12b04:	ldr	r1, [r7, r0, lsl #3]!
   12b08:	cmp	r1, #0
   12b0c:	cmpne	r7, #0
   12b10:	bne	12b20 <__mempcpy_chk@plt+0x1b10>
   12b14:	mov	r0, r6
   12b18:	pop	{r4, r5, r6, r7, fp, pc}
   12b1c:	ldr	r1, [r7]
   12b20:	cmp	r1, r4
   12b24:	beq	12b4c <__mempcpy_chk@plt+0x1b3c>
   12b28:	ldr	r2, [r5, #28]
   12b2c:	mov	r0, r4
   12b30:	blx	r2
   12b34:	cmp	r0, #0
   12b38:	bne	12b58 <__mempcpy_chk@plt+0x1b48>
   12b3c:	ldr	r7, [r7, #4]
   12b40:	cmp	r7, #0
   12b44:	bne	12b1c <__mempcpy_chk@plt+0x1b0c>
   12b48:	b	12b14 <__mempcpy_chk@plt+0x1b04>
   12b4c:	mov	r6, r4
   12b50:	mov	r0, r6
   12b54:	pop	{r4, r5, r6, r7, fp, pc}
   12b58:	ldr	r6, [r7]
   12b5c:	mov	r0, r6
   12b60:	pop	{r4, r5, r6, r7, fp, pc}
   12b64:	bl	10ff8 <abort@plt>
   12b68:	ldr	r1, [r0, #16]
   12b6c:	cmp	r1, #0
   12b70:	moveq	r0, #0
   12b74:	bxeq	lr
   12b78:	ldm	r0, {r1, r2}
   12b7c:	cmp	r1, r2
   12b80:	bcs	12b98 <__mempcpy_chk@plt+0x1b88>
   12b84:	ldr	r0, [r1], #8
   12b88:	cmp	r0, #0
   12b8c:	bxne	lr
   12b90:	cmp	r1, r2
   12b94:	bcc	12b84 <__mempcpy_chk@plt+0x1b74>
   12b98:	push	{fp, lr}
   12b9c:	mov	fp, sp
   12ba0:	bl	10ff8 <abort@plt>
   12ba4:	push	{r4, r5, fp, lr}
   12ba8:	add	fp, sp, #8
   12bac:	mov	r5, r1
   12bb0:	ldr	r1, [r0, #8]
   12bb4:	ldr	r2, [r0, #24]
   12bb8:	mov	r4, r0
   12bbc:	mov	r0, r5
   12bc0:	blx	r2
   12bc4:	ldr	r1, [r4, #8]
   12bc8:	cmp	r0, r1
   12bcc:	bcs	12c28 <__mempcpy_chk@plt+0x1c18>
   12bd0:	ldr	r1, [r4]
   12bd4:	add	r2, r1, r0, lsl #3
   12bd8:	ldr	r3, [r2]
   12bdc:	ldr	r2, [r2, #4]
   12be0:	cmp	r3, r5
   12be4:	beq	12bf4 <__mempcpy_chk@plt+0x1be4>
   12be8:	cmp	r2, #0
   12bec:	bne	12bd8 <__mempcpy_chk@plt+0x1bc8>
   12bf0:	b	12c00 <__mempcpy_chk@plt+0x1bf0>
   12bf4:	cmp	r2, #0
   12bf8:	ldrne	r0, [r2]
   12bfc:	popne	{r4, r5, fp, pc}
   12c00:	ldr	r2, [r4, #4]
   12c04:	add	r0, r1, r0, lsl #3
   12c08:	add	r1, r0, #8
   12c0c:	cmp	r1, r2
   12c10:	movcs	r0, #0
   12c14:	popcs	{r4, r5, fp, pc}
   12c18:	ldr	r0, [r1], #8
   12c1c:	cmp	r0, #0
   12c20:	popne	{r4, r5, fp, pc}
   12c24:	b	12c0c <__mempcpy_chk@plt+0x1bfc>
   12c28:	bl	10ff8 <abort@plt>
   12c2c:	push	{r4, r5, fp, lr}
   12c30:	add	fp, sp, #8
   12c34:	ldm	r0, {r5, lr}
   12c38:	mov	ip, r0
   12c3c:	mov	r0, #0
   12c40:	cmp	r5, lr
   12c44:	bcs	12ca0 <__mempcpy_chk@plt+0x1c90>
   12c48:	mov	r0, #0
   12c4c:	ldr	r3, [r5]
   12c50:	cmp	r3, #0
   12c54:	cmpne	r5, #0
   12c58:	bne	12c6c <__mempcpy_chk@plt+0x1c5c>
   12c5c:	add	r5, r5, #8
   12c60:	cmp	r5, lr
   12c64:	bcc	12c4c <__mempcpy_chk@plt+0x1c3c>
   12c68:	b	12ca0 <__mempcpy_chk@plt+0x1c90>
   12c6c:	mov	r3, r5
   12c70:	cmp	r0, r2
   12c74:	popcs	{r4, r5, fp, pc}
   12c78:	ldr	r4, [r3]
   12c7c:	str	r4, [r1, r0, lsl #2]
   12c80:	add	r0, r0, #1
   12c84:	ldr	r3, [r3, #4]
   12c88:	cmp	r3, #0
   12c8c:	bne	12c70 <__mempcpy_chk@plt+0x1c60>
   12c90:	ldr	lr, [ip, #4]
   12c94:	add	r5, r5, #8
   12c98:	cmp	r5, lr
   12c9c:	bcc	12c4c <__mempcpy_chk@plt+0x1c3c>
   12ca0:	pop	{r4, r5, fp, pc}
   12ca4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ca8:	add	fp, sp, #24
   12cac:	mov	r5, r1
   12cb0:	ldr	r4, [r0]
   12cb4:	ldr	r1, [r0, #4]
   12cb8:	mov	r6, #0
   12cbc:	cmp	r4, r1
   12cc0:	bcs	12d3c <__mempcpy_chk@plt+0x1d2c>
   12cc4:	mov	r9, r2
   12cc8:	mov	r8, r0
   12ccc:	mov	r6, #0
   12cd0:	ldr	r0, [r4]
   12cd4:	cmp	r0, #0
   12cd8:	cmpne	r4, #0
   12cdc:	bne	12cf0 <__mempcpy_chk@plt+0x1ce0>
   12ce0:	add	r4, r4, #8
   12ce4:	cmp	r4, r1
   12ce8:	bcc	12cd0 <__mempcpy_chk@plt+0x1cc0>
   12cec:	b	12d3c <__mempcpy_chk@plt+0x1d2c>
   12cf0:	mov	r1, r9
   12cf4:	blx	r5
   12cf8:	cmp	r0, #0
   12cfc:	beq	12d3c <__mempcpy_chk@plt+0x1d2c>
   12d00:	mov	r7, r4
   12d04:	ldr	r7, [r7, #4]
   12d08:	add	r6, r6, #1
   12d0c:	cmp	r7, #0
   12d10:	beq	12d2c <__mempcpy_chk@plt+0x1d1c>
   12d14:	ldr	r0, [r7]
   12d18:	mov	r1, r9
   12d1c:	blx	r5
   12d20:	cmp	r0, #0
   12d24:	bne	12d04 <__mempcpy_chk@plt+0x1cf4>
   12d28:	b	12d3c <__mempcpy_chk@plt+0x1d2c>
   12d2c:	ldr	r1, [r8, #4]
   12d30:	add	r4, r4, #8
   12d34:	cmp	r4, r1
   12d38:	bcc	12cd0 <__mempcpy_chk@plt+0x1cc0>
   12d3c:	mov	r0, r6
   12d40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12d44:	ldrb	r2, [r0]
   12d48:	cmp	r2, #0
   12d4c:	moveq	r0, #0
   12d50:	bxeq	lr
   12d54:	add	r3, r0, #1
   12d58:	mov	r0, #0
   12d5c:	rsb	r0, r0, r0, lsl #5
   12d60:	uxtab	r0, r0, r2
   12d64:	udiv	r2, r0, r1
   12d68:	mls	r0, r2, r1, r0
   12d6c:	ldrb	r2, [r3], #1
   12d70:	cmp	r2, #0
   12d74:	bne	12d5c <__mempcpy_chk@plt+0x1d4c>
   12d78:	bx	lr
   12d7c:	movw	r1, #31072	; 0x7960
   12d80:	movt	r1, #1
   12d84:	vld1.32	{d16-d17}, [r1]!
   12d88:	ldr	r1, [r1]
   12d8c:	vst1.32	{d16-d17}, [r0]!
   12d90:	str	r1, [r0]
   12d94:	bx	lr
   12d98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d9c:	add	fp, sp, #24
   12da0:	movw	r9, #12260	; 0x2fe4
   12da4:	movw	r5, #12240	; 0x2fd0
   12da8:	cmp	r3, #0
   12dac:	mov	r6, r0
   12db0:	mov	r0, #40	; 0x28
   12db4:	mov	r7, r1
   12db8:	movt	r9, #1
   12dbc:	movt	r5, #1
   12dc0:	movne	r9, r3
   12dc4:	cmp	r2, #0
   12dc8:	movne	r5, r2
   12dcc:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   12dd0:	mov	r8, #0
   12dd4:	cmp	r0, #0
   12dd8:	beq	12fb8 <__mempcpy_chk@plt+0x1fa8>
   12ddc:	mov	r4, r0
   12de0:	cmp	r7, #0
   12de4:	beq	12e94 <__mempcpy_chk@plt+0x1e84>
   12de8:	movw	r0, #31072	; 0x7960
   12dec:	str	r7, [r4, #20]
   12df0:	movt	r0, #1
   12df4:	cmp	r7, r0
   12df8:	beq	12ea0 <__mempcpy_chk@plt+0x1e90>
   12dfc:	vldr	s2, [pc, #444]	; 12fc0 <__mempcpy_chk@plt+0x1fb0>
   12e00:	vldr	s0, [r7, #8]
   12e04:	vcmpe.f32	s0, s2
   12e08:	vmrs	APSR_nzcv, fpscr
   12e0c:	ble	12e78 <__mempcpy_chk@plt+0x1e68>
   12e10:	vldr	s4, [pc, #428]	; 12fc4 <__mempcpy_chk@plt+0x1fb4>
   12e14:	vcmpe.f32	s0, s4
   12e18:	vmrs	APSR_nzcv, fpscr
   12e1c:	bpl	12e78 <__mempcpy_chk@plt+0x1e68>
   12e20:	vldr	s4, [pc, #416]	; 12fc8 <__mempcpy_chk@plt+0x1fb8>
   12e24:	vldr	s6, [r7, #12]
   12e28:	vcmpe.f32	s6, s4
   12e2c:	vmrs	APSR_nzcv, fpscr
   12e30:	ble	12e78 <__mempcpy_chk@plt+0x1e68>
   12e34:	vldr	s4, [r7]
   12e38:	vcmpe.f32	s4, #0.0
   12e3c:	vmrs	APSR_nzcv, fpscr
   12e40:	blt	12e78 <__mempcpy_chk@plt+0x1e68>
   12e44:	vadd.f32	s2, s4, s2
   12e48:	vcmpe.f32	s2, s0
   12e4c:	vmrs	APSR_nzcv, fpscr
   12e50:	bpl	12e78 <__mempcpy_chk@plt+0x1e68>
   12e54:	vldr	s0, [r7, #4]
   12e58:	vmov.f32	s4, #112	; 0x3f800000  1.0
   12e5c:	vcmpe.f32	s0, s4
   12e60:	vmrs	APSR_nzcv, fpscr
   12e64:	bhi	12e78 <__mempcpy_chk@plt+0x1e68>
   12e68:	vcmpe.f32	s2, s0
   12e6c:	mov	r0, r7
   12e70:	vmrs	APSR_nzcv, fpscr
   12e74:	bmi	12ea0 <__mempcpy_chk@plt+0x1e90>
   12e78:	movw	r0, #31072	; 0x7960
   12e7c:	movt	r0, #1
   12e80:	str	r0, [r4, #20]
   12e84:	mov	r0, r4
   12e88:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   12e8c:	mov	r0, r8
   12e90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e94:	movw	r0, #31072	; 0x7960
   12e98:	movt	r0, #1
   12e9c:	str	r0, [r4, #20]
   12ea0:	ldrb	r1, [r0, #16]
   12ea4:	cmp	r1, #0
   12ea8:	bne	12ed4 <__mempcpy_chk@plt+0x1ec4>
   12eac:	vldr	s0, [r0, #8]
   12eb0:	vldr	s4, [pc, #276]	; 12fcc <__mempcpy_chk@plt+0x1fbc>
   12eb4:	vmov	s2, r6
   12eb8:	vcvt.f32.u32	s2, s2
   12ebc:	vdiv.f32	s2, s2, s0
   12ec0:	vcmpe.f32	s2, s4
   12ec4:	vcvt.u32.f32	s0, s2
   12ec8:	vmrs	APSR_nzcv, fpscr
   12ecc:	bge	12f54 <__mempcpy_chk@plt+0x1f44>
   12ed0:	vmov	r6, s0
   12ed4:	cmp	r6, #10
   12ed8:	movls	r6, #10
   12edc:	orr	r0, r6, #1
   12ee0:	cmn	r0, #1
   12ee4:	beq	12f54 <__mempcpy_chk@plt+0x1f44>
   12ee8:	ldr	r6, [fp, #8]
   12eec:	mov	r1, #3
   12ef0:	cmp	r0, #10
   12ef4:	bcc	12f2c <__mempcpy_chk@plt+0x1f1c>
   12ef8:	mov	r1, #3
   12efc:	mov	r3, #9
   12f00:	mov	r2, #12
   12f04:	udiv	r7, r0, r1
   12f08:	mls	r7, r7, r1, r0
   12f0c:	cmp	r7, #0
   12f10:	beq	12f2c <__mempcpy_chk@plt+0x1f1c>
   12f14:	add	r3, r3, r2
   12f18:	add	r2, r2, #8
   12f1c:	add	r1, r1, #2
   12f20:	add	r3, r3, #4
   12f24:	cmp	r3, r0
   12f28:	bcc	12f04 <__mempcpy_chk@plt+0x1ef4>
   12f2c:	udiv	r2, r0, r1
   12f30:	mls	r1, r2, r1, r0
   12f34:	cmp	r1, #0
   12f38:	bne	12f4c <__mempcpy_chk@plt+0x1f3c>
   12f3c:	add	r0, r0, #2
   12f40:	cmn	r0, #1
   12f44:	bne	12eec <__mempcpy_chk@plt+0x1edc>
   12f48:	b	12f54 <__mempcpy_chk@plt+0x1f44>
   12f4c:	cmp	r0, #536870912	; 0x20000000
   12f50:	bcc	12f6c <__mempcpy_chk@plt+0x1f5c>
   12f54:	mov	r0, #0
   12f58:	str	r0, [r4, #8]
   12f5c:	mov	r0, r4
   12f60:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   12f64:	mov	r0, r8
   12f68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12f6c:	cmp	r0, #0
   12f70:	str	r0, [r4, #8]
   12f74:	beq	12f5c <__mempcpy_chk@plt+0x1f4c>
   12f78:	mov	r1, #8
   12f7c:	bl	16b00 <__mempcpy_chk@plt+0x5af0>
   12f80:	cmp	r0, #0
   12f84:	str	r0, [r4]
   12f88:	beq	12f5c <__mempcpy_chk@plt+0x1f4c>
   12f8c:	mov	r1, #0
   12f90:	mov	r8, r4
   12f94:	str	r1, [r4, #12]
   12f98:	str	r1, [r4, #16]
   12f9c:	str	r5, [r4, #24]
   12fa0:	str	r9, [r4, #28]
   12fa4:	str	r6, [r4, #32]
   12fa8:	str	r1, [r4, #36]	; 0x24
   12fac:	ldr	r1, [r4, #8]
   12fb0:	add	r0, r0, r1, lsl #3
   12fb4:	str	r0, [r4, #4]
   12fb8:	mov	r0, r8
   12fbc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fc0:	stclcc	12, cr12, [ip, #820]	; 0x334
   12fc4:	svccc	0x00666666
   12fc8:	svccc	0x008ccccd
   12fcc:	svcmi	0x00800000
   12fd0:	ror	r2, r0, #3
   12fd4:	udiv	r2, r2, r1
   12fd8:	mul	r1, r2, r1
   12fdc:	rsb	r0, r1, r0, ror #3
   12fe0:	bx	lr
   12fe4:	sub	r0, r0, r1
   12fe8:	clz	r0, r0
   12fec:	lsr	r0, r0, #5
   12ff0:	bx	lr
   12ff4:	push	{r4, r5, r6, r7, fp, lr}
   12ff8:	add	fp, sp, #16
   12ffc:	mov	r4, r0
   13000:	ldr	r5, [r0]
   13004:	ldr	r0, [r0, #4]
   13008:	cmp	r5, r0
   1300c:	bcs	130a4 <__mempcpy_chk@plt+0x2094>
   13010:	mov	r6, #0
   13014:	ldr	r1, [r5]
   13018:	cmp	r1, #0
   1301c:	beq	13098 <__mempcpy_chk@plt+0x2088>
   13020:	ldr	r1, [r4, #32]
   13024:	ldr	r7, [r5, #4]
   13028:	cmp	r1, #0
   1302c:	mov	r0, r1
   13030:	movwne	r0, #1
   13034:	cmp	r7, #0
   13038:	beq	1307c <__mempcpy_chk@plt+0x206c>
   1303c:	tst	r0, #1
   13040:	beq	13050 <__mempcpy_chk@plt+0x2040>
   13044:	ldr	r0, [r7]
   13048:	blx	r1
   1304c:	ldr	r1, [r4, #32]
   13050:	str	r6, [r7]
   13054:	cmp	r1, #0
   13058:	ldr	r0, [r4, #36]	; 0x24
   1305c:	ldr	r2, [r7, #4]
   13060:	str	r0, [r7, #4]
   13064:	mov	r0, r1
   13068:	str	r7, [r4, #36]	; 0x24
   1306c:	mov	r7, r2
   13070:	movwne	r0, #1
   13074:	cmp	r2, #0
   13078:	bne	1303c <__mempcpy_chk@plt+0x202c>
   1307c:	cmp	r0, #0
   13080:	beq	1308c <__mempcpy_chk@plt+0x207c>
   13084:	ldr	r0, [r5]
   13088:	blx	r1
   1308c:	str	r6, [r5]
   13090:	str	r6, [r5, #4]
   13094:	ldr	r0, [r4, #4]
   13098:	add	r5, r5, #8
   1309c:	cmp	r5, r0
   130a0:	bcc	13014 <__mempcpy_chk@plt+0x2004>
   130a4:	mov	r0, #0
   130a8:	str	r0, [r4, #12]
   130ac:	str	r0, [r4, #16]
   130b0:	pop	{r4, r5, r6, r7, fp, pc}
   130b4:	push	{r4, r5, r6, sl, fp, lr}
   130b8:	add	fp, sp, #16
   130bc:	mov	r4, r0
   130c0:	ldr	r0, [r0, #32]
   130c4:	cmp	r0, #0
   130c8:	ldrne	r0, [r4, #16]
   130cc:	cmpne	r0, #0
   130d0:	beq	13138 <__mempcpy_chk@plt+0x2128>
   130d4:	ldr	r5, [r4]
   130d8:	ldr	r1, [r4, #4]
   130dc:	cmp	r5, r1
   130e0:	bcc	130f4 <__mempcpy_chk@plt+0x20e4>
   130e4:	b	13138 <__mempcpy_chk@plt+0x2128>
   130e8:	add	r5, r5, #8
   130ec:	cmp	r5, r1
   130f0:	bcs	13138 <__mempcpy_chk@plt+0x2128>
   130f4:	ldr	r0, [r5]
   130f8:	cmp	r0, #0
   130fc:	cmpne	r5, #0
   13100:	beq	130e8 <__mempcpy_chk@plt+0x20d8>
   13104:	ldr	r1, [r4, #32]
   13108:	blx	r1
   1310c:	ldr	r6, [r5, #4]
   13110:	cmp	r6, #0
   13114:	beq	13130 <__mempcpy_chk@plt+0x2120>
   13118:	ldr	r1, [r4, #32]
   1311c:	ldr	r0, [r6]
   13120:	blx	r1
   13124:	ldr	r6, [r6, #4]
   13128:	cmp	r6, #0
   1312c:	bne	13118 <__mempcpy_chk@plt+0x2108>
   13130:	ldr	r1, [r4, #4]
   13134:	b	130e8 <__mempcpy_chk@plt+0x20d8>
   13138:	ldr	r5, [r4]
   1313c:	ldr	r1, [r4, #4]
   13140:	cmp	r5, r1
   13144:	bcc	13158 <__mempcpy_chk@plt+0x2148>
   13148:	b	13180 <__mempcpy_chk@plt+0x2170>
   1314c:	add	r5, r5, #8
   13150:	cmp	r5, r1
   13154:	bcs	13180 <__mempcpy_chk@plt+0x2170>
   13158:	ldr	r0, [r5, #4]
   1315c:	cmp	r0, #0
   13160:	beq	1314c <__mempcpy_chk@plt+0x213c>
   13164:	ldr	r6, [r0, #4]
   13168:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   1316c:	cmp	r6, #0
   13170:	mov	r0, r6
   13174:	bne	13164 <__mempcpy_chk@plt+0x2154>
   13178:	ldr	r1, [r4, #4]
   1317c:	b	1314c <__mempcpy_chk@plt+0x213c>
   13180:	ldr	r0, [r4, #36]	; 0x24
   13184:	cmp	r0, #0
   13188:	beq	131a0 <__mempcpy_chk@plt+0x2190>
   1318c:	ldr	r5, [r0, #4]
   13190:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   13194:	cmp	r5, #0
   13198:	mov	r0, r5
   1319c:	bne	1318c <__mempcpy_chk@plt+0x217c>
   131a0:	ldr	r0, [r4]
   131a4:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   131a8:	mov	r0, r4
   131ac:	pop	{r4, r5, r6, sl, fp, lr}
   131b0:	b	128d0 <__mempcpy_chk@plt+0x18c0>
   131b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131b8:	add	fp, sp, #28
   131bc:	sub	sp, sp, #44	; 0x2c
   131c0:	mov	r7, r0
   131c4:	mov	r4, r0
   131c8:	ldr	r0, [r7, #20]!
   131cc:	ldrb	r2, [r0, #16]
   131d0:	cmp	r2, #0
   131d4:	bne	13204 <__mempcpy_chk@plt+0x21f4>
   131d8:	vldr	s0, [r0, #8]
   131dc:	vldr	s4, [pc, #576]	; 13424 <__mempcpy_chk@plt+0x2414>
   131e0:	vmov	s2, r1
   131e4:	mov	r5, #0
   131e8:	vcvt.f32.u32	s2, s2
   131ec:	vdiv.f32	s2, s2, s0
   131f0:	vcmpe.f32	s2, s4
   131f4:	vcvt.u32.f32	s0, s2
   131f8:	vmrs	APSR_nzcv, fpscr
   131fc:	bge	13328 <__mempcpy_chk@plt+0x2318>
   13200:	vmov	r1, s0
   13204:	cmp	r1, #10
   13208:	mov	r5, #0
   1320c:	movls	r1, #10
   13210:	orr	r6, r1, #1
   13214:	cmn	r6, #1
   13218:	bne	1322c <__mempcpy_chk@plt+0x221c>
   1321c:	b	13328 <__mempcpy_chk@plt+0x2318>
   13220:	add	r6, r6, #2
   13224:	cmn	r6, #1
   13228:	beq	13328 <__mempcpy_chk@plt+0x2318>
   1322c:	mov	r0, #3
   13230:	cmp	r6, #10
   13234:	bcc	1326c <__mempcpy_chk@plt+0x225c>
   13238:	mov	r0, #3
   1323c:	mov	r2, #9
   13240:	mov	r1, #12
   13244:	udiv	r3, r6, r0
   13248:	mls	r3, r3, r0, r6
   1324c:	cmp	r3, #0
   13250:	beq	1326c <__mempcpy_chk@plt+0x225c>
   13254:	add	r2, r2, r1
   13258:	add	r1, r1, #8
   1325c:	add	r0, r0, #2
   13260:	add	r2, r2, #4
   13264:	cmp	r2, r6
   13268:	bcc	13244 <__mempcpy_chk@plt+0x2234>
   1326c:	udiv	r1, r6, r0
   13270:	mls	r0, r1, r0, r6
   13274:	cmp	r0, #0
   13278:	beq	13220 <__mempcpy_chk@plt+0x2210>
   1327c:	sub	r0, r6, #1
   13280:	cmn	r0, #-536870910	; 0xe0000002
   13284:	bhi	13328 <__mempcpy_chk@plt+0x2318>
   13288:	ldr	r0, [r4, #8]
   1328c:	cmp	r6, r0
   13290:	bne	132a4 <__mempcpy_chk@plt+0x2294>
   13294:	mov	r5, #1
   13298:	mov	r0, r5
   1329c:	sub	sp, fp, #28
   132a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132a4:	mov	r0, r6
   132a8:	mov	r1, #8
   132ac:	bl	16b00 <__mempcpy_chk@plt+0x5af0>
   132b0:	cmp	r0, #0
   132b4:	str	r0, [sp, #4]
   132b8:	beq	13328 <__mempcpy_chk@plt+0x2318>
   132bc:	mov	r1, #0
   132c0:	add	r0, r0, r6, lsl #3
   132c4:	str	r6, [sp, #12]
   132c8:	add	r5, sp, #4
   132cc:	mov	sl, r4
   132d0:	mov	r2, #0
   132d4:	str	r1, [sp, #16]
   132d8:	str	r1, [sp, #20]
   132dc:	str	r0, [sp, #8]
   132e0:	add	r0, r5, #20
   132e4:	mov	r1, r4
   132e8:	vld1.32	{d16-d17}, [r7]
   132ec:	vst1.32	{d16-d17}, [r0]
   132f0:	ldr	r0, [sl, #36]!	; 0x24
   132f4:	str	r0, [sp, #40]	; 0x28
   132f8:	mov	r0, r5
   132fc:	bl	13428 <__mempcpy_chk@plt+0x2418>
   13300:	cmp	r0, #0
   13304:	beq	13334 <__mempcpy_chk@plt+0x2324>
   13308:	ldr	r0, [r4]
   1330c:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   13310:	mov	r0, #36	; 0x24
   13314:	vld1.32	{d16-d17}, [r5], r0
   13318:	vst1.32	{d16-d17}, [r4], r0
   1331c:	ldr	r0, [r5]
   13320:	mov	r5, #1
   13324:	str	r0, [r4]
   13328:	mov	r0, r5
   1332c:	sub	sp, fp, #28
   13330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13334:	ldr	r0, [sp, #40]	; 0x28
   13338:	str	r0, [sl]
   1333c:	ldr	r0, [sp, #8]
   13340:	ldr	r8, [sp, #4]
   13344:	cmp	r8, r0
   13348:	str	r0, [sp]
   1334c:	bcs	133f0 <__mempcpy_chk@plt+0x23e0>
   13350:	mov	r9, #0
   13354:	ldr	r0, [r8]
   13358:	cmp	r0, #0
   1335c:	beq	133e0 <__mempcpy_chk@plt+0x23d0>
   13360:	ldr	r6, [r8, #4]
   13364:	cmp	r6, #0
   13368:	beq	133dc <__mempcpy_chk@plt+0x23cc>
   1336c:	ldr	r1, [r4, #8]
   13370:	ldr	r5, [r6]
   13374:	ldr	r2, [r4, #24]
   13378:	mov	r0, r5
   1337c:	blx	r2
   13380:	ldr	r1, [r4, #8]
   13384:	cmp	r0, r1
   13388:	bcs	13420 <__mempcpy_chk@plt+0x2410>
   1338c:	ldr	r3, [r4]
   13390:	ldr	r2, [r6, #4]
   13394:	ldr	r7, [r3, r0, lsl #3]
   13398:	cmp	r7, #0
   1339c:	beq	133ac <__mempcpy_chk@plt+0x239c>
   133a0:	add	r0, r3, r0, lsl #3
   133a4:	add	r0, r0, #4
   133a8:	b	133c4 <__mempcpy_chk@plt+0x23b4>
   133ac:	str	r5, [r3, r0, lsl #3]
   133b0:	ldr	r0, [r4, #12]
   133b4:	add	r0, r0, #1
   133b8:	str	r0, [r4, #12]
   133bc:	mov	r0, sl
   133c0:	str	r9, [r6]
   133c4:	ldr	r3, [r0]
   133c8:	cmp	r2, #0
   133cc:	str	r3, [r6, #4]
   133d0:	str	r6, [r0]
   133d4:	mov	r6, r2
   133d8:	bne	13370 <__mempcpy_chk@plt+0x2360>
   133dc:	str	r9, [r8, #4]
   133e0:	ldr	r0, [sp]
   133e4:	add	r8, r8, #8
   133e8:	cmp	r8, r0
   133ec:	bcc	13354 <__mempcpy_chk@plt+0x2344>
   133f0:	add	r1, sp, #4
   133f4:	mov	r0, r4
   133f8:	mov	r2, #0
   133fc:	mov	r5, #0
   13400:	bl	13428 <__mempcpy_chk@plt+0x2418>
   13404:	cmp	r0, #0
   13408:	beq	13420 <__mempcpy_chk@plt+0x2410>
   1340c:	ldr	r0, [sp, #4]
   13410:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   13414:	mov	r0, r5
   13418:	sub	sp, fp, #28
   1341c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13420:	bl	10ff8 <abort@plt>
   13424:	svcmi	0x00800000
   13428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1342c:	add	fp, sp, #28
   13430:	sub	sp, sp, #4
   13434:	ldr	r8, [r1]
   13438:	ldr	r3, [r1, #4]
   1343c:	mov	r6, r0
   13440:	mov	r0, #1
   13444:	str	r1, [sp]
   13448:	cmp	r8, r3
   1344c:	bcs	1364c <__mempcpy_chk@plt+0x263c>
   13450:	add	r9, r6, #36	; 0x24
   13454:	cmp	r2, #0
   13458:	beq	13504 <__mempcpy_chk@plt+0x24f4>
   1345c:	mov	sl, #0
   13460:	ldr	r1, [r8]
   13464:	cmp	r1, #0
   13468:	beq	134f4 <__mempcpy_chk@plt+0x24e4>
   1346c:	ldr	r7, [r8, #4]
   13470:	cmp	r7, #0
   13474:	beq	134f0 <__mempcpy_chk@plt+0x24e0>
   13478:	ldr	r1, [r6, #8]
   1347c:	ldr	r4, [r7]
   13480:	ldr	r2, [r6, #24]
   13484:	mov	r0, r4
   13488:	blx	r2
   1348c:	ldr	r1, [r6, #8]
   13490:	cmp	r0, r1
   13494:	bcs	13660 <__mempcpy_chk@plt+0x2650>
   13498:	ldr	r3, [r6]
   1349c:	ldr	r2, [r7, #4]
   134a0:	ldr	r5, [r3, r0, lsl #3]
   134a4:	cmp	r5, #0
   134a8:	beq	134b8 <__mempcpy_chk@plt+0x24a8>
   134ac:	add	r0, r3, r0, lsl #3
   134b0:	add	r0, r0, #4
   134b4:	b	134d0 <__mempcpy_chk@plt+0x24c0>
   134b8:	str	r4, [r3, r0, lsl #3]
   134bc:	ldr	r0, [r6, #12]
   134c0:	add	r0, r0, #1
   134c4:	str	r0, [r6, #12]
   134c8:	mov	r0, r9
   134cc:	str	sl, [r7]
   134d0:	ldr	r3, [r0]
   134d4:	cmp	r2, #0
   134d8:	str	r3, [r7, #4]
   134dc:	str	r7, [r0]
   134e0:	mov	r7, r2
   134e4:	bne	1347c <__mempcpy_chk@plt+0x246c>
   134e8:	ldr	r0, [sp]
   134ec:	ldr	r3, [r0, #4]
   134f0:	str	sl, [r8, #4]
   134f4:	add	r8, r8, #8
   134f8:	cmp	r8, r3
   134fc:	bcc	13460 <__mempcpy_chk@plt+0x2450>
   13500:	b	13648 <__mempcpy_chk@plt+0x2638>
   13504:	mov	r5, #0
   13508:	ldr	sl, [r8]
   1350c:	cmp	sl, #0
   13510:	beq	1363c <__mempcpy_chk@plt+0x262c>
   13514:	ldr	r7, [r8, #4]
   13518:	ldr	r1, [r6, #8]
   1351c:	cmp	r7, #0
   13520:	beq	1359c <__mempcpy_chk@plt+0x258c>
   13524:	mov	sl, #0
   13528:	ldr	r4, [r7]
   1352c:	ldr	r2, [r6, #24]
   13530:	mov	r0, r4
   13534:	blx	r2
   13538:	ldr	r1, [r6, #8]
   1353c:	cmp	r0, r1
   13540:	bcs	13660 <__mempcpy_chk@plt+0x2650>
   13544:	ldr	r3, [r6]
   13548:	ldr	r2, [r7, #4]
   1354c:	ldr	r5, [r3, r0, lsl #3]
   13550:	cmp	r5, #0
   13554:	beq	13564 <__mempcpy_chk@plt+0x2554>
   13558:	add	r0, r3, r0, lsl #3
   1355c:	add	r0, r0, #4
   13560:	b	1357c <__mempcpy_chk@plt+0x256c>
   13564:	str	r4, [r3, r0, lsl #3]
   13568:	ldr	r0, [r6, #12]
   1356c:	add	r0, r0, #1
   13570:	str	r0, [r6, #12]
   13574:	mov	r0, r9
   13578:	str	sl, [r7]
   1357c:	ldr	r3, [r0]
   13580:	cmp	r2, #0
   13584:	str	r3, [r7, #4]
   13588:	str	r7, [r0]
   1358c:	mov	r7, r2
   13590:	bne	13528 <__mempcpy_chk@plt+0x2518>
   13594:	ldr	sl, [r8]
   13598:	mov	r5, #0
   1359c:	str	r5, [r8, #4]
   135a0:	mov	r0, sl
   135a4:	ldr	r2, [r6, #24]
   135a8:	blx	r2
   135ac:	mov	r4, r0
   135b0:	ldr	r0, [r6, #8]
   135b4:	cmp	r4, r0
   135b8:	bcs	13660 <__mempcpy_chk@plt+0x2650>
   135bc:	ldr	r7, [r6]
   135c0:	ldr	r0, [r7, r4, lsl #3]
   135c4:	cmp	r0, #0
   135c8:	beq	135e8 <__mempcpy_chk@plt+0x25d8>
   135cc:	ldr	r0, [r9]
   135d0:	cmp	r0, #0
   135d4:	beq	135fc <__mempcpy_chk@plt+0x25ec>
   135d8:	mov	r1, r0
   135dc:	ldr	r2, [r1, #4]!
   135e0:	str	r2, [r9]
   135e4:	b	13610 <__mempcpy_chk@plt+0x2600>
   135e8:	str	sl, [r7, r4, lsl #3]
   135ec:	ldr	r0, [r6, #12]
   135f0:	add	r0, r0, #1
   135f4:	str	r0, [r6, #12]
   135f8:	b	13624 <__mempcpy_chk@plt+0x2614>
   135fc:	mov	r0, #8
   13600:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   13604:	cmp	r0, #0
   13608:	beq	13654 <__mempcpy_chk@plt+0x2644>
   1360c:	add	r1, r0, #4
   13610:	str	sl, [r0]
   13614:	add	r2, r7, r4, lsl #3
   13618:	ldr	r3, [r2, #4]
   1361c:	str	r3, [r1]
   13620:	str	r0, [r2, #4]
   13624:	ldr	r0, [sp]
   13628:	str	r5, [r8]
   1362c:	ldr	r1, [r0, #12]
   13630:	ldr	r3, [r0, #4]
   13634:	sub	r1, r1, #1
   13638:	str	r1, [r0, #12]
   1363c:	add	r8, r8, #8
   13640:	cmp	r8, r3
   13644:	bcc	13508 <__mempcpy_chk@plt+0x24f8>
   13648:	mov	r0, #1
   1364c:	sub	sp, fp, #28
   13650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13654:	mov	r0, #0
   13658:	sub	sp, fp, #28
   1365c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13660:	bl	10ff8 <abort@plt>
   13664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13668:	add	fp, sp, #28
   1366c:	sub	sp, sp, #4
   13670:	cmp	r1, #0
   13674:	beq	139b8 <__mempcpy_chk@plt+0x29a8>
   13678:	mov	r8, r2
   1367c:	mov	sl, r1
   13680:	ldr	r1, [r0, #8]
   13684:	ldr	r2, [r0, #24]
   13688:	mov	r4, r0
   1368c:	mov	r0, sl
   13690:	blx	r2
   13694:	mov	r7, r0
   13698:	ldr	r0, [r4, #8]
   1369c:	cmp	r7, r0
   136a0:	bcs	139b8 <__mempcpy_chk@plt+0x29a8>
   136a4:	ldr	r5, [r4]
   136a8:	mov	r9, r5
   136ac:	ldr	r1, [r9, r7, lsl #3]!
   136b0:	cmp	r1, #0
   136b4:	beq	13748 <__mempcpy_chk@plt+0x2738>
   136b8:	cmp	r1, sl
   136bc:	beq	136e8 <__mempcpy_chk@plt+0x26d8>
   136c0:	ldr	r2, [r4, #28]
   136c4:	mov	r0, sl
   136c8:	blx	r2
   136cc:	cmp	r0, #0
   136d0:	mov	r6, r9
   136d4:	beq	13704 <__mempcpy_chk@plt+0x26f4>
   136d8:	ldr	r0, [r6]
   136dc:	cmp	r0, #0
   136e0:	bne	136ec <__mempcpy_chk@plt+0x26dc>
   136e4:	b	13748 <__mempcpy_chk@plt+0x2738>
   136e8:	mov	r0, sl
   136ec:	cmp	r8, #0
   136f0:	mov	r7, #0
   136f4:	strne	r0, [r8]
   136f8:	mov	r0, r7
   136fc:	sub	sp, fp, #28
   13700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13704:	add	r6, r5, r7, lsl #3
   13708:	ldr	r0, [r6, #4]!
   1370c:	cmp	r0, #0
   13710:	beq	13748 <__mempcpy_chk@plt+0x2738>
   13714:	ldr	r1, [r0]
   13718:	cmp	r1, sl
   1371c:	beq	1373c <__mempcpy_chk@plt+0x272c>
   13720:	ldr	r2, [r4, #28]
   13724:	mov	r0, sl
   13728:	blx	r2
   1372c:	ldr	r6, [r6]
   13730:	cmp	r0, #0
   13734:	beq	13708 <__mempcpy_chk@plt+0x26f8>
   13738:	b	136d8 <__mempcpy_chk@plt+0x26c8>
   1373c:	mov	r0, sl
   13740:	cmp	r0, #0
   13744:	bne	136ec <__mempcpy_chk@plt+0x26dc>
   13748:	vldr	s0, [r4, #8]
   1374c:	vldr	s2, [r4, #12]
   13750:	ldr	r0, [r4, #20]
   13754:	vcvt.f32.u32	s0, s0
   13758:	vcvt.f32.u32	s4, s2
   1375c:	vldr	s2, [r0, #8]
   13760:	vmul.f32	s6, s2, s0
   13764:	vcmpe.f32	s6, s4
   13768:	vmrs	APSR_nzcv, fpscr
   1376c:	bpl	138d0 <__mempcpy_chk@plt+0x28c0>
   13770:	movw	r1, #31072	; 0x7960
   13774:	movt	r1, #1
   13778:	cmp	r0, r1
   1377c:	beq	13818 <__mempcpy_chk@plt+0x2808>
   13780:	vldr	s6, [pc, #564]	; 139bc <__mempcpy_chk@plt+0x29ac>
   13784:	vcmpe.f32	s2, s6
   13788:	vmrs	APSR_nzcv, fpscr
   1378c:	ble	137f4 <__mempcpy_chk@plt+0x27e4>
   13790:	vldr	s8, [pc, #552]	; 139c0 <__mempcpy_chk@plt+0x29b0>
   13794:	vcmpe.f32	s2, s8
   13798:	vmrs	APSR_nzcv, fpscr
   1379c:	bpl	137f4 <__mempcpy_chk@plt+0x27e4>
   137a0:	vldr	s8, [pc, #540]	; 139c4 <__mempcpy_chk@plt+0x29b4>
   137a4:	vldr	s10, [r0, #12]
   137a8:	vcmpe.f32	s10, s8
   137ac:	vmrs	APSR_nzcv, fpscr
   137b0:	ble	137f4 <__mempcpy_chk@plt+0x27e4>
   137b4:	vldr	s8, [r0]
   137b8:	vcmpe.f32	s8, #0.0
   137bc:	vmrs	APSR_nzcv, fpscr
   137c0:	blt	137f4 <__mempcpy_chk@plt+0x27e4>
   137c4:	vadd.f32	s6, s8, s6
   137c8:	vcmpe.f32	s6, s2
   137cc:	vmrs	APSR_nzcv, fpscr
   137d0:	bpl	137f4 <__mempcpy_chk@plt+0x27e4>
   137d4:	vldr	s8, [r0, #4]
   137d8:	vmov.f32	s10, #112	; 0x3f800000  1.0
   137dc:	vcmpe.f32	s8, s10
   137e0:	vmrs	APSR_nzcv, fpscr
   137e4:	bhi	137f4 <__mempcpy_chk@plt+0x27e4>
   137e8:	vcmpe.f32	s6, s8
   137ec:	vmrs	APSR_nzcv, fpscr
   137f0:	bmi	13804 <__mempcpy_chk@plt+0x27f4>
   137f4:	vldr	s2, [pc, #460]	; 139c8 <__mempcpy_chk@plt+0x29b8>
   137f8:	movw	r0, #31072	; 0x7960
   137fc:	movt	r0, #1
   13800:	str	r0, [r4, #20]
   13804:	vmul.f32	s6, s2, s0
   13808:	vcmpe.f32	s6, s4
   1380c:	vmrs	APSR_nzcv, fpscr
   13810:	bmi	1382c <__mempcpy_chk@plt+0x281c>
   13814:	b	138d0 <__mempcpy_chk@plt+0x28c0>
   13818:	mov	r0, r1
   1381c:	vmul.f32	s6, s2, s0
   13820:	vcmpe.f32	s6, s4
   13824:	vmrs	APSR_nzcv, fpscr
   13828:	bpl	138d0 <__mempcpy_chk@plt+0x28c0>
   1382c:	vldr	s4, [r0, #12]
   13830:	ldrb	r0, [r0, #16]
   13834:	mvn	r7, #0
   13838:	vmul.f32	s0, s4, s0
   1383c:	vldr	s4, [pc, #392]	; 139cc <__mempcpy_chk@plt+0x29bc>
   13840:	cmp	r0, #0
   13844:	vmul.f32	s2, s2, s0
   13848:	vseleq.f32	s0, s2, s0
   1384c:	vcmpe.f32	s0, s4
   13850:	vmrs	APSR_nzcv, fpscr
   13854:	bge	1394c <__mempcpy_chk@plt+0x293c>
   13858:	vcvt.u32.f32	s0, s0
   1385c:	mov	r0, r4
   13860:	vmov	r1, s0
   13864:	bl	131b4 <__mempcpy_chk@plt+0x21a4>
   13868:	cmp	r0, #0
   1386c:	beq	1394c <__mempcpy_chk@plt+0x293c>
   13870:	ldr	r1, [r4, #8]
   13874:	ldr	r2, [r4, #24]
   13878:	mov	r0, sl
   1387c:	blx	r2
   13880:	mov	r7, r0
   13884:	ldr	r0, [r4, #8]
   13888:	cmp	r7, r0
   1388c:	bcs	139b8 <__mempcpy_chk@plt+0x29a8>
   13890:	ldr	r5, [r4]
   13894:	mov	r9, r5
   13898:	ldr	r1, [r9, r7, lsl #3]!
   1389c:	cmp	r1, #0
   138a0:	beq	138f8 <__mempcpy_chk@plt+0x28e8>
   138a4:	cmp	r1, sl
   138a8:	mov	r0, sl
   138ac:	beq	138c8 <__mempcpy_chk@plt+0x28b8>
   138b0:	ldr	r2, [r4, #28]
   138b4:	mov	r0, sl
   138b8:	blx	r2
   138bc:	cmp	r0, #0
   138c0:	beq	13968 <__mempcpy_chk@plt+0x2958>
   138c4:	ldr	r0, [r9]
   138c8:	cmp	r0, #0
   138cc:	bne	139b8 <__mempcpy_chk@plt+0x29a8>
   138d0:	ldr	r0, [r9]
   138d4:	cmp	r0, #0
   138d8:	beq	138f8 <__mempcpy_chk@plt+0x28e8>
   138dc:	ldr	r0, [r4, #36]	; 0x24
   138e0:	cmp	r0, #0
   138e4:	beq	13918 <__mempcpy_chk@plt+0x2908>
   138e8:	mov	r1, r0
   138ec:	ldr	r2, [r1, #4]!
   138f0:	str	r2, [r4, #36]	; 0x24
   138f4:	b	1392c <__mempcpy_chk@plt+0x291c>
   138f8:	str	sl, [r9]
   138fc:	ldr	r0, [r4, #12]
   13900:	ldr	r1, [r4, #16]
   13904:	add	r0, r0, #1
   13908:	add	r1, r1, #1
   1390c:	str	r0, [r4, #12]
   13910:	str	r1, [r4, #16]
   13914:	b	13948 <__mempcpy_chk@plt+0x2938>
   13918:	mov	r0, #8
   1391c:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   13920:	cmp	r0, #0
   13924:	beq	13958 <__mempcpy_chk@plt+0x2948>
   13928:	add	r1, r0, #4
   1392c:	str	sl, [r0]
   13930:	ldr	r2, [r9, #4]
   13934:	str	r2, [r1]
   13938:	str	r0, [r9, #4]
   1393c:	ldr	r0, [r4, #16]
   13940:	add	r0, r0, #1
   13944:	str	r0, [r4, #16]
   13948:	mov	r7, #1
   1394c:	mov	r0, r7
   13950:	sub	sp, fp, #28
   13954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13958:	mvn	r7, #0
   1395c:	mov	r0, r7
   13960:	sub	sp, fp, #28
   13964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13968:	add	r6, r5, r7, lsl #3
   1396c:	ldr	r0, [r6, #4]!
   13970:	cmp	r0, #0
   13974:	beq	138d0 <__mempcpy_chk@plt+0x28c0>
   13978:	ldr	r1, [r0]
   1397c:	cmp	r1, sl
   13980:	beq	139ac <__mempcpy_chk@plt+0x299c>
   13984:	ldr	r2, [r4, #28]
   13988:	mov	r0, sl
   1398c:	blx	r2
   13990:	ldr	r6, [r6]
   13994:	cmp	r0, #0
   13998:	beq	1396c <__mempcpy_chk@plt+0x295c>
   1399c:	ldr	r0, [r6]
   139a0:	cmp	r0, #0
   139a4:	beq	138d0 <__mempcpy_chk@plt+0x28c0>
   139a8:	b	139b8 <__mempcpy_chk@plt+0x29a8>
   139ac:	mov	r0, sl
   139b0:	cmp	r0, #0
   139b4:	beq	138d0 <__mempcpy_chk@plt+0x28c0>
   139b8:	bl	10ff8 <abort@plt>
   139bc:	stclcc	12, cr12, [ip, #820]	; 0x334
   139c0:	svccc	0x00666666
   139c4:	svccc	0x008ccccd
   139c8:	svccc	0x004ccccd
   139cc:	svcmi	0x00800000
   139d0:	push	{r4, sl, fp, lr}
   139d4:	add	fp, sp, #8
   139d8:	sub	sp, sp, #8
   139dc:	add	r2, sp, #4
   139e0:	mov	r4, r1
   139e4:	bl	13664 <__mempcpy_chk@plt+0x2654>
   139e8:	cmn	r0, #1
   139ec:	beq	13a08 <__mempcpy_chk@plt+0x29f8>
   139f0:	ldr	r1, [sp, #4]
   139f4:	cmp	r0, #0
   139f8:	moveq	r4, r1
   139fc:	mov	r0, r4
   13a00:	sub	sp, fp, #8
   13a04:	pop	{r4, sl, fp, pc}
   13a08:	mov	r4, #0
   13a0c:	mov	r0, r4
   13a10:	sub	sp, fp, #8
   13a14:	pop	{r4, sl, fp, pc}
   13a18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a1c:	add	fp, sp, #24
   13a20:	mov	r9, r1
   13a24:	ldr	r1, [r0, #8]
   13a28:	ldr	r2, [r0, #24]
   13a2c:	mov	r5, r0
   13a30:	mov	r0, r9
   13a34:	blx	r2
   13a38:	mov	r7, r0
   13a3c:	ldr	r0, [r5, #8]
   13a40:	cmp	r7, r0
   13a44:	bcs	13cb4 <__mempcpy_chk@plt+0x2ca4>
   13a48:	ldr	r6, [r5]
   13a4c:	mov	r8, #0
   13a50:	mov	r4, r6
   13a54:	ldr	r1, [r4, r7, lsl #3]!
   13a58:	cmp	r1, #0
   13a5c:	beq	13b10 <__mempcpy_chk@plt+0x2b00>
   13a60:	cmp	r1, r9
   13a64:	beq	13a80 <__mempcpy_chk@plt+0x2a70>
   13a68:	ldr	r2, [r5, #28]
   13a6c:	mov	r0, r9
   13a70:	blx	r2
   13a74:	cmp	r0, #0
   13a78:	beq	13ab8 <__mempcpy_chk@plt+0x2aa8>
   13a7c:	ldr	r9, [r4]
   13a80:	add	r0, r6, r7, lsl #3
   13a84:	ldr	r0, [r0, #4]
   13a88:	cmp	r0, #0
   13a8c:	beq	13b00 <__mempcpy_chk@plt+0x2af0>
   13a90:	ldm	r0, {r1, r2}
   13a94:	stm	r4, {r1, r2}
   13a98:	mov	r1, #0
   13a9c:	str	r1, [r0]
   13aa0:	ldr	r1, [r5, #36]	; 0x24
   13aa4:	str	r1, [r0, #4]
   13aa8:	str	r0, [r5, #36]	; 0x24
   13aac:	cmp	r9, #0
   13ab0:	bne	13b48 <__mempcpy_chk@plt+0x2b38>
   13ab4:	b	13b10 <__mempcpy_chk@plt+0x2b00>
   13ab8:	add	r7, r6, r7, lsl #3
   13abc:	ldr	r0, [r7, #4]!
   13ac0:	cmp	r0, #0
   13ac4:	beq	13b10 <__mempcpy_chk@plt+0x2b00>
   13ac8:	ldr	r1, [r0]
   13acc:	cmp	r1, r9
   13ad0:	beq	13b18 <__mempcpy_chk@plt+0x2b08>
   13ad4:	ldr	r2, [r5, #28]
   13ad8:	mov	r0, r9
   13adc:	blx	r2
   13ae0:	ldr	r1, [r7]
   13ae4:	cmp	r0, #0
   13ae8:	bne	13b20 <__mempcpy_chk@plt+0x2b10>
   13aec:	ldr	r0, [r1, #4]!
   13af0:	cmp	r0, #0
   13af4:	mov	r7, r1
   13af8:	bne	13ac8 <__mempcpy_chk@plt+0x2ab8>
   13afc:	b	13b10 <__mempcpy_chk@plt+0x2b00>
   13b00:	mov	r0, #0
   13b04:	str	r0, [r4]
   13b08:	cmp	r9, #0
   13b0c:	bne	13b48 <__mempcpy_chk@plt+0x2b38>
   13b10:	mov	r0, r8
   13b14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13b18:	mov	r1, r0
   13b1c:	b	13b24 <__mempcpy_chk@plt+0x2b14>
   13b20:	ldr	r9, [r1]
   13b24:	ldr	r0, [r1, #4]
   13b28:	str	r0, [r7]
   13b2c:	mov	r0, #0
   13b30:	str	r0, [r1]
   13b34:	ldr	r0, [r5, #36]	; 0x24
   13b38:	str	r0, [r1, #4]
   13b3c:	str	r1, [r5, #36]	; 0x24
   13b40:	cmp	r9, #0
   13b44:	beq	13b10 <__mempcpy_chk@plt+0x2b00>
   13b48:	ldr	r0, [r5, #16]
   13b4c:	sub	r0, r0, #1
   13b50:	str	r0, [r5, #16]
   13b54:	ldr	r0, [r4]
   13b58:	cmp	r0, #0
   13b5c:	bne	13c74 <__mempcpy_chk@plt+0x2c64>
   13b60:	ldr	r0, [r5, #12]
   13b64:	vldr	s0, [r5, #8]
   13b68:	sub	r1, r0, #1
   13b6c:	str	r1, [r5, #12]
   13b70:	vmov	s2, r1
   13b74:	ldr	r0, [r5, #20]
   13b78:	vcvt.f32.u32	s0, s0
   13b7c:	vcvt.f32.u32	s2, s2
   13b80:	vldr	s4, [r0]
   13b84:	vmul.f32	s6, s4, s0
   13b88:	vcmpe.f32	s6, s2
   13b8c:	vmrs	APSR_nzcv, fpscr
   13b90:	ble	13c74 <__mempcpy_chk@plt+0x2c64>
   13b94:	movw	r1, #31072	; 0x7960
   13b98:	movt	r1, #1
   13b9c:	cmp	r0, r1
   13ba0:	beq	13c08 <__mempcpy_chk@plt+0x2bf8>
   13ba4:	vldr	s8, [pc, #268]	; 13cb8 <__mempcpy_chk@plt+0x2ca8>
   13ba8:	vldr	s6, [r0, #8]
   13bac:	vcmpe.f32	s6, s8
   13bb0:	vmrs	APSR_nzcv, fpscr
   13bb4:	ble	13be4 <__mempcpy_chk@plt+0x2bd4>
   13bb8:	vldr	s10, [pc, #252]	; 13cbc <__mempcpy_chk@plt+0x2cac>
   13bbc:	vcmpe.f32	s6, s10
   13bc0:	vmrs	APSR_nzcv, fpscr
   13bc4:	bpl	13be4 <__mempcpy_chk@plt+0x2bd4>
   13bc8:	vcmpe.f32	s4, #0.0
   13bcc:	vmrs	APSR_nzcv, fpscr
   13bd0:	vldrge	s10, [r0, #12]
   13bd4:	vldrge	s12, [pc, #228]	; 13cc0 <__mempcpy_chk@plt+0x2cb0>
   13bd8:	vcmpege.f32	s10, s12
   13bdc:	vmrsge	APSR_nzcv, fpscr
   13be0:	bgt	13c80 <__mempcpy_chk@plt+0x2c70>
   13be4:	vldr	s4, [pc, #216]	; 13cc4 <__mempcpy_chk@plt+0x2cb4>
   13be8:	movw	r0, #31072	; 0x7960
   13bec:	movt	r0, #1
   13bf0:	str	r0, [r5, #20]
   13bf4:	vmul.f32	s4, s4, s0
   13bf8:	vcmpe.f32	s4, s2
   13bfc:	vmrs	APSR_nzcv, fpscr
   13c00:	bgt	13c1c <__mempcpy_chk@plt+0x2c0c>
   13c04:	b	13c74 <__mempcpy_chk@plt+0x2c64>
   13c08:	mov	r0, r1
   13c0c:	vmul.f32	s4, s4, s0
   13c10:	vcmpe.f32	s4, s2
   13c14:	vmrs	APSR_nzcv, fpscr
   13c18:	ble	13c74 <__mempcpy_chk@plt+0x2c64>
   13c1c:	ldrb	r1, [r0, #16]
   13c20:	vldr	s2, [r0, #4]
   13c24:	cmp	r1, #0
   13c28:	vmul.f32	s0, s2, s0
   13c2c:	vldreq	s2, [r0, #8]
   13c30:	mov	r0, r5
   13c34:	vmuleq.f32	s0, s0, s2
   13c38:	vcvt.u32.f32	s0, s0
   13c3c:	vmov	r1, s0
   13c40:	bl	131b4 <__mempcpy_chk@plt+0x21a4>
   13c44:	cmp	r0, #0
   13c48:	bne	13c74 <__mempcpy_chk@plt+0x2c64>
   13c4c:	ldr	r0, [r5, #36]	; 0x24
   13c50:	cmp	r0, #0
   13c54:	beq	13c6c <__mempcpy_chk@plt+0x2c5c>
   13c58:	ldr	r4, [r0, #4]
   13c5c:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   13c60:	cmp	r4, #0
   13c64:	mov	r0, r4
   13c68:	bne	13c58 <__mempcpy_chk@plt+0x2c48>
   13c6c:	mov	r0, #0
   13c70:	str	r0, [r5, #36]	; 0x24
   13c74:	mov	r8, r9
   13c78:	mov	r0, r8
   13c7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c80:	vadd.f32	s8, s4, s8
   13c84:	vcmpe.f32	s8, s6
   13c88:	vmrs	APSR_nzcv, fpscr
   13c8c:	bpl	13be4 <__mempcpy_chk@plt+0x2bd4>
   13c90:	vldr	s6, [r0, #4]
   13c94:	vmov.f32	s10, #112	; 0x3f800000  1.0
   13c98:	vcmpe.f32	s6, s10
   13c9c:	vmrs	APSR_nzcv, fpscr
   13ca0:	bhi	13be4 <__mempcpy_chk@plt+0x2bd4>
   13ca4:	vcmpe.f32	s8, s6
   13ca8:	vmrs	APSR_nzcv, fpscr
   13cac:	bmi	13c0c <__mempcpy_chk@plt+0x2bfc>
   13cb0:	b	13be4 <__mempcpy_chk@plt+0x2bd4>
   13cb4:	bl	10ff8 <abort@plt>
   13cb8:	stclcc	12, cr12, [ip, #820]	; 0x334
   13cbc:	svccc	0x00666666
   13cc0:	svccc	0x008ccccd
   13cc4:	andeq	r0, r0, r0
   13cc8:	b	13a18 <__mempcpy_chk@plt+0x2a08>
   13ccc:	push	{r4, r5, fp, lr}
   13cd0:	add	fp, sp, #8
   13cd4:	mov	r5, r0
   13cd8:	ldr	r0, [r0]
   13cdc:	mov	r4, r1
   13ce0:	bl	16e04 <__mempcpy_chk@plt+0x5df4>
   13ce4:	ldrd	r2, [r5, #8]
   13ce8:	eor	r0, r2, r0
   13cec:	mov	r1, r3
   13cf0:	mov	r2, r4
   13cf4:	mov	r3, #0
   13cf8:	bl	17024 <__mempcpy_chk@plt+0x6014>
   13cfc:	mov	r0, r2
   13d00:	pop	{r4, r5, fp, pc}
   13d04:	push	{r4, r5, r6, r7, fp, lr}
   13d08:	add	fp, sp, #16
   13d0c:	ldrd	r2, [r1, #8]
   13d10:	ldrd	r4, [r0, #8]
   13d14:	eor	r3, r5, r3
   13d18:	eor	r2, r4, r2
   13d1c:	orrs	r2, r2, r3
   13d20:	mov	r2, #0
   13d24:	bne	13d54 <__mempcpy_chk@plt+0x2d44>
   13d28:	ldrd	r4, [r1, #16]
   13d2c:	ldrd	r6, [r0, #16]
   13d30:	eor	r3, r7, r5
   13d34:	eor	r7, r6, r4
   13d38:	orrs	r3, r7, r3
   13d3c:	bne	13d54 <__mempcpy_chk@plt+0x2d44>
   13d40:	ldr	r1, [r1]
   13d44:	ldr	r0, [r0]
   13d48:	bl	10ddc <strcmp@plt>
   13d4c:	clz	r0, r0
   13d50:	lsr	r2, r0, #5
   13d54:	mov	r0, r2
   13d58:	pop	{r4, r5, r6, r7, fp, pc}
   13d5c:	push	{r4, sl, fp, lr}
   13d60:	add	fp, sp, #8
   13d64:	mov	r4, r0
   13d68:	ldr	r0, [r0]
   13d6c:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   13d70:	mov	r0, r4
   13d74:	pop	{r4, sl, fp, lr}
   13d78:	b	128d0 <__mempcpy_chk@plt+0x18c0>
   13d7c:	push	{r4, r5, fp, lr}
   13d80:	add	fp, sp, #8
   13d84:	cmp	r0, #0
   13d88:	beq	13e1c <__mempcpy_chk@plt+0x2e0c>
   13d8c:	mov	r1, #47	; 0x2f
   13d90:	mov	r4, r0
   13d94:	bl	10fbc <strrchr@plt>
   13d98:	cmp	r0, #0
   13d9c:	mov	r5, r4
   13da0:	addne	r5, r0, #1
   13da4:	sub	r0, r5, r4
   13da8:	cmp	r0, #7
   13dac:	blt	13e00 <__mempcpy_chk@plt+0x2df0>
   13db0:	movw	r1, #31148	; 0x79ac
   13db4:	sub	r0, r5, #7
   13db8:	mov	r2, #7
   13dbc:	movt	r1, #1
   13dc0:	bl	10fec <strncmp@plt>
   13dc4:	cmp	r0, #0
   13dc8:	bne	13e00 <__mempcpy_chk@plt+0x2df0>
   13dcc:	movw	r1, #31156	; 0x79b4
   13dd0:	mov	r0, r5
   13dd4:	mov	r2, #3
   13dd8:	movt	r1, #1
   13ddc:	bl	10fec <strncmp@plt>
   13de0:	cmp	r0, #0
   13de4:	beq	13df0 <__mempcpy_chk@plt+0x2de0>
   13de8:	mov	r4, r5
   13dec:	b	13e00 <__mempcpy_chk@plt+0x2df0>
   13df0:	movw	r0, #33072	; 0x8130
   13df4:	add	r4, r5, #3
   13df8:	movt	r0, #2
   13dfc:	str	r4, [r0]
   13e00:	movw	r0, #33076	; 0x8134
   13e04:	movt	r0, #2
   13e08:	str	r4, [r0]
   13e0c:	movw	r0, #33124	; 0x8164
   13e10:	movt	r0, #2
   13e14:	str	r4, [r0]
   13e18:	pop	{r4, r5, fp, pc}
   13e1c:	movw	r0, #33088	; 0x8140
   13e20:	mov	r1, #55	; 0x37
   13e24:	mov	r2, #1
   13e28:	movt	r0, #2
   13e2c:	ldr	r3, [r0]
   13e30:	movw	r0, #31092	; 0x7974
   13e34:	movt	r0, #1
   13e38:	bl	10e90 <fwrite@plt>
   13e3c:	bl	10ff8 <abort@plt>
   13e40:	push	{r4, r5, r6, sl, fp, lr}
   13e44:	add	fp, sp, #16
   13e48:	mov	r4, r0
   13e4c:	movw	r0, #33128	; 0x8168
   13e50:	movt	r0, #2
   13e54:	cmp	r4, #0
   13e58:	moveq	r4, r0
   13e5c:	bl	10f44 <__errno_location@plt>
   13e60:	ldr	r6, [r0]
   13e64:	mov	r5, r0
   13e68:	mov	r0, r4
   13e6c:	mov	r1, #48	; 0x30
   13e70:	bl	169bc <__mempcpy_chk@plt+0x59ac>
   13e74:	str	r6, [r5]
   13e78:	pop	{r4, r5, r6, sl, fp, pc}
   13e7c:	movw	r1, #33128	; 0x8168
   13e80:	cmp	r0, #0
   13e84:	movt	r1, #2
   13e88:	movne	r1, r0
   13e8c:	ldr	r0, [r1]
   13e90:	bx	lr
   13e94:	movw	r2, #33128	; 0x8168
   13e98:	cmp	r0, #0
   13e9c:	movt	r2, #2
   13ea0:	movne	r2, r0
   13ea4:	str	r1, [r2]
   13ea8:	bx	lr
   13eac:	movw	r3, #33128	; 0x8168
   13eb0:	cmp	r0, #0
   13eb4:	movt	r3, #2
   13eb8:	movne	r3, r0
   13ebc:	ubfx	r0, r1, #5, #3
   13ec0:	and	r1, r1, #31
   13ec4:	add	r0, r3, r0, lsl #2
   13ec8:	ldr	r3, [r0, #8]
   13ecc:	eor	r2, r2, r3, lsr r1
   13ed0:	and	r2, r2, #1
   13ed4:	eor	r2, r3, r2, lsl r1
   13ed8:	str	r2, [r0, #8]
   13edc:	mov	r0, #1
   13ee0:	and	r0, r0, r3, lsr r1
   13ee4:	bx	lr
   13ee8:	movw	r2, #33128	; 0x8168
   13eec:	cmp	r0, #0
   13ef0:	movt	r2, #2
   13ef4:	movne	r2, r0
   13ef8:	ldr	r0, [r2, #4]
   13efc:	str	r1, [r2, #4]
   13f00:	bx	lr
   13f04:	movw	r3, #33128	; 0x8168
   13f08:	cmp	r0, #0
   13f0c:	movt	r3, #2
   13f10:	movne	r3, r0
   13f14:	cmp	r1, #0
   13f18:	mov	r0, #10
   13f1c:	cmpne	r2, #0
   13f20:	str	r0, [r3]
   13f24:	bne	13f34 <__mempcpy_chk@plt+0x2f24>
   13f28:	push	{fp, lr}
   13f2c:	mov	fp, sp
   13f30:	bl	10ff8 <abort@plt>
   13f34:	str	r1, [r3, #40]	; 0x28
   13f38:	str	r2, [r3, #44]	; 0x2c
   13f3c:	bx	lr
   13f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f44:	add	fp, sp, #28
   13f48:	sub	sp, sp, #20
   13f4c:	mov	r7, r0
   13f50:	ldr	r0, [fp, #8]
   13f54:	movw	r5, #33128	; 0x8168
   13f58:	mov	r8, r3
   13f5c:	mov	r9, r2
   13f60:	mov	sl, r1
   13f64:	movt	r5, #2
   13f68:	cmp	r0, #0
   13f6c:	movne	r5, r0
   13f70:	bl	10f44 <__errno_location@plt>
   13f74:	mov	r4, r0
   13f78:	ldm	r5, {r0, r1}
   13f7c:	ldr	r2, [r5, #40]	; 0x28
   13f80:	ldr	r3, [r5, #44]	; 0x2c
   13f84:	add	r5, r5, #8
   13f88:	ldr	r6, [r4]
   13f8c:	stm	sp, {r0, r1, r5}
   13f90:	str	r2, [sp, #12]
   13f94:	str	r3, [sp, #16]
   13f98:	mov	r0, r7
   13f9c:	mov	r1, sl
   13fa0:	mov	r2, r9
   13fa4:	mov	r3, r8
   13fa8:	bl	13fb8 <__mempcpy_chk@plt+0x2fa8>
   13fac:	str	r6, [r4]
   13fb0:	sub	sp, fp, #28
   13fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fbc:	add	fp, sp, #28
   13fc0:	sub	sp, sp, #156	; 0x9c
   13fc4:	str	r0, [sp, #76]	; 0x4c
   13fc8:	ldr	r0, [fp, #12]
   13fcc:	mov	r6, r1
   13fd0:	str	r3, [sp, #84]	; 0x54
   13fd4:	str	r2, [fp, #-84]	; 0xffffffac
   13fd8:	and	r1, r0, #4
   13fdc:	str	r1, [sp, #24]
   13fe0:	and	r1, r0, #1
   13fe4:	str	r1, [sp, #28]
   13fe8:	ubfx	r8, r0, #1, #1
   13fec:	bl	10ea8 <__ctype_get_mb_cur_max@plt>
   13ff0:	str	r0, [sp, #32]
   13ff4:	ldr	r0, [fp, #24]
   13ff8:	ldr	r7, [fp, #8]
   13ffc:	mov	r1, #0
   14000:	mov	r2, #0
   14004:	mov	r4, #1
   14008:	str	r1, [sp, #52]	; 0x34
   1400c:	str	r0, [sp, #72]	; 0x48
   14010:	ldr	r0, [fp, #20]
   14014:	str	r0, [sp, #68]	; 0x44
   14018:	mov	r0, #0
   1401c:	str	r0, [sp, #48]	; 0x30
   14020:	mov	r0, #0
   14024:	str	r0, [sp, #92]	; 0x5c
   14028:	mov	r0, #0
   1402c:	str	r0, [fp, #-76]	; 0xffffffb4
   14030:	mov	r0, #0
   14034:	cmp	r7, #10
   14038:	bhi	15320 <__mempcpy_chk@plt+0x4310>
   1403c:	add	r1, pc, #28
   14040:	mov	sl, r6
   14044:	ldr	r6, [sp, #76]	; 0x4c
   14048:	ldr	ip, [fp, #-84]	; 0xffffffac
   1404c:	ldr	lr, [sp, #84]	; 0x54
   14050:	mov	r9, #0
   14054:	mov	r3, #1
   14058:	mov	r5, #0
   1405c:	ldr	pc, [r1, r7, lsl #2]
   14060:	andeq	r4, r1, r0, lsr r1
   14064:	andeq	r4, r1, ip, ror #2
   14068:	andeq	r4, r1, r0, asr #2
   1406c:	andeq	r4, r1, r8, lsr #2
   14070:	andeq	r4, r1, r0, ror #2
   14074:	muleq	r1, r4, r1
   14078:	andeq	r4, r1, r0, asr r1
   1407c:	andeq	r4, r1, r0, lsr #7
   14080:	andeq	r4, r1, ip, lsl #1
   14084:	andeq	r4, r1, ip, lsl #1
   14088:	andeq	r4, r1, r4, lsr r3
   1408c:	mov	r9, r4
   14090:	movw	r4, #31240	; 0x7a08
   14094:	mov	r5, r8
   14098:	mov	r8, r2
   1409c:	mov	r0, #0
   140a0:	mov	r2, #5
   140a4:	movt	r4, #1
   140a8:	mov	r1, r4
   140ac:	bl	10e48 <dcgettext@plt>
   140b0:	cmp	r0, r4
   140b4:	str	r0, [sp, #68]	; 0x44
   140b8:	bne	14248 <__mempcpy_chk@plt+0x3238>
   140bc:	bl	16e48 <__mempcpy_chk@plt+0x5e38>
   140c0:	ldrb	r1, [r0]
   140c4:	and	r1, r1, #223	; 0xdf
   140c8:	cmp	r1, #71	; 0x47
   140cc:	beq	14214 <__mempcpy_chk@plt+0x3204>
   140d0:	cmp	r1, #85	; 0x55
   140d4:	bne	1422c <__mempcpy_chk@plt+0x321c>
   140d8:	ldrb	r1, [r0, #1]
   140dc:	and	r1, r1, #223	; 0xdf
   140e0:	cmp	r1, #84	; 0x54
   140e4:	bne	1422c <__mempcpy_chk@plt+0x321c>
   140e8:	ldrb	r1, [r0, #2]
   140ec:	and	r1, r1, #223	; 0xdf
   140f0:	cmp	r1, #70	; 0x46
   140f4:	bne	1422c <__mempcpy_chk@plt+0x321c>
   140f8:	ldrb	r1, [r0, #3]
   140fc:	cmp	r1, #45	; 0x2d
   14100:	ldrbeq	r1, [r0, #4]
   14104:	cmpeq	r1, #56	; 0x38
   14108:	bne	1422c <__mempcpy_chk@plt+0x321c>
   1410c:	ldrb	r0, [r0, #5]
   14110:	cmp	r0, #0
   14114:	movw	r0, #31244	; 0x7a0c
   14118:	movt	r0, #1
   1411c:	str	r0, [sp, #68]	; 0x44
   14120:	bne	1422c <__mempcpy_chk@plt+0x321c>
   14124:	b	14248 <__mempcpy_chk@plt+0x3238>
   14128:	mov	r0, #1
   1412c:	b	1416c <__mempcpy_chk@plt+0x315c>
   14130:	mov	r7, #0
   14134:	mov	r9, #0
   14138:	mov	r3, r0
   1413c:	b	1420c <__mempcpy_chk@plt+0x31fc>
   14140:	tst	r8, #1
   14144:	bne	1416c <__mempcpy_chk@plt+0x315c>
   14148:	mov	r3, r0
   1414c:	b	141c4 <__mempcpy_chk@plt+0x31b4>
   14150:	mov	r0, #1
   14154:	mov	r9, #0
   14158:	mov	r7, #5
   1415c:	b	141a8 <__mempcpy_chk@plt+0x3198>
   14160:	mov	r3, #1
   14164:	tst	r8, #1
   14168:	beq	141c4 <__mempcpy_chk@plt+0x31b4>
   1416c:	mov	r1, #1
   14170:	mov	r9, #0
   14174:	mov	r7, #2
   14178:	mov	r3, r0
   1417c:	mov	r5, #1
   14180:	str	r1, [fp, #-76]	; 0xffffffb4
   14184:	movw	r1, #31242	; 0x7a0a
   14188:	movt	r1, #1
   1418c:	str	r1, [sp, #92]	; 0x5c
   14190:	b	143a0 <__mempcpy_chk@plt+0x3390>
   14194:	mov	r7, #5
   14198:	tst	r8, #1
   1419c:	beq	141e4 <__mempcpy_chk@plt+0x31d4>
   141a0:	mov	r0, #1
   141a4:	mov	r9, #0
   141a8:	str	r0, [fp, #-76]	; 0xffffffb4
   141ac:	movw	r0, #31238	; 0x7a06
   141b0:	mov	r3, #1
   141b4:	mov	r5, #1
   141b8:	movt	r0, #1
   141bc:	str	r0, [sp, #92]	; 0x5c
   141c0:	b	143a0 <__mempcpy_chk@plt+0x3390>
   141c4:	cmp	sl, #0
   141c8:	mov	r9, #1
   141cc:	mov	r7, #2
   141d0:	movne	r0, #39	; 0x27
   141d4:	strbne	r0, [r6]
   141d8:	movw	r0, #31242	; 0x7a0a
   141dc:	movt	r0, #1
   141e0:	b	14200 <__mempcpy_chk@plt+0x31f0>
   141e4:	cmp	sl, #0
   141e8:	mov	r9, #1
   141ec:	mov	r3, #1
   141f0:	movne	r0, #34	; 0x22
   141f4:	strbne	r0, [r6]
   141f8:	movw	r0, #31238	; 0x7a06
   141fc:	movt	r0, #1
   14200:	str	r0, [sp, #92]	; 0x5c
   14204:	mov	r0, #1
   14208:	str	r0, [fp, #-76]	; 0xffffffb4
   1420c:	mov	r5, #0
   14210:	b	143a0 <__mempcpy_chk@plt+0x3390>
   14214:	ldrb	r1, [r0, #1]
   14218:	and	r1, r1, #223	; 0xdf
   1421c:	cmp	r1, #66	; 0x42
   14220:	ldrbeq	r1, [r0, #2]
   14224:	cmpeq	r1, #49	; 0x31
   14228:	beq	15148 <__mempcpy_chk@plt+0x4138>
   1422c:	movw	r0, #31242	; 0x7a0a
   14230:	movw	r1, #31238	; 0x7a06
   14234:	cmp	r7, #9
   14238:	movt	r0, #1
   1423c:	movt	r1, #1
   14240:	moveq	r0, r1
   14244:	str	r0, [sp, #68]	; 0x44
   14248:	movw	r4, #31242	; 0x7a0a
   1424c:	mov	r0, #0
   14250:	mov	r2, #5
   14254:	movt	r4, #1
   14258:	mov	r1, r4
   1425c:	bl	10e48 <dcgettext@plt>
   14260:	cmp	r0, r4
   14264:	str	r0, [sp, #72]	; 0x48
   14268:	beq	14278 <__mempcpy_chk@plt+0x3268>
   1426c:	mov	r4, r9
   14270:	mov	r2, r8
   14274:	b	14330 <__mempcpy_chk@plt+0x3320>
   14278:	bl	16e48 <__mempcpy_chk@plt+0x5e38>
   1427c:	ldrb	r1, [r0]
   14280:	mov	r4, r9
   14284:	and	r1, r1, #223	; 0xdf
   14288:	cmp	r1, #71	; 0x47
   1428c:	beq	142e8 <__mempcpy_chk@plt+0x32d8>
   14290:	cmp	r1, #85	; 0x55
   14294:	mov	r2, r8
   14298:	bne	14310 <__mempcpy_chk@plt+0x3300>
   1429c:	ldrb	r1, [r0, #1]
   142a0:	and	r1, r1, #223	; 0xdf
   142a4:	cmp	r1, #84	; 0x54
   142a8:	bne	14310 <__mempcpy_chk@plt+0x3300>
   142ac:	ldrb	r1, [r0, #2]
   142b0:	and	r1, r1, #223	; 0xdf
   142b4:	cmp	r1, #70	; 0x46
   142b8:	ldrbeq	r1, [r0, #3]
   142bc:	cmpeq	r1, #45	; 0x2d
   142c0:	bne	14310 <__mempcpy_chk@plt+0x3300>
   142c4:	ldrb	r1, [r0, #4]
   142c8:	cmp	r1, #56	; 0x38
   142cc:	ldrbeq	r0, [r0, #5]
   142d0:	cmpeq	r0, #0
   142d4:	bne	14310 <__mempcpy_chk@plt+0x3300>
   142d8:	movw	r0, #31248	; 0x7a10
   142dc:	movt	r0, #1
   142e0:	str	r0, [sp, #72]	; 0x48
   142e4:	b	14330 <__mempcpy_chk@plt+0x3320>
   142e8:	ldrb	r1, [r0, #1]
   142ec:	mov	r2, r8
   142f0:	and	r1, r1, #223	; 0xdf
   142f4:	cmp	r1, #66	; 0x42
   142f8:	bne	14310 <__mempcpy_chk@plt+0x3300>
   142fc:	ldrb	r1, [r0, #2]
   14300:	cmp	r1, #49	; 0x31
   14304:	ldrbeq	r1, [r0, #3]
   14308:	cmpeq	r1, #56	; 0x38
   1430c:	beq	1518c <__mempcpy_chk@plt+0x417c>
   14310:	movw	r0, #31242	; 0x7a0a
   14314:	cmp	r7, #9
   14318:	movt	r0, #1
   1431c:	mov	r1, r0
   14320:	movw	r0, #31238	; 0x7a06
   14324:	movt	r0, #1
   14328:	moveq	r1, r0
   1432c:	str	r1, [sp, #72]	; 0x48
   14330:	mov	r8, r5
   14334:	mov	r9, #0
   14338:	tst	r8, #1
   1433c:	mov	r5, r8
   14340:	str	r2, [fp, #-48]	; 0xffffffd0
   14344:	bne	1437c <__mempcpy_chk@plt+0x336c>
   14348:	ldr	r0, [sp, #68]	; 0x44
   1434c:	ldrb	r0, [r0]
   14350:	cmp	r0, #0
   14354:	beq	1437c <__mempcpy_chk@plt+0x336c>
   14358:	ldr	r1, [sp, #68]	; 0x44
   1435c:	mov	r9, #0
   14360:	add	r1, r1, #1
   14364:	cmp	r9, sl
   14368:	strbcc	r0, [r6, r9]
   1436c:	ldrb	r0, [r1, r9]
   14370:	add	r9, r9, #1
   14374:	cmp	r0, #0
   14378:	bne	14364 <__mempcpy_chk@plt+0x3354>
   1437c:	ldr	r8, [sp, #72]	; 0x48
   14380:	mov	r0, r8
   14384:	bl	10f38 <strlen@plt>
   14388:	ldr	ip, [fp, #-84]	; 0xffffffac
   1438c:	ldr	lr, [sp, #84]	; 0x54
   14390:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14394:	str	r0, [fp, #-76]	; 0xffffffb4
   14398:	str	r8, [sp, #92]	; 0x5c
   1439c:	mov	r3, #1
   143a0:	ldr	r0, [fp, #16]
   143a4:	str	r7, [fp, #-64]	; 0xffffffc0
   143a8:	str	r5, [fp, #-72]	; 0xffffffb8
   143ac:	str	r3, [sp, #80]	; 0x50
   143b0:	cmp	r0, #0
   143b4:	movwne	r0, #1
   143b8:	and	r0, r0, r5
   143bc:	str	r0, [fp, #-88]	; 0xffffffa8
   143c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   143c4:	cmp	r0, #0
   143c8:	movwne	r0, #1
   143cc:	subs	r7, r7, #2
   143d0:	and	r1, r0, r5
   143d4:	str	r7, [fp, #-80]	; 0xffffffb0
   143d8:	and	r1, r3, r1
   143dc:	str	r1, [sp, #40]	; 0x28
   143e0:	clz	r1, r7
   143e4:	lsr	r1, r1, #5
   143e8:	and	r1, r1, r5
   143ec:	eor	r5, r5, #1
   143f0:	str	r1, [sp, #36]	; 0x24
   143f4:	mov	r1, r7
   143f8:	str	r5, [sp, #88]	; 0x58
   143fc:	mov	r7, #0
   14400:	movwne	r1, #1
   14404:	orr	r5, r1, r5
   14408:	and	r1, r1, r3
   1440c:	and	r0, r0, r1
   14410:	str	r5, [sp, #60]	; 0x3c
   14414:	str	r1, [fp, #-68]	; 0xffffffbc
   14418:	str	r0, [fp, #-60]	; 0xffffffc4
   1441c:	eor	r0, r3, #1
   14420:	str	r0, [sp, #44]	; 0x2c
   14424:	cmn	lr, #1
   14428:	beq	14438 <__mempcpy_chk@plt+0x3428>
   1442c:	cmp	r7, lr
   14430:	bne	14444 <__mempcpy_chk@plt+0x3434>
   14434:	b	150bc <__mempcpy_chk@plt+0x40ac>
   14438:	ldrb	r0, [ip, r7]
   1443c:	cmp	r0, #0
   14440:	beq	150c4 <__mempcpy_chk@plt+0x40b4>
   14444:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14448:	mov	r8, #0
   1444c:	str	r4, [fp, #-52]	; 0xffffffcc
   14450:	str	r2, [fp, #-48]	; 0xffffffd0
   14454:	cmp	r0, #0
   14458:	beq	1448c <__mempcpy_chk@plt+0x347c>
   1445c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14460:	add	r4, r7, r0
   14464:	cmp	r0, #2
   14468:	bcc	14484 <__mempcpy_chk@plt+0x3474>
   1446c:	cmn	lr, #1
   14470:	bne	14484 <__mempcpy_chk@plt+0x3474>
   14474:	mov	r0, ip
   14478:	bl	10f38 <strlen@plt>
   1447c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14480:	mov	lr, r0
   14484:	cmp	r4, lr
   14488:	bls	144a4 <__mempcpy_chk@plt+0x3494>
   1448c:	mov	r0, #0
   14490:	str	r0, [fp, #-56]	; 0xffffffc8
   14494:	ldrb	r5, [ip, r7]
   14498:	cmp	r5, #126	; 0x7e
   1449c:	bls	144f4 <__mempcpy_chk@plt+0x34e4>
   144a0:	b	148fc <__mempcpy_chk@plt+0x38ec>
   144a4:	ldr	r1, [sp, #92]	; 0x5c
   144a8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   144ac:	add	r0, ip, r7
   144b0:	mov	r4, lr
   144b4:	bl	10e3c <memcmp@plt>
   144b8:	ldr	r2, [sp, #88]	; 0x58
   144bc:	cmp	r0, #0
   144c0:	mov	r1, r0
   144c4:	movwne	r1, #1
   144c8:	orr	r1, r1, r2
   144cc:	tst	r1, #1
   144d0:	beq	151d0 <__mempcpy_chk@plt+0x41c0>
   144d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   144d8:	clz	r0, r0
   144dc:	mov	lr, r4
   144e0:	lsr	r0, r0, #5
   144e4:	str	r0, [fp, #-56]	; 0xffffffc8
   144e8:	ldrb	r5, [ip, r7]
   144ec:	cmp	r5, #126	; 0x7e
   144f0:	bhi	148fc <__mempcpy_chk@plt+0x38ec>
   144f4:	add	r3, pc, #16
   144f8:	mov	r4, #1
   144fc:	mov	r2, #110	; 0x6e
   14500:	mov	r0, #97	; 0x61
   14504:	mov	r1, #0
   14508:	ldr	pc, [r3, r5, lsl #2]
   1450c:	ldrdeq	r4, [r1], -ip
   14510:	strdeq	r4, [r1], -ip
   14514:	strdeq	r4, [r1], -ip
   14518:	strdeq	r4, [r1], -ip
   1451c:	strdeq	r4, [r1], -ip
   14520:	strdeq	r4, [r1], -ip
   14524:	strdeq	r4, [r1], -ip
   14528:	ldrdeq	r4, [r1], -r8
   1452c:			; <UNDEFINED> instruction: 0x000147bc
   14530:	andeq	r4, r1, r4, lsr #15
   14534:	andeq	r4, r1, r8, asr #15
   14538:	andeq	r4, r1, r8, asr r8
   1453c:	muleq	r1, ip, r7
   14540:	andeq	r4, r1, r4, asr #15
   14544:	strdeq	r4, [r1], -ip
   14548:	strdeq	r4, [r1], -ip
   1454c:	strdeq	r4, [r1], -ip
   14550:	strdeq	r4, [r1], -ip
   14554:	strdeq	r4, [r1], -ip
   14558:	strdeq	r4, [r1], -ip
   1455c:	strdeq	r4, [r1], -ip
   14560:	strdeq	r4, [r1], -ip
   14564:	strdeq	r4, [r1], -ip
   14568:	strdeq	r4, [r1], -ip
   1456c:	strdeq	r4, [r1], -ip
   14570:	strdeq	r4, [r1], -ip
   14574:	strdeq	r4, [r1], -ip
   14578:	strdeq	r4, [r1], -ip
   1457c:	strdeq	r4, [r1], -ip
   14580:	strdeq	r4, [r1], -ip
   14584:	strdeq	r4, [r1], -ip
   14588:	strdeq	r4, [r1], -ip
   1458c:	andeq	r4, r1, r4, asr r9
   14590:	andeq	r4, r1, r8, asr r9
   14594:	andeq	r4, r1, r8, asr r9
   14598:	andeq	r4, r1, r8, lsr #14
   1459c:	andeq	r4, r1, r8, asr r9
   145a0:	andeq	r4, r1, r8, lsl #14
   145a4:	andeq	r4, r1, r8, asr r9
   145a8:	andeq	r4, r1, r0, ror #16
   145ac:	andeq	r4, r1, r8, asr r9
   145b0:	andeq	r4, r1, r8, asr r9
   145b4:	andeq	r4, r1, r8, asr r9
   145b8:	andeq	r4, r1, r8, lsl #14
   145bc:	andeq	r4, r1, r8, lsl #14
   145c0:	andeq	r4, r1, r8, lsl #14
   145c4:	andeq	r4, r1, r8, lsl #14
   145c8:	andeq	r4, r1, r8, lsl #14
   145cc:	andeq	r4, r1, r8, lsl #14
   145d0:	andeq	r4, r1, r8, lsl #14
   145d4:	andeq	r4, r1, r8, lsl #14
   145d8:	andeq	r4, r1, r8, lsl #14
   145dc:	andeq	r4, r1, r8, lsl #14
   145e0:	andeq	r4, r1, r8, lsl #14
   145e4:	andeq	r4, r1, r8, lsl #14
   145e8:	andeq	r4, r1, r8, lsl #14
   145ec:	andeq	r4, r1, r8, lsl #14
   145f0:	andeq	r4, r1, r8, lsl #14
   145f4:	andeq	r4, r1, r8, lsl #14
   145f8:	andeq	r4, r1, r8, asr r9
   145fc:	andeq	r4, r1, r8, asr r9
   14600:	andeq	r4, r1, r8, asr r9
   14604:	andeq	r4, r1, r8, asr r9
   14608:	andeq	r4, r1, ip, lsl r8
   1460c:	strdeq	r4, [r1], -ip
   14610:	andeq	r4, r1, r8, lsl #14
   14614:	andeq	r4, r1, r8, lsl #14
   14618:	andeq	r4, r1, r8, lsl #14
   1461c:	andeq	r4, r1, r8, lsl #14
   14620:	andeq	r4, r1, r8, lsl #14
   14624:	andeq	r4, r1, r8, lsl #14
   14628:	andeq	r4, r1, r8, lsl #14
   1462c:	andeq	r4, r1, r8, lsl #14
   14630:	andeq	r4, r1, r8, lsl #14
   14634:	andeq	r4, r1, r8, lsl #14
   14638:	andeq	r4, r1, r8, lsl #14
   1463c:	andeq	r4, r1, r8, lsl #14
   14640:	andeq	r4, r1, r8, lsl #14
   14644:	andeq	r4, r1, r8, lsl #14
   14648:	andeq	r4, r1, r8, lsl #14
   1464c:	andeq	r4, r1, r8, lsl #14
   14650:	andeq	r4, r1, r8, lsl #14
   14654:	andeq	r4, r1, r8, lsl #14
   14658:	andeq	r4, r1, r8, lsl #14
   1465c:	andeq	r4, r1, r8, lsl #14
   14660:	andeq	r4, r1, r8, lsl #14
   14664:	andeq	r4, r1, r8, lsl #14
   14668:	andeq	r4, r1, r8, lsl #14
   1466c:	andeq	r4, r1, r8, lsl #14
   14670:	andeq	r4, r1, r8, lsl #14
   14674:	andeq	r4, r1, r8, lsl #14
   14678:	andeq	r4, r1, r8, asr r9
   1467c:	andeq	r4, r1, r8, ror #14
   14680:	andeq	r4, r1, r8, lsl #14
   14684:	andeq	r4, r1, r8, asr r9
   14688:	andeq	r4, r1, r8, lsl #14
   1468c:	andeq	r4, r1, r8, asr r9
   14690:	andeq	r4, r1, r8, lsl #14
   14694:	andeq	r4, r1, r8, lsl #14
   14698:	andeq	r4, r1, r8, lsl #14
   1469c:	andeq	r4, r1, r8, lsl #14
   146a0:	andeq	r4, r1, r8, lsl #14
   146a4:	andeq	r4, r1, r8, lsl #14
   146a8:	andeq	r4, r1, r8, lsl #14
   146ac:	andeq	r4, r1, r8, lsl #14
   146b0:	andeq	r4, r1, r8, lsl #14
   146b4:	andeq	r4, r1, r8, lsl #14
   146b8:	andeq	r4, r1, r8, lsl #14
   146bc:	andeq	r4, r1, r8, lsl #14
   146c0:	andeq	r4, r1, r8, lsl #14
   146c4:	andeq	r4, r1, r8, lsl #14
   146c8:	andeq	r4, r1, r8, lsl #14
   146cc:	andeq	r4, r1, r8, lsl #14
   146d0:	andeq	r4, r1, r8, lsl #14
   146d4:	andeq	r4, r1, r8, lsl #14
   146d8:	andeq	r4, r1, r8, lsl #14
   146dc:	andeq	r4, r1, r8, lsl #14
   146e0:	andeq	r4, r1, r8, lsl #14
   146e4:	andeq	r4, r1, r8, lsl #14
   146e8:	andeq	r4, r1, r8, lsl #14
   146ec:	andeq	r4, r1, r8, lsl #14
   146f0:	andeq	r4, r1, r8, lsl #14
   146f4:	andeq	r4, r1, r8, lsl #14
   146f8:	andeq	r4, r1, r8, asr #14
   146fc:	andeq	r4, r1, r8, asr r9
   14700:	andeq	r4, r1, r8, asr #14
   14704:	andeq	r4, r1, r8, lsr #14
   14708:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1470c:	cmp	r0, #0
   14710:	beq	149ec <__mempcpy_chk@plt+0x39dc>
   14714:	ldr	r0, [fp, #16]
   14718:	cmp	r0, #0
   1471c:	mov	r0, r5
   14720:	bne	149fc <__mempcpy_chk@plt+0x39ec>
   14724:	b	14a1c <__mempcpy_chk@plt+0x3a0c>
   14728:	mov	r4, #0
   1472c:	cmp	r7, #0
   14730:	beq	14954 <__mempcpy_chk@plt+0x3944>
   14734:	mov	r8, #0
   14738:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1473c:	cmp	r0, #0
   14740:	bne	14714 <__mempcpy_chk@plt+0x3704>
   14744:	b	149ec <__mempcpy_chk@plt+0x39dc>
   14748:	mov	r4, #0
   1474c:	cmn	lr, #1
   14750:	beq	1492c <__mempcpy_chk@plt+0x391c>
   14754:	cmp	r7, #0
   14758:	bne	14734 <__mempcpy_chk@plt+0x3724>
   1475c:	cmp	lr, #1
   14760:	beq	14954 <__mempcpy_chk@plt+0x3944>
   14764:	b	14734 <__mempcpy_chk@plt+0x3724>
   14768:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1476c:	cmp	r0, #2
   14770:	bne	14984 <__mempcpy_chk@plt+0x3974>
   14774:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14778:	tst	r0, #1
   1477c:	bne	151e4 <__mempcpy_chk@plt+0x41d4>
   14780:	mov	r8, #0
   14784:	mov	r0, #92	; 0x5c
   14788:	mov	r4, #0
   1478c:	cmp	r8, #0
   14790:	beq	149a4 <__mempcpy_chk@plt+0x3994>
   14794:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14798:	b	14a98 <__mempcpy_chk@plt+0x3a88>
   1479c:	mov	r0, #102	; 0x66
   147a0:	b	149d8 <__mempcpy_chk@plt+0x39c8>
   147a4:	mov	r2, #116	; 0x74
   147a8:	ldr	r0, [sp, #60]	; 0x3c
   147ac:	tst	r0, #1
   147b0:	mov	r0, r2
   147b4:	bne	149d8 <__mempcpy_chk@plt+0x39c8>
   147b8:	b	151e4 <__mempcpy_chk@plt+0x41d4>
   147bc:	mov	r0, #98	; 0x62
   147c0:	b	149d8 <__mempcpy_chk@plt+0x39c8>
   147c4:	mov	r2, #114	; 0x72
   147c8:	ldr	r0, [sp, #60]	; 0x3c
   147cc:	tst	r0, #1
   147d0:	mov	r0, r2
   147d4:	bne	149d8 <__mempcpy_chk@plt+0x39c8>
   147d8:	b	151e4 <__mempcpy_chk@plt+0x41d4>
   147dc:	ldr	r0, [sp, #80]	; 0x50
   147e0:	tst	r0, #1
   147e4:	beq	14ac0 <__mempcpy_chk@plt+0x3ab0>
   147e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   147ec:	tst	r0, #1
   147f0:	bne	1530c <__mempcpy_chk@plt+0x42fc>
   147f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   147f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   147fc:	cmp	r0, #2
   14800:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14804:	movwne	r0, #1
   14808:	orr	r0, r0, r2
   1480c:	tst	r0, #1
   14810:	beq	14db8 <__mempcpy_chk@plt+0x3da8>
   14814:	mov	r0, r9
   14818:	b	14dec <__mempcpy_chk@plt+0x3ddc>
   1481c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14820:	mov	r8, #0
   14824:	mov	r5, #63	; 0x3f
   14828:	cmp	r0, #5
   1482c:	beq	14c74 <__mempcpy_chk@plt+0x3c64>
   14830:	cmp	r0, #2
   14834:	bne	14d24 <__mempcpy_chk@plt+0x3d14>
   14838:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1483c:	tst	r0, #1
   14840:	bne	151e4 <__mempcpy_chk@plt+0x41d4>
   14844:	mov	r4, #0
   14848:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1484c:	cmp	r0, #0
   14850:	bne	14714 <__mempcpy_chk@plt+0x3704>
   14854:	b	149ec <__mempcpy_chk@plt+0x39dc>
   14858:	mov	r0, #118	; 0x76
   1485c:	b	149d8 <__mempcpy_chk@plt+0x39c8>
   14860:	mov	r0, #1
   14864:	mov	r5, #39	; 0x27
   14868:	str	r0, [sp, #52]	; 0x34
   1486c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14870:	cmp	r0, #2
   14874:	bne	148e8 <__mempcpy_chk@plt+0x38d8>
   14878:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1487c:	tst	r0, #1
   14880:	bne	151e4 <__mempcpy_chk@plt+0x41d4>
   14884:	ldr	r2, [sp, #48]	; 0x30
   14888:	clz	r1, sl
   1488c:	mov	r8, #0
   14890:	lsr	r1, r1, #5
   14894:	cmp	r2, #0
   14898:	mov	r0, r2
   1489c:	movwne	r0, #1
   148a0:	orrs	r0, r0, r1
   148a4:	moveq	r2, sl
   148a8:	moveq	sl, r0
   148ac:	cmp	r9, sl
   148b0:	str	r2, [sp, #48]	; 0x30
   148b4:	movcc	r0, #39	; 0x27
   148b8:	strbcc	r0, [r6, r9]
   148bc:	add	r0, r9, #1
   148c0:	cmp	r0, sl
   148c4:	movcc	r1, #92	; 0x5c
   148c8:	strbcc	r1, [r6, r0]
   148cc:	add	r0, r9, #2
   148d0:	add	r9, r9, #3
   148d4:	cmp	r0, sl
   148d8:	movcc	r1, #39	; 0x27
   148dc:	strbcc	r1, [r6, r0]
   148e0:	mov	r0, #0
   148e4:	str	r0, [fp, #-48]	; 0xffffffd0
   148e8:	mov	r4, #1
   148ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   148f0:	cmp	r0, #0
   148f4:	bne	14714 <__mempcpy_chk@plt+0x3704>
   148f8:	b	149ec <__mempcpy_chk@plt+0x39dc>
   148fc:	ldr	r0, [sp, #32]
   14900:	cmp	r0, #1
   14904:	bne	14af0 <__mempcpy_chk@plt+0x3ae0>
   14908:	str	lr, [sp, #84]	; 0x54
   1490c:	bl	10f14 <__ctype_b_loc@plt>
   14910:	ldr	r0, [r0]
   14914:	ldr	ip, [fp, #-84]	; 0xffffffac
   14918:	mov	r1, #1
   1491c:	add	r0, r0, r5, lsl #1
   14920:	ldrb	r0, [r0, #1]
   14924:	ubfx	r4, r0, #6, #1
   14928:	b	14ee8 <__mempcpy_chk@plt+0x3ed8>
   1492c:	cmp	r7, #0
   14930:	ldrbeq	r0, [ip, #1]
   14934:	cmpeq	r0, #0
   14938:	beq	14954 <__mempcpy_chk@plt+0x3944>
   1493c:	mvn	lr, #0
   14940:	mov	r8, #0
   14944:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14948:	cmp	r0, #0
   1494c:	bne	14714 <__mempcpy_chk@plt+0x3704>
   14950:	b	149ec <__mempcpy_chk@plt+0x39dc>
   14954:	mov	r1, #1
   14958:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1495c:	cmp	r0, #2
   14960:	bne	14970 <__mempcpy_chk@plt+0x3960>
   14964:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14968:	tst	r0, #1
   1496c:	bne	151e4 <__mempcpy_chk@plt+0x41d4>
   14970:	mov	r4, r1
   14974:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14978:	cmp	r0, #0
   1497c:	bne	14714 <__mempcpy_chk@plt+0x3704>
   14980:	b	149ec <__mempcpy_chk@plt+0x39dc>
   14984:	ldr	r1, [sp, #40]	; 0x28
   14988:	mov	r8, #0
   1498c:	mov	r0, #92	; 0x5c
   14990:	cmp	r1, #0
   14994:	beq	149d8 <__mempcpy_chk@plt+0x39c8>
   14998:	mov	r4, #0
   1499c:	cmp	r8, #0
   149a0:	bne	14794 <__mempcpy_chk@plt+0x3784>
   149a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   149a8:	tst	r2, #1
   149ac:	beq	14a98 <__mempcpy_chk@plt+0x3a88>
   149b0:	cmp	r9, sl
   149b4:	movcc	r1, #39	; 0x27
   149b8:	strbcc	r1, [r6, r9]
   149bc:	add	r1, r9, #1
   149c0:	add	r9, r9, #2
   149c4:	cmp	r1, sl
   149c8:	movcc	r2, #39	; 0x27
   149cc:	strbcc	r2, [r6, r1]
   149d0:	mov	r2, #0
   149d4:	b	14a98 <__mempcpy_chk@plt+0x3a88>
   149d8:	ldr	r1, [sp, #80]	; 0x50
   149dc:	mov	r4, #0
   149e0:	mov	r8, #0
   149e4:	tst	r1, #1
   149e8:	bne	14a28 <__mempcpy_chk@plt+0x3a18>
   149ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   149f0:	cmp	r0, #0
   149f4:	mov	r0, r5
   149f8:	beq	14a1c <__mempcpy_chk@plt+0x3a0c>
   149fc:	ldr	r1, [fp, #16]
   14a00:	ubfx	r0, r5, #5, #3
   14a04:	mov	r2, #1
   14a08:	ldr	r0, [r1, r0, lsl #2]
   14a0c:	and	r1, r5, #31
   14a10:	tst	r0, r2, lsl r1
   14a14:	mov	r0, r5
   14a18:	bne	14a28 <__mempcpy_chk@plt+0x3a18>
   14a1c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14a20:	cmp	r1, #0
   14a24:	beq	14e80 <__mempcpy_chk@plt+0x3e70>
   14a28:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14a2c:	tst	r1, #1
   14a30:	bne	151c4 <__mempcpy_chk@plt+0x41b4>
   14a34:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14a38:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14a3c:	cmp	r1, #2
   14a40:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14a44:	movwne	r1, #1
   14a48:	orr	r1, r1, r2
   14a4c:	tst	r1, #1
   14a50:	bne	14a88 <__mempcpy_chk@plt+0x3a78>
   14a54:	cmp	r9, sl
   14a58:	movcc	r1, #39	; 0x27
   14a5c:	strbcc	r1, [r6, r9]
   14a60:	add	r1, r9, #1
   14a64:	cmp	r1, sl
   14a68:	movcc	r2, #36	; 0x24
   14a6c:	strbcc	r2, [r6, r1]
   14a70:	add	r1, r9, #2
   14a74:	add	r9, r9, #3
   14a78:	cmp	r1, sl
   14a7c:	movcc	r2, #39	; 0x27
   14a80:	strbcc	r2, [r6, r1]
   14a84:	mov	r2, #1
   14a88:	cmp	r9, sl
   14a8c:	movcc	r1, #92	; 0x5c
   14a90:	strbcc	r1, [r6, r9]
   14a94:	add	r9, r9, #1
   14a98:	cmp	r9, sl
   14a9c:	add	r7, r7, #1
   14aa0:	strbcc	r0, [r6, r9]
   14aa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14aa8:	add	r9, r9, #1
   14aac:	and	r0, r0, r4
   14ab0:	mov	r4, r0
   14ab4:	cmn	lr, #1
   14ab8:	bne	1442c <__mempcpy_chk@plt+0x341c>
   14abc:	b	14438 <__mempcpy_chk@plt+0x3428>
   14ac0:	ldr	r0, [sp, #28]
   14ac4:	mov	r4, #0
   14ac8:	mov	r8, #0
   14acc:	mov	r5, #0
   14ad0:	cmp	r0, #0
   14ad4:	beq	149ec <__mempcpy_chk@plt+0x39dc>
   14ad8:	ldr	r4, [fp, #-52]	; 0xffffffcc
   14adc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14ae0:	add	r7, r7, #1
   14ae4:	cmn	lr, #1
   14ae8:	bne	1442c <__mempcpy_chk@plt+0x341c>
   14aec:	b	14438 <__mempcpy_chk@plt+0x3428>
   14af0:	mov	r0, #0
   14af4:	cmn	lr, #1
   14af8:	str	r0, [fp, #-36]	; 0xffffffdc
   14afc:	str	r0, [fp, #-40]	; 0xffffffd8
   14b00:	bne	14b14 <__mempcpy_chk@plt+0x3b04>
   14b04:	mov	r0, ip
   14b08:	bl	10f38 <strlen@plt>
   14b0c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14b10:	mov	lr, r0
   14b14:	ldr	r0, [sp, #36]	; 0x24
   14b18:	str	sl, [sp, #56]	; 0x38
   14b1c:	str	lr, [sp, #84]	; 0x54
   14b20:	cmp	r0, #0
   14b24:	beq	14d3c <__mempcpy_chk@plt+0x3d2c>
   14b28:	add	r0, ip, r7
   14b2c:	mov	r4, #1
   14b30:	mov	r6, #0
   14b34:	sub	sl, fp, #40	; 0x28
   14b38:	str	r0, [sp, #20]
   14b3c:	str	r6, [sp, #64]	; 0x40
   14b40:	add	r6, r6, r7
   14b44:	sub	r0, fp, #44	; 0x2c
   14b48:	mov	r3, sl
   14b4c:	add	r1, ip, r6
   14b50:	sub	r2, lr, r6
   14b54:	bl	16e80 <__mempcpy_chk@plt+0x5e70>
   14b58:	cmn	r0, #2
   14b5c:	beq	14e98 <__mempcpy_chk@plt+0x3e88>
   14b60:	ldr	sl, [sp, #56]	; 0x38
   14b64:	cmn	r0, #1
   14b68:	beq	14e8c <__mempcpy_chk@plt+0x3e7c>
   14b6c:	cmp	r0, #0
   14b70:	beq	14e90 <__mempcpy_chk@plt+0x3e80>
   14b74:	cmp	r0, #2
   14b78:	bcc	14c38 <__mempcpy_chk@plt+0x3c28>
   14b7c:	ldr	r1, [sp, #64]	; 0x40
   14b80:	ldr	r2, [sp, #20]
   14b84:	add	r1, r2, r1
   14b88:	mov	r2, #1
   14b8c:	ldrb	r3, [r1, r2]
   14b90:	sub	r3, r3, #91	; 0x5b
   14b94:	cmp	r3, #33	; 0x21
   14b98:	bhi	14c2c <__mempcpy_chk@plt+0x3c1c>
   14b9c:	add	r6, pc, #0
   14ba0:	ldr	pc, [r6, r3, lsl #2]
   14ba4:	strdeq	r5, [r1], -r0
   14ba8:	strdeq	r5, [r1], -r0
   14bac:	andeq	r4, r1, ip, lsr #24
   14bb0:	strdeq	r5, [r1], -r0
   14bb4:	andeq	r4, r1, ip, lsr #24
   14bb8:	strdeq	r5, [r1], -r0
   14bbc:	andeq	r4, r1, ip, lsr #24
   14bc0:	andeq	r4, r1, ip, lsr #24
   14bc4:	andeq	r4, r1, ip, lsr #24
   14bc8:	andeq	r4, r1, ip, lsr #24
   14bcc:	andeq	r4, r1, ip, lsr #24
   14bd0:	andeq	r4, r1, ip, lsr #24
   14bd4:	andeq	r4, r1, ip, lsr #24
   14bd8:	andeq	r4, r1, ip, lsr #24
   14bdc:	andeq	r4, r1, ip, lsr #24
   14be0:	andeq	r4, r1, ip, lsr #24
   14be4:	andeq	r4, r1, ip, lsr #24
   14be8:	andeq	r4, r1, ip, lsr #24
   14bec:	andeq	r4, r1, ip, lsr #24
   14bf0:	andeq	r4, r1, ip, lsr #24
   14bf4:	andeq	r4, r1, ip, lsr #24
   14bf8:	andeq	r4, r1, ip, lsr #24
   14bfc:	andeq	r4, r1, ip, lsr #24
   14c00:	andeq	r4, r1, ip, lsr #24
   14c04:	andeq	r4, r1, ip, lsr #24
   14c08:	andeq	r4, r1, ip, lsr #24
   14c0c:	andeq	r4, r1, ip, lsr #24
   14c10:	andeq	r4, r1, ip, lsr #24
   14c14:	andeq	r4, r1, ip, lsr #24
   14c18:	andeq	r4, r1, ip, lsr #24
   14c1c:	andeq	r4, r1, ip, lsr #24
   14c20:	andeq	r4, r1, ip, lsr #24
   14c24:	andeq	r4, r1, ip, lsr #24
   14c28:	strdeq	r5, [r1], -r0
   14c2c:	add	r2, r2, #1
   14c30:	cmp	r2, r0
   14c34:	bcc	14b8c <__mempcpy_chk@plt+0x3b7c>
   14c38:	ldr	r6, [sp, #64]	; 0x40
   14c3c:	add	r6, r0, r6
   14c40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c44:	bl	10e78 <iswprint@plt>
   14c48:	cmp	r0, #0
   14c4c:	sub	sl, fp, #40	; 0x28
   14c50:	movwne	r0, #1
   14c54:	and	r4, r4, r0
   14c58:	mov	r0, sl
   14c5c:	bl	10e30 <mbsinit@plt>
   14c60:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c64:	ldr	lr, [sp, #84]	; 0x54
   14c68:	cmp	r0, #0
   14c6c:	beq	14b3c <__mempcpy_chk@plt+0x3b2c>
   14c70:	b	14edc <__mempcpy_chk@plt+0x3ecc>
   14c74:	ldr	r0, [sp, #24]
   14c78:	cmp	r0, #0
   14c7c:	beq	14d24 <__mempcpy_chk@plt+0x3d14>
   14c80:	add	r0, r7, #2
   14c84:	cmp	r0, lr
   14c88:	bcs	14d24 <__mempcpy_chk@plt+0x3d14>
   14c8c:	add	r1, ip, r7
   14c90:	ldrb	r1, [r1, #1]
   14c94:	cmp	r1, #63	; 0x3f
   14c98:	bne	14d24 <__mempcpy_chk@plt+0x3d14>
   14c9c:	ldrb	r5, [ip, r0]
   14ca0:	sub	r1, r5, #33	; 0x21
   14ca4:	cmp	r1, #29
   14ca8:	bhi	14d24 <__mempcpy_chk@plt+0x3d14>
   14cac:	movw	r3, #20929	; 0x51c1
   14cb0:	mov	r2, #1
   14cb4:	movt	r3, #14336	; 0x3800
   14cb8:	tst	r3, r2, lsl r1
   14cbc:	beq	14d24 <__mempcpy_chk@plt+0x3d14>
   14cc0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14cc4:	tst	r1, #1
   14cc8:	bne	15314 <__mempcpy_chk@plt+0x4304>
   14ccc:	cmp	r9, sl
   14cd0:	mov	r7, r0
   14cd4:	mov	r4, #0
   14cd8:	movcc	r1, #63	; 0x3f
   14cdc:	strbcc	r1, [r6, r9]
   14ce0:	add	r1, r9, #1
   14ce4:	cmp	r1, sl
   14ce8:	movcc	r2, #34	; 0x22
   14cec:	strbcc	r2, [r6, r1]
   14cf0:	add	r1, r9, #2
   14cf4:	cmp	r1, sl
   14cf8:	movcc	r2, #34	; 0x22
   14cfc:	strbcc	r2, [r6, r1]
   14d00:	add	r1, r9, #3
   14d04:	add	r9, r9, #4
   14d08:	cmp	r1, sl
   14d0c:	movcc	r2, #63	; 0x3f
   14d10:	strbcc	r2, [r6, r1]
   14d14:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14d18:	cmp	r0, #0
   14d1c:	bne	14714 <__mempcpy_chk@plt+0x3704>
   14d20:	b	149ec <__mempcpy_chk@plt+0x39dc>
   14d24:	mov	r5, #63	; 0x3f
   14d28:	mov	r4, #0
   14d2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14d30:	cmp	r0, #0
   14d34:	bne	14714 <__mempcpy_chk@plt+0x3704>
   14d38:	b	149ec <__mempcpy_chk@plt+0x39dc>
   14d3c:	mov	r4, #1
   14d40:	mov	r6, #0
   14d44:	sub	sl, fp, #40	; 0x28
   14d48:	str	r6, [sp, #64]	; 0x40
   14d4c:	add	r6, r6, r7
   14d50:	sub	r0, fp, #44	; 0x2c
   14d54:	mov	r3, sl
   14d58:	add	r1, ip, r6
   14d5c:	sub	r2, lr, r6
   14d60:	bl	16e80 <__mempcpy_chk@plt+0x5e70>
   14d64:	cmn	r0, #2
   14d68:	beq	14e98 <__mempcpy_chk@plt+0x3e88>
   14d6c:	cmn	r0, #1
   14d70:	beq	14e8c <__mempcpy_chk@plt+0x3e7c>
   14d74:	ldr	r6, [sp, #64]	; 0x40
   14d78:	cmp	r0, #0
   14d7c:	beq	14ed8 <__mempcpy_chk@plt+0x3ec8>
   14d80:	add	r6, r0, r6
   14d84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d88:	bl	10e78 <iswprint@plt>
   14d8c:	cmp	r0, #0
   14d90:	sub	sl, fp, #40	; 0x28
   14d94:	movwne	r0, #1
   14d98:	and	r4, r4, r0
   14d9c:	mov	r0, sl
   14da0:	bl	10e30 <mbsinit@plt>
   14da4:	ldr	ip, [fp, #-84]	; 0xffffffac
   14da8:	ldr	lr, [sp, #84]	; 0x54
   14dac:	cmp	r0, #0
   14db0:	beq	14d48 <__mempcpy_chk@plt+0x3d38>
   14db4:	b	14edc <__mempcpy_chk@plt+0x3ecc>
   14db8:	cmp	r9, sl
   14dbc:	mov	r2, #1
   14dc0:	movcc	r0, #39	; 0x27
   14dc4:	strbcc	r0, [r6, r9]
   14dc8:	add	r0, r9, #1
   14dcc:	cmp	r0, sl
   14dd0:	movcc	r1, #36	; 0x24
   14dd4:	strbcc	r1, [r6, r0]
   14dd8:	add	r0, r9, #2
   14ddc:	cmp	r0, sl
   14de0:	movcc	r1, #39	; 0x27
   14de4:	strbcc	r1, [r6, r0]
   14de8:	add	r0, r9, #3
   14dec:	cmp	r0, sl
   14df0:	add	r9, r0, #1
   14df4:	str	r2, [fp, #-48]	; 0xffffffd0
   14df8:	movcc	r1, #92	; 0x5c
   14dfc:	strbcc	r1, [r6, r0]
   14e00:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14e04:	cmp	r1, #2
   14e08:	beq	14e68 <__mempcpy_chk@plt+0x3e58>
   14e0c:	add	r1, r7, #1
   14e10:	mov	r4, #0
   14e14:	mov	r8, #1
   14e18:	mov	r5, #48	; 0x30
   14e1c:	cmp	r1, lr
   14e20:	bcs	14708 <__mempcpy_chk@plt+0x36f8>
   14e24:	ldrb	r1, [ip, r1]
   14e28:	sub	r1, r1, #48	; 0x30
   14e2c:	uxtb	r1, r1
   14e30:	cmp	r1, #9
   14e34:	bhi	14708 <__mempcpy_chk@plt+0x36f8>
   14e38:	cmp	r9, sl
   14e3c:	movcc	r1, #48	; 0x30
   14e40:	strbcc	r1, [r6, r9]
   14e44:	add	r1, r0, #2
   14e48:	add	r9, r0, #3
   14e4c:	cmp	r1, sl
   14e50:	movcc	r2, #48	; 0x30
   14e54:	strbcc	r2, [r6, r1]
   14e58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14e5c:	cmp	r0, #0
   14e60:	bne	14714 <__mempcpy_chk@plt+0x3704>
   14e64:	b	149ec <__mempcpy_chk@plt+0x39dc>
   14e68:	mov	r0, #48	; 0x30
   14e6c:	mov	r8, #1
   14e70:	mov	r4, #0
   14e74:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14e78:	cmp	r1, #0
   14e7c:	bne	14a28 <__mempcpy_chk@plt+0x3a18>
   14e80:	cmp	r8, #0
   14e84:	beq	149a4 <__mempcpy_chk@plt+0x3994>
   14e88:	b	14794 <__mempcpy_chk@plt+0x3784>
   14e8c:	mov	r4, #0
   14e90:	ldr	ip, [fp, #-84]	; 0xffffffac
   14e94:	b	14ed0 <__mempcpy_chk@plt+0x3ec0>
   14e98:	ldr	r1, [sp, #84]	; 0x54
   14e9c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14ea0:	mov	r4, #0
   14ea4:	cmp	r6, r1
   14ea8:	bcs	14ed0 <__mempcpy_chk@plt+0x3ec0>
   14eac:	ldrb	r0, [ip, r6]
   14eb0:	cmp	r0, #0
   14eb4:	beq	14ed0 <__mempcpy_chk@plt+0x3ec0>
   14eb8:	ldr	r0, [sp, #64]	; 0x40
   14ebc:	add	r0, r0, #1
   14ec0:	add	r6, r0, r7
   14ec4:	str	r0, [sp, #64]	; 0x40
   14ec8:	cmp	r6, r1
   14ecc:	bcc	14eac <__mempcpy_chk@plt+0x3e9c>
   14ed0:	ldr	r6, [sp, #64]	; 0x40
   14ed4:	b	14edc <__mempcpy_chk@plt+0x3ecc>
   14ed8:	ldr	ip, [fp, #-84]	; 0xffffffac
   14edc:	mov	r1, r6
   14ee0:	ldr	r6, [sp, #76]	; 0x4c
   14ee4:	ldr	sl, [sp, #56]	; 0x38
   14ee8:	ldr	r0, [sp, #44]	; 0x2c
   14eec:	cmp	r1, #1
   14ef0:	orr	r2, r4, r0
   14ef4:	mov	r0, r1
   14ef8:	bhi	14f18 <__mempcpy_chk@plt+0x3f08>
   14efc:	tst	r2, #1
   14f00:	beq	14f18 <__mempcpy_chk@plt+0x3f08>
   14f04:	ldr	lr, [sp, #84]	; 0x54
   14f08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14f0c:	cmp	r0, #0
   14f10:	bne	14714 <__mempcpy_chk@plt+0x3704>
   14f14:	b	149ec <__mempcpy_chk@plt+0x39dc>
   14f18:	str	r2, [sp, #64]	; 0x40
   14f1c:	add	r0, r0, r7
   14f20:	add	r1, r7, #1
   14f24:	ldr	lr, [sp, #84]	; 0x54
   14f28:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14f2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14f30:	mov	r3, #0
   14f34:	str	r0, [sp, #56]	; 0x38
   14f38:	ldr	r0, [sp, #64]	; 0x40
   14f3c:	tst	r0, #1
   14f40:	bne	15028 <__mempcpy_chk@plt+0x4018>
   14f44:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14f48:	tst	r0, #1
   14f4c:	bne	151c8 <__mempcpy_chk@plt+0x41b8>
   14f50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14f54:	cmp	r7, #2
   14f58:	movwne	r3, #1
   14f5c:	orr	r3, r3, r2
   14f60:	tst	r3, #1
   14f64:	bne	14f9c <__mempcpy_chk@plt+0x3f8c>
   14f68:	cmp	r9, sl
   14f6c:	add	r3, r9, #1
   14f70:	movcc	r2, #39	; 0x27
   14f74:	strbcc	r2, [r6, r9]
   14f78:	cmp	r3, sl
   14f7c:	movcc	r2, #36	; 0x24
   14f80:	strbcc	r2, [r6, r3]
   14f84:	add	r3, r9, #2
   14f88:	add	r9, r9, #3
   14f8c:	cmp	r3, sl
   14f90:	movcc	r2, #39	; 0x27
   14f94:	strbcc	r2, [r6, r3]
   14f98:	mov	r2, #1
   14f9c:	cmp	r9, sl
   14fa0:	mov	r0, r2
   14fa4:	movcc	r3, #92	; 0x5c
   14fa8:	strbcc	r3, [r6, r9]
   14fac:	add	r3, r9, #1
   14fb0:	cmp	r3, sl
   14fb4:	andcc	r7, r5, #192	; 0xc0
   14fb8:	movcc	r2, #48	; 0x30
   14fbc:	orrcc	r7, r2, r7, lsr #6
   14fc0:	strbcc	r7, [r6, r3]
   14fc4:	add	r3, r9, #2
   14fc8:	add	r9, r9, #3
   14fcc:	cmp	r3, sl
   14fd0:	lsrcc	r7, r5, #3
   14fd4:	movcc	r2, #6
   14fd8:	bficc	r7, r2, #3, #29
   14fdc:	mov	r2, #6
   14fe0:	strbcc	r7, [r6, r3]
   14fe4:	bfi	r5, r2, #3, #29
   14fe8:	mov	r3, #1
   14fec:	mov	r2, r0
   14ff0:	ldr	r0, [sp, #56]	; 0x38
   14ff4:	and	r8, r3, #1
   14ff8:	cmp	r0, r1
   14ffc:	bhi	1505c <__mempcpy_chk@plt+0x404c>
   15000:	b	1509c <__mempcpy_chk@plt+0x408c>
   15004:	cmp	r9, sl
   15008:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1500c:	strbcc	r5, [r6, r9]
   15010:	add	r9, r9, #1
   15014:	ldrb	r5, [ip, r1]
   15018:	add	r1, r1, #1
   1501c:	ldr	r0, [sp, #64]	; 0x40
   15020:	tst	r0, #1
   15024:	beq	14f44 <__mempcpy_chk@plt+0x3f34>
   15028:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1502c:	tst	r7, #1
   15030:	beq	15044 <__mempcpy_chk@plt+0x4034>
   15034:	cmp	r9, sl
   15038:	movcc	r7, #92	; 0x5c
   1503c:	strbcc	r7, [r6, r9]
   15040:	add	r9, r9, #1
   15044:	mov	r7, #0
   15048:	str	r7, [fp, #-56]	; 0xffffffc8
   1504c:	ldr	r0, [sp, #56]	; 0x38
   15050:	and	r8, r3, #1
   15054:	cmp	r0, r1
   15058:	bls	1509c <__mempcpy_chk@plt+0x408c>
   1505c:	cmp	r8, #0
   15060:	mvn	r7, r2
   15064:	movwne	r8, #1
   15068:	orr	r7, r7, r8
   1506c:	tst	r7, #1
   15070:	bne	15004 <__mempcpy_chk@plt+0x3ff4>
   15074:	cmp	r9, sl
   15078:	movcc	r7, #39	; 0x27
   1507c:	strbcc	r7, [r6, r9]
   15080:	add	r7, r9, #1
   15084:	add	r9, r9, #2
   15088:	cmp	r7, sl
   1508c:	movcc	r2, #39	; 0x27
   15090:	strbcc	r2, [r6, r7]
   15094:	mov	r2, #0
   15098:	b	15004 <__mempcpy_chk@plt+0x3ff4>
   1509c:	cmp	r8, #0
   150a0:	sub	r7, r1, #1
   150a4:	mov	r0, r5
   150a8:	str	r2, [fp, #-48]	; 0xffffffd0
   150ac:	movwne	r8, #1
   150b0:	cmp	r8, #0
   150b4:	beq	149a4 <__mempcpy_chk@plt+0x3994>
   150b8:	b	14794 <__mempcpy_chk@plt+0x3784>
   150bc:	mov	lr, r7
   150c0:	b	150c8 <__mempcpy_chk@plt+0x40b8>
   150c4:	mvn	lr, #0
   150c8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   150cc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   150d0:	eor	r0, r7, #2
   150d4:	orr	r0, r0, r9
   150d8:	clz	r0, r0
   150dc:	lsr	r0, r0, #5
   150e0:	tst	r1, r0
   150e4:	bne	151e4 <__mempcpy_chk@plt+0x41d4>
   150e8:	mov	r0, r1
   150ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
   150f0:	cmp	r7, #2
   150f4:	movwne	r1, #1
   150f8:	orr	r0, r0, r1
   150fc:	tst	r0, #1
   15100:	ldreq	r0, [sp, #52]	; 0x34
   15104:	streq	lr, [sp, #84]	; 0x54
   15108:	eoreq	r0, r0, #1
   1510c:	tsteq	r0, #1
   15110:	bne	152a8 <__mempcpy_chk@plt+0x4298>
   15114:	tst	r4, #1
   15118:	bne	15264 <__mempcpy_chk@plt+0x4254>
   1511c:	ldr	r6, [sp, #48]	; 0x30
   15120:	mov	r8, #0
   15124:	cmp	r6, #0
   15128:	beq	152a0 <__mempcpy_chk@plt+0x4290>
   1512c:	ldr	r0, [sp, #80]	; 0x50
   15130:	mov	r1, #0
   15134:	cmp	sl, #0
   15138:	mov	r4, #0
   1513c:	str	r1, [fp, #-72]	; 0xffffffb8
   15140:	beq	14034 <__mempcpy_chk@plt+0x3024>
   15144:	b	152a8 <__mempcpy_chk@plt+0x4298>
   15148:	ldrb	r1, [r0, #3]
   1514c:	cmp	r1, #56	; 0x38
   15150:	ldrbeq	r1, [r0, #4]
   15154:	cmpeq	r1, #48	; 0x30
   15158:	bne	1422c <__mempcpy_chk@plt+0x321c>
   1515c:	ldrb	r1, [r0, #5]
   15160:	cmp	r1, #51	; 0x33
   15164:	ldrbeq	r1, [r0, #6]
   15168:	cmpeq	r1, #48	; 0x30
   1516c:	bne	1422c <__mempcpy_chk@plt+0x321c>
   15170:	ldrb	r0, [r0, #7]
   15174:	cmp	r0, #0
   15178:	movw	r0, #31252	; 0x7a14
   1517c:	movt	r0, #1
   15180:	str	r0, [sp, #68]	; 0x44
   15184:	bne	1422c <__mempcpy_chk@plt+0x321c>
   15188:	b	14248 <__mempcpy_chk@plt+0x3238>
   1518c:	ldrb	r1, [r0, #4]
   15190:	cmp	r1, #48	; 0x30
   15194:	ldrbeq	r1, [r0, #5]
   15198:	cmpeq	r1, #51	; 0x33
   1519c:	bne	14310 <__mempcpy_chk@plt+0x3300>
   151a0:	ldrb	r1, [r0, #6]
   151a4:	cmp	r1, #48	; 0x30
   151a8:	ldrbeq	r0, [r0, #7]
   151ac:	cmpeq	r0, #0
   151b0:	bne	14310 <__mempcpy_chk@plt+0x3300>
   151b4:	movw	r0, #31256	; 0x7a18
   151b8:	movt	r0, #1
   151bc:	str	r0, [sp, #72]	; 0x48
   151c0:	b	14330 <__mempcpy_chk@plt+0x3320>
   151c4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   151c8:	ldr	r2, [sp, #80]	; 0x50
   151cc:	b	15204 <__mempcpy_chk@plt+0x41f4>
   151d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   151d4:	mov	r2, #1
   151d8:	mov	lr, r4
   151dc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   151e0:	b	15204 <__mempcpy_chk@plt+0x41f4>
   151e4:	ldr	r2, [sp, #80]	; 0x50
   151e8:	mov	r7, #2
   151ec:	b	15204 <__mempcpy_chk@plt+0x41f4>
   151f0:	ldr	r6, [sp, #76]	; 0x4c
   151f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   151f8:	ldr	lr, [sp, #84]	; 0x54
   151fc:	ldr	r2, [sp, #80]	; 0x50
   15200:	mov	r7, #2
   15204:	mov	r0, #0
   15208:	ldr	r1, [fp, #12]
   1520c:	tst	r2, #1
   15210:	mov	r2, r7
   15214:	mov	r3, lr
   15218:	str	r0, [sp, #8]
   1521c:	ldr	r0, [sp, #68]	; 0x44
   15220:	movwne	r2, #4
   15224:	cmp	r7, #2
   15228:	movne	r2, r7
   1522c:	str	r2, [sp]
   15230:	mov	r2, ip
   15234:	bic	r1, r1, #2
   15238:	str	r0, [sp, #12]
   1523c:	ldr	r0, [sp, #72]	; 0x48
   15240:	str	r1, [sp, #4]
   15244:	mov	r1, sl
   15248:	str	r0, [sp, #16]
   1524c:	mov	r0, r6
   15250:	bl	13fb8 <__mempcpy_chk@plt+0x2fa8>
   15254:	mov	r9, r0
   15258:	mov	r0, r9
   1525c:	sub	sp, fp, #28
   15260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15264:	mov	r0, #5
   15268:	ldr	r1, [sp, #48]	; 0x30
   1526c:	ldr	r2, [fp, #-84]	; 0xffffffac
   15270:	ldr	r3, [sp, #84]	; 0x54
   15274:	str	r0, [sp]
   15278:	ldr	r0, [fp, #12]
   1527c:	str	r0, [sp, #4]
   15280:	ldr	r0, [fp, #16]
   15284:	str	r0, [sp, #8]
   15288:	ldr	r0, [sp, #68]	; 0x44
   1528c:	str	r0, [sp, #12]
   15290:	ldr	r0, [sp, #72]	; 0x48
   15294:	str	r0, [sp, #16]
   15298:	ldr	r0, [sp, #76]	; 0x4c
   1529c:	b	15250 <__mempcpy_chk@plt+0x4240>
   152a0:	mov	r0, #0
   152a4:	str	r0, [fp, #-72]	; 0xffffffb8
   152a8:	ldr	r1, [sp, #92]	; 0x5c
   152ac:	cmp	r1, #0
   152b0:	beq	152f0 <__mempcpy_chk@plt+0x42e0>
   152b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   152b8:	ldr	r2, [sp, #76]	; 0x4c
   152bc:	tst	r0, #1
   152c0:	bne	152f4 <__mempcpy_chk@plt+0x42e4>
   152c4:	ldrb	r0, [r1]
   152c8:	cmp	r0, #0
   152cc:	beq	152f4 <__mempcpy_chk@plt+0x42e4>
   152d0:	add	r1, r1, #1
   152d4:	cmp	r9, sl
   152d8:	strbcc	r0, [r2, r9]
   152dc:	add	r9, r9, #1
   152e0:	ldrb	r0, [r1], #1
   152e4:	cmp	r0, #0
   152e8:	bne	152d4 <__mempcpy_chk@plt+0x42c4>
   152ec:	b	152f4 <__mempcpy_chk@plt+0x42e4>
   152f0:	ldr	r2, [sp, #76]	; 0x4c
   152f4:	cmp	r9, sl
   152f8:	movcc	r0, #0
   152fc:	strbcc	r0, [r2, r9]
   15300:	mov	r0, r9
   15304:	sub	sp, fp, #28
   15308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1530c:	mov	r2, #1
   15310:	b	151dc <__mempcpy_chk@plt+0x41cc>
   15314:	ldr	r2, [sp, #80]	; 0x50
   15318:	mov	r7, #5
   1531c:	b	15204 <__mempcpy_chk@plt+0x41f4>
   15320:	bl	10ff8 <abort@plt>
   15324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15328:	add	fp, sp, #28
   1532c:	sub	sp, sp, #28
   15330:	movw	r5, #33128	; 0x8168
   15334:	cmp	r2, #0
   15338:	mov	r4, r1
   1533c:	mov	r7, r0
   15340:	str	r0, [sp, #20]
   15344:	movt	r5, #2
   15348:	movne	r5, r2
   1534c:	bl	10f44 <__errno_location@plt>
   15350:	mov	sl, r0
   15354:	ldm	r5, {r0, r1}
   15358:	ldr	r2, [r5, #40]	; 0x28
   1535c:	ldr	r3, [r5, #44]	; 0x2c
   15360:	add	r9, r5, #8
   15364:	ldr	r6, [sl]
   15368:	orr	r8, r1, #1
   1536c:	mov	r1, #0
   15370:	str	r6, [sp, #24]
   15374:	stm	sp, {r0, r8, r9}
   15378:	str	r2, [sp, #12]
   1537c:	str	r3, [sp, #16]
   15380:	mov	r0, #0
   15384:	mov	r2, r7
   15388:	mov	r3, r4
   1538c:	mov	r6, r4
   15390:	bl	13fb8 <__mempcpy_chk@plt+0x2fa8>
   15394:	add	r7, r0, #1
   15398:	mov	r0, r7
   1539c:	bl	1658c <__mempcpy_chk@plt+0x557c>
   153a0:	mov	r4, r0
   153a4:	ldr	r0, [r5]
   153a8:	ldr	r2, [r5, #44]	; 0x2c
   153ac:	ldr	r1, [r5, #40]	; 0x28
   153b0:	mov	r3, r6
   153b4:	stm	sp, {r0, r8, r9}
   153b8:	str	r2, [sp, #16]
   153bc:	str	r1, [sp, #12]
   153c0:	mov	r0, r4
   153c4:	mov	r1, r7
   153c8:	ldr	r2, [sp, #20]
   153cc:	bl	13fb8 <__mempcpy_chk@plt+0x2fa8>
   153d0:	ldr	r0, [sp, #24]
   153d4:	str	r0, [sl]
   153d8:	mov	r0, r4
   153dc:	sub	sp, fp, #28
   153e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153e8:	add	fp, sp, #28
   153ec:	sub	sp, sp, #36	; 0x24
   153f0:	movw	r8, #33128	; 0x8168
   153f4:	cmp	r3, #0
   153f8:	mov	r4, r2
   153fc:	str	r2, [sp, #24]
   15400:	mov	r5, r1
   15404:	mov	r6, r0
   15408:	str	r0, [sp, #20]
   1540c:	movt	r8, #2
   15410:	movne	r8, r3
   15414:	bl	10f44 <__errno_location@plt>
   15418:	str	r0, [sp, #28]
   1541c:	cmp	r4, #0
   15420:	add	sl, r8, #8
   15424:	ldm	r8, {r3, r9}
   15428:	ldr	r7, [r0]
   1542c:	ldr	r1, [r8, #40]	; 0x28
   15430:	ldr	r2, [r8, #44]	; 0x2c
   15434:	mov	r0, #0
   15438:	orreq	r9, r9, #1
   1543c:	str	r7, [sp, #32]
   15440:	mov	r7, r5
   15444:	stm	sp, {r3, r9, sl}
   15448:	str	r1, [sp, #12]
   1544c:	str	r2, [sp, #16]
   15450:	mov	r1, #0
   15454:	mov	r2, r6
   15458:	mov	r3, r5
   1545c:	bl	13fb8 <__mempcpy_chk@plt+0x2fa8>
   15460:	add	r4, r0, #1
   15464:	mov	r5, r0
   15468:	mov	r0, r4
   1546c:	bl	1658c <__mempcpy_chk@plt+0x557c>
   15470:	mov	r6, r0
   15474:	ldr	r0, [r8]
   15478:	ldr	r2, [r8, #44]	; 0x2c
   1547c:	ldr	r1, [r8, #40]	; 0x28
   15480:	mov	r3, r7
   15484:	stm	sp, {r0, r9, sl}
   15488:	str	r2, [sp, #16]
   1548c:	str	r1, [sp, #12]
   15490:	mov	r0, r6
   15494:	mov	r1, r4
   15498:	ldr	r2, [sp, #20]
   1549c:	bl	13fb8 <__mempcpy_chk@plt+0x2fa8>
   154a0:	ldr	r0, [sp, #24]
   154a4:	ldr	r1, [sp, #32]
   154a8:	ldr	r2, [sp, #28]
   154ac:	cmp	r0, #0
   154b0:	str	r1, [r2]
   154b4:	strne	r5, [r0]
   154b8:	mov	r0, r6
   154bc:	sub	sp, fp, #28
   154c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154c4:	push	{r4, r5, r6, r7, fp, lr}
   154c8:	add	fp, sp, #16
   154cc:	movw	r4, #33056	; 0x8120
   154d0:	movt	r4, #2
   154d4:	ldrd	r6, [r4]
   154d8:	cmp	r7, #2
   154dc:	blt	15508 <__mempcpy_chk@plt+0x44f8>
   154e0:	add	r5, r6, #12
   154e4:	mov	r7, #0
   154e8:	ldr	r0, [r5, r7, lsl #3]
   154ec:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   154f0:	ldr	r1, [r4, #4]
   154f4:	add	r2, r7, #2
   154f8:	add	r0, r7, #1
   154fc:	mov	r7, r0
   15500:	cmp	r2, r1
   15504:	blt	154e8 <__mempcpy_chk@plt+0x44d8>
   15508:	ldr	r0, [r6, #4]
   1550c:	movw	r5, #33176	; 0x8198
   15510:	movt	r5, #2
   15514:	cmp	r0, r5
   15518:	beq	1552c <__mempcpy_chk@plt+0x451c>
   1551c:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   15520:	mov	r0, #256	; 0x100
   15524:	str	r0, [r4, #8]
   15528:	str	r5, [r4, #12]
   1552c:	add	r5, r4, #8
   15530:	cmp	r6, r5
   15534:	beq	15544 <__mempcpy_chk@plt+0x4534>
   15538:	mov	r0, r6
   1553c:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   15540:	str	r5, [r4]
   15544:	mov	r0, #1
   15548:	str	r0, [r4, #4]
   1554c:	pop	{r4, r5, r6, r7, fp, pc}
   15550:	movw	r3, #33128	; 0x8168
   15554:	mvn	r2, #0
   15558:	movt	r3, #2
   1555c:	b	15560 <__mempcpy_chk@plt+0x4550>
   15560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15564:	add	fp, sp, #28
   15568:	sub	sp, sp, #44	; 0x2c
   1556c:	mov	r7, r3
   15570:	str	r2, [sp, #36]	; 0x24
   15574:	str	r1, [sp, #32]
   15578:	mov	r5, r0
   1557c:	bl	10f44 <__errno_location@plt>
   15580:	cmp	r5, #0
   15584:	blt	156e8 <__mempcpy_chk@plt+0x46d8>
   15588:	cmn	r5, #-2147483647	; 0x80000001
   1558c:	beq	156e8 <__mempcpy_chk@plt+0x46d8>
   15590:	movw	r8, #33056	; 0x8120
   15594:	mov	r4, r0
   15598:	movt	r8, #2
   1559c:	ldr	r6, [r8]
   155a0:	ldr	r1, [r8, #4]
   155a4:	ldr	r0, [r0]
   155a8:	str	r4, [sp, #28]
   155ac:	cmp	r1, r5
   155b0:	str	r0, [sp, #24]
   155b4:	ble	155c0 <__mempcpy_chk@plt+0x45b0>
   155b8:	mov	sl, r6
   155bc:	b	15624 <__mempcpy_chk@plt+0x4614>
   155c0:	mov	r0, #8
   155c4:	add	r9, r8, #8
   155c8:	add	r2, r5, #1
   155cc:	str	r1, [fp, #-32]	; 0xffffffe0
   155d0:	mvn	r3, #-2147483648	; 0x80000000
   155d4:	str	r0, [sp]
   155d8:	subs	r0, r6, r9
   155dc:	sub	r2, r2, r1
   155e0:	sub	r1, fp, #32
   155e4:	movne	r0, r6
   155e8:	bl	1678c <__mempcpy_chk@plt+0x577c>
   155ec:	str	r0, [r8]
   155f0:	cmp	r6, r9
   155f4:	mov	sl, r0
   155f8:	ldrdeq	r0, [r8, #8]
   155fc:	stmeq	sl, {r0, r1}
   15600:	ldr	r1, [r8, #4]
   15604:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15608:	add	r0, sl, r1, lsl #3
   1560c:	sub	r1, r2, r1
   15610:	lsl	r2, r1, #3
   15614:	mov	r1, #0
   15618:	bl	10f5c <memset@plt>
   1561c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15620:	str	r0, [r8, #4]
   15624:	mov	r9, sl
   15628:	ldr	r6, [r9, r5, lsl #3]!
   1562c:	ldr	r4, [r9, #4]!
   15630:	ldm	r7, {r0, r1}
   15634:	ldr	r2, [r7, #40]	; 0x28
   15638:	ldr	r3, [r7, #44]	; 0x2c
   1563c:	orr	r8, r1, #1
   15640:	add	r1, r7, #8
   15644:	stm	sp, {r0, r8}
   15648:	add	r0, sp, #8
   1564c:	str	r1, [sp, #20]
   15650:	stm	r0, {r1, r2, r3}
   15654:	mov	r0, r4
   15658:	mov	r1, r6
   1565c:	ldr	r2, [sp, #32]
   15660:	ldr	r3, [sp, #36]	; 0x24
   15664:	bl	13fb8 <__mempcpy_chk@plt+0x2fa8>
   15668:	cmp	r6, r0
   1566c:	bhi	156d0 <__mempcpy_chk@plt+0x46c0>
   15670:	add	r6, r0, #1
   15674:	movw	r0, #33176	; 0x8198
   15678:	movt	r0, #2
   1567c:	str	r6, [sl, r5, lsl #3]
   15680:	cmp	r4, r0
   15684:	beq	15690 <__mempcpy_chk@plt+0x4680>
   15688:	mov	r0, r4
   1568c:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   15690:	mov	r0, r6
   15694:	bl	1658c <__mempcpy_chk@plt+0x557c>
   15698:	str	r0, [r9]
   1569c:	mov	r4, r0
   156a0:	add	r3, sp, #8
   156a4:	ldr	r0, [r7]
   156a8:	ldr	r1, [r7, #40]	; 0x28
   156ac:	ldr	r2, [r7, #44]	; 0x2c
   156b0:	stm	sp, {r0, r8}
   156b4:	ldr	r0, [sp, #20]
   156b8:	stm	r3, {r0, r1, r2}
   156bc:	mov	r0, r4
   156c0:	mov	r1, r6
   156c4:	ldr	r2, [sp, #32]
   156c8:	ldr	r3, [sp, #36]	; 0x24
   156cc:	bl	13fb8 <__mempcpy_chk@plt+0x2fa8>
   156d0:	ldr	r1, [sp, #24]
   156d4:	ldr	r0, [sp, #28]
   156d8:	str	r1, [r0]
   156dc:	mov	r0, r4
   156e0:	sub	sp, fp, #28
   156e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156e8:	bl	10ff8 <abort@plt>
   156ec:	movw	r3, #33128	; 0x8168
   156f0:	movt	r3, #2
   156f4:	b	15560 <__mempcpy_chk@plt+0x4550>
   156f8:	movw	r3, #33128	; 0x8168
   156fc:	mov	r1, r0
   15700:	mov	r0, #0
   15704:	mvn	r2, #0
   15708:	movt	r3, #2
   1570c:	b	15560 <__mempcpy_chk@plt+0x4550>
   15710:	movw	r3, #33128	; 0x8168
   15714:	mov	r2, r1
   15718:	mov	r1, r0
   1571c:	mov	r0, #0
   15720:	movt	r3, #2
   15724:	b	15560 <__mempcpy_chk@plt+0x4550>
   15728:	push	{fp, lr}
   1572c:	mov	fp, sp
   15730:	sub	sp, sp, #48	; 0x30
   15734:	vmov.i32	q8, #0	; 0x00000000
   15738:	mov	ip, #32
   1573c:	mov	r3, sp
   15740:	mov	lr, r2
   15744:	cmp	r1, #10
   15748:	add	r2, r3, #16
   1574c:	vst1.64	{d16-d17}, [r3], ip
   15750:	vst1.64	{d16-d17}, [r3]
   15754:	vst1.64	{d16-d17}, [r2]
   15758:	beq	15778 <__mempcpy_chk@plt+0x4768>
   1575c:	str	r1, [sp]
   15760:	mov	r3, sp
   15764:	mov	r1, lr
   15768:	mvn	r2, #0
   1576c:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15770:	mov	sp, fp
   15774:	pop	{fp, pc}
   15778:	bl	10ff8 <abort@plt>
   1577c:	push	{r4, sl, fp, lr}
   15780:	add	fp, sp, #8
   15784:	sub	sp, sp, #48	; 0x30
   15788:	mov	ip, r3
   1578c:	mov	r3, sp
   15790:	vmov.i32	q8, #0	; 0x00000000
   15794:	mov	lr, #32
   15798:	cmp	r1, #10
   1579c:	add	r4, r3, #16
   157a0:	vst1.64	{d16-d17}, [r3], lr
   157a4:	vst1.64	{d16-d17}, [r3]
   157a8:	vst1.64	{d16-d17}, [r4]
   157ac:	beq	157cc <__mempcpy_chk@plt+0x47bc>
   157b0:	str	r1, [sp]
   157b4:	mov	r1, r2
   157b8:	mov	r3, sp
   157bc:	mov	r2, ip
   157c0:	bl	15560 <__mempcpy_chk@plt+0x4550>
   157c4:	sub	sp, fp, #8
   157c8:	pop	{r4, sl, fp, pc}
   157cc:	bl	10ff8 <abort@plt>
   157d0:	push	{fp, lr}
   157d4:	mov	fp, sp
   157d8:	sub	sp, sp, #48	; 0x30
   157dc:	mov	r3, sp
   157e0:	vmov.i32	q8, #0	; 0x00000000
   157e4:	mov	ip, #32
   157e8:	cmp	r0, #10
   157ec:	add	r2, r3, #16
   157f0:	vst1.64	{d16-d17}, [r3], ip
   157f4:	vst1.64	{d16-d17}, [r3]
   157f8:	vst1.64	{d16-d17}, [r2]
   157fc:	beq	1581c <__mempcpy_chk@plt+0x480c>
   15800:	str	r0, [sp]
   15804:	mov	r3, sp
   15808:	mov	r0, #0
   1580c:	mvn	r2, #0
   15810:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15814:	mov	sp, fp
   15818:	pop	{fp, pc}
   1581c:	bl	10ff8 <abort@plt>
   15820:	push	{fp, lr}
   15824:	mov	fp, sp
   15828:	sub	sp, sp, #48	; 0x30
   1582c:	mov	r3, sp
   15830:	vmov.i32	q8, #0	; 0x00000000
   15834:	mov	ip, #32
   15838:	cmp	r0, #10
   1583c:	add	lr, r3, #16
   15840:	vst1.64	{d16-d17}, [r3], ip
   15844:	vst1.64	{d16-d17}, [r3]
   15848:	vst1.64	{d16-d17}, [lr]
   1584c:	beq	15868 <__mempcpy_chk@plt+0x4858>
   15850:	str	r0, [sp]
   15854:	mov	r3, sp
   15858:	mov	r0, #0
   1585c:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15860:	mov	sp, fp
   15864:	pop	{fp, pc}
   15868:	bl	10ff8 <abort@plt>
   1586c:	push	{r4, sl, fp, lr}
   15870:	add	fp, sp, #8
   15874:	sub	sp, sp, #48	; 0x30
   15878:	mov	lr, r0
   1587c:	movw	r0, #33128	; 0x8168
   15880:	mov	r3, #32
   15884:	mov	ip, r1
   15888:	mov	r4, #1
   1588c:	movt	r0, #2
   15890:	add	r1, r0, #16
   15894:	vld1.64	{d16-d17}, [r0], r3
   15898:	mov	r3, sp
   1589c:	vld1.64	{d18-d19}, [r1]
   158a0:	add	r1, r3, #16
   158a4:	vld1.64	{d20-d21}, [r0]
   158a8:	add	r0, r3, #32
   158ac:	vst1.64	{d18-d19}, [r1]
   158b0:	mov	r1, r3
   158b4:	vst1.64	{d20-d21}, [r0]
   158b8:	mov	r0, #28
   158bc:	and	r0, r0, r2, lsr #3
   158c0:	and	r2, r2, #31
   158c4:	vst1.64	{d16-d17}, [r1], r0
   158c8:	ldr	r0, [r1, #8]
   158cc:	bic	r4, r4, r0, lsr r2
   158d0:	eor	r0, r0, r4, lsl r2
   158d4:	mov	r2, ip
   158d8:	str	r0, [r1, #8]
   158dc:	mov	r0, #0
   158e0:	mov	r1, lr
   158e4:	bl	15560 <__mempcpy_chk@plt+0x4550>
   158e8:	sub	sp, fp, #8
   158ec:	pop	{r4, sl, fp, pc}
   158f0:	push	{fp, lr}
   158f4:	mov	fp, sp
   158f8:	sub	sp, sp, #48	; 0x30
   158fc:	mov	ip, r0
   15900:	movw	r0, #33128	; 0x8168
   15904:	mov	r3, #32
   15908:	movt	r0, #2
   1590c:	add	r2, r0, #16
   15910:	vld1.64	{d16-d17}, [r0], r3
   15914:	mov	r3, sp
   15918:	vld1.64	{d18-d19}, [r2]
   1591c:	add	r2, r3, #16
   15920:	vld1.64	{d20-d21}, [r0]
   15924:	add	r0, r3, #32
   15928:	vst1.64	{d18-d19}, [r2]
   1592c:	mov	r2, r3
   15930:	vst1.64	{d20-d21}, [r0]
   15934:	mov	r0, #28
   15938:	and	r0, r0, r1, lsr #3
   1593c:	and	r1, r1, #31
   15940:	vst1.64	{d16-d17}, [r2], r0
   15944:	mov	r0, #1
   15948:	ldr	lr, [r2, #8]
   1594c:	bic	r0, r0, lr, lsr r1
   15950:	eor	r0, lr, r0, lsl r1
   15954:	mov	r1, ip
   15958:	str	r0, [r2, #8]
   1595c:	mov	r0, #0
   15960:	mvn	r2, #0
   15964:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15968:	mov	sp, fp
   1596c:	pop	{fp, pc}
   15970:	push	{fp, lr}
   15974:	mov	fp, sp
   15978:	sub	sp, sp, #48	; 0x30
   1597c:	movw	r2, #33128	; 0x8168
   15980:	mov	r3, #32
   15984:	mov	r1, r0
   15988:	movt	r2, #2
   1598c:	add	r0, r2, #16
   15990:	vld1.64	{d16-d17}, [r2], r3
   15994:	mov	r3, sp
   15998:	vld1.64	{d18-d19}, [r0]
   1599c:	add	r0, r3, #16
   159a0:	vld1.64	{d20-d21}, [r2]
   159a4:	mov	r2, r3
   159a8:	vst1.64	{d18-d19}, [r0]
   159ac:	add	r0, r3, #32
   159b0:	vst1.64	{d20-d21}, [r0]
   159b4:	mov	r0, #12
   159b8:	vst1.64	{d16-d17}, [r2], r0
   159bc:	ldr	r0, [r2]
   159c0:	orr	r0, r0, #67108864	; 0x4000000
   159c4:	str	r0, [r2]
   159c8:	mov	r0, #0
   159cc:	mvn	r2, #0
   159d0:	bl	15560 <__mempcpy_chk@plt+0x4550>
   159d4:	mov	sp, fp
   159d8:	pop	{fp, pc}
   159dc:	push	{fp, lr}
   159e0:	mov	fp, sp
   159e4:	sub	sp, sp, #48	; 0x30
   159e8:	mov	ip, r1
   159ec:	mov	r1, r0
   159f0:	movw	r0, #33128	; 0x8168
   159f4:	mov	r3, #32
   159f8:	movt	r0, #2
   159fc:	add	r2, r0, #16
   15a00:	vld1.64	{d16-d17}, [r0], r3
   15a04:	mov	r3, sp
   15a08:	vld1.64	{d18-d19}, [r2]
   15a0c:	add	r2, r3, #16
   15a10:	vld1.64	{d20-d21}, [r0]
   15a14:	add	r0, r3, #32
   15a18:	vst1.64	{d18-d19}, [r2]
   15a1c:	mov	r2, r3
   15a20:	vst1.64	{d20-d21}, [r0]
   15a24:	mov	r0, #12
   15a28:	vst1.64	{d16-d17}, [r2], r0
   15a2c:	ldr	r0, [r2]
   15a30:	orr	r0, r0, #67108864	; 0x4000000
   15a34:	str	r0, [r2]
   15a38:	mov	r0, #0
   15a3c:	mov	r2, ip
   15a40:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15a44:	mov	sp, fp
   15a48:	pop	{fp, pc}
   15a4c:	push	{r4, sl, fp, lr}
   15a50:	add	fp, sp, #8
   15a54:	sub	sp, sp, #96	; 0x60
   15a58:	mov	ip, r2
   15a5c:	mov	r2, sp
   15a60:	vmov.i32	q8, #0	; 0x00000000
   15a64:	mov	r4, #28
   15a68:	cmp	r1, #10
   15a6c:	mov	r3, r2
   15a70:	add	lr, r2, #16
   15a74:	vst1.64	{d16-d17}, [r3], r4
   15a78:	vst1.64	{d16-d17}, [lr]
   15a7c:	vst1.32	{d16-d17}, [r3]
   15a80:	beq	15ad0 <__mempcpy_chk@plt+0x4ac0>
   15a84:	vld1.64	{d16-d17}, [r2], r4
   15a88:	vld1.64	{d18-d19}, [lr]
   15a8c:	add	r3, sp, #48	; 0x30
   15a90:	add	r4, r3, #4
   15a94:	vld1.32	{d20-d21}, [r2]
   15a98:	add	r2, r3, #20
   15a9c:	vst1.32	{d16-d17}, [r4]
   15aa0:	vst1.32	{d18-d19}, [r2]
   15aa4:	add	r2, r3, #32
   15aa8:	vst1.32	{d20-d21}, [r2]
   15aac:	str	r1, [sp, #48]	; 0x30
   15ab0:	mvn	r2, #0
   15ab4:	ldr	r1, [sp, #60]	; 0x3c
   15ab8:	orr	r1, r1, #67108864	; 0x4000000
   15abc:	str	r1, [sp, #60]	; 0x3c
   15ac0:	mov	r1, ip
   15ac4:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15ac8:	sub	sp, fp, #8
   15acc:	pop	{r4, sl, fp, pc}
   15ad0:	bl	10ff8 <abort@plt>
   15ad4:	push	{r4, r5, fp, lr}
   15ad8:	add	fp, sp, #8
   15adc:	sub	sp, sp, #48	; 0x30
   15ae0:	mov	ip, r3
   15ae4:	movw	r3, #33128	; 0x8168
   15ae8:	mov	lr, #32
   15aec:	cmp	r1, #0
   15af0:	mov	r5, sp
   15af4:	movt	r3, #2
   15af8:	cmpne	r2, #0
   15afc:	add	r4, r3, #16
   15b00:	vld1.64	{d16-d17}, [r3], lr
   15b04:	vld1.64	{d18-d19}, [r4]
   15b08:	add	r4, r5, #16
   15b0c:	vld1.64	{d20-d21}, [r3]
   15b10:	vst1.64	{d16-d17}, [r5], lr
   15b14:	mov	r3, #10
   15b18:	vst1.64	{d18-d19}, [r4]
   15b1c:	vst1.64	{d20-d21}, [r5]
   15b20:	str	r3, [sp]
   15b24:	bne	15b2c <__mempcpy_chk@plt+0x4b1c>
   15b28:	bl	10ff8 <abort@plt>
   15b2c:	str	r2, [sp, #44]	; 0x2c
   15b30:	str	r1, [sp, #40]	; 0x28
   15b34:	mov	r3, sp
   15b38:	mov	r1, ip
   15b3c:	mvn	r2, #0
   15b40:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15b44:	sub	sp, fp, #8
   15b48:	pop	{r4, r5, fp, pc}
   15b4c:	push	{r4, r5, fp, lr}
   15b50:	add	fp, sp, #8
   15b54:	sub	sp, sp, #48	; 0x30
   15b58:	mov	lr, r3
   15b5c:	movw	r3, #33128	; 0x8168
   15b60:	mov	ip, #32
   15b64:	cmp	r1, #0
   15b68:	mov	r5, sp
   15b6c:	movt	r3, #2
   15b70:	cmpne	r2, #0
   15b74:	add	r4, r3, #16
   15b78:	vld1.64	{d16-d17}, [r3], ip
   15b7c:	vld1.64	{d18-d19}, [r4]
   15b80:	add	r4, r5, #16
   15b84:	vld1.64	{d20-d21}, [r3]
   15b88:	vst1.64	{d16-d17}, [r5], ip
   15b8c:	mov	r3, #10
   15b90:	vst1.64	{d18-d19}, [r4]
   15b94:	vst1.64	{d20-d21}, [r5]
   15b98:	str	r3, [sp]
   15b9c:	bne	15ba4 <__mempcpy_chk@plt+0x4b94>
   15ba0:	bl	10ff8 <abort@plt>
   15ba4:	ldr	ip, [fp, #8]
   15ba8:	str	r2, [sp, #44]	; 0x2c
   15bac:	str	r1, [sp, #40]	; 0x28
   15bb0:	mov	r3, sp
   15bb4:	mov	r1, lr
   15bb8:	mov	r2, ip
   15bbc:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15bc0:	sub	sp, fp, #8
   15bc4:	pop	{r4, r5, fp, pc}
   15bc8:	push	{r4, sl, fp, lr}
   15bcc:	add	fp, sp, #8
   15bd0:	sub	sp, sp, #48	; 0x30
   15bd4:	mov	ip, r2
   15bd8:	movw	r2, #33128	; 0x8168
   15bdc:	mov	lr, #32
   15be0:	cmp	r0, #0
   15be4:	mov	r4, sp
   15be8:	movt	r2, #2
   15bec:	cmpne	r1, #0
   15bf0:	add	r3, r2, #16
   15bf4:	vld1.64	{d16-d17}, [r2], lr
   15bf8:	vld1.64	{d18-d19}, [r3]
   15bfc:	add	r3, r4, #16
   15c00:	vld1.64	{d20-d21}, [r2]
   15c04:	vst1.64	{d16-d17}, [r4], lr
   15c08:	mov	r2, #10
   15c0c:	vst1.64	{d18-d19}, [r3]
   15c10:	vst1.64	{d20-d21}, [r4]
   15c14:	str	r2, [sp]
   15c18:	bne	15c20 <__mempcpy_chk@plt+0x4c10>
   15c1c:	bl	10ff8 <abort@plt>
   15c20:	str	r1, [sp, #44]	; 0x2c
   15c24:	str	r0, [sp, #40]	; 0x28
   15c28:	mov	r3, sp
   15c2c:	mov	r0, #0
   15c30:	mov	r1, ip
   15c34:	mvn	r2, #0
   15c38:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15c3c:	sub	sp, fp, #8
   15c40:	pop	{r4, sl, fp, pc}
   15c44:	push	{r4, r5, fp, lr}
   15c48:	add	fp, sp, #8
   15c4c:	sub	sp, sp, #48	; 0x30
   15c50:	mov	lr, r2
   15c54:	movw	r2, #33128	; 0x8168
   15c58:	mov	ip, r3
   15c5c:	mov	r3, #32
   15c60:	cmp	r0, #0
   15c64:	mov	r5, sp
   15c68:	movt	r2, #2
   15c6c:	cmpne	r1, #0
   15c70:	add	r4, r2, #16
   15c74:	vld1.64	{d16-d17}, [r2], r3
   15c78:	vld1.64	{d18-d19}, [r4]
   15c7c:	add	r4, r5, #16
   15c80:	vld1.64	{d20-d21}, [r2]
   15c84:	vst1.64	{d16-d17}, [r5], r3
   15c88:	mov	r2, #10
   15c8c:	vst1.64	{d18-d19}, [r4]
   15c90:	vst1.64	{d20-d21}, [r5]
   15c94:	str	r2, [sp]
   15c98:	bne	15ca0 <__mempcpy_chk@plt+0x4c90>
   15c9c:	bl	10ff8 <abort@plt>
   15ca0:	str	r1, [sp, #44]	; 0x2c
   15ca4:	str	r0, [sp, #40]	; 0x28
   15ca8:	mov	r3, sp
   15cac:	mov	r0, #0
   15cb0:	mov	r1, lr
   15cb4:	mov	r2, ip
   15cb8:	bl	15560 <__mempcpy_chk@plt+0x4550>
   15cbc:	sub	sp, fp, #8
   15cc0:	pop	{r4, r5, fp, pc}
   15cc4:	movw	r3, #33008	; 0x80f0
   15cc8:	movt	r3, #2
   15ccc:	b	15560 <__mempcpy_chk@plt+0x4550>
   15cd0:	movw	r3, #33008	; 0x80f0
   15cd4:	mov	r2, r1
   15cd8:	mov	r1, r0
   15cdc:	mov	r0, #0
   15ce0:	movt	r3, #2
   15ce4:	b	15560 <__mempcpy_chk@plt+0x4550>
   15ce8:	movw	r3, #33008	; 0x80f0
   15cec:	mvn	r2, #0
   15cf0:	movt	r3, #2
   15cf4:	b	15560 <__mempcpy_chk@plt+0x4550>
   15cf8:	movw	r3, #33008	; 0x80f0
   15cfc:	mov	r1, r0
   15d00:	mov	r0, #0
   15d04:	mvn	r2, #0
   15d08:	movt	r3, #2
   15d0c:	b	15560 <__mempcpy_chk@plt+0x4550>
   15d10:	push	{r4, r5, r6, sl, fp, lr}
   15d14:	add	fp, sp, #16
   15d18:	ldr	r4, [r0], #8
   15d1c:	mov	r5, r1
   15d20:	cmp	r4, r0
   15d24:	beq	15d48 <__mempcpy_chk@plt+0x4d38>
   15d28:	mov	r0, r4
   15d2c:	mov	r1, r5
   15d30:	bl	16b84 <__mempcpy_chk@plt+0x5b74>
   15d34:	mov	r6, r0
   15d38:	cmp	r0, #0
   15d3c:	moveq	r6, r4
   15d40:	mov	r0, r6
   15d44:	pop	{r4, r5, r6, sl, fp, pc}
   15d48:	mov	r0, r5
   15d4c:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   15d50:	cmp	r0, #0
   15d54:	moveq	r6, #0
   15d58:	moveq	r0, r6
   15d5c:	popeq	{r4, r5, r6, sl, fp, pc}
   15d60:	mov	r1, r4
   15d64:	mov	r2, r5
   15d68:	mov	r6, r0
   15d6c:	bl	10e24 <memcpy@plt>
   15d70:	mov	r0, r6
   15d74:	pop	{r4, r5, r6, sl, fp, pc}
   15d78:	push	{r4, r5, r6, sl, fp, lr}
   15d7c:	add	fp, sp, #16
   15d80:	mov	r4, r0
   15d84:	add	r6, r0, #8
   15d88:	ldrd	r0, [r0]
   15d8c:	lsl	r5, r1, #1
   15d90:	cmp	r0, r6
   15d94:	beq	15da0 <__mempcpy_chk@plt+0x4d90>
   15d98:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   15d9c:	ldr	r1, [r4, #4]
   15da0:	cmp	r5, r1
   15da4:	bcc	15dc8 <__mempcpy_chk@plt+0x4db8>
   15da8:	mov	r0, r5
   15dac:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   15db0:	cmp	r0, #0
   15db4:	strne	r0, [r4]
   15db8:	movne	r0, #1
   15dbc:	strne	r5, [r4, #4]
   15dc0:	popne	{r4, r5, r6, sl, fp, pc}
   15dc4:	b	15dd4 <__mempcpy_chk@plt+0x4dc4>
   15dc8:	bl	10f44 <__errno_location@plt>
   15dcc:	mov	r1, #12
   15dd0:	str	r1, [r0]
   15dd4:	mov	r0, #0
   15dd8:	mov	r5, #1024	; 0x400
   15ddc:	str	r6, [r4]
   15de0:	str	r5, [r4, #4]
   15de4:	pop	{r4, r5, r6, sl, fp, pc}
   15de8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15dec:	add	fp, sp, #24
   15df0:	ldrd	r8, [r0]
   15df4:	add	r7, r0, #8
   15df8:	mov	r4, r0
   15dfc:	lsl	r5, r9, #1
   15e00:	cmp	r8, r7
   15e04:	beq	15e38 <__mempcpy_chk@plt+0x4e28>
   15e08:	cmp	r5, r9
   15e0c:	bcc	15e6c <__mempcpy_chk@plt+0x4e5c>
   15e10:	mov	r0, r8
   15e14:	mov	r1, r5
   15e18:	bl	16b84 <__mempcpy_chk@plt+0x5b74>
   15e1c:	mov	r6, r0
   15e20:	cmp	r0, #0
   15e24:	beq	15e7c <__mempcpy_chk@plt+0x4e6c>
   15e28:	mov	r0, #1
   15e2c:	str	r6, [r4]
   15e30:	str	r5, [r4, #4]
   15e34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e38:	mov	r0, r5
   15e3c:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   15e40:	cmp	r0, #0
   15e44:	moveq	r0, #0
   15e48:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e4c:	ldr	r2, [r4, #4]
   15e50:	mov	r1, r8
   15e54:	mov	r6, r0
   15e58:	bl	10e24 <memcpy@plt>
   15e5c:	mov	r0, #1
   15e60:	str	r6, [r4]
   15e64:	str	r5, [r4, #4]
   15e68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e6c:	bl	10f44 <__errno_location@plt>
   15e70:	mov	r1, #12
   15e74:	str	r1, [r0]
   15e78:	b	15e80 <__mempcpy_chk@plt+0x4e70>
   15e7c:	ldr	r8, [r4]
   15e80:	mov	r0, r8
   15e84:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   15e88:	mov	r0, #0
   15e8c:	mov	r5, #1024	; 0x400
   15e90:	str	r7, [r4]
   15e94:	str	r5, [r4, #4]
   15e98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15e9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ea0:	add	fp, sp, #24
   15ea4:	sub	sp, sp, #32
   15ea8:	ldr	r6, [fp, #12]
   15eac:	ldr	r7, [fp, #8]
   15eb0:	mov	r4, r2
   15eb4:	mov	r8, r0
   15eb8:	cmp	r1, #0
   15ebc:	beq	15ee4 <__mempcpy_chk@plt+0x4ed4>
   15ec0:	movw	r2, #31344	; 0x7a70
   15ec4:	mov	r5, r1
   15ec8:	str	r3, [sp, #4]
   15ecc:	str	r4, [sp]
   15ed0:	mov	r0, r8
   15ed4:	mov	r1, #1
   15ed8:	movt	r2, #1
   15edc:	mov	r3, r5
   15ee0:	b	15efc <__mempcpy_chk@plt+0x4eec>
   15ee4:	movw	r2, #31356	; 0x7a7c
   15ee8:	str	r3, [sp]
   15eec:	mov	r0, r8
   15ef0:	mov	r1, #1
   15ef4:	mov	r3, r4
   15ef8:	movt	r2, #1
   15efc:	bl	10f80 <__fprintf_chk@plt>
   15f00:	movw	r1, #31363	; 0x7a83
   15f04:	mov	r0, #0
   15f08:	mov	r2, #5
   15f0c:	movt	r1, #1
   15f10:	bl	10e48 <dcgettext@plt>
   15f14:	movw	r2, #32081	; 0x7d51
   15f18:	mov	r3, r0
   15f1c:	movw	r0, #2022	; 0x7e6
   15f20:	mov	r1, #1
   15f24:	str	r0, [sp]
   15f28:	movt	r2, #1
   15f2c:	mov	r0, r8
   15f30:	bl	10f80 <__fprintf_chk@plt>
   15f34:	movw	r4, #29367	; 0x72b7
   15f38:	mov	r1, r8
   15f3c:	movt	r4, #1
   15f40:	mov	r0, r4
   15f44:	bl	10dc4 <fputs_unlocked@plt>
   15f48:	movw	r1, #31367	; 0x7a87
   15f4c:	mov	r0, #0
   15f50:	mov	r2, #5
   15f54:	movt	r1, #1
   15f58:	bl	10e48 <dcgettext@plt>
   15f5c:	movw	r3, #31538	; 0x7b32
   15f60:	mov	r2, r0
   15f64:	mov	r0, r8
   15f68:	mov	r1, #1
   15f6c:	movt	r3, #1
   15f70:	bl	10f80 <__fprintf_chk@plt>
   15f74:	mov	r0, r4
   15f78:	mov	r1, r8
   15f7c:	bl	10dc4 <fputs_unlocked@plt>
   15f80:	cmp	r6, #9
   15f84:	bhi	15fc0 <__mempcpy_chk@plt+0x4fb0>
   15f88:	add	r0, pc, #0
   15f8c:	ldr	pc, [r0, r6, lsl #2]
   15f90:			; <UNDEFINED> instruction: 0x00015fb8
   15f94:	andeq	r5, r1, ip, asr #31
   15f98:	strdeq	r5, [r1], -ip
   15f9c:	andeq	r6, r1, r4, lsr #32
   15fa0:	andeq	r6, r1, ip, asr #32
   15fa4:	andeq	r6, r1, r4, ror r0
   15fa8:	muleq	r1, ip, r0
   15fac:	ldrdeq	r6, [r1], -r4
   15fb0:	andeq	r6, r1, ip, ror r1
   15fb4:	andeq	r6, r1, r4, lsr #2
   15fb8:	sub	sp, fp, #24
   15fbc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15fc0:	movw	r1, #31891	; 0x7c93
   15fc4:	movt	r1, #1
   15fc8:	b	1612c <__mempcpy_chk@plt+0x511c>
   15fcc:	movw	r1, #31572	; 0x7b54
   15fd0:	mov	r0, #0
   15fd4:	mov	r2, #5
   15fd8:	movt	r1, #1
   15fdc:	bl	10e48 <dcgettext@plt>
   15fe0:	ldr	r3, [r7]
   15fe4:	mov	r2, r0
   15fe8:	mov	r0, r8
   15fec:	mov	r1, #1
   15ff0:	sub	sp, fp, #24
   15ff4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ff8:	b	10f80 <__fprintf_chk@plt>
   15ffc:	movw	r1, #31588	; 0x7b64
   16000:	mov	r0, #0
   16004:	mov	r2, #5
   16008:	movt	r1, #1
   1600c:	bl	10e48 <dcgettext@plt>
   16010:	mov	r2, r0
   16014:	ldr	r3, [r7]
   16018:	ldr	r0, [r7, #4]
   1601c:	str	r0, [sp]
   16020:	b	16110 <__mempcpy_chk@plt+0x5100>
   16024:	movw	r1, #31611	; 0x7b7b
   16028:	mov	r0, #0
   1602c:	mov	r2, #5
   16030:	movt	r1, #1
   16034:	bl	10e48 <dcgettext@plt>
   16038:	ldr	r3, [r7]
   1603c:	mov	r2, r0
   16040:	ldmib	r7, {r0, r1}
   16044:	stm	sp, {r0, r1}
   16048:	b	16110 <__mempcpy_chk@plt+0x5100>
   1604c:	movw	r1, #31639	; 0x7b97
   16050:	mov	r0, #0
   16054:	mov	r2, #5
   16058:	movt	r1, #1
   1605c:	bl	10e48 <dcgettext@plt>
   16060:	ldr	r3, [r7]
   16064:	mov	r2, r0
   16068:	ldmib	r7, {r0, r1, r7}
   1606c:	stm	sp, {r0, r1, r7}
   16070:	b	16110 <__mempcpy_chk@plt+0x5100>
   16074:	movw	r1, #31671	; 0x7bb7
   16078:	mov	r0, #0
   1607c:	mov	r2, #5
   16080:	movt	r1, #1
   16084:	bl	10e48 <dcgettext@plt>
   16088:	ldr	r3, [r7]
   1608c:	mov	r2, r0
   16090:	ldmib	r7, {r0, r1, r6, r7}
   16094:	stm	sp, {r0, r1, r6, r7}
   16098:	b	16110 <__mempcpy_chk@plt+0x5100>
   1609c:	movw	r1, #31707	; 0x7bdb
   160a0:	mov	r0, #0
   160a4:	mov	r2, #5
   160a8:	movt	r1, #1
   160ac:	bl	10e48 <dcgettext@plt>
   160b0:	ldr	r3, [r7]
   160b4:	mov	r2, r0
   160b8:	ldmib	r7, {r0, r1, r6}
   160bc:	ldr	r5, [r7, #16]
   160c0:	ldr	r7, [r7, #20]
   160c4:	stm	sp, {r0, r1, r6}
   160c8:	str	r5, [sp, #12]
   160cc:	str	r7, [sp, #16]
   160d0:	b	16110 <__mempcpy_chk@plt+0x5100>
   160d4:	movw	r1, #31747	; 0x7c03
   160d8:	mov	r0, #0
   160dc:	mov	r2, #5
   160e0:	movt	r1, #1
   160e4:	bl	10e48 <dcgettext@plt>
   160e8:	ldr	r3, [r7]
   160ec:	mov	r2, r0
   160f0:	ldmib	r7, {r0, r1, r6}
   160f4:	ldr	r5, [r7, #16]
   160f8:	ldr	r4, [r7, #20]
   160fc:	ldr	r7, [r7, #24]
   16100:	stm	sp, {r0, r1, r6}
   16104:	str	r5, [sp, #12]
   16108:	str	r4, [sp, #16]
   1610c:	str	r7, [sp, #20]
   16110:	mov	r0, r8
   16114:	mov	r1, #1
   16118:	bl	10f80 <__fprintf_chk@plt>
   1611c:	sub	sp, fp, #24
   16120:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16124:	movw	r1, #31839	; 0x7c5f
   16128:	movt	r1, #1
   1612c:	mov	r0, #0
   16130:	mov	r2, #5
   16134:	bl	10e48 <dcgettext@plt>
   16138:	mov	ip, r0
   1613c:	ldr	r3, [r7]
   16140:	ldr	r0, [r7, #4]
   16144:	ldr	r1, [r7, #8]
   16148:	ldr	r6, [r7, #12]
   1614c:	ldr	r5, [r7, #16]
   16150:	ldr	r4, [r7, #20]
   16154:	ldr	r2, [r7, #24]
   16158:	ldr	lr, [r7, #28]
   1615c:	ldr	r7, [r7, #32]
   16160:	stm	sp, {r0, r1, r6}
   16164:	str	r5, [sp, #12]
   16168:	str	r4, [sp, #16]
   1616c:	str	r2, [sp, #20]
   16170:	str	lr, [sp, #24]
   16174:	str	r7, [sp, #28]
   16178:	b	161c0 <__mempcpy_chk@plt+0x51b0>
   1617c:	movw	r1, #31791	; 0x7c2f
   16180:	mov	r0, #0
   16184:	mov	r2, #5
   16188:	movt	r1, #1
   1618c:	bl	10e48 <dcgettext@plt>
   16190:	mov	ip, r0
   16194:	ldr	r3, [r7]
   16198:	ldmib	r7, {r0, r1, r6}
   1619c:	ldr	r5, [r7, #16]
   161a0:	ldr	r4, [r7, #20]
   161a4:	ldr	r2, [r7, #24]
   161a8:	ldr	r7, [r7, #28]
   161ac:	stm	sp, {r0, r1, r6}
   161b0:	str	r5, [sp, #12]
   161b4:	str	r4, [sp, #16]
   161b8:	str	r2, [sp, #20]
   161bc:	str	r7, [sp, #24]
   161c0:	mov	r0, r8
   161c4:	mov	r1, #1
   161c8:	mov	r2, ip
   161cc:	bl	10f80 <__fprintf_chk@plt>
   161d0:	sub	sp, fp, #24
   161d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   161d8:	push	{r4, sl, fp, lr}
   161dc:	add	fp, sp, #8
   161e0:	sub	sp, sp, #8
   161e4:	ldr	ip, [fp, #8]
   161e8:	mov	lr, #0
   161ec:	ldr	r4, [ip, lr, lsl #2]
   161f0:	add	lr, lr, #1
   161f4:	cmp	r4, #0
   161f8:	bne	161ec <__mempcpy_chk@plt+0x51dc>
   161fc:	sub	r4, lr, #1
   16200:	str	ip, [sp]
   16204:	str	r4, [sp, #4]
   16208:	bl	15e9c <__mempcpy_chk@plt+0x4e8c>
   1620c:	sub	sp, fp, #8
   16210:	pop	{r4, sl, fp, pc}
   16214:	push	{fp, lr}
   16218:	mov	fp, sp
   1621c:	sub	sp, sp, #48	; 0x30
   16220:	ldr	ip, [fp, #8]
   16224:	ldr	lr, [ip]
   16228:	cmp	lr, #0
   1622c:	str	lr, [sp, #8]
   16230:	beq	162cc <__mempcpy_chk@plt+0x52bc>
   16234:	ldr	lr, [ip, #4]
   16238:	cmp	lr, #0
   1623c:	str	lr, [sp, #12]
   16240:	beq	162d4 <__mempcpy_chk@plt+0x52c4>
   16244:	ldr	lr, [ip, #8]
   16248:	cmp	lr, #0
   1624c:	str	lr, [sp, #16]
   16250:	beq	162dc <__mempcpy_chk@plt+0x52cc>
   16254:	ldr	lr, [ip, #12]
   16258:	cmp	lr, #0
   1625c:	str	lr, [sp, #20]
   16260:	beq	162e4 <__mempcpy_chk@plt+0x52d4>
   16264:	ldr	lr, [ip, #16]
   16268:	cmp	lr, #0
   1626c:	str	lr, [sp, #24]
   16270:	beq	162ec <__mempcpy_chk@plt+0x52dc>
   16274:	ldr	lr, [ip, #20]
   16278:	cmp	lr, #0
   1627c:	str	lr, [sp, #28]
   16280:	beq	162f4 <__mempcpy_chk@plt+0x52e4>
   16284:	ldr	lr, [ip, #24]
   16288:	cmp	lr, #0
   1628c:	str	lr, [sp, #32]
   16290:	beq	162fc <__mempcpy_chk@plt+0x52ec>
   16294:	ldr	lr, [ip, #28]
   16298:	cmp	lr, #0
   1629c:	str	lr, [sp, #36]	; 0x24
   162a0:	beq	16304 <__mempcpy_chk@plt+0x52f4>
   162a4:	ldr	lr, [ip, #32]
   162a8:	cmp	lr, #0
   162ac:	str	lr, [sp, #40]	; 0x28
   162b0:	beq	1630c <__mempcpy_chk@plt+0x52fc>
   162b4:	ldr	lr, [ip, #36]	; 0x24
   162b8:	mov	ip, #10
   162bc:	cmp	lr, #0
   162c0:	str	lr, [sp, #44]	; 0x2c
   162c4:	movweq	ip, #9
   162c8:	b	16310 <__mempcpy_chk@plt+0x5300>
   162cc:	mov	ip, #0
   162d0:	b	16310 <__mempcpy_chk@plt+0x5300>
   162d4:	mov	ip, #1
   162d8:	b	16310 <__mempcpy_chk@plt+0x5300>
   162dc:	mov	ip, #2
   162e0:	b	16310 <__mempcpy_chk@plt+0x5300>
   162e4:	mov	ip, #3
   162e8:	b	16310 <__mempcpy_chk@plt+0x5300>
   162ec:	mov	ip, #4
   162f0:	b	16310 <__mempcpy_chk@plt+0x5300>
   162f4:	mov	ip, #5
   162f8:	b	16310 <__mempcpy_chk@plt+0x5300>
   162fc:	mov	ip, #6
   16300:	b	16310 <__mempcpy_chk@plt+0x5300>
   16304:	mov	ip, #7
   16308:	b	16310 <__mempcpy_chk@plt+0x5300>
   1630c:	mov	ip, #8
   16310:	add	lr, sp, #8
   16314:	str	ip, [sp, #4]
   16318:	str	lr, [sp]
   1631c:	bl	15e9c <__mempcpy_chk@plt+0x4e8c>
   16320:	mov	sp, fp
   16324:	pop	{fp, pc}
   16328:	push	{fp, lr}
   1632c:	mov	fp, sp
   16330:	sub	sp, sp, #56	; 0x38
   16334:	add	ip, fp, #8
   16338:	str	ip, [sp, #12]
   1633c:	ldr	lr, [fp, #8]
   16340:	cmp	lr, #0
   16344:	str	lr, [sp, #16]
   16348:	beq	163e4 <__mempcpy_chk@plt+0x53d4>
   1634c:	ldr	lr, [ip, #4]
   16350:	cmp	lr, #0
   16354:	str	lr, [sp, #20]
   16358:	beq	163ec <__mempcpy_chk@plt+0x53dc>
   1635c:	ldr	lr, [ip, #8]
   16360:	cmp	lr, #0
   16364:	str	lr, [sp, #24]
   16368:	beq	163f4 <__mempcpy_chk@plt+0x53e4>
   1636c:	ldr	lr, [ip, #12]
   16370:	cmp	lr, #0
   16374:	str	lr, [sp, #28]
   16378:	beq	163fc <__mempcpy_chk@plt+0x53ec>
   1637c:	ldr	lr, [ip, #16]
   16380:	cmp	lr, #0
   16384:	str	lr, [sp, #32]
   16388:	beq	16404 <__mempcpy_chk@plt+0x53f4>
   1638c:	ldr	lr, [ip, #20]
   16390:	cmp	lr, #0
   16394:	str	lr, [sp, #36]	; 0x24
   16398:	beq	1640c <__mempcpy_chk@plt+0x53fc>
   1639c:	ldr	lr, [ip, #24]
   163a0:	cmp	lr, #0
   163a4:	str	lr, [sp, #40]	; 0x28
   163a8:	beq	16414 <__mempcpy_chk@plt+0x5404>
   163ac:	ldr	lr, [ip, #28]
   163b0:	cmp	lr, #0
   163b4:	str	lr, [sp, #44]	; 0x2c
   163b8:	beq	1641c <__mempcpy_chk@plt+0x540c>
   163bc:	ldr	lr, [ip, #32]
   163c0:	cmp	lr, #0
   163c4:	str	lr, [sp, #48]	; 0x30
   163c8:	beq	16424 <__mempcpy_chk@plt+0x5414>
   163cc:	ldr	lr, [ip, #36]	; 0x24
   163d0:	mov	ip, #10
   163d4:	cmp	lr, #0
   163d8:	str	lr, [sp, #52]	; 0x34
   163dc:	movweq	ip, #9
   163e0:	b	16428 <__mempcpy_chk@plt+0x5418>
   163e4:	mov	ip, #0
   163e8:	b	16428 <__mempcpy_chk@plt+0x5418>
   163ec:	mov	ip, #1
   163f0:	b	16428 <__mempcpy_chk@plt+0x5418>
   163f4:	mov	ip, #2
   163f8:	b	16428 <__mempcpy_chk@plt+0x5418>
   163fc:	mov	ip, #3
   16400:	b	16428 <__mempcpy_chk@plt+0x5418>
   16404:	mov	ip, #4
   16408:	b	16428 <__mempcpy_chk@plt+0x5418>
   1640c:	mov	ip, #5
   16410:	b	16428 <__mempcpy_chk@plt+0x5418>
   16414:	mov	ip, #6
   16418:	b	16428 <__mempcpy_chk@plt+0x5418>
   1641c:	mov	ip, #7
   16420:	b	16428 <__mempcpy_chk@plt+0x5418>
   16424:	mov	ip, #8
   16428:	add	lr, sp, #16
   1642c:	str	ip, [sp, #4]
   16430:	str	lr, [sp]
   16434:	bl	15e9c <__mempcpy_chk@plt+0x4e8c>
   16438:	mov	sp, fp
   1643c:	pop	{fp, pc}
   16440:	push	{fp, lr}
   16444:	mov	fp, sp
   16448:	movw	r0, #33092	; 0x8144
   1644c:	movt	r0, #2
   16450:	ldr	r1, [r0]
   16454:	movw	r0, #29367	; 0x72b7
   16458:	movt	r0, #1
   1645c:	bl	10dc4 <fputs_unlocked@plt>
   16460:	movw	r1, #31951	; 0x7ccf
   16464:	mov	r0, #0
   16468:	mov	r2, #5
   1646c:	movt	r1, #1
   16470:	bl	10e48 <dcgettext@plt>
   16474:	movw	r2, #31971	; 0x7ce3
   16478:	mov	r1, r0
   1647c:	mov	r0, #1
   16480:	movt	r2, #1
   16484:	bl	10f68 <__printf_chk@plt>
   16488:	movw	r1, #31993	; 0x7cf9
   1648c:	mov	r0, #0
   16490:	mov	r2, #5
   16494:	movt	r1, #1
   16498:	bl	10e48 <dcgettext@plt>
   1649c:	movw	r2, #30135	; 0x75b7
   164a0:	movw	r3, #30297	; 0x7659
   164a4:	mov	r1, r0
   164a8:	mov	r0, #1
   164ac:	movt	r2, #1
   164b0:	movt	r3, #1
   164b4:	bl	10f68 <__printf_chk@plt>
   164b8:	movw	r1, #32013	; 0x7d0d
   164bc:	mov	r0, #0
   164c0:	mov	r2, #5
   164c4:	movt	r1, #1
   164c8:	bl	10e48 <dcgettext@plt>
   164cc:	movw	r2, #32052	; 0x7d34
   164d0:	mov	r1, r0
   164d4:	mov	r0, #1
   164d8:	movt	r2, #1
   164dc:	pop	{fp, lr}
   164e0:	b	10f68 <__printf_chk@plt>
   164e4:	push	{r4, r5, r6, sl, fp, lr}
   164e8:	add	fp, sp, #16
   164ec:	mov	r4, r2
   164f0:	mov	r5, r1
   164f4:	mov	r6, r0
   164f8:	bl	16ee0 <__mempcpy_chk@plt+0x5ed0>
   164fc:	cmp	r0, #0
   16500:	popne	{r4, r5, r6, sl, fp, pc}
   16504:	cmp	r6, #0
   16508:	beq	1651c <__mempcpy_chk@plt+0x550c>
   1650c:	cmp	r5, #0
   16510:	cmpne	r4, #0
   16514:	bne	1651c <__mempcpy_chk@plt+0x550c>
   16518:	pop	{r4, r5, r6, sl, fp, pc}
   1651c:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16520:	push	{r4, r5, r6, sl, fp, lr}
   16524:	add	fp, sp, #16
   16528:	mov	r4, r2
   1652c:	mov	r5, r1
   16530:	mov	r6, r0
   16534:	bl	16ee0 <__mempcpy_chk@plt+0x5ed0>
   16538:	cmp	r0, #0
   1653c:	popne	{r4, r5, r6, sl, fp, pc}
   16540:	cmp	r6, #0
   16544:	beq	16558 <__mempcpy_chk@plt+0x5548>
   16548:	cmp	r5, #0
   1654c:	cmpne	r4, #0
   16550:	bne	16558 <__mempcpy_chk@plt+0x5548>
   16554:	pop	{r4, r5, r6, sl, fp, pc}
   16558:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   1655c:	push	{fp, lr}
   16560:	mov	fp, sp
   16564:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   16568:	cmp	r0, #0
   1656c:	popne	{fp, pc}
   16570:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16574:	push	{fp, lr}
   16578:	mov	fp, sp
   1657c:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   16580:	cmp	r0, #0
   16584:	popne	{fp, pc}
   16588:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   1658c:	push	{fp, lr}
   16590:	mov	fp, sp
   16594:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   16598:	cmp	r0, #0
   1659c:	popne	{fp, pc}
   165a0:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   165a4:	push	{r4, r5, fp, lr}
   165a8:	add	fp, sp, #8
   165ac:	mov	r4, r1
   165b0:	mov	r5, r0
   165b4:	bl	16b84 <__mempcpy_chk@plt+0x5b74>
   165b8:	cmp	r0, #0
   165bc:	popne	{r4, r5, fp, pc}
   165c0:	cmp	r5, #0
   165c4:	beq	165d4 <__mempcpy_chk@plt+0x55c4>
   165c8:	cmp	r4, #0
   165cc:	bne	165d4 <__mempcpy_chk@plt+0x55c4>
   165d0:	pop	{r4, r5, fp, pc}
   165d4:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   165d8:	push	{fp, lr}
   165dc:	mov	fp, sp
   165e0:	cmp	r1, #0
   165e4:	orreq	r1, r1, #1
   165e8:	bl	16b84 <__mempcpy_chk@plt+0x5b74>
   165ec:	cmp	r0, #0
   165f0:	popne	{fp, pc}
   165f4:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   165f8:	push	{fp, lr}
   165fc:	mov	fp, sp
   16600:	clz	r3, r2
   16604:	lsr	ip, r3, #5
   16608:	clz	r3, r1
   1660c:	lsr	r3, r3, #5
   16610:	orrs	r3, r3, ip
   16614:	movwne	r1, #1
   16618:	movwne	r2, #1
   1661c:	bl	16ee0 <__mempcpy_chk@plt+0x5ed0>
   16620:	cmp	r0, #0
   16624:	popne	{fp, pc}
   16628:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   1662c:	push	{fp, lr}
   16630:	mov	fp, sp
   16634:	mov	r2, r1
   16638:	mov	r1, r0
   1663c:	mov	r0, #0
   16640:	bl	16ee0 <__mempcpy_chk@plt+0x5ed0>
   16644:	cmp	r0, #0
   16648:	popne	{fp, pc}
   1664c:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16650:	push	{fp, lr}
   16654:	mov	fp, sp
   16658:	mov	r2, r1
   1665c:	mov	r1, r0
   16660:	clz	r0, r2
   16664:	clz	r3, r1
   16668:	lsr	r0, r0, #5
   1666c:	lsr	r3, r3, #5
   16670:	orrs	r0, r3, r0
   16674:	movwne	r1, #1
   16678:	movwne	r2, #1
   1667c:	mov	r0, #0
   16680:	bl	16ee0 <__mempcpy_chk@plt+0x5ed0>
   16684:	cmp	r0, #0
   16688:	popne	{fp, pc}
   1668c:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16690:	push	{r4, r5, r6, sl, fp, lr}
   16694:	add	fp, sp, #16
   16698:	ldr	r5, [r1]
   1669c:	mov	r4, r1
   166a0:	mov	r6, r0
   166a4:	cmp	r0, #0
   166a8:	beq	166c0 <__mempcpy_chk@plt+0x56b0>
   166ac:	mov	r0, #1
   166b0:	add	r0, r0, r5, lsr #1
   166b4:	adds	r5, r5, r0
   166b8:	bcc	166c8 <__mempcpy_chk@plt+0x56b8>
   166bc:	b	16704 <__mempcpy_chk@plt+0x56f4>
   166c0:	cmp	r5, #0
   166c4:	movweq	r5, #64	; 0x40
   166c8:	mov	r0, r6
   166cc:	mov	r1, r5
   166d0:	mov	r2, #1
   166d4:	bl	16ee0 <__mempcpy_chk@plt+0x5ed0>
   166d8:	cmp	r5, #0
   166dc:	mov	r1, r5
   166e0:	movwne	r1, #1
   166e4:	cmp	r0, #0
   166e8:	bne	166fc <__mempcpy_chk@plt+0x56ec>
   166ec:	clz	r2, r6
   166f0:	lsr	r2, r2, #5
   166f4:	orrs	r1, r2, r1
   166f8:	bne	16704 <__mempcpy_chk@plt+0x56f4>
   166fc:	str	r5, [r4]
   16700:	pop	{r4, r5, r6, sl, fp, pc}
   16704:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16708:	push	{r4, r5, r6, r7, fp, lr}
   1670c:	add	fp, sp, #16
   16710:	ldr	r5, [r1]
   16714:	mov	r6, r2
   16718:	mov	r4, r1
   1671c:	mov	r7, r0
   16720:	cmp	r0, #0
   16724:	beq	1673c <__mempcpy_chk@plt+0x572c>
   16728:	mov	r0, #1
   1672c:	add	r0, r0, r5, lsr #1
   16730:	adds	r5, r5, r0
   16734:	bcc	16754 <__mempcpy_chk@plt+0x5744>
   16738:	b	16788 <__mempcpy_chk@plt+0x5778>
   1673c:	cmp	r5, #0
   16740:	bne	16754 <__mempcpy_chk@plt+0x5744>
   16744:	mov	r0, #64	; 0x40
   16748:	cmp	r6, #64	; 0x40
   1674c:	udiv	r5, r0, r6
   16750:	addhi	r5, r5, #1
   16754:	mov	r0, r7
   16758:	mov	r1, r5
   1675c:	mov	r2, r6
   16760:	bl	16ee0 <__mempcpy_chk@plt+0x5ed0>
   16764:	cmp	r0, #0
   16768:	bne	16780 <__mempcpy_chk@plt+0x5770>
   1676c:	cmp	r7, #0
   16770:	beq	16788 <__mempcpy_chk@plt+0x5778>
   16774:	cmp	r6, #0
   16778:	cmpne	r5, #0
   1677c:	bne	16788 <__mempcpy_chk@plt+0x5778>
   16780:	str	r5, [r4]
   16784:	pop	{r4, r5, r6, r7, fp, pc}
   16788:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   1678c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16790:	add	fp, sp, #24
   16794:	mov	r8, r1
   16798:	ldr	r1, [r1]
   1679c:	mov	r5, r0
   167a0:	add	r0, r1, r1, asr #1
   167a4:	cmp	r0, r1
   167a8:	mvnvs	r0, #-2147483648	; 0x80000000
   167ac:	cmp	r0, r3
   167b0:	mov	r7, r0
   167b4:	movgt	r7, r3
   167b8:	cmn	r3, #1
   167bc:	movle	r7, r0
   167c0:	ldr	r0, [fp, #8]
   167c4:	cmn	r0, #1
   167c8:	ble	167f0 <__mempcpy_chk@plt+0x57e0>
   167cc:	cmp	r0, #0
   167d0:	beq	16844 <__mempcpy_chk@plt+0x5834>
   167d4:	cmn	r7, #1
   167d8:	ble	16818 <__mempcpy_chk@plt+0x5808>
   167dc:	mvn	r4, #-2147483648	; 0x80000000
   167e0:	udiv	r6, r4, r0
   167e4:	cmp	r6, r7
   167e8:	bge	16844 <__mempcpy_chk@plt+0x5834>
   167ec:	b	16854 <__mempcpy_chk@plt+0x5844>
   167f0:	cmn	r7, #1
   167f4:	ble	16834 <__mempcpy_chk@plt+0x5824>
   167f8:	cmn	r0, #1
   167fc:	beq	16844 <__mempcpy_chk@plt+0x5834>
   16800:	mov	r6, #-2147483648	; 0x80000000
   16804:	mvn	r4, #-2147483648	; 0x80000000
   16808:	sdiv	r6, r6, r0
   1680c:	cmp	r6, r7
   16810:	bge	16844 <__mempcpy_chk@plt+0x5834>
   16814:	b	16854 <__mempcpy_chk@plt+0x5844>
   16818:	beq	16844 <__mempcpy_chk@plt+0x5834>
   1681c:	mov	r6, #-2147483648	; 0x80000000
   16820:	mvn	r4, #-2147483648	; 0x80000000
   16824:	sdiv	r6, r6, r7
   16828:	cmp	r6, r0
   1682c:	bge	16844 <__mempcpy_chk@plt+0x5834>
   16830:	b	16854 <__mempcpy_chk@plt+0x5844>
   16834:	mvn	r4, #-2147483648	; 0x80000000
   16838:	sdiv	r6, r4, r0
   1683c:	cmp	r7, r6
   16840:	blt	16854 <__mempcpy_chk@plt+0x5844>
   16844:	mul	r6, r7, r0
   16848:	mov	r4, #64	; 0x40
   1684c:	cmp	r6, #63	; 0x3f
   16850:	bgt	1685c <__mempcpy_chk@plt+0x584c>
   16854:	sdiv	r7, r4, r0
   16858:	mul	r6, r7, r0
   1685c:	cmp	r5, #0
   16860:	moveq	r4, #0
   16864:	streq	r4, [r8]
   16868:	sub	r4, r7, r1
   1686c:	cmp	r4, r2
   16870:	bge	1691c <__mempcpy_chk@plt+0x590c>
   16874:	add	r7, r1, r2
   16878:	mov	r6, #0
   1687c:	mov	r2, #0
   16880:	cmp	r7, r3
   16884:	movwgt	r6, #1
   16888:	cmn	r3, #1
   1688c:	movwgt	r2, #1
   16890:	cmp	r7, r1
   16894:	bvs	16950 <__mempcpy_chk@plt+0x5940>
   16898:	ands	r1, r2, r6
   1689c:	bne	16950 <__mempcpy_chk@plt+0x5940>
   168a0:	cmn	r0, #1
   168a4:	ble	168cc <__mempcpy_chk@plt+0x58bc>
   168a8:	cmp	r0, #0
   168ac:	beq	16918 <__mempcpy_chk@plt+0x5908>
   168b0:	cmn	r7, #1
   168b4:	ble	168f0 <__mempcpy_chk@plt+0x58e0>
   168b8:	mvn	r1, #-2147483648	; 0x80000000
   168bc:	udiv	r1, r1, r0
   168c0:	cmp	r1, r7
   168c4:	bge	16918 <__mempcpy_chk@plt+0x5908>
   168c8:	b	16950 <__mempcpy_chk@plt+0x5940>
   168cc:	cmn	r7, #1
   168d0:	ble	16908 <__mempcpy_chk@plt+0x58f8>
   168d4:	cmn	r0, #1
   168d8:	beq	16918 <__mempcpy_chk@plt+0x5908>
   168dc:	mov	r1, #-2147483648	; 0x80000000
   168e0:	sdiv	r1, r1, r0
   168e4:	cmp	r1, r7
   168e8:	bge	16918 <__mempcpy_chk@plt+0x5908>
   168ec:	b	16950 <__mempcpy_chk@plt+0x5940>
   168f0:	beq	16918 <__mempcpy_chk@plt+0x5908>
   168f4:	mov	r1, #-2147483648	; 0x80000000
   168f8:	sdiv	r1, r1, r7
   168fc:	cmp	r1, r0
   16900:	bge	16918 <__mempcpy_chk@plt+0x5908>
   16904:	b	16950 <__mempcpy_chk@plt+0x5940>
   16908:	mvn	r1, #-2147483648	; 0x80000000
   1690c:	sdiv	r1, r1, r0
   16910:	cmp	r7, r1
   16914:	blt	16950 <__mempcpy_chk@plt+0x5940>
   16918:	mul	r6, r7, r0
   1691c:	mov	r0, r5
   16920:	mov	r1, r6
   16924:	bl	16b84 <__mempcpy_chk@plt+0x5b74>
   16928:	cmp	r6, #0
   1692c:	movwne	r6, #1
   16930:	cmp	r0, #0
   16934:	bne	16948 <__mempcpy_chk@plt+0x5938>
   16938:	clz	r1, r5
   1693c:	lsr	r1, r1, #5
   16940:	orrs	r1, r1, r6
   16944:	bne	16950 <__mempcpy_chk@plt+0x5940>
   16948:	str	r7, [r8]
   1694c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16950:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16954:	push	{fp, lr}
   16958:	mov	fp, sp
   1695c:	mov	r1, #1
   16960:	bl	16b00 <__mempcpy_chk@plt+0x5af0>
   16964:	cmp	r0, #0
   16968:	popne	{fp, pc}
   1696c:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16970:	push	{fp, lr}
   16974:	mov	fp, sp
   16978:	bl	16b00 <__mempcpy_chk@plt+0x5af0>
   1697c:	cmp	r0, #0
   16980:	popne	{fp, pc}
   16984:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16988:	push	{fp, lr}
   1698c:	mov	fp, sp
   16990:	mov	r1, #1
   16994:	bl	16b00 <__mempcpy_chk@plt+0x5af0>
   16998:	cmp	r0, #0
   1699c:	popne	{fp, pc}
   169a0:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   169a4:	push	{fp, lr}
   169a8:	mov	fp, sp
   169ac:	bl	16b00 <__mempcpy_chk@plt+0x5af0>
   169b0:	cmp	r0, #0
   169b4:	popne	{fp, pc}
   169b8:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   169bc:	push	{r4, r5, r6, sl, fp, lr}
   169c0:	add	fp, sp, #16
   169c4:	mov	r5, r0
   169c8:	mov	r0, r1
   169cc:	mov	r4, r1
   169d0:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   169d4:	cmp	r0, #0
   169d8:	beq	169f4 <__mempcpy_chk@plt+0x59e4>
   169dc:	mov	r1, r5
   169e0:	mov	r2, r4
   169e4:	mov	r6, r0
   169e8:	bl	10e24 <memcpy@plt>
   169ec:	mov	r0, r6
   169f0:	pop	{r4, r5, r6, sl, fp, pc}
   169f4:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   169f8:	push	{r4, r5, r6, sl, fp, lr}
   169fc:	add	fp, sp, #16
   16a00:	mov	r5, r0
   16a04:	mov	r0, r1
   16a08:	mov	r4, r1
   16a0c:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   16a10:	cmp	r0, #0
   16a14:	beq	16a30 <__mempcpy_chk@plt+0x5a20>
   16a18:	mov	r1, r5
   16a1c:	mov	r2, r4
   16a20:	mov	r6, r0
   16a24:	bl	10e24 <memcpy@plt>
   16a28:	mov	r0, r6
   16a2c:	pop	{r4, r5, r6, sl, fp, pc}
   16a30:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16a34:	push	{r4, r5, r6, sl, fp, lr}
   16a38:	add	fp, sp, #16
   16a3c:	mov	r5, r0
   16a40:	add	r0, r1, #1
   16a44:	mov	r4, r1
   16a48:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   16a4c:	cmp	r0, #0
   16a50:	beq	16a78 <__mempcpy_chk@plt+0x5a68>
   16a54:	mov	r6, r0
   16a58:	mov	r0, #0
   16a5c:	mov	r1, r5
   16a60:	mov	r2, r4
   16a64:	strb	r0, [r6, r4]
   16a68:	mov	r0, r6
   16a6c:	bl	10e24 <memcpy@plt>
   16a70:	mov	r0, r6
   16a74:	pop	{r4, r5, r6, sl, fp, pc}
   16a78:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16a7c:	push	{r4, r5, r6, sl, fp, lr}
   16a80:	add	fp, sp, #16
   16a84:	mov	r4, r0
   16a88:	bl	10f38 <strlen@plt>
   16a8c:	add	r5, r0, #1
   16a90:	mov	r0, r5
   16a94:	bl	16b54 <__mempcpy_chk@plt+0x5b44>
   16a98:	cmp	r0, #0
   16a9c:	beq	16ab8 <__mempcpy_chk@plt+0x5aa8>
   16aa0:	mov	r1, r4
   16aa4:	mov	r2, r5
   16aa8:	mov	r6, r0
   16aac:	bl	10e24 <memcpy@plt>
   16ab0:	mov	r0, r6
   16ab4:	pop	{r4, r5, r6, sl, fp, pc}
   16ab8:	bl	16abc <__mempcpy_chk@plt+0x5aac>
   16abc:	push	{fp, lr}
   16ac0:	mov	fp, sp
   16ac4:	movw	r0, #33004	; 0x80ec
   16ac8:	movw	r1, #32128	; 0x7d80
   16acc:	mov	r2, #5
   16ad0:	movt	r0, #2
   16ad4:	movt	r1, #1
   16ad8:	ldr	r4, [r0]
   16adc:	mov	r0, #0
   16ae0:	bl	10e48 <dcgettext@plt>
   16ae4:	movw	r2, #30964	; 0x78f4
   16ae8:	mov	r3, r0
   16aec:	mov	r0, r4
   16af0:	mov	r1, #0
   16af4:	movt	r2, #1
   16af8:	bl	10ecc <error@plt>
   16afc:	bl	10ff8 <abort@plt>
   16b00:	clz	r2, r1
   16b04:	clz	r3, r0
   16b08:	lsr	r2, r2, #5
   16b0c:	lsr	r3, r3, #5
   16b10:	orrs	r2, r3, r2
   16b14:	movwne	r1, #1
   16b18:	movwne	r0, #1
   16b1c:	cmp	r1, #0
   16b20:	beq	16b50 <__mempcpy_chk@plt+0x5b40>
   16b24:	mvn	r2, #-2147483648	; 0x80000000
   16b28:	udiv	r2, r2, r1
   16b2c:	cmp	r2, r0
   16b30:	bcs	16b50 <__mempcpy_chk@plt+0x5b40>
   16b34:	push	{fp, lr}
   16b38:	mov	fp, sp
   16b3c:	bl	10f44 <__errno_location@plt>
   16b40:	mov	r1, #12
   16b44:	str	r1, [r0]
   16b48:	mov	r0, #0
   16b4c:	pop	{fp, pc}
   16b50:	b	10db8 <calloc@plt>
   16b54:	cmp	r0, #0
   16b58:	movweq	r0, #1
   16b5c:	cmn	r0, #1
   16b60:	ble	16b68 <__mempcpy_chk@plt+0x5b58>
   16b64:	b	10ed8 <malloc@plt>
   16b68:	push	{fp, lr}
   16b6c:	mov	fp, sp
   16b70:	bl	10f44 <__errno_location@plt>
   16b74:	mov	r1, #12
   16b78:	str	r1, [r0]
   16b7c:	mov	r0, #0
   16b80:	pop	{fp, pc}
   16b84:	push	{fp, lr}
   16b88:	mov	fp, sp
   16b8c:	cmp	r0, #0
   16b90:	beq	16bac <__mempcpy_chk@plt+0x5b9c>
   16b94:	cmp	r1, #0
   16b98:	beq	16bb8 <__mempcpy_chk@plt+0x5ba8>
   16b9c:	cmn	r1, #1
   16ba0:	ble	16bc4 <__mempcpy_chk@plt+0x5bb4>
   16ba4:	pop	{fp, lr}
   16ba8:	b	10e54 <realloc@plt>
   16bac:	mov	r0, r1
   16bb0:	pop	{fp, lr}
   16bb4:	b	16b54 <__mempcpy_chk@plt+0x5b44>
   16bb8:	bl	128d0 <__mempcpy_chk@plt+0x18c0>
   16bbc:	mov	r0, #0
   16bc0:	pop	{fp, pc}
   16bc4:	bl	10f44 <__errno_location@plt>
   16bc8:	mov	r1, #12
   16bcc:	str	r1, [r0]
   16bd0:	mov	r0, #0
   16bd4:	pop	{fp, pc}
   16bd8:	push	{r4, r5, r6, sl, fp, lr}
   16bdc:	add	fp, sp, #16
   16be0:	mov	r4, r0
   16be4:	bl	10eb4 <__fpending@plt>
   16be8:	ldr	r6, [r4]
   16bec:	mov	r5, r0
   16bf0:	mov	r0, r4
   16bf4:	bl	16c5c <__mempcpy_chk@plt+0x5c4c>
   16bf8:	tst	r6, #32
   16bfc:	bne	16c34 <__mempcpy_chk@plt+0x5c24>
   16c00:	cmp	r0, #0
   16c04:	mov	r4, r0
   16c08:	mvnne	r4, #0
   16c0c:	cmp	r5, #0
   16c10:	bne	16c40 <__mempcpy_chk@plt+0x5c30>
   16c14:	cmp	r0, #0
   16c18:	beq	16c40 <__mempcpy_chk@plt+0x5c30>
   16c1c:	bl	10f44 <__errno_location@plt>
   16c20:	ldr	r0, [r0]
   16c24:	subs	r4, r0, #9
   16c28:	mvnne	r4, #0
   16c2c:	mov	r0, r4
   16c30:	pop	{r4, r5, r6, sl, fp, pc}
   16c34:	mvn	r4, #0
   16c38:	cmp	r0, #0
   16c3c:	beq	16c48 <__mempcpy_chk@plt+0x5c38>
   16c40:	mov	r0, r4
   16c44:	pop	{r4, r5, r6, sl, fp, pc}
   16c48:	bl	10f44 <__errno_location@plt>
   16c4c:	mov	r1, #0
   16c50:	str	r1, [r0]
   16c54:	mov	r0, r4
   16c58:	pop	{r4, r5, r6, sl, fp, pc}
   16c5c:	push	{r4, r5, r6, sl, fp, lr}
   16c60:	add	fp, sp, #16
   16c64:	sub	sp, sp, #8
   16c68:	mov	r4, r0
   16c6c:	bl	10f74 <fileno@plt>
   16c70:	cmn	r0, #1
   16c74:	ble	16ce8 <__mempcpy_chk@plt+0x5cd8>
   16c78:	mov	r0, r4
   16c7c:	bl	10ef0 <__freading@plt>
   16c80:	cmp	r0, #0
   16c84:	beq	16cb0 <__mempcpy_chk@plt+0x5ca0>
   16c88:	mov	r0, r4
   16c8c:	bl	10f74 <fileno@plt>
   16c90:	mov	r1, #1
   16c94:	mov	r2, #0
   16c98:	mov	r3, #0
   16c9c:	str	r1, [sp]
   16ca0:	bl	10e9c <lseek64@plt>
   16ca4:	and	r0, r0, r1
   16ca8:	cmn	r0, #1
   16cac:	beq	16ce8 <__mempcpy_chk@plt+0x5cd8>
   16cb0:	mov	r0, r4
   16cb4:	bl	16cf8 <__mempcpy_chk@plt+0x5ce8>
   16cb8:	cmp	r0, #0
   16cbc:	beq	16ce8 <__mempcpy_chk@plt+0x5cd8>
   16cc0:	bl	10f44 <__errno_location@plt>
   16cc4:	ldr	r6, [r0]
   16cc8:	mov	r5, r0
   16ccc:	mov	r0, r4
   16cd0:	bl	10f8c <fclose@plt>
   16cd4:	cmp	r6, #0
   16cd8:	strne	r6, [r5]
   16cdc:	mvnne	r0, #0
   16ce0:	sub	sp, fp, #16
   16ce4:	pop	{r4, r5, r6, sl, fp, pc}
   16ce8:	mov	r0, r4
   16cec:	sub	sp, fp, #16
   16cf0:	pop	{r4, r5, r6, sl, fp, lr}
   16cf4:	b	10f8c <fclose@plt>
   16cf8:	push	{r4, sl, fp, lr}
   16cfc:	add	fp, sp, #8
   16d00:	sub	sp, sp, #8
   16d04:	mov	r4, r0
   16d08:	cmp	r0, #0
   16d0c:	beq	16d28 <__mempcpy_chk@plt+0x5d18>
   16d10:	mov	r0, r4
   16d14:	bl	10ef0 <__freading@plt>
   16d18:	cmp	r0, #0
   16d1c:	ldrbne	r0, [r4, #1]
   16d20:	tstne	r0, #1
   16d24:	bne	16d38 <__mempcpy_chk@plt+0x5d28>
   16d28:	mov	r0, r4
   16d2c:	sub	sp, fp, #8
   16d30:	pop	{r4, sl, fp, lr}
   16d34:	b	10de8 <fflush@plt>
   16d38:	mov	r0, #1
   16d3c:	mov	r2, #0
   16d40:	mov	r3, #0
   16d44:	str	r0, [sp]
   16d48:	mov	r0, r4
   16d4c:	bl	16d60 <__mempcpy_chk@plt+0x5d50>
   16d50:	mov	r0, r4
   16d54:	sub	sp, fp, #8
   16d58:	pop	{r4, sl, fp, lr}
   16d5c:	b	10de8 <fflush@plt>
   16d60:	push	{r4, r5, r6, r7, fp, lr}
   16d64:	add	fp, sp, #16
   16d68:	sub	sp, sp, #8
   16d6c:	mov	r4, r0
   16d70:	ldr	r0, [r0, #4]
   16d74:	mov	r5, r3
   16d78:	mov	r6, r2
   16d7c:	ldr	r1, [r4, #8]
   16d80:	cmp	r1, r0
   16d84:	bne	16da0 <__mempcpy_chk@plt+0x5d90>
   16d88:	ldrd	r0, [r4, #16]
   16d8c:	cmp	r1, r0
   16d90:	bne	16da0 <__mempcpy_chk@plt+0x5d90>
   16d94:	ldr	r0, [r4, #36]	; 0x24
   16d98:	cmp	r0, #0
   16d9c:	beq	16db8 <__mempcpy_chk@plt+0x5da8>
   16da0:	mov	r0, r4
   16da4:	mov	r2, r6
   16da8:	mov	r3, r5
   16dac:	sub	sp, fp, #16
   16db0:	pop	{r4, r5, r6, r7, fp, lr}
   16db4:	b	10f98 <fseeko64@plt>
   16db8:	ldr	r7, [fp, #8]
   16dbc:	mov	r0, r4
   16dc0:	bl	10f74 <fileno@plt>
   16dc4:	mov	r2, r6
   16dc8:	mov	r3, r5
   16dcc:	str	r7, [sp]
   16dd0:	bl	10e9c <lseek64@plt>
   16dd4:	and	r2, r0, r1
   16dd8:	cmn	r2, #1
   16ddc:	mvneq	r0, #0
   16de0:	subeq	sp, fp, #16
   16de4:	popeq	{r4, r5, r6, r7, fp, pc}
   16de8:	strd	r0, [r4, #80]	; 0x50
   16dec:	ldr	r0, [r4]
   16df0:	bic	r0, r0, #16
   16df4:	str	r0, [r4]
   16df8:	mov	r0, #0
   16dfc:	sub	sp, fp, #16
   16e00:	pop	{r4, r5, r6, r7, fp, pc}
   16e04:	ldrb	r2, [r0]
   16e08:	cmp	r2, #0
   16e0c:	beq	16e38 <__mempcpy_chk@plt+0x5e28>
   16e10:	add	r3, r0, #1
   16e14:	mov	r0, #0
   16e18:	ror	r0, r0, #23
   16e1c:	uxtab	r0, r0, r2
   16e20:	ldrb	r2, [r3], #1
   16e24:	cmp	r2, #0
   16e28:	bne	16e18 <__mempcpy_chk@plt+0x5e08>
   16e2c:	udiv	r2, r0, r1
   16e30:	mls	r0, r2, r1, r0
   16e34:	bx	lr
   16e38:	mov	r0, #0
   16e3c:	udiv	r2, r0, r1
   16e40:	mls	r0, r2, r1, r0
   16e44:	bx	lr
   16e48:	push	{fp, lr}
   16e4c:	mov	fp, sp
   16e50:	mov	r0, #14
   16e54:	bl	10fc8 <nl_langinfo@plt>
   16e58:	movw	r1, #29368	; 0x72b8
   16e5c:	cmp	r0, #0
   16e60:	movt	r1, #1
   16e64:	movne	r1, r0
   16e68:	movw	r0, #32145	; 0x7d91
   16e6c:	ldrb	r2, [r1]
   16e70:	movt	r0, #1
   16e74:	cmp	r2, #0
   16e78:	movne	r0, r1
   16e7c:	pop	{fp, pc}
   16e80:	push	{r4, r5, r6, r7, fp, lr}
   16e84:	add	fp, sp, #16
   16e88:	sub	sp, sp, #8
   16e8c:	add	r5, sp, #4
   16e90:	cmp	r0, #0
   16e94:	mov	r7, r2
   16e98:	mov	r4, r1
   16e9c:	movne	r5, r0
   16ea0:	mov	r0, r5
   16ea4:	bl	10ec0 <mbrtowc@plt>
   16ea8:	mov	r6, r0
   16eac:	cmp	r7, #0
   16eb0:	beq	16ed4 <__mempcpy_chk@plt+0x5ec4>
   16eb4:	cmn	r6, #2
   16eb8:	bcc	16ed4 <__mempcpy_chk@plt+0x5ec4>
   16ebc:	mov	r0, #0
   16ec0:	bl	16f1c <__mempcpy_chk@plt+0x5f0c>
   16ec4:	cmp	r0, #0
   16ec8:	ldrbeq	r0, [r4]
   16ecc:	moveq	r6, #1
   16ed0:	streq	r0, [r5]
   16ed4:	mov	r0, r6
   16ed8:	sub	sp, fp, #16
   16edc:	pop	{r4, r5, r6, r7, fp, pc}
   16ee0:	cmp	r2, #0
   16ee4:	beq	16f14 <__mempcpy_chk@plt+0x5f04>
   16ee8:	mvn	r3, #0
   16eec:	udiv	r3, r3, r2
   16ef0:	cmp	r3, r1
   16ef4:	bcs	16f14 <__mempcpy_chk@plt+0x5f04>
   16ef8:	push	{fp, lr}
   16efc:	mov	fp, sp
   16f00:	bl	10f44 <__errno_location@plt>
   16f04:	mov	r1, #12
   16f08:	str	r1, [r0]
   16f0c:	mov	r0, #0
   16f10:	pop	{fp, pc}
   16f14:	mul	r1, r2, r1
   16f18:	b	16b84 <__mempcpy_chk@plt+0x5b74>
   16f1c:	push	{r4, sl, fp, lr}
   16f20:	add	fp, sp, #8
   16f24:	sub	sp, sp, #264	; 0x108
   16f28:	add	r1, sp, #7
   16f2c:	movw	r2, #257	; 0x101
   16f30:	bl	16f80 <__mempcpy_chk@plt+0x5f70>
   16f34:	mov	r4, #0
   16f38:	cmp	r0, #0
   16f3c:	bne	16f74 <__mempcpy_chk@plt+0x5f64>
   16f40:	movw	r1, #32151	; 0x7d97
   16f44:	add	r0, sp, #7
   16f48:	movt	r1, #1
   16f4c:	bl	10ddc <strcmp@plt>
   16f50:	cmp	r0, #0
   16f54:	beq	16f74 <__mempcpy_chk@plt+0x5f64>
   16f58:	movw	r1, #32153	; 0x7d99
   16f5c:	add	r0, sp, #7
   16f60:	movt	r1, #1
   16f64:	bl	10ddc <strcmp@plt>
   16f68:	mov	r4, r0
   16f6c:	cmp	r0, #0
   16f70:	movwne	r4, #1
   16f74:	mov	r0, r4
   16f78:	sub	sp, fp, #8
   16f7c:	pop	{r4, sl, fp, pc}
   16f80:	push	{r4, r5, r6, r7, fp, lr}
   16f84:	add	fp, sp, #16
   16f88:	mov	r4, r1
   16f8c:	mov	r1, #0
   16f90:	mov	r6, r2
   16f94:	bl	10fb0 <setlocale@plt>
   16f98:	cmp	r0, #0
   16f9c:	beq	16fcc <__mempcpy_chk@plt+0x5fbc>
   16fa0:	mov	r7, r0
   16fa4:	bl	10f38 <strlen@plt>
   16fa8:	cmp	r0, r6
   16fac:	bcs	16fec <__mempcpy_chk@plt+0x5fdc>
   16fb0:	add	r2, r0, #1
   16fb4:	mov	r0, r4
   16fb8:	mov	r1, r7
   16fbc:	bl	10e24 <memcpy@plt>
   16fc0:	mov	r5, #0
   16fc4:	mov	r0, r5
   16fc8:	pop	{r4, r5, r6, r7, fp, pc}
   16fcc:	cmp	r6, #0
   16fd0:	mov	r5, #22
   16fd4:	movne	r0, #0
   16fd8:	strbne	r0, [r4]
   16fdc:	movne	r0, r5
   16fe0:	popne	{r4, r5, r6, r7, fp, pc}
   16fe4:	mov	r0, r5
   16fe8:	pop	{r4, r5, r6, r7, fp, pc}
   16fec:	mov	r5, #34	; 0x22
   16ff0:	cmp	r6, #0
   16ff4:	beq	17014 <__mempcpy_chk@plt+0x6004>
   16ff8:	sub	r6, r6, #1
   16ffc:	mov	r0, r4
   17000:	mov	r1, r7
   17004:	mov	r2, r6
   17008:	bl	10e24 <memcpy@plt>
   1700c:	mov	r0, #0
   17010:	strb	r0, [r4, r6]
   17014:	mov	r0, r5
   17018:	pop	{r4, r5, r6, r7, fp, pc}
   1701c:	mov	r1, #0
   17020:	b	10fb0 <setlocale@plt>
   17024:	cmp	r3, #0
   17028:	cmpeq	r2, #0
   1702c:	bne	17044 <__mempcpy_chk@plt+0x6034>
   17030:	cmp	r1, #0
   17034:	cmpeq	r0, #0
   17038:	mvnne	r1, #0
   1703c:	mvnne	r0, #0
   17040:	b	17060 <__mempcpy_chk@plt+0x6050>
   17044:	sub	sp, sp, #8
   17048:	push	{sp, lr}
   1704c:	bl	17070 <__mempcpy_chk@plt+0x6060>
   17050:	ldr	lr, [sp, #4]
   17054:	add	sp, sp, #8
   17058:	pop	{r2, r3}
   1705c:	bx	lr
   17060:	push	{r1, lr}
   17064:	mov	r0, #8
   17068:	bl	10dd0 <raise@plt>
   1706c:	pop	{r1, pc}
   17070:	cmp	r1, r3
   17074:	cmpeq	r0, r2
   17078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1707c:	mov	r4, r0
   17080:	movcc	r0, #0
   17084:	mov	r5, r1
   17088:	ldr	lr, [sp, #36]	; 0x24
   1708c:	movcc	r1, r0
   17090:	bcc	1718c <__mempcpy_chk@plt+0x617c>
   17094:	cmp	r3, #0
   17098:	clzeq	ip, r2
   1709c:	clzne	ip, r3
   170a0:	addeq	ip, ip, #32
   170a4:	cmp	r5, #0
   170a8:	clzeq	r1, r4
   170ac:	addeq	r1, r1, #32
   170b0:	clzne	r1, r5
   170b4:	sub	ip, ip, r1
   170b8:	sub	sl, ip, #32
   170bc:	lsl	r9, r3, ip
   170c0:	rsb	fp, ip, #32
   170c4:	orr	r9, r9, r2, lsl sl
   170c8:	orr	r9, r9, r2, lsr fp
   170cc:	lsl	r8, r2, ip
   170d0:	cmp	r5, r9
   170d4:	cmpeq	r4, r8
   170d8:	movcc	r0, #0
   170dc:	movcc	r1, r0
   170e0:	bcc	170fc <__mempcpy_chk@plt+0x60ec>
   170e4:	mov	r0, #1
   170e8:	subs	r4, r4, r8
   170ec:	lsl	r1, r0, sl
   170f0:	orr	r1, r1, r0, lsr fp
   170f4:	lsl	r0, r0, ip
   170f8:	sbc	r5, r5, r9
   170fc:	cmp	ip, #0
   17100:	beq	1718c <__mempcpy_chk@plt+0x617c>
   17104:	lsr	r6, r8, #1
   17108:	orr	r6, r6, r9, lsl #31
   1710c:	lsr	r7, r9, #1
   17110:	mov	r2, ip
   17114:	b	17138 <__mempcpy_chk@plt+0x6128>
   17118:	subs	r3, r4, r6
   1711c:	sbc	r8, r5, r7
   17120:	adds	r3, r3, r3
   17124:	adc	r8, r8, r8
   17128:	adds	r4, r3, #1
   1712c:	adc	r5, r8, #0
   17130:	subs	r2, r2, #1
   17134:	beq	17154 <__mempcpy_chk@plt+0x6144>
   17138:	cmp	r5, r7
   1713c:	cmpeq	r4, r6
   17140:	bcs	17118 <__mempcpy_chk@plt+0x6108>
   17144:	adds	r4, r4, r4
   17148:	adc	r5, r5, r5
   1714c:	subs	r2, r2, #1
   17150:	bne	17138 <__mempcpy_chk@plt+0x6128>
   17154:	lsr	r3, r4, ip
   17158:	orr	r3, r3, r5, lsl fp
   1715c:	lsr	r2, r5, ip
   17160:	orr	r3, r3, r5, lsr sl
   17164:	adds	r0, r0, r4
   17168:	mov	r4, r3
   1716c:	lsl	r3, r2, ip
   17170:	orr	r3, r3, r4, lsl sl
   17174:	lsl	ip, r4, ip
   17178:	orr	r3, r3, r4, lsr fp
   1717c:	adc	r1, r1, r5
   17180:	subs	r0, r0, ip
   17184:	mov	r5, r2
   17188:	sbc	r1, r1, r3
   1718c:	cmp	lr, #0
   17190:	strdne	r4, [lr]
   17194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17198:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1719c:	mov	r7, r0
   171a0:	ldr	r6, [pc, #72]	; 171f0 <__mempcpy_chk@plt+0x61e0>
   171a4:	ldr	r5, [pc, #72]	; 171f4 <__mempcpy_chk@plt+0x61e4>
   171a8:	add	r6, pc, r6
   171ac:	add	r5, pc, r5
   171b0:	sub	r6, r6, r5
   171b4:	mov	r8, r1
   171b8:	mov	r9, r2
   171bc:	bl	10d98 <calloc@plt-0x20>
   171c0:	asrs	r6, r6, #2
   171c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   171c8:	mov	r4, #0
   171cc:	add	r4, r4, #1
   171d0:	ldr	r3, [r5], #4
   171d4:	mov	r2, r9
   171d8:	mov	r1, r8
   171dc:	mov	r0, r7
   171e0:	blx	r3
   171e4:	cmp	r6, r4
   171e8:	bne	171cc <__mempcpy_chk@plt+0x61bc>
   171ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   171f0:	andeq	r0, r1, ip, asr sp
   171f4:	andeq	r0, r1, r4, asr sp
   171f8:	bx	lr
   171fc:	ldr	r3, [pc, #12]	; 17210 <__mempcpy_chk@plt+0x6200>
   17200:	mov	r1, #0
   17204:	add	r3, pc, r3
   17208:	ldr	r2, [r3]
   1720c:	b	10f50 <__cxa_atexit@plt>
   17210:	ldrdeq	r0, [r1], -r8

Disassembly of section .fini:

00017214 <.fini>:
   17214:	push	{r3, lr}
   17218:	pop	{r3, pc}
