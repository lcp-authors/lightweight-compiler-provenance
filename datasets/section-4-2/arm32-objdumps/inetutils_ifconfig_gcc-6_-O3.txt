
../repos/inetutils/ifconfig/ifconfig:     file format elf32-littlearm


Disassembly of section .init:

0001132c <.init>:
   1132c:	push	{r3, lr}
   11330:	bl	11878 <ftello64@plt+0x1a8>
   11334:	pop	{r3, pc}

Disassembly of section .plt:

00011338 <calloc@plt-0x14>:
   11338:	push	{lr}		; (str lr, [sp, #-4]!)
   1133c:	ldr	lr, [pc, #4]	; 11348 <calloc@plt-0x4>
   11340:	add	lr, pc, lr
   11344:	ldr	pc, [lr, #8]!
   11348:			; <UNDEFINED> instruction: 0x00025cb8

0001134c <calloc@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #151552	; 0x25000
   11354:	ldr	pc, [ip, #3256]!	; 0xcb8

00011358 <fputs_unlocked@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #151552	; 0x25000
   11360:	ldr	pc, [ip, #3248]!	; 0xcb0

00011364 <strstr@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #151552	; 0x25000
   1136c:	ldr	pc, [ip, #3240]!	; 0xca8

00011370 <ether_hostton@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #151552	; 0x25000
   11378:	ldr	pc, [ip, #3232]!	; 0xca0

0001137c <raise@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #151552	; 0x25000
   11384:	ldr	pc, [ip, #3224]!	; 0xc98

00011388 <__getdelim@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #151552	; 0x25000
   11390:	ldr	pc, [ip, #3216]!	; 0xc90

00011394 <inet_aton@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #151552	; 0x25000
   1139c:	ldr	pc, [ip, #3208]!	; 0xc88

000113a0 <strcmp@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #151552	; 0x25000
   113a8:	ldr	pc, [ip, #3200]!	; 0xc80

000113ac <strtol@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #151552	; 0x25000
   113b4:	ldr	pc, [ip, #3192]!	; 0xc78

000113b8 <printf@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #151552	; 0x25000
   113c0:	ldr	pc, [ip, #3184]!	; 0xc70

000113c4 <memmove@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #151552	; 0x25000
   113cc:	ldr	pc, [ip, #3176]!	; 0xc68

000113d0 <strchrnul@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #151552	; 0x25000
   113d8:	ldr	pc, [ip, #3168]!	; 0xc60

000113dc <free@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #151552	; 0x25000
   113e4:	ldr	pc, [ip, #3160]!	; 0xc58

000113e8 <gai_strerror@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #151552	; 0x25000
   113f0:	ldr	pc, [ip, #3152]!	; 0xc50

000113f4 <ferror@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #151552	; 0x25000
   113fc:	ldr	pc, [ip, #3144]!	; 0xc48

00011400 <strndup@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #151552	; 0x25000
   11408:	ldr	pc, [ip, #3136]!	; 0xc40

0001140c <memcpy@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #151552	; 0x25000
   11414:	ldr	pc, [ip, #3128]!	; 0xc38

00011418 <fwrite_unlocked@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #151552	; 0x25000
   11420:	ldr	pc, [ip, #3120]!	; 0xc30

00011424 <inet_ntoa@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #151552	; 0x25000
   1142c:	ldr	pc, [ip, #3112]!	; 0xc28

00011430 <sleep@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #151552	; 0x25000
   11438:	ldr	pc, [ip, #3104]!	; 0xc20

0001143c <strdup@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #151552	; 0x25000
   11444:	ldr	pc, [ip, #3096]!	; 0xc18

00011448 <realloc@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #151552	; 0x25000
   11450:	ldr	pc, [ip, #3088]!	; 0xc10

00011454 <strcasecmp@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #151552	; 0x25000
   1145c:	ldr	pc, [ip, #3080]!	; 0xc08

00011460 <funlockfile@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #151552	; 0x25000
   11468:	ldr	pc, [ip, #3072]!	; 0xc00

0001146c <__fxstat64@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #151552	; 0x25000
   11474:	ldr	pc, [ip, #3064]!	; 0xbf8

00011478 <fwrite@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #151552	; 0x25000
   11480:	ldr	pc, [ip, #3056]!	; 0xbf0

00011484 <ioctl@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #151552	; 0x25000
   1148c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011490 <strcpy@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #151552	; 0x25000
   11498:	ldr	pc, [ip, #3040]!	; 0xbe0

0001149c <fread@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #151552	; 0x25000
   114a4:	ldr	pc, [ip, #3032]!	; 0xbd8

000114a8 <error@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #151552	; 0x25000
   114b0:	ldr	pc, [ip, #3024]!	; 0xbd0

000114b4 <getenv@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #151552	; 0x25000
   114bc:	ldr	pc, [ip, #3016]!	; 0xbc8

000114c0 <puts@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #151552	; 0x25000
   114c8:	ldr	pc, [ip, #3008]!	; 0xbc0

000114cc <malloc@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #151552	; 0x25000
   114d4:	ldr	pc, [ip, #3000]!	; 0xbb8

000114d8 <__libc_start_main@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #151552	; 0x25000
   114e0:	ldr	pc, [ip, #2992]!	; 0xbb0

000114e4 <strerror@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #151552	; 0x25000
   114ec:	ldr	pc, [ip, #2984]!	; 0xba8

000114f0 <__ctype_tolower_loc@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #151552	; 0x25000
   114f8:	ldr	pc, [ip, #2976]!	; 0xba0

000114fc <ether_aton@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #151552	; 0x25000
   11504:	ldr	pc, [ip, #2968]!	; 0xb98

00011508 <__gmon_start__@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #151552	; 0x25000
   11510:	ldr	pc, [ip, #2960]!	; 0xb90

00011514 <mempcpy@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #151552	; 0x25000
   1151c:	ldr	pc, [ip, #2952]!	; 0xb88

00011520 <__ctype_b_loc@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #151552	; 0x25000
   11528:	ldr	pc, [ip, #2944]!	; 0xb80

0001152c <exit@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #151552	; 0x25000
   11534:	ldr	pc, [ip, #2936]!	; 0xb78

00011538 <strtoul@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #151552	; 0x25000
   11540:	ldr	pc, [ip, #2928]!	; 0xb70

00011544 <strlen@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #151552	; 0x25000
   1154c:	ldr	pc, [ip, #2920]!	; 0xb68

00011550 <strchr@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #151552	; 0x25000
   11558:	ldr	pc, [ip, #2912]!	; 0xb60

0001155c <fprintf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #151552	; 0x25000
   11564:	ldr	pc, [ip, #2904]!	; 0xb58

00011568 <__errno_location@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #151552	; 0x25000
   11570:	ldr	pc, [ip, #2896]!	; 0xb50

00011574 <strncasecmp@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #151552	; 0x25000
   1157c:	ldr	pc, [ip, #2888]!	; 0xb48

00011580 <strerror_r@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #151552	; 0x25000
   11588:	ldr	pc, [ip, #2880]!	; 0xb40

0001158c <setvbuf@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #151552	; 0x25000
   11594:	ldr	pc, [ip, #2872]!	; 0xb38

00011598 <memset@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #151552	; 0x25000
   115a0:	ldr	pc, [ip, #2864]!	; 0xb30

000115a4 <strncpy@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #151552	; 0x25000
   115ac:	ldr	pc, [ip, #2856]!	; 0xb28

000115b0 <fileno@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #151552	; 0x25000
   115b8:	ldr	pc, [ip, #2848]!	; 0xb20

000115bc <memchr@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #151552	; 0x25000
   115c4:	ldr	pc, [ip, #2840]!	; 0xb18

000115c8 <fclose@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #151552	; 0x25000
   115d0:	ldr	pc, [ip, #2832]!	; 0xb10

000115d4 <ether_ntoa@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #151552	; 0x25000
   115dc:	ldr	pc, [ip, #2824]!	; 0xb08

000115e0 <__overflow@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #151552	; 0x25000
   115e8:	ldr	pc, [ip, #2816]!	; 0xb00

000115ec <getnameinfo@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #151552	; 0x25000
   115f4:	ldr	pc, [ip, #2808]!	; 0xaf8

000115f8 <strrchr@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #151552	; 0x25000
   11600:	ldr	pc, [ip, #2800]!	; 0xaf0

00011604 <vfprintf@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #151552	; 0x25000
   1160c:	ldr	pc, [ip, #2792]!	; 0xae8

00011610 <fputc@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #151552	; 0x25000
   11618:	ldr	pc, [ip, #2784]!	; 0xae0

0001161c <sscanf@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #151552	; 0x25000
   11624:	ldr	pc, [ip, #2776]!	; 0xad8

00011628 <putc@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #151552	; 0x25000
   11630:	ldr	pc, [ip, #2768]!	; 0xad0

00011634 <flockfile@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #151552	; 0x25000
   1163c:	ldr	pc, [ip, #2760]!	; 0xac8

00011640 <vsnprintf@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #151552	; 0x25000
   11648:	ldr	pc, [ip, #2752]!	; 0xac0

0001164c <fopen64@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #151552	; 0x25000
   11654:	ldr	pc, [ip, #2744]!	; 0xab8

00011658 <qsort@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #151552	; 0x25000
   11660:	ldr	pc, [ip, #2736]!	; 0xab0

00011664 <explicit_bzero@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #151552	; 0x25000
   1166c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011670 <freeaddrinfo@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #151552	; 0x25000
   11678:	ldr	pc, [ip, #2720]!	; 0xaa0

0001167c <getaddrinfo@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #151552	; 0x25000
   11684:	ldr	pc, [ip, #2712]!	; 0xa98

00011688 <socket@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #151552	; 0x25000
   11690:	ldr	pc, [ip, #2704]!	; 0xa90

00011694 <if_nametoindex@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #151552	; 0x25000
   1169c:	ldr	pc, [ip, #2696]!	; 0xa88

000116a0 <strncmp@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #151552	; 0x25000
   116a8:	ldr	pc, [ip, #2688]!	; 0xa80

000116ac <abort@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #151552	; 0x25000
   116b4:	ldr	pc, [ip, #2680]!	; 0xa78

000116b8 <close@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #151552	; 0x25000
   116c0:	ldr	pc, [ip, #2672]!	; 0xa70

000116c4 <__assert_fail@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #151552	; 0x25000
   116cc:	ldr	pc, [ip, #2664]!	; 0xa68

000116d0 <ftello64@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #151552	; 0x25000
   116d8:	ldr	pc, [ip, #2656]!	; 0xa60

Disassembly of section .text:

000116dc <argp_parse@@Base-0x8684>:
   116dc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116e0:	mov	r4, r1
   116e4:	mov	r5, r0
   116e8:	ldr	r0, [r1]
   116ec:	bl	1b238 <_obstack_memory_used@@Base+0x34>
   116f0:	mov	r1, r4
   116f4:	mov	r0, r5
   116f8:	bl	13e84 <ftello64@plt+0x27b4>
   116fc:	mov	r2, #0
   11700:	mov	r1, #1
   11704:	mov	r0, #2
   11708:	bl	11688 <socket@plt>
   1170c:	subs	r8, r0, #0
   11710:	blt	11808 <ftello64@plt+0x138>
   11714:	ldr	r6, [pc, #264]	; 11824 <ftello64@plt+0x154>
   11718:	ldr	r7, [pc, #264]	; 11828 <ftello64@plt+0x158>
   1171c:	ldr	r2, [r6]
   11720:	ldr	r3, [r7]
   11724:	rsb	r2, r2, r2, lsl #3
   11728:	add	r2, r3, r2, lsl #3
   1172c:	cmp	r3, r2
   11730:	bcs	11800 <ftello64@plt+0x130>
   11734:	ldr	r5, [pc, #240]	; 1182c <ftello64@plt+0x15c>
   11738:	ldr	r9, [pc, #240]	; 11830 <ftello64@plt+0x160>
   1173c:	ldr	fp, [pc, #240]	; 11834 <ftello64@plt+0x164>
   11740:	add	sl, r3, #56	; 0x38
   11744:	mov	r4, #0
   11748:	b	11790 <ftello64@plt+0xc0>
   1174c:	ldr	r0, [sl, #-56]	; 0xffffffc8
   11750:	bl	11694 <if_nametoindex@plt>
   11754:	cmp	r0, #0
   11758:	beq	11774 <ftello64@plt+0xa4>
   1175c:	cmp	r4, #0
   11760:	add	r4, r4, #1
   11764:	bne	117d0 <ftello64@plt+0x100>
   11768:	ldr	r1, [sl, #-56]	; 0xffffffc8
   1176c:	mov	r0, r9
   11770:	bl	113b8 <printf@plt>
   11774:	ldr	r2, [r6]
   11778:	ldr	r1, [r7]
   1177c:	rsb	r2, r2, r2, lsl #3
   11780:	add	r2, r1, r2, lsl #3
   11784:	cmp	sl, r2
   11788:	add	sl, sl, #56	; 0x38
   1178c:	bcs	117e0 <ftello64@plt+0x110>
   11790:	ldr	r2, [r5]
   11794:	sub	r1, sl, #56	; 0x38
   11798:	cmp	r2, #0
   1179c:	bne	1174c <ftello64@plt+0x7c>
   117a0:	mov	r0, r8
   117a4:	bl	12898 <ftello64@plt+0x11c8>
   117a8:	subs	r4, r0, #0
   117ac:	beq	11774 <ftello64@plt+0xa4>
   117b0:	ldr	r3, [r5]
   117b4:	cmp	r3, #0
   117b8:	beq	117f0 <ftello64@plt+0x120>
   117bc:	ldr	r3, [pc, #112]	; 11834 <ftello64@plt+0x164>
   117c0:	mov	r0, #10
   117c4:	ldr	r1, [r3]
   117c8:	bl	11628 <putc@plt>
   117cc:	b	117f0 <ftello64@plt+0x120>
   117d0:	ldr	r1, [fp]
   117d4:	mov	r0, #32
   117d8:	bl	11628 <putc@plt>
   117dc:	b	11768 <ftello64@plt+0x98>
   117e0:	ldr	r3, [r5]
   117e4:	cmp	r3, #0
   117e8:	cmpne	r4, #0
   117ec:	bne	117bc <ftello64@plt+0xec>
   117f0:	mov	r0, r8
   117f4:	bl	116b8 <close@plt>
   117f8:	mov	r0, r4
   117fc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11800:	mov	r4, #0
   11804:	b	117f0 <ftello64@plt+0x120>
   11808:	bl	11568 <__errno_location@plt>
   1180c:	ldr	r2, [pc, #36]	; 11838 <ftello64@plt+0x168>
   11810:	ldr	r1, [r0]
   11814:	mov	r0, #0
   11818:	bl	114a8 <error@plt>
   1181c:	mov	r0, #1
   11820:	bl	1152c <exit@plt>
   11824:	strdeq	r7, [r3], -r0
   11828:	andeq	r7, r3, ip, ror #23
   1182c:	andeq	r7, r3, r4, lsl #24
   11830:	andeq	r3, r2, ip, asr fp
   11834:	andeq	r7, r3, ip, asr #22
   11838:	muleq	r2, r8, r5
   1183c:	mov	fp, #0
   11840:	mov	lr, #0
   11844:	pop	{r1}		; (ldr r1, [sp], #4)
   11848:	mov	r2, sp
   1184c:	push	{r2}		; (str r2, [sp, #-4]!)
   11850:	push	{r0}		; (str r0, [sp, #-4]!)
   11854:	ldr	ip, [pc, #16]	; 1186c <ftello64@plt+0x19c>
   11858:	push	{ip}		; (str ip, [sp, #-4]!)
   1185c:	ldr	r0, [pc, #12]	; 11870 <ftello64@plt+0x1a0>
   11860:	ldr	r3, [pc, #12]	; 11874 <ftello64@plt+0x1a4>
   11864:	bl	114d8 <__libc_start_main@plt>
   11868:	bl	116ac <abort@plt>
   1186c:	andeq	r3, r2, r8, lsl #11
   11870:	ldrdeq	r1, [r1], -ip
   11874:	andeq	r3, r2, r8, lsr #10
   11878:	ldr	r3, [pc, #20]	; 11894 <ftello64@plt+0x1c4>
   1187c:	ldr	r2, [pc, #20]	; 11898 <ftello64@plt+0x1c8>
   11880:	add	r3, pc, r3
   11884:	ldr	r2, [r3, r2]
   11888:	cmp	r2, #0
   1188c:	bxeq	lr
   11890:	b	11508 <__gmon_start__@plt>
   11894:	andeq	r5, r2, r8, ror r7
   11898:	andeq	r0, r0, ip, lsr r1
   1189c:	ldr	r3, [pc, #28]	; 118c0 <ftello64@plt+0x1f0>
   118a0:	ldr	r0, [pc, #28]	; 118c4 <ftello64@plt+0x1f4>
   118a4:	sub	r3, r3, r0
   118a8:	cmp	r3, #6
   118ac:	bxls	lr
   118b0:	ldr	r3, [pc, #16]	; 118c8 <ftello64@plt+0x1f8>
   118b4:	cmp	r3, #0
   118b8:	bxeq	lr
   118bc:	bx	r3
   118c0:	andeq	r7, r3, pc, lsr fp
   118c4:	andeq	r7, r3, ip, lsr fp
   118c8:	andeq	r0, r0, r0
   118cc:	ldr	r1, [pc, #36]	; 118f8 <ftello64@plt+0x228>
   118d0:	ldr	r0, [pc, #36]	; 118fc <ftello64@plt+0x22c>
   118d4:	sub	r1, r1, r0
   118d8:	asr	r1, r1, #2
   118dc:	add	r1, r1, r1, lsr #31
   118e0:	asrs	r1, r1, #1
   118e4:	bxeq	lr
   118e8:	ldr	r3, [pc, #16]	; 11900 <ftello64@plt+0x230>
   118ec:	cmp	r3, #0
   118f0:	bxeq	lr
   118f4:	bx	r3
   118f8:	andeq	r7, r3, ip, lsr fp
   118fc:	andeq	r7, r3, ip, lsr fp
   11900:	andeq	r0, r0, r0
   11904:	push	{r4, lr}
   11908:	ldr	r4, [pc, #24]	; 11928 <ftello64@plt+0x258>
   1190c:	ldrb	r3, [r4]
   11910:	cmp	r3, #0
   11914:	popne	{r4, pc}
   11918:	bl	1189c <ftello64@plt+0x1cc>
   1191c:	mov	r3, #1
   11920:	strb	r3, [r4]
   11924:	pop	{r4, pc}
   11928:	andeq	r7, r3, r0, asr fp
   1192c:	ldr	r0, [pc, #40]	; 1195c <ftello64@plt+0x28c>
   11930:	ldr	r3, [r0]
   11934:	cmp	r3, #0
   11938:	bne	11940 <ftello64@plt+0x270>
   1193c:	b	118cc <ftello64@plt+0x1fc>
   11940:	ldr	r3, [pc, #24]	; 11960 <ftello64@plt+0x290>
   11944:	cmp	r3, #0
   11948:	beq	1193c <ftello64@plt+0x26c>
   1194c:	push	{r4, lr}
   11950:	blx	r3
   11954:	pop	{r4, lr}
   11958:	b	118cc <ftello64@plt+0x1fc>
   1195c:	andeq	r6, r3, r4, lsl pc
   11960:	andeq	r0, r0, r0
   11964:	ldr	r1, [r1]
   11968:	ldr	r0, [r0]
   1196c:	b	113a0 <strcmp@plt>
   11970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11974:	mov	r8, r0
   11978:	ldr	r6, [pc, #584]	; 11bc8 <ftello64@plt+0x4f8>
   1197c:	sub	sp, sp, #12
   11980:	ldr	r0, [r6]
   11984:	cmp	r0, #0
   11988:	beq	11bac <ftello64@plt+0x4dc>
   1198c:	mov	r4, r6
   11990:	mov	r5, #0
   11994:	ldr	r3, [r4, #8]
   11998:	cmp	r3, #0
   1199c:	bne	119ac <ftello64@plt+0x2dc>
   119a0:	bl	11544 <strlen@plt>
   119a4:	add	r5, r5, #1
   119a8:	add	r5, r5, r0
   119ac:	ldr	r0, [r4, #12]!
   119b0:	cmp	r0, #0
   119b4:	bne	11994 <ftello64@plt+0x2c4>
   119b8:	add	r0, r5, #80	; 0x50
   119bc:	bl	1c3f4 <_obstack_memory_used@@Base+0x11f0>
   119c0:	ldr	r4, [r6]
   119c4:	cmp	r4, #0
   119c8:	mov	r9, r0
   119cc:	add	r6, r0, #80	; 0x50
   119d0:	beq	11bb8 <ftello64@plt+0x4e8>
   119d4:	ldr	sl, [pc, #492]	; 11bc8 <ftello64@plt+0x4f8>
   119d8:	mov	r7, #0
   119dc:	ldr	r3, [sl, #8]
   119e0:	cmp	r3, #0
   119e4:	bne	11a4c <ftello64@plt+0x37c>
   119e8:	ldr	r3, [sl, #4]
   119ec:	tst	r3, #72	; 0x48
   119f0:	bne	11a4c <ftello64@plt+0x37c>
   119f4:	mov	r0, r4
   119f8:	mov	r2, #2
   119fc:	ldr	r1, [pc, #456]	; 11bcc <ftello64@plt+0x4fc>
   11a00:	str	r6, [r9, r7, lsl #2]
   11a04:	bl	116a0 <strncmp@plt>
   11a08:	add	r7, r7, #1
   11a0c:	cmp	r0, #0
   11a10:	addeq	r4, r4, #2
   11a14:	ldrb	fp, [r4]
   11a18:	cmp	fp, #0
   11a1c:	beq	11b90 <ftello64@plt+0x4c0>
   11a20:	bl	114f0 <__ctype_tolower_loc@plt>
   11a24:	mov	r3, r6
   11a28:	ldr	r1, [r0]
   11a2c:	ldr	r2, [r1, fp, lsl #2]
   11a30:	strb	r2, [r3], #1
   11a34:	ldrb	fp, [r4, #1]!
   11a38:	cmp	fp, #0
   11a3c:	bne	11a2c <ftello64@plt+0x35c>
   11a40:	add	r6, r3, #1
   11a44:	mov	r2, #0
   11a48:	strb	r2, [r3]
   11a4c:	ldr	r4, [sl, #12]!
   11a50:	cmp	r4, #0
   11a54:	bne	119dc <ftello64@plt+0x30c>
   11a58:	lsl	r4, r7, #1
   11a5c:	ldr	r3, [pc, #364]	; 11bd0 <ftello64@plt+0x500>
   11a60:	mov	r2, #4
   11a64:	mov	r1, r7
   11a68:	mov	r0, r9
   11a6c:	bl	11658 <qsort@plt>
   11a70:	cmp	r8, #0
   11a74:	add	r4, r5, r4
   11a78:	beq	11b98 <ftello64@plt+0x4c8>
   11a7c:	mov	r0, r8
   11a80:	bl	11544 <strlen@plt>
   11a84:	add	r4, r4, #36	; 0x24
   11a88:	add	r0, r4, r0
   11a8c:	bl	1c3f4 <_obstack_memory_used@@Base+0x11f0>
   11a90:	mov	r1, r8
   11a94:	mov	r4, r0
   11a98:	str	r0, [sp, #4]
   11a9c:	bl	11490 <strcpy@plt>
   11aa0:	mov	r0, r8
   11aa4:	bl	11544 <strlen@plt>
   11aa8:	add	r8, r4, r0
   11aac:	cmp	r7, #0
   11ab0:	beq	11b38 <ftello64@plt+0x468>
   11ab4:	sub	r5, r9, #4
   11ab8:	mov	r4, #1
   11abc:	mov	fp, #44	; 0x2c
   11ac0:	b	11afc <ftello64@plt+0x42c>
   11ac4:	mov	r1, r6
   11ac8:	mov	r0, r8
   11acc:	bl	11490 <strcpy@plt>
   11ad0:	mov	r0, r6
   11ad4:	bl	11544 <strlen@plt>
   11ad8:	cmp	r7, r4
   11adc:	add	r3, r8, r0
   11ae0:	bls	11bc0 <ftello64@plt+0x4f0>
   11ae4:	strb	fp, [r8, r0]
   11ae8:	add	r8, r3, #2
   11aec:	mov	r2, #32
   11af0:	strb	r2, [r3, #1]
   11af4:	add	r4, r4, #1
   11af8:	add	r5, r5, #4
   11afc:	cmp	r4, #1
   11b00:	ldreq	r6, [r5, #4]
   11b04:	beq	11ac4 <ftello64@plt+0x3f4>
   11b08:	ldr	sl, [r5]
   11b0c:	ldr	r6, [r5, #4]
   11b10:	mov	r0, sl
   11b14:	bl	11544 <strlen@plt>
   11b18:	mov	r1, r6
   11b1c:	mov	r2, r0
   11b20:	mov	r0, sl
   11b24:	bl	116a0 <strncmp@plt>
   11b28:	cmp	r0, #0
   11b2c:	bne	11ac4 <ftello64@plt+0x3f4>
   11b30:	cmp	r7, r4
   11b34:	bhi	11af4 <ftello64@plt+0x424>
   11b38:	ldr	r4, [pc, #148]	; 11bd4 <ftello64@plt+0x504>
   11b3c:	mov	lr, r8
   11b40:	add	r5, r4, #32
   11b44:	mov	ip, r4
   11b48:	add	lr, lr, #16
   11b4c:	ldm	ip!, {r0, r1, r2, r3}
   11b50:	add	r4, r4, #16
   11b54:	cmp	ip, r5
   11b58:	str	r0, [lr, #-16]
   11b5c:	str	r1, [lr, #-12]
   11b60:	str	r2, [lr, #-8]
   11b64:	str	r3, [lr, #-4]
   11b68:	bne	11b44 <ftello64@plt+0x474>
   11b6c:	ldr	r0, [r4]
   11b70:	mov	r3, #0
   11b74:	str	r0, [lr]
   11b78:	mov	r0, r9
   11b7c:	strb	r3, [r8, #35]	; 0x23
   11b80:	bl	1acdc <argp_parse@@Base+0xf7c>
   11b84:	ldr	r0, [sp, #4]
   11b88:	add	sp, sp, #12
   11b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b90:	mov	r3, r6
   11b94:	b	11a40 <ftello64@plt+0x370>
   11b98:	add	r0, r4, #36	; 0x24
   11b9c:	bl	1c3f4 <_obstack_memory_used@@Base+0x11f0>
   11ba0:	mov	r8, r0
   11ba4:	str	r0, [sp, #4]
   11ba8:	b	11aac <ftello64@plt+0x3dc>
   11bac:	mov	r5, r0
   11bb0:	mov	r0, #80	; 0x50
   11bb4:	b	119bc <ftello64@plt+0x2ec>
   11bb8:	mov	r7, r4
   11bbc:	b	11a5c <ftello64@plt+0x38c>
   11bc0:	mov	r8, r3
   11bc4:	b	11b38 <ftello64@plt+0x468>
   11bc8:	andeq	r7, r3, r8, asr #2
   11bcc:	andeq	r3, r2, r8, lsr #11
   11bd0:	andeq	r1, r1, r4, ror #18
   11bd4:	andeq	r3, r2, ip, lsr #11
   11bd8:	ldr	r3, [pc, #152]	; 11c78 <ftello64@plt+0x5a8>
   11bdc:	push	{r4, r5, r6, r7, r8, lr}
   11be0:	ldr	r5, [r3]
   11be4:	cmp	r5, #0
   11be8:	bne	11bfc <ftello64@plt+0x52c>
   11bec:	b	11c70 <ftello64@plt+0x5a0>
   11bf0:	ldr	r5, [r3, #12]!
   11bf4:	cmp	r5, #0
   11bf8:	beq	11c70 <ftello64@plt+0x5a0>
   11bfc:	ldr	r2, [r3, #4]
   11c00:	cmp	r2, r0
   11c04:	bne	11bf0 <ftello64@plt+0x520>
   11c08:	ldr	r2, [r3, #8]
   11c0c:	cmp	r2, #0
   11c10:	bne	11bf0 <ftello64@plt+0x520>
   11c14:	cmp	r1, #0
   11c18:	beq	11c70 <ftello64@plt+0x5a0>
   11c1c:	mov	r8, r1
   11c20:	mov	r4, r3
   11c24:	mov	r6, r5
   11c28:	b	11c54 <ftello64@plt+0x584>
   11c2c:	ldrb	r3, [r7, #-1]
   11c30:	cmp	r3, #58	; 0x3a
   11c34:	bne	11c6c <ftello64@plt+0x59c>
   11c38:	bl	11544 <strlen@plt>
   11c3c:	ldrb	r3, [r7, r0]
   11c40:	cmp	r3, #58	; 0x3a
   11c44:	bne	11c6c <ftello64@plt+0x59c>
   11c48:	ldr	r6, [r4, #12]!
   11c4c:	cmp	r6, #0
   11c50:	beq	11c70 <ftello64@plt+0x5a0>
   11c54:	mov	r1, r6
   11c58:	mov	r0, r8
   11c5c:	bl	11364 <strstr@plt>
   11c60:	subs	r7, r0, #0
   11c64:	mov	r0, r6
   11c68:	bne	11c2c <ftello64@plt+0x55c>
   11c6c:	mov	r5, r6
   11c70:	mov	r0, r5
   11c74:	pop	{r4, r5, r6, r7, r8, pc}
   11c78:	andeq	r7, r3, r8, asr #2
   11c7c:	cmp	r1, #1
   11c80:	push	{r4, r5, r6, r7, r8, lr}
   11c84:	mov	r5, r1
   11c88:	mov	r7, r2
   11c8c:	mov	r6, r0
   11c90:	bls	11cc8 <ftello64@plt+0x5f8>
   11c94:	ldrb	r3, [r0]
   11c98:	cmp	r3, #45	; 0x2d
   11c9c:	addeq	r6, r0, #1
   11ca0:	subeq	r5, r1, #1
   11ca4:	moveq	r8, #1
   11ca8:	beq	11ccc <ftello64@plt+0x5fc>
   11cac:	cmp	r5, #2
   11cb0:	beq	11cc8 <ftello64@plt+0x5f8>
   11cb4:	mov	r2, #2
   11cb8:	ldr	r1, [pc, #104]	; 11d28 <ftello64@plt+0x658>
   11cbc:	bl	11574 <strncasecmp@plt>
   11cc0:	cmp	r0, #0
   11cc4:	beq	11d18 <ftello64@plt+0x648>
   11cc8:	mov	r8, #0
   11ccc:	ldr	r4, [pc, #88]	; 11d2c <ftello64@plt+0x65c>
   11cd0:	ldr	r0, [r4]
   11cd4:	cmp	r0, #0
   11cd8:	bne	11cec <ftello64@plt+0x61c>
   11cdc:	pop	{r4, r5, r6, r7, r8, pc}
   11ce0:	ldr	r0, [r4, #12]!
   11ce4:	cmp	r0, #0
   11ce8:	beq	11d14 <ftello64@plt+0x644>
   11cec:	mov	r2, r5
   11cf0:	mov	r1, r6
   11cf4:	bl	11574 <strncasecmp@plt>
   11cf8:	cmp	r0, #0
   11cfc:	bne	11ce0 <ftello64@plt+0x610>
   11d00:	ldr	r3, [r4, #8]
   11d04:	eor	r3, r3, r8
   11d08:	str	r3, [r7]
   11d0c:	ldr	r0, [r4, #4]
   11d10:	pop	{r4, r5, r6, r7, r8, pc}
   11d14:	pop	{r4, r5, r6, r7, r8, pc}
   11d18:	add	r6, r6, #2
   11d1c:	sub	r5, r5, #2
   11d20:	mov	r8, #1
   11d24:	b	11ccc <ftello64@plt+0x5fc>
   11d28:	andeq	r3, r2, r8, lsr #11
   11d2c:	andeq	r7, r3, r8, asr #2
   11d30:	push	{r4, r5, r6, r7, r8, lr}
   11d34:	mov	r7, r1
   11d38:	mov	r6, r0
   11d3c:	bl	11544 <strlen@plt>
   11d40:	cmp	r0, #1
   11d44:	mov	r5, r0
   11d48:	bls	11d84 <ftello64@plt+0x6b4>
   11d4c:	ldrb	r3, [r6]
   11d50:	cmp	r3, #45	; 0x2d
   11d54:	addeq	r6, r6, #1
   11d58:	subeq	r5, r0, #1
   11d5c:	moveq	r8, #1
   11d60:	beq	11d88 <ftello64@plt+0x6b8>
   11d64:	cmp	r5, #2
   11d68:	beq	11d84 <ftello64@plt+0x6b4>
   11d6c:	mov	r2, #2
   11d70:	ldr	r1, [pc, #108]	; 11de4 <ftello64@plt+0x714>
   11d74:	mov	r0, r6
   11d78:	bl	11574 <strncasecmp@plt>
   11d7c:	cmp	r0, #0
   11d80:	beq	11dd4 <ftello64@plt+0x704>
   11d84:	mov	r8, #0
   11d88:	ldr	r4, [pc, #88]	; 11de8 <ftello64@plt+0x718>
   11d8c:	ldr	r0, [r4]
   11d90:	cmp	r0, #0
   11d94:	bne	11da8 <ftello64@plt+0x6d8>
   11d98:	pop	{r4, r5, r6, r7, r8, pc}
   11d9c:	ldr	r0, [r4, #12]!
   11da0:	cmp	r0, #0
   11da4:	beq	11dd0 <ftello64@plt+0x700>
   11da8:	mov	r2, r5
   11dac:	mov	r1, r6
   11db0:	bl	11574 <strncasecmp@plt>
   11db4:	cmp	r0, #0
   11db8:	bne	11d9c <ftello64@plt+0x6cc>
   11dbc:	ldr	r3, [r4, #8]
   11dc0:	eor	r3, r3, r8
   11dc4:	str	r3, [r7]
   11dc8:	ldr	r0, [r4, #4]
   11dcc:	pop	{r4, r5, r6, r7, r8, pc}
   11dd0:	pop	{r4, r5, r6, r7, r8, pc}
   11dd4:	add	r6, r6, #2
   11dd8:	sub	r5, r5, #2
   11ddc:	mov	r8, #1
   11de0:	b	11d88 <ftello64@plt+0x6b8>
   11de4:	andeq	r3, r2, r8, lsr #11
   11de8:	andeq	r7, r3, r8, asr #2
   11dec:	subs	r2, r2, #1
   11df0:	beq	11e44 <ftello64@plt+0x774>
   11df4:	ldr	ip, [pc, #80]	; 11e4c <ftello64@plt+0x77c>
   11df8:	ldr	r3, [ip, #252]	; 0xfc
   11dfc:	cmp	r3, #0
   11e00:	beq	11e44 <ftello64@plt+0x774>
   11e04:	add	ip, ip, #252	; 0xfc
   11e08:	b	11e18 <ftello64@plt+0x748>
   11e0c:	ldr	r3, [ip, #8]!
   11e10:	cmp	r3, #0
   11e14:	beq	11e44 <ftello64@plt+0x774>
   11e18:	tst	r0, r3
   11e1c:	beq	11e0c <ftello64@plt+0x73c>
   11e20:	ldr	r3, [ip, #4]
   11e24:	subs	r2, r2, #1
   11e28:	strb	r3, [r1]
   11e2c:	add	r3, r1, #1
   11e30:	mov	r1, r3
   11e34:	bne	11e0c <ftello64@plt+0x73c>
   11e38:	mov	r2, #0
   11e3c:	strb	r2, [r3]
   11e40:	bx	lr
   11e44:	mov	r3, r1
   11e48:	b	11e38 <ftello64@plt+0x768>
   11e4c:	andeq	r7, r3, r8, asr #2
   11e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e54:	sub	sp, sp, #20
   11e58:	subs	r7, r0, #0
   11e5c:	str	r1, [sp, #8]
   11e60:	str	r2, [sp, #4]
   11e64:	beq	11fd4 <ftello64@plt+0x904>
   11e68:	mov	r3, #1
   11e6c:	str	r3, [sp]
   11e70:	mov	r6, r3
   11e74:	mov	r8, #0
   11e78:	b	11e9c <ftello64@plt+0x7cc>
   11e7c:	lsls	r6, r6, #1
   11e80:	movne	r3, #1
   11e84:	moveq	r3, #0
   11e88:	cmp	r7, #0
   11e8c:	moveq	r3, #0
   11e90:	andne	r3, r3, #1
   11e94:	cmp	r3, #0
   11e98:	beq	11f68 <ftello64@plt+0x898>
   11e9c:	tst	r6, r7
   11ea0:	beq	11e7c <ftello64@plt+0x7ac>
   11ea4:	ldr	r3, [pc, #304]	; 11fdc <ftello64@plt+0x90c>
   11ea8:	ldr	r5, [r3]
   11eac:	cmp	r5, #0
   11eb0:	bne	11ec4 <ftello64@plt+0x7f4>
   11eb4:	b	11e7c <ftello64@plt+0x7ac>
   11eb8:	ldr	r5, [r3, #12]!
   11ebc:	cmp	r5, #0
   11ec0:	beq	11e7c <ftello64@plt+0x7ac>
   11ec4:	ldr	r2, [r3, #4]
   11ec8:	cmp	r2, r6
   11ecc:	bne	11eb8 <ftello64@plt+0x7e8>
   11ed0:	ldr	fp, [r3, #8]
   11ed4:	cmp	fp, #0
   11ed8:	bne	11eb8 <ftello64@plt+0x7e8>
   11edc:	ldr	r2, [sp, #8]
   11ee0:	cmp	r2, #0
   11ee4:	moveq	sl, r5
   11ee8:	beq	11f40 <ftello64@plt+0x870>
   11eec:	mov	r4, r3
   11ef0:	mov	sl, r5
   11ef4:	str	r5, [sp, #12]
   11ef8:	mov	r9, r2
   11efc:	b	11f28 <ftello64@plt+0x858>
   11f00:	ldrb	r2, [r5, #-1]
   11f04:	cmp	r2, #58	; 0x3a
   11f08:	bne	11f40 <ftello64@plt+0x870>
   11f0c:	bl	11544 <strlen@plt>
   11f10:	ldrb	r3, [r5, r0]
   11f14:	cmp	r3, #58	; 0x3a
   11f18:	bne	11f40 <ftello64@plt+0x870>
   11f1c:	ldr	sl, [r4, #12]!
   11f20:	cmp	sl, #0
   11f24:	beq	11fc8 <ftello64@plt+0x8f8>
   11f28:	mov	r1, sl
   11f2c:	mov	r0, r9
   11f30:	bl	11364 <strstr@plt>
   11f34:	subs	r5, r0, #0
   11f38:	mov	r0, sl
   11f3c:	bne	11f00 <ftello64@plt+0x830>
   11f40:	ldr	r3, [sp]
   11f44:	cmp	r3, #0
   11f48:	beq	11f98 <ftello64@plt+0x8c8>
   11f4c:	mov	r1, sl
   11f50:	ldr	r0, [pc, #136]	; 11fe0 <ftello64@plt+0x910>
   11f54:	bl	113b8 <printf@plt>
   11f58:	bic	r7, r7, r6
   11f5c:	str	fp, [sp]
   11f60:	add	r8, r8, r0
   11f64:	b	11e7c <ftello64@plt+0x7ac>
   11f68:	cmp	r7, #0
   11f6c:	beq	11f8c <ftello64@plt+0x8bc>
   11f70:	ldr	r3, [sp]
   11f74:	cmp	r3, #0
   11f78:	beq	11fb0 <ftello64@plt+0x8e0>
   11f7c:	mov	r1, r7
   11f80:	ldr	r0, [pc, #92]	; 11fe4 <ftello64@plt+0x914>
   11f84:	bl	113b8 <printf@plt>
   11f88:	add	r8, r8, r0
   11f8c:	mov	r0, r8
   11f90:	add	sp, sp, #20
   11f94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f98:	ldr	r3, [pc, #72]	; 11fe8 <ftello64@plt+0x918>
   11f9c:	ldr	r0, [sp, #4]
   11fa0:	add	r8, r8, #1
   11fa4:	ldr	r1, [r3]
   11fa8:	bl	11628 <putc@plt>
   11fac:	b	11f4c <ftello64@plt+0x87c>
   11fb0:	ldr	r3, [pc, #48]	; 11fe8 <ftello64@plt+0x918>
   11fb4:	ldr	r0, [sp, #4]
   11fb8:	add	r8, r8, #1
   11fbc:	ldr	r1, [r3]
   11fc0:	bl	11628 <putc@plt>
   11fc4:	b	11f7c <ftello64@plt+0x8ac>
   11fc8:	ldr	r5, [sp, #12]
   11fcc:	mov	sl, r5
   11fd0:	b	11f40 <ftello64@plt+0x870>
   11fd4:	mov	r8, r7
   11fd8:	b	11f8c <ftello64@plt+0x8bc>
   11fdc:	andeq	r7, r3, r8, asr #2
   11fe0:	andeq	r3, r2, ip, asr fp
   11fe4:	ldrdeq	r3, [r2], -r0
   11fe8:	andeq	r7, r3, ip, asr #22
   11fec:	push	{r4, r5, r6, r7, r8, lr}
   11ff0:	sub	sp, sp, #72	; 0x48
   11ff4:	mov	r6, r2
   11ff8:	mov	r8, r0
   11ffc:	mov	r2, #32
   12000:	mov	r4, r1
   12004:	add	r0, sp, #40	; 0x28
   12008:	mov	r1, #0
   1200c:	bl	11598 <memset@plt>
   12010:	mov	ip, #2
   12014:	add	r2, sp, #40	; 0x28
   12018:	mov	r0, r6
   1201c:	add	r3, sp, #20
   12020:	mov	r1, #0
   12024:	str	ip, [sp, #44]	; 0x2c
   12028:	bl	1167c <getaddrinfo@plt>
   1202c:	cmp	r0, #0
   12030:	bne	12164 <ftello64@plt+0xa94>
   12034:	ldr	r3, [sp, #20]
   12038:	cmp	r3, #0
   1203c:	bne	12050 <ftello64@plt+0x980>
   12040:	b	12100 <ftello64@plt+0xa30>
   12044:	ldr	r3, [r3, #28]
   12048:	cmp	r3, #0
   1204c:	beq	12100 <ftello64@plt+0xa30>
   12050:	ldr	r2, [r3, #4]
   12054:	cmp	r2, #2
   12058:	bne	12044 <ftello64@plt+0x974>
   1205c:	ldr	r1, [r3, #16]
   12060:	ldr	r0, [r3, #20]
   12064:	mov	r5, #0
   12068:	mov	r3, #1
   1206c:	add	r2, sp, #24
   12070:	str	r3, [sp, #8]
   12074:	str	r5, [sp, #4]
   12078:	mov	r3, #16
   1207c:	str	r5, [sp]
   12080:	bl	115ec <getnameinfo@plt>
   12084:	mov	r7, r0
   12088:	ldr	r0, [sp, #20]
   1208c:	bl	11670 <freeaddrinfo@plt>
   12090:	cmp	r7, r5
   12094:	bne	12128 <ftello64@plt+0xa58>
   12098:	mov	r3, #2
   1209c:	add	r1, r4, #20
   120a0:	strh	r3, [r4, #16]
   120a4:	add	r0, sp, #24
   120a8:	bl	11394 <inet_aton@plt>
   120ac:	subs	r1, r0, #0
   120b0:	beq	12150 <ftello64@plt+0xa80>
   120b4:	mov	r0, r8
   120b8:	mov	r2, r4
   120bc:	ldr	r1, [pc, #228]	; 121a8 <ftello64@plt+0xad8>
   120c0:	bl	1ade4 <argp_parse@@Base+0x1084>
   120c4:	cmp	r0, #0
   120c8:	blt	12188 <ftello64@plt+0xab8>
   120cc:	ldr	r3, [pc, #216]	; 121ac <ftello64@plt+0xadc>
   120d0:	ldr	r0, [r3]
   120d4:	cmp	r0, #0
   120d8:	beq	120f8 <ftello64@plt+0xa28>
   120dc:	ldr	r0, [r4, #20]
   120e0:	bl	11424 <inet_ntoa@plt>
   120e4:	mov	r1, r4
   120e8:	mov	r2, r0
   120ec:	ldr	r0, [pc, #188]	; 121b0 <ftello64@plt+0xae0>
   120f0:	bl	113b8 <printf@plt>
   120f4:	mov	r0, r7
   120f8:	add	sp, sp, #72	; 0x48
   120fc:	pop	{r4, r5, r6, r7, r8, pc}
   12100:	mov	r1, #0
   12104:	mov	r0, r1
   12108:	mov	r3, r6
   1210c:	ldr	r2, [pc, #160]	; 121b4 <ftello64@plt+0xae4>
   12110:	bl	114a8 <error@plt>
   12114:	ldr	r0, [sp, #20]
   12118:	bl	11670 <freeaddrinfo@plt>
   1211c:	mvn	r0, #0
   12120:	add	sp, sp, #72	; 0x48
   12124:	pop	{r4, r5, r6, r7, r8, pc}
   12128:	mov	r0, r7
   1212c:	bl	113e8 <gai_strerror@plt>
   12130:	mov	r3, r6
   12134:	ldr	r2, [pc, #124]	; 121b8 <ftello64@plt+0xae8>
   12138:	mov	r1, r5
   1213c:	str	r0, [sp]
   12140:	mov	r0, r5
   12144:	bl	114a8 <error@plt>
   12148:	mvn	r0, #0
   1214c:	b	120f8 <ftello64@plt+0xa28>
   12150:	add	r3, sp, #24
   12154:	ldr	r2, [pc, #96]	; 121bc <ftello64@plt+0xaec>
   12158:	bl	114a8 <error@plt>
   1215c:	mvn	r0, #0
   12160:	b	120f8 <ftello64@plt+0xa28>
   12164:	bl	113e8 <gai_strerror@plt>
   12168:	mov	r1, #0
   1216c:	mov	r3, r6
   12170:	ldr	r2, [pc, #64]	; 121b8 <ftello64@plt+0xae8>
   12174:	str	r0, [sp]
   12178:	mov	r0, r1
   1217c:	bl	114a8 <error@plt>
   12180:	mvn	r0, #0
   12184:	b	120f8 <ftello64@plt+0xa28>
   12188:	bl	11568 <__errno_location@plt>
   1218c:	ldr	r3, [pc, #44]	; 121c0 <ftello64@plt+0xaf0>
   12190:	ldr	r2, [pc, #44]	; 121c4 <ftello64@plt+0xaf4>
   12194:	ldr	r1, [r0]
   12198:	mov	r0, r7
   1219c:	bl	114a8 <error@plt>
   121a0:	mvn	r0, #0
   121a4:	b	120f8 <ftello64@plt+0xa28>
   121a8:	andeq	r8, r0, r6, lsl r9
   121ac:	andeq	r7, r3, r0, lsl #24
   121b0:	andeq	r3, r2, r8, asr #13
   121b4:	strdeq	r3, [r2], -r0
   121b8:	andeq	r3, r2, ip, ror r6
   121bc:	muleq	r2, r4, r6
   121c0:			; <UNDEFINED> instruction: 0x000236b0
   121c4:			; <UNDEFINED> instruction: 0x000236bc
   121c8:	mov	r3, #2
   121cc:	push	{r4, r5, r6, lr}
   121d0:	mov	r4, r1
   121d4:	strh	r3, [r1, #16]
   121d8:	mov	r6, r0
   121dc:	add	r1, r1, #20
   121e0:	mov	r0, r2
   121e4:	mov	r5, r2
   121e8:	bl	11394 <inet_aton@plt>
   121ec:	subs	r1, r0, #0
   121f0:	beq	1223c <ftello64@plt+0xb6c>
   121f4:	mov	r0, r6
   121f8:	mov	r2, r4
   121fc:	ldr	r1, [pc, #108]	; 12270 <ftello64@plt+0xba0>
   12200:	bl	1ade4 <argp_parse@@Base+0x1084>
   12204:	cmp	r0, #0
   12208:	blt	12250 <ftello64@plt+0xb80>
   1220c:	ldr	r3, [pc, #96]	; 12274 <ftello64@plt+0xba4>
   12210:	ldr	r0, [r3]
   12214:	cmp	r0, #0
   12218:	popeq	{r4, r5, r6, pc}
   1221c:	ldr	r0, [r4, #20]
   12220:	bl	11424 <inet_ntoa@plt>
   12224:	mov	r1, r4
   12228:	mov	r2, r0
   1222c:	ldr	r0, [pc, #68]	; 12278 <ftello64@plt+0xba8>
   12230:	bl	113b8 <printf@plt>
   12234:	mov	r0, #0
   12238:	pop	{r4, r5, r6, pc}
   1223c:	mov	r3, r5
   12240:	ldr	r2, [pc, #52]	; 1227c <ftello64@plt+0xbac>
   12244:	bl	114a8 <error@plt>
   12248:	mvn	r0, #0
   1224c:	pop	{r4, r5, r6, pc}
   12250:	bl	11568 <__errno_location@plt>
   12254:	ldr	r3, [pc, #36]	; 12280 <ftello64@plt+0xbb0>
   12258:	ldr	r2, [pc, #36]	; 12284 <ftello64@plt+0xbb4>
   1225c:	ldr	r1, [r0]
   12260:	mov	r0, #0
   12264:	bl	114a8 <error@plt>
   12268:	mvn	r0, #0
   1226c:	pop	{r4, r5, r6, pc}
   12270:	andeq	r8, r0, ip, lsl r9
   12274:	andeq	r7, r3, r0, lsl #24
   12278:	andeq	r3, r2, r8, lsr #14
   1227c:	muleq	r2, r4, r6
   12280:	andeq	r3, r2, r8, lsl r7
   12284:			; <UNDEFINED> instruction: 0x000236bc
   12288:	push	{r4, r5, r6, r7, r8, lr}
   1228c:	sub	sp, sp, #72	; 0x48
   12290:	mov	r6, r2
   12294:	mov	r8, r0
   12298:	mov	r2, #32
   1229c:	mov	r4, r1
   122a0:	add	r0, sp, #40	; 0x28
   122a4:	mov	r1, #0
   122a8:	bl	11598 <memset@plt>
   122ac:	mov	ip, #2
   122b0:	add	r2, sp, #40	; 0x28
   122b4:	mov	r0, r6
   122b8:	add	r3, sp, #20
   122bc:	mov	r1, #0
   122c0:	str	ip, [sp, #44]	; 0x2c
   122c4:	bl	1167c <getaddrinfo@plt>
   122c8:	cmp	r0, #0
   122cc:	bne	12400 <ftello64@plt+0xd30>
   122d0:	ldr	r3, [sp, #20]
   122d4:	cmp	r3, #0
   122d8:	bne	122ec <ftello64@plt+0xc1c>
   122dc:	b	1239c <ftello64@plt+0xccc>
   122e0:	ldr	r3, [r3, #28]
   122e4:	cmp	r3, #0
   122e8:	beq	1239c <ftello64@plt+0xccc>
   122ec:	ldr	r2, [r3, #4]
   122f0:	cmp	r2, #2
   122f4:	bne	122e0 <ftello64@plt+0xc10>
   122f8:	ldr	r1, [r3, #16]
   122fc:	ldr	r0, [r3, #20]
   12300:	mov	r5, #0
   12304:	mov	r3, #1
   12308:	add	r2, sp, #24
   1230c:	str	r3, [sp, #8]
   12310:	str	r5, [sp, #4]
   12314:	mov	r3, #16
   12318:	str	r5, [sp]
   1231c:	bl	115ec <getnameinfo@plt>
   12320:	mov	r7, r0
   12324:	ldr	r0, [sp, #20]
   12328:	bl	11670 <freeaddrinfo@plt>
   1232c:	cmp	r7, r5
   12330:	bne	123c4 <ftello64@plt+0xcf4>
   12334:	mov	r3, #2
   12338:	add	r1, r4, #20
   1233c:	strh	r3, [r4, #16]
   12340:	add	r0, sp, #24
   12344:	bl	11394 <inet_aton@plt>
   12348:	subs	r1, r0, #0
   1234c:	beq	123ec <ftello64@plt+0xd1c>
   12350:	mov	r0, r8
   12354:	mov	r2, r4
   12358:	ldr	r1, [pc, #228]	; 12444 <ftello64@plt+0xd74>
   1235c:	bl	1ade4 <argp_parse@@Base+0x1084>
   12360:	cmp	r0, #0
   12364:	blt	12424 <ftello64@plt+0xd54>
   12368:	ldr	r3, [pc, #216]	; 12448 <ftello64@plt+0xd78>
   1236c:	ldr	r0, [r3]
   12370:	cmp	r0, #0
   12374:	beq	12394 <ftello64@plt+0xcc4>
   12378:	ldr	r0, [r4, #20]
   1237c:	bl	11424 <inet_ntoa@plt>
   12380:	mov	r1, r4
   12384:	mov	r2, r0
   12388:	ldr	r0, [pc, #188]	; 1244c <ftello64@plt+0xd7c>
   1238c:	bl	113b8 <printf@plt>
   12390:	mov	r0, r7
   12394:	add	sp, sp, #72	; 0x48
   12398:	pop	{r4, r5, r6, r7, r8, pc}
   1239c:	mov	r1, #0
   123a0:	mov	r0, r1
   123a4:	mov	r3, r6
   123a8:	ldr	r2, [pc, #160]	; 12450 <ftello64@plt+0xd80>
   123ac:	bl	114a8 <error@plt>
   123b0:	ldr	r0, [sp, #20]
   123b4:	bl	11670 <freeaddrinfo@plt>
   123b8:	mvn	r0, #0
   123bc:	add	sp, sp, #72	; 0x48
   123c0:	pop	{r4, r5, r6, r7, r8, pc}
   123c4:	mov	r0, r7
   123c8:	bl	113e8 <gai_strerror@plt>
   123cc:	mov	r3, r6
   123d0:	ldr	r2, [pc, #124]	; 12454 <ftello64@plt+0xd84>
   123d4:	mov	r1, r5
   123d8:	str	r0, [sp]
   123dc:	mov	r0, r5
   123e0:	bl	114a8 <error@plt>
   123e4:	mvn	r0, #0
   123e8:	b	12394 <ftello64@plt+0xcc4>
   123ec:	add	r3, sp, #24
   123f0:	ldr	r2, [pc, #96]	; 12458 <ftello64@plt+0xd88>
   123f4:	bl	114a8 <error@plt>
   123f8:	mvn	r0, #0
   123fc:	b	12394 <ftello64@plt+0xcc4>
   12400:	bl	113e8 <gai_strerror@plt>
   12404:	mov	r1, #0
   12408:	mov	r3, r6
   1240c:	ldr	r2, [pc, #64]	; 12454 <ftello64@plt+0xd84>
   12410:	str	r0, [sp]
   12414:	mov	r0, r1
   12418:	bl	114a8 <error@plt>
   1241c:	mvn	r0, #0
   12420:	b	12394 <ftello64@plt+0xcc4>
   12424:	bl	11568 <__errno_location@plt>
   12428:	ldr	r3, [pc, #44]	; 1245c <ftello64@plt+0xd8c>
   1242c:	ldr	r2, [pc, #44]	; 12460 <ftello64@plt+0xd90>
   12430:	ldr	r1, [r0]
   12434:	mov	r0, r7
   12438:	bl	114a8 <error@plt>
   1243c:	mvn	r0, #0
   12440:	b	12394 <ftello64@plt+0xcc4>
   12444:	andeq	r8, r0, r8, lsl r9
   12448:	andeq	r7, r3, r0, lsl #24
   1244c:	andeq	r3, r2, r0, ror #14
   12450:	strdeq	r3, [r2], -r0
   12454:	andeq	r3, r2, ip, ror r6
   12458:	muleq	r2, r4, r6
   1245c:	andeq	r3, r2, r0, asr r7
   12460:			; <UNDEFINED> instruction: 0x000236bc
   12464:	mov	r3, #2
   12468:	push	{r4, r5, r6, lr}
   1246c:	mov	r4, r1
   12470:	strh	r3, [r1, #16]
   12474:	mov	r6, r0
   12478:	add	r1, r1, #20
   1247c:	mov	r0, r2
   12480:	mov	r5, r2
   12484:	bl	11394 <inet_aton@plt>
   12488:	subs	r1, r0, #0
   1248c:	beq	124d8 <ftello64@plt+0xe08>
   12490:	mov	r0, r6
   12494:	mov	r2, r4
   12498:	ldr	r1, [pc, #108]	; 1250c <ftello64@plt+0xe3c>
   1249c:	bl	1ade4 <argp_parse@@Base+0x1084>
   124a0:	cmp	r0, #0
   124a4:	blt	124ec <ftello64@plt+0xe1c>
   124a8:	ldr	r3, [pc, #96]	; 12510 <ftello64@plt+0xe40>
   124ac:	ldr	r0, [r3]
   124b0:	cmp	r0, #0
   124b4:	popeq	{r4, r5, r6, pc}
   124b8:	ldr	r0, [r4, #20]
   124bc:	bl	11424 <inet_ntoa@plt>
   124c0:	mov	r1, r4
   124c4:	mov	r2, r0
   124c8:	ldr	r0, [pc, #68]	; 12514 <ftello64@plt+0xe44>
   124cc:	bl	113b8 <printf@plt>
   124d0:	mov	r0, #0
   124d4:	pop	{r4, r5, r6, pc}
   124d8:	mov	r3, r5
   124dc:	ldr	r2, [pc, #52]	; 12518 <ftello64@plt+0xe48>
   124e0:	bl	114a8 <error@plt>
   124e4:	mvn	r0, #0
   124e8:	pop	{r4, r5, r6, pc}
   124ec:	bl	11568 <__errno_location@plt>
   124f0:	ldr	r3, [pc, #36]	; 1251c <ftello64@plt+0xe4c>
   124f4:	ldr	r2, [pc, #36]	; 12520 <ftello64@plt+0xe50>
   124f8:	ldr	r1, [r0]
   124fc:	mov	r0, #0
   12500:	bl	114a8 <error@plt>
   12504:	mvn	r0, #0
   12508:	pop	{r4, r5, r6, pc}
   1250c:	andeq	r8, r0, sl, lsl r9
   12510:	andeq	r7, r3, r0, lsl #24
   12514:	muleq	r2, ip, r7
   12518:	muleq	r2, r4, r6
   1251c:	andeq	r3, r2, ip, lsl #15
   12520:			; <UNDEFINED> instruction: 0x000236bc
   12524:	push	{r4, r5, r6, r7, lr}
   12528:	mov	r6, r0
   1252c:	sub	sp, sp, #12
   12530:	mov	r0, r2
   12534:	mov	r7, r2
   12538:	mov	r4, r1
   1253c:	bl	114fc <ether_aton@plt>
   12540:	subs	r5, r0, #0
   12544:	beq	125b4 <ftello64@plt+0xee4>
   12548:	mov	r2, r4
   1254c:	ldr	r1, [pc, #180]	; 12608 <ftello64@plt+0xf38>
   12550:	mov	r0, r6
   12554:	bl	1ade4 <argp_parse@@Base+0x1084>
   12558:	ldr	r3, [r5]
   1255c:	mov	r0, r6
   12560:	str	r3, [r4, #18]
   12564:	ldrh	r3, [r5, #4]
   12568:	mov	r2, r4
   1256c:	ldr	r1, [pc, #152]	; 1260c <ftello64@plt+0xf3c>
   12570:	strh	r3, [r4, #22]
   12574:	bl	1ade4 <argp_parse@@Base+0x1084>
   12578:	cmp	r0, #0
   1257c:	blt	125e8 <ftello64@plt+0xf18>
   12580:	ldr	r3, [pc, #136]	; 12610 <ftello64@plt+0xf40>
   12584:	ldr	r0, [r3]
   12588:	cmp	r0, #0
   1258c:	beq	125ac <ftello64@plt+0xedc>
   12590:	mov	r0, r5
   12594:	bl	115d4 <ether_ntoa@plt>
   12598:	mov	r1, r4
   1259c:	mov	r2, r0
   125a0:	ldr	r0, [pc, #108]	; 12614 <ftello64@plt+0xf44>
   125a4:	bl	113b8 <printf@plt>
   125a8:	mov	r0, #0
   125ac:	add	sp, sp, #12
   125b0:	pop	{r4, r5, r6, r7, pc}
   125b4:	mov	r1, sp
   125b8:	mov	r0, r7
   125bc:	bl	11370 <ether_hostton@plt>
   125c0:	cmp	r0, #0
   125c4:	moveq	r5, sp
   125c8:	beq	12548 <ftello64@plt+0xe78>
   125cc:	mov	r0, r5
   125d0:	mov	r3, r7
   125d4:	ldr	r2, [pc, #60]	; 12618 <ftello64@plt+0xf48>
   125d8:	mov	r1, r5
   125dc:	bl	114a8 <error@plt>
   125e0:	mvn	r0, #0
   125e4:	b	125ac <ftello64@plt+0xedc>
   125e8:	bl	11568 <__errno_location@plt>
   125ec:	ldr	r3, [pc, #40]	; 1261c <ftello64@plt+0xf4c>
   125f0:	ldr	r2, [pc, #40]	; 12620 <ftello64@plt+0xf50>
   125f4:	ldr	r1, [r0]
   125f8:	mov	r0, #0
   125fc:	bl	114a8 <error@plt>
   12600:	mvn	r0, #0
   12604:	b	125ac <ftello64@plt+0xedc>
   12608:	andeq	r8, r0, r7, lsr #18
   1260c:	andeq	r8, r0, r4, lsr #18
   12610:	andeq	r7, r3, r0, lsl #24
   12614:	andeq	r3, r2, r4, lsl #16
   12618:	andeq	r3, r2, ip, asr #15
   1261c:	strdeq	r3, [r2], -r4
   12620:			; <UNDEFINED> instruction: 0x000236bc
   12624:	push	{r4, lr}
   12628:	mov	r4, r1
   1262c:	ldr	r1, [pc, #84]	; 12688 <ftello64@plt+0xfb8>
   12630:	str	r2, [r4, #16]
   12634:	mov	r2, r4
   12638:	bl	1ade4 <argp_parse@@Base+0x1084>
   1263c:	cmp	r0, #0
   12640:	blt	1266c <ftello64@plt+0xf9c>
   12644:	ldr	r3, [pc, #64]	; 1268c <ftello64@plt+0xfbc>
   12648:	ldr	r0, [r3]
   1264c:	cmp	r0, #0
   12650:	popeq	{r4, pc}
   12654:	ldr	r2, [r4, #16]
   12658:	mov	r1, r4
   1265c:	ldr	r0, [pc, #44]	; 12690 <ftello64@plt+0xfc0>
   12660:	bl	113b8 <printf@plt>
   12664:	mov	r0, #0
   12668:	pop	{r4, pc}
   1266c:	bl	11568 <__errno_location@plt>
   12670:	ldr	r2, [pc, #28]	; 12694 <ftello64@plt+0xfc4>
   12674:	ldr	r1, [r0]
   12678:	mov	r0, #0
   1267c:	bl	114a8 <error@plt>
   12680:	mvn	r0, #0
   12684:	pop	{r4, pc}
   12688:	andeq	r8, r0, r2, lsr #18
   1268c:	andeq	r7, r3, r0, lsl #24
   12690:	andeq	r3, r2, r8, asr #16
   12694:	andeq	r3, r2, r4, lsr r8
   12698:	push	{r4, lr}
   1269c:	mov	r4, r1
   126a0:	ldr	r1, [pc, #84]	; 126fc <ftello64@plt+0x102c>
   126a4:	str	r2, [r4, #16]
   126a8:	mov	r2, r4
   126ac:	bl	1ade4 <argp_parse@@Base+0x1084>
   126b0:	cmp	r0, #0
   126b4:	blt	126e0 <ftello64@plt+0x1010>
   126b8:	ldr	r3, [pc, #64]	; 12700 <ftello64@plt+0x1030>
   126bc:	ldr	r0, [r3]
   126c0:	cmp	r0, #0
   126c4:	popeq	{r4, pc}
   126c8:	ldr	r2, [r4, #16]
   126cc:	mov	r1, r4
   126d0:	ldr	r0, [pc, #44]	; 12704 <ftello64@plt+0x1034>
   126d4:	bl	113b8 <printf@plt>
   126d8:	mov	r0, #0
   126dc:	pop	{r4, pc}
   126e0:	bl	11568 <__errno_location@plt>
   126e4:	ldr	r2, [pc, #28]	; 12708 <ftello64@plt+0x1038>
   126e8:	ldr	r1, [r0]
   126ec:	mov	r0, #0
   126f0:	bl	114a8 <error@plt>
   126f4:	mvn	r0, #0
   126f8:	pop	{r4, pc}
   126fc:	andeq	r8, r0, lr, lsl r9
   12700:	andeq	r7, r3, r0, lsl #24
   12704:	andeq	r3, r2, r0, lsl #17
   12708:	andeq	r3, r2, r8, ror #16
   1270c:	push	{r4, r5, r6, r7, lr}
   12710:	mov	lr, r1
   12714:	mov	r7, r0
   12718:	mov	r4, r1
   1271c:	mov	r5, r2
   12720:	mov	r6, r3
   12724:	ldm	lr!, {r0, r1, r2, r3}
   12728:	sub	sp, sp, #36	; 0x24
   1272c:	mov	ip, sp
   12730:	stmia	ip!, {r0, r1, r2, r3}
   12734:	ldm	lr, {r0, r1, r2, r3}
   12738:	stm	ip, {r0, r1, r2, r3}
   1273c:	mov	r0, r7
   12740:	mov	r2, sp
   12744:	ldr	r1, [pc, #280]	; 12864 <ftello64@plt+0x1194>
   12748:	bl	1ade4 <argp_parse@@Base+0x1084>
   1274c:	cmp	r0, #0
   12750:	blt	1282c <ftello64@plt+0x115c>
   12754:	ldrh	r3, [sp, #16]
   12758:	mov	r0, r7
   1275c:	mov	r2, r4
   12760:	orr	r3, r3, r5
   12764:	bic	r3, r3, r6
   12768:	strh	r3, [r4, #16]
   1276c:	ldr	r1, [pc, #244]	; 12868 <ftello64@plt+0x1198>
   12770:	bl	1ade4 <argp_parse@@Base+0x1084>
   12774:	cmp	r0, #0
   12778:	blt	12848 <ftello64@plt+0x1178>
   1277c:	ldr	r3, [pc, #232]	; 1286c <ftello64@plt+0x119c>
   12780:	ldr	r0, [r3]
   12784:	cmp	r0, #0
   12788:	beq	127c0 <ftello64@plt+0x10f0>
   1278c:	cmp	r5, #0
   12790:	bne	127c8 <ftello64@plt+0x10f8>
   12794:	ldr	r1, [pc, #212]	; 12870 <ftello64@plt+0x11a0>
   12798:	ldr	r0, [pc, #212]	; 12874 <ftello64@plt+0x11a4>
   1279c:	bl	113b8 <printf@plt>
   127a0:	mov	r1, r4
   127a4:	ldr	r0, [pc, #204]	; 12878 <ftello64@plt+0x11a8>
   127a8:	bl	113b8 <printf@plt>
   127ac:	cmp	r6, #0
   127b0:	bne	12800 <ftello64@plt+0x1130>
   127b4:	ldr	r0, [pc, #192]	; 1287c <ftello64@plt+0x11ac>
   127b8:	bl	114c0 <puts@plt>
   127bc:	mov	r0, #0
   127c0:	add	sp, sp, #36	; 0x24
   127c4:	pop	{r4, r5, r6, r7, pc}
   127c8:	ldr	r1, [pc, #176]	; 12880 <ftello64@plt+0x11b0>
   127cc:	ldr	r0, [pc, #160]	; 12874 <ftello64@plt+0x11a4>
   127d0:	bl	113b8 <printf@plt>
   127d4:	ldr	r0, [pc, #168]	; 12884 <ftello64@plt+0x11b4>
   127d8:	bl	113b8 <printf@plt>
   127dc:	mov	r0, r5
   127e0:	mov	r2, #44	; 0x2c
   127e4:	mov	r1, #0
   127e8:	bl	11e50 <ftello64@plt+0x780>
   127ec:	ldr	r3, [pc, #148]	; 12888 <ftello64@plt+0x11b8>
   127f0:	mov	r0, #39	; 0x27
   127f4:	ldr	r1, [r3]
   127f8:	bl	11628 <putc@plt>
   127fc:	b	127a0 <ftello64@plt+0x10d0>
   12800:	ldr	r0, [pc, #132]	; 1288c <ftello64@plt+0x11bc>
   12804:	bl	113b8 <printf@plt>
   12808:	mov	r0, r6
   1280c:	mov	r2, #44	; 0x2c
   12810:	mov	r1, #0
   12814:	bl	11e50 <ftello64@plt+0x780>
   12818:	ldr	r3, [pc, #104]	; 12888 <ftello64@plt+0x11b8>
   1281c:	mov	r0, #39	; 0x27
   12820:	ldr	r1, [r3]
   12824:	bl	11628 <putc@plt>
   12828:	b	127b4 <ftello64@plt+0x10e4>
   1282c:	bl	11568 <__errno_location@plt>
   12830:	ldr	r2, [pc, #88]	; 12890 <ftello64@plt+0x11c0>
   12834:	ldr	r1, [r0]
   12838:	mov	r0, #0
   1283c:	bl	114a8 <error@plt>
   12840:	mvn	r0, #0
   12844:	b	127c0 <ftello64@plt+0x10f0>
   12848:	bl	11568 <__errno_location@plt>
   1284c:	ldr	r2, [pc, #64]	; 12894 <ftello64@plt+0x11c4>
   12850:	ldr	r1, [r0]
   12854:	mov	r0, #0
   12858:	bl	114a8 <error@plt>
   1285c:	mvn	r0, #0
   12860:	b	127c0 <ftello64@plt+0x10f0>
   12864:	andeq	r8, r0, r3, lsl r9
   12868:	andeq	r8, r0, r4, lsl r9
   1286c:	andeq	r7, r3, r0, lsl #24
   12870:	strdeq	r3, [r2], -ip
   12874:	andeq	r3, r2, r8, ror #17
   12878:	andeq	r3, r2, ip, asr #17
   1287c:	andeq	r3, r2, r4, lsl #29
   12880:	ldrdeq	r6, [r2], -r8
   12884:	strdeq	r3, [r2], -r8
   12888:	andeq	r7, r3, ip, asr #22
   1288c:	ldrdeq	r3, [r2], -r8
   12890:	andeq	r3, r2, r4, lsr #17
   12894:			; <UNDEFINED> instruction: 0x000238b8
   12898:	push	{r4, r5, r6, lr}
   1289c:	mov	r4, r1
   128a0:	sub	sp, sp, #32
   128a4:	mov	r2, #32
   128a8:	mov	r1, #0
   128ac:	mov	r5, r0
   128b0:	mov	r0, sp
   128b4:	bl	11598 <memset@plt>
   128b8:	mov	r2, #16
   128bc:	ldr	r1, [r4]
   128c0:	mov	r0, sp
   128c4:	bl	115a4 <strncpy@plt>
   128c8:	ldr	r3, [r4, #4]
   128cc:	mov	r2, #0
   128d0:	tst	r3, #8
   128d4:	strb	r2, [sp, #15]
   128d8:	bne	12970 <ftello64@plt+0x12a0>
   128dc:	tst	r3, #16
   128e0:	bne	129bc <ftello64@plt+0x12ec>
   128e4:	tst	r3, #32
   128e8:	bne	12a28 <ftello64@plt+0x1358>
   128ec:	tst	r3, #64	; 0x40
   128f0:	bne	12a4c <ftello64@plt+0x137c>
   128f4:	tst	r3, #1024	; 0x400
   128f8:	bne	12ab8 <ftello64@plt+0x13e8>
   128fc:	tst	r3, #128	; 0x80
   12900:	bne	12adc <ftello64@plt+0x140c>
   12904:	tst	r3, #256	; 0x100
   12908:	bne	12b28 <ftello64@plt+0x1458>
   1290c:	tst	r3, #1
   12910:	bne	12990 <ftello64@plt+0x12c0>
   12914:	ldr	r2, [r4, #44]	; 0x2c
   12918:	ldr	r3, [r4, #48]	; 0x30
   1291c:	cmp	r2, #0
   12920:	bne	12958 <ftello64@plt+0x1288>
   12924:	cmp	r3, #0
   12928:	bne	12958 <ftello64@plt+0x1288>
   1292c:	ldr	r0, [r4, #4]
   12930:	ands	r0, r0, #2
   12934:	beq	12950 <ftello64@plt+0x1280>
   12938:	mov	r0, r5
   1293c:	mov	r2, sp
   12940:	ldr	r3, [r4, #12]
   12944:	ldr	r1, [r4]
   12948:	bl	17598 <ftello64@plt+0x5ec8>
   1294c:	mov	r0, #0
   12950:	add	sp, sp, #32
   12954:	pop	{r4, r5, r6, pc}
   12958:	mov	r1, sp
   1295c:	mov	r0, r5
   12960:	bl	1270c <ftello64@plt+0x103c>
   12964:	cmp	r0, #0
   12968:	beq	1292c <ftello64@plt+0x125c>
   1296c:	b	12950 <ftello64@plt+0x1280>
   12970:	ldr	r2, [r4, #20]
   12974:	mov	r1, sp
   12978:	mov	r0, r5
   1297c:	bl	11fec <ftello64@plt+0x91c>
   12980:	cmp	r0, #0
   12984:	bne	12950 <ftello64@plt+0x1280>
   12988:	ldr	r3, [r4, #4]
   1298c:	b	128dc <ftello64@plt+0x120c>
   12990:	ldr	r2, [r4, #8]
   12994:	mov	r1, sp
   12998:	mov	r0, r5
   1299c:	bl	19170 <ftello64@plt+0x7aa0>
   129a0:	cmp	r0, #0
   129a4:	bne	12950 <ftello64@plt+0x1280>
   129a8:	ldr	r2, [r4, #44]	; 0x2c
   129ac:	ldr	r3, [r4, #48]	; 0x30
   129b0:	cmp	r2, #0
   129b4:	beq	12924 <ftello64@plt+0x1254>
   129b8:	b	12958 <ftello64@plt+0x1288>
   129bc:	ldr	r6, [r4, #24]
   129c0:	mov	r3, #2
   129c4:	add	r1, sp, #20
   129c8:	mov	r0, r6
   129cc:	strh	r3, [sp, #16]
   129d0:	bl	11394 <inet_aton@plt>
   129d4:	subs	r1, r0, #0
   129d8:	beq	12b78 <ftello64@plt+0x14a8>
   129dc:	mov	r2, sp
   129e0:	ldr	r1, [pc, #520]	; 12bf0 <ftello64@plt+0x1520>
   129e4:	mov	r0, r5
   129e8:	bl	1ade4 <argp_parse@@Base+0x1084>
   129ec:	cmp	r0, #0
   129f0:	blt	12be4 <ftello64@plt+0x1514>
   129f4:	ldr	r3, [pc, #504]	; 12bf4 <ftello64@plt+0x1524>
   129f8:	ldr	r3, [r3]
   129fc:	cmp	r3, #0
   12a00:	beq	12a1c <ftello64@plt+0x134c>
   12a04:	ldr	r0, [sp, #20]
   12a08:	bl	11424 <inet_ntoa@plt>
   12a0c:	mov	r1, sp
   12a10:	mov	r2, r0
   12a14:	ldr	r0, [pc, #476]	; 12bf8 <ftello64@plt+0x1528>
   12a18:	bl	113b8 <printf@plt>
   12a1c:	ldr	r3, [r4, #4]
   12a20:	tst	r3, #32
   12a24:	beq	128ec <ftello64@plt+0x121c>
   12a28:	ldr	r2, [r4, #28]
   12a2c:	mov	r1, sp
   12a30:	mov	r0, r5
   12a34:	bl	12288 <ftello64@plt+0xbb8>
   12a38:	cmp	r0, #0
   12a3c:	bne	12950 <ftello64@plt+0x1280>
   12a40:	ldr	r3, [r4, #4]
   12a44:	tst	r3, #64	; 0x40
   12a48:	beq	128f4 <ftello64@plt+0x1224>
   12a4c:	ldr	r6, [r4, #32]
   12a50:	mov	r3, #2
   12a54:	add	r1, sp, #20
   12a58:	mov	r0, r6
   12a5c:	strh	r3, [sp, #16]
   12a60:	bl	11394 <inet_aton@plt>
   12a64:	subs	r1, r0, #0
   12a68:	beq	12b78 <ftello64@plt+0x14a8>
   12a6c:	mov	r2, sp
   12a70:	ldr	r1, [pc, #388]	; 12bfc <ftello64@plt+0x152c>
   12a74:	mov	r0, r5
   12a78:	bl	1ade4 <argp_parse@@Base+0x1084>
   12a7c:	cmp	r0, #0
   12a80:	blt	12bc4 <ftello64@plt+0x14f4>
   12a84:	ldr	r3, [pc, #360]	; 12bf4 <ftello64@plt+0x1524>
   12a88:	ldr	r3, [r3]
   12a8c:	cmp	r3, #0
   12a90:	beq	12aac <ftello64@plt+0x13dc>
   12a94:	ldr	r0, [sp, #20]
   12a98:	bl	11424 <inet_ntoa@plt>
   12a9c:	mov	r1, sp
   12aa0:	mov	r2, r0
   12aa4:	ldr	r0, [pc, #340]	; 12c00 <ftello64@plt+0x1530>
   12aa8:	bl	113b8 <printf@plt>
   12aac:	ldr	r3, [r4, #4]
   12ab0:	tst	r3, #1024	; 0x400
   12ab4:	beq	128fc <ftello64@plt+0x122c>
   12ab8:	ldr	r2, [r4, #52]	; 0x34
   12abc:	mov	r1, sp
   12ac0:	mov	r0, r5
   12ac4:	bl	12524 <ftello64@plt+0xe54>
   12ac8:	cmp	r0, #0
   12acc:	bne	12950 <ftello64@plt+0x1280>
   12ad0:	ldr	r3, [r4, #4]
   12ad4:	tst	r3, #128	; 0x80
   12ad8:	beq	12904 <ftello64@plt+0x1234>
   12adc:	ldr	r3, [r4, #36]	; 0x24
   12ae0:	mov	r2, sp
   12ae4:	ldr	r1, [pc, #280]	; 12c04 <ftello64@plt+0x1534>
   12ae8:	mov	r0, r5
   12aec:	str	r3, [sp, #16]
   12af0:	bl	1ade4 <argp_parse@@Base+0x1084>
   12af4:	cmp	r0, #0
   12af8:	blt	12ba8 <ftello64@plt+0x14d8>
   12afc:	ldr	r3, [pc, #240]	; 12bf4 <ftello64@plt+0x1524>
   12b00:	ldr	r3, [r3]
   12b04:	cmp	r3, #0
   12b08:	beq	12b1c <ftello64@plt+0x144c>
   12b0c:	ldr	r2, [sp, #16]
   12b10:	mov	r1, sp
   12b14:	ldr	r0, [pc, #236]	; 12c08 <ftello64@plt+0x1538>
   12b18:	bl	113b8 <printf@plt>
   12b1c:	ldr	r3, [r4, #4]
   12b20:	tst	r3, #256	; 0x100
   12b24:	beq	1290c <ftello64@plt+0x123c>
   12b28:	ldr	r3, [r4, #40]	; 0x28
   12b2c:	mov	r2, sp
   12b30:	ldr	r1, [pc, #212]	; 12c0c <ftello64@plt+0x153c>
   12b34:	mov	r0, r5
   12b38:	str	r3, [sp, #16]
   12b3c:	bl	1ade4 <argp_parse@@Base+0x1084>
   12b40:	cmp	r0, #0
   12b44:	blt	12b8c <ftello64@plt+0x14bc>
   12b48:	ldr	r3, [pc, #164]	; 12bf4 <ftello64@plt+0x1524>
   12b4c:	ldr	r3, [r3]
   12b50:	cmp	r3, #0
   12b54:	beq	12b68 <ftello64@plt+0x1498>
   12b58:	ldr	r2, [sp, #16]
   12b5c:	mov	r1, sp
   12b60:	ldr	r0, [pc, #168]	; 12c10 <ftello64@plt+0x1540>
   12b64:	bl	113b8 <printf@plt>
   12b68:	ldr	r3, [r4, #4]
   12b6c:	tst	r3, #1
   12b70:	beq	12914 <ftello64@plt+0x1244>
   12b74:	b	12990 <ftello64@plt+0x12c0>
   12b78:	mov	r3, r6
   12b7c:	ldr	r2, [pc, #144]	; 12c14 <ftello64@plt+0x1544>
   12b80:	bl	114a8 <error@plt>
   12b84:	mvn	r0, #0
   12b88:	b	12950 <ftello64@plt+0x1280>
   12b8c:	bl	11568 <__errno_location@plt>
   12b90:	ldr	r2, [pc, #128]	; 12c18 <ftello64@plt+0x1548>
   12b94:	ldr	r1, [r0]
   12b98:	mov	r0, #0
   12b9c:	bl	114a8 <error@plt>
   12ba0:	mvn	r0, #0
   12ba4:	b	12950 <ftello64@plt+0x1280>
   12ba8:	bl	11568 <__errno_location@plt>
   12bac:	ldr	r2, [pc, #104]	; 12c1c <ftello64@plt+0x154c>
   12bb0:	ldr	r1, [r0]
   12bb4:	mov	r0, #0
   12bb8:	bl	114a8 <error@plt>
   12bbc:	mvn	r0, #0
   12bc0:	b	12950 <ftello64@plt+0x1280>
   12bc4:	bl	11568 <__errno_location@plt>
   12bc8:	ldr	r3, [pc, #80]	; 12c20 <ftello64@plt+0x1550>
   12bcc:	ldr	r1, [r0]
   12bd0:	ldr	r2, [pc, #76]	; 12c24 <ftello64@plt+0x1554>
   12bd4:	mov	r0, #0
   12bd8:	bl	114a8 <error@plt>
   12bdc:	mvn	r0, #0
   12be0:	b	12950 <ftello64@plt+0x1280>
   12be4:	bl	11568 <__errno_location@plt>
   12be8:	ldr	r3, [pc, #56]	; 12c28 <ftello64@plt+0x1558>
   12bec:	b	12bcc <ftello64@plt+0x14fc>
   12bf0:	andeq	r8, r0, ip, lsl r9
   12bf4:	andeq	r7, r3, r0, lsl #24
   12bf8:	andeq	r3, r2, r8, lsr #14
   12bfc:	andeq	r8, r0, sl, lsl r9
   12c00:	muleq	r2, ip, r7
   12c04:	andeq	r8, r0, r2, lsr #18
   12c08:	andeq	r3, r2, r8, asr #16
   12c0c:	andeq	r8, r0, lr, lsl r9
   12c10:	andeq	r3, r2, r0, lsl #17
   12c14:	muleq	r2, r4, r6
   12c18:	andeq	r3, r2, r8, ror #16
   12c1c:	andeq	r3, r2, r4, lsr r8
   12c20:	andeq	r3, r2, ip, lsl #15
   12c24:			; <UNDEFINED> instruction: 0x000236bc
   12c28:	andeq	r3, r2, r8, lsl r7
   12c2c:	ldr	r1, [r1]
   12c30:	ldr	r0, [r0]
   12c34:	b	113a0 <strcmp@plt>
   12c38:	ldr	r3, [pc, #20]	; 12c54 <ftello64@plt+0x1584>
   12c3c:	cmp	r0, r3
   12c40:	beq	12c4c <ftello64@plt+0x157c>
   12c44:	mov	r0, r1
   12c48:	bx	lr
   12c4c:	ldr	r0, [pc, #4]	; 12c58 <ftello64@plt+0x1588>
   12c50:	b	11970 <ftello64@plt+0x2a0>
   12c54:	andeq	r0, r0, #4
   12c58:	andeq	r3, r2, r8, asr r9
   12c5c:	ldr	r3, [pc, #76]	; 12cb0 <ftello64@plt+0x15e0>
   12c60:	push	{r4, r5, r6, lr}
   12c64:	mov	r5, r0
   12c68:	ldr	r0, [r3]
   12c6c:	cmp	r0, #0
   12c70:	bne	12c84 <ftello64@plt+0x15b4>
   12c74:	b	12ca4 <ftello64@plt+0x15d4>
   12c78:	ldr	r0, [r4, #12]
   12c7c:	cmp	r0, #0
   12c80:	beq	12ca4 <ftello64@plt+0x15d4>
   12c84:	mov	r1, r5
   12c88:	mov	r4, r3
   12c8c:	bl	113a0 <strcmp@plt>
   12c90:	add	r3, r4, #12
   12c94:	cmp	r0, #0
   12c98:	bne	12c78 <ftello64@plt+0x15a8>
   12c9c:	mov	r0, r4
   12ca0:	pop	{r4, r5, r6, pc}
   12ca4:	mov	r4, r0
   12ca8:	mov	r0, r4
   12cac:	pop	{r4, r5, r6, pc}
   12cb0:			; <UNDEFINED> instruction: 0x000372b4
   12cb4:	push	{r4, r5, r6, r7, r8, lr}
   12cb8:	mov	r5, r0
   12cbc:	ldr	r4, [pc, #160]	; 12d64 <ftello64@plt+0x1694>
   12cc0:	ldr	r6, [pc, #160]	; 12d68 <ftello64@plt+0x1698>
   12cc4:	ldr	r2, [pc, #160]	; 12d6c <ftello64@plt+0x169c>
   12cc8:	ldr	r3, [r4]
   12ccc:	ldr	ip, [r6]
   12cd0:	add	r3, r3, #1
   12cd4:	mov	r0, ip
   12cd8:	rsb	r1, r3, r3, lsl #3
   12cdc:	mov	r7, #1
   12ce0:	lsl	r1, r1, #3
   12ce4:	str	r3, [r4]
   12ce8:	str	r7, [r2]
   12cec:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   12cf0:	cmp	r0, #0
   12cf4:	str	r0, [r6]
   12cf8:	movne	r6, r0
   12cfc:	beq	12d48 <ftello64@plt+0x1678>
   12d00:	ldr	r4, [r4]
   12d04:	ldr	lr, [pc, #100]	; 12d70 <ftello64@plt+0x16a0>
   12d08:	rsb	r4, r4, r4, lsl #3
   12d0c:	ldm	lr!, {r0, r1, r2, r3}
   12d10:	lsl	r4, r4, #3
   12d14:	sub	r4, r4, #56	; 0x38
   12d18:	add	r7, r6, r4
   12d1c:	mov	ip, r7
   12d20:	stmia	ip!, {r0, r1, r2, r3}
   12d24:	ldm	lr!, {r0, r1, r2, r3}
   12d28:	stmia	ip!, {r0, r1, r2, r3}
   12d2c:	ldm	lr!, {r0, r1, r2, r3}
   12d30:	stmia	ip!, {r0, r1, r2, r3}
   12d34:	ldm	lr, {r0, r1}
   12d38:	stm	ip, {r0, r1}
   12d3c:	str	r5, [r6, r4]
   12d40:	mov	r0, r7
   12d44:	pop	{r4, r5, r6, r7, r8, pc}
   12d48:	bl	11568 <__errno_location@plt>
   12d4c:	ldr	r2, [pc, #32]	; 12d74 <ftello64@plt+0x16a4>
   12d50:	ldr	r1, [r0]
   12d54:	mov	r0, r7
   12d58:	bl	114a8 <error@plt>
   12d5c:	ldr	r6, [r6]
   12d60:	b	12d00 <ftello64@plt+0x1630>
   12d64:	strdeq	r7, [r3], -r0
   12d68:	andeq	r7, r3, ip, ror #23
   12d6c:	strdeq	r7, [r3], -ip
   12d70:	andeq	r3, r2, r0, lsl #18
   12d74:	andeq	r3, r2, ip, ror #18
   12d78:	push	{r4, r5, lr}
   12d7c:	subs	r4, r0, #0
   12d80:	sub	sp, sp, #12
   12d84:	mov	r5, r1
   12d88:	beq	12dcc <ftello64@plt+0x16fc>
   12d8c:	ldr	r3, [r4, #4]
   12d90:	tst	r3, #8
   12d94:	beq	12db8 <ftello64@plt+0x16e8>
   12d98:	ldr	r2, [r4]
   12d9c:	ldr	r3, [pc, #68]	; 12de8 <ftello64@plt+0x1718>
   12da0:	str	r2, [sp]
   12da4:	mov	r1, #0
   12da8:	ldr	r2, [pc, #60]	; 12dec <ftello64@plt+0x171c>
   12dac:	mov	r0, #1
   12db0:	bl	114a8 <error@plt>
   12db4:	ldr	r3, [r4, #4]
   12db8:	orr	r3, r3, #8
   12dbc:	str	r3, [r4, #4]
   12dc0:	str	r5, [r4, #20]
   12dc4:	add	sp, sp, #12
   12dc8:	pop	{r4, r5, pc}
   12dcc:	str	r1, [sp]
   12dd0:	ldr	r3, [pc, #16]	; 12de8 <ftello64@plt+0x1718>
   12dd4:	ldr	r2, [pc, #20]	; 12df0 <ftello64@plt+0x1720>
   12dd8:	mov	r1, r4
   12ddc:	mov	r0, #1
   12de0:	bl	114a8 <error@plt>
   12de4:	b	12d8c <ftello64@plt+0x16bc>
   12de8:	andeq	r3, r2, r8, lsr #13
   12dec:	andeq	r3, r2, r0, asr #19
   12df0:	muleq	r2, ip, r9
   12df4:	push	{r4, r5, lr}
   12df8:	subs	r4, r0, #0
   12dfc:	sub	sp, sp, #12
   12e00:	mov	r5, r1
   12e04:	beq	12e48 <ftello64@plt+0x1778>
   12e08:	ldr	r3, [r4, #4]
   12e0c:	tst	r3, #16
   12e10:	beq	12e34 <ftello64@plt+0x1764>
   12e14:	ldr	r2, [r4]
   12e18:	ldr	r3, [pc, #68]	; 12e64 <ftello64@plt+0x1794>
   12e1c:	str	r2, [sp]
   12e20:	mov	r1, #0
   12e24:	ldr	r2, [pc, #60]	; 12e68 <ftello64@plt+0x1798>
   12e28:	mov	r0, #1
   12e2c:	bl	114a8 <error@plt>
   12e30:	ldr	r3, [r4, #4]
   12e34:	orr	r3, r3, #16
   12e38:	str	r3, [r4, #4]
   12e3c:	str	r5, [r4, #24]
   12e40:	add	sp, sp, #12
   12e44:	pop	{r4, r5, pc}
   12e48:	str	r1, [sp]
   12e4c:	ldr	r3, [pc, #16]	; 12e64 <ftello64@plt+0x1794>
   12e50:	ldr	r2, [pc, #20]	; 12e6c <ftello64@plt+0x179c>
   12e54:	mov	r1, r4
   12e58:	mov	r0, #1
   12e5c:	bl	114a8 <error@plt>
   12e60:	b	12e08 <ftello64@plt+0x1738>
   12e64:	andeq	r3, r2, r8, ror #19
   12e68:	andeq	r3, r2, r0, asr #19
   12e6c:	muleq	r2, ip, r9
   12e70:	push	{r4, r5, lr}
   12e74:	subs	r4, r0, #0
   12e78:	sub	sp, sp, #12
   12e7c:	mov	r5, r1
   12e80:	beq	12ec4 <ftello64@plt+0x17f4>
   12e84:	ldr	r3, [r4, #4]
   12e88:	tst	r3, #32
   12e8c:	beq	12eb0 <ftello64@plt+0x17e0>
   12e90:	ldr	r2, [r4]
   12e94:	ldr	r3, [pc, #68]	; 12ee0 <ftello64@plt+0x1810>
   12e98:	str	r2, [sp]
   12e9c:	mov	r1, #0
   12ea0:	ldr	r2, [pc, #60]	; 12ee4 <ftello64@plt+0x1814>
   12ea4:	mov	r0, #1
   12ea8:	bl	114a8 <error@plt>
   12eac:	ldr	r3, [r4, #4]
   12eb0:	orr	r3, r3, #32
   12eb4:	str	r3, [r4, #4]
   12eb8:	str	r5, [r4, #28]
   12ebc:	add	sp, sp, #12
   12ec0:	pop	{r4, r5, pc}
   12ec4:	str	r1, [sp]
   12ec8:	ldr	r3, [pc, #16]	; 12ee0 <ftello64@plt+0x1810>
   12ecc:	ldr	r2, [pc, #20]	; 12ee8 <ftello64@plt+0x1818>
   12ed0:	mov	r1, r4
   12ed4:	mov	r0, #1
   12ed8:	bl	114a8 <error@plt>
   12edc:	b	12e84 <ftello64@plt+0x17b4>
   12ee0:	strdeq	r3, [r2], -r0
   12ee4:	andeq	r3, r2, r0, asr #19
   12ee8:	muleq	r2, ip, r9
   12eec:	push	{r4, r5, lr}
   12ef0:	subs	r4, r0, #0
   12ef4:	sub	sp, sp, #12
   12ef8:	mov	r5, r1
   12efc:	beq	12f40 <ftello64@plt+0x1870>
   12f00:	ldr	r3, [r4, #4]
   12f04:	tst	r3, #64	; 0x40
   12f08:	beq	12f2c <ftello64@plt+0x185c>
   12f0c:	ldr	r2, [r4]
   12f10:	ldr	r3, [pc, #68]	; 12f5c <ftello64@plt+0x188c>
   12f14:	str	r2, [sp]
   12f18:	mov	r1, #0
   12f1c:	ldr	r2, [pc, #60]	; 12f60 <ftello64@plt+0x1890>
   12f20:	mov	r0, #1
   12f24:	bl	114a8 <error@plt>
   12f28:	ldr	r3, [r4, #4]
   12f2c:	orr	r3, r3, #64	; 0x40
   12f30:	str	r3, [r4, #4]
   12f34:	str	r5, [r4, #32]
   12f38:	add	sp, sp, #12
   12f3c:	pop	{r4, r5, pc}
   12f40:	str	r1, [sp]
   12f44:	ldr	r3, [pc, #16]	; 12f5c <ftello64@plt+0x188c>
   12f48:	ldr	r2, [pc, #20]	; 12f64 <ftello64@plt+0x1894>
   12f4c:	mov	r1, r4
   12f50:	mov	r0, #1
   12f54:	bl	114a8 <error@plt>
   12f58:	b	12f00 <ftello64@plt+0x1830>
   12f5c:	andeq	r3, r2, ip, lsl #20
   12f60:	andeq	r3, r2, r0, asr #19
   12f64:	muleq	r2, ip, r9
   12f68:	push	{r4, r5, lr}
   12f6c:	subs	r4, r0, #0
   12f70:	sub	sp, sp, #12
   12f74:	mov	r5, r1
   12f78:	beq	12fbc <ftello64@plt+0x18ec>
   12f7c:	ldr	r3, [r4, #4]
   12f80:	tst	r3, #1024	; 0x400
   12f84:	beq	12fa8 <ftello64@plt+0x18d8>
   12f88:	ldr	r2, [r4]
   12f8c:	ldr	r3, [pc, #68]	; 12fd8 <ftello64@plt+0x1908>
   12f90:	str	r2, [sp]
   12f94:	mov	r1, #0
   12f98:	ldr	r2, [pc, #60]	; 12fdc <ftello64@plt+0x190c>
   12f9c:	mov	r0, #1
   12fa0:	bl	114a8 <error@plt>
   12fa4:	ldr	r3, [r4, #4]
   12fa8:	orr	r3, r3, #1024	; 0x400
   12fac:	str	r3, [r4, #4]
   12fb0:	str	r5, [r4, #52]	; 0x34
   12fb4:	add	sp, sp, #12
   12fb8:	pop	{r4, r5, pc}
   12fbc:	str	r1, [sp]
   12fc0:	ldr	r3, [pc, #16]	; 12fd8 <ftello64@plt+0x1908>
   12fc4:	ldr	r2, [pc, #20]	; 12fe0 <ftello64@plt+0x1910>
   12fc8:	mov	r1, r4
   12fcc:	mov	r0, #1
   12fd0:	bl	114a8 <error@plt>
   12fd4:	b	12f7c <ftello64@plt+0x18ac>
   12fd8:	andeq	r3, r2, r0, ror #15
   12fdc:	andeq	r3, r2, r0, asr #19
   12fe0:	muleq	r2, ip, r9
   12fe4:	push	{r4, r5, lr}
   12fe8:	subs	r4, r0, #0
   12fec:	sub	sp, sp, #20
   12ff0:	mov	r5, r1
   12ff4:	beq	13084 <ftello64@plt+0x19b4>
   12ff8:	ldr	r3, [r4, #4]
   12ffc:	tst	r3, #128	; 0x80
   13000:	bne	13064 <ftello64@plt+0x1994>
   13004:	mov	r2, #0
   13008:	add	r1, sp, #12
   1300c:	mov	r0, r5
   13010:	bl	113ac <strtol@plt>
   13014:	str	r0, [r4, #36]	; 0x24
   13018:	ldrb	r3, [r5]
   1301c:	cmp	r3, #0
   13020:	beq	13034 <ftello64@plt+0x1964>
   13024:	ldr	r3, [sp, #12]
   13028:	ldrb	r3, [r3]
   1302c:	cmp	r3, #0
   13030:	beq	13050 <ftello64@plt+0x1980>
   13034:	ldr	r2, [r4]
   13038:	mov	r3, r5
   1303c:	str	r2, [sp]
   13040:	mov	r1, #0
   13044:	ldr	r2, [pc, #84]	; 130a0 <ftello64@plt+0x19d0>
   13048:	mov	r0, #1
   1304c:	bl	114a8 <error@plt>
   13050:	ldr	r3, [r4, #4]
   13054:	orr	r3, r3, #128	; 0x80
   13058:	str	r3, [r4, #4]
   1305c:	add	sp, sp, #20
   13060:	pop	{r4, r5, pc}
   13064:	ldr	r2, [r4]
   13068:	ldr	r3, [pc, #52]	; 130a4 <ftello64@plt+0x19d4>
   1306c:	str	r2, [sp]
   13070:	mov	r1, #0
   13074:	ldr	r2, [pc, #44]	; 130a8 <ftello64@plt+0x19d8>
   13078:	mov	r0, #1
   1307c:	bl	114a8 <error@plt>
   13080:	b	13004 <ftello64@plt+0x1934>
   13084:	str	r1, [sp]
   13088:	ldr	r3, [pc, #20]	; 130a4 <ftello64@plt+0x19d4>
   1308c:	ldr	r2, [pc, #24]	; 130ac <ftello64@plt+0x19dc>
   13090:	mov	r1, r4
   13094:	mov	r0, #1
   13098:	bl	114a8 <error@plt>
   1309c:	b	12ff8 <ftello64@plt+0x1928>
   130a0:	andeq	r3, r2, r0, asr sl
   130a4:	andeq	r3, r2, r0, lsr #20
   130a8:	andeq	r3, r2, r0, asr #19
   130ac:	andeq	r3, r2, ip, lsr #20
   130b0:	push	{r4, r5, lr}
   130b4:	subs	r4, r0, #0
   130b8:	sub	sp, sp, #20
   130bc:	mov	r5, r1
   130c0:	beq	13150 <ftello64@plt+0x1a80>
   130c4:	ldr	r3, [r4, #4]
   130c8:	tst	r3, #256	; 0x100
   130cc:	bne	13130 <ftello64@plt+0x1a60>
   130d0:	mov	r2, #0
   130d4:	add	r1, sp, #12
   130d8:	mov	r0, r5
   130dc:	bl	113ac <strtol@plt>
   130e0:	str	r0, [r4, #40]	; 0x28
   130e4:	ldrb	r3, [r5]
   130e8:	cmp	r3, #0
   130ec:	beq	13100 <ftello64@plt+0x1a30>
   130f0:	ldr	r3, [sp, #12]
   130f4:	ldrb	r3, [r3]
   130f8:	cmp	r3, #0
   130fc:	beq	1311c <ftello64@plt+0x1a4c>
   13100:	ldr	r2, [r4]
   13104:	mov	r3, r5
   13108:	str	r2, [sp]
   1310c:	mov	r1, #0
   13110:	ldr	r2, [pc, #84]	; 1316c <ftello64@plt+0x1a9c>
   13114:	mov	r0, #1
   13118:	bl	114a8 <error@plt>
   1311c:	ldr	r3, [r4, #4]
   13120:	orr	r3, r3, #256	; 0x100
   13124:	str	r3, [r4, #4]
   13128:	add	sp, sp, #20
   1312c:	pop	{r4, r5, pc}
   13130:	ldr	r2, [r4]
   13134:	ldr	r3, [pc, #52]	; 13170 <ftello64@plt+0x1aa0>
   13138:	str	r2, [sp]
   1313c:	mov	r1, #0
   13140:	ldr	r2, [pc, #44]	; 13174 <ftello64@plt+0x1aa4>
   13144:	mov	r0, #1
   13148:	bl	114a8 <error@plt>
   1314c:	b	130d0 <ftello64@plt+0x1a00>
   13150:	str	r1, [sp]
   13154:	ldr	r3, [pc, #20]	; 13170 <ftello64@plt+0x1aa0>
   13158:	ldr	r2, [pc, #24]	; 13178 <ftello64@plt+0x1aa8>
   1315c:	mov	r1, r4
   13160:	mov	r0, #1
   13164:	bl	114a8 <error@plt>
   13168:	b	130c4 <ftello64@plt+0x19f4>
   1316c:	andeq	r3, r2, r0, asr sl
   13170:	andeq	r3, r2, r4, lsl #21
   13174:	andeq	r3, r2, r0, asr #19
   13178:	andeq	r3, r2, ip, lsr #20
   1317c:	push	{r4, r5, lr}
   13180:	subs	r4, r0, #0
   13184:	sub	sp, sp, #12
   13188:	mov	r5, r1
   1318c:	beq	131dc <ftello64@plt+0x1b0c>
   13190:	ldr	r1, [pc, #92]	; 131f4 <ftello64@plt+0x1b24>
   13194:	mov	r0, r5
   13198:	bl	11454 <strcasecmp@plt>
   1319c:	cmp	r0, #0
   131a0:	moveq	r3, #2
   131a4:	strheq	r3, [r4, #16]
   131a8:	beq	131c8 <ftello64@plt+0x1af8>
   131ac:	ldr	r2, [r4]
   131b0:	mov	r3, r5
   131b4:	str	r2, [sp]
   131b8:	mov	r1, #0
   131bc:	ldr	r2, [pc, #52]	; 131f8 <ftello64@plt+0x1b28>
   131c0:	mov	r0, #1
   131c4:	bl	114a8 <error@plt>
   131c8:	ldr	r3, [r4, #4]
   131cc:	orr	r3, r3, #4
   131d0:	str	r3, [r4, #4]
   131d4:	add	sp, sp, #12
   131d8:	pop	{r4, r5, pc}
   131dc:	mov	r3, r1
   131e0:	ldr	r2, [pc, #20]	; 131fc <ftello64@plt+0x1b2c>
   131e4:	mov	r1, r4
   131e8:	mov	r0, #1
   131ec:	bl	114a8 <error@plt>
   131f0:	b	13190 <ftello64@plt+0x1ac0>
   131f4:	andeq	r3, r2, r4, asr #21
   131f8:	andeq	r3, r2, ip, asr #21
   131fc:	muleq	r2, r4, sl
   13200:	cmp	r0, #0
   13204:	ldreq	r3, [pc, #72]	; 13254 <ftello64@plt+0x1b84>
   13208:	ldrne	ip, [r0, #4]
   1320c:	ldrne	r3, [pc, #64]	; 13254 <ftello64@plt+0x1b84>
   13210:	ldreq	r0, [r3]
   13214:	orrne	ip, ip, #512	; 0x200
   13218:	orreq	r0, r0, #512	; 0x200
   1321c:	strne	ip, [r0, #4]
   13220:	streq	r0, [r3]
   13224:	cmp	r2, #0
   13228:	ldrne	r2, [r3, #4]
   1322c:	ldrne	r0, [r3, #8]
   13230:	ldreq	r0, [r3, #8]
   13234:	ldreq	r2, [r3, #4]
   13238:	orrne	r2, r1, r2
   1323c:	bicne	r0, r0, r1
   13240:	orreq	r0, r1, r0
   13244:	biceq	r2, r2, r1
   13248:	str	r0, [r3, #8]
   1324c:	str	r2, [r3, #4]
   13250:	bx	lr
   13254:	andeq	r7, r3, r4, asr fp
   13258:	ldrb	r3, [r1]
   1325c:	cmp	r3, #0
   13260:	bxeq	lr
   13264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13268:	mov	r4, r1
   1326c:	sub	sp, sp, #20
   13270:	mov	r9, r0
   13274:	ldr	r5, [pc, #212]	; 13350 <ftello64@plt+0x1c80>
   13278:	ldr	fp, [pc, #212]	; 13354 <ftello64@plt+0x1c84>
   1327c:	mov	sl, #44	; 0x2c
   13280:	b	132e8 <ftello64@plt+0x1c18>
   13284:	cmp	r9, #0
   13288:	ldr	r2, [sp, #12]
   1328c:	ldrne	r3, [r9, #4]
   13290:	ldreq	r3, [r5]
   13294:	orrne	r3, r3, #512	; 0x200
   13298:	orreq	r3, r3, #512	; 0x200
   1329c:	strne	r3, [r9, #4]
   132a0:	streq	r3, [r5]
   132a4:	cmp	r2, #0
   132a8:	add	r4, r4, r6
   132ac:	ldrne	r3, [r5, #4]
   132b0:	ldreq	r3, [r5, #4]
   132b4:	ldrne	r2, [r5, #8]
   132b8:	ldreq	r2, [r5, #8]
   132bc:	orrne	r3, r7, r3
   132c0:	biceq	r3, r3, r7
   132c4:	bicne	r2, r2, r7
   132c8:	orreq	r2, r7, r2
   132cc:	cmp	r8, #0
   132d0:	addne	r4, r4, #1
   132d4:	str	r3, [r5, #4]
   132d8:	ldrb	r3, [r4]
   132dc:	str	r2, [r5, #8]
   132e0:	cmp	r3, #0
   132e4:	beq	13348 <ftello64@plt+0x1c78>
   132e8:	mov	r1, sl
   132ec:	mov	r0, r4
   132f0:	bl	11550 <strchr@plt>
   132f4:	subs	r8, r0, #0
   132f8:	beq	13338 <ftello64@plt+0x1c68>
   132fc:	sub	r6, r8, r4
   13300:	add	r2, sp, #12
   13304:	mov	r1, r6
   13308:	mov	r0, r4
   1330c:	bl	11c7c <ftello64@plt+0x5ac>
   13310:	subs	r7, r0, #0
   13314:	bne	13284 <ftello64@plt+0x1bb4>
   13318:	str	r4, [sp, #4]
   1331c:	str	r6, [sp]
   13320:	mov	r3, r6
   13324:	mov	r2, fp
   13328:	mov	r1, #0
   1332c:	mov	r0, #1
   13330:	bl	114a8 <error@plt>
   13334:	b	13284 <ftello64@plt+0x1bb4>
   13338:	mov	r0, r4
   1333c:	bl	11544 <strlen@plt>
   13340:	mov	r6, r0
   13344:	b	13300 <ftello64@plt+0x1c30>
   13348:	add	sp, sp, #20
   1334c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13350:	andeq	r7, r3, r4, asr fp
   13354:	andeq	r3, r2, ip, lsl #22
   13358:	push	{r4, r5, lr}
   1335c:	subs	r4, r0, #0
   13360:	sub	sp, sp, #12
   13364:	mov	r5, r1
   13368:	beq	133cc <ftello64@plt+0x1cfc>
   1336c:	ldr	r3, [r4, #4]
   13370:	tst	r3, #32
   13374:	beq	13398 <ftello64@plt+0x1cc8>
   13378:	ldr	r2, [r4]
   1337c:	ldr	r3, [pc, #100]	; 133e8 <ftello64@plt+0x1d18>
   13380:	str	r2, [sp]
   13384:	mov	r1, #0
   13388:	ldr	r2, [pc, #92]	; 133ec <ftello64@plt+0x1d1c>
   1338c:	mov	r0, #1
   13390:	bl	114a8 <error@plt>
   13394:	ldr	r3, [r4, #4]
   13398:	ldr	r2, [pc, #80]	; 133f0 <ftello64@plt+0x1d20>
   1339c:	orr	r3, r3, #32
   133a0:	orr	r3, r3, #512	; 0x200
   133a4:	ldr	r1, [r2, #8]
   133a8:	str	r3, [r4, #4]
   133ac:	ldr	r3, [r2, #4]
   133b0:	orr	r1, r1, #16
   133b4:	bic	r3, r3, #16
   133b8:	str	r5, [r4, #28]
   133bc:	str	r1, [r2, #8]
   133c0:	str	r3, [r2, #4]
   133c4:	add	sp, sp, #12
   133c8:	pop	{r4, r5, pc}
   133cc:	str	r1, [sp]
   133d0:	ldr	r3, [pc, #16]	; 133e8 <ftello64@plt+0x1d18>
   133d4:	ldr	r2, [pc, #24]	; 133f4 <ftello64@plt+0x1d24>
   133d8:	mov	r1, r4
   133dc:	mov	r0, #1
   133e0:	bl	114a8 <error@plt>
   133e4:	b	1336c <ftello64@plt+0x1c9c>
   133e8:	strdeq	r3, [r2], -r0
   133ec:	andeq	r3, r2, r0, asr #19
   133f0:	andeq	r7, r3, r4, asr fp
   133f4:	muleq	r2, ip, r9
   133f8:	push	{r4, r5, r6, lr}
   133fc:	subs	r5, r0, #0
   13400:	beq	13464 <ftello64@plt+0x1d94>
   13404:	ldr	r4, [pc, #112]	; 1347c <ftello64@plt+0x1dac>
   13408:	ldr	r1, [r4]
   1340c:	cmp	r1, #0
   13410:	bne	13424 <ftello64@plt+0x1d54>
   13414:	b	13434 <ftello64@plt+0x1d64>
   13418:	ldr	r1, [r4, #12]!
   1341c:	cmp	r1, #0
   13420:	beq	13434 <ftello64@plt+0x1d64>
   13424:	mov	r0, r5
   13428:	bl	113a0 <strcmp@plt>
   1342c:	cmp	r0, #0
   13430:	bne	13418 <ftello64@plt+0x1d48>
   13434:	ldr	r1, [r4, #8]
   13438:	cmp	r1, #0
   1343c:	beq	1344c <ftello64@plt+0x1d7c>
   13440:	ldr	r3, [pc, #56]	; 13480 <ftello64@plt+0x1db0>
   13444:	str	r1, [r3]
   13448:	pop	{r4, r5, r6, pc}
   1344c:	mov	r3, r5
   13450:	ldr	r2, [pc, #44]	; 13484 <ftello64@plt+0x1db4>
   13454:	mov	r0, #1
   13458:	bl	114a8 <error@plt>
   1345c:	ldr	r1, [r4, #8]
   13460:	b	13440 <ftello64@plt+0x1d70>
   13464:	ldr	r2, [pc, #28]	; 13488 <ftello64@plt+0x1db8>
   13468:	ldr	r3, [pc, #28]	; 1348c <ftello64@plt+0x1dbc>
   1346c:	ldr	r5, [r2]
   13470:	cmp	r5, #0
   13474:	moveq	r5, r3
   13478:	b	13404 <ftello64@plt+0x1d34>
   1347c:			; <UNDEFINED> instruction: 0x000372b4
   13480:	strdeq	r7, [r3], -r4
   13484:	andeq	r3, r2, r8, lsr #22
   13488:	strdeq	r7, [r3], -r8
   1348c:	andeq	r3, r2, r0, lsr #22
   13490:	push	{r4, r5, r6, r7, r8, r9, lr}
   13494:	sub	sp, sp, #20
   13498:	mov	r3, #0
   1349c:	ldr	r1, [pc, #440]	; 1365c <ftello64@plt+0x1f8c>
   134a0:	str	r3, [sp, #8]
   134a4:	str	r3, [sp, #12]
   134a8:	mov	r4, r0
   134ac:	bl	1164c <fopen64@plt>
   134b0:	subs	r7, r0, #0
   134b4:	beq	13640 <ftello64@plt+0x1f70>
   134b8:	ldr	r3, [pc, #416]	; 13660 <ftello64@plt+0x1f90>
   134bc:	ldr	r6, [pc, #416]	; 13664 <ftello64@plt+0x1f94>
   134c0:	mov	r2, #0
   134c4:	str	r3, [sp]
   134c8:	mov	r1, r2
   134cc:	ldr	r3, [pc, #404]	; 13668 <ftello64@plt+0x1f98>
   134d0:	add	r0, r6, #12
   134d4:	bl	1ae48 <_obstack_begin@@Base>
   134d8:	add	r9, r6, #12
   134dc:	mov	r8, #10
   134e0:	mov	r3, r7
   134e4:	mov	r2, r8
   134e8:	add	r1, sp, #12
   134ec:	add	r0, sp, #8
   134f0:	bl	11388 <__getdelim@plt>
   134f4:	cmp	r0, #0
   134f8:	ble	1358c <ftello64@plt+0x1ebc>
   134fc:	ldr	r4, [sp, #8]
   13500:	mov	r0, r4
   13504:	bl	11544 <strlen@plt>
   13508:	subs	r5, r0, #0
   1350c:	beq	134e0 <ftello64@plt+0x1e10>
   13510:	sub	r3, r5, #1
   13514:	ldrb	r2, [r4, r3]
   13518:	cmp	r2, #10
   1351c:	beq	1357c <ftello64@plt+0x1eac>
   13520:	add	r1, r4, r5
   13524:	mov	r3, r4
   13528:	cmp	r3, r1
   1352c:	beq	1354c <ftello64@plt+0x1e7c>
   13530:	ldrb	r2, [r3], #1
   13534:	cmp	r2, #32
   13538:	beq	13528 <ftello64@plt+0x1e58>
   1353c:	cmp	r2, #35	; 0x23
   13540:	beq	134e0 <ftello64@plt+0x1e10>
   13544:	cmp	r2, #9
   13548:	beq	13528 <ftello64@plt+0x1e58>
   1354c:	ldr	r0, [r6, #24]
   13550:	ldr	r3, [r6, #28]
   13554:	sub	r3, r3, r0
   13558:	cmp	r5, r3
   1355c:	bhi	13614 <ftello64@plt+0x1f44>
   13560:	mov	r2, r5
   13564:	mov	r1, r4
   13568:	bl	1140c <memcpy@plt>
   1356c:	ldr	r3, [r6, #24]
   13570:	add	r5, r3, r5
   13574:	str	r5, [r6, #24]
   13578:	b	134e0 <ftello64@plt+0x1e10>
   1357c:	cmp	r3, #0
   13580:	movne	r5, r3
   13584:	beq	134e0 <ftello64@plt+0x1e10>
   13588:	b	13520 <ftello64@plt+0x1e50>
   1358c:	ldr	r0, [sp, #8]
   13590:	bl	1acdc <argp_parse@@Base+0xf7c>
   13594:	mov	r0, r7
   13598:	bl	115c8 <fclose@plt>
   1359c:	ldr	r3, [r6, #24]
   135a0:	ldr	r2, [r6, #28]
   135a4:	cmp	r2, r3
   135a8:	beq	1362c <ftello64@plt+0x1f5c>
   135ac:	mov	r2, #0
   135b0:	add	r1, r3, #1
   135b4:	str	r1, [r6, #24]
   135b8:	strb	r2, [r3]
   135bc:	ldr	r3, [r6, #24]
   135c0:	ldr	r0, [r6, #20]
   135c4:	ldr	ip, [r6, #36]	; 0x24
   135c8:	cmp	r0, r3
   135cc:	ldr	r1, [r6, #28]
   135d0:	ldrbeq	r2, [r6, #52]	; 0x34
   135d4:	add	r3, r3, ip
   135d8:	bic	r3, r3, ip
   135dc:	orreq	r2, r2, #2
   135e0:	strbeq	r2, [r6, #52]	; 0x34
   135e4:	ldr	r2, [r6, #16]
   135e8:	str	r3, [r6, #24]
   135ec:	sub	ip, r3, r2
   135f0:	sub	r2, r1, r2
   135f4:	cmp	ip, r2
   135f8:	ldr	r2, [pc, #108]	; 1366c <ftello64@plt+0x1f9c>
   135fc:	movhi	r3, r1
   13600:	strhi	r1, [r6, #24]
   13604:	str	r3, [r6, #20]
   13608:	str	r0, [r2]
   1360c:	add	sp, sp, #20
   13610:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13614:	mov	r0, r9
   13618:	mov	r1, r5
   1361c:	bl	1afdc <_obstack_newchunk@@Base>
   13620:	ldr	r0, [r6, #24]
   13624:	ldr	r4, [sp, #8]
   13628:	b	13560 <ftello64@plt+0x1e90>
   1362c:	mov	r1, #1
   13630:	ldr	r0, [pc, #56]	; 13670 <ftello64@plt+0x1fa0>
   13634:	bl	1afdc <_obstack_newchunk@@Base>
   13638:	ldr	r3, [r6, #24]
   1363c:	b	135ac <ftello64@plt+0x1edc>
   13640:	bl	11568 <__errno_location@plt>
   13644:	mov	r3, r4
   13648:	ldr	r2, [pc, #36]	; 13674 <ftello64@plt+0x1fa4>
   1364c:	ldr	r1, [r0]
   13650:	mov	r0, #1
   13654:	bl	114a8 <error@plt>
   13658:	b	134b8 <ftello64@plt+0x1de8>
   1365c:	andeq	r3, r2, r0, lsl #21
   13660:	ldrdeq	sl, [r1], -ip
   13664:	andeq	r7, r3, r4, asr fp
   13668:			; <UNDEFINED> instruction: 0x0001cab0
   1366c:	strdeq	r7, [r3], -r4
   13670:	andeq	r7, r3, r0, ror #22
   13674:	andeq	r3, r2, r4, asr #22
   13678:	ldr	ip, [r2, #28]
   1367c:	cmp	r0, #108	; 0x6c
   13680:	push	{r4, r5, r6, r7, r8, r9, lr}
   13684:	sub	sp, sp, #20
   13688:	ldr	r6, [ip]
   1368c:	beq	13ac8 <ftello64@plt+0x23f8>
   13690:	mov	r5, r1
   13694:	mov	r4, r2
   13698:	ble	136e0 <ftello64@plt+0x2010>
   1369c:	cmp	r0, #256	; 0x100
   136a0:	beq	138a4 <ftello64@plt+0x21d4>
   136a4:	ble	13804 <ftello64@plt+0x2134>
   136a8:	ldr	r3, [pc, #1744]	; 13d80 <ftello64@plt+0x26b0>
   136ac:	cmp	r0, r3
   136b0:	beq	13860 <ftello64@plt+0x2190>
   136b4:	blt	13b2c <ftello64@plt+0x245c>
   136b8:	add	r3, r3, #1
   136bc:	cmp	r0, r3
   136c0:	beq	13af0 <ftello64@plt+0x2420>
   136c4:	ldr	r3, [pc, #1720]	; 13d84 <ftello64@plt+0x26b4>
   136c8:	cmp	r0, r3
   136cc:	bne	13858 <ftello64@plt+0x2188>
   136d0:	ldr	r3, [r2, #32]
   136d4:	mov	lr, #0
   136d8:	str	ip, [r3]
   136dc:	b	13834 <ftello64@plt+0x2164>
   136e0:	cmp	r0, #77	; 0x4d
   136e4:	beq	139fc <ftello64@plt+0x232c>
   136e8:	ble	13840 <ftello64@plt+0x2170>
   136ec:	cmp	r0, #98	; 0x62
   136f0:	beq	139d4 <ftello64@plt+0x2304>
   136f4:	ble	13988 <ftello64@plt+0x22b8>
   136f8:	cmp	r0, #100	; 0x64
   136fc:	beq	13940 <ftello64@plt+0x2270>
   13700:	cmp	r0, #105	; 0x69
   13704:	bne	13858 <ftello64@plt+0x2188>
   13708:	cmp	r6, #0
   1370c:	beq	13774 <ftello64@plt+0x20a4>
   13710:	ldr	r3, [pc, #1648]	; 13d88 <ftello64@plt+0x26b8>
   13714:	ldr	r2, [r3]
   13718:	cmp	r2, #0
   1371c:	bne	13b94 <ftello64@plt+0x24c4>
   13720:	ldr	r2, [r6, #4]
   13724:	cmp	r2, #0
   13728:	bne	13740 <ftello64@plt+0x2070>
   1372c:	ldr	r2, [pc, #1624]	; 13d8c <ftello64@plt+0x26bc>
   13730:	mov	r1, #2
   13734:	str	r1, [r6, #4]
   13738:	ldr	r2, [r2]
   1373c:	str	r2, [r6, #12]
   13740:	ldr	r1, [r3, #8]
   13744:	ldr	r2, [r3, #4]
   13748:	orrs	r0, r1, r2
   1374c:	beq	13774 <ftello64@plt+0x20a4>
   13750:	ldr	r0, [r6, #48]	; 0x30
   13754:	ldr	ip, [r6, #44]	; 0x2c
   13758:	orr	r2, r0, r2
   1375c:	orr	r1, ip, r1
   13760:	mov	r0, #0
   13764:	str	r1, [r6, #44]	; 0x2c
   13768:	str	r2, [r6, #48]	; 0x30
   1376c:	str	r0, [r3, #4]
   13770:	str	r0, [r3, #8]
   13774:	ldr	r6, [pc, #1556]	; 13d90 <ftello64@plt+0x26c0>
   13778:	ldr	r7, [pc, #1556]	; 13d94 <ftello64@plt+0x26c4>
   1377c:	ldr	r2, [pc, #1556]	; 13d98 <ftello64@plt+0x26c8>
   13780:	ldr	r3, [r6]
   13784:	ldr	r0, [r7]
   13788:	add	r3, r3, #1
   1378c:	mov	r8, #1
   13790:	rsb	r1, r3, r3, lsl #3
   13794:	str	r3, [r6]
   13798:	lsl	r1, r1, #3
   1379c:	str	r8, [r2]
   137a0:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   137a4:	cmp	r0, #0
   137a8:	str	r0, [r7]
   137ac:	movne	r7, r0
   137b0:	beq	13cbc <ftello64@plt+0x25ec>
   137b4:	ldr	r3, [r6]
   137b8:	ldr	r8, [r4, #28]
   137bc:	ldr	r6, [pc, #1496]	; 13d9c <ftello64@plt+0x26cc>
   137c0:	rsb	r4, r3, r3, lsl #3
   137c4:	mov	lr, #0
   137c8:	lsl	r4, r4, #3
   137cc:	ldm	r6!, {r0, r1, r2, r3}
   137d0:	sub	r4, r4, #56	; 0x38
   137d4:	add	r9, r7, r4
   137d8:	mov	ip, r9
   137dc:	stmia	ip!, {r0, r1, r2, r3}
   137e0:	ldm	r6!, {r0, r1, r2, r3}
   137e4:	stmia	ip!, {r0, r1, r2, r3}
   137e8:	ldm	r6!, {r0, r1, r2, r3}
   137ec:	stmia	ip!, {r0, r1, r2, r3}
   137f0:	ldm	r6, {r0, r1}
   137f4:	stm	ip, {r0, r1}
   137f8:	str	r5, [r7, r4]
   137fc:	str	r9, [r8]
   13800:	b	13834 <ftello64@plt+0x2164>
   13804:	cmp	r0, #112	; 0x70
   13808:	beq	13940 <ftello64@plt+0x2270>
   1380c:	ble	139a4 <ftello64@plt+0x22d4>
   13810:	cmp	r0, #115	; 0x73
   13814:	beq	13a70 <ftello64@plt+0x23a0>
   13818:	cmp	r0, #118	; 0x76
   1381c:	bne	13858 <ftello64@plt+0x2188>
   13820:	ldr	r2, [pc, #1400]	; 13da0 <ftello64@plt+0x26d0>
   13824:	mov	lr, #0
   13828:	ldr	r3, [r2]
   1382c:	add	r3, r3, #1
   13830:	str	r3, [r2]
   13834:	mov	r0, lr
   13838:	add	sp, sp, #20
   1383c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13840:	cmp	r0, #66	; 0x42
   13844:	beq	139d4 <ftello64@plt+0x2304>
   13848:	cmp	r0, #70	; 0x46
   1384c:	beq	13ae0 <ftello64@plt+0x2410>
   13850:	cmp	r0, #65	; 0x41
   13854:	beq	13918 <ftello64@plt+0x2248>
   13858:	mov	lr, #7
   1385c:	b	13834 <ftello64@plt+0x2164>
   13860:	cmp	r6, #0
   13864:	mov	lr, #0
   13868:	ldreq	r3, [pc, #1304]	; 13d88 <ftello64@plt+0x26b8>
   1386c:	ldrne	r3, [pc, #1300]	; 13d88 <ftello64@plt+0x26b8>
   13870:	ldrne	r2, [r6, #4]
   13874:	ldreq	r2, [r3]
   13878:	orrne	r2, r2, #512	; 0x200
   1387c:	orreq	r2, r2, #512	; 0x200
   13880:	ldr	r1, [r3, #8]
   13884:	strne	r2, [r6, #4]
   13888:	streq	r2, [r3]
   1388c:	ldr	r2, [r3, #4]
   13890:	orr	r1, r1, #65	; 0x41
   13894:	bic	r2, r2, #65	; 0x41
   13898:	str	r1, [r3, #8]
   1389c:	str	r2, [r3, #4]
   138a0:	b	13834 <ftello64@plt+0x2164>
   138a4:	cmp	r6, #0
   138a8:	beq	13d10 <ftello64@plt+0x2640>
   138ac:	ldr	r3, [r6, #4]
   138b0:	tst	r3, #256	; 0x100
   138b4:	bne	13c5c <ftello64@plt+0x258c>
   138b8:	mov	r2, #0
   138bc:	add	r1, sp, #12
   138c0:	mov	r0, r5
   138c4:	bl	113ac <strtol@plt>
   138c8:	str	r0, [r6, #40]	; 0x28
   138cc:	ldrb	r3, [r5]
   138d0:	cmp	r3, #0
   138d4:	beq	138e8 <ftello64@plt+0x2218>
   138d8:	ldr	r3, [sp, #12]
   138dc:	ldrb	r3, [r3]
   138e0:	cmp	r3, #0
   138e4:	beq	13904 <ftello64@plt+0x2234>
   138e8:	ldr	r2, [r6]
   138ec:	mov	r3, r5
   138f0:	str	r2, [sp]
   138f4:	mov	r1, #0
   138f8:	ldr	r2, [pc, #1188]	; 13da4 <ftello64@plt+0x26d4>
   138fc:	mov	r0, #1
   13900:	bl	114a8 <error@plt>
   13904:	ldr	r3, [r6, #4]
   13908:	mov	lr, #0
   1390c:	orr	r3, r3, #256	; 0x100
   13910:	str	r3, [r6, #4]
   13914:	b	13834 <ftello64@plt+0x2164>
   13918:	cmp	r6, #0
   1391c:	beq	13cd8 <ftello64@plt+0x2608>
   13920:	ldr	r3, [r6, #4]
   13924:	tst	r3, #8
   13928:	bne	13bd0 <ftello64@plt+0x2500>
   1392c:	orr	r3, r3, #8
   13930:	str	r3, [r6, #4]
   13934:	str	r5, [r6, #20]
   13938:	mov	lr, #0
   1393c:	b	13834 <ftello64@plt+0x2164>
   13940:	cmp	r6, #0
   13944:	beq	13d48 <ftello64@plt+0x2678>
   13948:	ldr	r3, [r6, #4]
   1394c:	tst	r3, #32
   13950:	bne	13c18 <ftello64@plt+0x2548>
   13954:	ldr	r2, [pc, #1068]	; 13d88 <ftello64@plt+0x26b8>
   13958:	orr	r3, r3, #32
   1395c:	orr	r3, r3, #512	; 0x200
   13960:	ldr	r1, [r2, #8]
   13964:	str	r3, [r6, #4]
   13968:	ldr	r3, [r2, #4]
   1396c:	orr	r1, r1, #16
   13970:	bic	r3, r3, #16
   13974:	str	r5, [r6, #28]
   13978:	str	r1, [r2, #8]
   1397c:	str	r3, [r2, #4]
   13980:	mov	lr, #0
   13984:	b	13834 <ftello64@plt+0x2164>
   13988:	cmp	r0, #97	; 0x61
   1398c:	bne	13858 <ftello64@plt+0x2188>
   13990:	ldr	r3, [pc, #1040]	; 13da8 <ftello64@plt+0x26d8>
   13994:	mov	r2, #1
   13998:	mov	lr, #0
   1399c:	str	r2, [r3]
   139a0:	b	13834 <ftello64@plt+0x2164>
   139a4:	cmp	r0, #109	; 0x6d
   139a8:	bne	13858 <ftello64@plt+0x2188>
   139ac:	cmp	r6, #0
   139b0:	beq	13cf4 <ftello64@plt+0x2624>
   139b4:	ldr	r3, [r6, #4]
   139b8:	tst	r3, #16
   139bc:	bne	13bf4 <ftello64@plt+0x2524>
   139c0:	orr	r3, r3, #16
   139c4:	str	r3, [r6, #4]
   139c8:	str	r5, [r6, #24]
   139cc:	mov	lr, #0
   139d0:	b	13834 <ftello64@plt+0x2164>
   139d4:	cmp	r6, #0
   139d8:	beq	13d2c <ftello64@plt+0x265c>
   139dc:	ldr	r3, [r6, #4]
   139e0:	tst	r3, #64	; 0x40
   139e4:	bne	13bac <ftello64@plt+0x24dc>
   139e8:	orr	r3, r3, #64	; 0x40
   139ec:	str	r3, [r6, #4]
   139f0:	str	r5, [r6, #32]
   139f4:	mov	lr, #0
   139f8:	b	13834 <ftello64@plt+0x2164>
   139fc:	cmp	r6, #0
   13a00:	beq	13d64 <ftello64@plt+0x2694>
   13a04:	ldr	r3, [r6, #4]
   13a08:	tst	r3, #128	; 0x80
   13a0c:	bne	13c3c <ftello64@plt+0x256c>
   13a10:	mov	r2, #0
   13a14:	add	r1, sp, #12
   13a18:	mov	r0, r5
   13a1c:	bl	113ac <strtol@plt>
   13a20:	str	r0, [r6, #36]	; 0x24
   13a24:	ldrb	r3, [r5]
   13a28:	cmp	r3, #0
   13a2c:	beq	13a40 <ftello64@plt+0x2370>
   13a30:	ldr	r3, [sp, #12]
   13a34:	ldrb	r3, [r3]
   13a38:	cmp	r3, #0
   13a3c:	beq	13a5c <ftello64@plt+0x238c>
   13a40:	ldr	r2, [r6]
   13a44:	mov	r3, r5
   13a48:	str	r2, [sp]
   13a4c:	mov	r1, #0
   13a50:	ldr	r2, [pc, #844]	; 13da4 <ftello64@plt+0x26d4>
   13a54:	mov	r0, #1
   13a58:	bl	114a8 <error@plt>
   13a5c:	ldr	r3, [r6, #4]
   13a60:	mov	lr, #0
   13a64:	orr	r3, r3, #128	; 0x80
   13a68:	str	r3, [r6, #4]
   13a6c:	b	13834 <ftello64@plt+0x2164>
   13a70:	ldr	r4, [pc, #820]	; 13dac <ftello64@plt+0x26dc>
   13a74:	ldr	r1, [r4]
   13a78:	cmp	r1, #0
   13a7c:	ldrne	r5, [pc, #812]	; 13db0 <ftello64@plt+0x26e0>
   13a80:	bne	13a94 <ftello64@plt+0x23c4>
   13a84:	b	13aa4 <ftello64@plt+0x23d4>
   13a88:	ldr	r1, [r4, #12]!
   13a8c:	cmp	r1, #0
   13a90:	beq	13aa4 <ftello64@plt+0x23d4>
   13a94:	mov	r0, r5
   13a98:	bl	113a0 <strcmp@plt>
   13a9c:	cmp	r0, #0
   13aa0:	bne	13a88 <ftello64@plt+0x23b8>
   13aa4:	ldr	r1, [r4, #8]
   13aa8:	cmp	r1, #0
   13aac:	beq	13c7c <ftello64@plt+0x25ac>
   13ab0:	ldr	r3, [pc, #724]	; 13d8c <ftello64@plt+0x26bc>
   13ab4:	mov	lr, #0
   13ab8:	mov	r0, lr
   13abc:	str	r1, [r3]
   13ac0:	add	sp, sp, #20
   13ac4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13ac8:	ldr	r2, [pc, #740]	; 13db4 <ftello64@plt+0x26e4>
   13acc:	mov	lr, #0
   13ad0:	ldr	r3, [r2]
   13ad4:	add	r3, r3, #1
   13ad8:	str	r3, [r2]
   13adc:	b	13834 <ftello64@plt+0x2164>
   13ae0:	mov	r0, r6
   13ae4:	bl	13258 <ftello64@plt+0x1b88>
   13ae8:	mov	lr, #0
   13aec:	b	13834 <ftello64@plt+0x2164>
   13af0:	cmp	r6, #0
   13af4:	mov	lr, #0
   13af8:	ldreq	r3, [pc, #648]	; 13d88 <ftello64@plt+0x26b8>
   13afc:	ldrne	r2, [r6, #4]
   13b00:	ldrne	r3, [pc, #640]	; 13d88 <ftello64@plt+0x26b8>
   13b04:	ldreq	r2, [r3]
   13b08:	orrne	r2, r2, #512	; 0x200
   13b0c:	orreq	r2, r2, #512	; 0x200
   13b10:	strne	r2, [r6, #4]
   13b14:	streq	r2, [r3]
   13b18:	ldmib	r3, {r1, r2}
   13b1c:	orr	r1, r1, #1
   13b20:	bic	r2, r2, #1
   13b24:	stmib	r3, {r1, r2}
   13b28:	b	13834 <ftello64@plt+0x2164>
   13b2c:	cmp	r1, #0
   13b30:	beq	13ca4 <ftello64@plt+0x25d4>
   13b34:	ldrb	r3, [r1]
   13b38:	cmp	r3, #64	; 0x40
   13b3c:	beq	13c94 <ftello64@plt+0x25c4>
   13b40:	ldr	r4, [pc, #612]	; 13dac <ftello64@plt+0x26dc>
   13b44:	ldr	r1, [r4]
   13b48:	cmp	r1, #0
   13b4c:	bne	13b80 <ftello64@plt+0x24b0>
   13b50:	ldr	r1, [r4, #8]
   13b54:	cmp	r1, #0
   13b58:	bne	13ab0 <ftello64@plt+0x23e0>
   13b5c:	mov	r3, r5
   13b60:	ldr	r2, [pc, #592]	; 13db8 <ftello64@plt+0x26e8>
   13b64:	mov	r0, #1
   13b68:	bl	114a8 <error@plt>
   13b6c:	ldr	r1, [r4, #8]
   13b70:	b	13ab0 <ftello64@plt+0x23e0>
   13b74:	ldr	r1, [r4, #12]!
   13b78:	cmp	r1, #0
   13b7c:	beq	13b50 <ftello64@plt+0x2480>
   13b80:	mov	r0, r5
   13b84:	bl	113a0 <strcmp@plt>
   13b88:	cmp	r0, #0
   13b8c:	bne	13b74 <ftello64@plt+0x24a4>
   13b90:	b	13b50 <ftello64@plt+0x2480>
   13b94:	ldr	r0, [r6, #4]
   13b98:	mov	r1, #0
   13b9c:	orr	r2, r2, r0
   13ba0:	str	r2, [r6, #4]
   13ba4:	str	r1, [r3]
   13ba8:	b	13724 <ftello64@plt+0x2054>
   13bac:	ldr	r2, [r6]
   13bb0:	ldr	r3, [pc, #516]	; 13dbc <ftello64@plt+0x26ec>
   13bb4:	str	r2, [sp]
   13bb8:	mov	r1, #0
   13bbc:	ldr	r2, [pc, #508]	; 13dc0 <ftello64@plt+0x26f0>
   13bc0:	mov	r0, #1
   13bc4:	bl	114a8 <error@plt>
   13bc8:	ldr	r3, [r6, #4]
   13bcc:	b	139e8 <ftello64@plt+0x2318>
   13bd0:	ldr	r2, [r6]
   13bd4:	ldr	r3, [pc, #488]	; 13dc4 <ftello64@plt+0x26f4>
   13bd8:	str	r2, [sp]
   13bdc:	mov	r1, #0
   13be0:	ldr	r2, [pc, #472]	; 13dc0 <ftello64@plt+0x26f0>
   13be4:	mov	r0, #1
   13be8:	bl	114a8 <error@plt>
   13bec:	ldr	r3, [r6, #4]
   13bf0:	b	1392c <ftello64@plt+0x225c>
   13bf4:	ldr	r2, [r6]
   13bf8:	ldr	r3, [pc, #456]	; 13dc8 <ftello64@plt+0x26f8>
   13bfc:	str	r2, [sp]
   13c00:	mov	r1, #0
   13c04:	ldr	r2, [pc, #436]	; 13dc0 <ftello64@plt+0x26f0>
   13c08:	mov	r0, #1
   13c0c:	bl	114a8 <error@plt>
   13c10:	ldr	r3, [r6, #4]
   13c14:	b	139c0 <ftello64@plt+0x22f0>
   13c18:	ldr	r2, [r6]
   13c1c:	ldr	r3, [pc, #424]	; 13dcc <ftello64@plt+0x26fc>
   13c20:	str	r2, [sp]
   13c24:	mov	r1, #0
   13c28:	ldr	r2, [pc, #400]	; 13dc0 <ftello64@plt+0x26f0>
   13c2c:	mov	r0, #1
   13c30:	bl	114a8 <error@plt>
   13c34:	ldr	r3, [r6, #4]
   13c38:	b	13954 <ftello64@plt+0x2284>
   13c3c:	ldr	r2, [r6]
   13c40:	ldr	r3, [pc, #392]	; 13dd0 <ftello64@plt+0x2700>
   13c44:	str	r2, [sp]
   13c48:	mov	r1, #0
   13c4c:	ldr	r2, [pc, #364]	; 13dc0 <ftello64@plt+0x26f0>
   13c50:	mov	r0, #1
   13c54:	bl	114a8 <error@plt>
   13c58:	b	13a10 <ftello64@plt+0x2340>
   13c5c:	ldr	r2, [r6]
   13c60:	ldr	r3, [pc, #364]	; 13dd4 <ftello64@plt+0x2704>
   13c64:	str	r2, [sp]
   13c68:	mov	r1, #0
   13c6c:	ldr	r2, [pc, #332]	; 13dc0 <ftello64@plt+0x26f0>
   13c70:	mov	r0, #1
   13c74:	bl	114a8 <error@plt>
   13c78:	b	138b8 <ftello64@plt+0x21e8>
   13c7c:	ldr	r3, [pc, #300]	; 13db0 <ftello64@plt+0x26e0>
   13c80:	ldr	r2, [pc, #304]	; 13db8 <ftello64@plt+0x26e8>
   13c84:	mov	r0, #1
   13c88:	bl	114a8 <error@plt>
   13c8c:	ldr	r1, [r4, #8]
   13c90:	b	13ab0 <ftello64@plt+0x23e0>
   13c94:	add	r0, r1, #1
   13c98:	bl	13490 <ftello64@plt+0x1dc0>
   13c9c:	mov	lr, #0
   13ca0:	b	13834 <ftello64@plt+0x2164>
   13ca4:	ldr	r2, [pc, #300]	; 13dd8 <ftello64@plt+0x2708>
   13ca8:	ldr	r3, [pc, #300]	; 13ddc <ftello64@plt+0x270c>
   13cac:	ldr	r5, [r2]
   13cb0:	cmp	r5, #0
   13cb4:	moveq	r5, r3
   13cb8:	b	13b40 <ftello64@plt+0x2470>
   13cbc:	bl	11568 <__errno_location@plt>
   13cc0:	ldr	r2, [pc, #280]	; 13de0 <ftello64@plt+0x2710>
   13cc4:	ldr	r1, [r0]
   13cc8:	mov	r0, r8
   13ccc:	bl	114a8 <error@plt>
   13cd0:	ldr	r7, [r7]
   13cd4:	b	137b4 <ftello64@plt+0x20e4>
   13cd8:	str	r1, [sp]
   13cdc:	ldr	r3, [pc, #224]	; 13dc4 <ftello64@plt+0x26f4>
   13ce0:	ldr	r2, [pc, #252]	; 13de4 <ftello64@plt+0x2714>
   13ce4:	mov	r1, r6
   13ce8:	mov	r0, #1
   13cec:	bl	114a8 <error@plt>
   13cf0:	b	13920 <ftello64@plt+0x2250>
   13cf4:	str	r1, [sp]
   13cf8:	ldr	r3, [pc, #200]	; 13dc8 <ftello64@plt+0x26f8>
   13cfc:	ldr	r2, [pc, #224]	; 13de4 <ftello64@plt+0x2714>
   13d00:	mov	r1, r6
   13d04:	mov	r0, #1
   13d08:	bl	114a8 <error@plt>
   13d0c:	b	139b4 <ftello64@plt+0x22e4>
   13d10:	str	r1, [sp]
   13d14:	ldr	r3, [pc, #184]	; 13dd4 <ftello64@plt+0x2704>
   13d18:	ldr	r2, [pc, #200]	; 13de8 <ftello64@plt+0x2718>
   13d1c:	mov	r1, r6
   13d20:	mov	r0, #1
   13d24:	bl	114a8 <error@plt>
   13d28:	b	138ac <ftello64@plt+0x21dc>
   13d2c:	str	r5, [sp]
   13d30:	ldr	r3, [pc, #132]	; 13dbc <ftello64@plt+0x26ec>
   13d34:	ldr	r2, [pc, #168]	; 13de4 <ftello64@plt+0x2714>
   13d38:	mov	r1, r6
   13d3c:	mov	r0, #1
   13d40:	bl	114a8 <error@plt>
   13d44:	b	139dc <ftello64@plt+0x230c>
   13d48:	str	r5, [sp]
   13d4c:	ldr	r3, [pc, #120]	; 13dcc <ftello64@plt+0x26fc>
   13d50:	ldr	r2, [pc, #140]	; 13de4 <ftello64@plt+0x2714>
   13d54:	mov	r1, r6
   13d58:	mov	r0, #1
   13d5c:	bl	114a8 <error@plt>
   13d60:	b	13948 <ftello64@plt+0x2278>
   13d64:	str	r1, [sp]
   13d68:	ldr	r3, [pc, #96]	; 13dd0 <ftello64@plt+0x2700>
   13d6c:	ldr	r2, [pc, #116]	; 13de8 <ftello64@plt+0x2718>
   13d70:	mov	r1, r6
   13d74:	mov	r0, #1
   13d78:	bl	114a8 <error@plt>
   13d7c:	b	13a04 <ftello64@plt+0x2334>
   13d80:	andeq	r0, r0, r2, lsl #2
   13d84:	tsteq	r0, r3
   13d88:	andeq	r7, r3, r4, asr fp
   13d8c:	strdeq	r7, [r3], -r4
   13d90:	strdeq	r7, [r3], -r0
   13d94:	andeq	r7, r3, ip, ror #23
   13d98:	strdeq	r7, [r3], -ip
   13d9c:	andeq	r3, r2, r0, lsl #18
   13da0:	andeq	r7, r3, r0, lsl #24
   13da4:	andeq	r3, r2, r0, asr sl
   13da8:	strdeq	r7, [r3], -r8
   13dac:			; <UNDEFINED> instruction: 0x000372b4
   13db0:	andeq	r3, r2, r0, ror #22
   13db4:	andeq	r7, r3, r4, lsl #24
   13db8:	andeq	r3, r2, r8, lsr #22
   13dbc:	andeq	r3, r2, ip, lsl #20
   13dc0:	andeq	r3, r2, r0, asr #19
   13dc4:	andeq	r3, r2, r8, lsr #13
   13dc8:	andeq	r3, r2, r8, ror #19
   13dcc:	strdeq	r3, [r2], -r0
   13dd0:	andeq	r3, r2, r0, lsr #20
   13dd4:	andeq	r3, r2, r4, lsl #21
   13dd8:	strdeq	r7, [r3], -r8
   13ddc:	andeq	r3, r2, r0, lsr #22
   13de0:	andeq	r3, r2, ip, ror #18
   13de4:	muleq	r2, ip, r9
   13de8:	andeq	r3, r2, ip, lsr #20
   13dec:	cmp	r0, #0
   13df0:	bxeq	lr
   13df4:	ldr	r3, [pc, #128]	; 13e7c <ftello64@plt+0x27ac>
   13df8:	ldr	r2, [r3]
   13dfc:	cmp	r2, #0
   13e00:	bne	13e60 <ftello64@plt+0x2790>
   13e04:	ldr	r2, [r0, #4]
   13e08:	cmp	r2, #0
   13e0c:	bne	13e24 <ftello64@plt+0x2754>
   13e10:	ldr	r2, [pc, #104]	; 13e80 <ftello64@plt+0x27b0>
   13e14:	mov	r1, #2
   13e18:	str	r1, [r0, #4]
   13e1c:	ldr	r2, [r2]
   13e20:	str	r2, [r0, #12]
   13e24:	ldr	r1, [r3, #8]
   13e28:	ldr	r2, [r3, #4]
   13e2c:	orrs	ip, r1, r2
   13e30:	beq	13e78 <ftello64@plt+0x27a8>
   13e34:	push	{lr}		; (str lr, [sp, #-4]!)
   13e38:	ldr	ip, [r0, #48]	; 0x30
   13e3c:	ldr	lr, [r0, #44]	; 0x2c
   13e40:	orr	r2, ip, r2
   13e44:	orr	r1, lr, r1
   13e48:	mov	ip, #0
   13e4c:	str	r1, [r0, #44]	; 0x2c
   13e50:	str	r2, [r0, #48]	; 0x30
   13e54:	str	ip, [r3, #4]
   13e58:	str	ip, [r3, #8]
   13e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13e60:	ldr	ip, [r0, #4]
   13e64:	mov	r1, #0
   13e68:	orr	r2, r2, ip
   13e6c:	str	r2, [r0, #4]
   13e70:	str	r1, [r3]
   13e74:	b	13e08 <ftello64@plt+0x2738>
   13e78:	bx	lr
   13e7c:	andeq	r7, r3, r4, asr fp
   13e80:	strdeq	r7, [r3], -r4
   13e84:	ldr	r3, [pc, #828]	; 141c8 <ftello64@plt+0x2af8>
   13e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e8c:	sub	sp, sp, #20
   13e90:	ldr	r6, [pc, #820]	; 141cc <ftello64@plt+0x2afc>
   13e94:	ldr	r7, [pc, #820]	; 141d0 <ftello64@plt+0x2b00>
   13e98:	ldr	r5, [r3]
   13e9c:	ldr	ip, [pc, #816]	; 141d4 <ftello64@plt+0x2b04>
   13ea0:	ldr	r3, [r6]
   13ea4:	cmp	r5, #0
   13ea8:	ldr	r2, [r7]
   13eac:	moveq	r5, ip
   13eb0:	cmp	r3, #0
   13eb4:	mov	r4, r6
   13eb8:	mov	r9, r0
   13ebc:	mov	sl, r1
   13ec0:	str	r2, [sp, #12]
   13ec4:	beq	13eec <ftello64@plt+0x281c>
   13ec8:	mov	r1, r3
   13ecc:	b	13edc <ftello64@plt+0x280c>
   13ed0:	ldr	r1, [r4, #12]!
   13ed4:	cmp	r1, #0
   13ed8:	beq	13eec <ftello64@plt+0x281c>
   13edc:	mov	r0, r5
   13ee0:	bl	113a0 <strcmp@plt>
   13ee4:	cmp	r0, #0
   13ee8:	bne	13ed0 <ftello64@plt+0x2800>
   13eec:	ldr	r2, [r4, #8]
   13ef0:	cmp	r2, #0
   13ef4:	beq	14154 <ftello64@plt+0x2a84>
   13ef8:	ldr	r3, [pc, #728]	; 141d8 <ftello64@plt+0x2b08>
   13efc:	ldr	r8, [pc, #728]	; 141dc <ftello64@plt+0x2b0c>
   13f00:	ldr	ip, [pc, #728]	; 141e0 <ftello64@plt+0x2b10>
   13f04:	ldr	r1, [pc, #728]	; 141e4 <ftello64@plt+0x2b14>
   13f08:	ldr	r0, [pc, #728]	; 141e8 <ftello64@plt+0x2b18>
   13f0c:	str	ip, [r3]
   13f10:	str	r2, [r8]
   13f14:	bl	1ac08 <argp_parse@@Base+0xea8>
   13f18:	ldr	r3, [pc, #716]	; 141ec <ftello64@plt+0x2b1c>
   13f1c:	ldr	r4, [pc, #716]	; 141f0 <ftello64@plt+0x2b20>
   13f20:	ldr	lr, [pc, #716]	; 141f4 <ftello64@plt+0x2b24>
   13f24:	ldm	r3, {r0, r1, r2, r3}
   13f28:	add	ip, r4, #56	; 0x38
   13f2c:	ldr	lr, [lr]
   13f30:	add	r5, sp, #12
   13f34:	stm	ip, {r0, r1, r2, r3}
   13f38:	add	r3, sp, #8
   13f3c:	str	ip, [r6, #168]	; 0xa8
   13f40:	mov	r2, sl
   13f44:	stm	sp, {r3, r5}
   13f48:	mov	r1, r9
   13f4c:	mov	r3, #8
   13f50:	ldr	r0, [pc, #672]	; 141f8 <ftello64@plt+0x2b28>
   13f54:	str	lr, [r6, #160]	; 0xa0
   13f58:	bl	19d60 <argp_parse@@Base>
   13f5c:	ldr	r3, [sp, #12]
   13f60:	cmp	r3, #0
   13f64:	beq	13fc0 <ftello64@plt+0x28f0>
   13f68:	ldr	r2, [r4]
   13f6c:	cmp	r2, #0
   13f70:	bne	13fe0 <ftello64@plt+0x2910>
   13f74:	ldr	r2, [r3, #4]
   13f78:	cmp	r2, #0
   13f7c:	ldreq	r1, [r8]
   13f80:	moveq	r2, #2
   13f84:	streq	r1, [r3, #12]
   13f88:	streq	r2, [r3, #4]
   13f8c:	ldr	r1, [r4, #8]
   13f90:	ldr	r2, [r4, #4]
   13f94:	orrs	r0, r1, r2
   13f98:	beq	13fc0 <ftello64@plt+0x28f0>
   13f9c:	ldr	r0, [r3, #48]	; 0x30
   13fa0:	ldr	ip, [r3, #44]	; 0x2c
   13fa4:	orr	r2, r0, r2
   13fa8:	orr	r1, ip, r1
   13fac:	mov	r0, #0
   13fb0:	str	r1, [r3, #44]	; 0x2c
   13fb4:	str	r2, [r3, #48]	; 0x30
   13fb8:	str	r0, [r4, #4]
   13fbc:	str	r0, [r4, #8]
   13fc0:	ldr	r1, [sp, #8]
   13fc4:	cmp	r9, r1
   13fc8:	bgt	13ff8 <ftello64@plt+0x2928>
   13fcc:	ldr	r3, [r7]
   13fd0:	cmp	r3, #0
   13fd4:	beq	14080 <ftello64@plt+0x29b0>
   13fd8:	add	sp, sp, #20
   13fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fe0:	ldr	r0, [r3, #4]
   13fe4:	mov	r1, #0
   13fe8:	orr	r2, r2, r0
   13fec:	str	r2, [r3, #4]
   13ff0:	str	r1, [r4]
   13ff4:	b	13f78 <ftello64@plt+0x28a8>
   13ff8:	add	r2, sl, r1, lsl #2
   13ffc:	mov	r0, r5
   14000:	sub	r1, r9, r1
   14004:	bl	18d6c <ftello64@plt+0x769c>
   14008:	subs	r1, r0, #0
   1400c:	beq	141a4 <ftello64@plt+0x2ad4>
   14010:	ldr	r3, [sp, #12]
   14014:	cmp	r3, #0
   14018:	beq	13fcc <ftello64@plt+0x28fc>
   1401c:	ldr	r2, [r4]
   14020:	cmp	r2, #0
   14024:	bne	14170 <ftello64@plt+0x2aa0>
   14028:	ldr	r2, [r3, #4]
   1402c:	cmp	r2, #0
   14030:	ldreq	r1, [r8]
   14034:	moveq	r2, #2
   14038:	streq	r1, [r3, #12]
   1403c:	streq	r2, [r3, #4]
   14040:	ldr	r1, [r4, #8]
   14044:	ldr	r2, [r4, #4]
   14048:	orrs	r0, r1, r2
   1404c:	beq	13fcc <ftello64@plt+0x28fc>
   14050:	ldr	r0, [r3, #48]	; 0x30
   14054:	ldr	ip, [r3, #44]	; 0x2c
   14058:	orr	r2, r0, r2
   1405c:	orr	r1, ip, r1
   14060:	str	r1, [r3, #44]	; 0x2c
   14064:	str	r2, [r3, #48]	; 0x30
   14068:	ldr	r3, [r7]
   1406c:	mov	r0, #0
   14070:	cmp	r3, #0
   14074:	str	r0, [r4, #4]
   14078:	str	r0, [r4, #8]
   1407c:	bne	13fd8 <ftello64@plt+0x2908>
   14080:	ldr	r3, [pc, #372]	; 141fc <ftello64@plt+0x2b2c>
   14084:	ldr	r3, [r3]
   14088:	blx	r3
   1408c:	subs	r5, r0, #0
   14090:	beq	141b4 <ftello64@plt+0x2ae4>
   14094:	ldr	r9, [pc, #356]	; 14200 <ftello64@plt+0x2b30>
   14098:	add	r5, r5, #8
   1409c:	ldr	r6, [r7]
   140a0:	ldr	sl, [r9]
   140a4:	b	14114 <ftello64@plt+0x2a44>
   140a8:	str	r3, [r9]
   140ac:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   140b0:	subs	r6, r0, #0
   140b4:	str	r0, [r7]
   140b8:	beq	14188 <ftello64@plt+0x2ab8>
   140bc:	ldr	sl, [r9]
   140c0:	ldr	lr, [pc, #316]	; 14204 <ftello64@plt+0x2b34>
   140c4:	add	r5, r5, #8
   140c8:	rsb	r4, sl, sl, lsl #3
   140cc:	ldm	lr!, {r0, r1, r2, r3}
   140d0:	lsl	r4, r4, #3
   140d4:	sub	r4, r4, #56	; 0x38
   140d8:	add	fp, r6, r4
   140dc:	mov	ip, fp
   140e0:	stmia	ip!, {r0, r1, r2, r3}
   140e4:	ldm	lr!, {r0, r1, r2, r3}
   140e8:	stmia	ip!, {r0, r1, r2, r3}
   140ec:	ldm	lr!, {r0, r1, r2, r3}
   140f0:	stmia	ip!, {r0, r1, r2, r3}
   140f4:	ldm	lr, {r0, r1}
   140f8:	stm	ip, {r0, r1}
   140fc:	ldr	r3, [r5, #-12]
   14100:	str	r3, [r6, r4]
   14104:	mov	r3, #2
   14108:	str	r3, [fp, #4]
   1410c:	ldr	r3, [r8]
   14110:	str	r3, [fp, #12]
   14114:	add	r3, sl, #1
   14118:	ldr	r2, [r5, #-8]
   1411c:	rsb	r1, r3, r3, lsl #3
   14120:	cmp	r2, #0
   14124:	mov	r0, r6
   14128:	lsl	r1, r1, #3
   1412c:	bne	140a8 <ftello64@plt+0x29d8>
   14130:	ldr	r2, [r5, #-4]
   14134:	cmp	r2, #0
   14138:	bne	140a8 <ftello64@plt+0x29d8>
   1413c:	mov	r1, sl
   14140:	ldr	r3, [pc, #192]	; 14208 <ftello64@plt+0x2b38>
   14144:	mov	r2, #56	; 0x38
   14148:	bl	11658 <qsort@plt>
   1414c:	add	sp, sp, #20
   14150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14154:	mov	r1, r2
   14158:	mov	r3, r5
   1415c:	ldr	r2, [pc, #168]	; 1420c <ftello64@plt+0x2b3c>
   14160:	mov	r0, #1
   14164:	bl	114a8 <error@plt>
   14168:	ldr	r2, [r4, #8]
   1416c:	b	13ef8 <ftello64@plt+0x2828>
   14170:	ldr	r0, [r3, #4]
   14174:	mov	r1, #0
   14178:	orr	r2, r2, r0
   1417c:	str	r2, [r3, #4]
   14180:	str	r1, [r4]
   14184:	b	1402c <ftello64@plt+0x295c>
   14188:	bl	11568 <__errno_location@plt>
   1418c:	ldr	r2, [pc, #124]	; 14210 <ftello64@plt+0x2b40>
   14190:	ldr	r1, [r0]
   14194:	mov	r0, #1
   14198:	bl	114a8 <error@plt>
   1419c:	ldr	r6, [r7]
   141a0:	b	140bc <ftello64@plt+0x29ec>
   141a4:	ldr	r2, [pc, #104]	; 14214 <ftello64@plt+0x2b44>
   141a8:	mov	r0, #1
   141ac:	bl	114a8 <error@plt>
   141b0:	b	14010 <ftello64@plt+0x2940>
   141b4:	ldr	r2, [pc, #92]	; 14218 <ftello64@plt+0x2b48>
   141b8:	mov	r1, r5
   141bc:	mov	r0, #1
   141c0:	bl	114a8 <error@plt>
   141c4:	b	14094 <ftello64@plt+0x29c4>
   141c8:	strdeq	r7, [r3], -r8
   141cc:			; <UNDEFINED> instruction: 0x000372b4
   141d0:	andeq	r7, r3, ip, ror #23
   141d4:	andeq	r3, r2, r0, lsr #22
   141d8:	andeq	r7, r3, r0, lsr #24
   141dc:	strdeq	r7, [r3], -r4
   141e0:	andeq	r3, r2, r8, ror #22
   141e4:	andeq	r7, r3, r4, asr #6
   141e8:	andeq	r3, r2, r0, lsl #23
   141ec:	muleq	r3, r8, sl
   141f0:	andeq	r7, r3, r4, asr fp
   141f4:	strdeq	r7, [r3], -r4
   141f8:	andeq	r7, r3, ip, asr #6
   141fc:	muleq	r3, r4, sl
   14200:	strdeq	r7, [r3], -r0
   14204:	andeq	r3, r2, r0, lsl #18
   14208:	andeq	r2, r1, ip, lsr #24
   1420c:	andeq	r3, r2, r8, lsr #22
   14210:	andeq	r3, r2, ip, ror #18
   14214:	andeq	r3, r2, ip, lsl #23
   14218:	andeq	r3, r2, r0, lsr #23
   1421c:	bx	lr
   14220:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14224:	mov	r4, r1
   14228:	mov	r5, r2
   1422c:	bl	11568 <__errno_location@plt>
   14230:	mov	r2, #0
   14234:	cmp	r4, #0
   14238:	str	r2, [r0]
   1423c:	ble	142a4 <ftello64@plt+0x2bd4>
   14240:	ldr	r0, [r5]
   14244:	mov	r1, r2
   14248:	bl	113ac <strtol@plt>
   1424c:	subs	r4, r0, #0
   14250:	ble	142a4 <ftello64@plt+0x2bd4>
   14254:	ldr	r5, [pc, #116]	; 142d0 <ftello64@plt+0x2c00>
   14258:	ldr	r2, [r5]
   1425c:	ldr	r3, [r2]
   14260:	cmp	r4, r3
   14264:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   14268:	ldr	r9, [pc, #100]	; 142d4 <ftello64@plt+0x2c04>
   1426c:	ldr	r8, [pc, #100]	; 142d8 <ftello64@plt+0x2c08>
   14270:	mov	r7, #32
   14274:	mov	r6, #1
   14278:	add	r3, r3, #1
   1427c:	str	r3, [r2]
   14280:	ldr	r1, [r9]
   14284:	mov	r0, r7
   14288:	bl	11628 <putc@plt>
   1428c:	ldr	r2, [r5]
   14290:	str	r6, [r8]
   14294:	ldr	r3, [r2]
   14298:	cmp	r3, r4
   1429c:	blt	14278 <ftello64@plt+0x2ba8>
   142a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142a4:	ldr	r5, [pc, #36]	; 142d0 <ftello64@plt+0x2c00>
   142a8:	ldr	r2, [r5]
   142ac:	ldr	r3, [r2]
   142b0:	cmp	r3, #0
   142b4:	add	r4, r3, #7
   142b8:	movge	r4, r3
   142bc:	bic	r4, r4, #7
   142c0:	add	r4, r4, #8
   142c4:	cmp	r4, r3
   142c8:	bgt	14268 <ftello64@plt+0x2b98>
   142cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142d0:	andeq	r7, r3, r8, lsl r5
   142d4:	andeq	r7, r3, r4, lsl ip
   142d8:	andeq	r7, r3, r8, lsl #24
   142dc:	cmp	r1, #0
   142e0:	push	{r4, lr}
   142e4:	movle	r0, #0
   142e8:	ble	14300 <ftello64@plt+0x2c30>
   142ec:	mov	r3, r2
   142f0:	mov	r2, #0
   142f4:	ldr	r0, [r3]
   142f8:	mov	r1, r2
   142fc:	bl	11538 <strtoul@plt>
   14300:	bl	1152c <exit@plt>
   14304:	push	{r4, r5, r6, lr}
   14308:	mov	r4, r0
   1430c:	ldr	r0, [r0]
   14310:	bl	11694 <if_nametoindex@plt>
   14314:	subs	r5, r0, #0
   14318:	bne	14334 <ftello64@plt+0x2c64>
   1431c:	bl	11568 <__errno_location@plt>
   14320:	ldr	r3, [r4]
   14324:	ldr	r2, [pc, #56]	; 14364 <ftello64@plt+0x2c94>
   14328:	ldr	r1, [r0]
   1432c:	mov	r0, #1
   14330:	bl	114a8 <error@plt>
   14334:	mov	r1, r5
   14338:	ldr	r0, [pc, #40]	; 14368 <ftello64@plt+0x2c98>
   1433c:	bl	113b8 <printf@plt>
   14340:	ldr	r3, [pc, #36]	; 1436c <ftello64@plt+0x2c9c>
   14344:	ldr	r1, [pc, #36]	; 14370 <ftello64@plt+0x2ca0>
   14348:	mov	ip, #1
   1434c:	ldr	r2, [r3]
   14350:	ldr	r3, [r2]
   14354:	add	r0, r3, r0
   14358:	str	r0, [r2]
   1435c:	str	ip, [r1]
   14360:	pop	{r4, r5, r6, pc}
   14364:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   14368:	andeq	r4, r2, r8, asr #31
   1436c:	andeq	r7, r3, r8, lsl r5
   14370:	andeq	r7, r3, r8, lsl #24
   14374:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14378:	mov	r0, #40	; 0x28
   1437c:	ldr	r8, [pc, #128]	; 14404 <ftello64@plt+0x2d34>
   14380:	ldr	r9, [pc, #128]	; 14408 <ftello64@plt+0x2d38>
   14384:	ldr	r6, [pc, #128]	; 1440c <ftello64@plt+0x2d3c>
   14388:	ldr	r5, [pc, #128]	; 14410 <ftello64@plt+0x2d40>
   1438c:	mov	r7, #0
   14390:	mov	r4, #1
   14394:	b	143b8 <ftello64@plt+0x2ce8>
   14398:	ldr	r3, [r9]
   1439c:	str	r7, [r3]
   143a0:	ldr	r1, [r6]
   143a4:	bl	11628 <putc@plt>
   143a8:	ldrb	r0, [r8, #1]!
   143ac:	str	r4, [r5]
   143b0:	cmp	r0, #0
   143b4:	beq	14400 <ftello64@plt+0x2d30>
   143b8:	cmp	r0, #9
   143bc:	beq	143dc <ftello64@plt+0x2d0c>
   143c0:	cmp	r0, #10
   143c4:	beq	14398 <ftello64@plt+0x2cc8>
   143c8:	ldr	r2, [r9]
   143cc:	ldr	r3, [r2]
   143d0:	add	r3, r3, #1
   143d4:	str	r3, [r2]
   143d8:	b	143a0 <ftello64@plt+0x2cd0>
   143dc:	ldr	r2, [r9]
   143e0:	ldr	r3, [r2]
   143e4:	add	r1, r3, #7
   143e8:	cmp	r3, #0
   143ec:	movlt	r3, r1
   143f0:	bic	r3, r3, #7
   143f4:	add	r3, r3, #8
   143f8:	str	r3, [r2]
   143fc:	b	143a0 <ftello64@plt+0x2cd0>
   14400:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14404:	andeq	r4, r2, ip, asr #31
   14408:	andeq	r7, r3, r8, lsl r5
   1440c:	andeq	r7, r3, r4, lsl ip
   14410:	andeq	r7, r3, r8, lsl #24
   14414:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14418:	mov	r0, #40	; 0x28
   1441c:	ldr	r8, [pc, #128]	; 144a4 <ftello64@plt+0x2dd4>
   14420:	ldr	r9, [pc, #128]	; 144a8 <ftello64@plt+0x2dd8>
   14424:	ldr	r6, [pc, #128]	; 144ac <ftello64@plt+0x2ddc>
   14428:	ldr	r5, [pc, #128]	; 144b0 <ftello64@plt+0x2de0>
   1442c:	mov	r7, #0
   14430:	mov	r4, #1
   14434:	b	14458 <ftello64@plt+0x2d88>
   14438:	ldr	r3, [r9]
   1443c:	str	r7, [r3]
   14440:	ldr	r1, [r6]
   14444:	bl	11628 <putc@plt>
   14448:	ldrb	r0, [r8, #1]!
   1444c:	str	r4, [r5]
   14450:	cmp	r0, #0
   14454:	beq	144a0 <ftello64@plt+0x2dd0>
   14458:	cmp	r0, #9
   1445c:	beq	1447c <ftello64@plt+0x2dac>
   14460:	cmp	r0, #10
   14464:	beq	14438 <ftello64@plt+0x2d68>
   14468:	ldr	r2, [r9]
   1446c:	ldr	r3, [r2]
   14470:	add	r3, r3, #1
   14474:	str	r3, [r2]
   14478:	b	14440 <ftello64@plt+0x2d70>
   1447c:	ldr	r2, [r9]
   14480:	ldr	r3, [r2]
   14484:	add	r1, r3, #7
   14488:	cmp	r3, #0
   1448c:	movlt	r3, r1
   14490:	bic	r3, r3, #7
   14494:	add	r3, r3, #8
   14498:	str	r3, [r2]
   1449c:	b	14440 <ftello64@plt+0x2d70>
   144a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144a4:	andeq	r4, r2, ip, asr #31
   144a8:	andeq	r7, r3, r8, lsl r5
   144ac:	andeq	r7, r3, r4, lsl ip
   144b0:	andeq	r7, r3, r8, lsl #24
   144b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144b8:	ldr	r8, [r0]
   144bc:	ldrb	r0, [r8]
   144c0:	cmp	r0, #0
   144c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   144c8:	ldr	r9, [pc, #124]	; 1454c <ftello64@plt+0x2e7c>
   144cc:	ldr	r6, [pc, #124]	; 14550 <ftello64@plt+0x2e80>
   144d0:	ldr	r5, [pc, #124]	; 14554 <ftello64@plt+0x2e84>
   144d4:	mov	r7, #0
   144d8:	mov	r4, #1
   144dc:	b	14500 <ftello64@plt+0x2e30>
   144e0:	ldr	r3, [r9]
   144e4:	str	r7, [r3]
   144e8:	ldr	r1, [r6]
   144ec:	bl	11628 <putc@plt>
   144f0:	str	r4, [r5]
   144f4:	ldrb	r0, [r8, #1]!
   144f8:	cmp	r0, #0
   144fc:	beq	14548 <ftello64@plt+0x2e78>
   14500:	cmp	r0, #9
   14504:	beq	14524 <ftello64@plt+0x2e54>
   14508:	cmp	r0, #10
   1450c:	beq	144e0 <ftello64@plt+0x2e10>
   14510:	ldr	r2, [r9]
   14514:	ldr	r3, [r2]
   14518:	add	r3, r3, #1
   1451c:	str	r3, [r2]
   14520:	b	144e8 <ftello64@plt+0x2e18>
   14524:	ldr	r2, [r9]
   14528:	ldr	r3, [r2]
   1452c:	add	r1, r3, #7
   14530:	cmp	r3, #0
   14534:	movlt	r3, r1
   14538:	bic	r3, r3, #7
   1453c:	add	r3, r3, #8
   14540:	str	r3, [r2]
   14544:	b	144e8 <ftello64@plt+0x2e18>
   14548:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1454c:	andeq	r7, r3, r8, lsl r5
   14550:	andeq	r7, r3, r4, lsl ip
   14554:	andeq	r7, r3, r8, lsl #24
   14558:	ldr	r3, [pc, #148]	; 145f4 <ftello64@plt+0x2f24>
   1455c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14560:	ldr	r8, [r3]
   14564:	ldrb	r0, [r8]
   14568:	cmp	r0, #0
   1456c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14570:	ldr	r9, [pc, #128]	; 145f8 <ftello64@plt+0x2f28>
   14574:	ldr	r6, [pc, #128]	; 145fc <ftello64@plt+0x2f2c>
   14578:	ldr	r5, [pc, #128]	; 14600 <ftello64@plt+0x2f30>
   1457c:	mov	r7, #0
   14580:	mov	r4, #1
   14584:	b	145a8 <ftello64@plt+0x2ed8>
   14588:	ldr	r3, [r9]
   1458c:	str	r7, [r3]
   14590:	ldr	r1, [r6]
   14594:	bl	11628 <putc@plt>
   14598:	str	r4, [r5]
   1459c:	ldrb	r0, [r8, #1]!
   145a0:	cmp	r0, #0
   145a4:	beq	145f0 <ftello64@plt+0x2f20>
   145a8:	cmp	r0, #9
   145ac:	beq	145cc <ftello64@plt+0x2efc>
   145b0:	cmp	r0, #10
   145b4:	beq	14588 <ftello64@plt+0x2eb8>
   145b8:	ldr	r2, [r9]
   145bc:	ldr	r3, [r2]
   145c0:	add	r3, r3, #1
   145c4:	str	r3, [r2]
   145c8:	b	14590 <ftello64@plt+0x2ec0>
   145cc:	ldr	r2, [r9]
   145d0:	ldr	r3, [r2]
   145d4:	add	r1, r3, #7
   145d8:	cmp	r3, #0
   145dc:	movlt	r3, r1
   145e0:	bic	r3, r3, #7
   145e4:	add	r3, r3, #8
   145e8:	str	r3, [r2]
   145ec:	b	14590 <ftello64@plt+0x2ec0>
   145f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   145f4:	andeq	r7, r3, r4, asr #23
   145f8:	andeq	r7, r3, r8, lsl r5
   145fc:	andeq	r7, r3, r4, lsl ip
   14600:	andeq	r7, r3, r8, lsl #24
   14604:	ldr	r3, [pc, #44]	; 14638 <ftello64@plt+0x2f68>
   14608:	ldr	r1, [pc, #44]	; 1463c <ftello64@plt+0x2f6c>
   1460c:	mov	r2, #0
   14610:	ldr	r3, [r3]
   14614:	push	{r4, lr}
   14618:	mov	r0, #10
   1461c:	ldr	r1, [r1]
   14620:	str	r2, [r3]
   14624:	bl	11628 <putc@plt>
   14628:	ldr	r3, [pc, #16]	; 14640 <ftello64@plt+0x2f70>
   1462c:	mov	r2, #1
   14630:	str	r2, [r3]
   14634:	pop	{r4, pc}
   14638:	andeq	r7, r3, r8, lsl r5
   1463c:	andeq	r7, r3, r4, lsl ip
   14640:	andeq	r7, r3, r8, lsl #24
   14644:	cmp	r1, #0
   14648:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1464c:	ldreq	r4, [r0]
   14650:	ldrne	r4, [r2]
   14654:	mov	r0, r4
   14658:	bl	12c5c <ftello64@plt+0x158c>
   1465c:	subs	r5, r0, #0
   14660:	beq	146f8 <ftello64@plt+0x3028>
   14664:	ldr	r8, [r5, #4]
   14668:	ldrb	r0, [r8]
   1466c:	cmp	r0, #0
   14670:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14674:	ldr	r9, [pc, #152]	; 14714 <ftello64@plt+0x3044>
   14678:	ldr	r6, [pc, #152]	; 14718 <ftello64@plt+0x3048>
   1467c:	ldr	r5, [pc, #152]	; 1471c <ftello64@plt+0x304c>
   14680:	mov	r7, #0
   14684:	mov	r4, #1
   14688:	b	146ac <ftello64@plt+0x2fdc>
   1468c:	ldr	r3, [r9]
   14690:	str	r7, [r3]
   14694:	ldr	r1, [r6]
   14698:	bl	11628 <putc@plt>
   1469c:	str	r4, [r5]
   146a0:	ldrb	r0, [r8, #1]!
   146a4:	cmp	r0, #0
   146a8:	beq	146f4 <ftello64@plt+0x3024>
   146ac:	cmp	r0, #9
   146b0:	beq	146d0 <ftello64@plt+0x3000>
   146b4:	cmp	r0, #10
   146b8:	beq	1468c <ftello64@plt+0x2fbc>
   146bc:	ldr	r2, [r9]
   146c0:	ldr	r3, [r2]
   146c4:	add	r3, r3, #1
   146c8:	str	r3, [r2]
   146cc:	b	14694 <ftello64@plt+0x2fc4>
   146d0:	ldr	r2, [r9]
   146d4:	ldr	r3, [r2]
   146d8:	add	r1, r3, #7
   146dc:	cmp	r3, #0
   146e0:	movlt	r3, r1
   146e4:	bic	r3, r3, #7
   146e8:	add	r3, r3, #8
   146ec:	str	r3, [r2]
   146f0:	b	14694 <ftello64@plt+0x2fc4>
   146f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   146f8:	bl	11568 <__errno_location@plt>
   146fc:	mov	r3, r4
   14700:	ldr	r2, [pc, #24]	; 14720 <ftello64@plt+0x3050>
   14704:	ldr	r1, [r0]
   14708:	mov	r0, #1
   1470c:	bl	114a8 <error@plt>
   14710:	b	14664 <ftello64@plt+0x2f94>
   14714:	andeq	r7, r3, r8, lsl r5
   14718:	andeq	r7, r3, r4, lsl ip
   1471c:	andeq	r7, r3, r8, lsl #24
   14720:	ldrdeq	r4, [r2], -r8
   14724:	cmp	r1, #0
   14728:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1472c:	ldreq	r4, [r0]
   14730:	ldrne	r4, [r2]
   14734:	mov	r0, r4
   14738:	bl	12c5c <ftello64@plt+0x158c>
   1473c:	subs	r5, r0, #0
   14740:	beq	147d8 <ftello64@plt+0x3108>
   14744:	ldr	r8, [r5, #8]
   14748:	ldrb	r0, [r8]
   1474c:	cmp	r0, #0
   14750:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14754:	ldr	r9, [pc, #152]	; 147f4 <ftello64@plt+0x3124>
   14758:	ldr	r6, [pc, #152]	; 147f8 <ftello64@plt+0x3128>
   1475c:	ldr	r5, [pc, #152]	; 147fc <ftello64@plt+0x312c>
   14760:	mov	r7, #0
   14764:	mov	r4, #1
   14768:	b	1478c <ftello64@plt+0x30bc>
   1476c:	ldr	r3, [r9]
   14770:	str	r7, [r3]
   14774:	ldr	r1, [r6]
   14778:	bl	11628 <putc@plt>
   1477c:	str	r4, [r5]
   14780:	ldrb	r0, [r8, #1]!
   14784:	cmp	r0, #0
   14788:	beq	147d4 <ftello64@plt+0x3104>
   1478c:	cmp	r0, #9
   14790:	beq	147b0 <ftello64@plt+0x30e0>
   14794:	cmp	r0, #10
   14798:	beq	1476c <ftello64@plt+0x309c>
   1479c:	ldr	r2, [r9]
   147a0:	ldr	r3, [r2]
   147a4:	add	r3, r3, #1
   147a8:	str	r3, [r2]
   147ac:	b	14774 <ftello64@plt+0x30a4>
   147b0:	ldr	r2, [r9]
   147b4:	ldr	r3, [r2]
   147b8:	add	r1, r3, #7
   147bc:	cmp	r3, #0
   147c0:	movlt	r3, r1
   147c4:	bic	r3, r3, #7
   147c8:	add	r3, r3, #8
   147cc:	str	r3, [r2]
   147d0:	b	14774 <ftello64@plt+0x30a4>
   147d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147d8:	bl	11568 <__errno_location@plt>
   147dc:	mov	r3, r4
   147e0:	ldr	r2, [pc, #24]	; 14800 <ftello64@plt+0x3130>
   147e4:	ldr	r1, [r0]
   147e8:	mov	r0, #1
   147ec:	bl	114a8 <error@plt>
   147f0:	b	14744 <ftello64@plt+0x3074>
   147f4:	andeq	r7, r3, r8, lsl r5
   147f8:	andeq	r7, r3, r4, lsl ip
   147fc:	andeq	r7, r3, r8, lsl #24
   14800:	ldrdeq	r4, [r2], -r8
   14804:	ldr	r2, [pc, #64]	; 1484c <ftello64@plt+0x317c>
   14808:	ldr	r3, [pc, #64]	; 14850 <ftello64@plt+0x3180>
   1480c:	push	{r4, lr}
   14810:	mov	r0, #9
   14814:	ldr	r2, [r2]
   14818:	ldr	r1, [r3]
   1481c:	ldr	r3, [r2]
   14820:	add	ip, r3, #7
   14824:	cmp	r3, #0
   14828:	movlt	r3, ip
   1482c:	bic	r3, r3, #7
   14830:	add	r3, r3, #8
   14834:	str	r3, [r2]
   14838:	bl	11628 <putc@plt>
   1483c:	ldr	r3, [pc, #16]	; 14854 <ftello64@plt+0x3184>
   14840:	mov	r2, #1
   14844:	str	r2, [r3]
   14848:	pop	{r4, pc}
   1484c:	andeq	r7, r3, r8, lsl r5
   14850:	andeq	r7, r3, r4, lsl ip
   14854:	andeq	r7, r3, r8, lsl #24
   14858:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1485c:	mov	r5, r0
   14860:	ldr	r1, [r0, #20]
   14864:	ldr	r4, [r0, #16]
   14868:	add	r1, r1, #1
   1486c:	str	r1, [r0, #20]
   14870:	ldrb	sl, [r4]
   14874:	ldr	r9, [pc, #444]	; 14a38 <ftello64@plt+0x3368>
   14878:	ldr	r8, [pc, #444]	; 14a3c <ftello64@plt+0x336c>
   1487c:	ldr	r7, [pc, #444]	; 14a40 <ftello64@plt+0x3370>
   14880:	add	fp, sp, #36	; 0x24
   14884:	cmp	sl, #0
   14888:	beq	148d8 <ftello64@plt+0x3208>
   1488c:	cmp	r1, #1
   14890:	movgt	r3, #0
   14894:	movle	r3, #1
   14898:	cmp	sl, #125	; 0x7d
   1489c:	moveq	r2, r3
   148a0:	orrne	r2, r3, #1
   148a4:	cmp	r2, #0
   148a8:	beq	148d8 <ftello64@plt+0x3208>
   148ac:	cmp	sl, #36	; 0x24
   148b0:	beq	148f4 <ftello64@plt+0x3224>
   148b4:	ldrb	sl, [r4, #1]!
   148b8:	cmp	sl, #36	; 0x24
   148bc:	cmpne	sl, #0
   148c0:	beq	148ec <ftello64@plt+0x321c>
   148c4:	cmp	sl, #125	; 0x7d
   148c8:	moveq	sl, r3
   148cc:	orrne	sl, r3, #1
   148d0:	cmp	sl, #0
   148d4:	bne	148b4 <ftello64@plt+0x31e4>
   148d8:	sub	r1, r1, #1
   148dc:	str	r1, [r5, #20]
   148e0:	str	r4, [r5, #16]
   148e4:	sub	sp, fp, #36	; 0x24
   148e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148ec:	cmp	sl, #36	; 0x24
   148f0:	bne	148d8 <ftello64@plt+0x3208>
   148f4:	ldrb	r3, [r4, #1]
   148f8:	cmp	r3, #123	; 0x7b
   148fc:	bne	14988 <ftello64@plt+0x32b8>
   14900:	add	r6, r4, #2
   14904:	mov	r0, r6
   14908:	mov	r1, #125	; 0x7d
   1490c:	bl	11550 <strchr@plt>
   14910:	cmp	r0, #0
   14914:	beq	149a0 <ftello64@plt+0x32d0>
   14918:	sub	sl, r0, r6
   1491c:	add	r3, sl, #15
   14920:	bic	r3, r3, #7
   14924:	sub	sp, sp, r3
   14928:	mov	r3, sp
   1492c:	mov	r1, r6
   14930:	lsr	r6, r3, #3
   14934:	add	r4, r0, #1
   14938:	mov	r2, sl
   1493c:	lsl	r0, r6, #3
   14940:	bl	1140c <memcpy@plt>
   14944:	mov	r3, #0
   14948:	strb	r3, [sl, r6, lsl #3]
   1494c:	str	r4, [r5, #16]
   14950:	ldrb	sl, [r4]
   14954:	b	14970 <ftello64@plt+0x32a0>
   14958:	str	r3, [r5, #16]
   1495c:	bl	14858 <ftello64@plt+0x3188>
   14960:	ldr	r4, [r5, #16]
   14964:	ldrb	sl, [r4]
   14968:	cmp	sl, #125	; 0x7d
   1496c:	beq	14994 <ftello64@plt+0x32c4>
   14970:	cmp	sl, #123	; 0x7b
   14974:	add	r3, r4, #1
   14978:	mov	r0, r5
   1497c:	beq	14958 <ftello64@plt+0x3288>
   14980:	ldr	r1, [r5, #20]
   14984:	b	14884 <ftello64@plt+0x31b4>
   14988:	ldrb	sl, [r4, #2]
   1498c:	add	r4, r4, #2
   14990:	b	14884 <ftello64@plt+0x31b4>
   14994:	add	r4, r4, #1
   14998:	str	r4, [r5, #16]
   1499c:	b	14950 <ftello64@plt+0x3280>
   149a0:	mov	r6, r4
   149a4:	mov	r0, sl
   149a8:	b	149dc <ftello64@plt+0x330c>
   149ac:	cmp	r0, #10
   149b0:	bne	14a08 <ftello64@plt+0x3338>
   149b4:	ldr	r3, [r9]
   149b8:	mov	r2, #0
   149bc:	str	r2, [r3]
   149c0:	ldr	r1, [r8]
   149c4:	bl	11628 <putc@plt>
   149c8:	mov	r3, #1
   149cc:	str	r3, [r7]
   149d0:	ldrb	r0, [r6, #1]!
   149d4:	cmp	r0, #0
   149d8:	beq	14a1c <ftello64@plt+0x334c>
   149dc:	cmp	r0, #9
   149e0:	bne	149ac <ftello64@plt+0x32dc>
   149e4:	ldr	r2, [r9]
   149e8:	ldr	r3, [r2]
   149ec:	add	r1, r3, #7
   149f0:	cmp	r3, #0
   149f4:	movlt	r3, r1
   149f8:	bic	r3, r3, #7
   149fc:	add	r3, r3, #8
   14a00:	str	r3, [r2]
   14a04:	b	149c0 <ftello64@plt+0x32f0>
   14a08:	ldr	r2, [r9]
   14a0c:	ldr	r3, [r2]
   14a10:	add	r3, r3, #1
   14a14:	str	r3, [r2]
   14a18:	b	149c0 <ftello64@plt+0x32f0>
   14a1c:	mov	r0, r4
   14a20:	mov	r1, #0
   14a24:	bl	11550 <strchr@plt>
   14a28:	ldr	r1, [r5, #20]
   14a2c:	mov	r4, r0
   14a30:	ldrb	sl, [r0]
   14a34:	b	14884 <ftello64@plt+0x31b4>
   14a38:	andeq	r7, r3, r8, lsl r5
   14a3c:	andeq	r7, r3, r4, lsl ip
   14a40:	andeq	r7, r3, r8, lsl #24
   14a44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a48:	add	fp, sp, #32
   14a4c:	sub	sp, sp, #28
   14a50:	ldr	r2, [r0, #20]
   14a54:	ldr	r4, [r0, #16]
   14a58:	add	r2, r2, #1
   14a5c:	str	r2, [r0, #20]
   14a60:	ldrb	r6, [r4]
   14a64:	mov	sl, r0
   14a68:	ldr	r5, [pc, #1172]	; 14f04 <ftello64@plt+0x3834>
   14a6c:	cmp	r6, #0
   14a70:	ldr	r8, [pc, #1168]	; 14f08 <ftello64@plt+0x3838>
   14a74:	ldr	r9, [pc, #1168]	; 14f0c <ftello64@plt+0x383c>
   14a78:	beq	14bc8 <ftello64@plt+0x34f8>
   14a7c:	subs	r3, r6, #125	; 0x7d
   14a80:	movne	r3, #1
   14a84:	cmp	r2, #1
   14a88:	orrle	r3, r3, #1
   14a8c:	cmp	r3, #0
   14a90:	beq	14bc8 <ftello64@plt+0x34f8>
   14a94:	cmp	r6, #36	; 0x24
   14a98:	movne	r7, #1
   14a9c:	movne	r0, r6
   14aa0:	bne	14af0 <ftello64@plt+0x3420>
   14aa4:	b	14b44 <ftello64@plt+0x3474>
   14aa8:	ldr	r3, [r5]
   14aac:	mov	r2, #0
   14ab0:	str	r2, [r3]
   14ab4:	ldr	r1, [r8]
   14ab8:	bl	11628 <putc@plt>
   14abc:	str	r7, [r9]
   14ac0:	ldrb	r0, [r4, #1]!
   14ac4:	cmp	r0, #36	; 0x24
   14ac8:	cmpne	r0, #0
   14acc:	beq	14b38 <ftello64@plt+0x3468>
   14ad0:	ldr	r2, [sl, #20]
   14ad4:	cmp	r2, #1
   14ad8:	movgt	r3, #0
   14adc:	movle	r3, #1
   14ae0:	cmp	r0, #125	; 0x7d
   14ae4:	orrne	r3, r3, #1
   14ae8:	cmp	r3, #0
   14aec:	beq	14bc8 <ftello64@plt+0x34f8>
   14af0:	cmp	r0, #9
   14af4:	beq	14b14 <ftello64@plt+0x3444>
   14af8:	cmp	r0, #10
   14afc:	beq	14aa8 <ftello64@plt+0x33d8>
   14b00:	ldr	r2, [r5]
   14b04:	ldr	r3, [r2]
   14b08:	add	r3, r3, #1
   14b0c:	str	r3, [r2]
   14b10:	b	14ab4 <ftello64@plt+0x33e4>
   14b14:	ldr	r2, [r5]
   14b18:	ldr	r3, [r2]
   14b1c:	add	r1, r3, #7
   14b20:	cmp	r3, #0
   14b24:	movlt	r3, r1
   14b28:	bic	r3, r3, #7
   14b2c:	add	r3, r3, #8
   14b30:	str	r3, [r2]
   14b34:	b	14ab4 <ftello64@plt+0x33e4>
   14b38:	cmp	r0, #36	; 0x24
   14b3c:	mov	r6, r0
   14b40:	bne	14efc <ftello64@plt+0x382c>
   14b44:	ldrb	r0, [r4, #1]
   14b48:	cmp	r0, #123	; 0x7b
   14b4c:	beq	14bdc <ftello64@plt+0x350c>
   14b50:	cmp	r0, #125	; 0x7d
   14b54:	beq	14de8 <ftello64@plt+0x3718>
   14b58:	cmp	r0, #36	; 0x24
   14b5c:	beq	14de8 <ftello64@plt+0x3718>
   14b60:	ldr	r2, [r5]
   14b64:	ldr	r1, [r8]
   14b68:	mov	r0, #36	; 0x24
   14b6c:	ldr	r3, [r2]
   14b70:	add	r3, r3, #1
   14b74:	str	r3, [r2]
   14b78:	bl	11628 <putc@plt>
   14b7c:	mov	r3, #1
   14b80:	str	r3, [r9]
   14b84:	ldrb	r0, [r4, #1]
   14b88:	cmp	r0, #9
   14b8c:	beq	14dfc <ftello64@plt+0x372c>
   14b90:	cmp	r0, #10
   14b94:	bne	14de8 <ftello64@plt+0x3718>
   14b98:	ldr	r3, [r5]
   14b9c:	mov	r2, #0
   14ba0:	str	r2, [r3]
   14ba4:	ldr	r1, [r8]
   14ba8:	add	r4, r4, #2
   14bac:	bl	11628 <putc@plt>
   14bb0:	mov	r3, #1
   14bb4:	str	r3, [r9]
   14bb8:	ldrb	r6, [r4]
   14bbc:	ldr	r2, [sl, #20]
   14bc0:	cmp	r6, #0
   14bc4:	bne	14a7c <ftello64@plt+0x33ac>
   14bc8:	sub	r2, r2, #1
   14bcc:	str	r2, [sl, #20]
   14bd0:	str	r4, [sl, #16]
   14bd4:	sub	sp, fp, #32
   14bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bdc:	add	r3, r4, #2
   14be0:	mov	r0, r3
   14be4:	mov	r1, #125	; 0x7d
   14be8:	str	r3, [fp, #-40]	; 0xffffffd8
   14bec:	bl	11550 <strchr@plt>
   14bf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14bf4:	subs	r7, r0, #0
   14bf8:	moveq	r7, r4
   14bfc:	moveq	r0, r6
   14c00:	beq	14da8 <ftello64@plt+0x36d8>
   14c04:	sub	r4, r7, r3
   14c08:	add	r2, r4, #15
   14c0c:	bic	r2, r2, #7
   14c10:	sub	sp, sp, r2
   14c14:	mov	r1, r3
   14c18:	mov	r3, sp
   14c1c:	mov	r2, r4
   14c20:	lsr	r6, r3, #3
   14c24:	lsl	r3, r6, #3
   14c28:	mov	r0, r3
   14c2c:	str	r3, [fp, #-52]	; 0xffffffcc
   14c30:	bl	1140c <memcpy@plt>
   14c34:	mov	r3, #0
   14c38:	strb	r3, [r4, r6, lsl #3]
   14c3c:	mov	r0, r7
   14c40:	bl	11544 <strlen@plt>
   14c44:	ldrb	r3, [r7, #1]
   14c48:	add	r4, r7, #1
   14c4c:	cmp	r3, #123	; 0x7b
   14c50:	lsr	r3, r0, #1
   14c54:	add	r3, r3, #14
   14c58:	bic	r3, r3, #7
   14c5c:	sub	sp, sp, r3
   14c60:	str	sp, [fp, #-56]	; 0xffffffc8
   14c64:	bne	14eec <ftello64@plt+0x381c>
   14c68:	sub	r3, sp, #4
   14c6c:	mov	r6, #0
   14c70:	str	r3, [fp, #-40]	; 0xffffffd8
   14c74:	str	r6, [fp, #-44]	; 0xffffffd4
   14c78:	b	14c84 <ftello64@plt+0x35b4>
   14c7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14c80:	str	r3, [fp, #-44]	; 0xffffffd4
   14c84:	add	r6, r4, #1
   14c88:	mov	r0, sl
   14c8c:	str	r6, [sl, #16]
   14c90:	bl	14858 <ftello64@plt+0x3188>
   14c94:	ldr	r4, [sl, #16]
   14c98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14c9c:	sub	r7, r4, r6
   14ca0:	add	r3, r3, #1
   14ca4:	add	r0, r7, #1
   14ca8:	str	r3, [fp, #-48]	; 0xffffffd0
   14cac:	bl	1c3f4 <_obstack_memory_used@@Base+0x11f0>
   14cb0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   14cb4:	mov	r2, r7
   14cb8:	mov	r1, r6
   14cbc:	str	r0, [ip, #4]!
   14cc0:	str	ip, [fp, #-40]	; 0xffffffd8
   14cc4:	bl	1140c <memcpy@plt>
   14cc8:	mov	r2, #0
   14ccc:	strb	r2, [r0, r7]
   14cd0:	ldrb	r3, [r4]
   14cd4:	cmp	r3, #125	; 0x7d
   14cd8:	ldrbeq	r3, [r4, #1]
   14cdc:	addeq	r4, r4, #1
   14ce0:	cmp	r3, #123	; 0x7b
   14ce4:	beq	14c7c <ftello64@plt+0x35ac>
   14ce8:	ldr	r6, [fp, #-44]	; 0xffffffd4
   14cec:	ldr	r0, [r5, #4]
   14cf0:	cmp	r0, #0
   14cf4:	beq	14e24 <ftello64@plt+0x3754>
   14cf8:	ldr	r7, [pc, #528]	; 14f10 <ftello64@plt+0x3840>
   14cfc:	str	r4, [fp, #-40]	; 0xffffffd8
   14d00:	mov	r4, r7
   14d04:	ldr	r7, [fp, #-52]	; 0xffffffcc
   14d08:	b	14d18 <ftello64@plt+0x3648>
   14d0c:	ldr	r0, [r4, #8]!
   14d10:	cmp	r0, #0
   14d14:	beq	14e20 <ftello64@plt+0x3750>
   14d18:	mov	r1, r7
   14d1c:	bl	113a0 <strcmp@plt>
   14d20:	cmp	r0, #0
   14d24:	bne	14d0c <ftello64@plt+0x363c>
   14d28:	mov	r7, r4
   14d2c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14d30:	ldr	r3, [r7, #4]
   14d34:	cmp	r3, #0
   14d38:	beq	14d4c <ftello64@plt+0x367c>
   14d3c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14d40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14d44:	mov	r0, sl
   14d48:	blx	r3
   14d4c:	cmn	r6, #1
   14d50:	str	r4, [sl, #16]
   14d54:	beq	14bb8 <ftello64@plt+0x34e8>
   14d58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14d5c:	add	r7, r3, r6, lsl #2
   14d60:	sub	r6, r6, #1
   14d64:	ldr	r0, [r7], #-4
   14d68:	bl	1acdc <argp_parse@@Base+0xf7c>
   14d6c:	cmn	r6, #1
   14d70:	bne	14d60 <ftello64@plt+0x3690>
   14d74:	b	14bb8 <ftello64@plt+0x34e8>
   14d78:	cmp	r0, #10
   14d7c:	bne	14dd4 <ftello64@plt+0x3704>
   14d80:	ldr	r3, [r5]
   14d84:	mov	r2, #0
   14d88:	str	r2, [r3]
   14d8c:	ldr	r1, [r8]
   14d90:	bl	11628 <putc@plt>
   14d94:	mov	r3, #1
   14d98:	str	r3, [r9]
   14d9c:	ldrb	r0, [r7, #1]!
   14da0:	cmp	r0, #0
   14da4:	beq	14ed8 <ftello64@plt+0x3808>
   14da8:	cmp	r0, #9
   14dac:	bne	14d78 <ftello64@plt+0x36a8>
   14db0:	ldr	r2, [r5]
   14db4:	ldr	r3, [r2]
   14db8:	add	r1, r3, #7
   14dbc:	cmp	r3, #0
   14dc0:	movlt	r3, r1
   14dc4:	bic	r3, r3, #7
   14dc8:	add	r3, r3, #8
   14dcc:	str	r3, [r2]
   14dd0:	b	14d8c <ftello64@plt+0x36bc>
   14dd4:	ldr	r2, [r5]
   14dd8:	ldr	r3, [r2]
   14ddc:	add	r3, r3, #1
   14de0:	str	r3, [r2]
   14de4:	b	14d8c <ftello64@plt+0x36bc>
   14de8:	ldr	r2, [r5]
   14dec:	ldr	r3, [r2]
   14df0:	add	r3, r3, #1
   14df4:	str	r3, [r2]
   14df8:	b	14ba4 <ftello64@plt+0x34d4>
   14dfc:	ldr	r2, [r5]
   14e00:	ldr	r3, [r2]
   14e04:	add	r1, r3, #7
   14e08:	cmp	r3, #0
   14e0c:	movlt	r3, r1
   14e10:	bic	r3, r3, #7
   14e14:	add	r3, r3, #8
   14e18:	str	r3, [r2]
   14e1c:	b	14ba4 <ftello64@plt+0x34d4>
   14e20:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14e24:	ldr	r0, [pc, #232]	; 14f14 <ftello64@plt+0x3844>
   14e28:	bl	113b8 <printf@plt>
   14e2c:	ldr	r7, [fp, #-52]	; 0xffffffcc
   14e30:	ldr	ip, [r5]
   14e34:	ldrb	r3, [r7]
   14e38:	ldr	r2, [ip]
   14e3c:	cmp	r3, #0
   14e40:	add	r2, r2, r0
   14e44:	str	r2, [ip]
   14e48:	beq	14eb4 <ftello64@plt+0x37e4>
   14e4c:	mov	r0, r3
   14e50:	b	14e8c <ftello64@plt+0x37bc>
   14e54:	cmp	r0, #10
   14e58:	moveq	r3, #0
   14e5c:	streq	r3, [ip]
   14e60:	ldrne	r3, [ip]
   14e64:	addne	r3, r3, #1
   14e68:	strne	r3, [ip]
   14e6c:	ldr	r1, [r8]
   14e70:	bl	11628 <putc@plt>
   14e74:	ldrb	r0, [r7, #1]!
   14e78:	mov	r3, #1
   14e7c:	str	r3, [r9]
   14e80:	cmp	r0, #0
   14e84:	beq	14eb4 <ftello64@plt+0x37e4>
   14e88:	ldr	ip, [r5]
   14e8c:	cmp	r0, #9
   14e90:	bne	14e54 <ftello64@plt+0x3784>
   14e94:	ldr	r3, [ip]
   14e98:	add	r2, r3, #7
   14e9c:	cmp	r3, #0
   14ea0:	movlt	r3, r2
   14ea4:	bic	r3, r3, #7
   14ea8:	add	r3, r3, #8
   14eac:	str	r3, [ip]
   14eb0:	b	14e6c <ftello64@plt+0x379c>
   14eb4:	ldr	r0, [pc, #92]	; 14f18 <ftello64@plt+0x3848>
   14eb8:	bl	113b8 <printf@plt>
   14ebc:	ldr	r2, [r5]
   14ec0:	mov	r1, #1
   14ec4:	ldr	r3, [r2]
   14ec8:	add	r3, r3, r0
   14ecc:	str	r3, [r2]
   14ed0:	str	r1, [r9]
   14ed4:	b	14d4c <ftello64@plt+0x367c>
   14ed8:	mov	r0, r4
   14edc:	mov	r1, #0
   14ee0:	bl	11550 <strchr@plt>
   14ee4:	mov	r4, r0
   14ee8:	b	14bb8 <ftello64@plt+0x34e8>
   14eec:	mov	r3, #0
   14ef0:	mvn	r6, #0
   14ef4:	str	r3, [fp, #-48]	; 0xffffffd0
   14ef8:	b	14cec <ftello64@plt+0x361c>
   14efc:	ldr	r2, [sl, #20]
   14f00:	b	14bc8 <ftello64@plt+0x34f8>
   14f04:	andeq	r7, r3, r8, lsl r5
   14f08:	andeq	r7, r3, r4, lsl ip
   14f0c:	andeq	r7, r3, r8, lsl #24
   14f10:	andeq	r7, r3, ip, lsl r5
   14f14:	strdeq	r4, [r2], -r0
   14f18:	andeq	r5, r2, r4, ror r7
   14f1c:	cmp	r1, #0
   14f20:	bxeq	lr
   14f24:	push	{r4, r5, r6, r7, r8, lr}
   14f28:	mov	r6, r2
   14f2c:	ldr	r5, [pc, #56]	; 14f6c <ftello64@plt+0x389c>
   14f30:	mov	r4, r0
   14f34:	ldr	r7, [r0]
   14f38:	ldr	r3, [r5]
   14f3c:	cmp	r3, #0
   14f40:	beq	14f64 <ftello64@plt+0x3894>
   14f44:	str	r3, [r4]
   14f48:	ldr	r3, [r6]
   14f4c:	mov	r0, r4
   14f50:	str	r3, [r4, #16]
   14f54:	bl	14a44 <ftello64@plt+0x3374>
   14f58:	ldr	r3, [r5, #12]!
   14f5c:	cmp	r3, #0
   14f60:	bne	14f44 <ftello64@plt+0x3874>
   14f64:	str	r7, [r4]
   14f68:	pop	{r4, r5, r6, r7, r8, pc}
   14f6c:			; <UNDEFINED> instruction: 0x000372b4
   14f70:	cmp	r1, #1
   14f74:	bxle	lr
   14f78:	push	{r4, r5, r6, lr}
   14f7c:	mov	r6, r2
   14f80:	sub	sp, sp, #8
   14f84:	mov	r5, r0
   14f88:	mov	r2, #10
   14f8c:	add	r1, sp, #4
   14f90:	ldr	r0, [r6]
   14f94:	bl	11538 <strtoul@plt>
   14f98:	ldr	r3, [sp, #4]
   14f9c:	ldrb	r3, [r3]
   14fa0:	cmp	r3, #0
   14fa4:	mov	r4, r0
   14fa8:	bne	14fdc <ftello64@plt+0x390c>
   14fac:	cmp	r4, #0
   14fb0:	sub	r4, r4, #1
   14fb4:	beq	14fd4 <ftello64@plt+0x3904>
   14fb8:	ldr	r3, [r6, #4]
   14fbc:	sub	r4, r4, #1
   14fc0:	str	r3, [r5, #16]
   14fc4:	mov	r0, r5
   14fc8:	bl	14a44 <ftello64@plt+0x3374>
   14fcc:	cmn	r4, #1
   14fd0:	bne	14fb8 <ftello64@plt+0x38e8>
   14fd4:	add	sp, sp, #8
   14fd8:	pop	{r4, r5, r6, pc}
   14fdc:	ldr	r2, [pc, #24]	; 14ffc <ftello64@plt+0x392c>
   14fe0:	mov	r1, #0
   14fe4:	mov	r0, #1
   14fe8:	bl	114a8 <error@plt>
   14fec:	cmp	r4, #0
   14ff0:	sub	r4, r4, #1
   14ff4:	bne	14fb8 <ftello64@plt+0x38e8>
   14ff8:	b	14fd4 <ftello64@plt+0x3904>
   14ffc:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   15000:	cmp	r1, #1
   15004:	bxle	lr
   15008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1500c:	mov	r3, #0
   15010:	ldr	r4, [pc, #248]	; 15110 <ftello64@plt+0x3a40>
   15014:	mov	r8, #1
   15018:	ldr	r7, [pc, #244]	; 15114 <ftello64@plt+0x3a44>
   1501c:	ldr	r6, [pc, #244]	; 15118 <ftello64@plt+0x3a48>
   15020:	sub	sp, sp, #20
   15024:	mov	r9, r0
   15028:	mov	sl, r3
   1502c:	mov	r5, r8
   15030:	ldr	fp, [r4]
   15034:	str	r2, [sp, #12]
   15038:	str	r1, [sp, #8]
   1503c:	str	r3, [r4]
   15040:	str	r2, [sp, #4]
   15044:	ldr	r2, [sp, #4]
   15048:	mov	r0, r9
   1504c:	add	r8, r8, #1
   15050:	ldr	r3, [r2, #4]!
   15054:	str	r3, [r9, #16]
   15058:	str	r2, [sp, #4]
   1505c:	bl	14a44 <ftello64@plt+0x3374>
   15060:	ldr	r3, [sp, #8]
   15064:	cmp	r3, r8
   15068:	beq	15104 <ftello64@plt+0x3a34>
   1506c:	ldr	r3, [r4]
   15070:	cmp	r3, #0
   15074:	beq	15044 <ftello64@plt+0x3974>
   15078:	ldr	r3, [sp, #12]
   1507c:	ldr	fp, [r3]
   15080:	ldrb	r0, [fp]
   15084:	cmp	r0, #0
   15088:	bne	150b0 <ftello64@plt+0x39e0>
   1508c:	b	150f8 <ftello64@plt+0x3a28>
   15090:	ldr	r3, [r7]
   15094:	str	sl, [r3]
   15098:	ldr	r1, [r6]
   1509c:	bl	11628 <putc@plt>
   150a0:	str	r5, [r4]
   150a4:	ldrb	r0, [fp, #1]!
   150a8:	cmp	r0, #0
   150ac:	beq	150f8 <ftello64@plt+0x3a28>
   150b0:	cmp	r0, #9
   150b4:	beq	150d4 <ftello64@plt+0x3a04>
   150b8:	cmp	r0, #10
   150bc:	beq	15090 <ftello64@plt+0x39c0>
   150c0:	ldr	r2, [r7]
   150c4:	ldr	r3, [r2]
   150c8:	add	r3, r3, #1
   150cc:	str	r3, [r2]
   150d0:	b	15098 <ftello64@plt+0x39c8>
   150d4:	ldr	r2, [r7]
   150d8:	ldr	r3, [r2]
   150dc:	add	r1, r3, #7
   150e0:	cmp	r3, #0
   150e4:	movlt	r3, r1
   150e8:	bic	r3, r3, #7
   150ec:	add	r3, r3, #8
   150f0:	str	r3, [r2]
   150f4:	b	15098 <ftello64@plt+0x39c8>
   150f8:	str	sl, [r4]
   150fc:	mov	fp, r5
   15100:	b	15044 <ftello64@plt+0x3974>
   15104:	str	fp, [r4]
   15108:	add	sp, sp, #20
   1510c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15110:	andeq	r7, r3, r8, lsl #24
   15114:	andeq	r7, r3, r8, lsl r5
   15118:	andeq	r7, r3, r4, lsl ip
   1511c:	push	{r4, r5, r6, r7, r8, lr}
   15120:	subs	r6, r1, #0
   15124:	pople	{r4, r5, r6, r7, r8, pc}
   15128:	mov	r7, r0
   1512c:	sub	r5, r2, #4
   15130:	mov	r4, #0
   15134:	b	15140 <ftello64@plt+0x3a70>
   15138:	cmp	r6, r4
   1513c:	beq	15168 <ftello64@plt+0x3a98>
   15140:	ldr	r0, [r5, #4]!
   15144:	bl	12c5c <ftello64@plt+0x158c>
   15148:	add	r4, r4, #1
   1514c:	cmp	r0, #0
   15150:	beq	15138 <ftello64@plt+0x3a68>
   15154:	ldr	r3, [r0, #8]
   15158:	mov	r0, r7
   1515c:	str	r3, [r7, #16]
   15160:	pop	{r4, r5, r6, r7, r8, lr}
   15164:	b	14a44 <ftello64@plt+0x3374>
   15168:	pop	{r4, r5, r6, r7, r8, pc}
   1516c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15170:	subs	sl, r1, #0
   15174:	ldr	r3, [pc, #84]	; 151d0 <ftello64@plt+0x3b00>
   15178:	ldr	r7, [pc, #84]	; 151d4 <ftello64@plt+0x3b04>
   1517c:	ldr	r6, [pc, #84]	; 151d8 <ftello64@plt+0x3b08>
   15180:	ldr	ip, [r3]
   15184:	ldr	r3, [pc, #80]	; 151dc <ftello64@plt+0x3b0c>
   15188:	ldr	r8, [r7]
   1518c:	ldr	r9, [r6]
   15190:	str	ip, [r7]
   15194:	str	r3, [r6]
   15198:	movgt	fp, r0
   1519c:	subgt	r5, r2, #4
   151a0:	movgt	r4, #0
   151a4:	ble	151c4 <ftello64@plt+0x3af4>
   151a8:	ldr	r3, [r5, #4]!
   151ac:	add	r4, r4, #1
   151b0:	str	r3, [fp, #16]
   151b4:	mov	r0, fp
   151b8:	bl	14a44 <ftello64@plt+0x3374>
   151bc:	cmp	sl, r4
   151c0:	bne	151a8 <ftello64@plt+0x3ad8>
   151c4:	str	r8, [r7]
   151c8:	str	r9, [r6]
   151cc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151d0:	andeq	r7, r3, r8, asr #22
   151d4:	andeq	r7, r3, r4, lsl ip
   151d8:	andeq	r7, r3, r8, lsl r5
   151dc:	andeq	r7, r3, ip, lsl #24
   151e0:	cmp	r1, #1
   151e4:	bxle	lr
   151e8:	ldr	r2, [r2, #4]
   151ec:	str	r2, [r0, #16]
   151f0:	b	14a44 <ftello64@plt+0x3374>
   151f4:	cmp	r1, #1
   151f8:	bxle	lr
   151fc:	ldr	r2, [r2, #4]
   15200:	str	r2, [r0, #16]
   15204:	b	14a44 <ftello64@plt+0x3374>
   15208:	ldr	r3, [r0, #12]
   1520c:	clz	r3, r3
   15210:	lsr	r3, r3, #5
   15214:	cmp	r3, r1
   15218:	bxge	lr
   1521c:	ldr	r3, [r2, r3, lsl #2]
   15220:	str	r3, [r0, #16]
   15224:	b	14a44 <ftello64@plt+0x3374>
   15228:	ldr	r3, [pc, #28]	; 1524c <ftello64@plt+0x3b7c>
   1522c:	ldr	r3, [r3]
   15230:	clz	r3, r3
   15234:	lsr	r3, r3, #5
   15238:	cmp	r3, r1
   1523c:	bxge	lr
   15240:	ldr	r3, [r2, r3, lsl #2]
   15244:	str	r3, [r0, #16]
   15248:	b	14a44 <ftello64@plt+0x3374>
   1524c:	andeq	r7, r3, r0, lsl #24
   15250:	push	{r4, r5, r6, lr}
   15254:	mov	r4, r0
   15258:	ldr	r0, [r0]
   1525c:	mov	r5, r1
   15260:	mov	r6, r2
   15264:	bl	11694 <if_nametoindex@plt>
   15268:	clz	r0, r0
   1526c:	lsr	r0, r0, #5
   15270:	cmp	r0, r5
   15274:	popge	{r4, r5, r6, pc}
   15278:	ldr	r3, [r6, r0, lsl #2]
   1527c:	mov	r0, r4
   15280:	str	r3, [r4, #16]
   15284:	pop	{r4, r5, r6, lr}
   15288:	b	14a44 <ftello64@plt+0x3374>
   1528c:	push	{r4, r5, r6, lr}
   15290:	subs	r5, r1, #0
   15294:	pople	{r4, r5, r6, pc}
   15298:	mov	r6, r0
   1529c:	ldr	r0, [r2]
   152a0:	mov	r4, r2
   152a4:	bl	12c5c <ftello64@plt+0x158c>
   152a8:	cmp	r0, #0
   152ac:	moveq	r3, #2
   152b0:	movne	r3, #1
   152b4:	moveq	r2, #8
   152b8:	movne	r2, #4
   152bc:	cmp	r5, r3
   152c0:	pople	{r4, r5, r6, pc}
   152c4:	ldr	r3, [r4, r2]
   152c8:	mov	r0, r6
   152cc:	str	r3, [r6, #16]
   152d0:	pop	{r4, r5, r6, lr}
   152d4:	b	14a44 <ftello64@plt+0x3374>
   152d8:	ldr	ip, [r0, #4]
   152dc:	ldrb	ip, [ip, #26]
   152e0:	cmp	ip, #0
   152e4:	beq	152fc <ftello64@plt+0x3c2c>
   152e8:	cmp	r1, #0
   152ec:	bxle	lr
   152f0:	ldr	r2, [r2]
   152f4:	str	r2, [r0, #16]
   152f8:	b	14a44 <ftello64@plt+0x3374>
   152fc:	cmp	r1, #1
   15300:	bxle	lr
   15304:	ldr	r2, [r2, #4]
   15308:	str	r2, [r0, #16]
   1530c:	b	14a44 <ftello64@plt+0x3374>
   15310:	ldr	ip, [r0, #4]
   15314:	ldrb	ip, [ip, #27]
   15318:	cmp	ip, #0
   1531c:	beq	15334 <ftello64@plt+0x3c64>
   15320:	cmp	r1, #0
   15324:	bxle	lr
   15328:	ldr	r2, [r2]
   1532c:	str	r2, [r0, #16]
   15330:	b	14a44 <ftello64@plt+0x3374>
   15334:	cmp	r1, #1
   15338:	bxle	lr
   1533c:	ldr	r2, [r2, #4]
   15340:	str	r2, [r0, #16]
   15344:	b	14a44 <ftello64@plt+0x3374>
   15348:	ldr	ip, [r0, #4]
   1534c:	ldr	ip, [ip, #20]
   15350:	cmp	ip, #0
   15354:	beq	1536c <ftello64@plt+0x3c9c>
   15358:	cmp	r1, #0
   1535c:	bxle	lr
   15360:	ldr	r2, [r2]
   15364:	str	r2, [r0, #16]
   15368:	b	14a44 <ftello64@plt+0x3374>
   1536c:	cmp	r1, #1
   15370:	bxle	lr
   15374:	ldr	r2, [r2, #4]
   15378:	str	r2, [r0, #16]
   1537c:	b	14a44 <ftello64@plt+0x3374>
   15380:	ldr	ip, [r0, #4]
   15384:	ldr	ip, [ip, #16]
   15388:	cmp	ip, #0
   1538c:	beq	153a4 <ftello64@plt+0x3cd4>
   15390:	cmp	r1, #0
   15394:	bxle	lr
   15398:	ldr	r2, [r2]
   1539c:	str	r2, [r0, #16]
   153a0:	b	14a44 <ftello64@plt+0x3374>
   153a4:	cmp	r1, #1
   153a8:	bxle	lr
   153ac:	ldr	r2, [r2, #4]
   153b0:	str	r2, [r0, #16]
   153b4:	b	14a44 <ftello64@plt+0x3374>
   153b8:	ldr	ip, [r0, #4]
   153bc:	ldrh	ip, [ip, #24]
   153c0:	cmp	ip, #255	; 0xff
   153c4:	bls	153dc <ftello64@plt+0x3d0c>
   153c8:	cmp	r1, #0
   153cc:	bxle	lr
   153d0:	ldr	r2, [r2]
   153d4:	str	r2, [r0, #16]
   153d8:	b	14a44 <ftello64@plt+0x3374>
   153dc:	cmp	r1, #1
   153e0:	bxle	lr
   153e4:	ldr	r2, [r2, #4]
   153e8:	str	r2, [r0, #16]
   153ec:	b	14a44 <ftello64@plt+0x3374>
   153f0:	push	{r4, r5, r6, r7, r8, lr}
   153f4:	subs	r7, r1, #0
   153f8:	pople	{r4, r5, r6, r7, r8, pc}
   153fc:	ldr	r4, [pc, #112]	; 15474 <ftello64@plt+0x3da4>
   15400:	mov	r8, r0
   15404:	mov	r6, r2
   15408:	ldr	r0, [r4, #4]
   1540c:	cmp	r0, #0
   15410:	beq	15460 <ftello64@plt+0x3d90>
   15414:	ldr	r5, [r2]
   15418:	add	r4, r4, #4
   1541c:	b	1542c <ftello64@plt+0x3d5c>
   15420:	ldr	r0, [r4, #8]!
   15424:	cmp	r0, #0
   15428:	beq	15460 <ftello64@plt+0x3d90>
   1542c:	mov	r1, r5
   15430:	bl	113a0 <strcmp@plt>
   15434:	cmp	r0, #0
   15438:	bne	15420 <ftello64@plt+0x3d50>
   1543c:	mov	r3, #1
   15440:	cmp	r3, r7
   15444:	mov	r2, #4
   15448:	popge	{r4, r5, r6, r7, r8, pc}
   1544c:	ldr	r3, [r6, r2]
   15450:	mov	r0, r8
   15454:	str	r3, [r8, #16]
   15458:	pop	{r4, r5, r6, r7, r8, lr}
   1545c:	b	14a44 <ftello64@plt+0x3374>
   15460:	mov	r3, #2
   15464:	cmp	r3, r7
   15468:	mov	r2, #8
   1546c:	popge	{r4, r5, r6, r7, r8, pc}
   15470:	b	1544c <ftello64@plt+0x3d7c>
   15474:	andeq	r7, r3, r8, lsl r5
   15478:	push	{r4, r5, r6, lr}
   1547c:	mov	r4, r0
   15480:	mov	r5, r1
   15484:	mov	r6, r2
   15488:	ldr	r0, [r0, #8]
   1548c:	ldr	r2, [r4, #4]
   15490:	ldr	r1, [pc, #80]	; 154e8 <ftello64@plt+0x3e18>
   15494:	bl	1ade4 <argp_parse@@Base+0x1084>
   15498:	cmp	r0, #0
   1549c:	blt	154cc <ftello64@plt+0x3dfc>
   154a0:	ldr	r3, [r4, #4]
   154a4:	ldr	r3, [r3, #16]
   154a8:	cmp	r3, #0
   154ac:	ble	154cc <ftello64@plt+0x3dfc>
   154b0:	cmp	r5, #0
   154b4:	pople	{r4, r5, r6, pc}
   154b8:	ldr	r3, [r6]
   154bc:	mov	r0, r4
   154c0:	str	r3, [r4, #16]
   154c4:	pop	{r4, r5, r6, lr}
   154c8:	b	14a44 <ftello64@plt+0x3374>
   154cc:	cmp	r5, #1
   154d0:	pople	{r4, r5, r6, pc}
   154d4:	ldr	r3, [r6, #4]
   154d8:	mov	r0, r4
   154dc:	str	r3, [r4, #16]
   154e0:	pop	{r4, r5, r6, lr}
   154e4:	b	14a44 <ftello64@plt+0x3374>
   154e8:	andeq	r8, r0, sp, lsl r9
   154ec:	ldr	r3, [pc, #160]	; 15594 <ftello64@plt+0x3ec4>
   154f0:	push	{r4, r5, r6, r7, lr}
   154f4:	mov	r4, r0
   154f8:	ldr	r3, [r3]
   154fc:	sub	sp, sp, #12
   15500:	cmp	r3, #0
   15504:	mov	r5, r1
   15508:	mov	r6, r2
   1550c:	movne	r3, #0
   15510:	bne	15524 <ftello64@plt+0x3e54>
   15514:	ldr	r2, [pc, #124]	; 15598 <ftello64@plt+0x3ec8>
   15518:	ldr	r2, [r2]
   1551c:	cmp	r2, #0
   15520:	beq	15544 <ftello64@plt+0x3e74>
   15524:	cmp	r5, r3
   15528:	ble	1553c <ftello64@plt+0x3e6c>
   1552c:	ldr	r3, [r6, r3, lsl #2]
   15530:	mov	r0, r4
   15534:	str	r3, [r4, #16]
   15538:	bl	14a44 <ftello64@plt+0x3374>
   1553c:	add	sp, sp, #12
   15540:	pop	{r4, r5, r6, r7, pc}
   15544:	add	r1, sp, #8
   15548:	ldr	r0, [pc, #76]	; 1559c <ftello64@plt+0x3ecc>
   1554c:	str	r3, [r1, #-4]!
   15550:	bl	11d30 <ftello64@plt+0x660>
   15554:	subs	r7, r0, #0
   15558:	bne	15564 <ftello64@plt+0x3e94>
   1555c:	mov	r3, #1
   15560:	b	15524 <ftello64@plt+0x3e54>
   15564:	ldr	r2, [r4, #4]
   15568:	ldr	r1, [pc, #48]	; 155a0 <ftello64@plt+0x3ed0>
   1556c:	ldr	r0, [r4, #8]
   15570:	bl	1ade4 <argp_parse@@Base+0x1084>
   15574:	cmp	r0, #0
   15578:	bne	1555c <ftello64@plt+0x3e8c>
   1557c:	ldr	r3, [r4, #4]
   15580:	ldrh	r3, [r3, #16]
   15584:	tst	r3, r7
   15588:	moveq	r3, #1
   1558c:	movne	r3, #0
   15590:	b	15524 <ftello64@plt+0x3e54>
   15594:	strdeq	r7, [r3], -r8
   15598:	strdeq	r7, [r3], -ip
   1559c:	ldrdeq	r3, [r2], -r4
   155a0:	andeq	r8, r0, r3, lsl r9
   155a4:	push	{r4, r5, r6, lr}
   155a8:	mov	r4, r0
   155ac:	mov	r5, r1
   155b0:	mov	r6, r2
   155b4:	ldr	r0, [r0, #8]
   155b8:	ldr	r2, [r4, #4]
   155bc:	ldr	r1, [pc, #64]	; 15604 <ftello64@plt+0x3f34>
   155c0:	bl	1ade4 <argp_parse@@Base+0x1084>
   155c4:	cmp	r0, #0
   155c8:	blt	155e8 <ftello64@plt+0x3f18>
   155cc:	cmp	r5, #0
   155d0:	pople	{r4, r5, r6, pc}
   155d4:	ldr	r3, [r6]
   155d8:	mov	r0, r4
   155dc:	str	r3, [r4, #16]
   155e0:	pop	{r4, r5, r6, lr}
   155e4:	b	14a44 <ftello64@plt+0x3374>
   155e8:	cmp	r5, #1
   155ec:	pople	{r4, r5, r6, pc}
   155f0:	ldr	r3, [r6, #4]
   155f4:	mov	r0, r4
   155f8:	str	r3, [r4, #16]
   155fc:	pop	{r4, r5, r6, lr}
   15600:	b	14a44 <ftello64@plt+0x3374>
   15604:	andeq	r8, r0, r3, lsl r9
   15608:	push	{r4, r5, r6, lr}
   1560c:	mov	r4, r0
   15610:	mov	r5, r1
   15614:	mov	r6, r2
   15618:	ldr	r0, [r0, #8]
   1561c:	ldr	r2, [r4, #4]
   15620:	ldr	r1, [pc, #64]	; 15668 <ftello64@plt+0x3f98>
   15624:	bl	1ade4 <argp_parse@@Base+0x1084>
   15628:	cmp	r0, #0
   1562c:	blt	1564c <ftello64@plt+0x3f7c>
   15630:	cmp	r5, #0
   15634:	pople	{r4, r5, r6, pc}
   15638:	ldr	r3, [r6]
   1563c:	mov	r0, r4
   15640:	str	r3, [r4, #16]
   15644:	pop	{r4, r5, r6, lr}
   15648:	b	14a44 <ftello64@plt+0x3374>
   1564c:	cmp	r5, #1
   15650:	pople	{r4, r5, r6, pc}
   15654:	ldr	r3, [r6, #4]
   15658:	mov	r0, r4
   1565c:	str	r3, [r4, #16]
   15660:	pop	{r4, r5, r6, lr}
   15664:	b	14a44 <ftello64@plt+0x3374>
   15668:	andeq	r8, r0, fp, lsl r9
   1566c:	push	{r4, r5, r6, lr}
   15670:	mov	r4, r0
   15674:	mov	r5, r1
   15678:	mov	r6, r2
   1567c:	ldr	r0, [r0, #8]
   15680:	ldr	r2, [r4, #4]
   15684:	ldr	r1, [pc, #64]	; 156cc <ftello64@plt+0x3ffc>
   15688:	bl	1ade4 <argp_parse@@Base+0x1084>
   1568c:	cmp	r0, #0
   15690:	blt	156b0 <ftello64@plt+0x3fe0>
   15694:	cmp	r5, #0
   15698:	pople	{r4, r5, r6, pc}
   1569c:	ldr	r3, [r6]
   156a0:	mov	r0, r4
   156a4:	str	r3, [r4, #16]
   156a8:	pop	{r4, r5, r6, lr}
   156ac:	b	14a44 <ftello64@plt+0x3374>
   156b0:	cmp	r5, #1
   156b4:	pople	{r4, r5, r6, pc}
   156b8:	ldr	r3, [r6, #4]
   156bc:	mov	r0, r4
   156c0:	str	r3, [r4, #16]
   156c4:	pop	{r4, r5, r6, lr}
   156c8:	b	14a44 <ftello64@plt+0x3374>
   156cc:	andeq	r8, r0, r5, lsl r9
   156d0:	push	{r4, r5, r6, lr}
   156d4:	mov	r4, r0
   156d8:	mov	r5, r1
   156dc:	mov	r6, r2
   156e0:	ldr	r0, [r0, #8]
   156e4:	ldr	r2, [r4, #4]
   156e8:	ldr	r1, [pc, #64]	; 15730 <ftello64@plt+0x4060>
   156ec:	bl	1ade4 <argp_parse@@Base+0x1084>
   156f0:	cmp	r0, #0
   156f4:	blt	15714 <ftello64@plt+0x4044>
   156f8:	cmp	r5, #0
   156fc:	pople	{r4, r5, r6, pc}
   15700:	ldr	r3, [r6]
   15704:	mov	r0, r4
   15708:	str	r3, [r4, #16]
   1570c:	pop	{r4, r5, r6, lr}
   15710:	b	14a44 <ftello64@plt+0x3374>
   15714:	cmp	r5, #1
   15718:	pople	{r4, r5, r6, pc}
   1571c:	ldr	r3, [r6, #4]
   15720:	mov	r0, r4
   15724:	str	r3, [r4, #16]
   15728:	pop	{r4, r5, r6, lr}
   1572c:	b	14a44 <ftello64@plt+0x3374>
   15730:	andeq	r8, r0, r0, ror r9
   15734:	push	{r4, r5, r6, lr}
   15738:	mov	r4, r0
   1573c:	mov	r5, r1
   15740:	mov	r6, r2
   15744:	ldr	r0, [r0, #8]
   15748:	ldr	r2, [r4, #4]
   1574c:	ldr	r1, [pc, #64]	; 15794 <ftello64@plt+0x40c4>
   15750:	bl	1ade4 <argp_parse@@Base+0x1084>
   15754:	cmp	r0, #0
   15758:	blt	15778 <ftello64@plt+0x40a8>
   1575c:	cmp	r5, #0
   15760:	pople	{r4, r5, r6, pc}
   15764:	ldr	r3, [r6]
   15768:	mov	r0, r4
   1576c:	str	r3, [r4, #16]
   15770:	pop	{r4, r5, r6, lr}
   15774:	b	14a44 <ftello64@plt+0x3374>
   15778:	cmp	r5, #1
   1577c:	pople	{r4, r5, r6, pc}
   15780:	ldr	r3, [r6, #4]
   15784:	mov	r0, r4
   15788:	str	r3, [r4, #16]
   1578c:	pop	{r4, r5, r6, lr}
   15790:	b	14a44 <ftello64@plt+0x3374>
   15794:	andeq	r8, r0, r1, lsr #18
   15798:	push	{r4, r5, r6, r7, lr}
   1579c:	sub	sp, sp, #12
   157a0:	mov	r4, r0
   157a4:	mov	r5, r1
   157a8:	ldr	r0, [pc, #136]	; 15838 <ftello64@plt+0x4168>
   157ac:	add	r1, sp, #4
   157b0:	mov	r6, r2
   157b4:	bl	11d30 <ftello64@plt+0x660>
   157b8:	subs	r7, r0, #0
   157bc:	bne	157e0 <ftello64@plt+0x4110>
   157c0:	cmp	r5, #1
   157c4:	ble	157d8 <ftello64@plt+0x4108>
   157c8:	ldr	r3, [r6, #4]
   157cc:	mov	r0, r4
   157d0:	str	r3, [r4, #16]
   157d4:	bl	14a44 <ftello64@plt+0x3374>
   157d8:	add	sp, sp, #12
   157dc:	pop	{r4, r5, r6, r7, pc}
   157e0:	ldr	r2, [r4, #4]
   157e4:	ldr	r1, [pc, #80]	; 1583c <ftello64@plt+0x416c>
   157e8:	ldr	r0, [r4, #8]
   157ec:	bl	1ade4 <argp_parse@@Base+0x1084>
   157f0:	cmp	r0, #0
   157f4:	blt	157c0 <ftello64@plt+0x40f0>
   157f8:	ldr	r2, [r4, #4]
   157fc:	ldrh	r3, [r2, #16]
   15800:	tst	r3, r7
   15804:	beq	157c0 <ftello64@plt+0x40f0>
   15808:	ldr	r1, [pc, #48]	; 15840 <ftello64@plt+0x4170>
   1580c:	ldr	r0, [r4, #8]
   15810:	bl	1ade4 <argp_parse@@Base+0x1084>
   15814:	cmp	r0, #0
   15818:	blt	157c0 <ftello64@plt+0x40f0>
   1581c:	cmp	r5, #0
   15820:	ble	157d8 <ftello64@plt+0x4108>
   15824:	ldr	r3, [r6]
   15828:	mov	r0, r4
   1582c:	str	r3, [r4, #16]
   15830:	bl	14a44 <ftello64@plt+0x3374>
   15834:	b	157d8 <ftello64@plt+0x4108>
   15838:	strdeq	r3, [r2], -r8
   1583c:	andeq	r8, r0, r3, lsl r9
   15840:	andeq	r8, r0, r7, lsl r9
   15844:	push	{r4, r5, r6, r7, lr}
   15848:	sub	sp, sp, #12
   1584c:	mov	r4, r0
   15850:	mov	r5, r1
   15854:	ldr	r0, [pc, #136]	; 158e4 <ftello64@plt+0x4214>
   15858:	add	r1, sp, #4
   1585c:	mov	r6, r2
   15860:	bl	11d30 <ftello64@plt+0x660>
   15864:	subs	r7, r0, #0
   15868:	bne	1588c <ftello64@plt+0x41bc>
   1586c:	cmp	r5, #1
   15870:	ble	15884 <ftello64@plt+0x41b4>
   15874:	ldr	r3, [r6, #4]
   15878:	mov	r0, r4
   1587c:	str	r3, [r4, #16]
   15880:	bl	14a44 <ftello64@plt+0x3374>
   15884:	add	sp, sp, #12
   15888:	pop	{r4, r5, r6, r7, pc}
   1588c:	ldr	r2, [r4, #4]
   15890:	ldr	r1, [pc, #80]	; 158e8 <ftello64@plt+0x4218>
   15894:	ldr	r0, [r4, #8]
   15898:	bl	1ade4 <argp_parse@@Base+0x1084>
   1589c:	cmp	r0, #0
   158a0:	blt	1586c <ftello64@plt+0x419c>
   158a4:	ldr	r2, [r4, #4]
   158a8:	ldrh	r3, [r2, #16]
   158ac:	tst	r3, r7
   158b0:	beq	1586c <ftello64@plt+0x419c>
   158b4:	ldr	r1, [pc, #48]	; 158ec <ftello64@plt+0x421c>
   158b8:	ldr	r0, [r4, #8]
   158bc:	bl	1ade4 <argp_parse@@Base+0x1084>
   158c0:	cmp	r0, #0
   158c4:	blt	1586c <ftello64@plt+0x419c>
   158c8:	cmp	r5, #0
   158cc:	ble	15884 <ftello64@plt+0x41b4>
   158d0:	ldr	r3, [r6]
   158d4:	mov	r0, r4
   158d8:	str	r3, [r4, #16]
   158dc:	bl	14a44 <ftello64@plt+0x3374>
   158e0:	b	15884 <ftello64@plt+0x41b4>
   158e4:	ldrdeq	r3, [r2], -r8
   158e8:	andeq	r8, r0, r3, lsl r9
   158ec:	andeq	r8, r0, r9, lsl r9
   158f0:	ldr	r3, [r0, #4]
   158f4:	cmp	r1, #0
   158f8:	push	{r4, r5, r6, r7, r8, lr}
   158fc:	ldrb	r7, [r3, #26]
   15900:	ble	15918 <ftello64@plt+0x4248>
   15904:	ldr	r4, [r2]
   15908:	mov	r6, r2
   1590c:	ldrb	r3, [r4]
   15910:	cmp	r3, #37	; 0x25
   15914:	beq	15948 <ftello64@plt+0x4278>
   15918:	ldr	r0, [pc, #392]	; 15aa8 <ftello64@plt+0x43d8>
   1591c:	mov	r1, r7
   15920:	bl	113b8 <printf@plt>
   15924:	ldr	r3, [pc, #384]	; 15aac <ftello64@plt+0x43dc>
   15928:	ldr	r1, [pc, #384]	; 15ab0 <ftello64@plt+0x43e0>
   1592c:	mov	ip, #1
   15930:	ldr	r2, [r3]
   15934:	ldr	r3, [r2]
   15938:	add	r0, r3, r0
   1593c:	str	r0, [r2]
   15940:	str	ip, [r1]
   15944:	pop	{r4, r5, r6, r7, r8, pc}
   15948:	ldrb	r5, [r4, #1]
   1594c:	cmp	r5, #35	; 0x23
   15950:	addne	r4, r4, #1
   15954:	ldrbeq	r5, [r4, #2]
   15958:	addeq	r4, r4, #2
   1595c:	bl	11520 <__ctype_b_loc@plt>
   15960:	ldr	r0, [r0]
   15964:	b	1596c <ftello64@plt+0x429c>
   15968:	ldrb	r5, [r4, #1]!
   1596c:	lsl	r3, r5, #1
   15970:	ldrh	r3, [r0, r3]
   15974:	tst	r3, #2048	; 0x800
   15978:	bne	15968 <ftello64@plt+0x4298>
   1597c:	and	r3, r5, #223	; 0xdf
   15980:	cmp	r3, #72	; 0x48
   15984:	bne	15998 <ftello64@plt+0x42c8>
   15988:	ldrb	r3, [r4, #1]
   1598c:	cmp	r3, #0
   15990:	addne	r4, r4, #1
   15994:	movne	r5, r3
   15998:	sub	r5, r5, #72	; 0x48
   1599c:	cmp	r5, #48	; 0x30
   159a0:	ldrls	pc, [pc, r5, lsl #2]
   159a4:	b	15a9c <ftello64@plt+0x43cc>
   159a8:	muleq	r1, r0, sl
   159ac:	muleq	r1, ip, sl
   159b0:	muleq	r1, ip, sl
   159b4:	muleq	r1, ip, sl
   159b8:	muleq	r1, ip, sl
   159bc:	muleq	r1, ip, sl
   159c0:	muleq	r1, ip, sl
   159c4:	andeq	r5, r1, r4, lsl #21
   159c8:	muleq	r1, ip, sl
   159cc:	muleq	r1, ip, sl
   159d0:	muleq	r1, ip, sl
   159d4:	muleq	r1, ip, sl
   159d8:	muleq	r1, ip, sl
   159dc:	muleq	r1, ip, sl
   159e0:	muleq	r1, ip, sl
   159e4:	muleq	r1, ip, sl
   159e8:	muleq	r1, r0, sl
   159ec:	muleq	r1, ip, sl
   159f0:	muleq	r1, ip, sl
   159f4:	muleq	r1, ip, sl
   159f8:	muleq	r1, ip, sl
   159fc:	muleq	r1, ip, sl
   15a00:	muleq	r1, ip, sl
   15a04:	muleq	r1, ip, sl
   15a08:	muleq	r1, ip, sl
   15a0c:	muleq	r1, ip, sl
   15a10:	muleq	r1, ip, sl
   15a14:	muleq	r1, ip, sl
   15a18:	muleq	r1, ip, sl
   15a1c:	muleq	r1, ip, sl
   15a20:	muleq	r1, ip, sl
   15a24:	muleq	r1, ip, sl
   15a28:	andeq	r5, r1, ip, ror #20
   15a2c:	muleq	r1, ip, sl
   15a30:	muleq	r1, ip, sl
   15a34:	muleq	r1, ip, sl
   15a38:	muleq	r1, ip, sl
   15a3c:	muleq	r1, ip, sl
   15a40:	muleq	r1, ip, sl
   15a44:	andeq	r5, r1, r4, lsl #21
   15a48:	muleq	r1, ip, sl
   15a4c:	muleq	r1, ip, sl
   15a50:	muleq	r1, ip, sl
   15a54:	muleq	r1, ip, sl
   15a58:	muleq	r1, ip, sl
   15a5c:	muleq	r1, ip, sl
   15a60:	muleq	r1, ip, sl
   15a64:	muleq	r1, ip, sl
   15a68:	andeq	r5, r1, ip, ror #20
   15a6c:	mov	r3, #120	; 0x78
   15a70:	strb	r3, [r4]
   15a74:	mov	r3, #0
   15a78:	strb	r3, [r4, #1]
   15a7c:	ldr	r0, [r6]
   15a80:	b	1591c <ftello64@plt+0x424c>
   15a84:	mov	r3, #111	; 0x6f
   15a88:	strb	r3, [r4]
   15a8c:	b	15a74 <ftello64@plt+0x43a4>
   15a90:	mov	r3, #88	; 0x58
   15a94:	strb	r3, [r4]
   15a98:	b	15a74 <ftello64@plt+0x43a4>
   15a9c:	mov	r3, #105	; 0x69
   15aa0:	strb	r3, [r4]
   15aa4:	b	15a74 <ftello64@plt+0x43a4>
   15aa8:	andeq	r4, r2, r8, asr #31
   15aac:	andeq	r7, r3, r8, lsl r5
   15ab0:	andeq	r7, r3, r8, lsl #24
   15ab4:	push	{r4, r5, r6, r7, r8, lr}
   15ab8:	mov	r4, r0
   15abc:	mov	r5, r1
   15ac0:	mov	r6, r2
   15ac4:	ldr	r0, [r0, #8]
   15ac8:	ldr	r2, [r4, #4]
   15acc:	ldr	r1, [pc, #468]	; 15ca8 <ftello64@plt+0x45d8>
   15ad0:	bl	1ade4 <argp_parse@@Base+0x1084>
   15ad4:	cmp	r0, #0
   15ad8:	blt	15c8c <ftello64@plt+0x45bc>
   15adc:	ldr	r3, [r4, #4]
   15ae0:	cmp	r5, #0
   15ae4:	ldr	r7, [r3, #16]
   15ae8:	ble	15afc <ftello64@plt+0x442c>
   15aec:	ldr	r4, [r6]
   15af0:	ldrb	r3, [r4]
   15af4:	cmp	r3, #37	; 0x25
   15af8:	beq	15b2c <ftello64@plt+0x445c>
   15afc:	ldr	r0, [pc, #424]	; 15cac <ftello64@plt+0x45dc>
   15b00:	mov	r1, r7
   15b04:	bl	113b8 <printf@plt>
   15b08:	ldr	r3, [pc, #416]	; 15cb0 <ftello64@plt+0x45e0>
   15b0c:	ldr	r1, [pc, #416]	; 15cb4 <ftello64@plt+0x45e4>
   15b10:	mov	ip, #1
   15b14:	ldr	r2, [r3]
   15b18:	ldr	r3, [r2]
   15b1c:	add	r0, r3, r0
   15b20:	str	r0, [r2]
   15b24:	str	ip, [r1]
   15b28:	pop	{r4, r5, r6, r7, r8, pc}
   15b2c:	ldrb	r5, [r4, #1]
   15b30:	cmp	r5, #35	; 0x23
   15b34:	addne	r4, r4, #1
   15b38:	ldrbeq	r5, [r4, #2]
   15b3c:	addeq	r4, r4, #2
   15b40:	bl	11520 <__ctype_b_loc@plt>
   15b44:	ldr	r2, [r0]
   15b48:	b	15b50 <ftello64@plt+0x4480>
   15b4c:	ldrb	r5, [r4, #1]!
   15b50:	lsl	r3, r5, #1
   15b54:	ldrh	r3, [r2, r3]
   15b58:	tst	r3, #2048	; 0x800
   15b5c:	bne	15b4c <ftello64@plt+0x447c>
   15b60:	and	r3, r5, #223	; 0xdf
   15b64:	cmp	r3, #72	; 0x48
   15b68:	bne	15b7c <ftello64@plt+0x44ac>
   15b6c:	ldrb	r3, [r4, #1]
   15b70:	cmp	r3, #0
   15b74:	addne	r4, r4, #1
   15b78:	movne	r5, r3
   15b7c:	sub	r5, r5, #72	; 0x48
   15b80:	cmp	r5, #48	; 0x30
   15b84:	ldrls	pc, [pc, r5, lsl #2]
   15b88:	b	15c80 <ftello64@plt+0x45b0>
   15b8c:	andeq	r5, r1, r4, ror ip
   15b90:	andeq	r5, r1, r0, lsl #25
   15b94:	andeq	r5, r1, r0, lsl #25
   15b98:	andeq	r5, r1, r0, lsl #25
   15b9c:	andeq	r5, r1, r0, lsl #25
   15ba0:	andeq	r5, r1, r0, lsl #25
   15ba4:	andeq	r5, r1, r0, lsl #25
   15ba8:	andeq	r5, r1, r8, ror #24
   15bac:	andeq	r5, r1, r0, lsl #25
   15bb0:	andeq	r5, r1, r0, lsl #25
   15bb4:	andeq	r5, r1, r0, lsl #25
   15bb8:	andeq	r5, r1, r0, lsl #25
   15bbc:	andeq	r5, r1, r0, lsl #25
   15bc0:	andeq	r5, r1, r0, lsl #25
   15bc4:	andeq	r5, r1, r0, lsl #25
   15bc8:	andeq	r5, r1, r0, lsl #25
   15bcc:	andeq	r5, r1, r4, ror ip
   15bd0:	andeq	r5, r1, r0, lsl #25
   15bd4:	andeq	r5, r1, r0, lsl #25
   15bd8:	andeq	r5, r1, r0, lsl #25
   15bdc:	andeq	r5, r1, r0, lsl #25
   15be0:	andeq	r5, r1, r0, lsl #25
   15be4:	andeq	r5, r1, r0, lsl #25
   15be8:	andeq	r5, r1, r0, lsl #25
   15bec:	andeq	r5, r1, r0, lsl #25
   15bf0:	andeq	r5, r1, r0, lsl #25
   15bf4:	andeq	r5, r1, r0, lsl #25
   15bf8:	andeq	r5, r1, r0, lsl #25
   15bfc:	andeq	r5, r1, r0, lsl #25
   15c00:	andeq	r5, r1, r0, lsl #25
   15c04:	andeq	r5, r1, r0, lsl #25
   15c08:	andeq	r5, r1, r0, lsl #25
   15c0c:	andeq	r5, r1, r0, asr ip
   15c10:	andeq	r5, r1, r0, lsl #25
   15c14:	andeq	r5, r1, r0, lsl #25
   15c18:	andeq	r5, r1, r0, lsl #25
   15c1c:	andeq	r5, r1, r0, lsl #25
   15c20:	andeq	r5, r1, r0, lsl #25
   15c24:	andeq	r5, r1, r0, lsl #25
   15c28:	andeq	r5, r1, r8, ror #24
   15c2c:	andeq	r5, r1, r0, lsl #25
   15c30:	andeq	r5, r1, r0, lsl #25
   15c34:	andeq	r5, r1, r0, lsl #25
   15c38:	andeq	r5, r1, r0, lsl #25
   15c3c:	andeq	r5, r1, r0, lsl #25
   15c40:	andeq	r5, r1, r0, lsl #25
   15c44:	andeq	r5, r1, r0, lsl #25
   15c48:	andeq	r5, r1, r0, lsl #25
   15c4c:	andeq	r5, r1, r0, asr ip
   15c50:	mov	r3, #120	; 0x78
   15c54:	strb	r3, [r4]
   15c58:	mov	r3, #0
   15c5c:	strb	r3, [r4, #1]
   15c60:	ldr	r0, [r6]
   15c64:	b	15b00 <ftello64@plt+0x4430>
   15c68:	mov	r3, #111	; 0x6f
   15c6c:	strb	r3, [r4]
   15c70:	b	15c58 <ftello64@plt+0x4588>
   15c74:	mov	r3, #88	; 0x58
   15c78:	strb	r3, [r4]
   15c7c:	b	15c58 <ftello64@plt+0x4588>
   15c80:	mov	r3, #105	; 0x69
   15c84:	strb	r3, [r4]
   15c88:	b	15c58 <ftello64@plt+0x4588>
   15c8c:	bl	11568 <__errno_location@plt>
   15c90:	ldr	r3, [r4, #4]
   15c94:	ldr	r2, [pc, #28]	; 15cb8 <ftello64@plt+0x45e8>
   15c98:	pop	{r4, r5, r6, r7, r8, lr}
   15c9c:	ldr	r1, [r0]
   15ca0:	mov	r0, #1
   15ca4:	b	114a8 <error@plt>
   15ca8:	andeq	r8, r0, r1, lsr #18
   15cac:	andeq	r4, r2, r8, asr #31
   15cb0:	andeq	r7, r3, r8, lsl r5
   15cb4:	andeq	r7, r3, r8, lsl #24
   15cb8:	andeq	r5, r2, ip
   15cbc:	push	{r4, r5, r6, r7, r8, lr}
   15cc0:	mov	r4, r0
   15cc4:	mov	r5, r1
   15cc8:	mov	r6, r2
   15ccc:	ldr	r0, [r0, #8]
   15cd0:	ldr	r2, [r4, #4]
   15cd4:	ldr	r1, [pc, #468]	; 15eb0 <ftello64@plt+0x47e0>
   15cd8:	bl	1ade4 <argp_parse@@Base+0x1084>
   15cdc:	cmp	r0, #0
   15ce0:	blt	15e94 <ftello64@plt+0x47c4>
   15ce4:	ldr	r3, [r4, #4]
   15ce8:	cmp	r5, #0
   15cec:	ldr	r7, [r3, #16]
   15cf0:	ble	15d04 <ftello64@plt+0x4634>
   15cf4:	ldr	r4, [r6]
   15cf8:	ldrb	r3, [r4]
   15cfc:	cmp	r3, #37	; 0x25
   15d00:	beq	15d34 <ftello64@plt+0x4664>
   15d04:	ldr	r0, [pc, #424]	; 15eb4 <ftello64@plt+0x47e4>
   15d08:	mov	r1, r7
   15d0c:	bl	113b8 <printf@plt>
   15d10:	ldr	r3, [pc, #416]	; 15eb8 <ftello64@plt+0x47e8>
   15d14:	ldr	r1, [pc, #416]	; 15ebc <ftello64@plt+0x47ec>
   15d18:	mov	ip, #1
   15d1c:	ldr	r2, [r3]
   15d20:	ldr	r3, [r2]
   15d24:	add	r0, r3, r0
   15d28:	str	r0, [r2]
   15d2c:	str	ip, [r1]
   15d30:	pop	{r4, r5, r6, r7, r8, pc}
   15d34:	ldrb	r5, [r4, #1]
   15d38:	cmp	r5, #35	; 0x23
   15d3c:	addne	r4, r4, #1
   15d40:	ldrbeq	r5, [r4, #2]
   15d44:	addeq	r4, r4, #2
   15d48:	bl	11520 <__ctype_b_loc@plt>
   15d4c:	ldr	r2, [r0]
   15d50:	b	15d58 <ftello64@plt+0x4688>
   15d54:	ldrb	r5, [r4, #1]!
   15d58:	lsl	r3, r5, #1
   15d5c:	ldrh	r3, [r2, r3]
   15d60:	tst	r3, #2048	; 0x800
   15d64:	bne	15d54 <ftello64@plt+0x4684>
   15d68:	and	r3, r5, #223	; 0xdf
   15d6c:	cmp	r3, #72	; 0x48
   15d70:	bne	15d84 <ftello64@plt+0x46b4>
   15d74:	ldrb	r3, [r4, #1]
   15d78:	cmp	r3, #0
   15d7c:	addne	r4, r4, #1
   15d80:	movne	r5, r3
   15d84:	sub	r5, r5, #72	; 0x48
   15d88:	cmp	r5, #48	; 0x30
   15d8c:	ldrls	pc, [pc, r5, lsl #2]
   15d90:	b	15e88 <ftello64@plt+0x47b8>
   15d94:	andeq	r5, r1, ip, ror lr
   15d98:	andeq	r5, r1, r8, lsl #29
   15d9c:	andeq	r5, r1, r8, lsl #29
   15da0:	andeq	r5, r1, r8, lsl #29
   15da4:	andeq	r5, r1, r8, lsl #29
   15da8:	andeq	r5, r1, r8, lsl #29
   15dac:	andeq	r5, r1, r8, lsl #29
   15db0:	andeq	r5, r1, r0, ror lr
   15db4:	andeq	r5, r1, r8, lsl #29
   15db8:	andeq	r5, r1, r8, lsl #29
   15dbc:	andeq	r5, r1, r8, lsl #29
   15dc0:	andeq	r5, r1, r8, lsl #29
   15dc4:	andeq	r5, r1, r8, lsl #29
   15dc8:	andeq	r5, r1, r8, lsl #29
   15dcc:	andeq	r5, r1, r8, lsl #29
   15dd0:	andeq	r5, r1, r8, lsl #29
   15dd4:	andeq	r5, r1, ip, ror lr
   15dd8:	andeq	r5, r1, r8, lsl #29
   15ddc:	andeq	r5, r1, r8, lsl #29
   15de0:	andeq	r5, r1, r8, lsl #29
   15de4:	andeq	r5, r1, r8, lsl #29
   15de8:	andeq	r5, r1, r8, lsl #29
   15dec:	andeq	r5, r1, r8, lsl #29
   15df0:	andeq	r5, r1, r8, lsl #29
   15df4:	andeq	r5, r1, r8, lsl #29
   15df8:	andeq	r5, r1, r8, lsl #29
   15dfc:	andeq	r5, r1, r8, lsl #29
   15e00:	andeq	r5, r1, r8, lsl #29
   15e04:	andeq	r5, r1, r8, lsl #29
   15e08:	andeq	r5, r1, r8, lsl #29
   15e0c:	andeq	r5, r1, r8, lsl #29
   15e10:	andeq	r5, r1, r8, lsl #29
   15e14:	andeq	r5, r1, r8, asr lr
   15e18:	andeq	r5, r1, r8, lsl #29
   15e1c:	andeq	r5, r1, r8, lsl #29
   15e20:	andeq	r5, r1, r8, lsl #29
   15e24:	andeq	r5, r1, r8, lsl #29
   15e28:	andeq	r5, r1, r8, lsl #29
   15e2c:	andeq	r5, r1, r8, lsl #29
   15e30:	andeq	r5, r1, r0, ror lr
   15e34:	andeq	r5, r1, r8, lsl #29
   15e38:	andeq	r5, r1, r8, lsl #29
   15e3c:	andeq	r5, r1, r8, lsl #29
   15e40:	andeq	r5, r1, r8, lsl #29
   15e44:	andeq	r5, r1, r8, lsl #29
   15e48:	andeq	r5, r1, r8, lsl #29
   15e4c:	andeq	r5, r1, r8, lsl #29
   15e50:	andeq	r5, r1, r8, lsl #29
   15e54:	andeq	r5, r1, r8, asr lr
   15e58:	mov	r3, #120	; 0x78
   15e5c:	strb	r3, [r4]
   15e60:	mov	r3, #0
   15e64:	strb	r3, [r4, #1]
   15e68:	ldr	r0, [r6]
   15e6c:	b	15d08 <ftello64@plt+0x4638>
   15e70:	mov	r3, #111	; 0x6f
   15e74:	strb	r3, [r4]
   15e78:	b	15e60 <ftello64@plt+0x4790>
   15e7c:	mov	r3, #88	; 0x58
   15e80:	strb	r3, [r4]
   15e84:	b	15e60 <ftello64@plt+0x4790>
   15e88:	mov	r3, #105	; 0x69
   15e8c:	strb	r3, [r4]
   15e90:	b	15e60 <ftello64@plt+0x4790>
   15e94:	bl	11568 <__errno_location@plt>
   15e98:	ldr	r3, [r4, #4]
   15e9c:	ldr	r2, [pc, #28]	; 15ec0 <ftello64@plt+0x47f0>
   15ea0:	pop	{r4, r5, r6, r7, r8, lr}
   15ea4:	ldr	r1, [r0]
   15ea8:	mov	r0, #1
   15eac:	b	114a8 <error@plt>
   15eb0:	andeq	r8, r0, sp, lsl r9
   15eb4:	andeq	r4, r2, r8, asr #31
   15eb8:	andeq	r7, r3, r8, lsl r5
   15ebc:	andeq	r7, r3, r8, lsl #24
   15ec0:	andeq	r5, r2, r4, lsr r0
   15ec4:	cmp	r1, #9
   15ec8:	push	{r4, lr}
   15ecc:	ldr	r3, [pc, #108]	; 15f40 <ftello64@plt+0x4870>
   15ed0:	beq	15f1c <ftello64@plt+0x484c>
   15ed4:	cmp	r1, #10
   15ed8:	beq	15f0c <ftello64@plt+0x483c>
   15edc:	ldr	r2, [r3]
   15ee0:	ldr	r3, [r2]
   15ee4:	add	r3, r3, #1
   15ee8:	str	r3, [r2]
   15eec:	ldr	r3, [pc, #80]	; 15f44 <ftello64@plt+0x4874>
   15ef0:	mov	r0, r1
   15ef4:	ldr	r1, [r3]
   15ef8:	bl	11628 <putc@plt>
   15efc:	ldr	r3, [pc, #68]	; 15f48 <ftello64@plt+0x4878>
   15f00:	mov	r2, #1
   15f04:	str	r2, [r3]
   15f08:	pop	{r4, pc}
   15f0c:	ldr	r3, [r3]
   15f10:	mov	r2, #0
   15f14:	str	r2, [r3]
   15f18:	b	15eec <ftello64@plt+0x481c>
   15f1c:	ldr	r2, [r3]
   15f20:	ldr	r3, [r2]
   15f24:	add	r0, r3, #7
   15f28:	cmp	r3, #0
   15f2c:	movlt	r3, r0
   15f30:	bic	r3, r3, #7
   15f34:	add	r3, r3, #8
   15f38:	str	r3, [r2]
   15f3c:	b	15eec <ftello64@plt+0x481c>
   15f40:	andeq	r7, r3, r8, lsl r5
   15f44:	andeq	r7, r3, r4, lsl ip
   15f48:	andeq	r7, r3, r8, lsl #24
   15f4c:	ldrb	r0, [r1]
   15f50:	cmp	r0, #0
   15f54:	bxeq	lr
   15f58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15f5c:	mov	r8, r1
   15f60:	ldr	r9, [pc, #124]	; 15fe4 <ftello64@plt+0x4914>
   15f64:	ldr	r6, [pc, #124]	; 15fe8 <ftello64@plt+0x4918>
   15f68:	ldr	r5, [pc, #124]	; 15fec <ftello64@plt+0x491c>
   15f6c:	mov	r7, #0
   15f70:	mov	r4, #1
   15f74:	b	15f98 <ftello64@plt+0x48c8>
   15f78:	ldr	r3, [r9]
   15f7c:	str	r7, [r3]
   15f80:	ldr	r1, [r6]
   15f84:	bl	11628 <putc@plt>
   15f88:	str	r4, [r5]
   15f8c:	ldrb	r0, [r8, #1]!
   15f90:	cmp	r0, #0
   15f94:	beq	15fe0 <ftello64@plt+0x4910>
   15f98:	cmp	r0, #9
   15f9c:	beq	15fbc <ftello64@plt+0x48ec>
   15fa0:	cmp	r0, #10
   15fa4:	beq	15f78 <ftello64@plt+0x48a8>
   15fa8:	ldr	r2, [r9]
   15fac:	ldr	r3, [r2]
   15fb0:	add	r3, r3, #1
   15fb4:	str	r3, [r2]
   15fb8:	b	15f80 <ftello64@plt+0x48b0>
   15fbc:	ldr	r2, [r9]
   15fc0:	ldr	r3, [r2]
   15fc4:	add	r1, r3, #7
   15fc8:	cmp	r3, #0
   15fcc:	movlt	r3, r1
   15fd0:	bic	r3, r3, #7
   15fd4:	add	r3, r3, #8
   15fd8:	str	r3, [r2]
   15fdc:	b	15f80 <ftello64@plt+0x48b0>
   15fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15fe4:	andeq	r7, r3, r8, lsl r5
   15fe8:	andeq	r7, r3, r4, lsl ip
   15fec:	andeq	r7, r3, r8, lsl #24
   15ff0:	cmp	r1, #0
   15ff4:	push	{r4, r5, r6, r7, r8, lr}
   15ff8:	mov	r7, r3
   15ffc:	ble	16014 <ftello64@plt+0x4944>
   16000:	ldr	r4, [r2]
   16004:	mov	r6, r2
   16008:	ldrb	r3, [r4]
   1600c:	cmp	r3, #37	; 0x25
   16010:	beq	16044 <ftello64@plt+0x4974>
   16014:	ldr	r0, [pc, #392]	; 161a4 <ftello64@plt+0x4ad4>
   16018:	mov	r1, r7
   1601c:	bl	113b8 <printf@plt>
   16020:	ldr	r3, [pc, #384]	; 161a8 <ftello64@plt+0x4ad8>
   16024:	ldr	r1, [pc, #384]	; 161ac <ftello64@plt+0x4adc>
   16028:	mov	ip, #1
   1602c:	ldr	r2, [r3]
   16030:	ldr	r3, [r2]
   16034:	add	r0, r3, r0
   16038:	str	r0, [r2]
   1603c:	str	ip, [r1]
   16040:	pop	{r4, r5, r6, r7, r8, pc}
   16044:	ldrb	r5, [r4, #1]
   16048:	cmp	r5, #35	; 0x23
   1604c:	addne	r4, r4, #1
   16050:	ldrbeq	r5, [r4, #2]
   16054:	addeq	r4, r4, #2
   16058:	bl	11520 <__ctype_b_loc@plt>
   1605c:	ldr	ip, [r0]
   16060:	b	16068 <ftello64@plt+0x4998>
   16064:	ldrb	r5, [r4, #1]!
   16068:	lsl	r0, r5, #1
   1606c:	ldrh	r0, [ip, r0]
   16070:	tst	r0, #2048	; 0x800
   16074:	bne	16064 <ftello64@plt+0x4994>
   16078:	and	r3, r5, #223	; 0xdf
   1607c:	cmp	r3, #72	; 0x48
   16080:	bne	16094 <ftello64@plt+0x49c4>
   16084:	ldrb	r3, [r4, #1]
   16088:	cmp	r3, #0
   1608c:	addne	r4, r4, #1
   16090:	movne	r5, r3
   16094:	sub	r5, r5, #72	; 0x48
   16098:	cmp	r5, #48	; 0x30
   1609c:	ldrls	pc, [pc, r5, lsl #2]
   160a0:	b	16198 <ftello64@plt+0x4ac8>
   160a4:	andeq	r6, r1, ip, lsl #3
   160a8:	muleq	r1, r8, r1
   160ac:	muleq	r1, r8, r1
   160b0:	muleq	r1, r8, r1
   160b4:	muleq	r1, r8, r1
   160b8:	muleq	r1, r8, r1
   160bc:	muleq	r1, r8, r1
   160c0:	andeq	r6, r1, r0, lsl #3
   160c4:	muleq	r1, r8, r1
   160c8:	muleq	r1, r8, r1
   160cc:	muleq	r1, r8, r1
   160d0:	muleq	r1, r8, r1
   160d4:	muleq	r1, r8, r1
   160d8:	muleq	r1, r8, r1
   160dc:	muleq	r1, r8, r1
   160e0:	muleq	r1, r8, r1
   160e4:	andeq	r6, r1, ip, lsl #3
   160e8:	muleq	r1, r8, r1
   160ec:	muleq	r1, r8, r1
   160f0:	muleq	r1, r8, r1
   160f4:	muleq	r1, r8, r1
   160f8:	muleq	r1, r8, r1
   160fc:	muleq	r1, r8, r1
   16100:	muleq	r1, r8, r1
   16104:	muleq	r1, r8, r1
   16108:	muleq	r1, r8, r1
   1610c:	muleq	r1, r8, r1
   16110:	muleq	r1, r8, r1
   16114:	muleq	r1, r8, r1
   16118:	muleq	r1, r8, r1
   1611c:	muleq	r1, r8, r1
   16120:	muleq	r1, r8, r1
   16124:	andeq	r6, r1, r8, ror #2
   16128:	muleq	r1, r8, r1
   1612c:	muleq	r1, r8, r1
   16130:	muleq	r1, r8, r1
   16134:	muleq	r1, r8, r1
   16138:	muleq	r1, r8, r1
   1613c:	muleq	r1, r8, r1
   16140:	andeq	r6, r1, r0, lsl #3
   16144:	muleq	r1, r8, r1
   16148:	muleq	r1, r8, r1
   1614c:	muleq	r1, r8, r1
   16150:	muleq	r1, r8, r1
   16154:	muleq	r1, r8, r1
   16158:	muleq	r1, r8, r1
   1615c:	muleq	r1, r8, r1
   16160:	muleq	r1, r8, r1
   16164:	andeq	r6, r1, r8, ror #2
   16168:	mov	r3, #120	; 0x78
   1616c:	strb	r3, [r4]
   16170:	mov	r3, #0
   16174:	strb	r3, [r4, #1]
   16178:	ldr	r0, [r6]
   1617c:	b	16018 <ftello64@plt+0x4948>
   16180:	mov	r3, #111	; 0x6f
   16184:	strb	r3, [r4]
   16188:	b	16170 <ftello64@plt+0x4aa0>
   1618c:	mov	r3, #88	; 0x58
   16190:	strb	r3, [r4]
   16194:	b	16170 <ftello64@plt+0x4aa0>
   16198:	mov	r3, #105	; 0x69
   1619c:	strb	r3, [r4]
   161a0:	b	16170 <ftello64@plt+0x4aa0>
   161a4:	andeq	r4, r2, r8, asr #31
   161a8:	andeq	r7, r3, r8, lsl r5
   161ac:	andeq	r7, r3, r8, lsl #24
   161b0:	ldr	r3, [r0, #4]
   161b4:	ldrh	r3, [r3, #24]
   161b8:	cmp	r3, #255	; 0xff
   161bc:	bhi	16250 <ftello64@plt+0x4b80>
   161c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   161c4:	mov	r0, #40	; 0x28
   161c8:	ldr	r8, [pc, #132]	; 16254 <ftello64@plt+0x4b84>
   161cc:	ldr	r9, [pc, #132]	; 16258 <ftello64@plt+0x4b88>
   161d0:	ldr	r6, [pc, #132]	; 1625c <ftello64@plt+0x4b8c>
   161d4:	ldr	r5, [pc, #132]	; 16260 <ftello64@plt+0x4b90>
   161d8:	mov	r7, #0
   161dc:	mov	r4, #1
   161e0:	b	16204 <ftello64@plt+0x4b34>
   161e4:	ldr	r3, [r9]
   161e8:	str	r7, [r3]
   161ec:	ldr	r1, [r6]
   161f0:	bl	11628 <putc@plt>
   161f4:	ldrb	r0, [r8, #1]!
   161f8:	str	r4, [r5]
   161fc:	cmp	r0, #0
   16200:	beq	1624c <ftello64@plt+0x4b7c>
   16204:	cmp	r0, #9
   16208:	beq	16228 <ftello64@plt+0x4b58>
   1620c:	cmp	r0, #10
   16210:	beq	161e4 <ftello64@plt+0x4b14>
   16214:	ldr	r2, [r9]
   16218:	ldr	r3, [r2]
   1621c:	add	r3, r3, #1
   16220:	str	r3, [r2]
   16224:	b	161ec <ftello64@plt+0x4b1c>
   16228:	ldr	r2, [r9]
   1622c:	ldr	r3, [r2]
   16230:	add	r1, r3, #7
   16234:	cmp	r3, #0
   16238:	movlt	r3, r1
   1623c:	bic	r3, r3, #7
   16240:	add	r3, r3, #8
   16244:	str	r3, [r2]
   16248:	b	161ec <ftello64@plt+0x4b1c>
   1624c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16250:	b	15ff0 <ftello64@plt+0x4920>
   16254:	andeq	r5, r2, ip, asr r0
   16258:	andeq	r7, r3, r8, lsl r5
   1625c:	andeq	r7, r3, r4, lsl ip
   16260:	andeq	r7, r3, r8, lsl #24
   16264:	ldr	r3, [r0, #4]
   16268:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1626c:	ldrb	r7, [r3, #27]
   16270:	cmp	r7, #0
   16274:	bne	16300 <ftello64@plt+0x4c30>
   16278:	ldr	r8, [pc, #140]	; 1630c <ftello64@plt+0x4c3c>
   1627c:	ldr	r9, [pc, #140]	; 16310 <ftello64@plt+0x4c40>
   16280:	ldr	r6, [pc, #140]	; 16314 <ftello64@plt+0x4c44>
   16284:	ldr	r5, [pc, #140]	; 16318 <ftello64@plt+0x4c48>
   16288:	mov	r0, #40	; 0x28
   1628c:	mov	r4, #1
   16290:	b	162b4 <ftello64@plt+0x4be4>
   16294:	ldr	r3, [r9]
   16298:	str	r7, [r3]
   1629c:	ldr	r1, [r6]
   162a0:	bl	11628 <putc@plt>
   162a4:	ldrb	r0, [r8, #1]!
   162a8:	str	r4, [r5]
   162ac:	cmp	r0, #0
   162b0:	beq	162fc <ftello64@plt+0x4c2c>
   162b4:	cmp	r0, #9
   162b8:	beq	162d8 <ftello64@plt+0x4c08>
   162bc:	cmp	r0, #10
   162c0:	beq	16294 <ftello64@plt+0x4bc4>
   162c4:	ldr	r2, [r9]
   162c8:	ldr	r3, [r2]
   162cc:	add	r3, r3, #1
   162d0:	str	r3, [r2]
   162d4:	b	1629c <ftello64@plt+0x4bcc>
   162d8:	ldr	r3, [r9]
   162dc:	ldr	r2, [r3]
   162e0:	add	r1, r2, #7
   162e4:	cmp	r2, #0
   162e8:	movlt	r2, r1
   162ec:	bic	r2, r2, #7
   162f0:	add	r2, r2, #8
   162f4:	str	r2, [r3]
   162f8:	b	1629c <ftello64@plt+0x4bcc>
   162fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16300:	mov	r3, r7
   16304:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16308:	b	15ff0 <ftello64@plt+0x4920>
   1630c:	andeq	r5, r2, ip, asr r0
   16310:	andeq	r7, r3, r8, lsl r5
   16314:	andeq	r7, r3, r4, lsl ip
   16318:	andeq	r7, r3, r8, lsl #24
   1631c:	cmp	r1, #0
   16320:	push	{r4, r5, r6, r7, r8, lr}
   16324:	mov	r7, r3
   16328:	ble	16340 <ftello64@plt+0x4c70>
   1632c:	ldr	r4, [r2]
   16330:	mov	r6, r2
   16334:	ldrb	r3, [r4]
   16338:	cmp	r3, #37	; 0x25
   1633c:	beq	16370 <ftello64@plt+0x4ca0>
   16340:	ldr	r0, [pc, #376]	; 164c0 <ftello64@plt+0x4df0>
   16344:	mov	r1, r7
   16348:	bl	113b8 <printf@plt>
   1634c:	ldr	r3, [pc, #368]	; 164c4 <ftello64@plt+0x4df4>
   16350:	ldr	r1, [pc, #368]	; 164c8 <ftello64@plt+0x4df8>
   16354:	mov	ip, #1
   16358:	ldr	r2, [r3]
   1635c:	ldr	r3, [r2]
   16360:	add	r0, r3, r0
   16364:	str	r0, [r2]
   16368:	str	ip, [r1]
   1636c:	pop	{r4, r5, r6, r7, r8, pc}
   16370:	bl	11520 <__ctype_b_loc@plt>
   16374:	add	ip, r4, #1
   16378:	ldr	r5, [r0]
   1637c:	ldrb	r0, [ip]
   16380:	mov	lr, ip
   16384:	add	ip, ip, #1
   16388:	lsl	r4, r0, #1
   1638c:	ldrh	r4, [r5, r4]
   16390:	tst	r4, #2048	; 0x800
   16394:	bne	1637c <ftello64@plt+0x4cac>
   16398:	cmp	r0, #35	; 0x23
   1639c:	ldrbeq	r0, [lr, #1]
   163a0:	moveq	lr, ip
   163a4:	cmp	r0, #108	; 0x6c
   163a8:	ldrbeq	r0, [lr, #1]
   163ac:	addeq	lr, lr, #1
   163b0:	sub	r0, r0, #72	; 0x48
   163b4:	cmp	r0, #48	; 0x30
   163b8:	ldrls	pc, [pc, r0, lsl #2]
   163bc:	b	164b4 <ftello64@plt+0x4de4>
   163c0:	andeq	r6, r1, r8, lsr #9
   163c4:			; <UNDEFINED> instruction: 0x000164b4
   163c8:			; <UNDEFINED> instruction: 0x000164b4
   163cc:			; <UNDEFINED> instruction: 0x000164b4
   163d0:			; <UNDEFINED> instruction: 0x000164b4
   163d4:			; <UNDEFINED> instruction: 0x000164b4
   163d8:			; <UNDEFINED> instruction: 0x000164b4
   163dc:	muleq	r1, ip, r4
   163e0:			; <UNDEFINED> instruction: 0x000164b4
   163e4:			; <UNDEFINED> instruction: 0x000164b4
   163e8:			; <UNDEFINED> instruction: 0x000164b4
   163ec:			; <UNDEFINED> instruction: 0x000164b4
   163f0:			; <UNDEFINED> instruction: 0x000164b4
   163f4:			; <UNDEFINED> instruction: 0x000164b4
   163f8:			; <UNDEFINED> instruction: 0x000164b4
   163fc:			; <UNDEFINED> instruction: 0x000164b4
   16400:	andeq	r6, r1, r8, lsr #9
   16404:			; <UNDEFINED> instruction: 0x000164b4
   16408:			; <UNDEFINED> instruction: 0x000164b4
   1640c:			; <UNDEFINED> instruction: 0x000164b4
   16410:			; <UNDEFINED> instruction: 0x000164b4
   16414:			; <UNDEFINED> instruction: 0x000164b4
   16418:			; <UNDEFINED> instruction: 0x000164b4
   1641c:			; <UNDEFINED> instruction: 0x000164b4
   16420:			; <UNDEFINED> instruction: 0x000164b4
   16424:			; <UNDEFINED> instruction: 0x000164b4
   16428:			; <UNDEFINED> instruction: 0x000164b4
   1642c:			; <UNDEFINED> instruction: 0x000164b4
   16430:			; <UNDEFINED> instruction: 0x000164b4
   16434:			; <UNDEFINED> instruction: 0x000164b4
   16438:			; <UNDEFINED> instruction: 0x000164b4
   1643c:			; <UNDEFINED> instruction: 0x000164b4
   16440:	andeq	r6, r1, r4, lsl #9
   16444:			; <UNDEFINED> instruction: 0x000164b4
   16448:			; <UNDEFINED> instruction: 0x000164b4
   1644c:			; <UNDEFINED> instruction: 0x000164b4
   16450:			; <UNDEFINED> instruction: 0x000164b4
   16454:			; <UNDEFINED> instruction: 0x000164b4
   16458:			; <UNDEFINED> instruction: 0x000164b4
   1645c:	muleq	r1, ip, r4
   16460:			; <UNDEFINED> instruction: 0x000164b4
   16464:			; <UNDEFINED> instruction: 0x000164b4
   16468:			; <UNDEFINED> instruction: 0x000164b4
   1646c:			; <UNDEFINED> instruction: 0x000164b4
   16470:			; <UNDEFINED> instruction: 0x000164b4
   16474:			; <UNDEFINED> instruction: 0x000164b4
   16478:			; <UNDEFINED> instruction: 0x000164b4
   1647c:			; <UNDEFINED> instruction: 0x000164b4
   16480:	andeq	r6, r1, r4, lsl #9
   16484:	mov	r3, #120	; 0x78
   16488:	strb	r3, [lr]
   1648c:	mov	r3, #0
   16490:	strb	r3, [lr, #1]
   16494:	ldr	r0, [r6]
   16498:	b	16344 <ftello64@plt+0x4c74>
   1649c:	mov	r3, #111	; 0x6f
   164a0:	strb	r3, [lr]
   164a4:	b	1648c <ftello64@plt+0x4dbc>
   164a8:	mov	r3, #88	; 0x58
   164ac:	strb	r3, [lr]
   164b0:	b	1648c <ftello64@plt+0x4dbc>
   164b4:	mov	r3, #105	; 0x69
   164b8:	strb	r3, [lr]
   164bc:	b	1648c <ftello64@plt+0x4dbc>
   164c0:	muleq	r2, r4, r4
   164c4:	andeq	r7, r3, r8, lsl r5
   164c8:	andeq	r7, r3, r8, lsl #24
   164cc:	ldr	r3, [r0, #4]
   164d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   164d4:	ldr	r7, [r3, #16]
   164d8:	cmp	r7, #0
   164dc:	bne	16568 <ftello64@plt+0x4e98>
   164e0:	ldr	r8, [pc, #140]	; 16574 <ftello64@plt+0x4ea4>
   164e4:	ldr	r9, [pc, #140]	; 16578 <ftello64@plt+0x4ea8>
   164e8:	ldr	r6, [pc, #140]	; 1657c <ftello64@plt+0x4eac>
   164ec:	ldr	r5, [pc, #140]	; 16580 <ftello64@plt+0x4eb0>
   164f0:	mov	r0, #40	; 0x28
   164f4:	mov	r4, #1
   164f8:	b	1651c <ftello64@plt+0x4e4c>
   164fc:	ldr	r3, [r9]
   16500:	str	r7, [r3]
   16504:	ldr	r1, [r6]
   16508:	bl	11628 <putc@plt>
   1650c:	ldrb	r0, [r8, #1]!
   16510:	str	r4, [r5]
   16514:	cmp	r0, #0
   16518:	beq	16564 <ftello64@plt+0x4e94>
   1651c:	cmp	r0, #9
   16520:	beq	16540 <ftello64@plt+0x4e70>
   16524:	cmp	r0, #10
   16528:	beq	164fc <ftello64@plt+0x4e2c>
   1652c:	ldr	r2, [r9]
   16530:	ldr	r3, [r2]
   16534:	add	r3, r3, #1
   16538:	str	r3, [r2]
   1653c:	b	16504 <ftello64@plt+0x4e34>
   16540:	ldr	r3, [r9]
   16544:	ldr	r2, [r3]
   16548:	add	r1, r2, #7
   1654c:	cmp	r2, #0
   16550:	movlt	r2, r1
   16554:	bic	r2, r2, #7
   16558:	add	r2, r2, #8
   1655c:	str	r2, [r3]
   16560:	b	16504 <ftello64@plt+0x4e34>
   16564:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16568:	mov	r3, r7
   1656c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16570:	b	1631c <ftello64@plt+0x4c4c>
   16574:	andeq	r5, r2, ip, asr r0
   16578:	andeq	r7, r3, r8, lsl r5
   1657c:	andeq	r7, r3, r4, lsl ip
   16580:	andeq	r7, r3, r8, lsl #24
   16584:	ldr	r3, [r0, #4]
   16588:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1658c:	ldr	r7, [r3, #20]
   16590:	cmp	r7, #0
   16594:	bne	16620 <ftello64@plt+0x4f50>
   16598:	ldr	r8, [pc, #140]	; 1662c <ftello64@plt+0x4f5c>
   1659c:	ldr	r9, [pc, #140]	; 16630 <ftello64@plt+0x4f60>
   165a0:	ldr	r6, [pc, #140]	; 16634 <ftello64@plt+0x4f64>
   165a4:	ldr	r5, [pc, #140]	; 16638 <ftello64@plt+0x4f68>
   165a8:	mov	r0, #40	; 0x28
   165ac:	mov	r4, #1
   165b0:	b	165d4 <ftello64@plt+0x4f04>
   165b4:	ldr	r3, [r9]
   165b8:	str	r7, [r3]
   165bc:	ldr	r1, [r6]
   165c0:	bl	11628 <putc@plt>
   165c4:	ldrb	r0, [r8, #1]!
   165c8:	str	r4, [r5]
   165cc:	cmp	r0, #0
   165d0:	beq	1661c <ftello64@plt+0x4f4c>
   165d4:	cmp	r0, #9
   165d8:	beq	165f8 <ftello64@plt+0x4f28>
   165dc:	cmp	r0, #10
   165e0:	beq	165b4 <ftello64@plt+0x4ee4>
   165e4:	ldr	r2, [r9]
   165e8:	ldr	r3, [r2]
   165ec:	add	r3, r3, #1
   165f0:	str	r3, [r2]
   165f4:	b	165bc <ftello64@plt+0x4eec>
   165f8:	ldr	r3, [r9]
   165fc:	ldr	r2, [r3]
   16600:	add	r1, r2, #7
   16604:	cmp	r2, #0
   16608:	movlt	r2, r1
   1660c:	bic	r2, r2, #7
   16610:	add	r2, r2, #8
   16614:	str	r2, [r3]
   16618:	b	165bc <ftello64@plt+0x4eec>
   1661c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16620:	mov	r3, r7
   16624:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16628:	b	1631c <ftello64@plt+0x4c4c>
   1662c:	andeq	r5, r2, ip, asr r0
   16630:	andeq	r7, r3, r8, lsl r5
   16634:	andeq	r7, r3, r4, lsl ip
   16638:	andeq	r7, r3, r8, lsl #24
   1663c:	cmp	r3, r1
   16640:	bxge	lr
   16644:	ldr	r3, [r2, r3, lsl #2]
   16648:	str	r3, [r0, #16]
   1664c:	b	14a44 <ftello64@plt+0x3374>
   16650:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16654:	mov	fp, r0
   16658:	sub	sp, sp, #20
   1665c:	ldr	r0, [r3, #4]
   16660:	mov	r7, r3
   16664:	mov	r9, r1
   16668:	mov	sl, r2
   1666c:	bl	11424 <inet_ntoa@plt>
   16670:	mov	r1, #46	; 0x2e
   16674:	mov	r4, #0
   16678:	mov	r5, r0
   1667c:	bl	11550 <strchr@plt>
   16680:	mov	r2, r4
   16684:	mov	r1, r4
   16688:	mov	r6, r0
   1668c:	mov	r0, r5
   16690:	strb	r4, [r6], #1
   16694:	bl	113ac <strtol@plt>
   16698:	mov	r1, #46	; 0x2e
   1669c:	str	r0, [sp]
   166a0:	mov	r0, r6
   166a4:	bl	11550 <strchr@plt>
   166a8:	mov	r2, r4
   166ac:	mov	r1, r4
   166b0:	mov	r5, r0
   166b4:	mov	r0, r6
   166b8:	strb	r4, [r5], #1
   166bc:	bl	113ac <strtol@plt>
   166c0:	mov	r1, #46	; 0x2e
   166c4:	str	r0, [sp, #4]
   166c8:	mov	r0, r5
   166cc:	bl	11550 <strchr@plt>
   166d0:	mov	r2, r4
   166d4:	mov	r1, r4
   166d8:	mov	r6, r0
   166dc:	mov	r0, r5
   166e0:	strb	r4, [r6], #1
   166e4:	bl	113ac <strtol@plt>
   166e8:	mov	r2, r4
   166ec:	mov	r1, r4
   166f0:	str	r0, [sp, #8]
   166f4:	mov	r0, r6
   166f8:	bl	113ac <strtol@plt>
   166fc:	str	r0, [sp, #12]
   16700:	ldr	r0, [r7, #4]
   16704:	bl	11424 <inet_ntoa@plt>
   16708:	cmp	r9, r4
   1670c:	ble	16730 <ftello64@plt+0x5060>
   16710:	mov	r2, r4
   16714:	mov	r1, r4
   16718:	ldr	r0, [sl]
   1671c:	bl	113ac <strtol@plt>
   16720:	cmp	r0, #3
   16724:	bls	167bc <ftello64@plt+0x50ec>
   16728:	add	sp, sp, #20
   1672c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16730:	mov	r8, r0
   16734:	ldrb	r0, [r0]
   16738:	cmp	r0, r4
   1673c:	beq	16728 <ftello64@plt+0x5058>
   16740:	ldr	r9, [pc, #152]	; 167e0 <ftello64@plt+0x5110>
   16744:	ldr	r7, [pc, #152]	; 167e4 <ftello64@plt+0x5114>
   16748:	ldr	r6, [pc, #152]	; 167e8 <ftello64@plt+0x5118>
   1674c:	mov	r5, #1
   16750:	b	16774 <ftello64@plt+0x50a4>
   16754:	ldr	r3, [r9]
   16758:	str	r4, [r3]
   1675c:	ldr	r1, [r7]
   16760:	bl	11628 <putc@plt>
   16764:	str	r5, [r6]
   16768:	ldrb	r0, [r8, #1]!
   1676c:	cmp	r0, #0
   16770:	beq	16728 <ftello64@plt+0x5058>
   16774:	cmp	r0, #9
   16778:	beq	16798 <ftello64@plt+0x50c8>
   1677c:	cmp	r0, #10
   16780:	beq	16754 <ftello64@plt+0x5084>
   16784:	ldr	r2, [r9]
   16788:	ldr	r3, [r2]
   1678c:	add	r3, r3, #1
   16790:	str	r3, [r2]
   16794:	b	1675c <ftello64@plt+0x508c>
   16798:	ldr	r2, [r9]
   1679c:	ldr	r3, [r2]
   167a0:	add	r1, r3, #7
   167a4:	cmp	r3, #0
   167a8:	movlt	r3, r1
   167ac:	bic	r3, r3, #7
   167b0:	add	r3, r3, #8
   167b4:	str	r3, [r2]
   167b8:	b	1675c <ftello64@plt+0x508c>
   167bc:	add	r3, sp, #16
   167c0:	add	r0, r3, r0, lsl #2
   167c4:	add	r2, sl, #4
   167c8:	ldr	r3, [r0, #-16]
   167cc:	sub	r1, r9, #1
   167d0:	mov	r0, fp
   167d4:	add	sp, sp, #20
   167d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167dc:	b	15ff0 <ftello64@plt+0x4920>
   167e0:	andeq	r7, r3, r8, lsl r5
   167e4:	andeq	r7, r3, r4, lsl ip
   167e8:	andeq	r7, r3, r8, lsl #24
   167ec:	push	{r4, r5, r6, lr}
   167f0:	mov	r4, r0
   167f4:	mov	r5, r1
   167f8:	mov	r6, r2
   167fc:	ldr	r0, [r0, #8]
   16800:	ldr	r2, [r4, #4]
   16804:	ldr	r1, [pc, #64]	; 1684c <ftello64@plt+0x517c>
   16808:	bl	1ade4 <argp_parse@@Base+0x1084>
   1680c:	cmp	r0, #0
   16810:	blt	16830 <ftello64@plt+0x5160>
   16814:	ldr	r3, [r4, #4]
   16818:	mov	r2, r6
   1681c:	mov	r1, r5
   16820:	mov	r0, r4
   16824:	add	r3, r3, #16
   16828:	pop	{r4, r5, r6, lr}
   1682c:	b	16650 <ftello64@plt+0x4f80>
   16830:	bl	11568 <__errno_location@plt>
   16834:	ldr	r3, [r4, #4]
   16838:	ldr	r2, [pc, #16]	; 16850 <ftello64@plt+0x5180>
   1683c:	pop	{r4, r5, r6, lr}
   16840:	ldr	r1, [r0]
   16844:	mov	r0, #1
   16848:	b	114a8 <error@plt>
   1684c:	andeq	r8, r0, r5, lsl r9
   16850:	andeq	r5, r2, ip, rrx
   16854:	push	{r4, r5, r6, lr}
   16858:	mov	r4, r0
   1685c:	mov	r5, r1
   16860:	mov	r6, r2
   16864:	ldr	r0, [r0, #8]
   16868:	ldr	r2, [r4, #4]
   1686c:	ldr	r1, [pc, #64]	; 168b4 <ftello64@plt+0x51e4>
   16870:	bl	1ade4 <argp_parse@@Base+0x1084>
   16874:	cmp	r0, #0
   16878:	blt	16898 <ftello64@plt+0x51c8>
   1687c:	ldr	r3, [r4, #4]
   16880:	mov	r2, r6
   16884:	mov	r1, r5
   16888:	mov	r0, r4
   1688c:	add	r3, r3, #16
   16890:	pop	{r4, r5, r6, lr}
   16894:	b	16650 <ftello64@plt+0x4f80>
   16898:	bl	11568 <__errno_location@plt>
   1689c:	ldr	r3, [r4, #4]
   168a0:	ldr	r2, [pc, #16]	; 168b8 <ftello64@plt+0x51e8>
   168a4:	pop	{r4, r5, r6, lr}
   168a8:	ldr	r1, [r0]
   168ac:	mov	r0, #1
   168b0:	b	114a8 <error@plt>
   168b4:	andeq	r8, r0, fp, lsl r9
   168b8:	muleq	r2, r4, r0
   168bc:	push	{r4, r5, r6, lr}
   168c0:	mov	r4, r0
   168c4:	mov	r5, r1
   168c8:	mov	r6, r2
   168cc:	ldr	r0, [r0, #8]
   168d0:	ldr	r2, [r4, #4]
   168d4:	ldr	r1, [pc, #64]	; 1691c <ftello64@plt+0x524c>
   168d8:	bl	1ade4 <argp_parse@@Base+0x1084>
   168dc:	cmp	r0, #0
   168e0:	blt	16900 <ftello64@plt+0x5230>
   168e4:	ldr	r3, [r4, #4]
   168e8:	mov	r2, r6
   168ec:	mov	r1, r5
   168f0:	mov	r0, r4
   168f4:	add	r3, r3, #16
   168f8:	pop	{r4, r5, r6, lr}
   168fc:	b	16650 <ftello64@plt+0x4f80>
   16900:	bl	11568 <__errno_location@plt>
   16904:	ldr	r3, [r4, #4]
   16908:	ldr	r2, [pc, #16]	; 16920 <ftello64@plt+0x5250>
   1690c:	pop	{r4, r5, r6, lr}
   16910:	ldr	r1, [r0]
   16914:	mov	r0, #1
   16918:	b	114a8 <error@plt>
   1691c:	andeq	r8, r0, r9, lsl r9
   16920:	andeq	r5, r2, r0, asr #1
   16924:	push	{r4, r5, r6, lr}
   16928:	mov	r4, r0
   1692c:	mov	r5, r1
   16930:	mov	r6, r2
   16934:	ldr	r0, [r0, #8]
   16938:	ldr	r2, [r4, #4]
   1693c:	ldr	r1, [pc, #64]	; 16984 <ftello64@plt+0x52b4>
   16940:	bl	1ade4 <argp_parse@@Base+0x1084>
   16944:	cmp	r0, #0
   16948:	blt	16968 <ftello64@plt+0x5298>
   1694c:	ldr	r3, [r4, #4]
   16950:	mov	r2, r6
   16954:	mov	r1, r5
   16958:	mov	r0, r4
   1695c:	add	r3, r3, #16
   16960:	pop	{r4, r5, r6, lr}
   16964:	b	16650 <ftello64@plt+0x4f80>
   16968:	bl	11568 <__errno_location@plt>
   1696c:	ldr	r3, [r4, #4]
   16970:	ldr	r2, [pc, #16]	; 16988 <ftello64@plt+0x52b8>
   16974:	pop	{r4, r5, r6, lr}
   16978:	ldr	r1, [r0]
   1697c:	mov	r0, #1
   16980:	b	114a8 <error@plt>
   16984:	andeq	r8, r0, r7, lsl r9
   16988:	andeq	r5, r2, ip, ror #1
   1698c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16990:	sub	sp, sp, #28
   16994:	subs	sl, r3, #0
   16998:	str	r0, [sp, #20]
   1699c:	str	r1, [sp, #12]
   169a0:	str	r2, [sp, #16]
   169a4:	beq	16c58 <ftello64@plt+0x5588>
   169a8:	mov	r3, #1
   169ac:	ldr	r9, [pc, #684]	; 16c60 <ftello64@plt+0x5590>
   169b0:	ldr	r8, [pc, #684]	; 16c64 <ftello64@plt+0x5594>
   169b4:	ldr	r7, [pc, #684]	; 16c68 <ftello64@plt+0x5598>
   169b8:	mov	r5, r3
   169bc:	mov	r6, r3
   169c0:	mov	fp, #0
   169c4:	b	169e8 <ftello64@plt+0x5318>
   169c8:	lsls	r5, r5, #1
   169cc:	movne	r2, #1
   169d0:	moveq	r2, #0
   169d4:	cmp	sl, #0
   169d8:	moveq	r2, #0
   169dc:	andne	r2, r2, #1
   169e0:	cmp	r2, #0
   169e4:	beq	16b54 <ftello64@plt+0x5484>
   169e8:	tst	sl, r5
   169ec:	beq	169c8 <ftello64@plt+0x52f8>
   169f0:	mov	r1, fp
   169f4:	mov	r0, r5
   169f8:	str	r3, [sp, #8]
   169fc:	bl	11bd8 <ftello64@plt+0x508>
   16a00:	subs	r3, r0, #0
   16a04:	str	r3, [sp, #4]
   16a08:	ldr	r3, [sp, #8]
   16a0c:	beq	169c8 <ftello64@plt+0x52f8>
   16a10:	cmp	r3, #0
   16a14:	bne	16ac8 <ftello64@plt+0x53f8>
   16a18:	ldr	r3, [sp, #12]
   16a1c:	cmp	r3, #0
   16a20:	ble	16aa8 <ftello64@plt+0x53d8>
   16a24:	ldr	r3, [sp, #16]
   16a28:	ldr	r3, [r3]
   16a2c:	ldrb	r0, [r3]
   16a30:	cmp	r0, #0
   16a34:	beq	16ac8 <ftello64@plt+0x53f8>
   16a38:	mov	r4, r3
   16a3c:	b	16a60 <ftello64@plt+0x5390>
   16a40:	ldr	r3, [r9]
   16a44:	str	fp, [r3]
   16a48:	ldr	r1, [r8]
   16a4c:	bl	11628 <putc@plt>
   16a50:	str	r6, [r7]
   16a54:	ldrb	r0, [r4, #1]!
   16a58:	cmp	r0, #0
   16a5c:	beq	16ac8 <ftello64@plt+0x53f8>
   16a60:	cmp	r0, #9
   16a64:	beq	16a84 <ftello64@plt+0x53b4>
   16a68:	cmp	r0, #10
   16a6c:	beq	16a40 <ftello64@plt+0x5370>
   16a70:	ldr	r2, [r9]
   16a74:	ldr	r3, [r2]
   16a78:	add	r3, r3, #1
   16a7c:	str	r3, [r2]
   16a80:	b	16a48 <ftello64@plt+0x5378>
   16a84:	ldr	r2, [r9]
   16a88:	ldr	r3, [r2]
   16a8c:	add	r1, r3, #7
   16a90:	cmp	r3, #0
   16a94:	movlt	r3, r1
   16a98:	bic	r3, r3, #7
   16a9c:	add	r3, r3, #8
   16aa0:	str	r3, [r2]
   16aa4:	b	16a48 <ftello64@plt+0x5378>
   16aa8:	ldr	r2, [r9]
   16aac:	ldr	r1, [r8]
   16ab0:	mov	r0, #32
   16ab4:	ldr	r3, [r2]
   16ab8:	add	r3, r3, #1
   16abc:	str	r3, [r2]
   16ac0:	bl	11628 <putc@plt>
   16ac4:	str	r6, [r7]
   16ac8:	ldr	r3, [sp, #4]
   16acc:	ldrb	r0, [r3]
   16ad0:	cmp	r0, #0
   16ad4:	movne	r4, r3
   16ad8:	bne	16b00 <ftello64@plt+0x5430>
   16adc:	b	16b48 <ftello64@plt+0x5478>
   16ae0:	ldr	r3, [r9]
   16ae4:	str	fp, [r3]
   16ae8:	ldr	r1, [r8]
   16aec:	bl	11628 <putc@plt>
   16af0:	str	r6, [r7]
   16af4:	ldrb	r0, [r4, #1]!
   16af8:	cmp	r0, #0
   16afc:	beq	16b48 <ftello64@plt+0x5478>
   16b00:	cmp	r0, #9
   16b04:	beq	16b24 <ftello64@plt+0x5454>
   16b08:	cmp	r0, #10
   16b0c:	beq	16ae0 <ftello64@plt+0x5410>
   16b10:	ldr	r2, [r9]
   16b14:	ldr	r3, [r2]
   16b18:	add	r3, r3, #1
   16b1c:	str	r3, [r2]
   16b20:	b	16ae8 <ftello64@plt+0x5418>
   16b24:	ldr	r2, [r9]
   16b28:	ldr	r3, [r2]
   16b2c:	add	r1, r3, #7
   16b30:	cmp	r3, #0
   16b34:	movlt	r3, r1
   16b38:	bic	r3, r3, #7
   16b3c:	add	r3, r3, #8
   16b40:	str	r3, [r2]
   16b44:	b	16ae8 <ftello64@plt+0x5418>
   16b48:	bic	sl, sl, r5
   16b4c:	mov	r3, fp
   16b50:	b	169c8 <ftello64@plt+0x52f8>
   16b54:	cmp	sl, #0
   16b58:	beq	16c58 <ftello64@plt+0x5588>
   16b5c:	cmp	r3, #0
   16b60:	bne	16c20 <ftello64@plt+0x5550>
   16b64:	ldr	r2, [sp, #12]
   16b68:	cmp	r2, #0
   16b6c:	ble	16bf0 <ftello64@plt+0x5520>
   16b70:	ldr	r2, [sp, #16]
   16b74:	ldr	r4, [r2]
   16b78:	ldrb	r0, [r4]
   16b7c:	cmp	r0, #0
   16b80:	beq	16c20 <ftello64@plt+0x5550>
   16b84:	ldr	r9, [pc, #212]	; 16c60 <ftello64@plt+0x5590>
   16b88:	ldr	r7, [pc, #212]	; 16c64 <ftello64@plt+0x5594>
   16b8c:	ldr	r6, [pc, #212]	; 16c68 <ftello64@plt+0x5598>
   16b90:	mov	r8, r3
   16b94:	mov	r5, #1
   16b98:	b	16bc4 <ftello64@plt+0x54f4>
   16b9c:	cmp	r0, #10
   16ba0:	bne	16c44 <ftello64@plt+0x5574>
   16ba4:	ldr	r3, [r9]
   16ba8:	str	r8, [r3]
   16bac:	ldr	r1, [r7]
   16bb0:	bl	11628 <putc@plt>
   16bb4:	str	r5, [r6]
   16bb8:	ldrb	r0, [r4, #1]!
   16bbc:	cmp	r0, #0
   16bc0:	beq	16c20 <ftello64@plt+0x5550>
   16bc4:	cmp	r0, #9
   16bc8:	bne	16b9c <ftello64@plt+0x54cc>
   16bcc:	ldr	r2, [r9]
   16bd0:	ldr	r3, [r2]
   16bd4:	add	r1, r3, #7
   16bd8:	cmp	r3, #0
   16bdc:	movlt	r3, r1
   16be0:	bic	r3, r3, #7
   16be4:	add	r3, r3, #8
   16be8:	str	r3, [r2]
   16bec:	b	16bac <ftello64@plt+0x54dc>
   16bf0:	ldr	r2, [pc, #104]	; 16c60 <ftello64@plt+0x5590>
   16bf4:	ldr	r3, [pc, #104]	; 16c64 <ftello64@plt+0x5594>
   16bf8:	mov	r0, #32
   16bfc:	ldr	r2, [r2]
   16c00:	ldr	r1, [r3]
   16c04:	ldr	r3, [r2]
   16c08:	add	r3, r3, #1
   16c0c:	str	r3, [r2]
   16c10:	bl	11628 <putc@plt>
   16c14:	ldr	r3, [pc, #76]	; 16c68 <ftello64@plt+0x5598>
   16c18:	mov	r2, #1
   16c1c:	str	r2, [r3]
   16c20:	ldr	r2, [sp, #16]
   16c24:	ldr	r1, [sp, #12]
   16c28:	mov	r3, sl
   16c2c:	add	r2, r2, #4
   16c30:	sub	r1, r1, #1
   16c34:	ldr	r0, [sp, #20]
   16c38:	add	sp, sp, #28
   16c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c40:	b	15ff0 <ftello64@plt+0x4920>
   16c44:	ldr	r2, [r9]
   16c48:	ldr	r3, [r2]
   16c4c:	add	r3, r3, #1
   16c50:	str	r3, [r2]
   16c54:	b	16bac <ftello64@plt+0x54dc>
   16c58:	add	sp, sp, #28
   16c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c60:	andeq	r7, r3, r8, lsl r5
   16c64:	andeq	r7, r3, r4, lsl ip
   16c68:	andeq	r7, r3, r8, lsl #24
   16c6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16c70:	mov	r4, r0
   16c74:	sub	sp, sp, #20
   16c78:	mov	r6, r1
   16c7c:	mov	r8, r2
   16c80:	ldr	r0, [r0, #8]
   16c84:	ldr	r2, [r4, #4]
   16c88:	ldr	r1, [pc, #364]	; 16dfc <ftello64@plt+0x572c>
   16c8c:	bl	1ade4 <argp_parse@@Base+0x1084>
   16c90:	cmp	r0, #0
   16c94:	blt	16de0 <ftello64@plt+0x5710>
   16c98:	ldr	r3, [r4, #4]
   16c9c:	cmp	r6, #0
   16ca0:	ldrh	r9, [r3, #16]
   16ca4:	ble	16dc4 <ftello64@plt+0x56f4>
   16ca8:	ldr	r5, [r8]
   16cac:	ldr	r1, [pc, #332]	; 16e00 <ftello64@plt+0x5730>
   16cb0:	mov	r0, r5
   16cb4:	bl	113a0 <strcmp@plt>
   16cb8:	cmp	r0, #0
   16cbc:	beq	16d8c <ftello64@plt+0x56bc>
   16cc0:	ldr	r1, [pc, #316]	; 16e04 <ftello64@plt+0x5734>
   16cc4:	mov	r0, r5
   16cc8:	bl	113a0 <strcmp@plt>
   16ccc:	subs	r7, r0, #0
   16cd0:	beq	16cf0 <ftello64@plt+0x5620>
   16cd4:	mov	r0, r5
   16cd8:	ldr	r1, [pc, #296]	; 16e08 <ftello64@plt+0x5738>
   16cdc:	bl	113a0 <strcmp@plt>
   16ce0:	cmp	r0, #0
   16ce4:	beq	16da8 <ftello64@plt+0x56d8>
   16ce8:	add	sp, sp, #20
   16cec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16cf0:	mov	r0, r9
   16cf4:	mov	r1, sp
   16cf8:	mov	r2, #15
   16cfc:	bl	11dec <ftello64@plt+0x71c>
   16d00:	ldrb	r0, [sp]
   16d04:	cmp	r0, #0
   16d08:	beq	16ce8 <ftello64@plt+0x5618>
   16d0c:	ldr	r9, [pc, #248]	; 16e0c <ftello64@plt+0x573c>
   16d10:	ldr	r6, [pc, #248]	; 16e10 <ftello64@plt+0x5740>
   16d14:	ldr	r5, [pc, #248]	; 16e14 <ftello64@plt+0x5744>
   16d18:	mov	r8, sp
   16d1c:	mov	r4, #1
   16d20:	b	16d44 <ftello64@plt+0x5674>
   16d24:	ldr	r3, [r9]
   16d28:	str	r7, [r3]
   16d2c:	ldr	r1, [r6]
   16d30:	bl	11628 <putc@plt>
   16d34:	ldrb	r0, [r8, #1]!
   16d38:	str	r4, [r5]
   16d3c:	cmp	r0, #0
   16d40:	beq	16ce8 <ftello64@plt+0x5618>
   16d44:	cmp	r0, #9
   16d48:	beq	16d68 <ftello64@plt+0x5698>
   16d4c:	cmp	r0, #10
   16d50:	beq	16d24 <ftello64@plt+0x5654>
   16d54:	ldr	r2, [r9]
   16d58:	ldr	r3, [r2]
   16d5c:	add	r3, r3, #1
   16d60:	str	r3, [r2]
   16d64:	b	16d2c <ftello64@plt+0x565c>
   16d68:	ldr	r2, [r9]
   16d6c:	ldr	r3, [r2]
   16d70:	add	r1, r3, #7
   16d74:	cmp	r3, #0
   16d78:	movlt	r3, r1
   16d7c:	bic	r3, r3, #7
   16d80:	add	r3, r3, #8
   16d84:	str	r3, [r2]
   16d88:	b	16d2c <ftello64@plt+0x565c>
   16d8c:	mov	r3, r9
   16d90:	add	r2, r8, #4
   16d94:	sub	r1, r6, #1
   16d98:	mov	r0, r4
   16d9c:	bl	15ff0 <ftello64@plt+0x4920>
   16da0:	add	sp, sp, #20
   16da4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16da8:	mov	r3, r9
   16dac:	add	r2, r8, #4
   16db0:	sub	r1, r6, #1
   16db4:	mov	r0, r4
   16db8:	bl	1698c <ftello64@plt+0x52bc>
   16dbc:	add	sp, sp, #20
   16dc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16dc4:	mov	r3, r9
   16dc8:	mov	r2, r8
   16dcc:	mov	r1, r6
   16dd0:	mov	r0, r4
   16dd4:	bl	1698c <ftello64@plt+0x52bc>
   16dd8:	add	sp, sp, #20
   16ddc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16de0:	bl	11568 <__errno_location@plt>
   16de4:	ldr	r3, [r4, #4]
   16de8:	ldr	r2, [pc, #40]	; 16e18 <ftello64@plt+0x5748>
   16dec:	ldr	r1, [r0]
   16df0:	mov	r0, #1
   16df4:	bl	114a8 <error@plt>
   16df8:	b	16ce8 <ftello64@plt+0x5618>
   16dfc:	andeq	r8, r0, r3, lsl r9
   16e00:	andeq	r5, r2, r0, asr #2
   16e04:	andeq	r3, r2, r4, asr #28
   16e08:	andeq	r5, r2, r8, asr #2
   16e0c:	andeq	r7, r3, r8, lsl r5
   16e10:	andeq	r7, r3, r4, lsl ip
   16e14:	andeq	r7, r3, r8, lsl #24
   16e18:	andeq	r5, r2, r8, lsl r1
   16e1c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16e20:	sub	sp, sp, #20
   16e24:	mov	r0, r3
   16e28:	mov	r1, sp
   16e2c:	mov	r2, #15
   16e30:	bl	11dec <ftello64@plt+0x71c>
   16e34:	ldrb	r0, [sp]
   16e38:	cmp	r0, #0
   16e3c:	beq	16ec4 <ftello64@plt+0x57f4>
   16e40:	ldr	r9, [pc, #132]	; 16ecc <ftello64@plt+0x57fc>
   16e44:	ldr	r6, [pc, #132]	; 16ed0 <ftello64@plt+0x5800>
   16e48:	ldr	r5, [pc, #132]	; 16ed4 <ftello64@plt+0x5804>
   16e4c:	mov	r8, sp
   16e50:	mov	r7, #0
   16e54:	mov	r4, #1
   16e58:	b	16e7c <ftello64@plt+0x57ac>
   16e5c:	ldr	r3, [r9]
   16e60:	str	r7, [r3]
   16e64:	ldr	r1, [r6]
   16e68:	bl	11628 <putc@plt>
   16e6c:	ldrb	r0, [r8, #1]!
   16e70:	str	r4, [r5]
   16e74:	cmp	r0, #0
   16e78:	beq	16ec4 <ftello64@plt+0x57f4>
   16e7c:	cmp	r0, #9
   16e80:	beq	16ea0 <ftello64@plt+0x57d0>
   16e84:	cmp	r0, #10
   16e88:	beq	16e5c <ftello64@plt+0x578c>
   16e8c:	ldr	r2, [r9]
   16e90:	ldr	r3, [r2]
   16e94:	add	r3, r3, #1
   16e98:	str	r3, [r2]
   16e9c:	b	16e64 <ftello64@plt+0x5794>
   16ea0:	ldr	r2, [r9]
   16ea4:	ldr	r3, [r2]
   16ea8:	add	r1, r3, #7
   16eac:	cmp	r3, #0
   16eb0:	movlt	r3, r1
   16eb4:	bic	r3, r3, #7
   16eb8:	add	r3, r3, #8
   16ebc:	str	r3, [r2]
   16ec0:	b	16e64 <ftello64@plt+0x5794>
   16ec4:	add	sp, sp, #20
   16ec8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16ecc:	andeq	r7, r3, r8, lsl r5
   16ed0:	andeq	r7, r3, r4, lsl ip
   16ed4:	andeq	r7, r3, r8, lsl #24
   16ed8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16edc:	mov	r4, r0
   16ee0:	ldr	r6, [pc, #268]	; 16ff4 <ftello64@plt+0x5924>
   16ee4:	ldr	r0, [r6, #4]
   16ee8:	cmp	r0, #0
   16eec:	beq	16f40 <ftello64@plt+0x5870>
   16ef0:	mov	r7, r1
   16ef4:	mov	r8, r2
   16ef8:	mov	r9, r3
   16efc:	add	r5, r6, #4
   16f00:	b	16f10 <ftello64@plt+0x5840>
   16f04:	ldr	r0, [r5, #8]!
   16f08:	cmp	r0, #0
   16f0c:	beq	16f40 <ftello64@plt+0x5870>
   16f10:	mov	r1, r4
   16f14:	bl	113a0 <strcmp@plt>
   16f18:	cmp	r0, #0
   16f1c:	bne	16f04 <ftello64@plt+0x5834>
   16f20:	ldr	r3, [r5, #4]
   16f24:	cmp	r3, #0
   16f28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f2c:	mov	r2, r9
   16f30:	mov	r1, r8
   16f34:	mov	r0, r7
   16f38:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16f3c:	bx	r3
   16f40:	ldr	r0, [pc, #176]	; 16ff8 <ftello64@plt+0x5928>
   16f44:	bl	113b8 <printf@plt>
   16f48:	ldr	r2, [r6]
   16f4c:	ldr	r5, [pc, #168]	; 16ffc <ftello64@plt+0x592c>
   16f50:	ldr	r3, [r2]
   16f54:	add	r0, r3, r0
   16f58:	str	r0, [r2]
   16f5c:	ldrb	r0, [r4]
   16f60:	cmp	r0, #0
   16f64:	beq	16fd0 <ftello64@plt+0x5900>
   16f68:	ldr	r8, [pc, #144]	; 17000 <ftello64@plt+0x5930>
   16f6c:	mov	r9, #0
   16f70:	mov	r7, #1
   16f74:	b	16fa8 <ftello64@plt+0x58d8>
   16f78:	cmp	r0, #10
   16f7c:	streq	r9, [r2]
   16f80:	ldrne	r3, [r2]
   16f84:	addne	r3, r3, #1
   16f88:	strne	r3, [r2]
   16f8c:	ldr	r1, [r8]
   16f90:	bl	11628 <putc@plt>
   16f94:	str	r7, [r5]
   16f98:	ldrb	r0, [r4, #1]!
   16f9c:	cmp	r0, #0
   16fa0:	beq	16fd0 <ftello64@plt+0x5900>
   16fa4:	ldr	r2, [r6]
   16fa8:	cmp	r0, #9
   16fac:	bne	16f78 <ftello64@plt+0x58a8>
   16fb0:	ldr	r3, [r2]
   16fb4:	add	r1, r3, #7
   16fb8:	cmp	r3, #0
   16fbc:	movlt	r3, r1
   16fc0:	bic	r3, r3, #7
   16fc4:	add	r3, r3, #8
   16fc8:	str	r3, [r2]
   16fcc:	b	16f8c <ftello64@plt+0x58bc>
   16fd0:	ldr	r0, [pc, #44]	; 17004 <ftello64@plt+0x5934>
   16fd4:	bl	113b8 <printf@plt>
   16fd8:	ldr	r2, [r6]
   16fdc:	mov	r1, #1
   16fe0:	ldr	r3, [r2]
   16fe4:	add	r0, r3, r0
   16fe8:	str	r0, [r2]
   16fec:	str	r1, [r5]
   16ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ff4:	andeq	r7, r3, r8, lsl r5
   16ff8:	strdeq	r4, [r2], -r0
   16ffc:	andeq	r7, r3, r8, lsl #24
   17000:	andeq	r7, r3, r4, lsl ip
   17004:	andeq	r5, r2, r4, ror r7
   17008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1700c:	add	fp, sp, #32
   17010:	sub	sp, sp, #28
   17014:	str	r1, [fp, #-40]	; 0xffffffd8
   17018:	ldr	r4, [r0, #16]
   1701c:	ldr	r1, [r0, #20]
   17020:	mov	sl, r0
   17024:	add	r0, r1, #1
   17028:	str	r0, [sl, #20]
   1702c:	ldrb	r3, [r4]
   17030:	ldr	r7, [pc, #1352]	; 17580 <ftello64@plt+0x5eb0>
   17034:	ldr	r9, [pc, #1352]	; 17584 <ftello64@plt+0x5eb4>
   17038:	ldr	r8, [pc, #1352]	; 17588 <ftello64@plt+0x5eb8>
   1703c:	mov	r1, r0
   17040:	cmp	r3, #0
   17044:	beq	17264 <ftello64@plt+0x5b94>
   17048:	subs	r2, r3, #125	; 0x7d
   1704c:	movne	r2, #1
   17050:	cmp	r0, #1
   17054:	orrle	r2, r2, #1
   17058:	cmp	r2, #0
   1705c:	beq	17264 <ftello64@plt+0x5b94>
   17060:	cmp	r3, #36	; 0x24
   17064:	beq	170b4 <ftello64@plt+0x59e4>
   17068:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1706c:	cmp	r2, #0
   17070:	bne	17098 <ftello64@plt+0x59c8>
   17074:	b	171c0 <ftello64@plt+0x5af0>
   17078:	cmp	r1, #1
   1707c:	movgt	r2, #0
   17080:	movle	r2, #1
   17084:	cmp	r3, #125	; 0x7d
   17088:	moveq	r3, r2
   1708c:	orrne	r3, r2, #1
   17090:	cmp	r3, #0
   17094:	beq	17264 <ftello64@plt+0x5b94>
   17098:	ldrb	r3, [r4, #1]!
   1709c:	mov	r0, r1
   170a0:	cmp	r3, #36	; 0x24
   170a4:	cmpne	r3, #0
   170a8:	bne	17078 <ftello64@plt+0x59a8>
   170ac:	cmp	r3, #36	; 0x24
   170b0:	bne	17578 <ftello64@plt+0x5ea8>
   170b4:	ldrb	r0, [r4, #1]
   170b8:	cmp	r0, #123	; 0x7b
   170bc:	beq	170f0 <ftello64@plt+0x5a20>
   170c0:	cmp	r0, #125	; 0x7d
   170c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   170c8:	beq	17188 <ftello64@plt+0x5ab8>
   170cc:	cmp	r0, #36	; 0x24
   170d0:	beq	17188 <ftello64@plt+0x5ab8>
   170d4:	cmp	r3, #0
   170d8:	beq	17278 <ftello64@plt+0x5ba8>
   170dc:	ldrb	r3, [r4, #2]
   170e0:	add	r4, r4, #2
   170e4:	ldr	r1, [sl, #20]
   170e8:	mov	r0, r1
   170ec:	b	17040 <ftello64@plt+0x5970>
   170f0:	add	r6, r4, #2
   170f4:	mov	r0, r6
   170f8:	mov	r1, #125	; 0x7d
   170fc:	bl	11550 <strchr@plt>
   17100:	subs	r5, r0, #0
   17104:	beq	172cc <ftello64@plt+0x5bfc>
   17108:	sub	r4, r5, r6
   1710c:	add	r3, r4, #15
   17110:	bic	r3, r3, #7
   17114:	sub	sp, sp, r3
   17118:	mov	r3, sp
   1711c:	mov	r1, r6
   17120:	lsr	r6, r3, #3
   17124:	mov	r2, r4
   17128:	lsl	r3, r6, #3
   1712c:	mov	r0, r3
   17130:	str	r3, [fp, #-56]	; 0xffffffc8
   17134:	bl	1140c <memcpy@plt>
   17138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1713c:	cmp	r3, #0
   17140:	mov	r3, #0
   17144:	strb	r3, [r4, r6, lsl #3]
   17148:	add	r4, r5, #1
   1714c:	beq	17360 <ftello64@plt+0x5c90>
   17150:	str	r4, [sl, #16]
   17154:	ldrb	r3, [r4]
   17158:	cmp	r3, #123	; 0x7b
   1715c:	add	r2, r4, #1
   17160:	mov	r0, sl
   17164:	bne	170e4 <ftello64@plt+0x5a14>
   17168:	str	r2, [sl, #16]
   1716c:	bl	14858 <ftello64@plt+0x3188>
   17170:	ldr	r4, [sl, #16]
   17174:	ldrb	r3, [r4]
   17178:	cmp	r3, #125	; 0x7d
   1717c:	bne	17158 <ftello64@plt+0x5a88>
   17180:	add	r4, r4, #1
   17184:	b	17150 <ftello64@plt+0x5a80>
   17188:	cmp	r3, #0
   1718c:	bne	170dc <ftello64@plt+0x5a0c>
   17190:	cmp	r0, #9
   17194:	beq	172a8 <ftello64@plt+0x5bd8>
   17198:	cmp	r0, #10
   1719c:	bne	1749c <ftello64@plt+0x5dcc>
   171a0:	ldr	r3, [r8]
   171a4:	mov	r2, #0
   171a8:	str	r2, [r3]
   171ac:	ldr	r1, [r7]
   171b0:	bl	11628 <putc@plt>
   171b4:	mov	r3, #1
   171b8:	str	r3, [r9]
   171bc:	b	170dc <ftello64@plt+0x5a0c>
   171c0:	mov	r5, #1
   171c4:	mov	r0, r3
   171c8:	b	17218 <ftello64@plt+0x5b48>
   171cc:	cmp	r0, #10
   171d0:	bne	17244 <ftello64@plt+0x5b74>
   171d4:	ldr	r3, [r8]
   171d8:	mov	r2, #0
   171dc:	str	r2, [r3]
   171e0:	ldr	r1, [r7]
   171e4:	bl	11628 <putc@plt>
   171e8:	str	r5, [r9]
   171ec:	ldrb	r0, [r4, #1]!
   171f0:	cmp	r0, #0
   171f4:	cmpne	r0, #36	; 0x24
   171f8:	beq	17258 <ftello64@plt+0x5b88>
   171fc:	subs	r3, r0, #125	; 0x7d
   17200:	ldr	r2, [sl, #20]
   17204:	movne	r3, #1
   17208:	cmp	r2, #1
   1720c:	orrle	r3, r3, #1
   17210:	cmp	r3, #0
   17214:	beq	17260 <ftello64@plt+0x5b90>
   17218:	cmp	r0, #9
   1721c:	bne	171cc <ftello64@plt+0x5afc>
   17220:	ldr	r2, [r8]
   17224:	ldr	r3, [r2]
   17228:	add	r1, r3, #7
   1722c:	cmp	r3, #0
   17230:	movlt	r3, r1
   17234:	bic	r3, r3, #7
   17238:	add	r3, r3, #8
   1723c:	str	r3, [r2]
   17240:	b	171e0 <ftello64@plt+0x5b10>
   17244:	ldr	r2, [r8]
   17248:	ldr	r3, [r2]
   1724c:	add	r3, r3, #1
   17250:	str	r3, [r2]
   17254:	b	171e0 <ftello64@plt+0x5b10>
   17258:	mov	r3, r0
   1725c:	b	170ac <ftello64@plt+0x59dc>
   17260:	mov	r0, r2
   17264:	sub	r0, r0, #1
   17268:	str	r0, [sl, #20]
   1726c:	str	r4, [sl, #16]
   17270:	sub	sp, fp, #32
   17274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17278:	ldr	r2, [r8]
   1727c:	ldr	r1, [r7]
   17280:	mov	r0, #36	; 0x24
   17284:	ldr	r3, [r2]
   17288:	add	r3, r3, #1
   1728c:	str	r3, [r2]
   17290:	bl	11628 <putc@plt>
   17294:	mov	r3, #1
   17298:	str	r3, [r9]
   1729c:	ldrb	r0, [r4, #1]
   172a0:	cmp	r0, #9
   172a4:	bne	17198 <ftello64@plt+0x5ac8>
   172a8:	ldr	r2, [r8]
   172ac:	ldr	r3, [r2]
   172b0:	add	r1, r3, #7
   172b4:	cmp	r3, #0
   172b8:	movlt	r3, r1
   172bc:	bic	r3, r3, #7
   172c0:	add	r3, r3, #8
   172c4:	str	r3, [r2]
   172c8:	b	171ac <ftello64@plt+0x5adc>
   172cc:	mov	r6, r4
   172d0:	mov	r0, #36	; 0x24
   172d4:	mov	r5, #1
   172d8:	b	17308 <ftello64@plt+0x5c38>
   172dc:	cmp	r0, #10
   172e0:	bne	17334 <ftello64@plt+0x5c64>
   172e4:	ldr	r3, [r8]
   172e8:	mov	r2, #0
   172ec:	str	r2, [r3]
   172f0:	ldr	r1, [r7]
   172f4:	bl	11628 <putc@plt>
   172f8:	str	r5, [r9]
   172fc:	ldrb	r0, [r6, #1]!
   17300:	cmp	r0, #0
   17304:	beq	17348 <ftello64@plt+0x5c78>
   17308:	cmp	r0, #9
   1730c:	bne	172dc <ftello64@plt+0x5c0c>
   17310:	ldr	r2, [r8]
   17314:	ldr	r3, [r2]
   17318:	add	r1, r3, #7
   1731c:	cmp	r3, #0
   17320:	movlt	r3, r1
   17324:	bic	r3, r3, #7
   17328:	add	r3, r3, #8
   1732c:	str	r3, [r2]
   17330:	b	172f0 <ftello64@plt+0x5c20>
   17334:	ldr	r2, [r8]
   17338:	ldr	r3, [r2]
   1733c:	add	r3, r3, #1
   17340:	str	r3, [r2]
   17344:	b	172f0 <ftello64@plt+0x5c20>
   17348:	mov	r0, r4
   1734c:	mov	r1, #0
   17350:	bl	11550 <strchr@plt>
   17354:	mov	r4, r0
   17358:	ldrb	r3, [r0]
   1735c:	b	170e4 <ftello64@plt+0x5a14>
   17360:	mov	r0, r5
   17364:	bl	11544 <strlen@plt>
   17368:	ldrb	r3, [r5, #1]
   1736c:	cmp	r3, #123	; 0x7b
   17370:	lsr	r3, r0, #1
   17374:	add	r3, r3, #14
   17378:	bic	r3, r3, #7
   1737c:	sub	sp, sp, r3
   17380:	str	sp, [fp, #-60]	; 0xffffffc4
   17384:	bne	17568 <ftello64@plt+0x5e98>
   17388:	ldr	r6, [fp, #-40]	; 0xffffffd8
   1738c:	sub	r3, sp, #4
   17390:	str	r3, [fp, #-44]	; 0xffffffd4
   17394:	str	r6, [fp, #-48]	; 0xffffffd0
   17398:	b	173a4 <ftello64@plt+0x5cd4>
   1739c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   173a0:	str	r3, [fp, #-48]	; 0xffffffd0
   173a4:	add	r6, r4, #1
   173a8:	mov	r0, sl
   173ac:	str	r6, [sl, #16]
   173b0:	bl	14858 <ftello64@plt+0x3188>
   173b4:	ldr	r4, [sl, #16]
   173b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   173bc:	sub	r5, r4, r6
   173c0:	add	r3, r3, #1
   173c4:	add	r0, r5, #1
   173c8:	str	r3, [fp, #-52]	; 0xffffffcc
   173cc:	bl	1c3f4 <_obstack_memory_used@@Base+0x11f0>
   173d0:	ldr	ip, [fp, #-44]	; 0xffffffd4
   173d4:	mov	r2, r5
   173d8:	mov	r1, r6
   173dc:	str	r0, [ip, #4]!
   173e0:	str	ip, [fp, #-44]	; 0xffffffd4
   173e4:	bl	1140c <memcpy@plt>
   173e8:	mov	r2, #0
   173ec:	strb	r2, [r0, r5]
   173f0:	ldrb	r3, [r4]
   173f4:	cmp	r3, #125	; 0x7d
   173f8:	ldrbeq	r3, [r4, #1]
   173fc:	addeq	r4, r4, #1
   17400:	cmp	r3, #123	; 0x7b
   17404:	beq	1739c <ftello64@plt+0x5ccc>
   17408:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1740c:	ldr	r0, [r8, #4]
   17410:	cmp	r0, #0
   17414:	beq	174b4 <ftello64@plt+0x5de4>
   17418:	ldr	r5, [pc, #364]	; 1758c <ftello64@plt+0x5ebc>
   1741c:	str	r4, [fp, #-44]	; 0xffffffd4
   17420:	mov	r4, r5
   17424:	ldr	r5, [fp, #-56]	; 0xffffffc8
   17428:	b	17438 <ftello64@plt+0x5d68>
   1742c:	ldr	r0, [r4, #8]!
   17430:	cmp	r0, #0
   17434:	beq	174b0 <ftello64@plt+0x5de0>
   17438:	mov	r1, r5
   1743c:	bl	113a0 <strcmp@plt>
   17440:	cmp	r0, #0
   17444:	bne	1742c <ftello64@plt+0x5d5c>
   17448:	mov	r5, r4
   1744c:	ldr	r4, [fp, #-44]	; 0xffffffd4
   17450:	ldr	r3, [r5, #4]
   17454:	cmp	r3, #0
   17458:	beq	1746c <ftello64@plt+0x5d9c>
   1745c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17460:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17464:	mov	r0, sl
   17468:	blx	r3
   1746c:	cmn	r6, #1
   17470:	str	r4, [sl, #16]
   17474:	beq	17494 <ftello64@plt+0x5dc4>
   17478:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1747c:	add	r5, r3, r6, lsl #2
   17480:	sub	r6, r6, #1
   17484:	ldr	r0, [r5], #-4
   17488:	bl	1acdc <argp_parse@@Base+0xf7c>
   1748c:	cmn	r6, #1
   17490:	bne	17480 <ftello64@plt+0x5db0>
   17494:	ldrb	r3, [r4]
   17498:	b	170e4 <ftello64@plt+0x5a14>
   1749c:	ldr	r2, [r8]
   174a0:	ldr	r3, [r2]
   174a4:	add	r3, r3, #1
   174a8:	str	r3, [r2]
   174ac:	b	171ac <ftello64@plt+0x5adc>
   174b0:	ldr	r4, [fp, #-44]	; 0xffffffd4
   174b4:	ldr	r0, [pc, #212]	; 17590 <ftello64@plt+0x5ec0>
   174b8:	bl	113b8 <printf@plt>
   174bc:	ldr	r5, [fp, #-56]	; 0xffffffc8
   174c0:	ldr	r1, [r8]
   174c4:	ldrb	r3, [r5]
   174c8:	ldr	r2, [r1]
   174cc:	cmp	r3, #0
   174d0:	add	r2, r2, r0
   174d4:	str	r2, [r1]
   174d8:	beq	17544 <ftello64@plt+0x5e74>
   174dc:	mov	r0, r3
   174e0:	b	1751c <ftello64@plt+0x5e4c>
   174e4:	cmp	r0, #10
   174e8:	moveq	r3, #0
   174ec:	streq	r3, [r1]
   174f0:	ldrne	r3, [r1]
   174f4:	addne	r3, r3, #1
   174f8:	strne	r3, [r1]
   174fc:	ldr	r1, [r7]
   17500:	bl	11628 <putc@plt>
   17504:	ldrb	r0, [r5, #1]!
   17508:	mov	r3, #1
   1750c:	str	r3, [r9]
   17510:	cmp	r0, #0
   17514:	beq	17544 <ftello64@plt+0x5e74>
   17518:	ldr	r1, [r8]
   1751c:	cmp	r0, #9
   17520:	bne	174e4 <ftello64@plt+0x5e14>
   17524:	ldr	r3, [r1]
   17528:	add	r2, r3, #7
   1752c:	cmp	r3, #0
   17530:	movlt	r3, r2
   17534:	bic	r3, r3, #7
   17538:	add	r3, r3, #8
   1753c:	str	r3, [r1]
   17540:	b	174fc <ftello64@plt+0x5e2c>
   17544:	ldr	r0, [pc, #72]	; 17594 <ftello64@plt+0x5ec4>
   17548:	bl	113b8 <printf@plt>
   1754c:	ldr	r2, [r8]
   17550:	mov	r1, #1
   17554:	ldr	r3, [r2]
   17558:	add	r3, r3, r0
   1755c:	str	r3, [r2]
   17560:	str	r1, [r9]
   17564:	b	1746c <ftello64@plt+0x5d9c>
   17568:	mov	r3, #0
   1756c:	str	r3, [fp, #-52]	; 0xffffffcc
   17570:	mvn	r6, #0
   17574:	b	1740c <ftello64@plt+0x5d3c>
   17578:	ldr	r0, [sl, #20]
   1757c:	b	17264 <ftello64@plt+0x5b94>
   17580:	andeq	r7, r3, r4, lsl ip
   17584:	andeq	r7, r3, r8, lsl #24
   17588:	andeq	r7, r3, r8, lsl r5
   1758c:	andeq	r7, r3, ip, lsl r5
   17590:	strdeq	r4, [r2], -r0
   17594:	andeq	r5, r2, r4, ror r7
   17598:	ldr	ip, [pc, #92]	; 175fc <ftello64@plt+0x5f2c>
   1759c:	push	{r4, lr}
   175a0:	mov	r4, r0
   175a4:	ldr	r0, [ip]
   175a8:	sub	sp, sp, #24
   175ac:	cmp	r0, #0
   175b0:	mov	lr, #0
   175b4:	ldreq	r0, [pc, #68]	; 17600 <ftello64@plt+0x5f30>
   175b8:	stm	sp, {r1, r2}
   175bc:	str	r3, [sp, #16]
   175c0:	ldreq	r0, [r0]
   175c4:	str	r4, [sp, #8]
   175c8:	streq	r0, [ip]
   175cc:	ldr	r0, [pc, #48]	; 17604 <ftello64@plt+0x5f34>
   175d0:	str	lr, [sp, #20]
   175d4:	ldr	ip, [r0]
   175d8:	cmp	ip, #0
   175dc:	moveq	ip, #1
   175e0:	streq	ip, [r0]
   175e4:	movne	ip, #0
   175e8:	mov	r0, sp
   175ec:	str	ip, [sp, #12]
   175f0:	bl	14a44 <ftello64@plt+0x3374>
   175f4:	add	sp, sp, #24
   175f8:	pop	{r4, pc}
   175fc:	andeq	r7, r3, r4, lsl ip
   17600:	andeq	r7, r3, ip, asr #22
   17604:	andeq	r7, r3, ip, lsr #23
   17608:	push	{lr}		; (str lr, [sp, #-4]!)
   1760c:	sub	sp, sp, #12
   17610:	ldrb	lr, [r1, #3]
   17614:	ldrb	ip, [r1]
   17618:	ldrb	r3, [r1, #1]
   1761c:	ldrb	r2, [r1, #2]
   17620:	ldr	r0, [pc, #48]	; 17658 <ftello64@plt+0x5f88>
   17624:	mov	r1, lr
   17628:	str	ip, [sp]
   1762c:	bl	113b8 <printf@plt>
   17630:	ldr	r3, [pc, #36]	; 1765c <ftello64@plt+0x5f8c>
   17634:	ldr	r1, [pc, #36]	; 17660 <ftello64@plt+0x5f90>
   17638:	mov	ip, #1
   1763c:	ldr	r2, [r3]
   17640:	ldr	r3, [r2]
   17644:	add	r0, r3, r0
   17648:	str	r0, [r2]
   1764c:	str	ip, [r1]
   17650:	add	sp, sp, #12
   17654:	pop	{pc}		; (ldr pc, [sp], #4)
   17658:	andeq	r5, r2, r4, lsl #8
   1765c:	andeq	r7, r3, r8, lsl r5
   17660:	andeq	r7, r3, r8, lsl #24
   17664:	push	{r4, lr}
   17668:	sub	sp, sp, #8
   1766c:	ldrb	lr, [r1, #4]
   17670:	ldrb	ip, [r1, #3]
   17674:	ldrb	r4, [r1]
   17678:	ldrb	r3, [r1, #2]
   1767c:	ldrb	r2, [r1, #1]
   17680:	ldr	r0, [pc, #48]	; 176b8 <ftello64@plt+0x5fe8>
   17684:	mov	r1, r4
   17688:	stm	sp, {ip, lr}
   1768c:	bl	113b8 <printf@plt>
   17690:	ldr	r3, [pc, #36]	; 176bc <ftello64@plt+0x5fec>
   17694:	ldr	r1, [pc, #36]	; 176c0 <ftello64@plt+0x5ff0>
   17698:	mov	ip, #1
   1769c:	ldr	r2, [r3]
   176a0:	ldr	r3, [r2]
   176a4:	add	r0, r3, r0
   176a8:	str	r0, [r2]
   176ac:	str	ip, [r1]
   176b0:	add	sp, sp, #8
   176b4:	pop	{r4, pc}
   176b8:	andeq	r5, r2, r8, lsl r4
   176bc:	andeq	r7, r3, r8, lsl r5
   176c0:	andeq	r7, r3, r8, lsl #24
   176c4:	ldrsh	r1, [r1]
   176c8:	push	{r4, lr}
   176cc:	ldr	r0, [pc, #36]	; 176f8 <ftello64@plt+0x6028>
   176d0:	bl	113b8 <printf@plt>
   176d4:	ldr	r3, [pc, #32]	; 176fc <ftello64@plt+0x602c>
   176d8:	ldr	r1, [pc, #32]	; 17700 <ftello64@plt+0x6030>
   176dc:	mov	ip, #1
   176e0:	ldr	r2, [r3]
   176e4:	ldr	r3, [r2]
   176e8:	add	r0, r3, r0
   176ec:	str	r0, [r2]
   176f0:	str	ip, [r1]
   176f4:	pop	{r4, pc}
   176f8:	andeq	r4, r2, r8, asr #31
   176fc:	andeq	r7, r3, r8, lsl r5
   17700:	andeq	r7, r3, r8, lsl #24
   17704:	push	{r4, lr}
   17708:	ldr	r0, [pc, #40]	; 17738 <ftello64@plt+0x6068>
   1770c:	ldrb	r1, [r1]
   17710:	bl	113b8 <printf@plt>
   17714:	ldr	r3, [pc, #32]	; 1773c <ftello64@plt+0x606c>
   17718:	ldr	r1, [pc, #32]	; 17740 <ftello64@plt+0x6070>
   1771c:	mov	ip, #1
   17720:	ldr	r2, [r3]
   17724:	ldr	r3, [r2]
   17728:	add	r0, r3, r0
   1772c:	str	r0, [r2]
   17730:	str	ip, [r1]
   17734:	pop	{r4, pc}
   17738:	andeq	r5, r2, r8, lsr #8
   1773c:	andeq	r7, r3, r8, lsl r5
   17740:	andeq	r7, r3, r8, lsl #24
   17744:	push	{r4, r5, lr}
   17748:	sub	sp, sp, #20
   1774c:	ldrb	lr, [r1, #4]
   17750:	ldrb	ip, [r1, #3]
   17754:	ldrb	r5, [r1]
   17758:	ldrb	r4, [r1, #5]
   1775c:	ldrb	r3, [r1, #2]
   17760:	ldrb	r2, [r1, #1]
   17764:	ldr	r0, [pc, #52]	; 177a0 <ftello64@plt+0x60d0>
   17768:	mov	r1, r5
   1776c:	stm	sp, {ip, lr}
   17770:	str	r4, [sp, #8]
   17774:	bl	113b8 <printf@plt>
   17778:	ldr	r3, [pc, #36]	; 177a4 <ftello64@plt+0x60d4>
   1777c:	ldr	r1, [pc, #36]	; 177a8 <ftello64@plt+0x60d8>
   17780:	mov	ip, #1
   17784:	ldr	r2, [r3]
   17788:	ldr	r3, [r2]
   1778c:	add	r0, r3, r0
   17790:	str	r0, [r2]
   17794:	str	ip, [r1]
   17798:	add	sp, sp, #20
   1779c:	pop	{r4, r5, pc}
   177a0:	andeq	r5, r2, r0, lsr r4
   177a4:	andeq	r7, r3, r8, lsl r5
   177a8:	andeq	r7, r3, r8, lsl #24
   177ac:	push	{r4, r5, r6, r7, r8, lr}
   177b0:	mov	r7, r1
   177b4:	mov	r5, r0
   177b8:	sub	r4, r1, #1
   177bc:	add	r6, r1, #5
   177c0:	ldrb	r3, [r4, #1]!
   177c4:	mov	r0, r5
   177c8:	lsr	r3, r3, #1
   177cc:	cmp	r3, #32
   177d0:	mov	r1, r3
   177d4:	beq	177e4 <ftello64@plt+0x6114>
   177d8:	bl	15ec4 <ftello64@plt+0x47f4>
   177dc:	cmp	r6, r4
   177e0:	bne	177c0 <ftello64@plt+0x60f0>
   177e4:	ldrb	r1, [r7, #6]
   177e8:	asr	r1, r1, #1
   177ec:	ands	r1, r1, #15
   177f0:	popeq	{r4, r5, r6, r7, r8, pc}
   177f4:	ldr	r0, [pc, #36]	; 17820 <ftello64@plt+0x6150>
   177f8:	bl	113b8 <printf@plt>
   177fc:	ldr	r3, [pc, #32]	; 17824 <ftello64@plt+0x6154>
   17800:	ldr	r1, [pc, #32]	; 17828 <ftello64@plt+0x6158>
   17804:	mov	ip, #1
   17808:	ldr	r2, [r3]
   1780c:	ldr	r3, [r2]
   17810:	add	r0, r3, r0
   17814:	str	r0, [r2]
   17818:	str	ip, [r1]
   1781c:	pop	{r4, r5, r6, r7, r8, pc}
   17820:	andeq	r5, r2, r0, asr r4
   17824:	andeq	r7, r3, r8, lsl r5
   17828:	andeq	r7, r3, r8, lsl #24
   1782c:	push	{r4, r5, lr}
   17830:	sub	sp, sp, #60	; 0x3c
   17834:	add	r2, r1, #64	; 0x40
   17838:	add	r3, r1, #100	; 0x64
   1783c:	add	lr, r1, #52	; 0x34
   17840:	add	ip, r1, #44	; 0x2c
   17844:	str	r2, [sp, #52]	; 0x34
   17848:	add	r2, r1, #16
   1784c:	add	r5, r1, #68	; 0x44
   17850:	add	r4, r1, #104	; 0x68
   17854:	str	r3, [sp, #48]	; 0x30
   17858:	str	lr, [sp, #36]	; 0x24
   1785c:	add	r3, r1, #32
   17860:	add	lr, r1, #84	; 0x54
   17864:	str	ip, [sp, #32]
   17868:	str	r2, [sp, #28]
   1786c:	add	ip, r1, #88	; 0x58
   17870:	add	r2, r1, #48	; 0x30
   17874:	str	r5, [sp, #44]	; 0x2c
   17878:	str	r4, [sp, #40]	; 0x28
   1787c:	add	r5, r1, #56	; 0x38
   17880:	add	r4, r1, #60	; 0x3c
   17884:	str	r3, [sp, #24]
   17888:	add	r3, r1, #40	; 0x28
   1788c:	stmib	sp, {r2, ip, lr}
   17890:	add	r2, r1, #24
   17894:	str	r3, [sp]
   17898:	str	r5, [sp, #20]
   1789c:	add	r3, r1, #8
   178a0:	str	r4, [sp, #16]
   178a4:	ldr	r1, [pc, #20]	; 178c0 <ftello64@plt+0x61f0>
   178a8:	bl	1161c <sscanf@plt>
   178ac:	sub	r0, r0, #16
   178b0:	clz	r0, r0
   178b4:	lsr	r0, r0, #5
   178b8:	add	sp, sp, #60	; 0x3c
   178bc:	pop	{r4, r5, pc}
   178c0:	andeq	r5, r2, r4, asr r4
   178c4:	push	{r4, r5, lr}
   178c8:	mov	r4, r1
   178cc:	sub	sp, sp, #52	; 0x34
   178d0:	add	lr, r1, #100	; 0x64
   178d4:	add	ip, r1, #68	; 0x44
   178d8:	add	r2, r4, #52	; 0x34
   178dc:	add	r3, r4, #44	; 0x2c
   178e0:	add	r1, r1, #104	; 0x68
   178e4:	str	lr, [sp, #40]	; 0x28
   178e8:	str	ip, [sp, #36]	; 0x24
   178ec:	add	lr, r4, #32
   178f0:	add	ip, r4, #84	; 0x54
   178f4:	str	r1, [sp, #32]
   178f8:	str	r2, [sp, #28]
   178fc:	add	r1, r4, #88	; 0x58
   17900:	add	r2, r4, #48	; 0x30
   17904:	str	r3, [sp, #24]
   17908:	add	r5, r4, #16
   1790c:	add	r3, r4, #40	; 0x28
   17910:	str	r1, [sp, #8]
   17914:	str	r2, [sp, #4]
   17918:	str	r3, [sp]
   1791c:	str	r5, [sp, #20]
   17920:	add	r3, r4, #8
   17924:	str	lr, [sp, #16]
   17928:	str	ip, [sp, #12]
   1792c:	add	r2, r4, #24
   17930:	ldr	r1, [pc, #28]	; 17954 <ftello64@plt+0x6284>
   17934:	bl	1161c <sscanf@plt>
   17938:	mov	r3, #0
   1793c:	str	r3, [r4, #56]	; 0x38
   17940:	sub	r0, r0, #13
   17944:	clz	r0, r0
   17948:	lsr	r0, r0, #5
   1794c:	add	sp, sp, #52	; 0x34
   17950:	pop	{r4, r5, pc}
   17954:	muleq	r2, r8, r4
   17958:	push	{r4, r5, lr}
   1795c:	mov	r4, r1
   17960:	sub	sp, sp, #44	; 0x2c
   17964:	add	r2, r4, #68	; 0x44
   17968:	add	r3, r4, #104	; 0x68
   1796c:	add	r1, r1, #100	; 0x64
   17970:	add	lr, r4, #44	; 0x2c
   17974:	add	ip, r4, #16
   17978:	str	r1, [sp, #32]
   1797c:	str	r2, [sp, #28]
   17980:	add	r1, r4, #84	; 0x54
   17984:	add	r2, r4, #88	; 0x58
   17988:	str	r3, [sp, #24]
   1798c:	add	r5, r4, #52	; 0x34
   17990:	add	r3, r4, #48	; 0x30
   17994:	str	r1, [sp, #8]
   17998:	str	r2, [sp, #4]
   1799c:	str	r3, [sp]
   179a0:	add	r2, r4, #8
   179a4:	add	r3, r4, #40	; 0x28
   179a8:	str	r5, [sp, #20]
   179ac:	str	lr, [sp, #16]
   179b0:	str	ip, [sp, #12]
   179b4:	ldr	r1, [pc, #44]	; 179e8 <ftello64@plt+0x6318>
   179b8:	bl	1161c <sscanf@plt>
   179bc:	mov	r2, #0
   179c0:	mov	r3, #0
   179c4:	mov	r1, #0
   179c8:	str	r1, [r4, #56]	; 0x38
   179cc:	strd	r2, [r4, #24]
   179d0:	strd	r2, [r4, #32]
   179d4:	sub	r0, r0, #11
   179d8:	clz	r0, r0
   179dc:	lsr	r0, r0, #5
   179e0:	add	sp, sp, #44	; 0x2c
   179e4:	pop	{r4, r5, pc}
   179e8:	ldrdeq	r5, [r2], -r0
   179ec:	mov	r1, #2
   179f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179f4:	mov	r0, r1
   179f8:	sub	sp, sp, #52	; 0x34
   179fc:	mov	r2, #0
   17a00:	bl	11688 <socket@plt>
   17a04:	subs	r8, r0, #0
   17a08:	blt	17b94 <ftello64@plt+0x64c4>
   17a0c:	add	r2, sp, #12
   17a10:	mov	r1, #0
   17a14:	ldr	r0, [pc, #436]	; 17bd0 <ftello64@plt+0x6500>
   17a18:	bl	1b5e4 <_obstack_memory_used@@Base+0x3e0>
   17a1c:	subs	r7, r0, #0
   17a20:	beq	17b94 <ftello64@plt+0x64c4>
   17a24:	ldr	r9, [sp, #12]
   17a28:	mov	r5, #0
   17a2c:	mov	r6, #58	; 0x3a
   17a30:	mov	r0, r7
   17a34:	sub	r2, r0, r7
   17a38:	sub	r2, r9, r2
   17a3c:	add	r0, r0, #1
   17a40:	mov	r1, r6
   17a44:	bl	115bc <memchr@plt>
   17a48:	add	r5, r5, #1
   17a4c:	cmp	r0, #0
   17a50:	bne	17a34 <ftello64@plt+0x6364>
   17a54:	mov	r4, r0
   17a58:	lsl	r0, r5, #3
   17a5c:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   17a60:	subs	r3, r0, #0
   17a64:	str	r3, [sp, #4]
   17a68:	beq	17ba8 <ftello64@plt+0x64d8>
   17a6c:	ldr	r2, [sp, #12]
   17a70:	mov	r1, #58	; 0x3a
   17a74:	mov	r0, r7
   17a78:	bl	115bc <memchr@plt>
   17a7c:	subs	r9, r0, #0
   17a80:	beq	17b3c <ftello64@plt+0x646c>
   17a84:	ldr	r3, [sp, #4]
   17a88:	ldr	fp, [pc, #324]	; 17bd4 <ftello64@plt+0x6504>
   17a8c:	mov	sl, r4
   17a90:	mov	r5, r3
   17a94:	add	r6, r3, #4
   17a98:	ldrb	r3, [r9, #-1]
   17a9c:	strb	sl, [r9]
   17aa0:	sub	r0, r9, #1
   17aa4:	cmp	r3, #10
   17aa8:	cmpne	r3, #32
   17aac:	beq	17ac0 <ftello64@plt+0x63f0>
   17ab0:	ldrb	r3, [r0, #-1]!
   17ab4:	cmp	r3, #32
   17ab8:	cmpne	r3, #10
   17abc:	bne	17ab0 <ftello64@plt+0x63e0>
   17ac0:	add	r0, r0, #1
   17ac4:	bl	1143c <strdup@plt>
   17ac8:	add	r4, r4, #1
   17acc:	mov	r1, r0
   17ad0:	str	r0, [r5, #4]
   17ad4:	str	r4, [r6, #-4]
   17ad8:	add	r0, sp, #16
   17adc:	bl	11490 <strcpy@plt>
   17ae0:	mvn	r3, #0
   17ae4:	add	r2, sp, #16
   17ae8:	mov	r1, fp
   17aec:	mov	r0, r8
   17af0:	str	r3, [sp, #32]
   17af4:	bl	1ade4 <argp_parse@@Base+0x1084>
   17af8:	ldr	r2, [r5, #4]
   17afc:	cmp	r0, #0
   17b00:	ldrge	r3, [sp, #32]
   17b04:	strge	r3, [r6, #-4]
   17b08:	cmp	r2, #0
   17b0c:	beq	17b64 <ftello64@plt+0x6494>
   17b10:	ldr	r2, [sp, #12]
   17b14:	sub	r3, r9, r7
   17b18:	mov	r0, r9
   17b1c:	sub	r2, r2, r3
   17b20:	mov	r1, #58	; 0x3a
   17b24:	bl	115bc <memchr@plt>
   17b28:	add	r5, r5, #8
   17b2c:	add	r6, r6, #8
   17b30:	subs	r9, r0, #0
   17b34:	bne	17a98 <ftello64@plt+0x63c8>
   17b38:	lsl	r4, r4, #3
   17b3c:	ldr	r1, [sp, #4]
   17b40:	mov	r3, #0
   17b44:	add	r2, r1, r4
   17b48:	mov	r0, r7
   17b4c:	str	r3, [r1, r4]
   17b50:	str	r3, [r2, #4]
   17b54:	bl	1acdc <argp_parse@@Base+0xf7c>
   17b58:	ldr	r0, [sp, #4]
   17b5c:	add	sp, sp, #52	; 0x34
   17b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b64:	str	r2, [sp, #4]
   17b68:	bl	11568 <__errno_location@plt>
   17b6c:	mov	r4, r0
   17b70:	mov	r0, r8
   17b74:	ldr	r5, [r4]
   17b78:	bl	116b8 <close@plt>
   17b7c:	mov	r0, r7
   17b80:	bl	1acdc <argp_parse@@Base+0xf7c>
   17b84:	ldr	r0, [sp, #4]
   17b88:	str	r5, [r4]
   17b8c:	add	sp, sp, #52	; 0x34
   17b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b94:	mov	r3, #0
   17b98:	mov	r0, r3
   17b9c:	str	r3, [sp, #4]
   17ba0:	add	sp, sp, #52	; 0x34
   17ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ba8:	bl	11568 <__errno_location@plt>
   17bac:	mov	r4, r0
   17bb0:	mov	r0, r8
   17bb4:	ldr	r5, [r4]
   17bb8:	bl	116b8 <close@plt>
   17bbc:	mov	r0, r7
   17bc0:	bl	1acdc <argp_parse@@Base+0xf7c>
   17bc4:	str	r5, [r4]
   17bc8:	ldr	r0, [sp, #4]
   17bcc:	b	17b5c <ftello64@plt+0x648c>
   17bd0:	andeq	r5, r2, r0, lsl #10
   17bd4:	andeq	r8, r0, r3, lsr r9
   17bd8:	cmp	r0, #84	; 0x54
   17bdc:	beq	17be8 <ftello64@plt+0x6518>
   17be0:	mov	r0, #7
   17be4:	bx	lr
   17be8:	ldr	r3, [r2, #28]
   17bec:	push	{r4, r5, r6, lr}
   17bf0:	mov	r4, r1
   17bf4:	ldr	r5, [r3]
   17bf8:	sub	sp, sp, #16
   17bfc:	cmp	r5, #0
   17c00:	beq	17cd0 <ftello64@plt+0x6600>
   17c04:	ldr	r3, [r5, #4]
   17c08:	tst	r3, #1
   17c0c:	beq	17ca0 <ftello64@plt+0x65d0>
   17c10:	ldr	r6, [r5, #8]
   17c14:	ldr	r3, [r6]
   17c18:	tst	r3, #1
   17c1c:	beq	17c38 <ftello64@plt+0x6568>
   17c20:	ldr	r3, [r5]
   17c24:	ldr	r2, [pc, #216]	; 17d04 <ftello64@plt+0x6634>
   17c28:	mov	r1, #0
   17c2c:	mov	r0, #1
   17c30:	bl	114a8 <error@plt>
   17c34:	ldr	r6, [r5, #8]
   17c38:	mov	r2, #0
   17c3c:	add	r1, sp, #12
   17c40:	mov	r0, r4
   17c44:	bl	113ac <strtol@plt>
   17c48:	str	r0, [r6, #4]
   17c4c:	ldrb	r3, [r4]
   17c50:	cmp	r3, #0
   17c54:	beq	17c68 <ftello64@plt+0x6598>
   17c58:	ldr	r3, [sp, #12]
   17c5c:	ldrb	r3, [r3]
   17c60:	cmp	r3, #0
   17c64:	beq	17c84 <ftello64@plt+0x65b4>
   17c68:	ldr	r2, [r5]
   17c6c:	mov	r3, r4
   17c70:	str	r2, [sp]
   17c74:	mov	r1, #0
   17c78:	ldr	r2, [pc, #136]	; 17d08 <ftello64@plt+0x6638>
   17c7c:	mov	r0, #1
   17c80:	bl	114a8 <error@plt>
   17c84:	ldr	r2, [r5, #8]
   17c88:	mov	r0, #0
   17c8c:	ldr	r3, [r2]
   17c90:	orr	r3, r3, #1
   17c94:	str	r3, [r2]
   17c98:	add	sp, sp, #16
   17c9c:	pop	{r4, r5, r6, pc}
   17ca0:	mov	r0, #8
   17ca4:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   17ca8:	cmp	r0, #0
   17cac:	str	r0, [r5, #8]
   17cb0:	movne	r6, r0
   17cb4:	beq	17ce8 <ftello64@plt+0x6618>
   17cb8:	ldr	r3, [r5, #4]
   17cbc:	mov	r2, #0
   17cc0:	orr	r3, r3, #1
   17cc4:	str	r2, [r6]
   17cc8:	str	r3, [r5, #4]
   17ccc:	b	17c38 <ftello64@plt+0x6568>
   17cd0:	mov	r3, r1
   17cd4:	ldr	r2, [pc, #48]	; 17d0c <ftello64@plt+0x663c>
   17cd8:	mov	r1, r5
   17cdc:	mov	r0, #1
   17ce0:	bl	114a8 <error@plt>
   17ce4:	b	17c04 <ftello64@plt+0x6534>
   17ce8:	bl	11568 <__errno_location@plt>
   17cec:	ldr	r2, [pc, #28]	; 17d10 <ftello64@plt+0x6640>
   17cf0:	ldr	r1, [r0]
   17cf4:	mov	r0, #1
   17cf8:	bl	114a8 <error@plt>
   17cfc:	ldr	r6, [r5, #8]
   17d00:	b	17cb8 <ftello64@plt+0x65e8>
   17d04:	andeq	r5, r2, ip, ror #10
   17d08:	muleq	r2, r8, r5
   17d0c:	andeq	r5, r2, r0, lsl r5
   17d10:	andeq	r5, r2, r8, lsr r5
   17d14:	ldr	r3, [pc, #60]	; 17d58 <ftello64@plt+0x6688>
   17d18:	ldr	r2, [r3]
   17d1c:	cmp	r2, #0
   17d20:	beq	17d4c <ftello64@plt+0x667c>
   17d24:	ldr	r2, [r3, #8]
   17d28:	cmp	r0, r2
   17d2c:	bne	17d40 <ftello64@plt+0x6670>
   17d30:	b	17d50 <ftello64@plt+0x6680>
   17d34:	ldr	r2, [r3, #8]
   17d38:	cmp	r2, r0
   17d3c:	beq	17d50 <ftello64@plt+0x6680>
   17d40:	ldr	r2, [r3, #16]!
   17d44:	cmp	r2, #0
   17d48:	bne	17d34 <ftello64@plt+0x6664>
   17d4c:	mov	r3, r2
   17d50:	mov	r0, r3
   17d54:	bx	lr
   17d58:	andeq	r7, r3, r4, asr #15
   17d5c:	ldr	r3, [pc, #684]	; 18010 <ftello64@plt+0x6940>
   17d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d64:	mov	r4, r0
   17d68:	ldr	r3, [r3]
   17d6c:	sub	sp, sp, #28
   17d70:	cmp	r3, #0
   17d74:	beq	17dbc <ftello64@plt+0x66ec>
   17d78:	ldr	r3, [pc, #660]	; 18014 <ftello64@plt+0x6944>
   17d7c:	str	r3, [sp, #4]
   17d80:	ldr	r5, [r3]
   17d84:	cmp	r5, #0
   17d88:	bne	17d9c <ftello64@plt+0x66cc>
   17d8c:	b	17db0 <ftello64@plt+0x66e0>
   17d90:	ldr	r5, [r5]
   17d94:	cmp	r5, #0
   17d98:	beq	17db0 <ftello64@plt+0x66e0>
   17d9c:	mov	r1, r4
   17da0:	ldr	r0, [r5, #4]
   17da4:	bl	113a0 <strcmp@plt>
   17da8:	cmp	r0, #0
   17dac:	bne	17d90 <ftello64@plt+0x66c0>
   17db0:	mov	r0, r5
   17db4:	add	sp, sp, #28
   17db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17dbc:	ldr	r1, [pc, #596]	; 18018 <ftello64@plt+0x6948>
   17dc0:	ldr	r0, [pc, #596]	; 1801c <ftello64@plt+0x694c>
   17dc4:	str	r3, [sp, #16]
   17dc8:	str	r3, [sp, #20]
   17dcc:	bl	1164c <fopen64@plt>
   17dd0:	subs	r3, r0, #0
   17dd4:	str	r3, [sp, #8]
   17dd8:	beq	17f80 <ftello64@plt+0x68b0>
   17ddc:	add	r1, sp, #20
   17de0:	add	r0, sp, #16
   17de4:	mov	r2, #10
   17de8:	bl	11388 <__getdelim@plt>
   17dec:	cmp	r0, #0
   17df0:	blt	17f24 <ftello64@plt+0x6854>
   17df4:	ldr	r3, [sp, #8]
   17df8:	mov	r2, #10
   17dfc:	add	r1, sp, #20
   17e00:	add	r0, sp, #16
   17e04:	bl	11388 <__getdelim@plt>
   17e08:	cmp	r0, #0
   17e0c:	blt	17f24 <ftello64@plt+0x6854>
   17e10:	ldr	r5, [sp, #16]
   17e14:	ldr	r1, [pc, #516]	; 18020 <ftello64@plt+0x6950>
   17e18:	mov	r0, r5
   17e1c:	bl	11364 <strstr@plt>
   17e20:	cmp	r0, #0
   17e24:	movne	sl, #2
   17e28:	beq	17ff8 <ftello64@plt+0x6928>
   17e2c:	ldr	fp, [pc, #496]	; 18024 <ftello64@plt+0x6954>
   17e30:	ldr	r9, [sp, #8]
   17e34:	ldr	r3, [pc, #472]	; 18014 <ftello64@plt+0x6944>
   17e38:	mov	r8, #0
   17e3c:	str	r3, [sp, #4]
   17e40:	str	r4, [sp, #12]
   17e44:	mov	r3, r9
   17e48:	mov	r2, #10
   17e4c:	add	r1, sp, #20
   17e50:	add	r0, sp, #16
   17e54:	bl	11388 <__getdelim@plt>
   17e58:	cmp	r0, #0
   17e5c:	ble	17f68 <ftello64@plt+0x6898>
   17e60:	mov	r0, #120	; 0x78
   17e64:	bl	1c908 <_obstack_memory_used@@Base+0x1704>
   17e68:	ldr	r4, [sp, #16]
   17e6c:	ldrb	r6, [r4]
   17e70:	cmp	r6, #0
   17e74:	mov	r5, r0
   17e78:	beq	17eb4 <ftello64@plt+0x67e4>
   17e7c:	tst	r6, #128	; 0x80
   17e80:	bne	17eb4 <ftello64@plt+0x67e4>
   17e84:	bl	11520 <__ctype_b_loc@plt>
   17e88:	ldr	r1, [r0]
   17e8c:	b	17ea4 <ftello64@plt+0x67d4>
   17e90:	ldrb	r6, [r4, #1]!
   17e94:	cmp	r6, #0
   17e98:	beq	17eb4 <ftello64@plt+0x67e4>
   17e9c:	tst	r6, #128	; 0x80
   17ea0:	bne	17eb4 <ftello64@plt+0x67e4>
   17ea4:	lsl	r6, r6, #1
   17ea8:	ldrh	r3, [r1, r6]
   17eac:	tst	r3, #8192	; 0x2000
   17eb0:	bne	17e90 <ftello64@plt+0x67c0>
   17eb4:	mov	r1, #58	; 0x3a
   17eb8:	mov	r0, r4
   17ebc:	bl	11550 <strchr@plt>
   17ec0:	subs	r7, r0, #0
   17ec4:	beq	17fa4 <ftello64@plt+0x68d4>
   17ec8:	sub	r6, r7, r4
   17ecc:	add	r0, r6, #1
   17ed0:	bl	1c3f4 <_obstack_memory_used@@Base+0x11f0>
   17ed4:	mov	r1, r4
   17ed8:	mov	r2, r6
   17edc:	str	r0, [r5, #4]
   17ee0:	bl	1140c <memcpy@plt>
   17ee4:	ldr	r3, [fp, sl, lsl #2]
   17ee8:	mov	r1, r5
   17eec:	strb	r8, [r0, r6]
   17ef0:	add	r0, r7, #1
   17ef4:	blx	r3
   17ef8:	cmp	r0, #0
   17efc:	beq	17fcc <ftello64@plt+0x68fc>
   17f00:	ldr	r3, [pc, #288]	; 18028 <ftello64@plt+0x6958>
   17f04:	str	r8, [r5]
   17f08:	ldr	r3, [r3]
   17f0c:	cmp	r3, #0
   17f10:	ldreq	r3, [sp, #4]
   17f14:	str	r5, [r3]
   17f18:	ldr	r3, [pc, #264]	; 18028 <ftello64@plt+0x6958>
   17f1c:	str	r5, [r3]
   17f20:	b	17e44 <ftello64@plt+0x6774>
   17f24:	bl	11568 <__errno_location@plt>
   17f28:	ldr	r1, [pc, #228]	; 18014 <ftello64@plt+0x6944>
   17f2c:	ldr	r3, [pc, #232]	; 1801c <ftello64@plt+0x694c>
   17f30:	ldr	r2, [pc, #244]	; 1802c <ftello64@plt+0x695c>
   17f34:	str	r1, [sp, #4]
   17f38:	ldr	r1, [r0]
   17f3c:	mov	r0, #0
   17f40:	bl	114a8 <error@plt>
   17f44:	ldr	r0, [sp, #8]
   17f48:	bl	115c8 <fclose@plt>
   17f4c:	ldr	r0, [sp, #16]
   17f50:	bl	1acdc <argp_parse@@Base+0xf7c>
   17f54:	ldr	r2, [pc, #180]	; 18010 <ftello64@plt+0x6940>
   17f58:	mov	r3, #1
   17f5c:	str	r3, [r2]
   17f60:	ldr	r3, [sp, #4]
   17f64:	b	17d80 <ftello64@plt+0x66b0>
   17f68:	ldr	r4, [sp, #12]
   17f6c:	ldr	r0, [sp, #8]
   17f70:	bl	115c8 <fclose@plt>
   17f74:	ldr	r0, [sp, #16]
   17f78:	bl	1acdc <argp_parse@@Base+0xf7c>
   17f7c:	b	17f54 <ftello64@plt+0x6884>
   17f80:	bl	11568 <__errno_location@plt>
   17f84:	ldr	r1, [pc, #136]	; 18014 <ftello64@plt+0x6944>
   17f88:	ldr	r3, [pc, #140]	; 1801c <ftello64@plt+0x694c>
   17f8c:	str	r1, [sp, #4]
   17f90:	ldr	r2, [pc, #152]	; 18030 <ftello64@plt+0x6960>
   17f94:	ldr	r1, [r0]
   17f98:	ldr	r0, [sp, #8]
   17f9c:	bl	114a8 <error@plt>
   17fa0:	b	17f54 <ftello64@plt+0x6884>
   17fa4:	bl	11568 <__errno_location@plt>
   17fa8:	ldr	r3, [pc, #108]	; 1801c <ftello64@plt+0x694c>
   17fac:	ldr	r2, [pc, #120]	; 1802c <ftello64@plt+0x695c>
   17fb0:	ldr	r4, [sp, #12]
   17fb4:	ldr	r1, [r0]
   17fb8:	mov	r0, r7
   17fbc:	bl	114a8 <error@plt>
   17fc0:	mov	r0, r5
   17fc4:	bl	1acdc <argp_parse@@Base+0xf7c>
   17fc8:	b	17f6c <ftello64@plt+0x689c>
   17fcc:	mov	r6, r0
   17fd0:	bl	11568 <__errno_location@plt>
   17fd4:	ldr	r3, [pc, #64]	; 1801c <ftello64@plt+0x694c>
   17fd8:	ldr	r2, [pc, #76]	; 1802c <ftello64@plt+0x695c>
   17fdc:	ldr	r4, [sp, #12]
   17fe0:	ldr	r1, [r0]
   17fe4:	mov	r0, r6
   17fe8:	bl	114a8 <error@plt>
   17fec:	mov	r0, r5
   17ff0:	bl	1acdc <argp_parse@@Base+0xf7c>
   17ff4:	b	17f6c <ftello64@plt+0x689c>
   17ff8:	mov	r0, r5
   17ffc:	ldr	r1, [pc, #48]	; 18034 <ftello64@plt+0x6964>
   18000:	bl	11364 <strstr@plt>
   18004:	adds	sl, r0, #0
   18008:	movne	sl, #1
   1800c:	b	17e2c <ftello64@plt+0x675c>
   18010:			; <UNDEFINED> instruction: 0x00037bb0
   18014:	andeq	r7, r3, ip, lsl ip
   18018:	andeq	r3, r2, r0, lsl #21
   1801c:	andeq	r5, r2, r0, lsl #10
   18020:	strdeq	r5, [r2], -r0
   18024:	strdeq	r5, [r2], -r8
   18028:	andeq	r7, r3, r8, lsl ip
   1802c:	andeq	r5, r2, r0, ror #11
   18030:	ldrdeq	r5, [r2], -r0
   18034:	strdeq	r5, [r2], -ip
   18038:	push	{r4, r5, r6, lr}
   1803c:	mov	r4, r0
   18040:	ldr	r0, [r0, #4]
   18044:	mov	r5, r1
   18048:	mov	r6, r2
   1804c:	bl	17d5c <ftello64@plt+0x668c>
   18050:	mov	r2, r6
   18054:	mov	r1, r5
   18058:	clz	r3, r0
   1805c:	mov	r0, r4
   18060:	lsr	r3, r3, #5
   18064:	pop	{r4, r5, r6, lr}
   18068:	b	1663c <ftello64@plt+0x4f6c>
   1806c:	push	{r4, r5, r6, lr}
   18070:	mov	r4, r0
   18074:	ldr	r0, [r0, #4]
   18078:	mov	r5, r1
   1807c:	mov	r6, r2
   18080:	bl	17d5c <ftello64@plt+0x668c>
   18084:	cmp	r0, #0
   18088:	beq	180a4 <ftello64@plt+0x69d4>
   1808c:	ldr	r3, [r0, #8]
   18090:	mov	r2, r6
   18094:	mov	r1, r5
   18098:	mov	r0, r4
   1809c:	pop	{r4, r5, r6, lr}
   180a0:	b	1631c <ftello64@plt+0x4c4c>
   180a4:	mov	r0, r4
   180a8:	ldr	r1, [pc, #4]	; 180b4 <ftello64@plt+0x69e4>
   180ac:	pop	{r4, r5, r6, lr}
   180b0:	b	15f4c <ftello64@plt+0x487c>
   180b4:	andeq	r5, r2, r4, lsl #12
   180b8:	push	{r4, r5, r6, lr}
   180bc:	mov	r4, r0
   180c0:	ldr	r0, [r0, #4]
   180c4:	mov	r5, r1
   180c8:	mov	r6, r2
   180cc:	bl	17d5c <ftello64@plt+0x668c>
   180d0:	cmp	r0, #0
   180d4:	beq	180f0 <ftello64@plt+0x6a20>
   180d8:	ldr	r3, [r0, #16]
   180dc:	mov	r2, r6
   180e0:	mov	r1, r5
   180e4:	mov	r0, r4
   180e8:	pop	{r4, r5, r6, lr}
   180ec:	b	1631c <ftello64@plt+0x4c4c>
   180f0:	mov	r0, r4
   180f4:	ldr	r1, [pc, #4]	; 18100 <ftello64@plt+0x6a30>
   180f8:	pop	{r4, r5, r6, lr}
   180fc:	b	15f4c <ftello64@plt+0x487c>
   18100:	andeq	r5, r2, ip, lsl r6
   18104:	push	{r4, r5, r6, lr}
   18108:	mov	r4, r0
   1810c:	ldr	r0, [r0, #4]
   18110:	mov	r5, r1
   18114:	mov	r6, r2
   18118:	bl	17d5c <ftello64@plt+0x668c>
   1811c:	cmp	r0, #0
   18120:	beq	1813c <ftello64@plt+0x6a6c>
   18124:	ldr	r3, [r0, #24]
   18128:	mov	r2, r6
   1812c:	mov	r1, r5
   18130:	mov	r0, r4
   18134:	pop	{r4, r5, r6, lr}
   18138:	b	1631c <ftello64@plt+0x4c4c>
   1813c:	mov	r0, r4
   18140:	ldr	r1, [pc, #4]	; 1814c <ftello64@plt+0x6a7c>
   18144:	pop	{r4, r5, r6, lr}
   18148:	b	15f4c <ftello64@plt+0x487c>
   1814c:	andeq	r5, r2, r4, lsr r6
   18150:	push	{r4, r5, r6, lr}
   18154:	mov	r4, r0
   18158:	ldr	r0, [r0, #4]
   1815c:	mov	r5, r1
   18160:	mov	r6, r2
   18164:	bl	17d5c <ftello64@plt+0x668c>
   18168:	cmp	r0, #0
   1816c:	beq	18188 <ftello64@plt+0x6ab8>
   18170:	ldr	r3, [r0, #32]
   18174:	mov	r2, r6
   18178:	mov	r1, r5
   1817c:	mov	r0, r4
   18180:	pop	{r4, r5, r6, lr}
   18184:	b	1631c <ftello64@plt+0x4c4c>
   18188:	mov	r0, r4
   1818c:	ldr	r1, [pc, #4]	; 18198 <ftello64@plt+0x6ac8>
   18190:	pop	{r4, r5, r6, lr}
   18194:	b	15f4c <ftello64@plt+0x487c>
   18198:	andeq	r5, r2, r8, asr #12
   1819c:	push	{r4, r5, r6, lr}
   181a0:	mov	r4, r0
   181a4:	ldr	r0, [r0, #4]
   181a8:	mov	r5, r1
   181ac:	mov	r6, r2
   181b0:	bl	17d5c <ftello64@plt+0x668c>
   181b4:	cmp	r0, #0
   181b8:	beq	181d4 <ftello64@plt+0x6b04>
   181bc:	ldr	r3, [r0, #40]	; 0x28
   181c0:	mov	r2, r6
   181c4:	mov	r1, r5
   181c8:	mov	r0, r4
   181cc:	pop	{r4, r5, r6, lr}
   181d0:	b	1631c <ftello64@plt+0x4c4c>
   181d4:	mov	r0, r4
   181d8:	ldr	r1, [pc, #4]	; 181e4 <ftello64@plt+0x6b14>
   181dc:	pop	{r4, r5, r6, lr}
   181e0:	b	15f4c <ftello64@plt+0x487c>
   181e4:	andeq	r5, r2, ip, asr r6
   181e8:	push	{r4, r5, r6, lr}
   181ec:	mov	r4, r0
   181f0:	ldr	r0, [r0, #4]
   181f4:	mov	r5, r1
   181f8:	mov	r6, r2
   181fc:	bl	17d5c <ftello64@plt+0x668c>
   18200:	cmp	r0, #0
   18204:	beq	18220 <ftello64@plt+0x6b50>
   18208:	ldr	r3, [r0, #44]	; 0x2c
   1820c:	mov	r2, r6
   18210:	mov	r1, r5
   18214:	mov	r0, r4
   18218:	pop	{r4, r5, r6, lr}
   1821c:	b	1631c <ftello64@plt+0x4c4c>
   18220:	mov	r0, r4
   18224:	ldr	r1, [pc, #4]	; 18230 <ftello64@plt+0x6b60>
   18228:	pop	{r4, r5, r6, lr}
   1822c:	b	15f4c <ftello64@plt+0x487c>
   18230:	andeq	r5, r2, r0, ror r6
   18234:	push	{r4, r5, r6, lr}
   18238:	mov	r4, r0
   1823c:	ldr	r0, [r0, #4]
   18240:	mov	r5, r1
   18244:	mov	r6, r2
   18248:	bl	17d5c <ftello64@plt+0x668c>
   1824c:	cmp	r0, #0
   18250:	beq	1826c <ftello64@plt+0x6b9c>
   18254:	ldr	r3, [r0, #48]	; 0x30
   18258:	mov	r2, r6
   1825c:	mov	r1, r5
   18260:	mov	r0, r4
   18264:	pop	{r4, r5, r6, lr}
   18268:	b	1631c <ftello64@plt+0x4c4c>
   1826c:	mov	r0, r4
   18270:	ldr	r1, [pc, #4]	; 1827c <ftello64@plt+0x6bac>
   18274:	pop	{r4, r5, r6, lr}
   18278:	b	15f4c <ftello64@plt+0x487c>
   1827c:	andeq	r5, r2, r4, lsl #13
   18280:	push	{r4, r5, r6, lr}
   18284:	mov	r4, r0
   18288:	ldr	r0, [r0, #4]
   1828c:	mov	r5, r1
   18290:	mov	r6, r2
   18294:	bl	17d5c <ftello64@plt+0x668c>
   18298:	cmp	r0, #0
   1829c:	beq	182b8 <ftello64@plt+0x6be8>
   182a0:	ldr	r3, [r0, #52]	; 0x34
   182a4:	mov	r2, r6
   182a8:	mov	r1, r5
   182ac:	mov	r0, r4
   182b0:	pop	{r4, r5, r6, lr}
   182b4:	b	1631c <ftello64@plt+0x4c4c>
   182b8:	mov	r0, r4
   182bc:	ldr	r1, [pc, #4]	; 182c8 <ftello64@plt+0x6bf8>
   182c0:	pop	{r4, r5, r6, lr}
   182c4:	b	15f4c <ftello64@plt+0x487c>
   182c8:	muleq	r2, ip, r6
   182cc:	push	{r4, r5, r6, lr}
   182d0:	mov	r4, r0
   182d4:	ldr	r0, [r0, #4]
   182d8:	mov	r5, r1
   182dc:	mov	r6, r2
   182e0:	bl	17d5c <ftello64@plt+0x668c>
   182e4:	cmp	r0, #0
   182e8:	beq	18304 <ftello64@plt+0x6c34>
   182ec:	ldr	r3, [r0, #56]	; 0x38
   182f0:	mov	r2, r6
   182f4:	mov	r1, r5
   182f8:	mov	r0, r4
   182fc:	pop	{r4, r5, r6, lr}
   18300:	b	1631c <ftello64@plt+0x4c4c>
   18304:	mov	r0, r4
   18308:	ldr	r1, [pc, #4]	; 18314 <ftello64@plt+0x6c44>
   1830c:	pop	{r4, r5, r6, lr}
   18310:	b	15f4c <ftello64@plt+0x487c>
   18314:			; <UNDEFINED> instruction: 0x000256b4
   18318:	push	{r4, r5, r6, lr}
   1831c:	mov	r4, r0
   18320:	ldr	r0, [r0, #4]
   18324:	mov	r5, r1
   18328:	mov	r6, r2
   1832c:	bl	17d5c <ftello64@plt+0x668c>
   18330:	cmp	r0, #0
   18334:	beq	18350 <ftello64@plt+0x6c80>
   18338:	ldr	r3, [r0, #60]	; 0x3c
   1833c:	mov	r2, r6
   18340:	mov	r1, r5
   18344:	mov	r0, r4
   18348:	pop	{r4, r5, r6, lr}
   1834c:	b	1631c <ftello64@plt+0x4c4c>
   18350:	mov	r0, r4
   18354:	ldr	r1, [pc, #4]	; 18360 <ftello64@plt+0x6c90>
   18358:	pop	{r4, r5, r6, lr}
   1835c:	b	15f4c <ftello64@plt+0x487c>
   18360:	andeq	r5, r2, ip, asr #13
   18364:	push	{r4, r5, r6, lr}
   18368:	mov	r4, r0
   1836c:	ldr	r0, [r0, #4]
   18370:	mov	r5, r1
   18374:	mov	r6, r2
   18378:	bl	17d5c <ftello64@plt+0x668c>
   1837c:	cmp	r0, #0
   18380:	beq	1839c <ftello64@plt+0x6ccc>
   18384:	ldr	r3, [r0, #64]	; 0x40
   18388:	mov	r2, r6
   1838c:	mov	r1, r5
   18390:	mov	r0, r4
   18394:	pop	{r4, r5, r6, lr}
   18398:	b	1631c <ftello64@plt+0x4c4c>
   1839c:	mov	r0, r4
   183a0:	ldr	r1, [pc, #4]	; 183ac <ftello64@plt+0x6cdc>
   183a4:	pop	{r4, r5, r6, lr}
   183a8:	b	15f4c <ftello64@plt+0x487c>
   183ac:	andeq	r5, r2, r4, ror #13
   183b0:	push	{r4, r5, r6, lr}
   183b4:	mov	r4, r0
   183b8:	ldr	r0, [r0, #4]
   183bc:	mov	r5, r1
   183c0:	mov	r6, r2
   183c4:	bl	17d5c <ftello64@plt+0x668c>
   183c8:	cmp	r0, #0
   183cc:	beq	183e8 <ftello64@plt+0x6d18>
   183d0:	ldr	r3, [r0, #68]	; 0x44
   183d4:	mov	r2, r6
   183d8:	mov	r1, r5
   183dc:	mov	r0, r4
   183e0:	pop	{r4, r5, r6, lr}
   183e4:	b	1631c <ftello64@plt+0x4c4c>
   183e8:	mov	r0, r4
   183ec:	ldr	r1, [pc, #4]	; 183f8 <ftello64@plt+0x6d28>
   183f0:	pop	{r4, r5, r6, lr}
   183f4:	b	15f4c <ftello64@plt+0x487c>
   183f8:	strdeq	r5, [r2], -ip
   183fc:	push	{r4, r5, r6, lr}
   18400:	mov	r4, r0
   18404:	ldr	r0, [r0, #4]
   18408:	mov	r5, r1
   1840c:	mov	r6, r2
   18410:	bl	17d5c <ftello64@plt+0x668c>
   18414:	cmp	r0, #0
   18418:	beq	18434 <ftello64@plt+0x6d64>
   1841c:	ldr	r3, [r0, #72]	; 0x48
   18420:	mov	r2, r6
   18424:	mov	r1, r5
   18428:	mov	r0, r4
   1842c:	pop	{r4, r5, r6, lr}
   18430:	b	1631c <ftello64@plt+0x4c4c>
   18434:	mov	r0, r4
   18438:	ldr	r1, [pc, #4]	; 18444 <ftello64@plt+0x6d74>
   1843c:	pop	{r4, r5, r6, lr}
   18440:	b	15f4c <ftello64@plt+0x487c>
   18444:	andeq	r5, r2, r4, lsl r7
   18448:	push	{r4, r5, r6, lr}
   1844c:	mov	r4, r0
   18450:	ldr	r0, [r0, #4]
   18454:	mov	r5, r1
   18458:	mov	r6, r2
   1845c:	bl	17d5c <ftello64@plt+0x668c>
   18460:	cmp	r0, #0
   18464:	beq	18480 <ftello64@plt+0x6db0>
   18468:	ldr	r3, [r0, #76]	; 0x4c
   1846c:	mov	r2, r6
   18470:	mov	r1, r5
   18474:	mov	r0, r4
   18478:	pop	{r4, r5, r6, lr}
   1847c:	b	1631c <ftello64@plt+0x4c4c>
   18480:	mov	r0, r4
   18484:	ldr	r1, [pc, #4]	; 18490 <ftello64@plt+0x6dc0>
   18488:	pop	{r4, r5, r6, lr}
   1848c:	b	15f4c <ftello64@plt+0x487c>
   18490:	andeq	r5, r2, r0, lsr r7
   18494:	push	{r4, r5, r6, lr}
   18498:	mov	r4, r0
   1849c:	ldr	r0, [r0, #4]
   184a0:	mov	r5, r1
   184a4:	mov	r6, r2
   184a8:	bl	17d5c <ftello64@plt+0x668c>
   184ac:	cmp	r0, #0
   184b0:	beq	184cc <ftello64@plt+0x6dfc>
   184b4:	ldr	r3, [r0, #80]	; 0x50
   184b8:	mov	r2, r6
   184bc:	mov	r1, r5
   184c0:	mov	r0, r4
   184c4:	pop	{r4, r5, r6, lr}
   184c8:	b	1631c <ftello64@plt+0x4c4c>
   184cc:	mov	r0, r4
   184d0:	ldr	r1, [pc, #4]	; 184dc <ftello64@plt+0x6e0c>
   184d4:	pop	{r4, r5, r6, lr}
   184d8:	b	15f4c <ftello64@plt+0x487c>
   184dc:	andeq	r5, r2, ip, asr #14
   184e0:	push	{r4, r5, r6, lr}
   184e4:	mov	r4, r0
   184e8:	ldr	r0, [r0, #4]
   184ec:	mov	r5, r1
   184f0:	mov	r6, r2
   184f4:	bl	17d5c <ftello64@plt+0x668c>
   184f8:	cmp	r0, #0
   184fc:	beq	18518 <ftello64@plt+0x6e48>
   18500:	ldr	r3, [r0, #84]	; 0x54
   18504:	mov	r2, r6
   18508:	mov	r1, r5
   1850c:	mov	r0, r4
   18510:	pop	{r4, r5, r6, lr}
   18514:	b	1631c <ftello64@plt+0x4c4c>
   18518:	mov	r0, r4
   1851c:	ldr	r1, [pc, #4]	; 18528 <ftello64@plt+0x6e58>
   18520:	pop	{r4, r5, r6, lr}
   18524:	b	15f4c <ftello64@plt+0x487c>
   18528:	andeq	r5, r2, r4, ror #14
   1852c:	push	{r4, r5, r6, lr}
   18530:	mov	r4, r0
   18534:	ldr	r0, [r0, #4]
   18538:	mov	r5, r1
   1853c:	mov	r6, r2
   18540:	bl	17d5c <ftello64@plt+0x668c>
   18544:	cmp	r0, #0
   18548:	beq	18564 <ftello64@plt+0x6e94>
   1854c:	ldr	r3, [r0, #88]	; 0x58
   18550:	mov	r2, r6
   18554:	mov	r1, r5
   18558:	mov	r0, r4
   1855c:	pop	{r4, r5, r6, lr}
   18560:	b	1631c <ftello64@plt+0x4c4c>
   18564:	mov	r0, r4
   18568:	ldr	r1, [pc, #4]	; 18574 <ftello64@plt+0x6ea4>
   1856c:	pop	{r4, r5, r6, lr}
   18570:	b	15f4c <ftello64@plt+0x487c>
   18574:	andeq	r5, r2, r0, lsl #15
   18578:	push	{r4, r5, r6, lr}
   1857c:	mov	r4, r0
   18580:	ldr	r0, [r0, #4]
   18584:	mov	r5, r1
   18588:	mov	r6, r2
   1858c:	bl	17d5c <ftello64@plt+0x668c>
   18590:	cmp	r0, #0
   18594:	beq	185b0 <ftello64@plt+0x6ee0>
   18598:	ldr	r3, [r0, #92]	; 0x5c
   1859c:	mov	r2, r6
   185a0:	mov	r1, r5
   185a4:	mov	r0, r4
   185a8:	pop	{r4, r5, r6, lr}
   185ac:	b	1631c <ftello64@plt+0x4c4c>
   185b0:	mov	r0, r4
   185b4:	ldr	r1, [pc, #4]	; 185c0 <ftello64@plt+0x6ef0>
   185b8:	pop	{r4, r5, r6, lr}
   185bc:	b	15f4c <ftello64@plt+0x487c>
   185c0:	muleq	r2, ip, r7
   185c4:	push	{r4, r5, r6, lr}
   185c8:	mov	r4, r0
   185cc:	ldr	r0, [r0, #4]
   185d0:	mov	r5, r1
   185d4:	mov	r6, r2
   185d8:	bl	17d5c <ftello64@plt+0x668c>
   185dc:	cmp	r0, #0
   185e0:	beq	185fc <ftello64@plt+0x6f2c>
   185e4:	ldr	r3, [r0, #96]	; 0x60
   185e8:	mov	r2, r6
   185ec:	mov	r1, r5
   185f0:	mov	r0, r4
   185f4:	pop	{r4, r5, r6, lr}
   185f8:	b	1631c <ftello64@plt+0x4c4c>
   185fc:	mov	r0, r4
   18600:	ldr	r1, [pc, #4]	; 1860c <ftello64@plt+0x6f3c>
   18604:	pop	{r4, r5, r6, lr}
   18608:	b	15f4c <ftello64@plt+0x487c>
   1860c:			; <UNDEFINED> instruction: 0x000257b8
   18610:	push	{r4, r5, r6, lr}
   18614:	mov	r4, r0
   18618:	ldr	r0, [r0, #4]
   1861c:	mov	r5, r1
   18620:	mov	r6, r2
   18624:	bl	17d5c <ftello64@plt+0x668c>
   18628:	cmp	r0, #0
   1862c:	beq	18648 <ftello64@plt+0x6f78>
   18630:	ldr	r3, [r0, #100]	; 0x64
   18634:	mov	r2, r6
   18638:	mov	r1, r5
   1863c:	mov	r0, r4
   18640:	pop	{r4, r5, r6, lr}
   18644:	b	1631c <ftello64@plt+0x4c4c>
   18648:	mov	r0, r4
   1864c:	ldr	r1, [pc, #4]	; 18658 <ftello64@plt+0x6f88>
   18650:	pop	{r4, r5, r6, lr}
   18654:	b	15f4c <ftello64@plt+0x487c>
   18658:	ldrdeq	r5, [r2], -r4
   1865c:	push	{r4, r5, r6, lr}
   18660:	mov	r4, r0
   18664:	ldr	r0, [r0, #4]
   18668:	mov	r5, r1
   1866c:	mov	r6, r2
   18670:	bl	17d5c <ftello64@plt+0x668c>
   18674:	cmp	r0, #0
   18678:	beq	18694 <ftello64@plt+0x6fc4>
   1867c:	ldr	r3, [r0, #104]	; 0x68
   18680:	mov	r2, r6
   18684:	mov	r1, r5
   18688:	mov	r0, r4
   1868c:	pop	{r4, r5, r6, lr}
   18690:	b	1631c <ftello64@plt+0x4c4c>
   18694:	mov	r0, r4
   18698:	ldr	r1, [pc, #4]	; 186a4 <ftello64@plt+0x6fd4>
   1869c:	pop	{r4, r5, r6, lr}
   186a0:	b	15f4c <ftello64@plt+0x487c>
   186a4:	strdeq	r5, [r2], -r0
   186a8:	push	{r4, r5, r6, lr}
   186ac:	mov	r4, r0
   186b0:	ldr	r0, [r0, #4]
   186b4:	mov	r5, r1
   186b8:	mov	r6, r2
   186bc:	bl	17d5c <ftello64@plt+0x668c>
   186c0:	cmp	r0, #0
   186c4:	beq	186e0 <ftello64@plt+0x7010>
   186c8:	ldr	r3, [r0, #108]	; 0x6c
   186cc:	mov	r2, r6
   186d0:	mov	r1, r5
   186d4:	mov	r0, r4
   186d8:	pop	{r4, r5, r6, lr}
   186dc:	b	1631c <ftello64@plt+0x4c4c>
   186e0:	mov	r0, r4
   186e4:	ldr	r1, [pc, #4]	; 186f0 <ftello64@plt+0x7020>
   186e8:	pop	{r4, r5, r6, lr}
   186ec:	b	15f4c <ftello64@plt+0x487c>
   186f0:	andeq	r5, r2, ip, lsl #16
   186f4:	push	{r4, r5, r6, lr}
   186f8:	mov	r4, r0
   186fc:	ldr	r0, [r0, #4]
   18700:	mov	r5, r1
   18704:	mov	r6, r2
   18708:	bl	17d5c <ftello64@plt+0x668c>
   1870c:	cmp	r0, #0
   18710:	beq	1872c <ftello64@plt+0x705c>
   18714:	ldr	r3, [r0, #112]	; 0x70
   18718:	mov	r2, r6
   1871c:	mov	r1, r5
   18720:	mov	r0, r4
   18724:	pop	{r4, r5, r6, lr}
   18728:	b	1631c <ftello64@plt+0x4c4c>
   1872c:	mov	r0, r4
   18730:	ldr	r1, [pc, #4]	; 1873c <ftello64@plt+0x706c>
   18734:	pop	{r4, r5, r6, lr}
   18738:	b	15f4c <ftello64@plt+0x487c>
   1873c:	andeq	r5, r2, ip, lsr #16
   18740:	push	{r4, r5, r6, lr}
   18744:	mov	r4, r0
   18748:	mov	r5, r1
   1874c:	mov	r6, r2
   18750:	ldr	r0, [r0, #8]
   18754:	ldr	r2, [r4, #4]
   18758:	ldr	r1, [pc, #124]	; 187dc <ftello64@plt+0x710c>
   1875c:	bl	1ade4 <argp_parse@@Base+0x1084>
   18760:	cmp	r0, #0
   18764:	blt	187c4 <ftello64@plt+0x70f4>
   18768:	ldr	r3, [pc, #112]	; 187e0 <ftello64@plt+0x7110>
   1876c:	ldr	r1, [r4, #4]
   18770:	ldr	r2, [r3]
   18774:	ldrh	r1, [r1, #16]
   18778:	cmp	r2, #0
   1877c:	bne	18790 <ftello64@plt+0x70c0>
   18780:	b	187bc <ftello64@plt+0x70ec>
   18784:	ldr	r2, [r3, #16]!
   18788:	cmp	r2, #0
   1878c:	beq	187bc <ftello64@plt+0x70ec>
   18790:	ldr	r2, [r3, #8]
   18794:	cmp	r1, r2
   18798:	bne	18784 <ftello64@plt+0x70b4>
   1879c:	ldr	r3, [r3, #12]
   187a0:	clz	r3, r3
   187a4:	lsr	r3, r3, #5
   187a8:	mov	r2, r6
   187ac:	mov	r1, r5
   187b0:	mov	r0, r4
   187b4:	pop	{r4, r5, r6, lr}
   187b8:	b	1663c <ftello64@plt+0x4f6c>
   187bc:	mov	r3, #1
   187c0:	b	187a8 <ftello64@plt+0x70d8>
   187c4:	mov	r3, #1
   187c8:	mov	r2, r6
   187cc:	mov	r1, r5
   187d0:	mov	r0, r4
   187d4:	bl	1663c <ftello64@plt+0x4f6c>
   187d8:	b	18768 <ftello64@plt+0x7098>
   187dc:	andeq	r8, r0, r7, lsr #18
   187e0:	andeq	r7, r3, r4, asr #15
   187e4:	push	{r4, lr}
   187e8:	mov	r4, r0
   187ec:	ldr	r2, [r0, #4]
   187f0:	ldr	r1, [pc, #136]	; 18880 <ftello64@plt+0x71b0>
   187f4:	ldr	r0, [r0, #8]
   187f8:	bl	1ade4 <argp_parse@@Base+0x1084>
   187fc:	cmp	r0, #0
   18800:	blt	18864 <ftello64@plt+0x7194>
   18804:	ldr	r3, [pc, #120]	; 18884 <ftello64@plt+0x71b4>
   18808:	ldr	r1, [r4, #4]
   1880c:	ldr	r2, [r3]
   18810:	ldrh	r0, [r1, #16]
   18814:	cmp	r2, #0
   18818:	bne	1882c <ftello64@plt+0x715c>
   1881c:	b	18854 <ftello64@plt+0x7184>
   18820:	ldr	r2, [r3, #16]!
   18824:	cmp	r2, #0
   18828:	beq	18854 <ftello64@plt+0x7184>
   1882c:	ldr	r2, [r3, #8]
   18830:	cmp	r0, r2
   18834:	bne	18820 <ftello64@plt+0x7150>
   18838:	ldr	r3, [r3, #12]
   1883c:	cmp	r3, #0
   18840:	beq	18854 <ftello64@plt+0x7184>
   18844:	mov	r0, r4
   18848:	add	r1, r1, #18
   1884c:	pop	{r4, lr}
   18850:	bx	r3
   18854:	mov	r0, r4
   18858:	ldr	r1, [pc, #40]	; 18888 <ftello64@plt+0x71b8>
   1885c:	pop	{r4, lr}
   18860:	b	15f4c <ftello64@plt+0x487c>
   18864:	bl	11568 <__errno_location@plt>
   18868:	ldr	r3, [r4, #4]
   1886c:	ldr	r2, [pc, #24]	; 1888c <ftello64@plt+0x71bc>
   18870:	pop	{r4, lr}
   18874:	ldr	r1, [r0]
   18878:	mov	r0, #1
   1887c:	b	114a8 <error@plt>
   18880:	andeq	r8, r0, r7, lsr #18
   18884:	andeq	r7, r3, r4, asr #15
   18888:	andeq	r5, r2, r0, ror r8
   1888c:	andeq	r5, r2, r8, asr #16
   18890:	push	{r4, r5, r6, lr}
   18894:	mov	r4, r0
   18898:	mov	r5, r1
   1889c:	mov	r6, r2
   188a0:	ldr	r1, [pc, #52]	; 188dc <ftello64@plt+0x720c>
   188a4:	ldr	r2, [r4, #4]
   188a8:	ldr	r0, [r0, #8]
   188ac:	bl	1ade4 <argp_parse@@Base+0x1084>
   188b0:	mov	r2, r6
   188b4:	mov	r1, r5
   188b8:	cmp	r0, #0
   188bc:	mov	r0, r4
   188c0:	blt	188d0 <ftello64@plt+0x7200>
   188c4:	mov	r3, #0
   188c8:	pop	{r4, r5, r6, lr}
   188cc:	b	1663c <ftello64@plt+0x4f6c>
   188d0:	mov	r3, #1
   188d4:	pop	{r4, r5, r6, lr}
   188d8:	b	1663c <ftello64@plt+0x4f6c>
   188dc:	andeq	r8, r0, r7, lsr #18
   188e0:	push	{r4, lr}
   188e4:	mov	r4, r0
   188e8:	ldr	r2, [r0, #4]
   188ec:	ldr	r1, [pc, #124]	; 18970 <ftello64@plt+0x72a0>
   188f0:	ldr	r0, [r0, #8]
   188f4:	bl	1ade4 <argp_parse@@Base+0x1084>
   188f8:	cmp	r0, #0
   188fc:	blt	18954 <ftello64@plt+0x7284>
   18900:	ldr	r3, [pc, #108]	; 18974 <ftello64@plt+0x72a4>
   18904:	ldr	r1, [r4, #4]
   18908:	ldr	r2, [r3]
   1890c:	ldrh	r1, [r1, #16]
   18910:	cmp	r2, #0
   18914:	bne	18928 <ftello64@plt+0x7258>
   18918:	b	18944 <ftello64@plt+0x7274>
   1891c:	ldr	r2, [r3, #16]!
   18920:	cmp	r2, #0
   18924:	beq	18944 <ftello64@plt+0x7274>
   18928:	ldr	r2, [r3, #8]
   1892c:	cmp	r1, r2
   18930:	bne	1891c <ftello64@plt+0x724c>
   18934:	mov	r0, r4
   18938:	ldr	r1, [r3, #4]
   1893c:	pop	{r4, lr}
   18940:	b	15f4c <ftello64@plt+0x487c>
   18944:	mov	r0, r4
   18948:	ldr	r1, [pc, #40]	; 18978 <ftello64@plt+0x72a8>
   1894c:	pop	{r4, lr}
   18950:	b	15f4c <ftello64@plt+0x487c>
   18954:	bl	11568 <__errno_location@plt>
   18958:	ldr	r3, [r4, #4]
   1895c:	ldr	r2, [pc, #24]	; 1897c <ftello64@plt+0x72ac>
   18960:	pop	{r4, lr}
   18964:	ldr	r1, [r0]
   18968:	mov	r0, #1
   1896c:	b	114a8 <error@plt>
   18970:	andeq	r8, r0, r7, lsr #18
   18974:	andeq	r7, r3, r4, asr #15
   18978:	andeq	r5, r2, r4, lsl #17
   1897c:	andeq	r5, r2, r8, asr #16
   18980:	push	{r4, r5, r6, lr}
   18984:	mov	r4, r0
   18988:	mov	r5, r1
   1898c:	mov	r6, r2
   18990:	ldr	r1, [pc, #52]	; 189cc <ftello64@plt+0x72fc>
   18994:	ldr	r2, [r4, #4]
   18998:	ldr	r0, [r0, #8]
   1899c:	bl	1ade4 <argp_parse@@Base+0x1084>
   189a0:	mov	r2, r6
   189a4:	mov	r1, r5
   189a8:	cmp	r0, #0
   189ac:	mov	r0, r4
   189b0:	blt	189c0 <ftello64@plt+0x72f0>
   189b4:	mov	r3, #0
   189b8:	pop	{r4, r5, r6, lr}
   189bc:	b	1663c <ftello64@plt+0x4f6c>
   189c0:	mov	r3, #1
   189c4:	pop	{r4, r5, r6, lr}
   189c8:	b	1663c <ftello64@plt+0x4f6c>
   189cc:	andeq	r8, r0, sp, lsl r9
   189d0:	push	{r4, r5, r6, lr}
   189d4:	mov	r4, r0
   189d8:	mov	r5, r1
   189dc:	mov	r6, r2
   189e0:	ldr	r0, [r0, #8]
   189e4:	ldr	r2, [r4, #4]
   189e8:	ldr	r1, [pc, #72]	; 18a38 <ftello64@plt+0x7368>
   189ec:	bl	1ade4 <argp_parse@@Base+0x1084>
   189f0:	cmp	r0, #0
   189f4:	blt	18a1c <ftello64@plt+0x734c>
   189f8:	ldr	r3, [r4, #4]
   189fc:	mov	r2, r6
   18a00:	mov	r1, r5
   18a04:	ldr	r3, [r3, #16]
   18a08:	mov	r0, r4
   18a0c:	cmp	r3, #0
   18a10:	moveq	r3, #1
   18a14:	pop	{r4, r5, r6, lr}
   18a18:	b	15ff0 <ftello64@plt+0x4920>
   18a1c:	bl	11568 <__errno_location@plt>
   18a20:	ldr	r3, [r4, #4]
   18a24:	ldr	r2, [pc, #16]	; 18a3c <ftello64@plt+0x736c>
   18a28:	pop	{r4, r5, r6, lr}
   18a2c:	ldr	r1, [r0]
   18a30:	mov	r0, #1
   18a34:	b	114a8 <error@plt>
   18a38:	andeq	r8, r0, sp, lsl r9
   18a3c:	andeq	r5, r2, r4, lsr r0
   18a40:	push	{r4, r5, r6, lr}
   18a44:	mov	r4, r0
   18a48:	mov	r5, r1
   18a4c:	mov	r6, r2
   18a50:	ldr	r0, [r0, #8]
   18a54:	ldr	r2, [r4, #4]
   18a58:	ldr	r1, [pc, #64]	; 18aa0 <ftello64@plt+0x73d0>
   18a5c:	bl	1ade4 <argp_parse@@Base+0x1084>
   18a60:	cmp	r0, #0
   18a64:	blt	18a88 <ftello64@plt+0x73b8>
   18a68:	ldr	r3, [r4, #4]
   18a6c:	mov	r2, r6
   18a70:	mov	r1, r5
   18a74:	ldr	r3, [r3, #16]
   18a78:	mov	r0, r4
   18a7c:	pop	{r4, r5, r6, lr}
   18a80:	lsr	r3, r3, #31
   18a84:	b	1663c <ftello64@plt+0x4f6c>
   18a88:	mov	r2, r6
   18a8c:	mov	r1, r5
   18a90:	mov	r0, r4
   18a94:	mov	r3, #1
   18a98:	pop	{r4, r5, r6, lr}
   18a9c:	b	1663c <ftello64@plt+0x4f6c>
   18aa0:	andeq	r8, r0, r2, asr #18
   18aa4:	push	{r4, r5, r6, lr}
   18aa8:	mov	r4, r0
   18aac:	mov	r5, r1
   18ab0:	mov	r6, r2
   18ab4:	ldr	r0, [r0, #8]
   18ab8:	ldr	r2, [r4, #4]
   18abc:	ldr	r1, [pc, #64]	; 18b04 <ftello64@plt+0x7434>
   18ac0:	bl	1ade4 <argp_parse@@Base+0x1084>
   18ac4:	cmp	r0, #0
   18ac8:	blt	18ae8 <ftello64@plt+0x7418>
   18acc:	ldr	r3, [r4, #4]
   18ad0:	mov	r2, r6
   18ad4:	mov	r1, r5
   18ad8:	mov	r0, r4
   18adc:	ldr	r3, [r3, #16]
   18ae0:	pop	{r4, r5, r6, lr}
   18ae4:	b	15ff0 <ftello64@plt+0x4920>
   18ae8:	bl	11568 <__errno_location@plt>
   18aec:	ldr	r3, [r4, #4]
   18af0:	ldr	r2, [pc, #16]	; 18b08 <ftello64@plt+0x7438>
   18af4:	pop	{r4, r5, r6, lr}
   18af8:	ldr	r1, [r0]
   18afc:	mov	r0, #1
   18b00:	b	114a8 <error@plt>
   18b04:	andeq	r8, r0, r2, asr #18
   18b08:	muleq	r2, r8, r8
   18b0c:	push	{r4, r5, r6, lr}
   18b10:	subs	r4, r0, #0
   18b14:	sub	sp, sp, #16
   18b18:	mov	r6, r1
   18b1c:	beq	18bec <ftello64@plt+0x751c>
   18b20:	ldr	r3, [r4, #4]
   18b24:	tst	r3, #1
   18b28:	beq	18bbc <ftello64@plt+0x74ec>
   18b2c:	ldr	r5, [r4, #8]
   18b30:	ldr	r3, [r5]
   18b34:	tst	r3, #1
   18b38:	bne	18ba0 <ftello64@plt+0x74d0>
   18b3c:	mov	r2, #0
   18b40:	add	r1, sp, #12
   18b44:	mov	r0, r6
   18b48:	bl	113ac <strtol@plt>
   18b4c:	str	r0, [r5, #4]
   18b50:	ldrb	r3, [r6]
   18b54:	cmp	r3, #0
   18b58:	beq	18b6c <ftello64@plt+0x749c>
   18b5c:	ldr	r3, [sp, #12]
   18b60:	ldrb	r3, [r3]
   18b64:	cmp	r3, #0
   18b68:	beq	18b88 <ftello64@plt+0x74b8>
   18b6c:	ldr	r2, [r4]
   18b70:	mov	r3, r6
   18b74:	str	r2, [sp]
   18b78:	mov	r1, #0
   18b7c:	ldr	r2, [pc, #156]	; 18c20 <ftello64@plt+0x7550>
   18b80:	mov	r0, #1
   18b84:	bl	114a8 <error@plt>
   18b88:	ldr	r2, [r4, #8]
   18b8c:	ldr	r3, [r2]
   18b90:	orr	r3, r3, #1
   18b94:	str	r3, [r2]
   18b98:	add	sp, sp, #16
   18b9c:	pop	{r4, r5, r6, pc}
   18ba0:	ldr	r3, [r4]
   18ba4:	ldr	r2, [pc, #120]	; 18c24 <ftello64@plt+0x7554>
   18ba8:	mov	r1, #0
   18bac:	mov	r0, #1
   18bb0:	bl	114a8 <error@plt>
   18bb4:	ldr	r5, [r4, #8]
   18bb8:	b	18b3c <ftello64@plt+0x746c>
   18bbc:	mov	r0, #8
   18bc0:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   18bc4:	cmp	r0, #0
   18bc8:	str	r0, [r4, #8]
   18bcc:	movne	r5, r0
   18bd0:	beq	18c04 <ftello64@plt+0x7534>
   18bd4:	ldr	r3, [r4, #4]
   18bd8:	mov	r2, #0
   18bdc:	orr	r3, r3, #1
   18be0:	str	r2, [r5]
   18be4:	str	r3, [r4, #4]
   18be8:	b	18b3c <ftello64@plt+0x746c>
   18bec:	mov	r3, r1
   18bf0:	ldr	r2, [pc, #48]	; 18c28 <ftello64@plt+0x7558>
   18bf4:	mov	r1, r4
   18bf8:	mov	r0, #1
   18bfc:	bl	114a8 <error@plt>
   18c00:	b	18b20 <ftello64@plt+0x7450>
   18c04:	bl	11568 <__errno_location@plt>
   18c08:	ldr	r2, [pc, #28]	; 18c2c <ftello64@plt+0x755c>
   18c0c:	ldr	r1, [r0]
   18c10:	mov	r0, #1
   18c14:	bl	114a8 <error@plt>
   18c18:	ldr	r5, [r4, #8]
   18c1c:	b	18bd4 <ftello64@plt+0x7504>
   18c20:	muleq	r2, r8, r5
   18c24:	andeq	r5, r2, ip, ror #10
   18c28:	andeq	r5, r2, r0, lsl r5
   18c2c:	andeq	r5, r2, r8, lsr r5
   18c30:	cmp	r1, #84	; 0x54
   18c34:	beq	18c40 <ftello64@plt+0x7570>
   18c38:	mov	r0, #0
   18c3c:	bx	lr
   18c40:	push	{r4, r5, r6, lr}
   18c44:	mov	r4, r2
   18c48:	ldr	r5, [r0]
   18c4c:	sub	sp, sp, #16
   18c50:	cmp	r5, #0
   18c54:	beq	18d28 <ftello64@plt+0x7658>
   18c58:	ldr	r3, [r5, #4]
   18c5c:	tst	r3, #1
   18c60:	beq	18cf8 <ftello64@plt+0x7628>
   18c64:	ldr	r6, [r5, #8]
   18c68:	ldr	r3, [r6]
   18c6c:	tst	r3, #1
   18c70:	bne	18cdc <ftello64@plt+0x760c>
   18c74:	mov	r2, #0
   18c78:	add	r1, sp, #12
   18c7c:	mov	r0, r4
   18c80:	bl	113ac <strtol@plt>
   18c84:	str	r0, [r6, #4]
   18c88:	ldrb	r3, [r4]
   18c8c:	cmp	r3, #0
   18c90:	beq	18ca4 <ftello64@plt+0x75d4>
   18c94:	ldr	r3, [sp, #12]
   18c98:	ldrb	r3, [r3]
   18c9c:	cmp	r3, #0
   18ca0:	beq	18cc0 <ftello64@plt+0x75f0>
   18ca4:	ldr	r2, [r5]
   18ca8:	mov	r3, r4
   18cac:	str	r2, [sp]
   18cb0:	mov	r1, #0
   18cb4:	ldr	r2, [pc, #160]	; 18d5c <ftello64@plt+0x768c>
   18cb8:	mov	r0, #1
   18cbc:	bl	114a8 <error@plt>
   18cc0:	ldr	r2, [r5, #8]
   18cc4:	mov	r0, #1
   18cc8:	ldr	r3, [r2]
   18ccc:	orr	r3, r3, r0
   18cd0:	str	r3, [r2]
   18cd4:	add	sp, sp, #16
   18cd8:	pop	{r4, r5, r6, pc}
   18cdc:	ldr	r3, [r5]
   18ce0:	ldr	r2, [pc, #120]	; 18d60 <ftello64@plt+0x7690>
   18ce4:	mov	r1, #0
   18ce8:	mov	r0, #1
   18cec:	bl	114a8 <error@plt>
   18cf0:	ldr	r6, [r5, #8]
   18cf4:	b	18c74 <ftello64@plt+0x75a4>
   18cf8:	mov	r0, #8
   18cfc:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   18d00:	cmp	r0, #0
   18d04:	str	r0, [r5, #8]
   18d08:	movne	r6, r0
   18d0c:	beq	18d40 <ftello64@plt+0x7670>
   18d10:	ldr	r3, [r5, #4]
   18d14:	mov	r2, #0
   18d18:	orr	r3, r3, #1
   18d1c:	str	r2, [r6]
   18d20:	str	r3, [r5, #4]
   18d24:	b	18c74 <ftello64@plt+0x75a4>
   18d28:	mov	r3, r2
   18d2c:	mov	r1, r5
   18d30:	ldr	r2, [pc, #44]	; 18d64 <ftello64@plt+0x7694>
   18d34:	mov	r0, #1
   18d38:	bl	114a8 <error@plt>
   18d3c:	b	18c58 <ftello64@plt+0x7588>
   18d40:	bl	11568 <__errno_location@plt>
   18d44:	ldr	r2, [pc, #28]	; 18d68 <ftello64@plt+0x7698>
   18d48:	ldr	r1, [r0]
   18d4c:	mov	r0, #1
   18d50:	bl	114a8 <error@plt>
   18d54:	ldr	r6, [r5, #8]
   18d58:	b	18d10 <ftello64@plt+0x7640>
   18d5c:	muleq	r2, r8, r5
   18d60:	andeq	r5, r2, ip, ror #10
   18d64:	andeq	r5, r2, r0, lsl r5
   18d68:	andeq	r5, r2, r8, lsr r5
   18d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d70:	mov	r7, r0
   18d74:	sub	sp, sp, #12
   18d78:	ldr	r0, [r2]
   18d7c:	mov	r5, r1
   18d80:	mov	r6, r2
   18d84:	bl	12cb4 <ftello64@plt+0x15e4>
   18d88:	cmp	r5, #1
   18d8c:	str	r0, [r7]
   18d90:	ble	18e6c <ftello64@plt+0x779c>
   18d94:	ldr	r4, [r6, #4]
   18d98:	ldr	r1, [pc, #888]	; 19118 <ftello64@plt+0x7a48>
   18d9c:	mov	r0, r4
   18da0:	bl	113a0 <strcmp@plt>
   18da4:	cmp	r0, #0
   18da8:	beq	18e98 <ftello64@plt+0x77c8>
   18dac:	mov	r0, r4
   18db0:	ldr	r1, [pc, #868]	; 1911c <ftello64@plt+0x7a4c>
   18db4:	bl	113a0 <strcmp@plt>
   18db8:	subs	r8, r0, #0
   18dbc:	movne	r4, #1
   18dc0:	bne	18dec <ftello64@plt+0x771c>
   18dc4:	b	18fa0 <ftello64@plt+0x78d0>
   18dc8:	add	r4, r4, #1
   18dcc:	cmp	r5, r4
   18dd0:	ble	18f30 <ftello64@plt+0x7860>
   18dd4:	ldr	r1, [r9, #4]
   18dd8:	ldr	r0, [r7]
   18ddc:	bl	12eec <ftello64@plt+0x181c>
   18de0:	add	r4, r4, #1
   18de4:	cmp	r5, r4
   18de8:	ble	18e6c <ftello64@plt+0x779c>
   18dec:	ldr	sl, [r6, r4, lsl #2]
   18df0:	ldr	r1, [pc, #808]	; 19120 <ftello64@plt+0x7a50>
   18df4:	mov	r0, sl
   18df8:	bl	113a0 <strcmp@plt>
   18dfc:	lsl	fp, r4, #2
   18e00:	add	r9, r6, fp
   18e04:	subs	r8, r0, #0
   18e08:	beq	18dc8 <ftello64@plt+0x76f8>
   18e0c:	ldr	r1, [pc, #784]	; 19124 <ftello64@plt+0x7a54>
   18e10:	mov	r0, sl
   18e14:	bl	113a0 <strcmp@plt>
   18e18:	cmp	r0, #0
   18e1c:	beq	18e7c <ftello64@plt+0x77ac>
   18e20:	ldr	r1, [pc, #768]	; 19128 <ftello64@plt+0x7a58>
   18e24:	mov	r0, sl
   18e28:	bl	113a0 <strcmp@plt>
   18e2c:	cmp	r0, #0
   18e30:	beq	18e7c <ftello64@plt+0x77ac>
   18e34:	ldr	r1, [pc, #752]	; 1912c <ftello64@plt+0x7a5c>
   18e38:	mov	r0, sl
   18e3c:	bl	113a0 <strcmp@plt>
   18e40:	subs	r8, r0, #0
   18e44:	bne	18ea8 <ftello64@plt+0x77d8>
   18e48:	add	r4, r4, #1
   18e4c:	cmp	r5, r4
   18e50:	ble	18f48 <ftello64@plt+0x7878>
   18e54:	ldr	r1, [r9, #4]
   18e58:	ldr	r0, [r7]
   18e5c:	add	r4, r4, #1
   18e60:	bl	12df4 <ftello64@plt+0x1724>
   18e64:	cmp	r5, r4
   18e68:	bgt	18dec <ftello64@plt+0x771c>
   18e6c:	mov	r8, #1
   18e70:	mov	r0, r8
   18e74:	add	sp, sp, #12
   18e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e7c:	add	r4, r4, #1
   18e80:	cmp	r5, r4
   18e84:	ble	18f80 <ftello64@plt+0x78b0>
   18e88:	ldr	r1, [r6, r4, lsl #2]
   18e8c:	ldr	r0, [r7]
   18e90:	bl	13358 <ftello64@plt+0x1c88>
   18e94:	b	18de0 <ftello64@plt+0x7710>
   18e98:	cmp	r5, #2
   18e9c:	beq	18e6c <ftello64@plt+0x779c>
   18ea0:	mov	r4, #2
   18ea4:	b	18dec <ftello64@plt+0x771c>
   18ea8:	ldr	r1, [pc, #640]	; 19130 <ftello64@plt+0x7a60>
   18eac:	mov	r0, sl
   18eb0:	bl	113a0 <strcmp@plt>
   18eb4:	cmp	r0, #0
   18eb8:	bne	18ed8 <ftello64@plt+0x7808>
   18ebc:	add	r4, r4, #1
   18ec0:	cmp	r5, r4
   18ec4:	ble	18f60 <ftello64@plt+0x7890>
   18ec8:	ldr	r1, [r6, r4, lsl #2]
   18ecc:	ldr	r0, [r7]
   18ed0:	bl	12f68 <ftello64@plt+0x1898>
   18ed4:	b	18de0 <ftello64@plt+0x7710>
   18ed8:	ldr	r1, [pc, #596]	; 19134 <ftello64@plt+0x7a64>
   18edc:	mov	r0, sl
   18ee0:	bl	113a0 <strcmp@plt>
   18ee4:	cmp	r0, #0
   18ee8:	beq	18ebc <ftello64@plt+0x77ec>
   18eec:	ldr	r1, [pc, #580]	; 19138 <ftello64@plt+0x7a68>
   18ef0:	mov	r0, sl
   18ef4:	bl	113a0 <strcmp@plt>
   18ef8:	cmp	r0, #0
   18efc:	beq	18ebc <ftello64@plt+0x77ec>
   18f00:	ldr	r1, [pc, #564]	; 1913c <ftello64@plt+0x7a6c>
   18f04:	mov	r0, sl
   18f08:	bl	113a0 <strcmp@plt>
   18f0c:	subs	r8, r0, #0
   18f10:	bne	18fcc <ftello64@plt+0x78fc>
   18f14:	add	r4, r4, #1
   18f18:	cmp	r5, r4
   18f1c:	ble	18fb4 <ftello64@plt+0x78e4>
   18f20:	ldr	r1, [r9, #4]
   18f24:	ldr	r0, [r7]
   18f28:	bl	130b0 <ftello64@plt+0x19e0>
   18f2c:	b	18de0 <ftello64@plt+0x7710>
   18f30:	ldr	r2, [pc, #520]	; 19140 <ftello64@plt+0x7a70>
   18f34:	mov	r1, r8
   18f38:	bl	114a8 <error@plt>
   18f3c:	mov	r0, r8
   18f40:	add	sp, sp, #12
   18f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f48:	ldr	r2, [pc, #500]	; 19144 <ftello64@plt+0x7a74>
   18f4c:	mov	r1, r8
   18f50:	bl	114a8 <error@plt>
   18f54:	mov	r0, r8
   18f58:	add	sp, sp, #12
   18f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f60:	mov	r1, #0
   18f64:	mov	r0, r1
   18f68:	ldr	r2, [pc, #472]	; 19148 <ftello64@plt+0x7a78>
   18f6c:	bl	114a8 <error@plt>
   18f70:	mov	r8, #0
   18f74:	mov	r0, r8
   18f78:	add	sp, sp, #12
   18f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f80:	mov	r1, #0
   18f84:	mov	r0, r1
   18f88:	ldr	r2, [pc, #444]	; 1914c <ftello64@plt+0x7a7c>
   18f8c:	bl	114a8 <error@plt>
   18f90:	mov	r8, #0
   18f94:	mov	r0, r8
   18f98:	add	sp, sp, #12
   18f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fa0:	mov	r3, r4
   18fa4:	ldr	r2, [pc, #420]	; 19150 <ftello64@plt+0x7a80>
   18fa8:	mov	r1, r8
   18fac:	bl	114a8 <error@plt>
   18fb0:	b	18e70 <ftello64@plt+0x77a0>
   18fb4:	ldr	r2, [pc, #408]	; 19154 <ftello64@plt+0x7a84>
   18fb8:	mov	r1, r8
   18fbc:	bl	114a8 <error@plt>
   18fc0:	mov	r0, r8
   18fc4:	add	sp, sp, #12
   18fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fcc:	ldr	r1, [pc, #388]	; 19158 <ftello64@plt+0x7a88>
   18fd0:	mov	r0, sl
   18fd4:	bl	113a0 <strcmp@plt>
   18fd8:	subs	r8, r0, #0
   18fdc:	beq	1902c <ftello64@plt+0x795c>
   18fe0:	ldr	r1, [pc, #372]	; 1915c <ftello64@plt+0x7a8c>
   18fe4:	mov	r0, sl
   18fe8:	bl	113a0 <strcmp@plt>
   18fec:	subs	r8, r0, #0
   18ff0:	bne	19064 <ftello64@plt+0x7994>
   18ff4:	add	r4, r4, #1
   18ff8:	cmp	r5, r4
   18ffc:	ble	19010 <ftello64@plt+0x7940>
   19000:	ldr	r1, [r9, #4]
   19004:	ldr	r0, [r7]
   19008:	bl	18b0c <ftello64@plt+0x743c>
   1900c:	b	18de0 <ftello64@plt+0x7710>
   19010:	mov	r1, #0
   19014:	mov	r0, r1
   19018:	ldr	r2, [pc, #320]	; 19160 <ftello64@plt+0x7a90>
   1901c:	bl	114a8 <error@plt>
   19020:	mov	r0, r8
   19024:	add	sp, sp, #12
   19028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1902c:	add	r4, r4, #1
   19030:	cmp	r5, r4
   19034:	ble	19048 <ftello64@plt+0x7978>
   19038:	ldr	r1, [r9, #4]
   1903c:	ldr	r0, [r7]
   19040:	bl	12fe4 <ftello64@plt+0x1914>
   19044:	b	18de0 <ftello64@plt+0x7710>
   19048:	mov	r1, #0
   1904c:	mov	r0, r1
   19050:	ldr	r2, [pc, #268]	; 19164 <ftello64@plt+0x7a94>
   19054:	bl	114a8 <error@plt>
   19058:	mov	r0, r8
   1905c:	add	sp, sp, #12
   19060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19064:	ldr	r1, [pc, #252]	; 19168 <ftello64@plt+0x7a98>
   19068:	mov	r0, sl
   1906c:	bl	113a0 <strcmp@plt>
   19070:	subs	r2, r0, #0
   19074:	beq	190ac <ftello64@plt+0x79dc>
   19078:	ldr	r1, [pc, #236]	; 1916c <ftello64@plt+0x7a9c>
   1907c:	mov	r0, sl
   19080:	bl	113a0 <strcmp@plt>
   19084:	cmp	r0, #0
   19088:	bne	190c8 <ftello64@plt+0x79f8>
   1908c:	mov	r2, #1
   19090:	add	r4, r4, r2
   19094:	mov	r1, r2
   19098:	ldr	r0, [r7]
   1909c:	bl	13200 <ftello64@plt+0x1b30>
   190a0:	cmp	r5, r4
   190a4:	bgt	18dec <ftello64@plt+0x771c>
   190a8:	b	18e6c <ftello64@plt+0x779c>
   190ac:	add	r4, r4, #1
   190b0:	mov	r1, #65	; 0x41
   190b4:	ldr	r0, [r7]
   190b8:	bl	13200 <ftello64@plt+0x1b30>
   190bc:	cmp	r5, r4
   190c0:	bgt	18dec <ftello64@plt+0x771c>
   190c4:	b	18e6c <ftello64@plt+0x779c>
   190c8:	add	r1, sp, #4
   190cc:	mov	r0, sl
   190d0:	bl	11d30 <ftello64@plt+0x660>
   190d4:	bics	r3, r0, #72	; 0x48
   190d8:	mov	r1, r0
   190dc:	beq	190fc <ftello64@plt+0x7a2c>
   190e0:	add	r4, r4, #1
   190e4:	ldr	r2, [sp, #4]
   190e8:	ldr	r0, [r7]
   190ec:	bl	13200 <ftello64@plt+0x1b30>
   190f0:	cmp	r5, r4
   190f4:	bgt	18dec <ftello64@plt+0x771c>
   190f8:	b	18e6c <ftello64@plt+0x779c>
   190fc:	ldr	r1, [r6, fp]
   19100:	add	r4, r4, #1
   19104:	ldr	r0, [r7]
   19108:	bl	12d78 <ftello64@plt+0x16a8>
   1910c:	cmp	r5, r4
   19110:	bgt	18dec <ftello64@plt+0x771c>
   19114:	b	18e6c <ftello64@plt+0x779c>
   19118:	andeq	r3, r2, r4, asr #21
   1911c:	andeq	r5, r2, r0, asr #17
   19120:	andeq	r3, r2, r8, lsl sp
   19124:	ldrdeq	r3, [r2], -ip
   19128:	strdeq	r5, [r2], -r0
   1912c:	andeq	r3, r2, r8, ror #19
   19130:	strdeq	r5, [r2], -ip
   19134:	andeq	r5, r2, r0, ror #2
   19138:	andeq	r5, r2, r4, lsl #18
   1913c:	andeq	r3, r2, r4, asr #26
   19140:	andeq	r5, r2, r8, lsl r9
   19144:	andeq	r5, r2, r8, ror r9
   19148:	andeq	r5, r2, r0, lsr #19
   1914c:	andeq	r5, r2, r0, asr #18
   19150:	andeq	r5, r2, r8, asr #17
   19154:	andeq	r5, r2, r8, asr #19
   19158:	andeq	r3, r2, r4, lsr #26
   1915c:	andeq	r5, r2, ip, lsl #18
   19160:	andeq	r5, r2, r4, lsl sl
   19164:	strdeq	r5, [r2], -r0
   19168:	andeq	r3, r2, ip, lsr #27
   1916c:	andeq	r3, r2, r8, asr #27
   19170:	ldr	r3, [r2]
   19174:	tst	r3, #1
   19178:	bne	19184 <ftello64@plt+0x7ab4>
   1917c:	mov	r0, #0
   19180:	bx	lr
   19184:	ldr	r3, [r2, #4]
   19188:	push	{r4, lr}
   1918c:	mov	r2, r1
   19190:	str	r3, [r1, #16]
   19194:	mov	r4, r1
   19198:	ldr	r1, [pc, #72]	; 191e8 <ftello64@plt+0x7b18>
   1919c:	bl	1ade4 <argp_parse@@Base+0x1084>
   191a0:	cmp	r0, #0
   191a4:	blt	191d0 <ftello64@plt+0x7b00>
   191a8:	ldr	r3, [pc, #60]	; 191ec <ftello64@plt+0x7b1c>
   191ac:	ldr	r3, [r3]
   191b0:	cmp	r3, #0
   191b4:	beq	191c8 <ftello64@plt+0x7af8>
   191b8:	ldr	r2, [r4, #16]
   191bc:	mov	r1, r4
   191c0:	ldr	r0, [pc, #40]	; 191f0 <ftello64@plt+0x7b20>
   191c4:	bl	113b8 <printf@plt>
   191c8:	mov	r0, #0
   191cc:	pop	{r4, pc}
   191d0:	bl	11568 <__errno_location@plt>
   191d4:	ldr	r2, [pc, #24]	; 191f4 <ftello64@plt+0x7b24>
   191d8:	ldr	r1, [r0]
   191dc:	mov	r0, #0
   191e0:	bl	114a8 <error@plt>
   191e4:	b	191a8 <ftello64@plt+0x7ad8>
   191e8:	andeq	r8, r0, r3, asr #18
   191ec:	andeq	r7, r3, r0, lsl #24
   191f0:	andeq	r5, r2, r8, asr sl
   191f4:	andeq	r5, r2, r0, asr #20
   191f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191fc:	sub	sp, sp, #36	; 0x24
   19200:	ldr	sl, [r0]
   19204:	str	r0, [sp, #12]
   19208:	cmp	sl, #0
   1920c:	str	r1, [sp, #16]
   19210:	str	r2, [sp, #20]
   19214:	mov	r9, r3
   19218:	ldr	r8, [r0, #16]
   1921c:	ldr	r7, [sp, #72]	; 0x48
   19220:	beq	193ec <ftello64@plt+0x7d1c>
   19224:	add	fp, sl, #24
   19228:	str	r8, [sp, #28]
   1922c:	str	r3, [sp, #24]
   19230:	ldr	r4, [fp, #-20]	; 0xffffffec
   19234:	sub	r1, fp, #24
   19238:	cmp	r4, #0
   1923c:	bne	1924c <ftello64@plt+0x7b7c>
   19240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19244:	cmp	r3, #0
   19248:	beq	193c0 <ftello64@plt+0x7cf0>
   1924c:	ldr	r3, [fp, #-12]
   19250:	tst	r3, #4
   19254:	moveq	sl, r1
   19258:	moveq	r5, r3
   1925c:	ldrne	r5, [sl, #12]
   19260:	ands	r5, r5, #8
   19264:	bne	193a8 <ftello64@plt+0x7cd8>
   19268:	tst	r3, #8
   1926c:	bne	192e8 <ftello64@plt+0x7c18>
   19270:	sub	r3, r4, #1
   19274:	cmp	r3, #254	; 0xfe
   19278:	bhi	192e8 <ftello64@plt+0x7c18>
   1927c:	bl	11520 <__ctype_b_loc@plt>
   19280:	lsl	r3, r4, #1
   19284:	ldr	r1, [r0]
   19288:	ldrh	r3, [r1, r3]
   1928c:	tst	r3, #16384	; 0x4000
   19290:	beq	192e8 <ftello64@plt+0x7c18>
   19294:	ldr	r3, [r7, #4]
   19298:	add	r1, r3, #1
   1929c:	str	r1, [r7, #4]
   192a0:	strb	r4, [r3]
   192a4:	ldr	r3, [sl, #8]
   192a8:	cmp	r3, #0
   192ac:	beq	192dc <ftello64@plt+0x7c0c>
   192b0:	ldr	r3, [r7, #4]
   192b4:	mov	r2, #58	; 0x3a
   192b8:	add	r1, r3, #1
   192bc:	str	r1, [r7, #4]
   192c0:	strb	r2, [r3]
   192c4:	ldr	r3, [sl, #12]
   192c8:	tst	r3, #1
   192cc:	ldrne	r3, [r7, #4]
   192d0:	addne	r1, r3, #1
   192d4:	strne	r1, [r7, #4]
   192d8:	strbne	r2, [r3]
   192dc:	ldr	r3, [r7, #4]
   192e0:	mov	r2, #0
   192e4:	strb	r2, [r3]
   192e8:	ldr	r4, [fp, #-24]	; 0xffffffe8
   192ec:	cmp	r4, #0
   192f0:	beq	193a8 <ftello64@plt+0x7cd8>
   192f4:	ldr	r8, [r7]
   192f8:	ldr	r6, [r8, #8]
   192fc:	ldr	r0, [r6]
   19300:	cmp	r0, #0
   19304:	beq	19328 <ftello64@plt+0x7c58>
   19308:	mov	r9, r6
   1930c:	mov	r1, r4
   19310:	bl	113a0 <strcmp@plt>
   19314:	cmp	r0, #0
   19318:	beq	193b0 <ftello64@plt+0x7ce0>
   1931c:	ldr	r0, [r9, #16]!
   19320:	cmp	r0, #0
   19324:	bne	1930c <ftello64@plt+0x7c3c>
   19328:	ldr	r3, [sl, #8]
   1932c:	ldr	r1, [r7, #8]
   19330:	cmp	r3, #0
   19334:	str	r4, [r1]
   19338:	beq	1934c <ftello64@plt+0x7c7c>
   1933c:	ldr	r3, [sl, #12]
   19340:	tst	r3, #1
   19344:	moveq	r5, #1
   19348:	movne	r5, #2
   1934c:	str	r5, [r1, #4]
   19350:	ldr	ip, [fp, #-20]	; 0xffffffec
   19354:	mov	r3, #0
   19358:	cmp	ip, r3
   1935c:	str	r3, [r1, #8]
   19360:	ldr	r2, [sp, #24]
   19364:	ldr	r3, [r8, #48]	; 0x30
   19368:	ldreq	ip, [sl, #4]
   1936c:	sub	r3, r2, r3
   19370:	bic	ip, ip, #-16777216	; 0xff000000
   19374:	asr	r3, r3, #2
   19378:	add	lr, r1, #16
   1937c:	rsb	r0, r3, r3, lsl #3
   19380:	add	r0, r0, r0, lsl #6
   19384:	add	r0, r3, r0, lsl #3
   19388:	rsb	r0, r0, r0, lsl #15
   1938c:	add	r3, r3, r0, lsl #3
   19390:	add	r3, r3, #1
   19394:	add	r3, ip, r3, lsl #24
   19398:	str	r3, [r1, #12]
   1939c:	mov	r3, #0
   193a0:	str	lr, [r7, #8]
   193a4:	str	r3, [r1, #16]
   193a8:	add	fp, fp, #24
   193ac:	b	19230 <ftello64@plt+0x7b60>
   193b0:	sub	r6, r9, r6
   193b4:	cmn	r6, #15
   193b8:	bge	193a8 <ftello64@plt+0x7cd8>
   193bc:	b	19328 <ftello64@plt+0x7c58>
   193c0:	ldr	r3, [fp, #-8]
   193c4:	cmp	r3, #0
   193c8:	bne	1924c <ftello64@plt+0x7b7c>
   193cc:	ldr	r3, [fp, #-4]
   193d0:	cmp	r3, #0
   193d4:	bne	1924c <ftello64@plt+0x7b7c>
   193d8:	ldr	r3, [sp, #12]
   193dc:	ldr	r8, [sp, #28]
   193e0:	ldr	r9, [sp, #24]
   193e4:	ldr	r3, [r3, #4]
   193e8:	b	19400 <ftello64@plt+0x7d30>
   193ec:	ldr	r3, [r0, #4]
   193f0:	cmp	r3, #0
   193f4:	moveq	r0, r9
   193f8:	moveq	r9, r3
   193fc:	beq	19470 <ftello64@plt+0x7da0>
   19400:	ldr	r2, [r7, #4]
   19404:	ldr	r1, [sp, #12]
   19408:	str	r3, [r9]
   1940c:	cmp	r8, #0
   19410:	stmib	r9, {r1, r2}
   19414:	ldr	r2, [sp, #16]
   19418:	mov	r3, #0
   1941c:	str	r2, [r9, #16]
   19420:	ldr	r2, [sp, #20]
   19424:	str	r3, [r9, #12]
   19428:	str	r2, [r9, #20]
   1942c:	str	r3, [r9, #24]
   19430:	str	r3, [r9, #32]
   19434:	str	r3, [r9, #28]
   19438:	beq	1946c <ftello64@plt+0x7d9c>
   1943c:	ldr	r2, [r8]
   19440:	cmp	r2, r3
   19444:	beq	194b8 <ftello64@plt+0x7de8>
   19448:	add	r3, r3, #1
   1944c:	ldr	r2, [r8, r3, lsl #4]
   19450:	cmp	r2, #0
   19454:	bne	19448 <ftello64@plt+0x7d78>
   19458:	lsl	r3, r3, #2
   1945c:	ldr	r2, [r7, #12]
   19460:	add	r3, r2, r3
   19464:	str	r2, [r9, #28]
   19468:	str	r3, [r7, #12]
   1946c:	add	r0, r9, #36	; 0x24
   19470:	cmp	r8, #0
   19474:	beq	194b0 <ftello64@plt+0x7de0>
   19478:	ldr	r1, [r8]
   1947c:	cmp	r1, #0
   19480:	beq	194b0 <ftello64@plt+0x7de0>
   19484:	mov	r2, #0
   19488:	add	r4, r2, #1
   1948c:	mov	r3, r0
   19490:	str	r7, [sp]
   19494:	mov	r0, r1
   19498:	mov	r1, r9
   1949c:	bl	191f8 <ftello64@plt+0x7b28>
   194a0:	ldr	r1, [r8, r4, lsl #4]
   194a4:	mov	r2, r4
   194a8:	cmp	r1, #0
   194ac:	bne	19488 <ftello64@plt+0x7db8>
   194b0:	add	sp, sp, #36	; 0x24
   194b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   194b8:	mov	r3, r2
   194bc:	b	1945c <ftello64@plt+0x7d8c>
   194c0:	cmp	r0, #86	; 0x56
   194c4:	beq	194d0 <ftello64@plt+0x7e00>
   194c8:	mov	r0, #7
   194cc:	bx	lr
   194d0:	ldr	r3, [pc, #104]	; 19540 <ftello64@plt+0x7e70>
   194d4:	push	{r4, lr}
   194d8:	mov	r4, r2
   194dc:	ldr	r3, [r3]
   194e0:	cmp	r3, #0
   194e4:	beq	19508 <ftello64@plt+0x7e38>
   194e8:	mov	r1, r2
   194ec:	ldr	r0, [r2, #48]	; 0x30
   194f0:	blx	r3
   194f4:	ldr	r0, [r4, #16]
   194f8:	ands	r0, r0, #32
   194fc:	beq	1953c <ftello64@plt+0x7e6c>
   19500:	mov	r0, #0
   19504:	pop	{r4, pc}
   19508:	ldr	r3, [pc, #52]	; 19544 <ftello64@plt+0x7e74>
   1950c:	ldr	r2, [r3]
   19510:	cmp	r2, #0
   19514:	beq	19528 <ftello64@plt+0x7e58>
   19518:	ldr	r1, [pc, #40]	; 19548 <ftello64@plt+0x7e78>
   1951c:	ldr	r0, [r4, #48]	; 0x30
   19520:	bl	1155c <fprintf@plt>
   19524:	b	194f4 <ftello64@plt+0x7e24>
   19528:	ldr	r2, [pc, #28]	; 1954c <ftello64@plt+0x7e7c>
   1952c:	ldr	r1, [pc, #28]	; 19550 <ftello64@plt+0x7e80>
   19530:	mov	r0, r4
   19534:	bl	20e7c <argp_error@@Base>
   19538:	b	194f4 <ftello64@plt+0x7e24>
   1953c:	bl	1152c <exit@plt>
   19540:			; <UNDEFINED> instruction: 0x00037bb8
   19544:	andeq	r7, r3, r4, lsr #24
   19548:	ldrdeq	r6, [r2], -r0
   1954c:	andeq	r6, r2, ip, lsr #32
   19550:	andeq	r3, r2, ip, asr fp
   19554:	cmn	r0, #3
   19558:	push	{r4, r5, lr}
   1955c:	mov	r4, r2
   19560:	sub	sp, sp, #12
   19564:	beq	19648 <ftello64@plt+0x7f78>
   19568:	ble	195d8 <ftello64@plt+0x7f08>
   1956c:	cmn	r0, #2
   19570:	beq	19598 <ftello64@plt+0x7ec8>
   19574:	cmp	r0, #63	; 0x3f
   19578:	bne	1963c <ftello64@plt+0x7f6c>
   1957c:	mov	r0, r4
   19580:	ldr	r2, [pc, #236]	; 19674 <ftello64@plt+0x7fa4>
   19584:	ldr	r1, [r4, #48]	; 0x30
   19588:	bl	20dcc <argp_state_help@@Base>
   1958c:	mov	r0, #0
   19590:	add	sp, sp, #12
   19594:	pop	{r4, r5, pc}
   19598:	ldr	r3, [pc, #216]	; 19678 <ftello64@plt+0x7fa8>
   1959c:	mov	r0, r1
   195a0:	str	r1, [sp, #4]
   195a4:	str	r1, [r3]
   195a8:	bl	1ac30 <argp_parse@@Base+0xed0>
   195ac:	ldr	r3, [r4, #16]
   195b0:	ldr	r2, [pc, #196]	; 1967c <ftello64@plt+0x7fac>
   195b4:	and	r3, r3, #3
   195b8:	cmp	r3, #1
   195bc:	ldr	r1, [sp, #4]
   195c0:	str	r0, [r4, #40]	; 0x28
   195c4:	str	r0, [r2]
   195c8:	beq	19664 <ftello64@plt+0x7f94>
   195cc:	mov	r0, #0
   195d0:	add	sp, sp, #12
   195d4:	pop	{r4, r5, pc}
   195d8:	cmn	r0, #4
   195dc:	bne	1963c <ftello64@plt+0x7f6c>
   195e0:	cmp	r1, #0
   195e4:	ldr	r0, [pc, #148]	; 19680 <ftello64@plt+0x7fb0>
   195e8:	mov	r2, #10
   195ec:	movne	r0, r1
   195f0:	mov	r1, #0
   195f4:	bl	113ac <strtol@plt>
   195f8:	ldr	r4, [pc, #132]	; 19684 <ftello64@plt+0x7fb4>
   195fc:	str	r0, [r4]
   19600:	ldr	r3, [r4]
   19604:	cmp	r3, #0
   19608:	sub	r3, r3, #1
   1960c:	str	r3, [r4]
   19610:	ble	195cc <ftello64@plt+0x7efc>
   19614:	mov	r5, #1
   19618:	mov	r0, r5
   1961c:	bl	11430 <sleep@plt>
   19620:	ldr	r3, [r4]
   19624:	cmp	r3, #0
   19628:	sub	r3, r3, #1
   1962c:	str	r3, [r4]
   19630:	bgt	19618 <ftello64@plt+0x7f48>
   19634:	mov	r0, #0
   19638:	b	195d0 <ftello64@plt+0x7f00>
   1963c:	mov	r0, #7
   19640:	add	sp, sp, #12
   19644:	pop	{r4, r5, pc}
   19648:	mov	r0, r4
   1964c:	ldr	r2, [pc, #52]	; 19688 <ftello64@plt+0x7fb8>
   19650:	ldr	r1, [r4, #48]	; 0x30
   19654:	bl	20dcc <argp_state_help@@Base>
   19658:	mov	r0, #0
   1965c:	add	sp, sp, #12
   19660:	pop	{r4, r5, pc}
   19664:	ldr	r3, [r4, #8]
   19668:	mov	r0, #0
   1966c:	str	r1, [r3]
   19670:	b	19590 <ftello64@plt+0x7ec0>
   19674:	andeq	r0, r0, sl, ror r2
   19678:	andeq	r7, r3, r4, asr #22
   1967c:	andeq	r7, r3, r0, asr #22
   19680:	andeq	r6, r2, r0, asr r0
   19684:			; <UNDEFINED> instruction: 0x00037bb4
   19688:	andeq	r0, r0, r1, lsl #4
   1968c:	ldr	r3, [r0]
   19690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19694:	cmp	r3, #0
   19698:	sub	sp, sp, #12
   1969c:	ldr	lr, [r0, #16]
   196a0:	beq	196d8 <ftello64@plt+0x8008>
   196a4:	ldr	r0, [r1, #8]
   196a8:	mov	r2, #0
   196ac:	add	r0, r0, #1
   196b0:	str	r0, [r1, #8]
   196b4:	add	r3, r3, #24
   196b8:	ldr	r0, [r3, #-20]	; 0xffffffec
   196bc:	cmp	r0, #0
   196c0:	bne	196d0 <ftello64@plt+0x8000>
   196c4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   196c8:	cmp	r0, #0
   196cc:	beq	19c90 <ftello64@plt+0x85c0>
   196d0:	add	r2, r2, #1
   196d4:	b	196b4 <ftello64@plt+0x7fe4>
   196d8:	ldr	r3, [r0, #4]
   196dc:	cmp	r3, #0
   196e0:	ldrne	r3, [r1, #8]
   196e4:	addne	r3, r3, #1
   196e8:	strne	r3, [r1, #8]
   196ec:	cmp	lr, #0
   196f0:	beq	19a7c <ftello64@plt+0x83ac>
   196f4:	ldr	r0, [lr]
   196f8:	cmp	r0, #0
   196fc:	beq	19a7c <ftello64@plt+0x83ac>
   19700:	mov	r6, r1
   19704:	str	lr, [sp]
   19708:	ldr	r2, [r0]
   1970c:	ldr	r7, [r0, #16]
   19710:	cmp	r2, #0
   19714:	beq	1974c <ftello64@plt+0x807c>
   19718:	ldr	r0, [r6, #8]
   1971c:	mov	r1, #0
   19720:	add	r0, r0, #1
   19724:	str	r0, [r6, #8]
   19728:	add	r2, r2, #24
   1972c:	ldr	r0, [r2, #-20]	; 0xffffffec
   19730:	cmp	r0, #0
   19734:	bne	19744 <ftello64@plt+0x8074>
   19738:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1973c:	cmp	r0, #0
   19740:	beq	19cc0 <ftello64@plt+0x85f0>
   19744:	add	r1, r1, #1
   19748:	b	19728 <ftello64@plt+0x8058>
   1974c:	ldr	r2, [r0, #4]
   19750:	cmp	r2, #0
   19754:	ldrne	r2, [r6, #8]
   19758:	addne	r2, r2, #1
   1975c:	strne	r2, [r6, #8]
   19760:	cmp	r7, #0
   19764:	beq	19d20 <ftello64@plt+0x8650>
   19768:	ldr	r1, [r7]
   1976c:	cmp	r1, #0
   19770:	beq	19d20 <ftello64@plt+0x8650>
   19774:	str	r7, [sp, #4]
   19778:	ldr	r2, [r1]
   1977c:	ldr	r8, [r1, #16]
   19780:	cmp	r2, #0
   19784:	beq	197bc <ftello64@plt+0x80ec>
   19788:	ldr	r0, [r6, #8]
   1978c:	mov	r1, #0
   19790:	add	r0, r0, #1
   19794:	str	r0, [r6, #8]
   19798:	add	r2, r2, #24
   1979c:	ldr	r0, [r2, #-20]	; 0xffffffec
   197a0:	cmp	r0, #0
   197a4:	bne	197b4 <ftello64@plt+0x80e4>
   197a8:	ldr	r0, [r2, #-24]	; 0xffffffe8
   197ac:	cmp	r0, #0
   197b0:	beq	19cf0 <ftello64@plt+0x8620>
   197b4:	add	r1, r1, #1
   197b8:	b	19798 <ftello64@plt+0x80c8>
   197bc:	ldr	r2, [r1, #4]
   197c0:	cmp	r2, #0
   197c4:	ldrne	r2, [r6, #8]
   197c8:	addne	r2, r2, #1
   197cc:	strne	r2, [r6, #8]
   197d0:	cmp	r8, #0
   197d4:	beq	19d28 <ftello64@plt+0x8658>
   197d8:	ldr	r1, [r8]
   197dc:	cmp	r1, #0
   197e0:	beq	19d28 <ftello64@plt+0x8658>
   197e4:	ldr	r2, [r1]
   197e8:	ldr	r9, [r1, #16]
   197ec:	cmp	r2, #0
   197f0:	beq	19828 <ftello64@plt+0x8158>
   197f4:	ldr	r0, [r6, #8]
   197f8:	mov	r1, #0
   197fc:	add	r0, r0, #1
   19800:	str	r0, [r6, #8]
   19804:	add	r2, r2, #24
   19808:	ldr	r0, [r2, #-20]	; 0xffffffec
   1980c:	cmp	r0, #0
   19810:	bne	19820 <ftello64@plt+0x8150>
   19814:	ldr	r0, [r2, #-24]	; 0xffffffe8
   19818:	cmp	r0, #0
   1981c:	beq	19d30 <ftello64@plt+0x8660>
   19820:	add	r1, r1, #1
   19824:	b	19804 <ftello64@plt+0x8134>
   19828:	ldr	r2, [r1, #4]
   1982c:	cmp	r2, #0
   19830:	ldrne	r2, [r6, #8]
   19834:	addne	r2, r2, #1
   19838:	strne	r2, [r6, #8]
   1983c:	cmp	r9, #0
   19840:	beq	19a2c <ftello64@plt+0x835c>
   19844:	ldr	r1, [r9]
   19848:	cmp	r1, #0
   1984c:	beq	19a2c <ftello64@plt+0x835c>
   19850:	ldr	r2, [r1]
   19854:	ldr	sl, [r1, #16]
   19858:	cmp	r2, #0
   1985c:	beq	198c4 <ftello64@plt+0x81f4>
   19860:	ldr	r0, [r6, #8]
   19864:	mov	r1, #0
   19868:	add	r0, r0, #1
   1986c:	str	r0, [r6, #8]
   19870:	b	19878 <ftello64@plt+0x81a8>
   19874:	add	r1, r1, #1
   19878:	add	r2, r2, #24
   1987c:	ldr	r0, [r2, #-20]	; 0xffffffec
   19880:	cmp	r0, #0
   19884:	bne	19874 <ftello64@plt+0x81a4>
   19888:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1988c:	cmp	r0, #0
   19890:	bne	19874 <ftello64@plt+0x81a4>
   19894:	ldr	r0, [r2, #-8]
   19898:	cmp	r0, #0
   1989c:	bne	19874 <ftello64@plt+0x81a4>
   198a0:	ldr	r0, [r2, #-4]
   198a4:	cmp	r0, #0
   198a8:	bne	19874 <ftello64@plt+0x81a4>
   198ac:	ldm	r6, {r0, r2}
   198b0:	add	ip, r1, r1, lsl #1
   198b4:	add	r0, r0, ip
   198b8:	add	r1, r2, r1
   198bc:	stm	r6, {r0, r1}
   198c0:	b	198d8 <ftello64@plt+0x8208>
   198c4:	ldr	r2, [r1, #4]
   198c8:	cmp	r2, #0
   198cc:	ldrne	r2, [r6, #8]
   198d0:	addne	r2, r2, #1
   198d4:	strne	r2, [r6, #8]
   198d8:	cmp	sl, #0
   198dc:	beq	19c88 <ftello64@plt+0x85b8>
   198e0:	ldr	r1, [sl]
   198e4:	cmp	r1, #0
   198e8:	beq	19c88 <ftello64@plt+0x85b8>
   198ec:	ldr	r2, [r1]
   198f0:	ldr	fp, [r1, #16]
   198f4:	cmp	r2, #0
   198f8:	beq	19c60 <ftello64@plt+0x8590>
   198fc:	ldr	r0, [r6, #8]
   19900:	mov	r1, #0
   19904:	add	r0, r0, #1
   19908:	str	r0, [r6, #8]
   1990c:	b	19914 <ftello64@plt+0x8244>
   19910:	add	r1, r1, #1
   19914:	add	r2, r2, #24
   19918:	ldr	r0, [r2, #-20]	; 0xffffffec
   1991c:	cmp	r0, #0
   19920:	bne	19910 <ftello64@plt+0x8240>
   19924:	ldr	r0, [r2, #-24]	; 0xffffffe8
   19928:	cmp	r0, #0
   1992c:	bne	19910 <ftello64@plt+0x8240>
   19930:	ldr	r0, [r2, #-8]
   19934:	cmp	r0, #0
   19938:	bne	19910 <ftello64@plt+0x8240>
   1993c:	ldr	r0, [r2, #-4]
   19940:	cmp	r0, #0
   19944:	bne	19910 <ftello64@plt+0x8240>
   19948:	ldm	r6, {r0, r2}
   1994c:	add	ip, r1, r1, lsl #1
   19950:	add	r0, r0, ip
   19954:	add	r1, r2, r1
   19958:	stm	r6, {r0, r1}
   1995c:	cmp	fp, #0
   19960:	beq	19c80 <ftello64@plt+0x85b0>
   19964:	ldr	r0, [fp]
   19968:	cmp	r0, #0
   1996c:	beq	19c80 <ftello64@plt+0x85b0>
   19970:	ldr	r2, [r0]
   19974:	ldr	r5, [r0, #16]
   19978:	cmp	r2, #0
   1997c:	beq	19a84 <ftello64@plt+0x83b4>
   19980:	ldr	r0, [r6, #8]
   19984:	mov	r1, #0
   19988:	add	r0, r0, #1
   1998c:	str	r0, [r6, #8]
   19990:	b	19998 <ftello64@plt+0x82c8>
   19994:	add	r1, r1, #1
   19998:	add	r2, r2, #24
   1999c:	ldr	r0, [r2, #-20]	; 0xffffffec
   199a0:	cmp	r0, #0
   199a4:	bne	19994 <ftello64@plt+0x82c4>
   199a8:	ldr	r0, [r2, #-24]	; 0xffffffe8
   199ac:	cmp	r0, #0
   199b0:	bne	19994 <ftello64@plt+0x82c4>
   199b4:	ldr	r0, [r2, #-8]
   199b8:	cmp	r0, #0
   199bc:	bne	19994 <ftello64@plt+0x82c4>
   199c0:	ldr	r0, [r2, #-4]
   199c4:	cmp	r0, #0
   199c8:	bne	19994 <ftello64@plt+0x82c4>
   199cc:	ldm	r6, {r0, r2}
   199d0:	add	ip, r1, r1, lsl #1
   199d4:	cmp	r5, #0
   199d8:	add	r0, r0, ip
   199dc:	add	r1, r2, r1
   199e0:	stm	r6, {r0, r1}
   199e4:	bne	19aa0 <ftello64@plt+0x83d0>
   199e8:	ldr	r1, [r6, #12]
   199ec:	ldr	r0, [fp, #16]!
   199f0:	add	r2, r1, #1
   199f4:	cmp	r0, #0
   199f8:	str	r2, [r6, #12]
   199fc:	bne	19970 <ftello64@plt+0x82a0>
   19a00:	ldr	r1, [sl, #16]!
   19a04:	add	r2, r2, #1
   19a08:	cmp	r1, #0
   19a0c:	str	r2, [r6, #12]
   19a10:	bne	198ec <ftello64@plt+0x821c>
   19a14:	ldr	r1, [r9, #16]!
   19a18:	add	r2, r2, #1
   19a1c:	cmp	r1, #0
   19a20:	str	r2, [r6, #12]
   19a24:	bne	19850 <ftello64@plt+0x8180>
   19a28:	b	19a30 <ftello64@plt+0x8360>
   19a2c:	ldr	r2, [r6, #12]
   19a30:	ldr	r1, [r8, #16]!
   19a34:	add	r2, r2, #1
   19a38:	cmp	r1, #0
   19a3c:	str	r2, [r6, #12]
   19a40:	bne	197e4 <ftello64@plt+0x8114>
   19a44:	ldr	r3, [sp, #4]
   19a48:	add	r2, r2, #1
   19a4c:	ldr	r1, [r3, #16]!
   19a50:	str	r2, [r6, #12]
   19a54:	cmp	r1, #0
   19a58:	str	r3, [sp, #4]
   19a5c:	bne	19778 <ftello64@plt+0x80a8>
   19a60:	ldr	r3, [sp]
   19a64:	add	r2, r2, #1
   19a68:	ldr	r0, [r3, #16]!
   19a6c:	str	r2, [r6, #12]
   19a70:	cmp	r0, #0
   19a74:	str	r3, [sp]
   19a78:	bne	19708 <ftello64@plt+0x8038>
   19a7c:	add	sp, sp, #12
   19a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a84:	ldr	r2, [r0, #4]
   19a88:	cmp	r2, #0
   19a8c:	ldrne	r2, [r6, #8]
   19a90:	addne	r2, r2, #1
   19a94:	strne	r2, [r6, #8]
   19a98:	cmp	r5, #0
   19a9c:	beq	199e8 <ftello64@plt+0x8318>
   19aa0:	ldr	r0, [r5]
   19aa4:	cmp	r0, #0
   19aa8:	beq	199e8 <ftello64@plt+0x8318>
   19aac:	ldr	r2, [r0]
   19ab0:	ldr	r4, [r0, #16]
   19ab4:	cmp	r2, #0
   19ab8:	beq	19c18 <ftello64@plt+0x8548>
   19abc:	ldr	r0, [r6, #8]
   19ac0:	mov	r1, #0
   19ac4:	add	r0, r0, #1
   19ac8:	str	r0, [r6, #8]
   19acc:	b	19ad4 <ftello64@plt+0x8404>
   19ad0:	add	r1, r1, #1
   19ad4:	add	r2, r2, #24
   19ad8:	ldr	r0, [r2, #-20]	; 0xffffffec
   19adc:	cmp	r0, #0
   19ae0:	bne	19ad0 <ftello64@plt+0x8400>
   19ae4:	ldr	r0, [r2, #-24]	; 0xffffffe8
   19ae8:	cmp	r0, #0
   19aec:	bne	19ad0 <ftello64@plt+0x8400>
   19af0:	ldr	r0, [r2, #-8]
   19af4:	cmp	r0, #0
   19af8:	bne	19ad0 <ftello64@plt+0x8400>
   19afc:	ldr	r0, [r2, #-4]
   19b00:	cmp	r0, #0
   19b04:	bne	19ad0 <ftello64@plt+0x8400>
   19b08:	ldm	r6, {r0, r2}
   19b0c:	add	ip, r1, r1, lsl #1
   19b10:	add	r0, r0, ip
   19b14:	add	r1, r2, r1
   19b18:	stm	r6, {r0, r1}
   19b1c:	cmp	r4, #0
   19b20:	beq	19c38 <ftello64@plt+0x8568>
   19b24:	ldr	r0, [r4]
   19b28:	cmp	r0, #0
   19b2c:	beq	19c38 <ftello64@plt+0x8568>
   19b30:	ldr	r1, [r0]
   19b34:	ldr	r2, [r0, #16]
   19b38:	cmp	r1, #0
   19b3c:	beq	19c48 <ftello64@plt+0x8578>
   19b40:	ldr	ip, [r6, #8]
   19b44:	mov	r0, #0
   19b48:	add	ip, ip, #1
   19b4c:	str	ip, [r6, #8]
   19b50:	b	19b58 <ftello64@plt+0x8488>
   19b54:	add	r0, r0, #1
   19b58:	add	r1, r1, #24
   19b5c:	ldr	ip, [r1, #-20]	; 0xffffffec
   19b60:	cmp	ip, #0
   19b64:	bne	19b54 <ftello64@plt+0x8484>
   19b68:	ldr	ip, [r1, #-24]	; 0xffffffe8
   19b6c:	cmp	ip, #0
   19b70:	bne	19b54 <ftello64@plt+0x8484>
   19b74:	ldr	ip, [r1, #-8]
   19b78:	cmp	ip, #0
   19b7c:	bne	19b54 <ftello64@plt+0x8484>
   19b80:	ldr	ip, [r1, #-4]
   19b84:	cmp	ip, #0
   19b88:	bne	19b54 <ftello64@plt+0x8484>
   19b8c:	ldr	ip, [r6]
   19b90:	ldr	r1, [r6, #4]
   19b94:	add	lr, r0, r0, lsl #1
   19b98:	add	ip, ip, lr
   19b9c:	add	r0, r1, r0
   19ba0:	str	ip, [r6]
   19ba4:	str	r0, [r6, #4]
   19ba8:	cmp	r2, #0
   19bac:	beq	19c40 <ftello64@plt+0x8570>
   19bb0:	ldr	r0, [r2]
   19bb4:	cmp	r0, #0
   19bb8:	beq	19c40 <ftello64@plt+0x8570>
   19bbc:	mov	r7, r2
   19bc0:	mov	r1, r6
   19bc4:	bl	1968c <ftello64@plt+0x7fbc>
   19bc8:	ldr	r1, [r6, #12]
   19bcc:	ldr	r0, [r7, #16]!
   19bd0:	add	r1, r1, #1
   19bd4:	cmp	r0, #0
   19bd8:	str	r1, [r6, #12]
   19bdc:	bne	19bc0 <ftello64@plt+0x84f0>
   19be0:	ldr	r0, [r4, #16]!
   19be4:	add	r1, r1, #1
   19be8:	cmp	r0, #0
   19bec:	str	r1, [r6, #12]
   19bf0:	bne	19b30 <ftello64@plt+0x8460>
   19bf4:	ldr	r0, [r5, #16]!
   19bf8:	add	r1, r1, #1
   19bfc:	cmp	r0, #0
   19c00:	str	r1, [r6, #12]
   19c04:	beq	199ec <ftello64@plt+0x831c>
   19c08:	ldr	r2, [r0]
   19c0c:	ldr	r4, [r0, #16]
   19c10:	cmp	r2, #0
   19c14:	bne	19abc <ftello64@plt+0x83ec>
   19c18:	ldr	r2, [r0, #4]
   19c1c:	cmp	r2, #0
   19c20:	beq	19b1c <ftello64@plt+0x844c>
   19c24:	ldr	r2, [r6, #8]
   19c28:	cmp	r4, #0
   19c2c:	add	r2, r2, #1
   19c30:	str	r2, [r6, #8]
   19c34:	bne	19b24 <ftello64@plt+0x8454>
   19c38:	ldr	r1, [r6, #12]
   19c3c:	b	19bf4 <ftello64@plt+0x8524>
   19c40:	ldr	r1, [r6, #12]
   19c44:	b	19be0 <ftello64@plt+0x8510>
   19c48:	ldr	r1, [r0, #4]
   19c4c:	cmp	r1, #0
   19c50:	ldrne	r1, [r6, #8]
   19c54:	addne	r1, r1, #1
   19c58:	strne	r1, [r6, #8]
   19c5c:	b	19ba8 <ftello64@plt+0x84d8>
   19c60:	ldr	r2, [r1, #4]
   19c64:	cmp	r2, #0
   19c68:	beq	1995c <ftello64@plt+0x828c>
   19c6c:	ldr	r2, [r6, #8]
   19c70:	cmp	fp, #0
   19c74:	add	r2, r2, #1
   19c78:	str	r2, [r6, #8]
   19c7c:	bne	19964 <ftello64@plt+0x8294>
   19c80:	ldr	r2, [r6, #12]
   19c84:	b	19a00 <ftello64@plt+0x8330>
   19c88:	ldr	r2, [r6, #12]
   19c8c:	b	19a14 <ftello64@plt+0x8344>
   19c90:	ldr	r0, [r3, #-8]
   19c94:	cmp	r0, #0
   19c98:	bne	196d0 <ftello64@plt+0x8000>
   19c9c:	ldr	r0, [r3, #-4]
   19ca0:	cmp	r0, #0
   19ca4:	bne	196d0 <ftello64@plt+0x8000>
   19ca8:	ldm	r1, {r0, r3}
   19cac:	add	ip, r2, r2, lsl #1
   19cb0:	add	r0, r0, ip
   19cb4:	add	r2, r3, r2
   19cb8:	stm	r1, {r0, r2}
   19cbc:	b	196ec <ftello64@plt+0x801c>
   19cc0:	ldr	r0, [r2, #-8]
   19cc4:	cmp	r0, #0
   19cc8:	bne	19744 <ftello64@plt+0x8074>
   19ccc:	ldr	r0, [r2, #-4]
   19cd0:	cmp	r0, #0
   19cd4:	bne	19744 <ftello64@plt+0x8074>
   19cd8:	ldm	r6, {r0, r2}
   19cdc:	add	ip, r1, r1, lsl #1
   19ce0:	add	r0, r0, ip
   19ce4:	add	r1, r2, r1
   19ce8:	stm	r6, {r0, r1}
   19cec:	b	19760 <ftello64@plt+0x8090>
   19cf0:	ldr	r0, [r2, #-8]
   19cf4:	cmp	r0, #0
   19cf8:	bne	197b4 <ftello64@plt+0x80e4>
   19cfc:	ldr	r0, [r2, #-4]
   19d00:	cmp	r0, #0
   19d04:	bne	197b4 <ftello64@plt+0x80e4>
   19d08:	ldm	r6, {r0, r2}
   19d0c:	add	ip, r1, r1, lsl #1
   19d10:	add	r0, r0, ip
   19d14:	add	r1, r2, r1
   19d18:	stm	r6, {r0, r1}
   19d1c:	b	197d0 <ftello64@plt+0x8100>
   19d20:	ldr	r2, [r6, #12]
   19d24:	b	19a60 <ftello64@plt+0x8390>
   19d28:	ldr	r2, [r6, #12]
   19d2c:	b	19a44 <ftello64@plt+0x8374>
   19d30:	ldr	r0, [r2, #-8]
   19d34:	cmp	r0, #0
   19d38:	bne	19820 <ftello64@plt+0x8150>
   19d3c:	ldr	r0, [r2, #-4]
   19d40:	cmp	r0, #0
   19d44:	bne	19820 <ftello64@plt+0x8150>
   19d48:	ldm	r6, {r0, r2}
   19d4c:	add	ip, r1, r1, lsl #1
   19d50:	add	r0, r0, ip
   19d54:	add	r1, r2, r1
   19d58:	stm	r6, {r0, r1}
   19d5c:	b	1983c <ftello64@plt+0x816c>

00019d60 <argp_parse@@Base>:
   19d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d64:	add	fp, sp, #32
   19d68:	tst	r3, #1
   19d6c:	sub	sp, sp, #220	; 0xdc
   19d70:	mov	r7, r3
   19d74:	mov	r8, r0
   19d78:	str	r1, [fp, #-240]	; 0xffffff10
   19d7c:	str	r2, [fp, #-236]	; 0xffffff14
   19d80:	bne	19dac <argp_parse@@Base+0x4c>
   19d84:	ldr	r3, [pc, #3488]	; 1ab2c <argp_parse@@Base+0xdcc>
   19d88:	ldr	r4, [pc, #3488]	; 1ab30 <argp_parse@@Base+0xdd0>
   19d8c:	ldr	r2, [r3]
   19d90:	cmp	r2, #0
   19d94:	ldreq	r2, [fp, #-236]	; 0xffffff14
   19d98:	ldreq	r2, [r2]
   19d9c:	streq	r2, [r3]
   19da0:	ldr	r3, [r4]
   19da4:	cmp	r3, #0
   19da8:	beq	1a48c <argp_parse@@Base+0x72c>
   19dac:	ands	r3, r7, #16
   19db0:	beq	1a370 <argp_parse@@Base+0x610>
   19db4:	sub	r5, fp, #196	; 0xc4
   19db8:	mov	r0, r5
   19dbc:	mov	r2, #36	; 0x24
   19dc0:	mov	r1, #0
   19dc4:	bl	11598 <memset@plt>
   19dc8:	ands	r3, r7, #4
   19dcc:	str	r3, [fp, #-244]	; 0xffffff0c
   19dd0:	mov	r3, #0
   19dd4:	moveq	r0, #1
   19dd8:	movne	r0, #0
   19ddc:	cmp	r8, r3
   19de0:	str	r3, [fp, #-224]	; 0xffffff20
   19de4:	str	r3, [fp, #-220]	; 0xffffff24
   19de8:	str	r3, [fp, #-216]	; 0xffffff28
   19dec:	str	r0, [fp, #-228]	; 0xffffff1c
   19df0:	beq	19e64 <argp_parse@@Base+0x104>
   19df4:	ldr	r4, [r8, #16]
   19df8:	ldr	r3, [r8]
   19dfc:	cmp	r3, #0
   19e00:	movne	r2, #1
   19e04:	strne	r2, [fp, #-220]	; 0xffffff24
   19e08:	movne	r2, #0
   19e0c:	bne	19e18 <argp_parse@@Base+0xb8>
   19e10:	b	1a958 <argp_parse@@Base+0xbf8>
   19e14:	add	r2, r2, #1
   19e18:	add	r3, r3, #24
   19e1c:	ldr	r1, [r3, #-20]	; 0xffffffec
   19e20:	cmp	r1, #0
   19e24:	bne	19e14 <argp_parse@@Base+0xb4>
   19e28:	ldr	r1, [r3, #-24]	; 0xffffffe8
   19e2c:	cmp	r1, #0
   19e30:	bne	19e14 <argp_parse@@Base+0xb4>
   19e34:	ldr	r1, [r3, #-8]
   19e38:	cmp	r1, #0
   19e3c:	bne	19e14 <argp_parse@@Base+0xb4>
   19e40:	ldr	r1, [r3, #-4]
   19e44:	cmp	r1, #0
   19e48:	bne	19e14 <argp_parse@@Base+0xb4>
   19e4c:	add	r3, r2, r2, lsl #1
   19e50:	add	r0, r3, r0
   19e54:	str	r2, [fp, #-224]	; 0xffffff20
   19e58:	str	r0, [fp, #-228]	; 0xffffff1c
   19e5c:	mov	r6, #72	; 0x48
   19e60:	b	1a970 <argp_parse@@Base+0xc10>
   19e64:	mov	sl, #36	; 0x24
   19e68:	mov	r6, sl
   19e6c:	mov	r4, r8
   19e70:	mov	r3, #52	; 0x34
   19e74:	str	r3, [fp, #-232]	; 0xffffff18
   19e78:	add	r0, r3, r0
   19e7c:	add	r0, r0, #1
   19e80:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   19e84:	cmp	r0, #0
   19e88:	mov	r9, r0
   19e8c:	str	r0, [fp, #-40]	; 0xffffffd8
   19e90:	moveq	r5, #12
   19e94:	beq	1a290 <argp_parse@@Base+0x530>
   19e98:	mov	lr, r5
   19e9c:	mov	r3, #1
   19ea0:	str	r3, [fp, #-196]	; 0xffffff3c
   19ea4:	str	r3, [fp, #-192]	; 0xffffff40
   19ea8:	ldm	lr!, {r0, r1, r2, r3}
   19eac:	sub	ip, fp, #148	; 0x94
   19eb0:	add	r5, r9, sl
   19eb4:	ldr	sl, [fp, #-232]	; 0xffffff18
   19eb8:	stmia	ip!, {r0, r1, r2, r3}
   19ebc:	add	r6, r9, r6
   19ec0:	ldm	lr!, {r0, r1, r2, r3}
   19ec4:	add	sl, r9, sl
   19ec8:	str	r6, [fp, #-104]	; 0xffffff98
   19ecc:	str	r5, [fp, #-152]	; 0xffffff68
   19ed0:	ldr	lr, [lr]
   19ed4:	stmia	ip!, {r0, r1, r2, r3}
   19ed8:	mov	r2, r4
   19edc:	mov	r0, r6
   19ee0:	mov	r1, #0
   19ee4:	str	r9, [fp, #-112]	; 0xffffff90
   19ee8:	str	lr, [ip]
   19eec:	str	sl, [fp, #-156]	; 0xffffff64
   19ef0:	sub	r4, fp, #160	; 0xa0
   19ef4:	bl	11598 <memset@plt>
   19ef8:	tst	r7, #8
   19efc:	str	r5, [fp, #-204]	; 0xffffff34
   19f00:	str	sl, [fp, #-208]	; 0xffffff30
   19f04:	str	r6, [fp, #-200]	; 0xffffff38
   19f08:	str	r4, [fp, #-212]	; 0xffffff2c
   19f0c:	beq	1a424 <argp_parse@@Base+0x6c4>
   19f10:	ldr	r2, [fp, #-232]	; 0xffffff18
   19f14:	add	sl, sl, #1
   19f18:	mov	r3, #45	; 0x2d
   19f1c:	str	sl, [fp, #-208]	; 0xffffff30
   19f20:	strb	r3, [r9, r2]
   19f24:	mov	r2, #0
   19f28:	strb	r2, [sl]
   19f2c:	ldr	r3, [fp, #-204]	; 0xffffff34
   19f30:	cmp	r8, r2
   19f34:	str	r2, [r3]
   19f38:	str	r8, [fp, #-160]	; 0xffffff60
   19f3c:	beq	1a454 <argp_parse@@Base+0x6f4>
   19f40:	sub	r1, fp, #212	; 0xd4
   19f44:	mov	r0, r8
   19f48:	str	r1, [sp]
   19f4c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19f50:	mov	r1, r2
   19f54:	bl	191f8 <ftello64@plt+0x7b28>
   19f58:	ldr	r8, [fp, #-160]	; 0xffffff60
   19f5c:	ldr	r5, [fp, #-112]	; 0xffffff90
   19f60:	mov	r6, r0
   19f64:	str	r0, [fp, #-108]	; 0xffffff94
   19f68:	mov	r2, #56	; 0x38
   19f6c:	mov	r1, #0
   19f70:	sub	r0, fp, #96	; 0x60
   19f74:	bl	11598 <memset@plt>
   19f78:	ldr	r2, [pc, #2996]	; 1ab34 <argp_parse@@Base+0xdd4>
   19f7c:	ldr	r3, [pc, #2996]	; 1ab38 <argp_parse@@Base+0xdd8>
   19f80:	ldr	r0, [fp, #-240]	; 0xffffff10
   19f84:	ldr	r1, [r2]
   19f88:	str	r0, [fp, #-92]	; 0xffffffa4
   19f8c:	ldr	r2, [r3]
   19f90:	ldr	r0, [fp, #-236]	; 0xffffff14
   19f94:	mov	r3, #1
   19f98:	cmp	r5, r6
   19f9c:	str	r8, [fp, #-96]	; 0xffffffa0
   19fa0:	str	r0, [fp, #-88]	; 0xffffffa8
   19fa4:	str	r7, [fp, #-80]	; 0xffffffb0
   19fa8:	str	r4, [fp, #-44]	; 0xffffffd4
   19fac:	str	r1, [fp, #-52]	; 0xffffffcc
   19fb0:	str	r2, [fp, #-48]	; 0xffffffd0
   19fb4:	str	r3, [fp, #-100]	; 0xffffff9c
   19fb8:	bcc	1a29c <argp_parse@@Base+0x53c>
   19fbc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19fc0:	tst	r3, #2
   19fc4:	bne	1a464 <argp_parse@@Base+0x704>
   19fc8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19fcc:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19fd0:	mov	r2, #1
   19fd4:	str	r2, [fp, #-144]	; 0xffffff70
   19fd8:	ldr	r2, [fp, #-236]	; 0xffffff14
   19fdc:	cmp	r2, r3
   19fe0:	beq	1aa04 <argp_parse@@Base+0xca4>
   19fe4:	ldr	r3, [pc, #2884]	; 1ab30 <argp_parse@@Base+0xdd0>
   19fe8:	ldr	r3, [r3]
   19fec:	str	r3, [fp, #-56]	; 0xffffffc8
   19ff0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19ff4:	ldr	r5, [fp, #-84]	; 0xffffffac
   19ff8:	ldr	sl, [pc, #2876]	; 1ab3c <argp_parse@@Base+0xddc>
   19ffc:	mov	r0, r4
   1a000:	mov	r6, #0
   1a004:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a008:	cmp	r3, #0
   1a00c:	beq	1a4a0 <argp_parse@@Base+0x740>
   1a010:	cmp	r3, r5
   1a014:	strgt	r6, [fp, #-72]	; 0xffffffb8
   1a018:	bgt	1a4a0 <argp_parse@@Base+0x740>
   1a01c:	cmp	r5, r0
   1a020:	blt	1a83c <argp_parse@@Base+0xadc>
   1a024:	cmp	r5, r0
   1a028:	bne	1a848 <argp_parse@@Base+0xae8>
   1a02c:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a030:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a034:	cmp	r6, ip
   1a038:	bcs	1aacc <argp_parse@@Base+0xd6c>
   1a03c:	mov	r5, #0
   1a040:	add	r6, r6, #36	; 0x24
   1a044:	mov	r8, r5
   1a048:	ldr	r7, [pc, #2800]	; 1ab40 <argp_parse@@Base+0xde0>
   1a04c:	mov	r0, r5
   1a050:	b	1a098 <argp_parse@@Base+0x338>
   1a054:	ldr	ip, [r6, #-4]
   1a058:	str	ip, [fp, #-60]	; 0xffffffc4
   1a05c:	ldr	ip, [r6, #-12]
   1a060:	str	ip, [fp, #-68]	; 0xffffffbc
   1a064:	ldr	ip, [r6, #-8]
   1a068:	str	r3, [fp, #-76]	; 0xffffffb4
   1a06c:	str	ip, [fp, #-64]	; 0xffffffc0
   1a070:	blx	r4
   1a074:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a078:	str	r3, [r6, #-4]
   1a07c:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a080:	cmp	ip, r6
   1a084:	bls	1aa74 <argp_parse@@Base+0xd14>
   1a088:	cmp	r0, #7
   1a08c:	cmpne	r0, #0
   1a090:	bne	1aa34 <argp_parse@@Base+0xcd4>
   1a094:	add	r6, r6, #36	; 0x24
   1a098:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1a09c:	cmp	r3, #0
   1a0a0:	bne	1a080 <argp_parse@@Base+0x320>
   1a0a4:	ldr	r4, [r6, #-36]	; 0xffffffdc
   1a0a8:	sub	r2, fp, #96	; 0x60
   1a0ac:	cmp	r4, #0
   1a0b0:	mov	r1, r8
   1a0b4:	mov	r0, r7
   1a0b8:	bne	1a054 <argp_parse@@Base+0x2f4>
   1a0bc:	cmp	ip, r6
   1a0c0:	mov	r0, #7
   1a0c4:	bhi	1a094 <argp_parse@@Base+0x334>
   1a0c8:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a0cc:	sub	r4, ip, #36	; 0x24
   1a0d0:	cmp	r6, r4
   1a0d4:	movls	r5, #7
   1a0d8:	bhi	1a160 <argp_parse@@Base+0x400>
   1a0dc:	cmp	r5, #7
   1a0e0:	cmpne	r5, #0
   1a0e4:	bne	1aa48 <argp_parse@@Base+0xce8>
   1a0e8:	sub	r4, r4, #36	; 0x24
   1a0ec:	mov	r8, #0
   1a0f0:	ldr	r7, [pc, #2636]	; 1ab44 <argp_parse@@Base+0xde4>
   1a0f4:	b	1a140 <argp_parse@@Base+0x3e0>
   1a0f8:	ldr	ip, [r4, #68]	; 0x44
   1a0fc:	ldr	lr, [r4, #48]	; 0x30
   1a100:	str	ip, [fp, #-60]	; 0xffffffc4
   1a104:	ldr	ip, [r4, #60]	; 0x3c
   1a108:	str	ip, [fp, #-68]	; 0xffffffbc
   1a10c:	ldr	ip, [r4, #64]	; 0x40
   1a110:	str	lr, [fp, #-76]	; 0xffffffb4
   1a114:	str	ip, [fp, #-64]	; 0xffffffc0
   1a118:	blx	r3
   1a11c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a120:	str	r3, [r4, #68]	; 0x44
   1a124:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a128:	cmp	r6, r4
   1a12c:	bhi	1aac4 <argp_parse@@Base+0xd64>
   1a130:	cmp	r0, #7
   1a134:	cmpne	r0, #0
   1a138:	bne	1aa58 <argp_parse@@Base+0xcf8>
   1a13c:	sub	r4, r4, #36	; 0x24
   1a140:	ldr	r3, [r4, #36]	; 0x24
   1a144:	sub	r2, fp, #96	; 0x60
   1a148:	cmp	r3, #0
   1a14c:	mov	r1, r8
   1a150:	mov	r0, r7
   1a154:	bne	1a0f8 <argp_parse@@Base+0x398>
   1a158:	cmp	r6, r4
   1a15c:	bls	1a13c <argp_parse@@Base+0x3dc>
   1a160:	ldr	r3, [fp, #4]
   1a164:	cmp	r3, #0
   1a168:	beq	1a184 <argp_parse@@Base+0x424>
   1a16c:	mov	r5, #0
   1a170:	ldr	r2, [fp, #4]
   1a174:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a178:	str	r3, [r2]
   1a17c:	cmp	r5, #0
   1a180:	bne	1aa68 <argp_parse@@Base+0xd08>
   1a184:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a188:	b	1a860 <argp_parse@@Base+0xb00>
   1a18c:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a190:	mov	r5, r0
   1a194:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a198:	cmp	r6, ip
   1a19c:	mov	r4, ip
   1a1a0:	subcs	r4, ip, #36	; 0x24
   1a1a4:	bcs	1a214 <argp_parse@@Base+0x4b4>
   1a1a8:	ldr	r8, [pc, #2456]	; 1ab48 <argp_parse@@Base+0xde8>
   1a1ac:	add	r6, r6, #36	; 0x24
   1a1b0:	mov	r9, #0
   1a1b4:	ldr	r3, [r6, #-36]	; 0xffffffdc
   1a1b8:	sub	r2, fp, #96	; 0x60
   1a1bc:	cmp	r3, #0
   1a1c0:	mov	r1, r9
   1a1c4:	mov	r0, r8
   1a1c8:	mov	r7, r6
   1a1cc:	beq	1a200 <argp_parse@@Base+0x4a0>
   1a1d0:	ldr	ip, [r6, #-4]
   1a1d4:	ldr	lr, [r6, #-24]	; 0xffffffe8
   1a1d8:	str	ip, [fp, #-60]	; 0xffffffc4
   1a1dc:	ldr	ip, [r6, #-12]
   1a1e0:	str	ip, [fp, #-68]	; 0xffffffbc
   1a1e4:	ldr	ip, [r6, #-8]
   1a1e8:	str	lr, [fp, #-76]	; 0xffffffb4
   1a1ec:	str	ip, [fp, #-64]	; 0xffffffc0
   1a1f0:	blx	r3
   1a1f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a1f8:	str	r3, [r6, #-4]
   1a1fc:	ldr	r4, [fp, #-108]	; 0xffffff94
   1a200:	cmp	r7, r4
   1a204:	add	r6, r6, #36	; 0x24
   1a208:	bcc	1a1b4 <argp_parse@@Base+0x454>
   1a20c:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a210:	sub	r4, r4, #36	; 0x24
   1a214:	cmp	r6, r4
   1a218:	bhi	1a280 <argp_parse@@Base+0x520>
   1a21c:	ldr	r8, [pc, #2344]	; 1ab4c <argp_parse@@Base+0xdec>
   1a220:	sub	r4, r4, #36	; 0x24
   1a224:	mov	r9, #0
   1a228:	ldr	r3, [r4, #36]	; 0x24
   1a22c:	sub	r2, fp, #96	; 0x60
   1a230:	cmp	r3, #0
   1a234:	mov	r1, r9
   1a238:	mov	r0, r8
   1a23c:	mov	r7, r4
   1a240:	beq	1a274 <argp_parse@@Base+0x514>
   1a244:	ldr	ip, [r4, #68]	; 0x44
   1a248:	ldr	lr, [r4, #48]	; 0x30
   1a24c:	str	ip, [fp, #-60]	; 0xffffffc4
   1a250:	ldr	ip, [r4, #60]	; 0x3c
   1a254:	str	ip, [fp, #-68]	; 0xffffffbc
   1a258:	ldr	ip, [r4, #64]	; 0x40
   1a25c:	str	lr, [fp, #-76]	; 0xffffffb4
   1a260:	str	ip, [fp, #-64]	; 0xffffffc0
   1a264:	blx	r3
   1a268:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a26c:	str	r3, [r4, #68]	; 0x44
   1a270:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a274:	cmp	r6, r7
   1a278:	sub	r4, r4, #36	; 0x24
   1a27c:	bls	1a228 <argp_parse@@Base+0x4c8>
   1a280:	cmp	r5, #7
   1a284:	moveq	r5, #22
   1a288:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a28c:	bl	1acdc <argp_parse@@Base+0xf7c>
   1a290:	mov	r0, r5
   1a294:	sub	sp, fp, #32
   1a298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a29c:	ldr	r3, [fp, #8]
   1a2a0:	add	r4, r5, #36	; 0x24
   1a2a4:	str	r3, [r5, #24]
   1a2a8:	mov	r7, #0
   1a2ac:	ldr	r6, [pc, #2204]	; 1ab50 <argp_parse@@Base+0xdf0>
   1a2b0:	b	1a308 <argp_parse@@Base+0x5a8>
   1a2b4:	ldr	r2, [r4, #-4]
   1a2b8:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1a2bc:	str	r2, [fp, #-60]	; 0xffffffc4
   1a2c0:	ldr	r1, [r4, #-12]
   1a2c4:	sub	r2, fp, #96	; 0x60
   1a2c8:	str	r1, [fp, #-68]	; 0xffffffbc
   1a2cc:	ldr	ip, [r4, #-8]
   1a2d0:	mov	r1, r7
   1a2d4:	str	r0, [fp, #-76]	; 0xffffffb4
   1a2d8:	str	ip, [fp, #-64]	; 0xffffffc0
   1a2dc:	mov	r0, r6
   1a2e0:	blx	r3
   1a2e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a2e8:	str	r3, [r4, #-4]
   1a2ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a2f0:	cmp	r3, r4
   1a2f4:	bls	1ab00 <argp_parse@@Base+0xda0>
   1a2f8:	cmp	r0, #7
   1a2fc:	cmpne	r0, #0
   1a300:	bne	1a444 <argp_parse@@Base+0x6e4>
   1a304:	add	r4, r4, #36	; 0x24
   1a308:	ldr	r3, [r4, #-20]	; 0xffffffec
   1a30c:	cmp	r3, #0
   1a310:	ldrne	r3, [r3, #28]
   1a314:	ldrne	r2, [r4, #-16]
   1a318:	ldrne	r3, [r3, r2, lsl #2]
   1a31c:	strne	r3, [r4, #-12]
   1a320:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a324:	cmp	r3, #0
   1a328:	bne	1a2b4 <argp_parse@@Base+0x554>
   1a32c:	ldr	r3, [r4, #-32]	; 0xffffffe0
   1a330:	ldr	r3, [r3, #16]
   1a334:	cmp	r3, #0
   1a338:	beq	1a360 <argp_parse@@Base+0x600>
   1a33c:	ldr	r3, [r3]
   1a340:	cmp	r3, #0
   1a344:	beq	1a360 <argp_parse@@Base+0x600>
   1a348:	ldr	r3, [r4, #-8]
   1a34c:	ldr	r2, [r4, #-12]
   1a350:	str	r2, [r3]
   1a354:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a358:	cmp	r3, #0
   1a35c:	bne	1a2b4 <argp_parse@@Base+0x554>
   1a360:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a364:	cmp	r3, r4
   1a368:	bhi	1a304 <argp_parse@@Base+0x5a4>
   1a36c:	b	19fbc <argp_parse@@Base+0x25c>
   1a370:	sub	sp, sp, #72	; 0x48
   1a374:	add	r4, sp, #8
   1a378:	sub	sp, sp, #40	; 0x28
   1a37c:	add	r6, sp, #8
   1a380:	mov	r1, r3
   1a384:	str	r3, [r6]
   1a388:	str	r3, [r6, #4]
   1a38c:	str	r3, [r6, #8]
   1a390:	str	r3, [r6, #12]
   1a394:	str	r3, [r6, #20]
   1a398:	str	r3, [r6, #24]
   1a39c:	mov	r2, #64	; 0x40
   1a3a0:	mov	r0, r4
   1a3a4:	str	r4, [r6, #16]
   1a3a8:	bl	11598 <memset@plt>
   1a3ac:	ldr	r2, [pc, #1952]	; 1ab54 <argp_parse@@Base+0xdf4>
   1a3b0:	cmp	r8, #0
   1a3b4:	addne	r3, r4, #16
   1a3b8:	ldr	r2, [r2]
   1a3bc:	moveq	r3, r4
   1a3c0:	ldr	r1, [pc, #1936]	; 1ab58 <argp_parse@@Base+0xdf8>
   1a3c4:	strne	r8, [r4]
   1a3c8:	cmp	r2, #0
   1a3cc:	str	r1, [r3]
   1a3d0:	beq	1aa1c <argp_parse@@Base+0xcbc>
   1a3d4:	ldr	r2, [pc, #1920]	; 1ab5c <argp_parse@@Base+0xdfc>
   1a3d8:	add	ip, r3, #32
   1a3dc:	str	r2, [r3, #16]
   1a3e0:	mov	r9, #0
   1a3e4:	sub	r5, fp, #196	; 0xc4
   1a3e8:	mov	r1, r9
   1a3ec:	mov	r0, r5
   1a3f0:	mov	r2, #36	; 0x24
   1a3f4:	str	r9, [ip]
   1a3f8:	bl	11598 <memset@plt>
   1a3fc:	ands	r3, r7, #4
   1a400:	moveq	r0, #1
   1a404:	movne	r0, r9
   1a408:	str	r3, [fp, #-244]	; 0xffffff0c
   1a40c:	mov	r8, r6
   1a410:	str	r9, [fp, #-224]	; 0xffffff20
   1a414:	str	r9, [fp, #-220]	; 0xffffff24
   1a418:	str	r9, [fp, #-216]	; 0xffffff28
   1a41c:	str	r0, [fp, #-228]	; 0xffffff1c
   1a420:	b	19df8 <argp_parse@@Base+0x98>
   1a424:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1a428:	cmp	r3, #0
   1a42c:	addne	r3, sl, #1
   1a430:	movne	r2, #43	; 0x2b
   1a434:	strbne	r2, [sl]
   1a438:	strne	r3, [fp, #-208]	; 0xffffff30
   1a43c:	movne	sl, r3
   1a440:	b	19f24 <argp_parse@@Base+0x1c4>
   1a444:	mov	r5, r0
   1a448:	mov	r0, r5
   1a44c:	sub	sp, fp, #32
   1a450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a454:	ldr	r5, [fp, #-112]	; 0xffffff90
   1a458:	mov	r6, r5
   1a45c:	str	r5, [fp, #-108]	; 0xffffff94
   1a460:	b	19f68 <argp_parse@@Base+0x208>
   1a464:	tst	r3, #1
   1a468:	mov	r3, #0
   1a46c:	str	r3, [fp, #-144]	; 0xffffff70
   1a470:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1a474:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a478:	subne	r3, r3, #4
   1a47c:	addne	r4, r4, #1
   1a480:	strne	r3, [fp, #-88]	; 0xffffffa8
   1a484:	strne	r4, [fp, #-92]	; 0xffffffa4
   1a488:	b	19fd8 <argp_parse@@Base+0x278>
   1a48c:	ldr	r3, [fp, #-236]	; 0xffffff14
   1a490:	ldr	r0, [r3]
   1a494:	bl	1ac30 <argp_parse@@Base+0xed0>
   1a498:	str	r0, [r4]
   1a49c:	b	19dac <argp_parse@@Base+0x4c>
   1a4a0:	cmp	r2, #0
   1a4a4:	beq	1a01c <argp_parse@@Base+0x2bc>
   1a4a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a4ac:	str	r5, [fp, #-148]	; 0xffffff6c
   1a4b0:	ands	ip, r3, #64	; 0x40
   1a4b4:	mvn	r3, #0
   1a4b8:	str	r3, [fp, #-140]	; 0xffffff74
   1a4bc:	ldr	r2, [fp, #-156]	; 0xffffff64
   1a4c0:	ldr	r3, [fp, #-152]	; 0xffffff68
   1a4c4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a4c8:	beq	1a7e8 <argp_parse@@Base+0xa88>
   1a4cc:	sub	ip, fp, #148	; 0x94
   1a4d0:	stm	sp, {r6, ip}
   1a4d4:	bl	1adb0 <argp_parse@@Base+0x1050>
   1a4d8:	ldr	r5, [fp, #-148]	; 0xffffff6c
   1a4dc:	str	r5, [fp, #-84]	; 0xffffffac
   1a4e0:	mov	r7, r0
   1a4e4:	cmn	r7, #1
   1a4e8:	beq	1a808 <argp_parse@@Base+0xaa8>
   1a4ec:	cmp	r7, #63	; 0x3f
   1a4f0:	beq	1a90c <argp_parse@@Base+0xbac>
   1a4f4:	cmp	r7, #1
   1a4f8:	beq	1a650 <argp_parse@@Base+0x8f0>
   1a4fc:	asrs	r8, r7, #24
   1a500:	bne	1a5ac <argp_parse@@Base+0x84c>
   1a504:	mov	r1, r7
   1a508:	ldr	r0, [fp, #-156]	; 0xffffff64
   1a50c:	bl	11550 <strchr@plt>
   1a510:	cmp	r0, #0
   1a514:	beq	1a61c <argp_parse@@Base+0x8bc>
   1a518:	ldr	r4, [fp, #-112]	; 0xffffff90
   1a51c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1a520:	cmp	r4, r2
   1a524:	bcc	1a538 <argp_parse@@Base+0x7d8>
   1a528:	b	1a61c <argp_parse@@Base+0x8bc>
   1a52c:	add	r4, r4, #36	; 0x24
   1a530:	cmp	r4, r2
   1a534:	bcs	1a61c <argp_parse@@Base+0x8bc>
   1a538:	ldr	r3, [r4, #8]
   1a53c:	cmp	r0, r3
   1a540:	bcs	1a52c <argp_parse@@Base+0x7cc>
   1a544:	ldr	r3, [r4]
   1a548:	cmp	r3, #0
   1a54c:	beq	1a61c <argp_parse@@Base+0x8bc>
   1a550:	ldr	r2, [r4, #32]
   1a554:	ldr	r0, [r4, #28]
   1a558:	ldr	ip, [r4, #24]
   1a55c:	str	r2, [fp, #-60]	; 0xffffffc4
   1a560:	ldr	r2, [r4, #12]
   1a564:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a568:	str	r0, [fp, #-64]	; 0xffffffc0
   1a56c:	str	r2, [fp, #-76]	; 0xffffffb4
   1a570:	str	ip, [fp, #-68]	; 0xffffffbc
   1a574:	sub	r2, fp, #96	; 0x60
   1a578:	mov	r0, r7
   1a57c:	blx	r3
   1a580:	mov	r8, r6
   1a584:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a588:	str	r3, [r4, #32]
   1a58c:	cmp	r0, #7
   1a590:	beq	1a614 <argp_parse@@Base+0x8b4>
   1a594:	cmp	r0, #0
   1a598:	bne	1a18c <argp_parse@@Base+0x42c>
   1a59c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a5a0:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a5a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a5a8:	b	1a004 <argp_parse@@Base+0x2a4>
   1a5ac:	add	r3, r8, r8, lsl #3
   1a5b0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a5b4:	lsl	r3, r3, #2
   1a5b8:	sub	r3, r3, #36	; 0x24
   1a5bc:	add	r4, r2, r3
   1a5c0:	ldr	r5, [r2, r3]
   1a5c4:	ands	r3, r7, #8388608	; 0x800000
   1a5c8:	movne	r3, #-16777216	; 0xff000000
   1a5cc:	cmp	r5, #0
   1a5d0:	beq	1a7a0 <argp_parse@@Base+0xa40>
   1a5d4:	ldr	r0, [r4, #32]
   1a5d8:	ldr	r2, [r4, #24]
   1a5dc:	str	r0, [fp, #-60]	; 0xffffffc4
   1a5e0:	ldr	r0, [r4, #28]
   1a5e4:	str	r2, [fp, #-68]	; 0xffffffbc
   1a5e8:	ldr	r2, [r4, #12]
   1a5ec:	str	r0, [fp, #-64]	; 0xffffffc0
   1a5f0:	bic	r0, r7, #-16777216	; 0xff000000
   1a5f4:	str	r2, [fp, #-76]	; 0xffffffb4
   1a5f8:	orr	r0, r0, r3
   1a5fc:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a600:	sub	r2, fp, #96	; 0x60
   1a604:	blx	r5
   1a608:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a60c:	str	r3, [r4, #32]
   1a610:	b	1a58c <argp_parse@@Base+0x82c>
   1a614:	cmp	r8, #0
   1a618:	bne	1a7a0 <argp_parse@@Base+0xa40>
   1a61c:	mov	r2, r7
   1a620:	ldr	r3, [pc, #1336]	; 1ab60 <argp_parse@@Base+0xe00>
   1a624:	ldr	r1, [pc, #1336]	; 1ab64 <argp_parse@@Base+0xe04>
   1a628:	sub	r0, fp, #96	; 0x60
   1a62c:	bl	20e7c <argp_error@@Base>
   1a630:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a634:	mov	r2, #260	; 0x104
   1a638:	sub	r0, fp, #96	; 0x60
   1a63c:	bl	20dcc <argp_state_help@@Base>
   1a640:	mov	r5, #7
   1a644:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a648:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a64c:	b	1a198 <argp_parse@@Base+0x438>
   1a650:	ldr	r7, [fp, #-136]	; 0xffffff78
   1a654:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a658:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a65c:	sub	r8, r5, #1
   1a660:	cmp	r3, ip
   1a664:	str	r8, [fp, #-84]	; 0xffffffac
   1a668:	bcs	1a794 <argp_parse@@Base+0xa34>
   1a66c:	mov	lr, r8
   1a670:	add	r4, r3, #36	; 0x24
   1a674:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a678:	add	r5, lr, #1
   1a67c:	cmp	r3, #0
   1a680:	str	r5, [fp, #-84]	; 0xffffffac
   1a684:	sub	r2, fp, #96	; 0x60
   1a688:	mov	r1, r7
   1a68c:	mov	r0, r6
   1a690:	sub	r5, r4, #36	; 0x24
   1a694:	mov	r9, r4
   1a698:	streq	lr, [fp, #-84]	; 0xffffffac
   1a69c:	beq	1a788 <argp_parse@@Base+0xa28>
   1a6a0:	ldr	ip, [r4, #-4]
   1a6a4:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1a6a8:	str	ip, [fp, #-60]	; 0xffffffc4
   1a6ac:	ldr	ip, [r4, #-12]
   1a6b0:	str	ip, [fp, #-68]	; 0xffffffbc
   1a6b4:	ldr	ip, [r4, #-8]
   1a6b8:	str	lr, [fp, #-76]	; 0xffffffb4
   1a6bc:	str	ip, [fp, #-64]	; 0xffffffc0
   1a6c0:	blx	r3
   1a6c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a6c8:	str	r3, [r4, #-4]
   1a6cc:	cmp	r0, #7
   1a6d0:	beq	1a70c <argp_parse@@Base+0x9ac>
   1a6d4:	cmp	r0, #0
   1a6d8:	bne	1a18c <argp_parse@@Base+0x42c>
   1a6dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a6e0:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a6e4:	cmp	r8, r5
   1a6e8:	sublt	r8, r5, r8
   1a6ec:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   1a6f0:	movge	r3, #1
   1a6f4:	addlt	r8, r3, r8
   1a6f8:	strlt	r8, [r4, #-24]	; 0xffffffe8
   1a6fc:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   1a700:	strge	r3, [fp, #-100]	; 0xffffff9c
   1a704:	movge	r2, r3
   1a708:	b	1a004 <argp_parse@@Base+0x2a4>
   1a70c:	ldr	lr, [fp, #-84]	; 0xffffffac
   1a710:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a714:	sub	lr, lr, #1
   1a718:	cmp	r3, #0
   1a71c:	str	lr, [fp, #-84]	; 0xffffffac
   1a720:	beq	1a784 <argp_parse@@Base+0xa24>
   1a724:	add	r0, r5, #24
   1a728:	ldr	r2, [r5, #12]
   1a72c:	ldm	r0, {r0, r1, ip}
   1a730:	str	r2, [fp, #-76]	; 0xffffffb4
   1a734:	sub	r2, fp, #96	; 0x60
   1a738:	str	ip, [fp, #-60]	; 0xffffffc4
   1a73c:	str	r0, [fp, #-68]	; 0xffffffbc
   1a740:	str	r1, [fp, #-64]	; 0xffffffc0
   1a744:	mov	r0, sl
   1a748:	mov	r1, r6
   1a74c:	blx	r3
   1a750:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a754:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a758:	cmp	r4, ip
   1a75c:	movcs	r1, #0
   1a760:	movcc	r1, #1
   1a764:	mov	r3, r4
   1a768:	str	r2, [r5, #32]
   1a76c:	cmp	r0, #7
   1a770:	movne	r1, #0
   1a774:	cmp	r1, #0
   1a778:	beq	1aae8 <argp_parse@@Base+0xd88>
   1a77c:	ldr	lr, [fp, #-84]	; 0xffffffac
   1a780:	b	1a670 <argp_parse@@Base+0x910>
   1a784:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a788:	cmp	r9, ip
   1a78c:	add	r4, r4, #36	; 0x24
   1a790:	bcc	1a674 <argp_parse@@Base+0x914>
   1a794:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a798:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a79c:	b	1a024 <argp_parse@@Base+0x2c4>
   1a7a0:	ldr	r3, [fp, #-152]	; 0xffffff68
   1a7a4:	ldr	r2, [r3, #12]
   1a7a8:	cmp	r7, r2
   1a7ac:	bne	1a7c4 <argp_parse@@Base+0xa64>
   1a7b0:	b	1a8f8 <argp_parse@@Base+0xb98>
   1a7b4:	add	r3, r3, #16
   1a7b8:	ldr	r2, [r3, #12]
   1a7bc:	cmp	r7, r2
   1a7c0:	beq	1a8f8 <argp_parse@@Base+0xb98>
   1a7c4:	ldr	r2, [r3]
   1a7c8:	cmp	r2, #0
   1a7cc:	bne	1a7b4 <argp_parse@@Base+0xa54>
   1a7d0:	ldr	r2, [pc, #912]	; 1ab68 <argp_parse@@Base+0xe08>
   1a7d4:	ldr	r3, [pc, #900]	; 1ab60 <argp_parse@@Base+0xe00>
   1a7d8:	ldr	r1, [pc, #908]	; 1ab6c <argp_parse@@Base+0xe0c>
   1a7dc:	sub	r0, fp, #96	; 0x60
   1a7e0:	bl	20e7c <argp_error@@Base>
   1a7e4:	b	1a630 <argp_parse@@Base+0x8d0>
   1a7e8:	sub	lr, fp, #148	; 0x94
   1a7ec:	stm	sp, {ip, lr}
   1a7f0:	bl	1ad5c <argp_parse@@Base+0xffc>
   1a7f4:	ldr	r5, [fp, #-148]	; 0xffffff6c
   1a7f8:	str	r5, [fp, #-84]	; 0xffffffac
   1a7fc:	mov	r7, r0
   1a800:	cmn	r7, #1
   1a804:	bne	1a4ec <argp_parse@@Base+0x78c>
   1a808:	cmp	r5, #1
   1a80c:	str	r6, [fp, #-100]	; 0xffffff9c
   1a810:	ble	1a830 <argp_parse@@Base+0xad0>
   1a814:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a818:	sub	r3, r5, #-1073741823	; 0xc0000001
   1a81c:	ldr	r1, [pc, #844]	; 1ab70 <argp_parse@@Base+0xe10>
   1a820:	ldr	r0, [r2, r3, lsl #2]
   1a824:	bl	113a0 <strcmp@plt>
   1a828:	cmp	r0, #0
   1a82c:	streq	r5, [fp, #-72]	; 0xffffffb8
   1a830:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a834:	cmp	r5, r0
   1a838:	bge	1a024 <argp_parse@@Base+0x2c4>
   1a83c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a840:	tst	r3, #4
   1a844:	beq	1a91c <argp_parse@@Base+0xbbc>
   1a848:	ldr	r3, [fp, #4]
   1a84c:	cmp	r3, #0
   1a850:	beq	1aa94 <argp_parse@@Base+0xd34>
   1a854:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a858:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a85c:	str	r5, [r3]
   1a860:	sub	r3, ip, #36	; 0x24
   1a864:	cmp	r6, r3
   1a868:	bhi	1a950 <argp_parse@@Base+0xbf0>
   1a86c:	ldr	r7, [pc, #768]	; 1ab74 <argp_parse@@Base+0xe14>
   1a870:	sub	r4, ip, #72	; 0x48
   1a874:	mov	r8, #0
   1a878:	ldr	r3, [r4, #36]	; 0x24
   1a87c:	sub	r2, fp, #96	; 0x60
   1a880:	cmp	r3, #0
   1a884:	mov	r1, r8
   1a888:	mov	r0, r7
   1a88c:	beq	1a8e8 <argp_parse@@Base+0xb88>
   1a890:	ldr	ip, [r4, #68]	; 0x44
   1a894:	ldr	lr, [r4, #48]	; 0x30
   1a898:	str	ip, [fp, #-60]	; 0xffffffc4
   1a89c:	ldr	ip, [r4, #60]	; 0x3c
   1a8a0:	str	ip, [fp, #-68]	; 0xffffffbc
   1a8a4:	ldr	ip, [r4, #64]	; 0x40
   1a8a8:	str	lr, [fp, #-76]	; 0xffffffb4
   1a8ac:	str	ip, [fp, #-64]	; 0xffffffc0
   1a8b0:	blx	r3
   1a8b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a8b8:	str	r3, [r4, #68]	; 0x44
   1a8bc:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a8c0:	cmp	r6, r4
   1a8c4:	bhi	1a930 <argp_parse@@Base+0xbd0>
   1a8c8:	cmp	r0, #7
   1a8cc:	cmpne	r0, #0
   1a8d0:	sub	r4, r4, #36	; 0x24
   1a8d4:	beq	1a878 <argp_parse@@Base+0xb18>
   1a8d8:	ldr	r4, [fp, #-108]	; 0xffffff94
   1a8dc:	mov	r5, r0
   1a8e0:	sub	r4, r4, #36	; 0x24
   1a8e4:	b	1a214 <argp_parse@@Base+0x4b4>
   1a8e8:	cmp	r6, r4
   1a8ec:	bhi	1a93c <argp_parse@@Base+0xbdc>
   1a8f0:	sub	r4, r4, #36	; 0x24
   1a8f4:	b	1a878 <argp_parse@@Base+0xb18>
   1a8f8:	ldr	r2, [r3]
   1a8fc:	ldr	r3, [pc, #612]	; 1ab68 <argp_parse@@Base+0xe08>
   1a900:	cmp	r2, #0
   1a904:	moveq	r2, r3
   1a908:	b	1a7d4 <argp_parse@@Base+0xa74>
   1a90c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1a910:	cmn	r3, #1
   1a914:	bne	1a630 <argp_parse@@Base+0x8d0>
   1a918:	b	1a504 <argp_parse@@Base+0x7a4>
   1a91c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a920:	ldr	r7, [r3, r5, lsl #2]
   1a924:	add	r5, r5, #1
   1a928:	str	r7, [fp, #-136]	; 0xffffff78
   1a92c:	b	1a654 <argp_parse@@Base+0x8f4>
   1a930:	cmp	r0, #7
   1a934:	mov	r5, r0
   1a938:	bne	1a9f8 <argp_parse@@Base+0xc98>
   1a93c:	ldr	r4, [fp, #-108]	; 0xffffff94
   1a940:	sub	r4, r4, #36	; 0x24
   1a944:	cmp	r6, r4
   1a948:	movls	r5, #0
   1a94c:	bls	1a21c <argp_parse@@Base+0x4bc>
   1a950:	mov	r5, #0
   1a954:	b	1a288 <argp_parse@@Base+0x528>
   1a958:	ldr	r3, [r8, #4]
   1a95c:	cmp	r3, #0
   1a960:	moveq	r6, #36	; 0x24
   1a964:	movne	r6, #72	; 0x48
   1a968:	movne	r3, #1
   1a96c:	strne	r3, [fp, #-220]	; 0xffffff24
   1a970:	cmp	r4, #0
   1a974:	beq	1a9d4 <argp_parse@@Base+0xc74>
   1a978:	ldr	r0, [r4]
   1a97c:	cmp	r0, #0
   1a980:	beq	1a9d4 <argp_parse@@Base+0xc74>
   1a984:	sub	r1, fp, #228	; 0xe4
   1a988:	bl	1968c <ftello64@plt+0x7fbc>
   1a98c:	ldr	r3, [fp, #-216]	; 0xffffff28
   1a990:	ldr	r0, [r4, #16]!
   1a994:	add	r3, r3, #1
   1a998:	cmp	r0, #0
   1a99c:	str	r3, [fp, #-216]	; 0xffffff28
   1a9a0:	bne	1a984 <argp_parse@@Base+0xc24>
   1a9a4:	ldr	r6, [fp, #-220]	; 0xffffff24
   1a9a8:	ldr	r2, [fp, #-224]	; 0xffffff20
   1a9ac:	add	r6, r6, #1
   1a9b0:	lsl	r4, r3, #2
   1a9b4:	add	r6, r6, r6, lsl #3
   1a9b8:	add	r3, r2, #1
   1a9bc:	lsl	r6, r6, #2
   1a9c0:	add	sl, r4, r6
   1a9c4:	add	r3, sl, r3, lsl #4
   1a9c8:	str	r3, [fp, #-232]	; 0xffffff18
   1a9cc:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1a9d0:	b	19e78 <argp_parse@@Base+0x118>
   1a9d4:	ldr	r4, [fp, #-216]	; 0xffffff28
   1a9d8:	ldr	r3, [fp, #-224]	; 0xffffff20
   1a9dc:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1a9e0:	lsl	r4, r4, #2
   1a9e4:	add	r3, r3, #1
   1a9e8:	add	sl, r4, r6
   1a9ec:	add	r3, sl, r3, lsl #4
   1a9f0:	str	r3, [fp, #-232]	; 0xffffff18
   1a9f4:	b	19e78 <argp_parse@@Base+0x118>
   1a9f8:	ldr	r4, [fp, #-108]	; 0xffffff94
   1a9fc:	sub	r4, r4, #36	; 0x24
   1aa00:	b	1a214 <argp_parse@@Base+0x4b4>
   1aa04:	ldr	r0, [r2]
   1aa08:	cmp	r0, #0
   1aa0c:	beq	19fe4 <argp_parse@@Base+0x284>
   1aa10:	bl	1ac30 <argp_parse@@Base+0xed0>
   1aa14:	str	r0, [fp, #-56]	; 0xffffffc8
   1aa18:	b	19ff0 <argp_parse@@Base+0x290>
   1aa1c:	ldr	r2, [pc, #340]	; 1ab78 <argp_parse@@Base+0xe18>
   1aa20:	ldr	r2, [r2]
   1aa24:	cmp	r2, #0
   1aa28:	addeq	ip, r3, #16
   1aa2c:	bne	1a3d4 <argp_parse@@Base+0x674>
   1aa30:	b	1a3e0 <argp_parse@@Base+0x680>
   1aa34:	ldr	r6, [fp, #-112]	; 0xffffff90
   1aa38:	sub	ip, ip, #36	; 0x24
   1aa3c:	cmp	r6, ip
   1aa40:	mov	r5, r0
   1aa44:	bls	1aa5c <argp_parse@@Base+0xcfc>
   1aa48:	ldr	r3, [fp, #4]
   1aa4c:	cmp	r3, #0
   1aa50:	bne	1a170 <argp_parse@@Base+0x410>
   1aa54:	b	1a17c <argp_parse@@Base+0x41c>
   1aa58:	mov	r5, r0
   1aa5c:	ldr	r3, [fp, #4]
   1aa60:	cmp	r3, #0
   1aa64:	bne	1a170 <argp_parse@@Base+0x410>
   1aa68:	cmp	r5, #7
   1aa6c:	bne	1a194 <argp_parse@@Base+0x434>
   1aa70:	b	1a630 <argp_parse@@Base+0x8d0>
   1aa74:	ldr	r6, [fp, #-112]	; 0xffffff90
   1aa78:	sub	r4, ip, #36	; 0x24
   1aa7c:	cmp	r4, r6
   1aa80:	mov	r5, r0
   1aa84:	bcs	1a0dc <argp_parse@@Base+0x37c>
   1aa88:	cmp	r5, #7
   1aa8c:	beq	1a160 <argp_parse@@Base+0x400>
   1aa90:	b	1aa48 <argp_parse@@Base+0xce8>
   1aa94:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1aa98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1aa9c:	tst	r3, #2
   1aaa0:	bne	1a634 <argp_parse@@Base+0x8d4>
   1aaa4:	cmp	r1, #0
   1aaa8:	beq	1a634 <argp_parse@@Base+0x8d4>
   1aaac:	mov	r0, r1
   1aab0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aab4:	ldr	r1, [pc, #192]	; 1ab7c <argp_parse@@Base+0xe1c>
   1aab8:	bl	1155c <fprintf@plt>
   1aabc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1aac0:	b	1a634 <argp_parse@@Base+0x8d4>
   1aac4:	mov	r5, r0
   1aac8:	b	1aa88 <argp_parse@@Base+0xd28>
   1aacc:	sub	r4, ip, #36	; 0x24
   1aad0:	cmp	r6, r4
   1aad4:	bls	1a0e8 <argp_parse@@Base+0x388>
   1aad8:	ldr	r3, [fp, #4]
   1aadc:	cmp	r3, #0
   1aae0:	bne	1a16c <argp_parse@@Base+0x40c>
   1aae4:	b	1a860 <argp_parse@@Base+0xb00>
   1aae8:	cmp	r0, #0
   1aaec:	bne	1ab18 <argp_parse@@Base+0xdb8>
   1aaf0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1aaf4:	mov	r5, r0
   1aaf8:	str	r0, [fp, #-84]	; 0xffffffac
   1aafc:	b	1a6e4 <argp_parse@@Base+0x984>
   1ab00:	cmp	r0, #7
   1ab04:	mov	r5, r0
   1ab08:	beq	19fbc <argp_parse@@Base+0x25c>
   1ab0c:	cmp	r0, #0
   1ab10:	bne	1a290 <argp_parse@@Base+0x530>
   1ab14:	b	19fbc <argp_parse@@Base+0x25c>
   1ab18:	cmp	r0, #7
   1ab1c:	mov	r5, r0
   1ab20:	beq	1a794 <argp_parse@@Base+0xa34>
   1ab24:	ldr	r6, [fp, #-112]	; 0xffffff90
   1ab28:	b	1a198 <argp_parse@@Base+0x438>
   1ab2c:	andeq	r7, r3, r4, asr #22
   1ab30:	andeq	r7, r3, r0, asr #22
   1ab34:	andeq	r7, r3, r8, asr #22
   1ab38:	andeq	r7, r3, ip, asr #22
   1ab3c:	tsteq	r0, r6
   1ab40:	tsteq	r0, r2
   1ab44:	tsteq	r0, r1
   1ab48:	tsteq	r0, r5
   1ab4c:	tsteq	r0, r7
   1ab50:	tsteq	r0, r3
   1ab54:	andeq	r7, r3, r4, lsr #24
   1ab58:	andeq	r5, r2, r4, lsl pc
   1ab5c:	andeq	r5, r2, r0, lsr pc
   1ab60:	andeq	r5, r2, ip, asr #30
   1ab64:	andeq	r6, r2, r0, rrx
   1ab68:	andeq	r6, r2, r8, asr r0
   1ab6c:	andeq	r6, r2, r8, rrx
   1ab70:	andeq	r6, r2, ip, asr r0
   1ab74:	tsteq	r0, r4
   1ab78:			; <UNDEFINED> instruction: 0x00037bb8
   1ab7c:	andeq	r6, r2, r4, ror r0
   1ab80:	cmp	r1, #0
   1ab84:	beq	1abc4 <argp_parse@@Base+0xe64>
   1ab88:	ldr	r2, [r1, #52]	; 0x34
   1ab8c:	ldr	r3, [r2, #48]	; 0x30
   1ab90:	ldr	r1, [r2, #52]	; 0x34
   1ab94:	cmp	r3, r1
   1ab98:	bcs	1abc4 <argp_parse@@Base+0xe64>
   1ab9c:	ldr	r2, [r3, #4]
   1aba0:	cmp	r0, r2
   1aba4:	bne	1abb8 <argp_parse@@Base+0xe58>
   1aba8:	b	1abcc <argp_parse@@Base+0xe6c>
   1abac:	ldr	r2, [r3, #4]
   1abb0:	cmp	r2, r0
   1abb4:	beq	1abcc <argp_parse@@Base+0xe6c>
   1abb8:	add	r3, r3, #36	; 0x24
   1abbc:	cmp	r3, r1
   1abc0:	bcc	1abac <argp_parse@@Base+0xe4c>
   1abc4:	mov	r0, #0
   1abc8:	bx	lr
   1abcc:	ldr	r0, [r3, #24]
   1abd0:	bx	lr
   1abd4:	ldr	ip, [pc, #32]	; 1abfc <argp_parse@@Base+0xe9c>
   1abd8:	push	{lr}		; (str lr, [sp, #-4]!)
   1abdc:	sub	sp, sp, #12
   1abe0:	ldm	ip, {r1, ip}
   1abe4:	ldr	r3, [pc, #20]	; 1ac00 <argp_parse@@Base+0xea0>
   1abe8:	ldr	r2, [pc, #20]	; 1ac04 <argp_parse@@Base+0xea4>
   1abec:	str	ip, [sp]
   1abf0:	bl	1b930 <_obstack_memory_used@@Base+0x72c>
   1abf4:	add	sp, sp, #12
   1abf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1abfc:			; <UNDEFINED> instruction: 0x00037bbc
   1ac00:	andeq	r6, r2, ip, asr #2
   1ac04:	andeq	r6, r2, ip, asr r1
   1ac08:	ldr	r3, [pc, #20]	; 1ac24 <argp_parse@@Base+0xec4>
   1ac0c:	ldr	r2, [pc, #20]	; 1ac28 <argp_parse@@Base+0xec8>
   1ac10:	ldr	ip, [pc, #20]	; 1ac2c <argp_parse@@Base+0xecc>
   1ac14:	str	r0, [r3]
   1ac18:	str	ip, [r2]
   1ac1c:	str	r1, [r3, #4]
   1ac20:	bx	lr
   1ac24:			; <UNDEFINED> instruction: 0x00037bbc
   1ac28:			; <UNDEFINED> instruction: 0x00037bb8
   1ac2c:	ldrdeq	sl, [r1], -r4
   1ac30:	ldrb	r3, [r0]
   1ac34:	cmp	r3, #47	; 0x2f
   1ac38:	bne	1ac48 <argp_parse@@Base+0xee8>
   1ac3c:	ldrb	r3, [r0, #1]!
   1ac40:	cmp	r3, #47	; 0x2f
   1ac44:	beq	1ac3c <argp_parse@@Base+0xedc>
   1ac48:	cmp	r3, #0
   1ac4c:	bxeq	lr
   1ac50:	mov	r2, #0
   1ac54:	push	{lr}		; (str lr, [sp, #-4]!)
   1ac58:	mov	ip, r2
   1ac5c:	mov	r1, r0
   1ac60:	mov	lr, #1
   1ac64:	cmp	r3, #47	; 0x2f
   1ac68:	moveq	r2, lr
   1ac6c:	beq	1ac7c <argp_parse@@Base+0xf1c>
   1ac70:	cmp	r2, #0
   1ac74:	movne	r0, r1
   1ac78:	movne	r2, ip
   1ac7c:	ldrb	r3, [r1, #1]!
   1ac80:	cmp	r3, #0
   1ac84:	bne	1ac64 <argp_parse@@Base+0xf04>
   1ac88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac8c:	push	{r4, lr}
   1ac90:	mov	r4, r0
   1ac94:	bl	11544 <strlen@plt>
   1ac98:	cmp	r0, #1
   1ac9c:	popls	{r4, pc}
   1aca0:	sub	r3, r0, #1
   1aca4:	add	r2, r4, r3
   1aca8:	ldrb	r1, [r4, r3]
   1acac:	cmp	r1, #47	; 0x2f
   1acb0:	popne	{r4, pc}
   1acb4:	cmp	r3, #1
   1acb8:	beq	1accc <argp_parse@@Base+0xf6c>
   1acbc:	ldrb	r1, [r2, #-1]!
   1acc0:	sub	r0, r3, #1
   1acc4:	cmp	r1, #47	; 0x2f
   1acc8:	beq	1acd4 <argp_parse@@Base+0xf74>
   1accc:	mov	r0, r3
   1acd0:	pop	{r4, pc}
   1acd4:	mov	r3, r0
   1acd8:	b	1acb4 <argp_parse@@Base+0xf54>
   1acdc:	push	{r4, r5, lr}
   1ace0:	sub	sp, sp, #12
   1ace4:	mov	r5, r0
   1ace8:	bl	11568 <__errno_location@plt>
   1acec:	mov	r2, #0
   1acf0:	mov	r4, r0
   1acf4:	ldr	r3, [r0]
   1acf8:	str	r2, [r4]
   1acfc:	mov	r0, r5
   1ad00:	str	r3, [sp]
   1ad04:	str	r3, [sp, #4]
   1ad08:	bl	113dc <free@plt>
   1ad0c:	ldr	r3, [r4]
   1ad10:	add	r2, sp, #8
   1ad14:	cmp	r3, #0
   1ad18:	moveq	r3, #4
   1ad1c:	movne	r3, #0
   1ad20:	add	r3, r2, r3
   1ad24:	ldr	r3, [r3, #-8]
   1ad28:	str	r3, [r4]
   1ad2c:	add	sp, sp, #12
   1ad30:	pop	{r4, r5, pc}
   1ad34:	push	{lr}		; (str lr, [sp, #-4]!)
   1ad38:	sub	sp, sp, #20
   1ad3c:	mov	ip, #0
   1ad40:	ldr	lr, [sp, #24]
   1ad44:	str	ip, [sp, #8]
   1ad48:	str	lr, [sp]
   1ad4c:	str	ip, [sp, #4]
   1ad50:	bl	21d6c <argp_error@@Base+0xef0>
   1ad54:	add	sp, sp, #20
   1ad58:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad5c:	push	{r4, lr}
   1ad60:	sub	sp, sp, #16
   1ad64:	mov	ip, #0
   1ad68:	ldr	r4, [sp, #24]
   1ad6c:	ldr	lr, [sp, #28]
   1ad70:	str	r4, [sp]
   1ad74:	str	lr, [sp, #8]
   1ad78:	str	ip, [sp, #12]
   1ad7c:	str	ip, [sp, #4]
   1ad80:	bl	217f8 <argp_error@@Base+0x97c>
   1ad84:	add	sp, sp, #16
   1ad88:	pop	{r4, pc}
   1ad8c:	push	{r4, lr}
   1ad90:	sub	sp, sp, #16
   1ad94:	mov	lr, #0
   1ad98:	ldr	r4, [sp, #24]
   1ad9c:	mov	ip, #1
   1ada0:	stm	sp, {r4, ip, lr}
   1ada4:	bl	21d6c <argp_error@@Base+0xef0>
   1ada8:	add	sp, sp, #16
   1adac:	pop	{r4, pc}
   1adb0:	push	{r4, r5, lr}
   1adb4:	sub	sp, sp, #20
   1adb8:	mov	lr, #0
   1adbc:	ldr	r5, [sp, #32]
   1adc0:	ldr	r4, [sp, #36]	; 0x24
   1adc4:	mov	ip, #1
   1adc8:	str	r5, [sp]
   1adcc:	str	r4, [sp, #8]
   1add0:	str	lr, [sp, #12]
   1add4:	str	ip, [sp, #4]
   1add8:	bl	217f8 <argp_error@@Base+0x97c>
   1addc:	add	sp, sp, #20
   1ade0:	pop	{r4, r5, pc}
   1ade4:	push	{r1, r2, r3}
   1ade8:	push	{lr}		; (str lr, [sp, #-4]!)
   1adec:	sub	sp, sp, #8
   1adf0:	add	r3, sp, #16
   1adf4:	ldr	r2, [sp, #16]
   1adf8:	ldr	r1, [sp, #12]
   1adfc:	str	r3, [sp, #4]
   1ae00:	bl	11484 <ioctl@plt>
   1ae04:	add	sp, sp, #8
   1ae08:	pop	{lr}		; (ldr lr, [sp], #4)
   1ae0c:	add	sp, sp, #12
   1ae10:	bx	lr
   1ae14:	ldr	r3, [pc, #28]	; 1ae38 <argp_parse@@Base+0x10d8>
   1ae18:	push	{r4, lr}
   1ae1c:	ldr	r0, [r3]
   1ae20:	ldr	r2, [pc, #20]	; 1ae3c <argp_parse@@Base+0x10dc>
   1ae24:	ldr	r1, [pc, #20]	; 1ae40 <argp_parse@@Base+0x10e0>
   1ae28:	bl	1155c <fprintf@plt>
   1ae2c:	ldr	r3, [pc, #16]	; 1ae44 <argp_parse@@Base+0x10e4>
   1ae30:	ldr	r0, [r3]
   1ae34:	bl	1152c <exit@plt>
   1ae38:	andeq	r7, r3, r8, asr #22
   1ae3c:	andeq	r6, r2, ip, ror #2
   1ae40:	ldrdeq	r6, [r2], -r0
   1ae44:	andeq	r7, r3, r8, lsr #22

0001ae48 <_obstack_begin@@Base>:
   1ae48:	push	{r4, r5, r6, lr}
   1ae4c:	mov	r4, r0
   1ae50:	ldrb	r0, [r0, #40]	; 0x28
   1ae54:	subs	r5, r2, #0
   1ae58:	subne	r6, r5, #1
   1ae5c:	bic	r0, r0, #1
   1ae60:	strb	r0, [r4, #40]	; 0x28
   1ae64:	ldrb	r2, [r4, #40]	; 0x28
   1ae68:	ldr	r0, [pc, #152]	; 1af08 <_obstack_begin@@Base+0xc0>
   1ae6c:	moveq	r6, #7
   1ae70:	ldr	ip, [sp, #16]
   1ae74:	moveq	r5, #8
   1ae78:	cmp	r1, #0
   1ae7c:	moveq	r1, r0
   1ae80:	tst	r2, #1
   1ae84:	str	r3, [r4, #28]
   1ae88:	str	ip, [r4, #32]
   1ae8c:	str	r6, [r4, #24]
   1ae90:	str	r1, [r4]
   1ae94:	bne	1aef0 <_obstack_begin@@Base+0xa8>
   1ae98:	mov	r0, r1
   1ae9c:	blx	r3
   1aea0:	cmp	r0, #0
   1aea4:	str	r0, [r4, #4]
   1aea8:	beq	1aefc <_obstack_begin@@Base+0xb4>
   1aeac:	ldr	r3, [r4]
   1aeb0:	add	r2, r0, #8
   1aeb4:	rsb	r5, r5, #0
   1aeb8:	add	r2, r2, r6
   1aebc:	add	r3, r0, r3
   1aec0:	and	r2, r2, r5
   1aec4:	mov	r1, #0
   1aec8:	str	r2, [r4, #8]
   1aecc:	str	r2, [r4, #12]
   1aed0:	str	r3, [r0]
   1aed4:	str	r3, [r4, #16]
   1aed8:	str	r1, [r0, #4]
   1aedc:	ldrb	r3, [r4, #40]	; 0x28
   1aee0:	mov	r0, #1
   1aee4:	and	r3, r3, #249	; 0xf9
   1aee8:	strb	r3, [r4, #40]	; 0x28
   1aeec:	pop	{r4, r5, r6, pc}
   1aef0:	ldr	r0, [r4, #36]	; 0x24
   1aef4:	blx	r3
   1aef8:	b	1aea0 <_obstack_begin@@Base+0x58>
   1aefc:	ldr	r3, [pc, #8]	; 1af0c <_obstack_begin@@Base+0xc4>
   1af00:	ldr	r3, [r3]
   1af04:	blx	r3
   1af08:	andeq	r0, r0, r8, ror #31
   1af0c:	strdeq	r7, [r3], -ip

0001af10 <_obstack_begin_1@@Base>:
   1af10:	ldrb	ip, [r0, #40]	; 0x28
   1af14:	push	{r4, r5, r6, lr}
   1af18:	mov	r4, r0
   1af1c:	orr	ip, ip, #1
   1af20:	subs	r5, r2, #0
   1af24:	strb	ip, [r4, #40]	; 0x28
   1af28:	ldrb	r2, [r4, #40]	; 0x28
   1af2c:	ldr	ip, [pc, #160]	; 1afd4 <_obstack_begin_1@@Base+0xc4>
   1af30:	subne	r6, r5, #1
   1af34:	moveq	r6, #7
   1af38:	ldr	lr, [sp, #16]
   1af3c:	ldr	r0, [sp, #20]
   1af40:	moveq	r5, #8
   1af44:	cmp	r1, #0
   1af48:	moveq	r1, ip
   1af4c:	tst	r2, #1
   1af50:	str	r3, [r4, #28]
   1af54:	str	lr, [r4, #32]
   1af58:	str	r0, [r4, #36]	; 0x24
   1af5c:	str	r6, [r4, #24]
   1af60:	str	r1, [r4]
   1af64:	bne	1afc0 <_obstack_begin_1@@Base+0xb0>
   1af68:	mov	r0, r1
   1af6c:	blx	r3
   1af70:	cmp	r0, #0
   1af74:	str	r0, [r4, #4]
   1af78:	beq	1afc8 <_obstack_begin_1@@Base+0xb8>
   1af7c:	ldr	r3, [r4]
   1af80:	add	r2, r0, #8
   1af84:	rsb	r5, r5, #0
   1af88:	add	r2, r2, r6
   1af8c:	add	r3, r0, r3
   1af90:	and	r2, r2, r5
   1af94:	mov	r1, #0
   1af98:	str	r2, [r4, #8]
   1af9c:	str	r2, [r4, #12]
   1afa0:	str	r3, [r0]
   1afa4:	str	r3, [r4, #16]
   1afa8:	str	r1, [r0, #4]
   1afac:	ldrb	r3, [r4, #40]	; 0x28
   1afb0:	mov	r0, #1
   1afb4:	and	r3, r3, #249	; 0xf9
   1afb8:	strb	r3, [r4, #40]	; 0x28
   1afbc:	pop	{r4, r5, r6, pc}
   1afc0:	blx	r3
   1afc4:	b	1af70 <_obstack_begin_1@@Base+0x60>
   1afc8:	ldr	r3, [pc, #8]	; 1afd8 <_obstack_begin_1@@Base+0xc8>
   1afcc:	ldr	r3, [r3]
   1afd0:	blx	r3
   1afd4:	andeq	r0, r0, r8, ror #31
   1afd8:	strdeq	r7, [r3], -ip

0001afdc <_obstack_newchunk@@Base>:
   1afdc:	ldr	r2, [r0, #8]
   1afe0:	push	{r4, r5, r6, r7, r8, lr}
   1afe4:	ldr	r6, [r0, #12]
   1afe8:	ldr	r3, [r0, #24]
   1afec:	sub	r6, r6, r2
   1aff0:	add	r1, r6, r1
   1aff4:	adds	r3, r1, r3
   1aff8:	movcc	r2, #1
   1affc:	movcs	r2, #0
   1b000:	cmp	r6, r1
   1b004:	movhi	r1, #0
   1b008:	andls	r1, r2, #1
   1b00c:	cmp	r1, #0
   1b010:	bne	1b020 <_obstack_newchunk@@Base+0x44>
   1b014:	ldr	r3, [pc, #272]	; 1b12c <_obstack_newchunk@@Base+0x150>
   1b018:	ldr	r3, [r3]
   1b01c:	blx	r3
   1b020:	ldr	r5, [r0]
   1b024:	add	r1, r3, r6, lsr #3
   1b028:	cmp	r3, r5
   1b02c:	ldrb	r2, [r0, #40]	; 0x28
   1b030:	movcc	r3, r5
   1b034:	add	r1, r1, #100	; 0x64
   1b038:	cmp	r3, r1
   1b03c:	movcs	r5, r3
   1b040:	movcc	r5, r1
   1b044:	tst	r2, #1
   1b048:	mov	r4, r0
   1b04c:	ldr	r7, [r0, #4]
   1b050:	ldr	r3, [r0, #28]
   1b054:	bne	1b0e4 <_obstack_newchunk@@Base+0x108>
   1b058:	mov	r0, r5
   1b05c:	blx	r3
   1b060:	mov	r8, r0
   1b064:	cmp	r8, #0
   1b068:	beq	1b014 <_obstack_newchunk@@Base+0x38>
   1b06c:	ldr	r2, [r4, #24]
   1b070:	mov	r3, r8
   1b074:	add	r1, r8, r5
   1b078:	str	r8, [r4, #4]
   1b07c:	str	r7, [r8, #4]
   1b080:	str	r1, [r4, #16]
   1b084:	str	r1, [r3], #8
   1b088:	add	r3, r3, r2
   1b08c:	bic	r5, r3, r2
   1b090:	mov	r0, r5
   1b094:	mov	r2, r6
   1b098:	ldr	r1, [r4, #8]
   1b09c:	bl	1140c <memcpy@plt>
   1b0a0:	ldrb	r2, [r4, #40]	; 0x28
   1b0a4:	tst	r2, #2
   1b0a8:	bne	1b0c8 <_obstack_newchunk@@Base+0xec>
   1b0ac:	ldr	r1, [r4, #24]
   1b0b0:	add	r3, r7, #8
   1b0b4:	add	r3, r3, r1
   1b0b8:	ldr	r0, [r4, #8]
   1b0bc:	bic	r3, r3, r1
   1b0c0:	cmp	r0, r3
   1b0c4:	beq	1b0f8 <_obstack_newchunk@@Base+0x11c>
   1b0c8:	ldrb	r3, [r4, #40]	; 0x28
   1b0cc:	add	r2, r5, r6
   1b0d0:	str	r2, [r4, #12]
   1b0d4:	bic	r3, r3, #2
   1b0d8:	str	r5, [r4, #8]
   1b0dc:	strb	r3, [r4, #40]	; 0x28
   1b0e0:	pop	{r4, r5, r6, r7, r8, pc}
   1b0e4:	mov	r1, r5
   1b0e8:	ldr	r0, [r0, #36]	; 0x24
   1b0ec:	blx	r3
   1b0f0:	mov	r8, r0
   1b0f4:	b	1b064 <_obstack_newchunk@@Base+0x88>
   1b0f8:	ldr	r3, [r7, #4]
   1b0fc:	tst	r2, #1
   1b100:	str	r3, [r8, #4]
   1b104:	bne	1b118 <_obstack_newchunk@@Base+0x13c>
   1b108:	mov	r0, r7
   1b10c:	ldr	r3, [r4, #32]
   1b110:	blx	r3
   1b114:	b	1b0c8 <_obstack_newchunk@@Base+0xec>
   1b118:	mov	r1, r7
   1b11c:	ldr	r3, [r4, #32]
   1b120:	ldr	r0, [r4, #36]	; 0x24
   1b124:	blx	r3
   1b128:	b	1b0c8 <_obstack_newchunk@@Base+0xec>
   1b12c:	strdeq	r7, [r3], -ip

0001b130 <_obstack_allocated_p@@Base>:
   1b130:	ldr	r0, [r0, #4]
   1b134:	cmp	r0, #0
   1b138:	bne	1b14c <_obstack_allocated_p@@Base+0x1c>
   1b13c:	b	1b168 <_obstack_allocated_p@@Base+0x38>
   1b140:	ldr	r0, [r0, #4]
   1b144:	cmp	r0, #0
   1b148:	bxeq	lr
   1b14c:	cmp	r1, r0
   1b150:	bls	1b140 <_obstack_allocated_p@@Base+0x10>
   1b154:	ldr	r3, [r0]
   1b158:	cmp	r1, r3
   1b15c:	bhi	1b140 <_obstack_allocated_p@@Base+0x10>
   1b160:	mov	r0, #1
   1b164:	bx	lr
   1b168:	bx	lr

0001b16c <_obstack_free@@Base>:
   1b16c:	push	{r4, r5, r6, lr}
   1b170:	mov	r4, r0
   1b174:	ldr	r0, [r0, #4]
   1b178:	mov	r6, r1
   1b17c:	cmp	r0, #0
   1b180:	bne	1b1a8 <_obstack_free@@Base+0x3c>
   1b184:	b	1b1f4 <_obstack_free@@Base+0x88>
   1b188:	ldr	r3, [r4, #32]
   1b18c:	blx	r3
   1b190:	ldrb	r3, [r4, #40]	; 0x28
   1b194:	cmp	r5, #0
   1b198:	orr	r3, r3, #2
   1b19c:	strb	r3, [r4, #40]	; 0x28
   1b1a0:	beq	1b1f4 <_obstack_free@@Base+0x88>
   1b1a4:	mov	r0, r5
   1b1a8:	cmp	r6, r0
   1b1ac:	bls	1b1bc <_obstack_free@@Base+0x50>
   1b1b0:	ldr	r3, [r0]
   1b1b4:	cmp	r6, r3
   1b1b8:	bls	1b1e0 <_obstack_free@@Base+0x74>
   1b1bc:	ldrb	r3, [r4, #40]	; 0x28
   1b1c0:	ldr	r5, [r0, #4]
   1b1c4:	tst	r3, #1
   1b1c8:	beq	1b188 <_obstack_free@@Base+0x1c>
   1b1cc:	mov	r1, r0
   1b1d0:	ldr	r3, [r4, #32]
   1b1d4:	ldr	r0, [r4, #36]	; 0x24
   1b1d8:	blx	r3
   1b1dc:	b	1b190 <_obstack_free@@Base+0x24>
   1b1e0:	str	r6, [r4, #12]
   1b1e4:	str	r6, [r4, #8]
   1b1e8:	str	r3, [r4, #16]
   1b1ec:	str	r0, [r4, #4]
   1b1f0:	pop	{r4, r5, r6, pc}
   1b1f4:	cmp	r6, #0
   1b1f8:	bne	1b200 <_obstack_free@@Base+0x94>
   1b1fc:	pop	{r4, r5, r6, pc}
   1b200:	bl	116ac <abort@plt>

0001b204 <_obstack_memory_used@@Base>:
   1b204:	ldr	r3, [r0, #4]
   1b208:	cmp	r3, #0
   1b20c:	beq	1b230 <_obstack_memory_used@@Base+0x2c>
   1b210:	mov	r0, #0
   1b214:	ldr	r2, [r3]
   1b218:	sub	r2, r2, r3
   1b21c:	ldr	r3, [r3, #4]
   1b220:	add	r0, r0, r2
   1b224:	cmp	r3, #0
   1b228:	bne	1b214 <_obstack_memory_used@@Base+0x10>
   1b22c:	bx	lr
   1b230:	mov	r0, r3
   1b234:	bx	lr
   1b238:	push	{r4, r5, r6, lr}
   1b23c:	subs	r4, r0, #0
   1b240:	beq	1b2b4 <_obstack_memory_used@@Base+0xb0>
   1b244:	mov	r1, #47	; 0x2f
   1b248:	bl	115f8 <strrchr@plt>
   1b24c:	subs	r5, r0, #0
   1b250:	beq	1b2a0 <_obstack_memory_used@@Base+0x9c>
   1b254:	add	r6, r5, #1
   1b258:	sub	r3, r6, r4
   1b25c:	cmp	r3, #6
   1b260:	ble	1b2a0 <_obstack_memory_used@@Base+0x9c>
   1b264:	mov	r2, #7
   1b268:	ldr	r1, [pc, #96]	; 1b2d0 <_obstack_memory_used@@Base+0xcc>
   1b26c:	sub	r0, r5, #6
   1b270:	bl	116a0 <strncmp@plt>
   1b274:	cmp	r0, #0
   1b278:	bne	1b2a0 <_obstack_memory_used@@Base+0x9c>
   1b27c:	mov	r2, #3
   1b280:	ldr	r1, [pc, #76]	; 1b2d4 <_obstack_memory_used@@Base+0xd0>
   1b284:	mov	r0, r6
   1b288:	bl	116a0 <strncmp@plt>
   1b28c:	cmp	r0, #0
   1b290:	movne	r4, r6
   1b294:	ldreq	r3, [pc, #60]	; 1b2d8 <_obstack_memory_used@@Base+0xd4>
   1b298:	addeq	r4, r5, #4
   1b29c:	streq	r4, [r3]
   1b2a0:	ldr	r2, [pc, #52]	; 1b2dc <_obstack_memory_used@@Base+0xd8>
   1b2a4:	ldr	r3, [pc, #52]	; 1b2e0 <_obstack_memory_used@@Base+0xdc>
   1b2a8:	str	r4, [r2]
   1b2ac:	str	r4, [r3]
   1b2b0:	pop	{r4, r5, r6, pc}
   1b2b4:	ldr	r3, [pc, #40]	; 1b2e4 <_obstack_memory_used@@Base+0xe0>
   1b2b8:	mov	r2, #55	; 0x37
   1b2bc:	mov	r1, #1
   1b2c0:	ldr	r3, [r3]
   1b2c4:	ldr	r0, [pc, #28]	; 1b2e8 <_obstack_memory_used@@Base+0xe4>
   1b2c8:	bl	11478 <fwrite@plt>
   1b2cc:	bl	116ac <abort@plt>
   1b2d0:			; <UNDEFINED> instruction: 0x000261b8
   1b2d4:	andeq	r6, r2, r0, asr #3
   1b2d8:	andeq	r7, r3, r0, asr #22
   1b2dc:	andeq	r7, r3, r4, asr #23
   1b2e0:	andeq	r7, r3, r4, asr #22
   1b2e4:	andeq	r7, r3, r8, asr #22
   1b2e8:	andeq	r6, r2, r0, lsl #3
   1b2ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b2f0:	sub	sp, sp, #116	; 0x74
   1b2f4:	mov	r5, r1
   1b2f8:	str	r2, [sp, #4]
   1b2fc:	mov	r9, r0
   1b300:	bl	115b0 <fileno@plt>
   1b304:	add	r2, sp, #8
   1b308:	mov	r1, r0
   1b30c:	mov	r0, #3
   1b310:	bl	1146c <__fxstat64@plt>
   1b314:	cmp	r0, #0
   1b318:	blt	1b32c <_obstack_memory_used@@Base+0x128>
   1b31c:	ldr	r3, [sp, #24]
   1b320:	and	r3, r3, #61440	; 0xf000
   1b324:	cmp	r3, #32768	; 0x8000
   1b328:	beq	1b550 <_obstack_memory_used@@Base+0x34c>
   1b32c:	mov	r4, #8192	; 0x2000
   1b330:	mov	r0, r4
   1b334:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1b338:	subs	r6, r0, #0
   1b33c:	beq	1b430 <_obstack_memory_used@@Base+0x22c>
   1b340:	ands	r3, r5, #2
   1b344:	str	r3, [sp]
   1b348:	bne	1b43c <_obstack_memory_used@@Base+0x238>
   1b34c:	mov	r5, r3
   1b350:	mov	sl, #1
   1b354:	mvn	r8, #-2147483648	; 0x80000000
   1b358:	b	1b388 <_obstack_memory_used@@Base+0x184>
   1b35c:	cmn	r4, #-2147483647	; 0x80000001
   1b360:	beq	1b4e8 <_obstack_memory_used@@Base+0x2e4>
   1b364:	cmp	r4, r2
   1b368:	addcc	r4, r4, r3
   1b36c:	mvncs	r4, #-2147483648	; 0x80000000
   1b370:	mov	r1, r4
   1b374:	mov	r0, r6
   1b378:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   1b37c:	cmp	r0, #0
   1b380:	beq	1b538 <_obstack_memory_used@@Base+0x334>
   1b384:	mov	r6, r0
   1b388:	sub	r7, r4, r5
   1b38c:	mov	r2, r7
   1b390:	mov	r3, r9
   1b394:	add	r0, r6, r5
   1b398:	mov	r1, sl
   1b39c:	bl	1149c <fread@plt>
   1b3a0:	lsr	r3, r4, #1
   1b3a4:	sub	r2, r8, r3
   1b3a8:	cmp	r7, r0
   1b3ac:	add	r5, r5, r0
   1b3b0:	beq	1b35c <_obstack_memory_used@@Base+0x158>
   1b3b4:	bl	11568 <__errno_location@plt>
   1b3b8:	mov	r8, r0
   1b3bc:	mov	r0, r9
   1b3c0:	ldr	r9, [r8]
   1b3c4:	bl	113f4 <ferror@plt>
   1b3c8:	cmp	r0, #0
   1b3cc:	bne	1b500 <_obstack_memory_used@@Base+0x2fc>
   1b3d0:	sub	r3, r4, #1
   1b3d4:	cmp	r3, r5
   1b3d8:	bls	1b548 <_obstack_memory_used@@Base+0x344>
   1b3dc:	ldr	r3, [sp]
   1b3e0:	cmp	r3, #0
   1b3e4:	beq	1b5a8 <_obstack_memory_used@@Base+0x3a4>
   1b3e8:	add	r0, r5, #1
   1b3ec:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1b3f0:	subs	r8, r0, #0
   1b3f4:	beq	1b5d0 <_obstack_memory_used@@Base+0x3cc>
   1b3f8:	mov	r2, r5
   1b3fc:	mov	r1, r6
   1b400:	bl	1140c <memcpy@plt>
   1b404:	mov	r0, r6
   1b408:	mov	r1, r4
   1b40c:	bl	11664 <explicit_bzero@plt>
   1b410:	mov	r0, r6
   1b414:	bl	1acdc <argp_parse@@Base+0xf7c>
   1b418:	add	r7, r8, r5
   1b41c:	mov	r6, r8
   1b420:	mov	r3, #0
   1b424:	strb	r3, [r7]
   1b428:	ldr	r3, [sp, #4]
   1b42c:	str	r5, [r3]
   1b430:	mov	r0, r6
   1b434:	add	sp, sp, #116	; 0x74
   1b438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b43c:	mov	r5, #0
   1b440:	mov	fp, #1
   1b444:	mvn	sl, #-2147483648	; 0x80000000
   1b448:	b	1b494 <_obstack_memory_used@@Base+0x290>
   1b44c:	cmn	r4, #-2147483647	; 0x80000001
   1b450:	beq	1b4e8 <_obstack_memory_used@@Base+0x2e4>
   1b454:	cmp	r4, r2
   1b458:	addcc	r7, r4, r3
   1b45c:	mov	r0, r7
   1b460:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1b464:	mov	r2, r4
   1b468:	mov	r1, r6
   1b46c:	subs	r8, r0, #0
   1b470:	beq	1b51c <_obstack_memory_used@@Base+0x318>
   1b474:	bl	1140c <memcpy@plt>
   1b478:	mov	r1, r4
   1b47c:	mov	r0, r6
   1b480:	bl	11664 <explicit_bzero@plt>
   1b484:	mov	r0, r6
   1b488:	bl	1acdc <argp_parse@@Base+0xf7c>
   1b48c:	mov	r4, r7
   1b490:	mov	r6, r8
   1b494:	sub	r8, r4, r5
   1b498:	mov	r2, r8
   1b49c:	mov	r3, r9
   1b4a0:	add	r0, r6, r5
   1b4a4:	mov	r1, fp
   1b4a8:	bl	1149c <fread@plt>
   1b4ac:	lsr	r3, r4, #1
   1b4b0:	sub	r2, sl, r3
   1b4b4:	mov	r7, sl
   1b4b8:	cmp	r8, r0
   1b4bc:	add	r5, r5, r0
   1b4c0:	beq	1b44c <_obstack_memory_used@@Base+0x248>
   1b4c4:	bl	11568 <__errno_location@plt>
   1b4c8:	mov	r8, r0
   1b4cc:	mov	r0, r9
   1b4d0:	ldr	r9, [r8]
   1b4d4:	bl	113f4 <ferror@plt>
   1b4d8:	cmp	r0, #0
   1b4dc:	beq	1b3d0 <_obstack_memory_used@@Base+0x1cc>
   1b4e0:	mov	r7, r4
   1b4e4:	b	1b528 <_obstack_memory_used@@Base+0x324>
   1b4e8:	bl	11568 <__errno_location@plt>
   1b4ec:	ldr	r3, [sp]
   1b4f0:	mov	r9, #12
   1b4f4:	cmp	r3, #0
   1b4f8:	mov	r8, r0
   1b4fc:	bne	1b5c8 <_obstack_memory_used@@Base+0x3c4>
   1b500:	mov	r0, r6
   1b504:	bl	1acdc <argp_parse@@Base+0xf7c>
   1b508:	mov	r6, #0
   1b50c:	mov	r0, r6
   1b510:	str	r9, [r8]
   1b514:	add	sp, sp, #116	; 0x74
   1b518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b51c:	bl	11568 <__errno_location@plt>
   1b520:	ldr	r9, [r0]
   1b524:	mov	r8, r0
   1b528:	mov	r1, r7
   1b52c:	mov	r0, r6
   1b530:	bl	11664 <explicit_bzero@plt>
   1b534:	b	1b500 <_obstack_memory_used@@Base+0x2fc>
   1b538:	bl	11568 <__errno_location@plt>
   1b53c:	mov	r8, r0
   1b540:	ldr	r9, [r0]
   1b544:	b	1b500 <_obstack_memory_used@@Base+0x2fc>
   1b548:	add	r7, r6, r5
   1b54c:	b	1b420 <_obstack_memory_used@@Base+0x21c>
   1b550:	mov	r0, r9
   1b554:	bl	116d0 <ftello64@plt>
   1b558:	cmp	r0, #0
   1b55c:	sbcs	r3, r1, #0
   1b560:	blt	1b32c <_obstack_memory_used@@Base+0x128>
   1b564:	ldrd	r2, [sp, #56]	; 0x38
   1b568:	cmp	r0, r2
   1b56c:	sbcs	ip, r1, r3
   1b570:	bge	1b32c <_obstack_memory_used@@Base+0x128>
   1b574:	subs	r2, r2, r0
   1b578:	mvn	r0, #-2147483647	; 0x80000001
   1b57c:	sbc	r3, r3, r1
   1b580:	mov	r1, #0
   1b584:	cmp	r0, r2
   1b588:	sbcs	r1, r1, r3
   1b58c:	addge	r4, r2, #1
   1b590:	bge	1b330 <_obstack_memory_used@@Base+0x12c>
   1b594:	bl	11568 <__errno_location@plt>
   1b598:	mov	r3, #12
   1b59c:	mov	r6, #0
   1b5a0:	str	r3, [r0]
   1b5a4:	b	1b430 <_obstack_memory_used@@Base+0x22c>
   1b5a8:	add	r1, r5, #1
   1b5ac:	mov	r0, r6
   1b5b0:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   1b5b4:	cmp	r0, #0
   1b5b8:	beq	1b548 <_obstack_memory_used@@Base+0x344>
   1b5bc:	add	r7, r0, r5
   1b5c0:	mov	r6, r0
   1b5c4:	b	1b420 <_obstack_memory_used@@Base+0x21c>
   1b5c8:	mvn	r7, #-2147483648	; 0x80000000
   1b5cc:	b	1b528 <_obstack_memory_used@@Base+0x324>
   1b5d0:	add	r7, r6, r5
   1b5d4:	sub	r1, r4, r5
   1b5d8:	mov	r0, r7
   1b5dc:	bl	11664 <explicit_bzero@plt>
   1b5e0:	b	1b420 <_obstack_memory_used@@Base+0x21c>
   1b5e4:	push	{r4, r5, r6, r7, r8, lr}
   1b5e8:	mov	r4, r1
   1b5ec:	ldr	r3, [pc, #140]	; 1b680 <_obstack_memory_used@@Base+0x47c>
   1b5f0:	tst	r4, #1
   1b5f4:	ldr	r1, [pc, #136]	; 1b684 <_obstack_memory_used@@Base+0x480>
   1b5f8:	moveq	r1, r3
   1b5fc:	mov	r6, r2
   1b600:	bl	1164c <fopen64@plt>
   1b604:	subs	r5, r0, #0
   1b608:	beq	1b650 <_obstack_memory_used@@Base+0x44c>
   1b60c:	ands	r7, r4, #2
   1b610:	bne	1b65c <_obstack_memory_used@@Base+0x458>
   1b614:	mov	r1, r4
   1b618:	mov	r2, r6
   1b61c:	mov	r0, r5
   1b620:	bl	1b2ec <_obstack_memory_used@@Base+0xe8>
   1b624:	mov	r4, r0
   1b628:	mov	r0, r5
   1b62c:	bl	115c8 <fclose@plt>
   1b630:	cmp	r0, #0
   1b634:	beq	1b654 <_obstack_memory_used@@Base+0x450>
   1b638:	cmp	r4, #0
   1b63c:	beq	1b650 <_obstack_memory_used@@Base+0x44c>
   1b640:	cmp	r7, #0
   1b644:	bne	1b670 <_obstack_memory_used@@Base+0x46c>
   1b648:	mov	r0, r4
   1b64c:	bl	1acdc <argp_parse@@Base+0xf7c>
   1b650:	mov	r4, #0
   1b654:	mov	r0, r4
   1b658:	pop	{r4, r5, r6, r7, r8, pc}
   1b65c:	mov	r3, #0
   1b660:	mov	r1, r3
   1b664:	mov	r2, #2
   1b668:	bl	1158c <setvbuf@plt>
   1b66c:	b	1b614 <_obstack_memory_used@@Base+0x410>
   1b670:	ldr	r1, [r6]
   1b674:	mov	r0, r4
   1b678:	bl	11664 <explicit_bzero@plt>
   1b67c:	b	1b648 <_obstack_memory_used@@Base+0x444>
   1b680:	andeq	r5, r2, r8, asr #26
   1b684:	andeq	r6, r2, r4, asr #3
   1b688:	push	{r4, r5, r6, r7, lr}
   1b68c:	sub	sp, sp, #36	; 0x24
   1b690:	cmp	r1, #0
   1b694:	mov	r4, r0
   1b698:	ldr	r5, [sp, #56]	; 0x38
   1b69c:	ldr	r6, [sp, #60]	; 0x3c
   1b6a0:	beq	1b8e0 <_obstack_memory_used@@Base+0x6dc>
   1b6a4:	str	r3, [sp]
   1b6a8:	mov	r3, r2
   1b6ac:	mov	r2, r1
   1b6b0:	ldr	r1, [pc, #564]	; 1b8ec <_obstack_memory_used@@Base+0x6e8>
   1b6b4:	bl	1155c <fprintf@plt>
   1b6b8:	ldr	r3, [pc, #560]	; 1b8f0 <_obstack_memory_used@@Base+0x6ec>
   1b6bc:	ldr	r2, [pc, #560]	; 1b8f4 <_obstack_memory_used@@Base+0x6f0>
   1b6c0:	ldr	r1, [pc, #560]	; 1b8f8 <_obstack_memory_used@@Base+0x6f4>
   1b6c4:	mov	r0, r4
   1b6c8:	bl	1155c <fprintf@plt>
   1b6cc:	mov	r1, r4
   1b6d0:	mov	r0, #10
   1b6d4:	bl	11610 <fputc@plt>
   1b6d8:	ldr	r1, [pc, #540]	; 1b8fc <_obstack_memory_used@@Base+0x6f8>
   1b6dc:	ldr	r2, [pc, #540]	; 1b900 <_obstack_memory_used@@Base+0x6fc>
   1b6e0:	mov	r0, r4
   1b6e4:	bl	1155c <fprintf@plt>
   1b6e8:	mov	r1, r4
   1b6ec:	mov	r0, #10
   1b6f0:	bl	11610 <fputc@plt>
   1b6f4:	cmp	r6, #9
   1b6f8:	ldrls	pc, [pc, r6, lsl #2]
   1b6fc:	b	1b728 <_obstack_memory_used@@Base+0x524>
   1b700:	andeq	fp, r1, r8, ror #14
   1b704:			; <UNDEFINED> instruction: 0x0001b7b4
   1b708:	andeq	fp, r1, ip, asr #15
   1b70c:	andeq	fp, r1, r4, ror #15
   1b710:	andeq	fp, r1, r4, lsl #16
   1b714:	andeq	fp, r1, ip, lsr #16
   1b718:	andeq	fp, r1, ip, asr #16
   1b71c:	andeq	fp, r1, r4, ror r8
   1b720:	andeq	fp, r1, r4, lsr #17
   1b724:	andeq	fp, r1, r0, ror r7
   1b728:	ldr	ip, [r5, #32]
   1b72c:	ldr	r1, [r5, #28]
   1b730:	ldm	r5, {r2, r3}
   1b734:	ldr	r7, [r5, #24]
   1b738:	ldr	r6, [r5, #20]
   1b73c:	str	ip, [sp, #24]
   1b740:	ldr	lr, [r5, #16]
   1b744:	str	r1, [sp, #20]
   1b748:	ldr	r1, [r5, #8]
   1b74c:	ldr	ip, [r5, #12]
   1b750:	mov	r0, r4
   1b754:	str	r7, [sp, #16]
   1b758:	stm	sp, {r1, ip, lr}
   1b75c:	str	r6, [sp, #12]
   1b760:	ldr	r1, [pc, #412]	; 1b904 <_obstack_memory_used@@Base+0x700>
   1b764:	bl	1155c <fprintf@plt>
   1b768:	add	sp, sp, #36	; 0x24
   1b76c:	pop	{r4, r5, r6, r7, pc}
   1b770:	ldr	ip, [r5, #32]
   1b774:	ldr	r1, [r5, #28]
   1b778:	ldm	r5, {r2, r3}
   1b77c:	ldr	r7, [r5, #24]
   1b780:	ldr	r6, [r5, #20]
   1b784:	str	ip, [sp, #24]
   1b788:	ldr	lr, [r5, #16]
   1b78c:	str	r1, [sp, #20]
   1b790:	ldr	r1, [r5, #8]
   1b794:	ldr	ip, [r5, #12]
   1b798:	mov	r0, r4
   1b79c:	str	r7, [sp, #16]
   1b7a0:	stm	sp, {r1, ip, lr}
   1b7a4:	str	r6, [sp, #12]
   1b7a8:	ldr	r1, [pc, #344]	; 1b908 <_obstack_memory_used@@Base+0x704>
   1b7ac:	bl	1155c <fprintf@plt>
   1b7b0:	b	1b768 <_obstack_memory_used@@Base+0x564>
   1b7b4:	ldr	r2, [r5]
   1b7b8:	mov	r0, r4
   1b7bc:	ldr	r1, [pc, #328]	; 1b90c <_obstack_memory_used@@Base+0x708>
   1b7c0:	add	sp, sp, #36	; 0x24
   1b7c4:	pop	{r4, r5, r6, r7, lr}
   1b7c8:	b	1155c <fprintf@plt>
   1b7cc:	mov	r0, r4
   1b7d0:	ldm	r5, {r2, r3}
   1b7d4:	ldr	r1, [pc, #308]	; 1b910 <_obstack_memory_used@@Base+0x70c>
   1b7d8:	add	sp, sp, #36	; 0x24
   1b7dc:	pop	{r4, r5, r6, r7, lr}
   1b7e0:	b	1155c <fprintf@plt>
   1b7e4:	ldr	r1, [r5, #8]
   1b7e8:	ldm	r5, {r2, r3}
   1b7ec:	mov	r0, r4
   1b7f0:	str	r1, [sp, #56]	; 0x38
   1b7f4:	ldr	r1, [pc, #280]	; 1b914 <_obstack_memory_used@@Base+0x710>
   1b7f8:	add	sp, sp, #36	; 0x24
   1b7fc:	pop	{r4, r5, r6, r7, lr}
   1b800:	b	1155c <fprintf@plt>
   1b804:	ldr	r1, [r5, #8]
   1b808:	ldr	ip, [r5, #12]
   1b80c:	ldm	r5, {r2, r3}
   1b810:	mov	r0, r4
   1b814:	str	r1, [sp, #56]	; 0x38
   1b818:	str	ip, [sp, #60]	; 0x3c
   1b81c:	ldr	r1, [pc, #244]	; 1b918 <_obstack_memory_used@@Base+0x714>
   1b820:	add	sp, sp, #36	; 0x24
   1b824:	pop	{r4, r5, r6, r7, lr}
   1b828:	b	1155c <fprintf@plt>
   1b82c:	add	r1, r5, #8
   1b830:	ldm	r5, {r2, r3}
   1b834:	ldm	r1, {r1, ip, lr}
   1b838:	mov	r0, r4
   1b83c:	stm	sp, {r1, ip, lr}
   1b840:	ldr	r1, [pc, #212]	; 1b91c <_obstack_memory_used@@Base+0x718>
   1b844:	bl	1155c <fprintf@plt>
   1b848:	b	1b768 <_obstack_memory_used@@Base+0x564>
   1b84c:	add	r1, r5, #8
   1b850:	ldr	r6, [r5, #20]
   1b854:	ldm	r1, {r1, ip, lr}
   1b858:	mov	r0, r4
   1b85c:	ldm	r5, {r2, r3}
   1b860:	str	r6, [sp, #12]
   1b864:	stm	sp, {r1, ip, lr}
   1b868:	ldr	r1, [pc, #176]	; 1b920 <_obstack_memory_used@@Base+0x71c>
   1b86c:	bl	1155c <fprintf@plt>
   1b870:	b	1b768 <_obstack_memory_used@@Base+0x564>
   1b874:	add	r1, r5, #8
   1b878:	ldr	r7, [r5, #24]
   1b87c:	ldm	r1, {r1, ip, lr}
   1b880:	mov	r0, r4
   1b884:	ldr	r6, [r5, #20]
   1b888:	ldm	r5, {r2, r3}
   1b88c:	stm	sp, {r1, ip, lr}
   1b890:	str	r7, [sp, #16]
   1b894:	str	r6, [sp, #12]
   1b898:	ldr	r1, [pc, #132]	; 1b924 <_obstack_memory_used@@Base+0x720>
   1b89c:	bl	1155c <fprintf@plt>
   1b8a0:	b	1b768 <_obstack_memory_used@@Base+0x564>
   1b8a4:	ldr	r1, [r5, #28]
   1b8a8:	ldm	r5, {r2, r3}
   1b8ac:	ldr	r7, [r5, #24]
   1b8b0:	ldr	r6, [r5, #20]
   1b8b4:	ldr	lr, [r5, #16]
   1b8b8:	str	r1, [sp, #20]
   1b8bc:	ldr	r1, [r5, #8]
   1b8c0:	ldr	ip, [r5, #12]
   1b8c4:	mov	r0, r4
   1b8c8:	str	r7, [sp, #16]
   1b8cc:	stm	sp, {r1, ip, lr}
   1b8d0:	str	r6, [sp, #12]
   1b8d4:	ldr	r1, [pc, #76]	; 1b928 <_obstack_memory_used@@Base+0x724>
   1b8d8:	bl	1155c <fprintf@plt>
   1b8dc:	b	1b768 <_obstack_memory_used@@Base+0x564>
   1b8e0:	ldr	r1, [pc, #68]	; 1b92c <_obstack_memory_used@@Base+0x728>
   1b8e4:	bl	1155c <fprintf@plt>
   1b8e8:	b	1b6b8 <_obstack_memory_used@@Base+0x4b4>
   1b8ec:	andeq	r6, r2, r8, asr #3
   1b8f0:	andeq	r0, r0, r6, ror #15
   1b8f4:	ldrdeq	r6, [r2], -ip
   1b8f8:	ldrdeq	r6, [r2], -ip
   1b8fc:	andeq	r6, r2, r4, lsl #4
   1b900:	andeq	r6, r2, r0, ror #3
   1b904:	strdeq	r6, [r2], -r0
   1b908:			; <UNDEFINED> instruction: 0x000263bc
   1b90c:			; <UNDEFINED> instruction: 0x000262b0
   1b910:	andeq	r6, r2, r0, asr #5
   1b914:	ldrdeq	r6, [r2], -r8
   1b918:	strdeq	r6, [r2], -r4
   1b91c:	andeq	r6, r2, r4, lsl r3
   1b920:	andeq	r6, r2, r8, lsr r3
   1b924:	andeq	r6, r2, r0, ror #6
   1b928:	andeq	r6, r2, ip, lsl #7
   1b92c:	ldrdeq	r6, [r2], -r4
   1b930:	push	{r4, r5, r6, r7, lr}
   1b934:	sub	sp, sp, #36	; 0x24
   1b938:	mov	r6, r0
   1b93c:	ldr	r5, [sp, #56]	; 0x38
   1b940:	ldr	r4, [r5]
   1b944:	cmp	r4, #0
   1b948:	beq	1b964 <_obstack_memory_used@@Base+0x760>
   1b94c:	mov	r0, r5
   1b950:	mov	r4, #0
   1b954:	ldr	ip, [r0, #4]!
   1b958:	add	r4, r4, #1
   1b95c:	cmp	ip, #0
   1b960:	bne	1b954 <_obstack_memory_used@@Base+0x750>
   1b964:	cmp	r1, #0
   1b968:	beq	1bba4 <_obstack_memory_used@@Base+0x9a0>
   1b96c:	str	r3, [sp]
   1b970:	mov	r0, r6
   1b974:	mov	r3, r2
   1b978:	mov	r2, r1
   1b97c:	ldr	r1, [pc, #560]	; 1bbb4 <_obstack_memory_used@@Base+0x9b0>
   1b980:	bl	1155c <fprintf@plt>
   1b984:	ldr	r3, [pc, #556]	; 1bbb8 <_obstack_memory_used@@Base+0x9b4>
   1b988:	ldr	r2, [pc, #556]	; 1bbbc <_obstack_memory_used@@Base+0x9b8>
   1b98c:	ldr	r1, [pc, #556]	; 1bbc0 <_obstack_memory_used@@Base+0x9bc>
   1b990:	mov	r0, r6
   1b994:	bl	1155c <fprintf@plt>
   1b998:	mov	r1, r6
   1b99c:	mov	r0, #10
   1b9a0:	bl	11610 <fputc@plt>
   1b9a4:	ldr	r1, [pc, #536]	; 1bbc4 <_obstack_memory_used@@Base+0x9c0>
   1b9a8:	ldr	r2, [pc, #536]	; 1bbc8 <_obstack_memory_used@@Base+0x9c4>
   1b9ac:	mov	r0, r6
   1b9b0:	bl	1155c <fprintf@plt>
   1b9b4:	mov	r1, r6
   1b9b8:	mov	r0, #10
   1b9bc:	bl	11610 <fputc@plt>
   1b9c0:	cmp	r4, #9
   1b9c4:	ldrls	pc, [pc, r4, lsl #2]
   1b9c8:	b	1b9f4 <_obstack_memory_used@@Base+0x7f0>
   1b9cc:	andeq	fp, r1, r4, lsr sl
   1b9d0:	andeq	fp, r1, r0, lsl #21
   1b9d4:	muleq	r1, r8, sl
   1b9d8:			; <UNDEFINED> instruction: 0x0001bab0
   1b9dc:	ldrdeq	fp, [r1], -r0
   1b9e0:	strdeq	fp, [r1], -r0
   1b9e4:	andeq	fp, r1, r0, lsl fp
   1b9e8:	andeq	fp, r1, r8, lsr fp
   1b9ec:	andeq	fp, r1, r8, ror #22
   1b9f0:	andeq	fp, r1, ip, lsr sl
   1b9f4:	ldr	ip, [r5, #32]
   1b9f8:	ldr	r1, [r5, #28]
   1b9fc:	ldm	r5, {r2, r3}
   1ba00:	ldr	r7, [r5, #24]
   1ba04:	ldr	r4, [r5, #20]
   1ba08:	str	ip, [sp, #24]
   1ba0c:	ldr	lr, [r5, #16]
   1ba10:	str	r1, [sp, #20]
   1ba14:	ldr	r1, [r5, #8]
   1ba18:	ldr	ip, [r5, #12]
   1ba1c:	mov	r0, r6
   1ba20:	str	r7, [sp, #16]
   1ba24:	stm	sp, {r1, ip, lr}
   1ba28:	str	r4, [sp, #12]
   1ba2c:	ldr	r1, [pc, #408]	; 1bbcc <_obstack_memory_used@@Base+0x9c8>
   1ba30:	bl	1155c <fprintf@plt>
   1ba34:	add	sp, sp, #36	; 0x24
   1ba38:	pop	{r4, r5, r6, r7, pc}
   1ba3c:	ldr	ip, [r5, #32]
   1ba40:	ldr	r1, [r5, #28]
   1ba44:	ldm	r5, {r2, r3}
   1ba48:	ldr	r7, [r5, #24]
   1ba4c:	ldr	r4, [r5, #20]
   1ba50:	str	ip, [sp, #24]
   1ba54:	ldr	lr, [r5, #16]
   1ba58:	str	r1, [sp, #20]
   1ba5c:	ldr	r1, [r5, #8]
   1ba60:	ldr	ip, [r5, #12]
   1ba64:	mov	r0, r6
   1ba68:	str	r7, [sp, #16]
   1ba6c:	stm	sp, {r1, ip, lr}
   1ba70:	str	r4, [sp, #12]
   1ba74:	ldr	r1, [pc, #340]	; 1bbd0 <_obstack_memory_used@@Base+0x9cc>
   1ba78:	bl	1155c <fprintf@plt>
   1ba7c:	b	1ba34 <_obstack_memory_used@@Base+0x830>
   1ba80:	ldr	r2, [r5]
   1ba84:	mov	r0, r6
   1ba88:	ldr	r1, [pc, #324]	; 1bbd4 <_obstack_memory_used@@Base+0x9d0>
   1ba8c:	add	sp, sp, #36	; 0x24
   1ba90:	pop	{r4, r5, r6, r7, lr}
   1ba94:	b	1155c <fprintf@plt>
   1ba98:	mov	r0, r6
   1ba9c:	ldm	r5, {r2, r3}
   1baa0:	ldr	r1, [pc, #304]	; 1bbd8 <_obstack_memory_used@@Base+0x9d4>
   1baa4:	add	sp, sp, #36	; 0x24
   1baa8:	pop	{r4, r5, r6, r7, lr}
   1baac:	b	1155c <fprintf@plt>
   1bab0:	ldr	r1, [r5, #8]
   1bab4:	ldm	r5, {r2, r3}
   1bab8:	mov	r0, r6
   1babc:	str	r1, [sp, #56]	; 0x38
   1bac0:	ldr	r1, [pc, #276]	; 1bbdc <_obstack_memory_used@@Base+0x9d8>
   1bac4:	add	sp, sp, #36	; 0x24
   1bac8:	pop	{r4, r5, r6, r7, lr}
   1bacc:	b	1155c <fprintf@plt>
   1bad0:	ldr	r1, [r5, #8]
   1bad4:	ldr	ip, [r5, #12]
   1bad8:	ldm	r5, {r2, r3}
   1badc:	mov	r0, r6
   1bae0:	stm	sp, {r1, ip}
   1bae4:	ldr	r1, [pc, #244]	; 1bbe0 <_obstack_memory_used@@Base+0x9dc>
   1bae8:	bl	1155c <fprintf@plt>
   1baec:	b	1ba34 <_obstack_memory_used@@Base+0x830>
   1baf0:	add	r1, r5, #8
   1baf4:	ldm	r5, {r2, r3}
   1baf8:	ldm	r1, {r1, ip, lr}
   1bafc:	mov	r0, r6
   1bb00:	stm	sp, {r1, ip, lr}
   1bb04:	ldr	r1, [pc, #216]	; 1bbe4 <_obstack_memory_used@@Base+0x9e0>
   1bb08:	bl	1155c <fprintf@plt>
   1bb0c:	b	1ba34 <_obstack_memory_used@@Base+0x830>
   1bb10:	add	r1, r5, #8
   1bb14:	ldr	r4, [r5, #20]
   1bb18:	ldm	r1, {r1, ip, lr}
   1bb1c:	mov	r0, r6
   1bb20:	ldm	r5, {r2, r3}
   1bb24:	str	r4, [sp, #12]
   1bb28:	stm	sp, {r1, ip, lr}
   1bb2c:	ldr	r1, [pc, #180]	; 1bbe8 <_obstack_memory_used@@Base+0x9e4>
   1bb30:	bl	1155c <fprintf@plt>
   1bb34:	b	1ba34 <_obstack_memory_used@@Base+0x830>
   1bb38:	add	r1, r5, #8
   1bb3c:	ldr	r7, [r5, #24]
   1bb40:	ldm	r1, {r1, ip, lr}
   1bb44:	mov	r0, r6
   1bb48:	ldr	r4, [r5, #20]
   1bb4c:	ldm	r5, {r2, r3}
   1bb50:	stm	sp, {r1, ip, lr}
   1bb54:	str	r7, [sp, #16]
   1bb58:	str	r4, [sp, #12]
   1bb5c:	ldr	r1, [pc, #136]	; 1bbec <_obstack_memory_used@@Base+0x9e8>
   1bb60:	bl	1155c <fprintf@plt>
   1bb64:	b	1ba34 <_obstack_memory_used@@Base+0x830>
   1bb68:	ldr	r1, [r5, #28]
   1bb6c:	ldm	r5, {r2, r3}
   1bb70:	ldr	r7, [r5, #24]
   1bb74:	ldr	r4, [r5, #20]
   1bb78:	ldr	lr, [r5, #16]
   1bb7c:	str	r1, [sp, #20]
   1bb80:	ldr	r1, [r5, #8]
   1bb84:	ldr	ip, [r5, #12]
   1bb88:	mov	r0, r6
   1bb8c:	str	r7, [sp, #16]
   1bb90:	stm	sp, {r1, ip, lr}
   1bb94:	str	r4, [sp, #12]
   1bb98:	ldr	r1, [pc, #80]	; 1bbf0 <_obstack_memory_used@@Base+0x9ec>
   1bb9c:	bl	1155c <fprintf@plt>
   1bba0:	b	1ba34 <_obstack_memory_used@@Base+0x830>
   1bba4:	ldr	r1, [pc, #72]	; 1bbf4 <_obstack_memory_used@@Base+0x9f0>
   1bba8:	mov	r0, r6
   1bbac:	bl	1155c <fprintf@plt>
   1bbb0:	b	1b984 <_obstack_memory_used@@Base+0x780>
   1bbb4:	andeq	r6, r2, r8, asr #3
   1bbb8:	andeq	r0, r0, r6, ror #15
   1bbbc:	ldrdeq	r6, [r2], -ip
   1bbc0:	ldrdeq	r6, [r2], -ip
   1bbc4:	andeq	r6, r2, r4, lsl #4
   1bbc8:	andeq	r6, r2, r0, ror #3
   1bbcc:	strdeq	r6, [r2], -r0
   1bbd0:			; <UNDEFINED> instruction: 0x000263bc
   1bbd4:			; <UNDEFINED> instruction: 0x000262b0
   1bbd8:	andeq	r6, r2, r0, asr #5
   1bbdc:	ldrdeq	r6, [r2], -r8
   1bbe0:	strdeq	r6, [r2], -r4
   1bbe4:	andeq	r6, r2, r4, lsl r3
   1bbe8:	andeq	r6, r2, r8, lsr r3
   1bbec:	andeq	r6, r2, r0, ror #6
   1bbf0:	andeq	r6, r2, ip, lsl #7
   1bbf4:	ldrdeq	r6, [r2], -r4
   1bbf8:	push	{r4, r5, r6, lr}
   1bbfc:	sub	sp, sp, #72	; 0x48
   1bc00:	mov	r5, r0
   1bc04:	ldr	ip, [sp, #88]	; 0x58
   1bc08:	ldr	r0, [ip]
   1bc0c:	cmp	r0, #0
   1bc10:	str	r0, [sp, #32]
   1bc14:	beq	1bf1c <_obstack_memory_used@@Base+0xd18>
   1bc18:	ldr	r0, [ip, #4]
   1bc1c:	cmp	r0, #0
   1bc20:	str	r0, [sp, #36]	; 0x24
   1bc24:	beq	1bf24 <_obstack_memory_used@@Base+0xd20>
   1bc28:	ldr	r0, [ip, #8]
   1bc2c:	cmp	r0, #0
   1bc30:	str	r0, [sp, #40]	; 0x28
   1bc34:	beq	1bf2c <_obstack_memory_used@@Base+0xd28>
   1bc38:	ldr	r0, [ip, #12]
   1bc3c:	cmp	r0, #0
   1bc40:	str	r0, [sp, #44]	; 0x2c
   1bc44:	beq	1bf34 <_obstack_memory_used@@Base+0xd30>
   1bc48:	ldr	r0, [ip, #16]
   1bc4c:	cmp	r0, #0
   1bc50:	str	r0, [sp, #48]	; 0x30
   1bc54:	beq	1bf3c <_obstack_memory_used@@Base+0xd38>
   1bc58:	ldr	r0, [ip, #20]
   1bc5c:	cmp	r0, #0
   1bc60:	str	r0, [sp, #52]	; 0x34
   1bc64:	beq	1bf44 <_obstack_memory_used@@Base+0xd40>
   1bc68:	ldr	r0, [ip, #24]
   1bc6c:	cmp	r0, #0
   1bc70:	str	r0, [sp, #56]	; 0x38
   1bc74:	beq	1bf4c <_obstack_memory_used@@Base+0xd48>
   1bc78:	ldr	r0, [ip, #28]
   1bc7c:	cmp	r0, #0
   1bc80:	str	r0, [sp, #60]	; 0x3c
   1bc84:	beq	1bf54 <_obstack_memory_used@@Base+0xd50>
   1bc88:	ldr	r0, [ip, #32]
   1bc8c:	cmp	r0, #0
   1bc90:	str	r0, [sp, #64]	; 0x40
   1bc94:	beq	1bf5c <_obstack_memory_used@@Base+0xd58>
   1bc98:	ldr	r0, [ip, #36]	; 0x24
   1bc9c:	cmp	r0, #0
   1bca0:	movne	r4, #10
   1bca4:	moveq	r4, #9
   1bca8:	cmp	r1, #0
   1bcac:	beq	1bf0c <_obstack_memory_used@@Base+0xd08>
   1bcb0:	str	r3, [sp]
   1bcb4:	mov	r0, r5
   1bcb8:	mov	r3, r2
   1bcbc:	mov	r2, r1
   1bcc0:	ldr	r1, [pc, #668]	; 1bf64 <_obstack_memory_used@@Base+0xd60>
   1bcc4:	bl	1155c <fprintf@plt>
   1bcc8:	ldr	r3, [pc, #664]	; 1bf68 <_obstack_memory_used@@Base+0xd64>
   1bccc:	ldr	r2, [pc, #664]	; 1bf6c <_obstack_memory_used@@Base+0xd68>
   1bcd0:	ldr	r1, [pc, #664]	; 1bf70 <_obstack_memory_used@@Base+0xd6c>
   1bcd4:	mov	r0, r5
   1bcd8:	bl	1155c <fprintf@plt>
   1bcdc:	mov	r1, r5
   1bce0:	mov	r0, #10
   1bce4:	bl	11610 <fputc@plt>
   1bce8:	ldr	r1, [pc, #644]	; 1bf74 <_obstack_memory_used@@Base+0xd70>
   1bcec:	ldr	r2, [pc, #644]	; 1bf78 <_obstack_memory_used@@Base+0xd74>
   1bcf0:	mov	r0, r5
   1bcf4:	bl	1155c <fprintf@plt>
   1bcf8:	mov	r1, r5
   1bcfc:	mov	r0, #10
   1bd00:	bl	11610 <fputc@plt>
   1bd04:	cmp	r4, #9
   1bd08:	ldrls	pc, [pc, r4, lsl #2]
   1bd0c:	b	1bd38 <_obstack_memory_used@@Base+0xb34>
   1bd10:	andeq	fp, r1, ip, ror sp
   1bd14:	andeq	fp, r1, ip, asr #27
   1bd18:	andeq	fp, r1, r4, ror #27
   1bd1c:	andeq	fp, r1, r0, lsl #28
   1bd20:	andeq	fp, r1, r4, lsr #28
   1bd24:	andeq	fp, r1, r8, asr #28
   1bd28:	andeq	fp, r1, ip, ror #28
   1bd2c:	muleq	r1, r8, lr
   1bd30:	andeq	fp, r1, ip, asr #29
   1bd34:	andeq	fp, r1, r4, lsl #27
   1bd38:	ldr	ip, [sp, #64]	; 0x40
   1bd3c:	ldr	r1, [sp, #60]	; 0x3c
   1bd40:	ldr	lr, [sp, #48]	; 0x30
   1bd44:	str	ip, [sp, #24]
   1bd48:	str	r1, [sp, #20]
   1bd4c:	ldr	ip, [sp, #44]	; 0x2c
   1bd50:	ldr	r1, [sp, #40]	; 0x28
   1bd54:	ldr	r6, [sp, #56]	; 0x38
   1bd58:	ldr	r4, [sp, #52]	; 0x34
   1bd5c:	stm	sp, {r1, ip, lr}
   1bd60:	mov	r0, r5
   1bd64:	ldr	r3, [sp, #36]	; 0x24
   1bd68:	ldr	r2, [sp, #32]
   1bd6c:	str	r6, [sp, #16]
   1bd70:	str	r4, [sp, #12]
   1bd74:	ldr	r1, [pc, #512]	; 1bf7c <_obstack_memory_used@@Base+0xd78>
   1bd78:	bl	1155c <fprintf@plt>
   1bd7c:	add	sp, sp, #72	; 0x48
   1bd80:	pop	{r4, r5, r6, pc}
   1bd84:	ldr	ip, [sp, #64]	; 0x40
   1bd88:	ldr	r1, [sp, #60]	; 0x3c
   1bd8c:	ldr	lr, [sp, #48]	; 0x30
   1bd90:	str	ip, [sp, #24]
   1bd94:	str	r1, [sp, #20]
   1bd98:	ldr	ip, [sp, #44]	; 0x2c
   1bd9c:	ldr	r1, [sp, #40]	; 0x28
   1bda0:	ldr	r6, [sp, #56]	; 0x38
   1bda4:	ldr	r4, [sp, #52]	; 0x34
   1bda8:	stm	sp, {r1, ip, lr}
   1bdac:	mov	r0, r5
   1bdb0:	ldr	r3, [sp, #36]	; 0x24
   1bdb4:	ldr	r2, [sp, #32]
   1bdb8:	str	r6, [sp, #16]
   1bdbc:	str	r4, [sp, #12]
   1bdc0:	ldr	r1, [pc, #440]	; 1bf80 <_obstack_memory_used@@Base+0xd7c>
   1bdc4:	bl	1155c <fprintf@plt>
   1bdc8:	b	1bd7c <_obstack_memory_used@@Base+0xb78>
   1bdcc:	mov	r0, r5
   1bdd0:	ldr	r2, [sp, #32]
   1bdd4:	ldr	r1, [pc, #424]	; 1bf84 <_obstack_memory_used@@Base+0xd80>
   1bdd8:	add	sp, sp, #72	; 0x48
   1bddc:	pop	{r4, r5, r6, lr}
   1bde0:	b	1155c <fprintf@plt>
   1bde4:	mov	r0, r5
   1bde8:	ldr	r3, [sp, #36]	; 0x24
   1bdec:	ldr	r2, [sp, #32]
   1bdf0:	ldr	r1, [pc, #400]	; 1bf88 <_obstack_memory_used@@Base+0xd84>
   1bdf4:	add	sp, sp, #72	; 0x48
   1bdf8:	pop	{r4, r5, r6, lr}
   1bdfc:	b	1155c <fprintf@plt>
   1be00:	ldr	r1, [sp, #40]	; 0x28
   1be04:	ldr	r3, [sp, #36]	; 0x24
   1be08:	str	r1, [sp, #88]	; 0x58
   1be0c:	ldr	r2, [sp, #32]
   1be10:	mov	r0, r5
   1be14:	ldr	r1, [pc, #368]	; 1bf8c <_obstack_memory_used@@Base+0xd88>
   1be18:	add	sp, sp, #72	; 0x48
   1be1c:	pop	{r4, r5, r6, lr}
   1be20:	b	1155c <fprintf@plt>
   1be24:	ldr	r1, [sp, #40]	; 0x28
   1be28:	ldr	ip, [sp, #44]	; 0x2c
   1be2c:	ldr	r3, [sp, #36]	; 0x24
   1be30:	ldr	r2, [sp, #32]
   1be34:	stm	sp, {r1, ip}
   1be38:	mov	r0, r5
   1be3c:	ldr	r1, [pc, #332]	; 1bf90 <_obstack_memory_used@@Base+0xd8c>
   1be40:	bl	1155c <fprintf@plt>
   1be44:	b	1bd7c <_obstack_memory_used@@Base+0xb78>
   1be48:	add	r1, sp, #40	; 0x28
   1be4c:	ldr	r3, [sp, #36]	; 0x24
   1be50:	ldm	r1, {r1, ip, lr}
   1be54:	mov	r0, r5
   1be58:	ldr	r2, [sp, #32]
   1be5c:	stm	sp, {r1, ip, lr}
   1be60:	ldr	r1, [pc, #300]	; 1bf94 <_obstack_memory_used@@Base+0xd90>
   1be64:	bl	1155c <fprintf@plt>
   1be68:	b	1bd7c <_obstack_memory_used@@Base+0xb78>
   1be6c:	add	r1, sp, #40	; 0x28
   1be70:	ldr	r4, [sp, #52]	; 0x34
   1be74:	ldm	r1, {r1, ip, lr}
   1be78:	mov	r0, r5
   1be7c:	ldr	r3, [sp, #36]	; 0x24
   1be80:	ldr	r2, [sp, #32]
   1be84:	stm	sp, {r1, ip, lr}
   1be88:	str	r4, [sp, #12]
   1be8c:	ldr	r1, [pc, #260]	; 1bf98 <_obstack_memory_used@@Base+0xd94>
   1be90:	bl	1155c <fprintf@plt>
   1be94:	b	1bd7c <_obstack_memory_used@@Base+0xb78>
   1be98:	add	r1, sp, #40	; 0x28
   1be9c:	ldr	r6, [sp, #56]	; 0x38
   1bea0:	ldm	r1, {r1, ip, lr}
   1bea4:	mov	r0, r5
   1bea8:	ldr	r4, [sp, #52]	; 0x34
   1beac:	ldr	r3, [sp, #36]	; 0x24
   1beb0:	stm	sp, {r1, ip, lr}
   1beb4:	ldr	r2, [sp, #32]
   1beb8:	str	r6, [sp, #16]
   1bebc:	str	r4, [sp, #12]
   1bec0:	ldr	r1, [pc, #212]	; 1bf9c <_obstack_memory_used@@Base+0xd98>
   1bec4:	bl	1155c <fprintf@plt>
   1bec8:	b	1bd7c <_obstack_memory_used@@Base+0xb78>
   1becc:	ldr	r1, [sp, #60]	; 0x3c
   1bed0:	ldr	lr, [sp, #48]	; 0x30
   1bed4:	ldr	ip, [sp, #44]	; 0x2c
   1bed8:	str	r1, [sp, #20]
   1bedc:	ldr	r1, [sp, #40]	; 0x28
   1bee0:	ldr	r6, [sp, #56]	; 0x38
   1bee4:	ldr	r4, [sp, #52]	; 0x34
   1bee8:	stm	sp, {r1, ip, lr}
   1beec:	mov	r0, r5
   1bef0:	ldr	r3, [sp, #36]	; 0x24
   1bef4:	ldr	r2, [sp, #32]
   1bef8:	str	r6, [sp, #16]
   1befc:	str	r4, [sp, #12]
   1bf00:	ldr	r1, [pc, #152]	; 1bfa0 <_obstack_memory_used@@Base+0xd9c>
   1bf04:	bl	1155c <fprintf@plt>
   1bf08:	b	1bd7c <_obstack_memory_used@@Base+0xb78>
   1bf0c:	ldr	r1, [pc, #144]	; 1bfa4 <_obstack_memory_used@@Base+0xda0>
   1bf10:	mov	r0, r5
   1bf14:	bl	1155c <fprintf@plt>
   1bf18:	b	1bcc8 <_obstack_memory_used@@Base+0xac4>
   1bf1c:	mov	r4, r0
   1bf20:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf24:	mov	r4, #1
   1bf28:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf2c:	mov	r4, #2
   1bf30:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf34:	mov	r4, #3
   1bf38:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf3c:	mov	r4, #4
   1bf40:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf44:	mov	r4, #5
   1bf48:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf4c:	mov	r4, #6
   1bf50:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf54:	mov	r4, #7
   1bf58:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf5c:	mov	r4, #8
   1bf60:	b	1bca8 <_obstack_memory_used@@Base+0xaa4>
   1bf64:	andeq	r6, r2, r8, asr #3
   1bf68:	andeq	r0, r0, r6, ror #15
   1bf6c:	ldrdeq	r6, [r2], -ip
   1bf70:	ldrdeq	r6, [r2], -ip
   1bf74:	andeq	r6, r2, r4, lsl #4
   1bf78:	andeq	r6, r2, r0, ror #3
   1bf7c:	strdeq	r6, [r2], -r0
   1bf80:			; <UNDEFINED> instruction: 0x000263bc
   1bf84:			; <UNDEFINED> instruction: 0x000262b0
   1bf88:	andeq	r6, r2, r0, asr #5
   1bf8c:	ldrdeq	r6, [r2], -r8
   1bf90:	strdeq	r6, [r2], -r4
   1bf94:	andeq	r6, r2, r4, lsl r3
   1bf98:	andeq	r6, r2, r8, lsr r3
   1bf9c:	andeq	r6, r2, r0, ror #6
   1bfa0:	andeq	r6, r2, ip, lsl #7
   1bfa4:	ldrdeq	r6, [r2], -r4
   1bfa8:	push	{r3}		; (str r3, [sp, #-4]!)
   1bfac:	push	{r4, r5, r6, lr}
   1bfb0:	sub	sp, sp, #84	; 0x54
   1bfb4:	add	ip, sp, #104	; 0x68
   1bfb8:	ldr	lr, [sp, #104]	; 0x68
   1bfbc:	mov	r5, r0
   1bfc0:	cmp	lr, #0
   1bfc4:	str	lr, [sp, #40]	; 0x28
   1bfc8:	str	ip, [sp, #36]	; 0x24
   1bfcc:	beq	1c2d4 <_obstack_memory_used@@Base+0x10d0>
   1bfd0:	ldr	r0, [sp, #108]	; 0x6c
   1bfd4:	cmp	r0, #0
   1bfd8:	str	r0, [sp, #44]	; 0x2c
   1bfdc:	beq	1c2dc <_obstack_memory_used@@Base+0x10d8>
   1bfe0:	ldr	r0, [sp, #112]	; 0x70
   1bfe4:	cmp	r0, #0
   1bfe8:	str	r0, [sp, #48]	; 0x30
   1bfec:	beq	1c2e4 <_obstack_memory_used@@Base+0x10e0>
   1bff0:	ldr	r0, [sp, #116]	; 0x74
   1bff4:	cmp	r0, #0
   1bff8:	str	r0, [sp, #52]	; 0x34
   1bffc:	beq	1c2ec <_obstack_memory_used@@Base+0x10e8>
   1c000:	ldr	r0, [sp, #120]	; 0x78
   1c004:	cmp	r0, #0
   1c008:	str	r0, [sp, #56]	; 0x38
   1c00c:	beq	1c2f4 <_obstack_memory_used@@Base+0x10f0>
   1c010:	ldr	r0, [sp, #124]	; 0x7c
   1c014:	cmp	r0, #0
   1c018:	str	r0, [sp, #60]	; 0x3c
   1c01c:	beq	1c2fc <_obstack_memory_used@@Base+0x10f8>
   1c020:	ldr	r0, [sp, #128]	; 0x80
   1c024:	cmp	r0, #0
   1c028:	str	r0, [sp, #64]	; 0x40
   1c02c:	beq	1c304 <_obstack_memory_used@@Base+0x1100>
   1c030:	ldr	r0, [sp, #132]	; 0x84
   1c034:	cmp	r0, #0
   1c038:	str	r0, [sp, #68]	; 0x44
   1c03c:	beq	1c30c <_obstack_memory_used@@Base+0x1108>
   1c040:	ldr	r3, [sp, #136]	; 0x88
   1c044:	cmp	r3, #0
   1c048:	str	r3, [sp, #72]	; 0x48
   1c04c:	beq	1c314 <_obstack_memory_used@@Base+0x1110>
   1c050:	ldr	lr, [sp, #140]	; 0x8c
   1c054:	cmp	lr, #0
   1c058:	movne	r4, #10
   1c05c:	moveq	r4, #9
   1c060:	cmp	r1, #0
   1c064:	ldr	r3, [sp, #100]	; 0x64
   1c068:	beq	1c2c4 <_obstack_memory_used@@Base+0x10c0>
   1c06c:	str	r3, [sp]
   1c070:	mov	r0, r5
   1c074:	mov	r3, r2
   1c078:	mov	r2, r1
   1c07c:	ldr	r1, [pc, #664]	; 1c31c <_obstack_memory_used@@Base+0x1118>
   1c080:	bl	1155c <fprintf@plt>
   1c084:	ldr	r3, [pc, #660]	; 1c320 <_obstack_memory_used@@Base+0x111c>
   1c088:	ldr	r2, [pc, #660]	; 1c324 <_obstack_memory_used@@Base+0x1120>
   1c08c:	ldr	r1, [pc, #660]	; 1c328 <_obstack_memory_used@@Base+0x1124>
   1c090:	mov	r0, r5
   1c094:	bl	1155c <fprintf@plt>
   1c098:	mov	r1, r5
   1c09c:	mov	r0, #10
   1c0a0:	bl	11610 <fputc@plt>
   1c0a4:	ldr	r1, [pc, #640]	; 1c32c <_obstack_memory_used@@Base+0x1128>
   1c0a8:	ldr	r2, [pc, #640]	; 1c330 <_obstack_memory_used@@Base+0x112c>
   1c0ac:	mov	r0, r5
   1c0b0:	bl	1155c <fprintf@plt>
   1c0b4:	mov	r1, r5
   1c0b8:	mov	r0, #10
   1c0bc:	bl	11610 <fputc@plt>
   1c0c0:	cmp	r4, #9
   1c0c4:	ldrls	pc, [pc, r4, lsl #2]
   1c0c8:	b	1c0f4 <_obstack_memory_used@@Base+0xef0>
   1c0cc:	andeq	ip, r1, r8, lsr r1
   1c0d0:	muleq	r1, r0, r1
   1c0d4:	andeq	ip, r1, r4, lsr #3
   1c0d8:			; <UNDEFINED> instruction: 0x0001c1bc
   1c0dc:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c0e0:	andeq	ip, r1, r0, lsl #4
   1c0e4:	andeq	ip, r1, r4, lsr #4
   1c0e8:	andeq	ip, r1, r0, asr r2
   1c0ec:	andeq	ip, r1, r4, lsl #5
   1c0f0:	andeq	ip, r1, r8, asr #2
   1c0f4:	ldr	ip, [sp, #72]	; 0x48
   1c0f8:	ldr	r1, [sp, #68]	; 0x44
   1c0fc:	ldr	lr, [sp, #56]	; 0x38
   1c100:	str	ip, [sp, #24]
   1c104:	str	r1, [sp, #20]
   1c108:	ldr	ip, [sp, #52]	; 0x34
   1c10c:	ldr	r1, [sp, #48]	; 0x30
   1c110:	ldr	r6, [sp, #64]	; 0x40
   1c114:	ldr	r4, [sp, #60]	; 0x3c
   1c118:	stm	sp, {r1, ip, lr}
   1c11c:	mov	r0, r5
   1c120:	ldr	r3, [sp, #44]	; 0x2c
   1c124:	ldr	r2, [sp, #40]	; 0x28
   1c128:	str	r6, [sp, #16]
   1c12c:	str	r4, [sp, #12]
   1c130:	ldr	r1, [pc, #508]	; 1c334 <_obstack_memory_used@@Base+0x1130>
   1c134:	bl	1155c <fprintf@plt>
   1c138:	add	sp, sp, #84	; 0x54
   1c13c:	pop	{r4, r5, r6, lr}
   1c140:	add	sp, sp, #4
   1c144:	bx	lr
   1c148:	ldr	ip, [sp, #72]	; 0x48
   1c14c:	ldr	r1, [sp, #68]	; 0x44
   1c150:	ldr	lr, [sp, #56]	; 0x38
   1c154:	str	ip, [sp, #24]
   1c158:	str	r1, [sp, #20]
   1c15c:	ldr	ip, [sp, #52]	; 0x34
   1c160:	ldr	r1, [sp, #48]	; 0x30
   1c164:	ldr	r6, [sp, #64]	; 0x40
   1c168:	ldr	r4, [sp, #60]	; 0x3c
   1c16c:	stm	sp, {r1, ip, lr}
   1c170:	mov	r0, r5
   1c174:	ldr	r3, [sp, #44]	; 0x2c
   1c178:	ldr	r2, [sp, #40]	; 0x28
   1c17c:	str	r6, [sp, #16]
   1c180:	str	r4, [sp, #12]
   1c184:	ldr	r1, [pc, #428]	; 1c338 <_obstack_memory_used@@Base+0x1134>
   1c188:	bl	1155c <fprintf@plt>
   1c18c:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c190:	mov	r0, r5
   1c194:	ldr	r2, [sp, #40]	; 0x28
   1c198:	ldr	r1, [pc, #412]	; 1c33c <_obstack_memory_used@@Base+0x1138>
   1c19c:	bl	1155c <fprintf@plt>
   1c1a0:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c1a4:	mov	r0, r5
   1c1a8:	ldr	r3, [sp, #44]	; 0x2c
   1c1ac:	ldr	r2, [sp, #40]	; 0x28
   1c1b0:	ldr	r1, [pc, #392]	; 1c340 <_obstack_memory_used@@Base+0x113c>
   1c1b4:	bl	1155c <fprintf@plt>
   1c1b8:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c1bc:	ldr	r1, [sp, #48]	; 0x30
   1c1c0:	ldr	r3, [sp, #44]	; 0x2c
   1c1c4:	str	r1, [sp]
   1c1c8:	ldr	r2, [sp, #40]	; 0x28
   1c1cc:	mov	r0, r5
   1c1d0:	ldr	r1, [pc, #364]	; 1c344 <_obstack_memory_used@@Base+0x1140>
   1c1d4:	bl	1155c <fprintf@plt>
   1c1d8:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c1dc:	ldr	r1, [sp, #48]	; 0x30
   1c1e0:	ldr	ip, [sp, #52]	; 0x34
   1c1e4:	ldr	r3, [sp, #44]	; 0x2c
   1c1e8:	ldr	r2, [sp, #40]	; 0x28
   1c1ec:	stm	sp, {r1, ip}
   1c1f0:	mov	r0, r5
   1c1f4:	ldr	r1, [pc, #332]	; 1c348 <_obstack_memory_used@@Base+0x1144>
   1c1f8:	bl	1155c <fprintf@plt>
   1c1fc:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c200:	add	r1, sp, #48	; 0x30
   1c204:	ldr	r3, [sp, #44]	; 0x2c
   1c208:	ldm	r1, {r1, ip, lr}
   1c20c:	mov	r0, r5
   1c210:	ldr	r2, [sp, #40]	; 0x28
   1c214:	stm	sp, {r1, ip, lr}
   1c218:	ldr	r1, [pc, #300]	; 1c34c <_obstack_memory_used@@Base+0x1148>
   1c21c:	bl	1155c <fprintf@plt>
   1c220:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c224:	add	r1, sp, #48	; 0x30
   1c228:	ldr	r4, [sp, #60]	; 0x3c
   1c22c:	ldm	r1, {r1, ip, lr}
   1c230:	mov	r0, r5
   1c234:	ldr	r3, [sp, #44]	; 0x2c
   1c238:	ldr	r2, [sp, #40]	; 0x28
   1c23c:	stm	sp, {r1, ip, lr}
   1c240:	str	r4, [sp, #12]
   1c244:	ldr	r1, [pc, #260]	; 1c350 <_obstack_memory_used@@Base+0x114c>
   1c248:	bl	1155c <fprintf@plt>
   1c24c:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c250:	add	r1, sp, #48	; 0x30
   1c254:	ldr	r6, [sp, #64]	; 0x40
   1c258:	ldm	r1, {r1, ip, lr}
   1c25c:	mov	r0, r5
   1c260:	ldr	r4, [sp, #60]	; 0x3c
   1c264:	ldr	r3, [sp, #44]	; 0x2c
   1c268:	stm	sp, {r1, ip, lr}
   1c26c:	ldr	r2, [sp, #40]	; 0x28
   1c270:	str	r6, [sp, #16]
   1c274:	str	r4, [sp, #12]
   1c278:	ldr	r1, [pc, #212]	; 1c354 <_obstack_memory_used@@Base+0x1150>
   1c27c:	bl	1155c <fprintf@plt>
   1c280:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c284:	ldr	r1, [sp, #68]	; 0x44
   1c288:	ldr	lr, [sp, #56]	; 0x38
   1c28c:	ldr	ip, [sp, #52]	; 0x34
   1c290:	str	r1, [sp, #20]
   1c294:	ldr	r1, [sp, #48]	; 0x30
   1c298:	ldr	r6, [sp, #64]	; 0x40
   1c29c:	ldr	r4, [sp, #60]	; 0x3c
   1c2a0:	stm	sp, {r1, ip, lr}
   1c2a4:	mov	r0, r5
   1c2a8:	ldr	r3, [sp, #44]	; 0x2c
   1c2ac:	ldr	r2, [sp, #40]	; 0x28
   1c2b0:	str	r6, [sp, #16]
   1c2b4:	str	r4, [sp, #12]
   1c2b8:	ldr	r1, [pc, #152]	; 1c358 <_obstack_memory_used@@Base+0x1154>
   1c2bc:	bl	1155c <fprintf@plt>
   1c2c0:	b	1c138 <_obstack_memory_used@@Base+0xf34>
   1c2c4:	ldr	r1, [pc, #144]	; 1c35c <_obstack_memory_used@@Base+0x1158>
   1c2c8:	mov	r0, r5
   1c2cc:	bl	1155c <fprintf@plt>
   1c2d0:	b	1c084 <_obstack_memory_used@@Base+0xe80>
   1c2d4:	mov	r4, lr
   1c2d8:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c2dc:	mov	r4, #1
   1c2e0:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c2e4:	mov	r4, #2
   1c2e8:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c2ec:	mov	r4, #3
   1c2f0:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c2f4:	mov	r4, #4
   1c2f8:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c2fc:	mov	r4, #5
   1c300:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c304:	mov	r4, #6
   1c308:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c30c:	mov	r4, #7
   1c310:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c314:	mov	r4, #8
   1c318:	b	1c060 <_obstack_memory_used@@Base+0xe5c>
   1c31c:	andeq	r6, r2, r8, asr #3
   1c320:	andeq	r0, r0, r6, ror #15
   1c324:	ldrdeq	r6, [r2], -ip
   1c328:	ldrdeq	r6, [r2], -ip
   1c32c:	andeq	r6, r2, r4, lsl #4
   1c330:	andeq	r6, r2, r0, ror #3
   1c334:	strdeq	r6, [r2], -r0
   1c338:			; <UNDEFINED> instruction: 0x000263bc
   1c33c:			; <UNDEFINED> instruction: 0x000262b0
   1c340:	andeq	r6, r2, r0, asr #5
   1c344:	ldrdeq	r6, [r2], -r8
   1c348:	strdeq	r6, [r2], -r4
   1c34c:	andeq	r6, r2, r4, lsl r3
   1c350:	andeq	r6, r2, r8, lsr r3
   1c354:	andeq	r6, r2, r0, ror #6
   1c358:	andeq	r6, r2, ip, lsl #7
   1c35c:	ldrdeq	r6, [r2], -r4
   1c360:	ldr	r3, [pc, #56]	; 1c3a0 <_obstack_memory_used@@Base+0x119c>
   1c364:	push	{r4, lr}
   1c368:	mov	r0, #10
   1c36c:	ldr	r1, [r3]
   1c370:	bl	11610 <fputc@plt>
   1c374:	ldr	r1, [pc, #40]	; 1c3a4 <_obstack_memory_used@@Base+0x11a0>
   1c378:	ldr	r0, [pc, #40]	; 1c3a8 <_obstack_memory_used@@Base+0x11a4>
   1c37c:	bl	113b8 <printf@plt>
   1c380:	ldr	r1, [pc, #36]	; 1c3ac <_obstack_memory_used@@Base+0x11a8>
   1c384:	ldr	r2, [pc, #36]	; 1c3b0 <_obstack_memory_used@@Base+0x11ac>
   1c388:	ldr	r0, [pc, #36]	; 1c3b4 <_obstack_memory_used@@Base+0x11b0>
   1c38c:	bl	113b8 <printf@plt>
   1c390:	ldr	r1, [pc, #32]	; 1c3b8 <_obstack_memory_used@@Base+0x11b4>
   1c394:	ldr	r0, [pc, #32]	; 1c3bc <_obstack_memory_used@@Base+0x11b8>
   1c398:	pop	{r4, lr}
   1c39c:	b	113b8 <printf@plt>
   1c3a0:	andeq	r7, r3, ip, asr #22
   1c3a4:	andeq	r6, r2, ip, lsr #8
   1c3a8:	andeq	r6, r2, r4, asr #8
   1c3ac:	andeq	r6, r2, ip, asr r1
   1c3b0:	andeq	r6, r2, r8, asr r4
   1c3b4:	andeq	r6, r2, r0, lsl #9
   1c3b8:	muleq	r2, r4, r4
   1c3bc:			; <UNDEFINED> instruction: 0x000264b4
   1c3c0:	push	{r4, r5, r6, lr}
   1c3c4:	mov	r6, r0
   1c3c8:	mov	r5, r1
   1c3cc:	mov	r4, r2
   1c3d0:	bl	22810 <argp_error@@Base+0x1994>
   1c3d4:	cmp	r0, #0
   1c3d8:	popne	{r4, r5, r6, pc}
   1c3dc:	cmp	r6, #0
   1c3e0:	beq	1c3f0 <_obstack_memory_used@@Base+0x11ec>
   1c3e4:	cmp	r5, #0
   1c3e8:	cmpne	r4, #0
   1c3ec:	popeq	{r4, r5, r6, pc}
   1c3f0:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c3f4:	push	{r4, lr}
   1c3f8:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1c3fc:	cmp	r0, #0
   1c400:	popne	{r4, pc}
   1c404:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c408:	push	{r4, lr}
   1c40c:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1c410:	cmp	r0, #0
   1c414:	popne	{r4, pc}
   1c418:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c41c:	push	{r4, lr}
   1c420:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1c424:	cmp	r0, #0
   1c428:	popne	{r4, pc}
   1c42c:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c430:	push	{r4, r5, r6, lr}
   1c434:	mov	r5, r0
   1c438:	mov	r4, r1
   1c43c:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   1c440:	cmp	r0, #0
   1c444:	popne	{r4, r5, r6, pc}
   1c448:	adds	r4, r4, #0
   1c44c:	movne	r4, #1
   1c450:	cmp	r5, #0
   1c454:	orreq	r4, r4, #1
   1c458:	cmp	r4, #0
   1c45c:	popeq	{r4, r5, r6, pc}
   1c460:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c464:	push	{r4, lr}
   1c468:	cmp	r1, #0
   1c46c:	orreq	r1, r1, #1
   1c470:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   1c474:	cmp	r0, #0
   1c478:	popne	{r4, pc}
   1c47c:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c480:	push	{r4, r5, r6, lr}
   1c484:	mov	r6, r0
   1c488:	mov	r5, r1
   1c48c:	mov	r4, r2
   1c490:	bl	22810 <argp_error@@Base+0x1994>
   1c494:	cmp	r0, #0
   1c498:	popne	{r4, r5, r6, pc}
   1c49c:	cmp	r6, #0
   1c4a0:	beq	1c4b0 <_obstack_memory_used@@Base+0x12ac>
   1c4a4:	cmp	r5, #0
   1c4a8:	cmpne	r4, #0
   1c4ac:	popeq	{r4, r5, r6, pc}
   1c4b0:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c4b4:	cmp	r2, #0
   1c4b8:	cmpne	r1, #0
   1c4bc:	moveq	r2, #1
   1c4c0:	moveq	r1, r2
   1c4c4:	push	{r4, lr}
   1c4c8:	bl	22810 <argp_error@@Base+0x1994>
   1c4cc:	cmp	r0, #0
   1c4d0:	popne	{r4, pc}
   1c4d4:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c4d8:	push	{r4, lr}
   1c4dc:	mov	r2, r1
   1c4e0:	mov	r1, r0
   1c4e4:	mov	r0, #0
   1c4e8:	bl	22810 <argp_error@@Base+0x1994>
   1c4ec:	cmp	r0, #0
   1c4f0:	popne	{r4, pc}
   1c4f4:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c4f8:	cmp	r1, #0
   1c4fc:	cmpne	r0, #0
   1c500:	moveq	r2, #1
   1c504:	movne	r2, r1
   1c508:	moveq	r1, r2
   1c50c:	movne	r1, r0
   1c510:	push	{r4, lr}
   1c514:	mov	r0, #0
   1c518:	bl	22810 <argp_error@@Base+0x1994>
   1c51c:	cmp	r0, #0
   1c520:	popne	{r4, pc}
   1c524:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c528:	cmp	r0, #0
   1c52c:	push	{r4, r5, r6, lr}
   1c530:	mov	r5, r1
   1c534:	ldr	r4, [r1]
   1c538:	beq	1c574 <_obstack_memory_used@@Base+0x1370>
   1c53c:	lsr	r2, r4, #1
   1c540:	add	r3, r2, #1
   1c544:	mvn	r3, r3
   1c548:	cmp	r4, r3
   1c54c:	bhi	1c590 <_obstack_memory_used@@Base+0x138c>
   1c550:	add	r4, r4, #1
   1c554:	add	r4, r4, r2
   1c558:	mov	r1, r4
   1c55c:	mov	r2, #1
   1c560:	bl	22810 <argp_error@@Base+0x1994>
   1c564:	cmp	r0, #0
   1c568:	beq	1c594 <_obstack_memory_used@@Base+0x1390>
   1c56c:	str	r4, [r5]
   1c570:	pop	{r4, r5, r6, pc}
   1c574:	cmp	r4, #0
   1c578:	moveq	r4, #64	; 0x40
   1c57c:	mov	r1, r4
   1c580:	mov	r2, #1
   1c584:	bl	22810 <argp_error@@Base+0x1994>
   1c588:	cmp	r0, #0
   1c58c:	bne	1c56c <_obstack_memory_used@@Base+0x1368>
   1c590:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c594:	cmp	r4, #0
   1c598:	bne	1c590 <_obstack_memory_used@@Base+0x138c>
   1c59c:	str	r4, [r5]
   1c5a0:	pop	{r4, r5, r6, pc}
   1c5a4:	cmp	r0, #0
   1c5a8:	push	{r4, r5, r6, lr}
   1c5ac:	mov	r5, r1
   1c5b0:	ldr	r4, [r1]
   1c5b4:	mov	r6, r2
   1c5b8:	beq	1c5fc <_obstack_memory_used@@Base+0x13f8>
   1c5bc:	lsr	r1, r4, #1
   1c5c0:	add	r3, r1, #1
   1c5c4:	mvn	r3, r3
   1c5c8:	cmp	r4, r3
   1c5cc:	bhi	1c634 <_obstack_memory_used@@Base+0x1430>
   1c5d0:	add	r4, r4, #1
   1c5d4:	add	r4, r4, r1
   1c5d8:	mov	r1, r4
   1c5dc:	bl	22810 <argp_error@@Base+0x1994>
   1c5e0:	cmp	r0, #0
   1c5e4:	bne	1c5f4 <_obstack_memory_used@@Base+0x13f0>
   1c5e8:	cmp	r4, #0
   1c5ec:	cmpne	r6, #0
   1c5f0:	bne	1c634 <_obstack_memory_used@@Base+0x1430>
   1c5f4:	str	r4, [r5]
   1c5f8:	pop	{r4, r5, r6, pc}
   1c5fc:	cmp	r4, #0
   1c600:	bne	1c61c <_obstack_memory_used@@Base+0x1418>
   1c604:	mov	r1, r2
   1c608:	mov	r0, #64	; 0x40
   1c60c:	bl	230cc <argp_error@@Base+0x2250>
   1c610:	cmp	r0, #0
   1c614:	movne	r4, r0
   1c618:	addeq	r4, r0, #1
   1c61c:	mov	r2, r6
   1c620:	mov	r1, r4
   1c624:	mov	r0, #0
   1c628:	bl	22810 <argp_error@@Base+0x1994>
   1c62c:	cmp	r0, #0
   1c630:	bne	1c5f4 <_obstack_memory_used@@Base+0x13f0>
   1c634:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c63c:	sub	sp, sp, #12
   1c640:	ldr	r6, [r1]
   1c644:	mov	r8, r1
   1c648:	mov	r9, r0
   1c64c:	asrs	r4, r6, #1
   1c650:	mov	sl, r2
   1c654:	mov	fp, r3
   1c658:	ldr	r7, [sp, #48]	; 0x30
   1c65c:	bmi	1c7d8 <_obstack_memory_used@@Base+0x15d4>
   1c660:	mvn	r1, #-2147483648	; 0x80000000
   1c664:	sub	r1, r1, r4
   1c668:	cmp	r6, r1
   1c66c:	movle	r1, #0
   1c670:	movgt	r1, #1
   1c674:	mvn	r3, fp
   1c678:	cmp	r1, #0
   1c67c:	addeq	r4, r4, r6
   1c680:	mvnne	r4, #-2147483648	; 0x80000000
   1c684:	lsr	r3, r3, #31
   1c688:	cmp	fp, r4
   1c68c:	movge	r2, #0
   1c690:	andlt	r2, r3, #1
   1c694:	cmp	r2, #0
   1c698:	beq	1c788 <_obstack_memory_used@@Base+0x1584>
   1c69c:	cmp	r7, #0
   1c6a0:	blt	1c870 <_obstack_memory_used@@Base+0x166c>
   1c6a4:	bne	1c868 <_obstack_memory_used@@Base+0x1664>
   1c6a8:	mov	r5, #64	; 0x40
   1c6ac:	mov	r1, r7
   1c6b0:	mov	r0, r5
   1c6b4:	str	r3, [sp, #4]
   1c6b8:	bl	232d8 <argp_error@@Base+0x245c>
   1c6bc:	mov	r1, r7
   1c6c0:	mov	r4, r0
   1c6c4:	mov	r0, r5
   1c6c8:	bl	234f8 <argp_error@@Base+0x267c>
   1c6cc:	ldr	r3, [sp, #4]
   1c6d0:	sub	r5, r5, r1
   1c6d4:	cmp	r9, #0
   1c6d8:	sub	r2, r4, r6
   1c6dc:	streq	r9, [r8]
   1c6e0:	cmp	r2, sl
   1c6e4:	bge	1c768 <_obstack_memory_used@@Base+0x1564>
   1c6e8:	cmp	sl, #0
   1c6ec:	blt	1c808 <_obstack_memory_used@@Base+0x1604>
   1c6f0:	cmp	r6, #0
   1c6f4:	blt	1c714 <_obstack_memory_used@@Base+0x1510>
   1c6f8:	mvn	r2, #-2147483648	; 0x80000000
   1c6fc:	sub	r2, r2, sl
   1c700:	cmp	r6, r2
   1c704:	movle	r2, #0
   1c708:	movgt	r2, #1
   1c70c:	cmp	r2, #0
   1c710:	bne	1c804 <_obstack_memory_used@@Base+0x1600>
   1c714:	add	r6, r6, sl
   1c718:	cmp	fp, r6
   1c71c:	movge	r3, #0
   1c720:	andlt	r3, r3, #1
   1c724:	cmp	r3, #0
   1c728:	mov	r4, r6
   1c72c:	bne	1c804 <_obstack_memory_used@@Base+0x1600>
   1c730:	cmp	r7, #0
   1c734:	blt	1c81c <_obstack_memory_used@@Base+0x1618>
   1c738:	beq	1c764 <_obstack_memory_used@@Base+0x1560>
   1c73c:	cmp	r6, #0
   1c740:	blt	1c8c0 <_obstack_memory_used@@Base+0x16bc>
   1c744:	mov	r1, r7
   1c748:	mvn	r0, #-2147483648	; 0x80000000
   1c74c:	bl	232d8 <argp_error@@Base+0x245c>
   1c750:	cmp	r6, r0
   1c754:	movle	r0, #0
   1c758:	movgt	r0, #1
   1c75c:	cmp	r0, #0
   1c760:	bne	1c804 <_obstack_memory_used@@Base+0x1600>
   1c764:	mul	r5, r6, r7
   1c768:	mov	r1, r5
   1c76c:	mov	r0, r9
   1c770:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   1c774:	cmp	r0, #0
   1c778:	beq	1c7ec <_obstack_memory_used@@Base+0x15e8>
   1c77c:	str	r4, [r8]
   1c780:	add	sp, sp, #12
   1c784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c788:	cmp	r7, #0
   1c78c:	blt	1c848 <_obstack_memory_used@@Base+0x1644>
   1c790:	beq	1c6a8 <_obstack_memory_used@@Base+0x14a4>
   1c794:	cmp	r4, #0
   1c798:	blt	1c878 <_obstack_memory_used@@Base+0x1674>
   1c79c:	mov	r1, r7
   1c7a0:	mvn	r0, #-2147483648	; 0x80000000
   1c7a4:	str	r3, [sp, #4]
   1c7a8:	bl	232d8 <argp_error@@Base+0x245c>
   1c7ac:	ldr	r3, [sp, #4]
   1c7b0:	cmp	r0, r4
   1c7b4:	movge	r0, #0
   1c7b8:	movlt	r0, #1
   1c7bc:	cmp	r0, #0
   1c7c0:	mvnne	r5, #-2147483648	; 0x80000000
   1c7c4:	bne	1c6ac <_obstack_memory_used@@Base+0x14a8>
   1c7c8:	mul	r5, r7, r4
   1c7cc:	cmp	r5, #63	; 0x3f
   1c7d0:	bgt	1c6d4 <_obstack_memory_used@@Base+0x14d0>
   1c7d4:	b	1c6a8 <_obstack_memory_used@@Base+0x14a4>
   1c7d8:	rsb	r1, r4, #-2147483648	; 0x80000000
   1c7dc:	cmp	r6, r1
   1c7e0:	movge	r1, #0
   1c7e4:	movlt	r1, #1
   1c7e8:	b	1c674 <_obstack_memory_used@@Base+0x1470>
   1c7ec:	adds	r5, r5, #0
   1c7f0:	movne	r5, #1
   1c7f4:	cmp	r9, #0
   1c7f8:	orreq	r5, r5, #1
   1c7fc:	cmp	r5, #0
   1c800:	beq	1c77c <_obstack_memory_used@@Base+0x1578>
   1c804:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c808:	rsb	r2, sl, #-2147483648	; 0x80000000
   1c80c:	cmp	r6, r2
   1c810:	movge	r2, #0
   1c814:	movlt	r2, #1
   1c818:	b	1c70c <_obstack_memory_used@@Base+0x1508>
   1c81c:	cmp	r6, #0
   1c820:	blt	1c8a4 <_obstack_memory_used@@Base+0x16a0>
   1c824:	cmn	r7, #1
   1c828:	beq	1c764 <_obstack_memory_used@@Base+0x1560>
   1c82c:	mov	r1, r7
   1c830:	mov	r0, #-2147483648	; 0x80000000
   1c834:	bl	232d8 <argp_error@@Base+0x245c>
   1c838:	cmp	r6, r0
   1c83c:	movle	r0, #0
   1c840:	movgt	r0, #1
   1c844:	b	1c75c <_obstack_memory_used@@Base+0x1558>
   1c848:	cmp	r4, #0
   1c84c:	blt	1c8e4 <_obstack_memory_used@@Base+0x16e0>
   1c850:	cmn	r7, #1
   1c854:	beq	1c7c8 <_obstack_memory_used@@Base+0x15c4>
   1c858:	str	r3, [sp, #4]
   1c85c:	mov	r1, r7
   1c860:	mov	r0, #-2147483648	; 0x80000000
   1c864:	b	1c7a8 <_obstack_memory_used@@Base+0x15a4>
   1c868:	mov	r4, fp
   1c86c:	b	1c79c <_obstack_memory_used@@Base+0x1598>
   1c870:	mov	r4, fp
   1c874:	b	1c850 <_obstack_memory_used@@Base+0x164c>
   1c878:	cmn	r4, #1
   1c87c:	beq	1c7c8 <_obstack_memory_used@@Base+0x15c4>
   1c880:	mov	r1, r4
   1c884:	mov	r0, #-2147483648	; 0x80000000
   1c888:	str	r3, [sp, #4]
   1c88c:	bl	232d8 <argp_error@@Base+0x245c>
   1c890:	ldr	r3, [sp, #4]
   1c894:	cmp	r7, r0
   1c898:	movle	r0, #0
   1c89c:	movgt	r0, #1
   1c8a0:	b	1c7bc <_obstack_memory_used@@Base+0x15b8>
   1c8a4:	mov	r1, r7
   1c8a8:	mvn	r0, #-2147483648	; 0x80000000
   1c8ac:	bl	232d8 <argp_error@@Base+0x245c>
   1c8b0:	cmp	r6, r0
   1c8b4:	movge	r0, #0
   1c8b8:	movlt	r0, #1
   1c8bc:	b	1c75c <_obstack_memory_used@@Base+0x1558>
   1c8c0:	cmn	r6, #1
   1c8c4:	beq	1c764 <_obstack_memory_used@@Base+0x1560>
   1c8c8:	mov	r1, r6
   1c8cc:	mov	r0, #-2147483648	; 0x80000000
   1c8d0:	bl	232d8 <argp_error@@Base+0x245c>
   1c8d4:	cmp	r7, r0
   1c8d8:	movle	r0, #0
   1c8dc:	movgt	r0, #1
   1c8e0:	b	1c75c <_obstack_memory_used@@Base+0x1558>
   1c8e4:	mov	r1, r7
   1c8e8:	mvn	r0, #-2147483648	; 0x80000000
   1c8ec:	str	r3, [sp, #4]
   1c8f0:	bl	232d8 <argp_error@@Base+0x245c>
   1c8f4:	ldr	r3, [sp, #4]
   1c8f8:	cmp	r0, r4
   1c8fc:	movle	r0, #0
   1c900:	movgt	r0, #1
   1c904:	b	1c7bc <_obstack_memory_used@@Base+0x15b8>
   1c908:	push	{r4, lr}
   1c90c:	mov	r1, #1
   1c910:	bl	1ca68 <_obstack_memory_used@@Base+0x1864>
   1c914:	cmp	r0, #0
   1c918:	popne	{r4, pc}
   1c91c:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c920:	push	{r4, lr}
   1c924:	mov	r1, #1
   1c928:	bl	1ca68 <_obstack_memory_used@@Base+0x1864>
   1c92c:	cmp	r0, #0
   1c930:	popne	{r4, pc}
   1c934:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c938:	push	{r4, lr}
   1c93c:	bl	1ca68 <_obstack_memory_used@@Base+0x1864>
   1c940:	cmp	r0, #0
   1c944:	popne	{r4, pc}
   1c948:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c94c:	push	{r4, lr}
   1c950:	bl	1ca68 <_obstack_memory_used@@Base+0x1864>
   1c954:	cmp	r0, #0
   1c958:	popne	{r4, pc}
   1c95c:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c960:	push	{r4, r5, r6, lr}
   1c964:	mov	r6, r0
   1c968:	mov	r0, r1
   1c96c:	mov	r4, r1
   1c970:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1c974:	subs	r5, r0, #0
   1c978:	beq	1c990 <_obstack_memory_used@@Base+0x178c>
   1c97c:	mov	r2, r4
   1c980:	mov	r1, r6
   1c984:	bl	1140c <memcpy@plt>
   1c988:	mov	r0, r5
   1c98c:	pop	{r4, r5, r6, pc}
   1c990:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c994:	push	{r4, r5, r6, lr}
   1c998:	mov	r6, r0
   1c99c:	mov	r0, r1
   1c9a0:	mov	r4, r1
   1c9a4:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1c9a8:	subs	r5, r0, #0
   1c9ac:	beq	1c9c4 <_obstack_memory_used@@Base+0x17c0>
   1c9b0:	mov	r2, r4
   1c9b4:	mov	r1, r6
   1c9b8:	bl	1140c <memcpy@plt>
   1c9bc:	mov	r0, r5
   1c9c0:	pop	{r4, r5, r6, pc}
   1c9c4:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1c9c8:	push	{r4, r5, r6, lr}
   1c9cc:	mov	r6, r0
   1c9d0:	add	r0, r1, #1
   1c9d4:	mov	r4, r1
   1c9d8:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1c9dc:	subs	r5, r0, #0
   1c9e0:	beq	1ca00 <_obstack_memory_used@@Base+0x17fc>
   1c9e4:	mov	r3, #0
   1c9e8:	mov	r1, r6
   1c9ec:	strb	r3, [r5, r4]
   1c9f0:	mov	r2, r4
   1c9f4:	bl	1140c <memcpy@plt>
   1c9f8:	mov	r0, r5
   1c9fc:	pop	{r4, r5, r6, pc}
   1ca00:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1ca04:	push	{r4, r5, r6, lr}
   1ca08:	mov	r6, r0
   1ca0c:	bl	11544 <strlen@plt>
   1ca10:	add	r4, r0, #1
   1ca14:	mov	r0, r4
   1ca18:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1ca1c:	subs	r5, r0, #0
   1ca20:	beq	1ca38 <_obstack_memory_used@@Base+0x1834>
   1ca24:	mov	r2, r4
   1ca28:	mov	r1, r6
   1ca2c:	bl	1140c <memcpy@plt>
   1ca30:	mov	r0, r5
   1ca34:	pop	{r4, r5, r6, pc}
   1ca38:	bl	1ca3c <_obstack_memory_used@@Base+0x1838>
   1ca3c:	ldr	r1, [pc, #24]	; 1ca5c <_obstack_memory_used@@Base+0x1858>
   1ca40:	push	{r4, lr}
   1ca44:	ldr	r0, [r1]
   1ca48:	ldr	r3, [pc, #16]	; 1ca60 <_obstack_memory_used@@Base+0x185c>
   1ca4c:	ldr	r2, [pc, #16]	; 1ca64 <_obstack_memory_used@@Base+0x1860>
   1ca50:	mov	r1, #0
   1ca54:	bl	114a8 <error@plt>
   1ca58:	bl	116ac <abort@plt>
   1ca5c:	andeq	r7, r3, r8, lsr #22
   1ca60:	andeq	r6, r2, ip, ror #2
   1ca64:	andeq	r3, r2, ip, asr fp
   1ca68:	cmp	r1, #0
   1ca6c:	cmpne	r0, #0
   1ca70:	moveq	r1, #1
   1ca74:	moveq	r0, r1
   1ca78:	umull	r2, r3, r0, r1
   1ca7c:	adds	r3, r3, #0
   1ca80:	movne	r3, #1
   1ca84:	cmp	r2, #0
   1ca88:	blt	1ca98 <_obstack_memory_used@@Base+0x1894>
   1ca8c:	cmp	r3, #0
   1ca90:	bne	1ca98 <_obstack_memory_used@@Base+0x1894>
   1ca94:	b	1134c <calloc@plt>
   1ca98:	push	{r4, lr}
   1ca9c:	bl	11568 <__errno_location@plt>
   1caa0:	mov	r3, #12
   1caa4:	str	r3, [r0]
   1caa8:	mov	r0, #0
   1caac:	pop	{r4, pc}
   1cab0:	cmp	r0, #0
   1cab4:	moveq	r0, #1
   1cab8:	cmp	r0, #0
   1cabc:	blt	1cac4 <_obstack_memory_used@@Base+0x18c0>
   1cac0:	b	114cc <malloc@plt>
   1cac4:	push	{r4, lr}
   1cac8:	bl	11568 <__errno_location@plt>
   1cacc:	mov	r3, #12
   1cad0:	str	r3, [r0]
   1cad4:	mov	r0, #0
   1cad8:	pop	{r4, pc}
   1cadc:	cmp	r0, #0
   1cae0:	beq	1cb04 <_obstack_memory_used@@Base+0x1900>
   1cae4:	cmp	r1, #0
   1cae8:	push	{lr}		; (str lr, [sp, #-4]!)
   1caec:	sub	sp, sp, #12
   1caf0:	beq	1cb0c <_obstack_memory_used@@Base+0x1908>
   1caf4:	blt	1cb24 <_obstack_memory_used@@Base+0x1920>
   1caf8:	add	sp, sp, #12
   1cafc:	pop	{lr}		; (ldr lr, [sp], #4)
   1cb00:	b	11448 <realloc@plt>
   1cb04:	mov	r0, r1
   1cb08:	b	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1cb0c:	str	r1, [sp, #4]
   1cb10:	bl	1acdc <argp_parse@@Base+0xf7c>
   1cb14:	ldr	r3, [sp, #4]
   1cb18:	mov	r0, r3
   1cb1c:	add	sp, sp, #12
   1cb20:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb24:	bl	11568 <__errno_location@plt>
   1cb28:	mov	r2, #12
   1cb2c:	mov	r3, #0
   1cb30:	str	r2, [r0]
   1cb34:	b	1cb18 <_obstack_memory_used@@Base+0x1914>
   1cb38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb3c:	mov	r7, r3
   1cb40:	ldr	sl, [r0, #12]
   1cb44:	sub	sp, sp, #36	; 0x24
   1cb48:	ldr	r3, [r0, #16]
   1cb4c:	cmp	sl, #0
   1cb50:	mov	fp, r0
   1cb54:	mov	r6, r2
   1cb58:	str	r3, [sp, #16]
   1cb5c:	mov	r9, r1
   1cb60:	ldr	r8, [sp, #72]	; 0x48
   1cb64:	ldr	r5, [sp, #76]	; 0x4c
   1cb68:	beq	1cf38 <_obstack_memory_used@@Base+0x1d34>
   1cb6c:	mov	r1, #11
   1cb70:	mov	r0, sl
   1cb74:	bl	11550 <strchr@plt>
   1cb78:	cmp	r6, #0
   1cb7c:	bne	1ce54 <_obstack_memory_used@@Base+0x1c50>
   1cb80:	cmp	r0, #0
   1cb84:	ldr	r3, [fp, #20]
   1cb88:	beq	1d090 <_obstack_memory_used@@Base+0x1e8c>
   1cb8c:	cmp	r3, #0
   1cb90:	sub	r4, r0, sl
   1cb94:	beq	1d028 <_obstack_memory_used@@Base+0x1e24>
   1cb98:	cmp	r4, #0
   1cb9c:	beq	1cfc8 <_obstack_memory_used@@Base+0x1dc4>
   1cba0:	mov	r0, sl
   1cba4:	mov	r1, r4
   1cba8:	bl	11400 <strndup@plt>
   1cbac:	mov	r3, #1
   1cbb0:	str	r3, [sp, #24]
   1cbb4:	mov	sl, r0
   1cbb8:	adds	r3, r0, #0
   1cbbc:	movne	r3, #1
   1cbc0:	str	r3, [sp, #20]
   1cbc4:	mov	r1, r9
   1cbc8:	mov	r0, fp
   1cbcc:	bl	1ab80 <argp_parse@@Base+0xe20>
   1cbd0:	ldr	r3, [fp, #20]
   1cbd4:	str	r0, [sp, #12]
   1cbd8:	ldr	r0, [pc, #1272]	; 1d0d8 <_obstack_memory_used@@Base+0x1ed4>
   1cbdc:	ldr	r2, [sp, #12]
   1cbe0:	mov	r1, sl
   1cbe4:	blx	r3
   1cbe8:	subs	r3, r0, #0
   1cbec:	beq	1cf78 <_obstack_memory_used@@Base+0x1d74>
   1cbf0:	cmp	r7, #0
   1cbf4:	beq	1cc18 <_obstack_memory_used@@Base+0x1a14>
   1cbf8:	ldr	r2, [r5, #28]
   1cbfc:	ldr	r1, [r5, #32]
   1cc00:	cmp	r2, r1
   1cc04:	bcs	1cf80 <_obstack_memory_used@@Base+0x1d7c>
   1cc08:	add	r0, r2, #1
   1cc0c:	mov	r1, #10
   1cc10:	str	r0, [r5, #28]
   1cc14:	strb	r1, [r2]
   1cc18:	ldr	r2, [sp, #24]
   1cc1c:	cmp	sl, r3
   1cc20:	movne	r2, #0
   1cc24:	andeq	r2, r2, #1
   1cc28:	cmp	r2, #0
   1cc2c:	beq	1ce98 <_obstack_memory_used@@Base+0x1c94>
   1cc30:	ldr	r0, [r5, #28]
   1cc34:	ldr	r1, [r5, #32]
   1cc38:	add	r2, r0, r4
   1cc3c:	cmp	r1, r2
   1cc40:	bcs	1cef8 <_obstack_memory_used@@Base+0x1cf4>
   1cc44:	mov	r1, r4
   1cc48:	mov	r0, r5
   1cc4c:	str	r3, [sp, #24]
   1cc50:	bl	22e84 <argp_error@@Base+0x2008>
   1cc54:	ldr	r3, [sp, #24]
   1cc58:	cmp	r0, #0
   1cc5c:	bne	1cef4 <_obstack_memory_used@@Base+0x1cf0>
   1cc60:	ldr	r4, [r5, #28]
   1cc64:	ldr	r1, [r5, #24]
   1cc68:	ldr	r2, [r5, #16]
   1cc6c:	sub	r4, r4, r1
   1cc70:	cmp	r4, r2
   1cc74:	bhi	1cf1c <_obstack_memory_used@@Base+0x1d18>
   1cc78:	ldr	r2, [r5, #20]
   1cc7c:	ldr	r1, [r5, #4]
   1cc80:	bic	r2, r2, r2, asr #31
   1cc84:	cmp	r1, r2
   1cc88:	bcs	1ccac <_obstack_memory_used@@Base+0x1aa8>
   1cc8c:	ldr	r2, [r5, #28]
   1cc90:	ldr	r1, [r5, #32]
   1cc94:	cmp	r2, r1
   1cc98:	bcs	1cfa4 <_obstack_memory_used@@Base+0x1da0>
   1cc9c:	add	r0, r2, #1
   1cca0:	mov	r1, #10
   1cca4:	str	r0, [r5, #28]
   1cca8:	strb	r1, [r2]
   1ccac:	cmp	sl, r3
   1ccb0:	moveq	r4, #1
   1ccb4:	beq	1ccc4 <_obstack_memory_used@@Base+0x1ac0>
   1ccb8:	mov	r0, r3
   1ccbc:	bl	1acdc <argp_parse@@Base+0xf7c>
   1ccc0:	mov	r4, #1
   1ccc4:	ldr	r3, [sp, #20]
   1ccc8:	cmp	r3, #0
   1cccc:	beq	1cce4 <_obstack_memory_used@@Base+0x1ae0>
   1ccd0:	ldr	r3, [fp, #20]
   1ccd4:	cmp	r3, #0
   1ccd8:	beq	1cdc8 <_obstack_memory_used@@Base+0x1bc4>
   1ccdc:	mov	r0, sl
   1cce0:	bl	1acdc <argp_parse@@Base+0xf7c>
   1cce4:	cmp	r6, #0
   1cce8:	beq	1cdc8 <_obstack_memory_used@@Base+0x1bc4>
   1ccec:	ldr	r3, [fp, #20]
   1ccf0:	cmp	r3, #0
   1ccf4:	beq	1cdc8 <_obstack_memory_used@@Base+0x1bc4>
   1ccf8:	ldr	r2, [sp, #12]
   1ccfc:	mov	r1, #0
   1cd00:	ldr	r0, [pc, #980]	; 1d0dc <_obstack_memory_used@@Base+0x1ed8>
   1cd04:	blx	r3
   1cd08:	subs	sl, r0, #0
   1cd0c:	beq	1cdc8 <_obstack_memory_used@@Base+0x1bc4>
   1cd10:	orrs	r3, r7, r4
   1cd14:	beq	1cd38 <_obstack_memory_used@@Base+0x1b34>
   1cd18:	ldr	r3, [r5, #28]
   1cd1c:	ldr	r2, [r5, #32]
   1cd20:	cmp	r3, r2
   1cd24:	bcs	1d060 <_obstack_memory_used@@Base+0x1e5c>
   1cd28:	add	r1, r3, #1
   1cd2c:	mov	r2, #10
   1cd30:	str	r1, [r5, #28]
   1cd34:	strb	r2, [r3]
   1cd38:	mov	r0, sl
   1cd3c:	bl	11544 <strlen@plt>
   1cd40:	subs	r4, r0, #0
   1cd44:	beq	1cd70 <_obstack_memory_used@@Base+0x1b6c>
   1cd48:	ldr	r0, [r5, #28]
   1cd4c:	ldr	r2, [r5, #32]
   1cd50:	add	r3, r0, r4
   1cd54:	cmp	r2, r3
   1cd58:	bcs	1cfd8 <_obstack_memory_used@@Base+0x1dd4>
   1cd5c:	mov	r1, r4
   1cd60:	mov	r0, r5
   1cd64:	bl	22e84 <argp_error@@Base+0x2008>
   1cd68:	cmp	r0, #0
   1cd6c:	bne	1cfd4 <_obstack_memory_used@@Base+0x1dd0>
   1cd70:	mov	r0, sl
   1cd74:	bl	1acdc <argp_parse@@Base+0xf7c>
   1cd78:	ldr	r3, [r5, #28]
   1cd7c:	ldr	r1, [r5, #24]
   1cd80:	ldr	r2, [r5, #16]
   1cd84:	sub	r3, r3, r1
   1cd88:	cmp	r3, r2
   1cd8c:	bhi	1cff4 <_obstack_memory_used@@Base+0x1df0>
   1cd90:	ldr	r3, [r5, #20]
   1cd94:	ldr	r2, [r5, #4]
   1cd98:	bic	r3, r3, r3, asr #31
   1cd9c:	cmp	r2, r3
   1cda0:	bcs	1cf30 <_obstack_memory_used@@Base+0x1d2c>
   1cda4:	ldr	r3, [r5, #28]
   1cda8:	ldr	r2, [r5, #32]
   1cdac:	cmp	r3, r2
   1cdb0:	bcs	1d044 <_obstack_memory_used@@Base+0x1e40>
   1cdb4:	mov	r4, #1
   1cdb8:	add	r2, r3, r4
   1cdbc:	str	r2, [r5, #28]
   1cdc0:	mov	r2, #10
   1cdc4:	strb	r2, [r3]
   1cdc8:	ldr	fp, [sp, #16]
   1cdcc:	cmp	fp, #0
   1cdd0:	beq	1ce48 <_obstack_memory_used@@Base+0x1c44>
   1cdd4:	ldr	r3, [fp]
   1cdd8:	cmp	r3, #0
   1cddc:	beq	1ce48 <_obstack_memory_used@@Base+0x1c44>
   1cde0:	eor	r2, r4, #1
   1cde4:	and	r2, r2, #1
   1cde8:	clz	sl, r8
   1cdec:	lsr	sl, sl, #5
   1cdf0:	orrs	r2, sl, r2
   1cdf4:	bne	1ce10 <_obstack_memory_used@@Base+0x1c0c>
   1cdf8:	b	1d07c <_obstack_memory_used@@Base+0x1e78>
   1cdfc:	cmp	r4, #0
   1ce00:	movne	r2, sl
   1ce04:	orreq	r2, sl, #1
   1ce08:	cmp	r2, #0
   1ce0c:	beq	1ce48 <_obstack_memory_used@@Base+0x1c44>
   1ce10:	orrs	r2, r7, r4
   1ce14:	mov	r0, r3
   1ce18:	str	r5, [sp, #4]
   1ce1c:	movne	r3, #1
   1ce20:	moveq	r3, #0
   1ce24:	str	r8, [sp]
   1ce28:	mov	r2, r6
   1ce2c:	mov	r1, r9
   1ce30:	bl	1cb38 <_obstack_memory_used@@Base+0x1934>
   1ce34:	ldr	r3, [fp, #16]
   1ce38:	add	fp, fp, #16
   1ce3c:	cmp	r3, #0
   1ce40:	orr	r4, r4, r0
   1ce44:	bne	1cdfc <_obstack_memory_used@@Base+0x1bf8>
   1ce48:	mov	r0, r4
   1ce4c:	add	sp, sp, #36	; 0x24
   1ce50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce54:	cmp	r0, #0
   1ce58:	addne	sl, r0, #1
   1ce5c:	beq	1d020 <_obstack_memory_used@@Base+0x1e1c>
   1ce60:	ldr	r3, [fp, #20]
   1ce64:	cmp	r3, #0
   1ce68:	beq	1d000 <_obstack_memory_used@@Base+0x1dfc>
   1ce6c:	mov	r3, #0
   1ce70:	mov	r1, r9
   1ce74:	mov	r0, fp
   1ce78:	mov	r4, r3
   1ce7c:	str	r3, [sp, #20]
   1ce80:	bl	1ab80 <argp_parse@@Base+0xe20>
   1ce84:	str	r4, [sp, #24]
   1ce88:	ldr	r3, [fp, #20]
   1ce8c:	str	r0, [sp, #12]
   1ce90:	ldr	r0, [pc, #584]	; 1d0e0 <_obstack_memory_used@@Base+0x1edc>
   1ce94:	b	1cbdc <_obstack_memory_used@@Base+0x19d8>
   1ce98:	mov	r0, r3
   1ce9c:	str	r3, [sp, #24]
   1cea0:	bl	11544 <strlen@plt>
   1cea4:	ldr	r3, [sp, #24]
   1cea8:	subs	r4, r0, #0
   1ceac:	beq	1cc60 <_obstack_memory_used@@Base+0x1a5c>
   1ceb0:	ldr	r0, [r5, #28]
   1ceb4:	ldr	r1, [r5, #32]
   1ceb8:	add	r2, r0, r4
   1cebc:	cmp	r1, r2
   1cec0:	bcs	1cee4 <_obstack_memory_used@@Base+0x1ce0>
   1cec4:	mov	r1, r4
   1cec8:	mov	r0, r5
   1cecc:	str	r3, [sp, #24]
   1ced0:	bl	22e84 <argp_error@@Base+0x2008>
   1ced4:	ldr	r3, [sp, #24]
   1ced8:	cmp	r0, #0
   1cedc:	beq	1cc60 <_obstack_memory_used@@Base+0x1a5c>
   1cee0:	ldr	r0, [r5, #28]
   1cee4:	mov	r2, r4
   1cee8:	mov	r1, r3
   1ceec:	str	r3, [sp, #24]
   1cef0:	b	1cf04 <_obstack_memory_used@@Base+0x1d00>
   1cef4:	ldr	r0, [r5, #28]
   1cef8:	mov	r2, r4
   1cefc:	mov	r1, sl
   1cf00:	str	r3, [sp, #24]
   1cf04:	bl	1140c <memcpy@plt>
   1cf08:	ldr	r2, [r5, #28]
   1cf0c:	ldr	r3, [sp, #24]
   1cf10:	add	r4, r2, r4
   1cf14:	str	r4, [r5, #28]
   1cf18:	b	1cc64 <_obstack_memory_used@@Base+0x1a60>
   1cf1c:	mov	r0, r5
   1cf20:	str	r3, [sp, #24]
   1cf24:	bl	228d8 <argp_error@@Base+0x1a5c>
   1cf28:	ldr	r3, [sp, #24]
   1cf2c:	b	1cc78 <_obstack_memory_used@@Base+0x1a74>
   1cf30:	mov	r4, #1
   1cf34:	b	1cdc8 <_obstack_memory_used@@Base+0x1bc4>
   1cf38:	ldr	r4, [r0, #20]
   1cf3c:	cmp	r4, #0
   1cf40:	beq	1d088 <_obstack_memory_used@@Base+0x1e84>
   1cf44:	bl	1ab80 <argp_parse@@Base+0xe20>
   1cf48:	cmp	r6, #0
   1cf4c:	ldr	r3, [fp, #20]
   1cf50:	strne	sl, [sp, #20]
   1cf54:	strne	sl, [sp, #24]
   1cf58:	movne	r4, sl
   1cf5c:	streq	r6, [sp, #20]
   1cf60:	streq	r6, [sp, #24]
   1cf64:	moveq	r4, r6
   1cf68:	str	r0, [sp, #12]
   1cf6c:	ldrne	r0, [pc, #364]	; 1d0e0 <_obstack_memory_used@@Base+0x1edc>
   1cf70:	ldreq	r0, [pc, #352]	; 1d0d8 <_obstack_memory_used@@Base+0x1ed4>
   1cf74:	b	1cbdc <_obstack_memory_used@@Base+0x19d8>
   1cf78:	mov	r4, r3
   1cf7c:	b	1ccc4 <_obstack_memory_used@@Base+0x1ac0>
   1cf80:	mov	r1, #1
   1cf84:	mov	r0, r5
   1cf88:	str	r3, [sp, #28]
   1cf8c:	bl	22e84 <argp_error@@Base+0x2008>
   1cf90:	ldr	r3, [sp, #28]
   1cf94:	cmp	r0, #0
   1cf98:	beq	1cc18 <_obstack_memory_used@@Base+0x1a14>
   1cf9c:	ldr	r2, [r5, #28]
   1cfa0:	b	1cc08 <_obstack_memory_used@@Base+0x1a04>
   1cfa4:	mov	r1, #1
   1cfa8:	mov	r0, r5
   1cfac:	str	r3, [sp, #24]
   1cfb0:	bl	22e84 <argp_error@@Base+0x2008>
   1cfb4:	ldr	r3, [sp, #24]
   1cfb8:	cmp	r0, #0
   1cfbc:	beq	1ccac <_obstack_memory_used@@Base+0x1aa8>
   1cfc0:	ldr	r2, [r5, #28]
   1cfc4:	b	1cc9c <_obstack_memory_used@@Base+0x1a98>
   1cfc8:	str	r4, [sp, #20]
   1cfcc:	str	r4, [sp, #24]
   1cfd0:	b	1cbc4 <_obstack_memory_used@@Base+0x19c0>
   1cfd4:	ldr	r0, [r5, #28]
   1cfd8:	mov	r2, r4
   1cfdc:	mov	r1, sl
   1cfe0:	bl	1140c <memcpy@plt>
   1cfe4:	ldr	r3, [r5, #28]
   1cfe8:	add	r4, r3, r4
   1cfec:	str	r4, [r5, #28]
   1cff0:	b	1cd70 <_obstack_memory_used@@Base+0x1b6c>
   1cff4:	mov	r0, r5
   1cff8:	bl	228d8 <argp_error@@Base+0x1a5c>
   1cffc:	b	1cd90 <_obstack_memory_used@@Base+0x1b8c>
   1d000:	cmp	sl, #0
   1d004:	beq	1d084 <_obstack_memory_used@@Base+0x1e80>
   1d008:	str	r3, [sp, #20]
   1d00c:	str	r3, [sp, #24]
   1d010:	mov	r4, r3
   1d014:	str	r3, [sp, #12]
   1d018:	mov	r3, sl
   1d01c:	b	1cbf0 <_obstack_memory_used@@Base+0x19ec>
   1d020:	mov	sl, r0
   1d024:	b	1ce60 <_obstack_memory_used@@Base+0x1c5c>
   1d028:	adds	r3, r4, #0
   1d02c:	movne	r3, #1
   1d030:	str	r3, [sp, #24]
   1d034:	str	r3, [sp, #20]
   1d038:	str	r6, [sp, #12]
   1d03c:	mov	r3, sl
   1d040:	b	1cbf0 <_obstack_memory_used@@Base+0x19ec>
   1d044:	mov	r1, #1
   1d048:	mov	r0, r5
   1d04c:	bl	22e84 <argp_error@@Base+0x2008>
   1d050:	cmp	r0, #0
   1d054:	beq	1cf30 <_obstack_memory_used@@Base+0x1d2c>
   1d058:	ldr	r3, [r5, #28]
   1d05c:	b	1cdb4 <_obstack_memory_used@@Base+0x1bb0>
   1d060:	mov	r1, #1
   1d064:	mov	r0, r5
   1d068:	bl	22e84 <argp_error@@Base+0x2008>
   1d06c:	cmp	r0, #0
   1d070:	beq	1cd38 <_obstack_memory_used@@Base+0x1b34>
   1d074:	ldr	r3, [r5, #28]
   1d078:	b	1cd28 <_obstack_memory_used@@Base+0x1b24>
   1d07c:	mov	r4, #1
   1d080:	b	1ce48 <_obstack_memory_used@@Base+0x1c44>
   1d084:	mov	r4, sl
   1d088:	str	r4, [sp, #12]
   1d08c:	b	1cce4 <_obstack_memory_used@@Base+0x1ae0>
   1d090:	cmp	r3, #0
   1d094:	beq	1d0c0 <_obstack_memory_used@@Base+0x1ebc>
   1d098:	mov	r1, r9
   1d09c:	mov	r0, fp
   1d0a0:	bl	1ab80 <argp_parse@@Base+0xe20>
   1d0a4:	mov	r4, r6
   1d0a8:	ldr	r3, [fp, #20]
   1d0ac:	str	r6, [sp, #20]
   1d0b0:	str	r6, [sp, #24]
   1d0b4:	str	r0, [sp, #12]
   1d0b8:	ldr	r0, [pc, #24]	; 1d0d8 <_obstack_memory_used@@Base+0x1ed4>
   1d0bc:	b	1cbdc <_obstack_memory_used@@Base+0x19d8>
   1d0c0:	mov	r3, sl
   1d0c4:	str	r6, [sp, #20]
   1d0c8:	str	r6, [sp, #24]
   1d0cc:	mov	r4, r6
   1d0d0:	str	r6, [sp, #12]
   1d0d4:	b	1cbf0 <_obstack_memory_used@@Base+0x19ec>
   1d0d8:	andeq	r0, r0, #1
   1d0dc:	andeq	r0, r0, #4
   1d0e0:	andeq	r0, r0, #2
   1d0e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d0e8:	sub	sp, sp, #52	; 0x34
   1d0ec:	mov	r3, r0
   1d0f0:	str	r0, [sp, #20]
   1d0f4:	mov	r0, #16
   1d0f8:	ldr	r6, [r3, #16]
   1d0fc:	ldr	r4, [r3]
   1d100:	str	r1, [sp, #28]
   1d104:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1d108:	subs	r3, r0, #0
   1d10c:	str	r3, [sp, #16]
   1d110:	beq	1d700 <_obstack_memory_used@@Base+0x24fc>
   1d114:	mov	r2, r3
   1d118:	cmp	r4, #0
   1d11c:	mov	r3, #0
   1d120:	str	r3, [r2, #4]
   1d124:	str	r3, [r2, #12]
   1d128:	beq	1d33c <_obstack_memory_used@@Base+0x2138>
   1d12c:	ldr	fp, [r4, #12]
   1d130:	ands	fp, fp, #4
   1d134:	bne	1d714 <_obstack_memory_used@@Base+0x2510>
   1d138:	add	r5, r4, #24
   1d13c:	mov	r7, r4
   1d140:	mov	r9, fp
   1d144:	mov	sl, fp
   1d148:	mov	r4, r2
   1d14c:	b	1d190 <_obstack_memory_used@@Base+0x1f8c>
   1d150:	ldr	r3, [r5, #-12]
   1d154:	tst	r3, #4
   1d158:	addeq	r9, r9, #1
   1d15c:	streq	r9, [r4, #4]
   1d160:	tst	r3, #8
   1d164:	bne	1d18c <_obstack_memory_used@@Base+0x1f88>
   1d168:	sub	r3, r8, #1
   1d16c:	cmp	r3, #254	; 0xfe
   1d170:	bhi	1d18c <_obstack_memory_used@@Base+0x1f88>
   1d174:	bl	11520 <__ctype_b_loc@plt>
   1d178:	lsl	r8, r8, #1
   1d17c:	ldr	r3, [r0]
   1d180:	ldrh	r3, [r3, r8]
   1d184:	tst	r3, #16384	; 0x4000
   1d188:	addne	sl, sl, #1
   1d18c:	add	r5, r5, #24
   1d190:	ldr	r8, [r5, #-20]	; 0xffffffec
   1d194:	cmp	r8, #0
   1d198:	bne	1d150 <_obstack_memory_used@@Base+0x1f4c>
   1d19c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1d1a0:	cmp	r3, #0
   1d1a4:	bne	1d150 <_obstack_memory_used@@Base+0x1f4c>
   1d1a8:	ldr	r3, [r5, #-8]
   1d1ac:	cmp	r3, #0
   1d1b0:	bne	1d150 <_obstack_memory_used@@Base+0x1f4c>
   1d1b4:	ldr	r3, [r5, #-4]
   1d1b8:	cmp	r3, #0
   1d1bc:	bne	1d150 <_obstack_memory_used@@Base+0x1f4c>
   1d1c0:	rsb	r9, r9, r9, lsl #3
   1d1c4:	mov	r4, r7
   1d1c8:	lsl	r0, r9, #2
   1d1cc:	mov	r7, r3
   1d1d0:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1d1d4:	ldr	r5, [sp, #16]
   1d1d8:	str	r0, [r5]
   1d1dc:	add	r0, sl, #1
   1d1e0:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1d1e4:	ldr	r8, [r5]
   1d1e8:	mov	r3, r5
   1d1ec:	cmp	r0, #0
   1d1f0:	cmpne	r8, #0
   1d1f4:	mov	sl, r0
   1d1f8:	str	r0, [r3, #8]
   1d1fc:	beq	1d7bc <_obstack_memory_used@@Base+0x25b8>
   1d200:	ldr	r2, [sp, #16]
   1d204:	ldr	r3, [pc, #1476]	; 1d7d0 <_obstack_memory_used@@Base+0x25cc>
   1d208:	ldr	r2, [r2, #4]
   1d20c:	cmp	r2, r3
   1d210:	bhi	1d7a8 <_obstack_memory_used@@Base+0x25a4>
   1d214:	add	r8, r8, #28
   1d218:	mov	r9, sl
   1d21c:	mov	r2, fp
   1d220:	ldr	r3, [r4, #4]
   1d224:	mov	fp, sl
   1d228:	mov	sl, r8
   1d22c:	ldr	r8, [sp, #28]
   1d230:	str	r6, [sp, #4]
   1d234:	cmp	r3, #0
   1d238:	bne	1d248 <_obstack_memory_used@@Base+0x2044>
   1d23c:	ldr	r0, [r4]
   1d240:	cmp	r0, #0
   1d244:	beq	1d760 <_obstack_memory_used@@Base+0x255c>
   1d248:	str	r7, [sl, #-24]	; 0xffffffe8
   1d24c:	ldr	r5, [r4, #20]
   1d250:	str	r4, [sl, #-28]	; 0xffffffe4
   1d254:	cmp	r5, #0
   1d258:	str	fp, [sl, #-20]	; 0xffffffec
   1d25c:	bne	1d274 <_obstack_memory_used@@Base+0x2070>
   1d260:	ldr	r0, [r4]
   1d264:	cmp	r0, #0
   1d268:	cmpeq	r3, #0
   1d26c:	movne	r5, r2
   1d270:	beq	1d784 <_obstack_memory_used@@Base+0x2580>
   1d274:	ldr	r2, [sp, #20]
   1d278:	mov	r3, r7
   1d27c:	str	r5, [sl, #-16]
   1d280:	str	r8, [sl, #-12]
   1d284:	str	r2, [sl, #-8]
   1d288:	add	r3, r3, #1
   1d28c:	str	r3, [sl, #-24]	; 0xffffffe8
   1d290:	ldr	r3, [r4, #12]
   1d294:	tst	r3, #8
   1d298:	bne	1d304 <_obstack_memory_used@@Base+0x2100>
   1d29c:	ldr	r6, [r4, #4]
   1d2a0:	sub	r2, r6, #1
   1d2a4:	cmp	r2, #254	; 0xfe
   1d2a8:	bhi	1d304 <_obstack_memory_used@@Base+0x2100>
   1d2ac:	bl	11520 <__ctype_b_loc@plt>
   1d2b0:	lsl	r2, r6, #1
   1d2b4:	ldr	r0, [r0]
   1d2b8:	ldrh	r2, [r0, r2]
   1d2bc:	tst	r2, #16384	; 0x4000
   1d2c0:	beq	1d304 <_obstack_memory_used@@Base+0x2100>
   1d2c4:	cmp	r9, fp
   1d2c8:	uxtb	r0, r6
   1d2cc:	bcs	1d2fc <_obstack_memory_used@@Base+0x20f8>
   1d2d0:	ldrb	r3, [r9]
   1d2d4:	cmp	r3, r0
   1d2d8:	movne	r3, r9
   1d2dc:	subne	ip, fp, #1
   1d2e0:	bne	1d2f4 <_obstack_memory_used@@Base+0x20f0>
   1d2e4:	b	1d304 <_obstack_memory_used@@Base+0x2100>
   1d2e8:	ldrb	r2, [r3, #1]!
   1d2ec:	cmp	r2, r0
   1d2f0:	beq	1d304 <_obstack_memory_used@@Base+0x2100>
   1d2f4:	cmp	ip, r3
   1d2f8:	bne	1d2e8 <_obstack_memory_used@@Base+0x20e4>
   1d2fc:	strb	r0, [fp]
   1d300:	add	fp, fp, #1
   1d304:	add	r4, r4, #24
   1d308:	ldr	r3, [r4, #4]
   1d30c:	cmp	r3, #0
   1d310:	bne	1d320 <_obstack_memory_used@@Base+0x211c>
   1d314:	ldr	r2, [r4]
   1d318:	cmp	r2, #0
   1d31c:	beq	1d73c <_obstack_memory_used@@Base+0x2538>
   1d320:	ldr	r2, [r4, #12]
   1d324:	tst	r2, #4
   1d328:	beq	1d754 <_obstack_memory_used@@Base+0x2550>
   1d32c:	ldr	r3, [sl, #-24]	; 0xffffffe8
   1d330:	b	1d288 <_obstack_memory_used@@Base+0x2084>
   1d334:	ldr	r6, [sp, #4]
   1d338:	strb	r3, [fp]
   1d33c:	cmp	r6, #0
   1d340:	beq	1d47c <_obstack_memory_used@@Base+0x2278>
   1d344:	ldr	r0, [r6]
   1d348:	cmp	r0, #0
   1d34c:	beq	1d47c <_obstack_memory_used@@Base+0x2278>
   1d350:	add	r3, r6, #16
   1d354:	str	r3, [sp, #8]
   1d358:	ldr	r3, [sp, #16]
   1d35c:	add	r3, r3, #12
   1d360:	str	r3, [sp, #44]	; 0x2c
   1d364:	ldr	r3, [sp, #8]
   1d368:	ldr	r5, [r3, #-4]
   1d36c:	ldr	r6, [r3, #-8]
   1d370:	cmp	r5, #0
   1d374:	bne	1d380 <_obstack_memory_used@@Base+0x217c>
   1d378:	cmp	r6, #0
   1d37c:	beq	1d6d4 <_obstack_memory_used@@Base+0x24d0>
   1d380:	ldr	r3, [sp, #20]
   1d384:	mov	r0, #28
   1d388:	ldr	r2, [r3, #16]
   1d38c:	ldr	r3, [sp, #8]
   1d390:	sub	r3, r3, #16
   1d394:	sub	r3, r3, r2
   1d398:	asr	r4, r3, #4
   1d39c:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1d3a0:	subs	r1, r0, #0
   1d3a4:	beq	1d3e8 <_obstack_memory_used@@Base+0x21e4>
   1d3a8:	ldr	r3, [sp, #28]
   1d3ac:	ldr	r0, [sp, #16]
   1d3b0:	cmp	r3, #0
   1d3b4:	ldr	r2, [sp, #20]
   1d3b8:	str	r3, [r1, #12]
   1d3bc:	ldrne	r3, [r3, #20]
   1d3c0:	str	r2, [r1, #16]
   1d3c4:	ldr	r2, [r0, #12]
   1d3c8:	addne	r3, r3, #1
   1d3cc:	moveq	r3, #0
   1d3d0:	str	r5, [r1, #8]
   1d3d4:	str	r6, [r1]
   1d3d8:	str	r4, [r1, #4]
   1d3dc:	str	r3, [r1, #20]
   1d3e0:	str	r2, [r1, #24]
   1d3e4:	str	r1, [r0, #12]
   1d3e8:	ldr	r3, [sp, #8]
   1d3ec:	ldr	r0, [r3, #-16]
   1d3f0:	bl	1d0e4 <_obstack_memory_used@@Base+0x1ee0>
   1d3f4:	ldr	r3, [sp, #16]
   1d3f8:	ldr	r2, [r3, #12]
   1d3fc:	cmp	r2, #0
   1d400:	mov	sl, r0
   1d404:	bne	1d410 <_obstack_memory_used@@Base+0x220c>
   1d408:	b	1d6dc <_obstack_memory_used@@Base+0x24d8>
   1d40c:	mov	r2, r3
   1d410:	ldr	r3, [r2, #24]
   1d414:	cmp	r3, #0
   1d418:	bne	1d40c <_obstack_memory_used@@Base+0x2208>
   1d41c:	add	r2, r2, #24
   1d420:	ldr	r3, [sl, #4]
   1d424:	ldr	r1, [sl, #12]
   1d428:	cmp	r3, #0
   1d42c:	str	r1, [r2]
   1d430:	mov	r2, #0
   1d434:	str	r2, [sl, #12]
   1d438:	beq	1d460 <_obstack_memory_used@@Base+0x225c>
   1d43c:	ldr	ip, [sp, #16]
   1d440:	ldr	r2, [ip, #4]
   1d444:	cmp	r2, #0
   1d448:	bne	1d488 <_obstack_memory_used@@Base+0x2284>
   1d44c:	ldr	r0, [sl]
   1d450:	ldr	r1, [sl, #8]
   1d454:	stm	ip, {r0, r3}
   1d458:	str	r1, [ip, #8]
   1d45c:	str	r2, [sl, #4]
   1d460:	mov	r0, sl
   1d464:	bl	1acdc <argp_parse@@Base+0xf7c>
   1d468:	ldr	r3, [sp, #8]
   1d46c:	ldr	r0, [r3], #16
   1d470:	cmp	r0, #0
   1d474:	str	r3, [sp, #8]
   1d478:	bne	1d368 <_obstack_memory_used@@Base+0x2164>
   1d47c:	ldr	r0, [sp, #16]
   1d480:	add	sp, sp, #52	; 0x34
   1d484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d488:	add	r3, r3, r2
   1d48c:	str	r3, [sp, #32]
   1d490:	rsb	r0, r3, r3, lsl #3
   1d494:	lsl	r0, r0, #2
   1d498:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1d49c:	ldr	r3, [sp, #16]
   1d4a0:	mov	r4, r0
   1d4a4:	str	r0, [sp, #24]
   1d4a8:	ldr	r0, [r3, #8]
   1d4ac:	bl	11544 <strlen@plt>
   1d4b0:	mov	r5, r0
   1d4b4:	ldr	r0, [sl, #8]
   1d4b8:	bl	11544 <strlen@plt>
   1d4bc:	add	r0, r5, r0
   1d4c0:	add	r0, r0, #1
   1d4c4:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   1d4c8:	cmp	r4, #0
   1d4cc:	cmpne	r0, #0
   1d4d0:	mov	r7, r0
   1d4d4:	beq	1d6ec <_obstack_memory_used@@Base+0x24e8>
   1d4d8:	ldr	r3, [sp, #32]
   1d4dc:	ldr	r2, [pc, #748]	; 1d7d0 <_obstack_memory_used@@Base+0x25cc>
   1d4e0:	cmp	r3, r2
   1d4e4:	bhi	1d728 <_obstack_memory_used@@Base+0x2524>
   1d4e8:	ldr	r6, [sp, #16]
   1d4ec:	ldr	r8, [sp, #24]
   1d4f0:	ldm	r6, {r3, r4}
   1d4f4:	mov	r0, r8
   1d4f8:	rsb	r9, r4, r4, lsl #3
   1d4fc:	mov	r1, r3
   1d500:	lsl	r9, r9, #2
   1d504:	mov	r2, r9
   1d508:	str	r3, [sp, #36]	; 0x24
   1d50c:	bl	11514 <mempcpy@plt>
   1d510:	ldr	r3, [sl, #4]
   1d514:	ldr	r1, [sl]
   1d518:	str	r3, [sp, #4]
   1d51c:	rsb	r2, r3, r3, lsl #3
   1d520:	lsl	r2, r2, #2
   1d524:	bl	1140c <memcpy@plt>
   1d528:	ldr	r6, [r6, #8]
   1d52c:	mov	r2, r5
   1d530:	mov	r1, r6
   1d534:	mov	r0, r7
   1d538:	bl	1140c <memcpy@plt>
   1d53c:	cmp	r4, #0
   1d540:	beq	1d6e4 <_obstack_memory_used@@Base+0x24e0>
   1d544:	mov	r2, r8
   1d548:	ldr	r3, [r2, #8]
   1d54c:	subs	r4, r4, #1
   1d550:	sub	r3, r3, r6
   1d554:	add	r3, r7, r3
   1d558:	str	r3, [r2, #8]
   1d55c:	add	r2, r2, #28
   1d560:	bne	1d548 <_obstack_memory_used@@Base+0x2344>
   1d564:	ldr	r3, [sp, #24]
   1d568:	add	r1, r3, r9
   1d56c:	ldr	r3, [sp, #4]
   1d570:	ldr	r9, [sl, #8]
   1d574:	cmp	r3, #0
   1d578:	add	r3, r7, r5
   1d57c:	str	r3, [sp, #12]
   1d580:	beq	1d66c <_obstack_memory_used@@Base+0x2468>
   1d584:	add	fp, r1, #28
   1d588:	sub	r8, r3, #1
   1d58c:	str	sl, [sp, #40]	; 0x28
   1d590:	mov	r6, r3
   1d594:	mov	sl, r9
   1d598:	mov	r9, fp
   1d59c:	mov	fp, r8
   1d5a0:	ldr	r5, [r9, #-24]	; 0xffffffe8
   1d5a4:	str	r6, [r9, #-20]	; 0xffffffec
   1d5a8:	cmp	r5, #0
   1d5ac:	ldr	r4, [r9, #-28]	; 0xffffffe4
   1d5b0:	bne	1d5c4 <_obstack_memory_used@@Base+0x23c0>
   1d5b4:	b	1d650 <_obstack_memory_used@@Base+0x244c>
   1d5b8:	subs	r5, r5, #1
   1d5bc:	add	r4, r4, #24
   1d5c0:	beq	1d650 <_obstack_memory_used@@Base+0x244c>
   1d5c4:	ldr	r3, [r4, #12]
   1d5c8:	tst	r3, #8
   1d5cc:	bne	1d5b8 <_obstack_memory_used@@Base+0x23b4>
   1d5d0:	ldr	r8, [r4, #4]
   1d5d4:	sub	r3, r8, #1
   1d5d8:	cmp	r3, #254	; 0xfe
   1d5dc:	bhi	1d5b8 <_obstack_memory_used@@Base+0x23b4>
   1d5e0:	bl	11520 <__ctype_b_loc@plt>
   1d5e4:	lsl	r3, r8, #1
   1d5e8:	ldr	r2, [r0]
   1d5ec:	ldrh	r3, [r2, r3]
   1d5f0:	tst	r3, #16384	; 0x4000
   1d5f4:	beq	1d5b8 <_obstack_memory_used@@Base+0x23b4>
   1d5f8:	ldrb	r1, [sl]
   1d5fc:	cmp	r1, r8
   1d600:	bne	1d5b8 <_obstack_memory_used@@Base+0x23b4>
   1d604:	ldr	r3, [sp, #12]
   1d608:	cmp	r7, r3
   1d60c:	bcs	1d638 <_obstack_memory_used@@Base+0x2434>
   1d610:	ldrb	r3, [r7]
   1d614:	cmp	r3, r1
   1d618:	movne	r3, r7
   1d61c:	bne	1d630 <_obstack_memory_used@@Base+0x242c>
   1d620:	b	1d640 <_obstack_memory_used@@Base+0x243c>
   1d624:	ldrb	r2, [r3, #1]!
   1d628:	cmp	r2, r1
   1d62c:	beq	1d640 <_obstack_memory_used@@Base+0x243c>
   1d630:	cmp	fp, r3
   1d634:	bne	1d624 <_obstack_memory_used@@Base+0x2420>
   1d638:	strb	r1, [r6]
   1d63c:	add	r6, r6, #1
   1d640:	subs	r5, r5, #1
   1d644:	add	sl, sl, #1
   1d648:	add	r4, r4, #24
   1d64c:	bne	1d5c4 <_obstack_memory_used@@Base+0x23c0>
   1d650:	ldr	r3, [sp, #4]
   1d654:	add	r9, r9, #28
   1d658:	subs	r3, r3, #1
   1d65c:	str	r3, [sp, #4]
   1d660:	bne	1d5a0 <_obstack_memory_used@@Base+0x239c>
   1d664:	ldr	sl, [sp, #40]	; 0x28
   1d668:	mov	r3, r6
   1d66c:	mov	r2, #0
   1d670:	strb	r2, [r3]
   1d674:	ldr	r0, [sp, #36]	; 0x24
   1d678:	bl	1acdc <argp_parse@@Base+0xf7c>
   1d67c:	ldr	r4, [sp, #16]
   1d680:	ldr	r0, [r4, #8]
   1d684:	bl	1acdc <argp_parse@@Base+0xf7c>
   1d688:	ldr	r2, [sp, #24]
   1d68c:	ldr	r0, [sl, #12]
   1d690:	str	r2, [r4]
   1d694:	ldr	r2, [sp, #32]
   1d698:	cmp	r0, #0
   1d69c:	stmib	r4, {r2, r7}
   1d6a0:	beq	1d6b4 <_obstack_memory_used@@Base+0x24b0>
   1d6a4:	ldr	r4, [r0, #24]
   1d6a8:	bl	1acdc <argp_parse@@Base+0xf7c>
   1d6ac:	subs	r0, r4, #0
   1d6b0:	bne	1d6a4 <_obstack_memory_used@@Base+0x24a0>
   1d6b4:	ldr	r3, [sl, #4]
   1d6b8:	cmp	r3, #0
   1d6bc:	beq	1d460 <_obstack_memory_used@@Base+0x225c>
   1d6c0:	ldr	r0, [sl]
   1d6c4:	bl	1acdc <argp_parse@@Base+0xf7c>
   1d6c8:	ldr	r0, [sl, #8]
   1d6cc:	bl	1acdc <argp_parse@@Base+0xf7c>
   1d6d0:	b	1d460 <_obstack_memory_used@@Base+0x225c>
   1d6d4:	ldr	r1, [sp, #28]
   1d6d8:	b	1d3f0 <_obstack_memory_used@@Base+0x21ec>
   1d6dc:	ldr	r2, [sp, #44]	; 0x2c
   1d6e0:	b	1d420 <_obstack_memory_used@@Base+0x221c>
   1d6e4:	ldr	r1, [sp, #24]
   1d6e8:	b	1d56c <_obstack_memory_used@@Base+0x2368>
   1d6ec:	ldr	r3, [pc, #224]	; 1d7d4 <_obstack_memory_used@@Base+0x25d0>
   1d6f0:	ldr	r2, [pc, #224]	; 1d7d8 <_obstack_memory_used@@Base+0x25d4>
   1d6f4:	ldr	r1, [pc, #224]	; 1d7dc <_obstack_memory_used@@Base+0x25d8>
   1d6f8:	ldr	r0, [pc, #224]	; 1d7e0 <_obstack_memory_used@@Base+0x25dc>
   1d6fc:	bl	116c4 <__assert_fail@plt>
   1d700:	ldr	r3, [pc, #220]	; 1d7e4 <_obstack_memory_used@@Base+0x25e0>
   1d704:	ldr	r2, [pc, #220]	; 1d7e8 <_obstack_memory_used@@Base+0x25e4>
   1d708:	ldr	r1, [pc, #204]	; 1d7dc <_obstack_memory_used@@Base+0x25d8>
   1d70c:	ldr	r0, [pc, #216]	; 1d7ec <_obstack_memory_used@@Base+0x25e8>
   1d710:	bl	116c4 <__assert_fail@plt>
   1d714:	ldr	r3, [pc, #200]	; 1d7e4 <_obstack_memory_used@@Base+0x25e0>
   1d718:	mov	r2, #460	; 0x1cc
   1d71c:	ldr	r1, [pc, #184]	; 1d7dc <_obstack_memory_used@@Base+0x25d8>
   1d720:	ldr	r0, [pc, #200]	; 1d7f0 <_obstack_memory_used@@Base+0x25ec>
   1d724:	bl	116c4 <__assert_fail@plt>
   1d728:	ldr	r3, [pc, #164]	; 1d7d4 <_obstack_memory_used@@Base+0x25d0>
   1d72c:	mov	r2, #972	; 0x3cc
   1d730:	ldr	r1, [pc, #164]	; 1d7dc <_obstack_memory_used@@Base+0x25d8>
   1d734:	ldr	r0, [pc, #184]	; 1d7f4 <_obstack_memory_used@@Base+0x25f0>
   1d738:	bl	116c4 <__assert_fail@plt>
   1d73c:	ldr	r2, [r4, #16]
   1d740:	cmp	r2, #0
   1d744:	bne	1d320 <_obstack_memory_used@@Base+0x211c>
   1d748:	ldr	r2, [r4, #20]
   1d74c:	cmp	r2, #0
   1d750:	bne	1d320 <_obstack_memory_used@@Base+0x211c>
   1d754:	add	sl, sl, #28
   1d758:	mov	r2, r5
   1d75c:	b	1d234 <_obstack_memory_used@@Base+0x2030>
   1d760:	ldr	r0, [r4, #16]
   1d764:	cmp	r0, #0
   1d768:	beq	1d78c <_obstack_memory_used@@Base+0x2588>
   1d76c:	str	r3, [sl, #-24]	; 0xffffffe8
   1d770:	ldr	r5, [r4, #20]
   1d774:	str	r4, [sl, #-28]	; 0xffffffe4
   1d778:	cmp	r5, #0
   1d77c:	str	fp, [sl, #-20]	; 0xffffffec
   1d780:	bne	1d274 <_obstack_memory_used@@Base+0x2070>
   1d784:	add	r5, r2, #1
   1d788:	b	1d274 <_obstack_memory_used@@Base+0x2070>
   1d78c:	ldr	r5, [r4, #20]
   1d790:	cmp	r5, #0
   1d794:	beq	1d334 <_obstack_memory_used@@Base+0x2130>
   1d798:	str	r4, [sl, #-28]	; 0xffffffe4
   1d79c:	str	r3, [sl, #-24]	; 0xffffffe8
   1d7a0:	str	fp, [sl, #-20]	; 0xffffffec
   1d7a4:	b	1d274 <_obstack_memory_used@@Base+0x2070>
   1d7a8:	ldr	r3, [pc, #52]	; 1d7e4 <_obstack_memory_used@@Base+0x25e0>
   1d7ac:	mov	r2, #476	; 0x1dc
   1d7b0:	ldr	r1, [pc, #36]	; 1d7dc <_obstack_memory_used@@Base+0x25d8>
   1d7b4:	ldr	r0, [pc, #60]	; 1d7f8 <_obstack_memory_used@@Base+0x25f4>
   1d7b8:	bl	116c4 <__assert_fail@plt>
   1d7bc:	ldr	r3, [pc, #32]	; 1d7e4 <_obstack_memory_used@@Base+0x25e0>
   1d7c0:	ldr	r2, [pc, #52]	; 1d7fc <_obstack_memory_used@@Base+0x25f8>
   1d7c4:	ldr	r1, [pc, #16]	; 1d7dc <_obstack_memory_used@@Base+0x25d8>
   1d7c8:	ldr	r0, [pc, #48]	; 1d800 <_obstack_memory_used@@Base+0x25fc>
   1d7cc:	bl	116c4 <__assert_fail@plt>
   1d7d0:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   1d7d4:	andeq	r6, r2, r8, lsl r5
   1d7d8:	andeq	r0, r0, sl, asr #7
   1d7dc:			; <UNDEFINED> instruction: 0x000265b4
   1d7e0:	andeq	r6, r2, r4, lsr r6
   1d7e4:	andeq	r6, r2, ip, lsl #10
   1d7e8:	andeq	r0, r0, r2, asr #3
   1d7ec:	andeq	r6, r2, r0, asr #11
   1d7f0:	andeq	r6, r2, r4, asr #11
   1d7f4:	andeq	r6, r2, r0, asr r6
   1d7f8:	strdeq	r6, [r2], -r8
   1d7fc:	ldrdeq	r0, [r0], -sl
   1d800:	ldrdeq	r6, [r2], -r4
   1d804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d808:	mov	r7, r2
   1d80c:	sub	sp, sp, #28
   1d810:	mov	r4, r3
   1d814:	ldr	r3, [r7]
   1d818:	ldr	r2, [r0, #20]
   1d81c:	str	r3, [sp, #20]
   1d820:	ldr	r3, [r0, #16]
   1d824:	cmp	r2, #0
   1d828:	str	r3, [sp, #12]
   1d82c:	ldr	r3, [r0, #8]
   1d830:	mov	r8, r1
   1d834:	mov	r9, r3
   1d838:	str	r3, [sp, #16]
   1d83c:	ldr	r5, [sp, #64]	; 0x40
   1d840:	beq	1da98 <_obstack_memory_used@@Base+0x2894>
   1d844:	mov	r6, r0
   1d848:	bl	1ab80 <argp_parse@@Base+0xe20>
   1d84c:	ldr	r3, [r6, #20]
   1d850:	mov	r1, r9
   1d854:	mov	r2, r0
   1d858:	ldr	r0, [pc, #640]	; 1dae0 <_obstack_memory_used@@Base+0x28dc>
   1d85c:	blx	r3
   1d860:	mov	r3, r0
   1d864:	str	r0, [sp, #8]
   1d868:	cmp	r3, #0
   1d86c:	beq	1da38 <_obstack_memory_used@@Base+0x2834>
   1d870:	mov	r1, #10
   1d874:	mov	r0, r3
   1d878:	bl	113d0 <strchrnul@plt>
   1d87c:	ldrb	sl, [r0]
   1d880:	mov	r6, r0
   1d884:	cmp	sl, #0
   1d888:	bne	1d9d0 <_obstack_memory_used@@Base+0x27cc>
   1d88c:	ldr	fp, [sp, #8]
   1d890:	ldr	r3, [r5, #28]
   1d894:	ldr	r1, [r5, #24]
   1d898:	ldr	r0, [r5, #16]
   1d89c:	sub	r1, r3, r1
   1d8a0:	cmp	r1, r0
   1d8a4:	add	r9, r6, #1
   1d8a8:	mov	r1, r3
   1d8ac:	sub	r9, r9, fp
   1d8b0:	bhi	1da68 <_obstack_memory_used@@Base+0x2864>
   1d8b4:	ldr	r0, [r5, #20]
   1d8b8:	ldr	ip, [r5, #8]
   1d8bc:	cmp	r0, #0
   1d8c0:	addge	r9, r9, r0
   1d8c4:	cmp	r9, ip
   1d8c8:	bcc	1da18 <_obstack_memory_used@@Base+0x2814>
   1d8cc:	ldr	r1, [r5, #32]
   1d8d0:	cmp	r1, r3
   1d8d4:	bls	1daa0 <_obstack_memory_used@@Base+0x289c>
   1d8d8:	add	r0, r3, #1
   1d8dc:	mov	r1, #10
   1d8e0:	str	r0, [r5, #28]
   1d8e4:	strb	r1, [r3]
   1d8e8:	ldr	r0, [r5, #28]
   1d8ec:	sub	r9, r6, fp
   1d8f0:	ldr	r1, [r5, #32]
   1d8f4:	add	r3, r0, r9
   1d8f8:	cmp	r1, r3
   1d8fc:	bcs	1d918 <_obstack_memory_used@@Base+0x2714>
   1d900:	mov	r1, r9
   1d904:	mov	r0, r5
   1d908:	bl	22e84 <argp_error@@Base+0x2008>
   1d90c:	cmp	r0, #0
   1d910:	beq	1d930 <_obstack_memory_used@@Base+0x272c>
   1d914:	ldr	r0, [r5, #28]
   1d918:	mov	r2, r9
   1d91c:	mov	r1, fp
   1d920:	bl	1140c <memcpy@plt>
   1d924:	ldr	r3, [r5, #28]
   1d928:	add	r9, r3, r9
   1d92c:	str	r9, [r5, #28]
   1d930:	ldr	r3, [sp, #16]
   1d934:	ldr	r2, [sp, #8]
   1d938:	cmp	r3, r2
   1d93c:	beq	1d948 <_obstack_memory_used@@Base+0x2744>
   1d940:	mov	r0, r2
   1d944:	bl	1acdc <argp_parse@@Base+0xf7c>
   1d948:	ldr	r3, [sp, #12]
   1d94c:	cmp	r3, #0
   1d950:	beq	1d994 <_obstack_memory_used@@Base+0x2790>
   1d954:	ldr	r2, [r3]
   1d958:	cmp	r2, #0
   1d95c:	beq	1d994 <_obstack_memory_used@@Base+0x2790>
   1d960:	ldr	r9, [sp, #12]
   1d964:	mov	r3, r4
   1d968:	mov	r0, r2
   1d96c:	str	r5, [sp]
   1d970:	mov	r2, r7
   1d974:	mov	r1, r8
   1d978:	bl	1d804 <_obstack_memory_used@@Base+0x2600>
   1d97c:	ldr	r2, [r9, #16]!
   1d980:	cmp	r2, #0
   1d984:	clz	r3, r0
   1d988:	lsr	r3, r3, #5
   1d98c:	bne	1d968 <_obstack_memory_used@@Base+0x2764>
   1d990:	mov	r4, r3
   1d994:	cmp	r4, #0
   1d998:	moveq	sl, #0
   1d99c:	andne	sl, sl, #1
   1d9a0:	cmp	sl, #0
   1d9a4:	beq	1da58 <_obstack_memory_used@@Base+0x2854>
   1d9a8:	ldrb	r0, [r6]
   1d9ac:	cmp	r0, #0
   1d9b0:	bne	1da7c <_obstack_memory_used@@Base+0x2878>
   1d9b4:	ldr	r3, [sp, #20]
   1d9b8:	ldrb	r4, [r3]
   1d9bc:	cmp	r4, #0
   1d9c0:	moveq	r0, r4
   1d9c4:	strbne	r0, [r3]
   1d9c8:	add	sp, sp, #28
   1d9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d9d0:	ldr	r3, [sp, #20]
   1d9d4:	ldrb	r9, [r3]
   1d9d8:	cmp	r9, #0
   1d9dc:	beq	1dad8 <_obstack_memory_used@@Base+0x28d4>
   1d9e0:	mov	sl, #0
   1d9e4:	add	fp, r0, #1
   1d9e8:	add	sl, sl, #1
   1d9ec:	mov	r0, fp
   1d9f0:	mov	r1, #10
   1d9f4:	bl	113d0 <strchrnul@plt>
   1d9f8:	cmp	sl, r9
   1d9fc:	bne	1d9e4 <_obstack_memory_used@@Base+0x27e0>
   1da00:	mov	r6, r0
   1da04:	ldr	r3, [r7]
   1da08:	mov	sl, #1
   1da0c:	add	r3, r3, sl
   1da10:	str	r3, [r7]
   1da14:	b	1d890 <_obstack_memory_used@@Base+0x268c>
   1da18:	ldr	r0, [r5, #32]
   1da1c:	cmp	r0, r3
   1da20:	bls	1dabc <_obstack_memory_used@@Base+0x28b8>
   1da24:	add	r0, r1, #1
   1da28:	mov	r3, #32
   1da2c:	str	r0, [r5, #28]
   1da30:	strb	r3, [r1]
   1da34:	b	1d8e8 <_obstack_memory_used@@Base+0x26e4>
   1da38:	ldr	r3, [sp, #12]
   1da3c:	cmp	r3, #0
   1da40:	beq	1da58 <_obstack_memory_used@@Base+0x2854>
   1da44:	ldr	r2, [r3]
   1da48:	cmp	r2, #0
   1da4c:	ldrne	r6, [sp, #8]
   1da50:	movne	sl, r6
   1da54:	bne	1d960 <_obstack_memory_used@@Base+0x275c>
   1da58:	clz	r0, r4
   1da5c:	lsr	r0, r0, #5
   1da60:	add	sp, sp, #28
   1da64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da68:	mov	r0, r5
   1da6c:	bl	228d8 <argp_error@@Base+0x1a5c>
   1da70:	ldr	r3, [r5, #28]
   1da74:	mov	r1, r3
   1da78:	b	1d8b4 <_obstack_memory_used@@Base+0x26b0>
   1da7c:	ldr	r2, [sp, #20]
   1da80:	mov	r0, #1
   1da84:	ldrb	r3, [r2]
   1da88:	add	r3, r3, r0
   1da8c:	strb	r3, [r2]
   1da90:	add	sp, sp, #28
   1da94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da98:	str	r3, [sp, #8]
   1da9c:	b	1d868 <_obstack_memory_used@@Base+0x2664>
   1daa0:	mov	r1, #1
   1daa4:	mov	r0, r5
   1daa8:	bl	22e84 <argp_error@@Base+0x2008>
   1daac:	cmp	r0, #0
   1dab0:	beq	1d8e8 <_obstack_memory_used@@Base+0x26e4>
   1dab4:	ldr	r3, [r5, #28]
   1dab8:	b	1d8d8 <_obstack_memory_used@@Base+0x26d4>
   1dabc:	mov	r1, #1
   1dac0:	mov	r0, r5
   1dac4:	bl	22e84 <argp_error@@Base+0x2008>
   1dac8:	cmp	r0, #0
   1dacc:	beq	1d8e8 <_obstack_memory_used@@Base+0x26e4>
   1dad0:	ldr	r1, [r5, #28]
   1dad4:	b	1da24 <_obstack_memory_used@@Base+0x2820>
   1dad8:	ldr	fp, [sp, #8]
   1dadc:	b	1da04 <_obstack_memory_used@@Base+0x2800>
   1dae0:	andeq	r0, r0, #6
   1dae4:	subs	r3, r0, #0
   1dae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1daec:	moveq	r0, r3
   1daf0:	sub	sp, sp, #52	; 0x34
   1daf4:	mov	r4, r1
   1daf8:	beq	1db0c <_obstack_memory_used@@Base+0x2908>
   1dafc:	mov	r1, #10
   1db00:	bl	11550 <strchr@plt>
   1db04:	adds	r0, r0, #0
   1db08:	movne	r0, #1
   1db0c:	cmp	r4, #0
   1db10:	str	r0, [sp, #20]
   1db14:	beq	1de24 <_obstack_memory_used@@Base+0x2c20>
   1db18:	ldr	r3, [r4]
   1db1c:	cmp	r3, #0
   1db20:	beq	1de24 <_obstack_memory_used@@Base+0x2c20>
   1db24:	mov	r9, #0
   1db28:	mov	r8, #10
   1db2c:	str	r4, [sp, #24]
   1db30:	ldr	r0, [r3, #8]
   1db34:	ldr	r4, [r3, #16]
   1db38:	cmp	r0, #0
   1db3c:	moveq	r0, r9
   1db40:	beq	1db54 <_obstack_memory_used@@Base+0x2950>
   1db44:	mov	r1, r8
   1db48:	bl	11550 <strchr@plt>
   1db4c:	adds	r0, r0, #0
   1db50:	movne	r0, #1
   1db54:	cmp	r4, #0
   1db58:	str	r0, [sp]
   1db5c:	beq	1de00 <_obstack_memory_used@@Base+0x2bfc>
   1db60:	ldr	r3, [r4]
   1db64:	cmp	r3, #0
   1db68:	beq	1de00 <_obstack_memory_used@@Base+0x2bfc>
   1db6c:	str	r4, [sp, #28]
   1db70:	ldr	r0, [r3, #8]
   1db74:	ldr	r4, [r3, #16]
   1db78:	cmp	r0, #0
   1db7c:	moveq	r0, r9
   1db80:	beq	1db94 <_obstack_memory_used@@Base+0x2990>
   1db84:	mov	r1, r8
   1db88:	bl	11550 <strchr@plt>
   1db8c:	adds	r0, r0, #0
   1db90:	movne	r0, #1
   1db94:	cmp	r4, #0
   1db98:	str	r0, [sp, #4]
   1db9c:	beq	1dde0 <_obstack_memory_used@@Base+0x2bdc>
   1dba0:	ldr	r3, [r4]
   1dba4:	cmp	r3, #0
   1dba8:	beq	1dde0 <_obstack_memory_used@@Base+0x2bdc>
   1dbac:	str	r4, [sp, #32]
   1dbb0:	ldr	r0, [r3, #8]
   1dbb4:	ldr	r4, [r3, #16]
   1dbb8:	cmp	r0, #0
   1dbbc:	moveq	r0, r9
   1dbc0:	beq	1dbd4 <_obstack_memory_used@@Base+0x29d0>
   1dbc4:	mov	r1, r8
   1dbc8:	bl	11550 <strchr@plt>
   1dbcc:	adds	r0, r0, #0
   1dbd0:	movne	r0, #1
   1dbd4:	cmp	r4, #0
   1dbd8:	str	r0, [sp, #8]
   1dbdc:	beq	1ddc0 <_obstack_memory_used@@Base+0x2bbc>
   1dbe0:	ldr	r3, [r4]
   1dbe4:	cmp	r3, #0
   1dbe8:	beq	1ddc0 <_obstack_memory_used@@Base+0x2bbc>
   1dbec:	str	r4, [sp, #36]	; 0x24
   1dbf0:	ldr	r0, [r3, #8]
   1dbf4:	ldr	r4, [r3, #16]
   1dbf8:	cmp	r0, #0
   1dbfc:	moveq	r0, r9
   1dc00:	beq	1dc14 <_obstack_memory_used@@Base+0x2a10>
   1dc04:	mov	r1, r8
   1dc08:	bl	11550 <strchr@plt>
   1dc0c:	adds	r0, r0, #0
   1dc10:	movne	r0, #1
   1dc14:	cmp	r4, #0
   1dc18:	str	r0, [sp, #12]
   1dc1c:	beq	1dd9c <_obstack_memory_used@@Base+0x2b98>
   1dc20:	ldr	r3, [r4]
   1dc24:	cmp	r3, #0
   1dc28:	beq	1dd9c <_obstack_memory_used@@Base+0x2b98>
   1dc2c:	str	r4, [sp, #40]	; 0x28
   1dc30:	ldr	r0, [r3, #8]
   1dc34:	ldr	fp, [r3, #16]
   1dc38:	cmp	r0, #0
   1dc3c:	moveq	r0, r9
   1dc40:	beq	1dc54 <_obstack_memory_used@@Base+0x2a50>
   1dc44:	mov	r1, r8
   1dc48:	bl	11550 <strchr@plt>
   1dc4c:	adds	r0, r0, #0
   1dc50:	movne	r0, #1
   1dc54:	cmp	fp, #0
   1dc58:	str	r0, [sp, #16]
   1dc5c:	beq	1dd78 <_obstack_memory_used@@Base+0x2b74>
   1dc60:	ldr	r3, [fp]
   1dc64:	cmp	r3, #0
   1dc68:	beq	1dd78 <_obstack_memory_used@@Base+0x2b74>
   1dc6c:	str	fp, [sp, #44]	; 0x2c
   1dc70:	ldr	r0, [r3, #8]
   1dc74:	ldr	r7, [r3, #16]
   1dc78:	cmp	r0, #0
   1dc7c:	moveq	r0, r9
   1dc80:	beq	1dc94 <_obstack_memory_used@@Base+0x2a90>
   1dc84:	mov	r1, r8
   1dc88:	bl	11550 <strchr@plt>
   1dc8c:	adds	r0, r0, #0
   1dc90:	movne	r0, #1
   1dc94:	cmp	r7, #0
   1dc98:	mov	r6, r0
   1dc9c:	beq	1dd58 <_obstack_memory_used@@Base+0x2b54>
   1dca0:	ldr	r3, [r7]
   1dca4:	cmp	r3, #0
   1dca8:	beq	1dd58 <_obstack_memory_used@@Base+0x2b54>
   1dcac:	ldr	r0, [r3, #8]
   1dcb0:	ldr	r5, [r3, #16]
   1dcb4:	cmp	r0, #0
   1dcb8:	moveq	sl, r9
   1dcbc:	beq	1dcd0 <_obstack_memory_used@@Base+0x2acc>
   1dcc0:	mov	r1, r8
   1dcc4:	bl	11550 <strchr@plt>
   1dcc8:	adds	sl, r0, #0
   1dccc:	movne	sl, #1
   1dcd0:	cmp	r5, #0
   1dcd4:	beq	1dd48 <_obstack_memory_used@@Base+0x2b44>
   1dcd8:	ldr	r3, [r5]
   1dcdc:	cmp	r3, #0
   1dce0:	beq	1dd48 <_obstack_memory_used@@Base+0x2b44>
   1dce4:	ldr	r0, [r3, #8]
   1dce8:	ldr	r4, [r3, #16]
   1dcec:	cmp	r0, #0
   1dcf0:	moveq	fp, r9
   1dcf4:	beq	1dd08 <_obstack_memory_used@@Base+0x2b04>
   1dcf8:	mov	r1, r8
   1dcfc:	bl	11550 <strchr@plt>
   1dd00:	adds	fp, r0, #0
   1dd04:	movne	fp, #1
   1dd08:	cmp	r4, #0
   1dd0c:	beq	1dd38 <_obstack_memory_used@@Base+0x2b34>
   1dd10:	ldr	r3, [r4]
   1dd14:	cmp	r3, #0
   1dd18:	beq	1dd38 <_obstack_memory_used@@Base+0x2b34>
   1dd1c:	ldr	r1, [r3, #16]
   1dd20:	ldr	r0, [r3, #8]
   1dd24:	bl	1dae4 <_obstack_memory_used@@Base+0x28e0>
   1dd28:	ldr	r3, [r4, #16]!
   1dd2c:	cmp	r3, #0
   1dd30:	add	fp, fp, r0
   1dd34:	bne	1dd1c <_obstack_memory_used@@Base+0x2b18>
   1dd38:	ldr	r3, [r5, #16]!
   1dd3c:	add	sl, sl, fp
   1dd40:	cmp	r3, #0
   1dd44:	bne	1dce4 <_obstack_memory_used@@Base+0x2ae0>
   1dd48:	ldr	r3, [r7, #16]!
   1dd4c:	add	r6, r6, sl
   1dd50:	cmp	r3, #0
   1dd54:	bne	1dcac <_obstack_memory_used@@Base+0x2aa8>
   1dd58:	ldr	r2, [sp, #44]	; 0x2c
   1dd5c:	ldr	r3, [r2, #16]!
   1dd60:	str	r2, [sp, #44]	; 0x2c
   1dd64:	ldr	r2, [sp, #16]
   1dd68:	cmp	r3, #0
   1dd6c:	add	r2, r2, r6
   1dd70:	str	r2, [sp, #16]
   1dd74:	bne	1dc70 <_obstack_memory_used@@Base+0x2a6c>
   1dd78:	ldr	r2, [sp, #40]	; 0x28
   1dd7c:	ldr	r1, [sp, #16]
   1dd80:	ldr	r3, [r2, #16]!
   1dd84:	str	r2, [sp, #40]	; 0x28
   1dd88:	ldr	r2, [sp, #12]
   1dd8c:	cmp	r3, #0
   1dd90:	add	r2, r2, r1
   1dd94:	str	r2, [sp, #12]
   1dd98:	bne	1dc30 <_obstack_memory_used@@Base+0x2a2c>
   1dd9c:	ldr	r2, [sp, #36]	; 0x24
   1dda0:	ldr	r1, [sp, #12]
   1dda4:	ldr	r3, [r2, #16]!
   1dda8:	str	r2, [sp, #36]	; 0x24
   1ddac:	ldr	r2, [sp, #8]
   1ddb0:	cmp	r3, #0
   1ddb4:	add	r2, r2, r1
   1ddb8:	str	r2, [sp, #8]
   1ddbc:	bne	1dbf0 <_obstack_memory_used@@Base+0x29ec>
   1ddc0:	ldr	r2, [sp, #32]
   1ddc4:	ldr	r3, [r2, #16]!
   1ddc8:	str	r2, [sp, #32]
   1ddcc:	ldmib	sp, {r1, r2}
   1ddd0:	cmp	r3, #0
   1ddd4:	add	r2, r2, r1
   1ddd8:	str	r2, [sp, #4]
   1dddc:	bne	1dbb0 <_obstack_memory_used@@Base+0x29ac>
   1dde0:	ldr	r2, [sp, #28]
   1dde4:	ldr	r3, [r2, #16]!
   1dde8:	str	r2, [sp, #28]
   1ddec:	ldm	sp, {r1, r2}
   1ddf0:	cmp	r3, #0
   1ddf4:	add	r2, r2, r1
   1ddf8:	str	r2, [sp]
   1ddfc:	bne	1db70 <_obstack_memory_used@@Base+0x296c>
   1de00:	ldr	r2, [sp, #24]
   1de04:	ldr	r1, [sp]
   1de08:	ldr	r3, [r2, #16]!
   1de0c:	str	r2, [sp, #24]
   1de10:	ldr	r2, [sp, #20]
   1de14:	cmp	r3, #0
   1de18:	add	r2, r2, r1
   1de1c:	str	r2, [sp, #20]
   1de20:	bne	1db30 <_obstack_memory_used@@Base+0x292c>
   1de24:	ldr	r0, [sp, #20]
   1de28:	add	sp, sp, #52	; 0x34
   1de2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de34:	add	fp, sp, #32
   1de38:	sub	sp, sp, #36	; 0x24
   1de3c:	ldr	r3, [r0, #4]
   1de40:	cmp	r3, #0
   1de44:	str	r3, [fp, #-40]	; 0xffffffd8
   1de48:	bne	1de54 <_obstack_memory_used@@Base+0x2c50>
   1de4c:	sub	sp, fp, #32
   1de50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de54:	mov	r4, r0
   1de58:	str	r0, [fp, #-60]	; 0xffffffc4
   1de5c:	ldr	r0, [r0, #8]
   1de60:	str	r1, [fp, #-44]	; 0xffffffd4
   1de64:	bl	11544 <strlen@plt>
   1de68:	ldr	r3, [r4]
   1de6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1de70:	add	r3, r3, #28
   1de74:	mov	r9, r3
   1de78:	str	r3, [fp, #-64]	; 0xffffffc0
   1de7c:	mov	sl, r9
   1de80:	str	r2, [fp, #-48]	; 0xffffffd0
   1de84:	add	r3, r0, #15
   1de88:	bic	r3, r3, #7
   1de8c:	sub	sp, sp, r3
   1de90:	str	sp, [fp, #-56]	; 0xffffffc8
   1de94:	str	sp, [fp, #-52]	; 0xffffffcc
   1de98:	ldr	r5, [sl, #-24]	; 0xffffffe8
   1de9c:	ldr	r4, [sl, #-28]	; 0xffffffe4
   1dea0:	cmp	r5, #0
   1dea4:	ldr	r9, [sl, #-20]	; 0xffffffec
   1dea8:	beq	1df20 <_obstack_memory_used@@Base+0x2d1c>
   1deac:	mov	r8, r4
   1deb0:	b	1dec0 <_obstack_memory_used@@Base+0x2cbc>
   1deb4:	subs	r5, r5, #1
   1deb8:	add	r4, r4, #24
   1debc:	beq	1df20 <_obstack_memory_used@@Base+0x2d1c>
   1dec0:	ldr	r6, [r4, #12]
   1dec4:	tst	r6, #8
   1dec8:	bne	1deb4 <_obstack_memory_used@@Base+0x2cb0>
   1decc:	ldr	r7, [r4, #4]
   1ded0:	sub	r3, r7, #1
   1ded4:	cmp	r3, #254	; 0xfe
   1ded8:	bhi	1deb4 <_obstack_memory_used@@Base+0x2cb0>
   1dedc:	bl	11520 <__ctype_b_loc@plt>
   1dee0:	lsl	r3, r7, #1
   1dee4:	ldr	r2, [r0]
   1dee8:	ldrh	r3, [r2, r3]
   1deec:	tst	r3, #16384	; 0x4000
   1def0:	beq	1deb4 <_obstack_memory_used@@Base+0x2cb0>
   1def4:	ldrb	r3, [r9]
   1def8:	cmp	r7, r3
   1defc:	bne	1deb4 <_obstack_memory_used@@Base+0x2cb0>
   1df00:	tst	r6, #4
   1df04:	moveq	r8, r4
   1df08:	tst	r6, #2
   1df0c:	beq	1e094 <_obstack_memory_used@@Base+0x2e90>
   1df10:	subs	r5, r5, #1
   1df14:	add	r9, r9, #1
   1df18:	add	r4, r4, #24
   1df1c:	bne	1dec0 <_obstack_memory_used@@Base+0x2cbc>
   1df20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1df24:	add	sl, sl, #28
   1df28:	subs	r3, r3, #1
   1df2c:	str	r3, [fp, #-48]	; 0xffffffd0
   1df30:	bne	1de98 <_obstack_memory_used@@Base+0x2c94>
   1df34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1df38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1df3c:	cmp	r3, r2
   1df40:	bcc	1e248 <_obstack_memory_used@@Base+0x3044>
   1df44:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1df48:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1df4c:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1df50:	cmp	r5, #0
   1df54:	ldr	r6, [r7, #-20]	; 0xffffffec
   1df58:	movne	r8, r4
   1df5c:	bne	1df70 <_obstack_memory_used@@Base+0x2d6c>
   1df60:	b	1dfd0 <_obstack_memory_used@@Base+0x2dcc>
   1df64:	subs	r5, r5, #1
   1df68:	add	r4, r4, #24
   1df6c:	beq	1dfd0 <_obstack_memory_used@@Base+0x2dcc>
   1df70:	ldr	r9, [r4, #12]
   1df74:	tst	r9, #8
   1df78:	bne	1df64 <_obstack_memory_used@@Base+0x2d60>
   1df7c:	ldr	sl, [r4, #4]
   1df80:	sub	r3, sl, #1
   1df84:	cmp	r3, #254	; 0xfe
   1df88:	bhi	1df64 <_obstack_memory_used@@Base+0x2d60>
   1df8c:	bl	11520 <__ctype_b_loc@plt>
   1df90:	lsl	r3, sl, #1
   1df94:	ldr	r1, [r0]
   1df98:	ldrh	r3, [r1, r3]
   1df9c:	tst	r3, #16384	; 0x4000
   1dfa0:	beq	1df64 <_obstack_memory_used@@Base+0x2d60>
   1dfa4:	ldrb	r3, [r6]
   1dfa8:	cmp	sl, r3
   1dfac:	bne	1df64 <_obstack_memory_used@@Base+0x2d60>
   1dfb0:	tst	r9, #4
   1dfb4:	moveq	r8, r4
   1dfb8:	tst	r9, #2
   1dfbc:	beq	1e0cc <_obstack_memory_used@@Base+0x2ec8>
   1dfc0:	subs	r5, r5, #1
   1dfc4:	add	r6, r6, #1
   1dfc8:	add	r4, r4, #24
   1dfcc:	bne	1df70 <_obstack_memory_used@@Base+0x2d6c>
   1dfd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dfd4:	add	r7, r7, #28
   1dfd8:	subs	r3, r3, #1
   1dfdc:	str	r3, [fp, #-40]	; 0xffffffd8
   1dfe0:	bne	1df48 <_obstack_memory_used@@Base+0x2d44>
   1dfe4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1dfe8:	ldm	r3, {r7, r8}
   1dfec:	cmp	r8, #0
   1dff0:	beq	1de4c <_obstack_memory_used@@Base+0x2c48>
   1dff4:	ldr	sl, [pc, #652]	; 1e288 <_obstack_memory_used@@Base+0x3084>
   1dff8:	ldr	r9, [pc, #652]	; 1e28c <_obstack_memory_used@@Base+0x3088>
   1dffc:	add	r7, r7, #28
   1e000:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1e004:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1e008:	cmp	r5, #0
   1e00c:	movne	r6, r4
   1e010:	bne	1e024 <_obstack_memory_used@@Base+0x2e20>
   1e014:	b	1e080 <_obstack_memory_used@@Base+0x2e7c>
   1e018:	subs	r5, r5, #1
   1e01c:	add	r4, r4, #24
   1e020:	beq	1e080 <_obstack_memory_used@@Base+0x2e7c>
   1e024:	ldr	r2, [r4]
   1e028:	cmp	r2, #0
   1e02c:	beq	1e018 <_obstack_memory_used@@Base+0x2e14>
   1e030:	ldr	r1, [r4, #12]
   1e034:	tst	r1, #4
   1e038:	moveq	r6, r4
   1e03c:	tst	r1, #2
   1e040:	bne	1e018 <_obstack_memory_used@@Base+0x2e14>
   1e044:	ldr	r3, [r4, #8]
   1e048:	ldr	r0, [r6, #12]
   1e04c:	cmp	r3, #0
   1e050:	orr	r1, r1, r0
   1e054:	beq	1e178 <_obstack_memory_used@@Base+0x2f74>
   1e058:	tst	r1, #16
   1e05c:	bne	1e018 <_obstack_memory_used@@Base+0x2e14>
   1e060:	tst	r1, #1
   1e064:	movne	r1, r9
   1e068:	moveq	r1, sl
   1e06c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e070:	bl	22f84 <argp_error@@Base+0x2108>
   1e074:	subs	r5, r5, #1
   1e078:	add	r4, r4, #24
   1e07c:	bne	1e024 <_obstack_memory_used@@Base+0x2e20>
   1e080:	subs	r8, r8, #1
   1e084:	add	r7, r7, #28
   1e088:	bne	1e000 <_obstack_memory_used@@Base+0x2dfc>
   1e08c:	sub	sp, fp, #32
   1e090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e094:	ldr	r3, [r4, #8]
   1e098:	cmp	r3, #0
   1e09c:	bne	1df10 <_obstack_memory_used@@Base+0x2d0c>
   1e0a0:	ldr	r3, [r8, #8]
   1e0a4:	cmp	r3, #0
   1e0a8:	bne	1df10 <_obstack_memory_used@@Base+0x2d0c>
   1e0ac:	ldr	r3, [r8, #12]
   1e0b0:	orr	r6, r6, r3
   1e0b4:	tst	r6, #16
   1e0b8:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   1e0bc:	strbeq	r7, [r3]
   1e0c0:	addeq	r3, r3, #1
   1e0c4:	streq	r3, [fp, #-52]	; 0xffffffcc
   1e0c8:	b	1df10 <_obstack_memory_used@@Base+0x2d0c>
   1e0cc:	ldr	r3, [r4, #8]
   1e0d0:	ldr	r1, [r8, #12]
   1e0d4:	cmp	r3, #0
   1e0d8:	orr	r9, r9, r1
   1e0dc:	beq	1e1d4 <_obstack_memory_used@@Base+0x2fd0>
   1e0e0:	tst	r9, #16
   1e0e4:	bne	1dfc0 <_obstack_memory_used@@Base+0x2dbc>
   1e0e8:	tst	r9, #1
   1e0ec:	bne	1e19c <_obstack_memory_used@@Base+0x2f98>
   1e0f0:	mov	r0, r3
   1e0f4:	str	r3, [fp, #-48]	; 0xffffffd0
   1e0f8:	bl	11544 <strlen@plt>
   1e0fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e100:	ldr	r1, [r3, #28]
   1e104:	ldr	r2, [r3, #24]
   1e108:	sub	r2, r1, r2
   1e10c:	mov	r9, r0
   1e110:	ldr	r0, [r3, #16]
   1e114:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e118:	cmp	r2, r0
   1e11c:	bhi	1e230 <_obstack_memory_used@@Base+0x302c>
   1e120:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1e124:	ldr	r2, [ip, #20]
   1e128:	ldr	r0, [ip, #8]
   1e12c:	bic	r2, r2, r2, asr #31
   1e130:	add	r2, r2, #6
   1e134:	add	r2, r2, r9
   1e138:	cmp	r2, r0
   1e13c:	bcc	1e1b0 <_obstack_memory_used@@Base+0x2fac>
   1e140:	ldr	r2, [ip, #32]
   1e144:	mov	r0, ip
   1e148:	cmp	r2, r1
   1e14c:	bls	1e1e4 <_obstack_memory_used@@Base+0x2fe0>
   1e150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e154:	add	r2, r1, #1
   1e158:	str	r2, [r0, #28]
   1e15c:	mov	r2, #10
   1e160:	strb	r2, [r1]
   1e164:	ldr	r2, [r4, #4]
   1e168:	ldr	r1, [pc, #288]	; 1e290 <_obstack_memory_used@@Base+0x308c>
   1e16c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e170:	bl	22f84 <argp_error@@Base+0x2108>
   1e174:	b	1dfc0 <_obstack_memory_used@@Base+0x2dbc>
   1e178:	tst	r1, #16
   1e17c:	bne	1e018 <_obstack_memory_used@@Base+0x2e14>
   1e180:	ldr	r3, [r6, #8]
   1e184:	cmp	r3, #0
   1e188:	bne	1e060 <_obstack_memory_used@@Base+0x2e5c>
   1e18c:	ldr	r1, [pc, #256]	; 1e294 <_obstack_memory_used@@Base+0x3090>
   1e190:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e194:	bl	22f84 <argp_error@@Base+0x2108>
   1e198:	b	1e018 <_obstack_memory_used@@Base+0x2e14>
   1e19c:	mov	r2, sl
   1e1a0:	ldr	r1, [pc, #240]	; 1e298 <_obstack_memory_used@@Base+0x3094>
   1e1a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e1a8:	bl	22f84 <argp_error@@Base+0x2108>
   1e1ac:	b	1dfc0 <_obstack_memory_used@@Base+0x2dbc>
   1e1b0:	ldr	r2, [ip, #32]
   1e1b4:	cmp	r2, r1
   1e1b8:	bls	1e208 <_obstack_memory_used@@Base+0x3004>
   1e1bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e1c0:	add	r2, r1, #1
   1e1c4:	str	r2, [r0, #28]
   1e1c8:	mov	r2, #32
   1e1cc:	strb	r2, [r1]
   1e1d0:	b	1e164 <_obstack_memory_used@@Base+0x2f60>
   1e1d4:	ldr	r3, [r8, #8]
   1e1d8:	cmp	r3, #0
   1e1dc:	beq	1dfc0 <_obstack_memory_used@@Base+0x2dbc>
   1e1e0:	b	1e0e0 <_obstack_memory_used@@Base+0x2edc>
   1e1e4:	mov	r1, #1
   1e1e8:	str	r3, [fp, #-48]	; 0xffffffd0
   1e1ec:	mov	r9, ip
   1e1f0:	bl	22e84 <argp_error@@Base+0x2008>
   1e1f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e1f8:	cmp	r0, #0
   1e1fc:	beq	1e164 <_obstack_memory_used@@Base+0x2f60>
   1e200:	ldr	r1, [r9, #28]
   1e204:	b	1e150 <_obstack_memory_used@@Base+0x2f4c>
   1e208:	ldr	r9, [fp, #-44]	; 0xffffffd4
   1e20c:	mov	r1, #1
   1e210:	mov	r0, r9
   1e214:	str	r3, [fp, #-48]	; 0xffffffd0
   1e218:	bl	22e84 <argp_error@@Base+0x2008>
   1e21c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e220:	cmp	r0, #0
   1e224:	beq	1e164 <_obstack_memory_used@@Base+0x2f60>
   1e228:	ldr	r1, [r9, #28]
   1e22c:	b	1e1bc <_obstack_memory_used@@Base+0x2fb8>
   1e230:	ldr	sl, [fp, #-44]	; 0xffffffd4
   1e234:	mov	r0, sl
   1e238:	bl	228d8 <argp_error@@Base+0x1a5c>
   1e23c:	ldr	r1, [sl, #28]
   1e240:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e244:	b	1e120 <_obstack_memory_used@@Base+0x2f1c>
   1e248:	mov	r2, r3
   1e24c:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   1e250:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e254:	ldr	r1, [pc, #64]	; 1e29c <_obstack_memory_used@@Base+0x3098>
   1e258:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e25c:	strb	ip, [r3]
   1e260:	bl	22f84 <argp_error@@Base+0x2108>
   1e264:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e268:	ldr	r3, [r2, #4]
   1e26c:	cmp	r3, #0
   1e270:	str	r3, [fp, #-40]	; 0xffffffd8
   1e274:	beq	1de4c <_obstack_memory_used@@Base+0x2c48>
   1e278:	ldr	r3, [r2]
   1e27c:	add	r3, r3, #28
   1e280:	str	r3, [fp, #-64]	; 0xffffffc0
   1e284:	b	1df44 <_obstack_memory_used@@Base+0x2d40>
   1e288:			; <UNDEFINED> instruction: 0x000266b4
   1e28c:	andeq	r6, r2, r4, lsr #13
   1e290:	muleq	r2, r8, r6
   1e294:	andeq	r6, r2, r0, asr #13
   1e298:	andeq	r6, r2, ip, lsl #13
   1e29c:	andeq	r6, r2, r4, lsl #13
   1e2a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2a4:	subs	r4, r1, #0
   1e2a8:	sub	sp, sp, #12
   1e2ac:	mov	r8, r0
   1e2b0:	mov	r7, r2
   1e2b4:	beq	1e488 <_obstack_memory_used@@Base+0x3284>
   1e2b8:	ldr	r3, [r4, #20]
   1e2bc:	cmp	r3, #0
   1e2c0:	beq	1e488 <_obstack_memory_used@@Base+0x3284>
   1e2c4:	ldr	r1, [r2, #16]
   1e2c8:	mov	r0, r4
   1e2cc:	bl	1ab80 <argp_parse@@Base+0xe20>
   1e2d0:	ldr	r3, [r4, #20]
   1e2d4:	mov	r1, r8
   1e2d8:	mov	r2, r0
   1e2dc:	ldr	r0, [pc, #628]	; 1e558 <_obstack_memory_used@@Base+0x3354>
   1e2e0:	blx	r3
   1e2e4:	mov	r6, r0
   1e2e8:	cmp	r6, #0
   1e2ec:	beq	1e454 <_obstack_memory_used@@Base+0x3250>
   1e2f0:	ldrb	r3, [r6]
   1e2f4:	cmp	r3, #0
   1e2f8:	beq	1e448 <_obstack_memory_used@@Base+0x3244>
   1e2fc:	ldr	r3, [r7, #8]
   1e300:	ldr	r3, [r3]
   1e304:	cmp	r3, #0
   1e308:	beq	1e330 <_obstack_memory_used@@Base+0x312c>
   1e30c:	ldr	r4, [r7, #4]
   1e310:	ldr	r3, [r4, #28]
   1e314:	ldr	r2, [r4, #32]
   1e318:	cmp	r3, r2
   1e31c:	bcs	1e53c <_obstack_memory_used@@Base+0x3338>
   1e320:	add	r1, r3, #1
   1e324:	mov	r2, #10
   1e328:	str	r1, [r4, #28]
   1e32c:	strb	r2, [r3]
   1e330:	ldr	r4, [r7, #4]
   1e334:	ldr	sl, [pc, #544]	; 1e55c <_obstack_memory_used@@Base+0x3358>
   1e338:	ldr	r3, [r4, #28]
   1e33c:	ldr	r1, [r4, #24]
   1e340:	ldr	r2, [r4, #16]
   1e344:	sub	r3, r3, r1
   1e348:	cmp	r3, r2
   1e34c:	ldr	r5, [sl, #24]
   1e350:	bhi	1e514 <_obstack_memory_used@@Base+0x3310>
   1e354:	ldr	r3, [r4, #20]
   1e358:	mov	fp, #32
   1e35c:	cmp	r3, #0
   1e360:	subge	r5, r5, r3
   1e364:	mov	r9, #1
   1e368:	cmp	r5, #0
   1e36c:	sub	r5, r5, #1
   1e370:	ble	1e39c <_obstack_memory_used@@Base+0x3198>
   1e374:	ldr	r3, [r4, #28]
   1e378:	ldr	r2, [r4, #32]
   1e37c:	cmp	r3, r2
   1e380:	bcs	1e46c <_obstack_memory_used@@Base+0x3268>
   1e384:	add	r2, r3, #1
   1e388:	cmp	r5, #0
   1e38c:	str	r2, [r4, #28]
   1e390:	sub	r5, r5, #1
   1e394:	strb	fp, [r3]
   1e398:	bgt	1e374 <_obstack_memory_used@@Base+0x3170>
   1e39c:	ldr	r4, [r7, #4]
   1e3a0:	ldr	r9, [sl, #24]
   1e3a4:	ldr	r5, [r4, #28]
   1e3a8:	ldr	r3, [r4, #24]
   1e3ac:	ldr	r2, [r4, #16]
   1e3b0:	sub	r3, r5, r3
   1e3b4:	cmp	r3, r2
   1e3b8:	strls	r9, [r4, #4]
   1e3bc:	movls	fp, r4
   1e3c0:	bhi	1e4c8 <_obstack_memory_used@@Base+0x32c4>
   1e3c4:	str	r9, [fp, #12]
   1e3c8:	mov	r0, r6
   1e3cc:	bl	11544 <strlen@plt>
   1e3d0:	subs	r9, r0, #0
   1e3d4:	beq	1e40c <_obstack_memory_used@@Base+0x3208>
   1e3d8:	ldr	r2, [r4, #32]
   1e3dc:	add	r3, r5, r9
   1e3e0:	cmp	r2, r3
   1e3e4:	bcc	1e498 <_obstack_memory_used@@Base+0x3294>
   1e3e8:	mov	r2, r9
   1e3ec:	mov	r0, r5
   1e3f0:	mov	r1, r6
   1e3f4:	bl	1140c <memcpy@plt>
   1e3f8:	ldr	r3, [r4, #28]
   1e3fc:	add	r9, r3, r9
   1e400:	str	r9, [r4, #28]
   1e404:	ldr	r4, [r7, #4]
   1e408:	ldr	r5, [r4, #28]
   1e40c:	ldr	r3, [r4, #24]
   1e410:	ldr	r2, [r4, #16]
   1e414:	sub	r3, r5, r3
   1e418:	cmp	r3, r2
   1e41c:	movls	r9, r4
   1e420:	bhi	1e4b4 <_obstack_memory_used@@Base+0x32b0>
   1e424:	ldr	r2, [r9, #32]
   1e428:	mov	r3, #0
   1e42c:	cmp	r2, r5
   1e430:	str	r3, [r4, #4]
   1e434:	bls	1e520 <_obstack_memory_used@@Base+0x331c>
   1e438:	add	r2, r5, #1
   1e43c:	mov	r3, #10
   1e440:	str	r2, [r9, #28]
   1e444:	strb	r3, [r5]
   1e448:	ldr	r3, [r7, #8]
   1e44c:	mov	r2, #1
   1e450:	str	r2, [r3, #4]
   1e454:	cmp	r8, r6
   1e458:	beq	1e490 <_obstack_memory_used@@Base+0x328c>
   1e45c:	mov	r0, r6
   1e460:	add	sp, sp, #12
   1e464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e468:	b	1acdc <argp_parse@@Base+0xf7c>
   1e46c:	mov	r1, r9
   1e470:	mov	r0, r4
   1e474:	bl	22e84 <argp_error@@Base+0x2008>
   1e478:	cmp	r0, #0
   1e47c:	beq	1e368 <_obstack_memory_used@@Base+0x3164>
   1e480:	ldr	r3, [r4, #28]
   1e484:	b	1e384 <_obstack_memory_used@@Base+0x3180>
   1e488:	mov	r6, r8
   1e48c:	b	1e2e8 <_obstack_memory_used@@Base+0x30e4>
   1e490:	add	sp, sp, #12
   1e494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e498:	mov	r1, r9
   1e49c:	mov	r0, r4
   1e4a0:	bl	22e84 <argp_error@@Base+0x2008>
   1e4a4:	cmp	r0, #0
   1e4a8:	beq	1e404 <_obstack_memory_used@@Base+0x3200>
   1e4ac:	ldr	r5, [r4, #28]
   1e4b0:	b	1e3e8 <_obstack_memory_used@@Base+0x31e4>
   1e4b4:	mov	r0, r4
   1e4b8:	bl	228d8 <argp_error@@Base+0x1a5c>
   1e4bc:	ldr	r9, [r7, #4]
   1e4c0:	ldr	r5, [r9, #28]
   1e4c4:	b	1e424 <_obstack_memory_used@@Base+0x3220>
   1e4c8:	mov	r0, r4
   1e4cc:	str	r9, [sp, #4]
   1e4d0:	bl	228d8 <argp_error@@Base+0x1a5c>
   1e4d4:	ldr	fp, [r7, #4]
   1e4d8:	ldr	r3, [sp, #4]
   1e4dc:	ldr	r9, [sl, #24]
   1e4e0:	ldr	r5, [fp, #28]
   1e4e4:	ldr	r2, [fp, #24]
   1e4e8:	ldr	r1, [fp, #16]
   1e4ec:	sub	r2, r5, r2
   1e4f0:	cmp	r2, r1
   1e4f4:	str	r3, [r4, #4]
   1e4f8:	movls	r4, fp
   1e4fc:	bls	1e3c4 <_obstack_memory_used@@Base+0x31c0>
   1e500:	mov	r0, fp
   1e504:	bl	228d8 <argp_error@@Base+0x1a5c>
   1e508:	ldr	r4, [r7, #4]
   1e50c:	ldr	r5, [r4, #28]
   1e510:	b	1e3c4 <_obstack_memory_used@@Base+0x31c0>
   1e514:	mov	r0, r4
   1e518:	bl	228d8 <argp_error@@Base+0x1a5c>
   1e51c:	b	1e354 <_obstack_memory_used@@Base+0x3150>
   1e520:	mov	r1, #1
   1e524:	mov	r0, r9
   1e528:	bl	22e84 <argp_error@@Base+0x2008>
   1e52c:	cmp	r0, #0
   1e530:	beq	1e448 <_obstack_memory_used@@Base+0x3244>
   1e534:	ldr	r5, [r9, #28]
   1e538:	b	1e438 <_obstack_memory_used@@Base+0x3234>
   1e53c:	mov	r1, #1
   1e540:	mov	r0, r4
   1e544:	bl	22e84 <argp_error@@Base+0x2008>
   1e548:	cmp	r0, #0
   1e54c:	beq	1e330 <_obstack_memory_used@@Base+0x312c>
   1e550:	ldr	r3, [r4, #28]
   1e554:	b	1e320 <_obstack_memory_used@@Base+0x311c>
   1e558:	andeq	r0, r0, #3
   1e55c:	andeq	r7, r3, r0, lsl #22
   1e560:	ldr	r3, [r1, #12]
   1e564:	push	{r4, r5, r6, r7, r8, lr}
   1e568:	cmp	r3, #0
   1e56c:	mov	r6, r1
   1e570:	mov	r5, r0
   1e574:	beq	1e65c <_obstack_memory_used@@Base+0x3458>
   1e578:	ldr	r3, [r1, #8]
   1e57c:	ldr	r2, [r1]
   1e580:	ldr	r7, [r3]
   1e584:	ldr	r3, [r3, #4]
   1e588:	ldr	r4, [r2, #16]
   1e58c:	cmp	r3, #0
   1e590:	cmpne	r7, #0
   1e594:	beq	1e5cc <_obstack_memory_used@@Base+0x33c8>
   1e598:	ldr	r2, [r2, #12]
   1e59c:	ldr	r3, [r7, #12]
   1e5a0:	cmp	r2, r3
   1e5a4:	beq	1e5cc <_obstack_memory_used@@Base+0x33c8>
   1e5a8:	ldr	r8, [r1, #4]
   1e5ac:	ldr	r3, [r8, #28]
   1e5b0:	ldr	r2, [r8, #32]
   1e5b4:	cmp	r3, r2
   1e5b8:	bcs	1e794 <_obstack_memory_used@@Base+0x3590>
   1e5bc:	add	r1, r3, #1
   1e5c0:	mov	r2, #10
   1e5c4:	str	r1, [r8, #28]
   1e5c8:	strb	r2, [r3]
   1e5cc:	cmp	r4, #0
   1e5d0:	beq	1e710 <_obstack_memory_used@@Base+0x350c>
   1e5d4:	ldr	r0, [r4]
   1e5d8:	cmp	r0, #0
   1e5dc:	beq	1e710 <_obstack_memory_used@@Base+0x350c>
   1e5e0:	ldrb	r3, [r0]
   1e5e4:	cmp	r3, #0
   1e5e8:	beq	1e710 <_obstack_memory_used@@Base+0x350c>
   1e5ec:	cmp	r7, #0
   1e5f0:	beq	1e620 <_obstack_memory_used@@Base+0x341c>
   1e5f4:	ldr	r3, [r7, #16]
   1e5f8:	cmp	r4, r3
   1e5fc:	beq	1e710 <_obstack_memory_used@@Base+0x350c>
   1e600:	cmp	r3, #0
   1e604:	beq	1e620 <_obstack_memory_used@@Base+0x341c>
   1e608:	ldr	r3, [r3, #12]
   1e60c:	cmp	r3, #0
   1e610:	cmpne	r4, r3
   1e614:	bne	1e608 <_obstack_memory_used@@Base+0x3404>
   1e618:	cmp	r4, r3
   1e61c:	beq	1e710 <_obstack_memory_used@@Base+0x350c>
   1e620:	ldr	r3, [r6, #4]
   1e624:	ldr	r1, [r4, #16]
   1e628:	mov	r2, r6
   1e62c:	ldr	r7, [r3, #12]
   1e630:	bl	1e2a0 <_obstack_memory_used@@Base+0x309c>
   1e634:	ldr	r8, [r6, #4]
   1e638:	ldr	r3, [r8, #28]
   1e63c:	ldr	r1, [r8, #24]
   1e640:	ldr	r2, [r8, #16]
   1e644:	sub	r3, r3, r1
   1e648:	cmp	r3, r2
   1e64c:	movls	r4, r8
   1e650:	bhi	1e774 <_obstack_memory_used@@Base+0x3570>
   1e654:	str	r7, [r8, #12]
   1e658:	b	1e724 <_obstack_memory_used@@Base+0x3520>
   1e65c:	ldr	r7, [r1, #4]
   1e660:	ldr	r3, [r7, #28]
   1e664:	ldr	r1, [r7, #32]
   1e668:	add	r2, r3, #2
   1e66c:	cmp	r1, r2
   1e670:	bcc	1e6f4 <_obstack_memory_used@@Base+0x34f0>
   1e674:	ldr	r2, [pc, #308]	; 1e7b0 <_obstack_memory_used@@Base+0x35ac>
   1e678:	ldrh	r2, [r2]
   1e67c:	strh	r2, [r3]
   1e680:	ldr	r4, [r6, #4]
   1e684:	ldr	r3, [r7, #28]
   1e688:	add	r3, r3, #2
   1e68c:	str	r3, [r7, #28]
   1e690:	ldr	r1, [r4, #24]
   1e694:	ldr	r3, [r4, #28]
   1e698:	ldr	r2, [r4, #16]
   1e69c:	sub	r3, r3, r1
   1e6a0:	cmp	r3, r2
   1e6a4:	bhi	1e734 <_obstack_memory_used@@Base+0x3530>
   1e6a8:	ldr	r3, [r4, #20]
   1e6ac:	mov	r6, #32
   1e6b0:	cmp	r3, #0
   1e6b4:	subge	r5, r5, r3
   1e6b8:	mov	r7, #1
   1e6bc:	cmp	r5, #0
   1e6c0:	sub	r5, r5, #1
   1e6c4:	ble	1e6f0 <_obstack_memory_used@@Base+0x34ec>
   1e6c8:	ldr	r3, [r4, #28]
   1e6cc:	ldr	r2, [r4, #32]
   1e6d0:	cmp	r3, r2
   1e6d4:	bcs	1e740 <_obstack_memory_used@@Base+0x353c>
   1e6d8:	add	r2, r3, #1
   1e6dc:	cmp	r5, #0
   1e6e0:	str	r2, [r4, #28]
   1e6e4:	sub	r5, r5, #1
   1e6e8:	strb	r6, [r3]
   1e6ec:	bgt	1e6c8 <_obstack_memory_used@@Base+0x34c4>
   1e6f0:	pop	{r4, r5, r6, r7, r8, pc}
   1e6f4:	mov	r1, #2
   1e6f8:	mov	r0, r7
   1e6fc:	bl	22e84 <argp_error@@Base+0x2008>
   1e700:	cmp	r0, #0
   1e704:	beq	1e75c <_obstack_memory_used@@Base+0x3558>
   1e708:	ldr	r3, [r7, #28]
   1e70c:	b	1e674 <_obstack_memory_used@@Base+0x3470>
   1e710:	ldr	r4, [r6, #4]
   1e714:	ldr	r3, [r4, #28]
   1e718:	ldr	r1, [r4, #24]
   1e71c:	ldr	r2, [r4, #16]
   1e720:	sub	r3, r3, r1
   1e724:	mov	r1, #0
   1e728:	cmp	r3, r2
   1e72c:	str	r1, [r6, #12]
   1e730:	bls	1e6a8 <_obstack_memory_used@@Base+0x34a4>
   1e734:	mov	r0, r4
   1e738:	bl	228d8 <argp_error@@Base+0x1a5c>
   1e73c:	b	1e6a8 <_obstack_memory_used@@Base+0x34a4>
   1e740:	mov	r1, r7
   1e744:	mov	r0, r4
   1e748:	bl	22e84 <argp_error@@Base+0x2008>
   1e74c:	cmp	r0, #0
   1e750:	beq	1e6bc <_obstack_memory_used@@Base+0x34b8>
   1e754:	ldr	r3, [r4, #28]
   1e758:	b	1e6d8 <_obstack_memory_used@@Base+0x34d4>
   1e75c:	ldr	r4, [r6, #4]
   1e760:	ldr	r3, [r4, #28]
   1e764:	ldr	r1, [r4, #24]
   1e768:	ldr	r2, [r4, #16]
   1e76c:	sub	r3, r3, r1
   1e770:	b	1e6a0 <_obstack_memory_used@@Base+0x349c>
   1e774:	mov	r0, r8
   1e778:	bl	228d8 <argp_error@@Base+0x1a5c>
   1e77c:	ldr	r4, [r6, #4]
   1e780:	ldr	r3, [r4, #28]
   1e784:	ldr	r1, [r4, #24]
   1e788:	ldr	r2, [r4, #16]
   1e78c:	sub	r3, r3, r1
   1e790:	b	1e654 <_obstack_memory_used@@Base+0x3450>
   1e794:	mov	r1, #1
   1e798:	mov	r0, r8
   1e79c:	bl	22e84 <argp_error@@Base+0x2008>
   1e7a0:	cmp	r0, #0
   1e7a4:	beq	1e5cc <_obstack_memory_used@@Base+0x33c8>
   1e7a8:	ldr	r3, [r8, #28]
   1e7ac:	b	1e5bc <_obstack_memory_used@@Base+0x33b8>
   1e7b0:	andeq	r6, r2, r8, asr #13
   1e7b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e7b8:	sub	sp, sp, #28
   1e7bc:	ldr	r6, [r0, #12]
   1e7c0:	ldr	r7, [r1, #12]
   1e7c4:	cmp	r6, r7
   1e7c8:	beq	1ea40 <_obstack_memory_used@@Base+0x383c>
   1e7cc:	ldr	r8, [r6, #12]
   1e7d0:	ldr	r9, [r7, #12]
   1e7d4:	mov	r5, r1
   1e7d8:	cmp	r8, r9
   1e7dc:	mov	r4, r0
   1e7e0:	beq	1ea08 <_obstack_memory_used@@Base+0x3804>
   1e7e4:	ldr	sl, [r8, #12]
   1e7e8:	ldr	fp, [r9, #12]
   1e7ec:	cmp	sl, fp
   1e7f0:	beq	1eaa8 <_obstack_memory_used@@Base+0x38a4>
   1e7f4:	ldr	r3, [sl, #12]
   1e7f8:	ldr	r2, [fp, #12]
   1e7fc:	cmp	r3, r2
   1e800:	beq	1eadc <_obstack_memory_used@@Base+0x38d8>
   1e804:	ldr	r1, [r3, #12]
   1e808:	ldr	r0, [r2, #12]
   1e80c:	str	r1, [sp]
   1e810:	cmp	r1, r0
   1e814:	str	r0, [sp, #4]
   1e818:	beq	1ea74 <_obstack_memory_used@@Base+0x3870>
   1e81c:	ldr	r1, [r1, #12]
   1e820:	ldr	r0, [r0, #12]
   1e824:	str	r1, [sp, #8]
   1e828:	cmp	r1, r0
   1e82c:	str	r0, [sp, #12]
   1e830:	beq	1eb10 <_obstack_memory_used@@Base+0x390c>
   1e834:	ldr	r0, [r1, #12]
   1e838:	ldr	r1, [sp, #12]
   1e83c:	ldr	r1, [r1, #12]
   1e840:	cmp	r0, r1
   1e844:	beq	1eb50 <_obstack_memory_used@@Base+0x394c>
   1e848:	str	r2, [sp, #20]
   1e84c:	str	r3, [sp, #16]
   1e850:	bl	1e7b4 <_obstack_memory_used@@Base+0x35b0>
   1e854:	cmp	r0, #0
   1e858:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e85c:	ldr	r3, [sp, #12]
   1e860:	ldr	r2, [sp, #20]
   1e864:	ldr	r1, [r3, #8]
   1e868:	ldr	r3, [sp, #8]
   1e86c:	mvn	ip, r1
   1e870:	ldr	r0, [r3, #8]
   1e874:	lsr	ip, ip, #31
   1e878:	ldr	r3, [sp, #16]
   1e87c:	cmp	ip, r0, lsr #31
   1e880:	subne	r0, r0, r1
   1e884:	subeq	r0, r1, r0
   1e888:	cmp	r0, #0
   1e88c:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e890:	ldr	r1, [sp, #12]
   1e894:	ldr	r0, [sp, #8]
   1e898:	ldr	r1, [r1, #4]
   1e89c:	ldr	r0, [r0, #4]
   1e8a0:	sub	r0, r1, r0
   1e8a4:	cmp	r0, #0
   1e8a8:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e8ac:	ldr	r1, [sp, #4]
   1e8b0:	ldr	r0, [sp]
   1e8b4:	ldr	r1, [r1, #8]
   1e8b8:	ldr	r0, [r0, #8]
   1e8bc:	mvn	ip, r1
   1e8c0:	lsr	ip, ip, #31
   1e8c4:	cmp	ip, r0, lsr #31
   1e8c8:	subne	r0, r0, r1
   1e8cc:	subeq	r0, r1, r0
   1e8d0:	cmp	r0, #0
   1e8d4:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e8d8:	ldr	r1, [sp, #4]
   1e8dc:	ldr	r0, [sp]
   1e8e0:	ldr	r1, [r1, #4]
   1e8e4:	ldr	r0, [r0, #4]
   1e8e8:	sub	r0, r1, r0
   1e8ec:	cmp	r0, #0
   1e8f0:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e8f4:	ldr	r1, [r2, #8]
   1e8f8:	ldr	r0, [r3, #8]
   1e8fc:	mvn	ip, r1
   1e900:	lsr	ip, ip, #31
   1e904:	cmp	ip, r0, lsr #31
   1e908:	subne	r0, r0, r1
   1e90c:	subeq	r0, r1, r0
   1e910:	cmp	r0, #0
   1e914:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e918:	ldr	r2, [r2, #4]
   1e91c:	ldr	r0, [r3, #4]
   1e920:	sub	r0, r2, r0
   1e924:	cmp	r0, #0
   1e928:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e92c:	ldr	r3, [fp, #8]
   1e930:	ldr	r0, [sl, #8]
   1e934:	mvn	r2, r3
   1e938:	lsr	r2, r2, #31
   1e93c:	cmp	r2, r0, lsr #31
   1e940:	subne	r0, r0, r3
   1e944:	subeq	r0, r3, r0
   1e948:	cmp	r0, #0
   1e94c:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e950:	ldr	r3, [fp, #4]
   1e954:	ldr	r0, [sl, #4]
   1e958:	sub	r0, r3, r0
   1e95c:	cmp	r0, #0
   1e960:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e964:	ldr	r3, [r9, #8]
   1e968:	ldr	r0, [r8, #8]
   1e96c:	mvn	r2, r3
   1e970:	lsr	r2, r2, #31
   1e974:	cmp	r2, r0, lsr #31
   1e978:	subne	r0, r0, r3
   1e97c:	subeq	r0, r3, r0
   1e980:	cmp	r0, #0
   1e984:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e988:	ldr	r3, [r9, #4]
   1e98c:	ldr	r0, [r8, #4]
   1e990:	sub	r0, r3, r0
   1e994:	cmp	r0, #0
   1e998:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e99c:	ldr	r3, [r7, #8]
   1e9a0:	ldr	r0, [r6, #8]
   1e9a4:	mvn	r2, r3
   1e9a8:	lsr	r2, r2, #31
   1e9ac:	cmp	r2, r0, lsr #31
   1e9b0:	subne	r0, r0, r3
   1e9b4:	subeq	r0, r3, r0
   1e9b8:	cmp	r0, #0
   1e9bc:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e9c0:	ldr	r3, [r7, #4]
   1e9c4:	ldr	r0, [r6, #4]
   1e9c8:	sub	r0, r3, r0
   1e9cc:	cmp	r0, #0
   1e9d0:	bne	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1e9d4:	ldr	r3, [r5, #8]
   1e9d8:	ldr	r0, [r4, #8]
   1e9dc:	mvn	r2, r3
   1e9e0:	lsr	r2, r2, #31
   1e9e4:	cmp	r2, r0, lsr #31
   1e9e8:	subne	r0, r0, r3
   1e9ec:	subeq	r0, r3, r0
   1e9f0:	cmp	r0, #0
   1e9f4:	ldreq	r3, [r5, #4]
   1e9f8:	ldreq	r0, [r4, #4]
   1e9fc:	subeq	r0, r3, r0
   1ea00:	add	sp, sp, #28
   1ea04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea08:	ldr	r3, [r7, #8]
   1ea0c:	ldr	r0, [r6, #8]
   1ea10:	mvn	r2, r3
   1ea14:	ldr	r1, [r7, #4]
   1ea18:	lsr	r2, r2, #31
   1ea1c:	cmp	r2, r0, lsr #31
   1ea20:	subne	r0, r0, r3
   1ea24:	subeq	r0, r3, r0
   1ea28:	ldr	r2, [r6, #4]
   1ea2c:	cmp	r0, #0
   1ea30:	subeq	r0, r1, r2
   1ea34:	beq	1e9cc <_obstack_memory_used@@Base+0x37c8>
   1ea38:	add	sp, sp, #28
   1ea3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea40:	ldr	r2, [r1, #8]
   1ea44:	ldr	r3, [r0, #8]
   1ea48:	mvn	ip, r2
   1ea4c:	ldr	lr, [r1, #4]
   1ea50:	lsr	ip, ip, #31
   1ea54:	cmp	ip, r3, lsr #31
   1ea58:	ldr	r1, [r0, #4]
   1ea5c:	subne	r0, r3, r2
   1ea60:	subeq	r0, r2, r3
   1ea64:	cmp	r0, #0
   1ea68:	subeq	r0, lr, r1
   1ea6c:	add	sp, sp, #28
   1ea70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea74:	ldr	r1, [r2, #8]
   1ea78:	ldr	r0, [r3, #8]
   1ea7c:	mvn	ip, r1
   1ea80:	ldr	r2, [r2, #4]
   1ea84:	lsr	ip, ip, #31
   1ea88:	cmp	ip, r0, lsr #31
   1ea8c:	subne	r0, r0, r1
   1ea90:	subeq	r0, r1, r0
   1ea94:	ldr	r3, [r3, #4]
   1ea98:	cmp	r0, #0
   1ea9c:	subeq	r0, r2, r3
   1eaa0:	beq	1e924 <_obstack_memory_used@@Base+0x3720>
   1eaa4:	b	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1eaa8:	ldr	r3, [r9, #8]
   1eaac:	ldr	r0, [r8, #8]
   1eab0:	mvn	r2, r3
   1eab4:	ldr	r1, [r9, #4]
   1eab8:	lsr	r2, r2, #31
   1eabc:	cmp	r2, r0, lsr #31
   1eac0:	subne	r0, r0, r3
   1eac4:	subeq	r0, r3, r0
   1eac8:	ldr	r2, [r8, #4]
   1eacc:	cmp	r0, #0
   1ead0:	subeq	r0, r1, r2
   1ead4:	beq	1e994 <_obstack_memory_used@@Base+0x3790>
   1ead8:	b	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1eadc:	ldr	r3, [fp, #8]
   1eae0:	ldr	r0, [sl, #8]
   1eae4:	mvn	r2, r3
   1eae8:	ldr	r1, [fp, #4]
   1eaec:	lsr	r2, r2, #31
   1eaf0:	cmp	r2, r0, lsr #31
   1eaf4:	subne	r0, r0, r3
   1eaf8:	subeq	r0, r3, r0
   1eafc:	ldr	r2, [sl, #4]
   1eb00:	cmp	r0, #0
   1eb04:	subeq	r0, r1, r2
   1eb08:	beq	1e95c <_obstack_memory_used@@Base+0x3758>
   1eb0c:	b	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1eb10:	ldr	ip, [sp, #4]
   1eb14:	ldr	r1, [sp]
   1eb18:	ldr	lr, [ip, #8]
   1eb1c:	ldr	r0, [r1, #8]
   1eb20:	mvn	r1, lr
   1eb24:	ldr	ip, [ip, #4]
   1eb28:	lsr	r1, r1, #31
   1eb2c:	cmp	r1, r0, lsr #31
   1eb30:	ldr	r1, [sp]
   1eb34:	subne	r0, r0, lr
   1eb38:	subeq	r0, lr, r0
   1eb3c:	ldr	r1, [r1, #4]
   1eb40:	cmp	r0, #0
   1eb44:	subeq	r0, ip, r1
   1eb48:	beq	1e8ec <_obstack_memory_used@@Base+0x36e8>
   1eb4c:	b	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1eb50:	ldr	ip, [sp, #12]
   1eb54:	ldr	r1, [sp, #8]
   1eb58:	ldr	lr, [ip, #8]
   1eb5c:	ldr	r0, [r1, #8]
   1eb60:	mvn	r1, lr
   1eb64:	ldr	ip, [ip, #4]
   1eb68:	lsr	r1, r1, #31
   1eb6c:	cmp	r1, r0, lsr #31
   1eb70:	ldr	r1, [sp, #8]
   1eb74:	subne	r0, r0, lr
   1eb78:	subeq	r0, lr, r0
   1eb7c:	ldr	r1, [r1, #4]
   1eb80:	cmp	r0, #0
   1eb84:	subeq	r0, ip, r1
   1eb88:	beq	1e8a4 <_obstack_memory_used@@Base+0x36a0>
   1eb8c:	b	1ea00 <_obstack_memory_used@@Base+0x37fc>
   1eb90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb94:	mov	r6, r1
   1eb98:	ldr	r4, [r0, #16]
   1eb9c:	sub	sp, sp, #28
   1eba0:	cmp	r4, #0
   1eba4:	movne	r2, r4
   1eba8:	bne	1ebb4 <_obstack_memory_used@@Base+0x39b0>
   1ebac:	b	1f1dc <_obstack_memory_used@@Base+0x3fd8>
   1ebb0:	mov	r2, r3
   1ebb4:	ldr	r3, [r2, #12]
   1ebb8:	cmp	r3, #0
   1ebbc:	bne	1ebb0 <_obstack_memory_used@@Base+0x39ac>
   1ebc0:	ldr	r5, [r6, #16]
   1ebc4:	ldr	ip, [r2, #8]
   1ebc8:	cmp	r5, #0
   1ebcc:	movne	r2, r5
   1ebd0:	bne	1ebdc <_obstack_memory_used@@Base+0x39d8>
   1ebd4:	b	1f1f0 <_obstack_memory_used@@Base+0x3fec>
   1ebd8:	mov	r2, r3
   1ebdc:	ldr	r3, [r2, #12]
   1ebe0:	cmp	r3, #0
   1ebe4:	bne	1ebd8 <_obstack_memory_used@@Base+0x39d4>
   1ebe8:	ldr	r3, [r2, #8]
   1ebec:	mvn	r2, r3
   1ebf0:	lsr	r2, r2, #31
   1ebf4:	cmp	r2, ip, lsr #31
   1ebf8:	subne	r1, ip, r3
   1ebfc:	subeq	r1, r3, ip
   1ec00:	cmp	r1, #0
   1ec04:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ec08:	adds	r1, r5, #0
   1ec0c:	movne	r1, #1
   1ec10:	cmp	r4, #0
   1ec14:	rsbeq	r1, r1, #0
   1ec18:	rsbne	r1, r1, #1
   1ec1c:	cmp	r1, #0
   1ec20:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ec24:	cmp	r4, #0
   1ec28:	mov	fp, r0
   1ec2c:	beq	1ef78 <_obstack_memory_used@@Base+0x3d74>
   1ec30:	ldr	r1, [r4, #20]
   1ec34:	ldr	r2, [r5, #20]
   1ec38:	cmp	r1, r2
   1ec3c:	bgt	1ed8c <_obstack_memory_used@@Base+0x3b88>
   1ec40:	bge	1ef24 <_obstack_memory_used@@Base+0x3d20>
   1ec44:	ldr	r5, [r5, #12]
   1ec48:	ldr	r3, [r5, #20]
   1ec4c:	cmp	r1, r3
   1ec50:	blt	1ec44 <_obstack_memory_used@@Base+0x3a40>
   1ec54:	ldr	r6, [r4, #12]
   1ec58:	ldr	r7, [r5, #12]
   1ec5c:	cmp	r6, r7
   1ec60:	beq	1f460 <_obstack_memory_used@@Base+0x425c>
   1ec64:	ldr	r8, [r6, #12]
   1ec68:	ldr	r9, [r7, #12]
   1ec6c:	cmp	r8, r9
   1ec70:	beq	1f398 <_obstack_memory_used@@Base+0x4194>
   1ec74:	ldr	sl, [r8, #12]
   1ec78:	ldr	fp, [r9, #12]
   1ec7c:	cmp	sl, fp
   1ec80:	beq	1f4c8 <_obstack_memory_used@@Base+0x42c4>
   1ec84:	ldr	r0, [sl, #12]
   1ec88:	ldr	r1, [fp, #12]
   1ec8c:	cmp	r0, r1
   1ec90:	beq	1f574 <_obstack_memory_used@@Base+0x4370>
   1ec94:	bl	1e7b4 <_obstack_memory_used@@Base+0x35b0>
   1ec98:	subs	r1, r0, #0
   1ec9c:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1eca0:	ldr	r1, [fp, #8]
   1eca4:	ldr	r3, [sl, #8]
   1eca8:	mvn	r2, r1
   1ecac:	lsr	r2, r2, #31
   1ecb0:	cmp	r2, r3, lsr #31
   1ecb4:	subne	r1, r3, r1
   1ecb8:	subeq	r1, r1, r3
   1ecbc:	cmp	r1, #0
   1ecc0:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ecc4:	ldr	r1, [fp, #4]
   1ecc8:	ldr	r3, [sl, #4]
   1eccc:	sub	r1, r1, r3
   1ecd0:	cmp	r1, #0
   1ecd4:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ecd8:	ldr	r1, [r9, #8]
   1ecdc:	ldr	r3, [r8, #8]
   1ece0:	mvn	r2, r1
   1ece4:	lsr	r2, r2, #31
   1ece8:	cmp	r2, r3, lsr #31
   1ecec:	subne	r1, r3, r1
   1ecf0:	subeq	r1, r1, r3
   1ecf4:	cmp	r1, #0
   1ecf8:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ecfc:	ldr	r1, [r9, #4]
   1ed00:	ldr	r3, [r8, #4]
   1ed04:	sub	r1, r1, r3
   1ed08:	cmp	r1, #0
   1ed0c:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ed10:	ldr	r1, [r7, #8]
   1ed14:	ldr	r3, [r6, #8]
   1ed18:	mvn	r2, r1
   1ed1c:	lsr	r2, r2, #31
   1ed20:	cmp	r2, r3, lsr #31
   1ed24:	subne	r1, r3, r1
   1ed28:	subeq	r1, r1, r3
   1ed2c:	cmp	r1, #0
   1ed30:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ed34:	ldr	r1, [r7, #4]
   1ed38:	ldr	r3, [r6, #4]
   1ed3c:	sub	r1, r1, r3
   1ed40:	cmp	r1, #0
   1ed44:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ed48:	ldr	r1, [r5, #8]
   1ed4c:	ldr	r3, [r4, #8]
   1ed50:	mvn	r2, r1
   1ed54:	lsr	r2, r2, #31
   1ed58:	cmp	r2, r3, lsr #31
   1ed5c:	subne	r1, r3, r1
   1ed60:	subeq	r1, r1, r3
   1ed64:	cmp	r1, #0
   1ed68:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ed6c:	ldr	r1, [r5, #4]
   1ed70:	ldr	r3, [r4, #4]
   1ed74:	sub	r1, r1, r3
   1ed78:	cmp	r1, #0
   1ed7c:	mvneq	r1, #0
   1ed80:	mov	r0, r1
   1ed84:	add	sp, sp, #28
   1ed88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed8c:	ldr	r4, [r4, #12]
   1ed90:	ldr	r3, [r4, #20]
   1ed94:	cmp	r2, r3
   1ed98:	blt	1ed8c <_obstack_memory_used@@Base+0x3b88>
   1ed9c:	ldr	r6, [r4, #12]
   1eda0:	ldr	r7, [r5, #12]
   1eda4:	cmp	r6, r7
   1eda8:	beq	1f400 <_obstack_memory_used@@Base+0x41fc>
   1edac:	ldr	r8, [r6, #12]
   1edb0:	ldr	r9, [r7, #12]
   1edb4:	cmp	r8, r9
   1edb8:	beq	1f494 <_obstack_memory_used@@Base+0x4290>
   1edbc:	ldr	sl, [r8, #12]
   1edc0:	ldr	fp, [r9, #12]
   1edc4:	cmp	sl, fp
   1edc8:	beq	1f3cc <_obstack_memory_used@@Base+0x41c8>
   1edcc:	ldr	r3, [sl, #12]
   1edd0:	ldr	r2, [fp, #12]
   1edd4:	cmp	r3, r2
   1edd8:	beq	1f4fc <_obstack_memory_used@@Base+0x42f8>
   1eddc:	ldr	r0, [r3, #12]
   1ede0:	ldr	r1, [r2, #12]
   1ede4:	cmp	r0, r1
   1ede8:	beq	1f5a8 <_obstack_memory_used@@Base+0x43a4>
   1edec:	str	r2, [sp, #8]
   1edf0:	str	r3, [sp, #4]
   1edf4:	bl	1e7b4 <_obstack_memory_used@@Base+0x35b0>
   1edf8:	subs	r1, r0, #0
   1edfc:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ee00:	ldr	r2, [sp, #8]
   1ee04:	ldr	r3, [sp, #4]
   1ee08:	ldr	r0, [r2, #8]
   1ee0c:	ldr	r1, [r3, #8]
   1ee10:	mvn	ip, r0
   1ee14:	lsr	ip, ip, #31
   1ee18:	cmp	ip, r1, lsr #31
   1ee1c:	subne	r1, r1, r0
   1ee20:	subeq	r1, r0, r1
   1ee24:	cmp	r1, #0
   1ee28:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ee2c:	ldr	r1, [r2, #4]
   1ee30:	ldr	r3, [r3, #4]
   1ee34:	sub	r1, r1, r3
   1ee38:	cmp	r1, #0
   1ee3c:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ee40:	ldr	r1, [fp, #8]
   1ee44:	ldr	r3, [sl, #8]
   1ee48:	mvn	r2, r1
   1ee4c:	lsr	r2, r2, #31
   1ee50:	cmp	r2, r3, lsr #31
   1ee54:	subne	r1, r3, r1
   1ee58:	subeq	r1, r1, r3
   1ee5c:	cmp	r1, #0
   1ee60:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ee64:	ldr	r1, [fp, #4]
   1ee68:	ldr	r3, [sl, #4]
   1ee6c:	sub	r1, r1, r3
   1ee70:	cmp	r1, #0
   1ee74:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ee78:	ldr	r1, [r9, #8]
   1ee7c:	ldr	r3, [r8, #8]
   1ee80:	mvn	r2, r1
   1ee84:	lsr	r2, r2, #31
   1ee88:	cmp	r2, r3, lsr #31
   1ee8c:	subne	r1, r3, r1
   1ee90:	subeq	r1, r1, r3
   1ee94:	cmp	r1, #0
   1ee98:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ee9c:	ldr	r1, [r9, #4]
   1eea0:	ldr	r3, [r8, #4]
   1eea4:	sub	r1, r1, r3
   1eea8:	cmp	r1, #0
   1eeac:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1eeb0:	ldr	r1, [r7, #8]
   1eeb4:	ldr	r3, [r6, #8]
   1eeb8:	mvn	r2, r1
   1eebc:	lsr	r2, r2, #31
   1eec0:	cmp	r2, r3, lsr #31
   1eec4:	subne	r1, r3, r1
   1eec8:	subeq	r1, r1, r3
   1eecc:	cmp	r1, #0
   1eed0:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1eed4:	ldr	r1, [r7, #4]
   1eed8:	ldr	r3, [r6, #4]
   1eedc:	sub	r1, r1, r3
   1eee0:	cmp	r1, #0
   1eee4:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1eee8:	ldr	r1, [r5, #8]
   1eeec:	ldr	r3, [r4, #8]
   1eef0:	mvn	r2, r1
   1eef4:	lsr	r2, r2, #31
   1eef8:	cmp	r2, r3, lsr #31
   1eefc:	subne	r1, r3, r1
   1ef00:	subeq	r1, r1, r3
   1ef04:	cmp	r1, #0
   1ef08:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ef0c:	ldr	r1, [r5, #4]
   1ef10:	ldr	r3, [r4, #4]
   1ef14:	sub	r1, r1, r3
   1ef18:	cmp	r1, #0
   1ef1c:	moveq	r1, #1
   1ef20:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ef24:	ldr	r0, [r4, #12]
   1ef28:	ldr	r1, [r5, #12]
   1ef2c:	cmp	r0, r1
   1ef30:	beq	1f530 <_obstack_memory_used@@Base+0x432c>
   1ef34:	bl	1e7b4 <_obstack_memory_used@@Base+0x35b0>
   1ef38:	subs	r1, r0, #0
   1ef3c:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ef40:	ldr	r1, [r5, #8]
   1ef44:	ldr	r3, [r4, #8]
   1ef48:	mvn	r2, r1
   1ef4c:	lsr	r2, r2, #31
   1ef50:	cmp	r2, r3, lsr #31
   1ef54:	subne	r1, r3, r1
   1ef58:	subeq	r1, r1, r3
   1ef5c:	cmp	r1, #0
   1ef60:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ef64:	ldr	r1, [r5, #4]
   1ef68:	ldr	r3, [r4, #4]
   1ef6c:	sub	r1, r1, r3
   1ef70:	cmp	r1, #0
   1ef74:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ef78:	ldr	r1, [r6, #12]
   1ef7c:	ldr	r3, [fp, #12]
   1ef80:	mvn	r2, r1
   1ef84:	lsr	r2, r2, #31
   1ef88:	cmp	r2, r3, lsr #31
   1ef8c:	subne	r1, r3, r1
   1ef90:	subeq	r1, r1, r3
   1ef94:	cmp	r1, #0
   1ef98:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1ef9c:	ldm	fp, {r8, r9}
   1efa0:	cmp	r9, #0
   1efa4:	beq	1f5dc <_obstack_memory_used@@Base+0x43d8>
   1efa8:	add	r3, r8, #24
   1efac:	mov	r2, r9
   1efb0:	ldr	r4, [r3, #-24]	; 0xffffffe8
   1efb4:	cmp	r4, #0
   1efb8:	beq	1efc8 <_obstack_memory_used@@Base+0x3dc4>
   1efbc:	ldr	r0, [r3, #-12]
   1efc0:	tst	r0, #2
   1efc4:	beq	1efd8 <_obstack_memory_used@@Base+0x3dd4>
   1efc8:	subs	r2, r2, #1
   1efcc:	add	r3, r3, #24
   1efd0:	bne	1efb0 <_obstack_memory_used@@Base+0x3dac>
   1efd4:	mov	r4, r2
   1efd8:	ldm	r6, {r7, sl}
   1efdc:	cmp	sl, #0
   1efe0:	beq	1f5e4 <_obstack_memory_used@@Base+0x43e0>
   1efe4:	add	r3, r7, #24
   1efe8:	mov	r2, sl
   1efec:	ldr	r5, [r3, #-24]	; 0xffffffe8
   1eff0:	cmp	r5, #0
   1eff4:	beq	1f004 <_obstack_memory_used@@Base+0x3e00>
   1eff8:	ldr	r0, [r3, #-12]
   1effc:	tst	r0, #2
   1f000:	beq	1f014 <_obstack_memory_used@@Base+0x3e10>
   1f004:	subs	r2, r2, #1
   1f008:	add	r3, r3, #24
   1f00c:	bne	1efec <_obstack_memory_used@@Base+0x3de8>
   1f010:	mov	r5, r2
   1f014:	ldr	r3, [r8, #12]
   1f018:	tst	r3, #8
   1f01c:	beq	1f088 <_obstack_memory_used@@Base+0x3e84>
   1f020:	cmp	r4, #0
   1f024:	beq	1f088 <_obstack_memory_used@@Base+0x3e84>
   1f028:	str	r1, [sp, #4]
   1f02c:	bl	11520 <__ctype_b_loc@plt>
   1f030:	ldr	r1, [sp, #4]
   1f034:	mov	ip, r4
   1f038:	ldr	r0, [r0]
   1f03c:	ldrb	r2, [ip]
   1f040:	mov	r4, ip
   1f044:	add	ip, ip, #1
   1f048:	lsl	r3, r2, #1
   1f04c:	ldrh	r3, [r0, r3]
   1f050:	tst	r3, #8192	; 0x2000
   1f054:	bne	1f03c <_obstack_memory_used@@Base+0x3e38>
   1f058:	cmp	r2, #0
   1f05c:	bne	1f078 <_obstack_memory_used@@Base+0x3e74>
   1f060:	b	1f384 <_obstack_memory_used@@Base+0x4180>
   1f064:	ldrb	r3, [r4, #1]!
   1f068:	cmp	r3, #0
   1f06c:	lsl	r3, r3, #1
   1f070:	beq	1f080 <_obstack_memory_used@@Base+0x3e7c>
   1f074:	ldrh	r3, [r0, r3]
   1f078:	tst	r3, #8
   1f07c:	beq	1f064 <_obstack_memory_used@@Base+0x3e60>
   1f080:	cmp	r2, #45	; 0x2d
   1f084:	bne	1f384 <_obstack_memory_used@@Base+0x4180>
   1f088:	ldr	r3, [r7, #12]
   1f08c:	tst	r3, #8
   1f090:	beq	1f11c <_obstack_memory_used@@Base+0x3f18>
   1f094:	cmp	r5, #0
   1f098:	movne	r2, r1
   1f09c:	beq	1f11c <_obstack_memory_used@@Base+0x3f18>
   1f0a0:	str	r1, [sp, #8]
   1f0a4:	str	r2, [sp, #4]
   1f0a8:	bl	11520 <__ctype_b_loc@plt>
   1f0ac:	ldr	r2, [sp, #4]
   1f0b0:	ldr	r1, [sp, #8]
   1f0b4:	mov	r3, r5
   1f0b8:	ldr	ip, [r0]
   1f0bc:	ldrb	r0, [r3]
   1f0c0:	mov	r5, r3
   1f0c4:	add	r3, r3, #1
   1f0c8:	lsl	lr, r0, #1
   1f0cc:	ldrh	lr, [ip, lr]
   1f0d0:	tst	lr, #8192	; 0x2000
   1f0d4:	bne	1f0bc <_obstack_memory_used@@Base+0x3eb8>
   1f0d8:	cmp	r0, #0
   1f0dc:	beq	1f108 <_obstack_memory_used@@Base+0x3f04>
   1f0e0:	tst	lr, #8
   1f0e4:	beq	1f0f8 <_obstack_memory_used@@Base+0x3ef4>
   1f0e8:	b	1f108 <_obstack_memory_used@@Base+0x3f04>
   1f0ec:	ldrh	r3, [ip, r3]
   1f0f0:	tst	r3, #8
   1f0f4:	bne	1f108 <_obstack_memory_used@@Base+0x3f04>
   1f0f8:	ldrb	r3, [r5, #1]!
   1f0fc:	cmp	r3, #0
   1f100:	lsl	r3, r3, #1
   1f104:	bne	1f0ec <_obstack_memory_used@@Base+0x3ee8>
   1f108:	cmp	r0, #45	; 0x2d
   1f10c:	subne	r2, r2, #1
   1f110:	cmp	r2, #0
   1f114:	movne	r1, r2
   1f118:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f11c:	ldr	r3, [fp, #8]
   1f120:	cmp	r9, #0
   1f124:	mov	r2, r3
   1f128:	beq	1f5ec <_obstack_memory_used@@Base+0x43e8>
   1f12c:	str	r7, [sp, #16]
   1f130:	str	r6, [sp, #20]
   1f134:	mov	r3, #1
   1f138:	str	r4, [sp, #8]
   1f13c:	str	r5, [sp, #12]
   1f140:	mov	r7, r1
   1f144:	mov	r6, r2
   1f148:	b	1f164 <_obstack_memory_used@@Base+0x3f60>
   1f14c:	subs	r9, r9, #1
   1f150:	moveq	ip, #0
   1f154:	andne	ip, ip, #1
   1f158:	cmp	ip, #0
   1f15c:	add	r8, r8, #24
   1f160:	beq	1f1f8 <_obstack_memory_used@@Base+0x3ff4>
   1f164:	ldr	r4, [r8, #12]
   1f168:	mov	ip, r3
   1f16c:	ands	fp, r4, #8
   1f170:	movne	fp, r7
   1f174:	bne	1f14c <_obstack_memory_used@@Base+0x3f48>
   1f178:	ldr	r5, [r8, #4]
   1f17c:	sub	r0, r5, #1
   1f180:	cmp	r0, #254	; 0xfe
   1f184:	bhi	1f14c <_obstack_memory_used@@Base+0x3f48>
   1f188:	str	r3, [sp, #4]
   1f18c:	bl	11520 <__ctype_b_loc@plt>
   1f190:	lsl	lr, r5, #1
   1f194:	ldr	r3, [sp, #4]
   1f198:	mov	ip, r3
   1f19c:	ldr	r0, [r0]
   1f1a0:	ldrh	r0, [r0, lr]
   1f1a4:	tst	r0, #16384	; 0x4000
   1f1a8:	beq	1f14c <_obstack_memory_used@@Base+0x3f48>
   1f1ac:	ldrb	r0, [r6]
   1f1b0:	mov	ip, r3
   1f1b4:	cmp	r5, r0
   1f1b8:	bne	1f14c <_obstack_memory_used@@Base+0x3f48>
   1f1bc:	and	r4, r4, #10
   1f1c0:	cmp	r4, #0
   1f1c4:	moveq	fp, r5
   1f1c8:	movne	fp, #0
   1f1cc:	add	r6, r6, #1
   1f1d0:	movne	ip, #1
   1f1d4:	moveq	ip, #0
   1f1d8:	b	1f14c <_obstack_memory_used@@Base+0x3f48>
   1f1dc:	ldr	r5, [r6, #16]
   1f1e0:	ldr	ip, [r0, #12]
   1f1e4:	cmp	r5, #0
   1f1e8:	movne	r2, r5
   1f1ec:	bne	1ebdc <_obstack_memory_used@@Base+0x39d8>
   1f1f0:	ldr	r3, [r6, #12]
   1f1f4:	b	1ebec <_obstack_memory_used@@Base+0x39e8>
   1f1f8:	mov	r3, fp
   1f1fc:	ldr	r6, [sp, #20]
   1f200:	uxtb	r3, r3
   1f204:	cmp	sl, #0
   1f208:	str	fp, [sp, #4]
   1f20c:	mov	r1, r7
   1f210:	ldr	r4, [sp, #8]
   1f214:	ldr	r7, [sp, #16]
   1f218:	ldr	r5, [sp, #12]
   1f21c:	ldr	fp, [r6, #8]
   1f220:	str	r3, [sp, #16]
   1f224:	beq	1f434 <_obstack_memory_used@@Base+0x4230>
   1f228:	str	r4, [sp, #8]
   1f22c:	mov	r8, #1
   1f230:	str	r5, [sp, #12]
   1f234:	mov	r4, r1
   1f238:	b	1f254 <_obstack_memory_used@@Base+0x4050>
   1f23c:	subs	sl, sl, #1
   1f240:	moveq	r3, #0
   1f244:	andne	r3, r3, #1
   1f248:	cmp	r3, #0
   1f24c:	add	r7, r7, #24
   1f250:	beq	1f2c0 <_obstack_memory_used@@Base+0x40bc>
   1f254:	ldr	r6, [r7, #12]
   1f258:	mov	r3, r8
   1f25c:	ands	r9, r6, #8
   1f260:	movne	r9, r4
   1f264:	bne	1f23c <_obstack_memory_used@@Base+0x4038>
   1f268:	ldr	r5, [r7, #4]
   1f26c:	sub	r0, r5, #1
   1f270:	cmp	r0, #254	; 0xfe
   1f274:	bhi	1f23c <_obstack_memory_used@@Base+0x4038>
   1f278:	bl	11520 <__ctype_b_loc@plt>
   1f27c:	lsl	ip, r5, #1
   1f280:	mov	r3, r8
   1f284:	ldr	r0, [r0]
   1f288:	ldrh	r0, [r0, ip]
   1f28c:	tst	r0, #16384	; 0x4000
   1f290:	beq	1f23c <_obstack_memory_used@@Base+0x4038>
   1f294:	ldrb	r0, [fp]
   1f298:	mov	r3, r8
   1f29c:	cmp	r5, r0
   1f2a0:	bne	1f23c <_obstack_memory_used@@Base+0x4038>
   1f2a4:	and	r6, r6, #2
   1f2a8:	cmp	r6, #0
   1f2ac:	moveq	r9, r5
   1f2b0:	add	fp, fp, #1
   1f2b4:	movne	r3, #1
   1f2b8:	moveq	r3, #0
   1f2bc:	b	1f23c <_obstack_memory_used@@Base+0x4038>
   1f2c0:	mov	r1, r4
   1f2c4:	ldmib	sp, {r3, r4}
   1f2c8:	ldr	r5, [sp, #12]
   1f2cc:	uxtb	r6, r9
   1f2d0:	cmp	r3, #0
   1f2d4:	beq	1f370 <_obstack_memory_used@@Base+0x416c>
   1f2d8:	ldr	r3, [sp, #16]
   1f2dc:	mov	r7, r3
   1f2e0:	lsl	r8, r3, #2
   1f2e4:	cmp	r9, #0
   1f2e8:	beq	1f44c <_obstack_memory_used@@Base+0x4248>
   1f2ec:	lsl	sl, r6, #2
   1f2f0:	bl	114f0 <__ctype_tolower_loc@plt>
   1f2f4:	ldr	r3, [r0]
   1f2f8:	ldr	r1, [r3, r8]
   1f2fc:	ldr	r3, [r3, sl]
   1f300:	subs	r1, r1, r3
   1f304:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f308:	subs	r1, r6, r7
   1f30c:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f310:	adds	r1, r9, #0
   1f314:	ldr	r3, [sp, #4]
   1f318:	movne	r1, #1
   1f31c:	cmp	r3, #0
   1f320:	rsbeq	r1, r1, #0
   1f324:	rsbne	r1, r1, #1
   1f328:	cmp	r1, #0
   1f32c:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f330:	cmp	r3, #0
   1f334:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f338:	adds	r1, r5, #0
   1f33c:	movne	r1, #1
   1f340:	cmp	r4, #0
   1f344:	rsbeq	r1, r1, #0
   1f348:	rsbne	r1, r1, #1
   1f34c:	cmp	r1, #0
   1f350:	bne	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f354:	cmp	r4, #0
   1f358:	beq	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f35c:	mov	r1, r5
   1f360:	mov	r0, r4
   1f364:	add	sp, sp, #28
   1f368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f36c:	b	11454 <strcasecmp@plt>
   1f370:	cmp	r4, #0
   1f374:	beq	1f618 <_obstack_memory_used@@Base+0x4414>
   1f378:	ldrb	r7, [r4]
   1f37c:	lsl	r8, r7, #2
   1f380:	b	1f2e4 <_obstack_memory_used@@Base+0x40e0>
   1f384:	ldr	r3, [r7, #12]
   1f388:	tst	r3, #8
   1f38c:	bne	1f564 <_obstack_memory_used@@Base+0x4360>
   1f390:	mov	r1, #1
   1f394:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f398:	ldr	r1, [r7, #8]
   1f39c:	ldr	r3, [r6, #8]
   1f3a0:	mvn	r2, r1
   1f3a4:	ldr	r0, [r7, #4]
   1f3a8:	lsr	r2, r2, #31
   1f3ac:	cmp	r2, r3, lsr #31
   1f3b0:	subne	r1, r3, r1
   1f3b4:	subeq	r1, r1, r3
   1f3b8:	ldr	r2, [r6, #4]
   1f3bc:	cmp	r1, #0
   1f3c0:	subeq	r1, r0, r2
   1f3c4:	beq	1ed40 <_obstack_memory_used@@Base+0x3b3c>
   1f3c8:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f3cc:	ldr	r1, [r9, #8]
   1f3d0:	ldr	r3, [r8, #8]
   1f3d4:	mvn	r2, r1
   1f3d8:	ldr	r0, [r9, #4]
   1f3dc:	lsr	r2, r2, #31
   1f3e0:	cmp	r2, r3, lsr #31
   1f3e4:	subne	r1, r3, r1
   1f3e8:	subeq	r1, r1, r3
   1f3ec:	ldr	r2, [r8, #4]
   1f3f0:	cmp	r1, #0
   1f3f4:	subeq	r1, r0, r2
   1f3f8:	beq	1eea8 <_obstack_memory_used@@Base+0x3ca4>
   1f3fc:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f400:	ldr	r1, [r5, #8]
   1f404:	ldr	r3, [r4, #8]
   1f408:	mvn	r2, r1
   1f40c:	ldr	r0, [r5, #4]
   1f410:	lsr	r2, r2, #31
   1f414:	cmp	r2, r3, lsr #31
   1f418:	subne	r1, r3, r1
   1f41c:	subeq	r1, r1, r3
   1f420:	ldr	r2, [r4, #4]
   1f424:	cmp	r1, #0
   1f428:	subeq	r1, r0, r2
   1f42c:	beq	1ef18 <_obstack_memory_used@@Base+0x3d14>
   1f430:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f434:	ldr	r3, [sp, #4]
   1f438:	cmp	r3, #0
   1f43c:	beq	1f624 <_obstack_memory_used@@Base+0x4420>
   1f440:	ldr	r3, [sp, #16]
   1f444:	mov	r7, r3
   1f448:	lsl	r8, r3, #2
   1f44c:	cmp	r5, #0
   1f450:	beq	1f608 <_obstack_memory_used@@Base+0x4404>
   1f454:	ldrb	r6, [r5]
   1f458:	mov	r9, r1
   1f45c:	b	1f2ec <_obstack_memory_used@@Base+0x40e8>
   1f460:	ldr	r1, [r5, #8]
   1f464:	ldr	r3, [r4, #8]
   1f468:	mvn	r2, r1
   1f46c:	ldr	r0, [r5, #4]
   1f470:	lsr	r2, r2, #31
   1f474:	cmp	r2, r3, lsr #31
   1f478:	subne	r1, r3, r1
   1f47c:	subeq	r1, r1, r3
   1f480:	ldr	r2, [r4, #4]
   1f484:	cmp	r1, #0
   1f488:	subeq	r1, r0, r2
   1f48c:	beq	1ed78 <_obstack_memory_used@@Base+0x3b74>
   1f490:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f494:	ldr	r1, [r7, #8]
   1f498:	ldr	r3, [r6, #8]
   1f49c:	mvn	r2, r1
   1f4a0:	ldr	r0, [r7, #4]
   1f4a4:	lsr	r2, r2, #31
   1f4a8:	cmp	r2, r3, lsr #31
   1f4ac:	subne	r1, r3, r1
   1f4b0:	subeq	r1, r1, r3
   1f4b4:	ldr	r2, [r6, #4]
   1f4b8:	cmp	r1, #0
   1f4bc:	subeq	r1, r0, r2
   1f4c0:	beq	1eee0 <_obstack_memory_used@@Base+0x3cdc>
   1f4c4:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f4c8:	ldr	r1, [r9, #8]
   1f4cc:	ldr	r3, [r8, #8]
   1f4d0:	mvn	r2, r1
   1f4d4:	ldr	r0, [r9, #4]
   1f4d8:	lsr	r2, r2, #31
   1f4dc:	cmp	r2, r3, lsr #31
   1f4e0:	subne	r1, r3, r1
   1f4e4:	subeq	r1, r1, r3
   1f4e8:	ldr	r2, [r8, #4]
   1f4ec:	cmp	r1, #0
   1f4f0:	subeq	r1, r0, r2
   1f4f4:	beq	1ed08 <_obstack_memory_used@@Base+0x3b04>
   1f4f8:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f4fc:	ldr	r1, [fp, #8]
   1f500:	ldr	r3, [sl, #8]
   1f504:	mvn	r2, r1
   1f508:	ldr	r0, [fp, #4]
   1f50c:	lsr	r2, r2, #31
   1f510:	cmp	r2, r3, lsr #31
   1f514:	subne	r1, r3, r1
   1f518:	subeq	r1, r1, r3
   1f51c:	ldr	r2, [sl, #4]
   1f520:	cmp	r1, #0
   1f524:	subeq	r1, r0, r2
   1f528:	beq	1ee70 <_obstack_memory_used@@Base+0x3c6c>
   1f52c:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f530:	ldr	r1, [r5, #8]
   1f534:	ldr	r3, [r4, #8]
   1f538:	mvn	r2, r1
   1f53c:	ldr	r0, [r5, #4]
   1f540:	lsr	r2, r2, #31
   1f544:	cmp	r2, r3, lsr #31
   1f548:	subne	r1, r3, r1
   1f54c:	subeq	r1, r1, r3
   1f550:	ldr	r2, [r4, #4]
   1f554:	cmp	r1, #0
   1f558:	subeq	r1, r0, r2
   1f55c:	beq	1ef70 <_obstack_memory_used@@Base+0x3d6c>
   1f560:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f564:	cmp	r5, #0
   1f568:	beq	1f390 <_obstack_memory_used@@Base+0x418c>
   1f56c:	mov	r2, #1
   1f570:	b	1f0a0 <_obstack_memory_used@@Base+0x3e9c>
   1f574:	ldr	r1, [fp, #8]
   1f578:	ldr	r3, [sl, #8]
   1f57c:	mvn	r2, r1
   1f580:	ldr	r0, [fp, #4]
   1f584:	lsr	r2, r2, #31
   1f588:	cmp	r2, r3, lsr #31
   1f58c:	subne	r1, r3, r1
   1f590:	subeq	r1, r1, r3
   1f594:	ldr	r2, [sl, #4]
   1f598:	cmp	r1, #0
   1f59c:	subeq	r1, r0, r2
   1f5a0:	beq	1ecd0 <_obstack_memory_used@@Base+0x3acc>
   1f5a4:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f5a8:	ldr	r0, [r2, #8]
   1f5ac:	ldr	r1, [r3, #8]
   1f5b0:	mvn	ip, r0
   1f5b4:	ldr	r2, [r2, #4]
   1f5b8:	lsr	ip, ip, #31
   1f5bc:	cmp	ip, r1, lsr #31
   1f5c0:	subne	r1, r1, r0
   1f5c4:	subeq	r1, r0, r1
   1f5c8:	ldr	r3, [r3, #4]
   1f5cc:	cmp	r1, #0
   1f5d0:	subeq	r1, r2, r3
   1f5d4:	beq	1ee38 <_obstack_memory_used@@Base+0x3c34>
   1f5d8:	b	1ed80 <_obstack_memory_used@@Base+0x3b7c>
   1f5dc:	mov	r4, r1
   1f5e0:	b	1efd8 <_obstack_memory_used@@Base+0x3dd4>
   1f5e4:	mov	r5, sl
   1f5e8:	b	1f014 <_obstack_memory_used@@Base+0x3e10>
   1f5ec:	cmp	sl, #0
   1f5f0:	ldr	fp, [r6, #8]
   1f5f4:	streq	r1, [sp, #4]
   1f5f8:	beq	1f624 <_obstack_memory_used@@Base+0x4420>
   1f5fc:	str	r9, [sp, #16]
   1f600:	str	r1, [sp, #4]
   1f604:	b	1f228 <_obstack_memory_used@@Base+0x4024>
   1f608:	mov	r9, r1
   1f60c:	mov	sl, r5
   1f610:	mov	r6, r5
   1f614:	b	1f2f0 <_obstack_memory_used@@Base+0x40ec>
   1f618:	mov	r8, r4
   1f61c:	mov	r7, r4
   1f620:	b	1f2e4 <_obstack_memory_used@@Base+0x40e0>
   1f624:	cmp	r4, #0
   1f628:	moveq	r8, r4
   1f62c:	moveq	r7, r4
   1f630:	beq	1f44c <_obstack_memory_used@@Base+0x4248>
   1f634:	mov	r9, r1
   1f638:	mov	r6, #0
   1f63c:	b	1f378 <_obstack_memory_used@@Base+0x4174>

0001f640 <argp_failure@@Base>:
   1f640:	push	{r3}		; (str r3, [sp, #-4]!)
   1f644:	push	{r4, r5, r6, r7, lr}
   1f648:	subs	r5, r0, #0
   1f64c:	sub	sp, sp, #200	; 0xc8
   1f650:	mov	r7, r1
   1f654:	mov	r6, r2
   1f658:	beq	1f7a8 <argp_failure@@Base+0x168>
   1f65c:	ldr	r3, [r5, #16]
   1f660:	tst	r3, #2
   1f664:	bne	1f798 <argp_failure@@Base+0x158>
   1f668:	ldr	r4, [r5, #44]	; 0x2c
   1f66c:	cmp	r4, #0
   1f670:	beq	1f798 <argp_failure@@Base+0x158>
   1f674:	mov	r0, r4
   1f678:	bl	11634 <flockfile@plt>
   1f67c:	ldr	r0, [r5, #40]	; 0x28
   1f680:	mov	r1, r4
   1f684:	bl	11358 <fputs_unlocked@plt>
   1f688:	ldr	r3, [sp, #220]	; 0xdc
   1f68c:	cmp	r3, #0
   1f690:	beq	1f6ec <argp_failure@@Base+0xac>
   1f694:	ldr	r3, [r4, #20]
   1f698:	ldr	r1, [r4, #24]
   1f69c:	add	r2, sp, #224	; 0xe0
   1f6a0:	cmp	r3, r1
   1f6a4:	str	r2, [sp]
   1f6a8:	addcc	r1, r3, #1
   1f6ac:	movcc	r2, #58	; 0x3a
   1f6b0:	strcc	r1, [r4, #20]
   1f6b4:	strbcc	r2, [r3]
   1f6b8:	bcs	1f7f4 <argp_failure@@Base+0x1b4>
   1f6bc:	ldr	r3, [r4, #20]
   1f6c0:	ldr	r2, [r4, #24]
   1f6c4:	cmp	r3, r2
   1f6c8:	addcc	r1, r3, #1
   1f6cc:	movcc	r2, #32
   1f6d0:	strcc	r1, [r4, #20]
   1f6d4:	strbcc	r2, [r3]
   1f6d8:	bcs	1f7e4 <argp_failure@@Base+0x1a4>
   1f6dc:	ldr	r2, [sp]
   1f6e0:	ldr	r1, [sp, #220]	; 0xdc
   1f6e4:	mov	r0, r4
   1f6e8:	bl	11604 <vfprintf@plt>
   1f6ec:	cmp	r6, #0
   1f6f0:	beq	1f754 <argp_failure@@Base+0x114>
   1f6f4:	ldr	r3, [r4, #20]
   1f6f8:	ldr	r2, [r4, #24]
   1f6fc:	cmp	r3, r2
   1f700:	addcc	r1, r3, #1
   1f704:	movcc	r2, #58	; 0x3a
   1f708:	strcc	r1, [r4, #20]
   1f70c:	strbcc	r2, [r3]
   1f710:	bcs	1f814 <argp_failure@@Base+0x1d4>
   1f714:	ldr	r3, [r4, #20]
   1f718:	ldr	r2, [r4, #24]
   1f71c:	cmp	r3, r2
   1f720:	addcc	r1, r3, #1
   1f724:	movcc	r2, #32
   1f728:	strcc	r1, [r4, #20]
   1f72c:	strbcc	r2, [r3]
   1f730:	bcs	1f804 <argp_failure@@Base+0x1c4>
   1f734:	mov	r2, #200	; 0xc8
   1f738:	mov	r1, sp
   1f73c:	mov	r0, r6
   1f740:	bl	11580 <strerror_r@plt>
   1f744:	cmp	r0, #0
   1f748:	beq	1f824 <argp_failure@@Base+0x1e4>
   1f74c:	mov	r1, r4
   1f750:	bl	11358 <fputs_unlocked@plt>
   1f754:	ldr	r3, [r4, #20]
   1f758:	ldr	r2, [r4, #24]
   1f75c:	cmp	r3, r2
   1f760:	addcc	r1, r3, #1
   1f764:	movcc	r2, #10
   1f768:	strcc	r1, [r4, #20]
   1f76c:	strbcc	r2, [r3]
   1f770:	bcs	1f7cc <argp_failure@@Base+0x18c>
   1f774:	mov	r0, r4
   1f778:	bl	11460 <funlockfile@plt>
   1f77c:	cmp	r7, #0
   1f780:	beq	1f798 <argp_failure@@Base+0x158>
   1f784:	cmp	r5, #0
   1f788:	beq	1f7dc <argp_failure@@Base+0x19c>
   1f78c:	ldr	r3, [r5, #16]
   1f790:	tst	r3, #32
   1f794:	beq	1f7dc <argp_failure@@Base+0x19c>
   1f798:	add	sp, sp, #200	; 0xc8
   1f79c:	pop	{r4, r5, r6, r7, lr}
   1f7a0:	add	sp, sp, #4
   1f7a4:	bx	lr
   1f7a8:	ldr	r3, [pc, #140]	; 1f83c <argp_failure@@Base+0x1fc>
   1f7ac:	ldr	r4, [r3]
   1f7b0:	cmp	r4, #0
   1f7b4:	beq	1f798 <argp_failure@@Base+0x158>
   1f7b8:	mov	r0, r4
   1f7bc:	bl	11634 <flockfile@plt>
   1f7c0:	ldr	r3, [pc, #120]	; 1f840 <argp_failure@@Base+0x200>
   1f7c4:	ldr	r0, [r3]
   1f7c8:	b	1f680 <argp_failure@@Base+0x40>
   1f7cc:	mov	r1, #10
   1f7d0:	mov	r0, r4
   1f7d4:	bl	115e0 <__overflow@plt>
   1f7d8:	b	1f774 <argp_failure@@Base+0x134>
   1f7dc:	mov	r0, r7
   1f7e0:	bl	1152c <exit@plt>
   1f7e4:	mov	r1, #32
   1f7e8:	mov	r0, r4
   1f7ec:	bl	115e0 <__overflow@plt>
   1f7f0:	b	1f6dc <argp_failure@@Base+0x9c>
   1f7f4:	mov	r1, #58	; 0x3a
   1f7f8:	mov	r0, r4
   1f7fc:	bl	115e0 <__overflow@plt>
   1f800:	b	1f6bc <argp_failure@@Base+0x7c>
   1f804:	mov	r1, #32
   1f808:	mov	r0, r4
   1f80c:	bl	115e0 <__overflow@plt>
   1f810:	b	1f734 <argp_failure@@Base+0xf4>
   1f814:	mov	r1, #58	; 0x3a
   1f818:	mov	r0, r4
   1f81c:	bl	115e0 <__overflow@plt>
   1f820:	b	1f714 <argp_failure@@Base+0xd4>
   1f824:	mov	r0, r6
   1f828:	bl	114e4 <strerror@plt>
   1f82c:	ldr	r3, [pc, #16]	; 1f844 <argp_failure@@Base+0x204>
   1f830:	cmp	r0, #0
   1f834:	moveq	r0, r3
   1f838:	b	1f74c <argp_failure@@Base+0x10c>
   1f83c:	andeq	r7, r3, r8, asr #22
   1f840:	andeq	r7, r3, r0, asr #22
   1f844:	andeq	r6, r2, ip, asr #13
   1f848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f84c:	add	fp, sp, #32
   1f850:	cmp	r2, #0
   1f854:	sub	sp, sp, #116	; 0x74
   1f858:	str	r2, [fp, #-136]	; 0xffffff78
   1f85c:	str	r0, [fp, #-116]	; 0xffffff8c
   1f860:	str	r1, [fp, #-104]	; 0xffffff98
   1f864:	str	r3, [fp, #-100]	; 0xffffff9c
   1f868:	beq	1f98c <argp_failure@@Base+0x34c>
   1f86c:	ldr	r3, [pc, #4076]	; 20860 <argp_failure@@Base+0x1220>
   1f870:	mov	r0, r2
   1f874:	mov	r4, r3
   1f878:	str	r3, [fp, #-96]	; 0xffffffa0
   1f87c:	bl	11634 <flockfile@plt>
   1f880:	ldr	sl, [r4, #36]	; 0x24
   1f884:	cmp	sl, #0
   1f888:	beq	1fda0 <argp_failure@@Base+0x760>
   1f88c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1f890:	mov	r3, #0
   1f894:	mov	r1, r3
   1f898:	ldr	r2, [r2, #32]
   1f89c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f8a0:	bl	2285c <argp_error@@Base+0x19e0>
   1f8a4:	subs	sl, r0, #0
   1f8a8:	beq	20bbc <argp_failure@@Base+0x157c>
   1f8ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f8b0:	ands	r3, r3, #11
   1f8b4:	streq	r3, [fp, #-108]	; 0xffffff94
   1f8b8:	bne	201cc <argp_failure@@Base+0xb8c>
   1f8bc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f8c0:	ands	r4, r3, #3
   1f8c4:	bne	202f4 <argp_failure@@Base+0xcb4>
   1f8c8:	tst	r3, #16
   1f8cc:	bne	202cc <argp_failure@@Base+0xc8c>
   1f8d0:	tst	r3, #4
   1f8d4:	bne	201ac <argp_failure@@Base+0xb6c>
   1f8d8:	tst	r3, #8
   1f8dc:	bne	1f994 <argp_failure@@Base+0x354>
   1f8e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f8e4:	tst	r3, #32
   1f8e8:	bne	1fd5c <argp_failure@@Base+0x71c>
   1f8ec:	tst	r3, #64	; 0x40
   1f8f0:	beq	1f93c <argp_failure@@Base+0x2fc>
   1f8f4:	ldr	r5, [pc, #3944]	; 20864 <argp_failure@@Base+0x1224>
   1f8f8:	ldr	r2, [r5]
   1f8fc:	cmp	r2, #0
   1f900:	beq	1f93c <argp_failure@@Base+0x2fc>
   1f904:	cmp	r4, #0
   1f908:	beq	1f930 <argp_failure@@Base+0x2f0>
   1f90c:	ldr	r3, [sl, #28]
   1f910:	ldr	r2, [sl, #32]
   1f914:	cmp	r3, r2
   1f918:	bcs	20b8c <argp_failure@@Base+0x154c>
   1f91c:	add	r1, r3, #1
   1f920:	mov	r2, #10
   1f924:	str	r1, [sl, #28]
   1f928:	strb	r2, [r3]
   1f92c:	ldr	r2, [r5]
   1f930:	ldr	r1, [pc, #3888]	; 20868 <argp_failure@@Base+0x1228>
   1f934:	mov	r0, sl
   1f938:	bl	22f84 <argp_error@@Base+0x2108>
   1f93c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f940:	bl	11460 <funlockfile@plt>
   1f944:	ldr	r3, [fp, #-108]	; 0xffffff94
   1f948:	cmp	r3, #0
   1f94c:	beq	1f984 <argp_failure@@Base+0x344>
   1f950:	ldr	r0, [r3, #12]
   1f954:	cmp	r0, #0
   1f958:	beq	1f970 <argp_failure@@Base+0x330>
   1f95c:	ldr	r4, [r0, #24]
   1f960:	bl	1acdc <argp_parse@@Base+0xf7c>
   1f964:	subs	r0, r4, #0
   1f968:	bne	1f95c <argp_failure@@Base+0x31c>
   1f96c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1f970:	ldr	r3, [r3, #4]
   1f974:	cmp	r3, #0
   1f978:	bne	1fd88 <argp_failure@@Base+0x748>
   1f97c:	ldr	r0, [fp, #-108]	; 0xffffff94
   1f980:	bl	1acdc <argp_parse@@Base+0xf7c>
   1f984:	mov	r0, sl
   1f988:	bl	22e44 <argp_error@@Base+0x1fc8>
   1f98c:	sub	sp, fp, #32
   1f990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f994:	ldr	r3, [fp, #-108]	; 0xffffff94
   1f998:	ldr	r3, [r3, #4]
   1f99c:	cmp	r3, #0
   1f9a0:	str	r3, [fp, #-112]	; 0xffffff90
   1f9a4:	beq	1f8e0 <argp_failure@@Base+0x2a0>
   1f9a8:	cmp	r4, #0
   1f9ac:	beq	20a9c <argp_failure@@Base+0x145c>
   1f9b0:	ldr	r3, [sl, #28]
   1f9b4:	ldr	r2, [sl, #32]
   1f9b8:	cmp	r3, r2
   1f9bc:	bcs	20d08 <argp_failure@@Base+0x16c8>
   1f9c0:	add	r1, r3, #1
   1f9c4:	mov	r2, #10
   1f9c8:	str	r1, [sl, #28]
   1f9cc:	strb	r2, [r3]
   1f9d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1f9d4:	ldr	r2, [fp, #-108]	; 0xffffff94
   1f9d8:	ldr	r3, [r3, #4]
   1f9dc:	ldr	r8, [r2]
   1f9e0:	str	r3, [fp, #-112]	; 0xffffff90
   1f9e4:	cmp	r3, #0
   1f9e8:	mov	r3, #0
   1f9ec:	str	r3, [fp, #-88]	; 0xffffffa8
   1f9f0:	str	r3, [fp, #-84]	; 0xffffffac
   1f9f4:	str	r3, [fp, #-80]	; 0xffffffb0
   1f9f8:	beq	1fd4c <argp_failure@@Base+0x70c>
   1f9fc:	ldr	ip, [sl, #28]
   1fa00:	ldr	r3, [sl, #24]
   1fa04:	ldr	lr, [sl, #16]
   1fa08:	sub	ip, ip, r3
   1fa0c:	cmp	ip, lr
   1fa10:	ldr	r6, [r8]
   1fa14:	ldr	r9, [r8, #8]
   1fa18:	bhi	208fc <argp_failure@@Base+0x12bc>
   1fa1c:	ldr	r3, [sl, #4]
   1fa20:	ldr	r0, [r6, #12]
   1fa24:	str	r3, [fp, #-120]	; 0xffffff88
   1fa28:	ldr	r3, [sl, #12]
   1fa2c:	mov	r7, #0
   1fa30:	str	r3, [fp, #-124]	; 0xffffff84
   1fa34:	sub	r3, fp, #88	; 0x58
   1fa38:	str	r7, [sl, #4]
   1fa3c:	str	r3, [fp, #-68]	; 0xffffffbc
   1fa40:	ldr	r3, [fp, #-104]	; 0xffffff98
   1fa44:	ands	r0, r0, #8
   1fa48:	mov	r2, #1
   1fa4c:	str	r2, [fp, #-64]	; 0xffffffc0
   1fa50:	str	r8, [fp, #-76]	; 0xffffffb4
   1fa54:	str	sl, [fp, #-72]	; 0xffffffb8
   1fa58:	str	r3, [fp, #-60]	; 0xffffffc4
   1fa5c:	strne	r7, [fp, #-132]	; 0xffffff7c
   1fa60:	bne	1fa9c <argp_failure@@Base+0x45c>
   1fa64:	ldr	r1, [r8, #4]
   1fa68:	cmp	r1, r7
   1fa6c:	beq	1fa98 <argp_failure@@Base+0x458>
   1fa70:	add	r2, r6, #24
   1fa74:	ldr	r3, [r2, #-24]	; 0xffffffe8
   1fa78:	cmp	r3, #0
   1fa7c:	beq	1fa8c <argp_failure@@Base+0x44c>
   1fa80:	ldr	r3, [r2, #-12]
   1fa84:	tst	r3, #2
   1fa88:	beq	20940 <argp_failure@@Base+0x1300>
   1fa8c:	subs	r1, r1, #1
   1fa90:	add	r2, r2, #24
   1fa94:	bne	1fa74 <argp_failure@@Base+0x434>
   1fa98:	str	r0, [fp, #-132]	; 0xffffff7c
   1fa9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1faa0:	cmp	ip, lr
   1faa4:	ldr	r4, [r3, #8]
   1faa8:	bhi	208e8 <argp_failure@@Base+0x12a8>
   1faac:	str	r4, [sl, #12]
   1fab0:	ldr	r5, [r8, #4]
   1fab4:	cmp	r5, #0
   1fab8:	beq	1fb3c <argp_failure@@Base+0x4fc>
   1fabc:	str	r8, [fp, #-128]	; 0xffffff80
   1fac0:	mov	r4, r6
   1fac4:	mov	r8, r9
   1fac8:	b	1fad8 <argp_failure@@Base+0x498>
   1facc:	subs	r5, r5, #1
   1fad0:	add	r4, r4, #24
   1fad4:	beq	1fb30 <argp_failure@@Base+0x4f0>
   1fad8:	ldr	r7, [r4, #12]
   1fadc:	tst	r7, #8
   1fae0:	bne	1facc <argp_failure@@Base+0x48c>
   1fae4:	ldr	r9, [r4, #4]
   1fae8:	sub	r2, r9, #1
   1faec:	cmp	r2, #254	; 0xfe
   1faf0:	bhi	1facc <argp_failure@@Base+0x48c>
   1faf4:	bl	11520 <__ctype_b_loc@plt>
   1faf8:	lsl	r2, r9, #1
   1fafc:	ldr	r1, [r0]
   1fb00:	ldrh	r2, [r1, r2]
   1fb04:	tst	r2, #16384	; 0x4000
   1fb08:	beq	1facc <argp_failure@@Base+0x48c>
   1fb0c:	ldrb	r2, [r8]
   1fb10:	cmp	r9, r2
   1fb14:	bne	1facc <argp_failure@@Base+0x48c>
   1fb18:	tst	r7, #2
   1fb1c:	beq	20660 <argp_failure@@Base+0x1020>
   1fb20:	subs	r5, r5, #1
   1fb24:	add	r8, r8, #1
   1fb28:	add	r4, r4, #24
   1fb2c:	bne	1fad8 <argp_failure@@Base+0x498>
   1fb30:	ldr	r0, [r6, #12]
   1fb34:	ldr	r8, [fp, #-128]	; 0xffffff80
   1fb38:	and	r0, r0, #8
   1fb3c:	ldr	r3, [sl, #28]
   1fb40:	ldr	r1, [sl, #24]
   1fb44:	cmp	r0, #0
   1fb48:	ldr	r2, [sl, #16]
   1fb4c:	sub	r3, r3, r1
   1fb50:	beq	205cc <argp_failure@@Base+0xf8c>
   1fb54:	cmp	r3, r2
   1fb58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1fb5c:	ldr	r4, [r3, #16]
   1fb60:	bhi	20958 <argp_failure@@Base+0x1318>
   1fb64:	str	r4, [sl, #12]
   1fb68:	ldr	r5, [r8, #4]
   1fb6c:	cmp	r5, #0
   1fb70:	addne	r4, r6, #24
   1fb74:	bne	1fb88 <argp_failure@@Base+0x548>
   1fb78:	b	1fc18 <argp_failure@@Base+0x5d8>
   1fb7c:	subs	r5, r5, #1
   1fb80:	add	r4, r4, #24
   1fb84:	beq	1fc18 <argp_failure@@Base+0x5d8>
   1fb88:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1fb8c:	cmp	r3, #0
   1fb90:	beq	1fb7c <argp_failure@@Base+0x53c>
   1fb94:	ldr	r3, [r4, #-12]
   1fb98:	tst	r3, #2
   1fb9c:	bne	1fb7c <argp_failure@@Base+0x53c>
   1fba0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1fba4:	sub	r1, fp, #76	; 0x4c
   1fba8:	ldr	r0, [r3, #16]
   1fbac:	bl	1e560 <_obstack_memory_used@@Base+0x335c>
   1fbb0:	ldr	r9, [r4, #-24]	; 0xffffffe8
   1fbb4:	mov	r0, r9
   1fbb8:	bl	11544 <strlen@plt>
   1fbbc:	subs	r7, r0, #0
   1fbc0:	beq	1fb7c <argp_failure@@Base+0x53c>
   1fbc4:	ldr	r2, [sl, #28]
   1fbc8:	ldr	lr, [sl, #32]
   1fbcc:	add	ip, r2, r7
   1fbd0:	cmp	lr, ip
   1fbd4:	mov	r1, r7
   1fbd8:	mov	r0, sl
   1fbdc:	bcs	1fbf0 <argp_failure@@Base+0x5b0>
   1fbe0:	bl	22e84 <argp_error@@Base+0x2008>
   1fbe4:	cmp	r0, #0
   1fbe8:	beq	1fb7c <argp_failure@@Base+0x53c>
   1fbec:	ldr	r2, [sl, #28]
   1fbf0:	mov	r0, r2
   1fbf4:	mov	r1, r9
   1fbf8:	mov	r2, r7
   1fbfc:	bl	1140c <memcpy@plt>
   1fc00:	ldr	r2, [sl, #28]
   1fc04:	subs	r5, r5, #1
   1fc08:	add	r3, r2, r7
   1fc0c:	str	r3, [sl, #28]
   1fc10:	add	r4, r4, #24
   1fc14:	bne	1fb88 <argp_failure@@Base+0x548>
   1fc18:	ldr	r3, [sl, #28]
   1fc1c:	ldr	r1, [sl, #24]
   1fc20:	ldr	r2, [sl, #16]
   1fc24:	sub	r3, r3, r1
   1fc28:	cmp	r3, r2
   1fc2c:	bhi	20820 <argp_failure@@Base+0x11e0>
   1fc30:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1fc34:	mov	r3, #0
   1fc38:	cmp	r2, r3
   1fc3c:	str	r3, [sl, #4]
   1fc40:	beq	206e0 <argp_failure@@Base+0x10a0>
   1fc44:	ldr	r3, [r6, #12]
   1fc48:	tst	r3, #8
   1fc4c:	bne	1fc78 <argp_failure@@Base+0x638>
   1fc50:	ldr	r4, [r6, #4]
   1fc54:	sub	r3, r4, #1
   1fc58:	cmp	r3, #254	; 0xfe
   1fc5c:	bhi	1fc78 <argp_failure@@Base+0x638>
   1fc60:	bl	11520 <__ctype_b_loc@plt>
   1fc64:	lsl	r4, r4, #1
   1fc68:	ldr	r3, [r0]
   1fc6c:	ldrh	r3, [r3, r4]
   1fc70:	tst	r3, #16384	; 0x4000
   1fc74:	bne	1fc84 <argp_failure@@Base+0x644>
   1fc78:	ldr	r3, [r6]
   1fc7c:	cmp	r3, #0
   1fc80:	beq	20ba8 <argp_failure@@Base+0x1568>
   1fc84:	ldr	r3, [sl, #28]
   1fc88:	ldr	r1, [sl, #24]
   1fc8c:	ldr	r2, [sl, #16]
   1fc90:	sub	r3, r3, r1
   1fc94:	cmp	r3, r2
   1fc98:	bhi	2082c <argp_failure@@Base+0x11ec>
   1fc9c:	ldr	r3, [fp, #-120]	; 0xffffff88
   1fca0:	str	r3, [sl, #4]
   1fca4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1fca8:	add	r8, r8, #28
   1fcac:	subs	r3, r3, #1
   1fcb0:	str	r3, [fp, #-112]	; 0xffffff90
   1fcb4:	ldr	r3, [fp, #-124]	; 0xffffff84
   1fcb8:	str	r3, [sl, #12]
   1fcbc:	bne	1f9fc <argp_failure@@Base+0x3bc>
   1fcc0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1fcc4:	cmp	r3, #0
   1fcc8:	beq	1fd4c <argp_failure@@Base+0x70c>
   1fccc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1fcd0:	ldr	r3, [r3, #4]
   1fcd4:	cmp	r3, #0
   1fcd8:	beq	1fd4c <argp_failure@@Base+0x70c>
   1fcdc:	ldr	r1, [fp, #-104]	; 0xffffff98
   1fce0:	cmp	r1, #0
   1fce4:	beq	20d6c <argp_failure@@Base+0x172c>
   1fce8:	ldr	r4, [r1]
   1fcec:	cmp	r4, #0
   1fcf0:	beq	20d9c <argp_failure@@Base+0x175c>
   1fcf4:	ldr	r3, [r4, #20]
   1fcf8:	cmp	r3, #0
   1fcfc:	beq	20c6c <argp_failure@@Base+0x162c>
   1fd00:	mov	r0, r4
   1fd04:	bl	1ab80 <argp_parse@@Base+0xe20>
   1fd08:	ldr	r9, [pc, #3028]	; 208e4 <argp_failure@@Base+0x12a4>
   1fd0c:	ldr	r3, [r4, #20]
   1fd10:	mov	r1, r9
   1fd14:	mov	r2, r0
   1fd18:	ldr	r0, [pc, #2892]	; 2086c <argp_failure@@Base+0x122c>
   1fd1c:	blx	r3
   1fd20:	subs	r4, r0, #0
   1fd24:	beq	1fd4c <argp_failure@@Base+0x70c>
   1fd28:	ldrb	r3, [r4]
   1fd2c:	subs	r9, r4, r9
   1fd30:	movne	r9, #1
   1fd34:	cmp	r3, #0
   1fd38:	bne	20c74 <argp_failure@@Base+0x1634>
   1fd3c:	cmp	r9, #0
   1fd40:	beq	1fd4c <argp_failure@@Base+0x70c>
   1fd44:	mov	r0, r4
   1fd48:	bl	1acdc <argp_parse@@Base+0xf7c>
   1fd4c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1fd50:	mov	r4, #1
   1fd54:	tst	r3, #32
   1fd58:	beq	1f8ec <argp_failure@@Base+0x2ac>
   1fd5c:	mov	r3, #0
   1fd60:	str	r3, [sp]
   1fd64:	str	sl, [sp, #4]
   1fd68:	mov	r3, r4
   1fd6c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1fd70:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1fd74:	mov	r2, #1
   1fd78:	bl	1cb38 <_obstack_memory_used@@Base+0x1934>
   1fd7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1fd80:	orr	r4, r4, r0
   1fd84:	b	1f8ec <argp_failure@@Base+0x2ac>
   1fd88:	ldr	r4, [fp, #-108]	; 0xffffff94
   1fd8c:	ldr	r0, [r4]
   1fd90:	bl	1acdc <argp_parse@@Base+0xf7c>
   1fd94:	ldr	r0, [r4, #8]
   1fd98:	bl	1acdc <argp_parse@@Base+0xf7c>
   1fd9c:	b	1f97c <argp_failure@@Base+0x33c>
   1fda0:	ldr	r0, [pc, #2760]	; 20870 <argp_failure@@Base+0x1230>
   1fda4:	bl	114b4 <getenv@plt>
   1fda8:	ldr	lr, [fp, #-96]	; 0xffffffa0
   1fdac:	sub	r3, fp, #76	; 0x4c
   1fdb0:	mov	ip, r3
   1fdb4:	str	r3, [fp, #-112]	; 0xffffff90
   1fdb8:	mov	r5, r0
   1fdbc:	ldm	lr!, {r0, r1, r2, r3}
   1fdc0:	cmp	r5, #0
   1fdc4:	stmia	ip!, {r0, r1, r2, r3}
   1fdc8:	ldm	lr!, {r0, r1, r2, r3}
   1fdcc:	stmia	ip!, {r0, r1, r2, r3}
   1fdd0:	ldm	lr, {r0, r1}
   1fdd4:	stm	ip, {r0, r1}
   1fdd8:	beq	1f88c <argp_failure@@Base+0x24c>
   1fddc:	ldrb	r8, [r5]
   1fde0:	ldr	r9, [pc, #2700]	; 20874 <argp_failure@@Base+0x1234>
   1fde4:	str	sl, [fp, #-120]	; 0xffffff88
   1fde8:	cmp	r8, #0
   1fdec:	beq	1ffa0 <argp_failure@@Base+0x960>
   1fdf0:	bl	11520 <__ctype_b_loc@plt>
   1fdf4:	mov	r7, r0
   1fdf8:	ldr	r0, [r0]
   1fdfc:	b	1fe04 <argp_failure@@Base+0x7c4>
   1fe00:	ldrb	r8, [r5, #1]!
   1fe04:	lsl	r3, r8, #1
   1fe08:	ldrh	r1, [r0, r3]
   1fe0c:	tst	r1, #8192	; 0x2000
   1fe10:	bne	1fe00 <argp_failure@@Base+0x7c0>
   1fe14:	ands	r2, r1, #1024	; 0x400
   1fe18:	beq	1ff98 <argp_failure@@Base+0x958>
   1fe1c:	cmp	r8, #95	; 0x5f
   1fe20:	cmpne	r8, #45	; 0x2d
   1fe24:	lsl	r3, r1, #28
   1fe28:	moveq	r6, #1
   1fe2c:	movne	r6, #0
   1fe30:	orrs	r6, r6, r3, lsr #31
   1fe34:	beq	20a3c <argp_failure@@Base+0x13fc>
   1fe38:	mov	r4, r5
   1fe3c:	ldrb	r3, [r4, #1]!
   1fe40:	cmp	r3, #95	; 0x5f
   1fe44:	cmpne	r3, #45	; 0x2d
   1fe48:	lsl	r1, r3, #1
   1fe4c:	moveq	r2, #1
   1fe50:	ldrh	r1, [r0, r1]
   1fe54:	movne	r2, #0
   1fe58:	lsl	ip, r1, #28
   1fe5c:	orrs	r2, r2, ip, lsr #31
   1fe60:	bne	1fe3c <argp_failure@@Base+0x7fc>
   1fe64:	tst	r1, #8192	; 0x2000
   1fe68:	sub	r6, r4, r5
   1fe6c:	beq	1fe84 <argp_failure@@Base+0x844>
   1fe70:	ldrb	r3, [r4, #1]!
   1fe74:	lsl	r2, r3, #1
   1fe78:	ldrh	r1, [r0, r2]
   1fe7c:	tst	r1, #8192	; 0x2000
   1fe80:	bne	1fe70 <argp_failure@@Base+0x830>
   1fe84:	cmp	r3, #44	; 0x2c
   1fe88:	cmpne	r3, #0
   1fe8c:	beq	20024 <argp_failure@@Base+0x9e4>
   1fe90:	cmp	r3, #61	; 0x3d
   1fe94:	beq	2059c <argp_failure@@Base+0xf5c>
   1fe98:	tst	r1, #2048	; 0x800
   1fe9c:	bne	2050c <argp_failure@@Base+0xecc>
   1fea0:	ldr	r3, [fp, #-120]	; 0xffffff88
   1fea4:	mov	sl, r3
   1fea8:	str	r3, [fp, #-108]	; 0xffffff94
   1feac:	mov	r0, r9
   1feb0:	bl	11544 <strlen@plt>
   1feb4:	cmp	r6, r0
   1feb8:	beq	20044 <argp_failure@@Base+0xa04>
   1febc:	ldr	r0, [pc, #2484]	; 20878 <argp_failure@@Base+0x1238>
   1fec0:	bl	11544 <strlen@plt>
   1fec4:	cmp	r6, r0
   1fec8:	mov	r7, r0
   1fecc:	beq	200d8 <argp_failure@@Base+0xa98>
   1fed0:	ldr	r0, [pc, #2556]	; 208d4 <argp_failure@@Base+0x1294>
   1fed4:	bl	11544 <strlen@plt>
   1fed8:	cmp	r6, r0
   1fedc:	mov	r7, r0
   1fee0:	beq	2008c <argp_failure@@Base+0xa4c>
   1fee4:	ldr	r0, [pc, #2532]	; 208d0 <argp_failure@@Base+0x1290>
   1fee8:	bl	11544 <strlen@plt>
   1feec:	cmp	r6, r0
   1fef0:	mov	r7, r0
   1fef4:	beq	200f8 <argp_failure@@Base+0xab8>
   1fef8:	ldr	r0, [pc, #2500]	; 208c4 <argp_failure@@Base+0x1284>
   1fefc:	bl	11544 <strlen@plt>
   1ff00:	cmp	r6, r0
   1ff04:	mov	r7, r0
   1ff08:	beq	20118 <argp_failure@@Base+0xad8>
   1ff0c:	ldr	r8, [pc, #2504]	; 208dc <argp_failure@@Base+0x129c>
   1ff10:	mov	r0, r8
   1ff14:	bl	11544 <strlen@plt>
   1ff18:	cmp	r6, r0
   1ff1c:	mov	r7, r0
   1ff20:	beq	20138 <argp_failure@@Base+0xaf8>
   1ff24:	ldr	r8, [pc, #2476]	; 208d8 <argp_failure@@Base+0x1298>
   1ff28:	mov	r0, r8
   1ff2c:	bl	11544 <strlen@plt>
   1ff30:	cmp	r6, r0
   1ff34:	mov	r7, r0
   1ff38:	beq	20154 <argp_failure@@Base+0xb14>
   1ff3c:	ldr	r8, [pc, #2460]	; 208e0 <argp_failure@@Base+0x12a0>
   1ff40:	mov	r0, r8
   1ff44:	bl	11544 <strlen@plt>
   1ff48:	cmp	r6, r0
   1ff4c:	mov	r7, r0
   1ff50:	beq	20170 <argp_failure@@Base+0xb30>
   1ff54:	ldr	r8, [pc, #2336]	; 2087c <argp_failure@@Base+0x123c>
   1ff58:	mov	r0, r8
   1ff5c:	bl	11544 <strlen@plt>
   1ff60:	cmp	r0, r6
   1ff64:	beq	2018c <argp_failure@@Base+0xb4c>
   1ff68:	mov	r2, #0
   1ff6c:	str	r5, [sp, #4]
   1ff70:	str	r6, [sp]
   1ff74:	mov	r1, r2
   1ff78:	ldr	r3, [pc, #2304]	; 20880 <argp_failure@@Base+0x1240>
   1ff7c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1ff80:	bl	1f640 <argp_failure@@Base>
   1ff84:	ldrb	r8, [r4]
   1ff88:	cmp	r8, #44	; 0x2c
   1ff8c:	beq	20080 <argp_failure@@Base+0xa40>
   1ff90:	mov	r5, r4
   1ff94:	b	1fde8 <argp_failure@@Base+0x7a8>
   1ff98:	cmp	r8, #0
   1ff9c:	bne	20b48 <argp_failure@@Base+0x1508>
   1ffa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ffa4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ffa8:	cmp	r3, r2
   1ffac:	ble	20d2c <argp_failure@@Base+0x16ec>
   1ffb0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ffb4:	cmp	r3, r2
   1ffb8:	ble	20b84 <argp_failure@@Base+0x1544>
   1ffbc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ffc0:	cmp	r3, r2
   1ffc4:	ble	20b60 <argp_failure@@Base+0x1520>
   1ffc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ffcc:	cmp	r3, r2
   1ffd0:	ble	20d64 <argp_failure@@Base+0x1724>
   1ffd4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ffd8:	cmp	r3, r2
   1ffdc:	ble	20d5c <argp_failure@@Base+0x171c>
   1ffe0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ffe4:	cmp	r3, r2
   1ffe8:	ble	20d78 <argp_failure@@Base+0x1738>
   1ffec:	ldr	lr, [fp, #-112]	; 0xffffff90
   1fff0:	ldr	r3, [pc, #2152]	; 20860 <argp_failure@@Base+0x1220>
   1fff4:	mov	r4, #1
   1fff8:	mov	r5, r3
   1fffc:	str	r3, [fp, #-96]	; 0xffffffa0
   20000:	ldm	lr!, {r0, r1, r2, r3}
   20004:	mov	ip, r5
   20008:	stmia	ip!, {r0, r1, r2, r3}
   2000c:	ldm	lr!, {r0, r1, r2, r3}
   20010:	stmia	ip!, {r0, r1, r2, r3}
   20014:	ldm	lr, {r0, r1}
   20018:	stm	ip, {r0, r1}
   2001c:	str	r4, [r5, #36]	; 0x24
   20020:	b	1f88c <argp_failure@@Base+0x24c>
   20024:	cmp	r8, #110	; 0x6e
   20028:	beq	2056c <argp_failure@@Base+0xf2c>
   2002c:	mov	sl, #1
   20030:	mov	r0, r9
   20034:	str	sl, [fp, #-108]	; 0xffffff94
   20038:	bl	11544 <strlen@plt>
   2003c:	cmp	r6, r0
   20040:	bne	1febc <argp_failure@@Base+0x87c>
   20044:	mov	r2, r6
   20048:	mov	r1, r9
   2004c:	mov	r0, r5
   20050:	bl	116a0 <strncmp@plt>
   20054:	cmp	r0, #0
   20058:	bne	1febc <argp_failure@@Base+0x87c>
   2005c:	mov	r8, r9
   20060:	ldrb	r3, [r8, #15]
   20064:	ldrb	r8, [r4]
   20068:	sub	r2, fp, #36	; 0x24
   2006c:	add	r3, r2, r3
   20070:	ldr	r2, [fp, #-108]	; 0xffffff94
   20074:	cmp	r8, #44	; 0x2c
   20078:	str	r2, [r3, #-40]	; 0xffffffd8
   2007c:	bne	1ff90 <argp_failure@@Base+0x950>
   20080:	ldrb	r8, [r4, #1]
   20084:	add	r4, r4, #1
   20088:	b	1ff90 <argp_failure@@Base+0x950>
   2008c:	mov	r2, r0
   20090:	ldr	r1, [pc, #2108]	; 208d4 <argp_failure@@Base+0x1294>
   20094:	mov	r0, r5
   20098:	bl	116a0 <strncmp@plt>
   2009c:	cmp	r0, #0
   200a0:	bne	1fee4 <argp_failure@@Base+0x8a4>
   200a4:	ldr	r8, [pc, #2088]	; 208d4 <argp_failure@@Base+0x1294>
   200a8:	cmp	sl, #0
   200ac:	beq	20060 <argp_failure@@Base+0xa20>
   200b0:	ldrb	r2, [r8, #14]
   200b4:	cmp	r2, #0
   200b8:	bne	20060 <argp_failure@@Base+0xa20>
   200bc:	str	r5, [sp, #4]
   200c0:	str	r7, [sp]
   200c4:	ldr	r3, [pc, #1976]	; 20884 <argp_failure@@Base+0x1244>
   200c8:	mov	r1, r2
   200cc:	ldr	r0, [fp, #-104]	; 0xffffff98
   200d0:	bl	1f640 <argp_failure@@Base>
   200d4:	b	1ff84 <argp_failure@@Base+0x944>
   200d8:	mov	r2, r0
   200dc:	ldr	r1, [pc, #1940]	; 20878 <argp_failure@@Base+0x1238>
   200e0:	mov	r0, r5
   200e4:	bl	116a0 <strncmp@plt>
   200e8:	cmp	r0, #0
   200ec:	bne	1fed0 <argp_failure@@Base+0x890>
   200f0:	ldr	r8, [pc, #1920]	; 20878 <argp_failure@@Base+0x1238>
   200f4:	b	200a8 <argp_failure@@Base+0xa68>
   200f8:	mov	r2, r0
   200fc:	ldr	r1, [pc, #1996]	; 208d0 <argp_failure@@Base+0x1290>
   20100:	mov	r0, r5
   20104:	bl	116a0 <strncmp@plt>
   20108:	cmp	r0, #0
   2010c:	bne	1fef8 <argp_failure@@Base+0x8b8>
   20110:	ldr	r8, [pc, #1976]	; 208d0 <argp_failure@@Base+0x1290>
   20114:	b	200a8 <argp_failure@@Base+0xa68>
   20118:	mov	r2, r0
   2011c:	ldr	r1, [pc, #1952]	; 208c4 <argp_failure@@Base+0x1284>
   20120:	mov	r0, r5
   20124:	bl	116a0 <strncmp@plt>
   20128:	cmp	r0, #0
   2012c:	bne	1ff0c <argp_failure@@Base+0x8cc>
   20130:	ldr	r8, [pc, #1932]	; 208c4 <argp_failure@@Base+0x1284>
   20134:	b	200a8 <argp_failure@@Base+0xa68>
   20138:	mov	r2, r0
   2013c:	mov	r1, r8
   20140:	mov	r0, r5
   20144:	bl	116a0 <strncmp@plt>
   20148:	cmp	r0, #0
   2014c:	bne	1ff24 <argp_failure@@Base+0x8e4>
   20150:	b	200a8 <argp_failure@@Base+0xa68>
   20154:	mov	r2, r0
   20158:	mov	r1, r8
   2015c:	mov	r0, r5
   20160:	bl	116a0 <strncmp@plt>
   20164:	cmp	r0, #0
   20168:	bne	1ff3c <argp_failure@@Base+0x8fc>
   2016c:	b	200a8 <argp_failure@@Base+0xa68>
   20170:	mov	r2, r0
   20174:	mov	r1, r8
   20178:	mov	r0, r5
   2017c:	bl	116a0 <strncmp@plt>
   20180:	cmp	r0, #0
   20184:	bne	1ff54 <argp_failure@@Base+0x914>
   20188:	b	200a8 <argp_failure@@Base+0xa68>
   2018c:	mov	r2, r6
   20190:	mov	r1, r8
   20194:	mov	r0, r5
   20198:	bl	116a0 <strncmp@plt>
   2019c:	cmp	r0, #0
   201a0:	moveq	r7, r6
   201a4:	bne	1ff68 <argp_failure@@Base+0x928>
   201a8:	b	200a8 <argp_failure@@Base+0xa68>
   201ac:	ldr	r3, [fp, #4]
   201b0:	ldr	r1, [pc, #1744]	; 20888 <argp_failure@@Base+0x1248>
   201b4:	mov	r2, r3
   201b8:	mov	r0, sl
   201bc:	bl	22f84 <argp_error@@Base+0x2108>
   201c0:	mov	r4, #1
   201c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   201c8:	b	1f8d8 <argp_failure@@Base+0x298>
   201cc:	mov	r1, #0
   201d0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   201d4:	bl	1d0e4 <_obstack_memory_used@@Base+0x1ee0>
   201d8:	ldr	r2, [r0, #4]
   201dc:	ldr	r3, [r0]
   201e0:	cmp	r2, #0
   201e4:	str	r0, [fp, #-108]	; 0xffffff94
   201e8:	str	r2, [fp, #-120]	; 0xffffff88
   201ec:	str	r3, [fp, #-112]	; 0xffffff90
   201f0:	sub	r6, r2, #1
   201f4:	beq	1f8bc <argp_failure@@Base+0x27c>
   201f8:	ldr	r5, [pc, #1676]	; 2088c <argp_failure@@Base+0x124c>
   201fc:	mov	r8, r6
   20200:	mov	r7, r3
   20204:	ldm	r7, {r4, r9}
   20208:	cmp	r9, #0
   2020c:	sub	r9, r9, #1
   20210:	beq	20250 <argp_failure@@Base+0xc10>
   20214:	add	r4, r4, #24
   20218:	ldr	r3, [r4, #-24]	; 0xffffffe8
   2021c:	mov	r1, r5
   20220:	subs	r0, r3, #0
   20224:	sub	r9, r9, #1
   20228:	beq	20244 <argp_failure@@Base+0xc04>
   2022c:	ldr	r3, [r4, #-12]
   20230:	tst	r3, #2
   20234:	bne	20244 <argp_failure@@Base+0xc04>
   20238:	bl	113a0 <strcmp@plt>
   2023c:	cmp	r0, #0
   20240:	beq	209e4 <argp_failure@@Base+0x13a4>
   20244:	cmn	r9, #1
   20248:	add	r4, r4, #24
   2024c:	bne	20218 <argp_failure@@Base+0xbd8>
   20250:	sub	r8, r8, #1
   20254:	cmn	r8, #1
   20258:	add	r7, r7, #28
   2025c:	bne	20204 <argp_failure@@Base+0xbc4>
   20260:	ldr	r7, [fp, #-112]	; 0xffffff90
   20264:	ldr	r9, [pc, #1572]	; 20890 <argp_failure@@Base+0x1250>
   20268:	ldm	r7, {r4, r5}
   2026c:	cmp	r5, #0
   20270:	sub	r5, r5, #1
   20274:	beq	202b4 <argp_failure@@Base+0xc74>
   20278:	add	r4, r4, #24
   2027c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   20280:	mov	r1, r9
   20284:	subs	r0, r3, #0
   20288:	sub	r5, r5, #1
   2028c:	beq	202a8 <argp_failure@@Base+0xc68>
   20290:	ldr	r3, [r4, #-12]
   20294:	tst	r3, #2
   20298:	bne	202a8 <argp_failure@@Base+0xc68>
   2029c:	bl	113a0 <strcmp@plt>
   202a0:	cmp	r0, #0
   202a4:	beq	2099c <argp_failure@@Base+0x135c>
   202a8:	cmn	r5, #1
   202ac:	add	r4, r4, #24
   202b0:	bne	2027c <argp_failure@@Base+0xc3c>
   202b4:	cmp	r6, #0
   202b8:	add	r7, r7, #28
   202bc:	sub	r6, r6, #1
   202c0:	bne	20268 <argp_failure@@Base+0xc28>
   202c4:	ldr	r1, [fp, #-120]	; 0xffffff88
   202c8:	b	209b4 <argp_failure@@Base+0x1374>
   202cc:	mov	r2, #1
   202d0:	mov	r3, #0
   202d4:	stm	sp, {r2, sl}
   202d8:	ldr	r1, [fp, #-104]	; 0xffffff98
   202dc:	mov	r2, r3
   202e0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   202e4:	bl	1cb38 <_obstack_memory_used@@Base+0x1934>
   202e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   202ec:	orr	r4, r4, r0
   202f0:	b	1f8d0 <argp_failure@@Base+0x290>
   202f4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   202f8:	mov	r4, #1
   202fc:	ldr	r8, [pc, #1424]	; 20894 <argp_failure@@Base+0x1254>
   20300:	ldr	r1, [r3, #16]
   20304:	ldr	r0, [r3, #8]
   20308:	bl	1dae4 <_obstack_memory_used@@Base+0x28e0>
   2030c:	mov	r1, #0
   20310:	mov	r6, r4
   20314:	add	r3, r0, #14
   20318:	bic	r3, r3, #7
   2031c:	sub	sp, sp, r3
   20320:	add	r7, sp, #8
   20324:	mov	r2, r0
   20328:	mov	r0, r7
   2032c:	bl	11598 <memset@plt>
   20330:	sub	r3, fp, #76	; 0x4c
   20334:	str	r3, [fp, #-112]	; 0xffffff90
   20338:	str	r7, [fp, #-120]	; 0xffffff88
   2033c:	ldr	r5, [fp, #-96]	; 0xffffffa0
   20340:	b	20460 <argp_failure@@Base+0xe20>
   20344:	cmp	r4, #0
   20348:	ldr	r3, [fp, #-120]	; 0xffffff88
   2034c:	ldr	r7, [sl, #12]
   20350:	ldrne	r2, [pc, #1344]	; 20898 <argp_failure@@Base+0x1258>
   20354:	str	r9, [sl, #12]
   20358:	ldreq	r2, [pc, #1340]	; 2089c <argp_failure@@Base+0x125c>
   2035c:	str	r3, [fp, #-76]	; 0xffffffb4
   20360:	mov	r1, r8
   20364:	ldr	r3, [fp, #4]
   20368:	mov	r0, sl
   2036c:	bl	22f84 <argp_error@@Base+0x2108>
   20370:	ldr	r3, [sl, #28]
   20374:	ldr	r1, [sl, #24]
   20378:	ldr	r2, [sl, #16]
   2037c:	sub	r3, r3, r1
   20380:	cmp	r3, r2
   20384:	ldr	r9, [r5, #28]
   20388:	bhi	204d8 <argp_failure@@Base+0xe98>
   2038c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   20390:	ldr	r4, [sl, #4]
   20394:	tst	r3, #2
   20398:	str	r9, [sl, #4]
   2039c:	beq	204e4 <argp_failure@@Base+0xea4>
   203a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   203a4:	ldr	r3, [r3, #4]
   203a8:	cmp	r3, #0
   203ac:	beq	203fc <argp_failure@@Base+0xdbc>
   203b0:	ldr	ip, [sl, #28]
   203b4:	ldr	r2, [sl, #32]
   203b8:	add	r3, ip, #12
   203bc:	cmp	r2, r3
   203c0:	bcs	203dc <argp_failure@@Base+0xd9c>
   203c4:	mov	r1, #12
   203c8:	mov	r0, sl
   203cc:	bl	22e84 <argp_error@@Base+0x2008>
   203d0:	cmp	r0, #0
   203d4:	beq	203fc <argp_failure@@Base+0xdbc>
   203d8:	ldr	ip, [sl, #28]
   203dc:	ldr	r3, [pc, #1212]	; 208a0 <argp_failure@@Base+0x1260>
   203e0:	ldm	r3!, {r0, r1, r2}
   203e4:	str	r0, [ip]
   203e8:	str	r1, [ip, #4]
   203ec:	str	r2, [ip, #8]
   203f0:	ldr	r3, [sl, #28]
   203f4:	add	r3, r3, #12
   203f8:	str	r3, [sl, #28]
   203fc:	mov	r3, r6
   20400:	ldr	r1, [fp, #-104]	; 0xffffff98
   20404:	str	sl, [sp]
   20408:	ldr	r2, [fp, #-112]	; 0xffffff90
   2040c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   20410:	bl	1d804 <_obstack_memory_used@@Base+0x2600>
   20414:	ldr	r3, [sl, #28]
   20418:	ldr	r1, [sl, #24]
   2041c:	sub	r1, r3, r1
   20420:	mov	r9, r0
   20424:	ldr	r0, [sl, #16]
   20428:	cmp	r1, r0
   2042c:	strls	r7, [sl, #12]
   20430:	bhi	204a4 <argp_failure@@Base+0xe64>
   20434:	ldr	r1, [sl, #32]
   20438:	str	r4, [sl, #4]
   2043c:	cmp	r1, r3
   20440:	bls	20488 <argp_failure@@Base+0xe48>
   20444:	add	r1, r3, #1
   20448:	mov	r2, #10
   2044c:	str	r1, [sl, #28]
   20450:	strb	r2, [r3]
   20454:	cmp	r9, #0
   20458:	mov	r4, #0
   2045c:	beq	20500 <argp_failure@@Base+0xec0>
   20460:	ldr	r3, [sl, #28]
   20464:	ldr	r1, [sl, #24]
   20468:	ldr	r2, [sl, #16]
   2046c:	sub	r3, r3, r1
   20470:	cmp	r3, r2
   20474:	ldr	r9, [r5, #28]
   20478:	bls	20344 <argp_failure@@Base+0xd04>
   2047c:	mov	r0, sl
   20480:	bl	228d8 <argp_error@@Base+0x1a5c>
   20484:	b	20344 <argp_failure@@Base+0xd04>
   20488:	mov	r1, r6
   2048c:	mov	r0, sl
   20490:	bl	22e84 <argp_error@@Base+0x2008>
   20494:	cmp	r0, #0
   20498:	beq	20454 <argp_failure@@Base+0xe14>
   2049c:	ldr	r3, [sl, #28]
   204a0:	b	20444 <argp_failure@@Base+0xe04>
   204a4:	mov	r0, sl
   204a8:	bl	228d8 <argp_error@@Base+0x1a5c>
   204ac:	ldr	r3, [sl, #28]
   204b0:	ldr	r1, [sl, #24]
   204b4:	ldr	r0, [sl, #16]
   204b8:	sub	r1, r3, r1
   204bc:	cmp	r1, r0
   204c0:	str	r7, [sl, #12]
   204c4:	bls	20434 <argp_failure@@Base+0xdf4>
   204c8:	mov	r0, sl
   204cc:	bl	228d8 <argp_error@@Base+0x1a5c>
   204d0:	ldr	r3, [sl, #28]
   204d4:	b	20434 <argp_failure@@Base+0xdf4>
   204d8:	mov	r0, sl
   204dc:	bl	228d8 <argp_error@@Base+0x1a5c>
   204e0:	b	2038c <argp_failure@@Base+0xd4c>
   204e4:	mov	r1, sl
   204e8:	ldr	r0, [fp, #-108]	; 0xffffff94
   204ec:	bl	1de30 <_obstack_memory_used@@Base+0x2c2c>
   204f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   204f4:	orr	r3, r3, #2
   204f8:	str	r3, [fp, #-100]	; 0xffffff9c
   204fc:	b	203fc <argp_failure@@Base+0xdbc>
   20500:	mov	r4, #1
   20504:	ldr	r3, [fp, #-100]	; 0xffffff9c
   20508:	b	1f8c8 <argp_failure@@Base+0x288>
   2050c:	mov	r2, #10
   20510:	mov	r1, #0
   20514:	mov	r0, r4
   20518:	bl	113ac <strtol@plt>
   2051c:	ldrb	r3, [r4]
   20520:	ldr	r2, [r7]
   20524:	lsl	r3, r3, #1
   20528:	ldrh	r3, [r2, r3]
   2052c:	tst	r3, #2048	; 0x800
   20530:	str	r0, [fp, #-108]	; 0xffffff94
   20534:	beq	2055c <argp_failure@@Base+0xf1c>
   20538:	ldrb	r3, [r4, #1]!
   2053c:	lsl	r3, r3, #1
   20540:	ldrh	r3, [r2, r3]
   20544:	tst	r3, #2048	; 0x800
   20548:	bne	20538 <argp_failure@@Base+0xef8>
   2054c:	b	2055c <argp_failure@@Base+0xf1c>
   20550:	ldrb	r3, [r4, #1]!
   20554:	lsl	r3, r3, #1
   20558:	ldrh	r3, [r2, r3]
   2055c:	tst	r3, #8192	; 0x2000
   20560:	bne	20550 <argp_failure@@Base+0xf10>
   20564:	ldr	sl, [fp, #-120]	; 0xffffff88
   20568:	b	1feac <argp_failure@@Base+0x86c>
   2056c:	ldrb	r3, [r5, #1]
   20570:	cmp	r3, #111	; 0x6f
   20574:	bne	2002c <argp_failure@@Base+0x9ec>
   20578:	ldrb	r3, [r5, #2]
   2057c:	cmp	r3, #45	; 0x2d
   20580:	bne	2002c <argp_failure@@Base+0x9ec>
   20584:	ldr	r3, [fp, #-120]	; 0xffffff88
   20588:	add	r5, r5, #3
   2058c:	sub	r6, r6, #3
   20590:	str	r3, [fp, #-108]	; 0xffffff94
   20594:	mov	sl, #1
   20598:	b	1feac <argp_failure@@Base+0x86c>
   2059c:	ldrb	r3, [r4, #1]
   205a0:	add	r4, r4, #1
   205a4:	lsl	r3, r3, #1
   205a8:	ldrh	r1, [r0, r3]
   205ac:	tst	r1, #8192	; 0x2000
   205b0:	beq	1fe98 <argp_failure@@Base+0x858>
   205b4:	ldrb	r3, [r4, #1]!
   205b8:	lsl	r3, r3, #1
   205bc:	ldrh	r1, [r0, r3]
   205c0:	tst	r1, #8192	; 0x2000
   205c4:	bne	205b4 <argp_failure@@Base+0xf74>
   205c8:	b	1fe98 <argp_failure@@Base+0x858>
   205cc:	cmp	r3, r2
   205d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   205d4:	ldr	r4, [r3, #12]
   205d8:	bhi	2094c <argp_failure@@Base+0x130c>
   205dc:	str	r4, [sl, #12]
   205e0:	ldr	r5, [r8, #4]
   205e4:	cmp	r5, #0
   205e8:	beq	1fc18 <argp_failure@@Base+0x5d8>
   205ec:	add	r4, r6, #24
   205f0:	ldr	r7, [fp, #-96]	; 0xffffffa0
   205f4:	b	20604 <argp_failure@@Base+0xfc4>
   205f8:	subs	r5, r5, #1
   205fc:	add	r4, r4, #24
   20600:	beq	1fc18 <argp_failure@@Base+0x5d8>
   20604:	ldr	r3, [r4, #-24]	; 0xffffffe8
   20608:	cmp	r3, #0
   2060c:	beq	205f8 <argp_failure@@Base+0xfb8>
   20610:	ldr	r3, [r4, #-12]
   20614:	tst	r3, #2
   20618:	bne	205f8 <argp_failure@@Base+0xfb8>
   2061c:	sub	r1, fp, #76	; 0x4c
   20620:	ldr	r0, [r7, #12]
   20624:	bl	1e560 <_obstack_memory_used@@Base+0x335c>
   20628:	ldr	r2, [r4, #-24]	; 0xffffffe8
   2062c:	ldr	r1, [pc, #624]	; 208a4 <argp_failure@@Base+0x1264>
   20630:	mov	r0, sl
   20634:	bl	22f84 <argp_error@@Base+0x2108>
   20638:	ldr	r3, [r6, #8]
   2063c:	ldr	r1, [pc, #612]	; 208a8 <argp_failure@@Base+0x1268>
   20640:	subs	r2, r3, #0
   20644:	mov	r0, sl
   20648:	beq	205f8 <argp_failure@@Base+0xfb8>
   2064c:	ldr	ip, [r6, #12]
   20650:	tst	ip, #1
   20654:	ldrne	r1, [pc, #592]	; 208ac <argp_failure@@Base+0x126c>
   20658:	bl	22f84 <argp_error@@Base+0x2108>
   2065c:	b	205f8 <argp_failure@@Base+0xfb8>
   20660:	ldr	r3, [fp, #-96]	; 0xffffffa0
   20664:	sub	r1, fp, #76	; 0x4c
   20668:	ldr	r0, [r3, #8]
   2066c:	bl	1e560 <_obstack_memory_used@@Base+0x335c>
   20670:	ldr	r2, [sl, #28]
   20674:	ldr	r1, [sl, #32]
   20678:	cmp	r2, r1
   2067c:	bcs	20980 <argp_failure@@Base+0x1340>
   20680:	add	r1, r2, #1
   20684:	mov	r3, #45	; 0x2d
   20688:	str	r1, [sl, #28]
   2068c:	strb	r3, [r2]
   20690:	ldr	r2, [sl, #28]
   20694:	ldr	r1, [sl, #32]
   20698:	ldrb	r7, [r8]
   2069c:	cmp	r2, r1
   206a0:	bcs	20964 <argp_failure@@Base+0x1324>
   206a4:	add	r1, r2, #1
   206a8:	str	r1, [sl, #28]
   206ac:	strb	r7, [r2]
   206b0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   206b4:	cmp	r3, #0
   206b8:	beq	20918 <argp_failure@@Base+0x12d8>
   206bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   206c0:	ldr	r2, [r3]
   206c4:	cmp	r2, #0
   206c8:	bne	20918 <argp_failure@@Base+0x12d8>
   206cc:	ldr	r2, [r6, #8]
   206d0:	cmp	r2, #0
   206d4:	movne	r3, #1
   206d8:	strne	r3, [fp, #-80]	; 0xffffffb0
   206dc:	b	1fb20 <argp_failure@@Base+0x4e0>
   206e0:	ldr	r5, [r8, #20]
   206e4:	ldr	r9, [r6, #16]
   206e8:	cmp	r5, #0
   206ec:	beq	20a08 <argp_failure@@Base+0x13c8>
   206f0:	ldr	r3, [r5, #20]
   206f4:	cmp	r3, #0
   206f8:	beq	20a08 <argp_failure@@Base+0x13c8>
   206fc:	ldr	r1, [fp, #-104]	; 0xffffff98
   20700:	mov	r0, r5
   20704:	ldr	r4, [r6, #4]
   20708:	bl	1ab80 <argp_parse@@Base+0xe20>
   2070c:	ldr	r3, [r5, #20]
   20710:	mov	r1, r9
   20714:	mov	r2, r0
   20718:	mov	r0, r4
   2071c:	blx	r3
   20720:	mov	r4, r0
   20724:	cmp	r4, #0
   20728:	beq	207dc <argp_failure@@Base+0x119c>
   2072c:	ldrb	r3, [r4]
   20730:	cmp	r3, #0
   20734:	beq	207cc <argp_failure@@Base+0x118c>
   20738:	ldr	r3, [sl, #28]
   2073c:	ldr	r2, [sl, #24]
   20740:	ldr	r1, [sl, #16]
   20744:	sub	r2, r3, r2
   20748:	cmp	r2, r1
   2074c:	bhi	20ad4 <argp_failure@@Base+0x1494>
   20750:	ldr	r6, [sl, #20]
   20754:	ldr	r2, [fp, #-96]	; 0xffffffa0
   20758:	bic	r6, r6, r6, asr #31
   2075c:	ldr	r5, [r2, #20]
   20760:	mov	r7, r5
   20764:	str	r5, [sl, #4]
   20768:	add	r2, r5, #3
   2076c:	cmp	r2, r6
   20770:	str	r7, [sl, #12]
   20774:	bcs	20a48 <argp_failure@@Base+0x1408>
   20778:	ldr	r2, [sl, #32]
   2077c:	cmp	r2, r3
   20780:	bls	20c50 <argp_failure@@Base+0x1610>
   20784:	add	r1, r3, #1
   20788:	mov	r2, #10
   2078c:	str	r1, [sl, #28]
   20790:	strb	r2, [r3]
   20794:	mov	r0, r4
   20798:	bl	11544 <strlen@plt>
   2079c:	subs	r5, r0, #0
   207a0:	beq	207cc <argp_failure@@Base+0x118c>
   207a4:	ldr	r0, [sl, #28]
   207a8:	ldr	r2, [sl, #32]
   207ac:	add	r3, r0, r5
   207b0:	cmp	r2, r3
   207b4:	bcs	20ab8 <argp_failure@@Base+0x1478>
   207b8:	mov	r1, r5
   207bc:	mov	r0, sl
   207c0:	bl	22e84 <argp_error@@Base+0x2008>
   207c4:	cmp	r0, #0
   207c8:	bne	20ab4 <argp_failure@@Base+0x1474>
   207cc:	cmp	r9, r4
   207d0:	beq	207dc <argp_failure@@Base+0x119c>
   207d4:	mov	r0, r4
   207d8:	bl	1acdc <argp_parse@@Base+0xf7c>
   207dc:	ldr	r3, [sl, #28]
   207e0:	ldr	r2, [sl, #24]
   207e4:	ldr	r1, [sl, #16]
   207e8:	sub	r2, r3, r2
   207ec:	cmp	r2, r1
   207f0:	bhi	20a2c <argp_failure@@Base+0x13ec>
   207f4:	ldr	r1, [sl, #32]
   207f8:	mov	r2, #0
   207fc:	cmp	r1, r3
   20800:	str	r2, [sl, #4]
   20804:	bls	20a10 <argp_failure@@Base+0x13d0>
   20808:	add	r1, r3, #1
   2080c:	mov	r2, #10
   20810:	str	r1, [sl, #28]
   20814:	strb	r2, [r3]
   20818:	str	r8, [fp, #-88]	; 0xffffffa8
   2081c:	b	1fc84 <argp_failure@@Base+0x644>
   20820:	mov	r0, sl
   20824:	bl	228d8 <argp_error@@Base+0x1a5c>
   20828:	b	1fc30 <argp_failure@@Base+0x5f0>
   2082c:	mov	r0, sl
   20830:	bl	228d8 <argp_error@@Base+0x1a5c>
   20834:	ldr	r2, [fp, #-120]	; 0xffffff88
   20838:	ldr	r3, [sl, #28]
   2083c:	ldr	r1, [sl, #24]
   20840:	str	r2, [sl, #4]
   20844:	ldr	r2, [sl, #16]
   20848:	sub	r3, r3, r1
   2084c:	cmp	r3, r2
   20850:	bls	1fca4 <argp_failure@@Base+0x664>
   20854:	mov	r0, sl
   20858:	bl	228d8 <argp_error@@Base+0x1a5c>
   2085c:	b	1fca4 <argp_failure@@Base+0x664>
   20860:	andeq	r7, r3, r0, lsl #22
   20864:	andeq	r7, r3, r0, lsr #24
   20868:	muleq	r2, ip, r8
   2086c:	andeq	r0, r0, #5
   20870:	andeq	r6, r2, r8, asr r7
   20874:	andeq	r6, r2, r4, lsr #10
   20878:	andeq	r6, r2, r4, lsr r5
   2087c:	andeq	r6, r2, r4, lsr #11
   20880:	muleq	r2, r8, r7
   20884:	andeq	r6, r2, r8, ror #14
   20888:	andeq	r6, r2, r4, asr #16
   2088c:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   20890:	muleq	r2, r4, r0
   20894:	andeq	r6, r2, r4, lsr #16
   20898:	andeq	r6, r2, ip, lsl r8
   2089c:	andeq	r6, r2, ip, lsr #16
   208a0:	andeq	r6, r2, r4, lsr r8
   208a4:	andeq	r6, r2, r4, lsl #17
   208a8:	muleq	r2, r4, r8
   208ac:	andeq	r6, r2, ip, lsl #17
   208b0:	andeq	r6, r2, ip, ror r8
   208b4:	muleq	r2, r0, r6
   208b8:	muleq	r1, r0, fp
   208bc:	muleq	r2, r8, r8
   208c0:	andeq	r6, r2, r0, asr #15
   208c4:	andeq	r6, r2, r4, ror #10
   208c8:	andeq	r6, r2, r4, lsl r8
   208cc:	andeq	r6, r2, r0, ror #15
   208d0:	andeq	r6, r2, r4, asr r5
   208d4:	andeq	r6, r2, r4, asr #10
   208d8:	andeq	r6, r2, r4, lsl #11
   208dc:	andeq	r6, r2, r4, ror r5
   208e0:	muleq	r2, r4, r5
   208e4:	andeq	r6, r2, r4, ror #13
   208e8:	mov	r0, sl
   208ec:	bl	228d8 <argp_error@@Base+0x1a5c>
   208f0:	ldr	r0, [r6, #12]
   208f4:	and	r0, r0, #8
   208f8:	b	1faac <argp_failure@@Base+0x46c>
   208fc:	mov	r0, sl
   20900:	bl	228d8 <argp_error@@Base+0x1a5c>
   20904:	ldr	ip, [sl, #28]
   20908:	ldr	r2, [sl, #24]
   2090c:	ldr	lr, [sl, #16]
   20910:	sub	ip, ip, r2
   20914:	b	1fa1c <argp_failure@@Base+0x3dc>
   20918:	ldr	r2, [r6, #8]
   2091c:	cmp	r2, #0
   20920:	beq	1fb20 <argp_failure@@Base+0x4e0>
   20924:	ldr	r1, [r6, #12]
   20928:	mov	r0, sl
   2092c:	tst	r1, #1
   20930:	ldrne	r1, [pc, #-136]	; 208b0 <argp_failure@@Base+0x1270>
   20934:	ldreq	r1, [pc, #-136]	; 208b4 <argp_failure@@Base+0x1274>
   20938:	bl	22f84 <argp_error@@Base+0x2108>
   2093c:	b	1fb20 <argp_failure@@Base+0x4e0>
   20940:	mov	r3, #1
   20944:	str	r3, [fp, #-132]	; 0xffffff7c
   20948:	b	1fa9c <argp_failure@@Base+0x45c>
   2094c:	mov	r0, sl
   20950:	bl	228d8 <argp_error@@Base+0x1a5c>
   20954:	b	205dc <argp_failure@@Base+0xf9c>
   20958:	mov	r0, sl
   2095c:	bl	228d8 <argp_error@@Base+0x1a5c>
   20960:	b	1fb64 <argp_failure@@Base+0x524>
   20964:	mov	r1, #1
   20968:	mov	r0, sl
   2096c:	bl	22e84 <argp_error@@Base+0x2008>
   20970:	cmp	r0, #0
   20974:	beq	206b0 <argp_failure@@Base+0x1070>
   20978:	ldr	r2, [sl, #28]
   2097c:	b	206a4 <argp_failure@@Base+0x1064>
   20980:	mov	r1, #1
   20984:	mov	r0, sl
   20988:	bl	22e84 <argp_error@@Base+0x2008>
   2098c:	cmp	r0, #0
   20990:	beq	20690 <argp_failure@@Base+0x1050>
   20994:	ldr	r2, [sl, #28]
   20998:	b	20680 <argp_failure@@Base+0x1040>
   2099c:	mvn	r3, #0
   209a0:	str	r3, [r7, #12]
   209a4:	ldr	r3, [fp, #-108]	; 0xffffff94
   209a8:	ldr	r1, [r3, #4]
   209ac:	cmp	r1, #0
   209b0:	beq	1f8bc <argp_failure@@Base+0x27c>
   209b4:	ldr	r2, [fp, #-112]	; 0xffffff90
   209b8:	mov	r3, #0
   209bc:	str	r3, [r2, #24]
   209c0:	add	r3, r3, #1
   209c4:	cmp	r3, r1
   209c8:	add	r2, r2, #28
   209cc:	bcc	209bc <argp_failure@@Base+0x137c>
   209d0:	ldr	r0, [fp, #-112]	; 0xffffff90
   209d4:	ldr	r3, [pc, #-292]	; 208b8 <argp_failure@@Base+0x1278>
   209d8:	mov	r2, #28
   209dc:	bl	11658 <qsort@plt>
   209e0:	b	1f8bc <argp_failure@@Base+0x27c>
   209e4:	mvn	r3, #0
   209e8:	str	r3, [r7, #12]
   209ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   209f0:	ldr	r3, [r3, #4]
   209f4:	cmp	r3, #0
   209f8:	str	r3, [fp, #-120]	; 0xffffff88
   209fc:	sub	r6, r3, #1
   20a00:	bne	20260 <argp_failure@@Base+0xc20>
   20a04:	b	1f8bc <argp_failure@@Base+0x27c>
   20a08:	mov	r4, r9
   20a0c:	b	20724 <argp_failure@@Base+0x10e4>
   20a10:	mov	r1, #1
   20a14:	mov	r0, sl
   20a18:	bl	22e84 <argp_error@@Base+0x2008>
   20a1c:	cmp	r0, #0
   20a20:	beq	20818 <argp_failure@@Base+0x11d8>
   20a24:	ldr	r3, [sl, #28]
   20a28:	b	20808 <argp_failure@@Base+0x11c8>
   20a2c:	mov	r0, sl
   20a30:	bl	228d8 <argp_error@@Base+0x1a5c>
   20a34:	ldr	r3, [sl, #28]
   20a38:	b	207f4 <argp_failure@@Base+0x11b4>
   20a3c:	mov	r3, r8
   20a40:	mov	r4, r5
   20a44:	b	1fe84 <argp_failure@@Base+0x844>
   20a48:	cmp	r5, r6
   20a4c:	bhi	20bc8 <argp_failure@@Base+0x1588>
   20a50:	ldr	r1, [sl, #32]
   20a54:	add	r2, r3, #3
   20a58:	cmp	r1, r2
   20a5c:	bcs	20a78 <argp_failure@@Base+0x1438>
   20a60:	mov	r1, #3
   20a64:	mov	r0, sl
   20a68:	bl	22e84 <argp_error@@Base+0x2008>
   20a6c:	cmp	r0, #0
   20a70:	beq	20794 <argp_failure@@Base+0x1154>
   20a74:	ldr	r3, [sl, #28]
   20a78:	ldr	r2, [pc, #-452]	; 208bc <argp_failure@@Base+0x127c>
   20a7c:	ldrh	r1, [r2]
   20a80:	ldrb	r2, [r2, #2]
   20a84:	strh	r1, [r3]
   20a88:	strb	r2, [r3, #2]
   20a8c:	ldr	r3, [sl, #28]
   20a90:	add	r3, r3, #3
   20a94:	str	r3, [sl, #28]
   20a98:	b	20794 <argp_failure@@Base+0x1154>
   20a9c:	ldr	r3, [fp, #-108]	; 0xffffff94
   20aa0:	ldr	r8, [r3]
   20aa4:	str	r4, [fp, #-88]	; 0xffffffa8
   20aa8:	str	r4, [fp, #-84]	; 0xffffffac
   20aac:	str	r4, [fp, #-80]	; 0xffffffb0
   20ab0:	b	1f9fc <argp_failure@@Base+0x3bc>
   20ab4:	ldr	r0, [sl, #28]
   20ab8:	mov	r2, r5
   20abc:	mov	r1, r4
   20ac0:	bl	1140c <memcpy@plt>
   20ac4:	ldr	r3, [sl, #28]
   20ac8:	add	r5, r3, r5
   20acc:	str	r5, [sl, #28]
   20ad0:	b	207cc <argp_failure@@Base+0x118c>
   20ad4:	mov	r0, sl
   20ad8:	bl	228d8 <argp_error@@Base+0x1a5c>
   20adc:	ldr	r3, [sl, #28]
   20ae0:	ldr	r2, [sl, #24]
   20ae4:	ldr	r1, [sl, #16]
   20ae8:	ldr	r6, [sl, #20]
   20aec:	ldr	r7, [fp, #-96]	; 0xffffffa0
   20af0:	sub	r2, r3, r2
   20af4:	cmp	r2, r1
   20af8:	bic	r6, r6, r6, asr #31
   20afc:	ldr	r5, [r7, #20]
   20b00:	bls	20760 <argp_failure@@Base+0x1120>
   20b04:	mov	r0, sl
   20b08:	bl	228d8 <argp_error@@Base+0x1a5c>
   20b0c:	ldr	r3, [sl, #28]
   20b10:	ldr	r2, [sl, #24]
   20b14:	ldr	r1, [sl, #16]
   20b18:	sub	r2, r3, r2
   20b1c:	str	r5, [sl, #4]
   20b20:	mov	r5, r7
   20b24:	ldr	r7, [r7, #20]
   20b28:	cmp	r2, r1
   20b2c:	movls	r5, r7
   20b30:	bls	20768 <argp_failure@@Base+0x1128>
   20b34:	mov	r0, sl
   20b38:	bl	228d8 <argp_error@@Base+0x1a5c>
   20b3c:	ldr	r5, [r5, #20]
   20b40:	ldr	r3, [sl, #28]
   20b44:	b	20768 <argp_failure@@Base+0x1128>
   20b48:	str	r5, [sp]
   20b4c:	ldr	r3, [pc, #-660]	; 208c0 <argp_failure@@Base+0x1280>
   20b50:	mov	r1, r2
   20b54:	ldr	r0, [fp, #-104]	; 0xffffff98
   20b58:	bl	1f640 <argp_failure@@Base>
   20b5c:	b	1ffa0 <argp_failure@@Base+0x960>
   20b60:	ldr	r3, [pc, #-676]	; 208c4 <argp_failure@@Base+0x1284>
   20b64:	ldr	r1, [pc, #-676]	; 208c8 <argp_failure@@Base+0x1288>
   20b68:	mov	r2, #0
   20b6c:	ldr	r0, [fp, #-104]	; 0xffffff98
   20b70:	stm	sp, {r1, r3}
   20b74:	mov	r1, r2
   20b78:	ldr	r3, [pc, #-692]	; 208cc <argp_failure@@Base+0x128c>
   20b7c:	bl	1f640 <argp_failure@@Base>
   20b80:	b	1f88c <argp_failure@@Base+0x24c>
   20b84:	ldr	r3, [pc, #-700]	; 208d0 <argp_failure@@Base+0x1290>
   20b88:	b	20b64 <argp_failure@@Base+0x1524>
   20b8c:	mov	r1, #1
   20b90:	mov	r0, sl
   20b94:	bl	22e84 <argp_error@@Base+0x2008>
   20b98:	cmp	r0, #0
   20b9c:	beq	1f92c <argp_failure@@Base+0x2ec>
   20ba0:	ldr	r3, [sl, #28]
   20ba4:	b	1f91c <argp_failure@@Base+0x2dc>
   20ba8:	ldr	r0, [r6, #16]
   20bac:	sub	r2, fp, #76	; 0x4c
   20bb0:	ldr	r1, [r8, #20]
   20bb4:	bl	1e2a0 <_obstack_memory_used@@Base+0x309c>
   20bb8:	b	20818 <argp_failure@@Base+0x11d8>
   20bbc:	ldr	r0, [fp, #-136]	; 0xffffff78
   20bc0:	bl	11460 <funlockfile@plt>
   20bc4:	b	1f98c <argp_failure@@Base+0x34c>
   20bc8:	ldr	r2, [sl, #24]
   20bcc:	ldr	r1, [sl, #16]
   20bd0:	sub	r3, r3, r2
   20bd4:	cmp	r3, r1
   20bd8:	bhi	20d50 <argp_failure@@Base+0x1710>
   20bdc:	ldr	r3, [sl, #20]
   20be0:	mov	r6, #32
   20be4:	cmp	r3, #0
   20be8:	subge	r5, r5, r3
   20bec:	mov	r7, #1
   20bf0:	cmp	r5, #0
   20bf4:	sub	r5, r5, #1
   20bf8:	ble	20794 <argp_failure@@Base+0x1154>
   20bfc:	ldr	r3, [sl, #28]
   20c00:	ldr	r2, [sl, #32]
   20c04:	cmp	r3, r2
   20c08:	bcs	20c34 <argp_failure@@Base+0x15f4>
   20c0c:	add	r2, r3, #1
   20c10:	cmp	r5, #0
   20c14:	str	r2, [sl, #28]
   20c18:	sub	r5, r5, #1
   20c1c:	strb	r6, [r3]
   20c20:	ble	20794 <argp_failure@@Base+0x1154>
   20c24:	ldr	r3, [sl, #28]
   20c28:	ldr	r2, [sl, #32]
   20c2c:	cmp	r3, r2
   20c30:	bcc	20c0c <argp_failure@@Base+0x15cc>
   20c34:	mov	r1, r7
   20c38:	mov	r0, sl
   20c3c:	bl	22e84 <argp_error@@Base+0x2008>
   20c40:	cmp	r0, #0
   20c44:	beq	20bf0 <argp_failure@@Base+0x15b0>
   20c48:	ldr	r3, [sl, #28]
   20c4c:	b	20c0c <argp_failure@@Base+0x15cc>
   20c50:	mov	r1, #1
   20c54:	mov	r0, sl
   20c58:	bl	22e84 <argp_error@@Base+0x2008>
   20c5c:	cmp	r0, #0
   20c60:	beq	20794 <argp_failure@@Base+0x1154>
   20c64:	ldr	r3, [sl, #28]
   20c68:	b	20784 <argp_failure@@Base+0x1144>
   20c6c:	ldr	r4, [pc, #-912]	; 208e4 <argp_failure@@Base+0x12a4>
   20c70:	ldr	r9, [fp, #-112]	; 0xffffff90
   20c74:	ldr	r3, [sl, #28]
   20c78:	ldr	r2, [sl, #32]
   20c7c:	cmp	r3, r2
   20c80:	bcs	20d34 <argp_failure@@Base+0x16f4>
   20c84:	add	r1, r3, #1
   20c88:	mov	r2, #10
   20c8c:	str	r1, [sl, #28]
   20c90:	strb	r2, [r3]
   20c94:	mov	r0, r4
   20c98:	bl	11544 <strlen@plt>
   20c9c:	subs	r6, r0, #0
   20ca0:	beq	20d24 <argp_failure@@Base+0x16e4>
   20ca4:	ldr	r0, [sl, #28]
   20ca8:	ldr	r2, [sl, #32]
   20cac:	add	r3, r0, r6
   20cb0:	cmp	r2, r3
   20cb4:	bcs	20cd0 <argp_failure@@Base+0x1690>
   20cb8:	mov	r1, r6
   20cbc:	mov	r0, sl
   20cc0:	bl	22e84 <argp_error@@Base+0x2008>
   20cc4:	cmp	r0, #0
   20cc8:	beq	20d24 <argp_failure@@Base+0x16e4>
   20ccc:	ldr	r0, [sl, #28]
   20cd0:	mov	r2, r6
   20cd4:	mov	r1, r4
   20cd8:	bl	1140c <memcpy@plt>
   20cdc:	ldr	r3, [sl, #28]
   20ce0:	add	r3, r3, r6
   20ce4:	str	r3, [sl, #28]
   20ce8:	ldr	r2, [sl, #32]
   20cec:	cmp	r2, r3
   20cf0:	bls	20d80 <argp_failure@@Base+0x1740>
   20cf4:	add	r1, r3, #1
   20cf8:	mov	r2, #10
   20cfc:	str	r1, [sl, #28]
   20d00:	strb	r2, [r3]
   20d04:	b	1fd3c <argp_failure@@Base+0x6fc>
   20d08:	mov	r1, #1
   20d0c:	mov	r0, sl
   20d10:	bl	22e84 <argp_error@@Base+0x2008>
   20d14:	cmp	r0, #0
   20d18:	beq	1f9d0 <argp_failure@@Base+0x390>
   20d1c:	ldr	r3, [sl, #28]
   20d20:	b	1f9c0 <argp_failure@@Base+0x380>
   20d24:	ldr	r3, [sl, #28]
   20d28:	b	20ce8 <argp_failure@@Base+0x16a8>
   20d2c:	ldr	r3, [pc, #-1120]	; 208d4 <argp_failure@@Base+0x1294>
   20d30:	b	20b64 <argp_failure@@Base+0x1524>
   20d34:	mov	r1, #1
   20d38:	mov	r0, sl
   20d3c:	bl	22e84 <argp_error@@Base+0x2008>
   20d40:	cmp	r0, #0
   20d44:	beq	20c94 <argp_failure@@Base+0x1654>
   20d48:	ldr	r3, [sl, #28]
   20d4c:	b	20c84 <argp_failure@@Base+0x1644>
   20d50:	mov	r0, sl
   20d54:	bl	228d8 <argp_error@@Base+0x1a5c>
   20d58:	b	20bdc <argp_failure@@Base+0x159c>
   20d5c:	ldr	r3, [pc, #-1164]	; 208d8 <argp_failure@@Base+0x1298>
   20d60:	b	20b64 <argp_failure@@Base+0x1524>
   20d64:	ldr	r3, [pc, #-1168]	; 208dc <argp_failure@@Base+0x129c>
   20d68:	b	20b64 <argp_failure@@Base+0x1524>
   20d6c:	mov	r9, r1
   20d70:	ldr	r4, [pc, #-1172]	; 208e4 <argp_failure@@Base+0x12a4>
   20d74:	b	20c74 <argp_failure@@Base+0x1634>
   20d78:	ldr	r3, [pc, #-1184]	; 208e0 <argp_failure@@Base+0x12a0>
   20d7c:	b	20b64 <argp_failure@@Base+0x1524>
   20d80:	mov	r1, #1
   20d84:	mov	r0, sl
   20d88:	bl	22e84 <argp_error@@Base+0x2008>
   20d8c:	cmp	r0, #0
   20d90:	beq	1fd3c <argp_failure@@Base+0x6fc>
   20d94:	ldr	r3, [sl, #28]
   20d98:	b	20cf4 <argp_failure@@Base+0x16b4>
   20d9c:	ldr	r9, [fp, #-112]	; 0xffffff90
   20da0:	ldr	r4, [pc, #-1220]	; 208e4 <argp_failure@@Base+0x12a4>
   20da4:	b	20c74 <argp_failure@@Base+0x1634>

00020da8 <argp_help@@Base>:
   20da8:	push	{lr}		; (str lr, [sp, #-4]!)
   20dac:	sub	sp, sp, #12
   20db0:	str	r3, [sp]
   20db4:	mov	r3, r2
   20db8:	mov	r2, r1
   20dbc:	mov	r1, #0
   20dc0:	bl	1f848 <argp_failure@@Base+0x208>
   20dc4:	add	sp, sp, #12
   20dc8:	pop	{pc}		; (ldr pc, [sp], #4)

00020dcc <argp_state_help@@Base>:
   20dcc:	push	{r4, r5, lr}
   20dd0:	subs	r4, r0, #0
   20dd4:	sub	sp, sp, #12
   20dd8:	mov	r5, r2
   20ddc:	beq	20e3c <argp_state_help@@Base+0x70>
   20de0:	ldr	r3, [r4, #16]
   20de4:	tst	r3, #2
   20de8:	bne	20e34 <argp_state_help@@Base+0x68>
   20dec:	cmp	r1, #0
   20df0:	beq	20e34 <argp_state_help@@Base+0x68>
   20df4:	tst	r3, #64	; 0x40
   20df8:	ldr	r3, [r4, #40]	; 0x28
   20dfc:	orrne	r5, r5, #128	; 0x80
   20e00:	ldr	r0, [r4]
   20e04:	mov	r2, r1
   20e08:	str	r3, [sp]
   20e0c:	mov	r1, r4
   20e10:	mov	r3, r5
   20e14:	bl	1f848 <argp_failure@@Base+0x208>
   20e18:	ldr	r3, [r4, #16]
   20e1c:	tst	r3, #32
   20e20:	bne	20e34 <argp_state_help@@Base+0x68>
   20e24:	ands	r0, r5, #256	; 0x100
   20e28:	bne	20e68 <argp_state_help@@Base+0x9c>
   20e2c:	tst	r5, #512	; 0x200
   20e30:	bne	20e64 <argp_state_help@@Base+0x98>
   20e34:	add	sp, sp, #12
   20e38:	pop	{r4, r5, pc}
   20e3c:	cmp	r1, #0
   20e40:	beq	20e34 <argp_state_help@@Base+0x68>
   20e44:	ldr	r3, [pc, #40]	; 20e74 <argp_state_help@@Base+0xa8>
   20e48:	mov	r2, r1
   20e4c:	mov	r1, r4
   20e50:	ldr	ip, [r3]
   20e54:	mov	r3, r5
   20e58:	str	ip, [sp]
   20e5c:	bl	1f848 <argp_failure@@Base+0x208>
   20e60:	b	20e24 <argp_state_help@@Base+0x58>
   20e64:	bl	1152c <exit@plt>
   20e68:	ldr	r3, [pc, #8]	; 20e78 <argp_state_help@@Base+0xac>
   20e6c:	ldr	r0, [r3]
   20e70:	bl	1152c <exit@plt>
   20e74:	andeq	r7, r3, r0, asr #22
   20e78:	andeq	r7, r3, r8, lsr fp

00020e7c <argp_error@@Base>:
   20e7c:	push	{r1, r2, r3}
   20e80:	push	{r4, r5, lr}
   20e84:	subs	r5, r0, #0
   20e88:	sub	sp, sp, #16
   20e8c:	beq	20f9c <argp_error@@Base+0x120>
   20e90:	ldr	r3, [r5, #16]
   20e94:	tst	r3, #2
   20e98:	bne	20f8c <argp_error@@Base+0x110>
   20e9c:	ldr	r4, [r5, #44]	; 0x2c
   20ea0:	cmp	r4, #0
   20ea4:	beq	20f8c <argp_error@@Base+0x110>
   20ea8:	mov	r0, r4
   20eac:	bl	11634 <flockfile@plt>
   20eb0:	ldr	r0, [r5, #40]	; 0x28
   20eb4:	add	r3, sp, #32
   20eb8:	str	r3, [sp, #12]
   20ebc:	mov	r1, r4
   20ec0:	bl	11358 <fputs_unlocked@plt>
   20ec4:	ldr	r3, [r4, #20]
   20ec8:	ldr	r2, [r4, #24]
   20ecc:	cmp	r3, r2
   20ed0:	addcc	r1, r3, #1
   20ed4:	movcc	r2, #58	; 0x3a
   20ed8:	strcc	r1, [r4, #20]
   20edc:	strbcc	r2, [r3]
   20ee0:	bcs	20fc8 <argp_error@@Base+0x14c>
   20ee4:	ldr	r3, [r4, #20]
   20ee8:	ldr	r2, [r4, #24]
   20eec:	cmp	r3, r2
   20ef0:	addcc	r1, r3, #1
   20ef4:	movcc	r2, #32
   20ef8:	strcc	r1, [r4, #20]
   20efc:	strbcc	r2, [r3]
   20f00:	bcs	20fe8 <argp_error@@Base+0x16c>
   20f04:	ldr	r1, [sp, #28]
   20f08:	ldr	r2, [sp, #12]
   20f0c:	mov	r0, r4
   20f10:	bl	11604 <vfprintf@plt>
   20f14:	ldr	r3, [r4, #20]
   20f18:	ldr	r2, [r4, #24]
   20f1c:	cmp	r3, r2
   20f20:	addcc	r1, r3, #1
   20f24:	movcc	r2, #10
   20f28:	strcc	r1, [r4, #20]
   20f2c:	strbcc	r2, [r3]
   20f30:	bcs	20fd8 <argp_error@@Base+0x15c>
   20f34:	cmp	r5, #0
   20f38:	beq	20ff8 <argp_error@@Base+0x17c>
   20f3c:	ldr	r3, [r5, #16]
   20f40:	tst	r3, #2
   20f44:	bne	20f84 <argp_error@@Base+0x108>
   20f48:	ldr	r2, [r5, #40]	; 0x28
   20f4c:	tst	r3, #64	; 0x40
   20f50:	moveq	r3, #260	; 0x104
   20f54:	movne	r3, #388	; 0x184
   20f58:	ldr	r0, [r5]
   20f5c:	mov	r1, r5
   20f60:	str	r2, [sp]
   20f64:	mov	r2, r4
   20f68:	bl	1f848 <argp_failure@@Base+0x208>
   20f6c:	ldr	r3, [r5, #16]
   20f70:	tst	r3, #32
   20f74:	bne	20f84 <argp_error@@Base+0x108>
   20f78:	ldr	r3, [pc, #156]	; 2101c <argp_error@@Base+0x1a0>
   20f7c:	ldr	r0, [r3]
   20f80:	bl	1152c <exit@plt>
   20f84:	mov	r0, r4
   20f88:	bl	11460 <funlockfile@plt>
   20f8c:	add	sp, sp, #16
   20f90:	pop	{r4, r5, lr}
   20f94:	add	sp, sp, #12
   20f98:	bx	lr
   20f9c:	ldr	r3, [pc, #124]	; 21020 <argp_error@@Base+0x1a4>
   20fa0:	ldr	r4, [r3]
   20fa4:	cmp	r4, #0
   20fa8:	beq	20f8c <argp_error@@Base+0x110>
   20fac:	mov	r0, r4
   20fb0:	bl	11634 <flockfile@plt>
   20fb4:	ldr	r2, [pc, #104]	; 21024 <argp_error@@Base+0x1a8>
   20fb8:	add	r3, sp, #32
   20fbc:	str	r3, [sp, #12]
   20fc0:	ldr	r0, [r2]
   20fc4:	b	20ebc <argp_error@@Base+0x40>
   20fc8:	mov	r1, #58	; 0x3a
   20fcc:	mov	r0, r4
   20fd0:	bl	115e0 <__overflow@plt>
   20fd4:	b	20ee4 <argp_error@@Base+0x68>
   20fd8:	mov	r1, #10
   20fdc:	mov	r0, r4
   20fe0:	bl	115e0 <__overflow@plt>
   20fe4:	b	20f34 <argp_error@@Base+0xb8>
   20fe8:	mov	r1, #32
   20fec:	mov	r0, r4
   20ff0:	bl	115e0 <__overflow@plt>
   20ff4:	b	20f04 <argp_error@@Base+0x88>
   20ff8:	ldr	r1, [pc, #36]	; 21024 <argp_error@@Base+0x1a8>
   20ffc:	mov	r2, r4
   21000:	mov	r3, #260	; 0x104
   21004:	ldr	r0, [r1]
   21008:	mov	r1, r5
   2100c:	str	r0, [sp]
   21010:	mov	r0, r5
   21014:	bl	1f848 <argp_failure@@Base+0x208>
   21018:	b	20f78 <argp_error@@Base+0xfc>
   2101c:	andeq	r7, r3, r8, lsr fp
   21020:	andeq	r7, r3, r8, asr #22
   21024:	andeq	r7, r3, r0, asr #22
   21028:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2102c:	ldr	r4, [r1, #32]
   21030:	ldr	r8, [r1, #28]
   21034:	ldr	r7, [r1]
   21038:	add	r6, r0, r4, lsl #2
   2103c:	mov	r2, r8
   21040:	mov	r5, r7
   21044:	cmp	r5, r4
   21048:	movle	r3, #0
   2104c:	movgt	r3, #1
   21050:	cmp	r2, r4
   21054:	movge	r3, #0
   21058:	cmp	r3, #0
   2105c:	beq	210d0 <argp_error@@Base+0x254>
   21060:	sub	r3, r5, r4
   21064:	sub	sl, r4, r2
   21068:	cmp	r3, sl
   2106c:	ble	210a0 <argp_error@@Base+0x224>
   21070:	sub	r5, r5, sl
   21074:	add	sl, sl, r2
   21078:	add	ip, r0, r5, lsl #2
   2107c:	add	sl, r0, sl, lsl #2
   21080:	add	r3, r0, r2, lsl #2
   21084:	ldr	r9, [ip]
   21088:	ldr	lr, [r3]
   2108c:	str	r9, [r3], #4
   21090:	cmp	r3, sl
   21094:	str	lr, [ip], #4
   21098:	bne	21084 <argp_error@@Base+0x208>
   2109c:	b	21044 <argp_error@@Base+0x1c8>
   210a0:	add	sl, r3, r2
   210a4:	add	r3, r0, r2, lsl #2
   210a8:	add	r9, r0, sl, lsl #2
   210ac:	mov	r2, r6
   210b0:	ldr	lr, [r2]
   210b4:	ldr	ip, [r3]
   210b8:	str	lr, [r3], #4
   210bc:	cmp	r9, r3
   210c0:	str	ip, [r2], #4
   210c4:	bne	210b0 <argp_error@@Base+0x234>
   210c8:	mov	r2, sl
   210cc:	b	21044 <argp_error@@Base+0x1c8>
   210d0:	sub	r4, r7, r4
   210d4:	add	r8, r4, r8
   210d8:	str	r8, [r1, #28]
   210dc:	str	r7, [r1, #32]
   210e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   210e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210e8:	sub	sp, sp, #52	; 0x34
   210ec:	str	r1, [sp, #24]
   210f0:	ldr	r1, [sp, #96]	; 0x60
   210f4:	str	r0, [sp, #28]
   210f8:	str	r2, [sp, #32]
   210fc:	ldr	r8, [r1, #20]
   21100:	str	r3, [sp, #12]
   21104:	mov	r7, r8
   21108:	ldrb	r5, [r8]
   2110c:	cmp	r5, #61	; 0x3d
   21110:	cmpne	r5, #0
   21114:	movne	r5, #1
   21118:	moveq	r5, #0
   2111c:	beq	21138 <argp_error@@Base+0x2bc>
   21120:	ldrb	r3, [r7, #1]!
   21124:	cmp	r3, #0
   21128:	cmpne	r3, #61	; 0x3d
   2112c:	bne	21120 <argp_error@@Base+0x2a4>
   21130:	ldr	r3, [sp, #12]
   21134:	sub	r5, r7, r8
   21138:	ldr	sl, [r3]
   2113c:	cmp	sl, #0
   21140:	beq	21518 <argp_error@@Base+0x69c>
   21144:	mov	fp, r3
   21148:	mov	r4, sl
   2114c:	mov	r6, #0
   21150:	str	r3, [sp, #20]
   21154:	mov	r2, r5
   21158:	mov	r1, r8
   2115c:	mov	r0, r4
   21160:	bl	116a0 <strncmp@plt>
   21164:	mov	r9, fp
   21168:	cmp	r0, #0
   2116c:	mov	r0, r4
   21170:	bne	21180 <argp_error@@Base+0x304>
   21174:	bl	11544 <strlen@plt>
   21178:	cmp	r0, r5
   2117c:	beq	21240 <argp_error@@Base+0x3c4>
   21180:	ldr	r4, [fp, #16]!
   21184:	add	r6, r6, #1
   21188:	cmp	r4, #0
   2118c:	bne	21154 <argp_error@@Base+0x2d8>
   21190:	ldr	r3, [sp, #100]	; 0x64
   21194:	cmp	r3, #0
   21198:	ldr	r3, [sp, #92]	; 0x5c
   2119c:	beq	212e4 <argp_error@@Base+0x468>
   211a0:	cmp	r3, #0
   211a4:	bne	213fc <argp_error@@Base+0x580>
   211a8:	mov	fp, r3
   211ac:	mov	r0, sl
   211b0:	ldr	r4, [sp, #12]
   211b4:	ldr	sl, [sp, #96]	; 0x60
   211b8:	mov	r9, fp
   211bc:	mov	r1, r8
   211c0:	str	r3, [sp, #16]
   211c4:	str	r3, [sp, #44]	; 0x2c
   211c8:	mvn	r3, #0
   211cc:	str	r3, [sp, #40]	; 0x28
   211d0:	str	fp, [sp, #36]	; 0x24
   211d4:	mov	r2, r5
   211d8:	bl	116a0 <strncmp@plt>
   211dc:	cmp	r0, #0
   211e0:	bne	2121c <argp_error@@Base+0x3a0>
   211e4:	cmp	r9, #0
   211e8:	beq	21750 <argp_error@@Base+0x8d4>
   211ec:	ldr	r2, [r9, #4]
   211f0:	ldr	r3, [r4, #4]
   211f4:	cmp	r2, r3
   211f8:	beq	217ac <argp_error@@Base+0x930>
   211fc:	ldr	r3, [sp, #16]
   21200:	cmp	r3, #0
   21204:	bne	2121c <argp_error@@Base+0x3a0>
   21208:	ldr	r3, [sp, #36]	; 0x24
   2120c:	cmp	r3, #0
   21210:	beq	21688 <argp_error@@Base+0x80c>
   21214:	mov	r2, #1
   21218:	strb	r2, [r3, fp]
   2121c:	ldr	r0, [r4, #16]!
   21220:	add	fp, fp, #1
   21224:	cmp	r0, #0
   21228:	beq	21358 <argp_error@@Base+0x4dc>
   2122c:	ldr	r1, [sl, #20]
   21230:	b	211d4 <argp_error@@Base+0x358>
   21234:	cmp	r9, #0
   21238:	beq	21518 <argp_error@@Base+0x69c>
   2123c:	ldr	r6, [sp, #40]	; 0x28
   21240:	ldr	r3, [sp, #96]	; 0x60
   21244:	ldr	r0, [sp, #96]	; 0x60
   21248:	mov	r1, #0
   2124c:	ldr	r2, [r3]
   21250:	str	r1, [r0, #20]
   21254:	add	r3, r2, #1
   21258:	str	r3, [r0]
   2125c:	ldrb	r1, [r7]
   21260:	cmp	r1, #0
   21264:	bne	212a4 <argp_error@@Base+0x428>
   21268:	ldr	r1, [r9, #4]
   2126c:	cmp	r1, #1
   21270:	beq	21588 <argp_error@@Base+0x70c>
   21274:	ldr	r3, [sp, #88]	; 0x58
   21278:	ldr	r2, [r9, #8]
   2127c:	cmp	r3, #0
   21280:	strne	r6, [r3]
   21284:	cmp	r2, #0
   21288:	movne	r3, #0
   2128c:	ldreq	r3, [r9, #12]
   21290:	ldrne	r1, [r9, #12]
   21294:	strne	r1, [r2]
   21298:	mov	r0, r3
   2129c:	add	sp, sp, #52	; 0x34
   212a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212a4:	ldr	r3, [r9, #4]
   212a8:	cmp	r3, #0
   212ac:	movne	r3, r0
   212b0:	addne	r7, r7, #1
   212b4:	strne	r7, [r3, #12]
   212b8:	bne	21274 <argp_error@@Base+0x3f8>
   212bc:	ldr	r3, [sp, #100]	; 0x64
   212c0:	cmp	r3, #0
   212c4:	bne	214e0 <argp_error@@Base+0x664>
   212c8:	ldr	r1, [sp, #96]	; 0x60
   212cc:	ldr	r2, [r9, #12]
   212d0:	mov	r3, #63	; 0x3f
   212d4:	str	r2, [r1, #8]
   212d8:	mov	r0, r3
   212dc:	add	sp, sp, #52	; 0x34
   212e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212e4:	cmp	r3, #0
   212e8:	bne	21478 <argp_error@@Base+0x5fc>
   212ec:	mov	fp, r3
   212f0:	ldr	r4, [sp, #12]
   212f4:	mov	r9, fp
   212f8:	mov	r0, sl
   212fc:	str	r3, [sp, #16]
   21300:	mvn	r3, #0
   21304:	str	r3, [sp, #40]	; 0x28
   21308:	mov	r2, r5
   2130c:	mov	r1, r8
   21310:	bl	116a0 <strncmp@plt>
   21314:	cmp	r0, #0
   21318:	bne	2133c <argp_error@@Base+0x4c0>
   2131c:	cmp	r9, #0
   21320:	beq	21744 <argp_error@@Base+0x8c8>
   21324:	ldr	r2, [r9, #4]
   21328:	ldr	r3, [r4, #4]
   2132c:	cmp	r2, r3
   21330:	beq	21780 <argp_error@@Base+0x904>
   21334:	mov	r3, #1
   21338:	str	r3, [sp, #16]
   2133c:	ldr	r0, [r4, #16]!
   21340:	add	fp, fp, #1
   21344:	cmp	r0, #0
   21348:	bne	21308 <argp_error@@Base+0x48c>
   2134c:	ldr	r3, [sp, #92]	; 0x5c
   21350:	str	r0, [sp, #36]	; 0x24
   21354:	str	r3, [sp, #44]	; 0x2c
   21358:	ldr	r2, [sp, #36]	; 0x24
   2135c:	ldr	r3, [sp, #16]
   21360:	cmp	r3, #0
   21364:	cmpeq	r2, #0
   21368:	beq	21234 <argp_error@@Base+0x3b8>
   2136c:	ldr	r2, [sp, #100]	; 0x64
   21370:	cmp	r2, #0
   21374:	beq	215d8 <argp_error@@Base+0x75c>
   21378:	cmp	r3, #0
   2137c:	bne	215b0 <argp_error@@Base+0x734>
   21380:	ldr	r5, [pc, #1108]	; 217dc <argp_error@@Base+0x960>
   21384:	ldr	r3, [sp, #36]	; 0x24
   21388:	ldr	r7, [pc, #1104]	; 217e0 <argp_error@@Base+0x964>
   2138c:	ldr	r0, [r5]
   21390:	add	r6, r3, r6
   21394:	mov	r4, r3
   21398:	bl	11634 <flockfile@plt>
   2139c:	ldr	r3, [sp, #24]
   213a0:	ldr	r0, [r5]
   213a4:	ldr	r1, [pc, #1080]	; 217e4 <argp_error@@Base+0x968>
   213a8:	ldr	r2, [r3]
   213ac:	ldr	r3, [sp, #96]	; 0x60
   213b0:	ldr	r3, [r3, #20]
   213b4:	str	r3, [sp]
   213b8:	ldr	r3, [sp, #104]	; 0x68
   213bc:	bl	1155c <fprintf@plt>
   213c0:	ldr	r8, [sp, #16]
   213c4:	ldr	r9, [sp, #12]
   213c8:	b	213d8 <argp_error@@Base+0x55c>
   213cc:	cmp	r4, r6
   213d0:	add	r8, r8, #1
   213d4:	beq	21768 <argp_error@@Base+0x8ec>
   213d8:	ldrb	r3, [r4], #1
   213dc:	cmp	r3, #0
   213e0:	beq	213cc <argp_error@@Base+0x550>
   213e4:	ldr	r3, [r9, r8, lsl #4]
   213e8:	ldr	r2, [sp, #104]	; 0x68
   213ec:	mov	r1, r7
   213f0:	ldr	r0, [r5]
   213f4:	bl	1155c <fprintf@plt>
   213f8:	b	213cc <argp_error@@Base+0x550>
   213fc:	mov	r9, r4
   21400:	str	r4, [sp, #16]
   21404:	str	r4, [sp, #44]	; 0x2c
   21408:	str	r4, [sp, #36]	; 0x24
   2140c:	mov	r1, r8
   21410:	mov	r0, sl
   21414:	mov	r8, r4
   21418:	ldr	sl, [sp, #20]
   2141c:	ldr	r4, [sp, #96]	; 0x60
   21420:	mov	fp, #1
   21424:	mvn	r3, #0
   21428:	str	r3, [sp, #40]	; 0x28
   2142c:	mov	r2, r5
   21430:	bl	116a0 <strncmp@plt>
   21434:	cmp	r0, #0
   21438:	bne	21460 <argp_error@@Base+0x5e4>
   2143c:	cmp	r9, #0
   21440:	beq	2175c <argp_error@@Base+0x8e0>
   21444:	ldr	r3, [sp, #16]
   21448:	cmp	r3, #0
   2144c:	bne	21460 <argp_error@@Base+0x5e4>
   21450:	ldr	r3, [sp, #36]	; 0x24
   21454:	cmp	r3, #0
   21458:	beq	216cc <argp_error@@Base+0x850>
   2145c:	strb	fp, [r3, r8]
   21460:	ldr	r0, [sl, #16]!
   21464:	add	r8, r8, #1
   21468:	cmp	r0, #0
   2146c:	beq	21358 <argp_error@@Base+0x4dc>
   21470:	ldr	r1, [r4, #20]
   21474:	b	2142c <argp_error@@Base+0x5b0>
   21478:	ldr	r3, [sp, #100]	; 0x64
   2147c:	mov	r0, sl
   21480:	mov	r4, r3
   21484:	ldr	sl, [sp, #20]
   21488:	mov	r9, r4
   2148c:	str	r3, [sp, #16]
   21490:	mvn	r3, #0
   21494:	str	r3, [sp, #40]	; 0x28
   21498:	mov	r2, r5
   2149c:	mov	r1, r8
   214a0:	bl	116a0 <strncmp@plt>
   214a4:	cmp	r0, #0
   214a8:	bne	214c0 <argp_error@@Base+0x644>
   214ac:	cmp	r9, #0
   214b0:	moveq	r9, sl
   214b4:	movne	r3, #1
   214b8:	strne	r3, [sp, #16]
   214bc:	streq	r4, [sp, #40]	; 0x28
   214c0:	ldr	r0, [sl, #16]!
   214c4:	add	r4, r4, #1
   214c8:	cmp	r0, #0
   214cc:	bne	21498 <argp_error@@Base+0x61c>
   214d0:	ldr	r3, [sp, #100]	; 0x64
   214d4:	str	r0, [sp, #36]	; 0x24
   214d8:	str	r3, [sp, #44]	; 0x2c
   214dc:	b	21358 <argp_error@@Base+0x4dc>
   214e0:	ldr	r3, [sp, #24]
   214e4:	ldr	r1, [pc, #752]	; 217dc <argp_error@@Base+0x960>
   214e8:	ldr	r2, [r3]
   214ec:	ldr	r3, [r9]
   214f0:	ldr	r0, [r1]
   214f4:	str	r3, [sp]
   214f8:	ldr	r1, [pc, #744]	; 217e8 <argp_error@@Base+0x96c>
   214fc:	ldr	r3, [sp, #104]	; 0x68
   21500:	bl	1155c <fprintf@plt>
   21504:	ldr	r1, [sp, #96]	; 0x60
   21508:	ldr	r2, [r9, #12]
   2150c:	mov	r3, #63	; 0x3f
   21510:	str	r2, [r1, #8]
   21514:	b	212d8 <argp_error@@Base+0x45c>
   21518:	ldr	r3, [sp, #92]	; 0x5c
   2151c:	cmp	r3, #0
   21520:	bne	21704 <argp_error@@Base+0x888>
   21524:	ldr	r3, [sp, #100]	; 0x64
   21528:	cmp	r3, #0
   2152c:	beq	21558 <argp_error@@Base+0x6dc>
   21530:	ldr	r3, [sp, #24]
   21534:	ldr	r1, [pc, #672]	; 217dc <argp_error@@Base+0x960>
   21538:	ldr	r2, [r3]
   2153c:	ldr	r3, [sp, #96]	; 0x60
   21540:	ldr	r0, [r1]
   21544:	ldr	r1, [pc, #672]	; 217ec <argp_error@@Base+0x970>
   21548:	ldr	r3, [r3, #20]
   2154c:	str	r3, [sp]
   21550:	ldr	r3, [sp, #104]	; 0x68
   21554:	bl	1155c <fprintf@plt>
   21558:	ldr	r3, [sp, #96]	; 0x60
   2155c:	ldr	r1, [sp, #96]	; 0x60
   21560:	mov	r2, #0
   21564:	ldr	r3, [r3]
   21568:	str	r2, [r1, #20]
   2156c:	add	r3, r3, #1
   21570:	str	r3, [r1]
   21574:	mov	r3, #63	; 0x3f
   21578:	mov	r0, r3
   2157c:	str	r2, [r1, #8]
   21580:	add	sp, sp, #52	; 0x34
   21584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21588:	ldr	r1, [sp, #28]
   2158c:	cmp	r3, r1
   21590:	bge	21630 <argp_error@@Base+0x7b4>
   21594:	ldr	r1, [sp, #24]
   21598:	add	r2, r2, #2
   2159c:	ldr	r3, [r1, r3, lsl #2]
   215a0:	ldr	r1, [sp, #96]	; 0x60
   215a4:	str	r3, [r1, #12]
   215a8:	str	r2, [r1]
   215ac:	b	21274 <argp_error@@Base+0x3f8>
   215b0:	ldr	r3, [sp, #24]
   215b4:	ldr	r1, [pc, #544]	; 217dc <argp_error@@Base+0x960>
   215b8:	ldr	r2, [r3]
   215bc:	ldr	r3, [sp, #96]	; 0x60
   215c0:	ldr	r0, [r1]
   215c4:	ldr	r1, [pc, #548]	; 217f0 <argp_error@@Base+0x974>
   215c8:	ldr	r3, [r3, #20]
   215cc:	str	r3, [sp]
   215d0:	ldr	r3, [sp, #104]	; 0x68
   215d4:	bl	1155c <fprintf@plt>
   215d8:	ldr	r3, [sp, #44]	; 0x2c
   215dc:	cmp	r3, #0
   215e0:	beq	215ec <argp_error@@Base+0x770>
   215e4:	ldr	r0, [sp, #36]	; 0x24
   215e8:	bl	1acdc <argp_parse@@Base+0xf7c>
   215ec:	ldr	r3, [sp, #96]	; 0x60
   215f0:	ldr	r4, [r3, #20]
   215f4:	mov	r0, r4
   215f8:	bl	11544 <strlen@plt>
   215fc:	ldr	r3, [sp, #96]	; 0x60
   21600:	ldr	r1, [sp, #96]	; 0x60
   21604:	mov	r2, #0
   21608:	ldr	r3, [r3]
   2160c:	str	r2, [r1, #8]
   21610:	add	r3, r3, #1
   21614:	str	r3, [r1]
   21618:	mov	r3, #63	; 0x3f
   2161c:	add	r0, r4, r0
   21620:	str	r0, [r1, #20]
   21624:	mov	r0, r3
   21628:	add	sp, sp, #52	; 0x34
   2162c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21630:	ldr	r3, [sp, #100]	; 0x64
   21634:	cmp	r3, #0
   21638:	bne	21660 <argp_error@@Base+0x7e4>
   2163c:	ldr	r2, [sp, #96]	; 0x60
   21640:	ldr	r3, [r9, #12]
   21644:	str	r3, [r2, #8]
   21648:	ldr	r3, [sp, #32]
   2164c:	ldrb	r3, [r3]
   21650:	cmp	r3, #58	; 0x3a
   21654:	movne	r3, #63	; 0x3f
   21658:	moveq	r3, #58	; 0x3a
   2165c:	b	21298 <argp_error@@Base+0x41c>
   21660:	ldr	r3, [sp, #24]
   21664:	ldr	r1, [pc, #368]	; 217dc <argp_error@@Base+0x960>
   21668:	ldr	r2, [r3]
   2166c:	ldr	r3, [r9]
   21670:	ldr	r0, [r1]
   21674:	str	r3, [sp]
   21678:	ldr	r1, [pc, #372]	; 217f4 <argp_error@@Base+0x978>
   2167c:	ldr	r3, [sp, #104]	; 0x68
   21680:	bl	1155c <fprintf@plt>
   21684:	b	2163c <argp_error@@Base+0x7c0>
   21688:	mov	r0, r6
   2168c:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   21690:	subs	r3, r0, #0
   21694:	mov	r8, r3
   21698:	str	r3, [sp, #36]	; 0x24
   2169c:	mov	r3, #1
   216a0:	streq	r3, [sp, #16]
   216a4:	beq	2121c <argp_error@@Base+0x3a0>
   216a8:	mov	r2, r6
   216ac:	mov	r1, #0
   216b0:	str	r3, [sp, #44]	; 0x2c
   216b4:	bl	11598 <memset@plt>
   216b8:	ldr	r2, [sp, #40]	; 0x28
   216bc:	mov	r1, #1
   216c0:	ldr	r3, [sp, #36]	; 0x24
   216c4:	strb	r1, [r8, r2]
   216c8:	b	21214 <argp_error@@Base+0x398>
   216cc:	mov	r0, r6
   216d0:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   216d4:	subs	r3, r0, #0
   216d8:	str	r3, [sp, #36]	; 0x24
   216dc:	beq	217d0 <argp_error@@Base+0x954>
   216e0:	mov	r2, r6
   216e4:	mov	r1, #0
   216e8:	bl	11598 <memset@plt>
   216ec:	mov	r2, #1
   216f0:	str	r2, [sp, #44]	; 0x2c
   216f4:	ldr	r3, [sp, #36]	; 0x24
   216f8:	ldr	r2, [sp, #40]	; 0x28
   216fc:	strb	fp, [r3, r2]
   21700:	b	2145c <argp_error@@Base+0x5e0>
   21704:	ldr	r3, [sp, #96]	; 0x60
   21708:	ldr	r2, [sp, #24]
   2170c:	ldr	r3, [r3]
   21710:	ldr	r3, [r2, r3, lsl #2]
   21714:	ldrb	r3, [r3, #1]
   21718:	cmp	r3, #45	; 0x2d
   2171c:	beq	21524 <argp_error@@Base+0x6a8>
   21720:	ldr	r3, [sp, #96]	; 0x60
   21724:	ldr	r0, [sp, #32]
   21728:	ldr	r3, [r3, #20]
   2172c:	ldrb	r1, [r3]
   21730:	bl	11550 <strchr@plt>
   21734:	cmp	r0, #0
   21738:	beq	21524 <argp_error@@Base+0x6a8>
   2173c:	mvn	r3, #0
   21740:	b	21298 <argp_error@@Base+0x41c>
   21744:	str	fp, [sp, #40]	; 0x28
   21748:	mov	r9, r4
   2174c:	b	2133c <argp_error@@Base+0x4c0>
   21750:	str	fp, [sp, #40]	; 0x28
   21754:	mov	r9, r4
   21758:	b	2121c <argp_error@@Base+0x3a0>
   2175c:	str	r8, [sp, #40]	; 0x28
   21760:	mov	r9, sl
   21764:	b	21460 <argp_error@@Base+0x5e4>
   21768:	ldr	r1, [r5]
   2176c:	mov	r0, #10
   21770:	bl	11610 <fputc@plt>
   21774:	ldr	r0, [r5]
   21778:	bl	11460 <funlockfile@plt>
   2177c:	b	215d8 <argp_error@@Base+0x75c>
   21780:	ldr	r2, [r9, #8]
   21784:	ldr	r3, [r4, #8]
   21788:	cmp	r2, r3
   2178c:	bne	21334 <argp_error@@Base+0x4b8>
   21790:	ldr	r2, [r9, #12]
   21794:	ldr	r3, [r4, #12]
   21798:	ldr	r1, [sp, #16]
   2179c:	cmp	r2, r3
   217a0:	movne	r1, #1
   217a4:	str	r1, [sp, #16]
   217a8:	b	2133c <argp_error@@Base+0x4c0>
   217ac:	ldr	r2, [r9, #8]
   217b0:	ldr	r3, [r4, #8]
   217b4:	cmp	r2, r3
   217b8:	bne	211fc <argp_error@@Base+0x380>
   217bc:	ldr	r2, [r9, #12]
   217c0:	ldr	r3, [r4, #12]
   217c4:	cmp	r2, r3
   217c8:	bne	211fc <argp_error@@Base+0x380>
   217cc:	b	2121c <argp_error@@Base+0x3a0>
   217d0:	mov	r3, #1
   217d4:	str	r3, [sp, #16]
   217d8:	b	21460 <argp_error@@Base+0x5e4>
   217dc:	andeq	r7, r3, r8, asr #22
   217e0:	andeq	r6, r2, r0, lsl #18
   217e4:	ldrdeq	r6, [r2], -r0
   217e8:	andeq	r6, r2, r8, lsr #18
   217ec:	andeq	r6, r2, r8, lsl #18
   217f0:			; <UNDEFINED> instruction: 0x000268b0
   217f4:	andeq	r6, r2, r8, asr r9
   217f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217fc:	sub	sp, sp, #36	; 0x24
   21800:	subs	r6, r0, #0
   21804:	ldr	r4, [sp, #80]	; 0x50
   21808:	ldr	r8, [r4, #4]
   2180c:	ble	219e0 <argp_error@@Base+0xb64>
   21810:	mov	sl, r3
   21814:	ldr	r3, [r4]
   21818:	mov	r7, r2
   2181c:	mov	r2, #0
   21820:	cmp	r3, r2
   21824:	mov	r9, r1
   21828:	str	r2, [r4, #12]
   2182c:	beq	21a68 <argp_error@@Base+0xbec>
   21830:	ldr	r2, [r4, #16]
   21834:	cmp	r2, #0
   21838:	bne	219ec <argp_error@@Base+0xb70>
   2183c:	mov	r5, #0
   21840:	str	r3, [r4, #32]
   21844:	str	r3, [r4, #28]
   21848:	str	r5, [r4, #20]
   2184c:	ldrb	r3, [r7]
   21850:	cmp	r3, #45	; 0x2d
   21854:	moveq	r3, #2
   21858:	addeq	r7, r7, #1
   2185c:	streq	r3, [r4, #24]
   21860:	beq	21888 <argp_error@@Base+0xa0c>
   21864:	cmp	r3, #43	; 0x2b
   21868:	streq	r5, [r4, #24]
   2186c:	addeq	r7, r7, #1
   21870:	beq	21888 <argp_error@@Base+0xa0c>
   21874:	ldr	r3, [sp, #84]	; 0x54
   21878:	cmp	r3, #0
   2187c:	beq	21af8 <argp_error@@Base+0xc7c>
   21880:	mov	r3, #0
   21884:	str	r3, [r4, #24]
   21888:	mov	r3, #1
   2188c:	str	r3, [r4, #16]
   21890:	ldrb	r3, [r7]
   21894:	cmp	r3, #58	; 0x3a
   21898:	moveq	r8, #0
   2189c:	cmp	r5, #0
   218a0:	beq	21948 <argp_error@@Base+0xacc>
   218a4:	ldrb	r3, [r5]
   218a8:	cmp	r3, #0
   218ac:	beq	21948 <argp_error@@Base+0xacc>
   218b0:	add	r3, r5, #1
   218b4:	str	r3, [r4, #20]
   218b8:	ldrb	fp, [r5]
   218bc:	mov	r0, r7
   218c0:	str	r3, [sp, #28]
   218c4:	mov	r1, fp
   218c8:	bl	11550 <strchr@plt>
   218cc:	ldrb	r1, [r5, #1]
   218d0:	ldr	r3, [sp, #28]
   218d4:	cmp	r1, #0
   218d8:	ldreq	r1, [r4]
   218dc:	addeq	r1, r1, #1
   218e0:	streq	r1, [r4]
   218e4:	sub	r1, fp, #58	; 0x3a
   218e8:	mov	r2, r0
   218ec:	cmp	r2, #0
   218f0:	cmpne	r1, #1
   218f4:	mov	r0, fp
   218f8:	bls	21a38 <argp_error@@Base+0xbbc>
   218fc:	ldrb	r1, [r2]
   21900:	cmp	r1, #87	; 0x57
   21904:	ldrb	r1, [r2, #1]
   21908:	beq	21b84 <argp_error@@Base+0xd08>
   2190c:	cmp	r1, #58	; 0x3a
   21910:	bne	21a30 <argp_error@@Base+0xbb4>
   21914:	ldrb	r2, [r2, #2]
   21918:	cmp	r2, #58	; 0x3a
   2191c:	ldrb	r2, [r5, #1]
   21920:	beq	21c7c <argp_error@@Base+0xe00>
   21924:	cmp	r2, #0
   21928:	beq	21c5c <argp_error@@Base+0xde0>
   2192c:	ldr	r2, [r4]
   21930:	str	r3, [r4, #12]
   21934:	add	r3, r2, #1
   21938:	str	r3, [r4]
   2193c:	mov	r3, #0
   21940:	str	r3, [r4, #20]
   21944:	b	21a30 <argp_error@@Base+0xbb4>
   21948:	ldr	fp, [r4]
   2194c:	ldr	r3, [r4, #32]
   21950:	ldr	r2, [r4, #28]
   21954:	cmp	r3, fp
   21958:	ldr	r3, [r4, #24]
   2195c:	strgt	fp, [r4, #32]
   21960:	cmp	fp, r2
   21964:	movlt	r2, fp
   21968:	strlt	fp, [r4, #28]
   2196c:	cmp	r3, #1
   21970:	beq	21a78 <argp_error@@Base+0xbfc>
   21974:	cmp	r6, fp
   21978:	beq	21ae0 <argp_error@@Base+0xc64>
   2197c:	ldr	r3, [pc, #972]	; 21d50 <argp_error@@Base+0xed4>
   21980:	ldr	r5, [r9, fp, lsl #2]
   21984:	mov	r1, r3
   21988:	mov	r0, r5
   2198c:	str	r3, [sp, #28]
   21990:	bl	113a0 <strcmp@plt>
   21994:	ldr	r3, [sp, #28]
   21998:	cmp	r0, #0
   2199c:	bne	21a08 <argp_error@@Base+0xb8c>
   219a0:	ldr	r3, [r4, #28]
   219a4:	ldr	r2, [r4, #32]
   219a8:	add	fp, fp, #1
   219ac:	cmp	r3, r2
   219b0:	str	fp, [r4]
   219b4:	beq	21b78 <argp_error@@Base+0xcfc>
   219b8:	cmp	fp, r2
   219bc:	beq	219d0 <argp_error@@Base+0xb54>
   219c0:	mov	r0, r9
   219c4:	mov	r1, r4
   219c8:	bl	21028 <argp_error@@Base+0x1ac>
   219cc:	ldr	r3, [r4, #28]
   219d0:	cmp	r6, r3
   219d4:	str	r6, [r4]
   219d8:	str	r6, [r4, #32]
   219dc:	strne	r3, [r4]
   219e0:	mvn	r0, #0
   219e4:	add	sp, sp, #36	; 0x24
   219e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219ec:	ldrb	r3, [r7]
   219f0:	ldr	r5, [r4, #20]
   219f4:	sub	r2, r3, #43	; 0x2b
   219f8:	tst	r2, #253	; 0xfd
   219fc:	ldrbeq	r3, [r7, #1]
   21a00:	addeq	r7, r7, #1
   21a04:	b	21894 <argp_error@@Base+0xa18>
   21a08:	ldrb	r2, [r5]
   21a0c:	cmp	r2, #45	; 0x2d
   21a10:	beq	21b2c <argp_error@@Base+0xcb0>
   21a14:	ldr	r3, [r4, #24]
   21a18:	cmp	r3, #0
   21a1c:	beq	219e0 <argp_error@@Base+0xb64>
   21a20:	mov	r0, #1
   21a24:	add	fp, fp, #1
   21a28:	str	fp, [r4]
   21a2c:	str	r5, [r4, #12]
   21a30:	add	sp, sp, #36	; 0x24
   21a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a38:	cmp	r8, #0
   21a3c:	beq	21a58 <argp_error@@Base+0xbdc>
   21a40:	ldr	r1, [pc, #780]	; 21d54 <argp_error@@Base+0xed8>
   21a44:	ldr	r2, [r9]
   21a48:	mov	r3, fp
   21a4c:	ldr	r0, [r1]
   21a50:	ldr	r1, [pc, #768]	; 21d58 <argp_error@@Base+0xedc>
   21a54:	bl	1155c <fprintf@plt>
   21a58:	mov	r0, #63	; 0x3f
   21a5c:	str	fp, [r4, #8]
   21a60:	add	sp, sp, #36	; 0x24
   21a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a68:	mov	r2, #1
   21a6c:	mov	r3, r2
   21a70:	str	r2, [r4]
   21a74:	b	2183c <argp_error@@Base+0x9c0>
   21a78:	ldr	r3, [r4, #32]
   21a7c:	cmp	r3, r2
   21a80:	beq	21bf8 <argp_error@@Base+0xd7c>
   21a84:	cmp	fp, r3
   21a88:	beq	21a9c <argp_error@@Base+0xc20>
   21a8c:	mov	r1, r4
   21a90:	mov	r0, r9
   21a94:	bl	21028 <argp_error@@Base+0x1ac>
   21a98:	ldr	r3, [r4]
   21a9c:	cmp	r6, r3
   21aa0:	addgt	r1, r9, r3, lsl #2
   21aa4:	bgt	21abc <argp_error@@Base+0xc40>
   21aa8:	b	21ad8 <argp_error@@Base+0xc5c>
   21aac:	add	r3, r3, #1
   21ab0:	cmp	r6, r3
   21ab4:	str	r3, [r4]
   21ab8:	beq	21b18 <argp_error@@Base+0xc9c>
   21abc:	ldr	r2, [r1], #4
   21ac0:	ldrb	r0, [r2]
   21ac4:	cmp	r0, #45	; 0x2d
   21ac8:	bne	21aac <argp_error@@Base+0xc30>
   21acc:	ldrb	r2, [r2, #1]
   21ad0:	cmp	r2, #0
   21ad4:	beq	21aac <argp_error@@Base+0xc30>
   21ad8:	mov	fp, r3
   21adc:	b	21b1c <argp_error@@Base+0xca0>
   21ae0:	ldr	r3, [r4, #28]
   21ae4:	ldr	r6, [r4, #32]
   21ae8:	mvn	r0, #0
   21aec:	cmp	r6, r3
   21af0:	strne	r3, [r4]
   21af4:	b	219e4 <argp_error@@Base+0xb68>
   21af8:	ldr	r0, [pc, #604]	; 21d5c <argp_error@@Base+0xee0>
   21afc:	bl	114b4 <getenv@plt>
   21b00:	ldr	r5, [r4, #20]
   21b04:	cmp	r0, #0
   21b08:	bne	21880 <argp_error@@Base+0xa04>
   21b0c:	mov	r3, #1
   21b10:	str	r3, [r4, #24]
   21b14:	b	21888 <argp_error@@Base+0xa0c>
   21b18:	mov	fp, r6
   21b1c:	cmp	r6, fp
   21b20:	str	fp, [r4, #32]
   21b24:	bne	2197c <argp_error@@Base+0xb00>
   21b28:	b	21ae0 <argp_error@@Base+0xc64>
   21b2c:	ldrb	r1, [r5, #1]
   21b30:	cmp	r1, #0
   21b34:	beq	21a14 <argp_error@@Base+0xb98>
   21b38:	cmp	sl, #0
   21b3c:	beq	21b70 <argp_error@@Base+0xcf4>
   21b40:	cmp	r1, #45	; 0x2d
   21b44:	beq	21ca0 <argp_error@@Base+0xe24>
   21b48:	ldr	r3, [sp, #76]	; 0x4c
   21b4c:	cmp	r3, #0
   21b50:	beq	21b70 <argp_error@@Base+0xcf4>
   21b54:	ldrb	r3, [r5, #2]
   21b58:	cmp	r3, #0
   21b5c:	bne	21c0c <argp_error@@Base+0xd90>
   21b60:	mov	r0, r7
   21b64:	bl	11550 <strchr@plt>
   21b68:	cmp	r0, #0
   21b6c:	beq	21c0c <argp_error@@Base+0xd90>
   21b70:	add	r5, r5, #1
   21b74:	b	218b0 <argp_error@@Base+0xa34>
   21b78:	mov	r3, fp
   21b7c:	str	fp, [r4, #28]
   21b80:	b	219d0 <argp_error@@Base+0xb54>
   21b84:	adds	ip, sl, #0
   21b88:	movne	ip, #1
   21b8c:	cmp	r1, #59	; 0x3b
   21b90:	movne	ip, #0
   21b94:	cmp	ip, #0
   21b98:	beq	2190c <argp_error@@Base+0xa90>
   21b9c:	ldrb	r2, [r5, #1]
   21ba0:	cmp	r2, #0
   21ba4:	bne	21bb8 <argp_error@@Base+0xd3c>
   21ba8:	ldr	r3, [r4]
   21bac:	cmp	r6, r3
   21bb0:	ldrne	r3, [r9, r3, lsl #2]
   21bb4:	beq	21cfc <argp_error@@Base+0xe80>
   21bb8:	str	r3, [r4, #20]
   21bbc:	ldr	lr, [pc, #412]	; 21d60 <argp_error@@Base+0xee4>
   21bc0:	ldr	r3, [sp, #72]	; 0x48
   21bc4:	mov	ip, #0
   21bc8:	str	r3, [sp]
   21bcc:	str	r8, [sp, #12]
   21bd0:	str	r4, [sp, #8]
   21bd4:	str	lr, [sp, #16]
   21bd8:	mov	r3, sl
   21bdc:	str	ip, [r4, #12]
   21be0:	mov	r2, r7
   21be4:	mov	r1, r9
   21be8:	mov	r0, r6
   21bec:	str	ip, [sp, #4]
   21bf0:	bl	210e4 <argp_error@@Base+0x268>
   21bf4:	b	21a30 <argp_error@@Base+0xbb4>
   21bf8:	cmp	fp, r2
   21bfc:	strne	fp, [r4, #28]
   21c00:	movne	r3, fp
   21c04:	moveq	r3, r2
   21c08:	b	21a9c <argp_error@@Base+0xc20>
   21c0c:	ldr	r2, [sp, #76]	; 0x4c
   21c10:	add	r5, r5, #1
   21c14:	str	r5, [r4, #20]
   21c18:	ldr	r3, [pc, #324]	; 21d64 <argp_error@@Base+0xee8>
   21c1c:	str	r2, [sp, #4]
   21c20:	ldr	r2, [sp, #72]	; 0x48
   21c24:	str	r3, [sp, #16]
   21c28:	str	r2, [sp]
   21c2c:	str	r8, [sp, #12]
   21c30:	str	r4, [sp, #8]
   21c34:	mov	r3, sl
   21c38:	mov	r2, r7
   21c3c:	mov	r1, r9
   21c40:	mov	r0, r6
   21c44:	bl	210e4 <argp_error@@Base+0x268>
   21c48:	cmn	r0, #1
   21c4c:	bne	21a30 <argp_error@@Base+0xbb4>
   21c50:	ldr	r3, [r4]
   21c54:	ldr	r5, [r9, r3, lsl #2]
   21c58:	b	21b70 <argp_error@@Base+0xcf4>
   21c5c:	ldr	r3, [r4]
   21c60:	cmp	r6, r3
   21c64:	beq	21cdc <argp_error@@Base+0xe60>
   21c68:	ldr	r2, [r9, r3, lsl #2]
   21c6c:	add	r3, r3, #1
   21c70:	str	r2, [r4, #12]
   21c74:	str	r3, [r4]
   21c78:	b	2193c <argp_error@@Base+0xac0>
   21c7c:	cmp	r2, #0
   21c80:	moveq	r3, r2
   21c84:	ldrne	r2, [r4]
   21c88:	str	r3, [r4, #12]
   21c8c:	addne	r2, r2, #1
   21c90:	strne	r2, [r4]
   21c94:	mov	r2, #0
   21c98:	str	r2, [r4, #20]
   21c9c:	b	21a30 <argp_error@@Base+0xbb4>
   21ca0:	add	r5, r5, #2
   21ca4:	str	r5, [r4, #20]
   21ca8:	str	r3, [sp, #16]
   21cac:	ldr	r3, [sp, #76]	; 0x4c
   21cb0:	str	r8, [sp, #12]
   21cb4:	str	r3, [sp, #4]
   21cb8:	ldr	r3, [sp, #72]	; 0x48
   21cbc:	str	r4, [sp, #8]
   21cc0:	str	r3, [sp]
   21cc4:	mov	r2, r7
   21cc8:	mov	r3, sl
   21ccc:	mov	r1, r9
   21cd0:	mov	r0, r6
   21cd4:	bl	210e4 <argp_error@@Base+0x268>
   21cd8:	b	21a30 <argp_error@@Base+0xbb4>
   21cdc:	cmp	r8, #0
   21ce0:	bne	21d34 <argp_error@@Base+0xeb8>
   21ce4:	str	fp, [r4, #8]
   21ce8:	ldrb	r0, [r7]
   21cec:	cmp	r0, #58	; 0x3a
   21cf0:	movne	r0, #63	; 0x3f
   21cf4:	moveq	r0, #58	; 0x3a
   21cf8:	b	2193c <argp_error@@Base+0xac0>
   21cfc:	cmp	r8, #0
   21d00:	beq	21d1c <argp_error@@Base+0xea0>
   21d04:	ldr	r1, [pc, #72]	; 21d54 <argp_error@@Base+0xed8>
   21d08:	ldr	r2, [r9]
   21d0c:	mov	r3, fp
   21d10:	ldr	r0, [r1]
   21d14:	ldr	r1, [pc, #76]	; 21d68 <argp_error@@Base+0xeec>
   21d18:	bl	1155c <fprintf@plt>
   21d1c:	str	fp, [r4, #8]
   21d20:	ldrb	r0, [r7]
   21d24:	cmp	r0, #58	; 0x3a
   21d28:	movne	r0, #63	; 0x3f
   21d2c:	moveq	r0, #58	; 0x3a
   21d30:	b	21a30 <argp_error@@Base+0xbb4>
   21d34:	ldr	r1, [pc, #24]	; 21d54 <argp_error@@Base+0xed8>
   21d38:	ldr	r2, [r9]
   21d3c:	mov	r3, fp
   21d40:	ldr	r0, [r1]
   21d44:	ldr	r1, [pc, #28]	; 21d68 <argp_error@@Base+0xeec>
   21d48:	bl	1155c <fprintf@plt>
   21d4c:	b	21ce4 <argp_error@@Base+0xe68>
   21d50:	andeq	r6, r2, ip, asr r0
   21d54:	andeq	r7, r3, r8, asr #22
   21d58:	muleq	r2, r4, r9
   21d5c:	andeq	r6, r2, r0, lsl #19
   21d60:	ldrdeq	r6, [r2], -ip
   21d64:	muleq	r2, r0, r9
   21d68:			; <UNDEFINED> instruction: 0x000269b0
   21d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d70:	sub	sp, sp, #44	; 0x2c
   21d74:	ldr	r7, [pc, #1572]	; 223a0 <argp_error@@Base+0x1524>
   21d78:	ldr	r4, [pc, #1572]	; 223a4 <argp_error@@Base+0x1528>
   21d7c:	subs	r6, r0, #0
   21d80:	ldm	r7, {r5, sl}
   21d84:	str	r1, [sp, #32]
   21d88:	str	r3, [sp, #36]	; 0x24
   21d8c:	stm	r4, {r5, sl}
   21d90:	ble	21f3c <argp_error@@Base+0x10c0>
   21d94:	mov	r3, #0
   21d98:	cmp	r5, #0
   21d9c:	mov	fp, r2
   21da0:	str	r3, [r4, #12]
   21da4:	beq	21ff8 <argp_error@@Base+0x117c>
   21da8:	ldr	r3, [r4, #16]
   21dac:	cmp	r3, #0
   21db0:	bne	21f54 <argp_error@@Base+0x10d8>
   21db4:	mov	r3, #0
   21db8:	str	r5, [r4, #32]
   21dbc:	str	r5, [r4, #28]
   21dc0:	str	r3, [r4, #20]
   21dc4:	ldrb	r2, [fp]
   21dc8:	cmp	r2, #45	; 0x2d
   21dcc:	beq	220a8 <argp_error@@Base+0x122c>
   21dd0:	cmp	r2, #43	; 0x2b
   21dd4:	streq	r3, [r4, #24]
   21dd8:	addeq	fp, fp, #1
   21ddc:	moveq	r5, r3
   21de0:	beq	21dfc <argp_error@@Base+0xf80>
   21de4:	ldr	r2, [sp, #88]	; 0x58
   21de8:	cmp	r2, #0
   21dec:	movne	r5, r3
   21df0:	beq	22088 <argp_error@@Base+0x120c>
   21df4:	mov	r3, #0
   21df8:	str	r3, [r4, #24]
   21dfc:	mov	r3, #1
   21e00:	str	r3, [r4, #16]
   21e04:	ldrb	r3, [fp]
   21e08:	cmp	r3, #58	; 0x3a
   21e0c:	moveq	sl, #0
   21e10:	cmp	r5, #0
   21e14:	beq	21e98 <argp_error@@Base+0x101c>
   21e18:	ldrb	r3, [r5]
   21e1c:	cmp	r3, #0
   21e20:	beq	21e98 <argp_error@@Base+0x101c>
   21e24:	add	r9, r5, #1
   21e28:	str	r9, [r4, #20]
   21e2c:	ldrb	r8, [r5]
   21e30:	mov	r0, fp
   21e34:	mov	r1, r8
   21e38:	bl	11550 <strchr@plt>
   21e3c:	ldrb	r3, [r5, #1]
   21e40:	str	r8, [sp, #28]
   21e44:	cmp	r3, #0
   21e48:	ldreq	r3, [r4]
   21e4c:	addeq	r3, r3, #1
   21e50:	streq	r3, [r4]
   21e54:	sub	r3, r8, #58	; 0x3a
   21e58:	cmp	r0, #0
   21e5c:	cmpne	r3, #1
   21e60:	bls	21fbc <argp_error@@Base+0x1140>
   21e64:	ldrb	r3, [r0]
   21e68:	cmp	r3, #87	; 0x57
   21e6c:	ldrb	r3, [r0, #1]
   21e70:	beq	22130 <argp_error@@Base+0x12b4>
   21e74:	cmp	r3, #58	; 0x3a
   21e78:	beq	221d4 <argp_error@@Base+0x1358>
   21e7c:	ldr	r3, [r4, #8]
   21e80:	mov	r0, r8
   21e84:	ldr	r9, [r4, #12]
   21e88:	ldr	r5, [r4]
   21e8c:	str	r3, [sp, #28]
   21e90:	mov	r2, r3
   21e94:	b	21fa4 <argp_error@@Base+0x1128>
   21e98:	ldr	r5, [r4]
   21e9c:	ldr	r8, [r4, #32]
   21ea0:	ldr	r3, [r4, #28]
   21ea4:	cmp	r8, r5
   21ea8:	ldr	r2, [r4, #24]
   21eac:	movgt	r8, r5
   21eb0:	strgt	r5, [r4, #32]
   21eb4:	cmp	r5, r3
   21eb8:	movlt	r3, r5
   21ebc:	strlt	r5, [r4, #28]
   21ec0:	cmp	r2, #1
   21ec4:	beq	22008 <argp_error@@Base+0x118c>
   21ec8:	cmp	r6, r5
   21ecc:	beq	22070 <argp_error@@Base+0x11f4>
   21ed0:	ldr	r3, [sp, #32]
   21ed4:	ldr	r9, [r3, r5, lsl #2]
   21ed8:	ldr	r3, [pc, #1224]	; 223a8 <argp_error@@Base+0x152c>
   21edc:	mov	r0, r9
   21ee0:	mov	r1, r3
   21ee4:	str	r3, [sp, #28]
   21ee8:	bl	113a0 <strcmp@plt>
   21eec:	ldr	r3, [sp, #28]
   21ef0:	cmp	r0, #0
   21ef4:	bne	21f70 <argp_error@@Base+0x10f4>
   21ef8:	add	r3, r5, #1
   21efc:	ldr	r5, [r4, #28]
   21f00:	str	r3, [r4]
   21f04:	cmp	r5, r8
   21f08:	beq	22124 <argp_error@@Base+0x12a8>
   21f0c:	cmp	r3, r8
   21f10:	beq	21f24 <argp_error@@Base+0x10a8>
   21f14:	ldr	r0, [sp, #32]
   21f18:	ldr	r1, [pc, #1156]	; 223a4 <argp_error@@Base+0x1528>
   21f1c:	bl	21028 <argp_error@@Base+0x1ac>
   21f20:	ldr	r5, [r4, #28]
   21f24:	mov	r8, r6
   21f28:	cmp	r8, r5
   21f2c:	str	r6, [r4, #32]
   21f30:	str	r6, [r4]
   21f34:	moveq	r5, r6
   21f38:	bne	22080 <argp_error@@Base+0x1204>
   21f3c:	ldr	r3, [r4, #8]
   21f40:	ldr	r9, [r4, #12]
   21f44:	str	r3, [sp, #28]
   21f48:	mvn	r0, #0
   21f4c:	mov	r2, r3
   21f50:	b	21fa4 <argp_error@@Base+0x1128>
   21f54:	ldrb	r3, [r2]
   21f58:	ldr	r5, [r4, #20]
   21f5c:	sub	r2, r3, #43	; 0x2b
   21f60:	tst	r2, #253	; 0xfd
   21f64:	ldrbeq	r3, [fp, #1]
   21f68:	addeq	fp, fp, #1
   21f6c:	b	21e08 <argp_error@@Base+0xf8c>
   21f70:	ldrb	r2, [r9]
   21f74:	cmp	r2, #45	; 0x2d
   21f78:	beq	220d4 <argp_error@@Base+0x1258>
   21f7c:	ldr	r3, [r4, #24]
   21f80:	cmp	r3, #0
   21f84:	beq	21f3c <argp_error@@Base+0x10c0>
   21f88:	ldr	r3, [r4, #8]
   21f8c:	mov	r0, #1
   21f90:	mov	r2, r3
   21f94:	add	r5, r5, #1
   21f98:	str	r5, [r4]
   21f9c:	str	r9, [r4, #12]
   21fa0:	str	r3, [sp, #28]
   21fa4:	ldr	r3, [pc, #1024]	; 223ac <argp_error@@Base+0x1530>
   21fa8:	str	r5, [r7]
   21fac:	str	r2, [r7, #8]
   21fb0:	str	r9, [r3]
   21fb4:	add	sp, sp, #44	; 0x2c
   21fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21fbc:	cmp	sl, #0
   21fc0:	beq	21fe0 <argp_error@@Base+0x1164>
   21fc4:	ldr	r1, [pc, #996]	; 223b0 <argp_error@@Base+0x1534>
   21fc8:	ldr	r3, [sp, #32]
   21fcc:	ldr	r0, [r1]
   21fd0:	ldr	r2, [r3]
   21fd4:	ldr	r1, [pc, #984]	; 223b4 <argp_error@@Base+0x1538>
   21fd8:	mov	r3, r8
   21fdc:	bl	1155c <fprintf@plt>
   21fe0:	str	r8, [r4, #8]
   21fe4:	ldr	r5, [r4]
   21fe8:	ldr	r9, [r4, #12]
   21fec:	mov	r0, #63	; 0x3f
   21ff0:	ldr	r2, [sp, #28]
   21ff4:	b	21fa4 <argp_error@@Base+0x1128>
   21ff8:	mov	r3, #1
   21ffc:	mov	r5, r3
   22000:	str	r3, [r4]
   22004:	b	21db4 <argp_error@@Base+0xf38>
   22008:	cmp	r8, r3
   2200c:	beq	221c4 <argp_error@@Base+0x1348>
   22010:	cmp	r5, r8
   22014:	beq	22028 <argp_error@@Base+0x11ac>
   22018:	ldr	r1, [pc, #900]	; 223a4 <argp_error@@Base+0x1528>
   2201c:	ldr	r0, [sp, #32]
   22020:	bl	21028 <argp_error@@Base+0x1ac>
   22024:	ldr	r8, [r4]
   22028:	cmp	r6, r8
   2202c:	ldrgt	r3, [sp, #32]
   22030:	addgt	r2, r3, r8, lsl #2
   22034:	bgt	2204c <argp_error@@Base+0x11d0>
   22038:	b	22068 <argp_error@@Base+0x11ec>
   2203c:	add	r8, r8, #1
   22040:	cmp	r6, r8
   22044:	str	r8, [r4]
   22048:	beq	220bc <argp_error@@Base+0x1240>
   2204c:	ldr	r3, [r2], #4
   22050:	ldrb	r1, [r3]
   22054:	cmp	r1, #45	; 0x2d
   22058:	bne	2203c <argp_error@@Base+0x11c0>
   2205c:	ldrb	r3, [r3, #1]
   22060:	cmp	r3, #0
   22064:	beq	2203c <argp_error@@Base+0x11c0>
   22068:	mov	r5, r8
   2206c:	b	220c0 <argp_error@@Base+0x1244>
   22070:	ldr	r5, [r4, #28]
   22074:	cmp	r8, r5
   22078:	moveq	r5, r6
   2207c:	beq	21f3c <argp_error@@Base+0x10c0>
   22080:	str	r5, [r4]
   22084:	b	21f3c <argp_error@@Base+0x10c0>
   22088:	ldr	r0, [pc, #808]	; 223b8 <argp_error@@Base+0x153c>
   2208c:	bl	114b4 <getenv@plt>
   22090:	ldr	r5, [r4, #20]
   22094:	cmp	r0, #0
   22098:	bne	21df4 <argp_error@@Base+0xf78>
   2209c:	mov	r3, #1
   220a0:	str	r3, [r4, #24]
   220a4:	b	21dfc <argp_error@@Base+0xf80>
   220a8:	mov	r2, #2
   220ac:	add	fp, fp, #1
   220b0:	mov	r5, r3
   220b4:	str	r2, [r4, #24]
   220b8:	b	21dfc <argp_error@@Base+0xf80>
   220bc:	mov	r5, r6
   220c0:	cmp	r6, r5
   220c4:	mov	r8, r5
   220c8:	str	r5, [r4, #32]
   220cc:	bne	21ed0 <argp_error@@Base+0x1054>
   220d0:	b	22070 <argp_error@@Base+0x11f4>
   220d4:	ldrb	r1, [r9, #1]
   220d8:	cmp	r1, #0
   220dc:	beq	21f7c <argp_error@@Base+0x1100>
   220e0:	ldr	r2, [sp, #36]	; 0x24
   220e4:	cmp	r2, #0
   220e8:	beq	2211c <argp_error@@Base+0x12a0>
   220ec:	cmp	r1, #45	; 0x2d
   220f0:	beq	222d0 <argp_error@@Base+0x1454>
   220f4:	ldr	r3, [sp, #84]	; 0x54
   220f8:	cmp	r3, #0
   220fc:	beq	2211c <argp_error@@Base+0x12a0>
   22100:	ldrb	r3, [r9, #2]
   22104:	cmp	r3, #0
   22108:	bne	22218 <argp_error@@Base+0x139c>
   2210c:	mov	r0, fp
   22110:	bl	11550 <strchr@plt>
   22114:	cmp	r0, #0
   22118:	beq	22218 <argp_error@@Base+0x139c>
   2211c:	add	r5, r9, #1
   22120:	b	21e24 <argp_error@@Base+0xfa8>
   22124:	mov	r5, r3
   22128:	str	r3, [r4, #28]
   2212c:	b	21f24 <argp_error@@Base+0x10a8>
   22130:	ldr	r1, [sp, #36]	; 0x24
   22134:	sub	r2, r3, #59	; 0x3b
   22138:	cmp	r1, #0
   2213c:	clz	r2, r2
   22140:	lsr	r2, r2, #5
   22144:	moveq	r2, #0
   22148:	cmp	r2, #0
   2214c:	beq	21e74 <argp_error@@Base+0xff8>
   22150:	ldrb	r3, [r5, #1]
   22154:	cmp	r3, #0
   22158:	bne	22170 <argp_error@@Base+0x12f4>
   2215c:	ldr	r3, [r4]
   22160:	cmp	r6, r3
   22164:	beq	22338 <argp_error@@Base+0x14bc>
   22168:	ldr	r2, [sp, #32]
   2216c:	ldr	r9, [r2, r3, lsl #2]
   22170:	ldr	r3, [sp, #80]	; 0x50
   22174:	ldr	r1, [sp, #32]
   22178:	str	r3, [sp]
   2217c:	ldr	r3, [sp, #36]	; 0x24
   22180:	ldr	lr, [pc, #564]	; 223bc <argp_error@@Base+0x1540>
   22184:	mov	r2, fp
   22188:	mov	r0, r6
   2218c:	mov	ip, #0
   22190:	str	sl, [sp, #12]
   22194:	str	r4, [sp, #8]
   22198:	str	lr, [sp, #16]
   2219c:	str	ip, [sp, #4]
   221a0:	str	r9, [r4, #20]
   221a4:	str	ip, [r4, #12]
   221a8:	bl	210e4 <argp_error@@Base+0x268>
   221ac:	ldr	r3, [r4, #8]
   221b0:	ldr	r5, [r4]
   221b4:	ldr	r9, [r4, #12]
   221b8:	str	r3, [sp, #28]
   221bc:	mov	r2, r3
   221c0:	b	21fa4 <argp_error@@Base+0x1128>
   221c4:	cmp	r5, r8
   221c8:	movne	r8, r5
   221cc:	strne	r5, [r4, #28]
   221d0:	b	22028 <argp_error@@Base+0x11ac>
   221d4:	ldrb	r3, [r0, #2]
   221d8:	cmp	r3, #58	; 0x3a
   221dc:	ldrb	r3, [r5, #1]
   221e0:	beq	22298 <argp_error@@Base+0x141c>
   221e4:	cmp	r3, #0
   221e8:	ldr	r5, [r4]
   221ec:	beq	2226c <argp_error@@Base+0x13f0>
   221f0:	ldr	r3, [r4, #8]
   221f4:	mov	r0, r8
   221f8:	add	r5, r5, #1
   221fc:	str	r9, [r4, #12]
   22200:	str	r5, [r4]
   22204:	str	r3, [sp, #28]
   22208:	mov	r3, #0
   2220c:	str	r3, [r4, #20]
   22210:	ldr	r2, [sp, #28]
   22214:	b	21fa4 <argp_error@@Base+0x1128>
   22218:	ldr	r2, [sp, #84]	; 0x54
   2221c:	ldr	r3, [pc, #412]	; 223c0 <argp_error@@Base+0x1544>
   22220:	str	r2, [sp, #4]
   22224:	ldr	r2, [sp, #80]	; 0x50
   22228:	str	r3, [sp, #16]
   2222c:	str	r2, [sp]
   22230:	add	r9, r9, #1
   22234:	str	sl, [sp, #12]
   22238:	str	r4, [sp, #8]
   2223c:	ldr	r3, [sp, #36]	; 0x24
   22240:	mov	r2, fp
   22244:	ldr	r1, [sp, #32]
   22248:	mov	r0, r6
   2224c:	str	r9, [r4, #20]
   22250:	bl	210e4 <argp_error@@Base+0x268>
   22254:	cmn	r0, #1
   22258:	bne	221ac <argp_error@@Base+0x1330>
   2225c:	ldr	r3, [r4]
   22260:	ldr	r2, [sp, #32]
   22264:	ldr	r9, [r2, r3, lsl #2]
   22268:	b	2211c <argp_error@@Base+0x12a0>
   2226c:	cmp	r6, r5
   22270:	beq	22308 <argp_error@@Base+0x148c>
   22274:	ldr	r3, [r4, #8]
   22278:	mov	r0, r8
   2227c:	str	r3, [sp, #28]
   22280:	ldr	r3, [sp, #32]
   22284:	ldr	r9, [r3, r5, lsl #2]
   22288:	add	r5, r5, #1
   2228c:	str	r9, [r4, #12]
   22290:	str	r5, [r4]
   22294:	b	22208 <argp_error@@Base+0x138c>
   22298:	cmp	r3, #0
   2229c:	moveq	r9, r3
   222a0:	ldrne	r5, [r4]
   222a4:	mov	r3, #0
   222a8:	str	r3, [r4, #20]
   222ac:	ldr	r3, [r4, #8]
   222b0:	addne	r5, r5, #1
   222b4:	ldreq	r5, [r4]
   222b8:	strne	r5, [r4]
   222bc:	str	r9, [r4, #12]
   222c0:	mov	r0, r8
   222c4:	str	r3, [sp, #28]
   222c8:	mov	r2, r3
   222cc:	b	21fa4 <argp_error@@Base+0x1128>
   222d0:	str	r3, [sp, #16]
   222d4:	ldr	r3, [sp, #84]	; 0x54
   222d8:	add	r9, r9, #2
   222dc:	str	r3, [sp, #4]
   222e0:	ldr	r3, [sp, #80]	; 0x50
   222e4:	str	sl, [sp, #12]
   222e8:	str	r3, [sp]
   222ec:	str	r4, [sp, #8]
   222f0:	mov	r3, r2
   222f4:	ldr	r1, [sp, #32]
   222f8:	mov	r2, fp
   222fc:	mov	r0, r6
   22300:	str	r9, [r4, #20]
   22304:	b	221a8 <argp_error@@Base+0x132c>
   22308:	cmp	sl, #0
   2230c:	bne	22380 <argp_error@@Base+0x1504>
   22310:	str	r8, [r4, #8]
   22314:	ldrb	r8, [fp]
   22318:	cmp	r8, #58	; 0x3a
   2231c:	moveq	r0, r8
   22320:	ldreq	r5, [r4]
   22324:	ldreq	r9, [r4, #12]
   22328:	ldrne	r5, [r4]
   2232c:	ldrne	r9, [r4, #12]
   22330:	movne	r0, #63	; 0x3f
   22334:	b	22208 <argp_error@@Base+0x138c>
   22338:	cmp	sl, #0
   2233c:	beq	2235c <argp_error@@Base+0x14e0>
   22340:	ldr	r1, [pc, #104]	; 223b0 <argp_error@@Base+0x1534>
   22344:	ldr	r3, [sp, #32]
   22348:	ldr	r0, [r1]
   2234c:	ldr	r2, [r3]
   22350:	ldr	r1, [pc, #108]	; 223c4 <argp_error@@Base+0x1548>
   22354:	mov	r3, r8
   22358:	bl	1155c <fprintf@plt>
   2235c:	str	r8, [r4, #8]
   22360:	ldrb	r8, [fp]
   22364:	ldr	r5, [r4]
   22368:	ldr	r9, [r4, #12]
   2236c:	cmp	r8, #58	; 0x3a
   22370:	movne	r0, #63	; 0x3f
   22374:	moveq	r0, #58	; 0x3a
   22378:	ldr	r2, [sp, #28]
   2237c:	b	21fa4 <argp_error@@Base+0x1128>
   22380:	ldr	r3, [sp, #32]
   22384:	ldr	r1, [pc, #36]	; 223b0 <argp_error@@Base+0x1534>
   22388:	ldr	r2, [r3]
   2238c:	ldr	r0, [r1]
   22390:	mov	r3, r8
   22394:	ldr	r1, [pc, #40]	; 223c4 <argp_error@@Base+0x1548>
   22398:	bl	1155c <fprintf@plt>
   2239c:	b	22310 <argp_error@@Base+0x1494>
   223a0:	andeq	r7, r3, ip, lsr #22
   223a4:	andeq	r7, r3, r8, asr #23
   223a8:	andeq	r6, r2, ip, asr r0
   223ac:	andeq	r7, r3, r8, lsr #24
   223b0:	andeq	r7, r3, r8, asr #22
   223b4:	muleq	r2, r4, r9
   223b8:	andeq	r6, r2, r0, lsl #19
   223bc:	ldrdeq	r6, [r2], -ip
   223c0:	muleq	r2, r0, r9
   223c4:			; <UNDEFINED> instruction: 0x000269b0
   223c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223cc:	sub	sp, sp, #20
   223d0:	ldr	r7, [pc, #1052]	; 227f4 <argp_error@@Base+0x1978>
   223d4:	ldr	r4, [pc, #1052]	; 227f8 <argp_error@@Base+0x197c>
   223d8:	subs	r6, r0, #0
   223dc:	ldr	r5, [r7]
   223e0:	ldr	r3, [r7, #4]
   223e4:	str	r1, [sp, #4]
   223e8:	str	r5, [r4]
   223ec:	str	r3, [r4, #4]
   223f0:	ble	226c8 <argp_error@@Base+0x184c>
   223f4:	mov	sl, r2
   223f8:	cmp	r5, #0
   223fc:	mov	r2, #0
   22400:	str	r2, [r4, #12]
   22404:	beq	224b0 <argp_error@@Base+0x1634>
   22408:	ldr	r2, [r4, #16]
   2240c:	cmp	r2, #0
   22410:	beq	224bc <argp_error@@Base+0x1640>
   22414:	ldrb	r2, [sl]
   22418:	sub	r1, r2, #43	; 0x2b
   2241c:	tst	r1, #253	; 0xfd
   22420:	ldrbeq	r2, [sl, #1]
   22424:	addeq	sl, sl, #1
   22428:	cmp	r2, #58	; 0x3a
   2242c:	ldr	r2, [r4, #20]
   22430:	moveq	r3, #0
   22434:	cmp	r2, #0
   22438:	beq	22510 <argp_error@@Base+0x1694>
   2243c:	ldrb	r1, [r2]
   22440:	cmp	r1, #0
   22444:	beq	22510 <argp_error@@Base+0x1694>
   22448:	add	r9, r2, #1
   2244c:	str	r9, [r4, #20]
   22450:	ldrb	r8, [r2]
   22454:	mov	r0, sl
   22458:	str	r3, [sp, #12]
   2245c:	mov	r1, r8
   22460:	str	r2, [sp, #8]
   22464:	bl	11550 <strchr@plt>
   22468:	ldr	r2, [sp, #8]
   2246c:	mov	fp, r8
   22470:	ldr	r3, [sp, #12]
   22474:	ldrb	r1, [r2, #1]
   22478:	cmp	r1, #0
   2247c:	addeq	r5, r5, #1
   22480:	sub	r1, r8, #58	; 0x3a
   22484:	streq	r5, [r4]
   22488:	cmp	r0, #0
   2248c:	cmpne	r1, #1
   22490:	bls	225fc <argp_error@@Base+0x1780>
   22494:	ldrb	r1, [r0, #1]
   22498:	cmp	r1, #58	; 0x3a
   2249c:	beq	22708 <argp_error@@Base+0x188c>
   224a0:	mov	r0, r8
   224a4:	ldr	r9, [r4, #12]
   224a8:	ldr	fp, [r4, #8]
   224ac:	b	225e4 <argp_error@@Base+0x1768>
   224b0:	mov	r2, #1
   224b4:	mov	r5, r2
   224b8:	str	r2, [r4]
   224bc:	mov	r2, #0
   224c0:	str	r5, [r4, #32]
   224c4:	str	r5, [r4, #28]
   224c8:	str	r2, [r4, #20]
   224cc:	ldrb	r1, [sl]
   224d0:	cmp	r1, #45	; 0x2d
   224d4:	moveq	r1, #2
   224d8:	addeq	sl, sl, #1
   224dc:	streq	r1, [r4, #24]
   224e0:	beq	224fc <argp_error@@Base+0x1680>
   224e4:	cmp	r1, #43	; 0x2b
   224e8:	addeq	sl, sl, #1
   224ec:	moveq	r1, r2
   224f0:	movne	r1, r2
   224f4:	streq	r2, [r4, #24]
   224f8:	strne	r2, [r4, #24]
   224fc:	mov	r2, #1
   22500:	str	r2, [r4, #16]
   22504:	ldrb	r2, [sl]
   22508:	cmp	r2, #58	; 0x3a
   2250c:	beq	22634 <argp_error@@Base+0x17b8>
   22510:	add	r1, r4, #24
   22514:	ldm	r1, {r1, r2, r8}
   22518:	cmp	r8, r5
   2251c:	movgt	r8, r5
   22520:	strgt	r5, [r4, #32]
   22524:	cmp	r5, r2
   22528:	movlt	r2, r5
   2252c:	strlt	r5, [r4, #28]
   22530:	cmp	r1, #1
   22534:	beq	22648 <argp_error@@Base+0x17cc>
   22538:	cmp	r6, r5
   2253c:	str	r3, [sp, #8]
   22540:	beq	226b8 <argp_error@@Base+0x183c>
   22544:	ldr	fp, [sp, #4]
   22548:	ldr	r1, [pc, #684]	; 227fc <argp_error@@Base+0x1980>
   2254c:	ldr	r9, [fp, r5, lsl #2]
   22550:	mov	r0, r9
   22554:	bl	113a0 <strcmp@plt>
   22558:	ldr	r3, [sp, #8]
   2255c:	cmp	r0, #0
   22560:	bne	225b8 <argp_error@@Base+0x173c>
   22564:	add	r3, r5, #1
   22568:	ldr	r5, [r4, #28]
   2256c:	str	r3, [r4]
   22570:	cmp	r5, r8
   22574:	beq	226fc <argp_error@@Base+0x1880>
   22578:	cmp	r3, r8
   2257c:	beq	22590 <argp_error@@Base+0x1714>
   22580:	mov	r0, fp
   22584:	ldr	r1, [pc, #620]	; 227f8 <argp_error@@Base+0x197c>
   22588:	bl	21028 <argp_error@@Base+0x1ac>
   2258c:	ldr	r5, [r4, #28]
   22590:	mov	r8, r6
   22594:	cmp	r8, r5
   22598:	str	r6, [r4, #32]
   2259c:	str	r6, [r4]
   225a0:	beq	226c4 <argp_error@@Base+0x1848>
   225a4:	str	r5, [r4]
   225a8:	ldr	r9, [r4, #12]
   225ac:	ldr	fp, [r4, #8]
   225b0:	mvn	r0, #0
   225b4:	b	225e4 <argp_error@@Base+0x1768>
   225b8:	ldrb	r2, [r9]
   225bc:	cmp	r2, #45	; 0x2d
   225c0:	beq	226e8 <argp_error@@Base+0x186c>
   225c4:	ldr	r3, [r4, #24]
   225c8:	cmp	r3, #0
   225cc:	beq	226c8 <argp_error@@Base+0x184c>
   225d0:	ldr	fp, [r4, #8]
   225d4:	mov	r0, #1
   225d8:	add	r5, r5, #1
   225dc:	str	r5, [r4]
   225e0:	str	r9, [r4, #12]
   225e4:	ldr	r3, [pc, #532]	; 22800 <argp_error@@Base+0x1984>
   225e8:	str	r5, [r7]
   225ec:	str	fp, [r7, #8]
   225f0:	str	r9, [r3]
   225f4:	add	sp, sp, #20
   225f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   225fc:	cmp	r3, #0
   22600:	beq	22624 <argp_error@@Base+0x17a8>
   22604:	ldr	r3, [sp, #4]
   22608:	ldr	r1, [pc, #500]	; 22804 <argp_error@@Base+0x1988>
   2260c:	ldr	r2, [r3]
   22610:	ldr	r0, [r1]
   22614:	mov	r3, r8
   22618:	ldr	r1, [pc, #488]	; 22808 <argp_error@@Base+0x198c>
   2261c:	bl	1155c <fprintf@plt>
   22620:	ldr	r5, [r4]
   22624:	str	r8, [r4, #8]
   22628:	ldr	r9, [r4, #12]
   2262c:	mov	r0, #63	; 0x3f
   22630:	b	225e4 <argp_error@@Base+0x1768>
   22634:	cmp	r1, #1
   22638:	mov	r8, r5
   2263c:	mov	r2, r5
   22640:	mov	r3, #0
   22644:	bne	22538 <argp_error@@Base+0x16bc>
   22648:	cmp	r2, r8
   2264c:	beq	22740 <argp_error@@Base+0x18c4>
   22650:	cmp	r5, r8
   22654:	beq	22670 <argp_error@@Base+0x17f4>
   22658:	ldr	r1, [pc, #408]	; 227f8 <argp_error@@Base+0x197c>
   2265c:	ldr	r0, [sp, #4]
   22660:	str	r3, [sp, #8]
   22664:	bl	21028 <argp_error@@Base+0x1ac>
   22668:	ldr	r8, [r4]
   2266c:	ldr	r3, [sp, #8]
   22670:	cmp	r6, r8
   22674:	ldrgt	r2, [sp, #4]
   22678:	addgt	r1, r2, r8, lsl #2
   2267c:	bgt	22694 <argp_error@@Base+0x1818>
   22680:	b	226b0 <argp_error@@Base+0x1834>
   22684:	add	r8, r8, #1
   22688:	cmp	r6, r8
   2268c:	str	r8, [r4]
   22690:	beq	226d8 <argp_error@@Base+0x185c>
   22694:	ldr	r2, [r1], #4
   22698:	ldrb	r0, [r2]
   2269c:	cmp	r0, #45	; 0x2d
   226a0:	bne	22684 <argp_error@@Base+0x1808>
   226a4:	ldrb	r2, [r2, #1]
   226a8:	cmp	r2, #0
   226ac:	beq	22684 <argp_error@@Base+0x1808>
   226b0:	mov	r5, r8
   226b4:	b	226dc <argp_error@@Base+0x1860>
   226b8:	ldr	r5, [r4, #28]
   226bc:	cmp	r8, r5
   226c0:	bne	225a4 <argp_error@@Base+0x1728>
   226c4:	mov	r5, r6
   226c8:	ldr	r9, [r4, #12]
   226cc:	ldr	fp, [r4, #8]
   226d0:	mvn	r0, #0
   226d4:	b	225e4 <argp_error@@Base+0x1768>
   226d8:	mov	r5, r6
   226dc:	mov	r8, r5
   226e0:	str	r5, [r4, #32]
   226e4:	b	22538 <argp_error@@Base+0x16bc>
   226e8:	ldrb	r2, [r9, #1]
   226ec:	cmp	r2, #0
   226f0:	beq	225c4 <argp_error@@Base+0x1748>
   226f4:	add	r2, r9, #1
   226f8:	b	22448 <argp_error@@Base+0x15cc>
   226fc:	mov	r5, r3
   22700:	str	r3, [r4, #28]
   22704:	b	22590 <argp_error@@Base+0x1714>
   22708:	ldrb	r1, [r0, #2]
   2270c:	cmp	r1, #58	; 0x3a
   22710:	beq	2277c <argp_error@@Base+0x1900>
   22714:	ldrb	r2, [r2, #1]
   22718:	cmp	r2, #0
   2271c:	beq	22750 <argp_error@@Base+0x18d4>
   22720:	ldr	fp, [r4, #8]
   22724:	mov	r0, r8
   22728:	add	r5, r5, #1
   2272c:	str	r5, [r4]
   22730:	str	r9, [r4, #12]
   22734:	mov	r3, #0
   22738:	str	r3, [r4, #20]
   2273c:	b	225e4 <argp_error@@Base+0x1768>
   22740:	cmp	r5, r8
   22744:	movne	r8, r5
   22748:	strne	r5, [r4, #28]
   2274c:	b	22670 <argp_error@@Base+0x17f4>
   22750:	cmp	r6, r5
   22754:	beq	227a8 <argp_error@@Base+0x192c>
   22758:	ldr	r2, [sp, #4]
   2275c:	add	r3, r5, #1
   22760:	ldr	fp, [r4, #8]
   22764:	ldr	r9, [r2, r5, lsl #2]
   22768:	mov	r0, r8
   2276c:	mov	r5, r3
   22770:	str	r9, [r4, #12]
   22774:	str	r3, [r4]
   22778:	b	22734 <argp_error@@Base+0x18b8>
   2277c:	ldrb	r3, [r2, #1]
   22780:	mov	r0, r8
   22784:	ldr	fp, [r4, #8]
   22788:	cmp	r3, #0
   2278c:	moveq	r9, r3
   22790:	addne	r5, r5, #1
   22794:	mov	r3, #0
   22798:	strne	r5, [r4]
   2279c:	str	r9, [r4, #12]
   227a0:	str	r3, [r4, #20]
   227a4:	b	225e4 <argp_error@@Base+0x1768>
   227a8:	cmp	r3, #0
   227ac:	beq	227d0 <argp_error@@Base+0x1954>
   227b0:	ldr	r3, [sp, #4]
   227b4:	ldr	r1, [pc, #72]	; 22804 <argp_error@@Base+0x1988>
   227b8:	ldr	r2, [r3]
   227bc:	ldr	r0, [r1]
   227c0:	mov	r3, r8
   227c4:	ldr	r1, [pc, #64]	; 2280c <argp_error@@Base+0x1990>
   227c8:	bl	1155c <fprintf@plt>
   227cc:	ldr	r6, [r4]
   227d0:	str	r8, [r4, #8]
   227d4:	ldrb	r8, [sl]
   227d8:	mov	r5, r6
   227dc:	cmp	r8, #58	; 0x3a
   227e0:	moveq	r0, r8
   227e4:	ldreq	r9, [r4, #12]
   227e8:	ldrne	r9, [r4, #12]
   227ec:	movne	r0, #63	; 0x3f
   227f0:	b	22734 <argp_error@@Base+0x18b8>
   227f4:	andeq	r7, r3, ip, lsr #22
   227f8:	andeq	r7, r3, r8, asr #23
   227fc:	andeq	r6, r2, ip, asr r0
   22800:	andeq	r7, r3, r8, lsr #24
   22804:	andeq	r7, r3, r8, asr #22
   22808:	muleq	r2, r4, r9
   2280c:			; <UNDEFINED> instruction: 0x000269b0
   22810:	push	{r4, r5, r6, lr}
   22814:	subs	r4, r2, #0
   22818:	mov	r6, r0
   2281c:	mov	r5, r1
   22820:	beq	2284c <argp_error@@Base+0x19d0>
   22824:	mov	r1, r4
   22828:	mvn	r0, #0
   2282c:	bl	230cc <argp_error@@Base+0x2250>
   22830:	cmp	r0, r5
   22834:	bcs	2284c <argp_error@@Base+0x19d0>
   22838:	bl	11568 <__errno_location@plt>
   2283c:	mov	r3, #12
   22840:	str	r3, [r0]
   22844:	mov	r0, #0
   22848:	pop	{r4, r5, r6, pc}
   2284c:	mul	r1, r5, r4
   22850:	mov	r0, r6
   22854:	pop	{r4, r5, r6, lr}
   22858:	b	1cadc <_obstack_memory_used@@Base+0x18d8>
   2285c:	push	{r4, r5, r6, r7, r8, lr}
   22860:	mov	r8, r0
   22864:	mov	r0, #36	; 0x24
   22868:	mov	r7, r1
   2286c:	mov	r6, r2
   22870:	mov	r5, r3
   22874:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   22878:	subs	r4, r0, #0
   2287c:	beq	228c0 <argp_error@@Base+0x1a44>
   22880:	mov	r0, #0
   22884:	str	r5, [r4, #12]
   22888:	str	r0, [r4, #20]
   2288c:	str	r0, [r4, #16]
   22890:	str	r8, [r4]
   22894:	str	r7, [r4, #4]
   22898:	str	r6, [r4, #8]
   2289c:	mov	r0, #200	; 0xc8
   228a0:	bl	1cab0 <_obstack_memory_used@@Base+0x18ac>
   228a4:	cmp	r0, #0
   228a8:	addne	r3, r0, #200	; 0xc8
   228ac:	mov	r5, r0
   228b0:	str	r0, [r4, #24]
   228b4:	strne	r0, [r4, #28]
   228b8:	strne	r3, [r4, #32]
   228bc:	beq	228c8 <argp_error@@Base+0x1a4c>
   228c0:	mov	r0, r4
   228c4:	pop	{r4, r5, r6, r7, r8, pc}
   228c8:	mov	r0, r4
   228cc:	bl	1acdc <argp_parse@@Base+0xf7c>
   228d0:	mov	r4, r5
   228d4:	b	228c0 <argp_error@@Base+0x1a44>
   228d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228dc:	mov	r7, r0
   228e0:	ldr	r4, [r0, #24]
   228e4:	ldr	r3, [r0, #16]
   228e8:	ldr	r9, [r0, #28]
   228ec:	sub	sp, sp, #12
   228f0:	add	r4, r4, r3
   228f4:	mov	sl, #32
   228f8:	cmp	r4, r9
   228fc:	bcs	229d0 <argp_error@@Base+0x1b54>
   22900:	ldr	r8, [r7, #20]
   22904:	cmp	r8, #0
   22908:	bne	22974 <argp_error@@Base+0x1af8>
   2290c:	ldr	r5, [r7, #4]
   22910:	cmp	r5, #0
   22914:	beq	22c44 <argp_error@@Base+0x1dc8>
   22918:	ldr	r2, [r7, #32]
   2291c:	add	r3, r9, r5
   22920:	cmp	r2, r3
   22924:	bls	2293c <argp_error@@Base+0x1ac0>
   22928:	b	22d6c <argp_error@@Base+0x1ef0>
   2292c:	cmp	r5, r8
   22930:	str	r1, [r0, #20]
   22934:	strb	sl, [r3]
   22938:	beq	22968 <argp_error@@Base+0x1aec>
   2293c:	ldr	r0, [r7]
   22940:	add	r8, r8, #1
   22944:	ldr	r3, [r0, #20]
   22948:	ldr	r2, [r0, #24]
   2294c:	add	r1, r3, #1
   22950:	cmp	r3, r2
   22954:	bcc	2292c <argp_error@@Base+0x1ab0>
   22958:	mov	r1, sl
   2295c:	bl	115e0 <__overflow@plt>
   22960:	cmp	r5, r8
   22964:	bne	2293c <argp_error@@Base+0x1ac0>
   22968:	ldr	r9, [r7, #28]
   2296c:	mov	r8, r5
   22970:	str	r5, [r7, #20]
   22974:	sub	fp, r9, r4
   22978:	mov	r2, fp
   2297c:	mov	r1, #10
   22980:	mov	r0, r4
   22984:	bl	115bc <memchr@plt>
   22988:	cmp	r8, #0
   2298c:	movlt	r8, #0
   22990:	movlt	r3, r8
   22994:	mov	r5, r0
   22998:	strlt	r3, [r7, #20]
   2299c:	cmp	r5, #0
   229a0:	beq	22c64 <argp_error@@Base+0x1de8>
   229a4:	sub	r2, r5, r4
   229a8:	ldr	r3, [r7, #8]
   229ac:	add	r2, r2, r8
   229b0:	cmp	r2, r3
   229b4:	bge	229e4 <argp_error@@Base+0x1b68>
   229b8:	ldr	r9, [r7, #28]
   229bc:	add	r4, r5, #1
   229c0:	mov	r3, #0
   229c4:	cmp	r4, r9
   229c8:	str	r3, [r7, #20]
   229cc:	bcc	22900 <argp_error@@Base+0x1a84>
   229d0:	ldr	r3, [r7, #24]
   229d4:	sub	r9, r9, r3
   229d8:	str	r9, [r7, #16]
   229dc:	add	sp, sp, #12
   229e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229e4:	ldr	r2, [r7, #12]
   229e8:	sub	r6, r3, #1
   229ec:	cmp	r2, #0
   229f0:	str	r2, [sp, #4]
   229f4:	blt	22d1c <argp_error@@Base+0x1ea0>
   229f8:	add	r6, r6, #1
   229fc:	sub	r8, r6, r8
   22a00:	adds	r8, r4, r8
   22a04:	bcs	22c9c <argp_error@@Base+0x1e20>
   22a08:	bl	11520 <__ctype_b_loc@plt>
   22a0c:	mov	r3, r8
   22a10:	ldr	r0, [r0]
   22a14:	b	22a20 <argp_error@@Base+0x1ba4>
   22a18:	cmp	r3, r4
   22a1c:	bcc	22ca0 <argp_error@@Base+0x1e24>
   22a20:	mov	r1, r3
   22a24:	sub	r3, r3, #1
   22a28:	ldrb	r2, [r1]
   22a2c:	mov	r6, r3
   22a30:	lsl	r2, r2, #1
   22a34:	ldrh	r2, [r0, r2]
   22a38:	tst	r2, #1
   22a3c:	beq	22a18 <argp_error@@Base+0x1b9c>
   22a40:	add	r6, r1, #1
   22a44:	cmp	r6, r4
   22a48:	bls	22cb4 <argp_error@@Base+0x1e38>
   22a4c:	cmp	r4, r1
   22a50:	bhi	22cac <argp_error@@Base+0x1e30>
   22a54:	mov	r1, r3
   22a58:	sub	r8, r4, #1
   22a5c:	b	22a78 <argp_error@@Base+0x1bfc>
   22a60:	ldrb	r3, [r1]
   22a64:	sub	r1, r1, #1
   22a68:	lsl	r3, r3, #1
   22a6c:	ldrh	r3, [r0, r3]
   22a70:	tst	r3, #1
   22a74:	beq	22da4 <argp_error@@Base+0x1f28>
   22a78:	cmp	r8, r1
   22a7c:	mov	r2, r1
   22a80:	bne	22a60 <argp_error@@Base+0x1be4>
   22a84:	add	r8, r8, #1
   22a88:	add	r3, fp, #1
   22a8c:	add	r3, r4, r3
   22a90:	cmp	r6, r3
   22a94:	beq	22b74 <argp_error@@Base+0x1cf8>
   22a98:	add	r5, r8, #1
   22a9c:	ldr	r3, [sp, #4]
   22aa0:	sub	r1, r6, r5
   22aa4:	cmp	r1, r3
   22aa8:	bge	22b90 <argp_error@@Base+0x1d14>
   22aac:	cmp	r6, r9
   22ab0:	bcs	22b88 <argp_error@@Base+0x1d0c>
   22ab4:	ldr	r3, [r7, #32]
   22ab8:	ldr	r2, [sp, #4]
   22abc:	sub	r3, r3, r9
   22ac0:	add	r0, r2, #1
   22ac4:	cmp	r3, r0
   22ac8:	bgt	22dd4 <argp_error@@Base+0x1f58>
   22acc:	ldr	r0, [r7, #24]
   22ad0:	cmp	r8, r0
   22ad4:	bls	22ae8 <argp_error@@Base+0x1c6c>
   22ad8:	sub	r2, r8, r0
   22adc:	ldr	r3, [r7]
   22ae0:	mov	r1, #1
   22ae4:	bl	11418 <fwrite_unlocked@plt>
   22ae8:	ldr	r0, [r7]
   22aec:	ldr	r2, [r0, #24]
   22af0:	ldr	r3, [r0, #20]
   22af4:	cmp	r3, r2
   22af8:	addcc	r2, r3, #1
   22afc:	strcc	r2, [r0, #20]
   22b00:	movcc	r2, #10
   22b04:	strbcc	r2, [r3]
   22b08:	bcs	22e14 <argp_error@@Base+0x1f98>
   22b0c:	ldr	r5, [r7, #24]
   22b10:	sub	r4, r4, r5
   22b14:	sub	r1, r6, r5
   22b18:	add	fp, fp, r4
   22b1c:	mov	r9, r1
   22b20:	mov	r2, r5
   22b24:	ldr	r3, [r7, #12]
   22b28:	cmp	r3, r1
   22b2c:	bgt	22bac <argp_error@@Base+0x1d30>
   22b30:	cmp	r3, #0
   22b34:	mov	r4, r5
   22b38:	ble	22b50 <argp_error@@Base+0x1cd4>
   22b3c:	strb	sl, [r4], #1
   22b40:	ldr	r3, [r7, #12]
   22b44:	sub	r1, r4, r5
   22b48:	cmp	r1, r3
   22b4c:	blt	22b3c <argp_error@@Base+0x1cc0>
   22b50:	cmp	r4, r6
   22b54:	bcc	22c28 <argp_error@@Base+0x1dac>
   22b58:	sub	r9, fp, r9
   22b5c:	cmp	r3, #0
   22b60:	add	r9, r4, r9
   22b64:	mvneq	r3, #0
   22b68:	str	r9, [r7, #28]
   22b6c:	str	r3, [r7, #20]
   22b70:	b	228f8 <argp_error@@Base+0x1a7c>
   22b74:	ldr	r3, [r7, #32]
   22b78:	ldr	r2, [sp, #4]
   22b7c:	sub	r3, r3, r8
   22b80:	cmp	r3, r2
   22b84:	ble	22aac <argp_error@@Base+0x1c30>
   22b88:	add	r5, r8, #1
   22b8c:	sub	r1, r6, r5
   22b90:	mov	r3, #10
   22b94:	strb	r3, [r8]
   22b98:	ldr	r3, [r7, #12]
   22b9c:	sub	r9, r6, r4
   22ba0:	cmp	r3, r1
   22ba4:	mov	r2, r4
   22ba8:	ble	22b30 <argp_error@@Base+0x1cb4>
   22bac:	add	r1, fp, #1
   22bb0:	add	r1, r2, r1
   22bb4:	cmp	r6, r1
   22bb8:	beq	22dc0 <argp_error@@Base+0x1f44>
   22bbc:	cmp	r3, #0
   22bc0:	ble	22c1c <argp_error@@Base+0x1da0>
   22bc4:	mov	r4, #0
   22bc8:	mov	r8, r2
   22bcc:	b	22be8 <argp_error@@Base+0x1d6c>
   22bd0:	str	ip, [r0, #20]
   22bd4:	strb	sl, [r3]
   22bd8:	ldr	r3, [r7, #12]
   22bdc:	add	r4, r4, #1
   22be0:	cmp	r3, r4
   22be4:	ble	22c18 <argp_error@@Base+0x1d9c>
   22be8:	ldr	r0, [r7]
   22bec:	ldr	r3, [r0, #20]
   22bf0:	ldr	r1, [r0, #24]
   22bf4:	add	ip, r3, #1
   22bf8:	cmp	r3, r1
   22bfc:	bcc	22bd0 <argp_error@@Base+0x1d54>
   22c00:	mov	r1, sl
   22c04:	bl	115e0 <__overflow@plt>
   22c08:	ldr	r3, [r7, #12]
   22c0c:	add	r4, r4, #1
   22c10:	cmp	r3, r4
   22c14:	bgt	22be8 <argp_error@@Base+0x1d6c>
   22c18:	mov	r2, r8
   22c1c:	mov	r4, r5
   22c20:	cmp	r4, r6
   22c24:	bcs	22b58 <argp_error@@Base+0x1cdc>
   22c28:	add	r2, r2, fp
   22c2c:	sub	r2, r2, r6
   22c30:	mov	r1, r6
   22c34:	mov	r0, r4
   22c38:	bl	113c4 <memmove@plt>
   22c3c:	ldr	r3, [r7, #12]
   22c40:	b	22b58 <argp_error@@Base+0x1cdc>
   22c44:	sub	fp, r9, r4
   22c48:	mov	r2, fp
   22c4c:	mov	r1, #10
   22c50:	mov	r0, r4
   22c54:	bl	115bc <memchr@plt>
   22c58:	mov	r5, r0
   22c5c:	cmp	r5, #0
   22c60:	bne	229a4 <argp_error@@Base+0x1b28>
   22c64:	ldr	r6, [r7, #8]
   22c68:	add	r3, fp, r8
   22c6c:	cmp	r3, r6
   22c70:	bcc	22e38 <argp_error@@Base+0x1fbc>
   22c74:	ldr	r2, [r7, #12]
   22c78:	sub	r6, r6, #1
   22c7c:	cmp	r2, #0
   22c80:	str	r2, [sp, #4]
   22c84:	blt	22e24 <argp_error@@Base+0x1fa8>
   22c88:	add	r6, r6, #1
   22c8c:	sub	r8, r6, r8
   22c90:	adds	r8, r4, r8
   22c94:	mov	r5, r9
   22c98:	bcc	22a08 <argp_error@@Base+0x1b8c>
   22c9c:	mov	r6, r8
   22ca0:	add	r6, r6, #1
   22ca4:	cmp	r4, r6
   22ca8:	bcs	22cb4 <argp_error@@Base+0x1e38>
   22cac:	mov	r8, r6
   22cb0:	b	22a88 <argp_error@@Base+0x1c0c>
   22cb4:	cmp	r8, r5
   22cb8:	bcs	22cf0 <argp_error@@Base+0x1e74>
   22cbc:	add	r6, r8, #1
   22cc0:	b	22ce4 <argp_error@@Base+0x1e68>
   22cc4:	bl	11520 <__ctype_b_loc@plt>
   22cc8:	ldrb	r3, [r6]
   22ccc:	add	r6, r6, #1
   22cd0:	lsl	r3, r3, #1
   22cd4:	ldr	r2, [r0]
   22cd8:	ldrh	r3, [r2, r3]
   22cdc:	tst	r3, #1
   22ce0:	bne	22d00 <argp_error@@Base+0x1e84>
   22ce4:	cmp	r6, r5
   22ce8:	mov	r8, r6
   22cec:	bne	22cc4 <argp_error@@Base+0x1e48>
   22cf0:	cmp	r8, r5
   22cf4:	beq	22dac <argp_error@@Base+0x1f30>
   22cf8:	bl	11520 <__ctype_b_loc@plt>
   22cfc:	ldr	r2, [r0]
   22d00:	mov	r6, r8
   22d04:	ldrb	r3, [r6, #1]!
   22d08:	lsl	r3, r3, #1
   22d0c:	ldrh	r3, [r2, r3]
   22d10:	tst	r3, #1
   22d14:	bne	22d04 <argp_error@@Base+0x1e88>
   22d18:	b	22a88 <argp_error@@Base+0x1c0c>
   22d1c:	cmp	r9, r5
   22d20:	str	r3, [sp, #4]
   22d24:	bls	22e20 <argp_error@@Base+0x1fa4>
   22d28:	sub	r0, r6, r8
   22d2c:	sub	r2, r9, r5
   22d30:	add	r0, r4, r0
   22d34:	mov	r1, r5
   22d38:	bl	113c4 <memmove@plt>
   22d3c:	ldr	r2, [r7, #20]
   22d40:	ldr	r9, [r7, #28]
   22d44:	sub	r6, r6, r2
   22d48:	add	r6, r4, r6
   22d4c:	mov	r3, #0
   22d50:	sub	r5, r6, r5
   22d54:	str	r3, [r7, #20]
   22d58:	ldr	r3, [sp, #4]
   22d5c:	sub	r9, r9, r5
   22d60:	add	r4, r4, r3
   22d64:	str	r9, [r7, #28]
   22d68:	b	228f8 <argp_error@@Base+0x1a7c>
   22d6c:	add	r6, r4, r5
   22d70:	sub	r2, r9, r4
   22d74:	mov	r1, r4
   22d78:	mov	r0, r6
   22d7c:	bl	113c4 <memmove@plt>
   22d80:	ldr	r3, [r7, #28]
   22d84:	mov	r0, r4
   22d88:	add	r3, r3, r5
   22d8c:	str	r3, [r7, #28]
   22d90:	mov	r2, r5
   22d94:	mov	r1, sl
   22d98:	mov	r4, r6
   22d9c:	bl	11598 <memset@plt>
   22da0:	b	22968 <argp_error@@Base+0x1aec>
   22da4:	add	r8, r2, #1
   22da8:	b	22a88 <argp_error@@Base+0x1c0c>
   22dac:	mov	r3, #0
   22db0:	str	r3, [r7, #20]
   22db4:	add	r4, r8, #1
   22db8:	ldr	r9, [r7, #28]
   22dbc:	b	228f8 <argp_error@@Base+0x1a7c>
   22dc0:	ldr	r1, [r7, #32]
   22dc4:	sub	r1, r1, r6
   22dc8:	cmp	r3, r1
   22dcc:	ble	22b30 <argp_error@@Base+0x1cb4>
   22dd0:	b	22bbc <argp_error@@Base+0x1d40>
   22dd4:	sub	r9, r9, r6
   22dd8:	mov	r1, r6
   22ddc:	mov	r2, r9
   22de0:	add	r0, r8, r0
   22de4:	bl	113c4 <memmove@plt>
   22de8:	ldr	r1, [r7, #12]
   22dec:	mov	r3, #10
   22df0:	add	r6, r1, #1
   22df4:	add	r6, r8, r6
   22df8:	add	r9, r6, r9
   22dfc:	sub	fp, r9, r4
   22e00:	add	r5, r8, #1
   22e04:	strb	r3, [r8]
   22e08:	sub	r9, r6, r4
   22e0c:	mov	r2, r4
   22e10:	b	22b24 <argp_error@@Base+0x1ca8>
   22e14:	mov	r1, #10
   22e18:	bl	115e0 <__overflow@plt>
   22e1c:	b	22b0c <argp_error@@Base+0x1c90>
   22e20:	add	r3, r8, fp
   22e24:	sub	r6, r6, r3
   22e28:	add	r9, r9, r6
   22e2c:	str	r9, [r7, #28]
   22e30:	str	r3, [r7, #20]
   22e34:	b	229d0 <argp_error@@Base+0x1b54>
   22e38:	str	r3, [r7, #20]
   22e3c:	ldr	r9, [r7, #28]
   22e40:	b	229d0 <argp_error@@Base+0x1b54>
   22e44:	push	{r4, lr}
   22e48:	mov	r4, r0
   22e4c:	bl	228d8 <argp_error@@Base+0x1a5c>
   22e50:	ldr	r2, [r4, #28]
   22e54:	ldr	r0, [r4, #24]
   22e58:	cmp	r2, r0
   22e5c:	bls	22e74 <argp_error@@Base+0x1ff8>
   22e60:	sub	r2, r2, r0
   22e64:	ldr	r3, [r4]
   22e68:	mov	r1, #1
   22e6c:	bl	11418 <fwrite_unlocked@plt>
   22e70:	ldr	r0, [r4, #24]
   22e74:	bl	1acdc <argp_parse@@Base+0xf7c>
   22e78:	mov	r0, r4
   22e7c:	pop	{r4, lr}
   22e80:	b	1acdc <argp_parse@@Base+0xf7c>
   22e84:	ldr	r3, [r0, #32]
   22e88:	ldr	r2, [r0, #28]
   22e8c:	sub	r3, r3, r2
   22e90:	cmp	r3, r1
   22e94:	bcc	22ea4 <argp_error@@Base+0x2028>
   22e98:	mov	r3, #1
   22e9c:	mov	r0, r3
   22ea0:	bx	lr
   22ea4:	push	{r4, r5, r6, lr}
   22ea8:	mov	r4, r0
   22eac:	mov	r5, r1
   22eb0:	bl	228d8 <argp_error@@Base+0x1a5c>
   22eb4:	ldr	r3, [r4, #24]
   22eb8:	ldr	r2, [r4, #28]
   22ebc:	mov	r0, r3
   22ec0:	sub	r2, r2, r3
   22ec4:	mov	r1, #1
   22ec8:	ldr	r3, [r4]
   22ecc:	bl	11418 <fwrite_unlocked@plt>
   22ed0:	ldr	r2, [r4, #28]
   22ed4:	ldr	r3, [r4, #24]
   22ed8:	sub	r1, r2, r3
   22edc:	cmp	r0, r1
   22ee0:	bne	22f28 <argp_error@@Base+0x20ac>
   22ee4:	ldr	r1, [r4, #32]
   22ee8:	mov	r2, #0
   22eec:	sub	r1, r1, r3
   22ef0:	cmp	r5, r1
   22ef4:	str	r3, [r4, #28]
   22ef8:	str	r2, [r4, #16]
   22efc:	bls	22f1c <argp_error@@Base+0x20a0>
   22f00:	adds	r5, r5, r1
   22f04:	bcc	22f58 <argp_error@@Base+0x20dc>
   22f08:	bl	11568 <__errno_location@plt>
   22f0c:	mov	r2, #12
   22f10:	mov	r3, #0
   22f14:	str	r2, [r0]
   22f18:	b	22f20 <argp_error@@Base+0x20a4>
   22f1c:	mov	r3, #1
   22f20:	mov	r0, r3
   22f24:	pop	{r4, r5, r6, pc}
   22f28:	ldr	r1, [r4, #16]
   22f2c:	sub	r2, r2, r0
   22f30:	sub	r1, r1, r0
   22f34:	str	r2, [r4, #28]
   22f38:	str	r1, [r4, #16]
   22f3c:	sub	r2, r2, r3
   22f40:	add	r1, r3, r0
   22f44:	mov	r0, r3
   22f48:	bl	113c4 <memmove@plt>
   22f4c:	mov	r3, #0
   22f50:	mov	r0, r3
   22f54:	pop	{r4, r5, r6, pc}
   22f58:	mov	r0, r3
   22f5c:	mov	r1, r5
   22f60:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   22f64:	cmp	r0, #0
   22f68:	beq	22f08 <argp_error@@Base+0x208c>
   22f6c:	add	r5, r0, r5
   22f70:	mov	r3, #1
   22f74:	str	r5, [r4, #32]
   22f78:	str	r0, [r4, #24]
   22f7c:	str	r0, [r4, #28]
   22f80:	b	22f20 <argp_error@@Base+0x20a4>
   22f84:	push	{r1, r2, r3}
   22f88:	push	{r4, r5, r6, r7, r8, r9, lr}
   22f8c:	sub	sp, sp, #8
   22f90:	mov	r5, r0
   22f94:	ldr	r7, [sp, #36]	; 0x24
   22f98:	mov	r4, #150	; 0x96
   22f9c:	mov	r8, #1
   22fa0:	mov	r9, #0
   22fa4:	add	r6, sp, #40	; 0x28
   22fa8:	ldr	r1, [r5, #32]
   22fac:	ldr	r0, [r5, #28]
   22fb0:	sub	r3, r1, r0
   22fb4:	cmp	r4, r3
   22fb8:	bhi	23000 <argp_error@@Base+0x2184>
   22fbc:	sub	r4, r1, r0
   22fc0:	mov	r1, r4
   22fc4:	mov	r3, r6
   22fc8:	mov	r2, r7
   22fcc:	str	r6, [sp, #4]
   22fd0:	bl	11640 <vsnprintf@plt>
   22fd4:	cmp	r4, r0
   22fd8:	bls	22ff8 <argp_error@@Base+0x217c>
   22fdc:	ldr	r3, [r5, #28]
   22fe0:	add	r3, r3, r0
   22fe4:	str	r3, [r5, #28]
   22fe8:	add	sp, sp, #8
   22fec:	pop	{r4, r5, r6, r7, r8, r9, lr}
   22ff0:	add	sp, sp, #12
   22ff4:	bx	lr
   22ff8:	add	r4, r0, #1
   22ffc:	b	22fa8 <argp_error@@Base+0x212c>
   23000:	mov	r0, r5
   23004:	bl	228d8 <argp_error@@Base+0x1a5c>
   23008:	ldr	r3, [r5, #24]
   2300c:	ldr	r2, [r5, #28]
   23010:	mov	r0, r3
   23014:	sub	r2, r2, r3
   23018:	mov	r1, r8
   2301c:	ldr	r3, [r5]
   23020:	bl	11418 <fwrite_unlocked@plt>
   23024:	ldr	r2, [r5, #28]
   23028:	ldr	r3, [r5, #24]
   2302c:	sub	r1, r2, r3
   23030:	cmp	r0, r1
   23034:	bne	2307c <argp_error@@Base+0x2200>
   23038:	ldr	r1, [r5, #32]
   2303c:	str	r3, [r5, #28]
   23040:	sub	r0, r1, r3
   23044:	cmp	r4, r0
   23048:	str	r9, [r5, #16]
   2304c:	movls	r0, r3
   23050:	bls	22fbc <argp_error@@Base+0x2140>
   23054:	adds	r4, r4, r0
   23058:	bcc	230a4 <argp_error@@Base+0x2228>
   2305c:	bl	11568 <__errno_location@plt>
   23060:	mov	r3, #12
   23064:	str	r3, [r0]
   23068:	mvn	r0, #0
   2306c:	add	sp, sp, #8
   23070:	pop	{r4, r5, r6, r7, r8, r9, lr}
   23074:	add	sp, sp, #12
   23078:	bx	lr
   2307c:	ldr	r1, [r5, #16]
   23080:	sub	r2, r2, r0
   23084:	sub	r1, r1, r0
   23088:	str	r2, [r5, #28]
   2308c:	str	r1, [r5, #16]
   23090:	sub	r2, r2, r3
   23094:	add	r1, r3, r0
   23098:	mov	r0, r3
   2309c:	bl	113c4 <memmove@plt>
   230a0:	b	23068 <argp_error@@Base+0x21ec>
   230a4:	mov	r1, r4
   230a8:	mov	r0, r3
   230ac:	bl	1cadc <_obstack_memory_used@@Base+0x18d8>
   230b0:	cmp	r0, #0
   230b4:	add	r1, r0, r4
   230b8:	beq	2305c <argp_error@@Base+0x21e0>
   230bc:	str	r0, [r5, #24]
   230c0:	str	r1, [r5, #32]
   230c4:	str	r0, [r5, #28]
   230c8:	b	22fbc <argp_error@@Base+0x2140>
   230cc:	subs	r2, r1, #1
   230d0:	bxeq	lr
   230d4:	bcc	232ac <argp_error@@Base+0x2430>
   230d8:	cmp	r0, r1
   230dc:	bls	23290 <argp_error@@Base+0x2414>
   230e0:	tst	r1, r2
   230e4:	beq	2329c <argp_error@@Base+0x2420>
   230e8:	clz	r3, r0
   230ec:	clz	r2, r1
   230f0:	sub	r3, r2, r3
   230f4:	rsbs	r3, r3, #31
   230f8:	addne	r3, r3, r3, lsl #1
   230fc:	mov	r2, #0
   23100:	addne	pc, pc, r3, lsl #2
   23104:	nop			; (mov r0, r0)
   23108:	cmp	r0, r1, lsl #31
   2310c:	adc	r2, r2, r2
   23110:	subcs	r0, r0, r1, lsl #31
   23114:	cmp	r0, r1, lsl #30
   23118:	adc	r2, r2, r2
   2311c:	subcs	r0, r0, r1, lsl #30
   23120:	cmp	r0, r1, lsl #29
   23124:	adc	r2, r2, r2
   23128:	subcs	r0, r0, r1, lsl #29
   2312c:	cmp	r0, r1, lsl #28
   23130:	adc	r2, r2, r2
   23134:	subcs	r0, r0, r1, lsl #28
   23138:	cmp	r0, r1, lsl #27
   2313c:	adc	r2, r2, r2
   23140:	subcs	r0, r0, r1, lsl #27
   23144:	cmp	r0, r1, lsl #26
   23148:	adc	r2, r2, r2
   2314c:	subcs	r0, r0, r1, lsl #26
   23150:	cmp	r0, r1, lsl #25
   23154:	adc	r2, r2, r2
   23158:	subcs	r0, r0, r1, lsl #25
   2315c:	cmp	r0, r1, lsl #24
   23160:	adc	r2, r2, r2
   23164:	subcs	r0, r0, r1, lsl #24
   23168:	cmp	r0, r1, lsl #23
   2316c:	adc	r2, r2, r2
   23170:	subcs	r0, r0, r1, lsl #23
   23174:	cmp	r0, r1, lsl #22
   23178:	adc	r2, r2, r2
   2317c:	subcs	r0, r0, r1, lsl #22
   23180:	cmp	r0, r1, lsl #21
   23184:	adc	r2, r2, r2
   23188:	subcs	r0, r0, r1, lsl #21
   2318c:	cmp	r0, r1, lsl #20
   23190:	adc	r2, r2, r2
   23194:	subcs	r0, r0, r1, lsl #20
   23198:	cmp	r0, r1, lsl #19
   2319c:	adc	r2, r2, r2
   231a0:	subcs	r0, r0, r1, lsl #19
   231a4:	cmp	r0, r1, lsl #18
   231a8:	adc	r2, r2, r2
   231ac:	subcs	r0, r0, r1, lsl #18
   231b0:	cmp	r0, r1, lsl #17
   231b4:	adc	r2, r2, r2
   231b8:	subcs	r0, r0, r1, lsl #17
   231bc:	cmp	r0, r1, lsl #16
   231c0:	adc	r2, r2, r2
   231c4:	subcs	r0, r0, r1, lsl #16
   231c8:	cmp	r0, r1, lsl #15
   231cc:	adc	r2, r2, r2
   231d0:	subcs	r0, r0, r1, lsl #15
   231d4:	cmp	r0, r1, lsl #14
   231d8:	adc	r2, r2, r2
   231dc:	subcs	r0, r0, r1, lsl #14
   231e0:	cmp	r0, r1, lsl #13
   231e4:	adc	r2, r2, r2
   231e8:	subcs	r0, r0, r1, lsl #13
   231ec:	cmp	r0, r1, lsl #12
   231f0:	adc	r2, r2, r2
   231f4:	subcs	r0, r0, r1, lsl #12
   231f8:	cmp	r0, r1, lsl #11
   231fc:	adc	r2, r2, r2
   23200:	subcs	r0, r0, r1, lsl #11
   23204:	cmp	r0, r1, lsl #10
   23208:	adc	r2, r2, r2
   2320c:	subcs	r0, r0, r1, lsl #10
   23210:	cmp	r0, r1, lsl #9
   23214:	adc	r2, r2, r2
   23218:	subcs	r0, r0, r1, lsl #9
   2321c:	cmp	r0, r1, lsl #8
   23220:	adc	r2, r2, r2
   23224:	subcs	r0, r0, r1, lsl #8
   23228:	cmp	r0, r1, lsl #7
   2322c:	adc	r2, r2, r2
   23230:	subcs	r0, r0, r1, lsl #7
   23234:	cmp	r0, r1, lsl #6
   23238:	adc	r2, r2, r2
   2323c:	subcs	r0, r0, r1, lsl #6
   23240:	cmp	r0, r1, lsl #5
   23244:	adc	r2, r2, r2
   23248:	subcs	r0, r0, r1, lsl #5
   2324c:	cmp	r0, r1, lsl #4
   23250:	adc	r2, r2, r2
   23254:	subcs	r0, r0, r1, lsl #4
   23258:	cmp	r0, r1, lsl #3
   2325c:	adc	r2, r2, r2
   23260:	subcs	r0, r0, r1, lsl #3
   23264:	cmp	r0, r1, lsl #2
   23268:	adc	r2, r2, r2
   2326c:	subcs	r0, r0, r1, lsl #2
   23270:	cmp	r0, r1, lsl #1
   23274:	adc	r2, r2, r2
   23278:	subcs	r0, r0, r1, lsl #1
   2327c:	cmp	r0, r1
   23280:	adc	r2, r2, r2
   23284:	subcs	r0, r0, r1
   23288:	mov	r0, r2
   2328c:	bx	lr
   23290:	moveq	r0, #1
   23294:	movne	r0, #0
   23298:	bx	lr
   2329c:	clz	r2, r1
   232a0:	rsb	r2, r2, #31
   232a4:	lsr	r0, r0, r2
   232a8:	bx	lr
   232ac:	cmp	r0, #0
   232b0:	mvnne	r0, #0
   232b4:	b	23518 <argp_error@@Base+0x269c>
   232b8:	cmp	r1, #0
   232bc:	beq	232ac <argp_error@@Base+0x2430>
   232c0:	push	{r0, r1, lr}
   232c4:	bl	230cc <argp_error@@Base+0x2250>
   232c8:	pop	{r1, r2, lr}
   232cc:	mul	r3, r2, r0
   232d0:	sub	r1, r1, r3
   232d4:	bx	lr
   232d8:	cmp	r1, #0
   232dc:	beq	234e8 <argp_error@@Base+0x266c>
   232e0:	eor	ip, r0, r1
   232e4:	rsbmi	r1, r1, #0
   232e8:	subs	r2, r1, #1
   232ec:	beq	234b4 <argp_error@@Base+0x2638>
   232f0:	movs	r3, r0
   232f4:	rsbmi	r3, r0, #0
   232f8:	cmp	r3, r1
   232fc:	bls	234c0 <argp_error@@Base+0x2644>
   23300:	tst	r1, r2
   23304:	beq	234d0 <argp_error@@Base+0x2654>
   23308:	clz	r2, r3
   2330c:	clz	r0, r1
   23310:	sub	r2, r0, r2
   23314:	rsbs	r2, r2, #31
   23318:	addne	r2, r2, r2, lsl #1
   2331c:	mov	r0, #0
   23320:	addne	pc, pc, r2, lsl #2
   23324:	nop			; (mov r0, r0)
   23328:	cmp	r3, r1, lsl #31
   2332c:	adc	r0, r0, r0
   23330:	subcs	r3, r3, r1, lsl #31
   23334:	cmp	r3, r1, lsl #30
   23338:	adc	r0, r0, r0
   2333c:	subcs	r3, r3, r1, lsl #30
   23340:	cmp	r3, r1, lsl #29
   23344:	adc	r0, r0, r0
   23348:	subcs	r3, r3, r1, lsl #29
   2334c:	cmp	r3, r1, lsl #28
   23350:	adc	r0, r0, r0
   23354:	subcs	r3, r3, r1, lsl #28
   23358:	cmp	r3, r1, lsl #27
   2335c:	adc	r0, r0, r0
   23360:	subcs	r3, r3, r1, lsl #27
   23364:	cmp	r3, r1, lsl #26
   23368:	adc	r0, r0, r0
   2336c:	subcs	r3, r3, r1, lsl #26
   23370:	cmp	r3, r1, lsl #25
   23374:	adc	r0, r0, r0
   23378:	subcs	r3, r3, r1, lsl #25
   2337c:	cmp	r3, r1, lsl #24
   23380:	adc	r0, r0, r0
   23384:	subcs	r3, r3, r1, lsl #24
   23388:	cmp	r3, r1, lsl #23
   2338c:	adc	r0, r0, r0
   23390:	subcs	r3, r3, r1, lsl #23
   23394:	cmp	r3, r1, lsl #22
   23398:	adc	r0, r0, r0
   2339c:	subcs	r3, r3, r1, lsl #22
   233a0:	cmp	r3, r1, lsl #21
   233a4:	adc	r0, r0, r0
   233a8:	subcs	r3, r3, r1, lsl #21
   233ac:	cmp	r3, r1, lsl #20
   233b0:	adc	r0, r0, r0
   233b4:	subcs	r3, r3, r1, lsl #20
   233b8:	cmp	r3, r1, lsl #19
   233bc:	adc	r0, r0, r0
   233c0:	subcs	r3, r3, r1, lsl #19
   233c4:	cmp	r3, r1, lsl #18
   233c8:	adc	r0, r0, r0
   233cc:	subcs	r3, r3, r1, lsl #18
   233d0:	cmp	r3, r1, lsl #17
   233d4:	adc	r0, r0, r0
   233d8:	subcs	r3, r3, r1, lsl #17
   233dc:	cmp	r3, r1, lsl #16
   233e0:	adc	r0, r0, r0
   233e4:	subcs	r3, r3, r1, lsl #16
   233e8:	cmp	r3, r1, lsl #15
   233ec:	adc	r0, r0, r0
   233f0:	subcs	r3, r3, r1, lsl #15
   233f4:	cmp	r3, r1, lsl #14
   233f8:	adc	r0, r0, r0
   233fc:	subcs	r3, r3, r1, lsl #14
   23400:	cmp	r3, r1, lsl #13
   23404:	adc	r0, r0, r0
   23408:	subcs	r3, r3, r1, lsl #13
   2340c:	cmp	r3, r1, lsl #12
   23410:	adc	r0, r0, r0
   23414:	subcs	r3, r3, r1, lsl #12
   23418:	cmp	r3, r1, lsl #11
   2341c:	adc	r0, r0, r0
   23420:	subcs	r3, r3, r1, lsl #11
   23424:	cmp	r3, r1, lsl #10
   23428:	adc	r0, r0, r0
   2342c:	subcs	r3, r3, r1, lsl #10
   23430:	cmp	r3, r1, lsl #9
   23434:	adc	r0, r0, r0
   23438:	subcs	r3, r3, r1, lsl #9
   2343c:	cmp	r3, r1, lsl #8
   23440:	adc	r0, r0, r0
   23444:	subcs	r3, r3, r1, lsl #8
   23448:	cmp	r3, r1, lsl #7
   2344c:	adc	r0, r0, r0
   23450:	subcs	r3, r3, r1, lsl #7
   23454:	cmp	r3, r1, lsl #6
   23458:	adc	r0, r0, r0
   2345c:	subcs	r3, r3, r1, lsl #6
   23460:	cmp	r3, r1, lsl #5
   23464:	adc	r0, r0, r0
   23468:	subcs	r3, r3, r1, lsl #5
   2346c:	cmp	r3, r1, lsl #4
   23470:	adc	r0, r0, r0
   23474:	subcs	r3, r3, r1, lsl #4
   23478:	cmp	r3, r1, lsl #3
   2347c:	adc	r0, r0, r0
   23480:	subcs	r3, r3, r1, lsl #3
   23484:	cmp	r3, r1, lsl #2
   23488:	adc	r0, r0, r0
   2348c:	subcs	r3, r3, r1, lsl #2
   23490:	cmp	r3, r1, lsl #1
   23494:	adc	r0, r0, r0
   23498:	subcs	r3, r3, r1, lsl #1
   2349c:	cmp	r3, r1
   234a0:	adc	r0, r0, r0
   234a4:	subcs	r3, r3, r1
   234a8:	cmp	ip, #0
   234ac:	rsbmi	r0, r0, #0
   234b0:	bx	lr
   234b4:	teq	ip, r0
   234b8:	rsbmi	r0, r0, #0
   234bc:	bx	lr
   234c0:	movcc	r0, #0
   234c4:	asreq	r0, ip, #31
   234c8:	orreq	r0, r0, #1
   234cc:	bx	lr
   234d0:	clz	r2, r1
   234d4:	rsb	r2, r2, #31
   234d8:	cmp	ip, #0
   234dc:	lsr	r0, r3, r2
   234e0:	rsbmi	r0, r0, #0
   234e4:	bx	lr
   234e8:	cmp	r0, #0
   234ec:	mvngt	r0, #-2147483648	; 0x80000000
   234f0:	movlt	r0, #-2147483648	; 0x80000000
   234f4:	b	23518 <argp_error@@Base+0x269c>
   234f8:	cmp	r1, #0
   234fc:	beq	234e8 <argp_error@@Base+0x266c>
   23500:	push	{r0, r1, lr}
   23504:	bl	232e0 <argp_error@@Base+0x2464>
   23508:	pop	{r1, r2, lr}
   2350c:	mul	r3, r2, r0
   23510:	sub	r1, r1, r3
   23514:	bx	lr
   23518:	push	{r1, lr}
   2351c:	mov	r0, #8
   23520:	bl	1137c <raise@plt>
   23524:	pop	{r1, pc}
   23528:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2352c:	mov	r7, r0
   23530:	ldr	r6, [pc, #72]	; 23580 <argp_error@@Base+0x2704>
   23534:	ldr	r5, [pc, #72]	; 23584 <argp_error@@Base+0x2708>
   23538:	add	r6, pc, r6
   2353c:	add	r5, pc, r5
   23540:	sub	r6, r6, r5
   23544:	mov	r8, r1
   23548:	mov	r9, r2
   2354c:	bl	1132c <calloc@plt-0x20>
   23550:	asrs	r6, r6, #2
   23554:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23558:	mov	r4, #0
   2355c:	add	r4, r4, #1
   23560:	ldr	r3, [r5], #4
   23564:	mov	r2, r9
   23568:	mov	r1, r8
   2356c:	mov	r0, r7
   23570:	blx	r3
   23574:	cmp	r6, r4
   23578:	bne	2355c <argp_error@@Base+0x26e0>
   2357c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23580:	ldrdeq	r3, [r1], -r0
   23584:	andeq	r3, r1, r8, asr #19
   23588:	bx	lr

Disassembly of section .fini:

0002358c <.fini>:
   2358c:	push	{r3, lr}
   23590:	pop	{r3, pc}
