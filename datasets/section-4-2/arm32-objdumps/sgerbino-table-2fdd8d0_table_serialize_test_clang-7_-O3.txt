
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011f60 <.init>:
   11f60:	push	{r3, lr}
   11f64:	bl	1207c <_start@@Base+0x3c>
   11f68:	pop	{r3, pc}

Disassembly of section .plt:

00011f6c <strcmp@plt-0x14>:
   11f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f70:	ldr	lr, [pc, #4]	; 11f7c <strcmp@plt-0x4>
   11f74:	add	lr, pc, lr
   11f78:	ldr	pc, [lr, #8]!
   11f7c:	andeq	r5, r1, r4, lsl #1

00011f80 <strcmp@plt>:
   11f80:	add	ip, pc, #0, 12
   11f84:	add	ip, ip, #86016	; 0x15000
   11f88:	ldr	pc, [ip, #132]!	; 0x84

00011f8c <printf@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #86016	; 0x15000
   11f94:	ldr	pc, [ip, #124]!	; 0x7c

00011f98 <free@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #86016	; 0x15000
   11fa0:	ldr	pc, [ip, #116]!	; 0x74

00011fa4 <time@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #86016	; 0x15000
   11fac:	ldr	pc, [ip, #108]!	; 0x6c

00011fb0 <realloc@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #86016	; 0x15000
   11fb8:	ldr	pc, [ip, #100]!	; 0x64

00011fbc <strcpy@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #86016	; 0x15000
   11fc4:	ldr	pc, [ip, #92]!	; 0x5c

00011fc8 <malloc@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #86016	; 0x15000
   11fd0:	ldr	pc, [ip, #84]!	; 0x54

00011fd4 <__libc_start_main@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #86016	; 0x15000
   11fdc:	ldr	pc, [ip, #76]!	; 0x4c

00011fe0 <__gmon_start__@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #86016	; 0x15000
   11fe8:	ldr	pc, [ip, #68]!	; 0x44

00011fec <strlen@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #86016	; 0x15000
   11ff4:	ldr	pc, [ip, #60]!	; 0x3c

00011ff8 <srand@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #86016	; 0x15000
   12000:	ldr	pc, [ip, #52]!	; 0x34

00012004 <snprintf@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #86016	; 0x15000
   1200c:	ldr	pc, [ip, #44]!	; 0x2c

00012010 <__isoc99_sscanf@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #86016	; 0x15000
   12018:	ldr	pc, [ip, #36]!	; 0x24

0001201c <strncpy@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #86016	; 0x15000
   12024:	ldr	pc, [ip, #28]!

00012028 <rand@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #86016	; 0x15000
   12030:	ldr	pc, [ip, #20]!

00012034 <abort@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #86016	; 0x15000
   1203c:	ldr	pc, [ip, #12]!

Disassembly of section .text:

00012040 <_start@@Base>:
   12040:	mov	fp, #0
   12044:	mov	lr, #0
   12048:	pop	{r1}		; (ldr r1, [sp], #4)
   1204c:	mov	r2, sp
   12050:	push	{r2}		; (str r2, [sp, #-4]!)
   12054:	push	{r0}		; (str r0, [sp, #-4]!)
   12058:	ldr	ip, [pc, #16]	; 12070 <_start@@Base+0x30>
   1205c:	push	{ip}		; (str ip, [sp, #-4]!)
   12060:	ldr	r0, [pc, #12]	; 12074 <_start@@Base+0x34>
   12064:	ldr	r3, [pc, #12]	; 12078 <_start@@Base+0x38>
   12068:	bl	11fd4 <__libc_start_main@plt>
   1206c:	bl	12034 <abort@plt>
   12070:	andeq	r6, r1, r4, asr #8
   12074:	andeq	r2, r1, r0, lsr r1
   12078:	andeq	r6, r1, r4, ror #7
   1207c:	ldr	r3, [pc, #20]	; 12098 <_start@@Base+0x58>
   12080:	ldr	r2, [pc, #20]	; 1209c <_start@@Base+0x5c>
   12084:	add	r3, pc, r3
   12088:	ldr	r2, [r3, r2]
   1208c:	cmp	r2, #0
   12090:	bxeq	lr
   12094:	b	11fe0 <__gmon_start__@plt>
   12098:	andeq	r4, r1, r4, ror pc
   1209c:	andeq	r0, r0, ip, asr #32
   120a0:	ldr	r0, [pc, #24]	; 120c0 <_start@@Base+0x80>
   120a4:	ldr	r3, [pc, #24]	; 120c4 <_start@@Base+0x84>
   120a8:	cmp	r3, r0
   120ac:	bxeq	lr
   120b0:	ldr	r3, [pc, #16]	; 120c8 <_start@@Base+0x88>
   120b4:	cmp	r3, #0
   120b8:	bxeq	lr
   120bc:	bx	r3
   120c0:	andeq	r7, r2, r8, asr r0
   120c4:	andeq	r7, r2, r8, asr r0
   120c8:	andeq	r0, r0, r0
   120cc:	ldr	r0, [pc, #36]	; 120f8 <_start@@Base+0xb8>
   120d0:	ldr	r1, [pc, #36]	; 120fc <_start@@Base+0xbc>
   120d4:	sub	r1, r1, r0
   120d8:	asr	r1, r1, #2
   120dc:	add	r1, r1, r1, lsr #31
   120e0:	asrs	r1, r1, #1
   120e4:	bxeq	lr
   120e8:	ldr	r3, [pc, #16]	; 12100 <_start@@Base+0xc0>
   120ec:	cmp	r3, #0
   120f0:	bxeq	lr
   120f4:	bx	r3
   120f8:	andeq	r7, r2, r8, asr r0
   120fc:	andeq	r7, r2, r8, asr r0
   12100:	andeq	r0, r0, r0
   12104:	push	{r4, lr}
   12108:	ldr	r4, [pc, #24]	; 12128 <_start@@Base+0xe8>
   1210c:	ldrb	r3, [r4]
   12110:	cmp	r3, #0
   12114:	popne	{r4, pc}
   12118:	bl	120a0 <_start@@Base+0x60>
   1211c:	mov	r3, #1
   12120:	strb	r3, [r4]
   12124:	pop	{r4, pc}
   12128:	andeq	r7, r2, r8, asr r0
   1212c:	b	120cc <_start@@Base+0x8c>

00012130 <main@@Base>:
   12130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12134:	add	fp, sp, #28
   12138:	sub	sp, sp, #4
   1213c:	vpush	{d8}
   12140:	sub	sp, sp, #744	; 0x2e8
   12144:	sub	sp, sp, #99328	; 0x18400
   12148:	sub	r0, fp, #104	; 0x68
   1214c:	bl	11fa4 <time@plt>
   12150:	bl	11ff8 <srand@plt>
   12154:	bl	12028 <rand@plt>
   12158:	sub	r4, fp, #100	; 0x64
   1215c:	mov	r5, r0
   12160:	mov	r0, r4
   12164:	bl	128b8 <table_init@@Base>
   12168:	movw	r0, #34079	; 0x851f
   1216c:	mov	r2, #0
   12170:	movt	r0, #20971	; 0x51eb
   12174:	smmul	r0, r5, r0
   12178:	asr	r1, r0, #5
   1217c:	add	r0, r1, r0, lsr #31
   12180:	mov	r1, #100	; 0x64
   12184:	mls	r5, r0, r1, r5
   12188:	movw	r1, #25684	; 0x6454
   1218c:	mov	r0, r4
   12190:	movt	r1, #1
   12194:	bl	13444 <table_add_column@@Base>
   12198:	movw	r1, #25687	; 0x6457
   1219c:	mov	r8, r0
   121a0:	mov	r0, r4
   121a4:	mov	r2, #21
   121a8:	movt	r1, #1
   121ac:	bl	13444 <table_add_column@@Base>
   121b0:	movw	r9, #25811	; 0x64d3
   121b4:	add	r6, r5, #99	; 0x63
   121b8:	mov	sl, r0
   121bc:	mvn	r7, #0
   121c0:	add	r5, sp, #8
   121c4:	movt	r9, #1
   121c8:	add	r7, r7, #1
   121cc:	mov	r0, r5
   121d0:	mov	r1, #255	; 0xff
   121d4:	mov	r2, r9
   121d8:	mov	r3, r7
   121dc:	bl	12004 <snprintf@plt>
   121e0:	mov	r0, r4
   121e4:	bl	14110 <table_add_row@@Base>
   121e8:	mov	r0, r4
   121ec:	mov	r1, r7
   121f0:	mov	r2, r8
   121f4:	mov	r3, r7
   121f8:	bl	14668 <table_set_int@@Base>
   121fc:	mov	r0, r4
   12200:	mov	r1, r7
   12204:	mov	r2, sl
   12208:	mov	r3, r5
   1220c:	bl	15024 <table_set_string@@Base>
   12210:	cmp	r7, r6
   12214:	blt	121c8 <main@@Base+0x98>
   12218:	movw	r6, #34464	; 0x86a0
   1221c:	sub	r5, fp, #100	; 0x64
   12220:	add	r4, sp, #8
   12224:	movt	r6, #1
   12228:	mov	r0, r5
   1222c:	mov	r1, r4
   12230:	mov	r2, r6
   12234:	bl	15208 <table_serialize@@Base>
   12238:	mov	r0, r4
   1223c:	mov	r1, r6
   12240:	bl	154c0 <table_deserialize@@Base>
   12244:	mov	r8, r0
   12248:	mov	r0, r5
   1224c:	bl	14108 <table_get_row_length@@Base>
   12250:	mov	r4, r0
   12254:	mov	r0, r8
   12258:	bl	14108 <table_get_row_length@@Base>
   1225c:	mov	r5, r0
   12260:	mov	r6, #0
   12264:	cmp	r0, r4
   12268:	str	r4, [sp, #4]
   1226c:	beq	12288 <main@@Base+0x158>
   12270:	ldr	r1, [sp, #4]
   12274:	movw	r0, #25693	; 0x645d
   12278:	mov	r2, r5
   1227c:	movt	r0, #1
   12280:	bl	11f8c <printf@plt>
   12284:	mvn	r6, #0
   12288:	sub	r0, fp, #100	; 0x64
   1228c:	bl	133b0 <table_get_column_length@@Base>
   12290:	mov	r7, r0
   12294:	mov	r0, r8
   12298:	bl	133b0 <table_get_column_length@@Base>
   1229c:	cmp	r0, r7
   122a0:	bne	12828 <main@@Base+0x6f8>
   122a4:	ldr	r0, [sp, #4]
   122a8:	str	r6, [sp]
   122ac:	cmp	r5, r0
   122b0:	bne	12844 <main@@Base+0x714>
   122b4:	cmp	r5, #1
   122b8:	blt	12844 <main@@Base+0x714>
   122bc:	mov	r6, #0
   122c0:	sub	r9, fp, #100	; 0x64
   122c4:	cmp	r7, #1
   122c8:	blt	12814 <main@@Base+0x6e4>
   122cc:	mov	sl, #0
   122d0:	mov	r0, r9
   122d4:	mov	r1, sl
   122d8:	bl	13430 <table_get_column_data_type@@Base>
   122dc:	cmp	r0, #23
   122e0:	bhi	12380 <main@@Base+0x250>
   122e4:	add	r1, pc, #0
   122e8:	ldr	pc, [r1, r0, lsl #2]
   122ec:	andeq	r2, r1, ip, asr #6
   122f0:	muleq	r1, r0, r3
   122f4:	andeq	r2, r1, r0, asr #7
   122f8:	strdeq	r2, [r1], -r0
   122fc:	andeq	r2, r1, r0, lsr #8
   12300:	andeq	r2, r1, r0, asr r4
   12304:	andeq	r2, r1, r0, lsl #9
   12308:			; <UNDEFINED> instruction: 0x000124b0
   1230c:	andeq	r2, r1, r0, ror #9
   12310:	andeq	r2, r1, ip, lsl #10
   12314:	andeq	r2, r1, r8, lsr r5
   12318:	andeq	r2, r1, r8, ror #10
   1231c:	muleq	r1, r8, r5
   12320:	andeq	r2, r1, r8, asr #11
   12324:	strdeq	r2, [r1], -r8
   12328:	andeq	r2, r1, r4, lsr #12
   1232c:	andeq	r2, r1, r0, ror #12
   12330:	muleq	r1, r4, r6
   12334:	andeq	r2, r1, r8, asr #13
   12338:	strdeq	r2, [r1], -ip
   1233c:	andeq	r2, r1, ip, lsr #14
   12340:	andeq	r2, r1, ip, asr r7
   12344:	muleq	r1, r8, r7
   12348:	andeq	r2, r1, ip, asr #15
   1234c:	mov	r0, r9
   12350:	mov	r1, r6
   12354:	mov	r2, sl
   12358:	bl	13e60 <table_get_int@@Base>
   1235c:	mov	r4, r8
   12360:	mov	r8, r0
   12364:	mov	r1, r6
   12368:	mov	r2, sl
   1236c:	mov	r0, r4
   12370:	bl	13e60 <table_get_int@@Base>
   12374:	cmp	r8, r0
   12378:	mov	r8, r4
   1237c:	bne	127f8 <main@@Base+0x6c8>
   12380:	add	sl, sl, #1
   12384:	cmp	sl, r7
   12388:	blt	122d0 <main@@Base+0x1a0>
   1238c:	b	12814 <main@@Base+0x6e4>
   12390:	mov	r0, r9
   12394:	mov	r1, r6
   12398:	mov	r2, sl
   1239c:	bl	13e78 <table_get_uint@@Base>
   123a0:	mov	r4, r0
   123a4:	mov	r0, r8
   123a8:	mov	r1, r6
   123ac:	mov	r2, sl
   123b0:	bl	13e78 <table_get_uint@@Base>
   123b4:	cmp	r4, r0
   123b8:	beq	12380 <main@@Base+0x250>
   123bc:	b	127f8 <main@@Base+0x6c8>
   123c0:	mov	r0, r9
   123c4:	mov	r1, r6
   123c8:	mov	r2, sl
   123cc:	bl	13e90 <table_get_int8@@Base>
   123d0:	mov	r4, r0
   123d4:	mov	r0, r8
   123d8:	mov	r1, r6
   123dc:	mov	r2, sl
   123e0:	bl	13e90 <table_get_int8@@Base>
   123e4:	cmp	r4, r0
   123e8:	beq	12380 <main@@Base+0x250>
   123ec:	b	127f8 <main@@Base+0x6c8>
   123f0:	mov	r0, r9
   123f4:	mov	r1, r6
   123f8:	mov	r2, sl
   123fc:	bl	13ea8 <table_get_uint8@@Base>
   12400:	mov	r4, r0
   12404:	mov	r0, r8
   12408:	mov	r1, r6
   1240c:	mov	r2, sl
   12410:	bl	13ea8 <table_get_uint8@@Base>
   12414:	cmp	r4, r0
   12418:	beq	12380 <main@@Base+0x250>
   1241c:	b	127f8 <main@@Base+0x6c8>
   12420:	mov	r0, r9
   12424:	mov	r1, r6
   12428:	mov	r2, sl
   1242c:	bl	13ec0 <table_get_int16@@Base>
   12430:	mov	r4, r0
   12434:	mov	r0, r8
   12438:	mov	r1, r6
   1243c:	mov	r2, sl
   12440:	bl	13ec0 <table_get_int16@@Base>
   12444:	cmp	r4, r0
   12448:	beq	12380 <main@@Base+0x250>
   1244c:	b	127f8 <main@@Base+0x6c8>
   12450:	mov	r0, r9
   12454:	mov	r1, r6
   12458:	mov	r2, sl
   1245c:	bl	13ed8 <table_get_uint16@@Base>
   12460:	mov	r4, r0
   12464:	mov	r0, r8
   12468:	mov	r1, r6
   1246c:	mov	r2, sl
   12470:	bl	13ed8 <table_get_uint16@@Base>
   12474:	cmp	r4, r0
   12478:	beq	12380 <main@@Base+0x250>
   1247c:	b	127f8 <main@@Base+0x6c8>
   12480:	mov	r0, r9
   12484:	mov	r1, r6
   12488:	mov	r2, sl
   1248c:	bl	13ef0 <table_get_int32@@Base>
   12490:	mov	r4, r0
   12494:	mov	r0, r8
   12498:	mov	r1, r6
   1249c:	mov	r2, sl
   124a0:	bl	13ef0 <table_get_int32@@Base>
   124a4:	cmp	r4, r0
   124a8:	beq	12380 <main@@Base+0x250>
   124ac:	b	127f8 <main@@Base+0x6c8>
   124b0:	mov	r0, r9
   124b4:	mov	r1, r6
   124b8:	mov	r2, sl
   124bc:	bl	13f08 <table_get_uint32@@Base>
   124c0:	mov	r4, r0
   124c4:	mov	r0, r8
   124c8:	mov	r1, r6
   124cc:	mov	r2, sl
   124d0:	bl	13f08 <table_get_uint32@@Base>
   124d4:	cmp	r4, r0
   124d8:	beq	12380 <main@@Base+0x250>
   124dc:	b	127f8 <main@@Base+0x6c8>
   124e0:	mov	r0, r9
   124e4:	mov	r1, r6
   124e8:	mov	r2, sl
   124ec:	bl	13f20 <table_get_int64@@Base>
   124f0:	mov	r4, r0
   124f4:	mov	r5, r1
   124f8:	mov	r0, r8
   124fc:	mov	r1, r6
   12500:	mov	r2, sl
   12504:	bl	13f20 <table_get_int64@@Base>
   12508:	b	1264c <main@@Base+0x51c>
   1250c:	mov	r0, r9
   12510:	mov	r1, r6
   12514:	mov	r2, sl
   12518:	bl	13f38 <table_get_uint64@@Base>
   1251c:	mov	r4, r0
   12520:	mov	r5, r1
   12524:	mov	r0, r8
   12528:	mov	r1, r6
   1252c:	mov	r2, sl
   12530:	bl	13f38 <table_get_uint64@@Base>
   12534:	b	1264c <main@@Base+0x51c>
   12538:	mov	r0, r9
   1253c:	mov	r1, r6
   12540:	mov	r2, sl
   12544:	bl	13f50 <table_get_short@@Base>
   12548:	mov	r4, r0
   1254c:	mov	r0, r8
   12550:	mov	r1, r6
   12554:	mov	r2, sl
   12558:	bl	13f50 <table_get_short@@Base>
   1255c:	cmp	r4, r0
   12560:	beq	12380 <main@@Base+0x250>
   12564:	b	127f8 <main@@Base+0x6c8>
   12568:	mov	r0, r9
   1256c:	mov	r1, r6
   12570:	mov	r2, sl
   12574:	bl	13f68 <table_get_ushort@@Base>
   12578:	mov	r4, r0
   1257c:	mov	r0, r8
   12580:	mov	r1, r6
   12584:	mov	r2, sl
   12588:	bl	13f68 <table_get_ushort@@Base>
   1258c:	cmp	r4, r0
   12590:	beq	12380 <main@@Base+0x250>
   12594:	b	127f8 <main@@Base+0x6c8>
   12598:	mov	r0, r9
   1259c:	mov	r1, r6
   125a0:	mov	r2, sl
   125a4:	bl	13f80 <table_get_long@@Base>
   125a8:	mov	r4, r0
   125ac:	mov	r0, r8
   125b0:	mov	r1, r6
   125b4:	mov	r2, sl
   125b8:	bl	13f80 <table_get_long@@Base>
   125bc:	cmp	r4, r0
   125c0:	beq	12380 <main@@Base+0x250>
   125c4:	b	127f8 <main@@Base+0x6c8>
   125c8:	mov	r0, r9
   125cc:	mov	r1, r6
   125d0:	mov	r2, sl
   125d4:	bl	13f98 <table_get_ulong@@Base>
   125d8:	mov	r4, r0
   125dc:	mov	r0, r8
   125e0:	mov	r1, r6
   125e4:	mov	r2, sl
   125e8:	bl	13f98 <table_get_ulong@@Base>
   125ec:	cmp	r4, r0
   125f0:	beq	12380 <main@@Base+0x250>
   125f4:	b	127f8 <main@@Base+0x6c8>
   125f8:	mov	r0, r9
   125fc:	mov	r1, r6
   12600:	mov	r2, sl
   12604:	bl	13fb0 <table_get_llong@@Base>
   12608:	mov	r4, r0
   1260c:	mov	r5, r1
   12610:	mov	r0, r8
   12614:	mov	r1, r6
   12618:	mov	r2, sl
   1261c:	bl	13fb0 <table_get_llong@@Base>
   12620:	b	1264c <main@@Base+0x51c>
   12624:	mov	r0, r9
   12628:	mov	r1, r6
   1262c:	mov	r2, sl
   12630:	bl	13fc8 <table_get_ullong@@Base>
   12634:	mov	r4, r0
   12638:	mov	r5, r1
   1263c:	mov	r0, r8
   12640:	mov	r1, r6
   12644:	mov	r2, sl
   12648:	bl	13fc8 <table_get_ullong@@Base>
   1264c:	eor	r1, r5, r1
   12650:	eor	r0, r4, r0
   12654:	orrs	r0, r0, r1
   12658:	beq	12380 <main@@Base+0x250>
   1265c:	b	127f8 <main@@Base+0x6c8>
   12660:	mov	r0, r9
   12664:	mov	r1, r6
   12668:	mov	r2, sl
   1266c:	bl	13fe0 <table_get_float@@Base>
   12670:	mov	r0, r8
   12674:	mov	r1, r6
   12678:	mov	r2, sl
   1267c:	vmov.f32	s16, s0
   12680:	bl	13fe0 <table_get_float@@Base>
   12684:	vcmp.f32	s16, s0
   12688:	vmrs	APSR_nzcv, fpscr
   1268c:	beq	12380 <main@@Base+0x250>
   12690:	b	127f8 <main@@Base+0x6c8>
   12694:	mov	r0, r9
   12698:	mov	r1, r6
   1269c:	mov	r2, sl
   126a0:	bl	13ff8 <table_get_double@@Base>
   126a4:	mov	r0, r8
   126a8:	mov	r1, r6
   126ac:	mov	r2, sl
   126b0:	vmov.f64	d8, d0
   126b4:	bl	13ff8 <table_get_double@@Base>
   126b8:	vcmp.f64	d8, d0
   126bc:	vmrs	APSR_nzcv, fpscr
   126c0:	beq	12380 <main@@Base+0x250>
   126c4:	b	127f8 <main@@Base+0x6c8>
   126c8:	mov	r0, r9
   126cc:	mov	r1, r6
   126d0:	mov	r2, sl
   126d4:	bl	14010 <table_get_ldouble@@Base>
   126d8:	mov	r0, r8
   126dc:	mov	r1, r6
   126e0:	mov	r2, sl
   126e4:	vmov.f64	d8, d0
   126e8:	bl	14010 <table_get_ldouble@@Base>
   126ec:	vcmp.f64	d8, d0
   126f0:	vmrs	APSR_nzcv, fpscr
   126f4:	beq	12380 <main@@Base+0x250>
   126f8:	b	127f8 <main@@Base+0x6c8>
   126fc:	mov	r0, r9
   12700:	mov	r1, r6
   12704:	mov	r2, sl
   12708:	bl	14028 <table_get_char@@Base>
   1270c:	mov	r4, r0
   12710:	mov	r0, r8
   12714:	mov	r1, r6
   12718:	mov	r2, sl
   1271c:	bl	14028 <table_get_char@@Base>
   12720:	cmp	r4, r0
   12724:	beq	12380 <main@@Base+0x250>
   12728:	b	127f8 <main@@Base+0x6c8>
   1272c:	mov	r0, r9
   12730:	mov	r1, r6
   12734:	mov	r2, sl
   12738:	bl	14040 <table_get_uchar@@Base>
   1273c:	mov	r4, r0
   12740:	mov	r0, r8
   12744:	mov	r1, r6
   12748:	mov	r2, sl
   1274c:	bl	14040 <table_get_uchar@@Base>
   12750:	cmp	r4, r0
   12754:	beq	12380 <main@@Base+0x250>
   12758:	b	127f8 <main@@Base+0x6c8>
   1275c:	mov	r0, r9
   12760:	mov	r1, r6
   12764:	mov	r2, sl
   12768:	bl	14058 <table_get_string@@Base>
   1276c:	mov	r4, r0
   12770:	mov	r0, r8
   12774:	mov	r1, r6
   12778:	mov	r2, sl
   1277c:	bl	14058 <table_get_string@@Base>
   12780:	mov	r1, r0
   12784:	mov	r0, r4
   12788:	bl	11f80 <strcmp@plt>
   1278c:	cmp	r0, #0
   12790:	beq	12380 <main@@Base+0x250>
   12794:	b	127f8 <main@@Base+0x6c8>
   12798:	mov	r0, r9
   1279c:	mov	r1, r6
   127a0:	mov	r2, sl
   127a4:	bl	13e48 <table_get_bool@@Base>
   127a8:	mov	r4, r0
   127ac:	mov	r0, r8
   127b0:	mov	r1, r6
   127b4:	mov	r2, sl
   127b8:	bl	13e48 <table_get_bool@@Base>
   127bc:	eor	r0, r4, r0
   127c0:	cmp	r0, #1
   127c4:	bne	12380 <main@@Base+0x250>
   127c8:	b	127f8 <main@@Base+0x6c8>
   127cc:	mov	r0, r9
   127d0:	mov	r1, r6
   127d4:	mov	r2, sl
   127d8:	bl	1406c <table_get_ptr@@Base>
   127dc:	mov	r4, r0
   127e0:	mov	r0, r8
   127e4:	mov	r1, r6
   127e8:	mov	r2, sl
   127ec:	bl	1406c <table_get_ptr@@Base>
   127f0:	cmp	r4, r0
   127f4:	beq	12380 <main@@Base+0x250>
   127f8:	movw	r0, #25814	; 0x64d6
   127fc:	mov	r1, r6
   12800:	mov	r2, sl
   12804:	movt	r0, #1
   12808:	bl	11f8c <printf@plt>
   1280c:	mvn	r0, #0
   12810:	str	r0, [sp]
   12814:	ldr	r0, [sp, #4]
   12818:	add	r6, r6, #1
   1281c:	cmp	r6, r0
   12820:	bne	122c4 <main@@Base+0x194>
   12824:	b	12844 <main@@Base+0x714>
   12828:	mov	r2, r0
   1282c:	movw	r0, #25752	; 0x6498
   12830:	mov	r1, r7
   12834:	movt	r0, #1
   12838:	bl	11f8c <printf@plt>
   1283c:	mvn	r0, #0
   12840:	str	r0, [sp]
   12844:	sub	r0, fp, #100	; 0x64
   12848:	bl	12914 <table_destroy@@Base>
   1284c:	mov	r0, r8
   12850:	bl	128f8 <table_delete@@Base>
   12854:	ldr	r0, [sp]
   12858:	sub	sp, fp, #40	; 0x28
   1285c:	vpop	{d8}
   12860:	add	sp, sp, #4
   12864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012868 <table_new@@Base>:
   12868:	push	{fp, lr}
   1286c:	mov	fp, sp
   12870:	mov	r0, #56	; 0x38
   12874:	bl	11fc8 <malloc@plt>
   12878:	mov	r1, #0
   1287c:	mov	r2, #10
   12880:	mov	r3, #20
   12884:	vmov.i32	q8, #0	; 0x00000000
   12888:	str	r1, [r0]
   1288c:	stmib	r0, {r1, r2}
   12890:	str	r1, [r0, #12]
   12894:	str	r1, [r0, #16]
   12898:	str	r1, [r0, #20]
   1289c:	str	r3, [r0, #24]
   128a0:	str	r1, [r0, #28]
   128a4:	str	r2, [r0, #48]	; 0x30
   128a8:	str	r1, [r0, #52]	; 0x34
   128ac:	add	r1, r0, #32
   128b0:	vst1.32	{d16-d17}, [r1]
   128b4:	pop	{fp, pc}

000128b8 <table_init@@Base>:
   128b8:	mov	r1, #0
   128bc:	mov	r2, #10
   128c0:	mov	r3, #20
   128c4:	vmov.i32	q8, #0	; 0x00000000
   128c8:	str	r1, [r0]
   128cc:	stmib	r0, {r1, r2}
   128d0:	str	r1, [r0, #12]
   128d4:	str	r1, [r0, #16]
   128d8:	str	r1, [r0, #20]
   128dc:	str	r3, [r0, #24]
   128e0:	str	r1, [r0, #28]
   128e4:	str	r2, [r0, #48]	; 0x30
   128e8:	str	r1, [r0, #52]	; 0x34
   128ec:	add	r0, r0, #32
   128f0:	vst1.32	{d16-d17}, [r0]
   128f4:	bx	lr

000128f8 <table_delete@@Base>:
   128f8:	push	{r4, sl, fp, lr}
   128fc:	add	fp, sp, #8
   12900:	mov	r4, r0
   12904:	bl	12914 <table_destroy@@Base>
   12908:	mov	r0, r4
   1290c:	pop	{r4, sl, fp, lr}
   12910:	b	11f98 <free@plt>

00012914 <table_destroy@@Base>:
   12914:	cmp	r0, #0
   12918:	bxeq	lr
   1291c:	push	{r4, r5, r6, sl, fp, lr}
   12920:	add	fp, sp, #16
   12924:	mvn	r1, #0
   12928:	mvn	r2, #0
   1292c:	mov	r3, #64	; 0x40
   12930:	mov	r4, r0
   12934:	bl	132bc <table_notify@@Base>
   12938:	mov	r0, r4
   1293c:	bl	14108 <table_get_row_length@@Base>
   12940:	cmp	r0, #1
   12944:	blt	12968 <table_destroy@@Base+0x54>
   12948:	mov	r5, r0
   1294c:	mov	r6, #0
   12950:	mov	r0, r4
   12954:	mov	r1, r6
   12958:	bl	140b0 <table_row_destroy@@Base>
   1295c:	add	r6, r6, #1
   12960:	cmp	r5, r6
   12964:	bne	12950 <table_destroy@@Base+0x3c>
   12968:	ldr	r0, [r4, #16]
   1296c:	cmp	r0, #0
   12970:	beq	12978 <table_destroy@@Base+0x64>
   12974:	bl	11f98 <free@plt>
   12978:	mov	r0, r4
   1297c:	bl	133b0 <table_get_column_length@@Base>
   12980:	cmp	r0, #1
   12984:	blt	129a8 <table_destroy@@Base+0x94>
   12988:	mov	r5, r0
   1298c:	mov	r6, #0
   12990:	mov	r0, r4
   12994:	mov	r1, r6
   12998:	bl	13398 <table_column_destroy@@Base>
   1299c:	add	r6, r6, #1
   129a0:	cmp	r5, r6
   129a4:	bne	12990 <table_destroy@@Base+0x7c>
   129a8:	ldr	r0, [r4]
   129ac:	cmp	r0, #0
   129b0:	beq	129b8 <table_destroy@@Base+0xa4>
   129b4:	bl	11f98 <free@plt>
   129b8:	ldr	r0, [r4, #36]	; 0x24
   129bc:	cmp	r0, #0
   129c0:	beq	129c8 <table_destroy@@Base+0xb4>
   129c4:	bl	11f98 <free@plt>
   129c8:	ldr	r0, [r4, #40]	; 0x28
   129cc:	cmp	r0, #0
   129d0:	beq	129d8 <table_destroy@@Base+0xc4>
   129d4:	bl	11f98 <free@plt>
   129d8:	ldr	r0, [r4, #44]	; 0x2c
   129dc:	cmp	r0, #0
   129e0:	pop	{r4, r5, r6, sl, fp, lr}
   129e4:	beq	129ec <table_destroy@@Base+0xd8>
   129e8:	b	11f98 <free@plt>
   129ec:	bx	lr

000129f0 <table_dupe@@Base>:
   129f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129f4:	add	fp, sp, #28
   129f8:	sub	sp, sp, #12
   129fc:	mov	r4, r0
   12a00:	bl	14108 <table_get_row_length@@Base>
   12a04:	mov	r8, r0
   12a08:	mov	r0, r4
   12a0c:	bl	133b0 <table_get_column_length@@Base>
   12a10:	mov	r6, r0
   12a14:	mov	r0, #56	; 0x38
   12a18:	bl	11fc8 <malloc@plt>
   12a1c:	mov	sl, r0
   12a20:	mov	r5, #0
   12a24:	mov	r0, #10
   12a28:	mov	r1, #20
   12a2c:	cmp	r6, #1
   12a30:	vmov.i32	q8, #0	; 0x00000000
   12a34:	str	r5, [sl]
   12a38:	str	r5, [sl, #4]
   12a3c:	str	r0, [sl, #8]
   12a40:	str	r5, [sl, #12]
   12a44:	str	r5, [sl, #16]
   12a48:	str	r5, [sl, #20]
   12a4c:	str	r1, [sl, #24]
   12a50:	str	r5, [sl, #28]
   12a54:	str	r0, [sl, #48]	; 0x30
   12a58:	add	r0, sl, #32
   12a5c:	str	r5, [sl, #52]	; 0x34
   12a60:	vst1.32	{d16-d17}, [r0]
   12a64:	blt	12aa0 <table_dupe@@Base+0xb0>
   12a68:	mov	r0, r4
   12a6c:	mov	r1, r5
   12a70:	bl	13420 <table_get_column_name@@Base>
   12a74:	mov	r7, r0
   12a78:	mov	r0, r4
   12a7c:	mov	r1, r5
   12a80:	bl	13430 <table_get_column_data_type@@Base>
   12a84:	mov	r2, r0
   12a88:	mov	r0, sl
   12a8c:	mov	r1, r7
   12a90:	bl	13444 <table_add_column@@Base>
   12a94:	add	r5, r5, #1
   12a98:	cmp	r6, r5
   12a9c:	bne	12a68 <table_dupe@@Base+0x78>
   12aa0:	cmp	r8, #1
   12aa4:	blt	13020 <table_dupe@@Base+0x630>
   12aa8:	mov	r5, #0
   12aac:	add	r9, sp, #8
   12ab0:	mov	r0, sl
   12ab4:	bl	14110 <table_add_row@@Base>
   12ab8:	cmp	r6, #1
   12abc:	blt	13014 <table_dupe@@Base+0x624>
   12ac0:	mov	r7, #0
   12ac4:	mov	r0, r4
   12ac8:	mov	r1, r7
   12acc:	bl	13430 <table_get_column_data_type@@Base>
   12ad0:	cmp	r0, #23
   12ad4:	bhi	12b64 <table_dupe@@Base+0x174>
   12ad8:	add	r1, pc, #0
   12adc:	ldr	pc, [r1, r0, lsl #2]
   12ae0:	andeq	r2, r1, r0, asr #22
   12ae4:	andeq	r2, r1, r4, ror fp
   12ae8:	andeq	r2, r1, r8, lsr #23
   12aec:	ldrdeq	r2, [r1], -ip
   12af0:	andeq	r2, r1, r0, lsl ip
   12af4:	andeq	r2, r1, r4, asr #24
   12af8:	andeq	r2, r1, r8, ror ip
   12afc:	andeq	r2, r1, ip, lsr #25
   12b00:	andeq	r2, r1, r0, ror #25
   12b04:	andeq	r2, r1, r4, lsl sp
   12b08:	andeq	r2, r1, r8, asr #26
   12b0c:	andeq	r2, r1, ip, ror sp
   12b10:			; <UNDEFINED> instruction: 0x00012db0
   12b14:	andeq	r2, r1, r4, ror #27
   12b18:	andeq	r2, r1, r8, lsl lr
   12b1c:	andeq	r2, r1, ip, asr #28
   12b20:	andeq	r2, r1, r0, lsl #29
   12b24:			; <UNDEFINED> instruction: 0x00012eb0
   12b28:	andeq	r2, r1, r0, ror #29
   12b2c:	andeq	r2, r1, r0, lsl pc
   12b30:	andeq	r2, r1, r4, asr #30
   12b34:	andeq	r2, r1, r8, ror pc
   12b38:	andeq	r2, r1, ip, lsr #31
   12b3c:	andeq	r2, r1, r0, ror #31
   12b40:	mov	r0, r4
   12b44:	mov	r1, r5
   12b48:	mov	r2, r7
   12b4c:	bl	13e60 <table_get_int@@Base>
   12b50:	mov	r3, r0
   12b54:	mov	r0, sl
   12b58:	mov	r1, r5
   12b5c:	mov	r2, r7
   12b60:	bl	14668 <table_set_int@@Base>
   12b64:	add	r7, r7, #1
   12b68:	cmp	r6, r7
   12b6c:	bne	12ac4 <table_dupe@@Base+0xd4>
   12b70:	b	13014 <table_dupe@@Base+0x624>
   12b74:	mov	r0, r4
   12b78:	mov	r1, r5
   12b7c:	mov	r2, r7
   12b80:	bl	13e78 <table_get_uint@@Base>
   12b84:	mov	r3, r0
   12b88:	mov	r0, sl
   12b8c:	mov	r1, r5
   12b90:	mov	r2, r7
   12b94:	bl	146e8 <table_set_uint@@Base>
   12b98:	add	r7, r7, #1
   12b9c:	cmp	r6, r7
   12ba0:	bne	12ac4 <table_dupe@@Base+0xd4>
   12ba4:	b	13014 <table_dupe@@Base+0x624>
   12ba8:	mov	r0, r4
   12bac:	mov	r1, r5
   12bb0:	mov	r2, r7
   12bb4:	bl	13e90 <table_get_int8@@Base>
   12bb8:	mov	r3, r0
   12bbc:	mov	r0, sl
   12bc0:	mov	r1, r5
   12bc4:	mov	r2, r7
   12bc8:	bl	14768 <table_set_int8@@Base>
   12bcc:	add	r7, r7, #1
   12bd0:	cmp	r6, r7
   12bd4:	bne	12ac4 <table_dupe@@Base+0xd4>
   12bd8:	b	13014 <table_dupe@@Base+0x624>
   12bdc:	mov	r0, r4
   12be0:	mov	r1, r5
   12be4:	mov	r2, r7
   12be8:	bl	13ea8 <table_get_uint8@@Base>
   12bec:	mov	r3, r0
   12bf0:	mov	r0, sl
   12bf4:	mov	r1, r5
   12bf8:	mov	r2, r7
   12bfc:	bl	147e8 <table_set_uint8@@Base>
   12c00:	add	r7, r7, #1
   12c04:	cmp	r6, r7
   12c08:	bne	12ac4 <table_dupe@@Base+0xd4>
   12c0c:	b	13014 <table_dupe@@Base+0x624>
   12c10:	mov	r0, r4
   12c14:	mov	r1, r5
   12c18:	mov	r2, r7
   12c1c:	bl	13ec0 <table_get_int16@@Base>
   12c20:	mov	r3, r0
   12c24:	mov	r0, sl
   12c28:	mov	r1, r5
   12c2c:	mov	r2, r7
   12c30:	bl	14868 <table_set_int16@@Base>
   12c34:	add	r7, r7, #1
   12c38:	cmp	r6, r7
   12c3c:	bne	12ac4 <table_dupe@@Base+0xd4>
   12c40:	b	13014 <table_dupe@@Base+0x624>
   12c44:	mov	r0, r4
   12c48:	mov	r1, r5
   12c4c:	mov	r2, r7
   12c50:	bl	13ed8 <table_get_uint16@@Base>
   12c54:	mov	r3, r0
   12c58:	mov	r0, sl
   12c5c:	mov	r1, r5
   12c60:	mov	r2, r7
   12c64:	bl	148e8 <table_set_uint16@@Base>
   12c68:	add	r7, r7, #1
   12c6c:	cmp	r6, r7
   12c70:	bne	12ac4 <table_dupe@@Base+0xd4>
   12c74:	b	13014 <table_dupe@@Base+0x624>
   12c78:	mov	r0, r4
   12c7c:	mov	r1, r5
   12c80:	mov	r2, r7
   12c84:	bl	13ef0 <table_get_int32@@Base>
   12c88:	mov	r3, r0
   12c8c:	mov	r0, sl
   12c90:	mov	r1, r5
   12c94:	mov	r2, r7
   12c98:	bl	14968 <table_set_int32@@Base>
   12c9c:	add	r7, r7, #1
   12ca0:	cmp	r6, r7
   12ca4:	bne	12ac4 <table_dupe@@Base+0xd4>
   12ca8:	b	13014 <table_dupe@@Base+0x624>
   12cac:	mov	r0, r4
   12cb0:	mov	r1, r5
   12cb4:	mov	r2, r7
   12cb8:	bl	13f08 <table_get_uint32@@Base>
   12cbc:	mov	r3, r0
   12cc0:	mov	r0, sl
   12cc4:	mov	r1, r5
   12cc8:	mov	r2, r7
   12ccc:	bl	149e8 <table_set_uint32@@Base>
   12cd0:	add	r7, r7, #1
   12cd4:	cmp	r6, r7
   12cd8:	bne	12ac4 <table_dupe@@Base+0xd4>
   12cdc:	b	13014 <table_dupe@@Base+0x624>
   12ce0:	mov	r0, r4
   12ce4:	mov	r1, r5
   12ce8:	mov	r2, r7
   12cec:	bl	13f20 <table_get_int64@@Base>
   12cf0:	stm	sp, {r0, r1}
   12cf4:	mov	r0, sl
   12cf8:	mov	r1, r5
   12cfc:	mov	r2, r7
   12d00:	bl	14a68 <table_set_int64@@Base>
   12d04:	add	r7, r7, #1
   12d08:	cmp	r6, r7
   12d0c:	bne	12ac4 <table_dupe@@Base+0xd4>
   12d10:	b	13014 <table_dupe@@Base+0x624>
   12d14:	mov	r0, r4
   12d18:	mov	r1, r5
   12d1c:	mov	r2, r7
   12d20:	bl	13f38 <table_get_uint64@@Base>
   12d24:	stm	sp, {r0, r1}
   12d28:	mov	r0, sl
   12d2c:	mov	r1, r5
   12d30:	mov	r2, r7
   12d34:	bl	14af0 <table_set_uint64@@Base>
   12d38:	add	r7, r7, #1
   12d3c:	cmp	r6, r7
   12d40:	bne	12ac4 <table_dupe@@Base+0xd4>
   12d44:	b	13014 <table_dupe@@Base+0x624>
   12d48:	mov	r0, r4
   12d4c:	mov	r1, r5
   12d50:	mov	r2, r7
   12d54:	bl	13f50 <table_get_short@@Base>
   12d58:	mov	r3, r0
   12d5c:	mov	r0, sl
   12d60:	mov	r1, r5
   12d64:	mov	r2, r7
   12d68:	bl	14b78 <table_set_short@@Base>
   12d6c:	add	r7, r7, #1
   12d70:	cmp	r6, r7
   12d74:	bne	12ac4 <table_dupe@@Base+0xd4>
   12d78:	b	13014 <table_dupe@@Base+0x624>
   12d7c:	mov	r0, r4
   12d80:	mov	r1, r5
   12d84:	mov	r2, r7
   12d88:	bl	13f68 <table_get_ushort@@Base>
   12d8c:	mov	r3, r0
   12d90:	mov	r0, sl
   12d94:	mov	r1, r5
   12d98:	mov	r2, r7
   12d9c:	bl	14bf8 <table_set_ushort@@Base>
   12da0:	add	r7, r7, #1
   12da4:	cmp	r6, r7
   12da8:	bne	12ac4 <table_dupe@@Base+0xd4>
   12dac:	b	13014 <table_dupe@@Base+0x624>
   12db0:	mov	r0, r4
   12db4:	mov	r1, r5
   12db8:	mov	r2, r7
   12dbc:	bl	13f80 <table_get_long@@Base>
   12dc0:	mov	r3, r0
   12dc4:	mov	r0, sl
   12dc8:	mov	r1, r5
   12dcc:	mov	r2, r7
   12dd0:	bl	14c78 <table_set_long@@Base>
   12dd4:	add	r7, r7, #1
   12dd8:	cmp	r6, r7
   12ddc:	bne	12ac4 <table_dupe@@Base+0xd4>
   12de0:	b	13014 <table_dupe@@Base+0x624>
   12de4:	mov	r0, r4
   12de8:	mov	r1, r5
   12dec:	mov	r2, r7
   12df0:	bl	13f98 <table_get_ulong@@Base>
   12df4:	mov	r3, r0
   12df8:	mov	r0, sl
   12dfc:	mov	r1, r5
   12e00:	mov	r2, r7
   12e04:	bl	14cf8 <table_set_ulong@@Base>
   12e08:	add	r7, r7, #1
   12e0c:	cmp	r6, r7
   12e10:	bne	12ac4 <table_dupe@@Base+0xd4>
   12e14:	b	13014 <table_dupe@@Base+0x624>
   12e18:	mov	r0, r4
   12e1c:	mov	r1, r5
   12e20:	mov	r2, r7
   12e24:	bl	13fb0 <table_get_llong@@Base>
   12e28:	stm	sp, {r0, r1}
   12e2c:	mov	r0, sl
   12e30:	mov	r1, r5
   12e34:	mov	r2, r7
   12e38:	bl	14d78 <table_set_llong@@Base>
   12e3c:	add	r7, r7, #1
   12e40:	cmp	r6, r7
   12e44:	bne	12ac4 <table_dupe@@Base+0xd4>
   12e48:	b	13014 <table_dupe@@Base+0x624>
   12e4c:	mov	r0, r4
   12e50:	mov	r1, r5
   12e54:	mov	r2, r7
   12e58:	bl	13fc8 <table_get_ullong@@Base>
   12e5c:	stm	sp, {r0, r1}
   12e60:	mov	r0, sl
   12e64:	mov	r1, r5
   12e68:	mov	r2, r7
   12e6c:	bl	14e00 <table_set_ullong@@Base>
   12e70:	add	r7, r7, #1
   12e74:	cmp	r6, r7
   12e78:	bne	12ac4 <table_dupe@@Base+0xd4>
   12e7c:	b	13014 <table_dupe@@Base+0x624>
   12e80:	mov	r0, r4
   12e84:	mov	r1, r5
   12e88:	mov	r2, r7
   12e8c:	bl	13fe0 <table_get_float@@Base>
   12e90:	mov	r0, sl
   12e94:	mov	r1, r5
   12e98:	mov	r2, r7
   12e9c:	bl	14e88 <table_set_float@@Base>
   12ea0:	add	r7, r7, #1
   12ea4:	cmp	r6, r7
   12ea8:	bne	12ac4 <table_dupe@@Base+0xd4>
   12eac:	b	13014 <table_dupe@@Base+0x624>
   12eb0:	mov	r0, r4
   12eb4:	mov	r1, r5
   12eb8:	mov	r2, r7
   12ebc:	bl	13ff8 <table_get_double@@Base>
   12ec0:	mov	r0, sl
   12ec4:	mov	r1, r5
   12ec8:	mov	r2, r7
   12ecc:	bl	14f14 <table_set_double@@Base>
   12ed0:	add	r7, r7, #1
   12ed4:	cmp	r6, r7
   12ed8:	bne	12ac4 <table_dupe@@Base+0xd4>
   12edc:	b	13014 <table_dupe@@Base+0x624>
   12ee0:	mov	r0, r4
   12ee4:	mov	r1, r5
   12ee8:	mov	r2, r7
   12eec:	bl	14010 <table_get_ldouble@@Base>
   12ef0:	mov	r0, sl
   12ef4:	mov	r1, r5
   12ef8:	mov	r2, r7
   12efc:	bl	14f9c <table_set_ldouble@@Base>
   12f00:	add	r7, r7, #1
   12f04:	cmp	r6, r7
   12f08:	bne	12ac4 <table_dupe@@Base+0xd4>
   12f0c:	b	13014 <table_dupe@@Base+0x624>
   12f10:	mov	r0, r4
   12f14:	mov	r1, r5
   12f18:	mov	r2, r7
   12f1c:	bl	14028 <table_get_char@@Base>
   12f20:	mov	r3, r0
   12f24:	mov	r0, sl
   12f28:	mov	r1, r5
   12f2c:	mov	r2, r7
   12f30:	bl	150ac <table_set_char@@Base>
   12f34:	add	r7, r7, #1
   12f38:	cmp	r6, r7
   12f3c:	bne	12ac4 <table_dupe@@Base+0xd4>
   12f40:	b	13014 <table_dupe@@Base+0x624>
   12f44:	mov	r0, r4
   12f48:	mov	r1, r5
   12f4c:	mov	r2, r7
   12f50:	bl	14040 <table_get_uchar@@Base>
   12f54:	mov	r3, r0
   12f58:	mov	r0, sl
   12f5c:	mov	r1, r5
   12f60:	mov	r2, r7
   12f64:	bl	1512c <table_set_uchar@@Base>
   12f68:	add	r7, r7, #1
   12f6c:	cmp	r6, r7
   12f70:	bne	12ac4 <table_dupe@@Base+0xd4>
   12f74:	b	13014 <table_dupe@@Base+0x624>
   12f78:	mov	r0, r4
   12f7c:	mov	r1, r5
   12f80:	mov	r2, r7
   12f84:	bl	14058 <table_get_string@@Base>
   12f88:	mov	r3, r0
   12f8c:	mov	r0, sl
   12f90:	mov	r1, r5
   12f94:	mov	r2, r7
   12f98:	bl	15024 <table_set_string@@Base>
   12f9c:	add	r7, r7, #1
   12fa0:	cmp	r6, r7
   12fa4:	bne	12ac4 <table_dupe@@Base+0xd4>
   12fa8:	b	13014 <table_dupe@@Base+0x624>
   12fac:	mov	r0, r4
   12fb0:	mov	r1, r5
   12fb4:	mov	r2, r7
   12fb8:	bl	13e48 <table_get_bool@@Base>
   12fbc:	mov	r3, r0
   12fc0:	mov	r0, sl
   12fc4:	mov	r1, r5
   12fc8:	mov	r2, r7
   12fcc:	bl	145e8 <table_set_bool@@Base>
   12fd0:	add	r7, r7, #1
   12fd4:	cmp	r6, r7
   12fd8:	bne	12ac4 <table_dupe@@Base+0xd4>
   12fdc:	b	13014 <table_dupe@@Base+0x624>
   12fe0:	mov	r0, r4
   12fe4:	mov	r1, r5
   12fe8:	mov	r2, r7
   12fec:	bl	1406c <table_get_ptr@@Base>
   12ff0:	str	r0, [sp, #8]
   12ff4:	mov	r0, sl
   12ff8:	mov	r1, r5
   12ffc:	mov	r2, r7
   13000:	mov	r3, r9
   13004:	bl	151ac <table_set_ptr@@Base>
   13008:	add	r7, r7, #1
   1300c:	cmp	r6, r7
   13010:	bne	12ac4 <table_dupe@@Base+0xd4>
   13014:	add	r5, r5, #1
   13018:	cmp	r5, r8
   1301c:	bne	12ab0 <table_dupe@@Base+0xc0>
   13020:	mov	r0, sl
   13024:	sub	sp, fp, #28
   13028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001302c <table_get_major_version@@Base>:
   1302c:	mov	r0, #0
   13030:	bx	lr

00013034 <table_get_minor_version@@Base>:
   13034:	mov	r0, #0
   13038:	bx	lr

0001303c <table_get_patch_version@@Base>:
   1303c:	mov	r0, #0
   13040:	bx	lr

00013044 <table_get_version@@Base>:
   13044:	movw	r0, #25865	; 0x6509
   13048:	movt	r0, #1
   1304c:	bx	lr

00013050 <table_get_callback_length@@Base>:
   13050:	ldr	r0, [r0, #32]
   13054:	bx	lr

00013058 <table_register_callback@@Base>:
   13058:	push	{r4, r5, r6, r7, fp, lr}
   1305c:	add	fp, sp, #16
   13060:	mov	r5, r0
   13064:	ldr	r0, [r0, #32]
   13068:	mov	r4, r3
   1306c:	mov	r6, r2
   13070:	mov	r7, r1
   13074:	cmp	r0, #1
   13078:	blt	130ac <table_register_callback@@Base+0x54>
   1307c:	ldr	r2, [r5, #36]	; 0x24
   13080:	mov	r1, #0
   13084:	ldr	r3, [r2, r1, lsl #2]
   13088:	cmp	r3, r7
   1308c:	bne	130a0 <table_register_callback@@Base+0x48>
   13090:	ldr	r3, [r5, #40]	; 0x28
   13094:	ldr	r3, [r3, r1, lsl #2]
   13098:	cmp	r3, r6
   1309c:	beq	13130 <table_register_callback@@Base+0xd8>
   130a0:	add	r1, r1, #1
   130a4:	cmp	r1, r0
   130a8:	blt	13084 <table_register_callback@@Base+0x2c>
   130ac:	ldr	r1, [r5, #48]	; 0x30
   130b0:	udiv	r2, r0, r1
   130b4:	mls	r2, r2, r1, r0
   130b8:	cmp	r2, #0
   130bc:	bne	13108 <table_register_callback@@Base+0xb0>
   130c0:	ldr	r2, [r5, #52]	; 0x34
   130c4:	ldr	r0, [r5, #36]	; 0x24
   130c8:	add	r1, r2, r1
   130cc:	str	r1, [r5, #52]	; 0x34
   130d0:	lsl	r1, r1, #2
   130d4:	bl	11fb0 <realloc@plt>
   130d8:	str	r0, [r5, #36]	; 0x24
   130dc:	ldr	r1, [r5, #52]	; 0x34
   130e0:	ldr	r0, [r5, #40]	; 0x28
   130e4:	lsl	r1, r1, #2
   130e8:	bl	11fb0 <realloc@plt>
   130ec:	str	r0, [r5, #40]	; 0x28
   130f0:	ldr	r1, [r5, #52]	; 0x34
   130f4:	ldr	r0, [r5, #44]	; 0x2c
   130f8:	lsl	r1, r1, #2
   130fc:	bl	11fb0 <realloc@plt>
   13100:	str	r0, [r5, #44]	; 0x2c
   13104:	ldr	r0, [r5, #32]
   13108:	ldr	r1, [r5, #36]	; 0x24
   1310c:	str	r7, [r1, r0, lsl #2]
   13110:	ldr	r1, [r5, #40]	; 0x28
   13114:	str	r6, [r1, r0, lsl #2]
   13118:	ldr	r1, [r5, #44]	; 0x2c
   1311c:	str	r4, [r1, r0, lsl #2]
   13120:	ldr	r0, [r5, #32]
   13124:	add	r0, r0, #1
   13128:	str	r0, [r5, #32]
   1312c:	pop	{r4, r5, r6, r7, fp, pc}
   13130:	cmp	r1, #0
   13134:	ldrne	r0, [r5, #44]	; 0x2c
   13138:	ldrne	r2, [r0, r1, lsl #2]
   1313c:	orrne	r2, r2, r4
   13140:	strne	r2, [r0, r1, lsl #2]
   13144:	popne	{r4, r5, r6, r7, fp, pc}
   13148:	b	130ac <table_register_callback@@Base+0x54>

0001314c <table_unregister_callback@@Base>:
   1314c:	push	{r4, r5, r6, sl, fp, lr}
   13150:	add	fp, sp, #16
   13154:	ldr	r4, [r0, #32]
   13158:	cmp	r4, #1
   1315c:	blt	13194 <table_unregister_callback@@Base+0x48>
   13160:	ldr	r3, [r0, #36]	; 0x24
   13164:	mov	r6, r0
   13168:	mov	r0, #0
   1316c:	ldr	r5, [r3, r0, lsl #2]
   13170:	cmp	r5, r1
   13174:	bne	13188 <table_unregister_callback@@Base+0x3c>
   13178:	ldr	r5, [r6, #40]	; 0x28
   1317c:	ldr	r5, [r5, r0, lsl #2]
   13180:	cmp	r5, r2
   13184:	beq	13198 <table_unregister_callback@@Base+0x4c>
   13188:	add	r0, r0, #1
   1318c:	cmp	r0, r4
   13190:	blt	1316c <table_unregister_callback@@Base+0x20>
   13194:	pop	{r4, r5, r6, sl, fp, pc}
   13198:	sub	r1, r4, #1
   1319c:	cmp	r0, r1
   131a0:	bge	13230 <table_unregister_callback@@Base+0xe4>
   131a4:	add	r1, r3, r0, lsl #2
   131a8:	ldr	r1, [r1, #4]
   131ac:	str	r1, [r3, r0, lsl #2]
   131b0:	ldr	r1, [r6, #40]	; 0x28
   131b4:	add	r2, r1, r0, lsl #2
   131b8:	ldr	r2, [r2, #4]
   131bc:	str	r2, [r1, r0, lsl #2]
   131c0:	ldr	r1, [r6, #44]	; 0x2c
   131c4:	add	r2, r1, r0, lsl #2
   131c8:	ldr	r2, [r2, #4]
   131cc:	str	r2, [r1, r0, lsl #2]
   131d0:	add	r2, r0, #1
   131d4:	ldr	r1, [r6, #32]
   131d8:	sub	r1, r1, #1
   131dc:	cmp	r2, r1
   131e0:	bge	13230 <table_unregister_callback@@Base+0xe4>
   131e4:	ldr	r1, [r6, #36]	; 0x24
   131e8:	add	r1, r1, r0, lsl #2
   131ec:	ldr	r2, [r1, #8]
   131f0:	str	r2, [r1, #4]
   131f4:	ldr	r1, [r6, #40]	; 0x28
   131f8:	add	r1, r1, r0, lsl #2
   131fc:	ldr	r2, [r1, #8]
   13200:	str	r2, [r1, #4]
   13204:	ldr	r1, [r6, #44]	; 0x2c
   13208:	add	r1, r1, r0, lsl #2
   1320c:	ldr	r2, [r1, #8]
   13210:	str	r2, [r1, #4]
   13214:	add	r2, r0, #1
   13218:	add	r0, r0, #2
   1321c:	ldr	r1, [r6, #32]
   13220:	sub	r1, r1, #1
   13224:	cmp	r0, r1
   13228:	mov	r0, r2
   1322c:	blt	131e4 <table_unregister_callback@@Base+0x98>
   13230:	str	r1, [r6, #32]
   13234:	ldr	r2, [r6, #48]	; 0x30
   13238:	udiv	r0, r1, r2
   1323c:	mls	r0, r0, r2, r1
   13240:	cmp	r0, #0
   13244:	popne	{r4, r5, r6, sl, fp, pc}
   13248:	ldr	r1, [r6, #52]	; 0x34
   1324c:	ldr	r0, [r6, #36]	; 0x24
   13250:	subs	r1, r1, r2
   13254:	str	r1, [r6, #52]	; 0x34
   13258:	beq	13294 <table_unregister_callback@@Base+0x148>
   1325c:	lsl	r1, r1, #2
   13260:	bl	11fb0 <realloc@plt>
   13264:	str	r0, [r6, #36]	; 0x24
   13268:	ldr	r1, [r6, #52]	; 0x34
   1326c:	ldr	r0, [r6, #40]	; 0x28
   13270:	lsl	r1, r1, #2
   13274:	bl	11fb0 <realloc@plt>
   13278:	str	r0, [r6, #40]	; 0x28
   1327c:	ldr	r1, [r6, #52]	; 0x34
   13280:	ldr	r0, [r6, #44]	; 0x2c
   13284:	lsl	r1, r1, #2
   13288:	bl	11fb0 <realloc@plt>
   1328c:	str	r0, [r6, #44]	; 0x2c
   13290:	pop	{r4, r5, r6, sl, fp, pc}
   13294:	bl	11f98 <free@plt>
   13298:	ldr	r0, [r6, #40]	; 0x28
   1329c:	bl	11f98 <free@plt>
   132a0:	ldr	r0, [r6, #44]	; 0x2c
   132a4:	bl	11f98 <free@plt>
   132a8:	mov	r0, #0
   132ac:	str	r0, [r6, #36]	; 0x24
   132b0:	str	r0, [r6, #40]	; 0x28
   132b4:	str	r0, [r6, #44]	; 0x2c
   132b8:	pop	{r4, r5, r6, sl, fp, pc}

000132bc <table_notify@@Base>:
   132bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132c0:	add	fp, sp, #24
   132c4:	sub	sp, sp, #8
   132c8:	mov	r7, r0
   132cc:	ldr	r0, [r0, #32]
   132d0:	cmp	r0, #1
   132d4:	blt	13330 <table_notify@@Base+0x74>
   132d8:	mov	r4, r3
   132dc:	mov	r8, r2
   132e0:	mov	r9, r1
   132e4:	mov	r5, #0
   132e8:	ldr	r1, [r7, #44]	; 0x2c
   132ec:	ldr	r1, [r1, r5, lsl #2]
   132f0:	tst	r1, r4
   132f4:	beq	13324 <table_notify@@Base+0x68>
   132f8:	ldr	r0, [r7, #36]	; 0x24
   132fc:	ldr	r1, [r7, #40]	; 0x28
   13300:	mov	r2, r8
   13304:	mov	r3, r4
   13308:	ldr	r6, [r0, r5, lsl #2]
   1330c:	ldr	r0, [r1, r5, lsl #2]
   13310:	mov	r1, r9
   13314:	str	r0, [sp]
   13318:	mov	r0, r7
   1331c:	blx	r6
   13320:	ldr	r0, [r7, #32]
   13324:	add	r5, r5, #1
   13328:	cmp	r5, r0
   1332c:	blt	132e8 <table_notify@@Base+0x2c>
   13330:	sub	sp, fp, #24
   13334:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013338 <table_column_init@@Base>:
   13338:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1333c:	add	fp, sp, #24
   13340:	ldr	r7, [r0]
   13344:	mov	r0, r2
   13348:	mov	r4, r3
   1334c:	mov	r5, r2
   13350:	mov	r6, r1
   13354:	bl	11fec <strlen@plt>
   13358:	add	r0, r0, #1
   1335c:	bl	11fc8 <malloc@plt>
   13360:	ldr	r8, [fp, #8]
   13364:	add	r6, r6, r6, lsl #1
   13368:	cmp	r0, #0
   1336c:	str	r0, [r7, r6, lsl #2]
   13370:	beq	1337c <table_column_init@@Base+0x44>
   13374:	mov	r1, r5
   13378:	bl	11fbc <strcpy@plt>
   1337c:	add	r0, r7, r6, lsl #2
   13380:	stmib	r0, {r4, r8}
   13384:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013388 <table_get_col_ptr@@Base>:
   13388:	ldr	r0, [r0]
   1338c:	add	r1, r1, r1, lsl #1
   13390:	add	r0, r0, r1, lsl #2
   13394:	bx	lr

00013398 <table_column_destroy@@Base>:
   13398:	ldr	r0, [r0]
   1339c:	add	r1, r1, r1, lsl #1
   133a0:	ldr	r0, [r0, r1, lsl #2]
   133a4:	cmp	r0, #0
   133a8:	bxeq	lr
   133ac:	b	11f98 <free@plt>

000133b0 <table_get_column_length@@Base>:
   133b0:	ldr	r0, [r0, #4]
   133b4:	bx	lr

000133b8 <table_get_column@@Base>:
   133b8:	push	{r4, r5, r6, r7, fp, lr}
   133bc:	add	fp, sp, #16
   133c0:	ldr	r6, [r0, #4]
   133c4:	cmp	r6, #1
   133c8:	blt	1340c <table_get_column@@Base+0x54>
   133cc:	ldr	r7, [r0]
   133d0:	mov	r5, r1
   133d4:	mov	r4, #0
   133d8:	ldr	r0, [r7]
   133dc:	mov	r1, r5
   133e0:	bl	11f80 <strcmp@plt>
   133e4:	cmp	r0, #0
   133e8:	beq	133fc <table_get_column@@Base+0x44>
   133ec:	add	r4, r4, #1
   133f0:	add	r7, r7, #12
   133f4:	cmp	r4, r6
   133f8:	blt	133d8 <table_get_column@@Base+0x20>
   133fc:	cmp	r4, r6
   13400:	mvneq	r4, #0
   13404:	mov	r0, r4
   13408:	pop	{r4, r5, r6, r7, fp, pc}
   1340c:	mov	r4, #0
   13410:	cmp	r4, r6
   13414:	mvneq	r4, #0
   13418:	mov	r0, r4
   1341c:	pop	{r4, r5, r6, r7, fp, pc}

00013420 <table_get_column_name@@Base>:
   13420:	ldr	r0, [r0]
   13424:	add	r1, r1, r1, lsl #1
   13428:	ldr	r0, [r0, r1, lsl #2]
   1342c:	bx	lr

00013430 <table_get_column_data_type@@Base>:
   13430:	ldr	r0, [r0]
   13434:	add	r1, r1, r1, lsl #1
   13438:	add	r0, r0, r1, lsl #2
   1343c:	ldr	r0, [r0, #4]
   13440:	bx	lr

00013444 <table_add_column@@Base>:
   13444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13448:	add	fp, sp, #28
   1344c:	sub	sp, sp, #4
   13450:	mov	r4, r0
   13454:	mov	r8, r1
   13458:	ldr	r0, [r0, #4]
   1345c:	mov	r9, r2
   13460:	ldr	r1, [r4, #8]
   13464:	udiv	r2, r0, r1
   13468:	mls	r0, r2, r1, r0
   1346c:	cmp	r0, #0
   13470:	bne	134dc <table_add_column@@Base+0x98>
   13474:	ldr	r2, [r4, #12]
   13478:	ldr	r0, [r4]
   1347c:	add	r1, r2, r1
   13480:	str	r1, [r4, #12]
   13484:	add	r1, r1, r1, lsl #1
   13488:	lsl	r1, r1, #2
   1348c:	bl	11fb0 <realloc@plt>
   13490:	str	r0, [r4]
   13494:	mov	r0, r4
   13498:	bl	14108 <table_get_row_length@@Base>
   1349c:	cmp	r0, #1
   134a0:	blt	134dc <table_add_column@@Base+0x98>
   134a4:	mov	r6, r0
   134a8:	mov	r5, #0
   134ac:	mov	r0, r4
   134b0:	mov	r1, r5
   134b4:	bl	140a4 <table_get_row_ptr@@Base>
   134b8:	ldr	r1, [r4, #12]
   134bc:	mov	r7, r0
   134c0:	ldr	r0, [r0]
   134c4:	lsl	r1, r1, #2
   134c8:	bl	11fb0 <realloc@plt>
   134cc:	add	r5, r5, #1
   134d0:	str	r0, [r7]
   134d4:	cmp	r6, r5
   134d8:	bne	134ac <table_add_column@@Base+0x68>
   134dc:	mov	r0, r4
   134e0:	bl	14108 <table_get_row_length@@Base>
   134e4:	ldr	r6, [r4, #4]
   134e8:	mov	r7, r0
   134ec:	mov	r0, r9
   134f0:	bl	13e1c <table_get_default_compare_function_for_data_type@@Base>
   134f4:	ldr	r5, [r4]
   134f8:	mov	sl, r0
   134fc:	mov	r0, r8
   13500:	bl	11fec <strlen@plt>
   13504:	add	r0, r0, #1
   13508:	bl	11fc8 <malloc@plt>
   1350c:	mov	r1, r8
   13510:	add	r8, r6, r6, lsl #1
   13514:	cmp	r0, #0
   13518:	str	r0, [r5, r8, lsl #2]
   1351c:	beq	13524 <table_add_column@@Base+0xe0>
   13520:	bl	11fbc <strcpy@plt>
   13524:	add	r0, r5, r8, lsl #2
   13528:	cmp	r7, #1
   1352c:	stmib	r0, {r9, sl}
   13530:	blt	13554 <table_add_column@@Base+0x110>
   13534:	mov	r5, #0
   13538:	mov	r0, r4
   1353c:	mov	r1, r5
   13540:	mov	r2, r6
   13544:	bl	159ac <table_cell_init@@Base>
   13548:	add	r5, r5, #1
   1354c:	cmp	r7, r5
   13550:	bne	13538 <table_add_column@@Base+0xf4>
   13554:	ldr	r2, [r4, #4]
   13558:	mov	r0, r4
   1355c:	mvn	r1, #0
   13560:	mov	r3, #8
   13564:	bl	132bc <table_notify@@Base>
   13568:	ldr	r0, [r4, #4]
   1356c:	add	r1, r0, #1
   13570:	str	r1, [r4, #4]
   13574:	sub	sp, fp, #28
   13578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001357c <table_remove_column@@Base>:
   1357c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13580:	add	fp, sp, #24
   13584:	mov	r5, r0
   13588:	ldr	r0, [r0]
   1358c:	add	r6, r1, r1, lsl #1
   13590:	mov	r9, r1
   13594:	ldr	r0, [r0, r6, lsl #2]
   13598:	cmp	r0, #0
   1359c:	beq	135a4 <table_remove_column@@Base+0x28>
   135a0:	bl	11f98 <free@plt>
   135a4:	ldr	r0, [r5, #4]
   135a8:	sub	r4, r0, #1
   135ac:	cmp	r4, r9
   135b0:	ble	135e0 <table_remove_column@@Base+0x64>
   135b4:	sub	r0, r4, r9
   135b8:	lsl	r1, r6, #2
   135bc:	ldr	r2, [r5]
   135c0:	subs	r0, r0, #1
   135c4:	add	r2, r2, r1
   135c8:	add	r1, r1, #12
   135cc:	vldr	d16, [r2, #12]
   135d0:	ldr	r3, [r2, #20]
   135d4:	str	r3, [r2, #8]
   135d8:	vstr	d16, [r2]
   135dc:	bne	135bc <table_remove_column@@Base+0x40>
   135e0:	mov	r0, r5
   135e4:	bl	14108 <table_get_row_length@@Base>
   135e8:	cmp	r0, #1
   135ec:	blt	13674 <table_remove_column@@Base+0xf8>
   135f0:	mov	r6, r0
   135f4:	mov	r7, #0
   135f8:	cmp	r4, r9
   135fc:	ble	1364c <table_remove_column@@Base+0xd0>
   13600:	mov	r0, r5
   13604:	mov	r1, r7
   13608:	mov	r2, r9
   1360c:	bl	159e8 <table_cell_destroy@@Base>
   13610:	mov	r0, r5
   13614:	mov	r1, r7
   13618:	bl	140a4 <table_get_row_ptr@@Base>
   1361c:	mov	r1, r9
   13620:	ldr	r2, [r0]
   13624:	add	r3, r2, r1, lsl #2
   13628:	ldr	r3, [r3, #4]
   1362c:	str	r3, [r2, r1, lsl #2]
   13630:	add	r1, r1, #1
   13634:	cmp	r4, r1
   13638:	bne	13620 <table_remove_column@@Base+0xa4>
   1363c:	add	r7, r7, #1
   13640:	cmp	r7, r6
   13644:	bne	13600 <table_remove_column@@Base+0x84>
   13648:	b	13674 <table_remove_column@@Base+0xf8>
   1364c:	mov	r0, r5
   13650:	mov	r1, r7
   13654:	mov	r2, r9
   13658:	bl	159e8 <table_cell_destroy@@Base>
   1365c:	mov	r0, r5
   13660:	mov	r1, r7
   13664:	bl	140a4 <table_get_row_ptr@@Base>
   13668:	add	r7, r7, #1
   1366c:	cmp	r6, r7
   13670:	bne	1364c <table_remove_column@@Base+0xd0>
   13674:	ldmib	r5, {r0, r1}
   13678:	sub	r0, r0, #1
   1367c:	udiv	r2, r0, r1
   13680:	str	r0, [r5, #4]
   13684:	mls	r0, r2, r1, r0
   13688:	cmp	r0, #0
   1368c:	bne	136f8 <table_remove_column@@Base+0x17c>
   13690:	ldr	r2, [r5, #12]
   13694:	ldr	r0, [r5]
   13698:	sub	r1, r2, r1
   1369c:	str	r1, [r5, #12]
   136a0:	add	r1, r1, r1, lsl #1
   136a4:	lsl	r1, r1, #2
   136a8:	bl	11fb0 <realloc@plt>
   136ac:	str	r0, [r5]
   136b0:	mov	r0, r5
   136b4:	bl	14108 <table_get_row_length@@Base>
   136b8:	cmp	r0, #1
   136bc:	blt	136f8 <table_remove_column@@Base+0x17c>
   136c0:	mov	r8, r0
   136c4:	mov	r7, #0
   136c8:	mov	r0, r5
   136cc:	mov	r1, r7
   136d0:	bl	140a4 <table_get_row_ptr@@Base>
   136d4:	ldr	r1, [r5, #12]
   136d8:	mov	r6, r0
   136dc:	ldr	r0, [r0]
   136e0:	lsl	r1, r1, #2
   136e4:	bl	11fb0 <realloc@plt>
   136e8:	add	r7, r7, #1
   136ec:	str	r0, [r6]
   136f0:	cmp	r8, r7
   136f4:	bne	136c8 <table_remove_column@@Base+0x14c>
   136f8:	mov	r0, r5
   136fc:	mvn	r1, #0
   13700:	mov	r2, r9
   13704:	mov	r3, #16
   13708:	bl	132bc <table_notify@@Base>
   1370c:	mov	r0, #0
   13710:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013714 <table_get_column_compare_function@@Base>:
   13714:	ldr	r0, [r0]
   13718:	add	r1, r1, r1, lsl #1
   1371c:	add	r0, r0, r1, lsl #2
   13720:	ldr	r0, [r0, #8]
   13724:	bx	lr

00013728 <table_set_column_compare_function@@Base>:
   13728:	ldr	r0, [r0]
   1372c:	add	r1, r1, r1, lsl #1
   13730:	add	r0, r0, r1, lsl #2
   13734:	str	r2, [r0, #8]
   13738:	bx	lr

0001373c <table_compare_bool@@Base>:
   1373c:	cmp	r0, #0
   13740:	beq	13774 <table_compare_bool@@Base+0x38>
   13744:	cmp	r1, #0
   13748:	moveq	r1, #1
   1374c:	moveq	r0, r1
   13750:	bxeq	lr
   13754:	ldrb	r2, [r1]
   13758:	ldrb	r0, [r0]
   1375c:	mov	r1, #0
   13760:	cmp	r0, r2
   13764:	mvncc	r1, #0
   13768:	movwhi	r1, #1
   1376c:	mov	r0, r1
   13770:	bx	lr
   13774:	cmp	r1, #0
   13778:	mvnne	r1, #0
   1377c:	mov	r0, r1
   13780:	bx	lr

00013784 <table_compare_int@@Base>:
   13784:	cmp	r0, #0
   13788:	beq	137bc <table_compare_int@@Base+0x38>
   1378c:	cmp	r1, #0
   13790:	moveq	r1, #1
   13794:	moveq	r0, r1
   13798:	bxeq	lr
   1379c:	ldr	r2, [r1]
   137a0:	ldr	r0, [r0]
   137a4:	mov	r1, #0
   137a8:	cmp	r0, r2
   137ac:	mvnlt	r1, #0
   137b0:	movwgt	r1, #1
   137b4:	mov	r0, r1
   137b8:	bx	lr
   137bc:	cmp	r1, #0
   137c0:	mvnne	r1, #0
   137c4:	mov	r0, r1
   137c8:	bx	lr

000137cc <table_compare_uint@@Base>:
   137cc:	cmp	r0, #0
   137d0:	beq	13804 <table_compare_uint@@Base+0x38>
   137d4:	cmp	r1, #0
   137d8:	moveq	r1, #1
   137dc:	moveq	r0, r1
   137e0:	bxeq	lr
   137e4:	ldr	r2, [r1]
   137e8:	ldr	r0, [r0]
   137ec:	mov	r1, #0
   137f0:	cmp	r0, r2
   137f4:	mvncc	r1, #0
   137f8:	movwhi	r1, #1
   137fc:	mov	r0, r1
   13800:	bx	lr
   13804:	cmp	r1, #0
   13808:	mvnne	r1, #0
   1380c:	mov	r0, r1
   13810:	bx	lr

00013814 <table_compare_int8@@Base>:
   13814:	cmp	r0, #0
   13818:	beq	1384c <table_compare_int8@@Base+0x38>
   1381c:	cmp	r1, #0
   13820:	moveq	r1, #1
   13824:	moveq	r0, r1
   13828:	bxeq	lr
   1382c:	ldrsb	r2, [r1]
   13830:	ldrsb	r0, [r0]
   13834:	mov	r1, #0
   13838:	cmp	r0, r2
   1383c:	mvnlt	r1, #0
   13840:	movwgt	r1, #1
   13844:	mov	r0, r1
   13848:	bx	lr
   1384c:	cmp	r1, #0
   13850:	mvnne	r1, #0
   13854:	mov	r0, r1
   13858:	bx	lr

0001385c <table_compare_uint8@@Base>:
   1385c:	cmp	r0, #0
   13860:	beq	13894 <table_compare_uint8@@Base+0x38>
   13864:	cmp	r1, #0
   13868:	moveq	r1, #1
   1386c:	moveq	r0, r1
   13870:	bxeq	lr
   13874:	ldrb	r2, [r1]
   13878:	ldrb	r0, [r0]
   1387c:	mov	r1, #0
   13880:	cmp	r0, r2
   13884:	mvncc	r1, #0
   13888:	movwhi	r1, #1
   1388c:	mov	r0, r1
   13890:	bx	lr
   13894:	cmp	r1, #0
   13898:	mvnne	r1, #0
   1389c:	mov	r0, r1
   138a0:	bx	lr

000138a4 <table_compare_int16@@Base>:
   138a4:	cmp	r0, #0
   138a8:	beq	138dc <table_compare_int16@@Base+0x38>
   138ac:	cmp	r1, #0
   138b0:	moveq	r1, #1
   138b4:	moveq	r0, r1
   138b8:	bxeq	lr
   138bc:	ldrsh	r2, [r1]
   138c0:	ldrsh	r0, [r0]
   138c4:	mov	r1, #0
   138c8:	cmp	r0, r2
   138cc:	mvnlt	r1, #0
   138d0:	movwgt	r1, #1
   138d4:	mov	r0, r1
   138d8:	bx	lr
   138dc:	cmp	r1, #0
   138e0:	mvnne	r1, #0
   138e4:	mov	r0, r1
   138e8:	bx	lr

000138ec <table_compare_uint16@@Base>:
   138ec:	cmp	r0, #0
   138f0:	beq	13924 <table_compare_uint16@@Base+0x38>
   138f4:	cmp	r1, #0
   138f8:	moveq	r1, #1
   138fc:	moveq	r0, r1
   13900:	bxeq	lr
   13904:	ldrh	r2, [r1]
   13908:	ldrh	r0, [r0]
   1390c:	mov	r1, #0
   13910:	cmp	r0, r2
   13914:	mvncc	r1, #0
   13918:	movwhi	r1, #1
   1391c:	mov	r0, r1
   13920:	bx	lr
   13924:	cmp	r1, #0
   13928:	mvnne	r1, #0
   1392c:	mov	r0, r1
   13930:	bx	lr

00013934 <table_compare_int32@@Base>:
   13934:	cmp	r0, #0
   13938:	beq	1396c <table_compare_int32@@Base+0x38>
   1393c:	cmp	r1, #0
   13940:	moveq	r1, #1
   13944:	moveq	r0, r1
   13948:	bxeq	lr
   1394c:	ldr	r2, [r1]
   13950:	ldr	r0, [r0]
   13954:	mov	r1, #0
   13958:	cmp	r0, r2
   1395c:	mvnlt	r1, #0
   13960:	movwgt	r1, #1
   13964:	mov	r0, r1
   13968:	bx	lr
   1396c:	cmp	r1, #0
   13970:	mvnne	r1, #0
   13974:	mov	r0, r1
   13978:	bx	lr

0001397c <table_compare_uint32@@Base>:
   1397c:	cmp	r0, #0
   13980:	beq	139b4 <table_compare_uint32@@Base+0x38>
   13984:	cmp	r1, #0
   13988:	moveq	r1, #1
   1398c:	moveq	r0, r1
   13990:	bxeq	lr
   13994:	ldr	r2, [r1]
   13998:	ldr	r0, [r0]
   1399c:	mov	r1, #0
   139a0:	cmp	r0, r2
   139a4:	mvncc	r1, #0
   139a8:	movwhi	r1, #1
   139ac:	mov	r0, r1
   139b0:	bx	lr
   139b4:	cmp	r1, #0
   139b8:	mvnne	r1, #0
   139bc:	mov	r0, r1
   139c0:	bx	lr

000139c4 <table_compare_int64@@Base>:
   139c4:	cmp	r0, #0
   139c8:	beq	13a1c <table_compare_int64@@Base+0x58>
   139cc:	cmp	r1, #0
   139d0:	moveq	r1, #1
   139d4:	moveq	r0, r1
   139d8:	bxeq	lr
   139dc:	push	{r5, r7, fp, lr}
   139e0:	add	fp, sp, #8
   139e4:	ldm	r1, {r2, r7}
   139e8:	ldm	r0, {r0, r5}
   139ec:	mov	r1, #0
   139f0:	subs	r3, r0, r2
   139f4:	sbcs	r3, r5, r7
   139f8:	movwlt	r1, #1
   139fc:	cmp	r1, #0
   13a00:	mvnne	r1, #0
   13a04:	subs	r0, r2, r0
   13a08:	sbcs	r0, r7, r5
   13a0c:	movwlt	r1, #1
   13a10:	pop	{r5, r7, fp, lr}
   13a14:	mov	r0, r1
   13a18:	bx	lr
   13a1c:	cmp	r1, #0
   13a20:	mvnne	r1, #0
   13a24:	mov	r0, r1
   13a28:	bx	lr

00013a2c <table_compare_uint64@@Base>:
   13a2c:	cmp	r0, #0
   13a30:	beq	13a84 <table_compare_uint64@@Base+0x58>
   13a34:	cmp	r1, #0
   13a38:	moveq	r1, #1
   13a3c:	moveq	r0, r1
   13a40:	bxeq	lr
   13a44:	push	{r5, r7, fp, lr}
   13a48:	add	fp, sp, #8
   13a4c:	ldm	r1, {r2, r7}
   13a50:	ldm	r0, {r0, r5}
   13a54:	mov	r1, #0
   13a58:	subs	r3, r0, r2
   13a5c:	sbcs	r3, r5, r7
   13a60:	movwcc	r1, #1
   13a64:	cmp	r1, #0
   13a68:	mvnne	r1, #0
   13a6c:	subs	r0, r2, r0
   13a70:	sbcs	r0, r7, r5
   13a74:	movwcc	r1, #1
   13a78:	pop	{r5, r7, fp, lr}
   13a7c:	mov	r0, r1
   13a80:	bx	lr
   13a84:	cmp	r1, #0
   13a88:	mvnne	r1, #0
   13a8c:	mov	r0, r1
   13a90:	bx	lr

00013a94 <table_compare_short@@Base>:
   13a94:	cmp	r0, #0
   13a98:	beq	13acc <table_compare_short@@Base+0x38>
   13a9c:	cmp	r1, #0
   13aa0:	moveq	r1, #1
   13aa4:	moveq	r0, r1
   13aa8:	bxeq	lr
   13aac:	ldrsh	r2, [r1]
   13ab0:	ldrsh	r0, [r0]
   13ab4:	mov	r1, #0
   13ab8:	cmp	r0, r2
   13abc:	mvnlt	r1, #0
   13ac0:	movwgt	r1, #1
   13ac4:	mov	r0, r1
   13ac8:	bx	lr
   13acc:	cmp	r1, #0
   13ad0:	mvnne	r1, #0
   13ad4:	mov	r0, r1
   13ad8:	bx	lr

00013adc <table_compare_ushort@@Base>:
   13adc:	cmp	r0, #0
   13ae0:	beq	13b14 <table_compare_ushort@@Base+0x38>
   13ae4:	cmp	r1, #0
   13ae8:	moveq	r1, #1
   13aec:	moveq	r0, r1
   13af0:	bxeq	lr
   13af4:	ldrh	r2, [r1]
   13af8:	ldrh	r0, [r0]
   13afc:	mov	r1, #0
   13b00:	cmp	r0, r2
   13b04:	mvncc	r1, #0
   13b08:	movwhi	r1, #1
   13b0c:	mov	r0, r1
   13b10:	bx	lr
   13b14:	cmp	r1, #0
   13b18:	mvnne	r1, #0
   13b1c:	mov	r0, r1
   13b20:	bx	lr

00013b24 <table_compare_long@@Base>:
   13b24:	cmp	r0, #0
   13b28:	beq	13b5c <table_compare_long@@Base+0x38>
   13b2c:	cmp	r1, #0
   13b30:	moveq	r1, #1
   13b34:	moveq	r0, r1
   13b38:	bxeq	lr
   13b3c:	ldr	r2, [r1]
   13b40:	ldr	r0, [r0]
   13b44:	mov	r1, #0
   13b48:	cmp	r0, r2
   13b4c:	mvnlt	r1, #0
   13b50:	movwgt	r1, #1
   13b54:	mov	r0, r1
   13b58:	bx	lr
   13b5c:	cmp	r1, #0
   13b60:	mvnne	r1, #0
   13b64:	mov	r0, r1
   13b68:	bx	lr

00013b6c <table_compare_ulong@@Base>:
   13b6c:	cmp	r0, #0
   13b70:	beq	13ba4 <table_compare_ulong@@Base+0x38>
   13b74:	cmp	r1, #0
   13b78:	moveq	r1, #1
   13b7c:	moveq	r0, r1
   13b80:	bxeq	lr
   13b84:	ldr	r2, [r1]
   13b88:	ldr	r0, [r0]
   13b8c:	mov	r1, #0
   13b90:	cmp	r0, r2
   13b94:	mvncc	r1, #0
   13b98:	movwhi	r1, #1
   13b9c:	mov	r0, r1
   13ba0:	bx	lr
   13ba4:	cmp	r1, #0
   13ba8:	mvnne	r1, #0
   13bac:	mov	r0, r1
   13bb0:	bx	lr

00013bb4 <table_compare_llong@@Base>:
   13bb4:	cmp	r0, #0
   13bb8:	beq	13c0c <table_compare_llong@@Base+0x58>
   13bbc:	cmp	r1, #0
   13bc0:	moveq	r1, #1
   13bc4:	moveq	r0, r1
   13bc8:	bxeq	lr
   13bcc:	push	{r5, r7, fp, lr}
   13bd0:	add	fp, sp, #8
   13bd4:	ldm	r1, {r2, r7}
   13bd8:	ldm	r0, {r0, r5}
   13bdc:	mov	r1, #0
   13be0:	subs	r3, r0, r2
   13be4:	sbcs	r3, r5, r7
   13be8:	movwlt	r1, #1
   13bec:	cmp	r1, #0
   13bf0:	mvnne	r1, #0
   13bf4:	subs	r0, r2, r0
   13bf8:	sbcs	r0, r7, r5
   13bfc:	movwlt	r1, #1
   13c00:	pop	{r5, r7, fp, lr}
   13c04:	mov	r0, r1
   13c08:	bx	lr
   13c0c:	cmp	r1, #0
   13c10:	mvnne	r1, #0
   13c14:	mov	r0, r1
   13c18:	bx	lr

00013c1c <table_compare_ullong@@Base>:
   13c1c:	cmp	r0, #0
   13c20:	beq	13c54 <table_compare_ullong@@Base+0x38>
   13c24:	cmp	r1, #0
   13c28:	moveq	r1, #1
   13c2c:	moveq	r0, r1
   13c30:	bxeq	lr
   13c34:	ldr	r2, [r1]
   13c38:	ldr	r0, [r0]
   13c3c:	mov	r1, #0
   13c40:	cmp	r0, r2
   13c44:	mvncc	r1, #0
   13c48:	movwhi	r1, #1
   13c4c:	mov	r0, r1
   13c50:	bx	lr
   13c54:	cmp	r1, #0
   13c58:	mvnne	r1, #0
   13c5c:	mov	r0, r1
   13c60:	bx	lr

00013c64 <table_compare_float@@Base>:
   13c64:	cmp	r0, #0
   13c68:	beq	13ca0 <table_compare_float@@Base+0x3c>
   13c6c:	cmp	r1, #0
   13c70:	moveq	r1, #1
   13c74:	moveq	r0, r1
   13c78:	bxeq	lr
   13c7c:	vldr	s0, [r1]
   13c80:	vldr	s2, [r0]
   13c84:	mov	r1, #0
   13c88:	vcmpe.f32	s2, s0
   13c8c:	vmrs	APSR_nzcv, fpscr
   13c90:	mvnmi	r1, #0
   13c94:	movwgt	r1, #1
   13c98:	mov	r0, r1
   13c9c:	bx	lr
   13ca0:	cmp	r1, #0
   13ca4:	mvnne	r1, #0
   13ca8:	mov	r0, r1
   13cac:	bx	lr

00013cb0 <table_compare_double@@Base>:
   13cb0:	cmp	r0, #0
   13cb4:	beq	13cec <table_compare_double@@Base+0x3c>
   13cb8:	cmp	r1, #0
   13cbc:	moveq	r1, #1
   13cc0:	moveq	r0, r1
   13cc4:	bxeq	lr
   13cc8:	vldr	d16, [r1]
   13ccc:	vldr	d17, [r0]
   13cd0:	mov	r1, #0
   13cd4:	vcmpe.f64	d17, d16
   13cd8:	vmrs	APSR_nzcv, fpscr
   13cdc:	mvnmi	r1, #0
   13ce0:	movwgt	r1, #1
   13ce4:	mov	r0, r1
   13ce8:	bx	lr
   13cec:	cmp	r1, #0
   13cf0:	mvnne	r1, #0
   13cf4:	mov	r0, r1
   13cf8:	bx	lr

00013cfc <table_compare_ldouble@@Base>:
   13cfc:	cmp	r0, #0
   13d00:	beq	13d38 <table_compare_ldouble@@Base+0x3c>
   13d04:	cmp	r1, #0
   13d08:	moveq	r1, #1
   13d0c:	moveq	r0, r1
   13d10:	bxeq	lr
   13d14:	vldr	d16, [r1]
   13d18:	vldr	d17, [r0]
   13d1c:	mov	r1, #0
   13d20:	vcmpe.f64	d17, d16
   13d24:	vmrs	APSR_nzcv, fpscr
   13d28:	mvnmi	r1, #0
   13d2c:	movwgt	r1, #1
   13d30:	mov	r0, r1
   13d34:	bx	lr
   13d38:	cmp	r1, #0
   13d3c:	mvnne	r1, #0
   13d40:	mov	r0, r1
   13d44:	bx	lr

00013d48 <table_compare_char@@Base>:
   13d48:	cmp	r0, #0
   13d4c:	beq	13d80 <table_compare_char@@Base+0x38>
   13d50:	cmp	r1, #0
   13d54:	moveq	r1, #1
   13d58:	moveq	r0, r1
   13d5c:	bxeq	lr
   13d60:	ldrb	r2, [r1]
   13d64:	ldrb	r0, [r0]
   13d68:	mov	r1, #0
   13d6c:	cmp	r0, r2
   13d70:	mvncc	r1, #0
   13d74:	movwhi	r1, #1
   13d78:	mov	r0, r1
   13d7c:	bx	lr
   13d80:	cmp	r1, #0
   13d84:	mvnne	r1, #0
   13d88:	mov	r0, r1
   13d8c:	bx	lr

00013d90 <table_compare_uchar@@Base>:
   13d90:	cmp	r0, #0
   13d94:	beq	13dc8 <table_compare_uchar@@Base+0x38>
   13d98:	cmp	r1, #0
   13d9c:	moveq	r1, #1
   13da0:	moveq	r0, r1
   13da4:	bxeq	lr
   13da8:	ldrb	r2, [r1]
   13dac:	ldrb	r0, [r0]
   13db0:	mov	r1, #0
   13db4:	cmp	r0, r2
   13db8:	mvncc	r1, #0
   13dbc:	movwhi	r1, #1
   13dc0:	mov	r0, r1
   13dc4:	bx	lr
   13dc8:	cmp	r1, #0
   13dcc:	mvnne	r1, #0
   13dd0:	mov	r0, r1
   13dd4:	bx	lr

00013dd8 <table_compare_string@@Base>:
   13dd8:	cmp	r0, #0
   13ddc:	beq	13df4 <table_compare_string@@Base+0x1c>
   13de0:	cmp	r1, #0
   13de4:	moveq	r1, #1
   13de8:	moveq	r0, r1
   13dec:	bxeq	lr
   13df0:	b	11f80 <strcmp@plt>
   13df4:	cmp	r1, #0
   13df8:	mvnne	r1, #0
   13dfc:	mov	r0, r1
   13e00:	bx	lr

00013e04 <table_compare_ptr@@Base>:
   13e04:	mov	r2, #0
   13e08:	cmp	r0, r1
   13e0c:	mvncc	r2, #0
   13e10:	movwhi	r2, #1
   13e14:	mov	r0, r2
   13e18:	bx	lr

00013e1c <table_get_default_compare_function_for_data_type@@Base>:
   13e1c:	cmp	r0, #23
   13e20:	movwls	r1, #25872	; 0x6510
   13e24:	movhi	r0, #0
   13e28:	movtls	r1, #1
   13e2c:	ldrls	r0, [r1, r0, lsl #2]
   13e30:	bx	lr

00013e34 <table_get@@Base>:
   13e34:	push	{fp, lr}
   13e38:	mov	fp, sp
   13e3c:	bl	159cc <table_get_cell_ptr@@Base>
   13e40:	ldr	r0, [r0]
   13e44:	pop	{fp, pc}

00013e48 <table_get_bool@@Base>:
   13e48:	push	{fp, lr}
   13e4c:	mov	fp, sp
   13e50:	bl	159cc <table_get_cell_ptr@@Base>
   13e54:	ldr	r0, [r0]
   13e58:	ldrb	r0, [r0]
   13e5c:	pop	{fp, pc}

00013e60 <table_get_int@@Base>:
   13e60:	push	{fp, lr}
   13e64:	mov	fp, sp
   13e68:	bl	159cc <table_get_cell_ptr@@Base>
   13e6c:	ldr	r0, [r0]
   13e70:	ldr	r0, [r0]
   13e74:	pop	{fp, pc}

00013e78 <table_get_uint@@Base>:
   13e78:	push	{fp, lr}
   13e7c:	mov	fp, sp
   13e80:	bl	159cc <table_get_cell_ptr@@Base>
   13e84:	ldr	r0, [r0]
   13e88:	ldr	r0, [r0]
   13e8c:	pop	{fp, pc}

00013e90 <table_get_int8@@Base>:
   13e90:	push	{fp, lr}
   13e94:	mov	fp, sp
   13e98:	bl	159cc <table_get_cell_ptr@@Base>
   13e9c:	ldr	r0, [r0]
   13ea0:	ldrsb	r0, [r0]
   13ea4:	pop	{fp, pc}

00013ea8 <table_get_uint8@@Base>:
   13ea8:	push	{fp, lr}
   13eac:	mov	fp, sp
   13eb0:	bl	159cc <table_get_cell_ptr@@Base>
   13eb4:	ldr	r0, [r0]
   13eb8:	ldrb	r0, [r0]
   13ebc:	pop	{fp, pc}

00013ec0 <table_get_int16@@Base>:
   13ec0:	push	{fp, lr}
   13ec4:	mov	fp, sp
   13ec8:	bl	159cc <table_get_cell_ptr@@Base>
   13ecc:	ldr	r0, [r0]
   13ed0:	ldrsh	r0, [r0]
   13ed4:	pop	{fp, pc}

00013ed8 <table_get_uint16@@Base>:
   13ed8:	push	{fp, lr}
   13edc:	mov	fp, sp
   13ee0:	bl	159cc <table_get_cell_ptr@@Base>
   13ee4:	ldr	r0, [r0]
   13ee8:	ldrh	r0, [r0]
   13eec:	pop	{fp, pc}

00013ef0 <table_get_int32@@Base>:
   13ef0:	push	{fp, lr}
   13ef4:	mov	fp, sp
   13ef8:	bl	159cc <table_get_cell_ptr@@Base>
   13efc:	ldr	r0, [r0]
   13f00:	ldr	r0, [r0]
   13f04:	pop	{fp, pc}

00013f08 <table_get_uint32@@Base>:
   13f08:	push	{fp, lr}
   13f0c:	mov	fp, sp
   13f10:	bl	159cc <table_get_cell_ptr@@Base>
   13f14:	ldr	r0, [r0]
   13f18:	ldr	r0, [r0]
   13f1c:	pop	{fp, pc}

00013f20 <table_get_int64@@Base>:
   13f20:	push	{fp, lr}
   13f24:	mov	fp, sp
   13f28:	bl	159cc <table_get_cell_ptr@@Base>
   13f2c:	ldr	r0, [r0]
   13f30:	ldrd	r0, [r0]
   13f34:	pop	{fp, pc}

00013f38 <table_get_uint64@@Base>:
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	bl	159cc <table_get_cell_ptr@@Base>
   13f44:	ldr	r0, [r0]
   13f48:	ldrd	r0, [r0]
   13f4c:	pop	{fp, pc}

00013f50 <table_get_short@@Base>:
   13f50:	push	{fp, lr}
   13f54:	mov	fp, sp
   13f58:	bl	159cc <table_get_cell_ptr@@Base>
   13f5c:	ldr	r0, [r0]
   13f60:	ldrsh	r0, [r0]
   13f64:	pop	{fp, pc}

00013f68 <table_get_ushort@@Base>:
   13f68:	push	{fp, lr}
   13f6c:	mov	fp, sp
   13f70:	bl	159cc <table_get_cell_ptr@@Base>
   13f74:	ldr	r0, [r0]
   13f78:	ldrh	r0, [r0]
   13f7c:	pop	{fp, pc}

00013f80 <table_get_long@@Base>:
   13f80:	push	{fp, lr}
   13f84:	mov	fp, sp
   13f88:	bl	159cc <table_get_cell_ptr@@Base>
   13f8c:	ldr	r0, [r0]
   13f90:	ldr	r0, [r0]
   13f94:	pop	{fp, pc}

00013f98 <table_get_ulong@@Base>:
   13f98:	push	{fp, lr}
   13f9c:	mov	fp, sp
   13fa0:	bl	159cc <table_get_cell_ptr@@Base>
   13fa4:	ldr	r0, [r0]
   13fa8:	ldr	r0, [r0]
   13fac:	pop	{fp, pc}

00013fb0 <table_get_llong@@Base>:
   13fb0:	push	{fp, lr}
   13fb4:	mov	fp, sp
   13fb8:	bl	159cc <table_get_cell_ptr@@Base>
   13fbc:	ldr	r0, [r0]
   13fc0:	ldrd	r0, [r0]
   13fc4:	pop	{fp, pc}

00013fc8 <table_get_ullong@@Base>:
   13fc8:	push	{fp, lr}
   13fcc:	mov	fp, sp
   13fd0:	bl	159cc <table_get_cell_ptr@@Base>
   13fd4:	ldr	r0, [r0]
   13fd8:	ldrd	r0, [r0]
   13fdc:	pop	{fp, pc}

00013fe0 <table_get_float@@Base>:
   13fe0:	push	{fp, lr}
   13fe4:	mov	fp, sp
   13fe8:	bl	159cc <table_get_cell_ptr@@Base>
   13fec:	ldr	r0, [r0]
   13ff0:	vldr	s0, [r0]
   13ff4:	pop	{fp, pc}

00013ff8 <table_get_double@@Base>:
   13ff8:	push	{fp, lr}
   13ffc:	mov	fp, sp
   14000:	bl	159cc <table_get_cell_ptr@@Base>
   14004:	ldr	r0, [r0]
   14008:	vldr	d0, [r0]
   1400c:	pop	{fp, pc}

00014010 <table_get_ldouble@@Base>:
   14010:	push	{fp, lr}
   14014:	mov	fp, sp
   14018:	bl	159cc <table_get_cell_ptr@@Base>
   1401c:	ldr	r0, [r0]
   14020:	vldr	d0, [r0]
   14024:	pop	{fp, pc}

00014028 <table_get_char@@Base>:
   14028:	push	{fp, lr}
   1402c:	mov	fp, sp
   14030:	bl	159cc <table_get_cell_ptr@@Base>
   14034:	ldr	r0, [r0]
   14038:	ldrb	r0, [r0]
   1403c:	pop	{fp, pc}

00014040 <table_get_uchar@@Base>:
   14040:	push	{fp, lr}
   14044:	mov	fp, sp
   14048:	bl	159cc <table_get_cell_ptr@@Base>
   1404c:	ldr	r0, [r0]
   14050:	ldrb	r0, [r0]
   14054:	pop	{fp, pc}

00014058 <table_get_string@@Base>:
   14058:	push	{fp, lr}
   1405c:	mov	fp, sp
   14060:	bl	159cc <table_get_cell_ptr@@Base>
   14064:	ldr	r0, [r0]
   14068:	pop	{fp, pc}

0001406c <table_get_ptr@@Base>:
   1406c:	push	{fp, lr}
   14070:	mov	fp, sp
   14074:	bl	159cc <table_get_cell_ptr@@Base>
   14078:	ldr	r0, [r0]
   1407c:	pop	{fp, pc}

00014080 <table_row_init@@Base>:
   14080:	push	{r4, r5, fp, lr}
   14084:	add	fp, sp, #8
   14088:	mov	r4, r1
   1408c:	ldr	r1, [r0, #12]
   14090:	ldr	r5, [r0, #16]
   14094:	lsl	r0, r1, #2
   14098:	bl	11fc8 <malloc@plt>
   1409c:	str	r0, [r5, r4, lsl #2]
   140a0:	pop	{r4, r5, fp, pc}

000140a4 <table_get_row_ptr@@Base>:
   140a4:	ldr	r0, [r0, #16]
   140a8:	add	r0, r0, r1, lsl #2
   140ac:	bx	lr

000140b0 <table_row_destroy@@Base>:
   140b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   140b4:	add	fp, sp, #24
   140b8:	mov	r4, r1
   140bc:	mov	r5, r0
   140c0:	bl	133b0 <table_get_column_length@@Base>
   140c4:	ldr	r8, [r5, #16]
   140c8:	cmp	r0, #1
   140cc:	blt	140f4 <table_row_destroy@@Base+0x44>
   140d0:	mov	r6, r0
   140d4:	mov	r7, #0
   140d8:	mov	r0, r5
   140dc:	mov	r1, r4
   140e0:	mov	r2, r7
   140e4:	bl	159e8 <table_cell_destroy@@Base>
   140e8:	add	r7, r7, #1
   140ec:	cmp	r6, r7
   140f0:	bne	140d8 <table_row_destroy@@Base+0x28>
   140f4:	ldr	r0, [r8, r4, lsl #2]
   140f8:	cmp	r0, #0
   140fc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   14100:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14104:	b	11f98 <free@plt>

00014108 <table_get_row_length@@Base>:
   14108:	ldr	r0, [r0, #20]
   1410c:	bx	lr

00014110 <table_add_row@@Base>:
   14110:	push	{r4, r5, r6, r7, fp, lr}
   14114:	add	fp, sp, #16
   14118:	ldr	r5, [r0, #20]
   1411c:	ldr	r1, [r0, #24]
   14120:	mov	r4, r0
   14124:	udiv	r0, r5, r1
   14128:	mls	r0, r0, r1, r5
   1412c:	cmp	r0, #0
   14130:	bne	14154 <table_add_row@@Base+0x44>
   14134:	ldr	r2, [r4, #28]
   14138:	ldr	r0, [r4, #16]
   1413c:	add	r1, r2, r1
   14140:	str	r1, [r4, #28]
   14144:	lsl	r1, r1, #2
   14148:	bl	11fb0 <realloc@plt>
   1414c:	str	r0, [r4, #16]
   14150:	ldr	r5, [r4, #20]
   14154:	mov	r0, r4
   14158:	bl	133b0 <table_get_column_length@@Base>
   1415c:	mov	r6, r0
   14160:	ldr	r0, [r4, #12]
   14164:	ldr	r7, [r4, #16]
   14168:	lsl	r0, r0, #2
   1416c:	bl	11fc8 <malloc@plt>
   14170:	cmp	r6, #1
   14174:	str	r0, [r7, r5, lsl #2]
   14178:	blt	1419c <table_add_row@@Base+0x8c>
   1417c:	mov	r7, #0
   14180:	mov	r0, r4
   14184:	mov	r1, r5
   14188:	mov	r2, r7
   1418c:	bl	159ac <table_cell_init@@Base>
   14190:	add	r7, r7, #1
   14194:	cmp	r6, r7
   14198:	bne	14180 <table_add_row@@Base+0x70>
   1419c:	ldr	r1, [r4, #20]
   141a0:	mov	r0, r4
   141a4:	mvn	r2, #0
   141a8:	mov	r3, #2
   141ac:	bl	132bc <table_notify@@Base>
   141b0:	ldr	r0, [r4, #20]
   141b4:	add	r1, r0, #1
   141b8:	str	r1, [r4, #20]
   141bc:	pop	{r4, r5, r6, r7, fp, pc}

000141c0 <table_remove_row@@Base>:
   141c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141c4:	add	fp, sp, #24
   141c8:	ldr	r8, [r0, #20]
   141cc:	mov	r4, r1
   141d0:	mov	r5, r0
   141d4:	bl	133b0 <table_get_column_length@@Base>
   141d8:	cmp	r0, #1
   141dc:	blt	14228 <table_remove_row@@Base+0x68>
   141e0:	mov	r6, r0
   141e4:	mov	r7, #0
   141e8:	mov	r0, r5
   141ec:	mov	r1, r7
   141f0:	bl	13430 <table_get_column_data_type@@Base>
   141f4:	cmp	r0, #23
   141f8:	beq	1421c <table_remove_row@@Base+0x5c>
   141fc:	mov	r0, r5
   14200:	mov	r1, r4
   14204:	mov	r2, r7
   14208:	bl	159cc <table_get_cell_ptr@@Base>
   1420c:	ldr	r0, [r0]
   14210:	cmp	r0, #0
   14214:	beq	1421c <table_remove_row@@Base+0x5c>
   14218:	bl	11f98 <free@plt>
   1421c:	add	r7, r7, #1
   14220:	cmp	r6, r7
   14224:	bne	141e8 <table_remove_row@@Base+0x28>
   14228:	ldr	r0, [r5, #16]
   1422c:	ldr	r0, [r0, r4, lsl #2]
   14230:	cmp	r0, #0
   14234:	beq	1423c <table_remove_row@@Base+0x7c>
   14238:	bl	11f98 <free@plt>
   1423c:	sub	r0, r8, #1
   14240:	cmp	r0, r4
   14244:	ble	14268 <table_remove_row@@Base+0xa8>
   14248:	mov	r1, r4
   1424c:	ldr	r2, [r5, #16]
   14250:	add	r3, r2, r1, lsl #2
   14254:	ldr	r3, [r3, #4]
   14258:	str	r3, [r2, r1, lsl #2]
   1425c:	add	r1, r1, #1
   14260:	cmp	r0, r1
   14264:	bne	1424c <table_remove_row@@Base+0x8c>
   14268:	ldr	r0, [r5, #20]
   1426c:	ldr	r1, [r5, #24]
   14270:	sub	r0, r0, #1
   14274:	udiv	r2, r0, r1
   14278:	str	r0, [r5, #20]
   1427c:	mls	r0, r2, r1, r0
   14280:	cmp	r0, #0
   14284:	bne	142a4 <table_remove_row@@Base+0xe4>
   14288:	ldr	r2, [r5, #28]
   1428c:	ldr	r0, [r5, #16]
   14290:	sub	r1, r2, r1
   14294:	str	r1, [r5, #28]
   14298:	lsl	r1, r1, #2
   1429c:	bl	11fb0 <realloc@plt>
   142a0:	str	r0, [r5, #16]
   142a4:	mov	r0, r5
   142a8:	mov	r1, r4
   142ac:	mvn	r2, #0
   142b0:	mov	r3, #4
   142b4:	bl	132bc <table_notify@@Base>
   142b8:	mov	r0, #0
   142bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000142c0 <table_set_row_ptr@@Base>:
   142c0:	ldr	r2, [r2]
   142c4:	ldr	r0, [r0, #16]
   142c8:	str	r2, [r0, r1, lsl #2]
   142cc:	bx	lr

000142d0 <table_set@@Base>:
   142d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142d4:	add	fp, sp, #24
   142d8:	mov	r8, r3
   142dc:	mov	r4, r2
   142e0:	mov	r9, r1
   142e4:	mov	r6, r0
   142e8:	bl	159cc <table_get_cell_ptr@@Base>
   142ec:	mov	r5, r0
   142f0:	mov	r0, r6
   142f4:	mov	r1, r4
   142f8:	bl	13388 <table_get_col_ptr@@Base>
   142fc:	ldr	r1, [fp, #8]
   14300:	mvn	r7, #0
   14304:	cmp	r1, #23
   14308:	bhi	145cc <table_set@@Base+0x2fc>
   1430c:	add	r2, pc, #0
   14310:	ldr	pc, [r2, r1, lsl #2]
   14314:	andeq	r4, r1, r4, ror r3
   14318:	andeq	r4, r1, r4, lsl #7
   1431c:	muleq	r1, r4, r3
   14320:	andeq	r4, r1, r4, lsr #7
   14324:			; <UNDEFINED> instruction: 0x000143b4
   14328:	andeq	r4, r1, r4, asr #7
   1432c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14330:	andeq	r4, r1, r4, ror #7
   14334:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14338:	andeq	r4, r1, r4, lsl #8
   1433c:	andeq	r4, r1, r4, lsl r4
   14340:	andeq	r4, r1, r4, lsr #8
   14344:	andeq	r4, r1, ip, asr r4
   14348:	andeq	r4, r1, ip, ror #8
   1434c:	andeq	r4, r1, ip, ror r4
   14350:	andeq	r4, r1, ip, lsl #9
   14354:	muleq	r1, ip, r4
   14358:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1435c:	andeq	r4, r1, r4, ror #9
   14360:	andeq	r4, r1, r4, lsr #10
   14364:	andeq	r4, r1, r4, lsr r5
   14368:	andeq	r4, r1, r4, asr #10
   1436c:	andeq	r4, r1, r0, lsl #11
   14370:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14374:	ldr	r0, [r0, #4]
   14378:	cmp	r0, #0
   1437c:	bne	145cc <table_set@@Base+0x2fc>
   14380:	b	144a8 <table_set@@Base+0x1d8>
   14384:	ldr	r0, [r0, #4]
   14388:	cmp	r0, #1
   1438c:	beq	144a8 <table_set@@Base+0x1d8>
   14390:	b	145cc <table_set@@Base+0x2fc>
   14394:	ldr	r0, [r0, #4]
   14398:	cmp	r0, #2
   1439c:	beq	1458c <table_set@@Base+0x2bc>
   143a0:	b	145cc <table_set@@Base+0x2fc>
   143a4:	ldr	r0, [r0, #4]
   143a8:	cmp	r0, #3
   143ac:	beq	1458c <table_set@@Base+0x2bc>
   143b0:	b	145cc <table_set@@Base+0x2fc>
   143b4:	ldr	r0, [r0, #4]
   143b8:	cmp	r0, #4
   143bc:	beq	14430 <table_set@@Base+0x160>
   143c0:	b	145cc <table_set@@Base+0x2fc>
   143c4:	ldr	r0, [r0, #4]
   143c8:	cmp	r0, #5
   143cc:	beq	14430 <table_set@@Base+0x160>
   143d0:	b	145cc <table_set@@Base+0x2fc>
   143d4:	ldr	r0, [r0, #4]
   143d8:	cmp	r0, #6
   143dc:	beq	144a8 <table_set@@Base+0x1d8>
   143e0:	b	145cc <table_set@@Base+0x2fc>
   143e4:	ldr	r0, [r0, #4]
   143e8:	cmp	r0, #7
   143ec:	beq	144a8 <table_set@@Base+0x1d8>
   143f0:	b	145cc <table_set@@Base+0x2fc>
   143f4:	ldr	r0, [r0, #4]
   143f8:	cmp	r0, #8
   143fc:	beq	144f0 <table_set@@Base+0x220>
   14400:	b	145cc <table_set@@Base+0x2fc>
   14404:	ldr	r0, [r0, #4]
   14408:	cmp	r0, #9
   1440c:	beq	144f0 <table_set@@Base+0x220>
   14410:	b	145cc <table_set@@Base+0x2fc>
   14414:	ldr	r0, [r0, #4]
   14418:	cmp	r0, #10
   1441c:	beq	14430 <table_set@@Base+0x160>
   14420:	b	145cc <table_set@@Base+0x2fc>
   14424:	ldr	r0, [r0, #4]
   14428:	cmp	r0, #11
   1442c:	bne	145cc <table_set@@Base+0x2fc>
   14430:	ldr	r0, [r5]
   14434:	cmp	r0, #0
   14438:	bne	14450 <table_set@@Base+0x180>
   1443c:	mov	r0, #2
   14440:	bl	11fc8 <malloc@plt>
   14444:	cmp	r0, #0
   14448:	str	r0, [r5]
   1444c:	beq	145cc <table_set@@Base+0x2fc>
   14450:	ldrh	r1, [r8]
   14454:	strh	r1, [r0]
   14458:	b	145b4 <table_set@@Base+0x2e4>
   1445c:	ldr	r0, [r0, #4]
   14460:	cmp	r0, #12
   14464:	beq	144a8 <table_set@@Base+0x1d8>
   14468:	b	145cc <table_set@@Base+0x2fc>
   1446c:	ldr	r0, [r0, #4]
   14470:	cmp	r0, #13
   14474:	beq	144a8 <table_set@@Base+0x1d8>
   14478:	b	145cc <table_set@@Base+0x2fc>
   1447c:	ldr	r0, [r0, #4]
   14480:	cmp	r0, #14
   14484:	beq	144f0 <table_set@@Base+0x220>
   14488:	b	145cc <table_set@@Base+0x2fc>
   1448c:	ldr	r0, [r0, #4]
   14490:	cmp	r0, #15
   14494:	beq	144f0 <table_set@@Base+0x220>
   14498:	b	145cc <table_set@@Base+0x2fc>
   1449c:	ldr	r0, [r0, #4]
   144a0:	cmp	r0, #16
   144a4:	bne	145cc <table_set@@Base+0x2fc>
   144a8:	ldr	r0, [r5]
   144ac:	cmp	r0, #0
   144b0:	bne	144c8 <table_set@@Base+0x1f8>
   144b4:	mov	r0, #4
   144b8:	bl	11fc8 <malloc@plt>
   144bc:	cmp	r0, #0
   144c0:	str	r0, [r5]
   144c4:	beq	145cc <table_set@@Base+0x2fc>
   144c8:	ldr	r1, [r8]
   144cc:	str	r1, [r0]
   144d0:	b	145b4 <table_set@@Base+0x2e4>
   144d4:	ldr	r0, [r0, #4]
   144d8:	cmp	r0, #17
   144dc:	beq	144f0 <table_set@@Base+0x220>
   144e0:	b	145cc <table_set@@Base+0x2fc>
   144e4:	ldr	r0, [r0, #4]
   144e8:	cmp	r0, #18
   144ec:	bne	145cc <table_set@@Base+0x2fc>
   144f0:	ldr	r0, [r5]
   144f4:	cmp	r0, #0
   144f8:	bne	14510 <table_set@@Base+0x240>
   144fc:	mov	r0, #8
   14500:	bl	11fc8 <malloc@plt>
   14504:	cmp	r0, #0
   14508:	str	r0, [r5]
   1450c:	beq	145cc <table_set@@Base+0x2fc>
   14510:	ldr	r1, [r8]
   14514:	ldr	r2, [r8, #4]
   14518:	str	r2, [r0, #4]
   1451c:	str	r1, [r0]
   14520:	b	145b4 <table_set@@Base+0x2e4>
   14524:	ldr	r0, [r0, #4]
   14528:	cmp	r0, #19
   1452c:	beq	1458c <table_set@@Base+0x2bc>
   14530:	b	145cc <table_set@@Base+0x2fc>
   14534:	ldr	r0, [r0, #4]
   14538:	cmp	r0, #20
   1453c:	beq	1458c <table_set@@Base+0x2bc>
   14540:	b	145cc <table_set@@Base+0x2fc>
   14544:	ldr	r0, [r0, #4]
   14548:	cmp	r0, #21
   1454c:	bne	145cc <table_set@@Base+0x2fc>
   14550:	mov	r0, r8
   14554:	bl	11fec <strlen@plt>
   14558:	ldr	r2, [r5]
   1455c:	add	r1, r0, #1
   14560:	mov	r0, r2
   14564:	bl	11fb0 <realloc@plt>
   14568:	cmp	r0, #0
   1456c:	str	r0, [r5]
   14570:	beq	145cc <table_set@@Base+0x2fc>
   14574:	mov	r1, r8
   14578:	bl	11fbc <strcpy@plt>
   1457c:	b	145b4 <table_set@@Base+0x2e4>
   14580:	ldr	r0, [r0, #4]
   14584:	cmp	r0, #22
   14588:	bne	145cc <table_set@@Base+0x2fc>
   1458c:	ldr	r0, [r5]
   14590:	cmp	r0, #0
   14594:	bne	145ac <table_set@@Base+0x2dc>
   14598:	mov	r0, #1
   1459c:	bl	11fc8 <malloc@plt>
   145a0:	cmp	r0, #0
   145a4:	str	r0, [r5]
   145a8:	beq	145cc <table_set@@Base+0x2fc>
   145ac:	ldrb	r1, [r8]
   145b0:	strb	r1, [r0]
   145b4:	mov	r0, r6
   145b8:	mov	r1, r9
   145bc:	mov	r2, r4
   145c0:	mov	r3, #1
   145c4:	bl	132bc <table_notify@@Base>
   145c8:	mov	r7, #0
   145cc:	mov	r0, r7
   145d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   145d4:	ldr	r0, [r0, #4]
   145d8:	cmp	r0, #23
   145dc:	bne	145cc <table_set@@Base+0x2fc>
   145e0:	str	r8, [r5]
   145e4:	b	145b4 <table_set@@Base+0x2e4>

000145e8 <table_set_bool@@Base>:
   145e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145ec:	add	fp, sp, #24
   145f0:	mov	r8, r3
   145f4:	mov	r4, r2
   145f8:	mov	r9, r1
   145fc:	mov	r6, r0
   14600:	bl	159cc <table_get_cell_ptr@@Base>
   14604:	mov	r5, r0
   14608:	mov	r0, r6
   1460c:	mov	r1, r4
   14610:	bl	13388 <table_get_col_ptr@@Base>
   14614:	ldr	r0, [r0, #4]
   14618:	mvn	r7, #0
   1461c:	cmp	r0, #22
   14620:	bne	14660 <table_set_bool@@Base+0x78>
   14624:	ldr	r0, [r5]
   14628:	cmp	r0, #0
   1462c:	bne	14644 <table_set_bool@@Base+0x5c>
   14630:	mov	r0, #1
   14634:	bl	11fc8 <malloc@plt>
   14638:	cmp	r0, #0
   1463c:	str	r0, [r5]
   14640:	beq	14660 <table_set_bool@@Base+0x78>
   14644:	strb	r8, [r0]
   14648:	mov	r0, r6
   1464c:	mov	r1, r9
   14650:	mov	r2, r4
   14654:	mov	r3, #1
   14658:	bl	132bc <table_notify@@Base>
   1465c:	mov	r7, #0
   14660:	mov	r0, r7
   14664:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014668 <table_set_int@@Base>:
   14668:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1466c:	add	fp, sp, #24
   14670:	mov	r8, r3
   14674:	mov	r4, r2
   14678:	mov	r5, r1
   1467c:	mov	r6, r0
   14680:	bl	159cc <table_get_cell_ptr@@Base>
   14684:	mov	r9, r0
   14688:	mov	r0, r6
   1468c:	mov	r1, r4
   14690:	bl	13388 <table_get_col_ptr@@Base>
   14694:	ldr	r0, [r0, #4]
   14698:	mvn	r7, #0
   1469c:	cmp	r0, #0
   146a0:	bne	146e0 <table_set_int@@Base+0x78>
   146a4:	ldr	r0, [r9]
   146a8:	cmp	r0, #0
   146ac:	bne	146c4 <table_set_int@@Base+0x5c>
   146b0:	mov	r0, #4
   146b4:	bl	11fc8 <malloc@plt>
   146b8:	cmp	r0, #0
   146bc:	str	r0, [r9]
   146c0:	beq	146e0 <table_set_int@@Base+0x78>
   146c4:	str	r8, [r0]
   146c8:	mov	r0, r6
   146cc:	mov	r1, r5
   146d0:	mov	r2, r4
   146d4:	mov	r3, #1
   146d8:	bl	132bc <table_notify@@Base>
   146dc:	mov	r7, #0
   146e0:	mov	r0, r7
   146e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146e8 <table_set_uint@@Base>:
   146e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   146ec:	add	fp, sp, #24
   146f0:	mov	r8, r3
   146f4:	mov	r4, r2
   146f8:	mov	r5, r1
   146fc:	mov	r6, r0
   14700:	bl	159cc <table_get_cell_ptr@@Base>
   14704:	mov	r9, r0
   14708:	mov	r0, r6
   1470c:	mov	r1, r4
   14710:	bl	13388 <table_get_col_ptr@@Base>
   14714:	ldr	r0, [r0, #4]
   14718:	mvn	r7, #0
   1471c:	cmp	r0, #1
   14720:	bne	14760 <table_set_uint@@Base+0x78>
   14724:	ldr	r0, [r9]
   14728:	cmp	r0, #0
   1472c:	bne	14744 <table_set_uint@@Base+0x5c>
   14730:	mov	r0, #4
   14734:	bl	11fc8 <malloc@plt>
   14738:	cmp	r0, #0
   1473c:	str	r0, [r9]
   14740:	beq	14760 <table_set_uint@@Base+0x78>
   14744:	str	r8, [r0]
   14748:	mov	r0, r6
   1474c:	mov	r1, r5
   14750:	mov	r2, r4
   14754:	mov	r3, #1
   14758:	bl	132bc <table_notify@@Base>
   1475c:	mov	r7, #0
   14760:	mov	r0, r7
   14764:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014768 <table_set_int8@@Base>:
   14768:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1476c:	add	fp, sp, #24
   14770:	mov	r8, r3
   14774:	mov	r4, r2
   14778:	mov	r9, r1
   1477c:	mov	r6, r0
   14780:	bl	159cc <table_get_cell_ptr@@Base>
   14784:	mov	r5, r0
   14788:	mov	r0, r6
   1478c:	mov	r1, r4
   14790:	bl	13388 <table_get_col_ptr@@Base>
   14794:	ldr	r0, [r0, #4]
   14798:	mvn	r7, #0
   1479c:	cmp	r0, #2
   147a0:	bne	147e0 <table_set_int8@@Base+0x78>
   147a4:	ldr	r0, [r5]
   147a8:	cmp	r0, #0
   147ac:	bne	147c4 <table_set_int8@@Base+0x5c>
   147b0:	mov	r0, #1
   147b4:	bl	11fc8 <malloc@plt>
   147b8:	cmp	r0, #0
   147bc:	str	r0, [r5]
   147c0:	beq	147e0 <table_set_int8@@Base+0x78>
   147c4:	strb	r8, [r0]
   147c8:	mov	r0, r6
   147cc:	mov	r1, r9
   147d0:	mov	r2, r4
   147d4:	mov	r3, #1
   147d8:	bl	132bc <table_notify@@Base>
   147dc:	mov	r7, #0
   147e0:	mov	r0, r7
   147e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000147e8 <table_set_uint8@@Base>:
   147e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147ec:	add	fp, sp, #24
   147f0:	mov	r8, r3
   147f4:	mov	r4, r2
   147f8:	mov	r9, r1
   147fc:	mov	r6, r0
   14800:	bl	159cc <table_get_cell_ptr@@Base>
   14804:	mov	r5, r0
   14808:	mov	r0, r6
   1480c:	mov	r1, r4
   14810:	bl	13388 <table_get_col_ptr@@Base>
   14814:	ldr	r0, [r0, #4]
   14818:	mvn	r7, #0
   1481c:	cmp	r0, #3
   14820:	bne	14860 <table_set_uint8@@Base+0x78>
   14824:	ldr	r0, [r5]
   14828:	cmp	r0, #0
   1482c:	bne	14844 <table_set_uint8@@Base+0x5c>
   14830:	mov	r0, #1
   14834:	bl	11fc8 <malloc@plt>
   14838:	cmp	r0, #0
   1483c:	str	r0, [r5]
   14840:	beq	14860 <table_set_uint8@@Base+0x78>
   14844:	strb	r8, [r0]
   14848:	mov	r0, r6
   1484c:	mov	r1, r9
   14850:	mov	r2, r4
   14854:	mov	r3, #1
   14858:	bl	132bc <table_notify@@Base>
   1485c:	mov	r7, #0
   14860:	mov	r0, r7
   14864:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014868 <table_set_int16@@Base>:
   14868:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1486c:	add	fp, sp, #24
   14870:	mov	r8, r3
   14874:	mov	r4, r2
   14878:	mov	r9, r1
   1487c:	mov	r6, r0
   14880:	bl	159cc <table_get_cell_ptr@@Base>
   14884:	mov	r5, r0
   14888:	mov	r0, r6
   1488c:	mov	r1, r4
   14890:	bl	13388 <table_get_col_ptr@@Base>
   14894:	ldr	r0, [r0, #4]
   14898:	mvn	r7, #0
   1489c:	cmp	r0, #4
   148a0:	bne	148e0 <table_set_int16@@Base+0x78>
   148a4:	ldr	r0, [r5]
   148a8:	cmp	r0, #0
   148ac:	bne	148c4 <table_set_int16@@Base+0x5c>
   148b0:	mov	r0, #2
   148b4:	bl	11fc8 <malloc@plt>
   148b8:	cmp	r0, #0
   148bc:	str	r0, [r5]
   148c0:	beq	148e0 <table_set_int16@@Base+0x78>
   148c4:	strh	r8, [r0]
   148c8:	mov	r0, r6
   148cc:	mov	r1, r9
   148d0:	mov	r2, r4
   148d4:	mov	r3, #1
   148d8:	bl	132bc <table_notify@@Base>
   148dc:	mov	r7, #0
   148e0:	mov	r0, r7
   148e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148e8 <table_set_uint16@@Base>:
   148e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148ec:	add	fp, sp, #24
   148f0:	mov	r8, r3
   148f4:	mov	r4, r2
   148f8:	mov	r9, r1
   148fc:	mov	r6, r0
   14900:	bl	159cc <table_get_cell_ptr@@Base>
   14904:	mov	r5, r0
   14908:	mov	r0, r6
   1490c:	mov	r1, r4
   14910:	bl	13388 <table_get_col_ptr@@Base>
   14914:	ldr	r0, [r0, #4]
   14918:	mvn	r7, #0
   1491c:	cmp	r0, #5
   14920:	bne	14960 <table_set_uint16@@Base+0x78>
   14924:	ldr	r0, [r5]
   14928:	cmp	r0, #0
   1492c:	bne	14944 <table_set_uint16@@Base+0x5c>
   14930:	mov	r0, #2
   14934:	bl	11fc8 <malloc@plt>
   14938:	cmp	r0, #0
   1493c:	str	r0, [r5]
   14940:	beq	14960 <table_set_uint16@@Base+0x78>
   14944:	strh	r8, [r0]
   14948:	mov	r0, r6
   1494c:	mov	r1, r9
   14950:	mov	r2, r4
   14954:	mov	r3, #1
   14958:	bl	132bc <table_notify@@Base>
   1495c:	mov	r7, #0
   14960:	mov	r0, r7
   14964:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014968 <table_set_int32@@Base>:
   14968:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1496c:	add	fp, sp, #24
   14970:	mov	r8, r3
   14974:	mov	r4, r2
   14978:	mov	r5, r1
   1497c:	mov	r6, r0
   14980:	bl	159cc <table_get_cell_ptr@@Base>
   14984:	mov	r9, r0
   14988:	mov	r0, r6
   1498c:	mov	r1, r4
   14990:	bl	13388 <table_get_col_ptr@@Base>
   14994:	ldr	r0, [r0, #4]
   14998:	mvn	r7, #0
   1499c:	cmp	r0, #6
   149a0:	bne	149e0 <table_set_int32@@Base+0x78>
   149a4:	ldr	r0, [r9]
   149a8:	cmp	r0, #0
   149ac:	bne	149c4 <table_set_int32@@Base+0x5c>
   149b0:	mov	r0, #4
   149b4:	bl	11fc8 <malloc@plt>
   149b8:	cmp	r0, #0
   149bc:	str	r0, [r9]
   149c0:	beq	149e0 <table_set_int32@@Base+0x78>
   149c4:	str	r8, [r0]
   149c8:	mov	r0, r6
   149cc:	mov	r1, r5
   149d0:	mov	r2, r4
   149d4:	mov	r3, #1
   149d8:	bl	132bc <table_notify@@Base>
   149dc:	mov	r7, #0
   149e0:	mov	r0, r7
   149e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149e8 <table_set_uint32@@Base>:
   149e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149ec:	add	fp, sp, #24
   149f0:	mov	r8, r3
   149f4:	mov	r4, r2
   149f8:	mov	r5, r1
   149fc:	mov	r6, r0
   14a00:	bl	159cc <table_get_cell_ptr@@Base>
   14a04:	mov	r9, r0
   14a08:	mov	r0, r6
   14a0c:	mov	r1, r4
   14a10:	bl	13388 <table_get_col_ptr@@Base>
   14a14:	ldr	r0, [r0, #4]
   14a18:	mvn	r7, #0
   14a1c:	cmp	r0, #7
   14a20:	bne	14a60 <table_set_uint32@@Base+0x78>
   14a24:	ldr	r0, [r9]
   14a28:	cmp	r0, #0
   14a2c:	bne	14a44 <table_set_uint32@@Base+0x5c>
   14a30:	mov	r0, #4
   14a34:	bl	11fc8 <malloc@plt>
   14a38:	cmp	r0, #0
   14a3c:	str	r0, [r9]
   14a40:	beq	14a60 <table_set_uint32@@Base+0x78>
   14a44:	str	r8, [r0]
   14a48:	mov	r0, r6
   14a4c:	mov	r1, r5
   14a50:	mov	r2, r4
   14a54:	mov	r3, #1
   14a58:	bl	132bc <table_notify@@Base>
   14a5c:	mov	r7, #0
   14a60:	mov	r0, r7
   14a64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a68 <table_set_int64@@Base>:
   14a68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a6c:	add	fp, sp, #24
   14a70:	mov	r4, r2
   14a74:	mov	r8, r1
   14a78:	mov	r6, r0
   14a7c:	bl	159cc <table_get_cell_ptr@@Base>
   14a80:	mov	r5, r0
   14a84:	mov	r0, r6
   14a88:	mov	r1, r4
   14a8c:	bl	13388 <table_get_col_ptr@@Base>
   14a90:	ldr	r0, [r0, #4]
   14a94:	mvn	r7, #0
   14a98:	cmp	r0, #8
   14a9c:	bne	14ae8 <table_set_int64@@Base+0x80>
   14aa0:	ldr	r0, [r5]
   14aa4:	cmp	r0, #0
   14aa8:	bne	14ac0 <table_set_int64@@Base+0x58>
   14aac:	mov	r0, #8
   14ab0:	bl	11fc8 <malloc@plt>
   14ab4:	cmp	r0, #0
   14ab8:	str	r0, [r5]
   14abc:	beq	14ae8 <table_set_int64@@Base+0x80>
   14ac0:	ldr	r1, [fp, #12]
   14ac4:	ldr	r2, [fp, #8]
   14ac8:	mov	r3, #1
   14acc:	str	r2, [r0]
   14ad0:	str	r1, [r0, #4]
   14ad4:	mov	r0, r6
   14ad8:	mov	r1, r8
   14adc:	mov	r2, r4
   14ae0:	bl	132bc <table_notify@@Base>
   14ae4:	mov	r7, #0
   14ae8:	mov	r0, r7
   14aec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014af0 <table_set_uint64@@Base>:
   14af0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14af4:	add	fp, sp, #24
   14af8:	mov	r4, r2
   14afc:	mov	r8, r1
   14b00:	mov	r6, r0
   14b04:	bl	159cc <table_get_cell_ptr@@Base>
   14b08:	mov	r5, r0
   14b0c:	mov	r0, r6
   14b10:	mov	r1, r4
   14b14:	bl	13388 <table_get_col_ptr@@Base>
   14b18:	ldr	r0, [r0, #4]
   14b1c:	mvn	r7, #0
   14b20:	cmp	r0, #9
   14b24:	bne	14b70 <table_set_uint64@@Base+0x80>
   14b28:	ldr	r0, [r5]
   14b2c:	cmp	r0, #0
   14b30:	bne	14b48 <table_set_uint64@@Base+0x58>
   14b34:	mov	r0, #8
   14b38:	bl	11fc8 <malloc@plt>
   14b3c:	cmp	r0, #0
   14b40:	str	r0, [r5]
   14b44:	beq	14b70 <table_set_uint64@@Base+0x80>
   14b48:	ldr	r1, [fp, #12]
   14b4c:	ldr	r2, [fp, #8]
   14b50:	mov	r3, #1
   14b54:	str	r2, [r0]
   14b58:	str	r1, [r0, #4]
   14b5c:	mov	r0, r6
   14b60:	mov	r1, r8
   14b64:	mov	r2, r4
   14b68:	bl	132bc <table_notify@@Base>
   14b6c:	mov	r7, #0
   14b70:	mov	r0, r7
   14b74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b78 <table_set_short@@Base>:
   14b78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b7c:	add	fp, sp, #24
   14b80:	mov	r8, r3
   14b84:	mov	r4, r2
   14b88:	mov	r9, r1
   14b8c:	mov	r6, r0
   14b90:	bl	159cc <table_get_cell_ptr@@Base>
   14b94:	mov	r5, r0
   14b98:	mov	r0, r6
   14b9c:	mov	r1, r4
   14ba0:	bl	13388 <table_get_col_ptr@@Base>
   14ba4:	ldr	r0, [r0, #4]
   14ba8:	mvn	r7, #0
   14bac:	cmp	r0, #10
   14bb0:	bne	14bf0 <table_set_short@@Base+0x78>
   14bb4:	ldr	r0, [r5]
   14bb8:	cmp	r0, #0
   14bbc:	bne	14bd4 <table_set_short@@Base+0x5c>
   14bc0:	mov	r0, #2
   14bc4:	bl	11fc8 <malloc@plt>
   14bc8:	cmp	r0, #0
   14bcc:	str	r0, [r5]
   14bd0:	beq	14bf0 <table_set_short@@Base+0x78>
   14bd4:	strh	r8, [r0]
   14bd8:	mov	r0, r6
   14bdc:	mov	r1, r9
   14be0:	mov	r2, r4
   14be4:	mov	r3, #1
   14be8:	bl	132bc <table_notify@@Base>
   14bec:	mov	r7, #0
   14bf0:	mov	r0, r7
   14bf4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014bf8 <table_set_ushort@@Base>:
   14bf8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14bfc:	add	fp, sp, #24
   14c00:	mov	r8, r3
   14c04:	mov	r4, r2
   14c08:	mov	r9, r1
   14c0c:	mov	r6, r0
   14c10:	bl	159cc <table_get_cell_ptr@@Base>
   14c14:	mov	r5, r0
   14c18:	mov	r0, r6
   14c1c:	mov	r1, r4
   14c20:	bl	13388 <table_get_col_ptr@@Base>
   14c24:	ldr	r0, [r0, #4]
   14c28:	mvn	r7, #0
   14c2c:	cmp	r0, #11
   14c30:	bne	14c70 <table_set_ushort@@Base+0x78>
   14c34:	ldr	r0, [r5]
   14c38:	cmp	r0, #0
   14c3c:	bne	14c54 <table_set_ushort@@Base+0x5c>
   14c40:	mov	r0, #2
   14c44:	bl	11fc8 <malloc@plt>
   14c48:	cmp	r0, #0
   14c4c:	str	r0, [r5]
   14c50:	beq	14c70 <table_set_ushort@@Base+0x78>
   14c54:	strh	r8, [r0]
   14c58:	mov	r0, r6
   14c5c:	mov	r1, r9
   14c60:	mov	r2, r4
   14c64:	mov	r3, #1
   14c68:	bl	132bc <table_notify@@Base>
   14c6c:	mov	r7, #0
   14c70:	mov	r0, r7
   14c74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014c78 <table_set_long@@Base>:
   14c78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c7c:	add	fp, sp, #24
   14c80:	mov	r8, r3
   14c84:	mov	r4, r2
   14c88:	mov	r5, r1
   14c8c:	mov	r6, r0
   14c90:	bl	159cc <table_get_cell_ptr@@Base>
   14c94:	mov	r9, r0
   14c98:	mov	r0, r6
   14c9c:	mov	r1, r4
   14ca0:	bl	13388 <table_get_col_ptr@@Base>
   14ca4:	ldr	r0, [r0, #4]
   14ca8:	mvn	r7, #0
   14cac:	cmp	r0, #12
   14cb0:	bne	14cf0 <table_set_long@@Base+0x78>
   14cb4:	ldr	r0, [r9]
   14cb8:	cmp	r0, #0
   14cbc:	bne	14cd4 <table_set_long@@Base+0x5c>
   14cc0:	mov	r0, #4
   14cc4:	bl	11fc8 <malloc@plt>
   14cc8:	cmp	r0, #0
   14ccc:	str	r0, [r9]
   14cd0:	beq	14cf0 <table_set_long@@Base+0x78>
   14cd4:	str	r8, [r0]
   14cd8:	mov	r0, r6
   14cdc:	mov	r1, r5
   14ce0:	mov	r2, r4
   14ce4:	mov	r3, #1
   14ce8:	bl	132bc <table_notify@@Base>
   14cec:	mov	r7, #0
   14cf0:	mov	r0, r7
   14cf4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014cf8 <table_set_ulong@@Base>:
   14cf8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14cfc:	add	fp, sp, #24
   14d00:	mov	r8, r3
   14d04:	mov	r4, r2
   14d08:	mov	r5, r1
   14d0c:	mov	r6, r0
   14d10:	bl	159cc <table_get_cell_ptr@@Base>
   14d14:	mov	r9, r0
   14d18:	mov	r0, r6
   14d1c:	mov	r1, r4
   14d20:	bl	13388 <table_get_col_ptr@@Base>
   14d24:	ldr	r0, [r0, #4]
   14d28:	mvn	r7, #0
   14d2c:	cmp	r0, #13
   14d30:	bne	14d70 <table_set_ulong@@Base+0x78>
   14d34:	ldr	r0, [r9]
   14d38:	cmp	r0, #0
   14d3c:	bne	14d54 <table_set_ulong@@Base+0x5c>
   14d40:	mov	r0, #4
   14d44:	bl	11fc8 <malloc@plt>
   14d48:	cmp	r0, #0
   14d4c:	str	r0, [r9]
   14d50:	beq	14d70 <table_set_ulong@@Base+0x78>
   14d54:	str	r8, [r0]
   14d58:	mov	r0, r6
   14d5c:	mov	r1, r5
   14d60:	mov	r2, r4
   14d64:	mov	r3, #1
   14d68:	bl	132bc <table_notify@@Base>
   14d6c:	mov	r7, #0
   14d70:	mov	r0, r7
   14d74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d78 <table_set_llong@@Base>:
   14d78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d7c:	add	fp, sp, #24
   14d80:	mov	r4, r2
   14d84:	mov	r8, r1
   14d88:	mov	r6, r0
   14d8c:	bl	159cc <table_get_cell_ptr@@Base>
   14d90:	mov	r5, r0
   14d94:	mov	r0, r6
   14d98:	mov	r1, r4
   14d9c:	bl	13388 <table_get_col_ptr@@Base>
   14da0:	ldr	r0, [r0, #4]
   14da4:	mvn	r7, #0
   14da8:	cmp	r0, #14
   14dac:	bne	14df8 <table_set_llong@@Base+0x80>
   14db0:	ldr	r0, [r5]
   14db4:	cmp	r0, #0
   14db8:	bne	14dd0 <table_set_llong@@Base+0x58>
   14dbc:	mov	r0, #8
   14dc0:	bl	11fc8 <malloc@plt>
   14dc4:	cmp	r0, #0
   14dc8:	str	r0, [r5]
   14dcc:	beq	14df8 <table_set_llong@@Base+0x80>
   14dd0:	ldr	r1, [fp, #12]
   14dd4:	ldr	r2, [fp, #8]
   14dd8:	mov	r3, #1
   14ddc:	str	r2, [r0]
   14de0:	str	r1, [r0, #4]
   14de4:	mov	r0, r6
   14de8:	mov	r1, r8
   14dec:	mov	r2, r4
   14df0:	bl	132bc <table_notify@@Base>
   14df4:	mov	r7, #0
   14df8:	mov	r0, r7
   14dfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014e00 <table_set_ullong@@Base>:
   14e00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e04:	add	fp, sp, #24
   14e08:	mov	r4, r2
   14e0c:	mov	r8, r1
   14e10:	mov	r6, r0
   14e14:	bl	159cc <table_get_cell_ptr@@Base>
   14e18:	mov	r5, r0
   14e1c:	mov	r0, r6
   14e20:	mov	r1, r4
   14e24:	bl	13388 <table_get_col_ptr@@Base>
   14e28:	ldr	r0, [r0, #4]
   14e2c:	mvn	r7, #0
   14e30:	cmp	r0, #15
   14e34:	bne	14e80 <table_set_ullong@@Base+0x80>
   14e38:	ldr	r0, [r5]
   14e3c:	cmp	r0, #0
   14e40:	bne	14e58 <table_set_ullong@@Base+0x58>
   14e44:	mov	r0, #8
   14e48:	bl	11fc8 <malloc@plt>
   14e4c:	cmp	r0, #0
   14e50:	str	r0, [r5]
   14e54:	beq	14e80 <table_set_ullong@@Base+0x80>
   14e58:	ldr	r1, [fp, #12]
   14e5c:	ldr	r2, [fp, #8]
   14e60:	mov	r3, #1
   14e64:	str	r2, [r0]
   14e68:	str	r1, [r0, #4]
   14e6c:	mov	r0, r6
   14e70:	mov	r1, r8
   14e74:	mov	r2, r4
   14e78:	bl	132bc <table_notify@@Base>
   14e7c:	mov	r7, #0
   14e80:	mov	r0, r7
   14e84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014e88 <table_set_float@@Base>:
   14e88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e8c:	add	fp, sp, #24
   14e90:	vpush	{d8}
   14e94:	vmov.f32	s16, s0
   14e98:	mov	r4, r2
   14e9c:	mov	r8, r1
   14ea0:	mov	r6, r0
   14ea4:	bl	159cc <table_get_cell_ptr@@Base>
   14ea8:	mov	r5, r0
   14eac:	mov	r0, r6
   14eb0:	mov	r1, r4
   14eb4:	bl	13388 <table_get_col_ptr@@Base>
   14eb8:	ldr	r0, [r0, #4]
   14ebc:	mvn	r7, #0
   14ec0:	cmp	r0, #16
   14ec4:	bne	14f08 <table_set_float@@Base+0x80>
   14ec8:	ldr	r0, [r5]
   14ecc:	cmp	r0, #0
   14ed0:	bne	14ee8 <table_set_float@@Base+0x60>
   14ed4:	mov	r0, #4
   14ed8:	bl	11fc8 <malloc@plt>
   14edc:	cmp	r0, #0
   14ee0:	str	r0, [r5]
   14ee4:	beq	14f08 <table_set_float@@Base+0x80>
   14ee8:	vmov	r1, s16
   14eec:	mov	r2, r4
   14ef0:	mov	r3, #1
   14ef4:	str	r1, [r0]
   14ef8:	mov	r0, r6
   14efc:	mov	r1, r8
   14f00:	bl	132bc <table_notify@@Base>
   14f04:	mov	r7, #0
   14f08:	mov	r0, r7
   14f0c:	vpop	{d8}
   14f10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014f14 <table_set_double@@Base>:
   14f14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f18:	add	fp, sp, #24
   14f1c:	vpush	{d8}
   14f20:	vorr	d8, d0, d0
   14f24:	mov	r4, r2
   14f28:	mov	r5, r1
   14f2c:	mov	r6, r0
   14f30:	bl	159cc <table_get_cell_ptr@@Base>
   14f34:	mov	r8, r0
   14f38:	mov	r0, r6
   14f3c:	mov	r1, r4
   14f40:	bl	13388 <table_get_col_ptr@@Base>
   14f44:	ldr	r0, [r0, #4]
   14f48:	mvn	r7, #0
   14f4c:	cmp	r0, #17
   14f50:	bne	14f90 <table_set_double@@Base+0x7c>
   14f54:	ldr	r0, [r8]
   14f58:	cmp	r0, #0
   14f5c:	bne	14f74 <table_set_double@@Base+0x60>
   14f60:	mov	r0, #8
   14f64:	bl	11fc8 <malloc@plt>
   14f68:	cmp	r0, #0
   14f6c:	str	r0, [r8]
   14f70:	beq	14f90 <table_set_double@@Base+0x7c>
   14f74:	vst1.8	{d8}, [r0]
   14f78:	mov	r0, r6
   14f7c:	mov	r1, r5
   14f80:	mov	r2, r4
   14f84:	mov	r3, #1
   14f88:	bl	132bc <table_notify@@Base>
   14f8c:	mov	r7, #0
   14f90:	mov	r0, r7
   14f94:	vpop	{d8}
   14f98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014f9c <table_set_ldouble@@Base>:
   14f9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14fa0:	add	fp, sp, #24
   14fa4:	vpush	{d8}
   14fa8:	vorr	d8, d0, d0
   14fac:	mov	r4, r2
   14fb0:	mov	r5, r1
   14fb4:	mov	r6, r0
   14fb8:	bl	159cc <table_get_cell_ptr@@Base>
   14fbc:	mov	r8, r0
   14fc0:	mov	r0, r6
   14fc4:	mov	r1, r4
   14fc8:	bl	13388 <table_get_col_ptr@@Base>
   14fcc:	ldr	r0, [r0, #4]
   14fd0:	mvn	r7, #0
   14fd4:	cmp	r0, #18
   14fd8:	bne	15018 <table_set_ldouble@@Base+0x7c>
   14fdc:	ldr	r0, [r8]
   14fe0:	cmp	r0, #0
   14fe4:	bne	14ffc <table_set_ldouble@@Base+0x60>
   14fe8:	mov	r0, #8
   14fec:	bl	11fc8 <malloc@plt>
   14ff0:	cmp	r0, #0
   14ff4:	str	r0, [r8]
   14ff8:	beq	15018 <table_set_ldouble@@Base+0x7c>
   14ffc:	vst1.8	{d8}, [r0]
   15000:	mov	r0, r6
   15004:	mov	r1, r5
   15008:	mov	r2, r4
   1500c:	mov	r3, #1
   15010:	bl	132bc <table_notify@@Base>
   15014:	mov	r7, #0
   15018:	mov	r0, r7
   1501c:	vpop	{d8}
   15020:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015024 <table_set_string@@Base>:
   15024:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15028:	add	fp, sp, #24
   1502c:	mov	r8, r3
   15030:	mov	r4, r2
   15034:	mov	r9, r1
   15038:	mov	r6, r0
   1503c:	bl	159cc <table_get_cell_ptr@@Base>
   15040:	mov	r5, r0
   15044:	mov	r0, r6
   15048:	mov	r1, r4
   1504c:	bl	13388 <table_get_col_ptr@@Base>
   15050:	ldr	r0, [r0, #4]
   15054:	mvn	r7, #0
   15058:	cmp	r0, #21
   1505c:	bne	150a4 <table_set_string@@Base+0x80>
   15060:	mov	r0, r8
   15064:	bl	11fec <strlen@plt>
   15068:	ldr	r2, [r5]
   1506c:	add	r1, r0, #1
   15070:	mov	r0, r2
   15074:	bl	11fb0 <realloc@plt>
   15078:	cmp	r0, #0
   1507c:	str	r0, [r5]
   15080:	beq	150a4 <table_set_string@@Base+0x80>
   15084:	mov	r1, r8
   15088:	bl	11fbc <strcpy@plt>
   1508c:	mov	r0, r6
   15090:	mov	r1, r9
   15094:	mov	r2, r4
   15098:	mov	r3, #1
   1509c:	bl	132bc <table_notify@@Base>
   150a0:	mov	r7, #0
   150a4:	mov	r0, r7
   150a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000150ac <table_set_char@@Base>:
   150ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   150b0:	add	fp, sp, #24
   150b4:	mov	r8, r3
   150b8:	mov	r4, r2
   150bc:	mov	r9, r1
   150c0:	mov	r6, r0
   150c4:	bl	159cc <table_get_cell_ptr@@Base>
   150c8:	mov	r5, r0
   150cc:	mov	r0, r6
   150d0:	mov	r1, r4
   150d4:	bl	13388 <table_get_col_ptr@@Base>
   150d8:	ldr	r0, [r0, #4]
   150dc:	mvn	r7, #0
   150e0:	cmp	r0, #19
   150e4:	bne	15124 <table_set_char@@Base+0x78>
   150e8:	ldr	r0, [r5]
   150ec:	cmp	r0, #0
   150f0:	bne	15108 <table_set_char@@Base+0x5c>
   150f4:	mov	r0, #1
   150f8:	bl	11fc8 <malloc@plt>
   150fc:	cmp	r0, #0
   15100:	str	r0, [r5]
   15104:	beq	15124 <table_set_char@@Base+0x78>
   15108:	strb	r8, [r0]
   1510c:	mov	r0, r6
   15110:	mov	r1, r9
   15114:	mov	r2, r4
   15118:	mov	r3, #1
   1511c:	bl	132bc <table_notify@@Base>
   15120:	mov	r7, #0
   15124:	mov	r0, r7
   15128:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001512c <table_set_uchar@@Base>:
   1512c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15130:	add	fp, sp, #24
   15134:	mov	r8, r3
   15138:	mov	r4, r2
   1513c:	mov	r9, r1
   15140:	mov	r6, r0
   15144:	bl	159cc <table_get_cell_ptr@@Base>
   15148:	mov	r5, r0
   1514c:	mov	r0, r6
   15150:	mov	r1, r4
   15154:	bl	13388 <table_get_col_ptr@@Base>
   15158:	ldr	r0, [r0, #4]
   1515c:	mvn	r7, #0
   15160:	cmp	r0, #20
   15164:	bne	151a4 <table_set_uchar@@Base+0x78>
   15168:	ldr	r0, [r5]
   1516c:	cmp	r0, #0
   15170:	bne	15188 <table_set_uchar@@Base+0x5c>
   15174:	mov	r0, #1
   15178:	bl	11fc8 <malloc@plt>
   1517c:	cmp	r0, #0
   15180:	str	r0, [r5]
   15184:	beq	151a4 <table_set_uchar@@Base+0x78>
   15188:	strb	r8, [r0]
   1518c:	mov	r0, r6
   15190:	mov	r1, r9
   15194:	mov	r2, r4
   15198:	mov	r3, #1
   1519c:	bl	132bc <table_notify@@Base>
   151a0:	mov	r7, #0
   151a4:	mov	r0, r7
   151a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000151ac <table_set_ptr@@Base>:
   151ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   151b0:	add	fp, sp, #24
   151b4:	mov	r8, r3
   151b8:	mov	r4, r2
   151bc:	mov	r5, r1
   151c0:	mov	r6, r0
   151c4:	bl	159cc <table_get_cell_ptr@@Base>
   151c8:	mov	r7, r0
   151cc:	mov	r0, r6
   151d0:	mov	r1, r4
   151d4:	bl	13388 <table_get_col_ptr@@Base>
   151d8:	ldr	r1, [r0, #4]
   151dc:	mvn	r0, #0
   151e0:	cmp	r1, #23
   151e4:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   151e8:	mov	r0, r6
   151ec:	mov	r1, r5
   151f0:	mov	r2, r4
   151f4:	mov	r3, #1
   151f8:	str	r8, [r7]
   151fc:	bl	132bc <table_notify@@Base>
   15200:	mov	r0, #0
   15204:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015208 <table_serialize@@Base>:
   15208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1520c:	add	fp, sp, #28
   15210:	sub	sp, sp, #4
   15214:	mov	r5, r1
   15218:	mov	r4, r0
   1521c:	bl	14108 <table_get_row_length@@Base>
   15220:	str	r0, [sp]
   15224:	mov	r0, r4
   15228:	bl	133b0 <table_get_column_length@@Base>
   1522c:	str	r0, [r5]
   15230:	mov	r9, r0
   15234:	ldr	r0, [r4, #8]
   15238:	cmp	r9, #1
   1523c:	str	r0, [r5, #4]
   15240:	add	r5, r5, #8
   15244:	blt	15298 <table_serialize@@Base+0x90>
   15248:	mov	r6, #0
   1524c:	mov	r0, r4
   15250:	mov	r1, r6
   15254:	bl	13420 <table_get_column_name@@Base>
   15258:	mov	r8, r0
   1525c:	bl	11fec <strlen@plt>
   15260:	mov	sl, r0
   15264:	mov	r0, r4
   15268:	mov	r1, r6
   1526c:	bl	13430 <table_get_column_data_type@@Base>
   15270:	str	r0, [r5], #4
   15274:	add	r7, sl, #1
   15278:	mov	r1, r8
   1527c:	mov	r0, r5
   15280:	mov	r2, r7
   15284:	bl	1201c <strncpy@plt>
   15288:	add	r6, r6, #1
   1528c:	add	r5, r5, r7
   15290:	cmp	r9, r6
   15294:	bne	1524c <table_serialize@@Base+0x44>
   15298:	ldr	r1, [sp]
   1529c:	add	r7, r5, #8
   152a0:	str	r1, [r5]
   152a4:	cmp	r1, #1
   152a8:	ldr	r0, [r4, #24]
   152ac:	str	r0, [r5, #4]
   152b0:	blt	1545c <table_serialize@@Base+0x254>
   152b4:	mov	r8, #0
   152b8:	cmp	r9, #1
   152bc:	blt	1544c <table_serialize@@Base+0x244>
   152c0:	mov	r6, #0
   152c4:	mov	r0, r4
   152c8:	mov	r1, r6
   152cc:	bl	13430 <table_get_column_data_type@@Base>
   152d0:	cmp	r0, #23
   152d4:	bhi	15358 <table_serialize@@Base+0x150>
   152d8:	add	r1, pc, #0
   152dc:	ldr	pc, [r1, r0, lsl #2]
   152e0:	andeq	r5, r1, r0, asr #6
   152e4:	andeq	r5, r1, r0, asr #6
   152e8:	andeq	r5, r1, r8, ror #6
   152ec:	andeq	r5, r1, r8, ror #6
   152f0:	muleq	r1, r0, r3
   152f4:	muleq	r1, r0, r3
   152f8:	andeq	r5, r1, r0, asr #6
   152fc:	andeq	r5, r1, r0, asr #6
   15300:			; <UNDEFINED> instruction: 0x000153b8
   15304:			; <UNDEFINED> instruction: 0x000153b8
   15308:	muleq	r1, r0, r3
   1530c:	muleq	r1, r0, r3
   15310:	andeq	r5, r1, r0, asr #6
   15314:	andeq	r5, r1, r0, asr #6
   15318:			; <UNDEFINED> instruction: 0x000153b8
   1531c:			; <UNDEFINED> instruction: 0x000153b8
   15320:	andeq	r5, r1, r0, asr #6
   15324:	andeq	r5, r1, r4, ror #7
   15328:	andeq	r5, r1, r4, ror #7
   1532c:	andeq	r5, r1, r8, ror #6
   15330:	andeq	r5, r1, r8, ror #6
   15334:	andeq	r5, r1, r0, lsl r4
   15338:	andeq	r5, r1, r8, ror #6
   1533c:	andeq	r5, r1, r0, asr #6
   15340:	mov	r0, r4
   15344:	mov	r1, r8
   15348:	mov	r2, r6
   1534c:	bl	13e34 <table_get@@Base>
   15350:	ldr	r0, [r0]
   15354:	str	r0, [r7], #4
   15358:	add	r6, r6, #1
   1535c:	cmp	r9, r6
   15360:	bne	152c4 <table_serialize@@Base+0xbc>
   15364:	b	1544c <table_serialize@@Base+0x244>
   15368:	mov	r0, r4
   1536c:	mov	r1, r8
   15370:	mov	r2, r6
   15374:	bl	13e34 <table_get@@Base>
   15378:	ldrb	r0, [r0]
   1537c:	strb	r0, [r7], #1
   15380:	add	r6, r6, #1
   15384:	cmp	r9, r6
   15388:	bne	152c4 <table_serialize@@Base+0xbc>
   1538c:	b	1544c <table_serialize@@Base+0x244>
   15390:	mov	r0, r4
   15394:	mov	r1, r8
   15398:	mov	r2, r6
   1539c:	bl	13e34 <table_get@@Base>
   153a0:	ldrh	r0, [r0]
   153a4:	strh	r0, [r7], #2
   153a8:	add	r6, r6, #1
   153ac:	cmp	r9, r6
   153b0:	bne	152c4 <table_serialize@@Base+0xbc>
   153b4:	b	1544c <table_serialize@@Base+0x244>
   153b8:	mov	r0, r4
   153bc:	mov	r1, r8
   153c0:	mov	r2, r6
   153c4:	bl	13e34 <table_get@@Base>
   153c8:	ldrd	r0, [r0]
   153cc:	strd	r0, [r7]
   153d0:	add	r7, r7, #8
   153d4:	add	r6, r6, #1
   153d8:	cmp	r9, r6
   153dc:	bne	152c4 <table_serialize@@Base+0xbc>
   153e0:	b	1544c <table_serialize@@Base+0x244>
   153e4:	mov	r0, r4
   153e8:	mov	r1, r8
   153ec:	mov	r2, r6
   153f0:	bl	13e34 <table_get@@Base>
   153f4:	vldr	d16, [r0]
   153f8:	vstr	d16, [r7]
   153fc:	add	r7, r7, #8
   15400:	add	r6, r6, #1
   15404:	cmp	r9, r6
   15408:	bne	152c4 <table_serialize@@Base+0xbc>
   1540c:	b	1544c <table_serialize@@Base+0x244>
   15410:	mov	r0, r4
   15414:	mov	r1, r8
   15418:	mov	r2, r6
   1541c:	bl	14058 <table_get_string@@Base>
   15420:	mov	sl, r0
   15424:	bl	11fec <strlen@plt>
   15428:	add	r5, r0, #1
   1542c:	mov	r0, r7
   15430:	mov	r1, sl
   15434:	mov	r2, r5
   15438:	bl	1201c <strncpy@plt>
   1543c:	add	r7, r7, r5
   15440:	add	r6, r6, #1
   15444:	cmp	r9, r6
   15448:	bne	152c4 <table_serialize@@Base+0xbc>
   1544c:	ldr	r0, [sp]
   15450:	add	r8, r8, #1
   15454:	cmp	r8, r0
   15458:	bne	152b8 <table_serialize@@Base+0xb0>
   1545c:	ldr	r0, [r4, #32]
   15460:	str	r0, [r7]
   15464:	ldr	r0, [r4, #48]	; 0x30
   15468:	str	r0, [r7, #4]
   1546c:	ldr	r0, [r4, #32]
   15470:	cmp	r0, #1
   15474:	blt	154b8 <table_serialize@@Base+0x2b0>
   15478:	add	r0, r7, #8
   1547c:	mov	r1, #0
   15480:	ldr	r2, [r4, #36]	; 0x24
   15484:	ldr	r2, [r2, r1, lsl #2]
   15488:	str	r2, [r0]
   1548c:	ldr	r2, [r4, #40]	; 0x28
   15490:	ldr	r2, [r2, r1, lsl #2]
   15494:	str	r2, [r0, #4]
   15498:	ldr	r2, [r4, #44]	; 0x2c
   1549c:	ldr	r2, [r2, r1, lsl #2]
   154a0:	add	r1, r1, #1
   154a4:	str	r2, [r0, #8]
   154a8:	add	r0, r0, #12
   154ac:	ldr	r2, [r4, #32]
   154b0:	cmp	r1, r2
   154b4:	blt	15480 <table_serialize@@Base+0x278>
   154b8:	sub	sp, fp, #28
   154bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000154c0 <table_deserialize@@Base>:
   154c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   154c4:	add	fp, sp, #24
   154c8:	sub	sp, sp, #8
   154cc:	mov	r5, r0
   154d0:	bl	12868 <table_new@@Base>
   154d4:	mov	r4, r0
   154d8:	ldr	r0, [r5, #4]
   154dc:	ldr	r9, [r5]
   154e0:	str	r0, [r4, #8]
   154e4:	cmp	r9, #1
   154e8:	ldr	r8, [r5, #8]!
   154ec:	add	r6, r5, #4
   154f0:	blt	15524 <table_deserialize@@Base+0x64>
   154f4:	mov	r7, r9
   154f8:	mov	r0, r4
   154fc:	mov	r1, r6
   15500:	mov	r2, r8
   15504:	bl	13444 <table_add_column@@Base>
   15508:	mov	r0, r6
   1550c:	bl	11fec <strlen@plt>
   15510:	add	r5, r5, r0
   15514:	subs	r7, r7, #1
   15518:	ldr	r8, [r5, #5]!
   1551c:	add	r6, r5, #4
   15520:	bne	154f8 <table_deserialize@@Base+0x38>
   15524:	ldr	r0, [r6]
   15528:	add	r6, r5, #8
   1552c:	cmp	r8, #1
   15530:	str	r0, [r4, #24]
   15534:	blt	15970 <table_deserialize@@Base+0x4b0>
   15538:	mov	r7, #0
   1553c:	mov	r0, r4
   15540:	bl	14110 <table_add_row@@Base>
   15544:	cmp	r9, #1
   15548:	blt	15964 <table_deserialize@@Base+0x4a4>
   1554c:	mov	r5, #0
   15550:	mov	r0, r4
   15554:	mov	r1, r5
   15558:	bl	13430 <table_get_column_data_type@@Base>
   1555c:	cmp	r0, #23
   15560:	bhi	155e0 <table_deserialize@@Base+0x120>
   15564:	add	r1, pc, #0
   15568:	ldr	pc, [r1, r0, lsl #2]
   1556c:	andeq	r5, r1, ip, asr #11
   15570:	strdeq	r5, [r1], -r0
   15574:	andeq	r5, r1, r4, lsl r6
   15578:	andeq	r5, r1, r8, lsr r6
   1557c:	andeq	r5, r1, ip, asr r6
   15580:	andeq	r5, r1, r0, lsl #13
   15584:	andeq	r5, r1, r4, lsr #13
   15588:	andeq	r5, r1, r8, asr #13
   1558c:	andeq	r5, r1, ip, ror #13
   15590:	andeq	r5, r1, r8, lsl r7
   15594:	andeq	r5, r1, r4, asr #14
   15598:	andeq	r5, r1, r8, ror #14
   1559c:	andeq	r5, r1, ip, lsl #15
   155a0:			; <UNDEFINED> instruction: 0x000157b0
   155a4:	ldrdeq	r5, [r1], -r4
   155a8:	andeq	r5, r1, r0, lsl #16
   155ac:	andeq	r5, r1, ip, lsr #16
   155b0:	andeq	r5, r1, r4, asr r8
   155b4:	andeq	r5, r1, ip, ror r8
   155b8:	andeq	r5, r1, r4, lsr #17
   155bc:	andeq	r5, r1, r8, asr #17
   155c0:	andeq	r5, r1, ip, ror #17
   155c4:	andeq	r5, r1, r0, lsr #18
   155c8:	andeq	r5, r1, r4, asr #18
   155cc:	ldr	r3, [r6], #4
   155d0:	mov	r0, r4
   155d4:	mov	r1, r7
   155d8:	mov	r2, r5
   155dc:	bl	14668 <table_set_int@@Base>
   155e0:	add	r5, r5, #1
   155e4:	cmp	r9, r5
   155e8:	bne	15550 <table_deserialize@@Base+0x90>
   155ec:	b	15964 <table_deserialize@@Base+0x4a4>
   155f0:	ldr	r3, [r6], #4
   155f4:	mov	r0, r4
   155f8:	mov	r1, r7
   155fc:	mov	r2, r5
   15600:	bl	146e8 <table_set_uint@@Base>
   15604:	add	r5, r5, #1
   15608:	cmp	r9, r5
   1560c:	bne	15550 <table_deserialize@@Base+0x90>
   15610:	b	15964 <table_deserialize@@Base+0x4a4>
   15614:	ldrsb	r3, [r6], #1
   15618:	mov	r0, r4
   1561c:	mov	r1, r7
   15620:	mov	r2, r5
   15624:	bl	14768 <table_set_int8@@Base>
   15628:	add	r5, r5, #1
   1562c:	cmp	r9, r5
   15630:	bne	15550 <table_deserialize@@Base+0x90>
   15634:	b	15964 <table_deserialize@@Base+0x4a4>
   15638:	ldrb	r3, [r6], #1
   1563c:	mov	r0, r4
   15640:	mov	r1, r7
   15644:	mov	r2, r5
   15648:	bl	147e8 <table_set_uint8@@Base>
   1564c:	add	r5, r5, #1
   15650:	cmp	r9, r5
   15654:	bne	15550 <table_deserialize@@Base+0x90>
   15658:	b	15964 <table_deserialize@@Base+0x4a4>
   1565c:	ldrsh	r3, [r6], #2
   15660:	mov	r0, r4
   15664:	mov	r1, r7
   15668:	mov	r2, r5
   1566c:	bl	14868 <table_set_int16@@Base>
   15670:	add	r5, r5, #1
   15674:	cmp	r9, r5
   15678:	bne	15550 <table_deserialize@@Base+0x90>
   1567c:	b	15964 <table_deserialize@@Base+0x4a4>
   15680:	ldrh	r3, [r6], #2
   15684:	mov	r0, r4
   15688:	mov	r1, r7
   1568c:	mov	r2, r5
   15690:	bl	148e8 <table_set_uint16@@Base>
   15694:	add	r5, r5, #1
   15698:	cmp	r9, r5
   1569c:	bne	15550 <table_deserialize@@Base+0x90>
   156a0:	b	15964 <table_deserialize@@Base+0x4a4>
   156a4:	ldr	r3, [r6], #4
   156a8:	mov	r0, r4
   156ac:	mov	r1, r7
   156b0:	mov	r2, r5
   156b4:	bl	14968 <table_set_int32@@Base>
   156b8:	add	r5, r5, #1
   156bc:	cmp	r9, r5
   156c0:	bne	15550 <table_deserialize@@Base+0x90>
   156c4:	b	15964 <table_deserialize@@Base+0x4a4>
   156c8:	ldr	r3, [r6], #4
   156cc:	mov	r0, r4
   156d0:	mov	r1, r7
   156d4:	mov	r2, r5
   156d8:	bl	149e8 <table_set_uint32@@Base>
   156dc:	add	r5, r5, #1
   156e0:	cmp	r9, r5
   156e4:	bne	15550 <table_deserialize@@Base+0x90>
   156e8:	b	15964 <table_deserialize@@Base+0x4a4>
   156ec:	ldrd	r0, [r6]
   156f0:	mov	r2, r5
   156f4:	stm	sp, {r0, r1}
   156f8:	mov	r0, r4
   156fc:	mov	r1, r7
   15700:	bl	14a68 <table_set_int64@@Base>
   15704:	add	r6, r6, #8
   15708:	add	r5, r5, #1
   1570c:	cmp	r9, r5
   15710:	bne	15550 <table_deserialize@@Base+0x90>
   15714:	b	15964 <table_deserialize@@Base+0x4a4>
   15718:	ldrd	r0, [r6]
   1571c:	mov	r2, r5
   15720:	stm	sp, {r0, r1}
   15724:	mov	r0, r4
   15728:	mov	r1, r7
   1572c:	bl	14af0 <table_set_uint64@@Base>
   15730:	add	r6, r6, #8
   15734:	add	r5, r5, #1
   15738:	cmp	r9, r5
   1573c:	bne	15550 <table_deserialize@@Base+0x90>
   15740:	b	15964 <table_deserialize@@Base+0x4a4>
   15744:	ldrsh	r3, [r6], #2
   15748:	mov	r0, r4
   1574c:	mov	r1, r7
   15750:	mov	r2, r5
   15754:	bl	14b78 <table_set_short@@Base>
   15758:	add	r5, r5, #1
   1575c:	cmp	r9, r5
   15760:	bne	15550 <table_deserialize@@Base+0x90>
   15764:	b	15964 <table_deserialize@@Base+0x4a4>
   15768:	ldrh	r3, [r6], #2
   1576c:	mov	r0, r4
   15770:	mov	r1, r7
   15774:	mov	r2, r5
   15778:	bl	14bf8 <table_set_ushort@@Base>
   1577c:	add	r5, r5, #1
   15780:	cmp	r9, r5
   15784:	bne	15550 <table_deserialize@@Base+0x90>
   15788:	b	15964 <table_deserialize@@Base+0x4a4>
   1578c:	ldr	r3, [r6], #4
   15790:	mov	r0, r4
   15794:	mov	r1, r7
   15798:	mov	r2, r5
   1579c:	bl	14c78 <table_set_long@@Base>
   157a0:	add	r5, r5, #1
   157a4:	cmp	r9, r5
   157a8:	bne	15550 <table_deserialize@@Base+0x90>
   157ac:	b	15964 <table_deserialize@@Base+0x4a4>
   157b0:	ldr	r3, [r6], #4
   157b4:	mov	r0, r4
   157b8:	mov	r1, r7
   157bc:	mov	r2, r5
   157c0:	bl	14cf8 <table_set_ulong@@Base>
   157c4:	add	r5, r5, #1
   157c8:	cmp	r9, r5
   157cc:	bne	15550 <table_deserialize@@Base+0x90>
   157d0:	b	15964 <table_deserialize@@Base+0x4a4>
   157d4:	ldrd	r0, [r6]
   157d8:	mov	r2, r5
   157dc:	stm	sp, {r0, r1}
   157e0:	mov	r0, r4
   157e4:	mov	r1, r7
   157e8:	bl	14d78 <table_set_llong@@Base>
   157ec:	add	r6, r6, #8
   157f0:	add	r5, r5, #1
   157f4:	cmp	r9, r5
   157f8:	bne	15550 <table_deserialize@@Base+0x90>
   157fc:	b	15964 <table_deserialize@@Base+0x4a4>
   15800:	ldrd	r0, [r6]
   15804:	mov	r2, r5
   15808:	stm	sp, {r0, r1}
   1580c:	mov	r0, r4
   15810:	mov	r1, r7
   15814:	bl	14e00 <table_set_ullong@@Base>
   15818:	add	r6, r6, #8
   1581c:	add	r5, r5, #1
   15820:	cmp	r9, r5
   15824:	bne	15550 <table_deserialize@@Base+0x90>
   15828:	b	15964 <table_deserialize@@Base+0x4a4>
   1582c:	vldr	s0, [r6]
   15830:	mov	r0, r4
   15834:	mov	r1, r7
   15838:	mov	r2, r5
   1583c:	bl	14e88 <table_set_float@@Base>
   15840:	add	r6, r6, #4
   15844:	add	r5, r5, #1
   15848:	cmp	r9, r5
   1584c:	bne	15550 <table_deserialize@@Base+0x90>
   15850:	b	15964 <table_deserialize@@Base+0x4a4>
   15854:	vldr	d0, [r6]
   15858:	mov	r0, r4
   1585c:	mov	r1, r7
   15860:	mov	r2, r5
   15864:	bl	14f14 <table_set_double@@Base>
   15868:	add	r6, r6, #8
   1586c:	add	r5, r5, #1
   15870:	cmp	r9, r5
   15874:	bne	15550 <table_deserialize@@Base+0x90>
   15878:	b	15964 <table_deserialize@@Base+0x4a4>
   1587c:	vldr	d0, [r6]
   15880:	mov	r0, r4
   15884:	mov	r1, r7
   15888:	mov	r2, r5
   1588c:	bl	14f9c <table_set_ldouble@@Base>
   15890:	add	r6, r6, #8
   15894:	add	r5, r5, #1
   15898:	cmp	r9, r5
   1589c:	bne	15550 <table_deserialize@@Base+0x90>
   158a0:	b	15964 <table_deserialize@@Base+0x4a4>
   158a4:	ldrb	r3, [r6], #1
   158a8:	mov	r0, r4
   158ac:	mov	r1, r7
   158b0:	mov	r2, r5
   158b4:	bl	150ac <table_set_char@@Base>
   158b8:	add	r5, r5, #1
   158bc:	cmp	r9, r5
   158c0:	bne	15550 <table_deserialize@@Base+0x90>
   158c4:	b	15964 <table_deserialize@@Base+0x4a4>
   158c8:	ldrb	r3, [r6], #1
   158cc:	mov	r0, r4
   158d0:	mov	r1, r7
   158d4:	mov	r2, r5
   158d8:	bl	1512c <table_set_uchar@@Base>
   158dc:	add	r5, r5, #1
   158e0:	cmp	r9, r5
   158e4:	bne	15550 <table_deserialize@@Base+0x90>
   158e8:	b	15964 <table_deserialize@@Base+0x4a4>
   158ec:	mov	r0, r4
   158f0:	mov	r1, r7
   158f4:	mov	r2, r5
   158f8:	mov	r3, r6
   158fc:	bl	15024 <table_set_string@@Base>
   15900:	mov	r0, r6
   15904:	bl	11fec <strlen@plt>
   15908:	add	r0, r6, r0
   1590c:	add	r6, r0, #1
   15910:	add	r5, r5, #1
   15914:	cmp	r9, r5
   15918:	bne	15550 <table_deserialize@@Base+0x90>
   1591c:	b	15964 <table_deserialize@@Base+0x4a4>
   15920:	ldrb	r3, [r6], #1
   15924:	mov	r0, r4
   15928:	mov	r1, r7
   1592c:	mov	r2, r5
   15930:	bl	145e8 <table_set_bool@@Base>
   15934:	add	r5, r5, #1
   15938:	cmp	r9, r5
   1593c:	bne	15550 <table_deserialize@@Base+0x90>
   15940:	b	15964 <table_deserialize@@Base+0x4a4>
   15944:	ldr	r3, [r6], #4
   15948:	mov	r0, r4
   1594c:	mov	r1, r7
   15950:	mov	r2, r5
   15954:	bl	151ac <table_set_ptr@@Base>
   15958:	add	r5, r5, #1
   1595c:	cmp	r9, r5
   15960:	bne	15550 <table_deserialize@@Base+0x90>
   15964:	add	r7, r7, #1
   15968:	cmp	r7, r8
   1596c:	bne	1553c <table_deserialize@@Base+0x7c>
   15970:	ldr	r5, [r6]
   15974:	ldr	r0, [r6, #4]
   15978:	cmp	r5, #1
   1597c:	str	r0, [r4, #48]	; 0x30
   15980:	blt	159a0 <table_deserialize@@Base+0x4e0>
   15984:	add	r6, r6, #8
   15988:	ldm	r6, {r1, r2, r3}
   1598c:	mov	r0, r4
   15990:	bl	13058 <table_register_callback@@Base>
   15994:	add	r6, r6, #12
   15998:	subs	r5, r5, #1
   1599c:	bne	15988 <table_deserialize@@Base+0x4c8>
   159a0:	mov	r0, r4
   159a4:	sub	sp, fp, #24
   159a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000159ac <table_cell_init@@Base>:
   159ac:	push	{r4, sl, fp, lr}
   159b0:	add	fp, sp, #8
   159b4:	mov	r4, r2
   159b8:	bl	140a4 <table_get_row_ptr@@Base>
   159bc:	ldr	r0, [r0]
   159c0:	mov	r1, #0
   159c4:	str	r1, [r0, r4, lsl #2]
   159c8:	pop	{r4, sl, fp, pc}

000159cc <table_get_cell_ptr@@Base>:
   159cc:	push	{r4, sl, fp, lr}
   159d0:	add	fp, sp, #8
   159d4:	mov	r4, r2
   159d8:	bl	140a4 <table_get_row_ptr@@Base>
   159dc:	ldr	r0, [r0]
   159e0:	add	r0, r0, r4, lsl #2
   159e4:	pop	{r4, sl, fp, pc}

000159e8 <table_cell_destroy@@Base>:
   159e8:	push	{r4, r5, r6, sl, fp, lr}
   159ec:	add	fp, sp, #16
   159f0:	mov	r5, r1
   159f4:	mov	r1, r2
   159f8:	mov	r4, r2
   159fc:	mov	r6, r0
   15a00:	bl	13430 <table_get_column_data_type@@Base>
   15a04:	cmp	r0, #23
   15a08:	popeq	{r4, r5, r6, sl, fp, pc}
   15a0c:	mov	r0, r6
   15a10:	mov	r1, r5
   15a14:	bl	140a4 <table_get_row_ptr@@Base>
   15a18:	ldr	r0, [r0]
   15a1c:	ldr	r0, [r0, r4, lsl #2]
   15a20:	cmp	r0, #0
   15a24:	beq	15a30 <table_cell_destroy@@Base+0x48>
   15a28:	pop	{r4, r5, r6, sl, fp, lr}
   15a2c:	b	11f98 <free@plt>
   15a30:	pop	{r4, r5, r6, sl, fp, pc}

00015a34 <table_cell_to_buffer@@Base>:
   15a34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a38:	add	fp, sp, #24
   15a3c:	sub	sp, sp, #8
   15a40:	mov	r7, r1
   15a44:	mov	r1, r2
   15a48:	mov	r5, r3
   15a4c:	mov	r6, r2
   15a50:	mov	r4, r0
   15a54:	bl	13430 <table_get_column_data_type@@Base>
   15a58:	cmp	r0, #23
   15a5c:	bhi	15ccc <table_cell_to_buffer@@Base+0x298>
   15a60:	ldr	r8, [fp, #8]
   15a64:	add	r1, pc, #0
   15a68:	ldr	pc, [r1, r0, lsl #2]
   15a6c:	andeq	r5, r1, ip, asr #21
   15a70:	andeq	r5, r1, r0, ror #21
   15a74:	strdeq	r5, [r1], -r4
   15a78:	andeq	r5, r1, r8, lsl #22
   15a7c:	andeq	r5, r1, ip, lsl fp
   15a80:	andeq	r5, r1, r0, lsr fp
   15a84:	andeq	r5, r1, r4, asr #22
   15a88:	andeq	r5, r1, r8, asr fp
   15a8c:	andeq	r5, r1, r8, ror fp
   15a90:	andeq	r5, r1, ip, lsl #23
   15a94:	andeq	r5, r1, r0, lsr #23
   15a98:	andeq	r5, r1, r0, asr #23
   15a9c:	andeq	r5, r1, r0, ror #23
   15aa0:	andeq	r5, r1, r0, lsl #24
   15aa4:	andeq	r5, r1, r0, lsr #24
   15aa8:	andeq	r5, r1, r0, asr #24
   15aac:	andeq	r5, r1, r0, ror #24
   15ab0:	andeq	r5, r1, r4, lsl #25
   15ab4:	andeq	r5, r1, r4, lsr #25
   15ab8:	ldrdeq	r5, [r1], -r8
   15abc:	andeq	r5, r1, ip, ror #25
   15ac0:	andeq	r5, r1, ip, lsl #26
   15ac4:	andeq	r5, r1, ip, lsr #26
   15ac8:	andeq	r5, r1, r0, ror #26
   15acc:	mov	r0, r4
   15ad0:	mov	r1, r7
   15ad4:	mov	r2, r6
   15ad8:	bl	13e60 <table_get_int@@Base>
   15adc:	b	15d3c <table_cell_to_buffer@@Base+0x308>
   15ae0:	mov	r0, r4
   15ae4:	mov	r1, r7
   15ae8:	mov	r2, r6
   15aec:	bl	13e78 <table_get_uint@@Base>
   15af0:	b	15b68 <table_cell_to_buffer@@Base+0x134>
   15af4:	mov	r0, r4
   15af8:	mov	r1, r7
   15afc:	mov	r2, r6
   15b00:	bl	13e90 <table_get_int8@@Base>
   15b04:	b	15d3c <table_cell_to_buffer@@Base+0x308>
   15b08:	mov	r0, r4
   15b0c:	mov	r1, r7
   15b10:	mov	r2, r6
   15b14:	bl	13ea8 <table_get_uint8@@Base>
   15b18:	b	15b68 <table_cell_to_buffer@@Base+0x134>
   15b1c:	mov	r0, r4
   15b20:	mov	r1, r7
   15b24:	mov	r2, r6
   15b28:	bl	13ec0 <table_get_int16@@Base>
   15b2c:	b	15d3c <table_cell_to_buffer@@Base+0x308>
   15b30:	mov	r0, r4
   15b34:	mov	r1, r7
   15b38:	mov	r2, r6
   15b3c:	bl	13ed8 <table_get_uint16@@Base>
   15b40:	b	15b68 <table_cell_to_buffer@@Base+0x134>
   15b44:	mov	r0, r4
   15b48:	mov	r1, r7
   15b4c:	mov	r2, r6
   15b50:	bl	13ef0 <table_get_int32@@Base>
   15b54:	b	15d3c <table_cell_to_buffer@@Base+0x308>
   15b58:	mov	r0, r4
   15b5c:	mov	r1, r7
   15b60:	mov	r2, r6
   15b64:	bl	13f08 <table_get_uint32@@Base>
   15b68:	movw	r2, #25968	; 0x6570
   15b6c:	mov	r3, r0
   15b70:	movt	r2, #1
   15b74:	b	15d48 <table_cell_to_buffer@@Base+0x314>
   15b78:	mov	r0, r4
   15b7c:	mov	r1, r7
   15b80:	mov	r2, r6
   15b84:	bl	13f20 <table_get_int64@@Base>
   15b88:	b	15c30 <table_cell_to_buffer@@Base+0x1fc>
   15b8c:	mov	r0, r4
   15b90:	mov	r1, r7
   15b94:	mov	r2, r6
   15b98:	bl	13f38 <table_get_uint64@@Base>
   15b9c:	b	15c50 <table_cell_to_buffer@@Base+0x21c>
   15ba0:	mov	r0, r4
   15ba4:	mov	r1, r7
   15ba8:	mov	r2, r6
   15bac:	bl	13f50 <table_get_short@@Base>
   15bb0:	movw	r2, #25981	; 0x657d
   15bb4:	mov	r3, r0
   15bb8:	movt	r2, #1
   15bbc:	b	15d48 <table_cell_to_buffer@@Base+0x314>
   15bc0:	mov	r0, r4
   15bc4:	mov	r1, r7
   15bc8:	mov	r2, r6
   15bcc:	bl	13f68 <table_get_ushort@@Base>
   15bd0:	movw	r2, #25985	; 0x6581
   15bd4:	mov	r3, r0
   15bd8:	movt	r2, #1
   15bdc:	b	15d48 <table_cell_to_buffer@@Base+0x314>
   15be0:	mov	r0, r4
   15be4:	mov	r1, r7
   15be8:	mov	r2, r6
   15bec:	bl	13f80 <table_get_long@@Base>
   15bf0:	movw	r2, #25989	; 0x6585
   15bf4:	mov	r3, r0
   15bf8:	movt	r2, #1
   15bfc:	b	15d48 <table_cell_to_buffer@@Base+0x314>
   15c00:	mov	r0, r4
   15c04:	mov	r1, r7
   15c08:	mov	r2, r6
   15c0c:	bl	13f98 <table_get_ulong@@Base>
   15c10:	movw	r2, #25993	; 0x6589
   15c14:	mov	r3, r0
   15c18:	movt	r2, #1
   15c1c:	b	15d48 <table_cell_to_buffer@@Base+0x314>
   15c20:	mov	r0, r4
   15c24:	mov	r1, r7
   15c28:	mov	r2, r6
   15c2c:	bl	13fb0 <table_get_llong@@Base>
   15c30:	movw	r2, #25971	; 0x6573
   15c34:	stm	sp, {r0, r1}
   15c38:	movt	r2, #1
   15c3c:	b	15cc0 <table_cell_to_buffer@@Base+0x28c>
   15c40:	mov	r0, r4
   15c44:	mov	r1, r7
   15c48:	mov	r2, r6
   15c4c:	bl	13fc8 <table_get_ullong@@Base>
   15c50:	movw	r2, #25976	; 0x6578
   15c54:	stm	sp, {r0, r1}
   15c58:	movt	r2, #1
   15c5c:	b	15cc0 <table_cell_to_buffer@@Base+0x28c>
   15c60:	mov	r0, r4
   15c64:	mov	r1, r7
   15c68:	mov	r2, r6
   15c6c:	bl	13fe0 <table_get_float@@Base>
   15c70:	movw	r2, #26000	; 0x6590
   15c74:	vcvt.f64.f32	d16, s0
   15c78:	vstr	d16, [sp]
   15c7c:	movt	r2, #1
   15c80:	b	15cc0 <table_cell_to_buffer@@Base+0x28c>
   15c84:	mov	r0, r4
   15c88:	mov	r1, r7
   15c8c:	mov	r2, r6
   15c90:	bl	13ff8 <table_get_double@@Base>
   15c94:	movw	r2, #26003	; 0x6593
   15c98:	vstr	d0, [sp]
   15c9c:	movt	r2, #1
   15ca0:	b	15cc0 <table_cell_to_buffer@@Base+0x28c>
   15ca4:	mov	r0, r4
   15ca8:	mov	r1, r7
   15cac:	mov	r2, r6
   15cb0:	bl	14010 <table_get_ldouble@@Base>
   15cb4:	movw	r2, #26007	; 0x6597
   15cb8:	vstr	d0, [sp]
   15cbc:	movt	r2, #1
   15cc0:	mov	r0, r5
   15cc4:	mov	r1, r8
   15cc8:	bl	12004 <snprintf@plt>
   15ccc:	mov	r0, #0
   15cd0:	sub	sp, fp, #24
   15cd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15cd8:	mov	r0, r4
   15cdc:	mov	r1, r7
   15ce0:	mov	r2, r6
   15ce4:	bl	14028 <table_get_char@@Base>
   15ce8:	b	15cfc <table_cell_to_buffer@@Base+0x2c8>
   15cec:	mov	r0, r4
   15cf0:	mov	r1, r7
   15cf4:	mov	r2, r6
   15cf8:	bl	14040 <table_get_uchar@@Base>
   15cfc:	movw	r2, #26011	; 0x659b
   15d00:	mov	r3, r0
   15d04:	movt	r2, #1
   15d08:	b	15d48 <table_cell_to_buffer@@Base+0x314>
   15d0c:	mov	r0, r4
   15d10:	mov	r1, r7
   15d14:	mov	r2, r6
   15d18:	bl	14058 <table_get_string@@Base>
   15d1c:	movw	r2, #25997	; 0x658d
   15d20:	mov	r3, r0
   15d24:	movt	r2, #1
   15d28:	b	15d48 <table_cell_to_buffer@@Base+0x314>
   15d2c:	mov	r0, r4
   15d30:	mov	r1, r7
   15d34:	mov	r2, r6
   15d38:	bl	13e48 <table_get_bool@@Base>
   15d3c:	movw	r2, #25811	; 0x64d3
   15d40:	mov	r3, r0
   15d44:	movt	r2, #1
   15d48:	mov	r0, r5
   15d4c:	mov	r1, r8
   15d50:	bl	12004 <snprintf@plt>
   15d54:	mov	r0, #0
   15d58:	sub	sp, fp, #24
   15d5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d60:	mov	r0, r4
   15d64:	mov	r1, r7
   15d68:	mov	r2, r6
   15d6c:	bl	1406c <table_get_ptr@@Base>
   15d70:	movw	r2, #26014	; 0x659e
   15d74:	mov	r3, r0
   15d78:	movt	r2, #1
   15d7c:	b	15d48 <table_cell_to_buffer@@Base+0x314>

00015d80 <table_cell_from_buffer@@Base>:
   15d80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15d84:	add	fp, sp, #24
   15d88:	sub	sp, sp, #264	; 0x108
   15d8c:	mov	r5, r1
   15d90:	mov	r1, r2
   15d94:	mov	r7, r3
   15d98:	mov	r4, r2
   15d9c:	mov	r6, r0
   15da0:	bl	13430 <table_get_column_data_type@@Base>
   15da4:	cmp	r0, #23
   15da8:	bhi	1637c <table_cell_from_buffer@@Base+0x5fc>
   15dac:	add	r1, pc, #0
   15db0:	ldr	pc, [r1, r0, lsl #2]
   15db4:	andeq	r5, r1, r4, lsl lr
   15db8:	andeq	r5, r1, ip, asr #28
   15dbc:	andeq	r5, r1, r4, lsl #29
   15dc0:			; <UNDEFINED> instruction: 0x00015ebc
   15dc4:	strdeq	r5, [r1], -r4
   15dc8:	andeq	r5, r1, ip, lsr #30
   15dcc:	andeq	r5, r1, r4, ror #30
   15dd0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15dd4:	ldrdeq	r5, [r1], -r4
   15dd8:	andeq	r6, r1, r4, lsl r0
   15ddc:	andeq	r6, r1, r4, asr r0
   15de0:	andeq	r6, r1, ip, lsl #1
   15de4:	andeq	r6, r1, r4, asr #1
   15de8:	strdeq	r6, [r1], -ip
   15dec:	andeq	r6, r1, r4, lsr r1
   15df0:	andeq	r6, r1, r4, ror r1
   15df4:			; <UNDEFINED> instruction: 0x000161b4
   15df8:	andeq	r6, r1, ip, ror #3
   15dfc:	andeq	r6, r1, r4, lsr #4
   15e00:	andeq	r6, r1, ip, asr r2
   15e04:	muleq	r1, r4, r2
   15e08:	andeq	r6, r1, ip, asr #5
   15e0c:	andeq	r6, r1, r4, lsl #6
   15e10:	andeq	r6, r1, r8, asr #6
   15e14:	movw	r1, #25811	; 0x64d3
   15e18:	add	r2, sp, #8
   15e1c:	mov	r0, r7
   15e20:	movt	r1, #1
   15e24:	bl	12010 <__isoc99_sscanf@plt>
   15e28:	mvn	r7, #0
   15e2c:	cmp	r0, #1
   15e30:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15e34:	ldr	r3, [sp, #8]
   15e38:	mov	r0, r6
   15e3c:	mov	r1, r5
   15e40:	mov	r2, r4
   15e44:	bl	14668 <table_set_int@@Base>
   15e48:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   15e4c:	movw	r1, #25968	; 0x6570
   15e50:	add	r2, sp, #8
   15e54:	mov	r0, r7
   15e58:	movt	r1, #1
   15e5c:	bl	12010 <__isoc99_sscanf@plt>
   15e60:	mvn	r7, #0
   15e64:	cmp	r0, #1
   15e68:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15e6c:	ldr	r3, [sp, #8]
   15e70:	mov	r0, r6
   15e74:	mov	r1, r5
   15e78:	mov	r2, r4
   15e7c:	bl	146e8 <table_set_uint@@Base>
   15e80:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   15e84:	movw	r1, #26017	; 0x65a1
   15e88:	add	r2, sp, #8
   15e8c:	mov	r0, r7
   15e90:	movt	r1, #1
   15e94:	bl	12010 <__isoc99_sscanf@plt>
   15e98:	mvn	r7, #0
   15e9c:	cmp	r0, #1
   15ea0:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15ea4:	ldrsb	r3, [sp, #8]
   15ea8:	mov	r0, r6
   15eac:	mov	r1, r5
   15eb0:	mov	r2, r4
   15eb4:	bl	14768 <table_set_int8@@Base>
   15eb8:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   15ebc:	movw	r1, #26022	; 0x65a6
   15ec0:	add	r2, sp, #8
   15ec4:	mov	r0, r7
   15ec8:	movt	r1, #1
   15ecc:	bl	12010 <__isoc99_sscanf@plt>
   15ed0:	mvn	r7, #0
   15ed4:	cmp	r0, #1
   15ed8:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15edc:	ldrb	r3, [sp, #8]
   15ee0:	mov	r0, r6
   15ee4:	mov	r1, r5
   15ee8:	mov	r2, r4
   15eec:	bl	147e8 <table_set_uint8@@Base>
   15ef0:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   15ef4:	movw	r1, #25981	; 0x657d
   15ef8:	add	r2, sp, #8
   15efc:	mov	r0, r7
   15f00:	movt	r1, #1
   15f04:	bl	12010 <__isoc99_sscanf@plt>
   15f08:	mvn	r7, #0
   15f0c:	cmp	r0, #1
   15f10:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15f14:	ldrsh	r3, [sp, #8]
   15f18:	mov	r0, r6
   15f1c:	mov	r1, r5
   15f20:	mov	r2, r4
   15f24:	bl	14868 <table_set_int16@@Base>
   15f28:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   15f2c:	movw	r1, #25985	; 0x6581
   15f30:	add	r2, sp, #8
   15f34:	mov	r0, r7
   15f38:	movt	r1, #1
   15f3c:	bl	12010 <__isoc99_sscanf@plt>
   15f40:	mvn	r7, #0
   15f44:	cmp	r0, #1
   15f48:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15f4c:	ldrh	r3, [sp, #8]
   15f50:	mov	r0, r6
   15f54:	mov	r1, r5
   15f58:	mov	r2, r4
   15f5c:	bl	148e8 <table_set_uint16@@Base>
   15f60:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   15f64:	movw	r1, #25811	; 0x64d3
   15f68:	add	r2, sp, #8
   15f6c:	mov	r0, r7
   15f70:	movt	r1, #1
   15f74:	bl	12010 <__isoc99_sscanf@plt>
   15f78:	mvn	r7, #0
   15f7c:	cmp	r0, #1
   15f80:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15f84:	ldr	r3, [sp, #8]
   15f88:	mov	r0, r6
   15f8c:	mov	r1, r5
   15f90:	mov	r2, r4
   15f94:	bl	14968 <table_set_int32@@Base>
   15f98:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   15f9c:	movw	r1, #25968	; 0x6570
   15fa0:	add	r2, sp, #8
   15fa4:	mov	r0, r7
   15fa8:	movt	r1, #1
   15fac:	bl	12010 <__isoc99_sscanf@plt>
   15fb0:	mvn	r7, #0
   15fb4:	cmp	r0, #1
   15fb8:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15fbc:	ldr	r3, [sp, #8]
   15fc0:	mov	r0, r6
   15fc4:	mov	r1, r5
   15fc8:	mov	r2, r4
   15fcc:	bl	149e8 <table_set_uint32@@Base>
   15fd0:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   15fd4:	movw	r1, #25971	; 0x6573
   15fd8:	add	r2, sp, #8
   15fdc:	mov	r0, r7
   15fe0:	movt	r1, #1
   15fe4:	bl	12010 <__isoc99_sscanf@plt>
   15fe8:	mvn	r7, #0
   15fec:	cmp	r0, #1
   15ff0:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   15ff4:	ldr	r0, [sp, #8]
   15ff8:	ldr	r1, [sp, #12]
   15ffc:	mov	r2, r4
   16000:	stm	sp, {r0, r1}
   16004:	mov	r0, r6
   16008:	mov	r1, r5
   1600c:	bl	14a68 <table_set_int64@@Base>
   16010:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   16014:	movw	r1, #25976	; 0x6578
   16018:	add	r2, sp, #8
   1601c:	mov	r0, r7
   16020:	movt	r1, #1
   16024:	bl	12010 <__isoc99_sscanf@plt>
   16028:	mvn	r7, #0
   1602c:	cmp	r0, #1
   16030:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   16034:	ldr	r0, [sp, #8]
   16038:	ldr	r1, [sp, #12]
   1603c:	mov	r2, r4
   16040:	stm	sp, {r0, r1}
   16044:	mov	r0, r6
   16048:	mov	r1, r5
   1604c:	bl	14af0 <table_set_uint64@@Base>
   16050:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   16054:	movw	r1, #25981	; 0x657d
   16058:	add	r2, sp, #8
   1605c:	mov	r0, r7
   16060:	movt	r1, #1
   16064:	bl	12010 <__isoc99_sscanf@plt>
   16068:	mvn	r7, #0
   1606c:	cmp	r0, #1
   16070:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   16074:	ldrsh	r3, [sp, #8]
   16078:	mov	r0, r6
   1607c:	mov	r1, r5
   16080:	mov	r2, r4
   16084:	bl	14b78 <table_set_short@@Base>
   16088:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   1608c:	movw	r1, #25985	; 0x6581
   16090:	add	r2, sp, #8
   16094:	mov	r0, r7
   16098:	movt	r1, #1
   1609c:	bl	12010 <__isoc99_sscanf@plt>
   160a0:	mvn	r7, #0
   160a4:	cmp	r0, #1
   160a8:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   160ac:	ldrh	r3, [sp, #8]
   160b0:	mov	r0, r6
   160b4:	mov	r1, r5
   160b8:	mov	r2, r4
   160bc:	bl	14bf8 <table_set_ushort@@Base>
   160c0:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   160c4:	movw	r1, #25989	; 0x6585
   160c8:	add	r2, sp, #8
   160cc:	mov	r0, r7
   160d0:	movt	r1, #1
   160d4:	bl	12010 <__isoc99_sscanf@plt>
   160d8:	mvn	r7, #0
   160dc:	cmp	r0, #1
   160e0:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   160e4:	ldr	r3, [sp, #8]
   160e8:	mov	r0, r6
   160ec:	mov	r1, r5
   160f0:	mov	r2, r4
   160f4:	bl	14c78 <table_set_long@@Base>
   160f8:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   160fc:	movw	r1, #25993	; 0x6589
   16100:	add	r2, sp, #8
   16104:	mov	r0, r7
   16108:	movt	r1, #1
   1610c:	bl	12010 <__isoc99_sscanf@plt>
   16110:	mvn	r7, #0
   16114:	cmp	r0, #1
   16118:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   1611c:	ldr	r3, [sp, #8]
   16120:	mov	r0, r6
   16124:	mov	r1, r5
   16128:	mov	r2, r4
   1612c:	bl	14cf8 <table_set_ulong@@Base>
   16130:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   16134:	movw	r1, #25971	; 0x6573
   16138:	add	r2, sp, #8
   1613c:	mov	r0, r7
   16140:	movt	r1, #1
   16144:	bl	12010 <__isoc99_sscanf@plt>
   16148:	mvn	r7, #0
   1614c:	cmp	r0, #1
   16150:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   16154:	ldr	r0, [sp, #8]
   16158:	ldr	r1, [sp, #12]
   1615c:	mov	r2, r4
   16160:	stm	sp, {r0, r1}
   16164:	mov	r0, r6
   16168:	mov	r1, r5
   1616c:	bl	14d78 <table_set_llong@@Base>
   16170:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   16174:	movw	r1, #25976	; 0x6578
   16178:	add	r2, sp, #8
   1617c:	mov	r0, r7
   16180:	movt	r1, #1
   16184:	bl	12010 <__isoc99_sscanf@plt>
   16188:	mvn	r7, #0
   1618c:	cmp	r0, #1
   16190:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   16194:	ldr	r0, [sp, #8]
   16198:	ldr	r1, [sp, #12]
   1619c:	mov	r2, r4
   161a0:	stm	sp, {r0, r1}
   161a4:	mov	r0, r6
   161a8:	mov	r1, r5
   161ac:	bl	14e00 <table_set_ullong@@Base>
   161b0:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   161b4:	movw	r1, #26000	; 0x6590
   161b8:	add	r2, sp, #8
   161bc:	mov	r0, r7
   161c0:	movt	r1, #1
   161c4:	bl	12010 <__isoc99_sscanf@plt>
   161c8:	mvn	r7, #0
   161cc:	cmp	r0, #1
   161d0:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   161d4:	vldr	s0, [sp, #8]
   161d8:	mov	r0, r6
   161dc:	mov	r1, r5
   161e0:	mov	r2, r4
   161e4:	bl	14e88 <table_set_float@@Base>
   161e8:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   161ec:	movw	r1, #26003	; 0x6593
   161f0:	add	r2, sp, #8
   161f4:	mov	r0, r7
   161f8:	movt	r1, #1
   161fc:	bl	12010 <__isoc99_sscanf@plt>
   16200:	mvn	r7, #0
   16204:	cmp	r0, #1
   16208:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   1620c:	vldr	d0, [sp, #8]
   16210:	mov	r0, r6
   16214:	mov	r1, r5
   16218:	mov	r2, r4
   1621c:	bl	14f14 <table_set_double@@Base>
   16220:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   16224:	movw	r1, #26007	; 0x6597
   16228:	add	r2, sp, #8
   1622c:	mov	r0, r7
   16230:	movt	r1, #1
   16234:	bl	12010 <__isoc99_sscanf@plt>
   16238:	mvn	r7, #0
   1623c:	cmp	r0, #1
   16240:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   16244:	vldr	d0, [sp, #8]
   16248:	mov	r0, r6
   1624c:	mov	r1, r5
   16250:	mov	r2, r4
   16254:	bl	14f9c <table_set_ldouble@@Base>
   16258:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   1625c:	movw	r1, #26011	; 0x659b
   16260:	add	r2, sp, #8
   16264:	mov	r0, r7
   16268:	movt	r1, #1
   1626c:	bl	12010 <__isoc99_sscanf@plt>
   16270:	mvn	r7, #0
   16274:	cmp	r0, #1
   16278:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   1627c:	ldrb	r3, [sp, #8]
   16280:	mov	r0, r6
   16284:	mov	r1, r5
   16288:	mov	r2, r4
   1628c:	bl	150ac <table_set_char@@Base>
   16290:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   16294:	movw	r1, #26011	; 0x659b
   16298:	add	r2, sp, #8
   1629c:	mov	r0, r7
   162a0:	movt	r1, #1
   162a4:	bl	12010 <__isoc99_sscanf@plt>
   162a8:	mvn	r7, #0
   162ac:	cmp	r0, #1
   162b0:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   162b4:	ldrb	r3, [sp, #8]
   162b8:	mov	r0, r6
   162bc:	mov	r1, r5
   162c0:	mov	r2, r4
   162c4:	bl	1512c <table_set_uchar@@Base>
   162c8:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   162cc:	movw	r1, #25997	; 0x658d
   162d0:	add	r2, sp, #8
   162d4:	mov	r0, r7
   162d8:	movt	r1, #1
   162dc:	bl	12010 <__isoc99_sscanf@plt>
   162e0:	mvn	r7, #0
   162e4:	cmp	r0, #1
   162e8:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   162ec:	add	r3, sp, #8
   162f0:	mov	r0, r6
   162f4:	mov	r1, r5
   162f8:	mov	r2, r4
   162fc:	bl	15024 <table_set_string@@Base>
   16300:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   16304:	movw	r1, #25811	; 0x64d3
   16308:	add	r2, sp, #8
   1630c:	mov	r0, r7
   16310:	movt	r1, #1
   16314:	bl	12010 <__isoc99_sscanf@plt>
   16318:	mvn	r7, #0
   1631c:	cmp	r0, #1
   16320:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   16324:	ldr	r0, [sp, #8]
   16328:	cmp	r0, #0
   1632c:	beq	1638c <table_cell_from_buffer@@Base+0x60c>
   16330:	mov	r0, r6
   16334:	mov	r1, r5
   16338:	mov	r2, r4
   1633c:	mov	r3, #1
   16340:	bl	145e8 <table_set_bool@@Base>
   16344:	b	1637c <table_cell_from_buffer@@Base+0x5fc>
   16348:	movw	r1, #26014	; 0x659e
   1634c:	add	r2, sp, #8
   16350:	mov	r0, r7
   16354:	movt	r1, #1
   16358:	bl	12010 <__isoc99_sscanf@plt>
   1635c:	mvn	r7, #0
   16360:	cmp	r0, #1
   16364:	bne	16380 <table_cell_from_buffer@@Base+0x600>
   16368:	ldr	r3, [sp, #8]
   1636c:	mov	r0, r6
   16370:	mov	r1, r5
   16374:	mov	r2, r4
   16378:	bl	151ac <table_set_ptr@@Base>
   1637c:	mov	r7, #0
   16380:	mov	r0, r7
   16384:	sub	sp, fp, #24
   16388:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1638c:	mov	r0, r6
   16390:	mov	r1, r5
   16394:	mov	r2, r4
   16398:	mov	r3, #0
   1639c:	mov	r7, #0
   163a0:	bl	145e8 <table_set_bool@@Base>
   163a4:	mov	r0, r7
   163a8:	sub	sp, fp, #24
   163ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000163b0 <table_cell_nullify@@Base>:
   163b0:	push	{r4, r5, fp, lr}
   163b4:	add	fp, sp, #8
   163b8:	mov	r4, r2
   163bc:	bl	140a4 <table_get_row_ptr@@Base>
   163c0:	ldr	r5, [r0]
   163c4:	ldr	r0, [r5, r4, lsl #2]
   163c8:	cmp	r0, #0
   163cc:	beq	163dc <table_cell_nullify@@Base+0x2c>
   163d0:	bl	11f98 <free@plt>
   163d4:	mov	r0, #0
   163d8:	str	r0, [r5, r4, lsl #2]
   163dc:	mov	r0, #0
   163e0:	pop	{r4, r5, fp, pc}

000163e4 <__libc_csu_init@@Base>:
   163e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   163e8:	mov	r7, r0
   163ec:	ldr	r6, [pc, #72]	; 1643c <__libc_csu_init@@Base+0x58>
   163f0:	ldr	r5, [pc, #72]	; 16440 <__libc_csu_init@@Base+0x5c>
   163f4:	add	r6, pc, r6
   163f8:	add	r5, pc, r5
   163fc:	sub	r6, r6, r5
   16400:	mov	r8, r1
   16404:	mov	r9, r2
   16408:	bl	11f60 <strcmp@plt-0x20>
   1640c:	asrs	r6, r6, #2
   16410:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16414:	mov	r4, #0
   16418:	add	r4, r4, #1
   1641c:	ldr	r3, [r5], #4
   16420:	mov	r2, r9
   16424:	mov	r1, r8
   16428:	mov	r0, r7
   1642c:	blx	r3
   16430:	cmp	r6, r4
   16434:	bne	16418 <__libc_csu_init@@Base+0x34>
   16438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1643c:	andeq	r0, r1, r0, lsl fp
   16440:	andeq	r0, r1, r8, lsl #22

00016444 <__libc_csu_fini@@Base>:
   16444:	bx	lr

Disassembly of section .fini:

00016448 <.fini>:
   16448:	push	{r3, lr}
   1644c:	pop	{r3, pc}
