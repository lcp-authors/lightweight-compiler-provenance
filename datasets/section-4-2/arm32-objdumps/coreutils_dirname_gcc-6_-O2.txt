
../repos/coreutils/src/dirname:     file format elf32-littlearm


Disassembly of section .init:

00010b08 <.init>:
   10b08:	push	{r3, lr}
   10b0c:	bl	10f84 <abort@plt+0x24c>
   10b10:	pop	{r3, pc}

Disassembly of section .plt:

00010b14 <calloc@plt-0x14>:
   10b14:	push	{lr}		; (str lr, [sp, #-4]!)
   10b18:	ldr	lr, [pc, #4]	; 10b24 <calloc@plt-0x4>
   10b1c:	add	lr, pc, lr
   10b20:	ldr	pc, [lr, #8]!
   10b24:	ldrdeq	r5, [r1], -ip

00010b28 <calloc@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #86016	; 0x15000
   10b30:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b34 <fputs_unlocked@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #86016	; 0x15000
   10b3c:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b40 <raise@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #86016	; 0x15000
   10b48:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b4c <strcmp@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #86016	; 0x15000
   10b54:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b58 <fflush@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #86016	; 0x15000
   10b60:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b64 <free@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #86016	; 0x15000
   10b6c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b70 <_exit@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #86016	; 0x15000
   10b78:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b7c <memcpy@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #86016	; 0x15000
   10b84:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b88 <mbsinit@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #86016	; 0x15000
   10b90:	ldr	pc, [ip, #1180]!	; 0x49c

00010b94 <fwrite_unlocked@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #86016	; 0x15000
   10b9c:	ldr	pc, [ip, #1172]!	; 0x494

00010ba0 <memcmp@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #86016	; 0x15000
   10ba8:	ldr	pc, [ip, #1164]!	; 0x48c

00010bac <fputc_unlocked@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #86016	; 0x15000
   10bb4:	ldr	pc, [ip, #1156]!	; 0x484

00010bb8 <dcgettext@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #86016	; 0x15000
   10bc0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bc4 <realloc@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #86016	; 0x15000
   10bcc:	ldr	pc, [ip, #1140]!	; 0x474

00010bd0 <textdomain@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #86016	; 0x15000
   10bd8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bdc <iswprint@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #86016	; 0x15000
   10be4:	ldr	pc, [ip, #1124]!	; 0x464

00010be8 <fwrite@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #86016	; 0x15000
   10bf0:	ldr	pc, [ip, #1116]!	; 0x45c

00010bf4 <lseek64@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #86016	; 0x15000
   10bfc:	ldr	pc, [ip, #1108]!	; 0x454

00010c00 <__ctype_get_mb_cur_max@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #86016	; 0x15000
   10c08:	ldr	pc, [ip, #1100]!	; 0x44c

00010c0c <__fpending@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #86016	; 0x15000
   10c14:	ldr	pc, [ip, #1092]!	; 0x444

00010c18 <mbrtowc@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #86016	; 0x15000
   10c20:	ldr	pc, [ip, #1084]!	; 0x43c

00010c24 <error@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #86016	; 0x15000
   10c2c:	ldr	pc, [ip, #1076]!	; 0x434

00010c30 <malloc@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #86016	; 0x15000
   10c38:	ldr	pc, [ip, #1068]!	; 0x42c

00010c3c <__libc_start_main@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #86016	; 0x15000
   10c44:	ldr	pc, [ip, #1060]!	; 0x424

00010c48 <__freading@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #86016	; 0x15000
   10c50:	ldr	pc, [ip, #1052]!	; 0x41c

00010c54 <__gmon_start__@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #86016	; 0x15000
   10c5c:	ldr	pc, [ip, #1044]!	; 0x414

00010c60 <getopt_long@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #86016	; 0x15000
   10c68:	ldr	pc, [ip, #1036]!	; 0x40c

00010c6c <__ctype_b_loc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #1028]!	; 0x404

00010c78 <exit@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c84 <strlen@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c90 <__errno_location@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c9c <__cxa_atexit@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #996]!	; 0x3e4

00010ca8 <memset@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #988]!	; 0x3dc

00010cb4 <__printf_chk@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #980]!	; 0x3d4

00010cc0 <fileno@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #972]!	; 0x3cc

00010ccc <__fprintf_chk@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #964]!	; 0x3c4

00010cd8 <fclose@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #956]!	; 0x3bc

00010ce4 <fseeko64@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #948]!	; 0x3b4

00010cf0 <__overflow@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #940]!	; 0x3ac

00010cfc <setlocale@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #932]!	; 0x3a4

00010d08 <strrchr@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #924]!	; 0x39c

00010d14 <nl_langinfo@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #916]!	; 0x394

00010d20 <bindtextdomain@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #908]!	; 0x38c

00010d2c <strncmp@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #900]!	; 0x384

00010d38 <abort@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #892]!	; 0x37c

Disassembly of section .text:

00010d44 <.text>:
   10d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d48:	mov	r6, r0
   10d4c:	sub	sp, sp, #28
   10d50:	ldr	r0, [r1]
   10d54:	mov	r4, r1
   10d58:	bl	11554 <abort@plt+0x81c>
   10d5c:	ldr	r1, [pc, #428]	; 10f10 <abort@plt+0x1d8>
   10d60:	mov	r0, #6
   10d64:	bl	10cfc <setlocale@plt>
   10d68:	ldr	r1, [pc, #420]	; 10f14 <abort@plt+0x1dc>
   10d6c:	ldr	r0, [pc, #420]	; 10f18 <abort@plt+0x1e0>
   10d70:	bl	10d20 <bindtextdomain@plt>
   10d74:	ldr	r0, [pc, #412]	; 10f18 <abort@plt+0x1e0>
   10d78:	bl	10bd0 <textdomain@plt>
   10d7c:	ldr	r0, [pc, #408]	; 10f1c <abort@plt+0x1e4>
   10d80:	bl	1494c <abort@plt+0x3c14>
   10d84:	mov	r5, #0
   10d88:	ldr	r9, [pc, #400]	; 10f20 <abort@plt+0x1e8>
   10d8c:	ldr	r8, [pc, #400]	; 10f24 <abort@plt+0x1ec>
   10d90:	mov	r7, r5
   10d94:	mov	sl, #1
   10d98:	str	r7, [sp]
   10d9c:	mov	r3, r9
   10da0:	mov	r2, r8
   10da4:	mov	r1, r4
   10da8:	mov	r0, r6
   10dac:	bl	10c60 <getopt_long@plt>
   10db0:	cmn	r0, #1
   10db4:	beq	10e1c <abort@plt+0xe4>
   10db8:	cmn	r0, #2
   10dbc:	mov	r5, sl
   10dc0:	beq	10e14 <abort@plt+0xdc>
   10dc4:	cmp	r0, #122	; 0x7a
   10dc8:	beq	10d98 <abort@plt+0x60>
   10dcc:	cmn	r0, #3
   10dd0:	beq	10ddc <abort@plt+0xa4>
   10dd4:	mov	r0, #1
   10dd8:	bl	11070 <abort@plt+0x338>
   10ddc:	ldr	r3, [pc, #324]	; 10f28 <abort@plt+0x1f0>
   10de0:	ldr	r0, [pc, #324]	; 10f2c <abort@plt+0x1f4>
   10de4:	ldr	r1, [pc, #324]	; 10f30 <abort@plt+0x1f8>
   10de8:	ldr	r2, [pc, #324]	; 10f34 <abort@plt+0x1fc>
   10dec:	str	r7, [sp, #8]
   10df0:	ldr	r0, [r0]
   10df4:	ldr	r3, [r3]
   10df8:	str	r1, [sp, #4]
   10dfc:	str	r2, [sp]
   10e00:	ldr	r1, [pc, #304]	; 10f38 <abort@plt+0x200>
   10e04:	ldr	r2, [pc, #304]	; 10f3c <abort@plt+0x204>
   10e08:	bl	13850 <abort@plt+0x2b18>
   10e0c:	mov	r0, #0
   10e10:	bl	10c78 <exit@plt>
   10e14:	mov	r0, #0
   10e18:	bl	11070 <abort@plt+0x338>
   10e1c:	ldr	r8, [pc, #284]	; 10f40 <abort@plt+0x208>
   10e20:	ldr	r3, [r8]
   10e24:	cmp	r6, r3
   10e28:	ble	10eec <abort@plt+0x1b4>
   10e2c:	cmp	r5, #0
   10e30:	moveq	r2, #10
   10e34:	movne	r2, #0
   10e38:	str	r2, [sp, #20]
   10e3c:	ldr	r9, [pc, #232]	; 10f2c <abort@plt+0x1f4>
   10e40:	uxtb	sl, r2
   10e44:	mov	fp, #1
   10e48:	mov	r7, #46	; 0x2e
   10e4c:	b	10eac <abort@plt+0x174>
   10e50:	ldr	r0, [r9]
   10e54:	ldr	r3, [r0, #20]
   10e58:	ldr	r2, [r0, #24]
   10e5c:	cmp	r2, r3
   10e60:	addhi	r2, r3, #1
   10e64:	strhi	r2, [r0, #20]
   10e68:	strbhi	r7, [r3]
   10e6c:	bhi	10e78 <abort@plt+0x140>
   10e70:	mov	r1, r7
   10e74:	bl	10cf0 <__overflow@plt>
   10e78:	ldr	r0, [r9]
   10e7c:	ldr	r3, [r0, #20]
   10e80:	ldr	r2, [r0, #24]
   10e84:	cmp	r3, r2
   10e88:	addcc	r2, r3, #1
   10e8c:	strcc	r2, [r0, #20]
   10e90:	strbcc	sl, [r3]
   10e94:	bcs	10ed4 <abort@plt+0x19c>
   10e98:	ldr	r3, [r8]
   10e9c:	add	r3, r3, #1
   10ea0:	cmp	r6, r3
   10ea4:	str	r3, [r8]
   10ea8:	ble	10ee0 <abort@plt+0x1a8>
   10eac:	ldr	r5, [r4, r3, lsl #2]
   10eb0:	mov	r0, r5
   10eb4:	bl	11484 <abort@plt+0x74c>
   10eb8:	subs	r2, r0, #0
   10ebc:	beq	10e50 <abort@plt+0x118>
   10ec0:	mov	r0, r5
   10ec4:	ldr	r3, [r9]
   10ec8:	mov	r1, fp
   10ecc:	bl	10b94 <fwrite_unlocked@plt>
   10ed0:	b	10e78 <abort@plt+0x140>
   10ed4:	ldr	r1, [sp, #20]
   10ed8:	bl	10cf0 <__overflow@plt>
   10edc:	b	10e98 <abort@plt+0x160>
   10ee0:	mov	r0, #0
   10ee4:	add	sp, sp, #28
   10ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10eec:	mov	r2, #5
   10ef0:	ldr	r1, [pc, #76]	; 10f44 <abort@plt+0x20c>
   10ef4:	mov	r0, #0
   10ef8:	bl	10bb8 <dcgettext@plt>
   10efc:	mov	r1, #0
   10f00:	mov	r2, r0
   10f04:	mov	r0, r1
   10f08:	bl	10c24 <error@plt>
   10f0c:	b	10dd4 <abort@plt+0x9c>
   10f10:	andeq	r4, r1, r8, lsl #22
   10f14:	andeq	r4, r1, r4, ror #25
   10f18:	andeq	r4, r1, ip, lsr ip
   10f1c:	andeq	r1, r1, r0, lsr #7
   10f20:	andeq	r4, r1, r8, lsr #19
   10f24:	strdeq	r4, [r1], -ip
   10f28:	andeq	r6, r2, ip, asr #1
   10f2c:	andeq	r6, r2, ip, lsr #2
   10f30:	andeq	r4, r1, r0, lsl #26
   10f34:	andeq	r4, r1, r0, lsl sp
   10f38:	andeq	r4, r1, r8, ror #19
   10f3c:	andeq	r4, r1, r8, lsr ip
   10f40:	andeq	r6, r2, r0, lsr #2
   10f44:	andeq	r4, r1, r0, lsr #26
   10f48:	mov	fp, #0
   10f4c:	mov	lr, #0
   10f50:	pop	{r1}		; (ldr r1, [sp], #4)
   10f54:	mov	r2, sp
   10f58:	push	{r2}		; (str r2, [sp, #-4]!)
   10f5c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f60:	ldr	ip, [pc, #16]	; 10f78 <abort@plt+0x240>
   10f64:	push	{ip}		; (str ip, [sp, #-4]!)
   10f68:	ldr	r0, [pc, #12]	; 10f7c <abort@plt+0x244>
   10f6c:	ldr	r3, [pc, #12]	; 10f80 <abort@plt+0x248>
   10f70:	bl	10c3c <__libc_start_main@plt>
   10f74:	bl	10d38 <abort@plt>
   10f78:	andeq	r4, r1, r8, asr #18
   10f7c:	andeq	r0, r1, r4, asr #26
   10f80:	andeq	r4, r1, r8, ror #17
   10f84:	ldr	r3, [pc, #20]	; 10fa0 <abort@plt+0x268>
   10f88:	ldr	r2, [pc, #20]	; 10fa4 <abort@plt+0x26c>
   10f8c:	add	r3, pc, r3
   10f90:	ldr	r2, [r3, r2]
   10f94:	cmp	r2, #0
   10f98:	bxeq	lr
   10f9c:	b	10c54 <__gmon_start__@plt>
   10fa0:	andeq	r5, r1, ip, rrx
   10fa4:	andeq	r0, r0, r0, asr #1
   10fa8:	ldr	r3, [pc, #28]	; 10fcc <abort@plt+0x294>
   10fac:	ldr	r0, [pc, #28]	; 10fd0 <abort@plt+0x298>
   10fb0:	sub	r3, r3, r0
   10fb4:	cmp	r3, #6
   10fb8:	bxls	lr
   10fbc:	ldr	r3, [pc, #16]	; 10fd4 <abort@plt+0x29c>
   10fc0:	cmp	r3, #0
   10fc4:	bxeq	lr
   10fc8:	bx	r3
   10fcc:	andeq	r6, r2, r7, lsl r1
   10fd0:	andeq	r6, r2, r4, lsl r1
   10fd4:	andeq	r0, r0, r0
   10fd8:	ldr	r1, [pc, #36]	; 11004 <abort@plt+0x2cc>
   10fdc:	ldr	r0, [pc, #36]	; 11008 <abort@plt+0x2d0>
   10fe0:	sub	r1, r1, r0
   10fe4:	asr	r1, r1, #2
   10fe8:	add	r1, r1, r1, lsr #31
   10fec:	asrs	r1, r1, #1
   10ff0:	bxeq	lr
   10ff4:	ldr	r3, [pc, #16]	; 1100c <abort@plt+0x2d4>
   10ff8:	cmp	r3, #0
   10ffc:	bxeq	lr
   11000:	bx	r3
   11004:	andeq	r6, r2, r4, lsl r1
   11008:	andeq	r6, r2, r4, lsl r1
   1100c:	andeq	r0, r0, r0
   11010:	push	{r4, lr}
   11014:	ldr	r4, [pc, #24]	; 11034 <abort@plt+0x2fc>
   11018:	ldrb	r3, [r4]
   1101c:	cmp	r3, #0
   11020:	popne	{r4, pc}
   11024:	bl	10fa8 <abort@plt+0x270>
   11028:	mov	r3, #1
   1102c:	strb	r3, [r4]
   11030:	pop	{r4, pc}
   11034:	andeq	r6, r2, r0, lsr r1
   11038:	ldr	r0, [pc, #40]	; 11068 <abort@plt+0x330>
   1103c:	ldr	r3, [r0]
   11040:	cmp	r3, #0
   11044:	bne	1104c <abort@plt+0x314>
   11048:	b	10fd8 <abort@plt+0x2a0>
   1104c:	ldr	r3, [pc, #24]	; 1106c <abort@plt+0x334>
   11050:	cmp	r3, #0
   11054:	beq	11048 <abort@plt+0x310>
   11058:	push	{r4, lr}
   1105c:	blx	r3
   11060:	pop	{r4, lr}
   11064:	b	10fd8 <abort@plt+0x2a0>
   11068:	andeq	r5, r2, r4, lsl pc
   1106c:	andeq	r0, r0, r0
   11070:	subs	r6, r0, #0
   11074:	push	{r7, lr}
   11078:	sub	sp, sp, #64	; 0x40
   1107c:	beq	110b8 <abort@plt+0x380>
   11080:	ldr	r3, [pc, #676]	; 1132c <abort@plt+0x5f4>
   11084:	mov	r2, #5
   11088:	ldr	r1, [pc, #672]	; 11330 <abort@plt+0x5f8>
   1108c:	mov	r0, #0
   11090:	ldr	r4, [r3]
   11094:	bl	10bb8 <dcgettext@plt>
   11098:	ldr	r3, [pc, #660]	; 11334 <abort@plt+0x5fc>
   1109c:	mov	r1, #1
   110a0:	ldr	r3, [r3]
   110a4:	mov	r2, r0
   110a8:	mov	r0, r4
   110ac:	bl	10ccc <__fprintf_chk@plt>
   110b0:	mov	r0, r6
   110b4:	bl	10c78 <exit@plt>
   110b8:	mov	r2, #5
   110bc:	ldr	r1, [pc, #628]	; 11338 <abort@plt+0x600>
   110c0:	bl	10bb8 <dcgettext@plt>
   110c4:	ldr	r4, [pc, #616]	; 11334 <abort@plt+0x5fc>
   110c8:	ldr	r7, [pc, #620]	; 1133c <abort@plt+0x604>
   110cc:	ldr	r2, [r4]
   110d0:	mov	r1, r0
   110d4:	mov	r0, #1
   110d8:	bl	10cb4 <__printf_chk@plt>
   110dc:	mov	r2, #5
   110e0:	ldr	r1, [pc, #600]	; 11340 <abort@plt+0x608>
   110e4:	mov	r0, r6
   110e8:	bl	10bb8 <dcgettext@plt>
   110ec:	ldr	r1, [r7]
   110f0:	bl	10b34 <fputs_unlocked@plt>
   110f4:	mov	r2, #5
   110f8:	ldr	r1, [pc, #580]	; 11344 <abort@plt+0x60c>
   110fc:	mov	r0, r6
   11100:	bl	10bb8 <dcgettext@plt>
   11104:	ldr	r1, [r7]
   11108:	bl	10b34 <fputs_unlocked@plt>
   1110c:	mov	r2, #5
   11110:	ldr	r1, [pc, #560]	; 11348 <abort@plt+0x610>
   11114:	mov	r0, r6
   11118:	bl	10bb8 <dcgettext@plt>
   1111c:	ldr	r1, [r7]
   11120:	bl	10b34 <fputs_unlocked@plt>
   11124:	mov	r2, #5
   11128:	ldr	r1, [pc, #540]	; 1134c <abort@plt+0x614>
   1112c:	mov	r0, r6
   11130:	bl	10bb8 <dcgettext@plt>
   11134:	ldr	r1, [r7]
   11138:	bl	10b34 <fputs_unlocked@plt>
   1113c:	mov	r2, #5
   11140:	ldr	r1, [pc, #520]	; 11350 <abort@plt+0x618>
   11144:	mov	r0, r6
   11148:	bl	10bb8 <dcgettext@plt>
   1114c:	ldr	r3, [r4]
   11150:	ldr	r4, [pc, #508]	; 11354 <abort@plt+0x61c>
   11154:	str	r3, [sp]
   11158:	mov	r2, r3
   1115c:	mov	r1, r0
   11160:	mov	r0, #1
   11164:	bl	10cb4 <__printf_chk@plt>
   11168:	ldm	r4!, {r0, r1, r2, r3}
   1116c:	add	lr, sp, #8
   11170:	stmia	lr!, {r0, r1, r2, r3}
   11174:	ldm	r4!, {r0, r1, r2, r3}
   11178:	ldr	ip, [sp, #8]
   1117c:	stmia	lr!, {r0, r1, r2, r3}
   11180:	cmp	ip, #0
   11184:	ldm	r4!, {r0, r1, r2, r3}
   11188:	stmia	lr!, {r0, r1, r2, r3}
   1118c:	ldm	r4, {r0, r1}
   11190:	addeq	r4, sp, #8
   11194:	stm	lr, {r0, r1}
   11198:	beq	111c8 <abort@plt+0x490>
   1119c:	ldr	r5, [pc, #436]	; 11358 <abort@plt+0x620>
   111a0:	add	r4, sp, #8
   111a4:	b	111b4 <abort@plt+0x47c>
   111a8:	ldr	ip, [r4, #8]!
   111ac:	cmp	ip, #0
   111b0:	beq	111c8 <abort@plt+0x490>
   111b4:	mov	r1, ip
   111b8:	mov	r0, r5
   111bc:	bl	10b4c <strcmp@plt>
   111c0:	cmp	r0, #0
   111c4:	bne	111a8 <abort@plt+0x470>
   111c8:	ldr	r4, [r4, #4]
   111cc:	mov	r2, #5
   111d0:	cmp	r4, #0
   111d4:	ldr	r1, [pc, #384]	; 1135c <abort@plt+0x624>
   111d8:	beq	11280 <abort@plt+0x548>
   111dc:	mov	r0, #0
   111e0:	bl	10bb8 <dcgettext@plt>
   111e4:	ldr	r3, [pc, #372]	; 11360 <abort@plt+0x628>
   111e8:	ldr	r2, [pc, #372]	; 11364 <abort@plt+0x62c>
   111ec:	mov	r1, r0
   111f0:	mov	r0, #1
   111f4:	bl	10cb4 <__printf_chk@plt>
   111f8:	mov	r1, #0
   111fc:	mov	r0, #5
   11200:	bl	10cfc <setlocale@plt>
   11204:	cmp	r0, #0
   11208:	ldreq	r5, [pc, #328]	; 11358 <abort@plt+0x620>
   1120c:	beq	11228 <abort@plt+0x4f0>
   11210:	mov	r2, #3
   11214:	ldr	r1, [pc, #332]	; 11368 <abort@plt+0x630>
   11218:	bl	10d2c <strncmp@plt>
   1121c:	ldr	r5, [pc, #308]	; 11358 <abort@plt+0x620>
   11220:	cmp	r0, #0
   11224:	bne	11310 <abort@plt+0x5d8>
   11228:	mov	r2, #5
   1122c:	ldr	r1, [pc, #312]	; 1136c <abort@plt+0x634>
   11230:	mov	r0, #0
   11234:	bl	10bb8 <dcgettext@plt>
   11238:	ldr	r3, [pc, #280]	; 11358 <abort@plt+0x620>
   1123c:	ldr	r2, [pc, #284]	; 11360 <abort@plt+0x628>
   11240:	mov	r1, r0
   11244:	mov	r0, #1
   11248:	bl	10cb4 <__printf_chk@plt>
   1124c:	mov	r2, #5
   11250:	ldr	r1, [pc, #280]	; 11370 <abort@plt+0x638>
   11254:	mov	r0, #0
   11258:	bl	10bb8 <dcgettext@plt>
   1125c:	ldr	r2, [pc, #272]	; 11374 <abort@plt+0x63c>
   11260:	cmp	r4, r5
   11264:	ldr	r3, [pc, #268]	; 11378 <abort@plt+0x640>
   11268:	movne	r3, r2
   1126c:	mov	r1, r0
   11270:	mov	r2, r4
   11274:	mov	r0, #1
   11278:	bl	10cb4 <__printf_chk@plt>
   1127c:	b	110b0 <abort@plt+0x378>
   11280:	mov	r0, r4
   11284:	bl	10bb8 <dcgettext@plt>
   11288:	ldr	r3, [pc, #208]	; 11360 <abort@plt+0x628>
   1128c:	ldr	r2, [pc, #208]	; 11364 <abort@plt+0x62c>
   11290:	mov	r1, r0
   11294:	mov	r0, #1
   11298:	bl	10cb4 <__printf_chk@plt>
   1129c:	mov	r1, r4
   112a0:	mov	r0, #5
   112a4:	bl	10cfc <setlocale@plt>
   112a8:	cmp	r0, #0
   112ac:	beq	112c4 <abort@plt+0x58c>
   112b0:	mov	r2, #3
   112b4:	ldr	r1, [pc, #172]	; 11368 <abort@plt+0x630>
   112b8:	bl	10d2c <strncmp@plt>
   112bc:	cmp	r0, #0
   112c0:	bne	11308 <abort@plt+0x5d0>
   112c4:	mov	r2, #5
   112c8:	ldr	r1, [pc, #156]	; 1136c <abort@plt+0x634>
   112cc:	mov	r0, #0
   112d0:	bl	10bb8 <dcgettext@plt>
   112d4:	ldr	r3, [pc, #124]	; 11358 <abort@plt+0x620>
   112d8:	ldr	r2, [pc, #128]	; 11360 <abort@plt+0x628>
   112dc:	mov	r4, r3
   112e0:	mov	r1, r0
   112e4:	mov	r0, #1
   112e8:	bl	10cb4 <__printf_chk@plt>
   112ec:	ldr	r1, [pc, #124]	; 11370 <abort@plt+0x638>
   112f0:	mov	r2, #5
   112f4:	mov	r0, #0
   112f8:	bl	10bb8 <dcgettext@plt>
   112fc:	ldr	r3, [pc, #116]	; 11378 <abort@plt+0x640>
   11300:	mov	r1, r0
   11304:	b	11270 <abort@plt+0x538>
   11308:	ldr	r5, [pc, #72]	; 11358 <abort@plt+0x620>
   1130c:	mov	r4, r5
   11310:	mov	r2, #5
   11314:	ldr	r1, [pc, #96]	; 1137c <abort@plt+0x644>
   11318:	mov	r0, #0
   1131c:	bl	10bb8 <dcgettext@plt>
   11320:	ldr	r1, [r7]
   11324:	bl	10b34 <fputs_unlocked@plt>
   11328:	b	11228 <abort@plt+0x4f0>
   1132c:	andeq	r6, r2, r8, lsr #2
   11330:	strdeq	r4, [r1], -r0
   11334:	andeq	r6, r2, ip, lsr r1
   11338:	andeq	r4, r1, r8, lsl sl
   1133c:	andeq	r6, r2, ip, lsr #2
   11340:	andeq	r4, r1, r4, lsr sl
   11344:	andeq	r4, r1, ip, asr #21
   11348:	andeq	r4, r1, ip, lsl #22
   1134c:	andeq	r4, r1, ip, lsr fp
   11350:	andeq	r4, r1, r4, ror fp
   11354:	andeq	r4, r1, r0, ror r9
   11358:	andeq	r4, r1, r8, ror #19
   1135c:	strdeq	r4, [r1], -r8
   11360:	andeq	r4, r1, r0, lsl ip
   11364:	andeq	r4, r1, r8, lsr ip
   11368:	andeq	r4, r1, r8, asr #24
   1136c:	muleq	r1, r4, ip
   11370:			; <UNDEFINED> instruction: 0x00014cb0
   11374:	andeq	r4, r1, r8, lsl #22
   11378:	andeq	r4, r1, r8, lsr sp
   1137c:	andeq	r4, r1, ip, asr #24
   11380:	ldr	r3, [pc, #4]	; 1138c <abort@plt+0x654>
   11384:	str	r0, [r3]
   11388:	bx	lr
   1138c:	andeq	r6, r2, r4, lsr r1
   11390:	ldr	r3, [pc, #4]	; 1139c <abort@plt+0x664>
   11394:	strb	r0, [r3, #4]
   11398:	bx	lr
   1139c:	andeq	r6, r2, r4, lsr r1
   113a0:	ldr	r3, [pc, #192]	; 11468 <abort@plt+0x730>
   113a4:	push	{r4, r5, r6, lr}
   113a8:	sub	sp, sp, #8
   113ac:	ldr	r0, [r3]
   113b0:	bl	14050 <abort@plt+0x3318>
   113b4:	cmp	r0, #0
   113b8:	beq	113dc <abort@plt+0x6a4>
   113bc:	ldr	r4, [pc, #168]	; 1146c <abort@plt+0x734>
   113c0:	ldrb	r3, [r4, #4]
   113c4:	cmp	r3, #0
   113c8:	beq	113f8 <abort@plt+0x6c0>
   113cc:	bl	10c90 <__errno_location@plt>
   113d0:	ldr	r3, [r0]
   113d4:	cmp	r3, #32
   113d8:	bne	113f8 <abort@plt+0x6c0>
   113dc:	ldr	r3, [pc, #140]	; 11470 <abort@plt+0x738>
   113e0:	ldr	r0, [r3]
   113e4:	bl	14050 <abort@plt+0x3318>
   113e8:	cmp	r0, #0
   113ec:	bne	11440 <abort@plt+0x708>
   113f0:	add	sp, sp, #8
   113f4:	pop	{r4, r5, r6, pc}
   113f8:	mov	r2, #5
   113fc:	ldr	r1, [pc, #112]	; 11474 <abort@plt+0x73c>
   11400:	mov	r0, #0
   11404:	bl	10bb8 <dcgettext@plt>
   11408:	ldr	r4, [r4]
   1140c:	cmp	r4, #0
   11410:	mov	r5, r0
   11414:	beq	1144c <abort@plt+0x714>
   11418:	bl	10c90 <__errno_location@plt>
   1141c:	ldr	r6, [r0]
   11420:	mov	r0, r4
   11424:	bl	1327c <abort@plt+0x2544>
   11428:	mov	r1, r6
   1142c:	str	r5, [sp]
   11430:	ldr	r2, [pc, #64]	; 11478 <abort@plt+0x740>
   11434:	mov	r3, r0
   11438:	mov	r0, #0
   1143c:	bl	10c24 <error@plt>
   11440:	ldr	r3, [pc, #52]	; 1147c <abort@plt+0x744>
   11444:	ldr	r0, [r3]
   11448:	bl	10b70 <_exit@plt>
   1144c:	bl	10c90 <__errno_location@plt>
   11450:	mov	r3, r5
   11454:	ldr	r2, [pc, #36]	; 11480 <abort@plt+0x748>
   11458:	ldr	r1, [r0]
   1145c:	mov	r0, r4
   11460:	bl	10c24 <error@plt>
   11464:	b	11440 <abort@plt+0x708>
   11468:	andeq	r6, r2, ip, lsr #2
   1146c:	andeq	r6, r2, r4, lsr r1
   11470:	andeq	r6, r2, r8, lsr #2
   11474:	andeq	r4, r1, r4, asr #27
   11478:	ldrdeq	r4, [r1], -r0
   1147c:	ldrdeq	r6, [r2], -r0
   11480:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11484:	push	{r4, r5, r6, lr}
   11488:	mov	r5, r0
   1148c:	ldrb	r4, [r0]
   11490:	bl	13fa4 <abort@plt+0x326c>
   11494:	sub	r4, r4, #47	; 0x2f
   11498:	clz	r4, r4
   1149c:	lsr	r4, r4, #5
   114a0:	sub	r0, r0, r5
   114a4:	cmp	r0, r4
   114a8:	bls	114f4 <abort@plt+0x7bc>
   114ac:	sub	r3, r0, #1
   114b0:	add	r2, r5, r3
   114b4:	ldrb	r1, [r5, r3]
   114b8:	cmp	r1, #47	; 0x2f
   114bc:	beq	114d8 <abort@plt+0x7a0>
   114c0:	b	114f4 <abort@plt+0x7bc>
   114c4:	ldrb	r1, [r2, #-1]!
   114c8:	sub	r0, r3, #1
   114cc:	cmp	r1, #47	; 0x2f
   114d0:	bne	114e8 <abort@plt+0x7b0>
   114d4:	mov	r3, r0
   114d8:	cmp	r4, r3
   114dc:	bne	114c4 <abort@plt+0x78c>
   114e0:	mov	r0, r4
   114e4:	pop	{r4, r5, r6, pc}
   114e8:	mov	r4, r3
   114ec:	mov	r0, r4
   114f0:	pop	{r4, r5, r6, pc}
   114f4:	mov	r4, r0
   114f8:	b	114e0 <abort@plt+0x7a8>
   114fc:	push	{r4, r5, r6, lr}
   11500:	mov	r6, r0
   11504:	bl	11484 <abort@plt+0x74c>
   11508:	add	r3, r0, #1
   1150c:	mov	r4, r0
   11510:	cmp	r0, #0
   11514:	movne	r0, r3
   11518:	addeq	r0, r3, #1
   1151c:	bl	13f1c <abort@plt+0x31e4>
   11520:	subs	r5, r0, #0
   11524:	beq	1154c <abort@plt+0x814>
   11528:	mov	r2, r4
   1152c:	mov	r1, r6
   11530:	bl	10b7c <memcpy@plt>
   11534:	cmp	r4, #0
   11538:	moveq	r3, #46	; 0x2e
   1153c:	moveq	r4, #1
   11540:	strbeq	r3, [r5]
   11544:	mov	r3, #0
   11548:	strb	r3, [r5, r4]
   1154c:	mov	r0, r5
   11550:	pop	{r4, r5, r6, pc}
   11554:	push	{r4, r5, r6, lr}
   11558:	subs	r4, r0, #0
   1155c:	beq	115d0 <abort@plt+0x898>
   11560:	mov	r1, #47	; 0x2f
   11564:	bl	10d08 <strrchr@plt>
   11568:	subs	r5, r0, #0
   1156c:	beq	115bc <abort@plt+0x884>
   11570:	add	r6, r5, #1
   11574:	sub	r3, r6, r4
   11578:	cmp	r3, #6
   1157c:	ble	115bc <abort@plt+0x884>
   11580:	mov	r2, #7
   11584:	ldr	r1, [pc, #96]	; 115ec <abort@plt+0x8b4>
   11588:	sub	r0, r5, #6
   1158c:	bl	10d2c <strncmp@plt>
   11590:	cmp	r0, #0
   11594:	bne	115bc <abort@plt+0x884>
   11598:	mov	r2, #3
   1159c:	ldr	r1, [pc, #76]	; 115f0 <abort@plt+0x8b8>
   115a0:	mov	r0, r6
   115a4:	bl	10d2c <strncmp@plt>
   115a8:	cmp	r0, #0
   115ac:	movne	r4, r6
   115b0:	ldreq	r3, [pc, #60]	; 115f4 <abort@plt+0x8bc>
   115b4:	addeq	r4, r5, #4
   115b8:	streq	r4, [r3]
   115bc:	ldr	r2, [pc, #52]	; 115f8 <abort@plt+0x8c0>
   115c0:	ldr	r3, [pc, #52]	; 115fc <abort@plt+0x8c4>
   115c4:	str	r4, [r2]
   115c8:	str	r4, [r3]
   115cc:	pop	{r4, r5, r6, pc}
   115d0:	ldr	r3, [pc, #40]	; 11600 <abort@plt+0x8c8>
   115d4:	mov	r2, #55	; 0x37
   115d8:	mov	r1, #1
   115dc:	ldr	r3, [r3]
   115e0:	ldr	r0, [pc, #28]	; 11604 <abort@plt+0x8cc>
   115e4:	bl	10be8 <fwrite@plt>
   115e8:	bl	10d38 <abort@plt>
   115ec:	andeq	r4, r1, r0, lsl lr
   115f0:	andeq	r4, r1, r8, lsl lr
   115f4:	andeq	r6, r2, r8, lsl r1
   115f8:	andeq	r6, r2, ip, lsr r1
   115fc:	andeq	r6, r2, ip, lsl r1
   11600:	andeq	r6, r2, r8, lsr #2
   11604:	ldrdeq	r4, [r1], -r8
   11608:	push	{r4, r5, r6, lr}
   1160c:	mov	r2, #48	; 0x30
   11610:	mov	r4, r1
   11614:	mov	r1, #0
   11618:	mov	r5, r0
   1161c:	bl	10ca8 <memset@plt>
   11620:	cmp	r4, #10
   11624:	beq	11634 <abort@plt+0x8fc>
   11628:	str	r4, [r5]
   1162c:	mov	r0, r5
   11630:	pop	{r4, r5, r6, pc}
   11634:	bl	10d38 <abort@plt>
   11638:	push	{r4, r5, r6, lr}
   1163c:	mov	r4, r0
   11640:	mov	r5, r1
   11644:	bl	142c4 <abort@plt+0x358c>
   11648:	ldrb	r3, [r0]
   1164c:	bic	r3, r3, #32
   11650:	cmp	r3, #85	; 0x55
   11654:	bne	116b4 <abort@plt+0x97c>
   11658:	ldrb	r3, [r0, #1]
   1165c:	bic	r3, r3, #32
   11660:	cmp	r3, #84	; 0x54
   11664:	bne	116f0 <abort@plt+0x9b8>
   11668:	ldrb	r3, [r0, #2]
   1166c:	bic	r3, r3, #32
   11670:	cmp	r3, #70	; 0x46
   11674:	bne	116f0 <abort@plt+0x9b8>
   11678:	ldrb	r3, [r0, #3]
   1167c:	cmp	r3, #45	; 0x2d
   11680:	bne	116f0 <abort@plt+0x9b8>
   11684:	ldrb	r3, [r0, #4]
   11688:	cmp	r3, #56	; 0x38
   1168c:	bne	116f0 <abort@plt+0x9b8>
   11690:	ldrb	r3, [r0, #5]
   11694:	cmp	r3, #0
   11698:	bne	116f0 <abort@plt+0x9b8>
   1169c:	ldrb	r2, [r4]
   116a0:	ldr	r3, [pc, #152]	; 11740 <abort@plt+0xa08>
   116a4:	ldr	r0, [pc, #152]	; 11744 <abort@plt+0xa0c>
   116a8:	cmp	r2, #96	; 0x60
   116ac:	movne	r0, r3
   116b0:	pop	{r4, r5, r6, pc}
   116b4:	cmp	r3, #71	; 0x47
   116b8:	bne	116f0 <abort@plt+0x9b8>
   116bc:	ldrb	r3, [r0, #1]
   116c0:	bic	r3, r3, #32
   116c4:	cmp	r3, #66	; 0x42
   116c8:	bne	116f0 <abort@plt+0x9b8>
   116cc:	ldrb	r3, [r0, #2]
   116d0:	cmp	r3, #49	; 0x31
   116d4:	bne	116f0 <abort@plt+0x9b8>
   116d8:	ldrb	r3, [r0, #3]
   116dc:	cmp	r3, #56	; 0x38
   116e0:	bne	116f0 <abort@plt+0x9b8>
   116e4:	ldrb	r3, [r0, #4]
   116e8:	cmp	r3, #48	; 0x30
   116ec:	beq	11704 <abort@plt+0x9cc>
   116f0:	ldr	r3, [pc, #80]	; 11748 <abort@plt+0xa10>
   116f4:	cmp	r5, #9
   116f8:	ldr	r0, [pc, #76]	; 1174c <abort@plt+0xa14>
   116fc:	movne	r0, r3
   11700:	pop	{r4, r5, r6, pc}
   11704:	ldrb	r3, [r0, #5]
   11708:	cmp	r3, #51	; 0x33
   1170c:	bne	116f0 <abort@plt+0x9b8>
   11710:	ldrb	r3, [r0, #6]
   11714:	cmp	r3, #48	; 0x30
   11718:	bne	116f0 <abort@plt+0x9b8>
   1171c:	ldrb	r3, [r0, #7]
   11720:	cmp	r3, #0
   11724:	bne	116f0 <abort@plt+0x9b8>
   11728:	ldrb	r2, [r4]
   1172c:	ldr	r3, [pc, #28]	; 11750 <abort@plt+0xa18>
   11730:	ldr	r0, [pc, #28]	; 11754 <abort@plt+0xa1c>
   11734:	cmp	r2, #96	; 0x60
   11738:	movne	r0, r3
   1173c:	pop	{r4, r5, r6, pc}
   11740:	andeq	r4, r1, r4, ror lr
   11744:	andeq	r4, r1, r0, ror lr
   11748:	andeq	r4, r1, r4, lsl #29
   1174c:	andeq	r4, r1, r0, lsl #29
   11750:	andeq	r4, r1, ip, ror lr
   11754:	andeq	r4, r1, r8, ror lr
   11758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1175c:	sub	sp, sp, #116	; 0x74
   11760:	mov	sl, r0
   11764:	str	r3, [sp, #24]
   11768:	mov	r3, #1
   1176c:	mov	r8, r1
   11770:	str	r2, [sp, #56]	; 0x38
   11774:	str	r3, [sp, #36]	; 0x24
   11778:	bl	10c00 <__ctype_get_mb_cur_max@plt>
   1177c:	ldr	r3, [sp, #156]	; 0x9c
   11780:	mov	fp, r8
   11784:	mov	r2, #0
   11788:	lsr	r3, r3, #1
   1178c:	and	r3, r3, #1
   11790:	str	r2, [sp, #68]	; 0x44
   11794:	str	r3, [sp, #28]
   11798:	str	r2, [sp, #40]	; 0x28
   1179c:	str	r2, [sp, #44]	; 0x2c
   117a0:	str	r2, [sp, #52]	; 0x34
   117a4:	str	r2, [sp, #64]	; 0x40
   117a8:	str	r2, [sp, #72]	; 0x48
   117ac:	str	sl, [sp, #32]
   117b0:	str	r0, [sp, #76]	; 0x4c
   117b4:	ldr	r3, [sp, #152]	; 0x98
   117b8:	cmp	r3, #10
   117bc:	ldrls	pc, [pc, r3, lsl #2]
   117c0:	b	12980 <abort@plt+0x1c48>
   117c4:	strdeq	r1, [r1], -r0
   117c8:	ldrdeq	r1, [r1], -r8
   117cc:	strdeq	r1, [r1], -ip
   117d0:	andeq	r1, r1, r0, lsr #22
   117d4:	andeq	r1, r1, ip, asr #24
   117d8:	andeq	r1, r1, r0, lsr #24
   117dc:	strdeq	r1, [r1], -r8
   117e0:	andeq	r1, r1, r4, lsr fp
   117e4:	andeq	r1, r1, ip, asr #22
   117e8:	andeq	r1, r1, ip, asr #22
   117ec:	andeq	r1, r1, ip, asr #22
   117f0:	mov	r3, #0
   117f4:	mov	r7, r3
   117f8:	str	r3, [sp, #28]
   117fc:	ldr	r3, [sp, #44]	; 0x2c
   11800:	mov	sl, #0
   11804:	eor	r3, r3, #1
   11808:	str	r3, [sp, #60]	; 0x3c
   1180c:	ldr	r3, [sp, #24]
   11810:	cmn	r3, #1
   11814:	beq	11d78 <abort@plt+0x1040>
   11818:	ldr	r3, [sp, #24]
   1181c:	subs	r5, r3, sl
   11820:	movne	r5, #1
   11824:	cmp	r5, #0
   11828:	beq	11d90 <abort@plt+0x1058>
   1182c:	ldr	r3, [sp, #152]	; 0x98
   11830:	ldr	r8, [sp, #44]	; 0x2c
   11834:	cmp	r3, #2
   11838:	moveq	r8, #0
   1183c:	andne	r8, r8, #1
   11840:	ldr	r3, [sp, #52]	; 0x34
   11844:	adds	r9, r3, #0
   11848:	movne	r9, #1
   1184c:	ands	r6, r9, r8
   11850:	beq	121f8 <abort@plt+0x14c0>
   11854:	ldr	r2, [sp, #52]	; 0x34
   11858:	ldr	r1, [sp, #24]
   1185c:	cmp	r2, #1
   11860:	mov	r3, r2
   11864:	movls	r3, #0
   11868:	movhi	r3, #1
   1186c:	cmn	r1, #1
   11870:	movne	r3, #0
   11874:	cmp	r3, #0
   11878:	add	r4, sl, r2
   1187c:	beq	1188c <abort@plt+0xb54>
   11880:	ldr	r0, [sp, #56]	; 0x38
   11884:	bl	10c84 <strlen@plt>
   11888:	str	r0, [sp, #24]
   1188c:	ldr	r3, [sp, #24]
   11890:	cmp	r3, r4
   11894:	ldr	r3, [sp, #56]	; 0x38
   11898:	add	r3, r3, sl
   1189c:	str	r3, [sp, #48]	; 0x30
   118a0:	bcc	12204 <abort@plt+0x14cc>
   118a4:	mov	r0, r3
   118a8:	ldr	r2, [sp, #52]	; 0x34
   118ac:	ldr	r1, [sp, #64]	; 0x40
   118b0:	bl	10ba0 <memcmp@plt>
   118b4:	cmp	r0, #0
   118b8:	bne	12204 <abort@plt+0x14cc>
   118bc:	ldr	r3, [sp, #28]
   118c0:	cmp	r3, #0
   118c4:	bne	12a80 <abort@plt+0x1d48>
   118c8:	ldr	r3, [sp, #48]	; 0x30
   118cc:	ldrb	r4, [r3]
   118d0:	cmp	r4, #126	; 0x7e
   118d4:	ldrls	pc, [pc, r4, lsl #2]
   118d8:	b	12198 <abort@plt+0x1460>
   118dc:			; <UNDEFINED> instruction: 0x00011fbc
   118e0:	muleq	r1, r8, r1
   118e4:	muleq	r1, r8, r1
   118e8:	muleq	r1, r8, r1
   118ec:	muleq	r1, r8, r1
   118f0:	muleq	r1, r8, r1
   118f4:	muleq	r1, r8, r1
   118f8:	andeq	r1, r1, r0, lsr #31
   118fc:	andeq	r1, r1, r4, lsl #31
   11900:	andeq	r2, r1, r0, lsl #3
   11904:	andeq	r1, r1, r4, ror #29
   11908:	andeq	r1, r1, r8, asr #29
   1190c:	andeq	r2, r1, ip, asr r1
   11910:	andeq	r2, r1, r8, lsr r1
   11914:	muleq	r1, r8, r1
   11918:	muleq	r1, r8, r1
   1191c:	muleq	r1, r8, r1
   11920:	muleq	r1, r8, r1
   11924:	muleq	r1, r8, r1
   11928:	muleq	r1, r8, r1
   1192c:	muleq	r1, r8, r1
   11930:	muleq	r1, r8, r1
   11934:	muleq	r1, r8, r1
   11938:	muleq	r1, r8, r1
   1193c:	muleq	r1, r8, r1
   11940:	muleq	r1, r8, r1
   11944:	muleq	r1, r8, r1
   11948:	muleq	r1, r8, r1
   1194c:	muleq	r1, r8, r1
   11950:	muleq	r1, r8, r1
   11954:	muleq	r1, r8, r1
   11958:	muleq	r1, r8, r1
   1195c:	andeq	r2, r1, r8, ror r1
   11960:	andeq	r2, r1, ip, lsr #1
   11964:	andeq	r2, r1, ip, lsr #1
   11968:			; <UNDEFINED> instruction: 0x00011cbc
   1196c:	andeq	r2, r1, ip, lsr #1
   11970:	andeq	r2, r1, r4, asr #2
   11974:	andeq	r2, r1, ip, lsr #1
   11978:	andeq	r2, r1, r8, lsl r1
   1197c:	andeq	r2, r1, ip, lsr #1
   11980:	andeq	r2, r1, ip, lsr #1
   11984:	andeq	r2, r1, ip, lsr #1
   11988:	andeq	r2, r1, r4, asr #2
   1198c:	andeq	r2, r1, r4, asr #2
   11990:	andeq	r2, r1, r4, asr #2
   11994:	andeq	r2, r1, r4, asr #2
   11998:	andeq	r2, r1, r4, asr #2
   1199c:	andeq	r2, r1, r4, asr #2
   119a0:	andeq	r2, r1, r4, asr #2
   119a4:	andeq	r2, r1, r4, asr #2
   119a8:	andeq	r2, r1, r4, asr #2
   119ac:	andeq	r2, r1, r4, asr #2
   119b0:	andeq	r2, r1, r4, asr #2
   119b4:	andeq	r2, r1, r4, asr #2
   119b8:	andeq	r2, r1, r4, asr #2
   119bc:	andeq	r2, r1, r4, asr #2
   119c0:	andeq	r2, r1, r4, asr #2
   119c4:	andeq	r2, r1, r4, asr #2
   119c8:	andeq	r2, r1, ip, lsr #1
   119cc:	andeq	r2, r1, ip, lsr #1
   119d0:	andeq	r2, r1, ip, lsr #1
   119d4:	andeq	r2, r1, ip, lsr #1
   119d8:	andeq	r2, r1, r8, ror #1
   119dc:	muleq	r1, r8, r1
   119e0:	andeq	r2, r1, r4, asr #2
   119e4:	andeq	r2, r1, r4, asr #2
   119e8:	andeq	r2, r1, r4, asr #2
   119ec:	andeq	r2, r1, r4, asr #2
   119f0:	andeq	r2, r1, r4, asr #2
   119f4:	andeq	r2, r1, r4, asr #2
   119f8:	andeq	r2, r1, r4, asr #2
   119fc:	andeq	r2, r1, r4, asr #2
   11a00:	andeq	r2, r1, r4, asr #2
   11a04:	andeq	r2, r1, r4, asr #2
   11a08:	andeq	r2, r1, r4, asr #2
   11a0c:	andeq	r2, r1, r4, asr #2
   11a10:	andeq	r2, r1, r4, asr #2
   11a14:	andeq	r2, r1, r4, asr #2
   11a18:	andeq	r2, r1, r4, asr #2
   11a1c:	andeq	r2, r1, r4, asr #2
   11a20:	andeq	r2, r1, r4, asr #2
   11a24:	andeq	r2, r1, r4, asr #2
   11a28:	andeq	r2, r1, r4, asr #2
   11a2c:	andeq	r2, r1, r4, asr #2
   11a30:	andeq	r2, r1, r4, asr #2
   11a34:	andeq	r2, r1, r4, asr #2
   11a38:	andeq	r2, r1, r4, asr #2
   11a3c:	andeq	r2, r1, r4, asr #2
   11a40:	andeq	r2, r1, r4, asr #2
   11a44:	andeq	r2, r1, r4, asr #2
   11a48:	andeq	r2, r1, ip, lsr #1
   11a4c:	andeq	r1, r1, r8, lsl #28
   11a50:	andeq	r2, r1, r4, asr #2
   11a54:	andeq	r2, r1, ip, lsr #1
   11a58:	andeq	r2, r1, r4, asr #2
   11a5c:	andeq	r2, r1, ip, lsr #1
   11a60:	andeq	r2, r1, r4, asr #2
   11a64:	andeq	r2, r1, r4, asr #2
   11a68:	andeq	r2, r1, r4, asr #2
   11a6c:	andeq	r2, r1, r4, asr #2
   11a70:	andeq	r2, r1, r4, asr #2
   11a74:	andeq	r2, r1, r4, asr #2
   11a78:	andeq	r2, r1, r4, asr #2
   11a7c:	andeq	r2, r1, r4, asr #2
   11a80:	andeq	r2, r1, r4, asr #2
   11a84:	andeq	r2, r1, r4, asr #2
   11a88:	andeq	r2, r1, r4, asr #2
   11a8c:	andeq	r2, r1, r4, asr #2
   11a90:	andeq	r2, r1, r4, asr #2
   11a94:	andeq	r2, r1, r4, asr #2
   11a98:	andeq	r2, r1, r4, asr #2
   11a9c:	andeq	r2, r1, r4, asr #2
   11aa0:	andeq	r2, r1, r4, asr #2
   11aa4:	andeq	r2, r1, r4, asr #2
   11aa8:	andeq	r2, r1, r4, asr #2
   11aac:	andeq	r2, r1, r4, asr #2
   11ab0:	andeq	r2, r1, r4, asr #2
   11ab4:	andeq	r2, r1, r4, asr #2
   11ab8:	andeq	r2, r1, r4, asr #2
   11abc:	andeq	r2, r1, r4, asr #2
   11ac0:	andeq	r2, r1, r4, asr #2
   11ac4:	andeq	r2, r1, r4, asr #2
   11ac8:	muleq	r1, ip, ip
   11acc:	andeq	r2, r1, ip, lsr #1
   11ad0:	muleq	r1, ip, ip
   11ad4:			; <UNDEFINED> instruction: 0x00011cbc
   11ad8:	mov	r3, #1
   11adc:	str	r3, [sp, #28]
   11ae0:	str	r3, [sp, #52]	; 0x34
   11ae4:	ldr	r3, [pc, #4000]	; 12a8c <abort@plt+0x1d54>
   11ae8:	mov	r7, #0
   11aec:	str	r3, [sp, #64]	; 0x40
   11af0:	mov	r3, #2
   11af4:	str	r3, [sp, #152]	; 0x98
   11af8:	b	117fc <abort@plt+0xac4>
   11afc:	ldr	r3, [sp, #28]
   11b00:	cmp	r3, #0
   11b04:	beq	11c60 <abort@plt+0xf28>
   11b08:	mov	r3, #1
   11b0c:	str	r3, [sp, #52]	; 0x34
   11b10:	ldr	r3, [pc, #3956]	; 12a8c <abort@plt+0x1d54>
   11b14:	mov	r7, #0
   11b18:	str	r3, [sp, #64]	; 0x40
   11b1c:	b	117fc <abort@plt+0xac4>
   11b20:	mov	r3, #1
   11b24:	str	r3, [sp, #44]	; 0x2c
   11b28:	str	r3, [sp, #52]	; 0x34
   11b2c:	str	r3, [sp, #28]
   11b30:	b	11ae4 <abort@plt+0xdac>
   11b34:	mov	r3, #0
   11b38:	str	r3, [sp, #28]
   11b3c:	mov	r3, #1
   11b40:	str	r3, [sp, #44]	; 0x2c
   11b44:	mov	r7, #0
   11b48:	b	117fc <abort@plt+0xac4>
   11b4c:	ldr	r3, [sp, #152]	; 0x98
   11b50:	cmp	r3, #10
   11b54:	beq	11b98 <abort@plt+0xe60>
   11b58:	mov	r2, #5
   11b5c:	ldr	r1, [pc, #3884]	; 12a90 <abort@plt+0x1d58>
   11b60:	mov	r0, #0
   11b64:	bl	10bb8 <dcgettext@plt>
   11b68:	ldr	r2, [pc, #3872]	; 12a90 <abort@plt+0x1d58>
   11b6c:	cmp	r0, r2
   11b70:	str	r0, [sp, #164]	; 0xa4
   11b74:	beq	12b7c <abort@plt+0x1e44>
   11b78:	mov	r2, #5
   11b7c:	ldr	r1, [pc, #3848]	; 12a8c <abort@plt+0x1d54>
   11b80:	mov	r0, #0
   11b84:	bl	10bb8 <dcgettext@plt>
   11b88:	ldr	r2, [pc, #3836]	; 12a8c <abort@plt+0x1d54>
   11b8c:	cmp	r0, r2
   11b90:	str	r0, [sp, #168]	; 0xa8
   11b94:	beq	12b6c <abort@plt+0x1e34>
   11b98:	ldr	r7, [sp, #28]
   11b9c:	cmp	r7, #0
   11ba0:	movne	r7, #0
   11ba4:	bne	11bd8 <abort@plt+0xea0>
   11ba8:	ldr	r3, [sp, #164]	; 0xa4
   11bac:	ldrb	r3, [r3]
   11bb0:	cmp	r3, #0
   11bb4:	beq	12b8c <abort@plt+0x1e54>
   11bb8:	ldr	r2, [sp, #164]	; 0xa4
   11bbc:	ldr	r1, [sp, #32]
   11bc0:	cmp	fp, r7
   11bc4:	strbhi	r3, [r1, r7]
   11bc8:	ldrb	r3, [r2, #1]!
   11bcc:	add	r7, r7, #1
   11bd0:	cmp	r3, #0
   11bd4:	bne	11bc0 <abort@plt+0xe88>
   11bd8:	ldr	r0, [sp, #168]	; 0xa8
   11bdc:	bl	10c84 <strlen@plt>
   11be0:	ldr	r3, [sp, #168]	; 0xa8
   11be4:	str	r3, [sp, #64]	; 0x40
   11be8:	mov	r3, #1
   11bec:	str	r3, [sp, #44]	; 0x2c
   11bf0:	str	r0, [sp, #52]	; 0x34
   11bf4:	b	117fc <abort@plt+0xac4>
   11bf8:	mov	r3, #1
   11bfc:	str	r3, [sp, #44]	; 0x2c
   11c00:	str	r3, [sp, #52]	; 0x34
   11c04:	str	r3, [sp, #28]
   11c08:	ldr	r3, [pc, #3716]	; 12a94 <abort@plt+0x1d5c>
   11c0c:	mov	r7, #0
   11c10:	str	r3, [sp, #64]	; 0x40
   11c14:	mov	r3, #5
   11c18:	str	r3, [sp, #152]	; 0x98
   11c1c:	b	117fc <abort@plt+0xac4>
   11c20:	ldr	r3, [sp, #28]
   11c24:	cmp	r3, #0
   11c28:	beq	12928 <abort@plt+0x1bf0>
   11c2c:	ldr	r3, [sp, #28]
   11c30:	mov	r7, #0
   11c34:	str	r3, [sp, #44]	; 0x2c
   11c38:	mov	r3, #1
   11c3c:	str	r3, [sp, #52]	; 0x34
   11c40:	ldr	r3, [pc, #3660]	; 12a94 <abort@plt+0x1d5c>
   11c44:	str	r3, [sp, #64]	; 0x40
   11c48:	b	117fc <abort@plt+0xac4>
   11c4c:	ldr	r3, [sp, #28]
   11c50:	cmp	r3, #0
   11c54:	mov	r3, #1
   11c58:	streq	r3, [sp, #44]	; 0x2c
   11c5c:	bne	11ae0 <abort@plt+0xda8>
   11c60:	cmp	fp, #0
   11c64:	beq	12958 <abort@plt+0x1c20>
   11c68:	ldr	r3, [sp, #32]
   11c6c:	mov	r2, #39	; 0x27
   11c70:	mov	r7, #1
   11c74:	strb	r2, [r3]
   11c78:	mov	r3, #0
   11c7c:	str	r3, [sp, #28]
   11c80:	mov	r3, #1
   11c84:	str	r3, [sp, #52]	; 0x34
   11c88:	ldr	r3, [pc, #3580]	; 12a8c <abort@plt+0x1d54>
   11c8c:	str	r3, [sp, #64]	; 0x40
   11c90:	mov	r3, #2
   11c94:	str	r3, [sp, #152]	; 0x98
   11c98:	b	117fc <abort@plt+0xac4>
   11c9c:	ldr	r3, [sp, #24]
   11ca0:	cmn	r3, #1
   11ca4:	beq	128bc <abort@plt+0x1b84>
   11ca8:	ldr	r3, [sp, #24]
   11cac:	subs	r3, r3, #1
   11cb0:	movne	r3, #1
   11cb4:	cmp	r3, #0
   11cb8:	bne	11cc4 <abort@plt+0xf8c>
   11cbc:	cmp	sl, #0
   11cc0:	beq	120b0 <abort@plt+0x1378>
   11cc4:	ldr	r3, [sp, #152]	; 0x98
   11cc8:	mov	r5, #0
   11ccc:	sub	r2, r3, #2
   11cd0:	mov	r8, r5
   11cd4:	clz	r2, r2
   11cd8:	lsr	r2, r2, #5
   11cdc:	ldr	r3, [sp, #60]	; 0x3c
   11ce0:	ldr	r1, [sp, #28]
   11ce4:	orr	r3, r2, r3
   11ce8:	eor	r3, r3, #1
   11cec:	orr	r3, r1, r3
   11cf0:	tst	r3, #255	; 0xff
   11cf4:	bne	12420 <abort@plt+0x16e8>
   11cf8:	cmp	r6, #0
   11cfc:	bne	11e4c <abort@plt+0x1114>
   11d00:	ldr	r3, [sp, #40]	; 0x28
   11d04:	eor	r8, r8, #1
   11d08:	and	r8, r8, r3
   11d0c:	add	sl, sl, #1
   11d10:	uxtb	r6, r8
   11d14:	cmp	r6, #0
   11d18:	beq	11d4c <abort@plt+0x1014>
   11d1c:	cmp	fp, r7
   11d20:	movhi	r2, #39	; 0x27
   11d24:	ldrhi	r3, [sp, #32]
   11d28:	strbhi	r2, [r3, r7]
   11d2c:	add	r3, r7, #1
   11d30:	cmp	fp, r3
   11d34:	movhi	r1, #39	; 0x27
   11d38:	ldrhi	r2, [sp, #32]
   11d3c:	add	r7, r7, #2
   11d40:	strbhi	r1, [r2, r3]
   11d44:	mov	r3, #0
   11d48:	str	r3, [sp, #40]	; 0x28
   11d4c:	cmp	r7, fp
   11d50:	ldrcc	r3, [sp, #32]
   11d54:	strbcc	r4, [r3, r7]
   11d58:	ldr	r3, [sp, #36]	; 0x24
   11d5c:	cmp	r5, #0
   11d60:	moveq	r3, #0
   11d64:	str	r3, [sp, #36]	; 0x24
   11d68:	ldr	r3, [sp, #24]
   11d6c:	add	r7, r7, #1
   11d70:	cmn	r3, #1
   11d74:	bne	11818 <abort@plt+0xae0>
   11d78:	ldr	r3, [sp, #56]	; 0x38
   11d7c:	ldrb	r5, [r3, sl]
   11d80:	adds	r5, r5, #0
   11d84:	movne	r5, #1
   11d88:	cmp	r5, #0
   11d8c:	bne	1182c <abort@plt+0xaf4>
   11d90:	ldr	r3, [sp, #152]	; 0x98
   11d94:	ldr	r1, [sp, #28]
   11d98:	sub	r3, r3, #2
   11d9c:	clz	r3, r3
   11da0:	lsr	r3, r3, #5
   11da4:	and	r9, r1, r3
   11da8:	cmp	r7, #0
   11dac:	movne	r2, #0
   11db0:	andeq	r2, r9, #1
   11db4:	cmp	r2, #0
   11db8:	bne	12794 <abort@plt+0x1a5c>
   11dbc:	eor	r2, r1, #1
   11dc0:	ands	r3, r3, r2
   11dc4:	beq	12c50 <abort@plt+0x1f18>
   11dc8:	ldr	r2, [sp, #68]	; 0x44
   11dcc:	cmp	r2, #0
   11dd0:	beq	12c3c <abort@plt+0x1f04>
   11dd4:	ldr	r3, [sp, #36]	; 0x24
   11dd8:	cmp	r3, #0
   11ddc:	bne	12bf4 <abort@plt+0x1ebc>
   11de0:	ldr	r2, [sp, #72]	; 0x48
   11de4:	clz	r3, fp
   11de8:	cmp	r2, #0
   11dec:	lsr	r3, r3, #5
   11df0:	moveq	r3, #0
   11df4:	cmp	r3, #0
   11df8:	beq	12b94 <abort@plt+0x1e5c>
   11dfc:	str	r3, [sp, #68]	; 0x44
   11e00:	ldr	fp, [sp, #72]	; 0x48
   11e04:	b	117b4 <abort@plt+0xa7c>
   11e08:	ldr	r3, [sp, #152]	; 0x98
   11e0c:	cmp	r3, #2
   11e10:	beq	12464 <abort@plt+0x172c>
   11e14:	ldr	r3, [sp, #44]	; 0x2c
   11e18:	ldr	r2, [sp, #28]
   11e1c:	and	r2, r3, r2
   11e20:	ands	r2, r9, r2
   11e24:	bne	12470 <abort@plt+0x1738>
   11e28:	mov	r4, #92	; 0x5c
   11e2c:	mov	r3, r4
   11e30:	ldr	r1, [sp, #44]	; 0x2c
   11e34:	cmp	r1, #0
   11e38:	moveq	r5, #0
   11e3c:	moveq	r8, r1
   11e40:	beq	11cdc <abort@plt+0xfa4>
   11e44:	mov	r4, r3
   11e48:	mov	r5, #0
   11e4c:	ldr	r3, [sp, #28]
   11e50:	cmp	r3, #0
   11e54:	bne	12458 <abort@plt+0x1720>
   11e58:	ldr	r3, [sp, #40]	; 0x28
   11e5c:	eor	r9, r3, #1
   11e60:	and	r9, r9, r2
   11e64:	ands	r9, r9, #255	; 0xff
   11e68:	beq	11eac <abort@plt+0x1174>
   11e6c:	cmp	fp, r7
   11e70:	movhi	r2, #39	; 0x27
   11e74:	ldrhi	r3, [sp, #32]
   11e78:	str	r9, [sp, #40]	; 0x28
   11e7c:	strbhi	r2, [r3, r7]
   11e80:	add	r3, r7, #1
   11e84:	cmp	fp, r3
   11e88:	movhi	r1, #36	; 0x24
   11e8c:	ldrhi	r2, [sp, #32]
   11e90:	strbhi	r1, [r2, r3]
   11e94:	add	r3, r7, #2
   11e98:	cmp	fp, r3
   11e9c:	add	r7, r7, #3
   11ea0:	ldrhi	r2, [sp, #32]
   11ea4:	movhi	r1, #39	; 0x27
   11ea8:	strbhi	r1, [r2, r3]
   11eac:	cmp	fp, r7
   11eb0:	movhi	r2, #92	; 0x5c
   11eb4:	ldrhi	r3, [sp, #32]
   11eb8:	add	sl, sl, #1
   11ebc:	strbhi	r2, [r3, r7]
   11ec0:	add	r7, r7, #1
   11ec4:	b	11d4c <abort@plt+0x1014>
   11ec8:	ldr	r3, [sp, #152]	; 0x98
   11ecc:	mov	r4, #11
   11ed0:	sub	r2, r3, #2
   11ed4:	mov	r3, #118	; 0x76
   11ed8:	clz	r2, r2
   11edc:	lsr	r2, r2, #5
   11ee0:	b	11e30 <abort@plt+0x10f8>
   11ee4:	mov	r4, #10
   11ee8:	mov	r3, #110	; 0x6e
   11eec:	ldr	r2, [sp, #152]	; 0x98
   11ef0:	ldr	r1, [sp, #28]
   11ef4:	sub	r2, r2, #2
   11ef8:	clz	r2, r2
   11efc:	lsr	r2, r2, #5
   11f00:	ands	r1, r1, r2
   11f04:	beq	11e30 <abort@plt+0x10f8>
   11f08:	ldr	sl, [sp, #32]
   11f0c:	mov	r8, fp
   11f10:	mov	r2, r1
   11f14:	mov	r3, #2
   11f18:	str	r3, [sp, #152]	; 0x98
   11f1c:	ldr	r9, [sp, #44]	; 0x2c
   11f20:	ldr	r3, [sp, #152]	; 0x98
   11f24:	and	r9, r9, r2
   11f28:	tst	r9, #255	; 0xff
   11f2c:	movne	r3, #4
   11f30:	str	r3, [sp, #152]	; 0x98
   11f34:	ldr	r3, [sp, #156]	; 0x9c
   11f38:	mov	ip, #0
   11f3c:	bic	r3, r3, #2
   11f40:	str	r3, [sp, #4]
   11f44:	ldr	r3, [sp, #168]	; 0xa8
   11f48:	ldr	r2, [sp, #56]	; 0x38
   11f4c:	str	r3, [sp, #16]
   11f50:	ldr	r3, [sp, #164]	; 0xa4
   11f54:	mov	r1, r8
   11f58:	str	r3, [sp, #12]
   11f5c:	ldr	r3, [sp, #152]	; 0x98
   11f60:	mov	r0, sl
   11f64:	str	r3, [sp]
   11f68:	str	ip, [sp, #8]
   11f6c:	ldr	r3, [sp, #24]
   11f70:	bl	11758 <abort@plt+0xa20>
   11f74:	mov	fp, r0
   11f78:	mov	r0, fp
   11f7c:	add	sp, sp, #116	; 0x74
   11f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f84:	ldr	r3, [sp, #152]	; 0x98
   11f88:	mov	r4, #8
   11f8c:	sub	r2, r3, #2
   11f90:	mov	r3, #98	; 0x62
   11f94:	clz	r2, r2
   11f98:	lsr	r2, r2, #5
   11f9c:	b	11e30 <abort@plt+0x10f8>
   11fa0:	ldr	r3, [sp, #152]	; 0x98
   11fa4:	mov	r4, #7
   11fa8:	sub	r2, r3, #2
   11fac:	mov	r3, #97	; 0x61
   11fb0:	clz	r2, r2
   11fb4:	lsr	r2, r2, #5
   11fb8:	b	11e30 <abort@plt+0x10f8>
   11fbc:	ldr	r3, [sp, #44]	; 0x2c
   11fc0:	cmp	r3, #0
   11fc4:	beq	127a8 <abort@plt+0x1a70>
   11fc8:	ldr	r3, [sp, #28]
   11fcc:	cmp	r3, #0
   11fd0:	bne	12a80 <abort@plt+0x1d48>
   11fd4:	ldr	r3, [sp, #152]	; 0x98
   11fd8:	sub	r2, r3, #2
   11fdc:	ldr	r3, [sp, #40]	; 0x28
   11fe0:	clz	r2, r2
   11fe4:	eor	r3, r3, #1
   11fe8:	lsr	r2, r2, #5
   11fec:	ands	r3, r2, r3
   11ff0:	moveq	r1, r7
   11ff4:	beq	12038 <abort@plt+0x1300>
   11ff8:	cmp	fp, r7
   11ffc:	movhi	r0, #39	; 0x27
   12000:	ldrhi	r1, [sp, #32]
   12004:	str	r3, [sp, #40]	; 0x28
   12008:	strbhi	r0, [r1, r7]
   1200c:	add	r1, r7, #1
   12010:	cmp	fp, r1
   12014:	movhi	ip, #36	; 0x24
   12018:	ldrhi	r0, [sp, #32]
   1201c:	strbhi	ip, [r0, r1]
   12020:	add	r1, r7, #2
   12024:	cmp	fp, r1
   12028:	movhi	ip, #39	; 0x27
   1202c:	ldrhi	r0, [sp, #32]
   12030:	strbhi	ip, [r0, r1]
   12034:	add	r1, r7, #3
   12038:	cmp	fp, r1
   1203c:	movhi	r0, #92	; 0x5c
   12040:	ldrhi	r3, [sp, #32]
   12044:	add	r7, r1, #1
   12048:	strbhi	r0, [r3, r1]
   1204c:	cmp	r8, #0
   12050:	beq	12994 <abort@plt+0x1c5c>
   12054:	ldr	r0, [sp, #24]
   12058:	add	r3, sl, #1
   1205c:	cmp	r3, r0
   12060:	bcs	128d0 <abort@plt+0x1b98>
   12064:	ldr	r0, [sp, #56]	; 0x38
   12068:	ldrb	r3, [r0, r3]
   1206c:	sub	r3, r3, #48	; 0x30
   12070:	cmp	r3, #9
   12074:	bhi	128d0 <abort@plt+0x1b98>
   12078:	cmp	fp, r7
   1207c:	movhi	r3, #48	; 0x30
   12080:	ldrhi	r0, [sp, #32]
   12084:	ldr	r5, [sp, #28]
   12088:	mov	r4, #48	; 0x30
   1208c:	strbhi	r3, [r0, r7]
   12090:	add	r3, r1, #2
   12094:	cmp	fp, r3
   12098:	movhi	r0, #48	; 0x30
   1209c:	ldrhi	ip, [sp, #32]
   120a0:	add	r7, r1, #3
   120a4:	strbhi	r0, [ip, r3]
   120a8:	b	11cdc <abort@plt+0xfa4>
   120ac:	mov	r5, #0
   120b0:	ldr	r3, [sp, #152]	; 0x98
   120b4:	sub	r2, r3, #2
   120b8:	ldr	r3, [sp, #28]
   120bc:	clz	r2, r2
   120c0:	lsr	r2, r2, #5
   120c4:	ands	r8, r3, r2
   120c8:	beq	11cdc <abort@plt+0xfa4>
   120cc:	mov	r3, r8
   120d0:	mov	r2, r3
   120d4:	mov	r3, #2
   120d8:	ldr	sl, [sp, #32]
   120dc:	mov	r8, fp
   120e0:	str	r3, [sp, #152]	; 0x98
   120e4:	b	11f1c <abort@plt+0x11e4>
   120e8:	ldr	r3, [sp, #152]	; 0x98
   120ec:	cmp	r3, #2
   120f0:	beq	12814 <abort@plt+0x1adc>
   120f4:	cmp	r3, #5
   120f8:	beq	127d4 <abort@plt+0x1a9c>
   120fc:	mov	r5, #0
   12100:	sub	r2, r3, #2
   12104:	mov	r8, r5
   12108:	clz	r2, r2
   1210c:	mov	r4, #63	; 0x3f
   12110:	lsr	r2, r2, #5
   12114:	b	11cdc <abort@plt+0xfa4>
   12118:	ldr	r3, [sp, #152]	; 0x98
   1211c:	cmp	r3, #2
   12120:	beq	12834 <abort@plt+0x1afc>
   12124:	mov	r2, #0
   12128:	str	r5, [sp, #68]	; 0x44
   1212c:	mov	r8, r2
   12130:	mov	r4, #39	; 0x27
   12134:	b	11cdc <abort@plt+0xfa4>
   12138:	mov	r4, #13
   1213c:	mov	r3, #114	; 0x72
   12140:	b	11eec <abort@plt+0x11b4>
   12144:	ldr	r3, [sp, #152]	; 0x98
   12148:	mov	r8, #0
   1214c:	sub	r2, r3, #2
   12150:	clz	r2, r2
   12154:	lsr	r2, r2, #5
   12158:	b	11cdc <abort@plt+0xfa4>
   1215c:	ldr	r3, [sp, #152]	; 0x98
   12160:	mov	r4, #12
   12164:	sub	r2, r3, #2
   12168:	mov	r3, #102	; 0x66
   1216c:	clz	r2, r2
   12170:	lsr	r2, r2, #5
   12174:	b	11e30 <abort@plt+0x10f8>
   12178:	mov	r5, r6
   1217c:	b	120b0 <abort@plt+0x1378>
   12180:	ldr	r3, [sp, #152]	; 0x98
   12184:	sub	r2, r3, #2
   12188:	mov	r3, #116	; 0x74
   1218c:	clz	r2, r2
   12190:	lsr	r2, r2, #5
   12194:	b	11e30 <abort@plt+0x10f8>
   12198:	ldr	r8, [sp, #76]	; 0x4c
   1219c:	cmp	r8, #1
   121a0:	bne	12650 <abort@plt+0x1918>
   121a4:	bl	10c6c <__ctype_b_loc@plt>
   121a8:	sxth	r3, r4
   121ac:	mov	ip, r8
   121b0:	lsl	r3, r3, #1
   121b4:	ldr	r2, [r0]
   121b8:	ldrh	r3, [r2, r3]
   121bc:	and	r3, r3, #16384	; 0x4000
   121c0:	cmp	r3, #0
   121c4:	movne	r5, #1
   121c8:	moveq	r5, #0
   121cc:	moveq	r3, #1
   121d0:	movne	r3, #0
   121d4:	ldr	r2, [sp, #44]	; 0x2c
   121d8:	and	r3, r3, r2
   121dc:	ands	r8, r3, #255	; 0xff
   121e0:	bne	124e4 <abort@plt+0x17ac>
   121e4:	ldr	r3, [sp, #152]	; 0x98
   121e8:	sub	r2, r3, #2
   121ec:	clz	r2, r2
   121f0:	lsr	r2, r2, #5
   121f4:	b	11cdc <abort@plt+0xfa4>
   121f8:	ldr	r3, [sp, #56]	; 0x38
   121fc:	add	r3, r3, sl
   12200:	str	r3, [sp, #48]	; 0x30
   12204:	ldr	r3, [sp, #48]	; 0x30
   12208:	mov	r6, #0
   1220c:	ldrb	r4, [r3]
   12210:	cmp	r4, #126	; 0x7e
   12214:	ldrls	pc, [pc, r4, lsl #2]
   12218:	b	12198 <abort@plt+0x1460>
   1221c:			; <UNDEFINED> instruction: 0x00011fbc
   12220:	muleq	r1, r8, r1
   12224:	muleq	r1, r8, r1
   12228:	muleq	r1, r8, r1
   1222c:	muleq	r1, r8, r1
   12230:	muleq	r1, r8, r1
   12234:	muleq	r1, r8, r1
   12238:	andeq	r1, r1, r0, lsr #31
   1223c:	andeq	r1, r1, r4, lsl #31
   12240:	andeq	r2, r1, r8, lsl r4
   12244:	andeq	r1, r1, r4, ror #29
   12248:	andeq	r1, r1, r8, asr #29
   1224c:	andeq	r2, r1, ip, asr r1
   12250:	andeq	r2, r1, r8, lsr r1
   12254:	muleq	r1, r8, r1
   12258:	muleq	r1, r8, r1
   1225c:	muleq	r1, r8, r1
   12260:	muleq	r1, r8, r1
   12264:	muleq	r1, r8, r1
   12268:	muleq	r1, r8, r1
   1226c:	muleq	r1, r8, r1
   12270:	muleq	r1, r8, r1
   12274:	muleq	r1, r8, r1
   12278:	muleq	r1, r8, r1
   1227c:	muleq	r1, r8, r1
   12280:	muleq	r1, r8, r1
   12284:	muleq	r1, r8, r1
   12288:	muleq	r1, r8, r1
   1228c:	muleq	r1, r8, r1
   12290:	muleq	r1, r8, r1
   12294:	muleq	r1, r8, r1
   12298:	muleq	r1, r8, r1
   1229c:	strheq	r2, [r1], -r0
   122a0:	andeq	r2, r1, ip, lsr #1
   122a4:	andeq	r2, r1, ip, lsr #1
   122a8:			; <UNDEFINED> instruction: 0x00011cbc
   122ac:	andeq	r2, r1, ip, lsr #1
   122b0:	andeq	r2, r1, r4, asr #2
   122b4:	andeq	r2, r1, ip, lsr #1
   122b8:	andeq	r2, r1, r8, lsl r1
   122bc:	andeq	r2, r1, ip, lsr #1
   122c0:	andeq	r2, r1, ip, lsr #1
   122c4:	andeq	r2, r1, ip, lsr #1
   122c8:	andeq	r2, r1, r4, asr #2
   122cc:	andeq	r2, r1, r4, asr #2
   122d0:	andeq	r2, r1, r4, asr #2
   122d4:	andeq	r2, r1, r4, asr #2
   122d8:	andeq	r2, r1, r4, asr #2
   122dc:	andeq	r2, r1, r4, asr #2
   122e0:	andeq	r2, r1, r4, asr #2
   122e4:	andeq	r2, r1, r4, asr #2
   122e8:	andeq	r2, r1, r4, asr #2
   122ec:	andeq	r2, r1, r4, asr #2
   122f0:	andeq	r2, r1, r4, asr #2
   122f4:	andeq	r2, r1, r4, asr #2
   122f8:	andeq	r2, r1, r4, asr #2
   122fc:	andeq	r2, r1, r4, asr #2
   12300:	andeq	r2, r1, r4, asr #2
   12304:	andeq	r2, r1, r4, asr #2
   12308:	andeq	r2, r1, ip, lsr #1
   1230c:	andeq	r2, r1, ip, lsr #1
   12310:	andeq	r2, r1, ip, lsr #1
   12314:	andeq	r2, r1, ip, lsr #1
   12318:	andeq	r2, r1, r8, ror #1
   1231c:	muleq	r1, r8, r1
   12320:	andeq	r2, r1, r4, asr #2
   12324:	andeq	r2, r1, r4, asr #2
   12328:	andeq	r2, r1, r4, asr #2
   1232c:	andeq	r2, r1, r4, asr #2
   12330:	andeq	r2, r1, r4, asr #2
   12334:	andeq	r2, r1, r4, asr #2
   12338:	andeq	r2, r1, r4, asr #2
   1233c:	andeq	r2, r1, r4, asr #2
   12340:	andeq	r2, r1, r4, asr #2
   12344:	andeq	r2, r1, r4, asr #2
   12348:	andeq	r2, r1, r4, asr #2
   1234c:	andeq	r2, r1, r4, asr #2
   12350:	andeq	r2, r1, r4, asr #2
   12354:	andeq	r2, r1, r4, asr #2
   12358:	andeq	r2, r1, r4, asr #2
   1235c:	andeq	r2, r1, r4, asr #2
   12360:	andeq	r2, r1, r4, asr #2
   12364:	andeq	r2, r1, r4, asr #2
   12368:	andeq	r2, r1, r4, asr #2
   1236c:	andeq	r2, r1, r4, asr #2
   12370:	andeq	r2, r1, r4, asr #2
   12374:	andeq	r2, r1, r4, asr #2
   12378:	andeq	r2, r1, r4, asr #2
   1237c:	andeq	r2, r1, r4, asr #2
   12380:	andeq	r2, r1, r4, asr #2
   12384:	andeq	r2, r1, r4, asr #2
   12388:	andeq	r2, r1, ip, lsr #1
   1238c:	andeq	r1, r1, r8, lsl #28
   12390:	andeq	r2, r1, r4, asr #2
   12394:	andeq	r2, r1, ip, lsr #1
   12398:	andeq	r2, r1, r4, asr #2
   1239c:	andeq	r2, r1, ip, lsr #1
   123a0:	andeq	r2, r1, r4, asr #2
   123a4:	andeq	r2, r1, r4, asr #2
   123a8:	andeq	r2, r1, r4, asr #2
   123ac:	andeq	r2, r1, r4, asr #2
   123b0:	andeq	r2, r1, r4, asr #2
   123b4:	andeq	r2, r1, r4, asr #2
   123b8:	andeq	r2, r1, r4, asr #2
   123bc:	andeq	r2, r1, r4, asr #2
   123c0:	andeq	r2, r1, r4, asr #2
   123c4:	andeq	r2, r1, r4, asr #2
   123c8:	andeq	r2, r1, r4, asr #2
   123cc:	andeq	r2, r1, r4, asr #2
   123d0:	andeq	r2, r1, r4, asr #2
   123d4:	andeq	r2, r1, r4, asr #2
   123d8:	andeq	r2, r1, r4, asr #2
   123dc:	andeq	r2, r1, r4, asr #2
   123e0:	andeq	r2, r1, r4, asr #2
   123e4:	andeq	r2, r1, r4, asr #2
   123e8:	andeq	r2, r1, r4, asr #2
   123ec:	andeq	r2, r1, r4, asr #2
   123f0:	andeq	r2, r1, r4, asr #2
   123f4:	andeq	r2, r1, r4, asr #2
   123f8:	andeq	r2, r1, r4, asr #2
   123fc:	andeq	r2, r1, r4, asr #2
   12400:	andeq	r2, r1, r4, asr #2
   12404:	andeq	r2, r1, r4, asr #2
   12408:	muleq	r1, ip, ip
   1240c:	andeq	r2, r1, ip, lsr #1
   12410:	muleq	r1, ip, ip
   12414:			; <UNDEFINED> instruction: 0x00011cbc
   12418:	mov	r3, #116	; 0x74
   1241c:	b	11eec <abort@plt+0x11b4>
   12420:	ldr	r3, [sp, #160]	; 0xa0
   12424:	cmp	r3, #0
   12428:	beq	11cf8 <abort@plt+0xfc0>
   1242c:	lsr	r3, r4, #5
   12430:	ldr	r0, [sp, #160]	; 0xa0
   12434:	uxtb	r3, r3
   12438:	and	r1, r4, #31
   1243c:	ldr	r0, [r0, r3, lsl #2]
   12440:	lsr	r3, r0, r1
   12444:	tst	r3, #1
   12448:	beq	11cf8 <abort@plt+0xfc0>
   1244c:	ldr	r3, [sp, #28]
   12450:	cmp	r3, #0
   12454:	beq	11e58 <abort@plt+0x1120>
   12458:	ldr	sl, [sp, #32]
   1245c:	mov	r8, fp
   12460:	b	11f1c <abort@plt+0x11e4>
   12464:	ldr	r3, [sp, #28]
   12468:	cmp	r3, #0
   1246c:	bne	129c0 <abort@plt+0x1c88>
   12470:	add	sl, sl, #1
   12474:	ldr	r6, [sp, #40]	; 0x28
   12478:	mov	r5, #0
   1247c:	mov	r4, #92	; 0x5c
   12480:	b	11d14 <abort@plt+0xfdc>
   12484:	cmp	r9, r8
   12488:	bne	126f8 <abort@plt+0x19c0>
   1248c:	ldr	r0, [sp, #100]	; 0x64
   12490:	bl	10bdc <iswprint@plt>
   12494:	add	r5, r5, r4
   12498:	cmp	r0, #0
   1249c:	add	r0, sp, #104	; 0x68
   124a0:	moveq	r6, #0
   124a4:	bl	10b88 <mbsinit@plt>
   124a8:	cmp	r0, #0
   124ac:	beq	1268c <abort@plt+0x1954>
   124b0:	mov	r2, r6
   124b4:	mov	ip, r5
   124b8:	eor	r5, r2, #1
   124bc:	ldr	r4, [sp, #80]	; 0x50
   124c0:	ldr	r6, [sp, #84]	; 0x54
   124c4:	ldr	r7, [sp, #88]	; 0x58
   124c8:	uxtb	r5, r5
   124cc:	cmp	ip, #1
   124d0:	bls	129d0 <abort@plt+0x1c98>
   124d4:	ldr	r3, [sp, #44]	; 0x2c
   124d8:	and	r8, r3, r5
   124dc:	mov	r5, r2
   124e0:	uxtb	r8, r8
   124e4:	add	r2, sl, ip
   124e8:	ldr	r0, [sp, #48]	; 0x30
   124ec:	mov	r1, #0
   124f0:	str	r5, [sp, #48]	; 0x30
   124f4:	ldr	r9, [sp, #28]
   124f8:	ldr	ip, [sp, #40]	; 0x28
   124fc:	ldr	r3, [sp, #32]
   12500:	ldr	r5, [sp, #152]	; 0x98
   12504:	b	125c0 <abort@plt+0x1888>
   12508:	cmp	r9, #0
   1250c:	bne	128e4 <abort@plt+0x1bac>
   12510:	eor	r1, ip, #1
   12514:	cmp	r5, #2
   12518:	movne	r1, #0
   1251c:	andeq	r1, r1, #1
   12520:	cmp	r1, #0
   12524:	beq	1255c <abort@plt+0x1824>
   12528:	cmp	fp, r7
   1252c:	movhi	ip, #39	; 0x27
   12530:	strbhi	ip, [r3, r7]
   12534:	add	ip, r7, #1
   12538:	cmp	fp, ip
   1253c:	movhi	lr, #36	; 0x24
   12540:	strbhi	lr, [r3, ip]
   12544:	add	ip, r7, #2
   12548:	cmp	fp, ip
   1254c:	movhi	lr, #39	; 0x27
   12550:	strbhi	lr, [r3, ip]
   12554:	add	r7, r7, #3
   12558:	mov	ip, r1
   1255c:	cmp	fp, r7
   12560:	movhi	r1, #92	; 0x5c
   12564:	strbhi	r1, [r3, r7]
   12568:	add	r1, r7, #1
   1256c:	cmp	fp, r1
   12570:	lsrhi	lr, r4, #6
   12574:	addhi	lr, lr, #48	; 0x30
   12578:	strbhi	lr, [r3, r1]
   1257c:	add	lr, r7, #2
   12580:	cmp	fp, lr
   12584:	lsrhi	r1, r4, #3
   12588:	andhi	r1, r1, #7
   1258c:	addhi	r1, r1, #48	; 0x30
   12590:	add	sl, sl, #1
   12594:	strbhi	r1, [r3, lr]
   12598:	and	r4, r4, #7
   1259c:	cmp	r2, sl
   125a0:	add	r4, r4, #48	; 0x30
   125a4:	add	r7, r7, #3
   125a8:	bls	12908 <abort@plt+0x1bd0>
   125ac:	mov	r1, r8
   125b0:	cmp	fp, r7
   125b4:	strbhi	r4, [r3, r7]
   125b8:	ldrb	r4, [r0, #1]!
   125bc:	add	r7, r7, #1
   125c0:	cmp	r8, #0
   125c4:	bne	12508 <abort@plt+0x17d0>
   125c8:	cmp	r6, #0
   125cc:	bne	1261c <abort@plt+0x18e4>
   125d0:	eor	r6, r1, #1
   125d4:	and	r6, r6, ip
   125d8:	add	sl, sl, #1
   125dc:	cmp	r2, sl
   125e0:	uxtb	r6, r6
   125e4:	bls	12644 <abort@plt+0x190c>
   125e8:	cmp	r6, #0
   125ec:	beq	125b0 <abort@plt+0x1878>
   125f0:	cmp	fp, r7
   125f4:	movhi	ip, #39	; 0x27
   125f8:	strbhi	ip, [r3, r7]
   125fc:	add	ip, r7, #1
   12600:	cmp	fp, ip
   12604:	movhi	lr, #39	; 0x27
   12608:	strbhi	lr, [r3, ip]
   1260c:	add	r7, r7, #2
   12610:	mov	r6, r8
   12614:	mov	ip, r8
   12618:	b	125b0 <abort@plt+0x1878>
   1261c:	cmp	fp, r7
   12620:	eor	r6, r1, #1
   12624:	movhi	lr, #92	; 0x5c
   12628:	and	r6, r6, ip
   1262c:	add	sl, sl, #1
   12630:	strbhi	lr, [r3, r7]
   12634:	cmp	r2, sl
   12638:	add	r7, r7, #1
   1263c:	uxtb	r6, r6
   12640:	bhi	125e8 <abort@plt+0x18b0>
   12644:	str	ip, [sp, #40]	; 0x28
   12648:	ldr	r5, [sp, #48]	; 0x30
   1264c:	b	11d14 <abort@plt+0xfdc>
   12650:	ldr	r3, [sp, #24]
   12654:	cmn	r3, #1
   12658:	mov	r3, #0
   1265c:	str	r3, [sp, #104]	; 0x68
   12660:	str	r3, [sp, #108]	; 0x6c
   12664:	beq	12984 <abort@plt+0x1c4c>
   12668:	mov	r2, r5
   1266c:	mov	r3, #0
   12670:	str	r7, [sp, #88]	; 0x58
   12674:	ldr	r7, [sp, #152]	; 0x98
   12678:	str	r5, [sp, #92]	; 0x5c
   1267c:	str	r6, [sp, #84]	; 0x54
   12680:	mov	r5, r3
   12684:	mov	r6, r2
   12688:	str	r4, [sp, #80]	; 0x50
   1268c:	ldr	r3, [sp, #56]	; 0x38
   12690:	add	r9, sl, r5
   12694:	add	r8, r3, r9
   12698:	ldr	r3, [sp, #24]
   1269c:	mov	r1, r8
   126a0:	sub	r2, r3, r9
   126a4:	add	r0, sp, #100	; 0x64
   126a8:	add	r3, sp, #104	; 0x68
   126ac:	bl	142f8 <abort@plt+0x35c0>
   126b0:	subs	r4, r0, #0
   126b4:	beq	12a5c <abort@plt+0x1d24>
   126b8:	cmn	r4, #1
   126bc:	beq	12a3c <abort@plt+0x1d04>
   126c0:	cmn	r4, #2
   126c4:	beq	129dc <abort@plt+0x1ca4>
   126c8:	ldr	r2, [sp, #28]
   126cc:	cmp	r7, #2
   126d0:	movne	r2, #0
   126d4:	andeq	r2, r2, #1
   126d8:	cmp	r2, #0
   126dc:	beq	1248c <abort@plt+0x1754>
   126e0:	cmp	r4, #1
   126e4:	beq	1248c <abort@plt+0x1754>
   126e8:	sub	r3, r4, #1
   126ec:	add	r9, r3, r9
   126f0:	ldr	r3, [sp, #56]	; 0x38
   126f4:	add	r9, r3, r9
   126f8:	ldrb	r3, [r8, #1]!
   126fc:	sub	r3, r3, #91	; 0x5b
   12700:	cmp	r3, #33	; 0x21
   12704:	ldrls	pc, [pc, r3, lsl #2]
   12708:	b	12484 <abort@plt+0x174c>
   1270c:	muleq	r1, r4, r7
   12710:	muleq	r1, r4, r7
   12714:	andeq	r2, r1, r4, lsl #9
   12718:	muleq	r1, r4, r7
   1271c:	andeq	r2, r1, r4, lsl #9
   12720:	muleq	r1, r4, r7
   12724:	andeq	r2, r1, r4, lsl #9
   12728:	andeq	r2, r1, r4, lsl #9
   1272c:	andeq	r2, r1, r4, lsl #9
   12730:	andeq	r2, r1, r4, lsl #9
   12734:	andeq	r2, r1, r4, lsl #9
   12738:	andeq	r2, r1, r4, lsl #9
   1273c:	andeq	r2, r1, r4, lsl #9
   12740:	andeq	r2, r1, r4, lsl #9
   12744:	andeq	r2, r1, r4, lsl #9
   12748:	andeq	r2, r1, r4, lsl #9
   1274c:	andeq	r2, r1, r4, lsl #9
   12750:	andeq	r2, r1, r4, lsl #9
   12754:	andeq	r2, r1, r4, lsl #9
   12758:	andeq	r2, r1, r4, lsl #9
   1275c:	andeq	r2, r1, r4, lsl #9
   12760:	andeq	r2, r1, r4, lsl #9
   12764:	andeq	r2, r1, r4, lsl #9
   12768:	andeq	r2, r1, r4, lsl #9
   1276c:	andeq	r2, r1, r4, lsl #9
   12770:	andeq	r2, r1, r4, lsl #9
   12774:	andeq	r2, r1, r4, lsl #9
   12778:	andeq	r2, r1, r4, lsl #9
   1277c:	andeq	r2, r1, r4, lsl #9
   12780:	andeq	r2, r1, r4, lsl #9
   12784:	andeq	r2, r1, r4, lsl #9
   12788:	andeq	r2, r1, r4, lsl #9
   1278c:	andeq	r2, r1, r4, lsl #9
   12790:	muleq	r1, r4, r7
   12794:	mov	r3, #2
   12798:	ldr	sl, [sp, #32]
   1279c:	mov	r8, fp
   127a0:	str	r3, [sp, #152]	; 0x98
   127a4:	b	11f1c <abort@plt+0x11e4>
   127a8:	ldr	r3, [sp, #156]	; 0x9c
   127ac:	tst	r3, #1
   127b0:	bne	128dc <abort@plt+0x1ba4>
   127b4:	ldr	r3, [sp, #152]	; 0x98
   127b8:	ldr	r4, [sp, #44]	; 0x2c
   127bc:	sub	r2, r3, #2
   127c0:	mov	r5, #0
   127c4:	clz	r2, r2
   127c8:	mov	r8, r4
   127cc:	lsr	r2, r2, #5
   127d0:	b	11cdc <abort@plt+0xfa4>
   127d4:	ldr	r3, [sp, #156]	; 0x9c
   127d8:	ands	r9, r3, #4
   127dc:	beq	12914 <abort@plt+0x1bdc>
   127e0:	ldr	r2, [sp, #24]
   127e4:	add	r3, sl, #2
   127e8:	cmp	r3, r2
   127ec:	bcs	12800 <abort@plt+0x1ac8>
   127f0:	ldr	r2, [sp, #48]	; 0x30
   127f4:	ldrb	r4, [r2, #1]
   127f8:	cmp	r4, #63	; 0x3f
   127fc:	beq	12a9c <abort@plt+0x1d64>
   12800:	mov	r2, #0
   12804:	mov	r8, r2
   12808:	mov	r5, r2
   1280c:	mov	r4, #63	; 0x3f
   12810:	b	11cdc <abort@plt+0xfa4>
   12814:	ldr	r3, [sp, #28]
   12818:	cmp	r3, #0
   1281c:	bne	12b40 <abort@plt+0x1e08>
   12820:	mov	r2, r5
   12824:	mov	r8, r3
   12828:	mov	r5, #0
   1282c:	mov	r4, #63	; 0x3f
   12830:	b	11cdc <abort@plt+0xfa4>
   12834:	ldr	r3, [sp, #28]
   12838:	cmp	r3, #0
   1283c:	bne	12b40 <abort@plt+0x1e08>
   12840:	ldr	r2, [sp, #72]	; 0x48
   12844:	adds	r3, fp, #0
   12848:	movne	r3, #1
   1284c:	cmp	r2, #0
   12850:	movne	r3, #0
   12854:	cmp	r3, #0
   12858:	strne	fp, [sp, #72]	; 0x48
   1285c:	movne	fp, #0
   12860:	bne	1289c <abort@plt+0x1b64>
   12864:	cmp	fp, r7
   12868:	movhi	r2, #39	; 0x27
   1286c:	ldrhi	r3, [sp, #32]
   12870:	strbhi	r2, [r3, r7]
   12874:	add	r3, r7, #1
   12878:	cmp	fp, r3
   1287c:	movhi	r1, #92	; 0x5c
   12880:	ldrhi	r2, [sp, #32]
   12884:	strbhi	r1, [r2, r3]
   12888:	add	r3, r7, #2
   1288c:	cmp	fp, r3
   12890:	movhi	r1, #39	; 0x27
   12894:	ldrhi	r2, [sp, #32]
   12898:	strbhi	r1, [r2, r3]
   1289c:	ldr	r3, [sp, #28]
   128a0:	add	r7, r7, #3
   128a4:	mov	r2, r5
   128a8:	mov	r8, r3
   128ac:	str	r5, [sp, #68]	; 0x44
   128b0:	str	r3, [sp, #40]	; 0x28
   128b4:	mov	r4, #39	; 0x27
   128b8:	b	11cdc <abort@plt+0xfa4>
   128bc:	ldr	r3, [sp, #56]	; 0x38
   128c0:	ldrb	r3, [r3, #1]
   128c4:	adds	r3, r3, #0
   128c8:	movne	r3, #1
   128cc:	b	11cb4 <abort@plt+0xf7c>
   128d0:	ldr	r5, [sp, #28]
   128d4:	mov	r4, #48	; 0x30
   128d8:	b	11cdc <abort@plt+0xfa4>
   128dc:	add	sl, sl, #1
   128e0:	b	1180c <abort@plt+0xad4>
   128e4:	mov	sl, r3
   128e8:	ldr	r3, [sp, #28]
   128ec:	mov	r8, fp
   128f0:	str	r3, [sp, #44]	; 0x2c
   128f4:	ldr	r3, [sp, #152]	; 0x98
   128f8:	sub	r2, r3, #2
   128fc:	clz	r2, r2
   12900:	lsr	r2, r2, #5
   12904:	b	11f1c <abort@plt+0x11e4>
   12908:	str	ip, [sp, #40]	; 0x28
   1290c:	ldr	r5, [sp, #48]	; 0x30
   12910:	b	11d4c <abort@plt+0x1014>
   12914:	mov	r2, r9
   12918:	mov	r8, r9
   1291c:	mov	r5, #0
   12920:	mov	r4, #63	; 0x3f
   12924:	b	11cdc <abort@plt+0xfa4>
   12928:	cmp	fp, #0
   1292c:	beq	129a4 <abort@plt+0x1c6c>
   12930:	ldr	r1, [sp, #32]
   12934:	mov	r3, #34	; 0x22
   12938:	mov	r2, #1
   1293c:	strb	r3, [r1]
   12940:	ldr	r3, [pc, #332]	; 12a94 <abort@plt+0x1d5c>
   12944:	str	r2, [sp, #52]	; 0x34
   12948:	mov	r7, r2
   1294c:	str	r2, [sp, #44]	; 0x2c
   12950:	str	r3, [sp, #64]	; 0x40
   12954:	b	117fc <abort@plt+0xac4>
   12958:	ldr	r3, [pc, #300]	; 12a8c <abort@plt+0x1d54>
   1295c:	str	r3, [sp, #64]	; 0x40
   12960:	mov	r3, #0
   12964:	str	r3, [sp, #28]
   12968:	mov	r3, #1
   1296c:	str	r3, [sp, #52]	; 0x34
   12970:	mov	r7, r3
   12974:	mov	r3, #2
   12978:	str	r3, [sp, #152]	; 0x98
   1297c:	b	117fc <abort@plt+0xac4>
   12980:	bl	10d38 <abort@plt>
   12984:	ldr	r0, [sp, #56]	; 0x38
   12988:	bl	10c84 <strlen@plt>
   1298c:	str	r0, [sp, #24]
   12990:	b	12668 <abort@plt+0x1930>
   12994:	mov	r5, r8
   12998:	mov	r4, #48	; 0x30
   1299c:	ldr	r8, [sp, #44]	; 0x2c
   129a0:	b	11cdc <abort@plt+0xfa4>
   129a4:	mov	r3, #1
   129a8:	str	r3, [sp, #52]	; 0x34
   129ac:	mov	r7, r3
   129b0:	str	r3, [sp, #44]	; 0x2c
   129b4:	ldr	r3, [pc, #216]	; 12a94 <abort@plt+0x1d5c>
   129b8:	str	r3, [sp, #64]	; 0x40
   129bc:	b	117fc <abort@plt+0xac4>
   129c0:	ldr	sl, [sp, #32]
   129c4:	mov	r8, fp
   129c8:	mov	r2, r3
   129cc:	b	11f1c <abort@plt+0x11e4>
   129d0:	mov	r3, r5
   129d4:	mov	r5, r2
   129d8:	b	121d4 <abort@plt+0x149c>
   129dc:	ldr	r1, [sp, #24]
   129e0:	mov	r2, r5
   129e4:	cmp	r1, r9
   129e8:	mov	ip, r5
   129ec:	ldr	r4, [sp, #80]	; 0x50
   129f0:	ldr	r5, [sp, #92]	; 0x5c
   129f4:	ldr	r6, [sp, #84]	; 0x54
   129f8:	ldr	r7, [sp, #88]	; 0x58
   129fc:	bls	12a30 <abort@plt+0x1cf8>
   12a00:	ldrb	r3, [r8]
   12a04:	cmp	r3, #0
   12a08:	bne	12a1c <abort@plt+0x1ce4>
   12a0c:	b	12a34 <abort@plt+0x1cfc>
   12a10:	ldrb	r3, [r8, #1]!
   12a14:	cmp	r3, #0
   12a18:	beq	12b34 <abort@plt+0x1dfc>
   12a1c:	add	r2, r2, #1
   12a20:	add	r3, sl, r2
   12a24:	cmp	r1, r3
   12a28:	bhi	12a10 <abort@plt+0x1cd8>
   12a2c:	mov	ip, r2
   12a30:	mov	r3, #0
   12a34:	mov	r2, r3
   12a38:	b	124cc <abort@plt+0x1794>
   12a3c:	mov	r3, #0
   12a40:	mov	ip, r5
   12a44:	ldr	r4, [sp, #80]	; 0x50
   12a48:	ldr	r5, [sp, #92]	; 0x5c
   12a4c:	ldr	r6, [sp, #84]	; 0x54
   12a50:	ldr	r7, [sp, #88]	; 0x58
   12a54:	mov	r2, r3
   12a58:	b	124cc <abort@plt+0x1794>
   12a5c:	mov	r3, r6
   12a60:	mov	ip, r5
   12a64:	eor	r5, r3, #1
   12a68:	mov	r2, r6
   12a6c:	ldr	r4, [sp, #80]	; 0x50
   12a70:	ldr	r6, [sp, #84]	; 0x54
   12a74:	ldr	r7, [sp, #88]	; 0x58
   12a78:	uxtb	r5, r5
   12a7c:	b	124cc <abort@plt+0x1794>
   12a80:	ldr	sl, [sp, #32]
   12a84:	mov	r8, fp
   12a88:	b	128f0 <abort@plt+0x1bb8>
   12a8c:	andeq	r4, r1, r4, lsl #29
   12a90:	andeq	r4, r1, r8, lsl #29
   12a94:	andeq	r4, r1, r0, lsl #29
   12a98:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12a9c:	ldr	r2, [sp, #56]	; 0x38
   12aa0:	ldrb	r1, [r2, r3]
   12aa4:	sub	r2, r1, #33	; 0x21
   12aa8:	uxtb	r2, r2
   12aac:	cmp	r2, #29
   12ab0:	bhi	12b50 <abort@plt+0x1e18>
   12ab4:	ldr	r0, [pc, #-36]	; 12a98 <abort@plt+0x1d60>
   12ab8:	mov	ip, #1
   12abc:	ands	r2, r0, ip, lsl r2
   12ac0:	beq	12b60 <abort@plt+0x1e28>
   12ac4:	ldr	r2, [sp, #28]
   12ac8:	cmp	r2, #0
   12acc:	bne	12c60 <abort@plt+0x1f28>
   12ad0:	cmp	fp, r7
   12ad4:	ldr	r8, [sp, #28]
   12ad8:	ldrhi	r2, [sp, #32]
   12adc:	mov	sl, r3
   12ae0:	mov	r5, r8
   12ae4:	strbhi	r4, [r2, r7]
   12ae8:	add	r2, r7, #1
   12aec:	cmp	fp, r2
   12af0:	movhi	r0, #34	; 0x22
   12af4:	ldrhi	ip, [sp, #32]
   12af8:	mov	r4, r1
   12afc:	strbhi	r0, [ip, r2]
   12b00:	add	r2, r7, #2
   12b04:	cmp	fp, r2
   12b08:	movhi	r0, #34	; 0x22
   12b0c:	ldrhi	ip, [sp, #32]
   12b10:	strbhi	r0, [ip, r2]
   12b14:	add	r2, r7, #3
   12b18:	cmp	fp, r2
   12b1c:	movhi	r0, #63	; 0x3f
   12b20:	ldrhi	ip, [sp, #32]
   12b24:	add	r7, r7, #4
   12b28:	strbhi	r0, [ip, r2]
   12b2c:	mov	r2, r8
   12b30:	b	11cdc <abort@plt+0xfa4>
   12b34:	mov	ip, r2
   12b38:	mov	r2, r3
   12b3c:	b	124cc <abort@plt+0x1794>
   12b40:	ldr	sl, [sp, #32]
   12b44:	mov	r8, fp
   12b48:	ldr	r2, [sp, #28]
   12b4c:	b	11f1c <abort@plt+0x11e4>
   12b50:	mov	r2, #0
   12b54:	mov	r8, r2
   12b58:	mov	r5, r2
   12b5c:	b	11cdc <abort@plt+0xfa4>
   12b60:	mov	r8, r2
   12b64:	mov	r5, #0
   12b68:	b	11cdc <abort@plt+0xfa4>
   12b6c:	ldr	r1, [sp, #152]	; 0x98
   12b70:	bl	11638 <abort@plt+0x900>
   12b74:	str	r0, [sp, #168]	; 0xa8
   12b78:	b	11b98 <abort@plt+0xe60>
   12b7c:	ldr	r1, [sp, #152]	; 0x98
   12b80:	bl	11638 <abort@plt+0x900>
   12b84:	str	r0, [sp, #164]	; 0xa4
   12b88:	b	11b78 <abort@plt+0xe40>
   12b8c:	ldr	r7, [sp, #28]
   12b90:	b	11bd8 <abort@plt+0xea0>
   12b94:	ldr	sl, [sp, #32]
   12b98:	ldr	r2, [sp, #68]	; 0x44
   12b9c:	mov	r8, fp
   12ba0:	mov	fp, r7
   12ba4:	ldr	r3, [sp, #64]	; 0x40
   12ba8:	cmp	r3, #0
   12bac:	moveq	r2, #0
   12bb0:	andne	r2, r2, #1
   12bb4:	cmp	r2, #0
   12bb8:	beq	12be4 <abort@plt+0x1eac>
   12bbc:	mov	r2, r3
   12bc0:	ldrb	r3, [r3]
   12bc4:	cmp	r3, #0
   12bc8:	beq	12be4 <abort@plt+0x1eac>
   12bcc:	cmp	r8, fp
   12bd0:	strbhi	r3, [sl, fp]
   12bd4:	ldrb	r3, [r2, #1]!
   12bd8:	add	fp, fp, #1
   12bdc:	cmp	r3, #0
   12be0:	bne	12bcc <abort@plt+0x1e94>
   12be4:	cmp	r8, fp
   12be8:	movhi	r3, #0
   12bec:	strbhi	r3, [sl, fp]
   12bf0:	b	11f78 <abort@plt+0x1240>
   12bf4:	ldr	r3, [sp, #168]	; 0xa8
   12bf8:	ldr	sl, [sp, #32]
   12bfc:	str	r3, [sp, #16]
   12c00:	ldr	r3, [sp, #164]	; 0xa4
   12c04:	mov	ip, #5
   12c08:	str	r3, [sp, #12]
   12c0c:	ldr	r3, [sp, #160]	; 0xa0
   12c10:	ldr	r2, [sp, #56]	; 0x38
   12c14:	str	r3, [sp, #8]
   12c18:	ldr	r3, [sp, #156]	; 0x9c
   12c1c:	ldr	r1, [sp, #72]	; 0x48
   12c20:	str	r3, [sp, #4]
   12c24:	mov	r0, sl
   12c28:	ldr	r3, [sp, #24]
   12c2c:	str	ip, [sp]
   12c30:	bl	11758 <abort@plt+0xa20>
   12c34:	mov	fp, r0
   12c38:	b	11f78 <abort@plt+0x1240>
   12c3c:	mov	r8, fp
   12c40:	ldr	sl, [sp, #32]
   12c44:	mov	fp, r7
   12c48:	mov	r2, r3
   12c4c:	b	12ba4 <abort@plt+0x1e6c>
   12c50:	mov	r8, fp
   12c54:	ldr	sl, [sp, #32]
   12c58:	mov	fp, r7
   12c5c:	b	12ba4 <abort@plt+0x1e6c>
   12c60:	ldr	sl, [sp, #32]
   12c64:	mov	r8, fp
   12c68:	b	11f34 <abort@plt+0x11fc>
   12c6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c70:	sub	sp, sp, #52	; 0x34
   12c74:	mov	r4, r0
   12c78:	mov	r5, r3
   12c7c:	mov	sl, r1
   12c80:	mov	fp, r2
   12c84:	bl	10c90 <__errno_location@plt>
   12c88:	ldr	r7, [pc, #412]	; 12e2c <abort@plt+0x20f4>
   12c8c:	cmn	r4, #-2147483647	; 0x80000001
   12c90:	ldr	r6, [r7]
   12c94:	mov	r8, r0
   12c98:	movne	r0, #0
   12c9c:	moveq	r0, #1
   12ca0:	ldr	r3, [r8]
   12ca4:	orrs	r0, r0, r4, lsr #31
   12ca8:	str	r3, [sp, #24]
   12cac:	bne	12e28 <abort@plt+0x20f0>
   12cb0:	ldr	r2, [r7, #4]
   12cb4:	cmp	r4, r2
   12cb8:	blt	12d18 <abort@plt+0x1fe0>
   12cbc:	add	r9, r7, #8
   12cc0:	cmp	r6, r9
   12cc4:	str	r2, [sp, #44]	; 0x2c
   12cc8:	beq	12df8 <abort@plt+0x20c0>
   12ccc:	mov	r3, #8
   12cd0:	sub	r2, r4, r2
   12cd4:	mov	r0, r6
   12cd8:	str	r3, [sp]
   12cdc:	add	r2, r2, #1
   12ce0:	mvn	r3, #-2147483648	; 0x80000000
   12ce4:	add	r1, sp, #44	; 0x2c
   12ce8:	bl	13ad8 <abort@plt+0x2da0>
   12cec:	mov	r6, r0
   12cf0:	str	r0, [r7]
   12cf4:	ldr	r0, [r7, #4]
   12cf8:	ldr	r2, [sp, #44]	; 0x2c
   12cfc:	mov	r1, #0
   12d00:	sub	r2, r2, r0
   12d04:	add	r0, r6, r0, lsl #3
   12d08:	lsl	r2, r2, #3
   12d0c:	bl	10ca8 <memset@plt>
   12d10:	ldr	r3, [sp, #44]	; 0x2c
   12d14:	str	r3, [r7, #4]
   12d18:	add	r3, r6, r4, lsl #3
   12d1c:	ldr	r1, [r5, #4]
   12d20:	ldr	r7, [r3, #4]
   12d24:	ldr	r9, [r6, r4, lsl #3]
   12d28:	ldr	r2, [r5, #40]	; 0x28
   12d2c:	ldr	ip, [r5, #44]	; 0x2c
   12d30:	add	r0, r5, #8
   12d34:	str	r3, [sp, #28]
   12d38:	ldr	r3, [r5]
   12d3c:	orr	r1, r1, #1
   12d40:	mov	lr, r0
   12d44:	str	r1, [sp, #32]
   12d48:	str	r0, [sp, #36]	; 0x24
   12d4c:	str	r1, [sp, #4]
   12d50:	str	r2, [sp, #12]
   12d54:	str	r3, [sp]
   12d58:	mov	r0, r7
   12d5c:	mov	r1, r9
   12d60:	str	ip, [sp, #16]
   12d64:	str	lr, [sp, #8]
   12d68:	mov	r3, fp
   12d6c:	mov	r2, sl
   12d70:	bl	11758 <abort@plt+0xa20>
   12d74:	cmp	r9, r0
   12d78:	bhi	12de4 <abort@plt+0x20ac>
   12d7c:	ldr	r3, [pc, #172]	; 12e30 <abort@plt+0x20f8>
   12d80:	add	r9, r0, #1
   12d84:	cmp	r7, r3
   12d88:	str	r9, [r6, r4, lsl #3]
   12d8c:	beq	12d98 <abort@plt+0x2060>
   12d90:	mov	r0, r7
   12d94:	bl	141cc <abort@plt+0x3494>
   12d98:	mov	r0, r9
   12d9c:	bl	13974 <abort@plt+0x2c3c>
   12da0:	ldr	lr, [sp, #28]
   12da4:	ldr	ip, [r5, #44]	; 0x2c
   12da8:	ldr	r4, [r5, #40]	; 0x28
   12dac:	mov	r3, fp
   12db0:	mov	r2, sl
   12db4:	mov	r1, r9
   12db8:	str	r0, [lr, #4]
   12dbc:	ldr	lr, [r5]
   12dc0:	ldr	r5, [sp, #36]	; 0x24
   12dc4:	str	ip, [sp, #16]
   12dc8:	str	r5, [sp, #8]
   12dcc:	ldr	r5, [sp, #32]
   12dd0:	str	r4, [sp, #12]
   12dd4:	str	r5, [sp, #4]
   12dd8:	str	lr, [sp]
   12ddc:	mov	r7, r0
   12de0:	bl	11758 <abort@plt+0xa20>
   12de4:	ldr	r3, [sp, #24]
   12de8:	mov	r0, r7
   12dec:	str	r3, [r8]
   12df0:	add	sp, sp, #52	; 0x34
   12df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12df8:	mov	r3, #8
   12dfc:	sub	r2, r4, r2
   12e00:	str	r3, [sp]
   12e04:	add	r1, sp, #44	; 0x2c
   12e08:	add	r2, r2, #1
   12e0c:	mvn	r3, #-2147483648	; 0x80000000
   12e10:	bl	13ad8 <abort@plt+0x2da0>
   12e14:	mov	r6, r0
   12e18:	ldm	r9, {r0, r1}
   12e1c:	str	r6, [r7]
   12e20:	stm	r6, {r0, r1}
   12e24:	b	12cf4 <abort@plt+0x1fbc>
   12e28:	bl	10d38 <abort@plt>
   12e2c:	ldrdeq	r6, [r2], -r4
   12e30:	andeq	r6, r2, r0, asr #2
   12e34:	push	{r4, r5, r6, lr}
   12e38:	mov	r5, r0
   12e3c:	bl	10c90 <__errno_location@plt>
   12e40:	cmp	r5, #0
   12e44:	mov	r1, #48	; 0x30
   12e48:	mov	r4, r0
   12e4c:	ldr	r0, [pc, #16]	; 12e64 <abort@plt+0x212c>
   12e50:	ldr	r6, [r4]
   12e54:	movne	r0, r5
   12e58:	bl	13dd4 <abort@plt+0x309c>
   12e5c:	str	r6, [r4]
   12e60:	pop	{r4, r5, r6, pc}
   12e64:	andeq	r6, r2, r0, asr #4
   12e68:	ldr	r3, [pc, #12]	; 12e7c <abort@plt+0x2144>
   12e6c:	cmp	r0, #0
   12e70:	moveq	r0, r3
   12e74:	ldr	r0, [r0]
   12e78:	bx	lr
   12e7c:	andeq	r6, r2, r0, asr #4
   12e80:	ldr	r3, [pc, #12]	; 12e94 <abort@plt+0x215c>
   12e84:	cmp	r0, #0
   12e88:	moveq	r0, r3
   12e8c:	str	r1, [r0]
   12e90:	bx	lr
   12e94:	andeq	r6, r2, r0, asr #4
   12e98:	ldr	r3, [pc, #52]	; 12ed4 <abort@plt+0x219c>
   12e9c:	cmp	r0, #0
   12ea0:	moveq	r0, r3
   12ea4:	add	r3, r0, #8
   12ea8:	push	{lr}		; (str lr, [sp, #-4]!)
   12eac:	lsr	lr, r1, #5
   12eb0:	and	r1, r1, #31
   12eb4:	ldr	ip, [r3, lr, lsl #2]
   12eb8:	lsr	r0, ip, r1
   12ebc:	eor	r2, r2, r0
   12ec0:	and	r2, r2, #1
   12ec4:	and	r0, r0, #1
   12ec8:	eor	r1, ip, r2, lsl r1
   12ecc:	str	r1, [r3, lr, lsl #2]
   12ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ed4:	andeq	r6, r2, r0, asr #4
   12ed8:	ldr	r3, [pc, #16]	; 12ef0 <abort@plt+0x21b8>
   12edc:	cmp	r0, #0
   12ee0:	movne	r3, r0
   12ee4:	ldr	r0, [r3, #4]
   12ee8:	str	r1, [r3, #4]
   12eec:	bx	lr
   12ef0:	andeq	r6, r2, r0, asr #4
   12ef4:	ldr	r3, [pc, #44]	; 12f28 <abort@plt+0x21f0>
   12ef8:	cmp	r0, #0
   12efc:	moveq	r0, r3
   12f00:	mov	ip, #10
   12f04:	cmp	r2, #0
   12f08:	cmpne	r1, #0
   12f0c:	str	ip, [r0]
   12f10:	beq	12f20 <abort@plt+0x21e8>
   12f14:	str	r1, [r0, #40]	; 0x28
   12f18:	str	r2, [r0, #44]	; 0x2c
   12f1c:	bx	lr
   12f20:	push	{r4, lr}
   12f24:	bl	10d38 <abort@plt>
   12f28:	andeq	r6, r2, r0, asr #4
   12f2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f30:	sub	sp, sp, #24
   12f34:	ldr	ip, [pc, #108]	; 12fa8 <abort@plt+0x2270>
   12f38:	ldr	r4, [sp, #56]	; 0x38
   12f3c:	mov	r9, r2
   12f40:	cmp	r4, #0
   12f44:	moveq	r4, ip
   12f48:	mov	sl, r3
   12f4c:	mov	r7, r0
   12f50:	mov	r8, r1
   12f54:	bl	10c90 <__errno_location@plt>
   12f58:	ldr	r3, [r4, #44]	; 0x2c
   12f5c:	mov	r1, r8
   12f60:	ldr	r6, [r0]
   12f64:	str	r3, [sp, #16]
   12f68:	ldr	r2, [r4, #40]	; 0x28
   12f6c:	add	r3, r4, #8
   12f70:	str	r3, [sp, #8]
   12f74:	str	r2, [sp, #12]
   12f78:	ldr	r2, [r4, #4]
   12f7c:	mov	r5, r0
   12f80:	str	r2, [sp, #4]
   12f84:	ldr	ip, [r4]
   12f88:	mov	r3, sl
   12f8c:	mov	r2, r9
   12f90:	mov	r0, r7
   12f94:	str	ip, [sp]
   12f98:	bl	11758 <abort@plt+0xa20>
   12f9c:	str	r6, [r5]
   12fa0:	add	sp, sp, #24
   12fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fa8:	andeq	r6, r2, r0, asr #4
   12fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fb0:	cmp	r3, #0
   12fb4:	sub	sp, sp, #44	; 0x2c
   12fb8:	ldr	r4, [pc, #192]	; 13080 <abort@plt+0x2348>
   12fbc:	mov	r6, r2
   12fc0:	movne	r4, r3
   12fc4:	mov	r9, r1
   12fc8:	mov	r8, r0
   12fcc:	bl	10c90 <__errno_location@plt>
   12fd0:	ldr	r3, [r4, #44]	; 0x2c
   12fd4:	ldr	r5, [r4, #4]
   12fd8:	add	sl, r4, #8
   12fdc:	cmp	r6, #0
   12fe0:	orreq	r5, r5, #1
   12fe4:	mov	r1, #0
   12fe8:	ldr	r2, [r0]
   12fec:	str	r3, [sp, #16]
   12ff0:	ldr	r3, [r4, #40]	; 0x28
   12ff4:	stmib	sp, {r5, sl}
   12ff8:	str	r3, [sp, #12]
   12ffc:	ldr	r3, [r4]
   13000:	mov	r7, r0
   13004:	str	r2, [sp, #28]
   13008:	str	r3, [sp]
   1300c:	mov	r2, r8
   13010:	mov	r3, r9
   13014:	mov	r0, r1
   13018:	bl	11758 <abort@plt+0xa20>
   1301c:	add	r1, r0, #1
   13020:	mov	fp, r0
   13024:	mov	r0, r1
   13028:	str	r1, [sp, #36]	; 0x24
   1302c:	bl	13974 <abort@plt+0x2c3c>
   13030:	ldr	r3, [r4, #44]	; 0x2c
   13034:	mov	r2, r8
   13038:	str	r3, [sp, #16]
   1303c:	ldr	r3, [r4, #40]	; 0x28
   13040:	str	r5, [sp, #4]
   13044:	str	r3, [sp, #12]
   13048:	str	sl, [sp, #8]
   1304c:	ldr	ip, [r4]
   13050:	ldr	r1, [sp, #36]	; 0x24
   13054:	mov	r3, r9
   13058:	str	ip, [sp]
   1305c:	str	r0, [sp, #32]
   13060:	bl	11758 <abort@plt+0xa20>
   13064:	ldr	r2, [sp, #28]
   13068:	cmp	r6, #0
   1306c:	str	r2, [r7]
   13070:	ldr	r0, [sp, #32]
   13074:	strne	fp, [r6]
   13078:	add	sp, sp, #44	; 0x2c
   1307c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13080:	andeq	r6, r2, r0, asr #4
   13084:	mov	r3, r2
   13088:	mov	r2, #0
   1308c:	b	12fac <abort@plt+0x2274>
   13090:	push	{r4, r5, r6, r7, r8, lr}
   13094:	ldr	r6, [pc, #116]	; 13110 <abort@plt+0x23d8>
   13098:	ldr	r3, [r6, #4]
   1309c:	ldr	r7, [r6]
   130a0:	cmp	r3, #1
   130a4:	movgt	r5, r7
   130a8:	movgt	r4, #1
   130ac:	ble	130cc <abort@plt+0x2394>
   130b0:	ldr	r0, [r5, #12]
   130b4:	bl	141cc <abort@plt+0x3494>
   130b8:	ldr	r3, [r6, #4]
   130bc:	add	r4, r4, #1
   130c0:	cmp	r3, r4
   130c4:	add	r5, r5, #8
   130c8:	bgt	130b0 <abort@plt+0x2378>
   130cc:	ldr	r0, [r7, #4]
   130d0:	ldr	r4, [pc, #60]	; 13114 <abort@plt+0x23dc>
   130d4:	cmp	r0, r4
   130d8:	beq	130ec <abort@plt+0x23b4>
   130dc:	bl	141cc <abort@plt+0x3494>
   130e0:	mov	r3, #256	; 0x100
   130e4:	str	r4, [r6, #12]
   130e8:	str	r3, [r6, #8]
   130ec:	ldr	r4, [pc, #36]	; 13118 <abort@plt+0x23e0>
   130f0:	cmp	r7, r4
   130f4:	beq	13104 <abort@plt+0x23cc>
   130f8:	mov	r0, r7
   130fc:	bl	141cc <abort@plt+0x3494>
   13100:	str	r4, [r6]
   13104:	mov	r3, #1
   13108:	str	r3, [r6, #4]
   1310c:	pop	{r4, r5, r6, r7, r8, pc}
   13110:	ldrdeq	r6, [r2], -r4
   13114:	andeq	r6, r2, r0, asr #2
   13118:	ldrdeq	r6, [r2], -ip
   1311c:	ldr	r3, [pc, #4]	; 13128 <abort@plt+0x23f0>
   13120:	mvn	r2, #0
   13124:	b	12c6c <abort@plt+0x1f34>
   13128:	andeq	r6, r2, r0, asr #4
   1312c:	ldr	r3, [pc]	; 13134 <abort@plt+0x23fc>
   13130:	b	12c6c <abort@plt+0x1f34>
   13134:	andeq	r6, r2, r0, asr #4
   13138:	mov	r1, r0
   1313c:	ldr	r3, [pc, #8]	; 1314c <abort@plt+0x2414>
   13140:	mvn	r2, #0
   13144:	mov	r0, #0
   13148:	b	12c6c <abort@plt+0x1f34>
   1314c:	andeq	r6, r2, r0, asr #4
   13150:	mov	r2, r1
   13154:	ldr	r3, [pc, #8]	; 13164 <abort@plt+0x242c>
   13158:	mov	r1, r0
   1315c:	mov	r0, #0
   13160:	b	12c6c <abort@plt+0x1f34>
   13164:	andeq	r6, r2, r0, asr #4
   13168:	push	{r4, r5, lr}
   1316c:	sub	sp, sp, #52	; 0x34
   13170:	mov	r5, r2
   13174:	mov	r4, r0
   13178:	mov	r0, sp
   1317c:	bl	11608 <abort@plt+0x8d0>
   13180:	mov	r3, sp
   13184:	mov	r1, r5
   13188:	mov	r0, r4
   1318c:	mvn	r2, #0
   13190:	bl	12c6c <abort@plt+0x1f34>
   13194:	add	sp, sp, #52	; 0x34
   13198:	pop	{r4, r5, pc}
   1319c:	push	{r4, r5, r6, lr}
   131a0:	sub	sp, sp, #48	; 0x30
   131a4:	mov	r5, r2
   131a8:	mov	r6, r3
   131ac:	mov	r4, r0
   131b0:	mov	r0, sp
   131b4:	bl	11608 <abort@plt+0x8d0>
   131b8:	mov	r3, sp
   131bc:	mov	r2, r6
   131c0:	mov	r1, r5
   131c4:	mov	r0, r4
   131c8:	bl	12c6c <abort@plt+0x1f34>
   131cc:	add	sp, sp, #48	; 0x30
   131d0:	pop	{r4, r5, r6, pc}
   131d4:	mov	r2, r1
   131d8:	mov	r1, r0
   131dc:	mov	r0, #0
   131e0:	b	13168 <abort@plt+0x2430>
   131e4:	mov	r3, r2
   131e8:	mov	r2, r1
   131ec:	mov	r1, r0
   131f0:	mov	r0, #0
   131f4:	b	1319c <abort@plt+0x2464>
   131f8:	push	{r4, r5, r6, r7, r8, lr}
   131fc:	mov	r7, r0
   13200:	ldr	lr, [pc, #100]	; 1326c <abort@plt+0x2534>
   13204:	mov	r8, r1
   13208:	mov	r4, r2
   1320c:	ldm	lr!, {r0, r1, r2, r3}
   13210:	sub	sp, sp, #48	; 0x30
   13214:	mov	ip, sp
   13218:	lsr	r5, r4, #5
   1321c:	stmia	ip!, {r0, r1, r2, r3}
   13220:	add	r6, sp, #8
   13224:	ldm	lr!, {r0, r1, r2, r3}
   13228:	and	r4, r4, #31
   1322c:	stmia	ip!, {r0, r1, r2, r3}
   13230:	ldm	lr, {r0, r1, r2, r3}
   13234:	stm	ip, {r0, r1, r2, r3}
   13238:	mov	r2, r8
   1323c:	ldr	lr, [r6, r5, lsl #2]
   13240:	mov	r1, r7
   13244:	mov	r3, sp
   13248:	lsr	ip, lr, r4
   1324c:	eor	ip, ip, #1
   13250:	and	ip, ip, #1
   13254:	mov	r0, #0
   13258:	eor	r4, lr, ip, lsl r4
   1325c:	str	r4, [r6, r5, lsl #2]
   13260:	bl	12c6c <abort@plt+0x1f34>
   13264:	add	sp, sp, #48	; 0x30
   13268:	pop	{r4, r5, r6, r7, r8, pc}
   1326c:	andeq	r6, r2, r0, asr #4
   13270:	mov	r2, r1
   13274:	mvn	r1, #0
   13278:	b	131f8 <abort@plt+0x24c0>
   1327c:	mov	r2, #58	; 0x3a
   13280:	mvn	r1, #0
   13284:	b	131f8 <abort@plt+0x24c0>
   13288:	mov	r2, #58	; 0x3a
   1328c:	b	131f8 <abort@plt+0x24c0>
   13290:	push	{r4, r5, r6, r7, lr}
   13294:	sub	sp, sp, #100	; 0x64
   13298:	mov	r6, r0
   1329c:	mov	r0, sp
   132a0:	mov	r7, r2
   132a4:	bl	11608 <abort@plt+0x8d0>
   132a8:	mov	ip, sp
   132ac:	add	lr, sp, #48	; 0x30
   132b0:	ldm	ip!, {r0, r1, r2, r3}
   132b4:	stmia	lr!, {r0, r1, r2, r3}
   132b8:	ldm	ip!, {r0, r1, r2, r3}
   132bc:	ldr	r5, [sp, #60]	; 0x3c
   132c0:	stmia	lr!, {r0, r1, r2, r3}
   132c4:	mvn	r4, r5
   132c8:	ldm	ip, {r0, r1, r2, r3}
   132cc:	and	ip, r4, #67108864	; 0x4000000
   132d0:	eor	ip, ip, r5
   132d4:	str	ip, [sp, #60]	; 0x3c
   132d8:	stm	lr, {r0, r1, r2, r3}
   132dc:	mov	r1, r7
   132e0:	mov	r0, r6
   132e4:	add	r3, sp, #48	; 0x30
   132e8:	mvn	r2, #0
   132ec:	bl	12c6c <abort@plt+0x1f34>
   132f0:	add	sp, sp, #100	; 0x64
   132f4:	pop	{r4, r5, r6, r7, pc}
   132f8:	push	{r4, r5, r6, r7, r8, lr}
   132fc:	mov	r5, r1
   13300:	ldr	lr, [pc, #100]	; 1336c <abort@plt+0x2634>
   13304:	mov	r4, r2
   13308:	mov	r7, r0
   1330c:	mov	r8, r3
   13310:	ldm	lr!, {r0, r1, r2, r3}
   13314:	sub	sp, sp, #48	; 0x30
   13318:	mov	ip, sp
   1331c:	mov	r6, #10
   13320:	stmia	ip!, {r0, r1, r2, r3}
   13324:	cmp	r4, #0
   13328:	cmpne	r5, #0
   1332c:	ldm	lr!, {r0, r1, r2, r3}
   13330:	str	r6, [sp]
   13334:	stmia	ip!, {r0, r1, r2, r3}
   13338:	ldm	lr, {r0, r1, r2, r3}
   1333c:	stm	ip, {r0, r1, r2, r3}
   13340:	beq	13368 <abort@plt+0x2630>
   13344:	mov	r3, sp
   13348:	mov	r1, r8
   1334c:	mov	r0, r7
   13350:	ldr	r2, [sp, #72]	; 0x48
   13354:	str	r5, [sp, #40]	; 0x28
   13358:	str	r4, [sp, #44]	; 0x2c
   1335c:	bl	12c6c <abort@plt+0x1f34>
   13360:	add	sp, sp, #48	; 0x30
   13364:	pop	{r4, r5, r6, r7, r8, pc}
   13368:	bl	10d38 <abort@plt>
   1336c:	andeq	r6, r2, r0, asr #4
   13370:	push	{lr}		; (str lr, [sp, #-4]!)
   13374:	sub	sp, sp, #12
   13378:	mvn	ip, #0
   1337c:	str	ip, [sp]
   13380:	bl	132f8 <abort@plt+0x25c0>
   13384:	add	sp, sp, #12
   13388:	pop	{pc}		; (ldr pc, [sp], #4)
   1338c:	push	{lr}		; (str lr, [sp, #-4]!)
   13390:	sub	sp, sp, #12
   13394:	mvn	ip, #0
   13398:	mov	r3, r2
   1339c:	str	ip, [sp]
   133a0:	mov	r2, r1
   133a4:	mov	r1, r0
   133a8:	mov	r0, #0
   133ac:	bl	132f8 <abort@plt+0x25c0>
   133b0:	add	sp, sp, #12
   133b4:	pop	{pc}		; (ldr pc, [sp], #4)
   133b8:	push	{lr}		; (str lr, [sp, #-4]!)
   133bc:	sub	sp, sp, #12
   133c0:	str	r3, [sp]
   133c4:	mov	r3, r2
   133c8:	mov	r2, r1
   133cc:	mov	r1, r0
   133d0:	mov	r0, #0
   133d4:	bl	132f8 <abort@plt+0x25c0>
   133d8:	add	sp, sp, #12
   133dc:	pop	{pc}		; (ldr pc, [sp], #4)
   133e0:	ldr	r3, [pc]	; 133e8 <abort@plt+0x26b0>
   133e4:	b	12c6c <abort@plt+0x1f34>
   133e8:	andeq	r6, r2, r4, ror #1
   133ec:	mov	r2, r1
   133f0:	ldr	r3, [pc, #8]	; 13400 <abort@plt+0x26c8>
   133f4:	mov	r1, r0
   133f8:	mov	r0, #0
   133fc:	b	12c6c <abort@plt+0x1f34>
   13400:	andeq	r6, r2, r4, ror #1
   13404:	ldr	r3, [pc, #4]	; 13410 <abort@plt+0x26d8>
   13408:	mvn	r2, #0
   1340c:	b	12c6c <abort@plt+0x1f34>
   13410:	andeq	r6, r2, r4, ror #1
   13414:	mov	r1, r0
   13418:	ldr	r3, [pc, #8]	; 13428 <abort@plt+0x26f0>
   1341c:	mvn	r2, #0
   13420:	mov	r0, #0
   13424:	b	12c6c <abort@plt+0x1f34>
   13428:	andeq	r6, r2, r4, ror #1
   1342c:	push	{r4, r5, r6, lr}
   13430:	sub	sp, sp, #32
   13434:	cmp	r1, #0
   13438:	mov	r4, r0
   1343c:	ldr	r5, [sp, #48]	; 0x30
   13440:	ldr	r6, [sp, #52]	; 0x34
   13444:	beq	1375c <abort@plt+0x2a24>
   13448:	stm	sp, {r2, r3}
   1344c:	mov	r3, r1
   13450:	ldr	r2, [pc, #808]	; 13780 <abort@plt+0x2a48>
   13454:	mov	r1, #1
   13458:	bl	10ccc <__fprintf_chk@plt>
   1345c:	mov	r2, #5
   13460:	ldr	r1, [pc, #796]	; 13784 <abort@plt+0x2a4c>
   13464:	mov	r0, #0
   13468:	bl	10bb8 <dcgettext@plt>
   1346c:	ldr	r3, [pc, #788]	; 13788 <abort@plt+0x2a50>
   13470:	ldr	r2, [pc, #788]	; 1378c <abort@plt+0x2a54>
   13474:	str	r3, [sp]
   13478:	mov	r1, #1
   1347c:	mov	r3, r0
   13480:	mov	r0, r4
   13484:	bl	10ccc <__fprintf_chk@plt>
   13488:	mov	r1, r4
   1348c:	mov	r0, #10
   13490:	bl	10bac <fputc_unlocked@plt>
   13494:	mov	r2, #5
   13498:	ldr	r1, [pc, #752]	; 13790 <abort@plt+0x2a58>
   1349c:	mov	r0, #0
   134a0:	bl	10bb8 <dcgettext@plt>
   134a4:	mov	r1, #1
   134a8:	ldr	r3, [pc, #740]	; 13794 <abort@plt+0x2a5c>
   134ac:	mov	r2, r0
   134b0:	mov	r0, r4
   134b4:	bl	10ccc <__fprintf_chk@plt>
   134b8:	mov	r1, r4
   134bc:	mov	r0, #10
   134c0:	bl	10bac <fputc_unlocked@plt>
   134c4:	cmp	r6, #9
   134c8:	ldrls	pc, [pc, r6, lsl #2]
   134cc:	b	13774 <abort@plt+0x2a3c>
   134d0:	andeq	r3, r1, r4, asr r5
   134d4:	andeq	r3, r1, ip, asr r5
   134d8:	andeq	r3, r1, r8, lsl #11
   134dc:			; <UNDEFINED> instruction: 0x000135bc
   134e0:	strdeq	r3, [r1], -r8
   134e4:	andeq	r3, r1, r4, lsr r6
   134e8:	andeq	r3, r1, r0, ror r6
   134ec:			; <UNDEFINED> instruction: 0x000136b4
   134f0:	andeq	r3, r1, r4, lsl #14
   134f4:	strdeq	r3, [r1], -r8
   134f8:	ldr	r1, [pc, #664]	; 13798 <abort@plt+0x2a60>
   134fc:	mov	r2, #5
   13500:	mov	r0, #0
   13504:	bl	10bb8 <dcgettext@plt>
   13508:	ldr	ip, [r5, #32]
   1350c:	ldr	r1, [r5, #28]
   13510:	ldr	r2, [r5, #24]
   13514:	ldr	r3, [r5]
   13518:	ldr	r6, [r5, #20]
   1351c:	str	ip, [sp, #28]
   13520:	ldr	lr, [r5, #16]
   13524:	str	r1, [sp, #24]
   13528:	ldr	ip, [r5, #12]
   1352c:	str	r2, [sp, #20]
   13530:	ldr	r1, [r5, #8]
   13534:	ldr	r2, [r5, #4]
   13538:	str	r6, [sp, #16]
   1353c:	stmib	sp, {r1, ip, lr}
   13540:	mov	r1, #1
   13544:	str	r2, [sp]
   13548:	mov	r2, r0
   1354c:	mov	r0, r4
   13550:	bl	10ccc <__fprintf_chk@plt>
   13554:	add	sp, sp, #32
   13558:	pop	{r4, r5, r6, pc}
   1355c:	mov	r2, #5
   13560:	ldr	r1, [pc, #564]	; 1379c <abort@plt+0x2a64>
   13564:	mov	r0, #0
   13568:	bl	10bb8 <dcgettext@plt>
   1356c:	ldr	r3, [r5]
   13570:	mov	r1, #1
   13574:	mov	r2, r0
   13578:	mov	r0, r4
   1357c:	add	sp, sp, #32
   13580:	pop	{r4, r5, r6, lr}
   13584:	b	10ccc <__fprintf_chk@plt>
   13588:	mov	r2, #5
   1358c:	ldr	r1, [pc, #524]	; 137a0 <abort@plt+0x2a68>
   13590:	mov	r0, #0
   13594:	bl	10bb8 <dcgettext@plt>
   13598:	ldr	r2, [r5, #4]
   1359c:	ldr	r3, [r5]
   135a0:	mov	r1, #1
   135a4:	str	r2, [sp, #48]	; 0x30
   135a8:	mov	r2, r0
   135ac:	mov	r0, r4
   135b0:	add	sp, sp, #32
   135b4:	pop	{r4, r5, r6, lr}
   135b8:	b	10ccc <__fprintf_chk@plt>
   135bc:	mov	r2, #5
   135c0:	ldr	r1, [pc, #476]	; 137a4 <abort@plt+0x2a6c>
   135c4:	mov	r0, #0
   135c8:	bl	10bb8 <dcgettext@plt>
   135cc:	ldr	r1, [r5, #8]
   135d0:	ldr	r2, [r5, #4]
   135d4:	ldr	r3, [r5]
   135d8:	str	r1, [sp, #52]	; 0x34
   135dc:	str	r2, [sp, #48]	; 0x30
   135e0:	mov	r1, #1
   135e4:	mov	r2, r0
   135e8:	mov	r0, r4
   135ec:	add	sp, sp, #32
   135f0:	pop	{r4, r5, r6, lr}
   135f4:	b	10ccc <__fprintf_chk@plt>
   135f8:	mov	r2, #5
   135fc:	ldr	r1, [pc, #420]	; 137a8 <abort@plt+0x2a70>
   13600:	mov	r0, #0
   13604:	bl	10bb8 <dcgettext@plt>
   13608:	ldr	r1, [r5, #8]
   1360c:	ldr	ip, [r5, #12]
   13610:	ldr	r2, [r5, #4]
   13614:	ldr	r3, [r5]
   13618:	stmib	sp, {r1, ip}
   1361c:	str	r2, [sp]
   13620:	mov	r1, #1
   13624:	mov	r2, r0
   13628:	mov	r0, r4
   1362c:	bl	10ccc <__fprintf_chk@plt>
   13630:	b	13554 <abort@plt+0x281c>
   13634:	mov	r2, #5
   13638:	ldr	r1, [pc, #364]	; 137ac <abort@plt+0x2a74>
   1363c:	mov	r0, #0
   13640:	bl	10bb8 <dcgettext@plt>
   13644:	add	r1, r5, #8
   13648:	ldr	r2, [r5, #4]
   1364c:	ldm	r1, {r1, ip, lr}
   13650:	ldr	r3, [r5]
   13654:	str	r2, [sp]
   13658:	stmib	sp, {r1, ip, lr}
   1365c:	mov	r1, #1
   13660:	mov	r2, r0
   13664:	mov	r0, r4
   13668:	bl	10ccc <__fprintf_chk@plt>
   1366c:	b	13554 <abort@plt+0x281c>
   13670:	mov	r2, #5
   13674:	ldr	r1, [pc, #308]	; 137b0 <abort@plt+0x2a78>
   13678:	mov	r0, #0
   1367c:	bl	10bb8 <dcgettext@plt>
   13680:	add	r1, r5, #8
   13684:	ldr	r2, [r5, #4]
   13688:	ldm	r1, {r1, ip, lr}
   1368c:	ldr	r6, [r5, #20]
   13690:	ldr	r3, [r5]
   13694:	stmib	sp, {r1, ip, lr}
   13698:	mov	r1, #1
   1369c:	str	r2, [sp]
   136a0:	str	r6, [sp, #16]
   136a4:	mov	r2, r0
   136a8:	mov	r0, r4
   136ac:	bl	10ccc <__fprintf_chk@plt>
   136b0:	b	13554 <abort@plt+0x281c>
   136b4:	mov	r2, #5
   136b8:	ldr	r1, [pc, #244]	; 137b4 <abort@plt+0x2a7c>
   136bc:	mov	r0, #0
   136c0:	bl	10bb8 <dcgettext@plt>
   136c4:	ldr	r2, [r5, #24]
   136c8:	ldr	r3, [r5]
   136cc:	ldr	r6, [r5, #20]
   136d0:	ldr	lr, [r5, #16]
   136d4:	ldr	ip, [r5, #12]
   136d8:	str	r2, [sp, #20]
   136dc:	ldr	r1, [r5, #8]
   136e0:	ldr	r2, [r5, #4]
   136e4:	str	r6, [sp, #16]
   136e8:	stmib	sp, {r1, ip, lr}
   136ec:	mov	r1, #1
   136f0:	str	r2, [sp]
   136f4:	mov	r2, r0
   136f8:	mov	r0, r4
   136fc:	bl	10ccc <__fprintf_chk@plt>
   13700:	b	13554 <abort@plt+0x281c>
   13704:	mov	r2, #5
   13708:	ldr	r1, [pc, #168]	; 137b8 <abort@plt+0x2a80>
   1370c:	mov	r0, #0
   13710:	bl	10bb8 <dcgettext@plt>
   13714:	ldr	r1, [r5, #28]
   13718:	ldr	r2, [r5, #24]
   1371c:	ldr	r3, [r5]
   13720:	ldr	r6, [r5, #20]
   13724:	ldr	lr, [r5, #16]
   13728:	str	r1, [sp, #24]
   1372c:	ldr	ip, [r5, #12]
   13730:	str	r2, [sp, #20]
   13734:	ldr	r1, [r5, #8]
   13738:	ldr	r2, [r5, #4]
   1373c:	str	r6, [sp, #16]
   13740:	stmib	sp, {r1, ip, lr}
   13744:	mov	r1, #1
   13748:	str	r2, [sp]
   1374c:	mov	r2, r0
   13750:	mov	r0, r4
   13754:	bl	10ccc <__fprintf_chk@plt>
   13758:	b	13554 <abort@plt+0x281c>
   1375c:	str	r3, [sp]
   13760:	mov	r1, #1
   13764:	mov	r3, r2
   13768:	ldr	r2, [pc, #76]	; 137bc <abort@plt+0x2a84>
   1376c:	bl	10ccc <__fprintf_chk@plt>
   13770:	b	1345c <abort@plt+0x2724>
   13774:	mov	r2, #5
   13778:	ldr	r1, [pc, #64]	; 137c0 <abort@plt+0x2a88>
   1377c:	b	13500 <abort@plt+0x27c8>
   13780:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13784:	andeq	r4, r1, r8, lsl #30
   13788:	andeq	r0, r0, r6, ror #15
   1378c:	andeq	r5, r1, r0, ror #3
   13790:	andeq	r4, r1, ip, lsl #30
   13794:			; <UNDEFINED> instruction: 0x00014fb8
   13798:	andeq	r5, r1, r8, ror #1
   1379c:	ldrdeq	r4, [r1], -ip
   137a0:	andeq	r4, r1, ip, ror #31
   137a4:	andeq	r5, r1, r4
   137a8:	andeq	r5, r1, r0, lsr #32
   137ac:	andeq	r5, r1, r0, asr #32
   137b0:	andeq	r5, r1, r4, rrx
   137b4:	andeq	r5, r1, ip, lsl #1
   137b8:	strheq	r5, [r1], -r8
   137bc:	andeq	r4, r1, r0, lsl #30
   137c0:	andeq	r5, r1, ip, lsl r1
   137c4:	push	{r4, r5, lr}
   137c8:	sub	sp, sp, #12
   137cc:	ldr	r5, [sp, #24]
   137d0:	ldr	ip, [r5]
   137d4:	cmp	ip, #0
   137d8:	beq	137f4 <abort@plt+0x2abc>
   137dc:	mov	lr, r5
   137e0:	mov	ip, #0
   137e4:	ldr	r4, [lr, #4]!
   137e8:	add	ip, ip, #1
   137ec:	cmp	r4, #0
   137f0:	bne	137e4 <abort@plt+0x2aac>
   137f4:	stm	sp, {r5, ip}
   137f8:	bl	1342c <abort@plt+0x26f4>
   137fc:	add	sp, sp, #12
   13800:	pop	{r4, r5, pc}
   13804:	push	{r4, r5, lr}
   13808:	sub	sp, sp, #52	; 0x34
   1380c:	add	r5, sp, #4
   13810:	ldr	r4, [sp, #64]	; 0x40
   13814:	mov	ip, #0
   13818:	sub	r4, r4, #4
   1381c:	ldr	lr, [r4, #4]!
   13820:	cmp	lr, #0
   13824:	str	lr, [r5, #4]!
   13828:	beq	13838 <abort@plt+0x2b00>
   1382c:	add	ip, ip, #1
   13830:	cmp	ip, #10
   13834:	bne	1381c <abort@plt+0x2ae4>
   13838:	add	lr, sp, #8
   1383c:	str	ip, [sp, #4]
   13840:	str	lr, [sp]
   13844:	bl	1342c <abort@plt+0x26f4>
   13848:	add	sp, sp, #52	; 0x34
   1384c:	pop	{r4, r5, pc}
   13850:	push	{r3}		; (str r3, [sp, #-4]!)
   13854:	push	{r4, lr}
   13858:	sub	sp, sp, #60	; 0x3c
   1385c:	add	lr, sp, #56	; 0x38
   13860:	add	r3, sp, #72	; 0x48
   13864:	str	r3, [lr, #-44]!	; 0xffffffd4
   13868:	add	r4, sp, #68	; 0x44
   1386c:	mov	r3, #0
   13870:	ldr	ip, [r4, #4]!
   13874:	cmp	ip, #0
   13878:	str	ip, [lr, #4]!
   1387c:	beq	1388c <abort@plt+0x2b54>
   13880:	add	r3, r3, #1
   13884:	cmp	r3, #10
   13888:	bne	13870 <abort@plt+0x2b38>
   1388c:	add	ip, sp, #16
   13890:	str	r3, [sp, #4]
   13894:	str	ip, [sp]
   13898:	ldr	r3, [sp, #68]	; 0x44
   1389c:	bl	1342c <abort@plt+0x26f4>
   138a0:	add	sp, sp, #60	; 0x3c
   138a4:	pop	{r4, lr}
   138a8:	add	sp, sp, #4
   138ac:	bx	lr
   138b0:	ldr	r3, [pc, #116]	; 1392c <abort@plt+0x2bf4>
   138b4:	push	{r4, lr}
   138b8:	mov	r0, #10
   138bc:	ldr	r1, [r3]
   138c0:	bl	10bac <fputc_unlocked@plt>
   138c4:	mov	r2, #5
   138c8:	ldr	r1, [pc, #96]	; 13930 <abort@plt+0x2bf8>
   138cc:	mov	r0, #0
   138d0:	bl	10bb8 <dcgettext@plt>
   138d4:	ldr	r2, [pc, #88]	; 13934 <abort@plt+0x2bfc>
   138d8:	mov	r1, r0
   138dc:	mov	r0, #1
   138e0:	bl	10cb4 <__printf_chk@plt>
   138e4:	mov	r2, #5
   138e8:	ldr	r1, [pc, #72]	; 13938 <abort@plt+0x2c00>
   138ec:	mov	r0, #0
   138f0:	bl	10bb8 <dcgettext@plt>
   138f4:	ldr	r3, [pc, #64]	; 1393c <abort@plt+0x2c04>
   138f8:	ldr	r2, [pc, #64]	; 13940 <abort@plt+0x2c08>
   138fc:	mov	r1, r0
   13900:	mov	r0, #1
   13904:	bl	10cb4 <__printf_chk@plt>
   13908:	mov	r2, #5
   1390c:	ldr	r1, [pc, #48]	; 13944 <abort@plt+0x2c0c>
   13910:	mov	r0, #0
   13914:	bl	10bb8 <dcgettext@plt>
   13918:	ldr	r2, [pc, #40]	; 13948 <abort@plt+0x2c10>
   1391c:	pop	{r4, lr}
   13920:	mov	r1, r0
   13924:	mov	r0, #1
   13928:	b	10cb4 <__printf_chk@plt>
   1392c:	andeq	r6, r2, ip, lsr #2
   13930:	andeq	r5, r1, r8, asr r1
   13934:	andeq	r5, r1, ip, ror #2
   13938:	andeq	r5, r1, r4, lsl #3
   1393c:	andeq	r4, r1, r0, lsl ip
   13940:	andeq	r4, r1, r8, lsr ip
   13944:	muleq	r1, r8, r1
   13948:	andeq	r5, r1, r0, asr #3
   1394c:	push	{r4, lr}
   13950:	bl	13f1c <abort@plt+0x31e4>
   13954:	cmp	r0, #0
   13958:	popne	{r4, pc}
   1395c:	bl	13e94 <abort@plt+0x315c>
   13960:	push	{r4, lr}
   13964:	bl	13f1c <abort@plt+0x31e4>
   13968:	cmp	r0, #0
   1396c:	popne	{r4, pc}
   13970:	bl	13e94 <abort@plt+0x315c>
   13974:	push	{r4, lr}
   13978:	bl	13f1c <abort@plt+0x31e4>
   1397c:	cmp	r0, #0
   13980:	popne	{r4, pc}
   13984:	bl	13e94 <abort@plt+0x315c>
   13988:	push	{r4, r5, r6, lr}
   1398c:	mov	r5, r0
   13990:	mov	r4, r1
   13994:	bl	13f48 <abort@plt+0x3210>
   13998:	cmp	r0, #0
   1399c:	popne	{r4, r5, r6, pc}
   139a0:	adds	r4, r4, #0
   139a4:	movne	r4, #1
   139a8:	cmp	r5, #0
   139ac:	orreq	r4, r4, #1
   139b0:	cmp	r4, #0
   139b4:	popeq	{r4, r5, r6, pc}
   139b8:	bl	13e94 <abort@plt+0x315c>
   139bc:	push	{r4, lr}
   139c0:	cmp	r1, #0
   139c4:	orreq	r1, r1, #1
   139c8:	bl	13f48 <abort@plt+0x3210>
   139cc:	cmp	r0, #0
   139d0:	popne	{r4, pc}
   139d4:	bl	13e94 <abort@plt+0x315c>
   139d8:	push	{r4, r5, r6, lr}
   139dc:	mov	r6, r0
   139e0:	mov	r5, r1
   139e4:	mov	r4, r2
   139e8:	bl	1434c <abort@plt+0x3614>
   139ec:	cmp	r0, #0
   139f0:	popne	{r4, r5, r6, pc}
   139f4:	cmp	r6, #0
   139f8:	beq	13a08 <abort@plt+0x2cd0>
   139fc:	cmp	r5, #0
   13a00:	cmpne	r4, #0
   13a04:	popeq	{r4, r5, r6, pc}
   13a08:	bl	13e94 <abort@plt+0x315c>
   13a0c:	b	139d8 <abort@plt+0x2ca0>
   13a10:	cmp	r2, #0
   13a14:	cmpne	r1, #0
   13a18:	moveq	r2, #1
   13a1c:	moveq	r1, r2
   13a20:	push	{r4, lr}
   13a24:	bl	1434c <abort@plt+0x3614>
   13a28:	cmp	r0, #0
   13a2c:	popne	{r4, pc}
   13a30:	bl	13e94 <abort@plt+0x315c>
   13a34:	mov	r2, r1
   13a38:	mov	r1, r0
   13a3c:	mov	r0, #0
   13a40:	b	139d8 <abort@plt+0x2ca0>
   13a44:	mov	r2, r1
   13a48:	mov	r1, r0
   13a4c:	mov	r0, #0
   13a50:	b	13a10 <abort@plt+0x2cd8>
   13a54:	push	{r4, r5, r6, lr}
   13a58:	subs	r6, r0, #0
   13a5c:	sub	sp, sp, #8
   13a60:	mov	r5, r1
   13a64:	ldr	r4, [r1]
   13a68:	beq	13aa4 <abort@plt+0x2d6c>
   13a6c:	lsr	r1, r4, #1
   13a70:	add	r3, r1, #1
   13a74:	mvn	r3, r3
   13a78:	cmp	r4, r3
   13a7c:	bhi	13aa0 <abort@plt+0x2d68>
   13a80:	add	r4, r4, #1
   13a84:	add	r4, r4, r1
   13a88:	mov	r0, r6
   13a8c:	mov	r1, r4
   13a90:	bl	139d8 <abort@plt+0x2ca0>
   13a94:	str	r4, [r5]
   13a98:	add	sp, sp, #8
   13a9c:	pop	{r4, r5, r6, pc}
   13aa0:	bl	13e94 <abort@plt+0x315c>
   13aa4:	cmp	r4, #0
   13aa8:	bne	13a88 <abort@plt+0x2d50>
   13aac:	mov	r1, r2
   13ab0:	mov	r0, #64	; 0x40
   13ab4:	str	r2, [sp, #4]
   13ab8:	bl	1448c <abort@plt+0x3754>
   13abc:	ldr	r2, [sp, #4]
   13ac0:	cmp	r0, #0
   13ac4:	movne	r4, r0
   13ac8:	addeq	r4, r0, #1
   13acc:	b	13a88 <abort@plt+0x2d50>
   13ad0:	mov	r2, #1
   13ad4:	b	13a54 <abort@plt+0x2d1c>
   13ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13adc:	sub	sp, sp, #12
   13ae0:	ldr	r6, [r1]
   13ae4:	mov	sl, r1
   13ae8:	mov	r9, r0
   13aec:	asrs	r4, r6, #1
   13af0:	mov	r5, r2
   13af4:	mov	fp, r3
   13af8:	ldr	r7, [sp, #48]	; 0x30
   13afc:	bmi	13c68 <abort@plt+0x2f30>
   13b00:	mvn	r3, #-2147483648	; 0x80000000
   13b04:	sub	r3, r3, r4
   13b08:	cmp	r6, r3
   13b0c:	movle	r3, #0
   13b10:	movgt	r3, #1
   13b14:	mvn	r8, fp
   13b18:	cmp	r3, #0
   13b1c:	addeq	r4, r4, r6
   13b20:	mvnne	r4, #-2147483648	; 0x80000000
   13b24:	lsr	r8, r8, #31
   13b28:	cmp	fp, r4
   13b2c:	movge	r3, #0
   13b30:	andlt	r3, r8, #1
   13b34:	cmp	r3, #0
   13b38:	beq	13c20 <abort@plt+0x2ee8>
   13b3c:	cmp	r7, #0
   13b40:	blt	13cf0 <abort@plt+0x2fb8>
   13b44:	bne	13ce8 <abort@plt+0x2fb0>
   13b48:	mov	r2, #64	; 0x40
   13b4c:	mov	r1, r7
   13b50:	mov	r0, r2
   13b54:	str	r2, [sp, #4]
   13b58:	bl	14698 <abort@plt+0x3960>
   13b5c:	ldr	r2, [sp, #4]
   13b60:	mov	r1, r7
   13b64:	mov	r4, r0
   13b68:	mov	r0, r2
   13b6c:	bl	148b8 <abort@plt+0x3b80>
   13b70:	ldr	r2, [sp, #4]
   13b74:	sub	r1, r2, r1
   13b78:	cmp	r9, #0
   13b7c:	sub	r3, r4, r6
   13b80:	streq	r9, [sl]
   13b84:	cmp	r3, r5
   13b88:	bge	13c0c <abort@plt+0x2ed4>
   13b8c:	cmp	r5, #0
   13b90:	blt	13c7c <abort@plt+0x2f44>
   13b94:	cmp	r6, #0
   13b98:	blt	13bb8 <abort@plt+0x2e80>
   13b9c:	mvn	r3, #-2147483648	; 0x80000000
   13ba0:	sub	r3, r3, r5
   13ba4:	cmp	r6, r3
   13ba8:	movle	r3, #0
   13bac:	movgt	r3, #1
   13bb0:	cmp	r3, #0
   13bb4:	bne	13d78 <abort@plt+0x3040>
   13bb8:	add	r5, r6, r5
   13bbc:	cmp	fp, r5
   13bc0:	movge	r8, #0
   13bc4:	andlt	r8, r8, #1
   13bc8:	cmp	r8, #0
   13bcc:	mov	r4, r5
   13bd0:	bne	13d78 <abort@plt+0x3040>
   13bd4:	cmp	r7, #0
   13bd8:	blt	13c90 <abort@plt+0x2f58>
   13bdc:	beq	13c08 <abort@plt+0x2ed0>
   13be0:	cmp	r5, #0
   13be4:	blt	13d38 <abort@plt+0x3000>
   13be8:	mov	r1, r7
   13bec:	mvn	r0, #-2147483648	; 0x80000000
   13bf0:	bl	14698 <abort@plt+0x3960>
   13bf4:	cmp	r5, r0
   13bf8:	movle	r0, #0
   13bfc:	movgt	r0, #1
   13c00:	cmp	r0, #0
   13c04:	bne	13d78 <abort@plt+0x3040>
   13c08:	mul	r1, r5, r7
   13c0c:	mov	r0, r9
   13c10:	bl	13988 <abort@plt+0x2c50>
   13c14:	str	r4, [sl]
   13c18:	add	sp, sp, #12
   13c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c20:	cmp	r7, #0
   13c24:	blt	13cbc <abort@plt+0x2f84>
   13c28:	beq	13b48 <abort@plt+0x2e10>
   13c2c:	cmp	r4, #0
   13c30:	blt	13cf8 <abort@plt+0x2fc0>
   13c34:	mov	r1, r7
   13c38:	mvn	r0, #-2147483648	; 0x80000000
   13c3c:	bl	14698 <abort@plt+0x3960>
   13c40:	cmp	r0, r4
   13c44:	movge	r0, #0
   13c48:	movlt	r0, #1
   13c4c:	cmp	r0, #0
   13c50:	mvnne	r2, #-2147483648	; 0x80000000
   13c54:	bne	13b4c <abort@plt+0x2e14>
   13c58:	mul	r1, r7, r4
   13c5c:	cmp	r1, #63	; 0x3f
   13c60:	bgt	13b78 <abort@plt+0x2e40>
   13c64:	b	13b48 <abort@plt+0x2e10>
   13c68:	rsb	r3, r4, #-2147483648	; 0x80000000
   13c6c:	cmp	r6, r3
   13c70:	movge	r3, #0
   13c74:	movlt	r3, #1
   13c78:	b	13b14 <abort@plt+0x2ddc>
   13c7c:	rsb	r3, r5, #-2147483648	; 0x80000000
   13c80:	cmp	r6, r3
   13c84:	movge	r3, #0
   13c88:	movlt	r3, #1
   13c8c:	b	13bb0 <abort@plt+0x2e78>
   13c90:	cmp	r5, #0
   13c94:	blt	13d1c <abort@plt+0x2fe4>
   13c98:	cmn	r7, #1
   13c9c:	beq	13c08 <abort@plt+0x2ed0>
   13ca0:	mov	r1, r7
   13ca4:	mov	r0, #-2147483648	; 0x80000000
   13ca8:	bl	14698 <abort@plt+0x3960>
   13cac:	cmp	r5, r0
   13cb0:	movle	r0, #0
   13cb4:	movgt	r0, #1
   13cb8:	b	13c00 <abort@plt+0x2ec8>
   13cbc:	cmp	r4, #0
   13cc0:	blt	13d5c <abort@plt+0x3024>
   13cc4:	cmn	r7, #1
   13cc8:	beq	13c58 <abort@plt+0x2f20>
   13ccc:	mov	r1, r7
   13cd0:	mov	r0, #-2147483648	; 0x80000000
   13cd4:	bl	14698 <abort@plt+0x3960>
   13cd8:	cmp	r0, r4
   13cdc:	movge	r0, #0
   13ce0:	movlt	r0, #1
   13ce4:	b	13c4c <abort@plt+0x2f14>
   13ce8:	mov	r4, fp
   13cec:	b	13c34 <abort@plt+0x2efc>
   13cf0:	mov	r4, fp
   13cf4:	b	13cc4 <abort@plt+0x2f8c>
   13cf8:	cmn	r4, #1
   13cfc:	beq	13c58 <abort@plt+0x2f20>
   13d00:	mov	r1, r4
   13d04:	mov	r0, #-2147483648	; 0x80000000
   13d08:	bl	14698 <abort@plt+0x3960>
   13d0c:	cmp	r7, r0
   13d10:	movle	r0, #0
   13d14:	movgt	r0, #1
   13d18:	b	13c4c <abort@plt+0x2f14>
   13d1c:	mov	r1, r7
   13d20:	mvn	r0, #-2147483648	; 0x80000000
   13d24:	bl	14698 <abort@plt+0x3960>
   13d28:	cmp	r5, r0
   13d2c:	movge	r0, #0
   13d30:	movlt	r0, #1
   13d34:	b	13c00 <abort@plt+0x2ec8>
   13d38:	cmn	r5, #1
   13d3c:	beq	13c08 <abort@plt+0x2ed0>
   13d40:	mov	r1, r5
   13d44:	mov	r0, #-2147483648	; 0x80000000
   13d48:	bl	14698 <abort@plt+0x3960>
   13d4c:	cmp	r7, r0
   13d50:	movle	r0, #0
   13d54:	movgt	r0, #1
   13d58:	b	13c00 <abort@plt+0x2ec8>
   13d5c:	mov	r1, r7
   13d60:	mvn	r0, #-2147483648	; 0x80000000
   13d64:	bl	14698 <abort@plt+0x3960>
   13d68:	cmp	r0, r4
   13d6c:	movle	r0, #0
   13d70:	movgt	r0, #1
   13d74:	b	13c4c <abort@plt+0x2f14>
   13d78:	bl	13e94 <abort@plt+0x315c>
   13d7c:	push	{r4, lr}
   13d80:	mov	r1, #1
   13d84:	bl	13ed4 <abort@plt+0x319c>
   13d88:	cmp	r0, #0
   13d8c:	popne	{r4, pc}
   13d90:	bl	13e94 <abort@plt+0x315c>
   13d94:	push	{r4, lr}
   13d98:	mov	r1, #1
   13d9c:	bl	13ed4 <abort@plt+0x319c>
   13da0:	cmp	r0, #0
   13da4:	popne	{r4, pc}
   13da8:	bl	13e94 <abort@plt+0x315c>
   13dac:	push	{r4, lr}
   13db0:	bl	13ed4 <abort@plt+0x319c>
   13db4:	cmp	r0, #0
   13db8:	popne	{r4, pc}
   13dbc:	bl	13e94 <abort@plt+0x315c>
   13dc0:	push	{r4, lr}
   13dc4:	bl	13ed4 <abort@plt+0x319c>
   13dc8:	cmp	r0, #0
   13dcc:	popne	{r4, pc}
   13dd0:	bl	13e94 <abort@plt+0x315c>
   13dd4:	push	{r4, r5, r6, lr}
   13dd8:	mov	r6, r0
   13ddc:	mov	r0, r1
   13de0:	mov	r4, r1
   13de4:	bl	13f1c <abort@plt+0x31e4>
   13de8:	subs	r5, r0, #0
   13dec:	beq	13e04 <abort@plt+0x30cc>
   13df0:	mov	r2, r4
   13df4:	mov	r1, r6
   13df8:	bl	10b7c <memcpy@plt>
   13dfc:	mov	r0, r5
   13e00:	pop	{r4, r5, r6, pc}
   13e04:	bl	13e94 <abort@plt+0x315c>
   13e08:	push	{r4, r5, r6, lr}
   13e0c:	mov	r6, r0
   13e10:	mov	r0, r1
   13e14:	mov	r4, r1
   13e18:	bl	13f1c <abort@plt+0x31e4>
   13e1c:	subs	r5, r0, #0
   13e20:	beq	13e38 <abort@plt+0x3100>
   13e24:	mov	r2, r4
   13e28:	mov	r1, r6
   13e2c:	bl	10b7c <memcpy@plt>
   13e30:	mov	r0, r5
   13e34:	pop	{r4, r5, r6, pc}
   13e38:	bl	13e94 <abort@plt+0x315c>
   13e3c:	push	{r4, r5, r6, lr}
   13e40:	mov	r6, r0
   13e44:	add	r0, r1, #1
   13e48:	mov	r4, r1
   13e4c:	bl	13f1c <abort@plt+0x31e4>
   13e50:	subs	r5, r0, #0
   13e54:	beq	13e74 <abort@plt+0x313c>
   13e58:	mov	r3, #0
   13e5c:	mov	r1, r6
   13e60:	strb	r3, [r5, r4]
   13e64:	mov	r2, r4
   13e68:	bl	10b7c <memcpy@plt>
   13e6c:	mov	r0, r5
   13e70:	pop	{r4, r5, r6, pc}
   13e74:	bl	13e94 <abort@plt+0x315c>
   13e78:	push	{r4, lr}
   13e7c:	mov	r4, r0
   13e80:	bl	10c84 <strlen@plt>
   13e84:	add	r1, r0, #1
   13e88:	mov	r0, r4
   13e8c:	pop	{r4, lr}
   13e90:	b	13dd4 <abort@plt+0x309c>
   13e94:	ldr	r3, [pc, #44]	; 13ec8 <abort@plt+0x3190>
   13e98:	push	{r4, lr}
   13e9c:	mov	r2, #5
   13ea0:	ldr	r1, [pc, #36]	; 13ecc <abort@plt+0x3194>
   13ea4:	mov	r0, #0
   13ea8:	ldr	r4, [r3]
   13eac:	bl	10bb8 <dcgettext@plt>
   13eb0:	ldr	r2, [pc, #24]	; 13ed0 <abort@plt+0x3198>
   13eb4:	mov	r1, #0
   13eb8:	mov	r3, r0
   13ebc:	mov	r0, r4
   13ec0:	bl	10c24 <error@plt>
   13ec4:	bl	10d38 <abort@plt>
   13ec8:	ldrdeq	r6, [r2], -r0
   13ecc:	andeq	r5, r1, r0, lsl r2
   13ed0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ed4:	cmp	r1, #0
   13ed8:	cmpne	r0, #0
   13edc:	moveq	r1, #1
   13ee0:	moveq	r0, r1
   13ee4:	umull	r2, r3, r0, r1
   13ee8:	adds	r3, r3, #0
   13eec:	movne	r3, #1
   13ef0:	cmp	r2, #0
   13ef4:	blt	13f04 <abort@plt+0x31cc>
   13ef8:	cmp	r3, #0
   13efc:	bne	13f04 <abort@plt+0x31cc>
   13f00:	b	10b28 <calloc@plt>
   13f04:	push	{r4, lr}
   13f08:	bl	10c90 <__errno_location@plt>
   13f0c:	mov	r3, #12
   13f10:	str	r3, [r0]
   13f14:	mov	r0, #0
   13f18:	pop	{r4, pc}
   13f1c:	cmp	r0, #0
   13f20:	moveq	r0, #1
   13f24:	cmp	r0, #0
   13f28:	blt	13f30 <abort@plt+0x31f8>
   13f2c:	b	10c30 <malloc@plt>
   13f30:	push	{r4, lr}
   13f34:	bl	10c90 <__errno_location@plt>
   13f38:	mov	r3, #12
   13f3c:	str	r3, [r0]
   13f40:	mov	r0, #0
   13f44:	pop	{r4, pc}
   13f48:	cmp	r0, #0
   13f4c:	beq	13f70 <abort@plt+0x3238>
   13f50:	cmp	r1, #0
   13f54:	push	{lr}		; (str lr, [sp, #-4]!)
   13f58:	sub	sp, sp, #12
   13f5c:	beq	13f78 <abort@plt+0x3240>
   13f60:	blt	13f90 <abort@plt+0x3258>
   13f64:	add	sp, sp, #12
   13f68:	pop	{lr}		; (ldr lr, [sp], #4)
   13f6c:	b	10bc4 <realloc@plt>
   13f70:	mov	r0, r1
   13f74:	b	13f1c <abort@plt+0x31e4>
   13f78:	str	r1, [sp, #4]
   13f7c:	bl	141cc <abort@plt+0x3494>
   13f80:	ldr	r3, [sp, #4]
   13f84:	mov	r0, r3
   13f88:	add	sp, sp, #12
   13f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f90:	bl	10c90 <__errno_location@plt>
   13f94:	mov	r2, #12
   13f98:	mov	r3, #0
   13f9c:	str	r2, [r0]
   13fa0:	b	13f84 <abort@plt+0x324c>
   13fa4:	ldrb	r3, [r0]
   13fa8:	cmp	r3, #47	; 0x2f
   13fac:	bne	13fbc <abort@plt+0x3284>
   13fb0:	ldrb	r3, [r0, #1]!
   13fb4:	cmp	r3, #47	; 0x2f
   13fb8:	beq	13fb0 <abort@plt+0x3278>
   13fbc:	cmp	r3, #0
   13fc0:	bxeq	lr
   13fc4:	mov	r2, #0
   13fc8:	push	{lr}		; (str lr, [sp, #-4]!)
   13fcc:	mov	ip, r2
   13fd0:	mov	r1, r0
   13fd4:	mov	lr, #1
   13fd8:	cmp	r3, #47	; 0x2f
   13fdc:	moveq	r2, lr
   13fe0:	beq	13ff0 <abort@plt+0x32b8>
   13fe4:	cmp	r2, #0
   13fe8:	movne	r0, r1
   13fec:	movne	r2, ip
   13ff0:	ldrb	r3, [r1, #1]!
   13ff4:	cmp	r3, #0
   13ff8:	bne	13fd8 <abort@plt+0x32a0>
   13ffc:	pop	{pc}		; (ldr pc, [sp], #4)
   14000:	push	{r4, lr}
   14004:	mov	r4, r0
   14008:	bl	10c84 <strlen@plt>
   1400c:	cmp	r0, #1
   14010:	popls	{r4, pc}
   14014:	sub	r3, r0, #1
   14018:	add	r2, r4, r3
   1401c:	ldrb	r1, [r4, r3]
   14020:	cmp	r1, #47	; 0x2f
   14024:	popne	{r4, pc}
   14028:	cmp	r3, #1
   1402c:	beq	14040 <abort@plt+0x3308>
   14030:	ldrb	r1, [r2, #-1]!
   14034:	sub	r0, r3, #1
   14038:	cmp	r1, #47	; 0x2f
   1403c:	beq	14048 <abort@plt+0x3310>
   14040:	mov	r0, r3
   14044:	pop	{r4, pc}
   14048:	mov	r3, r0
   1404c:	b	14028 <abort@plt+0x32f0>
   14050:	push	{r4, r5, r6, lr}
   14054:	mov	r4, r0
   14058:	bl	10c0c <__fpending@plt>
   1405c:	ldr	r5, [r4]
   14060:	and	r5, r5, #32
   14064:	mov	r6, r0
   14068:	mov	r0, r4
   1406c:	bl	140cc <abort@plt+0x3394>
   14070:	cmp	r5, #0
   14074:	mov	r4, r0
   14078:	bne	14098 <abort@plt+0x3360>
   1407c:	cmp	r0, #0
   14080:	beq	14090 <abort@plt+0x3358>
   14084:	cmp	r6, #0
   14088:	beq	140b4 <abort@plt+0x337c>
   1408c:	mvn	r4, #0
   14090:	mov	r0, r4
   14094:	pop	{r4, r5, r6, pc}
   14098:	cmp	r0, #0
   1409c:	bne	1408c <abort@plt+0x3354>
   140a0:	bl	10c90 <__errno_location@plt>
   140a4:	str	r4, [r0]
   140a8:	mvn	r4, #0
   140ac:	mov	r0, r4
   140b0:	pop	{r4, r5, r6, pc}
   140b4:	bl	10c90 <__errno_location@plt>
   140b8:	ldr	r4, [r0]
   140bc:	subs	r4, r4, #9
   140c0:	mvnne	r4, #0
   140c4:	mov	r0, r4
   140c8:	pop	{r4, r5, r6, pc}
   140cc:	push	{r4, r5, lr}
   140d0:	sub	sp, sp, #12
   140d4:	mov	r4, r0
   140d8:	bl	10cc0 <fileno@plt>
   140dc:	cmp	r0, #0
   140e0:	mov	r0, r4
   140e4:	blt	14160 <abort@plt+0x3428>
   140e8:	bl	10c48 <__freading@plt>
   140ec:	cmp	r0, #0
   140f0:	bne	1412c <abort@plt+0x33f4>
   140f4:	mov	r0, r4
   140f8:	bl	1416c <abort@plt+0x3434>
   140fc:	cmp	r0, #0
   14100:	beq	1415c <abort@plt+0x3424>
   14104:	bl	10c90 <__errno_location@plt>
   14108:	mov	r5, r0
   1410c:	mov	r0, r4
   14110:	ldr	r4, [r5]
   14114:	bl	10cd8 <fclose@plt>
   14118:	cmp	r4, #0
   1411c:	mvnne	r0, #0
   14120:	strne	r4, [r5]
   14124:	add	sp, sp, #12
   14128:	pop	{r4, r5, pc}
   1412c:	mov	r0, r4
   14130:	bl	10cc0 <fileno@plt>
   14134:	mov	r3, #1
   14138:	str	r3, [sp]
   1413c:	mov	r2, #0
   14140:	mov	r3, #0
   14144:	bl	10bf4 <lseek64@plt>
   14148:	mvn	r3, #0
   1414c:	mvn	r2, #0
   14150:	cmp	r1, r3
   14154:	cmpeq	r0, r2
   14158:	bne	140f4 <abort@plt+0x33bc>
   1415c:	mov	r0, r4
   14160:	add	sp, sp, #12
   14164:	pop	{r4, r5, lr}
   14168:	b	10cd8 <fclose@plt>
   1416c:	push	{r4, lr}
   14170:	subs	r4, r0, #0
   14174:	sub	sp, sp, #8
   14178:	beq	14194 <abort@plt+0x345c>
   1417c:	bl	10c48 <__freading@plt>
   14180:	cmp	r0, #0
   14184:	beq	14194 <abort@plt+0x345c>
   14188:	ldr	r3, [r4]
   1418c:	tst	r3, #256	; 0x100
   14190:	bne	141a4 <abort@plt+0x346c>
   14194:	mov	r0, r4
   14198:	add	sp, sp, #8
   1419c:	pop	{r4, lr}
   141a0:	b	10b58 <fflush@plt>
   141a4:	mov	r3, #1
   141a8:	str	r3, [sp]
   141ac:	mov	r2, #0
   141b0:	mov	r3, #0
   141b4:	mov	r0, r4
   141b8:	bl	14224 <abort@plt+0x34ec>
   141bc:	mov	r0, r4
   141c0:	add	sp, sp, #8
   141c4:	pop	{r4, lr}
   141c8:	b	10b58 <fflush@plt>
   141cc:	push	{r4, r5, lr}
   141d0:	sub	sp, sp, #12
   141d4:	mov	r5, r0
   141d8:	bl	10c90 <__errno_location@plt>
   141dc:	mov	r2, #0
   141e0:	mov	r4, r0
   141e4:	ldr	r3, [r0]
   141e8:	str	r2, [r4]
   141ec:	mov	r0, r5
   141f0:	str	r3, [sp]
   141f4:	str	r3, [sp, #4]
   141f8:	bl	10b64 <free@plt>
   141fc:	ldr	r3, [r4]
   14200:	add	r2, sp, #8
   14204:	cmp	r3, #0
   14208:	moveq	r3, #4
   1420c:	movne	r3, #0
   14210:	add	r3, r2, r3
   14214:	ldr	r3, [r3, #-8]
   14218:	str	r3, [r4]
   1421c:	add	sp, sp, #12
   14220:	pop	{r4, r5, pc}
   14224:	push	{r4, r5, r6, r7, r8, lr}
   14228:	sub	sp, sp, #8
   1422c:	ldmib	r0, {ip, lr}
   14230:	mov	r4, r0
   14234:	ldr	r5, [sp, #32]
   14238:	cmp	lr, ip
   1423c:	beq	14254 <abort@plt+0x351c>
   14240:	str	r5, [sp, #32]
   14244:	mov	r0, r4
   14248:	add	sp, sp, #8
   1424c:	pop	{r4, r5, r6, r7, r8, lr}
   14250:	b	10ce4 <fseeko64@plt>
   14254:	ldr	lr, [r0, #20]
   14258:	ldr	ip, [r0, #16]
   1425c:	cmp	lr, ip
   14260:	bne	14240 <abort@plt+0x3508>
   14264:	ldr	r8, [r0, #36]	; 0x24
   14268:	cmp	r8, #0
   1426c:	bne	14240 <abort@plt+0x3508>
   14270:	mov	r6, r2
   14274:	mov	r7, r3
   14278:	bl	10cc0 <fileno@plt>
   1427c:	mov	r2, r6
   14280:	mov	r3, r7
   14284:	str	r5, [sp]
   14288:	bl	10bf4 <lseek64@plt>
   1428c:	mvn	r3, #0
   14290:	mvn	r2, #0
   14294:	cmp	r1, r3
   14298:	cmpeq	r0, r2
   1429c:	beq	142bc <abort@plt+0x3584>
   142a0:	ldr	r3, [r4]
   142a4:	strd	r0, [r4, #80]	; 0x50
   142a8:	mov	r0, r8
   142ac:	bic	r3, r3, #16
   142b0:	str	r3, [r4]
   142b4:	add	sp, sp, #8
   142b8:	pop	{r4, r5, r6, r7, r8, pc}
   142bc:	mvn	r0, #0
   142c0:	b	142b4 <abort@plt+0x357c>
   142c4:	push	{r4, lr}
   142c8:	mov	r0, #14
   142cc:	bl	10d14 <nl_langinfo@plt>
   142d0:	cmp	r0, #0
   142d4:	beq	142ec <abort@plt+0x35b4>
   142d8:	ldrb	r2, [r0]
   142dc:	ldr	r3, [pc, #16]	; 142f4 <abort@plt+0x35bc>
   142e0:	cmp	r2, #0
   142e4:	moveq	r0, r3
   142e8:	pop	{r4, pc}
   142ec:	ldr	r0, [pc]	; 142f4 <abort@plt+0x35bc>
   142f0:	pop	{r4, pc}
   142f4:	andeq	r5, r1, r4, lsr #4
   142f8:	push	{r4, r5, r6, r7, lr}
   142fc:	subs	r6, r0, #0
   14300:	sub	sp, sp, #12
   14304:	addeq	r6, sp, #4
   14308:	mov	r0, r6
   1430c:	mov	r5, r2
   14310:	mov	r7, r1
   14314:	bl	10c18 <mbrtowc@plt>
   14318:	cmp	r5, #0
   1431c:	cmnne	r0, #3
   14320:	mov	r4, r0
   14324:	bls	14340 <abort@plt+0x3608>
   14328:	mov	r0, #0
   1432c:	bl	14398 <abort@plt+0x3660>
   14330:	cmp	r0, #0
   14334:	moveq	r4, #1
   14338:	ldrbeq	r3, [r7]
   1433c:	streq	r3, [r6]
   14340:	mov	r0, r4
   14344:	add	sp, sp, #12
   14348:	pop	{r4, r5, r6, r7, pc}
   1434c:	push	{r4, r5, r6, lr}
   14350:	subs	r4, r2, #0
   14354:	mov	r6, r0
   14358:	mov	r5, r1
   1435c:	beq	14388 <abort@plt+0x3650>
   14360:	mov	r1, r4
   14364:	mvn	r0, #0
   14368:	bl	1448c <abort@plt+0x3754>
   1436c:	cmp	r0, r5
   14370:	bcs	14388 <abort@plt+0x3650>
   14374:	bl	10c90 <__errno_location@plt>
   14378:	mov	r3, #12
   1437c:	str	r3, [r0]
   14380:	mov	r0, #0
   14384:	pop	{r4, r5, r6, pc}
   14388:	mul	r1, r5, r4
   1438c:	mov	r0, r6
   14390:	pop	{r4, r5, r6, lr}
   14394:	b	13f48 <abort@plt+0x3210>
   14398:	push	{lr}		; (str lr, [sp, #-4]!)
   1439c:	sub	sp, sp, #268	; 0x10c
   143a0:	add	r1, sp, #4
   143a4:	ldr	r2, [pc, #60]	; 143e8 <abort@plt+0x36b0>
   143a8:	bl	143f4 <abort@plt+0x36bc>
   143ac:	cmp	r0, #0
   143b0:	movne	r0, #0
   143b4:	bne	143e0 <abort@plt+0x36a8>
   143b8:	ldr	r1, [pc, #44]	; 143ec <abort@plt+0x36b4>
   143bc:	add	r0, sp, #4
   143c0:	bl	10b4c <strcmp@plt>
   143c4:	cmp	r0, #0
   143c8:	beq	143e0 <abort@plt+0x36a8>
   143cc:	add	r0, sp, #4
   143d0:	ldr	r1, [pc, #24]	; 143f0 <abort@plt+0x36b8>
   143d4:	bl	10b4c <strcmp@plt>
   143d8:	adds	r0, r0, #0
   143dc:	movne	r0, #1
   143e0:	add	sp, sp, #268	; 0x10c
   143e4:	pop	{pc}		; (ldr pc, [sp], #4)
   143e8:	andeq	r0, r0, r1, lsl #2
   143ec:	andeq	r5, r1, ip, lsr #4
   143f0:	andeq	r5, r1, r0, lsr r2
   143f4:	push	{r4, r5, r6, lr}
   143f8:	mov	r5, r1
   143fc:	mov	r1, #0
   14400:	mov	r4, r2
   14404:	bl	10cfc <setlocale@plt>
   14408:	subs	r6, r0, #0
   1440c:	beq	14468 <abort@plt+0x3730>
   14410:	bl	10c84 <strlen@plt>
   14414:	cmp	r4, r0
   14418:	bhi	14450 <abort@plt+0x3718>
   1441c:	cmp	r4, #0
   14420:	bne	1442c <abort@plt+0x36f4>
   14424:	mov	r0, #34	; 0x22
   14428:	pop	{r4, r5, r6, pc}
   1442c:	sub	r4, r4, #1
   14430:	mov	r1, r6
   14434:	mov	r2, r4
   14438:	mov	r0, r5
   1443c:	bl	10b7c <memcpy@plt>
   14440:	mov	r3, #0
   14444:	strb	r3, [r5, r4]
   14448:	mov	r0, #34	; 0x22
   1444c:	pop	{r4, r5, r6, pc}
   14450:	add	r2, r0, #1
   14454:	mov	r1, r6
   14458:	mov	r0, r5
   1445c:	bl	10b7c <memcpy@plt>
   14460:	mov	r0, #0
   14464:	pop	{r4, r5, r6, pc}
   14468:	cmp	r4, #0
   1446c:	beq	1447c <abort@plt+0x3744>
   14470:	strb	r6, [r5]
   14474:	mov	r0, #22
   14478:	pop	{r4, r5, r6, pc}
   1447c:	mov	r0, #22
   14480:	pop	{r4, r5, r6, pc}
   14484:	mov	r1, #0
   14488:	b	10cfc <setlocale@plt>
   1448c:	subs	r2, r1, #1
   14490:	bxeq	lr
   14494:	bcc	1466c <abort@plt+0x3934>
   14498:	cmp	r0, r1
   1449c:	bls	14650 <abort@plt+0x3918>
   144a0:	tst	r1, r2
   144a4:	beq	1465c <abort@plt+0x3924>
   144a8:	clz	r3, r0
   144ac:	clz	r2, r1
   144b0:	sub	r3, r2, r3
   144b4:	rsbs	r3, r3, #31
   144b8:	addne	r3, r3, r3, lsl #1
   144bc:	mov	r2, #0
   144c0:	addne	pc, pc, r3, lsl #2
   144c4:	nop			; (mov r0, r0)
   144c8:	cmp	r0, r1, lsl #31
   144cc:	adc	r2, r2, r2
   144d0:	subcs	r0, r0, r1, lsl #31
   144d4:	cmp	r0, r1, lsl #30
   144d8:	adc	r2, r2, r2
   144dc:	subcs	r0, r0, r1, lsl #30
   144e0:	cmp	r0, r1, lsl #29
   144e4:	adc	r2, r2, r2
   144e8:	subcs	r0, r0, r1, lsl #29
   144ec:	cmp	r0, r1, lsl #28
   144f0:	adc	r2, r2, r2
   144f4:	subcs	r0, r0, r1, lsl #28
   144f8:	cmp	r0, r1, lsl #27
   144fc:	adc	r2, r2, r2
   14500:	subcs	r0, r0, r1, lsl #27
   14504:	cmp	r0, r1, lsl #26
   14508:	adc	r2, r2, r2
   1450c:	subcs	r0, r0, r1, lsl #26
   14510:	cmp	r0, r1, lsl #25
   14514:	adc	r2, r2, r2
   14518:	subcs	r0, r0, r1, lsl #25
   1451c:	cmp	r0, r1, lsl #24
   14520:	adc	r2, r2, r2
   14524:	subcs	r0, r0, r1, lsl #24
   14528:	cmp	r0, r1, lsl #23
   1452c:	adc	r2, r2, r2
   14530:	subcs	r0, r0, r1, lsl #23
   14534:	cmp	r0, r1, lsl #22
   14538:	adc	r2, r2, r2
   1453c:	subcs	r0, r0, r1, lsl #22
   14540:	cmp	r0, r1, lsl #21
   14544:	adc	r2, r2, r2
   14548:	subcs	r0, r0, r1, lsl #21
   1454c:	cmp	r0, r1, lsl #20
   14550:	adc	r2, r2, r2
   14554:	subcs	r0, r0, r1, lsl #20
   14558:	cmp	r0, r1, lsl #19
   1455c:	adc	r2, r2, r2
   14560:	subcs	r0, r0, r1, lsl #19
   14564:	cmp	r0, r1, lsl #18
   14568:	adc	r2, r2, r2
   1456c:	subcs	r0, r0, r1, lsl #18
   14570:	cmp	r0, r1, lsl #17
   14574:	adc	r2, r2, r2
   14578:	subcs	r0, r0, r1, lsl #17
   1457c:	cmp	r0, r1, lsl #16
   14580:	adc	r2, r2, r2
   14584:	subcs	r0, r0, r1, lsl #16
   14588:	cmp	r0, r1, lsl #15
   1458c:	adc	r2, r2, r2
   14590:	subcs	r0, r0, r1, lsl #15
   14594:	cmp	r0, r1, lsl #14
   14598:	adc	r2, r2, r2
   1459c:	subcs	r0, r0, r1, lsl #14
   145a0:	cmp	r0, r1, lsl #13
   145a4:	adc	r2, r2, r2
   145a8:	subcs	r0, r0, r1, lsl #13
   145ac:	cmp	r0, r1, lsl #12
   145b0:	adc	r2, r2, r2
   145b4:	subcs	r0, r0, r1, lsl #12
   145b8:	cmp	r0, r1, lsl #11
   145bc:	adc	r2, r2, r2
   145c0:	subcs	r0, r0, r1, lsl #11
   145c4:	cmp	r0, r1, lsl #10
   145c8:	adc	r2, r2, r2
   145cc:	subcs	r0, r0, r1, lsl #10
   145d0:	cmp	r0, r1, lsl #9
   145d4:	adc	r2, r2, r2
   145d8:	subcs	r0, r0, r1, lsl #9
   145dc:	cmp	r0, r1, lsl #8
   145e0:	adc	r2, r2, r2
   145e4:	subcs	r0, r0, r1, lsl #8
   145e8:	cmp	r0, r1, lsl #7
   145ec:	adc	r2, r2, r2
   145f0:	subcs	r0, r0, r1, lsl #7
   145f4:	cmp	r0, r1, lsl #6
   145f8:	adc	r2, r2, r2
   145fc:	subcs	r0, r0, r1, lsl #6
   14600:	cmp	r0, r1, lsl #5
   14604:	adc	r2, r2, r2
   14608:	subcs	r0, r0, r1, lsl #5
   1460c:	cmp	r0, r1, lsl #4
   14610:	adc	r2, r2, r2
   14614:	subcs	r0, r0, r1, lsl #4
   14618:	cmp	r0, r1, lsl #3
   1461c:	adc	r2, r2, r2
   14620:	subcs	r0, r0, r1, lsl #3
   14624:	cmp	r0, r1, lsl #2
   14628:	adc	r2, r2, r2
   1462c:	subcs	r0, r0, r1, lsl #2
   14630:	cmp	r0, r1, lsl #1
   14634:	adc	r2, r2, r2
   14638:	subcs	r0, r0, r1, lsl #1
   1463c:	cmp	r0, r1
   14640:	adc	r2, r2, r2
   14644:	subcs	r0, r0, r1
   14648:	mov	r0, r2
   1464c:	bx	lr
   14650:	moveq	r0, #1
   14654:	movne	r0, #0
   14658:	bx	lr
   1465c:	clz	r2, r1
   14660:	rsb	r2, r2, #31
   14664:	lsr	r0, r0, r2
   14668:	bx	lr
   1466c:	cmp	r0, #0
   14670:	mvnne	r0, #0
   14674:	b	148d8 <abort@plt+0x3ba0>
   14678:	cmp	r1, #0
   1467c:	beq	1466c <abort@plt+0x3934>
   14680:	push	{r0, r1, lr}
   14684:	bl	1448c <abort@plt+0x3754>
   14688:	pop	{r1, r2, lr}
   1468c:	mul	r3, r2, r0
   14690:	sub	r1, r1, r3
   14694:	bx	lr
   14698:	cmp	r1, #0
   1469c:	beq	148a8 <abort@plt+0x3b70>
   146a0:	eor	ip, r0, r1
   146a4:	rsbmi	r1, r1, #0
   146a8:	subs	r2, r1, #1
   146ac:	beq	14874 <abort@plt+0x3b3c>
   146b0:	movs	r3, r0
   146b4:	rsbmi	r3, r0, #0
   146b8:	cmp	r3, r1
   146bc:	bls	14880 <abort@plt+0x3b48>
   146c0:	tst	r1, r2
   146c4:	beq	14890 <abort@plt+0x3b58>
   146c8:	clz	r2, r3
   146cc:	clz	r0, r1
   146d0:	sub	r2, r0, r2
   146d4:	rsbs	r2, r2, #31
   146d8:	addne	r2, r2, r2, lsl #1
   146dc:	mov	r0, #0
   146e0:	addne	pc, pc, r2, lsl #2
   146e4:	nop			; (mov r0, r0)
   146e8:	cmp	r3, r1, lsl #31
   146ec:	adc	r0, r0, r0
   146f0:	subcs	r3, r3, r1, lsl #31
   146f4:	cmp	r3, r1, lsl #30
   146f8:	adc	r0, r0, r0
   146fc:	subcs	r3, r3, r1, lsl #30
   14700:	cmp	r3, r1, lsl #29
   14704:	adc	r0, r0, r0
   14708:	subcs	r3, r3, r1, lsl #29
   1470c:	cmp	r3, r1, lsl #28
   14710:	adc	r0, r0, r0
   14714:	subcs	r3, r3, r1, lsl #28
   14718:	cmp	r3, r1, lsl #27
   1471c:	adc	r0, r0, r0
   14720:	subcs	r3, r3, r1, lsl #27
   14724:	cmp	r3, r1, lsl #26
   14728:	adc	r0, r0, r0
   1472c:	subcs	r3, r3, r1, lsl #26
   14730:	cmp	r3, r1, lsl #25
   14734:	adc	r0, r0, r0
   14738:	subcs	r3, r3, r1, lsl #25
   1473c:	cmp	r3, r1, lsl #24
   14740:	adc	r0, r0, r0
   14744:	subcs	r3, r3, r1, lsl #24
   14748:	cmp	r3, r1, lsl #23
   1474c:	adc	r0, r0, r0
   14750:	subcs	r3, r3, r1, lsl #23
   14754:	cmp	r3, r1, lsl #22
   14758:	adc	r0, r0, r0
   1475c:	subcs	r3, r3, r1, lsl #22
   14760:	cmp	r3, r1, lsl #21
   14764:	adc	r0, r0, r0
   14768:	subcs	r3, r3, r1, lsl #21
   1476c:	cmp	r3, r1, lsl #20
   14770:	adc	r0, r0, r0
   14774:	subcs	r3, r3, r1, lsl #20
   14778:	cmp	r3, r1, lsl #19
   1477c:	adc	r0, r0, r0
   14780:	subcs	r3, r3, r1, lsl #19
   14784:	cmp	r3, r1, lsl #18
   14788:	adc	r0, r0, r0
   1478c:	subcs	r3, r3, r1, lsl #18
   14790:	cmp	r3, r1, lsl #17
   14794:	adc	r0, r0, r0
   14798:	subcs	r3, r3, r1, lsl #17
   1479c:	cmp	r3, r1, lsl #16
   147a0:	adc	r0, r0, r0
   147a4:	subcs	r3, r3, r1, lsl #16
   147a8:	cmp	r3, r1, lsl #15
   147ac:	adc	r0, r0, r0
   147b0:	subcs	r3, r3, r1, lsl #15
   147b4:	cmp	r3, r1, lsl #14
   147b8:	adc	r0, r0, r0
   147bc:	subcs	r3, r3, r1, lsl #14
   147c0:	cmp	r3, r1, lsl #13
   147c4:	adc	r0, r0, r0
   147c8:	subcs	r3, r3, r1, lsl #13
   147cc:	cmp	r3, r1, lsl #12
   147d0:	adc	r0, r0, r0
   147d4:	subcs	r3, r3, r1, lsl #12
   147d8:	cmp	r3, r1, lsl #11
   147dc:	adc	r0, r0, r0
   147e0:	subcs	r3, r3, r1, lsl #11
   147e4:	cmp	r3, r1, lsl #10
   147e8:	adc	r0, r0, r0
   147ec:	subcs	r3, r3, r1, lsl #10
   147f0:	cmp	r3, r1, lsl #9
   147f4:	adc	r0, r0, r0
   147f8:	subcs	r3, r3, r1, lsl #9
   147fc:	cmp	r3, r1, lsl #8
   14800:	adc	r0, r0, r0
   14804:	subcs	r3, r3, r1, lsl #8
   14808:	cmp	r3, r1, lsl #7
   1480c:	adc	r0, r0, r0
   14810:	subcs	r3, r3, r1, lsl #7
   14814:	cmp	r3, r1, lsl #6
   14818:	adc	r0, r0, r0
   1481c:	subcs	r3, r3, r1, lsl #6
   14820:	cmp	r3, r1, lsl #5
   14824:	adc	r0, r0, r0
   14828:	subcs	r3, r3, r1, lsl #5
   1482c:	cmp	r3, r1, lsl #4
   14830:	adc	r0, r0, r0
   14834:	subcs	r3, r3, r1, lsl #4
   14838:	cmp	r3, r1, lsl #3
   1483c:	adc	r0, r0, r0
   14840:	subcs	r3, r3, r1, lsl #3
   14844:	cmp	r3, r1, lsl #2
   14848:	adc	r0, r0, r0
   1484c:	subcs	r3, r3, r1, lsl #2
   14850:	cmp	r3, r1, lsl #1
   14854:	adc	r0, r0, r0
   14858:	subcs	r3, r3, r1, lsl #1
   1485c:	cmp	r3, r1
   14860:	adc	r0, r0, r0
   14864:	subcs	r3, r3, r1
   14868:	cmp	ip, #0
   1486c:	rsbmi	r0, r0, #0
   14870:	bx	lr
   14874:	teq	ip, r0
   14878:	rsbmi	r0, r0, #0
   1487c:	bx	lr
   14880:	movcc	r0, #0
   14884:	asreq	r0, ip, #31
   14888:	orreq	r0, r0, #1
   1488c:	bx	lr
   14890:	clz	r2, r1
   14894:	rsb	r2, r2, #31
   14898:	cmp	ip, #0
   1489c:	lsr	r0, r3, r2
   148a0:	rsbmi	r0, r0, #0
   148a4:	bx	lr
   148a8:	cmp	r0, #0
   148ac:	mvngt	r0, #-2147483648	; 0x80000000
   148b0:	movlt	r0, #-2147483648	; 0x80000000
   148b4:	b	148d8 <abort@plt+0x3ba0>
   148b8:	cmp	r1, #0
   148bc:	beq	148a8 <abort@plt+0x3b70>
   148c0:	push	{r0, r1, lr}
   148c4:	bl	146a0 <abort@plt+0x3968>
   148c8:	pop	{r1, r2, lr}
   148cc:	mul	r3, r2, r0
   148d0:	sub	r1, r1, r3
   148d4:	bx	lr
   148d8:	push	{r1, lr}
   148dc:	mov	r0, #8
   148e0:	bl	10b40 <raise@plt>
   148e4:	pop	{r1, pc}
   148e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148ec:	mov	r7, r0
   148f0:	ldr	r6, [pc, #72]	; 14940 <abort@plt+0x3c08>
   148f4:	ldr	r5, [pc, #72]	; 14944 <abort@plt+0x3c0c>
   148f8:	add	r6, pc, r6
   148fc:	add	r5, pc, r5
   14900:	sub	r6, r6, r5
   14904:	mov	r8, r1
   14908:	mov	r9, r2
   1490c:	bl	10b08 <calloc@plt-0x20>
   14910:	asrs	r6, r6, #2
   14914:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14918:	mov	r4, #0
   1491c:	add	r4, r4, #1
   14920:	ldr	r3, [r5], #4
   14924:	mov	r2, r9
   14928:	mov	r1, r8
   1492c:	mov	r0, r7
   14930:	blx	r3
   14934:	cmp	r6, r4
   14938:	bne	1491c <abort@plt+0x3be4>
   1493c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14940:	andeq	r1, r1, r0, lsl r6
   14944:	andeq	r1, r1, r8, lsl #12
   14948:	bx	lr
   1494c:	ldr	r3, [pc, #12]	; 14960 <abort@plt+0x3c28>
   14950:	mov	r1, #0
   14954:	add	r3, pc, r3
   14958:	ldr	r2, [r3]
   1495c:	b	10c9c <__cxa_atexit@plt>
   14960:	andeq	r1, r1, ip, ror #14

Disassembly of section .fini:

00014964 <.fini>:
   14964:	push	{r3, lr}
   14968:	pop	{r3, pc}
