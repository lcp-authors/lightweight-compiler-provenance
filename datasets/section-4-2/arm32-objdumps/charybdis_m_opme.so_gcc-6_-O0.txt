
../repos/charybdis/extensions/.libs/m_opme.so:     file format elf32-littlearm


Disassembly of section .init:

000005e8 <_init>:
 5e8:	push	{r3, lr}
 5ec:	bl	6a4 <call_weak_fn>
 5f0:	pop	{r3, pc}

Disassembly of section .plt:

000005f4 <.plt>:
 5f4:	push	{lr}		; (str lr, [sp, #-4]!)
 5f8:	ldr	lr, [pc, #4]	; 604 <.plt+0x10>
 5fc:	add	lr, pc, lr
 600:	ldr	pc, [lr, #8]!
 604:	.word	0x000109fc

00000608 <sendto_channel_local@plt>:
 608:	add	ip, pc, #0, 12
 60c:	add	ip, ip, #16, 20	; 0x10000
 610:	ldr	pc, [ip, #2556]!	; 0x9fc

00000614 <__cxa_finalize@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #16, 20	; 0x10000
 61c:	ldr	pc, [ip, #2548]!	; 0x9f4

00000620 <sendto_one@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #16, 20	; 0x10000
 628:	ldr	pc, [ip, #2540]!	; 0x9ec

0000062c <sendto_wallops_flags@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #16, 20	; 0x10000
 634:	ldr	pc, [ip, #2532]!	; 0x9e4

00000638 <get_oper_name@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #16, 20	; 0x10000
 640:	ldr	pc, [ip, #2524]!	; 0x9dc

00000644 <find_channel@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #16, 20	; 0x10000
 64c:	ldr	pc, [ip, #2516]!	; 0x9d4

00000650 <find_channel_membership@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #16, 20	; 0x10000
 658:	ldr	pc, [ip, #2508]!	; 0x9cc

0000065c <sendto_server@plt>:
 65c:	add	ip, pc, #0, 12
 660:	add	ip, ip, #16, 20	; 0x10000
 664:	ldr	pc, [ip, #2500]!	; 0x9c4

00000668 <__gmon_start__@plt>:
 668:	add	ip, pc, #0, 12
 66c:	add	ip, ip, #16, 20	; 0x10000
 670:	ldr	pc, [ip, #2492]!	; 0x9bc

00000674 <sendto_one_numeric@plt>:
 674:	add	ip, pc, #0, 12
 678:	add	ip, ip, #16, 20	; 0x10000
 67c:	ldr	pc, [ip, #2484]!	; 0x9b4

00000680 <ilog@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #16, 20	; 0x10000
 688:	ldr	pc, [ip, #2476]!	; 0x9ac

0000068c <sendto_one_notice@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #16, 20	; 0x10000
 694:	ldr	pc, [ip, #2468]!	; 0x9a4

00000698 <privilegeset_in_set@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #16, 20	; 0x10000
 6a0:	ldr	pc, [ip, #2460]!	; 0x99c

Disassembly of section .text:

000006a4 <call_weak_fn>:
 6a4:	ldr	r3, [pc, #20]	; 6c0 <call_weak_fn+0x1c>
 6a8:	ldr	r2, [pc, #20]	; 6c4 <call_weak_fn+0x20>
 6ac:	add	r3, pc, r3
 6b0:	ldr	r2, [r3, r2]
 6b4:	cmp	r2, #0
 6b8:	bxeq	lr
 6bc:	b	668 <__gmon_start__@plt>
 6c0:	.word	0x0001094c
 6c4:	.word	0x0000004c

000006c8 <deregister_tm_clones>:
 6c8:	ldr	r3, [pc, #52]	; 704 <deregister_tm_clones+0x3c>
 6cc:	ldr	r0, [pc, #52]	; 708 <deregister_tm_clones+0x40>
 6d0:	add	r3, pc, r3
 6d4:	add	r0, pc, r0
 6d8:	add	r3, r3, #3
 6dc:	sub	r3, r3, r0
 6e0:	cmp	r3, #6
 6e4:	ldr	r3, [pc, #32]	; 70c <deregister_tm_clones+0x44>
 6e8:	add	r3, pc, r3
 6ec:	bxls	lr
 6f0:	ldr	r2, [pc, #24]	; 710 <deregister_tm_clones+0x48>
 6f4:	ldr	r3, [r3, r2]
 6f8:	cmp	r3, #0
 6fc:	bxeq	lr
 700:	bx	r3
 704:	.word	0x000109fc
 708:	.word	0x000109f8
 70c:	.word	0x00010910
 710:	.word	0x00000044

00000714 <register_tm_clones>:
 714:	ldr	r1, [pc, #56]	; 754 <register_tm_clones+0x40>
 718:	ldr	r0, [pc, #56]	; 758 <register_tm_clones+0x44>
 71c:	add	r1, pc, r1
 720:	add	r0, pc, r0
 724:	sub	r1, r1, r0
 728:	ldr	r3, [pc, #44]	; 75c <register_tm_clones+0x48>
 72c:	asr	r1, r1, #2
 730:	add	r3, pc, r3
 734:	add	r1, r1, r1, lsr #31
 738:	asrs	r1, r1, #1
 73c:	bxeq	lr
 740:	ldr	r2, [pc, #24]	; 760 <register_tm_clones+0x4c>
 744:	ldr	r3, [r3, r2]
 748:	cmp	r3, #0
 74c:	bxeq	lr
 750:	bx	r3
 754:	.word	0x000109b0
 758:	.word	0x000109ac
 75c:	.word	0x000108c8
 760:	.word	0x00000054

00000764 <__do_global_dtors_aux>:
 764:	ldr	r3, [pc, #76]	; 7b8 <__do_global_dtors_aux+0x54>
 768:	ldr	r2, [pc, #76]	; 7bc <__do_global_dtors_aux+0x58>
 76c:	add	r3, pc, r3
 770:	add	r2, pc, r2
 774:	ldrb	r3, [r3]
 778:	cmp	r3, #0
 77c:	bxne	lr
 780:	ldr	r3, [pc, #56]	; 7c0 <__do_global_dtors_aux+0x5c>
 784:	push	{r4, lr}
 788:	ldr	r3, [r2, r3]
 78c:	cmp	r3, #0
 790:	beq	7a0 <__do_global_dtors_aux+0x3c>
 794:	ldr	r3, [pc, #40]	; 7c4 <__do_global_dtors_aux+0x60>
 798:	ldr	r0, [pc, r3]
 79c:	bl	614 <__cxa_finalize@plt>
 7a0:	bl	6c8 <deregister_tm_clones>
 7a4:	ldr	r3, [pc, #28]	; 7c8 <__do_global_dtors_aux+0x64>
 7a8:	mov	r2, #1
 7ac:	add	r3, pc, r3
 7b0:	strb	r2, [r3]
 7b4:	pop	{r4, pc}
 7b8:	.word	0x00010960
 7bc:	.word	0x00010888
 7c0:	.word	0x00000040
 7c4:	.word	0x000108bc
 7c8:	.word	0x00010920

000007cc <frame_dummy>:
 7cc:	ldr	r0, [pc, #56]	; 80c <frame_dummy+0x40>
 7d0:	ldr	r3, [pc, #56]	; 810 <frame_dummy+0x44>
 7d4:	add	r0, pc, r0
 7d8:	ldr	r2, [r0]
 7dc:	add	r3, pc, r3
 7e0:	cmp	r2, #0
 7e4:	bne	7ec <frame_dummy+0x20>
 7e8:	b	714 <register_tm_clones>
 7ec:	ldr	r2, [pc, #32]	; 814 <frame_dummy+0x48>
 7f0:	ldr	r3, [r3, r2]
 7f4:	cmp	r3, #0
 7f8:	beq	7e8 <frame_dummy+0x1c>
 7fc:	push	{r4, lr}
 800:	blx	r3
 804:	pop	{r4, lr}
 808:	b	714 <register_tm_clones>
 80c:	.word	0x00010720
 810:	.word	0x0001081c
 814:	.word	0x00000050

00000818 <mo_opme>:
 818:	push	{r4, r5, fp, lr}
 81c:	add	fp, sp, #12
 820:	sub	sp, sp, #56	; 0x38
 824:	str	r0, [fp, #-32]	; 0xffffffe0
 828:	str	r1, [fp, #-36]	; 0xffffffdc
 82c:	str	r2, [fp, #-40]	; 0xffffffd8
 830:	str	r3, [fp, #-44]	; 0xffffffd4
 834:	ldr	r4, [pc, #956]	; bf8 <mo_opme+0x3e0>
 838:	add	r4, pc, r4
 83c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 840:	ldr	r3, [r3, #24]
 844:	cmp	r3, #0
 848:	beq	88c <mo_opme+0x74>
 84c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 850:	ldr	r3, [r3, #24]
 854:	ldr	r3, [r3, #36]	; 0x24
 858:	cmp	r3, #0
 85c:	beq	88c <mo_opme+0x74>
 860:	ldr	r3, [fp, #-40]	; 0xffffffd8
 864:	ldr	r3, [r3, #24]
 868:	ldr	r3, [r3, #36]	; 0x24
 86c:	ldr	r2, [pc, #904]	; bfc <mo_opme+0x3e4>
 870:	add	r2, pc, r2
 874:	mov	r1, r2
 878:	mov	r0, r3
 87c:	bl	698 <privilegeset_in_set@plt>
 880:	mov	r3, r0
 884:	cmp	r3, #0
 888:	bne	910 <mo_opme+0xf8>
 88c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 890:	ldr	r3, [r3, #24]
 894:	cmp	r3, #0
 898:	beq	8dc <mo_opme+0xc4>
 89c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 8a0:	ldr	r3, [r3, #24]
 8a4:	ldr	r3, [r3, #36]	; 0x24
 8a8:	cmp	r3, #0
 8ac:	beq	8dc <mo_opme+0xc4>
 8b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
 8b4:	ldr	r3, [r3, #24]
 8b8:	ldr	r3, [r3, #36]	; 0x24
 8bc:	ldr	r2, [pc, #828]	; c00 <mo_opme+0x3e8>
 8c0:	add	r2, pc, r2
 8c4:	mov	r1, r2
 8c8:	mov	r0, r3
 8cc:	bl	698 <privilegeset_in_set@plt>
 8d0:	mov	r3, r0
 8d4:	cmp	r3, #0
 8d8:	bne	910 <mo_opme+0xf8>
 8dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
 8e0:	add	r3, r3, #88	; 0x58
 8e4:	ldr	r2, [pc, #792]	; c04 <mo_opme+0x3ec>
 8e8:	add	r2, pc, r2
 8ec:	str	r2, [sp]
 8f0:	ldr	r2, [pc, #784]	; c08 <mo_opme+0x3f0>
 8f4:	ldr	r2, [r4, r2]
 8f8:	add	r2, r2, #88	; 0x58
 8fc:	ldr	r1, [pc, #776]	; c0c <mo_opme+0x3f4>
 900:	add	r1, pc, r1
 904:	ldr	r0, [fp, #-40]	; 0xffffffd8
 908:	bl	620 <sendto_one@plt>
 90c:	b	bf0 <mo_opme+0x3d8>
 910:	ldr	r3, [fp, #4]
 914:	add	r3, r3, #4
 918:	ldr	r3, [r3]
 91c:	mov	r0, r3
 920:	bl	644 <find_channel@plt>
 924:	str	r0, [fp, #-20]	; 0xffffffec
 928:	ldr	r3, [fp, #-20]	; 0xffffffec
 92c:	cmp	r3, #0
 930:	bne	958 <mo_opme+0x140>
 934:	ldr	r3, [fp, #4]
 938:	add	r3, r3, #4
 93c:	ldr	r3, [r3]
 940:	ldr	r2, [pc, #712]	; c10 <mo_opme+0x3f8>
 944:	add	r2, pc, r2
 948:	ldr	r1, [pc, #708]	; c14 <mo_opme+0x3fc>
 94c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 950:	bl	674 <sendto_one_numeric@plt>
 954:	b	bf0 <mo_opme+0x3d8>
 958:	ldr	r3, [fp, #-20]	; 0xffffffec
 95c:	ldr	r3, [r3, #124]	; 0x7c
 960:	str	r3, [fp, #-16]
 964:	b	9c8 <mo_opme+0x1b0>
 968:	ldr	r3, [fp, #-16]
 96c:	ldr	r3, [r3]
 970:	str	r3, [fp, #-24]	; 0xffffffe8
 974:	ldr	r3, [fp, #-24]	; 0xffffffe8
 978:	cmp	r3, #0
 97c:	beq	9bc <mo_opme+0x1a4>
 980:	ldr	r3, [fp, #-24]	; 0xffffffe8
 984:	ldr	r3, [r3, #44]	; 0x2c
 988:	and	r3, r3, #2
 98c:	cmp	r3, #0
 990:	beq	9bc <mo_opme+0x1a4>
 994:	ldr	r3, [fp, #4]
 998:	add	r3, r3, #4
 99c:	ldr	r3, [r3]
 9a0:	mov	r2, r3
 9a4:	ldr	r3, [pc, #620]	; c18 <mo_opme+0x400>
 9a8:	add	r3, pc, r3
 9ac:	mov	r1, r3
 9b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
 9b4:	bl	68c <sendto_one_notice@plt>
 9b8:	b	bf0 <mo_opme+0x3d8>
 9bc:	ldr	r3, [fp, #-16]
 9c0:	ldr	r3, [r3, #8]
 9c4:	str	r3, [fp, #-16]
 9c8:	ldr	r3, [fp, #-16]
 9cc:	cmp	r3, #0
 9d0:	bne	968 <mo_opme+0x150>
 9d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
 9d8:	ldr	r0, [fp, #-20]	; 0xffffffec
 9dc:	bl	650 <find_channel_membership@plt>
 9e0:	str	r0, [fp, #-24]	; 0xffffffe8
 9e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9e8:	cmp	r3, #0
 9ec:	beq	bec <mo_opme+0x3d4>
 9f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9f4:	ldr	r3, [r3, #44]	; 0x2c
 9f8:	orr	r2, r3, #2
 9fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 a00:	str	r2, [r3, #44]	; 0x2c
 a04:	ldr	r3, [fp, #4]
 a08:	add	r3, r3, #4
 a0c:	ldr	r0, [r3]
 a10:	ldr	r3, [fp, #-40]	; 0xffffffd8
 a14:	add	r3, r3, #88	; 0x58
 a18:	ldr	r2, [fp, #-40]	; 0xffffffd8
 a1c:	add	r2, r2, #152	; 0x98
 a20:	ldr	r1, [fp, #-40]	; 0xffffffd8
 a24:	add	r1, r1, #163	; 0xa3
 a28:	str	r1, [sp, #8]
 a2c:	str	r2, [sp, #4]
 a30:	str	r3, [sp]
 a34:	mov	r3, r0
 a38:	ldr	r2, [pc, #476]	; c1c <mo_opme+0x404>
 a3c:	add	r2, pc, r2
 a40:	ldr	r1, [pc, #448]	; c08 <mo_opme+0x3f0>
 a44:	ldr	r1, [r4, r1]
 a48:	mov	r0, #2
 a4c:	bl	62c <sendto_wallops_flags@plt>
 a50:	ldr	r3, [fp, #4]
 a54:	add	r3, r3, #4
 a58:	ldr	r5, [r3]
 a5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 a60:	bl	638 <get_oper_name@plt>
 a64:	mov	r3, r0
 a68:	mov	r2, r5
 a6c:	ldr	r1, [pc, #428]	; c20 <mo_opme+0x408>
 a70:	add	r1, pc, r1
 a74:	mov	r0, #0
 a78:	bl	680 <ilog@plt>
 a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
 a80:	ldr	r3, [r3, #236]	; 0xec
 a84:	ldrb	r3, [r3]
 a88:	cmp	r3, #38	; 0x26
 a8c:	beq	ba0 <mo_opme+0x388>
 a90:	ldr	r3, [fp, #4]
 a94:	add	r3, r3, #4
 a98:	ldr	r3, [r3]
 a9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
 aa0:	add	r2, r2, #88	; 0x58
 aa4:	ldr	r1, [fp, #-40]	; 0xffffffd8
 aa8:	add	r1, r1, #152	; 0x98
 aac:	ldr	r0, [fp, #-40]	; 0xffffffd8
 ab0:	add	r0, r0, #163	; 0xa3
 ab4:	str	r0, [sp, #20]
 ab8:	str	r1, [sp, #16]
 abc:	str	r2, [sp, #12]
 ac0:	str	r3, [sp, #8]
 ac4:	ldr	r3, [pc, #316]	; c08 <mo_opme+0x3f0>
 ac8:	ldr	r3, [r4, r3]
 acc:	add	r3, r3, #88	; 0x58
 ad0:	str	r3, [sp, #4]
 ad4:	ldr	r3, [pc, #328]	; c24 <mo_opme+0x40c>
 ad8:	add	r3, pc, r3
 adc:	str	r3, [sp]
 ae0:	mov	r3, #0
 ae4:	mov	r2, #0
 ae8:	mov	r1, #0
 aec:	mov	r0, #0
 af0:	bl	65c <sendto_server@plt>
 af4:	ldr	r3, [pc, #300]	; c28 <mo_opme+0x410>
 af8:	ldr	r3, [r4, r3]
 afc:	ldr	r1, [r3]
 b00:	ldr	r3, [fp, #-40]	; 0xffffffd8
 b04:	add	r3, r3, #396	; 0x18c
 b08:	ldr	r2, [fp, #4]
 b0c:	add	r2, r2, #4
 b10:	ldr	r2, [r2]
 b14:	str	r2, [sp, #8]
 b18:	str	r3, [sp, #4]
 b1c:	ldr	r3, [pc, #264]	; c2c <mo_opme+0x414>
 b20:	add	r3, pc, r3
 b24:	str	r3, [sp]
 b28:	mov	r3, #0
 b2c:	mov	r2, r1
 b30:	ldr	r1, [fp, #-20]	; 0xffffffec
 b34:	mov	r0, #0
 b38:	bl	65c <sendto_server@plt>
 b3c:	ldr	r3, [pc, #228]	; c28 <mo_opme+0x410>
 b40:	ldr	r3, [r4, r3]
 b44:	ldr	r0, [r3]
 b48:	ldr	r3, [fp, #-20]	; 0xffffffec
 b4c:	ldr	r3, [r3, #232]	; 0xe8
 b50:	ldr	r2, [fp, #4]
 b54:	add	r2, r2, #4
 b58:	ldr	r2, [r2]
 b5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
 b60:	add	r1, r1, #396	; 0x18c
 b64:	str	r1, [sp, #16]
 b68:	str	r2, [sp, #12]
 b6c:	str	r3, [sp, #8]
 b70:	ldr	r3, [pc, #144]	; c08 <mo_opme+0x3f0>
 b74:	ldr	r3, [r4, r3]
 b78:	add	r3, r3, #396	; 0x18c
 b7c:	str	r3, [sp, #4]
 b80:	ldr	r3, [pc, #168]	; c30 <mo_opme+0x418>
 b84:	add	r3, pc, r3
 b88:	str	r3, [sp]
 b8c:	mov	r3, #0
 b90:	mov	r2, r0
 b94:	ldr	r1, [fp, #-20]	; 0xffffffec
 b98:	mov	r0, #0
 b9c:	bl	65c <sendto_server@plt>
 ba0:	ldr	r3, [fp, #4]
 ba4:	add	r3, r3, #4
 ba8:	ldr	r3, [r3]
 bac:	ldr	r2, [fp, #-40]	; 0xffffffd8
 bb0:	add	r2, r2, #88	; 0x58
 bb4:	str	r2, [sp, #8]
 bb8:	str	r3, [sp, #4]
 bbc:	ldr	r3, [pc, #68]	; c08 <mo_opme+0x3f0>
 bc0:	ldr	r3, [r4, r3]
 bc4:	add	r3, r3, #88	; 0x58
 bc8:	str	r3, [sp]
 bcc:	ldr	r3, [pc, #96]	; c34 <mo_opme+0x41c>
 bd0:	add	r3, pc, r3
 bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
 bd8:	mov	r1, #0
 bdc:	ldr	r0, [pc, #36]	; c08 <mo_opme+0x3f0>
 be0:	ldr	r0, [r4, r0]
 be4:	bl	608 <sendto_channel_local@plt>
 be8:	b	bf0 <mo_opme+0x3d8>
 bec:	nop			; (mov r0, r0)
 bf0:	sub	sp, fp, #12
 bf4:	pop	{r4, r5, fp, pc}
 bf8:	.word	0x000107c0
 bfc:	.word	0x00000404
 c00:	.word	0x000003c0
 c04:	.word	0x000003d4
 c08:	.word	0x00000058
 c0c:	.word	0x00000394
 c10:	.word	0x00000380
 c14:	.word	0x00000193
 c18:	.word	0x00000330
 c1c:	.word	0x000002b8
 c20:	.word	0x000002a8
 c24:	.word	0x0000025c
 c28:	.word	0x00000048
 c2c:	.word	0x00000244
 c30:	.word	0x000001ec
 c34:	.word	0x000001b8

Disassembly of section .fini:

00000c38 <_fini>:
 c38:	push	{r3, lr}
 c3c:	pop	{r3, pc}
