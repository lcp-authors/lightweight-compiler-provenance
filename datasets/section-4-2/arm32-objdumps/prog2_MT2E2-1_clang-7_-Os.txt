
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

000110c0 <.init>:
   110c0:	push	{r3, lr}
   110c4:	bl	111e8 <_start@@Base+0x3c>
   110c8:	pop	{r3, pc}

Disassembly of section .plt:

000110cc <calloc@plt-0x14>:
   110cc:	push	{lr}		; (str lr, [sp, #-4]!)
   110d0:	ldr	lr, [pc, #4]	; 110dc <calloc@plt-0x4>
   110d4:	add	lr, pc, lr
   110d8:	ldr	pc, [lr, #8]!
   110dc:	andeq	r1, r1, r4, lsr #30

000110e0 <calloc@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #69632	; 0x11000
   110e8:	ldr	pc, [ip, #3876]!	; 0xf24

000110ec <strcmp@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #69632	; 0x11000
   110f4:	ldr	pc, [ip, #3868]!	; 0xf1c

000110f8 <printf@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #69632	; 0x11000
   11100:	ldr	pc, [ip, #3860]!	; 0xf14

00011104 <__isoc99_fscanf@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #69632	; 0x11000
   1110c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011110 <fopen@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #69632	; 0x11000
   11118:	ldr	pc, [ip, #3844]!	; 0xf04

0001111c <free@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #69632	; 0x11000
   11124:	ldr	pc, [ip, #3836]!	; 0xefc

00011128 <memcpy@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #69632	; 0x11000
   11130:	ldr	pc, [ip, #3828]!	; 0xef4

00011134 <realloc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #69632	; 0x11000
   1113c:	ldr	pc, [ip, #3820]!	; 0xeec

00011140 <strcpy@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #69632	; 0x11000
   11148:	ldr	pc, [ip, #3812]!	; 0xee4

0001114c <puts@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #69632	; 0x11000
   11154:	ldr	pc, [ip, #3804]!	; 0xedc

00011158 <malloc@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #69632	; 0x11000
   11160:	ldr	pc, [ip, #3796]!	; 0xed4

00011164 <__libc_start_main@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #69632	; 0x11000
   1116c:	ldr	pc, [ip, #3788]!	; 0xecc

00011170 <__gmon_start__@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #69632	; 0x11000
   11178:	ldr	pc, [ip, #3780]!	; 0xec4

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #69632	; 0x11000
   11184:	ldr	pc, [ip, #3772]!	; 0xebc

00011188 <putchar@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #69632	; 0x11000
   11190:	ldr	pc, [ip, #3764]!	; 0xeb4

00011194 <fclose@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #69632	; 0x11000
   1119c:	ldr	pc, [ip, #3756]!	; 0xeac

000111a0 <abort@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #69632	; 0x11000
   111a8:	ldr	pc, [ip, #3748]!	; 0xea4

Disassembly of section .text:

000111ac <_start@@Base>:
   111ac:	mov	fp, #0
   111b0:	mov	lr, #0
   111b4:	pop	{r1}		; (ldr r1, [sp], #4)
   111b8:	mov	r2, sp
   111bc:	push	{r2}		; (str r2, [sp, #-4]!)
   111c0:	push	{r0}		; (str r0, [sp, #-4]!)
   111c4:	ldr	ip, [pc, #16]	; 111dc <_start@@Base+0x30>
   111c8:	push	{ip}		; (str ip, [sp, #-4]!)
   111cc:	ldr	r0, [pc, #12]	; 111e0 <_start@@Base+0x34>
   111d0:	ldr	r3, [pc, #12]	; 111e4 <_start@@Base+0x38>
   111d4:	bl	11164 <__libc_start_main@plt>
   111d8:	bl	111a0 <abort@plt>
   111dc:	muleq	r1, r8, r7
   111e0:	andeq	r1, r1, r4, asr #8
   111e4:	andeq	r2, r1, r8, lsr r7
   111e8:	ldr	r3, [pc, #20]	; 11204 <_start@@Base+0x58>
   111ec:	ldr	r2, [pc, #20]	; 11208 <_start@@Base+0x5c>
   111f0:	add	r3, pc, r3
   111f4:	ldr	r2, [r3, r2]
   111f8:	cmp	r2, #0
   111fc:	bxeq	lr
   11200:	b	11170 <__gmon_start__@plt>
   11204:	andeq	r1, r1, r8, lsl #28
   11208:	andeq	r0, r0, r0, asr r0
   1120c:	ldr	r0, [pc, #24]	; 1122c <_start@@Base+0x80>
   11210:	ldr	r3, [pc, #24]	; 11230 <_start@@Base+0x84>
   11214:	cmp	r3, r0
   11218:	bxeq	lr
   1121c:	ldr	r3, [pc, #16]	; 11234 <_start@@Base+0x88>
   11220:	cmp	r3, #0
   11224:	bxeq	lr
   11228:	bx	r3
   1122c:	andeq	r3, r2, ip, asr r0
   11230:	andeq	r3, r2, ip, asr r0
   11234:	andeq	r0, r0, r0
   11238:	ldr	r0, [pc, #36]	; 11264 <_start@@Base+0xb8>
   1123c:	ldr	r1, [pc, #36]	; 11268 <_start@@Base+0xbc>
   11240:	sub	r1, r1, r0
   11244:	asr	r1, r1, #2
   11248:	add	r1, r1, r1, lsr #31
   1124c:	asrs	r1, r1, #1
   11250:	bxeq	lr
   11254:	ldr	r3, [pc, #16]	; 1126c <_start@@Base+0xc0>
   11258:	cmp	r3, #0
   1125c:	bxeq	lr
   11260:	bx	r3
   11264:	andeq	r3, r2, ip, asr r0
   11268:	andeq	r3, r2, ip, asr r0
   1126c:	andeq	r0, r0, r0
   11270:	push	{r4, lr}
   11274:	ldr	r4, [pc, #24]	; 11294 <_start@@Base+0xe8>
   11278:	ldrb	r3, [r4]
   1127c:	cmp	r3, #0
   11280:	popne	{r4, pc}
   11284:	bl	1120c <_start@@Base+0x60>
   11288:	mov	r3, #1
   1128c:	strb	r3, [r4]
   11290:	pop	{r4, pc}
   11294:	andeq	r3, r2, ip, asr r0
   11298:	b	11238 <_start@@Base+0x8c>

0001129c <crescente@@Base>:
   1129c:	push	{r4, r5, fp, lr}
   112a0:	add	fp, sp, #8
   112a4:	cmp	r0, #0
   112a8:	popeq	{r4, r5, fp, pc}
   112ac:	movw	r5, #10164	; 0x27b4
   112b0:	mov	r4, r0
   112b4:	movt	r5, #1
   112b8:	ldr	r0, [r4, #4]
   112bc:	bl	1129c <crescente@@Base>
   112c0:	ldr	r1, [r4]
   112c4:	mov	r0, r5
   112c8:	bl	110f8 <printf@plt>
   112cc:	ldr	r4, [r4, #8]
   112d0:	cmp	r4, #0
   112d4:	bne	112b8 <crescente@@Base+0x1c>
   112d8:	pop	{r4, r5, fp, pc}

000112dc <decrescente@@Base>:
   112dc:	push	{r4, r5, fp, lr}
   112e0:	add	fp, sp, #8
   112e4:	cmp	r0, #0
   112e8:	popeq	{r4, r5, fp, pc}
   112ec:	movw	r5, #10164	; 0x27b4
   112f0:	mov	r4, r0
   112f4:	movt	r5, #1
   112f8:	ldr	r0, [r4, #8]
   112fc:	bl	112dc <decrescente@@Base>
   11300:	ldr	r1, [r4]
   11304:	mov	r0, r5
   11308:	bl	110f8 <printf@plt>
   1130c:	ldr	r4, [r4, #4]
   11310:	cmp	r4, #0
   11314:	bne	112f8 <decrescente@@Base+0x1c>
   11318:	pop	{r4, r5, fp, pc}

0001131c <avl_imprime_ord@@Base>:
   1131c:	ldr	r0, [r0]
   11320:	cmp	r1, #0
   11324:	blt	1132c <avl_imprime_ord@@Base+0x10>
   11328:	b	1129c <crescente@@Base>
   1132c:	b	112dc <decrescente@@Base>

00011330 <valida_passwds@@Base>:
   11330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11334:	add	fp, sp, #28
   11338:	sub	sp, sp, #52	; 0x34
   1133c:	mov	r8, r1
   11340:	movw	r1, #9732	; 0x2604
   11344:	mov	r7, r0
   11348:	mov	r0, #10
   1134c:	mov	r9, r2
   11350:	movt	r1, #1
   11354:	bl	120c0 <tabela_nova@@Base>
   11358:	movw	r1, #10168	; 0x27b8
   1135c:	mov	r4, r0
   11360:	add	r2, sp, #27
   11364:	add	r3, sp, #2
   11368:	mov	r0, r7
   1136c:	movt	r1, #1
   11370:	bl	11104 <__isoc99_fscanf@plt>
   11374:	cmp	r0, #2
   11378:	bne	113b8 <valida_passwds@@Base+0x88>
   1137c:	movw	sl, #10168	; 0x27b8
   11380:	add	r5, sp, #27
   11384:	add	r6, sp, #2
   11388:	movt	sl, #1
   1138c:	mov	r0, r4
   11390:	mov	r1, r5
   11394:	mov	r2, r6
   11398:	bl	121a0 <tabela_adiciona@@Base>
   1139c:	mov	r0, r7
   113a0:	mov	r1, sl
   113a4:	mov	r2, r5
   113a8:	mov	r3, r6
   113ac:	bl	11104 <__isoc99_fscanf@plt>
   113b0:	cmp	r0, #2
   113b4:	beq	1138c <valida_passwds@@Base+0x5c>
   113b8:	ldr	r6, [r9]
   113bc:	cmp	r6, #0
   113c0:	ldrne	r7, [r8]
   113c4:	cmpne	r7, #0
   113c8:	beq	1142c <valida_passwds@@Base+0xfc>
   113cc:	movw	r5, #10174	; 0x27be
   113d0:	movw	r8, #10736	; 0x29f0
   113d4:	movw	r9, #10704	; 0x29d0
   113d8:	movt	r5, #1
   113dc:	movt	r8, #1
   113e0:	movt	r9, #1
   113e4:	ldr	r2, [r6]
   113e8:	ldr	r1, [r7]
   113ec:	mov	r0, r5
   113f0:	bl	110f8 <printf@plt>
   113f4:	ldr	r1, [r7]
   113f8:	mov	r0, r4
   113fc:	bl	1239c <tabela_valor@@Base>
   11400:	ldr	r1, [r6]
   11404:	bl	110ec <strcmp@plt>
   11408:	cmp	r0, #0
   1140c:	movne	r0, r9
   11410:	moveq	r0, r8
   11414:	bl	1114c <puts@plt>
   11418:	ldr	r6, [r6, #4]
   1141c:	cmp	r6, #0
   11420:	ldrne	r7, [r7, #4]
   11424:	cmpne	r7, #0
   11428:	bne	113e4 <valida_passwds@@Base+0xb4>
   1142c:	mov	r0, r4
   11430:	bl	12408 <tabela_esvazia@@Base>
   11434:	mov	r0, r4
   11438:	bl	1111c <free@plt>
   1143c:	sub	sp, fp, #28
   11440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011444 <main@@Base>:
   11444:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11448:	add	fp, sp, #24
   1144c:	sub	sp, sp, #384	; 0x180
   11450:	movw	r0, #10264	; 0x2818
   11454:	add	r5, sp, #80	; 0x50
   11458:	movt	r0, #1
   1145c:	mov	r1, r5
   11460:	ldm	r0!, {r2, r3, r6, r7}
   11464:	stmia	r1!, {r2, r3, r6, r7}
   11468:	ldm	r0!, {r2, r3, r6, r7}
   1146c:	stmia	r1!, {r2, r3, r6, r7}
   11470:	ldm	r0, {r2, r3, r4, r6, r7}
   11474:	movw	r0, #10768	; 0x2a10
   11478:	movt	r0, #1
   1147c:	stm	r1, {r2, r3, r4, r6, r7}
   11480:	bl	1114c <puts@plt>
   11484:	mov	r6, #0
   11488:	bl	115d0 <avl_nova@@Base>
   1148c:	mov	r4, r0
   11490:	add	r1, r5, r6
   11494:	mov	r0, r4
   11498:	bl	118c8 <avl_insere@@Base>
   1149c:	add	r6, r6, #4
   114a0:	cmp	r6, #52	; 0x34
   114a4:	bne	11490 <main@@Base+0x4c>
   114a8:	movw	r0, #10198	; 0x27d6
   114ac:	movt	r0, #1
   114b0:	bl	110f8 <printf@plt>
   114b4:	ldr	r0, [r4]
   114b8:	bl	11b08 <avl_imprime@@Base>
   114bc:	movw	r0, #10216	; 0x27e8
   114c0:	movt	r0, #1
   114c4:	bl	110f8 <printf@plt>
   114c8:	ldr	r0, [r4]
   114cc:	bl	1129c <crescente@@Base>
   114d0:	movw	r0, #10914	; 0x2aa2
   114d4:	movt	r0, #1
   114d8:	bl	1114c <puts@plt>
   114dc:	movw	r1, #10320	; 0x2850
   114e0:	add	r6, sp, #80	; 0x50
   114e4:	mov	r2, #300	; 0x12c
   114e8:	movt	r1, #1
   114ec:	mov	r0, r6
   114f0:	bl	11128 <memcpy@plt>
   114f4:	movw	r1, #10624	; 0x2980
   114f8:	mov	r4, sp
   114fc:	mov	r2, #75	; 0x4b
   11500:	movt	r1, #1
   11504:	mov	r0, r4
   11508:	bl	11128 <memcpy@plt>
   1150c:	movw	r0, #10800	; 0x2a30
   11510:	movt	r0, #1
   11514:	bl	1114c <puts@plt>
   11518:	movw	r0, #10245	; 0x2805
   1151c:	movw	r1, #10259	; 0x2813
   11520:	movt	r0, #1
   11524:	movt	r1, #1
   11528:	bl	11110 <fopen@plt>
   1152c:	cmp	r0, #0
   11530:	beq	115b8 <main@@Base+0x174>
   11534:	mov	r8, r0
   11538:	mov	r5, #0
   1153c:	bl	11d40 <lista_nova@@Base>
   11540:	mov	r7, r0
   11544:	add	r1, r6, r5
   11548:	mov	r0, r7
   1154c:	mov	r2, #0
   11550:	bl	11de8 <lista_insere@@Base>
   11554:	add	r5, r5, #100	; 0x64
   11558:	cmp	r5, #300	; 0x12c
   1155c:	bne	11544 <main@@Base+0x100>
   11560:	mov	r5, #0
   11564:	bl	11d40 <lista_nova@@Base>
   11568:	mov	r6, r0
   1156c:	add	r1, r4, r5
   11570:	mov	r0, r6
   11574:	mov	r2, #0
   11578:	bl	11de8 <lista_insere@@Base>
   1157c:	add	r5, r5, #25
   11580:	cmp	r5, #75	; 0x4b
   11584:	bne	1156c <main@@Base+0x128>
   11588:	mov	r0, r8
   1158c:	mov	r1, r7
   11590:	mov	r2, r6
   11594:	bl	11330 <valida_passwds@@Base>
   11598:	mov	r0, r7
   1159c:	bl	11d70 <lista_apaga@@Base>
   115a0:	mov	r0, r6
   115a4:	bl	11d70 <lista_apaga@@Base>
   115a8:	mov	r0, r8
   115ac:	bl	11194 <fclose@plt>
   115b0:	mov	r0, #0
   115b4:	b	115c8 <main@@Base+0x184>
   115b8:	movw	r0, #10832	; 0x2a50
   115bc:	movt	r0, #1
   115c0:	bl	1114c <puts@plt>
   115c4:	mvn	r0, #0
   115c8:	sub	sp, fp, #24
   115cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115d0 <avl_nova@@Base>:
   115d0:	push	{fp, lr}
   115d4:	mov	fp, sp
   115d8:	mov	r0, #4
   115dc:	bl	11158 <malloc@plt>
   115e0:	cmp	r0, #0
   115e4:	moveq	r0, #0
   115e8:	movne	r1, #0
   115ec:	strne	r1, [r0]
   115f0:	pop	{fp, pc}

000115f4 <avl_apaga@@Base>:
   115f4:	cmp	r0, #0
   115f8:	bxeq	lr
   115fc:	push	{r4, sl, fp, lr}
   11600:	add	fp, sp, #8
   11604:	mov	r4, r0
   11608:	ldr	r0, [r0]
   1160c:	b	1161c <avl_apaga@@Base+0x28>
   11610:	ldr	r1, [r0]
   11614:	bl	11630 <avl_remove_impl@@Base>
   11618:	str	r0, [r4]
   1161c:	cmp	r0, #0
   11620:	bne	11610 <avl_apaga@@Base+0x1c>
   11624:	mov	r0, r4
   11628:	pop	{r4, sl, fp, lr}
   1162c:	b	1111c <free@plt>

00011630 <avl_remove_impl@@Base>:
   11630:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11634:	add	fp, sp, #24
   11638:	mov	r8, #0
   1163c:	cmp	r0, #0
   11640:	beq	11780 <avl_remove_impl@@Base+0x150>
   11644:	ldr	r6, [r0]
   11648:	mov	r5, r0
   1164c:	mov	r7, r1
   11650:	mov	r0, r1
   11654:	mov	r1, r6
   11658:	bl	110ec <strcmp@plt>
   1165c:	mov	r4, r5
   11660:	cmn	r0, #1
   11664:	bgt	11670 <avl_remove_impl@@Base+0x40>
   11668:	ldr	r0, [r4, #4]!
   1166c:	b	1167c <avl_remove_impl@@Base+0x4c>
   11670:	cmp	r0, #0
   11674:	beq	11788 <avl_remove_impl@@Base+0x158>
   11678:	ldr	r0, [r4, #8]!
   1167c:	mov	r1, r7
   11680:	bl	11630 <avl_remove_impl@@Base>
   11684:	str	r0, [r4]
   11688:	ldr	r0, [r5, #4]
   1168c:	ldr	r1, [r5, #8]
   11690:	cmp	r0, #0
   11694:	ldrne	r2, [r0, #12]
   11698:	mvneq	r2, #0
   1169c:	cmp	r1, #0
   116a0:	beq	116c0 <avl_remove_impl@@Base+0x90>
   116a4:	ldr	r3, [r1, #12]
   116a8:	cmp	r2, r3
   116ac:	movgt	r3, r2
   116b0:	add	r2, r3, #1
   116b4:	str	r2, [r5, #12]
   116b8:	ldr	r2, [r1, #12]
   116bc:	b	116d0 <avl_remove_impl@@Base+0xa0>
   116c0:	orr	r2, r2, r2, asr #31
   116c4:	add	r2, r2, #1
   116c8:	str	r2, [r5, #12]
   116cc:	mvn	r2, #0
   116d0:	cmp	r0, #0
   116d4:	ldrne	r3, [r0, #12]
   116d8:	mvneq	r3, #0
   116dc:	sub	r2, r2, r3
   116e0:	cmp	r2, #2
   116e4:	blt	11730 <avl_remove_impl@@Base+0x100>
   116e8:	cmp	r1, #0
   116ec:	beq	11724 <avl_remove_impl@@Base+0xf4>
   116f0:	ldr	r3, [r1, #8]
   116f4:	mvn	r2, #0
   116f8:	mvn	r0, #0
   116fc:	cmp	r3, #0
   11700:	ldrne	r2, [r3, #12]
   11704:	ldr	r3, [r1, #4]
   11708:	cmp	r3, #0
   1170c:	ldrne	r0, [r3, #12]
   11710:	cmp	r2, r0
   11714:	bge	11724 <avl_remove_impl@@Base+0xf4>
   11718:	mov	r0, r1
   1171c:	bl	11bd0 <roda_direita@@Base>
   11720:	str	r0, [r5, #8]
   11724:	mov	r0, r5
   11728:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1172c:	b	11c34 <roda_esquerda@@Base>
   11730:	cmn	r2, #2
   11734:	bgt	1177c <avl_remove_impl@@Base+0x14c>
   11738:	cmp	r0, #0
   1173c:	beq	11770 <avl_remove_impl@@Base+0x140>
   11740:	ldr	r3, [r0, #8]
   11744:	mvn	r2, #0
   11748:	mvn	r1, #0
   1174c:	cmp	r3, #0
   11750:	ldrne	r2, [r3, #12]
   11754:	ldr	r3, [r0, #4]
   11758:	cmp	r3, #0
   1175c:	ldrne	r1, [r3, #12]
   11760:	cmp	r2, r1
   11764:	ble	11770 <avl_remove_impl@@Base+0x140>
   11768:	bl	11c34 <roda_esquerda@@Base>
   1176c:	str	r0, [r5, #4]
   11770:	mov	r0, r5
   11774:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11778:	b	11bd0 <roda_direita@@Base>
   1177c:	mov	r8, r5
   11780:	mov	r0, r8
   11784:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11788:	ldr	r0, [r4, #8]!
   1178c:	ldr	r7, [r4, #-4]
   11790:	cmp	r7, #0
   11794:	beq	117dc <avl_remove_impl@@Base+0x1ac>
   11798:	cmp	r0, #0
   1179c:	beq	117e8 <avl_remove_impl@@Base+0x1b8>
   117a0:	mov	r7, r0
   117a4:	ldr	r0, [r0, #4]
   117a8:	cmp	r0, #0
   117ac:	bne	117a0 <avl_remove_impl@@Base+0x170>
   117b0:	ldr	r0, [r7]
   117b4:	bl	1117c <strlen@plt>
   117b8:	add	r1, r0, #1
   117bc:	mov	r0, r6
   117c0:	bl	11134 <realloc@plt>
   117c4:	str	r0, [r5]
   117c8:	ldr	r1, [r7]
   117cc:	bl	11140 <strcpy@plt>
   117d0:	ldr	r0, [r5, #8]
   117d4:	ldr	r1, [r7]
   117d8:	b	11680 <avl_remove_impl@@Base+0x50>
   117dc:	cmp	r0, #0
   117e0:	mov	r7, r0
   117e4:	beq	11828 <avl_remove_impl@@Base+0x1f8>
   117e8:	ldr	r0, [r7]
   117ec:	bl	1117c <strlen@plt>
   117f0:	add	r1, r0, #1
   117f4:	mov	r0, r6
   117f8:	bl	11134 <realloc@plt>
   117fc:	str	r0, [r5]
   11800:	ldr	r1, [r7]
   11804:	bl	11140 <strcpy@plt>
   11808:	ldr	r0, [r7, #4]
   1180c:	str	r0, [r5, #4]
   11810:	ldr	r0, [r7, #8]
   11814:	str	r0, [r5, #8]
   11818:	ldr	r0, [r7, #12]
   1181c:	str	r0, [r5, #12]
   11820:	ldr	r6, [r7]
   11824:	b	11830 <avl_remove_impl@@Base+0x200>
   11828:	mov	r7, r5
   1182c:	mov	r5, #0
   11830:	mov	r0, r6
   11834:	bl	1111c <free@plt>
   11838:	mov	r0, r7
   1183c:	bl	1111c <free@plt>
   11840:	cmp	r5, #0
   11844:	bne	11688 <avl_remove_impl@@Base+0x58>
   11848:	b	11780 <avl_remove_impl@@Base+0x150>

0001184c <avl_pesquisa@@Base>:
   1184c:	cmp	r0, #0
   11850:	cmpne	r1, #0
   11854:	bne	11860 <avl_pesquisa@@Base+0x14>
   11858:	mov	r0, #0
   1185c:	bx	lr
   11860:	ldr	r0, [r0]
   11864:	b	11868 <avl_pesquisa_impl@@Base>

00011868 <avl_pesquisa_impl@@Base>:
   11868:	push	{r4, r5, r6, sl, fp, lr}
   1186c:	add	fp, sp, #16
   11870:	mov	r4, #0
   11874:	cmp	r0, #0
   11878:	beq	118c0 <avl_pesquisa_impl@@Base+0x58>
   1187c:	mov	r5, r1
   11880:	mov	r6, r0
   11884:	ldr	r1, [r6]
   11888:	mov	r0, r5
   1188c:	bl	110ec <strcmp@plt>
   11890:	cmn	r0, #1
   11894:	bgt	118a0 <avl_pesquisa_impl@@Base+0x38>
   11898:	add	r0, r6, #4
   1189c:	b	118ac <avl_pesquisa_impl@@Base+0x44>
   118a0:	cmp	r0, #0
   118a4:	beq	118bc <avl_pesquisa_impl@@Base+0x54>
   118a8:	add	r0, r6, #8
   118ac:	ldr	r6, [r0]
   118b0:	cmp	r6, #0
   118b4:	bne	11884 <avl_pesquisa_impl@@Base+0x1c>
   118b8:	b	118c0 <avl_pesquisa_impl@@Base+0x58>
   118bc:	mov	r4, r6
   118c0:	mov	r0, r4
   118c4:	pop	{r4, r5, r6, sl, fp, pc}

000118c8 <avl_insere@@Base>:
   118c8:	push	{r4, sl, fp, lr}
   118cc:	add	fp, sp, #8
   118d0:	mov	r4, r0
   118d4:	mvn	r0, #0
   118d8:	cmp	r4, #0
   118dc:	cmpne	r1, #0
   118e0:	bne	118e8 <avl_insere@@Base+0x20>
   118e4:	pop	{r4, sl, fp, pc}
   118e8:	ldr	r0, [r4]
   118ec:	bl	118fc <avl_insere_impl@@Base>
   118f0:	str	r0, [r4]
   118f4:	mov	r0, #0
   118f8:	pop	{r4, sl, fp, pc}

000118fc <avl_insere_impl@@Base>:
   118fc:	push	{r4, r5, fp, lr}
   11900:	add	fp, sp, #8
   11904:	mov	r5, r1
   11908:	cmp	r0, #0
   1190c:	beq	1193c <avl_insere_impl@@Base+0x40>
   11910:	ldr	r1, [r0]
   11914:	mov	r4, r0
   11918:	mov	r0, r5
   1191c:	bl	110ec <strcmp@plt>
   11920:	cmn	r0, #1
   11924:	bgt	11948 <avl_insere_impl@@Base+0x4c>
   11928:	ldr	r0, [r4, #4]
   1192c:	mov	r1, r5
   11930:	bl	118fc <avl_insere_impl@@Base>
   11934:	str	r0, [r4, #4]
   11938:	b	11964 <avl_insere_impl@@Base+0x68>
   1193c:	mov	r0, r5
   11940:	pop	{r4, r5, fp, lr}
   11944:	b	11b84 <avl_novo_no@@Base>
   11948:	cmp	r0, #0
   1194c:	beq	11a54 <avl_insere_impl@@Base+0x158>
   11950:	ldr	r0, [r4, #8]
   11954:	mov	r1, r5
   11958:	bl	118fc <avl_insere_impl@@Base>
   1195c:	str	r0, [r4, #8]
   11960:	ldr	r0, [r4, #4]
   11964:	cmp	r0, #0
   11968:	ldr	r1, [r4, #8]
   1196c:	ldrne	r2, [r0, #12]
   11970:	mvneq	r2, #0
   11974:	cmp	r1, #0
   11978:	beq	11998 <avl_insere_impl@@Base+0x9c>
   1197c:	ldr	r3, [r1, #12]
   11980:	cmp	r2, r3
   11984:	movgt	r3, r2
   11988:	add	r2, r3, #1
   1198c:	str	r2, [r4, #12]
   11990:	ldr	r2, [r1, #12]
   11994:	b	119a8 <avl_insere_impl@@Base+0xac>
   11998:	orr	r2, r2, r2, asr #31
   1199c:	add	r2, r2, #1
   119a0:	str	r2, [r4, #12]
   119a4:	mvn	r2, #0
   119a8:	cmp	r0, #0
   119ac:	ldrne	r3, [r0, #12]
   119b0:	mvneq	r3, #0
   119b4:	sub	r2, r2, r3
   119b8:	cmp	r2, #2
   119bc:	blt	11a08 <avl_insere_impl@@Base+0x10c>
   119c0:	cmp	r1, #0
   119c4:	beq	119fc <avl_insere_impl@@Base+0x100>
   119c8:	ldr	r3, [r1, #8]
   119cc:	mvn	r2, #0
   119d0:	mvn	r0, #0
   119d4:	cmp	r3, #0
   119d8:	ldrne	r2, [r3, #12]
   119dc:	ldr	r3, [r1, #4]
   119e0:	cmp	r3, #0
   119e4:	ldrne	r0, [r3, #12]
   119e8:	cmp	r2, r0
   119ec:	bge	119fc <avl_insere_impl@@Base+0x100>
   119f0:	mov	r0, r1
   119f4:	bl	11bd0 <roda_direita@@Base>
   119f8:	str	r0, [r4, #8]
   119fc:	mov	r0, r4
   11a00:	pop	{r4, r5, fp, lr}
   11a04:	b	11c34 <roda_esquerda@@Base>
   11a08:	cmn	r2, #2
   11a0c:	bgt	11a54 <avl_insere_impl@@Base+0x158>
   11a10:	cmp	r0, #0
   11a14:	beq	11a48 <avl_insere_impl@@Base+0x14c>
   11a18:	ldr	r3, [r0, #8]
   11a1c:	mvn	r2, #0
   11a20:	mvn	r1, #0
   11a24:	cmp	r3, #0
   11a28:	ldrne	r2, [r3, #12]
   11a2c:	ldr	r3, [r0, #4]
   11a30:	cmp	r3, #0
   11a34:	ldrne	r1, [r3, #12]
   11a38:	cmp	r2, r1
   11a3c:	ble	11a48 <avl_insere_impl@@Base+0x14c>
   11a40:	bl	11c34 <roda_esquerda@@Base>
   11a44:	str	r0, [r4, #4]
   11a48:	mov	r0, r4
   11a4c:	pop	{r4, r5, fp, lr}
   11a50:	b	11bd0 <roda_direita@@Base>
   11a54:	mov	r0, r4
   11a58:	pop	{r4, r5, fp, pc}

00011a5c <avl_remove@@Base>:
   11a5c:	push	{r4, sl, fp, lr}
   11a60:	add	fp, sp, #8
   11a64:	mov	r4, r0
   11a68:	mvn	r0, #0
   11a6c:	cmp	r4, #0
   11a70:	cmpne	r1, #0
   11a74:	bne	11a7c <avl_remove@@Base+0x20>
   11a78:	pop	{r4, sl, fp, pc}
   11a7c:	ldr	r0, [r4]
   11a80:	bl	11630 <avl_remove_impl@@Base>
   11a84:	str	r0, [r4]
   11a88:	mov	r0, #0
   11a8c:	pop	{r4, sl, fp, pc}

00011a90 <avl_min@@Base>:
   11a90:	cmp	r0, #0
   11a94:	moveq	r0, #0
   11a98:	bxeq	lr
   11a9c:	mov	r1, r0
   11aa0:	ldr	r0, [r0, #4]
   11aa4:	cmp	r0, #0
   11aa8:	bne	11a9c <avl_min@@Base+0xc>
   11aac:	ldr	r0, [r1]
   11ab0:	bx	lr

00011ab4 <avl_no_valormin@@Base>:
   11ab4:	mov	r1, r0
   11ab8:	ldr	r0, [r0, #4]
   11abc:	cmp	r0, #0
   11ac0:	bne	11ab4 <avl_no_valormin@@Base>
   11ac4:	mov	r0, r1
   11ac8:	bx	lr

00011acc <avl_max@@Base>:
   11acc:	cmp	r0, #0
   11ad0:	moveq	r0, #0
   11ad4:	bxeq	lr
   11ad8:	mov	r1, r0
   11adc:	ldr	r0, [r0, #8]
   11ae0:	cmp	r0, #0
   11ae4:	bne	11ad8 <avl_max@@Base+0xc>
   11ae8:	ldr	r0, [r1]
   11aec:	bx	lr

00011af0 <avl_no_valormax@@Base>:
   11af0:	mov	r1, r0
   11af4:	ldr	r0, [r0, #8]
   11af8:	cmp	r0, #0
   11afc:	bne	11af0 <avl_no_valormax@@Base>
   11b00:	mov	r0, r1
   11b04:	bx	lr

00011b08 <avl_imprime@@Base>:
   11b08:	cmp	r0, #0
   11b0c:	bxeq	lr
   11b10:	push	{fp, lr}
   11b14:	mov	fp, sp
   11b18:	bl	11b28 <avl_preordem_impl@@Base>
   11b1c:	mov	r0, #10
   11b20:	pop	{fp, lr}
   11b24:	b	11188 <putchar@plt>

00011b28 <avl_preordem_impl@@Base>:
   11b28:	push	{r4, r5, fp, lr}
   11b2c:	add	fp, sp, #8
   11b30:	cmp	r0, #0
   11b34:	popeq	{r4, r5, fp, pc}
   11b38:	movw	r5, #10164	; 0x27b4
   11b3c:	mov	r4, r0
   11b40:	movt	r5, #1
   11b44:	ldr	r1, [r4]
   11b48:	mov	r0, r5
   11b4c:	bl	110f8 <printf@plt>
   11b50:	ldr	r0, [r4, #4]
   11b54:	bl	11b28 <avl_preordem_impl@@Base>
   11b58:	ldr	r4, [r4, #8]
   11b5c:	cmp	r4, #0
   11b60:	bne	11b44 <avl_preordem_impl@@Base+0x1c>
   11b64:	pop	{r4, r5, fp, pc}

00011b68 <avl_altura@@Base>:
   11b68:	cmp	r0, #0
   11b6c:	ldrne	r0, [r0, #12]
   11b70:	mvneq	r0, #0
   11b74:	bx	lr

00011b78 <max@@Base>:
   11b78:	cmp	r0, r1
   11b7c:	movle	r0, r1
   11b80:	bx	lr

00011b84 <avl_novo_no@@Base>:
   11b84:	push	{r4, r5, fp, lr}
   11b88:	add	fp, sp, #8
   11b8c:	mov	r4, r0
   11b90:	mov	r0, #16
   11b94:	bl	11158 <malloc@plt>
   11b98:	mov	r5, r0
   11b9c:	mov	r0, r4
   11ba0:	bl	1117c <strlen@plt>
   11ba4:	add	r0, r0, #1
   11ba8:	bl	11158 <malloc@plt>
   11bac:	mov	r1, r4
   11bb0:	str	r0, [r5]
   11bb4:	bl	11140 <strcpy@plt>
   11bb8:	mov	r0, #0
   11bbc:	str	r0, [r5, #4]
   11bc0:	str	r0, [r5, #8]
   11bc4:	str	r0, [r5, #12]
   11bc8:	mov	r0, r5
   11bcc:	pop	{r4, r5, fp, pc}

00011bd0 <roda_direita@@Base>:
   11bd0:	mov	r1, r0
   11bd4:	ldr	r0, [r0, #4]
   11bd8:	mvn	ip, #0
   11bdc:	mvn	r2, #0
   11be0:	ldr	r3, [r0, #8]
   11be4:	str	r1, [r0, #8]
   11be8:	str	r3, [r1, #4]
   11bec:	cmp	r3, #0
   11bf0:	ldrne	ip, [r3, #12]
   11bf4:	ldr	r3, [r1, #8]
   11bf8:	cmp	r3, #0
   11bfc:	ldrne	r2, [r3, #12]
   11c00:	cmp	ip, r2
   11c04:	movgt	r2, ip
   11c08:	add	r2, r2, #1
   11c0c:	str	r2, [r1, #12]
   11c10:	ldr	r1, [r0, #4]
   11c14:	cmp	r1, #0
   11c18:	ldrne	r1, [r1, #12]
   11c1c:	mvneq	r1, #0
   11c20:	cmp	r1, r2
   11c24:	movgt	r2, r1
   11c28:	add	r1, r2, #1
   11c2c:	str	r1, [r0, #12]
   11c30:	bx	lr

00011c34 <roda_esquerda@@Base>:
   11c34:	push	{fp, lr}
   11c38:	mov	fp, sp
   11c3c:	mov	r1, r0
   11c40:	ldr	r0, [r0, #8]
   11c44:	mvn	r3, #0
   11c48:	mvn	r2, #0
   11c4c:	ldr	ip, [r0, #4]
   11c50:	str	r1, [r0, #4]
   11c54:	str	ip, [r1, #8]
   11c58:	ldr	lr, [r1, #4]
   11c5c:	cmp	lr, #0
   11c60:	ldrne	r3, [lr, #12]
   11c64:	cmp	ip, #0
   11c68:	ldrne	r2, [ip, #12]
   11c6c:	cmp	r3, r2
   11c70:	movgt	r2, r3
   11c74:	add	r2, r2, #1
   11c78:	str	r2, [r1, #12]
   11c7c:	ldr	r1, [r0, #8]
   11c80:	cmp	r1, #0
   11c84:	ldrne	r1, [r1, #12]
   11c88:	mvneq	r1, #0
   11c8c:	cmp	r2, r1
   11c90:	movgt	r1, r2
   11c94:	add	r1, r1, #1
   11c98:	str	r1, [r0, #12]
   11c9c:	pop	{fp, pc}

00011ca0 <calc_balanceamento@@Base>:
   11ca0:	cmp	r0, #0
   11ca4:	moveq	r0, #0
   11ca8:	bxeq	lr
   11cac:	ldr	r3, [r0, #8]
   11cb0:	ldr	r0, [r0, #4]
   11cb4:	mvn	r2, #0
   11cb8:	mvn	r1, #0
   11cbc:	cmp	r3, #0
   11cc0:	ldrne	r2, [r3, #12]
   11cc4:	cmp	r0, #0
   11cc8:	ldrne	r1, [r0, #12]
   11ccc:	sub	r0, r2, r1
   11cd0:	bx	lr

00011cd4 <novo_str@@Base>:
   11cd4:	push	{r4, r5, r6, sl, fp, lr}
   11cd8:	add	fp, sp, #16
   11cdc:	mov	r6, r0
   11ce0:	mov	r0, #12
   11ce4:	bl	11158 <malloc@plt>
   11ce8:	mov	r5, #0
   11cec:	cmp	r0, #0
   11cf0:	beq	11d38 <novo_str@@Base+0x64>
   11cf4:	mov	r4, r0
   11cf8:	mov	r0, r6
   11cfc:	bl	1117c <strlen@plt>
   11d00:	add	r0, r0, #1
   11d04:	bl	11158 <malloc@plt>
   11d08:	cmp	r0, #0
   11d0c:	str	r0, [r4]
   11d10:	beq	11d30 <novo_str@@Base+0x5c>
   11d14:	mov	r1, r6
   11d18:	bl	11140 <strcpy@plt>
   11d1c:	mov	r0, #0
   11d20:	mov	r5, r4
   11d24:	str	r0, [r4, #4]
   11d28:	str	r0, [r4, #8]
   11d2c:	b	11d38 <novo_str@@Base+0x64>
   11d30:	mov	r0, r4
   11d34:	bl	1111c <free@plt>
   11d38:	mov	r0, r5
   11d3c:	pop	{r4, r5, r6, sl, fp, pc}

00011d40 <lista_nova@@Base>:
   11d40:	push	{fp, lr}
   11d44:	mov	fp, sp
   11d48:	mov	r0, #12
   11d4c:	bl	11158 <malloc@plt>
   11d50:	cmp	r0, #0
   11d54:	movne	r1, #0
   11d58:	strne	r1, [r0]
   11d5c:	strne	r1, [r0, #4]
   11d60:	strne	r1, [r0, #8]
   11d64:	popne	{fp, pc}
   11d68:	mov	r0, #0
   11d6c:	pop	{fp, pc}

00011d70 <lista_apaga@@Base>:
   11d70:	cmp	r0, #0
   11d74:	bxeq	lr
   11d78:	push	{r4, r5, fp, lr}
   11d7c:	add	fp, sp, #8
   11d80:	mov	r4, r0
   11d84:	b	11da0 <lista_apaga@@Base+0x30>
   11d88:	ldr	r0, [r5, #4]
   11d8c:	str	r0, [r4]
   11d90:	ldr	r0, [r5]
   11d94:	bl	1111c <free@plt>
   11d98:	mov	r0, r5
   11d9c:	bl	1111c <free@plt>
   11da0:	ldr	r5, [r4]
   11da4:	cmp	r5, #0
   11da8:	bne	11d88 <lista_apaga@@Base+0x18>
   11dac:	mov	r0, r4
   11db0:	pop	{r4, r5, fp, lr}
   11db4:	b	1111c <free@plt>

00011db8 <lista_tamanho@@Base>:
   11db8:	cmp	r0, #0
   11dbc:	ldrne	r0, [r0, #8]
   11dc0:	mvneq	r0, #0
   11dc4:	bx	lr

00011dc8 <lista_inicio@@Base>:
   11dc8:	cmp	r0, #0
   11dcc:	ldrne	r0, [r0]
   11dd0:	moveq	r0, #0
   11dd4:	bx	lr

00011dd8 <lista_fim@@Base>:
   11dd8:	cmp	r0, #0
   11ddc:	ldrne	r0, [r0, #4]
   11de0:	moveq	r0, #0
   11de4:	bx	lr

00011de8 <lista_insere@@Base>:
   11de8:	push	{r4, r5, r6, sl, fp, lr}
   11dec:	add	fp, sp, #16
   11df0:	cmp	r0, #0
   11df4:	mov	r6, #0
   11df8:	cmpne	r1, #0
   11dfc:	bne	11e08 <lista_insere@@Base+0x20>
   11e00:	mov	r0, r6
   11e04:	pop	{r4, r5, r6, sl, fp, pc}
   11e08:	mov	r4, r0
   11e0c:	mov	r0, r1
   11e10:	mov	r5, r2
   11e14:	bl	11cd4 <novo_str@@Base>
   11e18:	cmp	r0, #0
   11e1c:	beq	11e00 <lista_insere@@Base+0x18>
   11e20:	ldr	r2, [r4, #8]
   11e24:	ldr	r1, [r4]
   11e28:	cmp	r5, #0
   11e2c:	add	r2, r2, #1
   11e30:	str	r2, [r4, #8]
   11e34:	beq	11e58 <lista_insere@@Base+0x70>
   11e38:	cmp	r1, r5
   11e3c:	beq	11e70 <lista_insere@@Base+0x88>
   11e40:	ldr	r1, [r5, #8]
   11e44:	str	r5, [r0, #4]
   11e48:	str	r1, [r0, #8]
   11e4c:	str	r0, [r1, #4]
   11e50:	str	r0, [r5, #8]
   11e54:	b	11e88 <lista_insere@@Base+0xa0>
   11e58:	cmp	r1, #0
   11e5c:	beq	11e80 <lista_insere@@Base+0x98>
   11e60:	ldr	r1, [r4, #4]
   11e64:	str	r1, [r0, #8]
   11e68:	str	r0, [r1, #4]
   11e6c:	b	11e84 <lista_insere@@Base+0x9c>
   11e70:	str	r5, [r0, #4]
   11e74:	str	r0, [r5, #8]
   11e78:	str	r0, [r4]
   11e7c:	b	11e88 <lista_insere@@Base+0xa0>
   11e80:	str	r0, [r4]
   11e84:	str	r0, [r4, #4]
   11e88:	mov	r6, r0
   11e8c:	b	11e00 <lista_insere@@Base+0x18>

00011e90 <lista_remove@@Base>:
   11e90:	push	{r4, r5, fp, lr}
   11e94:	add	fp, sp, #8
   11e98:	cmp	r0, #0
   11e9c:	mov	r4, #0
   11ea0:	movne	r5, r1
   11ea4:	cmpne	r1, #0
   11ea8:	beq	11ef0 <lista_remove@@Base+0x60>
   11eac:	ldr	r1, [r0, #8]
   11eb0:	sub	r1, r1, #1
   11eb4:	str	r1, [r0, #8]
   11eb8:	ldr	r1, [r5, #8]
   11ebc:	ldr	r4, [r5, #4]
   11ec0:	cmp	r1, #0
   11ec4:	streq	r4, [r0]
   11ec8:	strne	r4, [r1, #4]
   11ecc:	ldrne	r4, [r5, #4]
   11ed0:	add	r2, r4, #8
   11ed4:	cmp	r4, #0
   11ed8:	addeq	r2, r0, #4
   11edc:	str	r1, [r2]
   11ee0:	ldr	r0, [r5]
   11ee4:	bl	1111c <free@plt>
   11ee8:	mov	r0, r5
   11eec:	bl	1111c <free@plt>
   11ef0:	mov	r0, r4
   11ef4:	pop	{r4, r5, fp, pc}

00011ef8 <lista_pesquisa@@Base>:
   11ef8:	push	{r4, r5, r6, sl, fp, lr}
   11efc:	add	fp, sp, #16
   11f00:	cmp	r0, #0
   11f04:	mov	r4, #0
   11f08:	movne	r5, r1
   11f0c:	cmpne	r1, #0
   11f10:	bne	11f1c <lista_pesquisa@@Base+0x24>
   11f14:	mov	r0, r4
   11f18:	pop	{r4, r5, r6, sl, fp, pc}
   11f1c:	cmp	r2, #1
   11f20:	bhi	11f14 <lista_pesquisa@@Base+0x1c>
   11f24:	cmp	r2, #0
   11f28:	beq	11f58 <lista_pesquisa@@Base+0x60>
   11f2c:	ldr	r6, [r0, #4]
   11f30:	b	11f4c <lista_pesquisa@@Base+0x54>
   11f34:	ldr	r0, [r6]
   11f38:	mov	r1, r5
   11f3c:	bl	110ec <strcmp@plt>
   11f40:	cmp	r0, #0
   11f44:	beq	11f84 <lista_pesquisa@@Base+0x8c>
   11f48:	ldr	r6, [r6, #8]
   11f4c:	cmp	r6, #0
   11f50:	bne	11f34 <lista_pesquisa@@Base+0x3c>
   11f54:	b	11f14 <lista_pesquisa@@Base+0x1c>
   11f58:	ldr	r6, [r0]
   11f5c:	b	11f78 <lista_pesquisa@@Base+0x80>
   11f60:	ldr	r0, [r6]
   11f64:	mov	r1, r5
   11f68:	bl	110ec <strcmp@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	11f84 <lista_pesquisa@@Base+0x8c>
   11f74:	ldr	r6, [r6, #4]
   11f78:	cmp	r6, #0
   11f7c:	bne	11f60 <lista_pesquisa@@Base+0x68>
   11f80:	b	11f14 <lista_pesquisa@@Base+0x1c>
   11f84:	mov	r4, r6
   11f88:	b	11f14 <lista_pesquisa@@Base+0x1c>

00011f8c <lista_ordena@@Base>:
   11f8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11f90:	add	fp, sp, #24
   11f94:	cmp	r0, #0
   11f98:	beq	12014 <lista_ordena@@Base+0x88>
   11f9c:	ldr	r1, [r0, #8]
   11fa0:	mov	r8, #0
   11fa4:	cmp	r1, #0
   11fa8:	beq	12018 <lista_ordena@@Base+0x8c>
   11fac:	ldr	r0, [r0]
   11fb0:	b	12000 <lista_ordena@@Base+0x74>
   11fb4:	mov	r9, r0
   11fb8:	mov	r7, r0
   11fbc:	mov	r6, r4
   11fc0:	ldr	r1, [r7]
   11fc4:	ldr	r0, [r6]
   11fc8:	bl	110ec <strcmp@plt>
   11fcc:	cmp	r0, #0
   11fd0:	movlt	r7, r6
   11fd4:	ldr	r6, [r6, #4]
   11fd8:	cmp	r6, #0
   11fdc:	bne	11fc0 <lista_ordena@@Base+0x34>
   11fe0:	cmp	r7, r9
   11fe4:	mov	r0, r4
   11fe8:	beq	12000 <lista_ordena@@Base+0x74>
   11fec:	ldr	r0, [r9]
   11ff0:	ldr	r1, [r7]
   11ff4:	str	r1, [r9]
   11ff8:	str	r0, [r7]
   11ffc:	ldr	r0, [r5]
   12000:	mov	r5, r0
   12004:	ldr	r4, [r5, #4]!
   12008:	cmp	r4, #0
   1200c:	bne	11fb4 <lista_ordena@@Base+0x28>
   12010:	b	12018 <lista_ordena@@Base+0x8c>
   12014:	mvn	r8, #0
   12018:	mov	r0, r8
   1201c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012020 <lista_inverte@@Base>:
   12020:	cmp	r0, #0
   12024:	beq	12044 <lista_inverte@@Base+0x24>
   12028:	ldr	r2, [r0, #8]
   1202c:	mov	r1, #0
   12030:	cmp	r2, #2
   12034:	blt	120b8 <lista_inverte@@Base+0x98>
   12038:	bne	1204c <lista_inverte@@Base+0x2c>
   1203c:	ldr	r2, [r0]
   12040:	b	12094 <lista_inverte@@Base+0x74>
   12044:	mvn	r1, #0
   12048:	b	120b8 <lista_inverte@@Base+0x98>
   1204c:	push	{fp, lr}
   12050:	mov	fp, sp
   12054:	ldr	ip, [r0]
   12058:	sub	r1, r2, #2
   1205c:	ldr	r3, [ip, #4]
   12060:	mov	r2, r3
   12064:	ldr	r3, [r3, #4]
   12068:	subs	r1, r1, #1
   1206c:	ldr	lr, [r2, #8]
   12070:	str	r3, [lr, #4]
   12074:	ldr	r3, [r2, #4]
   12078:	str	lr, [r3, #8]
   1207c:	str	ip, [r2, #4]
   12080:	str	r2, [ip, #8]
   12084:	mov	ip, r2
   12088:	bne	12060 <lista_inverte@@Base+0x40>
   1208c:	str	r2, [r0]
   12090:	pop	{fp, lr}
   12094:	ldr	r3, [r0, #4]
   12098:	mov	r1, #0
   1209c:	ldr	ip, [r3, #8]
   120a0:	str	ip, [r0, #4]
   120a4:	str	r1, [ip, #4]
   120a8:	str	r2, [r3, #4]
   120ac:	str	r1, [r3, #8]
   120b0:	str	r3, [r2, #8]
   120b4:	str	r3, [r0]
   120b8:	mov	r0, r1
   120bc:	bx	lr

000120c0 <tabela_nova@@Base>:
   120c0:	push	{r4, r5, r6, r7, fp, lr}
   120c4:	add	fp, sp, #16
   120c8:	mov	r4, #0
   120cc:	cmp	r0, #1
   120d0:	blt	12128 <tabela_nova@@Base+0x68>
   120d4:	mov	r6, r1
   120d8:	cmp	r1, #0
   120dc:	beq	12128 <tabela_nova@@Base+0x68>
   120e0:	mov	r5, r0
   120e4:	mov	r0, #12
   120e8:	bl	11158 <malloc@plt>
   120ec:	cmp	r0, #0
   120f0:	beq	12128 <tabela_nova@@Base+0x68>
   120f4:	mov	r7, r0
   120f8:	mov	r0, r5
   120fc:	mov	r1, #4
   12100:	bl	110e0 <calloc@plt>
   12104:	cmp	r0, #0
   12108:	str	r0, [r7, #4]
   1210c:	beq	12120 <tabela_nova@@Base+0x60>
   12110:	mov	r4, r7
   12114:	str	r6, [r7]
   12118:	str	r5, [r7, #8]
   1211c:	b	12128 <tabela_nova@@Base+0x68>
   12120:	mov	r0, r7
   12124:	bl	1111c <free@plt>
   12128:	mov	r0, r4
   1212c:	pop	{r4, r5, r6, r7, fp, pc}

00012130 <tabela_apaga@@Base>:
   12130:	cmp	r0, #0
   12134:	bxeq	lr
   12138:	push	{r4, r5, r6, r7, fp, lr}
   1213c:	add	fp, sp, #16
   12140:	mov	r4, r0
   12144:	ldr	r0, [r0, #4]
   12148:	ldr	r1, [r4, #8]
   1214c:	cmp	r1, #1
   12150:	blt	12190 <tabela_apaga@@Base+0x60>
   12154:	mov	r6, #0
   12158:	ldr	r5, [r0, r6, lsl #2]
   1215c:	cmp	r5, #0
   12160:	beq	12184 <tabela_apaga@@Base+0x54>
   12164:	ldm	r5, {r0, r7}
   12168:	bl	1111c <free@plt>
   1216c:	mov	r0, r5
   12170:	bl	1111c <free@plt>
   12174:	cmp	r7, #0
   12178:	mov	r5, r7
   1217c:	bne	12164 <tabela_apaga@@Base+0x34>
   12180:	ldmib	r4, {r0, r1}
   12184:	add	r6, r6, #1
   12188:	cmp	r6, r1
   1218c:	blt	12158 <tabela_apaga@@Base+0x28>
   12190:	bl	1111c <free@plt>
   12194:	mov	r0, r4
   12198:	pop	{r4, r5, r6, r7, fp, lr}
   1219c:	b	1111c <free@plt>

000121a0 <tabela_adiciona@@Base>:
   121a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121a4:	add	fp, sp, #28
   121a8:	sub	sp, sp, #4
   121ac:	mvn	r8, #1
   121b0:	cmp	r0, #0
   121b4:	beq	121cc <tabela_adiciona@@Base+0x2c>
   121b8:	cmp	r1, #0
   121bc:	mov	r7, r1
   121c0:	movne	r9, r2
   121c4:	cmpne	r2, #0
   121c8:	bne	121d8 <tabela_adiciona@@Base+0x38>
   121cc:	mov	r0, r8
   121d0:	sub	sp, fp, #28
   121d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121d8:	ldr	r2, [r0]
   121dc:	ldr	r1, [r0, #8]
   121e0:	mov	r6, r0
   121e4:	mov	r0, r7
   121e8:	blx	r2
   121ec:	mov	sl, r0
   121f0:	ldr	r0, [r6, #4]
   121f4:	ldr	r4, [r0, sl, lsl #2]
   121f8:	b	12218 <tabela_adiciona@@Base+0x78>
   121fc:	ldr	r5, [r4]
   12200:	mov	r1, r7
   12204:	mov	r0, r5
   12208:	bl	110ec <strcmp@plt>
   1220c:	cmp	r0, #0
   12210:	beq	12278 <tabela_adiciona@@Base+0xd8>
   12214:	ldr	r4, [r4, #4]
   12218:	cmp	r4, #0
   1221c:	bne	121fc <tabela_adiciona@@Base+0x5c>
   12220:	mov	r0, #8
   12224:	mov	r4, sl
   12228:	bl	11158 <malloc@plt>
   1222c:	cmp	r0, #0
   12230:	beq	121cc <tabela_adiciona@@Base+0x2c>
   12234:	mov	sl, r0
   12238:	mov	r0, #125	; 0x7d
   1223c:	bl	11158 <malloc@plt>
   12240:	cmp	r0, #0
   12244:	str	r0, [sl]
   12248:	beq	121cc <tabela_adiciona@@Base+0x2c>
   1224c:	mov	r1, r7
   12250:	mov	r5, r0
   12254:	bl	11140 <strcpy@plt>
   12258:	add	r0, r5, #25
   1225c:	mov	r1, r9
   12260:	bl	11140 <strcpy@plt>
   12264:	ldr	r0, [r6, #4]
   12268:	ldr	r1, [r0, r4, lsl #2]
   1226c:	str	r1, [sl, #4]
   12270:	str	sl, [r0, r4, lsl #2]
   12274:	b	12284 <tabela_adiciona@@Base+0xe4>
   12278:	add	r0, r5, #25
   1227c:	mov	r1, r9
   12280:	bl	11140 <strcpy@plt>
   12284:	mov	r8, #0
   12288:	b	121cc <tabela_adiciona@@Base+0x2c>

0001228c <tabela_remove@@Base>:
   1228c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12290:	add	fp, sp, #28
   12294:	sub	sp, sp, #4
   12298:	cmp	r0, #0
   1229c:	beq	1231c <tabela_remove@@Base+0x90>
   122a0:	mov	r6, r1
   122a4:	ldr	r2, [r0]
   122a8:	ldr	r1, [r0, #8]
   122ac:	mov	r4, r0
   122b0:	mov	r0, r6
   122b4:	blx	r2
   122b8:	ldr	r9, [r4, #4]
   122bc:	mvn	sl, #2
   122c0:	ldr	r7, [r9, r0, lsl #2]
   122c4:	cmp	r7, #0
   122c8:	beq	12350 <tabela_remove@@Base+0xc4>
   122cc:	ldr	r5, [r7]
   122d0:	mov	r8, r0
   122d4:	mov	r1, r6
   122d8:	mov	r0, r5
   122dc:	bl	110ec <strcmp@plt>
   122e0:	cmp	r0, #0
   122e4:	beq	12324 <tabela_remove@@Base+0x98>
   122e8:	mov	r4, r7
   122ec:	ldr	r7, [r4, #4]
   122f0:	cmp	r7, #0
   122f4:	beq	12350 <tabela_remove@@Base+0xc4>
   122f8:	ldr	r5, [r7]
   122fc:	mov	r1, r6
   12300:	mov	r0, r5
   12304:	bl	110ec <strcmp@plt>
   12308:	cmp	r0, #0
   1230c:	mov	r0, r4
   12310:	mov	r4, r7
   12314:	bne	122ec <tabela_remove@@Base+0x60>
   12318:	b	12328 <tabela_remove@@Base+0x9c>
   1231c:	mvn	sl, #1
   12320:	b	12350 <tabela_remove@@Base+0xc4>
   12324:	mov	r0, #0
   12328:	ldr	r1, [r7, #4]
   1232c:	cmp	r0, #0
   12330:	streq	r1, [r9, r8, lsl #2]
   12334:	ldreq	r5, [r7]
   12338:	strne	r1, [r0, #4]
   1233c:	mov	r0, r5
   12340:	bl	1111c <free@plt>
   12344:	mov	r0, r7
   12348:	bl	1111c <free@plt>
   1234c:	mov	sl, #0
   12350:	mov	r0, sl
   12354:	sub	sp, fp, #28
   12358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001235c <tabela_existe@@Base>:
   1235c:	mov	r2, r0
   12360:	mvn	r0, #1
   12364:	cmp	r2, #0
   12368:	cmpne	r1, #0
   1236c:	bne	12374 <tabela_existe@@Base+0x18>
   12370:	bx	lr
   12374:	push	{fp, lr}
   12378:	mov	fp, sp
   1237c:	mov	r0, r2
   12380:	bl	1239c <tabela_valor@@Base>
   12384:	mov	r1, r0
   12388:	mov	r0, #1
   1238c:	cmp	r1, #0
   12390:	mvneq	r0, #2
   12394:	pop	{fp, lr}
   12398:	bx	lr

0001239c <tabela_valor@@Base>:
   1239c:	push	{r4, r5, r6, r7, fp, lr}
   123a0:	add	fp, sp, #16
   123a4:	mov	r4, #0
   123a8:	cmp	r0, #0
   123ac:	beq	12400 <tabela_valor@@Base+0x64>
   123b0:	mov	r5, r1
   123b4:	ldr	r2, [r0]
   123b8:	ldr	r1, [r0, #8]
   123bc:	mov	r6, r0
   123c0:	mov	r0, r5
   123c4:	blx	r2
   123c8:	ldr	r1, [r6, #4]
   123cc:	ldr	r7, [r1, r0, lsl #2]
   123d0:	b	123f0 <tabela_valor@@Base+0x54>
   123d4:	ldr	r6, [r7]
   123d8:	mov	r1, r5
   123dc:	mov	r0, r6
   123e0:	bl	110ec <strcmp@plt>
   123e4:	cmp	r0, #0
   123e8:	beq	123fc <tabela_valor@@Base+0x60>
   123ec:	ldr	r7, [r7, #4]
   123f0:	cmp	r7, #0
   123f4:	bne	123d4 <tabela_valor@@Base+0x38>
   123f8:	b	12400 <tabela_valor@@Base+0x64>
   123fc:	add	r4, r6, #25
   12400:	mov	r0, r4
   12404:	pop	{r4, r5, r6, r7, fp, pc}

00012408 <tabela_esvazia@@Base>:
   12408:	push	{r4, r5, r6, r7, fp, lr}
   1240c:	add	fp, sp, #16
   12410:	cmp	r0, #0
   12414:	mvneq	r0, #1
   12418:	popeq	{r4, r5, r6, r7, fp, pc}
   1241c:	ldr	r1, [r0, #8]
   12420:	mov	r4, r0
   12424:	cmp	r1, #1
   12428:	movlt	r0, #0
   1242c:	poplt	{r4, r5, r6, r7, fp, pc}
   12430:	mov	r6, #0
   12434:	ldr	r2, [r4, #4]
   12438:	ldr	r5, [r2, r6, lsl #2]!
   1243c:	cmp	r5, #0
   12440:	beq	12468 <tabela_esvazia@@Base+0x60>
   12444:	ldm	r5, {r0, r7}
   12448:	bl	1111c <free@plt>
   1244c:	mov	r0, r5
   12450:	bl	1111c <free@plt>
   12454:	cmp	r7, #0
   12458:	mov	r5, r7
   1245c:	bne	12444 <tabela_esvazia@@Base+0x3c>
   12460:	ldmib	r4, {r0, r1}
   12464:	add	r2, r0, r6, lsl #2
   12468:	add	r6, r6, #1
   1246c:	mov	r0, #0
   12470:	cmp	r6, r1
   12474:	str	r0, [r2]
   12478:	popge	{r4, r5, r6, r7, fp, pc}
   1247c:	b	12434 <tabela_esvazia@@Base+0x2c>

00012480 <tabela_numelementos@@Base>:
   12480:	cmp	r0, #0
   12484:	mvneq	r0, #1
   12488:	bxeq	lr
   1248c:	ldr	r1, [r0, #8]
   12490:	cmp	r1, #1
   12494:	movlt	r0, #0
   12498:	bxlt	lr
   1249c:	ldr	ip, [r0, #4]
   124a0:	mov	r0, #0
   124a4:	mov	r3, #0
   124a8:	ldr	r2, [ip, r3, lsl #2]
   124ac:	b	124b8 <tabela_numelementos@@Base+0x38>
   124b0:	ldr	r2, [r2, #4]
   124b4:	add	r0, r0, #1
   124b8:	cmp	r2, #0
   124bc:	bne	124b0 <tabela_numelementos@@Base+0x30>
   124c0:	add	r3, r3, #1
   124c4:	cmp	r3, r1
   124c8:	bxge	lr
   124cc:	b	124a8 <tabela_numelementos@@Base+0x28>

000124d0 <tabela_elementos@@Base>:
   124d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124d4:	add	fp, sp, #28
   124d8:	sub	sp, sp, #4
   124dc:	cmp	r0, #0
   124e0:	beq	125ac <tabela_elementos@@Base+0xdc>
   124e4:	ldr	r2, [r0, #8]
   124e8:	mov	r5, r0
   124ec:	cmp	r2, #1
   124f0:	blt	125b4 <tabela_elementos@@Base+0xe4>
   124f4:	ldr	r7, [r5, #4]
   124f8:	mov	r0, #0
   124fc:	mov	r3, #0
   12500:	ldr	r6, [r7, r3, lsl #2]
   12504:	b	12510 <tabela_elementos@@Base+0x40>
   12508:	ldr	r6, [r6, #4]
   1250c:	add	r0, r0, #1
   12510:	cmp	r6, #0
   12514:	bne	12508 <tabela_elementos@@Base+0x38>
   12518:	add	r3, r3, #1
   1251c:	cmp	r3, r2
   12520:	bne	12500 <tabela_elementos@@Base+0x30>
   12524:	mov	r6, #0
   12528:	cmp	r0, #1
   1252c:	str	r0, [r1]
   12530:	blt	125c0 <tabela_elementos@@Base+0xf0>
   12534:	mov	r1, #125	; 0x7d
   12538:	mul	r0, r0, r1
   1253c:	bl	11158 <malloc@plt>
   12540:	cmp	r0, #0
   12544:	beq	125c0 <tabela_elementos@@Base+0xf0>
   12548:	ldr	sl, [r5, #8]
   1254c:	mov	r8, r0
   12550:	cmp	sl, #1
   12554:	blt	125a4 <tabela_elementos@@Base+0xd4>
   12558:	mov	r4, #0
   1255c:	mov	r6, #0
   12560:	ldr	r9, [r7, r6, lsl #2]
   12564:	cmp	r9, #0
   12568:	beq	12598 <tabela_elementos@@Base+0xc8>
   1256c:	mov	r0, #125	; 0x7d
   12570:	mla	r5, r4, r0, r8
   12574:	ldr	r1, [r9]
   12578:	mov	r0, r5
   1257c:	mov	r2, #125	; 0x7d
   12580:	bl	11128 <memcpy@plt>
   12584:	ldr	r9, [r9, #4]
   12588:	add	r5, r5, #125	; 0x7d
   1258c:	add	r4, r4, #1
   12590:	cmp	r9, #0
   12594:	bne	12574 <tabela_elementos@@Base+0xa4>
   12598:	add	r6, r6, #1
   1259c:	cmp	r6, sl
   125a0:	blt	12560 <tabela_elementos@@Base+0x90>
   125a4:	mov	r6, r8
   125a8:	b	125c0 <tabela_elementos@@Base+0xf0>
   125ac:	mvn	r0, #1
   125b0:	b	125b8 <tabela_elementos@@Base+0xe8>
   125b4:	mov	r0, #0
   125b8:	str	r0, [r1]
   125bc:	mov	r6, #0
   125c0:	mov	r0, r6
   125c4:	sub	sp, fp, #28
   125c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000125cc <hash_krm@@Base>:
   125cc:	ldrb	r2, [r0]
   125d0:	cmp	r2, #0
   125d4:	beq	125f4 <hash_krm@@Base+0x28>
   125d8:	add	r3, r0, #1
   125dc:	mov	r0, #7
   125e0:	uxtab	r0, r0, r2
   125e4:	ldrb	r2, [r3], #1
   125e8:	cmp	r2, #0
   125ec:	bne	125e0 <hash_krm@@Base+0x14>
   125f0:	b	125f8 <hash_krm@@Base+0x2c>
   125f4:	mov	r0, #7
   125f8:	udiv	r2, r0, r1
   125fc:	mls	r0, r2, r1, r0
   12600:	bx	lr

00012604 <hash_djbm@@Base>:
   12604:	ldrb	r2, [r0]
   12608:	cmp	r2, #0
   1260c:	beq	12634 <hash_djbm@@Base+0x30>
   12610:	add	r3, r0, #1
   12614:	movw	r0, #5347	; 0x14e3
   12618:	uxtb	r2, r2
   1261c:	rsb	r0, r0, r0, lsl #5
   12620:	eor	r0, r0, r2
   12624:	ldrb	r2, [r3], #1
   12628:	cmp	r2, #0
   1262c:	bne	12618 <hash_djbm@@Base+0x14>
   12630:	b	12638 <hash_djbm@@Base+0x34>
   12634:	movw	r0, #5347	; 0x14e3
   12638:	udiv	r2, r0, r1
   1263c:	mls	r0, r2, r1, r0
   12640:	bx	lr

00012644 <mostraTabela@@Base>:
   12644:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12648:	add	fp, sp, #24
   1264c:	mov	r4, r0
   12650:	cmp	r0, #0
   12654:	beq	12698 <mostraTabela@@Base+0x54>
   12658:	ldr	r0, [r4, #8]
   1265c:	cmp	r0, #1
   12660:	blt	126a0 <mostraTabela@@Base+0x5c>
   12664:	ldr	r2, [r4, #4]
   12668:	mov	r1, #0
   1266c:	mov	r3, #0
   12670:	ldr	r7, [r2, r3, lsl #2]
   12674:	b	12680 <mostraTabela@@Base+0x3c>
   12678:	ldr	r7, [r7, #4]
   1267c:	add	r1, r1, #1
   12680:	cmp	r7, #0
   12684:	bne	12678 <mostraTabela@@Base+0x34>
   12688:	add	r3, r3, #1
   1268c:	cmp	r3, r0
   12690:	bne	12670 <mostraTabela@@Base+0x2c>
   12694:	b	126a4 <mostraTabela@@Base+0x60>
   12698:	mvn	r1, #1
   1269c:	b	126a4 <mostraTabela@@Base+0x60>
   126a0:	mov	r1, #0
   126a4:	movw	r0, #10880	; 0x2a80
   126a8:	movt	r0, #1
   126ac:	bl	110f8 <printf@plt>
   126b0:	ldr	r0, [r4, #8]
   126b4:	cmp	r0, #1
   126b8:	blt	1272c <mostraTabela@@Base+0xe8>
   126bc:	movw	r8, #10916	; 0x2aa4
   126c0:	movw	r7, #10923	; 0x2aab
   126c4:	mov	r5, #0
   126c8:	movt	r8, #1
   126cc:	movt	r7, #1
   126d0:	ldr	r1, [r4, #4]
   126d4:	ldr	r1, [r1, r5, lsl #2]
   126d8:	cmp	r1, #0
   126dc:	beq	12720 <mostraTabela@@Base+0xdc>
   126e0:	mov	r0, r8
   126e4:	mov	r1, r5
   126e8:	bl	110f8 <printf@plt>
   126ec:	ldr	r0, [r4, #4]
   126f0:	ldr	r6, [r0, r5, lsl #2]
   126f4:	b	1270c <mostraTabela@@Base+0xc8>
   126f8:	ldr	r1, [r6]
   126fc:	mov	r0, r7
   12700:	add	r2, r1, #25
   12704:	bl	110f8 <printf@plt>
   12708:	ldr	r6, [r6, #4]
   1270c:	cmp	r6, #0
   12710:	bne	126f8 <mostraTabela@@Base+0xb4>
   12714:	mov	r0, #10
   12718:	bl	11188 <putchar@plt>
   1271c:	ldr	r0, [r4, #8]
   12720:	add	r5, r5, #1
   12724:	cmp	r5, r0
   12728:	blt	126d0 <mostraTabela@@Base+0x8c>
   1272c:	mov	r0, #10
   12730:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12734:	b	11188 <putchar@plt>

00012738 <__libc_csu_init@@Base>:
   12738:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1273c:	mov	r7, r0
   12740:	ldr	r6, [pc, #72]	; 12790 <__libc_csu_init@@Base+0x58>
   12744:	ldr	r5, [pc, #72]	; 12794 <__libc_csu_init@@Base+0x5c>
   12748:	add	r6, pc, r6
   1274c:	add	r5, pc, r5
   12750:	sub	r6, r6, r5
   12754:	mov	r8, r1
   12758:	mov	r9, r2
   1275c:	bl	110c0 <calloc@plt-0x20>
   12760:	asrs	r6, r6, #2
   12764:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12768:	mov	r4, #0
   1276c:	add	r4, r4, #1
   12770:	ldr	r3, [r5], #4
   12774:	mov	r2, r9
   12778:	mov	r1, r8
   1277c:	mov	r0, r7
   12780:	blx	r3
   12784:	cmp	r6, r4
   12788:	bne	1276c <__libc_csu_init@@Base+0x34>
   1278c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12790:			; <UNDEFINED> instruction: 0x000107bc
   12794:			; <UNDEFINED> instruction: 0x000107b4

00012798 <__libc_csu_fini@@Base>:
   12798:	bx	lr

Disassembly of section .fini:

0001279c <.fini>:
   1279c:	push	{r3, lr}
   127a0:	pop	{r3, pc}
