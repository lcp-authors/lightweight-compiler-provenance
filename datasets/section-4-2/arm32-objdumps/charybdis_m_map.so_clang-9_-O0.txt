
../repos/charybdis/modules/.libs/m_map.so:     file format elf32-littlearm


Disassembly of section .init:

000005f4 <_init>:
 5f4:	push	{r3, lr}
 5f8:	bl	674 <call_weak_fn>
 5fc:	pop	{r3, pc}

Disassembly of section .plt:

00000600 <.plt>:
 600:	push	{lr}		; (str lr, [sp, #-4]!)
 604:	ldr	lr, [pc, #4]	; 610 <.plt+0x10>
 608:	add	lr, pc, lr
 60c:	ldr	pc, [lr, #8]!
 610:	.word	0x000119f0

00000614 <__cxa_finalize@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #69632	; 0x11000
 61c:	ldr	pc, [ip, #2544]!	; 0x9f0

00000620 <__gmon_start__@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #69632	; 0x11000
 628:	ldr	pc, [ip, #2536]!	; 0x9e8

0000062c <sendto_one_numeric@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #69632	; 0x11000
 634:	ldr	pc, [ip, #2528]!	; 0x9e0

00000638 <strlen@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #69632	; 0x11000
 640:	ldr	pc, [ip, #2520]!	; 0x9d8

00000644 <snprintf@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #69632	; 0x11000
 64c:	ldr	pc, [ip, #2512]!	; 0x9d0

00000650 <scache_send_missing@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #69632	; 0x11000
 658:	ldr	pc, [ip, #2504]!	; 0x9c8

0000065c <rb_strlcpy@plt>:
 65c:	add	ip, pc, #0, 12
 660:	add	ip, ip, #69632	; 0x11000
 664:	ldr	pc, [ip, #2496]!	; 0x9c0

00000668 <rb_strlcat@plt>:
 668:	add	ip, pc, #0, 12
 66c:	add	ip, ip, #69632	; 0x11000
 670:	ldr	pc, [ip, #2488]!	; 0x9b8

Disassembly of section .text:

00000674 <call_weak_fn>:
 674:	ldr	r3, [pc, #20]	; 690 <call_weak_fn+0x1c>
 678:	ldr	r2, [pc, #20]	; 694 <call_weak_fn+0x20>
 67c:	add	r3, pc, r3
 680:	ldr	r2, [r3, r2]
 684:	cmp	r2, #0
 688:	bxeq	lr
 68c:	b	620 <__gmon_start__@plt>
 690:	.word	0x0001197c
 694:	.word	0x00000040

00000698 <deregister_tm_clones>:
 698:	ldr	r0, [pc, #44]	; 6cc <deregister_tm_clones+0x34>
 69c:	ldr	r3, [pc, #44]	; 6d0 <deregister_tm_clones+0x38>
 6a0:	add	r0, pc, r0
 6a4:	add	r3, pc, r3
 6a8:	cmp	r3, r0
 6ac:	ldr	r3, [pc, #32]	; 6d4 <deregister_tm_clones+0x3c>
 6b0:	add	r3, pc, r3
 6b4:	bxeq	lr
 6b8:	ldr	r2, [pc, #24]	; 6d8 <deregister_tm_clones+0x40>
 6bc:	ldr	r3, [r3, r2]
 6c0:	cmp	r3, #0
 6c4:	bxeq	lr
 6c8:	bx	r3
 6cc:	.word	0x00011a20
 6d0:	.word	0x00011a1c
 6d4:	.word	0x00011948
 6d8:	.word	0x00000034

000006dc <register_tm_clones>:
 6dc:	ldr	r0, [pc, #56]	; 71c <register_tm_clones+0x40>
 6e0:	ldr	r3, [pc, #56]	; 720 <register_tm_clones+0x44>
 6e4:	add	r0, pc, r0
 6e8:	add	r3, pc, r3
 6ec:	sub	r1, r3, r0
 6f0:	ldr	r3, [pc, #44]	; 724 <register_tm_clones+0x48>
 6f4:	asr	r1, r1, #2
 6f8:	add	r3, pc, r3
 6fc:	add	r1, r1, r1, lsr #31
 700:	asrs	r1, r1, #1
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <register_tm_clones+0x4c>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000119dc
 720:	.word	0x000119d8
 724:	.word	0x00011900
 728:	.word	0x00000044

0000072c <__do_global_dtors_aux>:
 72c:	ldr	r3, [pc, #76]	; 780 <__do_global_dtors_aux+0x54>
 730:	ldr	r2, [pc, #76]	; 784 <__do_global_dtors_aux+0x58>
 734:	add	r3, pc, r3
 738:	add	r2, pc, r2
 73c:	ldrb	r3, [r3]
 740:	cmp	r3, #0
 744:	bxne	lr
 748:	ldr	r3, [pc, #56]	; 788 <__do_global_dtors_aux+0x5c>
 74c:	push	{r4, lr}
 750:	ldr	r3, [r2, r3]
 754:	cmp	r3, #0
 758:	beq	768 <__do_global_dtors_aux+0x3c>
 75c:	ldr	r3, [pc, #40]	; 78c <__do_global_dtors_aux+0x60>
 760:	ldr	r0, [pc, r3]
 764:	bl	614 <__cxa_finalize@plt>
 768:	bl	698 <deregister_tm_clones>
 76c:	ldr	r3, [pc, #28]	; 790 <__do_global_dtors_aux+0x64>
 770:	mov	r2, #1
 774:	add	r3, pc, r3
 778:	strb	r2, [r3]
 77c:	pop	{r4, pc}
 780:	.word	0x0001198c
 784:	.word	0x000118c0
 788:	.word	0x00000030
 78c:	.word	0x000118e8
 790:	.word	0x0001194c

00000794 <frame_dummy>:
 794:	b	6dc <register_tm_clones>

00000798 <m_map>:
 798:	push	{fp, lr}
 79c:	mov	fp, sp
 7a0:	sub	sp, sp, #16
 7a4:	ldr	ip, [fp, #8]
 7a8:	str	r0, [fp, #-4]
 7ac:	str	r1, [sp, #8]
 7b0:	str	r2, [sp, #4]
 7b4:	str	r3, [sp]
 7b8:	ldr	r0, [sp, #4]
 7bc:	ldrb	r0, [r0, #67]	; 0x43
 7c0:	tst	r0, #4
 7c4:	bne	7e0 <m_map+0x48>
 7c8:	b	7cc <m_map+0x34>
 7cc:	ldr	r0, [pc, #116]	; 848 <m_map+0xb0>
 7d0:	ldr	r0, [pc, r0]
 7d4:	ldr	r0, [r0]
 7d8:	cmp	r0, #0
 7dc:	bne	7f4 <m_map+0x5c>
 7e0:	ldr	r0, [pc, #100]	; 84c <m_map+0xb4>
 7e4:	ldr	r0, [pc, r0]
 7e8:	ldr	r0, [r0, #176]	; 0xb0
 7ec:	cmp	r0, #0
 7f0:	beq	814 <m_map+0x7c>
 7f4:	ldr	r0, [sp, #8]
 7f8:	bl	8d4 <flattened_map>
 7fc:	ldr	r0, [pc, #88]	; 85c <m_map+0xc4>
 800:	add	r2, pc, r0
 804:	ldr	r0, [sp, #8]
 808:	movw	r1, #17
 80c:	bl	62c <sendto_one_numeric@plt>
 810:	b	840 <m_map+0xa8>
 814:	ldr	r0, [pc, #56]	; 854 <m_map+0xbc>
 818:	ldr	r1, [pc, r0]
 81c:	ldr	r0, [pc, #52]	; 858 <m_map+0xc0>
 820:	add	r2, pc, r0
 824:	ldr	r0, [sp, #8]
 828:	bl	c24 <dump_map>
 82c:	ldr	r0, [pc, #28]	; 850 <m_map+0xb8>
 830:	add	r2, pc, r0
 834:	ldr	r0, [sp, #8]
 838:	movw	r1, #17
 83c:	bl	62c <sendto_one_numeric@plt>
 840:	mov	sp, fp
 844:	pop	{fp, pc}
 848:	.word	0x00011864
 84c:	.word	0x00011860
 850:	.word	0x00000754
 854:	.word	0x00011828
 858:	.word	0x000118a1
 85c:	.word	0x00000784

00000860 <mo_map>:
 860:	push	{r4, sl, fp, lr}
 864:	add	fp, sp, #8
 868:	sub	sp, sp, #24
 86c:	ldr	ip, [fp, #8]
 870:	ldr	lr, [pc, #84]	; 8cc <mo_map+0x6c>
 874:	ldr	lr, [pc, lr]
 878:	ldr	r4, [pc, #80]	; 8d0 <mo_map+0x70>
 87c:	add	r4, pc, r4
 880:	str	r0, [fp, #-12]
 884:	str	r1, [sp, #16]
 888:	str	r2, [sp, #12]
 88c:	str	r3, [sp, #8]
 890:	ldr	r0, [sp, #16]
 894:	mov	r1, lr
 898:	mov	r2, r4
 89c:	str	ip, [sp, #4]
 8a0:	bl	c24 <dump_map>
 8a4:	ldr	r0, [sp, #16]
 8a8:	bl	650 <scache_send_missing@plt>
 8ac:	ldr	r0, [pc, #20]	; 8c8 <mo_map+0x68>
 8b0:	add	r2, pc, r0
 8b4:	ldr	r0, [sp, #16]
 8b8:	movw	r1, #17
 8bc:	bl	62c <sendto_one_numeric@plt>
 8c0:	sub	sp, fp, #8
 8c4:	pop	{r4, sl, fp, pc}
 8c8:	.word	0x000006d4
 8cc:	.word	0x000117cc
 8d0:	.word	0x00011845

000008d4 <flattened_map>:
 8d4:	push	{r4, r5, fp, lr}
 8d8:	add	fp, sp, #8
 8dc:	sub	sp, sp, #568	; 0x238
 8e0:	ldr	r1, [pc, #772]	; bec <flattened_map+0x318>
 8e4:	ldr	r1, [pc, r1]
 8e8:	add	r1, r1, #88	; 0x58
 8ec:	add	r2, sp, #52	; 0x34
 8f0:	str	r0, [fp, #-12]
 8f4:	movw	r0, #0
 8f8:	str	r0, [sp, #32]
 8fc:	mov	r0, r2
 900:	movw	r2, #512	; 0x200
 904:	bl	65c <rb_strlcpy@plt>
 908:	add	r1, sp, #52	; 0x34
 90c:	str	r0, [sp, #28]
 910:	mov	r0, r1
 914:	str	r1, [sp, #24]
 918:	bl	638 <strlen@plt>
 91c:	str	r0, [sp, #36]	; 0x24
 920:	ldr	r0, [sp, #36]	; 0x24
 924:	ldr	r1, [sp, #24]
 928:	add	r0, r1, r0
 92c:	movw	r2, #32
 930:	strb	r2, [r0]
 934:	ldr	r0, [sp, #36]	; 0x24
 938:	cmp	r0, #50	; 0x32
 93c:	bge	980 <flattened_map+0xac>
 940:	ldr	r0, [sp, #36]	; 0x24
 944:	add	r0, r0, #1
 948:	str	r0, [sp, #40]	; 0x28
 94c:	ldr	r0, [sp, #40]	; 0x28
 950:	cmp	r0, #50	; 0x32
 954:	bge	97c <flattened_map+0xa8>
 958:	ldr	r0, [sp, #40]	; 0x28
 95c:	add	r1, sp, #52	; 0x34
 960:	add	r0, r1, r0
 964:	movw	r1, #45	; 0x2d
 968:	strb	r1, [r0]
 96c:	ldr	r0, [sp, #40]	; 0x28
 970:	add	r0, r0, #1
 974:	str	r0, [sp, #40]	; 0x28
 978:	b	94c <flattened_map+0x78>
 97c:	b	980 <flattened_map+0xac>
 980:	ldr	r0, [pc, #624]	; bf8 <flattened_map+0x324>
 984:	add	r2, pc, r0
 988:	ldr	r0, [pc, #620]	; bfc <flattened_map+0x328>
 98c:	ldr	r0, [pc, r0]
 990:	vldr	s0, [pc, #616]	; c00 <flattened_map+0x32c>
 994:	ldr	r1, [pc, #616]	; c04 <flattened_map+0x330>
 998:	ldr	r1, [pc, r1]
 99c:	add	r3, sp, #52	; 0x34
 9a0:	add	r3, r3, #50	; 0x32
 9a4:	ldr	ip, [r1, #28]
 9a8:	ldr	ip, [ip, #56]	; 0x38
 9ac:	ldr	r1, [r1, #28]
 9b0:	ldr	r1, [r1, #56]	; 0x38
 9b4:	vmov	s2, r1
 9b8:	vcvt.f32.u32	s2, s2
 9bc:	vmul.f32	s0, s0, s2
 9c0:	ldr	r0, [r0, #4]
 9c4:	vmov	s2, r0
 9c8:	vcvt.f32.s32	s2, s2
 9cc:	vdiv.f32	s0, s0, s2
 9d0:	vcvt.f64.f32	d16, s0
 9d4:	mov	r0, r3
 9d8:	movw	r1, #462	; 0x1ce
 9dc:	mov	r3, ip
 9e0:	vstr	d16, [sp]
 9e4:	bl	644 <snprintf@plt>
 9e8:	ldr	r1, [pc, #516]	; bf4 <flattened_map+0x320>
 9ec:	add	r2, pc, r1
 9f0:	add	r3, sp, #52	; 0x34
 9f4:	ldr	r1, [fp, #-12]
 9f8:	str	r0, [sp, #20]
 9fc:	mov	r0, r1
 a00:	movw	r1, #15
 a04:	bl	62c <sendto_one_numeric@plt>
 a08:	ldr	r0, [pc, #480]	; bf0 <flattened_map+0x31c>
 a0c:	ldr	r0, [pc, r0]
 a10:	ldr	r0, [r0]
 a14:	str	r0, [sp, #48]	; 0x30
 a18:	ldr	r0, [sp, #48]	; 0x30
 a1c:	movw	r1, #0
 a20:	cmp	r0, r1
 a24:	beq	be4 <flattened_map+0x310>
 a28:	ldr	r0, [sp, #48]	; 0x30
 a2c:	ldr	r0, [r0]
 a30:	str	r0, [sp, #44]	; 0x2c
 a34:	ldr	r0, [sp, #32]
 a38:	add	r0, r0, #1
 a3c:	str	r0, [sp, #32]
 a40:	ldr	r0, [sp, #44]	; 0x2c
 a44:	ldrh	r0, [r0, #80]	; 0x50
 a48:	cmp	r0, #4
 a4c:	bne	a54 <flattened_map+0x180>
 a50:	b	bd4 <flattened_map+0x300>
 a54:	ldr	r0, [pc, #428]	; c08 <flattened_map+0x334>
 a58:	ldr	r0, [pc, r0]
 a5c:	ldr	r0, [r0, #12]
 a60:	cmp	r0, #0
 a64:	bne	a80 <flattened_map+0x1ac>
 a68:	ldr	r0, [sp, #44]	; 0x2c
 a6c:	ldrb	r0, [r0, #65]	; 0x41
 a70:	tst	r0, #8
 a74:	beq	a80 <flattened_map+0x1ac>
 a78:	b	a7c <flattened_map+0x1a8>
 a7c:	b	bd4 <flattened_map+0x300>
 a80:	ldr	r0, [pc, #388]	; c0c <flattened_map+0x338>
 a84:	ldr	r0, [pc, r0]
 a88:	ldr	r1, [sp, #32]
 a8c:	ldr	r0, [r0, #8]
 a90:	cmp	r1, r0
 a94:	bne	ab0 <flattened_map+0x1dc>
 a98:	ldr	r0, [pc, #372]	; c14 <flattened_map+0x340>
 a9c:	add	r1, pc, r0
 aa0:	add	r0, sp, #52	; 0x34
 aa4:	movw	r2, #512	; 0x200
 aa8:	bl	65c <rb_strlcpy@plt>
 aac:	b	ac4 <flattened_map+0x1f0>
 ab0:	ldr	r0, [pc, #344]	; c10 <flattened_map+0x33c>
 ab4:	add	r1, pc, r0
 ab8:	add	r0, sp, #52	; 0x34
 abc:	movw	r2, #512	; 0x200
 ac0:	bl	65c <rb_strlcpy@plt>
 ac4:	add	r0, sp, #52	; 0x34
 ac8:	ldr	r1, [sp, #44]	; 0x2c
 acc:	add	r1, r1, #88	; 0x58
 ad0:	movw	r2, #512	; 0x200
 ad4:	bl	668 <rb_strlcat@plt>
 ad8:	add	r1, sp, #52	; 0x34
 adc:	str	r0, [sp, #16]
 ae0:	mov	r0, r1
 ae4:	str	r1, [sp, #12]
 ae8:	bl	638 <strlen@plt>
 aec:	str	r0, [sp, #36]	; 0x24
 af0:	ldr	r0, [sp, #36]	; 0x24
 af4:	ldr	r1, [sp, #12]
 af8:	add	r0, r1, r0
 afc:	movw	r2, #32
 b00:	strb	r2, [r0]
 b04:	ldr	r0, [sp, #36]	; 0x24
 b08:	cmp	r0, #50	; 0x32
 b0c:	bge	b50 <flattened_map+0x27c>
 b10:	ldr	r0, [sp, #36]	; 0x24
 b14:	add	r0, r0, #1
 b18:	str	r0, [sp, #40]	; 0x28
 b1c:	ldr	r0, [sp, #40]	; 0x28
 b20:	cmp	r0, #50	; 0x32
 b24:	bge	b4c <flattened_map+0x278>
 b28:	ldr	r0, [sp, #40]	; 0x28
 b2c:	add	r1, sp, #52	; 0x34
 b30:	add	r0, r1, r0
 b34:	movw	r1, #45	; 0x2d
 b38:	strb	r1, [r0]
 b3c:	ldr	r0, [sp, #40]	; 0x28
 b40:	add	r0, r0, #1
 b44:	str	r0, [sp, #40]	; 0x28
 b48:	b	b1c <flattened_map+0x248>
 b4c:	b	b50 <flattened_map+0x27c>
 b50:	ldr	r0, [pc, #196]	; c1c <flattened_map+0x348>
 b54:	add	r2, pc, r0
 b58:	ldr	r0, [pc, #192]	; c20 <flattened_map+0x34c>
 b5c:	ldr	r0, [pc, r0]
 b60:	vldr	s0, [pc, #152]	; c00 <flattened_map+0x32c>
 b64:	add	r1, sp, #52	; 0x34
 b68:	add	r1, r1, #50	; 0x32
 b6c:	ldr	r3, [sp, #44]	; 0x2c
 b70:	ldr	r3, [r3, #28]
 b74:	ldr	r3, [r3, #56]	; 0x38
 b78:	ldr	ip, [sp, #44]	; 0x2c
 b7c:	ldr	ip, [ip, #28]
 b80:	ldr	ip, [ip, #56]	; 0x38
 b84:	vmov	s2, ip
 b88:	vcvt.f32.u32	s2, s2
 b8c:	vmul.f32	s0, s0, s2
 b90:	ldr	r0, [r0, #4]
 b94:	vmov	s2, r0
 b98:	vcvt.f32.s32	s2, s2
 b9c:	vdiv.f32	s0, s0, s2
 ba0:	vcvt.f64.f32	d16, s0
 ba4:	mov	r0, r1
 ba8:	movw	r1, #462	; 0x1ce
 bac:	vstr	d16, [sp]
 bb0:	bl	644 <snprintf@plt>
 bb4:	ldr	r1, [pc, #92]	; c18 <flattened_map+0x344>
 bb8:	add	r2, pc, r1
 bbc:	add	r3, sp, #52	; 0x34
 bc0:	ldr	r1, [fp, #-12]
 bc4:	str	r0, [sp, #8]
 bc8:	mov	r0, r1
 bcc:	movw	r1, #15
 bd0:	bl	62c <sendto_one_numeric@plt>
 bd4:	ldr	r0, [sp, #48]	; 0x30
 bd8:	ldr	r0, [r0, #8]
 bdc:	str	r0, [sp, #48]	; 0x30
 be0:	b	a18 <flattened_map+0x144>
 be4:	sub	sp, fp, #8
 be8:	pop	{r4, r5, fp, pc}
 bec:	.word	0x0001175c
 bf0:	.word	0x00011618
 bf4:	.word	0x000005be
 bf8:	.word	0x0000060d
 bfc:	.word	0x000116a4
 c00:	.word	0x42c80000
 c04:	.word	0x000116a8
 c08:	.word	0x000115dc
 c0c:	.word	0x000115a0
 c10:	.word	0x000004ff
 c14:	.word	0x00000512
 c18:	.word	0x000003f2
 c1c:	.word	0x0000043d
 c20:	.word	0x000114d4

00000c24 <dump_map>:
 c24:	push	{fp, lr}
 c28:	mov	fp, sp
 c2c:	sub	sp, sp, #64	; 0x40
 c30:	str	r0, [fp, #-4]
 c34:	str	r1, [fp, #-8]
 c38:	str	r2, [fp, #-12]
 c3c:	movw	r0, #0
 c40:	str	r0, [fp, #-16]
 c44:	str	r0, [fp, #-20]	; 0xffffffec
 c48:	ldr	r0, [fp, #-12]
 c4c:	movw	r1, #0
 c50:	strb	r1, [r0]
 c54:	ldr	r0, [fp, #-12]
 c58:	ldr	r1, [fp, #-8]
 c5c:	add	r1, r1, #88	; 0x58
 c60:	movw	r2, #512	; 0x200
 c64:	bl	668 <rb_strlcat@plt>
 c68:	ldr	r1, [fp, #-8]
 c6c:	ldrb	r1, [r1, #396]	; 0x18c
 c70:	cmp	r1, #0
 c74:	beq	cc8 <dump_map+0xa4>
 c78:	ldr	r0, [pc, #732]	; f5c <dump_map+0x338>
 c7c:	add	r1, pc, r0
 c80:	ldr	r0, [fp, #-12]
 c84:	movw	r2, #512	; 0x200
 c88:	bl	668 <rb_strlcat@plt>
 c8c:	ldr	r1, [fp, #-12]
 c90:	ldr	r2, [fp, #-8]
 c94:	add	r2, r2, #396	; 0x18c
 c98:	str	r0, [sp, #24]
 c9c:	mov	r0, r1
 ca0:	mov	r1, r2
 ca4:	movw	r2, #512	; 0x200
 ca8:	bl	668 <rb_strlcat@plt>
 cac:	ldr	r1, [pc, #676]	; f58 <dump_map+0x334>
 cb0:	add	r1, pc, r1
 cb4:	ldr	r2, [fp, #-12]
 cb8:	str	r0, [sp, #20]
 cbc:	mov	r0, r2
 cc0:	movw	r2, #512	; 0x200
 cc4:	bl	668 <rb_strlcat@plt>
 cc8:	ldr	r0, [pc, #656]	; f60 <dump_map+0x33c>
 ccc:	add	r0, pc, r0
 cd0:	ldr	r1, [pc, #676]	; f7c <dump_map+0x358>
 cd4:	add	r1, pc, r1
 cd8:	str	r0, [sp, #16]
 cdc:	mov	r0, r1
 ce0:	bl	638 <strlen@plt>
 ce4:	str	r0, [fp, #-24]	; 0xffffffe8
 ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 cec:	ldr	r1, [sp, #16]
 cf0:	add	r0, r1, r0
 cf4:	movw	r2, #32
 cf8:	strb	r2, [r0]
 cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
 d00:	cmp	r0, #50	; 0x32
 d04:	bge	d4c <dump_map+0x128>
 d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
 d0c:	add	r0, r0, #1
 d10:	str	r0, [fp, #-20]	; 0xffffffec
 d14:	ldr	r0, [fp, #-20]	; 0xffffffec
 d18:	cmp	r0, #50	; 0x32
 d1c:	bge	d48 <dump_map+0x124>
 d20:	ldr	r0, [pc, #592]	; f78 <dump_map+0x354>
 d24:	add	r0, pc, r0
 d28:	ldr	r1, [fp, #-20]	; 0xffffffec
 d2c:	add	r0, r0, r1
 d30:	movw	r1, #45	; 0x2d
 d34:	strb	r1, [r0]
 d38:	ldr	r0, [fp, #-20]	; 0xffffffec
 d3c:	add	r0, r0, #1
 d40:	str	r0, [fp, #-20]	; 0xffffffec
 d44:	b	d14 <dump_map+0xf0>
 d48:	b	d4c <dump_map+0x128>
 d4c:	ldr	r0, [pc, #536]	; f6c <dump_map+0x348>
 d50:	add	r0, pc, r0
 d54:	add	r0, r0, #50	; 0x32
 d58:	ldr	r1, [pc, #528]	; f70 <dump_map+0x34c>
 d5c:	add	r2, pc, r1
 d60:	ldr	r1, [fp, #-8]
 d64:	ldr	r1, [r1, #28]
 d68:	ldr	r1, [r1, #56]	; 0x38
 d6c:	mov	r3, #1000	; 0x3e8
 d70:	mul	r1, r1, r3
 d74:	ldr	r3, [pc, #516]	; f80 <dump_map+0x35c>
 d78:	ldr	r3, [pc, r3]
 d7c:	ldr	r3, [r3, #4]
 d80:	add	ip, r3, r3, lsr #31
 d84:	add	r1, r1, ip, asr #1
 d88:	udiv	r1, r1, r3
 d8c:	str	r1, [fp, #-28]	; 0xffffffe4
 d90:	ldr	r1, [fp, #-8]
 d94:	ldr	r1, [r1, #28]
 d98:	ldr	r3, [r1, #56]	; 0x38
 d9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 da0:	movw	ip, #26215	; 0x6667
 da4:	movt	ip, #26214	; 0x6666
 da8:	smmul	ip, r1, ip
 dac:	asr	lr, ip, #2
 db0:	add	ip, lr, ip, lsr #31
 db4:	add	lr, ip, ip, lsl #2
 db8:	sub	r1, r1, lr, lsl #1
 dbc:	movw	lr, #462	; 0x1ce
 dc0:	str	r1, [sp, #12]
 dc4:	mov	r1, lr
 dc8:	str	ip, [sp]
 dcc:	ldr	ip, [sp, #12]
 dd0:	str	ip, [sp, #4]
 dd4:	bl	644 <snprintf@plt>
 dd8:	ldr	r1, [pc, #388]	; f64 <dump_map+0x340>
 ddc:	add	r2, pc, r1
 de0:	ldr	r1, [pc, #384]	; f68 <dump_map+0x344>
 de4:	add	r3, pc, r1
 de8:	ldr	r1, [fp, #-4]
 dec:	str	r0, [sp, #8]
 df0:	mov	r0, r1
 df4:	movw	r1, #15
 df8:	bl	62c <sendto_one_numeric@plt>
 dfc:	ldr	r0, [fp, #-8]
 e00:	ldr	r0, [r0, #28]
 e04:	ldr	r0, [r0, #36]	; 0x24
 e08:	movw	r1, #0
 e0c:	cmp	r0, r1
 e10:	beq	e9c <dump_map+0x278>
 e14:	ldr	r0, [fp, #-8]
 e18:	ldr	r0, [r0, #28]
 e1c:	ldr	r0, [r0, #44]	; 0x2c
 e20:	ldr	r1, [fp, #-16]
 e24:	add	r0, r1, r0
 e28:	str	r0, [fp, #-16]
 e2c:	ldr	r0, [fp, #-16]
 e30:	cmp	r0, #0
 e34:	beq	e98 <dump_map+0x274>
 e38:	ldr	r0, [pc, #308]	; f74 <dump_map+0x350>
 e3c:	add	r0, pc, r0
 e40:	add	r0, r0, #3
 e44:	ldr	r1, [fp, #-12]
 e48:	cmp	r1, r0
 e4c:	bls	e94 <dump_map+0x270>
 e50:	ldr	r0, [fp, #-12]
 e54:	mvn	r1, #1
 e58:	add	r0, r0, r1
 e5c:	movw	r1, #32
 e60:	strb	r1, [r0]
 e64:	ldr	r0, [fp, #-12]
 e68:	mvn	r1, #2
 e6c:	add	r0, r0, r1
 e70:	ldrb	r0, [r0]
 e74:	cmp	r0, #96	; 0x60
 e78:	bne	e90 <dump_map+0x26c>
 e7c:	ldr	r0, [fp, #-12]
 e80:	mvn	r1, #2
 e84:	add	r0, r0, r1
 e88:	movw	r1, #32
 e8c:	strb	r1, [r0]
 e90:	b	e94 <dump_map+0x270>
 e94:	b	e98 <dump_map+0x274>
 e98:	b	e9c <dump_map+0x278>
 e9c:	movw	r0, #1
 ea0:	str	r0, [fp, #-20]	; 0xffffffec
 ea4:	ldr	r0, [fp, #-8]
 ea8:	ldr	r0, [r0, #28]
 eac:	ldr	r0, [r0, #36]	; 0x24
 eb0:	str	r0, [sp, #28]
 eb4:	ldr	r0, [sp, #28]
 eb8:	movw	r1, #0
 ebc:	cmp	r0, r1
 ec0:	beq	f50 <dump_map+0x32c>
 ec4:	ldr	r0, [sp, #28]
 ec8:	ldr	r0, [r0]
 ecc:	str	r0, [sp, #32]
 ed0:	ldr	r0, [fp, #-12]
 ed4:	movw	r1, #32
 ed8:	strb	r1, [r0]
 edc:	ldr	r0, [fp, #-20]	; 0xffffffec
 ee0:	ldr	r1, [fp, #-16]
 ee4:	cmp	r0, r1
 ee8:	bge	efc <dump_map+0x2d8>
 eec:	ldr	r0, [fp, #-12]
 ef0:	movw	r1, #124	; 0x7c
 ef4:	strb	r1, [r0, #1]
 ef8:	b	f08 <dump_map+0x2e4>
 efc:	ldr	r0, [fp, #-12]
 f00:	movw	r1, #96	; 0x60
 f04:	strb	r1, [r0, #1]
 f08:	ldr	r0, [fp, #-12]
 f0c:	movw	r1, #45	; 0x2d
 f10:	strb	r1, [r0, #2]
 f14:	ldr	r0, [fp, #-12]
 f18:	movw	r1, #32
 f1c:	strb	r1, [r0, #3]
 f20:	ldr	r0, [fp, #-4]
 f24:	ldr	r1, [sp, #32]
 f28:	ldr	r2, [fp, #-12]
 f2c:	add	r2, r2, #4
 f30:	bl	c24 <dump_map>
 f34:	ldr	r0, [fp, #-20]	; 0xffffffec
 f38:	add	r0, r0, #1
 f3c:	str	r0, [fp, #-20]	; 0xffffffec
 f40:	ldr	r0, [sp, #28]
 f44:	ldr	r0, [r0, #8]
 f48:	str	r0, [sp, #28]
 f4c:	b	eb4 <dump_map+0x290>
 f50:	mov	sp, fp
 f54:	pop	{fp, pc}
 f58:	.word	0x0000030a
 f5c:	.word	0x0000033c
 f60:	.word	0x000113f5
 f64:	.word	0x000001ce
 f68:	.word	0x000112dd
 f6c:	.word	0x00011371
 f70:	.word	0x00000260
 f74:	.word	0x00011285
 f78:	.word	0x0001139d
 f7c:	.word	0x000113ed
 f80:	.word	0x000112b8

Disassembly of section .fini:

00000f84 <_fini>:
 f84:	push	{r3, lr}
 f88:	pop	{r3, pc}
