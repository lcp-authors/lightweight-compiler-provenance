
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

000020a8 <.init>:
    20a8:	push	{r3, lr}
    20ac:	bl	2528 <__assert_fail@plt+0x10>
    20b0:	pop	{r3, pc}

Disassembly of section .plt:

000020b4 <calloc@plt-0x14>:
    20b4:	push	{lr}		; (str lr, [sp, #-4]!)
    20b8:	ldr	lr, [pc, #4]	; 20c4 <calloc@plt-0x4>
    20bc:	add	lr, pc, lr
    20c0:	ldr	pc, [lr, #8]!
    20c4:	andeq	r4, r2, ip, lsr pc

000020c8 <calloc@plt>:
    20c8:	add	ip, pc, #0, 12
    20cc:	add	ip, ip, #36, 20	; 0x24000
    20d0:	ldr	pc, [ip, #3900]!	; 0xf3c

000020d4 <raise@plt>:
    20d4:	add	ip, pc, #0, 12
    20d8:	add	ip, ip, #36, 20	; 0x24000
    20dc:	ldr	pc, [ip, #3892]!	; 0xf34

000020e0 <btbb_piconet_new@plt>:
    20e0:	add	ip, pc, #0, 12
    20e4:	add	ip, ip, #36, 20	; 0x24000
    20e8:	ldr	pc, [ip, #3884]!	; 0xf2c

000020ec <gen_hop_pattern@plt>:
    20ec:	add	ip, pc, #0, 12
    20f0:	add	ip, ip, #36, 20	; 0x24000
    20f4:	ldr	pc, [ip, #3876]!	; 0xf24

000020f8 <count_bits@plt>:
    20f8:	add	ip, pc, #0, 12
    20fc:	add	ip, ip, #36, 20	; 0x24000
    2100:	ldr	pc, [ip, #3868]!	; 0xf1c

00002104 <__cxa_finalize@plt>:
    2104:	add	ip, pc, #0, 12
    2108:	add	ip, ip, #36, 20	; 0x24000
    210c:	ldr	pc, [ip, #3860]!	; 0xf14

00002110 <btbb_get_payload_packed@plt>:
    2110:	add	ip, pc, #0, 12
    2114:	add	ip, ip, #36, 20	; 0x24000
    2118:	ldr	pc, [ip, #3852]!	; 0xf0c

0000211c <printf@plt>:
    211c:	add	ip, pc, #0, 12
    2120:	add	ip, ip, #36, 20	; 0x24000
    2124:	ldr	pc, [ip, #3844]!	; 0xf04

00002128 <fopen@plt>:
    2128:	add	ip, pc, #0, 12
    212c:	add	ip, ip, #36, 20	; 0x24000
    2130:	ldr	pc, [ip, #3836]!	; 0xefc

00002134 <lell_packet_is_data@plt>:
    2134:	add	ip, pc, #0, 12
    2138:	add	ip, ip, #36, 20	; 0x24000
    213c:	ldr	pc, [ip, #3828]!	; 0xef4

00002140 <fflush@plt>:
    2140:	add	ip, pc, #0, 12
    2144:	add	ip, ip, #36, 20	; 0x24000
    2148:	ldr	pc, [ip, #3820]!	; 0xeec

0000214c <btbb_packet_set_flag@plt>:
    214c:	add	ip, pc, #0, 12
    2150:	add	ip, ip, #36, 20	; 0x24000
    2154:	ldr	pc, [ip, #3812]!	; 0xee4

00002158 <pcapng_append_interface_option@plt>:
    2158:	add	ip, pc, #0, 12
    215c:	add	ip, ip, #36, 20	; 0x24000
    2160:	ldr	pc, [ip, #3804]!	; 0xedc

00002164 <free@plt>:
    2164:	add	ip, pc, #0, 12
    2168:	add	ip, ip, #36, 20	; 0x24000
    216c:	ldr	pc, [ip, #3796]!	; 0xed4

00002170 <btbb_packet_get_modulation@plt>:
    2170:	add	ip, pc, #0, 12
    2174:	add	ip, ip, #36, 20	; 0x24000
    2178:	ldr	pc, [ip, #3788]!	; 0xecc

0000217c <btbb_packet_get_ac_errors@plt>:
    217c:	add	ip, pc, #0, 12
    2180:	add	ip, ip, #36, 20	; 0x24000
    2184:	ldr	pc, [ip, #3780]!	; 0xec4

00002188 <memcpy@plt>:
    2188:	add	ip, pc, #0, 12
    218c:	add	ip, ip, #36, 20	; 0x24000
    2190:	ldr	pc, [ip, #3772]!	; 0xebc

00002194 <btbb_uap_from_header@plt>:
    2194:	add	ip, pc, #0, 12
    2198:	add	ip, ip, #36, 20	; 0x24000
    219c:	ldr	pc, [ip, #3764]!	; 0xeb4

000021a0 <btbb_packet_get_flag@plt>:
    21a0:	add	ip, pc, #0, 12
    21a4:	add	ip, ip, #36, 20	; 0x24000
    21a8:	ldr	pc, [ip, #3756]!	; 0xeac

000021ac <fhs@plt>:
    21ac:	add	ip, pc, #0, 12
    21b0:	add	ip, ip, #36, 20	; 0x24000
    21b4:	ldr	pc, [ip, #3748]!	; 0xea4

000021b8 <EV4@plt>:
    21b8:	add	ip, pc, #0, 12
    21bc:	add	ip, ip, #36, 20	; 0x24000
    21c0:	ldr	pc, [ip, #3740]!	; 0xe9c

000021c4 <btbb_piconet_get_uap@plt>:
    21c4:	add	ip, pc, #0, 12
    21c8:	add	ip, ip, #36, 20	; 0x24000
    21cc:	ldr	pc, [ip, #3732]!	; 0xe94

000021d0 <memcmp@plt>:
    21d0:	add	ip, pc, #0, 12
    21d4:	add	ip, ip, #36, 20	; 0x24000
    21d8:	ldr	pc, [ip, #3724]!	; 0xe8c

000021dc <lell_pcap_close@plt>:
    21dc:	add	ip, pc, #0, 12
    21e0:	add	ip, ip, #36, 20	; 0x24000
    21e4:	ldr	pc, [ip, #3716]!	; 0xe84

000021e8 <btbb_piconet_get_channel_seen@plt>:
    21e8:	add	ip, pc, #0, 12
    21ec:	add	ip, ip, #36, 20	; 0x24000
    21f0:	ldr	pc, [ip, #3708]!	; 0xe7c

000021f4 <btbb_pcap_open@plt>:
    21f4:	add	ip, pc, #0, 12
    21f8:	add	ip, ip, #36, 20	; 0x24000
    21fc:	ldr	pc, [ip, #3700]!	; 0xe74

00002200 <btbb_header_present@plt>:
    2200:	add	ip, pc, #0, 12
    2204:	add	ip, ip, #36, 20	; 0x24000
    2208:	ldr	pc, [ip, #3692]!	; 0xe6c

0000220c <btbb_piconet_get_flag@plt>:
    220c:	add	ip, pc, #0, 12
    2210:	add	ip, ip, #36, 20	; 0x24000
    2214:	ldr	pc, [ip, #3684]!	; 0xe64

00002218 <pcapng_create@plt>:
    2218:	add	ip, pc, #0, 12
    221c:	add	ip, ip, #36, 20	; 0x24000
    2220:	ldr	pc, [ip, #3676]!	; 0xe5c

00002224 <DM@plt>:
    2224:	add	ip, pc, #0, 12
    2228:	add	ip, ip, #36, 20	; 0x24000
    222c:	ldr	pc, [ip, #3668]!	; 0xe54

00002230 <btbb_piconet_set_flag@plt>:
    2230:	add	ip, pc, #0, 12
    2234:	add	ip, ip, #36, 20	; 0x24000
    2238:	ldr	pc, [ip, #3660]!	; 0xe4c

0000223c <HV@plt>:
    223c:	add	ip, pc, #0, 12
    2240:	add	ip, ip, #36, 20	; 0x24000
    2244:	ldr	pc, [ip, #3652]!	; 0xe44

00002248 <perror@plt>:
    2248:	add	ip, pc, #0, 12
    224c:	add	ip, ip, #36, 20	; 0x24000
    2250:	ldr	pc, [ip, #3644]!	; 0xe3c

00002254 <btbb_piconet_set_channel_seen@plt>:
    2254:	add	ip, pc, #0, 12
    2258:	add	ip, ip, #36, 20	; 0x24000
    225c:	ldr	pc, [ip, #3636]!	; 0xe34

00002260 <perm_table_init@plt>:
    2260:	add	ip, pc, #0, 12
    2264:	add	ip, ip, #36, 20	; 0x24000
    2268:	ldr	pc, [ip, #3628]!	; 0xe2c

0000226c <btbb_packet_set_uap@plt>:
    226c:	add	ip, pc, #0, 12
    2270:	add	ip, ip, #36, 20	; 0x24000
    2274:	ldr	pc, [ip, #3620]!	; 0xe24

00002278 <fwrite@plt>:
    2278:	add	ip, pc, #0, 12
    227c:	add	ip, ip, #36, 20	; 0x24000
    2280:	ldr	pc, [ip, #3612]!	; 0xe1c

00002284 <btbb_gen_syncword@plt>:
    2284:	add	ip, pc, #0, 12
    2288:	add	ip, ip, #36, 20	; 0x24000
    228c:	ldr	pc, [ip, #3604]!	; 0xe14

00002290 <btbb_pcap_close@plt>:
    2290:	add	ip, pc, #0, 12
    2294:	add	ip, ip, #36, 20	; 0x24000
    2298:	ldr	pc, [ip, #3596]!	; 0xe0c

0000229c <crc_check@plt>:
    229c:	add	ip, pc, #0, 12
    22a0:	add	ip, ip, #36, 20	; 0x24000
    22a4:	ldr	pc, [ip, #3588]!	; 0xe04

000022a8 <btbb_decode@plt>:
    22a8:	add	ip, pc, #0, 12
    22ac:	add	ip, ip, #36, 20	; 0x24000
    22b0:	ldr	pc, [ip, #3580]!	; 0xdfc

000022b4 <btbb_winnow@plt>:
    22b4:	add	ip, pc, #0, 12
    22b8:	add	ip, ip, #36, 20	; 0x24000
    22bc:	ldr	pc, [ip, #3572]!	; 0xdf4

000022c0 <lell_get_adv_type_str@plt>:
    22c0:	add	ip, pc, #0, 12
    22c4:	add	ip, ip, #36, 20	; 0x24000
    22c8:	ldr	pc, [ip, #3564]!	; 0xdec

000022cc <get_hop_pattern@plt>:
    22cc:	add	ip, pc, #0, 12
    22d0:	add	ip, ip, #36, 20	; 0x24000
    22d4:	ldr	pc, [ip, #3556]!	; 0xde4

000022d8 <puts@plt>:
    22d8:	add	ip, pc, #0, 12
    22dc:	add	ip, ip, #36, 20	; 0x24000
    22e0:	ldr	pc, [ip, #3548]!	; 0xddc

000022e4 <malloc@plt>:
    22e4:	add	ip, pc, #0, 12
    22e8:	add	ip, ip, #36, 20	; 0x24000
    22ec:	ldr	pc, [ip, #3540]!	; 0xdd4

000022f0 <try_hop@plt>:
    22f0:	add	ip, pc, #0, 12
    22f4:	add	ip, ip, #36, 20	; 0x24000
    22f8:	ldr	pc, [ip, #3532]!	; 0xdcc

000022fc <btbb_packet_new@plt>:
    22fc:	add	ip, pc, #0, 12
    2300:	add	ip, ip, #36, 20	; 0x24000
    2304:	ldr	pc, [ip, #3524]!	; 0xdc4

00002308 <btbb_pcap_dump@plt>:
    2308:	add	ip, pc, #0, 12
    230c:	add	ip, ip, #36, 20	; 0x24000
    2310:	ldr	pc, [ip, #3516]!	; 0xdbc

00002314 <__gmon_start__@plt>:
    2314:	add	ip, pc, #0, 12
    2318:	add	ip, ip, #36, 20	; 0x24000
    231c:	ldr	pc, [ip, #3508]!	; 0xdb4

00002320 <open@plt>:
    2320:	add	ip, pc, #0, 12
    2324:	add	ip, ip, #36, 20	; 0x24000
    2328:	ldr	pc, [ip, #3500]!	; 0xdac

0000232c <__ctype_b_loc@plt>:
    232c:	add	ip, pc, #0, 12
    2330:	add	ip, ip, #36, 20	; 0x24000
    2334:	ldr	pc, [ip, #3492]!	; 0xda4

00002338 <exit@plt>:
    2338:	add	ip, pc, #0, 12
    233c:	add	ip, ip, #36, 20	; 0x24000
    2340:	ldr	pc, [ip, #3484]!	; 0xd9c

00002344 <btbb_packet_get_payload_length@plt>:
    2344:	add	ip, pc, #0, 12
    2348:	add	ip, ip, #36, 20	; 0x24000
    234c:	ldr	pc, [ip, #3476]!	; 0xd94

00002350 <strlen@plt>:
    2350:	add	ip, pc, #0, 12
    2354:	add	ip, ip, #36, 20	; 0x24000
    2358:	ldr	pc, [ip, #3468]!	; 0xd8c

0000235c <btbb_decode_header@plt>:
    235c:	add	ip, pc, #0, 12
    2360:	add	ip, ip, #36, 20	; 0x24000
    2364:	ldr	pc, [ip, #3460]!	; 0xd84

00002368 <mmap@plt>:
    2368:	add	ip, pc, #0, 12
    236c:	add	ip, ip, #36, 20	; 0x24000
    2370:	ldr	pc, [ip, #3452]!	; 0xd7c

00002374 <btbb_packet_get_header_packed@plt>:
    2374:	add	ip, pc, #0, 12
    2378:	add	ip, ip, #36, 20	; 0x24000
    237c:	ldr	pc, [ip, #3444]!	; 0xd74

00002380 <lell_pcapng_record_connect_req@plt>:
    2380:	add	ip, pc, #0, 12
    2384:	add	ip, ip, #36, 20	; 0x24000
    2388:	ldr	pc, [ip, #3436]!	; 0xd6c

0000238c <lell_get_channel_k@plt>:
    238c:	add	ip, pc, #0, 12
    2390:	add	ip, ip, #36, 20	; 0x24000
    2394:	ldr	pc, [ip, #3428]!	; 0xd64

00002398 <fprintf@plt>:
    2398:	add	ip, pc, #0, 12
    239c:	add	ip, ip, #36, 20	; 0x24000
    23a0:	ldr	pc, [ip, #3420]!	; 0xd5c

000023a4 <getpagesize@plt>:
    23a4:	add	ip, pc, #0, 12
    23a8:	add	ip, ip, #36, 20	; 0x24000
    23ac:	ldr	pc, [ip, #3412]!	; 0xd54

000023b0 <pcapng_append_packet@plt>:
    23b0:	add	ip, pc, #0, 12
    23b4:	add	ip, ip, #36, 20	; 0x24000
    23b8:	ldr	pc, [ip, #3404]!	; 0xd4c

000023bc <btbb_packet_get_transport@plt>:
    23bc:	add	ip, pc, #0, 12
    23c0:	add	ip, ip, #36, 20	; 0x24000
    23c4:	ldr	pc, [ip, #3396]!	; 0xd44

000023c8 <find_known_lap@plt>:
    23c8:	add	ip, pc, #0, 12
    23cc:	add	ip, ip, #36, 20	; 0x24000
    23d0:	ldr	pc, [ip, #3388]!	; 0xd3c

000023d4 <address_precalc@plt>:
    23d4:	add	ip, pc, #0, 12
    23d8:	add	ip, ip, #36, 20	; 0x24000
    23dc:	ldr	pc, [ip, #3380]!	; 0xd34

000023e0 <memset@plt>:
    23e0:	add	ip, pc, #0, 12
    23e4:	add	ip, ip, #36, 20	; 0x24000
    23e8:	ldr	pc, [ip, #3372]!	; 0xd2c

000023ec <putchar@plt>:
    23ec:	add	ip, pc, #0, 12
    23f0:	add	ip, ip, #36, 20	; 0x24000
    23f4:	ldr	pc, [ip, #3364]!	; 0xd24

000023f8 <strncpy@plt>:
    23f8:	add	ip, pc, #0, 12
    23fc:	add	ip, ip, #36, 20	; 0x24000
    2400:	ldr	pc, [ip, #3356]!	; 0xd1c

00002404 <EV3@plt>:
    2404:	add	ip, pc, #0, 12
    2408:	add	ip, ip, #36, 20	; 0x24000
    240c:	ldr	pc, [ip, #3348]!	; 0xd14

00002410 <btbb_packet_get_lap@plt>:
    2410:	add	ip, pc, #0, 12
    2414:	add	ip, ip, #36, 20	; 0x24000
    2418:	ldr	pc, [ip, #3340]!	; 0xd0c

0000241c <lell_packet_new@plt>:
    241c:	add	ip, pc, #0, 12
    2420:	add	ip, ip, #36, 20	; 0x24000
    2424:	ldr	pc, [ip, #3332]!	; 0xd04

00002428 <bt_compidtostr@plt>:
    2428:	add	ip, pc, #0, 12
    242c:	add	ip, ip, #36, 20	; 0x24000
    2430:	ldr	pc, [ip, #3324]!	; 0xcfc

00002434 <write@plt>:
    2434:	add	ip, pc, #0, 12
    2438:	add	ip, ip, #36, 20	; 0x24000
    243c:	ldr	pc, [ip, #3316]!	; 0xcf4

00002440 <get_piconet@plt>:
    2440:	add	ip, pc, #0, 12
    2444:	add	ip, ip, #36, 20	; 0x24000
    2448:	ldr	pc, [ip, #3308]!	; 0xcec

0000244c <perm5@plt>:
    244c:	add	ip, pc, #0, 12
    2450:	add	ip, ip, #36, 20	; 0x24000
    2454:	ldr	pc, [ip, #3300]!	; 0xce4

00002458 <fclose@plt>:
    2458:	add	ip, pc, #0, 12
    245c:	add	ip, ip, #36, 20	; 0x24000
    2460:	ldr	pc, [ip, #3292]!	; 0xcdc

00002464 <EV5@plt>:
    2464:	add	ip, pc, #0, 12
    2468:	add	ip, ip, #36, 20	; 0x24000
    246c:	ldr	pc, [ip, #3284]!	; 0xcd4

00002470 <munmap@plt>:
    2470:	add	ip, pc, #0, 12
    2474:	add	ip, ip, #36, 20	; 0x24000
    2478:	ldr	pc, [ip, #3276]!	; 0xccc

0000247c <DH@plt>:
    247c:	add	ip, pc, #0, 12
    2480:	add	ip, ip, #36, 20	; 0x24000
    2484:	ldr	pc, [ip, #3268]!	; 0xcc4

00002488 <btbb_packet_get_channel@plt>:
    2488:	add	ip, pc, #0, 12
    248c:	add	ip, ip, #36, 20	; 0x24000
    2490:	ldr	pc, [ip, #3260]!	; 0xcbc

00002494 <precalc@plt>:
    2494:	add	ip, pc, #0, 12
    2498:	add	ip, ip, #36, 20	; 0x24000
    249c:	ldr	pc, [ip, #3252]!	; 0xcb4

000024a0 <btbb_decode_payload@plt>:
    24a0:	add	ip, pc, #0, 12
    24a4:	add	ip, ip, #36, 20	; 0x24000
    24a8:	ldr	pc, [ip, #3244]!	; 0xcac

000024ac <promiscuous_packet_search@plt>:
    24ac:	add	ip, pc, #0, 12
    24b0:	add	ip, ip, #36, 20	; 0x24000
    24b4:	ldr	pc, [ip, #3236]!	; 0xca4

000024b8 <pcapng_close@plt>:
    24b8:	add	ip, pc, #0, 12
    24bc:	add	ip, ip, #36, 20	; 0x24000
    24c0:	ldr	pc, [ip, #3228]!	; 0xc9c

000024c4 <btbb_print_packet@plt>:
    24c4:	add	ip, pc, #0, 12
    24c8:	add	ip, ip, #36, 20	; 0x24000
    24cc:	ldr	pc, [ip, #3220]!	; 0xc94

000024d0 <fast_perm@plt>:
    24d0:	add	ip, pc, #0, 12
    24d4:	add	ip, ip, #36, 20	; 0x24000
    24d8:	ldr	pc, [ip, #3212]!	; 0xc8c

000024dc <try_clock@plt>:
    24dc:	add	ip, pc, #0, 12
    24e0:	add	ip, ip, #36, 20	; 0x24000
    24e4:	ldr	pc, [ip, #3204]!	; 0xc84

000024e8 <btbb_init_hop_reversal@plt>:
    24e8:	add	ip, pc, #0, 12
    24ec:	add	ip, ip, #36, 20	; 0x24000
    24f0:	ldr	pc, [ip, #3196]!	; 0xc7c

000024f4 <fputs@plt>:
    24f4:	add	ip, pc, #0, 12
    24f8:	add	ip, ip, #36, 20	; 0x24000
    24fc:	ldr	pc, [ip, #3188]!	; 0xc74

00002500 <btbb_init_piconet@plt>:
    2500:	add	ip, pc, #0, 12
    2504:	add	ip, ip, #36, 20	; 0x24000
    2508:	ldr	pc, [ip, #3180]!	; 0xc6c

0000250c <close@plt>:
    250c:	add	ip, pc, #0, 12
    2510:	add	ip, ip, #36, 20	; 0x24000
    2514:	ldr	pc, [ip, #3172]!	; 0xc64

00002518 <__assert_fail@plt>:
    2518:	add	ip, pc, #0, 12
    251c:	add	ip, ip, #36, 20	; 0x24000
    2520:	ldr	pc, [ip, #3164]!	; 0xc5c

Disassembly of section .text:

00002528 <btbb_gen_syncword@@Base-0x99c>:
    2528:	ldr	r3, [pc, #20]	; 2544 <__assert_fail@plt+0x2c>
    252c:	ldr	r2, [pc, #20]	; 2548 <__assert_fail@plt+0x30>
    2530:	add	r3, pc, r3
    2534:	ldr	r2, [r3, r2]
    2538:	cmp	r2, #0
    253c:	bxeq	lr
    2540:	b	2314 <__gmon_start__@plt>
    2544:	andeq	r4, r2, r8, asr #21
    2548:	muleq	r0, r4, r1
    254c:	ldr	r0, [pc, #44]	; 2580 <__assert_fail@plt+0x68>
    2550:	ldr	r3, [pc, #44]	; 2584 <__assert_fail@plt+0x6c>
    2554:	add	r0, pc, r0
    2558:	add	r3, pc, r3
    255c:	cmp	r3, r0
    2560:	ldr	r3, [pc, #32]	; 2588 <__assert_fail@plt+0x70>
    2564:	add	r3, pc, r3
    2568:	bxeq	lr
    256c:	ldr	r2, [pc, #24]	; 258c <__assert_fail@plt+0x74>
    2570:	ldr	r3, [r3, r2]
    2574:	cmp	r3, #0
    2578:	bxeq	lr
    257c:	bx	r3
    2580:	andeq	r4, r2, ip, asr #24
    2584:	andeq	r4, r2, r8, asr #24
    2588:	muleq	r2, r4, sl
    258c:	andeq	r0, r0, r4, lsl #3
    2590:	ldr	r0, [pc, #56]	; 25d0 <__assert_fail@plt+0xb8>
    2594:	ldr	r3, [pc, #56]	; 25d4 <__assert_fail@plt+0xbc>
    2598:	add	r0, pc, r0
    259c:	add	r3, pc, r3
    25a0:	sub	r1, r3, r0
    25a4:	ldr	r3, [pc, #44]	; 25d8 <__assert_fail@plt+0xc0>
    25a8:	asr	r1, r1, #2
    25ac:	add	r3, pc, r3
    25b0:	add	r1, r1, r1, lsr #31
    25b4:	asrs	r1, r1, #1
    25b8:	bxeq	lr
    25bc:	ldr	r2, [pc, #24]	; 25dc <__assert_fail@plt+0xc4>
    25c0:	ldr	r3, [r3, r2]
    25c4:	cmp	r3, #0
    25c8:	bxeq	lr
    25cc:	bx	r3
    25d0:	andeq	r4, r2, r8, lsl #24
    25d4:	andeq	r4, r2, r4, lsl #24
    25d8:	andeq	r4, r2, ip, asr #20
    25dc:	muleq	r0, ip, r1
    25e0:	ldr	r3, [pc, #76]	; 2634 <__assert_fail@plt+0x11c>
    25e4:	ldr	r2, [pc, #76]	; 2638 <__assert_fail@plt+0x120>
    25e8:	add	r3, pc, r3
    25ec:	add	r2, pc, r2
    25f0:	ldrb	r3, [r3]
    25f4:	cmp	r3, #0
    25f8:	bxne	lr
    25fc:	ldr	r3, [pc, #56]	; 263c <__assert_fail@plt+0x124>
    2600:	push	{r4, lr}
    2604:	ldr	r3, [r2, r3]
    2608:	cmp	r3, #0
    260c:	beq	261c <__assert_fail@plt+0x104>
    2610:	ldr	r3, [pc, #40]	; 2640 <__assert_fail@plt+0x128>
    2614:	ldr	r0, [pc, r3]
    2618:	bl	2104 <__cxa_finalize@plt>
    261c:	bl	254c <__assert_fail@plt+0x34>
    2620:	ldr	r3, [pc, #28]	; 2644 <__assert_fail@plt+0x12c>
    2624:	mov	r2, #1
    2628:	add	r3, pc, r3
    262c:	strb	r2, [r3]
    2630:	pop	{r4, pc}
    2634:			; <UNDEFINED> instruction: 0x00024bb8
    2638:	andeq	r4, r2, ip, lsl #20
    263c:	andeq	r0, r0, r0, lsl #3
    2640:	andeq	r4, r2, r4, lsl #23
    2644:	andeq	r4, r2, r8, ror fp
    2648:	b	2590 <__assert_fail@plt+0x78>
    264c:	ldr	r3, [pc, #120]	; 26cc <__assert_fail@plt+0x1b4>
    2650:	lsr	r2, r1, #24
    2654:	push	{r4, lr}
    2658:	add	r3, pc, r3
    265c:	add	ip, r3, r2, lsl #3
    2660:	ldr	r2, [r3, r2, lsl #3]
    2664:	add	r3, r3, #2048	; 0x800
    2668:	ldr	ip, [ip, #4]
    266c:	eor	r0, r0, r2
    2670:	and	r2, r1, #255	; 0xff
    2674:	add	lr, r3, r2, lsl #3
    2678:	ldr	r3, [r3, r2, lsl #3]
    267c:	ldr	r2, [lr, #4]
    2680:	eor	r0, r0, r3
    2684:	ldr	r3, [pc, #68]	; 26d0 <__assert_fail@plt+0x1b8>
    2688:	eor	ip, ip, r2
    268c:	ubfx	r2, r1, #8, #8
    2690:	ubfx	r1, r1, #16, #8
    2694:	add	r3, pc, r3
    2698:	sub	lr, r3, #4080	; 0xff0
    269c:	sub	r3, r3, #2032	; 0x7f0
    26a0:	add	lr, lr, r2, lsl #3
    26a4:	add	r3, r3, r1, lsl #3
    26a8:	ldr	r4, [lr, #-8]
    26ac:	ldr	r2, [lr, #-4]
    26b0:	ldr	r1, [r3, #-4]
    26b4:	eor	r0, r0, r4
    26b8:	eor	r2, r2, ip
    26bc:	ldr	ip, [r3, #-8]
    26c0:	eor	r1, r1, r2
    26c4:	eor	r0, r0, ip
    26c8:	pop	{r4, pc}
    26cc:	andeq	ip, r0, r0, asr r2
    26d0:	andeq	lr, r0, ip, lsl #4
    26d4:	mov	r3, #0
    26d8:	mov	r2, r3
    26dc:	ldrb	ip, [r0, r2]
    26e0:	orr	r3, r3, ip, lsl r2
    26e4:	add	r2, r2, #1
    26e8:	cmp	r1, r2
    26ec:	uxtb	r3, r3
    26f0:	bne	26dc <__assert_fail@plt+0x1c4>
    26f4:	mov	r0, r3
    26f8:	bx	lr
    26fc:	mov	r3, #0
    2700:	mov	r2, r3
    2704:	ldrb	ip, [r0, r2]
    2708:	orr	r3, r3, ip, lsl r2
    270c:	add	r2, r2, #1
    2710:	cmp	r1, r2
    2714:	uxth	r3, r3
    2718:	bne	2704 <__assert_fail@plt+0x1ec>
    271c:	mov	r0, r3
    2720:	bx	lr
    2724:	lsl	r3, r0, #7
    2728:	asr	r2, r0, #5
    272c:	orr	r3, r3, r0, lsr #7
    2730:	and	r2, r2, #2
    2734:	orr	r3, r3, r2
    2738:	asr	r2, r0, #3
    273c:	and	r2, r2, #4
    2740:	orr	r3, r3, r2
    2744:	asr	r2, r0, #1
    2748:	and	r2, r2, #8
    274c:	orr	r3, r3, r2
    2750:	lsl	r2, r0, #1
    2754:	and	r2, r2, #16
    2758:	orr	r3, r3, r2
    275c:	lsl	r2, r0, #3
    2760:	lsl	r0, r0, #5
    2764:	and	r2, r2, #32
    2768:	orr	r3, r3, r2
    276c:	and	r0, r0, #64	; 0x40
    2770:	orr	r0, r3, r0
    2774:	uxtb	r0, r0
    2778:	bx	lr
    277c:	push	{r4, r5, r6, lr}
    2780:	add	r5, r1, r2
    2784:	mov	r4, #0
    2788:	add	r0, r0, #3
    278c:	ldrb	lr, [r0, #-1]
    2790:	ldrb	ip, [r0, #-3]
    2794:	ldrb	r3, [r0, #-2]
    2798:	orr	r6, ip, lr
    279c:	and	ip, ip, lr
    27a0:	and	r3, r3, r6
    27a4:	orr	r3, r3, ip
    27a8:	strb	r3, [r1], #1
    27ac:	cmp	r5, r1
    27b0:	ldrb	ip, [r0, #-3]
    27b4:	ldrb	lr, [r0, #-2]
    27b8:	ldrb	r6, [r0, #-1]
    27bc:	eor	r3, ip, lr
    27c0:	eor	lr, lr, r6
    27c4:	eor	ip, ip, r6
    27c8:	orr	r3, r3, lr
    27cc:	orr	r3, r3, ip
    27d0:	add	r4, r4, r3
    27d4:	bne	2788 <__assert_fail@plt+0x270>
    27d8:	cmp	r4, r2, asr #2
    27dc:	movlt	r0, #1
    27e0:	movge	r0, #0
    27e4:	pop	{r4, r5, r6, pc}
    27e8:	mov	r2, #9
    27ec:	tst	r1, #128	; 0x80
    27f0:	asr	r3, r0, r2
    27f4:	eorne	r1, r1, #101	; 0x65
    27f8:	subs	r2, r2, #1
    27fc:	eor	r3, r3, r1, lsr #7
    2800:	and	r3, r3, #1
    2804:	orr	r1, r3, r1, lsl #1
    2808:	uxtb	r1, r1
    280c:	bcs	27ec <__assert_fail@plt+0x2d4>
    2810:	mov	r0, r1
    2814:	b	2724 <__assert_fail@plt+0x20c>
    2818:	ldr	r1, [r0, #64]	; 0x40
    281c:	push	{r4, r5, r6, lr}
    2820:	mov	r5, r0
    2824:	add	r6, r0, #68	; 0x44
    2828:	ldrb	r0, [r0, #9]
    282c:	sub	r1, r1, #2
    2830:	lsl	r1, r1, #3
    2834:	bl	2724 <__assert_fail@plt+0x20c>
    2838:	lsl	r0, r0, #8
    283c:	mov	r3, #0
    2840:	uxth	r4, r0
    2844:	add	r2, r3, #1
    2848:	uxth	r3, r3
    284c:	cmp	r1, r3
    2850:	bgt	2874 <__assert_fail@plt+0x35c>
    2854:	add	r0, r1, #68	; 0x44
    2858:	mov	r1, #16
    285c:	add	r0, r5, r0
    2860:	bl	26fc <__assert_fail@plt+0x1e4>
    2864:	sub	r0, r0, r4
    2868:	clz	r0, r0
    286c:	lsr	r0, r0, #5
    2870:	pop	{r4, r5, r6, pc}
    2874:	ldrb	r0, [r6, r3]
    2878:	mov	r3, r2
    287c:	eor	r0, r0, r4
    2880:	lsr	r4, r4, #1
    2884:	orr	r4, r4, r0, lsl #15
    2888:	sxth	r4, r4
    288c:	ubfx	r0, r4, #5, #11
    2890:	and	r0, r0, #1024	; 0x400
    2894:	eor	r4, r4, r0
    2898:	ubfx	r0, r4, #12, #4
    289c:	and	r0, r0, #8
    28a0:	eor	r4, r4, r0
    28a4:	uxth	r4, r4
    28a8:	b	2844 <__assert_fail@plt+0x32c>
    28ac:	mov	r2, #10
    28b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    28b4:	mov	r5, r1
    28b8:	mov	r6, r0
    28bc:	sdiv	r3, r1, r2
    28c0:	add	r6, r6, #10
    28c4:	ldr	r8, [pc, #464]	; 2a9c <__assert_fail@plt+0x584>
    28c8:	add	r8, pc, r8
    28cc:	add	r8, r8, #8
    28d0:	mls	r3, r2, r3, r1
    28d4:	ands	r3, r3, #255	; 0xff
    28d8:	subne	r3, r2, r3
    28dc:	addne	r5, r1, r3
    28e0:	mov	r0, r5
    28e4:	bl	22e4 <malloc@plt>
    28e8:	mov	r7, r0
    28ec:	mov	r4, r0
    28f0:	sub	r3, r4, r7
    28f4:	cmp	r5, r3
    28f8:	ble	2a94 <__assert_fail@plt+0x57c>
    28fc:	sub	r0, r6, #10
    2900:	mov	r2, r4
    2904:	mov	r3, r0
    2908:	ldrb	r1, [r3], #1
    290c:	cmp	r3, r6
    2910:	strb	r1, [r2], #1
    2914:	bne	2908 <__assert_fail@plt+0x3f0>
    2918:	mov	r1, #10
    291c:	bl	26fc <__assert_fail@plt+0x1e4>
    2920:	mov	r9, r0
    2924:	mov	r1, #5
    2928:	mov	r0, r6
    292c:	bl	26d4 <__assert_fail@plt+0x1bc>
    2930:	mov	r3, #0
    2934:	mov	r2, r3
    2938:	asr	r1, r9, r2
    293c:	tst	r1, #1
    2940:	lslne	r1, r2, #1
    2944:	add	r2, r2, #1
    2948:	ldrhne	r1, [r1, r8]
    294c:	eorne	r3, r3, r1
    2950:	cmp	r2, #10
    2954:	bne	2938 <__assert_fail@plt+0x420>
    2958:	eor	r3, r0, r3, lsr #10
    295c:	uxtb	r3, r3
    2960:	sub	r2, r3, #1
    2964:	tst	r2, r3
    2968:	beq	29ec <__assert_fail@plt+0x4d4>
    296c:	sub	r3, r3, #7
    2970:	cmp	r3, #24
    2974:	addls	pc, pc, r3, lsl #2
    2978:	b	2a88 <__assert_fail@plt+0x570>
    297c:	b	2a08 <__assert_fail@plt+0x4f0>
    2980:	b	2a88 <__assert_fail@plt+0x570>
    2984:	b	2a88 <__assert_fail@plt+0x570>
    2988:	b	2a88 <__assert_fail@plt+0x570>
    298c:	b	29e0 <__assert_fail@plt+0x4c8>
    2990:	b	2a88 <__assert_fail@plt+0x570>
    2994:	b	2a48 <__assert_fail@plt+0x530>
    2998:	b	2a18 <__assert_fail@plt+0x500>
    299c:	b	2a88 <__assert_fail@plt+0x570>
    29a0:	b	2a88 <__assert_fail@plt+0x570>
    29a4:	b	2a88 <__assert_fail@plt+0x570>
    29a8:	b	2a88 <__assert_fail@plt+0x570>
    29ac:	b	2a38 <__assert_fail@plt+0x520>
    29b0:	b	2a88 <__assert_fail@plt+0x570>
    29b4:	b	2a78 <__assert_fail@plt+0x560>
    29b8:	b	29f8 <__assert_fail@plt+0x4e0>
    29bc:	b	2a88 <__assert_fail@plt+0x570>
    29c0:	b	2a88 <__assert_fail@plt+0x570>
    29c4:	b	2a88 <__assert_fail@plt+0x570>
    29c8:	b	2a58 <__assert_fail@plt+0x540>
    29cc:	b	2a88 <__assert_fail@plt+0x570>
    29d0:	b	2a28 <__assert_fail@plt+0x510>
    29d4:	b	2a88 <__assert_fail@plt+0x570>
    29d8:	b	2a88 <__assert_fail@plt+0x570>
    29dc:	b	2a68 <__assert_fail@plt+0x550>
    29e0:	ldrb	r3, [r4]
    29e4:	eor	r3, r3, #1
    29e8:	strb	r3, [r4]
    29ec:	add	r4, r4, #10
    29f0:	add	r6, r6, #15
    29f4:	b	28f0 <__assert_fail@plt+0x3d8>
    29f8:	ldrb	r3, [r4, #1]
    29fc:	eor	r3, r3, #1
    2a00:	strb	r3, [r4, #1]
    2a04:	b	29ec <__assert_fail@plt+0x4d4>
    2a08:	ldrb	r3, [r4, #2]
    2a0c:	eor	r3, r3, #1
    2a10:	strb	r3, [r4, #2]
    2a14:	b	29ec <__assert_fail@plt+0x4d4>
    2a18:	ldrb	r3, [r4, #3]
    2a1c:	eor	r3, r3, #1
    2a20:	strb	r3, [r4, #3]
    2a24:	b	29ec <__assert_fail@plt+0x4d4>
    2a28:	ldrb	r3, [r4, #4]
    2a2c:	eor	r3, r3, #1
    2a30:	strb	r3, [r4, #4]
    2a34:	b	29ec <__assert_fail@plt+0x4d4>
    2a38:	ldrb	r3, [r4, #5]
    2a3c:	eor	r3, r3, #1
    2a40:	strb	r3, [r4, #5]
    2a44:	b	29ec <__assert_fail@plt+0x4d4>
    2a48:	ldrb	r3, [r4, #6]
    2a4c:	eor	r3, r3, #1
    2a50:	strb	r3, [r4, #6]
    2a54:	b	29ec <__assert_fail@plt+0x4d4>
    2a58:	ldrb	r3, [r4, #7]
    2a5c:	eor	r3, r3, #1
    2a60:	strb	r3, [r4, #7]
    2a64:	b	29ec <__assert_fail@plt+0x4d4>
    2a68:	ldrb	r3, [r4, #8]
    2a6c:	eor	r3, r3, #1
    2a70:	strb	r3, [r4, #8]
    2a74:	b	29ec <__assert_fail@plt+0x4d4>
    2a78:	ldrb	r3, [r4, #9]
    2a7c:	eor	r3, r3, #1
    2a80:	strb	r3, [r4, #9]
    2a84:	b	29ec <__assert_fail@plt+0x4d4>
    2a88:	mov	r0, r7
    2a8c:	mov	r7, #0
    2a90:	bl	2164 <free@plt>
    2a94:	mov	r0, r7
    2a98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2a9c:	ldrdeq	sp, [r0], -r8
    2aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2aa4:	mov	r6, r2
    2aa8:	sub	sp, sp, #20
    2aac:	sub	r7, r3, #1
    2ab0:	strd	r0, [sp, #8]
    2ab4:	cmp	r6, #58	; 0x3a
    2ab8:	bne	2ac4 <__assert_fail@plt+0x5ac>
    2abc:	add	sp, sp, #20
    2ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2ac4:	mov	sl, #1
    2ac8:	sub	r5, r6, #32
    2acc:	lsl	r5, sl, r5
    2ad0:	rsb	r3, r6, #32
    2ad4:	cmp	r7, #0
    2ad8:	orr	r5, r5, sl, lsr r3
    2adc:	ldr	r3, [sp, #8]
    2ae0:	orr	sl, r3, sl, lsl r6
    2ae4:	ldr	r3, [sp, #12]
    2ae8:	orr	r5, r5, r3
    2aec:	beq	2b0c <__assert_fail@plt+0x5f4>
    2af0:	mov	r3, r7
    2af4:	add	r2, r6, #1
    2af8:	mov	r0, sl
    2afc:	mov	r1, r5
    2b00:	bl	2aa0 <__assert_fail@plt+0x588>
    2b04:	add	r6, r6, #1
    2b08:	b	2ab4 <__assert_fail@plt+0x59c>
    2b0c:	ldr	r0, [pc, #912]	; 2ea4 <__assert_fail@plt+0x98c>
    2b10:	ldr	r1, [pc, #912]	; 2ea8 <__assert_fail@plt+0x990>
    2b14:	eor	r0, r0, sl
    2b18:	eor	r1, r5, r1
    2b1c:	bl	264c <__assert_fail@plt+0x134>
    2b20:	mov	r8, r0
    2b24:	mov	r0, #48	; 0x30
    2b28:	mov	r9, r1
    2b2c:	bl	22e4 <malloc@plt>
    2b30:	ldr	r2, [pc, #884]	; 2eac <__assert_fail@plt+0x994>
    2b34:	mov	r3, #8
    2b38:	mov	r4, r0
    2b3c:	strd	r8, [r0]
    2b40:	add	r8, r0, #16
    2b44:	str	sl, [r0, #8]
    2b48:	str	r5, [r0, #12]
    2b4c:	str	r7, [r0, #24]
    2b50:	add	r2, pc, r2
    2b54:	str	r0, [r4, #36]	; 0x24
    2b58:	str	r3, [r0, #40]	; 0x28
    2b5c:	ldr	r3, [r2]
    2b60:	cmp	r3, #0
    2b64:	bne	2e00 <__assert_fail@plt+0x8e8>
    2b68:	mov	r0, #44	; 0x2c
    2b6c:	str	r4, [r2]
    2b70:	str	r7, [r4, #20]
    2b74:	bl	22e4 <malloc@plt>
    2b78:	cmp	r0, #0
    2b7c:	mov	r5, r0
    2b80:	str	r0, [r4, #16]
    2b84:	bne	2b90 <__assert_fail@plt+0x678>
    2b88:	mvn	r0, #0
    2b8c:	bl	2338 <exit@plt>
    2b90:	mov	r9, #32
    2b94:	mov	r1, r7
    2b98:	mov	r2, r9
    2b9c:	add	r0, r0, #12
    2ba0:	bl	23e0 <memset@plt>
    2ba4:	mov	r3, #5
    2ba8:	mov	r0, #384	; 0x180
    2bac:	str	r9, [r5, #4]
    2bb0:	str	r3, [r5, #8]
    2bb4:	mov	r3, #16
    2bb8:	str	r8, [r5, #16]
    2bbc:	str	r3, [r5, #20]
    2bc0:	bl	22e4 <malloc@plt>
    2bc4:	cmp	r0, #0
    2bc8:	str	r0, [r5]
    2bcc:	beq	2b88 <__assert_fail@plt+0x670>
    2bd0:	mov	r2, #384	; 0x180
    2bd4:	mov	r1, r7
    2bd8:	bl	23e0 <memset@plt>
    2bdc:	ldr	r3, [pc, #716]	; 2eb0 <__assert_fail@plt+0x998>
    2be0:	str	r3, [r5, #40]	; 0x28
    2be4:	ldr	r3, [pc, #712]	; 2eb4 <__assert_fail@plt+0x99c>
    2be8:	mov	lr, #0
    2bec:	add	r3, pc, r3
    2bf0:	ldr	r0, [r3]
    2bf4:	ldr	r5, [r0, #16]
    2bf8:	ldr	r3, [r5, #12]
    2bfc:	add	r3, r3, #1
    2c00:	str	r3, [r5, #12]
    2c04:	ldrb	r2, [r4, #4]
    2c08:	str	r5, [r4, #16]
    2c0c:	ldrb	r3, [r4, #7]
    2c10:	ldrb	r1, [r4, #3]
    2c14:	add	r2, r2, #-1644167168	; 0x9e000000
    2c18:	add	r2, r2, #3620864	; 0x374000
    2c1c:	add	r2, r2, #14720	; 0x3980
    2c20:	add	r2, r2, #57	; 0x39
    2c24:	add	r2, r2, r3, lsl #24
    2c28:	ldrb	r3, [r4, #6]
    2c2c:	add	r2, r2, r3, lsl #16
    2c30:	ldrb	r3, [r4, #5]
    2c34:	add	r2, r2, r3, lsl #8
    2c38:	ldrb	r3, [r4]
    2c3c:	add	r3, r3, #-1627389952	; 0x9f000000
    2c40:	add	r3, r3, #4784128	; 0x490000
    2c44:	add	r3, r3, #47616	; 0xba00
    2c48:	add	r3, r3, #194	; 0xc2
    2c4c:	add	r3, r3, r1, lsl #24
    2c50:	ldrb	r1, [r4, #2]
    2c54:	add	r3, r3, r1, lsl #16
    2c58:	ldrb	r1, [r4, #1]
    2c5c:	add	r3, r3, r1, lsl #8
    2c60:	ldr	r1, [pc, #592]	; 2eb8 <__assert_fail@plt+0x9a0>
    2c64:	sub	r3, r3, r2
    2c68:	eor	r1, r1, r3
    2c6c:	ldr	r3, [pc, #584]	; 2ebc <__assert_fail@plt+0x9a4>
    2c70:	add	r3, r2, r3
    2c74:	ldr	r2, [pc, #580]	; 2ec0 <__assert_fail@plt+0x9a8>
    2c78:	sub	r3, r3, r1
    2c7c:	eor	r3, r3, r1, lsl #8
    2c80:	sub	r2, r2, r1
    2c84:	sub	r1, r1, r3
    2c88:	sub	r2, r2, r3
    2c8c:	eor	r2, r2, r3, lsr #13
    2c90:	sub	r1, r1, r2
    2c94:	sub	r3, r3, r2
    2c98:	eor	r1, r1, r2, lsr #12
    2c9c:	sub	r3, r3, r1
    2ca0:	sub	r2, r2, r1
    2ca4:	eor	r3, r3, r1, lsl #16
    2ca8:	sub	r2, r2, r3
    2cac:	sub	r1, r1, r3
    2cb0:	eor	r2, r2, r3, lsr #5
    2cb4:	sub	r1, r1, r2
    2cb8:	sub	r3, r3, r2
    2cbc:	eor	r1, r1, r2, lsr #3
    2cc0:	sub	r3, r3, r1
    2cc4:	sub	r2, r2, r1
    2cc8:	eor	r3, r3, r1, lsl #10
    2ccc:	ldr	r1, [r0, #16]
    2cd0:	sub	r2, r2, r3
    2cd4:	eor	r2, r2, r3, lsr #15
    2cd8:	ldm	r1, {r0, r3}
    2cdc:	str	r2, [r4, #44]	; 0x2c
    2ce0:	sub	r3, r3, #1
    2ce4:	and	r2, r2, r3
    2ce8:	mov	r3, #12
    2cec:	mul	r3, r3, r2
    2cf0:	add	r1, r0, r3
    2cf4:	ldr	ip, [r0, r3]
    2cf8:	ldr	r2, [r1, #4]
    2cfc:	cmp	ip, lr
    2d00:	add	r2, r2, #1
    2d04:	str	r2, [r1, #4]
    2d08:	ldr	r1, [r1, #8]
    2d0c:	str	lr, [r4, #28]
    2d10:	str	ip, [r4, #32]
    2d14:	strne	r8, [ip, #12]
    2d18:	str	r8, [r0, r3]
    2d1c:	mov	r3, #10
    2d20:	mla	r3, r1, r3, r3
    2d24:	cmp	r2, r3
    2d28:	bcc	2b04 <__assert_fail@plt+0x5ec>
    2d2c:	ldr	r3, [r5, #36]	; 0x24
    2d30:	cmp	r3, #1
    2d34:	beq	2b04 <__assert_fail@plt+0x5ec>
    2d38:	ldr	r2, [r5, #4]
    2d3c:	mov	r9, #24
    2d40:	mul	r9, r9, r2
    2d44:	mov	r0, r9
    2d48:	bl	22e4 <malloc@plt>
    2d4c:	subs	r8, r0, #0
    2d50:	beq	2b88 <__assert_fail@plt+0x670>
    2d54:	mov	r2, r9
    2d58:	mov	r1, #0
    2d5c:	bl	23e0 <memset@plt>
    2d60:	ldr	fp, [r5, #4]
    2d64:	ldr	r2, [r5, #12]
    2d68:	lsl	r3, fp, #1
    2d6c:	sub	sl, r3, #1
    2d70:	ldr	r3, [r5, #8]
    2d74:	tst	r2, sl
    2d78:	movne	lr, #1
    2d7c:	moveq	lr, #0
    2d80:	add	r3, r3, #1
    2d84:	add	lr, lr, r2, lsr r3
    2d88:	ldr	r2, [r5]
    2d8c:	mov	r3, #0
    2d90:	str	lr, [r5, #24]
    2d94:	str	r3, [r5, #28]
    2d98:	str	r2, [sp]
    2d9c:	cmp	fp, r3
    2da0:	bne	2e20 <__assert_fail@plt+0x908>
    2da4:	ldr	r0, [sp]
    2da8:	bl	2164 <free@plt>
    2dac:	ldr	r3, [r4, #16]
    2db0:	ldr	r2, [r3, #4]
    2db4:	str	r8, [r3]
    2db8:	ldr	r1, [r3, #12]
    2dbc:	lsl	r2, r2, #1
    2dc0:	str	r2, [r3, #4]
    2dc4:	ldr	r2, [r3, #8]
    2dc8:	add	r2, r2, #1
    2dcc:	str	r2, [r3, #8]
    2dd0:	ldr	r2, [r3, #28]
    2dd4:	cmp	r2, r1, lsr #1
    2dd8:	movls	r2, #0
    2ddc:	strls	r2, [r3, #32]
    2de0:	bls	2b04 <__assert_fail@plt+0x5ec>
    2de4:	ldr	r2, [r3, #32]
    2de8:	add	r2, r2, #1
    2dec:	cmp	r2, #1
    2df0:	str	r2, [r3, #32]
    2df4:	movhi	r2, #1
    2df8:	strhi	r2, [r3, #36]	; 0x24
    2dfc:	b	2b04 <__assert_fail@plt+0x5ec>
    2e00:	ldr	r2, [r3, #16]
    2e04:	ldr	r3, [r2, #16]
    2e08:	ldr	r1, [r2, #20]
    2e0c:	str	r0, [r3, #8]
    2e10:	sub	r3, r3, r1
    2e14:	str	r3, [r0, #20]
    2e18:	str	r8, [r2, #16]
    2e1c:	b	2be4 <__assert_fail@plt+0x6cc>
    2e20:	mov	r2, #12
    2e24:	ldr	r1, [sp]
    2e28:	mul	r2, r2, r3
    2e2c:	ldr	r2, [r1, r2]
    2e30:	cmp	r2, #0
    2e34:	addeq	r3, r3, #1
    2e38:	beq	2d9c <__assert_fail@plt+0x884>
    2e3c:	ldr	r1, [r2, #16]
    2e40:	mov	ip, #12
    2e44:	str	r1, [sp, #4]
    2e48:	ldr	r1, [r2, #28]
    2e4c:	and	r1, r1, sl
    2e50:	mul	r1, ip, r1
    2e54:	add	r9, r8, r1
    2e58:	ldr	ip, [r9, #4]
    2e5c:	add	ip, ip, #1
    2e60:	cmp	lr, ip
    2e64:	str	ip, [r9, #4]
    2e68:	bcs	2e80 <__assert_fail@plt+0x968>
    2e6c:	udiv	ip, ip, lr
    2e70:	ldr	r0, [r5, #28]
    2e74:	add	r0, r0, #1
    2e78:	str	r0, [r5, #28]
    2e7c:	str	ip, [r9, #8]
    2e80:	ldr	ip, [r8, r1]
    2e84:	mov	r0, #0
    2e88:	str	r0, [r2, #12]
    2e8c:	cmp	ip, r0
    2e90:	str	ip, [r2, #16]
    2e94:	strne	r2, [ip, #12]
    2e98:	str	r2, [r8, r1]
    2e9c:	ldr	r2, [sp, #4]
    2ea0:	b	2e30 <__assert_fail@plt+0x918>
    2ea4:			; <UNDEFINED> instruction: 0xff614e1b
    2ea8:	lfmgt	f7, 2, [fp], #-416	; 0xfffffe60
    2eac:	andeq	r4, r2, r4, asr r6
    2eb0:	andsge	r1, r1, r1, ror #31
    2eb4:			; <UNDEFINED> instruction: 0x000245b8
    2eb8:	andeq	pc, r7, sp, ror #14
    2ebc:	tsteq	r2, r9, lsl #2
    2ec0:	mcr2	14, 7, fp, cr13, cr7, {7}

00002ec4 <btbb_gen_syncword@@Base>:
    2ec4:	ldr	r2, [pc, #72]	; 2f14 <btbb_gen_syncword@@Base+0x50>
    2ec8:	mov	ip, r0
    2ecc:	mov	r1, #-1342177278	; 0xb0000002
    2ed0:	push	{r4, r5, lr}
    2ed4:	mov	r3, #0
    2ed8:	mov	lr, #8388608	; 0x800000
    2edc:	ldr	r0, [pc, #52]	; 2f18 <btbb_gen_syncword@@Base+0x54>
    2ee0:	add	r2, pc, r2
    2ee4:	add	r2, r2, #32
    2ee8:	ands	r4, ip, lr, asr r3
    2eec:	beq	2f04 <btbb_gen_syncword@@Base+0x40>
    2ef0:	add	r4, r2, r3, lsl #3
    2ef4:	ldr	r5, [r2, r3, lsl #3]
    2ef8:	ldr	r4, [r4, #4]
    2efc:	eor	r0, r0, r5
    2f00:	eor	r1, r1, r4
    2f04:	add	r3, r3, #1
    2f08:	cmp	r3, #24
    2f0c:	bne	2ee8 <btbb_gen_syncword@@Base+0x24>
    2f10:	pop	{r4, r5, pc}
    2f14:	andeq	sp, r0, r0, asr #19
    2f18:			; <UNDEFINED> instruction: 0xc7820e7e

00002f1c <btbb_get_release@@Base>:
    2f1c:	ldr	r0, [pc, #4]	; 2f28 <btbb_get_release@@Base+0xc>
    2f20:	add	r0, pc, r0
    2f24:	bx	lr
    2f28:	andeq	sp, r0, sl, asr #31

00002f2c <btbb_get_version@@Base>:
    2f2c:	ldr	r0, [pc, #4]	; 2f38 <btbb_get_version@@Base+0xc>
    2f30:	add	r0, pc, r0
    2f34:	bx	lr
    2f38:	andeq	sp, r0, r5, asr #31

00002f3c <btbb_init@@Base>:
    2f3c:	ldr	r3, [pc, #136]	; 2fcc <btbb_init@@Base+0x90>
    2f40:	cmp	r0, #5
    2f44:	push	{r4, r5, r6, lr}
    2f48:	add	r3, pc, r3
    2f4c:	bls	2f7c <btbb_init@@Base+0x40>
    2f50:	ldr	r2, [pc, #120]	; 2fd0 <btbb_init@@Base+0x94>
    2f54:	ldr	r1, [pc, #120]	; 2fd4 <btbb_init@@Base+0x98>
    2f58:	ldr	r3, [r3, r2]
    2f5c:	ldr	r2, [pc, #116]	; 2fd8 <btbb_init@@Base+0x9c>
    2f60:	add	r1, pc, r1
    2f64:	ldr	r0, [r3]
    2f68:	add	r2, pc, r2
    2f6c:	add	r2, r2, #224	; 0xe0
    2f70:	bl	2398 <fprintf@plt>
    2f74:	mvn	r0, #0
    2f78:	pop	{r4, r5, r6, pc}
    2f7c:	ldr	r3, [pc, #88]	; 2fdc <btbb_init@@Base+0xa0>
    2f80:	mov	r5, r0
    2f84:	ldr	r2, [pc, r3]
    2f88:	adds	r3, r0, #0
    2f8c:	movne	r3, #1
    2f90:	cmp	r2, #0
    2f94:	movne	r3, #0
    2f98:	cmp	r3, #0
    2f9c:	beq	2fc4 <btbb_init@@Base+0x88>
    2fa0:	mov	r4, #1
    2fa4:	mov	r3, r4
    2fa8:	mov	r2, #0
    2fac:	mov	r0, #0
    2fb0:	mov	r1, #0
    2fb4:	add	r4, r4, #1
    2fb8:	bl	2aa0 <__assert_fail@plt+0x588>
    2fbc:	cmp	r5, r4
    2fc0:	bge	2fa4 <btbb_init@@Base+0x68>
    2fc4:	mov	r0, #0
    2fc8:	pop	{r4, r5, r6, pc}
    2fcc:	strheq	r4, [r2], -r0
    2fd0:	andeq	r0, r0, r8, lsl #3
    2fd4:	muleq	r0, r9, pc	; <UNPREDICTABLE>
    2fd8:	andeq	sp, r0, r8, lsr r9
    2fdc:	andeq	r4, r2, r0, lsr #4

00002fe0 <btbb_packet_new@@Base>:
    2fe0:	push	{r4, r5, r6, lr}
    2fe4:	mov	r1, #5952	; 0x1740
    2fe8:	mov	r0, #1
    2fec:	ldr	r5, [pc, #52]	; 3028 <btbb_packet_new@@Base+0x48>
    2ff0:	bl	20c8 <calloc@plt>
    2ff4:	subs	r4, r0, #0
    2ff8:	movne	r3, #1
    2ffc:	add	r5, pc, r5
    3000:	strne	r3, [r4]
    3004:	bne	3020 <btbb_packet_new@@Base+0x40>
    3008:	ldr	r3, [pc, #28]	; 302c <btbb_packet_new@@Base+0x4c>
    300c:	ldr	r0, [pc, #28]	; 3030 <btbb_packet_new@@Base+0x50>
    3010:	ldr	r3, [r5, r3]
    3014:	add	r0, pc, r0
    3018:	ldr	r1, [r3]
    301c:	bl	24f4 <fputs@plt>
    3020:	mov	r0, r4
    3024:	pop	{r4, r5, r6, pc}
    3028:	strdeq	r3, [r2], -ip
    302c:	andeq	r0, r0, r8, lsl #3
    3030:	andeq	sp, r0, r5, lsl #30

00003034 <btbb_packet_ref@@Base>:
    3034:	ldr	r3, [r0]
    3038:	add	r3, r3, #1
    303c:	str	r3, [r0]
    3040:	bx	lr

00003044 <btbb_packet_unref@@Base>:
    3044:	ldr	r3, [r0]
    3048:	subs	r3, r3, #1
    304c:	beq	3058 <btbb_packet_unref@@Base+0x14>
    3050:	str	r3, [r0]
    3054:	bx	lr
    3058:	b	2164 <free@plt>

0000305c <btbb_packet_get_lap@@Base>:
    305c:	ldr	r0, [r0, #12]
    3060:	bx	lr

00003064 <btbb_packet_get_uap@@Base>:
    3064:	ldrb	r0, [r0, #9]
    3068:	bx	lr

0000306c <btbb_packet_get_nap@@Base>:
    306c:	ldrh	r0, [r0, #10]
    3070:	bx	lr

00003074 <btbb_packet_get_clkn@@Base>:
    3074:	ldr	r0, [r0, #2816]	; 0xb00
    3078:	bx	lr

0000307c <btbb_packet_get_channel@@Base>:
    307c:	ldrb	r0, [r0, #8]
    3080:	bx	lr

00003084 <btbb_packet_set_modulation@@Base>:
    3084:	strb	r1, [r0, #16]
    3088:	bx	lr

0000308c <btbb_packet_get_modulation@@Base>:
    308c:	ldrb	r0, [r0, #16]
    3090:	bx	lr

00003094 <btbb_packet_set_transport@@Base>:
    3094:	strb	r1, [r0, #17]
    3098:	bx	lr

0000309c <btbb_packet_get_transport@@Base>:
    309c:	ldrb	r0, [r0, #17]
    30a0:	bx	lr

000030a4 <btbb_packet_get_ac_errors@@Base>:
    30a4:	ldrb	r0, [r0, #2820]	; 0xb04
    30a8:	bx	lr

000030ac <promiscuous_packet_search@@Base>:
    30ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    30b0:	sub	sp, sp, #36	; 0x24
    30b4:	mov	r7, r0
    30b8:	add	r0, r0, #57	; 0x39
    30bc:	add	r7, r7, #62	; 0x3e
    30c0:	mov	r8, #0
    30c4:	ldr	sl, [pc, #684]	; 3378 <promiscuous_packet_search@@Base+0x2cc>
    30c8:	str	r1, [sp, #12]
    30cc:	mov	r1, #6
    30d0:	strd	r2, [sp, #16]
    30d4:	bl	26d4 <__assert_fail@plt+0x1bc>
    30d8:	ldr	r9, [sp, #72]	; 0x48
    30dc:	lsl	r0, r0, #1
    30e0:	add	sl, pc, sl
    30e4:	add	sl, sl, #368	; 0x170
    30e8:	uxtb	r6, r0
    30ec:	ldr	r3, [sp, #12]
    30f0:	cmp	r8, r3
    30f4:	mvnge	r8, #0
    30f8:	bge	31f8 <promiscuous_packet_search@@Base+0x14c>
    30fc:	sub	ip, r7, #62	; 0x3e
    3100:	ldrb	r0, [r7, #1]!
    3104:	lsr	r6, r6, #1
    3108:	ldr	r3, [pc, #620]	; 337c <promiscuous_packet_search@@Base+0x2d0>
    310c:	orr	r6, r6, r0, lsl #6
    3110:	add	r3, pc, r3
    3114:	uxtb	r6, r6
    3118:	add	r3, r3, r6
    311c:	ldrb	r3, [r3, #234]	; 0xea
    3120:	cmp	r3, #1
    3124:	bhi	335c <promiscuous_packet_search@@Base+0x2b0>
    3128:	mov	r0, #0
    312c:	mov	r5, r0
    3130:	mov	r1, r0
    3134:	ldrb	r2, [ip, r1]
    3138:	mov	r3, #0
    313c:	rsb	lr, r1, #32
    3140:	strd	r2, [sp]
    3144:	sub	r3, r1, #32
    3148:	ldr	r2, [sp]
    314c:	lsl	r3, r2, r3
    3150:	orr	r0, r0, r2, lsl r1
    3154:	add	r1, r1, #1
    3158:	orr	r3, r3, r2, lsr lr
    315c:	cmp	r1, #64	; 0x40
    3160:	orr	r5, r3, r5
    3164:	bne	3134 <promiscuous_packet_search@@Base+0x88>
    3168:	lsr	r3, r5, #25
    316c:	bic	r5, r5, #-33554432	; 0xfe000000
    3170:	ldr	r1, [sl, r3, lsl #3]
    3174:	add	r2, sl, r3, lsl #3
    3178:	ldr	r3, [r2, #4]
    317c:	orr	r0, r0, r1
    3180:	ldr	r1, [pc, #504]	; 3380 <promiscuous_packet_search@@Base+0x2d4>
    3184:	eor	r0, r0, #-1157627904	; 0xbb000000
    3188:	eor	r0, r0, #13369344	; 0xcc0000
    318c:	orr	r5, r5, r3
    3190:	eor	r0, r0, #21504	; 0x5400
    3194:	eor	r0, r0, #252	; 0xfc
    3198:	eor	r1, r5, r1
    319c:	bl	264c <__assert_fail@plt+0x134>
    31a0:	mov	r3, #0
    31a4:	mov	r2, r0
    31a8:	strd	r0, [sp]
    31ac:	strb	r3, [r9]
    31b0:	mov	r3, r1
    31b4:	orrs	r3, r2, r3
    31b8:	beq	31dc <promiscuous_packet_search@@Base+0x130>
    31bc:	mov	r3, r1
    31c0:	strd	r2, [sp, #24]
    31c4:	ldr	r3, [pc, #440]	; 3384 <promiscuous_packet_search@@Base+0x2d8>
    31c8:	ldr	ip, [pc, r3]
    31cc:	cmp	ip, #0
    31d0:	bne	3204 <promiscuous_packet_search@@Base+0x158>
    31d4:	mvn	r3, #0
    31d8:	strb	r3, [r9]
    31dc:	ldrb	r3, [r9]
    31e0:	ldr	r2, [sp, #20]
    31e4:	cmp	r3, r2
    31e8:	bgt	335c <promiscuous_packet_search@@Base+0x2b0>
    31ec:	ldr	r3, [sp, #16]
    31f0:	ubfx	r5, r5, #2, #24
    31f4:	str	r5, [r3]
    31f8:	mov	r0, r8
    31fc:	add	sp, sp, #36	; 0x24
    3200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3204:	ldm	sp, {r1, r3}
    3208:	bic	r2, r3, #16711680	; 0xff0000
    320c:	and	r3, r3, #16711680	; 0xff0000
    3210:	bic	r2, r2, #65280	; 0xff00
    3214:	and	r1, r1, #16711680	; 0xff0000
    3218:	add	r2, r2, #-1644167168	; 0x9e000000
    321c:	add	r2, r2, #3620864	; 0x374000
    3220:	add	r2, r2, #14720	; 0x3980
    3224:	add	r2, r2, #57	; 0x39
    3228:	add	r2, r2, r3
    322c:	ldr	r3, [sp, #4]
    3230:	and	r3, r3, #65280	; 0xff00
    3234:	add	r2, r2, r3
    3238:	ldr	r3, [sp]
    323c:	bic	r3, r3, #16711680	; 0xff0000
    3240:	bic	r3, r3, #65280	; 0xff00
    3244:	add	r3, r3, #-1627389952	; 0x9f000000
    3248:	add	r3, r3, #4784128	; 0x490000
    324c:	add	r3, r3, #47616	; 0xba00
    3250:	add	r3, r3, #194	; 0xc2
    3254:	add	r3, r3, r1
    3258:	ldr	r1, [sp]
    325c:	and	r0, r1, #65280	; 0xff00
    3260:	ldr	r1, [pc, #288]	; 3388 <promiscuous_packet_search@@Base+0x2dc>
    3264:	add	r3, r3, r0
    3268:	sub	r3, r3, r2
    326c:	add	r2, r2, #17825792	; 0x1100000
    3270:	eor	r3, r3, #520192	; 0x7f000
    3274:	add	r2, r2, #147456	; 0x24000
    3278:	eor	r3, r3, #1888	; 0x760
    327c:	add	r2, r2, #264	; 0x108
    3280:	eor	r3, r3, #13
    3284:	add	r2, r2, #1
    3288:	sub	r2, r2, r3
    328c:	sub	r1, r1, r3
    3290:	eor	r2, r2, r3, lsl #8
    3294:	sub	r1, r1, r2
    3298:	sub	r3, r3, r2
    329c:	eor	r1, r1, r2, lsr #13
    32a0:	sub	r3, r3, r1
    32a4:	sub	r2, r2, r1
    32a8:	eor	r3, r3, r1, lsr #12
    32ac:	sub	r2, r2, r3
    32b0:	sub	r1, r1, r3
    32b4:	eor	r2, r2, r3, lsl #16
    32b8:	sub	r1, r1, r2
    32bc:	sub	r3, r3, r2
    32c0:	eor	r1, r1, r2, lsr #5
    32c4:	sub	r3, r3, r1
    32c8:	sub	r2, r2, r1
    32cc:	eor	r3, r3, r1, lsr #3
    32d0:	sub	r2, r2, r3
    32d4:	sub	r1, r1, r3
    32d8:	eor	r2, r2, r3, lsl #10
    32dc:	ldr	r3, [ip, #16]
    32e0:	sub	r1, r1, r2
    32e4:	eor	r1, r1, r2, lsr #15
    32e8:	ldm	r3, {r0, r2}
    32ec:	sub	r2, r2, #1
    32f0:	and	r1, r1, r2
    32f4:	mov	r2, #12
    32f8:	mul	r1, r2, r1
    32fc:	ldr	r4, [r0, r1]
    3300:	cmp	r4, #0
    3304:	beq	31d4 <promiscuous_packet_search@@Base+0x128>
    3308:	ldr	fp, [r3, #20]
    330c:	add	r3, sp, #24
    3310:	rsb	fp, fp, #0
    3314:	add	r4, r4, fp
    3318:	cmp	r4, #0
    331c:	beq	31d4 <promiscuous_packet_search@@Base+0x128>
    3320:	ldr	r2, [r4, #40]	; 0x28
    3324:	cmp	r2, #8
    3328:	bne	3348 <promiscuous_packet_search@@Base+0x29c>
    332c:	mov	r1, r3
    3330:	ldr	r0, [r4, #36]	; 0x24
    3334:	str	r3, [sp]
    3338:	bl	21d0 <memcmp@plt>
    333c:	cmp	r0, #0
    3340:	ldr	r3, [sp]
    3344:	beq	3364 <promiscuous_packet_search@@Base+0x2b8>
    3348:	ldr	r4, [r4, #32]
    334c:	cmp	r4, #0
    3350:	beq	31d4 <promiscuous_packet_search@@Base+0x128>
    3354:	add	r4, r4, fp
    3358:	b	3318 <promiscuous_packet_search@@Base+0x26c>
    335c:	add	r8, r8, #1
    3360:	b	30ec <promiscuous_packet_search@@Base+0x40>
    3364:	ldrd	r0, [r4, #8]
    3368:	eor	r5, r5, r1
    336c:	bl	e718 <lell_pcapng_close@@Base+0x70>
    3370:	strb	r0, [r9]
    3374:	b	31dc <promiscuous_packet_search@@Base+0x130>
    3378:	andeq	sp, r0, r0, asr #15
    337c:	muleq	r0, r0, r7
    3380:	orrhi	r8, r4, #9600	; 0x2580
    3384:	ldrdeq	r3, [r2], -ip
    3388:	mcr2	14, 7, fp, cr13, cr7, {7}

0000338c <find_known_lap@@Base>:
    338c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3390:	mov	r8, r0
    3394:	mov	r0, r2
    3398:	mov	r5, r1
    339c:	mov	r9, r3
    33a0:	mov	r4, #0
    33a4:	bl	2284 <btbb_gen_syncword@plt>
    33a8:	mov	fp, r0
    33ac:	mov	sl, r1
    33b0:	cmp	r4, r5
    33b4:	blt	33c8 <find_known_lap@@Base+0x3c>
    33b8:	mvn	r4, #0
    33bc:	mov	r0, r4
    33c0:	add	sp, sp, #12
    33c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    33c8:	mov	r0, #0
    33cc:	add	lr, r8, r4
    33d0:	mov	r1, r0
    33d4:	mov	r3, r0
    33d8:	ldrb	r6, [lr], #1
    33dc:	mov	r7, #0
    33e0:	sub	ip, r3, #32
    33e4:	strd	r6, [sp]
    33e8:	rsb	r7, r3, #32
    33ec:	ldr	r2, [sp]
    33f0:	lsl	ip, r2, ip
    33f4:	orr	r0, r0, r2, lsl r3
    33f8:	add	r3, r3, #1
    33fc:	orr	ip, ip, r2, lsr r7
    3400:	cmp	r3, #64	; 0x40
    3404:	orr	r1, ip, r1
    3408:	bne	33d8 <find_known_lap@@Base+0x4c>
    340c:	eor	r0, r0, fp
    3410:	eor	r1, r1, sl
    3414:	bl	e718 <lell_pcapng_close@@Base+0x70>
    3418:	ldr	r3, [sp, #48]	; 0x30
    341c:	cmp	r0, r9
    3420:	strb	r0, [r3]
    3424:	ble	33bc <find_known_lap@@Base+0x30>
    3428:	add	r4, r4, #1
    342c:	b	33b0 <find_known_lap@@Base+0x24>

00003430 <btbb_packet_set_data@@Base>:
    3430:	movw	ip, #3125	; 0xc35
    3434:	push	{r4, lr}
    3438:	add	lr, r0, #2816	; 0xb00
    343c:	cmp	r2, ip
    3440:	add	lr, lr, #8
    3444:	movge	r2, ip
    3448:	mov	ip, #0
    344c:	cmp	ip, r2
    3450:	blt	3470 <btbb_packet_set_data@@Base+0x40>
    3454:	movw	r1, #2822	; 0xb06
    3458:	strh	r2, [r0, r1]
    345c:	strb	r3, [r0, #8]
    3460:	ldr	r3, [sp, #8]
    3464:	lsr	r3, r3, #1
    3468:	str	r3, [r0, #2816]	; 0xb00
    346c:	pop	{r4, pc}
    3470:	ldrb	r4, [r1, ip]
    3474:	add	ip, ip, #1
    3478:	strb	r4, [lr], #1
    347c:	b	344c <btbb_packet_set_data@@Base+0x1c>

00003480 <btbb_packet_set_flag@@Base>:
    3480:	mov	r3, #1
    3484:	cmp	r2, #0
    3488:	lsl	r1, r3, r1
    348c:	ldr	r3, [r0, #4]
    3490:	biceq	r3, r3, r1
    3494:	orrne	r3, r3, r1
    3498:	str	r3, [r0, #4]
    349c:	bx	lr

000034a0 <btbb_packet_set_uap@@Base>:
    34a0:	mov	r2, #1
    34a4:	strb	r1, [r0, #9]
    34a8:	mov	r1, #2
    34ac:	b	214c <btbb_packet_set_flag@plt>

000034b0 <btbb_find_ac@@Base>:
    34b0:	push	{r4, r5, lr}
    34b4:	sub	sp, sp, #28
    34b8:	cmn	r2, #1
    34bc:	add	ip, sp, #23
    34c0:	str	ip, [sp]
    34c4:	str	r2, [sp, #12]
    34c8:	ldr	r5, [sp, #40]	; 0x28
    34cc:	bne	3528 <btbb_find_ac@@Base+0x78>
    34d0:	add	r2, sp, #12
    34d4:	bl	24ac <promiscuous_packet_search@plt>
    34d8:	cmp	r0, #0
    34dc:	mov	r4, r0
    34e0:	blt	351c <btbb_find_ac@@Base+0x6c>
    34e4:	ldr	r3, [r5]
    34e8:	cmp	r3, #0
    34ec:	bne	34f8 <btbb_find_ac@@Base+0x48>
    34f0:	bl	22fc <btbb_packet_new@plt>
    34f4:	str	r0, [r5]
    34f8:	ldrb	r3, [sp, #23]
    34fc:	mov	r1, #0
    3500:	ldr	r0, [r5]
    3504:	ldr	r2, [sp, #12]
    3508:	str	r1, [r0, #4]
    350c:	str	r2, [r0, #12]
    3510:	mov	r2, #1
    3514:	strb	r3, [r0, #2820]	; 0xb04
    3518:	bl	214c <btbb_packet_set_flag@plt>
    351c:	mov	r0, r4
    3520:	add	sp, sp, #28
    3524:	pop	{r4, r5, pc}
    3528:	bl	23c8 <find_known_lap@plt>
    352c:	b	34d8 <btbb_find_ac@@Base+0x28>

00003530 <btbb_packet_get_flag@@Base>:
    3530:	ldr	r3, [r0, #4]
    3534:	mov	r2, #1
    3538:	ands	r3, r3, r2, lsl r1
    353c:	movne	r0, r2
    3540:	moveq	r0, #0
    3544:	bx	lr
    3548:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    354c:	mov	r9, r3
    3550:	and	r2, r2, #63	; 0x3f
    3554:	mov	r6, #127	; 0x7f
    3558:	mov	r7, r0
    355c:	mov	r8, r1
    3560:	mov	r5, #0
    3564:	ldr	r3, [pc, #108]	; 35d8 <btbb_packet_get_flag@@Base+0xa8>
    3568:	ldr	sl, [pc, #108]	; 35dc <btbb_packet_get_flag@@Base+0xac>
    356c:	add	r3, pc, r3
    3570:	add	r3, r3, r2
    3574:	ldrb	r4, [r3, #1392]	; 0x570
    3578:	add	sl, pc, sl
    357c:	ldr	r3, [sp, #32]
    3580:	add	r4, r4, r3
    3584:	sdiv	r3, r4, r6
    3588:	rsb	r3, r3, r3, lsl #7
    358c:	sub	r4, r4, r3
    3590:	cmp	r5, r9
    3594:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
    3598:	mov	r1, #0
    359c:	ldr	r0, [sp, #36]	; 0x24
    35a0:	bl	21a0 <btbb_packet_get_flag@plt>
    35a4:	cmp	r0, #0
    35a8:	addne	r3, sl, r4
    35ac:	ldrbne	r2, [r7, r5]
    35b0:	add	r4, r4, #1
    35b4:	ldrbne	r3, [r3, #1456]	; 0x5b0
    35b8:	ldrbeq	r2, [r7, r5]
    35bc:	eorne	r2, r2, r3
    35c0:	strb	r2, [r8, r5]
    35c4:	sdiv	r2, r4, r6
    35c8:	add	r5, r5, #1
    35cc:	rsb	r2, r2, r2, lsl #7
    35d0:	sub	r4, r4, r2
    35d4:	b	3590 <btbb_packet_get_flag@@Base+0x60>
    35d8:	andeq	sp, r0, r4, lsr r3
    35dc:	andeq	sp, r0, r8, lsr #6
    35e0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    35e4:	cmp	r2, #2
    35e8:	mov	r5, r2
    35ec:	mov	r6, r1
    35f0:	ldr	r2, [sp, #32]
    35f4:	ldr	r4, [sp, #36]	; 0x24
    35f8:	bne	36e8 <btbb_packet_get_flag@@Base+0x1b8>
    35fc:	cmp	r3, #15
    3600:	bgt	3610 <btbb_packet_get_flag@@Base+0xe0>
    3604:	mov	r0, #0
    3608:	add	sp, sp, #12
    360c:	pop	{r4, r5, r6, r7, pc}
    3610:	cmp	r2, #0
    3614:	beq	36cc <btbb_packet_get_flag@@Base+0x19c>
    3618:	cmp	r3, #29
    361c:	ble	3604 <btbb_packet_get_flag@@Base+0xd4>
    3620:	mov	r1, #16
    3624:	bl	28ac <__assert_fail@plt+0x394>
    3628:	subs	r7, r0, #0
    362c:	beq	3604 <btbb_packet_get_flag@@Base+0xd4>
    3630:	mov	r3, #18
    3634:	mov	r2, r6
    3638:	add	r1, r4, #44	; 0x2c
    363c:	stm	sp, {r3, r4}
    3640:	mov	r3, #16
    3644:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3648:	mov	r0, r7
    364c:	bl	2164 <free@plt>
    3650:	mov	r1, #10
    3654:	add	r0, r4, #47	; 0x2f
    3658:	bl	26fc <__assert_fail@plt+0x1e4>
    365c:	add	r0, r0, #4
    3660:	ldrb	r3, [r4, #18]
    3664:	str	r0, [r4, #64]	; 0x40
    3668:	sub	r3, r3, #3
    366c:	uxtb	r3, r3
    3670:	cmp	r3, #12
    3674:	movhi	r3, #0
    3678:	bhi	3690 <btbb_packet_get_flag@@Base+0x160>
    367c:	ldr	r2, [pc, #220]	; 3760 <btbb_packet_get_flag@@Base+0x230>
    3680:	lsl	r3, r3, #1
    3684:	add	r2, pc, r2
    3688:	add	r2, r2, #1584	; 0x630
    368c:	ldrsh	r3, [r2, r3]
    3690:	mov	r1, #2
    3694:	add	r0, r4, #44	; 0x2c
    3698:	ldr	r2, [r4, #64]	; 0x40
    369c:	cmp	r2, r3
    36a0:	strle	r2, [r4, #64]	; 0x40
    36a4:	strgt	r3, [r4, #64]	; 0x40
    36a8:	bl	26d4 <__assert_fail@plt+0x1bc>
    36ac:	mov	r1, #1
    36b0:	strb	r0, [r4, #60]	; 0x3c
    36b4:	add	r0, r4, #46	; 0x2e
    36b8:	bl	26d4 <__assert_fail@plt+0x1bc>
    36bc:	str	r5, [r4, #40]	; 0x28
    36c0:	strb	r0, [r4, #61]	; 0x3d
    36c4:	mov	r0, #1
    36c8:	b	3608 <btbb_packet_get_flag@@Base+0xd8>
    36cc:	mov	r3, #18
    36d0:	mov	r2, r1
    36d4:	add	r1, r4, #44	; 0x2c
    36d8:	stm	sp, {r3, r4}
    36dc:	mov	r3, #16
    36e0:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    36e4:	b	3650 <btbb_packet_get_flag@@Base+0x120>
    36e8:	cmp	r3, #7
    36ec:	ble	3604 <btbb_packet_get_flag@@Base+0xd4>
    36f0:	cmp	r2, #0
    36f4:	beq	3744 <btbb_packet_get_flag@@Base+0x214>
    36f8:	cmp	r3, #14
    36fc:	ble	3604 <btbb_packet_get_flag@@Base+0xd4>
    3700:	mov	r1, #8
    3704:	bl	28ac <__assert_fail@plt+0x394>
    3708:	subs	r7, r0, #0
    370c:	beq	3604 <btbb_packet_get_flag@@Base+0xd4>
    3710:	mov	r3, #18
    3714:	mov	r2, r6
    3718:	add	r1, r4, #44	; 0x2c
    371c:	stm	sp, {r3, r4}
    3720:	mov	r3, #8
    3724:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3728:	mov	r0, r7
    372c:	bl	2164 <free@plt>
    3730:	mov	r1, #5
    3734:	add	r0, r4, #47	; 0x2f
    3738:	bl	26d4 <__assert_fail@plt+0x1bc>
    373c:	add	r0, r0, #3
    3740:	b	3660 <btbb_packet_get_flag@@Base+0x130>
    3744:	mov	r3, #18
    3748:	mov	r2, r1
    374c:	add	r1, r4, #44	; 0x2c
    3750:	stm	sp, {r3, r4}
    3754:	mov	r3, #8
    3758:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    375c:	b	3730 <btbb_packet_get_flag@@Base+0x200>
    3760:	andeq	sp, r0, ip, lsl r2

00003764 <btbb_get_symbols@@Base>:
    3764:	add	r0, r0, #2816	; 0xb00
    3768:	add	r0, r0, #8
    376c:	bx	lr

00003770 <btbb_packet_get_payload_length@@Base>:
    3770:	ldr	r0, [r0, #64]	; 0x40
    3774:	bx	lr

00003778 <btbb_get_payload@@Base>:
    3778:	add	r0, r0, #68	; 0x44
    377c:	bx	lr

00003780 <btbb_get_payload_packed@@Base>:
    3780:	push	{r4, r5, r6, r7, r8, lr}
    3784:	mov	r6, r0
    3788:	mov	r7, r1
    378c:	add	r5, r0, #68	; 0x44
    3790:	mov	r4, #0
    3794:	ldr	r0, [r6, #64]	; 0x40
    3798:	cmp	r0, r4
    379c:	pople	{r4, r5, r6, r7, r8, pc}
    37a0:	mov	r0, r5
    37a4:	mov	r1, #8
    37a8:	bl	26d4 <__assert_fail@plt+0x1bc>
    37ac:	add	r5, r5, #8
    37b0:	strb	r0, [r7, r4]
    37b4:	add	r4, r4, #1
    37b8:	b	3794 <btbb_get_payload_packed@@Base+0x14>

000037bc <btbb_packet_get_type@@Base>:
    37bc:	ldrb	r0, [r0, #18]
    37c0:	bx	lr

000037c4 <btbb_packet_get_lt_addr@@Base>:
    37c4:	ldrb	r0, [r0, #19]
    37c8:	bx	lr

000037cc <btbb_packet_get_header_flags@@Base>:
    37cc:	ldrb	r0, [r0, #20]
    37d0:	bx	lr

000037d4 <btbb_packet_get_hec@@Base>:
    37d4:	ldrb	r0, [r0, #21]
    37d8:	bx	lr

000037dc <btbb_packet_get_header_packed@@Base>:
    37dc:	add	r2, r0, #21
    37e0:	mov	r0, #0
    37e4:	mov	r3, r0
    37e8:	ldrb	r1, [r2, #1]!
    37ec:	orr	r0, r0, r1, lsl r3
    37f0:	add	r3, r3, #1
    37f4:	cmp	r3, #18
    37f8:	bne	37e8 <btbb_packet_get_header_packed@@Base+0xc>
    37fc:	bx	lr

00003800 <fhs@@Base>:
    3800:	movw	r3, #2822	; 0xb06
    3804:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    3808:	ldrh	r2, [r1, r3]
    380c:	mov	r3, #20
    3810:	str	r3, [r1, #64]	; 0x40
    3814:	movw	r3, #361	; 0x169
    3818:	cmp	r2, r3
    381c:	movls	r5, #1
    3820:	bls	388c <fhs@@Base+0x8c>
    3824:	mov	r4, r1
    3828:	mov	r7, r0
    382c:	add	r0, r4, #2944	; 0xb80
    3830:	mov	r1, #160	; 0xa0
    3834:	add	r0, r0, #2
    3838:	bl	28ac <__assert_fail@plt+0x394>
    383c:	subs	r6, r0, #0
    3840:	moveq	r5, r6
    3844:	beq	388c <fhs@@Base+0x8c>
    3848:	ldr	r3, [r4, #64]	; 0x40
    384c:	mov	r8, #18
    3850:	add	r9, r4, #68	; 0x44
    3854:	mov	r2, r7
    3858:	mov	r1, r9
    385c:	str	r8, [sp]
    3860:	str	r4, [sp, #4]
    3864:	lsl	r3, r3, #3
    3868:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    386c:	mov	r0, r4
    3870:	bl	2818 <__assert_fail@plt+0x300>
    3874:	cmp	r0, #0
    3878:	moveq	r7, #32
    387c:	beq	3898 <fhs@@Base+0x98>
    3880:	mov	r0, r6
    3884:	mov	r5, #1000	; 0x3e8
    3888:	bl	2164 <free@plt>
    388c:	mov	r0, r5
    3890:	add	sp, sp, #12
    3894:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3898:	ldr	r3, [r4, #64]	; 0x40
    389c:	mov	r2, r7
    38a0:	mov	r1, r9
    38a4:	mov	r0, r6
    38a8:	str	r8, [sp]
    38ac:	str	r4, [sp, #4]
    38b0:	lsl	r3, r3, #3
    38b4:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    38b8:	mov	r0, r4
    38bc:	bl	2818 <__assert_fail@plt+0x300>
    38c0:	subs	r5, r0, #0
    38c4:	bne	3880 <fhs@@Base+0x80>
    38c8:	add	r7, r7, #1
    38cc:	cmp	r7, #64	; 0x40
    38d0:	bne	3898 <fhs@@Base+0x98>
    38d4:	mov	r0, r6
    38d8:	bl	2164 <free@plt>
    38dc:	b	388c <fhs@@Base+0x8c>

000038e0 <DM@@Base>:
    38e0:	movw	r3, #2822	; 0xb06
    38e4:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    38e8:	add	r7, r1, #2944	; 0xb80
    38ec:	add	r7, r7, #2
    38f0:	ldrh	r2, [r1, r3]
    38f4:	ldrb	r3, [r1, #18]
    38f8:	sub	r9, r2, #122	; 0x7a
    38fc:	sub	r3, r3, #3
    3900:	cmp	r3, #11
    3904:	addls	pc, pc, r3, lsl #2
    3908:	b	3970 <DM@@Base+0x90>
    390c:	b	3998 <DM@@Base+0xb8>
    3910:	b	3970 <DM@@Base+0x90>
    3914:	b	3970 <DM@@Base+0x90>
    3918:	b	3970 <DM@@Base+0x90>
    391c:	b	3970 <DM@@Base+0x90>
    3920:	b	3978 <DM@@Base+0x98>
    3924:	b	3970 <DM@@Base+0x90>
    3928:	b	393c <DM@@Base+0x5c>
    392c:	b	3970 <DM@@Base+0x90>
    3930:	b	3970 <DM@@Base+0x90>
    3934:	b	3970 <DM@@Base+0x90>
    3938:	b	3990 <DM@@Base+0xb0>
    393c:	mov	sl, #125	; 0x7d
    3940:	mov	r2, #2
    3944:	mov	r4, r1
    3948:	mov	r5, #1
    394c:	mov	r1, r0
    3950:	mov	r8, r0
    3954:	mov	r3, r9
    3958:	mov	r0, r7
    395c:	str	r5, [sp]
    3960:	str	r4, [sp, #4]
    3964:	bl	35e0 <btbb_packet_get_flag@@Base+0xb0>
    3968:	cmp	r0, #0
    396c:	bne	39a0 <DM@@Base+0xc0>
    3970:	mov	r0, #0
    3974:	b	3a00 <DM@@Base+0x120>
    3978:	add	r7, r1, #3024	; 0xbd0
    397c:	sub	r9, r2, #202	; 0xca
    3980:	add	r7, r7, #2
    3984:	mov	sl, #12
    3988:	mov	r2, #1
    398c:	b	3944 <DM@@Base+0x64>
    3990:	mov	sl, #228	; 0xe4
    3994:	b	3940 <DM@@Base+0x60>
    3998:	mov	sl, #20
    399c:	b	3988 <DM@@Base+0xa8>
    39a0:	ldr	r6, [r4, #64]	; 0x40
    39a4:	cmp	r6, sl
    39a8:	bgt	3a08 <DM@@Base+0x128>
    39ac:	lsl	r6, r6, #3
    39b0:	cmp	r9, r6
    39b4:	blt	3a08 <DM@@Base+0x128>
    39b8:	mov	r1, r6
    39bc:	mov	r0, r7
    39c0:	bl	28ac <__assert_fail@plt+0x394>
    39c4:	subs	r5, r0, #0
    39c8:	beq	3970 <DM@@Base+0x90>
    39cc:	mov	r3, #18
    39d0:	mov	r2, r8
    39d4:	add	r1, r4, #68	; 0x44
    39d8:	stm	sp, {r3, r4}
    39dc:	mov	r3, r6
    39e0:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    39e4:	mov	r0, r5
    39e8:	bl	2164 <free@plt>
    39ec:	mov	r0, r4
    39f0:	bl	2818 <__assert_fail@plt+0x300>
    39f4:	cmp	r0, #0
    39f8:	moveq	r0, #2
    39fc:	movne	r0, #10
    3a00:	add	sp, sp, #8
    3a04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3a08:	mov	r0, r5
    3a0c:	b	3a00 <DM@@Base+0x120>

00003a10 <DH@@Base>:
    3a10:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
    3a14:	ldrb	r3, [r1, #18]
    3a18:	sub	r3, r3, #4
    3a1c:	cmp	r3, #11
    3a20:	addls	pc, pc, r3, lsl #2
    3a24:	b	3b0c <DH@@Base+0xfc>
    3a28:	b	3b00 <DH@@Base+0xf0>
    3a2c:	b	3b0c <DH@@Base+0xfc>
    3a30:	b	3b0c <DH@@Base+0xfc>
    3a34:	b	3b0c <DH@@Base+0xfc>
    3a38:	b	3b0c <DH@@Base+0xfc>
    3a3c:	b	3b00 <DH@@Base+0xf0>
    3a40:	b	3b0c <DH@@Base+0xfc>
    3a44:	b	3a58 <DH@@Base+0x48>
    3a48:	b	3b0c <DH@@Base+0xfc>
    3a4c:	b	3b0c <DH@@Base+0xfc>
    3a50:	b	3b0c <DH@@Base+0xfc>
    3a54:	b	3af8 <DH@@Base+0xe8>
    3a58:	mov	r8, #187	; 0xbb
    3a5c:	mov	r2, #2
    3a60:	movw	r3, #2822	; 0xb06
    3a64:	mov	r4, r1
    3a68:	ldrh	r7, [r1, r3]
    3a6c:	add	r5, r1, #2944	; 0xb80
    3a70:	mov	r3, #0
    3a74:	add	r5, r5, #2
    3a78:	mov	r1, r0
    3a7c:	mov	r6, r0
    3a80:	mov	r0, r5
    3a84:	stm	sp, {r3, r4}
    3a88:	sub	r7, r7, #122	; 0x7a
    3a8c:	mov	r3, r7
    3a90:	bl	35e0 <btbb_packet_get_flag@@Base+0xb0>
    3a94:	cmp	r0, #0
    3a98:	beq	3af0 <DH@@Base+0xe0>
    3a9c:	ldr	r3, [r4, #64]	; 0x40
    3aa0:	cmp	r3, r8
    3aa4:	bgt	3b14 <DH@@Base+0x104>
    3aa8:	lsl	r3, r3, #3
    3aac:	cmp	r7, r3
    3ab0:	blt	3b14 <DH@@Base+0x104>
    3ab4:	mov	r2, #18
    3ab8:	mov	r0, r5
    3abc:	add	r1, r4, #68	; 0x44
    3ac0:	stm	sp, {r2, r4}
    3ac4:	mov	r2, r6
    3ac8:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3acc:	ldrb	r3, [r4, #18]
    3ad0:	cmp	r3, #9
    3ad4:	moveq	r0, #2
    3ad8:	beq	3af0 <DH@@Base+0xe0>
    3adc:	mov	r0, r4
    3ae0:	bl	2818 <__assert_fail@plt+0x300>
    3ae4:	cmp	r0, #0
    3ae8:	moveq	r0, #2
    3aec:	movne	r0, #10
    3af0:	add	sp, sp, #8
    3af4:	pop	{r4, r5, r6, r7, r8, pc}
    3af8:	movw	r8, #343	; 0x157
    3afc:	b	3a5c <DH@@Base+0x4c>
    3b00:	mov	r8, #30
    3b04:	mov	r2, #1
    3b08:	b	3a60 <DH@@Base+0x50>
    3b0c:	mov	r0, #0
    3b10:	b	3af0 <DH@@Base+0xe0>
    3b14:	mov	r0, #1
    3b18:	b	3af0 <DH@@Base+0xe0>

00003b1c <EV3@@Base>:
    3b1c:	movw	r3, #2822	; 0xb06
    3b20:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    3b24:	add	r6, r1, #2944	; 0xb80
    3b28:	mov	r8, r0
    3b2c:	mov	r4, r1
    3b30:	add	r6, r6, #2
    3b34:	add	r9, r1, #68	; 0x44
    3b38:	ldrh	r7, [r1, r3]
    3b3c:	mov	r3, #0
    3b40:	str	r3, [r1, #64]	; 0x40
    3b44:	sub	r7, r7, #122	; 0x7a
    3b48:	ldr	r1, [r4, #64]	; 0x40
    3b4c:	cmp	r1, #31
    3b50:	ble	3b60 <EV3@@Base+0x44>
    3b54:	mov	r0, #2
    3b58:	add	sp, sp, #12
    3b5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3b60:	lsl	r1, r1, #3
    3b64:	add	r3, r1, #7
    3b68:	cmp	r3, r7
    3b6c:	bge	3bb4 <EV3@@Base+0x98>
    3b70:	add	r3, r1, #18
    3b74:	mov	r2, r8
    3b78:	add	r1, r9, r1
    3b7c:	mov	r0, r6
    3b80:	stm	sp, {r3, r4}
    3b84:	mov	r3, #8
    3b88:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3b8c:	ldr	r5, [r4, #64]	; 0x40
    3b90:	cmp	r5, #2
    3b94:	ble	3ba8 <EV3@@Base+0x8c>
    3b98:	mov	r0, r4
    3b9c:	bl	2818 <__assert_fail@plt+0x300>
    3ba0:	cmp	r0, #0
    3ba4:	bne	3bbc <EV3@@Base+0xa0>
    3ba8:	add	r5, r5, #1
    3bac:	str	r5, [r4, #64]	; 0x40
    3bb0:	b	3b48 <EV3@@Base+0x2c>
    3bb4:	mov	r0, #1
    3bb8:	b	3b58 <EV3@@Base+0x3c>
    3bbc:	mov	r0, #10
    3bc0:	b	3b58 <EV3@@Base+0x3c>

00003bc4 <EV4@@Base>:
    3bc4:	movw	r3, #2822	; 0xb06
    3bc8:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    3bcc:	mov	r6, #0
    3bd0:	add	r9, r1, #2944	; 0xb80
    3bd4:	mov	sl, r0
    3bd8:	mov	r5, r1
    3bdc:	mov	r4, r6
    3be0:	ldrh	r8, [r1, r3]
    3be4:	add	r9, r9, #2
    3be8:	mov	r3, #1
    3bec:	str	r3, [r1, #64]	; 0x40
    3bf0:	sub	r8, r8, #122	; 0x7a
    3bf4:	add	r3, r4, #14
    3bf8:	cmp	r8, r3
    3bfc:	ble	3c90 <EV4@@Base+0xcc>
    3c00:	mov	r1, #10
    3c04:	add	r0, r9, r4
    3c08:	bl	28ac <__assert_fail@plt+0x394>
    3c0c:	subs	r7, r0, #0
    3c10:	bne	3c28 <EV4@@Base+0x64>
    3c14:	cmp	r4, #44	; 0x2c
    3c18:	movle	r0, #0
    3c1c:	movgt	r0, #1
    3c20:	add	sp, sp, #8
    3c24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    3c28:	add	r3, r6, #18
    3c2c:	add	r1, r5, #68	; 0x44
    3c30:	mov	r2, sl
    3c34:	add	r1, r1, r6
    3c38:	stm	sp, {r3, r5}
    3c3c:	mov	r3, #10
    3c40:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3c44:	mov	r0, r7
    3c48:	bl	2164 <free@plt>
    3c4c:	ldr	r7, [r5, #64]	; 0x40
    3c50:	cmp	r6, r7, lsl #3
    3c54:	bge	3c74 <EV4@@Base+0xb0>
    3c58:	add	r4, r4, #15
    3c5c:	movw	r3, #1470	; 0x5be
    3c60:	cmp	r4, r3
    3c64:	add	r6, r6, #10
    3c68:	bne	3bf4 <EV4@@Base+0x30>
    3c6c:	mov	r0, #2
    3c70:	b	3c20 <EV4@@Base+0x5c>
    3c74:	mov	r0, r5
    3c78:	bl	2818 <__assert_fail@plt+0x300>
    3c7c:	cmp	r0, #0
    3c80:	bne	3c98 <EV4@@Base+0xd4>
    3c84:	add	r7, r7, #1
    3c88:	str	r7, [r5, #64]	; 0x40
    3c8c:	b	3c4c <EV4@@Base+0x88>
    3c90:	mov	r0, #1
    3c94:	b	3c20 <EV4@@Base+0x5c>
    3c98:	mov	r0, #10
    3c9c:	b	3c20 <EV4@@Base+0x5c>

00003ca0 <EV5@@Base>:
    3ca0:	movw	r3, #2822	; 0xb06
    3ca4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    3ca8:	add	r6, r1, #2944	; 0xb80
    3cac:	mov	r8, r0
    3cb0:	mov	r4, r1
    3cb4:	add	r6, r6, #2
    3cb8:	add	r9, r1, #68	; 0x44
    3cbc:	ldrh	r7, [r1, r3]
    3cc0:	mov	r3, #0
    3cc4:	str	r3, [r1, #64]	; 0x40
    3cc8:	sub	r7, r7, #122	; 0x7a
    3ccc:	ldr	r1, [r4, #64]	; 0x40
    3cd0:	cmp	r1, #181	; 0xb5
    3cd4:	ble	3ce4 <EV5@@Base+0x44>
    3cd8:	mov	r0, #2
    3cdc:	add	sp, sp, #12
    3ce0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    3ce4:	lsl	r1, r1, #3
    3ce8:	add	r3, r1, #7
    3cec:	cmp	r3, r7
    3cf0:	bge	3d38 <EV5@@Base+0x98>
    3cf4:	add	r3, r1, #18
    3cf8:	mov	r2, r8
    3cfc:	add	r1, r9, r1
    3d00:	mov	r0, r6
    3d04:	stm	sp, {r3, r4}
    3d08:	mov	r3, #8
    3d0c:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3d10:	ldr	r5, [r4, #64]	; 0x40
    3d14:	cmp	r5, #2
    3d18:	ble	3d2c <EV5@@Base+0x8c>
    3d1c:	mov	r0, r4
    3d20:	bl	2818 <__assert_fail@plt+0x300>
    3d24:	cmp	r0, #0
    3d28:	bne	3d40 <EV5@@Base+0xa0>
    3d2c:	add	r5, r5, #1
    3d30:	str	r5, [r4, #64]	; 0x40
    3d34:	b	3ccc <EV5@@Base+0x2c>
    3d38:	mov	r0, #1
    3d3c:	b	3cdc <EV5@@Base+0x3c>
    3d40:	mov	r0, #10
    3d44:	b	3cdc <EV5@@Base+0x3c>

00003d48 <HV@@Base>:
    3d48:	movw	r3, #2822	; 0xb06
    3d4c:	movw	r2, #361	; 0x169
    3d50:	ldrh	ip, [r1, r3]
    3d54:	mov	r3, #0
    3d58:	str	r3, [r1, #40]	; 0x28
    3d5c:	cmp	ip, r2
    3d60:	bhi	3d70 <HV@@Base+0x28>
    3d64:	mov	r0, #1
    3d68:	str	r3, [r1, #64]	; 0x40
    3d6c:	bx	lr
    3d70:	push	{r4, r5, r6, r7, lr}
    3d74:	add	r5, r1, #2944	; 0xb80
    3d78:	mov	r4, r1
    3d7c:	sub	sp, sp, #92	; 0x5c
    3d80:	mov	r6, r0
    3d84:	add	r5, r5, #2
    3d88:	ldrb	r1, [r1, #18]
    3d8c:	cmp	r1, #6
    3d90:	beq	3dfc <HV@@Base+0xb4>
    3d94:	cmp	r1, #7
    3d98:	beq	3e60 <HV@@Base+0x118>
    3d9c:	cmp	r1, #5
    3da0:	bne	3e54 <HV@@Base+0x10c>
    3da4:	add	r7, sp, #8
    3da8:	mov	r2, #80	; 0x50
    3dac:	mov	r1, r7
    3db0:	mov	r0, r5
    3db4:	bl	277c <__assert_fail@plt+0x264>
    3db8:	cmp	r0, #0
    3dbc:	beq	3e58 <HV@@Base+0x110>
    3dc0:	mov	r3, #10
    3dc4:	mov	r2, #1
    3dc8:	mov	r1, #7
    3dcc:	mov	r0, r4
    3dd0:	str	r3, [r4, #64]	; 0x40
    3dd4:	bl	214c <btbb_packet_set_flag@plt>
    3dd8:	ldr	r3, [r4, #64]	; 0x40
    3ddc:	mov	r2, #18
    3de0:	add	r1, r4, #68	; 0x44
    3de4:	mov	r0, r7
    3de8:	stm	sp, {r2, r4}
    3dec:	mov	r2, r6
    3df0:	lsl	r3, r3, #3
    3df4:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3df8:	b	3e54 <HV@@Base+0x10c>
    3dfc:	mov	r0, r5
    3e00:	mov	r1, #160	; 0xa0
    3e04:	bl	28ac <__assert_fail@plt+0x394>
    3e08:	subs	r5, r0, #0
    3e0c:	moveq	r0, r5
    3e10:	beq	3e58 <HV@@Base+0x110>
    3e14:	mov	r3, #20
    3e18:	mov	r2, #1
    3e1c:	mov	r1, #7
    3e20:	mov	r0, r4
    3e24:	str	r3, [r4, #64]	; 0x40
    3e28:	bl	214c <btbb_packet_set_flag@plt>
    3e2c:	ldr	r3, [r4, #64]	; 0x40
    3e30:	mov	r2, #18
    3e34:	mov	r0, r5
    3e38:	add	r1, r4, #68	; 0x44
    3e3c:	stm	sp, {r2, r4}
    3e40:	mov	r2, r6
    3e44:	lsl	r3, r3, #3
    3e48:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3e4c:	mov	r0, r5
    3e50:	bl	2164 <free@plt>
    3e54:	mov	r0, #2
    3e58:	add	sp, sp, #92	; 0x5c
    3e5c:	pop	{r4, r5, r6, r7, pc}
    3e60:	mov	r3, #30
    3e64:	mov	r2, #1
    3e68:	mov	r0, r4
    3e6c:	str	r3, [r4, #64]	; 0x40
    3e70:	bl	214c <btbb_packet_set_flag@plt>
    3e74:	ldr	r3, [r4, #64]	; 0x40
    3e78:	mov	r2, #18
    3e7c:	add	r1, r4, #68	; 0x44
    3e80:	mov	r0, r5
    3e84:	stm	sp, {r2, r4}
    3e88:	mov	r2, r6
    3e8c:	lsl	r3, r3, #3
    3e90:	b	3df4 <HV@@Base+0xac>

00003e94 <crc_check@@Base>:
    3e94:	ldrb	r3, [r1, #18]
    3e98:	push	{r4, lr}
    3e9c:	mov	r4, r1
    3ea0:	sub	r3, r3, #2
    3ea4:	cmp	r3, #13
    3ea8:	addls	pc, pc, r3, lsl #2
    3eac:	b	3f5c <crc_check@@Base+0xc8>
    3eb0:	b	3ee8 <crc_check@@Base+0x54>
    3eb4:	b	3f10 <crc_check@@Base+0x7c>
    3eb8:	b	3f18 <crc_check@@Base+0x84>
    3ebc:	b	3f38 <crc_check@@Base+0xa4>
    3ec0:	b	3f5c <crc_check@@Base+0xc8>
    3ec4:	b	3f20 <crc_check@@Base+0x8c>
    3ec8:	b	3f10 <crc_check@@Base+0x7c>
    3ecc:	b	3f5c <crc_check@@Base+0xc8>
    3ed0:	b	3f10 <crc_check@@Base+0x7c>
    3ed4:	b	3f18 <crc_check@@Base+0x84>
    3ed8:	b	3f28 <crc_check@@Base+0x94>
    3edc:	b	3f30 <crc_check@@Base+0x9c>
    3ee0:	b	3f10 <crc_check@@Base+0x7c>
    3ee4:	b	3f18 <crc_check@@Base+0x84>
    3ee8:	bl	21ac <fhs@plt>
    3eec:	cmp	r0, #0
    3ef0:	bne	3f40 <crc_check@@Base+0xac>
    3ef4:	ldrb	r3, [r4, #18]
    3ef8:	sub	r0, r3, #2
    3efc:	cmp	r3, #5
    3f00:	cmpne	r0, #1
    3f04:	movhi	r0, #1
    3f08:	movls	r0, #0
    3f0c:	pop	{r4, pc}
    3f10:	bl	2224 <DM@plt>
    3f14:	b	3eec <crc_check@@Base+0x58>
    3f18:	bl	247c <DH@plt>
    3f1c:	b	3eec <crc_check@@Base+0x58>
    3f20:	bl	2404 <EV3@plt>
    3f24:	b	3eec <crc_check@@Base+0x58>
    3f28:	bl	21b8 <EV4@plt>
    3f2c:	b	3eec <crc_check@@Base+0x58>
    3f30:	bl	2464 <EV5@plt>
    3f34:	b	3eec <crc_check@@Base+0x58>
    3f38:	bl	223c <HV@plt>
    3f3c:	b	3eec <crc_check@@Base+0x58>
    3f40:	cmp	r0, #1
    3f44:	pople	{r4, pc}
    3f48:	ldrb	r3, [r4, #18]
    3f4c:	cmp	r3, #13
    3f50:	cmpne	r3, #7
    3f54:	moveq	r0, #1
    3f58:	pop	{r4, pc}
    3f5c:	mov	r0, #1
    3f60:	pop	{r4, pc}

00003f64 <try_clock@@Base>:
    3f64:	push	{r4, r5, r6, r7, lr}
    3f68:	mov	r5, r1
    3f6c:	sub	sp, sp, #52	; 0x34
    3f70:	mov	r7, r0
    3f74:	add	r6, sp, #8
    3f78:	add	r0, r5, #2880	; 0xb40
    3f7c:	mov	r2, #18
    3f80:	mov	r1, r6
    3f84:	add	r0, r0, #12
    3f88:	bl	277c <__assert_fail@plt+0x264>
    3f8c:	subs	r4, r0, #0
    3f90:	beq	3ff4 <try_clock@@Base+0x90>
    3f94:	mov	r3, #0
    3f98:	add	r4, sp, #28
    3f9c:	mov	r2, r7
    3fa0:	mov	r1, r4
    3fa4:	mov	r0, r6
    3fa8:	stm	sp, {r3, r5}
    3fac:	mov	r3, #18
    3fb0:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    3fb4:	mov	r1, #10
    3fb8:	mov	r0, r4
    3fbc:	bl	26fc <__assert_fail@plt+0x1e4>
    3fc0:	mov	r4, r0
    3fc4:	mov	r1, #8
    3fc8:	add	r0, sp, #38	; 0x26
    3fcc:	bl	26d4 <__assert_fail@plt+0x1bc>
    3fd0:	mov	r1, r0
    3fd4:	mov	r0, r4
    3fd8:	bl	27e8 <__assert_fail@plt+0x2d0>
    3fdc:	mov	r4, r0
    3fe0:	mov	r1, #4
    3fe4:	add	r0, sp, #31
    3fe8:	strb	r4, [r5, #9]
    3fec:	bl	26d4 <__assert_fail@plt+0x1bc>
    3ff0:	strb	r0, [r5, #18]
    3ff4:	mov	r0, r4
    3ff8:	add	sp, sp, #52	; 0x34
    3ffc:	pop	{r4, r5, r6, r7, pc}

00004000 <btbb_decode_header@@Base>:
    4000:	push	{r4, r5, r6, r7, lr}
    4004:	mov	r1, #4
    4008:	sub	sp, sp, #36	; 0x24
    400c:	mov	r4, r0
    4010:	bl	21a0 <btbb_packet_get_flag@plt>
    4014:	cmp	r0, #0
    4018:	bne	4028 <btbb_decode_header@@Base+0x28>
    401c:	mov	r0, #0
    4020:	add	sp, sp, #36	; 0x24
    4024:	pop	{r4, r5, r6, r7, pc}
    4028:	add	r6, sp, #12
    402c:	add	r0, r4, #2880	; 0xb40
    4030:	mov	r2, #18
    4034:	mov	r1, r6
    4038:	add	r0, r0, #12
    403c:	bl	277c <__assert_fail@plt+0x264>
    4040:	cmp	r0, #0
    4044:	beq	401c <btbb_decode_header@@Base+0x1c>
    4048:	mov	r3, #0
    404c:	add	r5, r4, #22
    4050:	ldr	r2, [r4, #2816]	; 0xb00
    4054:	mov	r0, r6
    4058:	mov	r1, r5
    405c:	stm	sp, {r3, r4}
    4060:	mov	r3, #18
    4064:	bl	3548 <btbb_packet_get_flag@@Base+0x18>
    4068:	mov	r1, #10
    406c:	mov	r0, r5
    4070:	bl	26fc <__assert_fail@plt+0x1e4>
    4074:	mov	r7, r0
    4078:	mov	r1, #8
    407c:	add	r0, r4, #32
    4080:	bl	26d4 <__assert_fail@plt+0x1bc>
    4084:	mov	r1, r0
    4088:	mov	r6, r0
    408c:	mov	r0, r7
    4090:	bl	27e8 <__assert_fail@plt+0x2d0>
    4094:	ldrb	r3, [r4, #9]
    4098:	cmp	r3, r0
    409c:	bne	401c <btbb_decode_header@@Base+0x1c>
    40a0:	mov	r1, #3
    40a4:	mov	r0, r5
    40a8:	bl	26d4 <__assert_fail@plt+0x1bc>
    40ac:	mov	r1, #4
    40b0:	strb	r0, [r4, #19]
    40b4:	add	r0, r4, #25
    40b8:	bl	26d4 <__assert_fail@plt+0x1bc>
    40bc:	mov	r1, #3
    40c0:	strb	r0, [r4, #18]
    40c4:	add	r0, r4, #29
    40c8:	bl	26d4 <__assert_fail@plt+0x1bc>
    40cc:	strb	r0, [r4, #20]
    40d0:	mov	r0, #1
    40d4:	strb	r6, [r4, #21]
    40d8:	b	4020 <btbb_decode_header@@Base+0x20>

000040dc <btbb_decode_payload@@Base>:
    40dc:	push	{r4, r5, r6, lr}
    40e0:	mov	r3, #0
    40e4:	mov	r4, r0
    40e8:	ldrb	r2, [r0, #18]
    40ec:	str	r3, [r0, #40]	; 0x28
    40f0:	cmp	r2, #15
    40f4:	addls	pc, pc, r2, lsl #2
    40f8:	b	41d8 <btbb_decode_payload@@Base+0xfc>
    40fc:	b	413c <btbb_decode_payload@@Base+0x60>
    4100:	b	413c <btbb_decode_payload@@Base+0x60>
    4104:	b	415c <btbb_decode_payload@@Base+0x80>
    4108:	b	4170 <btbb_decode_payload@@Base+0x94>
    410c:	b	4180 <btbb_decode_payload@@Base+0xa4>
    4110:	b	41a8 <btbb_decode_payload@@Base+0xcc>
    4114:	b	41a8 <btbb_decode_payload@@Base+0xcc>
    4118:	b	4190 <btbb_decode_payload@@Base+0xb4>
    411c:	b	4170 <btbb_decode_payload@@Base+0x94>
    4120:	b	4180 <btbb_decode_payload@@Base+0xa4>
    4124:	b	4170 <btbb_decode_payload@@Base+0x94>
    4128:	b	4180 <btbb_decode_payload@@Base+0xa4>
    412c:	b	41b8 <btbb_decode_payload@@Base+0xdc>
    4130:	b	41c8 <btbb_decode_payload@@Base+0xec>
    4134:	b	4170 <btbb_decode_payload@@Base+0x94>
    4138:	b	4180 <btbb_decode_payload@@Base+0xa4>
    413c:	mov	r5, #1
    4140:	str	r3, [r0, #64]	; 0x40
    4144:	mov	r0, r4
    4148:	mov	r2, #1
    414c:	mov	r1, #7
    4150:	bl	214c <btbb_packet_set_flag@plt>
    4154:	mov	r0, r5
    4158:	pop	{r4, r5, r6, pc}
    415c:	mov	r1, r0
    4160:	ldr	r0, [r0, #2816]	; 0xb00
    4164:	bl	21ac <fhs@plt>
    4168:	mov	r5, r0
    416c:	b	4144 <btbb_decode_payload@@Base+0x68>
    4170:	mov	r1, r0
    4174:	ldr	r0, [r0, #2816]	; 0xb00
    4178:	bl	2224 <DM@plt>
    417c:	b	4168 <btbb_decode_payload@@Base+0x8c>
    4180:	mov	r1, r0
    4184:	ldr	r0, [r0, #2816]	; 0xb00
    4188:	bl	247c <DH@plt>
    418c:	b	4168 <btbb_decode_payload@@Base+0x8c>
    4190:	mov	r1, r0
    4194:	ldr	r0, [r0, #2816]	; 0xb00
    4198:	bl	2404 <EV3@plt>
    419c:	cmp	r0, #1
    41a0:	mov	r5, r0
    41a4:	bgt	4144 <btbb_decode_payload@@Base+0x68>
    41a8:	mov	r1, r4
    41ac:	ldr	r0, [r4, #2816]	; 0xb00
    41b0:	bl	223c <HV@plt>
    41b4:	b	4168 <btbb_decode_payload@@Base+0x8c>
    41b8:	mov	r1, r0
    41bc:	ldr	r0, [r0, #2816]	; 0xb00
    41c0:	bl	21b8 <EV4@plt>
    41c4:	b	4168 <btbb_decode_payload@@Base+0x8c>
    41c8:	mov	r1, r0
    41cc:	ldr	r0, [r0, #2816]	; 0xb00
    41d0:	bl	2464 <EV5@plt>
    41d4:	b	4168 <btbb_decode_payload@@Base+0x8c>
    41d8:	mov	r5, #0
    41dc:	b	4144 <btbb_decode_payload@@Base+0x68>

000041e0 <btbb_print_packet@@Base>:
    41e0:	push	{r4, r5, r6, r7, r8, lr}
    41e4:	mov	r1, #7
    41e8:	mov	r4, r0
    41ec:	bl	21a0 <btbb_packet_get_flag@plt>
    41f0:	cmp	r0, #0
    41f4:	popeq	{r4, r5, r6, r7, r8, pc}
    41f8:	ldr	r3, [pc, #196]	; 42c4 <btbb_print_packet@@Base+0xe4>
    41fc:	ldrb	r2, [r4, #18]
    4200:	ldr	r0, [pc, #192]	; 42c8 <btbb_print_packet@@Base+0xe8>
    4204:	add	r3, pc, r3
    4208:	ldr	r1, [r3, r2, lsl #2]
    420c:	add	r0, pc, r0
    4210:	bl	211c <printf@plt>
    4214:	ldr	r3, [r4, #40]	; 0x28
    4218:	cmp	r3, #0
    421c:	ble	4260 <btbb_print_packet@@Base+0x80>
    4220:	ldr	r0, [pc, #164]	; 42cc <btbb_print_packet@@Base+0xec>
    4224:	ldrb	r1, [r4, #19]
    4228:	add	r0, pc, r0
    422c:	bl	211c <printf@plt>
    4230:	ldr	r0, [pc, #152]	; 42d0 <btbb_print_packet@@Base+0xf0>
    4234:	ldrb	r1, [r4, #60]	; 0x3c
    4238:	add	r0, pc, r0
    423c:	bl	211c <printf@plt>
    4240:	ldr	r0, [pc, #140]	; 42d4 <btbb_print_packet@@Base+0xf4>
    4244:	ldrb	r1, [r4, #61]	; 0x3d
    4248:	add	r0, pc, r0
    424c:	bl	211c <printf@plt>
    4250:	ldr	r0, [pc, #128]	; 42d8 <btbb_print_packet@@Base+0xf8>
    4254:	ldr	r1, [r4, #64]	; 0x40
    4258:	add	r0, pc, r0
    425c:	bl	211c <printf@plt>
    4260:	ldr	r3, [r4, #64]	; 0x40
    4264:	cmp	r3, #0
    4268:	popeq	{r4, r5, r6, r7, r8, pc}
    426c:	add	r6, r4, #68	; 0x44
    4270:	mov	r5, #0
    4274:	ldr	r0, [pc, #96]	; 42dc <btbb_print_packet@@Base+0xfc>
    4278:	ldr	r7, [pc, #96]	; 42e0 <btbb_print_packet@@Base+0x100>
    427c:	add	r0, pc, r0
    4280:	bl	211c <printf@plt>
    4284:	add	r7, pc, r7
    4288:	ldr	r3, [r4, #64]	; 0x40
    428c:	cmp	r5, r3
    4290:	blt	42a0 <btbb_print_packet@@Base+0xc0>
    4294:	mov	r0, #10
    4298:	pop	{r4, r5, r6, r7, r8, lr}
    429c:	b	23ec <putchar@plt>
    42a0:	mov	r1, #8
    42a4:	mov	r0, r6
    42a8:	bl	26d4 <__assert_fail@plt+0x1bc>
    42ac:	mov	r1, r0
    42b0:	mov	r0, r7
    42b4:	bl	211c <printf@plt>
    42b8:	add	r5, r5, #1
    42bc:	add	r6, r6, #8
    42c0:	b	4288 <btbb_print_packet@@Base+0xa8>
    42c4:	andeq	r2, r2, ip, lsl #24
    42c8:	andeq	ip, r0, r7, lsr #26
    42cc:	andeq	ip, r0, r7, lsl sp
    42d0:	andeq	ip, r0, r6, lsl sp
    42d4:	andeq	ip, r0, r2, lsl sp
    42d8:	andeq	ip, r0, lr, lsl #26
    42dc:	andeq	sp, r0, r6, ror #12
    42e0:	andeq	sp, r0, r9, ror #8

000042e4 <btbb_decode@@Base>:
    42e4:	push	{r4, r5, r6, lr}
    42e8:	mov	r2, #0
    42ec:	mov	r4, r0
    42f0:	mov	r1, #7
    42f4:	bl	214c <btbb_packet_set_flag@plt>
    42f8:	mov	r0, r4
    42fc:	bl	235c <btbb_decode_header@plt>
    4300:	subs	r5, r0, #0
    4304:	beq	4338 <btbb_decode@@Base+0x54>
    4308:	mov	r0, r4
    430c:	bl	24a0 <btbb_decode_payload@plt>
    4310:	subs	r5, r0, #0
    4314:	ble	4338 <btbb_decode@@Base+0x54>
    4318:	ldr	r0, [pc, #32]	; 4340 <btbb_decode@@Base+0x5c>
    431c:	mov	r2, r5
    4320:	ldr	r1, [r4, #2816]	; 0xb00
    4324:	add	r0, pc, r0
    4328:	and	r1, r1, #63	; 0x3f
    432c:	bl	211c <printf@plt>
    4330:	mov	r0, r4
    4334:	bl	24c4 <btbb_print_packet@plt>
    4338:	mov	r0, r5
    433c:	pop	{r4, r5, r6, pc}
    4340:	andeq	ip, r0, r8, asr ip

00004344 <tun_format@@Base>:
    4344:	push	{r4, r5, r6, r7, r8, lr}
    4348:	mov	r4, r0
    434c:	mvn	r8, #7
    4350:	ldr	r0, [r0, #64]	; 0x40
    4354:	add	r0, r0, #9
    4358:	bl	22e4 <malloc@plt>
    435c:	ldr	r3, [r4, #2816]	; 0xb00
    4360:	mov	r5, r0
    4364:	mov	r1, #5
    4368:	sub	r8, r8, r0
    436c:	str	r3, [r0]
    4370:	ldrb	r3, [r4, #8]
    4374:	strb	r3, [r0, #4]
    4378:	mov	r0, r4
    437c:	bl	21a0 <btbb_packet_get_flag@plt>
    4380:	mov	r6, r0
    4384:	mov	r1, #1
    4388:	mov	r0, r4
    438c:	bl	21a0 <btbb_packet_get_flag@plt>
    4390:	orr	r0, r6, r0, lsl #1
    4394:	mov	r1, #7
    4398:	mov	r6, r5
    439c:	strb	r0, [r5, #5]
    43a0:	add	r0, r4, #22
    43a4:	bl	26d4 <__assert_fail@plt+0x1bc>
    43a8:	mov	r1, #3
    43ac:	strb	r0, [r5, #6]
    43b0:	add	r0, r4, #29
    43b4:	bl	26d4 <__assert_fail@plt+0x1bc>
    43b8:	mov	r1, #8
    43bc:	strb	r0, [r5, #7]
    43c0:	add	r0, r4, #32
    43c4:	bl	26d4 <__assert_fail@plt+0x1bc>
    43c8:	add	r4, r4, #68	; 0x44
    43cc:	ldr	r7, [r4, #-4]
    43d0:	strb	r0, [r6, #8]!
    43d4:	add	r3, r8, r6
    43d8:	cmp	r7, r3
    43dc:	bgt	43e8 <tun_format@@Base+0xa4>
    43e0:	mov	r0, r5
    43e4:	pop	{r4, r5, r6, r7, r8, pc}
    43e8:	mov	r0, r4
    43ec:	mov	r1, #8
    43f0:	bl	26d4 <__assert_fail@plt+0x1bc>
    43f4:	add	r4, r4, #8
    43f8:	strb	r0, [r6, #1]!
    43fc:	b	43d4 <tun_format@@Base+0x90>

00004400 <btbb_header_present@@Base>:
    4400:	movw	r3, #2822	; 0xb06
    4404:	ldrh	r3, [r0, r3]
    4408:	cmp	r3, #121	; 0x79
    440c:	bls	4490 <btbb_header_present@@Base+0x90>
    4410:	push	{r4, lr}
    4414:	add	r4, r0, #54	; 0x36
    4418:	ldrb	r2, [r0, #2887]	; 0xb47
    441c:	ldrb	r1, [r0, #2888]	; 0xb48
    4420:	ldrb	r3, [r0, #2889]	; 0xb49
    4424:	clz	ip, r2
    4428:	lsr	ip, ip, #5
    442c:	eor	r1, r1, ip
    4430:	eor	r3, r3, r2
    4434:	add	r1, r1, r3
    4438:	ldrb	r3, [r0, #2890]	; 0xb4a
    443c:	eor	r3, r3, ip
    4440:	add	r1, r3, r1
    4444:	ldrb	r3, [r0, #2891]	; 0xb4b
    4448:	eor	r3, r3, r2
    444c:	add	r3, r3, r1
    4450:	ldrb	r1, [r0, #2892]	; 0xb4c
    4454:	add	r0, r0, #3
    4458:	ldrb	ip, [r0, #2890]	; 0xb4a
    445c:	ldrb	lr, [r0, #2891]	; 0xb4b
    4460:	cmp	r4, r0
    4464:	eor	r2, r1, ip
    4468:	eor	ip, ip, lr
    446c:	eor	r1, r1, lr
    4470:	orr	r2, r2, ip
    4474:	orr	r2, r2, r1
    4478:	add	r3, r3, r2
    447c:	bne	4450 <btbb_header_present@@Base+0x50>
    4480:	cmp	r3, #4
    4484:	movgt	r0, #0
    4488:	movle	r0, #1
    448c:	pop	{r4, pc}
    4490:	mov	r0, #0
    4494:	bx	lr

00004498 <lap_from_fhs@@Base>:
    4498:	add	r2, r0, #101	; 0x65
    449c:	mov	r0, #0
    44a0:	mov	r3, r0
    44a4:	ldrb	r1, [r2, #1]!
    44a8:	orr	r0, r0, r1, lsl r3
    44ac:	add	r3, r3, #1
    44b0:	cmp	r3, #24
    44b4:	bne	44a4 <lap_from_fhs@@Base+0xc>
    44b8:	bx	lr

000044bc <uap_from_fhs@@Base>:
    44bc:	mov	r1, #8
    44c0:	add	r0, r0, #132	; 0x84
    44c4:	b	26d4 <__assert_fail@plt+0x1bc>

000044c8 <nap_from_fhs@@Base>:
    44c8:	mov	r1, #16
    44cc:	add	r0, r0, #140	; 0x8c
    44d0:	b	26fc <__assert_fail@plt+0x1e4>

000044d4 <clock_from_fhs@@Base>:
    44d4:	add	r2, r0, #182	; 0xb6
    44d8:	mov	r0, #0
    44dc:	mov	r3, r0
    44e0:	ldrb	r1, [r2, #1]!
    44e4:	orr	r0, r0, r1, lsl r3
    44e8:	add	r3, r3, #1
    44ec:	cmp	r3, #26
    44f0:	bne	44e0 <clock_from_fhs@@Base+0xc>
    44f4:	bx	lr

000044f8 <count_bits@@Base>:
    44f8:	mov	r3, r0
    44fc:	mov	r0, #0
    4500:	cmp	r3, #0
    4504:	bxeq	lr
    4508:	sub	r2, r3, #1
    450c:	add	r0, r0, #1
    4510:	and	r3, r3, r2
    4514:	b	4500 <count_bits@@Base+0x8>

00004518 <btbb_piconet_new@@Base>:
    4518:	push	{r4, lr}
    451c:	movw	r1, #5660	; 0x161c
    4520:	mov	r0, #1
    4524:	bl	20c8 <calloc@plt>
    4528:	mov	r3, #1
    452c:	str	r3, [r0]
    4530:	pop	{r4, pc}

00004534 <btbb_piconet_ref@@Base>:
    4534:	ldr	r3, [r0]
    4538:	add	r3, r3, #1
    453c:	str	r3, [r0]
    4540:	bx	lr

00004544 <btbb_piconet_unref@@Base>:
    4544:	ldr	r3, [r0]
    4548:	subs	r3, r3, #1
    454c:	beq	4558 <btbb_piconet_unref@@Base+0x14>
    4550:	str	r3, [r0]
    4554:	bx	lr
    4558:	b	2164 <free@plt>

0000455c <btbb_init_survey@@Base>:
    455c:	ldr	r3, [pc, #16]	; 4574 <btbb_init_survey@@Base+0x18>
    4560:	mov	r2, #1
    4564:	mov	r0, #0
    4568:	add	r3, pc, r3
    456c:	str	r2, [r3]
    4570:	bx	lr
    4574:	andeq	r2, r2, r0, asr #24

00004578 <btbb_piconet_set_flag@@Base>:
    4578:	mov	r3, #1
    457c:	cmp	r2, #0
    4580:	lsl	r1, r3, r1
    4584:	ldr	r3, [r0, #4]
    4588:	biceq	r3, r3, r1
    458c:	orrne	r3, r3, r1
    4590:	str	r3, [r0, #4]
    4594:	bx	lr

00004598 <btbb_init_piconet@@Base>:
    4598:	mov	r2, #1
    459c:	str	r1, [r0, #24]
    45a0:	mov	r1, #3
    45a4:	b	2230 <btbb_piconet_set_flag@plt>

000045a8 <btbb_piconet_get_flag@@Base>:
    45a8:	ldr	r3, [r0, #4]
    45ac:	mov	r2, #1
    45b0:	ands	r3, r3, r2, lsl r1
    45b4:	movne	r0, r2
    45b8:	moveq	r0, #0
    45bc:	bx	lr
    45c0:	push	{r4, lr}
    45c4:	mov	r1, #9
    45c8:	mov	r4, r0
    45cc:	bl	220c <btbb_piconet_get_flag@plt>
    45d0:	cmp	r0, #0
    45d4:	beq	45e8 <btbb_piconet_get_flag@@Base+0x40>
    45d8:	ldr	r0, [r4, #32]
    45dc:	bl	2164 <free@plt>
    45e0:	mov	r3, #0
    45e4:	str	r3, [r4, #372]	; 0x174
    45e8:	mov	r0, r4
    45ec:	mov	r2, #0
    45f0:	mov	r1, #10
    45f4:	bl	2230 <btbb_piconet_set_flag@plt>
    45f8:	mov	r0, r4
    45fc:	mov	r2, #0
    4600:	mov	r1, #9
    4604:	bl	2230 <btbb_piconet_set_flag@plt>
    4608:	mov	r0, r4
    460c:	mov	r2, #0
    4610:	mov	r1, #2
    4614:	bl	2230 <btbb_piconet_set_flag@plt>
    4618:	mov	r0, r4
    461c:	mov	r2, #0
    4620:	mov	r1, #4
    4624:	bl	2230 <btbb_piconet_set_flag@plt>
    4628:	mov	r2, #0
    462c:	mov	r0, r4
    4630:	mov	r1, #5
    4634:	bl	2230 <btbb_piconet_set_flag@plt>
    4638:	mov	r3, #0
    463c:	mov	r1, #12
    4640:	mov	r0, r4
    4644:	str	r3, [r4, #380]	; 0x17c
    4648:	bl	220c <btbb_piconet_get_flag@plt>
    464c:	mov	r2, r0
    4650:	mov	r1, #11
    4654:	mov	r0, r4
    4658:	pop	{r4, lr}
    465c:	b	2230 <btbb_piconet_set_flag@plt>

00004660 <btbb_piconet_set_uap@@Base>:
    4660:	mov	r2, #1
    4664:	strb	r1, [r0, #28]
    4668:	mov	r1, #2
    466c:	b	2230 <btbb_piconet_set_flag@plt>

00004670 <btbb_piconet_get_uap@@Base>:
    4670:	ldrb	r0, [r0, #28]
    4674:	bx	lr

00004678 <btbb_piconet_get_lap@@Base>:
    4678:	ldr	r0, [r0, #24]
    467c:	bx	lr

00004680 <btbb_piconet_get_nap@@Base>:
    4680:	ldrh	r0, [r0, #30]
    4684:	bx	lr

00004688 <btbb_piconet_get_bdaddr@@Base>:
    4688:	mov	r3, r0
    468c:	ldrb	r0, [r0, #28]
    4690:	ldr	r2, [r3, #24]
    4694:	ldrh	r1, [r3, #30]
    4698:	orr	r0, r2, r0, lsl #24
    469c:	bx	lr

000046a0 <btbb_piconet_get_clk_offset@@Base>:
    46a0:	add	r0, r0, #4096	; 0x1000
    46a4:	ldr	r0, [r0, #1552]	; 0x610
    46a8:	bx	lr

000046ac <btbb_piconet_set_clk_offset@@Base>:
    46ac:	add	r0, r0, #4096	; 0x1000
    46b0:	str	r1, [r0, #1552]	; 0x610
    46b4:	bx	lr

000046b8 <btbb_piconet_get_afh_map@@Base>:
    46b8:	add	r0, r0, #12
    46bc:	bx	lr

000046c0 <btbb_piconet_set_channel_seen@@Base>:
    46c0:	add	ip, r0, r1, lsr #3
    46c4:	and	r1, r1, #7
    46c8:	ldrb	r2, [ip, #12]
    46cc:	asr	r3, r2, r1
    46d0:	tst	r3, #1
    46d4:	moveq	r3, #1
    46d8:	orreq	r1, r2, r3, lsl r1
    46dc:	strbeq	r1, [ip, #12]
    46e0:	ldrbeq	r2, [r0, #22]
    46e4:	addeq	r2, r2, r3
    46e8:	strbeq	r2, [r0, #22]
    46ec:	moveq	r0, r3
    46f0:	movne	r0, #0
    46f4:	bx	lr

000046f8 <btbb_piconet_clear_channel_seen@@Base>:
    46f8:	add	ip, r0, r1, lsr #3
    46fc:	and	r1, r1, #7
    4700:	ldrb	r2, [ip, #12]
    4704:	asr	r3, r2, r1
    4708:	ands	r3, r3, #1
    470c:	beq	4728 <btbb_piconet_clear_channel_seen@@Base+0x30>
    4710:	mov	r3, #1
    4714:	bic	r1, r2, r3, lsl r1
    4718:	strb	r1, [ip, #12]
    471c:	ldrb	r2, [r0, #22]
    4720:	sub	r2, r2, #1
    4724:	strb	r2, [r0, #22]
    4728:	mov	r0, r3
    472c:	bx	lr

00004730 <btbb_piconet_get_channel_seen@@Base>:
    4730:	cmp	r1, #78	; 0x4e
    4734:	addls	r0, r0, r1, lsr #3
    4738:	andls	r1, r1, #7
    473c:	ldrbls	r0, [r0, #12]
    4740:	asrls	r0, r0, r1
    4744:	andls	r0, r0, #1
    4748:	movhi	r0, #1
    474c:	bx	lr

00004750 <precalc@@Base>:
    4750:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4754:	mov	r4, #0
    4758:	mov	r6, r0
    475c:	mov	r7, r4
    4760:	mov	r8, #79	; 0x4f
    4764:	add	r9, r0, #56	; 0x38
    4768:	mov	r1, #11
    476c:	mov	r0, r6
    4770:	bl	220c <btbb_piconet_get_flag@plt>
    4774:	udiv	r5, r4, r8
    4778:	cmp	r0, #0
    477c:	mls	r5, r8, r5, r4
    4780:	streq	r5, [r9, r4, lsl #1]
    4784:	beq	47a4 <precalc@@Base+0x54>
    4788:	uxtb	r1, r5
    478c:	mov	r0, r6
    4790:	bl	21e8 <btbb_piconet_get_channel_seen@plt>
    4794:	cmp	r0, #0
    4798:	addne	r3, r7, #14
    479c:	addne	r7, r7, #1
    47a0:	strne	r5, [r6, r3, lsl #2]
    47a4:	add	r4, r4, #2
    47a8:	cmp	r4, #158	; 0x9e
    47ac:	bne	4768 <precalc@@Base+0x18>
    47b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000047b4 <address_precalc@@Base>:
    47b4:	ubfx	r3, r0, #23, #5
    47b8:	push	{r4, r5, lr}
    47bc:	asr	r5, r0, #4
    47c0:	asr	r4, r0, #3
    47c4:	str	r3, [r1, #44]	; 0x2c
    47c8:	ubfx	r3, r0, #19, #4
    47cc:	and	r2, r5, #16
    47d0:	asr	lr, r0, #2
    47d4:	and	r5, r5, #8
    47d8:	asr	ip, r0, #1
    47dc:	str	r3, [r1, #36]	; 0x24
    47e0:	and	r3, r4, #8
    47e4:	and	r4, r4, #4
    47e8:	orr	r2, r2, r3
    47ec:	and	r3, lr, #4
    47f0:	add	r2, r2, r3
    47f4:	and	r3, ip, #2
    47f8:	add	r2, r2, r3
    47fc:	and	r3, r0, #1
    4800:	add	r2, r2, r3
    4804:	ubfx	r3, r0, #10, #9
    4808:	and	lr, lr, #2
    480c:	and	ip, ip, #1
    4810:	strd	r2, [r1, #48]	; 0x30
    4814:	asr	r3, r0, #7
    4818:	asr	r2, r0, #6
    481c:	asr	r0, r0, #5
    4820:	and	r3, r3, #64	; 0x40
    4824:	and	r2, r2, #32
    4828:	orr	r3, r3, r2
    482c:	and	r0, r0, #16
    4830:	add	r3, r3, r0
    4834:	add	r3, r3, r5
    4838:	add	r3, r3, r4
    483c:	add	r3, r3, lr
    4840:	add	r3, r3, ip
    4844:	str	r3, [r1, #40]	; 0x28
    4848:	pop	{r4, r5, pc}

0000484c <perm5@@Base>:
    484c:	ldr	ip, [pc, #312]	; 498c <perm5@@Base+0x140>
    4850:	push	{r4, r5, r6, r7, lr}
    4854:	mov	r5, r0
    4858:	mov	r6, r1
    485c:	mov	r7, r2
    4860:	sub	sp, sp, #196	; 0xc4
    4864:	add	lr, sp, #80	; 0x50
    4868:	add	ip, pc, ip
    486c:	mov	r4, ip
    4870:	add	ip, ip, #56	; 0x38
    4874:	ldm	r4!, {r0, r1, r2, r3}
    4878:	stmia	lr!, {r0, r1, r2, r3}
    487c:	ldm	r4!, {r0, r1, r2, r3}
    4880:	stmia	lr!, {r0, r1, r2, r3}
    4884:	ldm	r4!, {r0, r1, r2, r3}
    4888:	stmia	lr!, {r0, r1, r2, r3}
    488c:	ldm	r4, {r0, r1}
    4890:	stm	lr, {r0, r1}
    4894:	add	lr, sp, #136	; 0x88
    4898:	ldm	ip!, {r0, r1, r2, r3}
    489c:	stmia	lr!, {r0, r1, r2, r3}
    48a0:	ldm	ip!, {r0, r1, r2, r3}
    48a4:	stmia	lr!, {r0, r1, r2, r3}
    48a8:	ldm	ip!, {r0, r1, r2, r3}
    48ac:	stmia	lr!, {r0, r1, r2, r3}
    48b0:	add	r2, sp, #24
    48b4:	mov	r3, #0
    48b8:	ldm	ip, {r0, r1}
    48bc:	add	ip, sp, #136	; 0x88
    48c0:	stm	lr, {r0, r1}
    48c4:	add	r0, sp, #80	; 0x50
    48c8:	mov	lr, r2
    48cc:	asr	r1, r7, r3
    48d0:	add	r3, r3, #1
    48d4:	cmp	r3, #9
    48d8:	and	r1, r1, #1
    48dc:	str	r1, [r2], #4
    48e0:	bne	48cc <perm5@@Base+0x80>
    48e4:	add	r1, sp, #60	; 0x3c
    48e8:	mov	r3, #0
    48ec:	asr	r2, r6, r3
    48f0:	add	r3, r3, #1
    48f4:	cmp	r3, #5
    48f8:	and	r2, r2, #1
    48fc:	str	r2, [r1], #4
    4900:	bne	48ec <perm5@@Base+0xa0>
    4904:	add	r4, sp, #4
    4908:	mov	r3, #0
    490c:	mov	r1, r4
    4910:	asr	r2, r5, r3
    4914:	add	r3, r3, #1
    4918:	cmp	r3, #5
    491c:	and	r2, r2, #1
    4920:	str	r2, [r1], #4
    4924:	bne	4910 <perm5@@Base+0xc4>
    4928:	mov	r3, #13
    492c:	ldr	r2, [lr, r3, lsl #2]
    4930:	cmp	r2, #0
    4934:	beq	4960 <perm5@@Base+0x114>
    4938:	ldr	r1, [r0, r3, lsl #2]
    493c:	add	r2, sp, #192	; 0xc0
    4940:	add	r6, sp, #192	; 0xc0
    4944:	add	r1, r2, r1, lsl #2
    4948:	ldr	r2, [ip, r3, lsl #2]
    494c:	ldr	r5, [r1, #-188]	; 0xffffff44
    4950:	add	r2, r6, r2, lsl #2
    4954:	ldr	r6, [r2, #-188]	; 0xffffff44
    4958:	str	r6, [r1, #-188]	; 0xffffff44
    495c:	str	r5, [r2, #-188]	; 0xffffff44
    4960:	subs	r3, r3, #1
    4964:	bcs	492c <perm5@@Base+0xe0>
    4968:	mov	r0, #0
    496c:	mov	r3, r0
    4970:	ldr	r2, [r4], #4
    4974:	add	r0, r0, r2, lsl r3
    4978:	add	r3, r3, #1
    497c:	cmp	r3, #5
    4980:	bne	4970 <perm5@@Base+0x124>
    4984:	add	sp, sp, #196	; 0xc4
    4988:	pop	{r4, r5, r6, r7, pc}
    498c:	andeq	ip, r0, r0, asr #15

00004990 <perm_table_init@@Base>:
    4990:	ldr	r3, [pc, #108]	; 4a04 <perm_table_init@@Base+0x74>
    4994:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4998:	mov	r5, #0
    499c:	ldr	r2, [pc, #100]	; 4a08 <perm_table_init@@Base+0x78>
    49a0:	add	r3, pc, r3
    49a4:	ldr	r8, [r3, r2]
    49a8:	mov	r7, r8
    49ac:	mov	r4, #0
    49b0:	b	49e4 <perm_table_init@@Base+0x54>
    49b4:	mov	r2, r6
    49b8:	mov	r1, r4
    49bc:	mov	r0, r5
    49c0:	add	r6, r6, #1
    49c4:	bl	244c <perm5@plt>
    49c8:	cmp	r6, #512	; 0x200
    49cc:	strb	r0, [r9], #1
    49d0:	bne	49b4 <perm_table_init@@Base+0x24>
    49d4:	add	r4, r4, #1
    49d8:	add	r7, r7, #512	; 0x200
    49dc:	cmp	r4, #32
    49e0:	beq	49f0 <perm_table_init@@Base+0x60>
    49e4:	mov	r9, r7
    49e8:	mov	r6, #0
    49ec:	b	49b4 <perm_table_init@@Base+0x24>
    49f0:	add	r5, r5, #1
    49f4:	add	r8, r8, #16384	; 0x4000
    49f8:	cmp	r5, #32
    49fc:	bne	49a8 <perm_table_init@@Base+0x18>
    4a00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4a04:	andeq	r2, r2, r8, asr r6
    4a08:	andeq	r0, r0, ip, lsl #3

00004a0c <fast_perm@@Base>:
    4a0c:	push	{r4, r5, r6, r7, r8, lr}
    4a10:	mov	r8, r0
    4a14:	mov	r4, r1
    4a18:	mov	r7, r2
    4a1c:	ldr	r5, [pc, #56]	; 4a5c <fast_perm@@Base+0x50>
    4a20:	ldr	r3, [pc, #56]	; 4a60 <fast_perm@@Base+0x54>
    4a24:	add	r5, pc, r5
    4a28:	ldr	r6, [r5, r3]
    4a2c:	ldr	r3, [r6]
    4a30:	cmp	r3, #0
    4a34:	bne	4a44 <fast_perm@@Base+0x38>
    4a38:	bl	2260 <perm_table_init@plt>
    4a3c:	mov	r3, #1
    4a40:	str	r3, [r6]
    4a44:	ldr	r3, [pc, #24]	; 4a64 <fast_perm@@Base+0x58>
    4a48:	add	r4, r4, r8, lsl #5
    4a4c:	ldr	r3, [r5, r3]
    4a50:	add	r3, r3, r4, lsl #9
    4a54:	ldrb	r0, [r3, r7]
    4a58:	pop	{r4, r5, r6, r7, r8, pc}
    4a5c:	ldrdeq	r2, [r2], -r4
    4a60:	muleq	r0, r0, r1
    4a64:	andeq	r0, r0, ip, lsl #3

00004a68 <gen_hop_pattern@@Base>:
    4a68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4a6c:	mov	r4, r0
    4a70:	sub	sp, sp, #60	; 0x3c
    4a74:	mov	r7, #0
    4a78:	mov	r9, #79	; 0x4f
    4a7c:	mov	r6, r7
    4a80:	mov	fp, r7
    4a84:	ldr	r0, [pc, #576]	; 4ccc <gen_hop_pattern@@Base+0x264>
    4a88:	add	r0, pc, r0
    4a8c:	bl	22d8 <puts@plt>
    4a90:	mov	r0, #134217728	; 0x8000000
    4a94:	bl	22e4 <malloc@plt>
    4a98:	str	r0, [r4, #372]	; 0x174
    4a9c:	mov	r0, r4
    4aa0:	bl	2494 <precalc@plt>
    4aa4:	ldrb	r3, [r4, #28]
    4aa8:	mov	r1, r4
    4aac:	ldr	r0, [r4, #24]
    4ab0:	orr	r0, r0, r3, lsl #24
    4ab4:	bic	r0, r0, #-268435456	; 0xf0000000
    4ab8:	bl	23d4 <address_precalc@plt>
    4abc:	lsl	r3, fp, #2
    4ac0:	mov	r8, #0
    4ac4:	str	r3, [sp, #32]
    4ac8:	add	r3, fp, r8, lsl #18
    4acc:	mov	sl, #0
    4ad0:	str	r3, [sp, #36]	; 0x24
    4ad4:	ldr	r3, [r4, #44]	; 0x2c
    4ad8:	eor	r3, r8, r3
    4adc:	str	r3, [sp, #20]
    4ae0:	ldr	r3, [sp, #32]
    4ae4:	add	r3, r3, r8, lsl #20
    4ae8:	str	r3, [sp, #40]	; 0x28
    4aec:	ldr	r3, [sp, #36]	; 0x24
    4af0:	add	r3, r3, sl, lsl #13
    4af4:	str	r3, [sp, #8]
    4af8:	ldr	r3, [r4, #48]	; 0x30
    4afc:	eor	r3, sl, r3
    4b00:	str	r3, [sp, #12]
    4b04:	eor	r3, r3, #31
    4b08:	str	r3, [sp, #24]
    4b0c:	ldr	r3, [sp, #40]	; 0x28
    4b10:	add	r3, r3, sl, lsl #15
    4b14:	str	r3, [sp, #28]
    4b18:	mov	r3, #0
    4b1c:	str	r3, [sp]
    4b20:	ldr	r2, [sp]
    4b24:	ldr	r1, [sp]
    4b28:	ldr	r3, [sp, #28]
    4b2c:	add	r3, r3, r2, lsl #6
    4b30:	ldr	r2, [r4, #52]	; 0x34
    4b34:	eor	r2, r1, r2
    4b38:	str	r2, [sp, #16]
    4b3c:	mov	r2, #0
    4b40:	str	r2, [sp, #4]
    4b44:	add	r2, r6, #32
    4b48:	str	r2, [sp, #44]	; 0x2c
    4b4c:	str	r3, [sp, #52]	; 0x34
    4b50:	ldr	r3, [sp, #4]
    4b54:	ldr	r1, [sp, #12]
    4b58:	ldr	r2, [sp, #20]
    4b5c:	add	r5, r3, r2
    4b60:	rsbs	r2, r5, #0
    4b64:	and	r5, r5, #31
    4b68:	and	r2, r2, #31
    4b6c:	rsbpl	r5, r2, #0
    4b70:	ldr	r2, [r4, #36]	; 0x24
    4b74:	eor	r5, r5, r2
    4b78:	ldr	r2, [sp, #16]
    4b7c:	mov	r0, r5
    4b80:	bl	24d0 <fast_perm@plt>
    4b84:	mov	r2, r0
    4b88:	mov	r1, #11
    4b8c:	mov	r0, r4
    4b90:	str	r2, [sp, #48]	; 0x30
    4b94:	bl	220c <btbb_piconet_get_flag@plt>
    4b98:	ldr	r1, [r4, #40]	; 0x28
    4b9c:	cmp	r0, #0
    4ba0:	ldrd	r2, [sp, #48]	; 0x30
    4ba4:	ldrbne	ip, [r4, #22]
    4ba8:	ldr	r0, [r4, #372]	; 0x174
    4bac:	add	r2, r2, r1
    4bb0:	addne	r2, r2, r7
    4bb4:	addeq	r2, r2, r6
    4bb8:	udivne	r1, r2, ip
    4bbc:	udiveq	r1, r2, r9
    4bc0:	mlsne	r2, ip, r1, r2
    4bc4:	mlseq	r2, r9, r1, r2
    4bc8:	add	r2, r2, #14
    4bcc:	ldr	r2, [r4, r2, lsl #2]
    4bd0:	strb	r2, [r0, r3]
    4bd4:	mov	r0, r5
    4bd8:	ldr	r2, [sp, #16]
    4bdc:	str	r3, [sp, #48]	; 0x30
    4be0:	ldr	r1, [sp, #24]
    4be4:	bl	24d0 <fast_perm@plt>
    4be8:	mov	r5, r0
    4bec:	mov	r1, #11
    4bf0:	mov	r0, r4
    4bf4:	bl	220c <btbb_piconet_get_flag@plt>
    4bf8:	cmp	r0, #0
    4bfc:	ldr	r0, [r4, #40]	; 0x28
    4c00:	ldr	r3, [sp, #48]	; 0x30
    4c04:	ldr	r1, [r4, #372]	; 0x174
    4c08:	add	r5, r5, r0
    4c0c:	add	r2, r3, #1
    4c10:	beq	4cb8 <gen_hop_pattern@@Base+0x250>
    4c14:	ldrb	ip, [r4, #22]
    4c18:	add	r0, r7, #32
    4c1c:	add	r5, r5, r0
    4c20:	udiv	r0, r5, ip
    4c24:	mls	r5, ip, r0, r5
    4c28:	add	r5, r5, #14
    4c2c:	add	r3, r3, #2
    4c30:	ldr	r0, [r4, r5, lsl #2]
    4c34:	strb	r0, [r1, r2]
    4c38:	ldr	r2, [sp, #4]
    4c3c:	add	r2, r2, #1
    4c40:	cmp	r2, #32
    4c44:	str	r2, [sp, #4]
    4c48:	bne	4b4c <gen_hop_pattern@@Base+0xe4>
    4c4c:	ldr	r3, [sp, #8]
    4c50:	add	r3, r3, #16
    4c54:	udiv	r6, r3, r9
    4c58:	str	r3, [sp, #8]
    4c5c:	mls	r6, r9, r6, r3
    4c60:	ldrb	r3, [r4, #22]
    4c64:	udiv	r7, r6, r3
    4c68:	mls	r7, r3, r7, r6
    4c6c:	ldr	r3, [sp]
    4c70:	add	r3, r3, #1
    4c74:	cmp	r3, #512	; 0x200
    4c78:	str	r3, [sp]
    4c7c:	bne	4b20 <gen_hop_pattern@@Base+0xb8>
    4c80:	add	sl, sl, #1
    4c84:	cmp	sl, #32
    4c88:	bne	4aec <gen_hop_pattern@@Base+0x84>
    4c8c:	add	r8, r8, #1
    4c90:	cmp	r8, #32
    4c94:	bne	4ac8 <gen_hop_pattern@@Base+0x60>
    4c98:	add	fp, fp, #8388608	; 0x800000
    4c9c:	cmp	fp, #33554432	; 0x2000000
    4ca0:	bne	4abc <gen_hop_pattern@@Base+0x54>
    4ca4:	ldr	r0, [pc, #36]	; 4cd0 <gen_hop_pattern@@Base+0x268>
    4ca8:	add	r0, pc, r0
    4cac:	add	sp, sp, #60	; 0x3c
    4cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4cb4:	b	22d8 <puts@plt>
    4cb8:	ldr	r0, [sp, #44]	; 0x2c
    4cbc:	add	r5, r5, r0
    4cc0:	udiv	r0, r5, r9
    4cc4:	mls	r5, r9, r0, r5
    4cc8:	b	4c28 <gen_hop_pattern@@Base+0x1c0>
    4ccc:	andeq	ip, r0, r0, lsl r6
    4cd0:	andeq	ip, r0, r8, lsl r4

00004cd4 <get_hop_pattern@@Base>:
    4cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4cd8:	mov	r1, #11
    4cdc:	mov	r8, r0
    4ce0:	sub	sp, sp, #20
    4ce4:	bl	220c <btbb_piconet_get_flag@plt>
    4ce8:	ldrb	r3, [r8, #28]
    4cec:	ldr	r7, [r8, #24]
    4cf0:	ldrb	r4, [r8, #22]
    4cf4:	ldr	fp, [pc, #1136]	; 516c <get_hop_pattern@@Base+0x498>
    4cf8:	orr	r7, r7, r3, lsl #24
    4cfc:	ldr	r3, [pc, #1132]	; 5170 <get_hop_pattern@@Base+0x49c>
    4d00:	orr	r9, r4, r0, lsl #7
    4d04:	ldr	sl, [pc, #1128]	; 5174 <get_hop_pattern@@Base+0x4a0>
    4d08:	str	r7, [sp, #8]
    4d0c:	ldr	r5, [pc, #1124]	; 5178 <get_hop_pattern@@Base+0x4a4>
    4d10:	add	r3, pc, r3
    4d14:	str	r9, [sp, #12]
    4d18:	ldr	r2, [r3, #4]
    4d1c:	ldr	r4, [pc, #1112]	; 517c <get_hop_pattern@@Base+0x4a8>
    4d20:	cmp	r2, #0
    4d24:	beq	4de8 <get_hop_pattern@@Base+0x114>
    4d28:	bic	r3, r7, #16711680	; 0xff0000
    4d2c:	and	r1, r7, #16711680	; 0xff0000
    4d30:	ldr	r2, [r2, #12]
    4d34:	bic	r3, r3, #65280	; 0xff00
    4d38:	add	r3, r3, fp
    4d3c:	add	r3, r3, r1
    4d40:	and	r1, r7, #65280	; 0xff00
    4d44:	add	r3, r3, r1
    4d48:	eor	r3, r3, sl
    4d4c:	sub	r0, r5, r3
    4d50:	sub	r1, r4, r3
    4d54:	eor	r0, r0, r3, lsl #8
    4d58:	sub	r1, r1, r0
    4d5c:	sub	r3, r3, r0
    4d60:	eor	r1, r1, r0, lsr #13
    4d64:	sub	r3, r3, r1
    4d68:	sub	r0, r0, r1
    4d6c:	eor	r3, r3, r1, lsr #12
    4d70:	sub	r0, r0, r3
    4d74:	sub	r1, r1, r3
    4d78:	eor	r0, r0, r3, lsl #16
    4d7c:	sub	r1, r1, r0
    4d80:	sub	r3, r3, r0
    4d84:	eor	r1, r1, r0, lsr #5
    4d88:	sub	r3, r3, r1
    4d8c:	sub	r0, r0, r1
    4d90:	eor	r3, r3, r1, lsr #3
    4d94:	sub	r0, r0, r3
    4d98:	eor	r0, r0, r3, lsl #10
    4d9c:	sub	r3, r1, r3
    4da0:	ldr	r1, [r2, #4]
    4da4:	sub	r3, r3, r0
    4da8:	eor	r0, r3, r0, lsr #15
    4dac:	mov	r3, #12
    4db0:	sub	r1, r1, #1
    4db4:	and	r0, r0, r1
    4db8:	ldr	r1, [r2]
    4dbc:	mul	r0, r3, r0
    4dc0:	ldr	r6, [r1, r0]
    4dc4:	cmp	r6, #0
    4dc8:	beq	4de8 <get_hop_pattern@@Base+0x114>
    4dcc:	ldr	r3, [r2, #20]
    4dd0:	add	r2, sp, #8
    4dd4:	str	r2, [sp]
    4dd8:	rsb	r3, r3, #0
    4ddc:	add	r6, r6, r3
    4de0:	cmp	r6, #0
    4de4:	bne	4e5c <get_hop_pattern@@Base+0x188>
    4de8:	mov	r0, r8
    4dec:	bl	20ec <gen_hop_pattern@plt>
    4df0:	mov	r0, #48	; 0x30
    4df4:	bl	22e4 <malloc@plt>
    4df8:	ldr	r3, [r8, #372]	; 0x174
    4dfc:	mov	r6, r0
    4e00:	add	r8, r0, #12
    4e04:	stm	r0, {r7, r9}
    4e08:	str	r3, [r0, #8]
    4e0c:	mov	r3, #0
    4e10:	str	r0, [r6, #32]
    4e14:	str	r3, [r0, #20]
    4e18:	mov	r3, #4
    4e1c:	str	r3, [r0, #36]	; 0x24
    4e20:	ldr	r3, [pc, #856]	; 5180 <get_hop_pattern@@Base+0x4ac>
    4e24:	add	r3, pc, r3
    4e28:	ldr	r9, [r3, #4]
    4e2c:	cmp	r9, #0
    4e30:	bne	50bc <get_hop_pattern@@Base+0x3e8>
    4e34:	mov	r0, #44	; 0x2c
    4e38:	str	r9, [r6, #16]
    4e3c:	str	r6, [r3, #4]
    4e40:	bl	22e4 <malloc@plt>
    4e44:	cmp	r0, #0
    4e48:	mov	r7, r0
    4e4c:	str	r0, [r6, #12]
    4e50:	bne	4e98 <get_hop_pattern@@Base+0x1c4>
    4e54:	mvn	r0, #0
    4e58:	bl	2338 <exit@plt>
    4e5c:	ldr	r2, [r6, #36]	; 0x24
    4e60:	cmp	r2, #4
    4e64:	bne	4e84 <get_hop_pattern@@Base+0x1b0>
    4e68:	ldr	r1, [sp]
    4e6c:	str	r3, [sp, #4]
    4e70:	ldr	r0, [r6, #32]
    4e74:	bl	21d0 <memcmp@plt>
    4e78:	cmp	r0, #0
    4e7c:	ldr	r3, [sp, #4]
    4e80:	beq	5154 <get_hop_pattern@@Base+0x480>
    4e84:	ldr	r6, [r6, #28]
    4e88:	cmp	r6, #0
    4e8c:	beq	4de8 <get_hop_pattern@@Base+0x114>
    4e90:	add	r6, r6, r3
    4e94:	b	4de0 <get_hop_pattern@@Base+0x10c>
    4e98:	mov	r3, #32
    4e9c:	mov	r1, r9
    4ea0:	mov	r2, r3
    4ea4:	add	r0, r0, #12
    4ea8:	bl	23e0 <memset@plt>
    4eac:	mov	r3, #32
    4eb0:	mov	r0, #384	; 0x180
    4eb4:	str	r3, [r7, #4]
    4eb8:	mov	r3, #5
    4ebc:	str	r3, [r7, #8]
    4ec0:	mov	r3, #12
    4ec4:	str	r8, [r7, #16]
    4ec8:	str	r3, [r7, #20]
    4ecc:	bl	22e4 <malloc@plt>
    4ed0:	cmp	r0, #0
    4ed4:	str	r0, [r7]
    4ed8:	beq	4e54 <get_hop_pattern@@Base+0x180>
    4edc:	mov	r2, #384	; 0x180
    4ee0:	mov	r1, r9
    4ee4:	bl	23e0 <memset@plt>
    4ee8:	ldr	r3, [pc, #660]	; 5184 <get_hop_pattern@@Base+0x4b0>
    4eec:	str	r3, [r7, #40]	; 0x28
    4ef0:	ldr	r3, [pc, #656]	; 5188 <get_hop_pattern@@Base+0x4b4>
    4ef4:	mov	ip, #0
    4ef8:	add	r3, pc, r3
    4efc:	ldr	r3, [r3, #4]
    4f00:	ldr	r7, [r3, #12]
    4f04:	ldr	r2, [r7, #12]
    4f08:	add	r2, r2, #1
    4f0c:	str	r2, [r7, #12]
    4f10:	ldrb	r2, [r6]
    4f14:	str	r7, [r6, #12]
    4f18:	ldrb	r1, [r6, #3]
    4f1c:	ldr	r3, [r3, #12]
    4f20:	add	fp, r2, fp
    4f24:	ldrb	r2, [r6, #2]
    4f28:	add	fp, fp, r1, lsl #24
    4f2c:	add	fp, fp, r2, lsl #16
    4f30:	ldrb	r2, [r6, #1]
    4f34:	add	fp, fp, r2, lsl #8
    4f38:	eor	sl, sl, fp
    4f3c:	sub	r5, r5, sl
    4f40:	sub	r2, r4, sl
    4f44:	eor	r5, r5, sl, lsl #8
    4f48:	sub	r2, r2, r5
    4f4c:	sub	sl, sl, r5
    4f50:	eor	r2, r2, r5, lsr #13
    4f54:	sub	sl, sl, r2
    4f58:	sub	r1, r5, r2
    4f5c:	eor	sl, sl, r2, lsr #12
    4f60:	sub	r1, r1, sl
    4f64:	sub	r2, r2, sl
    4f68:	eor	r1, r1, sl, lsl #16
    4f6c:	sub	r2, r2, r1
    4f70:	sub	sl, sl, r1
    4f74:	eor	r2, r2, r1, lsr #5
    4f78:	sub	sl, sl, r2
    4f7c:	sub	r1, r1, r2
    4f80:	eor	sl, sl, r2, lsr #3
    4f84:	sub	r1, r1, sl
    4f88:	eor	r1, r1, sl, lsl #10
    4f8c:	sub	sl, r2, sl
    4f90:	sub	sl, sl, r1
    4f94:	eor	sl, sl, r1, lsr #15
    4f98:	ldm	r3, {r1, r2}
    4f9c:	str	sl, [r6, #40]	; 0x28
    4fa0:	sub	r2, r2, #1
    4fa4:	and	r2, r2, sl
    4fa8:	mov	sl, #12
    4fac:	mul	sl, sl, r2
    4fb0:	add	r3, r1, sl
    4fb4:	ldr	r0, [r1, sl]
    4fb8:	ldr	r2, [r3, #4]
    4fbc:	cmp	r0, ip
    4fc0:	add	r2, r2, #1
    4fc4:	str	r2, [r3, #4]
    4fc8:	str	ip, [r6, #24]
    4fcc:	str	r0, [r6, #28]
    4fd0:	strne	r8, [r0, #12]
    4fd4:	str	r8, [r1, sl]
    4fd8:	ldr	r1, [r3, #8]
    4fdc:	mov	r3, #10
    4fe0:	mla	r3, r1, r3, r3
    4fe4:	cmp	r2, r3
    4fe8:	bcc	50b4 <get_hop_pattern@@Base+0x3e0>
    4fec:	ldr	r3, [r7, #36]	; 0x24
    4ff0:	cmp	r3, #1
    4ff4:	beq	50b4 <get_hop_pattern@@Base+0x3e0>
    4ff8:	ldr	r2, [r7, #4]
    4ffc:	mov	r5, #24
    5000:	mul	r5, r5, r2
    5004:	mov	r0, r5
    5008:	bl	22e4 <malloc@plt>
    500c:	subs	r4, r0, #0
    5010:	beq	4e54 <get_hop_pattern@@Base+0x180>
    5014:	mov	r2, r5
    5018:	mov	r1, #0
    501c:	bl	23e0 <memset@plt>
    5020:	ldm	r7, {r0, sl}
    5024:	mov	fp, #12
    5028:	ldr	r3, [r7, #8]
    502c:	ldr	r2, [r7, #12]
    5030:	lsl	r5, sl, #1
    5034:	sub	r5, r5, #1
    5038:	add	r3, r3, #1
    503c:	tst	r2, r5
    5040:	movne	lr, #1
    5044:	moveq	lr, #0
    5048:	add	lr, lr, r2, lsr r3
    504c:	mov	r3, #0
    5050:	str	lr, [r7, #24]
    5054:	str	r3, [r7, #28]
    5058:	cmp	sl, r3
    505c:	bne	50dc <get_hop_pattern@@Base+0x408>
    5060:	bl	2164 <free@plt>
    5064:	ldr	r3, [r6, #12]
    5068:	ldr	r2, [r3, #4]
    506c:	str	r4, [r3]
    5070:	ldr	r1, [r3, #12]
    5074:	lsl	r2, r2, #1
    5078:	str	r2, [r3, #4]
    507c:	ldr	r2, [r3, #8]
    5080:	add	r2, r2, #1
    5084:	str	r2, [r3, #8]
    5088:	ldr	r2, [r3, #28]
    508c:	cmp	r2, r1, lsr #1
    5090:	movls	r2, #0
    5094:	strls	r2, [r3, #32]
    5098:	bls	50b4 <get_hop_pattern@@Base+0x3e0>
    509c:	ldr	r2, [r3, #32]
    50a0:	add	r2, r2, #1
    50a4:	cmp	r2, #1
    50a8:	str	r2, [r3, #32]
    50ac:	movhi	r2, #1
    50b0:	strhi	r2, [r3, #36]	; 0x24
    50b4:	add	sp, sp, #20
    50b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    50bc:	ldr	r2, [r9, #12]
    50c0:	ldr	r3, [r2, #16]
    50c4:	ldr	r1, [r2, #20]
    50c8:	str	r0, [r3, #8]
    50cc:	sub	r3, r3, r1
    50d0:	str	r3, [r0, #16]
    50d4:	str	r8, [r2, #16]
    50d8:	b	4ef0 <get_hop_pattern@@Base+0x21c>
    50dc:	mul	r2, fp, r3
    50e0:	ldr	r2, [r0, r2]
    50e4:	cmp	r2, #0
    50e8:	addeq	r3, r3, #1
    50ec:	beq	5058 <get_hop_pattern@@Base+0x384>
    50f0:	ldr	r1, [r2, #16]
    50f4:	str	r1, [sp]
    50f8:	ldr	r1, [r2, #28]
    50fc:	and	r1, r1, r5
    5100:	mul	r1, fp, r1
    5104:	add	r8, r4, r1
    5108:	ldr	ip, [r8, #4]
    510c:	add	ip, ip, #1
    5110:	cmp	lr, ip
    5114:	str	ip, [r8, #4]
    5118:	bcs	5130 <get_hop_pattern@@Base+0x45c>
    511c:	udiv	ip, ip, lr
    5120:	ldr	r9, [r7, #28]
    5124:	add	r9, r9, #1
    5128:	str	r9, [r7, #28]
    512c:	str	ip, [r8, #8]
    5130:	mov	ip, #0
    5134:	str	ip, [r2, #12]
    5138:	ldr	ip, [r4, r1]
    513c:	cmp	ip, #0
    5140:	str	ip, [r2, #16]
    5144:	strne	r2, [ip, #12]
    5148:	str	r2, [r4, r1]
    514c:	ldr	r2, [sp]
    5150:	b	50e4 <get_hop_pattern@@Base+0x410>
    5154:	ldr	r0, [pc, #48]	; 518c <get_hop_pattern@@Base+0x4b8>
    5158:	add	r0, pc, r0
    515c:	bl	22d8 <puts@plt>
    5160:	ldr	r3, [r6, #8]
    5164:	str	r3, [r8, #372]	; 0x174
    5168:	b	50b4 <get_hop_pattern@@Base+0x3e0>
    516c:	tsteq	r2, sp, lsl #2
    5170:	muleq	r2, r8, r4
    5174:	andeq	pc, r7, sp, ror #14
    5178:	svcls	0x0049bac6
    517c:	mcr2	14, 7, fp, cr13, cr3, {7}
    5180:	andeq	r2, r2, r4, lsl #7
    5184:	andsge	r1, r1, r1, ror #31
    5188:			; <UNDEFINED> instruction: 0x000222b0
    518c:	andeq	fp, r0, r5, lsl #31

00005190 <btbb_piconet_set_afh_map@@Base>:
    5190:	push	{r4, r5, r6, r7, r8, lr}
    5194:	mov	r3, #0
    5198:	mov	r4, r0
    519c:	sub	r6, r1, #1
    51a0:	add	r5, r0, #12
    51a4:	add	r7, r0, #22
    51a8:	strb	r3, [r0, #22]
    51ac:	ldrb	r0, [r6, #1]!
    51b0:	strb	r0, [r5], #1
    51b4:	bl	20f8 <count_bits@plt>
    51b8:	ldrb	r3, [r4, #22]
    51bc:	cmp	r5, r7
    51c0:	add	r0, r3, r0
    51c4:	strb	r0, [r4, #22]
    51c8:	bne	51ac <btbb_piconet_set_afh_map@@Base+0x1c>
    51cc:	mov	r1, #2
    51d0:	mov	r0, r4
    51d4:	bl	220c <btbb_piconet_get_flag@plt>
    51d8:	cmp	r0, #0
    51dc:	popeq	{r4, r5, r6, r7, r8, pc}
    51e0:	mov	r0, r4
    51e4:	pop	{r4, r5, r6, r7, r8, lr}
    51e8:	b	22cc <get_hop_pattern@plt>

000051ec <single_hop@@Base>:
    51ec:	push	{r4, r5, r6, r7, r8, lr}
    51f0:	mov	r5, r1
    51f4:	ubfx	r1, r0, #1, #1
    51f8:	lsl	r7, r1, #5
    51fc:	ldr	r3, [r5, #44]	; 0x2c
    5200:	sub	r1, r7, r1
    5204:	ldr	r6, [pc, #132]	; 5290 <single_hop@@Base+0xa4>
    5208:	ldr	ip, [r5, #48]	; 0x30
    520c:	eor	r3, r3, r0, asr #21
    5210:	ldr	r2, [r5, #52]	; 0x34
    5214:	and	r6, r6, r0, asr #3
    5218:	eor	ip, ip, r0, asr #16
    521c:	eor	r2, r2, r0, asr #7
    5220:	and	ip, ip, #31
    5224:	add	r0, r3, r0, lsr #2
    5228:	ldr	r3, [r5, #36]	; 0x24
    522c:	eor	r1, r1, ip
    5230:	ubfx	r2, r2, #0, #9
    5234:	and	r0, r0, #31
    5238:	eor	r0, r0, r3
    523c:	bl	24d0 <fast_perm@plt>
    5240:	mov	r4, r0
    5244:	mov	r1, #11
    5248:	mov	r0, r5
    524c:	bl	220c <btbb_piconet_get_flag@plt>
    5250:	cmp	r0, #0
    5254:	ldr	r3, [r5, #40]	; 0x28
    5258:	moveq	r2, #79	; 0x4f
    525c:	ldrbne	r2, [r5, #22]
    5260:	addne	r4, r4, r3
    5264:	addeq	r4, r4, r3
    5268:	udiv	r3, r6, r2
    526c:	mls	r6, r2, r3, r6
    5270:	add	r7, r6, r7
    5274:	add	r4, r4, r7
    5278:	udiv	r3, r4, r2
    527c:	mls	r4, r2, r3, r4
    5280:	add	r4, r4, #14
    5284:	ldr	r0, [r5, r4, lsl #2]
    5288:	uxtb	r0, r0
    528c:	pop	{r4, r5, r6, r7, r8, pc}
    5290:	ldrsheq	pc, [pc, #240]	; 5388 <btbb_init_hop_reversal@@Base+0xe8>	; <UNPREDICTABLE>

00005294 <hop@@Base>:
    5294:	ldr	r3, [r1, #372]	; 0x174
    5298:	ldrb	r0, [r3, r0]
    529c:	bx	lr

000052a0 <btbb_init_hop_reversal@@Base>:
    52a0:	push	{r4, r5, r6, r7, r8, lr}
    52a4:	mov	r5, r0
    52a8:	mov	r0, r1
    52ac:	mov	r4, r1
    52b0:	mov	r6, #25
    52b4:	bl	22cc <get_hop_pattern@plt>
    52b8:	ldr	r0, [pc, #196]	; 5384 <btbb_init_hop_reversal@@Base+0xe4>
    52bc:	movw	r3, #53092	; 0xcf64
    52c0:	cmp	r5, #0
    52c4:	moveq	r0, r3
    52c8:	lsl	r0, r0, #2
    52cc:	bl	22e4 <malloc@plt>
    52d0:	add	r2, r4, #4096	; 0x1000
    52d4:	ldr	r7, [r4, #8]
    52d8:	mov	ip, #0
    52dc:	ldr	r3, [r2, #1552]	; 0x610
    52e0:	str	r0, [r4, #32]
    52e4:	ldrb	lr, [r2, #552]	; 0x228
    52e8:	ldr	r2, [r2, #1556]	; 0x614
    52ec:	ldr	r8, [r4, #372]	; 0x174
    52f0:	add	r3, r3, r2
    52f4:	and	r3, r3, #63	; 0x3f
    52f8:	cmp	r7, #0
    52fc:	ldrb	r2, [r8, r3]
    5300:	beq	5318 <btbb_init_hop_reversal@@Base+0x78>
    5304:	add	r2, r2, #24
    5308:	udiv	r1, r2, r6
    530c:	mls	r2, r6, r1, r2
    5310:	add	r2, r2, #26
    5314:	uxtb	r2, r2
    5318:	cmp	lr, r2
    531c:	streq	r3, [r0, ip, lsl #2]
    5320:	add	r3, r3, #64	; 0x40
    5324:	addeq	ip, ip, #1
    5328:	cmn	r3, #-134217727	; 0xf8000001
    532c:	ble	52f8 <btbb_init_hop_reversal@@Base+0x58>
    5330:	mov	r6, #0
    5334:	mov	r0, r4
    5338:	str	ip, [r4, #376]	; 0x178
    533c:	mov	r2, #1
    5340:	mov	r1, #9
    5344:	str	r6, [r4, #388]	; 0x184
    5348:	bl	2230 <btbb_piconet_set_flag@plt>
    534c:	mov	r2, r6
    5350:	mov	r0, r4
    5354:	mov	r1, #5
    5358:	bl	2230 <btbb_piconet_set_flag@plt>
    535c:	mov	r2, r5
    5360:	mov	r0, r4
    5364:	mov	r1, #13
    5368:	bl	2230 <btbb_piconet_set_flag@plt>
    536c:	ldr	r0, [pc, #20]	; 5388 <btbb_init_hop_reversal@@Base+0xe8>
    5370:	ldr	r1, [r4, #376]	; 0x178
    5374:	add	r0, pc, r0
    5378:	bl	211c <printf@plt>
    537c:	ldr	r0, [r4, #376]	; 0x178
    5380:	pop	{r4, r5, r6, r7, r8, pc}
    5384:	andeq	r8, r2, ip, asr pc
    5388:	andeq	fp, r0, fp, lsl #27

0000538c <btbb_winnow@@Base>:
    538c:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5390:	mov	r4, r0
    5394:	mov	r6, #25
    5398:	ldr	r7, [pc, #364]	; 550c <btbb_winnow@@Base+0x180>
    539c:	ldr	r5, [r0, #376]	; 0x178
    53a0:	add	r7, pc, r7
    53a4:	ldr	r2, [r4, #380]	; 0x17c
    53a8:	ldr	r3, [r4, #388]	; 0x184
    53ac:	cmp	r3, r2
    53b0:	bge	5424 <btbb_winnow@@Base+0x98>
    53b4:	add	r2, r3, #162	; 0xa2
    53b8:	add	r3, r4, r3
    53bc:	ldr	r8, [r4, r2, lsl #2]
    53c0:	movw	r2, #4648	; 0x1228
    53c4:	mov	r5, #0
    53c8:	mov	r1, r5
    53cc:	ldrb	r9, [r3, r2]
    53d0:	ldr	r3, [r4, #376]	; 0x178
    53d4:	cmp	r1, r3
    53d8:	blt	5430 <btbb_winnow@@Base+0xa4>
    53dc:	cmp	r5, #1
    53e0:	str	r5, [r4, #376]	; 0x178
    53e4:	bne	547c <btbb_winnow@@Base+0xf0>
    53e8:	ldr	r2, [r4, #32]
    53ec:	add	r1, r4, #4096	; 0x1000
    53f0:	ldr	r3, [r1, #1556]	; 0x614
    53f4:	ldr	r0, [r2]
    53f8:	lsl	r3, r3, #1
    53fc:	rsb	r3, r3, r0, lsl #1
    5400:	ldr	r0, [pc, #264]	; 5510 <btbb_winnow@@Base+0x184>
    5404:	str	r3, [r1, #1552]	; 0x610
    5408:	ldr	r1, [r2]
    540c:	add	r0, pc, r0
    5410:	bl	211c <printf@plt>
    5414:	mov	r2, r5
    5418:	mov	r1, #5
    541c:	mov	r0, r4
    5420:	bl	2230 <btbb_piconet_set_flag@plt>
    5424:	mov	r0, r5
    5428:	add	sp, sp, #4
    542c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5430:	ldr	r0, [r4, #32]
    5434:	ldr	r2, [r4, #372]	; 0x174
    5438:	ldr	ip, [r0, r1, lsl #2]
    543c:	add	r3, r8, ip
    5440:	bic	r3, r3, #-134217728	; 0xf8000000
    5444:	ldrb	r3, [r2, r3]
    5448:	ldr	r2, [r4, #8]
    544c:	cmp	r2, #0
    5450:	beq	5468 <btbb_winnow@@Base+0xdc>
    5454:	add	r3, r3, #24
    5458:	udiv	r2, r3, r6
    545c:	mls	r3, r6, r2, r3
    5460:	add	r3, r3, #26
    5464:	uxtb	r3, r3
    5468:	cmp	r9, r3
    546c:	add	r1, r1, #1
    5470:	streq	ip, [r0, r5, lsl #2]
    5474:	addeq	r5, r5, #1
    5478:	b	53d0 <btbb_winnow@@Base+0x44>
    547c:	cmp	r5, #0
    5480:	bne	5490 <btbb_winnow@@Base+0x104>
    5484:	mov	r0, r4
    5488:	bl	45c0 <btbb_piconet_get_flag@@Base+0x18>
    548c:	b	5424 <btbb_winnow@@Base+0x98>
    5490:	cmp	r5, #1
    5494:	beq	5424 <btbb_winnow@@Base+0x98>
    5498:	ldr	r3, [r4, #380]	; 0x17c
    549c:	cmp	r3, #0
    54a0:	ble	54fc <btbb_winnow@@Base+0x170>
    54a4:	ldr	r3, [r4, #388]	; 0x184
    54a8:	mov	r1, #12
    54ac:	mov	r0, r4
    54b0:	sub	r2, r3, #1
    54b4:	add	r3, r3, #161	; 0xa1
    54b8:	ldr	sl, [r4, r3, lsl #2]
    54bc:	add	r3, r4, r2
    54c0:	movw	r2, #4648	; 0x1228
    54c4:	ldrb	fp, [r3, r2]
    54c8:	bl	220c <btbb_piconet_get_flag@plt>
    54cc:	cmp	r0, #0
    54d0:	bne	54fc <btbb_winnow@@Base+0x170>
    54d4:	add	sl, sl, #1
    54d8:	cmp	sl, r8
    54dc:	cmpeq	r9, fp
    54e0:	bne	54fc <btbb_winnow@@Base+0x170>
    54e4:	mov	r0, r4
    54e8:	mov	r2, #1
    54ec:	mov	r1, #12
    54f0:	bl	2230 <btbb_piconet_set_flag@plt>
    54f4:	mov	r0, r7
    54f8:	bl	22d8 <puts@plt>
    54fc:	ldr	r3, [r4, #388]	; 0x184
    5500:	add	r3, r3, #1
    5504:	str	r3, [r4, #388]	; 0x184
    5508:	b	53a4 <btbb_winnow@@Base+0x18>
    550c:	muleq	r0, sl, sp
    5510:	andeq	fp, r0, r2, lsl sp

00005514 <btbb_uap_from_header@@Base>:
    5514:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5518:	mov	r4, r1
    551c:	mov	r9, r0
    5520:	mov	r1, #10
    5524:	ldr	fp, [r0, #2816]	; 0xb00
    5528:	mov	r0, r4
    552c:	bl	220c <btbb_piconet_get_flag@plt>
    5530:	cmp	r0, #0
    5534:	mov	r0, r4
    5538:	addeq	r3, r4, #4096	; 0x1000
    553c:	streq	fp, [r3, #1556]	; 0x614
    5540:	ldrb	r1, [r9, #8]
    5544:	bl	2254 <btbb_piconet_set_channel_seen@plt>
    5548:	ldr	r3, [r4, #380]	; 0x17c
    554c:	cmp	r3, #1000	; 0x3e8
    5550:	bge	55f8 <btbb_uap_from_header@@Base+0xe4>
    5554:	add	r6, r4, #4096	; 0x1000
    5558:	add	r1, r3, #162	; 0xa2
    555c:	ldr	r2, [r6, #1556]	; 0x614
    5560:	mov	r5, #0
    5564:	add	r8, r4, #392	; 0x188
    5568:	mov	r7, r5
    556c:	str	r5, [sp]
    5570:	sub	r2, fp, r2
    5574:	str	r2, [r4, r1, lsl #2]
    5578:	add	r1, r4, r3
    557c:	movw	r2, #4648	; 0x1228
    5580:	ldrb	r0, [r9, #8]
    5584:	add	r3, r3, #1
    5588:	strb	r0, [r1, r2]
    558c:	str	r3, [r4, #380]	; 0x17c
    5590:	ldr	r3, [r4, #384]	; 0x180
    5594:	add	r3, r3, #1
    5598:	str	r3, [r4, #384]	; 0x180
    559c:	ldr	r3, [r8], #4
    55a0:	cmp	r3, #0
    55a4:	blt	5614 <btbb_uap_from_header@@Base+0x100>
    55a8:	ldr	r3, [r6, #1556]	; 0x614
    55ac:	mov	r1, r9
    55b0:	sub	r3, fp, r3
    55b4:	add	r3, r3, r7
    55b8:	and	r3, r3, #63	; 0x3f
    55bc:	mov	r0, r3
    55c0:	str	r3, [sp, #4]
    55c4:	bl	24dc <try_clock@plt>
    55c8:	mov	sl, r0
    55cc:	mov	r1, #10
    55d0:	mov	r0, r4
    55d4:	bl	220c <btbb_piconet_get_flag@plt>
    55d8:	cmp	r0, #0
    55dc:	ldr	r3, [sp, #4]
    55e0:	bne	56c4 <btbb_uap_from_header@@Base+0x1b0>
    55e4:	mov	r0, r3
    55e8:	mov	r1, r9
    55ec:	bl	229c <crc_check@plt>
    55f0:	mov	r3, r0
    55f4:	b	56d4 <btbb_uap_from_header@@Base+0x1c0>
    55f8:	ldr	r0, [pc, #480]	; 57e0 <btbb_uap_from_header@@Base+0x2cc>
    55fc:	add	r0, pc, r0
    5600:	bl	22d8 <puts@plt>
    5604:	mov	r0, r4
    5608:	bl	45c0 <btbb_piconet_get_flag@@Base+0x18>
    560c:	mov	r5, #0
    5610:	b	57a0 <btbb_uap_from_header@@Base+0x28c>
    5614:	mov	r1, #10
    5618:	mov	r0, r4
    561c:	bl	220c <btbb_piconet_get_flag@plt>
    5620:	cmp	r0, #0
    5624:	beq	55a8 <btbb_uap_from_header@@Base+0x94>
    5628:	add	r7, r7, #1
    562c:	cmp	r7, #64	; 0x40
    5630:	bne	559c <btbb_uap_from_header@@Base+0x88>
    5634:	mov	r2, #1
    5638:	mov	r1, #10
    563c:	mov	r0, r4
    5640:	bl	2230 <btbb_piconet_set_flag@plt>
    5644:	cmp	r5, #1
    5648:	bne	57cc <btbb_uap_from_header@@Base+0x2b8>
    564c:	ldr	r2, [sp]
    5650:	mov	r1, #2
    5654:	mov	r0, r4
    5658:	ldr	r3, [r6, #1556]	; 0x614
    565c:	sub	r3, r2, r3
    5660:	and	r3, r3, #63	; 0x3f
    5664:	str	r3, [r6, #1552]	; 0x610
    5668:	bl	220c <btbb_piconet_get_flag@plt>
    566c:	ldr	r3, [sp]
    5670:	cmp	r0, #0
    5674:	ldr	r2, [r4, #384]	; 0x180
    5678:	add	r7, r3, #98	; 0x62
    567c:	bne	57bc <btbb_uap_from_header@@Base+0x2a8>
    5680:	ldr	r0, [pc, #348]	; 57e4 <btbb_uap_from_header@@Base+0x2d0>
    5684:	ldr	r1, [r4, r7, lsl #2]
    5688:	add	r0, pc, r0
    568c:	bl	211c <printf@plt>
    5690:	ldr	r3, [r4, r7, lsl #2]
    5694:	mov	r2, #1
    5698:	mov	r1, #4
    569c:	mov	r0, r4
    56a0:	strb	r3, [r4, #28]
    56a4:	bl	2230 <btbb_piconet_set_flag@plt>
    56a8:	mov	r2, #1
    56ac:	mov	r1, #2
    56b0:	mov	r0, r4
    56b4:	bl	2230 <btbb_piconet_set_flag@plt>
    56b8:	mov	r3, #0
    56bc:	str	r3, [r4, #384]	; 0x180
    56c0:	b	57a0 <btbb_uap_from_header@@Base+0x28c>
    56c4:	ldr	r2, [r8, #-4]
    56c8:	cmp	sl, r2
    56cc:	mvnne	r3, #0
    56d0:	beq	55e4 <btbb_uap_from_header@@Base+0xd0>
    56d4:	mov	r1, #2
    56d8:	mov	r0, r4
    56dc:	str	r3, [sp, #4]
    56e0:	bl	220c <btbb_piconet_get_flag@plt>
    56e4:	cmp	r0, #0
    56e8:	ldr	r3, [sp, #4]
    56ec:	beq	56fc <btbb_uap_from_header@@Base+0x1e8>
    56f0:	ldrb	r2, [r4, #28]
    56f4:	cmp	r2, sl
    56f8:	bne	571c <btbb_uap_from_header@@Base+0x208>
    56fc:	add	r3, r3, #1
    5700:	cmp	r3, #3
    5704:	addls	pc, pc, r3, lsl #2
    5708:	b	5738 <btbb_uap_from_header@@Base+0x224>
    570c:	b	571c <btbb_uap_from_header@@Base+0x208>
    5710:	b	571c <btbb_uap_from_header@@Base+0x208>
    5714:	b	5728 <btbb_uap_from_header@@Base+0x214>
    5718:	b	5728 <btbb_uap_from_header@@Base+0x214>
    571c:	mvn	r3, #0
    5720:	str	r3, [r8, #-4]
    5724:	b	5628 <btbb_uap_from_header@@Base+0x114>
    5728:	add	r5, r5, #1
    572c:	str	sl, [r8, #-4]
    5730:	str	r7, [sp]
    5734:	b	5628 <btbb_uap_from_header@@Base+0x114>
    5738:	ldr	r3, [r6, #1556]	; 0x614
    573c:	mov	r1, #2
    5740:	mov	r0, r4
    5744:	sub	r7, r7, r3
    5748:	and	r7, r7, #63	; 0x3f
    574c:	str	r7, [r6, #1552]	; 0x610
    5750:	bl	220c <btbb_piconet_get_flag@plt>
    5754:	cmp	r0, #0
    5758:	ldr	r2, [r4, #384]	; 0x180
    575c:	bne	57ac <btbb_uap_from_header@@Base+0x298>
    5760:	ldr	r0, [pc, #128]	; 57e8 <btbb_uap_from_header@@Base+0x2d4>
    5764:	mov	r1, sl
    5768:	add	r0, pc, r0
    576c:	bl	211c <printf@plt>
    5770:	mov	r2, #1
    5774:	mov	r1, #4
    5778:	strb	sl, [r4, #28]
    577c:	mov	r0, r4
    5780:	mov	r5, #1
    5784:	bl	2230 <btbb_piconet_set_flag@plt>
    5788:	mov	r2, #1
    578c:	mov	r1, #2
    5790:	mov	r0, r4
    5794:	bl	2230 <btbb_piconet_set_flag@plt>
    5798:	mov	r3, #0
    579c:	str	r3, [r4, #384]	; 0x180
    57a0:	mov	r0, r5
    57a4:	add	sp, sp, #12
    57a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    57ac:	ldr	r0, [pc, #56]	; 57ec <btbb_uap_from_header@@Base+0x2d8>
    57b0:	ldr	r1, [r6, #1552]	; 0x610
    57b4:	add	r0, pc, r0
    57b8:	b	576c <btbb_uap_from_header@@Base+0x258>
    57bc:	ldr	r0, [pc, #44]	; 57f0 <btbb_uap_from_header@@Base+0x2dc>
    57c0:	ldr	r1, [r6, #1552]	; 0x610
    57c4:	add	r0, pc, r0
    57c8:	b	568c <btbb_uap_from_header@@Base+0x178>
    57cc:	cmp	r5, #0
    57d0:	bne	560c <btbb_uap_from_header@@Base+0xf8>
    57d4:	mov	r0, r4
    57d8:	bl	45c0 <btbb_piconet_get_flag@@Base+0x18>
    57dc:	b	57a0 <btbb_uap_from_header@@Base+0x28c>
    57e0:	andeq	fp, r0, r0, ror #22
    57e4:	andeq	fp, r0, r7, lsl #22
    57e8:	andeq	fp, r0, sl, lsl sl
    57ec:	andeq	fp, r0, r5, lsl #20
    57f0:	andeq	fp, r0, r2, lsl #20

000057f4 <try_hop@@Base>:
    57f4:	push	{r4, r5, r6, r7, r8, lr}
    57f8:	mov	r4, r1
    57fc:	mov	r5, r0
    5800:	ldrb	r6, [r1, #28]
    5804:	bl	22a8 <btbb_decode@plt>
    5808:	mov	r1, #9
    580c:	mov	r0, r4
    5810:	bl	220c <btbb_piconet_get_flag@plt>
    5814:	cmp	r0, #0
    5818:	beq	58c0 <try_hop@@Base+0xcc>
    581c:	add	r7, r4, #4096	; 0x1000
    5820:	ldr	r3, [r4, #380]	; 0x17c
    5824:	ldr	r0, [r7, #1556]	; 0x614
    5828:	ldr	r2, [r5, #2816]	; 0xb00
    582c:	add	r1, r3, #162	; 0xa2
    5830:	sub	r2, r2, r0
    5834:	str	r2, [r4, r1, lsl #2]
    5838:	add	r1, r4, r3
    583c:	movw	r2, #4648	; 0x1228
    5840:	ldrb	r0, [r5, #8]
    5844:	add	r3, r3, #1
    5848:	strb	r0, [r1, r2]
    584c:	mov	r0, r4
    5850:	str	r3, [r4, #380]	; 0x17c
    5854:	ldr	r3, [r4, #384]	; 0x180
    5858:	add	r3, r3, #1
    585c:	str	r3, [r4, #384]	; 0x180
    5860:	bl	22b4 <btbb_winnow@plt>
    5864:	mov	r1, #5
    5868:	mov	r0, r4
    586c:	bl	220c <btbb_piconet_get_flag@plt>
    5870:	cmp	r0, #0
    5874:	beq	5894 <try_hop@@Base+0xa0>
    5878:	ldr	r0, [pc, #212]	; 5954 <try_hop@@Base+0x160>
    587c:	add	r0, pc, r0
    5880:	bl	22d8 <puts@plt>
    5884:	ldr	r0, [pc, #204]	; 5958 <try_hop@@Base+0x164>
    5888:	ldr	r1, [r7, #1552]	; 0x610
    588c:	add	r0, pc, r0
    5890:	bl	211c <printf@plt>
    5894:	mov	r1, #2
    5898:	mov	r0, r4
    589c:	bl	220c <btbb_piconet_get_flag@plt>
    58a0:	cmp	r0, #0
    58a4:	popne	{r4, r5, r6, r7, r8, pc}
    58a8:	mov	r2, #1
    58ac:	mov	r1, #2
    58b0:	mov	r0, r4
    58b4:	bl	2230 <btbb_piconet_set_flag@plt>
    58b8:	strb	r6, [r4, #28]
    58bc:	pop	{r4, r5, r6, r7, r8, pc}
    58c0:	mov	r1, #4
    58c4:	mov	r0, r4
    58c8:	bl	220c <btbb_piconet_get_flag@plt>
    58cc:	subs	r7, r0, #0
    58d0:	mov	r1, r4
    58d4:	mov	r0, r5
    58d8:	beq	5914 <try_hop@@Base+0x120>
    58dc:	bl	2194 <btbb_uap_from_header@plt>
    58e0:	mov	r1, #5
    58e4:	mov	r0, r4
    58e8:	bl	220c <btbb_piconet_get_flag@plt>
    58ec:	cmp	r0, #0
    58f0:	beq	5894 <try_hop@@Base+0xa0>
    58f4:	ldr	r0, [pc, #96]	; 595c <try_hop@@Base+0x168>
    58f8:	add	r0, pc, r0
    58fc:	bl	22d8 <puts@plt>
    5900:	ldr	r0, [pc, #88]	; 5960 <try_hop@@Base+0x16c>
    5904:	add	r3, r4, #4096	; 0x1000
    5908:	ldr	r1, [r3, #1552]	; 0x610
    590c:	add	r0, pc, r0
    5910:	b	5890 <try_hop@@Base+0x9c>
    5914:	bl	2194 <btbb_uap_from_header@plt>
    5918:	cmp	r0, #0
    591c:	beq	5894 <try_hop@@Base+0xa0>
    5920:	ldrb	r3, [r4, #28]
    5924:	cmp	r3, r6
    5928:	bne	5944 <try_hop@@Base+0x150>
    592c:	mov	r1, r4
    5930:	mov	r0, r7
    5934:	bl	24e8 <btbb_init_hop_reversal@plt>
    5938:	mov	r0, r4
    593c:	bl	22b4 <btbb_winnow@plt>
    5940:	b	5894 <try_hop@@Base+0xa0>
    5944:	ldr	r0, [pc, #24]	; 5964 <try_hop@@Base+0x170>
    5948:	add	r0, pc, r0
    594c:	bl	22d8 <puts@plt>
    5950:	b	5894 <try_hop@@Base+0xa0>
    5954:	andeq	fp, r0, r5, ror r9
    5958:	andeq	fp, r0, r1, ror r9
    595c:	strdeq	fp, [r0], -r9
    5960:	strdeq	fp, [r0], -r1
    5964:	andeq	fp, r0, r9, asr #17

00005968 <btbb_print_afh_map@@Base>:
    5968:	push	{lr}		; (str lr, [sp, #-4]!)
    596c:	sub	sp, sp, #36	; 0x24
    5970:	ldrb	r3, [r0, #21]
    5974:	str	r3, [sp, #24]
    5978:	ldrb	r3, [r0, #20]
    597c:	str	r3, [sp, #20]
    5980:	ldrb	r3, [r0, #19]
    5984:	str	r3, [sp, #16]
    5988:	ldrb	r3, [r0, #18]
    598c:	str	r3, [sp, #12]
    5990:	ldrb	r3, [r0, #17]
    5994:	str	r3, [sp, #8]
    5998:	ldrb	r3, [r0, #16]
    599c:	str	r3, [sp, #4]
    59a0:	ldrb	r3, [r0, #15]
    59a4:	str	r3, [sp]
    59a8:	ldrb	r3, [r0, #14]
    59ac:	ldrb	r2, [r0, #13]
    59b0:	ldrb	r1, [r0, #12]
    59b4:	ldr	r0, [pc, #12]	; 59c8 <btbb_print_afh_map@@Base+0x60>
    59b8:	add	r0, pc, r0
    59bc:	bl	211c <printf@plt>
    59c0:	add	sp, sp, #36	; 0x24
    59c4:	pop	{pc}		; (ldr pc, [sp], #4)
    59c8:	andeq	fp, r0, pc, ror #16

000059cc <get_piconet@@Base>:
    59cc:	ldr	r3, [pc, #1124]	; 5e38 <get_piconet@@Base+0x46c>
    59d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    59d4:	sub	sp, sp, #20
    59d8:	ldr	fp, [pc, #1116]	; 5e3c <get_piconet@@Base+0x470>
    59dc:	add	r3, pc, r3
    59e0:	str	r0, [sp, #12]
    59e4:	ldr	r2, [r3, #8]
    59e8:	ldr	sl, [pc, #1104]	; 5e40 <get_piconet@@Base+0x474>
    59ec:	ldr	r5, [pc, #1104]	; 5e44 <get_piconet@@Base+0x478>
    59f0:	cmp	r2, #0
    59f4:	ldr	r4, [pc, #1100]	; 5e48 <get_piconet@@Base+0x47c>
    59f8:	beq	5ab8 <get_piconet@@Base+0xec>
    59fc:	ldrb	r3, [sp, #12]
    5a00:	ldrb	r1, [sp, #15]
    5a04:	ldr	r2, [r2, #8]
    5a08:	add	r3, r3, fp
    5a0c:	add	r3, r3, r1, lsl #24
    5a10:	ldrb	r1, [sp, #14]
    5a14:	add	r3, r3, r1, lsl #16
    5a18:	ldrb	r1, [sp, #13]
    5a1c:	add	r3, r3, r1, lsl #8
    5a20:	eor	r3, r3, sl
    5a24:	sub	r0, r5, r3
    5a28:	sub	r1, r4, r3
    5a2c:	eor	r0, r0, r3, lsl #8
    5a30:	sub	r1, r1, r0
    5a34:	sub	r3, r3, r0
    5a38:	eor	r1, r1, r0, lsr #13
    5a3c:	sub	r3, r3, r1
    5a40:	sub	r0, r0, r1
    5a44:	eor	r3, r3, r1, lsr #12
    5a48:	sub	r0, r0, r3
    5a4c:	sub	r1, r1, r3
    5a50:	eor	r0, r0, r3, lsl #16
    5a54:	sub	r1, r1, r0
    5a58:	sub	r3, r3, r0
    5a5c:	eor	r1, r1, r0, lsr #5
    5a60:	sub	r3, r3, r1
    5a64:	sub	r0, r0, r1
    5a68:	eor	r3, r3, r1, lsr #3
    5a6c:	sub	r0, r0, r3
    5a70:	eor	r0, r0, r3, lsl #10
    5a74:	sub	r3, r1, r3
    5a78:	sub	r3, r3, r0
    5a7c:	eor	r3, r3, r0, lsr #15
    5a80:	ldrd	r0, [r2]
    5a84:	sub	r1, r1, #1
    5a88:	and	r3, r3, r1
    5a8c:	mov	r1, #12
    5a90:	mul	r3, r1, r3
    5a94:	ldr	r6, [r0, r3]
    5a98:	cmp	r6, #0
    5a9c:	beq	5ab8 <get_piconet@@Base+0xec>
    5aa0:	ldr	r7, [r2, #20]
    5aa4:	add	r8, sp, r1
    5aa8:	rsb	r7, r7, #0
    5aac:	add	r6, r6, r7
    5ab0:	cmp	r6, #0
    5ab4:	bne	5b38 <get_piconet@@Base+0x16c>
    5ab8:	bl	20e0 <btbb_piconet_new@plt>
    5abc:	ldr	r7, [sp, #12]
    5ac0:	str	r0, [sp, #4]
    5ac4:	mov	r1, r7
    5ac8:	bl	2500 <btbb_init_piconet@plt>
    5acc:	mov	r0, #40	; 0x28
    5ad0:	bl	22e4 <malloc@plt>
    5ad4:	ldr	r3, [sp, #4]
    5ad8:	mov	r6, r0
    5adc:	add	r9, r0, #8
    5ae0:	str	r7, [r0]
    5ae4:	str	r3, [r0, #4]
    5ae8:	mov	r3, #0
    5aec:	str	r0, [r6, #28]
    5af0:	str	r3, [r0, #16]
    5af4:	mov	r3, #4
    5af8:	str	r3, [r0, #32]
    5afc:	ldr	r3, [pc, #840]	; 5e4c <get_piconet@@Base+0x480>
    5b00:	add	r3, pc, r3
    5b04:	ldr	r8, [r3, #8]
    5b08:	cmp	r8, #0
    5b0c:	bne	5d94 <get_piconet@@Base+0x3c8>
    5b10:	mov	r0, #44	; 0x2c
    5b14:	str	r8, [r6, #12]
    5b18:	str	r6, [r3, #8]
    5b1c:	bl	22e4 <malloc@plt>
    5b20:	cmp	r0, #0
    5b24:	mov	r7, r0
    5b28:	str	r0, [r6, #8]
    5b2c:	bne	5b6c <get_piconet@@Base+0x1a0>
    5b30:	mvn	r0, #0
    5b34:	bl	2338 <exit@plt>
    5b38:	ldr	r2, [r6, #32]
    5b3c:	cmp	r2, #4
    5b40:	bne	5b58 <get_piconet@@Base+0x18c>
    5b44:	mov	r1, r8
    5b48:	ldr	r0, [r6, #28]
    5b4c:	bl	21d0 <memcmp@plt>
    5b50:	cmp	r0, #0
    5b54:	beq	5e2c <get_piconet@@Base+0x460>
    5b58:	ldr	r6, [r6, #24]
    5b5c:	cmp	r6, #0
    5b60:	beq	5ab8 <get_piconet@@Base+0xec>
    5b64:	add	r6, r6, r7
    5b68:	b	5ab0 <get_piconet@@Base+0xe4>
    5b6c:	mov	r3, #32
    5b70:	mov	r1, r8
    5b74:	mov	r2, r3
    5b78:	add	r0, r0, #12
    5b7c:	bl	23e0 <memset@plt>
    5b80:	mov	r3, #32
    5b84:	mov	r0, #384	; 0x180
    5b88:	str	r3, [r7, #4]
    5b8c:	mov	r3, #5
    5b90:	str	r3, [r7, #8]
    5b94:	mov	r3, #8
    5b98:	str	r9, [r7, #16]
    5b9c:	str	r3, [r7, #20]
    5ba0:	bl	22e4 <malloc@plt>
    5ba4:	cmp	r0, #0
    5ba8:	str	r0, [r7]
    5bac:	beq	5b30 <get_piconet@@Base+0x164>
    5bb0:	mov	r2, #384	; 0x180
    5bb4:	mov	r1, r8
    5bb8:	bl	23e0 <memset@plt>
    5bbc:	ldr	r3, [pc, #652]	; 5e50 <get_piconet@@Base+0x484>
    5bc0:	str	r3, [r7, #40]	; 0x28
    5bc4:	ldr	r3, [pc, #648]	; 5e54 <get_piconet@@Base+0x488>
    5bc8:	mov	ip, #0
    5bcc:	add	r3, pc, r3
    5bd0:	ldr	r3, [r3, #8]
    5bd4:	ldr	r7, [r3, #8]
    5bd8:	ldr	r2, [r7, #12]
    5bdc:	add	r2, r2, #1
    5be0:	str	r2, [r7, #12]
    5be4:	ldrb	r2, [r6]
    5be8:	str	r7, [r6, #8]
    5bec:	ldrb	r1, [r6, #3]
    5bf0:	ldr	r3, [r3, #8]
    5bf4:	add	fp, r2, fp
    5bf8:	ldrb	r2, [r6, #2]
    5bfc:	add	fp, fp, r1, lsl #24
    5c00:	add	fp, fp, r2, lsl #16
    5c04:	ldrb	r2, [r6, #1]
    5c08:	add	fp, fp, r2, lsl #8
    5c0c:	eor	sl, sl, fp
    5c10:	sub	r5, r5, sl
    5c14:	sub	r2, r4, sl
    5c18:	eor	r5, r5, sl, lsl #8
    5c1c:	sub	r2, r2, r5
    5c20:	sub	sl, sl, r5
    5c24:	eor	r2, r2, r5, lsr #13
    5c28:	sub	sl, sl, r2
    5c2c:	sub	r1, r5, r2
    5c30:	eor	sl, sl, r2, lsr #12
    5c34:	sub	r1, r1, sl
    5c38:	sub	r2, r2, sl
    5c3c:	eor	r1, r1, sl, lsl #16
    5c40:	sub	r2, r2, r1
    5c44:	sub	sl, sl, r1
    5c48:	eor	r2, r2, r1, lsr #5
    5c4c:	sub	sl, sl, r2
    5c50:	sub	r1, r1, r2
    5c54:	eor	sl, sl, r2, lsr #3
    5c58:	sub	r1, r1, sl
    5c5c:	eor	r1, r1, sl, lsl #10
    5c60:	sub	sl, r2, sl
    5c64:	sub	sl, sl, r1
    5c68:	eor	sl, sl, r1, lsr #15
    5c6c:	ldm	r3, {r1, r2}
    5c70:	str	sl, [r6, #36]	; 0x24
    5c74:	sub	r2, r2, #1
    5c78:	and	r2, r2, sl
    5c7c:	mov	sl, #12
    5c80:	mul	sl, sl, r2
    5c84:	add	r3, r1, sl
    5c88:	ldr	r0, [r1, sl]
    5c8c:	ldr	r2, [r3, #4]
    5c90:	cmp	r0, ip
    5c94:	add	r2, r2, #1
    5c98:	str	r2, [r3, #4]
    5c9c:	str	ip, [r6, #20]
    5ca0:	str	r0, [r6, #24]
    5ca4:	strne	r9, [r0, #12]
    5ca8:	str	r9, [r1, sl]
    5cac:	ldr	r1, [r3, #8]
    5cb0:	mov	r3, #10
    5cb4:	mla	r3, r1, r3, r3
    5cb8:	cmp	r2, r3
    5cbc:	bcc	5d88 <get_piconet@@Base+0x3bc>
    5cc0:	ldr	r3, [r7, #36]	; 0x24
    5cc4:	cmp	r3, #1
    5cc8:	beq	5d88 <get_piconet@@Base+0x3bc>
    5ccc:	ldr	r2, [r7, #4]
    5cd0:	mov	r5, #24
    5cd4:	mul	r5, r5, r2
    5cd8:	mov	r0, r5
    5cdc:	bl	22e4 <malloc@plt>
    5ce0:	subs	r4, r0, #0
    5ce4:	beq	5b30 <get_piconet@@Base+0x164>
    5ce8:	mov	r2, r5
    5cec:	mov	r1, #0
    5cf0:	bl	23e0 <memset@plt>
    5cf4:	ldm	r7, {r0, fp}
    5cf8:	mov	sl, #12
    5cfc:	ldr	r3, [r7, #8]
    5d00:	ldr	r2, [r7, #12]
    5d04:	lsl	r5, fp, #1
    5d08:	sub	r5, r5, #1
    5d0c:	add	r3, r3, #1
    5d10:	tst	r2, r5
    5d14:	movne	lr, #1
    5d18:	moveq	lr, #0
    5d1c:	add	lr, lr, r2, lsr r3
    5d20:	mov	r3, #0
    5d24:	str	lr, [r7, #24]
    5d28:	str	r3, [r7, #28]
    5d2c:	cmp	fp, r3
    5d30:	bne	5db4 <get_piconet@@Base+0x3e8>
    5d34:	bl	2164 <free@plt>
    5d38:	ldr	r3, [r6, #8]
    5d3c:	ldr	r2, [r3, #4]
    5d40:	str	r4, [r3]
    5d44:	ldr	r1, [r3, #12]
    5d48:	lsl	r2, r2, #1
    5d4c:	str	r2, [r3, #4]
    5d50:	ldr	r2, [r3, #8]
    5d54:	add	r2, r2, #1
    5d58:	str	r2, [r3, #8]
    5d5c:	ldr	r2, [r3, #28]
    5d60:	cmp	r2, r1, lsr #1
    5d64:	movls	r2, #0
    5d68:	strls	r2, [r3, #32]
    5d6c:	bls	5d88 <get_piconet@@Base+0x3bc>
    5d70:	ldr	r2, [r3, #32]
    5d74:	add	r2, r2, #1
    5d78:	cmp	r2, #1
    5d7c:	str	r2, [r3, #32]
    5d80:	movhi	r2, #1
    5d84:	strhi	r2, [r3, #36]	; 0x24
    5d88:	ldr	r0, [sp, #4]
    5d8c:	add	sp, sp, #20
    5d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5d94:	ldr	r2, [r8, #8]
    5d98:	ldr	r3, [r2, #16]
    5d9c:	ldr	r1, [r2, #20]
    5da0:	str	r0, [r3, #8]
    5da4:	sub	r3, r3, r1
    5da8:	str	r3, [r0, #12]
    5dac:	str	r9, [r2, #16]
    5db0:	b	5bc4 <get_piconet@@Base+0x1f8>
    5db4:	mul	r2, sl, r3
    5db8:	ldr	r2, [r0, r2]
    5dbc:	cmp	r2, #0
    5dc0:	addeq	r3, r3, #1
    5dc4:	beq	5d2c <get_piconet@@Base+0x360>
    5dc8:	ldr	r1, [r2, #16]
    5dcc:	str	r1, [sp, #8]
    5dd0:	ldr	r1, [r2, #28]
    5dd4:	and	r1, r1, r5
    5dd8:	mul	r1, sl, r1
    5ddc:	add	r8, r4, r1
    5de0:	ldr	ip, [r8, #4]
    5de4:	add	ip, ip, #1
    5de8:	cmp	lr, ip
    5dec:	str	ip, [r8, #4]
    5df0:	bcs	5e08 <get_piconet@@Base+0x43c>
    5df4:	udiv	ip, ip, lr
    5df8:	ldr	r9, [r7, #28]
    5dfc:	add	r9, r9, #1
    5e00:	str	r9, [r7, #28]
    5e04:	str	ip, [r8, #8]
    5e08:	mov	ip, #0
    5e0c:	str	ip, [r2, #12]
    5e10:	ldr	ip, [r4, r1]
    5e14:	cmp	ip, #0
    5e18:	str	ip, [r2, #16]
    5e1c:	strne	r2, [ip, #12]
    5e20:	str	r2, [r4, r1]
    5e24:	ldr	r2, [sp, #8]
    5e28:	b	5dbc <get_piconet@@Base+0x3f0>
    5e2c:	ldr	r3, [r6, #4]
    5e30:	str	r3, [sp, #4]
    5e34:	b	5d88 <get_piconet@@Base+0x3bc>
    5e38:	andeq	r1, r2, ip, asr #15
    5e3c:	tsteq	r2, sp, lsl #2
    5e40:	andeq	pc, r7, sp, ror #14
    5e44:	svcls	0x0049bac6
    5e48:	mcr2	14, 7, fp, cr13, cr3, {7}
    5e4c:	andeq	r1, r2, r8, lsr #13
    5e50:	andsge	r1, r1, r1, ror #31
    5e54:	ldrdeq	r1, [r2], -ip

00005e58 <btbb_next_survey_result@@Base>:
    5e58:	ldr	r3, [pc, #40]	; 5e88 <btbb_next_survey_result@@Base+0x30>
    5e5c:	add	r3, pc, r3
    5e60:	ldr	r0, [r3, #8]
    5e64:	cmp	r0, #0
    5e68:	bxeq	lr
    5e6c:	push	{r4, lr}
    5e70:	ldr	r4, [r0, #4]
    5e74:	ldr	r2, [r0, #16]
    5e78:	str	r2, [r3, #8]
    5e7c:	bl	2164 <free@plt>
    5e80:	mov	r0, r4
    5e84:	pop	{r4, pc}
    5e88:	andeq	r1, r2, ip, asr #6

00005e8c <btbb_process_packet@@Base>:
    5e8c:	ldr	r3, [pc, #364]	; 6000 <btbb_process_packet@@Base+0x174>
    5e90:	push	{r4, r5, r6, r7, r8, lr}
    5e94:	mov	r4, r0
    5e98:	ldr	r7, [pc, r3]
    5e9c:	cmp	r7, #0
    5ea0:	beq	5ef8 <btbb_process_packet@@Base+0x6c>
    5ea4:	bl	2410 <btbb_packet_get_lap@plt>
    5ea8:	bl	2440 <get_piconet@plt>
    5eac:	ldrb	r1, [r4, #8]
    5eb0:	mov	r5, r0
    5eb4:	bl	2254 <btbb_piconet_set_channel_seen@plt>
    5eb8:	mov	r0, r4
    5ebc:	bl	2200 <btbb_header_present@plt>
    5ec0:	cmp	r0, #0
    5ec4:	bne	5ed4 <btbb_process_packet@@Base+0x48>
    5ec8:	mov	r6, #0
    5ecc:	mov	r0, r6
    5ed0:	pop	{r4, r5, r6, r7, r8, pc}
    5ed4:	mov	r1, #2
    5ed8:	mov	r0, r5
    5edc:	bl	220c <btbb_piconet_get_flag@plt>
    5ee0:	subs	r6, r0, #0
    5ee4:	moveq	r1, r5
    5ee8:	moveq	r0, r4
    5eec:	bne	5ec8 <btbb_process_packet@@Base+0x3c>
    5ef0:	bl	2194 <btbb_uap_from_header@plt>
    5ef4:	b	5ecc <btbb_process_packet@@Base+0x40>
    5ef8:	cmp	r1, #0
    5efc:	mov	r5, r1
    5f00:	beq	5ec8 <btbb_process_packet@@Base+0x3c>
    5f04:	ldrb	r1, [r0, #8]
    5f08:	mov	r0, r5
    5f0c:	bl	2254 <btbb_piconet_set_channel_seen@plt>
    5f10:	mov	r1, #3
    5f14:	mov	r0, r5
    5f18:	bl	220c <btbb_piconet_get_flag@plt>
    5f1c:	cmp	r0, #0
    5f20:	beq	5ec8 <btbb_process_packet@@Base+0x3c>
    5f24:	mov	r0, r4
    5f28:	bl	2200 <btbb_header_present@plt>
    5f2c:	cmp	r0, #0
    5f30:	beq	5ec8 <btbb_process_packet@@Base+0x3c>
    5f34:	mov	r1, #14
    5f38:	mov	r0, r5
    5f3c:	bl	220c <btbb_piconet_get_flag@plt>
    5f40:	subs	r6, r0, #0
    5f44:	mov	r0, r5
    5f48:	beq	5fa8 <btbb_process_packet@@Base+0x11c>
    5f4c:	bl	21c4 <btbb_piconet_get_uap@plt>
    5f50:	mov	r1, r0
    5f54:	mov	r0, r4
    5f58:	bl	226c <btbb_packet_set_uap@plt>
    5f5c:	mov	r2, #1
    5f60:	mov	r1, #4
    5f64:	mov	r0, r4
    5f68:	bl	214c <btbb_packet_set_flag@plt>
    5f6c:	mov	r2, #1
    5f70:	mov	r1, #5
    5f74:	mov	r0, r4
    5f78:	bl	214c <btbb_packet_set_flag@plt>
    5f7c:	mov	r0, r4
    5f80:	bl	22a8 <btbb_decode@plt>
    5f84:	subs	r6, r0, #0
    5f88:	beq	5f98 <btbb_process_packet@@Base+0x10c>
    5f8c:	mov	r0, r4
    5f90:	bl	24c4 <btbb_print_packet@plt>
    5f94:	b	5ec8 <btbb_process_packet@@Base+0x3c>
    5f98:	ldr	r0, [pc, #100]	; 6004 <btbb_process_packet@@Base+0x178>
    5f9c:	add	r0, pc, r0
    5fa0:	bl	22d8 <puts@plt>
    5fa4:	b	5ecc <btbb_process_packet@@Base+0x40>
    5fa8:	bl	21c4 <btbb_piconet_get_uap@plt>
    5fac:	cmp	r0, #0
    5fb0:	mov	r1, r5
    5fb4:	mov	r0, r4
    5fb8:	beq	5ef0 <btbb_process_packet@@Base+0x64>
    5fbc:	bl	22f0 <try_hop@plt>
    5fc0:	mov	r1, #4
    5fc4:	mov	r0, r5
    5fc8:	bl	220c <btbb_piconet_get_flag@plt>
    5fcc:	cmp	r0, #0
    5fd0:	beq	5ec8 <btbb_process_packet@@Base+0x3c>
    5fd4:	mov	r1, #5
    5fd8:	mov	r0, r5
    5fdc:	bl	220c <btbb_piconet_get_flag@plt>
    5fe0:	cmp	r0, #0
    5fe4:	beq	5ec8 <btbb_process_packet@@Base+0x3c>
    5fe8:	mov	r2, #1
    5fec:	mov	r1, #14
    5ff0:	mov	r0, r5
    5ff4:	mvn	r6, #0
    5ff8:	bl	2230 <btbb_piconet_set_flag@plt>
    5ffc:	b	5ecc <btbb_process_packet@@Base+0x40>
    6000:	andeq	r1, r2, r0, lsl r3
    6004:	andeq	fp, r0, r0, asr #5
    6008:	push	{r4, r5, r6, r7, r8, lr}
    600c:	mov	r6, r2
    6010:	mov	r4, r1
    6014:	mov	r7, r3
    6018:	add	r3, r2, #5
    601c:	add	r5, r1, r3
    6020:	add	r4, r4, r6
    6024:	ldrb	r2, [r1, r3]
    6028:	mov	r1, r0
    602c:	ldr	r6, [pc, #76]	; 6080 <btbb_process_packet@@Base+0x1f4>
    6030:	ldr	r0, [pc, #76]	; 6084 <btbb_process_packet@@Base+0x1f8>
    6034:	add	r6, pc, r6
    6038:	add	r0, pc, r0
    603c:	bl	211c <printf@plt>
    6040:	ldrb	r1, [r5, #-1]!
    6044:	mov	r0, r6
    6048:	bl	211c <printf@plt>
    604c:	cmp	r5, r4
    6050:	bne	6040 <btbb_process_packet@@Base+0x1b4>
    6054:	cmp	r7, #0
    6058:	bne	6074 <btbb_process_packet@@Base+0x1e8>
    605c:	ldr	r1, [pc, #36]	; 6088 <btbb_process_packet@@Base+0x1fc>
    6060:	add	r1, pc, r1
    6064:	ldr	r0, [pc, #32]	; 608c <btbb_process_packet@@Base+0x200>
    6068:	pop	{r4, r5, r6, r7, r8, lr}
    606c:	add	r0, pc, r0
    6070:	b	211c <printf@plt>
    6074:	ldr	r1, [pc, #20]	; 6090 <btbb_process_packet@@Base+0x204>
    6078:	add	r1, pc, r1
    607c:	b	6064 <btbb_process_packet@@Base+0x1d8>
    6080:	muleq	r0, r9, r4
    6084:	andeq	fp, r0, sl, lsl #9
    6088:	andeq	fp, r0, fp, asr r4
    608c:	andeq	fp, r0, r7, ror #8
    6090:	andeq	fp, r0, ip, lsr r4
    6094:	add	r3, r1, r2
    6098:	ldrb	ip, [r3, #1]
    609c:	ldrb	r3, [r1, r2]
    60a0:	mov	r1, r0
    60a4:	ldr	r0, [pc, #12]	; 60b8 <btbb_process_packet@@Base+0x22c>
    60a8:	orr	r3, r3, ip, lsl #8
    60ac:	add	r0, pc, r0
    60b0:	mov	r2, r3
    60b4:	b	211c <printf@plt>
    60b8:	andeq	fp, r0, lr, lsr #8
    60bc:	ldr	r3, [pc, #988]	; 64a0 <btbb_process_packet@@Base+0x614>
    60c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    60c4:	mov	r6, r0
    60c8:	mov	sl, r1
    60cc:	mov	r9, #0
    60d0:	vpush	{d8}
    60d4:	sub	sp, sp, #36	; 0x24
    60d8:	vldr	d8, [pc, #952]	; 6498 <btbb_process_packet@@Base+0x60c>
    60dc:	add	r3, pc, r3
    60e0:	str	r3, [sp, #4]
    60e4:	cmp	r9, sl
    60e8:	blt	60f8 <btbb_process_packet@@Base+0x26c>
    60ec:	add	sp, sp, #36	; 0x24
    60f0:	vpop	{d8}
    60f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    60f8:	ldrb	r5, [r6, r9]
    60fc:	add	r1, r9, #1
    6100:	mov	r4, r9
    6104:	add	r8, r6, r9
    6108:	add	r9, r5, r1
    610c:	cmp	r9, sl
    6110:	ble	6134 <btbb_process_packet@@Base+0x2a8>
    6114:	ldr	r0, [pc, #904]	; 64a4 <btbb_process_packet@@Base+0x618>
    6118:	mov	r3, sl
    611c:	mov	r2, r5
    6120:	add	r0, pc, r0
    6124:	add	sp, sp, #36	; 0x24
    6128:	vpop	{d8}
    612c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6130:	b	211c <printf@plt>
    6134:	cmp	r5, #0
    6138:	bne	6154 <btbb_process_packet@@Base+0x2c8>
    613c:	ldr	r0, [pc, #868]	; 64a8 <btbb_process_packet@@Base+0x61c>
    6140:	add	r0, pc, r0
    6144:	add	sp, sp, #36	; 0x24
    6148:	vpop	{d8}
    614c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6150:	b	22d8 <puts@plt>
    6154:	ldrb	r7, [r6, r1]
    6158:	ldr	r0, [pc, #844]	; 64ac <btbb_process_packet@@Base+0x620>
    615c:	mov	r1, r7
    6160:	add	r0, pc, r0
    6164:	bl	211c <printf@plt>
    6168:	cmp	r7, #7
    616c:	beq	6594 <btbb_process_packet@@Base+0x708>
    6170:	bhi	630c <btbb_process_packet@@Base+0x480>
    6174:	cmp	r7, #2
    6178:	beq	654c <btbb_process_packet@@Base+0x6c0>
    617c:	bhi	61cc <btbb_process_packet@@Base+0x340>
    6180:	cmp	r7, #1
    6184:	beq	63fc <btbb_process_packet@@Base+0x570>
    6188:	mov	r0, #10
    618c:	ldr	r8, [pc, #796]	; 64b0 <btbb_process_packet@@Base+0x624>
    6190:	add	r4, r4, #1
    6194:	bl	23ec <putchar@plt>
    6198:	ldr	r0, [pc, #788]	; 64b4 <btbb_process_packet@@Base+0x628>
    619c:	add	r4, r6, r4
    61a0:	mov	r7, #1
    61a4:	add	r8, pc, r8
    61a8:	add	r0, pc, r0
    61ac:	bl	211c <printf@plt>
    61b0:	cmp	r7, r5
    61b4:	bge	648c <btbb_process_packet@@Base+0x600>
    61b8:	ldrb	r1, [r4, #1]!
    61bc:	mov	r0, r8
    61c0:	add	r7, r7, #1
    61c4:	bl	211c <printf@plt>
    61c8:	b	61b0 <btbb_process_packet@@Base+0x324>
    61cc:	cmp	r7, #3
    61d0:	beq	6588 <btbb_process_packet@@Base+0x6fc>
    61d4:	cmp	r7, #6
    61d8:	bne	6188 <btbb_process_packet@@Base+0x2fc>
    61dc:	ldr	r0, [pc, #724]	; 64b8 <btbb_process_packet@@Base+0x62c>
    61e0:	add	r0, pc, r0
    61e4:	sub	r5, r5, #1
    61e8:	bl	22d8 <puts@plt>
    61ec:	ands	r8, r5, #15
    61f0:	bne	65a0 <btbb_process_packet@@Base+0x714>
    61f4:	ldr	r7, [pc, #704]	; 64bc <btbb_process_packet@@Base+0x630>
    61f8:	add	r4, r4, #1
    61fc:	add	r4, r6, r4
    6200:	ldr	fp, [pc, #696]	; 64c0 <btbb_process_packet@@Base+0x634>
    6204:	add	r7, pc, r7
    6208:	add	fp, pc, fp
    620c:	cmp	r5, r8
    6210:	ble	60e4 <btbb_process_packet@@Base+0x258>
    6214:	ldrb	r1, [r4, #1]!
    6218:	and	r3, r8, #15
    621c:	add	r0, sp, #16
    6220:	mvn	r2, r3
    6224:	cmp	r3, #15
    6228:	add	r2, r2, #16
    622c:	strb	r1, [r0, r2]
    6230:	bne	6304 <btbb_process_packet@@Base+0x478>
    6234:	ldr	r0, [sp, #4]
    6238:	bl	211c <printf@plt>
    623c:	ldrb	r1, [sp, #16]
    6240:	mov	r0, r7
    6244:	bl	211c <printf@plt>
    6248:	ldrb	r1, [sp, #17]
    624c:	mov	r0, r7
    6250:	bl	211c <printf@plt>
    6254:	ldrb	r1, [sp, #18]
    6258:	mov	r0, r7
    625c:	bl	211c <printf@plt>
    6260:	ldrb	r1, [sp, #19]
    6264:	mov	r0, r7
    6268:	bl	211c <printf@plt>
    626c:	mov	r0, #45	; 0x2d
    6270:	bl	23ec <putchar@plt>
    6274:	ldrb	r1, [sp, #20]
    6278:	mov	r0, r7
    627c:	bl	211c <printf@plt>
    6280:	ldrb	r1, [sp, #21]
    6284:	mov	r0, r7
    6288:	bl	211c <printf@plt>
    628c:	mov	r0, #45	; 0x2d
    6290:	bl	23ec <putchar@plt>
    6294:	ldrb	r1, [sp, #22]
    6298:	mov	r0, r7
    629c:	bl	211c <printf@plt>
    62a0:	ldrb	r1, [sp, #23]
    62a4:	mov	r0, r7
    62a8:	bl	211c <printf@plt>
    62ac:	mov	r0, #45	; 0x2d
    62b0:	bl	23ec <putchar@plt>
    62b4:	ldrb	r1, [sp, #24]
    62b8:	mov	r0, r7
    62bc:	bl	211c <printf@plt>
    62c0:	ldrb	r1, [sp, #25]
    62c4:	mov	r0, r7
    62c8:	bl	211c <printf@plt>
    62cc:	mov	r0, #45	; 0x2d
    62d0:	bl	23ec <putchar@plt>
    62d4:	mov	r3, #10
    62d8:	add	r2, sp, #16
    62dc:	ldrb	r1, [r2, r3]
    62e0:	mov	r0, fp
    62e4:	strd	r2, [sp, #8]
    62e8:	bl	211c <printf@plt>
    62ec:	ldrd	r2, [sp, #8]
    62f0:	add	r3, r3, #1
    62f4:	cmp	r3, #16
    62f8:	bne	62dc <btbb_process_packet@@Base+0x450>
    62fc:	mov	r0, #10
    6300:	bl	23ec <putchar@plt>
    6304:	add	r8, r8, #1
    6308:	b	620c <btbb_process_packet@@Base+0x380>
    630c:	cmp	r7, #18
    6310:	beq	661c <btbb_process_packet@@Base+0x790>
    6314:	bhi	635c <btbb_process_packet@@Base+0x4d0>
    6318:	cmp	r7, #9
    631c:	beq	65b4 <btbb_process_packet@@Base+0x728>
    6320:	cmp	r7, #10
    6324:	bne	6188 <btbb_process_packet@@Base+0x2fc>
    6328:	ldr	r0, [pc, #404]	; 64c4 <btbb_process_packet@@Base+0x638>
    632c:	add	r0, pc, r0
    6330:	bl	22d8 <puts@plt>
    6334:	ldr	r0, [pc, #396]	; 64c8 <btbb_process_packet@@Base+0x63c>
    6338:	add	r0, pc, r0
    633c:	bl	211c <printf@plt>
    6340:	cmp	r5, #2
    6344:	bne	660c <btbb_process_packet@@Base+0x780>
    6348:	ldr	r0, [pc, #380]	; 64cc <btbb_process_packet@@Base+0x640>
    634c:	add	r4, r6, r4
    6350:	ldrb	r1, [r4, #2]
    6354:	add	r0, pc, r0
    6358:	b	65ac <btbb_process_packet@@Base+0x720>
    635c:	cmp	r7, #22
    6360:	beq	66a4 <btbb_process_packet@@Base+0x818>
    6364:	cmp	r7, #255	; 0xff
    6368:	bne	6188 <btbb_process_packet@@Base+0x2fc>
    636c:	ldr	r0, [pc, #348]	; 64d0 <btbb_process_packet@@Base+0x644>
    6370:	add	r0, pc, r0
    6374:	bl	22d8 <puts@plt>
    6378:	ldr	r0, [pc, #340]	; 64d4 <btbb_process_packet@@Base+0x648>
    637c:	add	r0, pc, r0
    6380:	bl	211c <printf@plt>
    6384:	cmp	r5, #2
    6388:	ble	6738 <btbb_process_packet@@Base+0x8ac>
    638c:	add	r3, r4, #3
    6390:	add	r4, r6, r4
    6394:	ldr	r8, [pc, #316]	; 64d8 <btbb_process_packet@@Base+0x64c>
    6398:	add	r7, r6, r3
    639c:	ldrb	r2, [r4, #2]
    63a0:	mov	r4, r7
    63a4:	mov	r7, #3
    63a8:	ldrb	r0, [r6, r3]
    63ac:	add	r8, pc, r8
    63b0:	orr	r0, r2, r0, lsl #8
    63b4:	bl	2428 <bt_compidtostr@plt>
    63b8:	mov	r1, r0
    63bc:	ldr	r0, [pc, #280]	; 64dc <btbb_process_packet@@Base+0x650>
    63c0:	add	r0, pc, r0
    63c4:	bl	211c <printf@plt>
    63c8:	ldr	r0, [pc, #272]	; 64e0 <btbb_process_packet@@Base+0x654>
    63cc:	add	r0, pc, r0
    63d0:	bl	211c <printf@plt>
    63d4:	ldr	r0, [pc, #264]	; 64e4 <btbb_process_packet@@Base+0x658>
    63d8:	add	r0, pc, r0
    63dc:	bl	211c <printf@plt>
    63e0:	cmp	r7, r5
    63e4:	bge	648c <btbb_process_packet@@Base+0x600>
    63e8:	ldrb	r1, [r4, #1]!
    63ec:	mov	r0, r8
    63f0:	add	r7, r7, #1
    63f4:	bl	211c <printf@plt>
    63f8:	b	63e0 <btbb_process_packet@@Base+0x554>
    63fc:	ldr	r0, [pc, #228]	; 64e8 <btbb_process_packet@@Base+0x65c>
    6400:	add	r4, r4, #2
    6404:	mov	r5, #7
    6408:	add	r4, r6, r4
    640c:	ldr	r7, [pc, #216]	; 64ec <btbb_process_packet@@Base+0x660>
    6410:	add	r0, pc, r0
    6414:	bl	22d8 <puts@plt>
    6418:	ldr	r0, [pc, #208]	; 64f0 <btbb_process_packet@@Base+0x664>
    641c:	add	r7, pc, r7
    6420:	add	r0, pc, r0
    6424:	bl	211c <printf@plt>
    6428:	ldrb	r1, [r4]
    642c:	mov	r0, r7
    6430:	asr	r1, r1, r5
    6434:	and	r1, r1, #1
    6438:	bl	211c <printf@plt>
    643c:	subs	r5, r5, #1
    6440:	bcs	6428 <btbb_process_packet@@Base+0x59c>
    6444:	ldr	r8, [pc, #168]	; 64f4 <btbb_process_packet@@Base+0x668>
    6448:	mov	r0, #10
    644c:	mov	r5, #0
    6450:	bl	23ec <putchar@plt>
    6454:	ldr	r7, [pc, #156]	; 64f8 <btbb_process_packet@@Base+0x66c>
    6458:	add	r8, pc, r8
    645c:	add	r7, pc, r7
    6460:	ldrb	r3, [r4]
    6464:	asr	r3, r3, r5
    6468:	tst	r3, #1
    646c:	beq	6480 <btbb_process_packet@@Base+0x5f4>
    6470:	mov	r0, r8
    6474:	bl	211c <printf@plt>
    6478:	ldr	r0, [r7, r5, lsl #2]
    647c:	bl	22d8 <puts@plt>
    6480:	add	r5, r5, #1
    6484:	cmp	r5, #8
    6488:	bne	6460 <btbb_process_packet@@Base+0x5d4>
    648c:	mov	r0, #10
    6490:	bl	23ec <putchar@plt>
    6494:	b	60e4 <btbb_process_packet@@Base+0x258>
    6498:	andeq	r0, r0, r0
    649c:	svccc	0x00f40000
    64a0:	andeq	fp, r0, r8, lsl #9
    64a4:	andeq	fp, r0, fp, asr #7
    64a8:	andeq	fp, r0, r5, ror #7
    64ac:	andeq	fp, r0, r2, ror #7
    64b0:	andeq	fp, r0, r9, asr #10
    64b4:			; <UNDEFINED> instruction: 0x0000b3bc
    64b8:	andeq	fp, r0, r2, ror #7
    64bc:	andeq	fp, r0, sl, ror #9
    64c0:	andeq	fp, r0, r6, ror #9
    64c4:	andeq	fp, r0, fp, lsl r3
    64c8:	andeq	fp, r0, ip, lsr #4
    64cc:	andeq	fp, r0, r5, lsl #6
    64d0:			; <UNDEFINED> instruction: 0x0000b3b4
    64d4:	andeq	fp, r0, r8, ror #3
    64d8:	andeq	fp, r0, r1, asr #6
    64dc:	andeq	fp, r0, r2, lsl #7
    64e0:	muleq	r0, r8, r1
    64e4:	andeq	fp, r0, fp, ror #8
    64e8:	andeq	fp, r0, r4, asr #2
    64ec:	andeq	fp, r0, r1, asr #2
    64f0:	andeq	fp, r0, r4, asr #2
    64f4:	andeq	fp, r0, r8, lsl #2
    64f8:	strdeq	r0, [r2], -r4
    64fc:	andeq	fp, r0, r0, lsr #32
    6500:	andeq	fp, r0, r9, asr #32
    6504:	andeq	fp, r0, ip
    6508:	andeq	fp, r0, r3, asr r0
    650c:	andeq	fp, r0, ip, asr r0
    6510:	andeq	fp, r0, ip, rrx
    6514:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    6518:	andeq	fp, r0, sp, asr #32
    651c:	andeq	fp, r0, r1, rrx
    6520:	andeq	sl, r0, r8, lsr pc
    6524:	andeq	fp, r0, r8, asr r0
    6528:	andeq	fp, r0, r5, lsr r0
    652c:	andeq	fp, r0, ip, lsl r0
    6530:	andeq	fp, r0, r0, lsr r0
    6534:			; <UNDEFINED> instruction: 0x0000aeb0
    6538:	andeq	fp, r0, ip
    653c:	strdeq	sl, [r0], -r3
    6540:	andeq	sl, r0, r5, ror #31
    6544:	ldrdeq	sl, [r0], -r1
    6548:	andeq	sl, r0, r1, asr #31
    654c:	ldr	r0, [pc, #-88]	; 64fc <btbb_process_packet@@Base+0x670>
    6550:	add	r0, pc, r0
    6554:	sub	r5, r5, #1
    6558:	bl	22d8 <puts@plt>
    655c:	ands	r4, r5, #1
    6560:	bne	60e4 <btbb_process_packet@@Base+0x258>
    6564:	ldr	r7, [pc, #-108]	; 6500 <btbb_process_packet@@Base+0x674>
    6568:	add	r7, pc, r7
    656c:	cmp	r5, r4
    6570:	ble	60e4 <btbb_process_packet@@Base+0x258>
    6574:	ldrh	r1, [r8, #2]!
    6578:	mov	r0, r7
    657c:	add	r4, r4, #2
    6580:	bl	211c <printf@plt>
    6584:	b	656c <btbb_process_packet@@Base+0x6e0>
    6588:	ldr	r0, [pc, #-140]	; 6504 <btbb_process_packet@@Base+0x678>
    658c:	add	r0, pc, r0
    6590:	b	6554 <btbb_process_packet@@Base+0x6c8>
    6594:	ldr	r0, [pc, #-148]	; 6508 <btbb_process_packet@@Base+0x67c>
    6598:	add	r0, pc, r0
    659c:	b	61e4 <btbb_process_packet@@Base+0x358>
    65a0:	ldr	r0, [pc, #-156]	; 650c <btbb_process_packet@@Base+0x680>
    65a4:	mov	r1, r5
    65a8:	add	r0, pc, r0
    65ac:	bl	211c <printf@plt>
    65b0:	b	60e4 <btbb_process_packet@@Base+0x258>
    65b4:	ldr	r0, [pc, #-172]	; 6510 <btbb_process_packet@@Base+0x684>
    65b8:	add	r4, r4, #1
    65bc:	mov	r7, #1
    65c0:	add	r4, r6, r4
    65c4:	add	r0, pc, r0
    65c8:	bl	22d8 <puts@plt>
    65cc:	ldr	r0, [pc, #-192]	; 6514 <btbb_process_packet@@Base+0x688>
    65d0:	add	r0, pc, r0
    65d4:	bl	211c <printf@plt>
    65d8:	cmp	r7, r5
    65dc:	bge	648c <btbb_process_packet@@Base+0x600>
    65e0:	bl	232c <__ctype_b_loc@plt>
    65e4:	ldrb	r3, [r4, #1]!
    65e8:	add	r7, r7, #1
    65ec:	ldr	r1, [r0]
    65f0:	lsl	r2, r3, #1
    65f4:	ldrh	r2, [r1, r2]
    65f8:	tst	r2, #16384	; 0x4000
    65fc:	movne	r0, r3
    6600:	moveq	r0, #46	; 0x2e
    6604:	bl	23ec <putchar@plt>
    6608:	b	65d8 <btbb_process_packet@@Base+0x74c>
    660c:	ldr	r0, [pc, #-252]	; 6518 <btbb_process_packet@@Base+0x68c>
    6610:	sub	r1, r5, #1
    6614:	add	r0, pc, r0
    6618:	b	65ac <btbb_process_packet@@Base+0x720>
    661c:	ldr	r0, [pc, #-264]	; 651c <btbb_process_packet@@Base+0x690>
    6620:	add	r0, pc, r0
    6624:	bl	22d8 <puts@plt>
    6628:	ldr	r0, [pc, #-272]	; 6520 <btbb_process_packet@@Base+0x694>
    662c:	add	r0, pc, r0
    6630:	bl	211c <printf@plt>
    6634:	cmp	r5, #5
    6638:	bne	6694 <btbb_process_packet@@Base+0x808>
    663c:	add	r4, r6, r4
    6640:	ldr	r0, [pc, #-292]	; 6524 <btbb_process_packet@@Base+0x698>
    6644:	ldrb	r2, [r4, #3]
    6648:	ldrb	r3, [r4, #2]
    664c:	add	r0, pc, r0
    6650:	orr	r3, r3, r2, lsl #8
    6654:	vmov	s15, r3
    6658:	vcvt.f64.s32	d7, s15
    665c:	vmul.f64	d7, d7, d8
    6660:	vmov	r2, r3, d7
    6664:	bl	211c <printf@plt>
    6668:	ldrb	r2, [r4, #5]
    666c:	ldrb	r3, [r4, #4]
    6670:	ldr	r0, [pc, #-336]	; 6528 <btbb_process_packet@@Base+0x69c>
    6674:	orr	r3, r3, r2, lsl #8
    6678:	add	r0, pc, r0
    667c:	vmov	s15, r3
    6680:	vcvt.f64.s32	d7, s15
    6684:	vmul.f64	d7, d7, d8
    6688:	vmov	r2, r3, d7
    668c:	bl	211c <printf@plt>
    6690:	b	60e4 <btbb_process_packet@@Base+0x258>
    6694:	ldr	r0, [pc, #-368]	; 652c <btbb_process_packet@@Base+0x6a0>
    6698:	sub	r1, r5, #1
    669c:	add	r0, pc, r0
    66a0:	b	65ac <btbb_process_packet@@Base+0x720>
    66a4:	ldr	r0, [pc, #-380]	; 6530 <btbb_process_packet@@Base+0x6a4>
    66a8:	add	r0, pc, r0
    66ac:	bl	22d8 <puts@plt>
    66b0:	ldr	r0, [pc, #-388]	; 6534 <btbb_process_packet@@Base+0x6a8>
    66b4:	add	r0, pc, r0
    66b8:	bl	211c <printf@plt>
    66bc:	cmp	r5, #2
    66c0:	ble	6728 <btbb_process_packet@@Base+0x89c>
    66c4:	add	r3, r4, #3
    66c8:	add	r4, r6, r4
    66cc:	ldr	r0, [pc, #-412]	; 6538 <btbb_process_packet@@Base+0x6ac>
    66d0:	add	r7, r6, r3
    66d4:	ldrb	r2, [r4, #2]
    66d8:	ldrb	r1, [r6, r3]
    66dc:	add	r0, pc, r0
    66e0:	orr	r1, r2, r1, lsl #8
    66e4:	bl	211c <printf@plt>
    66e8:	cmp	r5, #3
    66ec:	beq	648c <btbb_process_packet@@Base+0x600>
    66f0:	ldr	r0, [pc, #-444]	; 653c <btbb_process_packet@@Base+0x6b0>
    66f4:	mov	r4, r7
    66f8:	mov	r7, #3
    66fc:	ldr	r8, [pc, #-452]	; 6540 <btbb_process_packet@@Base+0x6b4>
    6700:	add	r0, pc, r0
    6704:	bl	211c <printf@plt>
    6708:	add	r8, pc, r8
    670c:	ldrb	r1, [r4, #1]!
    6710:	mov	r0, r8
    6714:	add	r7, r7, #1
    6718:	bl	211c <printf@plt>
    671c:	cmp	r5, r7
    6720:	bgt	670c <btbb_process_packet@@Base+0x880>
    6724:	b	648c <btbb_process_packet@@Base+0x600>
    6728:	ldr	r0, [pc, #-492]	; 6544 <btbb_process_packet@@Base+0x6b8>
    672c:	sub	r1, r5, #1
    6730:	add	r0, pc, r0
    6734:	b	65ac <btbb_process_packet@@Base+0x720>
    6738:	ldr	r0, [pc, #-504]	; 6548 <btbb_process_packet@@Base+0x6bc>
    673c:	sub	r1, r5, #1
    6740:	add	r0, pc, r0
    6744:	b	65ac <btbb_process_packet@@Base+0x720>
    6748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    674c:	sub	sp, sp, #580	; 0x244
    6750:	mov	r4, r0
    6754:	uxtb	r5, r0
    6758:	mov	r2, #256	; 0x100
    675c:	add	r0, sp, #64	; 0x40
    6760:	mov	r9, sp
    6764:	ldr	r6, [pc, #872]	; 6ad4 <btbb_process_packet@@Base+0xc48>
    6768:	add	r6, pc, r6
    676c:	mov	r1, r6
    6770:	bl	2188 <memcpy@plt>
    6774:	mov	r2, #256	; 0x100
    6778:	add	r0, sp, #320	; 0x140
    677c:	add	r1, r6, r2
    6780:	bl	2188 <memcpy@plt>
    6784:	lsr	r1, r4, #8
    6788:	add	r3, sp, #576	; 0x240
    678c:	tst	r4, #1
    6790:	add	r3, r3, r5
    6794:	add	r2, sp, #576	; 0x240
    6798:	lsr	ip, r4, #16
    679c:	ldrbne	r0, [r3, #-256]	; 0xffffff00
    67a0:	uxtb	r6, ip
    67a4:	ldrbeq	r0, [r3, #-512]	; 0xfffffe00
    67a8:	uxtb	r3, r1
    67ac:	tst	r4, #128	; 0x80
    67b0:	add	r2, r2, r3
    67b4:	ldrbne	r2, [r2, #-256]	; 0xffffff00
    67b8:	ldrbeq	r2, [r2, #-512]	; 0xfffffe00
    67bc:	tst	r1, #128	; 0x80
    67c0:	add	r1, sp, #576	; 0x240
    67c4:	add	r1, r1, r6
    67c8:	add	r2, r0, r2
    67cc:	ldrbne	r0, [r1, #-256]	; 0xffffff00
    67d0:	ldrbeq	r0, [r1, #-512]	; 0xfffffe00
    67d4:	lsr	r1, r4, #24
    67d8:	tst	ip, #128	; 0x80
    67dc:	uxtb	lr, r1
    67e0:	add	r2, r0, r2
    67e4:	add	r0, sp, #576	; 0x240
    67e8:	add	r1, r0, r1
    67ec:	ldrbne	r0, [r1, #-256]	; 0xffffff00
    67f0:	ldrbeq	r0, [r1, #-512]	; 0xfffffe00
    67f4:	ldr	r1, [pc, #732]	; 6ad8 <btbb_process_packet@@Base+0xc4c>
    67f8:	add	r0, r0, r2
    67fc:	cmp	r0, #24
    6800:	add	r1, pc, r1
    6804:	subgt	r2, r0, #24
    6808:	movle	r2, #0
    680c:	add	ip, r1, #512	; 0x200
    6810:	add	r7, r1, #576	; 0x240
    6814:	ldr	r0, [ip]
    6818:	mov	r8, r9
    681c:	add	ip, ip, #8
    6820:	ldr	r1, [ip, #-4]
    6824:	cmp	ip, r7
    6828:	stmia	r8!, {r0, r1}
    682c:	mov	r9, r8
    6830:	bne	6814 <btbb_process_packet@@Base+0x988>
    6834:	add	r1, sp, #576	; 0x240
    6838:	cmp	r5, r3
    683c:	cmpeq	r5, r6
    6840:	add	r1, r1, lr, lsr #2
    6844:	mov	r3, #0
    6848:	ldrb	r0, [r1, #-576]	; 0xfffffdc0
    684c:	rsb	r0, r0, #1
    6850:	add	r2, r0, r2
    6854:	moveq	r0, #1
    6858:	movne	r0, #0
    685c:	cmp	r5, lr
    6860:	movne	r0, #0
    6864:	andeq	r0, r0, #1
    6868:	add	r0, r0, r2
    686c:	ldr	r2, [pc, #616]	; 6adc <btbb_process_packet@@Base+0xc50>
    6870:	cmp	r4, r2
    6874:	addeq	r0, r0, #1
    6878:	eor	r2, r2, r4
    687c:	cmp	r2, #0
    6880:	uxtb	r1, r3
    6884:	add	r3, r3, #1
    6888:	bne	6910 <btbb_process_packet@@Base+0xa84>
    688c:	cmp	r1, #1
    6890:	addeq	r0, r0, #1
    6894:	movw	ip, #3587	; 0xe03
    6898:	movw	r1, #1793	; 0x701
    689c:	movw	lr, #3580	; 0xdfc
    68a0:	movw	r5, #3326	; 0xcfe
    68a4:	movw	r6, #3329	; 0xd01
    68a8:	movw	r7, #2563	; 0xa03
    68ac:	movw	r8, #2036	; 0x7f4
    68b0:	movw	r9, #1790	; 0x6fe
    68b4:	movw	sl, #769	; 0x301
    68b8:	lsr	r3, r4, r2
    68bc:	ubfx	r3, r3, #0, #12
    68c0:	cmp	r3, r1
    68c4:	bhi	69d4 <btbb_process_packet@@Base+0xb48>
    68c8:	cmp	r3, r9
    68cc:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    68d0:	cmp	r3, sl
    68d4:	bhi	6950 <btbb_process_packet@@Base+0xac4>
    68d8:	movw	fp, #766	; 0x2fe
    68dc:	cmp	r3, fp
    68e0:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    68e4:	movw	fp, #257	; 0x101
    68e8:	cmp	r3, fp
    68ec:	bhi	691c <btbb_process_packet@@Base+0xa90>
    68f0:	cmp	r3, #254	; 0xfe
    68f4:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    68f8:	cmp	r3, #31
    68fc:	bls	6934 <btbb_process_packet@@Base+0xaa8>
    6900:	sub	r3, r3, #127	; 0x7f
    6904:	cmp	r3, #1
    6908:	bhi	6a14 <btbb_process_packet@@Base+0xb88>
    690c:	b	6934 <btbb_process_packet@@Base+0xaa8>
    6910:	sub	r1, r2, #1
    6914:	and	r2, r2, r1
    6918:	b	687c <btbb_process_packet@@Base+0x9f0>
    691c:	cmp	r3, #512	; 0x200
    6920:	bcs	693c <btbb_process_packet@@Base+0xab0>
    6924:	cmp	r3, #508	; 0x1fc
    6928:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    692c:	cmp	r3, #384	; 0x180
    6930:	bne	6a14 <btbb_process_packet@@Base+0xb88>
    6934:	add	r0, r0, #1
    6938:	b	6a14 <btbb_process_packet@@Base+0xb88>
    693c:	bls	6a14 <btbb_process_packet@@Base+0xb88>
    6940:	cmp	r3, #516	; 0x204
    6944:	bcc	6934 <btbb_process_packet@@Base+0xaa8>
    6948:	cmp	r3, #640	; 0x280
    694c:	b	6930 <btbb_process_packet@@Base+0xaa4>
    6950:	movw	fp, #1281	; 0x501
    6954:	cmp	r3, fp
    6958:	bhi	69a0 <btbb_process_packet@@Base+0xb14>
    695c:	movw	fp, #1278	; 0x4fe
    6960:	cmp	r3, fp
    6964:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    6968:	cmp	r3, #1024	; 0x400
    696c:	bhi	6980 <btbb_process_packet@@Base+0xaf4>
    6970:	cmp	r3, #1016	; 0x3f8
    6974:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    6978:	cmp	r3, #896	; 0x380
    697c:	b	6930 <btbb_process_packet@@Base+0xaa4>
    6980:	movw	fp, #1026	; 0x402
    6984:	cmp	r3, fp
    6988:	bcc	6a14 <btbb_process_packet@@Base+0xb88>
    698c:	movw	fp, #1031	; 0x407
    6990:	cmp	r3, fp
    6994:	bls	6934 <btbb_process_packet@@Base+0xaa8>
    6998:	cmp	r3, #1152	; 0x480
    699c:	b	6930 <btbb_process_packet@@Base+0xaa4>
    69a0:	cmp	r3, #1536	; 0x600
    69a4:	bcs	69bc <btbb_process_packet@@Base+0xb30>
    69a8:	movw	fp, #1532	; 0x5fc
    69ac:	cmp	r3, fp
    69b0:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    69b4:	cmp	r3, #1408	; 0x580
    69b8:	b	6930 <btbb_process_packet@@Base+0xaa4>
    69bc:	bls	6a14 <btbb_process_packet@@Base+0xb88>
    69c0:	movw	fp, #1539	; 0x603
    69c4:	cmp	r3, fp
    69c8:	bls	6934 <btbb_process_packet@@Base+0xaa8>
    69cc:	cmp	r3, #1664	; 0x680
    69d0:	b	6930 <btbb_process_packet@@Base+0xaa4>
    69d4:	cmp	r3, #2944	; 0xb80
    69d8:	beq	6934 <btbb_process_packet@@Base+0xaa8>
    69dc:	bhi	6a60 <btbb_process_packet@@Base+0xbd4>
    69e0:	cmp	r3, #2432	; 0x980
    69e4:	beq	6934 <btbb_process_packet@@Base+0xaa8>
    69e8:	bhi	6a28 <btbb_process_packet@@Base+0xb9c>
    69ec:	cmp	r3, #2064	; 0x810
    69f0:	bcs	6a04 <btbb_process_packet@@Base+0xb78>
    69f4:	cmp	r3, r8
    69f8:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    69fc:	cmp	r3, #1920	; 0x780
    6a00:	b	6930 <btbb_process_packet@@Base+0xaa4>
    6a04:	cmp	r3, #2176	; 0x880
    6a08:	beq	6934 <btbb_process_packet@@Base+0xaa8>
    6a0c:	subcs	r3, r3, #2288	; 0x8f0
    6a10:	bcs	6a58 <btbb_process_packet@@Base+0xbcc>
    6a14:	add	r2, r2, #4
    6a18:	cmp	r2, #24
    6a1c:	bne	68b8 <btbb_process_packet@@Base+0xa2c>
    6a20:	add	sp, sp, #580	; 0x244
    6a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6a28:	cmp	r3, r7
    6a2c:	bhi	6a48 <btbb_process_packet@@Base+0xbbc>
    6a30:	cmp	r3, #2560	; 0xa00
    6a34:	bhi	6934 <btbb_process_packet@@Base+0xaa8>
    6a38:	sub	r3, r3, #2544	; 0x9f0
    6a3c:	sub	r3, r3, #12
    6a40:	cmp	r3, #3
    6a44:	b	6908 <btbb_process_packet@@Base+0xa7c>
    6a48:	cmp	r3, #2688	; 0xa80
    6a4c:	beq	6934 <btbb_process_packet@@Base+0xaa8>
    6a50:	subcs	r3, r3, #2800	; 0xaf0
    6a54:	bcc	6a14 <btbb_process_packet@@Base+0xb88>
    6a58:	sub	r3, r3, #14
    6a5c:	b	6a40 <btbb_process_packet@@Base+0xbb4>
    6a60:	cmp	r3, ip
    6a64:	bhi	6a9c <btbb_process_packet@@Base+0xc10>
    6a68:	cmp	r3, lr
    6a6c:	bcs	6934 <btbb_process_packet@@Base+0xaa8>
    6a70:	cmp	r3, #3200	; 0xc80
    6a74:	beq	6934 <btbb_process_packet@@Base+0xaa8>
    6a78:	subls	r3, r3, #3056	; 0xbf0
    6a7c:	subls	r3, r3, #8
    6a80:	bls	6acc <btbb_process_packet@@Base+0xc40>
    6a84:	cmp	r3, r5
    6a88:	bcc	6a14 <btbb_process_packet@@Base+0xb88>
    6a8c:	cmp	r3, r6
    6a90:	bls	6934 <btbb_process_packet@@Base+0xaa8>
    6a94:	cmp	r3, #3456	; 0xd80
    6a98:	b	6930 <btbb_process_packet@@Base+0xaa4>
    6a9c:	cmp	r3, #3968	; 0xf80
    6aa0:	beq	6934 <btbb_process_packet@@Base+0xaa8>
    6aa4:	bhi	6abc <btbb_process_packet@@Base+0xc30>
    6aa8:	cmp	r3, #3712	; 0xe80
    6aac:	beq	6934 <btbb_process_packet@@Base+0xaa8>
    6ab0:	bcc	6a14 <btbb_process_packet@@Base+0xb88>
    6ab4:	sub	r3, r3, #3824	; 0xef0
    6ab8:	b	6a58 <btbb_process_packet@@Base+0xbcc>
    6abc:	cmp	r3, #4064	; 0xfe0
    6ac0:	beq	6934 <btbb_process_packet@@Base+0xaa8>
    6ac4:	bcc	6a14 <btbb_process_packet@@Base+0xb88>
    6ac8:	sub	r3, r3, #4080	; 0xff0
    6acc:	cmp	r3, #15
    6ad0:	b	6908 <btbb_process_packet@@Base+0xa7c>
    6ad4:	andeq	sl, r0, ip, lsl #22
    6ad8:	andeq	sl, r0, r4, ror sl
    6adc:	mcrhi	14, 4, fp, cr9, cr6, {6}

00006ae0 <lell_packet_new@@Base>:
    6ae0:	push	{r4, lr}
    6ae4:	mov	r1, #104	; 0x68
    6ae8:	mov	r0, #1
    6aec:	bl	20c8 <calloc@plt>
    6af0:	mov	r3, #1
    6af4:	str	r3, [r0, #96]	; 0x60
    6af8:	pop	{r4, pc}

00006afc <lell_packet_ref@@Base>:
    6afc:	ldr	r3, [r0, #96]	; 0x60
    6b00:	add	r3, r3, #1
    6b04:	str	r3, [r0, #96]	; 0x60
    6b08:	bx	lr

00006b0c <lell_packet_unref@@Base>:
    6b0c:	ldr	r3, [r0, #96]	; 0x60
    6b10:	subs	r3, r3, #1
    6b14:	beq	6b20 <lell_packet_unref@@Base+0x14>
    6b18:	str	r3, [r0, #96]	; 0x60
    6b1c:	bx	lr
    6b20:	b	2164 <free@plt>

00006b24 <lell_packet_is_data@@Base>:
    6b24:	ldrb	r0, [r0, #68]	; 0x44
    6b28:	cmp	r0, #36	; 0x24
    6b2c:	movhi	r0, #0
    6b30:	movls	r0, #1
    6b34:	bx	lr

00006b38 <lell_allocate_and_decode@@Base>:
    6b38:	push	{r4, r5, r6, r7, r8, lr}
    6b3c:	mov	r7, r0
    6b40:	mov	r6, r3
    6b44:	mov	r5, r2
    6b48:	mov	r4, r1
    6b4c:	bl	241c <lell_packet_new@plt>
    6b50:	mov	r3, r7
    6b54:	add	r2, r7, #64	; 0x40
    6b58:	str	r0, [r6]
    6b5c:	ldr	r1, [r3], #4
    6b60:	cmp	r3, r2
    6b64:	str	r1, [r0], #4
    6b68:	bne	6b5c <lell_allocate_and_decode@@Base+0x24>
    6b6c:	movw	r3, #2402	; 0x962
    6b70:	sub	ip, r4, #2400	; 0x960
    6b74:	ldr	r0, [r6]
    6b78:	cmp	r4, r3
    6b7c:	moveq	r1, #37	; 0x25
    6b80:	beq	6bcc <lell_allocate_and_decode@@Base+0x94>
    6b84:	movw	r3, #2425	; 0x979
    6b88:	cmp	r4, r3
    6b8c:	subls	r1, ip, #4
    6b90:	addls	r1, r1, r1, lsr #31
    6b94:	ubfxls	r1, r1, #1, #8
    6b98:	bls	6bcc <lell_allocate_and_decode@@Base+0x94>
    6b9c:	movw	r3, #2426	; 0x97a
    6ba0:	cmp	r4, r3
    6ba4:	moveq	r1, #38	; 0x26
    6ba8:	beq	6bcc <lell_allocate_and_decode@@Base+0x94>
    6bac:	cmp	r4, #2480	; 0x9b0
    6bb0:	subcc	r4, r4, #2416	; 0x970
    6bb4:	movcs	r1, #39	; 0x27
    6bb8:	subcc	r4, r4, #12
    6bbc:	addcc	r4, r4, r4, lsr #31
    6bc0:	asrcc	r1, r4, #1
    6bc4:	addcc	r1, r1, #11
    6bc8:	uxtbcc	r1, r1
    6bcc:	sub	ip, ip, #2
    6bd0:	ldr	r3, [r0]
    6bd4:	add	ip, ip, ip, lsr #31
    6bd8:	asr	ip, ip, #1
    6bdc:	str	r3, [r0, #64]	; 0x40
    6be0:	strb	r1, [r0, #68]	; 0x44
    6be4:	strb	ip, [r0, #69]	; 0x45
    6be8:	str	r5, [r0, #76]	; 0x4c
    6bec:	bl	2134 <lell_packet_is_data@plt>
    6bf0:	ldr	r4, [r6]
    6bf4:	cmp	r0, #0
    6bf8:	ldrb	r3, [r4, #5]
    6bfc:	beq	6c2c <lell_allocate_and_decode@@Base+0xf4>
    6c00:	and	r3, r3, #31
    6c04:	ldr	r0, [r4, #64]	; 0x40
    6c08:	str	r3, [r4, #72]	; 0x48
    6c0c:	bl	6748 <btbb_process_packet@@Base+0x8bc>
    6c10:	ldrb	r3, [r4, #100]	; 0x64
    6c14:	str	r0, [r4, #92]	; 0x5c
    6c18:	clz	r0, r0
    6c1c:	lsr	r0, r0, #5
    6c20:	bfi	r3, r0, #0, #1
    6c24:	strb	r3, [r4, #100]	; 0x64
    6c28:	pop	{r4, r5, r6, r7, r8, pc}
    6c2c:	and	r3, r3, #63	; 0x3f
    6c30:	ldr	r1, [pc, #112]	; 6ca8 <lell_allocate_and_decode@@Base+0x170>
    6c34:	str	r3, [r4, #72]	; 0x48
    6c38:	ldrb	r3, [r4, #4]
    6c3c:	and	r2, r3, #15
    6c40:	strb	r2, [r4, #80]	; 0x50
    6c44:	ubfx	r2, r3, #6, #1
    6c48:	lsr	r3, r3, #7
    6c4c:	strd	r2, [r4, #84]	; 0x54
    6c50:	ldr	r3, [r4, #64]	; 0x40
    6c54:	ldrb	r2, [r4, #100]	; 0x64
    6c58:	sub	ip, r3, r1
    6c5c:	clz	ip, ip
    6c60:	lsr	ip, ip, #5
    6c64:	bfi	r2, ip, #0, #1
    6c68:	tst	r2, #1
    6c6c:	eoreq	r3, r3, r1
    6c70:	strb	r2, [r4, #100]	; 0x64
    6c74:	beq	6c88 <lell_allocate_and_decode@@Base+0x150>
    6c78:	str	r0, [r4, #92]	; 0x5c
    6c7c:	pop	{r4, r5, r6, r7, r8, pc}
    6c80:	sub	r2, r3, #1
    6c84:	and	r3, r3, r2
    6c88:	cmp	r3, #0
    6c8c:	uxtb	r2, r0
    6c90:	add	r0, r0, #1
    6c94:	bne	6c80 <lell_allocate_and_decode@@Base+0x148>
    6c98:	cmp	r2, #1
    6c9c:	movne	r0, #32
    6ca0:	moveq	r0, #1
    6ca4:	b	6c78 <lell_allocate_and_decode@@Base+0x140>
    6ca8:	mcrhi	14, 4, fp, cr9, cr6, {6}

00006cac <lell_get_access_address@@Base>:
    6cac:	ldr	r0, [r0, #64]	; 0x40
    6cb0:	bx	lr

00006cb4 <lell_get_access_address_offenses@@Base>:
    6cb4:	ldr	r0, [r0, #92]	; 0x5c
    6cb8:	bx	lr

00006cbc <lell_get_channel_index@@Base>:
    6cbc:	ldrb	r0, [r0, #68]	; 0x44
    6cc0:	bx	lr

00006cc4 <lell_get_channel_k@@Base>:
    6cc4:	ldrb	r0, [r0, #69]	; 0x45
    6cc8:	bx	lr

00006ccc <lell_get_adv_type_str@@Base>:
    6ccc:	push	{r4, lr}
    6cd0:	mov	r4, r0
    6cd4:	bl	2134 <lell_packet_is_data@plt>
    6cd8:	cmp	r0, #0
    6cdc:	bne	6d00 <lell_get_adv_type_str@@Base+0x34>
    6ce0:	ldrb	r2, [r4, #80]	; 0x50
    6ce4:	cmp	r2, #6
    6ce8:	bhi	6d08 <lell_get_adv_type_str@@Base+0x3c>
    6cec:	ldr	r3, [pc, #32]	; 6d14 <lell_get_adv_type_str@@Base+0x48>
    6cf0:	add	r3, pc, r3
    6cf4:	add	r3, r3, r2, lsl #2
    6cf8:	ldr	r0, [r3, #32]
    6cfc:	pop	{r4, pc}
    6d00:	mov	r0, #0
    6d04:	pop	{r4, pc}
    6d08:	ldr	r0, [pc, #8]	; 6d18 <lell_get_adv_type_str@@Base+0x4c>
    6d0c:	add	r0, pc, r0
    6d10:	pop	{r4, pc}
    6d14:	andeq	r0, r2, r0, ror #2
    6d18:	andeq	sl, r0, r3, asr #20

00006d1c <lell_print@@Base>:
    6d1c:	push	{r4, r5, r6, r7, r8, lr}
    6d20:	mov	r4, r0
    6d24:	bl	2134 <lell_packet_is_data@plt>
    6d28:	cmp	r0, #0
    6d2c:	ldrb	r3, [r4, #100]	; 0x64
    6d30:	ldr	r1, [r4, #64]	; 0x40
    6d34:	beq	6de8 <lell_print@@Base+0xcc>
    6d38:	tst	r3, #1
    6d3c:	ldrb	r5, [r4, #4]
    6d40:	and	r5, r5, #3
    6d44:	bne	6ddc <lell_print@@Base+0xc0>
    6d48:	ldr	r2, [pc, #1092]	; 7194 <lell_print@@Base+0x478>
    6d4c:	add	r2, pc, r2
    6d50:	ldr	r0, [pc, #1088]	; 7198 <lell_print@@Base+0x47c>
    6d54:	ldr	r3, [r4, #72]	; 0x48
    6d58:	ldr	r6, [pc, #1084]	; 719c <lell_print@@Base+0x480>
    6d5c:	add	r0, pc, r0
    6d60:	bl	211c <printf@plt>
    6d64:	ldr	r0, [pc, #1076]	; 71a0 <lell_print@@Base+0x484>
    6d68:	ldrb	r1, [r4, #68]	; 0x44
    6d6c:	add	r6, pc, r6
    6d70:	add	r0, pc, r0
    6d74:	bl	211c <printf@plt>
    6d78:	ldr	r0, [pc, #1060]	; 71a4 <lell_print@@Base+0x488>
    6d7c:	add	r3, r6, r5, lsl #2
    6d80:	mov	r1, r5
    6d84:	ldr	r2, [r3, #60]	; 0x3c
    6d88:	add	r0, pc, r0
    6d8c:	bl	211c <printf@plt>
    6d90:	ldrb	r1, [r4, #4]
    6d94:	ldr	r0, [pc, #1036]	; 71a8 <lell_print@@Base+0x48c>
    6d98:	ubfx	r3, r1, #4, #1
    6d9c:	ubfx	r2, r1, #3, #1
    6da0:	add	r0, pc, r0
    6da4:	ubfx	r1, r1, #2, #1
    6da8:	bl	211c <printf@plt>
    6dac:	cmp	r5, #3
    6db0:	bne	6f20 <lell_print@@Base+0x204>
    6db4:	ldrb	r1, [r4, #6]
    6db8:	ldr	r0, [pc, #1004]	; 71ac <lell_print@@Base+0x490>
    6dbc:	cmp	r1, #20
    6dc0:	movlt	r3, r1
    6dc4:	movge	r3, #20
    6dc8:	add	r6, r6, r3, lsl #2
    6dcc:	add	r0, pc, r0
    6dd0:	ldr	r2, [r6, #76]	; 0x4c
    6dd4:	bl	211c <printf@plt>
    6dd8:	b	6f20 <lell_print@@Base+0x204>
    6ddc:	ldr	r2, [pc, #972]	; 71b0 <lell_print@@Base+0x494>
    6de0:	add	r2, pc, r2
    6de4:	b	6d50 <lell_print@@Base+0x34>
    6de8:	tst	r3, #1
    6dec:	bne	6e5c <lell_print@@Base+0x140>
    6df0:	ldr	r2, [pc, #956]	; 71b4 <lell_print@@Base+0x498>
    6df4:	add	r2, pc, r2
    6df8:	ldr	r0, [pc, #952]	; 71b8 <lell_print@@Base+0x49c>
    6dfc:	ldr	r3, [r4, #72]	; 0x48
    6e00:	add	r0, pc, r0
    6e04:	bl	211c <printf@plt>
    6e08:	ldr	r0, [pc, #940]	; 71bc <lell_print@@Base+0x4a0>
    6e0c:	ldrb	r1, [r4, #68]	; 0x44
    6e10:	add	r0, pc, r0
    6e14:	bl	211c <printf@plt>
    6e18:	mov	r0, r4
    6e1c:	bl	22c0 <lell_get_adv_type_str@plt>
    6e20:	mov	r1, r0
    6e24:	ldr	r0, [pc, #916]	; 71c0 <lell_print@@Base+0x4a4>
    6e28:	add	r0, pc, r0
    6e2c:	bl	211c <printf@plt>
    6e30:	ldrb	r3, [r4, #80]	; 0x50
    6e34:	cmp	r3, #6
    6e38:	addls	pc, pc, r3, lsl #2
    6e3c:	b	6f20 <lell_print@@Base+0x204>
    6e40:	b	6e68 <lell_print@@Base+0x14c>
    6e44:	b	6ef0 <lell_print@@Base+0x1d4>
    6e48:	b	6e68 <lell_print@@Base+0x14c>
    6e4c:	b	6fa0 <lell_print@@Base+0x284>
    6e50:	b	6fd0 <lell_print@@Base+0x2b4>
    6e54:	b	7030 <lell_print@@Base+0x314>
    6e58:	b	6e68 <lell_print@@Base+0x14c>
    6e5c:	ldr	r2, [pc, #864]	; 71c4 <lell_print@@Base+0x4a8>
    6e60:	add	r2, pc, r2
    6e64:	b	6df8 <lell_print@@Base+0xdc>
    6e68:	ldr	r0, [pc, #856]	; 71c8 <lell_print@@Base+0x4ac>
    6e6c:	mov	r2, #6
    6e70:	mov	r1, r4
    6e74:	ldr	r3, [r4, #84]	; 0x54
    6e78:	add	r0, pc, r0
    6e7c:	bl	6008 <btbb_process_packet@@Base+0x17c>
    6e80:	ldr	r3, [r4, #72]	; 0x48
    6e84:	cmp	r3, #6
    6e88:	ble	6f20 <lell_print@@Base+0x204>
    6e8c:	ldr	r0, [pc, #824]	; 71cc <lell_print@@Base+0x4b0>
    6e90:	add	r5, r4, #12
    6e94:	mvn	r7, #11
    6e98:	mov	r6, r5
    6e9c:	sub	r7, r7, r4
    6ea0:	ldr	r8, [pc, #808]	; 71d0 <lell_print@@Base+0x4b4>
    6ea4:	add	r0, pc, r0
    6ea8:	bl	211c <printf@plt>
    6eac:	add	r8, pc, r8
    6eb0:	ldr	r3, [r4, #72]	; 0x48
    6eb4:	add	r2, r7, r5
    6eb8:	sub	r3, r3, #6
    6ebc:	cmp	r3, r2
    6ec0:	bgt	6ee0 <lell_print@@Base+0x1c4>
    6ec4:	mov	r0, #10
    6ec8:	bl	23ec <putchar@plt>
    6ecc:	ldr	r1, [r4, #72]	; 0x48
    6ed0:	mov	r0, r6
    6ed4:	sub	r1, r1, #6
    6ed8:	bl	60bc <btbb_process_packet@@Base+0x230>
    6edc:	b	6f20 <lell_print@@Base+0x204>
    6ee0:	ldrb	r1, [r5], #1
    6ee4:	mov	r0, r8
    6ee8:	bl	211c <printf@plt>
    6eec:	b	6eb0 <lell_print@@Base+0x194>
    6ef0:	ldr	r0, [pc, #732]	; 71d4 <lell_print@@Base+0x4b8>
    6ef4:	mov	r2, #6
    6ef8:	mov	r1, r4
    6efc:	ldr	r3, [r4, #84]	; 0x54
    6f00:	add	r0, pc, r0
    6f04:	bl	6008 <btbb_process_packet@@Base+0x17c>
    6f08:	ldr	r0, [pc, #712]	; 71d8 <lell_print@@Base+0x4bc>
    6f0c:	mov	r2, #12
    6f10:	mov	r1, r4
    6f14:	ldr	r3, [r4, #88]	; 0x58
    6f18:	add	r0, pc, r0
    6f1c:	bl	6008 <btbb_process_packet@@Base+0x17c>
    6f20:	mov	r0, #10
    6f24:	ldr	r6, [pc, #688]	; 71dc <lell_print@@Base+0x4c0>
    6f28:	mov	r5, #6
    6f2c:	bl	23ec <putchar@plt>
    6f30:	ldr	r0, [pc, #680]	; 71e0 <lell_print@@Base+0x4c4>
    6f34:	add	r6, pc, r6
    6f38:	add	r0, pc, r0
    6f3c:	bl	211c <printf@plt>
    6f40:	ldr	r3, [r4, #72]	; 0x48
    6f44:	add	r3, r3, #5
    6f48:	cmp	r3, r5
    6f4c:	bge	7180 <lell_print@@Base+0x464>
    6f50:	mov	r0, #10
    6f54:	ldr	r6, [pc, #648]	; 71e4 <lell_print@@Base+0x4c8>
    6f58:	mov	r5, #0
    6f5c:	bl	23ec <putchar@plt>
    6f60:	ldr	r0, [pc, #640]	; 71e8 <lell_print@@Base+0x4cc>
    6f64:	add	r6, pc, r6
    6f68:	add	r0, pc, r0
    6f6c:	bl	211c <printf@plt>
    6f70:	ldr	r2, [r4, #72]	; 0x48
    6f74:	add	r3, r4, r5
    6f78:	mov	r0, r6
    6f7c:	add	r5, r5, #1
    6f80:	add	r3, r3, r2
    6f84:	ldrb	r1, [r3, #6]
    6f88:	bl	211c <printf@plt>
    6f8c:	cmp	r5, #3
    6f90:	bne	6f70 <lell_print@@Base+0x254>
    6f94:	mov	r0, #10
    6f98:	pop	{r4, r5, r6, r7, r8, lr}
    6f9c:	b	23ec <putchar@plt>
    6fa0:	ldr	r0, [pc, #580]	; 71ec <lell_print@@Base+0x4d0>
    6fa4:	mov	r2, #6
    6fa8:	mov	r1, r4
    6fac:	ldr	r3, [r4, #84]	; 0x54
    6fb0:	add	r0, pc, r0
    6fb4:	bl	6008 <btbb_process_packet@@Base+0x17c>
    6fb8:	ldr	r0, [pc, #560]	; 71f0 <lell_print@@Base+0x4d4>
    6fbc:	mov	r2, #12
    6fc0:	mov	r1, r4
    6fc4:	ldr	r3, [r4, #88]	; 0x58
    6fc8:	add	r0, pc, r0
    6fcc:	b	6f1c <lell_print@@Base+0x200>
    6fd0:	ldr	r0, [pc, #540]	; 71f4 <lell_print@@Base+0x4d8>
    6fd4:	mov	r2, #6
    6fd8:	mov	r1, r4
    6fdc:	add	r5, r4, #12
    6fe0:	mvn	r7, #11
    6fe4:	ldr	r3, [r4, #84]	; 0x54
    6fe8:	mov	r6, r5
    6fec:	sub	r7, r7, r4
    6ff0:	ldr	r8, [pc, #512]	; 71f8 <lell_print@@Base+0x4dc>
    6ff4:	add	r0, pc, r0
    6ff8:	bl	6008 <btbb_process_packet@@Base+0x17c>
    6ffc:	ldr	r0, [pc, #504]	; 71fc <lell_print@@Base+0x4e0>
    7000:	add	r8, pc, r8
    7004:	add	r0, pc, r0
    7008:	bl	211c <printf@plt>
    700c:	ldr	r3, [r4, #72]	; 0x48
    7010:	add	r2, r7, r5
    7014:	sub	r3, r3, #6
    7018:	cmp	r3, r2
    701c:	ble	6ec4 <lell_print@@Base+0x1a8>
    7020:	ldrb	r1, [r5], #1
    7024:	mov	r0, r8
    7028:	bl	211c <printf@plt>
    702c:	b	700c <lell_print@@Base+0x2f0>
    7030:	ldr	r0, [pc, #456]	; 7200 <lell_print@@Base+0x4e4>
    7034:	mov	r2, #6
    7038:	mov	r1, r4
    703c:	add	r5, r4, #34	; 0x22
    7040:	add	r6, r4, #39	; 0x27
    7044:	ldr	r3, [r4, #84]	; 0x54
    7048:	ldr	r7, [pc, #436]	; 7204 <lell_print@@Base+0x4e8>
    704c:	add	r0, pc, r0
    7050:	bl	6008 <btbb_process_packet@@Base+0x17c>
    7054:	ldr	r0, [pc, #428]	; 7208 <lell_print@@Base+0x4ec>
    7058:	mov	r2, #12
    705c:	mov	r1, r4
    7060:	ldr	r3, [r4, #88]	; 0x58
    7064:	add	r7, pc, r7
    7068:	add	r0, pc, r0
    706c:	bl	6008 <btbb_process_packet@@Base+0x17c>
    7070:	ldr	r1, [pc, #404]	; 720c <lell_print@@Base+0x4f0>
    7074:	ldr	r0, [pc, #404]	; 7210 <lell_print@@Base+0x4f4>
    7078:	ldr	r2, [r4, #18]
    707c:	add	r1, pc, r1
    7080:	add	r0, pc, r0
    7084:	bl	211c <printf@plt>
    7088:	ldrb	r3, [r4, #23]
    708c:	ldrb	r2, [r4, #24]
    7090:	ldr	r1, [pc, #380]	; 7214 <lell_print@@Base+0x4f8>
    7094:	lsl	r3, r3, #8
    7098:	ldr	r0, [pc, #376]	; 7218 <lell_print@@Base+0x4fc>
    709c:	orr	r3, r3, r2, lsl #16
    70a0:	ldrb	r2, [r4, #22]
    70a4:	add	r1, pc, r1
    70a8:	add	r0, pc, r0
    70ac:	orr	r2, r3, r2
    70b0:	bl	211c <printf@plt>
    70b4:	ldrb	r3, [r4, #25]
    70b8:	ldr	r1, [pc, #348]	; 721c <lell_print@@Base+0x500>
    70bc:	ldr	r0, [pc, #348]	; 7220 <lell_print@@Base+0x504>
    70c0:	mov	r2, r3
    70c4:	add	r1, pc, r1
    70c8:	add	r0, pc, r0
    70cc:	bl	211c <printf@plt>
    70d0:	ldr	r0, [pc, #332]	; 7224 <lell_print@@Base+0x508>
    70d4:	mov	r2, #26
    70d8:	mov	r1, r4
    70dc:	add	r0, pc, r0
    70e0:	bl	6094 <btbb_process_packet@@Base+0x208>
    70e4:	ldr	r0, [pc, #316]	; 7228 <lell_print@@Base+0x50c>
    70e8:	mov	r2, #28
    70ec:	mov	r1, r4
    70f0:	add	r0, pc, r0
    70f4:	bl	6094 <btbb_process_packet@@Base+0x208>
    70f8:	ldr	r0, [pc, #300]	; 722c <lell_print@@Base+0x510>
    70fc:	mov	r2, #30
    7100:	mov	r1, r4
    7104:	add	r0, pc, r0
    7108:	bl	6094 <btbb_process_packet@@Base+0x208>
    710c:	ldr	r0, [pc, #284]	; 7230 <lell_print@@Base+0x514>
    7110:	mov	r2, #32
    7114:	mov	r1, r4
    7118:	add	r0, pc, r0
    711c:	bl	6094 <btbb_process_packet@@Base+0x208>
    7120:	ldr	r0, [pc, #268]	; 7234 <lell_print@@Base+0x518>
    7124:	add	r0, pc, r0
    7128:	bl	211c <printf@plt>
    712c:	ldrb	r1, [r5], #1
    7130:	mov	r0, r7
    7134:	bl	211c <printf@plt>
    7138:	cmp	r6, r5
    713c:	bne	712c <lell_print@@Base+0x410>
    7140:	mov	r0, #10
    7144:	bl	23ec <putchar@plt>
    7148:	ldrb	r1, [r4, #39]	; 0x27
    714c:	ldr	r0, [pc, #228]	; 7238 <lell_print@@Base+0x51c>
    7150:	and	r1, r1, #31
    7154:	add	r0, pc, r0
    7158:	bl	211c <printf@plt>
    715c:	ldrb	r1, [r4, #39]	; 0x27
    7160:	ldr	r3, [pc, #212]	; 723c <lell_print@@Base+0x520>
    7164:	ldr	r0, [pc, #212]	; 7240 <lell_print@@Base+0x524>
    7168:	lsr	r1, r1, #5
    716c:	add	r3, pc, r3
    7170:	add	r3, r3, r1, lsl #2
    7174:	add	r0, pc, r0
    7178:	ldr	r2, [r3, #160]	; 0xa0
    717c:	b	6dd4 <lell_print@@Base+0xb8>
    7180:	ldrb	r1, [r4, r5]
    7184:	mov	r0, r6
    7188:	add	r5, r5, #1
    718c:	bl	211c <printf@plt>
    7190:	b	6f40 <lell_print@@Base+0x224>
    7194:	andeq	sl, r0, fp, lsl #20
    7198:	andeq	sl, r0, r3, lsl #20
    719c:	andeq	r0, r2, r4, ror #1
    71a0:	andeq	sl, r0, r0, lsl sl
    71a4:	andeq	sl, r0, pc, lsl #20
    71a8:	andeq	sl, r0, sl, lsl #20
    71ac:	strdeq	sl, [r0], -ip
    71b0:	andeq	sl, r0, r9, ror r9
    71b4:	andeq	sl, r0, r3, ror #18
    71b8:	ldrdeq	sl, [r0], -sp
    71bc:	andeq	sl, r0, r0, ror r9
    71c0:	ldrdeq	sl, [r0], -ip
    71c4:	strdeq	sl, [r0], -r9
    71c8:	muleq	r0, fp, r9
    71cc:	andeq	sl, r0, r7, ror r9
    71d0:	andeq	sl, r0, r1, asr #16
    71d4:	andeq	sl, r0, r3, lsl r9
    71d8:	andeq	sl, r0, r0, lsl r9
    71dc:			; <UNDEFINED> instruction: 0x0000a7b9
    71e0:	andeq	sl, r0, r8, lsr #19
    71e4:	andeq	sl, r0, r9, lsl #15
    71e8:	andeq	sl, r0, r3, lsl #19
    71ec:	andeq	sl, r0, r0, lsl #17
    71f0:	andeq	sl, r0, fp, asr #16
    71f4:	andeq	sl, r0, pc, lsl r8
    71f8:	andeq	sl, r0, sp, ror #13
    71fc:	andeq	sl, r0, r4, lsr r8
    7200:	ldrdeq	sl, [r0], -ip
    7204:	andeq	sl, r0, r9, lsl #13
    7208:	andeq	sl, r0, fp, lsr #15
    720c:	andeq	sl, r0, sp, asr #15
    7210:	ldrdeq	sl, [r0], -r1
    7214:			; <UNDEFINED> instruction: 0x0000a7b9
    7218:			; <UNDEFINED> instruction: 0x0000a7bf
    721c:	andeq	sl, r0, pc, lsr #15
    7220:			; <UNDEFINED> instruction: 0x0000a7b5
    7224:			; <UNDEFINED> instruction: 0x0000a7b2
    7228:	andeq	sl, r0, sl, lsr #15
    722c:	andeq	sl, r0, r1, lsr #15
    7230:	muleq	r0, r7, r7
    7234:	muleq	r0, r5, r7
    7238:	andeq	sl, r0, lr, ror #14
    723c:	andeq	pc, r1, r4, ror #25
    7240:	andeq	sl, r0, fp, asr r7

00007244 <bt_compidtostr@@Base>:
    7244:	movw	r3, #519	; 0x207
    7248:	cmp	r0, r3
    724c:	beq	a428 <bt_compidtostr@@Base+0x31e4>
    7250:	cmp	r0, #520	; 0x208
    7254:	bcs	897c <bt_compidtostr@@Base+0x1738>
    7258:	movw	r3, #259	; 0x103
    725c:	cmp	r0, r3
    7260:	beq	a434 <bt_compidtostr@@Base+0x31f0>
    7264:	cmp	r0, #260	; 0x104
    7268:	bcs	7ba8 <bt_compidtostr@@Base+0x964>
    726c:	cmp	r0, #129	; 0x81
    7270:	beq	a440 <bt_compidtostr@@Base+0x31fc>
    7274:	bhi	770c <bt_compidtostr@@Base+0x4c8>
    7278:	cmp	r0, #64	; 0x40
    727c:	beq	a44c <bt_compidtostr@@Base+0x3208>
    7280:	bhi	74c8 <bt_compidtostr@@Base+0x284>
    7284:	cmp	r0, #31
    7288:	beq	a458 <bt_compidtostr@@Base+0x3214>
    728c:	bhi	73a4 <bt_compidtostr@@Base+0x160>
    7290:	cmp	r0, #15
    7294:	beq	a464 <bt_compidtostr@@Base+0x3220>
    7298:	bhi	7320 <bt_compidtostr@@Base+0xdc>
    729c:	cmp	r0, #7
    72a0:	beq	a470 <bt_compidtostr@@Base+0x322c>
    72a4:	bhi	72e4 <bt_compidtostr@@Base+0xa0>
    72a8:	cmp	r0, #3
    72ac:	beq	a47c <bt_compidtostr@@Base+0x3238>
    72b0:	bhi	72cc <bt_compidtostr@@Base+0x88>
    72b4:	cmp	r0, #1
    72b8:	beq	a488 <bt_compidtostr@@Base+0x3244>
    72bc:	bhi	a494 <bt_compidtostr@@Base+0x3250>
    72c0:	ldr	r0, [pc, #3368]	; 7ff0 <bt_compidtostr@@Base+0xdac>
    72c4:	add	r0, pc, r0
    72c8:	bx	lr
    72cc:	cmp	r0, #5
    72d0:	beq	a4a0 <bt_compidtostr@@Base+0x325c>
    72d4:	bhi	a4ac <bt_compidtostr@@Base+0x3268>
    72d8:	ldr	r0, [pc, #3348]	; 7ff4 <bt_compidtostr@@Base+0xdb0>
    72dc:	add	r0, pc, r0
    72e0:	bx	lr
    72e4:	cmp	r0, #11
    72e8:	beq	a4b8 <bt_compidtostr@@Base+0x3274>
    72ec:	bhi	7308 <bt_compidtostr@@Base+0xc4>
    72f0:	cmp	r0, #9
    72f4:	beq	a4c4 <bt_compidtostr@@Base+0x3280>
    72f8:	bhi	a4d0 <bt_compidtostr@@Base+0x328c>
    72fc:	ldr	r0, [pc, #3316]	; 7ff8 <bt_compidtostr@@Base+0xdb4>
    7300:	add	r0, pc, r0
    7304:	bx	lr
    7308:	cmp	r0, #13
    730c:	beq	a4dc <bt_compidtostr@@Base+0x3298>
    7310:	bhi	a4e8 <bt_compidtostr@@Base+0x32a4>
    7314:	ldr	r0, [pc, #3296]	; 7ffc <bt_compidtostr@@Base+0xdb8>
    7318:	add	r0, pc, r0
    731c:	bx	lr
    7320:	cmp	r0, #23
    7324:	beq	a4f4 <bt_compidtostr@@Base+0x32b0>
    7328:	bhi	7368 <bt_compidtostr@@Base+0x124>
    732c:	cmp	r0, #19
    7330:	beq	a500 <bt_compidtostr@@Base+0x32bc>
    7334:	bhi	7350 <bt_compidtostr@@Base+0x10c>
    7338:	cmp	r0, #17
    733c:	beq	a50c <bt_compidtostr@@Base+0x32c8>
    7340:	bhi	a518 <bt_compidtostr@@Base+0x32d4>
    7344:	ldr	r0, [pc, #3252]	; 8000 <bt_compidtostr@@Base+0xdbc>
    7348:	add	r0, pc, r0
    734c:	bx	lr
    7350:	cmp	r0, #21
    7354:	beq	a524 <bt_compidtostr@@Base+0x32e0>
    7358:	bhi	a530 <bt_compidtostr@@Base+0x32ec>
    735c:	ldr	r0, [pc, #3232]	; 8004 <bt_compidtostr@@Base+0xdc0>
    7360:	add	r0, pc, r0
    7364:	bx	lr
    7368:	cmp	r0, #27
    736c:	beq	a53c <bt_compidtostr@@Base+0x32f8>
    7370:	bhi	738c <bt_compidtostr@@Base+0x148>
    7374:	cmp	r0, #25
    7378:	beq	a548 <bt_compidtostr@@Base+0x3304>
    737c:	bhi	a554 <bt_compidtostr@@Base+0x3310>
    7380:	ldr	r0, [pc, #3200]	; 8008 <bt_compidtostr@@Base+0xdc4>
    7384:	add	r0, pc, r0
    7388:	bx	lr
    738c:	cmp	r0, #29
    7390:	beq	a560 <bt_compidtostr@@Base+0x331c>
    7394:	bhi	a56c <bt_compidtostr@@Base+0x3328>
    7398:	ldr	r0, [pc, #3180]	; 800c <bt_compidtostr@@Base+0xdc8>
    739c:	add	r0, pc, r0
    73a0:	bx	lr
    73a4:	cmp	r0, #47	; 0x2f
    73a8:	beq	a578 <bt_compidtostr@@Base+0x3334>
    73ac:	bhi	7434 <bt_compidtostr@@Base+0x1f0>
    73b0:	cmp	r0, #39	; 0x27
    73b4:	beq	a584 <bt_compidtostr@@Base+0x3340>
    73b8:	bhi	73f8 <bt_compidtostr@@Base+0x1b4>
    73bc:	cmp	r0, #35	; 0x23
    73c0:	beq	a590 <bt_compidtostr@@Base+0x334c>
    73c4:	bhi	73e0 <bt_compidtostr@@Base+0x19c>
    73c8:	cmp	r0, #33	; 0x21
    73cc:	beq	a59c <bt_compidtostr@@Base+0x3358>
    73d0:	bhi	a5a8 <bt_compidtostr@@Base+0x3364>
    73d4:	ldr	r0, [pc, #3124]	; 8010 <bt_compidtostr@@Base+0xdcc>
    73d8:	add	r0, pc, r0
    73dc:	bx	lr
    73e0:	cmp	r0, #37	; 0x25
    73e4:	beq	a5b4 <bt_compidtostr@@Base+0x3370>
    73e8:	bhi	a5c0 <bt_compidtostr@@Base+0x337c>
    73ec:	ldr	r0, [pc, #3104]	; 8014 <bt_compidtostr@@Base+0xdd0>
    73f0:	add	r0, pc, r0
    73f4:	bx	lr
    73f8:	cmp	r0, #43	; 0x2b
    73fc:	beq	a5cc <bt_compidtostr@@Base+0x3388>
    7400:	bhi	741c <bt_compidtostr@@Base+0x1d8>
    7404:	cmp	r0, #41	; 0x29
    7408:	beq	a5d8 <bt_compidtostr@@Base+0x3394>
    740c:	bhi	a5e4 <bt_compidtostr@@Base+0x33a0>
    7410:	ldr	r0, [pc, #3072]	; 8018 <bt_compidtostr@@Base+0xdd4>
    7414:	add	r0, pc, r0
    7418:	bx	lr
    741c:	cmp	r0, #45	; 0x2d
    7420:	beq	a5f0 <bt_compidtostr@@Base+0x33ac>
    7424:	bhi	a5fc <bt_compidtostr@@Base+0x33b8>
    7428:	ldr	r0, [pc, #3052]	; 801c <bt_compidtostr@@Base+0xdd8>
    742c:	add	r0, pc, r0
    7430:	bx	lr
    7434:	cmp	r0, #55	; 0x37
    7438:	beq	a608 <bt_compidtostr@@Base+0x33c4>
    743c:	bhi	747c <bt_compidtostr@@Base+0x238>
    7440:	cmp	r0, #51	; 0x33
    7444:	beq	a614 <bt_compidtostr@@Base+0x33d0>
    7448:	bhi	7464 <bt_compidtostr@@Base+0x220>
    744c:	cmp	r0, #49	; 0x31
    7450:	beq	a620 <bt_compidtostr@@Base+0x33dc>
    7454:	bhi	a62c <bt_compidtostr@@Base+0x33e8>
    7458:	ldr	r0, [pc, #3008]	; 8020 <bt_compidtostr@@Base+0xddc>
    745c:	add	r0, pc, r0
    7460:	bx	lr
    7464:	cmp	r0, #53	; 0x35
    7468:	beq	a638 <bt_compidtostr@@Base+0x33f4>
    746c:	bhi	a644 <bt_compidtostr@@Base+0x3400>
    7470:	ldr	r0, [pc, #2988]	; 8024 <bt_compidtostr@@Base+0xde0>
    7474:	add	r0, pc, r0
    7478:	bx	lr
    747c:	cmp	r0, #59	; 0x3b
    7480:	beq	a650 <bt_compidtostr@@Base+0x340c>
    7484:	bhi	74a0 <bt_compidtostr@@Base+0x25c>
    7488:	cmp	r0, #57	; 0x39
    748c:	beq	a65c <bt_compidtostr@@Base+0x3418>
    7490:	bhi	a668 <bt_compidtostr@@Base+0x3424>
    7494:	ldr	r0, [pc, #2956]	; 8028 <bt_compidtostr@@Base+0xde4>
    7498:	add	r0, pc, r0
    749c:	bx	lr
    74a0:	cmp	r0, #61	; 0x3d
    74a4:	beq	a674 <bt_compidtostr@@Base+0x3430>
    74a8:	bcc	a680 <bt_compidtostr@@Base+0x343c>
    74ac:	cmp	r0, #62	; 0x3e
    74b0:	beq	a68c <bt_compidtostr@@Base+0x3448>
    74b4:	cmp	r0, #63	; 0x3f
    74b8:	beq	a698 <bt_compidtostr@@Base+0x3454>
    74bc:	ldr	r0, [pc, #2920]	; 802c <bt_compidtostr@@Base+0xde8>
    74c0:	add	r0, pc, r0
    74c4:	bx	lr
    74c8:	cmp	r0, #96	; 0x60
    74cc:	beq	a6a4 <bt_compidtostr@@Base+0x3460>
    74d0:	bhi	75e8 <bt_compidtostr@@Base+0x3a4>
    74d4:	cmp	r0, #80	; 0x50
    74d8:	beq	a6b0 <bt_compidtostr@@Base+0x346c>
    74dc:	bhi	7564 <bt_compidtostr@@Base+0x320>
    74e0:	cmp	r0, #72	; 0x48
    74e4:	beq	a6bc <bt_compidtostr@@Base+0x3478>
    74e8:	bhi	7528 <bt_compidtostr@@Base+0x2e4>
    74ec:	cmp	r0, #68	; 0x44
    74f0:	beq	a6c8 <bt_compidtostr@@Base+0x3484>
    74f4:	bhi	7510 <bt_compidtostr@@Base+0x2cc>
    74f8:	cmp	r0, #66	; 0x42
    74fc:	beq	a6d4 <bt_compidtostr@@Base+0x3490>
    7500:	bhi	a6e0 <bt_compidtostr@@Base+0x349c>
    7504:	ldr	r0, [pc, #2852]	; 8030 <bt_compidtostr@@Base+0xdec>
    7508:	add	r0, pc, r0
    750c:	bx	lr
    7510:	cmp	r0, #70	; 0x46
    7514:	beq	a6ec <bt_compidtostr@@Base+0x34a8>
    7518:	bhi	a6f8 <bt_compidtostr@@Base+0x34b4>
    751c:	ldr	r0, [pc, #2832]	; 8034 <bt_compidtostr@@Base+0xdf0>
    7520:	add	r0, pc, r0
    7524:	bx	lr
    7528:	cmp	r0, #76	; 0x4c
    752c:	beq	a704 <bt_compidtostr@@Base+0x34c0>
    7530:	bhi	754c <bt_compidtostr@@Base+0x308>
    7534:	cmp	r0, #74	; 0x4a
    7538:	beq	a710 <bt_compidtostr@@Base+0x34cc>
    753c:	bhi	a71c <bt_compidtostr@@Base+0x34d8>
    7540:	ldr	r0, [pc, #2800]	; 8038 <bt_compidtostr@@Base+0xdf4>
    7544:	add	r0, pc, r0
    7548:	bx	lr
    754c:	cmp	r0, #78	; 0x4e
    7550:	beq	a728 <bt_compidtostr@@Base+0x34e4>
    7554:	bhi	a734 <bt_compidtostr@@Base+0x34f0>
    7558:	ldr	r0, [pc, #2780]	; 803c <bt_compidtostr@@Base+0xdf8>
    755c:	add	r0, pc, r0
    7560:	bx	lr
    7564:	cmp	r0, #88	; 0x58
    7568:	beq	a740 <bt_compidtostr@@Base+0x34fc>
    756c:	bhi	75ac <bt_compidtostr@@Base+0x368>
    7570:	cmp	r0, #84	; 0x54
    7574:	beq	a74c <bt_compidtostr@@Base+0x3508>
    7578:	bhi	7594 <bt_compidtostr@@Base+0x350>
    757c:	cmp	r0, #82	; 0x52
    7580:	beq	a758 <bt_compidtostr@@Base+0x3514>
    7584:	bhi	a764 <bt_compidtostr@@Base+0x3520>
    7588:	ldr	r0, [pc, #2736]	; 8040 <bt_compidtostr@@Base+0xdfc>
    758c:	add	r0, pc, r0
    7590:	bx	lr
    7594:	cmp	r0, #86	; 0x56
    7598:	beq	a770 <bt_compidtostr@@Base+0x352c>
    759c:	bhi	a77c <bt_compidtostr@@Base+0x3538>
    75a0:	ldr	r0, [pc, #2716]	; 8044 <bt_compidtostr@@Base+0xe00>
    75a4:	add	r0, pc, r0
    75a8:	bx	lr
    75ac:	cmp	r0, #92	; 0x5c
    75b0:	beq	a788 <bt_compidtostr@@Base+0x3544>
    75b4:	bhi	75d0 <bt_compidtostr@@Base+0x38c>
    75b8:	cmp	r0, #90	; 0x5a
    75bc:	beq	a794 <bt_compidtostr@@Base+0x3550>
    75c0:	bhi	a7a0 <bt_compidtostr@@Base+0x355c>
    75c4:	ldr	r0, [pc, #2684]	; 8048 <bt_compidtostr@@Base+0xe04>
    75c8:	add	r0, pc, r0
    75cc:	bx	lr
    75d0:	cmp	r0, #94	; 0x5e
    75d4:	beq	a7ac <bt_compidtostr@@Base+0x3568>
    75d8:	bhi	a7b8 <bt_compidtostr@@Base+0x3574>
    75dc:	ldr	r0, [pc, #2664]	; 804c <bt_compidtostr@@Base+0xe08>
    75e0:	add	r0, pc, r0
    75e4:	bx	lr
    75e8:	cmp	r0, #112	; 0x70
    75ec:	beq	a7c4 <bt_compidtostr@@Base+0x3580>
    75f0:	bhi	7678 <bt_compidtostr@@Base+0x434>
    75f4:	cmp	r0, #104	; 0x68
    75f8:	beq	a7d0 <bt_compidtostr@@Base+0x358c>
    75fc:	bhi	763c <bt_compidtostr@@Base+0x3f8>
    7600:	cmp	r0, #100	; 0x64
    7604:	beq	a7dc <bt_compidtostr@@Base+0x3598>
    7608:	bhi	7624 <bt_compidtostr@@Base+0x3e0>
    760c:	cmp	r0, #98	; 0x62
    7610:	beq	a7e8 <bt_compidtostr@@Base+0x35a4>
    7614:	bhi	a7f4 <bt_compidtostr@@Base+0x35b0>
    7618:	ldr	r0, [pc, #2608]	; 8050 <bt_compidtostr@@Base+0xe0c>
    761c:	add	r0, pc, r0
    7620:	bx	lr
    7624:	cmp	r0, #102	; 0x66
    7628:	beq	a800 <bt_compidtostr@@Base+0x35bc>
    762c:	bhi	a80c <bt_compidtostr@@Base+0x35c8>
    7630:	ldr	r0, [pc, #2588]	; 8054 <bt_compidtostr@@Base+0xe10>
    7634:	add	r0, pc, r0
    7638:	bx	lr
    763c:	cmp	r0, #108	; 0x6c
    7640:	beq	a818 <bt_compidtostr@@Base+0x35d4>
    7644:	bhi	7660 <bt_compidtostr@@Base+0x41c>
    7648:	cmp	r0, #106	; 0x6a
    764c:	beq	a824 <bt_compidtostr@@Base+0x35e0>
    7650:	bhi	a830 <bt_compidtostr@@Base+0x35ec>
    7654:	ldr	r0, [pc, #2556]	; 8058 <bt_compidtostr@@Base+0xe14>
    7658:	add	r0, pc, r0
    765c:	bx	lr
    7660:	cmp	r0, #110	; 0x6e
    7664:	beq	a83c <bt_compidtostr@@Base+0x35f8>
    7668:	bhi	a848 <bt_compidtostr@@Base+0x3604>
    766c:	ldr	r0, [pc, #2536]	; 805c <bt_compidtostr@@Base+0xe18>
    7670:	add	r0, pc, r0
    7674:	bx	lr
    7678:	cmp	r0, #120	; 0x78
    767c:	beq	a854 <bt_compidtostr@@Base+0x3610>
    7680:	bhi	76c0 <bt_compidtostr@@Base+0x47c>
    7684:	cmp	r0, #116	; 0x74
    7688:	beq	a860 <bt_compidtostr@@Base+0x361c>
    768c:	bhi	76a8 <bt_compidtostr@@Base+0x464>
    7690:	cmp	r0, #114	; 0x72
    7694:	beq	a86c <bt_compidtostr@@Base+0x3628>
    7698:	bhi	a878 <bt_compidtostr@@Base+0x3634>
    769c:	ldr	r0, [pc, #2492]	; 8060 <bt_compidtostr@@Base+0xe1c>
    76a0:	add	r0, pc, r0
    76a4:	bx	lr
    76a8:	cmp	r0, #118	; 0x76
    76ac:	beq	a884 <bt_compidtostr@@Base+0x3640>
    76b0:	bhi	a890 <bt_compidtostr@@Base+0x364c>
    76b4:	ldr	r0, [pc, #2472]	; 8064 <bt_compidtostr@@Base+0xe20>
    76b8:	add	r0, pc, r0
    76bc:	bx	lr
    76c0:	cmp	r0, #124	; 0x7c
    76c4:	beq	a89c <bt_compidtostr@@Base+0x3658>
    76c8:	bhi	76e4 <bt_compidtostr@@Base+0x4a0>
    76cc:	cmp	r0, #122	; 0x7a
    76d0:	beq	a8a8 <bt_compidtostr@@Base+0x3664>
    76d4:	bhi	a8b4 <bt_compidtostr@@Base+0x3670>
    76d8:	ldr	r0, [pc, #2440]	; 8068 <bt_compidtostr@@Base+0xe24>
    76dc:	add	r0, pc, r0
    76e0:	bx	lr
    76e4:	cmp	r0, #126	; 0x7e
    76e8:	beq	a8c0 <bt_compidtostr@@Base+0x367c>
    76ec:	bcc	a8cc <bt_compidtostr@@Base+0x3688>
    76f0:	cmp	r0, #127	; 0x7f
    76f4:	beq	a8d8 <bt_compidtostr@@Base+0x3694>
    76f8:	cmp	r0, #128	; 0x80
    76fc:	beq	a8e4 <bt_compidtostr@@Base+0x36a0>
    7700:	ldr	r0, [pc, #2404]	; 806c <bt_compidtostr@@Base+0xe28>
    7704:	add	r0, pc, r0
    7708:	bx	lr
    770c:	cmp	r0, #194	; 0xc2
    7710:	beq	a8f0 <bt_compidtostr@@Base+0x36ac>
    7714:	bhi	795c <bt_compidtostr@@Base+0x718>
    7718:	cmp	r0, #161	; 0xa1
    771c:	beq	a8fc <bt_compidtostr@@Base+0x36b8>
    7720:	bhi	7838 <bt_compidtostr@@Base+0x5f4>
    7724:	cmp	r0, #145	; 0x91
    7728:	beq	a908 <bt_compidtostr@@Base+0x36c4>
    772c:	bhi	77b4 <bt_compidtostr@@Base+0x570>
    7730:	cmp	r0, #137	; 0x89
    7734:	beq	a914 <bt_compidtostr@@Base+0x36d0>
    7738:	bhi	7778 <bt_compidtostr@@Base+0x534>
    773c:	cmp	r0, #133	; 0x85
    7740:	beq	a920 <bt_compidtostr@@Base+0x36dc>
    7744:	bhi	7760 <bt_compidtostr@@Base+0x51c>
    7748:	cmp	r0, #131	; 0x83
    774c:	beq	a92c <bt_compidtostr@@Base+0x36e8>
    7750:	bhi	a938 <bt_compidtostr@@Base+0x36f4>
    7754:	ldr	r0, [pc, #2324]	; 8070 <bt_compidtostr@@Base+0xe2c>
    7758:	add	r0, pc, r0
    775c:	bx	lr
    7760:	cmp	r0, #135	; 0x87
    7764:	beq	a944 <bt_compidtostr@@Base+0x3700>
    7768:	bhi	a950 <bt_compidtostr@@Base+0x370c>
    776c:	ldr	r0, [pc, #2304]	; 8074 <bt_compidtostr@@Base+0xe30>
    7770:	add	r0, pc, r0
    7774:	bx	lr
    7778:	cmp	r0, #141	; 0x8d
    777c:	beq	a95c <bt_compidtostr@@Base+0x3718>
    7780:	bhi	779c <bt_compidtostr@@Base+0x558>
    7784:	cmp	r0, #139	; 0x8b
    7788:	beq	a968 <bt_compidtostr@@Base+0x3724>
    778c:	bhi	a974 <bt_compidtostr@@Base+0x3730>
    7790:	ldr	r0, [pc, #2272]	; 8078 <bt_compidtostr@@Base+0xe34>
    7794:	add	r0, pc, r0
    7798:	bx	lr
    779c:	cmp	r0, #143	; 0x8f
    77a0:	beq	a980 <bt_compidtostr@@Base+0x373c>
    77a4:	bhi	a98c <bt_compidtostr@@Base+0x3748>
    77a8:	ldr	r0, [pc, #2252]	; 807c <bt_compidtostr@@Base+0xe38>
    77ac:	add	r0, pc, r0
    77b0:	bx	lr
    77b4:	cmp	r0, #153	; 0x99
    77b8:	beq	a998 <bt_compidtostr@@Base+0x3754>
    77bc:	bhi	77fc <bt_compidtostr@@Base+0x5b8>
    77c0:	cmp	r0, #149	; 0x95
    77c4:	beq	a9a4 <bt_compidtostr@@Base+0x3760>
    77c8:	bhi	77e4 <bt_compidtostr@@Base+0x5a0>
    77cc:	cmp	r0, #147	; 0x93
    77d0:	beq	a9b0 <bt_compidtostr@@Base+0x376c>
    77d4:	bhi	a9bc <bt_compidtostr@@Base+0x3778>
    77d8:	ldr	r0, [pc, #2208]	; 8080 <bt_compidtostr@@Base+0xe3c>
    77dc:	add	r0, pc, r0
    77e0:	bx	lr
    77e4:	cmp	r0, #151	; 0x97
    77e8:	beq	a9c8 <bt_compidtostr@@Base+0x3784>
    77ec:	bhi	a9d4 <bt_compidtostr@@Base+0x3790>
    77f0:	ldr	r0, [pc, #2188]	; 8084 <bt_compidtostr@@Base+0xe40>
    77f4:	add	r0, pc, r0
    77f8:	bx	lr
    77fc:	cmp	r0, #157	; 0x9d
    7800:	beq	a9e0 <bt_compidtostr@@Base+0x379c>
    7804:	bhi	7820 <bt_compidtostr@@Base+0x5dc>
    7808:	cmp	r0, #155	; 0x9b
    780c:	beq	a9ec <bt_compidtostr@@Base+0x37a8>
    7810:	bhi	a9f8 <bt_compidtostr@@Base+0x37b4>
    7814:	ldr	r0, [pc, #2156]	; 8088 <bt_compidtostr@@Base+0xe44>
    7818:	add	r0, pc, r0
    781c:	bx	lr
    7820:	cmp	r0, #159	; 0x9f
    7824:	beq	aa04 <bt_compidtostr@@Base+0x37c0>
    7828:	bhi	aa10 <bt_compidtostr@@Base+0x37cc>
    782c:	ldr	r0, [pc, #2136]	; 808c <bt_compidtostr@@Base+0xe48>
    7830:	add	r0, pc, r0
    7834:	bx	lr
    7838:	cmp	r0, #177	; 0xb1
    783c:	beq	aa1c <bt_compidtostr@@Base+0x37d8>
    7840:	bhi	78c8 <bt_compidtostr@@Base+0x684>
    7844:	cmp	r0, #169	; 0xa9
    7848:	beq	aa28 <bt_compidtostr@@Base+0x37e4>
    784c:	bhi	788c <bt_compidtostr@@Base+0x648>
    7850:	cmp	r0, #165	; 0xa5
    7854:	beq	aa34 <bt_compidtostr@@Base+0x37f0>
    7858:	bhi	7874 <bt_compidtostr@@Base+0x630>
    785c:	cmp	r0, #163	; 0xa3
    7860:	beq	aa40 <bt_compidtostr@@Base+0x37fc>
    7864:	bhi	aa4c <bt_compidtostr@@Base+0x3808>
    7868:	ldr	r0, [pc, #2080]	; 8090 <bt_compidtostr@@Base+0xe4c>
    786c:	add	r0, pc, r0
    7870:	bx	lr
    7874:	cmp	r0, #167	; 0xa7
    7878:	beq	aa58 <bt_compidtostr@@Base+0x3814>
    787c:	bhi	aa64 <bt_compidtostr@@Base+0x3820>
    7880:	ldr	r0, [pc, #2060]	; 8094 <bt_compidtostr@@Base+0xe50>
    7884:	add	r0, pc, r0
    7888:	bx	lr
    788c:	cmp	r0, #173	; 0xad
    7890:	beq	aa70 <bt_compidtostr@@Base+0x382c>
    7894:	bhi	78b0 <bt_compidtostr@@Base+0x66c>
    7898:	cmp	r0, #171	; 0xab
    789c:	beq	aa7c <bt_compidtostr@@Base+0x3838>
    78a0:	bhi	aa88 <bt_compidtostr@@Base+0x3844>
    78a4:	ldr	r0, [pc, #2028]	; 8098 <bt_compidtostr@@Base+0xe54>
    78a8:	add	r0, pc, r0
    78ac:	bx	lr
    78b0:	cmp	r0, #175	; 0xaf
    78b4:	beq	aa94 <bt_compidtostr@@Base+0x3850>
    78b8:	bhi	aaa0 <bt_compidtostr@@Base+0x385c>
    78bc:	ldr	r0, [pc, #2008]	; 809c <bt_compidtostr@@Base+0xe58>
    78c0:	add	r0, pc, r0
    78c4:	bx	lr
    78c8:	cmp	r0, #185	; 0xb9
    78cc:	beq	aaac <bt_compidtostr@@Base+0x3868>
    78d0:	bhi	7910 <bt_compidtostr@@Base+0x6cc>
    78d4:	cmp	r0, #181	; 0xb5
    78d8:	beq	aab8 <bt_compidtostr@@Base+0x3874>
    78dc:	bhi	78f8 <bt_compidtostr@@Base+0x6b4>
    78e0:	cmp	r0, #179	; 0xb3
    78e4:	beq	aac4 <bt_compidtostr@@Base+0x3880>
    78e8:	bhi	aad0 <bt_compidtostr@@Base+0x388c>
    78ec:	ldr	r0, [pc, #1964]	; 80a0 <bt_compidtostr@@Base+0xe5c>
    78f0:	add	r0, pc, r0
    78f4:	bx	lr
    78f8:	cmp	r0, #183	; 0xb7
    78fc:	beq	aadc <bt_compidtostr@@Base+0x3898>
    7900:	bhi	aae8 <bt_compidtostr@@Base+0x38a4>
    7904:	ldr	r0, [pc, #1944]	; 80a4 <bt_compidtostr@@Base+0xe60>
    7908:	add	r0, pc, r0
    790c:	bx	lr
    7910:	cmp	r0, #189	; 0xbd
    7914:	beq	aaf4 <bt_compidtostr@@Base+0x38b0>
    7918:	bhi	7934 <bt_compidtostr@@Base+0x6f0>
    791c:	cmp	r0, #187	; 0xbb
    7920:	beq	ab00 <bt_compidtostr@@Base+0x38bc>
    7924:	bhi	ab0c <bt_compidtostr@@Base+0x38c8>
    7928:	ldr	r0, [pc, #1912]	; 80a8 <bt_compidtostr@@Base+0xe64>
    792c:	add	r0, pc, r0
    7930:	bx	lr
    7934:	cmp	r0, #191	; 0xbf
    7938:	beq	ab18 <bt_compidtostr@@Base+0x38d4>
    793c:	bcc	ab24 <bt_compidtostr@@Base+0x38e0>
    7940:	cmp	r0, #192	; 0xc0
    7944:	beq	ab30 <bt_compidtostr@@Base+0x38ec>
    7948:	cmp	r0, #193	; 0xc1
    794c:	beq	ab3c <bt_compidtostr@@Base+0x38f8>
    7950:	ldr	r0, [pc, #1876]	; 80ac <bt_compidtostr@@Base+0xe68>
    7954:	add	r0, pc, r0
    7958:	bx	lr
    795c:	cmp	r0, #226	; 0xe2
    7960:	beq	ab48 <bt_compidtostr@@Base+0x3904>
    7964:	bhi	7a7c <bt_compidtostr@@Base+0x838>
    7968:	cmp	r0, #210	; 0xd2
    796c:	beq	ab54 <bt_compidtostr@@Base+0x3910>
    7970:	bhi	79f8 <bt_compidtostr@@Base+0x7b4>
    7974:	cmp	r0, #202	; 0xca
    7978:	beq	ab60 <bt_compidtostr@@Base+0x391c>
    797c:	bhi	79bc <bt_compidtostr@@Base+0x778>
    7980:	cmp	r0, #198	; 0xc6
    7984:	beq	ab6c <bt_compidtostr@@Base+0x3928>
    7988:	bhi	79a4 <bt_compidtostr@@Base+0x760>
    798c:	cmp	r0, #196	; 0xc4
    7990:	beq	ab78 <bt_compidtostr@@Base+0x3934>
    7994:	bhi	ab84 <bt_compidtostr@@Base+0x3940>
    7998:	ldr	r0, [pc, #1808]	; 80b0 <bt_compidtostr@@Base+0xe6c>
    799c:	add	r0, pc, r0
    79a0:	bx	lr
    79a4:	cmp	r0, #200	; 0xc8
    79a8:	beq	ab90 <bt_compidtostr@@Base+0x394c>
    79ac:	bhi	ab9c <bt_compidtostr@@Base+0x3958>
    79b0:	ldr	r0, [pc, #1788]	; 80b4 <bt_compidtostr@@Base+0xe70>
    79b4:	add	r0, pc, r0
    79b8:	bx	lr
    79bc:	cmp	r0, #206	; 0xce
    79c0:	beq	aba8 <bt_compidtostr@@Base+0x3964>
    79c4:	bhi	79e0 <bt_compidtostr@@Base+0x79c>
    79c8:	cmp	r0, #204	; 0xcc
    79cc:	beq	abb4 <bt_compidtostr@@Base+0x3970>
    79d0:	bhi	abc0 <bt_compidtostr@@Base+0x397c>
    79d4:	ldr	r0, [pc, #1756]	; 80b8 <bt_compidtostr@@Base+0xe74>
    79d8:	add	r0, pc, r0
    79dc:	bx	lr
    79e0:	cmp	r0, #208	; 0xd0
    79e4:	beq	abcc <bt_compidtostr@@Base+0x3988>
    79e8:	bhi	abd8 <bt_compidtostr@@Base+0x3994>
    79ec:	ldr	r0, [pc, #1736]	; 80bc <bt_compidtostr@@Base+0xe78>
    79f0:	add	r0, pc, r0
    79f4:	bx	lr
    79f8:	cmp	r0, #218	; 0xda
    79fc:	beq	abe4 <bt_compidtostr@@Base+0x39a0>
    7a00:	bhi	7a40 <bt_compidtostr@@Base+0x7fc>
    7a04:	cmp	r0, #214	; 0xd6
    7a08:	beq	abf0 <bt_compidtostr@@Base+0x39ac>
    7a0c:	bhi	7a28 <bt_compidtostr@@Base+0x7e4>
    7a10:	cmp	r0, #212	; 0xd4
    7a14:	beq	abfc <bt_compidtostr@@Base+0x39b8>
    7a18:	bhi	ac08 <bt_compidtostr@@Base+0x39c4>
    7a1c:	ldr	r0, [pc, #1692]	; 80c0 <bt_compidtostr@@Base+0xe7c>
    7a20:	add	r0, pc, r0
    7a24:	bx	lr
    7a28:	cmp	r0, #216	; 0xd8
    7a2c:	beq	ac14 <bt_compidtostr@@Base+0x39d0>
    7a30:	bhi	ac20 <bt_compidtostr@@Base+0x39dc>
    7a34:	ldr	r0, [pc, #1672]	; 80c4 <bt_compidtostr@@Base+0xe80>
    7a38:	add	r0, pc, r0
    7a3c:	bx	lr
    7a40:	cmp	r0, #222	; 0xde
    7a44:	beq	ac2c <bt_compidtostr@@Base+0x39e8>
    7a48:	bhi	7a64 <bt_compidtostr@@Base+0x820>
    7a4c:	cmp	r0, #220	; 0xdc
    7a50:	beq	ac38 <bt_compidtostr@@Base+0x39f4>
    7a54:	bhi	ac44 <bt_compidtostr@@Base+0x3a00>
    7a58:	ldr	r0, [pc, #1640]	; 80c8 <bt_compidtostr@@Base+0xe84>
    7a5c:	add	r0, pc, r0
    7a60:	bx	lr
    7a64:	cmp	r0, #224	; 0xe0
    7a68:	beq	ac50 <bt_compidtostr@@Base+0x3a0c>
    7a6c:	bhi	ac5c <bt_compidtostr@@Base+0x3a18>
    7a70:	ldr	r0, [pc, #1620]	; 80cc <bt_compidtostr@@Base+0xe88>
    7a74:	add	r0, pc, r0
    7a78:	bx	lr
    7a7c:	cmp	r0, #242	; 0xf2
    7a80:	beq	ac68 <bt_compidtostr@@Base+0x3a24>
    7a84:	bhi	7b0c <bt_compidtostr@@Base+0x8c8>
    7a88:	cmp	r0, #234	; 0xea
    7a8c:	beq	ac74 <bt_compidtostr@@Base+0x3a30>
    7a90:	bhi	7ad0 <bt_compidtostr@@Base+0x88c>
    7a94:	cmp	r0, #230	; 0xe6
    7a98:	beq	ac80 <bt_compidtostr@@Base+0x3a3c>
    7a9c:	bhi	7ab8 <bt_compidtostr@@Base+0x874>
    7aa0:	cmp	r0, #228	; 0xe4
    7aa4:	beq	ac8c <bt_compidtostr@@Base+0x3a48>
    7aa8:	bhi	ac98 <bt_compidtostr@@Base+0x3a54>
    7aac:	ldr	r0, [pc, #1564]	; 80d0 <bt_compidtostr@@Base+0xe8c>
    7ab0:	add	r0, pc, r0
    7ab4:	bx	lr
    7ab8:	cmp	r0, #232	; 0xe8
    7abc:	beq	aca4 <bt_compidtostr@@Base+0x3a60>
    7ac0:	bhi	acb0 <bt_compidtostr@@Base+0x3a6c>
    7ac4:	ldr	r0, [pc, #1544]	; 80d4 <bt_compidtostr@@Base+0xe90>
    7ac8:	add	r0, pc, r0
    7acc:	bx	lr
    7ad0:	cmp	r0, #238	; 0xee
    7ad4:	beq	acbc <bt_compidtostr@@Base+0x3a78>
    7ad8:	bhi	7af4 <bt_compidtostr@@Base+0x8b0>
    7adc:	cmp	r0, #236	; 0xec
    7ae0:	beq	acc8 <bt_compidtostr@@Base+0x3a84>
    7ae4:	bhi	acd4 <bt_compidtostr@@Base+0x3a90>
    7ae8:	ldr	r0, [pc, #1512]	; 80d8 <bt_compidtostr@@Base+0xe94>
    7aec:	add	r0, pc, r0
    7af0:	bx	lr
    7af4:	cmp	r0, #240	; 0xf0
    7af8:	beq	ace0 <bt_compidtostr@@Base+0x3a9c>
    7afc:	bhi	acec <bt_compidtostr@@Base+0x3aa8>
    7b00:	ldr	r0, [pc, #1492]	; 80dc <bt_compidtostr@@Base+0xe98>
    7b04:	add	r0, pc, r0
    7b08:	bx	lr
    7b0c:	cmp	r0, #250	; 0xfa
    7b10:	beq	acf8 <bt_compidtostr@@Base+0x3ab4>
    7b14:	bhi	7b54 <bt_compidtostr@@Base+0x910>
    7b18:	cmp	r0, #246	; 0xf6
    7b1c:	beq	ad04 <bt_compidtostr@@Base+0x3ac0>
    7b20:	bhi	7b3c <bt_compidtostr@@Base+0x8f8>
    7b24:	cmp	r0, #244	; 0xf4
    7b28:	beq	ad10 <bt_compidtostr@@Base+0x3acc>
    7b2c:	bhi	ad1c <bt_compidtostr@@Base+0x3ad8>
    7b30:	ldr	r0, [pc, #1448]	; 80e0 <bt_compidtostr@@Base+0xe9c>
    7b34:	add	r0, pc, r0
    7b38:	bx	lr
    7b3c:	cmp	r0, #248	; 0xf8
    7b40:	beq	ad28 <bt_compidtostr@@Base+0x3ae4>
    7b44:	bhi	ad34 <bt_compidtostr@@Base+0x3af0>
    7b48:	ldr	r0, [pc, #1428]	; 80e4 <bt_compidtostr@@Base+0xea0>
    7b4c:	add	r0, pc, r0
    7b50:	bx	lr
    7b54:	cmp	r0, #254	; 0xfe
    7b58:	beq	ad40 <bt_compidtostr@@Base+0x3afc>
    7b5c:	bhi	7b78 <bt_compidtostr@@Base+0x934>
    7b60:	cmp	r0, #252	; 0xfc
    7b64:	beq	ad4c <bt_compidtostr@@Base+0x3b08>
    7b68:	bhi	ad58 <bt_compidtostr@@Base+0x3b14>
    7b6c:	ldr	r0, [pc, #1396]	; 80e8 <bt_compidtostr@@Base+0xea4>
    7b70:	add	r0, pc, r0
    7b74:	bx	lr
    7b78:	cmp	r0, #256	; 0x100
    7b7c:	beq	ad64 <bt_compidtostr@@Base+0x3b20>
    7b80:	bcc	ad70 <bt_compidtostr@@Base+0x3b2c>
    7b84:	movw	r3, #257	; 0x101
    7b88:	cmp	r0, r3
    7b8c:	beq	ad7c <bt_compidtostr@@Base+0x3b38>
    7b90:	movw	r3, #258	; 0x102
    7b94:	cmp	r0, r3
    7b98:	beq	ad88 <bt_compidtostr@@Base+0x3b44>
    7b9c:	ldr	r0, [pc, #1352]	; 80ec <bt_compidtostr@@Base+0xea8>
    7ba0:	add	r0, pc, r0
    7ba4:	bx	lr
    7ba8:	movw	r3, #389	; 0x185
    7bac:	cmp	r0, r3
    7bb0:	beq	ad94 <bt_compidtostr@@Base+0x3b50>
    7bb4:	bhi	83e4 <bt_compidtostr@@Base+0x11a0>
    7bb8:	cmp	r0, #324	; 0x144
    7bbc:	beq	ada0 <bt_compidtostr@@Base+0x3b5c>
    7bc0:	bhi	7ecc <bt_compidtostr@@Base+0xc88>
    7bc4:	movw	r3, #291	; 0x123
    7bc8:	cmp	r0, r3
    7bcc:	beq	adac <bt_compidtostr@@Base+0x3b68>
    7bd0:	cmp	r0, #292	; 0x124
    7bd4:	bcs	7d44 <bt_compidtostr@@Base+0xb00>
    7bd8:	movw	r3, #275	; 0x113
    7bdc:	cmp	r0, r3
    7be0:	beq	adb8 <bt_compidtostr@@Base+0x3b74>
    7be4:	cmp	r0, #276	; 0x114
    7be8:	bcs	7c98 <bt_compidtostr@@Base+0xa54>
    7bec:	movw	r3, #267	; 0x10b
    7bf0:	cmp	r0, r3
    7bf4:	beq	adc4 <bt_compidtostr@@Base+0x3b80>
    7bf8:	cmp	r0, #268	; 0x10c
    7bfc:	bcs	7c4c <bt_compidtostr@@Base+0xa08>
    7c00:	movw	r3, #263	; 0x107
    7c04:	cmp	r0, r3
    7c08:	beq	add0 <bt_compidtostr@@Base+0x3b8c>
    7c0c:	cmp	r0, #264	; 0x108
    7c10:	bcs	7c30 <bt_compidtostr@@Base+0x9ec>
    7c14:	movw	r3, #261	; 0x105
    7c18:	cmp	r0, r3
    7c1c:	beq	addc <bt_compidtostr@@Base+0x3b98>
    7c20:	bhi	ade8 <bt_compidtostr@@Base+0x3ba4>
    7c24:	ldr	r0, [pc, #1220]	; 80f0 <bt_compidtostr@@Base+0xeac>
    7c28:	add	r0, pc, r0
    7c2c:	bx	lr
    7c30:	movw	r3, #265	; 0x109
    7c34:	cmp	r0, r3
    7c38:	beq	adf4 <bt_compidtostr@@Base+0x3bb0>
    7c3c:	bhi	ae00 <bt_compidtostr@@Base+0x3bbc>
    7c40:	ldr	r0, [pc, #1196]	; 80f4 <bt_compidtostr@@Base+0xeb0>
    7c44:	add	r0, pc, r0
    7c48:	bx	lr
    7c4c:	movw	r3, #271	; 0x10f
    7c50:	cmp	r0, r3
    7c54:	beq	ae0c <bt_compidtostr@@Base+0x3bc8>
    7c58:	cmp	r0, #272	; 0x110
    7c5c:	bcs	7c7c <bt_compidtostr@@Base+0xa38>
    7c60:	movw	r3, #269	; 0x10d
    7c64:	cmp	r0, r3
    7c68:	beq	ae18 <bt_compidtostr@@Base+0x3bd4>
    7c6c:	bhi	ae24 <bt_compidtostr@@Base+0x3be0>
    7c70:	ldr	r0, [pc, #1152]	; 80f8 <bt_compidtostr@@Base+0xeb4>
    7c74:	add	r0, pc, r0
    7c78:	bx	lr
    7c7c:	movw	r3, #273	; 0x111
    7c80:	cmp	r0, r3
    7c84:	beq	ae30 <bt_compidtostr@@Base+0x3bec>
    7c88:	bhi	ae3c <bt_compidtostr@@Base+0x3bf8>
    7c8c:	ldr	r0, [pc, #1128]	; 80fc <bt_compidtostr@@Base+0xeb8>
    7c90:	add	r0, pc, r0
    7c94:	bx	lr
    7c98:	movw	r3, #283	; 0x11b
    7c9c:	cmp	r0, r3
    7ca0:	beq	ae48 <bt_compidtostr@@Base+0x3c04>
    7ca4:	cmp	r0, #284	; 0x11c
    7ca8:	bcs	7cf8 <bt_compidtostr@@Base+0xab4>
    7cac:	movw	r3, #279	; 0x117
    7cb0:	cmp	r0, r3
    7cb4:	beq	ae54 <bt_compidtostr@@Base+0x3c10>
    7cb8:	cmp	r0, #280	; 0x118
    7cbc:	bcs	7cdc <bt_compidtostr@@Base+0xa98>
    7cc0:	movw	r3, #277	; 0x115
    7cc4:	cmp	r0, r3
    7cc8:	beq	ae60 <bt_compidtostr@@Base+0x3c1c>
    7ccc:	bhi	ae6c <bt_compidtostr@@Base+0x3c28>
    7cd0:	ldr	r0, [pc, #1064]	; 8100 <bt_compidtostr@@Base+0xebc>
    7cd4:	add	r0, pc, r0
    7cd8:	bx	lr
    7cdc:	movw	r3, #281	; 0x119
    7ce0:	cmp	r0, r3
    7ce4:	beq	ae78 <bt_compidtostr@@Base+0x3c34>
    7ce8:	bhi	ae84 <bt_compidtostr@@Base+0x3c40>
    7cec:	ldr	r0, [pc, #1040]	; 8104 <bt_compidtostr@@Base+0xec0>
    7cf0:	add	r0, pc, r0
    7cf4:	bx	lr
    7cf8:	movw	r3, #287	; 0x11f
    7cfc:	cmp	r0, r3
    7d00:	beq	ae90 <bt_compidtostr@@Base+0x3c4c>
    7d04:	cmp	r0, #288	; 0x120
    7d08:	bcs	7d28 <bt_compidtostr@@Base+0xae4>
    7d0c:	movw	r3, #285	; 0x11d
    7d10:	cmp	r0, r3
    7d14:	beq	ae9c <bt_compidtostr@@Base+0x3c58>
    7d18:	bhi	aea8 <bt_compidtostr@@Base+0x3c64>
    7d1c:	ldr	r0, [pc, #996]	; 8108 <bt_compidtostr@@Base+0xec4>
    7d20:	add	r0, pc, r0
    7d24:	bx	lr
    7d28:	movw	r3, #289	; 0x121
    7d2c:	cmp	r0, r3
    7d30:	beq	aeb4 <bt_compidtostr@@Base+0x3c70>
    7d34:	bhi	aec0 <bt_compidtostr@@Base+0x3c7c>
    7d38:	ldr	r0, [pc, #972]	; 810c <bt_compidtostr@@Base+0xec8>
    7d3c:	add	r0, pc, r0
    7d40:	bx	lr
    7d44:	movw	r3, #307	; 0x133
    7d48:	cmp	r0, r3
    7d4c:	beq	aecc <bt_compidtostr@@Base+0x3c88>
    7d50:	cmp	r0, #308	; 0x134
    7d54:	bcs	7e04 <bt_compidtostr@@Base+0xbc0>
    7d58:	movw	r3, #299	; 0x12b
    7d5c:	cmp	r0, r3
    7d60:	beq	aed8 <bt_compidtostr@@Base+0x3c94>
    7d64:	cmp	r0, #300	; 0x12c
    7d68:	bcs	7db8 <bt_compidtostr@@Base+0xb74>
    7d6c:	movw	r3, #295	; 0x127
    7d70:	cmp	r0, r3
    7d74:	beq	aee4 <bt_compidtostr@@Base+0x3ca0>
    7d78:	cmp	r0, #296	; 0x128
    7d7c:	bcs	7d9c <bt_compidtostr@@Base+0xb58>
    7d80:	movw	r3, #293	; 0x125
    7d84:	cmp	r0, r3
    7d88:	beq	aef0 <bt_compidtostr@@Base+0x3cac>
    7d8c:	bhi	aefc <bt_compidtostr@@Base+0x3cb8>
    7d90:	ldr	r0, [pc, #888]	; 8110 <bt_compidtostr@@Base+0xecc>
    7d94:	add	r0, pc, r0
    7d98:	bx	lr
    7d9c:	movw	r3, #297	; 0x129
    7da0:	cmp	r0, r3
    7da4:	beq	af08 <bt_compidtostr@@Base+0x3cc4>
    7da8:	bhi	af14 <bt_compidtostr@@Base+0x3cd0>
    7dac:	ldr	r0, [pc, #864]	; 8114 <bt_compidtostr@@Base+0xed0>
    7db0:	add	r0, pc, r0
    7db4:	bx	lr
    7db8:	movw	r3, #303	; 0x12f
    7dbc:	cmp	r0, r3
    7dc0:	beq	af20 <bt_compidtostr@@Base+0x3cdc>
    7dc4:	cmp	r0, #304	; 0x130
    7dc8:	bcs	7de8 <bt_compidtostr@@Base+0xba4>
    7dcc:	movw	r3, #301	; 0x12d
    7dd0:	cmp	r0, r3
    7dd4:	beq	af2c <bt_compidtostr@@Base+0x3ce8>
    7dd8:	bhi	af38 <bt_compidtostr@@Base+0x3cf4>
    7ddc:	ldr	r0, [pc, #820]	; 8118 <bt_compidtostr@@Base+0xed4>
    7de0:	add	r0, pc, r0
    7de4:	bx	lr
    7de8:	movw	r3, #305	; 0x131
    7dec:	cmp	r0, r3
    7df0:	beq	af44 <bt_compidtostr@@Base+0x3d00>
    7df4:	bhi	af50 <bt_compidtostr@@Base+0x3d0c>
    7df8:	ldr	r0, [pc, #796]	; 811c <bt_compidtostr@@Base+0xed8>
    7dfc:	add	r0, pc, r0
    7e00:	bx	lr
    7e04:	movw	r3, #315	; 0x13b
    7e08:	cmp	r0, r3
    7e0c:	beq	af5c <bt_compidtostr@@Base+0x3d18>
    7e10:	cmp	r0, #316	; 0x13c
    7e14:	bcs	7e64 <bt_compidtostr@@Base+0xc20>
    7e18:	movw	r3, #311	; 0x137
    7e1c:	cmp	r0, r3
    7e20:	beq	af68 <bt_compidtostr@@Base+0x3d24>
    7e24:	cmp	r0, #312	; 0x138
    7e28:	bcs	7e48 <bt_compidtostr@@Base+0xc04>
    7e2c:	movw	r3, #309	; 0x135
    7e30:	cmp	r0, r3
    7e34:	beq	af74 <bt_compidtostr@@Base+0x3d30>
    7e38:	bhi	af80 <bt_compidtostr@@Base+0x3d3c>
    7e3c:	ldr	r0, [pc, #732]	; 8120 <bt_compidtostr@@Base+0xedc>
    7e40:	add	r0, pc, r0
    7e44:	bx	lr
    7e48:	movw	r3, #313	; 0x139
    7e4c:	cmp	r0, r3
    7e50:	beq	af8c <bt_compidtostr@@Base+0x3d48>
    7e54:	bhi	af98 <bt_compidtostr@@Base+0x3d54>
    7e58:	ldr	r0, [pc, #708]	; 8124 <bt_compidtostr@@Base+0xee0>
    7e5c:	add	r0, pc, r0
    7e60:	bx	lr
    7e64:	movw	r3, #319	; 0x13f
    7e68:	cmp	r0, r3
    7e6c:	beq	afa4 <bt_compidtostr@@Base+0x3d60>
    7e70:	cmp	r0, #320	; 0x140
    7e74:	bcs	7e94 <bt_compidtostr@@Base+0xc50>
    7e78:	movw	r3, #317	; 0x13d
    7e7c:	cmp	r0, r3
    7e80:	beq	afb0 <bt_compidtostr@@Base+0x3d6c>
    7e84:	bhi	afbc <bt_compidtostr@@Base+0x3d78>
    7e88:	ldr	r0, [pc, #664]	; 8128 <bt_compidtostr@@Base+0xee4>
    7e8c:	add	r0, pc, r0
    7e90:	bx	lr
    7e94:	movw	r3, #321	; 0x141
    7e98:	cmp	r0, r3
    7e9c:	beq	afc8 <bt_compidtostr@@Base+0x3d84>
    7ea0:	cmp	r0, #320	; 0x140
    7ea4:	bls	afd4 <bt_compidtostr@@Base+0x3d90>
    7ea8:	movw	r3, #322	; 0x142
    7eac:	cmp	r0, r3
    7eb0:	beq	afe0 <bt_compidtostr@@Base+0x3d9c>
    7eb4:	movw	r3, #323	; 0x143
    7eb8:	cmp	r0, r3
    7ebc:	beq	afec <bt_compidtostr@@Base+0x3da8>
    7ec0:	ldr	r0, [pc, #612]	; 812c <bt_compidtostr@@Base+0xee8>
    7ec4:	add	r0, pc, r0
    7ec8:	bx	lr
    7ecc:	cmp	r0, #356	; 0x164
    7ed0:	beq	aff8 <bt_compidtostr@@Base+0x3db4>
    7ed4:	bhi	829c <bt_compidtostr@@Base+0x1058>
    7ed8:	cmp	r0, #340	; 0x154
    7edc:	beq	b004 <bt_compidtostr@@Base+0x3dc0>
    7ee0:	bhi	7f78 <bt_compidtostr@@Base+0xd34>
    7ee4:	cmp	r0, #332	; 0x14c
    7ee8:	beq	b010 <bt_compidtostr@@Base+0x3dcc>
    7eec:	bhi	7f34 <bt_compidtostr@@Base+0xcf0>
    7ef0:	cmp	r0, #328	; 0x148
    7ef4:	beq	b01c <bt_compidtostr@@Base+0x3dd8>
    7ef8:	bhi	7f18 <bt_compidtostr@@Base+0xcd4>
    7efc:	movw	r3, #326	; 0x146
    7f00:	cmp	r0, r3
    7f04:	beq	b028 <bt_compidtostr@@Base+0x3de4>
    7f08:	bhi	b034 <bt_compidtostr@@Base+0x3df0>
    7f0c:	ldr	r0, [pc, #540]	; 8130 <bt_compidtostr@@Base+0xeec>
    7f10:	add	r0, pc, r0
    7f14:	bx	lr
    7f18:	movw	r3, #330	; 0x14a
    7f1c:	cmp	r0, r3
    7f20:	beq	b040 <bt_compidtostr@@Base+0x3dfc>
    7f24:	bhi	b04c <bt_compidtostr@@Base+0x3e08>
    7f28:	ldr	r0, [pc, #516]	; 8134 <bt_compidtostr@@Base+0xef0>
    7f2c:	add	r0, pc, r0
    7f30:	bx	lr
    7f34:	cmp	r0, #336	; 0x150
    7f38:	beq	b058 <bt_compidtostr@@Base+0x3e14>
    7f3c:	bhi	7f5c <bt_compidtostr@@Base+0xd18>
    7f40:	movw	r3, #334	; 0x14e
    7f44:	cmp	r0, r3
    7f48:	beq	b064 <bt_compidtostr@@Base+0x3e20>
    7f4c:	bhi	b070 <bt_compidtostr@@Base+0x3e2c>
    7f50:	ldr	r0, [pc, #480]	; 8138 <bt_compidtostr@@Base+0xef4>
    7f54:	add	r0, pc, r0
    7f58:	bx	lr
    7f5c:	movw	r3, #338	; 0x152
    7f60:	cmp	r0, r3
    7f64:	beq	b07c <bt_compidtostr@@Base+0x3e38>
    7f68:	bhi	b088 <bt_compidtostr@@Base+0x3e44>
    7f6c:	ldr	r0, [pc, #456]	; 813c <bt_compidtostr@@Base+0xef8>
    7f70:	add	r0, pc, r0
    7f74:	bx	lr
    7f78:	cmp	r0, #348	; 0x15c
    7f7c:	beq	b094 <bt_compidtostr@@Base+0x3e50>
    7f80:	bhi	7fc8 <bt_compidtostr@@Base+0xd84>
    7f84:	cmp	r0, #344	; 0x158
    7f88:	beq	b0a0 <bt_compidtostr@@Base+0x3e5c>
    7f8c:	bhi	7fac <bt_compidtostr@@Base+0xd68>
    7f90:	movw	r3, #342	; 0x156
    7f94:	cmp	r0, r3
    7f98:	beq	b0ac <bt_compidtostr@@Base+0x3e68>
    7f9c:	bhi	b0b8 <bt_compidtostr@@Base+0x3e74>
    7fa0:	ldr	r0, [pc, #408]	; 8140 <bt_compidtostr@@Base+0xefc>
    7fa4:	add	r0, pc, r0
    7fa8:	bx	lr
    7fac:	movw	r3, #346	; 0x15a
    7fb0:	cmp	r0, r3
    7fb4:	beq	b0c4 <bt_compidtostr@@Base+0x3e80>
    7fb8:	bhi	b0d0 <bt_compidtostr@@Base+0x3e8c>
    7fbc:	ldr	r0, [pc, #384]	; 8144 <bt_compidtostr@@Base+0xf00>
    7fc0:	add	r0, pc, r0
    7fc4:	bx	lr
    7fc8:	cmp	r0, #352	; 0x160
    7fcc:	beq	b0dc <bt_compidtostr@@Base+0x3e98>
    7fd0:	bhi	8280 <bt_compidtostr@@Base+0x103c>
    7fd4:	movw	r3, #350	; 0x15e
    7fd8:	cmp	r0, r3
    7fdc:	beq	b0e8 <bt_compidtostr@@Base+0x3ea4>
    7fe0:	bhi	b0f4 <bt_compidtostr@@Base+0x3eb0>
    7fe4:	ldr	r0, [pc, #348]	; 8148 <bt_compidtostr@@Base+0xf04>
    7fe8:	add	r0, pc, r0
    7fec:	bx	lr
    7ff0:	andeq	sl, r0, sl, lsr #19
    7ff4:	andeq	sl, r0, r6, asr #19
    7ff8:	andeq	sl, r0, r6, asr #19
    7ffc:	strdeq	sl, [r0], -r5
    8000:	andeq	sl, r0, r1, lsr sl
    8004:	andeq	sl, r0, r8, asr sl
    8008:	andeq	sl, r0, r0, lsl #21
    800c:	andeq	sl, r0, r0, asr #21
    8010:			; <UNDEFINED> instruction: 0x0000aab7
    8014:	andeq	sl, r0, sl, ror #21
    8018:	andeq	sl, r0, r1, lsr #22
    801c:	andeq	sl, r0, r9, asr #22
    8020:	andeq	sl, r0, r2, ror fp
    8024:	andeq	sl, r0, r3, lsr #23
    8028:	strdeq	sl, [r0], -fp
    802c:	andeq	sl, r0, r1, lsr #15
    8030:	andeq	sl, r0, r3, ror ip
    8034:			; <UNDEFINED> instruction: 0x0000acbf
    8038:	andeq	sl, r0, lr, ror #25
    803c:	andeq	sl, r0, fp, lsr #26
    8040:	andeq	sl, r0, pc, asr #26
    8044:	andeq	sl, r0, r0, lsl #27
    8048:	andeq	sl, r0, r4, asr #27
    804c:	andeq	sl, r0, sl, lsl lr
    8050:	andeq	sl, r0, r8, lsr lr
    8054:	andeq	sl, r0, lr, ror #28
    8058:	andeq	sl, r0, sp, lsl #29
    805c:	andeq	sl, r0, r9, asr #29
    8060:	ldrdeq	sl, [r0], -pc	; <UNPREDICTABLE>
    8064:	andeq	sl, r0, fp, lsl pc
    8068:	andeq	sl, r0, fp, asr #30
    806c:	andeq	sl, r0, sp, asr r5
    8070:	muleq	r0, r2, pc	; <UNPREDICTABLE>
    8074:	ldrdeq	sl, [r0], -r7
    8078:	strdeq	sl, [r0], -r0
    807c:	andeq	fp, r0, lr, asr r0
    8080:	strheq	fp, [r0], -r8
    8084:	strdeq	fp, [r0], -r9
    8088:	andeq	fp, r0, r4, lsr r1
    808c:	andeq	fp, r0, r2, ror r1
    8090:	andeq	fp, r0, r9, lsl #3
    8094:			; <UNDEFINED> instruction: 0x0000b1b6
    8098:	andeq	fp, r0, r1, ror #3
    809c:	andeq	fp, r0, r6, lsr #4
    80a0:	andeq	fp, r0, lr, lsr r2
    80a4:	andeq	fp, r0, r8, ror r2
    80a8:			; <UNDEFINED> instruction: 0x0000b2b1
    80ac:	andeq	sl, r0, sp, lsl #6
    80b0:	andeq	fp, r0, sl, lsl r3
    80b4:	andeq	fp, r0, r0, asr #6
    80b8:	andeq	fp, r0, ip, lsr r3
    80bc:	andeq	fp, r0, r0, ror r3
    80c0:	andeq	fp, r0, fp, lsl #7
    80c4:	ldrdeq	fp, [r0], -r6
    80c8:	andeq	fp, r0, r2, lsl r4
    80cc:	andeq	fp, r0, r7, lsr r4
    80d0:	andeq	fp, r0, r1, lsr r4
    80d4:	andeq	fp, r0, r9, ror #8
    80d8:	muleq	r0, r0, r4
    80dc:	ldrdeq	fp, [r0], -r5
    80e0:	andeq	fp, r0, pc, lsl #10
    80e4:	andeq	fp, r0, r8, lsr r5
    80e8:	andeq	fp, r0, r8, asr r5
    80ec:	andeq	sl, r0, r1, asr #1
    80f0:	andeq	fp, r0, r0, lsr r5
    80f4:	muleq	r0, r8, r5
    80f8:	andeq	fp, r0, r6, lsr #11
    80fc:	ldrdeq	fp, [r0], -pc	; <UNPREDICTABLE>
    8100:	strdeq	fp, [r0], -r0
    8104:	andeq	fp, r0, r0, lsl r6
    8108:	andeq	fp, r0, r3, lsr r6
    810c:	andeq	fp, r0, r5, asr #12
    8110:	andeq	fp, r0, lr, lsr #12
    8114:	andeq	fp, r0, pc, asr #12
    8118:	andeq	fp, r0, pc, ror #12
    811c:	muleq	r0, r8, r6
    8120:	andeq	fp, r0, sl, lsr #13
    8124:	strdeq	fp, [r0], -r4
    8128:	andeq	fp, r0, sl, lsl #14
    812c:	muleq	r0, sp, sp
    8130:	andeq	fp, r0, r5, lsr r7
    8134:	andeq	fp, r0, r8, asr r7
    8138:	andeq	fp, r0, r9, ror #14
    813c:	andeq	fp, r0, r6, lsr #15
    8140:			; <UNDEFINED> instruction: 0x0000b7b2
    8144:	andeq	fp, r0, r7, ror #15
    8148:	andeq	fp, r0, r1, lsl #16
    814c:	muleq	r0, r1, r5
    8150:	andeq	fp, r0, sp, lsr #11
    8154:	strdeq	fp, [r0], -r1
    8158:	strdeq	fp, [r0], -pc	; <UNPREDICTABLE>
    815c:	andeq	fp, r0, r3, lsr #12
    8160:	andeq	fp, r0, sl, asr #12
    8164:	andeq	fp, r0, pc, ror #12
    8168:	andeq	fp, r0, lr, lsl #13
    816c:	andeq	r9, r0, r5, lsl #17
    8170:	andeq	fp, r0, sl, ror r6
    8174:	andeq	fp, r0, r3, lsr #13
    8178:	andeq	fp, r0, r5, asr #13
    817c:	strdeq	fp, [r0], -r1
    8180:	strdeq	fp, [r0], -r8
    8184:	andeq	fp, r0, r6, lsr r7
    8188:	andeq	fp, r0, sl, asr r7
    818c:	andeq	fp, r0, r5, ror r7
    8190:	andeq	fp, r0, fp, ror #14
    8194:	andeq	fp, r0, pc, ror r7
    8198:	andeq	fp, r0, sp, lsr #15
    819c:	andeq	fp, r0, sl, ror #15
    81a0:	andeq	fp, r0, r1, ror #15
    81a4:	andeq	fp, r0, r4, lsl #16
    81a8:	andeq	fp, r0, r9, lsr #16
    81ac:	andeq	r9, r0, r5, ror r5
    81b0:	andeq	fp, r0, pc, lsr r8
    81b4:	andeq	fp, r0, r1, ror #16
    81b8:	andeq	fp, r0, sp, lsl #17
    81bc:	andeq	fp, r0, r8, lsr #17
    81c0:	andeq	fp, r0, r8, lsr #17
    81c4:	andeq	fp, r0, r5, ror #17
    81c8:	andeq	fp, r0, r3, lsr #18
    81cc:	andeq	fp, r0, r0, asr #18
    81d0:	andeq	fp, r0, lr, asr #18
    81d4:	andeq	fp, r0, r6, ror r9
    81d8:	muleq	r0, pc, r9	; <UNPREDICTABLE>
    81dc:	ldrdeq	fp, [r0], -fp	; <UNPREDICTABLE>
    81e0:	strdeq	fp, [r0], -r3
    81e4:	andeq	fp, r0, lr, lsr sl
    81e8:	andeq	fp, r0, r6, ror sl
    81ec:	andeq	r9, r0, sp, ror #5
    81f0:	andeq	fp, r0, pc, asr #20
    81f4:	andeq	fp, r0, sl, ror sl
    81f8:	andeq	fp, r0, r8, lsr #21
    81fc:	andeq	fp, r0, ip, asr #21
    8200:	ldrdeq	fp, [r0], -r2
    8204:	strdeq	fp, [r0], -r5
    8208:	strdeq	fp, [r0], -lr
    820c:	andeq	fp, r0, r6, lsr fp
    8210:	andeq	fp, r0, r3, lsr #22
    8214:	andeq	fp, r0, r2, asr fp
    8218:	andeq	fp, r0, r9, ror fp
    821c:			; <UNDEFINED> instruction: 0x0000bbb9
    8220:			; <UNDEFINED> instruction: 0x0000bbbf
    8224:	strdeq	fp, [r0], -sp
    8228:	andeq	fp, r0, sp, lsl #24
    822c:			; <UNDEFINED> instruction: 0x00008fb5
    8230:	andeq	fp, r0, r4, lsl ip
    8234:	andeq	fp, r0, r1, lsr ip
    8238:	andeq	fp, r0, r0, ror ip
    823c:	muleq	r0, r0, ip
    8240:			; <UNDEFINED> instruction: 0x0000bcb5
    8244:	andeq	fp, r0, r0, lsr #26
    8248:	andeq	fp, r0, r2, asr #26
    824c:	andeq	fp, r0, r5, ror #26
    8250:	andeq	fp, r0, r5, ror #26
    8254:	andeq	fp, r0, r2, lsr #27
    8258:			; <UNDEFINED> instruction: 0x0000bdbc
    825c:	ldrdeq	fp, [r0], -sp
    8260:	strdeq	fp, [r0], -r0
    8264:	andeq	fp, r0, r8, lsl lr
    8268:	andeq	fp, r0, r0, ror #28
    826c:	andeq	r8, r0, sp, lsr #26
    8270:	andeq	fp, r0, fp, asr lr
    8274:	andeq	fp, r0, r8, ror #28
    8278:	andeq	fp, r0, ip, ror lr
    827c:	andeq	fp, r0, ip, lsl #29
    8280:	movw	r3, #354	; 0x162
    8284:	cmp	r0, r3
    8288:	beq	b100 <bt_compidtostr@@Base+0x3ebc>
    828c:	bhi	b10c <bt_compidtostr@@Base+0x3ec8>
    8290:	ldr	r0, [pc, #-332]	; 814c <bt_compidtostr@@Base+0xf08>
    8294:	add	r0, pc, r0
    8298:	bx	lr
    829c:	cmp	r0, #372	; 0x174
    82a0:	beq	b118 <bt_compidtostr@@Base+0x3ed4>
    82a4:	bhi	833c <bt_compidtostr@@Base+0x10f8>
    82a8:	cmp	r0, #364	; 0x16c
    82ac:	beq	b124 <bt_compidtostr@@Base+0x3ee0>
    82b0:	bhi	82f8 <bt_compidtostr@@Base+0x10b4>
    82b4:	cmp	r0, #360	; 0x168
    82b8:	beq	b130 <bt_compidtostr@@Base+0x3eec>
    82bc:	bhi	82dc <bt_compidtostr@@Base+0x1098>
    82c0:	movw	r3, #358	; 0x166
    82c4:	cmp	r0, r3
    82c8:	beq	b13c <bt_compidtostr@@Base+0x3ef8>
    82cc:	bhi	b148 <bt_compidtostr@@Base+0x3f04>
    82d0:	ldr	r0, [pc, #-392]	; 8150 <bt_compidtostr@@Base+0xf0c>
    82d4:	add	r0, pc, r0
    82d8:	bx	lr
    82dc:	movw	r3, #362	; 0x16a
    82e0:	cmp	r0, r3
    82e4:	beq	b154 <bt_compidtostr@@Base+0x3f10>
    82e8:	bhi	b160 <bt_compidtostr@@Base+0x3f1c>
    82ec:	ldr	r0, [pc, #-416]	; 8154 <bt_compidtostr@@Base+0xf10>
    82f0:	add	r0, pc, r0
    82f4:	bx	lr
    82f8:	cmp	r0, #368	; 0x170
    82fc:	beq	b16c <bt_compidtostr@@Base+0x3f28>
    8300:	bhi	8320 <bt_compidtostr@@Base+0x10dc>
    8304:	movw	r3, #366	; 0x16e
    8308:	cmp	r0, r3
    830c:	beq	b178 <bt_compidtostr@@Base+0x3f34>
    8310:	bhi	b184 <bt_compidtostr@@Base+0x3f40>
    8314:	ldr	r0, [pc, #-452]	; 8158 <bt_compidtostr@@Base+0xf14>
    8318:	add	r0, pc, r0
    831c:	bx	lr
    8320:	movw	r3, #370	; 0x172
    8324:	cmp	r0, r3
    8328:	beq	b190 <bt_compidtostr@@Base+0x3f4c>
    832c:	bhi	b19c <bt_compidtostr@@Base+0x3f58>
    8330:	ldr	r0, [pc, #-476]	; 815c <bt_compidtostr@@Base+0xf18>
    8334:	add	r0, pc, r0
    8338:	bx	lr
    833c:	cmp	r0, #380	; 0x17c
    8340:	beq	b1a8 <bt_compidtostr@@Base+0x3f64>
    8344:	bhi	838c <bt_compidtostr@@Base+0x1148>
    8348:	cmp	r0, #376	; 0x178
    834c:	beq	b1b4 <bt_compidtostr@@Base+0x3f70>
    8350:	bhi	8370 <bt_compidtostr@@Base+0x112c>
    8354:	movw	r3, #374	; 0x176
    8358:	cmp	r0, r3
    835c:	beq	b1c0 <bt_compidtostr@@Base+0x3f7c>
    8360:	bhi	b1cc <bt_compidtostr@@Base+0x3f88>
    8364:	ldr	r0, [pc, #-524]	; 8160 <bt_compidtostr@@Base+0xf1c>
    8368:	add	r0, pc, r0
    836c:	bx	lr
    8370:	movw	r3, #378	; 0x17a
    8374:	cmp	r0, r3
    8378:	beq	b1d8 <bt_compidtostr@@Base+0x3f94>
    837c:	bhi	b1e4 <bt_compidtostr@@Base+0x3fa0>
    8380:	ldr	r0, [pc, #-548]	; 8164 <bt_compidtostr@@Base+0xf20>
    8384:	add	r0, pc, r0
    8388:	bx	lr
    838c:	cmp	r0, #384	; 0x180
    8390:	beq	b1f0 <bt_compidtostr@@Base+0x3fac>
    8394:	bhi	83b4 <bt_compidtostr@@Base+0x1170>
    8398:	movw	r3, #382	; 0x17e
    839c:	cmp	r0, r3
    83a0:	beq	b1fc <bt_compidtostr@@Base+0x3fb8>
    83a4:	bhi	b208 <bt_compidtostr@@Base+0x3fc4>
    83a8:	ldr	r0, [pc, #-584]	; 8168 <bt_compidtostr@@Base+0xf24>
    83ac:	add	r0, pc, r0
    83b0:	bx	lr
    83b4:	movw	r3, #386	; 0x182
    83b8:	cmp	r0, r3
    83bc:	beq	b214 <bt_compidtostr@@Base+0x3fd0>
    83c0:	bcc	b220 <bt_compidtostr@@Base+0x3fdc>
    83c4:	movw	r3, #387	; 0x183
    83c8:	cmp	r0, r3
    83cc:	beq	b22c <bt_compidtostr@@Base+0x3fe8>
    83d0:	cmp	r0, #388	; 0x184
    83d4:	beq	b238 <bt_compidtostr@@Base+0x3ff4>
    83d8:	ldr	r0, [pc, #-628]	; 816c <bt_compidtostr@@Base+0xf28>
    83dc:	add	r0, pc, r0
    83e0:	bx	lr
    83e4:	movw	r3, #454	; 0x1c6
    83e8:	cmp	r0, r3
    83ec:	beq	b244 <bt_compidtostr@@Base+0x4000>
    83f0:	bhi	86f4 <bt_compidtostr@@Base+0x14b0>
    83f4:	movw	r3, #421	; 0x1a5
    83f8:	cmp	r0, r3
    83fc:	beq	b250 <bt_compidtostr@@Base+0x400c>
    8400:	bhi	8574 <bt_compidtostr@@Base+0x1330>
    8404:	movw	r3, #405	; 0x195
    8408:	cmp	r0, r3
    840c:	beq	b25c <bt_compidtostr@@Base+0x4018>
    8410:	bhi	84c4 <bt_compidtostr@@Base+0x1280>
    8414:	movw	r3, #397	; 0x18d
    8418:	cmp	r0, r3
    841c:	beq	b268 <bt_compidtostr@@Base+0x4024>
    8420:	bhi	8474 <bt_compidtostr@@Base+0x1230>
    8424:	movw	r3, #393	; 0x189
    8428:	cmp	r0, r3
    842c:	beq	b274 <bt_compidtostr@@Base+0x4030>
    8430:	bhi	8454 <bt_compidtostr@@Base+0x1210>
    8434:	movw	r3, #391	; 0x187
    8438:	cmp	r0, r3
    843c:	beq	b280 <bt_compidtostr@@Base+0x403c>
    8440:	cmp	r0, #392	; 0x188
    8444:	bcs	b28c <bt_compidtostr@@Base+0x4048>
    8448:	ldr	r0, [pc, #-736]	; 8170 <bt_compidtostr@@Base+0xf2c>
    844c:	add	r0, pc, r0
    8450:	bx	lr
    8454:	movw	r3, #395	; 0x18b
    8458:	cmp	r0, r3
    845c:	beq	b298 <bt_compidtostr@@Base+0x4054>
    8460:	cmp	r0, #396	; 0x18c
    8464:	bcs	b2a4 <bt_compidtostr@@Base+0x4060>
    8468:	ldr	r0, [pc, #-764]	; 8174 <bt_compidtostr@@Base+0xf30>
    846c:	add	r0, pc, r0
    8470:	bx	lr
    8474:	movw	r3, #401	; 0x191
    8478:	cmp	r0, r3
    847c:	beq	b2b0 <bt_compidtostr@@Base+0x406c>
    8480:	bhi	84a4 <bt_compidtostr@@Base+0x1260>
    8484:	movw	r3, #399	; 0x18f
    8488:	cmp	r0, r3
    848c:	beq	b2bc <bt_compidtostr@@Base+0x4078>
    8490:	cmp	r0, #400	; 0x190
    8494:	bcs	b2c8 <bt_compidtostr@@Base+0x4084>
    8498:	ldr	r0, [pc, #-808]	; 8178 <bt_compidtostr@@Base+0xf34>
    849c:	add	r0, pc, r0
    84a0:	bx	lr
    84a4:	movw	r3, #403	; 0x193
    84a8:	cmp	r0, r3
    84ac:	beq	b2d4 <bt_compidtostr@@Base+0x4090>
    84b0:	cmp	r0, #404	; 0x194
    84b4:	bcs	b2e0 <bt_compidtostr@@Base+0x409c>
    84b8:	ldr	r0, [pc, #-836]	; 817c <bt_compidtostr@@Base+0xf38>
    84bc:	add	r0, pc, r0
    84c0:	bx	lr
    84c4:	movw	r3, #413	; 0x19d
    84c8:	cmp	r0, r3
    84cc:	beq	b2ec <bt_compidtostr@@Base+0x40a8>
    84d0:	bhi	8524 <bt_compidtostr@@Base+0x12e0>
    84d4:	movw	r3, #409	; 0x199
    84d8:	cmp	r0, r3
    84dc:	beq	b2f8 <bt_compidtostr@@Base+0x40b4>
    84e0:	bhi	8504 <bt_compidtostr@@Base+0x12c0>
    84e4:	movw	r3, #407	; 0x197
    84e8:	cmp	r0, r3
    84ec:	beq	b304 <bt_compidtostr@@Base+0x40c0>
    84f0:	cmp	r0, #408	; 0x198
    84f4:	bcs	b310 <bt_compidtostr@@Base+0x40cc>
    84f8:	ldr	r0, [pc, #-896]	; 8180 <bt_compidtostr@@Base+0xf3c>
    84fc:	add	r0, pc, r0
    8500:	bx	lr
    8504:	movw	r3, #411	; 0x19b
    8508:	cmp	r0, r3
    850c:	beq	b31c <bt_compidtostr@@Base+0x40d8>
    8510:	cmp	r0, #412	; 0x19c
    8514:	bcs	b328 <bt_compidtostr@@Base+0x40e4>
    8518:	ldr	r0, [pc, #-924]	; 8184 <bt_compidtostr@@Base+0xf40>
    851c:	add	r0, pc, r0
    8520:	bx	lr
    8524:	movw	r3, #417	; 0x1a1
    8528:	cmp	r0, r3
    852c:	beq	b334 <bt_compidtostr@@Base+0x40f0>
    8530:	bhi	8554 <bt_compidtostr@@Base+0x1310>
    8534:	movw	r3, #415	; 0x19f
    8538:	cmp	r0, r3
    853c:	beq	b340 <bt_compidtostr@@Base+0x40fc>
    8540:	cmp	r0, #416	; 0x1a0
    8544:	bcs	b34c <bt_compidtostr@@Base+0x4108>
    8548:	ldr	r0, [pc, #-968]	; 8188 <bt_compidtostr@@Base+0xf44>
    854c:	add	r0, pc, r0
    8550:	bx	lr
    8554:	movw	r3, #419	; 0x1a3
    8558:	cmp	r0, r3
    855c:	beq	b358 <bt_compidtostr@@Base+0x4114>
    8560:	cmp	r0, #420	; 0x1a4
    8564:	bcs	b364 <bt_compidtostr@@Base+0x4120>
    8568:	ldr	r0, [pc, #-996]	; 818c <bt_compidtostr@@Base+0xf48>
    856c:	add	r0, pc, r0
    8570:	bx	lr
    8574:	movw	r3, #437	; 0x1b5
    8578:	cmp	r0, r3
    857c:	beq	b370 <bt_compidtostr@@Base+0x412c>
    8580:	bhi	8634 <bt_compidtostr@@Base+0x13f0>
    8584:	movw	r3, #429	; 0x1ad
    8588:	cmp	r0, r3
    858c:	beq	b37c <bt_compidtostr@@Base+0x4138>
    8590:	bhi	85e4 <bt_compidtostr@@Base+0x13a0>
    8594:	movw	r3, #425	; 0x1a9
    8598:	cmp	r0, r3
    859c:	beq	b388 <bt_compidtostr@@Base+0x4144>
    85a0:	bhi	85c4 <bt_compidtostr@@Base+0x1380>
    85a4:	movw	r3, #423	; 0x1a7
    85a8:	cmp	r0, r3
    85ac:	beq	b394 <bt_compidtostr@@Base+0x4150>
    85b0:	cmp	r0, #424	; 0x1a8
    85b4:	bcs	b3a0 <bt_compidtostr@@Base+0x415c>
    85b8:	ldr	r0, [pc, #-1072]	; 8190 <bt_compidtostr@@Base+0xf4c>
    85bc:	add	r0, pc, r0
    85c0:	bx	lr
    85c4:	movw	r3, #427	; 0x1ab
    85c8:	cmp	r0, r3
    85cc:	beq	b3ac <bt_compidtostr@@Base+0x4168>
    85d0:	cmp	r0, #428	; 0x1ac
    85d4:	bcs	b3b8 <bt_compidtostr@@Base+0x4174>
    85d8:	ldr	r0, [pc, #-1100]	; 8194 <bt_compidtostr@@Base+0xf50>
    85dc:	add	r0, pc, r0
    85e0:	bx	lr
    85e4:	movw	r3, #433	; 0x1b1
    85e8:	cmp	r0, r3
    85ec:	beq	b3c4 <bt_compidtostr@@Base+0x4180>
    85f0:	bhi	8614 <bt_compidtostr@@Base+0x13d0>
    85f4:	movw	r3, #431	; 0x1af
    85f8:	cmp	r0, r3
    85fc:	beq	b3d0 <bt_compidtostr@@Base+0x418c>
    8600:	cmp	r0, #432	; 0x1b0
    8604:	bcs	b3dc <bt_compidtostr@@Base+0x4198>
    8608:	ldr	r0, [pc, #-1144]	; 8198 <bt_compidtostr@@Base+0xf54>
    860c:	add	r0, pc, r0
    8610:	bx	lr
    8614:	movw	r3, #435	; 0x1b3
    8618:	cmp	r0, r3
    861c:	beq	b3e8 <bt_compidtostr@@Base+0x41a4>
    8620:	cmp	r0, #436	; 0x1b4
    8624:	bcs	b3f4 <bt_compidtostr@@Base+0x41b0>
    8628:	ldr	r0, [pc, #-1172]	; 819c <bt_compidtostr@@Base+0xf58>
    862c:	add	r0, pc, r0
    8630:	bx	lr
    8634:	movw	r3, #445	; 0x1bd
    8638:	cmp	r0, r3
    863c:	beq	b400 <bt_compidtostr@@Base+0x41bc>
    8640:	bhi	8694 <bt_compidtostr@@Base+0x1450>
    8644:	movw	r3, #441	; 0x1b9
    8648:	cmp	r0, r3
    864c:	beq	b40c <bt_compidtostr@@Base+0x41c8>
    8650:	bhi	8674 <bt_compidtostr@@Base+0x1430>
    8654:	movw	r3, #439	; 0x1b7
    8658:	cmp	r0, r3
    865c:	beq	b418 <bt_compidtostr@@Base+0x41d4>
    8660:	cmp	r0, #440	; 0x1b8
    8664:	bcs	b424 <bt_compidtostr@@Base+0x41e0>
    8668:	ldr	r0, [pc, #-1232]	; 81a0 <bt_compidtostr@@Base+0xf5c>
    866c:	add	r0, pc, r0
    8670:	bx	lr
    8674:	movw	r3, #443	; 0x1bb
    8678:	cmp	r0, r3
    867c:	beq	b430 <bt_compidtostr@@Base+0x41ec>
    8680:	cmp	r0, #444	; 0x1bc
    8684:	bcs	b43c <bt_compidtostr@@Base+0x41f8>
    8688:	ldr	r0, [pc, #-1260]	; 81a4 <bt_compidtostr@@Base+0xf60>
    868c:	add	r0, pc, r0
    8690:	bx	lr
    8694:	movw	r3, #449	; 0x1c1
    8698:	cmp	r0, r3
    869c:	beq	b448 <bt_compidtostr@@Base+0x4204>
    86a0:	bhi	86c4 <bt_compidtostr@@Base+0x1480>
    86a4:	movw	r3, #447	; 0x1bf
    86a8:	cmp	r0, r3
    86ac:	beq	b454 <bt_compidtostr@@Base+0x4210>
    86b0:	cmp	r0, #448	; 0x1c0
    86b4:	bcs	b460 <bt_compidtostr@@Base+0x421c>
    86b8:	ldr	r0, [pc, #-1304]	; 81a8 <bt_compidtostr@@Base+0xf64>
    86bc:	add	r0, pc, r0
    86c0:	bx	lr
    86c4:	movw	r3, #451	; 0x1c3
    86c8:	cmp	r0, r3
    86cc:	beq	b46c <bt_compidtostr@@Base+0x4228>
    86d0:	bcc	b478 <bt_compidtostr@@Base+0x4234>
    86d4:	cmp	r0, #452	; 0x1c4
    86d8:	beq	b484 <bt_compidtostr@@Base+0x4240>
    86dc:	movw	r3, #453	; 0x1c5
    86e0:	cmp	r0, r3
    86e4:	beq	b490 <bt_compidtostr@@Base+0x424c>
    86e8:	ldr	r0, [pc, #-1348]	; 81ac <bt_compidtostr@@Base+0xf68>
    86ec:	add	r0, pc, r0
    86f0:	bx	lr
    86f4:	movw	r3, #486	; 0x1e6
    86f8:	cmp	r0, r3
    86fc:	beq	b49c <bt_compidtostr@@Base+0x4258>
    8700:	bhi	8834 <bt_compidtostr@@Base+0x15f0>
    8704:	movw	r3, #470	; 0x1d6
    8708:	cmp	r0, r3
    870c:	beq	b4a8 <bt_compidtostr@@Base+0x4264>
    8710:	bhi	87a4 <bt_compidtostr@@Base+0x1560>
    8714:	movw	r3, #462	; 0x1ce
    8718:	cmp	r0, r3
    871c:	beq	b4b4 <bt_compidtostr@@Base+0x4270>
    8720:	bhi	8764 <bt_compidtostr@@Base+0x1520>
    8724:	movw	r3, #458	; 0x1ca
    8728:	cmp	r0, r3
    872c:	beq	b4c0 <bt_compidtostr@@Base+0x427c>
    8730:	bhi	874c <bt_compidtostr@@Base+0x1508>
    8734:	cmp	r0, #456	; 0x1c8
    8738:	beq	b4cc <bt_compidtostr@@Base+0x4288>
    873c:	bhi	b4d8 <bt_compidtostr@@Base+0x4294>
    8740:	ldr	r0, [pc, #-1432]	; 81b0 <bt_compidtostr@@Base+0xf6c>
    8744:	add	r0, pc, r0
    8748:	bx	lr
    874c:	cmp	r0, #460	; 0x1cc
    8750:	beq	b4e4 <bt_compidtostr@@Base+0x42a0>
    8754:	bhi	b4f0 <bt_compidtostr@@Base+0x42ac>
    8758:	ldr	r0, [pc, #-1452]	; 81b4 <bt_compidtostr@@Base+0xf70>
    875c:	add	r0, pc, r0
    8760:	bx	lr
    8764:	movw	r3, #466	; 0x1d2
    8768:	cmp	r0, r3
    876c:	beq	b4fc <bt_compidtostr@@Base+0x42b8>
    8770:	bhi	878c <bt_compidtostr@@Base+0x1548>
    8774:	cmp	r0, #464	; 0x1d0
    8778:	beq	b508 <bt_compidtostr@@Base+0x42c4>
    877c:	bhi	b514 <bt_compidtostr@@Base+0x42d0>
    8780:	ldr	r0, [pc, #-1488]	; 81b8 <bt_compidtostr@@Base+0xf74>
    8784:	add	r0, pc, r0
    8788:	bx	lr
    878c:	cmp	r0, #468	; 0x1d4
    8790:	beq	b520 <bt_compidtostr@@Base+0x42dc>
    8794:	bhi	b52c <bt_compidtostr@@Base+0x42e8>
    8798:	ldr	r0, [pc, #-1508]	; 81bc <bt_compidtostr@@Base+0xf78>
    879c:	add	r0, pc, r0
    87a0:	bx	lr
    87a4:	movw	r3, #478	; 0x1de
    87a8:	cmp	r0, r3
    87ac:	beq	b538 <bt_compidtostr@@Base+0x42f4>
    87b0:	bhi	87f4 <bt_compidtostr@@Base+0x15b0>
    87b4:	movw	r3, #474	; 0x1da
    87b8:	cmp	r0, r3
    87bc:	beq	b544 <bt_compidtostr@@Base+0x4300>
    87c0:	bhi	87dc <bt_compidtostr@@Base+0x1598>
    87c4:	cmp	r0, #472	; 0x1d8
    87c8:	beq	b550 <bt_compidtostr@@Base+0x430c>
    87cc:	bhi	b55c <bt_compidtostr@@Base+0x4318>
    87d0:	ldr	r0, [pc, #-1560]	; 81c0 <bt_compidtostr@@Base+0xf7c>
    87d4:	add	r0, pc, r0
    87d8:	bx	lr
    87dc:	cmp	r0, #476	; 0x1dc
    87e0:	beq	b568 <bt_compidtostr@@Base+0x4324>
    87e4:	bhi	bbd8 <bt_compidtostr@@Base+0x4994>
    87e8:	ldr	r0, [pc, #-1580]	; 81c4 <bt_compidtostr@@Base+0xf80>
    87ec:	add	r0, pc, r0
    87f0:	bx	lr
    87f4:	movw	r3, #482	; 0x1e2
    87f8:	cmp	r0, r3
    87fc:	beq	bbe4 <bt_compidtostr@@Base+0x49a0>
    8800:	bhi	881c <bt_compidtostr@@Base+0x15d8>
    8804:	cmp	r0, #480	; 0x1e0
    8808:	beq	bbf0 <bt_compidtostr@@Base+0x49ac>
    880c:	bhi	bbfc <bt_compidtostr@@Base+0x49b8>
    8810:	ldr	r0, [pc, #-1616]	; 81c8 <bt_compidtostr@@Base+0xf84>
    8814:	add	r0, pc, r0
    8818:	bx	lr
    881c:	cmp	r0, #484	; 0x1e4
    8820:	beq	bc08 <bt_compidtostr@@Base+0x49c4>
    8824:	bhi	bc14 <bt_compidtostr@@Base+0x49d0>
    8828:	ldr	r0, [pc, #-1636]	; 81cc <bt_compidtostr@@Base+0xf88>
    882c:	add	r0, pc, r0
    8830:	bx	lr
    8834:	movw	r3, #502	; 0x1f6
    8838:	cmp	r0, r3
    883c:	beq	bc20 <bt_compidtostr@@Base+0x49dc>
    8840:	bhi	88d4 <bt_compidtostr@@Base+0x1690>
    8844:	movw	r3, #494	; 0x1ee
    8848:	cmp	r0, r3
    884c:	beq	bc2c <bt_compidtostr@@Base+0x49e8>
    8850:	bhi	8894 <bt_compidtostr@@Base+0x1650>
    8854:	movw	r3, #490	; 0x1ea
    8858:	cmp	r0, r3
    885c:	beq	bc38 <bt_compidtostr@@Base+0x49f4>
    8860:	bhi	887c <bt_compidtostr@@Base+0x1638>
    8864:	cmp	r0, #488	; 0x1e8
    8868:	beq	bc44 <bt_compidtostr@@Base+0x4a00>
    886c:	bhi	bc50 <bt_compidtostr@@Base+0x4a0c>
    8870:	ldr	r0, [pc, #-1704]	; 81d0 <bt_compidtostr@@Base+0xf8c>
    8874:	add	r0, pc, r0
    8878:	bx	lr
    887c:	cmp	r0, #492	; 0x1ec
    8880:	beq	bc5c <bt_compidtostr@@Base+0x4a18>
    8884:	bhi	bc68 <bt_compidtostr@@Base+0x4a24>
    8888:	ldr	r0, [pc, #-1724]	; 81d4 <bt_compidtostr@@Base+0xf90>
    888c:	add	r0, pc, r0
    8890:	bx	lr
    8894:	movw	r3, #498	; 0x1f2
    8898:	cmp	r0, r3
    889c:	beq	bc74 <bt_compidtostr@@Base+0x4a30>
    88a0:	bhi	88bc <bt_compidtostr@@Base+0x1678>
    88a4:	cmp	r0, #496	; 0x1f0
    88a8:	beq	bc80 <bt_compidtostr@@Base+0x4a3c>
    88ac:	bhi	bc8c <bt_compidtostr@@Base+0x4a48>
    88b0:	ldr	r0, [pc, #-1760]	; 81d8 <bt_compidtostr@@Base+0xf94>
    88b4:	add	r0, pc, r0
    88b8:	bx	lr
    88bc:	cmp	r0, #500	; 0x1f4
    88c0:	beq	bc98 <bt_compidtostr@@Base+0x4a54>
    88c4:	bhi	bca4 <bt_compidtostr@@Base+0x4a60>
    88c8:	ldr	r0, [pc, #-1780]	; 81dc <bt_compidtostr@@Base+0xf98>
    88cc:	add	r0, pc, r0
    88d0:	bx	lr
    88d4:	movw	r3, #510	; 0x1fe
    88d8:	cmp	r0, r3
    88dc:	beq	bcb0 <bt_compidtostr@@Base+0x4a6c>
    88e0:	bhi	8924 <bt_compidtostr@@Base+0x16e0>
    88e4:	movw	r3, #506	; 0x1fa
    88e8:	cmp	r0, r3
    88ec:	beq	bcbc <bt_compidtostr@@Base+0x4a78>
    88f0:	bhi	890c <bt_compidtostr@@Base+0x16c8>
    88f4:	cmp	r0, #504	; 0x1f8
    88f8:	beq	bcc8 <bt_compidtostr@@Base+0x4a84>
    88fc:	bhi	bcd4 <bt_compidtostr@@Base+0x4a90>
    8900:	ldr	r0, [pc, #-1832]	; 81e0 <bt_compidtostr@@Base+0xf9c>
    8904:	add	r0, pc, r0
    8908:	bx	lr
    890c:	cmp	r0, #508	; 0x1fc
    8910:	beq	bce0 <bt_compidtostr@@Base+0x4a9c>
    8914:	bhi	bcec <bt_compidtostr@@Base+0x4aa8>
    8918:	ldr	r0, [pc, #-1852]	; 81e4 <bt_compidtostr@@Base+0xfa0>
    891c:	add	r0, pc, r0
    8920:	bx	lr
    8924:	movw	r3, #514	; 0x202
    8928:	cmp	r0, r3
    892c:	beq	bcf8 <bt_compidtostr@@Base+0x4ab4>
    8930:	bhi	894c <bt_compidtostr@@Base+0x1708>
    8934:	cmp	r0, #512	; 0x200
    8938:	beq	bd04 <bt_compidtostr@@Base+0x4ac0>
    893c:	bhi	bd10 <bt_compidtostr@@Base+0x4acc>
    8940:	ldr	r0, [pc, #-1888]	; 81e8 <bt_compidtostr@@Base+0xfa4>
    8944:	add	r0, pc, r0
    8948:	bx	lr
    894c:	cmp	r0, #516	; 0x204
    8950:	beq	bd1c <bt_compidtostr@@Base+0x4ad8>
    8954:	bcc	bd28 <bt_compidtostr@@Base+0x4ae4>
    8958:	movw	r3, #517	; 0x205
    895c:	cmp	r0, r3
    8960:	beq	bd34 <bt_compidtostr@@Base+0x4af0>
    8964:	movw	r3, #518	; 0x206
    8968:	cmp	r0, r3
    896c:	beq	bd40 <bt_compidtostr@@Base+0x4afc>
    8970:	ldr	r0, [pc, #-1932]	; 81ec <bt_compidtostr@@Base+0xfa8>
    8974:	add	r0, pc, r0
    8978:	bx	lr
    897c:	movw	r3, #779	; 0x30b
    8980:	cmp	r0, r3
    8984:	beq	bd4c <bt_compidtostr@@Base+0x4b08>
    8988:	cmp	r0, #780	; 0x30c
    898c:	bcs	94d4 <bt_compidtostr@@Base+0x2290>
    8990:	movw	r3, #649	; 0x289
    8994:	cmp	r0, r3
    8998:	beq	bd58 <bt_compidtostr@@Base+0x4b14>
    899c:	bhi	8f3c <bt_compidtostr@@Base+0x1cf8>
    89a0:	cmp	r0, #584	; 0x248
    89a4:	beq	bd64 <bt_compidtostr@@Base+0x4b20>
    89a8:	bhi	8cb4 <bt_compidtostr@@Base+0x1a70>
    89ac:	movw	r3, #551	; 0x227
    89b0:	cmp	r0, r3
    89b4:	beq	bd70 <bt_compidtostr@@Base+0x4b2c>
    89b8:	cmp	r0, #552	; 0x228
    89bc:	bcs	8b2c <bt_compidtostr@@Base+0x18e8>
    89c0:	movw	r3, #535	; 0x217
    89c4:	cmp	r0, r3
    89c8:	beq	bd7c <bt_compidtostr@@Base+0x4b38>
    89cc:	cmp	r0, #536	; 0x218
    89d0:	bcs	8a80 <bt_compidtostr@@Base+0x183c>
    89d4:	movw	r3, #527	; 0x20f
    89d8:	cmp	r0, r3
    89dc:	beq	bd88 <bt_compidtostr@@Base+0x4b44>
    89e0:	cmp	r0, #528	; 0x210
    89e4:	bcs	8a34 <bt_compidtostr@@Base+0x17f0>
    89e8:	movw	r3, #523	; 0x20b
    89ec:	cmp	r0, r3
    89f0:	beq	bd94 <bt_compidtostr@@Base+0x4b50>
    89f4:	cmp	r0, #524	; 0x20c
    89f8:	bcs	8a18 <bt_compidtostr@@Base+0x17d4>
    89fc:	movw	r3, #521	; 0x209
    8a00:	cmp	r0, r3
    8a04:	beq	bda0 <bt_compidtostr@@Base+0x4b5c>
    8a08:	bhi	bdac <bt_compidtostr@@Base+0x4b68>
    8a0c:	ldr	r0, [pc, #-2084]	; 81f0 <bt_compidtostr@@Base+0xfac>
    8a10:	add	r0, pc, r0
    8a14:	bx	lr
    8a18:	movw	r3, #525	; 0x20d
    8a1c:	cmp	r0, r3
    8a20:	beq	bdb8 <bt_compidtostr@@Base+0x4b74>
    8a24:	bhi	bdc4 <bt_compidtostr@@Base+0x4b80>
    8a28:	ldr	r0, [pc, #-2108]	; 81f4 <bt_compidtostr@@Base+0xfb0>
    8a2c:	add	r0, pc, r0
    8a30:	bx	lr
    8a34:	movw	r3, #531	; 0x213
    8a38:	cmp	r0, r3
    8a3c:	beq	bdd0 <bt_compidtostr@@Base+0x4b8c>
    8a40:	cmp	r0, #532	; 0x214
    8a44:	bcs	8a64 <bt_compidtostr@@Base+0x1820>
    8a48:	movw	r3, #529	; 0x211
    8a4c:	cmp	r0, r3
    8a50:	beq	bddc <bt_compidtostr@@Base+0x4b98>
    8a54:	bhi	bde8 <bt_compidtostr@@Base+0x4ba4>
    8a58:	ldr	r0, [pc, #-2152]	; 81f8 <bt_compidtostr@@Base+0xfb4>
    8a5c:	add	r0, pc, r0
    8a60:	bx	lr
    8a64:	movw	r3, #533	; 0x215
    8a68:	cmp	r0, r3
    8a6c:	beq	bdf4 <bt_compidtostr@@Base+0x4bb0>
    8a70:	bhi	be00 <bt_compidtostr@@Base+0x4bbc>
    8a74:	ldr	r0, [pc, #-2176]	; 81fc <bt_compidtostr@@Base+0xfb8>
    8a78:	add	r0, pc, r0
    8a7c:	bx	lr
    8a80:	movw	r3, #543	; 0x21f
    8a84:	cmp	r0, r3
    8a88:	beq	be0c <bt_compidtostr@@Base+0x4bc8>
    8a8c:	cmp	r0, #544	; 0x220
    8a90:	bcs	8ae0 <bt_compidtostr@@Base+0x189c>
    8a94:	movw	r3, #539	; 0x21b
    8a98:	cmp	r0, r3
    8a9c:	beq	be18 <bt_compidtostr@@Base+0x4bd4>
    8aa0:	cmp	r0, #540	; 0x21c
    8aa4:	bcs	8ac4 <bt_compidtostr@@Base+0x1880>
    8aa8:	movw	r3, #537	; 0x219
    8aac:	cmp	r0, r3
    8ab0:	beq	be24 <bt_compidtostr@@Base+0x4be0>
    8ab4:	bhi	be30 <bt_compidtostr@@Base+0x4bec>
    8ab8:	ldr	r0, [pc, #-2240]	; 8200 <bt_compidtostr@@Base+0xfbc>
    8abc:	add	r0, pc, r0
    8ac0:	bx	lr
    8ac4:	movw	r3, #541	; 0x21d
    8ac8:	cmp	r0, r3
    8acc:	beq	be3c <bt_compidtostr@@Base+0x4bf8>
    8ad0:	bhi	be48 <bt_compidtostr@@Base+0x4c04>
    8ad4:	ldr	r0, [pc, #-2264]	; 8204 <bt_compidtostr@@Base+0xfc0>
    8ad8:	add	r0, pc, r0
    8adc:	bx	lr
    8ae0:	movw	r3, #547	; 0x223
    8ae4:	cmp	r0, r3
    8ae8:	beq	be54 <bt_compidtostr@@Base+0x4c10>
    8aec:	cmp	r0, #548	; 0x224
    8af0:	bcs	8b10 <bt_compidtostr@@Base+0x18cc>
    8af4:	movw	r3, #545	; 0x221
    8af8:	cmp	r0, r3
    8afc:	beq	be60 <bt_compidtostr@@Base+0x4c1c>
    8b00:	bhi	be6c <bt_compidtostr@@Base+0x4c28>
    8b04:	ldr	r0, [pc, #-2308]	; 8208 <bt_compidtostr@@Base+0xfc4>
    8b08:	add	r0, pc, r0
    8b0c:	bx	lr
    8b10:	movw	r3, #549	; 0x225
    8b14:	cmp	r0, r3
    8b18:	beq	be78 <bt_compidtostr@@Base+0x4c34>
    8b1c:	bhi	be84 <bt_compidtostr@@Base+0x4c40>
    8b20:	ldr	r0, [pc, #-2332]	; 820c <bt_compidtostr@@Base+0xfc8>
    8b24:	add	r0, pc, r0
    8b28:	bx	lr
    8b2c:	movw	r3, #567	; 0x237
    8b30:	cmp	r0, r3
    8b34:	beq	be90 <bt_compidtostr@@Base+0x4c4c>
    8b38:	cmp	r0, #568	; 0x238
    8b3c:	bcs	8bec <bt_compidtostr@@Base+0x19a8>
    8b40:	movw	r3, #559	; 0x22f
    8b44:	cmp	r0, r3
    8b48:	beq	be9c <bt_compidtostr@@Base+0x4c58>
    8b4c:	cmp	r0, #560	; 0x230
    8b50:	bcs	8ba0 <bt_compidtostr@@Base+0x195c>
    8b54:	movw	r3, #555	; 0x22b
    8b58:	cmp	r0, r3
    8b5c:	beq	bea8 <bt_compidtostr@@Base+0x4c64>
    8b60:	cmp	r0, #556	; 0x22c
    8b64:	bcs	8b84 <bt_compidtostr@@Base+0x1940>
    8b68:	movw	r3, #553	; 0x229
    8b6c:	cmp	r0, r3
    8b70:	beq	beb4 <bt_compidtostr@@Base+0x4c70>
    8b74:	bhi	bec0 <bt_compidtostr@@Base+0x4c7c>
    8b78:	ldr	r0, [pc, #-2416]	; 8210 <bt_compidtostr@@Base+0xfcc>
    8b7c:	add	r0, pc, r0
    8b80:	bx	lr
    8b84:	movw	r3, #557	; 0x22d
    8b88:	cmp	r0, r3
    8b8c:	beq	becc <bt_compidtostr@@Base+0x4c88>
    8b90:	bhi	bed8 <bt_compidtostr@@Base+0x4c94>
    8b94:	ldr	r0, [pc, #-2440]	; 8214 <bt_compidtostr@@Base+0xfd0>
    8b98:	add	r0, pc, r0
    8b9c:	bx	lr
    8ba0:	movw	r3, #563	; 0x233
    8ba4:	cmp	r0, r3
    8ba8:	beq	bee4 <bt_compidtostr@@Base+0x4ca0>
    8bac:	cmp	r0, #564	; 0x234
    8bb0:	bcs	8bd0 <bt_compidtostr@@Base+0x198c>
    8bb4:	movw	r3, #561	; 0x231
    8bb8:	cmp	r0, r3
    8bbc:	beq	bef0 <bt_compidtostr@@Base+0x4cac>
    8bc0:	bhi	befc <bt_compidtostr@@Base+0x4cb8>
    8bc4:	ldr	r0, [pc, #-2484]	; 8218 <bt_compidtostr@@Base+0xfd4>
    8bc8:	add	r0, pc, r0
    8bcc:	bx	lr
    8bd0:	movw	r3, #565	; 0x235
    8bd4:	cmp	r0, r3
    8bd8:	beq	bf08 <bt_compidtostr@@Base+0x4cc4>
    8bdc:	bhi	bf14 <bt_compidtostr@@Base+0x4cd0>
    8be0:	ldr	r0, [pc, #-2508]	; 821c <bt_compidtostr@@Base+0xfd8>
    8be4:	add	r0, pc, r0
    8be8:	bx	lr
    8bec:	movw	r3, #575	; 0x23f
    8bf0:	cmp	r0, r3
    8bf4:	beq	bf20 <bt_compidtostr@@Base+0x4cdc>
    8bf8:	cmp	r0, #576	; 0x240
    8bfc:	bcs	8c4c <bt_compidtostr@@Base+0x1a08>
    8c00:	movw	r3, #571	; 0x23b
    8c04:	cmp	r0, r3
    8c08:	beq	bf2c <bt_compidtostr@@Base+0x4ce8>
    8c0c:	cmp	r0, #572	; 0x23c
    8c10:	bcs	8c30 <bt_compidtostr@@Base+0x19ec>
    8c14:	movw	r3, #569	; 0x239
    8c18:	cmp	r0, r3
    8c1c:	beq	bf38 <bt_compidtostr@@Base+0x4cf4>
    8c20:	bhi	bf44 <bt_compidtostr@@Base+0x4d00>
    8c24:	ldr	r0, [pc, #-2572]	; 8220 <bt_compidtostr@@Base+0xfdc>
    8c28:	add	r0, pc, r0
    8c2c:	bx	lr
    8c30:	movw	r3, #573	; 0x23d
    8c34:	cmp	r0, r3
    8c38:	beq	bf50 <bt_compidtostr@@Base+0x4d0c>
    8c3c:	bhi	bf5c <bt_compidtostr@@Base+0x4d18>
    8c40:	ldr	r0, [pc, #-2596]	; 8224 <bt_compidtostr@@Base+0xfe0>
    8c44:	add	r0, pc, r0
    8c48:	bx	lr
    8c4c:	movw	r3, #579	; 0x243
    8c50:	cmp	r0, r3
    8c54:	beq	bf68 <bt_compidtostr@@Base+0x4d24>
    8c58:	cmp	r0, #580	; 0x244
    8c5c:	bcs	8c7c <bt_compidtostr@@Base+0x1a38>
    8c60:	movw	r3, #577	; 0x241
    8c64:	cmp	r0, r3
    8c68:	beq	bf74 <bt_compidtostr@@Base+0x4d30>
    8c6c:	bhi	bf80 <bt_compidtostr@@Base+0x4d3c>
    8c70:	ldr	r0, [pc, #-2640]	; 8228 <bt_compidtostr@@Base+0xfe4>
    8c74:	add	r0, pc, r0
    8c78:	bx	lr
    8c7c:	movw	r3, #581	; 0x245
    8c80:	cmp	r0, r3
    8c84:	beq	bf8c <bt_compidtostr@@Base+0x4d48>
    8c88:	cmp	r0, #580	; 0x244
    8c8c:	bls	bf98 <bt_compidtostr@@Base+0x4d54>
    8c90:	movw	r3, #582	; 0x246
    8c94:	cmp	r0, r3
    8c98:	beq	bfa4 <bt_compidtostr@@Base+0x4d60>
    8c9c:	movw	r3, #583	; 0x247
    8ca0:	cmp	r0, r3
    8ca4:	beq	bfb0 <bt_compidtostr@@Base+0x4d6c>
    8ca8:	ldr	r0, [pc, #-2692]	; 822c <bt_compidtostr@@Base+0xfe8>
    8cac:	add	r0, pc, r0
    8cb0:	bx	lr
    8cb4:	cmp	r0, #616	; 0x268
    8cb8:	beq	bfbc <bt_compidtostr@@Base+0x4d78>
    8cbc:	bhi	8df4 <bt_compidtostr@@Base+0x1bb0>
    8cc0:	cmp	r0, #600	; 0x258
    8cc4:	beq	bfc8 <bt_compidtostr@@Base+0x4d84>
    8cc8:	bhi	8d60 <bt_compidtostr@@Base+0x1b1c>
    8ccc:	cmp	r0, #592	; 0x250
    8cd0:	beq	bfd4 <bt_compidtostr@@Base+0x4d90>
    8cd4:	bhi	8d1c <bt_compidtostr@@Base+0x1ad8>
    8cd8:	cmp	r0, #588	; 0x24c
    8cdc:	beq	bfe0 <bt_compidtostr@@Base+0x4d9c>
    8ce0:	bhi	8d00 <bt_compidtostr@@Base+0x1abc>
    8ce4:	movw	r3, #586	; 0x24a
    8ce8:	cmp	r0, r3
    8cec:	beq	bfec <bt_compidtostr@@Base+0x4da8>
    8cf0:	bhi	bff8 <bt_compidtostr@@Base+0x4db4>
    8cf4:	ldr	r0, [pc, #-2764]	; 8230 <bt_compidtostr@@Base+0xfec>
    8cf8:	add	r0, pc, r0
    8cfc:	bx	lr
    8d00:	movw	r3, #590	; 0x24e
    8d04:	cmp	r0, r3
    8d08:	beq	c004 <bt_compidtostr@@Base+0x4dc0>
    8d0c:	bhi	c010 <bt_compidtostr@@Base+0x4dcc>
    8d10:	ldr	r0, [pc, #-2788]	; 8234 <bt_compidtostr@@Base+0xff0>
    8d14:	add	r0, pc, r0
    8d18:	bx	lr
    8d1c:	cmp	r0, #596	; 0x254
    8d20:	beq	c01c <bt_compidtostr@@Base+0x4dd8>
    8d24:	bhi	8d44 <bt_compidtostr@@Base+0x1b00>
    8d28:	movw	r3, #594	; 0x252
    8d2c:	cmp	r0, r3
    8d30:	beq	c028 <bt_compidtostr@@Base+0x4de4>
    8d34:	bhi	c034 <bt_compidtostr@@Base+0x4df0>
    8d38:	ldr	r0, [pc, #-2824]	; 8238 <bt_compidtostr@@Base+0xff4>
    8d3c:	add	r0, pc, r0
    8d40:	bx	lr
    8d44:	movw	r3, #598	; 0x256
    8d48:	cmp	r0, r3
    8d4c:	beq	c040 <bt_compidtostr@@Base+0x4dfc>
    8d50:	bhi	c04c <bt_compidtostr@@Base+0x4e08>
    8d54:	ldr	r0, [pc, #-2848]	; 823c <bt_compidtostr@@Base+0xff8>
    8d58:	add	r0, pc, r0
    8d5c:	bx	lr
    8d60:	cmp	r0, #608	; 0x260
    8d64:	beq	c058 <bt_compidtostr@@Base+0x4e14>
    8d68:	bhi	8db0 <bt_compidtostr@@Base+0x1b6c>
    8d6c:	cmp	r0, #604	; 0x25c
    8d70:	beq	c064 <bt_compidtostr@@Base+0x4e20>
    8d74:	bhi	8d94 <bt_compidtostr@@Base+0x1b50>
    8d78:	movw	r3, #602	; 0x25a
    8d7c:	cmp	r0, r3
    8d80:	beq	c070 <bt_compidtostr@@Base+0x4e2c>
    8d84:	bhi	c07c <bt_compidtostr@@Base+0x4e38>
    8d88:	ldr	r0, [pc, #-2896]	; 8240 <bt_compidtostr@@Base+0xffc>
    8d8c:	add	r0, pc, r0
    8d90:	bx	lr
    8d94:	movw	r3, #606	; 0x25e
    8d98:	cmp	r0, r3
    8d9c:	beq	c088 <bt_compidtostr@@Base+0x4e44>
    8da0:	bhi	c094 <bt_compidtostr@@Base+0x4e50>
    8da4:	ldr	r0, [pc, #-2920]	; 8244 <bt_compidtostr@@Base+0x1000>
    8da8:	add	r0, pc, r0
    8dac:	bx	lr
    8db0:	cmp	r0, #612	; 0x264
    8db4:	beq	c0a0 <bt_compidtostr@@Base+0x4e5c>
    8db8:	bhi	8dd8 <bt_compidtostr@@Base+0x1b94>
    8dbc:	movw	r3, #610	; 0x262
    8dc0:	cmp	r0, r3
    8dc4:	beq	c0ac <bt_compidtostr@@Base+0x4e68>
    8dc8:	bhi	c0b8 <bt_compidtostr@@Base+0x4e74>
    8dcc:	ldr	r0, [pc, #-2956]	; 8248 <bt_compidtostr@@Base+0x1004>
    8dd0:	add	r0, pc, r0
    8dd4:	bx	lr
    8dd8:	movw	r3, #614	; 0x266
    8ddc:	cmp	r0, r3
    8de0:	beq	c0c4 <bt_compidtostr@@Base+0x4e80>
    8de4:	bhi	c0d0 <bt_compidtostr@@Base+0x4e8c>
    8de8:	ldr	r0, [pc, #-2980]	; 824c <bt_compidtostr@@Base+0x1008>
    8dec:	add	r0, pc, r0
    8df0:	bx	lr
    8df4:	cmp	r0, #632	; 0x278
    8df8:	beq	c0dc <bt_compidtostr@@Base+0x4e98>
    8dfc:	bhi	8e94 <bt_compidtostr@@Base+0x1c50>
    8e00:	cmp	r0, #624	; 0x270
    8e04:	beq	c0e8 <bt_compidtostr@@Base+0x4ea4>
    8e08:	bhi	8e50 <bt_compidtostr@@Base+0x1c0c>
    8e0c:	cmp	r0, #620	; 0x26c
    8e10:	beq	c0f4 <bt_compidtostr@@Base+0x4eb0>
    8e14:	bhi	8e34 <bt_compidtostr@@Base+0x1bf0>
    8e18:	movw	r3, #618	; 0x26a
    8e1c:	cmp	r0, r3
    8e20:	beq	c100 <bt_compidtostr@@Base+0x4ebc>
    8e24:	bhi	c10c <bt_compidtostr@@Base+0x4ec8>
    8e28:	ldr	r0, [pc, #-3040]	; 8250 <bt_compidtostr@@Base+0x100c>
    8e2c:	add	r0, pc, r0
    8e30:	bx	lr
    8e34:	movw	r3, #622	; 0x26e
    8e38:	cmp	r0, r3
    8e3c:	beq	c118 <bt_compidtostr@@Base+0x4ed4>
    8e40:	bhi	c124 <bt_compidtostr@@Base+0x4ee0>
    8e44:	ldr	r0, [pc, #-3064]	; 8254 <bt_compidtostr@@Base+0x1010>
    8e48:	add	r0, pc, r0
    8e4c:	bx	lr
    8e50:	cmp	r0, #628	; 0x274
    8e54:	beq	c130 <bt_compidtostr@@Base+0x4eec>
    8e58:	bhi	8e78 <bt_compidtostr@@Base+0x1c34>
    8e5c:	movw	r3, #626	; 0x272
    8e60:	cmp	r0, r3
    8e64:	beq	c13c <bt_compidtostr@@Base+0x4ef8>
    8e68:	bhi	c148 <bt_compidtostr@@Base+0x4f04>
    8e6c:	ldr	r0, [pc, #-3100]	; 8258 <bt_compidtostr@@Base+0x1014>
    8e70:	add	r0, pc, r0
    8e74:	bx	lr
    8e78:	movw	r3, #630	; 0x276
    8e7c:	cmp	r0, r3
    8e80:	beq	c154 <bt_compidtostr@@Base+0x4f10>
    8e84:	bhi	c160 <bt_compidtostr@@Base+0x4f1c>
    8e88:	ldr	r0, [pc, #-3124]	; 825c <bt_compidtostr@@Base+0x1018>
    8e8c:	add	r0, pc, r0
    8e90:	bx	lr
    8e94:	cmp	r0, #640	; 0x280
    8e98:	beq	c16c <bt_compidtostr@@Base+0x4f28>
    8e9c:	bhi	8ee4 <bt_compidtostr@@Base+0x1ca0>
    8ea0:	cmp	r0, #636	; 0x27c
    8ea4:	beq	c178 <bt_compidtostr@@Base+0x4f34>
    8ea8:	bhi	8ec8 <bt_compidtostr@@Base+0x1c84>
    8eac:	movw	r3, #634	; 0x27a
    8eb0:	cmp	r0, r3
    8eb4:	beq	c184 <bt_compidtostr@@Base+0x4f40>
    8eb8:	bhi	c190 <bt_compidtostr@@Base+0x4f4c>
    8ebc:	ldr	r0, [pc, #-3172]	; 8260 <bt_compidtostr@@Base+0x101c>
    8ec0:	add	r0, pc, r0
    8ec4:	bx	lr
    8ec8:	movw	r3, #638	; 0x27e
    8ecc:	cmp	r0, r3
    8ed0:	beq	c19c <bt_compidtostr@@Base+0x4f58>
    8ed4:	bhi	c1a8 <bt_compidtostr@@Base+0x4f64>
    8ed8:	ldr	r0, [pc, #-3196]	; 8264 <bt_compidtostr@@Base+0x1020>
    8edc:	add	r0, pc, r0
    8ee0:	bx	lr
    8ee4:	cmp	r0, #644	; 0x284
    8ee8:	beq	c1b4 <bt_compidtostr@@Base+0x4f70>
    8eec:	bhi	8f0c <bt_compidtostr@@Base+0x1cc8>
    8ef0:	movw	r3, #642	; 0x282
    8ef4:	cmp	r0, r3
    8ef8:	beq	c1c0 <bt_compidtostr@@Base+0x4f7c>
    8efc:	bhi	c1cc <bt_compidtostr@@Base+0x4f88>
    8f00:	ldr	r0, [pc, #-3232]	; 8268 <bt_compidtostr@@Base+0x1024>
    8f04:	add	r0, pc, r0
    8f08:	bx	lr
    8f0c:	movw	r3, #646	; 0x286
    8f10:	cmp	r0, r3
    8f14:	beq	c1d8 <bt_compidtostr@@Base+0x4f94>
    8f18:	bcc	c1e4 <bt_compidtostr@@Base+0x4fa0>
    8f1c:	movw	r3, #647	; 0x287
    8f20:	cmp	r0, r3
    8f24:	beq	c1f0 <bt_compidtostr@@Base+0x4fac>
    8f28:	cmp	r0, #648	; 0x288
    8f2c:	beq	c1fc <bt_compidtostr@@Base+0x4fb8>
    8f30:	ldr	r0, [pc, #-3276]	; 826c <bt_compidtostr@@Base+0x1028>
    8f34:	add	r0, pc, r0
    8f38:	bx	lr
    8f3c:	movw	r3, #714	; 0x2ca
    8f40:	cmp	r0, r3
    8f44:	beq	c208 <bt_compidtostr@@Base+0x4fc4>
    8f48:	bhi	924c <bt_compidtostr@@Base+0x2008>
    8f4c:	movw	r3, #681	; 0x2a9
    8f50:	cmp	r0, r3
    8f54:	beq	c214 <bt_compidtostr@@Base+0x4fd0>
    8f58:	bhi	90cc <bt_compidtostr@@Base+0x1e88>
    8f5c:	movw	r3, #665	; 0x299
    8f60:	cmp	r0, r3
    8f64:	beq	c220 <bt_compidtostr@@Base+0x4fdc>
    8f68:	bhi	901c <bt_compidtostr@@Base+0x1dd8>
    8f6c:	movw	r3, #657	; 0x291
    8f70:	cmp	r0, r3
    8f74:	beq	c22c <bt_compidtostr@@Base+0x4fe8>
    8f78:	bhi	8fcc <bt_compidtostr@@Base+0x1d88>
    8f7c:	movw	r3, #653	; 0x28d
    8f80:	cmp	r0, r3
    8f84:	beq	c238 <bt_compidtostr@@Base+0x4ff4>
    8f88:	bhi	8fac <bt_compidtostr@@Base+0x1d68>
    8f8c:	movw	r3, #651	; 0x28b
    8f90:	cmp	r0, r3
    8f94:	beq	c244 <bt_compidtostr@@Base+0x5000>
    8f98:	cmp	r0, #652	; 0x28c
    8f9c:	bcs	c250 <bt_compidtostr@@Base+0x500c>
    8fa0:	ldr	r0, [pc, #-3384]	; 8270 <bt_compidtostr@@Base+0x102c>
    8fa4:	add	r0, pc, r0
    8fa8:	bx	lr
    8fac:	movw	r3, #655	; 0x28f
    8fb0:	cmp	r0, r3
    8fb4:	beq	c25c <bt_compidtostr@@Base+0x5018>
    8fb8:	cmp	r0, #656	; 0x290
    8fbc:	bcs	c268 <bt_compidtostr@@Base+0x5024>
    8fc0:	ldr	r0, [pc, #-3412]	; 8274 <bt_compidtostr@@Base+0x1030>
    8fc4:	add	r0, pc, r0
    8fc8:	bx	lr
    8fcc:	movw	r3, #661	; 0x295
    8fd0:	cmp	r0, r3
    8fd4:	beq	c274 <bt_compidtostr@@Base+0x5030>
    8fd8:	bhi	8ffc <bt_compidtostr@@Base+0x1db8>
    8fdc:	movw	r3, #659	; 0x293
    8fe0:	cmp	r0, r3
    8fe4:	beq	c280 <bt_compidtostr@@Base+0x503c>
    8fe8:	cmp	r0, #660	; 0x294
    8fec:	bcs	c28c <bt_compidtostr@@Base+0x5048>
    8ff0:	ldr	r0, [pc, #-3456]	; 8278 <bt_compidtostr@@Base+0x1034>
    8ff4:	add	r0, pc, r0
    8ff8:	bx	lr
    8ffc:	movw	r3, #663	; 0x297
    9000:	cmp	r0, r3
    9004:	beq	c298 <bt_compidtostr@@Base+0x5054>
    9008:	cmp	r0, #664	; 0x298
    900c:	bcs	c2a4 <bt_compidtostr@@Base+0x5060>
    9010:	ldr	r0, [pc, #-3484]	; 827c <bt_compidtostr@@Base+0x1038>
    9014:	add	r0, pc, r0
    9018:	bx	lr
    901c:	movw	r3, #673	; 0x2a1
    9020:	cmp	r0, r3
    9024:	beq	c2b0 <bt_compidtostr@@Base+0x506c>
    9028:	bhi	907c <bt_compidtostr@@Base+0x1e38>
    902c:	movw	r3, #669	; 0x29d
    9030:	cmp	r0, r3
    9034:	beq	c2bc <bt_compidtostr@@Base+0x5078>
    9038:	bhi	905c <bt_compidtostr@@Base+0x1e18>
    903c:	movw	r3, #667	; 0x29b
    9040:	cmp	r0, r3
    9044:	beq	c2c8 <bt_compidtostr@@Base+0x5084>
    9048:	cmp	r0, #668	; 0x29c
    904c:	bcs	c2d4 <bt_compidtostr@@Base+0x5090>
    9050:	ldr	r0, [pc, #3384]	; 9d90 <bt_compidtostr@@Base+0x2b4c>
    9054:	add	r0, pc, r0
    9058:	bx	lr
    905c:	movw	r3, #671	; 0x29f
    9060:	cmp	r0, r3
    9064:	beq	c2e0 <bt_compidtostr@@Base+0x509c>
    9068:	cmp	r0, #672	; 0x2a0
    906c:	bcs	c2ec <bt_compidtostr@@Base+0x50a8>
    9070:	ldr	r0, [pc, #3356]	; 9d94 <bt_compidtostr@@Base+0x2b50>
    9074:	add	r0, pc, r0
    9078:	bx	lr
    907c:	movw	r3, #677	; 0x2a5
    9080:	cmp	r0, r3
    9084:	beq	c2f8 <bt_compidtostr@@Base+0x50b4>
    9088:	bhi	90ac <bt_compidtostr@@Base+0x1e68>
    908c:	movw	r3, #675	; 0x2a3
    9090:	cmp	r0, r3
    9094:	beq	c304 <bt_compidtostr@@Base+0x50c0>
    9098:	cmp	r0, #676	; 0x2a4
    909c:	bcs	c310 <bt_compidtostr@@Base+0x50cc>
    90a0:	ldr	r0, [pc, #3312]	; 9d98 <bt_compidtostr@@Base+0x2b54>
    90a4:	add	r0, pc, r0
    90a8:	bx	lr
    90ac:	movw	r3, #679	; 0x2a7
    90b0:	cmp	r0, r3
    90b4:	beq	c31c <bt_compidtostr@@Base+0x50d8>
    90b8:	cmp	r0, #680	; 0x2a8
    90bc:	bcs	c328 <bt_compidtostr@@Base+0x50e4>
    90c0:	ldr	r0, [pc, #3284]	; 9d9c <bt_compidtostr@@Base+0x2b58>
    90c4:	add	r0, pc, r0
    90c8:	bx	lr
    90cc:	movw	r3, #697	; 0x2b9
    90d0:	cmp	r0, r3
    90d4:	beq	c334 <bt_compidtostr@@Base+0x50f0>
    90d8:	bhi	918c <bt_compidtostr@@Base+0x1f48>
    90dc:	movw	r3, #689	; 0x2b1
    90e0:	cmp	r0, r3
    90e4:	beq	c340 <bt_compidtostr@@Base+0x50fc>
    90e8:	bhi	913c <bt_compidtostr@@Base+0x1ef8>
    90ec:	movw	r3, #685	; 0x2ad
    90f0:	cmp	r0, r3
    90f4:	beq	c34c <bt_compidtostr@@Base+0x5108>
    90f8:	bhi	911c <bt_compidtostr@@Base+0x1ed8>
    90fc:	movw	r3, #683	; 0x2ab
    9100:	cmp	r0, r3
    9104:	beq	c358 <bt_compidtostr@@Base+0x5114>
    9108:	cmp	r0, #684	; 0x2ac
    910c:	bcs	c364 <bt_compidtostr@@Base+0x5120>
    9110:	ldr	r0, [pc, #3208]	; 9da0 <bt_compidtostr@@Base+0x2b5c>
    9114:	add	r0, pc, r0
    9118:	bx	lr
    911c:	movw	r3, #687	; 0x2af
    9120:	cmp	r0, r3
    9124:	beq	c370 <bt_compidtostr@@Base+0x512c>
    9128:	cmp	r0, #688	; 0x2b0
    912c:	bcs	c37c <bt_compidtostr@@Base+0x5138>
    9130:	ldr	r0, [pc, #3180]	; 9da4 <bt_compidtostr@@Base+0x2b60>
    9134:	add	r0, pc, r0
    9138:	bx	lr
    913c:	movw	r3, #693	; 0x2b5
    9140:	cmp	r0, r3
    9144:	beq	c388 <bt_compidtostr@@Base+0x5144>
    9148:	bhi	916c <bt_compidtostr@@Base+0x1f28>
    914c:	movw	r3, #691	; 0x2b3
    9150:	cmp	r0, r3
    9154:	beq	c394 <bt_compidtostr@@Base+0x5150>
    9158:	cmp	r0, #692	; 0x2b4
    915c:	bcs	c3a0 <bt_compidtostr@@Base+0x515c>
    9160:	ldr	r0, [pc, #3136]	; 9da8 <bt_compidtostr@@Base+0x2b64>
    9164:	add	r0, pc, r0
    9168:	bx	lr
    916c:	movw	r3, #695	; 0x2b7
    9170:	cmp	r0, r3
    9174:	beq	c3ac <bt_compidtostr@@Base+0x5168>
    9178:	cmp	r0, #696	; 0x2b8
    917c:	bcs	c3b8 <bt_compidtostr@@Base+0x5174>
    9180:	ldr	r0, [pc, #3108]	; 9dac <bt_compidtostr@@Base+0x2b68>
    9184:	add	r0, pc, r0
    9188:	bx	lr
    918c:	movw	r3, #705	; 0x2c1
    9190:	cmp	r0, r3
    9194:	beq	c3c4 <bt_compidtostr@@Base+0x5180>
    9198:	bhi	91ec <bt_compidtostr@@Base+0x1fa8>
    919c:	movw	r3, #701	; 0x2bd
    91a0:	cmp	r0, r3
    91a4:	beq	c3d0 <bt_compidtostr@@Base+0x518c>
    91a8:	bhi	91cc <bt_compidtostr@@Base+0x1f88>
    91ac:	movw	r3, #699	; 0x2bb
    91b0:	cmp	r0, r3
    91b4:	beq	c3dc <bt_compidtostr@@Base+0x5198>
    91b8:	cmp	r0, #700	; 0x2bc
    91bc:	bcs	c3e8 <bt_compidtostr@@Base+0x51a4>
    91c0:	ldr	r0, [pc, #3048]	; 9db0 <bt_compidtostr@@Base+0x2b6c>
    91c4:	add	r0, pc, r0
    91c8:	bx	lr
    91cc:	movw	r3, #703	; 0x2bf
    91d0:	cmp	r0, r3
    91d4:	beq	c3f4 <bt_compidtostr@@Base+0x51b0>
    91d8:	cmp	r0, #704	; 0x2c0
    91dc:	bcs	c400 <bt_compidtostr@@Base+0x51bc>
    91e0:	ldr	r0, [pc, #3020]	; 9db4 <bt_compidtostr@@Base+0x2b70>
    91e4:	add	r0, pc, r0
    91e8:	bx	lr
    91ec:	movw	r3, #709	; 0x2c5
    91f0:	cmp	r0, r3
    91f4:	beq	c40c <bt_compidtostr@@Base+0x51c8>
    91f8:	bhi	921c <bt_compidtostr@@Base+0x1fd8>
    91fc:	movw	r3, #707	; 0x2c3
    9200:	cmp	r0, r3
    9204:	beq	c418 <bt_compidtostr@@Base+0x51d4>
    9208:	cmp	r0, #708	; 0x2c4
    920c:	bcs	c424 <bt_compidtostr@@Base+0x51e0>
    9210:	ldr	r0, [pc, #2976]	; 9db8 <bt_compidtostr@@Base+0x2b74>
    9214:	add	r0, pc, r0
    9218:	bx	lr
    921c:	movw	r3, #711	; 0x2c7
    9220:	cmp	r0, r3
    9224:	beq	c430 <bt_compidtostr@@Base+0x51ec>
    9228:	bcc	c43c <bt_compidtostr@@Base+0x51f8>
    922c:	cmp	r0, #712	; 0x2c8
    9230:	beq	c448 <bt_compidtostr@@Base+0x5204>
    9234:	movw	r3, #713	; 0x2c9
    9238:	cmp	r0, r3
    923c:	beq	c454 <bt_compidtostr@@Base+0x5210>
    9240:	ldr	r0, [pc, #2932]	; 9dbc <bt_compidtostr@@Base+0x2b78>
    9244:	add	r0, pc, r0
    9248:	bx	lr
    924c:	movw	r3, #746	; 0x2ea
    9250:	cmp	r0, r3
    9254:	beq	c460 <bt_compidtostr@@Base+0x521c>
    9258:	bhi	938c <bt_compidtostr@@Base+0x2148>
    925c:	movw	r3, #730	; 0x2da
    9260:	cmp	r0, r3
    9264:	beq	c46c <bt_compidtostr@@Base+0x5228>
    9268:	bhi	92fc <bt_compidtostr@@Base+0x20b8>
    926c:	movw	r3, #722	; 0x2d2
    9270:	cmp	r0, r3
    9274:	beq	c478 <bt_compidtostr@@Base+0x5234>
    9278:	bhi	92bc <bt_compidtostr@@Base+0x2078>
    927c:	movw	r3, #718	; 0x2ce
    9280:	cmp	r0, r3
    9284:	beq	c484 <bt_compidtostr@@Base+0x5240>
    9288:	bhi	92a4 <bt_compidtostr@@Base+0x2060>
    928c:	cmp	r0, #716	; 0x2cc
    9290:	beq	c490 <bt_compidtostr@@Base+0x524c>
    9294:	bhi	c49c <bt_compidtostr@@Base+0x5258>
    9298:	ldr	r0, [pc, #2848]	; 9dc0 <bt_compidtostr@@Base+0x2b7c>
    929c:	add	r0, pc, r0
    92a0:	bx	lr
    92a4:	cmp	r0, #720	; 0x2d0
    92a8:	beq	c4a8 <bt_compidtostr@@Base+0x5264>
    92ac:	bhi	c4b4 <bt_compidtostr@@Base+0x5270>
    92b0:	ldr	r0, [pc, #2828]	; 9dc4 <bt_compidtostr@@Base+0x2b80>
    92b4:	add	r0, pc, r0
    92b8:	bx	lr
    92bc:	movw	r3, #726	; 0x2d6
    92c0:	cmp	r0, r3
    92c4:	beq	c4c0 <bt_compidtostr@@Base+0x527c>
    92c8:	bhi	92e4 <bt_compidtostr@@Base+0x20a0>
    92cc:	cmp	r0, #724	; 0x2d4
    92d0:	beq	c4cc <bt_compidtostr@@Base+0x5288>
    92d4:	bhi	c4d8 <bt_compidtostr@@Base+0x5294>
    92d8:	ldr	r0, [pc, #2792]	; 9dc8 <bt_compidtostr@@Base+0x2b84>
    92dc:	add	r0, pc, r0
    92e0:	bx	lr
    92e4:	cmp	r0, #728	; 0x2d8
    92e8:	beq	c4e4 <bt_compidtostr@@Base+0x52a0>
    92ec:	bhi	c4f0 <bt_compidtostr@@Base+0x52ac>
    92f0:	ldr	r0, [pc, #2772]	; 9dcc <bt_compidtostr@@Base+0x2b88>
    92f4:	add	r0, pc, r0
    92f8:	bx	lr
    92fc:	movw	r3, #738	; 0x2e2
    9300:	cmp	r0, r3
    9304:	beq	c4fc <bt_compidtostr@@Base+0x52b8>
    9308:	bhi	934c <bt_compidtostr@@Base+0x2108>
    930c:	movw	r3, #734	; 0x2de
    9310:	cmp	r0, r3
    9314:	beq	c508 <bt_compidtostr@@Base+0x52c4>
    9318:	bhi	9334 <bt_compidtostr@@Base+0x20f0>
    931c:	cmp	r0, #732	; 0x2dc
    9320:	beq	c514 <bt_compidtostr@@Base+0x52d0>
    9324:	bhi	c520 <bt_compidtostr@@Base+0x52dc>
    9328:	ldr	r0, [pc, #2720]	; 9dd0 <bt_compidtostr@@Base+0x2b8c>
    932c:	add	r0, pc, r0
    9330:	bx	lr
    9334:	cmp	r0, #736	; 0x2e0
    9338:	beq	c52c <bt_compidtostr@@Base+0x52e8>
    933c:	bhi	c538 <bt_compidtostr@@Base+0x52f4>
    9340:	ldr	r0, [pc, #2700]	; 9dd4 <bt_compidtostr@@Base+0x2b90>
    9344:	add	r0, pc, r0
    9348:	bx	lr
    934c:	movw	r3, #742	; 0x2e6
    9350:	cmp	r0, r3
    9354:	beq	c544 <bt_compidtostr@@Base+0x5300>
    9358:	bhi	9374 <bt_compidtostr@@Base+0x2130>
    935c:	cmp	r0, #740	; 0x2e4
    9360:	beq	c550 <bt_compidtostr@@Base+0x530c>
    9364:	bhi	c55c <bt_compidtostr@@Base+0x5318>
    9368:	ldr	r0, [pc, #2664]	; 9dd8 <bt_compidtostr@@Base+0x2b94>
    936c:	add	r0, pc, r0
    9370:	bx	lr
    9374:	cmp	r0, #744	; 0x2e8
    9378:	beq	c568 <bt_compidtostr@@Base+0x5324>
    937c:	bhi	c574 <bt_compidtostr@@Base+0x5330>
    9380:	ldr	r0, [pc, #2644]	; 9ddc <bt_compidtostr@@Base+0x2b98>
    9384:	add	r0, pc, r0
    9388:	bx	lr
    938c:	movw	r3, #762	; 0x2fa
    9390:	cmp	r0, r3
    9394:	beq	c580 <bt_compidtostr@@Base+0x533c>
    9398:	bhi	942c <bt_compidtostr@@Base+0x21e8>
    939c:	movw	r3, #754	; 0x2f2
    93a0:	cmp	r0, r3
    93a4:	beq	c58c <bt_compidtostr@@Base+0x5348>
    93a8:	bhi	93ec <bt_compidtostr@@Base+0x21a8>
    93ac:	movw	r3, #750	; 0x2ee
    93b0:	cmp	r0, r3
    93b4:	beq	c598 <bt_compidtostr@@Base+0x5354>
    93b8:	bhi	93d4 <bt_compidtostr@@Base+0x2190>
    93bc:	cmp	r0, #748	; 0x2ec
    93c0:	beq	c5a4 <bt_compidtostr@@Base+0x5360>
    93c4:	bhi	c5b0 <bt_compidtostr@@Base+0x536c>
    93c8:	ldr	r0, [pc, #2576]	; 9de0 <bt_compidtostr@@Base+0x2b9c>
    93cc:	add	r0, pc, r0
    93d0:	bx	lr
    93d4:	cmp	r0, #752	; 0x2f0
    93d8:	beq	c5bc <bt_compidtostr@@Base+0x5378>
    93dc:	bhi	c5c8 <bt_compidtostr@@Base+0x5384>
    93e0:	ldr	r0, [pc, #2556]	; 9de4 <bt_compidtostr@@Base+0x2ba0>
    93e4:	add	r0, pc, r0
    93e8:	bx	lr
    93ec:	movw	r3, #758	; 0x2f6
    93f0:	cmp	r0, r3
    93f4:	beq	c5d4 <bt_compidtostr@@Base+0x5390>
    93f8:	bhi	9414 <bt_compidtostr@@Base+0x21d0>
    93fc:	cmp	r0, #756	; 0x2f4
    9400:	beq	c5e0 <bt_compidtostr@@Base+0x539c>
    9404:	bhi	c5ec <bt_compidtostr@@Base+0x53a8>
    9408:	ldr	r0, [pc, #2520]	; 9de8 <bt_compidtostr@@Base+0x2ba4>
    940c:	add	r0, pc, r0
    9410:	bx	lr
    9414:	cmp	r0, #760	; 0x2f8
    9418:	beq	c5f8 <bt_compidtostr@@Base+0x53b4>
    941c:	bhi	c604 <bt_compidtostr@@Base+0x53c0>
    9420:	ldr	r0, [pc, #2500]	; 9dec <bt_compidtostr@@Base+0x2ba8>
    9424:	add	r0, pc, r0
    9428:	bx	lr
    942c:	movw	r3, #770	; 0x302
    9430:	cmp	r0, r3
    9434:	beq	c610 <bt_compidtostr@@Base+0x53cc>
    9438:	bhi	947c <bt_compidtostr@@Base+0x2238>
    943c:	movw	r3, #766	; 0x2fe
    9440:	cmp	r0, r3
    9444:	beq	c61c <bt_compidtostr@@Base+0x53d8>
    9448:	bhi	9464 <bt_compidtostr@@Base+0x2220>
    944c:	cmp	r0, #764	; 0x2fc
    9450:	beq	c628 <bt_compidtostr@@Base+0x53e4>
    9454:	bhi	c634 <bt_compidtostr@@Base+0x53f0>
    9458:	ldr	r0, [pc, #2448]	; 9df0 <bt_compidtostr@@Base+0x2bac>
    945c:	add	r0, pc, r0
    9460:	bx	lr
    9464:	cmp	r0, #768	; 0x300
    9468:	beq	c640 <bt_compidtostr@@Base+0x53fc>
    946c:	bhi	c64c <bt_compidtostr@@Base+0x5408>
    9470:	ldr	r0, [pc, #2428]	; 9df4 <bt_compidtostr@@Base+0x2bb0>
    9474:	add	r0, pc, r0
    9478:	bx	lr
    947c:	movw	r3, #774	; 0x306
    9480:	cmp	r0, r3
    9484:	beq	c658 <bt_compidtostr@@Base+0x5414>
    9488:	bhi	94a4 <bt_compidtostr@@Base+0x2260>
    948c:	cmp	r0, #772	; 0x304
    9490:	beq	c664 <bt_compidtostr@@Base+0x5420>
    9494:	bhi	c670 <bt_compidtostr@@Base+0x542c>
    9498:	ldr	r0, [pc, #2392]	; 9df8 <bt_compidtostr@@Base+0x2bb4>
    949c:	add	r0, pc, r0
    94a0:	bx	lr
    94a4:	cmp	r0, #776	; 0x308
    94a8:	beq	c67c <bt_compidtostr@@Base+0x5438>
    94ac:	bcc	c688 <bt_compidtostr@@Base+0x5444>
    94b0:	movw	r3, #777	; 0x309
    94b4:	cmp	r0, r3
    94b8:	beq	c694 <bt_compidtostr@@Base+0x5450>
    94bc:	movw	r3, #778	; 0x30a
    94c0:	cmp	r0, r3
    94c4:	beq	c6a0 <bt_compidtostr@@Base+0x545c>
    94c8:	ldr	r0, [pc, #2348]	; 9dfc <bt_compidtostr@@Base+0x2bb8>
    94cc:	add	r0, pc, r0
    94d0:	bx	lr
    94d4:	movw	r3, #909	; 0x38d
    94d8:	cmp	r0, r3
    94dc:	beq	c6ac <bt_compidtostr@@Base+0x5468>
    94e0:	bhi	9a80 <bt_compidtostr@@Base+0x283c>
    94e4:	cmp	r0, #844	; 0x34c
    94e8:	beq	c6b8 <bt_compidtostr@@Base+0x5474>
    94ec:	bhi	97f8 <bt_compidtostr@@Base+0x25b4>
    94f0:	movw	r3, #811	; 0x32b
    94f4:	cmp	r0, r3
    94f8:	beq	c6c4 <bt_compidtostr@@Base+0x5480>
    94fc:	cmp	r0, #812	; 0x32c
    9500:	bcs	9670 <bt_compidtostr@@Base+0x242c>
    9504:	movw	r3, #795	; 0x31b
    9508:	cmp	r0, r3
    950c:	beq	c6d0 <bt_compidtostr@@Base+0x548c>
    9510:	cmp	r0, #796	; 0x31c
    9514:	bcs	95c4 <bt_compidtostr@@Base+0x2380>
    9518:	movw	r3, #787	; 0x313
    951c:	cmp	r0, r3
    9520:	beq	c6dc <bt_compidtostr@@Base+0x5498>
    9524:	cmp	r0, #788	; 0x314
    9528:	bcs	9578 <bt_compidtostr@@Base+0x2334>
    952c:	movw	r3, #783	; 0x30f
    9530:	cmp	r0, r3
    9534:	beq	c6e8 <bt_compidtostr@@Base+0x54a4>
    9538:	cmp	r0, #784	; 0x310
    953c:	bcs	955c <bt_compidtostr@@Base+0x2318>
    9540:	movw	r3, #781	; 0x30d
    9544:	cmp	r0, r3
    9548:	beq	c6f4 <bt_compidtostr@@Base+0x54b0>
    954c:	bhi	c700 <bt_compidtostr@@Base+0x54bc>
    9550:	ldr	r0, [pc, #2216]	; 9e00 <bt_compidtostr@@Base+0x2bbc>
    9554:	add	r0, pc, r0
    9558:	bx	lr
    955c:	movw	r3, #785	; 0x311
    9560:	cmp	r0, r3
    9564:	beq	c70c <bt_compidtostr@@Base+0x54c8>
    9568:	bhi	c718 <bt_compidtostr@@Base+0x54d4>
    956c:	ldr	r0, [pc, #2192]	; 9e04 <bt_compidtostr@@Base+0x2bc0>
    9570:	add	r0, pc, r0
    9574:	bx	lr
    9578:	movw	r3, #791	; 0x317
    957c:	cmp	r0, r3
    9580:	beq	c724 <bt_compidtostr@@Base+0x54e0>
    9584:	cmp	r0, #792	; 0x318
    9588:	bcs	95a8 <bt_compidtostr@@Base+0x2364>
    958c:	movw	r3, #789	; 0x315
    9590:	cmp	r0, r3
    9594:	beq	c730 <bt_compidtostr@@Base+0x54ec>
    9598:	bhi	c73c <bt_compidtostr@@Base+0x54f8>
    959c:	ldr	r0, [pc, #2148]	; 9e08 <bt_compidtostr@@Base+0x2bc4>
    95a0:	add	r0, pc, r0
    95a4:	bx	lr
    95a8:	movw	r3, #793	; 0x319
    95ac:	cmp	r0, r3
    95b0:	beq	c748 <bt_compidtostr@@Base+0x5504>
    95b4:	bhi	c754 <bt_compidtostr@@Base+0x5510>
    95b8:	ldr	r0, [pc, #2124]	; 9e0c <bt_compidtostr@@Base+0x2bc8>
    95bc:	add	r0, pc, r0
    95c0:	bx	lr
    95c4:	movw	r3, #803	; 0x323
    95c8:	cmp	r0, r3
    95cc:	beq	c760 <bt_compidtostr@@Base+0x551c>
    95d0:	cmp	r0, #804	; 0x324
    95d4:	bcs	9624 <bt_compidtostr@@Base+0x23e0>
    95d8:	movw	r3, #799	; 0x31f
    95dc:	cmp	r0, r3
    95e0:	beq	c76c <bt_compidtostr@@Base+0x5528>
    95e4:	cmp	r0, #800	; 0x320
    95e8:	bcs	9608 <bt_compidtostr@@Base+0x23c4>
    95ec:	movw	r3, #797	; 0x31d
    95f0:	cmp	r0, r3
    95f4:	beq	c778 <bt_compidtostr@@Base+0x5534>
    95f8:	bhi	c784 <bt_compidtostr@@Base+0x5540>
    95fc:	ldr	r0, [pc, #2060]	; 9e10 <bt_compidtostr@@Base+0x2bcc>
    9600:	add	r0, pc, r0
    9604:	bx	lr
    9608:	movw	r3, #801	; 0x321
    960c:	cmp	r0, r3
    9610:	beq	c790 <bt_compidtostr@@Base+0x554c>
    9614:	bhi	c79c <bt_compidtostr@@Base+0x5558>
    9618:	ldr	r0, [pc, #2036]	; 9e14 <bt_compidtostr@@Base+0x2bd0>
    961c:	add	r0, pc, r0
    9620:	bx	lr
    9624:	movw	r3, #807	; 0x327
    9628:	cmp	r0, r3
    962c:	beq	c7a8 <bt_compidtostr@@Base+0x5564>
    9630:	cmp	r0, #808	; 0x328
    9634:	bcs	9654 <bt_compidtostr@@Base+0x2410>
    9638:	movw	r3, #805	; 0x325
    963c:	cmp	r0, r3
    9640:	beq	c7b4 <bt_compidtostr@@Base+0x5570>
    9644:	bhi	c7c0 <bt_compidtostr@@Base+0x557c>
    9648:	ldr	r0, [pc, #1992]	; 9e18 <bt_compidtostr@@Base+0x2bd4>
    964c:	add	r0, pc, r0
    9650:	bx	lr
    9654:	movw	r3, #809	; 0x329
    9658:	cmp	r0, r3
    965c:	beq	c7cc <bt_compidtostr@@Base+0x5588>
    9660:	bhi	c7d8 <bt_compidtostr@@Base+0x5594>
    9664:	ldr	r0, [pc, #1968]	; 9e1c <bt_compidtostr@@Base+0x2bd8>
    9668:	add	r0, pc, r0
    966c:	bx	lr
    9670:	movw	r3, #827	; 0x33b
    9674:	cmp	r0, r3
    9678:	beq	c7e4 <bt_compidtostr@@Base+0x55a0>
    967c:	cmp	r0, #828	; 0x33c
    9680:	bcs	9730 <bt_compidtostr@@Base+0x24ec>
    9684:	movw	r3, #819	; 0x333
    9688:	cmp	r0, r3
    968c:	beq	c7f0 <bt_compidtostr@@Base+0x55ac>
    9690:	cmp	r0, #820	; 0x334
    9694:	bcs	96e4 <bt_compidtostr@@Base+0x24a0>
    9698:	movw	r3, #815	; 0x32f
    969c:	cmp	r0, r3
    96a0:	beq	c7fc <bt_compidtostr@@Base+0x55b8>
    96a4:	cmp	r0, #816	; 0x330
    96a8:	bcs	96c8 <bt_compidtostr@@Base+0x2484>
    96ac:	movw	r3, #813	; 0x32d
    96b0:	cmp	r0, r3
    96b4:	beq	c808 <bt_compidtostr@@Base+0x55c4>
    96b8:	bhi	c814 <bt_compidtostr@@Base+0x55d0>
    96bc:	ldr	r0, [pc, #1884]	; 9e20 <bt_compidtostr@@Base+0x2bdc>
    96c0:	add	r0, pc, r0
    96c4:	bx	lr
    96c8:	movw	r3, #817	; 0x331
    96cc:	cmp	r0, r3
    96d0:	beq	c820 <bt_compidtostr@@Base+0x55dc>
    96d4:	bhi	c82c <bt_compidtostr@@Base+0x55e8>
    96d8:	ldr	r0, [pc, #1860]	; 9e24 <bt_compidtostr@@Base+0x2be0>
    96dc:	add	r0, pc, r0
    96e0:	bx	lr
    96e4:	movw	r3, #823	; 0x337
    96e8:	cmp	r0, r3
    96ec:	beq	c838 <bt_compidtostr@@Base+0x55f4>
    96f0:	cmp	r0, #824	; 0x338
    96f4:	bcs	9714 <bt_compidtostr@@Base+0x24d0>
    96f8:	movw	r3, #821	; 0x335
    96fc:	cmp	r0, r3
    9700:	beq	c844 <bt_compidtostr@@Base+0x5600>
    9704:	bhi	c850 <bt_compidtostr@@Base+0x560c>
    9708:	ldr	r0, [pc, #1816]	; 9e28 <bt_compidtostr@@Base+0x2be4>
    970c:	add	r0, pc, r0
    9710:	bx	lr
    9714:	movw	r3, #825	; 0x339
    9718:	cmp	r0, r3
    971c:	beq	c85c <bt_compidtostr@@Base+0x5618>
    9720:	bhi	c868 <bt_compidtostr@@Base+0x5624>
    9724:	ldr	r0, [pc, #1792]	; 9e2c <bt_compidtostr@@Base+0x2be8>
    9728:	add	r0, pc, r0
    972c:	bx	lr
    9730:	movw	r3, #835	; 0x343
    9734:	cmp	r0, r3
    9738:	beq	c874 <bt_compidtostr@@Base+0x5630>
    973c:	cmp	r0, #836	; 0x344
    9740:	bcs	9790 <bt_compidtostr@@Base+0x254c>
    9744:	movw	r3, #831	; 0x33f
    9748:	cmp	r0, r3
    974c:	beq	c880 <bt_compidtostr@@Base+0x563c>
    9750:	cmp	r0, #832	; 0x340
    9754:	bcs	9774 <bt_compidtostr@@Base+0x2530>
    9758:	movw	r3, #829	; 0x33d
    975c:	cmp	r0, r3
    9760:	beq	c88c <bt_compidtostr@@Base+0x5648>
    9764:	bhi	c898 <bt_compidtostr@@Base+0x5654>
    9768:	ldr	r0, [pc, #1728]	; 9e30 <bt_compidtostr@@Base+0x2bec>
    976c:	add	r0, pc, r0
    9770:	bx	lr
    9774:	movw	r3, #833	; 0x341
    9778:	cmp	r0, r3
    977c:	beq	c8a4 <bt_compidtostr@@Base+0x5660>
    9780:	bhi	c8b0 <bt_compidtostr@@Base+0x566c>
    9784:	ldr	r0, [pc, #1704]	; 9e34 <bt_compidtostr@@Base+0x2bf0>
    9788:	add	r0, pc, r0
    978c:	bx	lr
    9790:	movw	r3, #839	; 0x347
    9794:	cmp	r0, r3
    9798:	beq	c8bc <bt_compidtostr@@Base+0x5678>
    979c:	cmp	r0, #840	; 0x348
    97a0:	bcs	97c0 <bt_compidtostr@@Base+0x257c>
    97a4:	movw	r3, #837	; 0x345
    97a8:	cmp	r0, r3
    97ac:	beq	c8c8 <bt_compidtostr@@Base+0x5684>
    97b0:	bhi	c8d4 <bt_compidtostr@@Base+0x5690>
    97b4:	ldr	r0, [pc, #1660]	; 9e38 <bt_compidtostr@@Base+0x2bf4>
    97b8:	add	r0, pc, r0
    97bc:	bx	lr
    97c0:	movw	r3, #841	; 0x349
    97c4:	cmp	r0, r3
    97c8:	beq	c8e0 <bt_compidtostr@@Base+0x569c>
    97cc:	cmp	r0, #840	; 0x348
    97d0:	bls	c8ec <bt_compidtostr@@Base+0x56a8>
    97d4:	movw	r3, #842	; 0x34a
    97d8:	cmp	r0, r3
    97dc:	beq	c8f8 <bt_compidtostr@@Base+0x56b4>
    97e0:	movw	r3, #843	; 0x34b
    97e4:	cmp	r0, r3
    97e8:	beq	c904 <bt_compidtostr@@Base+0x56c0>
    97ec:	ldr	r0, [pc, #1608]	; 9e3c <bt_compidtostr@@Base+0x2bf8>
    97f0:	add	r0, pc, r0
    97f4:	bx	lr
    97f8:	cmp	r0, #876	; 0x36c
    97fc:	beq	c910 <bt_compidtostr@@Base+0x56cc>
    9800:	bhi	9938 <bt_compidtostr@@Base+0x26f4>
    9804:	cmp	r0, #860	; 0x35c
    9808:	beq	c91c <bt_compidtostr@@Base+0x56d8>
    980c:	bhi	98a4 <bt_compidtostr@@Base+0x2660>
    9810:	cmp	r0, #852	; 0x354
    9814:	beq	c928 <bt_compidtostr@@Base+0x56e4>
    9818:	bhi	9860 <bt_compidtostr@@Base+0x261c>
    981c:	cmp	r0, #848	; 0x350
    9820:	beq	c934 <bt_compidtostr@@Base+0x56f0>
    9824:	bhi	9844 <bt_compidtostr@@Base+0x2600>
    9828:	movw	r3, #846	; 0x34e
    982c:	cmp	r0, r3
    9830:	beq	c940 <bt_compidtostr@@Base+0x56fc>
    9834:	bhi	c94c <bt_compidtostr@@Base+0x5708>
    9838:	ldr	r0, [pc, #1536]	; 9e40 <bt_compidtostr@@Base+0x2bfc>
    983c:	add	r0, pc, r0
    9840:	bx	lr
    9844:	movw	r3, #850	; 0x352
    9848:	cmp	r0, r3
    984c:	beq	c958 <bt_compidtostr@@Base+0x5714>
    9850:	bhi	c964 <bt_compidtostr@@Base+0x5720>
    9854:	ldr	r0, [pc, #1512]	; 9e44 <bt_compidtostr@@Base+0x2c00>
    9858:	add	r0, pc, r0
    985c:	bx	lr
    9860:	cmp	r0, #856	; 0x358
    9864:	beq	c970 <bt_compidtostr@@Base+0x572c>
    9868:	bhi	9888 <bt_compidtostr@@Base+0x2644>
    986c:	movw	r3, #854	; 0x356
    9870:	cmp	r0, r3
    9874:	beq	c97c <bt_compidtostr@@Base+0x5738>
    9878:	bhi	c988 <bt_compidtostr@@Base+0x5744>
    987c:	ldr	r0, [pc, #1476]	; 9e48 <bt_compidtostr@@Base+0x2c04>
    9880:	add	r0, pc, r0
    9884:	bx	lr
    9888:	movw	r3, #858	; 0x35a
    988c:	cmp	r0, r3
    9890:	beq	c994 <bt_compidtostr@@Base+0x5750>
    9894:	bhi	c9a0 <bt_compidtostr@@Base+0x575c>
    9898:	ldr	r0, [pc, #1452]	; 9e4c <bt_compidtostr@@Base+0x2c08>
    989c:	add	r0, pc, r0
    98a0:	bx	lr
    98a4:	cmp	r0, #868	; 0x364
    98a8:	beq	c9ac <bt_compidtostr@@Base+0x5768>
    98ac:	bhi	98f4 <bt_compidtostr@@Base+0x26b0>
    98b0:	cmp	r0, #864	; 0x360
    98b4:	beq	c9b8 <bt_compidtostr@@Base+0x5774>
    98b8:	bhi	98d8 <bt_compidtostr@@Base+0x2694>
    98bc:	movw	r3, #862	; 0x35e
    98c0:	cmp	r0, r3
    98c4:	beq	c9c4 <bt_compidtostr@@Base+0x5780>
    98c8:	bhi	c9d0 <bt_compidtostr@@Base+0x578c>
    98cc:	ldr	r0, [pc, #1404]	; 9e50 <bt_compidtostr@@Base+0x2c0c>
    98d0:	add	r0, pc, r0
    98d4:	bx	lr
    98d8:	movw	r3, #866	; 0x362
    98dc:	cmp	r0, r3
    98e0:	beq	c9dc <bt_compidtostr@@Base+0x5798>
    98e4:	bhi	c9e8 <bt_compidtostr@@Base+0x57a4>
    98e8:	ldr	r0, [pc, #1380]	; 9e54 <bt_compidtostr@@Base+0x2c10>
    98ec:	add	r0, pc, r0
    98f0:	bx	lr
    98f4:	cmp	r0, #872	; 0x368
    98f8:	beq	c9f4 <bt_compidtostr@@Base+0x57b0>
    98fc:	bhi	991c <bt_compidtostr@@Base+0x26d8>
    9900:	movw	r3, #870	; 0x366
    9904:	cmp	r0, r3
    9908:	beq	ca00 <bt_compidtostr@@Base+0x57bc>
    990c:	bhi	ca0c <bt_compidtostr@@Base+0x57c8>
    9910:	ldr	r0, [pc, #1344]	; 9e58 <bt_compidtostr@@Base+0x2c14>
    9914:	add	r0, pc, r0
    9918:	bx	lr
    991c:	movw	r3, #874	; 0x36a
    9920:	cmp	r0, r3
    9924:	beq	ca18 <bt_compidtostr@@Base+0x57d4>
    9928:	bhi	ca24 <bt_compidtostr@@Base+0x57e0>
    992c:	ldr	r0, [pc, #1320]	; 9e5c <bt_compidtostr@@Base+0x2c18>
    9930:	add	r0, pc, r0
    9934:	bx	lr
    9938:	cmp	r0, #892	; 0x37c
    993c:	beq	ca30 <bt_compidtostr@@Base+0x57ec>
    9940:	bhi	99d8 <bt_compidtostr@@Base+0x2794>
    9944:	cmp	r0, #884	; 0x374
    9948:	beq	ca3c <bt_compidtostr@@Base+0x57f8>
    994c:	bhi	9994 <bt_compidtostr@@Base+0x2750>
    9950:	cmp	r0, #880	; 0x370
    9954:	beq	ca48 <bt_compidtostr@@Base+0x5804>
    9958:	bhi	9978 <bt_compidtostr@@Base+0x2734>
    995c:	movw	r3, #878	; 0x36e
    9960:	cmp	r0, r3
    9964:	beq	ca54 <bt_compidtostr@@Base+0x5810>
    9968:	bhi	ca60 <bt_compidtostr@@Base+0x581c>
    996c:	ldr	r0, [pc, #1260]	; 9e60 <bt_compidtostr@@Base+0x2c1c>
    9970:	add	r0, pc, r0
    9974:	bx	lr
    9978:	movw	r3, #882	; 0x372
    997c:	cmp	r0, r3
    9980:	beq	ca6c <bt_compidtostr@@Base+0x5828>
    9984:	bhi	ca78 <bt_compidtostr@@Base+0x5834>
    9988:	ldr	r0, [pc, #1236]	; 9e64 <bt_compidtostr@@Base+0x2c20>
    998c:	add	r0, pc, r0
    9990:	bx	lr
    9994:	cmp	r0, #888	; 0x378
    9998:	beq	ca84 <bt_compidtostr@@Base+0x5840>
    999c:	bhi	99bc <bt_compidtostr@@Base+0x2778>
    99a0:	movw	r3, #886	; 0x376
    99a4:	cmp	r0, r3
    99a8:	beq	ca90 <bt_compidtostr@@Base+0x584c>
    99ac:	bhi	ca9c <bt_compidtostr@@Base+0x5858>
    99b0:	ldr	r0, [pc, #1200]	; 9e68 <bt_compidtostr@@Base+0x2c24>
    99b4:	add	r0, pc, r0
    99b8:	bx	lr
    99bc:	movw	r3, #890	; 0x37a
    99c0:	cmp	r0, r3
    99c4:	beq	caa8 <bt_compidtostr@@Base+0x5864>
    99c8:	bhi	cab4 <bt_compidtostr@@Base+0x5870>
    99cc:	ldr	r0, [pc, #1176]	; 9e6c <bt_compidtostr@@Base+0x2c28>
    99d0:	add	r0, pc, r0
    99d4:	bx	lr
    99d8:	cmp	r0, #900	; 0x384
    99dc:	beq	cac0 <bt_compidtostr@@Base+0x587c>
    99e0:	bhi	9a28 <bt_compidtostr@@Base+0x27e4>
    99e4:	cmp	r0, #896	; 0x380
    99e8:	beq	cacc <bt_compidtostr@@Base+0x5888>
    99ec:	bhi	9a0c <bt_compidtostr@@Base+0x27c8>
    99f0:	movw	r3, #894	; 0x37e
    99f4:	cmp	r0, r3
    99f8:	beq	cad8 <bt_compidtostr@@Base+0x5894>
    99fc:	bhi	cae4 <bt_compidtostr@@Base+0x58a0>
    9a00:	ldr	r0, [pc, #1128]	; 9e70 <bt_compidtostr@@Base+0x2c2c>
    9a04:	add	r0, pc, r0
    9a08:	bx	lr
    9a0c:	movw	r3, #898	; 0x382
    9a10:	cmp	r0, r3
    9a14:	beq	caf0 <bt_compidtostr@@Base+0x58ac>
    9a18:	bhi	cafc <bt_compidtostr@@Base+0x58b8>
    9a1c:	ldr	r0, [pc, #1104]	; 9e74 <bt_compidtostr@@Base+0x2c30>
    9a20:	add	r0, pc, r0
    9a24:	bx	lr
    9a28:	cmp	r0, #904	; 0x388
    9a2c:	beq	cb08 <bt_compidtostr@@Base+0x58c4>
    9a30:	bhi	9a50 <bt_compidtostr@@Base+0x280c>
    9a34:	movw	r3, #902	; 0x386
    9a38:	cmp	r0, r3
    9a3c:	beq	cb14 <bt_compidtostr@@Base+0x58d0>
    9a40:	bhi	cb20 <bt_compidtostr@@Base+0x58dc>
    9a44:	ldr	r0, [pc, #1068]	; 9e78 <bt_compidtostr@@Base+0x2c34>
    9a48:	add	r0, pc, r0
    9a4c:	bx	lr
    9a50:	movw	r3, #906	; 0x38a
    9a54:	cmp	r0, r3
    9a58:	beq	cb2c <bt_compidtostr@@Base+0x58e8>
    9a5c:	bcc	cb38 <bt_compidtostr@@Base+0x58f4>
    9a60:	movw	r3, #907	; 0x38b
    9a64:	cmp	r0, r3
    9a68:	beq	cb44 <bt_compidtostr@@Base+0x5900>
    9a6c:	cmp	r0, #908	; 0x38c
    9a70:	beq	cb50 <bt_compidtostr@@Base+0x590c>
    9a74:	ldr	r0, [pc, #1024]	; 9e7c <bt_compidtostr@@Base+0x2c38>
    9a78:	add	r0, pc, r0
    9a7c:	bx	lr
    9a80:	movw	r3, #974	; 0x3ce
    9a84:	cmp	r0, r3
    9a88:	beq	cb5c <bt_compidtostr@@Base+0x5918>
    9a8c:	bhi	a194 <bt_compidtostr@@Base+0x2f50>
    9a90:	movw	r3, #941	; 0x3ad
    9a94:	cmp	r0, r3
    9a98:	beq	cb68 <bt_compidtostr@@Base+0x5924>
    9a9c:	bhi	9c10 <bt_compidtostr@@Base+0x29cc>
    9aa0:	movw	r3, #925	; 0x39d
    9aa4:	cmp	r0, r3
    9aa8:	beq	cb74 <bt_compidtostr@@Base+0x5930>
    9aac:	bhi	9b60 <bt_compidtostr@@Base+0x291c>
    9ab0:	movw	r3, #917	; 0x395
    9ab4:	cmp	r0, r3
    9ab8:	beq	cb80 <bt_compidtostr@@Base+0x593c>
    9abc:	bhi	9b10 <bt_compidtostr@@Base+0x28cc>
    9ac0:	movw	r3, #913	; 0x391
    9ac4:	cmp	r0, r3
    9ac8:	beq	cb8c <bt_compidtostr@@Base+0x5948>
    9acc:	bhi	9af0 <bt_compidtostr@@Base+0x28ac>
    9ad0:	movw	r3, #911	; 0x38f
    9ad4:	cmp	r0, r3
    9ad8:	beq	cb98 <bt_compidtostr@@Base+0x5954>
    9adc:	cmp	r0, #912	; 0x390
    9ae0:	bcs	cba4 <bt_compidtostr@@Base+0x5960>
    9ae4:	ldr	r0, [pc, #916]	; 9e80 <bt_compidtostr@@Base+0x2c3c>
    9ae8:	add	r0, pc, r0
    9aec:	bx	lr
    9af0:	movw	r3, #915	; 0x393
    9af4:	cmp	r0, r3
    9af8:	beq	cbb0 <bt_compidtostr@@Base+0x596c>
    9afc:	cmp	r0, #916	; 0x394
    9b00:	bcs	cbbc <bt_compidtostr@@Base+0x5978>
    9b04:	ldr	r0, [pc, #888]	; 9e84 <bt_compidtostr@@Base+0x2c40>
    9b08:	add	r0, pc, r0
    9b0c:	bx	lr
    9b10:	movw	r3, #921	; 0x399
    9b14:	cmp	r0, r3
    9b18:	beq	cbc8 <bt_compidtostr@@Base+0x5984>
    9b1c:	bhi	9b40 <bt_compidtostr@@Base+0x28fc>
    9b20:	movw	r3, #919	; 0x397
    9b24:	cmp	r0, r3
    9b28:	beq	cbd4 <bt_compidtostr@@Base+0x5990>
    9b2c:	cmp	r0, #920	; 0x398
    9b30:	bcs	cbe0 <bt_compidtostr@@Base+0x599c>
    9b34:	ldr	r0, [pc, #844]	; 9e88 <bt_compidtostr@@Base+0x2c44>
    9b38:	add	r0, pc, r0
    9b3c:	bx	lr
    9b40:	movw	r3, #923	; 0x39b
    9b44:	cmp	r0, r3
    9b48:	beq	cbec <bt_compidtostr@@Base+0x59a8>
    9b4c:	cmp	r0, #924	; 0x39c
    9b50:	bcs	cbf8 <bt_compidtostr@@Base+0x59b4>
    9b54:	ldr	r0, [pc, #816]	; 9e8c <bt_compidtostr@@Base+0x2c48>
    9b58:	add	r0, pc, r0
    9b5c:	bx	lr
    9b60:	movw	r3, #933	; 0x3a5
    9b64:	cmp	r0, r3
    9b68:	beq	cc04 <bt_compidtostr@@Base+0x59c0>
    9b6c:	bhi	9bc0 <bt_compidtostr@@Base+0x297c>
    9b70:	movw	r3, #929	; 0x3a1
    9b74:	cmp	r0, r3
    9b78:	beq	cc10 <bt_compidtostr@@Base+0x59cc>
    9b7c:	bhi	9ba0 <bt_compidtostr@@Base+0x295c>
    9b80:	movw	r3, #927	; 0x39f
    9b84:	cmp	r0, r3
    9b88:	beq	cc1c <bt_compidtostr@@Base+0x59d8>
    9b8c:	cmp	r0, #928	; 0x3a0
    9b90:	bcs	cc28 <bt_compidtostr@@Base+0x59e4>
    9b94:	ldr	r0, [pc, #756]	; 9e90 <bt_compidtostr@@Base+0x2c4c>
    9b98:	add	r0, pc, r0
    9b9c:	bx	lr
    9ba0:	movw	r3, #931	; 0x3a3
    9ba4:	cmp	r0, r3
    9ba8:	beq	cc34 <bt_compidtostr@@Base+0x59f0>
    9bac:	cmp	r0, #932	; 0x3a4
    9bb0:	bcs	cc40 <bt_compidtostr@@Base+0x59fc>
    9bb4:	ldr	r0, [pc, #728]	; 9e94 <bt_compidtostr@@Base+0x2c50>
    9bb8:	add	r0, pc, r0
    9bbc:	bx	lr
    9bc0:	movw	r3, #937	; 0x3a9
    9bc4:	cmp	r0, r3
    9bc8:	beq	cc4c <bt_compidtostr@@Base+0x5a08>
    9bcc:	bhi	9bf0 <bt_compidtostr@@Base+0x29ac>
    9bd0:	movw	r3, #935	; 0x3a7
    9bd4:	cmp	r0, r3
    9bd8:	beq	cc58 <bt_compidtostr@@Base+0x5a14>
    9bdc:	cmp	r0, #936	; 0x3a8
    9be0:	bcs	cc64 <bt_compidtostr@@Base+0x5a20>
    9be4:	ldr	r0, [pc, #684]	; 9e98 <bt_compidtostr@@Base+0x2c54>
    9be8:	add	r0, pc, r0
    9bec:	bx	lr
    9bf0:	movw	r3, #939	; 0x3ab
    9bf4:	cmp	r0, r3
    9bf8:	beq	cc70 <bt_compidtostr@@Base+0x5a2c>
    9bfc:	cmp	r0, #940	; 0x3ac
    9c00:	bcs	cc7c <bt_compidtostr@@Base+0x5a38>
    9c04:	ldr	r0, [pc, #656]	; 9e9c <bt_compidtostr@@Base+0x2c58>
    9c08:	add	r0, pc, r0
    9c0c:	bx	lr
    9c10:	movw	r3, #957	; 0x3bd
    9c14:	cmp	r0, r3
    9c18:	beq	cc88 <bt_compidtostr@@Base+0x5a44>
    9c1c:	bhi	9cd0 <bt_compidtostr@@Base+0x2a8c>
    9c20:	movw	r3, #949	; 0x3b5
    9c24:	cmp	r0, r3
    9c28:	beq	cc94 <bt_compidtostr@@Base+0x5a50>
    9c2c:	bhi	9c80 <bt_compidtostr@@Base+0x2a3c>
    9c30:	movw	r3, #945	; 0x3b1
    9c34:	cmp	r0, r3
    9c38:	beq	cca0 <bt_compidtostr@@Base+0x5a5c>
    9c3c:	bhi	9c60 <bt_compidtostr@@Base+0x2a1c>
    9c40:	movw	r3, #943	; 0x3af
    9c44:	cmp	r0, r3
    9c48:	beq	ccac <bt_compidtostr@@Base+0x5a68>
    9c4c:	cmp	r0, #944	; 0x3b0
    9c50:	bcs	ccb8 <bt_compidtostr@@Base+0x5a74>
    9c54:	ldr	r0, [pc, #580]	; 9ea0 <bt_compidtostr@@Base+0x2c5c>
    9c58:	add	r0, pc, r0
    9c5c:	bx	lr
    9c60:	movw	r3, #947	; 0x3b3
    9c64:	cmp	r0, r3
    9c68:	beq	ccc4 <bt_compidtostr@@Base+0x5a80>
    9c6c:	cmp	r0, #948	; 0x3b4
    9c70:	bcs	ccd0 <bt_compidtostr@@Base+0x5a8c>
    9c74:	ldr	r0, [pc, #552]	; 9ea4 <bt_compidtostr@@Base+0x2c60>
    9c78:	add	r0, pc, r0
    9c7c:	bx	lr
    9c80:	movw	r3, #953	; 0x3b9
    9c84:	cmp	r0, r3
    9c88:	beq	ccdc <bt_compidtostr@@Base+0x5a98>
    9c8c:	bhi	9cb0 <bt_compidtostr@@Base+0x2a6c>
    9c90:	movw	r3, #951	; 0x3b7
    9c94:	cmp	r0, r3
    9c98:	beq	cce8 <bt_compidtostr@@Base+0x5aa4>
    9c9c:	cmp	r0, #952	; 0x3b8
    9ca0:	bcs	ccf4 <bt_compidtostr@@Base+0x5ab0>
    9ca4:	ldr	r0, [pc, #508]	; 9ea8 <bt_compidtostr@@Base+0x2c64>
    9ca8:	add	r0, pc, r0
    9cac:	bx	lr
    9cb0:	movw	r3, #955	; 0x3bb
    9cb4:	cmp	r0, r3
    9cb8:	beq	cd00 <bt_compidtostr@@Base+0x5abc>
    9cbc:	cmp	r0, #956	; 0x3bc
    9cc0:	bcs	cd0c <bt_compidtostr@@Base+0x5ac8>
    9cc4:	ldr	r0, [pc, #480]	; 9eac <bt_compidtostr@@Base+0x2c68>
    9cc8:	add	r0, pc, r0
    9ccc:	bx	lr
    9cd0:	movw	r3, #965	; 0x3c5
    9cd4:	cmp	r0, r3
    9cd8:	beq	cd18 <bt_compidtostr@@Base+0x5ad4>
    9cdc:	bhi	9d30 <bt_compidtostr@@Base+0x2aec>
    9ce0:	movw	r3, #961	; 0x3c1
    9ce4:	cmp	r0, r3
    9ce8:	beq	cd24 <bt_compidtostr@@Base+0x5ae0>
    9cec:	bhi	9d10 <bt_compidtostr@@Base+0x2acc>
    9cf0:	movw	r3, #959	; 0x3bf
    9cf4:	cmp	r0, r3
    9cf8:	beq	cd30 <bt_compidtostr@@Base+0x5aec>
    9cfc:	cmp	r0, #960	; 0x3c0
    9d00:	bcs	cd3c <bt_compidtostr@@Base+0x5af8>
    9d04:	ldr	r0, [pc, #420]	; 9eb0 <bt_compidtostr@@Base+0x2c6c>
    9d08:	add	r0, pc, r0
    9d0c:	bx	lr
    9d10:	movw	r3, #963	; 0x3c3
    9d14:	cmp	r0, r3
    9d18:	beq	cd48 <bt_compidtostr@@Base+0x5b04>
    9d1c:	cmp	r0, #964	; 0x3c4
    9d20:	bcs	cd54 <bt_compidtostr@@Base+0x5b10>
    9d24:	ldr	r0, [pc, #392]	; 9eb4 <bt_compidtostr@@Base+0x2c70>
    9d28:	add	r0, pc, r0
    9d2c:	bx	lr
    9d30:	movw	r3, #969	; 0x3c9
    9d34:	cmp	r0, r3
    9d38:	beq	cd60 <bt_compidtostr@@Base+0x5b1c>
    9d3c:	bhi	9d60 <bt_compidtostr@@Base+0x2b1c>
    9d40:	movw	r3, #967	; 0x3c7
    9d44:	cmp	r0, r3
    9d48:	beq	cd6c <bt_compidtostr@@Base+0x5b28>
    9d4c:	cmp	r0, #968	; 0x3c8
    9d50:	bcs	cd78 <bt_compidtostr@@Base+0x5b34>
    9d54:	ldr	r0, [pc, #348]	; 9eb8 <bt_compidtostr@@Base+0x2c74>
    9d58:	add	r0, pc, r0
    9d5c:	bx	lr
    9d60:	movw	r3, #971	; 0x3cb
    9d64:	cmp	r0, r3
    9d68:	beq	cd84 <bt_compidtostr@@Base+0x5b40>
    9d6c:	bcc	cd90 <bt_compidtostr@@Base+0x5b4c>
    9d70:	cmp	r0, #972	; 0x3cc
    9d74:	beq	cd9c <bt_compidtostr@@Base+0x5b58>
    9d78:	movw	r3, #973	; 0x3cd
    9d7c:	cmp	r0, r3
    9d80:	beq	cda8 <bt_compidtostr@@Base+0x5b64>
    9d84:	ldr	r0, [pc, #304]	; 9ebc <bt_compidtostr@@Base+0x2c78>
    9d88:	add	r0, pc, r0
    9d8c:	bx	lr
    9d90:	andeq	fp, r0, r8, lsl #29
    9d94:			; <UNDEFINED> instruction: 0x0000beb7
    9d98:	andeq	fp, r0, r0, ror #29
    9d9c:	andeq	fp, r0, pc, lsl pc
    9da0:	andeq	fp, r0, r5, lsl pc
    9da4:	andeq	fp, r0, lr, lsr pc
    9da8:	andeq	fp, r0, r8, asr pc
    9dac:	andeq	fp, r0, r0, lsl #31
    9db0:	muleq	r0, r0, pc	; <UNPREDICTABLE>
    9db4:			; <UNDEFINED> instruction: 0x0000bfb0
    9db8:	ldrdeq	fp, [r0], -r7
    9dbc:	andeq	r8, r0, sp, lsl sl
    9dc0:	andeq	ip, r0, r0, asr r0
    9dc4:	andeq	ip, r0, r6, lsr #1
    9dc8:	andeq	ip, r0, r0, lsr #1
    9dcc:	andeq	ip, r0, fp, asr #1
    9dd0:	ldrdeq	ip, [r0], -r8
    9dd4:	andeq	ip, r0, lr, lsr #2
    9dd8:	andeq	ip, r0, r3, asr r1
    9ddc:	andeq	ip, r0, pc, lsr #3
    9de0:	andeq	ip, r0, r5, asr #3
    9de4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    9de8:	andeq	ip, r0, sl, lsl r2
    9dec:	andeq	ip, r0, r0, asr #4
    9df0:	andeq	ip, r0, lr, asr r2
    9df4:	andeq	ip, r0, r7, asr #5
    9df8:	andeq	ip, r0, sp, ror #5
    9dfc:	muleq	r0, r5, r7
    9e00:	andeq	ip, r0, fp, asr #5
    9e04:	andeq	ip, r0, r0, ror #5
    9e08:	strdeq	ip, [r0], -r6
    9e0c:	andeq	ip, r0, ip, lsr r3
    9e10:	andeq	ip, r0, ip, lsr r3
    9e14:	andeq	ip, r0, pc, asr r3
    9e18:	andeq	ip, r0, lr, ror r3
    9e1c:			; <UNDEFINED> instruction: 0x0000c3b8
    9e20:	muleq	r0, r6, r3
    9e24:			; <UNDEFINED> instruction: 0x0000c3b5
    9e28:	ldrdeq	ip, [r0], -r7
    9e2c:	strdeq	ip, [r0], -r0
    9e30:	ldrdeq	ip, [r0], -pc	; <UNPREDICTABLE>
    9e34:	andeq	ip, r0, fp, lsl #8
    9e38:	andeq	ip, r0, r6, lsr r4
    9e3c:	andeq	r8, r0, r1, ror r4
    9e40:	andeq	ip, r0, r7, lsr r4
    9e44:	andeq	ip, r0, r6, ror r4
    9e48:	andeq	ip, r0, fp, lsr #9
    9e4c:	ldrdeq	ip, [r0], -r9
    9e50:	strdeq	ip, [r0], -r7
    9e54:	andeq	ip, r0, sp, lsl #10
    9e58:	andeq	ip, r0, r6, lsr #10
    9e5c:	andeq	ip, r0, r8, ror #10
    9e60:	andeq	ip, r0, r2, ror #10
    9e64:	andeq	ip, r0, r3, lsl #11
    9e68:	muleq	r0, r4, r5
    9e6c:	andeq	ip, r0, r3, asr #11
    9e70:	andeq	ip, r0, sp, ror #11
    9e74:	andeq	ip, r0, pc, lsl #12
    9e78:	andeq	ip, r0, r6, lsr r6
    9e7c:	andeq	r8, r0, r9, ror #3
    9e80:	andeq	ip, r0, r3, asr #12
    9e84:	andeq	ip, r0, lr, asr r6
    9e88:	andeq	ip, r0, r5, ror #12
    9e8c:	andeq	ip, r0, r3, lsl #13
    9e90:	muleq	r0, lr, r6
    9e94:	andeq	ip, r0, r9, asr #13
    9e98:	andeq	ip, r0, r0, lsl #14
    9e9c:	andeq	ip, r0, r1, lsl r7
    9ea0:	strdeq	ip, [r0], -fp
    9ea4:	andeq	ip, r0, r3, lsr r7
    9ea8:	andeq	ip, r0, sp, asr r7
    9eac:	andeq	ip, r0, r6, ror r7
    9eb0:	andeq	ip, r0, r9, lsl #15
    9eb4:			; <UNDEFINED> instruction: 0x0000c7bf
    9eb8:	andeq	ip, r0, r0, ror #15
    9ebc:	ldrdeq	r7, [r0], -r9
    9ec0:	andeq	ip, r0, sl, lsl #8
    9ec4:	andeq	ip, r0, r4, lsr r4
    9ec8:	andeq	ip, r0, r8, asr r4
    9ecc:	andeq	ip, r0, r7, ror r4
    9ed0:	andeq	ip, r0, r5, lsl #9
    9ed4:	ldrdeq	ip, [r0], -r4
    9ed8:	andeq	ip, r0, r4, ror #9
    9edc:	andeq	ip, r0, sl, lsr r5
    9ee0:	andeq	ip, r0, r5, lsr r5
    9ee4:	andeq	ip, r0, pc, asr r5
    9ee8:	andeq	ip, r0, fp, ror r5
    9eec:			; <UNDEFINED> instruction: 0x0000c5b6
    9ef0:			; <UNDEFINED> instruction: 0x0000c5bc
    9ef4:	andeq	ip, r0, r1, lsl #12
    9ef8:	andeq	ip, r0, lr, lsl r6
    9efc:	andeq	r7, r0, r1, asr #16
    9f00:	andeq	sl, r0, r8, lsr #32
    9f04:	andeq	r8, r0, sp, lsl #26
    9f08:	muleq	r0, r9, r2
    9f0c:	andeq	r7, r0, r3, lsl sp
    9f10:	andeq	r7, r0, r8, lsr #20
    9f14:	strdeq	r7, [r0], -ip
    9f18:	andeq	r7, r0, fp, asr #16
    9f1c:	andeq	r7, r0, r8, lsl r8
    9f20:	strdeq	ip, [r0], -r9
    9f24:	strdeq	r7, [r0], -r4
    9f28:	andeq	r7, r0, ip, lsl #16
    9f2c:	andeq	r7, r0, r5, lsl #16
    9f30:	andeq	r7, r0, r4, asr #16
    9f34:	andeq	r7, r0, r7, lsl #16
    9f38:	andeq	r7, r0, r4, lsl r8
    9f3c:	andeq	r7, r0, ip, lsr r8
    9f40:	andeq	r7, r0, r7, asr #16
    9f44:	andeq	r7, r0, r3, lsl #18
    9f48:	andeq	r7, r0, r2, lsr #17
    9f4c:	andeq	r7, r0, sp, ror r8
    9f50:	andeq	r7, r0, lr, ror r8
    9f54:			; <UNDEFINED> instruction: 0x000078b0
    9f58:			; <UNDEFINED> instruction: 0x000078b4
    9f5c:	andeq	r7, r0, r2, lsl #18
    9f60:	andeq	r7, r0, r9, asr #17
    9f64:	ldrdeq	r7, [r0], -fp
    9f68:	andeq	r7, r0, lr, lsl #18
    9f6c:	andeq	r7, r0, fp, lsl #18
    9f70:	andeq	r7, r0, fp, lsr sl
    9f74:	muleq	r0, lr, r9
    9f78:	andeq	r7, r0, r8, lsr #18
    9f7c:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
    9f80:	andeq	r7, r0, r0, lsl #18
    9f84:	andeq	r7, r0, sl, lsr #18
    9f88:	andeq	r7, r0, r3, asr r9
    9f8c:	muleq	r0, sp, r9
    9f90:	andeq	r7, r0, fp, ror #18
    9f94:	andeq	r7, r0, fp, ror #18
    9f98:	andeq	r7, r0, r1, lsr #19
    9f9c:	andeq	r7, r0, r7, lsr #19
    9fa0:	andeq	r7, r0, r2, ror sl
    9fa4:	strdeq	r7, [r0], -r4
    9fa8:			; <UNDEFINED> instruction: 0x000079be
    9fac:	andeq	r7, r0, r1, asr #19
    9fb0:	andeq	r7, r0, r9, lsl #20
    9fb4:	andeq	r7, r0, r6, lsl sl
    9fb8:	andeq	r7, r0, pc, lsl #21
    9fbc:	andeq	r7, r0, r9, lsr sl
    9fc0:	andeq	r7, r0, lr, asr #20
    9fc4:	andeq	r7, r0, pc, lsr #21
    9fc8:	andeq	r7, r0, r2, ror sl
    9fcc:	andeq	r7, r0, r7, lsr #21
    9fd0:			; <UNDEFINED> instruction: 0x00007ab3
    9fd4:	muleq	r0, r9, sp
    9fd8:	andeq	r7, r0, r7, lsl ip
    9fdc:	andeq	r7, r0, r4, asr fp
    9fe0:	andeq	r7, r0, r5, lsl #22
    9fe4:	andeq	r7, r0, ip, asr #21
    9fe8:	andeq	r7, r0, r3, ror #21
    9fec:	andeq	r7, r0, ip, lsl #22
    9ff0:	andeq	r7, r0, pc, lsl #22
    9ff4:	andeq	r7, r0, r3, ror fp
    9ff8:	andeq	r7, r0, pc, lsr #22
    9ffc:	andeq	r7, r0, ip, lsr fp
    a000:	andeq	r7, r0, r9, ror fp
    a004:	andeq	r7, r0, r0, lsl #23
    a008:	andeq	r7, r0, ip, lsr ip
    a00c:	andeq	r7, r0, r1, asr #23
    a010:	muleq	r0, r8, fp
    a014:	muleq	r0, ip, fp
    a018:	andeq	r7, r0, r2, asr #23
    a01c:	ldrdeq	r7, [r0], -sl
    a020:	andeq	r7, r0, r3, asr ip
    a024:	andeq	r7, r0, sp, lsl #24
    a028:	andeq	r7, r0, sp, lsl ip
    a02c:	andeq	r7, r0, ip, ror #24
    a030:	andeq	r7, r0, r5, ror ip
    a034:	andeq	r7, r0, sl, lsr #27
    a038:	andeq	r7, r0, r2, lsl #26
    a03c:	andeq	r7, r0, r7, lsr #25
    a040:	andeq	r7, r0, sp, ror ip
    a044:	andeq	r7, r0, r0, lsl #25
    a048:			; <UNDEFINED> instruction: 0x00007cb6
    a04c:			; <UNDEFINED> instruction: 0x00007cb8
    a050:	strdeq	r7, [r0], -lr
    a054:	ldrdeq	r7, [r0], -r3
    a058:	ldrdeq	r7, [r0], -r5
    a05c:	andeq	r7, r0, r8, lsl #26
    a060:	andeq	r7, r0, sp, lsl sp
    a064:	andeq	r7, r0, r4, asr #27
    a068:	andeq	r7, r0, r5, ror #26
    a06c:	andeq	r7, r0, lr, lsl sp
    a070:	andeq	r7, r0, ip, lsr sp
    a074:	andeq	r7, r0, r8, ror #26
    a078:	andeq	r7, r0, r5, ror sp
    a07c:	andeq	r7, r0, r2, asr #27
    a080:	andeq	r7, r0, r7, lsl #27
    a084:	muleq	r0, r5, sp
    a088:	andeq	r7, r0, r7, asr #27
    a08c:	andeq	r7, r0, r2, lsr #27
    a090:	ldrdeq	r7, [r0], -r1
    a094:	ldrdeq	r7, [r0], -r4
    a098:			; <UNDEFINED> instruction: 0x000083b7
    a09c:	andeq	r8, r0, r0, ror #1
    a0a0:	andeq	r7, r0, r0, ror #30
    a0a4:	andeq	r7, r0, sp, asr lr
    a0a8:	andeq	r7, r0, r2, lsl lr
    a0ac:	ldrdeq	r7, [r0], -r8
    a0b0:	andeq	r7, r0, r6, ror #27
    a0b4:	andeq	r7, r0, sl, lsl #28
    a0b8:	andeq	r7, r0, r9, lsl lr
    a0bc:	muleq	r0, fp, lr
    a0c0:	andeq	r7, r0, r0, lsr #28
    a0c4:	andeq	r7, r0, r4, lsr lr
    a0c8:	muleq	r0, r4, lr
    a0cc:	andeq	r7, r0, r3, asr #29
    a0d0:	andeq	r7, r0, r8, lsl #31
    a0d4:	andeq	r7, r0, r2, lsr pc
    a0d8:	strdeq	r7, [r0], -r2
    a0dc:	andeq	r7, r0, r2, lsl #30
    a0e0:	andeq	r7, r0, r6, lsr pc
    a0e4:	andeq	r7, r0, lr, lsr pc
    a0e8:			; <UNDEFINED> instruction: 0x00007fb0
    a0ec:	andeq	r7, r0, r4, ror #30
    a0f0:	andeq	r7, r0, sl, lsl #31
    a0f4:	andeq	r7, r0, fp, lsr #31
    a0f8:	andeq	r7, r0, r9, lsr #31
    a0fc:	strdeq	r8, [r0], -r5
    a100:	andeq	r8, r0, r7, asr #32
    a104:	strdeq	r7, [r0], -r1
    a108:	andeq	r7, r0, fp, asr #31
    a10c:	andeq	r7, r0, pc, asr #31
    a110:	andeq	r7, r0, pc, ror #31
    a114:	strdeq	r7, [r0], -r7	; <UNPREDICTABLE>
    a118:	andeq	r8, r0, r9, asr r0
    a11c:	andeq	r8, r0, r7, lsl r0
    a120:	andeq	r8, r0, ip, lsr #32
    a124:	andeq	r8, r0, fp, asr r0
    a128:	andeq	r8, r0, r7, asr r0
    a12c:	andeq	r8, r0, r6, lsl r1
    a130:	strheq	r8, [r0], -r5
    a134:	andeq	r8, r0, r0, ror r0
    a138:	andeq	r8, r0, r4, lsl #1
    a13c:	strheq	r8, [r0], -r3
    a140:	strheq	r8, [r0], -r2
    a144:	andeq	r8, r0, sl, lsr #2
    a148:	strdeq	r8, [r0], -r3
    a14c:	andeq	r8, r0, r3, lsl #2
    a150:	andeq	r8, r0, r8, lsr #2
    a154:	andeq	r8, r0, ip, lsl #2
    a158:	andeq	r8, r0, ip, lsr #2
    a15c:	andeq	r8, r0, r0, asr #2
    a160:	andeq	r8, r0, r8, lsl #7
    a164:	andeq	r8, r0, r9, lsr r2
    a168:	andeq	r8, r0, fp, lsr #3
    a16c:	andeq	r8, r0, sl, ror r1
    a170:	andeq	r8, r0, r4, asr #2
    a174:	andeq	r8, r0, r7, asr #2
    a178:	andeq	r8, r0, fp, ror #2
    a17c:	andeq	r8, r0, r8, ror #2
    a180:	andeq	r8, r0, r0, lsr #3
    a184:	andeq	r8, r0, r8, ror #2
    a188:	andeq	r8, r0, lr, ror #2
    a18c:	muleq	r0, sl, r1
    a190:	muleq	r0, fp, r1
    a194:	movw	r3, #1006	; 0x3ee
    a198:	cmp	r0, r3
    a19c:	beq	cdb4 <bt_compidtostr@@Base+0x5b70>
    a1a0:	bhi	a2d4 <bt_compidtostr@@Base+0x3090>
    a1a4:	movw	r3, #990	; 0x3de
    a1a8:	cmp	r0, r3
    a1ac:	beq	cdc0 <bt_compidtostr@@Base+0x5b7c>
    a1b0:	bhi	a244 <bt_compidtostr@@Base+0x3000>
    a1b4:	movw	r3, #982	; 0x3d6
    a1b8:	cmp	r0, r3
    a1bc:	beq	cdcc <bt_compidtostr@@Base+0x5b88>
    a1c0:	bhi	a204 <bt_compidtostr@@Base+0x2fc0>
    a1c4:	movw	r3, #978	; 0x3d2
    a1c8:	cmp	r0, r3
    a1cc:	beq	cdd8 <bt_compidtostr@@Base+0x5b94>
    a1d0:	bhi	a1ec <bt_compidtostr@@Base+0x2fa8>
    a1d4:	cmp	r0, #976	; 0x3d0
    a1d8:	beq	cde4 <bt_compidtostr@@Base+0x5ba0>
    a1dc:	bhi	cdf0 <bt_compidtostr@@Base+0x5bac>
    a1e0:	ldr	r0, [pc, #-808]	; 9ec0 <bt_compidtostr@@Base+0x2c7c>
    a1e4:	add	r0, pc, r0
    a1e8:	bx	lr
    a1ec:	cmp	r0, #980	; 0x3d4
    a1f0:	beq	cdfc <bt_compidtostr@@Base+0x5bb8>
    a1f4:	bhi	ce08 <bt_compidtostr@@Base+0x5bc4>
    a1f8:	ldr	r0, [pc, #-828]	; 9ec4 <bt_compidtostr@@Base+0x2c80>
    a1fc:	add	r0, pc, r0
    a200:	bx	lr
    a204:	movw	r3, #986	; 0x3da
    a208:	cmp	r0, r3
    a20c:	beq	ce14 <bt_compidtostr@@Base+0x5bd0>
    a210:	bhi	a22c <bt_compidtostr@@Base+0x2fe8>
    a214:	cmp	r0, #984	; 0x3d8
    a218:	beq	ce20 <bt_compidtostr@@Base+0x5bdc>
    a21c:	bhi	ce2c <bt_compidtostr@@Base+0x5be8>
    a220:	ldr	r0, [pc, #-864]	; 9ec8 <bt_compidtostr@@Base+0x2c84>
    a224:	add	r0, pc, r0
    a228:	bx	lr
    a22c:	cmp	r0, #988	; 0x3dc
    a230:	beq	ce38 <bt_compidtostr@@Base+0x5bf4>
    a234:	bhi	ce44 <bt_compidtostr@@Base+0x5c00>
    a238:	ldr	r0, [pc, #-884]	; 9ecc <bt_compidtostr@@Base+0x2c88>
    a23c:	add	r0, pc, r0
    a240:	bx	lr
    a244:	movw	r3, #998	; 0x3e6
    a248:	cmp	r0, r3
    a24c:	beq	ce50 <bt_compidtostr@@Base+0x5c0c>
    a250:	bhi	a294 <bt_compidtostr@@Base+0x3050>
    a254:	movw	r3, #994	; 0x3e2
    a258:	cmp	r0, r3
    a25c:	beq	ce5c <bt_compidtostr@@Base+0x5c18>
    a260:	bhi	a27c <bt_compidtostr@@Base+0x3038>
    a264:	cmp	r0, #992	; 0x3e0
    a268:	beq	ce68 <bt_compidtostr@@Base+0x5c24>
    a26c:	bhi	ce74 <bt_compidtostr@@Base+0x5c30>
    a270:	ldr	r0, [pc, #-936]	; 9ed0 <bt_compidtostr@@Base+0x2c8c>
    a274:	add	r0, pc, r0
    a278:	bx	lr
    a27c:	cmp	r0, #996	; 0x3e4
    a280:	beq	ce80 <bt_compidtostr@@Base+0x5c3c>
    a284:	bhi	ce8c <bt_compidtostr@@Base+0x5c48>
    a288:	ldr	r0, [pc, #-956]	; 9ed4 <bt_compidtostr@@Base+0x2c90>
    a28c:	add	r0, pc, r0
    a290:	bx	lr
    a294:	movw	r3, #1002	; 0x3ea
    a298:	cmp	r0, r3
    a29c:	beq	ce98 <bt_compidtostr@@Base+0x5c54>
    a2a0:	bhi	a2bc <bt_compidtostr@@Base+0x3078>
    a2a4:	cmp	r0, #1000	; 0x3e8
    a2a8:	beq	cea4 <bt_compidtostr@@Base+0x5c60>
    a2ac:	bhi	ceb0 <bt_compidtostr@@Base+0x5c6c>
    a2b0:	ldr	r0, [pc, #-992]	; 9ed8 <bt_compidtostr@@Base+0x2c94>
    a2b4:	add	r0, pc, r0
    a2b8:	bx	lr
    a2bc:	cmp	r0, #1004	; 0x3ec
    a2c0:	beq	cebc <bt_compidtostr@@Base+0x5c78>
    a2c4:	bhi	cec8 <bt_compidtostr@@Base+0x5c84>
    a2c8:	ldr	r0, [pc, #-1012]	; 9edc <bt_compidtostr@@Base+0x2c98>
    a2cc:	add	r0, pc, r0
    a2d0:	bx	lr
    a2d4:	movw	r3, #1022	; 0x3fe
    a2d8:	cmp	r0, r3
    a2dc:	beq	ced4 <bt_compidtostr@@Base+0x5c90>
    a2e0:	bhi	a374 <bt_compidtostr@@Base+0x3130>
    a2e4:	movw	r3, #1014	; 0x3f6
    a2e8:	cmp	r0, r3
    a2ec:	beq	cee0 <bt_compidtostr@@Base+0x5c9c>
    a2f0:	bhi	a334 <bt_compidtostr@@Base+0x30f0>
    a2f4:	movw	r3, #1010	; 0x3f2
    a2f8:	cmp	r0, r3
    a2fc:	beq	ceec <bt_compidtostr@@Base+0x5ca8>
    a300:	bhi	a31c <bt_compidtostr@@Base+0x30d8>
    a304:	cmp	r0, #1008	; 0x3f0
    a308:	beq	cef8 <bt_compidtostr@@Base+0x5cb4>
    a30c:	bhi	d288 <bt_compidtostr@@Base+0x6044>
    a310:	ldr	r0, [pc, #-1080]	; 9ee0 <bt_compidtostr@@Base+0x2c9c>
    a314:	add	r0, pc, r0
    a318:	bx	lr
    a31c:	cmp	r0, #1012	; 0x3f4
    a320:	beq	d294 <bt_compidtostr@@Base+0x6050>
    a324:	bhi	d2a0 <bt_compidtostr@@Base+0x605c>
    a328:	ldr	r0, [pc, #-1100]	; 9ee4 <bt_compidtostr@@Base+0x2ca0>
    a32c:	add	r0, pc, r0
    a330:	bx	lr
    a334:	movw	r3, #1018	; 0x3fa
    a338:	cmp	r0, r3
    a33c:	beq	d2ac <bt_compidtostr@@Base+0x6068>
    a340:	bhi	a35c <bt_compidtostr@@Base+0x3118>
    a344:	cmp	r0, #1016	; 0x3f8
    a348:	beq	d2b8 <bt_compidtostr@@Base+0x6074>
    a34c:	bhi	d2c4 <bt_compidtostr@@Base+0x6080>
    a350:	ldr	r0, [pc, #-1136]	; 9ee8 <bt_compidtostr@@Base+0x2ca4>
    a354:	add	r0, pc, r0
    a358:	bx	lr
    a35c:	cmp	r0, #1020	; 0x3fc
    a360:	beq	d2d0 <bt_compidtostr@@Base+0x608c>
    a364:	bhi	d2dc <bt_compidtostr@@Base+0x6098>
    a368:	ldr	r0, [pc, #-1156]	; 9eec <bt_compidtostr@@Base+0x2ca8>
    a36c:	add	r0, pc, r0
    a370:	bx	lr
    a374:	movw	r3, #1030	; 0x406
    a378:	cmp	r0, r3
    a37c:	beq	d2e8 <bt_compidtostr@@Base+0x60a4>
    a380:	bhi	a3c8 <bt_compidtostr@@Base+0x3184>
    a384:	movw	r3, #1026	; 0x402
    a388:	cmp	r0, r3
    a38c:	beq	d2f4 <bt_compidtostr@@Base+0x60b0>
    a390:	bhi	a3ac <bt_compidtostr@@Base+0x3168>
    a394:	cmp	r0, #1024	; 0x400
    a398:	beq	d300 <bt_compidtostr@@Base+0x60bc>
    a39c:	bhi	d30c <bt_compidtostr@@Base+0x60c8>
    a3a0:	ldr	r0, [pc, #-1208]	; 9ef0 <bt_compidtostr@@Base+0x2cac>
    a3a4:	add	r0, pc, r0
    a3a8:	bx	lr
    a3ac:	movw	r3, #1028	; 0x404
    a3b0:	cmp	r0, r3
    a3b4:	beq	d318 <bt_compidtostr@@Base+0x60d4>
    a3b8:	bhi	d324 <bt_compidtostr@@Base+0x60e0>
    a3bc:	ldr	r0, [pc, #-1232]	; 9ef4 <bt_compidtostr@@Base+0x2cb0>
    a3c0:	add	r0, pc, r0
    a3c4:	bx	lr
    a3c8:	movw	r3, #1034	; 0x40a
    a3cc:	cmp	r0, r3
    a3d0:	beq	d330 <bt_compidtostr@@Base+0x60ec>
    a3d4:	bhi	a3f4 <bt_compidtostr@@Base+0x31b0>
    a3d8:	movw	r3, #1032	; 0x408
    a3dc:	cmp	r0, r3
    a3e0:	beq	d33c <bt_compidtostr@@Base+0x60f8>
    a3e4:	bhi	d348 <bt_compidtostr@@Base+0x6104>
    a3e8:	ldr	r0, [pc, #-1272]	; 9ef8 <bt_compidtostr@@Base+0x2cb4>
    a3ec:	add	r0, pc, r0
    a3f0:	bx	lr
    a3f4:	movw	r3, #1036	; 0x40c
    a3f8:	cmp	r0, r3
    a3fc:	beq	d354 <bt_compidtostr@@Base+0x6110>
    a400:	bcc	d360 <bt_compidtostr@@Base+0x611c>
    a404:	movw	r3, #1037	; 0x40d
    a408:	cmp	r0, r3
    a40c:	beq	d36c <bt_compidtostr@@Base+0x6128>
    a410:	movw	r3, #65535	; 0xffff
    a414:	cmp	r0, r3
    a418:	beq	d378 <bt_compidtostr@@Base+0x6134>
    a41c:	ldr	r0, [pc, #-1320]	; 9efc <bt_compidtostr@@Base+0x2cb8>
    a420:	add	r0, pc, r0
    a424:	bx	lr
    a428:	ldr	r0, [pc, #-1328]	; 9f00 <bt_compidtostr@@Base+0x2cbc>
    a42c:	add	r0, pc, r0
    a430:	bx	lr
    a434:	ldr	r0, [pc, #-1336]	; 9f04 <bt_compidtostr@@Base+0x2cc0>
    a438:	add	r0, pc, r0
    a43c:	bx	lr
    a440:	ldr	r0, [pc, #-1344]	; 9f08 <bt_compidtostr@@Base+0x2cc4>
    a444:	add	r0, pc, r0
    a448:	bx	lr
    a44c:	ldr	r0, [pc, #-1352]	; 9f0c <bt_compidtostr@@Base+0x2cc8>
    a450:	add	r0, pc, r0
    a454:	bx	lr
    a458:	ldr	r0, [pc, #-1360]	; 9f10 <bt_compidtostr@@Base+0x2ccc>
    a45c:	add	r0, pc, r0
    a460:	bx	lr
    a464:	ldr	r0, [pc, #-1368]	; 9f14 <bt_compidtostr@@Base+0x2cd0>
    a468:	add	r0, pc, r0
    a46c:	bx	lr
    a470:	ldr	r0, [pc, #-1376]	; 9f18 <bt_compidtostr@@Base+0x2cd4>
    a474:	add	r0, pc, r0
    a478:	bx	lr
    a47c:	ldr	r0, [pc, #-1384]	; 9f1c <bt_compidtostr@@Base+0x2cd8>
    a480:	add	r0, pc, r0
    a484:	bx	lr
    a488:	ldr	r0, [pc, #-1392]	; 9f20 <bt_compidtostr@@Base+0x2cdc>
    a48c:	add	r0, pc, r0
    a490:	bx	lr
    a494:	ldr	r0, [pc, #-1400]	; 9f24 <bt_compidtostr@@Base+0x2ce0>
    a498:	add	r0, pc, r0
    a49c:	bx	lr
    a4a0:	ldr	r0, [pc, #-1408]	; 9f28 <bt_compidtostr@@Base+0x2ce4>
    a4a4:	add	r0, pc, r0
    a4a8:	bx	lr
    a4ac:	ldr	r0, [pc, #-1416]	; 9f2c <bt_compidtostr@@Base+0x2ce8>
    a4b0:	add	r0, pc, r0
    a4b4:	bx	lr
    a4b8:	ldr	r0, [pc, #-1424]	; 9f30 <bt_compidtostr@@Base+0x2cec>
    a4bc:	add	r0, pc, r0
    a4c0:	bx	lr
    a4c4:	ldr	r0, [pc, #-1432]	; 9f34 <bt_compidtostr@@Base+0x2cf0>
    a4c8:	add	r0, pc, r0
    a4cc:	bx	lr
    a4d0:	ldr	r0, [pc, #-1440]	; 9f38 <bt_compidtostr@@Base+0x2cf4>
    a4d4:	add	r0, pc, r0
    a4d8:	bx	lr
    a4dc:	ldr	r0, [pc, #-1448]	; 9f3c <bt_compidtostr@@Base+0x2cf8>
    a4e0:	add	r0, pc, r0
    a4e4:	bx	lr
    a4e8:	ldr	r0, [pc, #-1456]	; 9f40 <bt_compidtostr@@Base+0x2cfc>
    a4ec:	add	r0, pc, r0
    a4f0:	bx	lr
    a4f4:	ldr	r0, [pc, #-1464]	; 9f44 <bt_compidtostr@@Base+0x2d00>
    a4f8:	add	r0, pc, r0
    a4fc:	bx	lr
    a500:	ldr	r0, [pc, #-1472]	; 9f48 <bt_compidtostr@@Base+0x2d04>
    a504:	add	r0, pc, r0
    a508:	bx	lr
    a50c:	ldr	r0, [pc, #-1480]	; 9f4c <bt_compidtostr@@Base+0x2d08>
    a510:	add	r0, pc, r0
    a514:	bx	lr
    a518:	ldr	r0, [pc, #-1488]	; 9f50 <bt_compidtostr@@Base+0x2d0c>
    a51c:	add	r0, pc, r0
    a520:	bx	lr
    a524:	ldr	r0, [pc, #-1496]	; 9f54 <bt_compidtostr@@Base+0x2d10>
    a528:	add	r0, pc, r0
    a52c:	bx	lr
    a530:	ldr	r0, [pc, #-1504]	; 9f58 <bt_compidtostr@@Base+0x2d14>
    a534:	add	r0, pc, r0
    a538:	bx	lr
    a53c:	ldr	r0, [pc, #-1512]	; 9f5c <bt_compidtostr@@Base+0x2d18>
    a540:	add	r0, pc, r0
    a544:	bx	lr
    a548:	ldr	r0, [pc, #-1520]	; 9f60 <bt_compidtostr@@Base+0x2d1c>
    a54c:	add	r0, pc, r0
    a550:	bx	lr
    a554:	ldr	r0, [pc, #-1528]	; 9f64 <bt_compidtostr@@Base+0x2d20>
    a558:	add	r0, pc, r0
    a55c:	bx	lr
    a560:	ldr	r0, [pc, #-1536]	; 9f68 <bt_compidtostr@@Base+0x2d24>
    a564:	add	r0, pc, r0
    a568:	bx	lr
    a56c:	ldr	r0, [pc, #-1544]	; 9f6c <bt_compidtostr@@Base+0x2d28>
    a570:	add	r0, pc, r0
    a574:	bx	lr
    a578:	ldr	r0, [pc, #-1552]	; 9f70 <bt_compidtostr@@Base+0x2d2c>
    a57c:	add	r0, pc, r0
    a580:	bx	lr
    a584:	ldr	r0, [pc, #-1560]	; 9f74 <bt_compidtostr@@Base+0x2d30>
    a588:	add	r0, pc, r0
    a58c:	bx	lr
    a590:	ldr	r0, [pc, #-1568]	; 9f78 <bt_compidtostr@@Base+0x2d34>
    a594:	add	r0, pc, r0
    a598:	bx	lr
    a59c:	ldr	r0, [pc, #-1576]	; 9f7c <bt_compidtostr@@Base+0x2d38>
    a5a0:	add	r0, pc, r0
    a5a4:	bx	lr
    a5a8:	ldr	r0, [pc, #-1584]	; 9f80 <bt_compidtostr@@Base+0x2d3c>
    a5ac:	add	r0, pc, r0
    a5b0:	bx	lr
    a5b4:	ldr	r0, [pc, #-1592]	; 9f84 <bt_compidtostr@@Base+0x2d40>
    a5b8:	add	r0, pc, r0
    a5bc:	bx	lr
    a5c0:	ldr	r0, [pc, #-1600]	; 9f88 <bt_compidtostr@@Base+0x2d44>
    a5c4:	add	r0, pc, r0
    a5c8:	bx	lr
    a5cc:	ldr	r0, [pc, #-1608]	; 9f8c <bt_compidtostr@@Base+0x2d48>
    a5d0:	add	r0, pc, r0
    a5d4:	bx	lr
    a5d8:	ldr	r0, [pc, #-1616]	; 9f90 <bt_compidtostr@@Base+0x2d4c>
    a5dc:	add	r0, pc, r0
    a5e0:	bx	lr
    a5e4:	ldr	r0, [pc, #-1624]	; 9f94 <bt_compidtostr@@Base+0x2d50>
    a5e8:	add	r0, pc, r0
    a5ec:	bx	lr
    a5f0:	ldr	r0, [pc, #-1632]	; 9f98 <bt_compidtostr@@Base+0x2d54>
    a5f4:	add	r0, pc, r0
    a5f8:	bx	lr
    a5fc:	ldr	r0, [pc, #-1640]	; 9f9c <bt_compidtostr@@Base+0x2d58>
    a600:	add	r0, pc, r0
    a604:	bx	lr
    a608:	ldr	r0, [pc, #-1648]	; 9fa0 <bt_compidtostr@@Base+0x2d5c>
    a60c:	add	r0, pc, r0
    a610:	bx	lr
    a614:	ldr	r0, [pc, #-1656]	; 9fa4 <bt_compidtostr@@Base+0x2d60>
    a618:	add	r0, pc, r0
    a61c:	bx	lr
    a620:	ldr	r0, [pc, #-1664]	; 9fa8 <bt_compidtostr@@Base+0x2d64>
    a624:	add	r0, pc, r0
    a628:	bx	lr
    a62c:	ldr	r0, [pc, #-1672]	; 9fac <bt_compidtostr@@Base+0x2d68>
    a630:	add	r0, pc, r0
    a634:	bx	lr
    a638:	ldr	r0, [pc, #-1680]	; 9fb0 <bt_compidtostr@@Base+0x2d6c>
    a63c:	add	r0, pc, r0
    a640:	bx	lr
    a644:	ldr	r0, [pc, #-1688]	; 9fb4 <bt_compidtostr@@Base+0x2d70>
    a648:	add	r0, pc, r0
    a64c:	bx	lr
    a650:	ldr	r0, [pc, #-1696]	; 9fb8 <bt_compidtostr@@Base+0x2d74>
    a654:	add	r0, pc, r0
    a658:	bx	lr
    a65c:	ldr	r0, [pc, #-1704]	; 9fbc <bt_compidtostr@@Base+0x2d78>
    a660:	add	r0, pc, r0
    a664:	bx	lr
    a668:	ldr	r0, [pc, #-1712]	; 9fc0 <bt_compidtostr@@Base+0x2d7c>
    a66c:	add	r0, pc, r0
    a670:	bx	lr
    a674:	ldr	r0, [pc, #-1720]	; 9fc4 <bt_compidtostr@@Base+0x2d80>
    a678:	add	r0, pc, r0
    a67c:	bx	lr
    a680:	ldr	r0, [pc, #-1728]	; 9fc8 <bt_compidtostr@@Base+0x2d84>
    a684:	add	r0, pc, r0
    a688:	bx	lr
    a68c:	ldr	r0, [pc, #-1736]	; 9fcc <bt_compidtostr@@Base+0x2d88>
    a690:	add	r0, pc, r0
    a694:	bx	lr
    a698:	ldr	r0, [pc, #-1744]	; 9fd0 <bt_compidtostr@@Base+0x2d8c>
    a69c:	add	r0, pc, r0
    a6a0:	bx	lr
    a6a4:	ldr	r0, [pc, #-1752]	; 9fd4 <bt_compidtostr@@Base+0x2d90>
    a6a8:	add	r0, pc, r0
    a6ac:	bx	lr
    a6b0:	ldr	r0, [pc, #-1760]	; 9fd8 <bt_compidtostr@@Base+0x2d94>
    a6b4:	add	r0, pc, r0
    a6b8:	bx	lr
    a6bc:	ldr	r0, [pc, #-1768]	; 9fdc <bt_compidtostr@@Base+0x2d98>
    a6c0:	add	r0, pc, r0
    a6c4:	bx	lr
    a6c8:	ldr	r0, [pc, #-1776]	; 9fe0 <bt_compidtostr@@Base+0x2d9c>
    a6cc:	add	r0, pc, r0
    a6d0:	bx	lr
    a6d4:	ldr	r0, [pc, #-1784]	; 9fe4 <bt_compidtostr@@Base+0x2da0>
    a6d8:	add	r0, pc, r0
    a6dc:	bx	lr
    a6e0:	ldr	r0, [pc, #-1792]	; 9fe8 <bt_compidtostr@@Base+0x2da4>
    a6e4:	add	r0, pc, r0
    a6e8:	bx	lr
    a6ec:	ldr	r0, [pc, #-1800]	; 9fec <bt_compidtostr@@Base+0x2da8>
    a6f0:	add	r0, pc, r0
    a6f4:	bx	lr
    a6f8:	ldr	r0, [pc, #-1808]	; 9ff0 <bt_compidtostr@@Base+0x2dac>
    a6fc:	add	r0, pc, r0
    a700:	bx	lr
    a704:	ldr	r0, [pc, #-1816]	; 9ff4 <bt_compidtostr@@Base+0x2db0>
    a708:	add	r0, pc, r0
    a70c:	bx	lr
    a710:	ldr	r0, [pc, #-1824]	; 9ff8 <bt_compidtostr@@Base+0x2db4>
    a714:	add	r0, pc, r0
    a718:	bx	lr
    a71c:	ldr	r0, [pc, #-1832]	; 9ffc <bt_compidtostr@@Base+0x2db8>
    a720:	add	r0, pc, r0
    a724:	bx	lr
    a728:	ldr	r0, [pc, #-1840]	; a000 <bt_compidtostr@@Base+0x2dbc>
    a72c:	add	r0, pc, r0
    a730:	bx	lr
    a734:	ldr	r0, [pc, #-1848]	; a004 <bt_compidtostr@@Base+0x2dc0>
    a738:	add	r0, pc, r0
    a73c:	bx	lr
    a740:	ldr	r0, [pc, #-1856]	; a008 <bt_compidtostr@@Base+0x2dc4>
    a744:	add	r0, pc, r0
    a748:	bx	lr
    a74c:	ldr	r0, [pc, #-1864]	; a00c <bt_compidtostr@@Base+0x2dc8>
    a750:	add	r0, pc, r0
    a754:	bx	lr
    a758:	ldr	r0, [pc, #-1872]	; a010 <bt_compidtostr@@Base+0x2dcc>
    a75c:	add	r0, pc, r0
    a760:	bx	lr
    a764:	ldr	r0, [pc, #-1880]	; a014 <bt_compidtostr@@Base+0x2dd0>
    a768:	add	r0, pc, r0
    a76c:	bx	lr
    a770:	ldr	r0, [pc, #-1888]	; a018 <bt_compidtostr@@Base+0x2dd4>
    a774:	add	r0, pc, r0
    a778:	bx	lr
    a77c:	ldr	r0, [pc, #-1896]	; a01c <bt_compidtostr@@Base+0x2dd8>
    a780:	add	r0, pc, r0
    a784:	bx	lr
    a788:	ldr	r0, [pc, #-1904]	; a020 <bt_compidtostr@@Base+0x2ddc>
    a78c:	add	r0, pc, r0
    a790:	bx	lr
    a794:	ldr	r0, [pc, #-1912]	; a024 <bt_compidtostr@@Base+0x2de0>
    a798:	add	r0, pc, r0
    a79c:	bx	lr
    a7a0:	ldr	r0, [pc, #-1920]	; a028 <bt_compidtostr@@Base+0x2de4>
    a7a4:	add	r0, pc, r0
    a7a8:	bx	lr
    a7ac:	ldr	r0, [pc, #-1928]	; a02c <bt_compidtostr@@Base+0x2de8>
    a7b0:	add	r0, pc, r0
    a7b4:	bx	lr
    a7b8:	ldr	r0, [pc, #-1936]	; a030 <bt_compidtostr@@Base+0x2dec>
    a7bc:	add	r0, pc, r0
    a7c0:	bx	lr
    a7c4:	ldr	r0, [pc, #-1944]	; a034 <bt_compidtostr@@Base+0x2df0>
    a7c8:	add	r0, pc, r0
    a7cc:	bx	lr
    a7d0:	ldr	r0, [pc, #-1952]	; a038 <bt_compidtostr@@Base+0x2df4>
    a7d4:	add	r0, pc, r0
    a7d8:	bx	lr
    a7dc:	ldr	r0, [pc, #-1960]	; a03c <bt_compidtostr@@Base+0x2df8>
    a7e0:	add	r0, pc, r0
    a7e4:	bx	lr
    a7e8:	ldr	r0, [pc, #-1968]	; a040 <bt_compidtostr@@Base+0x2dfc>
    a7ec:	add	r0, pc, r0
    a7f0:	bx	lr
    a7f4:	ldr	r0, [pc, #-1976]	; a044 <bt_compidtostr@@Base+0x2e00>
    a7f8:	add	r0, pc, r0
    a7fc:	bx	lr
    a800:	ldr	r0, [pc, #-1984]	; a048 <bt_compidtostr@@Base+0x2e04>
    a804:	add	r0, pc, r0
    a808:	bx	lr
    a80c:	ldr	r0, [pc, #-1992]	; a04c <bt_compidtostr@@Base+0x2e08>
    a810:	add	r0, pc, r0
    a814:	bx	lr
    a818:	ldr	r0, [pc, #-2000]	; a050 <bt_compidtostr@@Base+0x2e0c>
    a81c:	add	r0, pc, r0
    a820:	bx	lr
    a824:	ldr	r0, [pc, #-2008]	; a054 <bt_compidtostr@@Base+0x2e10>
    a828:	add	r0, pc, r0
    a82c:	bx	lr
    a830:	ldr	r0, [pc, #-2016]	; a058 <bt_compidtostr@@Base+0x2e14>
    a834:	add	r0, pc, r0
    a838:	bx	lr
    a83c:	ldr	r0, [pc, #-2024]	; a05c <bt_compidtostr@@Base+0x2e18>
    a840:	add	r0, pc, r0
    a844:	bx	lr
    a848:	ldr	r0, [pc, #-2032]	; a060 <bt_compidtostr@@Base+0x2e1c>
    a84c:	add	r0, pc, r0
    a850:	bx	lr
    a854:	ldr	r0, [pc, #-2040]	; a064 <bt_compidtostr@@Base+0x2e20>
    a858:	add	r0, pc, r0
    a85c:	bx	lr
    a860:	ldr	r0, [pc, #-2048]	; a068 <bt_compidtostr@@Base+0x2e24>
    a864:	add	r0, pc, r0
    a868:	bx	lr
    a86c:	ldr	r0, [pc, #-2056]	; a06c <bt_compidtostr@@Base+0x2e28>
    a870:	add	r0, pc, r0
    a874:	bx	lr
    a878:	ldr	r0, [pc, #-2064]	; a070 <bt_compidtostr@@Base+0x2e2c>
    a87c:	add	r0, pc, r0
    a880:	bx	lr
    a884:	ldr	r0, [pc, #-2072]	; a074 <bt_compidtostr@@Base+0x2e30>
    a888:	add	r0, pc, r0
    a88c:	bx	lr
    a890:	ldr	r0, [pc, #-2080]	; a078 <bt_compidtostr@@Base+0x2e34>
    a894:	add	r0, pc, r0
    a898:	bx	lr
    a89c:	ldr	r0, [pc, #-2088]	; a07c <bt_compidtostr@@Base+0x2e38>
    a8a0:	add	r0, pc, r0
    a8a4:	bx	lr
    a8a8:	ldr	r0, [pc, #-2096]	; a080 <bt_compidtostr@@Base+0x2e3c>
    a8ac:	add	r0, pc, r0
    a8b0:	bx	lr
    a8b4:	ldr	r0, [pc, #-2104]	; a084 <bt_compidtostr@@Base+0x2e40>
    a8b8:	add	r0, pc, r0
    a8bc:	bx	lr
    a8c0:	ldr	r0, [pc, #-2112]	; a088 <bt_compidtostr@@Base+0x2e44>
    a8c4:	add	r0, pc, r0
    a8c8:	bx	lr
    a8cc:	ldr	r0, [pc, #-2120]	; a08c <bt_compidtostr@@Base+0x2e48>
    a8d0:	add	r0, pc, r0
    a8d4:	bx	lr
    a8d8:	ldr	r0, [pc, #-2128]	; a090 <bt_compidtostr@@Base+0x2e4c>
    a8dc:	add	r0, pc, r0
    a8e0:	bx	lr
    a8e4:	ldr	r0, [pc, #-2136]	; a094 <bt_compidtostr@@Base+0x2e50>
    a8e8:	add	r0, pc, r0
    a8ec:	bx	lr
    a8f0:	ldr	r0, [pc, #-2144]	; a098 <bt_compidtostr@@Base+0x2e54>
    a8f4:	add	r0, pc, r0
    a8f8:	bx	lr
    a8fc:	ldr	r0, [pc, #-2152]	; a09c <bt_compidtostr@@Base+0x2e58>
    a900:	add	r0, pc, r0
    a904:	bx	lr
    a908:	ldr	r0, [pc, #-2160]	; a0a0 <bt_compidtostr@@Base+0x2e5c>
    a90c:	add	r0, pc, r0
    a910:	bx	lr
    a914:	ldr	r0, [pc, #-2168]	; a0a4 <bt_compidtostr@@Base+0x2e60>
    a918:	add	r0, pc, r0
    a91c:	bx	lr
    a920:	ldr	r0, [pc, #-2176]	; a0a8 <bt_compidtostr@@Base+0x2e64>
    a924:	add	r0, pc, r0
    a928:	bx	lr
    a92c:	ldr	r0, [pc, #-2184]	; a0ac <bt_compidtostr@@Base+0x2e68>
    a930:	add	r0, pc, r0
    a934:	bx	lr
    a938:	ldr	r0, [pc, #-2192]	; a0b0 <bt_compidtostr@@Base+0x2e6c>
    a93c:	add	r0, pc, r0
    a940:	bx	lr
    a944:	ldr	r0, [pc, #-2200]	; a0b4 <bt_compidtostr@@Base+0x2e70>
    a948:	add	r0, pc, r0
    a94c:	bx	lr
    a950:	ldr	r0, [pc, #-2208]	; a0b8 <bt_compidtostr@@Base+0x2e74>
    a954:	add	r0, pc, r0
    a958:	bx	lr
    a95c:	ldr	r0, [pc, #-2216]	; a0bc <bt_compidtostr@@Base+0x2e78>
    a960:	add	r0, pc, r0
    a964:	bx	lr
    a968:	ldr	r0, [pc, #-2224]	; a0c0 <bt_compidtostr@@Base+0x2e7c>
    a96c:	add	r0, pc, r0
    a970:	bx	lr
    a974:	ldr	r0, [pc, #-2232]	; a0c4 <bt_compidtostr@@Base+0x2e80>
    a978:	add	r0, pc, r0
    a97c:	bx	lr
    a980:	ldr	r0, [pc, #-2240]	; a0c8 <bt_compidtostr@@Base+0x2e84>
    a984:	add	r0, pc, r0
    a988:	bx	lr
    a98c:	ldr	r0, [pc, #-2248]	; a0cc <bt_compidtostr@@Base+0x2e88>
    a990:	add	r0, pc, r0
    a994:	bx	lr
    a998:	ldr	r0, [pc, #-2256]	; a0d0 <bt_compidtostr@@Base+0x2e8c>
    a99c:	add	r0, pc, r0
    a9a0:	bx	lr
    a9a4:	ldr	r0, [pc, #-2264]	; a0d4 <bt_compidtostr@@Base+0x2e90>
    a9a8:	add	r0, pc, r0
    a9ac:	bx	lr
    a9b0:	ldr	r0, [pc, #-2272]	; a0d8 <bt_compidtostr@@Base+0x2e94>
    a9b4:	add	r0, pc, r0
    a9b8:	bx	lr
    a9bc:	ldr	r0, [pc, #-2280]	; a0dc <bt_compidtostr@@Base+0x2e98>
    a9c0:	add	r0, pc, r0
    a9c4:	bx	lr
    a9c8:	ldr	r0, [pc, #-2288]	; a0e0 <bt_compidtostr@@Base+0x2e9c>
    a9cc:	add	r0, pc, r0
    a9d0:	bx	lr
    a9d4:	ldr	r0, [pc, #-2296]	; a0e4 <bt_compidtostr@@Base+0x2ea0>
    a9d8:	add	r0, pc, r0
    a9dc:	bx	lr
    a9e0:	ldr	r0, [pc, #-2304]	; a0e8 <bt_compidtostr@@Base+0x2ea4>
    a9e4:	add	r0, pc, r0
    a9e8:	bx	lr
    a9ec:	ldr	r0, [pc, #-2312]	; a0ec <bt_compidtostr@@Base+0x2ea8>
    a9f0:	add	r0, pc, r0
    a9f4:	bx	lr
    a9f8:	ldr	r0, [pc, #-2320]	; a0f0 <bt_compidtostr@@Base+0x2eac>
    a9fc:	add	r0, pc, r0
    aa00:	bx	lr
    aa04:	ldr	r0, [pc, #-2328]	; a0f4 <bt_compidtostr@@Base+0x2eb0>
    aa08:	add	r0, pc, r0
    aa0c:	bx	lr
    aa10:	ldr	r0, [pc, #-2336]	; a0f8 <bt_compidtostr@@Base+0x2eb4>
    aa14:	add	r0, pc, r0
    aa18:	bx	lr
    aa1c:	ldr	r0, [pc, #-2344]	; a0fc <bt_compidtostr@@Base+0x2eb8>
    aa20:	add	r0, pc, r0
    aa24:	bx	lr
    aa28:	ldr	r0, [pc, #-2352]	; a100 <bt_compidtostr@@Base+0x2ebc>
    aa2c:	add	r0, pc, r0
    aa30:	bx	lr
    aa34:	ldr	r0, [pc, #-2360]	; a104 <bt_compidtostr@@Base+0x2ec0>
    aa38:	add	r0, pc, r0
    aa3c:	bx	lr
    aa40:	ldr	r0, [pc, #-2368]	; a108 <bt_compidtostr@@Base+0x2ec4>
    aa44:	add	r0, pc, r0
    aa48:	bx	lr
    aa4c:	ldr	r0, [pc, #-2376]	; a10c <bt_compidtostr@@Base+0x2ec8>
    aa50:	add	r0, pc, r0
    aa54:	bx	lr
    aa58:	ldr	r0, [pc, #-2384]	; a110 <bt_compidtostr@@Base+0x2ecc>
    aa5c:	add	r0, pc, r0
    aa60:	bx	lr
    aa64:	ldr	r0, [pc, #-2392]	; a114 <bt_compidtostr@@Base+0x2ed0>
    aa68:	add	r0, pc, r0
    aa6c:	bx	lr
    aa70:	ldr	r0, [pc, #-2400]	; a118 <bt_compidtostr@@Base+0x2ed4>
    aa74:	add	r0, pc, r0
    aa78:	bx	lr
    aa7c:	ldr	r0, [pc, #-2408]	; a11c <bt_compidtostr@@Base+0x2ed8>
    aa80:	add	r0, pc, r0
    aa84:	bx	lr
    aa88:	ldr	r0, [pc, #-2416]	; a120 <bt_compidtostr@@Base+0x2edc>
    aa8c:	add	r0, pc, r0
    aa90:	bx	lr
    aa94:	ldr	r0, [pc, #-2424]	; a124 <bt_compidtostr@@Base+0x2ee0>
    aa98:	add	r0, pc, r0
    aa9c:	bx	lr
    aaa0:	ldr	r0, [pc, #-2432]	; a128 <bt_compidtostr@@Base+0x2ee4>
    aaa4:	add	r0, pc, r0
    aaa8:	bx	lr
    aaac:	ldr	r0, [pc, #-2440]	; a12c <bt_compidtostr@@Base+0x2ee8>
    aab0:	add	r0, pc, r0
    aab4:	bx	lr
    aab8:	ldr	r0, [pc, #-2448]	; a130 <bt_compidtostr@@Base+0x2eec>
    aabc:	add	r0, pc, r0
    aac0:	bx	lr
    aac4:	ldr	r0, [pc, #-2456]	; a134 <bt_compidtostr@@Base+0x2ef0>
    aac8:	add	r0, pc, r0
    aacc:	bx	lr
    aad0:	ldr	r0, [pc, #-2464]	; a138 <bt_compidtostr@@Base+0x2ef4>
    aad4:	add	r0, pc, r0
    aad8:	bx	lr
    aadc:	ldr	r0, [pc, #-2472]	; a13c <bt_compidtostr@@Base+0x2ef8>
    aae0:	add	r0, pc, r0
    aae4:	bx	lr
    aae8:	ldr	r0, [pc, #-2480]	; a140 <bt_compidtostr@@Base+0x2efc>
    aaec:	add	r0, pc, r0
    aaf0:	bx	lr
    aaf4:	ldr	r0, [pc, #-2488]	; a144 <bt_compidtostr@@Base+0x2f00>
    aaf8:	add	r0, pc, r0
    aafc:	bx	lr
    ab00:	ldr	r0, [pc, #-2496]	; a148 <bt_compidtostr@@Base+0x2f04>
    ab04:	add	r0, pc, r0
    ab08:	bx	lr
    ab0c:	ldr	r0, [pc, #-2504]	; a14c <bt_compidtostr@@Base+0x2f08>
    ab10:	add	r0, pc, r0
    ab14:	bx	lr
    ab18:	ldr	r0, [pc, #-2512]	; a150 <bt_compidtostr@@Base+0x2f0c>
    ab1c:	add	r0, pc, r0
    ab20:	bx	lr
    ab24:	ldr	r0, [pc, #-2520]	; a154 <bt_compidtostr@@Base+0x2f10>
    ab28:	add	r0, pc, r0
    ab2c:	bx	lr
    ab30:	ldr	r0, [pc, #-2528]	; a158 <bt_compidtostr@@Base+0x2f14>
    ab34:	add	r0, pc, r0
    ab38:	bx	lr
    ab3c:	ldr	r0, [pc, #-2536]	; a15c <bt_compidtostr@@Base+0x2f18>
    ab40:	add	r0, pc, r0
    ab44:	bx	lr
    ab48:	ldr	r0, [pc, #-2544]	; a160 <bt_compidtostr@@Base+0x2f1c>
    ab4c:	add	r0, pc, r0
    ab50:	bx	lr
    ab54:	ldr	r0, [pc, #-2552]	; a164 <bt_compidtostr@@Base+0x2f20>
    ab58:	add	r0, pc, r0
    ab5c:	bx	lr
    ab60:	ldr	r0, [pc, #-2560]	; a168 <bt_compidtostr@@Base+0x2f24>
    ab64:	add	r0, pc, r0
    ab68:	bx	lr
    ab6c:	ldr	r0, [pc, #-2568]	; a16c <bt_compidtostr@@Base+0x2f28>
    ab70:	add	r0, pc, r0
    ab74:	bx	lr
    ab78:	ldr	r0, [pc, #-2576]	; a170 <bt_compidtostr@@Base+0x2f2c>
    ab7c:	add	r0, pc, r0
    ab80:	bx	lr
    ab84:	ldr	r0, [pc, #-2584]	; a174 <bt_compidtostr@@Base+0x2f30>
    ab88:	add	r0, pc, r0
    ab8c:	bx	lr
    ab90:	ldr	r0, [pc, #-2592]	; a178 <bt_compidtostr@@Base+0x2f34>
    ab94:	add	r0, pc, r0
    ab98:	bx	lr
    ab9c:	ldr	r0, [pc, #-2600]	; a17c <bt_compidtostr@@Base+0x2f38>
    aba0:	add	r0, pc, r0
    aba4:	bx	lr
    aba8:	ldr	r0, [pc, #-2608]	; a180 <bt_compidtostr@@Base+0x2f3c>
    abac:	add	r0, pc, r0
    abb0:	bx	lr
    abb4:	ldr	r0, [pc, #-2616]	; a184 <bt_compidtostr@@Base+0x2f40>
    abb8:	add	r0, pc, r0
    abbc:	bx	lr
    abc0:	ldr	r0, [pc, #-2624]	; a188 <bt_compidtostr@@Base+0x2f44>
    abc4:	add	r0, pc, r0
    abc8:	bx	lr
    abcc:	ldr	r0, [pc, #-2632]	; a18c <bt_compidtostr@@Base+0x2f48>
    abd0:	add	r0, pc, r0
    abd4:	bx	lr
    abd8:	ldr	r0, [pc, #-2640]	; a190 <bt_compidtostr@@Base+0x2f4c>
    abdc:	add	r0, pc, r0
    abe0:	bx	lr
    abe4:	ldr	r0, [pc, #2440]	; b574 <bt_compidtostr@@Base+0x4330>
    abe8:	add	r0, pc, r0
    abec:	bx	lr
    abf0:	ldr	r0, [pc, #2432]	; b578 <bt_compidtostr@@Base+0x4334>
    abf4:	add	r0, pc, r0
    abf8:	bx	lr
    abfc:	ldr	r0, [pc, #2424]	; b57c <bt_compidtostr@@Base+0x4338>
    ac00:	add	r0, pc, r0
    ac04:	bx	lr
    ac08:	ldr	r0, [pc, #2416]	; b580 <bt_compidtostr@@Base+0x433c>
    ac0c:	add	r0, pc, r0
    ac10:	bx	lr
    ac14:	ldr	r0, [pc, #2408]	; b584 <bt_compidtostr@@Base+0x4340>
    ac18:	add	r0, pc, r0
    ac1c:	bx	lr
    ac20:	ldr	r0, [pc, #2400]	; b588 <bt_compidtostr@@Base+0x4344>
    ac24:	add	r0, pc, r0
    ac28:	bx	lr
    ac2c:	ldr	r0, [pc, #2392]	; b58c <bt_compidtostr@@Base+0x4348>
    ac30:	add	r0, pc, r0
    ac34:	bx	lr
    ac38:	ldr	r0, [pc, #2384]	; b590 <bt_compidtostr@@Base+0x434c>
    ac3c:	add	r0, pc, r0
    ac40:	bx	lr
    ac44:	ldr	r0, [pc, #2376]	; b594 <bt_compidtostr@@Base+0x4350>
    ac48:	add	r0, pc, r0
    ac4c:	bx	lr
    ac50:	ldr	r0, [pc, #2368]	; b598 <bt_compidtostr@@Base+0x4354>
    ac54:	add	r0, pc, r0
    ac58:	bx	lr
    ac5c:	ldr	r0, [pc, #2360]	; b59c <bt_compidtostr@@Base+0x4358>
    ac60:	add	r0, pc, r0
    ac64:	bx	lr
    ac68:	ldr	r0, [pc, #2352]	; b5a0 <bt_compidtostr@@Base+0x435c>
    ac6c:	add	r0, pc, r0
    ac70:	bx	lr
    ac74:	ldr	r0, [pc, #2344]	; b5a4 <bt_compidtostr@@Base+0x4360>
    ac78:	add	r0, pc, r0
    ac7c:	bx	lr
    ac80:	ldr	r0, [pc, #2336]	; b5a8 <bt_compidtostr@@Base+0x4364>
    ac84:	add	r0, pc, r0
    ac88:	bx	lr
    ac8c:	ldr	r0, [pc, #2328]	; b5ac <bt_compidtostr@@Base+0x4368>
    ac90:	add	r0, pc, r0
    ac94:	bx	lr
    ac98:	ldr	r0, [pc, #2320]	; b5b0 <bt_compidtostr@@Base+0x436c>
    ac9c:	add	r0, pc, r0
    aca0:	bx	lr
    aca4:	ldr	r0, [pc, #2312]	; b5b4 <bt_compidtostr@@Base+0x4370>
    aca8:	add	r0, pc, r0
    acac:	bx	lr
    acb0:	ldr	r0, [pc, #2304]	; b5b8 <bt_compidtostr@@Base+0x4374>
    acb4:	add	r0, pc, r0
    acb8:	bx	lr
    acbc:	ldr	r0, [pc, #2296]	; b5bc <bt_compidtostr@@Base+0x4378>
    acc0:	add	r0, pc, r0
    acc4:	bx	lr
    acc8:	ldr	r0, [pc, #2288]	; b5c0 <bt_compidtostr@@Base+0x437c>
    accc:	add	r0, pc, r0
    acd0:	bx	lr
    acd4:	ldr	r0, [pc, #2280]	; b5c4 <bt_compidtostr@@Base+0x4380>
    acd8:	add	r0, pc, r0
    acdc:	bx	lr
    ace0:	ldr	r0, [pc, #2272]	; b5c8 <bt_compidtostr@@Base+0x4384>
    ace4:	add	r0, pc, r0
    ace8:	bx	lr
    acec:	ldr	r0, [pc, #2264]	; b5cc <bt_compidtostr@@Base+0x4388>
    acf0:	add	r0, pc, r0
    acf4:	bx	lr
    acf8:	ldr	r0, [pc, #2256]	; b5d0 <bt_compidtostr@@Base+0x438c>
    acfc:	add	r0, pc, r0
    ad00:	bx	lr
    ad04:	ldr	r0, [pc, #2248]	; b5d4 <bt_compidtostr@@Base+0x4390>
    ad08:	add	r0, pc, r0
    ad0c:	bx	lr
    ad10:	ldr	r0, [pc, #2240]	; b5d8 <bt_compidtostr@@Base+0x4394>
    ad14:	add	r0, pc, r0
    ad18:	bx	lr
    ad1c:	ldr	r0, [pc, #2232]	; b5dc <bt_compidtostr@@Base+0x4398>
    ad20:	add	r0, pc, r0
    ad24:	bx	lr
    ad28:	ldr	r0, [pc, #2224]	; b5e0 <bt_compidtostr@@Base+0x439c>
    ad2c:	add	r0, pc, r0
    ad30:	bx	lr
    ad34:	ldr	r0, [pc, #2216]	; b5e4 <bt_compidtostr@@Base+0x43a0>
    ad38:	add	r0, pc, r0
    ad3c:	bx	lr
    ad40:	ldr	r0, [pc, #2208]	; b5e8 <bt_compidtostr@@Base+0x43a4>
    ad44:	add	r0, pc, r0
    ad48:	bx	lr
    ad4c:	ldr	r0, [pc, #2200]	; b5ec <bt_compidtostr@@Base+0x43a8>
    ad50:	add	r0, pc, r0
    ad54:	bx	lr
    ad58:	ldr	r0, [pc, #2192]	; b5f0 <bt_compidtostr@@Base+0x43ac>
    ad5c:	add	r0, pc, r0
    ad60:	bx	lr
    ad64:	ldr	r0, [pc, #2184]	; b5f4 <bt_compidtostr@@Base+0x43b0>
    ad68:	add	r0, pc, r0
    ad6c:	bx	lr
    ad70:	ldr	r0, [pc, #2176]	; b5f8 <bt_compidtostr@@Base+0x43b4>
    ad74:	add	r0, pc, r0
    ad78:	bx	lr
    ad7c:	ldr	r0, [pc, #2168]	; b5fc <bt_compidtostr@@Base+0x43b8>
    ad80:	add	r0, pc, r0
    ad84:	bx	lr
    ad88:	ldr	r0, [pc, #2160]	; b600 <bt_compidtostr@@Base+0x43bc>
    ad8c:	add	r0, pc, r0
    ad90:	bx	lr
    ad94:	ldr	r0, [pc, #2152]	; b604 <bt_compidtostr@@Base+0x43c0>
    ad98:	add	r0, pc, r0
    ad9c:	bx	lr
    ada0:	ldr	r0, [pc, #2144]	; b608 <bt_compidtostr@@Base+0x43c4>
    ada4:	add	r0, pc, r0
    ada8:	bx	lr
    adac:	ldr	r0, [pc, #2136]	; b60c <bt_compidtostr@@Base+0x43c8>
    adb0:	add	r0, pc, r0
    adb4:	bx	lr
    adb8:	ldr	r0, [pc, #2128]	; b610 <bt_compidtostr@@Base+0x43cc>
    adbc:	add	r0, pc, r0
    adc0:	bx	lr
    adc4:	ldr	r0, [pc, #2120]	; b614 <bt_compidtostr@@Base+0x43d0>
    adc8:	add	r0, pc, r0
    adcc:	bx	lr
    add0:	ldr	r0, [pc, #2112]	; b618 <bt_compidtostr@@Base+0x43d4>
    add4:	add	r0, pc, r0
    add8:	bx	lr
    addc:	ldr	r0, [pc, #2104]	; b61c <bt_compidtostr@@Base+0x43d8>
    ade0:	add	r0, pc, r0
    ade4:	bx	lr
    ade8:	ldr	r0, [pc, #2096]	; b620 <bt_compidtostr@@Base+0x43dc>
    adec:	add	r0, pc, r0
    adf0:	bx	lr
    adf4:	ldr	r0, [pc, #2088]	; b624 <bt_compidtostr@@Base+0x43e0>
    adf8:	add	r0, pc, r0
    adfc:	bx	lr
    ae00:	ldr	r0, [pc, #2080]	; b628 <bt_compidtostr@@Base+0x43e4>
    ae04:	add	r0, pc, r0
    ae08:	bx	lr
    ae0c:	ldr	r0, [pc, #2072]	; b62c <bt_compidtostr@@Base+0x43e8>
    ae10:	add	r0, pc, r0
    ae14:	bx	lr
    ae18:	ldr	r0, [pc, #2064]	; b630 <bt_compidtostr@@Base+0x43ec>
    ae1c:	add	r0, pc, r0
    ae20:	bx	lr
    ae24:	ldr	r0, [pc, #2056]	; b634 <bt_compidtostr@@Base+0x43f0>
    ae28:	add	r0, pc, r0
    ae2c:	bx	lr
    ae30:	ldr	r0, [pc, #2048]	; b638 <bt_compidtostr@@Base+0x43f4>
    ae34:	add	r0, pc, r0
    ae38:	bx	lr
    ae3c:	ldr	r0, [pc, #2040]	; b63c <bt_compidtostr@@Base+0x43f8>
    ae40:	add	r0, pc, r0
    ae44:	bx	lr
    ae48:	ldr	r0, [pc, #2032]	; b640 <bt_compidtostr@@Base+0x43fc>
    ae4c:	add	r0, pc, r0
    ae50:	bx	lr
    ae54:	ldr	r0, [pc, #2024]	; b644 <bt_compidtostr@@Base+0x4400>
    ae58:	add	r0, pc, r0
    ae5c:	bx	lr
    ae60:	ldr	r0, [pc, #2016]	; b648 <bt_compidtostr@@Base+0x4404>
    ae64:	add	r0, pc, r0
    ae68:	bx	lr
    ae6c:	ldr	r0, [pc, #2008]	; b64c <bt_compidtostr@@Base+0x4408>
    ae70:	add	r0, pc, r0
    ae74:	bx	lr
    ae78:	ldr	r0, [pc, #2000]	; b650 <bt_compidtostr@@Base+0x440c>
    ae7c:	add	r0, pc, r0
    ae80:	bx	lr
    ae84:	ldr	r0, [pc, #1992]	; b654 <bt_compidtostr@@Base+0x4410>
    ae88:	add	r0, pc, r0
    ae8c:	bx	lr
    ae90:	ldr	r0, [pc, #1984]	; b658 <bt_compidtostr@@Base+0x4414>
    ae94:	add	r0, pc, r0
    ae98:	bx	lr
    ae9c:	ldr	r0, [pc, #1976]	; b65c <bt_compidtostr@@Base+0x4418>
    aea0:	add	r0, pc, r0
    aea4:	bx	lr
    aea8:	ldr	r0, [pc, #1968]	; b660 <bt_compidtostr@@Base+0x441c>
    aeac:	add	r0, pc, r0
    aeb0:	bx	lr
    aeb4:	ldr	r0, [pc, #1960]	; b664 <bt_compidtostr@@Base+0x4420>
    aeb8:	add	r0, pc, r0
    aebc:	bx	lr
    aec0:	ldr	r0, [pc, #1952]	; b668 <bt_compidtostr@@Base+0x4424>
    aec4:	add	r0, pc, r0
    aec8:	bx	lr
    aecc:	ldr	r0, [pc, #1944]	; b66c <bt_compidtostr@@Base+0x4428>
    aed0:	add	r0, pc, r0
    aed4:	bx	lr
    aed8:	ldr	r0, [pc, #1936]	; b670 <bt_compidtostr@@Base+0x442c>
    aedc:	add	r0, pc, r0
    aee0:	bx	lr
    aee4:	ldr	r0, [pc, #1928]	; b674 <bt_compidtostr@@Base+0x4430>
    aee8:	add	r0, pc, r0
    aeec:	bx	lr
    aef0:	ldr	r0, [pc, #1920]	; b678 <bt_compidtostr@@Base+0x4434>
    aef4:	add	r0, pc, r0
    aef8:	bx	lr
    aefc:	ldr	r0, [pc, #1912]	; b67c <bt_compidtostr@@Base+0x4438>
    af00:	add	r0, pc, r0
    af04:	bx	lr
    af08:	ldr	r0, [pc, #1904]	; b680 <bt_compidtostr@@Base+0x443c>
    af0c:	add	r0, pc, r0
    af10:	bx	lr
    af14:	ldr	r0, [pc, #1896]	; b684 <bt_compidtostr@@Base+0x4440>
    af18:	add	r0, pc, r0
    af1c:	bx	lr
    af20:	ldr	r0, [pc, #1888]	; b688 <bt_compidtostr@@Base+0x4444>
    af24:	add	r0, pc, r0
    af28:	bx	lr
    af2c:	ldr	r0, [pc, #1880]	; b68c <bt_compidtostr@@Base+0x4448>
    af30:	add	r0, pc, r0
    af34:	bx	lr
    af38:	ldr	r0, [pc, #1872]	; b690 <bt_compidtostr@@Base+0x444c>
    af3c:	add	r0, pc, r0
    af40:	bx	lr
    af44:	ldr	r0, [pc, #1864]	; b694 <bt_compidtostr@@Base+0x4450>
    af48:	add	r0, pc, r0
    af4c:	bx	lr
    af50:	ldr	r0, [pc, #1856]	; b698 <bt_compidtostr@@Base+0x4454>
    af54:	add	r0, pc, r0
    af58:	bx	lr
    af5c:	ldr	r0, [pc, #1848]	; b69c <bt_compidtostr@@Base+0x4458>
    af60:	add	r0, pc, r0
    af64:	bx	lr
    af68:	ldr	r0, [pc, #1840]	; b6a0 <bt_compidtostr@@Base+0x445c>
    af6c:	add	r0, pc, r0
    af70:	bx	lr
    af74:	ldr	r0, [pc, #1832]	; b6a4 <bt_compidtostr@@Base+0x4460>
    af78:	add	r0, pc, r0
    af7c:	bx	lr
    af80:	ldr	r0, [pc, #1824]	; b6a8 <bt_compidtostr@@Base+0x4464>
    af84:	add	r0, pc, r0
    af88:	bx	lr
    af8c:	ldr	r0, [pc, #1816]	; b6ac <bt_compidtostr@@Base+0x4468>
    af90:	add	r0, pc, r0
    af94:	bx	lr
    af98:	ldr	r0, [pc, #1808]	; b6b0 <bt_compidtostr@@Base+0x446c>
    af9c:	add	r0, pc, r0
    afa0:	bx	lr
    afa4:	ldr	r0, [pc, #1800]	; b6b4 <bt_compidtostr@@Base+0x4470>
    afa8:	add	r0, pc, r0
    afac:	bx	lr
    afb0:	ldr	r0, [pc, #1792]	; b6b8 <bt_compidtostr@@Base+0x4474>
    afb4:	add	r0, pc, r0
    afb8:	bx	lr
    afbc:	ldr	r0, [pc, #1784]	; b6bc <bt_compidtostr@@Base+0x4478>
    afc0:	add	r0, pc, r0
    afc4:	bx	lr
    afc8:	ldr	r0, [pc, #1776]	; b6c0 <bt_compidtostr@@Base+0x447c>
    afcc:	add	r0, pc, r0
    afd0:	bx	lr
    afd4:	ldr	r0, [pc, #1768]	; b6c4 <bt_compidtostr@@Base+0x4480>
    afd8:	add	r0, pc, r0
    afdc:	bx	lr
    afe0:	ldr	r0, [pc, #1760]	; b6c8 <bt_compidtostr@@Base+0x4484>
    afe4:	add	r0, pc, r0
    afe8:	bx	lr
    afec:	ldr	r0, [pc, #1752]	; b6cc <bt_compidtostr@@Base+0x4488>
    aff0:	add	r0, pc, r0
    aff4:	bx	lr
    aff8:	ldr	r0, [pc, #1744]	; b6d0 <bt_compidtostr@@Base+0x448c>
    affc:	add	r0, pc, r0
    b000:	bx	lr
    b004:	ldr	r0, [pc, #1736]	; b6d4 <bt_compidtostr@@Base+0x4490>
    b008:	add	r0, pc, r0
    b00c:	bx	lr
    b010:	ldr	r0, [pc, #1728]	; b6d8 <bt_compidtostr@@Base+0x4494>
    b014:	add	r0, pc, r0
    b018:	bx	lr
    b01c:	ldr	r0, [pc, #1720]	; b6dc <bt_compidtostr@@Base+0x4498>
    b020:	add	r0, pc, r0
    b024:	bx	lr
    b028:	ldr	r0, [pc, #1712]	; b6e0 <bt_compidtostr@@Base+0x449c>
    b02c:	add	r0, pc, r0
    b030:	bx	lr
    b034:	ldr	r0, [pc, #1704]	; b6e4 <bt_compidtostr@@Base+0x44a0>
    b038:	add	r0, pc, r0
    b03c:	bx	lr
    b040:	ldr	r0, [pc, #1696]	; b6e8 <bt_compidtostr@@Base+0x44a4>
    b044:	add	r0, pc, r0
    b048:	bx	lr
    b04c:	ldr	r0, [pc, #1688]	; b6ec <bt_compidtostr@@Base+0x44a8>
    b050:	add	r0, pc, r0
    b054:	bx	lr
    b058:	ldr	r0, [pc, #1680]	; b6f0 <bt_compidtostr@@Base+0x44ac>
    b05c:	add	r0, pc, r0
    b060:	bx	lr
    b064:	ldr	r0, [pc, #1672]	; b6f4 <bt_compidtostr@@Base+0x44b0>
    b068:	add	r0, pc, r0
    b06c:	bx	lr
    b070:	ldr	r0, [pc, #1664]	; b6f8 <bt_compidtostr@@Base+0x44b4>
    b074:	add	r0, pc, r0
    b078:	bx	lr
    b07c:	ldr	r0, [pc, #1656]	; b6fc <bt_compidtostr@@Base+0x44b8>
    b080:	add	r0, pc, r0
    b084:	bx	lr
    b088:	ldr	r0, [pc, #1648]	; b700 <bt_compidtostr@@Base+0x44bc>
    b08c:	add	r0, pc, r0
    b090:	bx	lr
    b094:	ldr	r0, [pc, #1640]	; b704 <bt_compidtostr@@Base+0x44c0>
    b098:	add	r0, pc, r0
    b09c:	bx	lr
    b0a0:	ldr	r0, [pc, #1632]	; b708 <bt_compidtostr@@Base+0x44c4>
    b0a4:	add	r0, pc, r0
    b0a8:	bx	lr
    b0ac:	ldr	r0, [pc, #1624]	; b70c <bt_compidtostr@@Base+0x44c8>
    b0b0:	add	r0, pc, r0
    b0b4:	bx	lr
    b0b8:	ldr	r0, [pc, #1616]	; b710 <bt_compidtostr@@Base+0x44cc>
    b0bc:	add	r0, pc, r0
    b0c0:	bx	lr
    b0c4:	ldr	r0, [pc, #1608]	; b714 <bt_compidtostr@@Base+0x44d0>
    b0c8:	add	r0, pc, r0
    b0cc:	bx	lr
    b0d0:	ldr	r0, [pc, #1600]	; b718 <bt_compidtostr@@Base+0x44d4>
    b0d4:	add	r0, pc, r0
    b0d8:	bx	lr
    b0dc:	ldr	r0, [pc, #1592]	; b71c <bt_compidtostr@@Base+0x44d8>
    b0e0:	add	r0, pc, r0
    b0e4:	bx	lr
    b0e8:	ldr	r0, [pc, #1584]	; b720 <bt_compidtostr@@Base+0x44dc>
    b0ec:	add	r0, pc, r0
    b0f0:	bx	lr
    b0f4:	ldr	r0, [pc, #1576]	; b724 <bt_compidtostr@@Base+0x44e0>
    b0f8:	add	r0, pc, r0
    b0fc:	bx	lr
    b100:	ldr	r0, [pc, #1568]	; b728 <bt_compidtostr@@Base+0x44e4>
    b104:	add	r0, pc, r0
    b108:	bx	lr
    b10c:	ldr	r0, [pc, #1560]	; b72c <bt_compidtostr@@Base+0x44e8>
    b110:	add	r0, pc, r0
    b114:	bx	lr
    b118:	ldr	r0, [pc, #1552]	; b730 <bt_compidtostr@@Base+0x44ec>
    b11c:	add	r0, pc, r0
    b120:	bx	lr
    b124:	ldr	r0, [pc, #1544]	; b734 <bt_compidtostr@@Base+0x44f0>
    b128:	add	r0, pc, r0
    b12c:	bx	lr
    b130:	ldr	r0, [pc, #1536]	; b738 <bt_compidtostr@@Base+0x44f4>
    b134:	add	r0, pc, r0
    b138:	bx	lr
    b13c:	ldr	r0, [pc, #1528]	; b73c <bt_compidtostr@@Base+0x44f8>
    b140:	add	r0, pc, r0
    b144:	bx	lr
    b148:	ldr	r0, [pc, #1520]	; b740 <bt_compidtostr@@Base+0x44fc>
    b14c:	add	r0, pc, r0
    b150:	bx	lr
    b154:	ldr	r0, [pc, #1512]	; b744 <bt_compidtostr@@Base+0x4500>
    b158:	add	r0, pc, r0
    b15c:	bx	lr
    b160:	ldr	r0, [pc, #1504]	; b748 <bt_compidtostr@@Base+0x4504>
    b164:	add	r0, pc, r0
    b168:	bx	lr
    b16c:	ldr	r0, [pc, #1496]	; b74c <bt_compidtostr@@Base+0x4508>
    b170:	add	r0, pc, r0
    b174:	bx	lr
    b178:	ldr	r0, [pc, #1488]	; b750 <bt_compidtostr@@Base+0x450c>
    b17c:	add	r0, pc, r0
    b180:	bx	lr
    b184:	ldr	r0, [pc, #1480]	; b754 <bt_compidtostr@@Base+0x4510>
    b188:	add	r0, pc, r0
    b18c:	bx	lr
    b190:	ldr	r0, [pc, #1472]	; b758 <bt_compidtostr@@Base+0x4514>
    b194:	add	r0, pc, r0
    b198:	bx	lr
    b19c:	ldr	r0, [pc, #1464]	; b75c <bt_compidtostr@@Base+0x4518>
    b1a0:	add	r0, pc, r0
    b1a4:	bx	lr
    b1a8:	ldr	r0, [pc, #1456]	; b760 <bt_compidtostr@@Base+0x451c>
    b1ac:	add	r0, pc, r0
    b1b0:	bx	lr
    b1b4:	ldr	r0, [pc, #1448]	; b764 <bt_compidtostr@@Base+0x4520>
    b1b8:	add	r0, pc, r0
    b1bc:	bx	lr
    b1c0:	ldr	r0, [pc, #1440]	; b768 <bt_compidtostr@@Base+0x4524>
    b1c4:	add	r0, pc, r0
    b1c8:	bx	lr
    b1cc:	ldr	r0, [pc, #1432]	; b76c <bt_compidtostr@@Base+0x4528>
    b1d0:	add	r0, pc, r0
    b1d4:	bx	lr
    b1d8:	ldr	r0, [pc, #1424]	; b770 <bt_compidtostr@@Base+0x452c>
    b1dc:	add	r0, pc, r0
    b1e0:	bx	lr
    b1e4:	ldr	r0, [pc, #1416]	; b774 <bt_compidtostr@@Base+0x4530>
    b1e8:	add	r0, pc, r0
    b1ec:	bx	lr
    b1f0:	ldr	r0, [pc, #1408]	; b778 <bt_compidtostr@@Base+0x4534>
    b1f4:	add	r0, pc, r0
    b1f8:	bx	lr
    b1fc:	ldr	r0, [pc, #1400]	; b77c <bt_compidtostr@@Base+0x4538>
    b200:	add	r0, pc, r0
    b204:	bx	lr
    b208:	ldr	r0, [pc, #1392]	; b780 <bt_compidtostr@@Base+0x453c>
    b20c:	add	r0, pc, r0
    b210:	bx	lr
    b214:	ldr	r0, [pc, #1384]	; b784 <bt_compidtostr@@Base+0x4540>
    b218:	add	r0, pc, r0
    b21c:	bx	lr
    b220:	ldr	r0, [pc, #1376]	; b788 <bt_compidtostr@@Base+0x4544>
    b224:	add	r0, pc, r0
    b228:	bx	lr
    b22c:	ldr	r0, [pc, #1368]	; b78c <bt_compidtostr@@Base+0x4548>
    b230:	add	r0, pc, r0
    b234:	bx	lr
    b238:	ldr	r0, [pc, #1360]	; b790 <bt_compidtostr@@Base+0x454c>
    b23c:	add	r0, pc, r0
    b240:	bx	lr
    b244:	ldr	r0, [pc, #1352]	; b794 <bt_compidtostr@@Base+0x4550>
    b248:	add	r0, pc, r0
    b24c:	bx	lr
    b250:	ldr	r0, [pc, #1344]	; b798 <bt_compidtostr@@Base+0x4554>
    b254:	add	r0, pc, r0
    b258:	bx	lr
    b25c:	ldr	r0, [pc, #1336]	; b79c <bt_compidtostr@@Base+0x4558>
    b260:	add	r0, pc, r0
    b264:	bx	lr
    b268:	ldr	r0, [pc, #1328]	; b7a0 <bt_compidtostr@@Base+0x455c>
    b26c:	add	r0, pc, r0
    b270:	bx	lr
    b274:	ldr	r0, [pc, #1320]	; b7a4 <bt_compidtostr@@Base+0x4560>
    b278:	add	r0, pc, r0
    b27c:	bx	lr
    b280:	ldr	r0, [pc, #1312]	; b7a8 <bt_compidtostr@@Base+0x4564>
    b284:	add	r0, pc, r0
    b288:	bx	lr
    b28c:	ldr	r0, [pc, #1304]	; b7ac <bt_compidtostr@@Base+0x4568>
    b290:	add	r0, pc, r0
    b294:	bx	lr
    b298:	ldr	r0, [pc, #1296]	; b7b0 <bt_compidtostr@@Base+0x456c>
    b29c:	add	r0, pc, r0
    b2a0:	bx	lr
    b2a4:	ldr	r0, [pc, #1288]	; b7b4 <bt_compidtostr@@Base+0x4570>
    b2a8:	add	r0, pc, r0
    b2ac:	bx	lr
    b2b0:	ldr	r0, [pc, #1280]	; b7b8 <bt_compidtostr@@Base+0x4574>
    b2b4:	add	r0, pc, r0
    b2b8:	bx	lr
    b2bc:	ldr	r0, [pc, #1272]	; b7bc <bt_compidtostr@@Base+0x4578>
    b2c0:	add	r0, pc, r0
    b2c4:	bx	lr
    b2c8:	ldr	r0, [pc, #1264]	; b7c0 <bt_compidtostr@@Base+0x457c>
    b2cc:	add	r0, pc, r0
    b2d0:	bx	lr
    b2d4:	ldr	r0, [pc, #1256]	; b7c4 <bt_compidtostr@@Base+0x4580>
    b2d8:	add	r0, pc, r0
    b2dc:	bx	lr
    b2e0:	ldr	r0, [pc, #1248]	; b7c8 <bt_compidtostr@@Base+0x4584>
    b2e4:	add	r0, pc, r0
    b2e8:	bx	lr
    b2ec:	ldr	r0, [pc, #1240]	; b7cc <bt_compidtostr@@Base+0x4588>
    b2f0:	add	r0, pc, r0
    b2f4:	bx	lr
    b2f8:	ldr	r0, [pc, #1232]	; b7d0 <bt_compidtostr@@Base+0x458c>
    b2fc:	add	r0, pc, r0
    b300:	bx	lr
    b304:	ldr	r0, [pc, #1224]	; b7d4 <bt_compidtostr@@Base+0x4590>
    b308:	add	r0, pc, r0
    b30c:	bx	lr
    b310:	ldr	r0, [pc, #1216]	; b7d8 <bt_compidtostr@@Base+0x4594>
    b314:	add	r0, pc, r0
    b318:	bx	lr
    b31c:	ldr	r0, [pc, #1208]	; b7dc <bt_compidtostr@@Base+0x4598>
    b320:	add	r0, pc, r0
    b324:	bx	lr
    b328:	ldr	r0, [pc, #1200]	; b7e0 <bt_compidtostr@@Base+0x459c>
    b32c:	add	r0, pc, r0
    b330:	bx	lr
    b334:	ldr	r0, [pc, #1192]	; b7e4 <bt_compidtostr@@Base+0x45a0>
    b338:	add	r0, pc, r0
    b33c:	bx	lr
    b340:	ldr	r0, [pc, #1184]	; b7e8 <bt_compidtostr@@Base+0x45a4>
    b344:	add	r0, pc, r0
    b348:	bx	lr
    b34c:	ldr	r0, [pc, #1176]	; b7ec <bt_compidtostr@@Base+0x45a8>
    b350:	add	r0, pc, r0
    b354:	bx	lr
    b358:	ldr	r0, [pc, #1168]	; b7f0 <bt_compidtostr@@Base+0x45ac>
    b35c:	add	r0, pc, r0
    b360:	bx	lr
    b364:	ldr	r0, [pc, #1160]	; b7f4 <bt_compidtostr@@Base+0x45b0>
    b368:	add	r0, pc, r0
    b36c:	bx	lr
    b370:	ldr	r0, [pc, #1152]	; b7f8 <bt_compidtostr@@Base+0x45b4>
    b374:	add	r0, pc, r0
    b378:	bx	lr
    b37c:	ldr	r0, [pc, #1144]	; b7fc <bt_compidtostr@@Base+0x45b8>
    b380:	add	r0, pc, r0
    b384:	bx	lr
    b388:	ldr	r0, [pc, #1136]	; b800 <bt_compidtostr@@Base+0x45bc>
    b38c:	add	r0, pc, r0
    b390:	bx	lr
    b394:	ldr	r0, [pc, #1128]	; b804 <bt_compidtostr@@Base+0x45c0>
    b398:	add	r0, pc, r0
    b39c:	bx	lr
    b3a0:	ldr	r0, [pc, #1120]	; b808 <bt_compidtostr@@Base+0x45c4>
    b3a4:	add	r0, pc, r0
    b3a8:	bx	lr
    b3ac:	ldr	r0, [pc, #1112]	; b80c <bt_compidtostr@@Base+0x45c8>
    b3b0:	add	r0, pc, r0
    b3b4:	bx	lr
    b3b8:	ldr	r0, [pc, #1104]	; b810 <bt_compidtostr@@Base+0x45cc>
    b3bc:	add	r0, pc, r0
    b3c0:	bx	lr
    b3c4:	ldr	r0, [pc, #1096]	; b814 <bt_compidtostr@@Base+0x45d0>
    b3c8:	add	r0, pc, r0
    b3cc:	bx	lr
    b3d0:	ldr	r0, [pc, #1088]	; b818 <bt_compidtostr@@Base+0x45d4>
    b3d4:	add	r0, pc, r0
    b3d8:	bx	lr
    b3dc:	ldr	r0, [pc, #1080]	; b81c <bt_compidtostr@@Base+0x45d8>
    b3e0:	add	r0, pc, r0
    b3e4:	bx	lr
    b3e8:	ldr	r0, [pc, #1072]	; b820 <bt_compidtostr@@Base+0x45dc>
    b3ec:	add	r0, pc, r0
    b3f0:	bx	lr
    b3f4:	ldr	r0, [pc, #1064]	; b824 <bt_compidtostr@@Base+0x45e0>
    b3f8:	add	r0, pc, r0
    b3fc:	bx	lr
    b400:	ldr	r0, [pc, #1056]	; b828 <bt_compidtostr@@Base+0x45e4>
    b404:	add	r0, pc, r0
    b408:	bx	lr
    b40c:	ldr	r0, [pc, #1048]	; b82c <bt_compidtostr@@Base+0x45e8>
    b410:	add	r0, pc, r0
    b414:	bx	lr
    b418:	ldr	r0, [pc, #1040]	; b830 <bt_compidtostr@@Base+0x45ec>
    b41c:	add	r0, pc, r0
    b420:	bx	lr
    b424:	ldr	r0, [pc, #1032]	; b834 <bt_compidtostr@@Base+0x45f0>
    b428:	add	r0, pc, r0
    b42c:	bx	lr
    b430:	ldr	r0, [pc, #1024]	; b838 <bt_compidtostr@@Base+0x45f4>
    b434:	add	r0, pc, r0
    b438:	bx	lr
    b43c:	ldr	r0, [pc, #1016]	; b83c <bt_compidtostr@@Base+0x45f8>
    b440:	add	r0, pc, r0
    b444:	bx	lr
    b448:	ldr	r0, [pc, #1008]	; b840 <bt_compidtostr@@Base+0x45fc>
    b44c:	add	r0, pc, r0
    b450:	bx	lr
    b454:	ldr	r0, [pc, #1000]	; b844 <bt_compidtostr@@Base+0x4600>
    b458:	add	r0, pc, r0
    b45c:	bx	lr
    b460:	ldr	r0, [pc, #992]	; b848 <bt_compidtostr@@Base+0x4604>
    b464:	add	r0, pc, r0
    b468:	bx	lr
    b46c:	ldr	r0, [pc, #984]	; b84c <bt_compidtostr@@Base+0x4608>
    b470:	add	r0, pc, r0
    b474:	bx	lr
    b478:	ldr	r0, [pc, #976]	; b850 <bt_compidtostr@@Base+0x460c>
    b47c:	add	r0, pc, r0
    b480:	bx	lr
    b484:	ldr	r0, [pc, #968]	; b854 <bt_compidtostr@@Base+0x4610>
    b488:	add	r0, pc, r0
    b48c:	bx	lr
    b490:	ldr	r0, [pc, #960]	; b858 <bt_compidtostr@@Base+0x4614>
    b494:	add	r0, pc, r0
    b498:	bx	lr
    b49c:	ldr	r0, [pc, #952]	; b85c <bt_compidtostr@@Base+0x4618>
    b4a0:	add	r0, pc, r0
    b4a4:	bx	lr
    b4a8:	ldr	r0, [pc, #944]	; b860 <bt_compidtostr@@Base+0x461c>
    b4ac:	add	r0, pc, r0
    b4b0:	bx	lr
    b4b4:	ldr	r0, [pc, #936]	; b864 <bt_compidtostr@@Base+0x4620>
    b4b8:	add	r0, pc, r0
    b4bc:	bx	lr
    b4c0:	ldr	r0, [pc, #928]	; b868 <bt_compidtostr@@Base+0x4624>
    b4c4:	add	r0, pc, r0
    b4c8:	bx	lr
    b4cc:	ldr	r0, [pc, #920]	; b86c <bt_compidtostr@@Base+0x4628>
    b4d0:	add	r0, pc, r0
    b4d4:	bx	lr
    b4d8:	ldr	r0, [pc, #912]	; b870 <bt_compidtostr@@Base+0x462c>
    b4dc:	add	r0, pc, r0
    b4e0:	bx	lr
    b4e4:	ldr	r0, [pc, #904]	; b874 <bt_compidtostr@@Base+0x4630>
    b4e8:	add	r0, pc, r0
    b4ec:	bx	lr
    b4f0:	ldr	r0, [pc, #896]	; b878 <bt_compidtostr@@Base+0x4634>
    b4f4:	add	r0, pc, r0
    b4f8:	bx	lr
    b4fc:	ldr	r0, [pc, #888]	; b87c <bt_compidtostr@@Base+0x4638>
    b500:	add	r0, pc, r0
    b504:	bx	lr
    b508:	ldr	r0, [pc, #880]	; b880 <bt_compidtostr@@Base+0x463c>
    b50c:	add	r0, pc, r0
    b510:	bx	lr
    b514:	ldr	r0, [pc, #872]	; b884 <bt_compidtostr@@Base+0x4640>
    b518:	add	r0, pc, r0
    b51c:	bx	lr
    b520:	ldr	r0, [pc, #864]	; b888 <bt_compidtostr@@Base+0x4644>
    b524:	add	r0, pc, r0
    b528:	bx	lr
    b52c:	ldr	r0, [pc, #856]	; b88c <bt_compidtostr@@Base+0x4648>
    b530:	add	r0, pc, r0
    b534:	bx	lr
    b538:	ldr	r0, [pc, #848]	; b890 <bt_compidtostr@@Base+0x464c>
    b53c:	add	r0, pc, r0
    b540:	bx	lr
    b544:	ldr	r0, [pc, #840]	; b894 <bt_compidtostr@@Base+0x4650>
    b548:	add	r0, pc, r0
    b54c:	bx	lr
    b550:	ldr	r0, [pc, #832]	; b898 <bt_compidtostr@@Base+0x4654>
    b554:	add	r0, pc, r0
    b558:	bx	lr
    b55c:	ldr	r0, [pc, #824]	; b89c <bt_compidtostr@@Base+0x4658>
    b560:	add	r0, pc, r0
    b564:	bx	lr
    b568:	ldr	r0, [pc, #816]	; b8a0 <bt_compidtostr@@Base+0x465c>
    b56c:	add	r0, pc, r0
    b570:	bx	lr
    b574:	andeq	r8, r0, ip, ror r2
    b578:	andeq	r8, r0, r4, lsl #4
    b57c:	ldrdeq	r8, [r0], -r1
    b580:	andeq	r8, r0, pc, asr #3
    b584:	andeq	r8, r0, r2, lsl r2
    b588:	andeq	r8, r0, fp, lsr #4
    b58c:	andeq	r8, r0, r1, ror r2
    b590:	andeq	r8, r0, r0, asr #4
    b594:	andeq	r8, r0, r5, asr #4
    b598:	andeq	r8, r0, sp, ror #4
    b59c:	andeq	r8, r0, r8, ror #4
    b5a0:	andeq	r8, r0, r6, lsr #7
    b5a4:	andeq	r8, r0, sl, ror #5
    b5a8:	andeq	r8, r0, r3, lsr #5
    b5ac:	andeq	r8, r0, r5, ror #4
    b5b0:	andeq	r8, r0, ip, ror #4
    b5b4:	muleq	r0, r9, r2
    b5b8:	muleq	r0, pc, r2	; <UNPREDICTABLE>
    b5bc:	strdeq	r8, [r0], -ip
    b5c0:	andeq	r8, r0, r8, asr #5
    b5c4:	ldrdeq	r8, [r0], -r3
    b5c8:	andeq	r8, r0, r7, lsl #6
    b5cc:	andeq	r8, r0, r8, lsl #6
    b5d0:			; <UNDEFINED> instruction: 0x000083bc
    b5d4:	andeq	r8, r0, sl, ror #6
    b5d8:	andeq	r8, r0, r2, asr #6
    b5dc:	andeq	r8, r0, r4, asr #6
    b5e0:	andeq	r8, r0, lr, ror #6
    b5e4:	andeq	r8, r0, r5, ror r3
    b5e8:	andeq	r6, r0, sl, lsl sp
    b5ec:	andeq	r8, r0, r5, lsl #7
    b5f0:	andeq	r8, r0, ip, lsl #7
    b5f4:	andeq	r8, r0, r7, lsr #7
    b5f8:	andeq	r8, r0, r8, lsl #7
    b5fc:	andeq	r8, r0, r7, lsr #7
    b600:	andeq	r8, r0, r6, lsr #7
    b604:	andeq	r8, r0, r1, lsr #26
    b608:	muleq	r0, r4, r8
    b60c:	andeq	r8, r0, r6, lsl #12
    b610:	andeq	r8, r0, r6, ror #9
    b614:	andeq	r8, r0, r8, asr #8
    b618:	andeq	r8, r0, sp, ror #7
    b61c:	muleq	r0, r7, r3
    b620:			; <UNDEFINED> instruction: 0x000083b7
    b624:	andeq	r8, r0, r2, lsl #8
    b628:	strdeq	r8, [r0], -lr
    b62c:	andeq	r8, r0, lr, lsr r4
    b630:	andeq	r8, r0, r6, lsl r4
    b634:	andeq	r8, r0, lr, lsl r4
    b638:	andeq	r8, r0, r2, asr r4
    b63c:	andeq	r8, r0, r6, asr r4
    b640:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b644:	muleq	r0, r0, r4
    b648:	andeq	r8, r0, r6, ror #8
    b64c:	andeq	r8, r0, r6, ror #8
    b650:	muleq	r0, sl, r4
    b654:	andeq	r8, r0, r8, lsr #9
    b658:	ldrdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    b65c:			; <UNDEFINED> instruction: 0x000084b9
    b660:			; <UNDEFINED> instruction: 0x000084b7
    b664:	ldrdeq	r8, [r0], -r4
    b668:	andeq	r8, r0, r4, ror #9
    b66c:	andeq	r8, r0, r5, lsl #12
    b670:	andeq	r8, r0, fp, ror #10
    b674:	strdeq	r8, [r0], -sp
    b678:	ldrdeq	r8, [r0], -r9
    b67c:	ldrdeq	r8, [r0], -r5
    b680:	andeq	r8, r0, r6, lsl #10
    b684:	andeq	r8, r0, ip, lsl #10
    b688:	andeq	r8, r0, lr, asr r5
    b68c:	andeq	r8, r0, r6, lsr r5
    b690:	andeq	r8, r0, fp, lsr r5
    b694:	andeq	r8, r0, r2, ror #10
    b698:	andeq	r8, r0, r8, ror r5
    b69c:	andeq	r8, r0, sp, lsr #12
    b6a0:	andeq	r8, r0, pc, asr #11
    b6a4:	andeq	r8, r0, ip, lsl #11
    b6a8:	andeq	r8, r0, sp, lsl #11
    b6ac:	andeq	r8, r0, sl, asr #11
    b6b0:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b6b4:	andeq	r8, r0, r3, lsr #12
    b6b8:	andeq	r8, r0, r0, lsl #12
    b6bc:	andeq	r8, r0, r1, lsl #12
    b6c0:	andeq	r8, r0, sp, lsr r6
    b6c4:	andeq	r8, r0, sp, lsl #12
    b6c8:	andeq	r8, r0, r4, lsr r6
    b6cc:	andeq	r8, r0, fp, lsr r6
    b6d0:	andeq	r8, r0, r4, asr r8
    b6d4:	andeq	r8, r0, ip, lsr r7
    b6d8:	muleq	r0, ip, r6
    b6dc:	andeq	r8, r0, r0, asr r6
    b6e0:	andeq	r8, r0, sl, lsr #12
    b6e4:	andeq	r8, r0, r6, lsr #12
    b6e8:	andeq	r8, r0, lr, asr #12
    b6ec:	andeq	r8, r0, r4, asr r6
    b6f0:	andeq	r8, r0, r6, lsr #13
    b6f4:	andeq	r8, r0, fp, ror r6
    b6f8:	andeq	r8, r0, pc, ror r6
    b6fc:	muleq	r0, sp, r6
    b700:	andeq	r8, r0, pc, lsr #13
    b704:	andeq	r8, r0, r1, asr #14
    b708:	strdeq	r8, [r0], -r5
    b70c:	andeq	r8, r0, lr, lsr #13
    b710:			; <UNDEFINED> instruction: 0x000086b0
    b714:	andeq	r8, r0, pc, ror #13
    b718:	andeq	r8, r0, ip, ror #13
    b71c:	andeq	r8, r0, r0, asr #14
    b720:	andeq	r8, r0, ip, lsl #14
    b724:	andeq	r8, r0, sl, lsl r7
    b728:	andeq	r8, r0, r7, lsr #14
    b72c:	andeq	r8, r0, lr, lsr #14
    b730:	andeq	r8, r0, r9, lsl #17
    b734:	andeq	r8, r0, r6, ror #15
    b738:	andeq	r8, r0, r0, lsr #15
    b73c:	andeq	r8, r0, r4, ror r7
    b740:	andeq	r8, r0, r7, ror r7
    b744:	muleq	r0, r4, r7
    b748:	andeq	r8, r0, r2, lsr #15
    b74c:	andeq	r8, r0, pc, asr #15
    b750:	andeq	r8, r0, r8, lsr #15
    b754:	andeq	r8, r0, r8, lsr #15
    b758:	ldrdeq	r8, [r0], -lr
    b75c:	strdeq	r8, [r0], -r7
    b760:	andeq	r8, r0, r3, lsl #17
    b764:	andeq	r8, r0, r2, lsr #16
    b768:	strdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    b76c:	strdeq	r8, [r0], -lr
    b770:	andeq	r8, r0, r5, lsr r8
    b774:	andeq	r8, r0, fp, lsr r8
    b778:	andeq	r8, r0, r5, ror #16
    b77c:	andeq	r8, r0, r4, asr #16
    b780:	andeq	r8, r0, r4, asr #16
    b784:	andeq	r8, r0, ip, ror r8
    b788:	andeq	r8, r0, r1, asr r8
    b78c:	andeq	r8, r0, r3, ror r8
    b790:	andeq	r8, r0, r6, ror r8
    b794:	andeq	r8, r0, lr, lsr #26
    b798:			; <UNDEFINED> instruction: 0x00008abb
    b79c:	andeq	r8, r0, pc, lsl #19
    b7a0:	ldrdeq	r8, [r0], -lr
    b7a4:	andeq	r8, r0, sp, ror r8
    b7a8:	andeq	r8, r0, r4, asr r8
    b7ac:	andeq	r8, r0, fp, asr r8
    b7b0:	muleq	r0, r1, r8
    b7b4:	muleq	r0, sl, r8
    b7b8:	andeq	r8, r0, r9, ror #17
    b7bc:	andeq	r8, r0, lr, lsr #17
    b7c0:			; <UNDEFINED> instruction: 0x000088b4
    b7c4:	andeq	r8, r0, r4, ror #17
    b7c8:	andeq	r8, r0, pc, ror #17
    b7cc:	andeq	r8, r0, fp, lsr #19
    b7d0:	andeq	r8, r0, r3, asr #18
    b7d4:	strdeq	r8, [r0], -lr
    b7d8:	strdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    b7dc:	andeq	r8, r0, r7, asr r9
    b7e0:	andeq	r8, r0, fp, asr r9
    b7e4:	andeq	r8, r0, r3, lsr #19
    b7e8:	andeq	r8, r0, r9, ror #18
    b7ec:	andeq	r8, r0, sp, ror #18
    b7f0:	muleq	r0, r6, r9
    b7f4:	muleq	r0, r0, r9
    b7f8:	andeq	r8, r0, sl, asr #21
    b7fc:	andeq	r8, r0, lr, lsl sl
    b800:	andeq	r8, r0, r4, asr #19
    b804:	muleq	r0, ip, r9
    b808:	andeq	r8, r0, r5, lsr #19
    b80c:	andeq	r8, r0, r7, asr #19
    b810:	andeq	r8, r0, sl, asr #19
    b814:	andeq	r8, r0, sl, lsr sl
    b818:	strdeq	r8, [r0], -r9
    b81c:	andeq	r8, r0, r9, lsl #20
    b820:	andeq	r8, r0, r4, lsr sl
    b824:	andeq	r8, r0, r4, lsr sl
    b828:	ldrdeq	r8, [r0], -r0
    b82c:	andeq	r8, r0, r4, ror sl
    b830:	andeq	r8, r0, r5, asr #20
    b834:	andeq	r8, r0, r2, asr sl
    b838:	andeq	r8, r0, pc, ror #20
    b83c:	andeq	r8, r0, r7, lsl #21
    b840:	andeq	r8, r0, r1, ror #21
    b844:	andeq	r8, r0, r1, lsr #21
    b848:			; <UNDEFINED> instruction: 0x00008abc
    b84c:	ldrdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    b850:	andeq	r8, r0, r1, asr #21
    b854:	andeq	r8, r0, sp, asr #21
    b858:	ldrdeq	r8, [r0], -r6
    b85c:	andeq	r8, r0, r4, lsl #26
    b860:			; <UNDEFINED> instruction: 0x00008bbf
    b864:	andeq	r8, r0, pc, lsr fp
    b868:	andeq	r8, r0, r6, ror #21
    b86c:	andeq	r8, r0, r2, asr #21
    b870:	andeq	r8, r0, r7, asr #21
    b874:	andeq	r8, r0, r2, ror #21
    b878:	andeq	r8, r0, r4, ror #21
    b87c:	andeq	r8, r0, r3, lsr fp
    b880:	andeq	r8, r0, r9, lsl #22
    b884:	andeq	r8, r0, r4, lsl fp
    b888:	andeq	r8, r0, r0, lsr fp
    b88c:	andeq	r8, r0, r2, lsr fp
    b890:	ldrdeq	r8, [r0], -fp
    b894:	andeq	r8, r0, pc, ror #22
    b898:	andeq	r8, r0, pc, lsr fp
    b89c:	andeq	r8, r0, r4, asr #22
    b8a0:	andeq	r8, r0, r8, ror fp
    b8a4:	andeq	r8, r0, r6, lsl r5
    b8a8:	andeq	r8, r0, r4, ror r5
    b8ac:	andeq	r8, r0, r4, asr r5
    b8b0:	andeq	r8, r0, r2, asr r5
    b8b4:	andeq	r8, r0, r0, ror r5
    b8b8:	andeq	r8, r0, r8, ror r5
    b8bc:	andeq	r8, r0, r8, asr #13
    b8c0:	andeq	r8, r0, r5, lsl r6
    b8c4:	andeq	r8, r0, r4, lsr #11
    b8c8:	andeq	r8, r0, r9, lsl #11
    b8cc:	andeq	r8, r0, r2, lsl #11
    b8d0:	andeq	r8, r0, lr, lsr #11
    b8d4:	andeq	r8, r0, r9, asr #11
    b8d8:	andeq	r8, r0, r3, lsr #12
    b8dc:	andeq	r8, r0, ip, ror #11
    b8e0:	andeq	r8, r0, ip, ror #11
    b8e4:	andeq	r8, r0, r3, lsr #12
    b8e8:	andeq	r8, r0, sp, lsr #12
    b8ec:	andeq	r8, r0, sp, ror #13
    b8f0:	andeq	r8, r0, lr, lsl #13
    b8f4:	andeq	r8, r0, ip, lsr r6
    b8f8:	andeq	r8, r0, r6, ror #12
    b8fc:	andeq	r8, r0, r8, lsl #13
    b900:	andeq	r8, r0, pc, lsl #13
    b904:	andeq	r8, r0, lr, lsl #14
    b908:	ldrdeq	r8, [r0], -r0
    b90c:	andeq	r8, r0, ip, ror #13
    b910:	strdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    b914:	andeq	r8, r0, r9, ror #13
    b918:	strdeq	r8, [r0], -r7
    b91c:	strdeq	r8, [r0], -ip
    b920:			; <UNDEFINED> instruction: 0x00009ab1
    b924:	muleq	r0, r8, r0
    b928:	andeq	r8, r0, pc, lsl #23
    b92c:	andeq	r8, r0, r5, lsl r9
    b930:	strdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    b934:	andeq	r8, r0, sl, ror #14
    b938:	strdeq	r8, [r0], -r4
    b93c:	andeq	r8, r0, r8, asr #13
    b940:	andeq	r8, r0, pc, asr #13
    b944:	andeq	r8, r0, r5, lsl #14
    b948:	andeq	r8, r0, r4, lsl r7
    b94c:	andeq	r8, r0, r7, ror #14
    b950:	andeq	r8, r0, fp, lsr #14
    b954:	andeq	r8, r0, ip, lsr r7
    b958:	andeq	r8, r0, r9, ror #14
    b95c:	andeq	r8, r0, r3, ror r7
    b960:	ldrdeq	r8, [r0], -sp
    b964:	muleq	r0, pc, r7	; <UNPREDICTABLE>
    b968:	andeq	r8, r0, r1, ror r7
    b96c:	andeq	r8, r0, r2, ror r7
    b970:	muleq	r0, sl, r7
    b974:	muleq	r0, r5, r7
    b978:	andeq	r8, r0, r6, ror #15
    b97c:			; <UNDEFINED> instruction: 0x000087b3
    b980:			; <UNDEFINED> instruction: 0x000087be
    b984:	andeq	r8, r0, r9, ror #15
    b988:	strdeq	r8, [r0], -r4
    b98c:	andeq	r8, r0, r5, asr #18
    b990:	andeq	r8, r0, r1, ror r8
    b994:	andeq	r8, r0, r1, lsr r8
    b998:	strdeq	r8, [r0], -fp
    b99c:	andeq	r8, r0, r0, lsl #16
    b9a0:	andeq	r8, r0, pc, lsr #16
    b9a4:	andeq	r8, r0, sl, lsr #16
    b9a8:	muleq	r0, r3, r8
    b9ac:	andeq	r8, r0, sl, ror #16
    b9b0:	andeq	r8, r0, r5, ror #16
    b9b4:			; <UNDEFINED> instruction: 0x000088b6
    b9b8:			; <UNDEFINED> instruction: 0x000088b3
    b9bc:	andeq	r8, r0, r7, asr #18
    b9c0:	andeq	r8, r0, r1, ror #17
    b9c4:			; <UNDEFINED> instruction: 0x000088b6
    b9c8:			; <UNDEFINED> instruction: 0x000088b6
    b9cc:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    b9d0:	strdeq	r8, [r0], -sl
    b9d4:	andeq	r8, r0, pc, lsr r9
    b9d8:	andeq	r8, r0, lr, lsl r9
    b9dc:	andeq	r8, r0, sp, lsl r9
    b9e0:	andeq	r8, r0, r3, lsr r9
    b9e4:	andeq	r8, r0, fp, lsl r9
    b9e8:	andeq	r8, r0, sl, lsr #18
    b9ec:	andeq	r8, r0, r3, lsr r9
    b9f0:	andeq	r8, r0, sl, asr #23
    b9f4:	andeq	r8, r0, r9, ror #20
    b9f8:			; <UNDEFINED> instruction: 0x000089be
    b9fc:	andeq	r8, r0, sp, asr #18
    ba00:	andeq	r8, r0, sp, lsr #18
    ba04:	andeq	r8, r0, fp, lsr #18
    ba08:	andeq	r8, r0, r2, asr r9
    ba0c:	andeq	r8, r0, r4, ror #18
    ba10:			; <UNDEFINED> instruction: 0x000089be
    ba14:	muleq	r0, r3, r9
    ba18:	muleq	r0, sl, r9
    ba1c:	andeq	r8, r0, r2, asr #19
    ba20:	andeq	r8, r0, r8, asr #19
    ba24:	andeq	r8, r0, lr, lsr #21
    ba28:	andeq	r8, r0, sp, lsr sl
    ba2c:	ldrdeq	r8, [r0], -r4
    ba30:	andeq	r8, r0, r5, lsl #20
    ba34:	andeq	r8, r0, r7, asr sl
    ba38:	andeq	r8, r0, sp, asr sl
    ba3c:	andeq	r8, r0, r3, lsr #21
    ba40:	andeq	r8, r0, lr, ror #20
    ba44:	andeq	r8, r0, sp, ror sl
    ba48:	muleq	r0, r9, sl
    ba4c:	andeq	r8, r0, r7, lsr #21
    ba50:			; <UNDEFINED> instruction: 0x00008bbb
    ba54:	andeq	r8, r0, sp, lsr #22
    ba58:	ldrdeq	r8, [r0], -r7
    ba5c:	andeq	r8, r0, r1, lsr #21
    ba60:	muleq	r0, sp, sl
    ba64:	ldrdeq	r8, [r0], -ip
    ba68:	ldrdeq	r8, [r0], -pc	; <UNPREDICTABLE>
    ba6c:	andeq	r8, r0, r5, lsr #22
    ba70:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    ba74:	andeq	r8, r0, r4, lsl #22
    ba78:	andeq	r8, r0, r8, lsl fp
    ba7c:	andeq	r8, r0, fp, lsr #22
    ba80:	andeq	r8, r0, r3, ror #23
    ba84:	andeq	r8, r0, fp, ror #22
    ba88:	andeq	r8, r0, sl, asr #22
    ba8c:	andeq	r8, r0, fp, asr #22
    ba90:	andeq	r8, r0, pc, lsl #23
    ba94:	muleq	r0, r3, fp
    ba98:	ldrdeq	r8, [r0], -r2
    ba9c:	andeq	r8, r0, r7, lsr #23
    baa0:	andeq	r8, r0, r5, lsr #23
    baa4:	ldrdeq	r8, [r0], -fp
    baa8:			; <UNDEFINED> instruction: 0x00008bb6
    baac:	ldrdeq	r8, [r0], -r1
    bab0:	ldrdeq	r8, [r0], -r9
    bab4:	andeq	r9, r0, sp, asr #1
    bab8:	andeq	r8, r0, r7, lsl #28
    babc:	muleq	r0, ip, ip
    bac0:	andeq	r8, r0, r1, lsr ip
    bac4:	andeq	r8, r0, r8, ror #23
    bac8:	andeq	r8, r0, r0, asr #23
    bacc:	andeq	r8, r0, r3, asr #23
    bad0:	ldrdeq	r8, [r0], -ip
    bad4:	andeq	r8, r0, r9, ror #23
    bad8:	andeq	r8, r0, sl, lsl ip
    badc:	strdeq	r8, [r0], -r9
    bae0:	strdeq	r8, [r0], -r7
    bae4:	andeq	r8, r0, sl, lsl #24
    bae8:	andeq	r8, r0, lr, lsl #24
    baec:			; <UNDEFINED> instruction: 0x00008cb9
    baf0:	andeq	r8, r0, r8, asr ip
    baf4:	andeq	r8, r0, lr, lsl ip
    baf8:	andeq	r8, r0, r7, lsr #24
    bafc:	andeq	r8, r0, fp, asr ip
    bb00:	andeq	r8, r0, r6, ror #24
    bb04:	andeq	r8, r0, ip, lsr #25
    bb08:	andeq	r8, r0, r5, lsl #25
    bb0c:	andeq	r8, r0, pc, ror ip
    bb10:	ldrdeq	r8, [r0], -r5
    bb14:	andeq	r8, r0, r6, ror #25
    bb18:	andeq	r8, r0, r9, lsl #28
    bb1c:	andeq	r8, r0, lr, ror #26
    bb20:	andeq	r8, r0, r0, lsl sp
    bb24:	ldrdeq	r8, [r0], -r9
    bb28:	ldrdeq	r8, [r0], -fp
    bb2c:	andeq	r8, r0, r0, lsl sp
    bb30:	andeq	r8, r0, r9, lsl sp
    bb34:	andeq	r8, r0, r6, asr sp
    bb38:	andeq	r8, r0, lr, lsr #26
    bb3c:	andeq	r8, r0, r0, lsr sp
    bb40:	andeq	r8, r0, r7, ror #26
    bb44:	andeq	r8, r0, r1, ror sp
    bb48:	andeq	r8, r0, r2, lsl lr
    bb4c:			; <UNDEFINED> instruction: 0x00008db4
    bb50:	andeq	r8, r0, pc, lsl #27
    bb54:	muleq	r0, r0, sp
    bb58:			; <UNDEFINED> instruction: 0x00008db9
    bb5c:	andeq	r8, r0, r8, asr #27
    bb60:	andeq	r8, r0, r1, lsr lr
    bb64:	andeq	r8, r0, r5, ror #27
    bb68:	andeq	r8, r0, r3, lsl #28
    bb6c:	andeq	r8, r0, r2, asr lr
    bb70:	andeq	r8, r0, r7, lsr lr
    bb74:	andeq	r8, r0, r7, asr lr
    bb78:	andeq	r8, r0, r3, ror lr
    bb7c:	andeq	r9, r0, sp, lsl r1
    bb80:	andeq	r8, r0, fp, lsl #31
    bb84:	strdeq	r8, [r0], -r4
    bb88:	andeq	r8, r0, r3, lsr #29
    bb8c:	andeq	r8, r0, fp, ror #28
    bb90:	andeq	r8, r0, r7, ror lr
    bb94:			; <UNDEFINED> instruction: 0x00008eb4
    bb98:	andeq	r8, r0, fp, lsr #29
    bb9c:	andeq	r8, r0, ip, ror #29
    bba0:	andeq	r8, r0, r2, asr #29
    bba4:	andeq	r8, r0, r2, asr #29
    bba8:	strdeq	r8, [r0], -r2
    bbac:	andeq	r8, r0, lr, ror #29
    bbb0:			; <UNDEFINED> instruction: 0x00008fb4
    bbb4:	andeq	r8, r0, r0, asr pc
    bbb8:	andeq	r8, r0, r7, lsl #30
    bbbc:	andeq	r8, r0, r6, lsl pc
    bbc0:	andeq	r8, r0, fp, asr pc
    bbc4:	andeq	r8, r0, r6, ror #30
    bbc8:	andeq	r8, r0, r4, ror #31
    bbcc:	andeq	r8, r0, r7, lsl #31
    bbd0:	andeq	r8, r0, sl, lsl #31
    bbd4:	ldrdeq	r8, [r0], -ip
    bbd8:	ldr	r0, [pc, #-828]	; b8a4 <bt_compidtostr@@Base+0x4660>
    bbdc:	add	r0, pc, r0
    bbe0:	bx	lr
    bbe4:	ldr	r0, [pc, #-836]	; b8a8 <bt_compidtostr@@Base+0x4664>
    bbe8:	add	r0, pc, r0
    bbec:	bx	lr
    bbf0:	ldr	r0, [pc, #-844]	; b8ac <bt_compidtostr@@Base+0x4668>
    bbf4:	add	r0, pc, r0
    bbf8:	bx	lr
    bbfc:	ldr	r0, [pc, #-852]	; b8b0 <bt_compidtostr@@Base+0x466c>
    bc00:	add	r0, pc, r0
    bc04:	bx	lr
    bc08:	ldr	r0, [pc, #-860]	; b8b4 <bt_compidtostr@@Base+0x4670>
    bc0c:	add	r0, pc, r0
    bc10:	bx	lr
    bc14:	ldr	r0, [pc, #-868]	; b8b8 <bt_compidtostr@@Base+0x4674>
    bc18:	add	r0, pc, r0
    bc1c:	bx	lr
    bc20:	ldr	r0, [pc, #-876]	; b8bc <bt_compidtostr@@Base+0x4678>
    bc24:	add	r0, pc, r0
    bc28:	bx	lr
    bc2c:	ldr	r0, [pc, #-884]	; b8c0 <bt_compidtostr@@Base+0x467c>
    bc30:	add	r0, pc, r0
    bc34:	bx	lr
    bc38:	ldr	r0, [pc, #-892]	; b8c4 <bt_compidtostr@@Base+0x4680>
    bc3c:	add	r0, pc, r0
    bc40:	bx	lr
    bc44:	ldr	r0, [pc, #-900]	; b8c8 <bt_compidtostr@@Base+0x4684>
    bc48:	add	r0, pc, r0
    bc4c:	bx	lr
    bc50:	ldr	r0, [pc, #-908]	; b8cc <bt_compidtostr@@Base+0x4688>
    bc54:	add	r0, pc, r0
    bc58:	bx	lr
    bc5c:	ldr	r0, [pc, #-916]	; b8d0 <bt_compidtostr@@Base+0x468c>
    bc60:	add	r0, pc, r0
    bc64:	bx	lr
    bc68:	ldr	r0, [pc, #-924]	; b8d4 <bt_compidtostr@@Base+0x4690>
    bc6c:	add	r0, pc, r0
    bc70:	bx	lr
    bc74:	ldr	r0, [pc, #-932]	; b8d8 <bt_compidtostr@@Base+0x4694>
    bc78:	add	r0, pc, r0
    bc7c:	bx	lr
    bc80:	ldr	r0, [pc, #-940]	; b8dc <bt_compidtostr@@Base+0x4698>
    bc84:	add	r0, pc, r0
    bc88:	bx	lr
    bc8c:	ldr	r0, [pc, #-948]	; b8e0 <bt_compidtostr@@Base+0x469c>
    bc90:	add	r0, pc, r0
    bc94:	bx	lr
    bc98:	ldr	r0, [pc, #-956]	; b8e4 <bt_compidtostr@@Base+0x46a0>
    bc9c:	add	r0, pc, r0
    bca0:	bx	lr
    bca4:	ldr	r0, [pc, #-964]	; b8e8 <bt_compidtostr@@Base+0x46a4>
    bca8:	add	r0, pc, r0
    bcac:	bx	lr
    bcb0:	ldr	r0, [pc, #-972]	; b8ec <bt_compidtostr@@Base+0x46a8>
    bcb4:	add	r0, pc, r0
    bcb8:	bx	lr
    bcbc:	ldr	r0, [pc, #-980]	; b8f0 <bt_compidtostr@@Base+0x46ac>
    bcc0:	add	r0, pc, r0
    bcc4:	bx	lr
    bcc8:	ldr	r0, [pc, #-988]	; b8f4 <bt_compidtostr@@Base+0x46b0>
    bccc:	add	r0, pc, r0
    bcd0:	bx	lr
    bcd4:	ldr	r0, [pc, #-996]	; b8f8 <bt_compidtostr@@Base+0x46b4>
    bcd8:	add	r0, pc, r0
    bcdc:	bx	lr
    bce0:	ldr	r0, [pc, #-1004]	; b8fc <bt_compidtostr@@Base+0x46b8>
    bce4:	add	r0, pc, r0
    bce8:	bx	lr
    bcec:	ldr	r0, [pc, #-1012]	; b900 <bt_compidtostr@@Base+0x46bc>
    bcf0:	add	r0, pc, r0
    bcf4:	bx	lr
    bcf8:	ldr	r0, [pc, #-1020]	; b904 <bt_compidtostr@@Base+0x46c0>
    bcfc:	add	r0, pc, r0
    bd00:	bx	lr
    bd04:	ldr	r0, [pc, #-1028]	; b908 <bt_compidtostr@@Base+0x46c4>
    bd08:	add	r0, pc, r0
    bd0c:	bx	lr
    bd10:	ldr	r0, [pc, #-1036]	; b90c <bt_compidtostr@@Base+0x46c8>
    bd14:	add	r0, pc, r0
    bd18:	bx	lr
    bd1c:	ldr	r0, [pc, #-1044]	; b910 <bt_compidtostr@@Base+0x46cc>
    bd20:	add	r0, pc, r0
    bd24:	bx	lr
    bd28:	ldr	r0, [pc, #-1052]	; b914 <bt_compidtostr@@Base+0x46d0>
    bd2c:	add	r0, pc, r0
    bd30:	bx	lr
    bd34:	ldr	r0, [pc, #-1060]	; b918 <bt_compidtostr@@Base+0x46d4>
    bd38:	add	r0, pc, r0
    bd3c:	bx	lr
    bd40:	ldr	r0, [pc, #-1068]	; b91c <bt_compidtostr@@Base+0x46d8>
    bd44:	add	r0, pc, r0
    bd48:	bx	lr
    bd4c:	ldr	r0, [pc, #-1076]	; b920 <bt_compidtostr@@Base+0x46dc>
    bd50:	add	r0, pc, r0
    bd54:	bx	lr
    bd58:	ldr	r0, [pc, #-1084]	; b924 <bt_compidtostr@@Base+0x46e0>
    bd5c:	add	r0, pc, r0
    bd60:	bx	lr
    bd64:	ldr	r0, [pc, #-1092]	; b928 <bt_compidtostr@@Base+0x46e4>
    bd68:	add	r0, pc, r0
    bd6c:	bx	lr
    bd70:	ldr	r0, [pc, #-1100]	; b92c <bt_compidtostr@@Base+0x46e8>
    bd74:	add	r0, pc, r0
    bd78:	bx	lr
    bd7c:	ldr	r0, [pc, #-1108]	; b930 <bt_compidtostr@@Base+0x46ec>
    bd80:	add	r0, pc, r0
    bd84:	bx	lr
    bd88:	ldr	r0, [pc, #-1116]	; b934 <bt_compidtostr@@Base+0x46f0>
    bd8c:	add	r0, pc, r0
    bd90:	bx	lr
    bd94:	ldr	r0, [pc, #-1124]	; b938 <bt_compidtostr@@Base+0x46f4>
    bd98:	add	r0, pc, r0
    bd9c:	bx	lr
    bda0:	ldr	r0, [pc, #-1132]	; b93c <bt_compidtostr@@Base+0x46f8>
    bda4:	add	r0, pc, r0
    bda8:	bx	lr
    bdac:	ldr	r0, [pc, #-1140]	; b940 <bt_compidtostr@@Base+0x46fc>
    bdb0:	add	r0, pc, r0
    bdb4:	bx	lr
    bdb8:	ldr	r0, [pc, #-1148]	; b944 <bt_compidtostr@@Base+0x4700>
    bdbc:	add	r0, pc, r0
    bdc0:	bx	lr
    bdc4:	ldr	r0, [pc, #-1156]	; b948 <bt_compidtostr@@Base+0x4704>
    bdc8:	add	r0, pc, r0
    bdcc:	bx	lr
    bdd0:	ldr	r0, [pc, #-1164]	; b94c <bt_compidtostr@@Base+0x4708>
    bdd4:	add	r0, pc, r0
    bdd8:	bx	lr
    bddc:	ldr	r0, [pc, #-1172]	; b950 <bt_compidtostr@@Base+0x470c>
    bde0:	add	r0, pc, r0
    bde4:	bx	lr
    bde8:	ldr	r0, [pc, #-1180]	; b954 <bt_compidtostr@@Base+0x4710>
    bdec:	add	r0, pc, r0
    bdf0:	bx	lr
    bdf4:	ldr	r0, [pc, #-1188]	; b958 <bt_compidtostr@@Base+0x4714>
    bdf8:	add	r0, pc, r0
    bdfc:	bx	lr
    be00:	ldr	r0, [pc, #-1196]	; b95c <bt_compidtostr@@Base+0x4718>
    be04:	add	r0, pc, r0
    be08:	bx	lr
    be0c:	ldr	r0, [pc, #-1204]	; b960 <bt_compidtostr@@Base+0x471c>
    be10:	add	r0, pc, r0
    be14:	bx	lr
    be18:	ldr	r0, [pc, #-1212]	; b964 <bt_compidtostr@@Base+0x4720>
    be1c:	add	r0, pc, r0
    be20:	bx	lr
    be24:	ldr	r0, [pc, #-1220]	; b968 <bt_compidtostr@@Base+0x4724>
    be28:	add	r0, pc, r0
    be2c:	bx	lr
    be30:	ldr	r0, [pc, #-1228]	; b96c <bt_compidtostr@@Base+0x4728>
    be34:	add	r0, pc, r0
    be38:	bx	lr
    be3c:	ldr	r0, [pc, #-1236]	; b970 <bt_compidtostr@@Base+0x472c>
    be40:	add	r0, pc, r0
    be44:	bx	lr
    be48:	ldr	r0, [pc, #-1244]	; b974 <bt_compidtostr@@Base+0x4730>
    be4c:	add	r0, pc, r0
    be50:	bx	lr
    be54:	ldr	r0, [pc, #-1252]	; b978 <bt_compidtostr@@Base+0x4734>
    be58:	add	r0, pc, r0
    be5c:	bx	lr
    be60:	ldr	r0, [pc, #-1260]	; b97c <bt_compidtostr@@Base+0x4738>
    be64:	add	r0, pc, r0
    be68:	bx	lr
    be6c:	ldr	r0, [pc, #-1268]	; b980 <bt_compidtostr@@Base+0x473c>
    be70:	add	r0, pc, r0
    be74:	bx	lr
    be78:	ldr	r0, [pc, #-1276]	; b984 <bt_compidtostr@@Base+0x4740>
    be7c:	add	r0, pc, r0
    be80:	bx	lr
    be84:	ldr	r0, [pc, #-1284]	; b988 <bt_compidtostr@@Base+0x4744>
    be88:	add	r0, pc, r0
    be8c:	bx	lr
    be90:	ldr	r0, [pc, #-1292]	; b98c <bt_compidtostr@@Base+0x4748>
    be94:	add	r0, pc, r0
    be98:	bx	lr
    be9c:	ldr	r0, [pc, #-1300]	; b990 <bt_compidtostr@@Base+0x474c>
    bea0:	add	r0, pc, r0
    bea4:	bx	lr
    bea8:	ldr	r0, [pc, #-1308]	; b994 <bt_compidtostr@@Base+0x4750>
    beac:	add	r0, pc, r0
    beb0:	bx	lr
    beb4:	ldr	r0, [pc, #-1316]	; b998 <bt_compidtostr@@Base+0x4754>
    beb8:	add	r0, pc, r0
    bebc:	bx	lr
    bec0:	ldr	r0, [pc, #-1324]	; b99c <bt_compidtostr@@Base+0x4758>
    bec4:	add	r0, pc, r0
    bec8:	bx	lr
    becc:	ldr	r0, [pc, #-1332]	; b9a0 <bt_compidtostr@@Base+0x475c>
    bed0:	add	r0, pc, r0
    bed4:	bx	lr
    bed8:	ldr	r0, [pc, #-1340]	; b9a4 <bt_compidtostr@@Base+0x4760>
    bedc:	add	r0, pc, r0
    bee0:	bx	lr
    bee4:	ldr	r0, [pc, #-1348]	; b9a8 <bt_compidtostr@@Base+0x4764>
    bee8:	add	r0, pc, r0
    beec:	bx	lr
    bef0:	ldr	r0, [pc, #-1356]	; b9ac <bt_compidtostr@@Base+0x4768>
    bef4:	add	r0, pc, r0
    bef8:	bx	lr
    befc:	ldr	r0, [pc, #-1364]	; b9b0 <bt_compidtostr@@Base+0x476c>
    bf00:	add	r0, pc, r0
    bf04:	bx	lr
    bf08:	ldr	r0, [pc, #-1372]	; b9b4 <bt_compidtostr@@Base+0x4770>
    bf0c:	add	r0, pc, r0
    bf10:	bx	lr
    bf14:	ldr	r0, [pc, #-1380]	; b9b8 <bt_compidtostr@@Base+0x4774>
    bf18:	add	r0, pc, r0
    bf1c:	bx	lr
    bf20:	ldr	r0, [pc, #-1388]	; b9bc <bt_compidtostr@@Base+0x4778>
    bf24:	add	r0, pc, r0
    bf28:	bx	lr
    bf2c:	ldr	r0, [pc, #-1396]	; b9c0 <bt_compidtostr@@Base+0x477c>
    bf30:	add	r0, pc, r0
    bf34:	bx	lr
    bf38:	ldr	r0, [pc, #-1404]	; b9c4 <bt_compidtostr@@Base+0x4780>
    bf3c:	add	r0, pc, r0
    bf40:	bx	lr
    bf44:	ldr	r0, [pc, #-1412]	; b9c8 <bt_compidtostr@@Base+0x4784>
    bf48:	add	r0, pc, r0
    bf4c:	bx	lr
    bf50:	ldr	r0, [pc, #-1420]	; b9cc <bt_compidtostr@@Base+0x4788>
    bf54:	add	r0, pc, r0
    bf58:	bx	lr
    bf5c:	ldr	r0, [pc, #-1428]	; b9d0 <bt_compidtostr@@Base+0x478c>
    bf60:	add	r0, pc, r0
    bf64:	bx	lr
    bf68:	ldr	r0, [pc, #-1436]	; b9d4 <bt_compidtostr@@Base+0x4790>
    bf6c:	add	r0, pc, r0
    bf70:	bx	lr
    bf74:	ldr	r0, [pc, #-1444]	; b9d8 <bt_compidtostr@@Base+0x4794>
    bf78:	add	r0, pc, r0
    bf7c:	bx	lr
    bf80:	ldr	r0, [pc, #-1452]	; b9dc <bt_compidtostr@@Base+0x4798>
    bf84:	add	r0, pc, r0
    bf88:	bx	lr
    bf8c:	ldr	r0, [pc, #-1460]	; b9e0 <bt_compidtostr@@Base+0x479c>
    bf90:	add	r0, pc, r0
    bf94:	bx	lr
    bf98:	ldr	r0, [pc, #-1468]	; b9e4 <bt_compidtostr@@Base+0x47a0>
    bf9c:	add	r0, pc, r0
    bfa0:	bx	lr
    bfa4:	ldr	r0, [pc, #-1476]	; b9e8 <bt_compidtostr@@Base+0x47a4>
    bfa8:	add	r0, pc, r0
    bfac:	bx	lr
    bfb0:	ldr	r0, [pc, #-1484]	; b9ec <bt_compidtostr@@Base+0x47a8>
    bfb4:	add	r0, pc, r0
    bfb8:	bx	lr
    bfbc:	ldr	r0, [pc, #-1492]	; b9f0 <bt_compidtostr@@Base+0x47ac>
    bfc0:	add	r0, pc, r0
    bfc4:	bx	lr
    bfc8:	ldr	r0, [pc, #-1500]	; b9f4 <bt_compidtostr@@Base+0x47b0>
    bfcc:	add	r0, pc, r0
    bfd0:	bx	lr
    bfd4:	ldr	r0, [pc, #-1508]	; b9f8 <bt_compidtostr@@Base+0x47b4>
    bfd8:	add	r0, pc, r0
    bfdc:	bx	lr
    bfe0:	ldr	r0, [pc, #-1516]	; b9fc <bt_compidtostr@@Base+0x47b8>
    bfe4:	add	r0, pc, r0
    bfe8:	bx	lr
    bfec:	ldr	r0, [pc, #-1524]	; ba00 <bt_compidtostr@@Base+0x47bc>
    bff0:	add	r0, pc, r0
    bff4:	bx	lr
    bff8:	ldr	r0, [pc, #-1532]	; ba04 <bt_compidtostr@@Base+0x47c0>
    bffc:	add	r0, pc, r0
    c000:	bx	lr
    c004:	ldr	r0, [pc, #-1540]	; ba08 <bt_compidtostr@@Base+0x47c4>
    c008:	add	r0, pc, r0
    c00c:	bx	lr
    c010:	ldr	r0, [pc, #-1548]	; ba0c <bt_compidtostr@@Base+0x47c8>
    c014:	add	r0, pc, r0
    c018:	bx	lr
    c01c:	ldr	r0, [pc, #-1556]	; ba10 <bt_compidtostr@@Base+0x47cc>
    c020:	add	r0, pc, r0
    c024:	bx	lr
    c028:	ldr	r0, [pc, #-1564]	; ba14 <bt_compidtostr@@Base+0x47d0>
    c02c:	add	r0, pc, r0
    c030:	bx	lr
    c034:	ldr	r0, [pc, #-1572]	; ba18 <bt_compidtostr@@Base+0x47d4>
    c038:	add	r0, pc, r0
    c03c:	bx	lr
    c040:	ldr	r0, [pc, #-1580]	; ba1c <bt_compidtostr@@Base+0x47d8>
    c044:	add	r0, pc, r0
    c048:	bx	lr
    c04c:	ldr	r0, [pc, #-1588]	; ba20 <bt_compidtostr@@Base+0x47dc>
    c050:	add	r0, pc, r0
    c054:	bx	lr
    c058:	ldr	r0, [pc, #-1596]	; ba24 <bt_compidtostr@@Base+0x47e0>
    c05c:	add	r0, pc, r0
    c060:	bx	lr
    c064:	ldr	r0, [pc, #-1604]	; ba28 <bt_compidtostr@@Base+0x47e4>
    c068:	add	r0, pc, r0
    c06c:	bx	lr
    c070:	ldr	r0, [pc, #-1612]	; ba2c <bt_compidtostr@@Base+0x47e8>
    c074:	add	r0, pc, r0
    c078:	bx	lr
    c07c:	ldr	r0, [pc, #-1620]	; ba30 <bt_compidtostr@@Base+0x47ec>
    c080:	add	r0, pc, r0
    c084:	bx	lr
    c088:	ldr	r0, [pc, #-1628]	; ba34 <bt_compidtostr@@Base+0x47f0>
    c08c:	add	r0, pc, r0
    c090:	bx	lr
    c094:	ldr	r0, [pc, #-1636]	; ba38 <bt_compidtostr@@Base+0x47f4>
    c098:	add	r0, pc, r0
    c09c:	bx	lr
    c0a0:	ldr	r0, [pc, #-1644]	; ba3c <bt_compidtostr@@Base+0x47f8>
    c0a4:	add	r0, pc, r0
    c0a8:	bx	lr
    c0ac:	ldr	r0, [pc, #-1652]	; ba40 <bt_compidtostr@@Base+0x47fc>
    c0b0:	add	r0, pc, r0
    c0b4:	bx	lr
    c0b8:	ldr	r0, [pc, #-1660]	; ba44 <bt_compidtostr@@Base+0x4800>
    c0bc:	add	r0, pc, r0
    c0c0:	bx	lr
    c0c4:	ldr	r0, [pc, #-1668]	; ba48 <bt_compidtostr@@Base+0x4804>
    c0c8:	add	r0, pc, r0
    c0cc:	bx	lr
    c0d0:	ldr	r0, [pc, #-1676]	; ba4c <bt_compidtostr@@Base+0x4808>
    c0d4:	add	r0, pc, r0
    c0d8:	bx	lr
    c0dc:	ldr	r0, [pc, #-1684]	; ba50 <bt_compidtostr@@Base+0x480c>
    c0e0:	add	r0, pc, r0
    c0e4:	bx	lr
    c0e8:	ldr	r0, [pc, #-1692]	; ba54 <bt_compidtostr@@Base+0x4810>
    c0ec:	add	r0, pc, r0
    c0f0:	bx	lr
    c0f4:	ldr	r0, [pc, #-1700]	; ba58 <bt_compidtostr@@Base+0x4814>
    c0f8:	add	r0, pc, r0
    c0fc:	bx	lr
    c100:	ldr	r0, [pc, #-1708]	; ba5c <bt_compidtostr@@Base+0x4818>
    c104:	add	r0, pc, r0
    c108:	bx	lr
    c10c:	ldr	r0, [pc, #-1716]	; ba60 <bt_compidtostr@@Base+0x481c>
    c110:	add	r0, pc, r0
    c114:	bx	lr
    c118:	ldr	r0, [pc, #-1724]	; ba64 <bt_compidtostr@@Base+0x4820>
    c11c:	add	r0, pc, r0
    c120:	bx	lr
    c124:	ldr	r0, [pc, #-1732]	; ba68 <bt_compidtostr@@Base+0x4824>
    c128:	add	r0, pc, r0
    c12c:	bx	lr
    c130:	ldr	r0, [pc, #-1740]	; ba6c <bt_compidtostr@@Base+0x4828>
    c134:	add	r0, pc, r0
    c138:	bx	lr
    c13c:	ldr	r0, [pc, #-1748]	; ba70 <bt_compidtostr@@Base+0x482c>
    c140:	add	r0, pc, r0
    c144:	bx	lr
    c148:	ldr	r0, [pc, #-1756]	; ba74 <bt_compidtostr@@Base+0x4830>
    c14c:	add	r0, pc, r0
    c150:	bx	lr
    c154:	ldr	r0, [pc, #-1764]	; ba78 <bt_compidtostr@@Base+0x4834>
    c158:	add	r0, pc, r0
    c15c:	bx	lr
    c160:	ldr	r0, [pc, #-1772]	; ba7c <bt_compidtostr@@Base+0x4838>
    c164:	add	r0, pc, r0
    c168:	bx	lr
    c16c:	ldr	r0, [pc, #-1780]	; ba80 <bt_compidtostr@@Base+0x483c>
    c170:	add	r0, pc, r0
    c174:	bx	lr
    c178:	ldr	r0, [pc, #-1788]	; ba84 <bt_compidtostr@@Base+0x4840>
    c17c:	add	r0, pc, r0
    c180:	bx	lr
    c184:	ldr	r0, [pc, #-1796]	; ba88 <bt_compidtostr@@Base+0x4844>
    c188:	add	r0, pc, r0
    c18c:	bx	lr
    c190:	ldr	r0, [pc, #-1804]	; ba8c <bt_compidtostr@@Base+0x4848>
    c194:	add	r0, pc, r0
    c198:	bx	lr
    c19c:	ldr	r0, [pc, #-1812]	; ba90 <bt_compidtostr@@Base+0x484c>
    c1a0:	add	r0, pc, r0
    c1a4:	bx	lr
    c1a8:	ldr	r0, [pc, #-1820]	; ba94 <bt_compidtostr@@Base+0x4850>
    c1ac:	add	r0, pc, r0
    c1b0:	bx	lr
    c1b4:	ldr	r0, [pc, #-1828]	; ba98 <bt_compidtostr@@Base+0x4854>
    c1b8:	add	r0, pc, r0
    c1bc:	bx	lr
    c1c0:	ldr	r0, [pc, #-1836]	; ba9c <bt_compidtostr@@Base+0x4858>
    c1c4:	add	r0, pc, r0
    c1c8:	bx	lr
    c1cc:	ldr	r0, [pc, #-1844]	; baa0 <bt_compidtostr@@Base+0x485c>
    c1d0:	add	r0, pc, r0
    c1d4:	bx	lr
    c1d8:	ldr	r0, [pc, #-1852]	; baa4 <bt_compidtostr@@Base+0x4860>
    c1dc:	add	r0, pc, r0
    c1e0:	bx	lr
    c1e4:	ldr	r0, [pc, #-1860]	; baa8 <bt_compidtostr@@Base+0x4864>
    c1e8:	add	r0, pc, r0
    c1ec:	bx	lr
    c1f0:	ldr	r0, [pc, #-1868]	; baac <bt_compidtostr@@Base+0x4868>
    c1f4:	add	r0, pc, r0
    c1f8:	bx	lr
    c1fc:	ldr	r0, [pc, #-1876]	; bab0 <bt_compidtostr@@Base+0x486c>
    c200:	add	r0, pc, r0
    c204:	bx	lr
    c208:	ldr	r0, [pc, #-1884]	; bab4 <bt_compidtostr@@Base+0x4870>
    c20c:	add	r0, pc, r0
    c210:	bx	lr
    c214:	ldr	r0, [pc, #-1892]	; bab8 <bt_compidtostr@@Base+0x4874>
    c218:	add	r0, pc, r0
    c21c:	bx	lr
    c220:	ldr	r0, [pc, #-1900]	; babc <bt_compidtostr@@Base+0x4878>
    c224:	add	r0, pc, r0
    c228:	bx	lr
    c22c:	ldr	r0, [pc, #-1908]	; bac0 <bt_compidtostr@@Base+0x487c>
    c230:	add	r0, pc, r0
    c234:	bx	lr
    c238:	ldr	r0, [pc, #-1916]	; bac4 <bt_compidtostr@@Base+0x4880>
    c23c:	add	r0, pc, r0
    c240:	bx	lr
    c244:	ldr	r0, [pc, #-1924]	; bac8 <bt_compidtostr@@Base+0x4884>
    c248:	add	r0, pc, r0
    c24c:	bx	lr
    c250:	ldr	r0, [pc, #-1932]	; bacc <bt_compidtostr@@Base+0x4888>
    c254:	add	r0, pc, r0
    c258:	bx	lr
    c25c:	ldr	r0, [pc, #-1940]	; bad0 <bt_compidtostr@@Base+0x488c>
    c260:	add	r0, pc, r0
    c264:	bx	lr
    c268:	ldr	r0, [pc, #-1948]	; bad4 <bt_compidtostr@@Base+0x4890>
    c26c:	add	r0, pc, r0
    c270:	bx	lr
    c274:	ldr	r0, [pc, #-1956]	; bad8 <bt_compidtostr@@Base+0x4894>
    c278:	add	r0, pc, r0
    c27c:	bx	lr
    c280:	ldr	r0, [pc, #-1964]	; badc <bt_compidtostr@@Base+0x4898>
    c284:	add	r0, pc, r0
    c288:	bx	lr
    c28c:	ldr	r0, [pc, #-1972]	; bae0 <bt_compidtostr@@Base+0x489c>
    c290:	add	r0, pc, r0
    c294:	bx	lr
    c298:	ldr	r0, [pc, #-1980]	; bae4 <bt_compidtostr@@Base+0x48a0>
    c29c:	add	r0, pc, r0
    c2a0:	bx	lr
    c2a4:	ldr	r0, [pc, #-1988]	; bae8 <bt_compidtostr@@Base+0x48a4>
    c2a8:	add	r0, pc, r0
    c2ac:	bx	lr
    c2b0:	ldr	r0, [pc, #-1996]	; baec <bt_compidtostr@@Base+0x48a8>
    c2b4:	add	r0, pc, r0
    c2b8:	bx	lr
    c2bc:	ldr	r0, [pc, #-2004]	; baf0 <bt_compidtostr@@Base+0x48ac>
    c2c0:	add	r0, pc, r0
    c2c4:	bx	lr
    c2c8:	ldr	r0, [pc, #-2012]	; baf4 <bt_compidtostr@@Base+0x48b0>
    c2cc:	add	r0, pc, r0
    c2d0:	bx	lr
    c2d4:	ldr	r0, [pc, #-2020]	; baf8 <bt_compidtostr@@Base+0x48b4>
    c2d8:	add	r0, pc, r0
    c2dc:	bx	lr
    c2e0:	ldr	r0, [pc, #-2028]	; bafc <bt_compidtostr@@Base+0x48b8>
    c2e4:	add	r0, pc, r0
    c2e8:	bx	lr
    c2ec:	ldr	r0, [pc, #-2036]	; bb00 <bt_compidtostr@@Base+0x48bc>
    c2f0:	add	r0, pc, r0
    c2f4:	bx	lr
    c2f8:	ldr	r0, [pc, #-2044]	; bb04 <bt_compidtostr@@Base+0x48c0>
    c2fc:	add	r0, pc, r0
    c300:	bx	lr
    c304:	ldr	r0, [pc, #-2052]	; bb08 <bt_compidtostr@@Base+0x48c4>
    c308:	add	r0, pc, r0
    c30c:	bx	lr
    c310:	ldr	r0, [pc, #-2060]	; bb0c <bt_compidtostr@@Base+0x48c8>
    c314:	add	r0, pc, r0
    c318:	bx	lr
    c31c:	ldr	r0, [pc, #-2068]	; bb10 <bt_compidtostr@@Base+0x48cc>
    c320:	add	r0, pc, r0
    c324:	bx	lr
    c328:	ldr	r0, [pc, #-2076]	; bb14 <bt_compidtostr@@Base+0x48d0>
    c32c:	add	r0, pc, r0
    c330:	bx	lr
    c334:	ldr	r0, [pc, #-2084]	; bb18 <bt_compidtostr@@Base+0x48d4>
    c338:	add	r0, pc, r0
    c33c:	bx	lr
    c340:	ldr	r0, [pc, #-2092]	; bb1c <bt_compidtostr@@Base+0x48d8>
    c344:	add	r0, pc, r0
    c348:	bx	lr
    c34c:	ldr	r0, [pc, #-2100]	; bb20 <bt_compidtostr@@Base+0x48dc>
    c350:	add	r0, pc, r0
    c354:	bx	lr
    c358:	ldr	r0, [pc, #-2108]	; bb24 <bt_compidtostr@@Base+0x48e0>
    c35c:	add	r0, pc, r0
    c360:	bx	lr
    c364:	ldr	r0, [pc, #-2116]	; bb28 <bt_compidtostr@@Base+0x48e4>
    c368:	add	r0, pc, r0
    c36c:	bx	lr
    c370:	ldr	r0, [pc, #-2124]	; bb2c <bt_compidtostr@@Base+0x48e8>
    c374:	add	r0, pc, r0
    c378:	bx	lr
    c37c:	ldr	r0, [pc, #-2132]	; bb30 <bt_compidtostr@@Base+0x48ec>
    c380:	add	r0, pc, r0
    c384:	bx	lr
    c388:	ldr	r0, [pc, #-2140]	; bb34 <bt_compidtostr@@Base+0x48f0>
    c38c:	add	r0, pc, r0
    c390:	bx	lr
    c394:	ldr	r0, [pc, #-2148]	; bb38 <bt_compidtostr@@Base+0x48f4>
    c398:	add	r0, pc, r0
    c39c:	bx	lr
    c3a0:	ldr	r0, [pc, #-2156]	; bb3c <bt_compidtostr@@Base+0x48f8>
    c3a4:	add	r0, pc, r0
    c3a8:	bx	lr
    c3ac:	ldr	r0, [pc, #-2164]	; bb40 <bt_compidtostr@@Base+0x48fc>
    c3b0:	add	r0, pc, r0
    c3b4:	bx	lr
    c3b8:	ldr	r0, [pc, #-2172]	; bb44 <bt_compidtostr@@Base+0x4900>
    c3bc:	add	r0, pc, r0
    c3c0:	bx	lr
    c3c4:	ldr	r0, [pc, #-2180]	; bb48 <bt_compidtostr@@Base+0x4904>
    c3c8:	add	r0, pc, r0
    c3cc:	bx	lr
    c3d0:	ldr	r0, [pc, #-2188]	; bb4c <bt_compidtostr@@Base+0x4908>
    c3d4:	add	r0, pc, r0
    c3d8:	bx	lr
    c3dc:	ldr	r0, [pc, #-2196]	; bb50 <bt_compidtostr@@Base+0x490c>
    c3e0:	add	r0, pc, r0
    c3e4:	bx	lr
    c3e8:	ldr	r0, [pc, #-2204]	; bb54 <bt_compidtostr@@Base+0x4910>
    c3ec:	add	r0, pc, r0
    c3f0:	bx	lr
    c3f4:	ldr	r0, [pc, #-2212]	; bb58 <bt_compidtostr@@Base+0x4914>
    c3f8:	add	r0, pc, r0
    c3fc:	bx	lr
    c400:	ldr	r0, [pc, #-2220]	; bb5c <bt_compidtostr@@Base+0x4918>
    c404:	add	r0, pc, r0
    c408:	bx	lr
    c40c:	ldr	r0, [pc, #-2228]	; bb60 <bt_compidtostr@@Base+0x491c>
    c410:	add	r0, pc, r0
    c414:	bx	lr
    c418:	ldr	r0, [pc, #-2236]	; bb64 <bt_compidtostr@@Base+0x4920>
    c41c:	add	r0, pc, r0
    c420:	bx	lr
    c424:	ldr	r0, [pc, #-2244]	; bb68 <bt_compidtostr@@Base+0x4924>
    c428:	add	r0, pc, r0
    c42c:	bx	lr
    c430:	ldr	r0, [pc, #-2252]	; bb6c <bt_compidtostr@@Base+0x4928>
    c434:	add	r0, pc, r0
    c438:	bx	lr
    c43c:	ldr	r0, [pc, #-2260]	; bb70 <bt_compidtostr@@Base+0x492c>
    c440:	add	r0, pc, r0
    c444:	bx	lr
    c448:	ldr	r0, [pc, #-2268]	; bb74 <bt_compidtostr@@Base+0x4930>
    c44c:	add	r0, pc, r0
    c450:	bx	lr
    c454:	ldr	r0, [pc, #-2276]	; bb78 <bt_compidtostr@@Base+0x4934>
    c458:	add	r0, pc, r0
    c45c:	bx	lr
    c460:	ldr	r0, [pc, #-2284]	; bb7c <bt_compidtostr@@Base+0x4938>
    c464:	add	r0, pc, r0
    c468:	bx	lr
    c46c:	ldr	r0, [pc, #-2292]	; bb80 <bt_compidtostr@@Base+0x493c>
    c470:	add	r0, pc, r0
    c474:	bx	lr
    c478:	ldr	r0, [pc, #-2300]	; bb84 <bt_compidtostr@@Base+0x4940>
    c47c:	add	r0, pc, r0
    c480:	bx	lr
    c484:	ldr	r0, [pc, #-2308]	; bb88 <bt_compidtostr@@Base+0x4944>
    c488:	add	r0, pc, r0
    c48c:	bx	lr
    c490:	ldr	r0, [pc, #-2316]	; bb8c <bt_compidtostr@@Base+0x4948>
    c494:	add	r0, pc, r0
    c498:	bx	lr
    c49c:	ldr	r0, [pc, #-2324]	; bb90 <bt_compidtostr@@Base+0x494c>
    c4a0:	add	r0, pc, r0
    c4a4:	bx	lr
    c4a8:	ldr	r0, [pc, #-2332]	; bb94 <bt_compidtostr@@Base+0x4950>
    c4ac:	add	r0, pc, r0
    c4b0:	bx	lr
    c4b4:	ldr	r0, [pc, #-2340]	; bb98 <bt_compidtostr@@Base+0x4954>
    c4b8:	add	r0, pc, r0
    c4bc:	bx	lr
    c4c0:	ldr	r0, [pc, #-2348]	; bb9c <bt_compidtostr@@Base+0x4958>
    c4c4:	add	r0, pc, r0
    c4c8:	bx	lr
    c4cc:	ldr	r0, [pc, #-2356]	; bba0 <bt_compidtostr@@Base+0x495c>
    c4d0:	add	r0, pc, r0
    c4d4:	bx	lr
    c4d8:	ldr	r0, [pc, #-2364]	; bba4 <bt_compidtostr@@Base+0x4960>
    c4dc:	add	r0, pc, r0
    c4e0:	bx	lr
    c4e4:	ldr	r0, [pc, #-2372]	; bba8 <bt_compidtostr@@Base+0x4964>
    c4e8:	add	r0, pc, r0
    c4ec:	bx	lr
    c4f0:	ldr	r0, [pc, #-2380]	; bbac <bt_compidtostr@@Base+0x4968>
    c4f4:	add	r0, pc, r0
    c4f8:	bx	lr
    c4fc:	ldr	r0, [pc, #-2388]	; bbb0 <bt_compidtostr@@Base+0x496c>
    c500:	add	r0, pc, r0
    c504:	bx	lr
    c508:	ldr	r0, [pc, #-2396]	; bbb4 <bt_compidtostr@@Base+0x4970>
    c50c:	add	r0, pc, r0
    c510:	bx	lr
    c514:	ldr	r0, [pc, #-2404]	; bbb8 <bt_compidtostr@@Base+0x4974>
    c518:	add	r0, pc, r0
    c51c:	bx	lr
    c520:	ldr	r0, [pc, #-2412]	; bbbc <bt_compidtostr@@Base+0x4978>
    c524:	add	r0, pc, r0
    c528:	bx	lr
    c52c:	ldr	r0, [pc, #-2420]	; bbc0 <bt_compidtostr@@Base+0x497c>
    c530:	add	r0, pc, r0
    c534:	bx	lr
    c538:	ldr	r0, [pc, #-2428]	; bbc4 <bt_compidtostr@@Base+0x4980>
    c53c:	add	r0, pc, r0
    c540:	bx	lr
    c544:	ldr	r0, [pc, #-2436]	; bbc8 <bt_compidtostr@@Base+0x4984>
    c548:	add	r0, pc, r0
    c54c:	bx	lr
    c550:	ldr	r0, [pc, #-2444]	; bbcc <bt_compidtostr@@Base+0x4988>
    c554:	add	r0, pc, r0
    c558:	bx	lr
    c55c:	ldr	r0, [pc, #-2452]	; bbd0 <bt_compidtostr@@Base+0x498c>
    c560:	add	r0, pc, r0
    c564:	bx	lr
    c568:	ldr	r0, [pc, #-2460]	; bbd4 <bt_compidtostr@@Base+0x4990>
    c56c:	add	r0, pc, r0
    c570:	bx	lr
    c574:	ldr	r0, [pc, #2440]	; cf04 <bt_compidtostr@@Base+0x5cc0>
    c578:	add	r0, pc, r0
    c57c:	bx	lr
    c580:	ldr	r0, [pc, #2432]	; cf08 <bt_compidtostr@@Base+0x5cc4>
    c584:	add	r0, pc, r0
    c588:	bx	lr
    c58c:	ldr	r0, [pc, #2424]	; cf0c <bt_compidtostr@@Base+0x5cc8>
    c590:	add	r0, pc, r0
    c594:	bx	lr
    c598:	ldr	r0, [pc, #2416]	; cf10 <bt_compidtostr@@Base+0x5ccc>
    c59c:	add	r0, pc, r0
    c5a0:	bx	lr
    c5a4:	ldr	r0, [pc, #2408]	; cf14 <bt_compidtostr@@Base+0x5cd0>
    c5a8:	add	r0, pc, r0
    c5ac:	bx	lr
    c5b0:	ldr	r0, [pc, #2400]	; cf18 <bt_compidtostr@@Base+0x5cd4>
    c5b4:	add	r0, pc, r0
    c5b8:	bx	lr
    c5bc:	ldr	r0, [pc, #2392]	; cf1c <bt_compidtostr@@Base+0x5cd8>
    c5c0:	add	r0, pc, r0
    c5c4:	bx	lr
    c5c8:	ldr	r0, [pc, #2384]	; cf20 <bt_compidtostr@@Base+0x5cdc>
    c5cc:	add	r0, pc, r0
    c5d0:	bx	lr
    c5d4:	ldr	r0, [pc, #2376]	; cf24 <bt_compidtostr@@Base+0x5ce0>
    c5d8:	add	r0, pc, r0
    c5dc:	bx	lr
    c5e0:	ldr	r0, [pc, #2368]	; cf28 <bt_compidtostr@@Base+0x5ce4>
    c5e4:	add	r0, pc, r0
    c5e8:	bx	lr
    c5ec:	ldr	r0, [pc, #2360]	; cf2c <bt_compidtostr@@Base+0x5ce8>
    c5f0:	add	r0, pc, r0
    c5f4:	bx	lr
    c5f8:	ldr	r0, [pc, #2352]	; cf30 <bt_compidtostr@@Base+0x5cec>
    c5fc:	add	r0, pc, r0
    c600:	bx	lr
    c604:	ldr	r0, [pc, #2344]	; cf34 <bt_compidtostr@@Base+0x5cf0>
    c608:	add	r0, pc, r0
    c60c:	bx	lr
    c610:	ldr	r0, [pc, #2336]	; cf38 <bt_compidtostr@@Base+0x5cf4>
    c614:	add	r0, pc, r0
    c618:	bx	lr
    c61c:	ldr	r0, [pc, #2328]	; cf3c <bt_compidtostr@@Base+0x5cf8>
    c620:	add	r0, pc, r0
    c624:	bx	lr
    c628:	ldr	r0, [pc, #2320]	; cf40 <bt_compidtostr@@Base+0x5cfc>
    c62c:	add	r0, pc, r0
    c630:	bx	lr
    c634:	ldr	r0, [pc, #2312]	; cf44 <bt_compidtostr@@Base+0x5d00>
    c638:	add	r0, pc, r0
    c63c:	bx	lr
    c640:	ldr	r0, [pc, #2304]	; cf48 <bt_compidtostr@@Base+0x5d04>
    c644:	add	r0, pc, r0
    c648:	bx	lr
    c64c:	ldr	r0, [pc, #2296]	; cf4c <bt_compidtostr@@Base+0x5d08>
    c650:	add	r0, pc, r0
    c654:	bx	lr
    c658:	ldr	r0, [pc, #2288]	; cf50 <bt_compidtostr@@Base+0x5d0c>
    c65c:	add	r0, pc, r0
    c660:	bx	lr
    c664:	ldr	r0, [pc, #2280]	; cf54 <bt_compidtostr@@Base+0x5d10>
    c668:	add	r0, pc, r0
    c66c:	bx	lr
    c670:	ldr	r0, [pc, #2272]	; cf58 <bt_compidtostr@@Base+0x5d14>
    c674:	add	r0, pc, r0
    c678:	bx	lr
    c67c:	ldr	r0, [pc, #2264]	; cf5c <bt_compidtostr@@Base+0x5d18>
    c680:	add	r0, pc, r0
    c684:	bx	lr
    c688:	ldr	r0, [pc, #2256]	; cf60 <bt_compidtostr@@Base+0x5d1c>
    c68c:	add	r0, pc, r0
    c690:	bx	lr
    c694:	ldr	r0, [pc, #2248]	; cf64 <bt_compidtostr@@Base+0x5d20>
    c698:	add	r0, pc, r0
    c69c:	bx	lr
    c6a0:	ldr	r0, [pc, #2240]	; cf68 <bt_compidtostr@@Base+0x5d24>
    c6a4:	add	r0, pc, r0
    c6a8:	bx	lr
    c6ac:	ldr	r0, [pc, #2232]	; cf6c <bt_compidtostr@@Base+0x5d28>
    c6b0:	add	r0, pc, r0
    c6b4:	bx	lr
    c6b8:	ldr	r0, [pc, #2224]	; cf70 <bt_compidtostr@@Base+0x5d2c>
    c6bc:	add	r0, pc, r0
    c6c0:	bx	lr
    c6c4:	ldr	r0, [pc, #2216]	; cf74 <bt_compidtostr@@Base+0x5d30>
    c6c8:	add	r0, pc, r0
    c6cc:	bx	lr
    c6d0:	ldr	r0, [pc, #2208]	; cf78 <bt_compidtostr@@Base+0x5d34>
    c6d4:	add	r0, pc, r0
    c6d8:	bx	lr
    c6dc:	ldr	r0, [pc, #2200]	; cf7c <bt_compidtostr@@Base+0x5d38>
    c6e0:	add	r0, pc, r0
    c6e4:	bx	lr
    c6e8:	ldr	r0, [pc, #2192]	; cf80 <bt_compidtostr@@Base+0x5d3c>
    c6ec:	add	r0, pc, r0
    c6f0:	bx	lr
    c6f4:	ldr	r0, [pc, #2184]	; cf84 <bt_compidtostr@@Base+0x5d40>
    c6f8:	add	r0, pc, r0
    c6fc:	bx	lr
    c700:	ldr	r0, [pc, #2176]	; cf88 <bt_compidtostr@@Base+0x5d44>
    c704:	add	r0, pc, r0
    c708:	bx	lr
    c70c:	ldr	r0, [pc, #2168]	; cf8c <bt_compidtostr@@Base+0x5d48>
    c710:	add	r0, pc, r0
    c714:	bx	lr
    c718:	ldr	r0, [pc, #2160]	; cf90 <bt_compidtostr@@Base+0x5d4c>
    c71c:	add	r0, pc, r0
    c720:	bx	lr
    c724:	ldr	r0, [pc, #2152]	; cf94 <bt_compidtostr@@Base+0x5d50>
    c728:	add	r0, pc, r0
    c72c:	bx	lr
    c730:	ldr	r0, [pc, #2144]	; cf98 <bt_compidtostr@@Base+0x5d54>
    c734:	add	r0, pc, r0
    c738:	bx	lr
    c73c:	ldr	r0, [pc, #2136]	; cf9c <bt_compidtostr@@Base+0x5d58>
    c740:	add	r0, pc, r0
    c744:	bx	lr
    c748:	ldr	r0, [pc, #2128]	; cfa0 <bt_compidtostr@@Base+0x5d5c>
    c74c:	add	r0, pc, r0
    c750:	bx	lr
    c754:	ldr	r0, [pc, #2120]	; cfa4 <bt_compidtostr@@Base+0x5d60>
    c758:	add	r0, pc, r0
    c75c:	bx	lr
    c760:	ldr	r0, [pc, #2112]	; cfa8 <bt_compidtostr@@Base+0x5d64>
    c764:	add	r0, pc, r0
    c768:	bx	lr
    c76c:	ldr	r0, [pc, #2104]	; cfac <bt_compidtostr@@Base+0x5d68>
    c770:	add	r0, pc, r0
    c774:	bx	lr
    c778:	ldr	r0, [pc, #2096]	; cfb0 <bt_compidtostr@@Base+0x5d6c>
    c77c:	add	r0, pc, r0
    c780:	bx	lr
    c784:	ldr	r0, [pc, #2088]	; cfb4 <bt_compidtostr@@Base+0x5d70>
    c788:	add	r0, pc, r0
    c78c:	bx	lr
    c790:	ldr	r0, [pc, #2080]	; cfb8 <bt_compidtostr@@Base+0x5d74>
    c794:	add	r0, pc, r0
    c798:	bx	lr
    c79c:	ldr	r0, [pc, #2072]	; cfbc <bt_compidtostr@@Base+0x5d78>
    c7a0:	add	r0, pc, r0
    c7a4:	bx	lr
    c7a8:	ldr	r0, [pc, #2064]	; cfc0 <bt_compidtostr@@Base+0x5d7c>
    c7ac:	add	r0, pc, r0
    c7b0:	bx	lr
    c7b4:	ldr	r0, [pc, #2056]	; cfc4 <bt_compidtostr@@Base+0x5d80>
    c7b8:	add	r0, pc, r0
    c7bc:	bx	lr
    c7c0:	ldr	r0, [pc, #2048]	; cfc8 <bt_compidtostr@@Base+0x5d84>
    c7c4:	add	r0, pc, r0
    c7c8:	bx	lr
    c7cc:	ldr	r0, [pc, #2040]	; cfcc <bt_compidtostr@@Base+0x5d88>
    c7d0:	add	r0, pc, r0
    c7d4:	bx	lr
    c7d8:	ldr	r0, [pc, #2032]	; cfd0 <bt_compidtostr@@Base+0x5d8c>
    c7dc:	add	r0, pc, r0
    c7e0:	bx	lr
    c7e4:	ldr	r0, [pc, #2024]	; cfd4 <bt_compidtostr@@Base+0x5d90>
    c7e8:	add	r0, pc, r0
    c7ec:	bx	lr
    c7f0:	ldr	r0, [pc, #2016]	; cfd8 <bt_compidtostr@@Base+0x5d94>
    c7f4:	add	r0, pc, r0
    c7f8:	bx	lr
    c7fc:	ldr	r0, [pc, #2008]	; cfdc <bt_compidtostr@@Base+0x5d98>
    c800:	add	r0, pc, r0
    c804:	bx	lr
    c808:	ldr	r0, [pc, #2000]	; cfe0 <bt_compidtostr@@Base+0x5d9c>
    c80c:	add	r0, pc, r0
    c810:	bx	lr
    c814:	ldr	r0, [pc, #1992]	; cfe4 <bt_compidtostr@@Base+0x5da0>
    c818:	add	r0, pc, r0
    c81c:	bx	lr
    c820:	ldr	r0, [pc, #1984]	; cfe8 <bt_compidtostr@@Base+0x5da4>
    c824:	add	r0, pc, r0
    c828:	bx	lr
    c82c:	ldr	r0, [pc, #1976]	; cfec <bt_compidtostr@@Base+0x5da8>
    c830:	add	r0, pc, r0
    c834:	bx	lr
    c838:	ldr	r0, [pc, #1968]	; cff0 <bt_compidtostr@@Base+0x5dac>
    c83c:	add	r0, pc, r0
    c840:	bx	lr
    c844:	ldr	r0, [pc, #1960]	; cff4 <bt_compidtostr@@Base+0x5db0>
    c848:	add	r0, pc, r0
    c84c:	bx	lr
    c850:	ldr	r0, [pc, #1952]	; cff8 <bt_compidtostr@@Base+0x5db4>
    c854:	add	r0, pc, r0
    c858:	bx	lr
    c85c:	ldr	r0, [pc, #1944]	; cffc <bt_compidtostr@@Base+0x5db8>
    c860:	add	r0, pc, r0
    c864:	bx	lr
    c868:	ldr	r0, [pc, #1936]	; d000 <bt_compidtostr@@Base+0x5dbc>
    c86c:	add	r0, pc, r0
    c870:	bx	lr
    c874:	ldr	r0, [pc, #1928]	; d004 <bt_compidtostr@@Base+0x5dc0>
    c878:	add	r0, pc, r0
    c87c:	bx	lr
    c880:	ldr	r0, [pc, #1920]	; d008 <bt_compidtostr@@Base+0x5dc4>
    c884:	add	r0, pc, r0
    c888:	bx	lr
    c88c:	ldr	r0, [pc, #1912]	; d00c <bt_compidtostr@@Base+0x5dc8>
    c890:	add	r0, pc, r0
    c894:	bx	lr
    c898:	ldr	r0, [pc, #1904]	; d010 <bt_compidtostr@@Base+0x5dcc>
    c89c:	add	r0, pc, r0
    c8a0:	bx	lr
    c8a4:	ldr	r0, [pc, #1896]	; d014 <bt_compidtostr@@Base+0x5dd0>
    c8a8:	add	r0, pc, r0
    c8ac:	bx	lr
    c8b0:	ldr	r0, [pc, #1888]	; d018 <bt_compidtostr@@Base+0x5dd4>
    c8b4:	add	r0, pc, r0
    c8b8:	bx	lr
    c8bc:	ldr	r0, [pc, #1880]	; d01c <bt_compidtostr@@Base+0x5dd8>
    c8c0:	add	r0, pc, r0
    c8c4:	bx	lr
    c8c8:	ldr	r0, [pc, #1872]	; d020 <bt_compidtostr@@Base+0x5ddc>
    c8cc:	add	r0, pc, r0
    c8d0:	bx	lr
    c8d4:	ldr	r0, [pc, #1864]	; d024 <bt_compidtostr@@Base+0x5de0>
    c8d8:	add	r0, pc, r0
    c8dc:	bx	lr
    c8e0:	ldr	r0, [pc, #1856]	; d028 <bt_compidtostr@@Base+0x5de4>
    c8e4:	add	r0, pc, r0
    c8e8:	bx	lr
    c8ec:	ldr	r0, [pc, #1848]	; d02c <bt_compidtostr@@Base+0x5de8>
    c8f0:	add	r0, pc, r0
    c8f4:	bx	lr
    c8f8:	ldr	r0, [pc, #1840]	; d030 <bt_compidtostr@@Base+0x5dec>
    c8fc:	add	r0, pc, r0
    c900:	bx	lr
    c904:	ldr	r0, [pc, #1832]	; d034 <bt_compidtostr@@Base+0x5df0>
    c908:	add	r0, pc, r0
    c90c:	bx	lr
    c910:	ldr	r0, [pc, #1824]	; d038 <bt_compidtostr@@Base+0x5df4>
    c914:	add	r0, pc, r0
    c918:	bx	lr
    c91c:	ldr	r0, [pc, #1816]	; d03c <bt_compidtostr@@Base+0x5df8>
    c920:	add	r0, pc, r0
    c924:	bx	lr
    c928:	ldr	r0, [pc, #1808]	; d040 <bt_compidtostr@@Base+0x5dfc>
    c92c:	add	r0, pc, r0
    c930:	bx	lr
    c934:	ldr	r0, [pc, #1800]	; d044 <bt_compidtostr@@Base+0x5e00>
    c938:	add	r0, pc, r0
    c93c:	bx	lr
    c940:	ldr	r0, [pc, #1792]	; d048 <bt_compidtostr@@Base+0x5e04>
    c944:	add	r0, pc, r0
    c948:	bx	lr
    c94c:	ldr	r0, [pc, #1784]	; d04c <bt_compidtostr@@Base+0x5e08>
    c950:	add	r0, pc, r0
    c954:	bx	lr
    c958:	ldr	r0, [pc, #1776]	; d050 <bt_compidtostr@@Base+0x5e0c>
    c95c:	add	r0, pc, r0
    c960:	bx	lr
    c964:	ldr	r0, [pc, #1768]	; d054 <bt_compidtostr@@Base+0x5e10>
    c968:	add	r0, pc, r0
    c96c:	bx	lr
    c970:	ldr	r0, [pc, #1760]	; d058 <bt_compidtostr@@Base+0x5e14>
    c974:	add	r0, pc, r0
    c978:	bx	lr
    c97c:	ldr	r0, [pc, #1752]	; d05c <bt_compidtostr@@Base+0x5e18>
    c980:	add	r0, pc, r0
    c984:	bx	lr
    c988:	ldr	r0, [pc, #1744]	; d060 <bt_compidtostr@@Base+0x5e1c>
    c98c:	add	r0, pc, r0
    c990:	bx	lr
    c994:	ldr	r0, [pc, #1736]	; d064 <bt_compidtostr@@Base+0x5e20>
    c998:	add	r0, pc, r0
    c99c:	bx	lr
    c9a0:	ldr	r0, [pc, #1728]	; d068 <bt_compidtostr@@Base+0x5e24>
    c9a4:	add	r0, pc, r0
    c9a8:	bx	lr
    c9ac:	ldr	r0, [pc, #1720]	; d06c <bt_compidtostr@@Base+0x5e28>
    c9b0:	add	r0, pc, r0
    c9b4:	bx	lr
    c9b8:	ldr	r0, [pc, #1712]	; d070 <bt_compidtostr@@Base+0x5e2c>
    c9bc:	add	r0, pc, r0
    c9c0:	bx	lr
    c9c4:	ldr	r0, [pc, #1704]	; d074 <bt_compidtostr@@Base+0x5e30>
    c9c8:	add	r0, pc, r0
    c9cc:	bx	lr
    c9d0:	ldr	r0, [pc, #1696]	; d078 <bt_compidtostr@@Base+0x5e34>
    c9d4:	add	r0, pc, r0
    c9d8:	bx	lr
    c9dc:	ldr	r0, [pc, #1688]	; d07c <bt_compidtostr@@Base+0x5e38>
    c9e0:	add	r0, pc, r0
    c9e4:	bx	lr
    c9e8:	ldr	r0, [pc, #1680]	; d080 <bt_compidtostr@@Base+0x5e3c>
    c9ec:	add	r0, pc, r0
    c9f0:	bx	lr
    c9f4:	ldr	r0, [pc, #1672]	; d084 <bt_compidtostr@@Base+0x5e40>
    c9f8:	add	r0, pc, r0
    c9fc:	bx	lr
    ca00:	ldr	r0, [pc, #1664]	; d088 <bt_compidtostr@@Base+0x5e44>
    ca04:	add	r0, pc, r0
    ca08:	bx	lr
    ca0c:	ldr	r0, [pc, #1656]	; d08c <bt_compidtostr@@Base+0x5e48>
    ca10:	add	r0, pc, r0
    ca14:	bx	lr
    ca18:	ldr	r0, [pc, #1648]	; d090 <bt_compidtostr@@Base+0x5e4c>
    ca1c:	add	r0, pc, r0
    ca20:	bx	lr
    ca24:	ldr	r0, [pc, #1640]	; d094 <bt_compidtostr@@Base+0x5e50>
    ca28:	add	r0, pc, r0
    ca2c:	bx	lr
    ca30:	ldr	r0, [pc, #1632]	; d098 <bt_compidtostr@@Base+0x5e54>
    ca34:	add	r0, pc, r0
    ca38:	bx	lr
    ca3c:	ldr	r0, [pc, #1624]	; d09c <bt_compidtostr@@Base+0x5e58>
    ca40:	add	r0, pc, r0
    ca44:	bx	lr
    ca48:	ldr	r0, [pc, #1616]	; d0a0 <bt_compidtostr@@Base+0x5e5c>
    ca4c:	add	r0, pc, r0
    ca50:	bx	lr
    ca54:	ldr	r0, [pc, #1608]	; d0a4 <bt_compidtostr@@Base+0x5e60>
    ca58:	add	r0, pc, r0
    ca5c:	bx	lr
    ca60:	ldr	r0, [pc, #1600]	; d0a8 <bt_compidtostr@@Base+0x5e64>
    ca64:	add	r0, pc, r0
    ca68:	bx	lr
    ca6c:	ldr	r0, [pc, #1592]	; d0ac <bt_compidtostr@@Base+0x5e68>
    ca70:	add	r0, pc, r0
    ca74:	bx	lr
    ca78:	ldr	r0, [pc, #1584]	; d0b0 <bt_compidtostr@@Base+0x5e6c>
    ca7c:	add	r0, pc, r0
    ca80:	bx	lr
    ca84:	ldr	r0, [pc, #1576]	; d0b4 <bt_compidtostr@@Base+0x5e70>
    ca88:	add	r0, pc, r0
    ca8c:	bx	lr
    ca90:	ldr	r0, [pc, #1568]	; d0b8 <bt_compidtostr@@Base+0x5e74>
    ca94:	add	r0, pc, r0
    ca98:	bx	lr
    ca9c:	ldr	r0, [pc, #1560]	; d0bc <bt_compidtostr@@Base+0x5e78>
    caa0:	add	r0, pc, r0
    caa4:	bx	lr
    caa8:	ldr	r0, [pc, #1552]	; d0c0 <bt_compidtostr@@Base+0x5e7c>
    caac:	add	r0, pc, r0
    cab0:	bx	lr
    cab4:	ldr	r0, [pc, #1544]	; d0c4 <bt_compidtostr@@Base+0x5e80>
    cab8:	add	r0, pc, r0
    cabc:	bx	lr
    cac0:	ldr	r0, [pc, #1536]	; d0c8 <bt_compidtostr@@Base+0x5e84>
    cac4:	add	r0, pc, r0
    cac8:	bx	lr
    cacc:	ldr	r0, [pc, #1528]	; d0cc <bt_compidtostr@@Base+0x5e88>
    cad0:	add	r0, pc, r0
    cad4:	bx	lr
    cad8:	ldr	r0, [pc, #1520]	; d0d0 <bt_compidtostr@@Base+0x5e8c>
    cadc:	add	r0, pc, r0
    cae0:	bx	lr
    cae4:	ldr	r0, [pc, #1512]	; d0d4 <bt_compidtostr@@Base+0x5e90>
    cae8:	add	r0, pc, r0
    caec:	bx	lr
    caf0:	ldr	r0, [pc, #1504]	; d0d8 <bt_compidtostr@@Base+0x5e94>
    caf4:	add	r0, pc, r0
    caf8:	bx	lr
    cafc:	ldr	r0, [pc, #1496]	; d0dc <bt_compidtostr@@Base+0x5e98>
    cb00:	add	r0, pc, r0
    cb04:	bx	lr
    cb08:	ldr	r0, [pc, #1488]	; d0e0 <bt_compidtostr@@Base+0x5e9c>
    cb0c:	add	r0, pc, r0
    cb10:	bx	lr
    cb14:	ldr	r0, [pc, #1480]	; d0e4 <bt_compidtostr@@Base+0x5ea0>
    cb18:	add	r0, pc, r0
    cb1c:	bx	lr
    cb20:	ldr	r0, [pc, #1472]	; d0e8 <bt_compidtostr@@Base+0x5ea4>
    cb24:	add	r0, pc, r0
    cb28:	bx	lr
    cb2c:	ldr	r0, [pc, #1464]	; d0ec <bt_compidtostr@@Base+0x5ea8>
    cb30:	add	r0, pc, r0
    cb34:	bx	lr
    cb38:	ldr	r0, [pc, #1456]	; d0f0 <bt_compidtostr@@Base+0x5eac>
    cb3c:	add	r0, pc, r0
    cb40:	bx	lr
    cb44:	ldr	r0, [pc, #1448]	; d0f4 <bt_compidtostr@@Base+0x5eb0>
    cb48:	add	r0, pc, r0
    cb4c:	bx	lr
    cb50:	ldr	r0, [pc, #1440]	; d0f8 <bt_compidtostr@@Base+0x5eb4>
    cb54:	add	r0, pc, r0
    cb58:	bx	lr
    cb5c:	ldr	r0, [pc, #1432]	; d0fc <bt_compidtostr@@Base+0x5eb8>
    cb60:	add	r0, pc, r0
    cb64:	bx	lr
    cb68:	ldr	r0, [pc, #1424]	; d100 <bt_compidtostr@@Base+0x5ebc>
    cb6c:	add	r0, pc, r0
    cb70:	bx	lr
    cb74:	ldr	r0, [pc, #1416]	; d104 <bt_compidtostr@@Base+0x5ec0>
    cb78:	add	r0, pc, r0
    cb7c:	bx	lr
    cb80:	ldr	r0, [pc, #1408]	; d108 <bt_compidtostr@@Base+0x5ec4>
    cb84:	add	r0, pc, r0
    cb88:	bx	lr
    cb8c:	ldr	r0, [pc, #1400]	; d10c <bt_compidtostr@@Base+0x5ec8>
    cb90:	add	r0, pc, r0
    cb94:	bx	lr
    cb98:	ldr	r0, [pc, #1392]	; d110 <bt_compidtostr@@Base+0x5ecc>
    cb9c:	add	r0, pc, r0
    cba0:	bx	lr
    cba4:	ldr	r0, [pc, #1384]	; d114 <bt_compidtostr@@Base+0x5ed0>
    cba8:	add	r0, pc, r0
    cbac:	bx	lr
    cbb0:	ldr	r0, [pc, #1376]	; d118 <bt_compidtostr@@Base+0x5ed4>
    cbb4:	add	r0, pc, r0
    cbb8:	bx	lr
    cbbc:	ldr	r0, [pc, #1368]	; d11c <bt_compidtostr@@Base+0x5ed8>
    cbc0:	add	r0, pc, r0
    cbc4:	bx	lr
    cbc8:	ldr	r0, [pc, #1360]	; d120 <bt_compidtostr@@Base+0x5edc>
    cbcc:	add	r0, pc, r0
    cbd0:	bx	lr
    cbd4:	ldr	r0, [pc, #1352]	; d124 <bt_compidtostr@@Base+0x5ee0>
    cbd8:	add	r0, pc, r0
    cbdc:	bx	lr
    cbe0:	ldr	r0, [pc, #1344]	; d128 <bt_compidtostr@@Base+0x5ee4>
    cbe4:	add	r0, pc, r0
    cbe8:	bx	lr
    cbec:	ldr	r0, [pc, #1336]	; d12c <bt_compidtostr@@Base+0x5ee8>
    cbf0:	add	r0, pc, r0
    cbf4:	bx	lr
    cbf8:	ldr	r0, [pc, #1328]	; d130 <bt_compidtostr@@Base+0x5eec>
    cbfc:	add	r0, pc, r0
    cc00:	bx	lr
    cc04:	ldr	r0, [pc, #1320]	; d134 <bt_compidtostr@@Base+0x5ef0>
    cc08:	add	r0, pc, r0
    cc0c:	bx	lr
    cc10:	ldr	r0, [pc, #1312]	; d138 <bt_compidtostr@@Base+0x5ef4>
    cc14:	add	r0, pc, r0
    cc18:	bx	lr
    cc1c:	ldr	r0, [pc, #1304]	; d13c <bt_compidtostr@@Base+0x5ef8>
    cc20:	add	r0, pc, r0
    cc24:	bx	lr
    cc28:	ldr	r0, [pc, #1296]	; d140 <bt_compidtostr@@Base+0x5efc>
    cc2c:	add	r0, pc, r0
    cc30:	bx	lr
    cc34:	ldr	r0, [pc, #1288]	; d144 <bt_compidtostr@@Base+0x5f00>
    cc38:	add	r0, pc, r0
    cc3c:	bx	lr
    cc40:	ldr	r0, [pc, #1280]	; d148 <bt_compidtostr@@Base+0x5f04>
    cc44:	add	r0, pc, r0
    cc48:	bx	lr
    cc4c:	ldr	r0, [pc, #1272]	; d14c <bt_compidtostr@@Base+0x5f08>
    cc50:	add	r0, pc, r0
    cc54:	bx	lr
    cc58:	ldr	r0, [pc, #1264]	; d150 <bt_compidtostr@@Base+0x5f0c>
    cc5c:	add	r0, pc, r0
    cc60:	bx	lr
    cc64:	ldr	r0, [pc, #1256]	; d154 <bt_compidtostr@@Base+0x5f10>
    cc68:	add	r0, pc, r0
    cc6c:	bx	lr
    cc70:	ldr	r0, [pc, #1248]	; d158 <bt_compidtostr@@Base+0x5f14>
    cc74:	add	r0, pc, r0
    cc78:	bx	lr
    cc7c:	ldr	r0, [pc, #1240]	; d15c <bt_compidtostr@@Base+0x5f18>
    cc80:	add	r0, pc, r0
    cc84:	bx	lr
    cc88:	ldr	r0, [pc, #1232]	; d160 <bt_compidtostr@@Base+0x5f1c>
    cc8c:	add	r0, pc, r0
    cc90:	bx	lr
    cc94:	ldr	r0, [pc, #1224]	; d164 <bt_compidtostr@@Base+0x5f20>
    cc98:	add	r0, pc, r0
    cc9c:	bx	lr
    cca0:	ldr	r0, [pc, #1216]	; d168 <bt_compidtostr@@Base+0x5f24>
    cca4:	add	r0, pc, r0
    cca8:	bx	lr
    ccac:	ldr	r0, [pc, #1208]	; d16c <bt_compidtostr@@Base+0x5f28>
    ccb0:	add	r0, pc, r0
    ccb4:	bx	lr
    ccb8:	ldr	r0, [pc, #1200]	; d170 <bt_compidtostr@@Base+0x5f2c>
    ccbc:	add	r0, pc, r0
    ccc0:	bx	lr
    ccc4:	ldr	r0, [pc, #1192]	; d174 <bt_compidtostr@@Base+0x5f30>
    ccc8:	add	r0, pc, r0
    cccc:	bx	lr
    ccd0:	ldr	r0, [pc, #1184]	; d178 <bt_compidtostr@@Base+0x5f34>
    ccd4:	add	r0, pc, r0
    ccd8:	bx	lr
    ccdc:	ldr	r0, [pc, #1176]	; d17c <bt_compidtostr@@Base+0x5f38>
    cce0:	add	r0, pc, r0
    cce4:	bx	lr
    cce8:	ldr	r0, [pc, #1168]	; d180 <bt_compidtostr@@Base+0x5f3c>
    ccec:	add	r0, pc, r0
    ccf0:	bx	lr
    ccf4:	ldr	r0, [pc, #1160]	; d184 <bt_compidtostr@@Base+0x5f40>
    ccf8:	add	r0, pc, r0
    ccfc:	bx	lr
    cd00:	ldr	r0, [pc, #1152]	; d188 <bt_compidtostr@@Base+0x5f44>
    cd04:	add	r0, pc, r0
    cd08:	bx	lr
    cd0c:	ldr	r0, [pc, #1144]	; d18c <bt_compidtostr@@Base+0x5f48>
    cd10:	add	r0, pc, r0
    cd14:	bx	lr
    cd18:	ldr	r0, [pc, #1136]	; d190 <bt_compidtostr@@Base+0x5f4c>
    cd1c:	add	r0, pc, r0
    cd20:	bx	lr
    cd24:	ldr	r0, [pc, #1128]	; d194 <bt_compidtostr@@Base+0x5f50>
    cd28:	add	r0, pc, r0
    cd2c:	bx	lr
    cd30:	ldr	r0, [pc, #1120]	; d198 <bt_compidtostr@@Base+0x5f54>
    cd34:	add	r0, pc, r0
    cd38:	bx	lr
    cd3c:	ldr	r0, [pc, #1112]	; d19c <bt_compidtostr@@Base+0x5f58>
    cd40:	add	r0, pc, r0
    cd44:	bx	lr
    cd48:	ldr	r0, [pc, #1104]	; d1a0 <bt_compidtostr@@Base+0x5f5c>
    cd4c:	add	r0, pc, r0
    cd50:	bx	lr
    cd54:	ldr	r0, [pc, #1096]	; d1a4 <bt_compidtostr@@Base+0x5f60>
    cd58:	add	r0, pc, r0
    cd5c:	bx	lr
    cd60:	ldr	r0, [pc, #1088]	; d1a8 <bt_compidtostr@@Base+0x5f64>
    cd64:	add	r0, pc, r0
    cd68:	bx	lr
    cd6c:	ldr	r0, [pc, #1080]	; d1ac <bt_compidtostr@@Base+0x5f68>
    cd70:	add	r0, pc, r0
    cd74:	bx	lr
    cd78:	ldr	r0, [pc, #1072]	; d1b0 <bt_compidtostr@@Base+0x5f6c>
    cd7c:	add	r0, pc, r0
    cd80:	bx	lr
    cd84:	ldr	r0, [pc, #1064]	; d1b4 <bt_compidtostr@@Base+0x5f70>
    cd88:	add	r0, pc, r0
    cd8c:	bx	lr
    cd90:	ldr	r0, [pc, #1056]	; d1b8 <bt_compidtostr@@Base+0x5f74>
    cd94:	add	r0, pc, r0
    cd98:	bx	lr
    cd9c:	ldr	r0, [pc, #1048]	; d1bc <bt_compidtostr@@Base+0x5f78>
    cda0:	add	r0, pc, r0
    cda4:	bx	lr
    cda8:	ldr	r0, [pc, #1040]	; d1c0 <bt_compidtostr@@Base+0x5f7c>
    cdac:	add	r0, pc, r0
    cdb0:	bx	lr
    cdb4:	ldr	r0, [pc, #1032]	; d1c4 <bt_compidtostr@@Base+0x5f80>
    cdb8:	add	r0, pc, r0
    cdbc:	bx	lr
    cdc0:	ldr	r0, [pc, #1024]	; d1c8 <bt_compidtostr@@Base+0x5f84>
    cdc4:	add	r0, pc, r0
    cdc8:	bx	lr
    cdcc:	ldr	r0, [pc, #1016]	; d1cc <bt_compidtostr@@Base+0x5f88>
    cdd0:	add	r0, pc, r0
    cdd4:	bx	lr
    cdd8:	ldr	r0, [pc, #1008]	; d1d0 <bt_compidtostr@@Base+0x5f8c>
    cddc:	add	r0, pc, r0
    cde0:	bx	lr
    cde4:	ldr	r0, [pc, #1000]	; d1d4 <bt_compidtostr@@Base+0x5f90>
    cde8:	add	r0, pc, r0
    cdec:	bx	lr
    cdf0:	ldr	r0, [pc, #992]	; d1d8 <bt_compidtostr@@Base+0x5f94>
    cdf4:	add	r0, pc, r0
    cdf8:	bx	lr
    cdfc:	ldr	r0, [pc, #984]	; d1dc <bt_compidtostr@@Base+0x5f98>
    ce00:	add	r0, pc, r0
    ce04:	bx	lr
    ce08:	ldr	r0, [pc, #976]	; d1e0 <bt_compidtostr@@Base+0x5f9c>
    ce0c:	add	r0, pc, r0
    ce10:	bx	lr
    ce14:	ldr	r0, [pc, #968]	; d1e4 <bt_compidtostr@@Base+0x5fa0>
    ce18:	add	r0, pc, r0
    ce1c:	bx	lr
    ce20:	ldr	r0, [pc, #960]	; d1e8 <bt_compidtostr@@Base+0x5fa4>
    ce24:	add	r0, pc, r0
    ce28:	bx	lr
    ce2c:	ldr	r0, [pc, #952]	; d1ec <bt_compidtostr@@Base+0x5fa8>
    ce30:	add	r0, pc, r0
    ce34:	bx	lr
    ce38:	ldr	r0, [pc, #944]	; d1f0 <bt_compidtostr@@Base+0x5fac>
    ce3c:	add	r0, pc, r0
    ce40:	bx	lr
    ce44:	ldr	r0, [pc, #936]	; d1f4 <bt_compidtostr@@Base+0x5fb0>
    ce48:	add	r0, pc, r0
    ce4c:	bx	lr
    ce50:	ldr	r0, [pc, #928]	; d1f8 <bt_compidtostr@@Base+0x5fb4>
    ce54:	add	r0, pc, r0
    ce58:	bx	lr
    ce5c:	ldr	r0, [pc, #920]	; d1fc <bt_compidtostr@@Base+0x5fb8>
    ce60:	add	r0, pc, r0
    ce64:	bx	lr
    ce68:	ldr	r0, [pc, #912]	; d200 <bt_compidtostr@@Base+0x5fbc>
    ce6c:	add	r0, pc, r0
    ce70:	bx	lr
    ce74:	ldr	r0, [pc, #904]	; d204 <bt_compidtostr@@Base+0x5fc0>
    ce78:	add	r0, pc, r0
    ce7c:	bx	lr
    ce80:	ldr	r0, [pc, #896]	; d208 <bt_compidtostr@@Base+0x5fc4>
    ce84:	add	r0, pc, r0
    ce88:	bx	lr
    ce8c:	ldr	r0, [pc, #888]	; d20c <bt_compidtostr@@Base+0x5fc8>
    ce90:	add	r0, pc, r0
    ce94:	bx	lr
    ce98:	ldr	r0, [pc, #880]	; d210 <bt_compidtostr@@Base+0x5fcc>
    ce9c:	add	r0, pc, r0
    cea0:	bx	lr
    cea4:	ldr	r0, [pc, #872]	; d214 <bt_compidtostr@@Base+0x5fd0>
    cea8:	add	r0, pc, r0
    ceac:	bx	lr
    ceb0:	ldr	r0, [pc, #864]	; d218 <bt_compidtostr@@Base+0x5fd4>
    ceb4:	add	r0, pc, r0
    ceb8:	bx	lr
    cebc:	ldr	r0, [pc, #856]	; d21c <bt_compidtostr@@Base+0x5fd8>
    cec0:	add	r0, pc, r0
    cec4:	bx	lr
    cec8:	ldr	r0, [pc, #848]	; d220 <bt_compidtostr@@Base+0x5fdc>
    cecc:	add	r0, pc, r0
    ced0:	bx	lr
    ced4:	ldr	r0, [pc, #840]	; d224 <bt_compidtostr@@Base+0x5fe0>
    ced8:	add	r0, pc, r0
    cedc:	bx	lr
    cee0:	ldr	r0, [pc, #832]	; d228 <bt_compidtostr@@Base+0x5fe4>
    cee4:	add	r0, pc, r0
    cee8:	bx	lr
    ceec:	ldr	r0, [pc, #824]	; d22c <bt_compidtostr@@Base+0x5fe8>
    cef0:	add	r0, pc, r0
    cef4:	bx	lr
    cef8:	ldr	r0, [pc, #816]	; d230 <bt_compidtostr@@Base+0x5fec>
    cefc:	add	r0, pc, r0
    cf00:	bx	lr
    cf04:	andeq	r8, r0, ip, ror #31
    cf08:	andeq	r9, r0, r2, lsr #2
    cf0c:	andeq	r9, r0, sl, lsl #1
    cf10:	andeq	r9, r0, r9, lsr #32
    cf14:	strdeq	r8, [r0], -sl
    cf18:	andeq	r9, r0, r1
    cf1c:	andeq	r9, r0, r5, lsr r0
    cf20:	andeq	r9, r0, fp, lsr r0
    cf24:	andeq	r9, r0, r8, ror r0
    cf28:	andeq	r9, r0, pc, asr #32
    cf2c:	andeq	r9, r0, pc, asr #32
    cf30:	andeq	r9, r0, pc, ror r0
    cf34:	andeq	r9, r0, r1, lsl #1
    cf38:	andeq	r9, r0, r3, ror #2
    cf3c:	andeq	r9, r0, pc, ror #1
    cf40:	andeq	r9, r0, sl, lsr #1
    cf44:	andeq	r9, r0, sl, asr #1
    cf48:	andeq	r9, r0, ip, lsl #2
    cf4c:	andeq	r9, r0, r0, lsl r1
    cf50:	andeq	r9, r0, r6, asr r1
    cf54:	andeq	r9, r0, r3, lsr r1
    cf58:	andeq	r9, r0, r4, lsr r1
    cf5c:	andeq	r9, r0, r0, ror #2
    cf60:	andeq	r9, r0, fp, lsr r1
    cf64:	andeq	r9, r0, r6, asr r1
    cf68:	andeq	r9, r0, r5, asr r1
    cf6c:	andeq	r9, r0, r0, ror sl
    cf70:	andeq	r9, r0, r2, lsr #11
    cf74:	andeq	r9, r0, r7, lsl #7
    cf78:	andeq	r9, r0, r1, ror #4
    cf7c:	andeq	r9, r0, r8, lsr #3
    cf80:	andeq	r9, r0, r6, asr r1
    cf84:	andeq	r9, r0, r0, lsr r1
    cf88:	andeq	r9, r0, r3, lsr r1
    cf8c:	andeq	r9, r0, r2, asr r1
    cf90:	andeq	r9, r0, r0, asr r1
    cf94:			; <UNDEFINED> instruction: 0x000091b5
    cf98:	andeq	r9, r0, r5, ror r1
    cf9c:	andeq	r9, r0, r2, lsl #3
    cfa0:	andeq	r9, r0, r2, asr #3
    cfa4:	andeq	r9, r0, r9, asr #3
    cfa8:	andeq	r9, r0, r0, asr r2
    cfac:	strdeq	r9, [r0], -sl
    cfb0:	ldrdeq	r9, [r0], -r5
    cfb4:	ldrdeq	r9, [r0], -r6
    cfb8:	andeq	r9, r0, r2, lsl #4
    cfbc:	andeq	r9, r0, r0, lsl #4
    cfc0:	andeq	r9, r0, r2, ror #4
    cfc4:	andeq	r9, r0, lr, lsl r2
    cfc8:	andeq	r9, r0, r3, lsr #4
    cfcc:	andeq	r9, r0, sp, asr r2
    cfd0:	andeq	r9, r0, sp, asr r2
    cfd4:	andeq	r9, r0, fp, asr #6
    cfd8:	andeq	r9, r0, r4, ror #5
    cfdc:	andeq	r9, r0, r7, lsl #5
    cfe0:	andeq	r9, r0, sp, asr r2
    cfe4:	andeq	r9, r0, r5, ror #4
    cfe8:	andeq	r9, r0, r4, lsl #5
    cfec:	muleq	r0, r2, r2
    cff0:	andeq	r9, r0, r9, asr #5
    cff4:	andeq	r9, r0, r8, lsr #5
    cff8:	andeq	r9, r0, sl, lsr #5
    cffc:	muleq	r0, pc, r6	; <UNPREDICTABLE>
    d000:			; <UNDEFINED> instruction: 0x000092b6
    d004:	andeq	r9, r0, r8, asr r3
    d008:	strdeq	r9, [r0], -r3
    d00c:	andeq	r9, r0, r5, asr #5
    d010:	ldrdeq	r9, [r0], -r0
    d014:	strdeq	r9, [r0], -fp
    d018:	andeq	r9, r0, r8, lsl #6
    d01c:	andeq	r9, r0, r6, ror #6
    d020:	andeq	r9, r0, ip, lsr #6
    d024:	andeq	r9, r0, r2, lsr r3
    d028:	andeq	r9, r0, sp, asr r3
    d02c:	andeq	r9, r0, r9, asr #6
    d030:	andeq	r9, r0, sp, asr #6
    d034:	andeq	r9, r0, r8, asr #6
    d038:			; <UNDEFINED> instruction: 0x000095b7
    d03c:	muleq	r0, r5, r4
    d040:	andeq	r9, r0, r9, ror #7
    d044:	andeq	r9, r0, pc, ror r3
    d048:	andeq	r9, r0, r9, asr #6
    d04c:	andeq	r9, r0, sp, asr #6
    d050:	andeq	r9, r0, sp, ror r3
    d054:	muleq	r0, r4, r3
    d058:	strdeq	r9, [r0], -r2
    d05c:			; <UNDEFINED> instruction: 0x000093bf
    d060:	andeq	r9, r0, r9, asr #7
    d064:	strdeq	r9, [r0], -r2
    d068:	andeq	r9, r0, r5, lsl #8
    d06c:	andeq	r9, r0, r3, ror r4
    d070:	andeq	r9, r0, r9, lsr #8
    d074:	andeq	r9, r0, r3, lsl #8
    d078:	andeq	r9, r0, r9, lsl #8
    d07c:	andeq	r9, r0, r7, lsr #8
    d080:	andeq	r9, r0, ip, lsr #8
    d084:	muleq	r0, r3, r4
    d088:	andeq	r9, r0, r9, asr #8
    d08c:	andeq	r9, r0, r7, ror #8
    d090:	andeq	r9, r0, r7, lsl #9
    d094:	andeq	r9, r0, ip, lsl #9
    d098:	andeq	r9, r0, r5, lsr #11
    d09c:	strdeq	r9, [r0], -r6
    d0a0:			; <UNDEFINED> instruction: 0x000094b2
    d0a4:	andeq	r9, r0, sl, lsl #9
    d0a8:	andeq	r9, r0, lr, lsl #9
    d0ac:	andeq	r9, r0, r7, lsr #9
    d0b0:	andeq	r9, r0, ip, lsr #9
    d0b4:	strdeq	r9, [r0], -sl
    d0b8:			; <UNDEFINED> instruction: 0x000094be
    d0bc:	ldrdeq	r9, [r0], -r9	; <UNPREDICTABLE>
    d0c0:	andeq	r9, r0, r3, lsl r5
    d0c4:	andeq	r9, r0, pc, lsl #10
    d0c8:	andeq	r9, r0, r8, lsr #11
    d0cc:	andeq	r9, r0, sl, asr #10
    d0d0:	andeq	r9, r0, r3, lsr #10
    d0d4:	andeq	r9, r0, r6, lsr #10
    d0d8:	andeq	r9, r0, sp, asr #10
    d0dc:	andeq	r9, r0, r8, asr r5
    d0e0:	andeq	r9, r0, r4, asr #11
    d0e4:	muleq	r0, r9, r5
    d0e8:	muleq	r0, sl, r5
    d0ec:	andeq	r9, r0, fp, asr #11
    d0f0:	andeq	r9, r0, r9, lsr #11
    d0f4:	andeq	r9, r0, r7, asr #11
    d0f8:	andeq	r9, r0, r0, asr #11
    d0fc:	andeq	r9, r0, pc, ror sl
    d100:	andeq	r9, r0, r3, ror #15
    d104:	andeq	r9, r0, r0, lsr #13
    d108:	andeq	r9, r0, r0, lsl r6
    d10c:	andeq	r9, r0, r7, asr #11
    d110:	muleq	r0, pc, r5	; <UNPREDICTABLE>
    d114:	muleq	r0, pc, r5	; <UNPREDICTABLE>
    d118:			; <UNDEFINED> instruction: 0x000095b6
    d11c:			; <UNDEFINED> instruction: 0x000095b9
    d120:	strdeq	r9, [r0], -sp
    d124:	ldrdeq	r9, [r0], -r0
    d128:	ldrdeq	r9, [r0], -r4
    d12c:	strdeq	r9, [r0], -r0
    d130:	andeq	r9, r0, sl, lsl #12
    d134:			; <UNDEFINED> instruction: 0x000096ba
    d138:	andeq	r9, r0, sp, asr r6
    d13c:	andeq	r9, r0, sl, lsr #12
    d140:	andeq	r9, r0, r0, lsr r6
    d144:	andeq	r9, r0, sp, asr r6
    d148:	andeq	r9, r0, pc, ror #12
    d14c:			; <UNDEFINED> instruction: 0x000096bb
    d150:	muleq	r0, r8, r6
    d154:	muleq	r0, r6, r6
    d158:			; <UNDEFINED> instruction: 0x000096b5
    d15c:	andeq	r9, r0, r4, asr #13
    d160:	strdeq	r9, [r0], -lr
    d164:	andeq	r9, r0, r0, ror #14
    d168:	andeq	r9, r0, r9, ror #13
    d16c:			; <UNDEFINED> instruction: 0x000096b1
    d170:	andeq	r9, r0, r2, asr #13
    d174:	strdeq	r9, [r0], -pc	; <UNPREDICTABLE>
    d178:	andeq	r9, r0, r2, lsl r7
    d17c:	andeq	r9, r0, r7, asr #14
    d180:	andeq	r9, r0, r0, lsr #14
    d184:	andeq	r9, r0, r0, lsr #14
    d188:	andeq	r9, r0, r4, ror #14
    d18c:	andeq	r9, r0, sp, ror #14
    d190:	andeq	r9, r0, r5, lsl #16
    d194:	andeq	r9, r0, r6, lsr #15
    d198:	andeq	r9, r0, r3, ror r7
    d19c:	andeq	r9, r0, ip, ror r7
    d1a0:	andeq	r9, r0, r8, lsr #15
    d1a4:			; <UNDEFINED> instruction: 0x000097b4
    d1a8:	andeq	r9, r0, r1, lsl r8
    d1ac:	ldrdeq	r9, [r0], -r1
    d1b0:	andeq	r9, r0, r5, ror #15
    d1b4:	andeq	r9, r0, ip, lsl r8
    d1b8:	strdeq	r9, [r0], -r1
    d1bc:	andeq	r9, r0, pc, lsl #16
    d1c0:	andeq	r9, r0, fp, lsl r8
    d1c4:	andeq	r9, r0, pc, ror sl
    d1c8:	andeq	r9, r0, r2, lsr #18
    d1cc:	muleq	r0, fp, r8
    d1d0:	andeq	r9, r0, r6, lsr r8
    d1d4:	andeq	r9, r0, r1, lsl r8
    d1d8:	andeq	r9, r0, r1, lsl r8
    d1dc:	andeq	r9, r0, r6, asr #16
    d1e0:	andeq	r9, r0, r9, asr #16
    d1e4:	andeq	r9, r0, lr, lsl #17
    d1e8:	andeq	r9, r0, r1, ror #16
    d1ec:	andeq	r9, r0, r5, ror #16
    d1f0:	andeq	r9, r0, r6, lsl #17
    d1f4:	andeq	r9, r0, r4, lsl #17
    d1f8:	andeq	r9, r0, r1, lsr r9
    d1fc:	strdeq	r9, [r0], -r5
    d200:	andeq	r9, r0, r4, lsr #17
    d204:	andeq	r9, r0, r1, asr #17
    d208:	andeq	r9, r0, lr, ror #17
    d20c:	andeq	r9, r0, lr, ror #17
    d210:	andeq	r9, r0, pc, asr r9
    d214:	andeq	r9, r0, r8, lsl #18
    d218:	andeq	r9, r0, r0, lsr #18
    d21c:	andeq	r9, r0, r3, asr r9
    d220:	andeq	r9, r0, r6, asr r9
    d224:	andeq	r9, r0, sp, ror sl
    d228:	ldrdeq	r9, [r0], -r5
    d22c:	andeq	r9, r0, sl, lsl #19
    d230:	andeq	r9, r0, lr, asr r9
    d234:	ldrdeq	r9, [r0], -r4
    d238:	andeq	r9, r0, r0, lsl #12
    d23c:	andeq	r9, r0, r9, lsl #12
    d240:	andeq	r9, r0, r8, asr r6
    d244:	andeq	r9, r0, r1, lsr #12
    d248:	andeq	r9, r0, r4, lsr #12
    d24c:	andeq	r9, r0, sl, asr r6
    d250:	andeq	r9, r0, sp, asr r6
    d254:	andeq	r9, r0, r6, lsl r7
    d258:	andeq	r9, r0, lr, lsr #13
    d25c:	andeq	r9, r0, r5, ror #12
    d260:	andeq	r9, r0, r4, ror r6
    d264:			; <UNDEFINED> instruction: 0x000096bd
    d268:			; <UNDEFINED> instruction: 0x000096bf
    d26c:	strdeq	r9, [r0], -r9	; <UNPREDICTABLE>
    d270:	ldrdeq	r9, [r0], -r9	; <UNPREDICTABLE>
    d274:	ldrdeq	r9, [r0], -ip
    d278:	andeq	r9, r0, pc, ror #13
    d27c:	ldrdeq	r9, [r0], -r4
    d280:	andeq	r9, r0, r9, ror #13
    d284:	strdeq	r9, [r0], -ip
    d288:	ldr	r0, [pc, #-92]	; d234 <bt_compidtostr@@Base+0x5ff0>
    d28c:	add	r0, pc, r0
    d290:	bx	lr
    d294:	ldr	r0, [pc, #-100]	; d238 <bt_compidtostr@@Base+0x5ff4>
    d298:	add	r0, pc, r0
    d29c:	bx	lr
    d2a0:	ldr	r0, [pc, #-108]	; d23c <bt_compidtostr@@Base+0x5ff8>
    d2a4:	add	r0, pc, r0
    d2a8:	bx	lr
    d2ac:	ldr	r0, [pc, #-116]	; d240 <bt_compidtostr@@Base+0x5ffc>
    d2b0:	add	r0, pc, r0
    d2b4:	bx	lr
    d2b8:	ldr	r0, [pc, #-124]	; d244 <bt_compidtostr@@Base+0x6000>
    d2bc:	add	r0, pc, r0
    d2c0:	bx	lr
    d2c4:	ldr	r0, [pc, #-132]	; d248 <bt_compidtostr@@Base+0x6004>
    d2c8:	add	r0, pc, r0
    d2cc:	bx	lr
    d2d0:	ldr	r0, [pc, #-140]	; d24c <bt_compidtostr@@Base+0x6008>
    d2d4:	add	r0, pc, r0
    d2d8:	bx	lr
    d2dc:	ldr	r0, [pc, #-148]	; d250 <bt_compidtostr@@Base+0x600c>
    d2e0:	add	r0, pc, r0
    d2e4:	bx	lr
    d2e8:	ldr	r0, [pc, #-156]	; d254 <bt_compidtostr@@Base+0x6010>
    d2ec:	add	r0, pc, r0
    d2f0:	bx	lr
    d2f4:	ldr	r0, [pc, #-164]	; d258 <bt_compidtostr@@Base+0x6014>
    d2f8:	add	r0, pc, r0
    d2fc:	bx	lr
    d300:	ldr	r0, [pc, #-172]	; d25c <bt_compidtostr@@Base+0x6018>
    d304:	add	r0, pc, r0
    d308:	bx	lr
    d30c:	ldr	r0, [pc, #-180]	; d260 <bt_compidtostr@@Base+0x601c>
    d310:	add	r0, pc, r0
    d314:	bx	lr
    d318:	ldr	r0, [pc, #-188]	; d264 <bt_compidtostr@@Base+0x6020>
    d31c:	add	r0, pc, r0
    d320:	bx	lr
    d324:	ldr	r0, [pc, #-196]	; d268 <bt_compidtostr@@Base+0x6024>
    d328:	add	r0, pc, r0
    d32c:	bx	lr
    d330:	ldr	r0, [pc, #-204]	; d26c <bt_compidtostr@@Base+0x6028>
    d334:	add	r0, pc, r0
    d338:	bx	lr
    d33c:	ldr	r0, [pc, #-212]	; d270 <bt_compidtostr@@Base+0x602c>
    d340:	add	r0, pc, r0
    d344:	bx	lr
    d348:	ldr	r0, [pc, #-220]	; d274 <bt_compidtostr@@Base+0x6030>
    d34c:	add	r0, pc, r0
    d350:	bx	lr
    d354:	ldr	r0, [pc, #-228]	; d278 <bt_compidtostr@@Base+0x6034>
    d358:	add	r0, pc, r0
    d35c:	bx	lr
    d360:	ldr	r0, [pc, #-236]	; d27c <bt_compidtostr@@Base+0x6038>
    d364:	add	r0, pc, r0
    d368:	bx	lr
    d36c:	ldr	r0, [pc, #-244]	; d280 <bt_compidtostr@@Base+0x603c>
    d370:	add	r0, pc, r0
    d374:	bx	lr
    d378:	ldr	r0, [pc, #-252]	; d284 <bt_compidtostr@@Base+0x6040>
    d37c:	add	r0, pc, r0
    d380:	bx	lr
    d384:	andeq	r0, r0, r0

0000d388 <btbb_pcap_open@@Base>:
    d388:	ldr	r3, [pc, #88]	; d3e8 <btbb_pcap_open@@Base+0x60>
    d38c:	push	{r4, lr}
    d390:	sub	sp, sp, #24
    d394:	str	r3, [sp]
    d398:	ldr	r3, [pc, #76]	; d3ec <btbb_pcap_open@@Base+0x64>
    d39c:	str	r1, [sp, #20]
    d3a0:	ldr	r1, [pc, #72]	; d3f0 <btbb_pcap_open@@Base+0x68>
    d3a4:	str	r3, [sp, #4]
    d3a8:	mov	r3, #0
    d3ac:	str	r2, [sp, #16]
    d3b0:	add	r1, pc, r1
    d3b4:	str	r3, [sp, #8]
    d3b8:	str	r3, [sp, #12]
    d3bc:	bl	2128 <fopen@plt>
    d3c0:	subs	r4, r0, #0
    d3c4:	beq	d3dc <btbb_pcap_open@@Base+0x54>
    d3c8:	mov	r3, r4
    d3cc:	mov	r2, #1
    d3d0:	mov	r1, #24
    d3d4:	mov	r0, sp
    d3d8:	bl	2278 <fwrite@plt>
    d3dc:	mov	r0, r4
    d3e0:	add	sp, sp, #24
    d3e4:	pop	{r4, pc}
    d3e8:			; <UNDEFINED> instruction: 0xa1b23c4d
    d3ec:	andeq	r0, r4, r2
    d3f0:	andeq	r9, r0, r9, ror #13

0000d3f4 <btbb_pcap_dump@@Base>:
    d3f4:	push	{r4, r5, r6, lr}
    d3f8:	mov	r5, r1
    d3fc:	mov	r4, r0
    d400:	mov	r6, r2
    d404:	mov	r3, r0
    d408:	mov	r2, #1
    d40c:	mov	r1, #16
    d410:	mov	r0, r5
    d414:	bl	2278 <fwrite@plt>
    d418:	mov	r3, r4
    d41c:	ldr	r1, [r5, #8]
    d420:	mov	r0, r6
    d424:	mov	r2, #1
    d428:	bl	2278 <fwrite@plt>
    d42c:	mov	r0, r4
    d430:	pop	{r4, r5, r6, lr}
    d434:	b	2140 <fflush@plt>

0000d438 <btbb_pcap_append_packet@@Base>:
    d438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d43c:	add	fp, sp, #32
    d440:	sub	sp, sp, #484	; 0x1e4
    d444:	cmp	r0, #0
    d448:	ldrsb	r7, [fp, #4]
    d44c:	ldrsb	r6, [fp, #8]
    d450:	ldrb	sl, [fp, #16]
    d454:	beq	d5f8 <btbb_pcap_append_packet@@Base+0x1c0>
    d458:	ldr	r1, [r0]
    d45c:	cmp	r1, #0
    d460:	beq	d5f8 <btbb_pcap_append_packet@@Base+0x1c0>
    d464:	sub	r1, fp, #484	; 0x1e4
    d468:	cmp	r6, r7
    d46c:	str	r0, [fp, #-516]	; 0xfffffdfc
    d470:	ldr	r0, [fp, #20]
    d474:	strd	r2, [r1]
    d478:	movlt	r2, #7
    d47c:	movge	r2, #3
    d480:	ldr	r3, [fp, #12]
    d484:	str	sp, [fp, #-496]	; 0xfffffe10
    d488:	cmn	r3, #1
    d48c:	movne	r3, #16
    d490:	moveq	r3, #0
    d494:	cmp	sl, #255	; 0xff
    d498:	orr	r3, r3, r2
    d49c:	movne	r2, #128	; 0x80
    d4a0:	moveq	r2, #0
    d4a4:	orr	r9, r3, r2
    d4a8:	bl	2344 <btbb_packet_get_payload_length@plt>
    d4ac:	add	r3, r0, #7
    d4b0:	mov	r4, r0
    d4b4:	ldr	r0, [fp, #20]
    d4b8:	bic	r3, r3, #7
    d4bc:	sub	sp, sp, r3
    d4c0:	mov	r1, sp
    d4c4:	bl	2110 <btbb_get_payload_packed@plt>
    d4c8:	cmp	r4, #400	; 0x190
    d4cc:	ldr	r0, [fp, #20]
    d4d0:	movcc	r5, r4
    d4d4:	movcs	r5, #400	; 0x190
    d4d8:	bl	2488 <btbb_packet_get_channel@plt>
    d4dc:	str	r0, [fp, #-500]	; 0xfffffe0c
    d4e0:	add	r8, r5, #22
    d4e4:	ldr	r0, [fp, #20]
    d4e8:	bl	217c <btbb_packet_get_ac_errors@plt>
    d4ec:	str	r0, [fp, #-504]	; 0xfffffe08
    d4f0:	ldr	r0, [fp, #20]
    d4f4:	bl	23bc <btbb_packet_get_transport@plt>
    d4f8:	str	r0, [fp, #-508]	; 0xfffffe04
    d4fc:	ldr	r0, [fp, #20]
    d500:	bl	2170 <btbb_packet_get_modulation@plt>
    d504:	str	r0, [fp, #-512]	; 0xfffffe00
    d508:	ldr	r0, [fp, #20]
    d50c:	bl	2410 <btbb_packet_get_lap@plt>
    d510:	str	r0, [fp, #-488]	; 0xfffffe18
    d514:	ldr	r0, [fp, #20]
    d518:	bl	2374 <btbb_packet_get_header_packed@plt>
    d51c:	sub	r1, fp, #484	; 0x1e4
    d520:	add	r3, pc, #216	; 0xd8
    d524:	ldrd	r2, [r3]
    d528:	str	r0, [fp, #-492]	; 0xfffffe14
    d52c:	ldrd	r0, [r1]
    d530:	bl	e6cc <lell_pcapng_close@@Base+0x24>
    d534:	sub	r1, fp, #484	; 0x1e4
    d538:	add	r3, pc, #192	; 0xc0
    d53c:	ldrd	r2, [r3]
    d540:	str	r0, [fp, #-476]	; 0xfffffe24
    d544:	ldrd	r0, [r1]
    d548:	bl	e6cc <lell_pcapng_close@@Base+0x24>
    d54c:	ldr	r3, [fp, #-500]	; 0xfffffe0c
    d550:	cmp	r4, #0
    d554:	str	r2, [fp, #-472]	; 0xfffffe28
    d558:	ldr	r2, [fp, #-508]	; 0xfffffe04
    d55c:	str	r8, [fp, #-468]	; 0xfffffe2c
    d560:	strb	r6, [fp, #-458]	; 0xfffffe36
    d564:	sub	r6, fp, #476	; 0x1dc
    d568:	str	r8, [fp, #-464]	; 0xfffffe30
    d56c:	strb	r3, [fp, #-460]	; 0xfffffe34
    d570:	ldr	r3, [fp, #-504]	; 0xfffffe08
    d574:	strb	r7, [fp, #-459]	; 0xfffffe35
    d578:	strh	r9, [r6, #36]	; 0x24
    d57c:	strb	r3, [fp, #-457]	; 0xfffffe37
    d580:	ldr	r3, [fp, #-512]	; 0xfffffe00
    d584:	orr	r3, r3, r2, lsl #4
    d588:	strb	r3, [fp, #-456]	; 0xfffffe38
    d58c:	mov	r3, #0
    d590:	strb	r3, [fp, #-455]	; 0xfffffe39
    d594:	strh	r3, [r6, #22]
    d598:	ldr	r3, [fp, #-488]	; 0xfffffe18
    d59c:	str	r3, [fp, #-452]	; 0xfffffe3c
    d5a0:	ldr	r3, [fp, #12]
    d5a4:	bic	r3, r3, #-16777216	; 0xff000000
    d5a8:	orr	r3, r3, sl, lsl #24
    d5ac:	str	r3, [fp, #-448]	; 0xfffffe40
    d5b0:	ldr	r3, [fp, #-492]	; 0xfffffe14
    d5b4:	str	r3, [fp, #-444]	; 0xfffffe44
    d5b8:	beq	d5d4 <btbb_pcap_append_packet@@Base+0x19c>
    d5bc:	mov	r2, r5
    d5c0:	mov	r1, sp
    d5c4:	add	r0, r6, #38	; 0x26
    d5c8:	bl	2188 <memcpy@plt>
    d5cc:	orr	r3, r9, #32
    d5d0:	strh	r3, [r6, #36]	; 0x24
    d5d4:	ldr	r3, [fp, #-516]	; 0xfffffdfc
    d5d8:	sub	r2, fp, #460	; 0x1cc
    d5dc:	mov	r1, r6
    d5e0:	ldr	r0, [r3]
    d5e4:	bl	2308 <btbb_pcap_dump@plt>
    d5e8:	ldr	sp, [fp, #-496]	; 0xfffffe10
    d5ec:	mov	r0, #0
    d5f0:	sub	sp, fp, #32
    d5f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d5f8:	mvn	r0, #0
    d5fc:	b	d5f0 <btbb_pcap_append_packet@@Base+0x1b8>
    d600:	blcc	fe6bfe08 <perm_table@@Base+0xfe698c48>
    d604:	andeq	r0, r0, r0

0000d608 <btbb_pcap_close@@Base>:
    d608:	push	{r4, lr}
    d60c:	subs	r4, r0, #0
    d610:	beq	d634 <btbb_pcap_close@@Base+0x2c>
    d614:	ldr	r0, [r4]
    d618:	cmp	r0, #0
    d61c:	beq	d624 <btbb_pcap_close@@Base+0x1c>
    d620:	bl	2458 <fclose@plt>
    d624:	mov	r0, r4
    d628:	bl	2164 <free@plt>
    d62c:	mov	r0, #0
    d630:	pop	{r4, pc}
    d634:	mvn	r0, #0
    d638:	pop	{r4, pc}

0000d63c <btbb_pcap_create_file@@Base>:
    d63c:	push	{r4, r5, r6, r7, r8, lr}
    d640:	mov	r7, r0
    d644:	mov	r0, #4
    d648:	mov	r6, r1
    d64c:	bl	22e4 <malloc@plt>
    d650:	subs	r5, r0, #0
    d654:	beq	d6a0 <btbb_pcap_create_file@@Base+0x64>
    d658:	mov	r4, #0
    d65c:	mov	r2, #400	; 0x190
    d660:	mov	r1, #255	; 0xff
    d664:	mov	r0, r7
    d668:	str	r4, [r5]
    d66c:	bl	21f4 <btbb_pcap_open@plt>
    d670:	cmp	r0, r4
    d674:	str	r0, [r5]
    d678:	strne	r5, [r6]
    d67c:	bne	d698 <btbb_pcap_create_file@@Base+0x5c>
    d680:	ldr	r0, [pc, #32]	; d6a8 <btbb_pcap_create_file@@Base+0x6c>
    d684:	mvn	r4, #1
    d688:	add	r0, pc, r0
    d68c:	bl	2248 <perror@plt>
    d690:	mov	r0, r5
    d694:	bl	2290 <btbb_pcap_close@plt>
    d698:	mov	r0, r4
    d69c:	pop	{r4, r5, r6, r7, r8, pc}
    d6a0:	mvn	r4, #2
    d6a4:	b	d690 <btbb_pcap_create_file@@Base+0x54>
    d6a8:	andeq	r9, r0, r3, lsl r4

0000d6ac <lell_pcap_append_packet@@Base>:
    d6ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d6b0:	sub	sp, sp, #308	; 0x134
    d6b4:	cmp	r0, #0
    d6b8:	add	r1, sp, #344	; 0x158
    d6bc:	ldrsb	r9, [r1]
    d6c0:	add	r1, sp, #348	; 0x15c
    d6c4:	ldrsb	r8, [r1]
    d6c8:	ldr	r4, [sp, #356]	; 0x164
    d6cc:	beq	d7bc <lell_pcap_append_packet@@Base+0x110>
    d6d0:	ldr	r1, [r0]
    d6d4:	cmp	r1, #0
    d6d8:	beq	d7bc <lell_pcap_append_packet@@Base+0x110>
    d6dc:	ldr	r1, [r0, #4]
    d6e0:	cmp	r1, #256	; 0x100
    d6e4:	bne	d7bc <lell_pcap_append_packet@@Base+0x110>
    d6e8:	cmp	r8, r9
    d6ec:	strd	r2, [sp]
    d6f0:	str	r0, [sp, #12]
    d6f4:	mov	r0, r4
    d6f8:	movlt	r7, #39	; 0x27
    d6fc:	movge	r7, #35	; 0x23
    d700:	bl	2134 <lell_packet_is_data@plt>
    d704:	ldr	r6, [r4, #72]	; 0x48
    d708:	cmp	r0, #0
    d70c:	movne	r3, #0
    d710:	moveq	r3, #16
    d714:	ldrd	r0, [sp]
    d718:	str	r3, [sp, #8]
    d71c:	add	r3, pc, #164	; 0xa4
    d720:	ldrd	r2, [r3]
    d724:	add	r5, r6, #9
    d728:	add	r6, r6, #19
    d72c:	cmp	r5, #255	; 0xff
    d730:	ldrb	fp, [r4, #69]	; 0x45
    d734:	movcs	r5, #255	; 0xff
    d738:	bl	e6cc <lell_pcapng_close@@Base+0x24>
    d73c:	add	r3, pc, #132	; 0x84
    d740:	ldrd	r2, [r3]
    d744:	str	r0, [sp, #20]
    d748:	ldrd	r0, [sp]
    d74c:	bl	e6cc <lell_pcapng_close@@Base+0x24>
    d750:	add	r3, r5, #10
    d754:	ldrb	sl, [r4, #92]	; 0x5c
    d758:	mov	r1, r4
    d75c:	add	r0, sp, #46	; 0x2e
    d760:	str	r2, [sp, #24]
    d764:	mov	r2, r5
    d768:	str	r6, [sp, #28]
    d76c:	add	r6, sp, #20
    d770:	str	r3, [sp, #32]
    d774:	ldr	r3, [sp, #352]	; 0x160
    d778:	strb	fp, [sp, #36]	; 0x24
    d77c:	strb	r9, [sp, #37]	; 0x25
    d780:	strb	r8, [sp, #38]	; 0x26
    d784:	strb	sl, [sp, #39]	; 0x27
    d788:	str	r3, [sp, #40]	; 0x28
    d78c:	ldr	r3, [sp, #8]
    d790:	orr	r7, r7, r3
    d794:	strh	r7, [sp, #44]	; 0x2c
    d798:	bl	2188 <memcpy@plt>
    d79c:	ldr	r3, [sp, #12]
    d7a0:	add	r2, sp, #36	; 0x24
    d7a4:	mov	r1, r6
    d7a8:	ldr	r0, [r3]
    d7ac:	bl	2308 <btbb_pcap_dump@plt>
    d7b0:	mov	r0, #0
    d7b4:	add	sp, sp, #308	; 0x134
    d7b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d7bc:	mvn	r0, #0
    d7c0:	b	d7b4 <lell_pcap_append_packet@@Base+0x108>
    d7c4:	nop	{0}
    d7c8:	blcc	fe6bffd0 <perm_table@@Base+0xfe698e10>
    d7cc:	andeq	r0, r0, r0

0000d7d0 <lell_pcap_append_ppi_packet@@Base>:
    d7d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    d7d4:	subs	r5, r0, #0
    d7d8:	sub	sp, sp, #296	; 0x128
    d7dc:	ldr	r7, [sp, #348]	; 0x15c
    d7e0:	beq	d8f4 <lell_pcap_append_ppi_packet@@Base+0x124>
    d7e4:	ldr	r1, [r5]
    d7e8:	cmp	r1, #0
    d7ec:	beq	d8f4 <lell_pcap_append_ppi_packet@@Base+0x124>
    d7f0:	ldr	r1, [r5, #4]
    d7f4:	cmp	r1, #192	; 0xc0
    d7f8:	bne	d8f4 <lell_pcap_append_ppi_packet@@Base+0x124>
    d7fc:	mov	r0, r7
    d800:	mov	r8, r2
    d804:	mov	r9, r3
    d808:	bl	238c <lell_get_channel_k@plt>
    d80c:	ldr	sl, [r7, #72]	; 0x48
    d810:	mov	r4, r0
    d814:	mov	r1, r9
    d818:	mov	r0, r8
    d81c:	add	r3, pc, #220	; 0xdc
    d820:	ldrd	r2, [r3]
    d824:	add	r6, sl, #9
    d828:	add	sl, sl, #33	; 0x21
    d82c:	cmp	r6, #255	; 0xff
    d830:	movcs	r6, #255	; 0xff
    d834:	bl	e6cc <lell_pcapng_close@@Base+0x24>
    d838:	mov	r1, r9
    d83c:	add	r3, pc, #188	; 0xbc
    d840:	ldrd	r2, [r3]
    d844:	str	r0, [sp]
    d848:	mov	r0, r8
    d84c:	mov	r8, #147	; 0x93
    d850:	bl	e6cc <lell_pcapng_close@@Base+0x24>
    d854:	add	r3, r6, #24
    d858:	add	r0, r4, #1200	; 0x4b0
    d85c:	ldr	r9, [pc, #164]	; d908 <lell_pcap_append_ppi_packet@@Base+0x138>
    d860:	add	r0, r0, #1
    d864:	mov	r4, sp
    d868:	strd	r2, [sp, #4]
    d86c:	mov	r3, #1572864	; 0x180000
    d870:	lsl	r0, r0, #1
    d874:	mov	r1, r7
    d878:	mov	r2, r6
    d87c:	str	sl, [sp, #12]
    d880:	str	r3, [sp, #16]
    d884:	ldrb	r3, [r5, #8]
    d888:	strh	r0, [r4, #29]
    d88c:	add	r0, sp, #40	; 0x28
    d890:	strd	r8, [sp, #20]
    d894:	strb	r3, [sp, #28]
    d898:	ldrb	r3, [sp, #328]	; 0x148
    d89c:	strb	r3, [sp, #31]
    d8a0:	ldr	r3, [r7, #76]	; 0x4c
    d8a4:	str	r3, [sp, #32]
    d8a8:	add	r3, sp, #336	; 0x150
    d8ac:	ldrsb	r3, [r3]
    d8b0:	strb	r3, [sp, #36]	; 0x24
    d8b4:	add	r3, sp, #332	; 0x14c
    d8b8:	ldrsb	r3, [r3]
    d8bc:	strb	r3, [sp, #37]	; 0x25
    d8c0:	add	r3, sp, #340	; 0x154
    d8c4:	ldrsb	r3, [r3]
    d8c8:	strb	r3, [sp, #38]	; 0x26
    d8cc:	ldrb	r3, [sp, #344]	; 0x158
    d8d0:	strb	r3, [sp, #39]	; 0x27
    d8d4:	bl	2188 <memcpy@plt>
    d8d8:	add	r2, sp, #16
    d8dc:	mov	r1, r4
    d8e0:	ldr	r0, [r5]
    d8e4:	bl	2308 <btbb_pcap_dump@plt>
    d8e8:	mov	r0, #0
    d8ec:	add	sp, sp, #296	; 0x128
    d8f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    d8f4:	mvn	r0, #0
    d8f8:	b	d8ec <lell_pcap_append_ppi_packet@@Base+0x11c>
    d8fc:	nop	{0}
    d900:	blcc	fe6c0108 <perm_table@@Base+0xfe698f48>
    d904:	andeq	r0, r0, r0
    d908:	andeq	r7, ip, r6, lsr r5

0000d90c <lell_pcap_close@@Base>:
    d90c:	push	{r4, lr}
    d910:	subs	r4, r0, #0
    d914:	beq	d938 <lell_pcap_close@@Base+0x2c>
    d918:	ldr	r0, [r4]
    d91c:	cmp	r0, #0
    d920:	beq	d928 <lell_pcap_close@@Base+0x1c>
    d924:	bl	2458 <fclose@plt>
    d928:	mov	r0, r4
    d92c:	bl	2164 <free@plt>
    d930:	mov	r0, #0
    d934:	pop	{r4, pc}
    d938:	mvn	r0, #0
    d93c:	pop	{r4, pc}
    d940:	push	{r4, r5, r6, r7, r8, lr}
    d944:	mov	r8, r0
    d948:	mov	r0, #12
    d94c:	mov	r6, r1
    d950:	mov	r7, r2
    d954:	bl	22e4 <malloc@plt>
    d958:	subs	r5, r0, #0
    d95c:	beq	d99c <lell_pcap_close@@Base+0x90>
    d960:	mov	r4, #0
    d964:	mov	r2, #400	; 0x190
    d968:	mov	r1, r6
    d96c:	mov	r0, r8
    d970:	str	r4, [r5]
    d974:	str	r4, [r5, #4]
    d978:	str	r4, [r5, #8]
    d97c:	bl	21f4 <btbb_pcap_open@plt>
    d980:	cmp	r0, r4
    d984:	str	r0, [r5]
    d988:	strne	r6, [r5, #4]
    d98c:	strne	r5, [r7]
    d990:	bne	d9a8 <lell_pcap_close@@Base+0x9c>
    d994:	mvn	r4, #1
    d998:	b	d9a0 <lell_pcap_close@@Base+0x94>
    d99c:	mvn	r4, #2
    d9a0:	mov	r0, r5
    d9a4:	bl	21dc <lell_pcap_close@plt>
    d9a8:	mov	r0, r4
    d9ac:	pop	{r4, r5, r6, r7, r8, pc}

0000d9b0 <lell_pcap_create_file@@Base>:
    d9b0:	mov	r2, r1
    d9b4:	mov	r1, #256	; 0x100
    d9b8:	b	d940 <lell_pcap_close@@Base+0x34>

0000d9bc <lell_pcap_ppi_create_file@@Base>:
    d9bc:	push	{r4, r5, r6, lr}
    d9c0:	mov	r4, r1
    d9c4:	mov	r1, #192	; 0xc0
    d9c8:	mov	r5, r2
    d9cc:	bl	d940 <lell_pcap_close@@Base+0x34>
    d9d0:	cmp	r0, #0
    d9d4:	ldreq	r3, [r5]
    d9d8:	strbeq	r4, [r3, #8]
    d9dc:	pop	{r4, r5, r6, pc}

0000d9e0 <pcapng_append_section_option@@Base>:
    d9e0:	push	{r4, r5, r6, lr}
    d9e4:	subs	r5, r0, #0
    d9e8:	beq	da68 <pcapng_append_section_option@@Base+0x88>
    d9ec:	ldr	r2, [r5]
    d9f0:	cmn	r2, #1
    d9f4:	beq	da68 <pcapng_append_section_option@@Base+0x88>
    d9f8:	ldr	ip, [r5, #4]
    d9fc:	sub	r2, ip, #1
    da00:	cmn	r2, #3
    da04:	bhi	da70 <pcapng_append_section_option@@Base+0x90>
    da08:	ldr	r0, [r5, #12]
    da0c:	cmp	r0, #0
    da10:	cmpne	r1, #0
    da14:	beq	da70 <pcapng_append_section_option@@Base+0x90>
    da18:	ldrh	r4, [r1, #2]
    da1c:	add	r0, ip, r0
    da20:	add	r2, r4, #4
    da24:	bl	2188 <memcpy@plt>
    da28:	add	r3, r4, #7
    da2c:	ldr	r1, [pc, #68]	; da78 <pcapng_append_section_option@@Base+0x98>
    da30:	bic	r3, r3, #3
    da34:	ldr	r2, [r5, #12]
    da38:	ldr	r0, [r5, #4]
    da3c:	add	r1, pc, r1
    da40:	add	r3, r3, r2
    da44:	ldr	r2, [r5, #8]
    da48:	str	r3, [r5, #12]
    da4c:	sub	r2, r2, #12
    da50:	sub	r2, r2, r3
    da54:	strh	r2, [r1, #2]
    da58:	ldr	r2, [r1]
    da5c:	str	r2, [r0, r3]
    da60:	mov	r0, #0
    da64:	pop	{r4, r5, r6, pc}
    da68:	mov	r0, #1
    da6c:	pop	{r4, r5, r6, pc}
    da70:	mov	r0, #5
    da74:	pop	{r4, r5, r6, pc}
    da78:	andeq	r9, r1, r0, ror #14

0000da7c <pcapng_append_interface_option@@Base>:
    da7c:	push	{r4, r5, r6, lr}
    da80:	subs	r5, r0, #0
    da84:	beq	db04 <pcapng_append_interface_option@@Base+0x88>
    da88:	ldr	r2, [r5]
    da8c:	cmn	r2, #1
    da90:	beq	db04 <pcapng_append_interface_option@@Base+0x88>
    da94:	ldr	ip, [r5, #16]
    da98:	sub	r2, ip, #1
    da9c:	cmn	r2, #3
    daa0:	bhi	db0c <pcapng_append_interface_option@@Base+0x90>
    daa4:	ldr	r0, [r5, #24]
    daa8:	cmp	r0, #0
    daac:	cmpne	r1, #0
    dab0:	beq	db0c <pcapng_append_interface_option@@Base+0x90>
    dab4:	ldrh	r4, [r1, #2]
    dab8:	add	r0, ip, r0
    dabc:	add	r2, r4, #4
    dac0:	bl	2188 <memcpy@plt>
    dac4:	add	r3, r4, #7
    dac8:	ldr	r1, [pc, #68]	; db14 <pcapng_append_interface_option@@Base+0x98>
    dacc:	bic	r3, r3, #3
    dad0:	ldr	r2, [r5, #24]
    dad4:	ldr	r0, [r5, #16]
    dad8:	add	r1, pc, r1
    dadc:	add	r3, r3, r2
    dae0:	ldr	r2, [r5, #20]
    dae4:	str	r3, [r5, #24]
    dae8:	sub	r2, r2, #12
    daec:	sub	r2, r2, r3
    daf0:	strh	r2, [r1, #2]
    daf4:	ldr	r2, [r1]
    daf8:	str	r2, [r0, r3]
    dafc:	mov	r0, #0
    db00:	pop	{r4, r5, r6, pc}
    db04:	mov	r0, #1
    db08:	pop	{r4, r5, r6, pc}
    db0c:	mov	r0, #5
    db10:	pop	{r4, r5, r6, pc}
    db14:	andeq	r9, r1, r4, asr #13

0000db18 <pcapng_append_packet@@Base>:
    db18:	push	{r4, r5, r6, r7, r8, lr}
    db1c:	subs	r4, r0, #0
    db20:	beq	db68 <pcapng_append_packet@@Base+0x50>
    db24:	ldr	r0, [r4]
    db28:	cmn	r0, #1
    db2c:	beq	db68 <pcapng_append_packet@@Base+0x50>
    db30:	ldr	r5, [r1, #4]
    db34:	mov	r2, r5
    db38:	bl	2434 <write@plt>
    db3c:	cmn	r0, #1
    db40:	beq	db60 <pcapng_append_packet@@Base+0x48>
    db44:	ldr	r1, [r4, #4]
    db48:	ldr	r6, [r1, #16]
    db4c:	ldr	r7, [r1, #20]
    db50:	adds	r2, r6, r5
    db54:	adc	r3, r7, #0
    db58:	str	r2, [r1, #16]
    db5c:	str	r3, [r1, #20]
    db60:	mov	r0, #0
    db64:	pop	{r4, r5, r6, r7, r8, pc}
    db68:	mov	r0, #1
    db6c:	pop	{r4, r5, r6, r7, r8, pc}

0000db70 <pcapng_close@@Base>:
    db70:	push	{r4, lr}
    db74:	mov	r4, r0
    db78:	ldr	r0, [r0, #16]
    db7c:	sub	r3, r0, #1
    db80:	cmn	r3, #3
    db84:	bhi	db90 <pcapng_close@@Base+0x20>
    db88:	ldr	r1, [r4, #20]
    db8c:	bl	2470 <munmap@plt>
    db90:	ldr	r0, [r4, #4]
    db94:	sub	r3, r0, #1
    db98:	cmn	r3, #3
    db9c:	bhi	dba8 <pcapng_close@@Base+0x38>
    dba0:	ldr	r1, [r4, #8]
    dba4:	bl	2470 <munmap@plt>
    dba8:	ldr	r0, [r4]
    dbac:	cmn	r0, #1
    dbb0:	beq	dbb8 <pcapng_close@@Base+0x48>
    dbb4:	bl	250c <close@plt>
    dbb8:	mov	r0, #0
    dbbc:	pop	{r4, pc}

0000dbc0 <pcapng_create@@Base>:
    dbc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dbc4:	sub	sp, sp, #44	; 0x2c
    dbc8:	mov	r4, r0
    dbcc:	mov	r6, r2
    dbd0:	mov	r0, r1
    dbd4:	mov	r2, #432	; 0x1b0
    dbd8:	mov	r1, #194	; 0xc2
    dbdc:	str	r3, [sp, #12]
    dbe0:	mov	r3, #0
    dbe4:	ldr	r8, [sp, #88]	; 0x58
    dbe8:	str	r3, [r4, #4]
    dbec:	str	r3, [r4, #8]
    dbf0:	str	r3, [r4, #12]
    dbf4:	str	r3, [r4, #16]
    dbf8:	str	r3, [r4, #20]
    dbfc:	str	r3, [r4, #24]
    dc00:	bl	2320 <open@plt>
    dc04:	cmn	r0, #1
    dc08:	str	r0, [r4]
    dc0c:	beq	dfb0 <pcapng_create@@Base+0x3f0>
    dc10:	ldr	r3, [pc, #928]	; dfb8 <pcapng_create@@Base+0x3f8>
    dc14:	add	r2, sp, #16
    dc18:	mov	lr, r0
    dc1c:	mov	r9, r2
    dc20:	add	r3, pc, r3
    dc24:	add	r7, r3, #24
    dc28:	ldr	r0, [r3]
    dc2c:	mov	ip, r2
    dc30:	add	r3, r3, #8
    dc34:	ldr	r1, [r3, #-4]
    dc38:	cmp	r3, r7
    dc3c:	stmia	ip!, {r0, r1}
    dc40:	mov	r2, ip
    dc44:	bne	dc28 <pcapng_create@@Base+0x68>
    dc48:	ldr	sl, [pc, #876]	; dfbc <pcapng_create@@Base+0x3fc>
    dc4c:	mov	r2, #24
    dc50:	mov	r1, r9
    dc54:	mov	r0, lr
    dc58:	str	r2, [r4, #8]
    dc5c:	bl	2434 <write@plt>
    dc60:	mov	r7, r0
    dc64:	add	sl, pc, sl
    dc68:	add	sl, sl, #24
    dc6c:	cmp	r6, #0
    dc70:	cmnne	r7, #1
    dc74:	beq	dc90 <pcapng_create@@Base+0xd0>
    dc78:	ldrh	r3, [r6]
    dc7c:	cmp	r3, #0
    dc80:	beq	dc90 <pcapng_create@@Base+0xd0>
    dc84:	ldrh	r2, [r6, #2]
    dc88:	cmp	r2, #0
    dc8c:	bne	dd30 <pcapng_create@@Base+0x170>
    dc90:	ldr	sl, [r4, #8]
    dc94:	cmn	r7, #1
    dc98:	str	sl, [r4, #12]
    dc9c:	beq	dfb0 <pcapng_create@@Base+0x3f0>
    dca0:	bl	23a4 <getpagesize@plt>
    dca4:	ldr	r3, [sp, #12]
    dca8:	mov	r6, r0
    dcac:	ldr	r5, [pc, #780]	; dfc0 <pcapng_create@@Base+0x400>
    dcb0:	add	r3, r3, #3
    dcb4:	add	r3, r3, sl
    dcb8:	add	r3, r3, r0
    dcbc:	add	r5, pc, r5
    dcc0:	add	r5, r5, #24
    dcc4:	udiv	r3, r3, r0
    dcc8:	mul	r3, r0, r3
    dccc:	sub	sl, r3, sl
    dcd0:	str	r3, [r4, #8]
    dcd4:	adds	r3, r7, #1
    dcd8:	ldr	ip, [r4]
    dcdc:	movne	r3, #1
    dce0:	cmp	sl, #0
    dce4:	movne	r0, r3
    dce8:	moveq	r0, #0
    dcec:	cmp	r0, #0
    dcf0:	bne	dd94 <pcapng_create@@Base+0x1d4>
    dcf4:	mov	r3, #1
    dcf8:	mov	r2, #3
    dcfc:	ldr	r1, [r4, #8]
    dd00:	str	ip, [sp]
    dd04:	str	r0, [sp, #4]
    dd08:	bl	2368 <mmap@plt>
    dd0c:	cmn	r7, #1
    dd10:	str	r0, [r4, #4]
    dd14:	beq	dfb0 <pcapng_create@@Base+0x3f0>
    dd18:	cmn	r0, #1
    dd1c:	bne	ddb0 <pcapng_create@@Base+0x1f0>
    dd20:	mov	r5, #7
    dd24:	mov	r0, r4
    dd28:	bl	24b8 <pcapng_close@plt>
    dd2c:	b	df28 <pcapng_create@@Base+0x368>
    dd30:	add	r3, r2, #3
    dd34:	mov	r1, r6
    dd38:	ldr	r0, [r4]
    dd3c:	bic	fp, r3, #3
    dd40:	sub	r5, fp, r2
    dd44:	add	r2, r2, #4
    dd48:	bl	2434 <write@plt>
    dd4c:	mov	r7, r0
    dd50:	cmp	r5, #0
    dd54:	cmnne	r7, #1
    dd58:	bne	dd78 <pcapng_create@@Base+0x1b8>
    dd5c:	add	r3, fp, #4
    dd60:	add	r6, r6, r3
    dd64:	ldr	r3, [r4, #8]
    dd68:	add	r3, r3, #4
    dd6c:	add	r3, r3, fp
    dd70:	str	r3, [r4, #8]
    dd74:	b	dc6c <pcapng_create@@Base+0xac>
    dd78:	mov	r2, #1
    dd7c:	mov	r1, sl
    dd80:	ldr	r0, [r4]
    dd84:	bl	2434 <write@plt>
    dd88:	sub	r5, r5, #1
    dd8c:	mov	r7, r0
    dd90:	b	dd50 <pcapng_create@@Base+0x190>
    dd94:	mov	r2, #1
    dd98:	mov	r1, r5
    dd9c:	mov	r0, ip
    dda0:	sub	sl, sl, #1
    dda4:	bl	2434 <write@plt>
    dda8:	mov	r7, r0
    ddac:	b	dcd4 <pcapng_create@@Base+0x114>
    ddb0:	mov	r2, #0
    ddb4:	mov	r3, #0
    ddb8:	ldr	r5, [pc, #516]	; dfc4 <pcapng_create@@Base+0x404>
    ddbc:	mov	r1, r9
    ddc0:	strd	r2, [sp, #20]
    ddc4:	mov	r3, #1
    ddc8:	mov	r2, #16
    ddcc:	ldr	r0, [r4]
    ddd0:	str	r3, [sp, #16]
    ddd4:	ldrh	r3, [sp, #80]	; 0x50
    ddd8:	add	r5, pc, r5
    dddc:	str	r2, [r4, #20]
    dde0:	add	r5, r5, #24
    dde4:	strh	r3, [sp, #24]
    dde8:	ldr	r3, [sp, #84]	; 0x54
    ddec:	str	r3, [sp, #28]
    ddf0:	bl	2434 <write@plt>
    ddf4:	mov	r7, r0
    ddf8:	cmp	r8, #0
    ddfc:	cmnne	r7, #1
    de00:	beq	de1c <pcapng_create@@Base+0x25c>
    de04:	ldrh	r3, [r8]
    de08:	cmp	r3, #0
    de0c:	beq	de1c <pcapng_create@@Base+0x25c>
    de10:	ldrh	r2, [r8, #2]
    de14:	cmp	r2, #0
    de18:	bne	df34 <pcapng_create@@Base+0x374>
    de1c:	ldr	r8, [r4, #20]
    de20:	cmn	r7, #1
    de24:	str	r8, [r4, #24]
    de28:	beq	dfb0 <pcapng_create@@Base+0x3f0>
    de2c:	ldr	r3, [sp, #92]	; 0x5c
    de30:	add	r3, r3, #3
    de34:	add	r3, r3, r8
    de38:	add	r3, r3, r6
    de3c:	udiv	r3, r3, r6
    de40:	mul	r6, r6, r3
    de44:	sub	r8, r6, r8
    de48:	str	r6, [r4, #20]
    de4c:	ldr	r6, [pc, #372]	; dfc8 <pcapng_create@@Base+0x408>
    de50:	add	r6, pc, r6
    de54:	add	r6, r6, #24
    de58:	adds	r5, r7, #1
    de5c:	ldr	r0, [r4]
    de60:	movne	r5, #1
    de64:	cmp	r8, #0
    de68:	moveq	r5, #0
    de6c:	cmp	r5, #0
    de70:	bne	df98 <pcapng_create@@Base+0x3d8>
    de74:	ldr	r3, [r4, #8]
    de78:	mov	r2, #3
    de7c:	ldr	r1, [r4, #20]
    de80:	stm	sp, {r0, r3}
    de84:	mov	r3, #1
    de88:	mov	r0, r5
    de8c:	bl	2368 <mmap@plt>
    de90:	cmn	r7, #1
    de94:	str	r0, [r4, #16]
    de98:	beq	dfb0 <pcapng_create@@Base+0x3f0>
    de9c:	cmn	r0, #1
    dea0:	beq	dd20 <pcapng_create@@Base+0x160>
    dea4:	ldmib	r4, {r0, r2}
    dea8:	ldr	r3, [pc, #284]	; dfcc <pcapng_create@@Base+0x40c>
    deac:	ldr	r1, [r4, #12]
    deb0:	sub	r2, r2, #12
    deb4:	add	r3, pc, r3
    deb8:	sub	r2, r2, r1
    debc:	strh	r2, [r3, #2]
    dec0:	ldr	r2, [r3]
    dec4:	str	r2, [r0, r1]
    dec8:	ldr	r2, [r4, #4]
    decc:	ldr	r1, [r4, #8]
    ded0:	bic	r0, r1, #3
    ded4:	str	r1, [r2, #4]
    ded8:	add	r2, r2, r0
    dedc:	str	r1, [r2, #-4]
    dee0:	ldr	r2, [r4, #20]
    dee4:	ldr	r1, [r4, #24]
    dee8:	sub	r2, r2, #12
    deec:	sub	r2, r2, r1
    def0:	strh	r2, [r3, #2]
    def4:	ldr	r2, [r3]
    def8:	ldr	r3, [r4, #16]
    defc:	str	r2, [r3, r1]
    df00:	ldr	r3, [r4, #16]
    df04:	ldr	r2, [r4, #20]
    df08:	bic	r1, r2, #3
    df0c:	str	r2, [r3, #4]
    df10:	add	r3, r3, r1
    df14:	str	r2, [r3, #-4]
    df18:	ldr	r3, [r4, #4]
    df1c:	ldr	r2, [r4, #20]
    df20:	str	r2, [r3, #16]
    df24:	str	r5, [r3, #20]
    df28:	mov	r0, r5
    df2c:	add	sp, sp, #44	; 0x2c
    df30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df34:	add	r3, r2, #3
    df38:	mov	r1, r8
    df3c:	ldr	r0, [r4]
    df40:	bic	r9, r3, #3
    df44:	sub	sl, r9, r2
    df48:	add	r2, r2, #4
    df4c:	bl	2434 <write@plt>
    df50:	mov	r7, r0
    df54:	cmp	sl, #0
    df58:	cmnne	r7, #1
    df5c:	bne	df7c <pcapng_create@@Base+0x3bc>
    df60:	add	r3, r9, #4
    df64:	add	r8, r8, r3
    df68:	ldr	r3, [r4, #20]
    df6c:	add	r3, r3, #4
    df70:	add	r3, r3, r9
    df74:	str	r3, [r4, #20]
    df78:	b	ddf8 <pcapng_create@@Base+0x238>
    df7c:	mov	r2, #1
    df80:	mov	r1, r5
    df84:	ldr	r0, [r4]
    df88:	bl	2434 <write@plt>
    df8c:	sub	sl, sl, #1
    df90:	mov	r7, r0
    df94:	b	df54 <pcapng_create@@Base+0x394>
    df98:	mov	r2, #1
    df9c:	mov	r1, r6
    dfa0:	bl	2434 <write@plt>
    dfa4:	mov	r7, r0
    dfa8:	sub	r8, r8, #1
    dfac:	b	de58 <pcapng_create@@Base+0x298>
    dfb0:	mov	r5, #6
    dfb4:	b	dd24 <pcapng_create@@Base+0x164>
    dfb8:	andeq	r8, r0, r7, lsl #29
    dfbc:	andeq	r8, r0, r3, asr #28
    dfc0:	andeq	r8, r0, fp, ror #27
    dfc4:	andeq	r8, r0, pc, asr #25
    dfc8:	andeq	r8, r0, r7, asr ip
    dfcc:	andeq	r9, r1, r8, ror #5
    dfd0:	mov	ip, r0
    dfd4:	push	{r0, r1, r2, lr}
    dfd8:	mov	r2, #0
    dfdc:	cmp	r1, #0
    dfe0:	eorne	r0, r2, #1
    dfe4:	moveq	r0, #0
    dfe8:	cmp	r0, #0
    dfec:	beq	e050 <pcapng_create@@Base+0x490>
    dff0:	ldrh	r0, [r1]
    dff4:	cmp	r0, #0
    dff8:	beq	e008 <pcapng_create@@Base+0x448>
    dffc:	ldrh	r3, [r1, #2]
    e000:	cmp	r3, #0
    e004:	bne	e030 <pcapng_create@@Base+0x470>
    e008:	ldr	r3, [pc, #80]	; e060 <pcapng_create@@Base+0x4a0>
    e00c:	mov	r1, sp
    e010:	add	r3, pc, r3
    e014:	ldr	r0, [r3]
    e018:	ldrb	r3, [r3, #4]
    e01c:	str	r0, [sp]
    e020:	mov	r0, ip
    e024:	strb	r3, [r1, #4]
    e028:	bl	2158 <pcapng_append_interface_option@plt>
    e02c:	b	e058 <pcapng_create@@Base+0x498>
    e030:	cmp	r0, #9
    e034:	mov	r2, #1
    e038:	beq	dfdc <pcapng_create@@Base+0x41c>
    e03c:	add	r3, r3, #3
    e040:	bic	r3, r3, #3
    e044:	add	r3, r3, #4
    e048:	add	r1, r1, r3
    e04c:	b	dfd8 <pcapng_create@@Base+0x418>
    e050:	cmp	r2, #0
    e054:	beq	e008 <pcapng_create@@Base+0x448>
    e058:	add	sp, sp, #12
    e05c:	pop	{pc}		; (ldr pc, [sp], #4)
    e060:			; <UNDEFINED> instruction: 0x00008ab1

0000e064 <btbb_pcapng_create_file@@Base>:
    e064:	push	{r4, r5, r6, r7, r8, r9, lr}
    e068:	mov	r9, r0
    e06c:	sub	sp, sp, #292	; 0x124
    e070:	mov	r0, #28
    e074:	mov	r6, r1
    e078:	mov	r7, r2
    e07c:	ldr	r8, [pc, #220]	; e160 <btbb_pcapng_create_file@@Base+0xfc>
    e080:	bl	22e4 <malloc@plt>
    e084:	subs	r5, r0, #0
    e088:	mvneq	r4, #4
    e08c:	add	r8, pc, r8
    e090:	beq	e154 <btbb_pcapng_create_file@@Base+0xf0>
    e094:	add	r4, sp, #28
    e098:	mov	r2, #260	; 0x104
    e09c:	mov	r1, #0
    e0a0:	mov	r0, r4
    e0a4:	bl	23e0 <memset@plt>
    e0a8:	mov	r3, #3
    e0ac:	cmp	r6, #0
    e0b0:	strh	r3, [r4]
    e0b4:	beq	e0e0 <btbb_pcapng_create_file@@Base+0x7c>
    e0b8:	add	r3, sp, #32
    e0bc:	mov	r1, r6
    e0c0:	mov	r2, #256	; 0x100
    e0c4:	mov	r0, r3
    e0c8:	bl	23f8 <strncpy@plt>
    e0cc:	mov	r2, #0
    e0d0:	mov	r6, r4
    e0d4:	strb	r2, [sp, #287]	; 0x11f
    e0d8:	bl	2350 <strlen@plt>
    e0dc:	strh	r0, [r4, #2]
    e0e0:	bl	23a4 <getpagesize@plt>
    e0e4:	ldr	r2, [pc, #120]	; e164 <btbb_pcapng_create_file@@Base+0x100>
    e0e8:	mov	r3, r0
    e0ec:	mov	r1, r9
    e0f0:	mov	r9, #400	; 0x190
    e0f4:	mov	r0, r5
    e0f8:	ldr	r2, [r8, r2]
    e0fc:	mov	r8, #255	; 0xff
    e100:	strd	r8, [sp]
    e104:	str	r6, [sp, #8]
    e108:	str	r3, [sp, #12]
    e10c:	str	r2, [sp, #20]
    e110:	ldr	r2, [sp, #20]
    e114:	bl	2218 <pcapng_create@plt>
    e118:	subs	r4, r0, #0
    e11c:	bne	e13c <btbb_pcapng_create_file@@Base+0xd8>
    e120:	mov	r1, r6
    e124:	mov	r0, r5
    e128:	bl	dfd0 <pcapng_create@@Base+0x410>
    e12c:	subs	r4, r0, #0
    e130:	beq	e13c <btbb_pcapng_create_file@@Base+0xd8>
    e134:	mov	r0, r5
    e138:	bl	24b8 <pcapng_close@plt>
    e13c:	rsb	r4, r4, #0
    e140:	cmp	r4, #0
    e144:	streq	r5, [r7]
    e148:	beq	e154 <btbb_pcapng_create_file@@Base+0xf0>
    e14c:	mov	r0, r5
    e150:	bl	2164 <free@plt>
    e154:	mov	r0, r4
    e158:	add	sp, sp, #292	; 0x124
    e15c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    e160:	andeq	r8, r1, ip, ror #30
    e164:	muleq	r0, r8, r1

0000e168 <btbb_pcapng_append_packet@@Base>:
    e168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e16c:	add	fp, sp, #32
    e170:	sub	sp, sp, #492	; 0x1ec
    e174:	mov	sl, r0
    e178:	ldrsb	r9, [fp, #8]
    e17c:	str	r3, [fp, #-520]	; 0xfffffdf8
    e180:	str	r2, [fp, #-508]	; 0xfffffe04
    e184:	ldrsb	r2, [fp, #4]
    e188:	ldr	r3, [fp, #12]
    e18c:	ldrb	r8, [fp, #16]
    e190:	cmp	r9, r2
    e194:	str	r2, [fp, #-516]	; 0xfffffdfc
    e198:	movlt	r1, #7
    e19c:	movge	r1, #3
    e1a0:	ldr	r0, [fp, #20]
    e1a4:	cmn	r3, #1
    e1a8:	movne	r5, #16
    e1ac:	moveq	r5, #0
    e1b0:	cmp	r8, #255	; 0xff
    e1b4:	orr	r5, r5, r1
    e1b8:	movne	r1, #128	; 0x80
    e1bc:	moveq	r1, #0
    e1c0:	orr	r5, r5, r1
    e1c4:	bl	2344 <btbb_packet_get_payload_length@plt>
    e1c8:	add	r1, r0, #7
    e1cc:	mov	r4, r0
    e1d0:	ldr	r0, [fp, #20]
    e1d4:	bic	r1, r1, #7
    e1d8:	sub	sp, sp, r1
    e1dc:	mov	r1, sp
    e1e0:	bl	2110 <btbb_get_payload_packed@plt>
    e1e4:	cmp	r4, #400	; 0x190
    e1e8:	ldr	r0, [fp, #20]
    e1ec:	movge	r4, #400	; 0x190
    e1f0:	bl	2488 <btbb_packet_get_channel@plt>
    e1f4:	str	r0, [fp, #-496]	; 0xfffffe10
    e1f8:	add	r6, r4, #61	; 0x3d
    e1fc:	ldr	r0, [fp, #20]
    e200:	bic	r6, r6, #3
    e204:	bl	217c <btbb_packet_get_ac_errors@plt>
    e208:	str	r0, [fp, #-500]	; 0xfffffe0c
    e20c:	ldr	r0, [fp, #20]
    e210:	bl	23bc <btbb_packet_get_transport@plt>
    e214:	str	r0, [fp, #-504]	; 0xfffffe08
    e218:	ldr	r0, [fp, #20]
    e21c:	bl	2170 <btbb_packet_get_modulation@plt>
    e220:	mov	r7, r0
    e224:	ldr	r0, [fp, #20]
    e228:	bl	2410 <btbb_packet_get_lap@plt>
    e22c:	str	r0, [fp, #-512]	; 0xfffffe00
    e230:	ldr	r0, [fp, #20]
    e234:	bl	2374 <btbb_packet_get_header_packed@plt>
    e238:	ldr	r3, [fp, #-520]	; 0xfffffdf8
    e23c:	mov	ip, #6
    e240:	add	lr, r4, #22
    e244:	ldr	r2, [fp, #-516]	; 0xfffffdfc
    e248:	str	ip, [fp, #-488]	; 0xfffffe18
    e24c:	mov	ip, #0
    e250:	ldr	r1, [fp, #-512]	; 0xfffffe00
    e254:	cmp	r4, ip
    e258:	str	r6, [fp, #-484]	; 0xfffffe1c
    e25c:	str	r3, [fp, #-476]	; 0xfffffe24
    e260:	ldr	r3, [fp, #-508]	; 0xfffffe04
    e264:	str	ip, [fp, #-480]	; 0xfffffe20
    e268:	strb	r9, [fp, #-458]	; 0xfffffe36
    e26c:	str	r0, [fp, #-444]	; 0xfffffe44
    e270:	str	r3, [fp, #-472]	; 0xfffffe28
    e274:	ldr	r3, [fp, #-496]	; 0xfffffe10
    e278:	str	lr, [fp, #-468]	; 0xfffffe2c
    e27c:	str	lr, [fp, #-464]	; 0xfffffe30
    e280:	strb	r2, [fp, #-459]	; 0xfffffe35
    e284:	strb	ip, [fp, #-455]	; 0xfffffe39
    e288:	strb	r3, [fp, #-460]	; 0xfffffe34
    e28c:	ldr	r3, [fp, #-500]	; 0xfffffe0c
    e290:	str	r1, [fp, #-452]	; 0xfffffe3c
    e294:	strb	r3, [fp, #-457]	; 0xfffffe37
    e298:	ldr	r3, [fp, #-504]	; 0xfffffe08
    e29c:	orr	r7, r7, r3, lsl #4
    e2a0:	ldr	r3, [fp, #12]
    e2a4:	strb	r7, [fp, #-456]	; 0xfffffe38
    e2a8:	sub	r7, fp, #488	; 0x1e8
    e2ac:	bic	r3, r3, #-16777216	; 0xff000000
    e2b0:	strh	ip, [r7, #34]	; 0x22
    e2b4:	orr	r8, r3, r8, lsl #24
    e2b8:	strh	r5, [r7, #48]	; 0x30
    e2bc:	str	r8, [fp, #-448]	; 0xfffffe40
    e2c0:	beq	e308 <btbb_pcapng_append_packet@@Base+0x1a0>
    e2c4:	cmp	r4, #400	; 0x190
    e2c8:	bls	e2f0 <btbb_pcapng_append_packet@@Base+0x188>
    e2cc:	ldr	r3, [pc, #96]	; e334 <btbb_pcapng_append_packet@@Base+0x1cc>
    e2d0:	mov	r2, #221	; 0xdd
    e2d4:	ldr	r1, [pc, #92]	; e338 <btbb_pcapng_append_packet@@Base+0x1d0>
    e2d8:	ldr	r0, [pc, #92]	; e33c <btbb_pcapng_append_packet@@Base+0x1d4>
    e2dc:	add	r3, pc, r3
    e2e0:	add	r3, r3, #5
    e2e4:	add	r1, pc, r1
    e2e8:	add	r0, pc, r0
    e2ec:	bl	2518 <__assert_fail@plt>
    e2f0:	orr	r5, r5, #32
    e2f4:	mov	r2, r4
    e2f8:	mov	r1, sp
    e2fc:	add	r0, r7, #50	; 0x32
    e300:	bl	2188 <memcpy@plt>
    e304:	strh	r5, [r7, #48]	; 0x30
    e308:	sub	r3, fp, #36	; 0x24
    e30c:	mov	r2, #0
    e310:	add	r3, r3, r6
    e314:	mov	r1, r7
    e318:	mov	r0, sl
    e31c:	str	r2, [r3, #-460]	; 0xfffffe34
    e320:	str	r6, [r3, #-456]	; 0xfffffe38
    e324:	bl	23b0 <pcapng_append_packet@plt>
    e328:	rsb	r0, r0, #0
    e32c:	sub	sp, fp, #32
    e330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e334:	andeq	r8, r0, r5, ror #15
    e338:	andeq	r8, r0, r9, lsr #16
    e33c:	andeq	r8, r0, r2, ror r8

0000e340 <btbb_pcapng_record_bdaddr@@Base>:
    e340:	push	{r0, r1, r2, r3, r4, lr}
    e344:	strb	r3, [sp, #12]
    e348:	lsr	r3, r3, #8
    e34c:	ldr	r1, [pc, #40]	; e37c <btbb_pcapng_record_bdaddr@@Base+0x3c>
    e350:	strb	r3, [sp, #13]
    e354:	ldrb	r3, [sp, #24]
    e358:	stmib	sp, {r1, r2}
    e35c:	add	r1, sp, #4
    e360:	strb	r3, [sp, #14]
    e364:	ldrb	r3, [sp, #28]
    e368:	strb	r3, [sp, #15]
    e36c:	bl	2158 <pcapng_append_interface_option@plt>
    e370:	rsb	r0, r0, #0
    e374:	add	sp, sp, #20
    e378:	pop	{pc}		; (ldr pc, [sp], #4)
    e37c:	andeq	sp, ip, r0, asr #6

0000e380 <btbb_pcapng_record_btclock@@Base>:
    e380:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    e384:	mov	r1, sp
    e388:	ldr	r3, [pc, #52]	; e3c4 <btbb_pcapng_record_btclock@@Base+0x44>
    e38c:	str	r3, [sp]
    e390:	ldr	r3, [sp, #32]
    e394:	str	r2, [sp, #12]
    e398:	str	r3, [sp, #4]
    e39c:	ldr	r3, [sp, #36]	; 0x24
    e3a0:	str	r3, [sp, #8]
    e3a4:	ldr	r3, [sp, #40]	; 0x28
    e3a8:	str	r3, [sp, #16]
    e3ac:	ldr	r3, [sp, #44]	; 0x2c
    e3b0:	str	r3, [sp, #20]
    e3b4:	bl	2158 <pcapng_append_interface_option@plt>
    e3b8:	rsb	r0, r0, #0
    e3bc:	add	sp, sp, #28
    e3c0:	pop	{pc}		; (ldr pc, [sp], #4)
    e3c4:	andseq	sp, r8, r1, asr #6

0000e3c8 <btbb_pcapng_close@@Base>:
    e3c8:	push	{r4, lr}
    e3cc:	mov	r4, r0
    e3d0:	bl	24b8 <pcapng_close@plt>
    e3d4:	cmp	r4, #0
    e3d8:	beq	e3e4 <btbb_pcapng_close@@Base+0x1c>
    e3dc:	mov	r0, r4
    e3e0:	bl	2164 <free@plt>
    e3e4:	mvn	r0, #0
    e3e8:	pop	{r4, pc}

0000e3ec <lell_pcapng_create_file@@Base>:
    e3ec:	push	{r4, r5, r6, r7, r8, r9, lr}
    e3f0:	mov	r9, r0
    e3f4:	sub	sp, sp, #292	; 0x124
    e3f8:	mov	r0, #28
    e3fc:	mov	r6, r1
    e400:	mov	r7, r2
    e404:	ldr	r8, [pc, #220]	; e4e8 <lell_pcapng_create_file@@Base+0xfc>
    e408:	bl	22e4 <malloc@plt>
    e40c:	subs	r5, r0, #0
    e410:	mvneq	r4, #4
    e414:	add	r8, pc, r8
    e418:	beq	e4dc <lell_pcapng_create_file@@Base+0xf0>
    e41c:	add	r4, sp, #28
    e420:	mov	r2, #260	; 0x104
    e424:	mov	r1, #0
    e428:	mov	r0, r4
    e42c:	bl	23e0 <memset@plt>
    e430:	mov	r3, #3
    e434:	cmp	r6, #0
    e438:	strh	r3, [r4]
    e43c:	beq	e468 <lell_pcapng_create_file@@Base+0x7c>
    e440:	add	r3, sp, #32
    e444:	mov	r1, r6
    e448:	mov	r2, #256	; 0x100
    e44c:	mov	r0, r3
    e450:	bl	23f8 <strncpy@plt>
    e454:	mov	r2, #0
    e458:	mov	r6, r4
    e45c:	strb	r2, [sp, #287]	; 0x11f
    e460:	bl	2350 <strlen@plt>
    e464:	strh	r0, [r4, #2]
    e468:	bl	23a4 <getpagesize@plt>
    e46c:	ldr	r2, [pc, #120]	; e4ec <lell_pcapng_create_file@@Base+0x100>
    e470:	mov	r3, r0
    e474:	mov	r1, r9
    e478:	mov	r9, #64	; 0x40
    e47c:	mov	r0, r5
    e480:	ldr	r2, [r8, r2]
    e484:	mov	r8, #256	; 0x100
    e488:	strd	r8, [sp]
    e48c:	str	r6, [sp, #8]
    e490:	str	r3, [sp, #12]
    e494:	str	r2, [sp, #20]
    e498:	ldr	r2, [sp, #20]
    e49c:	bl	2218 <pcapng_create@plt>
    e4a0:	subs	r4, r0, #0
    e4a4:	bne	e4c4 <lell_pcapng_create_file@@Base+0xd8>
    e4a8:	mov	r1, r6
    e4ac:	mov	r0, r5
    e4b0:	bl	dfd0 <pcapng_create@@Base+0x410>
    e4b4:	subs	r4, r0, #0
    e4b8:	beq	e4c4 <lell_pcapng_create_file@@Base+0xd8>
    e4bc:	mov	r0, r5
    e4c0:	bl	24b8 <pcapng_close@plt>
    e4c4:	rsb	r4, r4, #0
    e4c8:	cmp	r4, #0
    e4cc:	streq	r5, [r7]
    e4d0:	beq	e4dc <lell_pcapng_create_file@@Base+0xf0>
    e4d4:	mov	r0, r5
    e4d8:	bl	2164 <free@plt>
    e4dc:	mov	r0, r4
    e4e0:	add	sp, sp, #292	; 0x124
    e4e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    e4e8:	andeq	r8, r1, r4, ror #23
    e4ec:	muleq	r0, r8, r1

0000e4f0 <lell_pcapng_record_connect_req@@Base>:
    e4f0:	ldr	r1, [pc, #88]	; e550 <lell_pcapng_record_connect_req@@Base+0x60>
    e4f4:	push	{r4, lr}
    e4f8:	sub	sp, sp, #48	; 0x30
    e4fc:	mov	lr, r0
    e500:	stm	sp, {r1, r2, r3}
    e504:	add	r2, sp, #12
    e508:	ldr	r3, [sp, #56]	; 0x38
    e50c:	add	r4, r3, #32
    e510:	ldr	r0, [r3]
    e514:	mov	ip, r2
    e518:	add	r3, r3, #8
    e51c:	ldr	r1, [r3, #-4]
    e520:	cmp	r3, r4
    e524:	stmia	ip!, {r0, r1}
    e528:	mov	r2, ip
    e52c:	bne	e510 <lell_pcapng_record_connect_req@@Base+0x20>
    e530:	ldrh	r3, [r3]
    e534:	mov	r1, sp
    e538:	mov	r0, lr
    e53c:	strh	r3, [ip]
    e540:	bl	2158 <pcapng_append_interface_option@plt>
    e544:	rsb	r0, r0, #0
    e548:	add	sp, sp, #48	; 0x30
    e54c:	pop	{r4, pc}
    e550:	eoreq	sp, lr, r0, lsl #7

0000e554 <lell_pcapng_append_packet@@Base>:
    e554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e558:	sub	sp, sp, #316	; 0x13c
    e55c:	mov	r7, r3
    e560:	add	r3, sp, #352	; 0x160
    e564:	mov	r6, r0
    e568:	mov	r8, r2
    e56c:	ldrsb	fp, [r3]
    e570:	add	r3, sp, #356	; 0x164
    e574:	ldrsb	sl, [r3]
    e578:	ldr	r5, [sp, #364]	; 0x16c
    e57c:	cmp	sl, fp
    e580:	movlt	r4, #39	; 0x27
    e584:	movge	r4, #35	; 0x23
    e588:	mov	r0, r5
    e58c:	bl	2134 <lell_packet_is_data@plt>
    e590:	cmp	r0, #0
    e594:	ldrb	ip, [r5, #69]	; 0x45
    e598:	movne	r3, #0
    e59c:	moveq	r3, #16
    e5a0:	orr	r3, r4, r3
    e5a4:	ldr	r4, [r5, #72]	; 0x48
    e5a8:	ldrb	r0, [r5, #92]	; 0x5c
    e5ac:	add	r2, r4, #9
    e5b0:	cmp	r2, #255	; 0xff
    e5b4:	bls	e5dc <lell_pcapng_append_packet@@Base+0x88>
    e5b8:	ldr	r3, [pc, #220]	; e69c <lell_pcapng_append_packet@@Base+0x148>
    e5bc:	movw	r2, #441	; 0x1b9
    e5c0:	ldr	r1, [pc, #216]	; e6a0 <lell_pcapng_append_packet@@Base+0x14c>
    e5c4:	ldr	r0, [pc, #216]	; e6a4 <lell_pcapng_append_packet@@Base+0x150>
    e5c8:	add	r3, pc, r3
    e5cc:	add	r3, r3, #34	; 0x22
    e5d0:	add	r1, pc, r1
    e5d4:	add	r0, pc, r0
    e5d8:	bl	2518 <__assert_fail@plt>
    e5dc:	add	r1, r4, #19
    e5e0:	add	r4, r4, #58	; 0x3a
    e5e4:	str	r7, [sp, #20]
    e5e8:	bic	r4, r4, #3
    e5ec:	mov	lr, #6
    e5f0:	mov	r9, #0
    e5f4:	str	r1, [sp, #28]
    e5f8:	str	r1, [sp, #32]
    e5fc:	ldr	r1, [sp, #360]	; 0x168
    e600:	strb	r0, [sp, #39]	; 0x27
    e604:	add	r0, sp, #46	; 0x2e
    e608:	str	lr, [sp, #8]
    e60c:	str	r4, [sp, #12]
    e610:	str	r9, [sp, #16]
    e614:	str	r8, [sp, #24]
    e618:	str	r1, [sp, #40]	; 0x28
    e61c:	mov	r1, r5
    e620:	strb	ip, [sp, #36]	; 0x24
    e624:	strb	fp, [sp, #37]	; 0x25
    e628:	strb	sl, [sp, #38]	; 0x26
    e62c:	add	sl, sp, #8
    e630:	strh	r3, [sp, #44]	; 0x2c
    e634:	bl	2188 <memcpy@plt>
    e638:	add	r3, sp, #312	; 0x138
    e63c:	mov	r1, sl
    e640:	add	r3, r3, r4
    e644:	mov	r0, r6
    e648:	str	r9, [r3, #-312]	; 0xfffffec8
    e64c:	str	r4, [r3, #-308]	; 0xfffffecc
    e650:	bl	23b0 <pcapng_append_packet@plt>
    e654:	rsb	r4, r0, #0
    e658:	cmp	r4, r9
    e65c:	bne	e690 <lell_pcapng_append_packet@@Base+0x13c>
    e660:	mov	r0, r5
    e664:	bl	2134 <lell_packet_is_data@plt>
    e668:	cmp	r0, r9
    e66c:	bne	e690 <lell_pcapng_append_packet@@Base+0x13c>
    e670:	ldrb	r3, [r5, #80]	; 0x50
    e674:	cmp	r3, #5
    e678:	bne	e690 <lell_pcapng_append_packet@@Base+0x13c>
    e67c:	mov	r2, r8
    e680:	mov	r3, r7
    e684:	str	r5, [sp]
    e688:	mov	r0, r6
    e68c:	bl	2380 <lell_pcapng_record_connect_req@plt>
    e690:	mov	r0, r4
    e694:	add	sp, sp, #316	; 0x13c
    e698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e69c:	strdeq	r8, [r0], -r9
    e6a0:	andeq	r8, r0, sp, lsr r5
    e6a4:			; <UNDEFINED> instruction: 0x000085bb

0000e6a8 <lell_pcapng_close@@Base>:
    e6a8:	push	{r4, lr}
    e6ac:	mov	r4, r0
    e6b0:	bl	24b8 <pcapng_close@plt>
    e6b4:	cmp	r4, #0
    e6b8:	beq	e6c4 <lell_pcapng_close@@Base+0x1c>
    e6bc:	mov	r0, r4
    e6c0:	bl	2164 <free@plt>
    e6c4:	mvn	r0, #0
    e6c8:	pop	{r4, pc}
    e6cc:	cmp	r3, #0
    e6d0:	cmpeq	r2, #0
    e6d4:	bne	e6ec <lell_pcapng_close@@Base+0x44>
    e6d8:	cmp	r1, #0
    e6dc:	cmpeq	r0, #0
    e6e0:	mvnne	r1, #0
    e6e4:	mvnne	r0, #0
    e6e8:	b	e708 <lell_pcapng_close@@Base+0x60>
    e6ec:	sub	sp, sp, #8
    e6f0:	push	{sp, lr}
    e6f4:	bl	e77c <lell_pcapng_close@@Base+0xd4>
    e6f8:	ldr	lr, [sp, #4]
    e6fc:	add	sp, sp, #8
    e700:	pop	{r2, r3}
    e704:	bx	lr
    e708:	push	{r1, lr}
    e70c:	mov	r0, #8
    e710:	bl	20d4 <raise@plt>
    e714:	pop	{r1, pc}
    e718:	ldr	ip, [pc, #80]	; e770 <lell_pcapng_close@@Base+0xc8>
    e71c:	ldr	r2, [pc, #80]	; e774 <lell_pcapng_close@@Base+0xcc>
    e720:	and	r3, ip, r0, lsr #1
    e724:	and	ip, ip, r1, lsr #1
    e728:	sub	ip, r1, ip
    e72c:	sub	r0, r0, r3
    e730:	and	r3, r0, r2
    e734:	and	r1, ip, r2
    e738:	and	r0, r2, r0, lsr #2
    e73c:	and	r2, r2, ip, lsr #2
    e740:	add	r3, r3, r0
    e744:	add	r1, r1, r2
    e748:	ldr	r0, [pc, #40]	; e778 <lell_pcapng_close@@Base+0xd0>
    e74c:	add	r1, r1, r1, lsr #4
    e750:	add	r3, r3, r3, lsr #4
    e754:	and	r3, r3, r0
    e758:	and	r0, r0, r1
    e75c:	add	r0, r0, r3
    e760:	add	r0, r0, r0, lsl #8
    e764:	add	r0, r0, r0, lsl #16
    e768:	lsr	r0, r0, #24
    e76c:	bx	lr
    e770:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
    e774:	teqcc	r3, #-872415232	; 0xcc000000
    e778:	svceq	0x000f0f0f
    e77c:	cmp	r1, r3
    e780:	cmpeq	r0, r2
    e784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e788:	mov	r4, r0
    e78c:	movcc	r0, #0
    e790:	mov	r5, r1
    e794:	ldr	lr, [sp, #36]	; 0x24
    e798:	movcc	r1, r0
    e79c:	bcc	e898 <lell_pcapng_close@@Base+0x1f0>
    e7a0:	cmp	r3, #0
    e7a4:	clzeq	ip, r2
    e7a8:	clzne	ip, r3
    e7ac:	addeq	ip, ip, #32
    e7b0:	cmp	r5, #0
    e7b4:	clzeq	r1, r4
    e7b8:	addeq	r1, r1, #32
    e7bc:	clzne	r1, r5
    e7c0:	sub	ip, ip, r1
    e7c4:	sub	sl, ip, #32
    e7c8:	lsl	r9, r3, ip
    e7cc:	rsb	fp, ip, #32
    e7d0:	orr	r9, r9, r2, lsl sl
    e7d4:	orr	r9, r9, r2, lsr fp
    e7d8:	lsl	r8, r2, ip
    e7dc:	cmp	r5, r9
    e7e0:	cmpeq	r4, r8
    e7e4:	movcc	r0, #0
    e7e8:	movcc	r1, r0
    e7ec:	bcc	e808 <lell_pcapng_close@@Base+0x160>
    e7f0:	mov	r0, #1
    e7f4:	subs	r4, r4, r8
    e7f8:	lsl	r1, r0, sl
    e7fc:	orr	r1, r1, r0, lsr fp
    e800:	lsl	r0, r0, ip
    e804:	sbc	r5, r5, r9
    e808:	cmp	ip, #0
    e80c:	beq	e898 <lell_pcapng_close@@Base+0x1f0>
    e810:	lsr	r6, r8, #1
    e814:	orr	r6, r6, r9, lsl #31
    e818:	lsr	r7, r9, #1
    e81c:	mov	r2, ip
    e820:	b	e844 <lell_pcapng_close@@Base+0x19c>
    e824:	subs	r3, r4, r6
    e828:	sbc	r8, r5, r7
    e82c:	adds	r3, r3, r3
    e830:	adc	r8, r8, r8
    e834:	adds	r4, r3, #1
    e838:	adc	r5, r8, #0
    e83c:	subs	r2, r2, #1
    e840:	beq	e860 <lell_pcapng_close@@Base+0x1b8>
    e844:	cmp	r5, r7
    e848:	cmpeq	r4, r6
    e84c:	bcs	e824 <lell_pcapng_close@@Base+0x17c>
    e850:	adds	r4, r4, r4
    e854:	adc	r5, r5, r5
    e858:	subs	r2, r2, #1
    e85c:	bne	e844 <lell_pcapng_close@@Base+0x19c>
    e860:	lsr	r3, r4, ip
    e864:	orr	r3, r3, r5, lsl fp
    e868:	lsr	r2, r5, ip
    e86c:	orr	r3, r3, r5, lsr sl
    e870:	adds	r0, r0, r4
    e874:	mov	r4, r3
    e878:	lsl	r3, r2, ip
    e87c:	orr	r3, r3, r4, lsl sl
    e880:	lsl	ip, r4, ip
    e884:	orr	r3, r3, r4, lsr fp
    e888:	adc	r1, r1, r5
    e88c:	subs	r0, r0, ip
    e890:	mov	r5, r2
    e894:	sbc	r1, r1, r3
    e898:	cmp	lr, #0
    e89c:	strdne	r4, [lr]
    e8a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

0000e8a4 <.fini>:
    e8a4:	push	{r3, lr}
    e8a8:	pop	{r3, pc}
