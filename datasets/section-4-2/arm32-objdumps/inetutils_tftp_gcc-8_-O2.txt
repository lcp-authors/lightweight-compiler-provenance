
../repos/inetutils/src/tftp:     file format elf32-littlearm


Disassembly of section .init:

00011194 <.init>:
   11194:	push	{r3, lr}
   11198:	bl	117d8 <__assert_fail@plt+0x2a0>
   1119c:	pop	{r3, pc}

Disassembly of section .plt:

000111a0 <fdopen@plt-0x14>:
   111a0:	push	{lr}		; (str lr, [sp, #-4]!)
   111a4:	ldr	lr, [pc, #4]	; 111b0 <fdopen@plt-0x4>
   111a8:	add	lr, pc, lr
   111ac:	ldr	pc, [lr, #8]!
   111b0:	andeq	sl, r1, r0, asr lr

000111b4 <fdopen@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #106496	; 0x1a000
   111bc:	ldr	pc, [ip, #3664]!	; 0xe50

000111c0 <calloc@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #106496	; 0x1a000
   111c8:	ldr	pc, [ip, #3656]!	; 0xe48

000111cc <fputs_unlocked@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #106496	; 0x1a000
   111d4:	ldr	pc, [ip, #3648]!	; 0xe40

000111d8 <strcmp@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #106496	; 0x1a000
   111e0:	ldr	pc, [ip, #3640]!	; 0xe38

000111e4 <strtol@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #106496	; 0x1a000
   111ec:	ldr	pc, [ip, #3632]!	; 0xe30

000111f0 <printf@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #106496	; 0x1a000
   111f8:	ldr	pc, [ip, #3624]!	; 0xe28

000111fc <read@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #106496	; 0x1a000
   11204:	ldr	pc, [ip, #3616]!	; 0xe20

00011208 <longjmp@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #106496	; 0x1a000
   11210:	ldr	pc, [ip, #3608]!	; 0xe18

00011214 <_setjmp@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #106496	; 0x1a000
   1121c:	ldr	pc, [ip, #3600]!	; 0xe10

00011220 <memmove@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #106496	; 0x1a000
   11228:	ldr	pc, [ip, #3592]!	; 0xe08

0001122c <strchrnul@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #106496	; 0x1a000
   11234:	ldr	pc, [ip, #3584]!	; 0xe00

00011238 <free@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #106496	; 0x1a000
   11240:	ldr	pc, [ip, #3576]!	; 0xdf8

00011244 <gai_strerror@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #106496	; 0x1a000
   1124c:	ldr	pc, [ip, #3568]!	; 0xdf0

00011250 <fgets@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #106496	; 0x1a000
   11258:	ldr	pc, [ip, #3560]!	; 0xde8

0001125c <strndup@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #106496	; 0x1a000
   11264:	ldr	pc, [ip, #3552]!	; 0xde0

00011268 <memcpy@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #106496	; 0x1a000
   11270:	ldr	pc, [ip, #3544]!	; 0xdd8

00011274 <signal@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #106496	; 0x1a000
   1127c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011280 <fwrite_unlocked@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #106496	; 0x1a000
   11288:	ldr	pc, [ip, #3528]!	; 0xdc8

0001128c <sleep@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #106496	; 0x1a000
   11294:	ldr	pc, [ip, #3520]!	; 0xdc0

00011298 <recvfrom@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #106496	; 0x1a000
   112a0:	ldr	pc, [ip, #3512]!	; 0xdb8

000112a4 <alarm@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #106496	; 0x1a000
   112ac:	ldr	pc, [ip, #3504]!	; 0xdb0

000112b0 <realloc@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #106496	; 0x1a000
   112b8:	ldr	pc, [ip, #3496]!	; 0xda8

000112bc <strcasecmp@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #106496	; 0x1a000
   112c4:	ldr	pc, [ip, #3488]!	; 0xda0

000112c8 <funlockfile@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #106496	; 0x1a000
   112d0:	ldr	pc, [ip, #3480]!	; 0xd98

000112d4 <perror@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #106496	; 0x1a000
   112dc:	ldr	pc, [ip, #3472]!	; 0xd90

000112e0 <fwrite@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #106496	; 0x1a000
   112e8:	ldr	pc, [ip, #3464]!	; 0xd88

000112ec <ioctl@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #106496	; 0x1a000
   112f4:	ldr	pc, [ip, #3456]!	; 0xd80

000112f8 <strcpy@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #106496	; 0x1a000
   11300:	ldr	pc, [ip, #3448]!	; 0xd78

00011304 <gettimeofday@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #106496	; 0x1a000
   1130c:	ldr	pc, [ip, #3440]!	; 0xd70

00011310 <creat64@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #106496	; 0x1a000
   11318:	ldr	pc, [ip, #3432]!	; 0xd68

0001131c <error@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #106496	; 0x1a000
   11324:	ldr	pc, [ip, #3424]!	; 0xd60

00011328 <open64@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #106496	; 0x1a000
   11330:	ldr	pc, [ip, #3416]!	; 0xd58

00011334 <getenv@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #106496	; 0x1a000
   1133c:	ldr	pc, [ip, #3408]!	; 0xd50

00011340 <puts@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #106496	; 0x1a000
   11348:	ldr	pc, [ip, #3400]!	; 0xd48

0001134c <malloc@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #106496	; 0x1a000
   11354:	ldr	pc, [ip, #3392]!	; 0xd40

00011358 <__libc_start_main@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #106496	; 0x1a000
   11360:	ldr	pc, [ip, #3384]!	; 0xd38

00011364 <strerror@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #106496	; 0x1a000
   1136c:	ldr	pc, [ip, #3376]!	; 0xd30

00011370 <__ctype_tolower_loc@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #106496	; 0x1a000
   11378:	ldr	pc, [ip, #3368]!	; 0xd28

0001137c <__gmon_start__@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #106496	; 0x1a000
   11384:	ldr	pc, [ip, #3360]!	; 0xd20

00011388 <mempcpy@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #106496	; 0x1a000
   11390:	ldr	pc, [ip, #3352]!	; 0xd18

00011394 <__ctype_b_loc@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #106496	; 0x1a000
   1139c:	ldr	pc, [ip, #3344]!	; 0xd10

000113a0 <exit@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #106496	; 0x1a000
   113a8:	ldr	pc, [ip, #3336]!	; 0xd08

000113ac <feof@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #106496	; 0x1a000
   113b4:	ldr	pc, [ip, #3328]!	; 0xd00

000113b8 <strlen@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #106496	; 0x1a000
   113c0:	ldr	pc, [ip, #3320]!	; 0xcf8

000113c4 <strchr@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #106496	; 0x1a000
   113cc:	ldr	pc, [ip, #3312]!	; 0xcf0

000113d0 <fprintf@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #106496	; 0x1a000
   113d8:	ldr	pc, [ip, #3304]!	; 0xce8

000113dc <__errno_location@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #106496	; 0x1a000
   113e4:	ldr	pc, [ip, #3296]!	; 0xce0

000113e8 <getservbyname@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #106496	; 0x1a000
   113f0:	ldr	pc, [ip, #3288]!	; 0xcd8

000113f4 <strerror_r@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #106496	; 0x1a000
   113fc:	ldr	pc, [ip, #3280]!	; 0xcd0

00011400 <bind@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #106496	; 0x1a000
   11408:	ldr	pc, [ip, #3272]!	; 0xcc8

0001140c <memset@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #106496	; 0x1a000
   11414:	ldr	pc, [ip, #3264]!	; 0xcc0

00011418 <strncpy@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #106496	; 0x1a000
   11420:	ldr	pc, [ip, #3256]!	; 0xcb8

00011424 <write@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #106496	; 0x1a000
   1142c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011430 <fileno@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #106496	; 0x1a000
   11438:	ldr	pc, [ip, #3240]!	; 0xca8

0001143c <memchr@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #106496	; 0x1a000
   11444:	ldr	pc, [ip, #3232]!	; 0xca0

00011448 <fclose@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #106496	; 0x1a000
   11450:	ldr	pc, [ip, #3224]!	; 0xc98

00011454 <fseeko64@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #106496	; 0x1a000
   1145c:	ldr	pc, [ip, #3216]!	; 0xc90

00011460 <sendto@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #106496	; 0x1a000
   11468:	ldr	pc, [ip, #3208]!	; 0xc88

0001146c <__overflow@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #106496	; 0x1a000
   11474:	ldr	pc, [ip, #3200]!	; 0xc80

00011478 <setlocale@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #106496	; 0x1a000
   11480:	ldr	pc, [ip, #3192]!	; 0xc78

00011484 <strrchr@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #106496	; 0x1a000
   1148c:	ldr	pc, [ip, #3184]!	; 0xc70

00011490 <vfprintf@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #106496	; 0x1a000
   11498:	ldr	pc, [ip, #3176]!	; 0xc68

0001149c <fputc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #106496	; 0x1a000
   114a4:	ldr	pc, [ip, #3168]!	; 0xc60

000114a8 <putc@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #106496	; 0x1a000
   114b0:	ldr	pc, [ip, #3160]!	; 0xc58

000114b4 <flockfile@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #106496	; 0x1a000
   114bc:	ldr	pc, [ip, #3152]!	; 0xc50

000114c0 <vsnprintf@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #106496	; 0x1a000
   114c8:	ldr	pc, [ip, #3144]!	; 0xc48

000114cc <qsort@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #106496	; 0x1a000
   114d4:	ldr	pc, [ip, #3136]!	; 0xc40

000114d8 <freeaddrinfo@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #106496	; 0x1a000
   114e0:	ldr	pc, [ip, #3128]!	; 0xc38

000114e4 <getaddrinfo@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #106496	; 0x1a000
   114ec:	ldr	pc, [ip, #3120]!	; 0xc30

000114f0 <socket@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #106496	; 0x1a000
   114f8:	ldr	pc, [ip, #3112]!	; 0xc28

000114fc <isatty@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #106496	; 0x1a000
   11504:	ldr	pc, [ip, #3104]!	; 0xc20

00011508 <strncmp@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #106496	; 0x1a000
   11510:	ldr	pc, [ip, #3096]!	; 0xc18

00011514 <abort@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #106496	; 0x1a000
   1151c:	ldr	pc, [ip, #3088]!	; 0xc10

00011520 <getc@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #106496	; 0x1a000
   11528:	ldr	pc, [ip, #3080]!	; 0xc08

0001152c <close@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #106496	; 0x1a000
   11534:	ldr	pc, [ip, #3072]!	; 0xc00

00011538 <__assert_fail@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #106496	; 0x1a000
   11540:	ldr	pc, [ip, #3064]!	; 0xbf8

Disassembly of section .text:

00011548 <argp_failure@@Base-0x456c>:
   11548:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1154c:	mov	r5, r1
   11550:	movw	r4, #43392	; 0xa980
   11554:	movt	r4, #1
   11558:	strd	r6, [sp, #8]
   1155c:	mov	r6, r0
   11560:	str	r8, [sp, #16]
   11564:	str	lr, [sp, #20]
   11568:	sub	sp, sp, #8
   1156c:	ldr	r0, [r1]
   11570:	bl	1880c <argp_parse@@Base+0x1140>
   11574:	movw	r1, #47444	; 0xb954
   11578:	movt	r1, #1
   1157c:	mov	r0, #6
   11580:	bl	11478 <setlocale@plt>
   11584:	movw	r3, #53180	; 0xcfbc
   11588:	movt	r3, #2
   1158c:	movw	ip, #43756	; 0xaaec
   11590:	movt	ip, #1
   11594:	mov	r0, r4
   11598:	movw	r1, #50172	; 0xc3fc
   1159c:	movt	r1, #2
   115a0:	str	ip, [r3]
   115a4:	bl	185d4 <argp_parse@@Base+0xf08>
   115a8:	mov	ip, #0
   115ac:	mov	r2, r5
   115b0:	ldr	r0, [pc, #480]	; 11798 <__assert_fail@plt+0x260>
   115b4:	mov	r3, ip
   115b8:	mov	r1, r6
   115bc:	str	ip, [sp]
   115c0:	str	ip, [sp, #4]
   115c4:	bl	176cc <argp_parse@@Base>
   115c8:	mov	r0, r4
   115cc:	movw	r1, #43572	; 0xaa34
   115d0:	movt	r1, #1
   115d4:	bl	113e8 <getservbyname@plt>
   115d8:	cmp	r0, #0
   115dc:	moveq	r3, #69	; 0x45
   115e0:	beq	115f0 <__assert_fail@plt+0xb8>
   115e4:	ldr	r3, [r0, #8]
   115e8:	rev16	r3, r3
   115ec:	uxth	r3, r3
   115f0:	movw	r4, #50276	; 0xc464
   115f4:	movt	r4, #2
   115f8:	mov	r0, #0
   115fc:	str	r3, [r4, #144]	; 0x90
   11600:	bl	114fc <isatty@plt>
   11604:	movw	r2, #43660	; 0xaa8c
   11608:	movt	r2, #1
   1160c:	str	r0, [r4, #148]	; 0x94
   11610:	ldrb	lr, [r2, #8]
   11614:	movw	r3, #51908	; 0xcac4
   11618:	movt	r3, #2
   1161c:	movw	r1, #8632	; 0x21b8
   11620:	movt	r1, #1
   11624:	ldr	ip, [r2]
   11628:	mov	r0, #2
   1162c:	ldr	r2, [r2, #4]
   11630:	str	ip, [r3]
   11634:	strb	lr, [r3, #8]
   11638:	str	r2, [r3, #4]
   1163c:	bl	11274 <signal@plt>
   11640:	movw	r3, #49480	; 0xc148
   11644:	movt	r3, #2
   11648:	ldr	r3, [r3, #84]	; 0x54
   1164c:	cmp	r3, #1
   11650:	ble	11684 <__assert_fail@plt+0x14c>
   11654:	movw	r0, #51488	; 0xc920
   11658:	movt	r0, #2
   1165c:	bl	11214 <_setjmp@plt>
   11660:	cmp	r0, #0
   11664:	beq	11670 <__assert_fail@plt+0x138>
   11668:	mov	r0, #0
   1166c:	bl	113a0 <exit@plt>
   11670:	movw	r3, #49480	; 0xc148
   11674:	movt	r3, #2
   11678:	add	r1, r3, #88	; 0x58
   1167c:	ldr	r0, [r3, #84]	; 0x54
   11680:	bl	1207c <__assert_fail@plt+0xb44>
   11684:	movw	r0, #51488	; 0xc920
   11688:	movt	r0, #2
   1168c:	bl	11214 <_setjmp@plt>
   11690:	cmp	r0, #0
   11694:	beq	116ac <__assert_fail@plt+0x174>
   11698:	movw	r3, #50268	; 0xc45c
   1169c:	movt	r3, #2
   116a0:	mov	r0, #10
   116a4:	ldr	r1, [r3]
   116a8:	bl	114a8 <putc@plt>
   116ac:	movw	r6, #50276	; 0xc464
   116b0:	movt	r6, #2
   116b4:	movw	r8, #49480	; 0xc148
   116b8:	movt	r8, #2
   116bc:	movw	r7, #43780	; 0xab04
   116c0:	movt	r7, #1
   116c4:	ldr	r3, [r6, #148]	; 0x94
   116c8:	cmp	r3, #0
   116cc:	bne	11754 <__assert_fail@plt+0x21c>
   116d0:	movw	r5, #50264	; 0xc458
   116d4:	movt	r5, #2
   116d8:	movw	r4, #51940	; 0xcae4
   116dc:	movt	r4, #2
   116e0:	ldr	r2, [r5]
   116e4:	mov	r0, r4
   116e8:	mov	r1, #200	; 0xc8
   116ec:	bl	11250 <fgets@plt>
   116f0:	cmp	r0, #0
   116f4:	beq	11764 <__assert_fail@plt+0x22c>
   116f8:	ldrb	r3, [r4]
   116fc:	cmp	r3, #0
   11700:	beq	116c4 <__assert_fail@plt+0x18c>
   11704:	bl	11ad0 <__assert_fail@plt+0x598>
   11708:	movw	r3, #51900	; 0xcabc
   1170c:	movt	r3, #2
   11710:	ldr	r4, [r3]
   11714:	cmp	r4, #0
   11718:	beq	116c4 <__assert_fail@plt+0x18c>
   1171c:	movw	r5, #51408	; 0xc8d0
   11720:	movt	r5, #2
   11724:	ldr	r0, [r5]
   11728:	bl	126ec <__assert_fail@plt+0x11b4>
   1172c:	cmn	r0, #1
   11730:	mov	r3, r0
   11734:	beq	11778 <__assert_fail@plt+0x240>
   11738:	cmp	r0, #0
   1173c:	beq	11788 <__assert_fail@plt+0x250>
   11740:	mov	r1, r5
   11744:	mov	r0, r4
   11748:	ldr	r3, [r3, #8]
   1174c:	blx	r3
   11750:	b	116c4 <__assert_fail@plt+0x18c>
   11754:	mov	r0, r7
   11758:	ldr	r1, [r8, #344]	; 0x158
   1175c:	bl	111f0 <printf@plt>
   11760:	b	116d0 <__assert_fail@plt+0x198>
   11764:	ldr	r0, [r5]
   11768:	bl	113ac <feof@plt>
   1176c:	cmp	r0, #0
   11770:	bne	11668 <__assert_fail@plt+0x130>
   11774:	b	116c4 <__assert_fail@plt+0x18c>
   11778:	movw	r0, #43788	; 0xab0c
   1177c:	movt	r0, #1
   11780:	bl	11340 <puts@plt>
   11784:	b	116c4 <__assert_fail@plt+0x18c>
   11788:	movw	r0, #43808	; 0xab20
   1178c:	movt	r0, #1
   11790:	bl	11340 <puts@plt>
   11794:	b	116c4 <__assert_fail@plt+0x18c>
   11798:	andeq	ip, r2, r4, lsl #5
   1179c:	mov	fp, #0
   117a0:	mov	lr, #0
   117a4:	pop	{r1}		; (ldr r1, [sp], #4)
   117a8:	mov	r2, sp
   117ac:	push	{r2}		; (str r2, [sp, #-4]!)
   117b0:	push	{r0}		; (str r0, [sp, #-4]!)
   117b4:	ldr	ip, [pc, #16]	; 117cc <__assert_fail@plt+0x294>
   117b8:	push	{ip}		; (str ip, [sp, #-4]!)
   117bc:	ldr	r0, [pc, #12]	; 117d0 <__assert_fail@plt+0x298>
   117c0:	ldr	r3, [pc, #12]	; 117d4 <__assert_fail@plt+0x29c>
   117c4:	bl	11358 <__libc_start_main@plt>
   117c8:	bl	11514 <abort@plt>
   117cc:	ldrdeq	sl, [r1], -ip
   117d0:	andeq	r1, r1, r8, asr #10
   117d4:	andeq	sl, r1, ip, ror r7
   117d8:	ldr	r3, [pc, #20]	; 117f4 <__assert_fail@plt+0x2bc>
   117dc:	ldr	r2, [pc, #20]	; 117f8 <__assert_fail@plt+0x2c0>
   117e0:	add	r3, pc, r3
   117e4:	ldr	r2, [r3, r2]
   117e8:	cmp	r2, #0
   117ec:	bxeq	lr
   117f0:	b	1137c <__gmon_start__@plt>
   117f4:	andeq	sl, r1, r8, lsl r8
   117f8:	andeq	r0, r0, ip, lsr r1
   117fc:	ldr	r0, [pc, #24]	; 1181c <__assert_fail@plt+0x2e4>
   11800:	ldr	r3, [pc, #24]	; 11820 <__assert_fail@plt+0x2e8>
   11804:	cmp	r3, r0
   11808:	bxeq	lr
   1180c:	ldr	r3, [pc, #16]	; 11824 <__assert_fail@plt+0x2ec>
   11810:	cmp	r3, #0
   11814:	bxeq	lr
   11818:	bx	r3
   1181c:	andeq	ip, r2, r4, asr #8
   11820:	andeq	ip, r2, r4, asr #8
   11824:	andeq	r0, r0, r0
   11828:	ldr	r0, [pc, #36]	; 11854 <__assert_fail@plt+0x31c>
   1182c:	ldr	r1, [pc, #36]	; 11858 <__assert_fail@plt+0x320>
   11830:	sub	r1, r1, r0
   11834:	asr	r1, r1, #2
   11838:	add	r1, r1, r1, lsr #31
   1183c:	asrs	r1, r1, #1
   11840:	bxeq	lr
   11844:	ldr	r3, [pc, #16]	; 1185c <__assert_fail@plt+0x324>
   11848:	cmp	r3, #0
   1184c:	bxeq	lr
   11850:	bx	r3
   11854:	andeq	ip, r2, r4, asr #8
   11858:	andeq	ip, r2, r4, asr #8
   1185c:	andeq	r0, r0, r0
   11860:	push	{r4, lr}
   11864:	ldr	r4, [pc, #24]	; 11884 <__assert_fail@plt+0x34c>
   11868:	ldrb	r3, [r4]
   1186c:	cmp	r3, #0
   11870:	popne	{r4, pc}
   11874:	bl	117fc <__assert_fail@plt+0x2c4>
   11878:	mov	r3, #1
   1187c:	strb	r3, [r4]
   11880:	pop	{r4, pc}
   11884:	andeq	ip, r2, r0, ror #8
   11888:	b	11828 <__assert_fail@plt+0x2f0>
   1188c:	andeq	r0, r0, r0
   11890:	mov	r0, #0
   11894:	str	r4, [sp, #-8]!
   11898:	str	lr, [sp, #4]
   1189c:	bl	113a0 <exit@plt>
   118a0:	movw	r3, #50276	; 0xc464
   118a4:	movt	r3, #2
   118a8:	ldr	ip, [r3]
   118ac:	movw	r2, #43068	; 0xa83c
   118b0:	movt	r2, #1
   118b4:	movw	r1, #44496	; 0xadd0
   118b8:	movt	r1, #1
   118bc:	movw	r0, #43072	; 0xa840
   118c0:	movt	r0, #1
   118c4:	cmp	ip, #0
   118c8:	moveq	ip, #1
   118cc:	movne	ip, #0
   118d0:	movne	r1, r2
   118d4:	str	ip, [r3]
   118d8:	b	111f0 <printf@plt>
   118dc:	movw	r3, #50276	; 0xc464
   118e0:	movt	r3, #2
   118e4:	ldr	ip, [r3, #4]
   118e8:	movw	r2, #43068	; 0xa83c
   118ec:	movt	r2, #1
   118f0:	movw	r1, #44496	; 0xadd0
   118f4:	movt	r1, #1
   118f8:	movw	r0, #43092	; 0xa854
   118fc:	movt	r0, #1
   11900:	cmp	ip, #0
   11904:	moveq	ip, #1
   11908:	movne	ip, #0
   1190c:	movne	r1, r2
   11910:	str	ip, [r3, #4]
   11914:	b	111f0 <printf@plt>
   11918:	strd	r4, [sp, #-12]!
   1191c:	movw	r5, #51892	; 0xcab4
   11920:	movt	r5, #2
   11924:	movw	ip, #46473	; 0xb589
   11928:	movt	ip, #5368	; 0x14f8
   1192c:	vldr	d5, [pc, #228]	; 11a18 <__assert_fail@plt+0x4e0>
   11930:	mov	r4, r1
   11934:	mov	r1, r0
   11938:	vldr	s6, [r5]
   1193c:	ldr	r3, [r5, #4]
   11940:	str	lr, [sp, #8]
   11944:	movw	lr, #51884	; 0xcaac
   11948:	movt	lr, #2
   1194c:	vpush	{d8}
   11950:	sub	sp, sp, #12
   11954:	ldr	r2, [lr, #4]
   11958:	vcvt.f64.s32	d3, s6
   1195c:	smull	r0, r5, ip, r3
   11960:	vldr	s8, [lr]
   11964:	asr	r3, r3, #31
   11968:	smull	r0, ip, ip, r2
   1196c:	asr	r0, r2, #31
   11970:	mov	r2, r4
   11974:	rsb	r3, r3, r5, asr #13
   11978:	rsb	r0, r0, ip, asr #13
   1197c:	vcvt.f64.s32	d4, s8
   11980:	vmov	s15, r3
   11984:	vmov	s14, r0
   11988:	movw	r0, #43112	; 0xa868
   1198c:	movt	r0, #1
   11990:	vcvt.f64.s32	d6, s15
   11994:	vcvt.f64.s32	d7, s14
   11998:	vmla.f64	d6, d3, d5
   1199c:	vmla.f64	d7, d4, d5
   119a0:	vsub.f64	d7, d6, d7
   119a4:	vdiv.f64	d8, d7, d5
   119a8:	vstr	d8, [sp]
   119ac:	bl	111f0 <printf@plt>
   119b0:	movw	r3, #50276	; 0xc464
   119b4:	movt	r3, #2
   119b8:	ldr	r3, [r3, #4]
   119bc:	cmp	r3, #0
   119c0:	bne	119ec <__assert_fail@plt+0x4b4>
   119c4:	movw	r3, #50268	; 0xc45c
   119c8:	movt	r3, #2
   119cc:	ldr	r1, [r3]
   119d0:	mov	r0, #10
   119d4:	add	sp, sp, #12
   119d8:	vpop	{d8}
   119dc:	ldrd	r4, [sp]
   119e0:	ldr	lr, [sp, #8]
   119e4:	add	sp, sp, #12
   119e8:	b	114a8 <putc@plt>
   119ec:	vmov	s15, r4
   119f0:	movw	r0, #43140	; 0xa884
   119f4:	movt	r0, #1
   119f8:	vldr	d6, [pc, #32]	; 11a20 <__assert_fail@plt+0x4e8>
   119fc:	vcvt.f64.u32	d7, s15
   11a00:	vmul.f64	d7, d7, d6
   11a04:	vdiv.f64	d7, d7, d8
   11a08:	vmov	r2, r3, d7
   11a0c:	bl	111f0 <printf@plt>
   11a10:	b	119c4 <__assert_fail@plt+0x48c>
   11a14:	nop	{0}
   11a18:	andeq	r0, r0, r0
   11a1c:	eormi	r0, r4, r0
   11a20:	andeq	r0, r0, r0
   11a24:	eormi	r0, r0, r0
   11a28:	str	r4, [sp, #-8]!
   11a2c:	movw	r4, #50276	; 0xc464
   11a30:	movt	r4, #2
   11a34:	ldr	r3, [r4, #8]
   11a38:	str	lr, [sp, #4]
   11a3c:	cmp	r3, #0
   11a40:	beq	11ac0 <__assert_fail@plt+0x588>
   11a44:	movw	r3, #51904	; 0xcac0
   11a48:	movt	r3, #2
   11a4c:	movw	r0, #43160	; 0xa898
   11a50:	movt	r0, #1
   11a54:	ldr	r1, [r3]
   11a58:	bl	111f0 <printf@plt>
   11a5c:	ldm	r4, {r3, lr}
   11a60:	movw	r2, #44496	; 0xadd0
   11a64:	movt	r2, #1
   11a68:	movw	ip, #43068	; 0xa83c
   11a6c:	movt	ip, #1
   11a70:	movw	r1, #51908	; 0xcac4
   11a74:	movt	r1, #2
   11a78:	movw	r0, #43196	; 0xa8bc
   11a7c:	movt	r0, #1
   11a80:	cmp	r3, #0
   11a84:	movne	r3, r2
   11a88:	moveq	r3, ip
   11a8c:	cmp	lr, #0
   11a90:	moveq	r2, ip
   11a94:	bl	111f0 <printf@plt>
   11a98:	movw	r3, #49480	; 0xc148
   11a9c:	movt	r3, #2
   11aa0:	ldr	r4, [sp]
   11aa4:	movw	r0, #43232	; 0xa8e0
   11aa8:	movt	r0, #1
   11aac:	ldr	r2, [r3]
   11ab0:	ldr	lr, [sp, #4]
   11ab4:	add	sp, sp, #8
   11ab8:	ldr	r1, [r3, #4]
   11abc:	b	111f0 <printf@plt>
   11ac0:	movw	r0, #43180	; 0xa8ac
   11ac4:	movt	r0, #1
   11ac8:	bl	11340 <puts@plt>
   11acc:	b	11a5c <__assert_fail@plt+0x524>
   11ad0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ad4:	mov	r5, #0
   11ad8:	strd	r6, [sp, #8]
   11adc:	movw	r7, #51940	; 0xcae4
   11ae0:	movt	r7, #2
   11ae4:	str	r8, [sp, #16]
   11ae8:	movw	r6, #51900	; 0xcabc
   11aec:	movt	r6, #2
   11af0:	str	lr, [sp, #20]
   11af4:	ldrb	r4, [r7]
   11af8:	str	r5, [r6]
   11afc:	cmp	r4, r5
   11b00:	movweq	r7, #51408	; 0xc8d0
   11b04:	movteq	r7, #2
   11b08:	beq	11b7c <__assert_fail@plt+0x644>
   11b0c:	bl	11394 <__ctype_b_loc@plt>
   11b10:	mov	r8, r5
   11b14:	mov	r3, r7
   11b18:	mov	lr, r5
   11b1c:	movw	r7, #51408	; 0xc8d0
   11b20:	movt	r7, #2
   11b24:	ldr	r1, [r0]
   11b28:	b	11b30 <__assert_fail@plt+0x5f8>
   11b2c:	ldrb	r4, [r3, #1]!
   11b30:	lsl	r2, r4, #1
   11b34:	ldrh	r2, [r1, r2]
   11b38:	tst	r2, #8192	; 0x2000
   11b3c:	bne	11b2c <__assert_fail@plt+0x5f4>
   11b40:	cmp	r4, #0
   11b44:	beq	11bb4 <__assert_fail@plt+0x67c>
   11b48:	add	r5, r5, #1
   11b4c:	str	r3, [r7], #4
   11b50:	b	11b64 <__assert_fail@plt+0x62c>
   11b54:	ldrh	r2, [r1, lr]
   11b58:	tst	r2, #8192	; 0x2000
   11b5c:	bne	11b98 <__assert_fail@plt+0x660>
   11b60:	mov	r3, ip
   11b64:	ldrb	r2, [r3, #1]
   11b68:	add	ip, r3, #1
   11b6c:	cmp	r2, #0
   11b70:	lsl	lr, r2, #1
   11b74:	bne	11b54 <__assert_fail@plt+0x61c>
   11b78:	str	r5, [r6]
   11b7c:	mov	r3, #0
   11b80:	ldrd	r4, [sp]
   11b84:	ldr	r8, [sp, #16]
   11b88:	str	r3, [r7]
   11b8c:	ldrd	r6, [sp, #8]
   11b90:	add	sp, sp, #20
   11b94:	pop	{pc}		; (ldr pc, [sp], #4)
   11b98:	ldrb	r4, [ip, #1]
   11b9c:	add	r3, r3, #2
   11ba0:	mov	lr, #1
   11ba4:	strb	r8, [ip]
   11ba8:	cmp	r4, #0
   11bac:	bne	11b24 <__assert_fail@plt+0x5ec>
   11bb0:	b	11b78 <__assert_fail@plt+0x640>
   11bb4:	cmp	lr, #0
   11bb8:	bne	11b78 <__assert_fail@plt+0x640>
   11bbc:	b	11b7c <__assert_fail@plt+0x644>
   11bc0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11bc4:	movw	r4, #51940	; 0xcae4
   11bc8:	movt	r4, #2
   11bcc:	strd	r6, [sp, #8]
   11bd0:	mov	r7, r2
   11bd4:	mov	r6, r0
   11bd8:	strd	r8, [sp, #16]
   11bdc:	mov	r9, r1
   11be0:	mov	r8, r3
   11be4:	str	sl, [sp, #24]
   11be8:	str	lr, [sp, #28]
   11bec:	bl	113b8 <strlen@plt>
   11bf0:	mov	r5, r0
   11bf4:	mov	r2, r0
   11bf8:	mov	r1, r6
   11bfc:	mov	r0, r4
   11c00:	bl	11268 <memcpy@plt>
   11c04:	movw	r3, #43508	; 0xa9f4
   11c08:	movt	r3, #1
   11c0c:	ldrh	r3, [r3]
   11c10:	mov	r1, r9
   11c14:	movw	r0, #43288	; 0xa918
   11c18:	movt	r0, #1
   11c1c:	strh	r3, [r5, r4]
   11c20:	bl	111f0 <printf@plt>
   11c24:	add	r0, r5, #1
   11c28:	movw	r3, #50264	; 0xc458
   11c2c:	movt	r3, #2
   11c30:	add	r0, r4, r0
   11c34:	rsb	r1, r5, #199	; 0xc7
   11c38:	ldr	r2, [r3]
   11c3c:	bl	11250 <fgets@plt>
   11c40:	cmp	r0, #0
   11c44:	beq	11c80 <__assert_fail@plt+0x748>
   11c48:	bl	11ad0 <__assert_fail@plt+0x598>
   11c4c:	movw	r3, #51900	; 0xcabc
   11c50:	movt	r3, #2
   11c54:	ldr	r2, [r3]
   11c58:	movw	r3, #51408	; 0xc8d0
   11c5c:	movt	r3, #2
   11c60:	str	r2, [r7]
   11c64:	str	r3, [r8]
   11c68:	ldrd	r4, [sp]
   11c6c:	ldrd	r6, [sp, #8]
   11c70:	ldrd	r8, [sp, #16]
   11c74:	ldr	sl, [sp, #24]
   11c78:	add	sp, sp, #28
   11c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11c80:	ldr	r2, [r8]
   11c84:	mov	r3, #1
   11c88:	str	r6, [r2]
   11c8c:	str	r3, [r7]
   11c90:	b	11c68 <__assert_fail@plt+0x730>
   11c94:	strd	r4, [sp, #-16]!
   11c98:	mov	r5, r1
   11c9c:	ldrsh	r4, [r1]
   11ca0:	str	r6, [sp, #8]
   11ca4:	str	lr, [sp, #12]
   11ca8:	rev16	r4, r4
   11cac:	uxth	r4, r4
   11cb0:	sub	r1, r4, #1
   11cb4:	cmp	r1, #4
   11cb8:	bls	11ce0 <__assert_fail@plt+0x7a8>
   11cbc:	mov	r1, r0
   11cc0:	mov	r2, r4
   11cc4:	movw	r0, #43292	; 0xa91c
   11cc8:	movt	r0, #1
   11ccc:	ldrd	r4, [sp]
   11cd0:	ldr	r6, [sp, #8]
   11cd4:	ldr	lr, [sp, #12]
   11cd8:	add	sp, sp, #16
   11cdc:	b	111f0 <printf@plt>
   11ce0:	movw	r3, #42988	; 0xa7ec
   11ce4:	movt	r3, #1
   11ce8:	mov	r1, r0
   11cec:	mov	r6, r2
   11cf0:	ldr	r2, [r3, r4, lsl #2]
   11cf4:	movw	r0, #43308	; 0xa92c
   11cf8:	movt	r0, #1
   11cfc:	bl	111f0 <printf@plt>
   11d00:	cmp	r4, #4
   11d04:	beq	11d3c <__assert_fail@plt+0x804>
   11d08:	cmp	r4, #5
   11d0c:	beq	11d80 <__assert_fail@plt+0x848>
   11d10:	cmp	r4, #3
   11d14:	beq	11d64 <__assert_fail@plt+0x82c>
   11d18:	add	r5, r5, #2
   11d1c:	mov	r0, r5
   11d20:	bl	113b8 <strlen@plt>
   11d24:	add	r2, r0, #1
   11d28:	mov	r1, r5
   11d2c:	movw	r0, #43316	; 0xa934
   11d30:	movt	r0, #1
   11d34:	add	r2, r5, r2
   11d38:	b	11ccc <__assert_fail@plt+0x794>
   11d3c:	ldrh	r1, [r5, #2]
   11d40:	movw	r0, #43360	; 0xa960
   11d44:	movt	r0, #1
   11d48:	ldrd	r4, [sp]
   11d4c:	ldr	r6, [sp, #8]
   11d50:	rev16	r1, r1
   11d54:	uxth	r1, r1
   11d58:	ldr	lr, [sp, #12]
   11d5c:	add	sp, sp, #16
   11d60:	b	111f0 <printf@plt>
   11d64:	ldrh	r1, [r5, #2]
   11d68:	movw	r0, #43336	; 0xa948
   11d6c:	movt	r0, #1
   11d70:	sub	r2, r6, #4
   11d74:	rev16	r1, r1
   11d78:	uxth	r1, r1
   11d7c:	b	11ccc <__assert_fail@plt+0x794>
   11d80:	movw	r0, #43372	; 0xa96c
   11d84:	movt	r0, #1
   11d88:	ldrsh	r1, [r5, #2]
   11d8c:	add	r2, r5, #4
   11d90:	b	11d74 <__assert_fail@plt+0x83c>
   11d94:	mov	r3, #194	; 0xc2
   11d98:	strd	r4, [sp, #-20]!	; 0xffffffec
   11d9c:	mov	ip, #0
   11da0:	strd	r6, [sp, #8]
   11da4:	movw	r1, #43392	; 0xa980
   11da8:	movt	r1, #1
   11dac:	str	lr, [sp, #16]
   11db0:	sub	sp, sp, #172	; 0xac
   11db4:	mov	lr, #2
   11db8:	add	r2, sp, #8
   11dbc:	mov	r4, r0
   11dc0:	str	r3, [sp, #8]
   11dc4:	add	r3, sp, #4
   11dc8:	str	ip, [sp, #12]
   11dcc:	str	lr, [sp, #16]
   11dd0:	str	ip, [sp, #20]
   11dd4:	str	ip, [sp, #24]
   11dd8:	str	ip, [sp, #28]
   11ddc:	str	ip, [sp, #32]
   11de0:	str	ip, [sp, #36]	; 0x24
   11de4:	bl	114e4 <getaddrinfo@plt>
   11de8:	cmp	r0, #0
   11dec:	bne	11f04 <__assert_fail@plt+0x9cc>
   11df0:	movw	r6, #49480	; 0xc148
   11df4:	movt	r6, #2
   11df8:	ldr	r0, [r6, #8]
   11dfc:	cmp	r0, #0
   11e00:	blt	11e10 <__assert_fail@plt+0x8d8>
   11e04:	bl	1152c <close@plt>
   11e08:	mvn	r3, #0
   11e0c:	str	r3, [r6, #8]
   11e10:	ldr	r4, [sp, #4]
   11e14:	cmp	r4, #0
   11e18:	beq	11ef4 <__assert_fail@plt+0x9bc>
   11e1c:	ldrd	r0, [r4, #4]
   11e20:	ldr	r2, [r4, #12]
   11e24:	bl	114f0 <socket@plt>
   11e28:	mov	r5, r0
   11e2c:	mov	r1, #0
   11e30:	cmp	r5, r1
   11e34:	mov	r2, #128	; 0x80
   11e38:	add	r0, sp, #40	; 0x28
   11e3c:	str	r5, [r6, #8]
   11e40:	blt	11ee4 <__assert_fail@plt+0x9ac>
   11e44:	bl	1140c <memset@plt>
   11e48:	ldr	r3, [r4, #4]
   11e4c:	add	r1, sp, #40	; 0x28
   11e50:	mov	r0, r5
   11e54:	ldr	r2, [r4, #16]
   11e58:	strh	r3, [sp, #40]	; 0x28
   11e5c:	bl	11400 <bind@plt>
   11e60:	subs	r7, r0, #0
   11e64:	bne	11ed4 <__assert_fail@plt+0x99c>
   11e68:	ldr	r2, [r4, #16]
   11e6c:	movw	r5, #50276	; 0xc464
   11e70:	movt	r5, #2
   11e74:	add	r0, r5, #16
   11e78:	movw	r6, #51904	; 0xcac0
   11e7c:	movt	r6, #2
   11e80:	ldr	r1, [r4, #20]
   11e84:	str	r2, [r5, #12]
   11e88:	bl	11268 <memcpy@plt>
   11e8c:	mov	r3, #1
   11e90:	ldr	r0, [r6]
   11e94:	str	r3, [r5, #8]
   11e98:	bl	186b0 <argp_parse@@Base+0xfe4>
   11e9c:	ldr	r0, [r4, #24]
   11ea0:	cmp	r0, #0
   11ea4:	movweq	r0, #43416	; 0xa998
   11ea8:	movteq	r0, #1
   11eac:	bl	191a4 <argp_parse@@Base+0x1ad8>
   11eb0:	str	r0, [r6]
   11eb4:	ldr	r0, [sp, #4]
   11eb8:	bl	114d8 <freeaddrinfo@plt>
   11ebc:	mov	r0, r7
   11ec0:	add	sp, sp, #172	; 0xac
   11ec4:	ldrd	r4, [sp]
   11ec8:	ldrd	r6, [sp, #8]
   11ecc:	add	sp, sp, #16
   11ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ed4:	mov	r0, r5
   11ed8:	bl	1152c <close@plt>
   11edc:	mvn	r3, #0
   11ee0:	str	r3, [r6, #8]
   11ee4:	ldr	r4, [r4, #28]
   11ee8:	cmp	r4, #0
   11eec:	bne	11e1c <__assert_fail@plt+0x8e4>
   11ef0:	ldr	r4, [sp, #4]
   11ef4:	mov	r0, r4
   11ef8:	mvn	r7, #0
   11efc:	bl	114d8 <freeaddrinfo@plt>
   11f00:	b	11ebc <__assert_fail@plt+0x984>
   11f04:	movw	r3, #50256	; 0xc450
   11f08:	movt	r3, #2
   11f0c:	ldr	r5, [r3]
   11f10:	mvn	r7, #0
   11f14:	bl	11244 <gai_strerror@plt>
   11f18:	mov	r3, r0
   11f1c:	mov	r2, r4
   11f20:	movw	r1, #43400	; 0xa988
   11f24:	movt	r1, #1
   11f28:	mov	r0, r5
   11f2c:	bl	113d0 <fprintf@plt>
   11f30:	b	11ebc <__assert_fail@plt+0x984>
   11f34:	push	{lr}		; (str lr, [sp, #-4]!)
   11f38:	sub	sp, sp, #12
   11f3c:	cmp	r0, #1
   11f40:	movgt	r3, r0
   11f44:	str	r1, [sp]
   11f48:	str	r0, [sp, #4]
   11f4c:	ble	11fb4 <__assert_fail@plt+0xa7c>
   11f50:	cmp	r3, #2
   11f54:	ldr	r3, [sp]
   11f58:	beq	11f74 <__assert_fail@plt+0xa3c>
   11f5c:	movw	r0, #43452	; 0xa9bc
   11f60:	movt	r0, #1
   11f64:	ldr	r1, [r3]
   11f68:	bl	111f0 <printf@plt>
   11f6c:	add	sp, sp, #12
   11f70:	pop	{pc}		; (ldr pc, [sp], #4)
   11f74:	mov	r2, #10
   11f78:	mov	r1, #0
   11f7c:	ldr	r0, [r3, #4]
   11f80:	bl	111e4 <strtol@plt>
   11f84:	cmp	r0, #0
   11f88:	movwge	r3, #49480	; 0xc148
   11f8c:	movtge	r3, #2
   11f90:	strge	r0, [r3, #4]
   11f94:	bge	11f6c <__assert_fail@plt+0xa34>
   11f98:	ldr	r3, [sp]
   11f9c:	movw	r0, #43472	; 0xa9d0
   11fa0:	movt	r0, #1
   11fa4:	ldr	r1, [r3, #4]
   11fa8:	bl	111f0 <printf@plt>
   11fac:	add	sp, sp, #12
   11fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   11fb4:	mov	r3, sp
   11fb8:	movw	r1, #43424	; 0xa9a0
   11fbc:	movt	r1, #1
   11fc0:	movw	r0, #43436	; 0xa9ac
   11fc4:	movt	r0, #1
   11fc8:	add	r2, sp, #4
   11fcc:	bl	11bc0 <__assert_fail@plt+0x688>
   11fd0:	ldr	r3, [sp, #4]
   11fd4:	b	11f50 <__assert_fail@plt+0xa18>
   11fd8:	push	{lr}		; (str lr, [sp, #-4]!)
   11fdc:	sub	sp, sp, #12
   11fe0:	cmp	r0, #1
   11fe4:	movgt	r3, r0
   11fe8:	str	r1, [sp]
   11fec:	str	r0, [sp, #4]
   11ff0:	ble	12058 <__assert_fail@plt+0xb20>
   11ff4:	cmp	r3, #2
   11ff8:	ldr	r3, [sp]
   11ffc:	beq	12018 <__assert_fail@plt+0xae0>
   12000:	movw	r0, #43452	; 0xa9bc
   12004:	movt	r0, #1
   12008:	ldr	r1, [r3]
   1200c:	bl	111f0 <printf@plt>
   12010:	add	sp, sp, #12
   12014:	pop	{pc}		; (ldr pc, [sp], #4)
   12018:	mov	r2, #10
   1201c:	mov	r1, #0
   12020:	ldr	r0, [r3, #4]
   12024:	bl	111e4 <strtol@plt>
   12028:	cmp	r0, #0
   1202c:	movwge	r3, #49480	; 0xc148
   12030:	movtge	r3, #2
   12034:	strge	r0, [r3]
   12038:	bge	12010 <__assert_fail@plt+0xad8>
   1203c:	ldr	r3, [sp]
   12040:	movw	r0, #43472	; 0xa9d0
   12044:	movt	r0, #1
   12048:	ldr	r1, [r3, #4]
   1204c:	bl	111f0 <printf@plt>
   12050:	add	sp, sp, #12
   12054:	pop	{pc}		; (ldr pc, [sp], #4)
   12058:	mov	r3, sp
   1205c:	movw	r1, #43424	; 0xa9a0
   12060:	movt	r1, #1
   12064:	movw	r0, #43488	; 0xa9e0
   12068:	movt	r0, #1
   1206c:	add	r2, sp, #4
   12070:	bl	11bc0 <__assert_fail@plt+0x688>
   12074:	ldr	r3, [sp, #4]
   12078:	b	11ff4 <__assert_fail@plt+0xabc>
   1207c:	str	r4, [sp, #-8]!
   12080:	cmp	r0, #1
   12084:	str	lr, [sp, #4]
   12088:	sub	sp, sp, #8
   1208c:	movgt	r3, r0
   12090:	str	r1, [sp]
   12094:	str	r0, [sp, #4]
   12098:	ble	12134 <__assert_fail@plt+0xbfc>
   1209c:	sub	r3, r3, #2
   120a0:	cmp	r3, #1
   120a4:	ldr	r3, [sp]
   120a8:	bhi	12114 <__assert_fail@plt+0xbdc>
   120ac:	ldr	r0, [r3, #4]
   120b0:	bl	11d94 <__assert_fail@plt+0x85c>
   120b4:	cmn	r0, #1
   120b8:	beq	12104 <__assert_fail@plt+0xbcc>
   120bc:	ldr	r3, [sp, #4]
   120c0:	cmp	r3, #3
   120c4:	beq	12158 <__assert_fail@plt+0xc20>
   120c8:	movw	r1, #43572	; 0xaa34
   120cc:	movt	r1, #1
   120d0:	movw	r0, #43392	; 0xa980
   120d4:	movt	r0, #1
   120d8:	bl	113e8 <getservbyname@plt>
   120dc:	subs	r4, r0, #0
   120e0:	beq	121a0 <__assert_fail@plt+0xc68>
   120e4:	ldr	r3, [r4, #8]
   120e8:	movw	r4, #50276	; 0xc464
   120ec:	movt	r4, #2
   120f0:	rev16	r3, r3
   120f4:	uxth	r3, r3
   120f8:	str	r3, [r4, #144]	; 0x90
   120fc:	mov	r3, #1
   12100:	str	r3, [r4, #8]
   12104:	add	sp, sp, #8
   12108:	ldr	r4, [sp]
   1210c:	add	sp, sp, #4
   12110:	pop	{pc}		; (ldr pc, [sp], #4)
   12114:	ldr	r1, [r3]
   12118:	movw	r0, #43520	; 0xaa00
   1211c:	movt	r0, #1
   12120:	bl	111f0 <printf@plt>
   12124:	add	sp, sp, #8
   12128:	ldr	r4, [sp]
   1212c:	add	sp, sp, #4
   12130:	pop	{pc}		; (ldr pc, [sp], #4)
   12134:	mov	r3, sp
   12138:	movw	r1, #43504	; 0xa9f0
   1213c:	movt	r1, #1
   12140:	movw	r0, #43512	; 0xa9f8
   12144:	movt	r0, #1
   12148:	add	r2, sp, #4
   1214c:	bl	11bc0 <__assert_fail@plt+0x688>
   12150:	ldr	r3, [sp, #4]
   12154:	b	1209c <__assert_fail@plt+0xb64>
   12158:	ldr	r3, [sp]
   1215c:	mov	r2, #10
   12160:	mov	r1, #0
   12164:	movw	r4, #50276	; 0xc464
   12168:	movt	r4, #2
   1216c:	ldr	r0, [r3, #8]
   12170:	bl	111e4 <strtol@plt>
   12174:	cmp	r0, #0
   12178:	str	r0, [r4, #144]	; 0x90
   1217c:	bgt	120fc <__assert_fail@plt+0xbc4>
   12180:	ldr	r3, [sp]
   12184:	movw	r0, #43548	; 0xaa1c
   12188:	movt	r0, #1
   1218c:	ldr	r1, [r3, #8]
   12190:	bl	111f0 <printf@plt>
   12194:	mov	r3, #0
   12198:	str	r3, [r4, #8]
   1219c:	b	12104 <__assert_fail@plt+0xbcc>
   121a0:	movw	r2, #43576	; 0xaa38
   121a4:	movt	r2, #1
   121a8:	mov	r1, r4
   121ac:	mov	r0, #1
   121b0:	bl	1131c <error@plt>
   121b4:	b	120e4 <__assert_fail@plt+0xbac>
   121b8:	mov	r1, #1
   121bc:	mov	r0, #14
   121c0:	str	r4, [sp, #-8]!
   121c4:	str	lr, [sp, #4]
   121c8:	bl	11274 <signal@plt>
   121cc:	mov	r0, #0
   121d0:	bl	112a4 <alarm@plt>
   121d4:	movw	r0, #51488	; 0xc920
   121d8:	movt	r0, #2
   121dc:	mvn	r1, #0
   121e0:	bl	11208 <longjmp@plt>
   121e4:	movw	r3, #51880	; 0xcaa8
   121e8:	movt	r3, #2
   121ec:	str	r4, [sp, #-8]!
   121f0:	movw	r1, #49480	; 0xc148
   121f4:	movt	r1, #2
   121f8:	ldr	r2, [r3]
   121fc:	ldr	r0, [r1, #4]
   12200:	ldr	r1, [r1]
   12204:	str	lr, [sp, #4]
   12208:	add	r2, r2, r0
   1220c:	cmp	r2, r1
   12210:	str	r2, [r3]
   12214:	blt	12234 <__assert_fail@plt+0xcfc>
   12218:	movw	r0, #43604	; 0xaa54
   1221c:	movt	r0, #1
   12220:	bl	11340 <puts@plt>
   12224:	movw	r0, #51488	; 0xc920
   12228:	movt	r0, #2
   1222c:	mvn	r1, #0
   12230:	bl	11208 <longjmp@plt>
   12234:	movw	r0, #51016	; 0xc748
   12238:	movt	r0, #2
   1223c:	mov	r1, #1
   12240:	bl	11208 <longjmp@plt>
   12244:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12248:	strd	r6, [sp, #8]
   1224c:	mov	r6, r2
   12250:	rev16	r2, r0
   12254:	mov	r5, r6
   12258:	mov	r0, r1
   1225c:	strd	r8, [sp, #16]
   12260:	str	sl, [sp, #24]
   12264:	mov	r8, r3
   12268:	mov	r9, r1
   1226c:	str	lr, [sp, #28]
   12270:	mov	r7, #0
   12274:	strh	r2, [r5], #2
   12278:	bl	113b8 <strlen@plt>
   1227c:	mov	r4, r0
   12280:	mov	r1, r9
   12284:	movw	r2, #502	; 0x1f6
   12288:	mov	r0, r5
   1228c:	bl	11418 <strncpy@plt>
   12290:	movw	r3, #502	; 0x1f6
   12294:	mov	r1, r8
   12298:	cmp	r4, r3
   1229c:	movcc	r3, r4
   122a0:	add	r4, r5, r3
   122a4:	add	r4, r4, #1
   122a8:	strb	r7, [r5, r3]
   122ac:	mov	r0, r4
   122b0:	bl	112f8 <strcpy@plt>
   122b4:	mov	r0, r8
   122b8:	bl	113b8 <strlen@plt>
   122bc:	add	r3, r4, r0
   122c0:	strb	r7, [r4, r0]
   122c4:	add	r3, r3, #1
   122c8:	ldrd	r4, [sp]
   122cc:	sub	r0, r3, r6
   122d0:	ldrd	r6, [sp, #8]
   122d4:	ldrd	r8, [sp, #16]
   122d8:	ldr	sl, [sp, #24]
   122dc:	add	sp, sp, #28
   122e0:	pop	{pc}		; (ldr pc, [sp], #4)
   122e4:	strd	r4, [sp, #-20]!	; 0xffffffec
   122e8:	mov	r1, #0
   122ec:	movw	r5, #50496	; 0xc540
   122f0:	movt	r5, #2
   122f4:	strd	r6, [sp, #8]
   122f8:	movw	r6, #49480	; 0xc148
   122fc:	movt	r6, #2
   12300:	rev16	ip, r0
   12304:	str	lr, [sp, #16]
   12308:	ldr	r3, [r6, #12]
   1230c:	mov	r2, #5
   12310:	sub	sp, sp, #12
   12314:	strb	r1, [r5]
   12318:	strb	r2, [r5, #1]
   1231c:	strh	ip, [r5, #2]
   12320:	cmp	r3, r1
   12324:	blt	1242c <__assert_fail@plt+0xef4>
   12328:	cmp	r0, r3
   1232c:	beq	12434 <__assert_fail@plt+0xefc>
   12330:	add	r3, r6, #12
   12334:	b	12344 <__assert_fail@plt+0xe0c>
   12338:	cmp	r2, r0
   1233c:	beq	12408 <__assert_fail@plt+0xed0>
   12340:	mov	r3, r4
   12344:	ldr	r2, [r3, #8]
   12348:	add	r4, r3, #8
   1234c:	cmp	r2, #0
   12350:	bge	12338 <__assert_fail@plt+0xe00>
   12354:	sub	r0, r0, #100	; 0x64
   12358:	bl	11364 <strerror@plt>
   1235c:	mov	r7, r0
   12360:	mov	r3, #0
   12364:	str	r0, [r4, #4]
   12368:	strb	r3, [r5, #2]
   1236c:	strb	r3, [r5, #3]
   12370:	mov	r0, r7
   12374:	movw	r5, #50276	; 0xc464
   12378:	movt	r5, #2
   1237c:	bl	113b8 <strlen@plt>
   12380:	mov	r4, r0
   12384:	mov	r1, r7
   12388:	ldr	r0, [pc, #172]	; 1243c <__assert_fail@plt+0xf04>
   1238c:	add	r2, r4, #1
   12390:	add	r4, r4, #4
   12394:	bl	11268 <memcpy@plt>
   12398:	ldr	r3, [r5]
   1239c:	cmp	r3, #0
   123a0:	bne	12410 <__assert_fail@plt+0xed8>
   123a4:	ldr	lr, [pc, #148]	; 12440 <__assert_fail@plt+0xf08>
   123a8:	movw	r1, #50496	; 0xc540
   123ac:	movt	r1, #2
   123b0:	mov	r3, #0
   123b4:	mov	r2, r4
   123b8:	ldr	ip, [r5, #12]
   123bc:	ldr	r0, [r6, #8]
   123c0:	str	lr, [sp]
   123c4:	str	ip, [sp, #4]
   123c8:	bl	11460 <sendto@plt>
   123cc:	cmp	r0, r4
   123d0:	beq	123f4 <__assert_fail@plt+0xebc>
   123d4:	movw	r0, #43632	; 0xaa70
   123d8:	movt	r0, #1
   123dc:	add	sp, sp, #12
   123e0:	ldrd	r4, [sp]
   123e4:	ldrd	r6, [sp, #8]
   123e8:	ldr	lr, [sp, #16]
   123ec:	add	sp, sp, #20
   123f0:	b	112d4 <perror@plt>
   123f4:	add	sp, sp, #12
   123f8:	ldrd	r4, [sp]
   123fc:	ldrd	r6, [sp, #8]
   12400:	add	sp, sp, #16
   12404:	pop	{pc}		; (ldr pc, [sp], #4)
   12408:	ldr	r7, [r3, #12]
   1240c:	b	12370 <__assert_fail@plt+0xe38>
   12410:	movw	r1, #50496	; 0xc540
   12414:	movt	r1, #2
   12418:	movw	r0, #43624	; 0xaa68
   1241c:	movt	r0, #1
   12420:	mov	r2, r4
   12424:	bl	11c94 <__assert_fail@plt+0x75c>
   12428:	b	123a4 <__assert_fail@plt+0xe6c>
   1242c:	add	r4, r6, #12
   12430:	b	12354 <__assert_fail@plt+0xe1c>
   12434:	ldr	r7, [r6, #16]
   12438:	b	12370 <__assert_fail@plt+0xe38>
   1243c:	andeq	ip, r2, r4, asr #10
   12440:	andeq	ip, r2, r4, ror r4
   12444:	cmp	r0, #0
   12448:	beq	12478 <__assert_fail@plt+0xf40>
   1244c:	cmp	r0, #118	; 0x76
   12450:	bne	12470 <__assert_fail@plt+0xf38>
   12454:	movw	r3, #50276	; 0xc464
   12458:	movt	r3, #2
   1245c:	ldr	r2, [r3, #4]
   12460:	mov	r0, #0
   12464:	add	r2, r2, #1
   12468:	str	r2, [r3, #4]
   1246c:	bx	lr
   12470:	mov	r0, #7
   12474:	bx	lr
   12478:	ldr	r3, [r2, #20]
   1247c:	mov	r0, r2
   12480:	strd	r4, [sp, #-16]!
   12484:	movw	r4, #49480	; 0xc148
   12488:	movt	r4, #2
   1248c:	mov	r5, r1
   12490:	str	r6, [sp, #8]
   12494:	str	lr, [sp, #12]
   12498:	cmp	r3, #1
   1249c:	bhi	124ac <__assert_fail@plt+0xf74>
   124a0:	ldr	r3, [r4, #84]	; 0x54
   124a4:	cmp	r3, #2
   124a8:	ble	124c4 <__assert_fail@plt+0xf8c>
   124ac:	movw	r3, #50256	; 0xc450
   124b0:	movt	r3, #2
   124b4:	movw	r2, #262	; 0x106
   124b8:	ldr	r1, [r3]
   124bc:	bl	16ef4 <argp_state_help@@Base>
   124c0:	ldr	r3, [r4, #84]	; 0x54
   124c4:	add	r2, r4, r3, lsl #2
   124c8:	add	r3, r3, #1
   124cc:	mov	r0, #0
   124d0:	ldr	r6, [sp, #8]
   124d4:	str	r3, [r4, #84]	; 0x54
   124d8:	str	r5, [r2, #88]	; 0x58
   124dc:	ldrd	r4, [sp]
   124e0:	add	sp, sp, #12
   124e4:	pop	{pc}		; (ldr pc, [sp], #4)
   124e8:	mov	r1, r0
   124ec:	movw	r0, #51908	; 0xcac4
   124f0:	movt	r0, #2
   124f4:	str	r4, [sp, #-8]!
   124f8:	str	lr, [sp, #4]
   124fc:	bl	112f8 <strcpy@plt>
   12500:	movw	r3, #50276	; 0xc464
   12504:	movt	r3, #2
   12508:	ldr	r3, [r3, #4]
   1250c:	cmp	r3, #0
   12510:	bne	12520 <__assert_fail@plt+0xfe8>
   12514:	ldr	r4, [sp]
   12518:	add	sp, sp, #4
   1251c:	pop	{pc}		; (ldr pc, [sp], #4)
   12520:	movw	r1, #51908	; 0xcac4
   12524:	movt	r1, #2
   12528:	ldr	r4, [sp]
   1252c:	movw	r0, #43636	; 0xaa74
   12530:	movt	r0, #1
   12534:	ldr	lr, [sp, #4]
   12538:	add	sp, sp, #8
   1253c:	b	111f0 <printf@plt>
   12540:	movw	r0, #43652	; 0xaa84
   12544:	movt	r0, #1
   12548:	b	124e8 <__assert_fail@plt+0xfb0>
   1254c:	movw	r0, #43660	; 0xaa8c
   12550:	movt	r0, #1
   12554:	b	124e8 <__assert_fail@plt+0xfb0>
   12558:	cmp	r0, #1
   1255c:	ble	12668 <__assert_fail@plt+0x1130>
   12560:	cmp	r0, #2
   12564:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12568:	strd	r6, [sp, #8]
   1256c:	movw	r6, #49480	; 0xc148
   12570:	movt	r6, #2
   12574:	mov	r7, r1
   12578:	str	r8, [sp, #16]
   1257c:	str	lr, [sp, #20]
   12580:	bne	125e4 <__assert_fail@plt+0x10ac>
   12584:	ldr	r1, [r6, #100]	; 0x64
   12588:	ldr	r5, [r7, #4]
   1258c:	cmp	r1, #0
   12590:	beq	125d4 <__assert_fail@plt+0x109c>
   12594:	add	r4, r6, #100	; 0x64
   12598:	b	125a8 <__assert_fail@plt+0x1070>
   1259c:	ldr	r1, [r4, #8]!
   125a0:	cmp	r1, #0
   125a4:	beq	125d4 <__assert_fail@plt+0x109c>
   125a8:	mov	r0, r5
   125ac:	bl	111d8 <strcmp@plt>
   125b0:	cmp	r0, #0
   125b4:	bne	1259c <__assert_fail@plt+0x1064>
   125b8:	ldr	r0, [r4, #4]
   125bc:	ldrd	r4, [sp]
   125c0:	ldrd	r6, [sp, #8]
   125c4:	ldr	r8, [sp, #16]
   125c8:	ldr	lr, [sp, #20]
   125cc:	add	sp, sp, #24
   125d0:	b	124e8 <__assert_fail@plt+0xfb0>
   125d4:	movw	r0, #43736	; 0xaad8
   125d8:	movt	r0, #1
   125dc:	mov	r1, r5
   125e0:	bl	111f0 <printf@plt>
   125e4:	movw	r0, #43712	; 0xaac0
   125e8:	movt	r0, #1
   125ec:	ldr	r1, [r7]
   125f0:	bl	111f0 <printf@plt>
   125f4:	ldr	r2, [r6, #100]	; 0x64
   125f8:	cmp	r2, #0
   125fc:	beq	12648 <__assert_fail@plt+0x1110>
   12600:	movw	r4, #43508	; 0xa9f4
   12604:	movt	r4, #1
   12608:	ldr	r5, [pc, #108]	; 1267c <__assert_fail@plt+0x1144>
   1260c:	movw	r7, #43724	; 0xaacc
   12610:	movt	r7, #1
   12614:	movw	r6, #43672	; 0xaa98
   12618:	movt	r6, #1
   1261c:	mov	r3, #32
   12620:	b	12628 <__assert_fail@plt+0x10f0>
   12624:	ldrb	r3, [r4]
   12628:	cmp	r3, #32
   1262c:	mov	r1, r4
   12630:	mov	r0, r7
   12634:	moveq	r4, r6
   12638:	bl	111f0 <printf@plt>
   1263c:	ldr	r2, [r5, #8]!
   12640:	cmp	r2, #0
   12644:	bne	12624 <__assert_fail@plt+0x10ec>
   12648:	movw	r0, #43732	; 0xaad4
   1264c:	movt	r0, #1
   12650:	ldrd	r4, [sp]
   12654:	ldrd	r6, [sp, #8]
   12658:	ldr	r8, [sp, #16]
   1265c:	ldr	lr, [sp, #20]
   12660:	add	sp, sp, #24
   12664:	b	11340 <puts@plt>
   12668:	movw	r1, #51908	; 0xcac4
   1266c:	movt	r1, #2
   12670:	movw	r0, #43676	; 0xaa9c
   12674:	movt	r0, #1
   12678:	b	111f0 <printf@plt>
   1267c:	andeq	ip, r2, ip, lsr #3
   12680:	str	r4, [sp, #-8]!
   12684:	mov	r4, r0
   12688:	str	lr, [sp, #4]
   1268c:	ldrb	r3, [r0]
   12690:	cmp	r3, #0
   12694:	bne	126b8 <__assert_fail@plt+0x1180>
   12698:	b	126cc <__assert_fail@plt+0x1194>
   1269c:	ldrb	r3, [r0, #1]
   126a0:	cmp	r3, #0
   126a4:	bne	126dc <__assert_fail@plt+0x11a4>
   126a8:	strb	r3, [r0]
   126ac:	ldrb	r3, [r4]
   126b0:	cmp	r3, #0
   126b4:	beq	126cc <__assert_fail@plt+0x1194>
   126b8:	mov	r1, #47	; 0x2f
   126bc:	mov	r0, r4
   126c0:	bl	11484 <strrchr@plt>
   126c4:	cmp	r0, #0
   126c8:	bne	1269c <__assert_fail@plt+0x1164>
   126cc:	mov	r0, r4
   126d0:	ldr	r4, [sp]
   126d4:	add	sp, sp, #4
   126d8:	pop	{pc}		; (ldr pc, [sp], #4)
   126dc:	ldr	r4, [sp]
   126e0:	add	sp, sp, #4
   126e4:	add	r0, r0, #1
   126e8:	pop	{pc}		; (ldr pc, [sp], #4)
   126ec:	movw	r3, #49480	; 0xc148
   126f0:	movt	r3, #2
   126f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   126f8:	ldr	r2, [r3, #148]	; 0x94
   126fc:	strd	r6, [sp, #8]
   12700:	str	r8, [sp, #16]
   12704:	str	lr, [sp, #20]
   12708:	cmp	r2, #0
   1270c:	beq	127d4 <__assert_fail@plt+0x129c>
   12710:	ldrb	r4, [r0]
   12714:	mov	r5, #0
   12718:	add	lr, r3, #148	; 0x94
   1271c:	mov	r7, r5
   12720:	mov	r8, r5
   12724:	ldrb	r3, [r2], #1
   12728:	mov	r6, lr
   1272c:	cmp	r3, r4
   12730:	bne	127c0 <__assert_fail@plt+0x1288>
   12734:	cmp	r4, #0
   12738:	beq	1278c <__assert_fail@plt+0x1254>
   1273c:	mov	r1, r0
   12740:	b	1274c <__assert_fail@plt+0x1214>
   12744:	cmp	r3, #0
   12748:	beq	1278c <__assert_fail@plt+0x1254>
   1274c:	ldrb	ip, [r1, #1]!
   12750:	ldrb	r3, [r2], #1
   12754:	cmp	r3, ip
   12758:	beq	12744 <__assert_fail@plt+0x120c>
   1275c:	cmp	ip, #0
   12760:	bne	12774 <__assert_fail@plt+0x123c>
   12764:	sub	r1, r1, r0
   12768:	cmp	r1, r5
   1276c:	bgt	127a4 <__assert_fail@plt+0x126c>
   12770:	addeq	r7, r7, #1
   12774:	ldr	r2, [lr, #12]!
   12778:	cmp	r2, #0
   1277c:	bne	12724 <__assert_fail@plt+0x11ec>
   12780:	cmp	r7, #2
   12784:	movlt	r6, r8
   12788:	mvnge	r6, #0
   1278c:	mov	r0, r6
   12790:	ldrd	r4, [sp]
   12794:	ldrd	r6, [sp, #8]
   12798:	ldr	r8, [sp, #16]
   1279c:	add	sp, sp, #20
   127a0:	pop	{pc}		; (ldr pc, [sp], #4)
   127a4:	mov	r8, lr
   127a8:	ldr	r2, [lr, #12]!
   127ac:	mov	r5, r1
   127b0:	mov	r7, #1
   127b4:	cmp	r2, #0
   127b8:	bne	12724 <__assert_fail@plt+0x11ec>
   127bc:	b	12780 <__assert_fail@plt+0x1248>
   127c0:	mov	ip, r4
   127c4:	mov	r1, r0
   127c8:	cmp	ip, #0
   127cc:	bne	12774 <__assert_fail@plt+0x123c>
   127d0:	b	12764 <__assert_fail@plt+0x122c>
   127d4:	mov	r6, r2
   127d8:	b	1278c <__assert_fail@plt+0x1254>
   127dc:	cmp	r0, #1
   127e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   127e4:	strd	r6, [sp, #8]
   127e8:	str	r8, [sp, #16]
   127ec:	str	lr, [sp, #20]
   127f0:	beq	1287c <__assert_fail@plt+0x1344>
   127f4:	movw	r7, #43916	; 0xab8c
   127f8:	movt	r7, #1
   127fc:	movw	r8, #43888	; 0xab70
   12800:	movt	r8, #1
   12804:	mov	r4, r0
   12808:	mov	r6, r1
   1280c:	sub	r4, r4, #1
   12810:	cmp	r4, #0
   12814:	ble	12848 <__assert_fail@plt+0x1310>
   12818:	ldr	r5, [r6, #4]!
   1281c:	mov	r0, r5
   12820:	bl	126ec <__assert_fail@plt+0x11b4>
   12824:	cmn	r0, #1
   12828:	beq	1286c <__assert_fail@plt+0x1334>
   1282c:	cmp	r0, #0
   12830:	beq	1285c <__assert_fail@plt+0x1324>
   12834:	sub	r4, r4, #1
   12838:	ldr	r0, [r0, #4]
   1283c:	bl	11340 <puts@plt>
   12840:	cmp	r4, #0
   12844:	bgt	12818 <__assert_fail@plt+0x12e0>
   12848:	ldrd	r4, [sp]
   1284c:	ldrd	r6, [sp, #8]
   12850:	ldr	r8, [sp, #16]
   12854:	add	sp, sp, #20
   12858:	pop	{pc}		; (ldr pc, [sp], #4)
   1285c:	mov	r1, r5
   12860:	mov	r0, r7
   12864:	bl	111f0 <printf@plt>
   12868:	b	1280c <__assert_fail@plt+0x12d4>
   1286c:	mov	r1, r5
   12870:	mov	r0, r8
   12874:	bl	111f0 <printf@plt>
   12878:	b	1280c <__assert_fail@plt+0x12d4>
   1287c:	movw	r0, #43828	; 0xab34
   12880:	movt	r0, #1
   12884:	movw	r4, #49480	; 0xc148
   12888:	movt	r4, #2
   1288c:	bl	11340 <puts@plt>
   12890:	ldr	r2, [r4, #148]	; 0x94
   12894:	cmp	r2, #0
   12898:	beq	12848 <__assert_fail@plt+0x1310>
   1289c:	movw	r5, #43876	; 0xab64
   128a0:	movt	r5, #1
   128a4:	add	r4, r4, #148	; 0x94
   128a8:	mov	r1, #8
   128ac:	mov	r0, r5
   128b0:	ldr	r3, [r4, #4]
   128b4:	bl	111f0 <printf@plt>
   128b8:	ldr	r2, [r4, #12]!
   128bc:	cmp	r2, #0
   128c0:	bne	128a8 <__assert_fail@plt+0x1370>
   128c4:	b	12848 <__assert_fail@plt+0x1310>
   128c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   128cc:	mov	r4, r0
   128d0:	movw	r0, #51884	; 0xcaac
   128d4:	movt	r0, #2
   128d8:	strd	r6, [sp, #8]
   128dc:	mov	r5, r2
   128e0:	strd	r8, [sp, #16]
   128e4:	strd	sl, [sp, #24]
   128e8:	str	lr, [sp, #32]
   128ec:	sub	sp, sp, #188	; 0xbc
   128f0:	str	r1, [sp, #24]
   128f4:	mov	r1, #0
   128f8:	str	r2, [sp, #28]
   128fc:	bl	11304 <gettimeofday@plt>
   12900:	bl	13720 <__assert_fail@plt+0x21e8>
   12904:	movw	r3, #50496	; 0xc540
   12908:	movt	r3, #2
   1290c:	movw	r1, #45364	; 0xb134
   12910:	movt	r1, #1
   12914:	str	r3, [sp, #12]
   12918:	movw	r3, #50276	; 0xc464
   1291c:	movt	r3, #2
   12920:	str	r0, [sp, #32]
   12924:	mov	r0, r4
   12928:	str	r3, [sp, #16]
   1292c:	bl	111b4 <fdopen@plt>
   12930:	movw	r1, #43660	; 0xaa8c
   12934:	movt	r1, #1
   12938:	str	r0, [sp, #8]
   1293c:	mov	r0, r5
   12940:	bl	111d8 <strcmp@plt>
   12944:	clz	r3, r0
   12948:	mov	r2, #0
   1294c:	lsr	r3, r3, #5
   12950:	movw	ip, #49480	; 0xc148
   12954:	movt	ip, #2
   12958:	movw	r1, #8676	; 0x21e4
   1295c:	movt	r1, #1
   12960:	mov	r0, #14
   12964:	str	ip, [sp, #20]
   12968:	str	r3, [sp, #44]	; 0x2c
   1296c:	str	r2, [sp, #36]	; 0x24
   12970:	str	r2, [sp, #48]	; 0x30
   12974:	bl	11274 <signal@plt>
   12978:	ldr	r3, [sp, #36]	; 0x24
   1297c:	cmp	r3, #0
   12980:	beq	12b28 <__assert_fail@plt+0x15f0>
   12984:	add	r1, sp, #32
   12988:	ldr	r0, [sp, #8]
   1298c:	ldr	r2, [sp, #44]	; 0x2c
   12990:	bl	138a4 <__assert_fail@plt+0x236c>
   12994:	str	r0, [sp, #40]	; 0x28
   12998:	ldr	r3, [sp, #40]	; 0x28
   1299c:	cmp	r3, #0
   129a0:	blt	12bdc <__assert_fail@plt+0x16a4>
   129a4:	ldr	r3, [sp, #32]
   129a8:	mov	r0, #0
   129ac:	mov	r1, #3
   129b0:	ldr	r2, [sp, #36]	; 0x24
   129b4:	strb	r0, [r3]
   129b8:	strb	r1, [r3, #1]
   129bc:	rev16	r2, r2
   129c0:	strh	r2, [r3, #2]
   129c4:	mov	r2, #0
   129c8:	movw	r3, #51880	; 0xcaa8
   129cc:	movt	r3, #2
   129d0:	movw	r0, #51016	; 0xc748
   129d4:	movt	r0, #2
   129d8:	str	r2, [r3]
   129dc:	bl	11214 <_setjmp@plt>
   129e0:	ldr	r7, [sp, #12]
   129e4:	movw	r8, #43624	; 0xaa68
   129e8:	movt	r8, #1
   129ec:	ldr	r9, [sp, #16]
   129f0:	ldr	r4, [sp, #20]
   129f4:	ldr	r3, [r9]
   129f8:	ldr	r1, [sp, #32]
   129fc:	cmp	r3, #0
   12a00:	bne	12bb0 <__assert_fail@plt+0x1678>
   12a04:	add	r0, r9, #16
   12a08:	ldr	r2, [sp, #40]	; 0x28
   12a0c:	mov	r3, #0
   12a10:	str	r0, [sp]
   12a14:	ldr	ip, [r9, #12]
   12a18:	add	r2, r2, #4
   12a1c:	ldr	r0, [r4, #8]
   12a20:	str	ip, [sp, #4]
   12a24:	bl	11460 <sendto@plt>
   12a28:	ldr	r3, [sp, #40]	; 0x28
   12a2c:	add	r3, r3, #4
   12a30:	cmp	r3, r0
   12a34:	bne	12c44 <__assert_fail@plt+0x170c>
   12a38:	ldr	r0, [sp, #8]
   12a3c:	movw	r6, #50496	; 0xc540
   12a40:	movt	r6, #2
   12a44:	movw	sl, #43960	; 0xabb8
   12a48:	movt	sl, #1
   12a4c:	ldr	r1, [sp, #44]	; 0x2c
   12a50:	bl	13770 <__assert_fail@plt+0x2238>
   12a54:	ldr	r0, [r4, #4]
   12a58:	mov	r5, #128	; 0x80
   12a5c:	bl	112a4 <alarm@plt>
   12a60:	add	r1, sp, #56	; 0x38
   12a64:	add	ip, sp, #52	; 0x34
   12a68:	ldr	r0, [r4, #8]
   12a6c:	mov	r3, #0
   12a70:	mov	r2, #516	; 0x204
   12a74:	stm	sp, {r1, ip}
   12a78:	mov	r1, r6
   12a7c:	str	r5, [sp, #52]	; 0x34
   12a80:	bl	11298 <recvfrom@plt>
   12a84:	cmp	r0, #0
   12a88:	ble	12a60 <__assert_fail@plt+0x1528>
   12a8c:	mov	fp, r0
   12a90:	mov	r0, #0
   12a94:	bl	112a4 <alarm@plt>
   12a98:	ldrh	r3, [sp, #58]	; 0x3a
   12a9c:	rev16	r3, r3
   12aa0:	uxth	r3, r3
   12aa4:	rev16	r3, r3
   12aa8:	strh	r3, [r9, #18]
   12aac:	ldr	r3, [r9]
   12ab0:	cmp	r3, #0
   12ab4:	bne	12b48 <__assert_fail@plt+0x1610>
   12ab8:	ldrsh	r2, [r7]
   12abc:	ldrh	r3, [r7, #2]
   12ac0:	rev16	r2, r2
   12ac4:	sxth	r0, r2
   12ac8:	rev16	r3, r3
   12acc:	cmp	r0, #5
   12ad0:	strh	r2, [r7]
   12ad4:	uxth	r1, r3
   12ad8:	strh	r3, [r7, #2]
   12adc:	beq	12b5c <__assert_fail@plt+0x1624>
   12ae0:	cmp	r0, #4
   12ae4:	bne	12a54 <__assert_fail@plt+0x151c>
   12ae8:	ldr	r3, [sp, #36]	; 0x24
   12aec:	cmp	r1, r3
   12af0:	beq	12c00 <__assert_fail@plt+0x16c8>
   12af4:	ldr	r0, [r4, #8]
   12af8:	bl	13b04 <__assert_fail@plt+0x25cc>
   12afc:	subs	r1, r0, #0
   12b00:	beq	12b10 <__assert_fail@plt+0x15d8>
   12b04:	ldr	r3, [r9]
   12b08:	cmp	r3, #0
   12b0c:	bne	12bf0 <__assert_fail@plt+0x16b8>
   12b10:	ldr	r3, [sp, #36]	; 0x24
   12b14:	ldrh	r2, [r7, #2]
   12b18:	sub	r3, r3, #1
   12b1c:	cmp	r2, r3
   12b20:	bne	12a54 <__assert_fail@plt+0x151c>
   12b24:	b	129f4 <__assert_fail@plt+0x14bc>
   12b28:	mov	r0, #2
   12b2c:	ldr	r1, [sp, #24]
   12b30:	ldr	r3, [sp, #28]
   12b34:	ldr	r2, [sp, #32]
   12b38:	bl	12244 <__assert_fail@plt+0xd0c>
   12b3c:	sub	r0, r0, #4
   12b40:	str	r0, [sp, #40]	; 0x28
   12b44:	b	129c4 <__assert_fail@plt+0x148c>
   12b48:	mov	r2, fp
   12b4c:	mov	r1, r6
   12b50:	mov	r0, sl
   12b54:	bl	11c94 <__assert_fail@plt+0x75c>
   12b58:	b	12ab8 <__assert_fail@plt+0x1580>
   12b5c:	movw	r0, #43972	; 0xabc4
   12b60:	movt	r0, #1
   12b64:	ldr	r2, [pc, #232]	; 12c54 <__assert_fail@plt+0x171c>
   12b68:	sxth	r1, r1
   12b6c:	bl	111f0 <printf@plt>
   12b70:	ldr	r0, [sp, #8]
   12b74:	bl	11448 <fclose@plt>
   12b78:	movw	r0, #51892	; 0xcab4
   12b7c:	movt	r0, #2
   12b80:	mov	r1, #0
   12b84:	bl	11304 <gettimeofday@plt>
   12b88:	ldr	r3, [sp, #48]	; 0x30
   12b8c:	cmp	r3, #0
   12b90:	bne	12bc8 <__assert_fail@plt+0x1690>
   12b94:	add	sp, sp, #188	; 0xbc
   12b98:	ldrd	r4, [sp]
   12b9c:	ldrd	r6, [sp, #8]
   12ba0:	ldrd	r8, [sp, #16]
   12ba4:	ldrd	sl, [sp, #24]
   12ba8:	add	sp, sp, #32
   12bac:	pop	{pc}		; (ldr pc, [sp], #4)
   12bb0:	ldr	r2, [sp, #40]	; 0x28
   12bb4:	mov	r0, r8
   12bb8:	add	r2, r2, #4
   12bbc:	bl	11c94 <__assert_fail@plt+0x75c>
   12bc0:	ldr	r1, [sp, #32]
   12bc4:	b	12a04 <__assert_fail@plt+0x14cc>
   12bc8:	movw	r0, #44016	; 0xabf0
   12bcc:	movt	r0, #1
   12bd0:	ldr	r1, [sp, #48]	; 0x30
   12bd4:	bl	11918 <__assert_fail@plt+0x3e0>
   12bd8:	b	12b94 <__assert_fail@plt+0x165c>
   12bdc:	bl	113dc <__errno_location@plt>
   12be0:	ldr	r0, [r0]
   12be4:	add	r0, r0, #100	; 0x64
   12be8:	bl	122e4 <__assert_fail@plt+0xdac>
   12bec:	b	12b70 <__assert_fail@plt+0x1638>
   12bf0:	movw	r0, #43992	; 0xabd8
   12bf4:	movt	r0, #1
   12bf8:	bl	111f0 <printf@plt>
   12bfc:	b	12b10 <__assert_fail@plt+0x15d8>
   12c00:	ldr	r3, [sp, #36]	; 0x24
   12c04:	cmp	r3, #0
   12c08:	ble	12c1c <__assert_fail@plt+0x16e4>
   12c0c:	ldr	r3, [sp, #40]	; 0x28
   12c10:	ldr	r2, [sp, #48]	; 0x30
   12c14:	add	r3, r3, r2
   12c18:	str	r3, [sp, #48]	; 0x30
   12c1c:	ldr	r3, [sp, #36]	; 0x24
   12c20:	add	r3, r3, #1
   12c24:	str	r3, [sp, #36]	; 0x24
   12c28:	ldr	r3, [sp, #40]	; 0x28
   12c2c:	cmp	r3, #512	; 0x200
   12c30:	beq	12978 <__assert_fail@plt+0x1440>
   12c34:	ldr	r3, [sp, #36]	; 0x24
   12c38:	cmp	r3, #1
   12c3c:	bne	12b70 <__assert_fail@plt+0x1638>
   12c40:	b	12978 <__assert_fail@plt+0x1440>
   12c44:	movw	r0, #43944	; 0xaba8
   12c48:	movt	r0, #1
   12c4c:	bl	112d4 <perror@plt>
   12c50:	b	12b70 <__assert_fail@plt+0x1638>
   12c54:	andeq	ip, r2, r4, asr #10
   12c58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12c5c:	cmp	r0, #1
   12c60:	strd	r6, [sp, #8]
   12c64:	movgt	r7, r0
   12c68:	strd	r8, [sp, #16]
   12c6c:	strd	sl, [sp, #24]
   12c70:	str	lr, [sp, #32]
   12c74:	sub	sp, sp, #28
   12c78:	str	r1, [sp, #16]
   12c7c:	str	r0, [sp, #20]
   12c80:	ble	12e18 <__assert_fail@plt+0x18e0>
   12c84:	ldr	r8, [sp, #16]
   12c88:	sub	r3, r7, #-1073741823	; 0xc0000001
   12c8c:	mov	r1, #58	; 0x3a
   12c90:	ldr	r6, [r8, r3, lsl #2]
   12c94:	mov	r0, r6
   12c98:	bl	113c4 <strchr@plt>
   12c9c:	subs	r9, r0, #0
   12ca0:	beq	12d7c <__assert_fail@plt+0x1844>
   12ca4:	cmp	r7, #2
   12ca8:	beq	12df0 <__assert_fail@plt+0x18b8>
   12cac:	sub	r7, r7, #1
   12cb0:	mov	r5, r8
   12cb4:	mov	r4, #1
   12cb8:	b	12cc4 <__assert_fail@plt+0x178c>
   12cbc:	cmp	r4, r7
   12cc0:	beq	12df0 <__assert_fail@plt+0x18b8>
   12cc4:	mov	r1, #58	; 0x3a
   12cc8:	ldr	r0, [r5, #4]!
   12ccc:	add	r4, r4, #1
   12cd0:	bl	113c4 <strchr@plt>
   12cd4:	cmp	r0, #0
   12cd8:	beq	12cbc <__assert_fail@plt+0x1784>
   12cdc:	ldr	r4, [r8]
   12ce0:	movw	r0, #44040	; 0xac08
   12ce4:	movt	r0, #1
   12ce8:	mov	r1, r4
   12cec:	bl	111f0 <printf@plt>
   12cf0:	movw	r0, #44076	; 0xac2c
   12cf4:	movt	r0, #1
   12cf8:	mov	r1, r4
   12cfc:	bl	111f0 <printf@plt>
   12d00:	add	sp, sp, #28
   12d04:	ldrd	r4, [sp]
   12d08:	ldrd	r6, [sp, #8]
   12d0c:	ldrd	r8, [sp, #16]
   12d10:	ldrd	sl, [sp, #24]
   12d14:	add	sp, sp, #32
   12d18:	pop	{pc}		; (ldr pc, [sp], #4)
   12d1c:	mov	r0, r6
   12d20:	mov	r1, #93	; 0x5d
   12d24:	bl	113c4 <strchr@plt>
   12d28:	cmp	r0, #0
   12d2c:	beq	12d00 <__assert_fail@plt+0x17c8>
   12d30:	mov	r3, #0
   12d34:	ldrb	r1, [r0, #1]
   12d38:	strb	r3, [r0]
   12d3c:	ldrd	r2, [sp, #16]
   12d40:	cmp	r1, #58	; 0x3a
   12d44:	sub	r3, r3, #-1073741823	; 0xc0000001
   12d48:	ldr	r6, [r2, r3, lsl #2]
   12d4c:	bne	12d7c <__assert_fail@plt+0x1844>
   12d50:	add	r3, r6, #1
   12d54:	add	r6, r0, #2
   12d58:	cmp	r3, #0
   12d5c:	beq	12d7c <__assert_fail@plt+0x1844>
   12d60:	mov	r9, r6
   12d64:	mov	r6, r3
   12d68:	mov	r0, r6
   12d6c:	bl	11d94 <__assert_fail@plt+0x85c>
   12d70:	cmp	r0, #0
   12d74:	bne	12d00 <__assert_fail@plt+0x17c8>
   12d78:	mov	r6, r9
   12d7c:	movw	r5, #50276	; 0xc464
   12d80:	movt	r5, #2
   12d84:	ldr	r3, [r5, #8]
   12d88:	cmp	r3, #0
   12d8c:	beq	12f28 <__assert_fail@plt+0x19f0>
   12d90:	ldr	r3, [sp, #20]
   12d94:	cmp	r3, #3
   12d98:	bgt	12e54 <__assert_fail@plt+0x191c>
   12d9c:	cmp	r3, #2
   12da0:	beq	12fc4 <__assert_fail@plt+0x1a8c>
   12da4:	ldr	r3, [sp, #16]
   12da8:	ldr	r4, [r3, #4]
   12dac:	mov	r1, #0
   12db0:	mov	r0, r4
   12db4:	bl	11328 <open64@plt>
   12db8:	subs	r7, r0, #0
   12dbc:	blt	12f68 <__assert_fail@plt+0x1a30>
   12dc0:	ldr	r3, [r5, #4]
   12dc4:	cmp	r3, #0
   12dc8:	bne	12f94 <__assert_fail@plt+0x1a5c>
   12dcc:	ldr	r3, [r5, #144]	; 0x90
   12dd0:	mov	r1, r6
   12dd4:	mov	r0, r7
   12dd8:	movw	r2, #51908	; 0xcac4
   12ddc:	movt	r2, #2
   12de0:	rev16	r3, r3
   12de4:	strh	r3, [r5, #18]
   12de8:	bl	128c8 <__assert_fail@plt+0x1390>
   12dec:	b	12d00 <__assert_fail@plt+0x17c8>
   12df0:	ldrb	r3, [r6]
   12df4:	cmp	r3, #91	; 0x5b
   12df8:	beq	12d1c <__assert_fail@plt+0x17e4>
   12dfc:	mov	r3, #0
   12e00:	strb	r3, [r9], #1
   12e04:	ldrb	r3, [r6]
   12e08:	cmp	r3, #0
   12e0c:	bne	12d68 <__assert_fail@plt+0x1830>
   12e10:	mov	r6, r9
   12e14:	b	12d7c <__assert_fail@plt+0x1844>
   12e18:	movw	r1, #44024	; 0xabf8
   12e1c:	movt	r1, #1
   12e20:	movw	r0, #44032	; 0xac00
   12e24:	movt	r0, #1
   12e28:	add	r3, sp, #16
   12e2c:	add	r2, sp, #20
   12e30:	bl	11bc0 <__assert_fail@plt+0x688>
   12e34:	ldr	r7, [sp, #20]
   12e38:	cmp	r7, #1
   12e3c:	bgt	12c84 <__assert_fail@plt+0x174c>
   12e40:	ldr	r3, [sp, #16]
   12e44:	movw	r0, #44040	; 0xac08
   12e48:	movt	r0, #1
   12e4c:	ldr	r4, [r3]
   12e50:	b	12ce8 <__assert_fail@plt+0x17b0>
   12e54:	mov	r0, r6
   12e58:	bl	113b8 <strlen@plt>
   12e5c:	mov	r3, #47	; 0x2f
   12e60:	add	r9, r6, r0
   12e64:	add	r9, r9, #1
   12e68:	strb	r3, [r6, r0]
   12e6c:	ldr	r3, [sp, #20]
   12e70:	cmp	r3, #2
   12e74:	ble	12d00 <__assert_fail@plt+0x17c8>
   12e78:	movw	r3, #44168	; 0xac88
   12e7c:	movt	r3, #1
   12e80:	movw	r8, #51908	; 0xcac4
   12e84:	movt	r8, #2
   12e88:	movw	fp, #51904	; 0xcac0
   12e8c:	movt	fp, #2
   12e90:	str	r3, [sp, #12]
   12e94:	mov	r4, #1
   12e98:	b	12ecc <__assert_fail@plt+0x1994>
   12e9c:	ldr	r3, [r5, #144]	; 0x90
   12ea0:	mov	r0, r7
   12ea4:	mov	r2, r8
   12ea8:	mov	r1, r6
   12eac:	rev16	r3, r3
   12eb0:	strh	r3, [r5, #18]
   12eb4:	bl	128c8 <__assert_fail@plt+0x1390>
   12eb8:	ldr	r3, [sp, #20]
   12ebc:	add	r4, r4, #1
   12ec0:	sub	r3, r3, #1
   12ec4:	cmp	r3, r4
   12ec8:	ble	12d00 <__assert_fail@plt+0x17c8>
   12ecc:	ldr	r3, [sp, #16]
   12ed0:	lsl	sl, r4, #2
   12ed4:	ldr	r0, [r3, r4, lsl #2]
   12ed8:	bl	12680 <__assert_fail@plt+0x1148>
   12edc:	mov	r1, r0
   12ee0:	mov	r0, r9
   12ee4:	bl	112f8 <strcpy@plt>
   12ee8:	ldr	r3, [sp, #16]
   12eec:	mov	r1, #0
   12ef0:	ldr	r0, [r3, r4, lsl #2]
   12ef4:	bl	11328 <open64@plt>
   12ef8:	subs	r7, r0, #0
   12efc:	blt	12f38 <__assert_fail@plt+0x1a00>
   12f00:	ldr	r3, [r5, #4]
   12f04:	cmp	r3, #0
   12f08:	beq	12e9c <__assert_fail@plt+0x1964>
   12f0c:	ldrd	r0, [sp, #12]
   12f10:	mov	r3, r6
   12f14:	ldr	r2, [fp]
   12f18:	ldr	r1, [r1, sl]
   12f1c:	str	r8, [sp]
   12f20:	bl	111f0 <printf@plt>
   12f24:	b	12e9c <__assert_fail@plt+0x1964>
   12f28:	movw	r0, #44128	; 0xac60
   12f2c:	movt	r0, #1
   12f30:	bl	11340 <puts@plt>
   12f34:	b	12d00 <__assert_fail@plt+0x17c8>
   12f38:	movw	r3, #50256	; 0xc450
   12f3c:	movt	r3, #2
   12f40:	mov	r2, #6
   12f44:	mov	r1, #1
   12f48:	ldr	r3, [r3]
   12f4c:	movw	r0, #44160	; 0xac80
   12f50:	movt	r0, #1
   12f54:	bl	112e0 <fwrite@plt>
   12f58:	ldr	r3, [sp, #16]
   12f5c:	ldr	r0, [r3, r4, lsl #2]
   12f60:	bl	112d4 <perror@plt>
   12f64:	b	12eb8 <__assert_fail@plt+0x1980>
   12f68:	movw	r3, #50256	; 0xc450
   12f6c:	movt	r3, #2
   12f70:	mov	r2, #6
   12f74:	mov	r1, #1
   12f78:	ldr	r3, [r3]
   12f7c:	movw	r0, #44160	; 0xac80
   12f80:	movt	r0, #1
   12f84:	bl	112e0 <fwrite@plt>
   12f88:	mov	r0, r4
   12f8c:	bl	112d4 <perror@plt>
   12f90:	b	12d00 <__assert_fail@plt+0x17c8>
   12f94:	movw	r3, #51908	; 0xcac4
   12f98:	movt	r3, #2
   12f9c:	movw	r2, #51904	; 0xcac0
   12fa0:	movt	r2, #2
   12fa4:	mov	r1, r4
   12fa8:	movw	r0, #44168	; 0xac88
   12fac:	movt	r0, #1
   12fb0:	str	r3, [sp]
   12fb4:	mov	r3, r6
   12fb8:	ldr	r2, [r2]
   12fbc:	bl	111f0 <printf@plt>
   12fc0:	b	12dcc <__assert_fail@plt+0x1894>
   12fc4:	mov	r0, r6
   12fc8:	bl	12680 <__assert_fail@plt+0x1148>
   12fcc:	mov	r4, r0
   12fd0:	b	12dac <__assert_fail@plt+0x1874>
   12fd4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12fd8:	mov	r4, r0
   12fdc:	movw	r0, #51884	; 0xcaac
   12fe0:	movt	r0, #2
   12fe4:	strd	r6, [sp, #8]
   12fe8:	mov	r5, r2
   12fec:	strd	r8, [sp, #16]
   12ff0:	str	sl, [sp, #24]
   12ff4:	str	lr, [sp, #28]
   12ff8:	sub	sp, sp, #192	; 0xc0
   12ffc:	str	r1, [sp, #24]
   13000:	mov	r1, #0
   13004:	str	r2, [sp, #28]
   13008:	bl	11304 <gettimeofday@plt>
   1300c:	bl	136d4 <__assert_fail@plt+0x219c>
   13010:	movw	r3, #50496	; 0xc540
   13014:	movt	r3, #2
   13018:	movw	r1, #44196	; 0xaca4
   1301c:	movt	r1, #1
   13020:	str	r3, [sp, #12]
   13024:	movw	r3, #50276	; 0xc464
   13028:	movt	r3, #2
   1302c:	str	r0, [sp, #36]	; 0x24
   13030:	mov	r0, r4
   13034:	str	r3, [sp, #16]
   13038:	bl	111b4 <fdopen@plt>
   1303c:	movw	r1, #43660	; 0xaa8c
   13040:	movt	r1, #1
   13044:	str	r0, [sp, #8]
   13048:	mov	r0, r5
   1304c:	bl	111d8 <strcmp@plt>
   13050:	clz	r3, r0
   13054:	mov	r2, #1
   13058:	lsr	r3, r3, #5
   1305c:	mov	ip, #0
   13060:	movw	r1, #8676	; 0x21e4
   13064:	movt	r1, #1
   13068:	mov	r0, #14
   1306c:	str	r3, [sp, #60]	; 0x3c
   13070:	movw	r3, #49480	; 0xc148
   13074:	movt	r3, #2
   13078:	str	r3, [sp, #20]
   1307c:	str	r2, [sp, #40]	; 0x28
   13080:	str	r2, [sp, #48]	; 0x30
   13084:	str	ip, [sp, #52]	; 0x34
   13088:	bl	11274 <signal@plt>
   1308c:	ldr	r3, [sp, #48]	; 0x30
   13090:	cmp	r3, #0
   13094:	bne	13308 <__assert_fail@plt+0x1dd0>
   13098:	ldr	r0, [sp, #12]
   1309c:	mov	r1, #4
   130a0:	ldr	r2, [sp, #40]	; 0x28
   130a4:	str	r1, [sp, #44]	; 0x2c
   130a8:	strb	r3, [r0]
   130ac:	ldr	r3, [sp, #40]	; 0x28
   130b0:	rev16	r2, r2
   130b4:	strb	r1, [r0, #1]
   130b8:	strh	r2, [r0, #2]
   130bc:	add	r3, r3, #1
   130c0:	str	r3, [sp, #40]	; 0x28
   130c4:	mov	r2, #0
   130c8:	movw	r3, #51880	; 0xcaa8
   130cc:	movt	r3, #2
   130d0:	movw	r0, #51016	; 0xc748
   130d4:	movt	r0, #2
   130d8:	str	r2, [r3]
   130dc:	bl	11214 <_setjmp@plt>
   130e0:	ldr	sl, [sp, #16]
   130e4:	movw	r8, #43624	; 0xaa68
   130e8:	movt	r8, #1
   130ec:	ldr	r4, [sp, #20]
   130f0:	ldr	r3, [sl]
   130f4:	cmp	r3, #0
   130f8:	bne	132f0 <__assert_fail@plt+0x1db8>
   130fc:	ldr	r0, [pc, #704]	; 133c4 <__assert_fail@plt+0x1e8c>
   13100:	mov	r3, #0
   13104:	movw	r1, #50496	; 0xc540
   13108:	movt	r1, #2
   1310c:	ldr	r2, [sp, #44]	; 0x2c
   13110:	str	r0, [sp]
   13114:	ldr	ip, [sl, #12]
   13118:	ldr	r0, [r4, #8]
   1311c:	str	ip, [sp, #4]
   13120:	bl	11460 <sendto@plt>
   13124:	ldr	r3, [sp, #44]	; 0x2c
   13128:	cmp	r3, r0
   1312c:	bne	13354 <__assert_fail@plt+0x1e1c>
   13130:	ldr	r0, [sp, #8]
   13134:	ldr	r1, [sp, #60]	; 0x3c
   13138:	bl	13934 <__assert_fail@plt+0x23fc>
   1313c:	mov	r5, #0
   13140:	ldr	r0, [r4, #4]
   13144:	mov	r9, #128	; 0x80
   13148:	add	r6, sp, #64	; 0x40
   1314c:	bl	112a4 <alarm@plt>
   13150:	add	r0, sp, #56	; 0x38
   13154:	mov	r3, r5
   13158:	str	r6, [sp]
   1315c:	mov	r2, #516	; 0x204
   13160:	ldr	r1, [sp, #36]	; 0x24
   13164:	str	r0, [sp, #4]
   13168:	ldr	r0, [r4, #8]
   1316c:	str	r9, [sp, #56]	; 0x38
   13170:	bl	11298 <recvfrom@plt>
   13174:	cmp	r0, #0
   13178:	ble	13150 <__assert_fail@plt+0x1c18>
   1317c:	mov	r7, r0
   13180:	mov	r0, r5
   13184:	bl	112a4 <alarm@plt>
   13188:	ldrh	r3, [sp, #66]	; 0x42
   1318c:	ldr	r1, [sp, #36]	; 0x24
   13190:	rev16	r3, r3
   13194:	uxth	r3, r3
   13198:	rev16	r3, r3
   1319c:	strh	r3, [sl, #18]
   131a0:	ldr	r3, [sl]
   131a4:	cmp	r3, #0
   131a8:	bne	13220 <__assert_fail@plt+0x1ce8>
   131ac:	ldrsh	r2, [r1]
   131b0:	ldrh	r3, [r1, #2]
   131b4:	rev16	r2, r2
   131b8:	sxth	r0, r2
   131bc:	rev16	r3, r3
   131c0:	cmp	r0, #5
   131c4:	strh	r2, [r1]
   131c8:	uxth	ip, r3
   131cc:	strh	r3, [r1, #2]
   131d0:	beq	13238 <__assert_fail@plt+0x1d00>
   131d4:	cmp	r0, #3
   131d8:	bne	13140 <__assert_fail@plt+0x1c08>
   131dc:	ldr	r3, [sp, #40]	; 0x28
   131e0:	cmp	ip, r3
   131e4:	beq	1336c <__assert_fail@plt+0x1e34>
   131e8:	ldr	r0, [r4, #8]
   131ec:	bl	13b04 <__assert_fail@plt+0x25cc>
   131f0:	subs	r1, r0, #0
   131f4:	beq	13204 <__assert_fail@plt+0x1ccc>
   131f8:	ldr	r3, [sl]
   131fc:	cmp	r3, #0
   13200:	bne	13344 <__assert_fail@plt+0x1e0c>
   13204:	ldr	r2, [sp, #36]	; 0x24
   13208:	ldr	r3, [sp, #40]	; 0x28
   1320c:	ldrh	r2, [r2, #2]
   13210:	sub	r3, r3, #1
   13214:	cmp	r2, r3
   13218:	bne	1313c <__assert_fail@plt+0x1c04>
   1321c:	b	130f0 <__assert_fail@plt+0x1bb8>
   13220:	movw	r0, #43960	; 0xabb8
   13224:	movt	r0, #1
   13228:	mov	r2, r7
   1322c:	bl	11c94 <__assert_fail@plt+0x75c>
   13230:	ldr	r1, [sp, #36]	; 0x24
   13234:	b	131ac <__assert_fail@plt+0x1c74>
   13238:	add	r2, r1, #4
   1323c:	movw	r0, #43972	; 0xabc4
   13240:	movt	r0, #1
   13244:	sxth	r1, ip
   13248:	bl	111f0 <printf@plt>
   1324c:	movw	r3, #50276	; 0xc464
   13250:	movt	r3, #2
   13254:	ldr	r5, [sp, #12]
   13258:	add	r2, r3, #16
   1325c:	mov	r4, #0
   13260:	ldr	ip, [sp, #40]	; 0x28
   13264:	movw	r1, #49480	; 0xc148
   13268:	movt	r1, #2
   1326c:	ldr	lr, [r3, #12]
   13270:	mov	r3, r4
   13274:	str	r2, [sp]
   13278:	mov	r2, #4
   1327c:	strb	r4, [r5]
   13280:	rev16	ip, ip
   13284:	strb	r2, [r5, #1]
   13288:	ldr	r0, [r1, #8]
   1328c:	movw	r1, #50496	; 0xc540
   13290:	movt	r1, #2
   13294:	str	lr, [sp, #4]
   13298:	strh	ip, [r5, #2]
   1329c:	bl	11460 <sendto@plt>
   132a0:	ldr	r5, [sp, #8]
   132a4:	ldr	r1, [sp, #60]	; 0x3c
   132a8:	mov	r0, r5
   132ac:	bl	13934 <__assert_fail@plt+0x23fc>
   132b0:	mov	r0, r5
   132b4:	bl	11448 <fclose@plt>
   132b8:	mov	r1, r4
   132bc:	movw	r0, #51892	; 0xcab4
   132c0:	movt	r0, #2
   132c4:	bl	11304 <gettimeofday@plt>
   132c8:	ldr	r3, [sp, #52]	; 0x34
   132cc:	cmp	r3, r4
   132d0:	bne	13330 <__assert_fail@plt+0x1df8>
   132d4:	add	sp, sp, #192	; 0xc0
   132d8:	ldrd	r4, [sp]
   132dc:	ldrd	r6, [sp, #8]
   132e0:	ldrd	r8, [sp, #16]
   132e4:	ldr	sl, [sp, #24]
   132e8:	add	sp, sp, #28
   132ec:	pop	{pc}		; (ldr pc, [sp], #4)
   132f0:	movw	r1, #50496	; 0xc540
   132f4:	movt	r1, #2
   132f8:	ldr	r2, [sp, #44]	; 0x2c
   132fc:	mov	r0, r8
   13300:	bl	11c94 <__assert_fail@plt+0x75c>
   13304:	b	130fc <__assert_fail@plt+0x1bc4>
   13308:	movw	r2, #50496	; 0xc540
   1330c:	movt	r2, #2
   13310:	ldr	r1, [sp, #24]
   13314:	mov	r0, #1
   13318:	ldr	r3, [sp, #28]
   1331c:	bl	12244 <__assert_fail@plt+0xd0c>
   13320:	mov	r3, #0
   13324:	str	r0, [sp, #44]	; 0x2c
   13328:	str	r3, [sp, #48]	; 0x30
   1332c:	b	130c4 <__assert_fail@plt+0x1b8c>
   13330:	movw	r0, #44200	; 0xaca8
   13334:	movt	r0, #1
   13338:	ldr	r1, [sp, #52]	; 0x34
   1333c:	bl	11918 <__assert_fail@plt+0x3e0>
   13340:	b	132d4 <__assert_fail@plt+0x1d9c>
   13344:	movw	r0, #43992	; 0xabd8
   13348:	movt	r0, #1
   1334c:	bl	111f0 <printf@plt>
   13350:	b	13204 <__assert_fail@plt+0x1ccc>
   13354:	mov	r0, #0
   13358:	bl	112a4 <alarm@plt>
   1335c:	movw	r0, #43944	; 0xaba8
   13360:	movt	r0, #1
   13364:	bl	112d4 <perror@plt>
   13368:	b	1324c <__assert_fail@plt+0x1d14>
   1336c:	sub	r2, r7, #4
   13370:	add	r1, sp, #36	; 0x24
   13374:	ldr	r0, [sp, #8]
   13378:	ldr	r3, [sp, #60]	; 0x3c
   1337c:	bl	13a6c <__assert_fail@plt+0x2534>
   13380:	str	r0, [sp, #44]	; 0x2c
   13384:	ldr	r3, [sp, #44]	; 0x2c
   13388:	cmp	r3, #0
   1338c:	blt	133b0 <__assert_fail@plt+0x1e78>
   13390:	ldr	r3, [sp, #44]	; 0x2c
   13394:	ldr	r2, [sp, #52]	; 0x34
   13398:	add	r3, r3, r2
   1339c:	str	r3, [sp, #52]	; 0x34
   133a0:	ldr	r3, [sp, #44]	; 0x2c
   133a4:	cmp	r3, #512	; 0x200
   133a8:	bne	1324c <__assert_fail@plt+0x1d14>
   133ac:	b	1308c <__assert_fail@plt+0x1b54>
   133b0:	bl	113dc <__errno_location@plt>
   133b4:	ldr	r0, [r0]
   133b8:	add	r0, r0, #100	; 0x64
   133bc:	bl	122e4 <__assert_fail@plt+0xdac>
   133c0:	b	1324c <__assert_fail@plt+0x1d14>
   133c4:	andeq	ip, r2, r4, ror r4
   133c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   133cc:	cmp	r0, #1
   133d0:	strd	r6, [sp, #8]
   133d4:	strd	r8, [sp, #16]
   133d8:	movgt	r8, r0
   133dc:	strd	sl, [sp, #24]
   133e0:	str	lr, [sp, #32]
   133e4:	sub	sp, sp, #20
   133e8:	str	r1, [sp, #8]
   133ec:	str	r0, [sp, #12]
   133f0:	ble	13604 <__assert_fail@plt+0x20cc>
   133f4:	movw	r6, #50276	; 0xc464
   133f8:	movt	r6, #2
   133fc:	ldr	r4, [sp, #8]
   13400:	ldr	r3, [r6, #8]
   13404:	cmp	r3, #0
   13408:	beq	135d0 <__assert_fail@plt+0x2098>
   1340c:	movw	r8, #51908	; 0xcac4
   13410:	movt	r8, #2
   13414:	movw	sl, #51904	; 0xcac0
   13418:	movt	sl, #2
   1341c:	movw	r9, #44316	; 0xad1c
   13420:	movt	r9, #1
   13424:	mov	r5, #1
   13428:	b	1345c <__assert_fail@plt+0x1f24>
   1342c:	ldr	r3, [r6, #144]	; 0x90
   13430:	mov	r1, r4
   13434:	mov	r0, r7
   13438:	mov	r2, r8
   1343c:	rev16	r3, r3
   13440:	strh	r3, [r6, #18]
   13444:	bl	12fd4 <__assert_fail@plt+0x1a9c>
   13448:	ldr	r3, [sp, #12]
   1344c:	add	r5, r5, #1
   13450:	cmp	r3, r5
   13454:	ble	13548 <__assert_fail@plt+0x2010>
   13458:	ldr	r4, [sp, #8]
   1345c:	mov	r1, #58	; 0x3a
   13460:	lsl	fp, r5, #2
   13464:	ldr	r4, [r4, r5, lsl #2]
   13468:	mov	r0, r4
   1346c:	bl	113c4 <strchr@plt>
   13470:	subs	r7, r0, #0
   13474:	beq	134ac <__assert_fail@plt+0x1f74>
   13478:	cmp	r4, r7
   1347c:	addeq	r4, r4, #1
   13480:	beq	134ac <__assert_fail@plt+0x1f74>
   13484:	ldrb	r3, [r4]
   13488:	cmp	r3, #91	; 0x5b
   1348c:	beq	13564 <__assert_fail@plt+0x202c>
   13490:	mov	r3, #0
   13494:	mov	r0, r4
   13498:	strb	r3, [r7], #1
   1349c:	mov	r4, r7
   134a0:	bl	11d94 <__assert_fail@plt+0x85c>
   134a4:	cmp	r0, #0
   134a8:	bne	13448 <__assert_fail@plt+0x1f10>
   134ac:	ldr	r3, [sp, #12]
   134b0:	cmp	r3, #3
   134b4:	ble	134fc <__assert_fail@plt+0x1fc4>
   134b8:	mov	r0, r4
   134bc:	bl	12680 <__assert_fail@plt+0x1148>
   134c0:	mov	r1, #420	; 0x1a4
   134c4:	mov	fp, r0
   134c8:	bl	11310 <creat64@plt>
   134cc:	subs	r7, r0, #0
   134d0:	blt	135a4 <__assert_fail@plt+0x206c>
   134d4:	ldr	r3, [r6, #4]
   134d8:	cmp	r3, #0
   134dc:	beq	1342c <__assert_fail@plt+0x1ef4>
   134e0:	mov	r3, fp
   134e4:	mov	r2, r4
   134e8:	str	r8, [sp]
   134ec:	mov	r0, r9
   134f0:	ldr	r1, [sl]
   134f4:	bl	111f0 <printf@plt>
   134f8:	b	1342c <__assert_fail@plt+0x1ef4>
   134fc:	bne	13668 <__assert_fail@plt+0x2130>
   13500:	ldr	r3, [sp, #8]
   13504:	ldr	r5, [r3, #8]
   13508:	mov	r1, #420	; 0x1a4
   1350c:	mov	r0, r5
   13510:	bl	11310 <creat64@plt>
   13514:	subs	r7, r0, #0
   13518:	blt	136a8 <__assert_fail@plt+0x2170>
   1351c:	ldr	r3, [r6, #4]
   13520:	cmp	r3, #0
   13524:	bne	13678 <__assert_fail@plt+0x2140>
   13528:	ldr	r3, [r6, #144]	; 0x90
   1352c:	movw	r2, #51908	; 0xcac4
   13530:	movt	r2, #2
   13534:	mov	r1, r4
   13538:	mov	r0, r7
   1353c:	rev16	r3, r3
   13540:	strh	r3, [r6, #18]
   13544:	bl	12fd4 <__assert_fail@plt+0x1a9c>
   13548:	add	sp, sp, #20
   1354c:	ldrd	r4, [sp]
   13550:	ldrd	r6, [sp, #8]
   13554:	ldrd	r8, [sp, #16]
   13558:	ldrd	sl, [sp, #24]
   1355c:	add	sp, sp, #32
   13560:	pop	{pc}		; (ldr pc, [sp], #4)
   13564:	mov	r0, r4
   13568:	mov	r1, #93	; 0x5d
   1356c:	bl	113c4 <strchr@plt>
   13570:	cmp	r0, #0
   13574:	beq	135fc <__assert_fail@plt+0x20c4>
   13578:	ldrb	r3, [r0, #1]
   1357c:	mov	r2, #0
   13580:	strb	r2, [r0]
   13584:	cmp	r3, #58	; 0x3a
   13588:	ldr	r3, [sp, #8]
   1358c:	addne	r4, r0, #1
   13590:	addeq	r4, r0, #2
   13594:	ldr	r0, [r3, fp]
   13598:	adds	r0, r0, #1
   1359c:	beq	134ac <__assert_fail@plt+0x1f74>
   135a0:	b	134a0 <__assert_fail@plt+0x1f68>
   135a4:	movw	r3, #50256	; 0xc450
   135a8:	movt	r3, #2
   135ac:	mov	r2, #6
   135b0:	mov	r1, #1
   135b4:	ldr	r3, [r3]
   135b8:	movw	r0, #44160	; 0xac80
   135bc:	movt	r0, #1
   135c0:	bl	112e0 <fwrite@plt>
   135c4:	mov	r0, fp
   135c8:	bl	112d4 <perror@plt>
   135cc:	b	13448 <__assert_fail@plt+0x1f10>
   135d0:	mov	r7, r4
   135d4:	mov	r5, #1
   135d8:	mov	r1, #58	; 0x3a
   135dc:	ldr	r0, [r7, #4]!
   135e0:	add	r5, r5, #1
   135e4:	bl	113c4 <strchr@plt>
   135e8:	cmp	r0, #0
   135ec:	beq	13640 <__assert_fail@plt+0x2108>
   135f0:	cmp	r8, r5
   135f4:	bgt	135d8 <__assert_fail@plt+0x20a0>
   135f8:	b	1340c <__assert_fail@plt+0x1ed4>
   135fc:	mov	r4, r7
   13600:	b	134ac <__assert_fail@plt+0x1f74>
   13604:	movw	r1, #44212	; 0xacb4
   13608:	movt	r1, #1
   1360c:	movw	r0, #44224	; 0xacc0
   13610:	movt	r0, #1
   13614:	add	r3, sp, #8
   13618:	add	r2, sp, #12
   1361c:	bl	11bc0 <__assert_fail@plt+0x688>
   13620:	ldr	r8, [sp, #12]
   13624:	cmp	r8, #1
   13628:	bgt	133f4 <__assert_fail@plt+0x1ebc>
   1362c:	ldr	r3, [sp, #8]
   13630:	movw	r0, #44228	; 0xacc4
   13634:	movt	r0, #1
   13638:	ldr	r4, [r3]
   1363c:	b	1364c <__assert_fail@plt+0x2114>
   13640:	ldr	r4, [r4]
   13644:	movw	r0, #44228	; 0xacc4
   13648:	movt	r0, #1
   1364c:	mov	r1, r4
   13650:	bl	111f0 <printf@plt>
   13654:	mov	r1, r4
   13658:	movw	r0, #44272	; 0xacf0
   1365c:	movt	r0, #1
   13660:	bl	111f0 <printf@plt>
   13664:	b	13548 <__assert_fail@plt+0x2010>
   13668:	mov	r0, r4
   1366c:	bl	12680 <__assert_fail@plt+0x1148>
   13670:	mov	r5, r0
   13674:	b	13508 <__assert_fail@plt+0x1fd0>
   13678:	movw	r2, #51908	; 0xcac4
   1367c:	movt	r2, #2
   13680:	movw	r1, #51904	; 0xcac0
   13684:	movt	r1, #2
   13688:	mov	r3, r5
   1368c:	movw	r0, #44316	; 0xad1c
   13690:	movt	r0, #1
   13694:	str	r2, [sp]
   13698:	mov	r2, r4
   1369c:	ldr	r1, [r1]
   136a0:	bl	111f0 <printf@plt>
   136a4:	b	13528 <__assert_fail@plt+0x1ff0>
   136a8:	movw	r3, #50256	; 0xc450
   136ac:	movt	r3, #2
   136b0:	mov	r2, #6
   136b4:	mov	r1, #1
   136b8:	ldr	r3, [r3]
   136bc:	movw	r0, #44160	; 0xac80
   136c0:	movt	r0, #1
   136c4:	bl	112e0 <fwrite@plt>
   136c8:	mov	r0, r5
   136cc:	bl	112d4 <perror@plt>
   136d0:	b	13548 <__assert_fail@plt+0x2010>
   136d4:	movw	r1, #50180	; 0xc404
   136d8:	movt	r1, #2
   136dc:	push	{lr}		; (str lr, [sp, #-4]!)
   136e0:	mvn	lr, #0
   136e4:	mvn	r0, #2
   136e8:	mvn	ip, #1
   136ec:	movw	r2, #50428	; 0xc4fc
   136f0:	movt	r2, #2
   136f4:	movw	r3, #52140	; 0xcbac
   136f8:	movt	r3, #2
   136fc:	str	lr, [r1]
   13700:	mov	r1, #0
   13704:	str	r0, [r3]
   13708:	add	r0, r3, #4
   1370c:	str	r1, [r2]
   13710:	str	r1, [r2, #4]
   13714:	str	r1, [r2, #8]
   13718:	str	ip, [r3, #520]	; 0x208
   1371c:	pop	{pc}		; (ldr pc, [sp], #4)
   13720:	mov	ip, #1
   13724:	mvn	r0, #0
   13728:	push	{lr}		; (str lr, [sp, #-4]!)
   1372c:	movw	r2, #50428	; 0xc4fc
   13730:	movt	r2, #2
   13734:	movw	r1, #50180	; 0xc404
   13738:	movt	r1, #2
   1373c:	mvn	lr, #2
   13740:	movw	r3, #52140	; 0xcbac
   13744:	movt	r3, #2
   13748:	str	r0, [r1]
   1374c:	mov	r1, #0
   13750:	add	r0, r3, #4
   13754:	str	ip, [r2, #8]
   13758:	mvn	ip, #1
   1375c:	str	lr, [r3]
   13760:	str	r1, [r2]
   13764:	str	r1, [r2, #4]
   13768:	str	ip, [r3, #520]	; 0x208
   1376c:	pop	{pc}		; (ldr pc, [sp], #4)
   13770:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13774:	movw	r5, #50428	; 0xc4fc
   13778:	movt	r5, #2
   1377c:	strd	r6, [sp, #8]
   13780:	movw	r7, #52140	; 0xcbac
   13784:	movt	r7, #2
   13788:	strd	r8, [sp, #16]
   1378c:	ldr	r8, [r5, #8]
   13790:	strd	sl, [sp, #24]
   13794:	str	lr, [sp, #32]
   13798:	sub	sp, sp, #12
   1379c:	lsl	r3, r8, #6
   137a0:	add	r4, r3, r8
   137a4:	lsl	r4, r4, #3
   137a8:	str	r3, [sp, #4]
   137ac:	ldr	r3, [r7, r4]
   137b0:	cmn	r3, #2
   137b4:	bne	13870 <__assert_fail@plt+0x2338>
   137b8:	clz	r3, r8
   137bc:	add	r2, r4, #4
   137c0:	lsr	r3, r3, #5
   137c4:	add	r2, r7, r2
   137c8:	cmp	r1, #0
   137cc:	add	r1, r2, #4
   137d0:	str	r1, [sp]
   137d4:	str	r3, [r5, #8]
   137d8:	beq	1388c <__assert_fail@plt+0x2354>
   137dc:	movw	fp, #50180	; 0xc404
   137e0:	movt	fp, #2
   137e4:	ldr	r4, [sp]
   137e8:	mov	r6, r0
   137ec:	add	r9, r2, #516	; 0x204
   137f0:	mov	sl, #1
   137f4:	b	13818 <__assert_fail@plt+0x22e0>
   137f8:	ldr	r3, [fp]
   137fc:	str	r0, [r5]
   13800:	cmp	r3, #10
   13804:	moveq	r3, #10
   13808:	movne	r3, r0
   1380c:	strb	r3, [r4], #1
   13810:	cmp	r9, r4
   13814:	beq	1385c <__assert_fail@plt+0x2324>
   13818:	ldr	r3, [r5]
   1381c:	mov	r0, #0
   13820:	cmp	r3, r0
   13824:	bne	137f8 <__assert_fail@plt+0x22c0>
   13828:	mov	r0, r6
   1382c:	bl	11520 <getc@plt>
   13830:	cmn	r0, #1
   13834:	mov	r3, #13
   13838:	beq	1385c <__assert_fail@plt+0x2324>
   1383c:	cmp	r0, r3
   13840:	cmpne	r0, #10
   13844:	uxtbne	r3, r0
   13848:	streq	sl, [r5]
   1384c:	streq	r0, [fp]
   13850:	strb	r3, [r4], #1
   13854:	cmp	r9, r4
   13858:	bne	13818 <__assert_fail@plt+0x22e0>
   1385c:	ldr	r3, [sp, #4]
   13860:	add	r8, r3, r8
   13864:	ldr	r3, [sp]
   13868:	sub	r4, r4, r3
   1386c:	str	r4, [r7, r8, lsl #3]
   13870:	add	sp, sp, #12
   13874:	ldrd	r4, [sp]
   13878:	ldrd	r6, [sp, #8]
   1387c:	ldrd	r8, [sp, #16]
   13880:	ldrd	sl, [sp, #24]
   13884:	add	sp, sp, #32
   13888:	pop	{pc}		; (ldr pc, [sp], #4)
   1388c:	bl	11430 <fileno@plt>
   13890:	mov	r2, #512	; 0x200
   13894:	ldr	r1, [sp]
   13898:	bl	111fc <read@plt>
   1389c:	str	r0, [r7, r4]
   138a0:	b	13870 <__assert_fail@plt+0x2338>
   138a4:	movw	ip, #50428	; 0xc4fc
   138a8:	movt	ip, #2
   138ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   138b0:	ldr	r3, [ip, #4]
   138b4:	movw	r4, #52140	; 0xcbac
   138b8:	movt	r4, #2
   138bc:	strd	r6, [sp, #8]
   138c0:	mov	r7, r1
   138c4:	str	r8, [sp, #16]
   138c8:	str	lr, [sp, #20]
   138cc:	mvn	lr, #1
   138d0:	clz	r5, r3
   138d4:	add	r3, r3, r3, lsl #6
   138d8:	lsr	r5, r5, #5
   138dc:	lsl	r6, r5, #6
   138e0:	str	lr, [r4, r3, lsl #3]
   138e4:	str	r5, [ip, #4]
   138e8:	add	r8, r6, r5
   138ec:	lsl	r8, r8, #3
   138f0:	ldr	r3, [r4, r8]
   138f4:	cmp	r3, lr
   138f8:	beq	13924 <__assert_fail@plt+0x23ec>
   138fc:	add	r5, r6, r5
   13900:	ldr	r8, [sp, #16]
   13904:	mov	r0, r3
   13908:	add	r4, r4, r5, lsl #3
   1390c:	add	r4, r4, #4
   13910:	str	r4, [r7]
   13914:	ldrd	r4, [sp]
   13918:	ldrd	r6, [sp, #8]
   1391c:	add	sp, sp, #20
   13920:	pop	{pc}		; (ldr pc, [sp], #4)
   13924:	mov	r1, r2
   13928:	bl	13770 <__assert_fail@plt+0x2238>
   1392c:	ldr	r3, [r4, r8]
   13930:	b	138fc <__assert_fail@plt+0x23c4>
   13934:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13938:	movw	r4, #50428	; 0xc4fc
   1393c:	movt	r4, #2
   13940:	ldr	r3, [r4, #8]
   13944:	strd	r6, [sp, #8]
   13948:	str	lr, [sp, #28]
   1394c:	movw	lr, #52140	; 0xcbac
   13950:	movt	lr, #2
   13954:	strd	r8, [sp, #16]
   13958:	str	sl, [sp, #24]
   1395c:	sub	sp, sp, #8
   13960:	add	ip, r3, r3, lsl #6
   13964:	lsl	ip, ip, #3
   13968:	ldr	r9, [lr, ip]
   1396c:	cmn	r9, #1
   13970:	blt	13a30 <__assert_fail@plt+0x24f8>
   13974:	clz	r3, r3
   13978:	mvn	r5, #1
   1397c:	lsr	r3, r3, #5
   13980:	add	r6, ip, #4
   13984:	cmp	r9, #0
   13988:	add	r2, r6, lr
   1398c:	str	r5, [lr, ip]
   13990:	add	r5, r2, #4
   13994:	str	r3, [r4, #8]
   13998:	ble	13a64 <__assert_fail@plt+0x252c>
   1399c:	cmp	r1, #0
   139a0:	beq	13a38 <__assert_fail@plt+0x2500>
   139a4:	movw	r7, #50180	; 0xc404
   139a8:	movt	r7, #2
   139ac:	ldr	r3, [r7]
   139b0:	add	r6, r9, #4
   139b4:	mov	r8, r0
   139b8:	mov	sl, #1
   139bc:	add	r6, r2, r6
   139c0:	cmp	r3, #13
   139c4:	ldrb	r4, [r5], #1
   139c8:	bne	139dc <__assert_fail@plt+0x24a4>
   139cc:	cmp	r4, #10
   139d0:	beq	13a18 <__assert_fail@plt+0x24e0>
   139d4:	cmp	r4, #0
   139d8:	beq	139e8 <__assert_fail@plt+0x24b0>
   139dc:	mov	r1, r8
   139e0:	mov	r0, r4
   139e4:	bl	114a8 <putc@plt>
   139e8:	cmp	r6, r5
   139ec:	mov	r3, r4
   139f0:	str	r4, [r7]
   139f4:	bne	139c0 <__assert_fail@plt+0x2488>
   139f8:	mov	r0, r9
   139fc:	add	sp, sp, #8
   13a00:	ldrd	r4, [sp]
   13a04:	ldrd	r6, [sp, #8]
   13a08:	ldrd	r8, [sp, #16]
   13a0c:	ldr	sl, [sp, #24]
   13a10:	add	sp, sp, #28
   13a14:	pop	{pc}		; (ldr pc, [sp], #4)
   13a18:	mvn	r2, #0
   13a1c:	mvn	r3, #0
   13a20:	str	sl, [sp]
   13a24:	mov	r0, r8
   13a28:	bl	11454 <fseeko64@plt>
   13a2c:	b	139dc <__assert_fail@plt+0x24a4>
   13a30:	mov	r9, #0
   13a34:	b	139f8 <__assert_fail@plt+0x24c0>
   13a38:	bl	11430 <fileno@plt>
   13a3c:	mov	r2, r9
   13a40:	mov	r1, r5
   13a44:	add	sp, sp, #8
   13a48:	ldrd	r4, [sp]
   13a4c:	ldrd	r6, [sp, #8]
   13a50:	ldrd	r8, [sp, #16]
   13a54:	ldr	sl, [sp, #24]
   13a58:	ldr	lr, [sp, #28]
   13a5c:	add	sp, sp, #32
   13a60:	b	11424 <write@plt>
   13a64:	mvn	r9, #0
   13a68:	b	139f8 <__assert_fail@plt+0x24c0>
   13a6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13a70:	movw	r4, #52140	; 0xcbac
   13a74:	movt	r4, #2
   13a78:	strd	r6, [sp, #8]
   13a7c:	mov	r6, r2
   13a80:	mov	r7, r1
   13a84:	str	r8, [sp, #16]
   13a88:	movw	r8, #50428	; 0xc4fc
   13a8c:	movt	r8, #2
   13a90:	ldr	ip, [r8, #4]
   13a94:	str	lr, [sp, #20]
   13a98:	clz	lr, ip
   13a9c:	add	r5, ip, ip, lsl #6
   13aa0:	lsr	lr, lr, #5
   13aa4:	lsl	ip, lr, #6
   13aa8:	str	r2, [r4, r5, lsl #3]
   13aac:	str	lr, [r8, #4]
   13ab0:	add	r2, ip, lr
   13ab4:	ldr	r2, [r4, r2, lsl #3]
   13ab8:	cmn	r2, #2
   13abc:	beq	13ad0 <__assert_fail@plt+0x2598>
   13ac0:	mov	r1, r3
   13ac4:	bl	13934 <__assert_fail@plt+0x23fc>
   13ac8:	ldr	lr, [r8, #4]
   13acc:	lsl	ip, lr, #6
   13ad0:	add	ip, ip, lr
   13ad4:	mvn	r2, #2
   13ad8:	ldr	r8, [sp, #16]
   13adc:	lsl	ip, ip, #3
   13ae0:	mov	r0, r6
   13ae4:	add	r3, ip, #4
   13ae8:	add	r3, r4, r3
   13aec:	str	r2, [r4, ip]
   13af0:	ldrd	r4, [sp]
   13af4:	str	r3, [r7]
   13af8:	ldrd	r6, [sp, #8]
   13afc:	add	sp, sp, #20
   13b00:	pop	{pc}		; (ldr pc, [sp], #4)
   13b04:	strd	r4, [sp, #-20]!	; 0xffffffec
   13b08:	mov	r4, r0
   13b0c:	mov	r5, #0
   13b10:	strd	r6, [sp, #8]
   13b14:	mov	r7, #128	; 0x80
   13b18:	str	lr, [sp, #16]
   13b1c:	sub	sp, sp, #668	; 0x29c
   13b20:	add	r6, sp, #20
   13b24:	b	13b3c <__assert_fail@plt+0x2604>
   13b28:	add	ip, sp, #16
   13b2c:	add	r5, r5, #1
   13b30:	stm	sp, {r6, ip}
   13b34:	str	r7, [sp, #16]
   13b38:	bl	11298 <recvfrom@plt>
   13b3c:	add	r2, sp, #12
   13b40:	movw	r1, #21531	; 0x541b
   13b44:	mov	r0, r4
   13b48:	bl	187dc <argp_parse@@Base+0x1110>
   13b4c:	ldr	ip, [sp, #12]
   13b50:	mov	r3, #0
   13b54:	mov	r2, #516	; 0x204
   13b58:	add	r1, sp, #148	; 0x94
   13b5c:	mov	r0, r4
   13b60:	cmp	ip, r3
   13b64:	bne	13b28 <__assert_fail@plt+0x25f0>
   13b68:	mov	r0, r5
   13b6c:	add	sp, sp, #668	; 0x29c
   13b70:	ldrd	r4, [sp]
   13b74:	ldrd	r6, [sp, #8]
   13b78:	add	sp, sp, #16
   13b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   13b80:	strd	r4, [sp, #-16]!
   13b84:	mov	r5, r0
   13b88:	ldr	r0, [r0, #12]
   13b8c:	str	r6, [sp, #8]
   13b90:	str	lr, [sp, #12]
   13b94:	cmp	r0, #0
   13b98:	beq	13bac <__assert_fail@plt+0x2674>
   13b9c:	ldr	r4, [r0, #24]
   13ba0:	bl	186b0 <argp_parse@@Base+0xfe4>
   13ba4:	subs	r0, r4, #0
   13ba8:	bne	13b9c <__assert_fail@plt+0x2664>
   13bac:	ldr	r3, [r5, #4]
   13bb0:	cmp	r3, #0
   13bb4:	bne	13bd0 <__assert_fail@plt+0x2698>
   13bb8:	mov	r0, r5
   13bbc:	ldrd	r4, [sp]
   13bc0:	ldr	r6, [sp, #8]
   13bc4:	ldr	lr, [sp, #12]
   13bc8:	add	sp, sp, #16
   13bcc:	b	186b0 <argp_parse@@Base+0xfe4>
   13bd0:	ldr	r0, [r5]
   13bd4:	bl	186b0 <argp_parse@@Base+0xfe4>
   13bd8:	ldr	r0, [r5, #8]
   13bdc:	bl	186b0 <argp_parse@@Base+0xfe4>
   13be0:	b	13bb8 <__assert_fail@plt+0x2680>
   13be4:	ldr	r3, [r0, #12]
   13be8:	strd	r4, [sp, #-16]!
   13bec:	ldr	r2, [r1, #12]
   13bf0:	str	r6, [sp, #8]
   13bf4:	str	lr, [sp, #12]
   13bf8:	cmp	r3, r2
   13bfc:	beq	13c5c <__assert_fail@plt+0x2724>
   13c00:	mov	r5, r1
   13c04:	mov	r4, r0
   13c08:	mov	r1, r2
   13c0c:	mov	r0, r3
   13c10:	bl	13be4 <__assert_fail@plt+0x26ac>
   13c14:	cmp	r0, #0
   13c18:	bne	13c4c <__assert_fail@plt+0x2714>
   13c1c:	ldr	r3, [r5, #8]
   13c20:	ldr	r0, [r4, #8]
   13c24:	mvn	r2, r3
   13c28:	lsr	r2, r2, #31
   13c2c:	cmp	r2, r0, lsr #31
   13c30:	subne	r0, r0, r3
   13c34:	subeq	r0, r3, r0
   13c38:	cmp	r0, #0
   13c3c:	bne	13c4c <__assert_fail@plt+0x2714>
   13c40:	ldr	r0, [r4, #4]
   13c44:	ldr	r3, [r5, #4]
   13c48:	sub	r0, r3, r0
   13c4c:	ldrd	r4, [sp]
   13c50:	ldr	r6, [sp, #8]
   13c54:	add	sp, sp, #12
   13c58:	pop	{pc}		; (ldr pc, [sp], #4)
   13c5c:	ldr	lr, [r1, #4]
   13c60:	ldr	r3, [r1, #8]
   13c64:	ldr	r2, [r0, #8]
   13c68:	ldr	ip, [r0, #4]
   13c6c:	mvn	r1, r3
   13c70:	lsr	r1, r1, #31
   13c74:	ldrd	r4, [sp]
   13c78:	cmp	r1, r2, lsr #31
   13c7c:	ldr	r6, [sp, #8]
   13c80:	add	sp, sp, #12
   13c84:	subne	r0, r2, r3
   13c88:	subeq	r0, r3, r2
   13c8c:	cmp	r0, #0
   13c90:	subeq	r0, lr, ip
   13c94:	pop	{pc}		; (ldr pc, [sp], #4)
   13c98:	ldr	r2, [r0, #8]
   13c9c:	cmp	r2, #0
   13ca0:	beq	13cac <__assert_fail@plt+0x2774>
   13ca4:	mov	r0, #0
   13ca8:	bx	lr
   13cac:	ldr	r2, [r1, #8]
   13cb0:	cmp	r2, #0
   13cb4:	bne	13ca4 <__assert_fail@plt+0x276c>
   13cb8:	ldr	r2, [r0, #12]
   13cbc:	ldr	r1, [r1, #12]
   13cc0:	orr	r2, r2, r1
   13cc4:	tst	r2, #16
   13cc8:	bne	13ca4 <__assert_fail@plt+0x276c>
   13ccc:	ldr	r2, [r3]
   13cd0:	ldr	r1, [r0, #4]
   13cd4:	add	r0, r2, #1
   13cd8:	str	r0, [r3]
   13cdc:	strb	r1, [r2]
   13ce0:	b	13ca4 <__assert_fail@plt+0x276c>
   13ce4:	strd	r4, [sp, #-16]!
   13ce8:	ldr	r4, [r0, #12]
   13cec:	str	r6, [sp, #8]
   13cf0:	str	lr, [sp, #12]
   13cf4:	ands	r4, r4, #8
   13cf8:	movne	r4, #0
   13cfc:	bne	13d28 <__assert_fail@plt+0x27f0>
   13d00:	ldr	r5, [r0, #4]
   13d04:	sub	r3, r5, #1
   13d08:	cmp	r3, #254	; 0xfe
   13d0c:	bhi	13d28 <__assert_fail@plt+0x27f0>
   13d10:	bl	11394 <__ctype_b_loc@plt>
   13d14:	ldr	r2, [r0]
   13d18:	lsl	r3, r5, #1
   13d1c:	ldrh	r3, [r2, r3]
   13d20:	tst	r3, #16384	; 0x4000
   13d24:	movne	r4, r5
   13d28:	mov	r0, r4
   13d2c:	ldrd	r4, [sp]
   13d30:	ldr	r6, [sp, #8]
   13d34:	add	sp, sp, #12
   13d38:	pop	{pc}		; (ldr pc, [sp], #4)
   13d3c:	str	r4, [sp, #-8]!
   13d40:	mov	r4, r0
   13d44:	str	lr, [sp, #4]
   13d48:	bl	11394 <__ctype_b_loc@plt>
   13d4c:	ldr	lr, [r0]
   13d50:	ldr	r2, [r4]
   13d54:	b	13d5c <__assert_fail@plt+0x2824>
   13d58:	str	r2, [r4]
   13d5c:	ldrb	r1, [r2]
   13d60:	mov	r3, r2
   13d64:	add	r2, r2, #1
   13d68:	lsl	r0, r1, #1
   13d6c:	ldrh	ip, [lr, r0]
   13d70:	tst	ip, #8192	; 0x2000
   13d74:	bne	13d58 <__assert_fail@plt+0x2820>
   13d78:	subs	r0, r1, #45	; 0x2d
   13d7c:	movne	r0, #1
   13d80:	cmp	r1, #0
   13d84:	beq	13db8 <__assert_fail@plt+0x2880>
   13d88:	tst	ip, #8
   13d8c:	beq	13da0 <__assert_fail@plt+0x2868>
   13d90:	b	13db8 <__assert_fail@plt+0x2880>
   13d94:	ldrh	r2, [lr, r1]
   13d98:	tst	r2, #8
   13d9c:	bne	13db8 <__assert_fail@plt+0x2880>
   13da0:	add	r3, r3, #1
   13da4:	str	r3, [r4]
   13da8:	ldrb	r2, [r3]
   13dac:	cmp	r2, #0
   13db0:	lsl	r1, r2, #1
   13db4:	bne	13d94 <__assert_fail@plt+0x285c>
   13db8:	ldr	r4, [sp]
   13dbc:	add	sp, sp, #4
   13dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   13dc4:	cmp	r1, #0
   13dc8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13dcc:	strd	r6, [sp, #8]
   13dd0:	str	r8, [sp, #16]
   13dd4:	str	lr, [sp, #20]
   13dd8:	beq	13e60 <__assert_fail@plt+0x2928>
   13ddc:	mov	r6, r0
   13de0:	mov	r8, r2
   13de4:	sub	r7, r1, #1
   13de8:	ldrd	r4, [r6]
   13dec:	cmp	r5, #0
   13df0:	sub	r5, r5, #1
   13df4:	beq	13e34 <__assert_fail@plt+0x28fc>
   13df8:	add	r4, r4, #24
   13dfc:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13e00:	sub	r5, r5, #1
   13e04:	cmp	r0, #0
   13e08:	beq	13e28 <__assert_fail@plt+0x28f0>
   13e0c:	ldr	r3, [r4, #-12]
   13e10:	mov	r1, r8
   13e14:	tst	r3, #2
   13e18:	bne	13e28 <__assert_fail@plt+0x28f0>
   13e1c:	bl	111d8 <strcmp@plt>
   13e20:	cmp	r0, #0
   13e24:	beq	13e48 <__assert_fail@plt+0x2910>
   13e28:	cmn	r5, #1
   13e2c:	add	r4, r4, #24
   13e30:	bne	13dfc <__assert_fail@plt+0x28c4>
   13e34:	sub	r7, r7, #1
   13e38:	add	r6, r6, #28
   13e3c:	cmn	r7, #1
   13e40:	bne	13de8 <__assert_fail@plt+0x28b0>
   13e44:	mov	r6, #0
   13e48:	mov	r0, r6
   13e4c:	ldrd	r4, [sp]
   13e50:	ldrd	r6, [sp, #8]
   13e54:	ldr	r8, [sp, #16]
   13e58:	add	sp, sp, #20
   13e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13e60:	mov	r6, r1
   13e64:	b	13e48 <__assert_fail@plt+0x2910>
   13e68:	strd	r4, [sp, #-16]!
   13e6c:	subs	r5, r0, #0
   13e70:	mov	r4, r1
   13e74:	str	r6, [sp, #8]
   13e78:	str	lr, [sp, #12]
   13e7c:	beq	13e90 <__assert_fail@plt+0x2958>
   13e80:	mov	r1, #10
   13e84:	bl	113c4 <strchr@plt>
   13e88:	adds	r5, r0, #0
   13e8c:	movne	r5, #1
   13e90:	cmp	r4, #0
   13e94:	beq	13ec0 <__assert_fail@plt+0x2988>
   13e98:	ldr	r3, [r4]
   13e9c:	cmp	r3, #0
   13ea0:	beq	13ec0 <__assert_fail@plt+0x2988>
   13ea4:	ldr	r0, [r3, #8]
   13ea8:	ldr	r1, [r3, #16]
   13eac:	bl	13e68 <__assert_fail@plt+0x2930>
   13eb0:	ldr	r3, [r4, #16]!
   13eb4:	add	r5, r5, r0
   13eb8:	cmp	r3, #0
   13ebc:	bne	13ea4 <__assert_fail@plt+0x296c>
   13ec0:	mov	r0, r5
   13ec4:	ldrd	r4, [sp]
   13ec8:	ldr	r6, [sp, #8]
   13ecc:	add	sp, sp, #12
   13ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ed4:	strd	r4, [sp, #-16]!
   13ed8:	mov	r5, r1
   13edc:	mov	r1, r3
   13ee0:	str	r6, [sp, #8]
   13ee4:	mov	r6, r0
   13ee8:	mov	r0, r2
   13eec:	mov	r4, r2
   13ef0:	str	lr, [sp, #12]
   13ef4:	bl	1854c <argp_parse@@Base+0xe80>
   13ef8:	mov	r2, r0
   13efc:	mov	r1, r6
   13f00:	ldr	r6, [sp, #8]
   13f04:	mov	r0, r5
   13f08:	ldr	lr, [sp, #12]
   13f0c:	ldr	r3, [r4, #20]
   13f10:	ldrd	r4, [sp]
   13f14:	add	sp, sp, #16
   13f18:	bx	r3
   13f1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13f20:	ldr	r4, [r0]
   13f24:	strd	r6, [sp, #8]
   13f28:	strd	r8, [sp, #16]
   13f2c:	strd	sl, [sp, #24]
   13f30:	str	lr, [sp, #32]
   13f34:	sub	sp, sp, #52	; 0x34
   13f38:	ldr	r7, [r0, #16]
   13f3c:	str	r1, [sp]
   13f40:	str	r0, [sp, #4]
   13f44:	mov	r0, #16
   13f48:	bl	19270 <argp_parse@@Base+0x1ba4>
   13f4c:	subs	fp, r0, #0
   13f50:	beq	14584 <__assert_fail@plt+0x304c>
   13f54:	mov	r3, #0
   13f58:	cmp	r4, r3
   13f5c:	str	r3, [fp, #4]
   13f60:	str	r3, [fp, #12]
   13f64:	beq	141c8 <__assert_fail@plt+0x2c90>
   13f68:	ldr	r0, [r4, #12]
   13f6c:	ands	r0, r0, #4
   13f70:	bne	145c0 <__assert_fail@plt+0x3088>
   13f74:	mov	r9, r0
   13f78:	add	r5, r4, #24
   13f7c:	mov	r8, r0
   13f80:	b	13fd0 <__assert_fail@plt+0x2a98>
   13f84:	ldr	r3, [r5, #-12]
   13f88:	tst	r3, #4
   13f8c:	bne	13f9c <__assert_fail@plt+0x2a64>
   13f90:	add	r9, r9, #1
   13f94:	str	r9, [fp, #4]
   13f98:	ldr	r3, [r5, #-12]
   13f9c:	tst	r3, #8
   13fa0:	bne	13fcc <__assert_fail@plt+0x2a94>
   13fa4:	ldr	r6, [r5, #-20]	; 0xffffffec
   13fa8:	sub	r3, r6, #1
   13fac:	cmp	r3, #254	; 0xfe
   13fb0:	bhi	13fcc <__assert_fail@plt+0x2a94>
   13fb4:	bl	11394 <__ctype_b_loc@plt>
   13fb8:	ldr	r3, [r0]
   13fbc:	lsl	r6, r6, #1
   13fc0:	ldrh	r3, [r3, r6]
   13fc4:	tst	r3, #16384	; 0x4000
   13fc8:	addne	r8, r8, #1
   13fcc:	add	r5, r5, #24
   13fd0:	ldr	r3, [r5, #-20]	; 0xffffffec
   13fd4:	cmp	r3, #0
   13fd8:	bne	13f84 <__assert_fail@plt+0x2a4c>
   13fdc:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13fe0:	cmp	r3, #0
   13fe4:	bne	13f84 <__assert_fail@plt+0x2a4c>
   13fe8:	ldr	r3, [r5, #-8]
   13fec:	cmp	r3, #0
   13ff0:	bne	13f84 <__assert_fail@plt+0x2a4c>
   13ff4:	ldr	sl, [r5, #-4]
   13ff8:	cmp	sl, #0
   13ffc:	bne	13f84 <__assert_fail@plt+0x2a4c>
   14000:	rsb	r9, r9, r9, lsl #3
   14004:	lsl	r0, r9, #2
   14008:	bl	19270 <argp_parse@@Base+0x1ba4>
   1400c:	str	r0, [fp]
   14010:	add	r0, r8, #1
   14014:	bl	19270 <argp_parse@@Base+0x1ba4>
   14018:	ldr	r5, [fp]
   1401c:	mov	r8, r0
   14020:	str	r0, [fp, #8]
   14024:	cmp	r5, #0
   14028:	cmpne	r0, #0
   1402c:	beq	14528 <__assert_fail@plt+0x2ff0>
   14030:	ldr	r2, [fp, #4]
   14034:	movw	r3, #37449	; 0x9249
   14038:	movt	r3, #2340	; 0x924
   1403c:	cmp	r2, r3
   14040:	bhi	14548 <__assert_fail@plt+0x3010>
   14044:	mov	r6, r0
   14048:	mov	r0, sl
   1404c:	str	r7, [sp, #8]
   14050:	mov	r7, r8
   14054:	ldr	sl, [sp]
   14058:	add	r5, r5, #28
   1405c:	str	fp, [sp, #12]
   14060:	ldr	r3, [r4, #4]
   14064:	ldr	r8, [sp, #4]
   14068:	cmp	r3, #0
   1406c:	ldr	fp, [r4, #20]
   14070:	bne	14080 <__assert_fail@plt+0x2b48>
   14074:	ldr	ip, [r4]
   14078:	cmp	ip, #0
   1407c:	beq	14160 <__assert_fail@plt+0x2c28>
   14080:	mov	r2, #0
   14084:	cmp	fp, #0
   14088:	str	r4, [r5, #-28]	; 0xffffffe4
   1408c:	str	r2, [r5, #-24]	; 0xffffffe8
   14090:	str	r6, [r5, #-20]	; 0xffffffec
   14094:	bne	140a8 <__assert_fail@plt+0x2b70>
   14098:	ldr	r2, [r4]
   1409c:	orrs	r3, r2, r3
   140a0:	movne	fp, r0
   140a4:	beq	14180 <__assert_fail@plt+0x2c48>
   140a8:	mov	r3, #0
   140ac:	str	fp, [r5, #-16]
   140b0:	str	sl, [r5, #-12]
   140b4:	str	r8, [r5, #-8]
   140b8:	add	r3, r3, #1
   140bc:	str	r3, [r5, #-24]	; 0xffffffe8
   140c0:	ldr	r3, [r4, #12]
   140c4:	tst	r3, #8
   140c8:	bne	14130 <__assert_fail@plt+0x2bf8>
   140cc:	ldr	r9, [r4, #4]
   140d0:	sub	r3, r9, #1
   140d4:	cmp	r3, #254	; 0xfe
   140d8:	bhi	14130 <__assert_fail@plt+0x2bf8>
   140dc:	bl	11394 <__ctype_b_loc@plt>
   140e0:	ldr	r0, [r0]
   140e4:	lsl	r3, r9, #1
   140e8:	ldrh	r3, [r0, r3]
   140ec:	tst	r3, #16384	; 0x4000
   140f0:	beq	14130 <__assert_fail@plt+0x2bf8>
   140f4:	cmp	r7, r6
   140f8:	uxtb	r9, r9
   140fc:	bcs	1412c <__assert_fail@plt+0x2bf4>
   14100:	ldrb	r3, [r7]
   14104:	cmp	r3, r9
   14108:	beq	14130 <__assert_fail@plt+0x2bf8>
   1410c:	mov	r3, r7
   14110:	sub	r0, r6, #1
   14114:	b	14124 <__assert_fail@plt+0x2bec>
   14118:	ldrb	ip, [r3, #1]!
   1411c:	cmp	ip, r9
   14120:	beq	14130 <__assert_fail@plt+0x2bf8>
   14124:	cmp	r0, r3
   14128:	bne	14118 <__assert_fail@plt+0x2be0>
   1412c:	strb	r9, [r6], #1
   14130:	add	r4, r4, #24
   14134:	ldr	r0, [r4, #4]
   14138:	cmp	r0, #0
   1413c:	bne	1414c <__assert_fail@plt+0x2c14>
   14140:	ldr	r3, [r4]
   14144:	cmp	r3, #0
   14148:	beq	14188 <__assert_fail@plt+0x2c50>
   1414c:	ldr	r3, [r4, #12]
   14150:	tst	r3, #4
   14154:	beq	141ac <__assert_fail@plt+0x2c74>
   14158:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1415c:	b	140b8 <__assert_fail@plt+0x2b80>
   14160:	ldr	ip, [r4, #16]
   14164:	cmp	ip, #0
   14168:	beq	141b4 <__assert_fail@plt+0x2c7c>
   1416c:	cmp	fp, #0
   14170:	str	r4, [r5, #-28]	; 0xffffffe4
   14174:	str	r3, [r5, #-24]	; 0xffffffe8
   14178:	str	r6, [r5, #-20]	; 0xffffffec
   1417c:	bne	140a8 <__assert_fail@plt+0x2b70>
   14180:	add	fp, r0, #1
   14184:	b	140a8 <__assert_fail@plt+0x2b70>
   14188:	ldr	r3, [r4, #16]
   1418c:	cmp	r3, #0
   14190:	bne	1414c <__assert_fail@plt+0x2c14>
   14194:	ldr	r3, [r4, #20]
   14198:	cmp	r3, #0
   1419c:	bne	1414c <__assert_fail@plt+0x2c14>
   141a0:	add	r5, r5, #28
   141a4:	mov	r0, fp
   141a8:	b	14068 <__assert_fail@plt+0x2b30>
   141ac:	mov	r3, r0
   141b0:	b	141a0 <__assert_fail@plt+0x2c68>
   141b4:	cmp	fp, #0
   141b8:	bne	14304 <__assert_fail@plt+0x2dcc>
   141bc:	ldr	r7, [sp, #8]
   141c0:	strb	r3, [r6]
   141c4:	ldr	fp, [sp, #12]
   141c8:	cmp	r7, #0
   141cc:	beq	142e4 <__assert_fail@plt+0x2dac>
   141d0:	ldr	r3, [r7]
   141d4:	cmp	r3, #0
   141d8:	beq	142e4 <__assert_fail@plt+0x2dac>
   141dc:	movw	r3, #37449	; 0x9249
   141e0:	movt	r3, #2340	; 0x924
   141e4:	mov	sl, r7
   141e8:	str	r3, [sp, #28]
   141ec:	add	r3, fp, #12
   141f0:	str	r3, [sp, #44]	; 0x2c
   141f4:	ldr	r6, [sl, #8]
   141f8:	ldr	r5, [sl, #12]
   141fc:	cmp	r5, #0
   14200:	bne	1420c <__assert_fail@plt+0x2cd4>
   14204:	cmp	r6, #0
   14208:	beq	14508 <__assert_fail@plt+0x2fd0>
   1420c:	ldr	r7, [sp, #4]
   14210:	mov	r0, #28
   14214:	ldr	r4, [r7, #16]
   14218:	bl	19270 <argp_parse@@Base+0x1ba4>
   1421c:	subs	r1, r0, #0
   14220:	beq	14260 <__assert_fail@plt+0x2d28>
   14224:	ldr	r3, [sp]
   14228:	sub	r4, sl, r4
   1422c:	asr	r4, r4, #4
   14230:	str	r6, [r1]
   14234:	ldr	r2, [fp, #12]
   14238:	str	r1, [fp, #12]
   1423c:	strd	r4, [r1, #4]
   14240:	cmp	r3, #0
   14244:	str	r3, [r1, #12]
   14248:	ldrne	r3, [r3, #20]
   1424c:	str	r7, [r1, #16]
   14250:	ldreq	r3, [sp]
   14254:	str	r2, [r1, #24]
   14258:	addne	r3, r3, #1
   1425c:	str	r3, [r1, #20]
   14260:	ldr	r0, [sl]
   14264:	bl	13f1c <__assert_fail@plt+0x29e4>
   14268:	ldr	r3, [fp, #12]
   1426c:	mov	r6, r0
   14270:	cmp	r3, #0
   14274:	bne	14280 <__assert_fail@plt+0x2d48>
   14278:	b	14510 <__assert_fail@plt+0x2fd8>
   1427c:	mov	r3, r2
   14280:	ldr	r2, [r3, #24]
   14284:	cmp	r2, #0
   14288:	bne	1427c <__assert_fail@plt+0x2d44>
   1428c:	add	r3, r3, #24
   14290:	ldr	r2, [r6, #4]
   14294:	ldr	r1, [r6, #12]
   14298:	cmp	r2, #0
   1429c:	str	r1, [r3]
   142a0:	mov	r3, #0
   142a4:	str	r3, [r6, #12]
   142a8:	beq	142d0 <__assert_fail@plt+0x2d98>
   142ac:	ldr	r3, [fp, #4]
   142b0:	cmp	r3, #0
   142b4:	bne	14314 <__assert_fail@plt+0x2ddc>
   142b8:	ldr	r1, [r6]
   142bc:	str	r2, [fp, #4]
   142c0:	ldr	r2, [r6, #8]
   142c4:	str	r1, [fp]
   142c8:	str	r2, [fp, #8]
   142cc:	str	r3, [r6, #4]
   142d0:	mov	r0, r6
   142d4:	bl	13b80 <__assert_fail@plt+0x2648>
   142d8:	ldr	r3, [sl, #16]!
   142dc:	cmp	r3, #0
   142e0:	bne	141f4 <__assert_fail@plt+0x2cbc>
   142e4:	mov	r0, fp
   142e8:	add	sp, sp, #52	; 0x34
   142ec:	ldrd	r4, [sp]
   142f0:	ldrd	r6, [sp, #8]
   142f4:	ldrd	r8, [sp, #16]
   142f8:	ldrd	sl, [sp, #24]
   142fc:	add	sp, sp, #32
   14300:	pop	{pc}		; (ldr pc, [sp], #4)
   14304:	str	r4, [r5, #-28]	; 0xffffffe4
   14308:	str	r3, [r5, #-24]	; 0xffffffe8
   1430c:	str	r6, [r5, #-20]	; 0xffffffec
   14310:	b	140a8 <__assert_fail@plt+0x2b70>
   14314:	add	r3, r2, r3
   14318:	rsb	r0, r3, r3, lsl #3
   1431c:	str	r3, [sp, #12]
   14320:	lsl	r0, r0, #2
   14324:	bl	19270 <argp_parse@@Base+0x1ba4>
   14328:	mov	r4, r0
   1432c:	ldr	r0, [fp, #8]
   14330:	str	r4, [sp, #8]
   14334:	bl	113b8 <strlen@plt>
   14338:	mov	r8, r0
   1433c:	ldr	r0, [r6, #8]
   14340:	bl	113b8 <strlen@plt>
   14344:	add	r0, r8, r0
   14348:	add	r0, r0, #1
   1434c:	bl	19270 <argp_parse@@Base+0x1ba4>
   14350:	cmp	r4, #0
   14354:	cmpne	r0, #0
   14358:	mov	r9, r0
   1435c:	beq	14568 <__assert_fail@plt+0x3030>
   14360:	ldr	r3, [sp, #12]
   14364:	ldr	r2, [sp, #28]
   14368:	cmp	r3, r2
   1436c:	bhi	145a4 <__assert_fail@plt+0x306c>
   14370:	ldm	fp, {r1, r5}
   14374:	ldr	r0, [sp, #8]
   14378:	rsb	r4, r5, r5, lsl #3
   1437c:	str	r1, [sp, #24]
   14380:	lsl	r4, r4, #2
   14384:	mov	r2, r4
   14388:	bl	11388 <mempcpy@plt>
   1438c:	ldm	r6, {r1, r3}
   14390:	rsb	r2, r3, r3, lsl #3
   14394:	str	r3, [sp, #16]
   14398:	lsl	r2, r2, #2
   1439c:	bl	11268 <memcpy@plt>
   143a0:	ldr	r7, [fp, #8]
   143a4:	mov	r2, r8
   143a8:	mov	r0, r9
   143ac:	mov	r1, r7
   143b0:	bl	11268 <memcpy@plt>
   143b4:	cmp	r5, #0
   143b8:	ldr	r3, [sp, #16]
   143bc:	beq	14518 <__assert_fail@plt+0x2fe0>
   143c0:	ldr	r1, [sp, #8]
   143c4:	subs	r5, r5, #1
   143c8:	add	r1, r1, #28
   143cc:	ldr	r2, [r1, #-20]	; 0xffffffec
   143d0:	sub	r2, r2, r7
   143d4:	add	r2, r9, r2
   143d8:	str	r2, [r1, #-20]	; 0xffffffec
   143dc:	bne	143c4 <__assert_fail@plt+0x2e8c>
   143e0:	ldr	r2, [sp, #8]
   143e4:	add	r4, r2, r4
   143e8:	add	r2, r9, r8
   143ec:	cmp	r3, #0
   143f0:	ldr	r1, [r6, #8]
   143f4:	str	r2, [sp, #16]
   143f8:	beq	14520 <__assert_fail@plt+0x2fe8>
   143fc:	mov	r8, r2
   14400:	add	r4, r4, #28
   14404:	str	r6, [sp, #32]
   14408:	sub	r2, r2, #1
   1440c:	strd	sl, [sp, #36]	; 0x24
   14410:	mov	sl, r1
   14414:	mov	fp, r3
   14418:	str	r2, [sp, #20]
   1441c:	str	r8, [r4, #-20]	; 0xffffffec
   14420:	ldr	r6, [r4, #-24]	; 0xffffffe8
   14424:	ldr	r7, [r4, #-28]	; 0xffffffe4
   14428:	cmp	r6, #0
   1442c:	beq	14480 <__assert_fail@plt+0x2f48>
   14430:	ldr	r3, [r7, #12]
   14434:	tst	r3, #8
   14438:	bne	14474 <__assert_fail@plt+0x2f3c>
   1443c:	ldr	r5, [r7, #4]
   14440:	sub	r3, r5, #1
   14444:	cmp	r3, #254	; 0xfe
   14448:	bhi	14474 <__assert_fail@plt+0x2f3c>
   1444c:	bl	11394 <__ctype_b_loc@plt>
   14450:	ldr	r1, [r0]
   14454:	lsl	r2, r5, #1
   14458:	ldrb	r3, [sl]
   1445c:	ldrh	r2, [r1, r2]
   14460:	sub	r5, r3, r5
   14464:	clz	r5, r5
   14468:	lsr	r5, r5, #5
   1446c:	ands	r2, r5, r2, lsr #14
   14470:	bne	144c4 <__assert_fail@plt+0x2f8c>
   14474:	subs	r6, r6, #1
   14478:	add	r7, r7, #24
   1447c:	bne	14430 <__assert_fail@plt+0x2ef8>
   14480:	subs	fp, fp, #1
   14484:	add	r4, r4, #28
   14488:	bne	1441c <__assert_fail@plt+0x2ee4>
   1448c:	add	r6, sp, #32
   14490:	ldm	r6, {r6, sl, fp}
   14494:	mov	r3, #0
   14498:	strb	r3, [r8]
   1449c:	ldr	r0, [sp, #24]
   144a0:	bl	186b0 <argp_parse@@Base+0xfe4>
   144a4:	ldr	r0, [fp, #8]
   144a8:	bl	186b0 <argp_parse@@Base+0xfe4>
   144ac:	ldr	r3, [sp, #8]
   144b0:	str	r3, [fp]
   144b4:	ldr	r3, [sp, #12]
   144b8:	str	r9, [fp, #8]
   144bc:	str	r3, [fp, #4]
   144c0:	b	142d0 <__assert_fail@plt+0x2d98>
   144c4:	ldr	r2, [sp, #16]
   144c8:	cmp	r9, r2
   144cc:	bcs	144fc <__assert_fail@plt+0x2fc4>
   144d0:	ldrb	r2, [r9]
   144d4:	cmp	r2, r3
   144d8:	beq	14500 <__assert_fail@plt+0x2fc8>
   144dc:	mov	r2, r9
   144e0:	ldr	r0, [sp, #20]
   144e4:	b	144f4 <__assert_fail@plt+0x2fbc>
   144e8:	ldrb	r1, [r2, #1]!
   144ec:	cmp	r1, r3
   144f0:	beq	14500 <__assert_fail@plt+0x2fc8>
   144f4:	cmp	r2, r0
   144f8:	bne	144e8 <__assert_fail@plt+0x2fb0>
   144fc:	strb	r3, [r8], #1
   14500:	add	sl, sl, #1
   14504:	b	14474 <__assert_fail@plt+0x2f3c>
   14508:	ldr	r1, [sp]
   1450c:	b	14260 <__assert_fail@plt+0x2d28>
   14510:	ldr	r3, [sp, #44]	; 0x2c
   14514:	b	14290 <__assert_fail@plt+0x2d58>
   14518:	ldr	r4, [sp, #8]
   1451c:	b	143e8 <__assert_fail@plt+0x2eb0>
   14520:	ldr	r8, [sp, #16]
   14524:	b	14494 <__assert_fail@plt+0x2f5c>
   14528:	movw	r3, #44676	; 0xae84
   1452c:	movt	r3, #1
   14530:	movw	r1, #44844	; 0xaf2c
   14534:	movt	r1, #1
   14538:	movw	r0, #44876	; 0xaf4c
   1453c:	movt	r0, #1
   14540:	movw	r2, #474	; 0x1da
   14544:	bl	11538 <__assert_fail@plt>
   14548:	movw	r3, #44676	; 0xae84
   1454c:	movt	r3, #1
   14550:	movw	r1, #44844	; 0xaf2c
   14554:	movt	r1, #1
   14558:	movw	r0, #44912	; 0xaf70
   1455c:	movt	r0, #1
   14560:	mov	r2, #476	; 0x1dc
   14564:	bl	11538 <__assert_fail@plt>
   14568:	movw	r1, #44844	; 0xaf2c
   1456c:	movt	r1, #1
   14570:	ldr	r3, [pc, #104]	; 145e0 <__assert_fail@plt+0x30a8>
   14574:	movw	r0, #44972	; 0xafac
   14578:	movt	r0, #1
   1457c:	movw	r2, #970	; 0x3ca
   14580:	bl	11538 <__assert_fail@plt>
   14584:	movw	r3, #44676	; 0xae84
   14588:	movt	r3, #1
   1458c:	movw	r1, #44844	; 0xaf2c
   14590:	movt	r1, #1
   14594:	movw	r0, #44856	; 0xaf38
   14598:	movt	r0, #1
   1459c:	movw	r2, #450	; 0x1c2
   145a0:	bl	11538 <__assert_fail@plt>
   145a4:	movw	r1, #44844	; 0xaf2c
   145a8:	movt	r1, #1
   145ac:	ldr	r3, [pc, #44]	; 145e0 <__assert_fail@plt+0x30a8>
   145b0:	movw	r0, #45000	; 0xafc8
   145b4:	movt	r0, #1
   145b8:	mov	r2, #972	; 0x3cc
   145bc:	bl	11538 <__assert_fail@plt>
   145c0:	movw	r3, #44676	; 0xae84
   145c4:	movt	r3, #1
   145c8:	movw	r1, #44844	; 0xaf2c
   145cc:	movt	r1, #1
   145d0:	movw	r0, #44860	; 0xaf3c
   145d4:	movt	r0, #1
   145d8:	mov	r2, #460	; 0x1cc
   145dc:	bl	11538 <__assert_fail@plt>
   145e0:	muleq	r1, r0, lr
   145e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   145e8:	ldr	r5, [r0, #4]
   145ec:	strd	r6, [sp, #8]
   145f0:	strd	r8, [sp, #16]
   145f4:	strd	sl, [sp, #24]
   145f8:	str	lr, [sp, #32]
   145fc:	sub	sp, sp, #12
   14600:	cmp	r5, #0
   14604:	ldr	r7, [r0]
   14608:	ldr	r6, [r0, #8]
   1460c:	beq	146dc <__assert_fail@plt+0x31a4>
   14610:	mov	sl, r3
   14614:	mov	r4, r7
   14618:	stm	sp, {r1, r2}
   1461c:	ldr	fp, [r4, #12]
   14620:	ands	r8, fp, #8
   14624:	movne	r0, #1
   14628:	movne	r8, #0
   1462c:	bne	14668 <__assert_fail@plt+0x3130>
   14630:	ldr	r9, [r4, #4]
   14634:	sub	r1, r9, #1
   14638:	cmp	r1, #254	; 0xfe
   1463c:	bhi	14664 <__assert_fail@plt+0x312c>
   14640:	bl	11394 <__ctype_b_loc@plt>
   14644:	ldr	r0, [r0]
   14648:	lsl	r1, r9, #1
   1464c:	ldrh	r1, [r0, r1]
   14650:	tst	r1, #16384	; 0x4000
   14654:	beq	14664 <__assert_fail@plt+0x312c>
   14658:	ldrb	r1, [r6]
   1465c:	cmp	r1, r9
   14660:	beq	1469c <__assert_fail@plt+0x3164>
   14664:	mov	r0, #1
   14668:	subs	r5, r5, #1
   1466c:	add	r4, r4, #24
   14670:	moveq	r0, #0
   14674:	cmp	r0, #0
   14678:	bne	1461c <__assert_fail@plt+0x30e4>
   1467c:	mov	r0, r8
   14680:	add	sp, sp, #12
   14684:	ldrd	r4, [sp]
   14688:	ldrd	r6, [sp, #8]
   1468c:	ldrd	r8, [sp, #16]
   14690:	ldrd	sl, [sp, #24]
   14694:	add	sp, sp, #32
   14698:	pop	{pc}		; (ldr pc, [sp], #4)
   1469c:	tst	fp, #4
   146a0:	moveq	r7, r4
   146a4:	tst	fp, #2
   146a8:	movne	r0, #1
   146ac:	bne	146d4 <__assert_fail@plt+0x319c>
   146b0:	mov	r3, sl
   146b4:	mov	r1, r7
   146b8:	ldr	ip, [sp]
   146bc:	mov	r0, r4
   146c0:	ldr	r2, [sp, #4]
   146c4:	blx	ip
   146c8:	mov	r8, r0
   146cc:	clz	r0, r0
   146d0:	lsr	r0, r0, #5
   146d4:	add	r6, r6, #1
   146d8:	b	14668 <__assert_fail@plt+0x3130>
   146dc:	mov	r8, r5
   146e0:	b	1467c <__assert_fail@plt+0x3144>
   146e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   146e8:	strd	r6, [sp, #8]
   146ec:	strd	r8, [sp, #16]
   146f0:	strd	sl, [sp, #24]
   146f4:	add	fp, sp, #32
   146f8:	str	lr, [sp, #32]
   146fc:	sub	sp, sp, #20
   14700:	ldr	r5, [r0, #4]
   14704:	cmp	r5, #0
   14708:	beq	14858 <__assert_fail@plt+0x3320>
   1470c:	mov	r6, r0
   14710:	ldr	r0, [r0, #8]
   14714:	mov	r9, r1
   14718:	bl	113b8 <strlen@plt>
   1471c:	add	r3, r0, #8
   14720:	ldr	r4, [r6]
   14724:	movw	r7, #15512	; 0x3c98
   14728:	movt	r7, #1
   1472c:	bic	r3, r3, #7
   14730:	sub	sp, sp, r3
   14734:	mov	r8, sp
   14738:	str	r8, [fp, #-40]	; 0xffffffd8
   1473c:	ldr	r2, [r4, #20]
   14740:	mov	r0, r4
   14744:	sub	r3, fp, #40	; 0x28
   14748:	mov	r1, r7
   1474c:	add	r4, r4, #28
   14750:	ldr	r2, [r2, #24]
   14754:	bl	145e4 <__assert_fail@plt+0x30ac>
   14758:	subs	r5, r5, #1
   1475c:	bne	1473c <__assert_fail@plt+0x3204>
   14760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14764:	cmp	r3, r8
   14768:	bhi	14898 <__assert_fail@plt+0x3360>
   1476c:	ldrd	r4, [r6]
   14770:	cmp	r5, #0
   14774:	beq	14858 <__assert_fail@plt+0x3320>
   14778:	movw	r7, #19936	; 0x4de0
   1477c:	movt	r7, #1
   14780:	ldr	r2, [r4, #20]
   14784:	mov	r0, r4
   14788:	mov	r3, r9
   1478c:	mov	r1, r7
   14790:	add	r4, r4, #28
   14794:	ldr	r2, [r2, #24]
   14798:	bl	145e4 <__assert_fail@plt+0x30ac>
   1479c:	subs	r5, r5, #1
   147a0:	bne	14780 <__assert_fail@plt+0x3248>
   147a4:	ldm	r6, {r7, r8}
   147a8:	cmp	r8, #0
   147ac:	beq	14858 <__assert_fail@plt+0x3320>
   147b0:	movw	r3, #45060	; 0xb004
   147b4:	movt	r3, #1
   147b8:	movw	sl, #45076	; 0xb014
   147bc:	movt	sl, #1
   147c0:	add	r7, r7, #28
   147c4:	str	r3, [fp, #-48]	; 0xffffffd0
   147c8:	movw	r3, #45088	; 0xb020
   147cc:	movt	r3, #1
   147d0:	str	r3, [fp, #-52]	; 0xffffffcc
   147d4:	ldr	r6, [r7, #-28]	; 0xffffffe4
   147d8:	ldr	r5, [r7, #-24]	; 0xffffffe8
   147dc:	cmp	r5, #0
   147e0:	movne	r4, r6
   147e4:	beq	1484c <__assert_fail@plt+0x3314>
   147e8:	ldr	r2, [r4]
   147ec:	cmp	r2, #0
   147f0:	beq	14840 <__assert_fail@plt+0x3308>
   147f4:	ldr	r1, [r4, #12]
   147f8:	tst	r1, #4
   147fc:	moveq	r6, r4
   14800:	tst	r1, #2
   14804:	bne	14840 <__assert_fail@plt+0x3308>
   14808:	ldr	r3, [r4, #8]
   1480c:	ldr	r0, [r6, #12]
   14810:	cmp	r3, #0
   14814:	orr	r1, r1, r0
   14818:	and	r0, r1, #16
   1481c:	beq	14874 <__assert_fail@plt+0x333c>
   14820:	cmp	r0, #0
   14824:	bne	14840 <__assert_fail@plt+0x3308>
   14828:	tst	r1, #1
   1482c:	movne	r0, r9
   14830:	ldrne	r1, [fp, #-48]	; 0xffffffd0
   14834:	moveq	r1, sl
   14838:	moveq	r0, r9
   1483c:	bl	19a28 <argp_parse@@Base+0x235c>
   14840:	subs	r5, r5, #1
   14844:	add	r4, r4, #24
   14848:	bne	147e8 <__assert_fail@plt+0x32b0>
   1484c:	subs	r8, r8, #1
   14850:	add	r7, r7, #28
   14854:	bne	147d4 <__assert_fail@plt+0x329c>
   14858:	sub	sp, fp, #32
   1485c:	ldrd	r4, [sp]
   14860:	ldrd	r6, [sp, #8]
   14864:	ldrd	r8, [sp, #16]
   14868:	ldrd	sl, [sp, #24]
   1486c:	add	sp, sp, #32
   14870:	pop	{pc}		; (ldr pc, [sp], #4)
   14874:	cmp	r0, #0
   14878:	bne	14840 <__assert_fail@plt+0x3308>
   1487c:	ldr	r3, [r6, #8]
   14880:	cmp	r3, #0
   14884:	bne	14828 <__assert_fail@plt+0x32f0>
   14888:	mov	r0, r9
   1488c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14890:	bl	19a28 <argp_parse@@Base+0x235c>
   14894:	b	14840 <__assert_fail@plt+0x3308>
   14898:	add	r0, r3, #1
   1489c:	mov	r2, r8
   148a0:	movw	r1, #45052	; 0xaffc
   148a4:	movt	r1, #1
   148a8:	str	r0, [fp, #-40]	; 0xffffffd8
   148ac:	mov	r0, r9
   148b0:	strb	r5, [r3]
   148b4:	bl	19a28 <argp_parse@@Base+0x235c>
   148b8:	ldrd	r4, [r6]
   148bc:	cmp	r5, #0
   148c0:	bne	14778 <__assert_fail@plt+0x3240>
   148c4:	b	14858 <__assert_fail@plt+0x3320>
   148c8:	ldr	r3, [r0, #16]
   148cc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   148d0:	strd	r6, [sp, #8]
   148d4:	strd	r8, [sp, #16]
   148d8:	str	lr, [sp, #24]
   148dc:	sub	sp, sp, #12
   148e0:	cmp	r3, #0
   148e4:	movne	r2, r3
   148e8:	bne	148f4 <__assert_fail@plt+0x33bc>
   148ec:	b	14bf4 <__assert_fail@plt+0x36bc>
   148f0:	mov	r2, ip
   148f4:	ldr	ip, [r2, #12]
   148f8:	cmp	ip, #0
   148fc:	bne	148f0 <__assert_fail@plt+0x33b8>
   14900:	ldr	lr, [r2, #8]
   14904:	ldr	r2, [r1, #16]
   14908:	cmp	r2, #0
   1490c:	movne	ip, r2
   14910:	bne	1491c <__assert_fail@plt+0x33e4>
   14914:	b	14bec <__assert_fail@plt+0x36b4>
   14918:	mov	ip, r4
   1491c:	ldr	r4, [ip, #12]
   14920:	cmp	r4, #0
   14924:	bne	14918 <__assert_fail@plt+0x33e0>
   14928:	ldr	r4, [ip, #8]
   1492c:	mvn	ip, r4
   14930:	lsr	ip, ip, #31
   14934:	cmp	ip, lr, lsr #31
   14938:	subne	r4, lr, r4
   1493c:	subeq	r4, r4, lr
   14940:	cmp	r4, #0
   14944:	bne	149ac <__assert_fail@plt+0x3474>
   14948:	adds	r4, r2, #0
   1494c:	movne	r4, #1
   14950:	cmp	r3, #0
   14954:	rsbeq	r4, r4, #0
   14958:	rsbne	r4, r4, #1
   1495c:	cmp	r4, #0
   14960:	bne	149ac <__assert_fail@plt+0x3474>
   14964:	cmp	r3, #0
   14968:	mov	r5, r1
   1496c:	mov	r6, r0
   14970:	beq	14a04 <__assert_fail@plt+0x34cc>
   14974:	ldr	r0, [r2, #20]
   14978:	ldr	ip, [r3, #20]
   1497c:	cmp	ip, r0
   14980:	bgt	149c8 <__assert_fail@plt+0x3490>
   14984:	bge	149f0 <__assert_fail@plt+0x34b8>
   14988:	ldr	r2, [r2, #12]
   1498c:	ldr	r1, [r2, #20]
   14990:	cmp	ip, r1
   14994:	blt	14988 <__assert_fail@plt+0x3450>
   14998:	mov	r1, r2
   1499c:	mov	r0, r3
   149a0:	bl	13be4 <__assert_fail@plt+0x26ac>
   149a4:	subs	r4, r0, #0
   149a8:	mvneq	r4, #0
   149ac:	mov	r0, r4
   149b0:	add	sp, sp, #12
   149b4:	ldrd	r4, [sp]
   149b8:	ldrd	r6, [sp, #8]
   149bc:	ldrd	r8, [sp, #16]
   149c0:	add	sp, sp, #24
   149c4:	pop	{pc}		; (ldr pc, [sp], #4)
   149c8:	ldr	r3, [r3, #12]
   149cc:	ldr	r1, [r3, #20]
   149d0:	cmp	r0, r1
   149d4:	blt	149c8 <__assert_fail@plt+0x3490>
   149d8:	mov	r1, r2
   149dc:	mov	r0, r3
   149e0:	bl	13be4 <__assert_fail@plt+0x26ac>
   149e4:	subs	r4, r0, #0
   149e8:	moveq	r4, #1
   149ec:	b	149ac <__assert_fail@plt+0x3474>
   149f0:	mov	r1, r2
   149f4:	mov	r0, r3
   149f8:	bl	13be4 <__assert_fail@plt+0x26ac>
   149fc:	subs	r4, r0, #0
   14a00:	bne	149ac <__assert_fail@plt+0x3474>
   14a04:	ldr	r4, [r5, #12]
   14a08:	ldr	r3, [r6, #12]
   14a0c:	mvn	r2, r4
   14a10:	lsr	r2, r2, #31
   14a14:	cmp	r2, r3, lsr #31
   14a18:	subne	r4, r3, r4
   14a1c:	subeq	r4, r4, r3
   14a20:	cmp	r4, #0
   14a24:	bne	149ac <__assert_fail@plt+0x3474>
   14a28:	ldr	r7, [r6]
   14a2c:	ldr	r2, [r6, #4]
   14a30:	cmp	r2, #0
   14a34:	beq	14a60 <__assert_fail@plt+0x3528>
   14a38:	add	r3, r7, #24
   14a3c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14a40:	cmp	r1, #0
   14a44:	beq	14a54 <__assert_fail@plt+0x351c>
   14a48:	ldr	r0, [r3, #-12]
   14a4c:	tst	r0, #2
   14a50:	beq	14bfc <__assert_fail@plt+0x36c4>
   14a54:	subs	r2, r2, #1
   14a58:	add	r3, r3, #24
   14a5c:	bne	14a3c <__assert_fail@plt+0x3504>
   14a60:	mov	lr, #0
   14a64:	ldr	ip, [r5]
   14a68:	ldr	r2, [r5, #4]
   14a6c:	str	lr, [sp]
   14a70:	cmp	r2, lr
   14a74:	beq	14c58 <__assert_fail@plt+0x3720>
   14a78:	add	r3, ip, #24
   14a7c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14a80:	cmp	r1, #0
   14a84:	beq	14a94 <__assert_fail@plt+0x355c>
   14a88:	ldr	r0, [r3, #-12]
   14a8c:	tst	r0, #2
   14a90:	beq	14aa4 <__assert_fail@plt+0x356c>
   14a94:	subs	r2, r2, #1
   14a98:	add	r3, r3, #24
   14a9c:	bne	14a7c <__assert_fail@plt+0x3544>
   14aa0:	mov	r1, r2
   14aa4:	ldr	r3, [r7, #12]
   14aa8:	str	r1, [sp, #4]
   14aac:	ands	r3, lr, r3, lsr #3
   14ab0:	bne	14c18 <__assert_fail@plt+0x36e0>
   14ab4:	ldr	r3, [ip, #12]
   14ab8:	tst	r3, #8
   14abc:	beq	14ae4 <__assert_fail@plt+0x35ac>
   14ac0:	ldr	r3, [sp, #4]
   14ac4:	cmp	r3, #0
   14ac8:	beq	14ae4 <__assert_fail@plt+0x35ac>
   14acc:	add	r0, sp, #4
   14ad0:	bl	13d3c <__assert_fail@plt+0x2804>
   14ad4:	cmp	r0, #0
   14ad8:	subne	r4, r4, #1
   14adc:	cmp	r4, #0
   14ae0:	bne	149ac <__assert_fail@plt+0x3474>
   14ae4:	ldr	r2, [r6, #20]
   14ae8:	mov	r0, r6
   14aec:	mov	r3, #0
   14af0:	movw	r1, #15588	; 0x3ce4
   14af4:	movt	r1, #1
   14af8:	ldr	r2, [r2, #24]
   14afc:	bl	145e4 <__assert_fail@plt+0x30ac>
   14b00:	ldr	r2, [r5, #20]
   14b04:	uxtb	r6, r0
   14b08:	movw	r1, #15588	; 0x3ce4
   14b0c:	movt	r1, #1
   14b10:	mov	r0, r5
   14b14:	mov	r3, #0
   14b18:	ldr	r2, [r2, #24]
   14b1c:	bl	145e4 <__assert_fail@plt+0x30ac>
   14b20:	cmp	r6, #0
   14b24:	uxtb	r5, r0
   14b28:	movne	r7, r6
   14b2c:	lslne	r4, r6, #2
   14b30:	bne	14b4c <__assert_fail@plt+0x3614>
   14b34:	ldr	r3, [sp]
   14b38:	cmp	r3, #0
   14b3c:	ldrbne	r7, [r3]
   14b40:	moveq	r4, r6
   14b44:	moveq	r7, r6
   14b48:	lslne	r4, r7, #2
   14b4c:	cmp	r5, #0
   14b50:	movne	r8, r5
   14b54:	lslne	r9, r5, #2
   14b58:	bne	14b74 <__assert_fail@plt+0x363c>
   14b5c:	ldr	r3, [sp, #4]
   14b60:	cmp	r3, #0
   14b64:	ldrbne	r8, [r3]
   14b68:	moveq	r9, r5
   14b6c:	moveq	r8, r5
   14b70:	lslne	r9, r8, #2
   14b74:	bl	11370 <__ctype_tolower_loc@plt>
   14b78:	ldr	r3, [r0]
   14b7c:	ldr	r4, [r3, r4]
   14b80:	ldr	r3, [r3, r9]
   14b84:	subs	r4, r4, r3
   14b88:	bne	149ac <__assert_fail@plt+0x3474>
   14b8c:	subs	r4, r8, r7
   14b90:	bne	149ac <__assert_fail@plt+0x3474>
   14b94:	adds	r4, r5, #0
   14b98:	movne	r4, #1
   14b9c:	cmp	r6, #0
   14ba0:	rsbeq	r4, r4, #0
   14ba4:	rsbne	r4, r4, #1
   14ba8:	cmp	r4, #0
   14bac:	bne	149ac <__assert_fail@plt+0x3474>
   14bb0:	cmp	r6, #0
   14bb4:	bne	149ac <__assert_fail@plt+0x3474>
   14bb8:	ldrd	r0, [sp]
   14bbc:	adds	r4, r1, #0
   14bc0:	movne	r4, #1
   14bc4:	cmp	r0, #0
   14bc8:	rsbeq	r4, r4, #0
   14bcc:	rsbne	r4, r4, #1
   14bd0:	cmp	r4, #0
   14bd4:	bne	149ac <__assert_fail@plt+0x3474>
   14bd8:	cmp	r0, #0
   14bdc:	beq	149ac <__assert_fail@plt+0x3474>
   14be0:	bl	112bc <strcasecmp@plt>
   14be4:	mov	r4, r0
   14be8:	b	149ac <__assert_fail@plt+0x3474>
   14bec:	ldr	r4, [r1, #12]
   14bf0:	b	1492c <__assert_fail@plt+0x33f4>
   14bf4:	ldr	lr, [r0, #12]
   14bf8:	b	14904 <__assert_fail@plt+0x33cc>
   14bfc:	str	r1, [sp]
   14c00:	ldr	r2, [r5, #4]
   14c04:	ldr	ip, [r5]
   14c08:	cmp	r2, #0
   14c0c:	beq	14c60 <__assert_fail@plt+0x3728>
   14c10:	mov	lr, #1
   14c14:	b	14a78 <__assert_fail@plt+0x3540>
   14c18:	mov	r0, sp
   14c1c:	bl	13d3c <__assert_fail@plt+0x2804>
   14c20:	cmp	r0, #0
   14c24:	beq	14c50 <__assert_fail@plt+0x3718>
   14c28:	ldr	r3, [r5]
   14c2c:	ldr	r3, [r3, #12]
   14c30:	tst	r3, #8
   14c34:	moveq	r4, #1
   14c38:	beq	149ac <__assert_fail@plt+0x3474>
   14c3c:	ldr	r3, [sp, #4]
   14c40:	mov	r4, #1
   14c44:	cmp	r3, #0
   14c48:	beq	149ac <__assert_fail@plt+0x3474>
   14c4c:	b	14acc <__assert_fail@plt+0x3594>
   14c50:	ldr	ip, [r5]
   14c54:	b	14ab4 <__assert_fail@plt+0x357c>
   14c58:	str	r2, [sp, #4]
   14c5c:	b	14ae4 <__assert_fail@plt+0x35ac>
   14c60:	mov	r1, r2
   14c64:	mov	lr, #1
   14c68:	b	14aa4 <__assert_fail@plt+0x356c>
   14c6c:	strd	r4, [sp, #-16]!
   14c70:	mov	r5, r1
   14c74:	mov	r4, r0
   14c78:	ldr	r2, [r0, #16]
   14c7c:	ldr	r1, [r0, #24]
   14c80:	ldr	r3, [r0, #28]
   14c84:	str	r6, [sp, #8]
   14c88:	str	lr, [sp, #12]
   14c8c:	sub	r3, r3, r1
   14c90:	cmp	r3, r2
   14c94:	bhi	14cfc <__assert_fail@plt+0x37c4>
   14c98:	ldr	r1, [r4, #20]
   14c9c:	mov	r6, #32
   14ca0:	cmp	r1, #0
   14ca4:	subge	r5, r5, r1
   14ca8:	b	14cd8 <__assert_fail@plt+0x37a0>
   14cac:	ldr	r3, [r4, #28]
   14cb0:	ldr	r2, [r4, #32]
   14cb4:	cmp	r3, r2
   14cb8:	bcc	14ccc <__assert_fail@plt+0x3794>
   14cbc:	bl	19a08 <argp_parse@@Base+0x233c>
   14cc0:	cmp	r0, #0
   14cc4:	beq	14cd8 <__assert_fail@plt+0x37a0>
   14cc8:	ldr	r3, [r4, #28]
   14ccc:	add	r2, r3, #1
   14cd0:	str	r2, [r4, #28]
   14cd4:	strb	r6, [r3]
   14cd8:	cmp	r5, #0
   14cdc:	mov	r1, #1
   14ce0:	mov	r0, r4
   14ce4:	sub	r5, r5, #1
   14ce8:	bgt	14cac <__assert_fail@plt+0x3774>
   14cec:	ldrd	r4, [sp]
   14cf0:	ldr	r6, [sp, #8]
   14cf4:	add	sp, sp, #12
   14cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   14cfc:	bl	1939c <argp_parse@@Base+0x1cd0>
   14d00:	b	14c98 <__assert_fail@plt+0x3760>
   14d04:	ldrd	r2, [r0, #24]
   14d08:	strd	r4, [sp, #-16]!
   14d0c:	mov	r5, r1
   14d10:	mov	r4, r0
   14d14:	ldr	r1, [r0, #16]
   14d18:	str	r6, [sp, #8]
   14d1c:	str	lr, [sp, #12]
   14d20:	sub	r2, r3, r2
   14d24:	cmp	r2, r1
   14d28:	movls	ip, r3
   14d2c:	bhi	14dd0 <__assert_fail@plt+0x3898>
   14d30:	ldr	r0, [r4, #8]
   14d34:	ldr	r1, [r4, #20]
   14d38:	ldr	r2, [r4, #32]
   14d3c:	cmp	r1, #0
   14d40:	addge	r5, r5, r1
   14d44:	cmp	r5, r0
   14d48:	bcc	14d90 <__assert_fail@plt+0x3858>
   14d4c:	cmp	r3, r2
   14d50:	bcs	14d74 <__assert_fail@plt+0x383c>
   14d54:	add	r1, r3, #1
   14d58:	mov	r2, #10
   14d5c:	str	r1, [r4, #28]
   14d60:	strb	r2, [r3]
   14d64:	ldrd	r4, [sp]
   14d68:	ldr	r6, [sp, #8]
   14d6c:	add	sp, sp, #12
   14d70:	pop	{pc}		; (ldr pc, [sp], #4)
   14d74:	mov	r1, #1
   14d78:	mov	r0, r4
   14d7c:	bl	19a08 <argp_parse@@Base+0x233c>
   14d80:	cmp	r0, #0
   14d84:	beq	14d64 <__assert_fail@plt+0x382c>
   14d88:	ldr	r3, [r4, #28]
   14d8c:	b	14d54 <__assert_fail@plt+0x381c>
   14d90:	cmp	r3, r2
   14d94:	bcc	14db0 <__assert_fail@plt+0x3878>
   14d98:	mov	r1, #1
   14d9c:	mov	r0, r4
   14da0:	bl	19a08 <argp_parse@@Base+0x233c>
   14da4:	cmp	r0, #0
   14da8:	beq	14d64 <__assert_fail@plt+0x382c>
   14dac:	ldr	ip, [r4, #28]
   14db0:	add	r2, ip, #1
   14db4:	mov	r3, #32
   14db8:	str	r2, [r4, #28]
   14dbc:	strb	r3, [ip]
   14dc0:	ldrd	r4, [sp]
   14dc4:	ldr	r6, [sp, #8]
   14dc8:	add	sp, sp, #12
   14dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   14dd0:	bl	1939c <argp_parse@@Base+0x1cd0>
   14dd4:	ldr	r3, [r4, #28]
   14dd8:	mov	ip, r3
   14ddc:	b	14d30 <__assert_fail@plt+0x37f8>
   14de0:	strd	r4, [sp, #-16]!
   14de4:	ldr	r5, [r0, #8]
   14de8:	str	r6, [sp, #8]
   14dec:	str	lr, [sp, #12]
   14df0:	cmp	r5, #0
   14df4:	beq	14e48 <__assert_fail@plt+0x3910>
   14df8:	ldr	r2, [r0, #12]
   14dfc:	ldr	r1, [r1, #12]
   14e00:	orr	r2, r2, r1
   14e04:	tst	r2, #16
   14e08:	bne	14e34 <__assert_fail@plt+0x38fc>
   14e0c:	tst	r2, #1
   14e10:	mov	r6, r3
   14e14:	mov	r4, r0
   14e18:	beq	14e58 <__assert_fail@plt+0x3920>
   14e1c:	movw	r1, #45096	; 0xb028
   14e20:	movt	r1, #1
   14e24:	ldr	r2, [r4, #4]
   14e28:	mov	r3, r5
   14e2c:	mov	r0, r6
   14e30:	bl	19a28 <argp_parse@@Base+0x235c>
   14e34:	ldrd	r4, [sp]
   14e38:	mov	r0, #0
   14e3c:	ldr	r6, [sp, #8]
   14e40:	add	sp, sp, #12
   14e44:	pop	{pc}		; (ldr pc, [sp], #4)
   14e48:	ldr	r5, [r1, #8]
   14e4c:	cmp	r5, #0
   14e50:	beq	14e34 <__assert_fail@plt+0x38fc>
   14e54:	b	14df8 <__assert_fail@plt+0x38c0>
   14e58:	mov	r0, r5
   14e5c:	bl	113b8 <strlen@plt>
   14e60:	add	r1, r0, #6
   14e64:	mov	r0, r6
   14e68:	bl	14d04 <__assert_fail@plt+0x37cc>
   14e6c:	mov	r3, r5
   14e70:	mov	r0, r6
   14e74:	ldr	r2, [r4, #4]
   14e78:	movw	r1, #45108	; 0xb034
   14e7c:	movt	r1, #1
   14e80:	bl	19a28 <argp_parse@@Base+0x235c>
   14e84:	b	14e34 <__assert_fail@plt+0x38fc>
   14e88:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14e8c:	mov	r4, r3
   14e90:	ldr	ip, [r0, #8]
   14e94:	ldr	r3, [r0, #20]
   14e98:	cmp	r3, #0
   14e9c:	ldr	r3, [r0, #16]
   14ea0:	strd	r6, [sp, #8]
   14ea4:	strd	r8, [sp, #16]
   14ea8:	mov	r8, r2
   14eac:	ldr	r2, [r2]
   14eb0:	strd	sl, [sp, #24]
   14eb4:	mov	sl, r1
   14eb8:	str	lr, [sp, #32]
   14ebc:	sub	sp, sp, #28
   14ec0:	ldr	r7, [sp, #64]	; 0x40
   14ec4:	str	r3, [sp, #8]
   14ec8:	str	ip, [sp, #12]
   14ecc:	str	r2, [sp, #16]
   14ed0:	beq	150a0 <__assert_fail@plt+0x3b68>
   14ed4:	mov	r2, r0
   14ed8:	mov	r1, #6
   14edc:	movt	r1, #512	; 0x200
   14ee0:	mov	r3, sl
   14ee4:	mov	r0, ip
   14ee8:	bl	13ed4 <__assert_fail@plt+0x299c>
   14eec:	mov	r9, r0
   14ef0:	cmp	r9, #0
   14ef4:	beq	15070 <__assert_fail@plt+0x3b38>
   14ef8:	mov	r1, #10
   14efc:	mov	r0, r9
   14f00:	bl	1122c <strchrnul@plt>
   14f04:	ldrb	r3, [r0]
   14f08:	mov	r5, r0
   14f0c:	cmp	r3, #0
   14f10:	moveq	r6, r9
   14f14:	streq	r3, [sp, #20]
   14f18:	beq	14f68 <__assert_fail@plt+0x3a30>
   14f1c:	ldr	r3, [sp, #16]
   14f20:	ldrb	r3, [r3]
   14f24:	cmp	r3, #0
   14f28:	beq	150c0 <__assert_fail@plt+0x3b88>
   14f2c:	mov	fp, #0
   14f30:	mov	r5, r3
   14f34:	add	r6, r0, #1
   14f38:	add	fp, fp, #1
   14f3c:	mov	r0, r6
   14f40:	mov	r1, #10
   14f44:	bl	1122c <strchrnul@plt>
   14f48:	cmp	fp, r5
   14f4c:	bne	14f34 <__assert_fail@plt+0x39fc>
   14f50:	mov	r5, r0
   14f54:	ldr	r3, [r8]
   14f58:	mov	r2, #1
   14f5c:	str	r2, [sp, #20]
   14f60:	add	r3, r3, r2
   14f64:	str	r3, [r8]
   14f68:	add	r1, r5, #1
   14f6c:	mov	r0, r7
   14f70:	sub	r1, r1, r6
   14f74:	sub	fp, r5, r6
   14f78:	bl	14d04 <__assert_fail@plt+0x37cc>
   14f7c:	ldr	r0, [r7, #28]
   14f80:	ldr	r2, [r7, #32]
   14f84:	add	r3, r0, fp
   14f88:	cmp	r2, r3
   14f8c:	bcs	14fa8 <__assert_fail@plt+0x3a70>
   14f90:	mov	r1, fp
   14f94:	mov	r0, r7
   14f98:	bl	19a08 <argp_parse@@Base+0x233c>
   14f9c:	cmp	r0, #0
   14fa0:	beq	14fc0 <__assert_fail@plt+0x3a88>
   14fa4:	ldr	r0, [r7, #28]
   14fa8:	mov	r2, fp
   14fac:	mov	r1, r6
   14fb0:	bl	11268 <memcpy@plt>
   14fb4:	ldr	r3, [r7, #28]
   14fb8:	add	fp, r3, fp
   14fbc:	str	fp, [r7, #28]
   14fc0:	ldr	r3, [sp, #12]
   14fc4:	cmp	r3, r9
   14fc8:	beq	14fd4 <__assert_fail@plt+0x3a9c>
   14fcc:	mov	r0, r9
   14fd0:	bl	186b0 <argp_parse@@Base+0xfe4>
   14fd4:	ldr	r3, [sp, #8]
   14fd8:	cmp	r3, #0
   14fdc:	beq	15020 <__assert_fail@plt+0x3ae8>
   14fe0:	ldr	r2, [r3]
   14fe4:	cmp	r2, #0
   14fe8:	beq	15020 <__assert_fail@plt+0x3ae8>
   14fec:	ldr	r6, [sp, #8]
   14ff0:	mov	r3, r4
   14ff4:	mov	r0, r2
   14ff8:	mov	r1, sl
   14ffc:	str	r7, [sp]
   15000:	mov	r2, r8
   15004:	bl	14e88 <__assert_fail@plt+0x3950>
   15008:	ldr	r2, [r6, #16]!
   1500c:	clz	r3, r0
   15010:	lsr	r3, r3, #5
   15014:	cmp	r2, #0
   15018:	bne	14ff4 <__assert_fail@plt+0x3abc>
   1501c:	mov	r4, r3
   15020:	ldr	r3, [sp, #20]
   15024:	cmp	r4, #0
   15028:	moveq	r3, #0
   1502c:	cmp	r3, #0
   15030:	beq	15094 <__assert_fail@plt+0x3b5c>
   15034:	ldrb	r3, [r5]
   15038:	ldr	r2, [sp, #16]
   1503c:	cmp	r3, #0
   15040:	ldrb	r0, [r2]
   15044:	beq	150a8 <__assert_fail@plt+0x3b70>
   15048:	add	r4, r0, #1
   1504c:	mov	r0, #1
   15050:	strb	r4, [r2]
   15054:	add	sp, sp, #28
   15058:	ldrd	r4, [sp]
   1505c:	ldrd	r6, [sp, #8]
   15060:	ldrd	r8, [sp, #16]
   15064:	ldrd	sl, [sp, #24]
   15068:	add	sp, sp, #32
   1506c:	pop	{pc}		; (ldr pc, [sp], #4)
   15070:	ldr	r3, [sp, #8]
   15074:	cmp	r3, #0
   15078:	beq	15094 <__assert_fail@plt+0x3b5c>
   1507c:	ldr	r3, [sp, #8]
   15080:	ldr	r2, [r3]
   15084:	cmp	r2, #0
   15088:	movne	r5, r9
   1508c:	strne	r5, [sp, #20]
   15090:	bne	14fec <__assert_fail@plt+0x3ab4>
   15094:	clz	r0, r4
   15098:	lsr	r0, r0, #5
   1509c:	b	15054 <__assert_fail@plt+0x3b1c>
   150a0:	ldr	r9, [sp, #12]
   150a4:	b	14ef0 <__assert_fail@plt+0x39b8>
   150a8:	cmp	r0, #0
   150ac:	beq	15054 <__assert_fail@plt+0x3b1c>
   150b0:	ldr	r2, [sp, #16]
   150b4:	mov	r0, r3
   150b8:	strb	r3, [r2]
   150bc:	b	15054 <__assert_fail@plt+0x3b1c>
   150c0:	mov	r6, r9
   150c4:	b	14f54 <__assert_fail@plt+0x3a1c>
   150c8:	cmp	r1, #0
   150cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   150d0:	strd	r6, [sp, #8]
   150d4:	mov	r6, r2
   150d8:	strd	r8, [sp, #16]
   150dc:	mov	r8, r0
   150e0:	strd	sl, [sp, #24]
   150e4:	str	lr, [sp, #32]
   150e8:	sub	sp, sp, #12
   150ec:	beq	15118 <__assert_fail@plt+0x3be0>
   150f0:	ldr	r3, [r1, #20]
   150f4:	cmp	r3, #0
   150f8:	beq	15118 <__assert_fail@plt+0x3be0>
   150fc:	mov	r2, r1
   15100:	mov	r1, #3
   15104:	movt	r1, #512	; 0x200
   15108:	ldr	r3, [r6, #16]
   1510c:	bl	13ed4 <__assert_fail@plt+0x299c>
   15110:	mov	r4, r0
   15114:	b	1511c <__assert_fail@plt+0x3be4>
   15118:	mov	r4, r8
   1511c:	cmp	r4, #0
   15120:	beq	1513c <__assert_fail@plt+0x3c04>
   15124:	ldrb	r2, [r4]
   15128:	ldr	r3, [r6, #8]
   1512c:	cmp	r2, #0
   15130:	bne	15168 <__assert_fail@plt+0x3c30>
   15134:	mov	r2, #1
   15138:	str	r2, [r3, #4]
   1513c:	cmp	r8, r4
   15140:	beq	15248 <__assert_fail@plt+0x3d10>
   15144:	mov	r0, r4
   15148:	add	sp, sp, #12
   1514c:	ldrd	r4, [sp]
   15150:	ldrd	r6, [sp, #8]
   15154:	ldrd	r8, [sp, #16]
   15158:	ldrd	sl, [sp, #24]
   1515c:	ldr	lr, [sp, #32]
   15160:	add	sp, sp, #36	; 0x24
   15164:	b	186b0 <argp_parse@@Base+0xfe4>
   15168:	ldr	r3, [r3]
   1516c:	ldr	r5, [r6, #4]
   15170:	cmp	r3, #0
   15174:	beq	151b4 <__assert_fail@plt+0x3c7c>
   15178:	ldr	r3, [r5, #28]
   1517c:	ldr	r2, [r5, #32]
   15180:	cmp	r3, r2
   15184:	bcc	151a0 <__assert_fail@plt+0x3c68>
   15188:	mov	r1, #1
   1518c:	mov	r0, r5
   15190:	bl	19a08 <argp_parse@@Base+0x233c>
   15194:	cmp	r0, #0
   15198:	ldrne	r3, [r5, #28]
   1519c:	beq	151b0 <__assert_fail@plt+0x3c78>
   151a0:	add	r1, r3, #1
   151a4:	mov	r2, #10
   151a8:	str	r1, [r5, #28]
   151ac:	strb	r2, [r3]
   151b0:	ldr	r5, [r6, #4]
   151b4:	movw	r9, #50184	; 0xc408
   151b8:	movt	r9, #2
   151bc:	mov	r0, r5
   151c0:	ldr	r1, [r9, #24]
   151c4:	bl	14c6c <__assert_fail@plt+0x3734>
   151c8:	ldr	r5, [r6, #4]
   151cc:	ldr	sl, [r9, #24]
   151d0:	ldr	r1, [r5, #16]
   151d4:	ldr	r3, [r5, #24]
   151d8:	ldr	r7, [r5, #28]
   151dc:	sub	r3, r7, r3
   151e0:	cmp	r3, r1
   151e4:	movls	fp, r5
   151e8:	strls	sl, [r5, #4]
   151ec:	bhi	152e4 <__assert_fail@plt+0x3dac>
   151f0:	mov	r0, r4
   151f4:	str	sl, [fp, #12]
   151f8:	bl	113b8 <strlen@plt>
   151fc:	subs	r9, r0, #0
   15200:	bne	15294 <__assert_fail@plt+0x3d5c>
   15204:	ldr	r2, [r5, #16]
   15208:	ldr	r3, [r5, #24]
   1520c:	sub	r3, r7, r3
   15210:	cmp	r3, r2
   15214:	movls	r9, r5
   15218:	bhi	15280 <__assert_fail@plt+0x3d48>
   1521c:	ldr	r3, [r9, #32]
   15220:	mov	r2, #0
   15224:	str	r2, [r5, #4]
   15228:	cmp	r3, r7
   1522c:	bls	15264 <__assert_fail@plt+0x3d2c>
   15230:	add	r2, r7, #1
   15234:	mov	r3, #10
   15238:	str	r2, [r9, #28]
   1523c:	strb	r3, [r7]
   15240:	ldr	r3, [r6, #8]
   15244:	b	15134 <__assert_fail@plt+0x3bfc>
   15248:	add	sp, sp, #12
   1524c:	ldrd	r4, [sp]
   15250:	ldrd	r6, [sp, #8]
   15254:	ldrd	r8, [sp, #16]
   15258:	ldrd	sl, [sp, #24]
   1525c:	add	sp, sp, #32
   15260:	pop	{pc}		; (ldr pc, [sp], #4)
   15264:	mov	r1, #1
   15268:	mov	r0, r9
   1526c:	bl	19a08 <argp_parse@@Base+0x233c>
   15270:	cmp	r0, #0
   15274:	ldrne	r7, [r9, #28]
   15278:	bne	15230 <__assert_fail@plt+0x3cf8>
   1527c:	b	15240 <__assert_fail@plt+0x3d08>
   15280:	mov	r0, r5
   15284:	bl	1939c <argp_parse@@Base+0x1cd0>
   15288:	ldr	r9, [r6, #4]
   1528c:	ldr	r7, [r9, #28]
   15290:	b	1521c <__assert_fail@plt+0x3ce4>
   15294:	ldr	r2, [r5, #32]
   15298:	add	r3, r7, r9
   1529c:	cmp	r2, r3
   152a0:	bcs	152bc <__assert_fail@plt+0x3d84>
   152a4:	mov	r1, r9
   152a8:	mov	r0, r5
   152ac:	bl	19a08 <argp_parse@@Base+0x233c>
   152b0:	cmp	r0, #0
   152b4:	beq	152d8 <__assert_fail@plt+0x3da0>
   152b8:	ldr	r7, [r5, #28]
   152bc:	mov	r2, r9
   152c0:	mov	r0, r7
   152c4:	mov	r1, r4
   152c8:	bl	11268 <memcpy@plt>
   152cc:	ldr	r3, [r5, #28]
   152d0:	add	r9, r3, r9
   152d4:	str	r9, [r5, #28]
   152d8:	ldr	r5, [r6, #4]
   152dc:	ldr	r7, [r5, #28]
   152e0:	b	15204 <__assert_fail@plt+0x3ccc>
   152e4:	mov	r0, r5
   152e8:	str	sl, [sp, #4]
   152ec:	bl	1939c <argp_parse@@Base+0x1cd0>
   152f0:	ldr	fp, [r6, #4]
   152f4:	ldr	r2, [sp, #4]
   152f8:	ldr	sl, [r9, #24]
   152fc:	ldr	r1, [fp, #16]
   15300:	ldr	r3, [fp, #24]
   15304:	ldr	r7, [fp, #28]
   15308:	str	r2, [r5, #4]
   1530c:	sub	r3, r7, r3
   15310:	cmp	r3, r1
   15314:	bls	1532c <__assert_fail@plt+0x3df4>
   15318:	mov	r0, fp
   1531c:	bl	1939c <argp_parse@@Base+0x1cd0>
   15320:	ldr	r5, [r6, #4]
   15324:	ldr	r7, [r5, #28]
   15328:	b	151f0 <__assert_fail@plt+0x3cb8>
   1532c:	mov	r5, fp
   15330:	b	151f0 <__assert_fail@plt+0x3cb8>
   15334:	ldr	r3, [r1, #12]
   15338:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1533c:	mov	r4, r1
   15340:	ldr	r5, [r1, #4]
   15344:	strd	r6, [sp, #8]
   15348:	mov	r7, r0
   1534c:	str	r8, [sp, #16]
   15350:	cmp	r3, #0
   15354:	str	lr, [sp, #20]
   15358:	beq	15484 <__assert_fail@plt+0x3f4c>
   1535c:	ldr	r2, [r1]
   15360:	ldr	r3, [r1, #8]
   15364:	ldr	r6, [r2, #16]
   15368:	ldr	r8, [r3]
   1536c:	ldr	r3, [r3, #4]
   15370:	cmp	r3, #0
   15374:	cmpne	r8, #0
   15378:	bne	1542c <__assert_fail@plt+0x3ef4>
   1537c:	cmp	r6, #0
   15380:	beq	15404 <__assert_fail@plt+0x3ecc>
   15384:	ldr	r0, [r6]
   15388:	cmp	r0, #0
   1538c:	beq	15404 <__assert_fail@plt+0x3ecc>
   15390:	ldrb	r3, [r0]
   15394:	cmp	r3, #0
   15398:	beq	15404 <__assert_fail@plt+0x3ecc>
   1539c:	cmp	r8, #0
   153a0:	beq	153d0 <__assert_fail@plt+0x3e98>
   153a4:	ldr	r3, [r8, #16]
   153a8:	cmp	r3, r6
   153ac:	beq	15404 <__assert_fail@plt+0x3ecc>
   153b0:	cmp	r3, #0
   153b4:	beq	153d0 <__assert_fail@plt+0x3e98>
   153b8:	ldr	r3, [r3, #12]
   153bc:	cmp	r3, #0
   153c0:	cmpne	r6, r3
   153c4:	bne	153b8 <__assert_fail@plt+0x3e80>
   153c8:	cmp	r6, r3
   153cc:	beq	15404 <__assert_fail@plt+0x3ecc>
   153d0:	mov	r2, r4
   153d4:	ldr	r1, [r6, #16]
   153d8:	ldr	r8, [r5, #12]
   153dc:	bl	150c8 <__assert_fail@plt+0x3b90>
   153e0:	ldr	r6, [r4, #4]
   153e4:	ldr	r2, [r6, #16]
   153e8:	ldr	r1, [r6, #24]
   153ec:	ldr	r3, [r6, #28]
   153f0:	sub	r3, r3, r1
   153f4:	cmp	r3, r2
   153f8:	movls	r5, r6
   153fc:	bhi	154d4 <__assert_fail@plt+0x3f9c>
   15400:	str	r8, [r6, #12]
   15404:	mov	r3, #0
   15408:	str	r3, [r4, #12]
   1540c:	mov	r1, r7
   15410:	mov	r0, r5
   15414:	ldrd	r4, [sp]
   15418:	ldrd	r6, [sp, #8]
   1541c:	ldr	r8, [sp, #16]
   15420:	ldr	lr, [sp, #20]
   15424:	add	sp, sp, #24
   15428:	b	14c6c <__assert_fail@plt+0x3734>
   1542c:	ldr	r2, [r2, #12]
   15430:	ldr	r3, [r8, #12]
   15434:	cmp	r2, r3
   15438:	beq	1537c <__assert_fail@plt+0x3e44>
   1543c:	ldr	r3, [r5, #28]
   15440:	ldr	r2, [r5, #32]
   15444:	cmp	r3, r2
   15448:	bcc	15464 <__assert_fail@plt+0x3f2c>
   1544c:	mov	r1, #1
   15450:	mov	r0, r5
   15454:	bl	19a08 <argp_parse@@Base+0x233c>
   15458:	cmp	r0, #0
   1545c:	ldrne	r3, [r5, #28]
   15460:	beq	15474 <__assert_fail@plt+0x3f3c>
   15464:	add	r1, r3, #1
   15468:	mov	r2, #10
   1546c:	str	r1, [r5, #28]
   15470:	strb	r2, [r3]
   15474:	cmp	r6, #0
   15478:	ldr	r5, [r4, #4]
   1547c:	bne	15384 <__assert_fail@plt+0x3e4c>
   15480:	b	15404 <__assert_fail@plt+0x3ecc>
   15484:	ldr	r3, [r5, #28]
   15488:	ldr	r1, [r5, #32]
   1548c:	add	r2, r3, #2
   15490:	cmp	r1, r2
   15494:	bcs	154b0 <__assert_fail@plt+0x3f78>
   15498:	mov	r1, #2
   1549c:	mov	r0, r5
   154a0:	bl	19a08 <argp_parse@@Base+0x233c>
   154a4:	cmp	r0, #0
   154a8:	beq	154cc <__assert_fail@plt+0x3f94>
   154ac:	ldr	r3, [r5, #28]
   154b0:	movw	r2, #45120	; 0xb040
   154b4:	movt	r2, #1
   154b8:	ldrh	r2, [r2]
   154bc:	strh	r2, [r3]
   154c0:	ldr	r3, [r5, #28]
   154c4:	add	r3, r3, #2
   154c8:	str	r3, [r5, #28]
   154cc:	ldr	r5, [r4, #4]
   154d0:	b	1540c <__assert_fail@plt+0x3ed4>
   154d4:	mov	r0, r6
   154d8:	bl	1939c <argp_parse@@Base+0x1cd0>
   154dc:	ldr	r5, [r4, #4]
   154e0:	b	15400 <__assert_fail@plt+0x3ec8>
   154e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   154e8:	strd	r6, [sp, #8]
   154ec:	mov	r7, r0
   154f0:	ldr	r6, [r0, #12]
   154f4:	strd	r8, [sp, #16]
   154f8:	mov	r8, r2
   154fc:	strd	sl, [sp, #24]
   15500:	mov	sl, r3
   15504:	mov	fp, r1
   15508:	ldr	r3, [r0, #16]
   1550c:	str	lr, [sp, #32]
   15510:	sub	sp, sp, #28
   15514:	cmp	r6, #0
   15518:	ldr	r5, [sp, #68]	; 0x44
   1551c:	str	r3, [sp, #8]
   15520:	ldr	r3, [r0, #20]
   15524:	beq	15894 <__assert_fail@plt+0x435c>
   15528:	mov	r1, #11
   1552c:	mov	r0, r6
   15530:	str	r3, [sp, #12]
   15534:	bl	113c4 <strchr@plt>
   15538:	cmp	r8, #0
   1553c:	mov	r9, r0
   15540:	ldr	r3, [sp, #12]
   15544:	bne	15790 <__assert_fail@plt+0x4258>
   15548:	cmp	r0, #0
   1554c:	beq	15a8c <__assert_fail@plt+0x4554>
   15550:	subs	r1, r0, r6
   15554:	movne	r4, #1
   15558:	moveq	r4, #0
   1555c:	cmp	r3, #0
   15560:	str	r1, [sp, #20]
   15564:	beq	15a30 <__assert_fail@plt+0x44f8>
   15568:	cmp	r1, #0
   1556c:	beq	15a80 <__assert_fail@plt+0x4548>
   15570:	mov	r0, r6
   15574:	mov	r4, #1
   15578:	bl	1125c <strndup@plt>
   1557c:	adds	r3, r0, #0
   15580:	mov	r6, r0
   15584:	movne	r3, #1
   15588:	str	r3, [sp, #16]
   1558c:	mov	r1, fp
   15590:	mov	r0, r7
   15594:	bl	1854c <argp_parse@@Base+0xe80>
   15598:	mov	r2, r0
   1559c:	mov	r1, r6
   155a0:	ldr	r3, [r7, #20]
   155a4:	mov	r0, #1
   155a8:	movt	r0, #512	; 0x200
   155ac:	str	r2, [sp, #12]
   155b0:	blx	r3
   155b4:	subs	r9, r0, #0
   155b8:	moveq	r4, r9
   155bc:	beq	1564c <__assert_fail@plt+0x4114>
   155c0:	cmp	r6, r9
   155c4:	movne	r4, #0
   155c8:	andeq	r4, r4, #1
   155cc:	cmp	sl, #0
   155d0:	ldr	r2, [r5, #28]
   155d4:	bne	158d8 <__assert_fail@plt+0x43a0>
   155d8:	cmp	r4, #0
   155dc:	beq	15834 <__assert_fail@plt+0x42fc>
   155e0:	ldr	r3, [sp, #20]
   155e4:	ldr	r0, [r5, #32]
   155e8:	add	r1, r2, r3
   155ec:	cmp	r0, r1
   155f0:	bcs	157ec <__assert_fail@plt+0x42b4>
   155f4:	mov	r1, r3
   155f8:	mov	r0, r5
   155fc:	bl	19a08 <argp_parse@@Base+0x233c>
   15600:	cmp	r0, #0
   15604:	ldr	r2, [r5, #28]
   15608:	bne	157ec <__assert_fail@plt+0x42b4>
   1560c:	ldr	r0, [r5, #16]
   15610:	ldr	r1, [r5, #24]
   15614:	sub	r2, r2, r1
   15618:	cmp	r2, r0
   1561c:	bhi	15920 <__assert_fail@plt+0x43e8>
   15620:	ldr	r1, [r5, #4]
   15624:	ldr	r2, [r5, #20]
   15628:	bic	r2, r2, r2, asr #31
   1562c:	cmp	r1, r2
   15630:	bcc	158fc <__assert_fail@plt+0x43c4>
   15634:	cmp	r9, r6
   15638:	moveq	r4, #1
   1563c:	beq	1564c <__assert_fail@plt+0x4114>
   15640:	mov	r0, r9
   15644:	mov	r4, #1
   15648:	bl	186b0 <argp_parse@@Base+0xfe4>
   1564c:	ldr	r3, [sp, #16]
   15650:	cmp	r3, #0
   15654:	beq	1566c <__assert_fail@plt+0x4134>
   15658:	ldr	r3, [r7, #20]
   1565c:	cmp	r3, #0
   15660:	beq	156ec <__assert_fail@plt+0x41b4>
   15664:	mov	r0, r6
   15668:	bl	186b0 <argp_parse@@Base+0xfe4>
   1566c:	cmp	r8, #0
   15670:	beq	156ec <__assert_fail@plt+0x41b4>
   15674:	ldr	r3, [r7, #20]
   15678:	cmp	r3, #0
   1567c:	beq	156ec <__assert_fail@plt+0x41b4>
   15680:	mov	r0, #4
   15684:	movt	r0, #512	; 0x200
   15688:	ldr	r2, [sp, #12]
   1568c:	mov	r1, #0
   15690:	blx	r3
   15694:	subs	r6, r0, #0
   15698:	beq	156ec <__assert_fail@plt+0x41b4>
   1569c:	orrs	r3, sl, r4
   156a0:	bne	159bc <__assert_fail@plt+0x4484>
   156a4:	mov	r0, r6
   156a8:	bl	113b8 <strlen@plt>
   156ac:	subs	r4, r0, #0
   156b0:	bne	15974 <__assert_fail@plt+0x443c>
   156b4:	mov	r0, r6
   156b8:	bl	186b0 <argp_parse@@Base+0xfe4>
   156bc:	ldr	r2, [r5, #16]
   156c0:	ldr	r1, [r5, #24]
   156c4:	ldr	r3, [r5, #28]
   156c8:	sub	r3, r3, r1
   156cc:	cmp	r3, r2
   156d0:	bhi	15a08 <__assert_fail@plt+0x44d0>
   156d4:	ldr	r2, [r5, #4]
   156d8:	ldr	r3, [r5, #20]
   156dc:	bic	r3, r3, r3, asr #31
   156e0:	cmp	r2, r3
   156e4:	bcc	159e0 <__assert_fail@plt+0x44a8>
   156e8:	mov	r4, #1
   156ec:	ldr	r7, [sp, #8]
   156f0:	cmp	r7, #0
   156f4:	beq	15770 <__assert_fail@plt+0x4238>
   156f8:	ldr	r3, [r7]
   156fc:	cmp	r3, #0
   15700:	beq	15770 <__assert_fail@plt+0x4238>
   15704:	ldr	r2, [sp, #64]	; 0x40
   15708:	eor	r6, r2, #1
   1570c:	eor	r2, r4, #1
   15710:	orr	r2, r2, r6
   15714:	and	r6, r6, #1
   15718:	tst	r2, #1
   1571c:	beq	15a40 <__assert_fail@plt+0x4508>
   15720:	ldr	r9, [sp, #64]	; 0x40
   15724:	orrs	r2, r4, sl
   15728:	mov	r0, r3
   1572c:	str	r9, [sp]
   15730:	movne	r3, #1
   15734:	moveq	r3, #0
   15738:	str	r5, [sp, #4]
   1573c:	mov	r2, r8
   15740:	mov	r1, fp
   15744:	bl	154e4 <__assert_fail@plt+0x3fac>
   15748:	ldr	r3, [r7, #16]
   1574c:	orr	r4, r4, r0
   15750:	add	r7, r7, #16
   15754:	cmp	r3, #0
   15758:	beq	15770 <__assert_fail@plt+0x4238>
   1575c:	cmp	r4, #0
   15760:	movne	r2, r6
   15764:	moveq	r2, #1
   15768:	cmp	r2, #0
   1576c:	bne	15724 <__assert_fail@plt+0x41ec>
   15770:	mov	r0, r4
   15774:	add	sp, sp, #28
   15778:	ldrd	r4, [sp]
   1577c:	ldrd	r6, [sp, #8]
   15780:	ldrd	r8, [sp, #16]
   15784:	ldrd	sl, [sp, #24]
   15788:	add	sp, sp, #32
   1578c:	pop	{pc}		; (ldr pc, [sp], #4)
   15790:	cmp	r0, #0
   15794:	beq	15a14 <__assert_fail@plt+0x44dc>
   15798:	cmp	r3, #0
   1579c:	add	r6, r0, #1
   157a0:	movne	r1, fp
   157a4:	movne	r0, r7
   157a8:	beq	15810 <__assert_fail@plt+0x42d8>
   157ac:	bl	1854c <argp_parse@@Base+0xe80>
   157b0:	ldr	r3, [r7, #20]
   157b4:	str	r0, [sp, #12]
   157b8:	mov	r0, #2
   157bc:	movt	r0, #512	; 0x200
   157c0:	mov	r1, r6
   157c4:	ldr	r2, [sp, #12]
   157c8:	blx	r3
   157cc:	subs	r9, r0, #0
   157d0:	moveq	r4, r9
   157d4:	beq	1566c <__assert_fail@plt+0x4134>
   157d8:	mov	r3, #0
   157dc:	mov	r4, r3
   157e0:	str	r3, [sp, #16]
   157e4:	str	r3, [sp, #20]
   157e8:	b	155c0 <__assert_fail@plt+0x4088>
   157ec:	ldr	r4, [sp, #20]
   157f0:	mov	r0, r2
   157f4:	mov	r1, r6
   157f8:	mov	r2, r4
   157fc:	bl	11268 <memcpy@plt>
   15800:	ldr	r2, [r5, #28]
   15804:	add	r2, r2, r4
   15808:	str	r2, [r5, #28]
   1580c:	b	1560c <__assert_fail@plt+0x40d4>
   15810:	cmp	r6, #0
   15814:	moveq	r4, r6
   15818:	beq	156ec <__assert_fail@plt+0x41b4>
   1581c:	cmp	sl, #0
   15820:	ldr	r2, [r5, #28]
   15824:	bne	158c4 <__assert_fail@plt+0x438c>
   15828:	mov	r9, r6
   1582c:	str	sl, [sp, #12]
   15830:	str	sl, [sp, #16]
   15834:	mov	r0, r9
   15838:	str	r2, [sp, #20]
   1583c:	bl	113b8 <strlen@plt>
   15840:	subs	r4, r0, #0
   15844:	ldr	r2, [sp, #20]
   15848:	beq	1560c <__assert_fail@plt+0x40d4>
   1584c:	ldr	r0, [r5, #32]
   15850:	add	r1, r2, r4
   15854:	cmp	r0, r1
   15858:	bcs	15874 <__assert_fail@plt+0x433c>
   1585c:	mov	r1, r4
   15860:	mov	r0, r5
   15864:	bl	19a08 <argp_parse@@Base+0x233c>
   15868:	cmp	r0, #0
   1586c:	ldr	r2, [r5, #28]
   15870:	beq	1560c <__assert_fail@plt+0x40d4>
   15874:	mov	r0, r2
   15878:	mov	r1, r9
   1587c:	mov	r2, r4
   15880:	bl	11268 <memcpy@plt>
   15884:	ldr	r2, [r5, #28]
   15888:	add	r2, r2, r4
   1588c:	str	r2, [r5, #28]
   15890:	b	1560c <__assert_fail@plt+0x40d4>
   15894:	cmp	r3, #0
   15898:	beq	15a28 <__assert_fail@plt+0x44f0>
   1589c:	bl	1854c <argp_parse@@Base+0xe80>
   158a0:	mov	r2, #1
   158a4:	movt	r2, #512	; 0x200
   158a8:	str	r0, [sp, #12]
   158ac:	cmp	r8, #0
   158b0:	mov	r0, #2
   158b4:	movt	r0, #512	; 0x200
   158b8:	moveq	r0, r2
   158bc:	ldr	r3, [r7, #20]
   158c0:	b	157c0 <__assert_fail@plt+0x4288>
   158c4:	mov	r4, #0
   158c8:	mov	r9, r6
   158cc:	str	r4, [sp, #12]
   158d0:	str	r4, [sp, #16]
   158d4:	str	r4, [sp, #20]
   158d8:	ldr	r1, [r5, #32]
   158dc:	cmp	r1, r2
   158e0:	bls	1592c <__assert_fail@plt+0x43f4>
   158e4:	add	r0, r2, #1
   158e8:	mov	r1, #10
   158ec:	str	r0, [r5, #28]
   158f0:	strb	r1, [r2]
   158f4:	ldr	r2, [r5, #28]
   158f8:	b	155d8 <__assert_fail@plt+0x40a0>
   158fc:	ldr	r2, [r5, #28]
   15900:	ldr	r1, [r5, #32]
   15904:	cmp	r2, r1
   15908:	bcs	15948 <__assert_fail@plt+0x4410>
   1590c:	add	r0, r2, #1
   15910:	mov	r1, #10
   15914:	str	r0, [r5, #28]
   15918:	strb	r1, [r2]
   1591c:	b	15634 <__assert_fail@plt+0x40fc>
   15920:	mov	r0, r5
   15924:	bl	1939c <argp_parse@@Base+0x1cd0>
   15928:	b	15620 <__assert_fail@plt+0x40e8>
   1592c:	mov	r1, #1
   15930:	mov	r0, r5
   15934:	bl	19a08 <argp_parse@@Base+0x233c>
   15938:	cmp	r0, #0
   1593c:	ldr	r2, [r5, #28]
   15940:	bne	158e4 <__assert_fail@plt+0x43ac>
   15944:	b	155d8 <__assert_fail@plt+0x40a0>
   15948:	mov	r1, #1
   1594c:	mov	r0, r5
   15950:	bl	19a08 <argp_parse@@Base+0x233c>
   15954:	cmp	r0, #0
   15958:	beq	15634 <__assert_fail@plt+0x40fc>
   1595c:	ldr	r2, [r5, #28]
   15960:	mov	r1, #10
   15964:	add	r0, r2, #1
   15968:	str	r0, [r5, #28]
   1596c:	strb	r1, [r2]
   15970:	b	15634 <__assert_fail@plt+0x40fc>
   15974:	ldr	r0, [r5, #28]
   15978:	ldr	r2, [r5, #32]
   1597c:	add	r3, r0, r4
   15980:	cmp	r2, r3
   15984:	bcs	159a0 <__assert_fail@plt+0x4468>
   15988:	mov	r1, r4
   1598c:	mov	r0, r5
   15990:	bl	19a08 <argp_parse@@Base+0x233c>
   15994:	cmp	r0, #0
   15998:	beq	156b4 <__assert_fail@plt+0x417c>
   1599c:	ldr	r0, [r5, #28]
   159a0:	mov	r2, r4
   159a4:	mov	r1, r6
   159a8:	bl	11268 <memcpy@plt>
   159ac:	ldr	r3, [r5, #28]
   159b0:	add	r4, r3, r4
   159b4:	str	r4, [r5, #28]
   159b8:	b	156b4 <__assert_fail@plt+0x417c>
   159bc:	ldr	r3, [r5, #28]
   159c0:	ldr	r2, [r5, #32]
   159c4:	cmp	r3, r2
   159c8:	bcs	15a64 <__assert_fail@plt+0x452c>
   159cc:	add	r1, r3, #1
   159d0:	mov	r2, #10
   159d4:	str	r1, [r5, #28]
   159d8:	strb	r2, [r3]
   159dc:	b	156a4 <__assert_fail@plt+0x416c>
   159e0:	ldr	r3, [r5, #28]
   159e4:	ldr	r2, [r5, #32]
   159e8:	cmp	r3, r2
   159ec:	bcs	15a48 <__assert_fail@plt+0x4510>
   159f0:	add	r1, r3, #1
   159f4:	mov	r2, #10
   159f8:	mov	r4, #1
   159fc:	str	r1, [r5, #28]
   15a00:	strb	r2, [r3]
   15a04:	b	156ec <__assert_fail@plt+0x41b4>
   15a08:	mov	r0, r5
   15a0c:	bl	1939c <argp_parse@@Base+0x1cd0>
   15a10:	b	156d4 <__assert_fail@plt+0x419c>
   15a14:	cmp	r3, #0
   15a18:	movne	r1, fp
   15a1c:	movne	r0, r7
   15a20:	movne	r6, r9
   15a24:	bne	157ac <__assert_fail@plt+0x4274>
   15a28:	mov	r4, r3
   15a2c:	b	156ec <__assert_fail@plt+0x41b4>
   15a30:	mov	r9, r6
   15a34:	str	r8, [sp, #12]
   15a38:	str	r4, [sp, #16]
   15a3c:	b	155c0 <__assert_fail@plt+0x4088>
   15a40:	mov	r4, #1
   15a44:	b	15770 <__assert_fail@plt+0x4238>
   15a48:	mov	r1, #1
   15a4c:	mov	r0, r5
   15a50:	bl	19a08 <argp_parse@@Base+0x233c>
   15a54:	cmp	r0, #0
   15a58:	beq	156e8 <__assert_fail@plt+0x41b0>
   15a5c:	ldr	r3, [r5, #28]
   15a60:	b	159f0 <__assert_fail@plt+0x44b8>
   15a64:	mov	r1, #1
   15a68:	mov	r0, r5
   15a6c:	bl	19a08 <argp_parse@@Base+0x233c>
   15a70:	cmp	r0, #0
   15a74:	beq	156a4 <__assert_fail@plt+0x416c>
   15a78:	ldr	r3, [r5, #28]
   15a7c:	b	159cc <__assert_fail@plt+0x4494>
   15a80:	ldr	r4, [sp, #20]
   15a84:	str	r4, [sp, #16]
   15a88:	b	1558c <__assert_fail@plt+0x4054>
   15a8c:	cmp	r3, #0
   15a90:	beq	1581c <__assert_fail@plt+0x42e4>
   15a94:	mov	r1, fp
   15a98:	mov	r0, r7
   15a9c:	bl	1854c <argp_parse@@Base+0xe80>
   15aa0:	str	r0, [sp, #12]
   15aa4:	mov	r0, #1
   15aa8:	movt	r0, #512	; 0x200
   15aac:	ldr	r3, [r7, #20]
   15ab0:	b	157c0 <__assert_fail@plt+0x4288>

00015ab4 <argp_failure@@Base>:
   15ab4:	push	{r3}		; (str r3, [sp, #-4]!)
   15ab8:	strd	r4, [sp, #-20]!	; 0xffffffec
   15abc:	subs	r5, r0, #0
   15ac0:	strd	r6, [sp, #8]
   15ac4:	mov	r7, r1
   15ac8:	mov	r6, r2
   15acc:	str	lr, [sp, #16]
   15ad0:	sub	sp, sp, #200	; 0xc8
   15ad4:	beq	15c30 <argp_failure@@Base+0x17c>
   15ad8:	ldr	r3, [r5, #16]
   15adc:	tst	r3, #2
   15ae0:	bne	15c14 <argp_failure@@Base+0x160>
   15ae4:	ldr	r4, [r5, #44]	; 0x2c
   15ae8:	cmp	r4, #0
   15aec:	beq	15c14 <argp_failure@@Base+0x160>
   15af0:	mov	r0, r4
   15af4:	bl	114b4 <flockfile@plt>
   15af8:	ldr	r0, [r5, #40]	; 0x28
   15afc:	mov	r1, r4
   15b00:	bl	111cc <fputs_unlocked@plt>
   15b04:	ldr	r3, [sp, #220]	; 0xdc
   15b08:	cmp	r3, #0
   15b0c:	beq	15b68 <argp_failure@@Base+0xb4>
   15b10:	ldr	r3, [r4, #20]
   15b14:	add	r1, sp, #224	; 0xe0
   15b18:	ldr	r2, [r4, #24]
   15b1c:	str	r1, [sp]
   15b20:	cmp	r3, r2
   15b24:	addcc	r1, r3, #1
   15b28:	movcc	r2, #58	; 0x3a
   15b2c:	strcc	r1, [r4, #20]
   15b30:	strbcc	r2, [r3]
   15b34:	bcs	15ca0 <argp_failure@@Base+0x1ec>
   15b38:	ldr	r3, [r4, #20]
   15b3c:	ldr	r2, [r4, #24]
   15b40:	cmp	r3, r2
   15b44:	addcc	r1, r3, #1
   15b48:	movcc	r2, #32
   15b4c:	strcc	r1, [r4, #20]
   15b50:	strbcc	r2, [r3]
   15b54:	bcs	15c90 <argp_failure@@Base+0x1dc>
   15b58:	mov	r0, r4
   15b5c:	ldr	r2, [sp]
   15b60:	ldr	r1, [sp, #220]	; 0xdc
   15b64:	bl	11490 <vfprintf@plt>
   15b68:	cmp	r6, #0
   15b6c:	ldr	r3, [r4, #20]
   15b70:	ldr	r2, [r4, #24]
   15b74:	beq	15bd8 <argp_failure@@Base+0x124>
   15b78:	cmp	r2, r3
   15b7c:	addhi	r1, r3, #1
   15b80:	movhi	r2, #58	; 0x3a
   15b84:	strhi	r1, [r4, #20]
   15b88:	strbhi	r2, [r3]
   15b8c:	bls	15cc0 <argp_failure@@Base+0x20c>
   15b90:	ldr	r3, [r4, #20]
   15b94:	ldr	r2, [r4, #24]
   15b98:	cmp	r3, r2
   15b9c:	addcc	r1, r3, #1
   15ba0:	movcc	r2, #32
   15ba4:	strcc	r1, [r4, #20]
   15ba8:	strbcc	r2, [r3]
   15bac:	bcs	15cb0 <argp_failure@@Base+0x1fc>
   15bb0:	mov	r2, #200	; 0xc8
   15bb4:	mov	r1, sp
   15bb8:	mov	r0, r6
   15bbc:	bl	113f4 <strerror_r@plt>
   15bc0:	cmp	r0, #0
   15bc4:	beq	15c74 <argp_failure@@Base+0x1c0>
   15bc8:	mov	r1, r4
   15bcc:	bl	111cc <fputs_unlocked@plt>
   15bd0:	ldr	r3, [r4, #20]
   15bd4:	ldr	r2, [r4, #24]
   15bd8:	cmp	r3, r2
   15bdc:	addcc	r1, r3, #1
   15be0:	movcc	r2, #10
   15be4:	strcc	r1, [r4, #20]
   15be8:	strbcc	r2, [r3]
   15bec:	bcs	15c64 <argp_failure@@Base+0x1b0>
   15bf0:	mov	r0, r4
   15bf4:	bl	112c8 <funlockfile@plt>
   15bf8:	cmp	r7, #0
   15bfc:	beq	15c14 <argp_failure@@Base+0x160>
   15c00:	cmp	r5, #0
   15c04:	beq	15c5c <argp_failure@@Base+0x1a8>
   15c08:	ldr	r3, [r5, #16]
   15c0c:	tst	r3, #32
   15c10:	beq	15c5c <argp_failure@@Base+0x1a8>
   15c14:	add	sp, sp, #200	; 0xc8
   15c18:	ldrd	r4, [sp]
   15c1c:	ldrd	r6, [sp, #8]
   15c20:	ldr	lr, [sp, #16]
   15c24:	add	sp, sp, #20
   15c28:	add	sp, sp, #4
   15c2c:	bx	lr
   15c30:	movw	r3, #50256	; 0xc450
   15c34:	movt	r3, #2
   15c38:	ldr	r4, [r3]
   15c3c:	cmp	r4, #0
   15c40:	beq	15c14 <argp_failure@@Base+0x160>
   15c44:	mov	r0, r4
   15c48:	bl	114b4 <flockfile@plt>
   15c4c:	movw	r3, #50248	; 0xc448
   15c50:	movt	r3, #2
   15c54:	ldr	r0, [r3]
   15c58:	b	15afc <argp_failure@@Base+0x48>
   15c5c:	mov	r0, r7
   15c60:	bl	113a0 <exit@plt>
   15c64:	mov	r1, #10
   15c68:	mov	r0, r4
   15c6c:	bl	1146c <__overflow@plt>
   15c70:	b	15bf0 <argp_failure@@Base+0x13c>
   15c74:	mov	r0, r6
   15c78:	bl	11364 <strerror@plt>
   15c7c:	cmp	r0, #0
   15c80:	movw	r3, #45124	; 0xb044
   15c84:	movt	r3, #1
   15c88:	moveq	r0, r3
   15c8c:	b	15bc8 <argp_failure@@Base+0x114>
   15c90:	mov	r1, #32
   15c94:	mov	r0, r4
   15c98:	bl	1146c <__overflow@plt>
   15c9c:	b	15b58 <argp_failure@@Base+0xa4>
   15ca0:	mov	r1, #58	; 0x3a
   15ca4:	mov	r0, r4
   15ca8:	bl	1146c <__overflow@plt>
   15cac:	b	15b38 <argp_failure@@Base+0x84>
   15cb0:	mov	r1, #32
   15cb4:	mov	r0, r4
   15cb8:	bl	1146c <__overflow@plt>
   15cbc:	b	15bb0 <argp_failure@@Base+0xfc>
   15cc0:	mov	r1, #58	; 0x3a
   15cc4:	mov	r0, r4
   15cc8:	bl	1146c <__overflow@plt>
   15ccc:	b	15b90 <argp_failure@@Base+0xdc>
   15cd0:	cmp	r2, #0
   15cd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15cd8:	strd	r6, [sp, #8]
   15cdc:	strd	r8, [sp, #16]
   15ce0:	strd	sl, [sp, #24]
   15ce4:	add	fp, sp, #32
   15ce8:	str	lr, [sp, #32]
   15cec:	sub	sp, sp, #124	; 0x7c
   15cf0:	str	r2, [fp, #-128]	; 0xffffff80
   15cf4:	strd	r0, [fp, #-108]	; 0xffffff94
   15cf8:	str	r3, [fp, #-100]	; 0xffffff9c
   15cfc:	beq	16170 <argp_failure@@Base+0x6bc>
   15d00:	mov	r0, r2
   15d04:	movw	r8, #50184	; 0xc408
   15d08:	movt	r8, #2
   15d0c:	bl	114b4 <flockfile@plt>
   15d10:	ldr	r3, [r8, #36]	; 0x24
   15d14:	cmp	r3, #0
   15d18:	beq	1618c <argp_failure@@Base+0x6d8>
   15d1c:	mov	r3, #0
   15d20:	ldr	r0, [fp, #-128]	; 0xffffff80
   15d24:	mov	r1, r3
   15d28:	ldr	r2, [r8, #32]
   15d2c:	bl	19304 <argp_parse@@Base+0x1c38>
   15d30:	subs	r7, r0, #0
   15d34:	beq	16cac <argp_failure@@Base+0x11f8>
   15d38:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d3c:	ands	r3, r3, #11
   15d40:	streq	r3, [fp, #-136]	; 0xffffff78
   15d44:	bne	164bc <argp_failure@@Base+0xa08>
   15d48:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d4c:	ands	r4, r3, #3
   15d50:	bne	1634c <argp_failure@@Base+0x898>
   15d54:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d58:	tst	r3, #16
   15d5c:	bne	16318 <argp_failure@@Base+0x864>
   15d60:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d64:	tst	r3, #4
   15d68:	and	r5, r3, #8
   15d6c:	bne	16294 <argp_failure@@Base+0x7e0>
   15d70:	cmp	r5, #0
   15d74:	beq	16108 <argp_failure@@Base+0x654>
   15d78:	ldr	r3, [fp, #-136]	; 0xffffff78
   15d7c:	ldr	r3, [r3, #4]
   15d80:	cmp	r3, #0
   15d84:	str	r3, [fp, #-112]	; 0xffffff90
   15d88:	beq	16108 <argp_failure@@Base+0x654>
   15d8c:	cmp	r4, #0
   15d90:	bne	162c4 <argp_failure@@Base+0x810>
   15d94:	ldr	r3, [fp, #-136]	; 0xffffff78
   15d98:	ldr	r3, [r3]
   15d9c:	str	r4, [fp, #-88]	; 0xffffffa8
   15da0:	str	r4, [fp, #-84]	; 0xffffffac
   15da4:	str	r4, [fp, #-80]	; 0xffffffb0
   15da8:	mov	r2, r3
   15dac:	movw	r3, #45960	; 0xb388
   15db0:	movt	r3, #1
   15db4:	mov	r5, r2
   15db8:	str	r3, [fp, #-140]	; 0xffffff74
   15dbc:	movw	r3, #45572	; 0xb204
   15dc0:	movt	r3, #1
   15dc4:	str	r8, [fp, #-96]	; 0xffffffa0
   15dc8:	str	r3, [fp, #-144]	; 0xffffff70
   15dcc:	ldr	r0, [r7, #16]
   15dd0:	ldr	r3, [r7, #24]
   15dd4:	ldr	r2, [r7, #28]
   15dd8:	ldr	r4, [r5]
   15ddc:	ldr	r9, [r5, #8]
   15de0:	sub	r2, r2, r3
   15de4:	cmp	r2, r0
   15de8:	bhi	1699c <argp_failure@@Base+0xee8>
   15dec:	ldr	r1, [r7, #4]
   15df0:	mov	r3, #1
   15df4:	ldr	r8, [r4, #12]
   15df8:	str	r1, [fp, #-120]	; 0xffffff88
   15dfc:	mov	r1, #0
   15e00:	str	r1, [r7, #4]
   15e04:	ldr	r1, [r7, #12]
   15e08:	str	r3, [fp, #-64]	; 0xffffffc0
   15e0c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15e10:	str	r1, [fp, #-116]	; 0xffffff8c
   15e14:	ands	r1, r8, #8
   15e18:	str	r5, [fp, #-76]	; 0xffffffb4
   15e1c:	str	r1, [fp, #-124]	; 0xffffff84
   15e20:	sub	r1, fp, #88	; 0x58
   15e24:	str	r7, [fp, #-72]	; 0xffffffb8
   15e28:	str	r3, [fp, #-60]	; 0xffffffc4
   15e2c:	movne	r3, #0
   15e30:	str	r1, [fp, #-68]	; 0xffffffbc
   15e34:	strne	r3, [fp, #-124]	; 0xffffff84
   15e38:	bne	15e70 <argp_failure@@Base+0x3bc>
   15e3c:	ldr	r1, [r5, #4]
   15e40:	cmp	r1, #0
   15e44:	beq	15e70 <argp_failure@@Base+0x3bc>
   15e48:	add	r3, r4, #24
   15e4c:	ldr	ip, [r3, #-24]	; 0xffffffe8
   15e50:	cmp	ip, #0
   15e54:	beq	15e64 <argp_failure@@Base+0x3b0>
   15e58:	ldr	ip, [r3, #-12]
   15e5c:	tst	ip, #2
   15e60:	beq	16abc <argp_failure@@Base+0x1008>
   15e64:	subs	r1, r1, #1
   15e68:	add	r3, r3, #24
   15e6c:	bne	15e4c <argp_failure@@Base+0x398>
   15e70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15e74:	cmp	r2, r0
   15e78:	ldr	r6, [r3, #8]
   15e7c:	bhi	169f8 <argp_failure@@Base+0xf44>
   15e80:	str	r6, [r7, #12]
   15e84:	ldr	sl, [r5, #4]
   15e88:	cmp	sl, #0
   15e8c:	movne	r6, r4
   15e90:	strne	r5, [fp, #-132]	; 0xffffff7c
   15e94:	movne	r5, r4
   15e98:	movne	r4, r9
   15e9c:	beq	15ef4 <argp_failure@@Base+0x440>
   15ea0:	ldr	r9, [r6, #12]
   15ea4:	tst	r9, #8
   15ea8:	bne	15ee0 <argp_failure@@Base+0x42c>
   15eac:	ldr	r8, [r6, #4]
   15eb0:	sub	r2, r8, #1
   15eb4:	cmp	r2, #254	; 0xfe
   15eb8:	bhi	15ee0 <argp_failure@@Base+0x42c>
   15ebc:	bl	11394 <__ctype_b_loc@plt>
   15ec0:	ldr	r1, [r0]
   15ec4:	lsl	r2, r8, #1
   15ec8:	ldrh	r2, [r1, r2]
   15ecc:	tst	r2, #16384	; 0x4000
   15ed0:	beq	15ee0 <argp_failure@@Base+0x42c>
   15ed4:	ldrb	r2, [r4]
   15ed8:	cmp	r8, r2
   15edc:	beq	16624 <argp_failure@@Base+0xb70>
   15ee0:	subs	sl, sl, #1
   15ee4:	add	r6, r6, #24
   15ee8:	bne	15ea0 <argp_failure@@Base+0x3ec>
   15eec:	mov	r4, r5
   15ef0:	ldr	r5, [fp, #-132]	; 0xffffff7c
   15ef4:	ldr	r2, [r4, #12]
   15ef8:	ldr	r1, [r7, #24]
   15efc:	ldr	r3, [r7, #28]
   15f00:	tst	r2, #8
   15f04:	ldr	r2, [r7, #16]
   15f08:	sub	r3, r3, r1
   15f0c:	beq	16714 <argp_failure@@Base+0xc60>
   15f10:	cmp	r3, r2
   15f14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f18:	ldr	r6, [r3, #16]
   15f1c:	bhi	16af8 <argp_failure@@Base+0x1044>
   15f20:	str	r6, [r7, #12]
   15f24:	ldr	r8, [r5, #4]
   15f28:	cmp	r8, #0
   15f2c:	addne	r6, r4, #24
   15f30:	bne	15f44 <argp_failure@@Base+0x490>
   15f34:	b	15fd4 <argp_failure@@Base+0x520>
   15f38:	subs	r8, r8, #1
   15f3c:	add	r6, r6, #24
   15f40:	beq	15fd4 <argp_failure@@Base+0x520>
   15f44:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15f48:	cmp	r3, #0
   15f4c:	beq	15f38 <argp_failure@@Base+0x484>
   15f50:	ldr	r3, [r6, #-12]
   15f54:	tst	r3, #2
   15f58:	bne	15f38 <argp_failure@@Base+0x484>
   15f5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f60:	sub	r1, fp, #76	; 0x4c
   15f64:	ldr	r0, [r3, #16]
   15f68:	bl	15334 <__assert_fail@plt+0x3dfc>
   15f6c:	ldr	sl, [r6, #-24]	; 0xffffffe8
   15f70:	mov	r0, sl
   15f74:	bl	113b8 <strlen@plt>
   15f78:	subs	r9, r0, #0
   15f7c:	beq	15f38 <argp_failure@@Base+0x484>
   15f80:	ldr	ip, [r7, #28]
   15f84:	mov	r1, r9
   15f88:	mov	r0, r7
   15f8c:	ldr	lr, [r7, #32]
   15f90:	add	r2, ip, r9
   15f94:	cmp	lr, r2
   15f98:	bcs	15fac <argp_failure@@Base+0x4f8>
   15f9c:	bl	19a08 <argp_parse@@Base+0x233c>
   15fa0:	cmp	r0, #0
   15fa4:	beq	15f38 <argp_failure@@Base+0x484>
   15fa8:	ldr	ip, [r7, #28]
   15fac:	mov	r2, r9
   15fb0:	mov	r1, sl
   15fb4:	mov	r0, ip
   15fb8:	add	r6, r6, #24
   15fbc:	bl	11268 <memcpy@plt>
   15fc0:	ldr	r2, [r7, #28]
   15fc4:	subs	r8, r8, #1
   15fc8:	add	r3, r2, r9
   15fcc:	str	r3, [r7, #28]
   15fd0:	bne	15f44 <argp_failure@@Base+0x490>
   15fd4:	ldr	r2, [r7, #16]
   15fd8:	ldr	r1, [r7, #24]
   15fdc:	ldr	r3, [r7, #28]
   15fe0:	sub	r3, r3, r1
   15fe4:	cmp	r3, r2
   15fe8:	bhi	169ec <argp_failure@@Base+0xf38>
   15fec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15ff0:	mov	r2, #0
   15ff4:	str	r2, [r7, #4]
   15ff8:	cmp	r3, r2
   15ffc:	beq	16634 <argp_failure@@Base+0xb80>
   16000:	ldr	r3, [r4, #12]
   16004:	tst	r3, #8
   16008:	bne	16034 <argp_failure@@Base+0x580>
   1600c:	ldr	r6, [r4, #4]
   16010:	sub	r3, r6, #1
   16014:	cmp	r3, #254	; 0xfe
   16018:	bhi	16034 <argp_failure@@Base+0x580>
   1601c:	bl	11394 <__ctype_b_loc@plt>
   16020:	ldr	r3, [r0]
   16024:	lsl	r6, r6, #1
   16028:	ldrh	r3, [r3, r6]
   1602c:	tst	r3, #16384	; 0x4000
   16030:	bne	16040 <argp_failure@@Base+0x58c>
   16034:	ldr	r3, [r4]
   16038:	cmp	r3, #0
   1603c:	beq	16b28 <argp_failure@@Base+0x1074>
   16040:	ldr	r2, [r7, #16]
   16044:	ldr	r1, [r7, #24]
   16048:	ldr	r3, [r7, #28]
   1604c:	sub	r3, r3, r1
   16050:	cmp	r3, r2
   16054:	bhi	169b8 <argp_failure@@Base+0xf04>
   16058:	ldr	r3, [fp, #-120]	; 0xffffff88
   1605c:	str	r3, [r7, #4]
   16060:	ldr	r3, [fp, #-112]	; 0xffffff90
   16064:	add	r5, r5, #28
   16068:	subs	r3, r3, #1
   1606c:	str	r3, [fp, #-112]	; 0xffffff90
   16070:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16074:	str	r3, [r7, #12]
   16078:	bne	15dcc <argp_failure@@Base+0x318>
   1607c:	ldr	r8, [fp, #-96]	; 0xffffffa0
   16080:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16084:	cmp	r3, #0
   16088:	beq	16104 <argp_failure@@Base+0x650>
   1608c:	ldr	r3, [r8, #4]
   16090:	cmp	r3, #0
   16094:	beq	16104 <argp_failure@@Base+0x650>
   16098:	ldr	ip, [fp, #-104]	; 0xffffff98
   1609c:	cmp	ip, #0
   160a0:	beq	16e68 <argp_failure@@Base+0x13b4>
   160a4:	ldr	r2, [ip]
   160a8:	cmp	r2, #0
   160ac:	beq	16dd8 <argp_failure@@Base+0x1324>
   160b0:	ldr	r3, [r2, #20]
   160b4:	cmp	r3, #0
   160b8:	beq	16dd8 <argp_failure@@Base+0x1324>
   160bc:	movw	r5, #45148	; 0xb05c
   160c0:	movt	r5, #1
   160c4:	mov	r0, r5
   160c8:	mov	r1, #5
   160cc:	movt	r1, #512	; 0x200
   160d0:	mov	r3, ip
   160d4:	bl	13ed4 <__assert_fail@plt+0x299c>
   160d8:	subs	r4, r0, #0
   160dc:	beq	16104 <argp_failure@@Base+0x650>
   160e0:	ldrb	r3, [r4]
   160e4:	subs	r5, r4, r5
   160e8:	movne	r5, #1
   160ec:	cmp	r3, #0
   160f0:	bne	16de4 <argp_failure@@Base+0x1330>
   160f4:	cmp	r5, #0
   160f8:	beq	16104 <argp_failure@@Base+0x650>
   160fc:	mov	r0, r4
   16100:	bl	186b0 <argp_parse@@Base+0xfe4>
   16104:	mov	r4, #1
   16108:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1610c:	tst	r3, #32
   16110:	bne	165c4 <argp_failure@@Base+0xb10>
   16114:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16118:	tst	r3, #64	; 0x40
   1611c:	beq	1614c <argp_failure@@Base+0x698>
   16120:	movw	r5, #53180	; 0xcfbc
   16124:	movt	r5, #2
   16128:	ldr	r2, [r5]
   1612c:	cmp	r2, #0
   16130:	beq	1614c <argp_failure@@Base+0x698>
   16134:	cmp	r4, #0
   16138:	bne	165fc <argp_failure@@Base+0xb48>
   1613c:	movw	r1, #45604	; 0xb224
   16140:	movt	r1, #1
   16144:	mov	r0, r7
   16148:	bl	19a28 <argp_parse@@Base+0x235c>
   1614c:	ldr	r0, [fp, #-128]	; 0xffffff80
   16150:	bl	112c8 <funlockfile@plt>
   16154:	ldr	r3, [fp, #-136]	; 0xffffff78
   16158:	cmp	r3, #0
   1615c:	beq	16168 <argp_failure@@Base+0x6b4>
   16160:	mov	r0, r3
   16164:	bl	13b80 <__assert_fail@plt+0x2648>
   16168:	mov	r0, r7
   1616c:	bl	198d8 <argp_parse@@Base+0x220c>
   16170:	sub	sp, fp, #32
   16174:	ldrd	r4, [sp]
   16178:	ldrd	r6, [sp, #8]
   1617c:	ldrd	r8, [sp, #16]
   16180:	ldrd	sl, [sp, #24]
   16184:	add	sp, sp, #32
   16188:	pop	{pc}		; (ldr pc, [sp], #4)
   1618c:	movw	r0, #45264	; 0xb0d0
   16190:	movt	r0, #1
   16194:	bl	11334 <getenv@plt>
   16198:	subs	r5, r0, #0
   1619c:	ldrd	r2, [r8]
   161a0:	sub	ip, fp, #76	; 0x4c
   161a4:	ldrd	r0, [r8, #8]
   161a8:	str	ip, [fp, #-96]	; 0xffffffa0
   161ac:	ldrd	r6, [r8, #16]
   161b0:	strd	r2, [fp, #-76]	; 0xffffffb4
   161b4:	ldrd	r2, [r8, #24]
   161b8:	strd	r0, [fp, #-68]	; 0xffffffbc
   161bc:	ldrd	r0, [r8, #32]
   161c0:	strd	r6, [fp, #-60]	; 0xffffffc4
   161c4:	strd	r2, [fp, #-52]	; 0xffffffcc
   161c8:	strd	r0, [fp, #-44]	; 0xffffffd4
   161cc:	beq	15d1c <argp_failure@@Base+0x268>
   161d0:	ldrb	sl, [r5]
   161d4:	movw	r3, #45328	; 0xb110
   161d8:	movt	r3, #1
   161dc:	ldr	r9, [pc, #3300]	; 16ec8 <argp_failure@@Base+0x1414>
   161e0:	str	r3, [fp, #-116]	; 0xffffff8c
   161e4:	movw	r3, #45280	; 0xb0e0
   161e8:	movt	r3, #1
   161ec:	str	r3, [fp, #-120]	; 0xffffff88
   161f0:	cmp	sl, #0
   161f4:	beq	1622c <argp_failure@@Base+0x778>
   161f8:	bl	11394 <__ctype_b_loc@plt>
   161fc:	mov	r7, r0
   16200:	ldr	r1, [r0]
   16204:	b	1620c <argp_failure@@Base+0x758>
   16208:	ldrb	sl, [r5, #1]!
   1620c:	lsl	r3, sl, #1
   16210:	ldrh	r6, [r1, r3]
   16214:	tst	r6, #8192	; 0x2000
   16218:	bne	16208 <argp_failure@@Base+0x754>
   1621c:	ands	r2, r6, #1024	; 0x400
   16220:	bne	16890 <argp_failure@@Base+0xddc>
   16224:	cmp	sl, #0
   16228:	bne	16cb8 <argp_failure@@Base+0x1204>
   1622c:	ldr	r1, [pc, #3224]	; 16ecc <argp_failure@@Base+0x1418>
   16230:	ldr	lr, [fp, #-44]	; 0xffffffd4
   16234:	add	r3, r1, #16
   16238:	cmp	r3, r9
   1623c:	mov	r1, r3
   16240:	beq	16b94 <argp_failure@@Base+0x10e0>
   16244:	ldrb	r2, [r3, #14]
   16248:	cmp	r2, #0
   1624c:	bne	16234 <argp_failure@@Base+0x780>
   16250:	ldrb	r0, [r3, #15]
   16254:	sub	ip, fp, #36	; 0x24
   16258:	cmp	r0, #32
   1625c:	add	ip, ip, r0
   16260:	beq	16234 <argp_failure@@Base+0x780>
   16264:	ldr	r0, [ip, #-40]	; 0xffffffd8
   16268:	cmp	r0, lr
   1626c:	blt	16234 <argp_failure@@Base+0x780>
   16270:	movw	r0, #45452	; 0xb18c
   16274:	movt	r0, #1
   16278:	mov	r1, r2
   1627c:	stm	sp, {r0, r3}
   16280:	movw	r3, #45400	; 0xb158
   16284:	movt	r3, #1
   16288:	ldr	r0, [fp, #-104]	; 0xffffff98
   1628c:	bl	15ab4 <argp_failure@@Base>
   16290:	b	15d1c <argp_failure@@Base+0x268>
   16294:	ldr	r3, [fp, #4]
   16298:	movw	r1, #45516	; 0xb1cc
   1629c:	movt	r1, #1
   162a0:	mov	r0, r7
   162a4:	mov	r2, r3
   162a8:	bl	19a28 <argp_parse@@Base+0x235c>
   162ac:	cmp	r5, #0
   162b0:	beq	16104 <argp_failure@@Base+0x650>
   162b4:	ldr	r3, [fp, #-136]	; 0xffffff78
   162b8:	ldr	r3, [r3, #4]
   162bc:	cmp	r3, #0
   162c0:	beq	16104 <argp_failure@@Base+0x650>
   162c4:	ldr	r3, [r7, #28]
   162c8:	ldr	r2, [r7, #32]
   162cc:	cmp	r3, r2
   162d0:	bcs	16d20 <argp_failure@@Base+0x126c>
   162d4:	add	r1, r3, #1
   162d8:	mov	r2, #10
   162dc:	str	r1, [r7, #28]
   162e0:	strb	r2, [r3]
   162e4:	ldr	r3, [fp, #-136]	; 0xffffff78
   162e8:	ldr	r3, [r3, #4]
   162ec:	str	r3, [fp, #-112]	; 0xffffff90
   162f0:	mov	r3, #0
   162f4:	ldr	r2, [fp, #-112]	; 0xffffff90
   162f8:	cmp	r2, r3
   162fc:	ldr	r2, [fp, #-136]	; 0xffffff78
   16300:	ldr	r2, [r2]
   16304:	str	r3, [fp, #-88]	; 0xffffffa8
   16308:	str	r3, [fp, #-84]	; 0xffffffac
   1630c:	str	r3, [fp, #-80]	; 0xffffffb0
   16310:	bne	15dac <argp_failure@@Base+0x2f8>
   16314:	b	16104 <argp_failure@@Base+0x650>
   16318:	mov	r0, #1
   1631c:	mov	r3, #0
   16320:	ldr	r1, [fp, #-104]	; 0xffffff98
   16324:	mov	r2, r3
   16328:	stm	sp, {r0, r7}
   1632c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16330:	bl	154e4 <__assert_fail@plt+0x3fac>
   16334:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16338:	orr	r4, r4, r0
   1633c:	tst	r3, #4
   16340:	and	r5, r3, #8
   16344:	beq	15d70 <argp_failure@@Base+0x2bc>
   16348:	b	16294 <argp_failure@@Base+0x7e0>
   1634c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16350:	movw	r2, #45492	; 0xb1b4
   16354:	movt	r2, #1
   16358:	movw	sl, #45484	; 0xb1ac
   1635c:	movt	sl, #1
   16360:	str	r2, [fp, #-120]	; 0xffffff88
   16364:	mov	r4, #1
   16368:	ldr	r0, [r3, #8]
   1636c:	ldr	r1, [r3, #16]
   16370:	movw	r3, #45476	; 0xb1a4
   16374:	movt	r3, #1
   16378:	str	r3, [fp, #-124]	; 0xffffff84
   1637c:	bl	13e68 <__assert_fail@plt+0x2930>
   16380:	add	r3, r0, #7
   16384:	mov	r2, r0
   16388:	bic	r3, r3, #7
   1638c:	mov	r1, #0
   16390:	sub	sp, sp, r3
   16394:	add	r9, sp, #8
   16398:	mov	r0, r9
   1639c:	bl	1140c <memset@plt>
   163a0:	sub	r3, fp, #76	; 0x4c
   163a4:	str	sl, [fp, #-116]	; 0xffffff8c
   163a8:	str	r9, [fp, #-112]	; 0xffffff90
   163ac:	str	r3, [fp, #-96]	; 0xffffffa0
   163b0:	ldr	r9, [fp, #-136]	; 0xffffff78
   163b4:	ldr	sl, [fp, #-100]	; 0xffffff9c
   163b8:	b	16494 <argp_failure@@Base+0x9e0>
   163bc:	cmp	r4, #0
   163c0:	mov	r0, r7
   163c4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   163c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   163cc:	ldrne	r2, [fp, #-124]	; 0xffffff84
   163d0:	ldreq	r2, [fp, #-120]	; 0xffffff88
   163d4:	ldr	r4, [r7, #12]
   163d8:	str	r5, [r7, #12]
   163dc:	str	r3, [fp, #-76]	; 0xffffffb4
   163e0:	ldr	r3, [fp, #4]
   163e4:	bl	19a28 <argp_parse@@Base+0x235c>
   163e8:	ldr	r2, [r7, #16]
   163ec:	ldr	r1, [r7, #24]
   163f0:	ldr	r3, [r7, #28]
   163f4:	ldr	r5, [r8, #28]
   163f8:	sub	r3, r3, r1
   163fc:	cmp	r3, r2
   16400:	bhi	165b8 <argp_failure@@Base+0xb04>
   16404:	tst	sl, #2
   16408:	ldr	r6, [r7, #4]
   1640c:	str	r5, [r7, #4]
   16410:	beq	165a4 <argp_failure@@Base+0xaf0>
   16414:	ldr	r3, [r9, #4]
   16418:	cmp	r3, #0
   1641c:	bne	16b3c <argp_failure@@Base+0x1088>
   16420:	mov	r3, #1
   16424:	str	r7, [sp]
   16428:	ldrd	r0, [fp, #-108]	; 0xffffff94
   1642c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16430:	bl	14e88 <__assert_fail@plt+0x3950>
   16434:	ldr	r1, [r7, #16]
   16438:	mov	r5, r0
   1643c:	ldrd	r2, [r7, #24]
   16440:	sub	r2, r3, r2
   16444:	cmp	r2, r1
   16448:	strls	r4, [r7, #12]
   1644c:	bhi	16574 <argp_failure@@Base+0xac0>
   16450:	ldr	r2, [r7, #32]
   16454:	str	r6, [r7, #4]
   16458:	cmp	r2, r3
   1645c:	bhi	16478 <argp_failure@@Base+0x9c4>
   16460:	mov	r1, #1
   16464:	mov	r0, r7
   16468:	bl	19a08 <argp_parse@@Base+0x233c>
   1646c:	cmp	r0, #0
   16470:	beq	16488 <argp_failure@@Base+0x9d4>
   16474:	ldr	r3, [r7, #28]
   16478:	add	r1, r3, #1
   1647c:	mov	r2, #10
   16480:	str	r1, [r7, #28]
   16484:	strb	r2, [r3]
   16488:	cmp	r5, #0
   1648c:	mov	r4, #0
   16490:	beq	165e4 <argp_failure@@Base+0xb30>
   16494:	ldr	r2, [r7, #16]
   16498:	ldr	r1, [r7, #24]
   1649c:	ldr	r3, [r7, #28]
   164a0:	ldr	r5, [r8, #28]
   164a4:	sub	r3, r3, r1
   164a8:	cmp	r3, r2
   164ac:	bls	163bc <argp_failure@@Base+0x908>
   164b0:	mov	r0, r7
   164b4:	bl	1939c <argp_parse@@Base+0x1cd0>
   164b8:	b	163bc <argp_failure@@Base+0x908>
   164bc:	mov	r1, #0
   164c0:	ldr	r0, [fp, #-108]	; 0xffffff94
   164c4:	bl	13f1c <__assert_fail@plt+0x29e4>
   164c8:	ldr	r5, [r0]
   164cc:	mov	r6, r0
   164d0:	movw	r2, #45460	; 0xb194
   164d4:	movt	r2, #1
   164d8:	ldr	r4, [r0, #4]
   164dc:	str	r6, [fp, #-136]	; 0xffffff78
   164e0:	mov	r0, r5
   164e4:	mov	r1, r4
   164e8:	bl	13dc4 <__assert_fail@plt+0x288c>
   164ec:	cmp	r0, #0
   164f0:	beq	16500 <argp_failure@@Base+0xa4c>
   164f4:	mvn	r3, #0
   164f8:	str	r3, [r0, #12]
   164fc:	ldr	r4, [r6, #4]
   16500:	movw	r2, #45468	; 0xb19c
   16504:	movt	r2, #1
   16508:	mov	r1, r4
   1650c:	mov	r0, r5
   16510:	bl	13dc4 <__assert_fail@plt+0x288c>
   16514:	cmp	r0, #0
   16518:	beq	1652c <argp_failure@@Base+0xa78>
   1651c:	mvn	r3, #0
   16520:	str	r3, [r0, #12]
   16524:	ldr	r3, [fp, #-136]	; 0xffffff78
   16528:	ldr	r4, [r3, #4]
   1652c:	cmp	r4, #0
   16530:	beq	15d48 <argp_failure@@Base+0x294>
   16534:	mov	r3, r5
   16538:	mov	r1, #0
   1653c:	str	r1, [r3, #24]
   16540:	add	r1, r1, #1
   16544:	add	r3, r3, #28
   16548:	cmp	r1, r4
   1654c:	bne	1653c <argp_failure@@Base+0xa88>
   16550:	mov	r0, r5
   16554:	movw	r3, #18632	; 0x48c8
   16558:	movt	r3, #1
   1655c:	mov	r2, #28
   16560:	bl	114cc <qsort@plt>
   16564:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16568:	ands	r4, r3, #3
   1656c:	beq	15d54 <argp_failure@@Base+0x2a0>
   16570:	b	1634c <argp_failure@@Base+0x898>
   16574:	mov	r0, r7
   16578:	bl	1939c <argp_parse@@Base+0x1cd0>
   1657c:	ldr	r1, [r7, #16]
   16580:	str	r4, [r7, #12]
   16584:	ldrd	r2, [r7, #24]
   16588:	sub	r2, r3, r2
   1658c:	cmp	r2, r1
   16590:	bls	16450 <argp_failure@@Base+0x99c>
   16594:	mov	r0, r7
   16598:	bl	1939c <argp_parse@@Base+0x1cd0>
   1659c:	ldr	r3, [r7, #28]
   165a0:	b	16450 <argp_failure@@Base+0x99c>
   165a4:	mov	r1, r7
   165a8:	mov	r0, r9
   165ac:	orr	sl, sl, #2
   165b0:	bl	146e4 <__assert_fail@plt+0x31ac>
   165b4:	b	16420 <argp_failure@@Base+0x96c>
   165b8:	mov	r0, r7
   165bc:	bl	1939c <argp_parse@@Base+0x1cd0>
   165c0:	b	16404 <argp_failure@@Base+0x950>
   165c4:	mov	r2, #0
   165c8:	mov	r3, r4
   165cc:	ldrd	r0, [fp, #-108]	; 0xffffff94
   165d0:	stm	sp, {r2, r7}
   165d4:	mov	r2, #1
   165d8:	bl	154e4 <__assert_fail@plt+0x3fac>
   165dc:	orr	r4, r4, r0
   165e0:	b	16114 <argp_failure@@Base+0x660>
   165e4:	str	sl, [fp, #-100]	; 0xffffff9c
   165e8:	mov	r4, #1
   165ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   165f0:	tst	r3, #16
   165f4:	beq	15d60 <argp_failure@@Base+0x2ac>
   165f8:	b	16318 <argp_failure@@Base+0x864>
   165fc:	ldr	r3, [r7, #28]
   16600:	ldr	r2, [r7, #32]
   16604:	cmp	r3, r2
   16608:	bcs	16cf0 <argp_failure@@Base+0x123c>
   1660c:	add	r1, r3, #1
   16610:	mov	r2, #10
   16614:	str	r1, [r7, #28]
   16618:	strb	r2, [r3]
   1661c:	ldr	r2, [r5]
   16620:	b	1613c <argp_failure@@Base+0x688>
   16624:	tst	r9, #2
   16628:	beq	16a0c <argp_failure@@Base+0xf58>
   1662c:	add	r4, r4, #1
   16630:	b	15ee0 <argp_failure@@Base+0x42c>
   16634:	ldr	r2, [r5, #20]
   16638:	ldr	r6, [r4, #16]
   1663c:	cmp	r2, #0
   16640:	beq	16a04 <argp_failure@@Base+0xf50>
   16644:	ldr	r3, [r2, #20]
   16648:	cmp	r3, #0
   1664c:	beq	16a04 <argp_failure@@Base+0xf50>
   16650:	mov	r0, r6
   16654:	ldr	r3, [fp, #-104]	; 0xffffff98
   16658:	ldr	r1, [r4, #4]
   1665c:	bl	13ed4 <__assert_fail@plt+0x299c>
   16660:	mov	r4, r0
   16664:	cmp	r4, #0
   16668:	beq	16838 <argp_failure@@Base+0xd84>
   1666c:	ldrb	r3, [r4]
   16670:	cmp	r3, #0
   16674:	beq	16828 <argp_failure@@Base+0xd74>
   16678:	ldr	r2, [r7, #16]
   1667c:	ldr	r1, [r7, #24]
   16680:	ldr	r3, [r7, #28]
   16684:	sub	r3, r3, r1
   16688:	cmp	r3, r2
   1668c:	bhi	16c40 <argp_failure@@Base+0x118c>
   16690:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16694:	ldr	r9, [r7, #20]
   16698:	ldr	r8, [r3, #20]
   1669c:	bic	r9, r9, r9, asr #31
   166a0:	mov	sl, r8
   166a4:	str	r8, [r7, #4]
   166a8:	add	r3, r8, #3
   166ac:	str	sl, [r7, #12]
   166b0:	cmp	r3, r9
   166b4:	bcc	16c1c <argp_failure@@Base+0x1168>
   166b8:	cmp	r8, r9
   166bc:	bhi	167c8 <argp_failure@@Base+0xd14>
   166c0:	ldr	r3, [r7, #28]
   166c4:	ldr	r1, [r7, #32]
   166c8:	add	r2, r3, #3
   166cc:	cmp	r1, r2
   166d0:	bcs	166ec <argp_failure@@Base+0xc38>
   166d4:	mov	r1, #3
   166d8:	mov	r0, r7
   166dc:	bl	19a08 <argp_parse@@Base+0x233c>
   166e0:	cmp	r0, #0
   166e4:	beq	167d4 <argp_failure@@Base+0xd20>
   166e8:	ldr	r3, [r7, #28]
   166ec:	movw	r2, #45600	; 0xb220
   166f0:	movt	r2, #1
   166f4:	ldrh	r1, [r2]
   166f8:	ldrb	r2, [r2, #2]
   166fc:	strh	r1, [r3]
   16700:	strb	r2, [r3, #2]
   16704:	ldr	r3, [r7, #28]
   16708:	add	r3, r3, #3
   1670c:	str	r3, [r7, #28]
   16710:	b	167d4 <argp_failure@@Base+0xd20>
   16714:	cmp	r3, r2
   16718:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1671c:	ldr	r6, [r3, #12]
   16720:	bhi	16adc <argp_failure@@Base+0x1028>
   16724:	str	r6, [r7, #12]
   16728:	ldr	sl, [r5, #4]
   1672c:	cmp	sl, #0
   16730:	beq	15fd4 <argp_failure@@Base+0x520>
   16734:	movw	r3, #45588	; 0xb214
   16738:	movt	r3, #1
   1673c:	movw	r8, #45580	; 0xb20c
   16740:	movt	r8, #1
   16744:	movw	r9, #45596	; 0xb21c
   16748:	movt	r9, #1
   1674c:	str	r3, [fp, #-124]	; 0xffffff84
   16750:	add	r6, r4, #24
   16754:	b	16764 <argp_failure@@Base+0xcb0>
   16758:	subs	sl, sl, #1
   1675c:	add	r6, r6, #24
   16760:	beq	15fd4 <argp_failure@@Base+0x520>
   16764:	ldr	r3, [r6, #-24]	; 0xffffffe8
   16768:	cmp	r3, #0
   1676c:	beq	16758 <argp_failure@@Base+0xca4>
   16770:	ldr	r3, [r6, #-12]
   16774:	tst	r3, #2
   16778:	bne	16758 <argp_failure@@Base+0xca4>
   1677c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16780:	sub	r1, fp, #76	; 0x4c
   16784:	ldr	r0, [r3, #12]
   16788:	bl	15334 <__assert_fail@plt+0x3dfc>
   1678c:	mov	r1, r8
   16790:	mov	r0, r7
   16794:	ldr	r2, [r6, #-24]	; 0xffffffe8
   16798:	bl	19a28 <argp_parse@@Base+0x235c>
   1679c:	ldr	r3, [r4, #8]
   167a0:	cmp	r3, #0
   167a4:	beq	16758 <argp_failure@@Base+0xca4>
   167a8:	ldr	ip, [r4, #12]
   167ac:	mov	r1, r9
   167b0:	mov	r2, r3
   167b4:	mov	r0, r7
   167b8:	tst	ip, #1
   167bc:	ldrne	r1, [fp, #-124]	; 0xffffff84
   167c0:	bl	19a28 <argp_parse@@Base+0x235c>
   167c4:	b	16758 <argp_failure@@Base+0xca4>
   167c8:	mov	r1, r8
   167cc:	mov	r0, r7
   167d0:	bl	14c6c <__assert_fail@plt+0x3734>
   167d4:	mov	r0, r4
   167d8:	bl	113b8 <strlen@plt>
   167dc:	subs	r8, r0, #0
   167e0:	beq	16828 <argp_failure@@Base+0xd74>
   167e4:	ldr	r0, [r7, #28]
   167e8:	ldr	r2, [r7, #32]
   167ec:	add	r3, r0, r8
   167f0:	cmp	r2, r3
   167f4:	bcs	16810 <argp_failure@@Base+0xd5c>
   167f8:	mov	r1, r8
   167fc:	mov	r0, r7
   16800:	bl	19a08 <argp_parse@@Base+0x233c>
   16804:	cmp	r0, #0
   16808:	beq	16828 <argp_failure@@Base+0xd74>
   1680c:	ldr	r0, [r7, #28]
   16810:	mov	r2, r8
   16814:	mov	r1, r4
   16818:	bl	11268 <memcpy@plt>
   1681c:	ldr	r3, [r7, #28]
   16820:	add	r8, r3, r8
   16824:	str	r8, [r7, #28]
   16828:	cmp	r6, r4
   1682c:	beq	16838 <argp_failure@@Base+0xd84>
   16830:	mov	r0, r4
   16834:	bl	186b0 <argp_parse@@Base+0xfe4>
   16838:	ldr	r1, [r7, #16]
   1683c:	ldrd	r2, [r7, #24]
   16840:	sub	r2, r3, r2
   16844:	cmp	r2, r1
   16848:	bhi	16ae8 <argp_failure@@Base+0x1034>
   1684c:	mov	r2, #0
   16850:	str	r2, [r7, #4]
   16854:	ldr	r2, [r7, #32]
   16858:	cmp	r2, r3
   1685c:	bhi	16878 <argp_failure@@Base+0xdc4>
   16860:	mov	r1, #1
   16864:	mov	r0, r7
   16868:	bl	19a08 <argp_parse@@Base+0x233c>
   1686c:	cmp	r0, #0
   16870:	beq	16888 <argp_failure@@Base+0xdd4>
   16874:	ldr	r3, [r7, #28]
   16878:	add	r1, r3, #1
   1687c:	mov	r2, #10
   16880:	str	r1, [r7, #28]
   16884:	strb	r2, [r3]
   16888:	str	r5, [fp, #-88]	; 0xffffffa8
   1688c:	b	16040 <argp_failure@@Base+0x58c>
   16890:	cmp	sl, #95	; 0x5f
   16894:	cmpne	sl, #45	; 0x2d
   16898:	ubfx	r6, r6, #3, #1
   1689c:	moveq	r3, #1
   168a0:	movne	r3, #0
   168a4:	orrs	r6, r3, r6
   168a8:	beq	16dcc <argp_failure@@Base+0x1318>
   168ac:	mov	r4, r5
   168b0:	ldrb	r3, [r4, #1]!
   168b4:	lsl	r2, r3, #1
   168b8:	cmp	r3, #45	; 0x2d
   168bc:	cmpne	r3, #95	; 0x5f
   168c0:	moveq	ip, #1
   168c4:	movne	ip, #0
   168c8:	ldrh	r2, [r1, r2]
   168cc:	ubfx	r0, r2, #3, #1
   168d0:	orrs	r0, ip, r0
   168d4:	bne	168b0 <argp_failure@@Base+0xdfc>
   168d8:	tst	r2, #8192	; 0x2000
   168dc:	sub	r6, r4, r5
   168e0:	beq	168f8 <argp_failure@@Base+0xe44>
   168e4:	ldrb	r3, [r4, #1]!
   168e8:	lsl	r2, r3, #1
   168ec:	ldrh	r2, [r1, r2]
   168f0:	tst	r2, #8192	; 0x2000
   168f4:	bne	168e4 <argp_failure@@Base+0xe30>
   168f8:	cmp	r3, #44	; 0x2c
   168fc:	cmpne	r3, #0
   16900:	beq	16ac8 <argp_failure@@Base+0x1014>
   16904:	cmp	r3, #61	; 0x3d
   16908:	beq	16d3c <argp_failure@@Base+0x1288>
   1690c:	ldrb	r3, [r4]
   16910:	lsl	r3, r3, #1
   16914:	ldrh	r3, [r1, r3]
   16918:	ands	r3, r3, #2048	; 0x800
   1691c:	moveq	r7, r3
   16920:	streq	r7, [fp, #-112]	; 0xffffff90
   16924:	bne	16d6c <argp_failure@@Base+0x12b8>
   16928:	ldr	sl, [pc, #1436]	; 16ecc <argp_failure@@Base+0x1418>
   1692c:	b	1693c <argp_failure@@Base+0xe88>
   16930:	add	sl, sl, #16
   16934:	cmp	sl, r9
   16938:	beq	16bcc <argp_failure@@Base+0x1118>
   1693c:	mov	r0, sl
   16940:	bl	113b8 <strlen@plt>
   16944:	cmp	r0, r6
   16948:	bne	16930 <argp_failure@@Base+0xe7c>
   1694c:	mov	r2, r6
   16950:	mov	r1, sl
   16954:	mov	r0, r5
   16958:	bl	11508 <strncmp@plt>
   1695c:	cmp	r0, #0
   16960:	bne	16930 <argp_failure@@Base+0xe7c>
   16964:	cmp	r7, #0
   16968:	bne	16d0c <argp_failure@@Base+0x1258>
   1696c:	ldrb	r3, [sl, #15]
   16970:	sub	r2, fp, #36	; 0x24
   16974:	add	r3, r2, r3
   16978:	ldr	r2, [fp, #-112]	; 0xffffff90
   1697c:	str	r2, [r3, #-40]	; 0xffffffd8
   16980:	ldrb	sl, [r4]
   16984:	cmp	sl, #44	; 0x2c
   16988:	movne	r5, r4
   1698c:	bne	161f0 <argp_failure@@Base+0x73c>
   16990:	add	r5, r4, #1
   16994:	ldrb	sl, [r4, #1]
   16998:	b	161f0 <argp_failure@@Base+0x73c>
   1699c:	mov	r0, r7
   169a0:	bl	1939c <argp_parse@@Base+0x1cd0>
   169a4:	ldr	r0, [r7, #16]
   169a8:	ldr	r3, [r7, #24]
   169ac:	ldr	r2, [r7, #28]
   169b0:	sub	r2, r2, r3
   169b4:	b	15dec <argp_failure@@Base+0x338>
   169b8:	mov	r0, r7
   169bc:	bl	1939c <argp_parse@@Base+0x1cd0>
   169c0:	ldr	r3, [fp, #-120]	; 0xffffff88
   169c4:	ldr	r2, [r7, #16]
   169c8:	ldr	r1, [r7, #24]
   169cc:	str	r3, [r7, #4]
   169d0:	ldr	r3, [r7, #28]
   169d4:	sub	r3, r3, r1
   169d8:	cmp	r3, r2
   169dc:	bls	16060 <argp_failure@@Base+0x5ac>
   169e0:	mov	r0, r7
   169e4:	bl	1939c <argp_parse@@Base+0x1cd0>
   169e8:	b	16060 <argp_failure@@Base+0x5ac>
   169ec:	mov	r0, r7
   169f0:	bl	1939c <argp_parse@@Base+0x1cd0>
   169f4:	b	15fec <argp_failure@@Base+0x538>
   169f8:	mov	r0, r7
   169fc:	bl	1939c <argp_parse@@Base+0x1cd0>
   16a00:	b	15e80 <argp_failure@@Base+0x3cc>
   16a04:	mov	r4, r6
   16a08:	b	16664 <argp_failure@@Base+0xbb0>
   16a0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16a10:	sub	r1, fp, #76	; 0x4c
   16a14:	ldr	r0, [r3, #8]
   16a18:	bl	15334 <__assert_fail@plt+0x3dfc>
   16a1c:	ldr	r2, [r7, #28]
   16a20:	ldr	r1, [r7, #32]
   16a24:	cmp	r2, r1
   16a28:	bcc	16a44 <argp_failure@@Base+0xf90>
   16a2c:	mov	r1, #1
   16a30:	mov	r0, r7
   16a34:	bl	19a08 <argp_parse@@Base+0x233c>
   16a38:	cmp	r0, #0
   16a3c:	beq	16a54 <argp_failure@@Base+0xfa0>
   16a40:	ldr	r2, [r7, #28]
   16a44:	add	r0, r2, #1
   16a48:	mov	r1, #45	; 0x2d
   16a4c:	str	r0, [r7, #28]
   16a50:	strb	r1, [r2]
   16a54:	ldr	r2, [r7, #28]
   16a58:	ldr	r1, [r7, #32]
   16a5c:	ldrb	r8, [r4]
   16a60:	cmp	r2, r1
   16a64:	bcc	16a80 <argp_failure@@Base+0xfcc>
   16a68:	mov	r1, #1
   16a6c:	mov	r0, r7
   16a70:	bl	19a08 <argp_parse@@Base+0x233c>
   16a74:	cmp	r0, #0
   16a78:	beq	16a8c <argp_failure@@Base+0xfd8>
   16a7c:	ldr	r2, [r7, #28]
   16a80:	add	r1, r2, #1
   16a84:	str	r1, [r7, #28]
   16a88:	strb	r8, [r2]
   16a8c:	ldr	r3, [fp, #-124]	; 0xffffff84
   16a90:	ldr	r2, [r5, #8]
   16a94:	cmp	r3, #0
   16a98:	beq	16b04 <argp_failure@@Base+0x1050>
   16a9c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16aa0:	ldr	r1, [r3]
   16aa4:	cmp	r1, #0
   16aa8:	bne	16b04 <argp_failure@@Base+0x1050>
   16aac:	cmp	r2, #0
   16ab0:	movne	r2, #1
   16ab4:	strne	r2, [fp, #-80]	; 0xffffffb0
   16ab8:	b	1662c <argp_failure@@Base+0xb78>
   16abc:	mov	r3, #1
   16ac0:	str	r3, [fp, #-124]	; 0xffffff84
   16ac4:	b	15e70 <argp_failure@@Base+0x3bc>
   16ac8:	cmp	sl, #110	; 0x6e
   16acc:	beq	16bec <argp_failure@@Base+0x1138>
   16ad0:	mov	r7, #1
   16ad4:	str	r7, [fp, #-112]	; 0xffffff90
   16ad8:	b	16928 <argp_failure@@Base+0xe74>
   16adc:	mov	r0, r7
   16ae0:	bl	1939c <argp_parse@@Base+0x1cd0>
   16ae4:	b	16724 <argp_failure@@Base+0xc70>
   16ae8:	mov	r0, r7
   16aec:	bl	1939c <argp_parse@@Base+0x1cd0>
   16af0:	ldr	r3, [r7, #28]
   16af4:	b	1684c <argp_failure@@Base+0xd98>
   16af8:	mov	r0, r7
   16afc:	bl	1939c <argp_parse@@Base+0x1cd0>
   16b00:	b	15f20 <argp_failure@@Base+0x46c>
   16b04:	cmp	r2, #0
   16b08:	beq	1662c <argp_failure@@Base+0xb78>
   16b0c:	ldr	r1, [r5, #12]
   16b10:	mov	r0, r7
   16b14:	tst	r1, #1
   16b18:	ldrne	r1, [fp, #-144]	; 0xffffff70
   16b1c:	ldreq	r1, [fp, #-140]	; 0xffffff74
   16b20:	bl	19a28 <argp_parse@@Base+0x235c>
   16b24:	b	1662c <argp_failure@@Base+0xb78>
   16b28:	sub	r2, fp, #76	; 0x4c
   16b2c:	ldr	r0, [r4, #16]
   16b30:	ldr	r1, [r5, #20]
   16b34:	bl	150c8 <__assert_fail@plt+0x3b90>
   16b38:	b	16888 <argp_failure@@Base+0xdd4>
   16b3c:	ldr	r3, [r7, #28]
   16b40:	ldr	r1, [r7, #32]
   16b44:	add	r2, r3, #12
   16b48:	cmp	r1, r2
   16b4c:	bcs	16b68 <argp_failure@@Base+0x10b4>
   16b50:	mov	r1, #12
   16b54:	mov	r0, r7
   16b58:	bl	19a08 <argp_parse@@Base+0x233c>
   16b5c:	cmp	r0, #0
   16b60:	beq	16420 <argp_failure@@Base+0x96c>
   16b64:	ldr	r3, [r7, #28]
   16b68:	movw	r2, #45500	; 0xb1bc
   16b6c:	movt	r2, #1
   16b70:	ldrd	r0, [r2]
   16b74:	ldr	r2, [r2, #8]
   16b78:	str	r0, [r3]
   16b7c:	str	r1, [r3, #4]
   16b80:	str	r2, [r3, #8]
   16b84:	ldr	r3, [r7, #28]
   16b88:	add	r3, r3, #12
   16b8c:	str	r3, [r7, #28]
   16b90:	b	16420 <argp_failure@@Base+0x96c>
   16b94:	ldr	lr, [fp, #-96]	; 0xffffffa0
   16b98:	mov	ip, #1
   16b9c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   16ba0:	ldrd	r4, [lr, #8]
   16ba4:	ldrd	r2, [lr, #32]
   16ba8:	strd	r0, [r8]
   16bac:	ldrd	r0, [lr, #24]
   16bb0:	strd	r4, [r8, #8]
   16bb4:	strd	r2, [r8, #32]
   16bb8:	ldrd	r2, [lr, #16]
   16bbc:	strd	r2, [r8, #16]
   16bc0:	strd	r0, [r8, #24]
   16bc4:	str	ip, [r8, #36]	; 0x24
   16bc8:	b	15d1c <argp_failure@@Base+0x268>
   16bcc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16bd0:	mov	r2, #0
   16bd4:	mov	r1, r2
   16bd8:	str	r6, [sp]
   16bdc:	str	r5, [sp, #4]
   16be0:	ldr	r0, [fp, #-104]	; 0xffffff98
   16be4:	bl	15ab4 <argp_failure@@Base>
   16be8:	b	16980 <argp_failure@@Base+0xecc>
   16bec:	ldrb	r3, [r5, #1]
   16bf0:	cmp	r3, #111	; 0x6f
   16bf4:	bne	16ad0 <argp_failure@@Base+0x101c>
   16bf8:	ldrb	r3, [r5, #2]
   16bfc:	cmp	r3, #45	; 0x2d
   16c00:	bne	16ad0 <argp_failure@@Base+0x101c>
   16c04:	mov	r3, #0
   16c08:	add	r5, r5, #3
   16c0c:	sub	r6, r6, #3
   16c10:	mov	r7, #1
   16c14:	str	r3, [fp, #-112]	; 0xffffff90
   16c18:	b	16928 <argp_failure@@Base+0xe74>
   16c1c:	ldr	r3, [r7, #28]
   16c20:	ldr	r2, [r7, #32]
   16c24:	cmp	r3, r2
   16c28:	bcs	16cd4 <argp_failure@@Base+0x1220>
   16c2c:	add	r1, r3, #1
   16c30:	mov	r2, #10
   16c34:	str	r1, [r7, #28]
   16c38:	strb	r2, [r3]
   16c3c:	b	167d4 <argp_failure@@Base+0xd20>
   16c40:	mov	r0, r7
   16c44:	bl	1939c <argp_parse@@Base+0x1cd0>
   16c48:	ldr	r2, [r7, #16]
   16c4c:	ldr	r1, [r7, #24]
   16c50:	ldr	r3, [r7, #28]
   16c54:	ldr	sl, [fp, #-96]	; 0xffffffa0
   16c58:	ldr	r9, [r7, #20]
   16c5c:	sub	r3, r3, r1
   16c60:	cmp	r3, r2
   16c64:	ldr	r8, [sl, #20]
   16c68:	bic	r9, r9, r9, asr #31
   16c6c:	bls	166a0 <argp_failure@@Base+0xbec>
   16c70:	mov	r0, r7
   16c74:	bl	1939c <argp_parse@@Base+0x1cd0>
   16c78:	ldr	r2, [r7, #16]
   16c7c:	str	r8, [r7, #4]
   16c80:	mov	r8, sl
   16c84:	ldr	r1, [r7, #24]
   16c88:	ldr	r3, [r7, #28]
   16c8c:	ldr	sl, [sl, #20]
   16c90:	sub	r3, r3, r1
   16c94:	cmp	r3, r2
   16c98:	bls	16ec0 <argp_failure@@Base+0x140c>
   16c9c:	mov	r0, r7
   16ca0:	bl	1939c <argp_parse@@Base+0x1cd0>
   16ca4:	ldr	r8, [r8, #20]
   16ca8:	b	166a8 <argp_failure@@Base+0xbf4>
   16cac:	ldr	r0, [fp, #-128]	; 0xffffff80
   16cb0:	bl	112c8 <funlockfile@plt>
   16cb4:	b	16170 <argp_failure@@Base+0x6bc>
   16cb8:	movw	r3, #45368	; 0xb138
   16cbc:	movt	r3, #1
   16cc0:	str	r5, [sp]
   16cc4:	mov	r1, r2
   16cc8:	ldr	r0, [fp, #-104]	; 0xffffff98
   16ccc:	bl	15ab4 <argp_failure@@Base>
   16cd0:	b	1622c <argp_failure@@Base+0x778>
   16cd4:	mov	r1, #1
   16cd8:	mov	r0, r7
   16cdc:	bl	19a08 <argp_parse@@Base+0x233c>
   16ce0:	cmp	r0, #0
   16ce4:	beq	167d4 <argp_failure@@Base+0xd20>
   16ce8:	ldr	r3, [r7, #28]
   16cec:	b	16c2c <argp_failure@@Base+0x1178>
   16cf0:	mov	r1, #1
   16cf4:	mov	r0, r7
   16cf8:	bl	19a08 <argp_parse@@Base+0x233c>
   16cfc:	cmp	r0, #0
   16d00:	ldrne	r3, [r7, #28]
   16d04:	bne	1660c <argp_failure@@Base+0xb58>
   16d08:	b	1661c <argp_failure@@Base+0xb68>
   16d0c:	ldrb	r2, [sl, #14]
   16d10:	cmp	r2, #0
   16d14:	bne	1696c <argp_failure@@Base+0xeb8>
   16d18:	ldr	r3, [fp, #-120]	; 0xffffff88
   16d1c:	b	16bd4 <argp_failure@@Base+0x1120>
   16d20:	mov	r1, #1
   16d24:	mov	r0, r7
   16d28:	bl	19a08 <argp_parse@@Base+0x233c>
   16d2c:	cmp	r0, #0
   16d30:	ldrne	r3, [r7, #28]
   16d34:	bne	162d4 <argp_failure@@Base+0x820>
   16d38:	b	162e4 <argp_failure@@Base+0x830>
   16d3c:	ldrb	r3, [r4, #1]
   16d40:	add	r4, r4, #1
   16d44:	lsl	r3, r3, #1
   16d48:	ldrh	r3, [r1, r3]
   16d4c:	tst	r3, #8192	; 0x2000
   16d50:	beq	16918 <argp_failure@@Base+0xe64>
   16d54:	ldrb	r3, [r4, #1]!
   16d58:	lsl	r3, r3, #1
   16d5c:	ldrh	r3, [r1, r3]
   16d60:	tst	r3, #8192	; 0x2000
   16d64:	bne	16d54 <argp_failure@@Base+0x12a0>
   16d68:	b	16918 <argp_failure@@Base+0xe64>
   16d6c:	mov	r2, #10
   16d70:	mov	r1, #0
   16d74:	mov	r0, r4
   16d78:	bl	111e4 <strtol@plt>
   16d7c:	ldrb	r3, [r4]
   16d80:	ldr	r2, [r7]
   16d84:	lsl	r3, r3, #1
   16d88:	ldrh	r7, [r2, r3]
   16d8c:	str	r0, [fp, #-112]	; 0xffffff90
   16d90:	tst	r7, #2048	; 0x800
   16d94:	beq	16dac <argp_failure@@Base+0x12f8>
   16d98:	ldrb	r3, [r4, #1]!
   16d9c:	lsl	r3, r3, #1
   16da0:	ldrh	r7, [r2, r3]
   16da4:	tst	r7, #2048	; 0x800
   16da8:	bne	16d98 <argp_failure@@Base+0x12e4>
   16dac:	ands	r7, r7, #8192	; 0x2000
   16db0:	beq	16928 <argp_failure@@Base+0xe74>
   16db4:	ldrb	r3, [r4, #1]!
   16db8:	lsl	r3, r3, #1
   16dbc:	ldrh	r7, [r2, r3]
   16dc0:	ands	r7, r7, #8192	; 0x2000
   16dc4:	bne	16db4 <argp_failure@@Base+0x1300>
   16dc8:	b	16928 <argp_failure@@Base+0xe74>
   16dcc:	mov	r3, sl
   16dd0:	mov	r4, r5
   16dd4:	b	168f8 <argp_failure@@Base+0xe44>
   16dd8:	ldr	r5, [fp, #-112]	; 0xffffff90
   16ddc:	movw	r4, #45148	; 0xb05c
   16de0:	movt	r4, #1
   16de4:	ldr	r3, [r7, #28]
   16de8:	ldr	r2, [r7, #32]
   16dec:	cmp	r3, r2
   16df0:	bcc	16e0c <argp_failure@@Base+0x1358>
   16df4:	mov	r1, #1
   16df8:	mov	r0, r7
   16dfc:	bl	19a08 <argp_parse@@Base+0x233c>
   16e00:	cmp	r0, #0
   16e04:	beq	16e1c <argp_failure@@Base+0x1368>
   16e08:	ldr	r3, [r7, #28]
   16e0c:	add	r1, r3, #1
   16e10:	mov	r2, #10
   16e14:	str	r1, [r7, #28]
   16e18:	strb	r2, [r3]
   16e1c:	mov	r0, r4
   16e20:	bl	113b8 <strlen@plt>
   16e24:	subs	r6, r0, #0
   16e28:	ldr	r0, [r7, #28]
   16e2c:	ldr	r3, [r7, #32]
   16e30:	bne	16e78 <argp_failure@@Base+0x13c4>
   16e34:	cmp	r0, r3
   16e38:	bcc	16e54 <argp_failure@@Base+0x13a0>
   16e3c:	mov	r1, #1
   16e40:	mov	r0, r7
   16e44:	bl	19a08 <argp_parse@@Base+0x233c>
   16e48:	cmp	r0, #0
   16e4c:	beq	160f4 <argp_failure@@Base+0x640>
   16e50:	ldr	r0, [r7, #28]
   16e54:	add	r2, r0, #1
   16e58:	mov	r3, #10
   16e5c:	str	r2, [r7, #28]
   16e60:	strb	r3, [r0]
   16e64:	b	160f4 <argp_failure@@Base+0x640>
   16e68:	movw	r4, #45148	; 0xb05c
   16e6c:	movt	r4, #1
   16e70:	ldr	r5, [fp, #-104]	; 0xffffff98
   16e74:	b	16de4 <argp_failure@@Base+0x1330>
   16e78:	add	r2, r0, r6
   16e7c:	cmp	r3, r2
   16e80:	bcs	16ea0 <argp_failure@@Base+0x13ec>
   16e84:	mov	r1, r6
   16e88:	mov	r0, r7
   16e8c:	bl	19a08 <argp_parse@@Base+0x233c>
   16e90:	cmp	r0, #0
   16e94:	ldr	r0, [r7, #28]
   16e98:	ldreq	r3, [r7, #32]
   16e9c:	beq	16e34 <argp_failure@@Base+0x1380>
   16ea0:	mov	r2, r6
   16ea4:	mov	r1, r4
   16ea8:	bl	11268 <memcpy@plt>
   16eac:	ldr	r0, [r7, #28]
   16eb0:	ldr	r3, [r7, #32]
   16eb4:	add	r0, r0, r6
   16eb8:	str	r0, [r7, #28]
   16ebc:	b	16e34 <argp_failure@@Base+0x1380>
   16ec0:	mov	r8, sl
   16ec4:	b	166a8 <argp_failure@@Base+0xbf4>
   16ec8:	andeq	sl, r1, ip, lsr #30
   16ecc:	muleq	r1, ip, lr

00016ed0 <argp_help@@Base>:
   16ed0:	push	{lr}		; (str lr, [sp, #-4]!)
   16ed4:	sub	sp, sp, #12
   16ed8:	str	r3, [sp]
   16edc:	mov	r3, r2
   16ee0:	mov	r2, r1
   16ee4:	mov	r1, #0
   16ee8:	bl	15cd0 <argp_failure@@Base+0x21c>
   16eec:	add	sp, sp, #12
   16ef0:	pop	{pc}		; (ldr pc, [sp], #4)

00016ef4 <argp_state_help@@Base>:
   16ef4:	strd	r4, [sp, #-12]!
   16ef8:	subs	r4, r0, #0
   16efc:	mov	r5, r2
   16f00:	str	lr, [sp, #8]
   16f04:	sub	sp, sp, #12
   16f08:	beq	16f78 <argp_state_help@@Base+0x84>
   16f0c:	ldr	r3, [r4, #16]
   16f10:	adds	r2, r1, #0
   16f14:	movne	r2, #1
   16f18:	eor	r0, r3, #2
   16f1c:	ands	r2, r2, r0, lsr #1
   16f20:	bne	16f34 <argp_state_help@@Base+0x40>
   16f24:	add	sp, sp, #12
   16f28:	ldrd	r4, [sp]
   16f2c:	add	sp, sp, #8
   16f30:	pop	{pc}		; (ldr pc, [sp], #4)
   16f34:	ldr	r0, [r4, #40]	; 0x28
   16f38:	tst	r3, #64	; 0x40
   16f3c:	mov	r2, r1
   16f40:	orrne	r5, r5, #128	; 0x80
   16f44:	mov	r1, r4
   16f48:	mov	r3, r5
   16f4c:	str	r0, [sp]
   16f50:	ldr	r0, [r4]
   16f54:	bl	15cd0 <argp_failure@@Base+0x21c>
   16f58:	ldr	r3, [r4, #16]
   16f5c:	tst	r3, #32
   16f60:	bne	16f24 <argp_state_help@@Base+0x30>
   16f64:	ands	r0, r5, #256	; 0x100
   16f68:	bne	16fa4 <argp_state_help@@Base+0xb0>
   16f6c:	tst	r5, #512	; 0x200
   16f70:	beq	16f24 <argp_state_help@@Base+0x30>
   16f74:	bl	113a0 <exit@plt>
   16f78:	cmp	r1, #0
   16f7c:	beq	16f24 <argp_state_help@@Base+0x30>
   16f80:	movw	r3, #50248	; 0xc448
   16f84:	movt	r3, #2
   16f88:	ldr	ip, [r3]
   16f8c:	mov	r2, r1
   16f90:	mov	r3, r5
   16f94:	mov	r1, r4
   16f98:	str	ip, [sp]
   16f9c:	bl	15cd0 <argp_failure@@Base+0x21c>
   16fa0:	b	16f64 <argp_state_help@@Base+0x70>
   16fa4:	movw	r3, #50224	; 0xc430
   16fa8:	movt	r3, #2
   16fac:	ldr	r0, [r3]
   16fb0:	bl	113a0 <exit@plt>

00016fb4 <argp_error@@Base>:
   16fb4:	push	{r1, r2, r3}
   16fb8:	strd	r4, [sp, #-12]!
   16fbc:	subs	r5, r0, #0
   16fc0:	str	lr, [sp, #8]
   16fc4:	sub	sp, sp, #8
   16fc8:	beq	170a0 <argp_error@@Base+0xec>
   16fcc:	ldr	r3, [r5, #16]
   16fd0:	tst	r3, #2
   16fd4:	bne	17088 <argp_error@@Base+0xd4>
   16fd8:	ldr	r4, [r5, #44]	; 0x2c
   16fdc:	cmp	r4, #0
   16fe0:	beq	17088 <argp_error@@Base+0xd4>
   16fe4:	mov	r0, r4
   16fe8:	bl	114b4 <flockfile@plt>
   16fec:	ldr	r0, [r5, #40]	; 0x28
   16ff0:	add	r3, sp, #24
   16ff4:	str	r3, [sp, #4]
   16ff8:	mov	r1, r4
   16ffc:	bl	111cc <fputs_unlocked@plt>
   17000:	ldr	r3, [r4, #20]
   17004:	ldr	r2, [r4, #24]
   17008:	cmp	r3, r2
   1700c:	addcc	r1, r3, #1
   17010:	movcc	r2, #58	; 0x3a
   17014:	strcc	r1, [r4, #20]
   17018:	strbcc	r2, [r3]
   1701c:	bcs	170e4 <argp_error@@Base+0x130>
   17020:	ldr	r3, [r4, #20]
   17024:	ldr	r2, [r4, #24]
   17028:	cmp	r3, r2
   1702c:	addcc	r1, r3, #1
   17030:	movcc	r2, #32
   17034:	strcc	r1, [r4, #20]
   17038:	strbcc	r2, [r3]
   1703c:	bcs	170f4 <argp_error@@Base+0x140>
   17040:	mov	r0, r4
   17044:	ldr	r2, [sp, #4]
   17048:	ldr	r1, [sp, #20]
   1704c:	bl	11490 <vfprintf@plt>
   17050:	ldr	r3, [r4, #20]
   17054:	ldr	r2, [r4, #24]
   17058:	cmp	r3, r2
   1705c:	addcc	r1, r3, #1
   17060:	movcc	r2, #10
   17064:	strcc	r1, [r4, #20]
   17068:	strbcc	r2, [r3]
   1706c:	bcs	170d4 <argp_error@@Base+0x120>
   17070:	mov	r0, r5
   17074:	mov	r2, #260	; 0x104
   17078:	mov	r1, r4
   1707c:	bl	16ef4 <argp_state_help@@Base>
   17080:	mov	r0, r4
   17084:	bl	112c8 <funlockfile@plt>
   17088:	add	sp, sp, #8
   1708c:	ldrd	r4, [sp]
   17090:	ldr	lr, [sp, #8]
   17094:	add	sp, sp, #12
   17098:	add	sp, sp, #12
   1709c:	bx	lr
   170a0:	movw	r3, #50256	; 0xc450
   170a4:	movt	r3, #2
   170a8:	ldr	r4, [r3]
   170ac:	cmp	r4, #0
   170b0:	beq	17088 <argp_error@@Base+0xd4>
   170b4:	mov	r0, r4
   170b8:	bl	114b4 <flockfile@plt>
   170bc:	add	r2, sp, #24
   170c0:	movw	r3, #50248	; 0xc448
   170c4:	movt	r3, #2
   170c8:	str	r2, [sp, #4]
   170cc:	ldr	r0, [r3]
   170d0:	b	16ff8 <argp_error@@Base+0x44>
   170d4:	mov	r1, #10
   170d8:	mov	r0, r4
   170dc:	bl	1146c <__overflow@plt>
   170e0:	b	17070 <argp_error@@Base+0xbc>
   170e4:	mov	r1, #58	; 0x3a
   170e8:	mov	r0, r4
   170ec:	bl	1146c <__overflow@plt>
   170f0:	b	17020 <argp_error@@Base+0x6c>
   170f4:	mov	r1, #32
   170f8:	mov	r0, r4
   170fc:	bl	1146c <__overflow@plt>
   17100:	b	17040 <argp_error@@Base+0x8c>
   17104:	ldr	r3, [r0]
   17108:	strd	r4, [sp, #-16]!
   1710c:	ldr	r5, [r0, #16]
   17110:	str	r6, [sp, #8]
   17114:	str	lr, [sp, #12]
   17118:	cmp	r3, #0
   1711c:	beq	171c8 <argp_error@@Base+0x214>
   17120:	ldr	r0, [r1, #8]
   17124:	mov	r2, #0
   17128:	add	r0, r0, #1
   1712c:	str	r0, [r1, #8]
   17130:	b	17138 <argp_error@@Base+0x184>
   17134:	add	r2, r2, #1
   17138:	add	r3, r3, #24
   1713c:	ldr	r0, [r3, #-20]	; 0xffffffec
   17140:	cmp	r0, #0
   17144:	bne	17134 <argp_error@@Base+0x180>
   17148:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1714c:	cmp	r0, #0
   17150:	bne	17134 <argp_error@@Base+0x180>
   17154:	ldr	r0, [r3, #-8]
   17158:	cmp	r0, #0
   1715c:	bne	17134 <argp_error@@Base+0x180>
   17160:	ldr	r0, [r3, #-4]
   17164:	cmp	r0, #0
   17168:	bne	17134 <argp_error@@Base+0x180>
   1716c:	ldm	r1, {r0, r3}
   17170:	add	ip, r2, r2, lsl #1
   17174:	add	r2, r3, r2
   17178:	add	r0, r0, ip
   1717c:	stm	r1, {r0, r2}
   17180:	cmp	r5, #0
   17184:	beq	171b8 <argp_error@@Base+0x204>
   17188:	ldr	r0, [r5]
   1718c:	cmp	r0, #0
   17190:	beq	171b8 <argp_error@@Base+0x204>
   17194:	mov	r4, r1
   17198:	mov	r1, r4
   1719c:	bl	17104 <argp_error@@Base+0x150>
   171a0:	ldr	r3, [r4, #12]
   171a4:	ldr	r0, [r5, #16]!
   171a8:	add	r3, r3, #1
   171ac:	cmp	r0, #0
   171b0:	str	r3, [r4, #12]
   171b4:	bne	17198 <argp_error@@Base+0x1e4>
   171b8:	ldrd	r4, [sp]
   171bc:	ldr	r6, [sp, #8]
   171c0:	add	sp, sp, #12
   171c4:	pop	{pc}		; (ldr pc, [sp], #4)
   171c8:	ldr	r3, [r0, #4]
   171cc:	cmp	r3, #0
   171d0:	beq	17180 <argp_error@@Base+0x1cc>
   171d4:	ldr	r3, [r1, #8]
   171d8:	add	r3, r3, #1
   171dc:	str	r3, [r1, #8]
   171e0:	b	17180 <argp_error@@Base+0x1cc>
   171e4:	cmp	r0, #86	; 0x56
   171e8:	beq	171f4 <argp_error@@Base+0x240>
   171ec:	mov	r0, #7
   171f0:	bx	lr
   171f4:	movw	r3, #50444	; 0xc50c
   171f8:	movt	r3, #2
   171fc:	str	r4, [sp, #-8]!
   17200:	ldr	r3, [r3]
   17204:	mov	r4, r2
   17208:	str	lr, [sp, #4]
   1720c:	cmp	r3, #0
   17210:	beq	17240 <argp_error@@Base+0x28c>
   17214:	mov	r1, r2
   17218:	ldr	r0, [r2, #48]	; 0x30
   1721c:	blx	r3
   17220:	ldr	r0, [r4, #16]
   17224:	ands	r0, r0, #32
   17228:	beq	1723c <argp_error@@Base+0x288>
   1722c:	ldr	r4, [sp]
   17230:	add	sp, sp, #4
   17234:	mov	r0, #0
   17238:	pop	{pc}		; (ldr pc, [sp], #4)
   1723c:	bl	113a0 <exit@plt>
   17240:	movw	r3, #53184	; 0xcfc0
   17244:	movt	r3, #2
   17248:	ldr	r2, [r3]
   1724c:	cmp	r2, #0
   17250:	beq	17268 <argp_error@@Base+0x2b4>
   17254:	movw	r1, #46300	; 0xb4dc
   17258:	movt	r1, #1
   1725c:	ldr	r0, [r4, #48]	; 0x30
   17260:	bl	113d0 <fprintf@plt>
   17264:	b	17220 <argp_error@@Base+0x26c>
   17268:	movw	r2, #45904	; 0xb350
   1726c:	movt	r2, #1
   17270:	movw	r1, #43288	; 0xa918
   17274:	movt	r1, #1
   17278:	mov	r0, r4
   1727c:	bl	16fb4 <argp_error@@Base>
   17280:	b	17220 <argp_error@@Base+0x26c>
   17284:	cmn	r0, #3
   17288:	str	r4, [sp, #-8]!
   1728c:	mov	r4, r2
   17290:	str	lr, [sp, #4]
   17294:	sub	sp, sp, #8
   17298:	beq	17398 <argp_error@@Base+0x3e4>
   1729c:	ble	172d4 <argp_error@@Base+0x320>
   172a0:	cmn	r0, #2
   172a4:	beq	1734c <argp_error@@Base+0x398>
   172a8:	cmp	r0, #63	; 0x3f
   172ac:	bne	17338 <argp_error@@Base+0x384>
   172b0:	mov	r0, r4
   172b4:	movw	r2, #634	; 0x27a
   172b8:	ldr	r1, [r4, #48]	; 0x30
   172bc:	bl	16ef4 <argp_state_help@@Base>
   172c0:	mov	r0, #0
   172c4:	add	sp, sp, #8
   172c8:	ldr	r4, [sp]
   172cc:	add	sp, sp, #4
   172d0:	pop	{pc}		; (ldr pc, [sp], #4)
   172d4:	cmn	r0, #4
   172d8:	bne	17338 <argp_error@@Base+0x384>
   172dc:	cmp	r1, #0
   172e0:	movw	r0, #45940	; 0xb374
   172e4:	movt	r0, #1
   172e8:	mov	r2, #10
   172ec:	movne	r0, r1
   172f0:	movw	r4, #50440	; 0xc508
   172f4:	movt	r4, #2
   172f8:	mov	r1, #0
   172fc:	bl	111e4 <strtol@plt>
   17300:	str	r0, [r4]
   17304:	b	17310 <argp_error@@Base+0x35c>
   17308:	mov	r0, #1
   1730c:	bl	1128c <sleep@plt>
   17310:	ldr	r3, [r4]
   17314:	sub	r2, r3, #1
   17318:	cmp	r3, #0
   1731c:	str	r2, [r4]
   17320:	bgt	17308 <argp_error@@Base+0x354>
   17324:	mov	r0, #0
   17328:	add	sp, sp, #8
   1732c:	ldr	r4, [sp]
   17330:	add	sp, sp, #4
   17334:	pop	{pc}		; (ldr pc, [sp], #4)
   17338:	mov	r0, #7
   1733c:	add	sp, sp, #8
   17340:	ldr	r4, [sp]
   17344:	add	sp, sp, #4
   17348:	pop	{pc}		; (ldr pc, [sp], #4)
   1734c:	movw	r3, #50252	; 0xc44c
   17350:	movt	r3, #2
   17354:	str	r1, [sp, #4]
   17358:	mov	r0, r1
   1735c:	str	r1, [r3]
   17360:	bl	185f8 <argp_parse@@Base+0xf2c>
   17364:	ldr	r3, [r4, #16]
   17368:	movw	r2, #50248	; 0xc448
   1736c:	movt	r2, #2
   17370:	str	r0, [r4, #40]	; 0x28
   17374:	str	r0, [r2]
   17378:	ldr	r1, [sp, #4]
   1737c:	and	r3, r3, #3
   17380:	cmp	r3, #1
   17384:	bne	17324 <argp_error@@Base+0x370>
   17388:	ldr	r3, [r4, #8]
   1738c:	mov	r0, #0
   17390:	str	r1, [r3]
   17394:	b	172c4 <argp_error@@Base+0x310>
   17398:	ldr	r1, [r4, #48]	; 0x30
   1739c:	mov	r0, r4
   173a0:	movw	r2, #513	; 0x201
   173a4:	bl	16ef4 <argp_state_help@@Base>
   173a8:	mov	r0, #0
   173ac:	add	sp, sp, #8
   173b0:	ldr	r4, [sp]
   173b4:	add	sp, sp, #4
   173b8:	pop	{pc}		; (ldr pc, [sp], #4)
   173bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   173c0:	strd	r6, [sp, #8]
   173c4:	strd	r8, [sp, #16]
   173c8:	strd	sl, [sp, #24]
   173cc:	str	lr, [sp, #32]
   173d0:	sub	sp, sp, #44	; 0x2c
   173d4:	ldr	fp, [r0]
   173d8:	str	r3, [sp, #16]
   173dc:	ldr	r3, [r0, #16]
   173e0:	ldr	r7, [sp, #80]	; 0x50
   173e4:	cmp	fp, #0
   173e8:	str	r3, [sp, #24]
   173ec:	strd	r0, [sp, #28]
   173f0:	str	r2, [sp, #36]	; 0x24
   173f4:	beq	176a0 <argp_error@@Base+0x6ec>
   173f8:	ldr	r9, [r7, #4]
   173fc:	movw	r3, #36409	; 0x8e39
   17400:	movt	r3, #14563	; 0x38e3
   17404:	mov	r4, fp
   17408:	str	r3, [sp, #20]
   1740c:	ldr	r6, [r4, #4]
   17410:	cmp	r6, #0
   17414:	bne	17424 <argp_error@@Base+0x470>
   17418:	ldr	r3, [r4]
   1741c:	cmp	r3, #0
   17420:	beq	17598 <argp_error@@Base+0x5e4>
   17424:	ldr	r3, [r4, #12]
   17428:	tst	r3, #4
   1742c:	moveq	r5, r3
   17430:	moveq	fp, r4
   17434:	ldrne	r5, [fp, #12]
   17438:	ands	r5, r5, #8
   1743c:	bne	17580 <argp_error@@Base+0x5cc>
   17440:	tst	r3, #8
   17444:	bne	174c4 <argp_error@@Base+0x510>
   17448:	sub	r3, r6, #1
   1744c:	cmp	r3, #254	; 0xfe
   17450:	bhi	174c4 <argp_error@@Base+0x510>
   17454:	bl	11394 <__ctype_b_loc@plt>
   17458:	ldr	r1, [r0]
   1745c:	lsl	r3, r6, #1
   17460:	ldrh	r3, [r1, r3]
   17464:	tst	r3, #16384	; 0x4000
   17468:	beq	174c4 <argp_error@@Base+0x510>
   1746c:	add	r3, r9, #1
   17470:	str	r3, [r7, #4]
   17474:	strb	r6, [r9]
   17478:	ldr	r3, [fp, #8]
   1747c:	cmp	r3, #0
   17480:	beq	174b4 <argp_error@@Base+0x500>
   17484:	ldr	r3, [r7, #4]
   17488:	mov	r2, #58	; 0x3a
   1748c:	add	r1, r3, #1
   17490:	str	r1, [r7, #4]
   17494:	strb	r2, [r3]
   17498:	ldr	r3, [fp, #12]
   1749c:	tst	r3, #1
   174a0:	beq	174b4 <argp_error@@Base+0x500>
   174a4:	ldr	r3, [r7, #4]
   174a8:	add	r1, r3, #1
   174ac:	str	r1, [r7, #4]
   174b0:	strb	r2, [r3]
   174b4:	ldr	r3, [r7, #4]
   174b8:	mov	r2, #0
   174bc:	strb	r2, [r3]
   174c0:	ldr	r9, [r7, #4]
   174c4:	ldr	sl, [r4]
   174c8:	cmp	sl, #0
   174cc:	beq	17580 <argp_error@@Base+0x5cc>
   174d0:	ldr	r3, [r7]
   174d4:	ldr	r8, [r3, #8]
   174d8:	str	r3, [sp, #12]
   174dc:	ldr	r0, [r8]
   174e0:	cmp	r0, #0
   174e4:	beq	17508 <argp_error@@Base+0x554>
   174e8:	mov	r6, r8
   174ec:	mov	r1, sl
   174f0:	bl	111d8 <strcmp@plt>
   174f4:	cmp	r0, #0
   174f8:	beq	17588 <argp_error@@Base+0x5d4>
   174fc:	ldr	r0, [r6, #16]!
   17500:	cmp	r0, #0
   17504:	bne	174ec <argp_error@@Base+0x538>
   17508:	ldr	r0, [fp, #8]
   1750c:	ldr	r1, [r7, #8]
   17510:	cmp	r0, #0
   17514:	str	sl, [r1]
   17518:	beq	1752c <argp_error@@Base+0x578>
   1751c:	ldr	r3, [fp, #12]
   17520:	tst	r3, #1
   17524:	movne	r5, #2
   17528:	moveq	r5, #1
   1752c:	str	r5, [r1, #4]
   17530:	mov	r3, #0
   17534:	add	ip, r1, #16
   17538:	ldr	r0, [r4, #4]
   1753c:	str	r3, [r1, #8]
   17540:	ldr	r2, [sp, #16]
   17544:	cmp	r0, r3
   17548:	ldr	r3, [sp, #12]
   1754c:	ldreq	r0, [fp, #4]
   17550:	ldr	r3, [r3, #48]	; 0x30
   17554:	bic	r0, r0, #-16777216	; 0xff000000
   17558:	sub	r3, r2, r3
   1755c:	ldr	r2, [sp, #20]
   17560:	asr	r3, r3, #2
   17564:	mul	r3, r2, r3
   17568:	add	r3, r3, #1
   1756c:	add	r3, r0, r3, lsl #24
   17570:	str	r3, [r1, #12]
   17574:	mov	r3, #0
   17578:	str	ip, [r7, #8]
   1757c:	str	r3, [r1, #16]
   17580:	add	r4, r4, #24
   17584:	b	1740c <argp_error@@Base+0x458>
   17588:	sub	r6, r6, r8
   1758c:	cmp	r6, #0
   17590:	bge	17580 <argp_error@@Base+0x5cc>
   17594:	b	17508 <argp_error@@Base+0x554>
   17598:	ldr	r3, [r4, #16]
   1759c:	cmp	r3, #0
   175a0:	bne	17424 <argp_error@@Base+0x470>
   175a4:	ldr	r3, [r4, #20]
   175a8:	cmp	r3, #0
   175ac:	bne	17424 <argp_error@@Base+0x470>
   175b0:	ldr	r3, [sp, #28]
   175b4:	ldr	r2, [r3, #4]
   175b8:	mov	r3, #0
   175bc:	ldr	r1, [sp, #16]
   175c0:	ldr	r0, [sp, #24]
   175c4:	str	r2, [r1]
   175c8:	mov	r2, r1
   175cc:	ldr	r1, [sp, #28]
   175d0:	cmp	r0, r3
   175d4:	stmib	r2, {r1, r9}
   175d8:	ldr	r1, [sp, #32]
   175dc:	str	r3, [r2, #12]
   175e0:	str	r1, [r2, #16]
   175e4:	ldr	r1, [sp, #36]	; 0x24
   175e8:	str	r3, [r2, #24]
   175ec:	str	r3, [r2, #28]
   175f0:	str	r3, [r2, #32]
   175f4:	str	r1, [r2, #20]
   175f8:	beq	17634 <argp_error@@Base+0x680>
   175fc:	ldr	r2, [r0]
   17600:	cmp	r2, r3
   17604:	beq	176c4 <argp_error@@Base+0x710>
   17608:	mov	r1, r0
   1760c:	add	r3, r3, #1
   17610:	ldr	r2, [r1, r3, lsl #4]
   17614:	cmp	r2, #0
   17618:	bne	1760c <argp_error@@Base+0x658>
   1761c:	lsl	r3, r3, #2
   17620:	ldr	r2, [r7, #12]
   17624:	ldr	r1, [sp, #16]
   17628:	add	r3, r2, r3
   1762c:	str	r2, [r1, #28]
   17630:	str	r3, [r7, #12]
   17634:	ldr	r3, [sp, #16]
   17638:	add	r0, r3, #36	; 0x24
   1763c:	ldr	r5, [sp, #24]
   17640:	cmp	r5, #0
   17644:	beq	17684 <argp_error@@Base+0x6d0>
   17648:	ldr	r1, [r5]
   1764c:	cmp	r1, #0
   17650:	beq	17684 <argp_error@@Base+0x6d0>
   17654:	ldr	r6, [sp, #16]
   17658:	mov	r2, #0
   1765c:	add	r4, r2, #1
   17660:	mov	r3, r0
   17664:	str	r7, [sp]
   17668:	mov	r0, r1
   1766c:	mov	r1, r6
   17670:	bl	173bc <argp_error@@Base+0x408>
   17674:	ldr	r1, [r5, r4, lsl #4]
   17678:	mov	r2, r4
   1767c:	cmp	r1, #0
   17680:	bne	1765c <argp_error@@Base+0x6a8>
   17684:	add	sp, sp, #44	; 0x2c
   17688:	ldrd	r4, [sp]
   1768c:	ldrd	r6, [sp, #8]
   17690:	ldrd	r8, [sp, #16]
   17694:	ldrd	sl, [sp, #24]
   17698:	add	sp, sp, #32
   1769c:	pop	{pc}		; (ldr pc, [sp], #4)
   176a0:	ldr	r3, [sp, #28]
   176a4:	ldr	r2, [r3, #4]
   176a8:	cmp	r2, #0
   176ac:	beq	176b8 <argp_error@@Base+0x704>
   176b0:	ldr	r9, [r7, #4]
   176b4:	b	175b8 <argp_error@@Base+0x604>
   176b8:	ldr	r0, [sp, #16]
   176bc:	str	r2, [sp, #16]
   176c0:	b	1763c <argp_error@@Base+0x688>
   176c4:	mov	r3, r2
   176c8:	b	17620 <argp_error@@Base+0x66c>

000176cc <argp_parse@@Base>:
   176cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   176d0:	tst	r3, #1
   176d4:	mov	r5, r3
   176d8:	strd	r6, [sp, #8]
   176dc:	mov	r7, r0
   176e0:	strd	r8, [sp, #16]
   176e4:	strd	sl, [sp, #24]
   176e8:	add	fp, sp, #32
   176ec:	str	lr, [sp, #32]
   176f0:	sub	sp, sp, #236	; 0xec
   176f4:	str	r1, [fp, #-244]	; 0xffffff0c
   176f8:	str	r2, [fp, #-232]	; 0xffffff18
   176fc:	bne	17728 <argp_parse@@Base+0x5c>
   17700:	movw	r3, #50252	; 0xc44c
   17704:	movt	r3, #2
   17708:	ldr	r2, [r3]
   1770c:	cmp	r2, #0
   17710:	beq	1814c <argp_parse@@Base+0xa80>
   17714:	movw	r4, #50248	; 0xc448
   17718:	movt	r4, #2
   1771c:	ldr	r3, [r4]
   17720:	cmp	r3, #0
   17724:	beq	1815c <argp_parse@@Base+0xa90>
   17728:	ands	r3, r5, #4
   1772c:	moveq	r6, #1
   17730:	movne	r6, #0
   17734:	ands	ip, r5, #16
   17738:	str	r3, [fp, #-236]	; 0xffffff14
   1773c:	beq	17794 <argp_parse@@Base+0xc8>
   17740:	mov	r3, #0
   17744:	sub	r4, fp, #196	; 0xc4
   17748:	str	r6, [fp, #-228]	; 0xffffff1c
   1774c:	cmp	r7, r3
   17750:	str	r3, [fp, #-224]	; 0xffffff20
   17754:	str	r3, [fp, #-220]	; 0xffffff24
   17758:	str	r3, [fp, #-216]	; 0xffffff28
   1775c:	str	r3, [r4, #8]
   17760:	str	r3, [r4, #12]
   17764:	str	r3, [r4, #16]
   17768:	str	r3, [r4, #20]
   1776c:	str	r3, [r4, #24]
   17770:	str	r3, [r4, #28]
   17774:	str	r3, [r4, #32]
   17778:	bne	17844 <argp_parse@@Base+0x178>
   1777c:	mov	r3, #52	; 0x34
   17780:	mov	sl, #36	; 0x24
   17784:	mov	r9, r7
   17788:	str	r3, [fp, #-236]	; 0xffffff14
   1778c:	mov	r3, sl
   17790:	b	1787c <argp_parse@@Base+0x1b0>
   17794:	sub	sp, sp, #64	; 0x40
   17798:	mov	r1, ip
   1779c:	add	r3, sp, #8
   177a0:	sub	sp, sp, #32
   177a4:	add	r4, sp, #8
   177a8:	mov	r0, r3
   177ac:	mov	r2, #64	; 0x40
   177b0:	str	ip, [r4]
   177b4:	str	ip, [r4, #4]
   177b8:	str	ip, [r4, #8]
   177bc:	str	ip, [r4, #12]
   177c0:	str	r3, [r4, #16]
   177c4:	str	ip, [r4, #20]
   177c8:	str	ip, [r4, #24]
   177cc:	bl	1140c <memset@plt>
   177d0:	movw	r2, #53184	; 0xcfc0
   177d4:	movt	r2, #2
   177d8:	ldr	r1, [r2]
   177dc:	mov	r3, r0
   177e0:	cmp	r7, #0
   177e4:	movw	r2, #45624	; 0xb238
   177e8:	movt	r2, #1
   177ec:	strne	r7, [r3], #16
   177f0:	str	r2, [r3]
   177f4:	cmp	r1, #0
   177f8:	beq	182c4 <argp_parse@@Base+0xbf8>
   177fc:	ldr	r1, [pc, #3392]	; 18544 <argp_parse@@Base+0xe78>
   17800:	add	r2, r3, #32
   17804:	str	r1, [r3, #16]
   17808:	mov	r3, #0
   1780c:	mov	r7, r4
   17810:	str	r6, [fp, #-228]	; 0xffffff1c
   17814:	sub	r4, fp, #196	; 0xc4
   17818:	str	r3, [fp, #-224]	; 0xffffff20
   1781c:	str	r3, [fp, #-220]	; 0xffffff24
   17820:	str	r3, [fp, #-216]	; 0xffffff28
   17824:	str	r3, [r2]
   17828:	str	r3, [r4, #8]
   1782c:	str	r3, [r4, #12]
   17830:	str	r3, [r4, #16]
   17834:	str	r3, [r4, #20]
   17838:	str	r3, [r4, #24]
   1783c:	str	r3, [r4, #28]
   17840:	str	r3, [r4, #32]
   17844:	sub	r1, fp, #228	; 0xe4
   17848:	mov	r0, r7
   1784c:	bl	17104 <argp_error@@Base+0x150>
   17850:	ldr	r6, [fp, #-228]	; 0xffffff1c
   17854:	ldrd	r2, [fp, #-224]	; 0xffffff20
   17858:	ldr	r9, [fp, #-216]	; 0xffffff28
   1785c:	add	r3, r3, #1
   17860:	add	r2, r2, #1
   17864:	add	r3, r3, r3, lsl #3
   17868:	lsl	r9, r9, #2
   1786c:	lsl	r3, r3, #2
   17870:	add	sl, r9, r3
   17874:	add	r2, sl, r2, lsl #4
   17878:	str	r2, [fp, #-236]	; 0xffffff14
   1787c:	str	r3, [fp, #-240]	; 0xffffff10
   17880:	ldr	r3, [fp, #-236]	; 0xffffff14
   17884:	add	r0, r6, r3
   17888:	add	r0, r0, #1
   1788c:	bl	19270 <argp_parse@@Base+0x1ba4>
   17890:	cmp	r0, #0
   17894:	mov	r6, r0
   17898:	str	r0, [fp, #-40]	; 0xffffffd8
   1789c:	moveq	r5, #12
   178a0:	ldr	r3, [fp, #-240]	; 0xffffff10
   178a4:	beq	17dc4 <argp_parse@@Base+0x6f8>
   178a8:	mov	r2, r9
   178ac:	mov	r1, #1
   178b0:	ldrd	r8, [r4, #8]
   178b4:	add	ip, r0, sl
   178b8:	add	r3, r0, r3
   178bc:	str	r0, [fp, #-112]	; 0xffffff90
   178c0:	ldr	lr, [fp, #-236]	; 0xffffff14
   178c4:	str	r1, [fp, #-196]	; 0xffffff3c
   178c8:	str	r1, [fp, #-192]	; 0xffffff40
   178cc:	str	ip, [fp, #-240]	; 0xffffff10
   178d0:	strd	r8, [fp, #-140]	; 0xffffff74
   178d4:	ldrd	r8, [r4, #16]
   178d8:	add	sl, r0, lr
   178dc:	str	r3, [fp, #-104]	; 0xffffff98
   178e0:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   178e4:	strd	r8, [fp, #-252]	; 0xffffff04
   178e8:	ldrd	r8, [r4, #24]
   178ec:	str	sl, [fp, #-156]	; 0xffffff64
   178f0:	strd	r0, [fp, #-148]	; 0xffffff6c
   178f4:	mov	r0, r3
   178f8:	sub	r3, fp, #260	; 0x104
   178fc:	str	ip, [fp, #-152]	; 0xffffff68
   17900:	mov	r1, #0
   17904:	ldr	ip, [r4, #32]
   17908:	strd	r8, [r3]
   1790c:	ldrd	r8, [fp, #-252]	; 0xffffff04
   17910:	strd	r8, [fp, #-132]	; 0xffffff7c
   17914:	ldrd	r8, [r3]
   17918:	str	ip, [fp, #-116]	; 0xffffff8c
   1791c:	strd	r8, [fp, #-124]	; 0xffffff84
   17920:	bl	1140c <memset@plt>
   17924:	ldr	ip, [fp, #-240]	; 0xffffff10
   17928:	sub	r2, fp, #160	; 0xa0
   1792c:	tst	r5, #8
   17930:	str	r2, [fp, #-212]	; 0xffffff2c
   17934:	str	sl, [fp, #-208]	; 0xffffff30
   17938:	str	r0, [fp, #-200]	; 0xffffff38
   1793c:	str	ip, [fp, #-204]	; 0xffffff34
   17940:	bne	17de4 <argp_parse@@Base+0x718>
   17944:	ands	r3, r5, #4
   17948:	cmp	r3, #0
   1794c:	moveq	r3, sl
   17950:	beq	17964 <argp_parse@@Base+0x298>
   17954:	add	r3, sl, #1
   17958:	mov	r2, #43	; 0x2b
   1795c:	str	r3, [fp, #-208]	; 0xffffff30
   17960:	strb	r2, [sl]
   17964:	ldr	r2, [fp, #-204]	; 0xffffff34
   17968:	mov	r4, #0
   1796c:	cmp	r7, r4
   17970:	strb	r4, [r3]
   17974:	str	r4, [r2]
   17978:	str	r7, [fp, #-160]	; 0xffffff60
   1797c:	beq	17fcc <argp_parse@@Base+0x900>
   17980:	sub	ip, fp, #212	; 0xd4
   17984:	mov	r2, r4
   17988:	ldr	r3, [fp, #-112]	; 0xffffff90
   1798c:	mov	r1, r4
   17990:	mov	r0, r7
   17994:	str	ip, [sp]
   17998:	bl	173bc <argp_error@@Base+0x408>
   1799c:	movw	r1, #50256	; 0xc450
   179a0:	movt	r1, #2
   179a4:	ldr	r6, [fp, #-232]	; 0xffffff18
   179a8:	movw	r2, #50268	; 0xc45c
   179ac:	movt	r2, #2
   179b0:	str	r0, [fp, #-108]	; 0xffffff94
   179b4:	mov	lr, #1
   179b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   179bc:	ldr	ip, [r1]
   179c0:	str	lr, [fp, #-100]	; 0xffffff9c
   179c4:	ldr	r1, [fp, #-244]	; 0xffffff0c
   179c8:	cmp	r0, r3
   179cc:	mov	r0, #0
   179d0:	ldr	r2, [r2]
   179d4:	movls	r3, r6
   179d8:	ldr	lr, [fp, #-160]	; 0xffffff60
   179dc:	str	ip, [fp, #-52]	; 0xffffffcc
   179e0:	str	r1, [fp, #-92]	; 0xffffffa4
   179e4:	mov	r1, #0
   179e8:	str	r2, [fp, #-48]	; 0xffffffd0
   179ec:	sub	r2, fp, #160	; 0xa0
   179f0:	str	lr, [fp, #-96]	; 0xffffffa0
   179f4:	str	r6, [fp, #-88]	; 0xffffffa8
   179f8:	strd	r4, [fp, #-84]	; 0xffffffac
   179fc:	strd	r0, [fp, #-76]	; 0xffffffb4
   17a00:	strd	r0, [fp, #-68]	; 0xffffffbc
   17a04:	strd	r0, [fp, #-60]	; 0xffffffc4
   17a08:	str	r2, [fp, #-44]	; 0xffffffd4
   17a0c:	bls	17af4 <argp_parse@@Base+0x428>
   17a10:	mov	r6, #3
   17a14:	movt	r6, #256	; 0x100
   17a18:	ldr	r8, [fp, #-232]	; 0xffffff18
   17a1c:	add	r4, r3, #36	; 0x24
   17a20:	ldr	r2, [fp, #8]
   17a24:	str	r2, [r3, #24]
   17a28:	b	17a74 <argp_parse@@Base+0x3a8>
   17a2c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   17a30:	ldr	ip, [r4, #-4]
   17a34:	str	ip, [fp, #-60]	; 0xffffffc4
   17a38:	ldr	ip, [r4, #-12]
   17a3c:	str	ip, [fp, #-68]	; 0xffffffbc
   17a40:	ldr	ip, [r4, #-8]
   17a44:	str	lr, [fp, #-76]	; 0xffffffb4
   17a48:	str	ip, [fp, #-64]	; 0xffffffc0
   17a4c:	blx	r3
   17a50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17a54:	str	r3, [r4, #-4]
   17a58:	ldr	r3, [fp, #-108]	; 0xffffff94
   17a5c:	cmp	r4, r3
   17a60:	bcs	18080 <argp_parse@@Base+0x9b4>
   17a64:	cmp	r0, #7
   17a68:	cmpne	r0, #0
   17a6c:	bne	18070 <argp_parse@@Base+0x9a4>
   17a70:	add	r4, r4, #36	; 0x24
   17a74:	ldr	r3, [r4, #-20]	; 0xffffffec
   17a78:	mov	r1, #0
   17a7c:	sub	r2, fp, #96	; 0x60
   17a80:	mov	r0, r6
   17a84:	cmp	r3, r1
   17a88:	beq	17a9c <argp_parse@@Base+0x3d0>
   17a8c:	ldr	ip, [r4, #-16]
   17a90:	ldr	r3, [r3, #28]
   17a94:	ldr	r3, [r3, ip, lsl #2]
   17a98:	str	r3, [r4, #-12]
   17a9c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17aa0:	cmp	r3, #0
   17aa4:	bne	17a2c <argp_parse@@Base+0x360>
   17aa8:	ldr	r3, [r4, #-32]	; 0xffffffe0
   17aac:	ldr	r3, [r3, #16]
   17ab0:	cmp	r3, #0
   17ab4:	beq	17adc <argp_parse@@Base+0x410>
   17ab8:	ldr	r3, [r3]
   17abc:	cmp	r3, #0
   17ac0:	beq	17adc <argp_parse@@Base+0x410>
   17ac4:	ldr	ip, [r4, #-12]
   17ac8:	ldr	r3, [r4, #-8]
   17acc:	str	ip, [r3]
   17ad0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17ad4:	cmp	r3, #0
   17ad8:	bne	17a2c <argp_parse@@Base+0x360>
   17adc:	ldr	r3, [fp, #-108]	; 0xffffff94
   17ae0:	cmp	r4, r3
   17ae4:	bcc	17a70 <argp_parse@@Base+0x3a4>
   17ae8:	str	r8, [fp, #-232]	; 0xffffff18
   17aec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17af0:	ldr	r5, [fp, #-80]	; 0xffffffb0
   17af4:	tst	r5, #2
   17af8:	beq	18040 <argp_parse@@Base+0x974>
   17afc:	mov	r2, #0
   17b00:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17b04:	tst	r5, #1
   17b08:	subne	r3, r3, #4
   17b0c:	str	r2, [fp, #-144]	; 0xffffff70
   17b10:	ldr	r2, [fp, #-232]	; 0xffffff18
   17b14:	strne	r3, [fp, #-88]	; 0xffffffa8
   17b18:	addne	r4, r4, #1
   17b1c:	strne	r4, [fp, #-92]	; 0xffffffa4
   17b20:	cmp	r2, r3
   17b24:	beq	18058 <argp_parse@@Base+0x98c>
   17b28:	movw	r3, #50248	; 0xc448
   17b2c:	movt	r3, #2
   17b30:	ldr	r3, [r3]
   17b34:	str	r3, [fp, #-56]	; 0xffffffc8
   17b38:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17b3c:	movw	r3, #45952	; 0xb380
   17b40:	movt	r3, #1
   17b44:	mov	r9, #6
   17b48:	movt	r9, #256	; 0x100
   17b4c:	ldr	r7, [fp, #-84]	; 0xffffffac
   17b50:	mov	r0, r4
   17b54:	str	r3, [fp, #-232]	; 0xffffff18
   17b58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17b5c:	cmp	r3, #0
   17b60:	beq	17c48 <argp_parse@@Base+0x57c>
   17b64:	cmp	r3, r7
   17b68:	movgt	r3, #0
   17b6c:	strgt	r3, [fp, #-72]	; 0xffffffb8
   17b70:	bgt	17c48 <argp_parse@@Base+0x57c>
   17b74:	cmp	r0, r7
   17b78:	ble	17e90 <argp_parse@@Base+0x7c4>
   17b7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17b80:	tst	r3, #4
   17b84:	bne	180a4 <argp_parse@@Base+0x9d8>
   17b88:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17b8c:	ldr	sl, [r3, r7, lsl #2]
   17b90:	str	sl, [fp, #-136]	; 0xffffff78
   17b94:	ldr	r8, [fp, #-112]	; 0xffffff90
   17b98:	str	r7, [fp, #-84]	; 0xffffffac
   17b9c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17ba0:	cmp	r8, ip
   17ba4:	bcs	17e88 <argp_parse@@Base+0x7bc>
   17ba8:	mov	lr, r7
   17bac:	add	r4, r8, #36	; 0x24
   17bb0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17bb4:	mov	r0, #0
   17bb8:	add	r6, lr, #1
   17bbc:	sub	r2, fp, #96	; 0x60
   17bc0:	mov	r1, sl
   17bc4:	sub	r5, r4, #36	; 0x24
   17bc8:	mov	r8, r4
   17bcc:	str	r6, [fp, #-84]	; 0xffffffac
   17bd0:	cmp	r3, r0
   17bd4:	beq	17e74 <argp_parse@@Base+0x7a8>
   17bd8:	ldr	lr, [r4, #-24]	; 0xffffffe8
   17bdc:	ldr	ip, [r4, #-4]
   17be0:	str	ip, [fp, #-60]	; 0xffffffc4
   17be4:	ldr	ip, [r4, #-12]
   17be8:	str	ip, [fp, #-68]	; 0xffffffbc
   17bec:	ldr	ip, [r4, #-8]
   17bf0:	str	lr, [fp, #-76]	; 0xffffffb4
   17bf4:	str	ip, [fp, #-64]	; 0xffffffc0
   17bf8:	blx	r3
   17bfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17c00:	cmp	r0, #7
   17c04:	str	r3, [r4, #-4]
   17c08:	beq	17dfc <argp_parse@@Base+0x730>
   17c0c:	cmp	r0, #0
   17c10:	bne	17f44 <argp_parse@@Base+0x878>
   17c14:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17c18:	ldr	r3, [fp, #-84]	; 0xffffffac
   17c1c:	cmp	r7, r3
   17c20:	bge	17f5c <argp_parse@@Base+0x890>
   17c24:	ldr	r1, [r4, #-24]	; 0xffffffe8
   17c28:	sub	ip, r3, r7
   17c2c:	mov	r7, r3
   17c30:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17c34:	add	r3, r1, ip
   17c38:	str	r3, [r4, #-24]	; 0xffffffe8
   17c3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17c40:	cmp	r3, #0
   17c44:	bne	17b64 <argp_parse@@Base+0x498>
   17c48:	cmp	r2, #0
   17c4c:	beq	17b74 <argp_parse@@Base+0x4a8>
   17c50:	mvn	r2, #0
   17c54:	str	r7, [fp, #-148]	; 0xffffff6c
   17c58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17c5c:	str	r2, [fp, #-140]	; 0xffffff74
   17c60:	ldr	r2, [fp, #-156]	; 0xffffff64
   17c64:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17c68:	ands	ip, r3, #64	; 0x40
   17c6c:	ldr	r3, [fp, #-152]	; 0xffffff68
   17c70:	beq	17f70 <argp_parse@@Base+0x8a4>
   17c74:	mov	ip, #0
   17c78:	sub	lr, fp, #148	; 0x94
   17c7c:	stm	sp, {ip, lr}
   17c80:	bl	187a0 <argp_parse@@Base+0x10d4>
   17c84:	ldr	r7, [fp, #-148]	; 0xffffff6c
   17c88:	mov	r4, r0
   17c8c:	cmn	r4, #1
   17c90:	str	r7, [fp, #-84]	; 0xffffffac
   17c94:	beq	17f94 <argp_parse@@Base+0x8c8>
   17c98:	cmp	r4, #63	; 0x3f
   17c9c:	beq	17cb4 <argp_parse@@Base+0x5e8>
   17ca0:	cmp	r4, #1
   17ca4:	bne	18238 <argp_parse@@Base+0xb6c>
   17ca8:	sub	r7, r7, #1
   17cac:	ldr	sl, [fp, #-136]	; 0xffffff78
   17cb0:	b	17b94 <argp_parse@@Base+0x4c8>
   17cb4:	ldr	r3, [fp, #-140]	; 0xffffff74
   17cb8:	cmn	r3, #1
   17cbc:	beq	18170 <argp_parse@@Base+0xaa4>
   17cc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17cc4:	sub	r7, fp, #96	; 0x60
   17cc8:	mov	r0, r7
   17ccc:	mov	r2, #260	; 0x104
   17cd0:	mov	r5, #7
   17cd4:	bl	16ef4 <argp_state_help@@Base>
   17cd8:	ldr	r3, [fp, #-112]	; 0xffffff90
   17cdc:	ldr	ip, [fp, #-108]	; 0xffffff94
   17ce0:	cmp	r3, ip
   17ce4:	mov	r4, r3
   17ce8:	bcs	184d4 <argp_parse@@Base+0xe08>
   17cec:	mov	r6, #5
   17cf0:	movt	r6, #256	; 0x100
   17cf4:	ldr	r3, [r4]
   17cf8:	mov	r1, #0
   17cfc:	sub	r2, fp, #96	; 0x60
   17d00:	mov	r0, r6
   17d04:	cmp	r3, r1
   17d08:	beq	17d3c <argp_parse@@Base+0x670>
   17d0c:	ldr	lr, [r4, #12]
   17d10:	ldr	ip, [r4, #32]
   17d14:	str	ip, [fp, #-60]	; 0xffffffc4
   17d18:	ldr	ip, [r4, #24]
   17d1c:	str	ip, [fp, #-68]	; 0xffffffbc
   17d20:	ldr	ip, [r4, #28]
   17d24:	str	lr, [fp, #-76]	; 0xffffffb4
   17d28:	str	ip, [fp, #-64]	; 0xffffffc0
   17d2c:	blx	r3
   17d30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d34:	str	r3, [r4, #32]
   17d38:	ldr	ip, [fp, #-108]	; 0xffffff94
   17d3c:	add	r4, r4, #36	; 0x24
   17d40:	cmp	r4, ip
   17d44:	bcc	17cf4 <argp_parse@@Base+0x628>
   17d48:	ldr	r3, [fp, #-112]	; 0xffffff90
   17d4c:	sub	r4, ip, #36	; 0x24
   17d50:	cmp	r4, r3
   17d54:	bcc	17db4 <argp_parse@@Base+0x6e8>
   17d58:	mov	r7, #7
   17d5c:	movt	r7, #256	; 0x100
   17d60:	ldr	r6, [r4]
   17d64:	mov	r1, #0
   17d68:	sub	r2, fp, #96	; 0x60
   17d6c:	mov	r0, r7
   17d70:	cmp	r6, r1
   17d74:	beq	17da8 <argp_parse@@Base+0x6dc>
   17d78:	ldr	ip, [r4, #12]
   17d7c:	ldr	r3, [r4, #32]
   17d80:	str	r3, [fp, #-60]	; 0xffffffc4
   17d84:	ldr	r3, [r4, #24]
   17d88:	str	r3, [fp, #-68]	; 0xffffffbc
   17d8c:	ldr	r3, [r4, #28]
   17d90:	str	ip, [fp, #-76]	; 0xffffffb4
   17d94:	str	r3, [fp, #-64]	; 0xffffffc0
   17d98:	blx	r6
   17d9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17da0:	str	r3, [r4, #32]
   17da4:	ldr	r3, [fp, #-112]	; 0xffffff90
   17da8:	sub	r4, r4, #36	; 0x24
   17dac:	cmp	r4, r3
   17db0:	bcs	17d60 <argp_parse@@Base+0x694>
   17db4:	cmp	r5, #7
   17db8:	moveq	r5, #22
   17dbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17dc0:	bl	186b0 <argp_parse@@Base+0xfe4>
   17dc4:	mov	r0, r5
   17dc8:	sub	sp, fp, #32
   17dcc:	ldrd	r4, [sp]
   17dd0:	ldrd	r6, [sp, #8]
   17dd4:	ldrd	r8, [sp, #16]
   17dd8:	ldrd	sl, [sp, #24]
   17ddc:	add	sp, sp, #32
   17de0:	pop	{pc}		; (ldr pc, [sp], #4)
   17de4:	ldr	lr, [fp, #-236]	; 0xffffff14
   17de8:	add	r3, sl, #1
   17dec:	mov	r2, #45	; 0x2d
   17df0:	str	r3, [fp, #-208]	; 0xffffff30
   17df4:	strb	r2, [r6, lr]
   17df8:	b	17964 <argp_parse@@Base+0x298>
   17dfc:	ldr	lr, [fp, #-84]	; 0xffffffac
   17e00:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17e04:	sub	lr, lr, #1
   17e08:	cmp	r3, #0
   17e0c:	str	lr, [fp, #-84]	; 0xffffffac
   17e10:	beq	18510 <argp_parse@@Base+0xe44>
   17e14:	ldr	r6, [r5, #12]
   17e18:	sub	r2, fp, #96	; 0x60
   17e1c:	mov	r1, #0
   17e20:	mov	r0, r9
   17e24:	ldr	ip, [r5, #24]
   17e28:	ldr	lr, [r5, #32]
   17e2c:	str	ip, [fp, #-68]	; 0xffffffbc
   17e30:	ldr	ip, [r5, #28]
   17e34:	str	r6, [fp, #-76]	; 0xffffffb4
   17e38:	str	ip, [fp, #-64]	; 0xffffffc0
   17e3c:	str	lr, [fp, #-60]	; 0xffffffc4
   17e40:	blx	r3
   17e44:	ldr	ip, [fp, #-108]	; 0xffffff94
   17e48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17e4c:	cmp	ip, r4
   17e50:	movls	r2, #0
   17e54:	movhi	r2, #1
   17e58:	cmp	r0, #7
   17e5c:	str	r3, [r5, #32]
   17e60:	movne	r2, #0
   17e64:	cmp	r2, #0
   17e68:	beq	18518 <argp_parse@@Base+0xe4c>
   17e6c:	ldr	lr, [fp, #-84]	; 0xffffffac
   17e70:	b	17bac <argp_parse@@Base+0x4e0>
   17e74:	str	lr, [fp, #-84]	; 0xffffffac
   17e78:	add	r3, r4, #36	; 0x24
   17e7c:	cmp	ip, r4
   17e80:	mov	r4, r3
   17e84:	bhi	17bb0 <argp_parse@@Base+0x4e4>
   17e88:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17e8c:	ldr	r7, [fp, #-84]	; 0xffffffac
   17e90:	cmp	r7, r0
   17e94:	bne	180a4 <argp_parse@@Base+0x9d8>
   17e98:	ldr	r4, [fp, #-112]	; 0xffffff90
   17e9c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17ea0:	mov	r3, r4
   17ea4:	cmp	r4, ip
   17ea8:	bcs	184e4 <argp_parse@@Base+0xe18>
   17eac:	mov	r6, #2
   17eb0:	movt	r6, #256	; 0x100
   17eb4:	mov	r5, #0
   17eb8:	b	17f00 <argp_parse@@Base+0x834>
   17ebc:	ldr	ip, [r4, #-4]
   17ec0:	str	ip, [fp, #-60]	; 0xffffffc4
   17ec4:	ldr	ip, [r4, #-12]
   17ec8:	str	ip, [fp, #-68]	; 0xffffffbc
   17ecc:	ldr	ip, [r4, #-8]
   17ed0:	str	r3, [fp, #-76]	; 0xffffffb4
   17ed4:	str	ip, [fp, #-64]	; 0xffffffc0
   17ed8:	blx	r5
   17edc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17ee0:	mov	r5, r0
   17ee4:	str	r3, [r4, #-4]
   17ee8:	ldr	ip, [fp, #-108]	; 0xffffff94
   17eec:	cmp	ip, r4
   17ef0:	bls	183b8 <argp_parse@@Base+0xcec>
   17ef4:	cmp	r5, #7
   17ef8:	cmpne	r5, #0
   17efc:	bne	18380 <argp_parse@@Base+0xcb4>
   17f00:	ldr	r3, [r4, #12]
   17f04:	sub	r2, fp, #96	; 0x60
   17f08:	mov	r0, r6
   17f0c:	add	r4, r4, #36	; 0x24
   17f10:	subs	r1, r3, #0
   17f14:	bne	17eec <argp_parse@@Base+0x820>
   17f18:	ldr	r5, [r4, #-36]	; 0xffffffdc
   17f1c:	cmp	r5, #0
   17f20:	bne	17ebc <argp_parse@@Base+0x7f0>
   17f24:	cmp	r4, ip
   17f28:	mov	r5, #7
   17f2c:	bcc	17f00 <argp_parse@@Base+0x834>
   17f30:	ldr	r3, [fp, #-112]	; 0xffffff90
   17f34:	sub	r4, ip, #36	; 0x24
   17f38:	cmp	r4, r3
   17f3c:	bcs	183d4 <argp_parse@@Base+0xd08>
   17f40:	b	18458 <argp_parse@@Base+0xd8c>
   17f44:	mov	r5, r0
   17f48:	cmp	r5, #7
   17f4c:	bne	17cd8 <argp_parse@@Base+0x60c>
   17f50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17f54:	sub	r7, fp, #96	; 0x60
   17f58:	b	17cc8 <argp_parse@@Base+0x5fc>
   17f5c:	mov	r1, #1
   17f60:	mov	r7, r3
   17f64:	mov	r2, r1
   17f68:	str	r1, [fp, #-100]	; 0xffffff9c
   17f6c:	b	17b58 <argp_parse@@Base+0x48c>
   17f70:	str	ip, [sp]
   17f74:	sub	ip, fp, #148	; 0x94
   17f78:	str	ip, [sp, #4]
   17f7c:	bl	18738 <argp_parse@@Base+0x106c>
   17f80:	ldr	r7, [fp, #-148]	; 0xffffff6c
   17f84:	mov	r4, r0
   17f88:	cmn	r4, #1
   17f8c:	str	r7, [fp, #-84]	; 0xffffffac
   17f90:	bne	17c98 <argp_parse@@Base+0x5cc>
   17f94:	mov	r3, #0
   17f98:	cmp	r7, #1
   17f9c:	str	r3, [fp, #-100]	; 0xffffff9c
   17fa0:	ble	18078 <argp_parse@@Base+0x9ac>
   17fa4:	sub	r3, r7, #-1073741823	; 0xc0000001
   17fa8:	ldr	r1, [fp, #-232]	; 0xffffff18
   17fac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17fb0:	ldr	r0, [r2, r3, lsl #2]
   17fb4:	bl	111d8 <strcmp@plt>
   17fb8:	cmp	r0, #0
   17fbc:	bne	18078 <argp_parse@@Base+0x9ac>
   17fc0:	str	r7, [fp, #-72]	; 0xffffffb8
   17fc4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17fc8:	b	17b74 <argp_parse@@Base+0x4a8>
   17fcc:	ldr	r2, [fp, #-244]	; 0xffffff0c
   17fd0:	movw	r3, #50256	; 0xc450
   17fd4:	movt	r3, #2
   17fd8:	mov	r0, #1
   17fdc:	tst	r5, #2
   17fe0:	ldr	r1, [r3]
   17fe4:	movw	r3, #50268	; 0xc45c
   17fe8:	movt	r3, #2
   17fec:	str	r0, [fp, #-100]	; 0xffffff9c
   17ff0:	mov	r0, #0
   17ff4:	ldr	ip, [fp, #-232]	; 0xffffff18
   17ff8:	str	r7, [fp, #-96]	; 0xffffffa0
   17ffc:	str	r2, [fp, #-92]	; 0xffffffa4
   18000:	ldr	r2, [r3]
   18004:	ldr	r3, [fp, #-112]	; 0xffffff90
   18008:	str	r1, [fp, #-52]	; 0xffffffcc
   1800c:	mov	r1, #0
   18010:	str	r2, [fp, #-48]	; 0xffffffd0
   18014:	str	r3, [fp, #-108]	; 0xffffff94
   18018:	sub	r3, fp, #160	; 0xa0
   1801c:	str	ip, [fp, #-88]	; 0xffffffa8
   18020:	str	r7, [fp, #-84]	; 0xffffffac
   18024:	str	r5, [fp, #-80]	; 0xffffffb0
   18028:	strd	r0, [fp, #-76]	; 0xffffffb4
   1802c:	strd	r0, [fp, #-68]	; 0xffffffbc
   18030:	strd	r0, [fp, #-60]	; 0xffffffc4
   18034:	str	r3, [fp, #-44]	; 0xffffffd4
   18038:	mov	r3, ip
   1803c:	bne	17afc <argp_parse@@Base+0x430>
   18040:	mov	r2, #1
   18044:	ldr	r4, [fp, #-92]	; 0xffffffa4
   18048:	str	r2, [fp, #-144]	; 0xffffff70
   1804c:	ldr	r2, [fp, #-232]	; 0xffffff18
   18050:	cmp	r2, r3
   18054:	bne	17b28 <argp_parse@@Base+0x45c>
   18058:	ldr	r0, [r2]
   1805c:	cmp	r0, #0
   18060:	beq	17b28 <argp_parse@@Base+0x45c>
   18064:	bl	185f8 <argp_parse@@Base+0xf2c>
   18068:	str	r0, [fp, #-56]	; 0xffffffc8
   1806c:	b	17b38 <argp_parse@@Base+0x46c>
   18070:	mov	r5, r0
   18074:	b	17dc4 <argp_parse@@Base+0x6f8>
   18078:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1807c:	b	17b74 <argp_parse@@Base+0x4a8>
   18080:	cmp	r0, #7
   18084:	mov	r5, r0
   18088:	str	r8, [fp, #-232]	; 0xffffff18
   1808c:	beq	17aec <argp_parse@@Base+0x420>
   18090:	cmp	r0, #0
   18094:	bne	17dc4 <argp_parse@@Base+0x6f8>
   18098:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1809c:	ldr	r5, [fp, #-80]	; 0xffffffb0
   180a0:	b	17af4 <argp_parse@@Base+0x428>
   180a4:	ldr	r3, [fp, #4]
   180a8:	cmp	r3, #0
   180ac:	beq	181ec <argp_parse@@Base+0xb20>
   180b0:	str	r7, [r3]
   180b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   180b8:	ldr	ip, [fp, #-108]	; 0xffffff94
   180bc:	sub	r2, ip, #36	; 0x24
   180c0:	cmp	r3, r2
   180c4:	movls	r6, #4
   180c8:	subls	r4, ip, #72	; 0x48
   180cc:	movtls	r6, #256	; 0x100
   180d0:	bhi	18300 <argp_parse@@Base+0xc34>
   180d4:	ldr	r5, [r4, #36]	; 0x24
   180d8:	mov	r1, #0
   180dc:	sub	r2, fp, #96	; 0x60
   180e0:	mov	r0, r6
   180e4:	cmp	r5, r1
   180e8:	beq	18224 <argp_parse@@Base+0xb58>
   180ec:	ldr	ip, [r4, #48]	; 0x30
   180f0:	ldr	r3, [r4, #68]	; 0x44
   180f4:	str	r3, [fp, #-60]	; 0xffffffc4
   180f8:	ldr	r3, [r4, #60]	; 0x3c
   180fc:	str	r3, [fp, #-68]	; 0xffffffbc
   18100:	ldr	r3, [r4, #64]	; 0x40
   18104:	str	ip, [fp, #-76]	; 0xffffffb4
   18108:	str	r3, [fp, #-64]	; 0xffffffc0
   1810c:	blx	r5
   18110:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18114:	str	r3, [r4, #68]	; 0x44
   18118:	ldr	r3, [fp, #-112]	; 0xffffff90
   1811c:	cmp	r3, r4
   18120:	sub	r4, r4, #36	; 0x24
   18124:	bhi	182e0 <argp_parse@@Base+0xc14>
   18128:	cmp	r0, #7
   1812c:	cmpne	r0, #0
   18130:	beq	180d4 <argp_parse@@Base+0xa08>
   18134:	ldr	ip, [fp, #-108]	; 0xffffff94
   18138:	mov	r5, r0
   1813c:	sub	r4, ip, #36	; 0x24
   18140:	cmp	r4, r3
   18144:	bcs	17d58 <argp_parse@@Base+0x68c>
   18148:	b	17dbc <argp_parse@@Base+0x6f0>
   1814c:	ldr	r2, [fp, #-232]	; 0xffffff18
   18150:	ldr	r2, [r2]
   18154:	str	r2, [r3]
   18158:	b	17714 <argp_parse@@Base+0x48>
   1815c:	ldr	r3, [fp, #-232]	; 0xffffff18
   18160:	ldr	r0, [r3]
   18164:	bl	185f8 <argp_parse@@Base+0xf2c>
   18168:	str	r0, [r4]
   1816c:	b	17728 <argp_parse@@Base+0x5c>
   18170:	mov	r1, r4
   18174:	ldr	r0, [fp, #-156]	; 0xffffff64
   18178:	bl	113c4 <strchr@plt>
   1817c:	cmp	r0, #0
   18180:	beq	181bc <argp_parse@@Base+0xaf0>
   18184:	ldr	r5, [fp, #-112]	; 0xffffff90
   18188:	ldr	r2, [fp, #-108]	; 0xffffff94
   1818c:	cmp	r5, r2
   18190:	bcs	181bc <argp_parse@@Base+0xaf0>
   18194:	ldr	r3, [r5, #8]
   18198:	cmp	r3, r0
   1819c:	bls	181b0 <argp_parse@@Base+0xae4>
   181a0:	b	18474 <argp_parse@@Base+0xda8>
   181a4:	ldr	r3, [r5, #8]
   181a8:	cmp	r0, r3
   181ac:	bcc	18474 <argp_parse@@Base+0xda8>
   181b0:	add	r5, r5, #36	; 0x24
   181b4:	cmp	r5, r2
   181b8:	bcc	181a4 <argp_parse@@Base+0xad8>
   181bc:	sub	r7, fp, #96	; 0x60
   181c0:	mov	r2, r4
   181c4:	add	r4, r4, #1
   181c8:	ldr	r3, [pc, #888]	; 18548 <argp_parse@@Base+0xe7c>
   181cc:	movw	r1, #45956	; 0xb384
   181d0:	movt	r1, #1
   181d4:	mov	r0, r7
   181d8:	bic	r4, r4, #2
   181dc:	bl	16fb4 <argp_error@@Base>
   181e0:	cmp	r4, #0
   181e4:	bne	1821c <argp_parse@@Base+0xb50>
   181e8:	b	17e88 <argp_parse@@Base+0x7bc>
   181ec:	ldr	r3, [fp, #-80]	; 0xffffffb0
   181f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   181f4:	tst	r3, #2
   181f8:	bne	17f54 <argp_parse@@Base+0x888>
   181fc:	cmp	r1, #0
   18200:	beq	17f54 <argp_parse@@Base+0x888>
   18204:	mov	r0, r1
   18208:	movw	r1, #45976	; 0xb398
   1820c:	movt	r1, #1
   18210:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18214:	sub	r7, fp, #96	; 0x60
   18218:	bl	113d0 <fprintf@plt>
   1821c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18220:	b	17cc8 <argp_parse@@Base+0x5fc>
   18224:	cmp	r4, r3
   18228:	sub	r4, r4, #36	; 0x24
   1822c:	bcs	180d4 <argp_parse@@Base+0xa08>
   18230:	mov	r5, #7
   18234:	b	182e4 <argp_parse@@Base+0xc18>
   18238:	asrs	r8, r4, #24
   1823c:	beq	18170 <argp_parse@@Base+0xaa4>
   18240:	add	r3, r8, r8, lsl #3
   18244:	ldr	r5, [fp, #-112]	; 0xffffff90
   18248:	ands	r2, r4, #8388608	; 0x800000
   1824c:	movne	r2, #-16777216	; 0xff000000
   18250:	bic	r0, r4, #-16777216	; 0xff000000
   18254:	lsl	r3, r3, #2
   18258:	orr	r0, r0, r2
   1825c:	sub	r3, r3, #36	; 0x24
   18260:	ldr	r6, [r5, r3]
   18264:	add	r5, r5, r3
   18268:	cmp	r6, #0
   1826c:	beq	184dc <argp_parse@@Base+0xe10>
   18270:	add	r1, r5, #24
   18274:	ldr	lr, [r5, #12]
   18278:	sub	r7, fp, #96	; 0x60
   1827c:	ldm	r1, {r1, r3, ip}
   18280:	mov	r2, r7
   18284:	str	lr, [fp, #-76]	; 0xffffffb4
   18288:	str	r1, [fp, #-68]	; 0xffffffbc
   1828c:	str	r3, [fp, #-64]	; 0xffffffc0
   18290:	str	ip, [fp, #-60]	; 0xffffffc4
   18294:	ldr	r1, [fp, #-136]	; 0xffffff78
   18298:	blx	r6
   1829c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   182a0:	str	r3, [r5, #32]
   182a4:	cmp	r0, #7
   182a8:	beq	18308 <argp_parse@@Base+0xc3c>
   182ac:	cmp	r0, #0
   182b0:	bne	17f44 <argp_parse@@Base+0x878>
   182b4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   182b8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   182bc:	ldr	r7, [fp, #-84]	; 0xffffffac
   182c0:	b	17b58 <argp_parse@@Base+0x48c>
   182c4:	movw	r2, #50444	; 0xc50c
   182c8:	movt	r2, #2
   182cc:	ldr	r2, [r2]
   182d0:	cmp	r2, #0
   182d4:	addeq	r2, r3, #16
   182d8:	bne	177fc <argp_parse@@Base+0x130>
   182dc:	b	17808 <argp_parse@@Base+0x13c>
   182e0:	mov	r5, r0
   182e4:	ldr	ip, [fp, #-108]	; 0xffffff94
   182e8:	cmp	r5, #7
   182ec:	sub	r4, ip, #36	; 0x24
   182f0:	bne	18140 <argp_parse@@Base+0xa74>
   182f4:	cmp	r4, r3
   182f8:	movcs	r5, #0
   182fc:	bcs	17d58 <argp_parse@@Base+0x68c>
   18300:	mov	r5, #0
   18304:	b	17dbc <argp_parse@@Base+0x6f0>
   18308:	cmp	r8, #0
   1830c:	beq	181c0 <argp_parse@@Base+0xaf4>
   18310:	ldr	r3, [fp, #-152]	; 0xffffff68
   18314:	ldr	r2, [r3]
   18318:	ldr	r1, [r3, #12]
   1831c:	cmp	r4, r1
   18320:	bne	1833c <argp_parse@@Base+0xc70>
   18324:	b	1836c <argp_parse@@Base+0xca0>
   18328:	add	r3, r3, #16
   1832c:	ldr	r2, [r3]
   18330:	ldr	r1, [r3, #12]
   18334:	cmp	r4, r1
   18338:	beq	1836c <argp_parse@@Base+0xca0>
   1833c:	cmp	r2, #0
   18340:	bne	18328 <argp_parse@@Base+0xc5c>
   18344:	movw	r2, #45948	; 0xb37c
   18348:	movt	r2, #1
   1834c:	movw	r1, #45964	; 0xb38c
   18350:	movt	r1, #1
   18354:	ldr	r3, [pc, #492]	; 18548 <argp_parse@@Base+0xe7c>
   18358:	mov	r0, r7
   1835c:	add	r4, r4, #1
   18360:	bl	16fb4 <argp_error@@Base>
   18364:	bic	r4, r4, #2
   18368:	b	181e0 <argp_parse@@Base+0xb14>
   1836c:	movw	r3, #45948	; 0xb37c
   18370:	movt	r3, #1
   18374:	cmp	r2, #0
   18378:	moveq	r2, r3
   1837c:	b	1834c <argp_parse@@Base+0xc80>
   18380:	ldr	r3, [fp, #-112]	; 0xffffff90
   18384:	sub	r2, ip, #36	; 0x24
   18388:	cmp	r3, r2
   1838c:	bhi	18500 <argp_parse@@Base+0xe34>
   18390:	ldr	r2, [fp, #4]
   18394:	cmp	r2, #0
   18398:	beq	183a8 <argp_parse@@Base+0xcdc>
   1839c:	ldr	r2, [fp, #-84]	; 0xffffffac
   183a0:	ldr	r1, [fp, #4]
   183a4:	str	r2, [r1]
   183a8:	cmp	r5, #0
   183ac:	bne	17f48 <argp_parse@@Base+0x87c>
   183b0:	ldr	ip, [fp, #-108]	; 0xffffff94
   183b4:	b	180bc <argp_parse@@Base+0x9f0>
   183b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   183bc:	sub	r4, ip, #36	; 0x24
   183c0:	cmp	r4, r3
   183c4:	bcc	184c8 <argp_parse@@Base+0xdfc>
   183c8:	cmp	r5, #7
   183cc:	cmpne	r5, #0
   183d0:	bne	18390 <argp_parse@@Base+0xcc4>
   183d4:	mov	r6, #1
   183d8:	movt	r6, #256	; 0x100
   183dc:	sub	r4, r4, #36	; 0x24
   183e0:	ldr	r5, [r4, #36]	; 0x24
   183e4:	mov	r1, #0
   183e8:	sub	r2, fp, #96	; 0x60
   183ec:	mov	r0, r6
   183f0:	cmp	r5, r1
   183f4:	beq	18448 <argp_parse@@Base+0xd7c>
   183f8:	ldr	ip, [r4, #48]	; 0x30
   183fc:	ldr	r3, [r4, #68]	; 0x44
   18400:	str	r3, [fp, #-60]	; 0xffffffc4
   18404:	ldr	r3, [r4, #60]	; 0x3c
   18408:	str	r3, [fp, #-68]	; 0xffffffbc
   1840c:	ldr	r3, [r4, #64]	; 0x40
   18410:	str	ip, [fp, #-76]	; 0xffffffb4
   18414:	str	r3, [fp, #-64]	; 0xffffffc0
   18418:	blx	r5
   1841c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18420:	str	r3, [r4, #68]	; 0x44
   18424:	ldr	r3, [fp, #-112]	; 0xffffff90
   18428:	cmp	r3, r4
   1842c:	sub	r4, r4, #36	; 0x24
   18430:	bhi	184c4 <argp_parse@@Base+0xdf8>
   18434:	cmp	r0, #7
   18438:	cmpne	r0, #0
   1843c:	beq	183e0 <argp_parse@@Base+0xd14>
   18440:	mov	r5, r0
   18444:	b	18390 <argp_parse@@Base+0xcc4>
   18448:	cmp	r3, r4
   1844c:	sub	r4, r4, #36	; 0x24
   18450:	bls	183e0 <argp_parse@@Base+0xd14>
   18454:	ldr	ip, [fp, #-108]	; 0xffffff94
   18458:	ldr	r2, [fp, #4]
   1845c:	cmp	r2, #0
   18460:	beq	180bc <argp_parse@@Base+0x9f0>
   18464:	ldr	r2, [fp, #-84]	; 0xffffffac
   18468:	ldr	r1, [fp, #4]
   1846c:	str	r2, [r1]
   18470:	b	180bc <argp_parse@@Base+0x9f0>
   18474:	ldr	r3, [r5]
   18478:	cmp	r3, #0
   1847c:	beq	181bc <argp_parse@@Base+0xaf0>
   18480:	ldr	r6, [r5, #12]
   18484:	sub	r7, fp, #96	; 0x60
   18488:	mov	r0, r4
   1848c:	mov	r2, r7
   18490:	mov	r8, #0
   18494:	ldr	ip, [r5, #24]
   18498:	ldr	r1, [r5, #28]
   1849c:	ldr	lr, [r5, #32]
   184a0:	str	r6, [fp, #-76]	; 0xffffffb4
   184a4:	str	ip, [fp, #-68]	; 0xffffffbc
   184a8:	str	r1, [fp, #-64]	; 0xffffffc0
   184ac:	ldr	r1, [fp, #-136]	; 0xffffff78
   184b0:	str	lr, [fp, #-60]	; 0xffffffc4
   184b4:	blx	r3
   184b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   184bc:	str	r3, [r5, #32]
   184c0:	b	182a4 <argp_parse@@Base+0xbd8>
   184c4:	mov	r5, r0
   184c8:	cmp	r5, #7
   184cc:	beq	18454 <argp_parse@@Base+0xd88>
   184d0:	b	18390 <argp_parse@@Base+0xcc4>
   184d4:	sub	r4, ip, #36	; 0x24
   184d8:	b	17d50 <argp_parse@@Base+0x684>
   184dc:	sub	r7, fp, #96	; 0x60
   184e0:	b	18310 <argp_parse@@Base+0xc44>
   184e4:	sub	r4, ip, #36	; 0x24
   184e8:	cmp	r3, r4
   184ec:	bls	183d4 <argp_parse@@Base+0xd08>
   184f0:	ldr	r2, [fp, #4]
   184f4:	cmp	r2, #0
   184f8:	bne	18464 <argp_parse@@Base+0xd98>
   184fc:	b	18300 <argp_parse@@Base+0xc34>
   18500:	ldr	r2, [fp, #4]
   18504:	cmp	r2, #0
   18508:	bne	1839c <argp_parse@@Base+0xcd0>
   1850c:	b	17ce0 <argp_parse@@Base+0x614>
   18510:	ldr	ip, [fp, #-108]	; 0xffffff94
   18514:	b	17e78 <argp_parse@@Base+0x7ac>
   18518:	cmp	r0, #0
   1851c:	beq	18534 <argp_parse@@Base+0xe68>
   18520:	cmp	r0, #7
   18524:	mov	r5, r0
   18528:	ldrne	r3, [fp, #-112]	; 0xffffff90
   1852c:	beq	17e88 <argp_parse@@Base+0x7bc>
   18530:	b	17ce0 <argp_parse@@Base+0x614>
   18534:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18538:	mov	r0, r3
   1853c:	str	r3, [fp, #-84]	; 0xffffffac
   18540:	b	17c1c <argp_parse@@Base+0x550>
   18544:	andeq	fp, r1, r4, asr r2
   18548:	andeq	fp, r1, r0, ror r2
   1854c:	cmp	r1, #0
   18550:	beq	18590 <argp_parse@@Base+0xec4>
   18554:	ldr	r2, [r1, #52]	; 0x34
   18558:	ldr	r3, [r2, #48]	; 0x30
   1855c:	ldr	r1, [r2, #52]	; 0x34
   18560:	cmp	r3, r1
   18564:	bcs	18590 <argp_parse@@Base+0xec4>
   18568:	ldr	r2, [r3, #4]
   1856c:	cmp	r0, r2
   18570:	bne	18584 <argp_parse@@Base+0xeb8>
   18574:	b	18598 <argp_parse@@Base+0xecc>
   18578:	ldr	r2, [r3, #4]
   1857c:	cmp	r2, r0
   18580:	beq	18598 <argp_parse@@Base+0xecc>
   18584:	add	r3, r3, #36	; 0x24
   18588:	cmp	r3, r1
   1858c:	bcc	18578 <argp_parse@@Base+0xeac>
   18590:	mov	r0, #0
   18594:	bx	lr
   18598:	ldr	r0, [r3, #24]
   1859c:	bx	lr
   185a0:	movw	r1, #50448	; 0xc510
   185a4:	movt	r1, #2
   185a8:	push	{lr}		; (str lr, [sp, #-4]!)
   185ac:	ldm	r1, {r1, ip}
   185b0:	sub	sp, sp, #12
   185b4:	movw	r3, #46192	; 0xb470
   185b8:	movt	r3, #1
   185bc:	movw	r2, #46208	; 0xb480
   185c0:	movt	r2, #1
   185c4:	str	ip, [sp]
   185c8:	bl	18bdc <argp_parse@@Base+0x1510>
   185cc:	add	sp, sp, #12
   185d0:	pop	{pc}		; (ldr pc, [sp], #4)
   185d4:	movw	r2, #50444	; 0xc50c
   185d8:	movt	r2, #2
   185dc:	movw	ip, #34208	; 0x85a0
   185e0:	movt	ip, #1
   185e4:	movw	r3, #50448	; 0xc510
   185e8:	movt	r3, #2
   185ec:	str	ip, [r2]
   185f0:	strd	r0, [r3]
   185f4:	bx	lr
   185f8:	ldrb	r3, [r0]
   185fc:	cmp	r3, #47	; 0x2f
   18600:	bne	18610 <argp_parse@@Base+0xf44>
   18604:	ldrb	r3, [r0, #1]!
   18608:	cmp	r3, #47	; 0x2f
   1860c:	beq	18604 <argp_parse@@Base+0xf38>
   18610:	cmp	r3, #0
   18614:	beq	18644 <argp_parse@@Base+0xf78>
   18618:	mov	r2, r0
   1861c:	mov	r1, #0
   18620:	cmp	r3, #47	; 0x2f
   18624:	moveq	r1, #1
   18628:	beq	18638 <argp_parse@@Base+0xf6c>
   1862c:	cmp	r1, #0
   18630:	movne	r0, r2
   18634:	movne	r1, #0
   18638:	ldrb	r3, [r2, #1]!
   1863c:	cmp	r3, #0
   18640:	bne	18620 <argp_parse@@Base+0xf54>
   18644:	bx	lr
   18648:	str	r4, [sp, #-8]!
   1864c:	mov	r4, r0
   18650:	str	lr, [sp, #4]
   18654:	bl	113b8 <strlen@plt>
   18658:	cmp	r0, #1
   1865c:	bls	18680 <argp_parse@@Base+0xfb4>
   18660:	add	r2, r4, r0
   18664:	mov	r3, r0
   18668:	ldrb	r2, [r2, #-1]
   1866c:	cmp	r2, #47	; 0x2f
   18670:	subeq	r3, r0, #2
   18674:	rsbeq	r1, r4, #1
   18678:	addeq	r3, r4, r3
   1867c:	beq	1868c <argp_parse@@Base+0xfc0>
   18680:	ldr	r4, [sp]
   18684:	add	sp, sp, #4
   18688:	pop	{pc}		; (ldr pc, [sp], #4)
   1868c:	cmp	r3, r4
   18690:	add	r0, r1, r3
   18694:	beq	18680 <argp_parse@@Base+0xfb4>
   18698:	ldrb	r2, [r3], #-1
   1869c:	cmp	r2, #47	; 0x2f
   186a0:	beq	1868c <argp_parse@@Base+0xfc0>
   186a4:	ldr	r4, [sp]
   186a8:	add	sp, sp, #4
   186ac:	pop	{pc}		; (ldr pc, [sp], #4)
   186b0:	strd	r4, [sp, #-12]!
   186b4:	mov	r5, r0
   186b8:	str	lr, [sp, #8]
   186bc:	sub	sp, sp, #12
   186c0:	bl	113dc <__errno_location@plt>
   186c4:	mov	r4, r0
   186c8:	mov	r2, #0
   186cc:	ldr	r3, [r4]
   186d0:	mov	r0, r5
   186d4:	str	r2, [r4]
   186d8:	str	r3, [sp]
   186dc:	str	r3, [sp, #4]
   186e0:	bl	11238 <free@plt>
   186e4:	ldr	r3, [r4]
   186e8:	add	r2, sp, #8
   186ec:	clz	r3, r3
   186f0:	lsr	r3, r3, #5
   186f4:	add	r3, r2, r3, lsl #2
   186f8:	ldr	r3, [r3, #-8]
   186fc:	str	r3, [r4]
   18700:	add	sp, sp, #12
   18704:	ldrd	r4, [sp]
   18708:	add	sp, sp, #8
   1870c:	pop	{pc}		; (ldr pc, [sp], #4)
   18710:	push	{lr}		; (str lr, [sp, #-4]!)
   18714:	sub	sp, sp, #20
   18718:	mov	ip, #0
   1871c:	ldr	lr, [sp, #24]
   18720:	str	lr, [sp]
   18724:	str	ip, [sp, #4]
   18728:	str	ip, [sp, #8]
   1872c:	bl	1a698 <argp_parse@@Base+0x2fcc>
   18730:	add	sp, sp, #20
   18734:	pop	{pc}		; (ldr pc, [sp], #4)
   18738:	str	r4, [sp, #-8]!
   1873c:	mov	ip, #0
   18740:	str	lr, [sp, #4]
   18744:	sub	sp, sp, #16
   18748:	ldr	r4, [sp, #24]
   1874c:	str	ip, [sp, #12]
   18750:	ldr	lr, [sp, #28]
   18754:	stm	sp, {r4, ip, lr}
   18758:	bl	1a100 <argp_parse@@Base+0x2a34>
   1875c:	add	sp, sp, #16
   18760:	ldr	r4, [sp]
   18764:	add	sp, sp, #4
   18768:	pop	{pc}		; (ldr pc, [sp], #4)
   1876c:	str	r4, [sp, #-8]!
   18770:	mov	r4, #1
   18774:	str	lr, [sp, #4]
   18778:	sub	sp, sp, #16
   1877c:	mov	lr, #0
   18780:	ldr	ip, [sp, #24]
   18784:	str	ip, [sp]
   18788:	stmib	sp, {r4, lr}
   1878c:	bl	1a698 <argp_parse@@Base+0x2fcc>
   18790:	add	sp, sp, #16
   18794:	ldr	r4, [sp]
   18798:	add	sp, sp, #4
   1879c:	pop	{pc}		; (ldr pc, [sp], #4)
   187a0:	strd	r4, [sp, #-12]!
   187a4:	mov	r4, #0
   187a8:	mov	r5, #1
   187ac:	str	lr, [sp, #8]
   187b0:	sub	sp, sp, #20
   187b4:	ldr	lr, [sp, #32]
   187b8:	ldr	ip, [sp, #36]	; 0x24
   187bc:	str	lr, [sp]
   187c0:	str	r4, [sp, #12]
   187c4:	stmib	sp, {r5, ip}
   187c8:	bl	1a100 <argp_parse@@Base+0x2a34>
   187cc:	add	sp, sp, #20
   187d0:	ldrd	r4, [sp]
   187d4:	add	sp, sp, #8
   187d8:	pop	{pc}		; (ldr pc, [sp], #4)
   187dc:	push	{r1, r2, r3}
   187e0:	push	{lr}		; (str lr, [sp, #-4]!)
   187e4:	sub	sp, sp, #8
   187e8:	ldr	r1, [sp, #12]
   187ec:	add	r3, sp, #16
   187f0:	ldr	r2, [sp, #16]
   187f4:	str	r3, [sp, #4]
   187f8:	bl	112ec <ioctl@plt>
   187fc:	add	sp, sp, #8
   18800:	pop	{lr}		; (ldr lr, [sp], #4)
   18804:	add	sp, sp, #12
   18808:	bx	lr
   1880c:	strd	r4, [sp, #-16]!
   18810:	subs	r4, r0, #0
   18814:	str	r6, [sp, #8]
   18818:	str	lr, [sp, #12]
   1881c:	beq	188b4 <argp_parse@@Base+0x11e8>
   18820:	mov	r1, #47	; 0x2f
   18824:	bl	11484 <strrchr@plt>
   18828:	subs	r5, r0, #0
   1882c:	beq	1888c <argp_parse@@Base+0x11c0>
   18830:	add	r6, r5, #1
   18834:	sub	r3, r6, r4
   18838:	cmp	r3, #6
   1883c:	ble	1888c <argp_parse@@Base+0x11c0>
   18840:	movw	r1, #46280	; 0xb4c8
   18844:	movt	r1, #1
   18848:	mov	r2, #7
   1884c:	sub	r0, r5, #6
   18850:	bl	11508 <strncmp@plt>
   18854:	cmp	r0, #0
   18858:	bne	1888c <argp_parse@@Base+0x11c0>
   1885c:	movw	r1, #46288	; 0xb4d0
   18860:	movt	r1, #1
   18864:	mov	r2, #3
   18868:	mov	r0, r6
   1886c:	bl	11508 <strncmp@plt>
   18870:	cmp	r0, #0
   18874:	movne	r4, r6
   18878:	bne	1888c <argp_parse@@Base+0x11c0>
   1887c:	add	r4, r5, #4
   18880:	movw	r3, #50248	; 0xc448
   18884:	movt	r3, #2
   18888:	str	r4, [r3]
   1888c:	movw	r2, #50456	; 0xc518
   18890:	movt	r2, #2
   18894:	ldr	r6, [sp, #8]
   18898:	movw	r3, #50252	; 0xc44c
   1889c:	movt	r3, #2
   188a0:	str	r4, [r2]
   188a4:	str	r4, [r3]
   188a8:	ldrd	r4, [sp]
   188ac:	add	sp, sp, #12
   188b0:	pop	{pc}		; (ldr pc, [sp], #4)
   188b4:	movw	r3, #50256	; 0xc450
   188b8:	movt	r3, #2
   188bc:	movw	r0, #46224	; 0xb490
   188c0:	movt	r0, #1
   188c4:	ldr	r3, [r3]
   188c8:	mov	r2, #55	; 0x37
   188cc:	mov	r1, #1
   188d0:	bl	112e0 <fwrite@plt>
   188d4:	bl	11514 <abort@plt>
   188d8:	cmp	r1, #0
   188dc:	strd	r4, [sp, #-16]!
   188e0:	mov	r4, r0
   188e4:	str	r6, [sp, #8]
   188e8:	str	lr, [sp, #12]
   188ec:	sub	sp, sp, #32
   188f0:	ldr	r5, [sp, #48]	; 0x30
   188f4:	ldr	r6, [sp, #52]	; 0x34
   188f8:	beq	189fc <argp_parse@@Base+0x1330>
   188fc:	mov	ip, r3
   18900:	mov	r3, r2
   18904:	mov	r2, r1
   18908:	movw	r1, #46292	; 0xb4d4
   1890c:	movt	r1, #1
   18910:	str	ip, [sp]
   18914:	bl	113d0 <fprintf@plt>
   18918:	movw	r3, #2022	; 0x7e6
   1891c:	movw	r2, #46312	; 0xb4e8
   18920:	movt	r2, #1
   18924:	movw	r1, #47080	; 0xb7e8
   18928:	movt	r1, #1
   1892c:	mov	r0, r4
   18930:	bl	113d0 <fprintf@plt>
   18934:	mov	r1, r4
   18938:	mov	r0, #10
   1893c:	bl	1149c <fputc@plt>
   18940:	movw	r2, #46316	; 0xb4ec
   18944:	movt	r2, #1
   18948:	movw	r1, #46352	; 0xb510
   1894c:	movt	r1, #1
   18950:	mov	r0, r4
   18954:	bl	113d0 <fprintf@plt>
   18958:	mov	r1, r4
   1895c:	mov	r0, #10
   18960:	bl	1149c <fputc@plt>
   18964:	cmp	r6, #9
   18968:	ldrls	pc, [pc, r6, lsl #2]
   1896c:	b	18bc8 <argp_parse@@Base+0x14fc>
   18970:	andeq	r8, r1, r8, ror #19
   18974:	andeq	r8, r1, ip, lsl #20
   18978:	andeq	r8, r1, r4, lsr sl
   1897c:	andeq	r8, r1, ip, asr sl
   18980:	andeq	r8, r1, ip, lsl #21
   18984:	andeq	r8, r1, r8, asr #21
   18988:	strdeq	r8, [r1], -ip
   1898c:	andeq	r8, r1, r8, lsr fp
   18990:	andeq	r8, r1, ip, ror fp
   18994:	muleq	r1, r8, r9
   18998:	ldr	ip, [r5, #8]
   1899c:	movw	r1, #46792	; 0xb6c8
   189a0:	movt	r1, #1
   189a4:	mov	r0, r4
   189a8:	ldr	r3, [r5, #12]
   189ac:	ldr	r2, [r5, #32]
   189b0:	str	ip, [sp]
   189b4:	ldr	ip, [r5, #16]
   189b8:	str	r2, [sp, #24]
   189bc:	ldr	r2, [r5, #28]
   189c0:	str	r3, [sp, #4]
   189c4:	ldr	r3, [r5, #20]
   189c8:	str	ip, [sp, #8]
   189cc:	ldr	ip, [r5, #24]
   189d0:	str	r2, [sp, #20]
   189d4:	ldr	r2, [r5]
   189d8:	str	r3, [sp, #12]
   189dc:	ldr	r3, [r5, #4]
   189e0:	str	ip, [sp, #16]
   189e4:	bl	113d0 <fprintf@plt>
   189e8:	add	sp, sp, #32
   189ec:	ldrd	r4, [sp]
   189f0:	ldr	r6, [sp, #8]
   189f4:	add	sp, sp, #12
   189f8:	pop	{pc}		; (ldr pc, [sp], #4)
   189fc:	movw	r1, #46304	; 0xb4e0
   18a00:	movt	r1, #1
   18a04:	bl	113d0 <fprintf@plt>
   18a08:	b	18918 <argp_parse@@Base+0x124c>
   18a0c:	ldr	r2, [r5]
   18a10:	mov	r0, r4
   18a14:	movw	r1, #46524	; 0xb5bc
   18a18:	movt	r1, #1
   18a1c:	add	sp, sp, #32
   18a20:	ldrd	r4, [sp]
   18a24:	ldr	r6, [sp, #8]
   18a28:	ldr	lr, [sp, #12]
   18a2c:	add	sp, sp, #16
   18a30:	b	113d0 <fprintf@plt>
   18a34:	ldrd	r2, [r5]
   18a38:	mov	r0, r4
   18a3c:	movw	r1, #46540	; 0xb5cc
   18a40:	movt	r1, #1
   18a44:	add	sp, sp, #32
   18a48:	ldrd	r4, [sp]
   18a4c:	ldr	r6, [sp, #8]
   18a50:	ldr	lr, [sp, #12]
   18a54:	add	sp, sp, #16
   18a58:	b	113d0 <fprintf@plt>
   18a5c:	ldrd	r2, [r5]
   18a60:	mov	r0, r4
   18a64:	movw	r1, #46564	; 0xb5e4
   18a68:	movt	r1, #1
   18a6c:	ldr	ip, [r5, #8]
   18a70:	str	ip, [sp, #48]	; 0x30
   18a74:	add	sp, sp, #32
   18a78:	ldrd	r4, [sp]
   18a7c:	ldr	r6, [sp, #8]
   18a80:	ldr	lr, [sp, #12]
   18a84:	add	sp, sp, #16
   18a88:	b	113d0 <fprintf@plt>
   18a8c:	ldr	r2, [r5]
   18a90:	mov	r0, r4
   18a94:	movw	r1, #46592	; 0xb600
   18a98:	movt	r1, #1
   18a9c:	ldr	r3, [r5, #8]
   18aa0:	ldr	ip, [r5, #12]
   18aa4:	str	r3, [sp, #48]	; 0x30
   18aa8:	ldr	r3, [r5, #4]
   18aac:	str	ip, [sp, #52]	; 0x34
   18ab0:	add	sp, sp, #32
   18ab4:	ldrd	r4, [sp]
   18ab8:	ldr	r6, [sp, #8]
   18abc:	ldr	lr, [sp, #12]
   18ac0:	add	sp, sp, #16
   18ac4:	b	113d0 <fprintf@plt>
   18ac8:	ldr	r2, [r5, #8]
   18acc:	mov	r0, r4
   18ad0:	movw	r1, #46624	; 0xb620
   18ad4:	movt	r1, #1
   18ad8:	ldr	ip, [r5, #12]
   18adc:	ldr	r3, [r5, #16]
   18ae0:	str	r2, [sp]
   18ae4:	ldr	r2, [r5]
   18ae8:	str	r3, [sp, #8]
   18aec:	ldr	r3, [r5, #4]
   18af0:	str	ip, [sp, #4]
   18af4:	bl	113d0 <fprintf@plt>
   18af8:	b	189e8 <argp_parse@@Base+0x131c>
   18afc:	ldr	ip, [r5, #8]
   18b00:	mov	r0, r4
   18b04:	movw	r1, #46660	; 0xb644
   18b08:	movt	r1, #1
   18b0c:	ldr	r3, [r5, #12]
   18b10:	ldr	r2, [r5, #20]
   18b14:	str	ip, [sp]
   18b18:	ldr	ip, [r5, #16]
   18b1c:	str	r2, [sp, #12]
   18b20:	ldr	r2, [r5]
   18b24:	str	r3, [sp, #4]
   18b28:	ldr	r3, [r5, #4]
   18b2c:	str	ip, [sp, #8]
   18b30:	bl	113d0 <fprintf@plt>
   18b34:	b	189e8 <argp_parse@@Base+0x131c>
   18b38:	ldr	r3, [r5, #8]
   18b3c:	mov	r0, r4
   18b40:	movw	r1, #46700	; 0xb66c
   18b44:	movt	r1, #1
   18b48:	ldr	r2, [r5, #12]
   18b4c:	ldr	ip, [r5, #24]
   18b50:	str	r3, [sp]
   18b54:	ldr	r3, [r5, #16]
   18b58:	str	ip, [sp, #16]
   18b5c:	ldr	ip, [r5, #20]
   18b60:	str	r2, [sp, #4]
   18b64:	ldr	r2, [r5]
   18b68:	str	r3, [sp, #8]
   18b6c:	ldr	r3, [r5, #4]
   18b70:	str	ip, [sp, #12]
   18b74:	bl	113d0 <fprintf@plt>
   18b78:	b	189e8 <argp_parse@@Base+0x131c>
   18b7c:	ldr	r2, [r5, #8]
   18b80:	mov	r0, r4
   18b84:	movw	r1, #46744	; 0xb698
   18b88:	movt	r1, #1
   18b8c:	ldr	ip, [r5, #12]
   18b90:	ldr	r3, [r5, #28]
   18b94:	str	r2, [sp]
   18b98:	ldr	r2, [r5, #16]
   18b9c:	str	r3, [sp, #20]
   18ba0:	ldr	r3, [r5, #24]
   18ba4:	str	ip, [sp, #4]
   18ba8:	ldr	ip, [r5, #20]
   18bac:	str	r2, [sp, #8]
   18bb0:	ldr	r2, [r5]
   18bb4:	str	r3, [sp, #16]
   18bb8:	ldr	r3, [r5, #4]
   18bbc:	str	ip, [sp, #12]
   18bc0:	bl	113d0 <fprintf@plt>
   18bc4:	b	189e8 <argp_parse@@Base+0x131c>
   18bc8:	movw	r1, #46844	; 0xb6fc
   18bcc:	movt	r1, #1
   18bd0:	ldr	ip, [r5, #8]
   18bd4:	mov	r0, r4
   18bd8:	b	189a8 <argp_parse@@Base+0x12dc>
   18bdc:	strd	r4, [sp, #-12]!
   18be0:	str	lr, [sp, #8]
   18be4:	sub	sp, sp, #12
   18be8:	ldr	r5, [sp, #24]
   18bec:	ldr	ip, [r5]
   18bf0:	cmp	ip, #0
   18bf4:	beq	18c10 <argp_parse@@Base+0x1544>
   18bf8:	mov	lr, r5
   18bfc:	mov	ip, #0
   18c00:	ldr	r4, [lr, #4]!
   18c04:	add	ip, ip, #1
   18c08:	cmp	r4, #0
   18c0c:	bne	18c00 <argp_parse@@Base+0x1534>
   18c10:	stm	sp, {r5, ip}
   18c14:	bl	188d8 <argp_parse@@Base+0x120c>
   18c18:	add	sp, sp, #12
   18c1c:	ldrd	r4, [sp]
   18c20:	add	sp, sp, #8
   18c24:	pop	{pc}		; (ldr pc, [sp], #4)
   18c28:	strd	r4, [sp, #-16]!
   18c2c:	mov	ip, #0
   18c30:	str	r6, [sp, #8]
   18c34:	str	lr, [sp, #12]
   18c38:	sub	sp, sp, #48	; 0x30
   18c3c:	ldr	r5, [sp, #64]	; 0x40
   18c40:	add	r6, sp, #8
   18c44:	mov	r4, r6
   18c48:	ldr	lr, [r5], #4
   18c4c:	cmp	lr, #0
   18c50:	str	lr, [r4], #4
   18c54:	beq	18c64 <argp_parse@@Base+0x1598>
   18c58:	add	ip, ip, #1
   18c5c:	cmp	ip, #10
   18c60:	bne	18c48 <argp_parse@@Base+0x157c>
   18c64:	stm	sp, {r6, ip}
   18c68:	bl	188d8 <argp_parse@@Base+0x120c>
   18c6c:	add	sp, sp, #48	; 0x30
   18c70:	ldrd	r4, [sp]
   18c74:	ldr	r6, [sp, #8]
   18c78:	add	sp, sp, #12
   18c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   18c80:	push	{r3}		; (str r3, [sp, #-4]!)
   18c84:	mov	ip, #0
   18c88:	strd	r4, [sp, #-12]!
   18c8c:	str	lr, [sp, #8]
   18c90:	sub	sp, sp, #56	; 0x38
   18c94:	add	r3, sp, #72	; 0x48
   18c98:	add	r5, sp, #16
   18c9c:	mov	r4, r3
   18ca0:	mov	lr, r5
   18ca4:	str	r3, [sp, #12]
   18ca8:	ldr	r3, [r4], #4
   18cac:	cmp	r3, #0
   18cb0:	str	r3, [lr], #4
   18cb4:	beq	18cc4 <argp_parse@@Base+0x15f8>
   18cb8:	add	ip, ip, #1
   18cbc:	cmp	ip, #10
   18cc0:	bne	18ca8 <argp_parse@@Base+0x15dc>
   18cc4:	ldr	r3, [sp, #68]	; 0x44
   18cc8:	stm	sp, {r5, ip}
   18ccc:	bl	188d8 <argp_parse@@Base+0x120c>
   18cd0:	add	sp, sp, #56	; 0x38
   18cd4:	ldrd	r4, [sp]
   18cd8:	ldr	lr, [sp, #8]
   18cdc:	add	sp, sp, #12
   18ce0:	add	sp, sp, #4
   18ce4:	bx	lr
   18ce8:	movw	r3, #50268	; 0xc45c
   18cec:	movt	r3, #2
   18cf0:	str	r4, [sp, #-8]!
   18cf4:	mov	r0, #10
   18cf8:	ldr	r1, [r3]
   18cfc:	str	lr, [sp, #4]
   18d00:	bl	1149c <fputc@plt>
   18d04:	movw	r1, #46904	; 0xb738
   18d08:	movt	r1, #1
   18d0c:	movw	r0, #46928	; 0xb750
   18d10:	movt	r0, #1
   18d14:	bl	111f0 <printf@plt>
   18d18:	movw	r2, #46948	; 0xb764
   18d1c:	movt	r2, #1
   18d20:	movw	r1, #46208	; 0xb480
   18d24:	movt	r1, #1
   18d28:	movw	r0, #46988	; 0xb78c
   18d2c:	movt	r0, #1
   18d30:	bl	111f0 <printf@plt>
   18d34:	movw	r1, #47008	; 0xb7a0
   18d38:	movt	r1, #1
   18d3c:	ldr	r4, [sp]
   18d40:	movw	r0, #47040	; 0xb7c0
   18d44:	movt	r0, #1
   18d48:	ldr	lr, [sp, #4]
   18d4c:	add	sp, sp, #8
   18d50:	b	111f0 <printf@plt>
   18d54:	str	r4, [sp, #-8]!
   18d58:	str	lr, [sp, #4]
   18d5c:	bl	19270 <argp_parse@@Base+0x1ba4>
   18d60:	cmp	r0, #0
   18d64:	beq	18d74 <argp_parse@@Base+0x16a8>
   18d68:	ldr	r4, [sp]
   18d6c:	add	sp, sp, #4
   18d70:	pop	{pc}		; (ldr pc, [sp], #4)
   18d74:	bl	191cc <argp_parse@@Base+0x1b00>
   18d78:	str	r4, [sp, #-8]!
   18d7c:	str	lr, [sp, #4]
   18d80:	bl	19270 <argp_parse@@Base+0x1ba4>
   18d84:	cmp	r0, #0
   18d88:	beq	18d98 <argp_parse@@Base+0x16cc>
   18d8c:	ldr	r4, [sp]
   18d90:	add	sp, sp, #4
   18d94:	pop	{pc}		; (ldr pc, [sp], #4)
   18d98:	bl	191cc <argp_parse@@Base+0x1b00>
   18d9c:	str	r4, [sp, #-8]!
   18da0:	str	lr, [sp, #4]
   18da4:	bl	19270 <argp_parse@@Base+0x1ba4>
   18da8:	cmp	r0, #0
   18dac:	beq	18dbc <argp_parse@@Base+0x16f0>
   18db0:	ldr	r4, [sp]
   18db4:	add	sp, sp, #4
   18db8:	pop	{pc}		; (ldr pc, [sp], #4)
   18dbc:	bl	191cc <argp_parse@@Base+0x1b00>
   18dc0:	strd	r4, [sp, #-16]!
   18dc4:	mov	r5, r0
   18dc8:	mov	r4, r1
   18dcc:	str	r6, [sp, #8]
   18dd0:	str	lr, [sp, #12]
   18dd4:	bl	192ac <argp_parse@@Base+0x1be0>
   18dd8:	cmp	r0, #0
   18ddc:	beq	18df0 <argp_parse@@Base+0x1724>
   18de0:	ldrd	r4, [sp]
   18de4:	ldr	r6, [sp, #8]
   18de8:	add	sp, sp, #12
   18dec:	pop	{pc}		; (ldr pc, [sp], #4)
   18df0:	adds	r4, r4, #0
   18df4:	movne	r4, #1
   18df8:	cmp	r5, #0
   18dfc:	moveq	r4, #1
   18e00:	cmp	r4, #0
   18e04:	beq	18de0 <argp_parse@@Base+0x1714>
   18e08:	bl	191cc <argp_parse@@Base+0x1b00>
   18e0c:	cmp	r1, #0
   18e10:	orreq	r1, r1, #1
   18e14:	str	r4, [sp, #-8]!
   18e18:	str	lr, [sp, #4]
   18e1c:	bl	192ac <argp_parse@@Base+0x1be0>
   18e20:	cmp	r0, #0
   18e24:	beq	18e34 <argp_parse@@Base+0x1768>
   18e28:	ldr	r4, [sp]
   18e2c:	add	sp, sp, #4
   18e30:	pop	{pc}		; (ldr pc, [sp], #4)
   18e34:	bl	191cc <argp_parse@@Base+0x1b00>
   18e38:	strd	r4, [sp, #-16]!
   18e3c:	mov	r4, r0
   18e40:	mov	r5, r2
   18e44:	str	r6, [sp, #8]
   18e48:	mov	r6, r1
   18e4c:	str	lr, [sp, #12]
   18e50:	bl	1a744 <argp_parse@@Base+0x3078>
   18e54:	cmp	r0, #0
   18e58:	beq	18e6c <argp_parse@@Base+0x17a0>
   18e5c:	ldrd	r4, [sp]
   18e60:	ldr	r6, [sp, #8]
   18e64:	add	sp, sp, #12
   18e68:	pop	{pc}		; (ldr pc, [sp], #4)
   18e6c:	cmp	r4, #0
   18e70:	beq	18e80 <argp_parse@@Base+0x17b4>
   18e74:	cmp	r6, #0
   18e78:	cmpne	r5, #0
   18e7c:	beq	18e5c <argp_parse@@Base+0x1790>
   18e80:	bl	191cc <argp_parse@@Base+0x1b00>
   18e84:	b	18e38 <argp_parse@@Base+0x176c>
   18e88:	cmp	r2, #0
   18e8c:	cmpne	r1, #0
   18e90:	str	r4, [sp, #-8]!
   18e94:	moveq	r2, #1
   18e98:	str	lr, [sp, #4]
   18e9c:	moveq	r1, r2
   18ea0:	bl	1a744 <argp_parse@@Base+0x3078>
   18ea4:	cmp	r0, #0
   18ea8:	beq	18eb8 <argp_parse@@Base+0x17ec>
   18eac:	ldr	r4, [sp]
   18eb0:	add	sp, sp, #4
   18eb4:	pop	{pc}		; (ldr pc, [sp], #4)
   18eb8:	bl	191cc <argp_parse@@Base+0x1b00>
   18ebc:	mov	r2, r1
   18ec0:	mov	r1, r0
   18ec4:	mov	r0, #0
   18ec8:	b	18e38 <argp_parse@@Base+0x176c>
   18ecc:	mov	r2, r1
   18ed0:	mov	r1, r0
   18ed4:	mov	r0, #0
   18ed8:	b	18e88 <argp_parse@@Base+0x17bc>
   18edc:	cmp	r0, #0
   18ee0:	strd	r4, [sp, #-16]!
   18ee4:	mov	r5, r1
   18ee8:	ldr	r4, [r1]
   18eec:	str	r6, [sp, #8]
   18ef0:	str	lr, [sp, #12]
   18ef4:	beq	18f24 <argp_parse@@Base+0x1858>
   18ef8:	lsr	r3, r4, #1
   18efc:	add	r3, r3, #1
   18f00:	adds	r4, r4, r3
   18f04:	bcs	18f40 <argp_parse@@Base+0x1874>
   18f08:	mov	r1, r4
   18f0c:	bl	18e38 <argp_parse@@Base+0x176c>
   18f10:	ldr	r6, [sp, #8]
   18f14:	str	r4, [r5]
   18f18:	ldrd	r4, [sp]
   18f1c:	add	sp, sp, #12
   18f20:	pop	{pc}		; (ldr pc, [sp], #4)
   18f24:	cmp	r4, #0
   18f28:	bne	18f08 <argp_parse@@Base+0x183c>
   18f2c:	mov	r4, #64	; 0x40
   18f30:	udiv	r4, r4, r2
   18f34:	cmp	r2, #64	; 0x40
   18f38:	addhi	r4, r4, #1
   18f3c:	b	18f08 <argp_parse@@Base+0x183c>
   18f40:	bl	191cc <argp_parse@@Base+0x1b00>
   18f44:	mov	r2, #1
   18f48:	b	18edc <argp_parse@@Base+0x1810>
   18f4c:	ldr	ip, [r1]
   18f50:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18f54:	mov	r5, r1
   18f58:	strd	r6, [sp, #8]
   18f5c:	str	lr, [sp, #28]
   18f60:	strd	r8, [sp, #16]
   18f64:	asr	lr, ip, #1
   18f68:	ldr	r8, [sp, #32]
   18f6c:	str	sl, [sp, #24]
   18f70:	adds	r4, ip, lr
   18f74:	mvn	lr, r3
   18f78:	lsr	lr, lr, #31
   18f7c:	mvnvs	r4, #-2147483648	; 0x80000000
   18f80:	cmp	r3, r4
   18f84:	movge	r1, #0
   18f88:	andlt	r1, lr, #1
   18f8c:	cmp	r1, #0
   18f90:	movne	r4, r3
   18f94:	smull	r6, r7, r4, r8
   18f98:	cmp	r7, r6, asr #31
   18f9c:	bne	19024 <argp_parse@@Base+0x1958>
   18fa0:	cmp	r6, #63	; 0x3f
   18fa4:	mov	r1, r6
   18fa8:	ble	1900c <argp_parse@@Base+0x1940>
   18fac:	cmp	r0, #0
   18fb0:	sub	r6, r4, ip
   18fb4:	streq	r0, [r5]
   18fb8:	cmp	r6, r2
   18fbc:	bge	18fec <argp_parse@@Base+0x1920>
   18fc0:	adds	r4, ip, r2
   18fc4:	bvs	19020 <argp_parse@@Base+0x1954>
   18fc8:	cmp	r4, r3
   18fcc:	movle	r3, #0
   18fd0:	andgt	r3, lr, #1
   18fd4:	cmp	r3, #0
   18fd8:	bne	19020 <argp_parse@@Base+0x1954>
   18fdc:	smull	r8, r9, r4, r8
   18fe0:	cmp	r9, r8, asr #31
   18fe4:	mov	r1, r8
   18fe8:	bne	19020 <argp_parse@@Base+0x1954>
   18fec:	bl	18dc0 <argp_parse@@Base+0x16f4>
   18ff0:	ldrd	r6, [sp, #8]
   18ff4:	ldrd	r8, [sp, #16]
   18ff8:	ldr	sl, [sp, #24]
   18ffc:	str	r4, [r5]
   19000:	ldrd	r4, [sp]
   19004:	add	sp, sp, #28
   19008:	pop	{pc}		; (ldr pc, [sp], #4)
   1900c:	mov	r6, #64	; 0x40
   19010:	sdiv	r4, r6, r8
   19014:	mls	r1, r8, r4, r6
   19018:	sub	r1, r6, r1
   1901c:	b	18fac <argp_parse@@Base+0x18e0>
   19020:	bl	191cc <argp_parse@@Base+0x1b00>
   19024:	mvn	r6, #-2147483648	; 0x80000000
   19028:	b	19010 <argp_parse@@Base+0x1944>
   1902c:	mov	r1, #1
   19030:	str	r4, [sp, #-8]!
   19034:	str	lr, [sp, #4]
   19038:	bl	191fc <argp_parse@@Base+0x1b30>
   1903c:	cmp	r0, #0
   19040:	beq	19050 <argp_parse@@Base+0x1984>
   19044:	ldr	r4, [sp]
   19048:	add	sp, sp, #4
   1904c:	pop	{pc}		; (ldr pc, [sp], #4)
   19050:	bl	191cc <argp_parse@@Base+0x1b00>
   19054:	mov	r1, #1
   19058:	str	r4, [sp, #-8]!
   1905c:	str	lr, [sp, #4]
   19060:	bl	191fc <argp_parse@@Base+0x1b30>
   19064:	cmp	r0, #0
   19068:	beq	19078 <argp_parse@@Base+0x19ac>
   1906c:	ldr	r4, [sp]
   19070:	add	sp, sp, #4
   19074:	pop	{pc}		; (ldr pc, [sp], #4)
   19078:	bl	191cc <argp_parse@@Base+0x1b00>
   1907c:	str	r4, [sp, #-8]!
   19080:	str	lr, [sp, #4]
   19084:	bl	191fc <argp_parse@@Base+0x1b30>
   19088:	cmp	r0, #0
   1908c:	beq	1909c <argp_parse@@Base+0x19d0>
   19090:	ldr	r4, [sp]
   19094:	add	sp, sp, #4
   19098:	pop	{pc}		; (ldr pc, [sp], #4)
   1909c:	bl	191cc <argp_parse@@Base+0x1b00>
   190a0:	str	r4, [sp, #-8]!
   190a4:	str	lr, [sp, #4]
   190a8:	bl	191fc <argp_parse@@Base+0x1b30>
   190ac:	cmp	r0, #0
   190b0:	beq	190c0 <argp_parse@@Base+0x19f4>
   190b4:	ldr	r4, [sp]
   190b8:	add	sp, sp, #4
   190bc:	pop	{pc}		; (ldr pc, [sp], #4)
   190c0:	bl	191cc <argp_parse@@Base+0x1b00>
   190c4:	strd	r4, [sp, #-16]!
   190c8:	mov	r4, r1
   190cc:	str	r6, [sp, #8]
   190d0:	mov	r6, r0
   190d4:	mov	r0, r1
   190d8:	str	lr, [sp, #12]
   190dc:	bl	19270 <argp_parse@@Base+0x1ba4>
   190e0:	subs	r5, r0, #0
   190e4:	beq	19108 <argp_parse@@Base+0x1a3c>
   190e8:	mov	r2, r4
   190ec:	mov	r1, r6
   190f0:	bl	11268 <memcpy@plt>
   190f4:	mov	r0, r5
   190f8:	ldrd	r4, [sp]
   190fc:	ldr	r6, [sp, #8]
   19100:	add	sp, sp, #12
   19104:	pop	{pc}		; (ldr pc, [sp], #4)
   19108:	bl	191cc <argp_parse@@Base+0x1b00>
   1910c:	strd	r4, [sp, #-16]!
   19110:	mov	r4, r1
   19114:	str	r6, [sp, #8]
   19118:	mov	r6, r0
   1911c:	mov	r0, r1
   19120:	str	lr, [sp, #12]
   19124:	bl	19270 <argp_parse@@Base+0x1ba4>
   19128:	subs	r5, r0, #0
   1912c:	beq	19150 <argp_parse@@Base+0x1a84>
   19130:	mov	r2, r4
   19134:	mov	r1, r6
   19138:	bl	11268 <memcpy@plt>
   1913c:	mov	r0, r5
   19140:	ldrd	r4, [sp]
   19144:	ldr	r6, [sp, #8]
   19148:	add	sp, sp, #12
   1914c:	pop	{pc}		; (ldr pc, [sp], #4)
   19150:	bl	191cc <argp_parse@@Base+0x1b00>
   19154:	strd	r4, [sp, #-16]!
   19158:	mov	r4, r1
   1915c:	str	r6, [sp, #8]
   19160:	mov	r6, r0
   19164:	add	r0, r1, #1
   19168:	str	lr, [sp, #12]
   1916c:	bl	19270 <argp_parse@@Base+0x1ba4>
   19170:	subs	r5, r0, #0
   19174:	beq	191a0 <argp_parse@@Base+0x1ad4>
   19178:	mov	r3, #0
   1917c:	mov	r1, r6
   19180:	mov	r2, r4
   19184:	strb	r3, [r5, r4]
   19188:	bl	11268 <memcpy@plt>
   1918c:	mov	r0, r5
   19190:	ldrd	r4, [sp]
   19194:	ldr	r6, [sp, #8]
   19198:	add	sp, sp, #12
   1919c:	pop	{pc}		; (ldr pc, [sp], #4)
   191a0:	bl	191cc <argp_parse@@Base+0x1b00>
   191a4:	str	r4, [sp, #-8]!
   191a8:	mov	r4, r0
   191ac:	str	lr, [sp, #4]
   191b0:	bl	113b8 <strlen@plt>
   191b4:	add	r1, r0, #1
   191b8:	mov	r0, r4
   191bc:	ldr	r4, [sp]
   191c0:	ldr	lr, [sp, #4]
   191c4:	add	sp, sp, #8
   191c8:	b	190c4 <argp_parse@@Base+0x19f8>
   191cc:	movw	r3, #50228	; 0xc434
   191d0:	movt	r3, #2
   191d4:	str	r4, [sp, #-8]!
   191d8:	movw	r2, #43288	; 0xa918
   191dc:	movt	r2, #1
   191e0:	ldr	r0, [r3]
   191e4:	mov	r1, #0
   191e8:	movw	r3, #47128	; 0xb818
   191ec:	movt	r3, #1
   191f0:	str	lr, [sp, #4]
   191f4:	bl	1131c <error@plt>
   191f8:	bl	11514 <abort@plt>
   191fc:	cmp	r1, #0
   19200:	cmpne	r0, #0
   19204:	beq	19250 <argp_parse@@Base+0x1b84>
   19208:	strd	r4, [sp, #-16]!
   1920c:	umull	r4, r5, r0, r1
   19210:	str	r6, [sp, #8]
   19214:	str	lr, [sp, #12]
   19218:	adds	r3, r5, #0
   1921c:	movne	r3, #1
   19220:	cmp	r4, #0
   19224:	blt	19230 <argp_parse@@Base+0x1b64>
   19228:	cmp	r3, #0
   1922c:	beq	1925c <argp_parse@@Base+0x1b90>
   19230:	bl	113dc <__errno_location@plt>
   19234:	mov	r3, #12
   19238:	ldrd	r4, [sp]
   1923c:	ldr	r6, [sp, #8]
   19240:	add	sp, sp, #12
   19244:	str	r3, [r0]
   19248:	mov	r0, #0
   1924c:	pop	{pc}		; (ldr pc, [sp], #4)
   19250:	mov	r1, #1
   19254:	mov	r0, r1
   19258:	b	111c0 <calloc@plt>
   1925c:	ldrd	r4, [sp]
   19260:	ldr	r6, [sp, #8]
   19264:	ldr	lr, [sp, #12]
   19268:	add	sp, sp, #16
   1926c:	b	111c0 <calloc@plt>
   19270:	cmp	r0, #0
   19274:	beq	19280 <argp_parse@@Base+0x1bb4>
   19278:	blt	19288 <argp_parse@@Base+0x1bbc>
   1927c:	b	1134c <malloc@plt>
   19280:	mov	r0, #1
   19284:	b	1134c <malloc@plt>
   19288:	str	r4, [sp, #-8]!
   1928c:	str	lr, [sp, #4]
   19290:	bl	113dc <__errno_location@plt>
   19294:	mov	r3, #12
   19298:	ldr	r4, [sp]
   1929c:	add	sp, sp, #4
   192a0:	str	r3, [r0]
   192a4:	mov	r0, #0
   192a8:	pop	{pc}		; (ldr pc, [sp], #4)
   192ac:	cmp	r0, #0
   192b0:	beq	192d8 <argp_parse@@Base+0x1c0c>
   192b4:	cmp	r1, #0
   192b8:	str	r4, [sp, #-8]!
   192bc:	str	lr, [sp, #4]
   192c0:	beq	192e0 <argp_parse@@Base+0x1c14>
   192c4:	blt	192f4 <argp_parse@@Base+0x1c28>
   192c8:	ldr	r4, [sp]
   192cc:	ldr	lr, [sp, #4]
   192d0:	add	sp, sp, #8
   192d4:	b	112b0 <realloc@plt>
   192d8:	mov	r0, r1
   192dc:	b	19270 <argp_parse@@Base+0x1ba4>
   192e0:	bl	186b0 <argp_parse@@Base+0xfe4>
   192e4:	ldr	r4, [sp]
   192e8:	add	sp, sp, #4
   192ec:	mov	r0, #0
   192f0:	pop	{pc}		; (ldr pc, [sp], #4)
   192f4:	bl	113dc <__errno_location@plt>
   192f8:	mov	r3, #12
   192fc:	str	r3, [r0]
   19300:	b	192e4 <argp_parse@@Base+0x1c18>
   19304:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19308:	mov	r5, r3
   1930c:	strd	r6, [sp, #8]
   19310:	mov	r7, r1
   19314:	mov	r6, r2
   19318:	str	r8, [sp, #16]
   1931c:	mov	r8, r0
   19320:	mov	r0, #36	; 0x24
   19324:	str	lr, [sp, #20]
   19328:	bl	19270 <argp_parse@@Base+0x1ba4>
   1932c:	subs	r4, r0, #0
   19330:	beq	19374 <argp_parse@@Base+0x1ca8>
   19334:	mov	r3, #0
   19338:	mov	r0, #200	; 0xc8
   1933c:	str	r8, [r4]
   19340:	str	r7, [r4, #4]
   19344:	str	r6, [r4, #8]
   19348:	str	r5, [r4, #12]
   1934c:	str	r3, [r4, #16]
   19350:	str	r3, [r4, #20]
   19354:	bl	19270 <argp_parse@@Base+0x1ba4>
   19358:	cmp	r0, #0
   1935c:	mov	r3, r0
   19360:	str	r0, [r4, #24]
   19364:	addne	r2, r0, #200	; 0xc8
   19368:	strne	r0, [r4, #28]
   1936c:	strne	r2, [r4, #32]
   19370:	beq	1938c <argp_parse@@Base+0x1cc0>
   19374:	mov	r0, r4
   19378:	ldrd	r4, [sp]
   1937c:	ldrd	r6, [sp, #8]
   19380:	ldr	r8, [sp, #16]
   19384:	add	sp, sp, #20
   19388:	pop	{pc}		; (ldr pc, [sp], #4)
   1938c:	mov	r0, r4
   19390:	mov	r4, r3
   19394:	bl	186b0 <argp_parse@@Base+0xfe4>
   19398:	b	19374 <argp_parse@@Base+0x1ca8>
   1939c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   193a0:	mov	r5, r0
   193a4:	ldr	r3, [r0, #16]
   193a8:	ldr	r4, [r0, #24]
   193ac:	strd	r6, [sp, #8]
   193b0:	strd	r8, [sp, #16]
   193b4:	ldr	r8, [r0, #28]
   193b8:	strd	sl, [sp, #24]
   193bc:	add	r4, r4, r3
   193c0:	str	lr, [sp, #32]
   193c4:	sub	sp, sp, #12
   193c8:	cmp	r4, r8
   193cc:	bcs	194e0 <argp_parse@@Base+0x1e14>
   193d0:	ldr	r6, [r5, #20]
   193d4:	cmp	r6, #0
   193d8:	bne	19438 <argp_parse@@Base+0x1d6c>
   193dc:	ldr	r7, [r5, #4]
   193e0:	cmp	r7, #0
   193e4:	beq	196c0 <argp_parse@@Base+0x1ff4>
   193e8:	ldr	r2, [r5, #32]
   193ec:	add	r3, r8, r7
   193f0:	cmp	r2, r3
   193f4:	bls	197ac <argp_parse@@Base+0x20e0>
   193f8:	add	r6, r4, r7
   193fc:	sub	r2, r8, r4
   19400:	mov	r1, r4
   19404:	mov	r0, r6
   19408:	bl	11220 <memmove@plt>
   1940c:	ldr	r3, [r5, #28]
   19410:	mov	r0, r4
   19414:	mov	r2, r7
   19418:	mov	r1, #32
   1941c:	mov	r4, r6
   19420:	add	r3, r3, r7
   19424:	str	r3, [r5, #28]
   19428:	bl	1140c <memset@plt>
   1942c:	ldr	r8, [r5, #28]
   19430:	mov	r6, r7
   19434:	str	r7, [r5, #20]
   19438:	sub	r9, r8, r4
   1943c:	mov	r1, #10
   19440:	mov	r2, r9
   19444:	mov	r0, r4
   19448:	bl	1143c <memchr@plt>
   1944c:	cmp	r6, #0
   19450:	mov	fp, r0
   19454:	bge	19460 <argp_parse@@Base+0x1d94>
   19458:	mov	r6, #0
   1945c:	str	r6, [r5, #20]
   19460:	cmp	fp, #0
   19464:	ldr	r3, [r5, #8]
   19468:	beq	19508 <argp_parse@@Base+0x1e3c>
   1946c:	sub	r2, fp, r4
   19470:	add	r2, r2, r6
   19474:	cmp	r2, r3
   19478:	blt	196dc <argp_parse@@Base+0x2010>
   1947c:	ldr	sl, [r5, #12]
   19480:	sub	r7, r3, #1
   19484:	str	r3, [sp, #4]
   19488:	cmp	sl, #0
   1948c:	bge	19528 <argp_parse@@Base+0x1e5c>
   19490:	cmp	r8, fp
   19494:	bls	19860 <argp_parse@@Base+0x2194>
   19498:	sub	r0, r7, r6
   1949c:	sub	r2, r8, fp
   194a0:	add	r0, r4, r0
   194a4:	mov	r1, fp
   194a8:	bl	11220 <memmove@plt>
   194ac:	ldr	r2, [r5, #20]
   194b0:	mov	r3, #0
   194b4:	str	r3, [r5, #20]
   194b8:	ldr	r3, [sp, #4]
   194bc:	ldr	r8, [r5, #28]
   194c0:	sub	r7, r7, r2
   194c4:	add	r7, r4, r7
   194c8:	sub	fp, r7, fp
   194cc:	add	r4, r4, r3
   194d0:	sub	r8, r8, fp
   194d4:	cmp	r4, r8
   194d8:	str	r8, [r5, #28]
   194dc:	bcc	193d0 <argp_parse@@Base+0x1d04>
   194e0:	ldr	r3, [r5, #24]
   194e4:	sub	r8, r8, r3
   194e8:	str	r8, [r5, #16]
   194ec:	add	sp, sp, #12
   194f0:	ldrd	r4, [sp]
   194f4:	ldrd	r6, [sp, #8]
   194f8:	ldrd	r8, [sp, #16]
   194fc:	ldrd	sl, [sp, #24]
   19500:	add	sp, sp, #32
   19504:	pop	{pc}		; (ldr pc, [sp], #4)
   19508:	add	r1, r6, r9
   1950c:	cmp	r1, r3
   19510:	bcc	198cc <argp_parse@@Base+0x2200>
   19514:	ldr	sl, [r5, #12]
   19518:	sub	r7, r3, #1
   1951c:	cmp	sl, #0
   19520:	blt	19864 <argp_parse@@Base+0x2198>
   19524:	mov	fp, r8
   19528:	add	r7, r7, #1
   1952c:	sub	r6, r7, r6
   19530:	adds	r6, r4, r6
   19534:	bcs	19720 <argp_parse@@Base+0x2054>
   19538:	bl	11394 <__ctype_b_loc@plt>
   1953c:	mov	r3, r6
   19540:	ldr	ip, [r0]
   19544:	b	19554 <argp_parse@@Base+0x1e88>
   19548:	cmp	r4, r0
   1954c:	mov	r3, r0
   19550:	bhi	19724 <argp_parse@@Base+0x2058>
   19554:	ldrb	r1, [r3]
   19558:	mov	r7, r3
   1955c:	sub	r0, r3, #1
   19560:	lsl	r1, r1, #1
   19564:	ldrh	r1, [ip, r1]
   19568:	tst	r1, #1
   1956c:	beq	19548 <argp_parse@@Base+0x1e7c>
   19570:	add	r0, r3, #1
   19574:	cmp	r4, r0
   19578:	bcs	19734 <argp_parse@@Base+0x2068>
   1957c:	cmp	r4, r3
   19580:	movhi	r6, r0
   19584:	movhi	r7, r6
   19588:	bls	195a4 <argp_parse@@Base+0x1ed8>
   1958c:	b	195b8 <argp_parse@@Base+0x1eec>
   19590:	ldrb	r1, [r6, #-1]
   19594:	lsl	r1, r1, #1
   19598:	ldrh	r1, [ip, r1]
   1959c:	tst	r1, #1
   195a0:	beq	195b4 <argp_parse@@Base+0x1ee8>
   195a4:	cmp	r4, r3
   195a8:	mov	r6, r3
   195ac:	sub	r3, r3, #1
   195b0:	bne	19590 <argp_parse@@Base+0x1ec4>
   195b4:	mov	r7, r0
   195b8:	add	r3, r9, #1
   195bc:	add	r3, r4, r3
   195c0:	cmp	r7, r3
   195c4:	beq	196f0 <argp_parse@@Base+0x2024>
   195c8:	add	r1, r6, #1
   195cc:	sub	r3, r7, r1
   195d0:	cmp	r3, sl
   195d4:	bge	19708 <argp_parse@@Base+0x203c>
   195d8:	cmp	r7, r8
   195dc:	bcs	19700 <argp_parse@@Base+0x2034>
   195e0:	ldr	r3, [r5, #32]
   195e4:	add	sl, sl, #1
   195e8:	sub	r3, r3, r8
   195ec:	cmp	r3, sl
   195f0:	bgt	19878 <argp_parse@@Base+0x21ac>
   195f4:	ldr	r3, [r5]
   195f8:	ldr	r0, [r5, #24]
   195fc:	cmp	r0, r6
   19600:	bcs	19614 <argp_parse@@Base+0x1f48>
   19604:	sub	r2, r6, r0
   19608:	mov	r1, #1
   1960c:	bl	11280 <fwrite_unlocked@plt>
   19610:	ldr	r3, [r5]
   19614:	ldr	r2, [r3, #20]
   19618:	ldr	r1, [r3, #24]
   1961c:	cmp	r2, r1
   19620:	addcc	r1, r2, #1
   19624:	strcc	r1, [r3, #20]
   19628:	movcc	r3, #10
   1962c:	strbcc	r3, [r2]
   19630:	bcs	198bc <argp_parse@@Base+0x21f0>
   19634:	ldr	fp, [r5, #24]
   19638:	sub	r4, r4, fp
   1963c:	sub	r3, r7, fp
   19640:	add	r9, r9, r4
   19644:	mov	r8, r3
   19648:	mov	r4, fp
   1964c:	ldr	r2, [r5, #12]
   19650:	cmp	r2, r3
   19654:	ble	19678 <argp_parse@@Base+0x1fac>
   19658:	add	r3, r9, #1
   1965c:	add	r3, fp, r3
   19660:	cmp	r7, r3
   19664:	bne	19768 <argp_parse@@Base+0x209c>
   19668:	ldr	r3, [r5, #32]
   1966c:	sub	r3, r3, r7
   19670:	cmp	r2, r3
   19674:	bgt	19768 <argp_parse@@Base+0x209c>
   19678:	cmp	r2, #0
   1967c:	ble	1969c <argp_parse@@Base+0x1fd0>
   19680:	mov	r3, #0
   19684:	mov	r1, #32
   19688:	strb	r1, [r4], #1
   1968c:	add	r3, r3, #1
   19690:	ldr	r2, [r5, #12]
   19694:	cmp	r2, r3
   19698:	bgt	19688 <argp_parse@@Base+0x1fbc>
   1969c:	cmp	r4, r7
   196a0:	bcc	197f8 <argp_parse@@Base+0x212c>
   196a4:	sub	r8, r9, r8
   196a8:	cmp	r2, #0
   196ac:	add	r8, r4, r8
   196b0:	mvneq	r2, #0
   196b4:	str	r2, [r5, #20]
   196b8:	str	r8, [r5, #28]
   196bc:	b	193c8 <argp_parse@@Base+0x1cfc>
   196c0:	sub	r9, r8, r4
   196c4:	mov	r1, #10
   196c8:	mov	r2, r9
   196cc:	mov	r0, r4
   196d0:	bl	1143c <memchr@plt>
   196d4:	mov	fp, r0
   196d8:	b	19460 <argp_parse@@Base+0x1d94>
   196dc:	mov	r3, #0
   196e0:	add	r4, fp, #1
   196e4:	ldr	r8, [r5, #28]
   196e8:	str	r3, [r5, #20]
   196ec:	b	193c8 <argp_parse@@Base+0x1cfc>
   196f0:	ldr	r3, [r5, #32]
   196f4:	sub	r3, r3, r6
   196f8:	cmp	r3, sl
   196fc:	ble	195d8 <argp_parse@@Base+0x1f0c>
   19700:	add	r1, r6, #1
   19704:	sub	r3, r7, r1
   19708:	mov	r2, #10
   1970c:	sub	r8, r7, r4
   19710:	mov	fp, r4
   19714:	mov	r4, r1
   19718:	strb	r2, [r6]
   1971c:	b	1964c <argp_parse@@Base+0x1f80>
   19720:	add	r7, r6, #1
   19724:	cmp	r4, r7
   19728:	bcs	19734 <argp_parse@@Base+0x2068>
   1972c:	mov	r6, r7
   19730:	b	195b8 <argp_parse@@Base+0x1eec>
   19734:	cmp	r6, fp
   19738:	bcc	19828 <argp_parse@@Base+0x215c>
   1973c:	cmp	r6, fp
   19740:	beq	19814 <argp_parse@@Base+0x2148>
   19744:	bl	11394 <__ctype_b_loc@plt>
   19748:	ldr	r1, [r0]
   1974c:	mov	r7, r6
   19750:	ldrb	r3, [r7, #1]!
   19754:	lsl	r3, r3, #1
   19758:	ldrh	r3, [r1, r3]
   1975c:	tst	r3, #1
   19760:	bne	19750 <argp_parse@@Base+0x2084>
   19764:	b	195b8 <argp_parse@@Base+0x1eec>
   19768:	cmp	r2, #0
   1976c:	movgt	r6, #0
   19770:	movgt	sl, #32
   19774:	ble	1969c <argp_parse@@Base+0x1fd0>
   19778:	ldr	r0, [r5]
   1977c:	ldr	r2, [r0, #20]
   19780:	ldr	r1, [r0, #24]
   19784:	add	ip, r2, #1
   19788:	cmp	r2, r1
   1978c:	strcc	ip, [r0, #20]
   19790:	strbcc	sl, [r2]
   19794:	bcs	197ec <argp_parse@@Base+0x2120>
   19798:	ldr	r2, [r5, #12]
   1979c:	add	r6, r6, #1
   197a0:	cmp	r2, r6
   197a4:	bgt	19778 <argp_parse@@Base+0x20ac>
   197a8:	b	1969c <argp_parse@@Base+0x1fd0>
   197ac:	mov	r8, #32
   197b0:	b	197c0 <argp_parse@@Base+0x20f4>
   197b4:	add	r6, r6, #1
   197b8:	cmp	r7, r6
   197bc:	beq	1942c <argp_parse@@Base+0x1d60>
   197c0:	ldr	r0, [r5]
   197c4:	ldr	r3, [r0, #20]
   197c8:	ldr	r2, [r0, #24]
   197cc:	add	r1, r3, #1
   197d0:	cmp	r3, r2
   197d4:	strcc	r1, [r0, #20]
   197d8:	strbcc	r8, [r3]
   197dc:	bcc	197b4 <argp_parse@@Base+0x20e8>
   197e0:	mov	r1, #32
   197e4:	bl	1146c <__overflow@plt>
   197e8:	b	197b4 <argp_parse@@Base+0x20e8>
   197ec:	mov	r1, #32
   197f0:	bl	1146c <__overflow@plt>
   197f4:	b	19798 <argp_parse@@Base+0x20cc>
   197f8:	add	r2, fp, r9
   197fc:	mov	r1, r7
   19800:	sub	r2, r2, r7
   19804:	mov	r0, r4
   19808:	bl	11220 <memmove@plt>
   1980c:	ldr	r2, [r5, #12]
   19810:	b	196a4 <argp_parse@@Base+0x1fd8>
   19814:	mov	r3, #0
   19818:	add	r4, r6, #1
   1981c:	ldr	r8, [r5, #28]
   19820:	str	r3, [r5, #20]
   19824:	b	193c8 <argp_parse@@Base+0x1cfc>
   19828:	add	r7, r6, #1
   1982c:	b	19850 <argp_parse@@Base+0x2184>
   19830:	bl	11394 <__ctype_b_loc@plt>
   19834:	ldrb	r3, [r7]
   19838:	add	r7, r7, #1
   1983c:	ldr	r1, [r0]
   19840:	lsl	r3, r3, #1
   19844:	ldrh	r3, [r1, r3]
   19848:	tst	r3, #1
   1984c:	bne	1974c <argp_parse@@Base+0x2080>
   19850:	cmp	fp, r7
   19854:	mov	r6, r7
   19858:	bne	19830 <argp_parse@@Base+0x2164>
   1985c:	b	1973c <argp_parse@@Base+0x2070>
   19860:	add	r1, r9, r6
   19864:	sub	r7, r7, r1
   19868:	str	r1, [r5, #20]
   1986c:	add	r8, r8, r7
   19870:	str	r8, [r5, #28]
   19874:	b	194e0 <argp_parse@@Base+0x1e14>
   19878:	sub	r8, r8, r7
   1987c:	mov	r1, r7
   19880:	mov	r2, r8
   19884:	add	r0, r6, sl
   19888:	bl	11220 <memmove@plt>
   1988c:	ldr	r3, [r5, #12]
   19890:	mov	r2, r6
   19894:	mov	r1, #10
   19898:	mov	fp, r4
   1989c:	strb	r1, [r2], #1
   198a0:	add	r7, r3, #1
   198a4:	add	r7, r6, r7
   198a8:	add	r9, r7, r8
   198ac:	sub	r8, r7, r4
   198b0:	sub	r9, r9, r4
   198b4:	mov	r4, r2
   198b8:	b	1964c <argp_parse@@Base+0x1f80>
   198bc:	mov	r0, r3
   198c0:	mov	r1, #10
   198c4:	bl	1146c <__overflow@plt>
   198c8:	b	19634 <argp_parse@@Base+0x1f68>
   198cc:	str	r1, [r5, #20]
   198d0:	ldr	r8, [r5, #28]
   198d4:	b	194e0 <argp_parse@@Base+0x1e14>
   198d8:	str	r4, [sp, #-8]!
   198dc:	mov	r4, r0
   198e0:	str	lr, [sp, #4]
   198e4:	bl	1939c <argp_parse@@Base+0x1cd0>
   198e8:	ldr	r0, [r4, #24]
   198ec:	ldr	r2, [r4, #28]
   198f0:	cmp	r2, r0
   198f4:	bls	1990c <argp_parse@@Base+0x2240>
   198f8:	sub	r2, r2, r0
   198fc:	mov	r1, #1
   19900:	ldr	r3, [r4]
   19904:	bl	11280 <fwrite_unlocked@plt>
   19908:	ldr	r0, [r4, #24]
   1990c:	bl	186b0 <argp_parse@@Base+0xfe4>
   19910:	mov	r0, r4
   19914:	ldr	r4, [sp]
   19918:	ldr	lr, [sp, #4]
   1991c:	add	sp, sp, #8
   19920:	b	186b0 <argp_parse@@Base+0xfe4>
   19924:	strd	r4, [sp, #-16]!
   19928:	mov	r4, r0
   1992c:	mov	r5, r1
   19930:	str	r6, [sp, #8]
   19934:	str	lr, [sp, #12]
   19938:	bl	1939c <argp_parse@@Base+0x1cd0>
   1993c:	mov	r1, #1
   19940:	ldr	r3, [r4]
   19944:	ldr	r2, [r4, #24]
   19948:	ldr	ip, [r4, #28]
   1994c:	mov	r0, r2
   19950:	sub	r2, ip, r2
   19954:	bl	11280 <fwrite_unlocked@plt>
   19958:	mov	ip, r0
   1995c:	ldr	r0, [r4, #24]
   19960:	ldr	r3, [r4, #28]
   19964:	sub	r2, r3, r0
   19968:	cmp	ip, r2
   1996c:	bne	199cc <argp_parse@@Base+0x2300>
   19970:	ldr	r1, [r4, #32]
   19974:	mov	r3, #0
   19978:	str	r3, [r4, #16]
   1997c:	str	r0, [r4, #28]
   19980:	sub	r1, r1, r0
   19984:	cmp	r1, r5
   19988:	movcs	r3, #1
   1998c:	bcs	199b8 <argp_parse@@Base+0x22ec>
   19990:	adds	r5, r1, r5
   19994:	bcs	199f4 <argp_parse@@Base+0x2328>
   19998:	mov	r1, r5
   1999c:	bl	192ac <argp_parse@@Base+0x1be0>
   199a0:	cmp	r0, #0
   199a4:	beq	199f4 <argp_parse@@Base+0x2328>
   199a8:	add	r1, r0, r5
   199ac:	mov	r3, #1
   199b0:	str	r0, [r4, #24]
   199b4:	strd	r0, [r4, #28]
   199b8:	ldrd	r4, [sp]
   199bc:	mov	r0, r3
   199c0:	ldr	r6, [sp, #8]
   199c4:	add	sp, sp, #12
   199c8:	pop	{pc}		; (ldr pc, [sp], #4)
   199cc:	ldr	lr, [r4, #16]
   199d0:	sub	r3, r3, ip
   199d4:	add	r1, r0, ip
   199d8:	sub	r2, r3, r0
   199dc:	str	r3, [r4, #28]
   199e0:	sub	ip, lr, ip
   199e4:	str	ip, [r4, #16]
   199e8:	bl	11220 <memmove@plt>
   199ec:	mov	r3, #0
   199f0:	b	199b8 <argp_parse@@Base+0x22ec>
   199f4:	bl	113dc <__errno_location@plt>
   199f8:	mov	r2, #12
   199fc:	mov	r3, #0
   19a00:	str	r2, [r0]
   19a04:	b	199b8 <argp_parse@@Base+0x22ec>
   19a08:	ldr	ip, [r0, #28]
   19a0c:	ldr	r3, [r0, #32]
   19a10:	sub	r3, r3, ip
   19a14:	cmp	r3, r1
   19a18:	bcc	19a24 <argp_parse@@Base+0x2358>
   19a1c:	mov	r0, #1
   19a20:	bx	lr
   19a24:	b	19924 <argp_parse@@Base+0x2258>
   19a28:	push	{r1, r2, r3}
   19a2c:	mov	r1, #150	; 0x96
   19a30:	strd	r4, [sp, #-20]!	; 0xffffffec
   19a34:	mov	r5, r0
   19a38:	strd	r6, [sp, #8]
   19a3c:	str	lr, [sp, #16]
   19a40:	sub	sp, sp, #8
   19a44:	ldr	r7, [sp, #28]
   19a48:	add	r6, sp, #32
   19a4c:	ldr	r0, [r5, #28]
   19a50:	ldr	r3, [r5, #32]
   19a54:	sub	r2, r3, r0
   19a58:	cmp	r1, r2
   19a5c:	bhi	19aac <argp_parse@@Base+0x23e0>
   19a60:	sub	r4, r3, r0
   19a64:	mov	r2, r7
   19a68:	str	r6, [sp, #4]
   19a6c:	mov	r1, r4
   19a70:	mov	r3, r6
   19a74:	bl	114c0 <vsnprintf@plt>
   19a78:	cmp	r0, r4
   19a7c:	add	r1, r0, #1
   19a80:	bcs	19a4c <argp_parse@@Base+0x2380>
   19a84:	ldr	r3, [r5, #28]
   19a88:	add	r3, r3, r0
   19a8c:	str	r3, [r5, #28]
   19a90:	add	sp, sp, #8
   19a94:	ldrd	r4, [sp]
   19a98:	ldrd	r6, [sp, #8]
   19a9c:	ldr	lr, [sp, #16]
   19aa0:	add	sp, sp, #20
   19aa4:	add	sp, sp, #12
   19aa8:	bx	lr
   19aac:	mov	r0, r5
   19ab0:	bl	19924 <argp_parse@@Base+0x2258>
   19ab4:	cmp	r0, #0
   19ab8:	beq	19ac8 <argp_parse@@Base+0x23fc>
   19abc:	ldr	r0, [r5, #28]
   19ac0:	ldr	r3, [r5, #32]
   19ac4:	b	19a60 <argp_parse@@Base+0x2394>
   19ac8:	mvn	r0, #0
   19acc:	b	19a90 <argp_parse@@Base+0x23c4>
   19ad0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   19ad4:	ldr	r4, [r1, #32]
   19ad8:	strd	r6, [sp, #8]
   19adc:	strd	r8, [sp, #16]
   19ae0:	ldr	r7, [r1]
   19ae4:	str	sl, [sp, #24]
   19ae8:	ldr	r8, [r1, #28]
   19aec:	add	r6, r0, r4, lsl #2
   19af0:	str	lr, [sp, #28]
   19af4:	mov	r5, r7
   19af8:	mov	r3, r8
   19afc:	cmp	r5, r4
   19b00:	movle	r2, #0
   19b04:	movgt	r2, #1
   19b08:	cmp	r3, r4
   19b0c:	movge	r2, #0
   19b10:	cmp	r2, #0
   19b14:	beq	19b88 <argp_parse@@Base+0x24bc>
   19b18:	sub	r2, r5, r4
   19b1c:	sub	lr, r4, r3
   19b20:	cmp	r2, lr
   19b24:	ble	19b58 <argp_parse@@Base+0x248c>
   19b28:	sub	r5, r5, lr
   19b2c:	add	lr, lr, r3
   19b30:	add	r2, r0, r3, lsl #2
   19b34:	add	lr, r0, lr, lsl #2
   19b38:	add	ip, r0, r5, lsl #2
   19b3c:	ldr	sl, [ip]
   19b40:	ldr	r9, [r2]
   19b44:	str	sl, [r2], #4
   19b48:	cmp	lr, r2
   19b4c:	str	r9, [ip], #4
   19b50:	bne	19b3c <argp_parse@@Base+0x2470>
   19b54:	b	19afc <argp_parse@@Base+0x2430>
   19b58:	add	sl, r2, r3
   19b5c:	add	r3, r0, r3, lsl #2
   19b60:	mov	r2, r6
   19b64:	add	r9, r0, sl, lsl #2
   19b68:	ldr	lr, [r2]
   19b6c:	ldr	ip, [r3]
   19b70:	str	lr, [r3], #4
   19b74:	cmp	r3, r9
   19b78:	str	ip, [r2], #4
   19b7c:	bne	19b68 <argp_parse@@Base+0x249c>
   19b80:	mov	r3, sl
   19b84:	b	19afc <argp_parse@@Base+0x2430>
   19b88:	sub	r4, r7, r4
   19b8c:	str	r7, [r1, #32]
   19b90:	add	r8, r4, r8
   19b94:	ldrd	r4, [sp]
   19b98:	str	r8, [r1, #28]
   19b9c:	ldrd	r6, [sp, #8]
   19ba0:	ldrd	r8, [sp, #16]
   19ba4:	ldr	sl, [sp, #24]
   19ba8:	add	sp, sp, #28
   19bac:	pop	{pc}		; (ldr pc, [sp], #4)
   19bb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19bb4:	strd	r6, [sp, #8]
   19bb8:	strd	r8, [sp, #16]
   19bbc:	strd	sl, [sp, #24]
   19bc0:	str	lr, [sp, #32]
   19bc4:	sub	sp, sp, #52	; 0x34
   19bc8:	str	r3, [sp, #12]
   19bcc:	ldr	r3, [sp, #96]	; 0x60
   19bd0:	str	r1, [sp, #28]
   19bd4:	str	r2, [sp, #32]
   19bd8:	str	r0, [sp, #36]	; 0x24
   19bdc:	ldr	r8, [r3, #20]
   19be0:	ldrb	r5, [r8]
   19be4:	mov	r9, r8
   19be8:	cmp	r5, #61	; 0x3d
   19bec:	cmpne	r5, #0
   19bf0:	movne	r5, #1
   19bf4:	moveq	r5, #0
   19bf8:	beq	19c10 <argp_parse@@Base+0x2544>
   19bfc:	ldrb	r3, [r9, #1]!
   19c00:	cmp	r3, #0
   19c04:	cmpne	r3, #61	; 0x3d
   19c08:	bne	19bfc <argp_parse@@Base+0x2530>
   19c0c:	sub	r5, r9, r8
   19c10:	ldr	r3, [sp, #12]
   19c14:	ldr	r3, [r3]
   19c18:	cmp	r3, #0
   19c1c:	str	r3, [sp, #16]
   19c20:	beq	19de8 <argp_parse@@Base+0x271c>
   19c24:	ldr	fp, [sp, #12]
   19c28:	mov	r6, #0
   19c2c:	ldr	r4, [sp, #16]
   19c30:	str	fp, [sp, #24]
   19c34:	b	19c3c <argp_parse@@Base+0x2570>
   19c38:	mov	r6, r7
   19c3c:	mov	r2, r5
   19c40:	mov	r1, r8
   19c44:	mov	r0, r4
   19c48:	add	r7, r6, #1
   19c4c:	bl	11508 <strncmp@plt>
   19c50:	cmp	r0, #0
   19c54:	mov	sl, fp
   19c58:	mov	r0, r4
   19c5c:	bne	19c6c <argp_parse@@Base+0x25a0>
   19c60:	bl	113b8 <strlen@plt>
   19c64:	cmp	r0, r5
   19c68:	beq	19d20 <argp_parse@@Base+0x2654>
   19c6c:	ldr	r4, [fp, #16]!
   19c70:	cmp	r4, #0
   19c74:	bne	19c38 <argp_parse@@Base+0x256c>
   19c78:	ldr	r0, [sp, #16]
   19c7c:	mvn	r3, #0
   19c80:	mov	r1, r8
   19c84:	str	r7, [sp, #16]
   19c88:	mov	sl, r4
   19c8c:	mov	r8, r4
   19c90:	ldr	fp, [sp, #24]
   19c94:	str	r4, [sp, #20]
   19c98:	ldr	r7, [sp, #96]	; 0x60
   19c9c:	str	r3, [sp, #40]	; 0x28
   19ca0:	str	r4, [sp, #44]	; 0x2c
   19ca4:	mov	r2, r5
   19ca8:	bl	11508 <strncmp@plt>
   19cac:	cmp	r0, #0
   19cb0:	bne	19cf0 <argp_parse@@Base+0x2624>
   19cb4:	cmp	sl, #0
   19cb8:	beq	19ddc <argp_parse@@Base+0x2710>
   19cbc:	ldr	r3, [sp, #92]	; 0x5c
   19cc0:	cmp	r3, #0
   19cc4:	beq	19d90 <argp_parse@@Base+0x26c4>
   19cc8:	ldr	r3, [sp, #20]
   19ccc:	cmp	r3, #0
   19cd0:	bne	19cf0 <argp_parse@@Base+0x2624>
   19cd4:	ldr	r3, [sp, #100]	; 0x64
   19cd8:	cmp	r3, #0
   19cdc:	beq	19e60 <argp_parse@@Base+0x2794>
   19ce0:	cmp	r4, #0
   19ce4:	beq	19f88 <argp_parse@@Base+0x28bc>
   19ce8:	mov	r3, #1
   19cec:	strb	r3, [r4, r8]
   19cf0:	ldr	r0, [fp, #16]!
   19cf4:	add	r8, r8, #1
   19cf8:	cmp	r0, #0
   19cfc:	beq	19d08 <argp_parse@@Base+0x263c>
   19d00:	ldr	r1, [r7, #20]
   19d04:	b	19ca4 <argp_parse@@Base+0x25d8>
   19d08:	ldr	r3, [sp, #20]
   19d0c:	orrs	r3, r4, r3
   19d10:	bne	19eb0 <argp_parse@@Base+0x27e4>
   19d14:	cmp	sl, #0
   19d18:	ldrne	r6, [sp, #40]	; 0x28
   19d1c:	beq	19de8 <argp_parse@@Base+0x271c>
   19d20:	ldr	r3, [sp, #96]	; 0x60
   19d24:	mov	r2, #0
   19d28:	ldr	r1, [sp, #96]	; 0x60
   19d2c:	ldr	r0, [sl, #4]
   19d30:	ldr	r3, [r3]
   19d34:	str	r2, [r1, #20]
   19d38:	add	r2, r3, #1
   19d3c:	str	r2, [r1]
   19d40:	ldrb	r1, [r9]
   19d44:	cmp	r1, #0
   19d48:	bne	19dc4 <argp_parse@@Base+0x26f8>
   19d4c:	cmp	r0, #1
   19d50:	beq	19f40 <argp_parse@@Base+0x2874>
   19d54:	ldr	r3, [sp, #88]	; 0x58
   19d58:	cmp	r3, #0
   19d5c:	strne	r6, [r3]
   19d60:	ldr	r3, [sl, #8]
   19d64:	ldr	r0, [sl, #12]
   19d68:	cmp	r3, #0
   19d6c:	strne	r0, [r3]
   19d70:	movne	r0, #0
   19d74:	add	sp, sp, #52	; 0x34
   19d78:	ldrd	r4, [sp]
   19d7c:	ldrd	r6, [sp, #8]
   19d80:	ldrd	r8, [sp, #16]
   19d84:	ldrd	sl, [sp, #24]
   19d88:	add	sp, sp, #32
   19d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   19d90:	ldr	r1, [sl, #4]
   19d94:	ldr	r2, [fp, #4]
   19d98:	cmp	r1, r2
   19d9c:	bne	19cc8 <argp_parse@@Base+0x25fc>
   19da0:	ldr	r1, [sl, #8]
   19da4:	ldr	r2, [fp, #8]
   19da8:	cmp	r1, r2
   19dac:	bne	19cc8 <argp_parse@@Base+0x25fc>
   19db0:	ldr	r1, [sl, #12]
   19db4:	ldr	r2, [fp, #12]
   19db8:	cmp	r1, r2
   19dbc:	bne	19cc8 <argp_parse@@Base+0x25fc>
   19dc0:	b	19cf0 <argp_parse@@Base+0x2624>
   19dc4:	cmp	r0, #0
   19dc8:	beq	19f68 <argp_parse@@Base+0x289c>
   19dcc:	ldr	r3, [sp, #96]	; 0x60
   19dd0:	add	r9, r9, #1
   19dd4:	str	r9, [r3, #12]
   19dd8:	b	19d54 <argp_parse@@Base+0x2688>
   19ddc:	mov	sl, fp
   19de0:	str	r8, [sp, #40]	; 0x28
   19de4:	b	19cf0 <argp_parse@@Base+0x2624>
   19de8:	ldr	r3, [sp, #92]	; 0x5c
   19dec:	cmp	r3, #0
   19df0:	beq	19e2c <argp_parse@@Base+0x2760>
   19df4:	ldr	r2, [sp, #28]
   19df8:	ldr	r3, [sp, #96]	; 0x60
   19dfc:	ldr	r3, [r3]
   19e00:	ldr	r3, [r2, r3, lsl #2]
   19e04:	ldrb	r3, [r3, #1]
   19e08:	cmp	r3, #45	; 0x2d
   19e0c:	beq	19e2c <argp_parse@@Base+0x2760>
   19e10:	ldr	r0, [sp, #32]
   19e14:	ldr	r3, [sp, #96]	; 0x60
   19e18:	ldr	r3, [r3, #20]
   19e1c:	ldrb	r1, [r3]
   19e20:	bl	113c4 <strchr@plt>
   19e24:	cmp	r0, #0
   19e28:	bne	19ff8 <argp_parse@@Base+0x292c>
   19e2c:	ldr	r3, [sp, #100]	; 0x64
   19e30:	cmp	r3, #0
   19e34:	bne	19e7c <argp_parse@@Base+0x27b0>
   19e38:	ldr	r3, [sp, #96]	; 0x60
   19e3c:	mov	r2, #0
   19e40:	mov	r0, #63	; 0x3f
   19e44:	ldr	r1, [sp, #96]	; 0x60
   19e48:	ldr	r3, [r3]
   19e4c:	str	r2, [r1, #8]
   19e50:	str	r2, [r1, #20]
   19e54:	add	r3, r3, #1
   19e58:	str	r3, [r1]
   19e5c:	b	19d74 <argp_parse@@Base+0x26a8>
   19e60:	mov	r3, #1
   19e64:	cmp	r4, #0
   19e68:	str	r3, [sp, #20]
   19e6c:	beq	19cf0 <argp_parse@@Base+0x2624>
   19e70:	mov	r3, #1
   19e74:	strb	r3, [r4, r8]
   19e78:	b	19cf0 <argp_parse@@Base+0x2624>
   19e7c:	ldr	r3, [sp, #96]	; 0x60
   19e80:	movw	r0, #50256	; 0xc450
   19e84:	movt	r0, #2
   19e88:	movw	r1, #47236	; 0xb884
   19e8c:	movt	r1, #1
   19e90:	ldr	r0, [r0]
   19e94:	ldr	ip, [r3, #20]
   19e98:	ldr	r3, [sp, #28]
   19e9c:	ldr	r2, [r3]
   19ea0:	str	ip, [sp]
   19ea4:	ldr	r3, [sp, #104]	; 0x68
   19ea8:	bl	113d0 <fprintf@plt>
   19eac:	b	19e38 <argp_parse@@Base+0x276c>
   19eb0:	ldr	r3, [sp, #100]	; 0x64
   19eb4:	cmp	r3, #0
   19eb8:	beq	19ef8 <argp_parse@@Base+0x282c>
   19ebc:	ldr	r3, [sp, #20]
   19ec0:	movw	r5, #50256	; 0xc450
   19ec4:	movt	r5, #2
   19ec8:	ldr	r0, [r5]
   19ecc:	cmp	r3, #0
   19ed0:	beq	1a030 <argp_parse@@Base+0x2964>
   19ed4:	ldr	r2, [sp, #28]
   19ed8:	movw	r1, #47148	; 0xb82c
   19edc:	movt	r1, #1
   19ee0:	ldr	r3, [sp, #96]	; 0x60
   19ee4:	ldr	r2, [r2]
   19ee8:	ldr	ip, [r3, #20]
   19eec:	ldr	r3, [sp, #104]	; 0x68
   19ef0:	str	ip, [sp]
   19ef4:	bl	113d0 <fprintf@plt>
   19ef8:	ldr	r3, [sp, #44]	; 0x2c
   19efc:	cmp	r3, #0
   19f00:	bne	19fec <argp_parse@@Base+0x2920>
   19f04:	ldr	r3, [sp, #96]	; 0x60
   19f08:	ldr	r4, [r3, #20]
   19f0c:	mov	r0, r4
   19f10:	bl	113b8 <strlen@plt>
   19f14:	ldr	r3, [sp, #96]	; 0x60
   19f18:	add	r4, r4, r0
   19f1c:	mov	r2, #0
   19f20:	mov	r0, #63	; 0x3f
   19f24:	ldr	r1, [sp, #96]	; 0x60
   19f28:	ldr	r3, [r3]
   19f2c:	str	r2, [r1, #8]
   19f30:	str	r4, [r1, #20]
   19f34:	add	r3, r3, #1
   19f38:	str	r3, [r1]
   19f3c:	b	19d74 <argp_parse@@Base+0x26a8>
   19f40:	ldr	r1, [sp, #36]	; 0x24
   19f44:	cmp	r2, r1
   19f48:	bge	1a000 <argp_parse@@Base+0x2934>
   19f4c:	ldr	r1, [sp, #28]
   19f50:	add	r3, r3, #2
   19f54:	ldr	r2, [r1, r2, lsl #2]
   19f58:	ldr	r1, [sp, #96]	; 0x60
   19f5c:	str	r3, [r1]
   19f60:	str	r2, [r1, #12]
   19f64:	b	19d54 <argp_parse@@Base+0x2688>
   19f68:	ldr	r3, [sp, #100]	; 0x64
   19f6c:	cmp	r3, #0
   19f70:	bne	19fbc <argp_parse@@Base+0x28f0>
   19f74:	ldr	r3, [sl, #12]
   19f78:	mov	r0, #63	; 0x3f
   19f7c:	ldr	r2, [sp, #96]	; 0x60
   19f80:	str	r3, [r2, #8]
   19f84:	b	19d74 <argp_parse@@Base+0x26a8>
   19f88:	ldr	r0, [sp, #16]
   19f8c:	bl	19270 <argp_parse@@Base+0x1ba4>
   19f90:	subs	r4, r0, #0
   19f94:	beq	1a0f4 <argp_parse@@Base+0x2a28>
   19f98:	ldr	r2, [sp, #16]
   19f9c:	ldr	r1, [sp, #20]
   19fa0:	bl	1140c <memset@plt>
   19fa4:	mov	r3, #1
   19fa8:	mov	r2, #1
   19fac:	str	r3, [sp, #44]	; 0x2c
   19fb0:	ldr	r3, [sp, #40]	; 0x28
   19fb4:	strb	r2, [r4, r3]
   19fb8:	b	19ce8 <argp_parse@@Base+0x261c>
   19fbc:	ldr	ip, [sl]
   19fc0:	movw	r0, #50256	; 0xc450
   19fc4:	movt	r0, #2
   19fc8:	movw	r1, #47268	; 0xb8a4
   19fcc:	movt	r1, #1
   19fd0:	ldr	r3, [sp, #28]
   19fd4:	ldr	r0, [r0]
   19fd8:	ldr	r2, [r3]
   19fdc:	str	ip, [sp]
   19fe0:	ldr	r3, [sp, #104]	; 0x68
   19fe4:	bl	113d0 <fprintf@plt>
   19fe8:	b	19f74 <argp_parse@@Base+0x28a8>
   19fec:	mov	r0, r4
   19ff0:	bl	186b0 <argp_parse@@Base+0xfe4>
   19ff4:	b	19f04 <argp_parse@@Base+0x2838>
   19ff8:	mvn	r0, #0
   19ffc:	b	19d74 <argp_parse@@Base+0x26a8>
   1a000:	ldr	r3, [sp, #100]	; 0x64
   1a004:	cmp	r3, #0
   1a008:	bne	1a0c4 <argp_parse@@Base+0x29f8>
   1a00c:	ldr	r3, [sl, #12]
   1a010:	ldr	r2, [sp, #96]	; 0x60
   1a014:	str	r3, [r2, #8]
   1a018:	ldr	r3, [sp, #32]
   1a01c:	ldrb	r3, [r3]
   1a020:	cmp	r3, #58	; 0x3a
   1a024:	moveq	r0, #58	; 0x3a
   1a028:	movne	r0, #63	; 0x3f
   1a02c:	b	19d74 <argp_parse@@Base+0x26a8>
   1a030:	bl	114b4 <flockfile@plt>
   1a034:	ldr	r2, [sp, #28]
   1a038:	movw	r1, #47180	; 0xb84c
   1a03c:	movt	r1, #1
   1a040:	movw	r7, #47228	; 0xb87c
   1a044:	movt	r7, #1
   1a048:	ldr	r3, [sp, #96]	; 0x60
   1a04c:	add	r6, r4, r6
   1a050:	sub	r8, r4, #1
   1a054:	ldr	r2, [r2]
   1a058:	ldr	r0, [r3, #20]
   1a05c:	ldr	r3, [sp, #104]	; 0x68
   1a060:	str	r0, [sp]
   1a064:	ldr	r0, [r5]
   1a068:	bl	113d0 <fprintf@plt>
   1a06c:	ldr	r0, [r5]
   1a070:	ldr	sl, [sp, #12]
   1a074:	ldr	r9, [sp, #20]
   1a078:	b	1a088 <argp_parse@@Base+0x29bc>
   1a07c:	cmp	r6, r8
   1a080:	add	r9, r9, #1
   1a084:	beq	1a0ac <argp_parse@@Base+0x29e0>
   1a088:	ldrb	r3, [r8, #1]!
   1a08c:	cmp	r3, #0
   1a090:	beq	1a07c <argp_parse@@Base+0x29b0>
   1a094:	mov	r1, r7
   1a098:	ldr	r3, [sl, r9, lsl #4]
   1a09c:	ldr	r2, [sp, #104]	; 0x68
   1a0a0:	bl	113d0 <fprintf@plt>
   1a0a4:	ldr	r0, [r5]
   1a0a8:	b	1a07c <argp_parse@@Base+0x29b0>
   1a0ac:	mov	r1, r0
   1a0b0:	mov	r0, #10
   1a0b4:	bl	1149c <fputc@plt>
   1a0b8:	ldr	r0, [r5]
   1a0bc:	bl	112c8 <funlockfile@plt>
   1a0c0:	b	19ef8 <argp_parse@@Base+0x282c>
   1a0c4:	ldr	ip, [sl]
   1a0c8:	movw	r0, #50256	; 0xc450
   1a0cc:	movt	r0, #2
   1a0d0:	movw	r1, #47316	; 0xb8d4
   1a0d4:	movt	r1, #1
   1a0d8:	ldr	r3, [sp, #28]
   1a0dc:	ldr	r0, [r0]
   1a0e0:	ldr	r2, [r3]
   1a0e4:	str	ip, [sp]
   1a0e8:	ldr	r3, [sp, #104]	; 0x68
   1a0ec:	bl	113d0 <fprintf@plt>
   1a0f0:	b	1a00c <argp_parse@@Base+0x2940>
   1a0f4:	mov	r3, #1
   1a0f8:	str	r3, [sp, #20]
   1a0fc:	b	19cf0 <argp_parse@@Base+0x2624>
   1a100:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a104:	subs	r5, r0, #0
   1a108:	strd	r6, [sp, #8]
   1a10c:	strd	r8, [sp, #16]
   1a110:	strd	sl, [sp, #24]
   1a114:	str	lr, [sp, #32]
   1a118:	sub	sp, sp, #36	; 0x24
   1a11c:	ldr	r4, [sp, #80]	; 0x50
   1a120:	ldr	r7, [r4, #4]
   1a124:	ble	1a314 <argp_parse@@Base+0x2c48>
   1a128:	mov	r6, r2
   1a12c:	mov	sl, r3
   1a130:	ldr	r2, [r4]
   1a134:	mov	r3, #0
   1a138:	mov	r9, r1
   1a13c:	str	r3, [r4, #12]
   1a140:	cmp	r2, r3
   1a144:	beq	1a3bc <argp_parse@@Base+0x2cf0>
   1a148:	ldr	r3, [r4, #16]
   1a14c:	cmp	r3, #0
   1a150:	bne	1a2e0 <argp_parse@@Base+0x2c14>
   1a154:	mov	r3, #0
   1a158:	str	r3, [r4, #20]
   1a15c:	str	r2, [r4, #28]
   1a160:	str	r2, [r4, #32]
   1a164:	ldrb	r2, [r6]
   1a168:	cmp	r2, #45	; 0x2d
   1a16c:	moveq	r2, #2
   1a170:	addeq	r6, r6, #1
   1a174:	streq	r2, [r4, #24]
   1a178:	beq	1a1a0 <argp_parse@@Base+0x2ad4>
   1a17c:	cmp	r2, #43	; 0x2b
   1a180:	addeq	r6, r6, #1
   1a184:	streq	r3, [r4, #24]
   1a188:	beq	1a1a0 <argp_parse@@Base+0x2ad4>
   1a18c:	ldr	r2, [sp, #84]	; 0x54
   1a190:	cmp	r2, #0
   1a194:	beq	1a4ec <argp_parse@@Base+0x2e20>
   1a198:	mov	r2, #0
   1a19c:	str	r2, [r4, #24]
   1a1a0:	mov	r2, #1
   1a1a4:	str	r2, [r4, #16]
   1a1a8:	ldrb	r2, [r6]
   1a1ac:	cmp	r2, #58	; 0x3a
   1a1b0:	moveq	r7, #0
   1a1b4:	cmp	r3, #0
   1a1b8:	beq	1a24c <argp_parse@@Base+0x2b80>
   1a1bc:	ldrb	r2, [r3]
   1a1c0:	cmp	r2, #0
   1a1c4:	beq	1a24c <argp_parse@@Base+0x2b80>
   1a1c8:	add	fp, r3, #1
   1a1cc:	mov	r0, r6
   1a1d0:	str	r3, [sp, #28]
   1a1d4:	str	fp, [r4, #20]
   1a1d8:	ldrb	r8, [r3]
   1a1dc:	mov	r1, r8
   1a1e0:	str	r8, [sp, #24]
   1a1e4:	bl	113c4 <strchr@plt>
   1a1e8:	ldrd	r2, [sp, #24]
   1a1ec:	ldrb	r1, [r3, #1]
   1a1f0:	cmp	r1, #0
   1a1f4:	bne	1a204 <argp_parse@@Base+0x2b38>
   1a1f8:	ldr	r1, [r4]
   1a1fc:	add	r1, r1, #1
   1a200:	str	r1, [r4]
   1a204:	sub	r1, r8, #58	; 0x3a
   1a208:	cmp	r0, #0
   1a20c:	cmpne	r1, #1
   1a210:	bls	1a568 <argp_parse@@Base+0x2e9c>
   1a214:	ldrb	ip, [r0]
   1a218:	ldrb	r1, [r0, #1]
   1a21c:	cmp	ip, #87	; 0x57
   1a220:	beq	1a46c <argp_parse@@Base+0x2da0>
   1a224:	cmp	r1, #58	; 0x3a
   1a228:	beq	1a510 <argp_parse@@Base+0x2e44>
   1a22c:	mov	r0, r2
   1a230:	add	sp, sp, #36	; 0x24
   1a234:	ldrd	r4, [sp]
   1a238:	ldrd	r6, [sp, #8]
   1a23c:	ldrd	r8, [sp, #16]
   1a240:	ldrd	sl, [sp, #24]
   1a244:	add	sp, sp, #32
   1a248:	pop	{pc}		; (ldr pc, [sp], #4)
   1a24c:	ldr	r8, [r4]
   1a250:	ldr	r3, [r4, #32]
   1a254:	cmp	r3, r8
   1a258:	ldr	r3, [r4, #28]
   1a25c:	strgt	r8, [r4, #32]
   1a260:	cmp	r8, r3
   1a264:	ldr	r3, [r4, #24]
   1a268:	strlt	r8, [r4, #28]
   1a26c:	cmp	r3, #1
   1a270:	beq	1a31c <argp_parse@@Base+0x2c50>
   1a274:	cmp	r5, r8
   1a278:	beq	1a2fc <argp_parse@@Base+0x2c30>
   1a27c:	ldr	r3, [r9, r8, lsl #2]
   1a280:	movw	fp, #45952	; 0xb380
   1a284:	movt	fp, #1
   1a288:	mov	r1, fp
   1a28c:	mov	r0, r3
   1a290:	str	r3, [sp, #24]
   1a294:	bl	111d8 <strcmp@plt>
   1a298:	cmp	r0, #0
   1a29c:	ldr	r3, [sp, #24]
   1a2a0:	bne	1a390 <argp_parse@@Base+0x2cc4>
   1a2a4:	ldr	r3, [r4, #28]
   1a2a8:	add	r8, r8, #1
   1a2ac:	ldr	r2, [r4, #32]
   1a2b0:	str	r8, [r4]
   1a2b4:	cmp	r3, r2
   1a2b8:	beq	1a57c <argp_parse@@Base+0x2eb0>
   1a2bc:	cmp	r8, r2
   1a2c0:	beq	1a2d4 <argp_parse@@Base+0x2c08>
   1a2c4:	mov	r0, r9
   1a2c8:	mov	r1, r4
   1a2cc:	bl	19ad0 <argp_parse@@Base+0x2404>
   1a2d0:	ldr	r3, [r4, #28]
   1a2d4:	str	r5, [r4]
   1a2d8:	str	r5, [r4, #32]
   1a2dc:	b	1a304 <argp_parse@@Base+0x2c38>
   1a2e0:	ldrb	r2, [r6]
   1a2e4:	ldr	r3, [r4, #20]
   1a2e8:	sub	r1, r2, #43	; 0x2b
   1a2ec:	tst	r1, #253	; 0xfd
   1a2f0:	ldrbeq	r2, [r6, #1]
   1a2f4:	addeq	r6, r6, #1
   1a2f8:	b	1a1ac <argp_parse@@Base+0x2ae0>
   1a2fc:	ldr	r3, [r4, #28]
   1a300:	ldr	r5, [r4, #32]
   1a304:	cmp	r5, r3
   1a308:	mvnne	r2, #0
   1a30c:	strne	r3, [r4]
   1a310:	bne	1a22c <argp_parse@@Base+0x2b60>
   1a314:	mvn	r2, #0
   1a318:	b	1a22c <argp_parse@@Base+0x2b60>
   1a31c:	ldrd	r2, [r4, #28]
   1a320:	cmp	r2, r3
   1a324:	beq	1a550 <argp_parse@@Base+0x2e84>
   1a328:	cmp	r8, r3
   1a32c:	beq	1a340 <argp_parse@@Base+0x2c74>
   1a330:	mov	r1, r4
   1a334:	mov	r0, r9
   1a338:	bl	19ad0 <argp_parse@@Base+0x2404>
   1a33c:	ldr	r3, [r4]
   1a340:	cmp	r5, r3
   1a344:	ble	1a560 <argp_parse@@Base+0x2e94>
   1a348:	add	r1, r9, r3, lsl #2
   1a34c:	b	1a360 <argp_parse@@Base+0x2c94>
   1a350:	add	r3, r3, #1
   1a354:	cmp	r3, r5
   1a358:	str	r3, [r4]
   1a35c:	beq	1a560 <argp_parse@@Base+0x2e94>
   1a360:	ldr	r2, [r1], #4
   1a364:	ldrb	r0, [r2]
   1a368:	cmp	r0, #45	; 0x2d
   1a36c:	bne	1a350 <argp_parse@@Base+0x2c84>
   1a370:	ldrb	r2, [r2, #1]
   1a374:	cmp	r2, #0
   1a378:	beq	1a350 <argp_parse@@Base+0x2c84>
   1a37c:	ldr	r8, [r4]
   1a380:	cmp	r5, r8
   1a384:	str	r3, [r4, #32]
   1a388:	bne	1a27c <argp_parse@@Base+0x2bb0>
   1a38c:	b	1a2fc <argp_parse@@Base+0x2c30>
   1a390:	ldrb	r2, [r3]
   1a394:	cmp	r2, #45	; 0x2d
   1a398:	beq	1a3cc <argp_parse@@Base+0x2d00>
   1a39c:	ldr	r2, [r4, #24]
   1a3a0:	cmp	r2, #0
   1a3a4:	beq	1a314 <argp_parse@@Base+0x2c48>
   1a3a8:	add	r8, r8, #1
   1a3ac:	mov	r2, #1
   1a3b0:	str	r8, [r4]
   1a3b4:	str	r3, [r4, #12]
   1a3b8:	b	1a22c <argp_parse@@Base+0x2b60>
   1a3bc:	mov	r3, #1
   1a3c0:	mov	r2, r3
   1a3c4:	str	r3, [r4]
   1a3c8:	b	1a154 <argp_parse@@Base+0x2a88>
   1a3cc:	ldrb	r1, [r3, #1]
   1a3d0:	cmp	r1, #0
   1a3d4:	beq	1a39c <argp_parse@@Base+0x2cd0>
   1a3d8:	cmp	sl, #0
   1a3dc:	beq	1a464 <argp_parse@@Base+0x2d98>
   1a3e0:	cmp	r1, #45	; 0x2d
   1a3e4:	beq	1a5fc <argp_parse@@Base+0x2f30>
   1a3e8:	ldr	r2, [sp, #76]	; 0x4c
   1a3ec:	cmp	r2, #0
   1a3f0:	beq	1a464 <argp_parse@@Base+0x2d98>
   1a3f4:	ldrb	r2, [r3, #2]
   1a3f8:	cmp	r2, #0
   1a3fc:	bne	1a418 <argp_parse@@Base+0x2d4c>
   1a400:	mov	r0, r6
   1a404:	str	r3, [sp, #24]
   1a408:	bl	113c4 <strchr@plt>
   1a40c:	cmp	r0, #0
   1a410:	ldr	r3, [sp, #24]
   1a414:	bne	1a464 <argp_parse@@Base+0x2d98>
   1a418:	ldr	r2, [sp, #72]	; 0x48
   1a41c:	add	ip, r3, #1
   1a420:	movw	r0, #47372	; 0xb90c
   1a424:	movt	r0, #1
   1a428:	mov	r3, sl
   1a42c:	ldr	r1, [sp, #76]	; 0x4c
   1a430:	str	r2, [sp]
   1a434:	mov	r2, r6
   1a438:	str	r0, [sp, #16]
   1a43c:	mov	r0, r5
   1a440:	stmib	sp, {r1, r4, r7}
   1a444:	mov	r1, r9
   1a448:	str	ip, [r4, #20]
   1a44c:	bl	19bb0 <argp_parse@@Base+0x24e4>
   1a450:	cmn	r0, #1
   1a454:	mov	r2, r0
   1a458:	bne	1a22c <argp_parse@@Base+0x2b60>
   1a45c:	ldr	r3, [r4]
   1a460:	ldr	r3, [r9, r3, lsl #2]
   1a464:	add	r3, r3, #1
   1a468:	b	1a1c8 <argp_parse@@Base+0x2afc>
   1a46c:	sub	ip, r1, #59	; 0x3b
   1a470:	cmp	sl, #0
   1a474:	clz	ip, ip
   1a478:	lsr	ip, ip, #5
   1a47c:	moveq	ip, #0
   1a480:	cmp	ip, #0
   1a484:	beq	1a224 <argp_parse@@Base+0x2b58>
   1a488:	ldrb	r3, [r3, #1]
   1a48c:	cmp	r3, #0
   1a490:	bne	1a4a4 <argp_parse@@Base+0x2dd8>
   1a494:	ldr	r3, [r4]
   1a498:	cmp	r3, r5
   1a49c:	beq	1a630 <argp_parse@@Base+0x2f64>
   1a4a0:	ldr	fp, [r9, r3, lsl #2]
   1a4a4:	mov	lr, #0
   1a4a8:	movw	ip, #47448	; 0xb958
   1a4ac:	movt	ip, #1
   1a4b0:	ldr	r3, [sp, #72]	; 0x48
   1a4b4:	mov	r2, r6
   1a4b8:	mov	r1, r9
   1a4bc:	mov	r0, r5
   1a4c0:	str	r3, [sp]
   1a4c4:	mov	r3, sl
   1a4c8:	str	r4, [sp, #8]
   1a4cc:	str	r7, [sp, #12]
   1a4d0:	str	ip, [sp, #16]
   1a4d4:	str	fp, [r4, #20]
   1a4d8:	str	lr, [sp, #4]
   1a4dc:	str	lr, [r4, #12]
   1a4e0:	bl	19bb0 <argp_parse@@Base+0x24e4>
   1a4e4:	mov	r2, r0
   1a4e8:	b	1a22c <argp_parse@@Base+0x2b60>
   1a4ec:	movw	r0, #47356	; 0xb8fc
   1a4f0:	movt	r0, #1
   1a4f4:	bl	11334 <getenv@plt>
   1a4f8:	cmp	r0, #0
   1a4fc:	ldr	r3, [r4, #20]
   1a500:	bne	1a198 <argp_parse@@Base+0x2acc>
   1a504:	mov	r2, #1
   1a508:	str	r2, [r4, #24]
   1a50c:	b	1a1a0 <argp_parse@@Base+0x2ad4>
   1a510:	ldrb	r1, [r0, #2]
   1a514:	ldrb	r3, [r3, #1]
   1a518:	cmp	r1, #58	; 0x3a
   1a51c:	beq	1a5bc <argp_parse@@Base+0x2ef0>
   1a520:	cmp	r3, #0
   1a524:	ldr	r3, [r4]
   1a528:	bne	1a588 <argp_parse@@Base+0x2ebc>
   1a52c:	cmp	r5, r3
   1a530:	beq	1a5dc <argp_parse@@Base+0x2f10>
   1a534:	ldr	r1, [r9, r3, lsl #2]
   1a538:	add	r3, r3, #1
   1a53c:	str	r3, [r4]
   1a540:	str	r1, [r4, #12]
   1a544:	mov	r3, #0
   1a548:	str	r3, [r4, #20]
   1a54c:	b	1a22c <argp_parse@@Base+0x2b60>
   1a550:	cmp	r8, r3
   1a554:	movne	r3, r8
   1a558:	strne	r8, [r4, #28]
   1a55c:	b	1a340 <argp_parse@@Base+0x2c74>
   1a560:	mov	r8, r3
   1a564:	b	1a380 <argp_parse@@Base+0x2cb4>
   1a568:	cmp	r7, #0
   1a56c:	bne	1a598 <argp_parse@@Base+0x2ecc>
   1a570:	mov	r2, #63	; 0x3f
   1a574:	str	r8, [r4, #8]
   1a578:	b	1a22c <argp_parse@@Base+0x2b60>
   1a57c:	mov	r3, r8
   1a580:	str	r8, [r4, #28]
   1a584:	b	1a2d4 <argp_parse@@Base+0x2c08>
   1a588:	add	r3, r3, #1
   1a58c:	str	r3, [r4]
   1a590:	str	fp, [r4, #12]
   1a594:	b	1a544 <argp_parse@@Base+0x2e78>
   1a598:	movw	r0, #50256	; 0xc450
   1a59c:	movt	r0, #2
   1a5a0:	ldr	r2, [r9]
   1a5a4:	movw	r1, #47376	; 0xb910
   1a5a8:	movt	r1, #1
   1a5ac:	mov	r3, r8
   1a5b0:	ldr	r0, [r0]
   1a5b4:	bl	113d0 <fprintf@plt>
   1a5b8:	b	1a570 <argp_parse@@Base+0x2ea4>
   1a5bc:	cmp	r3, #0
   1a5c0:	streq	r3, [r4, #12]
   1a5c4:	beq	1a544 <argp_parse@@Base+0x2e78>
   1a5c8:	ldr	r3, [r4]
   1a5cc:	str	fp, [r4, #12]
   1a5d0:	add	r3, r3, #1
   1a5d4:	str	r3, [r4]
   1a5d8:	b	1a544 <argp_parse@@Base+0x2e78>
   1a5dc:	cmp	r7, #0
   1a5e0:	bne	1a650 <argp_parse@@Base+0x2f84>
   1a5e4:	str	r8, [r4, #8]
   1a5e8:	ldrb	r3, [r6]
   1a5ec:	cmp	r3, #58	; 0x3a
   1a5f0:	moveq	r2, #58	; 0x3a
   1a5f4:	movne	r2, #63	; 0x3f
   1a5f8:	b	1a544 <argp_parse@@Base+0x2e78>
   1a5fc:	ldr	r2, [sp, #72]	; 0x48
   1a600:	add	ip, r3, #2
   1a604:	mov	r1, r9
   1a608:	mov	r3, sl
   1a60c:	ldr	r0, [sp, #76]	; 0x4c
   1a610:	str	r2, [sp]
   1a614:	mov	r2, r6
   1a618:	stmib	sp, {r0, r4, r7, fp}
   1a61c:	mov	r0, r5
   1a620:	str	ip, [r4, #20]
   1a624:	bl	19bb0 <argp_parse@@Base+0x24e4>
   1a628:	mov	r2, r0
   1a62c:	b	1a22c <argp_parse@@Base+0x2b60>
   1a630:	cmp	r7, #0
   1a634:	bne	1a674 <argp_parse@@Base+0x2fa8>
   1a638:	str	r8, [r4, #8]
   1a63c:	ldrb	r3, [r6]
   1a640:	cmp	r3, #58	; 0x3a
   1a644:	moveq	r2, #58	; 0x3a
   1a648:	movne	r2, #63	; 0x3f
   1a64c:	b	1a22c <argp_parse@@Base+0x2b60>
   1a650:	movw	r0, #50256	; 0xc450
   1a654:	movt	r0, #2
   1a658:	ldr	r2, [r9]
   1a65c:	movw	r1, #47404	; 0xb92c
   1a660:	movt	r1, #1
   1a664:	mov	r3, r8
   1a668:	ldr	r0, [r0]
   1a66c:	bl	113d0 <fprintf@plt>
   1a670:	b	1a5e4 <argp_parse@@Base+0x2f18>
   1a674:	movw	r0, #50256	; 0xc450
   1a678:	movt	r0, #2
   1a67c:	ldr	r2, [r9]
   1a680:	movw	r1, #47404	; 0xb92c
   1a684:	movt	r1, #1
   1a688:	mov	r3, r8
   1a68c:	ldr	r0, [r0]
   1a690:	bl	113d0 <fprintf@plt>
   1a694:	b	1a638 <argp_parse@@Base+0x2f6c>
   1a698:	strd	r4, [sp, #-16]!
   1a69c:	movw	r5, #50232	; 0xc438
   1a6a0:	movt	r5, #2
   1a6a4:	str	r6, [sp, #8]
   1a6a8:	movw	r4, #50460	; 0xc51c
   1a6ac:	movt	r4, #2
   1a6b0:	str	lr, [sp, #12]
   1a6b4:	sub	sp, sp, #16
   1a6b8:	ldr	lr, [sp, #32]
   1a6bc:	ldr	ip, [r5]
   1a6c0:	ldr	r6, [sp, #36]	; 0x24
   1a6c4:	str	lr, [sp]
   1a6c8:	ldr	lr, [sp, #40]	; 0x28
   1a6cc:	str	ip, [r4]
   1a6d0:	ldr	ip, [r5, #4]
   1a6d4:	str	r6, [sp, #4]
   1a6d8:	str	r4, [sp, #8]
   1a6dc:	str	lr, [sp, #12]
   1a6e0:	str	ip, [r4, #4]
   1a6e4:	bl	1a100 <argp_parse@@Base+0x2a34>
   1a6e8:	ldr	ip, [r4]
   1a6ec:	movw	r3, #53188	; 0xcfc4
   1a6f0:	movt	r3, #2
   1a6f4:	ldr	r1, [r4, #8]
   1a6f8:	ldr	r2, [r4, #12]
   1a6fc:	str	ip, [r5]
   1a700:	str	r1, [r5, #8]
   1a704:	str	r2, [r3]
   1a708:	add	sp, sp, #16
   1a70c:	ldrd	r4, [sp]
   1a710:	ldr	r6, [sp, #8]
   1a714:	add	sp, sp, #12
   1a718:	pop	{pc}		; (ldr pc, [sp], #4)
   1a71c:	mov	ip, #0
   1a720:	push	{lr}		; (str lr, [sp, #-4]!)
   1a724:	mov	lr, #1
   1a728:	sub	sp, sp, #20
   1a72c:	mov	r3, ip
   1a730:	str	ip, [sp]
   1a734:	stmib	sp, {ip, lr}
   1a738:	bl	1a698 <argp_parse@@Base+0x2fcc>
   1a73c:	add	sp, sp, #20
   1a740:	pop	{pc}		; (ldr pc, [sp], #4)
   1a744:	umull	r2, r3, r1, r2
   1a748:	cmp	r3, #0
   1a74c:	bne	1a758 <argp_parse@@Base+0x308c>
   1a750:	mov	r1, r2
   1a754:	b	192ac <argp_parse@@Base+0x1be0>
   1a758:	str	r4, [sp, #-8]!
   1a75c:	str	lr, [sp, #4]
   1a760:	bl	113dc <__errno_location@plt>
   1a764:	mov	r3, #12
   1a768:	ldr	r4, [sp]
   1a76c:	add	sp, sp, #4
   1a770:	str	r3, [r0]
   1a774:	mov	r0, #0
   1a778:	pop	{pc}		; (ldr pc, [sp], #4)
   1a77c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a780:	mov	r7, r0
   1a784:	ldr	r6, [pc, #72]	; 1a7d4 <argp_parse@@Base+0x3108>
   1a788:	ldr	r5, [pc, #72]	; 1a7d8 <argp_parse@@Base+0x310c>
   1a78c:	add	r6, pc, r6
   1a790:	add	r5, pc, r5
   1a794:	sub	r6, r6, r5
   1a798:	mov	r8, r1
   1a79c:	mov	r9, r2
   1a7a0:	bl	11194 <fdopen@plt-0x20>
   1a7a4:	asrs	r6, r6, #2
   1a7a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a7ac:	mov	r4, #0
   1a7b0:	add	r4, r4, #1
   1a7b4:	ldr	r3, [r5], #4
   1a7b8:	mov	r2, r9
   1a7bc:	mov	r1, r8
   1a7c0:	mov	r0, r7
   1a7c4:	blx	r3
   1a7c8:	cmp	r6, r4
   1a7cc:	bne	1a7b0 <argp_parse@@Base+0x30e4>
   1a7d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a7d4:	andeq	r1, r1, r8, ror r7
   1a7d8:	andeq	r1, r1, r0, ror r7
   1a7dc:	bx	lr

Disassembly of section .fini:

0001a7e0 <.fini>:
   1a7e0:	push	{r3, lr}
   1a7e4:	pop	{r3, pc}
