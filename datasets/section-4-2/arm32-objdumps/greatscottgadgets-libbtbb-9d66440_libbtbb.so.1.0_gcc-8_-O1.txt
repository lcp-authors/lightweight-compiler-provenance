
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

0000208c <.init>:
    208c:	push	{r3, lr}
    2090:	bl	2500 <__assert_fail@plt+0x10>
    2094:	pop	{r3, pc}

Disassembly of section .plt:

00002098 <calloc@plt-0x14>:
    2098:	push	{lr}		; (str lr, [sp, #-4]!)
    209c:	ldr	lr, [pc, #4]	; 20a8 <calloc@plt-0x4>
    20a0:	add	lr, pc, lr
    20a4:	ldr	pc, [lr, #8]!
    20a8:	andeq	r6, r2, r8, asr pc

000020ac <calloc@plt>:
    20ac:	add	ip, pc, #0, 12
    20b0:	add	ip, ip, #155648	; 0x26000
    20b4:	ldr	pc, [ip, #3928]!	; 0xf58

000020b8 <raise@plt>:
    20b8:	add	ip, pc, #0, 12
    20bc:	add	ip, ip, #155648	; 0x26000
    20c0:	ldr	pc, [ip, #3920]!	; 0xf50

000020c4 <btbb_piconet_new@plt>:
    20c4:	add	ip, pc, #0, 12
    20c8:	add	ip, ip, #155648	; 0x26000
    20cc:	ldr	pc, [ip, #3912]!	; 0xf48

000020d0 <gen_hop_pattern@plt>:
    20d0:	add	ip, pc, #0, 12
    20d4:	add	ip, ip, #155648	; 0x26000
    20d8:	ldr	pc, [ip, #3904]!	; 0xf40

000020dc <count_bits@plt>:
    20dc:	add	ip, pc, #0, 12
    20e0:	add	ip, ip, #155648	; 0x26000
    20e4:	ldr	pc, [ip, #3896]!	; 0xf38

000020e8 <__cxa_finalize@plt>:
    20e8:	add	ip, pc, #0, 12
    20ec:	add	ip, ip, #155648	; 0x26000
    20f0:	ldr	pc, [ip, #3888]!	; 0xf30

000020f4 <btbb_get_payload_packed@plt>:
    20f4:	add	ip, pc, #0, 12
    20f8:	add	ip, ip, #155648	; 0x26000
    20fc:	ldr	pc, [ip, #3880]!	; 0xf28

00002100 <printf@plt>:
    2100:	add	ip, pc, #0, 12
    2104:	add	ip, ip, #155648	; 0x26000
    2108:	ldr	pc, [ip, #3872]!	; 0xf20

0000210c <fopen@plt>:
    210c:	add	ip, pc, #0, 12
    2110:	add	ip, ip, #155648	; 0x26000
    2114:	ldr	pc, [ip, #3864]!	; 0xf18

00002118 <lell_packet_is_data@plt>:
    2118:	add	ip, pc, #0, 12
    211c:	add	ip, ip, #155648	; 0x26000
    2120:	ldr	pc, [ip, #3856]!	; 0xf10

00002124 <fflush@plt>:
    2124:	add	ip, pc, #0, 12
    2128:	add	ip, ip, #155648	; 0x26000
    212c:	ldr	pc, [ip, #3848]!	; 0xf08

00002130 <btbb_packet_set_flag@plt>:
    2130:	add	ip, pc, #0, 12
    2134:	add	ip, ip, #155648	; 0x26000
    2138:	ldr	pc, [ip, #3840]!	; 0xf00

0000213c <pcapng_append_interface_option@plt>:
    213c:	add	ip, pc, #0, 12
    2140:	add	ip, ip, #155648	; 0x26000
    2144:	ldr	pc, [ip, #3832]!	; 0xef8

00002148 <free@plt>:
    2148:	add	ip, pc, #0, 12
    214c:	add	ip, ip, #155648	; 0x26000
    2150:	ldr	pc, [ip, #3824]!	; 0xef0

00002154 <btbb_packet_get_modulation@plt>:
    2154:	add	ip, pc, #0, 12
    2158:	add	ip, ip, #155648	; 0x26000
    215c:	ldr	pc, [ip, #3816]!	; 0xee8

00002160 <btbb_packet_get_ac_errors@plt>:
    2160:	add	ip, pc, #0, 12
    2164:	add	ip, ip, #155648	; 0x26000
    2168:	ldr	pc, [ip, #3808]!	; 0xee0

0000216c <memcpy@plt>:
    216c:	add	ip, pc, #0, 12
    2170:	add	ip, ip, #155648	; 0x26000
    2174:	ldr	pc, [ip, #3800]!	; 0xed8

00002178 <btbb_uap_from_header@plt>:
    2178:	add	ip, pc, #0, 12
    217c:	add	ip, ip, #155648	; 0x26000
    2180:	ldr	pc, [ip, #3792]!	; 0xed0

00002184 <btbb_packet_get_flag@plt>:
    2184:	add	ip, pc, #0, 12
    2188:	add	ip, ip, #155648	; 0x26000
    218c:	ldr	pc, [ip, #3784]!	; 0xec8

00002190 <fhs@plt>:
    2190:	add	ip, pc, #0, 12
    2194:	add	ip, ip, #155648	; 0x26000
    2198:	ldr	pc, [ip, #3776]!	; 0xec0

0000219c <EV4@plt>:
    219c:	add	ip, pc, #0, 12
    21a0:	add	ip, ip, #155648	; 0x26000
    21a4:	ldr	pc, [ip, #3768]!	; 0xeb8

000021a8 <btbb_piconet_get_uap@plt>:
    21a8:	add	ip, pc, #0, 12
    21ac:	add	ip, ip, #155648	; 0x26000
    21b0:	ldr	pc, [ip, #3760]!	; 0xeb0

000021b4 <memcmp@plt>:
    21b4:	add	ip, pc, #0, 12
    21b8:	add	ip, ip, #155648	; 0x26000
    21bc:	ldr	pc, [ip, #3752]!	; 0xea8

000021c0 <lell_pcap_close@plt>:
    21c0:	add	ip, pc, #0, 12
    21c4:	add	ip, ip, #155648	; 0x26000
    21c8:	ldr	pc, [ip, #3744]!	; 0xea0

000021cc <btbb_piconet_get_channel_seen@plt>:
    21cc:	add	ip, pc, #0, 12
    21d0:	add	ip, ip, #155648	; 0x26000
    21d4:	ldr	pc, [ip, #3736]!	; 0xe98

000021d8 <btbb_pcap_open@plt>:
    21d8:	add	ip, pc, #0, 12
    21dc:	add	ip, ip, #155648	; 0x26000
    21e0:	ldr	pc, [ip, #3728]!	; 0xe90

000021e4 <btbb_header_present@plt>:
    21e4:	add	ip, pc, #0, 12
    21e8:	add	ip, ip, #155648	; 0x26000
    21ec:	ldr	pc, [ip, #3720]!	; 0xe88

000021f0 <btbb_piconet_get_flag@plt>:
    21f0:	add	ip, pc, #0, 12
    21f4:	add	ip, ip, #155648	; 0x26000
    21f8:	ldr	pc, [ip, #3712]!	; 0xe80

000021fc <pcapng_create@plt>:
    21fc:	add	ip, pc, #0, 12
    2200:	add	ip, ip, #155648	; 0x26000
    2204:	ldr	pc, [ip, #3704]!	; 0xe78

00002208 <DM@plt>:
    2208:	add	ip, pc, #0, 12
    220c:	add	ip, ip, #155648	; 0x26000
    2210:	ldr	pc, [ip, #3696]!	; 0xe70

00002214 <btbb_piconet_set_flag@plt>:
    2214:	add	ip, pc, #0, 12
    2218:	add	ip, ip, #155648	; 0x26000
    221c:	ldr	pc, [ip, #3688]!	; 0xe68

00002220 <HV@plt>:
    2220:	add	ip, pc, #0, 12
    2224:	add	ip, ip, #155648	; 0x26000
    2228:	ldr	pc, [ip, #3680]!	; 0xe60

0000222c <perror@plt>:
    222c:	add	ip, pc, #0, 12
    2230:	add	ip, ip, #155648	; 0x26000
    2234:	ldr	pc, [ip, #3672]!	; 0xe58

00002238 <btbb_piconet_set_channel_seen@plt>:
    2238:	add	ip, pc, #0, 12
    223c:	add	ip, ip, #155648	; 0x26000
    2240:	ldr	pc, [ip, #3664]!	; 0xe50

00002244 <perm_table_init@plt>:
    2244:	add	ip, pc, #0, 12
    2248:	add	ip, ip, #155648	; 0x26000
    224c:	ldr	pc, [ip, #3656]!	; 0xe48

00002250 <btbb_packet_set_uap@plt>:
    2250:	add	ip, pc, #0, 12
    2254:	add	ip, ip, #155648	; 0x26000
    2258:	ldr	pc, [ip, #3648]!	; 0xe40

0000225c <fwrite@plt>:
    225c:	add	ip, pc, #0, 12
    2260:	add	ip, ip, #155648	; 0x26000
    2264:	ldr	pc, [ip, #3640]!	; 0xe38

00002268 <btbb_gen_syncword@plt>:
    2268:	add	ip, pc, #0, 12
    226c:	add	ip, ip, #155648	; 0x26000
    2270:	ldr	pc, [ip, #3632]!	; 0xe30

00002274 <btbb_pcap_close@plt>:
    2274:	add	ip, pc, #0, 12
    2278:	add	ip, ip, #155648	; 0x26000
    227c:	ldr	pc, [ip, #3624]!	; 0xe28

00002280 <crc_check@plt>:
    2280:	add	ip, pc, #0, 12
    2284:	add	ip, ip, #155648	; 0x26000
    2288:	ldr	pc, [ip, #3616]!	; 0xe20

0000228c <btbb_decode@plt>:
    228c:	add	ip, pc, #0, 12
    2290:	add	ip, ip, #155648	; 0x26000
    2294:	ldr	pc, [ip, #3608]!	; 0xe18

00002298 <btbb_winnow@plt>:
    2298:	add	ip, pc, #0, 12
    229c:	add	ip, ip, #155648	; 0x26000
    22a0:	ldr	pc, [ip, #3600]!	; 0xe10

000022a4 <lell_get_adv_type_str@plt>:
    22a4:	add	ip, pc, #0, 12
    22a8:	add	ip, ip, #155648	; 0x26000
    22ac:	ldr	pc, [ip, #3592]!	; 0xe08

000022b0 <get_hop_pattern@plt>:
    22b0:	add	ip, pc, #0, 12
    22b4:	add	ip, ip, #155648	; 0x26000
    22b8:	ldr	pc, [ip, #3584]!	; 0xe00

000022bc <puts@plt>:
    22bc:	add	ip, pc, #0, 12
    22c0:	add	ip, ip, #155648	; 0x26000
    22c4:	ldr	pc, [ip, #3576]!	; 0xdf8

000022c8 <malloc@plt>:
    22c8:	add	ip, pc, #0, 12
    22cc:	add	ip, ip, #155648	; 0x26000
    22d0:	ldr	pc, [ip, #3568]!	; 0xdf0

000022d4 <try_hop@plt>:
    22d4:	add	ip, pc, #0, 12
    22d8:	add	ip, ip, #155648	; 0x26000
    22dc:	ldr	pc, [ip, #3560]!	; 0xde8

000022e0 <btbb_packet_new@plt>:
    22e0:	add	ip, pc, #0, 12
    22e4:	add	ip, ip, #155648	; 0x26000
    22e8:	ldr	pc, [ip, #3552]!	; 0xde0

000022ec <btbb_pcap_dump@plt>:
    22ec:	add	ip, pc, #0, 12
    22f0:	add	ip, ip, #155648	; 0x26000
    22f4:	ldr	pc, [ip, #3544]!	; 0xdd8

000022f8 <__gmon_start__@plt>:
    22f8:	add	ip, pc, #0, 12
    22fc:	add	ip, ip, #155648	; 0x26000
    2300:	ldr	pc, [ip, #3536]!	; 0xdd0

00002304 <open@plt>:
    2304:	add	ip, pc, #0, 12
    2308:	add	ip, ip, #155648	; 0x26000
    230c:	ldr	pc, [ip, #3528]!	; 0xdc8

00002310 <__ctype_b_loc@plt>:
    2310:	add	ip, pc, #0, 12
    2314:	add	ip, ip, #155648	; 0x26000
    2318:	ldr	pc, [ip, #3520]!	; 0xdc0

0000231c <exit@plt>:
    231c:	add	ip, pc, #0, 12
    2320:	add	ip, ip, #155648	; 0x26000
    2324:	ldr	pc, [ip, #3512]!	; 0xdb8

00002328 <btbb_packet_get_payload_length@plt>:
    2328:	add	ip, pc, #0, 12
    232c:	add	ip, ip, #155648	; 0x26000
    2330:	ldr	pc, [ip, #3504]!	; 0xdb0

00002334 <strlen@plt>:
    2334:	add	ip, pc, #0, 12
    2338:	add	ip, ip, #155648	; 0x26000
    233c:	ldr	pc, [ip, #3496]!	; 0xda8

00002340 <btbb_decode_header@plt>:
    2340:	add	ip, pc, #0, 12
    2344:	add	ip, ip, #155648	; 0x26000
    2348:	ldr	pc, [ip, #3488]!	; 0xda0

0000234c <mmap@plt>:
    234c:	add	ip, pc, #0, 12
    2350:	add	ip, ip, #155648	; 0x26000
    2354:	ldr	pc, [ip, #3480]!	; 0xd98

00002358 <btbb_packet_get_header_packed@plt>:
    2358:	add	ip, pc, #0, 12
    235c:	add	ip, ip, #155648	; 0x26000
    2360:	ldr	pc, [ip, #3472]!	; 0xd90

00002364 <lell_pcapng_record_connect_req@plt>:
    2364:	add	ip, pc, #0, 12
    2368:	add	ip, ip, #155648	; 0x26000
    236c:	ldr	pc, [ip, #3464]!	; 0xd88

00002370 <lell_get_channel_k@plt>:
    2370:	add	ip, pc, #0, 12
    2374:	add	ip, ip, #155648	; 0x26000
    2378:	ldr	pc, [ip, #3456]!	; 0xd80

0000237c <fprintf@plt>:
    237c:	add	ip, pc, #0, 12
    2380:	add	ip, ip, #155648	; 0x26000
    2384:	ldr	pc, [ip, #3448]!	; 0xd78

00002388 <getpagesize@plt>:
    2388:	add	ip, pc, #0, 12
    238c:	add	ip, ip, #155648	; 0x26000
    2390:	ldr	pc, [ip, #3440]!	; 0xd70

00002394 <pcapng_append_packet@plt>:
    2394:	add	ip, pc, #0, 12
    2398:	add	ip, ip, #155648	; 0x26000
    239c:	ldr	pc, [ip, #3432]!	; 0xd68

000023a0 <btbb_packet_get_transport@plt>:
    23a0:	add	ip, pc, #0, 12
    23a4:	add	ip, ip, #155648	; 0x26000
    23a8:	ldr	pc, [ip, #3424]!	; 0xd60

000023ac <find_known_lap@plt>:
    23ac:	add	ip, pc, #0, 12
    23b0:	add	ip, ip, #155648	; 0x26000
    23b4:	ldr	pc, [ip, #3416]!	; 0xd58

000023b8 <address_precalc@plt>:
    23b8:	add	ip, pc, #0, 12
    23bc:	add	ip, ip, #155648	; 0x26000
    23c0:	ldr	pc, [ip, #3408]!	; 0xd50

000023c4 <memset@plt>:
    23c4:	add	ip, pc, #0, 12
    23c8:	add	ip, ip, #155648	; 0x26000
    23cc:	ldr	pc, [ip, #3400]!	; 0xd48

000023d0 <putchar@plt>:
    23d0:	add	ip, pc, #0, 12
    23d4:	add	ip, ip, #155648	; 0x26000
    23d8:	ldr	pc, [ip, #3392]!	; 0xd40

000023dc <strncpy@plt>:
    23dc:	add	ip, pc, #0, 12
    23e0:	add	ip, ip, #155648	; 0x26000
    23e4:	ldr	pc, [ip, #3384]!	; 0xd38

000023e8 <EV3@plt>:
    23e8:	add	ip, pc, #0, 12
    23ec:	add	ip, ip, #155648	; 0x26000
    23f0:	ldr	pc, [ip, #3376]!	; 0xd30

000023f4 <btbb_packet_get_lap@plt>:
    23f4:	add	ip, pc, #0, 12
    23f8:	add	ip, ip, #155648	; 0x26000
    23fc:	ldr	pc, [ip, #3368]!	; 0xd28

00002400 <lell_packet_new@plt>:
    2400:	add	ip, pc, #0, 12
    2404:	add	ip, ip, #155648	; 0x26000
    2408:	ldr	pc, [ip, #3360]!	; 0xd20

0000240c <bt_compidtostr@plt>:
    240c:	add	ip, pc, #0, 12
    2410:	add	ip, ip, #155648	; 0x26000
    2414:	ldr	pc, [ip, #3352]!	; 0xd18

00002418 <write@plt>:
    2418:	add	ip, pc, #0, 12
    241c:	add	ip, ip, #155648	; 0x26000
    2420:	ldr	pc, [ip, #3344]!	; 0xd10

00002424 <get_piconet@plt>:
    2424:	add	ip, pc, #0, 12
    2428:	add	ip, ip, #155648	; 0x26000
    242c:	ldr	pc, [ip, #3336]!	; 0xd08

00002430 <perm5@plt>:
    2430:	add	ip, pc, #0, 12
    2434:	add	ip, ip, #155648	; 0x26000
    2438:	ldr	pc, [ip, #3328]!	; 0xd00

0000243c <fclose@plt>:
    243c:	add	ip, pc, #0, 12
    2440:	add	ip, ip, #155648	; 0x26000
    2444:	ldr	pc, [ip, #3320]!	; 0xcf8

00002448 <EV5@plt>:
    2448:	add	ip, pc, #0, 12
    244c:	add	ip, ip, #155648	; 0x26000
    2450:	ldr	pc, [ip, #3312]!	; 0xcf0

00002454 <munmap@plt>:
    2454:	add	ip, pc, #0, 12
    2458:	add	ip, ip, #155648	; 0x26000
    245c:	ldr	pc, [ip, #3304]!	; 0xce8

00002460 <DH@plt>:
    2460:	add	ip, pc, #0, 12
    2464:	add	ip, ip, #155648	; 0x26000
    2468:	ldr	pc, [ip, #3296]!	; 0xce0

0000246c <btbb_packet_get_channel@plt>:
    246c:	add	ip, pc, #0, 12
    2470:	add	ip, ip, #155648	; 0x26000
    2474:	ldr	pc, [ip, #3288]!	; 0xcd8

00002478 <precalc@plt>:
    2478:	add	ip, pc, #0, 12
    247c:	add	ip, ip, #155648	; 0x26000
    2480:	ldr	pc, [ip, #3280]!	; 0xcd0

00002484 <btbb_decode_payload@plt>:
    2484:	add	ip, pc, #0, 12
    2488:	add	ip, ip, #155648	; 0x26000
    248c:	ldr	pc, [ip, #3272]!	; 0xcc8

00002490 <promiscuous_packet_search@plt>:
    2490:	add	ip, pc, #0, 12
    2494:	add	ip, ip, #155648	; 0x26000
    2498:	ldr	pc, [ip, #3264]!	; 0xcc0

0000249c <pcapng_close@plt>:
    249c:	add	ip, pc, #0, 12
    24a0:	add	ip, ip, #155648	; 0x26000
    24a4:	ldr	pc, [ip, #3256]!	; 0xcb8

000024a8 <btbb_print_packet@plt>:
    24a8:	add	ip, pc, #0, 12
    24ac:	add	ip, ip, #155648	; 0x26000
    24b0:	ldr	pc, [ip, #3248]!	; 0xcb0

000024b4 <fast_perm@plt>:
    24b4:	add	ip, pc, #0, 12
    24b8:	add	ip, ip, #155648	; 0x26000
    24bc:	ldr	pc, [ip, #3240]!	; 0xca8

000024c0 <try_clock@plt>:
    24c0:	add	ip, pc, #0, 12
    24c4:	add	ip, ip, #155648	; 0x26000
    24c8:	ldr	pc, [ip, #3232]!	; 0xca0

000024cc <btbb_init_hop_reversal@plt>:
    24cc:	add	ip, pc, #0, 12
    24d0:	add	ip, ip, #155648	; 0x26000
    24d4:	ldr	pc, [ip, #3224]!	; 0xc98

000024d8 <btbb_init_piconet@plt>:
    24d8:	add	ip, pc, #0, 12
    24dc:	add	ip, ip, #155648	; 0x26000
    24e0:	ldr	pc, [ip, #3216]!	; 0xc90

000024e4 <close@plt>:
    24e4:	add	ip, pc, #0, 12
    24e8:	add	ip, ip, #155648	; 0x26000
    24ec:	ldr	pc, [ip, #3208]!	; 0xc88

000024f0 <__assert_fail@plt>:
    24f0:	add	ip, pc, #0, 12
    24f4:	add	ip, ip, #155648	; 0x26000
    24f8:	ldr	pc, [ip, #3200]!	; 0xc80

Disassembly of section .text:

00002500 <btbb_gen_syncword@@Base-0xbf8>:
    2500:	ldr	r3, [pc, #20]	; 251c <__assert_fail@plt+0x2c>
    2504:	ldr	r2, [pc, #20]	; 2520 <__assert_fail@plt+0x30>
    2508:	add	r3, pc, r3
    250c:	ldr	r2, [r3, r2]
    2510:	cmp	r2, #0
    2514:	bxeq	lr
    2518:	b	22f8 <__gmon_start__@plt>
    251c:	strdeq	r6, [r2], -r0
    2520:	muleq	r0, r0, r1
    2524:	ldr	r0, [pc, #44]	; 2558 <__assert_fail@plt+0x68>
    2528:	ldr	r3, [pc, #44]	; 255c <__assert_fail@plt+0x6c>
    252c:	add	r0, pc, r0
    2530:	add	r3, pc, r3
    2534:	cmp	r3, r0
    2538:	ldr	r3, [pc, #32]	; 2560 <__assert_fail@plt+0x70>
    253c:	add	r3, pc, r3
    2540:	bxeq	lr
    2544:	ldr	r2, [pc, #24]	; 2564 <__assert_fail@plt+0x74>
    2548:	ldr	r3, [r3, r2]
    254c:	cmp	r3, #0
    2550:	bxeq	lr
    2554:	bx	r3
    2558:	andeq	r6, r2, r0, ror ip
    255c:	andeq	r6, r2, ip, ror #24
    2560:			; <UNDEFINED> instruction: 0x00026abc
    2564:	andeq	r0, r0, r0, lsl #3
    2568:	ldr	r0, [pc, #56]	; 25a8 <__assert_fail@plt+0xb8>
    256c:	ldr	r3, [pc, #56]	; 25ac <__assert_fail@plt+0xbc>
    2570:	add	r0, pc, r0
    2574:	add	r3, pc, r3
    2578:	sub	r1, r3, r0
    257c:	ldr	r3, [pc, #44]	; 25b0 <__assert_fail@plt+0xc0>
    2580:	asr	r1, r1, #2
    2584:	add	r3, pc, r3
    2588:	add	r1, r1, r1, lsr #31
    258c:	asrs	r1, r1, #1
    2590:	bxeq	lr
    2594:	ldr	r2, [pc, #24]	; 25b4 <__assert_fail@plt+0xc4>
    2598:	ldr	r3, [r3, r2]
    259c:	cmp	r3, #0
    25a0:	bxeq	lr
    25a4:	bx	r3
    25a8:	andeq	r6, r2, ip, lsr #24
    25ac:	andeq	r6, r2, r8, lsr #24
    25b0:	andeq	r6, r2, r4, ror sl
    25b4:	muleq	r0, r8, r1
    25b8:	ldr	r3, [pc, #76]	; 260c <__assert_fail@plt+0x11c>
    25bc:	ldr	r2, [pc, #76]	; 2610 <__assert_fail@plt+0x120>
    25c0:	add	r3, pc, r3
    25c4:	add	r2, pc, r2
    25c8:	ldrb	r3, [r3]
    25cc:	cmp	r3, #0
    25d0:	bxne	lr
    25d4:	ldr	r3, [pc, #56]	; 2614 <__assert_fail@plt+0x124>
    25d8:	push	{r4, lr}
    25dc:	ldr	r3, [r2, r3]
    25e0:	cmp	r3, #0
    25e4:	beq	25f4 <__assert_fail@plt+0x104>
    25e8:	ldr	r3, [pc, #40]	; 2618 <__assert_fail@plt+0x128>
    25ec:	ldr	r0, [pc, r3]
    25f0:	bl	20e8 <__cxa_finalize@plt>
    25f4:	bl	2524 <__assert_fail@plt+0x34>
    25f8:	ldr	r3, [pc, #28]	; 261c <__assert_fail@plt+0x12c>
    25fc:	mov	r2, #1
    2600:	add	r3, pc, r3
    2604:	strb	r2, [r3]
    2608:	pop	{r4, pc}
    260c:	ldrdeq	r6, [r2], -ip
    2610:	andeq	r6, r2, r4, lsr sl
    2614:	andeq	r0, r0, ip, ror r1
    2618:	andeq	r6, r2, r8, lsr #23
    261c:	muleq	r2, ip, fp
    2620:	b	2568 <__assert_fail@plt+0x78>
    2624:	andeq	r0, r0, r0
    2628:	str	r4, [sp, #-8]!
    262c:	str	lr, [sp, #4]
    2630:	ldr	r3, [pc, #124]	; 26b4 <__assert_fail@plt+0x1c4>
    2634:	add	r3, pc, r3
    2638:	lsr	r2, r1, #24
    263c:	add	ip, r3, r2, lsl #3
    2640:	ldr	r2, [r3, r2, lsl #3]
    2644:	ldr	ip, [ip, #4]
    2648:	eor	r0, r0, r2
    264c:	add	r3, r3, #2048	; 0x800
    2650:	and	r2, r1, #255	; 0xff
    2654:	add	lr, r3, r2, lsl #3
    2658:	ldr	r3, [r3, r2, lsl #3]
    265c:	ldr	r2, [lr, #4]
    2660:	eor	r0, r0, r3
    2664:	eor	ip, ip, r2
    2668:	ldr	r3, [pc, #72]	; 26b8 <__assert_fail@plt+0x1c8>
    266c:	add	r3, pc, r3
    2670:	sub	lr, r3, #4080	; 0xff0
    2674:	ubfx	r2, r1, #8, #8
    2678:	add	lr, lr, r2, lsl #3
    267c:	ldr	r4, [lr, #-8]
    2680:	ldr	r2, [lr, #-4]
    2684:	eor	r0, r0, r4
    2688:	eor	r2, r2, ip
    268c:	sub	r3, r3, #2032	; 0x7f0
    2690:	ubfx	r1, r1, #16, #8
    2694:	add	r3, r3, r1, lsl #3
    2698:	ldr	ip, [r3, #-8]
    269c:	ldr	r1, [r3, #-4]
    26a0:	eor	r0, r0, ip
    26a4:	eor	r1, r1, r2
    26a8:	ldr	r4, [sp]
    26ac:	add	sp, sp, #4
    26b0:	pop	{pc}		; (ldr pc, [sp], #4)
    26b4:	andeq	sp, r0, r4, asr #20
    26b8:	andeq	pc, r0, r4, lsl #20
    26bc:	cmp	r1, #0
    26c0:	ble	26f8 <__assert_fail@plt+0x208>
    26c4:	push	{lr}		; (str lr, [sp, #-4]!)
    26c8:	sub	r2, r0, #1
    26cc:	add	r1, r2, r1
    26d0:	mov	r3, #0
    26d4:	rsb	lr, r0, #1
    26d8:	add	r0, lr, r2
    26dc:	ldrb	ip, [r2, #1]!
    26e0:	orr	r3, r3, ip, lsl r0
    26e4:	uxtb	r3, r3
    26e8:	cmp	r2, r1
    26ec:	bne	26d8 <__assert_fail@plt+0x1e8>
    26f0:	mov	r0, r3
    26f4:	pop	{pc}		; (ldr pc, [sp], #4)
    26f8:	mov	r3, #0
    26fc:	mov	r0, r3
    2700:	bx	lr
    2704:	cmp	r1, #0
    2708:	ble	2740 <__assert_fail@plt+0x250>
    270c:	push	{lr}		; (str lr, [sp, #-4]!)
    2710:	sub	r2, r0, #1
    2714:	add	r1, r2, r1
    2718:	mov	r3, #0
    271c:	rsb	lr, r0, #1
    2720:	add	r0, lr, r2
    2724:	ldrb	ip, [r2, #1]!
    2728:	orr	r3, r3, ip, lsl r0
    272c:	uxth	r3, r3
    2730:	cmp	r2, r1
    2734:	bne	2720 <__assert_fail@plt+0x230>
    2738:	mov	r0, r3
    273c:	pop	{pc}		; (ldr pc, [sp], #4)
    2740:	mov	r3, #0
    2744:	mov	r0, r3
    2748:	bx	lr
    274c:	lsl	r3, r0, #7
    2750:	orr	r3, r3, r0, lsr #7
    2754:	asr	r2, r0, #5
    2758:	and	r2, r2, #2
    275c:	orr	r3, r3, r2
    2760:	asr	r2, r0, #3
    2764:	and	r2, r2, #4
    2768:	orr	r3, r3, r2
    276c:	asr	r2, r0, #1
    2770:	and	r2, r2, #8
    2774:	orr	r3, r3, r2
    2778:	lsl	r2, r0, #1
    277c:	and	r2, r2, #16
    2780:	orr	r3, r3, r2
    2784:	lsl	r2, r0, #3
    2788:	and	r2, r2, #32
    278c:	orr	r3, r3, r2
    2790:	lsl	r0, r0, #5
    2794:	and	r0, r0, #64	; 0x40
    2798:	orr	r0, r3, r0
    279c:	uxtb	r0, r0
    27a0:	bx	lr
    27a4:	strd	r4, [sp, #-16]!
    27a8:	str	r6, [sp, #8]
    27ac:	str	lr, [sp, #12]
    27b0:	cmp	r2, #0
    27b4:	ble	283c <__assert_fail@plt+0x34c>
    27b8:	mov	r4, r1
    27bc:	add	r1, r1, r2
    27c0:	mov	r5, #0
    27c4:	ldrb	ip, [r0]
    27c8:	ldrb	lr, [r0, #2]
    27cc:	orr	r6, ip, lr
    27d0:	ldrb	r3, [r0, #1]
    27d4:	and	r3, r3, r6
    27d8:	and	ip, ip, lr
    27dc:	orr	r3, r3, ip
    27e0:	strb	r3, [r4], #1
    27e4:	ldrb	ip, [r0]
    27e8:	ldrb	lr, [r0, #1]
    27ec:	ldrb	r6, [r0, #2]
    27f0:	eor	r3, ip, lr
    27f4:	eor	lr, lr, r6
    27f8:	orr	r3, r3, lr
    27fc:	eor	ip, ip, r6
    2800:	orr	r3, r3, ip
    2804:	add	r5, r5, r3
    2808:	add	r0, r0, #3
    280c:	cmp	r4, r1
    2810:	bne	27c4 <__assert_fail@plt+0x2d4>
    2814:	add	r3, r2, #3
    2818:	cmp	r2, #0
    281c:	movlt	r2, r3
    2820:	cmp	r5, r2, asr #2
    2824:	movlt	r0, #1
    2828:	movge	r0, #0
    282c:	ldrd	r4, [sp]
    2830:	ldr	r6, [sp, #8]
    2834:	add	sp, sp, #12
    2838:	pop	{pc}		; (ldr pc, [sp], #4)
    283c:	mov	r5, #0
    2840:	b	2814 <__assert_fail@plt+0x324>
    2844:	str	r4, [sp, #-8]!
    2848:	str	lr, [sp, #4]
    284c:	mov	r2, #9
    2850:	tst	r1, #128	; 0x80
    2854:	eorne	r1, r1, #101	; 0x65
    2858:	asr	r3, r0, r2
    285c:	eor	r3, r3, r1, lsr #7
    2860:	and	r3, r3, #1
    2864:	orr	r1, r3, r1, lsl #1
    2868:	uxtb	r1, r1
    286c:	sub	r2, r2, #1
    2870:	cmn	r2, #1
    2874:	bne	2850 <__assert_fail@plt+0x360>
    2878:	mov	r0, r1
    287c:	bl	274c <__assert_fail@plt+0x25c>
    2880:	ldr	r4, [sp]
    2884:	add	sp, sp, #4
    2888:	pop	{pc}		; (ldr pc, [sp], #4)
    288c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2890:	strd	r6, [sp, #8]
    2894:	str	r8, [sp, #16]
    2898:	str	lr, [sp, #20]
    289c:	mov	r6, r0
    28a0:	add	r7, r0, #68	; 0x44
    28a4:	ldr	r5, [r0, #64]	; 0x40
    28a8:	sub	r5, r5, #2
    28ac:	lsl	r5, r5, #3
    28b0:	ldrb	r0, [r0, #9]
    28b4:	bl	274c <__assert_fail@plt+0x25c>
    28b8:	lsl	r0, r0, #8
    28bc:	uxth	r4, r0
    28c0:	cmp	r5, #0
    28c4:	ble	290c <__assert_fail@plt+0x41c>
    28c8:	mov	r3, #0
    28cc:	ldrb	r0, [r7, r3]
    28d0:	eor	r0, r0, r4
    28d4:	lsr	r4, r4, #1
    28d8:	orr	r4, r4, r0, lsl #15
    28dc:	sxth	r4, r4
    28e0:	ubfx	r0, r4, #5, #11
    28e4:	and	r0, r0, #1024	; 0x400
    28e8:	eor	r4, r4, r0
    28ec:	ubfx	r0, r4, #12, #4
    28f0:	and	r0, r0, #8
    28f4:	eor	r4, r4, r0
    28f8:	uxth	r4, r4
    28fc:	add	r3, r3, #1
    2900:	uxth	r3, r3
    2904:	cmp	r5, r3
    2908:	bgt	28cc <__assert_fail@plt+0x3dc>
    290c:	add	r0, r5, #68	; 0x44
    2910:	mov	r1, #16
    2914:	add	r0, r6, r0
    2918:	bl	2704 <__assert_fail@plt+0x214>
    291c:	cmp	r0, r4
    2920:	movne	r0, #0
    2924:	moveq	r0, #1
    2928:	ldrd	r4, [sp]
    292c:	ldrd	r6, [sp, #8]
    2930:	ldr	r8, [sp, #16]
    2934:	add	sp, sp, #20
    2938:	pop	{pc}		; (ldr pc, [sp], #4)
    293c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2940:	strd	r6, [sp, #8]
    2944:	strd	r8, [sp, #16]
    2948:	strd	sl, [sp, #24]
    294c:	str	lr, [sp, #32]
    2950:	sub	sp, sp, #52	; 0x34
    2954:	str	r0, [sp, #8]
    2958:	str	r1, [sp, #12]
    295c:	mov	r5, r2
    2960:	ldr	r2, [sp, #88]	; 0x58
    2964:	str	r2, [sp, #16]
    2968:	ldr	r2, [sp, #92]	; 0x5c
    296c:	str	r2, [sp, #20]
    2970:	cmp	r5, #57	; 0x39
    2974:	bgt	2e7c <__assert_fail@plt+0x98c>
    2978:	sub	r2, r3, #1
    297c:	movw	r7, #31161	; 0x79b9
    2980:	movt	r7, #40503	; 0x9e37
    2984:	movw	r3, #47810	; 0xbac2
    2988:	movt	r3, #40777	; 0x9f49
    298c:	str	r3, [sp, #24]
    2990:	movw	r3, #63341	; 0xf76d
    2994:	movt	r3, #7
    2998:	str	r3, [sp, #28]
    299c:	movw	r3, #16649	; 0x4109
    29a0:	movt	r3, #274	; 0x112
    29a4:	str	r3, [sp, #32]
    29a8:	movw	fp, #48887	; 0xbef7
    29ac:	movt	fp, #65261	; 0xfeed
    29b0:	movw	r3, #8161	; 0x1fe1
    29b4:	movt	r3, #40977	; 0xa011
    29b8:	str	r3, [sp, #44]	; 0x2c
    29bc:	str	r7, [sp, #36]	; 0x24
    29c0:	str	fp, [sp, #40]	; 0x28
    29c4:	mov	fp, r2
    29c8:	b	2be4 <__assert_fail@plt+0x6f4>
    29cc:	ldr	r3, [sp, #16]
    29d0:	eor	r0, r9, r3
    29d4:	ldr	r3, [sp, #20]
    29d8:	eor	r1, r8, r3
    29dc:	bl	2628 <__assert_fail@plt+0x138>
    29e0:	mov	r6, r0
    29e4:	mov	r7, r1
    29e8:	mov	r0, #48	; 0x30
    29ec:	bl	22c8 <malloc@plt>
    29f0:	mov	r4, r0
    29f4:	strd	r6, [r0]
    29f8:	str	r9, [r0, #8]
    29fc:	str	r8, [r0, #12]
    2a00:	mov	r3, #0
    2a04:	str	r3, [r0, #24]
    2a08:	str	r0, [r4, #36]	; 0x24
    2a0c:	mov	r3, #8
    2a10:	str	r3, [r0, #40]	; 0x28
    2a14:	ldr	r3, [pc, #1148]	; 2e98 <__assert_fail@plt+0x9a8>
    2a18:	add	r3, pc, r3
    2a1c:	ldr	r3, [r3]
    2a20:	cmp	r3, #0
    2a24:	beq	2c38 <__assert_fail@plt+0x748>
    2a28:	ldr	r2, [r3, #16]
    2a2c:	ldr	r2, [r2, #16]
    2a30:	str	r0, [r2, #8]
    2a34:	ldr	r1, [r3, #16]
    2a38:	ldr	r2, [r1, #16]
    2a3c:	ldr	r1, [r1, #20]
    2a40:	sub	r2, r2, r1
    2a44:	str	r2, [r0, #20]
    2a48:	ldr	r3, [r3, #16]
    2a4c:	add	r2, r0, #16
    2a50:	str	r2, [r3, #16]
    2a54:	ldr	r3, [pc, #1088]	; 2e9c <__assert_fail@plt+0x9ac>
    2a58:	add	r3, pc, r3
    2a5c:	ldr	r2, [r3]
    2a60:	ldr	r1, [r2, #16]
    2a64:	ldr	r3, [r1, #12]
    2a68:	add	r3, r3, #1
    2a6c:	str	r3, [r1, #12]
    2a70:	ldr	r3, [r2, #16]
    2a74:	str	r3, [r4, #16]
    2a78:	ldrb	r3, [r4, #7]
    2a7c:	ldrb	r1, [r4, #4]
    2a80:	ldr	r0, [sp, #36]	; 0x24
    2a84:	add	r1, r1, r0
    2a88:	add	r1, r1, r3, lsl #24
    2a8c:	ldrb	r3, [r4, #6]
    2a90:	add	r1, r1, r3, lsl #16
    2a94:	ldrb	r3, [r4, #5]
    2a98:	add	r1, r1, r3, lsl #8
    2a9c:	ldrb	r0, [r4, #3]
    2aa0:	ldrb	r3, [r4]
    2aa4:	ldr	ip, [sp, #24]
    2aa8:	add	r3, r3, ip
    2aac:	add	r3, r3, r0, lsl #24
    2ab0:	ldrb	r0, [r4, #2]
    2ab4:	add	r3, r3, r0, lsl #16
    2ab8:	ldrb	r0, [r4, #1]
    2abc:	add	r3, r3, r0, lsl #8
    2ac0:	sub	r3, r3, r1
    2ac4:	ldr	r0, [sp, #28]
    2ac8:	eor	r3, r3, r0
    2acc:	ldr	r0, [sp, #32]
    2ad0:	add	r1, r1, r0
    2ad4:	sub	r1, r1, r3
    2ad8:	eor	r1, r1, r3, lsl #8
    2adc:	ldr	r0, [sp, #40]	; 0x28
    2ae0:	sub	r0, r0, r3
    2ae4:	sub	r0, r0, r1
    2ae8:	eor	r0, r0, r1, lsr #13
    2aec:	sub	r3, r3, r1
    2af0:	sub	r3, r3, r0
    2af4:	eor	r3, r3, r0, lsr #12
    2af8:	sub	r1, r1, r0
    2afc:	sub	r1, r1, r3
    2b00:	eor	r1, r1, r3, lsl #16
    2b04:	sub	r0, r0, r3
    2b08:	sub	r0, r0, r1
    2b0c:	eor	r0, r0, r1, lsr #5
    2b10:	sub	r3, r3, r1
    2b14:	sub	r3, r3, r0
    2b18:	eor	r3, r3, r0, lsr #3
    2b1c:	sub	r1, r1, r0
    2b20:	sub	r1, r1, r3
    2b24:	eor	r1, r1, r3, lsl #10
    2b28:	sub	r3, r0, r3
    2b2c:	sub	r3, r3, r1
    2b30:	eor	r3, r3, r1, lsr #15
    2b34:	str	r3, [r4, #44]	; 0x2c
    2b38:	ldr	r0, [r2, #16]
    2b3c:	ldr	r1, [r0, #4]
    2b40:	sub	r1, r1, #1
    2b44:	and	r3, r3, r1
    2b48:	add	r3, r3, r3, lsl #1
    2b4c:	lsl	ip, r3, #2
    2b50:	ldr	r1, [r0]
    2b54:	add	r1, r1, ip
    2b58:	ldr	r0, [r1, #4]
    2b5c:	add	r0, r0, #1
    2b60:	str	r0, [r1, #4]
    2b64:	ldr	r1, [r2, #16]
    2b68:	ldr	r1, [r1]
    2b6c:	ldr	r1, [r1, r3, lsl #2]
    2b70:	str	r1, [r4, #32]
    2b74:	mov	r1, #0
    2b78:	str	r1, [r4, #28]
    2b7c:	ldr	r1, [r2, #16]
    2b80:	ldr	r1, [r1]
    2b84:	ldr	r1, [r1, r3, lsl #2]
    2b88:	cmp	r1, #0
    2b8c:	addne	r0, r4, #16
    2b90:	strne	r0, [r1, #12]
    2b94:	ldr	r1, [r2, #16]
    2b98:	ldr	r1, [r1]
    2b9c:	add	r0, r4, #16
    2ba0:	str	r0, [r1, r3, lsl #2]
    2ba4:	ldr	r3, [r2, #16]
    2ba8:	ldr	r2, [r3]
    2bac:	add	r2, r2, ip
    2bb0:	ldr	r3, [r2, #8]
    2bb4:	add	r3, r3, #1
    2bb8:	add	r3, r3, r3, lsl #2
    2bbc:	ldr	r2, [r2, #4]
    2bc0:	cmp	r2, r3, lsl #1
    2bc4:	bcc	2bd8 <__assert_fail@plt+0x6e8>
    2bc8:	ldr	r7, [r4, #16]
    2bcc:	ldr	r3, [r7, #36]	; 0x24
    2bd0:	cmp	r3, #1
    2bd4:	bne	2cd8 <__assert_fail@plt+0x7e8>
    2bd8:	add	r5, r5, #1
    2bdc:	cmp	r5, #58	; 0x3a
    2be0:	beq	2e7c <__assert_fail@plt+0x98c>
    2be4:	mov	r9, #1
    2be8:	sub	r8, r5, #32
    2bec:	rsb	r3, r5, #32
    2bf0:	lsl	r8, r9, r8
    2bf4:	orr	r8, r8, r9, lsr r3
    2bf8:	ldr	r3, [sp, #8]
    2bfc:	orr	r9, r3, r9, lsl r5
    2c00:	ldr	r3, [sp, #12]
    2c04:	orr	r8, r8, r3
    2c08:	cmp	fp, #0
    2c0c:	beq	29cc <__assert_fail@plt+0x4dc>
    2c10:	ldr	r3, [sp, #16]
    2c14:	str	r3, [sp]
    2c18:	ldr	r3, [sp, #20]
    2c1c:	str	r3, [sp, #4]
    2c20:	mov	r3, fp
    2c24:	add	r2, r5, #1
    2c28:	mov	r0, r9
    2c2c:	mov	r1, r8
    2c30:	bl	293c <__assert_fail@plt+0x44c>
    2c34:	b	2bd8 <__assert_fail@plt+0x6e8>
    2c38:	ldr	r3, [pc, #608]	; 2ea0 <__assert_fail@plt+0x9b0>
    2c3c:	add	r3, pc, r3
    2c40:	str	r0, [r3]
    2c44:	mov	r3, #0
    2c48:	str	r3, [r0, #20]
    2c4c:	mov	r0, #44	; 0x2c
    2c50:	bl	22c8 <malloc@plt>
    2c54:	mov	r6, r0
    2c58:	str	r0, [r4, #16]
    2c5c:	cmp	r0, #0
    2c60:	beq	2cc8 <__assert_fail@plt+0x7d8>
    2c64:	mov	r0, #0
    2c68:	mov	r1, #0
    2c6c:	strd	r0, [r6, #12]
    2c70:	strd	r0, [r6, #20]
    2c74:	strd	r0, [r6, #28]
    2c78:	strd	r0, [r6, #36]	; 0x24
    2c7c:	add	r3, r4, #16
    2c80:	str	r3, [r6, #16]
    2c84:	mov	r3, #32
    2c88:	str	r3, [r6, #4]
    2c8c:	mov	r3, #5
    2c90:	str	r3, [r6, #8]
    2c94:	mov	r3, #16
    2c98:	str	r3, [r6, #20]
    2c9c:	mov	r0, #384	; 0x180
    2ca0:	bl	22c8 <malloc@plt>
    2ca4:	str	r0, [r6]
    2ca8:	cmp	r0, #0
    2cac:	beq	2cd0 <__assert_fail@plt+0x7e0>
    2cb0:	mov	r2, #384	; 0x180
    2cb4:	mov	r1, #0
    2cb8:	bl	23c4 <memset@plt>
    2cbc:	ldr	r3, [sp, #44]	; 0x2c
    2cc0:	str	r3, [r6, #40]	; 0x28
    2cc4:	b	2a54 <__assert_fail@plt+0x564>
    2cc8:	mvn	r0, #0
    2ccc:	bl	231c <exit@plt>
    2cd0:	mvn	r0, #0
    2cd4:	bl	231c <exit@plt>
    2cd8:	ldr	r8, [r7, #4]
    2cdc:	add	r8, r8, r8, lsl #1
    2ce0:	lsl	r8, r8, #3
    2ce4:	mov	r0, r8
    2ce8:	bl	22c8 <malloc@plt>
    2cec:	subs	r6, r0, #0
    2cf0:	beq	2d5c <__assert_fail@plt+0x86c>
    2cf4:	mov	r2, r8
    2cf8:	mov	r1, #0
    2cfc:	mov	r0, r6
    2d00:	bl	23c4 <memset@plt>
    2d04:	ldr	r1, [r7, #12]
    2d08:	ldr	r3, [r7, #4]
    2d0c:	lsl	r3, r3, #1
    2d10:	sub	r3, r3, #1
    2d14:	tst	r3, r1
    2d18:	movne	r3, #1
    2d1c:	moveq	r3, #0
    2d20:	ldr	r2, [r7, #8]
    2d24:	add	r2, r2, #1
    2d28:	add	r3, r3, r1, lsr r2
    2d2c:	str	r3, [r7, #24]
    2d30:	ldr	r3, [r4, #16]
    2d34:	mov	r2, #0
    2d38:	str	r2, [r3, #28]
    2d3c:	ldr	r3, [r4, #16]
    2d40:	ldr	r2, [r3, #4]
    2d44:	cmp	r2, #0
    2d48:	beq	2e14 <__assert_fail@plt+0x924>
    2d4c:	mov	r7, #0
    2d50:	mov	r8, r7
    2d54:	mov	sl, r7
    2d58:	b	2e00 <__assert_fail@plt+0x910>
    2d5c:	mvn	r0, #0
    2d60:	bl	231c <exit@plt>
    2d64:	str	sl, [r2, #12]
    2d68:	ldr	r1, [r6, r3, lsl #2]
    2d6c:	str	r1, [r2, #16]
    2d70:	cmp	r1, #0
    2d74:	strne	r2, [r1, #12]
    2d78:	str	r2, [r6, r3, lsl #2]
    2d7c:	mov	r2, r0
    2d80:	cmp	r0, #0
    2d84:	beq	2de8 <__assert_fail@plt+0x8f8>
    2d88:	ldr	r0, [r2, #16]
    2d8c:	ldr	r1, [r4, #16]
    2d90:	ldr	r3, [r1, #4]
    2d94:	lsl	r3, r3, #1
    2d98:	sub	r3, r3, #1
    2d9c:	ldr	ip, [r2, #28]
    2da0:	and	r3, r3, ip
    2da4:	add	r3, r3, r3, lsl #1
    2da8:	add	ip, r6, r3, lsl #2
    2dac:	ldr	lr, [ip, #4]
    2db0:	add	lr, lr, #1
    2db4:	str	lr, [ip, #4]
    2db8:	ldr	r9, [r1, #24]
    2dbc:	cmp	lr, r9
    2dc0:	bls	2d64 <__assert_fail@plt+0x874>
    2dc4:	ldr	lr, [r1, #28]
    2dc8:	add	lr, lr, #1
    2dcc:	str	lr, [r1, #28]
    2dd0:	ldr	lr, [r4, #16]
    2dd4:	ldr	r1, [ip, #4]
    2dd8:	ldr	lr, [lr, #24]
    2ddc:	udiv	r1, r1, lr
    2de0:	str	r1, [ip, #8]
    2de4:	b	2d64 <__assert_fail@plt+0x874>
    2de8:	add	r8, r8, #1
    2dec:	ldr	r3, [r4, #16]
    2df0:	add	r7, r7, #12
    2df4:	ldr	r2, [r3, #4]
    2df8:	cmp	r8, r2
    2dfc:	bcs	2e14 <__assert_fail@plt+0x924>
    2e00:	ldr	r3, [r3]
    2e04:	ldr	r2, [r3, r7]
    2e08:	cmp	r2, #0
    2e0c:	bne	2d88 <__assert_fail@plt+0x898>
    2e10:	b	2de8 <__assert_fail@plt+0x8f8>
    2e14:	ldr	r0, [r3]
    2e18:	bl	2148 <free@plt>
    2e1c:	ldr	r2, [r4, #16]
    2e20:	ldr	r3, [r2, #4]
    2e24:	lsl	r3, r3, #1
    2e28:	str	r3, [r2, #4]
    2e2c:	ldr	r2, [r4, #16]
    2e30:	ldr	r3, [r2, #8]
    2e34:	add	r3, r3, #1
    2e38:	str	r3, [r2, #8]
    2e3c:	ldr	r3, [r4, #16]
    2e40:	str	r6, [r3]
    2e44:	ldr	r3, [r4, #16]
    2e48:	ldr	r1, [r3, #12]
    2e4c:	ldr	r2, [r3, #28]
    2e50:	cmp	r2, r1, lsr #1
    2e54:	ldrhi	r2, [r3, #32]
    2e58:	addhi	r2, r2, #1
    2e5c:	movls	r2, #0
    2e60:	str	r2, [r3, #32]
    2e64:	ldr	r3, [r4, #16]
    2e68:	ldr	r2, [r3, #32]
    2e6c:	cmp	r2, #1
    2e70:	movhi	r2, #1
    2e74:	strhi	r2, [r3, #36]	; 0x24
    2e78:	b	2bd8 <__assert_fail@plt+0x6e8>
    2e7c:	add	sp, sp, #52	; 0x34
    2e80:	ldrd	r4, [sp]
    2e84:	ldrd	r6, [sp, #8]
    2e88:	ldrd	r8, [sp, #16]
    2e8c:	ldrd	sl, [sp, #24]
    2e90:	add	sp, sp, #32
    2e94:	pop	{pc}		; (ldr pc, [sp], #4)
    2e98:	andeq	r6, r2, r8, lsl #15
    2e9c:	andeq	r6, r2, r8, asr #14
    2ea0:	andeq	r6, r2, r4, ror #10
    2ea4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2ea8:	strd	r6, [sp, #8]
    2eac:	strd	r8, [sp, #16]
    2eb0:	strd	sl, [sp, #24]
    2eb4:	str	lr, [sp, #32]
    2eb8:	sub	sp, sp, #4
    2ebc:	mov	r4, r0
    2ec0:	mov	r9, r1
    2ec4:	movw	r3, #26215	; 0x6667
    2ec8:	movt	r3, #26214	; 0x6666
    2ecc:	smull	r3, r2, r3, r1
    2ed0:	asr	r3, r1, #31
    2ed4:	rsb	r3, r3, r2, asr #2
    2ed8:	add	r3, r3, r3, lsl #2
    2edc:	sub	r3, r1, r3, lsl #1
    2ee0:	tst	r3, #255	; 0xff
    2ee4:	beq	2ef4 <__assert_fail@plt+0xa04>
    2ee8:	uxtb	r3, r3
    2eec:	rsb	r3, r3, #10
    2ef0:	add	r9, r1, r3
    2ef4:	mov	r0, r9
    2ef8:	bl	22c8 <malloc@plt>
    2efc:	mov	fp, r0
    2f00:	cmp	r9, #0
    2f04:	ble	30d4 <__assert_fail@plt+0xbe4>
    2f08:	sub	r7, r0, #1
    2f0c:	add	r4, r4, #9
    2f10:	mov	r8, #0
    2f14:	ldr	r6, [pc, #472]	; 30f4 <__assert_fail@plt+0xc04>
    2f18:	add	r6, pc, r6
    2f1c:	add	r6, r6, #8
    2f20:	rsb	sl, r0, #1
    2f24:	b	2ff8 <__assert_fail@plt+0xb08>
    2f28:	add	r3, r3, #1
    2f2c:	cmp	r3, #10
    2f30:	beq	2f50 <__assert_fail@plt+0xa60>
    2f34:	asr	r2, r5, r3
    2f38:	tst	r2, #1
    2f3c:	beq	2f28 <__assert_fail@plt+0xa38>
    2f40:	lsl	r2, r3, #1
    2f44:	ldrh	r2, [r2, r6]
    2f48:	eor	r1, r1, r2
    2f4c:	b	2f28 <__assert_fail@plt+0xa38>
    2f50:	eor	r1, r0, r1, lsr #10
    2f54:	uxtb	r1, r1
    2f58:	sub	r3, r1, #1
    2f5c:	tst	r3, r1
    2f60:	beq	2fe4 <__assert_fail@plt+0xaf4>
    2f64:	sub	r1, r1, #7
    2f68:	cmp	r1, #24
    2f6c:	addls	pc, pc, r1, lsl #2
    2f70:	b	30c8 <__assert_fail@plt+0xbd8>
    2f74:	b	3048 <__assert_fail@plt+0xb58>
    2f78:	b	30c8 <__assert_fail@plt+0xbd8>
    2f7c:	b	30c8 <__assert_fail@plt+0xbd8>
    2f80:	b	30c8 <__assert_fail@plt+0xbd8>
    2f84:	b	2fd8 <__assert_fail@plt+0xae8>
    2f88:	b	30c8 <__assert_fail@plt+0xbd8>
    2f8c:	b	3088 <__assert_fail@plt+0xb98>
    2f90:	b	3058 <__assert_fail@plt+0xb68>
    2f94:	b	30c8 <__assert_fail@plt+0xbd8>
    2f98:	b	30c8 <__assert_fail@plt+0xbd8>
    2f9c:	b	30c8 <__assert_fail@plt+0xbd8>
    2fa0:	b	30c8 <__assert_fail@plt+0xbd8>
    2fa4:	b	3078 <__assert_fail@plt+0xb88>
    2fa8:	b	30c8 <__assert_fail@plt+0xbd8>
    2fac:	b	30b8 <__assert_fail@plt+0xbc8>
    2fb0:	b	3038 <__assert_fail@plt+0xb48>
    2fb4:	b	30c8 <__assert_fail@plt+0xbd8>
    2fb8:	b	30c8 <__assert_fail@plt+0xbd8>
    2fbc:	b	30c8 <__assert_fail@plt+0xbd8>
    2fc0:	b	3098 <__assert_fail@plt+0xba8>
    2fc4:	b	30c8 <__assert_fail@plt+0xbd8>
    2fc8:	b	3068 <__assert_fail@plt+0xb78>
    2fcc:	b	30c8 <__assert_fail@plt+0xbd8>
    2fd0:	b	30c8 <__assert_fail@plt+0xbd8>
    2fd4:	b	30a8 <__assert_fail@plt+0xbb8>
    2fd8:	ldrb	r3, [r7, #1]
    2fdc:	eor	r3, r3, #1
    2fe0:	strb	r3, [r7, #1]
    2fe4:	add	r7, r7, #10
    2fe8:	add	r4, r4, #15
    2fec:	add	r3, sl, r7
    2ff0:	cmp	r9, r3
    2ff4:	ble	30d4 <__assert_fail@plt+0xbe4>
    2ff8:	sub	r3, r4, #10
    2ffc:	mov	r2, r7
    3000:	ldrb	r1, [r3, #1]!
    3004:	strb	r1, [r2, #1]!
    3008:	cmp	r3, r4
    300c:	bne	3000 <__assert_fail@plt+0xb10>
    3010:	mov	r1, #10
    3014:	sub	r0, r4, #9
    3018:	bl	2704 <__assert_fail@plt+0x214>
    301c:	mov	r5, r0
    3020:	mov	r1, #5
    3024:	add	r0, r4, #1
    3028:	bl	26bc <__assert_fail@plt+0x1cc>
    302c:	mov	r1, r8
    3030:	mov	r3, r8
    3034:	b	2f34 <__assert_fail@plt+0xa44>
    3038:	ldrb	r3, [r7, #2]
    303c:	eor	r3, r3, #1
    3040:	strb	r3, [r7, #2]
    3044:	b	2fe4 <__assert_fail@plt+0xaf4>
    3048:	ldrb	r3, [r7, #3]
    304c:	eor	r3, r3, #1
    3050:	strb	r3, [r7, #3]
    3054:	b	2fe4 <__assert_fail@plt+0xaf4>
    3058:	ldrb	r3, [r7, #4]
    305c:	eor	r3, r3, #1
    3060:	strb	r3, [r7, #4]
    3064:	b	2fe4 <__assert_fail@plt+0xaf4>
    3068:	ldrb	r3, [r7, #5]
    306c:	eor	r3, r3, #1
    3070:	strb	r3, [r7, #5]
    3074:	b	2fe4 <__assert_fail@plt+0xaf4>
    3078:	ldrb	r3, [r7, #6]
    307c:	eor	r3, r3, #1
    3080:	strb	r3, [r7, #6]
    3084:	b	2fe4 <__assert_fail@plt+0xaf4>
    3088:	ldrb	r3, [r7, #7]
    308c:	eor	r3, r3, #1
    3090:	strb	r3, [r7, #7]
    3094:	b	2fe4 <__assert_fail@plt+0xaf4>
    3098:	ldrb	r3, [r7, #8]
    309c:	eor	r3, r3, #1
    30a0:	strb	r3, [r7, #8]
    30a4:	b	2fe4 <__assert_fail@plt+0xaf4>
    30a8:	ldrb	r3, [r7, #9]
    30ac:	eor	r3, r3, #1
    30b0:	strb	r3, [r7, #9]
    30b4:	b	2fe4 <__assert_fail@plt+0xaf4>
    30b8:	ldrb	r3, [r7, #10]
    30bc:	eor	r3, r3, #1
    30c0:	strb	r3, [r7, #10]
    30c4:	b	2fe4 <__assert_fail@plt+0xaf4>
    30c8:	mov	r0, fp
    30cc:	bl	2148 <free@plt>
    30d0:	mov	fp, #0
    30d4:	mov	r0, fp
    30d8:	add	sp, sp, #4
    30dc:	ldrd	r4, [sp]
    30e0:	ldrd	r6, [sp, #8]
    30e4:	ldrd	r8, [sp, #16]
    30e8:	ldrd	sl, [sp, #24]
    30ec:	add	sp, sp, #32
    30f0:	pop	{pc}		; (ldr pc, [sp], #4)
    30f4:	andeq	pc, r0, r8, asr r1	; <UNPREDICTABLE>

000030f8 <btbb_gen_syncword@@Base>:
    30f8:	strd	r4, [sp, #-12]!
    30fc:	str	lr, [sp, #8]
    3100:	movw	r2, #3710	; 0xe7e
    3104:	movt	r2, #51074	; 0xc782
    3108:	mov	r1, #-1342177278	; 0xb0000002
    310c:	mov	r3, #0
    3110:	mov	lr, #8388608	; 0x800000
    3114:	ldr	ip, [pc, #68]	; 3160 <btbb_gen_syncword@@Base+0x68>
    3118:	add	ip, pc, ip
    311c:	add	ip, ip, #32
    3120:	b	3130 <btbb_gen_syncword@@Base+0x38>
    3124:	add	r3, r3, #1
    3128:	cmp	r3, #24
    312c:	beq	3150 <btbb_gen_syncword@@Base+0x58>
    3130:	ands	r4, r0, lr, asr r3
    3134:	beq	3124 <btbb_gen_syncword@@Base+0x2c>
    3138:	ldr	r5, [ip, r3, lsl #3]
    313c:	add	r4, ip, r3, lsl #3
    3140:	ldr	r4, [r4, #4]
    3144:	eor	r2, r2, r5
    3148:	eor	r1, r1, r4
    314c:	b	3124 <btbb_gen_syncword@@Base+0x2c>
    3150:	mov	r0, r2
    3154:	ldrd	r4, [sp]
    3158:	add	sp, sp, #8
    315c:	pop	{pc}		; (ldr pc, [sp], #4)
    3160:	andeq	lr, r0, r8, asr pc

00003164 <btbb_get_release@@Base>:
    3164:	ldr	r0, [pc, #4]	; 3170 <btbb_get_release@@Base+0xc>
    3168:	add	r0, pc, r0
    316c:	bx	lr
    3170:	andeq	pc, r0, r8, lsr r5	; <UNPREDICTABLE>

00003174 <btbb_get_version@@Base>:
    3174:	ldr	r0, [pc, #4]	; 3180 <btbb_get_version@@Base+0xc>
    3178:	add	r0, pc, r0
    317c:	bx	lr
    3180:	andeq	pc, r0, r4, lsr r5	; <UNPREDICTABLE>

00003184 <btbb_init@@Base>:
    3184:	strd	r4, [sp, #-32]!	; 0xffffffe0
    3188:	strd	r6, [sp, #8]
    318c:	strd	r8, [sp, #16]
    3190:	str	sl, [sp, #24]
    3194:	str	lr, [sp, #28]
    3198:	sub	sp, sp, #8
    319c:	ldr	r3, [pc, #204]	; 3270 <btbb_init@@Base+0xec>
    31a0:	add	r3, pc, r3
    31a4:	cmp	r0, #5
    31a8:	bhi	31f4 <btbb_init@@Base+0x70>
    31ac:	mov	r4, r0
    31b0:	ldr	r3, [pc, #188]	; 3274 <btbb_init@@Base+0xf0>
    31b4:	add	r3, pc, r3
    31b8:	ldr	r2, [r3]
    31bc:	adds	r3, r0, #0
    31c0:	movne	r3, #1
    31c4:	cmp	r2, #0
    31c8:	movne	r3, #0
    31cc:	cmp	r3, #0
    31d0:	moveq	r0, #0
    31d4:	bne	3220 <btbb_init@@Base+0x9c>
    31d8:	add	sp, sp, #8
    31dc:	ldrd	r4, [sp]
    31e0:	ldrd	r6, [sp, #8]
    31e4:	ldrd	r8, [sp, #16]
    31e8:	ldr	sl, [sp, #24]
    31ec:	add	sp, sp, #28
    31f0:	pop	{pc}		; (ldr pc, [sp], #4)
    31f4:	ldr	r2, [pc, #124]	; 3278 <btbb_init@@Base+0xf4>
    31f8:	ldr	r3, [r3, r2]
    31fc:	ldr	r2, [pc, #120]	; 327c <btbb_init@@Base+0xf8>
    3200:	add	r2, pc, r2
    3204:	add	r2, r2, #224	; 0xe0
    3208:	ldr	r1, [pc, #112]	; 3280 <btbb_init@@Base+0xfc>
    320c:	add	r1, pc, r1
    3210:	ldr	r0, [r3]
    3214:	bl	237c <fprintf@plt>
    3218:	mvn	r0, #0
    321c:	b	31d8 <btbb_init@@Base+0x54>
    3220:	mov	r5, #1
    3224:	add	r9, pc, #60	; 0x3c
    3228:	ldrd	r8, [r9]
    322c:	mov	sl, #0
    3230:	mov	r6, #0
    3234:	mov	r7, #0
    3238:	strd	r8, [sp]
    323c:	mov	r3, r5
    3240:	mov	r2, sl
    3244:	mov	r0, r6
    3248:	mov	r1, r7
    324c:	bl	293c <__assert_fail@plt+0x44c>
    3250:	add	r5, r5, #1
    3254:	cmp	r4, r5
    3258:	bge	3238 <btbb_init@@Base+0xb4>
    325c:	mov	r0, #0
    3260:	b	31d8 <btbb_init@@Base+0x54>
    3264:	nop	{0}
    3268:			; <UNDEFINED> instruction: 0xff614e1b
    326c:	lfmgt	f7, 2, [fp], #-416	; 0xfffffe60
    3270:	andeq	r5, r2, r8, asr lr
    3274:	andeq	r5, r2, ip, ror #31
    3278:	andeq	r0, r0, r4, lsl #3
    327c:	andeq	lr, r0, r0, ror lr
    3280:	andeq	pc, r0, r4, lsr #9

00003284 <btbb_packet_new@@Base>:
    3284:	strd	r4, [sp, #-16]!
    3288:	str	r6, [sp, #8]
    328c:	str	lr, [sp, #12]
    3290:	ldr	r5, [pc, #84]	; 32ec <btbb_packet_new@@Base+0x68>
    3294:	add	r5, pc, r5
    3298:	mov	r1, #5952	; 0x1740
    329c:	mov	r0, #1
    32a0:	bl	20ac <calloc@plt>
    32a4:	subs	r4, r0, #0
    32a8:	beq	32c8 <btbb_packet_new@@Base+0x44>
    32ac:	mov	r3, #1
    32b0:	str	r3, [r4]
    32b4:	mov	r0, r4
    32b8:	ldrd	r4, [sp]
    32bc:	ldr	r6, [sp, #8]
    32c0:	add	sp, sp, #12
    32c4:	pop	{pc}		; (ldr pc, [sp], #4)
    32c8:	ldr	r3, [pc, #32]	; 32f0 <btbb_packet_new@@Base+0x6c>
    32cc:	ldr	r3, [r5, r3]
    32d0:	ldr	r3, [r3]
    32d4:	mov	r2, #25
    32d8:	mov	r1, #1
    32dc:	ldr	r0, [pc, #16]	; 32f4 <btbb_packet_new@@Base+0x70>
    32e0:	add	r0, pc, r0
    32e4:	bl	225c <fwrite@plt>
    32e8:	b	32b4 <btbb_packet_new@@Base+0x30>
    32ec:	andeq	r5, r2, r4, ror #26
    32f0:	andeq	r0, r0, r4, lsl #3
    32f4:	strdeq	pc, [r0], -r0

000032f8 <btbb_packet_ref@@Base>:
    32f8:	ldr	r3, [r0]
    32fc:	add	r3, r3, #1
    3300:	str	r3, [r0]
    3304:	bx	lr

00003308 <btbb_packet_unref@@Base>:
    3308:	ldr	r3, [r0]
    330c:	subs	r3, r3, #1
    3310:	beq	331c <btbb_packet_unref@@Base+0x14>
    3314:	str	r3, [r0]
    3318:	bx	lr
    331c:	str	r4, [sp, #-8]!
    3320:	str	lr, [sp, #4]
    3324:	bl	2148 <free@plt>
    3328:	ldr	r4, [sp]
    332c:	add	sp, sp, #4
    3330:	pop	{pc}		; (ldr pc, [sp], #4)

00003334 <btbb_packet_get_lap@@Base>:
    3334:	ldr	r0, [r0, #12]
    3338:	bx	lr

0000333c <btbb_packet_get_uap@@Base>:
    333c:	ldrb	r0, [r0, #9]
    3340:	bx	lr

00003344 <btbb_packet_get_nap@@Base>:
    3344:	ldrh	r0, [r0, #10]
    3348:	bx	lr

0000334c <btbb_packet_get_clkn@@Base>:
    334c:	ldr	r0, [r0, #2816]	; 0xb00
    3350:	bx	lr

00003354 <btbb_packet_get_channel@@Base>:
    3354:	ldrb	r0, [r0, #8]
    3358:	bx	lr

0000335c <btbb_packet_set_modulation@@Base>:
    335c:	strb	r1, [r0, #16]
    3360:	bx	lr

00003364 <btbb_packet_get_modulation@@Base>:
    3364:	ldrb	r0, [r0, #16]
    3368:	bx	lr

0000336c <btbb_packet_set_transport@@Base>:
    336c:	strb	r1, [r0, #17]
    3370:	bx	lr

00003374 <btbb_packet_get_transport@@Base>:
    3374:	ldrb	r0, [r0, #17]
    3378:	bx	lr

0000337c <btbb_packet_get_ac_errors@@Base>:
    337c:	ldrb	r0, [r0, #2820]	; 0xb04
    3380:	bx	lr

00003384 <promiscuous_packet_search@@Base>:
    3384:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3388:	strd	r6, [sp, #8]
    338c:	strd	r8, [sp, #16]
    3390:	strd	sl, [sp, #24]
    3394:	str	lr, [sp, #32]
    3398:	sub	sp, sp, #68	; 0x44
    339c:	mov	r6, r0
    33a0:	mov	r4, r1
    33a4:	str	r2, [sp, #52]	; 0x34
    33a8:	str	r3, [sp, #16]
    33ac:	mov	r1, #6
    33b0:	add	r0, r0, #57	; 0x39
    33b4:	bl	26bc <__assert_fail@plt+0x1cc>
    33b8:	cmp	r4, #0
    33bc:	ble	36e0 <promiscuous_packet_search@@Base+0x35c>
    33c0:	lsl	r0, r0, #1
    33c4:	uxtb	r5, r0
    33c8:	add	ip, r6, #62	; 0x3e
    33cc:	mov	sl, r6
    33d0:	add	r4, r4, #62	; 0x3e
    33d4:	add	r3, r6, r4
    33d8:	str	r3, [sp, #12]
    33dc:	ldr	r3, [pc, #788]	; 36f8 <promiscuous_packet_search@@Base+0x374>
    33e0:	add	r3, pc, r3
    33e4:	add	r3, r3, #368	; 0x170
    33e8:	str	r3, [sp, #20]
    33ec:	movw	r3, #21756	; 0x54fc
    33f0:	movt	r3, #48076	; 0xbbcc
    33f4:	str	r3, [sp, #24]
    33f8:	movw	r3, #36246	; 0x8d96
    33fc:	movt	r3, #33668	; 0x8384
    3400:	str	r3, [sp, #28]
    3404:	movw	r3, #31161	; 0x79b9
    3408:	movt	r3, #40503	; 0x9e37
    340c:	str	r3, [sp, #32]
    3410:	movw	r3, #47810	; 0xbac2
    3414:	movt	r3, #40777	; 0x9f49
    3418:	str	r3, [sp, #36]	; 0x24
    341c:	movw	r3, #63341	; 0xf76d
    3420:	movt	r3, #7
    3424:	str	r3, [sp, #40]	; 0x28
    3428:	movw	r3, #16649	; 0x4109
    342c:	movt	r3, #274	; 0x112
    3430:	str	r3, [sp, #44]	; 0x2c
    3434:	movw	r3, #48887	; 0xbef7
    3438:	movt	r3, #65261	; 0xfeed
    343c:	str	r3, [sp, #48]	; 0x30
    3440:	b	34f4 <promiscuous_packet_search@@Base+0x170>
    3444:	mov	r2, r4
    3448:	add	r4, r2, #1
    344c:	ldrb	r0, [r2, #1]
    3450:	mov	r1, #0
    3454:	strd	r0, [sp]
    3458:	add	r1, r9, r2
    345c:	sub	r3, r1, #32
    3460:	rsb	fp, r1, #32
    3464:	ldr	r0, [sp]
    3468:	lsl	r3, r0, r3
    346c:	orr	r3, r3, r0, lsr fp
    3470:	orr	lr, lr, r0, lsl r1
    3474:	orr	r6, r3, r6
    3478:	cmp	ip, r2
    347c:	bne	3444 <promiscuous_packet_search@@Base+0xc0>
    3480:	lsr	r3, r6, #25
    3484:	ldr	r1, [sp, #20]
    3488:	add	r2, r1, r3, lsl #3
    348c:	bic	r6, r6, #-33554432	; 0xfe000000
    3490:	ldr	r0, [r1, r3, lsl #3]
    3494:	ldr	r3, [r2, #4]
    3498:	orr	r0, lr, r0
    349c:	orr	r6, r6, r3
    34a0:	ldr	r3, [sp, #24]
    34a4:	eor	r0, r0, r3
    34a8:	ldr	r3, [sp, #28]
    34ac:	eor	r1, r6, r3
    34b0:	bl	2628 <__assert_fail@plt+0x138>
    34b4:	strd	r0, [sp]
    34b8:	mov	r1, #0
    34bc:	ldr	r3, [sp, #104]	; 0x68
    34c0:	strb	r1, [r3]
    34c4:	ldrd	r2, [sp]
    34c8:	orrs	r3, r2, r3
    34cc:	bne	353c <promiscuous_packet_search@@Base+0x1b8>
    34d0:	ldr	r3, [sp, #104]	; 0x68
    34d4:	ldrb	r3, [r3]
    34d8:	ldr	r2, [sp, #16]
    34dc:	cmp	r3, r2
    34e0:	ble	36ac <promiscuous_packet_search@@Base+0x328>
    34e4:	mov	ip, r7
    34e8:	ldr	r3, [sp, #12]
    34ec:	cmp	r7, r3
    34f0:	beq	36bc <promiscuous_packet_search@@Base+0x338>
    34f4:	sub	r8, ip, sl
    34f8:	sub	r8, r8, #62	; 0x3e
    34fc:	add	r7, ip, #1
    3500:	ldrb	r3, [ip, #1]
    3504:	lsr	r5, r5, #1
    3508:	orr	r5, r5, r3, lsl #6
    350c:	uxtb	r5, r5
    3510:	ldr	r3, [pc, #484]	; 36fc <promiscuous_packet_search@@Base+0x378>
    3514:	add	r3, pc, r3
    3518:	add	r3, r3, r5
    351c:	ldrb	r3, [r3, #236]	; 0xec
    3520:	cmp	r3, #1
    3524:	bhi	34e4 <promiscuous_packet_search@@Base+0x160>
    3528:	sub	r2, ip, #63	; 0x3f
    352c:	mov	lr, #0
    3530:	mov	r6, lr
    3534:	rsb	r9, r7, #64	; 0x40
    3538:	b	3448 <promiscuous_packet_search@@Base+0xc4>
    353c:	ldrd	r2, [sp]
    3540:	strd	r2, [sp, #56]	; 0x38
    3544:	ldr	r1, [pc, #436]	; 3700 <promiscuous_packet_search@@Base+0x37c>
    3548:	add	r1, pc, r1
    354c:	ldr	r1, [r1]
    3550:	cmp	r1, #0
    3554:	beq	36e8 <promiscuous_packet_search@@Base+0x364>
    3558:	bic	r0, r3, #16711680	; 0xff0000
    355c:	bic	r0, r0, #65280	; 0xff00
    3560:	ldr	r3, [sp, #32]
    3564:	add	r0, r0, r3
    3568:	ldrd	r2, [sp]
    356c:	and	ip, r3, #16711680	; 0xff0000
    3570:	add	r0, r0, ip
    3574:	and	r3, r3, #65280	; 0xff00
    3578:	add	r3, r0, r3
    357c:	ldr	r0, [sp]
    3580:	bic	r0, r0, #16711680	; 0xff0000
    3584:	bic	r0, r0, #65280	; 0xff00
    3588:	ldr	r2, [sp, #36]	; 0x24
    358c:	add	r0, r0, r2
    3590:	ldr	ip, [sp]
    3594:	and	ip, ip, #16711680	; 0xff0000
    3598:	add	ip, r0, ip
    359c:	ldr	r2, [sp]
    35a0:	and	r0, r2, #65280	; 0xff00
    35a4:	add	r2, ip, r0
    35a8:	sub	r2, r2, r3
    35ac:	ldr	r0, [sp, #40]	; 0x28
    35b0:	eor	r2, r2, r0
    35b4:	ldr	r0, [sp, #44]	; 0x2c
    35b8:	add	r0, r3, r0
    35bc:	sub	r0, r0, r2
    35c0:	eor	r0, r0, r2, lsl #8
    35c4:	ldr	r3, [sp, #48]	; 0x30
    35c8:	sub	r3, r3, r2
    35cc:	sub	r3, r3, r0
    35d0:	eor	r3, r3, r0, lsr #13
    35d4:	sub	r2, r2, r0
    35d8:	sub	r2, r2, r3
    35dc:	eor	r2, r2, r3, lsr #12
    35e0:	sub	r0, r0, r3
    35e4:	sub	r0, r0, r2
    35e8:	eor	r0, r0, r2, lsl #16
    35ec:	sub	r3, r3, r2
    35f0:	sub	r3, r3, r0
    35f4:	eor	ip, r3, r0, lsr #5
    35f8:	sub	r2, r2, r0
    35fc:	sub	r2, r2, ip
    3600:	eor	r2, r2, ip, lsr #3
    3604:	sub	r3, r0, ip
    3608:	sub	r3, r3, r2
    360c:	eor	r0, r3, r2, lsl #10
    3610:	sub	r3, ip, r2
    3614:	sub	r3, r3, r0
    3618:	ldr	r2, [r1, #16]
    361c:	eor	r3, r3, r0, lsr #15
    3620:	ldr	r1, [r2, #4]
    3624:	sub	r1, r1, #1
    3628:	and	r3, r3, r1
    362c:	ldr	r1, [r2]
    3630:	add	r3, r3, r3, lsl #1
    3634:	ldr	r4, [r1, r3, lsl #2]
    3638:	cmp	r4, #0
    363c:	beq	36e8 <promiscuous_packet_search@@Base+0x364>
    3640:	ldr	r9, [r2, #20]
    3644:	rsb	r9, r9, #0
    3648:	adds	r4, r4, r9
    364c:	beq	36e8 <promiscuous_packet_search@@Base+0x364>
    3650:	add	fp, sp, #56	; 0x38
    3654:	b	366c <promiscuous_packet_search@@Base+0x2e8>
    3658:	ldr	r4, [r4, #32]
    365c:	cmp	r4, #0
    3660:	beq	36e8 <promiscuous_packet_search@@Base+0x364>
    3664:	adds	r4, r4, r9
    3668:	beq	36e8 <promiscuous_packet_search@@Base+0x364>
    366c:	ldr	r3, [r4, #40]	; 0x28
    3670:	cmp	r3, #8
    3674:	bne	3658 <promiscuous_packet_search@@Base+0x2d4>
    3678:	mov	r2, #8
    367c:	mov	r1, fp
    3680:	ldr	r0, [r4, #36]	; 0x24
    3684:	bl	21b4 <memcmp@plt>
    3688:	cmp	r0, #0
    368c:	bne	3658 <promiscuous_packet_search@@Base+0x2d4>
    3690:	ldr	r1, [r4, #12]
    3694:	eor	r6, r6, r1
    3698:	ldr	r0, [r4, #8]
    369c:	bl	feec <lell_pcapng_close@@Base+0x7c>
    36a0:	ldr	r3, [sp, #104]	; 0x68
    36a4:	strb	r0, [r3]
    36a8:	b	34d0 <promiscuous_packet_search@@Base+0x14c>
    36ac:	ubfx	r6, r6, #2, #24
    36b0:	ldr	r3, [sp, #52]	; 0x34
    36b4:	str	r6, [r3]
    36b8:	b	36c0 <promiscuous_packet_search@@Base+0x33c>
    36bc:	mvn	r8, #0
    36c0:	mov	r0, r8
    36c4:	add	sp, sp, #68	; 0x44
    36c8:	ldrd	r4, [sp]
    36cc:	ldrd	r6, [sp, #8]
    36d0:	ldrd	r8, [sp, #16]
    36d4:	ldrd	sl, [sp, #24]
    36d8:	add	sp, sp, #32
    36dc:	pop	{pc}		; (ldr pc, [sp], #4)
    36e0:	mvn	r8, #0
    36e4:	b	36c0 <promiscuous_packet_search@@Base+0x33c>
    36e8:	mvn	r3, #0
    36ec:	ldr	r2, [sp, #104]	; 0x68
    36f0:	strb	r3, [r2]
    36f4:	b	34d0 <promiscuous_packet_search@@Base+0x14c>
    36f8:	muleq	r0, r0, ip
    36fc:	andeq	lr, r0, ip, asr fp
    3700:	andeq	r5, r2, r8, asr ip

00003704 <find_known_lap@@Base>:
    3704:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3708:	strd	r6, [sp, #8]
    370c:	strd	r8, [sp, #16]
    3710:	strd	sl, [sp, #24]
    3714:	str	lr, [sp, #32]
    3718:	sub	sp, sp, #28
    371c:	mov	r5, r0
    3720:	mov	r6, r1
    3724:	str	r3, [sp, #20]
    3728:	mov	r0, r2
    372c:	bl	2268 <btbb_gen_syncword@plt>
    3730:	cmp	r6, #0
    3734:	ble	37fc <find_known_lap@@Base+0xf8>
    3738:	mov	r8, r0
    373c:	mov	r9, r1
    3740:	sub	r4, r5, #1
    3744:	add	r6, r4, r6
    3748:	rsb	r5, r5, #1
    374c:	b	3784 <find_known_lap@@Base+0x80>
    3750:	ldr	r6, [sp, #12]
    3754:	ldr	r7, [sp, #16]
    3758:	eor	r0, r0, r8
    375c:	eor	r1, r1, r9
    3760:	bl	feec <lell_pcapng_close@@Base+0x7c>
    3764:	ldr	r3, [sp, #64]	; 0x40
    3768:	strb	r0, [r3]
    376c:	ldr	r3, [sp, #20]
    3770:	cmp	r3, r0
    3774:	bge	37dc <find_known_lap@@Base+0xd8>
    3778:	add	r4, r4, #1
    377c:	cmp	r4, r6
    3780:	beq	37d8 <find_known_lap@@Base+0xd4>
    3784:	add	r7, r5, r4
    3788:	mov	r2, r4
    378c:	mov	r0, #0
    3790:	mov	r1, r0
    3794:	add	lr, r4, #64	; 0x40
    3798:	str	r6, [sp, #12]
    379c:	str	r7, [sp, #16]
    37a0:	sub	ip, r2, r4
    37a4:	ldrb	r6, [r2, #1]!
    37a8:	mov	r7, #0
    37ac:	sub	r3, ip, #32
    37b0:	rsb	fp, ip, #32
    37b4:	strd	r6, [sp]
    37b8:	lsl	r3, r6, r3
    37bc:	ldrd	r6, [sp]
    37c0:	orr	r3, r3, r6, lsr fp
    37c4:	orr	r0, r0, r6, lsl ip
    37c8:	orr	r1, r3, r1
    37cc:	cmp	r2, lr
    37d0:	bne	37a0 <find_known_lap@@Base+0x9c>
    37d4:	b	3750 <find_known_lap@@Base+0x4c>
    37d8:	mvn	r7, #0
    37dc:	mov	r0, r7
    37e0:	add	sp, sp, #28
    37e4:	ldrd	r4, [sp]
    37e8:	ldrd	r6, [sp, #8]
    37ec:	ldrd	r8, [sp, #16]
    37f0:	ldrd	sl, [sp, #24]
    37f4:	add	sp, sp, #32
    37f8:	pop	{pc}		; (ldr pc, [sp], #4)
    37fc:	mvn	r7, #0
    3800:	b	37dc <find_known_lap@@Base+0xd8>

00003804 <btbb_packet_set_data@@Base>:
    3804:	str	r4, [sp, #-8]!
    3808:	str	lr, [sp, #4]
    380c:	movw	r4, #3125	; 0xc35
    3810:	cmp	r2, r4
    3814:	movlt	r4, r2
    3818:	cmp	r2, #0
    381c:	ble	3848 <btbb_packet_set_data@@Base+0x44>
    3820:	sub	r2, r1, #1
    3824:	add	lr, r0, #2816	; 0xb00
    3828:	add	lr, lr, #7
    382c:	ldrb	ip, [r2, #1]
    3830:	strb	ip, [lr, #1]!
    3834:	add	ip, r2, #2
    3838:	sub	ip, ip, r1
    383c:	add	r2, r2, #1
    3840:	cmp	r4, ip
    3844:	bgt	382c <btbb_packet_set_data@@Base+0x28>
    3848:	movw	r2, #2822	; 0xb06
    384c:	strh	r4, [r0, r2]
    3850:	strb	r3, [r0, #8]
    3854:	ldr	r3, [sp, #8]
    3858:	lsr	r3, r3, #1
    385c:	str	r3, [r0, #2816]	; 0xb00
    3860:	ldr	r4, [sp]
    3864:	add	sp, sp, #4
    3868:	pop	{pc}		; (ldr pc, [sp], #4)

0000386c <btbb_packet_set_flag@@Base>:
    386c:	mov	r3, #1
    3870:	lsl	r1, r3, r1
    3874:	ldr	r3, [r0, #4]
    3878:	cmp	r2, #0
    387c:	biceq	r3, r3, r1
    3880:	orrne	r3, r3, r1
    3884:	str	r3, [r0, #4]
    3888:	bx	lr

0000388c <btbb_packet_set_uap@@Base>:
    388c:	str	r4, [sp, #-8]!
    3890:	str	lr, [sp, #4]
    3894:	strb	r1, [r0, #9]
    3898:	mov	r2, #1
    389c:	mov	r1, #2
    38a0:	bl	2130 <btbb_packet_set_flag@plt>
    38a4:	ldr	r4, [sp]
    38a8:	add	sp, sp, #4
    38ac:	pop	{pc}		; (ldr pc, [sp], #4)

000038b0 <btbb_find_ac@@Base>:
    38b0:	strd	r4, [sp, #-12]!
    38b4:	str	lr, [sp, #8]
    38b8:	sub	sp, sp, #28
    38bc:	str	r2, [sp, #12]
    38c0:	ldr	r5, [sp, #40]	; 0x28
    38c4:	cmn	r2, #1
    38c8:	beq	3928 <btbb_find_ac@@Base+0x78>
    38cc:	add	ip, sp, #23
    38d0:	str	ip, [sp]
    38d4:	bl	23ac <find_known_lap@plt>
    38d8:	mov	r4, r0
    38dc:	cmp	r4, #0
    38e0:	blt	3914 <btbb_find_ac@@Base+0x64>
    38e4:	ldr	r3, [r5]
    38e8:	cmp	r3, #0
    38ec:	beq	3940 <btbb_find_ac@@Base+0x90>
    38f0:	ldr	r0, [r5]
    38f4:	ldrb	r3, [sp, #23]
    38f8:	ldr	r2, [sp, #12]
    38fc:	str	r2, [r0, #12]
    3900:	strb	r3, [r0, #2820]	; 0xb04
    3904:	mov	r1, #0
    3908:	str	r1, [r0, #4]
    390c:	mov	r2, #1
    3910:	bl	2130 <btbb_packet_set_flag@plt>
    3914:	mov	r0, r4
    3918:	add	sp, sp, #28
    391c:	ldrd	r4, [sp]
    3920:	add	sp, sp, #8
    3924:	pop	{pc}		; (ldr pc, [sp], #4)
    3928:	add	r2, sp, #23
    392c:	str	r2, [sp]
    3930:	add	r2, sp, #12
    3934:	bl	2490 <promiscuous_packet_search@plt>
    3938:	mov	r4, r0
    393c:	b	38dc <btbb_find_ac@@Base+0x2c>
    3940:	bl	22e0 <btbb_packet_new@plt>
    3944:	str	r0, [r5]
    3948:	b	38f0 <btbb_find_ac@@Base+0x40>

0000394c <btbb_packet_get_flag@@Base>:
    394c:	ldr	r3, [r0, #4]
    3950:	mov	r2, #1
    3954:	ands	r3, r3, r2, lsl r1
    3958:	movne	r0, r2
    395c:	moveq	r0, #0
    3960:	bx	lr
    3964:	strd	r4, [sp, #-32]!	; 0xffffffe0
    3968:	strd	r6, [sp, #8]
    396c:	strd	r8, [sp, #16]
    3970:	str	sl, [sp, #24]
    3974:	str	lr, [sp, #28]
    3978:	and	r2, r2, #63	; 0x3f
    397c:	ldr	ip, [pc, #204]	; 3a50 <btbb_packet_get_flag@@Base+0x104>
    3980:	add	ip, pc, ip
    3984:	add	ip, ip, r2
    3988:	ldrb	r2, [ip, #1392]	; 0x570
    398c:	ldr	ip, [sp, #32]
    3990:	add	r2, r2, ip
    3994:	movw	r4, #1033	; 0x409
    3998:	movt	r4, #33026	; 0x8102
    399c:	smull	ip, r4, r4, r2
    39a0:	add	r4, r4, r2
    39a4:	asr	ip, r2, #31
    39a8:	rsb	r4, ip, r4, asr #6
    39ac:	rsb	r4, r4, r4, lsl #7
    39b0:	sub	r4, r2, r4
    39b4:	subs	r7, r3, #0
    39b8:	ble	3a38 <btbb_packet_get_flag@@Base+0xec>
    39bc:	sub	r5, r1, #1
    39c0:	mov	r6, r0
    39c4:	add	r7, r5, r7
    39c8:	mov	r9, #0
    39cc:	ldr	sl, [pc, #128]	; 3a54 <btbb_packet_get_flag@@Base+0x108>
    39d0:	add	sl, pc, sl
    39d4:	movw	r8, #1033	; 0x409
    39d8:	movt	r8, #33026	; 0x8102
    39dc:	b	3a10 <btbb_packet_get_flag@@Base+0xc4>
    39e0:	ldrb	r3, [r6]
    39e4:	strb	r3, [r5, #1]!
    39e8:	add	r3, r4, #1
    39ec:	smull	r2, r4, r8, r3
    39f0:	add	r2, r4, r3
    39f4:	asr	r4, r3, #31
    39f8:	rsb	r4, r4, r2, asr #6
    39fc:	rsb	r4, r4, r4, lsl #7
    3a00:	sub	r4, r3, r4
    3a04:	add	r6, r6, #1
    3a08:	cmp	r5, r7
    3a0c:	beq	3a38 <btbb_packet_get_flag@@Base+0xec>
    3a10:	mov	r1, r9
    3a14:	ldr	r0, [sp, #36]	; 0x24
    3a18:	bl	2184 <btbb_packet_get_flag@plt>
    3a1c:	cmp	r0, #0
    3a20:	beq	39e0 <btbb_packet_get_flag@@Base+0x94>
    3a24:	add	r2, sl, r4
    3a28:	ldrb	r3, [r6]
    3a2c:	ldrb	r2, [r2, #1456]	; 0x5b0
    3a30:	eor	r3, r3, r2
    3a34:	b	39e4 <btbb_packet_get_flag@@Base+0x98>
    3a38:	ldrd	r4, [sp]
    3a3c:	ldrd	r6, [sp, #8]
    3a40:	ldrd	r8, [sp, #16]
    3a44:	ldr	sl, [sp, #24]
    3a48:	add	sp, sp, #28
    3a4c:	pop	{pc}		; (ldr pc, [sp], #4)
    3a50:	strdeq	lr, [r0], -r0
    3a54:	andeq	lr, r0, r0, lsr #13
    3a58:	strd	r4, [sp, #-20]!	; 0xffffffec
    3a5c:	strd	r6, [sp, #8]
    3a60:	str	lr, [sp, #16]
    3a64:	sub	sp, sp, #12
    3a68:	mov	r6, r1
    3a6c:	mov	r5, r2
    3a70:	ldr	r4, [sp, #36]	; 0x24
    3a74:	cmp	r2, #2
    3a78:	beq	3ae0 <btbb_packet_get_flag@@Base+0x194>
    3a7c:	cmp	r3, #7
    3a80:	movle	r0, #0
    3a84:	ble	3c2c <btbb_packet_get_flag@@Base+0x2e0>
    3a88:	ldr	r2, [sp, #32]
    3a8c:	cmp	r2, #0
    3a90:	beq	3b78 <btbb_packet_get_flag@@Base+0x22c>
    3a94:	cmp	r3, #14
    3a98:	movle	r0, #0
    3a9c:	ble	3c2c <btbb_packet_get_flag@@Base+0x2e0>
    3aa0:	mov	r1, #8
    3aa4:	bl	2ea4 <__assert_fail@plt+0x9b4>
    3aa8:	subs	r7, r0, #0
    3aac:	moveq	r0, #0
    3ab0:	beq	3c2c <btbb_packet_get_flag@@Base+0x2e0>
    3ab4:	str	r4, [sp, #4]
    3ab8:	mov	r3, #18
    3abc:	str	r3, [sp]
    3ac0:	mov	r3, #8
    3ac4:	mov	r2, r6
    3ac8:	add	r1, r4, #44	; 0x2c
    3acc:	mov	r0, r7
    3ad0:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    3ad4:	mov	r0, r7
    3ad8:	bl	2148 <free@plt>
    3adc:	b	3b94 <btbb_packet_get_flag@@Base+0x248>
    3ae0:	cmp	r3, #15
    3ae4:	movle	r0, #0
    3ae8:	ble	3c2c <btbb_packet_get_flag@@Base+0x2e0>
    3aec:	ldr	r2, [sp, #32]
    3af0:	cmp	r2, #0
    3af4:	beq	3b44 <btbb_packet_get_flag@@Base+0x1f8>
    3af8:	cmp	r3, #29
    3afc:	movle	r0, #0
    3b00:	ble	3c2c <btbb_packet_get_flag@@Base+0x2e0>
    3b04:	mov	r1, #16
    3b08:	bl	2ea4 <__assert_fail@plt+0x9b4>
    3b0c:	subs	r7, r0, #0
    3b10:	moveq	r0, #0
    3b14:	beq	3c2c <btbb_packet_get_flag@@Base+0x2e0>
    3b18:	str	r4, [sp, #4]
    3b1c:	mov	r3, #18
    3b20:	str	r3, [sp]
    3b24:	mov	r3, #16
    3b28:	mov	r2, r6
    3b2c:	add	r1, r4, #44	; 0x2c
    3b30:	mov	r0, r7
    3b34:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    3b38:	mov	r0, r7
    3b3c:	bl	2148 <free@plt>
    3b40:	b	3b60 <btbb_packet_get_flag@@Base+0x214>
    3b44:	str	r4, [sp, #4]
    3b48:	mov	r3, #18
    3b4c:	str	r3, [sp]
    3b50:	mov	r3, #16
    3b54:	mov	r2, r1
    3b58:	add	r1, r4, #44	; 0x2c
    3b5c:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    3b60:	mov	r1, #10
    3b64:	add	r0, r4, #47	; 0x2f
    3b68:	bl	2704 <__assert_fail@plt+0x214>
    3b6c:	add	r0, r0, #4
    3b70:	str	r0, [r4, #64]	; 0x40
    3b74:	b	3ba8 <btbb_packet_get_flag@@Base+0x25c>
    3b78:	str	r4, [sp, #4]
    3b7c:	mov	r3, #18
    3b80:	str	r3, [sp]
    3b84:	mov	r3, #8
    3b88:	mov	r2, r1
    3b8c:	add	r1, r4, #44	; 0x2c
    3b90:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    3b94:	mov	r1, #5
    3b98:	add	r0, r4, #47	; 0x2f
    3b9c:	bl	26bc <__assert_fail@plt+0x1cc>
    3ba0:	add	r0, r0, #3
    3ba4:	str	r0, [r4, #64]	; 0x40
    3ba8:	ldrb	r3, [r4, #18]
    3bac:	sub	r3, r3, #3
    3bb0:	cmp	r3, #12
    3bb4:	addls	pc, pc, r3, lsl #2
    3bb8:	b	3c70 <btbb_packet_get_flag@@Base+0x324>
    3bbc:	b	3bf0 <btbb_packet_get_flag@@Base+0x2a4>
    3bc0:	b	3c40 <btbb_packet_get_flag@@Base+0x2f4>
    3bc4:	b	3c70 <btbb_packet_get_flag@@Base+0x324>
    3bc8:	b	3c70 <btbb_packet_get_flag@@Base+0x324>
    3bcc:	b	3c70 <btbb_packet_get_flag@@Base+0x324>
    3bd0:	b	3c48 <btbb_packet_get_flag@@Base+0x2fc>
    3bd4:	b	3c70 <btbb_packet_get_flag@@Base+0x324>
    3bd8:	b	3c50 <btbb_packet_get_flag@@Base+0x304>
    3bdc:	b	3c58 <btbb_packet_get_flag@@Base+0x30c>
    3be0:	b	3c70 <btbb_packet_get_flag@@Base+0x324>
    3be4:	b	3c70 <btbb_packet_get_flag@@Base+0x324>
    3be8:	b	3c60 <btbb_packet_get_flag@@Base+0x314>
    3bec:	b	3c68 <btbb_packet_get_flag@@Base+0x31c>
    3bf0:	mov	r2, #20
    3bf4:	ldr	r3, [r4, #64]	; 0x40
    3bf8:	cmp	r3, r2
    3bfc:	movge	r3, r2
    3c00:	str	r3, [r4, #64]	; 0x40
    3c04:	mov	r1, #2
    3c08:	add	r0, r4, #44	; 0x2c
    3c0c:	bl	26bc <__assert_fail@plt+0x1cc>
    3c10:	strb	r0, [r4, #60]	; 0x3c
    3c14:	mov	r1, #1
    3c18:	add	r0, r4, #46	; 0x2e
    3c1c:	bl	26bc <__assert_fail@plt+0x1cc>
    3c20:	strb	r0, [r4, #61]	; 0x3d
    3c24:	str	r5, [r4, #40]	; 0x28
    3c28:	mov	r0, #1
    3c2c:	add	sp, sp, #12
    3c30:	ldrd	r4, [sp]
    3c34:	ldrd	r6, [sp, #8]
    3c38:	add	sp, sp, #16
    3c3c:	pop	{pc}		; (ldr pc, [sp], #4)
    3c40:	mov	r2, #30
    3c44:	b	3bf4 <btbb_packet_get_flag@@Base+0x2a8>
    3c48:	mov	r2, #12
    3c4c:	b	3bf4 <btbb_packet_get_flag@@Base+0x2a8>
    3c50:	mov	r2, #125	; 0x7d
    3c54:	b	3bf4 <btbb_packet_get_flag@@Base+0x2a8>
    3c58:	mov	r2, #187	; 0xbb
    3c5c:	b	3bf4 <btbb_packet_get_flag@@Base+0x2a8>
    3c60:	mov	r2, #228	; 0xe4
    3c64:	b	3bf4 <btbb_packet_get_flag@@Base+0x2a8>
    3c68:	movw	r2, #343	; 0x157
    3c6c:	b	3bf4 <btbb_packet_get_flag@@Base+0x2a8>
    3c70:	mov	r2, #0
    3c74:	b	3bf4 <btbb_packet_get_flag@@Base+0x2a8>

00003c78 <btbb_get_symbols@@Base>:
    3c78:	add	r0, r0, #2816	; 0xb00
    3c7c:	add	r0, r0, #8
    3c80:	bx	lr

00003c84 <btbb_packet_get_payload_length@@Base>:
    3c84:	ldr	r0, [r0, #64]	; 0x40
    3c88:	bx	lr

00003c8c <btbb_get_payload@@Base>:
    3c8c:	add	r0, r0, #68	; 0x44
    3c90:	bx	lr

00003c94 <btbb_get_payload_packed@@Base>:
    3c94:	ldr	r2, [r0, #64]	; 0x40
    3c98:	cmp	r2, #0
    3c9c:	ble	3d08 <btbb_get_payload_packed@@Base+0x74>
    3ca0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    3ca4:	strd	r6, [sp, #8]
    3ca8:	str	r8, [sp, #16]
    3cac:	str	lr, [sp, #20]
    3cb0:	mov	r7, r1
    3cb4:	mov	r6, r0
    3cb8:	add	r5, r0, #68	; 0x44
    3cbc:	sub	r4, r1, #1
    3cc0:	mov	r8, #8
    3cc4:	mov	r1, r8
    3cc8:	mov	r0, r5
    3ccc:	bl	26bc <__assert_fail@plt+0x1cc>
    3cd0:	strb	r0, [r4, #1]
    3cd4:	ldr	r2, [r6, #64]	; 0x40
    3cd8:	add	r5, r5, #8
    3cdc:	add	r3, r4, #2
    3ce0:	sub	r3, r3, r7
    3ce4:	add	r4, r4, #1
    3ce8:	cmp	r2, r3
    3cec:	bgt	3cc4 <btbb_get_payload_packed@@Base+0x30>
    3cf0:	mov	r0, r2
    3cf4:	ldrd	r4, [sp]
    3cf8:	ldrd	r6, [sp, #8]
    3cfc:	ldr	r8, [sp, #16]
    3d00:	add	sp, sp, #20
    3d04:	pop	{pc}		; (ldr pc, [sp], #4)
    3d08:	mov	r0, r2
    3d0c:	bx	lr

00003d10 <btbb_packet_get_type@@Base>:
    3d10:	ldrb	r0, [r0, #18]
    3d14:	bx	lr

00003d18 <btbb_packet_get_lt_addr@@Base>:
    3d18:	ldrb	r0, [r0, #19]
    3d1c:	bx	lr

00003d20 <btbb_packet_get_header_flags@@Base>:
    3d20:	ldrb	r0, [r0, #20]
    3d24:	bx	lr

00003d28 <btbb_packet_get_hec@@Base>:
    3d28:	ldrb	r0, [r0, #21]
    3d2c:	bx	lr

00003d30 <btbb_packet_get_header_packed@@Base>:
    3d30:	push	{lr}		; (str lr, [sp, #-4]!)
    3d34:	mov	r3, r0
    3d38:	add	r2, r0, #21
    3d3c:	add	r1, r0, #39	; 0x27
    3d40:	mov	r0, #0
    3d44:	rsb	r3, r3, #-16777216	; 0xff000000
    3d48:	add	r3, r3, #16711680	; 0xff0000
    3d4c:	add	r3, r3, #65280	; 0xff00
    3d50:	add	r3, r3, #235	; 0xeb
    3d54:	add	ip, r3, r2
    3d58:	ldrb	lr, [r2, #1]!
    3d5c:	orr	r0, r0, lr, lsl ip
    3d60:	cmp	r2, r1
    3d64:	bne	3d54 <btbb_packet_get_header_packed@@Base+0x24>
    3d68:	pop	{pc}		; (ldr pc, [sp], #4)

00003d6c <fhs@@Base>:
    3d6c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    3d70:	strd	r6, [sp, #8]
    3d74:	strd	r8, [sp, #16]
    3d78:	str	lr, [sp, #24]
    3d7c:	sub	sp, sp, #12
    3d80:	movw	r3, #2822	; 0xb06
    3d84:	ldrh	r2, [r1, r3]
    3d88:	mov	r3, #20
    3d8c:	str	r3, [r1, #64]	; 0x40
    3d90:	movw	r3, #361	; 0x169
    3d94:	cmp	r2, r3
    3d98:	movls	r6, #1
    3d9c:	bhi	3dbc <fhs@@Base+0x50>
    3da0:	mov	r0, r6
    3da4:	add	sp, sp, #12
    3da8:	ldrd	r4, [sp]
    3dac:	ldrd	r6, [sp, #8]
    3db0:	ldrd	r8, [sp, #16]
    3db4:	add	sp, sp, #24
    3db8:	pop	{pc}		; (ldr pc, [sp], #4)
    3dbc:	mov	r4, r1
    3dc0:	mov	r5, r0
    3dc4:	mov	r1, #160	; 0xa0
    3dc8:	add	r0, r4, #2944	; 0xb80
    3dcc:	add	r0, r0, #2
    3dd0:	bl	2ea4 <__assert_fail@plt+0x9b4>
    3dd4:	subs	r7, r0, #0
    3dd8:	moveq	r6, #0
    3ddc:	beq	3da0 <fhs@@Base+0x34>
    3de0:	add	r8, r4, #68	; 0x44
    3de4:	ldr	r3, [r4, #64]	; 0x40
    3de8:	str	r4, [sp, #4]
    3dec:	mov	r2, #18
    3df0:	str	r2, [sp]
    3df4:	lsl	r3, r3, #3
    3df8:	mov	r2, r5
    3dfc:	mov	r1, r8
    3e00:	mov	r0, r7
    3e04:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    3e08:	mov	r0, r4
    3e0c:	bl	288c <__assert_fail@plt+0x39c>
    3e10:	cmp	r0, #0
    3e14:	moveq	r5, #32
    3e18:	moveq	r9, #18
    3e1c:	bne	3e68 <fhs@@Base+0xfc>
    3e20:	ldr	r3, [r4, #64]	; 0x40
    3e24:	str	r4, [sp, #4]
    3e28:	str	r9, [sp]
    3e2c:	lsl	r3, r3, #3
    3e30:	mov	r2, r5
    3e34:	mov	r1, r8
    3e38:	mov	r0, r7
    3e3c:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    3e40:	mov	r0, r4
    3e44:	bl	288c <__assert_fail@plt+0x39c>
    3e48:	subs	r6, r0, #0
    3e4c:	bne	3e78 <fhs@@Base+0x10c>
    3e50:	add	r5, r5, #1
    3e54:	cmp	r5, #64	; 0x40
    3e58:	bne	3e20 <fhs@@Base+0xb4>
    3e5c:	mov	r0, r7
    3e60:	bl	2148 <free@plt>
    3e64:	b	3da0 <fhs@@Base+0x34>
    3e68:	mov	r0, r7
    3e6c:	bl	2148 <free@plt>
    3e70:	mov	r6, #1000	; 0x3e8
    3e74:	b	3da0 <fhs@@Base+0x34>
    3e78:	mov	r0, r7
    3e7c:	bl	2148 <free@plt>
    3e80:	mov	r6, #1000	; 0x3e8
    3e84:	b	3da0 <fhs@@Base+0x34>

00003e88 <DM@@Base>:
    3e88:	strd	r4, [sp, #-24]!	; 0xffffffe8
    3e8c:	strd	r6, [sp, #8]
    3e90:	str	r8, [sp, #16]
    3e94:	str	lr, [sp, #20]
    3e98:	sub	sp, sp, #8
    3e9c:	add	r5, r1, #2944	; 0xb80
    3ea0:	add	r5, r5, #2
    3ea4:	movw	r3, #2822	; 0xb06
    3ea8:	ldrh	ip, [r1, r3]
    3eac:	sub	r6, ip, #122	; 0x7a
    3eb0:	ldrb	r3, [r1, #18]
    3eb4:	sub	r3, r3, #3
    3eb8:	cmp	r3, #11
    3ebc:	addls	pc, pc, r3, lsl #2
    3ec0:	b	3fe8 <DM@@Base+0x160>
    3ec4:	b	3f24 <DM@@Base+0x9c>
    3ec8:	b	3fe8 <DM@@Base+0x160>
    3ecc:	b	3fe8 <DM@@Base+0x160>
    3ed0:	b	3fe8 <DM@@Base+0x160>
    3ed4:	b	3fe8 <DM@@Base+0x160>
    3ed8:	b	3f00 <DM@@Base+0x78>
    3edc:	b	3fe8 <DM@@Base+0x160>
    3ee0:	b	3ef4 <DM@@Base+0x6c>
    3ee4:	b	3fe8 <DM@@Base+0x160>
    3ee8:	b	3fe8 <DM@@Base+0x160>
    3eec:	b	3fe8 <DM@@Base+0x160>
    3ef0:	b	3f18 <DM@@Base+0x90>
    3ef4:	mov	r7, #125	; 0x7d
    3ef8:	mov	r2, #2
    3efc:	b	3f2c <DM@@Base+0xa4>
    3f00:	add	r5, r1, #3024	; 0xbd0
    3f04:	add	r5, r5, #2
    3f08:	sub	r6, ip, #202	; 0xca
    3f0c:	mov	r7, #12
    3f10:	mov	r2, #1
    3f14:	b	3f2c <DM@@Base+0xa4>
    3f18:	mov	r7, #228	; 0xe4
    3f1c:	mov	r2, #2
    3f20:	b	3f2c <DM@@Base+0xa4>
    3f24:	mov	r7, #20
    3f28:	mov	r2, #1
    3f2c:	mov	r4, r1
    3f30:	mov	r8, r0
    3f34:	str	r1, [sp, #4]
    3f38:	mov	r3, #1
    3f3c:	str	r3, [sp]
    3f40:	mov	r3, r6
    3f44:	mov	r1, r0
    3f48:	mov	r0, r5
    3f4c:	bl	3a58 <btbb_packet_get_flag@@Base+0x10c>
    3f50:	cmp	r0, #0
    3f54:	beq	3f78 <DM@@Base+0xf0>
    3f58:	ldr	r3, [r4, #64]	; 0x40
    3f5c:	cmp	r3, r7
    3f60:	movgt	r0, #1
    3f64:	bgt	3f78 <DM@@Base+0xf0>
    3f68:	lsl	r7, r3, #3
    3f6c:	cmp	r6, r7
    3f70:	movlt	r0, #1
    3f74:	bge	3f90 <DM@@Base+0x108>
    3f78:	add	sp, sp, #8
    3f7c:	ldrd	r4, [sp]
    3f80:	ldrd	r6, [sp, #8]
    3f84:	ldr	r8, [sp, #16]
    3f88:	add	sp, sp, #20
    3f8c:	pop	{pc}		; (ldr pc, [sp], #4)
    3f90:	mov	r1, r7
    3f94:	mov	r0, r5
    3f98:	bl	2ea4 <__assert_fail@plt+0x9b4>
    3f9c:	subs	r5, r0, #0
    3fa0:	moveq	r0, #0
    3fa4:	beq	3f78 <DM@@Base+0xf0>
    3fa8:	str	r4, [sp, #4]
    3fac:	mov	r3, #18
    3fb0:	str	r3, [sp]
    3fb4:	mov	r3, r7
    3fb8:	mov	r2, r8
    3fbc:	add	r1, r4, #68	; 0x44
    3fc0:	mov	r0, r5
    3fc4:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    3fc8:	mov	r0, r5
    3fcc:	bl	2148 <free@plt>
    3fd0:	mov	r0, r4
    3fd4:	bl	288c <__assert_fail@plt+0x39c>
    3fd8:	cmp	r0, #0
    3fdc:	moveq	r0, #2
    3fe0:	movne	r0, #10
    3fe4:	b	3f78 <DM@@Base+0xf0>
    3fe8:	mov	r0, #0
    3fec:	b	3f78 <DM@@Base+0xf0>

00003ff0 <DH@@Base>:
    3ff0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    3ff4:	strd	r6, [sp, #8]
    3ff8:	str	r8, [sp, #16]
    3ffc:	str	lr, [sp, #20]
    4000:	sub	sp, sp, #8
    4004:	ldrb	r3, [r1, #18]
    4008:	sub	r3, r3, #4
    400c:	cmp	r3, #11
    4010:	addls	pc, pc, r3, lsl #2
    4014:	b	4124 <DH@@Base+0x134>
    4018:	b	4060 <DH@@Base+0x70>
    401c:	b	4124 <DH@@Base+0x134>
    4020:	b	4124 <DH@@Base+0x134>
    4024:	b	4124 <DH@@Base+0x134>
    4028:	b	4124 <DH@@Base+0x134>
    402c:	b	4060 <DH@@Base+0x70>
    4030:	b	4124 <DH@@Base+0x134>
    4034:	b	4048 <DH@@Base+0x58>
    4038:	b	4124 <DH@@Base+0x134>
    403c:	b	4124 <DH@@Base+0x134>
    4040:	b	4124 <DH@@Base+0x134>
    4044:	b	4054 <DH@@Base+0x64>
    4048:	mov	r7, #187	; 0xbb
    404c:	mov	r2, #2
    4050:	b	4068 <DH@@Base+0x78>
    4054:	movw	r7, #343	; 0x157
    4058:	mov	r2, #2
    405c:	b	4068 <DH@@Base+0x78>
    4060:	mov	r7, #30
    4064:	mov	r2, #1
    4068:	mov	r4, r1
    406c:	mov	r6, r0
    4070:	add	r5, r1, #2944	; 0xb80
    4074:	add	r5, r5, #2
    4078:	movw	r3, #2822	; 0xb06
    407c:	ldrh	r8, [r1, r3]
    4080:	sub	r8, r8, #122	; 0x7a
    4084:	str	r1, [sp, #4]
    4088:	mov	r3, #0
    408c:	str	r3, [sp]
    4090:	mov	r3, r8
    4094:	mov	r1, r0
    4098:	mov	r0, r5
    409c:	bl	3a58 <btbb_packet_get_flag@@Base+0x10c>
    40a0:	cmp	r0, #0
    40a4:	beq	40c8 <DH@@Base+0xd8>
    40a8:	ldr	r3, [r4, #64]	; 0x40
    40ac:	cmp	r3, r7
    40b0:	movgt	r0, #1
    40b4:	bgt	40c8 <DH@@Base+0xd8>
    40b8:	lsl	r3, r3, #3
    40bc:	cmp	r8, r3
    40c0:	movlt	r0, #1
    40c4:	bge	40e0 <DH@@Base+0xf0>
    40c8:	add	sp, sp, #8
    40cc:	ldrd	r4, [sp]
    40d0:	ldrd	r6, [sp, #8]
    40d4:	ldr	r8, [sp, #16]
    40d8:	add	sp, sp, #20
    40dc:	pop	{pc}		; (ldr pc, [sp], #4)
    40e0:	str	r4, [sp, #4]
    40e4:	mov	r2, #18
    40e8:	str	r2, [sp]
    40ec:	mov	r2, r6
    40f0:	add	r1, r4, #68	; 0x44
    40f4:	mov	r0, r5
    40f8:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    40fc:	ldrb	r3, [r4, #18]
    4100:	cmp	r3, #9
    4104:	moveq	r0, #2
    4108:	beq	40c8 <DH@@Base+0xd8>
    410c:	mov	r0, r4
    4110:	bl	288c <__assert_fail@plt+0x39c>
    4114:	cmp	r0, #0
    4118:	moveq	r0, #2
    411c:	movne	r0, #10
    4120:	b	40c8 <DH@@Base+0xd8>
    4124:	mov	r0, #0
    4128:	b	40c8 <DH@@Base+0xd8>

0000412c <EV3@@Base>:
    412c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4130:	strd	r6, [sp, #8]
    4134:	strd	r8, [sp, #16]
    4138:	str	sl, [sp, #24]
    413c:	str	lr, [sp, #28]
    4140:	sub	sp, sp, #8
    4144:	movw	r3, #2822	; 0xb06
    4148:	ldrh	r5, [r1, r3]
    414c:	sub	r5, r5, #122	; 0x7a
    4150:	mov	r3, #0
    4154:	str	r3, [r1, #64]	; 0x40
    4158:	cmp	r5, #7
    415c:	ble	4204 <EV3@@Base+0xd8>
    4160:	add	r6, r1, #2944	; 0xb80
    4164:	add	r6, r6, #2
    4168:	mov	r4, r1
    416c:	mov	r7, r0
    4170:	mov	r1, r3
    4174:	add	r9, r4, #68	; 0x44
    4178:	mov	r8, #8
    417c:	b	41a0 <EV3@@Base+0x74>
    4180:	add	r1, sl, #1
    4184:	str	r1, [r4, #64]	; 0x40
    4188:	cmp	r1, #31
    418c:	bgt	41e4 <EV3@@Base+0xb8>
    4190:	lsl	r1, r1, #3
    4194:	add	r3, r1, #7
    4198:	cmp	r3, r5
    419c:	bge	420c <EV3@@Base+0xe0>
    41a0:	str	r4, [sp, #4]
    41a4:	add	r3, r1, #18
    41a8:	str	r3, [sp]
    41ac:	mov	r3, r8
    41b0:	mov	r2, r7
    41b4:	add	r1, r9, r1
    41b8:	mov	r0, r6
    41bc:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    41c0:	ldr	sl, [r4, #64]	; 0x40
    41c4:	cmp	sl, #2
    41c8:	ble	4180 <EV3@@Base+0x54>
    41cc:	mov	r0, r4
    41d0:	bl	288c <__assert_fail@plt+0x39c>
    41d4:	cmp	r0, #0
    41d8:	beq	4180 <EV3@@Base+0x54>
    41dc:	mov	r0, #10
    41e0:	b	41e8 <EV3@@Base+0xbc>
    41e4:	mov	r0, #2
    41e8:	add	sp, sp, #8
    41ec:	ldrd	r4, [sp]
    41f0:	ldrd	r6, [sp, #8]
    41f4:	ldrd	r8, [sp, #16]
    41f8:	ldr	sl, [sp, #24]
    41fc:	add	sp, sp, #28
    4200:	pop	{pc}		; (ldr pc, [sp], #4)
    4204:	mov	r0, #1
    4208:	b	41e8 <EV3@@Base+0xbc>
    420c:	mov	r0, #1
    4210:	b	41e8 <EV3@@Base+0xbc>

00004214 <EV4@@Base>:
    4214:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4218:	strd	r6, [sp, #8]
    421c:	strd	r8, [sp, #16]
    4220:	strd	sl, [sp, #24]
    4224:	str	lr, [sp, #32]
    4228:	sub	sp, sp, #20
    422c:	movw	r3, #2822	; 0xb06
    4230:	ldrh	r8, [r1, r3]
    4234:	sub	r8, r8, #122	; 0x7a
    4238:	mov	r3, #1
    423c:	str	r3, [r1, #64]	; 0x40
    4240:	cmp	r8, #14
    4244:	ble	4310 <EV4@@Base+0xfc>
    4248:	mov	r5, r1
    424c:	str	r0, [sp, #12]
    4250:	mov	r6, #0
    4254:	mov	r7, r6
    4258:	add	r9, r1, #2944	; 0xb80
    425c:	add	r9, r9, #2
    4260:	mov	sl, #10
    4264:	add	fp, r1, #68	; 0x44
    4268:	mov	r1, sl
    426c:	add	r0, r9, r7
    4270:	bl	2ea4 <__assert_fail@plt+0x9b4>
    4274:	subs	r4, r0, #0
    4278:	beq	42f8 <EV4@@Base+0xe4>
    427c:	str	r5, [sp, #4]
    4280:	add	r3, r6, #18
    4284:	str	r3, [sp]
    4288:	mov	r3, sl
    428c:	ldr	r2, [sp, #12]
    4290:	add	r1, fp, r6
    4294:	mov	r0, r4
    4298:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    429c:	mov	r0, r4
    42a0:	bl	2148 <free@plt>
    42a4:	ldr	r4, [r5, #64]	; 0x40
    42a8:	cmp	r6, r4, lsl #3
    42ac:	blt	42d0 <EV4@@Base+0xbc>
    42b0:	mov	r0, r5
    42b4:	bl	288c <__assert_fail@plt+0x39c>
    42b8:	cmp	r0, #0
    42bc:	bne	4320 <EV4@@Base+0x10c>
    42c0:	add	r4, r4, #1
    42c4:	str	r4, [r5, #64]	; 0x40
    42c8:	cmp	r6, r4, lsl #3
    42cc:	bge	42b0 <EV4@@Base+0x9c>
    42d0:	add	r3, r7, #15
    42d4:	add	r6, r6, #10
    42d8:	movw	r2, #1470	; 0x5be
    42dc:	cmp	r3, r2
    42e0:	beq	4308 <EV4@@Base+0xf4>
    42e4:	add	r7, r7, #29
    42e8:	cmp	r8, r7
    42ec:	ble	4318 <EV4@@Base+0x104>
    42f0:	mov	r7, r3
    42f4:	b	4268 <EV4@@Base+0x54>
    42f8:	cmp	r7, #44	; 0x2c
    42fc:	movle	r0, #0
    4300:	movgt	r0, #1
    4304:	b	4324 <EV4@@Base+0x110>
    4308:	mov	r0, #2
    430c:	b	4324 <EV4@@Base+0x110>
    4310:	mov	r0, #1
    4314:	b	4324 <EV4@@Base+0x110>
    4318:	mov	r0, #1
    431c:	b	4324 <EV4@@Base+0x110>
    4320:	mov	r0, #10
    4324:	add	sp, sp, #20
    4328:	ldrd	r4, [sp]
    432c:	ldrd	r6, [sp, #8]
    4330:	ldrd	r8, [sp, #16]
    4334:	ldrd	sl, [sp, #24]
    4338:	add	sp, sp, #32
    433c:	pop	{pc}		; (ldr pc, [sp], #4)

00004340 <EV5@@Base>:
    4340:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4344:	strd	r6, [sp, #8]
    4348:	strd	r8, [sp, #16]
    434c:	str	sl, [sp, #24]
    4350:	str	lr, [sp, #28]
    4354:	sub	sp, sp, #8
    4358:	movw	r3, #2822	; 0xb06
    435c:	ldrh	r5, [r1, r3]
    4360:	sub	r5, r5, #122	; 0x7a
    4364:	mov	r3, #0
    4368:	str	r3, [r1, #64]	; 0x40
    436c:	cmp	r5, #7
    4370:	ble	4418 <EV5@@Base+0xd8>
    4374:	add	r6, r1, #2944	; 0xb80
    4378:	add	r6, r6, #2
    437c:	mov	r4, r1
    4380:	mov	r7, r0
    4384:	mov	r1, r3
    4388:	add	r9, r4, #68	; 0x44
    438c:	mov	r8, #8
    4390:	b	43b4 <EV5@@Base+0x74>
    4394:	add	r1, sl, #1
    4398:	str	r1, [r4, #64]	; 0x40
    439c:	cmp	r1, #181	; 0xb5
    43a0:	bgt	43f8 <EV5@@Base+0xb8>
    43a4:	lsl	r1, r1, #3
    43a8:	add	r3, r1, #7
    43ac:	cmp	r3, r5
    43b0:	bge	4420 <EV5@@Base+0xe0>
    43b4:	str	r4, [sp, #4]
    43b8:	add	r3, r1, #18
    43bc:	str	r3, [sp]
    43c0:	mov	r3, r8
    43c4:	mov	r2, r7
    43c8:	add	r1, r9, r1
    43cc:	mov	r0, r6
    43d0:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    43d4:	ldr	sl, [r4, #64]	; 0x40
    43d8:	cmp	sl, #2
    43dc:	ble	4394 <EV5@@Base+0x54>
    43e0:	mov	r0, r4
    43e4:	bl	288c <__assert_fail@plt+0x39c>
    43e8:	cmp	r0, #0
    43ec:	beq	4394 <EV5@@Base+0x54>
    43f0:	mov	r0, #10
    43f4:	b	43fc <EV5@@Base+0xbc>
    43f8:	mov	r0, #2
    43fc:	add	sp, sp, #8
    4400:	ldrd	r4, [sp]
    4404:	ldrd	r6, [sp, #8]
    4408:	ldrd	r8, [sp, #16]
    440c:	ldr	sl, [sp, #24]
    4410:	add	sp, sp, #28
    4414:	pop	{pc}		; (ldr pc, [sp], #4)
    4418:	mov	r0, #1
    441c:	b	43fc <EV5@@Base+0xbc>
    4420:	mov	r0, #1
    4424:	b	43fc <EV5@@Base+0xbc>

00004428 <HV@@Base>:
    4428:	movw	r3, #2822	; 0xb06
    442c:	ldrh	ip, [r1, r3]
    4430:	mov	r3, #0
    4434:	str	r3, [r1, #40]	; 0x28
    4438:	movw	r3, #361	; 0x169
    443c:	cmp	ip, r3
    4440:	bls	4498 <HV@@Base+0x70>
    4444:	strd	r4, [sp, #-16]!
    4448:	str	r6, [sp, #8]
    444c:	str	lr, [sp, #12]
    4450:	sub	sp, sp, #88	; 0x58
    4454:	mov	r4, r1
    4458:	mov	r6, r0
    445c:	add	r5, r1, #2944	; 0xb80
    4460:	add	r5, r5, #2
    4464:	ldrb	r3, [r1, #18]
    4468:	cmp	r3, #6
    446c:	beq	4504 <HV@@Base+0xdc>
    4470:	cmp	r3, #7
    4474:	beq	4568 <HV@@Base+0x140>
    4478:	cmp	r3, #5
    447c:	movne	r0, #2
    4480:	beq	44a8 <HV@@Base+0x80>
    4484:	add	sp, sp, #88	; 0x58
    4488:	ldrd	r4, [sp]
    448c:	ldr	r6, [sp, #8]
    4490:	add	sp, sp, #12
    4494:	pop	{pc}		; (ldr pc, [sp], #4)
    4498:	mov	r3, #0
    449c:	str	r3, [r1, #64]	; 0x40
    44a0:	mov	r0, #1
    44a4:	bx	lr
    44a8:	mov	r2, #80	; 0x50
    44ac:	add	r1, sp, #8
    44b0:	mov	r0, r5
    44b4:	bl	27a4 <__assert_fail@plt+0x2b4>
    44b8:	cmp	r0, #0
    44bc:	beq	4484 <HV@@Base+0x5c>
    44c0:	mov	r3, #10
    44c4:	str	r3, [r4, #64]	; 0x40
    44c8:	mov	r2, #1
    44cc:	mov	r1, #7
    44d0:	mov	r0, r4
    44d4:	bl	2130 <btbb_packet_set_flag@plt>
    44d8:	ldr	r3, [r4, #64]	; 0x40
    44dc:	str	r4, [sp, #4]
    44e0:	mov	r2, #18
    44e4:	str	r2, [sp]
    44e8:	lsl	r3, r3, #3
    44ec:	mov	r2, r6
    44f0:	add	r1, r4, #68	; 0x44
    44f4:	add	r0, sp, #8
    44f8:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    44fc:	mov	r0, #2
    4500:	b	4484 <HV@@Base+0x5c>
    4504:	mov	r1, #160	; 0xa0
    4508:	mov	r0, r5
    450c:	bl	2ea4 <__assert_fail@plt+0x9b4>
    4510:	subs	r5, r0, #0
    4514:	moveq	r0, #0
    4518:	beq	4484 <HV@@Base+0x5c>
    451c:	mov	r3, #20
    4520:	str	r3, [r4, #64]	; 0x40
    4524:	mov	r2, #1
    4528:	mov	r1, #7
    452c:	mov	r0, r4
    4530:	bl	2130 <btbb_packet_set_flag@plt>
    4534:	ldr	r3, [r4, #64]	; 0x40
    4538:	str	r4, [sp, #4]
    453c:	mov	r2, #18
    4540:	str	r2, [sp]
    4544:	lsl	r3, r3, #3
    4548:	mov	r2, r6
    454c:	add	r1, r4, #68	; 0x44
    4550:	mov	r0, r5
    4554:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    4558:	mov	r0, r5
    455c:	bl	2148 <free@plt>
    4560:	mov	r0, #2
    4564:	b	4484 <HV@@Base+0x5c>
    4568:	mov	r3, #30
    456c:	str	r3, [r1, #64]	; 0x40
    4570:	mov	r2, #1
    4574:	mov	r1, #7
    4578:	mov	r0, r4
    457c:	bl	2130 <btbb_packet_set_flag@plt>
    4580:	ldr	r3, [r4, #64]	; 0x40
    4584:	str	r4, [sp, #4]
    4588:	mov	r2, #18
    458c:	str	r2, [sp]
    4590:	lsl	r3, r3, #3
    4594:	mov	r2, r6
    4598:	add	r1, r4, #68	; 0x44
    459c:	mov	r0, r5
    45a0:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    45a4:	mov	r0, #2
    45a8:	b	4484 <HV@@Base+0x5c>

000045ac <crc_check@@Base>:
    45ac:	str	r4, [sp, #-8]!
    45b0:	str	lr, [sp, #4]
    45b4:	mov	r4, r1
    45b8:	ldrb	r3, [r1, #18]
    45bc:	sub	r3, r3, #2
    45c0:	cmp	r3, #13
    45c4:	addls	pc, pc, r3, lsl #2
    45c8:	b	4660 <crc_check@@Base+0xb4>
    45cc:	b	4604 <crc_check@@Base+0x58>
    45d0:	b	4630 <crc_check@@Base+0x84>
    45d4:	b	4638 <crc_check@@Base+0x8c>
    45d8:	b	4658 <crc_check@@Base+0xac>
    45dc:	b	4660 <crc_check@@Base+0xb4>
    45e0:	b	4640 <crc_check@@Base+0x94>
    45e4:	b	4630 <crc_check@@Base+0x84>
    45e8:	b	4660 <crc_check@@Base+0xb4>
    45ec:	b	4630 <crc_check@@Base+0x84>
    45f0:	b	4638 <crc_check@@Base+0x8c>
    45f4:	b	4648 <crc_check@@Base+0x9c>
    45f8:	b	4650 <crc_check@@Base+0xa4>
    45fc:	b	4630 <crc_check@@Base+0x84>
    4600:	b	4638 <crc_check@@Base+0x8c>
    4604:	bl	2190 <fhs@plt>
    4608:	cmp	r0, #0
    460c:	bne	4664 <crc_check@@Base+0xb8>
    4610:	ldrb	r3, [r4, #18]
    4614:	sub	r0, r3, #2
    4618:	uxtb	r0, r0
    461c:	cmp	r3, #5
    4620:	cmpne	r0, #1
    4624:	movhi	r0, #1
    4628:	movls	r0, #0
    462c:	b	4688 <crc_check@@Base+0xdc>
    4630:	bl	2208 <DM@plt>
    4634:	b	4608 <crc_check@@Base+0x5c>
    4638:	bl	2460 <DH@plt>
    463c:	b	4608 <crc_check@@Base+0x5c>
    4640:	bl	23e8 <EV3@plt>
    4644:	b	4608 <crc_check@@Base+0x5c>
    4648:	bl	219c <EV4@plt>
    464c:	b	4608 <crc_check@@Base+0x5c>
    4650:	bl	2448 <EV5@plt>
    4654:	b	4608 <crc_check@@Base+0x5c>
    4658:	bl	2220 <HV@plt>
    465c:	b	4608 <crc_check@@Base+0x5c>
    4660:	mov	r0, #1
    4664:	cmp	r0, #1
    4668:	ble	4688 <crc_check@@Base+0xdc>
    466c:	ldrb	r3, [r4, #18]
    4670:	cmp	r3, #13
    4674:	cmpne	r3, #7
    4678:	moveq	r3, #1
    467c:	movne	r3, #0
    4680:	cmp	r3, #0
    4684:	movne	r0, #1
    4688:	ldr	r4, [sp]
    468c:	add	sp, sp, #4
    4690:	pop	{pc}		; (ldr pc, [sp], #4)

00004694 <try_clock@@Base>:
    4694:	strd	r4, [sp, #-12]!
    4698:	str	lr, [sp, #8]
    469c:	sub	sp, sp, #52	; 0x34
    46a0:	mov	r5, r0
    46a4:	mov	r4, r1
    46a8:	mov	r2, #18
    46ac:	add	r1, sp, #28
    46b0:	add	r0, r4, #2880	; 0xb40
    46b4:	add	r0, r0, #12
    46b8:	bl	27a4 <__assert_fail@plt+0x2b4>
    46bc:	cmp	r0, #0
    46c0:	moveq	r5, #0
    46c4:	bne	46dc <try_clock@@Base+0x48>
    46c8:	mov	r0, r5
    46cc:	add	sp, sp, #52	; 0x34
    46d0:	ldrd	r4, [sp]
    46d4:	add	sp, sp, #8
    46d8:	pop	{pc}		; (ldr pc, [sp], #4)
    46dc:	str	r4, [sp, #4]
    46e0:	mov	r3, #0
    46e4:	str	r3, [sp]
    46e8:	mov	r3, #18
    46ec:	mov	r2, r5
    46f0:	add	r5, sp, #8
    46f4:	mov	r1, r5
    46f8:	add	r0, sp, #28
    46fc:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    4700:	mov	r1, #10
    4704:	mov	r0, r5
    4708:	bl	2704 <__assert_fail@plt+0x214>
    470c:	mov	r5, r0
    4710:	mov	r1, #8
    4714:	add	r0, sp, #18
    4718:	bl	26bc <__assert_fail@plt+0x1cc>
    471c:	mov	r1, r0
    4720:	mov	r0, r5
    4724:	bl	2844 <__assert_fail@plt+0x354>
    4728:	mov	r5, r0
    472c:	strb	r0, [r4, #9]
    4730:	mov	r1, #4
    4734:	add	r0, sp, #11
    4738:	bl	26bc <__assert_fail@plt+0x1cc>
    473c:	strb	r0, [r4, #18]
    4740:	b	46c8 <try_clock@@Base+0x34>

00004744 <btbb_decode_header@@Base>:
    4744:	strd	r4, [sp, #-20]!	; 0xffffffec
    4748:	strd	r6, [sp, #8]
    474c:	str	lr, [sp, #16]
    4750:	sub	sp, sp, #36	; 0x24
    4754:	mov	r4, r0
    4758:	mov	r1, #4
    475c:	bl	2184 <btbb_packet_get_flag@plt>
    4760:	cmp	r0, #0
    4764:	bne	477c <btbb_decode_header@@Base+0x38>
    4768:	add	sp, sp, #36	; 0x24
    476c:	ldrd	r4, [sp]
    4770:	ldrd	r6, [sp, #8]
    4774:	add	sp, sp, #16
    4778:	pop	{pc}		; (ldr pc, [sp], #4)
    477c:	mov	r2, #18
    4780:	add	r1, sp, #12
    4784:	add	r0, r4, #2880	; 0xb40
    4788:	add	r0, r0, #12
    478c:	bl	27a4 <__assert_fail@plt+0x2b4>
    4790:	cmp	r0, #0
    4794:	beq	4768 <btbb_decode_header@@Base+0x24>
    4798:	add	r5, r4, #22
    479c:	str	r4, [sp, #4]
    47a0:	mov	r3, #0
    47a4:	str	r3, [sp]
    47a8:	mov	r3, #18
    47ac:	ldr	r2, [r4, #2816]	; 0xb00
    47b0:	mov	r1, r5
    47b4:	add	r0, sp, #12
    47b8:	bl	3964 <btbb_packet_get_flag@@Base+0x18>
    47bc:	mov	r1, #10
    47c0:	mov	r0, r5
    47c4:	bl	2704 <__assert_fail@plt+0x214>
    47c8:	mov	r7, r0
    47cc:	mov	r1, #8
    47d0:	add	r0, r4, #32
    47d4:	bl	26bc <__assert_fail@plt+0x1cc>
    47d8:	mov	r6, r0
    47dc:	mov	r1, r0
    47e0:	mov	r0, r7
    47e4:	bl	2844 <__assert_fail@plt+0x354>
    47e8:	ldrb	r3, [r4, #9]
    47ec:	cmp	r3, r0
    47f0:	movne	r0, #0
    47f4:	bne	4768 <btbb_decode_header@@Base+0x24>
    47f8:	mov	r1, #3
    47fc:	mov	r0, r5
    4800:	bl	26bc <__assert_fail@plt+0x1cc>
    4804:	strb	r0, [r4, #19]
    4808:	mov	r1, #4
    480c:	add	r0, r4, #25
    4810:	bl	26bc <__assert_fail@plt+0x1cc>
    4814:	strb	r0, [r4, #18]
    4818:	mov	r1, #3
    481c:	add	r0, r4, #29
    4820:	bl	26bc <__assert_fail@plt+0x1cc>
    4824:	strb	r0, [r4, #20]
    4828:	strb	r6, [r4, #21]
    482c:	mov	r0, #1
    4830:	b	4768 <btbb_decode_header@@Base+0x24>

00004834 <btbb_decode_payload@@Base>:
    4834:	strd	r4, [sp, #-16]!
    4838:	str	r6, [sp, #8]
    483c:	str	lr, [sp, #12]
    4840:	mov	r4, r0
    4844:	mov	r3, #0
    4848:	str	r3, [r0, #40]	; 0x28
    484c:	ldrb	r3, [r0, #18]
    4850:	cmp	r3, #15
    4854:	addls	pc, pc, r3, lsl #2
    4858:	b	4a0c <btbb_decode_payload@@Base+0x1d8>
    485c:	b	489c <btbb_decode_payload@@Base+0x68>
    4860:	b	48cc <btbb_decode_payload@@Base+0x98>
    4864:	b	48dc <btbb_decode_payload@@Base+0xa8>
    4868:	b	48f0 <btbb_decode_payload@@Base+0xbc>
    486c:	b	4904 <btbb_decode_payload@@Base+0xd0>
    4870:	b	4918 <btbb_decode_payload@@Base+0xe4>
    4874:	b	492c <btbb_decode_payload@@Base+0xf8>
    4878:	b	4940 <btbb_decode_payload@@Base+0x10c>
    487c:	b	496c <btbb_decode_payload@@Base+0x138>
    4880:	b	4980 <btbb_decode_payload@@Base+0x14c>
    4884:	b	4994 <btbb_decode_payload@@Base+0x160>
    4888:	b	49a8 <btbb_decode_payload@@Base+0x174>
    488c:	b	49bc <btbb_decode_payload@@Base+0x188>
    4890:	b	49d0 <btbb_decode_payload@@Base+0x19c>
    4894:	b	49e4 <btbb_decode_payload@@Base+0x1b0>
    4898:	b	49f8 <btbb_decode_payload@@Base+0x1c4>
    489c:	mov	r3, #0
    48a0:	str	r3, [r0, #64]	; 0x40
    48a4:	mov	r5, #1
    48a8:	mov	r2, #1
    48ac:	mov	r1, #7
    48b0:	mov	r0, r4
    48b4:	bl	2130 <btbb_packet_set_flag@plt>
    48b8:	mov	r0, r5
    48bc:	ldrd	r4, [sp]
    48c0:	ldr	r6, [sp, #8]
    48c4:	add	sp, sp, #12
    48c8:	pop	{pc}		; (ldr pc, [sp], #4)
    48cc:	mov	r3, #0
    48d0:	str	r3, [r0, #64]	; 0x40
    48d4:	mov	r5, #1
    48d8:	b	48a8 <btbb_decode_payload@@Base+0x74>
    48dc:	mov	r1, r0
    48e0:	ldr	r0, [r0, #2816]	; 0xb00
    48e4:	bl	2190 <fhs@plt>
    48e8:	mov	r5, r0
    48ec:	b	48a8 <btbb_decode_payload@@Base+0x74>
    48f0:	mov	r1, r0
    48f4:	ldr	r0, [r0, #2816]	; 0xb00
    48f8:	bl	2208 <DM@plt>
    48fc:	mov	r5, r0
    4900:	b	48a8 <btbb_decode_payload@@Base+0x74>
    4904:	mov	r1, r0
    4908:	ldr	r0, [r0, #2816]	; 0xb00
    490c:	bl	2460 <DH@plt>
    4910:	mov	r5, r0
    4914:	b	48a8 <btbb_decode_payload@@Base+0x74>
    4918:	mov	r1, r0
    491c:	ldr	r0, [r0, #2816]	; 0xb00
    4920:	bl	2220 <HV@plt>
    4924:	mov	r5, r0
    4928:	b	48a8 <btbb_decode_payload@@Base+0x74>
    492c:	mov	r1, r0
    4930:	ldr	r0, [r0, #2816]	; 0xb00
    4934:	bl	2220 <HV@plt>
    4938:	mov	r5, r0
    493c:	b	48a8 <btbb_decode_payload@@Base+0x74>
    4940:	mov	r1, r0
    4944:	ldr	r0, [r0, #2816]	; 0xb00
    4948:	bl	23e8 <EV3@plt>
    494c:	mov	r5, r0
    4950:	cmp	r0, #1
    4954:	bgt	48a8 <btbb_decode_payload@@Base+0x74>
    4958:	mov	r1, r4
    495c:	ldr	r0, [r4, #2816]	; 0xb00
    4960:	bl	2220 <HV@plt>
    4964:	mov	r5, r0
    4968:	b	48a8 <btbb_decode_payload@@Base+0x74>
    496c:	mov	r1, r0
    4970:	ldr	r0, [r0, #2816]	; 0xb00
    4974:	bl	2208 <DM@plt>
    4978:	mov	r5, r0
    497c:	b	48a8 <btbb_decode_payload@@Base+0x74>
    4980:	mov	r1, r0
    4984:	ldr	r0, [r0, #2816]	; 0xb00
    4988:	bl	2460 <DH@plt>
    498c:	mov	r5, r0
    4990:	b	48a8 <btbb_decode_payload@@Base+0x74>
    4994:	mov	r1, r0
    4998:	ldr	r0, [r0, #2816]	; 0xb00
    499c:	bl	2208 <DM@plt>
    49a0:	mov	r5, r0
    49a4:	b	48a8 <btbb_decode_payload@@Base+0x74>
    49a8:	mov	r1, r0
    49ac:	ldr	r0, [r0, #2816]	; 0xb00
    49b0:	bl	2460 <DH@plt>
    49b4:	mov	r5, r0
    49b8:	b	48a8 <btbb_decode_payload@@Base+0x74>
    49bc:	mov	r1, r0
    49c0:	ldr	r0, [r0, #2816]	; 0xb00
    49c4:	bl	219c <EV4@plt>
    49c8:	mov	r5, r0
    49cc:	b	48a8 <btbb_decode_payload@@Base+0x74>
    49d0:	mov	r1, r0
    49d4:	ldr	r0, [r0, #2816]	; 0xb00
    49d8:	bl	2448 <EV5@plt>
    49dc:	mov	r5, r0
    49e0:	b	48a8 <btbb_decode_payload@@Base+0x74>
    49e4:	mov	r1, r0
    49e8:	ldr	r0, [r0, #2816]	; 0xb00
    49ec:	bl	2208 <DM@plt>
    49f0:	mov	r5, r0
    49f4:	b	48a8 <btbb_decode_payload@@Base+0x74>
    49f8:	mov	r1, r0
    49fc:	ldr	r0, [r0, #2816]	; 0xb00
    4a00:	bl	2460 <DH@plt>
    4a04:	mov	r5, r0
    4a08:	b	48a8 <btbb_decode_payload@@Base+0x74>
    4a0c:	mov	r5, #0
    4a10:	b	48a8 <btbb_decode_payload@@Base+0x74>

00004a14 <btbb_print_packet@@Base>:
    4a14:	strd	r4, [sp, #-24]!	; 0xffffffe8
    4a18:	strd	r6, [sp, #8]
    4a1c:	str	r8, [sp, #16]
    4a20:	str	lr, [sp, #20]
    4a24:	mov	r4, r0
    4a28:	mov	r1, #7
    4a2c:	bl	2184 <btbb_packet_get_flag@plt>
    4a30:	cmp	r0, #0
    4a34:	bne	4a4c <btbb_print_packet@@Base+0x38>
    4a38:	ldrd	r4, [sp]
    4a3c:	ldrd	r6, [sp, #8]
    4a40:	ldr	r8, [sp, #16]
    4a44:	add	sp, sp, #20
    4a48:	pop	{pc}		; (ldr pc, [sp], #4)
    4a4c:	ldrb	r2, [r4, #18]
    4a50:	ldr	r3, [pc, #208]	; 4b28 <btbb_print_packet@@Base+0x114>
    4a54:	add	r3, pc, r3
    4a58:	ldr	r1, [r3, r2, lsl #2]
    4a5c:	ldr	r0, [pc, #200]	; 4b2c <btbb_print_packet@@Base+0x118>
    4a60:	add	r0, pc, r0
    4a64:	bl	2100 <printf@plt>
    4a68:	ldr	r3, [r4, #40]	; 0x28
    4a6c:	cmp	r3, #0
    4a70:	bgt	4ae4 <btbb_print_packet@@Base+0xd0>
    4a74:	ldr	r3, [r4, #64]	; 0x40
    4a78:	cmp	r3, #0
    4a7c:	beq	4a38 <btbb_print_packet@@Base+0x24>
    4a80:	ldr	r0, [pc, #168]	; 4b30 <btbb_print_packet@@Base+0x11c>
    4a84:	add	r0, pc, r0
    4a88:	bl	2100 <printf@plt>
    4a8c:	ldr	r3, [r4, #64]	; 0x40
    4a90:	cmp	r3, #0
    4a94:	ble	4ad8 <btbb_print_packet@@Base+0xc4>
    4a98:	add	r6, r4, #68	; 0x44
    4a9c:	mov	r5, #0
    4aa0:	mov	r8, #8
    4aa4:	ldr	r7, [pc, #136]	; 4b34 <btbb_print_packet@@Base+0x120>
    4aa8:	add	r7, pc, r7
    4aac:	mov	r1, r8
    4ab0:	mov	r0, r6
    4ab4:	bl	26bc <__assert_fail@plt+0x1cc>
    4ab8:	mov	r1, r0
    4abc:	mov	r0, r7
    4ac0:	bl	2100 <printf@plt>
    4ac4:	add	r5, r5, #1
    4ac8:	add	r6, r6, #8
    4acc:	ldr	r3, [r4, #64]	; 0x40
    4ad0:	cmp	r3, r5
    4ad4:	bgt	4aac <btbb_print_packet@@Base+0x98>
    4ad8:	mov	r0, #10
    4adc:	bl	23d0 <putchar@plt>
    4ae0:	b	4a38 <btbb_print_packet@@Base+0x24>
    4ae4:	ldrb	r1, [r4, #19]
    4ae8:	ldr	r0, [pc, #72]	; 4b38 <btbb_print_packet@@Base+0x124>
    4aec:	add	r0, pc, r0
    4af0:	bl	2100 <printf@plt>
    4af4:	ldrb	r1, [r4, #60]	; 0x3c
    4af8:	ldr	r0, [pc, #60]	; 4b3c <btbb_print_packet@@Base+0x128>
    4afc:	add	r0, pc, r0
    4b00:	bl	2100 <printf@plt>
    4b04:	ldrb	r1, [r4, #61]	; 0x3d
    4b08:	ldr	r0, [pc, #48]	; 4b40 <btbb_print_packet@@Base+0x12c>
    4b0c:	add	r0, pc, r0
    4b10:	bl	2100 <printf@plt>
    4b14:	ldr	r1, [r4, #64]	; 0x40
    4b18:	ldr	r0, [pc, #36]	; 4b44 <btbb_print_packet@@Base+0x130>
    4b1c:	add	r0, pc, r0
    4b20:	bl	2100 <printf@plt>
    4b24:	b	4a74 <btbb_print_packet@@Base+0x60>
    4b28:			; <UNDEFINED> instruction: 0x000243bc
    4b2c:	andeq	sp, r0, ip, lsl #25
    4b30:			; <UNDEFINED> instruction: 0x0000dcb4
    4b34:	andeq	lr, r0, r4, lsl #6
    4b38:	andeq	sp, r0, ip, lsl #24
    4b3c:	andeq	sp, r0, ip, lsl #24
    4b40:	andeq	sp, r0, r8, lsl #24
    4b44:	andeq	sp, r0, r4, lsl #24

00004b48 <btbb_decode@@Base>:
    4b48:	strd	r4, [sp, #-16]!
    4b4c:	str	r6, [sp, #8]
    4b50:	str	lr, [sp, #12]
    4b54:	mov	r4, r0
    4b58:	mov	r2, #0
    4b5c:	mov	r1, #7
    4b60:	bl	2130 <btbb_packet_set_flag@plt>
    4b64:	mov	r0, r4
    4b68:	bl	2340 <btbb_decode_header@plt>
    4b6c:	subs	r5, r0, #0
    4b70:	bne	4b88 <btbb_decode@@Base+0x40>
    4b74:	mov	r0, r5
    4b78:	ldrd	r4, [sp]
    4b7c:	ldr	r6, [sp, #8]
    4b80:	add	sp, sp, #12
    4b84:	pop	{pc}		; (ldr pc, [sp], #4)
    4b88:	mov	r0, r4
    4b8c:	bl	2484 <btbb_decode_payload@plt>
    4b90:	subs	r5, r0, #0
    4b94:	ble	4b74 <btbb_decode@@Base+0x2c>
    4b98:	ldr	r1, [r4, #2816]	; 0xb00
    4b9c:	mov	r2, r5
    4ba0:	and	r1, r1, #63	; 0x3f
    4ba4:	ldr	r0, [pc, #16]	; 4bbc <btbb_decode@@Base+0x74>
    4ba8:	add	r0, pc, r0
    4bac:	bl	2100 <printf@plt>
    4bb0:	mov	r0, r4
    4bb4:	bl	24a8 <btbb_print_packet@plt>
    4bb8:	b	4b74 <btbb_decode@@Base+0x2c>
    4bbc:	muleq	r0, ip, fp

00004bc0 <tun_format@@Base>:
    4bc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    4bc4:	strd	r6, [sp, #8]
    4bc8:	str	r8, [sp, #16]
    4bcc:	str	lr, [sp, #20]
    4bd0:	mov	r4, r0
    4bd4:	ldr	r0, [r0, #64]	; 0x40
    4bd8:	add	r0, r0, #9
    4bdc:	bl	22c8 <malloc@plt>
    4be0:	mov	r7, r0
    4be4:	ldr	r3, [r4, #2816]	; 0xb00
    4be8:	strb	r3, [r0]
    4bec:	lsr	r2, r3, #8
    4bf0:	strb	r2, [r0, #1]
    4bf4:	lsr	r2, r3, #16
    4bf8:	strb	r2, [r0, #2]
    4bfc:	lsr	r3, r3, #24
    4c00:	strb	r3, [r0, #3]
    4c04:	ldrb	r3, [r4, #8]
    4c08:	strb	r3, [r0, #4]
    4c0c:	mov	r1, #5
    4c10:	mov	r0, r4
    4c14:	bl	2184 <btbb_packet_get_flag@plt>
    4c18:	mov	r5, r0
    4c1c:	mov	r1, #1
    4c20:	mov	r0, r4
    4c24:	bl	2184 <btbb_packet_get_flag@plt>
    4c28:	orr	r0, r5, r0, lsl #1
    4c2c:	strb	r0, [r7, #5]
    4c30:	mov	r1, #7
    4c34:	add	r0, r4, #22
    4c38:	bl	26bc <__assert_fail@plt+0x1cc>
    4c3c:	strb	r0, [r7, #6]
    4c40:	mov	r1, #3
    4c44:	add	r0, r4, #29
    4c48:	bl	26bc <__assert_fail@plt+0x1cc>
    4c4c:	strb	r0, [r7, #7]
    4c50:	mov	r1, #8
    4c54:	add	r0, r4, #32
    4c58:	bl	26bc <__assert_fail@plt+0x1cc>
    4c5c:	strb	r0, [r7, #8]
    4c60:	ldr	r6, [r4, #64]	; 0x40
    4c64:	cmp	r6, #0
    4c68:	ble	4c9c <tun_format@@Base+0xdc>
    4c6c:	add	r4, r4, #68	; 0x44
    4c70:	add	r5, r7, #8
    4c74:	add	r6, r6, #8
    4c78:	add	r6, r7, r6
    4c7c:	mov	r8, #8
    4c80:	mov	r1, r8
    4c84:	mov	r0, r4
    4c88:	bl	26bc <__assert_fail@plt+0x1cc>
    4c8c:	strb	r0, [r5, #1]!
    4c90:	add	r4, r4, #8
    4c94:	cmp	r5, r6
    4c98:	bne	4c80 <tun_format@@Base+0xc0>
    4c9c:	mov	r0, r7
    4ca0:	ldrd	r4, [sp]
    4ca4:	ldrd	r6, [sp, #8]
    4ca8:	ldr	r8, [sp, #16]
    4cac:	add	sp, sp, #20
    4cb0:	pop	{pc}		; (ldr pc, [sp], #4)

00004cb4 <btbb_header_present@@Base>:
    4cb4:	movw	r3, #2822	; 0xb06
    4cb8:	ldrh	r3, [r0, r3]
    4cbc:	cmp	r3, #121	; 0x79
    4cc0:	bls	4d54 <btbb_header_present@@Base+0xa0>
    4cc4:	str	r4, [sp, #-8]!
    4cc8:	str	lr, [sp, #4]
    4ccc:	ldrb	r3, [r0, #2887]	; 0xb47
    4cd0:	clz	r1, r3
    4cd4:	lsr	r1, r1, #5
    4cd8:	ldrb	r2, [r0, #2888]	; 0xb48
    4cdc:	eor	r4, r2, r1
    4ce0:	ldrb	r2, [r0, #2889]	; 0xb49
    4ce4:	eor	r2, r2, r3
    4ce8:	add	r2, r4, r2
    4cec:	ldrb	r4, [r0, #2890]	; 0xb4a
    4cf0:	eor	r4, r4, r1
    4cf4:	add	r4, r4, r2
    4cf8:	ldrb	r2, [r0, #2891]	; 0xb4b
    4cfc:	eor	r3, r3, r2
    4d00:	add	r4, r3, r4
    4d04:	mov	r3, r0
    4d08:	add	r0, r0, #54	; 0x36
    4d0c:	ldrb	r1, [r3, #2892]	; 0xb4c
    4d10:	ldrb	ip, [r3, #2893]	; 0xb4d
    4d14:	ldrb	lr, [r3, #2894]	; 0xb4e
    4d18:	eor	r2, r1, ip
    4d1c:	eor	ip, ip, lr
    4d20:	orr	r2, r2, ip
    4d24:	eor	r1, r1, lr
    4d28:	orr	r2, r2, r1
    4d2c:	add	r4, r4, r2
    4d30:	add	r3, r3, #3
    4d34:	cmp	r3, r0
    4d38:	bne	4d0c <btbb_header_present@@Base+0x58>
    4d3c:	cmp	r4, #4
    4d40:	movgt	r0, #0
    4d44:	movle	r0, #1
    4d48:	ldr	r4, [sp]
    4d4c:	add	sp, sp, #4
    4d50:	pop	{pc}		; (ldr pc, [sp], #4)
    4d54:	mov	r0, #0
    4d58:	bx	lr

00004d5c <lap_from_fhs@@Base>:
    4d5c:	push	{lr}		; (str lr, [sp, #-4]!)
    4d60:	mov	r3, r0
    4d64:	add	r2, r0, #101	; 0x65
    4d68:	add	r1, r0, #125	; 0x7d
    4d6c:	mov	r0, #0
    4d70:	rsb	r3, r3, #-16777216	; 0xff000000
    4d74:	add	r3, r3, #16711680	; 0xff0000
    4d78:	add	r3, r3, #65280	; 0xff00
    4d7c:	add	r3, r3, #155	; 0x9b
    4d80:	add	ip, r3, r2
    4d84:	ldrb	lr, [r2, #1]!
    4d88:	orr	r0, r0, lr, lsl ip
    4d8c:	cmp	r2, r1
    4d90:	bne	4d80 <lap_from_fhs@@Base+0x24>
    4d94:	pop	{pc}		; (ldr pc, [sp], #4)

00004d98 <uap_from_fhs@@Base>:
    4d98:	str	r4, [sp, #-8]!
    4d9c:	str	lr, [sp, #4]
    4da0:	mov	r1, #8
    4da4:	add	r0, r0, #132	; 0x84
    4da8:	bl	26bc <__assert_fail@plt+0x1cc>
    4dac:	ldr	r4, [sp]
    4db0:	add	sp, sp, #4
    4db4:	pop	{pc}		; (ldr pc, [sp], #4)

00004db8 <nap_from_fhs@@Base>:
    4db8:	str	r4, [sp, #-8]!
    4dbc:	str	lr, [sp, #4]
    4dc0:	mov	r1, #16
    4dc4:	add	r0, r0, #140	; 0x8c
    4dc8:	bl	2704 <__assert_fail@plt+0x214>
    4dcc:	ldr	r4, [sp]
    4dd0:	add	sp, sp, #4
    4dd4:	pop	{pc}		; (ldr pc, [sp], #4)

00004dd8 <clock_from_fhs@@Base>:
    4dd8:	push	{lr}		; (str lr, [sp, #-4]!)
    4ddc:	mov	r3, r0
    4de0:	add	r2, r0, #182	; 0xb6
    4de4:	add	r1, r0, #208	; 0xd0
    4de8:	mov	r0, #0
    4dec:	rsb	r3, r3, #-16777216	; 0xff000000
    4df0:	add	r3, r3, #16711680	; 0xff0000
    4df4:	add	r3, r3, #65280	; 0xff00
    4df8:	add	r3, r3, #74	; 0x4a
    4dfc:	add	ip, r3, r2
    4e00:	ldrb	lr, [r2, #1]!
    4e04:	orr	r0, r0, lr, lsl ip
    4e08:	cmp	r2, r1
    4e0c:	bne	4dfc <clock_from_fhs@@Base+0x24>
    4e10:	pop	{pc}		; (ldr pc, [sp], #4)

00004e14 <count_bits@@Base>:
    4e14:	subs	r3, r0, #0
    4e18:	beq	4e34 <count_bits@@Base+0x20>
    4e1c:	mov	r0, #0
    4e20:	sub	r2, r3, #1
    4e24:	add	r0, r0, #1
    4e28:	ands	r3, r2, r3
    4e2c:	bne	4e20 <count_bits@@Base+0xc>
    4e30:	bx	lr
    4e34:	mov	r0, #0
    4e38:	bx	lr

00004e3c <btbb_piconet_new@@Base>:
    4e3c:	str	r4, [sp, #-8]!
    4e40:	str	lr, [sp, #4]
    4e44:	movw	r1, #5660	; 0x161c
    4e48:	mov	r0, #1
    4e4c:	bl	20ac <calloc@plt>
    4e50:	mov	r3, #1
    4e54:	str	r3, [r0]
    4e58:	ldr	r4, [sp]
    4e5c:	add	sp, sp, #4
    4e60:	pop	{pc}		; (ldr pc, [sp], #4)

00004e64 <btbb_piconet_ref@@Base>:
    4e64:	ldr	r3, [r0]
    4e68:	add	r3, r3, #1
    4e6c:	str	r3, [r0]
    4e70:	bx	lr

00004e74 <btbb_piconet_unref@@Base>:
    4e74:	ldr	r3, [r0]
    4e78:	subs	r3, r3, #1
    4e7c:	beq	4e88 <btbb_piconet_unref@@Base+0x14>
    4e80:	str	r3, [r0]
    4e84:	bx	lr
    4e88:	str	r4, [sp, #-8]!
    4e8c:	str	lr, [sp, #4]
    4e90:	bl	2148 <free@plt>
    4e94:	ldr	r4, [sp]
    4e98:	add	sp, sp, #4
    4e9c:	pop	{pc}		; (ldr pc, [sp], #4)

00004ea0 <btbb_init_survey@@Base>:
    4ea0:	ldr	r3, [pc, #16]	; 4eb8 <btbb_init_survey@@Base+0x18>
    4ea4:	add	r3, pc, r3
    4ea8:	mov	r2, #1
    4eac:	str	r2, [r3]
    4eb0:	mov	r0, #0
    4eb4:	bx	lr
    4eb8:	andeq	r4, r2, r0, lsl #6

00004ebc <btbb_piconet_set_flag@@Base>:
    4ebc:	mov	r3, #1
    4ec0:	lsl	r1, r3, r1
    4ec4:	ldr	r3, [r0, #4]
    4ec8:	cmp	r2, #0
    4ecc:	biceq	r3, r3, r1
    4ed0:	orrne	r3, r3, r1
    4ed4:	str	r3, [r0, #4]
    4ed8:	bx	lr

00004edc <btbb_init_piconet@@Base>:
    4edc:	str	r4, [sp, #-8]!
    4ee0:	str	lr, [sp, #4]
    4ee4:	str	r1, [r0, #24]
    4ee8:	mov	r2, #1
    4eec:	mov	r1, #3
    4ef0:	bl	2214 <btbb_piconet_set_flag@plt>
    4ef4:	ldr	r4, [sp]
    4ef8:	add	sp, sp, #4
    4efc:	pop	{pc}		; (ldr pc, [sp], #4)

00004f00 <btbb_piconet_get_flag@@Base>:
    4f00:	ldr	r3, [r0, #4]
    4f04:	mov	r2, #1
    4f08:	ands	r3, r3, r2, lsl r1
    4f0c:	movne	r0, r2
    4f10:	moveq	r0, #0
    4f14:	bx	lr
    4f18:	str	r4, [sp, #-8]!
    4f1c:	str	lr, [sp, #4]
    4f20:	mov	r4, r0
    4f24:	mov	r1, #9
    4f28:	bl	21f0 <btbb_piconet_get_flag@plt>
    4f2c:	cmp	r0, #0
    4f30:	bne	4fb4 <btbb_piconet_get_flag@@Base+0xb4>
    4f34:	mov	r2, #0
    4f38:	mov	r1, #10
    4f3c:	mov	r0, r4
    4f40:	bl	2214 <btbb_piconet_set_flag@plt>
    4f44:	mov	r2, #0
    4f48:	mov	r1, #9
    4f4c:	mov	r0, r4
    4f50:	bl	2214 <btbb_piconet_set_flag@plt>
    4f54:	mov	r2, #0
    4f58:	mov	r1, #2
    4f5c:	mov	r0, r4
    4f60:	bl	2214 <btbb_piconet_set_flag@plt>
    4f64:	mov	r2, #0
    4f68:	mov	r1, #4
    4f6c:	mov	r0, r4
    4f70:	bl	2214 <btbb_piconet_set_flag@plt>
    4f74:	mov	r2, #0
    4f78:	mov	r1, #5
    4f7c:	mov	r0, r4
    4f80:	bl	2214 <btbb_piconet_set_flag@plt>
    4f84:	mov	r3, #0
    4f88:	str	r3, [r4, #380]	; 0x17c
    4f8c:	mov	r1, #12
    4f90:	mov	r0, r4
    4f94:	bl	21f0 <btbb_piconet_get_flag@plt>
    4f98:	mov	r2, r0
    4f9c:	mov	r1, #11
    4fa0:	mov	r0, r4
    4fa4:	bl	2214 <btbb_piconet_set_flag@plt>
    4fa8:	ldr	r4, [sp]
    4fac:	add	sp, sp, #4
    4fb0:	pop	{pc}		; (ldr pc, [sp], #4)
    4fb4:	ldr	r0, [r4, #32]
    4fb8:	bl	2148 <free@plt>
    4fbc:	mov	r3, #0
    4fc0:	str	r3, [r4, #372]	; 0x174
    4fc4:	b	4f34 <btbb_piconet_get_flag@@Base+0x34>

00004fc8 <btbb_piconet_set_uap@@Base>:
    4fc8:	str	r4, [sp, #-8]!
    4fcc:	str	lr, [sp, #4]
    4fd0:	strb	r1, [r0, #28]
    4fd4:	mov	r2, #1
    4fd8:	mov	r1, #2
    4fdc:	bl	2214 <btbb_piconet_set_flag@plt>
    4fe0:	ldr	r4, [sp]
    4fe4:	add	sp, sp, #4
    4fe8:	pop	{pc}		; (ldr pc, [sp], #4)

00004fec <btbb_piconet_get_uap@@Base>:
    4fec:	ldrb	r0, [r0, #28]
    4ff0:	bx	lr

00004ff4 <btbb_piconet_get_lap@@Base>:
    4ff4:	ldr	r0, [r0, #24]
    4ff8:	bx	lr

00004ffc <btbb_piconet_get_nap@@Base>:
    4ffc:	ldrh	r0, [r0, #30]
    5000:	bx	lr

00005004 <btbb_piconet_get_bdaddr@@Base>:
    5004:	mov	r3, r0
    5008:	ldr	r2, [r0, #24]
    500c:	ldrb	r0, [r0, #28]
    5010:	orr	r0, r2, r0, lsl #24
    5014:	ldrh	r1, [r3, #30]
    5018:	bx	lr

0000501c <btbb_piconet_get_clk_offset@@Base>:
    501c:	add	r0, r0, #4096	; 0x1000
    5020:	ldr	r0, [r0, #1552]	; 0x610
    5024:	bx	lr

00005028 <btbb_piconet_set_clk_offset@@Base>:
    5028:	add	r0, r0, #4096	; 0x1000
    502c:	str	r1, [r0, #1552]	; 0x610
    5030:	bx	lr

00005034 <btbb_piconet_get_afh_map@@Base>:
    5034:	add	r0, r0, #12
    5038:	bx	lr

0000503c <btbb_piconet_set_channel_seen@@Base>:
    503c:	lsr	r3, r1, #3
    5040:	add	r2, r0, r3
    5044:	ldrb	ip, [r2, #12]
    5048:	and	r1, r1, #7
    504c:	asr	r2, ip, r1
    5050:	tst	r2, #1
    5054:	beq	5060 <btbb_piconet_set_channel_seen@@Base+0x24>
    5058:	mov	r0, #0
    505c:	bx	lr
    5060:	add	r2, r0, r3
    5064:	mov	r3, #1
    5068:	orr	r1, ip, r3, lsl r1
    506c:	strb	r1, [r2, #12]
    5070:	ldrb	r2, [r0, #22]
    5074:	add	r2, r2, r3
    5078:	strb	r2, [r0, #22]
    507c:	mov	r0, r3
    5080:	bx	lr

00005084 <btbb_piconet_clear_channel_seen@@Base>:
    5084:	lsr	r3, r1, #3
    5088:	add	r2, r0, r3
    508c:	ldrb	ip, [r2, #12]
    5090:	and	r1, r1, #7
    5094:	asr	r2, ip, r1
    5098:	tst	r2, #1
    509c:	bne	50a8 <btbb_piconet_clear_channel_seen@@Base+0x24>
    50a0:	mov	r0, #0
    50a4:	bx	lr
    50a8:	add	r2, r0, r3
    50ac:	mov	r3, #1
    50b0:	bic	r1, ip, r3, lsl r1
    50b4:	strb	r1, [r2, #12]
    50b8:	ldrb	r2, [r0, #22]
    50bc:	sub	r2, r2, #1
    50c0:	strb	r2, [r0, #22]
    50c4:	mov	r0, r3
    50c8:	bx	lr

000050cc <btbb_piconet_get_channel_seen@@Base>:
    50cc:	cmp	r1, #78	; 0x4e
    50d0:	bhi	50ec <btbb_piconet_get_channel_seen@@Base+0x20>
    50d4:	add	r0, r0, r1, lsr #3
    50d8:	ldrb	r0, [r0, #12]
    50dc:	and	r1, r1, #7
    50e0:	asr	r0, r0, r1
    50e4:	and	r0, r0, #1
    50e8:	bx	lr
    50ec:	mov	r0, #1
    50f0:	bx	lr

000050f4 <precalc@@Base>:
    50f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    50f8:	strd	r6, [sp, #8]
    50fc:	strd	r8, [sp, #16]
    5100:	str	sl, [sp, #24]
    5104:	str	lr, [sp, #28]
    5108:	mov	r5, r0
    510c:	mov	r4, #0
    5110:	mov	r9, r4
    5114:	mov	r7, #11
    5118:	add	r8, r0, #56	; 0x38
    511c:	movw	r6, #14933	; 0x3a55
    5120:	movt	r6, #26546	; 0x67b2
    5124:	b	5168 <precalc@@Base+0x74>
    5128:	smull	r3, sl, r6, r4
    512c:	asr	r3, r4, #31
    5130:	rsb	sl, r3, sl, asr #5
    5134:	mov	r3, #79	; 0x4f
    5138:	mls	sl, r3, sl, r4
    513c:	uxtb	r1, sl
    5140:	mov	r0, r5
    5144:	bl	21cc <btbb_piconet_get_channel_seen@plt>
    5148:	cmp	r0, #0
    514c:	beq	515c <precalc@@Base+0x68>
    5150:	add	r3, r9, #14
    5154:	str	sl, [r5, r3, lsl #2]
    5158:	add	r9, r9, #1
    515c:	add	r4, r4, #2
    5160:	cmp	r4, #158	; 0x9e
    5164:	beq	5198 <precalc@@Base+0xa4>
    5168:	mov	r1, r7
    516c:	mov	r0, r5
    5170:	bl	21f0 <btbb_piconet_get_flag@plt>
    5174:	cmp	r0, #0
    5178:	bne	5128 <precalc@@Base+0x34>
    517c:	smull	r2, r3, r6, r4
    5180:	asr	r2, r4, #31
    5184:	rsb	r3, r2, r3, asr #5
    5188:	mov	r2, #79	; 0x4f
    518c:	mls	r3, r2, r3, r4
    5190:	str	r3, [r8, r4, lsl #1]
    5194:	b	515c <precalc@@Base+0x68>
    5198:	ldrd	r4, [sp]
    519c:	ldrd	r6, [sp, #8]
    51a0:	ldrd	r8, [sp, #16]
    51a4:	ldr	sl, [sp, #24]
    51a8:	add	sp, sp, #28
    51ac:	pop	{pc}		; (ldr pc, [sp], #4)

000051b0 <address_precalc@@Base>:
    51b0:	strd	r4, [sp, #-12]!
    51b4:	str	lr, [sp, #8]
    51b8:	ubfx	r3, r0, #23, #5
    51bc:	str	r3, [r1, #44]	; 0x2c
    51c0:	ubfx	r3, r0, #19, #4
    51c4:	str	r3, [r1, #36]	; 0x24
    51c8:	asr	r5, r0, #4
    51cc:	asr	r4, r0, #3
    51d0:	asr	lr, r0, #2
    51d4:	asr	ip, r0, #1
    51d8:	and	r2, r5, #16
    51dc:	and	r3, r4, #8
    51e0:	orr	r2, r2, r3
    51e4:	and	r3, lr, #4
    51e8:	add	r2, r2, r3
    51ec:	and	r3, ip, #2
    51f0:	add	r2, r2, r3
    51f4:	and	r3, r0, #1
    51f8:	add	r2, r2, r3
    51fc:	str	r2, [r1, #48]	; 0x30
    5200:	ubfx	r3, r0, #10, #9
    5204:	str	r3, [r1, #52]	; 0x34
    5208:	asr	r3, r0, #7
    520c:	and	r3, r3, #64	; 0x40
    5210:	asr	r2, r0, #6
    5214:	and	r2, r2, #32
    5218:	orr	r3, r3, r2
    521c:	asr	r0, r0, #5
    5220:	and	r0, r0, #16
    5224:	add	r3, r3, r0
    5228:	and	r5, r5, #8
    522c:	add	r3, r3, r5
    5230:	and	r4, r4, #4
    5234:	add	r3, r3, r4
    5238:	and	lr, lr, #2
    523c:	add	r3, r3, lr
    5240:	and	ip, ip, #1
    5244:	add	r3, r3, ip
    5248:	str	r3, [r1, #40]	; 0x28
    524c:	ldrd	r4, [sp]
    5250:	add	sp, sp, #8
    5254:	pop	{pc}		; (ldr pc, [sp], #4)

00005258 <perm5@@Base>:
    5258:	strd	r4, [sp, #-16]!
    525c:	str	r6, [sp, #8]
    5260:	str	lr, [sp, #12]
    5264:	sub	sp, sp, #192	; 0xc0
    5268:	ldr	r3, [pc, #356]	; 53d4 <perm5@@Base+0x17c>
    526c:	add	r3, pc, r3
    5270:	ldrd	r4, [r3]
    5274:	strd	r4, [sp, #60]	; 0x3c
    5278:	ldrd	r4, [r3, #8]
    527c:	strd	r4, [sp, #68]	; 0x44
    5280:	ldrd	r4, [r3, #16]
    5284:	strd	r4, [sp, #76]	; 0x4c
    5288:	ldrd	r4, [r3, #24]
    528c:	strd	r4, [sp, #84]	; 0x54
    5290:	ldrd	r4, [r3, #32]
    5294:	strd	r4, [sp, #92]	; 0x5c
    5298:	ldrd	r4, [r3, #40]	; 0x28
    529c:	strd	r4, [sp, #100]	; 0x64
    52a0:	ldrd	r4, [r3, #48]	; 0x30
    52a4:	strd	r4, [sp, #108]	; 0x6c
    52a8:	ldrd	r4, [r3, #56]	; 0x38
    52ac:	strd	r4, [sp, #4]
    52b0:	ldrd	r4, [r3, #64]	; 0x40
    52b4:	strd	r4, [sp, #12]
    52b8:	ldrd	r4, [r3, #72]	; 0x48
    52bc:	strd	r4, [sp, #20]
    52c0:	ldrd	r4, [r3, #80]	; 0x50
    52c4:	strd	r4, [sp, #28]
    52c8:	ldrd	r4, [r3, #88]	; 0x58
    52cc:	strd	r4, [sp, #36]	; 0x24
    52d0:	ldrd	r4, [r3, #96]	; 0x60
    52d4:	strd	r4, [sp, #44]	; 0x2c
    52d8:	ldrd	r4, [r3, #104]	; 0x68
    52dc:	strd	r4, [sp, #52]	; 0x34
    52e0:	add	lr, sp, #112	; 0x70
    52e4:	mov	r3, #0
    52e8:	asr	ip, r2, r3
    52ec:	and	ip, ip, #1
    52f0:	str	ip, [lr, #4]!
    52f4:	add	r3, r3, #1
    52f8:	cmp	r3, #9
    52fc:	bne	52e8 <perm5@@Base+0x90>
    5300:	add	ip, sp, #148	; 0x94
    5304:	mov	r3, #0
    5308:	asr	r2, r1, r3
    530c:	and	r2, r2, #1
    5310:	str	r2, [ip, #4]!
    5314:	add	r3, r3, #1
    5318:	cmp	r3, #5
    531c:	bne	5308 <perm5@@Base+0xb0>
    5320:	add	ip, sp, #172	; 0xac
    5324:	mov	r1, ip
    5328:	mov	r3, #0
    532c:	asr	r2, r0, r3
    5330:	and	r2, r2, #1
    5334:	str	r2, [r1], #4
    5338:	add	r3, r3, #1
    533c:	cmp	r3, #5
    5340:	bne	532c <perm5@@Base+0xd4>
    5344:	add	r0, sp, #168	; 0xa8
    5348:	mov	r3, #14
    534c:	add	r6, sp, #60	; 0x3c
    5350:	add	r5, sp, #4
    5354:	b	5360 <perm5@@Base+0x108>
    5358:	subs	r3, r3, #1
    535c:	beq	53a4 <perm5@@Base+0x14c>
    5360:	ldr	r2, [r0], #-4
    5364:	cmp	r2, #0
    5368:	beq	5358 <perm5@@Base+0x100>
    536c:	lsl	r2, r3, #2
    5370:	add	r1, r2, r6
    5374:	ldr	r1, [r1, #-4]
    5378:	add	lr, sp, #192	; 0xc0
    537c:	add	r1, lr, r1, lsl #2
    5380:	ldr	lr, [r1, #-20]	; 0xffffffec
    5384:	add	r2, r2, r5
    5388:	ldr	r2, [r2, #-4]
    538c:	add	r4, sp, #192	; 0xc0
    5390:	add	r2, r4, r2, lsl #2
    5394:	ldr	r4, [r2, #-20]	; 0xffffffec
    5398:	str	r4, [r1, #-20]	; 0xffffffec
    539c:	str	lr, [r2, #-20]	; 0xffffffec
    53a0:	b	5358 <perm5@@Base+0x100>
    53a4:	mov	r0, #0
    53a8:	mov	r3, r0
    53ac:	ldr	r2, [ip], #4
    53b0:	add	r0, r0, r2, lsl r3
    53b4:	add	r3, r3, #1
    53b8:	cmp	r3, #5
    53bc:	bne	53ac <perm5@@Base+0x154>
    53c0:	add	sp, sp, #192	; 0xc0
    53c4:	ldrd	r4, [sp]
    53c8:	ldr	r6, [sp, #8]
    53cc:	add	sp, sp, #12
    53d0:	pop	{pc}		; (ldr pc, [sp], #4)
    53d4:	andeq	sp, r0, r4, lsr #11

000053d8 <perm_table_init@@Base>:
    53d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    53dc:	strd	r6, [sp, #8]
    53e0:	strd	r8, [sp, #16]
    53e4:	strd	sl, [sp, #24]
    53e8:	str	lr, [sp, #32]
    53ec:	sub	sp, sp, #4
    53f0:	ldr	r3, [pc, #140]	; 5484 <perm_table_init@@Base+0xac>
    53f4:	add	r3, pc, r3
    53f8:	ldr	r2, [pc, #136]	; 5488 <perm_table_init@@Base+0xb0>
    53fc:	ldr	sl, [r3, r2]
    5400:	rsb	fp, sl, #0
    5404:	rsb	sl, sl, #-16777216	; 0xff000000
    5408:	add	sl, sl, #16252928	; 0xf80000
    540c:	mov	r8, #0
    5410:	rsb	r6, fp, #508	; 0x1fc
    5414:	add	r6, r6, #3
    5418:	mov	r9, fp
    541c:	mov	r5, #0
    5420:	mvn	r4, r9
    5424:	add	r7, r9, #1
    5428:	add	r2, r7, r4
    542c:	mov	r1, r5
    5430:	mov	r0, r8
    5434:	bl	2430 <perm5@plt>
    5438:	strb	r0, [r4, #1]!
    543c:	cmp	r4, r6
    5440:	bne	5428 <perm_table_init@@Base+0x50>
    5444:	add	r5, r5, #1
    5448:	sub	r9, r9, #512	; 0x200
    544c:	add	r6, r6, #512	; 0x200
    5450:	cmp	r5, #32
    5454:	bne	5420 <perm_table_init@@Base+0x48>
    5458:	add	r8, r8, #1
    545c:	sub	fp, fp, #16384	; 0x4000
    5460:	cmp	fp, sl
    5464:	bne	5410 <perm_table_init@@Base+0x38>
    5468:	add	sp, sp, #4
    546c:	ldrd	r4, [sp]
    5470:	ldrd	r6, [sp, #8]
    5474:	ldrd	r8, [sp, #16]
    5478:	ldrd	sl, [sp, #24]
    547c:	add	sp, sp, #32
    5480:	pop	{pc}		; (ldr pc, [sp], #4)
    5484:	andeq	r3, r2, r4, lsl #24
    5488:	andeq	r0, r0, r8, lsl #3

0000548c <fast_perm@@Base>:
    548c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5490:	strd	r6, [sp, #8]
    5494:	str	r8, [sp, #16]
    5498:	str	lr, [sp, #20]
    549c:	mov	r7, r0
    54a0:	mov	r5, r1
    54a4:	mov	r6, r2
    54a8:	ldr	r4, [pc, #84]	; 5504 <fast_perm@@Base+0x78>
    54ac:	add	r4, pc, r4
    54b0:	ldr	r3, [pc, #80]	; 5508 <fast_perm@@Base+0x7c>
    54b4:	ldr	r3, [r4, r3]
    54b8:	ldr	r3, [r3]
    54bc:	cmp	r3, #0
    54c0:	beq	54ec <fast_perm@@Base+0x60>
    54c4:	ldr	r3, [pc, #64]	; 550c <fast_perm@@Base+0x80>
    54c8:	ldr	r1, [r4, r3]
    54cc:	add	r5, r5, r7, lsl #5
    54d0:	add	r1, r1, r5, lsl #9
    54d4:	ldrb	r0, [r1, r6]
    54d8:	ldrd	r4, [sp]
    54dc:	ldrd	r6, [sp, #8]
    54e0:	ldr	r8, [sp, #16]
    54e4:	add	sp, sp, #20
    54e8:	pop	{pc}		; (ldr pc, [sp], #4)
    54ec:	bl	2244 <perm_table_init@plt>
    54f0:	ldr	r3, [pc, #16]	; 5508 <fast_perm@@Base+0x7c>
    54f4:	ldr	r3, [r4, r3]
    54f8:	mov	r2, #1
    54fc:	str	r2, [r3]
    5500:	b	54c4 <fast_perm@@Base+0x38>
    5504:	andeq	r3, r2, ip, asr #22
    5508:	andeq	r0, r0, ip, lsl #3
    550c:	andeq	r0, r0, r8, lsl #3

00005510 <gen_hop_pattern@@Base>:
    5510:	strd	r4, [sp, #-36]!	; 0xffffffdc
    5514:	strd	r6, [sp, #8]
    5518:	strd	r8, [sp, #16]
    551c:	strd	sl, [sp, #24]
    5520:	str	lr, [sp, #32]
    5524:	sub	sp, sp, #60	; 0x3c
    5528:	mov	r6, r0
    552c:	ldr	r0, [pc, #768]	; 5834 <gen_hop_pattern@@Base+0x324>
    5530:	add	r0, pc, r0
    5534:	bl	22bc <puts@plt>
    5538:	mov	r0, #134217728	; 0x8000000
    553c:	bl	22c8 <malloc@plt>
    5540:	str	r0, [r6, #372]	; 0x174
    5544:	mov	r0, r6
    5548:	bl	2478 <precalc@plt>
    554c:	ldrb	r3, [r6, #28]
    5550:	ldr	r0, [r6, #24]
    5554:	orr	r0, r0, r3, lsl #24
    5558:	mov	r1, r6
    555c:	bic	r0, r0, #-268435456	; 0xf0000000
    5560:	bl	23b8 <address_precalc@plt>
    5564:	mov	r3, #0
    5568:	str	r3, [sp, #8]
    556c:	mov	sl, r3
    5570:	str	r3, [sp, #24]
    5574:	movw	fp, #29865	; 0x74a9
    5578:	movt	fp, #53092	; 0xcf64
    557c:	str	fp, [sp, #28]
    5580:	mov	fp, r6
    5584:	b	57f0 <gen_hop_pattern@@Base+0x2e0>
    5588:	ldr	r2, [fp, #372]	; 0x174
    558c:	ldr	r3, [fp, #40]	; 0x28
    5590:	add	r5, r5, r3
    5594:	add	r3, r5, sl
    5598:	ldr	r1, [sp, #28]
    559c:	umull	r1, r5, r1, r3
    55a0:	lsr	r5, r5, #6
    55a4:	mov	r1, #79	; 0x4f
    55a8:	mls	r5, r1, r5, r3
    55ac:	add	r5, r5, #14
    55b0:	ldr	r3, [fp, r5, lsl #2]
    55b4:	strb	r3, [r2, r4]
    55b8:	b	5678 <gen_hop_pattern@@Base+0x168>
    55bc:	ldr	r2, [fp, #372]	; 0x174
    55c0:	add	r2, r2, r4
    55c4:	ldr	r3, [fp, #40]	; 0x28
    55c8:	add	r5, r5, r3
    55cc:	add	r3, sl, #32
    55d0:	add	r3, r5, r3
    55d4:	ldr	r1, [sp, #28]
    55d8:	umull	r1, r5, r1, r3
    55dc:	lsr	r5, r5, #6
    55e0:	mov	r1, #79	; 0x4f
    55e4:	mls	r5, r1, r5, r3
    55e8:	add	r5, r5, #14
    55ec:	ldr	r3, [fp, r5, lsl #2]
    55f0:	strb	r3, [r2, #1]
    55f4:	add	r4, r4, #2
    55f8:	add	r7, r7, #1
    55fc:	ldr	r3, [sp]
    5600:	add	r3, r3, #64	; 0x40
    5604:	cmp	r4, r3
    5608:	beq	56d8 <gen_hop_pattern@@Base+0x1c8>
    560c:	rsbs	r3, r7, #0
    5610:	and	r6, r7, #31
    5614:	and	r3, r3, #31
    5618:	rsbpl	r6, r3, #0
    561c:	ldr	r3, [fp, #36]	; 0x24
    5620:	eor	r6, r6, r3
    5624:	ldr	r2, [sp, #32]
    5628:	ldr	r1, [sp, #40]	; 0x28
    562c:	mov	r0, r6
    5630:	bl	24b4 <fast_perm@plt>
    5634:	mov	r5, r0
    5638:	mov	r1, #11
    563c:	mov	r0, fp
    5640:	bl	21f0 <btbb_piconet_get_flag@plt>
    5644:	cmp	r0, #0
    5648:	beq	5588 <gen_hop_pattern@@Base+0x78>
    564c:	ldr	r2, [fp, #372]	; 0x174
    5650:	ldr	r3, [fp, #40]	; 0x28
    5654:	add	r5, r5, r3
    5658:	ldr	r3, [sp, #8]
    565c:	add	r5, r5, r3
    5660:	ldrb	r1, [fp, #22]
    5664:	udiv	r3, r5, r1
    5668:	mls	r5, r1, r3, r5
    566c:	add	r5, r5, #14
    5670:	ldr	r3, [fp, r5, lsl #2]
    5674:	strb	r3, [r2, r4]
    5678:	ldr	r2, [sp, #32]
    567c:	ldr	r1, [sp, #44]	; 0x2c
    5680:	mov	r0, r6
    5684:	bl	24b4 <fast_perm@plt>
    5688:	mov	r5, r0
    568c:	mov	r1, #11
    5690:	mov	r0, fp
    5694:	bl	21f0 <btbb_piconet_get_flag@plt>
    5698:	cmp	r0, #0
    569c:	beq	55bc <gen_hop_pattern@@Base+0xac>
    56a0:	ldr	r2, [fp, #372]	; 0x174
    56a4:	add	r2, r2, r4
    56a8:	ldr	r3, [fp, #40]	; 0x28
    56ac:	add	r5, r5, r3
    56b0:	ldr	r3, [sp, #8]
    56b4:	add	r3, r3, #32
    56b8:	add	r5, r5, r3
    56bc:	ldrb	r1, [fp, #22]
    56c0:	udiv	r3, r5, r1
    56c4:	mls	r5, r1, r3, r5
    56c8:	add	r5, r5, #14
    56cc:	ldr	r3, [fp, r5, lsl #2]
    56d0:	strb	r3, [r2, #1]
    56d4:	b	55f4 <gen_hop_pattern@@Base+0xe4>
    56d8:	ldr	r3, [sp]
    56dc:	add	r3, r3, #64	; 0x40
    56e0:	str	r3, [sp]
    56e4:	add	r9, r9, #16
    56e8:	ldr	r3, [sp, #28]
    56ec:	umull	r3, sl, r3, r9
    56f0:	lsr	sl, sl, #6
    56f4:	mov	r3, #79	; 0x4f
    56f8:	mls	sl, r3, sl, r9
    56fc:	ldrb	r3, [fp, #22]
    5700:	udiv	r2, sl, r3
    5704:	mls	r3, r3, r2, sl
    5708:	str	r3, [sp, #8]
    570c:	add	r8, r8, #1
    5710:	cmp	r8, #512	; 0x200
    5714:	beq	5730 <gen_hop_pattern@@Base+0x220>
    5718:	ldr	r3, [fp, #52]	; 0x34
    571c:	eor	r3, r8, r3
    5720:	str	r3, [sp, #32]
    5724:	ldr	r7, [sp, #36]	; 0x24
    5728:	ldr	r4, [sp]
    572c:	b	560c <gen_hop_pattern@@Base+0xfc>
    5730:	ldr	r9, [sp, #52]	; 0x34
    5734:	ldr	r3, [sp, #4]
    5738:	add	r3, r3, #32768	; 0x8000
    573c:	str	r3, [sp, #4]
    5740:	ldr	r3, [sp, #12]
    5744:	add	r3, r3, #8192	; 0x2000
    5748:	str	r3, [sp, #12]
    574c:	add	r9, r9, #1
    5750:	cmp	r9, #32
    5754:	beq	5788 <gen_hop_pattern@@Base+0x278>
    5758:	ldr	r3, [fp, #48]	; 0x30
    575c:	eor	r3, r9, r3
    5760:	str	r3, [sp, #40]	; 0x28
    5764:	eor	r3, r3, #31
    5768:	str	r3, [sp, #44]	; 0x2c
    576c:	ldr	r3, [sp, #4]
    5770:	str	r3, [sp]
    5774:	ldr	r3, [sp, #12]
    5778:	mov	r8, #0
    577c:	str	r9, [sp, #52]	; 0x34
    5780:	mov	r9, r3
    5784:	b	5718 <gen_hop_pattern@@Base+0x208>
    5788:	ldr	r9, [sp, #48]	; 0x30
    578c:	ldr	r3, [sp, #20]
    5790:	add	r3, r3, #1048576	; 0x100000
    5794:	str	r3, [sp, #20]
    5798:	ldr	r3, [sp, #16]
    579c:	add	r3, r3, #262144	; 0x40000
    57a0:	str	r3, [sp, #16]
    57a4:	add	r9, r9, #1
    57a8:	cmp	r9, #32
    57ac:	beq	57dc <gen_hop_pattern@@Base+0x2cc>
    57b0:	ldr	r3, [fp, #44]	; 0x2c
    57b4:	eor	r3, r9, r3
    57b8:	str	r3, [sp, #36]	; 0x24
    57bc:	ldr	r3, [sp, #20]
    57c0:	str	r3, [sp, #4]
    57c4:	ldr	r3, [sp, #16]
    57c8:	str	r3, [sp, #12]
    57cc:	mov	r6, #0
    57d0:	str	r9, [sp, #48]	; 0x30
    57d4:	mov	r9, r6
    57d8:	b	5758 <gen_hop_pattern@@Base+0x248>
    57dc:	ldr	r3, [sp, #24]
    57e0:	add	r3, r3, #8388608	; 0x800000
    57e4:	str	r3, [sp, #24]
    57e8:	cmp	r3, #33554432	; 0x2000000
    57ec:	beq	580c <gen_hop_pattern@@Base+0x2fc>
    57f0:	ldr	r3, [sp, #24]
    57f4:	lsl	r2, r3, #2
    57f8:	str	r2, [sp, #20]
    57fc:	str	r3, [sp, #16]
    5800:	mov	r6, #0
    5804:	mov	r9, r6
    5808:	b	57b0 <gen_hop_pattern@@Base+0x2a0>
    580c:	ldr	r0, [pc, #36]	; 5838 <gen_hop_pattern@@Base+0x328>
    5810:	add	r0, pc, r0
    5814:	bl	22bc <puts@plt>
    5818:	add	sp, sp, #60	; 0x3c
    581c:	ldrd	r4, [sp]
    5820:	ldrd	r6, [sp, #8]
    5824:	ldrd	r8, [sp, #16]
    5828:	ldrd	sl, [sp, #24]
    582c:	add	sp, sp, #32
    5830:	pop	{pc}		; (ldr pc, [sp], #4)
    5834:	andeq	sp, r0, r0, asr r3
    5838:	muleq	r0, r8, r0

0000583c <get_hop_pattern@@Base>:
    583c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5840:	strd	r6, [sp, #8]
    5844:	strd	r8, [sp, #16]
    5848:	str	sl, [sp, #24]
    584c:	str	lr, [sp, #28]
    5850:	sub	sp, sp, #8
    5854:	mov	r6, r0
    5858:	mov	r1, #11
    585c:	bl	21f0 <btbb_piconet_get_flag@plt>
    5860:	ldrb	r8, [r6, #22]
    5864:	ldr	r5, [r6, #24]
    5868:	ldrb	r3, [r6, #28]
    586c:	orr	r5, r5, r3, lsl #24
    5870:	orr	r7, r8, r0, lsl #7
    5874:	str	r5, [sp]
    5878:	str	r7, [sp, #4]
    587c:	ldr	r3, [pc, #1400]	; 5dfc <get_hop_pattern@@Base+0x5c0>
    5880:	add	r3, pc, r3
    5884:	ldr	r1, [r3, #4]
    5888:	cmp	r1, #0
    588c:	beq	59d4 <get_hop_pattern@@Base+0x198>
    5890:	bic	r2, r5, #16711680	; 0xff0000
    5894:	bic	r2, r2, #65280	; 0xff00
    5898:	movw	r3, #16653	; 0x410d
    589c:	movt	r3, #274	; 0x112
    58a0:	add	r3, r2, r3
    58a4:	and	r2, r5, #16711680	; 0xff0000
    58a8:	add	r3, r3, r2
    58ac:	and	r2, r5, #65280	; 0xff00
    58b0:	add	r3, r3, r2
    58b4:	movw	r0, #63341	; 0xf76d
    58b8:	movt	r0, #7
    58bc:	eor	r0, r0, r3
    58c0:	movw	r2, #47814	; 0xbac6
    58c4:	movt	r2, #40777	; 0x9f49
    58c8:	sub	r2, r2, r0
    58cc:	eor	r2, r2, r0, lsl #8
    58d0:	movw	r3, #48883	; 0xbef3
    58d4:	movt	r3, #65261	; 0xfeed
    58d8:	sub	r3, r3, r0
    58dc:	sub	r3, r3, r2
    58e0:	eor	r3, r3, r2, lsr #13
    58e4:	sub	r0, r0, r2
    58e8:	sub	r0, r0, r3
    58ec:	eor	r0, r0, r3, lsr #12
    58f0:	sub	r2, r2, r3
    58f4:	sub	r2, r2, r0
    58f8:	eor	r2, r2, r0, lsl #16
    58fc:	sub	r3, r3, r0
    5900:	sub	r3, r3, r2
    5904:	eor	r3, r3, r2, lsr #5
    5908:	sub	r0, r0, r2
    590c:	sub	r0, r0, r3
    5910:	eor	r0, r0, r3, lsr #3
    5914:	sub	r2, r2, r3
    5918:	sub	r2, r2, r0
    591c:	eor	r2, r2, r0, lsl #10
    5920:	sub	r3, r3, r0
    5924:	sub	r3, r3, r2
    5928:	ldr	r0, [r1, #12]
    592c:	ldr	r1, [r0, #4]
    5930:	sub	r1, r1, #1
    5934:	eor	r3, r3, r2, lsr #15
    5938:	and	r3, r3, r1
    593c:	ldr	r2, [r0]
    5940:	add	r3, r3, r3, lsl #1
    5944:	ldr	r3, [r2, r3, lsl #2]
    5948:	cmp	r3, #0
    594c:	beq	59d4 <get_hop_pattern@@Base+0x198>
    5950:	ldr	r8, [r0, #20]
    5954:	rsb	r8, r8, #0
    5958:	adds	r4, r3, r8
    595c:	beq	59d4 <get_hop_pattern@@Base+0x198>
    5960:	mov	sl, sp
    5964:	mov	r9, #4
    5968:	b	5980 <get_hop_pattern@@Base+0x144>
    596c:	ldr	r3, [r4, #28]
    5970:	cmp	r3, #0
    5974:	beq	59d4 <get_hop_pattern@@Base+0x198>
    5978:	adds	r4, r3, r8
    597c:	beq	59d4 <get_hop_pattern@@Base+0x198>
    5980:	ldr	r3, [r4, #36]	; 0x24
    5984:	cmp	r3, #4
    5988:	bne	596c <get_hop_pattern@@Base+0x130>
    598c:	mov	r2, r9
    5990:	mov	r1, sl
    5994:	ldr	r0, [r4, #32]
    5998:	bl	21b4 <memcmp@plt>
    599c:	cmp	r0, #0
    59a0:	bne	596c <get_hop_pattern@@Base+0x130>
    59a4:	ldr	r0, [pc, #1108]	; 5e00 <get_hop_pattern@@Base+0x5c4>
    59a8:	add	r0, pc, r0
    59ac:	bl	22bc <puts@plt>
    59b0:	ldr	r3, [r4, #8]
    59b4:	str	r3, [r6, #372]	; 0x174
    59b8:	add	sp, sp, #8
    59bc:	ldrd	r4, [sp]
    59c0:	ldrd	r6, [sp, #8]
    59c4:	ldrd	r8, [sp, #16]
    59c8:	ldr	sl, [sp, #24]
    59cc:	add	sp, sp, #28
    59d0:	pop	{pc}		; (ldr pc, [sp], #4)
    59d4:	mov	r0, r6
    59d8:	bl	20d0 <gen_hop_pattern@plt>
    59dc:	mov	r0, #48	; 0x30
    59e0:	bl	22c8 <malloc@plt>
    59e4:	mov	r4, r0
    59e8:	str	r5, [r0]
    59ec:	str	r7, [r0, #4]
    59f0:	ldr	r3, [r6, #372]	; 0x174
    59f4:	str	r3, [r0, #8]
    59f8:	mov	r3, #0
    59fc:	str	r3, [r0, #20]
    5a00:	str	r0, [r4, #32]
    5a04:	mov	r3, #4
    5a08:	str	r3, [r0, #36]	; 0x24
    5a0c:	ldr	r3, [pc, #1008]	; 5e04 <get_hop_pattern@@Base+0x5c8>
    5a10:	add	r3, pc, r3
    5a14:	ldr	r3, [r3, #4]
    5a18:	cmp	r3, #0
    5a1c:	beq	5c38 <get_hop_pattern@@Base+0x3fc>
    5a20:	ldr	r2, [r3, #12]
    5a24:	ldr	r2, [r2, #16]
    5a28:	str	r0, [r2, #8]
    5a2c:	ldr	r1, [r3, #12]
    5a30:	ldr	r2, [r1, #16]
    5a34:	ldr	r1, [r1, #20]
    5a38:	sub	r2, r2, r1
    5a3c:	str	r2, [r0, #16]
    5a40:	ldr	r3, [r3, #12]
    5a44:	add	r2, r0, #12
    5a48:	str	r2, [r3, #16]
    5a4c:	ldr	r3, [pc, #948]	; 5e08 <get_hop_pattern@@Base+0x5cc>
    5a50:	add	r3, pc, r3
    5a54:	ldr	r1, [r3, #4]
    5a58:	ldr	r2, [r1, #12]
    5a5c:	ldr	r3, [r2, #12]
    5a60:	add	r3, r3, #1
    5a64:	str	r3, [r2, #12]
    5a68:	ldr	r3, [r1, #12]
    5a6c:	str	r3, [r4, #12]
    5a70:	ldrb	r2, [r4, #3]
    5a74:	ldrb	r0, [r4]
    5a78:	movw	r3, #16653	; 0x410d
    5a7c:	movt	r3, #274	; 0x112
    5a80:	add	r3, r0, r3
    5a84:	add	r3, r3, r2, lsl #24
    5a88:	ldrb	r2, [r4, #2]
    5a8c:	add	r3, r3, r2, lsl #16
    5a90:	ldrb	r2, [r4, #1]
    5a94:	add	r3, r3, r2, lsl #8
    5a98:	movw	r0, #63341	; 0xf76d
    5a9c:	movt	r0, #7
    5aa0:	eor	r0, r0, r3
    5aa4:	movw	r2, #47814	; 0xbac6
    5aa8:	movt	r2, #40777	; 0x9f49
    5aac:	sub	r2, r2, r0
    5ab0:	eor	r2, r2, r0, lsl #8
    5ab4:	movw	r3, #48883	; 0xbef3
    5ab8:	movt	r3, #65261	; 0xfeed
    5abc:	sub	r3, r3, r0
    5ac0:	sub	r3, r3, r2
    5ac4:	eor	r3, r3, r2, lsr #13
    5ac8:	sub	r0, r0, r2
    5acc:	sub	r0, r0, r3
    5ad0:	eor	r0, r0, r3, lsr #12
    5ad4:	sub	r2, r2, r3
    5ad8:	sub	r2, r2, r0
    5adc:	eor	r2, r2, r0, lsl #16
    5ae0:	sub	r3, r3, r0
    5ae4:	sub	r3, r3, r2
    5ae8:	eor	r3, r3, r2, lsr #5
    5aec:	sub	r0, r0, r2
    5af0:	sub	r0, r0, r3
    5af4:	eor	r0, r0, r3, lsr #3
    5af8:	sub	r2, r2, r3
    5afc:	sub	r2, r2, r0
    5b00:	eor	r2, r2, r0, lsl #10
    5b04:	sub	r3, r3, r0
    5b08:	sub	r3, r3, r2
    5b0c:	eor	r3, r3, r2, lsr #15
    5b10:	str	r3, [r4, #40]	; 0x28
    5b14:	ldr	r0, [r1, #12]
    5b18:	ldr	r2, [r0, #4]
    5b1c:	sub	r2, r2, #1
    5b20:	and	r3, r3, r2
    5b24:	add	r3, r3, r3, lsl #1
    5b28:	lsl	r3, r3, #2
    5b2c:	ldr	r2, [r0]
    5b30:	add	r2, r2, r3
    5b34:	ldr	r0, [r2, #4]
    5b38:	add	r0, r0, #1
    5b3c:	str	r0, [r2, #4]
    5b40:	ldr	r2, [r1, #12]
    5b44:	ldr	r2, [r2]
    5b48:	ldr	r2, [r2, r3]
    5b4c:	str	r2, [r4, #28]
    5b50:	mov	r2, #0
    5b54:	str	r2, [r4, #24]
    5b58:	ldr	r2, [r1, #12]
    5b5c:	ldr	r2, [r2]
    5b60:	ldr	r2, [r2, r3]
    5b64:	cmp	r2, #0
    5b68:	addne	r0, r4, #12
    5b6c:	strne	r0, [r2, #12]
    5b70:	ldr	r2, [r1, #12]
    5b74:	ldr	r2, [r2]
    5b78:	add	r0, r4, #12
    5b7c:	str	r0, [r2, r3]
    5b80:	ldr	r2, [r1, #12]
    5b84:	ldr	r2, [r2]
    5b88:	add	r3, r2, r3
    5b8c:	ldr	r2, [r3, #8]
    5b90:	add	r2, r2, #1
    5b94:	add	r2, r2, r2, lsl #2
    5b98:	ldr	r3, [r3, #4]
    5b9c:	cmp	r3, r2, lsl #1
    5ba0:	bcc	59b8 <get_hop_pattern@@Base+0x17c>
    5ba4:	ldr	r6, [r4, #12]
    5ba8:	ldr	r3, [r6, #36]	; 0x24
    5bac:	cmp	r3, #1
    5bb0:	beq	59b8 <get_hop_pattern@@Base+0x17c>
    5bb4:	ldr	r7, [r6, #4]
    5bb8:	add	r7, r7, r7, lsl #1
    5bbc:	lsl	r7, r7, #3
    5bc0:	mov	r0, r7
    5bc4:	bl	22c8 <malloc@plt>
    5bc8:	subs	r5, r0, #0
    5bcc:	beq	5cdc <get_hop_pattern@@Base+0x4a0>
    5bd0:	mov	r2, r7
    5bd4:	mov	r1, #0
    5bd8:	mov	r0, r5
    5bdc:	bl	23c4 <memset@plt>
    5be0:	ldr	r1, [r6, #12]
    5be4:	ldr	r3, [r6, #4]
    5be8:	lsl	r3, r3, #1
    5bec:	sub	r3, r3, #1
    5bf0:	tst	r3, r1
    5bf4:	movne	r3, #1
    5bf8:	moveq	r3, #0
    5bfc:	ldr	r2, [r6, #8]
    5c00:	add	r2, r2, #1
    5c04:	add	r3, r3, r1, lsr r2
    5c08:	str	r3, [r6, #24]
    5c0c:	ldr	r3, [r4, #12]
    5c10:	mov	r2, #0
    5c14:	str	r2, [r3, #28]
    5c18:	ldr	r3, [r4, #12]
    5c1c:	ldr	r2, [r3, #4]
    5c20:	cmp	r2, #0
    5c24:	beq	5d94 <get_hop_pattern@@Base+0x558>
    5c28:	mov	r6, #0
    5c2c:	mov	r7, r6
    5c30:	mov	lr, r6
    5c34:	b	5d80 <get_hop_pattern@@Base+0x544>
    5c38:	ldr	r3, [pc, #460]	; 5e0c <get_hop_pattern@@Base+0x5d0>
    5c3c:	add	r3, pc, r3
    5c40:	str	r0, [r3, #4]
    5c44:	mov	r3, #0
    5c48:	str	r3, [r0, #16]
    5c4c:	mov	r0, #44	; 0x2c
    5c50:	bl	22c8 <malloc@plt>
    5c54:	mov	r5, r0
    5c58:	str	r0, [r4, #12]
    5c5c:	cmp	r0, #0
    5c60:	beq	5ccc <get_hop_pattern@@Base+0x490>
    5c64:	mov	r0, #0
    5c68:	mov	r1, #0
    5c6c:	strd	r0, [r5, #12]
    5c70:	strd	r0, [r5, #20]
    5c74:	strd	r0, [r5, #28]
    5c78:	strd	r0, [r5, #36]	; 0x24
    5c7c:	add	r3, r4, #12
    5c80:	str	r3, [r5, #16]
    5c84:	mov	r3, #32
    5c88:	str	r3, [r5, #4]
    5c8c:	mov	r3, #5
    5c90:	str	r3, [r5, #8]
    5c94:	mov	r3, #12
    5c98:	str	r3, [r5, #20]
    5c9c:	mov	r0, #384	; 0x180
    5ca0:	bl	22c8 <malloc@plt>
    5ca4:	str	r0, [r5]
    5ca8:	cmp	r0, #0
    5cac:	beq	5cd4 <get_hop_pattern@@Base+0x498>
    5cb0:	mov	r2, #384	; 0x180
    5cb4:	mov	r1, #0
    5cb8:	bl	23c4 <memset@plt>
    5cbc:	movw	r3, #8161	; 0x1fe1
    5cc0:	movt	r3, #40977	; 0xa011
    5cc4:	str	r3, [r5, #40]	; 0x28
    5cc8:	b	5a4c <get_hop_pattern@@Base+0x210>
    5ccc:	mvn	r0, #0
    5cd0:	bl	231c <exit@plt>
    5cd4:	mvn	r0, #0
    5cd8:	bl	231c <exit@plt>
    5cdc:	mvn	r0, #0
    5ce0:	bl	231c <exit@plt>
    5ce4:	str	lr, [r2, #12]
    5ce8:	ldr	r1, [r5, r3, lsl #2]
    5cec:	str	r1, [r2, #16]
    5cf0:	cmp	r1, #0
    5cf4:	strne	r2, [r1, #12]
    5cf8:	str	r2, [r5, r3, lsl #2]
    5cfc:	mov	r2, ip
    5d00:	cmp	ip, #0
    5d04:	beq	5d68 <get_hop_pattern@@Base+0x52c>
    5d08:	ldr	ip, [r2, #16]
    5d0c:	ldr	r0, [r4, #12]
    5d10:	ldr	r3, [r0, #4]
    5d14:	lsl	r3, r3, #1
    5d18:	sub	r3, r3, #1
    5d1c:	ldr	r1, [r2, #28]
    5d20:	and	r3, r3, r1
    5d24:	add	r3, r3, r3, lsl #1
    5d28:	add	r8, r5, r3, lsl #2
    5d2c:	ldr	r1, [r8, #4]
    5d30:	add	r1, r1, #1
    5d34:	str	r1, [r8, #4]
    5d38:	ldr	r9, [r0, #24]
    5d3c:	cmp	r1, r9
    5d40:	bls	5ce4 <get_hop_pattern@@Base+0x4a8>
    5d44:	ldr	r1, [r0, #28]
    5d48:	add	r1, r1, #1
    5d4c:	str	r1, [r0, #28]
    5d50:	ldr	r0, [r4, #12]
    5d54:	ldr	r1, [r8, #4]
    5d58:	ldr	r0, [r0, #24]
    5d5c:	udiv	r1, r1, r0
    5d60:	str	r1, [r8, #8]
    5d64:	b	5ce4 <get_hop_pattern@@Base+0x4a8>
    5d68:	add	r7, r7, #1
    5d6c:	ldr	r3, [r4, #12]
    5d70:	add	r6, r6, #12
    5d74:	ldr	r2, [r3, #4]
    5d78:	cmp	r2, r7
    5d7c:	bls	5d94 <get_hop_pattern@@Base+0x558>
    5d80:	ldr	r3, [r3]
    5d84:	ldr	r2, [r3, r6]
    5d88:	cmp	r2, #0
    5d8c:	bne	5d08 <get_hop_pattern@@Base+0x4cc>
    5d90:	b	5d68 <get_hop_pattern@@Base+0x52c>
    5d94:	ldr	r0, [r3]
    5d98:	bl	2148 <free@plt>
    5d9c:	ldr	r2, [r4, #12]
    5da0:	ldr	r3, [r2, #4]
    5da4:	lsl	r3, r3, #1
    5da8:	str	r3, [r2, #4]
    5dac:	ldr	r2, [r4, #12]
    5db0:	ldr	r3, [r2, #8]
    5db4:	add	r3, r3, #1
    5db8:	str	r3, [r2, #8]
    5dbc:	ldr	r3, [r4, #12]
    5dc0:	str	r5, [r3]
    5dc4:	ldr	r3, [r4, #12]
    5dc8:	ldr	r1, [r3, #12]
    5dcc:	ldr	r2, [r3, #28]
    5dd0:	cmp	r2, r1, lsr #1
    5dd4:	ldrhi	r2, [r3, #32]
    5dd8:	addhi	r2, r2, #1
    5ddc:	movls	r2, #0
    5de0:	str	r2, [r3, #32]
    5de4:	ldr	r3, [r4, #12]
    5de8:	ldr	r2, [r3, #32]
    5dec:	cmp	r2, #1
    5df0:	movhi	r2, #1
    5df4:	strhi	r2, [r3, #36]	; 0x24
    5df8:	b	59b8 <get_hop_pattern@@Base+0x17c>
    5dfc:	andeq	r3, r2, r4, lsr #18
    5e00:	andeq	ip, r0, r0, lsr #30
    5e04:	muleq	r2, r4, r7
    5e08:	andeq	r3, r2, r4, asr r7
    5e0c:	andeq	r3, r2, r8, ror #10

00005e10 <btbb_piconet_set_afh_map@@Base>:
    5e10:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5e14:	strd	r6, [sp, #8]
    5e18:	str	r8, [sp, #16]
    5e1c:	str	lr, [sp, #20]
    5e20:	mov	r5, r0
    5e24:	mov	r3, #0
    5e28:	strb	r3, [r0, #22]
    5e2c:	sub	r6, r1, #1
    5e30:	add	r4, r0, #12
    5e34:	add	r7, r0, #22
    5e38:	ldrb	r0, [r6, #1]!
    5e3c:	strb	r0, [r4], #1
    5e40:	bl	20dc <count_bits@plt>
    5e44:	ldrb	r3, [r5, #22]
    5e48:	add	r0, r3, r0
    5e4c:	strb	r0, [r5, #22]
    5e50:	cmp	r4, r7
    5e54:	bne	5e38 <btbb_piconet_set_afh_map@@Base+0x28>
    5e58:	mov	r1, #2
    5e5c:	mov	r0, r5
    5e60:	bl	21f0 <btbb_piconet_get_flag@plt>
    5e64:	cmp	r0, #0
    5e68:	bne	5e80 <btbb_piconet_set_afh_map@@Base+0x70>
    5e6c:	ldrd	r4, [sp]
    5e70:	ldrd	r6, [sp, #8]
    5e74:	ldr	r8, [sp, #16]
    5e78:	add	sp, sp, #20
    5e7c:	pop	{pc}		; (ldr pc, [sp], #4)
    5e80:	mov	r0, r5
    5e84:	bl	22b0 <get_hop_pattern@plt>
    5e88:	b	5e6c <btbb_piconet_set_afh_map@@Base+0x5c>

00005e8c <single_hop@@Base>:
    5e8c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5e90:	strd	r6, [sp, #8]
    5e94:	str	r8, [sp, #16]
    5e98:	str	lr, [sp, #20]
    5e9c:	mov	r4, r1
    5ea0:	ubfx	r1, r0, #1, #1
    5ea4:	lsl	r6, r1, #5
    5ea8:	ubfx	r5, r0, #3, #25
    5eac:	bic	r5, r5, #15
    5eb0:	ldr	r2, [r4, #52]	; 0x34
    5eb4:	eor	r2, r2, r0, asr #7
    5eb8:	ldr	ip, [r4, #48]	; 0x30
    5ebc:	eor	ip, ip, r0, asr #16
    5ec0:	and	ip, ip, #31
    5ec4:	sub	r1, r6, r1
    5ec8:	ldr	r3, [r4, #44]	; 0x2c
    5ecc:	eor	r3, r3, r0, asr #21
    5ed0:	and	r3, r3, #31
    5ed4:	ubfx	r0, r0, #2, #5
    5ed8:	add	r0, r3, r0
    5edc:	rsbs	r3, r0, #0
    5ee0:	and	r0, r0, #31
    5ee4:	and	r3, r3, #31
    5ee8:	rsbpl	r0, r3, #0
    5eec:	ldr	r3, [r4, #36]	; 0x24
    5ef0:	ubfx	r2, r2, #0, #9
    5ef4:	eor	r1, r1, ip
    5ef8:	eor	r0, r0, r3
    5efc:	bl	24b4 <fast_perm@plt>
    5f00:	mov	r7, r0
    5f04:	mov	r1, #11
    5f08:	mov	r0, r4
    5f0c:	bl	21f0 <btbb_piconet_get_flag@plt>
    5f10:	cmp	r0, #0
    5f14:	beq	5f5c <single_hop@@Base+0xd0>
    5f18:	ldrb	r2, [r4, #22]
    5f1c:	ldr	r3, [r4, #40]	; 0x28
    5f20:	add	r7, r7, r3
    5f24:	udiv	r3, r5, r2
    5f28:	mls	r5, r2, r3, r5
    5f2c:	add	r6, r5, r6
    5f30:	add	r7, r7, r6
    5f34:	udiv	r6, r7, r2
    5f38:	mls	r7, r2, r6, r7
    5f3c:	add	r7, r7, #14
    5f40:	ldr	r0, [r4, r7, lsl #2]
    5f44:	uxtb	r0, r0
    5f48:	ldrd	r4, [sp]
    5f4c:	ldrd	r6, [sp, #8]
    5f50:	ldr	r8, [sp, #16]
    5f54:	add	sp, sp, #20
    5f58:	pop	{pc}		; (ldr pc, [sp], #4)
    5f5c:	ldr	r3, [r4, #40]	; 0x28
    5f60:	add	r7, r7, r3
    5f64:	movw	r3, #29865	; 0x74a9
    5f68:	movt	r3, #53092	; 0xcf64
    5f6c:	umull	r1, r2, r3, r5
    5f70:	lsr	r2, r2, #6
    5f74:	mov	r1, #79	; 0x4f
    5f78:	mls	r5, r1, r2, r5
    5f7c:	add	r6, r5, r6
    5f80:	add	r7, r7, r6
    5f84:	umull	r2, r3, r3, r7
    5f88:	lsr	r3, r3, #6
    5f8c:	mls	r7, r1, r3, r7
    5f90:	add	r7, r7, #14
    5f94:	ldr	r0, [r4, r7, lsl #2]
    5f98:	b	5f44 <single_hop@@Base+0xb8>

00005f9c <hop@@Base>:
    5f9c:	ldr	r3, [r1, #372]	; 0x174
    5fa0:	ldrb	r0, [r3, r0]
    5fa4:	bx	lr

00005fa8 <btbb_init_hop_reversal@@Base>:
    5fa8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5fac:	strd	r6, [sp, #8]
    5fb0:	str	r8, [sp, #16]
    5fb4:	str	lr, [sp, #20]
    5fb8:	mov	r5, r0
    5fbc:	mov	r4, r1
    5fc0:	mov	r0, r1
    5fc4:	bl	22b0 <get_hop_pattern@plt>
    5fc8:	movw	r0, #36700	; 0x8f5c
    5fcc:	movt	r0, #2
    5fd0:	movw	r3, #53092	; 0xcf64
    5fd4:	cmp	r5, #0
    5fd8:	moveq	r0, r3
    5fdc:	lsl	r0, r0, #2
    5fe0:	bl	22c8 <malloc@plt>
    5fe4:	str	r0, [r4, #32]
    5fe8:	add	r2, r4, #4096	; 0x1000
    5fec:	ldrb	ip, [r2, #552]	; 0x228
    5ff0:	ldr	r3, [r2, #1552]	; 0x610
    5ff4:	ldr	r2, [r2, #1556]	; 0x614
    5ff8:	add	r3, r3, r2
    5ffc:	and	r3, r3, #63	; 0x3f
    6000:	mov	r1, #0
    6004:	movw	lr, #34079	; 0x851f
    6008:	movt	lr, #20971	; 0x51eb
    600c:	mov	r6, #25
    6010:	b	6030 <btbb_init_hop_reversal@@Base+0x88>
    6014:	ldr	r2, [r4, #372]	; 0x174
    6018:	ldrb	r2, [r2, r3]
    601c:	cmp	ip, r2
    6020:	beq	6060 <btbb_init_hop_reversal@@Base+0xb8>
    6024:	add	r3, r3, #64	; 0x40
    6028:	cmn	r3, #-134217727	; 0xf8000001
    602c:	bgt	6070 <btbb_init_hop_reversal@@Base+0xc8>
    6030:	ldr	r2, [r4, #8]
    6034:	cmp	r2, #0
    6038:	beq	6014 <btbb_init_hop_reversal@@Base+0x6c>
    603c:	ldr	r2, [r4, #372]	; 0x174
    6040:	ldrb	r2, [r2, r3]
    6044:	add	r0, r2, #24
    6048:	smull	r7, r2, lr, r0
    604c:	asr	r2, r2, #3
    6050:	mls	r2, r6, r2, r0
    6054:	add	r2, r2, #26
    6058:	uxtb	r2, r2
    605c:	b	601c <btbb_init_hop_reversal@@Base+0x74>
    6060:	ldr	r2, [r4, #32]
    6064:	str	r3, [r2, r1, lsl #2]
    6068:	add	r1, r1, #1
    606c:	b	6024 <btbb_init_hop_reversal@@Base+0x7c>
    6070:	str	r1, [r4, #376]	; 0x178
    6074:	mov	r6, #0
    6078:	str	r6, [r4, #388]	; 0x184
    607c:	mov	r2, #1
    6080:	mov	r1, #9
    6084:	mov	r0, r4
    6088:	bl	2214 <btbb_piconet_set_flag@plt>
    608c:	mov	r2, r6
    6090:	mov	r1, #5
    6094:	mov	r0, r4
    6098:	bl	2214 <btbb_piconet_set_flag@plt>
    609c:	mov	r2, r5
    60a0:	mov	r1, #13
    60a4:	mov	r0, r4
    60a8:	bl	2214 <btbb_piconet_set_flag@plt>
    60ac:	ldr	r1, [r4, #376]	; 0x178
    60b0:	ldr	r0, [pc, #28]	; 60d4 <btbb_init_hop_reversal@@Base+0x12c>
    60b4:	add	r0, pc, r0
    60b8:	bl	2100 <printf@plt>
    60bc:	ldr	r0, [r4, #376]	; 0x178
    60c0:	ldrd	r4, [sp]
    60c4:	ldrd	r6, [sp, #8]
    60c8:	ldr	r8, [sp, #16]
    60cc:	add	sp, sp, #20
    60d0:	pop	{pc}		; (ldr pc, [sp], #4)
    60d4:	andeq	ip, r0, r8, lsr r8

000060d8 <btbb_winnow@@Base>:
    60d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    60dc:	strd	r6, [sp, #8]
    60e0:	strd	r8, [sp, #16]
    60e4:	strd	sl, [sp, #24]
    60e8:	str	lr, [sp, #32]
    60ec:	sub	sp, sp, #4
    60f0:	ldr	r3, [r0, #388]	; 0x184
    60f4:	ldr	r2, [r0, #380]	; 0x17c
    60f8:	cmp	r3, r2
    60fc:	bge	62b0 <btbb_winnow@@Base+0x1d8>
    6100:	mov	r4, r0
    6104:	movw	r8, #34079	; 0x851f
    6108:	movt	r8, #20971	; 0x51eb
    610c:	ldr	r9, [pc, #472]	; 62ec <btbb_winnow@@Base+0x214>
    6110:	add	r9, pc, r9
    6114:	b	61e0 <btbb_winnow@@Base+0x108>
    6118:	ldr	r3, [r4, #32]
    611c:	ldr	r3, [r3, r2]
    6120:	add	r3, r6, r3
    6124:	bic	r3, r3, #-134217728	; 0xf8000000
    6128:	ldr	ip, [r4, #372]	; 0x174
    612c:	ldrb	r3, [ip, r3]
    6130:	cmp	r7, r3
    6134:	beq	618c <btbb_winnow@@Base+0xb4>
    6138:	add	r1, r1, #1
    613c:	add	r2, r2, #4
    6140:	ldr	r3, [r4, #376]	; 0x178
    6144:	cmp	r1, r3
    6148:	bge	61a0 <btbb_winnow@@Base+0xc8>
    614c:	ldr	r3, [r4, #8]
    6150:	cmp	r3, #0
    6154:	beq	6118 <btbb_winnow@@Base+0x40>
    6158:	ldr	r3, [r4, #32]
    615c:	ldr	r3, [r3, r2]
    6160:	add	r3, r6, r3
    6164:	bic	r3, r3, #-134217728	; 0xf8000000
    6168:	ldr	ip, [r4, #372]	; 0x174
    616c:	ldrb	r3, [ip, r3]
    6170:	add	ip, r3, #24
    6174:	smull	lr, r3, r8, ip
    6178:	asr	r3, r3, #3
    617c:	mls	r3, r0, r3, ip
    6180:	add	r3, r3, #26
    6184:	uxtb	r3, r3
    6188:	b	6130 <btbb_winnow@@Base+0x58>
    618c:	ldr	r3, [r4, #32]
    6190:	ldr	ip, [r3, r2]
    6194:	str	ip, [r3, r5, lsl #2]
    6198:	add	r5, r5, #1
    619c:	b	6138 <btbb_winnow@@Base+0x60>
    61a0:	str	r5, [r4, #376]	; 0x178
    61a4:	cmp	r5, #1
    61a8:	beq	6214 <btbb_winnow@@Base+0x13c>
    61ac:	cmp	r5, #0
    61b0:	beq	62c0 <btbb_winnow@@Base+0x1e8>
    61b4:	cmp	r5, #1
    61b8:	ble	62cc <btbb_winnow@@Base+0x1f4>
    61bc:	ldr	r3, [r4, #380]	; 0x17c
    61c0:	cmp	r3, #0
    61c4:	bgt	6254 <btbb_winnow@@Base+0x17c>
    61c8:	ldr	r3, [r4, #388]	; 0x184
    61cc:	add	r3, r3, #1
    61d0:	str	r3, [r4, #388]	; 0x184
    61d4:	ldr	r2, [r4, #380]	; 0x17c
    61d8:	cmp	r3, r2
    61dc:	bge	62cc <btbb_winnow@@Base+0x1f4>
    61e0:	add	r2, r3, #162	; 0xa2
    61e4:	ldr	r6, [r4, r2, lsl #2]
    61e8:	add	r3, r4, r3
    61ec:	movw	r2, #4648	; 0x1228
    61f0:	ldrb	r7, [r3, r2]
    61f4:	ldr	r3, [r4, #376]	; 0x178
    61f8:	cmp	r3, #0
    61fc:	ble	62b8 <btbb_winnow@@Base+0x1e0>
    6200:	mov	r2, #0
    6204:	mov	r5, r2
    6208:	mov	r1, r2
    620c:	mov	r0, #25
    6210:	b	614c <btbb_winnow@@Base+0x74>
    6214:	ldr	r2, [r4, #32]
    6218:	add	r1, r4, #4096	; 0x1000
    621c:	ldr	r0, [r2]
    6220:	ldr	r3, [r1, #1556]	; 0x614
    6224:	lsl	r3, r3, #1
    6228:	rsb	r3, r3, r0, lsl #1
    622c:	str	r3, [r1, #1552]	; 0x610
    6230:	ldr	r1, [r2]
    6234:	ldr	r0, [pc, #180]	; 62f0 <btbb_winnow@@Base+0x218>
    6238:	add	r0, pc, r0
    623c:	bl	2100 <printf@plt>
    6240:	mov	r2, #1
    6244:	mov	r1, #5
    6248:	mov	r0, r4
    624c:	bl	2214 <btbb_piconet_set_flag@plt>
    6250:	b	62cc <btbb_winnow@@Base+0x1f4>
    6254:	ldr	r3, [r4, #388]	; 0x184
    6258:	sub	r2, r3, #1
    625c:	add	r3, r3, #161	; 0xa1
    6260:	ldr	sl, [r4, r3, lsl #2]
    6264:	add	r3, r4, r2
    6268:	movw	r2, #4648	; 0x1228
    626c:	ldrb	fp, [r3, r2]
    6270:	mov	r1, #12
    6274:	mov	r0, r4
    6278:	bl	21f0 <btbb_piconet_get_flag@plt>
    627c:	cmp	r0, #0
    6280:	bne	61c8 <btbb_winnow@@Base+0xf0>
    6284:	add	sl, sl, #1
    6288:	cmp	sl, r6
    628c:	cmpeq	r7, fp
    6290:	bne	61c8 <btbb_winnow@@Base+0xf0>
    6294:	mov	r2, #1
    6298:	mov	r1, #12
    629c:	mov	r0, r4
    62a0:	bl	2214 <btbb_piconet_set_flag@plt>
    62a4:	mov	r0, r9
    62a8:	bl	22bc <puts@plt>
    62ac:	b	61c8 <btbb_winnow@@Base+0xf0>
    62b0:	ldr	r5, [r0, #376]	; 0x178
    62b4:	b	62cc <btbb_winnow@@Base+0x1f4>
    62b8:	mov	r3, #0
    62bc:	str	r3, [r4, #376]	; 0x178
    62c0:	mov	r0, r4
    62c4:	bl	4f18 <btbb_piconet_get_flag@@Base+0x18>
    62c8:	mov	r5, #0
    62cc:	mov	r0, r5
    62d0:	add	sp, sp, #4
    62d4:	ldrd	r4, [sp]
    62d8:	ldrd	r6, [sp, #8]
    62dc:	ldrd	r8, [sp, #16]
    62e0:	ldrd	sl, [sp, #24]
    62e4:	add	sp, sp, #32
    62e8:	pop	{pc}		; (ldr pc, [sp], #4)
    62ec:	andeq	ip, r0, r8, lsl r8
    62f0:	ldrdeq	ip, [r0], -r4

000062f4 <btbb_uap_from_header@@Base>:
    62f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    62f8:	strd	r6, [sp, #8]
    62fc:	strd	r8, [sp, #16]
    6300:	strd	sl, [sp, #24]
    6304:	str	lr, [sp, #32]
    6308:	sub	sp, sp, #20
    630c:	str	r0, [sp]
    6310:	mov	r5, r1
    6314:	ldr	sl, [r0, #2816]	; 0xb00
    6318:	mov	r1, #10
    631c:	mov	r0, r5
    6320:	bl	21f0 <btbb_piconet_get_flag@plt>
    6324:	cmp	r0, #0
    6328:	addeq	r3, r5, #4096	; 0x1000
    632c:	streq	sl, [r3, #1556]	; 0x614
    6330:	ldr	r4, [sp]
    6334:	ldrb	r1, [r4, #8]
    6338:	mov	r0, r5
    633c:	bl	2238 <btbb_piconet_set_channel_seen@plt>
    6340:	ldr	r3, [r5, #380]	; 0x17c
    6344:	cmp	r3, #1000	; 0x3e8
    6348:	bge	639c <btbb_uap_from_header@@Base+0xa8>
    634c:	add	r1, r3, #162	; 0xa2
    6350:	add	r2, r5, #4096	; 0x1000
    6354:	ldr	r2, [r2, #1556]	; 0x614
    6358:	sub	r2, sl, r2
    635c:	str	r2, [r5, r1, lsl #2]
    6360:	ldrb	r0, [r4, #8]
    6364:	add	r1, r5, r3
    6368:	movw	r2, #4648	; 0x1228
    636c:	strb	r0, [r1, r2]
    6370:	add	r3, r3, #1
    6374:	str	r3, [r5, #380]	; 0x17c
    6378:	ldr	r3, [r5, #384]	; 0x180
    637c:	add	r3, r3, #1
    6380:	str	r3, [r5, #384]	; 0x180
    6384:	add	r7, r5, #388	; 0x184
    6388:	mov	r6, #0
    638c:	str	r6, [sp, #4]
    6390:	str	r6, [sp, #12]
    6394:	add	fp, r5, #4096	; 0x1000
    6398:	b	6434 <btbb_uap_from_header@@Base+0x140>
    639c:	ldr	r0, [pc, #680]	; 664c <btbb_uap_from_header@@Base+0x358>
    63a0:	add	r0, pc, r0
    63a4:	bl	22bc <puts@plt>
    63a8:	mov	r0, r5
    63ac:	bl	4f18 <btbb_piconet_get_flag@@Base+0x18>
    63b0:	mov	r3, #0
    63b4:	str	r3, [sp, #4]
    63b8:	ldr	r0, [sp, #4]
    63bc:	add	sp, sp, #20
    63c0:	ldrd	r4, [sp]
    63c4:	ldrd	r6, [sp, #8]
    63c8:	ldrd	r8, [sp, #16]
    63cc:	ldrd	sl, [sp, #24]
    63d0:	add	sp, sp, #32
    63d4:	pop	{pc}		; (ldr pc, [sp], #4)
    63d8:	mov	r1, #10
    63dc:	mov	r0, r5
    63e0:	bl	21f0 <btbb_piconet_get_flag@plt>
    63e4:	cmp	r0, #0
    63e8:	bne	6428 <btbb_uap_from_header@@Base+0x134>
    63ec:	b	6448 <btbb_uap_from_header@@Base+0x154>
    63f0:	ldr	r1, [sp]
    63f4:	mov	r0, r4
    63f8:	bl	2280 <crc_check@plt>
    63fc:	mov	r4, r0
    6400:	mov	r1, #2
    6404:	mov	r0, r5
    6408:	bl	21f0 <btbb_piconet_get_flag@plt>
    640c:	cmp	r0, #0
    6410:	beq	64a8 <btbb_uap_from_header@@Base+0x1b4>
    6414:	ldrb	r3, [r5, #28]
    6418:	cmp	r3, r9
    641c:	beq	64a8 <btbb_uap_from_header@@Base+0x1b4>
    6420:	mvn	r3, #0
    6424:	str	r3, [r8]
    6428:	add	r6, r6, #1
    642c:	cmp	r6, #64	; 0x40
    6430:	beq	6574 <btbb_uap_from_header@@Base+0x280>
    6434:	add	r7, r7, #4
    6438:	mov	r8, r7
    643c:	ldr	r3, [r7]
    6440:	cmp	r3, #0
    6444:	blt	63d8 <btbb_uap_from_header@@Base+0xe4>
    6448:	str	r6, [sp, #8]
    644c:	ldr	r4, [fp, #1556]	; 0x614
    6450:	sub	r4, sl, r4
    6454:	add	r4, r4, r6
    6458:	and	r4, r4, #63	; 0x3f
    645c:	ldr	r1, [sp]
    6460:	mov	r0, r4
    6464:	bl	24c0 <try_clock@plt>
    6468:	mov	r9, r0
    646c:	mov	r1, #10
    6470:	mov	r0, r5
    6474:	bl	21f0 <btbb_piconet_get_flag@plt>
    6478:	cmp	r0, #0
    647c:	beq	63f0 <btbb_uap_from_header@@Base+0xfc>
    6480:	ldr	r3, [r8]
    6484:	cmp	r9, r3
    6488:	beq	63f0 <btbb_uap_from_header@@Base+0xfc>
    648c:	mov	r1, #2
    6490:	mov	r0, r5
    6494:	bl	21f0 <btbb_piconet_get_flag@plt>
    6498:	cmp	r0, #0
    649c:	beq	6420 <btbb_uap_from_header@@Base+0x12c>
    64a0:	mvn	r4, #0
    64a4:	b	6414 <btbb_uap_from_header@@Base+0x120>
    64a8:	add	r4, r4, #1
    64ac:	cmp	r4, #3
    64b0:	addls	pc, pc, r4, lsl #2
    64b4:	b	64e0 <btbb_uap_from_header@@Base+0x1ec>
    64b8:	b	6420 <btbb_uap_from_header@@Base+0x12c>
    64bc:	b	6420 <btbb_uap_from_header@@Base+0x12c>
    64c0:	b	64c8 <btbb_uap_from_header@@Base+0x1d4>
    64c4:	b	64c8 <btbb_uap_from_header@@Base+0x1d4>
    64c8:	str	r9, [r8]
    64cc:	ldr	r3, [sp, #4]
    64d0:	add	r3, r3, #1
    64d4:	str	r3, [sp, #4]
    64d8:	str	r6, [sp, #12]
    64dc:	b	6428 <btbb_uap_from_header@@Base+0x134>
    64e0:	add	r2, r5, #4096	; 0x1000
    64e4:	ldr	r3, [r2, #1556]	; 0x614
    64e8:	ldr	r1, [sp, #8]
    64ec:	sub	r3, r1, r3
    64f0:	and	r3, r3, #63	; 0x3f
    64f4:	str	r3, [r2, #1552]	; 0x610
    64f8:	mov	r1, #2
    64fc:	mov	r0, r5
    6500:	bl	21f0 <btbb_piconet_get_flag@plt>
    6504:	cmp	r0, #0
    6508:	bne	6558 <btbb_uap_from_header@@Base+0x264>
    650c:	ldr	r2, [r5, #384]	; 0x180
    6510:	mov	r1, r9
    6514:	ldr	r0, [pc, #308]	; 6650 <btbb_uap_from_header@@Base+0x35c>
    6518:	add	r0, pc, r0
    651c:	bl	2100 <printf@plt>
    6520:	strb	r9, [r5, #28]
    6524:	mov	r2, #1
    6528:	mov	r1, #4
    652c:	mov	r0, r5
    6530:	bl	2214 <btbb_piconet_set_flag@plt>
    6534:	mov	r2, #1
    6538:	mov	r1, #2
    653c:	mov	r0, r5
    6540:	bl	2214 <btbb_piconet_set_flag@plt>
    6544:	mov	r3, #0
    6548:	str	r3, [r5, #384]	; 0x180
    654c:	mov	r3, #1
    6550:	str	r3, [sp, #4]
    6554:	b	63b8 <btbb_uap_from_header@@Base+0xc4>
    6558:	add	r3, r5, #4096	; 0x1000
    655c:	ldr	r2, [r5, #384]	; 0x180
    6560:	ldr	r1, [r3, #1552]	; 0x610
    6564:	ldr	r0, [pc, #232]	; 6654 <btbb_uap_from_header@@Base+0x360>
    6568:	add	r0, pc, r0
    656c:	bl	2100 <printf@plt>
    6570:	b	6520 <btbb_uap_from_header@@Base+0x22c>
    6574:	mov	r2, #1
    6578:	mov	r1, #10
    657c:	mov	r0, r5
    6580:	bl	2214 <btbb_piconet_set_flag@plt>
    6584:	ldr	r3, [sp, #4]
    6588:	cmp	r3, #1
    658c:	beq	65b0 <btbb_uap_from_header@@Base+0x2bc>
    6590:	ldr	r3, [sp, #4]
    6594:	cmp	r3, #0
    6598:	movne	r3, #0
    659c:	strne	r3, [sp, #4]
    65a0:	bne	63b8 <btbb_uap_from_header@@Base+0xc4>
    65a4:	mov	r0, r5
    65a8:	bl	4f18 <btbb_piconet_get_flag@@Base+0x18>
    65ac:	b	63b8 <btbb_uap_from_header@@Base+0xc4>
    65b0:	add	r2, r5, #4096	; 0x1000
    65b4:	ldr	r3, [r2, #1556]	; 0x614
    65b8:	ldr	r4, [sp, #12]
    65bc:	sub	r3, r4, r3
    65c0:	and	r3, r3, #63	; 0x3f
    65c4:	str	r3, [r2, #1552]	; 0x610
    65c8:	mov	r1, #2
    65cc:	mov	r0, r5
    65d0:	bl	21f0 <btbb_piconet_get_flag@plt>
    65d4:	cmp	r0, #0
    65d8:	bne	6630 <btbb_uap_from_header@@Base+0x33c>
    65dc:	add	r3, r4, #98	; 0x62
    65e0:	ldr	r2, [r5, #384]	; 0x180
    65e4:	ldr	r1, [r5, r3, lsl #2]
    65e8:	ldr	r0, [pc, #104]	; 6658 <btbb_uap_from_header@@Base+0x364>
    65ec:	add	r0, pc, r0
    65f0:	bl	2100 <printf@plt>
    65f4:	ldr	r3, [sp, #12]
    65f8:	add	r3, r3, #98	; 0x62
    65fc:	ldr	r3, [r5, r3, lsl #2]
    6600:	strb	r3, [r5, #28]
    6604:	mov	r2, #1
    6608:	mov	r1, #4
    660c:	mov	r0, r5
    6610:	bl	2214 <btbb_piconet_set_flag@plt>
    6614:	mov	r2, #1
    6618:	mov	r1, #2
    661c:	mov	r0, r5
    6620:	bl	2214 <btbb_piconet_set_flag@plt>
    6624:	mov	r3, #0
    6628:	str	r3, [r5, #384]	; 0x180
    662c:	b	63b8 <btbb_uap_from_header@@Base+0xc4>
    6630:	add	r3, r5, #4096	; 0x1000
    6634:	ldr	r2, [r5, #384]	; 0x180
    6638:	ldr	r1, [r3, #1552]	; 0x610
    663c:	ldr	r0, [pc, #24]	; 665c <btbb_uap_from_header@@Base+0x368>
    6640:	add	r0, pc, r0
    6644:	bl	2100 <printf@plt>
    6648:	b	65f4 <btbb_uap_from_header@@Base+0x300>
    664c:	andeq	ip, r0, ip, lsr #11
    6650:	andeq	ip, r0, ip, asr r4
    6654:	andeq	ip, r0, r4, asr #8
    6658:	strdeq	ip, [r0], -r8
    665c:	ldrdeq	ip, [r0], -r0

00006660 <try_hop@@Base>:
    6660:	strd	r4, [sp, #-16]!
    6664:	str	r6, [sp, #8]
    6668:	str	lr, [sp, #12]
    666c:	mov	r5, r0
    6670:	mov	r4, r1
    6674:	ldrb	r6, [r1, #28]
    6678:	bl	228c <btbb_decode@plt>
    667c:	mov	r1, #9
    6680:	mov	r0, r4
    6684:	bl	21f0 <btbb_piconet_get_flag@plt>
    6688:	cmp	r0, #0
    668c:	beq	6734 <try_hop@@Base+0xd4>
    6690:	ldr	r3, [r4, #380]	; 0x17c
    6694:	add	r0, r3, #162	; 0xa2
    6698:	add	r1, r4, #4096	; 0x1000
    669c:	ldr	r2, [r5, #2816]	; 0xb00
    66a0:	ldr	r1, [r1, #1556]	; 0x614
    66a4:	sub	r2, r2, r1
    66a8:	str	r2, [r4, r0, lsl #2]
    66ac:	ldrb	r0, [r5, #8]
    66b0:	add	r1, r4, r3
    66b4:	movw	r2, #4648	; 0x1228
    66b8:	strb	r0, [r1, r2]
    66bc:	add	r3, r3, #1
    66c0:	str	r3, [r4, #380]	; 0x17c
    66c4:	ldr	r3, [r4, #384]	; 0x180
    66c8:	add	r3, r3, #1
    66cc:	str	r3, [r4, #384]	; 0x180
    66d0:	mov	r0, r4
    66d4:	bl	2298 <btbb_winnow@plt>
    66d8:	mov	r1, #5
    66dc:	mov	r0, r4
    66e0:	bl	21f0 <btbb_piconet_get_flag@plt>
    66e4:	cmp	r0, #0
    66e8:	bne	6710 <try_hop@@Base+0xb0>
    66ec:	mov	r1, #2
    66f0:	mov	r0, r4
    66f4:	bl	21f0 <btbb_piconet_get_flag@plt>
    66f8:	cmp	r0, #0
    66fc:	beq	67d4 <try_hop@@Base+0x174>
    6700:	ldrd	r4, [sp]
    6704:	ldr	r6, [sp, #8]
    6708:	add	sp, sp, #12
    670c:	pop	{pc}		; (ldr pc, [sp], #4)
    6710:	ldr	r0, [pc, #212]	; 67ec <try_hop@@Base+0x18c>
    6714:	add	r0, pc, r0
    6718:	bl	22bc <puts@plt>
    671c:	add	r3, r4, #4096	; 0x1000
    6720:	ldr	r1, [r3, #1552]	; 0x610
    6724:	ldr	r0, [pc, #196]	; 67f0 <try_hop@@Base+0x190>
    6728:	add	r0, pc, r0
    672c:	bl	2100 <printf@plt>
    6730:	b	66ec <try_hop@@Base+0x8c>
    6734:	mov	r1, #4
    6738:	mov	r0, r4
    673c:	bl	21f0 <btbb_piconet_get_flag@plt>
    6740:	cmp	r0, #0
    6744:	beq	678c <try_hop@@Base+0x12c>
    6748:	mov	r1, r4
    674c:	mov	r0, r5
    6750:	bl	2178 <btbb_uap_from_header@plt>
    6754:	mov	r1, #5
    6758:	mov	r0, r4
    675c:	bl	21f0 <btbb_piconet_get_flag@plt>
    6760:	cmp	r0, #0
    6764:	beq	66ec <try_hop@@Base+0x8c>
    6768:	ldr	r0, [pc, #132]	; 67f4 <try_hop@@Base+0x194>
    676c:	add	r0, pc, r0
    6770:	bl	22bc <puts@plt>
    6774:	add	r3, r4, #4096	; 0x1000
    6778:	ldr	r1, [r3, #1552]	; 0x610
    677c:	ldr	r0, [pc, #116]	; 67f8 <try_hop@@Base+0x198>
    6780:	add	r0, pc, r0
    6784:	bl	2100 <printf@plt>
    6788:	b	66ec <try_hop@@Base+0x8c>
    678c:	mov	r1, r4
    6790:	mov	r0, r5
    6794:	bl	2178 <btbb_uap_from_header@plt>
    6798:	cmp	r0, #0
    679c:	beq	66ec <try_hop@@Base+0x8c>
    67a0:	ldrb	r3, [r4, #28]
    67a4:	cmp	r3, r6
    67a8:	beq	67bc <try_hop@@Base+0x15c>
    67ac:	ldr	r0, [pc, #72]	; 67fc <try_hop@@Base+0x19c>
    67b0:	add	r0, pc, r0
    67b4:	bl	22bc <puts@plt>
    67b8:	b	66ec <try_hop@@Base+0x8c>
    67bc:	mov	r1, r4
    67c0:	mov	r0, #0
    67c4:	bl	24cc <btbb_init_hop_reversal@plt>
    67c8:	mov	r0, r4
    67cc:	bl	2298 <btbb_winnow@plt>
    67d0:	b	66ec <try_hop@@Base+0x8c>
    67d4:	mov	r2, #1
    67d8:	mov	r1, #2
    67dc:	mov	r0, r4
    67e0:	bl	2214 <btbb_piconet_set_flag@plt>
    67e4:	strb	r6, [r4, #28]
    67e8:	b	6700 <try_hop@@Base+0xa0>
    67ec:	andeq	ip, r0, r8, lsr #6
    67f0:	andeq	ip, r0, r0, lsr #6
    67f4:	ldrdeq	ip, [r0], -r0
    67f8:	andeq	ip, r0, r8, asr #5
    67fc:	andeq	ip, r0, ip, lsr #5

00006800 <btbb_print_afh_map@@Base>:
    6800:	push	{lr}		; (str lr, [sp, #-4]!)
    6804:	sub	sp, sp, #36	; 0x24
    6808:	ldrb	r3, [r0, #21]
    680c:	str	r3, [sp, #24]
    6810:	ldrb	r3, [r0, #20]
    6814:	str	r3, [sp, #20]
    6818:	ldrb	r3, [r0, #19]
    681c:	str	r3, [sp, #16]
    6820:	ldrb	r3, [r0, #18]
    6824:	str	r3, [sp, #12]
    6828:	ldrb	r3, [r0, #17]
    682c:	str	r3, [sp, #8]
    6830:	ldrb	r3, [r0, #16]
    6834:	str	r3, [sp, #4]
    6838:	ldrb	r3, [r0, #15]
    683c:	str	r3, [sp]
    6840:	ldrb	r3, [r0, #14]
    6844:	ldrb	r2, [r0, #13]
    6848:	ldrb	r1, [r0, #12]
    684c:	ldr	r0, [pc, #12]	; 6860 <btbb_print_afh_map@@Base+0x60>
    6850:	add	r0, pc, r0
    6854:	bl	2100 <printf@plt>
    6858:	add	sp, sp, #36	; 0x24
    685c:	pop	{pc}		; (ldr pc, [sp], #4)
    6860:	andeq	ip, r0, r4, lsr #4

00006864 <get_piconet@@Base>:
    6864:	strd	r4, [sp, #-32]!	; 0xffffffe0
    6868:	strd	r6, [sp, #8]
    686c:	strd	r8, [sp, #16]
    6870:	str	sl, [sp, #24]
    6874:	str	lr, [sp, #28]
    6878:	sub	sp, sp, #8
    687c:	str	r0, [sp, #4]
    6880:	ldr	r3, [pc, #1396]	; 6dfc <get_piconet@@Base+0x598>
    6884:	add	r3, pc, r3
    6888:	ldr	r1, [r3, #8]
    688c:	cmp	r1, #0
    6890:	beq	69d0 <get_piconet@@Base+0x16c>
    6894:	ldrb	r2, [sp, #7]
    6898:	ldrb	r0, [sp, #4]
    689c:	movw	r3, #16653	; 0x410d
    68a0:	movt	r3, #274	; 0x112
    68a4:	add	r3, r0, r3
    68a8:	add	r3, r3, r2, lsl #24
    68ac:	ldrb	r2, [sp, #6]
    68b0:	add	r3, r3, r2, lsl #16
    68b4:	ldrb	r2, [sp, #5]
    68b8:	add	r3, r3, r2, lsl #8
    68bc:	movw	r0, #63341	; 0xf76d
    68c0:	movt	r0, #7
    68c4:	eor	r0, r0, r3
    68c8:	movw	r2, #47814	; 0xbac6
    68cc:	movt	r2, #40777	; 0x9f49
    68d0:	sub	r2, r2, r0
    68d4:	eor	r2, r2, r0, lsl #8
    68d8:	movw	r3, #48883	; 0xbef3
    68dc:	movt	r3, #65261	; 0xfeed
    68e0:	sub	r3, r3, r0
    68e4:	sub	r3, r3, r2
    68e8:	eor	r3, r3, r2, lsr #13
    68ec:	sub	r0, r0, r2
    68f0:	sub	r0, r0, r3
    68f4:	eor	r0, r0, r3, lsr #12
    68f8:	sub	r2, r2, r3
    68fc:	sub	r2, r2, r0
    6900:	eor	r2, r2, r0, lsl #16
    6904:	sub	r3, r3, r0
    6908:	sub	r3, r3, r2
    690c:	eor	r3, r3, r2, lsr #5
    6910:	sub	r0, r0, r2
    6914:	sub	r0, r0, r3
    6918:	eor	r0, r0, r3, lsr #3
    691c:	sub	r2, r2, r3
    6920:	sub	r2, r2, r0
    6924:	eor	r2, r2, r0, lsl #10
    6928:	sub	r3, r3, r0
    692c:	sub	r3, r3, r2
    6930:	ldr	r0, [r1, #8]
    6934:	ldr	r1, [r0, #4]
    6938:	sub	r1, r1, #1
    693c:	eor	r3, r3, r2, lsr #15
    6940:	and	r3, r3, r1
    6944:	ldr	r2, [r0]
    6948:	add	r3, r3, r3, lsl #1
    694c:	ldr	r3, [r2, r3, lsl #2]
    6950:	cmp	r3, #0
    6954:	beq	69d0 <get_piconet@@Base+0x16c>
    6958:	ldr	r5, [r0, #20]
    695c:	rsb	r5, r5, #0
    6960:	adds	r4, r3, r5
    6964:	beq	69d0 <get_piconet@@Base+0x16c>
    6968:	add	r7, sp, #4
    696c:	mov	r6, #4
    6970:	b	6988 <get_piconet@@Base+0x124>
    6974:	ldr	r3, [r4, #24]
    6978:	cmp	r3, #0
    697c:	beq	69d0 <get_piconet@@Base+0x16c>
    6980:	adds	r4, r3, r5
    6984:	beq	69d0 <get_piconet@@Base+0x16c>
    6988:	ldr	r3, [r4, #32]
    698c:	cmp	r3, #4
    6990:	bne	6974 <get_piconet@@Base+0x110>
    6994:	mov	r2, r6
    6998:	mov	r1, r7
    699c:	ldr	r0, [r4, #28]
    69a0:	bl	21b4 <memcmp@plt>
    69a4:	cmp	r0, #0
    69a8:	bne	6974 <get_piconet@@Base+0x110>
    69ac:	ldr	r6, [r4, #4]
    69b0:	mov	r0, r6
    69b4:	add	sp, sp, #8
    69b8:	ldrd	r4, [sp]
    69bc:	ldrd	r6, [sp, #8]
    69c0:	ldrd	r8, [sp, #16]
    69c4:	ldr	sl, [sp, #24]
    69c8:	add	sp, sp, #28
    69cc:	pop	{pc}		; (ldr pc, [sp], #4)
    69d0:	bl	20c4 <btbb_piconet_new@plt>
    69d4:	mov	r6, r0
    69d8:	ldr	r4, [sp, #4]
    69dc:	mov	r1, r4
    69e0:	bl	24d8 <btbb_init_piconet@plt>
    69e4:	mov	r0, #40	; 0x28
    69e8:	bl	22c8 <malloc@plt>
    69ec:	mov	r5, r0
    69f0:	str	r4, [r0]
    69f4:	str	r6, [r0, #4]
    69f8:	mov	r3, #0
    69fc:	str	r3, [r0, #16]
    6a00:	str	r0, [r5, #28]
    6a04:	mov	r3, #4
    6a08:	str	r3, [r0, #32]
    6a0c:	ldr	r3, [pc, #1004]	; 6e00 <get_piconet@@Base+0x59c>
    6a10:	add	r3, pc, r3
    6a14:	ldr	r3, [r3, #8]
    6a18:	cmp	r3, #0
    6a1c:	beq	6c38 <get_piconet@@Base+0x3d4>
    6a20:	ldr	r2, [r3, #8]
    6a24:	ldr	r2, [r2, #16]
    6a28:	str	r0, [r2, #8]
    6a2c:	ldr	r1, [r3, #8]
    6a30:	ldr	r2, [r1, #16]
    6a34:	ldr	r1, [r1, #20]
    6a38:	sub	r2, r2, r1
    6a3c:	str	r2, [r0, #12]
    6a40:	ldr	r3, [r3, #8]
    6a44:	add	r2, r0, #8
    6a48:	str	r2, [r3, #16]
    6a4c:	ldr	r3, [pc, #944]	; 6e04 <get_piconet@@Base+0x5a0>
    6a50:	add	r3, pc, r3
    6a54:	ldr	r1, [r3, #8]
    6a58:	ldr	r2, [r1, #8]
    6a5c:	ldr	r3, [r2, #12]
    6a60:	add	r3, r3, #1
    6a64:	str	r3, [r2, #12]
    6a68:	ldr	r3, [r1, #8]
    6a6c:	str	r3, [r5, #8]
    6a70:	ldrb	r2, [r5, #3]
    6a74:	ldrb	r0, [r5]
    6a78:	movw	r3, #16653	; 0x410d
    6a7c:	movt	r3, #274	; 0x112
    6a80:	add	r3, r0, r3
    6a84:	add	r3, r3, r2, lsl #24
    6a88:	ldrb	r2, [r5, #2]
    6a8c:	add	r3, r3, r2, lsl #16
    6a90:	ldrb	r2, [r5, #1]
    6a94:	add	r3, r3, r2, lsl #8
    6a98:	movw	r0, #63341	; 0xf76d
    6a9c:	movt	r0, #7
    6aa0:	eor	r0, r0, r3
    6aa4:	movw	r2, #47814	; 0xbac6
    6aa8:	movt	r2, #40777	; 0x9f49
    6aac:	sub	r2, r2, r0
    6ab0:	eor	r2, r2, r0, lsl #8
    6ab4:	movw	r3, #48883	; 0xbef3
    6ab8:	movt	r3, #65261	; 0xfeed
    6abc:	sub	r3, r3, r0
    6ac0:	sub	r3, r3, r2
    6ac4:	eor	r3, r3, r2, lsr #13
    6ac8:	sub	r0, r0, r2
    6acc:	sub	r0, r0, r3
    6ad0:	eor	r0, r0, r3, lsr #12
    6ad4:	sub	r2, r2, r3
    6ad8:	sub	r2, r2, r0
    6adc:	eor	r2, r2, r0, lsl #16
    6ae0:	sub	r3, r3, r0
    6ae4:	sub	r3, r3, r2
    6ae8:	eor	r3, r3, r2, lsr #5
    6aec:	sub	r0, r0, r2
    6af0:	sub	r0, r0, r3
    6af4:	eor	r0, r0, r3, lsr #3
    6af8:	sub	r2, r2, r3
    6afc:	sub	r2, r2, r0
    6b00:	eor	r2, r2, r0, lsl #10
    6b04:	sub	r3, r3, r0
    6b08:	sub	r3, r3, r2
    6b0c:	eor	r3, r3, r2, lsr #15
    6b10:	str	r3, [r5, #36]	; 0x24
    6b14:	ldr	r0, [r1, #8]
    6b18:	ldr	r2, [r0, #4]
    6b1c:	sub	r2, r2, #1
    6b20:	and	r3, r3, r2
    6b24:	add	r3, r3, r3, lsl #1
    6b28:	lsl	r3, r3, #2
    6b2c:	ldr	r2, [r0]
    6b30:	add	r2, r2, r3
    6b34:	ldr	r0, [r2, #4]
    6b38:	add	r0, r0, #1
    6b3c:	str	r0, [r2, #4]
    6b40:	ldr	r2, [r1, #8]
    6b44:	ldr	r2, [r2]
    6b48:	ldr	r2, [r2, r3]
    6b4c:	str	r2, [r5, #24]
    6b50:	mov	r2, #0
    6b54:	str	r2, [r5, #20]
    6b58:	ldr	r2, [r1, #8]
    6b5c:	ldr	r2, [r2]
    6b60:	ldr	r2, [r2, r3]
    6b64:	cmp	r2, #0
    6b68:	addne	r0, r5, #8
    6b6c:	strne	r0, [r2, #12]
    6b70:	ldr	r2, [r1, #8]
    6b74:	ldr	r2, [r2]
    6b78:	add	r0, r5, #8
    6b7c:	str	r0, [r2, r3]
    6b80:	ldr	r2, [r1, #8]
    6b84:	ldr	r2, [r2]
    6b88:	add	r3, r2, r3
    6b8c:	ldr	r2, [r3, #8]
    6b90:	add	r2, r2, #1
    6b94:	add	r2, r2, r2, lsl #2
    6b98:	ldr	r3, [r3, #4]
    6b9c:	cmp	r3, r2, lsl #1
    6ba0:	bcc	69b0 <get_piconet@@Base+0x14c>
    6ba4:	ldr	r7, [r5, #8]
    6ba8:	ldr	r3, [r7, #36]	; 0x24
    6bac:	cmp	r3, #1
    6bb0:	beq	69b0 <get_piconet@@Base+0x14c>
    6bb4:	ldr	r8, [r7, #4]
    6bb8:	add	r8, r8, r8, lsl #1
    6bbc:	lsl	r8, r8, #3
    6bc0:	mov	r0, r8
    6bc4:	bl	22c8 <malloc@plt>
    6bc8:	subs	r4, r0, #0
    6bcc:	beq	6cdc <get_piconet@@Base+0x478>
    6bd0:	mov	r2, r8
    6bd4:	mov	r1, #0
    6bd8:	mov	r0, r4
    6bdc:	bl	23c4 <memset@plt>
    6be0:	ldr	r1, [r7, #12]
    6be4:	ldr	r3, [r7, #4]
    6be8:	lsl	r3, r3, #1
    6bec:	sub	r3, r3, #1
    6bf0:	tst	r3, r1
    6bf4:	movne	r3, #1
    6bf8:	moveq	r3, #0
    6bfc:	ldr	r2, [r7, #8]
    6c00:	add	r2, r2, #1
    6c04:	add	r3, r3, r1, lsr r2
    6c08:	str	r3, [r7, #24]
    6c0c:	ldr	r3, [r5, #8]
    6c10:	mov	r2, #0
    6c14:	str	r2, [r3, #28]
    6c18:	ldr	r3, [r5, #8]
    6c1c:	ldr	r2, [r3, #4]
    6c20:	cmp	r2, #0
    6c24:	beq	6d94 <get_piconet@@Base+0x530>
    6c28:	mov	lr, #0
    6c2c:	mov	r7, lr
    6c30:	mov	ip, lr
    6c34:	b	6d80 <get_piconet@@Base+0x51c>
    6c38:	ldr	r3, [pc, #456]	; 6e08 <get_piconet@@Base+0x5a4>
    6c3c:	add	r3, pc, r3
    6c40:	str	r0, [r3, #8]
    6c44:	mov	r3, #0
    6c48:	str	r3, [r0, #12]
    6c4c:	mov	r0, #44	; 0x2c
    6c50:	bl	22c8 <malloc@plt>
    6c54:	mov	r4, r0
    6c58:	str	r0, [r5, #8]
    6c5c:	cmp	r0, #0
    6c60:	beq	6ccc <get_piconet@@Base+0x468>
    6c64:	mov	r0, #0
    6c68:	mov	r1, #0
    6c6c:	strd	r0, [r4, #12]
    6c70:	strd	r0, [r4, #20]
    6c74:	strd	r0, [r4, #28]
    6c78:	strd	r0, [r4, #36]	; 0x24
    6c7c:	add	r3, r5, #8
    6c80:	str	r3, [r4, #16]
    6c84:	mov	r3, #32
    6c88:	str	r3, [r4, #4]
    6c8c:	mov	r3, #5
    6c90:	str	r3, [r4, #8]
    6c94:	mov	r3, #8
    6c98:	str	r3, [r4, #20]
    6c9c:	mov	r0, #384	; 0x180
    6ca0:	bl	22c8 <malloc@plt>
    6ca4:	str	r0, [r4]
    6ca8:	cmp	r0, #0
    6cac:	beq	6cd4 <get_piconet@@Base+0x470>
    6cb0:	mov	r2, #384	; 0x180
    6cb4:	mov	r1, #0
    6cb8:	bl	23c4 <memset@plt>
    6cbc:	movw	r3, #8161	; 0x1fe1
    6cc0:	movt	r3, #40977	; 0xa011
    6cc4:	str	r3, [r4, #40]	; 0x28
    6cc8:	b	6a4c <get_piconet@@Base+0x1e8>
    6ccc:	mvn	r0, #0
    6cd0:	bl	231c <exit@plt>
    6cd4:	mvn	r0, #0
    6cd8:	bl	231c <exit@plt>
    6cdc:	mvn	r0, #0
    6ce0:	bl	231c <exit@plt>
    6ce4:	str	ip, [r2, #12]
    6ce8:	ldr	r1, [r4, r3, lsl #2]
    6cec:	str	r1, [r2, #16]
    6cf0:	cmp	r1, #0
    6cf4:	strne	r2, [r1, #12]
    6cf8:	str	r2, [r4, r3, lsl #2]
    6cfc:	mov	r2, r0
    6d00:	cmp	r0, #0
    6d04:	beq	6d68 <get_piconet@@Base+0x504>
    6d08:	ldr	r0, [r2, #16]
    6d0c:	ldr	r1, [r5, #8]
    6d10:	ldr	r3, [r1, #4]
    6d14:	lsl	r3, r3, #1
    6d18:	sub	r3, r3, #1
    6d1c:	ldr	r8, [r2, #28]
    6d20:	and	r3, r3, r8
    6d24:	add	r3, r3, r3, lsl #1
    6d28:	add	r9, r4, r3, lsl #2
    6d2c:	ldr	r8, [r9, #4]
    6d30:	add	r8, r8, #1
    6d34:	str	r8, [r9, #4]
    6d38:	ldr	sl, [r1, #24]
    6d3c:	cmp	r8, sl
    6d40:	bls	6ce4 <get_piconet@@Base+0x480>
    6d44:	ldr	r8, [r1, #28]
    6d48:	add	r8, r8, #1
    6d4c:	str	r8, [r1, #28]
    6d50:	ldr	r8, [r5, #8]
    6d54:	ldr	r1, [r9, #4]
    6d58:	ldr	r8, [r8, #24]
    6d5c:	udiv	r1, r1, r8
    6d60:	str	r1, [r9, #8]
    6d64:	b	6ce4 <get_piconet@@Base+0x480>
    6d68:	add	r7, r7, #1
    6d6c:	ldr	r3, [r5, #8]
    6d70:	add	lr, lr, #12
    6d74:	ldr	r2, [r3, #4]
    6d78:	cmp	r2, r7
    6d7c:	bls	6d94 <get_piconet@@Base+0x530>
    6d80:	ldr	r3, [r3]
    6d84:	ldr	r2, [r3, lr]
    6d88:	cmp	r2, #0
    6d8c:	bne	6d08 <get_piconet@@Base+0x4a4>
    6d90:	b	6d68 <get_piconet@@Base+0x504>
    6d94:	ldr	r0, [r3]
    6d98:	bl	2148 <free@plt>
    6d9c:	ldr	r2, [r5, #8]
    6da0:	ldr	r3, [r2, #4]
    6da4:	lsl	r3, r3, #1
    6da8:	str	r3, [r2, #4]
    6dac:	ldr	r2, [r5, #8]
    6db0:	ldr	r3, [r2, #8]
    6db4:	add	r3, r3, #1
    6db8:	str	r3, [r2, #8]
    6dbc:	ldr	r3, [r5, #8]
    6dc0:	str	r4, [r3]
    6dc4:	ldr	r3, [r5, #8]
    6dc8:	ldr	r1, [r3, #12]
    6dcc:	ldr	r2, [r3, #28]
    6dd0:	cmp	r2, r1, lsr #1
    6dd4:	ldrhi	r2, [r3, #32]
    6dd8:	addhi	r2, r2, #1
    6ddc:	movls	r2, #0
    6de0:	str	r2, [r3, #32]
    6de4:	ldr	r3, [r5, #8]
    6de8:	ldr	r2, [r3, #32]
    6dec:	cmp	r2, #1
    6df0:	movhi	r2, #1
    6df4:	strhi	r2, [r3, #36]	; 0x24
    6df8:	b	69b0 <get_piconet@@Base+0x14c>
    6dfc:	andeq	r2, r2, r0, lsr #18
    6e00:	muleq	r2, r4, r7
    6e04:	andeq	r2, r2, r4, asr r7
    6e08:	andeq	r2, r2, r8, ror #10

00006e0c <btbb_next_survey_result@@Base>:
    6e0c:	str	r4, [sp, #-8]!
    6e10:	str	lr, [sp, #4]
    6e14:	ldr	r3, [pc, #56]	; 6e54 <btbb_next_survey_result@@Base+0x48>
    6e18:	add	r3, pc, r3
    6e1c:	ldr	r0, [r3, #8]
    6e20:	cmp	r0, #0
    6e24:	moveq	r4, r0
    6e28:	beq	6e44 <btbb_next_survey_result@@Base+0x38>
    6e2c:	ldr	r4, [r0, #4]
    6e30:	ldr	r2, [r0, #16]
    6e34:	ldr	r3, [pc, #28]	; 6e58 <btbb_next_survey_result@@Base+0x4c>
    6e38:	add	r3, pc, r3
    6e3c:	str	r2, [r3, #8]
    6e40:	bl	2148 <free@plt>
    6e44:	mov	r0, r4
    6e48:	ldr	r4, [sp]
    6e4c:	add	sp, sp, #4
    6e50:	pop	{pc}		; (ldr pc, [sp], #4)
    6e54:	andeq	r2, r2, ip, lsl #7
    6e58:	andeq	r2, r2, ip, ror #6

00006e5c <btbb_process_packet@@Base>:
    6e5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6e60:	strd	r6, [sp, #8]
    6e64:	str	r8, [sp, #16]
    6e68:	str	lr, [sp, #20]
    6e6c:	mov	r6, r0
    6e70:	ldr	r3, [pc, #412]	; 7014 <btbb_process_packet@@Base+0x1b8>
    6e74:	add	r3, pc, r3
    6e78:	ldr	r4, [r3]
    6e7c:	cmp	r4, #0
    6e80:	bne	6ecc <btbb_process_packet@@Base+0x70>
    6e84:	mov	r5, r1
    6e88:	cmp	r1, #0
    6e8c:	beq	6eb4 <btbb_process_packet@@Base+0x58>
    6e90:	ldrb	r1, [r0, #8]
    6e94:	mov	r0, r5
    6e98:	bl	2238 <btbb_piconet_set_channel_seen@plt>
    6e9c:	mov	r1, #3
    6ea0:	mov	r0, r5
    6ea4:	bl	21f0 <btbb_piconet_get_flag@plt>
    6ea8:	cmp	r0, #0
    6eac:	moveq	r4, r0
    6eb0:	bne	6f18 <btbb_process_packet@@Base+0xbc>
    6eb4:	mov	r0, r4
    6eb8:	ldrd	r4, [sp]
    6ebc:	ldrd	r6, [sp, #8]
    6ec0:	ldr	r8, [sp, #16]
    6ec4:	add	sp, sp, #20
    6ec8:	pop	{pc}		; (ldr pc, [sp], #4)
    6ecc:	bl	23f4 <btbb_packet_get_lap@plt>
    6ed0:	bl	2424 <get_piconet@plt>
    6ed4:	mov	r5, r0
    6ed8:	ldrb	r1, [r6, #8]
    6edc:	bl	2238 <btbb_piconet_set_channel_seen@plt>
    6ee0:	mov	r0, r6
    6ee4:	bl	21e4 <btbb_header_present@plt>
    6ee8:	subs	r4, r0, #0
    6eec:	beq	6eb4 <btbb_process_packet@@Base+0x58>
    6ef0:	mov	r1, #2
    6ef4:	mov	r0, r5
    6ef8:	bl	21f0 <btbb_piconet_get_flag@plt>
    6efc:	subs	r4, r0, #0
    6f00:	movne	r4, #0
    6f04:	bne	6eb4 <btbb_process_packet@@Base+0x58>
    6f08:	mov	r1, r5
    6f0c:	mov	r0, r6
    6f10:	bl	2178 <btbb_uap_from_header@plt>
    6f14:	b	6eb4 <btbb_process_packet@@Base+0x58>
    6f18:	mov	r0, r6
    6f1c:	bl	21e4 <btbb_header_present@plt>
    6f20:	cmp	r0, #0
    6f24:	moveq	r4, r0
    6f28:	beq	6eb4 <btbb_process_packet@@Base+0x58>
    6f2c:	mov	r1, #14
    6f30:	mov	r0, r5
    6f34:	bl	21f0 <btbb_piconet_get_flag@plt>
    6f38:	subs	r7, r0, #0
    6f3c:	beq	6fa4 <btbb_process_packet@@Base+0x148>
    6f40:	mov	r0, r5
    6f44:	bl	21a8 <btbb_piconet_get_uap@plt>
    6f48:	mov	r1, r0
    6f4c:	mov	r0, r6
    6f50:	bl	2250 <btbb_packet_set_uap@plt>
    6f54:	mov	r2, #1
    6f58:	mov	r1, #4
    6f5c:	mov	r0, r6
    6f60:	bl	2130 <btbb_packet_set_flag@plt>
    6f64:	mov	r2, #1
    6f68:	mov	r1, #5
    6f6c:	mov	r0, r6
    6f70:	bl	2130 <btbb_packet_set_flag@plt>
    6f74:	mov	r0, r6
    6f78:	bl	228c <btbb_decode@plt>
    6f7c:	subs	r5, r0, #0
    6f80:	beq	6f90 <btbb_process_packet@@Base+0x134>
    6f84:	mov	r0, r6
    6f88:	bl	24a8 <btbb_print_packet@plt>
    6f8c:	b	6eb4 <btbb_process_packet@@Base+0x58>
    6f90:	ldr	r0, [pc, #128]	; 7018 <btbb_process_packet@@Base+0x1bc>
    6f94:	add	r0, pc, r0
    6f98:	bl	22bc <puts@plt>
    6f9c:	mov	r4, r5
    6fa0:	b	6eb4 <btbb_process_packet@@Base+0x58>
    6fa4:	mov	r0, r5
    6fa8:	bl	21a8 <btbb_piconet_get_uap@plt>
    6fac:	cmp	r0, #0
    6fb0:	beq	7000 <btbb_process_packet@@Base+0x1a4>
    6fb4:	mov	r1, r5
    6fb8:	mov	r0, r6
    6fbc:	bl	22d4 <try_hop@plt>
    6fc0:	mov	r1, #4
    6fc4:	mov	r0, r5
    6fc8:	bl	21f0 <btbb_piconet_get_flag@plt>
    6fcc:	subs	r4, r0, #0
    6fd0:	beq	6eb4 <btbb_process_packet@@Base+0x58>
    6fd4:	mov	r1, #5
    6fd8:	mov	r0, r5
    6fdc:	bl	21f0 <btbb_piconet_get_flag@plt>
    6fe0:	subs	r4, r0, #0
    6fe4:	beq	6eb4 <btbb_process_packet@@Base+0x58>
    6fe8:	mov	r2, #1
    6fec:	mov	r1, #14
    6ff0:	mov	r0, r5
    6ff4:	bl	2214 <btbb_piconet_set_flag@plt>
    6ff8:	mvn	r4, #0
    6ffc:	b	6eb4 <btbb_process_packet@@Base+0x58>
    7000:	mov	r1, r5
    7004:	mov	r0, r6
    7008:	bl	2178 <btbb_uap_from_header@plt>
    700c:	mov	r4, r7
    7010:	b	6eb4 <btbb_process_packet@@Base+0x58>
    7014:	andeq	r2, r2, r0, lsr r3
    7018:	andeq	fp, r0, r8, lsl fp
    701c:	andeq	r0, r0, r0
    7020:	strd	r4, [sp, #-36]!	; 0xffffffdc
    7024:	strd	r6, [sp, #8]
    7028:	strd	r8, [sp, #16]
    702c:	strd	sl, [sp, #24]
    7030:	str	lr, [sp, #32]
    7034:	sub	sp, sp, #580	; 0x244
    7038:	mov	r4, r0
    703c:	uxtb	r5, r0
    7040:	ldr	r6, [pc, #1080]	; 7480 <btbb_process_packet@@Base+0x624>
    7044:	add	r6, pc, r6
    7048:	mov	r7, #256	; 0x100
    704c:	mov	r2, r7
    7050:	mov	r1, r6
    7054:	add	r0, sp, #320	; 0x140
    7058:	bl	216c <memcpy@plt>
    705c:	mov	r2, r7
    7060:	add	r1, r6, r7
    7064:	add	r0, sp, #64	; 0x40
    7068:	bl	216c <memcpy@plt>
    706c:	tst	r4, #1
    7070:	add	r3, sp, #576	; 0x240
    7074:	uxtab	r3, r3, r4
    7078:	ldrbne	r2, [r3, #-512]	; 0xfffffe00
    707c:	ldrbeq	r2, [r3, #-256]	; 0xffffff00
    7080:	lsr	r3, r4, #8
    7084:	uxtb	ip, r3
    7088:	tst	r4, #128	; 0x80
    708c:	add	r1, sp, #576	; 0x240
    7090:	uxtab	r1, r1, r3
    7094:	ldrbne	lr, [r1, #-512]	; 0xfffffe00
    7098:	ldrbeq	lr, [r1, #-256]	; 0xffffff00
    709c:	add	r2, r2, lr
    70a0:	lsr	r1, r4, #16
    70a4:	uxtb	r7, r1
    70a8:	tst	r3, #128	; 0x80
    70ac:	add	r3, sp, #576	; 0x240
    70b0:	uxtab	r3, r3, r1
    70b4:	ldrbne	lr, [r3, #-512]	; 0xfffffe00
    70b8:	ldrbeq	lr, [r3, #-256]	; 0xffffff00
    70bc:	add	r2, lr, r2
    70c0:	lsr	r3, r4, #24
    70c4:	uxtb	r6, r3
    70c8:	tst	r1, #128	; 0x80
    70cc:	add	r1, sp, #576	; 0x240
    70d0:	add	r3, r1, r3
    70d4:	ldrbne	lr, [r3, #-512]	; 0xfffffe00
    70d8:	ldrbeq	lr, [r3, #-256]	; 0xffffff00
    70dc:	add	lr, lr, r2
    70e0:	cmp	lr, #24
    70e4:	subgt	lr, lr, #24
    70e8:	movle	lr, #0
    70ec:	mov	r0, sp
    70f0:	ldr	r1, [pc, #908]	; 7484 <btbb_process_packet@@Base+0x628>
    70f4:	add	r1, pc, r1
    70f8:	add	r1, r1, #512	; 0x200
    70fc:	ldrd	r2, [r1]
    7100:	strd	r2, [r0]
    7104:	ldrd	r2, [r1, #8]
    7108:	strd	r2, [r0, #8]
    710c:	ldrd	r2, [r1, #16]
    7110:	strd	r2, [r0, #16]
    7114:	ldrd	r2, [r1, #24]
    7118:	strd	r2, [r0, #24]
    711c:	ldrd	r2, [r1, #32]
    7120:	strd	r2, [r0, #32]
    7124:	ldrd	r2, [r1, #40]	; 0x28
    7128:	strd	r2, [r0, #40]	; 0x28
    712c:	ldrd	r2, [r1, #48]	; 0x30
    7130:	strd	r2, [r0, #48]	; 0x30
    7134:	ldrd	r2, [r1, #56]	; 0x38
    7138:	strd	r2, [r0, #56]	; 0x38
    713c:	add	r3, sp, #576	; 0x240
    7140:	add	r3, r3, r6, lsr #2
    7144:	ldrb	r0, [r3, #-576]	; 0xfffffdc0
    7148:	rsb	r0, r0, #1
    714c:	add	lr, r0, lr
    7150:	cmp	r5, ip
    7154:	cmpeq	r5, r7
    7158:	moveq	ip, #1
    715c:	movne	ip, #0
    7160:	cmp	r5, r6
    7164:	movne	r5, #0
    7168:	andeq	r5, ip, #1
    716c:	add	lr, r5, lr
    7170:	movw	r3, #48854	; 0xbed6
    7174:	movt	r3, #36489	; 0x8e89
    7178:	cmp	r4, r3
    717c:	moveq	r0, #1
    7180:	movne	r0, #0
    7184:	add	lr, r0, lr
    7188:	eor	r3, r3, r4
    718c:	beq	71e0 <btbb_process_packet@@Base+0x384>
    7190:	mov	r0, #0
    7194:	sub	r2, r3, #1
    7198:	add	r0, r0, #1
    719c:	uxtb	r0, r0
    71a0:	ands	r3, r3, r2
    71a4:	bne	7194 <btbb_process_packet@@Base+0x338>
    71a8:	cmp	r0, #1
    71ac:	movne	r0, lr
    71b0:	addeq	r0, lr, #1
    71b4:	mov	r2, #0
    71b8:	movw	sl, #1793	; 0x701
    71bc:	movw	r9, #3587	; 0xe03
    71c0:	movw	r8, #3580	; 0xdfc
    71c4:	movw	r7, #3326	; 0xcfe
    71c8:	movw	r6, #3329	; 0xd01
    71cc:	movw	r5, #2563	; 0xa03
    71d0:	movw	lr, #2036	; 0x7f4
    71d4:	movw	ip, #1790	; 0x6fe
    71d8:	movw	r1, #769	; 0x301
    71dc:	b	728c <btbb_process_packet@@Base+0x430>
    71e0:	mov	r0, #0
    71e4:	b	71a8 <btbb_process_packet@@Base+0x34c>
    71e8:	cmp	r3, ip
    71ec:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    71f0:	cmp	r3, r1
    71f4:	bls	722c <btbb_process_packet@@Base+0x3d0>
    71f8:	movw	fp, #1281	; 0x501
    71fc:	cmp	r3, fp
    7200:	bhi	7324 <btbb_process_packet@@Base+0x4c8>
    7204:	movw	fp, #1278	; 0x4fe
    7208:	cmp	r3, fp
    720c:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    7210:	cmp	r3, #1024	; 0x400
    7214:	bhi	7300 <btbb_process_packet@@Base+0x4a4>
    7218:	cmp	r3, #1016	; 0x3f8
    721c:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    7220:	cmp	r3, #896	; 0x380
    7224:	bne	7280 <btbb_process_packet@@Base+0x424>
    7228:	b	72f8 <btbb_process_packet@@Base+0x49c>
    722c:	movw	fp, #766	; 0x2fe
    7230:	cmp	r3, fp
    7234:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    7238:	movw	fp, #257	; 0x101
    723c:	cmp	r3, fp
    7240:	bls	7260 <btbb_process_packet@@Base+0x404>
    7244:	cmp	r3, #512	; 0x200
    7248:	bcs	72e0 <btbb_process_packet@@Base+0x484>
    724c:	cmp	r3, #508	; 0x1fc
    7250:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    7254:	cmp	r3, #384	; 0x180
    7258:	bne	7280 <btbb_process_packet@@Base+0x424>
    725c:	b	72f8 <btbb_process_packet@@Base+0x49c>
    7260:	cmp	r3, #254	; 0xfe
    7264:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    7268:	cmp	r3, #31
    726c:	bls	72f8 <btbb_process_packet@@Base+0x49c>
    7270:	sub	r3, r3, #127	; 0x7f
    7274:	uxth	r3, r3
    7278:	cmp	r3, #1
    727c:	bls	72f8 <btbb_process_packet@@Base+0x49c>
    7280:	add	r2, r2, #4
    7284:	cmp	r2, #24
    7288:	beq	7464 <btbb_process_packet@@Base+0x608>
    728c:	lsr	r3, r4, r2
    7290:	ubfx	r3, r3, #0, #12
    7294:	cmp	r3, sl
    7298:	bls	71e8 <btbb_process_packet@@Base+0x38c>
    729c:	cmp	r3, #2944	; 0xb80
    72a0:	beq	72f8 <btbb_process_packet@@Base+0x49c>
    72a4:	bls	7364 <btbb_process_packet@@Base+0x508>
    72a8:	cmp	r3, r9
    72ac:	bhi	7414 <btbb_process_packet@@Base+0x5b8>
    72b0:	cmp	r3, r8
    72b4:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    72b8:	cmp	r3, #3200	; 0xc80
    72bc:	beq	72f8 <btbb_process_packet@@Base+0x49c>
    72c0:	bls	73fc <btbb_process_packet@@Base+0x5a0>
    72c4:	cmp	r3, r7
    72c8:	bcc	7280 <btbb_process_packet@@Base+0x424>
    72cc:	cmp	r3, r6
    72d0:	bls	72f8 <btbb_process_packet@@Base+0x49c>
    72d4:	cmp	r3, #3456	; 0xd80
    72d8:	bne	7280 <btbb_process_packet@@Base+0x424>
    72dc:	b	72f8 <btbb_process_packet@@Base+0x49c>
    72e0:	cmp	r3, #512	; 0x200
    72e4:	bls	7280 <btbb_process_packet@@Base+0x424>
    72e8:	cmp	r3, #516	; 0x204
    72ec:	bcc	72f8 <btbb_process_packet@@Base+0x49c>
    72f0:	cmp	r3, #640	; 0x280
    72f4:	bne	7280 <btbb_process_packet@@Base+0x424>
    72f8:	add	r0, r0, #1
    72fc:	b	7280 <btbb_process_packet@@Base+0x424>
    7300:	movw	fp, #1026	; 0x402
    7304:	cmp	r3, fp
    7308:	bcc	7280 <btbb_process_packet@@Base+0x424>
    730c:	movw	fp, #1031	; 0x407
    7310:	cmp	r3, fp
    7314:	bls	72f8 <btbb_process_packet@@Base+0x49c>
    7318:	cmp	r3, #1152	; 0x480
    731c:	bne	7280 <btbb_process_packet@@Base+0x424>
    7320:	b	72f8 <btbb_process_packet@@Base+0x49c>
    7324:	cmp	r3, #1536	; 0x600
    7328:	bcs	7344 <btbb_process_packet@@Base+0x4e8>
    732c:	movw	fp, #1532	; 0x5fc
    7330:	cmp	r3, fp
    7334:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    7338:	cmp	r3, #1408	; 0x580
    733c:	bne	7280 <btbb_process_packet@@Base+0x424>
    7340:	b	72f8 <btbb_process_packet@@Base+0x49c>
    7344:	cmp	r3, #1536	; 0x600
    7348:	bls	7280 <btbb_process_packet@@Base+0x424>
    734c:	movw	fp, #1539	; 0x603
    7350:	cmp	r3, fp
    7354:	bls	72f8 <btbb_process_packet@@Base+0x49c>
    7358:	cmp	r3, #1664	; 0x680
    735c:	bne	7280 <btbb_process_packet@@Base+0x424>
    7360:	b	72f8 <btbb_process_packet@@Base+0x49c>
    7364:	cmp	r3, #2432	; 0x980
    7368:	beq	72f8 <btbb_process_packet@@Base+0x49c>
    736c:	bhi	73b0 <btbb_process_packet@@Base+0x554>
    7370:	cmp	r3, #2064	; 0x810
    7374:	bcs	738c <btbb_process_packet@@Base+0x530>
    7378:	cmp	r3, lr
    737c:	bcs	72f8 <btbb_process_packet@@Base+0x49c>
    7380:	cmp	r3, #1920	; 0x780
    7384:	bne	7280 <btbb_process_packet@@Base+0x424>
    7388:	b	72f8 <btbb_process_packet@@Base+0x49c>
    738c:	cmp	r3, #2176	; 0x880
    7390:	beq	72f8 <btbb_process_packet@@Base+0x49c>
    7394:	bcc	7280 <btbb_process_packet@@Base+0x424>
    7398:	sub	r3, r3, #2288	; 0x8f0
    739c:	sub	r3, r3, #14
    73a0:	uxth	r3, r3
    73a4:	cmp	r3, #3
    73a8:	bhi	7280 <btbb_process_packet@@Base+0x424>
    73ac:	b	72f8 <btbb_process_packet@@Base+0x49c>
    73b0:	cmp	r3, r5
    73b4:	bhi	73d8 <btbb_process_packet@@Base+0x57c>
    73b8:	cmp	r3, #2560	; 0xa00
    73bc:	bhi	72f8 <btbb_process_packet@@Base+0x49c>
    73c0:	sub	r3, r3, #2544	; 0x9f0
    73c4:	sub	r3, r3, #12
    73c8:	uxth	r3, r3
    73cc:	cmp	r3, #3
    73d0:	bhi	7280 <btbb_process_packet@@Base+0x424>
    73d4:	b	72f8 <btbb_process_packet@@Base+0x49c>
    73d8:	cmp	r3, #2688	; 0xa80
    73dc:	beq	72f8 <btbb_process_packet@@Base+0x49c>
    73e0:	bcc	7280 <btbb_process_packet@@Base+0x424>
    73e4:	sub	r3, r3, #2800	; 0xaf0
    73e8:	sub	r3, r3, #14
    73ec:	uxth	r3, r3
    73f0:	cmp	r3, #3
    73f4:	bhi	7280 <btbb_process_packet@@Base+0x424>
    73f8:	b	72f8 <btbb_process_packet@@Base+0x49c>
    73fc:	sub	r3, r3, #3056	; 0xbf0
    7400:	sub	r3, r3, #8
    7404:	uxth	r3, r3
    7408:	cmp	r3, #15
    740c:	bhi	7280 <btbb_process_packet@@Base+0x424>
    7410:	b	72f8 <btbb_process_packet@@Base+0x49c>
    7414:	cmp	r3, #3968	; 0xf80
    7418:	beq	72f8 <btbb_process_packet@@Base+0x49c>
    741c:	bhi	7444 <btbb_process_packet@@Base+0x5e8>
    7420:	cmp	r3, #3712	; 0xe80
    7424:	beq	72f8 <btbb_process_packet@@Base+0x49c>
    7428:	bcc	7280 <btbb_process_packet@@Base+0x424>
    742c:	sub	r3, r3, #3824	; 0xef0
    7430:	sub	r3, r3, #14
    7434:	uxth	r3, r3
    7438:	cmp	r3, #3
    743c:	bhi	7280 <btbb_process_packet@@Base+0x424>
    7440:	b	72f8 <btbb_process_packet@@Base+0x49c>
    7444:	cmp	r3, #4064	; 0xfe0
    7448:	beq	72f8 <btbb_process_packet@@Base+0x49c>
    744c:	bcc	7280 <btbb_process_packet@@Base+0x424>
    7450:	sub	r3, r3, #4080	; 0xff0
    7454:	uxth	r3, r3
    7458:	cmp	r3, #15
    745c:	bhi	7280 <btbb_process_packet@@Base+0x424>
    7460:	b	72f8 <btbb_process_packet@@Base+0x49c>
    7464:	add	sp, sp, #580	; 0x244
    7468:	ldrd	r4, [sp]
    746c:	ldrd	r6, [sp, #8]
    7470:	ldrd	r8, [sp, #16]
    7474:	ldrd	sl, [sp, #24]
    7478:	add	sp, sp, #32
    747c:	pop	{pc}		; (ldr pc, [sp], #4)
    7480:	andeq	fp, r0, r0, lsl #21
    7484:	ldrdeq	fp, [r0], -r0
    7488:	strd	r4, [sp, #-24]!	; 0xffffffe8
    748c:	strd	r6, [sp, #8]
    7490:	str	r8, [sp, #16]
    7494:	str	lr, [sp, #20]
    7498:	mov	r5, r1
    749c:	mov	r6, r2
    74a0:	mov	r7, r3
    74a4:	add	r3, r2, #5
    74a8:	add	r4, r1, r3
    74ac:	ldrb	r2, [r1, r3]
    74b0:	mov	r1, r0
    74b4:	ldr	r0, [pc, #96]	; 751c <btbb_process_packet@@Base+0x6c0>
    74b8:	add	r0, pc, r0
    74bc:	bl	2100 <printf@plt>
    74c0:	add	r5, r5, r6
    74c4:	ldr	r6, [pc, #84]	; 7520 <btbb_process_packet@@Base+0x6c4>
    74c8:	add	r6, pc, r6
    74cc:	ldrb	r1, [r4, #-1]!
    74d0:	mov	r0, r6
    74d4:	bl	2100 <printf@plt>
    74d8:	cmp	r4, r5
    74dc:	bne	74cc <btbb_process_packet@@Base+0x670>
    74e0:	cmp	r7, #0
    74e4:	bne	7510 <btbb_process_packet@@Base+0x6b4>
    74e8:	ldr	r1, [pc, #52]	; 7524 <btbb_process_packet@@Base+0x6c8>
    74ec:	add	r1, pc, r1
    74f0:	ldr	r0, [pc, #48]	; 7528 <btbb_process_packet@@Base+0x6cc>
    74f4:	add	r0, pc, r0
    74f8:	bl	2100 <printf@plt>
    74fc:	ldrd	r4, [sp]
    7500:	ldrd	r6, [sp, #8]
    7504:	ldr	r8, [sp, #16]
    7508:	add	sp, sp, #20
    750c:	pop	{pc}		; (ldr pc, [sp], #4)
    7510:	ldr	r1, [pc, #20]	; 752c <btbb_process_packet@@Base+0x6d0>
    7514:	add	r1, pc, r1
    7518:	b	74f0 <btbb_process_packet@@Base+0x694>
    751c:	andeq	fp, r0, ip, asr r8
    7520:	andeq	fp, r0, r8, asr r8
    7524:	andeq	fp, r0, r0, lsr #16
    7528:	andeq	fp, r0, r4, lsr r8
    752c:	strdeq	fp, [r0], -r0
    7530:	str	r4, [sp, #-8]!
    7534:	str	lr, [sp, #4]
    7538:	add	r3, r1, r2
    753c:	ldrb	r3, [r3, #1]
    7540:	ldrb	r2, [r1, r2]
    7544:	orr	r2, r2, r3, lsl #8
    7548:	mov	r3, r2
    754c:	mov	r1, r0
    7550:	ldr	r0, [pc, #16]	; 7568 <btbb_process_packet@@Base+0x70c>
    7554:	add	r0, pc, r0
    7558:	bl	2100 <printf@plt>
    755c:	ldr	r4, [sp]
    7560:	add	sp, sp, #4
    7564:	pop	{pc}		; (ldr pc, [sp], #4)
    7568:	ldrdeq	fp, [r0], -ip
    756c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    7570:	strd	r6, [sp, #8]
    7574:	strd	r8, [sp, #16]
    7578:	strd	sl, [sp, #24]
    757c:	str	lr, [sp, #32]
    7580:	vpush	{d8}
    7584:	sub	sp, sp, #36	; 0x24
    7588:	subs	r9, r1, #0
    758c:	ble	7600 <btbb_process_packet@@Base+0x7a4>
    7590:	mov	r7, r0
    7594:	ldrb	r4, [r0]
    7598:	add	r5, r4, #1
    759c:	cmp	r9, r5
    75a0:	blt	75e4 <btbb_process_packet@@Base+0x788>
    75a4:	cmp	r4, #0
    75a8:	beq	7620 <btbb_process_packet@@Base+0x7c4>
    75ac:	mov	sl, #1
    75b0:	mov	r8, #0
    75b4:	mov	fp, r8
    75b8:	ldr	r3, [pc, #1032]	; 79c8 <btbb_process_packet@@Base+0xb6c>
    75bc:	add	r3, pc, r3
    75c0:	str	r3, [sp, #4]
    75c4:	ldr	r3, [pc, #1024]	; 79cc <btbb_process_packet@@Base+0xb70>
    75c8:	add	r3, pc, r3
    75cc:	str	r3, [sp, #8]
    75d0:	ldr	r3, [pc, #1016]	; 79d0 <btbb_process_packet@@Base+0xb74>
    75d4:	add	r3, pc, r3
    75d8:	str	r3, [sp, #12]
    75dc:	vldr	d8, [pc, #988]	; 79c0 <btbb_process_packet@@Base+0xb64>
    75e0:	b	77b0 <btbb_process_packet@@Base+0x954>
    75e4:	mov	sl, #1
    75e8:	mov	r3, r9
    75ec:	mov	r2, r4
    75f0:	mov	r1, sl
    75f4:	ldr	r0, [pc, #984]	; 79d4 <btbb_process_packet@@Base+0xb78>
    75f8:	add	r0, pc, r0
    75fc:	bl	2100 <printf@plt>
    7600:	add	sp, sp, #36	; 0x24
    7604:	vpop	{d8}
    7608:	ldrd	r4, [sp]
    760c:	ldrd	r6, [sp, #8]
    7610:	ldrd	r8, [sp, #16]
    7614:	ldrd	sl, [sp, #24]
    7618:	add	sp, sp, #32
    761c:	pop	{pc}		; (ldr pc, [sp], #4)
    7620:	ldr	r0, [pc, #944]	; 79d8 <btbb_process_packet@@Base+0xb7c>
    7624:	add	r0, pc, r0
    7628:	bl	22bc <puts@plt>
    762c:	b	7600 <btbb_process_packet@@Base+0x7a4>
    7630:	cmp	r6, #2
    7634:	beq	7768 <btbb_process_packet@@Base+0x90c>
    7638:	bls	7674 <btbb_process_packet@@Base+0x818>
    763c:	cmp	r6, #3
    7640:	beq	7820 <btbb_process_packet@@Base+0x9c4>
    7644:	cmp	r6, #6
    7648:	bne	7cac <btbb_process_packet@@Base+0xe50>
    764c:	ldr	r0, [pc, #904]	; 79dc <btbb_process_packet@@Base+0xb80>
    7650:	add	r0, pc, r0
    7654:	bl	22bc <puts@plt>
    7658:	sub	r1, r4, #1
    765c:	tst	r1, #15
    7660:	beq	7880 <btbb_process_packet@@Base+0xa24>
    7664:	ldr	r0, [pc, #884]	; 79e0 <btbb_process_packet@@Base+0xb84>
    7668:	add	r0, pc, r0
    766c:	bl	2100 <printf@plt>
    7670:	b	7780 <btbb_process_packet@@Base+0x924>
    7674:	cmp	r6, #1
    7678:	bne	7cac <btbb_process_packet@@Base+0xe50>
    767c:	ldr	r0, [pc, #864]	; 79e4 <btbb_process_packet@@Base+0xb88>
    7680:	add	r0, pc, r0
    7684:	bl	22bc <puts@plt>
    7688:	ldr	r0, [pc, #856]	; 79e8 <btbb_process_packet@@Base+0xb8c>
    768c:	add	r0, pc, r0
    7690:	bl	2100 <printf@plt>
    7694:	mov	r4, #7
    7698:	add	fp, fp, #2
    769c:	add	fp, r7, fp
    76a0:	ldr	r6, [pc, #836]	; 79ec <btbb_process_packet@@Base+0xb90>
    76a4:	add	r6, pc, r6
    76a8:	ldrb	r1, [fp]
    76ac:	asr	r1, r1, r4
    76b0:	and	r1, r1, #1
    76b4:	mov	r0, r6
    76b8:	bl	2100 <printf@plt>
    76bc:	sub	r4, r4, #1
    76c0:	cmn	r4, #1
    76c4:	bne	76a8 <btbb_process_packet@@Base+0x84c>
    76c8:	mov	r0, #10
    76cc:	bl	23d0 <putchar@plt>
    76d0:	mov	r4, #0
    76d4:	ldr	r8, [pc, #788]	; 79f0 <btbb_process_packet@@Base+0xb94>
    76d8:	add	r8, pc, r8
    76dc:	ldr	r6, [pc, #784]	; 79f4 <btbb_process_packet@@Base+0xb98>
    76e0:	add	r6, pc, r6
    76e4:	b	7748 <btbb_process_packet@@Base+0x8ec>
    76e8:	cmp	r6, #22
    76ec:	beq	7b88 <btbb_process_packet@@Base+0xd2c>
    76f0:	cmp	r6, #255	; 0xff
    76f4:	bne	7cac <btbb_process_packet@@Base+0xe50>
    76f8:	ldr	r0, [pc, #760]	; 79f8 <btbb_process_packet@@Base+0xb9c>
    76fc:	add	r0, pc, r0
    7700:	bl	22bc <puts@plt>
    7704:	ldr	r0, [pc, #752]	; 79fc <btbb_process_packet@@Base+0xba0>
    7708:	add	r0, pc, r0
    770c:	bl	2100 <printf@plt>
    7710:	cmp	r4, #2
    7714:	bgt	7c2c <btbb_process_packet@@Base+0xdd0>
    7718:	sub	r1, r4, #1
    771c:	ldr	r0, [pc, #732]	; 7a00 <btbb_process_packet@@Base+0xba4>
    7720:	add	r0, pc, r0
    7724:	bl	2100 <printf@plt>
    7728:	b	7780 <btbb_process_packet@@Base+0x924>
    772c:	mov	r0, r8
    7730:	bl	2100 <printf@plt>
    7734:	ldr	r0, [r6, r4, lsl #2]
    7738:	bl	22bc <puts@plt>
    773c:	add	r4, r4, #1
    7740:	cmp	r4, #8
    7744:	beq	775c <btbb_process_packet@@Base+0x900>
    7748:	ldrb	r3, [fp]
    774c:	asr	r3, r3, r4
    7750:	tst	r3, #1
    7754:	beq	773c <btbb_process_packet@@Base+0x8e0>
    7758:	b	772c <btbb_process_packet@@Base+0x8d0>
    775c:	mov	r0, #10
    7760:	bl	23d0 <putchar@plt>
    7764:	b	7780 <btbb_process_packet@@Base+0x924>
    7768:	ldr	r0, [pc, #660]	; 7a04 <btbb_process_packet@@Base+0xba8>
    776c:	add	r0, pc, r0
    7770:	bl	22bc <puts@plt>
    7774:	sub	r3, r4, #1
    7778:	tst	r3, #1
    777c:	beq	7830 <btbb_process_packet@@Base+0x9d4>
    7780:	cmp	r9, r5
    7784:	ble	7600 <btbb_process_packet@@Base+0x7a4>
    7788:	mov	fp, r5
    778c:	ldrb	r4, [r7, r5]
    7790:	add	sl, r5, #1
    7794:	add	r3, r4, sl
    7798:	cmp	r3, r9
    779c:	bgt	75e8 <btbb_process_packet@@Base+0x78c>
    77a0:	mov	r8, r5
    77a4:	cmp	r4, #0
    77a8:	beq	7620 <btbb_process_packet@@Base+0x7c4>
    77ac:	mov	r5, r3
    77b0:	str	sl, [sp]
    77b4:	ldrb	r6, [r7, sl]
    77b8:	mov	r1, r6
    77bc:	ldr	r0, [sp, #4]
    77c0:	bl	2100 <printf@plt>
    77c4:	cmp	r6, #7
    77c8:	beq	7870 <btbb_process_packet@@Base+0xa14>
    77cc:	bls	7630 <btbb_process_packet@@Base+0x7d4>
    77d0:	cmp	r6, #18
    77d4:	beq	7afc <btbb_process_packet@@Base+0xca0>
    77d8:	bhi	76e8 <btbb_process_packet@@Base+0x88c>
    77dc:	cmp	r6, #9
    77e0:	beq	7a74 <btbb_process_packet@@Base+0xc18>
    77e4:	cmp	r6, #10
    77e8:	bne	7cac <btbb_process_packet@@Base+0xe50>
    77ec:	ldr	r0, [pc, #532]	; 7a08 <btbb_process_packet@@Base+0xbac>
    77f0:	add	r0, pc, r0
    77f4:	bl	22bc <puts@plt>
    77f8:	ldr	r0, [pc, #524]	; 7a0c <btbb_process_packet@@Base+0xbb0>
    77fc:	add	r0, pc, r0
    7800:	bl	2100 <printf@plt>
    7804:	cmp	r4, #2
    7808:	beq	7ae4 <btbb_process_packet@@Base+0xc88>
    780c:	sub	r1, r4, #1
    7810:	ldr	r0, [pc, #504]	; 7a10 <btbb_process_packet@@Base+0xbb4>
    7814:	add	r0, pc, r0
    7818:	bl	2100 <printf@plt>
    781c:	b	7780 <btbb_process_packet@@Base+0x924>
    7820:	ldr	r0, [pc, #492]	; 7a14 <btbb_process_packet@@Base+0xbb8>
    7824:	add	r0, pc, r0
    7828:	bl	22bc <puts@plt>
    782c:	b	7774 <btbb_process_packet@@Base+0x918>
    7830:	cmp	r3, #0
    7834:	ble	7780 <btbb_process_packet@@Base+0x924>
    7838:	add	r6, r7, r8
    783c:	sub	r4, r4, #2
    7840:	bic	r4, r4, #1
    7844:	add	r3, r7, #2
    7848:	add	r8, r3, r8
    784c:	add	r8, r4, r8
    7850:	ldr	r4, [pc, #448]	; 7a18 <btbb_process_packet@@Base+0xbbc>
    7854:	add	r4, pc, r4
    7858:	ldrh	r1, [r6, #2]!
    785c:	mov	r0, r4
    7860:	bl	2100 <printf@plt>
    7864:	cmp	r8, r6
    7868:	bne	7858 <btbb_process_packet@@Base+0x9fc>
    786c:	b	7780 <btbb_process_packet@@Base+0x924>
    7870:	ldr	r0, [pc, #420]	; 7a1c <btbb_process_packet@@Base+0xbc0>
    7874:	add	r0, pc, r0
    7878:	bl	22bc <puts@plt>
    787c:	b	7658 <btbb_process_packet@@Base+0x7fc>
    7880:	cmp	r1, #0
    7884:	ble	7780 <btbb_process_packet@@Base+0x924>
    7888:	add	r3, r7, r8
    788c:	ldrb	r3, [r3, #2]
    7890:	strb	r3, [sp, #31]
    7894:	add	r8, r8, #2
    7898:	add	r8, r7, r8
    789c:	sub	r4, r4, #1
    78a0:	mov	r6, #0
    78a4:	ldr	r3, [pc, #372]	; 7a20 <btbb_process_packet@@Base+0xbc4>
    78a8:	add	r3, pc, r3
    78ac:	str	r3, [sp]
    78b0:	b	78bc <btbb_process_packet@@Base+0xa60>
    78b4:	mov	r0, #10
    78b8:	bl	23d0 <putchar@plt>
    78bc:	add	r6, r6, #1
    78c0:	cmp	r6, r4
    78c4:	beq	7780 <btbb_process_packet@@Base+0x924>
    78c8:	rsbs	r2, r6, #0
    78cc:	and	r3, r6, #15
    78d0:	and	r2, r2, #15
    78d4:	rsbpl	r3, r2, #0
    78d8:	mvn	r3, r3
    78dc:	ldrb	r2, [r8, #1]!
    78e0:	add	r1, sp, #16
    78e4:	add	r3, r3, #16
    78e8:	strb	r2, [r1, r3]
    78ec:	and	r3, r6, #15
    78f0:	cmp	r3, #15
    78f4:	bne	78bc <btbb_process_packet@@Base+0xa60>
    78f8:	ldr	r0, [sp, #8]
    78fc:	bl	2100 <printf@plt>
    7900:	ldrb	r1, [sp, #16]
    7904:	ldr	sl, [sp, #12]
    7908:	mov	r0, sl
    790c:	bl	2100 <printf@plt>
    7910:	ldrb	r1, [sp, #17]
    7914:	mov	r0, sl
    7918:	bl	2100 <printf@plt>
    791c:	ldrb	r1, [sp, #18]
    7920:	mov	r0, sl
    7924:	bl	2100 <printf@plt>
    7928:	ldrb	r1, [sp, #19]
    792c:	mov	r0, sl
    7930:	bl	2100 <printf@plt>
    7934:	mov	r0, #45	; 0x2d
    7938:	bl	23d0 <putchar@plt>
    793c:	ldrb	r1, [sp, #20]
    7940:	mov	r0, sl
    7944:	bl	2100 <printf@plt>
    7948:	ldrb	r1, [sp, #21]
    794c:	mov	r0, sl
    7950:	bl	2100 <printf@plt>
    7954:	mov	r0, #45	; 0x2d
    7958:	bl	23d0 <putchar@plt>
    795c:	ldrb	r1, [sp, #22]
    7960:	mov	r0, sl
    7964:	bl	2100 <printf@plt>
    7968:	ldrb	r1, [sp, #23]
    796c:	mov	r0, sl
    7970:	bl	2100 <printf@plt>
    7974:	mov	r0, #45	; 0x2d
    7978:	bl	23d0 <putchar@plt>
    797c:	ldrb	r1, [sp, #24]
    7980:	mov	r0, sl
    7984:	bl	2100 <printf@plt>
    7988:	ldrb	r1, [sp, #25]
    798c:	mov	r0, sl
    7990:	bl	2100 <printf@plt>
    7994:	mov	r0, #45	; 0x2d
    7998:	bl	23d0 <putchar@plt>
    799c:	add	sl, sp, #25
    79a0:	add	fp, sp, #31
    79a4:	ldrb	r1, [sl, #1]!
    79a8:	ldr	r0, [sp]
    79ac:	bl	2100 <printf@plt>
    79b0:	cmp	fp, sl
    79b4:	bne	79a4 <btbb_process_packet@@Base+0xb48>
    79b8:	b	78b4 <btbb_process_packet@@Base+0xa58>
    79bc:	nop	{0}
    79c0:	andeq	r0, r0, r0
    79c4:	svccc	0x00f40000
    79c8:	andeq	fp, r0, r4, ror #15
    79cc:	andeq	fp, r0, r0, lsl #16
    79d0:	andeq	fp, r0, r0, lsr #17
    79d4:	andeq	fp, r0, ip, asr #14
    79d8:	andeq	fp, r0, ip, asr r7
    79dc:	ldrdeq	fp, [r0], -ip
    79e0:	andeq	fp, r0, r4, lsl r8
    79e4:	andeq	fp, r0, r4, lsr r7
    79e8:	andeq	fp, r0, ip, lsr r7
    79ec:	andeq	fp, r0, ip, lsl r7
    79f0:	andeq	fp, r0, ip, ror #13
    79f4:	andeq	r1, r2, r0, ror r7
    79f8:	andeq	fp, r0, ip, lsr #17
    79fc:	andeq	fp, r0, r0, asr #13
    7a00:	andeq	fp, r0, r4, ror #16
    7a04:	andeq	fp, r0, r8, ror #12
    7a08:	ldrdeq	fp, [r0], -r0
    7a0c:	andeq	fp, r0, ip, asr #11
    7a10:	andeq	fp, r0, r8, asr #13
    7a14:	ldrdeq	fp, [r0], -r8
    7a18:	andeq	fp, r0, r4, asr #11
    7a1c:	andeq	fp, r0, r4, ror #11
    7a20:	andeq	fp, r0, ip, asr #11
    7a24:	andeq	fp, r0, r0, lsr r4
    7a28:	andeq	fp, r0, r4, asr #6
    7a2c:	andeq	fp, r0, r4, ror #7
    7a30:	strdeq	fp, [r0], -ip
    7a34:			; <UNDEFINED> instruction: 0x0000b2bc
    7a38:	andeq	fp, r0, r4, lsl r4
    7a3c:	andeq	fp, r0, ip, asr #7
    7a40:			; <UNDEFINED> instruction: 0x0000b3b0
    7a44:	andeq	fp, r0, ip, asr #7
    7a48:	andeq	fp, r0, r0, lsr r2
    7a4c:	andeq	fp, r0, ip, lsr #7
    7a50:	muleq	r0, r8, r3
    7a54:			; <UNDEFINED> instruction: 0x0000b1b0
    7a58:	andeq	fp, r0, r4, ror #6
    7a5c:	andeq	fp, r0, r0, lsl #7
    7a60:	andeq	fp, r0, r4, ror r1
    7a64:	andeq	fp, r0, r8, ror r3
    7a68:	andeq	fp, r0, r4, lsr #2
    7a6c:	andeq	fp, r0, r0, lsl r1
    7a70:	andeq	fp, r0, ip, asr #1
    7a74:	ldr	r0, [pc, #-88]	; 7a24 <btbb_process_packet@@Base+0xbc8>
    7a78:	add	r0, pc, r0
    7a7c:	bl	22bc <puts@plt>
    7a80:	ldr	r0, [pc, #-96]	; 7a28 <btbb_process_packet@@Base+0xbcc>
    7a84:	add	r0, pc, r0
    7a88:	bl	2100 <printf@plt>
    7a8c:	cmp	r4, #1
    7a90:	ble	7ad8 <btbb_process_packet@@Base+0xc7c>
    7a94:	bl	2310 <__ctype_b_loc@plt>
    7a98:	mov	r6, r0
    7a9c:	add	sl, sl, #1
    7aa0:	add	sl, r7, sl
    7aa4:	ldr	r3, [sp]
    7aa8:	add	r4, r4, r3
    7aac:	add	r4, r7, r4
    7ab0:	ldrb	r0, [sl], #1
    7ab4:	ldr	r2, [r6]
    7ab8:	lsl	r3, r0, #1
    7abc:	ldrh	r3, [r2, r3]
    7ac0:	and	r3, r3, #16384	; 0x4000
    7ac4:	cmp	r3, #0
    7ac8:	moveq	r0, #46	; 0x2e
    7acc:	bl	23d0 <putchar@plt>
    7ad0:	cmp	r4, sl
    7ad4:	bne	7ab0 <btbb_process_packet@@Base+0xc54>
    7ad8:	mov	r0, #10
    7adc:	bl	23d0 <putchar@plt>
    7ae0:	b	7780 <btbb_process_packet@@Base+0x924>
    7ae4:	add	fp, r7, fp
    7ae8:	ldrb	r1, [fp, #2]
    7aec:	ldr	r0, [pc, #-200]	; 7a2c <btbb_process_packet@@Base+0xbd0>
    7af0:	add	r0, pc, r0
    7af4:	bl	2100 <printf@plt>
    7af8:	b	7780 <btbb_process_packet@@Base+0x924>
    7afc:	ldr	r0, [pc, #-212]	; 7a30 <btbb_process_packet@@Base+0xbd4>
    7b00:	add	r0, pc, r0
    7b04:	bl	22bc <puts@plt>
    7b08:	ldr	r0, [pc, #-220]	; 7a34 <btbb_process_packet@@Base+0xbd8>
    7b0c:	add	r0, pc, r0
    7b10:	bl	2100 <printf@plt>
    7b14:	cmp	r4, #5
    7b18:	beq	7b30 <btbb_process_packet@@Base+0xcd4>
    7b1c:	sub	r1, r4, #1
    7b20:	ldr	r0, [pc, #-240]	; 7a38 <btbb_process_packet@@Base+0xbdc>
    7b24:	add	r0, pc, r0
    7b28:	bl	2100 <printf@plt>
    7b2c:	b	7780 <btbb_process_packet@@Base+0x924>
    7b30:	add	fp, r7, fp
    7b34:	ldrb	r2, [fp, #3]
    7b38:	ldrb	r3, [fp, #2]
    7b3c:	orr	r3, r3, r2, lsl #8
    7b40:	vmov	s15, r3
    7b44:	vcvt.f64.s32	d7, s15
    7b48:	vmul.f64	d7, d7, d8
    7b4c:	vmov	r2, r3, d7
    7b50:	ldr	r0, [pc, #-284]	; 7a3c <btbb_process_packet@@Base+0xbe0>
    7b54:	add	r0, pc, r0
    7b58:	bl	2100 <printf@plt>
    7b5c:	ldrb	r2, [fp, #5]
    7b60:	ldrb	r3, [fp, #4]
    7b64:	orr	r3, r3, r2, lsl #8
    7b68:	vmov	s15, r3
    7b6c:	vcvt.f64.s32	d7, s15
    7b70:	vmul.f64	d7, d7, d8
    7b74:	vmov	r2, r3, d7
    7b78:	ldr	r0, [pc, #-320]	; 7a40 <btbb_process_packet@@Base+0xbe4>
    7b7c:	add	r0, pc, r0
    7b80:	bl	2100 <printf@plt>
    7b84:	b	7780 <btbb_process_packet@@Base+0x924>
    7b88:	ldr	r0, [pc, #-332]	; 7a44 <btbb_process_packet@@Base+0xbe8>
    7b8c:	add	r0, pc, r0
    7b90:	bl	22bc <puts@plt>
    7b94:	ldr	r0, [pc, #-340]	; 7a48 <btbb_process_packet@@Base+0xbec>
    7b98:	add	r0, pc, r0
    7b9c:	bl	2100 <printf@plt>
    7ba0:	cmp	r4, #2
    7ba4:	ble	7c18 <btbb_process_packet@@Base+0xdbc>
    7ba8:	add	fp, r7, fp
    7bac:	ldrb	r1, [fp, #3]
    7bb0:	ldrb	r3, [fp, #2]
    7bb4:	orr	r1, r3, r1, lsl #8
    7bb8:	ldr	r0, [pc, #-372]	; 7a4c <btbb_process_packet@@Base+0xbf0>
    7bbc:	add	r0, pc, r0
    7bc0:	bl	2100 <printf@plt>
    7bc4:	cmp	r4, #3
    7bc8:	bgt	7bd8 <btbb_process_packet@@Base+0xd7c>
    7bcc:	mov	r0, #10
    7bd0:	bl	23d0 <putchar@plt>
    7bd4:	b	7780 <btbb_process_packet@@Base+0x924>
    7bd8:	ldr	r0, [pc, #-400]	; 7a50 <btbb_process_packet@@Base+0xbf4>
    7bdc:	add	r0, pc, r0
    7be0:	bl	2100 <printf@plt>
    7be4:	add	r6, sl, #3
    7be8:	add	r6, r7, r6
    7bec:	ldr	r3, [sp]
    7bf0:	add	r4, r4, r3
    7bf4:	add	r4, r7, r4
    7bf8:	ldr	r8, [pc, #-428]	; 7a54 <btbb_process_packet@@Base+0xbf8>
    7bfc:	add	r8, pc, r8
    7c00:	ldrb	r1, [r6], #1
    7c04:	mov	r0, r8
    7c08:	bl	2100 <printf@plt>
    7c0c:	cmp	r6, r4
    7c10:	bne	7c00 <btbb_process_packet@@Base+0xda4>
    7c14:	b	7bcc <btbb_process_packet@@Base+0xd70>
    7c18:	sub	r1, r4, #1
    7c1c:	ldr	r0, [pc, #-460]	; 7a58 <btbb_process_packet@@Base+0xbfc>
    7c20:	add	r0, pc, r0
    7c24:	bl	2100 <printf@plt>
    7c28:	b	7780 <btbb_process_packet@@Base+0x924>
    7c2c:	add	fp, r7, fp
    7c30:	ldrb	r0, [fp, #3]
    7c34:	ldrb	r3, [fp, #2]
    7c38:	orr	r0, r3, r0, lsl #8
    7c3c:	bl	240c <bt_compidtostr@plt>
    7c40:	mov	r1, r0
    7c44:	ldr	r0, [pc, #-496]	; 7a5c <btbb_process_packet@@Base+0xc00>
    7c48:	add	r0, pc, r0
    7c4c:	bl	2100 <printf@plt>
    7c50:	ldr	r0, [pc, #-504]	; 7a60 <btbb_process_packet@@Base+0xc04>
    7c54:	add	r0, pc, r0
    7c58:	bl	2100 <printf@plt>
    7c5c:	ldr	r0, [pc, #-512]	; 7a64 <btbb_process_packet@@Base+0xc08>
    7c60:	add	r0, pc, r0
    7c64:	bl	2100 <printf@plt>
    7c68:	cmp	r4, #3
    7c6c:	ble	7ca0 <btbb_process_packet@@Base+0xe44>
    7c70:	add	sl, sl, #3
    7c74:	add	sl, r7, sl
    7c78:	ldr	r3, [sp]
    7c7c:	add	r4, r4, r3
    7c80:	add	r4, r7, r4
    7c84:	ldr	r6, [pc, #-548]	; 7a68 <btbb_process_packet@@Base+0xc0c>
    7c88:	add	r6, pc, r6
    7c8c:	ldrb	r1, [sl], #1
    7c90:	mov	r0, r6
    7c94:	bl	2100 <printf@plt>
    7c98:	cmp	sl, r4
    7c9c:	bne	7c8c <btbb_process_packet@@Base+0xe30>
    7ca0:	mov	r0, #10
    7ca4:	bl	23d0 <putchar@plt>
    7ca8:	b	7780 <btbb_process_packet@@Base+0x924>
    7cac:	mov	r0, #10
    7cb0:	bl	23d0 <putchar@plt>
    7cb4:	ldr	r0, [pc, #-592]	; 7a6c <btbb_process_packet@@Base+0xc10>
    7cb8:	add	r0, pc, r0
    7cbc:	bl	2100 <printf@plt>
    7cc0:	cmp	r4, #1
    7cc4:	ble	7cf8 <btbb_process_packet@@Base+0xe9c>
    7cc8:	add	sl, sl, #1
    7ccc:	add	sl, r7, sl
    7cd0:	ldr	r3, [sp]
    7cd4:	add	r4, r4, r3
    7cd8:	add	r4, r7, r4
    7cdc:	ldr	r6, [pc, #-628]	; 7a70 <btbb_process_packet@@Base+0xc14>
    7ce0:	add	r6, pc, r6
    7ce4:	ldrb	r1, [sl], #1
    7ce8:	mov	r0, r6
    7cec:	bl	2100 <printf@plt>
    7cf0:	cmp	r4, sl
    7cf4:	bne	7ce4 <btbb_process_packet@@Base+0xe88>
    7cf8:	mov	r0, #10
    7cfc:	bl	23d0 <putchar@plt>
    7d00:	b	7780 <btbb_process_packet@@Base+0x924>

00007d04 <lell_packet_new@@Base>:
    7d04:	str	r4, [sp, #-8]!
    7d08:	str	lr, [sp, #4]
    7d0c:	mov	r1, #104	; 0x68
    7d10:	mov	r0, #1
    7d14:	bl	20ac <calloc@plt>
    7d18:	mov	r3, #1
    7d1c:	str	r3, [r0, #96]	; 0x60
    7d20:	ldr	r4, [sp]
    7d24:	add	sp, sp, #4
    7d28:	pop	{pc}		; (ldr pc, [sp], #4)

00007d2c <lell_packet_ref@@Base>:
    7d2c:	ldr	r3, [r0, #96]	; 0x60
    7d30:	add	r3, r3, #1
    7d34:	str	r3, [r0, #96]	; 0x60
    7d38:	bx	lr

00007d3c <lell_packet_unref@@Base>:
    7d3c:	ldr	r3, [r0, #96]	; 0x60
    7d40:	subs	r3, r3, #1
    7d44:	beq	7d50 <lell_packet_unref@@Base+0x14>
    7d48:	str	r3, [r0, #96]	; 0x60
    7d4c:	bx	lr
    7d50:	str	r4, [sp, #-8]!
    7d54:	str	lr, [sp, #4]
    7d58:	bl	2148 <free@plt>
    7d5c:	ldr	r4, [sp]
    7d60:	add	sp, sp, #4
    7d64:	pop	{pc}		; (ldr pc, [sp], #4)

00007d68 <lell_packet_is_data@@Base>:
    7d68:	ldrb	r0, [r0, #68]	; 0x44
    7d6c:	cmp	r0, #36	; 0x24
    7d70:	movhi	r0, #0
    7d74:	movls	r0, #1
    7d78:	bx	lr

00007d7c <lell_allocate_and_decode@@Base>:
    7d7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7d80:	strd	r6, [sp, #8]
    7d84:	str	r8, [sp, #16]
    7d88:	str	lr, [sp, #20]
    7d8c:	mov	r7, r0
    7d90:	mov	r5, r1
    7d94:	mov	r6, r2
    7d98:	mov	r4, r3
    7d9c:	bl	2400 <lell_packet_new@plt>
    7da0:	str	r0, [r4]
    7da4:	mov	r3, r7
    7da8:	add	r7, r7, #64	; 0x40
    7dac:	ldr	lr, [r3]
    7db0:	ldr	ip, [r3, #4]
    7db4:	ldr	r1, [r3, #8]
    7db8:	ldr	r2, [r3, #12]
    7dbc:	str	lr, [r0]
    7dc0:	str	ip, [r0, #4]
    7dc4:	str	r1, [r0, #8]
    7dc8:	str	r2, [r0, #12]
    7dcc:	add	r3, r3, #16
    7dd0:	add	r0, r0, #16
    7dd4:	cmp	r3, r7
    7dd8:	bne	7dac <lell_allocate_and_decode@@Base+0x30>
    7ddc:	ldr	r2, [r4]
    7de0:	movw	r3, #2402	; 0x962
    7de4:	cmp	r5, r3
    7de8:	moveq	r3, #37	; 0x25
    7dec:	beq	7e0c <lell_allocate_and_decode@@Base+0x90>
    7df0:	movw	r3, #2425	; 0x979
    7df4:	cmp	r5, r3
    7df8:	bhi	7f2c <lell_allocate_and_decode@@Base+0x1b0>
    7dfc:	sub	r3, r5, #2400	; 0x960
    7e00:	sub	r3, r3, #4
    7e04:	add	r3, r3, r3, lsr #31
    7e08:	ubfx	r3, r3, #1, #8
    7e0c:	strb	r3, [r2, #68]	; 0x44
    7e10:	ldr	r3, [r4]
    7e14:	sub	r5, r5, #2400	; 0x960
    7e18:	sub	r5, r5, #2
    7e1c:	add	r5, r5, r5, lsr #31
    7e20:	asr	r5, r5, #1
    7e24:	strb	r5, [r3, #69]	; 0x45
    7e28:	ldr	r3, [r4]
    7e2c:	str	r6, [r3, #76]	; 0x4c
    7e30:	ldr	r3, [r4]
    7e34:	mov	r2, #0
    7e38:	str	r2, [r3, #64]	; 0x40
    7e3c:	ldr	r3, [r4]
    7e40:	ldrb	r1, [r3]
    7e44:	ldr	r2, [r3, #64]	; 0x40
    7e48:	orr	r2, r2, r1
    7e4c:	str	r2, [r3, #64]	; 0x40
    7e50:	ldr	r3, [r4]
    7e54:	ldrb	r1, [r3, #1]
    7e58:	ldr	r2, [r3, #64]	; 0x40
    7e5c:	orr	r2, r2, r1, lsl #8
    7e60:	str	r2, [r3, #64]	; 0x40
    7e64:	ldr	r3, [r4]
    7e68:	ldrb	r1, [r3, #2]
    7e6c:	ldr	r2, [r3, #64]	; 0x40
    7e70:	orr	r2, r2, r1, lsl #16
    7e74:	str	r2, [r3, #64]	; 0x40
    7e78:	ldr	r3, [r4]
    7e7c:	ldrb	r1, [r3, #3]
    7e80:	ldr	r2, [r3, #64]	; 0x40
    7e84:	orr	r2, r2, r1, lsl #24
    7e88:	str	r2, [r3, #64]	; 0x40
    7e8c:	ldr	r0, [r4]
    7e90:	bl	2118 <lell_packet_is_data@plt>
    7e94:	cmp	r0, #0
    7e98:	bne	7f64 <lell_allocate_and_decode@@Base+0x1e8>
    7e9c:	ldr	r2, [r4]
    7ea0:	ldrb	r3, [r2, #5]
    7ea4:	and	r3, r3, #63	; 0x3f
    7ea8:	str	r3, [r2, #72]	; 0x48
    7eac:	ldr	r2, [r4]
    7eb0:	ldrb	r3, [r2, #4]
    7eb4:	and	r3, r3, #15
    7eb8:	strb	r3, [r2, #80]	; 0x50
    7ebc:	ldr	r2, [r4]
    7ec0:	ldrb	r3, [r2, #4]
    7ec4:	ubfx	r3, r3, #6, #1
    7ec8:	str	r3, [r2, #84]	; 0x54
    7ecc:	ldr	r2, [r4]
    7ed0:	ldrb	r3, [r2, #4]
    7ed4:	lsr	r3, r3, #7
    7ed8:	str	r3, [r2, #88]	; 0x58
    7edc:	ldr	r3, [r4]
    7ee0:	ldr	r2, [r3, #64]	; 0x40
    7ee4:	movw	r1, #48854	; 0xbed6
    7ee8:	movt	r1, #36489	; 0x8e89
    7eec:	cmp	r2, r1
    7ef0:	movne	r2, #0
    7ef4:	moveq	r2, #1
    7ef8:	ldrb	r1, [r3, #100]	; 0x64
    7efc:	bfi	r1, r2, #0, #1
    7f00:	strb	r1, [r3, #100]	; 0x64
    7f04:	ldr	ip, [r4]
    7f08:	ldrb	r3, [ip, #100]	; 0x64
    7f0c:	ands	r3, r3, #1
    7f10:	beq	7fa4 <lell_allocate_and_decode@@Base+0x228>
    7f14:	str	r0, [ip, #92]	; 0x5c
    7f18:	ldrd	r4, [sp]
    7f1c:	ldrd	r6, [sp, #8]
    7f20:	ldr	r8, [sp, #16]
    7f24:	add	sp, sp, #20
    7f28:	pop	{pc}		; (ldr pc, [sp], #4)
    7f2c:	movw	r3, #2426	; 0x97a
    7f30:	cmp	r5, r3
    7f34:	moveq	r3, #38	; 0x26
    7f38:	beq	7e0c <lell_allocate_and_decode@@Base+0x90>
    7f3c:	cmp	r5, #2480	; 0x9b0
    7f40:	movcs	r3, #39	; 0x27
    7f44:	bcs	7e0c <lell_allocate_and_decode@@Base+0x90>
    7f48:	sub	r3, r5, #2416	; 0x970
    7f4c:	sub	r3, r3, #12
    7f50:	add	r3, r3, r3, lsr #31
    7f54:	asr	r3, r3, #1
    7f58:	add	r3, r3, #11
    7f5c:	uxtb	r3, r3
    7f60:	b	7e0c <lell_allocate_and_decode@@Base+0x90>
    7f64:	ldr	r2, [r4]
    7f68:	ldrb	r3, [r2, #5]
    7f6c:	and	r3, r3, #31
    7f70:	str	r3, [r2, #72]	; 0x48
    7f74:	ldr	r5, [r4]
    7f78:	ldr	r0, [r5, #64]	; 0x40
    7f7c:	bl	7020 <btbb_process_packet@@Base+0x1c4>
    7f80:	str	r0, [r5, #92]	; 0x5c
    7f84:	ldr	r2, [r4]
    7f88:	ldr	r3, [r2, #92]	; 0x5c
    7f8c:	clz	r3, r3
    7f90:	lsr	r3, r3, #5
    7f94:	ldrb	r1, [r2, #100]	; 0x64
    7f98:	bfi	r1, r3, #0, #1
    7f9c:	strb	r1, [r2, #100]	; 0x64
    7fa0:	b	7f18 <lell_allocate_and_decode@@Base+0x19c>
    7fa4:	ldr	r0, [ip, #64]	; 0x40
    7fa8:	movw	r1, #48854	; 0xbed6
    7fac:	movt	r1, #36489	; 0x8e89
    7fb0:	eor	r2, r0, r1
    7fb4:	cmp	r0, r1
    7fb8:	beq	7fe0 <lell_allocate_and_decode@@Base+0x264>
    7fbc:	sub	r1, r2, #1
    7fc0:	add	r3, r3, #1
    7fc4:	uxtb	r3, r3
    7fc8:	ands	r2, r2, r1
    7fcc:	bne	7fbc <lell_allocate_and_decode@@Base+0x240>
    7fd0:	cmp	r3, #1
    7fd4:	moveq	r0, #1
    7fd8:	movne	r0, #32
    7fdc:	b	7f14 <lell_allocate_and_decode@@Base+0x198>
    7fe0:	mov	r0, #32
    7fe4:	b	7f14 <lell_allocate_and_decode@@Base+0x198>

00007fe8 <lell_get_access_address@@Base>:
    7fe8:	ldr	r0, [r0, #64]	; 0x40
    7fec:	bx	lr

00007ff0 <lell_get_access_address_offenses@@Base>:
    7ff0:	ldr	r0, [r0, #92]	; 0x5c
    7ff4:	bx	lr

00007ff8 <lell_get_channel_index@@Base>:
    7ff8:	ldrb	r0, [r0, #68]	; 0x44
    7ffc:	bx	lr

00008000 <lell_get_channel_k@@Base>:
    8000:	ldrb	r0, [r0, #69]	; 0x45
    8004:	bx	lr

00008008 <lell_get_adv_type_str@@Base>:
    8008:	str	r4, [sp, #-8]!
    800c:	str	lr, [sp, #4]
    8010:	mov	r4, r0
    8014:	bl	2118 <lell_packet_is_data@plt>
    8018:	cmp	r0, #0
    801c:	movne	r0, #0
    8020:	bne	8038 <lell_get_adv_type_str@@Base+0x30>
    8024:	ldrb	r3, [r4, #80]	; 0x50
    8028:	cmp	r3, #6
    802c:	bls	8044 <lell_get_adv_type_str@@Base+0x3c>
    8030:	ldr	r0, [pc, #32]	; 8058 <lell_get_adv_type_str@@Base+0x50>
    8034:	add	r0, pc, r0
    8038:	ldr	r4, [sp]
    803c:	add	sp, sp, #4
    8040:	pop	{pc}		; (ldr pc, [sp], #4)
    8044:	ldr	r2, [pc, #16]	; 805c <lell_get_adv_type_str@@Base+0x54>
    8048:	add	r2, pc, r2
    804c:	add	r3, r2, r3, lsl #2
    8050:	ldr	r0, [r3, #32]
    8054:	b	8038 <lell_get_adv_type_str@@Base+0x30>
    8058:	andeq	sl, r0, ip, lsr #31
    805c:	andeq	r0, r2, r8, lsl #28

00008060 <lell_print@@Base>:
    8060:	strd	r4, [sp, #-24]!	; 0xffffffe8
    8064:	strd	r6, [sp, #8]
    8068:	str	r8, [sp, #16]
    806c:	str	lr, [sp, #20]
    8070:	mov	r5, r0
    8074:	bl	2118 <lell_packet_is_data@plt>
    8078:	cmp	r0, #0
    807c:	beq	81f8 <lell_print@@Base+0x198>
    8080:	ldrb	r4, [r5, #4]
    8084:	and	r4, r4, #3
    8088:	ldr	r1, [r5, #64]	; 0x40
    808c:	ldrb	r3, [r5, #100]	; 0x64
    8090:	tst	r3, #1
    8094:	bne	81bc <lell_print@@Base+0x15c>
    8098:	ldr	r2, [pc, #1228]	; 856c <lell_print@@Base+0x50c>
    809c:	add	r2, pc, r2
    80a0:	ldr	r3, [r5, #72]	; 0x48
    80a4:	ldr	r0, [pc, #1220]	; 8570 <lell_print@@Base+0x510>
    80a8:	add	r0, pc, r0
    80ac:	bl	2100 <printf@plt>
    80b0:	ldrb	r1, [r5, #68]	; 0x44
    80b4:	ldr	r0, [pc, #1208]	; 8574 <lell_print@@Base+0x514>
    80b8:	add	r0, pc, r0
    80bc:	bl	2100 <printf@plt>
    80c0:	ldr	r3, [pc, #1200]	; 8578 <lell_print@@Base+0x518>
    80c4:	add	r3, pc, r3
    80c8:	add	r3, r3, r4, lsl #2
    80cc:	ldr	r2, [r3, #60]	; 0x3c
    80d0:	mov	r1, r4
    80d4:	ldr	r0, [pc, #1184]	; 857c <lell_print@@Base+0x51c>
    80d8:	add	r0, pc, r0
    80dc:	bl	2100 <printf@plt>
    80e0:	ldrb	r1, [r5, #4]
    80e4:	ubfx	r3, r1, #4, #1
    80e8:	ubfx	r2, r1, #3, #1
    80ec:	ubfx	r1, r1, #2, #1
    80f0:	ldr	r0, [pc, #1160]	; 8580 <lell_print@@Base+0x520>
    80f4:	add	r0, pc, r0
    80f8:	bl	2100 <printf@plt>
    80fc:	cmp	r4, #3
    8100:	beq	81c8 <lell_print@@Base+0x168>
    8104:	mov	r0, #10
    8108:	bl	23d0 <putchar@plt>
    810c:	ldr	r0, [pc, #1136]	; 8584 <lell_print@@Base+0x524>
    8110:	add	r0, pc, r0
    8114:	bl	2100 <printf@plt>
    8118:	ldr	r3, [r5, #72]	; 0x48
    811c:	cmp	r3, #0
    8120:	ble	815c <lell_print@@Base+0xfc>
    8124:	add	r4, r5, #5
    8128:	ldr	r7, [pc, #1112]	; 8588 <lell_print@@Base+0x528>
    812c:	add	r7, pc, r7
    8130:	add	r6, r4, #1
    8134:	ldrb	r1, [r4, #1]
    8138:	mov	r0, r7
    813c:	bl	2100 <printf@plt>
    8140:	add	r4, r4, #2
    8144:	sub	r2, r4, r5
    8148:	mov	r4, r6
    814c:	ldr	r3, [r5, #72]	; 0x48
    8150:	add	r3, r3, #5
    8154:	cmp	r3, r2
    8158:	bge	8130 <lell_print@@Base+0xd0>
    815c:	mov	r0, #10
    8160:	bl	23d0 <putchar@plt>
    8164:	ldr	r0, [pc, #1056]	; 858c <lell_print@@Base+0x52c>
    8168:	add	r0, pc, r0
    816c:	bl	2100 <printf@plt>
    8170:	mov	r4, #0
    8174:	ldr	r6, [pc, #1044]	; 8590 <lell_print@@Base+0x530>
    8178:	add	r6, pc, r6
    817c:	ldr	r2, [r5, #72]	; 0x48
    8180:	add	r3, r5, r4
    8184:	add	r3, r3, r2
    8188:	ldrb	r1, [r3, #6]
    818c:	mov	r0, r6
    8190:	bl	2100 <printf@plt>
    8194:	add	r4, r4, #1
    8198:	cmp	r4, #3
    819c:	bne	817c <lell_print@@Base+0x11c>
    81a0:	mov	r0, #10
    81a4:	bl	23d0 <putchar@plt>
    81a8:	ldrd	r4, [sp]
    81ac:	ldrd	r6, [sp, #8]
    81b0:	ldr	r8, [sp, #16]
    81b4:	add	sp, sp, #20
    81b8:	pop	{pc}		; (ldr pc, [sp], #4)
    81bc:	ldr	r2, [pc, #976]	; 8594 <lell_print@@Base+0x534>
    81c0:	add	r2, pc, r2
    81c4:	b	80a0 <lell_print@@Base+0x40>
    81c8:	ldrb	r1, [r5, #6]
    81cc:	cmp	r1, #20
    81d0:	movlt	r2, r1
    81d4:	movge	r2, #20
    81d8:	ldr	r3, [pc, #952]	; 8598 <lell_print@@Base+0x538>
    81dc:	add	r3, pc, r3
    81e0:	add	r3, r3, r2, lsl #2
    81e4:	ldr	r2, [r3, #76]	; 0x4c
    81e8:	ldr	r0, [pc, #940]	; 859c <lell_print@@Base+0x53c>
    81ec:	add	r0, pc, r0
    81f0:	bl	2100 <printf@plt>
    81f4:	b	8104 <lell_print@@Base+0xa4>
    81f8:	ldr	r1, [r5, #64]	; 0x40
    81fc:	ldrb	r3, [r5, #100]	; 0x64
    8200:	tst	r3, #1
    8204:	bne	8274 <lell_print@@Base+0x214>
    8208:	ldr	r2, [pc, #912]	; 85a0 <lell_print@@Base+0x540>
    820c:	add	r2, pc, r2
    8210:	ldr	r3, [r5, #72]	; 0x48
    8214:	ldr	r0, [pc, #904]	; 85a4 <lell_print@@Base+0x544>
    8218:	add	r0, pc, r0
    821c:	bl	2100 <printf@plt>
    8220:	ldrb	r1, [r5, #68]	; 0x44
    8224:	ldr	r0, [pc, #892]	; 85a8 <lell_print@@Base+0x548>
    8228:	add	r0, pc, r0
    822c:	bl	2100 <printf@plt>
    8230:	mov	r0, r5
    8234:	bl	22a4 <lell_get_adv_type_str@plt>
    8238:	mov	r1, r0
    823c:	ldr	r0, [pc, #872]	; 85ac <lell_print@@Base+0x54c>
    8240:	add	r0, pc, r0
    8244:	bl	2100 <printf@plt>
    8248:	ldrb	r3, [r5, #80]	; 0x50
    824c:	cmp	r3, #6
    8250:	addls	pc, pc, r3, lsl #2
    8254:	b	8104 <lell_print@@Base+0xa4>
    8258:	b	8280 <lell_print@@Base+0x220>
    825c:	b	8310 <lell_print@@Base+0x2b0>
    8260:	b	8280 <lell_print@@Base+0x220>
    8264:	b	8344 <lell_print@@Base+0x2e4>
    8268:	b	8378 <lell_print@@Base+0x318>
    826c:	b	83fc <lell_print@@Base+0x39c>
    8270:	b	8280 <lell_print@@Base+0x220>
    8274:	ldr	r2, [pc, #820]	; 85b0 <lell_print@@Base+0x550>
    8278:	add	r2, pc, r2
    827c:	b	8210 <lell_print@@Base+0x1b0>
    8280:	ldr	r3, [r5, #84]	; 0x54
    8284:	mov	r2, #6
    8288:	mov	r1, r5
    828c:	ldr	r0, [pc, #800]	; 85b4 <lell_print@@Base+0x554>
    8290:	add	r0, pc, r0
    8294:	bl	7488 <btbb_process_packet@@Base+0x62c>
    8298:	ldr	r3, [r5, #72]	; 0x48
    829c:	cmp	r3, #6
    82a0:	ble	8104 <lell_print@@Base+0xa4>
    82a4:	ldr	r0, [pc, #780]	; 85b8 <lell_print@@Base+0x558>
    82a8:	add	r0, pc, r0
    82ac:	bl	2100 <printf@plt>
    82b0:	ldr	r3, [r5, #72]	; 0x48
    82b4:	cmp	r3, #6
    82b8:	ble	82f4 <lell_print@@Base+0x294>
    82bc:	add	r4, r5, #11
    82c0:	ldr	r7, [pc, #756]	; 85bc <lell_print@@Base+0x55c>
    82c4:	add	r7, pc, r7
    82c8:	add	r6, r4, #1
    82cc:	ldrb	r1, [r4, #1]
    82d0:	mov	r0, r7
    82d4:	bl	2100 <printf@plt>
    82d8:	sub	r4, r4, #10
    82dc:	sub	r2, r4, r5
    82e0:	mov	r4, r6
    82e4:	ldr	r3, [r5, #72]	; 0x48
    82e8:	sub	r3, r3, #6
    82ec:	cmp	r3, r2
    82f0:	bgt	82c8 <lell_print@@Base+0x268>
    82f4:	mov	r0, #10
    82f8:	bl	23d0 <putchar@plt>
    82fc:	ldr	r1, [r5, #72]	; 0x48
    8300:	sub	r1, r1, #6
    8304:	add	r0, r5, #12
    8308:	bl	756c <btbb_process_packet@@Base+0x710>
    830c:	b	8104 <lell_print@@Base+0xa4>
    8310:	ldr	r3, [r5, #84]	; 0x54
    8314:	mov	r2, #6
    8318:	mov	r1, r5
    831c:	ldr	r0, [pc, #668]	; 85c0 <lell_print@@Base+0x560>
    8320:	add	r0, pc, r0
    8324:	bl	7488 <btbb_process_packet@@Base+0x62c>
    8328:	ldr	r3, [r5, #88]	; 0x58
    832c:	mov	r2, #12
    8330:	mov	r1, r5
    8334:	ldr	r0, [pc, #648]	; 85c4 <lell_print@@Base+0x564>
    8338:	add	r0, pc, r0
    833c:	bl	7488 <btbb_process_packet@@Base+0x62c>
    8340:	b	8104 <lell_print@@Base+0xa4>
    8344:	ldr	r3, [r5, #84]	; 0x54
    8348:	mov	r2, #6
    834c:	mov	r1, r5
    8350:	ldr	r0, [pc, #624]	; 85c8 <lell_print@@Base+0x568>
    8354:	add	r0, pc, r0
    8358:	bl	7488 <btbb_process_packet@@Base+0x62c>
    835c:	ldr	r3, [r5, #88]	; 0x58
    8360:	mov	r2, #12
    8364:	mov	r1, r5
    8368:	ldr	r0, [pc, #604]	; 85cc <lell_print@@Base+0x56c>
    836c:	add	r0, pc, r0
    8370:	bl	7488 <btbb_process_packet@@Base+0x62c>
    8374:	b	8104 <lell_print@@Base+0xa4>
    8378:	ldr	r3, [r5, #84]	; 0x54
    837c:	mov	r2, #6
    8380:	mov	r1, r5
    8384:	ldr	r0, [pc, #580]	; 85d0 <lell_print@@Base+0x570>
    8388:	add	r0, pc, r0
    838c:	bl	7488 <btbb_process_packet@@Base+0x62c>
    8390:	ldr	r0, [pc, #572]	; 85d4 <lell_print@@Base+0x574>
    8394:	add	r0, pc, r0
    8398:	bl	2100 <printf@plt>
    839c:	ldr	r3, [r5, #72]	; 0x48
    83a0:	cmp	r3, #6
    83a4:	ble	83e0 <lell_print@@Base+0x380>
    83a8:	add	r4, r5, #11
    83ac:	ldr	r7, [pc, #548]	; 85d8 <lell_print@@Base+0x578>
    83b0:	add	r7, pc, r7
    83b4:	add	r6, r4, #1
    83b8:	ldrb	r1, [r4, #1]
    83bc:	mov	r0, r7
    83c0:	bl	2100 <printf@plt>
    83c4:	sub	r4, r4, #10
    83c8:	sub	r2, r4, r5
    83cc:	mov	r4, r6
    83d0:	ldr	r3, [r5, #72]	; 0x48
    83d4:	sub	r3, r3, #6
    83d8:	cmp	r3, r2
    83dc:	bgt	83b4 <lell_print@@Base+0x354>
    83e0:	mov	r0, #10
    83e4:	bl	23d0 <putchar@plt>
    83e8:	ldr	r1, [r5, #72]	; 0x48
    83ec:	sub	r1, r1, #6
    83f0:	add	r0, r5, #12
    83f4:	bl	756c <btbb_process_packet@@Base+0x710>
    83f8:	b	8104 <lell_print@@Base+0xa4>
    83fc:	ldr	r3, [r5, #84]	; 0x54
    8400:	mov	r2, #6
    8404:	mov	r1, r5
    8408:	ldr	r0, [pc, #460]	; 85dc <lell_print@@Base+0x57c>
    840c:	add	r0, pc, r0
    8410:	bl	7488 <btbb_process_packet@@Base+0x62c>
    8414:	ldr	r3, [r5, #88]	; 0x58
    8418:	mov	r2, #12
    841c:	mov	r1, r5
    8420:	ldr	r0, [pc, #440]	; 85e0 <lell_print@@Base+0x580>
    8424:	add	r0, pc, r0
    8428:	bl	7488 <btbb_process_packet@@Base+0x62c>
    842c:	ldrb	r2, [r5, #21]
    8430:	ldrb	r3, [r5, #20]
    8434:	lsl	r3, r3, #16
    8438:	orr	r3, r3, r2, lsl #24
    843c:	ldrb	r2, [r5, #18]
    8440:	orr	r3, r3, r2
    8444:	ldrb	r2, [r5, #19]
    8448:	orr	r2, r3, r2, lsl #8
    844c:	ldr	r1, [pc, #400]	; 85e4 <lell_print@@Base+0x584>
    8450:	add	r1, pc, r1
    8454:	ldr	r0, [pc, #396]	; 85e8 <lell_print@@Base+0x588>
    8458:	add	r0, pc, r0
    845c:	bl	2100 <printf@plt>
    8460:	ldrb	r2, [r5, #24]
    8464:	ldrb	r3, [r5, #23]
    8468:	lsl	r3, r3, #8
    846c:	orr	r3, r3, r2, lsl #16
    8470:	ldrb	r2, [r5, #22]
    8474:	orr	r2, r3, r2
    8478:	ldr	r1, [pc, #364]	; 85ec <lell_print@@Base+0x58c>
    847c:	add	r1, pc, r1
    8480:	ldr	r0, [pc, #360]	; 85f0 <lell_print@@Base+0x590>
    8484:	add	r0, pc, r0
    8488:	bl	2100 <printf@plt>
    848c:	ldrb	r2, [r5, #25]
    8490:	mov	r3, r2
    8494:	ldr	r1, [pc, #344]	; 85f4 <lell_print@@Base+0x594>
    8498:	add	r1, pc, r1
    849c:	ldr	r0, [pc, #340]	; 85f8 <lell_print@@Base+0x598>
    84a0:	add	r0, pc, r0
    84a4:	bl	2100 <printf@plt>
    84a8:	mov	r2, #26
    84ac:	mov	r1, r5
    84b0:	ldr	r0, [pc, #324]	; 85fc <lell_print@@Base+0x59c>
    84b4:	add	r0, pc, r0
    84b8:	bl	7530 <btbb_process_packet@@Base+0x6d4>
    84bc:	mov	r2, #28
    84c0:	mov	r1, r5
    84c4:	ldr	r0, [pc, #308]	; 8600 <lell_print@@Base+0x5a0>
    84c8:	add	r0, pc, r0
    84cc:	bl	7530 <btbb_process_packet@@Base+0x6d4>
    84d0:	mov	r2, #30
    84d4:	mov	r1, r5
    84d8:	ldr	r0, [pc, #292]	; 8604 <lell_print@@Base+0x5a4>
    84dc:	add	r0, pc, r0
    84e0:	bl	7530 <btbb_process_packet@@Base+0x6d4>
    84e4:	mov	r2, #32
    84e8:	mov	r1, r5
    84ec:	ldr	r0, [pc, #276]	; 8608 <lell_print@@Base+0x5a8>
    84f0:	add	r0, pc, r0
    84f4:	bl	7530 <btbb_process_packet@@Base+0x6d4>
    84f8:	ldr	r0, [pc, #268]	; 860c <lell_print@@Base+0x5ac>
    84fc:	add	r0, pc, r0
    8500:	bl	2100 <printf@plt>
    8504:	add	r4, r5, #34	; 0x22
    8508:	add	r7, r5, #39	; 0x27
    850c:	ldr	r6, [pc, #252]	; 8610 <lell_print@@Base+0x5b0>
    8510:	add	r6, pc, r6
    8514:	ldrb	r1, [r4], #1
    8518:	mov	r0, r6
    851c:	bl	2100 <printf@plt>
    8520:	cmp	r4, r7
    8524:	bne	8514 <lell_print@@Base+0x4b4>
    8528:	mov	r0, #10
    852c:	bl	23d0 <putchar@plt>
    8530:	ldrb	r1, [r5, #39]	; 0x27
    8534:	and	r1, r1, #31
    8538:	ldr	r0, [pc, #212]	; 8614 <lell_print@@Base+0x5b4>
    853c:	add	r0, pc, r0
    8540:	bl	2100 <printf@plt>
    8544:	ldrb	r1, [r5, #39]	; 0x27
    8548:	lsr	r1, r1, #5
    854c:	ldr	r3, [pc, #196]	; 8618 <lell_print@@Base+0x5b8>
    8550:	add	r3, pc, r3
    8554:	add	r3, r3, r1, lsl #2
    8558:	ldr	r2, [r3, #160]	; 0xa0
    855c:	ldr	r0, [pc, #184]	; 861c <lell_print@@Base+0x5bc>
    8560:	add	r0, pc, r0
    8564:	bl	2100 <printf@plt>
    8568:	b	8104 <lell_print@@Base+0xa4>
    856c:	andeq	sl, r0, r4, asr pc
    8570:	andeq	sl, r0, r0, asr pc
    8574:	andeq	sl, r0, r4, ror #30
    8578:	andeq	r0, r2, ip, lsl #27
    857c:	andeq	sl, r0, ip, asr pc
    8580:	andeq	sl, r0, r4, asr pc
    8584:	muleq	r0, r0, r0
    8588:	andeq	sl, r0, r0, lsl #25
    858c:	andeq	fp, r0, r4, asr #32
    8590:	andeq	sl, r0, r4, lsr ip
    8594:	andeq	sl, r0, r8, lsr #28
    8598:	andeq	r0, r2, r4, ror ip
    859c:	andeq	sl, r0, ip, ror lr
    85a0:	andeq	sl, r0, r4, ror #27
    85a4:	andeq	sl, r0, r8, ror #28
    85a8:	strdeq	sl, [r0], -r4
    85ac:	andeq	sl, r0, r8, ror #28
    85b0:	andeq	sl, r0, r0, ror sp
    85b4:	andeq	sl, r0, r8, lsr #28
    85b8:	andeq	sl, r0, r8, lsl lr
    85bc:	andeq	sl, r0, r8, ror #21
    85c0:	muleq	r0, r8, sp
    85c4:	muleq	r0, r8, sp
    85c8:	andeq	sl, r0, r4, lsl #27
    85cc:	andeq	sl, r0, ip, asr #26
    85d0:	andeq	sl, r0, r0, lsr sp
    85d4:	andeq	sl, r0, ip, asr #26
    85d8:	strdeq	sl, [r0], -ip
    85dc:	andeq	sl, r0, r4, asr #25
    85e0:	muleq	r0, r4, ip
    85e4:	andeq	sl, r0, r4, lsr #25
    85e8:	andeq	sl, r0, r4, lsr #25
    85ec:	andeq	sl, r0, ip, lsl #25
    85f0:	muleq	r0, r0, ip
    85f4:	andeq	sl, r0, r8, lsl #25
    85f8:	andeq	sl, r0, ip, lsl #25
    85fc:	andeq	sl, r0, ip, lsl #25
    8600:	andeq	sl, r0, r4, lsl #25
    8604:	andeq	sl, r0, ip, ror ip
    8608:	andeq	sl, r0, r4, ror ip
    860c:	andeq	sl, r0, r4, ror ip
    8610:	muleq	r0, ip, r8
    8614:	andeq	sl, r0, r0, asr #24
    8618:	andeq	r0, r2, r0, lsl #18
    861c:	andeq	sl, r0, ip, lsr #24

00008620 <bt_compidtostr@@Base>:
    8620:	movw	r3, #519	; 0x207
    8624:	cmp	r0, r3
    8628:	beq	b554 <bt_compidtostr@@Base+0x2f34>
    862c:	cmp	r0, #520	; 0x208
    8630:	bcs	9e4c <bt_compidtostr@@Base+0x182c>
    8634:	movw	r3, #259	; 0x103
    8638:	cmp	r0, r3
    863c:	beq	b560 <bt_compidtostr@@Base+0x2f40>
    8640:	cmp	r0, #260	; 0x104
    8644:	bcs	8fb4 <bt_compidtostr@@Base+0x994>
    8648:	cmp	r0, #129	; 0x81
    864c:	beq	b56c <bt_compidtostr@@Base+0x2f4c>
    8650:	bhi	8b00 <bt_compidtostr@@Base+0x4e0>
    8654:	cmp	r0, #64	; 0x40
    8658:	beq	b578 <bt_compidtostr@@Base+0x2f58>
    865c:	bhi	88b0 <bt_compidtostr@@Base+0x290>
    8660:	cmp	r0, #31
    8664:	beq	b584 <bt_compidtostr@@Base+0x2f64>
    8668:	bls	86b8 <bt_compidtostr@@Base+0x98>
    866c:	cmp	r0, #47	; 0x2f
    8670:	beq	b6a4 <bt_compidtostr@@Base+0x3084>
    8674:	bls	87cc <bt_compidtostr@@Base+0x1ac>
    8678:	cmp	r0, #55	; 0x37
    867c:	beq	b734 <bt_compidtostr@@Base+0x3114>
    8680:	bls	8850 <bt_compidtostr@@Base+0x230>
    8684:	cmp	r0, #59	; 0x3b
    8688:	beq	b77c <bt_compidtostr@@Base+0x315c>
    868c:	bls	888c <bt_compidtostr@@Base+0x26c>
    8690:	cmp	r0, #61	; 0x3d
    8694:	beq	b7a0 <bt_compidtostr@@Base+0x3180>
    8698:	bcc	b7ac <bt_compidtostr@@Base+0x318c>
    869c:	cmp	r0, #62	; 0x3e
    86a0:	beq	b7b8 <bt_compidtostr@@Base+0x3198>
    86a4:	cmp	r0, #63	; 0x3f
    86a8:	bne	88a4 <bt_compidtostr@@Base+0x284>
    86ac:	ldr	r0, [pc, #4052]	; 9688 <bt_compidtostr@@Base+0x1068>
    86b0:	add	r0, pc, r0
    86b4:	bx	lr
    86b8:	cmp	r0, #15
    86bc:	beq	b590 <bt_compidtostr@@Base+0x2f70>
    86c0:	bls	86f4 <bt_compidtostr@@Base+0xd4>
    86c4:	cmp	r0, #23
    86c8:	beq	b620 <bt_compidtostr@@Base+0x3000>
    86cc:	bls	8778 <bt_compidtostr@@Base+0x158>
    86d0:	cmp	r0, #27
    86d4:	beq	b668 <bt_compidtostr@@Base+0x3048>
    86d8:	bls	87b4 <bt_compidtostr@@Base+0x194>
    86dc:	cmp	r0, #29
    86e0:	beq	b68c <bt_compidtostr@@Base+0x306c>
    86e4:	bhi	b698 <bt_compidtostr@@Base+0x3078>
    86e8:	ldr	r0, [pc, #3996]	; 968c <bt_compidtostr@@Base+0x106c>
    86ec:	add	r0, pc, r0
    86f0:	bx	lr
    86f4:	cmp	r0, #7
    86f8:	beq	b59c <bt_compidtostr@@Base+0x2f7c>
    86fc:	bls	8724 <bt_compidtostr@@Base+0x104>
    8700:	cmp	r0, #11
    8704:	beq	b5e4 <bt_compidtostr@@Base+0x2fc4>
    8708:	bls	8760 <bt_compidtostr@@Base+0x140>
    870c:	cmp	r0, #13
    8710:	beq	b608 <bt_compidtostr@@Base+0x2fe8>
    8714:	bhi	b614 <bt_compidtostr@@Base+0x2ff4>
    8718:	ldr	r0, [pc, #3952]	; 9690 <bt_compidtostr@@Base+0x1070>
    871c:	add	r0, pc, r0
    8720:	bx	lr
    8724:	cmp	r0, #3
    8728:	beq	b5a8 <bt_compidtostr@@Base+0x2f88>
    872c:	bls	8748 <bt_compidtostr@@Base+0x128>
    8730:	cmp	r0, #5
    8734:	beq	b5cc <bt_compidtostr@@Base+0x2fac>
    8738:	bhi	b5d8 <bt_compidtostr@@Base+0x2fb8>
    873c:	ldr	r0, [pc, #3920]	; 9694 <bt_compidtostr@@Base+0x1074>
    8740:	add	r0, pc, r0
    8744:	bx	lr
    8748:	cmp	r0, #1
    874c:	beq	b5b4 <bt_compidtostr@@Base+0x2f94>
    8750:	bhi	b5c0 <bt_compidtostr@@Base+0x2fa0>
    8754:	ldr	r0, [pc, #3900]	; 9698 <bt_compidtostr@@Base+0x1078>
    8758:	add	r0, pc, r0
    875c:	bx	lr
    8760:	cmp	r0, #9
    8764:	beq	b5f0 <bt_compidtostr@@Base+0x2fd0>
    8768:	bhi	b5fc <bt_compidtostr@@Base+0x2fdc>
    876c:	ldr	r0, [pc, #3880]	; 969c <bt_compidtostr@@Base+0x107c>
    8770:	add	r0, pc, r0
    8774:	bx	lr
    8778:	cmp	r0, #19
    877c:	beq	b62c <bt_compidtostr@@Base+0x300c>
    8780:	bls	879c <bt_compidtostr@@Base+0x17c>
    8784:	cmp	r0, #21
    8788:	beq	b650 <bt_compidtostr@@Base+0x3030>
    878c:	bhi	b65c <bt_compidtostr@@Base+0x303c>
    8790:	ldr	r0, [pc, #3848]	; 96a0 <bt_compidtostr@@Base+0x1080>
    8794:	add	r0, pc, r0
    8798:	bx	lr
    879c:	cmp	r0, #17
    87a0:	beq	b638 <bt_compidtostr@@Base+0x3018>
    87a4:	bhi	b644 <bt_compidtostr@@Base+0x3024>
    87a8:	ldr	r0, [pc, #3828]	; 96a4 <bt_compidtostr@@Base+0x1084>
    87ac:	add	r0, pc, r0
    87b0:	bx	lr
    87b4:	cmp	r0, #25
    87b8:	beq	b674 <bt_compidtostr@@Base+0x3054>
    87bc:	bhi	b680 <bt_compidtostr@@Base+0x3060>
    87c0:	ldr	r0, [pc, #3808]	; 96a8 <bt_compidtostr@@Base+0x1088>
    87c4:	add	r0, pc, r0
    87c8:	bx	lr
    87cc:	cmp	r0, #39	; 0x27
    87d0:	beq	b6b0 <bt_compidtostr@@Base+0x3090>
    87d4:	bls	87fc <bt_compidtostr@@Base+0x1dc>
    87d8:	cmp	r0, #43	; 0x2b
    87dc:	beq	b6f8 <bt_compidtostr@@Base+0x30d8>
    87e0:	bls	8838 <bt_compidtostr@@Base+0x218>
    87e4:	cmp	r0, #45	; 0x2d
    87e8:	beq	b71c <bt_compidtostr@@Base+0x30fc>
    87ec:	bhi	b728 <bt_compidtostr@@Base+0x3108>
    87f0:	ldr	r0, [pc, #3764]	; 96ac <bt_compidtostr@@Base+0x108c>
    87f4:	add	r0, pc, r0
    87f8:	bx	lr
    87fc:	cmp	r0, #35	; 0x23
    8800:	beq	b6bc <bt_compidtostr@@Base+0x309c>
    8804:	bls	8820 <bt_compidtostr@@Base+0x200>
    8808:	cmp	r0, #37	; 0x25
    880c:	beq	b6e0 <bt_compidtostr@@Base+0x30c0>
    8810:	bhi	b6ec <bt_compidtostr@@Base+0x30cc>
    8814:	ldr	r0, [pc, #3732]	; 96b0 <bt_compidtostr@@Base+0x1090>
    8818:	add	r0, pc, r0
    881c:	bx	lr
    8820:	cmp	r0, #33	; 0x21
    8824:	beq	b6c8 <bt_compidtostr@@Base+0x30a8>
    8828:	bhi	b6d4 <bt_compidtostr@@Base+0x30b4>
    882c:	ldr	r0, [pc, #3712]	; 96b4 <bt_compidtostr@@Base+0x1094>
    8830:	add	r0, pc, r0
    8834:	bx	lr
    8838:	cmp	r0, #41	; 0x29
    883c:	beq	b704 <bt_compidtostr@@Base+0x30e4>
    8840:	bhi	b710 <bt_compidtostr@@Base+0x30f0>
    8844:	ldr	r0, [pc, #3692]	; 96b8 <bt_compidtostr@@Base+0x1098>
    8848:	add	r0, pc, r0
    884c:	bx	lr
    8850:	cmp	r0, #51	; 0x33
    8854:	beq	b740 <bt_compidtostr@@Base+0x3120>
    8858:	bls	8874 <bt_compidtostr@@Base+0x254>
    885c:	cmp	r0, #53	; 0x35
    8860:	beq	b764 <bt_compidtostr@@Base+0x3144>
    8864:	bhi	b770 <bt_compidtostr@@Base+0x3150>
    8868:	ldr	r0, [pc, #3660]	; 96bc <bt_compidtostr@@Base+0x109c>
    886c:	add	r0, pc, r0
    8870:	bx	lr
    8874:	cmp	r0, #49	; 0x31
    8878:	beq	b74c <bt_compidtostr@@Base+0x312c>
    887c:	bhi	b758 <bt_compidtostr@@Base+0x3138>
    8880:	ldr	r0, [pc, #3640]	; 96c0 <bt_compidtostr@@Base+0x10a0>
    8884:	add	r0, pc, r0
    8888:	bx	lr
    888c:	cmp	r0, #57	; 0x39
    8890:	beq	b788 <bt_compidtostr@@Base+0x3168>
    8894:	bhi	b794 <bt_compidtostr@@Base+0x3174>
    8898:	ldr	r0, [pc, #3620]	; 96c4 <bt_compidtostr@@Base+0x10a4>
    889c:	add	r0, pc, r0
    88a0:	bx	lr
    88a4:	ldr	r0, [pc, #3612]	; 96c8 <bt_compidtostr@@Base+0x10a8>
    88a8:	add	r0, pc, r0
    88ac:	bx	lr
    88b0:	cmp	r0, #96	; 0x60
    88b4:	beq	b7c4 <bt_compidtostr@@Base+0x31a4>
    88b8:	bls	8908 <bt_compidtostr@@Base+0x2e8>
    88bc:	cmp	r0, #112	; 0x70
    88c0:	beq	b8e4 <bt_compidtostr@@Base+0x32c4>
    88c4:	bls	8a1c <bt_compidtostr@@Base+0x3fc>
    88c8:	cmp	r0, #120	; 0x78
    88cc:	beq	b974 <bt_compidtostr@@Base+0x3354>
    88d0:	bls	8aa0 <bt_compidtostr@@Base+0x480>
    88d4:	cmp	r0, #124	; 0x7c
    88d8:	beq	c198 <bt_compidtostr@@Base+0x3b78>
    88dc:	bls	8adc <bt_compidtostr@@Base+0x4bc>
    88e0:	cmp	r0, #126	; 0x7e
    88e4:	beq	c1bc <bt_compidtostr@@Base+0x3b9c>
    88e8:	bcc	c1c8 <bt_compidtostr@@Base+0x3ba8>
    88ec:	cmp	r0, #127	; 0x7f
    88f0:	beq	c1d4 <bt_compidtostr@@Base+0x3bb4>
    88f4:	cmp	r0, #128	; 0x80
    88f8:	bne	8af4 <bt_compidtostr@@Base+0x4d4>
    88fc:	ldr	r0, [pc, #3528]	; 96cc <bt_compidtostr@@Base+0x10ac>
    8900:	add	r0, pc, r0
    8904:	bx	lr
    8908:	cmp	r0, #80	; 0x50
    890c:	beq	b7d0 <bt_compidtostr@@Base+0x31b0>
    8910:	bls	8944 <bt_compidtostr@@Base+0x324>
    8914:	cmp	r0, #88	; 0x58
    8918:	beq	b860 <bt_compidtostr@@Base+0x3240>
    891c:	bls	89c8 <bt_compidtostr@@Base+0x3a8>
    8920:	cmp	r0, #92	; 0x5c
    8924:	beq	b8a8 <bt_compidtostr@@Base+0x3288>
    8928:	bls	8a04 <bt_compidtostr@@Base+0x3e4>
    892c:	cmp	r0, #94	; 0x5e
    8930:	beq	b8cc <bt_compidtostr@@Base+0x32ac>
    8934:	bhi	b8d8 <bt_compidtostr@@Base+0x32b8>
    8938:	ldr	r0, [pc, #3472]	; 96d0 <bt_compidtostr@@Base+0x10b0>
    893c:	add	r0, pc, r0
    8940:	bx	lr
    8944:	cmp	r0, #72	; 0x48
    8948:	beq	b7dc <bt_compidtostr@@Base+0x31bc>
    894c:	bls	8974 <bt_compidtostr@@Base+0x354>
    8950:	cmp	r0, #76	; 0x4c
    8954:	beq	b824 <bt_compidtostr@@Base+0x3204>
    8958:	bls	89b0 <bt_compidtostr@@Base+0x390>
    895c:	cmp	r0, #78	; 0x4e
    8960:	beq	b848 <bt_compidtostr@@Base+0x3228>
    8964:	bhi	b854 <bt_compidtostr@@Base+0x3234>
    8968:	ldr	r0, [pc, #3428]	; 96d4 <bt_compidtostr@@Base+0x10b4>
    896c:	add	r0, pc, r0
    8970:	bx	lr
    8974:	cmp	r0, #68	; 0x44
    8978:	beq	b7e8 <bt_compidtostr@@Base+0x31c8>
    897c:	bls	8998 <bt_compidtostr@@Base+0x378>
    8980:	cmp	r0, #70	; 0x46
    8984:	beq	b80c <bt_compidtostr@@Base+0x31ec>
    8988:	bhi	b818 <bt_compidtostr@@Base+0x31f8>
    898c:	ldr	r0, [pc, #3396]	; 96d8 <bt_compidtostr@@Base+0x10b8>
    8990:	add	r0, pc, r0
    8994:	bx	lr
    8998:	cmp	r0, #66	; 0x42
    899c:	beq	b7f4 <bt_compidtostr@@Base+0x31d4>
    89a0:	bhi	b800 <bt_compidtostr@@Base+0x31e0>
    89a4:	ldr	r0, [pc, #3376]	; 96dc <bt_compidtostr@@Base+0x10bc>
    89a8:	add	r0, pc, r0
    89ac:	bx	lr
    89b0:	cmp	r0, #74	; 0x4a
    89b4:	beq	b830 <bt_compidtostr@@Base+0x3210>
    89b8:	bhi	b83c <bt_compidtostr@@Base+0x321c>
    89bc:	ldr	r0, [pc, #3356]	; 96e0 <bt_compidtostr@@Base+0x10c0>
    89c0:	add	r0, pc, r0
    89c4:	bx	lr
    89c8:	cmp	r0, #84	; 0x54
    89cc:	beq	b86c <bt_compidtostr@@Base+0x324c>
    89d0:	bls	89ec <bt_compidtostr@@Base+0x3cc>
    89d4:	cmp	r0, #86	; 0x56
    89d8:	beq	b890 <bt_compidtostr@@Base+0x3270>
    89dc:	bhi	b89c <bt_compidtostr@@Base+0x327c>
    89e0:	ldr	r0, [pc, #3324]	; 96e4 <bt_compidtostr@@Base+0x10c4>
    89e4:	add	r0, pc, r0
    89e8:	bx	lr
    89ec:	cmp	r0, #82	; 0x52
    89f0:	beq	b878 <bt_compidtostr@@Base+0x3258>
    89f4:	bhi	b884 <bt_compidtostr@@Base+0x3264>
    89f8:	ldr	r0, [pc, #3304]	; 96e8 <bt_compidtostr@@Base+0x10c8>
    89fc:	add	r0, pc, r0
    8a00:	bx	lr
    8a04:	cmp	r0, #90	; 0x5a
    8a08:	beq	b8b4 <bt_compidtostr@@Base+0x3294>
    8a0c:	bhi	b8c0 <bt_compidtostr@@Base+0x32a0>
    8a10:	ldr	r0, [pc, #3284]	; 96ec <bt_compidtostr@@Base+0x10cc>
    8a14:	add	r0, pc, r0
    8a18:	bx	lr
    8a1c:	cmp	r0, #104	; 0x68
    8a20:	beq	b8f0 <bt_compidtostr@@Base+0x32d0>
    8a24:	bls	8a4c <bt_compidtostr@@Base+0x42c>
    8a28:	cmp	r0, #108	; 0x6c
    8a2c:	beq	b938 <bt_compidtostr@@Base+0x3318>
    8a30:	bls	8a88 <bt_compidtostr@@Base+0x468>
    8a34:	cmp	r0, #110	; 0x6e
    8a38:	beq	b95c <bt_compidtostr@@Base+0x333c>
    8a3c:	bhi	b968 <bt_compidtostr@@Base+0x3348>
    8a40:	ldr	r0, [pc, #3240]	; 96f0 <bt_compidtostr@@Base+0x10d0>
    8a44:	add	r0, pc, r0
    8a48:	bx	lr
    8a4c:	cmp	r0, #100	; 0x64
    8a50:	beq	b8fc <bt_compidtostr@@Base+0x32dc>
    8a54:	bls	8a70 <bt_compidtostr@@Base+0x450>
    8a58:	cmp	r0, #102	; 0x66
    8a5c:	beq	b920 <bt_compidtostr@@Base+0x3300>
    8a60:	bhi	b92c <bt_compidtostr@@Base+0x330c>
    8a64:	ldr	r0, [pc, #3208]	; 96f4 <bt_compidtostr@@Base+0x10d4>
    8a68:	add	r0, pc, r0
    8a6c:	bx	lr
    8a70:	cmp	r0, #98	; 0x62
    8a74:	beq	b908 <bt_compidtostr@@Base+0x32e8>
    8a78:	bhi	b914 <bt_compidtostr@@Base+0x32f4>
    8a7c:	ldr	r0, [pc, #3188]	; 96f8 <bt_compidtostr@@Base+0x10d8>
    8a80:	add	r0, pc, r0
    8a84:	bx	lr
    8a88:	cmp	r0, #106	; 0x6a
    8a8c:	beq	b944 <bt_compidtostr@@Base+0x3324>
    8a90:	bhi	b950 <bt_compidtostr@@Base+0x3330>
    8a94:	ldr	r0, [pc, #3168]	; 96fc <bt_compidtostr@@Base+0x10dc>
    8a98:	add	r0, pc, r0
    8a9c:	bx	lr
    8aa0:	cmp	r0, #116	; 0x74
    8aa4:	beq	b980 <bt_compidtostr@@Base+0x3360>
    8aa8:	bls	8ac4 <bt_compidtostr@@Base+0x4a4>
    8aac:	cmp	r0, #118	; 0x76
    8ab0:	beq	c180 <bt_compidtostr@@Base+0x3b60>
    8ab4:	bhi	c18c <bt_compidtostr@@Base+0x3b6c>
    8ab8:	ldr	r0, [pc, #3136]	; 9700 <bt_compidtostr@@Base+0x10e0>
    8abc:	add	r0, pc, r0
    8ac0:	bx	lr
    8ac4:	cmp	r0, #114	; 0x72
    8ac8:	beq	b98c <bt_compidtostr@@Base+0x336c>
    8acc:	bhi	c174 <bt_compidtostr@@Base+0x3b54>
    8ad0:	ldr	r0, [pc, #3116]	; 9704 <bt_compidtostr@@Base+0x10e4>
    8ad4:	add	r0, pc, r0
    8ad8:	bx	lr
    8adc:	cmp	r0, #122	; 0x7a
    8ae0:	beq	c1a4 <bt_compidtostr@@Base+0x3b84>
    8ae4:	bhi	c1b0 <bt_compidtostr@@Base+0x3b90>
    8ae8:	ldr	r0, [pc, #3096]	; 9708 <bt_compidtostr@@Base+0x10e8>
    8aec:	add	r0, pc, r0
    8af0:	bx	lr
    8af4:	ldr	r0, [pc, #3088]	; 970c <bt_compidtostr@@Base+0x10ec>
    8af8:	add	r0, pc, r0
    8afc:	bx	lr
    8b00:	cmp	r0, #194	; 0xc2
    8b04:	beq	c1e0 <bt_compidtostr@@Base+0x3bc0>
    8b08:	bhi	8d5c <bt_compidtostr@@Base+0x73c>
    8b0c:	cmp	r0, #161	; 0xa1
    8b10:	beq	c1ec <bt_compidtostr@@Base+0x3bcc>
    8b14:	bls	8b64 <bt_compidtostr@@Base+0x544>
    8b18:	cmp	r0, #177	; 0xb1
    8b1c:	beq	c30c <bt_compidtostr@@Base+0x3cec>
    8b20:	bls	8c78 <bt_compidtostr@@Base+0x658>
    8b24:	cmp	r0, #185	; 0xb9
    8b28:	beq	c39c <bt_compidtostr@@Base+0x3d7c>
    8b2c:	bls	8cfc <bt_compidtostr@@Base+0x6dc>
    8b30:	cmp	r0, #189	; 0xbd
    8b34:	beq	c3e4 <bt_compidtostr@@Base+0x3dc4>
    8b38:	bls	8d38 <bt_compidtostr@@Base+0x718>
    8b3c:	cmp	r0, #191	; 0xbf
    8b40:	beq	c408 <bt_compidtostr@@Base+0x3de8>
    8b44:	bcc	c414 <bt_compidtostr@@Base+0x3df4>
    8b48:	cmp	r0, #192	; 0xc0
    8b4c:	beq	c420 <bt_compidtostr@@Base+0x3e00>
    8b50:	cmp	r0, #193	; 0xc1
    8b54:	bne	8d50 <bt_compidtostr@@Base+0x730>
    8b58:	ldr	r0, [pc, #2992]	; 9710 <bt_compidtostr@@Base+0x10f0>
    8b5c:	add	r0, pc, r0
    8b60:	bx	lr
    8b64:	cmp	r0, #145	; 0x91
    8b68:	beq	c1f8 <bt_compidtostr@@Base+0x3bd8>
    8b6c:	bls	8ba0 <bt_compidtostr@@Base+0x580>
    8b70:	cmp	r0, #153	; 0x99
    8b74:	beq	c288 <bt_compidtostr@@Base+0x3c68>
    8b78:	bls	8c24 <bt_compidtostr@@Base+0x604>
    8b7c:	cmp	r0, #157	; 0x9d
    8b80:	beq	c2d0 <bt_compidtostr@@Base+0x3cb0>
    8b84:	bls	8c60 <bt_compidtostr@@Base+0x640>
    8b88:	cmp	r0, #159	; 0x9f
    8b8c:	beq	c2f4 <bt_compidtostr@@Base+0x3cd4>
    8b90:	bhi	c300 <bt_compidtostr@@Base+0x3ce0>
    8b94:	ldr	r0, [pc, #2936]	; 9714 <bt_compidtostr@@Base+0x10f4>
    8b98:	add	r0, pc, r0
    8b9c:	bx	lr
    8ba0:	cmp	r0, #137	; 0x89
    8ba4:	beq	c204 <bt_compidtostr@@Base+0x3be4>
    8ba8:	bls	8bd0 <bt_compidtostr@@Base+0x5b0>
    8bac:	cmp	r0, #141	; 0x8d
    8bb0:	beq	c24c <bt_compidtostr@@Base+0x3c2c>
    8bb4:	bls	8c0c <bt_compidtostr@@Base+0x5ec>
    8bb8:	cmp	r0, #143	; 0x8f
    8bbc:	beq	c270 <bt_compidtostr@@Base+0x3c50>
    8bc0:	bhi	c27c <bt_compidtostr@@Base+0x3c5c>
    8bc4:	ldr	r0, [pc, #2892]	; 9718 <bt_compidtostr@@Base+0x10f8>
    8bc8:	add	r0, pc, r0
    8bcc:	bx	lr
    8bd0:	cmp	r0, #133	; 0x85
    8bd4:	beq	c210 <bt_compidtostr@@Base+0x3bf0>
    8bd8:	bls	8bf4 <bt_compidtostr@@Base+0x5d4>
    8bdc:	cmp	r0, #135	; 0x87
    8be0:	beq	c234 <bt_compidtostr@@Base+0x3c14>
    8be4:	bhi	c240 <bt_compidtostr@@Base+0x3c20>
    8be8:	ldr	r0, [pc, #2860]	; 971c <bt_compidtostr@@Base+0x10fc>
    8bec:	add	r0, pc, r0
    8bf0:	bx	lr
    8bf4:	cmp	r0, #131	; 0x83
    8bf8:	beq	c21c <bt_compidtostr@@Base+0x3bfc>
    8bfc:	bhi	c228 <bt_compidtostr@@Base+0x3c08>
    8c00:	ldr	r0, [pc, #2840]	; 9720 <bt_compidtostr@@Base+0x1100>
    8c04:	add	r0, pc, r0
    8c08:	bx	lr
    8c0c:	cmp	r0, #139	; 0x8b
    8c10:	beq	c258 <bt_compidtostr@@Base+0x3c38>
    8c14:	bhi	c264 <bt_compidtostr@@Base+0x3c44>
    8c18:	ldr	r0, [pc, #2820]	; 9724 <bt_compidtostr@@Base+0x1104>
    8c1c:	add	r0, pc, r0
    8c20:	bx	lr
    8c24:	cmp	r0, #149	; 0x95
    8c28:	beq	c294 <bt_compidtostr@@Base+0x3c74>
    8c2c:	bls	8c48 <bt_compidtostr@@Base+0x628>
    8c30:	cmp	r0, #151	; 0x97
    8c34:	beq	c2b8 <bt_compidtostr@@Base+0x3c98>
    8c38:	bhi	c2c4 <bt_compidtostr@@Base+0x3ca4>
    8c3c:	ldr	r0, [pc, #2788]	; 9728 <bt_compidtostr@@Base+0x1108>
    8c40:	add	r0, pc, r0
    8c44:	bx	lr
    8c48:	cmp	r0, #147	; 0x93
    8c4c:	beq	c2a0 <bt_compidtostr@@Base+0x3c80>
    8c50:	bhi	c2ac <bt_compidtostr@@Base+0x3c8c>
    8c54:	ldr	r0, [pc, #2768]	; 972c <bt_compidtostr@@Base+0x110c>
    8c58:	add	r0, pc, r0
    8c5c:	bx	lr
    8c60:	cmp	r0, #155	; 0x9b
    8c64:	beq	c2dc <bt_compidtostr@@Base+0x3cbc>
    8c68:	bhi	c2e8 <bt_compidtostr@@Base+0x3cc8>
    8c6c:	ldr	r0, [pc, #2748]	; 9730 <bt_compidtostr@@Base+0x1110>
    8c70:	add	r0, pc, r0
    8c74:	bx	lr
    8c78:	cmp	r0, #169	; 0xa9
    8c7c:	beq	c318 <bt_compidtostr@@Base+0x3cf8>
    8c80:	bls	8ca8 <bt_compidtostr@@Base+0x688>
    8c84:	cmp	r0, #173	; 0xad
    8c88:	beq	c360 <bt_compidtostr@@Base+0x3d40>
    8c8c:	bls	8ce4 <bt_compidtostr@@Base+0x6c4>
    8c90:	cmp	r0, #175	; 0xaf
    8c94:	beq	c384 <bt_compidtostr@@Base+0x3d64>
    8c98:	bhi	c390 <bt_compidtostr@@Base+0x3d70>
    8c9c:	ldr	r0, [pc, #2704]	; 9734 <bt_compidtostr@@Base+0x1114>
    8ca0:	add	r0, pc, r0
    8ca4:	bx	lr
    8ca8:	cmp	r0, #165	; 0xa5
    8cac:	beq	c324 <bt_compidtostr@@Base+0x3d04>
    8cb0:	bls	8ccc <bt_compidtostr@@Base+0x6ac>
    8cb4:	cmp	r0, #167	; 0xa7
    8cb8:	beq	c348 <bt_compidtostr@@Base+0x3d28>
    8cbc:	bhi	c354 <bt_compidtostr@@Base+0x3d34>
    8cc0:	ldr	r0, [pc, #2672]	; 9738 <bt_compidtostr@@Base+0x1118>
    8cc4:	add	r0, pc, r0
    8cc8:	bx	lr
    8ccc:	cmp	r0, #163	; 0xa3
    8cd0:	beq	c330 <bt_compidtostr@@Base+0x3d10>
    8cd4:	bhi	c33c <bt_compidtostr@@Base+0x3d1c>
    8cd8:	ldr	r0, [pc, #2652]	; 973c <bt_compidtostr@@Base+0x111c>
    8cdc:	add	r0, pc, r0
    8ce0:	bx	lr
    8ce4:	cmp	r0, #171	; 0xab
    8ce8:	beq	c36c <bt_compidtostr@@Base+0x3d4c>
    8cec:	bhi	c378 <bt_compidtostr@@Base+0x3d58>
    8cf0:	ldr	r0, [pc, #2632]	; 9740 <bt_compidtostr@@Base+0x1120>
    8cf4:	add	r0, pc, r0
    8cf8:	bx	lr
    8cfc:	cmp	r0, #181	; 0xb5
    8d00:	beq	c3a8 <bt_compidtostr@@Base+0x3d88>
    8d04:	bls	8d20 <bt_compidtostr@@Base+0x700>
    8d08:	cmp	r0, #183	; 0xb7
    8d0c:	beq	c3cc <bt_compidtostr@@Base+0x3dac>
    8d10:	bhi	c3d8 <bt_compidtostr@@Base+0x3db8>
    8d14:	ldr	r0, [pc, #2600]	; 9744 <bt_compidtostr@@Base+0x1124>
    8d18:	add	r0, pc, r0
    8d1c:	bx	lr
    8d20:	cmp	r0, #179	; 0xb3
    8d24:	beq	c3b4 <bt_compidtostr@@Base+0x3d94>
    8d28:	bhi	c3c0 <bt_compidtostr@@Base+0x3da0>
    8d2c:	ldr	r0, [pc, #2580]	; 9748 <bt_compidtostr@@Base+0x1128>
    8d30:	add	r0, pc, r0
    8d34:	bx	lr
    8d38:	cmp	r0, #187	; 0xbb
    8d3c:	beq	c3f0 <bt_compidtostr@@Base+0x3dd0>
    8d40:	bhi	c3fc <bt_compidtostr@@Base+0x3ddc>
    8d44:	ldr	r0, [pc, #2560]	; 974c <bt_compidtostr@@Base+0x112c>
    8d48:	add	r0, pc, r0
    8d4c:	bx	lr
    8d50:	ldr	r0, [pc, #2552]	; 9750 <bt_compidtostr@@Base+0x1130>
    8d54:	add	r0, pc, r0
    8d58:	bx	lr
    8d5c:	cmp	r0, #226	; 0xe2
    8d60:	beq	c42c <bt_compidtostr@@Base+0x3e0c>
    8d64:	bls	8dbc <bt_compidtostr@@Base+0x79c>
    8d68:	cmp	r0, #242	; 0xf2
    8d6c:	beq	c54c <bt_compidtostr@@Base+0x3f2c>
    8d70:	bls	8ed0 <bt_compidtostr@@Base+0x8b0>
    8d74:	cmp	r0, #250	; 0xfa
    8d78:	beq	c5dc <bt_compidtostr@@Base+0x3fbc>
    8d7c:	bls	8f54 <bt_compidtostr@@Base+0x934>
    8d80:	cmp	r0, #254	; 0xfe
    8d84:	beq	c624 <bt_compidtostr@@Base+0x4004>
    8d88:	bls	8f90 <bt_compidtostr@@Base+0x970>
    8d8c:	cmp	r0, #256	; 0x100
    8d90:	beq	c648 <bt_compidtostr@@Base+0x4028>
    8d94:	bcc	c654 <bt_compidtostr@@Base+0x4034>
    8d98:	movw	r3, #257	; 0x101
    8d9c:	cmp	r0, r3
    8da0:	beq	c660 <bt_compidtostr@@Base+0x4040>
    8da4:	movw	r3, #258	; 0x102
    8da8:	cmp	r0, r3
    8dac:	bne	8fa8 <bt_compidtostr@@Base+0x988>
    8db0:	ldr	r0, [pc, #2460]	; 9754 <bt_compidtostr@@Base+0x1134>
    8db4:	add	r0, pc, r0
    8db8:	bx	lr
    8dbc:	cmp	r0, #210	; 0xd2
    8dc0:	beq	c438 <bt_compidtostr@@Base+0x3e18>
    8dc4:	bls	8df8 <bt_compidtostr@@Base+0x7d8>
    8dc8:	cmp	r0, #218	; 0xda
    8dcc:	beq	c4c8 <bt_compidtostr@@Base+0x3ea8>
    8dd0:	bls	8e7c <bt_compidtostr@@Base+0x85c>
    8dd4:	cmp	r0, #222	; 0xde
    8dd8:	beq	c510 <bt_compidtostr@@Base+0x3ef0>
    8ddc:	bls	8eb8 <bt_compidtostr@@Base+0x898>
    8de0:	cmp	r0, #224	; 0xe0
    8de4:	beq	c534 <bt_compidtostr@@Base+0x3f14>
    8de8:	bhi	c540 <bt_compidtostr@@Base+0x3f20>
    8dec:	ldr	r0, [pc, #2404]	; 9758 <bt_compidtostr@@Base+0x1138>
    8df0:	add	r0, pc, r0
    8df4:	bx	lr
    8df8:	cmp	r0, #202	; 0xca
    8dfc:	beq	c444 <bt_compidtostr@@Base+0x3e24>
    8e00:	bls	8e28 <bt_compidtostr@@Base+0x808>
    8e04:	cmp	r0, #206	; 0xce
    8e08:	beq	c48c <bt_compidtostr@@Base+0x3e6c>
    8e0c:	bls	8e64 <bt_compidtostr@@Base+0x844>
    8e10:	cmp	r0, #208	; 0xd0
    8e14:	beq	c4b0 <bt_compidtostr@@Base+0x3e90>
    8e18:	bhi	c4bc <bt_compidtostr@@Base+0x3e9c>
    8e1c:	ldr	r0, [pc, #2360]	; 975c <bt_compidtostr@@Base+0x113c>
    8e20:	add	r0, pc, r0
    8e24:	bx	lr
    8e28:	cmp	r0, #198	; 0xc6
    8e2c:	beq	c450 <bt_compidtostr@@Base+0x3e30>
    8e30:	bls	8e4c <bt_compidtostr@@Base+0x82c>
    8e34:	cmp	r0, #200	; 0xc8
    8e38:	beq	c474 <bt_compidtostr@@Base+0x3e54>
    8e3c:	bhi	c480 <bt_compidtostr@@Base+0x3e60>
    8e40:	ldr	r0, [pc, #2328]	; 9760 <bt_compidtostr@@Base+0x1140>
    8e44:	add	r0, pc, r0
    8e48:	bx	lr
    8e4c:	cmp	r0, #196	; 0xc4
    8e50:	beq	c45c <bt_compidtostr@@Base+0x3e3c>
    8e54:	bhi	c468 <bt_compidtostr@@Base+0x3e48>
    8e58:	ldr	r0, [pc, #2308]	; 9764 <bt_compidtostr@@Base+0x1144>
    8e5c:	add	r0, pc, r0
    8e60:	bx	lr
    8e64:	cmp	r0, #204	; 0xcc
    8e68:	beq	c498 <bt_compidtostr@@Base+0x3e78>
    8e6c:	bhi	c4a4 <bt_compidtostr@@Base+0x3e84>
    8e70:	ldr	r0, [pc, #2288]	; 9768 <bt_compidtostr@@Base+0x1148>
    8e74:	add	r0, pc, r0
    8e78:	bx	lr
    8e7c:	cmp	r0, #214	; 0xd6
    8e80:	beq	c4d4 <bt_compidtostr@@Base+0x3eb4>
    8e84:	bls	8ea0 <bt_compidtostr@@Base+0x880>
    8e88:	cmp	r0, #216	; 0xd8
    8e8c:	beq	c4f8 <bt_compidtostr@@Base+0x3ed8>
    8e90:	bhi	c504 <bt_compidtostr@@Base+0x3ee4>
    8e94:	ldr	r0, [pc, #2256]	; 976c <bt_compidtostr@@Base+0x114c>
    8e98:	add	r0, pc, r0
    8e9c:	bx	lr
    8ea0:	cmp	r0, #212	; 0xd4
    8ea4:	beq	c4e0 <bt_compidtostr@@Base+0x3ec0>
    8ea8:	bhi	c4ec <bt_compidtostr@@Base+0x3ecc>
    8eac:	ldr	r0, [pc, #2236]	; 9770 <bt_compidtostr@@Base+0x1150>
    8eb0:	add	r0, pc, r0
    8eb4:	bx	lr
    8eb8:	cmp	r0, #220	; 0xdc
    8ebc:	beq	c51c <bt_compidtostr@@Base+0x3efc>
    8ec0:	bhi	c528 <bt_compidtostr@@Base+0x3f08>
    8ec4:	ldr	r0, [pc, #2216]	; 9774 <bt_compidtostr@@Base+0x1154>
    8ec8:	add	r0, pc, r0
    8ecc:	bx	lr
    8ed0:	cmp	r0, #234	; 0xea
    8ed4:	beq	c558 <bt_compidtostr@@Base+0x3f38>
    8ed8:	bls	8f00 <bt_compidtostr@@Base+0x8e0>
    8edc:	cmp	r0, #238	; 0xee
    8ee0:	beq	c5a0 <bt_compidtostr@@Base+0x3f80>
    8ee4:	bls	8f3c <bt_compidtostr@@Base+0x91c>
    8ee8:	cmp	r0, #240	; 0xf0
    8eec:	beq	c5c4 <bt_compidtostr@@Base+0x3fa4>
    8ef0:	bhi	c5d0 <bt_compidtostr@@Base+0x3fb0>
    8ef4:	ldr	r0, [pc, #2172]	; 9778 <bt_compidtostr@@Base+0x1158>
    8ef8:	add	r0, pc, r0
    8efc:	bx	lr
    8f00:	cmp	r0, #230	; 0xe6
    8f04:	beq	c564 <bt_compidtostr@@Base+0x3f44>
    8f08:	bls	8f24 <bt_compidtostr@@Base+0x904>
    8f0c:	cmp	r0, #232	; 0xe8
    8f10:	beq	c588 <bt_compidtostr@@Base+0x3f68>
    8f14:	bhi	c594 <bt_compidtostr@@Base+0x3f74>
    8f18:	ldr	r0, [pc, #2140]	; 977c <bt_compidtostr@@Base+0x115c>
    8f1c:	add	r0, pc, r0
    8f20:	bx	lr
    8f24:	cmp	r0, #228	; 0xe4
    8f28:	beq	c570 <bt_compidtostr@@Base+0x3f50>
    8f2c:	bhi	c57c <bt_compidtostr@@Base+0x3f5c>
    8f30:	ldr	r0, [pc, #2120]	; 9780 <bt_compidtostr@@Base+0x1160>
    8f34:	add	r0, pc, r0
    8f38:	bx	lr
    8f3c:	cmp	r0, #236	; 0xec
    8f40:	beq	c5ac <bt_compidtostr@@Base+0x3f8c>
    8f44:	bhi	c5b8 <bt_compidtostr@@Base+0x3f98>
    8f48:	ldr	r0, [pc, #2100]	; 9784 <bt_compidtostr@@Base+0x1164>
    8f4c:	add	r0, pc, r0
    8f50:	bx	lr
    8f54:	cmp	r0, #246	; 0xf6
    8f58:	beq	c5e8 <bt_compidtostr@@Base+0x3fc8>
    8f5c:	bls	8f78 <bt_compidtostr@@Base+0x958>
    8f60:	cmp	r0, #248	; 0xf8
    8f64:	beq	c60c <bt_compidtostr@@Base+0x3fec>
    8f68:	bhi	c618 <bt_compidtostr@@Base+0x3ff8>
    8f6c:	ldr	r0, [pc, #2068]	; 9788 <bt_compidtostr@@Base+0x1168>
    8f70:	add	r0, pc, r0
    8f74:	bx	lr
    8f78:	cmp	r0, #244	; 0xf4
    8f7c:	beq	c5f4 <bt_compidtostr@@Base+0x3fd4>
    8f80:	bhi	c600 <bt_compidtostr@@Base+0x3fe0>
    8f84:	ldr	r0, [pc, #2048]	; 978c <bt_compidtostr@@Base+0x116c>
    8f88:	add	r0, pc, r0
    8f8c:	bx	lr
    8f90:	cmp	r0, #252	; 0xfc
    8f94:	beq	c630 <bt_compidtostr@@Base+0x4010>
    8f98:	bhi	c63c <bt_compidtostr@@Base+0x401c>
    8f9c:	ldr	r0, [pc, #2028]	; 9790 <bt_compidtostr@@Base+0x1170>
    8fa0:	add	r0, pc, r0
    8fa4:	bx	lr
    8fa8:	ldr	r0, [pc, #2020]	; 9794 <bt_compidtostr@@Base+0x1174>
    8fac:	add	r0, pc, r0
    8fb0:	bx	lr
    8fb4:	movw	r3, #389	; 0x185
    8fb8:	cmp	r0, r3
    8fbc:	beq	c66c <bt_compidtostr@@Base+0x404c>
    8fc0:	bhi	9578 <bt_compidtostr@@Base+0xf58>
    8fc4:	cmp	r0, #324	; 0x144
    8fc8:	beq	c678 <bt_compidtostr@@Base+0x4058>
    8fcc:	bhi	92e4 <bt_compidtostr@@Base+0xcc4>
    8fd0:	movw	r3, #291	; 0x123
    8fd4:	cmp	r0, r3
    8fd8:	beq	c684 <bt_compidtostr@@Base+0x4064>
    8fdc:	cmp	r0, #292	; 0x124
    8fe0:	bcc	9058 <bt_compidtostr@@Base+0xa38>
    8fe4:	movw	r3, #307	; 0x133
    8fe8:	cmp	r0, r3
    8fec:	beq	c7a4 <bt_compidtostr@@Base+0x4184>
    8ff0:	cmp	r0, #308	; 0x134
    8ff4:	bcc	91c4 <bt_compidtostr@@Base+0xba4>
    8ff8:	movw	r3, #315	; 0x13b
    8ffc:	cmp	r0, r3
    9000:	beq	c834 <bt_compidtostr@@Base+0x4214>
    9004:	cmp	r0, #316	; 0x13c
    9008:	bcc	9270 <bt_compidtostr@@Base+0xc50>
    900c:	movw	r3, #319	; 0x13f
    9010:	cmp	r0, r3
    9014:	beq	c87c <bt_compidtostr@@Base+0x425c>
    9018:	cmp	r0, #320	; 0x140
    901c:	bcc	92bc <bt_compidtostr@@Base+0xc9c>
    9020:	movw	r3, #321	; 0x141
    9024:	cmp	r0, r3
    9028:	beq	c8a0 <bt_compidtostr@@Base+0x4280>
    902c:	cmp	r0, #320	; 0x140
    9030:	bls	c8ac <bt_compidtostr@@Base+0x428c>
    9034:	movw	r3, #322	; 0x142
    9038:	cmp	r0, r3
    903c:	beq	c8b8 <bt_compidtostr@@Base+0x4298>
    9040:	movw	r3, #323	; 0x143
    9044:	cmp	r0, r3
    9048:	bne	92d8 <bt_compidtostr@@Base+0xcb8>
    904c:	ldr	r0, [pc, #1860]	; 9798 <bt_compidtostr@@Base+0x1178>
    9050:	add	r0, pc, r0
    9054:	bx	lr
    9058:	movw	r3, #275	; 0x113
    905c:	cmp	r0, r3
    9060:	beq	c690 <bt_compidtostr@@Base+0x4070>
    9064:	cmp	r0, #276	; 0x114
    9068:	bcc	90b0 <bt_compidtostr@@Base+0xa90>
    906c:	movw	r3, #283	; 0x11b
    9070:	cmp	r0, r3
    9074:	beq	c720 <bt_compidtostr@@Base+0x4100>
    9078:	cmp	r0, #284	; 0x11c
    907c:	bcc	915c <bt_compidtostr@@Base+0xb3c>
    9080:	movw	r3, #287	; 0x11f
    9084:	cmp	r0, r3
    9088:	beq	c768 <bt_compidtostr@@Base+0x4148>
    908c:	cmp	r0, #288	; 0x120
    9090:	bcc	91a8 <bt_compidtostr@@Base+0xb88>
    9094:	movw	r3, #289	; 0x121
    9098:	cmp	r0, r3
    909c:	beq	c78c <bt_compidtostr@@Base+0x416c>
    90a0:	bhi	c798 <bt_compidtostr@@Base+0x4178>
    90a4:	ldr	r0, [pc, #1776]	; 979c <bt_compidtostr@@Base+0x117c>
    90a8:	add	r0, pc, r0
    90ac:	bx	lr
    90b0:	movw	r3, #267	; 0x10b
    90b4:	cmp	r0, r3
    90b8:	beq	c69c <bt_compidtostr@@Base+0x407c>
    90bc:	cmp	r0, #268	; 0x10c
    90c0:	bcc	90f4 <bt_compidtostr@@Base+0xad4>
    90c4:	movw	r3, #271	; 0x10f
    90c8:	cmp	r0, r3
    90cc:	beq	c6e4 <bt_compidtostr@@Base+0x40c4>
    90d0:	cmp	r0, #272	; 0x110
    90d4:	bcc	9140 <bt_compidtostr@@Base+0xb20>
    90d8:	movw	r3, #273	; 0x111
    90dc:	cmp	r0, r3
    90e0:	beq	c708 <bt_compidtostr@@Base+0x40e8>
    90e4:	bhi	c714 <bt_compidtostr@@Base+0x40f4>
    90e8:	ldr	r0, [pc, #1712]	; 97a0 <bt_compidtostr@@Base+0x1180>
    90ec:	add	r0, pc, r0
    90f0:	bx	lr
    90f4:	movw	r3, #263	; 0x107
    90f8:	cmp	r0, r3
    90fc:	beq	c6a8 <bt_compidtostr@@Base+0x4088>
    9100:	cmp	r0, #264	; 0x108
    9104:	bcc	9124 <bt_compidtostr@@Base+0xb04>
    9108:	movw	r3, #265	; 0x109
    910c:	cmp	r0, r3
    9110:	beq	c6cc <bt_compidtostr@@Base+0x40ac>
    9114:	bhi	c6d8 <bt_compidtostr@@Base+0x40b8>
    9118:	ldr	r0, [pc, #1668]	; 97a4 <bt_compidtostr@@Base+0x1184>
    911c:	add	r0, pc, r0
    9120:	bx	lr
    9124:	movw	r3, #261	; 0x105
    9128:	cmp	r0, r3
    912c:	beq	c6b4 <bt_compidtostr@@Base+0x4094>
    9130:	bhi	c6c0 <bt_compidtostr@@Base+0x40a0>
    9134:	ldr	r0, [pc, #1644]	; 97a8 <bt_compidtostr@@Base+0x1188>
    9138:	add	r0, pc, r0
    913c:	bx	lr
    9140:	movw	r3, #269	; 0x10d
    9144:	cmp	r0, r3
    9148:	beq	c6f0 <bt_compidtostr@@Base+0x40d0>
    914c:	bhi	c6fc <bt_compidtostr@@Base+0x40dc>
    9150:	ldr	r0, [pc, #1620]	; 97ac <bt_compidtostr@@Base+0x118c>
    9154:	add	r0, pc, r0
    9158:	bx	lr
    915c:	movw	r3, #279	; 0x117
    9160:	cmp	r0, r3
    9164:	beq	c72c <bt_compidtostr@@Base+0x410c>
    9168:	cmp	r0, #280	; 0x118
    916c:	bcc	918c <bt_compidtostr@@Base+0xb6c>
    9170:	movw	r3, #281	; 0x119
    9174:	cmp	r0, r3
    9178:	beq	c750 <bt_compidtostr@@Base+0x4130>
    917c:	bhi	c75c <bt_compidtostr@@Base+0x413c>
    9180:	ldr	r0, [pc, #1576]	; 97b0 <bt_compidtostr@@Base+0x1190>
    9184:	add	r0, pc, r0
    9188:	bx	lr
    918c:	movw	r3, #277	; 0x115
    9190:	cmp	r0, r3
    9194:	beq	c738 <bt_compidtostr@@Base+0x4118>
    9198:	bhi	c744 <bt_compidtostr@@Base+0x4124>
    919c:	ldr	r0, [pc, #1552]	; 97b4 <bt_compidtostr@@Base+0x1194>
    91a0:	add	r0, pc, r0
    91a4:	bx	lr
    91a8:	movw	r3, #285	; 0x11d
    91ac:	cmp	r0, r3
    91b0:	beq	c774 <bt_compidtostr@@Base+0x4154>
    91b4:	bhi	c780 <bt_compidtostr@@Base+0x4160>
    91b8:	ldr	r0, [pc, #1528]	; 97b8 <bt_compidtostr@@Base+0x1198>
    91bc:	add	r0, pc, r0
    91c0:	bx	lr
    91c4:	movw	r3, #299	; 0x12b
    91c8:	cmp	r0, r3
    91cc:	beq	c7b0 <bt_compidtostr@@Base+0x4190>
    91d0:	cmp	r0, #300	; 0x12c
    91d4:	bcc	9208 <bt_compidtostr@@Base+0xbe8>
    91d8:	movw	r3, #303	; 0x12f
    91dc:	cmp	r0, r3
    91e0:	beq	c7f8 <bt_compidtostr@@Base+0x41d8>
    91e4:	cmp	r0, #304	; 0x130
    91e8:	bcc	9254 <bt_compidtostr@@Base+0xc34>
    91ec:	movw	r3, #305	; 0x131
    91f0:	cmp	r0, r3
    91f4:	beq	c81c <bt_compidtostr@@Base+0x41fc>
    91f8:	bhi	c828 <bt_compidtostr@@Base+0x4208>
    91fc:	ldr	r0, [pc, #1464]	; 97bc <bt_compidtostr@@Base+0x119c>
    9200:	add	r0, pc, r0
    9204:	bx	lr
    9208:	movw	r3, #295	; 0x127
    920c:	cmp	r0, r3
    9210:	beq	c7bc <bt_compidtostr@@Base+0x419c>
    9214:	cmp	r0, #296	; 0x128
    9218:	bcc	9238 <bt_compidtostr@@Base+0xc18>
    921c:	movw	r3, #297	; 0x129
    9220:	cmp	r0, r3
    9224:	beq	c7e0 <bt_compidtostr@@Base+0x41c0>
    9228:	bhi	c7ec <bt_compidtostr@@Base+0x41cc>
    922c:	ldr	r0, [pc, #1420]	; 97c0 <bt_compidtostr@@Base+0x11a0>
    9230:	add	r0, pc, r0
    9234:	bx	lr
    9238:	movw	r3, #293	; 0x125
    923c:	cmp	r0, r3
    9240:	beq	c7c8 <bt_compidtostr@@Base+0x41a8>
    9244:	bhi	c7d4 <bt_compidtostr@@Base+0x41b4>
    9248:	ldr	r0, [pc, #1396]	; 97c4 <bt_compidtostr@@Base+0x11a4>
    924c:	add	r0, pc, r0
    9250:	bx	lr
    9254:	movw	r3, #301	; 0x12d
    9258:	cmp	r0, r3
    925c:	beq	c804 <bt_compidtostr@@Base+0x41e4>
    9260:	bhi	c810 <bt_compidtostr@@Base+0x41f0>
    9264:	ldr	r0, [pc, #1372]	; 97c8 <bt_compidtostr@@Base+0x11a8>
    9268:	add	r0, pc, r0
    926c:	bx	lr
    9270:	movw	r3, #311	; 0x137
    9274:	cmp	r0, r3
    9278:	beq	c840 <bt_compidtostr@@Base+0x4220>
    927c:	cmp	r0, #312	; 0x138
    9280:	bcc	92a0 <bt_compidtostr@@Base+0xc80>
    9284:	movw	r3, #313	; 0x139
    9288:	cmp	r0, r3
    928c:	beq	c864 <bt_compidtostr@@Base+0x4244>
    9290:	bhi	c870 <bt_compidtostr@@Base+0x4250>
    9294:	ldr	r0, [pc, #1328]	; 97cc <bt_compidtostr@@Base+0x11ac>
    9298:	add	r0, pc, r0
    929c:	bx	lr
    92a0:	movw	r3, #309	; 0x135
    92a4:	cmp	r0, r3
    92a8:	beq	c84c <bt_compidtostr@@Base+0x422c>
    92ac:	bhi	c858 <bt_compidtostr@@Base+0x4238>
    92b0:	ldr	r0, [pc, #1304]	; 97d0 <bt_compidtostr@@Base+0x11b0>
    92b4:	add	r0, pc, r0
    92b8:	bx	lr
    92bc:	movw	r3, #317	; 0x13d
    92c0:	cmp	r0, r3
    92c4:	beq	c888 <bt_compidtostr@@Base+0x4268>
    92c8:	bhi	c894 <bt_compidtostr@@Base+0x4274>
    92cc:	ldr	r0, [pc, #1280]	; 97d4 <bt_compidtostr@@Base+0x11b4>
    92d0:	add	r0, pc, r0
    92d4:	bx	lr
    92d8:	ldr	r0, [pc, #1272]	; 97d8 <bt_compidtostr@@Base+0x11b8>
    92dc:	add	r0, pc, r0
    92e0:	bx	lr
    92e4:	cmp	r0, #356	; 0x164
    92e8:	beq	c8c4 <bt_compidtostr@@Base+0x42a4>
    92ec:	bls	9344 <bt_compidtostr@@Base+0xd24>
    92f0:	cmp	r0, #372	; 0x174
    92f4:	beq	c9e4 <bt_compidtostr@@Base+0x43c4>
    92f8:	bls	9478 <bt_compidtostr@@Base+0xe58>
    92fc:	cmp	r0, #380	; 0x17c
    9300:	beq	ca74 <bt_compidtostr@@Base+0x4454>
    9304:	bls	950c <bt_compidtostr@@Base+0xeec>
    9308:	cmp	r0, #384	; 0x180
    930c:	beq	cabc <bt_compidtostr@@Base+0x449c>
    9310:	bls	9550 <bt_compidtostr@@Base+0xf30>
    9314:	movw	r3, #386	; 0x182
    9318:	cmp	r0, r3
    931c:	beq	cae0 <bt_compidtostr@@Base+0x44c0>
    9320:	bcc	caec <bt_compidtostr@@Base+0x44cc>
    9324:	movw	r3, #387	; 0x183
    9328:	cmp	r0, r3
    932c:	beq	caf8 <bt_compidtostr@@Base+0x44d8>
    9330:	cmp	r0, #388	; 0x184
    9334:	bne	956c <bt_compidtostr@@Base+0xf4c>
    9338:	ldr	r0, [pc, #1180]	; 97dc <bt_compidtostr@@Base+0x11bc>
    933c:	add	r0, pc, r0
    9340:	bx	lr
    9344:	cmp	r0, #340	; 0x154
    9348:	beq	c8d0 <bt_compidtostr@@Base+0x42b0>
    934c:	bls	9384 <bt_compidtostr@@Base+0xd64>
    9350:	cmp	r0, #348	; 0x15c
    9354:	beq	c960 <bt_compidtostr@@Base+0x4340>
    9358:	bls	9418 <bt_compidtostr@@Base+0xdf8>
    935c:	cmp	r0, #352	; 0x160
    9360:	beq	c9a8 <bt_compidtostr@@Base+0x4388>
    9364:	bls	945c <bt_compidtostr@@Base+0xe3c>
    9368:	movw	r3, #354	; 0x162
    936c:	cmp	r0, r3
    9370:	beq	c9cc <bt_compidtostr@@Base+0x43ac>
    9374:	bhi	c9d8 <bt_compidtostr@@Base+0x43b8>
    9378:	ldr	r0, [pc, #1120]	; 97e0 <bt_compidtostr@@Base+0x11c0>
    937c:	add	r0, pc, r0
    9380:	bx	lr
    9384:	cmp	r0, #332	; 0x14c
    9388:	beq	c8dc <bt_compidtostr@@Base+0x42bc>
    938c:	bls	93b8 <bt_compidtostr@@Base+0xd98>
    9390:	cmp	r0, #336	; 0x150
    9394:	beq	c924 <bt_compidtostr@@Base+0x4304>
    9398:	bls	93fc <bt_compidtostr@@Base+0xddc>
    939c:	movw	r3, #338	; 0x152
    93a0:	cmp	r0, r3
    93a4:	beq	c948 <bt_compidtostr@@Base+0x4328>
    93a8:	bhi	c954 <bt_compidtostr@@Base+0x4334>
    93ac:	ldr	r0, [pc, #1072]	; 97e4 <bt_compidtostr@@Base+0x11c4>
    93b0:	add	r0, pc, r0
    93b4:	bx	lr
    93b8:	cmp	r0, #328	; 0x148
    93bc:	beq	c8e8 <bt_compidtostr@@Base+0x42c8>
    93c0:	bls	93e0 <bt_compidtostr@@Base+0xdc0>
    93c4:	movw	r3, #330	; 0x14a
    93c8:	cmp	r0, r3
    93cc:	beq	c90c <bt_compidtostr@@Base+0x42ec>
    93d0:	bhi	c918 <bt_compidtostr@@Base+0x42f8>
    93d4:	ldr	r0, [pc, #1036]	; 97e8 <bt_compidtostr@@Base+0x11c8>
    93d8:	add	r0, pc, r0
    93dc:	bx	lr
    93e0:	movw	r3, #326	; 0x146
    93e4:	cmp	r0, r3
    93e8:	beq	c8f4 <bt_compidtostr@@Base+0x42d4>
    93ec:	bhi	c900 <bt_compidtostr@@Base+0x42e0>
    93f0:	ldr	r0, [pc, #1012]	; 97ec <bt_compidtostr@@Base+0x11cc>
    93f4:	add	r0, pc, r0
    93f8:	bx	lr
    93fc:	movw	r3, #334	; 0x14e
    9400:	cmp	r0, r3
    9404:	beq	c930 <bt_compidtostr@@Base+0x4310>
    9408:	bhi	c93c <bt_compidtostr@@Base+0x431c>
    940c:	ldr	r0, [pc, #988]	; 97f0 <bt_compidtostr@@Base+0x11d0>
    9410:	add	r0, pc, r0
    9414:	bx	lr
    9418:	cmp	r0, #344	; 0x158
    941c:	beq	c96c <bt_compidtostr@@Base+0x434c>
    9420:	bls	9440 <bt_compidtostr@@Base+0xe20>
    9424:	movw	r3, #346	; 0x15a
    9428:	cmp	r0, r3
    942c:	beq	c990 <bt_compidtostr@@Base+0x4370>
    9430:	bhi	c99c <bt_compidtostr@@Base+0x437c>
    9434:	ldr	r0, [pc, #952]	; 97f4 <bt_compidtostr@@Base+0x11d4>
    9438:	add	r0, pc, r0
    943c:	bx	lr
    9440:	movw	r3, #342	; 0x156
    9444:	cmp	r0, r3
    9448:	beq	c978 <bt_compidtostr@@Base+0x4358>
    944c:	bhi	c984 <bt_compidtostr@@Base+0x4364>
    9450:	ldr	r0, [pc, #928]	; 97f8 <bt_compidtostr@@Base+0x11d8>
    9454:	add	r0, pc, r0
    9458:	bx	lr
    945c:	movw	r3, #350	; 0x15e
    9460:	cmp	r0, r3
    9464:	beq	c9b4 <bt_compidtostr@@Base+0x4394>
    9468:	bhi	c9c0 <bt_compidtostr@@Base+0x43a0>
    946c:	ldr	r0, [pc, #904]	; 97fc <bt_compidtostr@@Base+0x11dc>
    9470:	add	r0, pc, r0
    9474:	bx	lr
    9478:	cmp	r0, #364	; 0x16c
    947c:	beq	c9f0 <bt_compidtostr@@Base+0x43d0>
    9480:	bls	94ac <bt_compidtostr@@Base+0xe8c>
    9484:	cmp	r0, #368	; 0x170
    9488:	beq	ca38 <bt_compidtostr@@Base+0x4418>
    948c:	bls	94f0 <bt_compidtostr@@Base+0xed0>
    9490:	movw	r3, #370	; 0x172
    9494:	cmp	r0, r3
    9498:	beq	ca5c <bt_compidtostr@@Base+0x443c>
    949c:	bhi	ca68 <bt_compidtostr@@Base+0x4448>
    94a0:	ldr	r0, [pc, #856]	; 9800 <bt_compidtostr@@Base+0x11e0>
    94a4:	add	r0, pc, r0
    94a8:	bx	lr
    94ac:	cmp	r0, #360	; 0x168
    94b0:	beq	c9fc <bt_compidtostr@@Base+0x43dc>
    94b4:	bls	94d4 <bt_compidtostr@@Base+0xeb4>
    94b8:	movw	r3, #362	; 0x16a
    94bc:	cmp	r0, r3
    94c0:	beq	ca20 <bt_compidtostr@@Base+0x4400>
    94c4:	bhi	ca2c <bt_compidtostr@@Base+0x440c>
    94c8:	ldr	r0, [pc, #820]	; 9804 <bt_compidtostr@@Base+0x11e4>
    94cc:	add	r0, pc, r0
    94d0:	bx	lr
    94d4:	movw	r3, #358	; 0x166
    94d8:	cmp	r0, r3
    94dc:	beq	ca08 <bt_compidtostr@@Base+0x43e8>
    94e0:	bhi	ca14 <bt_compidtostr@@Base+0x43f4>
    94e4:	ldr	r0, [pc, #796]	; 9808 <bt_compidtostr@@Base+0x11e8>
    94e8:	add	r0, pc, r0
    94ec:	bx	lr
    94f0:	movw	r3, #366	; 0x16e
    94f4:	cmp	r0, r3
    94f8:	beq	ca44 <bt_compidtostr@@Base+0x4424>
    94fc:	bhi	ca50 <bt_compidtostr@@Base+0x4430>
    9500:	ldr	r0, [pc, #772]	; 980c <bt_compidtostr@@Base+0x11ec>
    9504:	add	r0, pc, r0
    9508:	bx	lr
    950c:	cmp	r0, #376	; 0x178
    9510:	beq	ca80 <bt_compidtostr@@Base+0x4460>
    9514:	bls	9534 <bt_compidtostr@@Base+0xf14>
    9518:	movw	r3, #378	; 0x17a
    951c:	cmp	r0, r3
    9520:	beq	caa4 <bt_compidtostr@@Base+0x4484>
    9524:	bhi	cab0 <bt_compidtostr@@Base+0x4490>
    9528:	ldr	r0, [pc, #736]	; 9810 <bt_compidtostr@@Base+0x11f0>
    952c:	add	r0, pc, r0
    9530:	bx	lr
    9534:	movw	r3, #374	; 0x176
    9538:	cmp	r0, r3
    953c:	beq	ca8c <bt_compidtostr@@Base+0x446c>
    9540:	bhi	ca98 <bt_compidtostr@@Base+0x4478>
    9544:	ldr	r0, [pc, #712]	; 9814 <bt_compidtostr@@Base+0x11f4>
    9548:	add	r0, pc, r0
    954c:	bx	lr
    9550:	movw	r3, #382	; 0x17e
    9554:	cmp	r0, r3
    9558:	beq	cac8 <bt_compidtostr@@Base+0x44a8>
    955c:	bhi	cad4 <bt_compidtostr@@Base+0x44b4>
    9560:	ldr	r0, [pc, #688]	; 9818 <bt_compidtostr@@Base+0x11f8>
    9564:	add	r0, pc, r0
    9568:	bx	lr
    956c:	ldr	r0, [pc, #680]	; 981c <bt_compidtostr@@Base+0x11fc>
    9570:	add	r0, pc, r0
    9574:	bx	lr
    9578:	movw	r3, #454	; 0x1c6
    957c:	cmp	r0, r3
    9580:	beq	cb04 <bt_compidtostr@@Base+0x44e4>
    9584:	bhi	9bb8 <bt_compidtostr@@Base+0x1598>
    9588:	movw	r3, #421	; 0x1a5
    958c:	cmp	r0, r3
    9590:	beq	cb10 <bt_compidtostr@@Base+0x44f0>
    9594:	bls	95f8 <bt_compidtostr@@Base+0xfd8>
    9598:	movw	r3, #437	; 0x1b5
    959c:	cmp	r0, r3
    95a0:	beq	cc30 <bt_compidtostr@@Base+0x4610>
    95a4:	bls	9a8c <bt_compidtostr@@Base+0x146c>
    95a8:	movw	r3, #445	; 0x1bd
    95ac:	cmp	r0, r3
    95b0:	beq	ccc0 <bt_compidtostr@@Base+0x46a0>
    95b4:	bls	9b3c <bt_compidtostr@@Base+0x151c>
    95b8:	movw	r3, #449	; 0x1c1
    95bc:	cmp	r0, r3
    95c0:	beq	cd08 <bt_compidtostr@@Base+0x46e8>
    95c4:	bls	9b8c <bt_compidtostr@@Base+0x156c>
    95c8:	movw	r3, #451	; 0x1c3
    95cc:	cmp	r0, r3
    95d0:	beq	cd2c <bt_compidtostr@@Base+0x470c>
    95d4:	bcc	cd38 <bt_compidtostr@@Base+0x4718>
    95d8:	cmp	r0, #452	; 0x1c4
    95dc:	beq	cd44 <bt_compidtostr@@Base+0x4724>
    95e0:	movw	r3, #453	; 0x1c5
    95e4:	cmp	r0, r3
    95e8:	bne	9bac <bt_compidtostr@@Base+0x158c>
    95ec:	ldr	r0, [pc, #556]	; 9820 <bt_compidtostr@@Base+0x1200>
    95f0:	add	r0, pc, r0
    95f4:	bx	lr
    95f8:	movw	r3, #405	; 0x195
    95fc:	cmp	r0, r3
    9600:	beq	cb1c <bt_compidtostr@@Base+0x44fc>
    9604:	bls	9648 <bt_compidtostr@@Base+0x1028>
    9608:	movw	r3, #413	; 0x19d
    960c:	cmp	r0, r3
    9610:	beq	cbac <bt_compidtostr@@Base+0x458c>
    9614:	bls	9a1c <bt_compidtostr@@Base+0x13fc>
    9618:	movw	r3, #417	; 0x1a1
    961c:	cmp	r0, r3
    9620:	beq	cbf4 <bt_compidtostr@@Base+0x45d4>
    9624:	bls	9a6c <bt_compidtostr@@Base+0x144c>
    9628:	movw	r3, #419	; 0x1a3
    962c:	cmp	r0, r3
    9630:	beq	cc18 <bt_compidtostr@@Base+0x45f8>
    9634:	cmp	r0, #420	; 0x1a4
    9638:	bcs	cc24 <bt_compidtostr@@Base+0x4604>
    963c:	ldr	r0, [pc, #480]	; 9824 <bt_compidtostr@@Base+0x1204>
    9640:	add	r0, pc, r0
    9644:	bx	lr
    9648:	movw	r3, #397	; 0x18d
    964c:	cmp	r0, r3
    9650:	beq	cb28 <bt_compidtostr@@Base+0x4508>
    9654:	bls	99ac <bt_compidtostr@@Base+0x138c>
    9658:	movw	r3, #401	; 0x191
    965c:	cmp	r0, r3
    9660:	beq	cb70 <bt_compidtostr@@Base+0x4550>
    9664:	bls	99fc <bt_compidtostr@@Base+0x13dc>
    9668:	movw	r3, #403	; 0x193
    966c:	cmp	r0, r3
    9670:	beq	cb94 <bt_compidtostr@@Base+0x4574>
    9674:	cmp	r0, #404	; 0x194
    9678:	bcs	cba0 <bt_compidtostr@@Base+0x4580>
    967c:	ldr	r0, [pc, #420]	; 9828 <bt_compidtostr@@Base+0x1208>
    9680:	add	r0, pc, r0
    9684:	bx	lr
    9688:	andeq	fp, r0, r0, lsl r4
    968c:	strheq	fp, [r0], -r0
    9690:	andeq	sl, r0, r8, lsl pc
    9694:	andeq	sl, r0, r8, ror lr
    9698:	andeq	sl, r0, r8, lsr #28
    969c:	andeq	sl, r0, r4, ror lr
    96a0:	andeq	sl, r0, r8, asr pc
    96a4:	strdeq	sl, [r0], -ip
    96a8:	andeq	sl, r0, r8, ror pc
    96ac:	ldrdeq	fp, [r0], -r8
    96b0:	andeq	fp, r0, r0, lsl r0
    96b4:	andeq	sl, r0, r8, lsr #31
    96b8:	andeq	fp, r0, r0, asr #32
    96bc:	andeq	fp, r0, r8, lsl #2
    96c0:	andeq	fp, r0, r4, lsr #1
    96c4:	andeq	fp, r0, ip, asr r1
    96c8:	andeq	sl, r0, r8, asr #25
    96cc:	muleq	r0, r8, r7
    96d0:	andeq	fp, r0, ip, asr r4
    96d4:	andeq	fp, r0, r4, lsr #5
    96d8:	andeq	fp, r0, r8, asr #3
    96dc:	andeq	fp, r0, r4, asr #2
    96e0:	strdeq	fp, [r0], -r4
    96e4:	ldrdeq	fp, [r0], -r4
    96e8:	andeq	fp, r0, ip, ror #4
    96ec:	andeq	fp, r0, r0, lsl r3
    96f0:	andeq	fp, r0, ip, lsr #9
    96f4:	andeq	fp, r0, r4, ror #7
    96f8:	andeq	fp, r0, r8, ror r3
    96fc:	strdeq	fp, [r0], -ip
    9700:	andeq	fp, r0, r0, ror #9
    9704:	andeq	fp, r0, ip, ror #8
    9708:	andeq	fp, r0, ip, lsl #10
    970c:	andeq	sl, r0, r8, ror sl
    9710:	andeq	fp, r0, ip, asr fp
    9714:	andeq	fp, r0, ip, lsl #16
    9718:	andeq	fp, r0, r0, lsr r6
    971c:	andeq	fp, r0, r4, asr #10
    9720:	andeq	fp, r0, r8, asr #9
    9724:	andeq	fp, r0, r4, asr r5
    9728:	andeq	fp, r0, r4, lsr #13
    972c:	andeq	fp, r0, r0, lsr r6
    9730:	ldrdeq	fp, [r0], -r8
    9734:	andeq	fp, r0, r8, ror #16
    9738:	andeq	fp, r0, r8, lsl #15
    973c:	andeq	fp, r0, r4, lsr #14
    9740:	andeq	fp, r0, ip, lsr #15
    9744:	muleq	r0, r8, r8
    9748:	andeq	fp, r0, r8, lsr #16
    974c:	andeq	fp, r0, r8, asr #17
    9750:	andeq	sl, r0, ip, lsl r8
    9754:	andeq	fp, r0, ip, lsl lr
    9758:	andeq	fp, r0, r8, lsr #22
    975c:	andeq	fp, r0, ip, lsl #19
    9760:	strdeq	fp, [r0], -r0
    9764:	muleq	r0, r4, r8
    9768:	andeq	fp, r0, r8, ror #17
    976c:	ldrdeq	fp, [r0], -r4
    9770:	andeq	fp, r0, r0, asr r9
    9774:	andeq	fp, r0, ip, lsl #20
    9778:	andeq	fp, r0, r4, ror #22
    977c:	andeq	fp, r0, ip, lsl #21
    9780:	andeq	fp, r0, r0, lsr #20
    9784:	andeq	fp, r0, ip, lsr #21
    9788:	andeq	fp, r0, r8, lsr #23
    978c:	andeq	fp, r0, r8, asr #22
    9790:	andeq	fp, r0, r0, asr #23
    9794:	andeq	sl, r0, r4, asr #11
    9798:	ldrdeq	ip, [r0], -r4
    979c:	muleq	r0, r8, sp
    97a0:	andeq	fp, r0, r0, lsr ip
    97a4:	andeq	fp, r0, r4, ror #22
    97a8:	andeq	fp, r0, r0, asr #21
    97ac:	andeq	fp, r0, r0, ror fp
    97b0:	andeq	fp, r0, r0, lsr ip
    97b4:	ldrdeq	fp, [r0], -r4
    97b8:	andeq	fp, r0, r0, asr ip
    97bc:	andeq	fp, r0, r4, ror #26
    97c0:	muleq	r0, r4, ip
    97c4:	andeq	fp, r0, r8, lsr ip
    97c8:			; <UNDEFINED> instruction: 0x0000bcb0
    97cc:	muleq	r0, ip, sp
    97d0:	andeq	fp, r0, r0, lsl sp
    97d4:			; <UNDEFINED> instruction: 0x0000bdb4
    97d8:	muleq	r0, r4, r2
    97dc:	ldrdeq	ip, [r0], -r8
    97e0:	ldrdeq	fp, [r0], -r4
    97e4:	andeq	fp, r0, r4, ror lr
    97e8:			; <UNDEFINED> instruction: 0x0000bdb0
    97ec:	andeq	fp, r0, r0, asr sp
    97f0:			; <UNDEFINED> instruction: 0x0000bdb8
    97f4:	andeq	fp, r0, ip, lsl #29
    97f8:	andeq	fp, r0, r8, lsl lr
    97fc:	muleq	r0, ip, lr
    9800:	strdeq	fp, [r0], -r8
    9804:	andeq	fp, r0, r0, asr pc
    9808:	andeq	fp, r0, ip, asr #29
    980c:	andeq	fp, r0, r4, asr pc
    9810:	andeq	ip, r0, ip, lsl r0
    9814:			; <UNDEFINED> instruction: 0x0000bfb8
    9818:	andeq	ip, r0, r0, lsr r0
    981c:	andeq	sl, r0, r0
    9820:	andeq	ip, r0, r8, lsr r5
    9824:	andeq	ip, r0, r0, lsr r2
    9828:	andeq	ip, r0, r8, lsr #1
    982c:	andeq	fp, r0, r8, lsr #25
    9830:	andeq	fp, r0, r8, lsr ip
    9834:	andeq	fp, r0, r0, asr #25
    9838:	muleq	r0, r4, sp
    983c:	andeq	fp, r0, r0, lsl sp
    9840:	andeq	fp, r0, ip, lsr #27
    9844:	strdeq	fp, [r0], -r4
    9848:	andeq	fp, r0, r4, lsl #28
    984c:	andeq	fp, r0, r8, lsr #27
    9850:	andeq	fp, r0, r4, lsr #28
    9854:	ldrdeq	fp, [r0], -r8
    9858:	andeq	fp, r0, r0, ror lr
    985c:	strdeq	fp, [r0], -r4
    9860:	andeq	r9, r0, r0, asr #19
    9864:	andeq	ip, r0, ip, lsr r4
    9868:	strdeq	ip, [r0], -r4
    986c:	andeq	fp, r0, r8, ror pc
    9870:			; <UNDEFINED> instruction: 0x0000bebc
    9874:	andeq	fp, r0, r4, ror #28
    9878:	andeq	fp, r0, r8, ror #29
    987c:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    9880:	andeq	fp, r0, r0, lsr #30
    9884:	ldrdeq	fp, [r0], -r0
    9888:	andeq	ip, r0, r0, lsr #2
    988c:	andeq	ip, r0, ip, asr #32
    9890:	andeq	fp, r0, ip, ror #31
    9894:	andeq	ip, r0, r0, ror r0
    9898:	andeq	ip, r0, ip, asr r1
    989c:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    98a0:	muleq	r0, r4, r1
    98a4:	andeq	r9, r0, ip, lsr #14
    98a8:	andeq	ip, r0, r4, ror r6
    98ac:	andeq	ip, r0, r4, asr r3
    98b0:	andeq	ip, r0, r0, ror #3
    98b4:	andeq	ip, r0, r4, lsl #2
    98b8:	muleq	r0, r8, r0
    98bc:	andeq	ip, r0, r0, lsr r1
    98c0:	andeq	ip, r0, r0, ror #3
    98c4:	andeq	ip, r0, ip, ror r1
    98c8:	andeq	ip, r0, r8, ror #3
    98cc:	andeq	ip, r0, ip, asr r3
    98d0:	andeq	ip, r0, ip, ror #4
    98d4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    98d8:	muleq	r0, r0, r2
    98dc:	andeq	ip, r0, r4, ror r3
    98e0:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    98e4:	andeq	ip, r0, r4, lsl #7
    98e8:	andeq	r9, r0, r8, ror #7
    98ec:	ldrdeq	ip, [r0], -r4
    98f0:	andeq	ip, r0, r0, ror #11
    98f4:	andeq	ip, r0, ip, lsr #8
    98f8:	andeq	ip, r0, r4, asr r3
    98fc:	strdeq	ip, [r0], -r8
    9900:	andeq	ip, r0, ip, lsl #7
    9904:	muleq	r0, r0, r4
    9908:	andeq	ip, r0, r8, ror #7
    990c:	andeq	ip, r0, r8, lsr #9
    9910:	andeq	ip, r0, r0, ror #11
    9914:	andeq	ip, r0, r0, lsr r5
    9918:			; <UNDEFINED> instruction: 0x0000c4b8
    991c:	andeq	ip, r0, r0, asr #10
    9920:	strdeq	ip, [r0], -r0
    9924:	andeq	ip, r0, r8, lsl #11
    9928:	andeq	ip, r0, ip, lsr #12
    992c:	andeq	r9, r0, r4, asr r1
    9930:	andeq	ip, r0, r0, lsl #23
    9934:	andeq	ip, r0, r8, lsl #16
    9938:	andeq	ip, r0, ip, ror #12
    993c:			; <UNDEFINED> instruction: 0x0000c5bc
    9940:	andeq	ip, r0, r8, ror #10
    9944:	andeq	ip, r0, r4, asr #11
    9948:	andeq	ip, r0, r4, ror #12
    994c:	andeq	ip, r0, ip, ror #11
    9950:	andeq	ip, r0, r0, lsl #13
    9954:	andeq	ip, r0, ip, ror #15
    9958:	andeq	ip, r0, r8, lsl r7
    995c:	andeq	ip, r0, r8, lsr #13
    9960:	andeq	ip, r0, ip, lsr #14
    9964:	andeq	ip, r0, r4, ror #15
    9968:	andeq	ip, r0, r0, lsl #15
    996c:	andeq	ip, r0, r4, lsl #16
    9970:	andeq	r8, r0, r8, lsr lr
    9974:	andeq	ip, r0, r0, lsl #28
    9978:			; <UNDEFINED> instruction: 0x0000cabc
    997c:	strdeq	ip, [r0], -r8
    9980:	andeq	ip, r0, r0, ror #16
    9984:	ldrdeq	ip, [r0], -r8
    9988:	andeq	ip, r0, r8, asr r8
    998c:	andeq	ip, r0, r8, lsr r9
    9990:	andeq	ip, r0, ip, lsr #17
    9994:	andeq	ip, r0, ip, asr r9
    9998:	andeq	ip, r0, r4, ror #21
    999c:	andeq	ip, r0, ip, lsr #20
    99a0:	andeq	ip, r0, r0, asr #19
    99a4:	andeq	ip, r0, r8, asr #20
    99a8:	andeq	ip, r0, r4, asr #22
    99ac:	movw	r3, #393	; 0x189
    99b0:	cmp	r0, r3
    99b4:	beq	cb34 <bt_compidtostr@@Base+0x4514>
    99b8:	bls	99dc <bt_compidtostr@@Base+0x13bc>
    99bc:	movw	r3, #395	; 0x18b
    99c0:	cmp	r0, r3
    99c4:	beq	cb58 <bt_compidtostr@@Base+0x4538>
    99c8:	cmp	r0, #396	; 0x18c
    99cc:	bcs	cb64 <bt_compidtostr@@Base+0x4544>
    99d0:	ldr	r0, [pc, #-428]	; 982c <bt_compidtostr@@Base+0x120c>
    99d4:	add	r0, pc, r0
    99d8:	bx	lr
    99dc:	movw	r3, #391	; 0x187
    99e0:	cmp	r0, r3
    99e4:	beq	cb40 <bt_compidtostr@@Base+0x4520>
    99e8:	cmp	r0, #392	; 0x188
    99ec:	bcs	cb4c <bt_compidtostr@@Base+0x452c>
    99f0:	ldr	r0, [pc, #-456]	; 9830 <bt_compidtostr@@Base+0x1210>
    99f4:	add	r0, pc, r0
    99f8:	bx	lr
    99fc:	movw	r3, #399	; 0x18f
    9a00:	cmp	r0, r3
    9a04:	beq	cb7c <bt_compidtostr@@Base+0x455c>
    9a08:	cmp	r0, #400	; 0x190
    9a0c:	bcs	cb88 <bt_compidtostr@@Base+0x4568>
    9a10:	ldr	r0, [pc, #-484]	; 9834 <bt_compidtostr@@Base+0x1214>
    9a14:	add	r0, pc, r0
    9a18:	bx	lr
    9a1c:	movw	r3, #409	; 0x199
    9a20:	cmp	r0, r3
    9a24:	beq	cbb8 <bt_compidtostr@@Base+0x4598>
    9a28:	bls	9a4c <bt_compidtostr@@Base+0x142c>
    9a2c:	movw	r3, #411	; 0x19b
    9a30:	cmp	r0, r3
    9a34:	beq	cbdc <bt_compidtostr@@Base+0x45bc>
    9a38:	cmp	r0, #412	; 0x19c
    9a3c:	bcs	cbe8 <bt_compidtostr@@Base+0x45c8>
    9a40:	ldr	r0, [pc, #-528]	; 9838 <bt_compidtostr@@Base+0x1218>
    9a44:	add	r0, pc, r0
    9a48:	bx	lr
    9a4c:	movw	r3, #407	; 0x197
    9a50:	cmp	r0, r3
    9a54:	beq	cbc4 <bt_compidtostr@@Base+0x45a4>
    9a58:	cmp	r0, #408	; 0x198
    9a5c:	bcs	cbd0 <bt_compidtostr@@Base+0x45b0>
    9a60:	ldr	r0, [pc, #-556]	; 983c <bt_compidtostr@@Base+0x121c>
    9a64:	add	r0, pc, r0
    9a68:	bx	lr
    9a6c:	movw	r3, #415	; 0x19f
    9a70:	cmp	r0, r3
    9a74:	beq	cc00 <bt_compidtostr@@Base+0x45e0>
    9a78:	cmp	r0, #416	; 0x1a0
    9a7c:	bcs	cc0c <bt_compidtostr@@Base+0x45ec>
    9a80:	ldr	r0, [pc, #-584]	; 9840 <bt_compidtostr@@Base+0x1220>
    9a84:	add	r0, pc, r0
    9a88:	bx	lr
    9a8c:	movw	r3, #429	; 0x1ad
    9a90:	cmp	r0, r3
    9a94:	beq	cc3c <bt_compidtostr@@Base+0x461c>
    9a98:	bls	9acc <bt_compidtostr@@Base+0x14ac>
    9a9c:	movw	r3, #433	; 0x1b1
    9aa0:	cmp	r0, r3
    9aa4:	beq	cc84 <bt_compidtostr@@Base+0x4664>
    9aa8:	bls	9b1c <bt_compidtostr@@Base+0x14fc>
    9aac:	movw	r3, #435	; 0x1b3
    9ab0:	cmp	r0, r3
    9ab4:	beq	cca8 <bt_compidtostr@@Base+0x4688>
    9ab8:	cmp	r0, #436	; 0x1b4
    9abc:	bcs	ccb4 <bt_compidtostr@@Base+0x4694>
    9ac0:	ldr	r0, [pc, #-644]	; 9844 <bt_compidtostr@@Base+0x1224>
    9ac4:	add	r0, pc, r0
    9ac8:	bx	lr
    9acc:	movw	r3, #425	; 0x1a9
    9ad0:	cmp	r0, r3
    9ad4:	beq	cc48 <bt_compidtostr@@Base+0x4628>
    9ad8:	bls	9afc <bt_compidtostr@@Base+0x14dc>
    9adc:	movw	r3, #427	; 0x1ab
    9ae0:	cmp	r0, r3
    9ae4:	beq	cc6c <bt_compidtostr@@Base+0x464c>
    9ae8:	cmp	r0, #428	; 0x1ac
    9aec:	bcs	cc78 <bt_compidtostr@@Base+0x4658>
    9af0:	ldr	r0, [pc, #-688]	; 9848 <bt_compidtostr@@Base+0x1228>
    9af4:	add	r0, pc, r0
    9af8:	bx	lr
    9afc:	movw	r3, #423	; 0x1a7
    9b00:	cmp	r0, r3
    9b04:	beq	cc54 <bt_compidtostr@@Base+0x4634>
    9b08:	cmp	r0, #424	; 0x1a8
    9b0c:	bcs	cc60 <bt_compidtostr@@Base+0x4640>
    9b10:	ldr	r0, [pc, #-716]	; 984c <bt_compidtostr@@Base+0x122c>
    9b14:	add	r0, pc, r0
    9b18:	bx	lr
    9b1c:	movw	r3, #431	; 0x1af
    9b20:	cmp	r0, r3
    9b24:	beq	cc90 <bt_compidtostr@@Base+0x4670>
    9b28:	cmp	r0, #432	; 0x1b0
    9b2c:	bcs	cc9c <bt_compidtostr@@Base+0x467c>
    9b30:	ldr	r0, [pc, #-744]	; 9850 <bt_compidtostr@@Base+0x1230>
    9b34:	add	r0, pc, r0
    9b38:	bx	lr
    9b3c:	movw	r3, #441	; 0x1b9
    9b40:	cmp	r0, r3
    9b44:	beq	cccc <bt_compidtostr@@Base+0x46ac>
    9b48:	bls	9b6c <bt_compidtostr@@Base+0x154c>
    9b4c:	movw	r3, #443	; 0x1bb
    9b50:	cmp	r0, r3
    9b54:	beq	ccf0 <bt_compidtostr@@Base+0x46d0>
    9b58:	cmp	r0, #444	; 0x1bc
    9b5c:	bcs	ccfc <bt_compidtostr@@Base+0x46dc>
    9b60:	ldr	r0, [pc, #-788]	; 9854 <bt_compidtostr@@Base+0x1234>
    9b64:	add	r0, pc, r0
    9b68:	bx	lr
    9b6c:	movw	r3, #439	; 0x1b7
    9b70:	cmp	r0, r3
    9b74:	beq	ccd8 <bt_compidtostr@@Base+0x46b8>
    9b78:	cmp	r0, #440	; 0x1b8
    9b7c:	bcs	cce4 <bt_compidtostr@@Base+0x46c4>
    9b80:	ldr	r0, [pc, #-816]	; 9858 <bt_compidtostr@@Base+0x1238>
    9b84:	add	r0, pc, r0
    9b88:	bx	lr
    9b8c:	movw	r3, #447	; 0x1bf
    9b90:	cmp	r0, r3
    9b94:	beq	cd14 <bt_compidtostr@@Base+0x46f4>
    9b98:	cmp	r0, #448	; 0x1c0
    9b9c:	bcs	cd20 <bt_compidtostr@@Base+0x4700>
    9ba0:	ldr	r0, [pc, #-844]	; 985c <bt_compidtostr@@Base+0x123c>
    9ba4:	add	r0, pc, r0
    9ba8:	bx	lr
    9bac:	ldr	r0, [pc, #-852]	; 9860 <bt_compidtostr@@Base+0x1240>
    9bb0:	add	r0, pc, r0
    9bb4:	bx	lr
    9bb8:	movw	r3, #486	; 0x1e6
    9bbc:	cmp	r0, r3
    9bc0:	beq	cd50 <bt_compidtostr@@Base+0x4730>
    9bc4:	bls	9c28 <bt_compidtostr@@Base+0x1608>
    9bc8:	movw	r3, #502	; 0x1f6
    9bcc:	cmp	r0, r3
    9bd0:	beq	ce70 <bt_compidtostr@@Base+0x4850>
    9bd4:	bls	9d58 <bt_compidtostr@@Base+0x1738>
    9bd8:	movw	r3, #510	; 0x1fe
    9bdc:	cmp	r0, r3
    9be0:	beq	cf00 <bt_compidtostr@@Base+0x48e0>
    9be4:	bls	9de8 <bt_compidtostr@@Base+0x17c8>
    9be8:	movw	r3, #514	; 0x202
    9bec:	cmp	r0, r3
    9bf0:	beq	cf48 <bt_compidtostr@@Base+0x4928>
    9bf4:	bls	9e28 <bt_compidtostr@@Base+0x1808>
    9bf8:	cmp	r0, #516	; 0x204
    9bfc:	beq	cf6c <bt_compidtostr@@Base+0x494c>
    9c00:	bcc	cf78 <bt_compidtostr@@Base+0x4958>
    9c04:	movw	r3, #517	; 0x205
    9c08:	cmp	r0, r3
    9c0c:	beq	cf84 <bt_compidtostr@@Base+0x4964>
    9c10:	movw	r3, #518	; 0x206
    9c14:	cmp	r0, r3
    9c18:	bne	9e40 <bt_compidtostr@@Base+0x1820>
    9c1c:	ldr	r0, [pc, #-960]	; 9864 <bt_compidtostr@@Base+0x1244>
    9c20:	add	r0, pc, r0
    9c24:	bx	lr
    9c28:	movw	r3, #470	; 0x1d6
    9c2c:	cmp	r0, r3
    9c30:	beq	cd5c <bt_compidtostr@@Base+0x473c>
    9c34:	bls	9c70 <bt_compidtostr@@Base+0x1650>
    9c38:	movw	r3, #478	; 0x1de
    9c3c:	cmp	r0, r3
    9c40:	beq	cdec <bt_compidtostr@@Base+0x47cc>
    9c44:	bls	9d00 <bt_compidtostr@@Base+0x16e0>
    9c48:	movw	r3, #482	; 0x1e2
    9c4c:	cmp	r0, r3
    9c50:	beq	ce34 <bt_compidtostr@@Base+0x4814>
    9c54:	bls	9d40 <bt_compidtostr@@Base+0x1720>
    9c58:	cmp	r0, #484	; 0x1e4
    9c5c:	beq	ce58 <bt_compidtostr@@Base+0x4838>
    9c60:	bhi	ce64 <bt_compidtostr@@Base+0x4844>
    9c64:	ldr	r0, [pc, #-1028]	; 9868 <bt_compidtostr@@Base+0x1248>
    9c68:	add	r0, pc, r0
    9c6c:	bx	lr
    9c70:	movw	r3, #462	; 0x1ce
    9c74:	cmp	r0, r3
    9c78:	beq	cd68 <bt_compidtostr@@Base+0x4748>
    9c7c:	bls	9ca8 <bt_compidtostr@@Base+0x1688>
    9c80:	movw	r3, #466	; 0x1d2
    9c84:	cmp	r0, r3
    9c88:	beq	cdb0 <bt_compidtostr@@Base+0x4790>
    9c8c:	bls	9ce8 <bt_compidtostr@@Base+0x16c8>
    9c90:	cmp	r0, #468	; 0x1d4
    9c94:	beq	cdd4 <bt_compidtostr@@Base+0x47b4>
    9c98:	bhi	cde0 <bt_compidtostr@@Base+0x47c0>
    9c9c:	ldr	r0, [pc, #-1080]	; 986c <bt_compidtostr@@Base+0x124c>
    9ca0:	add	r0, pc, r0
    9ca4:	bx	lr
    9ca8:	movw	r3, #458	; 0x1ca
    9cac:	cmp	r0, r3
    9cb0:	beq	cd74 <bt_compidtostr@@Base+0x4754>
    9cb4:	bls	9cd0 <bt_compidtostr@@Base+0x16b0>
    9cb8:	cmp	r0, #460	; 0x1cc
    9cbc:	beq	cd98 <bt_compidtostr@@Base+0x4778>
    9cc0:	bhi	cda4 <bt_compidtostr@@Base+0x4784>
    9cc4:	ldr	r0, [pc, #-1116]	; 9870 <bt_compidtostr@@Base+0x1250>
    9cc8:	add	r0, pc, r0
    9ccc:	bx	lr
    9cd0:	cmp	r0, #456	; 0x1c8
    9cd4:	beq	cd80 <bt_compidtostr@@Base+0x4760>
    9cd8:	bhi	cd8c <bt_compidtostr@@Base+0x476c>
    9cdc:	ldr	r0, [pc, #-1136]	; 9874 <bt_compidtostr@@Base+0x1254>
    9ce0:	add	r0, pc, r0
    9ce4:	bx	lr
    9ce8:	cmp	r0, #464	; 0x1d0
    9cec:	beq	cdbc <bt_compidtostr@@Base+0x479c>
    9cf0:	bhi	cdc8 <bt_compidtostr@@Base+0x47a8>
    9cf4:	ldr	r0, [pc, #-1156]	; 9878 <bt_compidtostr@@Base+0x1258>
    9cf8:	add	r0, pc, r0
    9cfc:	bx	lr
    9d00:	movw	r3, #474	; 0x1da
    9d04:	cmp	r0, r3
    9d08:	beq	cdf8 <bt_compidtostr@@Base+0x47d8>
    9d0c:	bls	9d28 <bt_compidtostr@@Base+0x1708>
    9d10:	cmp	r0, #476	; 0x1dc
    9d14:	beq	ce1c <bt_compidtostr@@Base+0x47fc>
    9d18:	bhi	ce28 <bt_compidtostr@@Base+0x4808>
    9d1c:	ldr	r0, [pc, #-1192]	; 987c <bt_compidtostr@@Base+0x125c>
    9d20:	add	r0, pc, r0
    9d24:	bx	lr
    9d28:	cmp	r0, #472	; 0x1d8
    9d2c:	beq	ce04 <bt_compidtostr@@Base+0x47e4>
    9d30:	bhi	ce10 <bt_compidtostr@@Base+0x47f0>
    9d34:	ldr	r0, [pc, #-1212]	; 9880 <bt_compidtostr@@Base+0x1260>
    9d38:	add	r0, pc, r0
    9d3c:	bx	lr
    9d40:	cmp	r0, #480	; 0x1e0
    9d44:	beq	ce40 <bt_compidtostr@@Base+0x4820>
    9d48:	bhi	ce4c <bt_compidtostr@@Base+0x482c>
    9d4c:	ldr	r0, [pc, #-1232]	; 9884 <bt_compidtostr@@Base+0x1264>
    9d50:	add	r0, pc, r0
    9d54:	bx	lr
    9d58:	movw	r3, #494	; 0x1ee
    9d5c:	cmp	r0, r3
    9d60:	beq	ce7c <bt_compidtostr@@Base+0x485c>
    9d64:	bls	9d90 <bt_compidtostr@@Base+0x1770>
    9d68:	movw	r3, #498	; 0x1f2
    9d6c:	cmp	r0, r3
    9d70:	beq	cec4 <bt_compidtostr@@Base+0x48a4>
    9d74:	bls	9dd0 <bt_compidtostr@@Base+0x17b0>
    9d78:	cmp	r0, #500	; 0x1f4
    9d7c:	beq	cee8 <bt_compidtostr@@Base+0x48c8>
    9d80:	bhi	cef4 <bt_compidtostr@@Base+0x48d4>
    9d84:	ldr	r0, [pc, #-1284]	; 9888 <bt_compidtostr@@Base+0x1268>
    9d88:	add	r0, pc, r0
    9d8c:	bx	lr
    9d90:	movw	r3, #490	; 0x1ea
    9d94:	cmp	r0, r3
    9d98:	beq	ce88 <bt_compidtostr@@Base+0x4868>
    9d9c:	bls	9db8 <bt_compidtostr@@Base+0x1798>
    9da0:	cmp	r0, #492	; 0x1ec
    9da4:	beq	ceac <bt_compidtostr@@Base+0x488c>
    9da8:	bhi	ceb8 <bt_compidtostr@@Base+0x4898>
    9dac:	ldr	r0, [pc, #-1320]	; 988c <bt_compidtostr@@Base+0x126c>
    9db0:	add	r0, pc, r0
    9db4:	bx	lr
    9db8:	cmp	r0, #488	; 0x1e8
    9dbc:	beq	ce94 <bt_compidtostr@@Base+0x4874>
    9dc0:	bhi	cea0 <bt_compidtostr@@Base+0x4880>
    9dc4:	ldr	r0, [pc, #-1340]	; 9890 <bt_compidtostr@@Base+0x1270>
    9dc8:	add	r0, pc, r0
    9dcc:	bx	lr
    9dd0:	cmp	r0, #496	; 0x1f0
    9dd4:	beq	ced0 <bt_compidtostr@@Base+0x48b0>
    9dd8:	bhi	cedc <bt_compidtostr@@Base+0x48bc>
    9ddc:	ldr	r0, [pc, #-1360]	; 9894 <bt_compidtostr@@Base+0x1274>
    9de0:	add	r0, pc, r0
    9de4:	bx	lr
    9de8:	movw	r3, #506	; 0x1fa
    9dec:	cmp	r0, r3
    9df0:	beq	cf0c <bt_compidtostr@@Base+0x48ec>
    9df4:	bls	9e10 <bt_compidtostr@@Base+0x17f0>
    9df8:	cmp	r0, #508	; 0x1fc
    9dfc:	beq	cf30 <bt_compidtostr@@Base+0x4910>
    9e00:	bhi	cf3c <bt_compidtostr@@Base+0x491c>
    9e04:	ldr	r0, [pc, #-1396]	; 9898 <bt_compidtostr@@Base+0x1278>
    9e08:	add	r0, pc, r0
    9e0c:	bx	lr
    9e10:	cmp	r0, #504	; 0x1f8
    9e14:	beq	cf18 <bt_compidtostr@@Base+0x48f8>
    9e18:	bhi	cf24 <bt_compidtostr@@Base+0x4904>
    9e1c:	ldr	r0, [pc, #-1416]	; 989c <bt_compidtostr@@Base+0x127c>
    9e20:	add	r0, pc, r0
    9e24:	bx	lr
    9e28:	cmp	r0, #512	; 0x200
    9e2c:	beq	cf54 <bt_compidtostr@@Base+0x4934>
    9e30:	bhi	cf60 <bt_compidtostr@@Base+0x4940>
    9e34:	ldr	r0, [pc, #-1436]	; 98a0 <bt_compidtostr@@Base+0x1280>
    9e38:	add	r0, pc, r0
    9e3c:	bx	lr
    9e40:	ldr	r0, [pc, #-1444]	; 98a4 <bt_compidtostr@@Base+0x1284>
    9e44:	add	r0, pc, r0
    9e48:	bx	lr
    9e4c:	movw	r3, #779	; 0x30b
    9e50:	cmp	r0, r3
    9e54:	beq	cf90 <bt_compidtostr@@Base+0x4970>
    9e58:	cmp	r0, #780	; 0x30c
    9e5c:	bcs	a9d4 <bt_compidtostr@@Base+0x23b4>
    9e60:	movw	r3, #649	; 0x289
    9e64:	cmp	r0, r3
    9e68:	beq	cf9c <bt_compidtostr@@Base+0x497c>
    9e6c:	bhi	a424 <bt_compidtostr@@Base+0x1e04>
    9e70:	cmp	r0, #584	; 0x248
    9e74:	beq	cfa8 <bt_compidtostr@@Base+0x4988>
    9e78:	bhi	a190 <bt_compidtostr@@Base+0x1b70>
    9e7c:	movw	r3, #551	; 0x227
    9e80:	cmp	r0, r3
    9e84:	beq	cfb4 <bt_compidtostr@@Base+0x4994>
    9e88:	cmp	r0, #552	; 0x228
    9e8c:	bcc	9f04 <bt_compidtostr@@Base+0x18e4>
    9e90:	movw	r3, #567	; 0x237
    9e94:	cmp	r0, r3
    9e98:	beq	d0d4 <bt_compidtostr@@Base+0x4ab4>
    9e9c:	cmp	r0, #568	; 0x238
    9ea0:	bcc	a070 <bt_compidtostr@@Base+0x1a50>
    9ea4:	movw	r3, #575	; 0x23f
    9ea8:	cmp	r0, r3
    9eac:	beq	d164 <bt_compidtostr@@Base+0x4b44>
    9eb0:	cmp	r0, #576	; 0x240
    9eb4:	bcc	a11c <bt_compidtostr@@Base+0x1afc>
    9eb8:	movw	r3, #579	; 0x243
    9ebc:	cmp	r0, r3
    9ec0:	beq	d1ac <bt_compidtostr@@Base+0x4b8c>
    9ec4:	cmp	r0, #580	; 0x244
    9ec8:	bcc	a168 <bt_compidtostr@@Base+0x1b48>
    9ecc:	movw	r3, #581	; 0x245
    9ed0:	cmp	r0, r3
    9ed4:	beq	d1d0 <bt_compidtostr@@Base+0x4bb0>
    9ed8:	cmp	r0, #580	; 0x244
    9edc:	bls	d1dc <bt_compidtostr@@Base+0x4bbc>
    9ee0:	movw	r3, #582	; 0x246
    9ee4:	cmp	r0, r3
    9ee8:	beq	d1e8 <bt_compidtostr@@Base+0x4bc8>
    9eec:	movw	r3, #583	; 0x247
    9ef0:	cmp	r0, r3
    9ef4:	bne	a184 <bt_compidtostr@@Base+0x1b64>
    9ef8:	ldr	r0, [pc, #-1624]	; 98a8 <bt_compidtostr@@Base+0x1288>
    9efc:	add	r0, pc, r0
    9f00:	bx	lr
    9f04:	movw	r3, #535	; 0x217
    9f08:	cmp	r0, r3
    9f0c:	beq	cfc0 <bt_compidtostr@@Base+0x49a0>
    9f10:	cmp	r0, #536	; 0x218
    9f14:	bcc	9f5c <bt_compidtostr@@Base+0x193c>
    9f18:	movw	r3, #543	; 0x21f
    9f1c:	cmp	r0, r3
    9f20:	beq	d050 <bt_compidtostr@@Base+0x4a30>
    9f24:	cmp	r0, #544	; 0x220
    9f28:	bcc	a008 <bt_compidtostr@@Base+0x19e8>
    9f2c:	movw	r3, #547	; 0x223
    9f30:	cmp	r0, r3
    9f34:	beq	d098 <bt_compidtostr@@Base+0x4a78>
    9f38:	cmp	r0, #548	; 0x224
    9f3c:	bcc	a054 <bt_compidtostr@@Base+0x1a34>
    9f40:	movw	r3, #549	; 0x225
    9f44:	cmp	r0, r3
    9f48:	beq	d0bc <bt_compidtostr@@Base+0x4a9c>
    9f4c:	bhi	d0c8 <bt_compidtostr@@Base+0x4aa8>
    9f50:	ldr	r0, [pc, #-1708]	; 98ac <bt_compidtostr@@Base+0x128c>
    9f54:	add	r0, pc, r0
    9f58:	bx	lr
    9f5c:	movw	r3, #527	; 0x20f
    9f60:	cmp	r0, r3
    9f64:	beq	cfcc <bt_compidtostr@@Base+0x49ac>
    9f68:	cmp	r0, #528	; 0x210
    9f6c:	bcc	9fa0 <bt_compidtostr@@Base+0x1980>
    9f70:	movw	r3, #531	; 0x213
    9f74:	cmp	r0, r3
    9f78:	beq	d014 <bt_compidtostr@@Base+0x49f4>
    9f7c:	cmp	r0, #532	; 0x214
    9f80:	bcc	9fec <bt_compidtostr@@Base+0x19cc>
    9f84:	movw	r3, #533	; 0x215
    9f88:	cmp	r0, r3
    9f8c:	beq	d038 <bt_compidtostr@@Base+0x4a18>
    9f90:	bhi	d044 <bt_compidtostr@@Base+0x4a24>
    9f94:	ldr	r0, [pc, #-1772]	; 98b0 <bt_compidtostr@@Base+0x1290>
    9f98:	add	r0, pc, r0
    9f9c:	bx	lr
    9fa0:	movw	r3, #523	; 0x20b
    9fa4:	cmp	r0, r3
    9fa8:	beq	cfd8 <bt_compidtostr@@Base+0x49b8>
    9fac:	cmp	r0, #524	; 0x20c
    9fb0:	bcc	9fd0 <bt_compidtostr@@Base+0x19b0>
    9fb4:	movw	r3, #525	; 0x20d
    9fb8:	cmp	r0, r3
    9fbc:	beq	cffc <bt_compidtostr@@Base+0x49dc>
    9fc0:	bhi	d008 <bt_compidtostr@@Base+0x49e8>
    9fc4:	ldr	r0, [pc, #-1816]	; 98b4 <bt_compidtostr@@Base+0x1294>
    9fc8:	add	r0, pc, r0
    9fcc:	bx	lr
    9fd0:	movw	r3, #521	; 0x209
    9fd4:	cmp	r0, r3
    9fd8:	beq	cfe4 <bt_compidtostr@@Base+0x49c4>
    9fdc:	bhi	cff0 <bt_compidtostr@@Base+0x49d0>
    9fe0:	ldr	r0, [pc, #-1840]	; 98b8 <bt_compidtostr@@Base+0x1298>
    9fe4:	add	r0, pc, r0
    9fe8:	bx	lr
    9fec:	movw	r3, #529	; 0x211
    9ff0:	cmp	r0, r3
    9ff4:	beq	d020 <bt_compidtostr@@Base+0x4a00>
    9ff8:	bhi	d02c <bt_compidtostr@@Base+0x4a0c>
    9ffc:	ldr	r0, [pc, #-1864]	; 98bc <bt_compidtostr@@Base+0x129c>
    a000:	add	r0, pc, r0
    a004:	bx	lr
    a008:	movw	r3, #539	; 0x21b
    a00c:	cmp	r0, r3
    a010:	beq	d05c <bt_compidtostr@@Base+0x4a3c>
    a014:	cmp	r0, #540	; 0x21c
    a018:	bcc	a038 <bt_compidtostr@@Base+0x1a18>
    a01c:	movw	r3, #541	; 0x21d
    a020:	cmp	r0, r3
    a024:	beq	d080 <bt_compidtostr@@Base+0x4a60>
    a028:	bhi	d08c <bt_compidtostr@@Base+0x4a6c>
    a02c:	ldr	r0, [pc, #-1908]	; 98c0 <bt_compidtostr@@Base+0x12a0>
    a030:	add	r0, pc, r0
    a034:	bx	lr
    a038:	movw	r3, #537	; 0x219
    a03c:	cmp	r0, r3
    a040:	beq	d068 <bt_compidtostr@@Base+0x4a48>
    a044:	bhi	d074 <bt_compidtostr@@Base+0x4a54>
    a048:	ldr	r0, [pc, #-1932]	; 98c4 <bt_compidtostr@@Base+0x12a4>
    a04c:	add	r0, pc, r0
    a050:	bx	lr
    a054:	movw	r3, #545	; 0x221
    a058:	cmp	r0, r3
    a05c:	beq	d0a4 <bt_compidtostr@@Base+0x4a84>
    a060:	bhi	d0b0 <bt_compidtostr@@Base+0x4a90>
    a064:	ldr	r0, [pc, #-1956]	; 98c8 <bt_compidtostr@@Base+0x12a8>
    a068:	add	r0, pc, r0
    a06c:	bx	lr
    a070:	movw	r3, #559	; 0x22f
    a074:	cmp	r0, r3
    a078:	beq	d0e0 <bt_compidtostr@@Base+0x4ac0>
    a07c:	cmp	r0, #560	; 0x230
    a080:	bcc	a0b4 <bt_compidtostr@@Base+0x1a94>
    a084:	movw	r3, #563	; 0x233
    a088:	cmp	r0, r3
    a08c:	beq	d128 <bt_compidtostr@@Base+0x4b08>
    a090:	cmp	r0, #564	; 0x234
    a094:	bcc	a100 <bt_compidtostr@@Base+0x1ae0>
    a098:	movw	r3, #565	; 0x235
    a09c:	cmp	r0, r3
    a0a0:	beq	d14c <bt_compidtostr@@Base+0x4b2c>
    a0a4:	bhi	d158 <bt_compidtostr@@Base+0x4b38>
    a0a8:	ldr	r0, [pc, #-2020]	; 98cc <bt_compidtostr@@Base+0x12ac>
    a0ac:	add	r0, pc, r0
    a0b0:	bx	lr
    a0b4:	movw	r3, #555	; 0x22b
    a0b8:	cmp	r0, r3
    a0bc:	beq	d0ec <bt_compidtostr@@Base+0x4acc>
    a0c0:	cmp	r0, #556	; 0x22c
    a0c4:	bcc	a0e4 <bt_compidtostr@@Base+0x1ac4>
    a0c8:	movw	r3, #557	; 0x22d
    a0cc:	cmp	r0, r3
    a0d0:	beq	d110 <bt_compidtostr@@Base+0x4af0>
    a0d4:	bhi	d11c <bt_compidtostr@@Base+0x4afc>
    a0d8:	ldr	r0, [pc, #-2064]	; 98d0 <bt_compidtostr@@Base+0x12b0>
    a0dc:	add	r0, pc, r0
    a0e0:	bx	lr
    a0e4:	movw	r3, #553	; 0x229
    a0e8:	cmp	r0, r3
    a0ec:	beq	d0f8 <bt_compidtostr@@Base+0x4ad8>
    a0f0:	bhi	d104 <bt_compidtostr@@Base+0x4ae4>
    a0f4:	ldr	r0, [pc, #-2088]	; 98d4 <bt_compidtostr@@Base+0x12b4>
    a0f8:	add	r0, pc, r0
    a0fc:	bx	lr
    a100:	movw	r3, #561	; 0x231
    a104:	cmp	r0, r3
    a108:	beq	d134 <bt_compidtostr@@Base+0x4b14>
    a10c:	bhi	d140 <bt_compidtostr@@Base+0x4b20>
    a110:	ldr	r0, [pc, #-2112]	; 98d8 <bt_compidtostr@@Base+0x12b8>
    a114:	add	r0, pc, r0
    a118:	bx	lr
    a11c:	movw	r3, #571	; 0x23b
    a120:	cmp	r0, r3
    a124:	beq	d170 <bt_compidtostr@@Base+0x4b50>
    a128:	cmp	r0, #572	; 0x23c
    a12c:	bcc	a14c <bt_compidtostr@@Base+0x1b2c>
    a130:	movw	r3, #573	; 0x23d
    a134:	cmp	r0, r3
    a138:	beq	d194 <bt_compidtostr@@Base+0x4b74>
    a13c:	bhi	d1a0 <bt_compidtostr@@Base+0x4b80>
    a140:	ldr	r0, [pc, #-2156]	; 98dc <bt_compidtostr@@Base+0x12bc>
    a144:	add	r0, pc, r0
    a148:	bx	lr
    a14c:	movw	r3, #569	; 0x239
    a150:	cmp	r0, r3
    a154:	beq	d17c <bt_compidtostr@@Base+0x4b5c>
    a158:	bhi	d188 <bt_compidtostr@@Base+0x4b68>
    a15c:	ldr	r0, [pc, #-2180]	; 98e0 <bt_compidtostr@@Base+0x12c0>
    a160:	add	r0, pc, r0
    a164:	bx	lr
    a168:	movw	r3, #577	; 0x241
    a16c:	cmp	r0, r3
    a170:	beq	d1b8 <bt_compidtostr@@Base+0x4b98>
    a174:	bhi	d1c4 <bt_compidtostr@@Base+0x4ba4>
    a178:	ldr	r0, [pc, #-2204]	; 98e4 <bt_compidtostr@@Base+0x12c4>
    a17c:	add	r0, pc, r0
    a180:	bx	lr
    a184:	ldr	r0, [pc, #-2212]	; 98e8 <bt_compidtostr@@Base+0x12c8>
    a188:	add	r0, pc, r0
    a18c:	bx	lr
    a190:	cmp	r0, #616	; 0x268
    a194:	beq	d1f4 <bt_compidtostr@@Base+0x4bd4>
    a198:	bls	a1f0 <bt_compidtostr@@Base+0x1bd0>
    a19c:	cmp	r0, #632	; 0x278
    a1a0:	beq	d314 <bt_compidtostr@@Base+0x4cf4>
    a1a4:	bls	a324 <bt_compidtostr@@Base+0x1d04>
    a1a8:	cmp	r0, #640	; 0x280
    a1ac:	beq	d3a4 <bt_compidtostr@@Base+0x4d84>
    a1b0:	bls	a3b8 <bt_compidtostr@@Base+0x1d98>
    a1b4:	cmp	r0, #644	; 0x284
    a1b8:	beq	d3ec <bt_compidtostr@@Base+0x4dcc>
    a1bc:	bls	a3fc <bt_compidtostr@@Base+0x1ddc>
    a1c0:	movw	r3, #646	; 0x286
    a1c4:	cmp	r0, r3
    a1c8:	beq	d410 <bt_compidtostr@@Base+0x4df0>
    a1cc:	bcc	d41c <bt_compidtostr@@Base+0x4dfc>
    a1d0:	movw	r3, #647	; 0x287
    a1d4:	cmp	r0, r3
    a1d8:	beq	d428 <bt_compidtostr@@Base+0x4e08>
    a1dc:	cmp	r0, #648	; 0x288
    a1e0:	bne	a418 <bt_compidtostr@@Base+0x1df8>
    a1e4:	ldr	r0, [pc, #-2304]	; 98ec <bt_compidtostr@@Base+0x12cc>
    a1e8:	add	r0, pc, r0
    a1ec:	bx	lr
    a1f0:	cmp	r0, #600	; 0x258
    a1f4:	beq	d200 <bt_compidtostr@@Base+0x4be0>
    a1f8:	bls	a230 <bt_compidtostr@@Base+0x1c10>
    a1fc:	cmp	r0, #608	; 0x260
    a200:	beq	d290 <bt_compidtostr@@Base+0x4c70>
    a204:	bls	a2c4 <bt_compidtostr@@Base+0x1ca4>
    a208:	cmp	r0, #612	; 0x264
    a20c:	beq	d2d8 <bt_compidtostr@@Base+0x4cb8>
    a210:	bls	a308 <bt_compidtostr@@Base+0x1ce8>
    a214:	movw	r3, #614	; 0x266
    a218:	cmp	r0, r3
    a21c:	beq	d2fc <bt_compidtostr@@Base+0x4cdc>
    a220:	bhi	d308 <bt_compidtostr@@Base+0x4ce8>
    a224:	ldr	r0, [pc, #-2364]	; 98f0 <bt_compidtostr@@Base+0x12d0>
    a228:	add	r0, pc, r0
    a22c:	bx	lr
    a230:	cmp	r0, #592	; 0x250
    a234:	beq	d20c <bt_compidtostr@@Base+0x4bec>
    a238:	bls	a264 <bt_compidtostr@@Base+0x1c44>
    a23c:	cmp	r0, #596	; 0x254
    a240:	beq	d254 <bt_compidtostr@@Base+0x4c34>
    a244:	bls	a2a8 <bt_compidtostr@@Base+0x1c88>
    a248:	movw	r3, #598	; 0x256
    a24c:	cmp	r0, r3
    a250:	beq	d278 <bt_compidtostr@@Base+0x4c58>
    a254:	bhi	d284 <bt_compidtostr@@Base+0x4c64>
    a258:	ldr	r0, [pc, #-2412]	; 98f4 <bt_compidtostr@@Base+0x12d4>
    a25c:	add	r0, pc, r0
    a260:	bx	lr
    a264:	cmp	r0, #588	; 0x24c
    a268:	beq	d218 <bt_compidtostr@@Base+0x4bf8>
    a26c:	bls	a28c <bt_compidtostr@@Base+0x1c6c>
    a270:	movw	r3, #590	; 0x24e
    a274:	cmp	r0, r3
    a278:	beq	d23c <bt_compidtostr@@Base+0x4c1c>
    a27c:	bhi	d248 <bt_compidtostr@@Base+0x4c28>
    a280:	ldr	r0, [pc, #-2448]	; 98f8 <bt_compidtostr@@Base+0x12d8>
    a284:	add	r0, pc, r0
    a288:	bx	lr
    a28c:	movw	r3, #586	; 0x24a
    a290:	cmp	r0, r3
    a294:	beq	d224 <bt_compidtostr@@Base+0x4c04>
    a298:	bhi	d230 <bt_compidtostr@@Base+0x4c10>
    a29c:	ldr	r0, [pc, #-2472]	; 98fc <bt_compidtostr@@Base+0x12dc>
    a2a0:	add	r0, pc, r0
    a2a4:	bx	lr
    a2a8:	movw	r3, #594	; 0x252
    a2ac:	cmp	r0, r3
    a2b0:	beq	d260 <bt_compidtostr@@Base+0x4c40>
    a2b4:	bhi	d26c <bt_compidtostr@@Base+0x4c4c>
    a2b8:	ldr	r0, [pc, #-2496]	; 9900 <bt_compidtostr@@Base+0x12e0>
    a2bc:	add	r0, pc, r0
    a2c0:	bx	lr
    a2c4:	cmp	r0, #604	; 0x25c
    a2c8:	beq	d29c <bt_compidtostr@@Base+0x4c7c>
    a2cc:	bls	a2ec <bt_compidtostr@@Base+0x1ccc>
    a2d0:	movw	r3, #606	; 0x25e
    a2d4:	cmp	r0, r3
    a2d8:	beq	d2c0 <bt_compidtostr@@Base+0x4ca0>
    a2dc:	bhi	d2cc <bt_compidtostr@@Base+0x4cac>
    a2e0:	ldr	r0, [pc, #-2532]	; 9904 <bt_compidtostr@@Base+0x12e4>
    a2e4:	add	r0, pc, r0
    a2e8:	bx	lr
    a2ec:	movw	r3, #602	; 0x25a
    a2f0:	cmp	r0, r3
    a2f4:	beq	d2a8 <bt_compidtostr@@Base+0x4c88>
    a2f8:	bhi	d2b4 <bt_compidtostr@@Base+0x4c94>
    a2fc:	ldr	r0, [pc, #-2556]	; 9908 <bt_compidtostr@@Base+0x12e8>
    a300:	add	r0, pc, r0
    a304:	bx	lr
    a308:	movw	r3, #610	; 0x262
    a30c:	cmp	r0, r3
    a310:	beq	d2e4 <bt_compidtostr@@Base+0x4cc4>
    a314:	bhi	d2f0 <bt_compidtostr@@Base+0x4cd0>
    a318:	ldr	r0, [pc, #-2580]	; 990c <bt_compidtostr@@Base+0x12ec>
    a31c:	add	r0, pc, r0
    a320:	bx	lr
    a324:	cmp	r0, #624	; 0x270
    a328:	beq	d320 <bt_compidtostr@@Base+0x4d00>
    a32c:	bls	a358 <bt_compidtostr@@Base+0x1d38>
    a330:	cmp	r0, #628	; 0x274
    a334:	beq	d368 <bt_compidtostr@@Base+0x4d48>
    a338:	bls	a39c <bt_compidtostr@@Base+0x1d7c>
    a33c:	movw	r3, #630	; 0x276
    a340:	cmp	r0, r3
    a344:	beq	d38c <bt_compidtostr@@Base+0x4d6c>
    a348:	bhi	d398 <bt_compidtostr@@Base+0x4d78>
    a34c:	ldr	r0, [pc, #-2628]	; 9910 <bt_compidtostr@@Base+0x12f0>
    a350:	add	r0, pc, r0
    a354:	bx	lr
    a358:	cmp	r0, #620	; 0x26c
    a35c:	beq	d32c <bt_compidtostr@@Base+0x4d0c>
    a360:	bls	a380 <bt_compidtostr@@Base+0x1d60>
    a364:	movw	r3, #622	; 0x26e
    a368:	cmp	r0, r3
    a36c:	beq	d350 <bt_compidtostr@@Base+0x4d30>
    a370:	bhi	d35c <bt_compidtostr@@Base+0x4d3c>
    a374:	ldr	r0, [pc, #-2664]	; 9914 <bt_compidtostr@@Base+0x12f4>
    a378:	add	r0, pc, r0
    a37c:	bx	lr
    a380:	movw	r3, #618	; 0x26a
    a384:	cmp	r0, r3
    a388:	beq	d338 <bt_compidtostr@@Base+0x4d18>
    a38c:	bhi	d344 <bt_compidtostr@@Base+0x4d24>
    a390:	ldr	r0, [pc, #-2688]	; 9918 <bt_compidtostr@@Base+0x12f8>
    a394:	add	r0, pc, r0
    a398:	bx	lr
    a39c:	movw	r3, #626	; 0x272
    a3a0:	cmp	r0, r3
    a3a4:	beq	d374 <bt_compidtostr@@Base+0x4d54>
    a3a8:	bhi	d380 <bt_compidtostr@@Base+0x4d60>
    a3ac:	ldr	r0, [pc, #-2712]	; 991c <bt_compidtostr@@Base+0x12fc>
    a3b0:	add	r0, pc, r0
    a3b4:	bx	lr
    a3b8:	cmp	r0, #636	; 0x27c
    a3bc:	beq	d3b0 <bt_compidtostr@@Base+0x4d90>
    a3c0:	bls	a3e0 <bt_compidtostr@@Base+0x1dc0>
    a3c4:	movw	r3, #638	; 0x27e
    a3c8:	cmp	r0, r3
    a3cc:	beq	d3d4 <bt_compidtostr@@Base+0x4db4>
    a3d0:	bhi	d3e0 <bt_compidtostr@@Base+0x4dc0>
    a3d4:	ldr	r0, [pc, #-2748]	; 9920 <bt_compidtostr@@Base+0x1300>
    a3d8:	add	r0, pc, r0
    a3dc:	bx	lr
    a3e0:	movw	r3, #634	; 0x27a
    a3e4:	cmp	r0, r3
    a3e8:	beq	d3bc <bt_compidtostr@@Base+0x4d9c>
    a3ec:	bhi	d3c8 <bt_compidtostr@@Base+0x4da8>
    a3f0:	ldr	r0, [pc, #-2772]	; 9924 <bt_compidtostr@@Base+0x1304>
    a3f4:	add	r0, pc, r0
    a3f8:	bx	lr
    a3fc:	movw	r3, #642	; 0x282
    a400:	cmp	r0, r3
    a404:	beq	d3f8 <bt_compidtostr@@Base+0x4dd8>
    a408:	bhi	d404 <bt_compidtostr@@Base+0x4de4>
    a40c:	ldr	r0, [pc, #-2796]	; 9928 <bt_compidtostr@@Base+0x1308>
    a410:	add	r0, pc, r0
    a414:	bx	lr
    a418:	ldr	r0, [pc, #-2804]	; 992c <bt_compidtostr@@Base+0x130c>
    a41c:	add	r0, pc, r0
    a420:	bx	lr
    a424:	movw	r3, #714	; 0x2ca
    a428:	cmp	r0, r3
    a42c:	beq	d434 <bt_compidtostr@@Base+0x4e14>
    a430:	bhi	a740 <bt_compidtostr@@Base+0x2120>
    a434:	movw	r3, #681	; 0x2a9
    a438:	cmp	r0, r3
    a43c:	beq	d440 <bt_compidtostr@@Base+0x4e20>
    a440:	bls	a4a4 <bt_compidtostr@@Base+0x1e84>
    a444:	movw	r3, #697	; 0x2b9
    a448:	cmp	r0, r3
    a44c:	beq	d560 <bt_compidtostr@@Base+0x4f40>
    a450:	bls	a614 <bt_compidtostr@@Base+0x1ff4>
    a454:	movw	r3, #705	; 0x2c1
    a458:	cmp	r0, r3
    a45c:	beq	d5f0 <bt_compidtostr@@Base+0x4fd0>
    a460:	bls	a6c4 <bt_compidtostr@@Base+0x20a4>
    a464:	movw	r3, #709	; 0x2c5
    a468:	cmp	r0, r3
    a46c:	beq	d638 <bt_compidtostr@@Base+0x5018>
    a470:	bls	a714 <bt_compidtostr@@Base+0x20f4>
    a474:	movw	r3, #711	; 0x2c7
    a478:	cmp	r0, r3
    a47c:	beq	d65c <bt_compidtostr@@Base+0x503c>
    a480:	bcc	d668 <bt_compidtostr@@Base+0x5048>
    a484:	cmp	r0, #712	; 0x2c8
    a488:	beq	d674 <bt_compidtostr@@Base+0x5054>
    a48c:	movw	r3, #713	; 0x2c9
    a490:	cmp	r0, r3
    a494:	bne	a734 <bt_compidtostr@@Base+0x2114>
    a498:	ldr	r0, [pc, #-2928]	; 9930 <bt_compidtostr@@Base+0x1310>
    a49c:	add	r0, pc, r0
    a4a0:	bx	lr
    a4a4:	movw	r3, #665	; 0x299
    a4a8:	cmp	r0, r3
    a4ac:	beq	d44c <bt_compidtostr@@Base+0x4e2c>
    a4b0:	bls	a4f4 <bt_compidtostr@@Base+0x1ed4>
    a4b4:	movw	r3, #673	; 0x2a1
    a4b8:	cmp	r0, r3
    a4bc:	beq	d4dc <bt_compidtostr@@Base+0x4ebc>
    a4c0:	bls	a5a4 <bt_compidtostr@@Base+0x1f84>
    a4c4:	movw	r3, #677	; 0x2a5
    a4c8:	cmp	r0, r3
    a4cc:	beq	d524 <bt_compidtostr@@Base+0x4f04>
    a4d0:	bls	a5f4 <bt_compidtostr@@Base+0x1fd4>
    a4d4:	movw	r3, #679	; 0x2a7
    a4d8:	cmp	r0, r3
    a4dc:	beq	d548 <bt_compidtostr@@Base+0x4f28>
    a4e0:	cmp	r0, #680	; 0x2a8
    a4e4:	bcs	d554 <bt_compidtostr@@Base+0x4f34>
    a4e8:	ldr	r0, [pc, #-3004]	; 9934 <bt_compidtostr@@Base+0x1314>
    a4ec:	add	r0, pc, r0
    a4f0:	bx	lr
    a4f4:	movw	r3, #657	; 0x291
    a4f8:	cmp	r0, r3
    a4fc:	beq	d458 <bt_compidtostr@@Base+0x4e38>
    a500:	bls	a534 <bt_compidtostr@@Base+0x1f14>
    a504:	movw	r3, #661	; 0x295
    a508:	cmp	r0, r3
    a50c:	beq	d4a0 <bt_compidtostr@@Base+0x4e80>
    a510:	bls	a584 <bt_compidtostr@@Base+0x1f64>
    a514:	movw	r3, #663	; 0x297
    a518:	cmp	r0, r3
    a51c:	beq	d4c4 <bt_compidtostr@@Base+0x4ea4>
    a520:	cmp	r0, #664	; 0x298
    a524:	bcs	d4d0 <bt_compidtostr@@Base+0x4eb0>
    a528:	ldr	r0, [pc, #-3064]	; 9938 <bt_compidtostr@@Base+0x1318>
    a52c:	add	r0, pc, r0
    a530:	bx	lr
    a534:	movw	r3, #653	; 0x28d
    a538:	cmp	r0, r3
    a53c:	beq	d464 <bt_compidtostr@@Base+0x4e44>
    a540:	bls	a564 <bt_compidtostr@@Base+0x1f44>
    a544:	movw	r3, #655	; 0x28f
    a548:	cmp	r0, r3
    a54c:	beq	d488 <bt_compidtostr@@Base+0x4e68>
    a550:	cmp	r0, #656	; 0x290
    a554:	bcs	d494 <bt_compidtostr@@Base+0x4e74>
    a558:	ldr	r0, [pc, #-3108]	; 993c <bt_compidtostr@@Base+0x131c>
    a55c:	add	r0, pc, r0
    a560:	bx	lr
    a564:	movw	r3, #651	; 0x28b
    a568:	cmp	r0, r3
    a56c:	beq	d470 <bt_compidtostr@@Base+0x4e50>
    a570:	cmp	r0, #652	; 0x28c
    a574:	bcs	d47c <bt_compidtostr@@Base+0x4e5c>
    a578:	ldr	r0, [pc, #-3136]	; 9940 <bt_compidtostr@@Base+0x1320>
    a57c:	add	r0, pc, r0
    a580:	bx	lr
    a584:	movw	r3, #659	; 0x293
    a588:	cmp	r0, r3
    a58c:	beq	d4ac <bt_compidtostr@@Base+0x4e8c>
    a590:	cmp	r0, #660	; 0x294
    a594:	bcs	d4b8 <bt_compidtostr@@Base+0x4e98>
    a598:	ldr	r0, [pc, #-3164]	; 9944 <bt_compidtostr@@Base+0x1324>
    a59c:	add	r0, pc, r0
    a5a0:	bx	lr
    a5a4:	movw	r3, #669	; 0x29d
    a5a8:	cmp	r0, r3
    a5ac:	beq	d4e8 <bt_compidtostr@@Base+0x4ec8>
    a5b0:	bls	a5d4 <bt_compidtostr@@Base+0x1fb4>
    a5b4:	movw	r3, #671	; 0x29f
    a5b8:	cmp	r0, r3
    a5bc:	beq	d50c <bt_compidtostr@@Base+0x4eec>
    a5c0:	cmp	r0, #672	; 0x2a0
    a5c4:	bcs	d518 <bt_compidtostr@@Base+0x4ef8>
    a5c8:	ldr	r0, [pc, #-3208]	; 9948 <bt_compidtostr@@Base+0x1328>
    a5cc:	add	r0, pc, r0
    a5d0:	bx	lr
    a5d4:	movw	r3, #667	; 0x29b
    a5d8:	cmp	r0, r3
    a5dc:	beq	d4f4 <bt_compidtostr@@Base+0x4ed4>
    a5e0:	cmp	r0, #668	; 0x29c
    a5e4:	bcs	d500 <bt_compidtostr@@Base+0x4ee0>
    a5e8:	ldr	r0, [pc, #-3236]	; 994c <bt_compidtostr@@Base+0x132c>
    a5ec:	add	r0, pc, r0
    a5f0:	bx	lr
    a5f4:	movw	r3, #675	; 0x2a3
    a5f8:	cmp	r0, r3
    a5fc:	beq	d530 <bt_compidtostr@@Base+0x4f10>
    a600:	cmp	r0, #676	; 0x2a4
    a604:	bcs	d53c <bt_compidtostr@@Base+0x4f1c>
    a608:	ldr	r0, [pc, #-3264]	; 9950 <bt_compidtostr@@Base+0x1330>
    a60c:	add	r0, pc, r0
    a610:	bx	lr
    a614:	movw	r3, #689	; 0x2b1
    a618:	cmp	r0, r3
    a61c:	beq	d56c <bt_compidtostr@@Base+0x4f4c>
    a620:	bls	a654 <bt_compidtostr@@Base+0x2034>
    a624:	movw	r3, #693	; 0x2b5
    a628:	cmp	r0, r3
    a62c:	beq	d5b4 <bt_compidtostr@@Base+0x4f94>
    a630:	bls	a6a4 <bt_compidtostr@@Base+0x2084>
    a634:	movw	r3, #695	; 0x2b7
    a638:	cmp	r0, r3
    a63c:	beq	d5d8 <bt_compidtostr@@Base+0x4fb8>
    a640:	cmp	r0, #696	; 0x2b8
    a644:	bcs	d5e4 <bt_compidtostr@@Base+0x4fc4>
    a648:	ldr	r0, [pc, #-3324]	; 9954 <bt_compidtostr@@Base+0x1334>
    a64c:	add	r0, pc, r0
    a650:	bx	lr
    a654:	movw	r3, #685	; 0x2ad
    a658:	cmp	r0, r3
    a65c:	beq	d578 <bt_compidtostr@@Base+0x4f58>
    a660:	bls	a684 <bt_compidtostr@@Base+0x2064>
    a664:	movw	r3, #687	; 0x2af
    a668:	cmp	r0, r3
    a66c:	beq	d59c <bt_compidtostr@@Base+0x4f7c>
    a670:	cmp	r0, #688	; 0x2b0
    a674:	bcs	d5a8 <bt_compidtostr@@Base+0x4f88>
    a678:	ldr	r0, [pc, #-3368]	; 9958 <bt_compidtostr@@Base+0x1338>
    a67c:	add	r0, pc, r0
    a680:	bx	lr
    a684:	movw	r3, #683	; 0x2ab
    a688:	cmp	r0, r3
    a68c:	beq	d584 <bt_compidtostr@@Base+0x4f64>
    a690:	cmp	r0, #684	; 0x2ac
    a694:	bcs	d590 <bt_compidtostr@@Base+0x4f70>
    a698:	ldr	r0, [pc, #-3396]	; 995c <bt_compidtostr@@Base+0x133c>
    a69c:	add	r0, pc, r0
    a6a0:	bx	lr
    a6a4:	movw	r3, #691	; 0x2b3
    a6a8:	cmp	r0, r3
    a6ac:	beq	d5c0 <bt_compidtostr@@Base+0x4fa0>
    a6b0:	cmp	r0, #692	; 0x2b4
    a6b4:	bcs	d5cc <bt_compidtostr@@Base+0x4fac>
    a6b8:	ldr	r0, [pc, #-3424]	; 9960 <bt_compidtostr@@Base+0x1340>
    a6bc:	add	r0, pc, r0
    a6c0:	bx	lr
    a6c4:	movw	r3, #701	; 0x2bd
    a6c8:	cmp	r0, r3
    a6cc:	beq	d5fc <bt_compidtostr@@Base+0x4fdc>
    a6d0:	bls	a6f4 <bt_compidtostr@@Base+0x20d4>
    a6d4:	movw	r3, #703	; 0x2bf
    a6d8:	cmp	r0, r3
    a6dc:	beq	d620 <bt_compidtostr@@Base+0x5000>
    a6e0:	cmp	r0, #704	; 0x2c0
    a6e4:	bcs	d62c <bt_compidtostr@@Base+0x500c>
    a6e8:	ldr	r0, [pc, #-3468]	; 9964 <bt_compidtostr@@Base+0x1344>
    a6ec:	add	r0, pc, r0
    a6f0:	bx	lr
    a6f4:	movw	r3, #699	; 0x2bb
    a6f8:	cmp	r0, r3
    a6fc:	beq	d608 <bt_compidtostr@@Base+0x4fe8>
    a700:	cmp	r0, #700	; 0x2bc
    a704:	bcs	d614 <bt_compidtostr@@Base+0x4ff4>
    a708:	ldr	r0, [pc, #-3496]	; 9968 <bt_compidtostr@@Base+0x1348>
    a70c:	add	r0, pc, r0
    a710:	bx	lr
    a714:	movw	r3, #707	; 0x2c3
    a718:	cmp	r0, r3
    a71c:	beq	d644 <bt_compidtostr@@Base+0x5024>
    a720:	cmp	r0, #708	; 0x2c4
    a724:	bcs	d650 <bt_compidtostr@@Base+0x5030>
    a728:	ldr	r0, [pc, #-3524]	; 996c <bt_compidtostr@@Base+0x134c>
    a72c:	add	r0, pc, r0
    a730:	bx	lr
    a734:	ldr	r0, [pc, #-3532]	; 9970 <bt_compidtostr@@Base+0x1350>
    a738:	add	r0, pc, r0
    a73c:	bx	lr
    a740:	movw	r3, #746	; 0x2ea
    a744:	cmp	r0, r3
    a748:	beq	d680 <bt_compidtostr@@Base+0x5060>
    a74c:	bls	a7b0 <bt_compidtostr@@Base+0x2190>
    a750:	movw	r3, #762	; 0x2fa
    a754:	cmp	r0, r3
    a758:	beq	d7a0 <bt_compidtostr@@Base+0x5180>
    a75c:	bls	a8e0 <bt_compidtostr@@Base+0x22c0>
    a760:	movw	r3, #770	; 0x302
    a764:	cmp	r0, r3
    a768:	beq	d830 <bt_compidtostr@@Base+0x5210>
    a76c:	bls	a970 <bt_compidtostr@@Base+0x2350>
    a770:	movw	r3, #774	; 0x306
    a774:	cmp	r0, r3
    a778:	beq	d878 <bt_compidtostr@@Base+0x5258>
    a77c:	bls	a9b0 <bt_compidtostr@@Base+0x2390>
    a780:	cmp	r0, #776	; 0x308
    a784:	beq	d89c <bt_compidtostr@@Base+0x527c>
    a788:	bcc	d8a8 <bt_compidtostr@@Base+0x5288>
    a78c:	movw	r3, #777	; 0x309
    a790:	cmp	r0, r3
    a794:	beq	d8b4 <bt_compidtostr@@Base+0x5294>
    a798:	movw	r3, #778	; 0x30a
    a79c:	cmp	r0, r3
    a7a0:	bne	a9c8 <bt_compidtostr@@Base+0x23a8>
    a7a4:	ldr	r0, [pc, #-3640]	; 9974 <bt_compidtostr@@Base+0x1354>
    a7a8:	add	r0, pc, r0
    a7ac:	bx	lr
    a7b0:	movw	r3, #730	; 0x2da
    a7b4:	cmp	r0, r3
    a7b8:	beq	d68c <bt_compidtostr@@Base+0x506c>
    a7bc:	bls	a7f8 <bt_compidtostr@@Base+0x21d8>
    a7c0:	movw	r3, #738	; 0x2e2
    a7c4:	cmp	r0, r3
    a7c8:	beq	d71c <bt_compidtostr@@Base+0x50fc>
    a7cc:	bls	a888 <bt_compidtostr@@Base+0x2268>
    a7d0:	movw	r3, #742	; 0x2e6
    a7d4:	cmp	r0, r3
    a7d8:	beq	d764 <bt_compidtostr@@Base+0x5144>
    a7dc:	bls	a8c8 <bt_compidtostr@@Base+0x22a8>
    a7e0:	cmp	r0, #744	; 0x2e8
    a7e4:	beq	d788 <bt_compidtostr@@Base+0x5168>
    a7e8:	bhi	d794 <bt_compidtostr@@Base+0x5174>
    a7ec:	ldr	r0, [pc, #-3708]	; 9978 <bt_compidtostr@@Base+0x1358>
    a7f0:	add	r0, pc, r0
    a7f4:	bx	lr
    a7f8:	movw	r3, #722	; 0x2d2
    a7fc:	cmp	r0, r3
    a800:	beq	d698 <bt_compidtostr@@Base+0x5078>
    a804:	bls	a830 <bt_compidtostr@@Base+0x2210>
    a808:	movw	r3, #726	; 0x2d6
    a80c:	cmp	r0, r3
    a810:	beq	d6e0 <bt_compidtostr@@Base+0x50c0>
    a814:	bls	a870 <bt_compidtostr@@Base+0x2250>
    a818:	cmp	r0, #728	; 0x2d8
    a81c:	beq	d704 <bt_compidtostr@@Base+0x50e4>
    a820:	bhi	d710 <bt_compidtostr@@Base+0x50f0>
    a824:	ldr	r0, [pc, #-3760]	; 997c <bt_compidtostr@@Base+0x135c>
    a828:	add	r0, pc, r0
    a82c:	bx	lr
    a830:	movw	r3, #718	; 0x2ce
    a834:	cmp	r0, r3
    a838:	beq	d6a4 <bt_compidtostr@@Base+0x5084>
    a83c:	bls	a858 <bt_compidtostr@@Base+0x2238>
    a840:	cmp	r0, #720	; 0x2d0
    a844:	beq	d6c8 <bt_compidtostr@@Base+0x50a8>
    a848:	bhi	d6d4 <bt_compidtostr@@Base+0x50b4>
    a84c:	ldr	r0, [pc, #-3796]	; 9980 <bt_compidtostr@@Base+0x1360>
    a850:	add	r0, pc, r0
    a854:	bx	lr
    a858:	cmp	r0, #716	; 0x2cc
    a85c:	beq	d6b0 <bt_compidtostr@@Base+0x5090>
    a860:	bhi	d6bc <bt_compidtostr@@Base+0x509c>
    a864:	ldr	r0, [pc, #-3816]	; 9984 <bt_compidtostr@@Base+0x1364>
    a868:	add	r0, pc, r0
    a86c:	bx	lr
    a870:	cmp	r0, #724	; 0x2d4
    a874:	beq	d6ec <bt_compidtostr@@Base+0x50cc>
    a878:	bhi	d6f8 <bt_compidtostr@@Base+0x50d8>
    a87c:	ldr	r0, [pc, #-3836]	; 9988 <bt_compidtostr@@Base+0x1368>
    a880:	add	r0, pc, r0
    a884:	bx	lr
    a888:	movw	r3, #734	; 0x2de
    a88c:	cmp	r0, r3
    a890:	beq	d728 <bt_compidtostr@@Base+0x5108>
    a894:	bls	a8b0 <bt_compidtostr@@Base+0x2290>
    a898:	cmp	r0, #736	; 0x2e0
    a89c:	beq	d74c <bt_compidtostr@@Base+0x512c>
    a8a0:	bhi	d758 <bt_compidtostr@@Base+0x5138>
    a8a4:	ldr	r0, [pc, #-3872]	; 998c <bt_compidtostr@@Base+0x136c>
    a8a8:	add	r0, pc, r0
    a8ac:	bx	lr
    a8b0:	cmp	r0, #732	; 0x2dc
    a8b4:	beq	d734 <bt_compidtostr@@Base+0x5114>
    a8b8:	bhi	d740 <bt_compidtostr@@Base+0x5120>
    a8bc:	ldr	r0, [pc, #-3892]	; 9990 <bt_compidtostr@@Base+0x1370>
    a8c0:	add	r0, pc, r0
    a8c4:	bx	lr
    a8c8:	cmp	r0, #740	; 0x2e4
    a8cc:	beq	d770 <bt_compidtostr@@Base+0x5150>
    a8d0:	bhi	d77c <bt_compidtostr@@Base+0x515c>
    a8d4:	ldr	r0, [pc, #-3912]	; 9994 <bt_compidtostr@@Base+0x1374>
    a8d8:	add	r0, pc, r0
    a8dc:	bx	lr
    a8e0:	movw	r3, #754	; 0x2f2
    a8e4:	cmp	r0, r3
    a8e8:	beq	d7ac <bt_compidtostr@@Base+0x518c>
    a8ec:	bls	a918 <bt_compidtostr@@Base+0x22f8>
    a8f0:	movw	r3, #758	; 0x2f6
    a8f4:	cmp	r0, r3
    a8f8:	beq	d7f4 <bt_compidtostr@@Base+0x51d4>
    a8fc:	bls	a958 <bt_compidtostr@@Base+0x2338>
    a900:	cmp	r0, #760	; 0x2f8
    a904:	beq	d818 <bt_compidtostr@@Base+0x51f8>
    a908:	bhi	d824 <bt_compidtostr@@Base+0x5204>
    a90c:	ldr	r0, [pc, #-3964]	; 9998 <bt_compidtostr@@Base+0x1378>
    a910:	add	r0, pc, r0
    a914:	bx	lr
    a918:	movw	r3, #750	; 0x2ee
    a91c:	cmp	r0, r3
    a920:	beq	d7b8 <bt_compidtostr@@Base+0x5198>
    a924:	bls	a940 <bt_compidtostr@@Base+0x2320>
    a928:	cmp	r0, #752	; 0x2f0
    a92c:	beq	d7dc <bt_compidtostr@@Base+0x51bc>
    a930:	bhi	d7e8 <bt_compidtostr@@Base+0x51c8>
    a934:	ldr	r0, [pc, #-4000]	; 999c <bt_compidtostr@@Base+0x137c>
    a938:	add	r0, pc, r0
    a93c:	bx	lr
    a940:	cmp	r0, #748	; 0x2ec
    a944:	beq	d7c4 <bt_compidtostr@@Base+0x51a4>
    a948:	bhi	d7d0 <bt_compidtostr@@Base+0x51b0>
    a94c:	ldr	r0, [pc, #-4020]	; 99a0 <bt_compidtostr@@Base+0x1380>
    a950:	add	r0, pc, r0
    a954:	bx	lr
    a958:	cmp	r0, #756	; 0x2f4
    a95c:	beq	d800 <bt_compidtostr@@Base+0x51e0>
    a960:	bhi	d80c <bt_compidtostr@@Base+0x51ec>
    a964:	ldr	r0, [pc, #-4040]	; 99a4 <bt_compidtostr@@Base+0x1384>
    a968:	add	r0, pc, r0
    a96c:	bx	lr
    a970:	movw	r3, #766	; 0x2fe
    a974:	cmp	r0, r3
    a978:	beq	d83c <bt_compidtostr@@Base+0x521c>
    a97c:	bls	a998 <bt_compidtostr@@Base+0x2378>
    a980:	cmp	r0, #768	; 0x300
    a984:	beq	d860 <bt_compidtostr@@Base+0x5240>
    a988:	bhi	d86c <bt_compidtostr@@Base+0x524c>
    a98c:	ldr	r0, [pc, #-4076]	; 99a8 <bt_compidtostr@@Base+0x1388>
    a990:	add	r0, pc, r0
    a994:	bx	lr
    a998:	cmp	r0, #764	; 0x2fc
    a99c:	beq	d848 <bt_compidtostr@@Base+0x5228>
    a9a0:	bhi	d854 <bt_compidtostr@@Base+0x5234>
    a9a4:	ldr	r0, [pc, #4076]	; b998 <bt_compidtostr@@Base+0x3378>
    a9a8:	add	r0, pc, r0
    a9ac:	bx	lr
    a9b0:	cmp	r0, #772	; 0x304
    a9b4:	beq	d884 <bt_compidtostr@@Base+0x5264>
    a9b8:	bhi	d890 <bt_compidtostr@@Base+0x5270>
    a9bc:	ldr	r0, [pc, #4056]	; b99c <bt_compidtostr@@Base+0x337c>
    a9c0:	add	r0, pc, r0
    a9c4:	bx	lr
    a9c8:	ldr	r0, [pc, #4048]	; b9a0 <bt_compidtostr@@Base+0x3380>
    a9cc:	add	r0, pc, r0
    a9d0:	bx	lr
    a9d4:	movw	r3, #909	; 0x38d
    a9d8:	cmp	r0, r3
    a9dc:	beq	d8c0 <bt_compidtostr@@Base+0x52a0>
    a9e0:	bhi	af98 <bt_compidtostr@@Base+0x2978>
    a9e4:	cmp	r0, #844	; 0x34c
    a9e8:	beq	d8cc <bt_compidtostr@@Base+0x52ac>
    a9ec:	bhi	ad04 <bt_compidtostr@@Base+0x26e4>
    a9f0:	movw	r3, #811	; 0x32b
    a9f4:	cmp	r0, r3
    a9f8:	beq	d8d8 <bt_compidtostr@@Base+0x52b8>
    a9fc:	cmp	r0, #812	; 0x32c
    aa00:	bcc	aa78 <bt_compidtostr@@Base+0x2458>
    aa04:	movw	r3, #827	; 0x33b
    aa08:	cmp	r0, r3
    aa0c:	beq	d9f8 <bt_compidtostr@@Base+0x53d8>
    aa10:	cmp	r0, #828	; 0x33c
    aa14:	bcc	abe4 <bt_compidtostr@@Base+0x25c4>
    aa18:	movw	r3, #835	; 0x343
    aa1c:	cmp	r0, r3
    aa20:	beq	da88 <bt_compidtostr@@Base+0x5468>
    aa24:	cmp	r0, #836	; 0x344
    aa28:	bcc	ac90 <bt_compidtostr@@Base+0x2670>
    aa2c:	movw	r3, #839	; 0x347
    aa30:	cmp	r0, r3
    aa34:	beq	dad0 <bt_compidtostr@@Base+0x54b0>
    aa38:	cmp	r0, #840	; 0x348
    aa3c:	bcc	acdc <bt_compidtostr@@Base+0x26bc>
    aa40:	movw	r3, #841	; 0x349
    aa44:	cmp	r0, r3
    aa48:	beq	daf4 <bt_compidtostr@@Base+0x54d4>
    aa4c:	cmp	r0, #840	; 0x348
    aa50:	bls	db00 <bt_compidtostr@@Base+0x54e0>
    aa54:	movw	r3, #842	; 0x34a
    aa58:	cmp	r0, r3
    aa5c:	beq	db0c <bt_compidtostr@@Base+0x54ec>
    aa60:	movw	r3, #843	; 0x34b
    aa64:	cmp	r0, r3
    aa68:	bne	acf8 <bt_compidtostr@@Base+0x26d8>
    aa6c:	ldr	r0, [pc, #3888]	; b9a4 <bt_compidtostr@@Base+0x3384>
    aa70:	add	r0, pc, r0
    aa74:	bx	lr
    aa78:	movw	r3, #795	; 0x31b
    aa7c:	cmp	r0, r3
    aa80:	beq	d8e4 <bt_compidtostr@@Base+0x52c4>
    aa84:	cmp	r0, #796	; 0x31c
    aa88:	bcc	aad0 <bt_compidtostr@@Base+0x24b0>
    aa8c:	movw	r3, #803	; 0x323
    aa90:	cmp	r0, r3
    aa94:	beq	d974 <bt_compidtostr@@Base+0x5354>
    aa98:	cmp	r0, #804	; 0x324
    aa9c:	bcc	ab7c <bt_compidtostr@@Base+0x255c>
    aaa0:	movw	r3, #807	; 0x327
    aaa4:	cmp	r0, r3
    aaa8:	beq	d9bc <bt_compidtostr@@Base+0x539c>
    aaac:	cmp	r0, #808	; 0x328
    aab0:	bcc	abc8 <bt_compidtostr@@Base+0x25a8>
    aab4:	movw	r3, #809	; 0x329
    aab8:	cmp	r0, r3
    aabc:	beq	d9e0 <bt_compidtostr@@Base+0x53c0>
    aac0:	bhi	d9ec <bt_compidtostr@@Base+0x53cc>
    aac4:	ldr	r0, [pc, #3804]	; b9a8 <bt_compidtostr@@Base+0x3388>
    aac8:	add	r0, pc, r0
    aacc:	bx	lr
    aad0:	movw	r3, #787	; 0x313
    aad4:	cmp	r0, r3
    aad8:	beq	d8f0 <bt_compidtostr@@Base+0x52d0>
    aadc:	cmp	r0, #788	; 0x314
    aae0:	bcc	ab14 <bt_compidtostr@@Base+0x24f4>
    aae4:	movw	r3, #791	; 0x317
    aae8:	cmp	r0, r3
    aaec:	beq	d938 <bt_compidtostr@@Base+0x5318>
    aaf0:	cmp	r0, #792	; 0x318
    aaf4:	bcc	ab60 <bt_compidtostr@@Base+0x2540>
    aaf8:	movw	r3, #793	; 0x319
    aafc:	cmp	r0, r3
    ab00:	beq	d95c <bt_compidtostr@@Base+0x533c>
    ab04:	bhi	d968 <bt_compidtostr@@Base+0x5348>
    ab08:	ldr	r0, [pc, #3740]	; b9ac <bt_compidtostr@@Base+0x338c>
    ab0c:	add	r0, pc, r0
    ab10:	bx	lr
    ab14:	movw	r3, #783	; 0x30f
    ab18:	cmp	r0, r3
    ab1c:	beq	d8fc <bt_compidtostr@@Base+0x52dc>
    ab20:	cmp	r0, #784	; 0x310
    ab24:	bcc	ab44 <bt_compidtostr@@Base+0x2524>
    ab28:	movw	r3, #785	; 0x311
    ab2c:	cmp	r0, r3
    ab30:	beq	d920 <bt_compidtostr@@Base+0x5300>
    ab34:	bhi	d92c <bt_compidtostr@@Base+0x530c>
    ab38:	ldr	r0, [pc, #3696]	; b9b0 <bt_compidtostr@@Base+0x3390>
    ab3c:	add	r0, pc, r0
    ab40:	bx	lr
    ab44:	movw	r3, #781	; 0x30d
    ab48:	cmp	r0, r3
    ab4c:	beq	d908 <bt_compidtostr@@Base+0x52e8>
    ab50:	bhi	d914 <bt_compidtostr@@Base+0x52f4>
    ab54:	ldr	r0, [pc, #3672]	; b9b4 <bt_compidtostr@@Base+0x3394>
    ab58:	add	r0, pc, r0
    ab5c:	bx	lr
    ab60:	movw	r3, #789	; 0x315
    ab64:	cmp	r0, r3
    ab68:	beq	d944 <bt_compidtostr@@Base+0x5324>
    ab6c:	bhi	d950 <bt_compidtostr@@Base+0x5330>
    ab70:	ldr	r0, [pc, #3648]	; b9b8 <bt_compidtostr@@Base+0x3398>
    ab74:	add	r0, pc, r0
    ab78:	bx	lr
    ab7c:	movw	r3, #799	; 0x31f
    ab80:	cmp	r0, r3
    ab84:	beq	d980 <bt_compidtostr@@Base+0x5360>
    ab88:	cmp	r0, #800	; 0x320
    ab8c:	bcc	abac <bt_compidtostr@@Base+0x258c>
    ab90:	movw	r3, #801	; 0x321
    ab94:	cmp	r0, r3
    ab98:	beq	d9a4 <bt_compidtostr@@Base+0x5384>
    ab9c:	bhi	d9b0 <bt_compidtostr@@Base+0x5390>
    aba0:	ldr	r0, [pc, #3604]	; b9bc <bt_compidtostr@@Base+0x339c>
    aba4:	add	r0, pc, r0
    aba8:	bx	lr
    abac:	movw	r3, #797	; 0x31d
    abb0:	cmp	r0, r3
    abb4:	beq	d98c <bt_compidtostr@@Base+0x536c>
    abb8:	bhi	d998 <bt_compidtostr@@Base+0x5378>
    abbc:	ldr	r0, [pc, #3580]	; b9c0 <bt_compidtostr@@Base+0x33a0>
    abc0:	add	r0, pc, r0
    abc4:	bx	lr
    abc8:	movw	r3, #805	; 0x325
    abcc:	cmp	r0, r3
    abd0:	beq	d9c8 <bt_compidtostr@@Base+0x53a8>
    abd4:	bhi	d9d4 <bt_compidtostr@@Base+0x53b4>
    abd8:	ldr	r0, [pc, #3556]	; b9c4 <bt_compidtostr@@Base+0x33a4>
    abdc:	add	r0, pc, r0
    abe0:	bx	lr
    abe4:	movw	r3, #819	; 0x333
    abe8:	cmp	r0, r3
    abec:	beq	da04 <bt_compidtostr@@Base+0x53e4>
    abf0:	cmp	r0, #820	; 0x334
    abf4:	bcc	ac28 <bt_compidtostr@@Base+0x2608>
    abf8:	movw	r3, #823	; 0x337
    abfc:	cmp	r0, r3
    ac00:	beq	da4c <bt_compidtostr@@Base+0x542c>
    ac04:	cmp	r0, #824	; 0x338
    ac08:	bcc	ac74 <bt_compidtostr@@Base+0x2654>
    ac0c:	movw	r3, #825	; 0x339
    ac10:	cmp	r0, r3
    ac14:	beq	da70 <bt_compidtostr@@Base+0x5450>
    ac18:	bhi	da7c <bt_compidtostr@@Base+0x545c>
    ac1c:	ldr	r0, [pc, #3492]	; b9c8 <bt_compidtostr@@Base+0x33a8>
    ac20:	add	r0, pc, r0
    ac24:	bx	lr
    ac28:	movw	r3, #815	; 0x32f
    ac2c:	cmp	r0, r3
    ac30:	beq	da10 <bt_compidtostr@@Base+0x53f0>
    ac34:	cmp	r0, #816	; 0x330
    ac38:	bcc	ac58 <bt_compidtostr@@Base+0x2638>
    ac3c:	movw	r3, #817	; 0x331
    ac40:	cmp	r0, r3
    ac44:	beq	da34 <bt_compidtostr@@Base+0x5414>
    ac48:	bhi	da40 <bt_compidtostr@@Base+0x5420>
    ac4c:	ldr	r0, [pc, #3448]	; b9cc <bt_compidtostr@@Base+0x33ac>
    ac50:	add	r0, pc, r0
    ac54:	bx	lr
    ac58:	movw	r3, #813	; 0x32d
    ac5c:	cmp	r0, r3
    ac60:	beq	da1c <bt_compidtostr@@Base+0x53fc>
    ac64:	bhi	da28 <bt_compidtostr@@Base+0x5408>
    ac68:	ldr	r0, [pc, #3424]	; b9d0 <bt_compidtostr@@Base+0x33b0>
    ac6c:	add	r0, pc, r0
    ac70:	bx	lr
    ac74:	movw	r3, #821	; 0x335
    ac78:	cmp	r0, r3
    ac7c:	beq	da58 <bt_compidtostr@@Base+0x5438>
    ac80:	bhi	da64 <bt_compidtostr@@Base+0x5444>
    ac84:	ldr	r0, [pc, #3400]	; b9d4 <bt_compidtostr@@Base+0x33b4>
    ac88:	add	r0, pc, r0
    ac8c:	bx	lr
    ac90:	movw	r3, #831	; 0x33f
    ac94:	cmp	r0, r3
    ac98:	beq	da94 <bt_compidtostr@@Base+0x5474>
    ac9c:	cmp	r0, #832	; 0x340
    aca0:	bcc	acc0 <bt_compidtostr@@Base+0x26a0>
    aca4:	movw	r3, #833	; 0x341
    aca8:	cmp	r0, r3
    acac:	beq	dab8 <bt_compidtostr@@Base+0x5498>
    acb0:	bhi	dac4 <bt_compidtostr@@Base+0x54a4>
    acb4:	ldr	r0, [pc, #3356]	; b9d8 <bt_compidtostr@@Base+0x33b8>
    acb8:	add	r0, pc, r0
    acbc:	bx	lr
    acc0:	movw	r3, #829	; 0x33d
    acc4:	cmp	r0, r3
    acc8:	beq	daa0 <bt_compidtostr@@Base+0x5480>
    accc:	bhi	daac <bt_compidtostr@@Base+0x548c>
    acd0:	ldr	r0, [pc, #3332]	; b9dc <bt_compidtostr@@Base+0x33bc>
    acd4:	add	r0, pc, r0
    acd8:	bx	lr
    acdc:	movw	r3, #837	; 0x345
    ace0:	cmp	r0, r3
    ace4:	beq	dadc <bt_compidtostr@@Base+0x54bc>
    ace8:	bhi	dae8 <bt_compidtostr@@Base+0x54c8>
    acec:	ldr	r0, [pc, #3308]	; b9e0 <bt_compidtostr@@Base+0x33c0>
    acf0:	add	r0, pc, r0
    acf4:	bx	lr
    acf8:	ldr	r0, [pc, #3300]	; b9e4 <bt_compidtostr@@Base+0x33c4>
    acfc:	add	r0, pc, r0
    ad00:	bx	lr
    ad04:	cmp	r0, #876	; 0x36c
    ad08:	beq	db18 <bt_compidtostr@@Base+0x54f8>
    ad0c:	bls	ad64 <bt_compidtostr@@Base+0x2744>
    ad10:	cmp	r0, #892	; 0x37c
    ad14:	beq	dc38 <bt_compidtostr@@Base+0x5618>
    ad18:	bls	ae98 <bt_compidtostr@@Base+0x2878>
    ad1c:	cmp	r0, #900	; 0x384
    ad20:	beq	dcc8 <bt_compidtostr@@Base+0x56a8>
    ad24:	bls	af2c <bt_compidtostr@@Base+0x290c>
    ad28:	cmp	r0, #904	; 0x388
    ad2c:	beq	dd10 <bt_compidtostr@@Base+0x56f0>
    ad30:	bls	af70 <bt_compidtostr@@Base+0x2950>
    ad34:	movw	r3, #906	; 0x38a
    ad38:	cmp	r0, r3
    ad3c:	beq	dd34 <bt_compidtostr@@Base+0x5714>
    ad40:	bcc	dd40 <bt_compidtostr@@Base+0x5720>
    ad44:	movw	r3, #907	; 0x38b
    ad48:	cmp	r0, r3
    ad4c:	beq	dd4c <bt_compidtostr@@Base+0x572c>
    ad50:	cmp	r0, #908	; 0x38c
    ad54:	bne	af8c <bt_compidtostr@@Base+0x296c>
    ad58:	ldr	r0, [pc, #3208]	; b9e8 <bt_compidtostr@@Base+0x33c8>
    ad5c:	add	r0, pc, r0
    ad60:	bx	lr
    ad64:	cmp	r0, #860	; 0x35c
    ad68:	beq	db24 <bt_compidtostr@@Base+0x5504>
    ad6c:	bls	ada4 <bt_compidtostr@@Base+0x2784>
    ad70:	cmp	r0, #868	; 0x364
    ad74:	beq	dbb4 <bt_compidtostr@@Base+0x5594>
    ad78:	bls	ae38 <bt_compidtostr@@Base+0x2818>
    ad7c:	cmp	r0, #872	; 0x368
    ad80:	beq	dbfc <bt_compidtostr@@Base+0x55dc>
    ad84:	bls	ae7c <bt_compidtostr@@Base+0x285c>
    ad88:	movw	r3, #874	; 0x36a
    ad8c:	cmp	r0, r3
    ad90:	beq	dc20 <bt_compidtostr@@Base+0x5600>
    ad94:	bhi	dc2c <bt_compidtostr@@Base+0x560c>
    ad98:	ldr	r0, [pc, #3148]	; b9ec <bt_compidtostr@@Base+0x33cc>
    ad9c:	add	r0, pc, r0
    ada0:	bx	lr
    ada4:	cmp	r0, #852	; 0x354
    ada8:	beq	db30 <bt_compidtostr@@Base+0x5510>
    adac:	bls	add8 <bt_compidtostr@@Base+0x27b8>
    adb0:	cmp	r0, #856	; 0x358
    adb4:	beq	db78 <bt_compidtostr@@Base+0x5558>
    adb8:	bls	ae1c <bt_compidtostr@@Base+0x27fc>
    adbc:	movw	r3, #858	; 0x35a
    adc0:	cmp	r0, r3
    adc4:	beq	db9c <bt_compidtostr@@Base+0x557c>
    adc8:	bhi	dba8 <bt_compidtostr@@Base+0x5588>
    adcc:	ldr	r0, [pc, #3100]	; b9f0 <bt_compidtostr@@Base+0x33d0>
    add0:	add	r0, pc, r0
    add4:	bx	lr
    add8:	cmp	r0, #848	; 0x350
    addc:	beq	db3c <bt_compidtostr@@Base+0x551c>
    ade0:	bls	ae00 <bt_compidtostr@@Base+0x27e0>
    ade4:	movw	r3, #850	; 0x352
    ade8:	cmp	r0, r3
    adec:	beq	db60 <bt_compidtostr@@Base+0x5540>
    adf0:	bhi	db6c <bt_compidtostr@@Base+0x554c>
    adf4:	ldr	r0, [pc, #3064]	; b9f4 <bt_compidtostr@@Base+0x33d4>
    adf8:	add	r0, pc, r0
    adfc:	bx	lr
    ae00:	movw	r3, #846	; 0x34e
    ae04:	cmp	r0, r3
    ae08:	beq	db48 <bt_compidtostr@@Base+0x5528>
    ae0c:	bhi	db54 <bt_compidtostr@@Base+0x5534>
    ae10:	ldr	r0, [pc, #3040]	; b9f8 <bt_compidtostr@@Base+0x33d8>
    ae14:	add	r0, pc, r0
    ae18:	bx	lr
    ae1c:	movw	r3, #854	; 0x356
    ae20:	cmp	r0, r3
    ae24:	beq	db84 <bt_compidtostr@@Base+0x5564>
    ae28:	bhi	db90 <bt_compidtostr@@Base+0x5570>
    ae2c:	ldr	r0, [pc, #3016]	; b9fc <bt_compidtostr@@Base+0x33dc>
    ae30:	add	r0, pc, r0
    ae34:	bx	lr
    ae38:	cmp	r0, #864	; 0x360
    ae3c:	beq	dbc0 <bt_compidtostr@@Base+0x55a0>
    ae40:	bls	ae60 <bt_compidtostr@@Base+0x2840>
    ae44:	movw	r3, #866	; 0x362
    ae48:	cmp	r0, r3
    ae4c:	beq	dbe4 <bt_compidtostr@@Base+0x55c4>
    ae50:	bhi	dbf0 <bt_compidtostr@@Base+0x55d0>
    ae54:	ldr	r0, [pc, #2980]	; ba00 <bt_compidtostr@@Base+0x33e0>
    ae58:	add	r0, pc, r0
    ae5c:	bx	lr
    ae60:	movw	r3, #862	; 0x35e
    ae64:	cmp	r0, r3
    ae68:	beq	dbcc <bt_compidtostr@@Base+0x55ac>
    ae6c:	bhi	dbd8 <bt_compidtostr@@Base+0x55b8>
    ae70:	ldr	r0, [pc, #2956]	; ba04 <bt_compidtostr@@Base+0x33e4>
    ae74:	add	r0, pc, r0
    ae78:	bx	lr
    ae7c:	movw	r3, #870	; 0x366
    ae80:	cmp	r0, r3
    ae84:	beq	dc08 <bt_compidtostr@@Base+0x55e8>
    ae88:	bhi	dc14 <bt_compidtostr@@Base+0x55f4>
    ae8c:	ldr	r0, [pc, #2932]	; ba08 <bt_compidtostr@@Base+0x33e8>
    ae90:	add	r0, pc, r0
    ae94:	bx	lr
    ae98:	cmp	r0, #884	; 0x374
    ae9c:	beq	dc44 <bt_compidtostr@@Base+0x5624>
    aea0:	bls	aecc <bt_compidtostr@@Base+0x28ac>
    aea4:	cmp	r0, #888	; 0x378
    aea8:	beq	dc8c <bt_compidtostr@@Base+0x566c>
    aeac:	bls	af10 <bt_compidtostr@@Base+0x28f0>
    aeb0:	movw	r3, #890	; 0x37a
    aeb4:	cmp	r0, r3
    aeb8:	beq	dcb0 <bt_compidtostr@@Base+0x5690>
    aebc:	bhi	dcbc <bt_compidtostr@@Base+0x569c>
    aec0:	ldr	r0, [pc, #2884]	; ba0c <bt_compidtostr@@Base+0x33ec>
    aec4:	add	r0, pc, r0
    aec8:	bx	lr
    aecc:	cmp	r0, #880	; 0x370
    aed0:	beq	dc50 <bt_compidtostr@@Base+0x5630>
    aed4:	bls	aef4 <bt_compidtostr@@Base+0x28d4>
    aed8:	movw	r3, #882	; 0x372
    aedc:	cmp	r0, r3
    aee0:	beq	dc74 <bt_compidtostr@@Base+0x5654>
    aee4:	bhi	dc80 <bt_compidtostr@@Base+0x5660>
    aee8:	ldr	r0, [pc, #2848]	; ba10 <bt_compidtostr@@Base+0x33f0>
    aeec:	add	r0, pc, r0
    aef0:	bx	lr
    aef4:	movw	r3, #878	; 0x36e
    aef8:	cmp	r0, r3
    aefc:	beq	dc5c <bt_compidtostr@@Base+0x563c>
    af00:	bhi	dc68 <bt_compidtostr@@Base+0x5648>
    af04:	ldr	r0, [pc, #2824]	; ba14 <bt_compidtostr@@Base+0x33f4>
    af08:	add	r0, pc, r0
    af0c:	bx	lr
    af10:	movw	r3, #886	; 0x376
    af14:	cmp	r0, r3
    af18:	beq	dc98 <bt_compidtostr@@Base+0x5678>
    af1c:	bhi	dca4 <bt_compidtostr@@Base+0x5684>
    af20:	ldr	r0, [pc, #2800]	; ba18 <bt_compidtostr@@Base+0x33f8>
    af24:	add	r0, pc, r0
    af28:	bx	lr
    af2c:	cmp	r0, #896	; 0x380
    af30:	beq	dcd4 <bt_compidtostr@@Base+0x56b4>
    af34:	bls	af54 <bt_compidtostr@@Base+0x2934>
    af38:	movw	r3, #898	; 0x382
    af3c:	cmp	r0, r3
    af40:	beq	dcf8 <bt_compidtostr@@Base+0x56d8>
    af44:	bhi	dd04 <bt_compidtostr@@Base+0x56e4>
    af48:	ldr	r0, [pc, #2764]	; ba1c <bt_compidtostr@@Base+0x33fc>
    af4c:	add	r0, pc, r0
    af50:	bx	lr
    af54:	movw	r3, #894	; 0x37e
    af58:	cmp	r0, r3
    af5c:	beq	dce0 <bt_compidtostr@@Base+0x56c0>
    af60:	bhi	dcec <bt_compidtostr@@Base+0x56cc>
    af64:	ldr	r0, [pc, #2740]	; ba20 <bt_compidtostr@@Base+0x3400>
    af68:	add	r0, pc, r0
    af6c:	bx	lr
    af70:	movw	r3, #902	; 0x386
    af74:	cmp	r0, r3
    af78:	beq	dd1c <bt_compidtostr@@Base+0x56fc>
    af7c:	bhi	dd28 <bt_compidtostr@@Base+0x5708>
    af80:	ldr	r0, [pc, #2716]	; ba24 <bt_compidtostr@@Base+0x3404>
    af84:	add	r0, pc, r0
    af88:	bx	lr
    af8c:	ldr	r0, [pc, #2708]	; ba28 <bt_compidtostr@@Base+0x3408>
    af90:	add	r0, pc, r0
    af94:	bx	lr
    af98:	movw	r3, #974	; 0x3ce
    af9c:	cmp	r0, r3
    afa0:	beq	dd58 <bt_compidtostr@@Base+0x5738>
    afa4:	bhi	b2b4 <bt_compidtostr@@Base+0x2c94>
    afa8:	movw	r3, #941	; 0x3ad
    afac:	cmp	r0, r3
    afb0:	beq	dd64 <bt_compidtostr@@Base+0x5744>
    afb4:	bls	b018 <bt_compidtostr@@Base+0x29f8>
    afb8:	movw	r3, #957	; 0x3bd
    afbc:	cmp	r0, r3
    afc0:	beq	de84 <bt_compidtostr@@Base+0x5864>
    afc4:	bls	b188 <bt_compidtostr@@Base+0x2b68>
    afc8:	movw	r3, #965	; 0x3c5
    afcc:	cmp	r0, r3
    afd0:	beq	df14 <bt_compidtostr@@Base+0x58f4>
    afd4:	bls	b238 <bt_compidtostr@@Base+0x2c18>
    afd8:	movw	r3, #969	; 0x3c9
    afdc:	cmp	r0, r3
    afe0:	beq	df5c <bt_compidtostr@@Base+0x593c>
    afe4:	bls	b288 <bt_compidtostr@@Base+0x2c68>
    afe8:	movw	r3, #971	; 0x3cb
    afec:	cmp	r0, r3
    aff0:	beq	df80 <bt_compidtostr@@Base+0x5960>
    aff4:	bcc	df8c <bt_compidtostr@@Base+0x596c>
    aff8:	cmp	r0, #972	; 0x3cc
    affc:	beq	df98 <bt_compidtostr@@Base+0x5978>
    b000:	movw	r3, #973	; 0x3cd
    b004:	cmp	r0, r3
    b008:	bne	b2a8 <bt_compidtostr@@Base+0x2c88>
    b00c:	ldr	r0, [pc, #2584]	; ba2c <bt_compidtostr@@Base+0x340c>
    b010:	add	r0, pc, r0
    b014:	bx	lr
    b018:	movw	r3, #925	; 0x39d
    b01c:	cmp	r0, r3
    b020:	beq	dd70 <bt_compidtostr@@Base+0x5750>
    b024:	bls	b068 <bt_compidtostr@@Base+0x2a48>
    b028:	movw	r3, #933	; 0x3a5
    b02c:	cmp	r0, r3
    b030:	beq	de00 <bt_compidtostr@@Base+0x57e0>
    b034:	bls	b118 <bt_compidtostr@@Base+0x2af8>
    b038:	movw	r3, #937	; 0x3a9
    b03c:	cmp	r0, r3
    b040:	beq	de48 <bt_compidtostr@@Base+0x5828>
    b044:	bls	b168 <bt_compidtostr@@Base+0x2b48>
    b048:	movw	r3, #939	; 0x3ab
    b04c:	cmp	r0, r3
    b050:	beq	de6c <bt_compidtostr@@Base+0x584c>
    b054:	cmp	r0, #940	; 0x3ac
    b058:	bcs	de78 <bt_compidtostr@@Base+0x5858>
    b05c:	ldr	r0, [pc, #2508]	; ba30 <bt_compidtostr@@Base+0x3410>
    b060:	add	r0, pc, r0
    b064:	bx	lr
    b068:	movw	r3, #917	; 0x395
    b06c:	cmp	r0, r3
    b070:	beq	dd7c <bt_compidtostr@@Base+0x575c>
    b074:	bls	b0a8 <bt_compidtostr@@Base+0x2a88>
    b078:	movw	r3, #921	; 0x399
    b07c:	cmp	r0, r3
    b080:	beq	ddc4 <bt_compidtostr@@Base+0x57a4>
    b084:	bls	b0f8 <bt_compidtostr@@Base+0x2ad8>
    b088:	movw	r3, #923	; 0x39b
    b08c:	cmp	r0, r3
    b090:	beq	dde8 <bt_compidtostr@@Base+0x57c8>
    b094:	cmp	r0, #924	; 0x39c
    b098:	bcs	ddf4 <bt_compidtostr@@Base+0x57d4>
    b09c:	ldr	r0, [pc, #2448]	; ba34 <bt_compidtostr@@Base+0x3414>
    b0a0:	add	r0, pc, r0
    b0a4:	bx	lr
    b0a8:	movw	r3, #913	; 0x391
    b0ac:	cmp	r0, r3
    b0b0:	beq	dd88 <bt_compidtostr@@Base+0x5768>
    b0b4:	bls	b0d8 <bt_compidtostr@@Base+0x2ab8>
    b0b8:	movw	r3, #915	; 0x393
    b0bc:	cmp	r0, r3
    b0c0:	beq	ddac <bt_compidtostr@@Base+0x578c>
    b0c4:	cmp	r0, #916	; 0x394
    b0c8:	bcs	ddb8 <bt_compidtostr@@Base+0x5798>
    b0cc:	ldr	r0, [pc, #2404]	; ba38 <bt_compidtostr@@Base+0x3418>
    b0d0:	add	r0, pc, r0
    b0d4:	bx	lr
    b0d8:	movw	r3, #911	; 0x38f
    b0dc:	cmp	r0, r3
    b0e0:	beq	dd94 <bt_compidtostr@@Base+0x5774>
    b0e4:	cmp	r0, #912	; 0x390
    b0e8:	bcs	dda0 <bt_compidtostr@@Base+0x5780>
    b0ec:	ldr	r0, [pc, #2376]	; ba3c <bt_compidtostr@@Base+0x341c>
    b0f0:	add	r0, pc, r0
    b0f4:	bx	lr
    b0f8:	movw	r3, #919	; 0x397
    b0fc:	cmp	r0, r3
    b100:	beq	ddd0 <bt_compidtostr@@Base+0x57b0>
    b104:	cmp	r0, #920	; 0x398
    b108:	bcs	dddc <bt_compidtostr@@Base+0x57bc>
    b10c:	ldr	r0, [pc, #2348]	; ba40 <bt_compidtostr@@Base+0x3420>
    b110:	add	r0, pc, r0
    b114:	bx	lr
    b118:	movw	r3, #929	; 0x3a1
    b11c:	cmp	r0, r3
    b120:	beq	de0c <bt_compidtostr@@Base+0x57ec>
    b124:	bls	b148 <bt_compidtostr@@Base+0x2b28>
    b128:	movw	r3, #931	; 0x3a3
    b12c:	cmp	r0, r3
    b130:	beq	de30 <bt_compidtostr@@Base+0x5810>
    b134:	cmp	r0, #932	; 0x3a4
    b138:	bcs	de3c <bt_compidtostr@@Base+0x581c>
    b13c:	ldr	r0, [pc, #2304]	; ba44 <bt_compidtostr@@Base+0x3424>
    b140:	add	r0, pc, r0
    b144:	bx	lr
    b148:	movw	r3, #927	; 0x39f
    b14c:	cmp	r0, r3
    b150:	beq	de18 <bt_compidtostr@@Base+0x57f8>
    b154:	cmp	r0, #928	; 0x3a0
    b158:	bcs	de24 <bt_compidtostr@@Base+0x5804>
    b15c:	ldr	r0, [pc, #2276]	; ba48 <bt_compidtostr@@Base+0x3428>
    b160:	add	r0, pc, r0
    b164:	bx	lr
    b168:	movw	r3, #935	; 0x3a7
    b16c:	cmp	r0, r3
    b170:	beq	de54 <bt_compidtostr@@Base+0x5834>
    b174:	cmp	r0, #936	; 0x3a8
    b178:	bcs	de60 <bt_compidtostr@@Base+0x5840>
    b17c:	ldr	r0, [pc, #2248]	; ba4c <bt_compidtostr@@Base+0x342c>
    b180:	add	r0, pc, r0
    b184:	bx	lr
    b188:	movw	r3, #949	; 0x3b5
    b18c:	cmp	r0, r3
    b190:	beq	de90 <bt_compidtostr@@Base+0x5870>
    b194:	bls	b1c8 <bt_compidtostr@@Base+0x2ba8>
    b198:	movw	r3, #953	; 0x3b9
    b19c:	cmp	r0, r3
    b1a0:	beq	ded8 <bt_compidtostr@@Base+0x58b8>
    b1a4:	bls	b218 <bt_compidtostr@@Base+0x2bf8>
    b1a8:	movw	r3, #955	; 0x3bb
    b1ac:	cmp	r0, r3
    b1b0:	beq	defc <bt_compidtostr@@Base+0x58dc>
    b1b4:	cmp	r0, #956	; 0x3bc
    b1b8:	bcs	df08 <bt_compidtostr@@Base+0x58e8>
    b1bc:	ldr	r0, [pc, #2188]	; ba50 <bt_compidtostr@@Base+0x3430>
    b1c0:	add	r0, pc, r0
    b1c4:	bx	lr
    b1c8:	movw	r3, #945	; 0x3b1
    b1cc:	cmp	r0, r3
    b1d0:	beq	de9c <bt_compidtostr@@Base+0x587c>
    b1d4:	bls	b1f8 <bt_compidtostr@@Base+0x2bd8>
    b1d8:	movw	r3, #947	; 0x3b3
    b1dc:	cmp	r0, r3
    b1e0:	beq	dec0 <bt_compidtostr@@Base+0x58a0>
    b1e4:	cmp	r0, #948	; 0x3b4
    b1e8:	bcs	decc <bt_compidtostr@@Base+0x58ac>
    b1ec:	ldr	r0, [pc, #2144]	; ba54 <bt_compidtostr@@Base+0x3434>
    b1f0:	add	r0, pc, r0
    b1f4:	bx	lr
    b1f8:	movw	r3, #943	; 0x3af
    b1fc:	cmp	r0, r3
    b200:	beq	dea8 <bt_compidtostr@@Base+0x5888>
    b204:	cmp	r0, #944	; 0x3b0
    b208:	bcs	deb4 <bt_compidtostr@@Base+0x5894>
    b20c:	ldr	r0, [pc, #2116]	; ba58 <bt_compidtostr@@Base+0x3438>
    b210:	add	r0, pc, r0
    b214:	bx	lr
    b218:	movw	r3, #951	; 0x3b7
    b21c:	cmp	r0, r3
    b220:	beq	dee4 <bt_compidtostr@@Base+0x58c4>
    b224:	cmp	r0, #952	; 0x3b8
    b228:	bcs	def0 <bt_compidtostr@@Base+0x58d0>
    b22c:	ldr	r0, [pc, #2088]	; ba5c <bt_compidtostr@@Base+0x343c>
    b230:	add	r0, pc, r0
    b234:	bx	lr
    b238:	movw	r3, #961	; 0x3c1
    b23c:	cmp	r0, r3
    b240:	beq	df20 <bt_compidtostr@@Base+0x5900>
    b244:	bls	b268 <bt_compidtostr@@Base+0x2c48>
    b248:	movw	r3, #963	; 0x3c3
    b24c:	cmp	r0, r3
    b250:	beq	df44 <bt_compidtostr@@Base+0x5924>
    b254:	cmp	r0, #964	; 0x3c4
    b258:	bcs	df50 <bt_compidtostr@@Base+0x5930>
    b25c:	ldr	r0, [pc, #2044]	; ba60 <bt_compidtostr@@Base+0x3440>
    b260:	add	r0, pc, r0
    b264:	bx	lr
    b268:	movw	r3, #959	; 0x3bf
    b26c:	cmp	r0, r3
    b270:	beq	df2c <bt_compidtostr@@Base+0x590c>
    b274:	cmp	r0, #960	; 0x3c0
    b278:	bcs	df38 <bt_compidtostr@@Base+0x5918>
    b27c:	ldr	r0, [pc, #2016]	; ba64 <bt_compidtostr@@Base+0x3444>
    b280:	add	r0, pc, r0
    b284:	bx	lr
    b288:	movw	r3, #967	; 0x3c7
    b28c:	cmp	r0, r3
    b290:	beq	df68 <bt_compidtostr@@Base+0x5948>
    b294:	cmp	r0, #968	; 0x3c8
    b298:	bcs	df74 <bt_compidtostr@@Base+0x5954>
    b29c:	ldr	r0, [pc, #1988]	; ba68 <bt_compidtostr@@Base+0x3448>
    b2a0:	add	r0, pc, r0
    b2a4:	bx	lr
    b2a8:	ldr	r0, [pc, #1980]	; ba6c <bt_compidtostr@@Base+0x344c>
    b2ac:	add	r0, pc, r0
    b2b0:	bx	lr
    b2b4:	movw	r3, #1006	; 0x3ee
    b2b8:	cmp	r0, r3
    b2bc:	beq	dfa4 <bt_compidtostr@@Base+0x5984>
    b2c0:	bls	b328 <bt_compidtostr@@Base+0x2d08>
    b2c4:	movw	r3, #1022	; 0x3fe
    b2c8:	cmp	r0, r3
    b2cc:	beq	e0c4 <bt_compidtostr@@Base+0x5aa4>
    b2d0:	bls	b458 <bt_compidtostr@@Base+0x2e38>
    b2d4:	movw	r3, #1030	; 0x406
    b2d8:	cmp	r0, r3
    b2dc:	beq	e154 <bt_compidtostr@@Base+0x5b34>
    b2e0:	bls	b4e8 <bt_compidtostr@@Base+0x2ec8>
    b2e4:	movw	r3, #1034	; 0x40a
    b2e8:	cmp	r0, r3
    b2ec:	beq	e718 <bt_compidtostr@@Base+0x60f8>
    b2f0:	bls	b52c <bt_compidtostr@@Base+0x2f0c>
    b2f4:	movw	r3, #1036	; 0x40c
    b2f8:	cmp	r0, r3
    b2fc:	beq	e73c <bt_compidtostr@@Base+0x611c>
    b300:	bcc	e748 <bt_compidtostr@@Base+0x6128>
    b304:	movw	r3, #1037	; 0x40d
    b308:	cmp	r0, r3
    b30c:	beq	e754 <bt_compidtostr@@Base+0x6134>
    b310:	movw	r3, #65535	; 0xffff
    b314:	cmp	r0, r3
    b318:	bne	b548 <bt_compidtostr@@Base+0x2f28>
    b31c:	ldr	r0, [pc, #1868]	; ba70 <bt_compidtostr@@Base+0x3450>
    b320:	add	r0, pc, r0
    b324:	bx	lr
    b328:	movw	r3, #990	; 0x3de
    b32c:	cmp	r0, r3
    b330:	beq	dfb0 <bt_compidtostr@@Base+0x5990>
    b334:	bls	b370 <bt_compidtostr@@Base+0x2d50>
    b338:	movw	r3, #998	; 0x3e6
    b33c:	cmp	r0, r3
    b340:	beq	e040 <bt_compidtostr@@Base+0x5a20>
    b344:	bls	b400 <bt_compidtostr@@Base+0x2de0>
    b348:	movw	r3, #1002	; 0x3ea
    b34c:	cmp	r0, r3
    b350:	beq	e088 <bt_compidtostr@@Base+0x5a68>
    b354:	bls	b440 <bt_compidtostr@@Base+0x2e20>
    b358:	cmp	r0, #1004	; 0x3ec
    b35c:	beq	e0ac <bt_compidtostr@@Base+0x5a8c>
    b360:	bhi	e0b8 <bt_compidtostr@@Base+0x5a98>
    b364:	ldr	r0, [pc, #1800]	; ba74 <bt_compidtostr@@Base+0x3454>
    b368:	add	r0, pc, r0
    b36c:	bx	lr
    b370:	movw	r3, #982	; 0x3d6
    b374:	cmp	r0, r3
    b378:	beq	dfbc <bt_compidtostr@@Base+0x599c>
    b37c:	bls	b3a8 <bt_compidtostr@@Base+0x2d88>
    b380:	movw	r3, #986	; 0x3da
    b384:	cmp	r0, r3
    b388:	beq	e004 <bt_compidtostr@@Base+0x59e4>
    b38c:	bls	b3e8 <bt_compidtostr@@Base+0x2dc8>
    b390:	cmp	r0, #988	; 0x3dc
    b394:	beq	e028 <bt_compidtostr@@Base+0x5a08>
    b398:	bhi	e034 <bt_compidtostr@@Base+0x5a14>
    b39c:	ldr	r0, [pc, #1748]	; ba78 <bt_compidtostr@@Base+0x3458>
    b3a0:	add	r0, pc, r0
    b3a4:	bx	lr
    b3a8:	movw	r3, #978	; 0x3d2
    b3ac:	cmp	r0, r3
    b3b0:	beq	dfc8 <bt_compidtostr@@Base+0x59a8>
    b3b4:	bls	b3d0 <bt_compidtostr@@Base+0x2db0>
    b3b8:	cmp	r0, #980	; 0x3d4
    b3bc:	beq	dfec <bt_compidtostr@@Base+0x59cc>
    b3c0:	bhi	dff8 <bt_compidtostr@@Base+0x59d8>
    b3c4:	ldr	r0, [pc, #1712]	; ba7c <bt_compidtostr@@Base+0x345c>
    b3c8:	add	r0, pc, r0
    b3cc:	bx	lr
    b3d0:	cmp	r0, #976	; 0x3d0
    b3d4:	beq	dfd4 <bt_compidtostr@@Base+0x59b4>
    b3d8:	bhi	dfe0 <bt_compidtostr@@Base+0x59c0>
    b3dc:	ldr	r0, [pc, #1692]	; ba80 <bt_compidtostr@@Base+0x3460>
    b3e0:	add	r0, pc, r0
    b3e4:	bx	lr
    b3e8:	cmp	r0, #984	; 0x3d8
    b3ec:	beq	e010 <bt_compidtostr@@Base+0x59f0>
    b3f0:	bhi	e01c <bt_compidtostr@@Base+0x59fc>
    b3f4:	ldr	r0, [pc, #1672]	; ba84 <bt_compidtostr@@Base+0x3464>
    b3f8:	add	r0, pc, r0
    b3fc:	bx	lr
    b400:	movw	r3, #994	; 0x3e2
    b404:	cmp	r0, r3
    b408:	beq	e04c <bt_compidtostr@@Base+0x5a2c>
    b40c:	bls	b428 <bt_compidtostr@@Base+0x2e08>
    b410:	cmp	r0, #996	; 0x3e4
    b414:	beq	e070 <bt_compidtostr@@Base+0x5a50>
    b418:	bhi	e07c <bt_compidtostr@@Base+0x5a5c>
    b41c:	ldr	r0, [pc, #1636]	; ba88 <bt_compidtostr@@Base+0x3468>
    b420:	add	r0, pc, r0
    b424:	bx	lr
    b428:	cmp	r0, #992	; 0x3e0
    b42c:	beq	e058 <bt_compidtostr@@Base+0x5a38>
    b430:	bhi	e064 <bt_compidtostr@@Base+0x5a44>
    b434:	ldr	r0, [pc, #1616]	; ba8c <bt_compidtostr@@Base+0x346c>
    b438:	add	r0, pc, r0
    b43c:	bx	lr
    b440:	cmp	r0, #1000	; 0x3e8
    b444:	beq	e094 <bt_compidtostr@@Base+0x5a74>
    b448:	bhi	e0a0 <bt_compidtostr@@Base+0x5a80>
    b44c:	ldr	r0, [pc, #1596]	; ba90 <bt_compidtostr@@Base+0x3470>
    b450:	add	r0, pc, r0
    b454:	bx	lr
    b458:	movw	r3, #1014	; 0x3f6
    b45c:	cmp	r0, r3
    b460:	beq	e0d0 <bt_compidtostr@@Base+0x5ab0>
    b464:	bls	b490 <bt_compidtostr@@Base+0x2e70>
    b468:	movw	r3, #1018	; 0x3fa
    b46c:	cmp	r0, r3
    b470:	beq	e118 <bt_compidtostr@@Base+0x5af8>
    b474:	bls	b4d0 <bt_compidtostr@@Base+0x2eb0>
    b478:	cmp	r0, #1020	; 0x3fc
    b47c:	beq	e13c <bt_compidtostr@@Base+0x5b1c>
    b480:	bhi	e148 <bt_compidtostr@@Base+0x5b28>
    b484:	ldr	r0, [pc, #1544]	; ba94 <bt_compidtostr@@Base+0x3474>
    b488:	add	r0, pc, r0
    b48c:	bx	lr
    b490:	movw	r3, #1010	; 0x3f2
    b494:	cmp	r0, r3
    b498:	beq	e0dc <bt_compidtostr@@Base+0x5abc>
    b49c:	bls	b4b8 <bt_compidtostr@@Base+0x2e98>
    b4a0:	cmp	r0, #1012	; 0x3f4
    b4a4:	beq	e100 <bt_compidtostr@@Base+0x5ae0>
    b4a8:	bhi	e10c <bt_compidtostr@@Base+0x5aec>
    b4ac:	ldr	r0, [pc, #1508]	; ba98 <bt_compidtostr@@Base+0x3478>
    b4b0:	add	r0, pc, r0
    b4b4:	bx	lr
    b4b8:	cmp	r0, #1008	; 0x3f0
    b4bc:	beq	e0e8 <bt_compidtostr@@Base+0x5ac8>
    b4c0:	bhi	e0f4 <bt_compidtostr@@Base+0x5ad4>
    b4c4:	ldr	r0, [pc, #1488]	; ba9c <bt_compidtostr@@Base+0x347c>
    b4c8:	add	r0, pc, r0
    b4cc:	bx	lr
    b4d0:	cmp	r0, #1016	; 0x3f8
    b4d4:	beq	e124 <bt_compidtostr@@Base+0x5b04>
    b4d8:	bhi	e130 <bt_compidtostr@@Base+0x5b10>
    b4dc:	ldr	r0, [pc, #1468]	; baa0 <bt_compidtostr@@Base+0x3480>
    b4e0:	add	r0, pc, r0
    b4e4:	bx	lr
    b4e8:	movw	r3, #1026	; 0x402
    b4ec:	cmp	r0, r3
    b4f0:	beq	e160 <bt_compidtostr@@Base+0x5b40>
    b4f4:	bls	b514 <bt_compidtostr@@Base+0x2ef4>
    b4f8:	movw	r3, #1028	; 0x404
    b4fc:	cmp	r0, r3
    b500:	beq	e700 <bt_compidtostr@@Base+0x60e0>
    b504:	bhi	e70c <bt_compidtostr@@Base+0x60ec>
    b508:	ldr	r0, [pc, #1428]	; baa4 <bt_compidtostr@@Base+0x3484>
    b50c:	add	r0, pc, r0
    b510:	bx	lr
    b514:	cmp	r0, #1024	; 0x400
    b518:	beq	e6e8 <bt_compidtostr@@Base+0x60c8>
    b51c:	bhi	e6f4 <bt_compidtostr@@Base+0x60d4>
    b520:	ldr	r0, [pc, #1408]	; baa8 <bt_compidtostr@@Base+0x3488>
    b524:	add	r0, pc, r0
    b528:	bx	lr
    b52c:	movw	r3, #1032	; 0x408
    b530:	cmp	r0, r3
    b534:	beq	e724 <bt_compidtostr@@Base+0x6104>
    b538:	bhi	e730 <bt_compidtostr@@Base+0x6110>
    b53c:	ldr	r0, [pc, #1384]	; baac <bt_compidtostr@@Base+0x348c>
    b540:	add	r0, pc, r0
    b544:	bx	lr
    b548:	ldr	r0, [pc, #1376]	; bab0 <bt_compidtostr@@Base+0x3490>
    b54c:	add	r0, pc, r0
    b550:	bx	lr
    b554:	ldr	r0, [pc, #1368]	; bab4 <bt_compidtostr@@Base+0x3494>
    b558:	add	r0, pc, r0
    b55c:	bx	lr
    b560:	ldr	r0, [pc, #1360]	; bab8 <bt_compidtostr@@Base+0x3498>
    b564:	add	r0, pc, r0
    b568:	bx	lr
    b56c:	ldr	r0, [pc, #1352]	; babc <bt_compidtostr@@Base+0x349c>
    b570:	add	r0, pc, r0
    b574:	bx	lr
    b578:	ldr	r0, [pc, #1344]	; bac0 <bt_compidtostr@@Base+0x34a0>
    b57c:	add	r0, pc, r0
    b580:	bx	lr
    b584:	ldr	r0, [pc, #1336]	; bac4 <bt_compidtostr@@Base+0x34a4>
    b588:	add	r0, pc, r0
    b58c:	bx	lr
    b590:	ldr	r0, [pc, #1328]	; bac8 <bt_compidtostr@@Base+0x34a8>
    b594:	add	r0, pc, r0
    b598:	bx	lr
    b59c:	ldr	r0, [pc, #1320]	; bacc <bt_compidtostr@@Base+0x34ac>
    b5a0:	add	r0, pc, r0
    b5a4:	bx	lr
    b5a8:	ldr	r0, [pc, #1312]	; bad0 <bt_compidtostr@@Base+0x34b0>
    b5ac:	add	r0, pc, r0
    b5b0:	bx	lr
    b5b4:	ldr	r0, [pc, #1304]	; bad4 <bt_compidtostr@@Base+0x34b4>
    b5b8:	add	r0, pc, r0
    b5bc:	bx	lr
    b5c0:	ldr	r0, [pc, #1296]	; bad8 <bt_compidtostr@@Base+0x34b8>
    b5c4:	add	r0, pc, r0
    b5c8:	bx	lr
    b5cc:	ldr	r0, [pc, #1288]	; badc <bt_compidtostr@@Base+0x34bc>
    b5d0:	add	r0, pc, r0
    b5d4:	bx	lr
    b5d8:	ldr	r0, [pc, #1280]	; bae0 <bt_compidtostr@@Base+0x34c0>
    b5dc:	add	r0, pc, r0
    b5e0:	bx	lr
    b5e4:	ldr	r0, [pc, #1272]	; bae4 <bt_compidtostr@@Base+0x34c4>
    b5e8:	add	r0, pc, r0
    b5ec:	bx	lr
    b5f0:	ldr	r0, [pc, #1264]	; bae8 <bt_compidtostr@@Base+0x34c8>
    b5f4:	add	r0, pc, r0
    b5f8:	bx	lr
    b5fc:	ldr	r0, [pc, #1256]	; baec <bt_compidtostr@@Base+0x34cc>
    b600:	add	r0, pc, r0
    b604:	bx	lr
    b608:	ldr	r0, [pc, #1248]	; baf0 <bt_compidtostr@@Base+0x34d0>
    b60c:	add	r0, pc, r0
    b610:	bx	lr
    b614:	ldr	r0, [pc, #1240]	; baf4 <bt_compidtostr@@Base+0x34d4>
    b618:	add	r0, pc, r0
    b61c:	bx	lr
    b620:	ldr	r0, [pc, #1232]	; baf8 <bt_compidtostr@@Base+0x34d8>
    b624:	add	r0, pc, r0
    b628:	bx	lr
    b62c:	ldr	r0, [pc, #1224]	; bafc <bt_compidtostr@@Base+0x34dc>
    b630:	add	r0, pc, r0
    b634:	bx	lr
    b638:	ldr	r0, [pc, #1216]	; bb00 <bt_compidtostr@@Base+0x34e0>
    b63c:	add	r0, pc, r0
    b640:	bx	lr
    b644:	ldr	r0, [pc, #1208]	; bb04 <bt_compidtostr@@Base+0x34e4>
    b648:	add	r0, pc, r0
    b64c:	bx	lr
    b650:	ldr	r0, [pc, #1200]	; bb08 <bt_compidtostr@@Base+0x34e8>
    b654:	add	r0, pc, r0
    b658:	bx	lr
    b65c:	ldr	r0, [pc, #1192]	; bb0c <bt_compidtostr@@Base+0x34ec>
    b660:	add	r0, pc, r0
    b664:	bx	lr
    b668:	ldr	r0, [pc, #1184]	; bb10 <bt_compidtostr@@Base+0x34f0>
    b66c:	add	r0, pc, r0
    b670:	bx	lr
    b674:	ldr	r0, [pc, #1176]	; bb14 <bt_compidtostr@@Base+0x34f4>
    b678:	add	r0, pc, r0
    b67c:	bx	lr
    b680:	ldr	r0, [pc, #1168]	; bb18 <bt_compidtostr@@Base+0x34f8>
    b684:	add	r0, pc, r0
    b688:	bx	lr
    b68c:	ldr	r0, [pc, #1160]	; bb1c <bt_compidtostr@@Base+0x34fc>
    b690:	add	r0, pc, r0
    b694:	bx	lr
    b698:	ldr	r0, [pc, #1152]	; bb20 <bt_compidtostr@@Base+0x3500>
    b69c:	add	r0, pc, r0
    b6a0:	bx	lr
    b6a4:	ldr	r0, [pc, #1144]	; bb24 <bt_compidtostr@@Base+0x3504>
    b6a8:	add	r0, pc, r0
    b6ac:	bx	lr
    b6b0:	ldr	r0, [pc, #1136]	; bb28 <bt_compidtostr@@Base+0x3508>
    b6b4:	add	r0, pc, r0
    b6b8:	bx	lr
    b6bc:	ldr	r0, [pc, #1128]	; bb2c <bt_compidtostr@@Base+0x350c>
    b6c0:	add	r0, pc, r0
    b6c4:	bx	lr
    b6c8:	ldr	r0, [pc, #1120]	; bb30 <bt_compidtostr@@Base+0x3510>
    b6cc:	add	r0, pc, r0
    b6d0:	bx	lr
    b6d4:	ldr	r0, [pc, #1112]	; bb34 <bt_compidtostr@@Base+0x3514>
    b6d8:	add	r0, pc, r0
    b6dc:	bx	lr
    b6e0:	ldr	r0, [pc, #1104]	; bb38 <bt_compidtostr@@Base+0x3518>
    b6e4:	add	r0, pc, r0
    b6e8:	bx	lr
    b6ec:	ldr	r0, [pc, #1096]	; bb3c <bt_compidtostr@@Base+0x351c>
    b6f0:	add	r0, pc, r0
    b6f4:	bx	lr
    b6f8:	ldr	r0, [pc, #1088]	; bb40 <bt_compidtostr@@Base+0x3520>
    b6fc:	add	r0, pc, r0
    b700:	bx	lr
    b704:	ldr	r0, [pc, #1080]	; bb44 <bt_compidtostr@@Base+0x3524>
    b708:	add	r0, pc, r0
    b70c:	bx	lr
    b710:	ldr	r0, [pc, #1072]	; bb48 <bt_compidtostr@@Base+0x3528>
    b714:	add	r0, pc, r0
    b718:	bx	lr
    b71c:	ldr	r0, [pc, #1064]	; bb4c <bt_compidtostr@@Base+0x352c>
    b720:	add	r0, pc, r0
    b724:	bx	lr
    b728:	ldr	r0, [pc, #1056]	; bb50 <bt_compidtostr@@Base+0x3530>
    b72c:	add	r0, pc, r0
    b730:	bx	lr
    b734:	ldr	r0, [pc, #1048]	; bb54 <bt_compidtostr@@Base+0x3534>
    b738:	add	r0, pc, r0
    b73c:	bx	lr
    b740:	ldr	r0, [pc, #1040]	; bb58 <bt_compidtostr@@Base+0x3538>
    b744:	add	r0, pc, r0
    b748:	bx	lr
    b74c:	ldr	r0, [pc, #1032]	; bb5c <bt_compidtostr@@Base+0x353c>
    b750:	add	r0, pc, r0
    b754:	bx	lr
    b758:	ldr	r0, [pc, #1024]	; bb60 <bt_compidtostr@@Base+0x3540>
    b75c:	add	r0, pc, r0
    b760:	bx	lr
    b764:	ldr	r0, [pc, #1016]	; bb64 <bt_compidtostr@@Base+0x3544>
    b768:	add	r0, pc, r0
    b76c:	bx	lr
    b770:	ldr	r0, [pc, #1008]	; bb68 <bt_compidtostr@@Base+0x3548>
    b774:	add	r0, pc, r0
    b778:	bx	lr
    b77c:	ldr	r0, [pc, #1000]	; bb6c <bt_compidtostr@@Base+0x354c>
    b780:	add	r0, pc, r0
    b784:	bx	lr
    b788:	ldr	r0, [pc, #992]	; bb70 <bt_compidtostr@@Base+0x3550>
    b78c:	add	r0, pc, r0
    b790:	bx	lr
    b794:	ldr	r0, [pc, #984]	; bb74 <bt_compidtostr@@Base+0x3554>
    b798:	add	r0, pc, r0
    b79c:	bx	lr
    b7a0:	ldr	r0, [pc, #976]	; bb78 <bt_compidtostr@@Base+0x3558>
    b7a4:	add	r0, pc, r0
    b7a8:	bx	lr
    b7ac:	ldr	r0, [pc, #968]	; bb7c <bt_compidtostr@@Base+0x355c>
    b7b0:	add	r0, pc, r0
    b7b4:	bx	lr
    b7b8:	ldr	r0, [pc, #960]	; bb80 <bt_compidtostr@@Base+0x3560>
    b7bc:	add	r0, pc, r0
    b7c0:	bx	lr
    b7c4:	ldr	r0, [pc, #952]	; bb84 <bt_compidtostr@@Base+0x3564>
    b7c8:	add	r0, pc, r0
    b7cc:	bx	lr
    b7d0:	ldr	r0, [pc, #944]	; bb88 <bt_compidtostr@@Base+0x3568>
    b7d4:	add	r0, pc, r0
    b7d8:	bx	lr
    b7dc:	ldr	r0, [pc, #936]	; bb8c <bt_compidtostr@@Base+0x356c>
    b7e0:	add	r0, pc, r0
    b7e4:	bx	lr
    b7e8:	ldr	r0, [pc, #928]	; bb90 <bt_compidtostr@@Base+0x3570>
    b7ec:	add	r0, pc, r0
    b7f0:	bx	lr
    b7f4:	ldr	r0, [pc, #920]	; bb94 <bt_compidtostr@@Base+0x3574>
    b7f8:	add	r0, pc, r0
    b7fc:	bx	lr
    b800:	ldr	r0, [pc, #912]	; bb98 <bt_compidtostr@@Base+0x3578>
    b804:	add	r0, pc, r0
    b808:	bx	lr
    b80c:	ldr	r0, [pc, #904]	; bb9c <bt_compidtostr@@Base+0x357c>
    b810:	add	r0, pc, r0
    b814:	bx	lr
    b818:	ldr	r0, [pc, #896]	; bba0 <bt_compidtostr@@Base+0x3580>
    b81c:	add	r0, pc, r0
    b820:	bx	lr
    b824:	ldr	r0, [pc, #888]	; bba4 <bt_compidtostr@@Base+0x3584>
    b828:	add	r0, pc, r0
    b82c:	bx	lr
    b830:	ldr	r0, [pc, #880]	; bba8 <bt_compidtostr@@Base+0x3588>
    b834:	add	r0, pc, r0
    b838:	bx	lr
    b83c:	ldr	r0, [pc, #872]	; bbac <bt_compidtostr@@Base+0x358c>
    b840:	add	r0, pc, r0
    b844:	bx	lr
    b848:	ldr	r0, [pc, #864]	; bbb0 <bt_compidtostr@@Base+0x3590>
    b84c:	add	r0, pc, r0
    b850:	bx	lr
    b854:	ldr	r0, [pc, #856]	; bbb4 <bt_compidtostr@@Base+0x3594>
    b858:	add	r0, pc, r0
    b85c:	bx	lr
    b860:	ldr	r0, [pc, #848]	; bbb8 <bt_compidtostr@@Base+0x3598>
    b864:	add	r0, pc, r0
    b868:	bx	lr
    b86c:	ldr	r0, [pc, #840]	; bbbc <bt_compidtostr@@Base+0x359c>
    b870:	add	r0, pc, r0
    b874:	bx	lr
    b878:	ldr	r0, [pc, #832]	; bbc0 <bt_compidtostr@@Base+0x35a0>
    b87c:	add	r0, pc, r0
    b880:	bx	lr
    b884:	ldr	r0, [pc, #824]	; bbc4 <bt_compidtostr@@Base+0x35a4>
    b888:	add	r0, pc, r0
    b88c:	bx	lr
    b890:	ldr	r0, [pc, #816]	; bbc8 <bt_compidtostr@@Base+0x35a8>
    b894:	add	r0, pc, r0
    b898:	bx	lr
    b89c:	ldr	r0, [pc, #808]	; bbcc <bt_compidtostr@@Base+0x35ac>
    b8a0:	add	r0, pc, r0
    b8a4:	bx	lr
    b8a8:	ldr	r0, [pc, #800]	; bbd0 <bt_compidtostr@@Base+0x35b0>
    b8ac:	add	r0, pc, r0
    b8b0:	bx	lr
    b8b4:	ldr	r0, [pc, #792]	; bbd4 <bt_compidtostr@@Base+0x35b4>
    b8b8:	add	r0, pc, r0
    b8bc:	bx	lr
    b8c0:	ldr	r0, [pc, #784]	; bbd8 <bt_compidtostr@@Base+0x35b8>
    b8c4:	add	r0, pc, r0
    b8c8:	bx	lr
    b8cc:	ldr	r0, [pc, #776]	; bbdc <bt_compidtostr@@Base+0x35bc>
    b8d0:	add	r0, pc, r0
    b8d4:	bx	lr
    b8d8:	ldr	r0, [pc, #768]	; bbe0 <bt_compidtostr@@Base+0x35c0>
    b8dc:	add	r0, pc, r0
    b8e0:	bx	lr
    b8e4:	ldr	r0, [pc, #760]	; bbe4 <bt_compidtostr@@Base+0x35c4>
    b8e8:	add	r0, pc, r0
    b8ec:	bx	lr
    b8f0:	ldr	r0, [pc, #752]	; bbe8 <bt_compidtostr@@Base+0x35c8>
    b8f4:	add	r0, pc, r0
    b8f8:	bx	lr
    b8fc:	ldr	r0, [pc, #744]	; bbec <bt_compidtostr@@Base+0x35cc>
    b900:	add	r0, pc, r0
    b904:	bx	lr
    b908:	ldr	r0, [pc, #736]	; bbf0 <bt_compidtostr@@Base+0x35d0>
    b90c:	add	r0, pc, r0
    b910:	bx	lr
    b914:	ldr	r0, [pc, #728]	; bbf4 <bt_compidtostr@@Base+0x35d4>
    b918:	add	r0, pc, r0
    b91c:	bx	lr
    b920:	ldr	r0, [pc, #720]	; bbf8 <bt_compidtostr@@Base+0x35d8>
    b924:	add	r0, pc, r0
    b928:	bx	lr
    b92c:	ldr	r0, [pc, #712]	; bbfc <bt_compidtostr@@Base+0x35dc>
    b930:	add	r0, pc, r0
    b934:	bx	lr
    b938:	ldr	r0, [pc, #704]	; bc00 <bt_compidtostr@@Base+0x35e0>
    b93c:	add	r0, pc, r0
    b940:	bx	lr
    b944:	ldr	r0, [pc, #696]	; bc04 <bt_compidtostr@@Base+0x35e4>
    b948:	add	r0, pc, r0
    b94c:	bx	lr
    b950:	ldr	r0, [pc, #688]	; bc08 <bt_compidtostr@@Base+0x35e8>
    b954:	add	r0, pc, r0
    b958:	bx	lr
    b95c:	ldr	r0, [pc, #680]	; bc0c <bt_compidtostr@@Base+0x35ec>
    b960:	add	r0, pc, r0
    b964:	bx	lr
    b968:	ldr	r0, [pc, #672]	; bc10 <bt_compidtostr@@Base+0x35f0>
    b96c:	add	r0, pc, r0
    b970:	bx	lr
    b974:	ldr	r0, [pc, #664]	; bc14 <bt_compidtostr@@Base+0x35f4>
    b978:	add	r0, pc, r0
    b97c:	bx	lr
    b980:	ldr	r0, [pc, #656]	; bc18 <bt_compidtostr@@Base+0x35f8>
    b984:	add	r0, pc, r0
    b988:	bx	lr
    b98c:	ldr	r0, [pc, #648]	; bc1c <bt_compidtostr@@Base+0x35fc>
    b990:	add	r0, pc, r0
    b994:	bx	lr
    b998:	andeq	ip, r0, r8, lsr #21
    b99c:	andeq	ip, r0, r8, ror #22
    b9a0:	andeq	r8, r0, r4, lsr #23
    b9a4:	andeq	ip, r0, r8, ror #31
    b9a8:	andeq	ip, r0, r4, lsr sp
    b9ac:			; <UNDEFINED> instruction: 0x0000cbb0
    b9b0:	andeq	ip, r0, ip, asr #21
    b9b4:	andeq	ip, r0, r8, ror sl
    b9b8:	andeq	ip, r0, r0, ror #21
    b9bc:	andeq	ip, r0, r8, lsr #23
    b9c0:	andeq	ip, r0, r4, asr #22
    b9c4:	andeq	ip, r0, r4, asr #23
    b9c8:	andeq	ip, r0, ip, ror #25
    b9cc:	andeq	ip, r0, r8, lsr #24
    b9d0:	andeq	ip, r0, ip, asr #23
    b9d4:	andeq	ip, r0, r8, asr #24
    b9d8:	ldrdeq	ip, [r0], -r8
    b9dc:	andeq	ip, r0, r0, ror ip
    b9e0:	andeq	ip, r0, r0, lsl #26
    b9e4:	andeq	r8, r0, r4, ror r8
    b9e8:	andeq	sp, r0, r0, lsr #4
    b9ec:	andeq	ip, r0, r0, lsr pc
    b9f0:	andeq	ip, r0, r4, asr #27
    b9f4:	andeq	ip, r0, r8, ror #25
    b9f8:	andeq	ip, r0, ip, ror #24
    b9fc:	andeq	ip, r0, r4, lsl sp
    ba00:	andeq	ip, r0, r8, asr #27
    ba04:	andeq	ip, r0, r8, ror sp
    ba08:	ldrdeq	ip, [r0], -r8
    ba0c:	andeq	ip, r0, ip, lsl pc
    ba10:	andeq	ip, r0, r0, ror #28
    ba14:	andeq	ip, r0, r4, lsl #28
    ba18:	andeq	ip, r0, r8, ror #28
    ba1c:	andeq	ip, r0, r8, lsr pc
    ba20:	ldrdeq	ip, [r0], -r8
    ba24:	andeq	ip, r0, r4, asr pc
    ba28:	andeq	r8, r0, r0, ror #11
    ba2c:	andeq	sp, r0, r8, ror r4
    ba30:	andeq	sp, r0, r8, asr #2
    ba34:			; <UNDEFINED> instruction: 0x0000cfb0
    ba38:	andeq	ip, r0, r0, lsl #30
    ba3c:	andeq	ip, r0, r4, lsr #29
    ba40:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    ba44:	andeq	ip, r0, r4, asr #31
    ba48:	andeq	ip, r0, r4, asr pc
    ba4c:	strdeq	ip, [r0], -r0
    ba50:	andeq	sp, r0, r0, lsr #2
    ba54:	andeq	sp, r0, r4, asr r0
    ba58:	ldrdeq	ip, [r0], -r4
    ba5c:	andeq	sp, r0, r4, ror r0
    ba60:	andeq	sp, r0, ip, lsr r1
    ba64:	strheq	sp, [r0], -ip
    ba68:	andeq	sp, r0, r4, asr r1
    ba6c:	andeq	r8, r0, r4, asr #5
    ba70:	andeq	sp, r0, r8, ror r6
    ba74:	andeq	sp, r0, r8, lsl #7
    ba78:	andeq	sp, r0, ip, ror #3
    ba7c:	andeq	sp, r0, r0, lsr r1
    ba80:	ldrdeq	sp, [r0], -r0
    ba84:	andeq	sp, r0, r4, asr r1
    ba88:	andeq	sp, r0, r4, lsr #4
    ba8c:	andeq	sp, r0, r0, lsr #3
    ba90:	andeq	sp, r0, r0, lsr r2
    ba94:	andeq	sp, r0, r4, lsr #7
    ba98:	ldrdeq	sp, [r0], -r8
    ba9c:	andeq	sp, r0, r4, ror r2
    baa0:	strdeq	sp, [r0], -r4
    baa4:	andeq	sp, r0, r8, asr #7
    baa8:	andeq	sp, r0, r8, asr #6
    baac:	andeq	sp, r0, r0, ror #7
    bab0:	andeq	r8, r0, r4, lsr #32
    bab4:	andeq	sl, r0, r8, lsl fp
    bab8:	andeq	r9, r0, r0, lsl #13
    babc:	andeq	r8, r0, ip, asr #22
    bac0:	andeq	r8, r0, r8, asr r5
    bac4:	andeq	r8, r0, r4, asr #4
    bac8:	strdeq	r8, [r0], -ip
    bacc:	andeq	r8, r0, ip, lsr r0
    bad0:	andeq	r8, r0, r0
    bad4:	strdeq	sp, [r0], -r0
    bad8:	ldrdeq	r7, [r0], -ip
    badc:	strdeq	r7, [r0], -r8
    bae0:	strdeq	r7, [r0], -r4
    bae4:	andeq	r8, r0, ip, lsr r0
    bae8:	strdeq	r7, [r0], -ip
    baec:	andeq	r8, r0, ip
    baf0:	andeq	r8, r0, r8, lsr r0
    baf4:	andeq	r8, r0, r4, asr #32
    baf8:	andeq	r8, r0, ip, lsl #2
    bafc:	andeq	r8, r0, r8, lsr #1
    bb00:	andeq	r8, r0, r0, lsl #1
    bb04:	andeq	r8, r0, r4, lsl #1
    bb08:	strheq	r8, [r0], -r8	; <UNPREDICTABLE>
    bb0c:	strheq	r8, [r0], -ip
    bb10:	andeq	r8, r0, r4, lsl r1
    bb14:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bb18:	andeq	r8, r0, ip, ror #1
    bb1c:	andeq	r8, r0, r4, lsr #2
    bb20:	andeq	r8, r0, r4, lsr #2
    bb24:	andeq	r8, r0, r8, ror #4
    bb28:	andeq	r8, r0, r4, asr #3
    bb2c:	andeq	r8, r0, r8, asr #2
    bb30:	andeq	r8, r0, ip, lsl r1
    bb34:	andeq	r8, r0, r0, lsr #2
    bb38:	andeq	r8, r0, ip, asr #2
    bb3c:	andeq	r8, r0, r8, ror r1
    bb40:	andeq	r8, r0, r8, asr #3
    bb44:	muleq	r0, r4, r1
    bb48:	muleq	r0, r4, r1
    bb4c:	andeq	r8, r0, ip, asr #3
    bb50:	ldrdeq	r8, [r0], -r4
    bb54:	andeq	r8, r0, r8, lsr #5
    bb58:	andeq	r8, r0, r4, lsr #4
    bb5c:	andeq	r8, r0, ip, ror #3
    bb60:	strdeq	r8, [r0], -r0
    bb64:	andeq	r8, r0, ip, lsr r2
    bb68:	andeq	r8, r0, ip, asr #4
    bb6c:	ldrdeq	r8, [r0], -r0
    bb70:	andeq	r8, r0, r4, ror r2
    bb74:	andeq	r8, r0, ip, lsl #5
    bb78:	strdeq	r8, [r0], -r4
    bb7c:			; <UNDEFINED> instruction: 0x000082b4
    bb80:	andeq	r8, r0, ip, ror #5
    bb84:	andeq	r8, r0, ip, lsl r6
    bb88:	andeq	r8, r0, r4, lsl #9
    bb8c:			; <UNDEFINED> instruction: 0x000083b4
    bb90:	andeq	r8, r0, ip, asr r3
    bb94:	andeq	r8, r0, r0, lsr #6
    bb98:	andeq	r8, r0, r8, lsr r3
    bb9c:	andeq	r8, r0, r8, ror #6
    bba0:	andeq	r8, r0, ip, ror #6
    bba4:	ldrdeq	r8, [r0], -ip
    bba8:	muleq	r0, r4, r3
    bbac:	andeq	r8, r0, r4, lsr #7
    bbb0:	andeq	r8, r0, r4, ror #7
    bbb4:	andeq	r8, r0, ip, ror #7
    bbb8:			; <UNDEFINED> instruction: 0x000084b4
    bbbc:	andeq	r8, r0, r4, lsr r4
    bbc0:	andeq	r8, r0, r8, lsl #8
    bbc4:	andeq	r8, r0, ip, lsl #8
    bbc8:	andeq	r8, r0, r8, lsr r4
    bbcc:	andeq	r8, r0, r0, asr r4
    bbd0:	ldrdeq	r8, [r0], -r0
    bbd4:	andeq	r8, r0, r8, lsl #9
    bbd8:	muleq	r0, r8, r4
    bbdc:	andeq	r8, r0, ip, ror #9
    bbe0:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bbe4:	andeq	r8, r0, r8, asr #12
    bbe8:	muleq	r0, r0, r5
    bbec:	andeq	r8, r0, r0, lsr r5
    bbf0:	andeq	r8, r0, r4, lsl #10
    bbf4:	andeq	r8, r0, r8, lsl #10
    bbf8:	andeq	r8, r0, r0, asr #10
    bbfc:	andeq	r8, r0, r4, asr #10
    bc00:	muleq	r0, r4, r5
    bc04:	andeq	r8, r0, r4, ror #10
    bc08:	andeq	r8, r0, r8, ror #10
    bc0c:	andeq	r8, r0, r0, lsr #11
    bc10:			; <UNDEFINED> instruction: 0x000085b8
    bc14:	andeq	r8, r0, r4, ror r6
    bc18:	andeq	r8, r0, ip, lsl #12
    bc1c:	andeq	r8, r0, r0, asr #11
    bc20:	andeq	r7, r0, r4, lsl #28
    bc24:	andeq	r7, r0, r8, lsr lr
    bc28:	andeq	r7, r0, r8, asr #28
    bc2c:	muleq	r0, ip, lr
    bc30:	andeq	r7, r0, ip, asr lr
    bc34:	andeq	r7, r0, ip, ror #28
    bc38:	andeq	r7, r0, r4, lsr #29
    bc3c:	andeq	r7, r0, ip, ror lr
    bc40:			; <UNDEFINED> instruction: 0x00007eb0
    bc44:	andeq	r8, r0, r0, lsl #10
    bc48:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bc4c:	andeq	r8, r0, r4, rrx
    bc50:	andeq	r7, r0, r8, asr pc
    bc54:	andeq	r7, r0, r8, lsl #30
    bc58:	andeq	r7, r0, ip, asr #29
    bc5c:	ldrdeq	r7, [r0], -ip
    bc60:	andeq	r7, r0, r4, lsl #30
    bc64:	andeq	r7, r0, r4, lsl pc
    bc68:	muleq	r0, r8, pc	; <UNPREDICTABLE>
    bc6c:	andeq	r7, r0, ip, lsl pc
    bc70:	andeq	r7, r0, r0, lsr pc
    bc74:	muleq	r0, r4, pc	; <UNPREDICTABLE>
    bc78:	andeq	r7, r0, r4, asr #31
    bc7c:	muleq	r0, r4, r0
    bc80:	andeq	r8, r0, r8, lsr r0
    bc84:	strdeq	r7, [r0], -r8
    bc88:	andeq	r8, r0, r8
    bc8c:	andeq	r8, r0, r0, asr #32
    bc90:	andeq	r8, r0, r8, asr #32
    bc94:	andeq	r8, r0, r0, asr #1
    bc98:	andeq	r8, r0, r0, ror r0
    bc9c:	muleq	r0, r8, r0
    bca0:	andeq	r8, r0, r0, asr #1
    bca4:	andeq	r8, r0, r0, asr #1
    bca8:	andeq	r8, r0, ip, lsr #4
    bcac:	andeq	r8, r0, ip, ror #2
    bcb0:	andeq	r8, r0, r0, lsl r1
    bcb4:	andeq	r8, r0, r8, ror #1
    bcb8:	andeq	r8, r0, ip, ror #1
    bcbc:	andeq	r8, r0, r4, lsl r1
    bcc0:	andeq	r8, r0, ip, lsl r1
    bcc4:	andeq	r8, r0, r8, lsl #3
    bcc8:	andeq	r8, r0, r0, asr #2
    bccc:	andeq	r8, r0, r8, asr r1
    bcd0:	muleq	r0, r0, r1
    bcd4:	andeq	r8, r0, ip, lsl #3
    bcd8:	andeq	r8, r0, r8, asr r2
    bcdc:	strdeq	r8, [r0], -r4
    bce0:	andeq	r8, r0, ip, lsr #3
    bce4:	andeq	r8, r0, r0, asr #3
    bce8:	strdeq	r8, [r0], -r4
    bcec:	strdeq	r8, [r0], -r4
    bcf0:	andeq	r8, r0, r0, ror r2
    bcf4:	andeq	r8, r0, r8, lsr r2
    bcf8:	andeq	r8, r0, r8, asr #4
    bcfc:	andeq	r8, r0, r0, ror r2
    bd00:	andeq	r8, r0, r4, asr r2
    bd04:	andeq	r8, r0, r4, ror r2
    bd08:	andeq	r8, r0, r4, lsl r5
    bd0c:	andeq	r8, r0, r8, lsr #7
    bd10:	andeq	r8, r0, ip, lsl #6
    bd14:	ldrdeq	r8, [r0], -r4
    bd18:	muleq	r0, ip, r2
    bd1c:	andeq	r8, r0, r0, lsr #5
    bd20:	andeq	r8, r0, r8, asr #5
    bd24:	andeq	r8, r0, r8, asr #5
    bd28:	andeq	r8, r0, r8, lsl #6
    bd2c:	andeq	r8, r0, ip, asr #5
    bd30:	ldrdeq	r8, [r0], -r4
    bd34:	andeq	r8, r0, r4, lsl #6
    bd38:	andeq	r8, r0, r8, lsl #6
    bd3c:	strdeq	r8, [r0], -ip
    bd40:	andeq	r8, r0, ip, ror r3
    bd44:	andeq	r8, r0, r4, asr #6
    bd48:	andeq	r8, r0, r4, asr #6
    bd4c:	andeq	r8, r0, ip, lsl #7
    bd50:	andeq	r8, r0, r8, lsr #7
    bd54:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bd58:	andeq	r8, r0, r4, asr #7
    bd5c:	andeq	r8, r0, ip, asr #7
    bd60:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bd64:	strdeq	r8, [r0], -r4
    bd68:	andeq	r8, r0, ip, asr #10
    bd6c:	andeq	r8, r0, r0, lsl #9
    bd70:	andeq	r8, r0, r4, lsr r4
    bd74:	strdeq	r8, [r0], -r4
    bd78:	strdeq	r8, [r0], -ip
    bd7c:	andeq	r8, r0, ip, lsr #8
    bd80:	andeq	r8, r0, r4, lsr r4
    bd84:	muleq	r0, r8, r4
    bd88:	andeq	r8, r0, r0, ror #8
    bd8c:	andeq	r8, r0, ip, ror #8
    bd90:	andeq	r8, r0, r8, lsr #9
    bd94:	andeq	r8, r0, ip, lsr #9
    bd98:	andeq	r8, r0, r0, ror r5
    bd9c:	andeq	r8, r0, r8, lsl r5
    bda0:	andeq	r8, r0, ip, ror #9
    bda4:	strdeq	r8, [r0], -r0
    bda8:	andeq	r8, r0, r0, lsr #10
    bdac:	andeq	r8, r0, r8, lsr #10
    bdb0:	andeq	r6, r0, r8, lsl sp
    bdb4:	andeq	r8, r0, ip, lsr r5
    bdb8:	andeq	r8, r0, r4, asr #10
    bdbc:	andeq	r8, r0, r0, ror #10
    bdc0:	andeq	r8, r0, r0, asr #10
    bdc4:	andeq	r8, r0, r0, ror #10
    bdc8:	andeq	r8, r0, ip, lsr #31
    bdcc:			; <UNDEFINED> instruction: 0x00008ab8
    bdd0:	strdeq	r8, [r0], -r0
    bdd4:			; <UNDEFINED> instruction: 0x000086bc
    bdd8:	andeq	r8, r0, r8, lsl r6
    bddc:			; <UNDEFINED> instruction: 0x000085b8
    bde0:	andeq	r8, r0, r0, ror #10
    bde4:	andeq	r8, r0, r0, lsl #11
    bde8:	ldrdeq	r8, [r0], -r0
    bdec:	andeq	r8, r0, ip, asr #11
    bdf0:	andeq	r8, r0, r0, lsl r6
    bdf4:	andeq	r8, r0, r8, ror #11
    bdf8:	strdeq	r8, [r0], -r0
    bdfc:	andeq	r8, r0, r8, lsr #12
    be00:	andeq	r8, r0, ip, lsr #12
    be04:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    be08:	andeq	r8, r0, ip, ror #12
    be0c:	andeq	r8, r0, r0, asr #12
    be10:	andeq	r8, r0, r0, asr #12
    be14:	andeq	r8, r0, r8, ror r6
    be18:	andeq	r8, r0, r8, lsl #13
    be1c:	andeq	r8, r0, r4, asr #13
    be20:	muleq	r0, ip, r6
    be24:	muleq	r0, ip, r6
    be28:			; <UNDEFINED> instruction: 0x000086bc
    be2c:	andeq	r8, r0, ip, asr #13
    be30:	andeq	r8, r0, r4, lsl #16
    be34:	andeq	r8, r0, ip, asr r7
    be38:	andeq	r8, r0, r8, ror #13
    be3c:	andeq	r8, r0, r4, asr #13
    be40:	andeq	r8, r0, r0, asr #13
    be44:	strdeq	r8, [r0], -r4
    be48:	strdeq	r8, [r0], -ip
    be4c:	andeq	r8, r0, r4, asr r7
    be50:	andeq	r8, r0, r8, lsr #14
    be54:	andeq	r8, r0, r0, lsr r7
    be58:	andeq	r8, r0, ip, asr r7
    be5c:	andeq	r8, r0, r4, ror r7
    be60:	andeq	r8, r0, r0, asr #16
    be64:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    be68:	muleq	r0, r0, r7
    be6c:	muleq	r0, r4, r7
    be70:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    be74:	andeq	r8, r0, r8, ror #15
    be78:	andeq	r8, r0, r0, asr #16
    be7c:	andeq	r8, r0, r8, lsl r8
    be80:	andeq	r8, r0, ip, lsl r8
    be84:	andeq	r8, r0, ip, asr r8
    be88:	andeq	r8, r0, ip, lsr #16
    be8c:	andeq	r8, r0, r4, asr r8
    be90:			; <UNDEFINED> instruction: 0x00008ab8
    be94:	andeq	r8, r0, r4, lsl #19
    be98:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    be9c:	andeq	r8, r0, r8, lsl #17
    bea0:	andeq	r8, r0, r0, ror #16
    bea4:	andeq	r8, r0, ip, asr r8
    bea8:	andeq	r8, r0, r8, lsl #17
    beac:	muleq	r0, r0, r8
    beb0:	andeq	r8, r0, r8, ror #17
    beb4:			; <UNDEFINED> instruction: 0x000088bc
    beb8:	andeq	r8, r0, r0, asr #17
    bebc:	andeq	r8, r0, r0, ror #17
    bec0:	strdeq	r8, [r0], -r4
    bec4:	muleq	r0, r8, r9
    bec8:	andeq	r8, r0, r4, asr #18
    becc:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bed0:	strdeq	r8, [r0], -ip
    bed4:	andeq	r8, r0, r0, asr #18
    bed8:	andeq	r8, r0, r0, asr #18
    bedc:	muleq	r0, ip, r9
    bee0:	andeq	r8, r0, r4, ror #18
    bee4:	andeq	r8, r0, r4, ror r9
    bee8:	andeq	r8, r0, r8, lsl #19
    beec:	muleq	r0, r0, r9
    bef0:	andeq	r8, r0, r8, lsl #22
    bef4:	andeq	r8, r0, r8, asr sl
    bef8:	andeq	r8, r0, ip, lsl #20
    befc:	ldrdeq	r8, [r0], -ip
    bf00:	andeq	r8, r0, r0, ror #19
    bf04:	andeq	r8, r0, r4, lsl #20
    bf08:	andeq	r8, r0, r4, lsl sl
    bf0c:	andeq	r8, r0, r8, asr #20
    bf10:	andeq	r8, r0, r0, lsr #20
    bf14:	andeq	r8, r0, r0, lsr #20
    bf18:	andeq	r8, r0, r8, asr sl
    bf1c:	andeq	r8, r0, r4, ror sl
    bf20:	andeq	r8, r0, r0, lsl fp
    bf24:	andeq	r8, r0, r8, lsr #21
    bf28:	andeq	r8, r0, r4, lsl #21
    bf2c:	andeq	r8, r0, r4, lsl #21
    bf30:	andeq	r8, r0, r0, asr #21
    bf34:	andeq	r8, r0, r8, asr #21
    bf38:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bf3c:	ldrdeq	r8, [r0], -r4
    bf40:	ldrdeq	r8, [r0], -r4
    bf44:	andeq	r8, r0, r0, lsl fp
    bf48:	andeq	r8, r0, r4, ror #21
    bf4c:	andeq	r8, r0, r8, lsl #22
    bf50:	andeq	r9, r0, ip, lsr #32
    bf54:	muleq	r0, r0, sp
    bf58:	andeq	r8, r0, ip, asr #24
    bf5c:	muleq	r0, r0, fp
    bf60:	andeq	r8, r0, r8, lsr #22
    bf64:	strdeq	r8, [r0], -ip
    bf68:	andeq	r8, r0, r4, lsl #22
    bf6c:	andeq	r8, r0, r0, asr #22
    bf70:	andeq	r8, r0, ip, asr #22
    bf74:	andeq	r8, r0, r4, lsr #23
    bf78:	andeq	r8, r0, r4, ror #22
    bf7c:	andeq	r8, r0, ip, ror #22
    bf80:	andeq	r8, r0, r0, lsr #23
    bf84:	andeq	r8, r0, ip, lsr #23
    bf88:	andeq	r8, r0, r4, ror ip
    bf8c:	andeq	r8, r0, r8, lsl #24
    bf90:	andeq	r8, r0, r0, asr #23
    bf94:	andeq	r8, r0, r4, asr #23
    bf98:	andeq	r8, r0, r0, lsr #24
    bf9c:	andeq	r8, r0, r4, lsr #24
    bfa0:	andeq	r8, r0, r0, ror ip
    bfa4:	andeq	r8, r0, r4, lsr ip
    bfa8:	andeq	r8, r0, r8, lsr ip
    bfac:	andeq	r8, r0, r8, ror #24
    bfb0:	andeq	r8, r0, r4, ror #24
    bfb4:			; <UNDEFINED> instruction: 0x00008db0
    bfb8:	strdeq	r8, [r0], -ip
    bfbc:	andeq	r8, r0, r0, lsr #25
    bfc0:	andeq	r8, r0, r4, ror ip
    bfc4:	andeq	r8, r0, r0, lsl #25
    bfc8:	andeq	r8, r0, r4, lsr #25
    bfcc:	andeq	r8, r0, r8, lsr #25
    bfd0:	andeq	r8, r0, ip, lsl sp
    bfd4:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    bfd8:	andeq	r8, r0, r8, ror #25
    bfdc:	andeq	r8, r0, r8, lsl sp
    bfe0:	andeq	r8, r0, r8, lsl sp
    bfe4:	andeq	r8, r0, r0, asr #27
    bfe8:	andeq	r8, r0, r0, ror #26
    bfec:	andeq	r8, r0, ip, lsr #26
    bff0:	andeq	r8, r0, ip, lsr sp
    bff4:	andeq	r8, r0, ip, asr sp
    bff8:	andeq	r8, r0, r4, ror sp
    bffc:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c000:	muleq	r0, r4, sp
    c004:			; <UNDEFINED> instruction: 0x00008db0
    c008:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c00c:			; <UNDEFINED> instruction: 0x00008db8
    c010:	andeq	r8, r0, r8, asr #27
    c014:	andeq	r9, r0, r0, asr #32
    c018:	andeq	r8, r0, r4, ror #29
    c01c:	andeq	r8, r0, r8, asr lr
    c020:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c024:	ldrdeq	r8, [r0], -r0
    c028:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c02c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    c030:	strdeq	r8, [r0], -ip
    c034:	andeq	r8, r0, r0, asr lr
    c038:	andeq	r8, r0, r4, lsr #28
    c03c:	andeq	r8, r0, r0, lsr lr
    c040:	andeq	r8, r0, r0, asr lr
    c044:	andeq	r8, r0, r4, asr lr
    c048:	andeq	r8, r0, r0, lsl pc
    c04c:	muleq	r0, ip, lr
    c050:	andeq	r8, r0, r8, ror #28
    c054:	andeq	r8, r0, r0, ror lr
    c058:	andeq	r8, r0, r8, lsr #29
    c05c:	andeq	r8, r0, ip, lsr #29
    c060:	andeq	r8, r0, r4, lsl pc
    c064:	strdeq	r8, [r0], -r0
    c068:	strdeq	r8, [r0], -r0
    c06c:	andeq	r8, r0, r0, lsl pc
    c070:	andeq	r8, r0, r8, lsl pc
    c074:	andeq	r9, r0, ip, ror r0
    c078:	andeq	r8, r0, r0, asr #31
    c07c:	andeq	r8, r0, ip, asr #30
    c080:	andeq	r8, r0, ip, lsr #30
    c084:	andeq	r8, r0, r8, lsr #30
    c088:	andeq	r8, r0, r8, asr pc
    c08c:	andeq	r8, r0, r4, ror pc
    c090:	ldrdeq	r8, [r0], -r4
    c094:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    c098:	muleq	r0, ip, pc	; <UNPREDICTABLE>
    c09c:	ldrdeq	r8, [r0], -r4
    c0a0:	andeq	r8, r0, r0, ror #31
    c0a4:	andeq	r9, r0, ip, lsr #1
    c0a8:	andeq	r9, r0, r8, asr #32
    c0ac:	strdeq	r8, [r0], -r4
    c0b0:	andeq	r9, r0, r0, lsr #32
    c0b4:	andeq	r9, r0, r4, asr #32
    c0b8:	andeq	r9, r0, ip, asr #32
    c0bc:	ldrdeq	r9, [r0], -r4
    c0c0:	muleq	r0, r4, r0
    c0c4:	strheq	r9, [r0], -r0
    c0c8:	andeq	r9, r0, r8, asr #1
    c0cc:	strheq	r9, [r0], -r0
    c0d0:	andeq	r9, r0, r0, asr #1
    c0d4:	andeq	sl, r0, ip, lsl r6
    c0d8:	andeq	r9, r0, r8, lsr fp
    c0dc:	ldrdeq	r9, [r0], -r4
    c0e0:	andeq	r9, r0, r4, lsr #6
    c0e4:	strdeq	r9, [r0], -r4
    c0e8:	andeq	r9, r0, r0, asr r1
    c0ec:	ldrdeq	r9, [r0], -r4
    c0f0:	andeq	r9, r0, r4, lsr #1
    c0f4:	andeq	r9, r0, ip, lsr #1
    c0f8:	andeq	r9, r0, r8, ror #1
    c0fc:	strdeq	r9, [r0], -r8
    c100:	andeq	r9, r0, r4, asr r1
    c104:	andeq	r9, r0, r4, lsl r1
    c108:	andeq	r9, r0, r8, lsr #2
    c10c:	andeq	r9, r0, ip, asr r1
    c110:	andeq	r9, r0, r8, ror #2
    c114:	andeq	r9, r0, r0, ror #3
    c118:	muleq	r0, ip, r1
    c11c:	andeq	r9, r0, r8, ror #2
    c120:	andeq	r9, r0, ip, ror #2
    c124:	muleq	r0, ip, r1
    c128:	muleq	r0, r8, r1
    c12c:	strdeq	r9, [r0], -r0
    c130:			; <UNDEFINED> instruction: 0x000091bc
    c134:	andeq	r9, r0, r8, asr #3
    c138:	strdeq	r9, [r0], -r4
    c13c:	andeq	r9, r0, r0, lsl #4
    c140:	andeq	r9, r0, r4, ror r3
    c144:	muleq	r0, r0, r2
    c148:	andeq	r9, r0, r8, asr #4
    c14c:	andeq	r9, r0, ip, lsl #4
    c150:	andeq	r9, r0, r4, lsl r2
    c154:	andeq	r9, r0, ip, asr #4
    c158:	andeq	r9, r0, r8, asr #4
    c15c:			; <UNDEFINED> instruction: 0x000092b8
    c160:	andeq	r9, r0, ip, lsl #5
    c164:	andeq	r9, r0, r8, lsl #5
    c168:	andeq	r9, r0, r0, ror #5
    c16c:	andeq	r9, r0, r0, ror #5
    c170:	andeq	r9, r0, r0, lsl #7
    c174:	ldr	r0, [pc, #-1372]	; bc20 <bt_compidtostr@@Base+0x3600>
    c178:	add	r0, pc, r0
    c17c:	bx	lr
    c180:	ldr	r0, [pc, #-1380]	; bc24 <bt_compidtostr@@Base+0x3604>
    c184:	add	r0, pc, r0
    c188:	bx	lr
    c18c:	ldr	r0, [pc, #-1388]	; bc28 <bt_compidtostr@@Base+0x3608>
    c190:	add	r0, pc, r0
    c194:	bx	lr
    c198:	ldr	r0, [pc, #-1396]	; bc2c <bt_compidtostr@@Base+0x360c>
    c19c:	add	r0, pc, r0
    c1a0:	bx	lr
    c1a4:	ldr	r0, [pc, #-1404]	; bc30 <bt_compidtostr@@Base+0x3610>
    c1a8:	add	r0, pc, r0
    c1ac:	bx	lr
    c1b0:	ldr	r0, [pc, #-1412]	; bc34 <bt_compidtostr@@Base+0x3614>
    c1b4:	add	r0, pc, r0
    c1b8:	bx	lr
    c1bc:	ldr	r0, [pc, #-1420]	; bc38 <bt_compidtostr@@Base+0x3618>
    c1c0:	add	r0, pc, r0
    c1c4:	bx	lr
    c1c8:	ldr	r0, [pc, #-1428]	; bc3c <bt_compidtostr@@Base+0x361c>
    c1cc:	add	r0, pc, r0
    c1d0:	bx	lr
    c1d4:	ldr	r0, [pc, #-1436]	; bc40 <bt_compidtostr@@Base+0x3620>
    c1d8:	add	r0, pc, r0
    c1dc:	bx	lr
    c1e0:	ldr	r0, [pc, #-1444]	; bc44 <bt_compidtostr@@Base+0x3624>
    c1e4:	add	r0, pc, r0
    c1e8:	bx	lr
    c1ec:	ldr	r0, [pc, #-1452]	; bc48 <bt_compidtostr@@Base+0x3628>
    c1f0:	add	r0, pc, r0
    c1f4:	bx	lr
    c1f8:	ldr	r0, [pc, #-1460]	; bc4c <bt_compidtostr@@Base+0x362c>
    c1fc:	add	r0, pc, r0
    c200:	bx	lr
    c204:	ldr	r0, [pc, #-1468]	; bc50 <bt_compidtostr@@Base+0x3630>
    c208:	add	r0, pc, r0
    c20c:	bx	lr
    c210:	ldr	r0, [pc, #-1476]	; bc54 <bt_compidtostr@@Base+0x3634>
    c214:	add	r0, pc, r0
    c218:	bx	lr
    c21c:	ldr	r0, [pc, #-1484]	; bc58 <bt_compidtostr@@Base+0x3638>
    c220:	add	r0, pc, r0
    c224:	bx	lr
    c228:	ldr	r0, [pc, #-1492]	; bc5c <bt_compidtostr@@Base+0x363c>
    c22c:	add	r0, pc, r0
    c230:	bx	lr
    c234:	ldr	r0, [pc, #-1500]	; bc60 <bt_compidtostr@@Base+0x3640>
    c238:	add	r0, pc, r0
    c23c:	bx	lr
    c240:	ldr	r0, [pc, #-1508]	; bc64 <bt_compidtostr@@Base+0x3644>
    c244:	add	r0, pc, r0
    c248:	bx	lr
    c24c:	ldr	r0, [pc, #-1516]	; bc68 <bt_compidtostr@@Base+0x3648>
    c250:	add	r0, pc, r0
    c254:	bx	lr
    c258:	ldr	r0, [pc, #-1524]	; bc6c <bt_compidtostr@@Base+0x364c>
    c25c:	add	r0, pc, r0
    c260:	bx	lr
    c264:	ldr	r0, [pc, #-1532]	; bc70 <bt_compidtostr@@Base+0x3650>
    c268:	add	r0, pc, r0
    c26c:	bx	lr
    c270:	ldr	r0, [pc, #-1540]	; bc74 <bt_compidtostr@@Base+0x3654>
    c274:	add	r0, pc, r0
    c278:	bx	lr
    c27c:	ldr	r0, [pc, #-1548]	; bc78 <bt_compidtostr@@Base+0x3658>
    c280:	add	r0, pc, r0
    c284:	bx	lr
    c288:	ldr	r0, [pc, #-1556]	; bc7c <bt_compidtostr@@Base+0x365c>
    c28c:	add	r0, pc, r0
    c290:	bx	lr
    c294:	ldr	r0, [pc, #-1564]	; bc80 <bt_compidtostr@@Base+0x3660>
    c298:	add	r0, pc, r0
    c29c:	bx	lr
    c2a0:	ldr	r0, [pc, #-1572]	; bc84 <bt_compidtostr@@Base+0x3664>
    c2a4:	add	r0, pc, r0
    c2a8:	bx	lr
    c2ac:	ldr	r0, [pc, #-1580]	; bc88 <bt_compidtostr@@Base+0x3668>
    c2b0:	add	r0, pc, r0
    c2b4:	bx	lr
    c2b8:	ldr	r0, [pc, #-1588]	; bc8c <bt_compidtostr@@Base+0x366c>
    c2bc:	add	r0, pc, r0
    c2c0:	bx	lr
    c2c4:	ldr	r0, [pc, #-1596]	; bc90 <bt_compidtostr@@Base+0x3670>
    c2c8:	add	r0, pc, r0
    c2cc:	bx	lr
    c2d0:	ldr	r0, [pc, #-1604]	; bc94 <bt_compidtostr@@Base+0x3674>
    c2d4:	add	r0, pc, r0
    c2d8:	bx	lr
    c2dc:	ldr	r0, [pc, #-1612]	; bc98 <bt_compidtostr@@Base+0x3678>
    c2e0:	add	r0, pc, r0
    c2e4:	bx	lr
    c2e8:	ldr	r0, [pc, #-1620]	; bc9c <bt_compidtostr@@Base+0x367c>
    c2ec:	add	r0, pc, r0
    c2f0:	bx	lr
    c2f4:	ldr	r0, [pc, #-1628]	; bca0 <bt_compidtostr@@Base+0x3680>
    c2f8:	add	r0, pc, r0
    c2fc:	bx	lr
    c300:	ldr	r0, [pc, #-1636]	; bca4 <bt_compidtostr@@Base+0x3684>
    c304:	add	r0, pc, r0
    c308:	bx	lr
    c30c:	ldr	r0, [pc, #-1644]	; bca8 <bt_compidtostr@@Base+0x3688>
    c310:	add	r0, pc, r0
    c314:	bx	lr
    c318:	ldr	r0, [pc, #-1652]	; bcac <bt_compidtostr@@Base+0x368c>
    c31c:	add	r0, pc, r0
    c320:	bx	lr
    c324:	ldr	r0, [pc, #-1660]	; bcb0 <bt_compidtostr@@Base+0x3690>
    c328:	add	r0, pc, r0
    c32c:	bx	lr
    c330:	ldr	r0, [pc, #-1668]	; bcb4 <bt_compidtostr@@Base+0x3694>
    c334:	add	r0, pc, r0
    c338:	bx	lr
    c33c:	ldr	r0, [pc, #-1676]	; bcb8 <bt_compidtostr@@Base+0x3698>
    c340:	add	r0, pc, r0
    c344:	bx	lr
    c348:	ldr	r0, [pc, #-1684]	; bcbc <bt_compidtostr@@Base+0x369c>
    c34c:	add	r0, pc, r0
    c350:	bx	lr
    c354:	ldr	r0, [pc, #-1692]	; bcc0 <bt_compidtostr@@Base+0x36a0>
    c358:	add	r0, pc, r0
    c35c:	bx	lr
    c360:	ldr	r0, [pc, #-1700]	; bcc4 <bt_compidtostr@@Base+0x36a4>
    c364:	add	r0, pc, r0
    c368:	bx	lr
    c36c:	ldr	r0, [pc, #-1708]	; bcc8 <bt_compidtostr@@Base+0x36a8>
    c370:	add	r0, pc, r0
    c374:	bx	lr
    c378:	ldr	r0, [pc, #-1716]	; bccc <bt_compidtostr@@Base+0x36ac>
    c37c:	add	r0, pc, r0
    c380:	bx	lr
    c384:	ldr	r0, [pc, #-1724]	; bcd0 <bt_compidtostr@@Base+0x36b0>
    c388:	add	r0, pc, r0
    c38c:	bx	lr
    c390:	ldr	r0, [pc, #-1732]	; bcd4 <bt_compidtostr@@Base+0x36b4>
    c394:	add	r0, pc, r0
    c398:	bx	lr
    c39c:	ldr	r0, [pc, #-1740]	; bcd8 <bt_compidtostr@@Base+0x36b8>
    c3a0:	add	r0, pc, r0
    c3a4:	bx	lr
    c3a8:	ldr	r0, [pc, #-1748]	; bcdc <bt_compidtostr@@Base+0x36bc>
    c3ac:	add	r0, pc, r0
    c3b0:	bx	lr
    c3b4:	ldr	r0, [pc, #-1756]	; bce0 <bt_compidtostr@@Base+0x36c0>
    c3b8:	add	r0, pc, r0
    c3bc:	bx	lr
    c3c0:	ldr	r0, [pc, #-1764]	; bce4 <bt_compidtostr@@Base+0x36c4>
    c3c4:	add	r0, pc, r0
    c3c8:	bx	lr
    c3cc:	ldr	r0, [pc, #-1772]	; bce8 <bt_compidtostr@@Base+0x36c8>
    c3d0:	add	r0, pc, r0
    c3d4:	bx	lr
    c3d8:	ldr	r0, [pc, #-1780]	; bcec <bt_compidtostr@@Base+0x36cc>
    c3dc:	add	r0, pc, r0
    c3e0:	bx	lr
    c3e4:	ldr	r0, [pc, #-1788]	; bcf0 <bt_compidtostr@@Base+0x36d0>
    c3e8:	add	r0, pc, r0
    c3ec:	bx	lr
    c3f0:	ldr	r0, [pc, #-1796]	; bcf4 <bt_compidtostr@@Base+0x36d4>
    c3f4:	add	r0, pc, r0
    c3f8:	bx	lr
    c3fc:	ldr	r0, [pc, #-1804]	; bcf8 <bt_compidtostr@@Base+0x36d8>
    c400:	add	r0, pc, r0
    c404:	bx	lr
    c408:	ldr	r0, [pc, #-1812]	; bcfc <bt_compidtostr@@Base+0x36dc>
    c40c:	add	r0, pc, r0
    c410:	bx	lr
    c414:	ldr	r0, [pc, #-1820]	; bd00 <bt_compidtostr@@Base+0x36e0>
    c418:	add	r0, pc, r0
    c41c:	bx	lr
    c420:	ldr	r0, [pc, #-1828]	; bd04 <bt_compidtostr@@Base+0x36e4>
    c424:	add	r0, pc, r0
    c428:	bx	lr
    c42c:	ldr	r0, [pc, #-1836]	; bd08 <bt_compidtostr@@Base+0x36e8>
    c430:	add	r0, pc, r0
    c434:	bx	lr
    c438:	ldr	r0, [pc, #-1844]	; bd0c <bt_compidtostr@@Base+0x36ec>
    c43c:	add	r0, pc, r0
    c440:	bx	lr
    c444:	ldr	r0, [pc, #-1852]	; bd10 <bt_compidtostr@@Base+0x36f0>
    c448:	add	r0, pc, r0
    c44c:	bx	lr
    c450:	ldr	r0, [pc, #-1860]	; bd14 <bt_compidtostr@@Base+0x36f4>
    c454:	add	r0, pc, r0
    c458:	bx	lr
    c45c:	ldr	r0, [pc, #-1868]	; bd18 <bt_compidtostr@@Base+0x36f8>
    c460:	add	r0, pc, r0
    c464:	bx	lr
    c468:	ldr	r0, [pc, #-1876]	; bd1c <bt_compidtostr@@Base+0x36fc>
    c46c:	add	r0, pc, r0
    c470:	bx	lr
    c474:	ldr	r0, [pc, #-1884]	; bd20 <bt_compidtostr@@Base+0x3700>
    c478:	add	r0, pc, r0
    c47c:	bx	lr
    c480:	ldr	r0, [pc, #-1892]	; bd24 <bt_compidtostr@@Base+0x3704>
    c484:	add	r0, pc, r0
    c488:	bx	lr
    c48c:	ldr	r0, [pc, #-1900]	; bd28 <bt_compidtostr@@Base+0x3708>
    c490:	add	r0, pc, r0
    c494:	bx	lr
    c498:	ldr	r0, [pc, #-1908]	; bd2c <bt_compidtostr@@Base+0x370c>
    c49c:	add	r0, pc, r0
    c4a0:	bx	lr
    c4a4:	ldr	r0, [pc, #-1916]	; bd30 <bt_compidtostr@@Base+0x3710>
    c4a8:	add	r0, pc, r0
    c4ac:	bx	lr
    c4b0:	ldr	r0, [pc, #-1924]	; bd34 <bt_compidtostr@@Base+0x3714>
    c4b4:	add	r0, pc, r0
    c4b8:	bx	lr
    c4bc:	ldr	r0, [pc, #-1932]	; bd38 <bt_compidtostr@@Base+0x3718>
    c4c0:	add	r0, pc, r0
    c4c4:	bx	lr
    c4c8:	ldr	r0, [pc, #-1940]	; bd3c <bt_compidtostr@@Base+0x371c>
    c4cc:	add	r0, pc, r0
    c4d0:	bx	lr
    c4d4:	ldr	r0, [pc, #-1948]	; bd40 <bt_compidtostr@@Base+0x3720>
    c4d8:	add	r0, pc, r0
    c4dc:	bx	lr
    c4e0:	ldr	r0, [pc, #-1956]	; bd44 <bt_compidtostr@@Base+0x3724>
    c4e4:	add	r0, pc, r0
    c4e8:	bx	lr
    c4ec:	ldr	r0, [pc, #-1964]	; bd48 <bt_compidtostr@@Base+0x3728>
    c4f0:	add	r0, pc, r0
    c4f4:	bx	lr
    c4f8:	ldr	r0, [pc, #-1972]	; bd4c <bt_compidtostr@@Base+0x372c>
    c4fc:	add	r0, pc, r0
    c500:	bx	lr
    c504:	ldr	r0, [pc, #-1980]	; bd50 <bt_compidtostr@@Base+0x3730>
    c508:	add	r0, pc, r0
    c50c:	bx	lr
    c510:	ldr	r0, [pc, #-1988]	; bd54 <bt_compidtostr@@Base+0x3734>
    c514:	add	r0, pc, r0
    c518:	bx	lr
    c51c:	ldr	r0, [pc, #-1996]	; bd58 <bt_compidtostr@@Base+0x3738>
    c520:	add	r0, pc, r0
    c524:	bx	lr
    c528:	ldr	r0, [pc, #-2004]	; bd5c <bt_compidtostr@@Base+0x373c>
    c52c:	add	r0, pc, r0
    c530:	bx	lr
    c534:	ldr	r0, [pc, #-2012]	; bd60 <bt_compidtostr@@Base+0x3740>
    c538:	add	r0, pc, r0
    c53c:	bx	lr
    c540:	ldr	r0, [pc, #-2020]	; bd64 <bt_compidtostr@@Base+0x3744>
    c544:	add	r0, pc, r0
    c548:	bx	lr
    c54c:	ldr	r0, [pc, #-2028]	; bd68 <bt_compidtostr@@Base+0x3748>
    c550:	add	r0, pc, r0
    c554:	bx	lr
    c558:	ldr	r0, [pc, #-2036]	; bd6c <bt_compidtostr@@Base+0x374c>
    c55c:	add	r0, pc, r0
    c560:	bx	lr
    c564:	ldr	r0, [pc, #-2044]	; bd70 <bt_compidtostr@@Base+0x3750>
    c568:	add	r0, pc, r0
    c56c:	bx	lr
    c570:	ldr	r0, [pc, #-2052]	; bd74 <bt_compidtostr@@Base+0x3754>
    c574:	add	r0, pc, r0
    c578:	bx	lr
    c57c:	ldr	r0, [pc, #-2060]	; bd78 <bt_compidtostr@@Base+0x3758>
    c580:	add	r0, pc, r0
    c584:	bx	lr
    c588:	ldr	r0, [pc, #-2068]	; bd7c <bt_compidtostr@@Base+0x375c>
    c58c:	add	r0, pc, r0
    c590:	bx	lr
    c594:	ldr	r0, [pc, #-2076]	; bd80 <bt_compidtostr@@Base+0x3760>
    c598:	add	r0, pc, r0
    c59c:	bx	lr
    c5a0:	ldr	r0, [pc, #-2084]	; bd84 <bt_compidtostr@@Base+0x3764>
    c5a4:	add	r0, pc, r0
    c5a8:	bx	lr
    c5ac:	ldr	r0, [pc, #-2092]	; bd88 <bt_compidtostr@@Base+0x3768>
    c5b0:	add	r0, pc, r0
    c5b4:	bx	lr
    c5b8:	ldr	r0, [pc, #-2100]	; bd8c <bt_compidtostr@@Base+0x376c>
    c5bc:	add	r0, pc, r0
    c5c0:	bx	lr
    c5c4:	ldr	r0, [pc, #-2108]	; bd90 <bt_compidtostr@@Base+0x3770>
    c5c8:	add	r0, pc, r0
    c5cc:	bx	lr
    c5d0:	ldr	r0, [pc, #-2116]	; bd94 <bt_compidtostr@@Base+0x3774>
    c5d4:	add	r0, pc, r0
    c5d8:	bx	lr
    c5dc:	ldr	r0, [pc, #-2124]	; bd98 <bt_compidtostr@@Base+0x3778>
    c5e0:	add	r0, pc, r0
    c5e4:	bx	lr
    c5e8:	ldr	r0, [pc, #-2132]	; bd9c <bt_compidtostr@@Base+0x377c>
    c5ec:	add	r0, pc, r0
    c5f0:	bx	lr
    c5f4:	ldr	r0, [pc, #-2140]	; bda0 <bt_compidtostr@@Base+0x3780>
    c5f8:	add	r0, pc, r0
    c5fc:	bx	lr
    c600:	ldr	r0, [pc, #-2148]	; bda4 <bt_compidtostr@@Base+0x3784>
    c604:	add	r0, pc, r0
    c608:	bx	lr
    c60c:	ldr	r0, [pc, #-2156]	; bda8 <bt_compidtostr@@Base+0x3788>
    c610:	add	r0, pc, r0
    c614:	bx	lr
    c618:	ldr	r0, [pc, #-2164]	; bdac <bt_compidtostr@@Base+0x378c>
    c61c:	add	r0, pc, r0
    c620:	bx	lr
    c624:	ldr	r0, [pc, #-2172]	; bdb0 <bt_compidtostr@@Base+0x3790>
    c628:	add	r0, pc, r0
    c62c:	bx	lr
    c630:	ldr	r0, [pc, #-2180]	; bdb4 <bt_compidtostr@@Base+0x3794>
    c634:	add	r0, pc, r0
    c638:	bx	lr
    c63c:	ldr	r0, [pc, #-2188]	; bdb8 <bt_compidtostr@@Base+0x3798>
    c640:	add	r0, pc, r0
    c644:	bx	lr
    c648:	ldr	r0, [pc, #-2196]	; bdbc <bt_compidtostr@@Base+0x379c>
    c64c:	add	r0, pc, r0
    c650:	bx	lr
    c654:	ldr	r0, [pc, #-2204]	; bdc0 <bt_compidtostr@@Base+0x37a0>
    c658:	add	r0, pc, r0
    c65c:	bx	lr
    c660:	ldr	r0, [pc, #-2212]	; bdc4 <bt_compidtostr@@Base+0x37a4>
    c664:	add	r0, pc, r0
    c668:	bx	lr
    c66c:	ldr	r0, [pc, #-2220]	; bdc8 <bt_compidtostr@@Base+0x37a8>
    c670:	add	r0, pc, r0
    c674:	bx	lr
    c678:	ldr	r0, [pc, #-2228]	; bdcc <bt_compidtostr@@Base+0x37ac>
    c67c:	add	r0, pc, r0
    c680:	bx	lr
    c684:	ldr	r0, [pc, #-2236]	; bdd0 <bt_compidtostr@@Base+0x37b0>
    c688:	add	r0, pc, r0
    c68c:	bx	lr
    c690:	ldr	r0, [pc, #-2244]	; bdd4 <bt_compidtostr@@Base+0x37b4>
    c694:	add	r0, pc, r0
    c698:	bx	lr
    c69c:	ldr	r0, [pc, #-2252]	; bdd8 <bt_compidtostr@@Base+0x37b8>
    c6a0:	add	r0, pc, r0
    c6a4:	bx	lr
    c6a8:	ldr	r0, [pc, #-2260]	; bddc <bt_compidtostr@@Base+0x37bc>
    c6ac:	add	r0, pc, r0
    c6b0:	bx	lr
    c6b4:	ldr	r0, [pc, #-2268]	; bde0 <bt_compidtostr@@Base+0x37c0>
    c6b8:	add	r0, pc, r0
    c6bc:	bx	lr
    c6c0:	ldr	r0, [pc, #-2276]	; bde4 <bt_compidtostr@@Base+0x37c4>
    c6c4:	add	r0, pc, r0
    c6c8:	bx	lr
    c6cc:	ldr	r0, [pc, #-2284]	; bde8 <bt_compidtostr@@Base+0x37c8>
    c6d0:	add	r0, pc, r0
    c6d4:	bx	lr
    c6d8:	ldr	r0, [pc, #-2292]	; bdec <bt_compidtostr@@Base+0x37cc>
    c6dc:	add	r0, pc, r0
    c6e0:	bx	lr
    c6e4:	ldr	r0, [pc, #-2300]	; bdf0 <bt_compidtostr@@Base+0x37d0>
    c6e8:	add	r0, pc, r0
    c6ec:	bx	lr
    c6f0:	ldr	r0, [pc, #-2308]	; bdf4 <bt_compidtostr@@Base+0x37d4>
    c6f4:	add	r0, pc, r0
    c6f8:	bx	lr
    c6fc:	ldr	r0, [pc, #-2316]	; bdf8 <bt_compidtostr@@Base+0x37d8>
    c700:	add	r0, pc, r0
    c704:	bx	lr
    c708:	ldr	r0, [pc, #-2324]	; bdfc <bt_compidtostr@@Base+0x37dc>
    c70c:	add	r0, pc, r0
    c710:	bx	lr
    c714:	ldr	r0, [pc, #-2332]	; be00 <bt_compidtostr@@Base+0x37e0>
    c718:	add	r0, pc, r0
    c71c:	bx	lr
    c720:	ldr	r0, [pc, #-2340]	; be04 <bt_compidtostr@@Base+0x37e4>
    c724:	add	r0, pc, r0
    c728:	bx	lr
    c72c:	ldr	r0, [pc, #-2348]	; be08 <bt_compidtostr@@Base+0x37e8>
    c730:	add	r0, pc, r0
    c734:	bx	lr
    c738:	ldr	r0, [pc, #-2356]	; be0c <bt_compidtostr@@Base+0x37ec>
    c73c:	add	r0, pc, r0
    c740:	bx	lr
    c744:	ldr	r0, [pc, #-2364]	; be10 <bt_compidtostr@@Base+0x37f0>
    c748:	add	r0, pc, r0
    c74c:	bx	lr
    c750:	ldr	r0, [pc, #-2372]	; be14 <bt_compidtostr@@Base+0x37f4>
    c754:	add	r0, pc, r0
    c758:	bx	lr
    c75c:	ldr	r0, [pc, #-2380]	; be18 <bt_compidtostr@@Base+0x37f8>
    c760:	add	r0, pc, r0
    c764:	bx	lr
    c768:	ldr	r0, [pc, #-2388]	; be1c <bt_compidtostr@@Base+0x37fc>
    c76c:	add	r0, pc, r0
    c770:	bx	lr
    c774:	ldr	r0, [pc, #-2396]	; be20 <bt_compidtostr@@Base+0x3800>
    c778:	add	r0, pc, r0
    c77c:	bx	lr
    c780:	ldr	r0, [pc, #-2404]	; be24 <bt_compidtostr@@Base+0x3804>
    c784:	add	r0, pc, r0
    c788:	bx	lr
    c78c:	ldr	r0, [pc, #-2412]	; be28 <bt_compidtostr@@Base+0x3808>
    c790:	add	r0, pc, r0
    c794:	bx	lr
    c798:	ldr	r0, [pc, #-2420]	; be2c <bt_compidtostr@@Base+0x380c>
    c79c:	add	r0, pc, r0
    c7a0:	bx	lr
    c7a4:	ldr	r0, [pc, #-2428]	; be30 <bt_compidtostr@@Base+0x3810>
    c7a8:	add	r0, pc, r0
    c7ac:	bx	lr
    c7b0:	ldr	r0, [pc, #-2436]	; be34 <bt_compidtostr@@Base+0x3814>
    c7b4:	add	r0, pc, r0
    c7b8:	bx	lr
    c7bc:	ldr	r0, [pc, #-2444]	; be38 <bt_compidtostr@@Base+0x3818>
    c7c0:	add	r0, pc, r0
    c7c4:	bx	lr
    c7c8:	ldr	r0, [pc, #-2452]	; be3c <bt_compidtostr@@Base+0x381c>
    c7cc:	add	r0, pc, r0
    c7d0:	bx	lr
    c7d4:	ldr	r0, [pc, #-2460]	; be40 <bt_compidtostr@@Base+0x3820>
    c7d8:	add	r0, pc, r0
    c7dc:	bx	lr
    c7e0:	ldr	r0, [pc, #-2468]	; be44 <bt_compidtostr@@Base+0x3824>
    c7e4:	add	r0, pc, r0
    c7e8:	bx	lr
    c7ec:	ldr	r0, [pc, #-2476]	; be48 <bt_compidtostr@@Base+0x3828>
    c7f0:	add	r0, pc, r0
    c7f4:	bx	lr
    c7f8:	ldr	r0, [pc, #-2484]	; be4c <bt_compidtostr@@Base+0x382c>
    c7fc:	add	r0, pc, r0
    c800:	bx	lr
    c804:	ldr	r0, [pc, #-2492]	; be50 <bt_compidtostr@@Base+0x3830>
    c808:	add	r0, pc, r0
    c80c:	bx	lr
    c810:	ldr	r0, [pc, #-2500]	; be54 <bt_compidtostr@@Base+0x3834>
    c814:	add	r0, pc, r0
    c818:	bx	lr
    c81c:	ldr	r0, [pc, #-2508]	; be58 <bt_compidtostr@@Base+0x3838>
    c820:	add	r0, pc, r0
    c824:	bx	lr
    c828:	ldr	r0, [pc, #-2516]	; be5c <bt_compidtostr@@Base+0x383c>
    c82c:	add	r0, pc, r0
    c830:	bx	lr
    c834:	ldr	r0, [pc, #-2524]	; be60 <bt_compidtostr@@Base+0x3840>
    c838:	add	r0, pc, r0
    c83c:	bx	lr
    c840:	ldr	r0, [pc, #-2532]	; be64 <bt_compidtostr@@Base+0x3844>
    c844:	add	r0, pc, r0
    c848:	bx	lr
    c84c:	ldr	r0, [pc, #-2540]	; be68 <bt_compidtostr@@Base+0x3848>
    c850:	add	r0, pc, r0
    c854:	bx	lr
    c858:	ldr	r0, [pc, #-2548]	; be6c <bt_compidtostr@@Base+0x384c>
    c85c:	add	r0, pc, r0
    c860:	bx	lr
    c864:	ldr	r0, [pc, #-2556]	; be70 <bt_compidtostr@@Base+0x3850>
    c868:	add	r0, pc, r0
    c86c:	bx	lr
    c870:	ldr	r0, [pc, #-2564]	; be74 <bt_compidtostr@@Base+0x3854>
    c874:	add	r0, pc, r0
    c878:	bx	lr
    c87c:	ldr	r0, [pc, #-2572]	; be78 <bt_compidtostr@@Base+0x3858>
    c880:	add	r0, pc, r0
    c884:	bx	lr
    c888:	ldr	r0, [pc, #-2580]	; be7c <bt_compidtostr@@Base+0x385c>
    c88c:	add	r0, pc, r0
    c890:	bx	lr
    c894:	ldr	r0, [pc, #-2588]	; be80 <bt_compidtostr@@Base+0x3860>
    c898:	add	r0, pc, r0
    c89c:	bx	lr
    c8a0:	ldr	r0, [pc, #-2596]	; be84 <bt_compidtostr@@Base+0x3864>
    c8a4:	add	r0, pc, r0
    c8a8:	bx	lr
    c8ac:	ldr	r0, [pc, #-2604]	; be88 <bt_compidtostr@@Base+0x3868>
    c8b0:	add	r0, pc, r0
    c8b4:	bx	lr
    c8b8:	ldr	r0, [pc, #-2612]	; be8c <bt_compidtostr@@Base+0x386c>
    c8bc:	add	r0, pc, r0
    c8c0:	bx	lr
    c8c4:	ldr	r0, [pc, #-2620]	; be90 <bt_compidtostr@@Base+0x3870>
    c8c8:	add	r0, pc, r0
    c8cc:	bx	lr
    c8d0:	ldr	r0, [pc, #-2628]	; be94 <bt_compidtostr@@Base+0x3874>
    c8d4:	add	r0, pc, r0
    c8d8:	bx	lr
    c8dc:	ldr	r0, [pc, #-2636]	; be98 <bt_compidtostr@@Base+0x3878>
    c8e0:	add	r0, pc, r0
    c8e4:	bx	lr
    c8e8:	ldr	r0, [pc, #-2644]	; be9c <bt_compidtostr@@Base+0x387c>
    c8ec:	add	r0, pc, r0
    c8f0:	bx	lr
    c8f4:	ldr	r0, [pc, #-2652]	; bea0 <bt_compidtostr@@Base+0x3880>
    c8f8:	add	r0, pc, r0
    c8fc:	bx	lr
    c900:	ldr	r0, [pc, #-2660]	; bea4 <bt_compidtostr@@Base+0x3884>
    c904:	add	r0, pc, r0
    c908:	bx	lr
    c90c:	ldr	r0, [pc, #-2668]	; bea8 <bt_compidtostr@@Base+0x3888>
    c910:	add	r0, pc, r0
    c914:	bx	lr
    c918:	ldr	r0, [pc, #-2676]	; beac <bt_compidtostr@@Base+0x388c>
    c91c:	add	r0, pc, r0
    c920:	bx	lr
    c924:	ldr	r0, [pc, #-2684]	; beb0 <bt_compidtostr@@Base+0x3890>
    c928:	add	r0, pc, r0
    c92c:	bx	lr
    c930:	ldr	r0, [pc, #-2692]	; beb4 <bt_compidtostr@@Base+0x3894>
    c934:	add	r0, pc, r0
    c938:	bx	lr
    c93c:	ldr	r0, [pc, #-2700]	; beb8 <bt_compidtostr@@Base+0x3898>
    c940:	add	r0, pc, r0
    c944:	bx	lr
    c948:	ldr	r0, [pc, #-2708]	; bebc <bt_compidtostr@@Base+0x389c>
    c94c:	add	r0, pc, r0
    c950:	bx	lr
    c954:	ldr	r0, [pc, #-2716]	; bec0 <bt_compidtostr@@Base+0x38a0>
    c958:	add	r0, pc, r0
    c95c:	bx	lr
    c960:	ldr	r0, [pc, #-2724]	; bec4 <bt_compidtostr@@Base+0x38a4>
    c964:	add	r0, pc, r0
    c968:	bx	lr
    c96c:	ldr	r0, [pc, #-2732]	; bec8 <bt_compidtostr@@Base+0x38a8>
    c970:	add	r0, pc, r0
    c974:	bx	lr
    c978:	ldr	r0, [pc, #-2740]	; becc <bt_compidtostr@@Base+0x38ac>
    c97c:	add	r0, pc, r0
    c980:	bx	lr
    c984:	ldr	r0, [pc, #-2748]	; bed0 <bt_compidtostr@@Base+0x38b0>
    c988:	add	r0, pc, r0
    c98c:	bx	lr
    c990:	ldr	r0, [pc, #-2756]	; bed4 <bt_compidtostr@@Base+0x38b4>
    c994:	add	r0, pc, r0
    c998:	bx	lr
    c99c:	ldr	r0, [pc, #-2764]	; bed8 <bt_compidtostr@@Base+0x38b8>
    c9a0:	add	r0, pc, r0
    c9a4:	bx	lr
    c9a8:	ldr	r0, [pc, #-2772]	; bedc <bt_compidtostr@@Base+0x38bc>
    c9ac:	add	r0, pc, r0
    c9b0:	bx	lr
    c9b4:	ldr	r0, [pc, #-2780]	; bee0 <bt_compidtostr@@Base+0x38c0>
    c9b8:	add	r0, pc, r0
    c9bc:	bx	lr
    c9c0:	ldr	r0, [pc, #-2788]	; bee4 <bt_compidtostr@@Base+0x38c4>
    c9c4:	add	r0, pc, r0
    c9c8:	bx	lr
    c9cc:	ldr	r0, [pc, #-2796]	; bee8 <bt_compidtostr@@Base+0x38c8>
    c9d0:	add	r0, pc, r0
    c9d4:	bx	lr
    c9d8:	ldr	r0, [pc, #-2804]	; beec <bt_compidtostr@@Base+0x38cc>
    c9dc:	add	r0, pc, r0
    c9e0:	bx	lr
    c9e4:	ldr	r0, [pc, #-2812]	; bef0 <bt_compidtostr@@Base+0x38d0>
    c9e8:	add	r0, pc, r0
    c9ec:	bx	lr
    c9f0:	ldr	r0, [pc, #-2820]	; bef4 <bt_compidtostr@@Base+0x38d4>
    c9f4:	add	r0, pc, r0
    c9f8:	bx	lr
    c9fc:	ldr	r0, [pc, #-2828]	; bef8 <bt_compidtostr@@Base+0x38d8>
    ca00:	add	r0, pc, r0
    ca04:	bx	lr
    ca08:	ldr	r0, [pc, #-2836]	; befc <bt_compidtostr@@Base+0x38dc>
    ca0c:	add	r0, pc, r0
    ca10:	bx	lr
    ca14:	ldr	r0, [pc, #-2844]	; bf00 <bt_compidtostr@@Base+0x38e0>
    ca18:	add	r0, pc, r0
    ca1c:	bx	lr
    ca20:	ldr	r0, [pc, #-2852]	; bf04 <bt_compidtostr@@Base+0x38e4>
    ca24:	add	r0, pc, r0
    ca28:	bx	lr
    ca2c:	ldr	r0, [pc, #-2860]	; bf08 <bt_compidtostr@@Base+0x38e8>
    ca30:	add	r0, pc, r0
    ca34:	bx	lr
    ca38:	ldr	r0, [pc, #-2868]	; bf0c <bt_compidtostr@@Base+0x38ec>
    ca3c:	add	r0, pc, r0
    ca40:	bx	lr
    ca44:	ldr	r0, [pc, #-2876]	; bf10 <bt_compidtostr@@Base+0x38f0>
    ca48:	add	r0, pc, r0
    ca4c:	bx	lr
    ca50:	ldr	r0, [pc, #-2884]	; bf14 <bt_compidtostr@@Base+0x38f4>
    ca54:	add	r0, pc, r0
    ca58:	bx	lr
    ca5c:	ldr	r0, [pc, #-2892]	; bf18 <bt_compidtostr@@Base+0x38f8>
    ca60:	add	r0, pc, r0
    ca64:	bx	lr
    ca68:	ldr	r0, [pc, #-2900]	; bf1c <bt_compidtostr@@Base+0x38fc>
    ca6c:	add	r0, pc, r0
    ca70:	bx	lr
    ca74:	ldr	r0, [pc, #-2908]	; bf20 <bt_compidtostr@@Base+0x3900>
    ca78:	add	r0, pc, r0
    ca7c:	bx	lr
    ca80:	ldr	r0, [pc, #-2916]	; bf24 <bt_compidtostr@@Base+0x3904>
    ca84:	add	r0, pc, r0
    ca88:	bx	lr
    ca8c:	ldr	r0, [pc, #-2924]	; bf28 <bt_compidtostr@@Base+0x3908>
    ca90:	add	r0, pc, r0
    ca94:	bx	lr
    ca98:	ldr	r0, [pc, #-2932]	; bf2c <bt_compidtostr@@Base+0x390c>
    ca9c:	add	r0, pc, r0
    caa0:	bx	lr
    caa4:	ldr	r0, [pc, #-2940]	; bf30 <bt_compidtostr@@Base+0x3910>
    caa8:	add	r0, pc, r0
    caac:	bx	lr
    cab0:	ldr	r0, [pc, #-2948]	; bf34 <bt_compidtostr@@Base+0x3914>
    cab4:	add	r0, pc, r0
    cab8:	bx	lr
    cabc:	ldr	r0, [pc, #-2956]	; bf38 <bt_compidtostr@@Base+0x3918>
    cac0:	add	r0, pc, r0
    cac4:	bx	lr
    cac8:	ldr	r0, [pc, #-2964]	; bf3c <bt_compidtostr@@Base+0x391c>
    cacc:	add	r0, pc, r0
    cad0:	bx	lr
    cad4:	ldr	r0, [pc, #-2972]	; bf40 <bt_compidtostr@@Base+0x3920>
    cad8:	add	r0, pc, r0
    cadc:	bx	lr
    cae0:	ldr	r0, [pc, #-2980]	; bf44 <bt_compidtostr@@Base+0x3924>
    cae4:	add	r0, pc, r0
    cae8:	bx	lr
    caec:	ldr	r0, [pc, #-2988]	; bf48 <bt_compidtostr@@Base+0x3928>
    caf0:	add	r0, pc, r0
    caf4:	bx	lr
    caf8:	ldr	r0, [pc, #-2996]	; bf4c <bt_compidtostr@@Base+0x392c>
    cafc:	add	r0, pc, r0
    cb00:	bx	lr
    cb04:	ldr	r0, [pc, #-3004]	; bf50 <bt_compidtostr@@Base+0x3930>
    cb08:	add	r0, pc, r0
    cb0c:	bx	lr
    cb10:	ldr	r0, [pc, #-3012]	; bf54 <bt_compidtostr@@Base+0x3934>
    cb14:	add	r0, pc, r0
    cb18:	bx	lr
    cb1c:	ldr	r0, [pc, #-3020]	; bf58 <bt_compidtostr@@Base+0x3938>
    cb20:	add	r0, pc, r0
    cb24:	bx	lr
    cb28:	ldr	r0, [pc, #-3028]	; bf5c <bt_compidtostr@@Base+0x393c>
    cb2c:	add	r0, pc, r0
    cb30:	bx	lr
    cb34:	ldr	r0, [pc, #-3036]	; bf60 <bt_compidtostr@@Base+0x3940>
    cb38:	add	r0, pc, r0
    cb3c:	bx	lr
    cb40:	ldr	r0, [pc, #-3044]	; bf64 <bt_compidtostr@@Base+0x3944>
    cb44:	add	r0, pc, r0
    cb48:	bx	lr
    cb4c:	ldr	r0, [pc, #-3052]	; bf68 <bt_compidtostr@@Base+0x3948>
    cb50:	add	r0, pc, r0
    cb54:	bx	lr
    cb58:	ldr	r0, [pc, #-3060]	; bf6c <bt_compidtostr@@Base+0x394c>
    cb5c:	add	r0, pc, r0
    cb60:	bx	lr
    cb64:	ldr	r0, [pc, #-3068]	; bf70 <bt_compidtostr@@Base+0x3950>
    cb68:	add	r0, pc, r0
    cb6c:	bx	lr
    cb70:	ldr	r0, [pc, #-3076]	; bf74 <bt_compidtostr@@Base+0x3954>
    cb74:	add	r0, pc, r0
    cb78:	bx	lr
    cb7c:	ldr	r0, [pc, #-3084]	; bf78 <bt_compidtostr@@Base+0x3958>
    cb80:	add	r0, pc, r0
    cb84:	bx	lr
    cb88:	ldr	r0, [pc, #-3092]	; bf7c <bt_compidtostr@@Base+0x395c>
    cb8c:	add	r0, pc, r0
    cb90:	bx	lr
    cb94:	ldr	r0, [pc, #-3100]	; bf80 <bt_compidtostr@@Base+0x3960>
    cb98:	add	r0, pc, r0
    cb9c:	bx	lr
    cba0:	ldr	r0, [pc, #-3108]	; bf84 <bt_compidtostr@@Base+0x3964>
    cba4:	add	r0, pc, r0
    cba8:	bx	lr
    cbac:	ldr	r0, [pc, #-3116]	; bf88 <bt_compidtostr@@Base+0x3968>
    cbb0:	add	r0, pc, r0
    cbb4:	bx	lr
    cbb8:	ldr	r0, [pc, #-3124]	; bf8c <bt_compidtostr@@Base+0x396c>
    cbbc:	add	r0, pc, r0
    cbc0:	bx	lr
    cbc4:	ldr	r0, [pc, #-3132]	; bf90 <bt_compidtostr@@Base+0x3970>
    cbc8:	add	r0, pc, r0
    cbcc:	bx	lr
    cbd0:	ldr	r0, [pc, #-3140]	; bf94 <bt_compidtostr@@Base+0x3974>
    cbd4:	add	r0, pc, r0
    cbd8:	bx	lr
    cbdc:	ldr	r0, [pc, #-3148]	; bf98 <bt_compidtostr@@Base+0x3978>
    cbe0:	add	r0, pc, r0
    cbe4:	bx	lr
    cbe8:	ldr	r0, [pc, #-3156]	; bf9c <bt_compidtostr@@Base+0x397c>
    cbec:	add	r0, pc, r0
    cbf0:	bx	lr
    cbf4:	ldr	r0, [pc, #-3164]	; bfa0 <bt_compidtostr@@Base+0x3980>
    cbf8:	add	r0, pc, r0
    cbfc:	bx	lr
    cc00:	ldr	r0, [pc, #-3172]	; bfa4 <bt_compidtostr@@Base+0x3984>
    cc04:	add	r0, pc, r0
    cc08:	bx	lr
    cc0c:	ldr	r0, [pc, #-3180]	; bfa8 <bt_compidtostr@@Base+0x3988>
    cc10:	add	r0, pc, r0
    cc14:	bx	lr
    cc18:	ldr	r0, [pc, #-3188]	; bfac <bt_compidtostr@@Base+0x398c>
    cc1c:	add	r0, pc, r0
    cc20:	bx	lr
    cc24:	ldr	r0, [pc, #-3196]	; bfb0 <bt_compidtostr@@Base+0x3990>
    cc28:	add	r0, pc, r0
    cc2c:	bx	lr
    cc30:	ldr	r0, [pc, #-3204]	; bfb4 <bt_compidtostr@@Base+0x3994>
    cc34:	add	r0, pc, r0
    cc38:	bx	lr
    cc3c:	ldr	r0, [pc, #-3212]	; bfb8 <bt_compidtostr@@Base+0x3998>
    cc40:	add	r0, pc, r0
    cc44:	bx	lr
    cc48:	ldr	r0, [pc, #-3220]	; bfbc <bt_compidtostr@@Base+0x399c>
    cc4c:	add	r0, pc, r0
    cc50:	bx	lr
    cc54:	ldr	r0, [pc, #-3228]	; bfc0 <bt_compidtostr@@Base+0x39a0>
    cc58:	add	r0, pc, r0
    cc5c:	bx	lr
    cc60:	ldr	r0, [pc, #-3236]	; bfc4 <bt_compidtostr@@Base+0x39a4>
    cc64:	add	r0, pc, r0
    cc68:	bx	lr
    cc6c:	ldr	r0, [pc, #-3244]	; bfc8 <bt_compidtostr@@Base+0x39a8>
    cc70:	add	r0, pc, r0
    cc74:	bx	lr
    cc78:	ldr	r0, [pc, #-3252]	; bfcc <bt_compidtostr@@Base+0x39ac>
    cc7c:	add	r0, pc, r0
    cc80:	bx	lr
    cc84:	ldr	r0, [pc, #-3260]	; bfd0 <bt_compidtostr@@Base+0x39b0>
    cc88:	add	r0, pc, r0
    cc8c:	bx	lr
    cc90:	ldr	r0, [pc, #-3268]	; bfd4 <bt_compidtostr@@Base+0x39b4>
    cc94:	add	r0, pc, r0
    cc98:	bx	lr
    cc9c:	ldr	r0, [pc, #-3276]	; bfd8 <bt_compidtostr@@Base+0x39b8>
    cca0:	add	r0, pc, r0
    cca4:	bx	lr
    cca8:	ldr	r0, [pc, #-3284]	; bfdc <bt_compidtostr@@Base+0x39bc>
    ccac:	add	r0, pc, r0
    ccb0:	bx	lr
    ccb4:	ldr	r0, [pc, #-3292]	; bfe0 <bt_compidtostr@@Base+0x39c0>
    ccb8:	add	r0, pc, r0
    ccbc:	bx	lr
    ccc0:	ldr	r0, [pc, #-3300]	; bfe4 <bt_compidtostr@@Base+0x39c4>
    ccc4:	add	r0, pc, r0
    ccc8:	bx	lr
    cccc:	ldr	r0, [pc, #-3308]	; bfe8 <bt_compidtostr@@Base+0x39c8>
    ccd0:	add	r0, pc, r0
    ccd4:	bx	lr
    ccd8:	ldr	r0, [pc, #-3316]	; bfec <bt_compidtostr@@Base+0x39cc>
    ccdc:	add	r0, pc, r0
    cce0:	bx	lr
    cce4:	ldr	r0, [pc, #-3324]	; bff0 <bt_compidtostr@@Base+0x39d0>
    cce8:	add	r0, pc, r0
    ccec:	bx	lr
    ccf0:	ldr	r0, [pc, #-3332]	; bff4 <bt_compidtostr@@Base+0x39d4>
    ccf4:	add	r0, pc, r0
    ccf8:	bx	lr
    ccfc:	ldr	r0, [pc, #-3340]	; bff8 <bt_compidtostr@@Base+0x39d8>
    cd00:	add	r0, pc, r0
    cd04:	bx	lr
    cd08:	ldr	r0, [pc, #-3348]	; bffc <bt_compidtostr@@Base+0x39dc>
    cd0c:	add	r0, pc, r0
    cd10:	bx	lr
    cd14:	ldr	r0, [pc, #-3356]	; c000 <bt_compidtostr@@Base+0x39e0>
    cd18:	add	r0, pc, r0
    cd1c:	bx	lr
    cd20:	ldr	r0, [pc, #-3364]	; c004 <bt_compidtostr@@Base+0x39e4>
    cd24:	add	r0, pc, r0
    cd28:	bx	lr
    cd2c:	ldr	r0, [pc, #-3372]	; c008 <bt_compidtostr@@Base+0x39e8>
    cd30:	add	r0, pc, r0
    cd34:	bx	lr
    cd38:	ldr	r0, [pc, #-3380]	; c00c <bt_compidtostr@@Base+0x39ec>
    cd3c:	add	r0, pc, r0
    cd40:	bx	lr
    cd44:	ldr	r0, [pc, #-3388]	; c010 <bt_compidtostr@@Base+0x39f0>
    cd48:	add	r0, pc, r0
    cd4c:	bx	lr
    cd50:	ldr	r0, [pc, #-3396]	; c014 <bt_compidtostr@@Base+0x39f4>
    cd54:	add	r0, pc, r0
    cd58:	bx	lr
    cd5c:	ldr	r0, [pc, #-3404]	; c018 <bt_compidtostr@@Base+0x39f8>
    cd60:	add	r0, pc, r0
    cd64:	bx	lr
    cd68:	ldr	r0, [pc, #-3412]	; c01c <bt_compidtostr@@Base+0x39fc>
    cd6c:	add	r0, pc, r0
    cd70:	bx	lr
    cd74:	ldr	r0, [pc, #-3420]	; c020 <bt_compidtostr@@Base+0x3a00>
    cd78:	add	r0, pc, r0
    cd7c:	bx	lr
    cd80:	ldr	r0, [pc, #-3428]	; c024 <bt_compidtostr@@Base+0x3a04>
    cd84:	add	r0, pc, r0
    cd88:	bx	lr
    cd8c:	ldr	r0, [pc, #-3436]	; c028 <bt_compidtostr@@Base+0x3a08>
    cd90:	add	r0, pc, r0
    cd94:	bx	lr
    cd98:	ldr	r0, [pc, #-3444]	; c02c <bt_compidtostr@@Base+0x3a0c>
    cd9c:	add	r0, pc, r0
    cda0:	bx	lr
    cda4:	ldr	r0, [pc, #-3452]	; c030 <bt_compidtostr@@Base+0x3a10>
    cda8:	add	r0, pc, r0
    cdac:	bx	lr
    cdb0:	ldr	r0, [pc, #-3460]	; c034 <bt_compidtostr@@Base+0x3a14>
    cdb4:	add	r0, pc, r0
    cdb8:	bx	lr
    cdbc:	ldr	r0, [pc, #-3468]	; c038 <bt_compidtostr@@Base+0x3a18>
    cdc0:	add	r0, pc, r0
    cdc4:	bx	lr
    cdc8:	ldr	r0, [pc, #-3476]	; c03c <bt_compidtostr@@Base+0x3a1c>
    cdcc:	add	r0, pc, r0
    cdd0:	bx	lr
    cdd4:	ldr	r0, [pc, #-3484]	; c040 <bt_compidtostr@@Base+0x3a20>
    cdd8:	add	r0, pc, r0
    cddc:	bx	lr
    cde0:	ldr	r0, [pc, #-3492]	; c044 <bt_compidtostr@@Base+0x3a24>
    cde4:	add	r0, pc, r0
    cde8:	bx	lr
    cdec:	ldr	r0, [pc, #-3500]	; c048 <bt_compidtostr@@Base+0x3a28>
    cdf0:	add	r0, pc, r0
    cdf4:	bx	lr
    cdf8:	ldr	r0, [pc, #-3508]	; c04c <bt_compidtostr@@Base+0x3a2c>
    cdfc:	add	r0, pc, r0
    ce00:	bx	lr
    ce04:	ldr	r0, [pc, #-3516]	; c050 <bt_compidtostr@@Base+0x3a30>
    ce08:	add	r0, pc, r0
    ce0c:	bx	lr
    ce10:	ldr	r0, [pc, #-3524]	; c054 <bt_compidtostr@@Base+0x3a34>
    ce14:	add	r0, pc, r0
    ce18:	bx	lr
    ce1c:	ldr	r0, [pc, #-3532]	; c058 <bt_compidtostr@@Base+0x3a38>
    ce20:	add	r0, pc, r0
    ce24:	bx	lr
    ce28:	ldr	r0, [pc, #-3540]	; c05c <bt_compidtostr@@Base+0x3a3c>
    ce2c:	add	r0, pc, r0
    ce30:	bx	lr
    ce34:	ldr	r0, [pc, #-3548]	; c060 <bt_compidtostr@@Base+0x3a40>
    ce38:	add	r0, pc, r0
    ce3c:	bx	lr
    ce40:	ldr	r0, [pc, #-3556]	; c064 <bt_compidtostr@@Base+0x3a44>
    ce44:	add	r0, pc, r0
    ce48:	bx	lr
    ce4c:	ldr	r0, [pc, #-3564]	; c068 <bt_compidtostr@@Base+0x3a48>
    ce50:	add	r0, pc, r0
    ce54:	bx	lr
    ce58:	ldr	r0, [pc, #-3572]	; c06c <bt_compidtostr@@Base+0x3a4c>
    ce5c:	add	r0, pc, r0
    ce60:	bx	lr
    ce64:	ldr	r0, [pc, #-3580]	; c070 <bt_compidtostr@@Base+0x3a50>
    ce68:	add	r0, pc, r0
    ce6c:	bx	lr
    ce70:	ldr	r0, [pc, #-3588]	; c074 <bt_compidtostr@@Base+0x3a54>
    ce74:	add	r0, pc, r0
    ce78:	bx	lr
    ce7c:	ldr	r0, [pc, #-3596]	; c078 <bt_compidtostr@@Base+0x3a58>
    ce80:	add	r0, pc, r0
    ce84:	bx	lr
    ce88:	ldr	r0, [pc, #-3604]	; c07c <bt_compidtostr@@Base+0x3a5c>
    ce8c:	add	r0, pc, r0
    ce90:	bx	lr
    ce94:	ldr	r0, [pc, #-3612]	; c080 <bt_compidtostr@@Base+0x3a60>
    ce98:	add	r0, pc, r0
    ce9c:	bx	lr
    cea0:	ldr	r0, [pc, #-3620]	; c084 <bt_compidtostr@@Base+0x3a64>
    cea4:	add	r0, pc, r0
    cea8:	bx	lr
    ceac:	ldr	r0, [pc, #-3628]	; c088 <bt_compidtostr@@Base+0x3a68>
    ceb0:	add	r0, pc, r0
    ceb4:	bx	lr
    ceb8:	ldr	r0, [pc, #-3636]	; c08c <bt_compidtostr@@Base+0x3a6c>
    cebc:	add	r0, pc, r0
    cec0:	bx	lr
    cec4:	ldr	r0, [pc, #-3644]	; c090 <bt_compidtostr@@Base+0x3a70>
    cec8:	add	r0, pc, r0
    cecc:	bx	lr
    ced0:	ldr	r0, [pc, #-3652]	; c094 <bt_compidtostr@@Base+0x3a74>
    ced4:	add	r0, pc, r0
    ced8:	bx	lr
    cedc:	ldr	r0, [pc, #-3660]	; c098 <bt_compidtostr@@Base+0x3a78>
    cee0:	add	r0, pc, r0
    cee4:	bx	lr
    cee8:	ldr	r0, [pc, #-3668]	; c09c <bt_compidtostr@@Base+0x3a7c>
    ceec:	add	r0, pc, r0
    cef0:	bx	lr
    cef4:	ldr	r0, [pc, #-3676]	; c0a0 <bt_compidtostr@@Base+0x3a80>
    cef8:	add	r0, pc, r0
    cefc:	bx	lr
    cf00:	ldr	r0, [pc, #-3684]	; c0a4 <bt_compidtostr@@Base+0x3a84>
    cf04:	add	r0, pc, r0
    cf08:	bx	lr
    cf0c:	ldr	r0, [pc, #-3692]	; c0a8 <bt_compidtostr@@Base+0x3a88>
    cf10:	add	r0, pc, r0
    cf14:	bx	lr
    cf18:	ldr	r0, [pc, #-3700]	; c0ac <bt_compidtostr@@Base+0x3a8c>
    cf1c:	add	r0, pc, r0
    cf20:	bx	lr
    cf24:	ldr	r0, [pc, #-3708]	; c0b0 <bt_compidtostr@@Base+0x3a90>
    cf28:	add	r0, pc, r0
    cf2c:	bx	lr
    cf30:	ldr	r0, [pc, #-3716]	; c0b4 <bt_compidtostr@@Base+0x3a94>
    cf34:	add	r0, pc, r0
    cf38:	bx	lr
    cf3c:	ldr	r0, [pc, #-3724]	; c0b8 <bt_compidtostr@@Base+0x3a98>
    cf40:	add	r0, pc, r0
    cf44:	bx	lr
    cf48:	ldr	r0, [pc, #-3732]	; c0bc <bt_compidtostr@@Base+0x3a9c>
    cf4c:	add	r0, pc, r0
    cf50:	bx	lr
    cf54:	ldr	r0, [pc, #-3740]	; c0c0 <bt_compidtostr@@Base+0x3aa0>
    cf58:	add	r0, pc, r0
    cf5c:	bx	lr
    cf60:	ldr	r0, [pc, #-3748]	; c0c4 <bt_compidtostr@@Base+0x3aa4>
    cf64:	add	r0, pc, r0
    cf68:	bx	lr
    cf6c:	ldr	r0, [pc, #-3756]	; c0c8 <bt_compidtostr@@Base+0x3aa8>
    cf70:	add	r0, pc, r0
    cf74:	bx	lr
    cf78:	ldr	r0, [pc, #-3764]	; c0cc <bt_compidtostr@@Base+0x3aac>
    cf7c:	add	r0, pc, r0
    cf80:	bx	lr
    cf84:	ldr	r0, [pc, #-3772]	; c0d0 <bt_compidtostr@@Base+0x3ab0>
    cf88:	add	r0, pc, r0
    cf8c:	bx	lr
    cf90:	ldr	r0, [pc, #-3780]	; c0d4 <bt_compidtostr@@Base+0x3ab4>
    cf94:	add	r0, pc, r0
    cf98:	bx	lr
    cf9c:	ldr	r0, [pc, #-3788]	; c0d8 <bt_compidtostr@@Base+0x3ab8>
    cfa0:	add	r0, pc, r0
    cfa4:	bx	lr
    cfa8:	ldr	r0, [pc, #-3796]	; c0dc <bt_compidtostr@@Base+0x3abc>
    cfac:	add	r0, pc, r0
    cfb0:	bx	lr
    cfb4:	ldr	r0, [pc, #-3804]	; c0e0 <bt_compidtostr@@Base+0x3ac0>
    cfb8:	add	r0, pc, r0
    cfbc:	bx	lr
    cfc0:	ldr	r0, [pc, #-3812]	; c0e4 <bt_compidtostr@@Base+0x3ac4>
    cfc4:	add	r0, pc, r0
    cfc8:	bx	lr
    cfcc:	ldr	r0, [pc, #-3820]	; c0e8 <bt_compidtostr@@Base+0x3ac8>
    cfd0:	add	r0, pc, r0
    cfd4:	bx	lr
    cfd8:	ldr	r0, [pc, #-3828]	; c0ec <bt_compidtostr@@Base+0x3acc>
    cfdc:	add	r0, pc, r0
    cfe0:	bx	lr
    cfe4:	ldr	r0, [pc, #-3836]	; c0f0 <bt_compidtostr@@Base+0x3ad0>
    cfe8:	add	r0, pc, r0
    cfec:	bx	lr
    cff0:	ldr	r0, [pc, #-3844]	; c0f4 <bt_compidtostr@@Base+0x3ad4>
    cff4:	add	r0, pc, r0
    cff8:	bx	lr
    cffc:	ldr	r0, [pc, #-3852]	; c0f8 <bt_compidtostr@@Base+0x3ad8>
    d000:	add	r0, pc, r0
    d004:	bx	lr
    d008:	ldr	r0, [pc, #-3860]	; c0fc <bt_compidtostr@@Base+0x3adc>
    d00c:	add	r0, pc, r0
    d010:	bx	lr
    d014:	ldr	r0, [pc, #-3868]	; c100 <bt_compidtostr@@Base+0x3ae0>
    d018:	add	r0, pc, r0
    d01c:	bx	lr
    d020:	ldr	r0, [pc, #-3876]	; c104 <bt_compidtostr@@Base+0x3ae4>
    d024:	add	r0, pc, r0
    d028:	bx	lr
    d02c:	ldr	r0, [pc, #-3884]	; c108 <bt_compidtostr@@Base+0x3ae8>
    d030:	add	r0, pc, r0
    d034:	bx	lr
    d038:	ldr	r0, [pc, #-3892]	; c10c <bt_compidtostr@@Base+0x3aec>
    d03c:	add	r0, pc, r0
    d040:	bx	lr
    d044:	ldr	r0, [pc, #-3900]	; c110 <bt_compidtostr@@Base+0x3af0>
    d048:	add	r0, pc, r0
    d04c:	bx	lr
    d050:	ldr	r0, [pc, #-3908]	; c114 <bt_compidtostr@@Base+0x3af4>
    d054:	add	r0, pc, r0
    d058:	bx	lr
    d05c:	ldr	r0, [pc, #-3916]	; c118 <bt_compidtostr@@Base+0x3af8>
    d060:	add	r0, pc, r0
    d064:	bx	lr
    d068:	ldr	r0, [pc, #-3924]	; c11c <bt_compidtostr@@Base+0x3afc>
    d06c:	add	r0, pc, r0
    d070:	bx	lr
    d074:	ldr	r0, [pc, #-3932]	; c120 <bt_compidtostr@@Base+0x3b00>
    d078:	add	r0, pc, r0
    d07c:	bx	lr
    d080:	ldr	r0, [pc, #-3940]	; c124 <bt_compidtostr@@Base+0x3b04>
    d084:	add	r0, pc, r0
    d088:	bx	lr
    d08c:	ldr	r0, [pc, #-3948]	; c128 <bt_compidtostr@@Base+0x3b08>
    d090:	add	r0, pc, r0
    d094:	bx	lr
    d098:	ldr	r0, [pc, #-3956]	; c12c <bt_compidtostr@@Base+0x3b0c>
    d09c:	add	r0, pc, r0
    d0a0:	bx	lr
    d0a4:	ldr	r0, [pc, #-3964]	; c130 <bt_compidtostr@@Base+0x3b10>
    d0a8:	add	r0, pc, r0
    d0ac:	bx	lr
    d0b0:	ldr	r0, [pc, #-3972]	; c134 <bt_compidtostr@@Base+0x3b14>
    d0b4:	add	r0, pc, r0
    d0b8:	bx	lr
    d0bc:	ldr	r0, [pc, #-3980]	; c138 <bt_compidtostr@@Base+0x3b18>
    d0c0:	add	r0, pc, r0
    d0c4:	bx	lr
    d0c8:	ldr	r0, [pc, #-3988]	; c13c <bt_compidtostr@@Base+0x3b1c>
    d0cc:	add	r0, pc, r0
    d0d0:	bx	lr
    d0d4:	ldr	r0, [pc, #-3996]	; c140 <bt_compidtostr@@Base+0x3b20>
    d0d8:	add	r0, pc, r0
    d0dc:	bx	lr
    d0e0:	ldr	r0, [pc, #-4004]	; c144 <bt_compidtostr@@Base+0x3b24>
    d0e4:	add	r0, pc, r0
    d0e8:	bx	lr
    d0ec:	ldr	r0, [pc, #-4012]	; c148 <bt_compidtostr@@Base+0x3b28>
    d0f0:	add	r0, pc, r0
    d0f4:	bx	lr
    d0f8:	ldr	r0, [pc, #-4020]	; c14c <bt_compidtostr@@Base+0x3b2c>
    d0fc:	add	r0, pc, r0
    d100:	bx	lr
    d104:	ldr	r0, [pc, #-4028]	; c150 <bt_compidtostr@@Base+0x3b30>
    d108:	add	r0, pc, r0
    d10c:	bx	lr
    d110:	ldr	r0, [pc, #-4036]	; c154 <bt_compidtostr@@Base+0x3b34>
    d114:	add	r0, pc, r0
    d118:	bx	lr
    d11c:	ldr	r0, [pc, #-4044]	; c158 <bt_compidtostr@@Base+0x3b38>
    d120:	add	r0, pc, r0
    d124:	bx	lr
    d128:	ldr	r0, [pc, #-4052]	; c15c <bt_compidtostr@@Base+0x3b3c>
    d12c:	add	r0, pc, r0
    d130:	bx	lr
    d134:	ldr	r0, [pc, #-4060]	; c160 <bt_compidtostr@@Base+0x3b40>
    d138:	add	r0, pc, r0
    d13c:	bx	lr
    d140:	ldr	r0, [pc, #-4068]	; c164 <bt_compidtostr@@Base+0x3b44>
    d144:	add	r0, pc, r0
    d148:	bx	lr
    d14c:	ldr	r0, [pc, #-4076]	; c168 <bt_compidtostr@@Base+0x3b48>
    d150:	add	r0, pc, r0
    d154:	bx	lr
    d158:	ldr	r0, [pc, #-4084]	; c16c <bt_compidtostr@@Base+0x3b4c>
    d15c:	add	r0, pc, r0
    d160:	bx	lr
    d164:	ldr	r0, [pc, #-4092]	; c170 <bt_compidtostr@@Base+0x3b50>
    d168:	add	r0, pc, r0
    d16c:	bx	lr
    d170:	ldr	r0, [pc, #4084]	; e16c <bt_compidtostr@@Base+0x5b4c>
    d174:	add	r0, pc, r0
    d178:	bx	lr
    d17c:	ldr	r0, [pc, #4076]	; e170 <bt_compidtostr@@Base+0x5b50>
    d180:	add	r0, pc, r0
    d184:	bx	lr
    d188:	ldr	r0, [pc, #4068]	; e174 <bt_compidtostr@@Base+0x5b54>
    d18c:	add	r0, pc, r0
    d190:	bx	lr
    d194:	ldr	r0, [pc, #4060]	; e178 <bt_compidtostr@@Base+0x5b58>
    d198:	add	r0, pc, r0
    d19c:	bx	lr
    d1a0:	ldr	r0, [pc, #4052]	; e17c <bt_compidtostr@@Base+0x5b5c>
    d1a4:	add	r0, pc, r0
    d1a8:	bx	lr
    d1ac:	ldr	r0, [pc, #4044]	; e180 <bt_compidtostr@@Base+0x5b60>
    d1b0:	add	r0, pc, r0
    d1b4:	bx	lr
    d1b8:	ldr	r0, [pc, #4036]	; e184 <bt_compidtostr@@Base+0x5b64>
    d1bc:	add	r0, pc, r0
    d1c0:	bx	lr
    d1c4:	ldr	r0, [pc, #4028]	; e188 <bt_compidtostr@@Base+0x5b68>
    d1c8:	add	r0, pc, r0
    d1cc:	bx	lr
    d1d0:	ldr	r0, [pc, #4020]	; e18c <bt_compidtostr@@Base+0x5b6c>
    d1d4:	add	r0, pc, r0
    d1d8:	bx	lr
    d1dc:	ldr	r0, [pc, #4012]	; e190 <bt_compidtostr@@Base+0x5b70>
    d1e0:	add	r0, pc, r0
    d1e4:	bx	lr
    d1e8:	ldr	r0, [pc, #4004]	; e194 <bt_compidtostr@@Base+0x5b74>
    d1ec:	add	r0, pc, r0
    d1f0:	bx	lr
    d1f4:	ldr	r0, [pc, #3996]	; e198 <bt_compidtostr@@Base+0x5b78>
    d1f8:	add	r0, pc, r0
    d1fc:	bx	lr
    d200:	ldr	r0, [pc, #3988]	; e19c <bt_compidtostr@@Base+0x5b7c>
    d204:	add	r0, pc, r0
    d208:	bx	lr
    d20c:	ldr	r0, [pc, #3980]	; e1a0 <bt_compidtostr@@Base+0x5b80>
    d210:	add	r0, pc, r0
    d214:	bx	lr
    d218:	ldr	r0, [pc, #3972]	; e1a4 <bt_compidtostr@@Base+0x5b84>
    d21c:	add	r0, pc, r0
    d220:	bx	lr
    d224:	ldr	r0, [pc, #3964]	; e1a8 <bt_compidtostr@@Base+0x5b88>
    d228:	add	r0, pc, r0
    d22c:	bx	lr
    d230:	ldr	r0, [pc, #3956]	; e1ac <bt_compidtostr@@Base+0x5b8c>
    d234:	add	r0, pc, r0
    d238:	bx	lr
    d23c:	ldr	r0, [pc, #3948]	; e1b0 <bt_compidtostr@@Base+0x5b90>
    d240:	add	r0, pc, r0
    d244:	bx	lr
    d248:	ldr	r0, [pc, #3940]	; e1b4 <bt_compidtostr@@Base+0x5b94>
    d24c:	add	r0, pc, r0
    d250:	bx	lr
    d254:	ldr	r0, [pc, #3932]	; e1b8 <bt_compidtostr@@Base+0x5b98>
    d258:	add	r0, pc, r0
    d25c:	bx	lr
    d260:	ldr	r0, [pc, #3924]	; e1bc <bt_compidtostr@@Base+0x5b9c>
    d264:	add	r0, pc, r0
    d268:	bx	lr
    d26c:	ldr	r0, [pc, #3916]	; e1c0 <bt_compidtostr@@Base+0x5ba0>
    d270:	add	r0, pc, r0
    d274:	bx	lr
    d278:	ldr	r0, [pc, #3908]	; e1c4 <bt_compidtostr@@Base+0x5ba4>
    d27c:	add	r0, pc, r0
    d280:	bx	lr
    d284:	ldr	r0, [pc, #3900]	; e1c8 <bt_compidtostr@@Base+0x5ba8>
    d288:	add	r0, pc, r0
    d28c:	bx	lr
    d290:	ldr	r0, [pc, #3892]	; e1cc <bt_compidtostr@@Base+0x5bac>
    d294:	add	r0, pc, r0
    d298:	bx	lr
    d29c:	ldr	r0, [pc, #3884]	; e1d0 <bt_compidtostr@@Base+0x5bb0>
    d2a0:	add	r0, pc, r0
    d2a4:	bx	lr
    d2a8:	ldr	r0, [pc, #3876]	; e1d4 <bt_compidtostr@@Base+0x5bb4>
    d2ac:	add	r0, pc, r0
    d2b0:	bx	lr
    d2b4:	ldr	r0, [pc, #3868]	; e1d8 <bt_compidtostr@@Base+0x5bb8>
    d2b8:	add	r0, pc, r0
    d2bc:	bx	lr
    d2c0:	ldr	r0, [pc, #3860]	; e1dc <bt_compidtostr@@Base+0x5bbc>
    d2c4:	add	r0, pc, r0
    d2c8:	bx	lr
    d2cc:	ldr	r0, [pc, #3852]	; e1e0 <bt_compidtostr@@Base+0x5bc0>
    d2d0:	add	r0, pc, r0
    d2d4:	bx	lr
    d2d8:	ldr	r0, [pc, #3844]	; e1e4 <bt_compidtostr@@Base+0x5bc4>
    d2dc:	add	r0, pc, r0
    d2e0:	bx	lr
    d2e4:	ldr	r0, [pc, #3836]	; e1e8 <bt_compidtostr@@Base+0x5bc8>
    d2e8:	add	r0, pc, r0
    d2ec:	bx	lr
    d2f0:	ldr	r0, [pc, #3828]	; e1ec <bt_compidtostr@@Base+0x5bcc>
    d2f4:	add	r0, pc, r0
    d2f8:	bx	lr
    d2fc:	ldr	r0, [pc, #3820]	; e1f0 <bt_compidtostr@@Base+0x5bd0>
    d300:	add	r0, pc, r0
    d304:	bx	lr
    d308:	ldr	r0, [pc, #3812]	; e1f4 <bt_compidtostr@@Base+0x5bd4>
    d30c:	add	r0, pc, r0
    d310:	bx	lr
    d314:	ldr	r0, [pc, #3804]	; e1f8 <bt_compidtostr@@Base+0x5bd8>
    d318:	add	r0, pc, r0
    d31c:	bx	lr
    d320:	ldr	r0, [pc, #3796]	; e1fc <bt_compidtostr@@Base+0x5bdc>
    d324:	add	r0, pc, r0
    d328:	bx	lr
    d32c:	ldr	r0, [pc, #3788]	; e200 <bt_compidtostr@@Base+0x5be0>
    d330:	add	r0, pc, r0
    d334:	bx	lr
    d338:	ldr	r0, [pc, #3780]	; e204 <bt_compidtostr@@Base+0x5be4>
    d33c:	add	r0, pc, r0
    d340:	bx	lr
    d344:	ldr	r0, [pc, #3772]	; e208 <bt_compidtostr@@Base+0x5be8>
    d348:	add	r0, pc, r0
    d34c:	bx	lr
    d350:	ldr	r0, [pc, #3764]	; e20c <bt_compidtostr@@Base+0x5bec>
    d354:	add	r0, pc, r0
    d358:	bx	lr
    d35c:	ldr	r0, [pc, #3756]	; e210 <bt_compidtostr@@Base+0x5bf0>
    d360:	add	r0, pc, r0
    d364:	bx	lr
    d368:	ldr	r0, [pc, #3748]	; e214 <bt_compidtostr@@Base+0x5bf4>
    d36c:	add	r0, pc, r0
    d370:	bx	lr
    d374:	ldr	r0, [pc, #3740]	; e218 <bt_compidtostr@@Base+0x5bf8>
    d378:	add	r0, pc, r0
    d37c:	bx	lr
    d380:	ldr	r0, [pc, #3732]	; e21c <bt_compidtostr@@Base+0x5bfc>
    d384:	add	r0, pc, r0
    d388:	bx	lr
    d38c:	ldr	r0, [pc, #3724]	; e220 <bt_compidtostr@@Base+0x5c00>
    d390:	add	r0, pc, r0
    d394:	bx	lr
    d398:	ldr	r0, [pc, #3716]	; e224 <bt_compidtostr@@Base+0x5c04>
    d39c:	add	r0, pc, r0
    d3a0:	bx	lr
    d3a4:	ldr	r0, [pc, #3708]	; e228 <bt_compidtostr@@Base+0x5c08>
    d3a8:	add	r0, pc, r0
    d3ac:	bx	lr
    d3b0:	ldr	r0, [pc, #3700]	; e22c <bt_compidtostr@@Base+0x5c0c>
    d3b4:	add	r0, pc, r0
    d3b8:	bx	lr
    d3bc:	ldr	r0, [pc, #3692]	; e230 <bt_compidtostr@@Base+0x5c10>
    d3c0:	add	r0, pc, r0
    d3c4:	bx	lr
    d3c8:	ldr	r0, [pc, #3684]	; e234 <bt_compidtostr@@Base+0x5c14>
    d3cc:	add	r0, pc, r0
    d3d0:	bx	lr
    d3d4:	ldr	r0, [pc, #3676]	; e238 <bt_compidtostr@@Base+0x5c18>
    d3d8:	add	r0, pc, r0
    d3dc:	bx	lr
    d3e0:	ldr	r0, [pc, #3668]	; e23c <bt_compidtostr@@Base+0x5c1c>
    d3e4:	add	r0, pc, r0
    d3e8:	bx	lr
    d3ec:	ldr	r0, [pc, #3660]	; e240 <bt_compidtostr@@Base+0x5c20>
    d3f0:	add	r0, pc, r0
    d3f4:	bx	lr
    d3f8:	ldr	r0, [pc, #3652]	; e244 <bt_compidtostr@@Base+0x5c24>
    d3fc:	add	r0, pc, r0
    d400:	bx	lr
    d404:	ldr	r0, [pc, #3644]	; e248 <bt_compidtostr@@Base+0x5c28>
    d408:	add	r0, pc, r0
    d40c:	bx	lr
    d410:	ldr	r0, [pc, #3636]	; e24c <bt_compidtostr@@Base+0x5c2c>
    d414:	add	r0, pc, r0
    d418:	bx	lr
    d41c:	ldr	r0, [pc, #3628]	; e250 <bt_compidtostr@@Base+0x5c30>
    d420:	add	r0, pc, r0
    d424:	bx	lr
    d428:	ldr	r0, [pc, #3620]	; e254 <bt_compidtostr@@Base+0x5c34>
    d42c:	add	r0, pc, r0
    d430:	bx	lr
    d434:	ldr	r0, [pc, #3612]	; e258 <bt_compidtostr@@Base+0x5c38>
    d438:	add	r0, pc, r0
    d43c:	bx	lr
    d440:	ldr	r0, [pc, #3604]	; e25c <bt_compidtostr@@Base+0x5c3c>
    d444:	add	r0, pc, r0
    d448:	bx	lr
    d44c:	ldr	r0, [pc, #3596]	; e260 <bt_compidtostr@@Base+0x5c40>
    d450:	add	r0, pc, r0
    d454:	bx	lr
    d458:	ldr	r0, [pc, #3588]	; e264 <bt_compidtostr@@Base+0x5c44>
    d45c:	add	r0, pc, r0
    d460:	bx	lr
    d464:	ldr	r0, [pc, #3580]	; e268 <bt_compidtostr@@Base+0x5c48>
    d468:	add	r0, pc, r0
    d46c:	bx	lr
    d470:	ldr	r0, [pc, #3572]	; e26c <bt_compidtostr@@Base+0x5c4c>
    d474:	add	r0, pc, r0
    d478:	bx	lr
    d47c:	ldr	r0, [pc, #3564]	; e270 <bt_compidtostr@@Base+0x5c50>
    d480:	add	r0, pc, r0
    d484:	bx	lr
    d488:	ldr	r0, [pc, #3556]	; e274 <bt_compidtostr@@Base+0x5c54>
    d48c:	add	r0, pc, r0
    d490:	bx	lr
    d494:	ldr	r0, [pc, #3548]	; e278 <bt_compidtostr@@Base+0x5c58>
    d498:	add	r0, pc, r0
    d49c:	bx	lr
    d4a0:	ldr	r0, [pc, #3540]	; e27c <bt_compidtostr@@Base+0x5c5c>
    d4a4:	add	r0, pc, r0
    d4a8:	bx	lr
    d4ac:	ldr	r0, [pc, #3532]	; e280 <bt_compidtostr@@Base+0x5c60>
    d4b0:	add	r0, pc, r0
    d4b4:	bx	lr
    d4b8:	ldr	r0, [pc, #3524]	; e284 <bt_compidtostr@@Base+0x5c64>
    d4bc:	add	r0, pc, r0
    d4c0:	bx	lr
    d4c4:	ldr	r0, [pc, #3516]	; e288 <bt_compidtostr@@Base+0x5c68>
    d4c8:	add	r0, pc, r0
    d4cc:	bx	lr
    d4d0:	ldr	r0, [pc, #3508]	; e28c <bt_compidtostr@@Base+0x5c6c>
    d4d4:	add	r0, pc, r0
    d4d8:	bx	lr
    d4dc:	ldr	r0, [pc, #3500]	; e290 <bt_compidtostr@@Base+0x5c70>
    d4e0:	add	r0, pc, r0
    d4e4:	bx	lr
    d4e8:	ldr	r0, [pc, #3492]	; e294 <bt_compidtostr@@Base+0x5c74>
    d4ec:	add	r0, pc, r0
    d4f0:	bx	lr
    d4f4:	ldr	r0, [pc, #3484]	; e298 <bt_compidtostr@@Base+0x5c78>
    d4f8:	add	r0, pc, r0
    d4fc:	bx	lr
    d500:	ldr	r0, [pc, #3476]	; e29c <bt_compidtostr@@Base+0x5c7c>
    d504:	add	r0, pc, r0
    d508:	bx	lr
    d50c:	ldr	r0, [pc, #3468]	; e2a0 <bt_compidtostr@@Base+0x5c80>
    d510:	add	r0, pc, r0
    d514:	bx	lr
    d518:	ldr	r0, [pc, #3460]	; e2a4 <bt_compidtostr@@Base+0x5c84>
    d51c:	add	r0, pc, r0
    d520:	bx	lr
    d524:	ldr	r0, [pc, #3452]	; e2a8 <bt_compidtostr@@Base+0x5c88>
    d528:	add	r0, pc, r0
    d52c:	bx	lr
    d530:	ldr	r0, [pc, #3444]	; e2ac <bt_compidtostr@@Base+0x5c8c>
    d534:	add	r0, pc, r0
    d538:	bx	lr
    d53c:	ldr	r0, [pc, #3436]	; e2b0 <bt_compidtostr@@Base+0x5c90>
    d540:	add	r0, pc, r0
    d544:	bx	lr
    d548:	ldr	r0, [pc, #3428]	; e2b4 <bt_compidtostr@@Base+0x5c94>
    d54c:	add	r0, pc, r0
    d550:	bx	lr
    d554:	ldr	r0, [pc, #3420]	; e2b8 <bt_compidtostr@@Base+0x5c98>
    d558:	add	r0, pc, r0
    d55c:	bx	lr
    d560:	ldr	r0, [pc, #3412]	; e2bc <bt_compidtostr@@Base+0x5c9c>
    d564:	add	r0, pc, r0
    d568:	bx	lr
    d56c:	ldr	r0, [pc, #3404]	; e2c0 <bt_compidtostr@@Base+0x5ca0>
    d570:	add	r0, pc, r0
    d574:	bx	lr
    d578:	ldr	r0, [pc, #3396]	; e2c4 <bt_compidtostr@@Base+0x5ca4>
    d57c:	add	r0, pc, r0
    d580:	bx	lr
    d584:	ldr	r0, [pc, #3388]	; e2c8 <bt_compidtostr@@Base+0x5ca8>
    d588:	add	r0, pc, r0
    d58c:	bx	lr
    d590:	ldr	r0, [pc, #3380]	; e2cc <bt_compidtostr@@Base+0x5cac>
    d594:	add	r0, pc, r0
    d598:	bx	lr
    d59c:	ldr	r0, [pc, #3372]	; e2d0 <bt_compidtostr@@Base+0x5cb0>
    d5a0:	add	r0, pc, r0
    d5a4:	bx	lr
    d5a8:	ldr	r0, [pc, #3364]	; e2d4 <bt_compidtostr@@Base+0x5cb4>
    d5ac:	add	r0, pc, r0
    d5b0:	bx	lr
    d5b4:	ldr	r0, [pc, #3356]	; e2d8 <bt_compidtostr@@Base+0x5cb8>
    d5b8:	add	r0, pc, r0
    d5bc:	bx	lr
    d5c0:	ldr	r0, [pc, #3348]	; e2dc <bt_compidtostr@@Base+0x5cbc>
    d5c4:	add	r0, pc, r0
    d5c8:	bx	lr
    d5cc:	ldr	r0, [pc, #3340]	; e2e0 <bt_compidtostr@@Base+0x5cc0>
    d5d0:	add	r0, pc, r0
    d5d4:	bx	lr
    d5d8:	ldr	r0, [pc, #3332]	; e2e4 <bt_compidtostr@@Base+0x5cc4>
    d5dc:	add	r0, pc, r0
    d5e0:	bx	lr
    d5e4:	ldr	r0, [pc, #3324]	; e2e8 <bt_compidtostr@@Base+0x5cc8>
    d5e8:	add	r0, pc, r0
    d5ec:	bx	lr
    d5f0:	ldr	r0, [pc, #3316]	; e2ec <bt_compidtostr@@Base+0x5ccc>
    d5f4:	add	r0, pc, r0
    d5f8:	bx	lr
    d5fc:	ldr	r0, [pc, #3308]	; e2f0 <bt_compidtostr@@Base+0x5cd0>
    d600:	add	r0, pc, r0
    d604:	bx	lr
    d608:	ldr	r0, [pc, #3300]	; e2f4 <bt_compidtostr@@Base+0x5cd4>
    d60c:	add	r0, pc, r0
    d610:	bx	lr
    d614:	ldr	r0, [pc, #3292]	; e2f8 <bt_compidtostr@@Base+0x5cd8>
    d618:	add	r0, pc, r0
    d61c:	bx	lr
    d620:	ldr	r0, [pc, #3284]	; e2fc <bt_compidtostr@@Base+0x5cdc>
    d624:	add	r0, pc, r0
    d628:	bx	lr
    d62c:	ldr	r0, [pc, #3276]	; e300 <bt_compidtostr@@Base+0x5ce0>
    d630:	add	r0, pc, r0
    d634:	bx	lr
    d638:	ldr	r0, [pc, #3268]	; e304 <bt_compidtostr@@Base+0x5ce4>
    d63c:	add	r0, pc, r0
    d640:	bx	lr
    d644:	ldr	r0, [pc, #3260]	; e308 <bt_compidtostr@@Base+0x5ce8>
    d648:	add	r0, pc, r0
    d64c:	bx	lr
    d650:	ldr	r0, [pc, #3252]	; e30c <bt_compidtostr@@Base+0x5cec>
    d654:	add	r0, pc, r0
    d658:	bx	lr
    d65c:	ldr	r0, [pc, #3244]	; e310 <bt_compidtostr@@Base+0x5cf0>
    d660:	add	r0, pc, r0
    d664:	bx	lr
    d668:	ldr	r0, [pc, #3236]	; e314 <bt_compidtostr@@Base+0x5cf4>
    d66c:	add	r0, pc, r0
    d670:	bx	lr
    d674:	ldr	r0, [pc, #3228]	; e318 <bt_compidtostr@@Base+0x5cf8>
    d678:	add	r0, pc, r0
    d67c:	bx	lr
    d680:	ldr	r0, [pc, #3220]	; e31c <bt_compidtostr@@Base+0x5cfc>
    d684:	add	r0, pc, r0
    d688:	bx	lr
    d68c:	ldr	r0, [pc, #3212]	; e320 <bt_compidtostr@@Base+0x5d00>
    d690:	add	r0, pc, r0
    d694:	bx	lr
    d698:	ldr	r0, [pc, #3204]	; e324 <bt_compidtostr@@Base+0x5d04>
    d69c:	add	r0, pc, r0
    d6a0:	bx	lr
    d6a4:	ldr	r0, [pc, #3196]	; e328 <bt_compidtostr@@Base+0x5d08>
    d6a8:	add	r0, pc, r0
    d6ac:	bx	lr
    d6b0:	ldr	r0, [pc, #3188]	; e32c <bt_compidtostr@@Base+0x5d0c>
    d6b4:	add	r0, pc, r0
    d6b8:	bx	lr
    d6bc:	ldr	r0, [pc, #3180]	; e330 <bt_compidtostr@@Base+0x5d10>
    d6c0:	add	r0, pc, r0
    d6c4:	bx	lr
    d6c8:	ldr	r0, [pc, #3172]	; e334 <bt_compidtostr@@Base+0x5d14>
    d6cc:	add	r0, pc, r0
    d6d0:	bx	lr
    d6d4:	ldr	r0, [pc, #3164]	; e338 <bt_compidtostr@@Base+0x5d18>
    d6d8:	add	r0, pc, r0
    d6dc:	bx	lr
    d6e0:	ldr	r0, [pc, #3156]	; e33c <bt_compidtostr@@Base+0x5d1c>
    d6e4:	add	r0, pc, r0
    d6e8:	bx	lr
    d6ec:	ldr	r0, [pc, #3148]	; e340 <bt_compidtostr@@Base+0x5d20>
    d6f0:	add	r0, pc, r0
    d6f4:	bx	lr
    d6f8:	ldr	r0, [pc, #3140]	; e344 <bt_compidtostr@@Base+0x5d24>
    d6fc:	add	r0, pc, r0
    d700:	bx	lr
    d704:	ldr	r0, [pc, #3132]	; e348 <bt_compidtostr@@Base+0x5d28>
    d708:	add	r0, pc, r0
    d70c:	bx	lr
    d710:	ldr	r0, [pc, #3124]	; e34c <bt_compidtostr@@Base+0x5d2c>
    d714:	add	r0, pc, r0
    d718:	bx	lr
    d71c:	ldr	r0, [pc, #3116]	; e350 <bt_compidtostr@@Base+0x5d30>
    d720:	add	r0, pc, r0
    d724:	bx	lr
    d728:	ldr	r0, [pc, #3108]	; e354 <bt_compidtostr@@Base+0x5d34>
    d72c:	add	r0, pc, r0
    d730:	bx	lr
    d734:	ldr	r0, [pc, #3100]	; e358 <bt_compidtostr@@Base+0x5d38>
    d738:	add	r0, pc, r0
    d73c:	bx	lr
    d740:	ldr	r0, [pc, #3092]	; e35c <bt_compidtostr@@Base+0x5d3c>
    d744:	add	r0, pc, r0
    d748:	bx	lr
    d74c:	ldr	r0, [pc, #3084]	; e360 <bt_compidtostr@@Base+0x5d40>
    d750:	add	r0, pc, r0
    d754:	bx	lr
    d758:	ldr	r0, [pc, #3076]	; e364 <bt_compidtostr@@Base+0x5d44>
    d75c:	add	r0, pc, r0
    d760:	bx	lr
    d764:	ldr	r0, [pc, #3068]	; e368 <bt_compidtostr@@Base+0x5d48>
    d768:	add	r0, pc, r0
    d76c:	bx	lr
    d770:	ldr	r0, [pc, #3060]	; e36c <bt_compidtostr@@Base+0x5d4c>
    d774:	add	r0, pc, r0
    d778:	bx	lr
    d77c:	ldr	r0, [pc, #3052]	; e370 <bt_compidtostr@@Base+0x5d50>
    d780:	add	r0, pc, r0
    d784:	bx	lr
    d788:	ldr	r0, [pc, #3044]	; e374 <bt_compidtostr@@Base+0x5d54>
    d78c:	add	r0, pc, r0
    d790:	bx	lr
    d794:	ldr	r0, [pc, #3036]	; e378 <bt_compidtostr@@Base+0x5d58>
    d798:	add	r0, pc, r0
    d79c:	bx	lr
    d7a0:	ldr	r0, [pc, #3028]	; e37c <bt_compidtostr@@Base+0x5d5c>
    d7a4:	add	r0, pc, r0
    d7a8:	bx	lr
    d7ac:	ldr	r0, [pc, #3020]	; e380 <bt_compidtostr@@Base+0x5d60>
    d7b0:	add	r0, pc, r0
    d7b4:	bx	lr
    d7b8:	ldr	r0, [pc, #3012]	; e384 <bt_compidtostr@@Base+0x5d64>
    d7bc:	add	r0, pc, r0
    d7c0:	bx	lr
    d7c4:	ldr	r0, [pc, #3004]	; e388 <bt_compidtostr@@Base+0x5d68>
    d7c8:	add	r0, pc, r0
    d7cc:	bx	lr
    d7d0:	ldr	r0, [pc, #2996]	; e38c <bt_compidtostr@@Base+0x5d6c>
    d7d4:	add	r0, pc, r0
    d7d8:	bx	lr
    d7dc:	ldr	r0, [pc, #2988]	; e390 <bt_compidtostr@@Base+0x5d70>
    d7e0:	add	r0, pc, r0
    d7e4:	bx	lr
    d7e8:	ldr	r0, [pc, #2980]	; e394 <bt_compidtostr@@Base+0x5d74>
    d7ec:	add	r0, pc, r0
    d7f0:	bx	lr
    d7f4:	ldr	r0, [pc, #2972]	; e398 <bt_compidtostr@@Base+0x5d78>
    d7f8:	add	r0, pc, r0
    d7fc:	bx	lr
    d800:	ldr	r0, [pc, #2964]	; e39c <bt_compidtostr@@Base+0x5d7c>
    d804:	add	r0, pc, r0
    d808:	bx	lr
    d80c:	ldr	r0, [pc, #2956]	; e3a0 <bt_compidtostr@@Base+0x5d80>
    d810:	add	r0, pc, r0
    d814:	bx	lr
    d818:	ldr	r0, [pc, #2948]	; e3a4 <bt_compidtostr@@Base+0x5d84>
    d81c:	add	r0, pc, r0
    d820:	bx	lr
    d824:	ldr	r0, [pc, #2940]	; e3a8 <bt_compidtostr@@Base+0x5d88>
    d828:	add	r0, pc, r0
    d82c:	bx	lr
    d830:	ldr	r0, [pc, #2932]	; e3ac <bt_compidtostr@@Base+0x5d8c>
    d834:	add	r0, pc, r0
    d838:	bx	lr
    d83c:	ldr	r0, [pc, #2924]	; e3b0 <bt_compidtostr@@Base+0x5d90>
    d840:	add	r0, pc, r0
    d844:	bx	lr
    d848:	ldr	r0, [pc, #2916]	; e3b4 <bt_compidtostr@@Base+0x5d94>
    d84c:	add	r0, pc, r0
    d850:	bx	lr
    d854:	ldr	r0, [pc, #2908]	; e3b8 <bt_compidtostr@@Base+0x5d98>
    d858:	add	r0, pc, r0
    d85c:	bx	lr
    d860:	ldr	r0, [pc, #2900]	; e3bc <bt_compidtostr@@Base+0x5d9c>
    d864:	add	r0, pc, r0
    d868:	bx	lr
    d86c:	ldr	r0, [pc, #2892]	; e3c0 <bt_compidtostr@@Base+0x5da0>
    d870:	add	r0, pc, r0
    d874:	bx	lr
    d878:	ldr	r0, [pc, #2884]	; e3c4 <bt_compidtostr@@Base+0x5da4>
    d87c:	add	r0, pc, r0
    d880:	bx	lr
    d884:	ldr	r0, [pc, #2876]	; e3c8 <bt_compidtostr@@Base+0x5da8>
    d888:	add	r0, pc, r0
    d88c:	bx	lr
    d890:	ldr	r0, [pc, #2868]	; e3cc <bt_compidtostr@@Base+0x5dac>
    d894:	add	r0, pc, r0
    d898:	bx	lr
    d89c:	ldr	r0, [pc, #2860]	; e3d0 <bt_compidtostr@@Base+0x5db0>
    d8a0:	add	r0, pc, r0
    d8a4:	bx	lr
    d8a8:	ldr	r0, [pc, #2852]	; e3d4 <bt_compidtostr@@Base+0x5db4>
    d8ac:	add	r0, pc, r0
    d8b0:	bx	lr
    d8b4:	ldr	r0, [pc, #2844]	; e3d8 <bt_compidtostr@@Base+0x5db8>
    d8b8:	add	r0, pc, r0
    d8bc:	bx	lr
    d8c0:	ldr	r0, [pc, #2836]	; e3dc <bt_compidtostr@@Base+0x5dbc>
    d8c4:	add	r0, pc, r0
    d8c8:	bx	lr
    d8cc:	ldr	r0, [pc, #2828]	; e3e0 <bt_compidtostr@@Base+0x5dc0>
    d8d0:	add	r0, pc, r0
    d8d4:	bx	lr
    d8d8:	ldr	r0, [pc, #2820]	; e3e4 <bt_compidtostr@@Base+0x5dc4>
    d8dc:	add	r0, pc, r0
    d8e0:	bx	lr
    d8e4:	ldr	r0, [pc, #2812]	; e3e8 <bt_compidtostr@@Base+0x5dc8>
    d8e8:	add	r0, pc, r0
    d8ec:	bx	lr
    d8f0:	ldr	r0, [pc, #2804]	; e3ec <bt_compidtostr@@Base+0x5dcc>
    d8f4:	add	r0, pc, r0
    d8f8:	bx	lr
    d8fc:	ldr	r0, [pc, #2796]	; e3f0 <bt_compidtostr@@Base+0x5dd0>
    d900:	add	r0, pc, r0
    d904:	bx	lr
    d908:	ldr	r0, [pc, #2788]	; e3f4 <bt_compidtostr@@Base+0x5dd4>
    d90c:	add	r0, pc, r0
    d910:	bx	lr
    d914:	ldr	r0, [pc, #2780]	; e3f8 <bt_compidtostr@@Base+0x5dd8>
    d918:	add	r0, pc, r0
    d91c:	bx	lr
    d920:	ldr	r0, [pc, #2772]	; e3fc <bt_compidtostr@@Base+0x5ddc>
    d924:	add	r0, pc, r0
    d928:	bx	lr
    d92c:	ldr	r0, [pc, #2764]	; e400 <bt_compidtostr@@Base+0x5de0>
    d930:	add	r0, pc, r0
    d934:	bx	lr
    d938:	ldr	r0, [pc, #2756]	; e404 <bt_compidtostr@@Base+0x5de4>
    d93c:	add	r0, pc, r0
    d940:	bx	lr
    d944:	ldr	r0, [pc, #2748]	; e408 <bt_compidtostr@@Base+0x5de8>
    d948:	add	r0, pc, r0
    d94c:	bx	lr
    d950:	ldr	r0, [pc, #2740]	; e40c <bt_compidtostr@@Base+0x5dec>
    d954:	add	r0, pc, r0
    d958:	bx	lr
    d95c:	ldr	r0, [pc, #2732]	; e410 <bt_compidtostr@@Base+0x5df0>
    d960:	add	r0, pc, r0
    d964:	bx	lr
    d968:	ldr	r0, [pc, #2724]	; e414 <bt_compidtostr@@Base+0x5df4>
    d96c:	add	r0, pc, r0
    d970:	bx	lr
    d974:	ldr	r0, [pc, #2716]	; e418 <bt_compidtostr@@Base+0x5df8>
    d978:	add	r0, pc, r0
    d97c:	bx	lr
    d980:	ldr	r0, [pc, #2708]	; e41c <bt_compidtostr@@Base+0x5dfc>
    d984:	add	r0, pc, r0
    d988:	bx	lr
    d98c:	ldr	r0, [pc, #2700]	; e420 <bt_compidtostr@@Base+0x5e00>
    d990:	add	r0, pc, r0
    d994:	bx	lr
    d998:	ldr	r0, [pc, #2692]	; e424 <bt_compidtostr@@Base+0x5e04>
    d99c:	add	r0, pc, r0
    d9a0:	bx	lr
    d9a4:	ldr	r0, [pc, #2684]	; e428 <bt_compidtostr@@Base+0x5e08>
    d9a8:	add	r0, pc, r0
    d9ac:	bx	lr
    d9b0:	ldr	r0, [pc, #2676]	; e42c <bt_compidtostr@@Base+0x5e0c>
    d9b4:	add	r0, pc, r0
    d9b8:	bx	lr
    d9bc:	ldr	r0, [pc, #2668]	; e430 <bt_compidtostr@@Base+0x5e10>
    d9c0:	add	r0, pc, r0
    d9c4:	bx	lr
    d9c8:	ldr	r0, [pc, #2660]	; e434 <bt_compidtostr@@Base+0x5e14>
    d9cc:	add	r0, pc, r0
    d9d0:	bx	lr
    d9d4:	ldr	r0, [pc, #2652]	; e438 <bt_compidtostr@@Base+0x5e18>
    d9d8:	add	r0, pc, r0
    d9dc:	bx	lr
    d9e0:	ldr	r0, [pc, #2644]	; e43c <bt_compidtostr@@Base+0x5e1c>
    d9e4:	add	r0, pc, r0
    d9e8:	bx	lr
    d9ec:	ldr	r0, [pc, #2636]	; e440 <bt_compidtostr@@Base+0x5e20>
    d9f0:	add	r0, pc, r0
    d9f4:	bx	lr
    d9f8:	ldr	r0, [pc, #2628]	; e444 <bt_compidtostr@@Base+0x5e24>
    d9fc:	add	r0, pc, r0
    da00:	bx	lr
    da04:	ldr	r0, [pc, #2620]	; e448 <bt_compidtostr@@Base+0x5e28>
    da08:	add	r0, pc, r0
    da0c:	bx	lr
    da10:	ldr	r0, [pc, #2612]	; e44c <bt_compidtostr@@Base+0x5e2c>
    da14:	add	r0, pc, r0
    da18:	bx	lr
    da1c:	ldr	r0, [pc, #2604]	; e450 <bt_compidtostr@@Base+0x5e30>
    da20:	add	r0, pc, r0
    da24:	bx	lr
    da28:	ldr	r0, [pc, #2596]	; e454 <bt_compidtostr@@Base+0x5e34>
    da2c:	add	r0, pc, r0
    da30:	bx	lr
    da34:	ldr	r0, [pc, #2588]	; e458 <bt_compidtostr@@Base+0x5e38>
    da38:	add	r0, pc, r0
    da3c:	bx	lr
    da40:	ldr	r0, [pc, #2580]	; e45c <bt_compidtostr@@Base+0x5e3c>
    da44:	add	r0, pc, r0
    da48:	bx	lr
    da4c:	ldr	r0, [pc, #2572]	; e460 <bt_compidtostr@@Base+0x5e40>
    da50:	add	r0, pc, r0
    da54:	bx	lr
    da58:	ldr	r0, [pc, #2564]	; e464 <bt_compidtostr@@Base+0x5e44>
    da5c:	add	r0, pc, r0
    da60:	bx	lr
    da64:	ldr	r0, [pc, #2556]	; e468 <bt_compidtostr@@Base+0x5e48>
    da68:	add	r0, pc, r0
    da6c:	bx	lr
    da70:	ldr	r0, [pc, #2548]	; e46c <bt_compidtostr@@Base+0x5e4c>
    da74:	add	r0, pc, r0
    da78:	bx	lr
    da7c:	ldr	r0, [pc, #2540]	; e470 <bt_compidtostr@@Base+0x5e50>
    da80:	add	r0, pc, r0
    da84:	bx	lr
    da88:	ldr	r0, [pc, #2532]	; e474 <bt_compidtostr@@Base+0x5e54>
    da8c:	add	r0, pc, r0
    da90:	bx	lr
    da94:	ldr	r0, [pc, #2524]	; e478 <bt_compidtostr@@Base+0x5e58>
    da98:	add	r0, pc, r0
    da9c:	bx	lr
    daa0:	ldr	r0, [pc, #2516]	; e47c <bt_compidtostr@@Base+0x5e5c>
    daa4:	add	r0, pc, r0
    daa8:	bx	lr
    daac:	ldr	r0, [pc, #2508]	; e480 <bt_compidtostr@@Base+0x5e60>
    dab0:	add	r0, pc, r0
    dab4:	bx	lr
    dab8:	ldr	r0, [pc, #2500]	; e484 <bt_compidtostr@@Base+0x5e64>
    dabc:	add	r0, pc, r0
    dac0:	bx	lr
    dac4:	ldr	r0, [pc, #2492]	; e488 <bt_compidtostr@@Base+0x5e68>
    dac8:	add	r0, pc, r0
    dacc:	bx	lr
    dad0:	ldr	r0, [pc, #2484]	; e48c <bt_compidtostr@@Base+0x5e6c>
    dad4:	add	r0, pc, r0
    dad8:	bx	lr
    dadc:	ldr	r0, [pc, #2476]	; e490 <bt_compidtostr@@Base+0x5e70>
    dae0:	add	r0, pc, r0
    dae4:	bx	lr
    dae8:	ldr	r0, [pc, #2468]	; e494 <bt_compidtostr@@Base+0x5e74>
    daec:	add	r0, pc, r0
    daf0:	bx	lr
    daf4:	ldr	r0, [pc, #2460]	; e498 <bt_compidtostr@@Base+0x5e78>
    daf8:	add	r0, pc, r0
    dafc:	bx	lr
    db00:	ldr	r0, [pc, #2452]	; e49c <bt_compidtostr@@Base+0x5e7c>
    db04:	add	r0, pc, r0
    db08:	bx	lr
    db0c:	ldr	r0, [pc, #2444]	; e4a0 <bt_compidtostr@@Base+0x5e80>
    db10:	add	r0, pc, r0
    db14:	bx	lr
    db18:	ldr	r0, [pc, #2436]	; e4a4 <bt_compidtostr@@Base+0x5e84>
    db1c:	add	r0, pc, r0
    db20:	bx	lr
    db24:	ldr	r0, [pc, #2428]	; e4a8 <bt_compidtostr@@Base+0x5e88>
    db28:	add	r0, pc, r0
    db2c:	bx	lr
    db30:	ldr	r0, [pc, #2420]	; e4ac <bt_compidtostr@@Base+0x5e8c>
    db34:	add	r0, pc, r0
    db38:	bx	lr
    db3c:	ldr	r0, [pc, #2412]	; e4b0 <bt_compidtostr@@Base+0x5e90>
    db40:	add	r0, pc, r0
    db44:	bx	lr
    db48:	ldr	r0, [pc, #2404]	; e4b4 <bt_compidtostr@@Base+0x5e94>
    db4c:	add	r0, pc, r0
    db50:	bx	lr
    db54:	ldr	r0, [pc, #2396]	; e4b8 <bt_compidtostr@@Base+0x5e98>
    db58:	add	r0, pc, r0
    db5c:	bx	lr
    db60:	ldr	r0, [pc, #2388]	; e4bc <bt_compidtostr@@Base+0x5e9c>
    db64:	add	r0, pc, r0
    db68:	bx	lr
    db6c:	ldr	r0, [pc, #2380]	; e4c0 <bt_compidtostr@@Base+0x5ea0>
    db70:	add	r0, pc, r0
    db74:	bx	lr
    db78:	ldr	r0, [pc, #2372]	; e4c4 <bt_compidtostr@@Base+0x5ea4>
    db7c:	add	r0, pc, r0
    db80:	bx	lr
    db84:	ldr	r0, [pc, #2364]	; e4c8 <bt_compidtostr@@Base+0x5ea8>
    db88:	add	r0, pc, r0
    db8c:	bx	lr
    db90:	ldr	r0, [pc, #2356]	; e4cc <bt_compidtostr@@Base+0x5eac>
    db94:	add	r0, pc, r0
    db98:	bx	lr
    db9c:	ldr	r0, [pc, #2348]	; e4d0 <bt_compidtostr@@Base+0x5eb0>
    dba0:	add	r0, pc, r0
    dba4:	bx	lr
    dba8:	ldr	r0, [pc, #2340]	; e4d4 <bt_compidtostr@@Base+0x5eb4>
    dbac:	add	r0, pc, r0
    dbb0:	bx	lr
    dbb4:	ldr	r0, [pc, #2332]	; e4d8 <bt_compidtostr@@Base+0x5eb8>
    dbb8:	add	r0, pc, r0
    dbbc:	bx	lr
    dbc0:	ldr	r0, [pc, #2324]	; e4dc <bt_compidtostr@@Base+0x5ebc>
    dbc4:	add	r0, pc, r0
    dbc8:	bx	lr
    dbcc:	ldr	r0, [pc, #2316]	; e4e0 <bt_compidtostr@@Base+0x5ec0>
    dbd0:	add	r0, pc, r0
    dbd4:	bx	lr
    dbd8:	ldr	r0, [pc, #2308]	; e4e4 <bt_compidtostr@@Base+0x5ec4>
    dbdc:	add	r0, pc, r0
    dbe0:	bx	lr
    dbe4:	ldr	r0, [pc, #2300]	; e4e8 <bt_compidtostr@@Base+0x5ec8>
    dbe8:	add	r0, pc, r0
    dbec:	bx	lr
    dbf0:	ldr	r0, [pc, #2292]	; e4ec <bt_compidtostr@@Base+0x5ecc>
    dbf4:	add	r0, pc, r0
    dbf8:	bx	lr
    dbfc:	ldr	r0, [pc, #2284]	; e4f0 <bt_compidtostr@@Base+0x5ed0>
    dc00:	add	r0, pc, r0
    dc04:	bx	lr
    dc08:	ldr	r0, [pc, #2276]	; e4f4 <bt_compidtostr@@Base+0x5ed4>
    dc0c:	add	r0, pc, r0
    dc10:	bx	lr
    dc14:	ldr	r0, [pc, #2268]	; e4f8 <bt_compidtostr@@Base+0x5ed8>
    dc18:	add	r0, pc, r0
    dc1c:	bx	lr
    dc20:	ldr	r0, [pc, #2260]	; e4fc <bt_compidtostr@@Base+0x5edc>
    dc24:	add	r0, pc, r0
    dc28:	bx	lr
    dc2c:	ldr	r0, [pc, #2252]	; e500 <bt_compidtostr@@Base+0x5ee0>
    dc30:	add	r0, pc, r0
    dc34:	bx	lr
    dc38:	ldr	r0, [pc, #2244]	; e504 <bt_compidtostr@@Base+0x5ee4>
    dc3c:	add	r0, pc, r0
    dc40:	bx	lr
    dc44:	ldr	r0, [pc, #2236]	; e508 <bt_compidtostr@@Base+0x5ee8>
    dc48:	add	r0, pc, r0
    dc4c:	bx	lr
    dc50:	ldr	r0, [pc, #2228]	; e50c <bt_compidtostr@@Base+0x5eec>
    dc54:	add	r0, pc, r0
    dc58:	bx	lr
    dc5c:	ldr	r0, [pc, #2220]	; e510 <bt_compidtostr@@Base+0x5ef0>
    dc60:	add	r0, pc, r0
    dc64:	bx	lr
    dc68:	ldr	r0, [pc, #2212]	; e514 <bt_compidtostr@@Base+0x5ef4>
    dc6c:	add	r0, pc, r0
    dc70:	bx	lr
    dc74:	ldr	r0, [pc, #2204]	; e518 <bt_compidtostr@@Base+0x5ef8>
    dc78:	add	r0, pc, r0
    dc7c:	bx	lr
    dc80:	ldr	r0, [pc, #2196]	; e51c <bt_compidtostr@@Base+0x5efc>
    dc84:	add	r0, pc, r0
    dc88:	bx	lr
    dc8c:	ldr	r0, [pc, #2188]	; e520 <bt_compidtostr@@Base+0x5f00>
    dc90:	add	r0, pc, r0
    dc94:	bx	lr
    dc98:	ldr	r0, [pc, #2180]	; e524 <bt_compidtostr@@Base+0x5f04>
    dc9c:	add	r0, pc, r0
    dca0:	bx	lr
    dca4:	ldr	r0, [pc, #2172]	; e528 <bt_compidtostr@@Base+0x5f08>
    dca8:	add	r0, pc, r0
    dcac:	bx	lr
    dcb0:	ldr	r0, [pc, #2164]	; e52c <bt_compidtostr@@Base+0x5f0c>
    dcb4:	add	r0, pc, r0
    dcb8:	bx	lr
    dcbc:	ldr	r0, [pc, #2156]	; e530 <bt_compidtostr@@Base+0x5f10>
    dcc0:	add	r0, pc, r0
    dcc4:	bx	lr
    dcc8:	ldr	r0, [pc, #2148]	; e534 <bt_compidtostr@@Base+0x5f14>
    dccc:	add	r0, pc, r0
    dcd0:	bx	lr
    dcd4:	ldr	r0, [pc, #2140]	; e538 <bt_compidtostr@@Base+0x5f18>
    dcd8:	add	r0, pc, r0
    dcdc:	bx	lr
    dce0:	ldr	r0, [pc, #2132]	; e53c <bt_compidtostr@@Base+0x5f1c>
    dce4:	add	r0, pc, r0
    dce8:	bx	lr
    dcec:	ldr	r0, [pc, #2124]	; e540 <bt_compidtostr@@Base+0x5f20>
    dcf0:	add	r0, pc, r0
    dcf4:	bx	lr
    dcf8:	ldr	r0, [pc, #2116]	; e544 <bt_compidtostr@@Base+0x5f24>
    dcfc:	add	r0, pc, r0
    dd00:	bx	lr
    dd04:	ldr	r0, [pc, #2108]	; e548 <bt_compidtostr@@Base+0x5f28>
    dd08:	add	r0, pc, r0
    dd0c:	bx	lr
    dd10:	ldr	r0, [pc, #2100]	; e54c <bt_compidtostr@@Base+0x5f2c>
    dd14:	add	r0, pc, r0
    dd18:	bx	lr
    dd1c:	ldr	r0, [pc, #2092]	; e550 <bt_compidtostr@@Base+0x5f30>
    dd20:	add	r0, pc, r0
    dd24:	bx	lr
    dd28:	ldr	r0, [pc, #2084]	; e554 <bt_compidtostr@@Base+0x5f34>
    dd2c:	add	r0, pc, r0
    dd30:	bx	lr
    dd34:	ldr	r0, [pc, #2076]	; e558 <bt_compidtostr@@Base+0x5f38>
    dd38:	add	r0, pc, r0
    dd3c:	bx	lr
    dd40:	ldr	r0, [pc, #2068]	; e55c <bt_compidtostr@@Base+0x5f3c>
    dd44:	add	r0, pc, r0
    dd48:	bx	lr
    dd4c:	ldr	r0, [pc, #2060]	; e560 <bt_compidtostr@@Base+0x5f40>
    dd50:	add	r0, pc, r0
    dd54:	bx	lr
    dd58:	ldr	r0, [pc, #2052]	; e564 <bt_compidtostr@@Base+0x5f44>
    dd5c:	add	r0, pc, r0
    dd60:	bx	lr
    dd64:	ldr	r0, [pc, #2044]	; e568 <bt_compidtostr@@Base+0x5f48>
    dd68:	add	r0, pc, r0
    dd6c:	bx	lr
    dd70:	ldr	r0, [pc, #2036]	; e56c <bt_compidtostr@@Base+0x5f4c>
    dd74:	add	r0, pc, r0
    dd78:	bx	lr
    dd7c:	ldr	r0, [pc, #2028]	; e570 <bt_compidtostr@@Base+0x5f50>
    dd80:	add	r0, pc, r0
    dd84:	bx	lr
    dd88:	ldr	r0, [pc, #2020]	; e574 <bt_compidtostr@@Base+0x5f54>
    dd8c:	add	r0, pc, r0
    dd90:	bx	lr
    dd94:	ldr	r0, [pc, #2012]	; e578 <bt_compidtostr@@Base+0x5f58>
    dd98:	add	r0, pc, r0
    dd9c:	bx	lr
    dda0:	ldr	r0, [pc, #2004]	; e57c <bt_compidtostr@@Base+0x5f5c>
    dda4:	add	r0, pc, r0
    dda8:	bx	lr
    ddac:	ldr	r0, [pc, #1996]	; e580 <bt_compidtostr@@Base+0x5f60>
    ddb0:	add	r0, pc, r0
    ddb4:	bx	lr
    ddb8:	ldr	r0, [pc, #1988]	; e584 <bt_compidtostr@@Base+0x5f64>
    ddbc:	add	r0, pc, r0
    ddc0:	bx	lr
    ddc4:	ldr	r0, [pc, #1980]	; e588 <bt_compidtostr@@Base+0x5f68>
    ddc8:	add	r0, pc, r0
    ddcc:	bx	lr
    ddd0:	ldr	r0, [pc, #1972]	; e58c <bt_compidtostr@@Base+0x5f6c>
    ddd4:	add	r0, pc, r0
    ddd8:	bx	lr
    dddc:	ldr	r0, [pc, #1964]	; e590 <bt_compidtostr@@Base+0x5f70>
    dde0:	add	r0, pc, r0
    dde4:	bx	lr
    dde8:	ldr	r0, [pc, #1956]	; e594 <bt_compidtostr@@Base+0x5f74>
    ddec:	add	r0, pc, r0
    ddf0:	bx	lr
    ddf4:	ldr	r0, [pc, #1948]	; e598 <bt_compidtostr@@Base+0x5f78>
    ddf8:	add	r0, pc, r0
    ddfc:	bx	lr
    de00:	ldr	r0, [pc, #1940]	; e59c <bt_compidtostr@@Base+0x5f7c>
    de04:	add	r0, pc, r0
    de08:	bx	lr
    de0c:	ldr	r0, [pc, #1932]	; e5a0 <bt_compidtostr@@Base+0x5f80>
    de10:	add	r0, pc, r0
    de14:	bx	lr
    de18:	ldr	r0, [pc, #1924]	; e5a4 <bt_compidtostr@@Base+0x5f84>
    de1c:	add	r0, pc, r0
    de20:	bx	lr
    de24:	ldr	r0, [pc, #1916]	; e5a8 <bt_compidtostr@@Base+0x5f88>
    de28:	add	r0, pc, r0
    de2c:	bx	lr
    de30:	ldr	r0, [pc, #1908]	; e5ac <bt_compidtostr@@Base+0x5f8c>
    de34:	add	r0, pc, r0
    de38:	bx	lr
    de3c:	ldr	r0, [pc, #1900]	; e5b0 <bt_compidtostr@@Base+0x5f90>
    de40:	add	r0, pc, r0
    de44:	bx	lr
    de48:	ldr	r0, [pc, #1892]	; e5b4 <bt_compidtostr@@Base+0x5f94>
    de4c:	add	r0, pc, r0
    de50:	bx	lr
    de54:	ldr	r0, [pc, #1884]	; e5b8 <bt_compidtostr@@Base+0x5f98>
    de58:	add	r0, pc, r0
    de5c:	bx	lr
    de60:	ldr	r0, [pc, #1876]	; e5bc <bt_compidtostr@@Base+0x5f9c>
    de64:	add	r0, pc, r0
    de68:	bx	lr
    de6c:	ldr	r0, [pc, #1868]	; e5c0 <bt_compidtostr@@Base+0x5fa0>
    de70:	add	r0, pc, r0
    de74:	bx	lr
    de78:	ldr	r0, [pc, #1860]	; e5c4 <bt_compidtostr@@Base+0x5fa4>
    de7c:	add	r0, pc, r0
    de80:	bx	lr
    de84:	ldr	r0, [pc, #1852]	; e5c8 <bt_compidtostr@@Base+0x5fa8>
    de88:	add	r0, pc, r0
    de8c:	bx	lr
    de90:	ldr	r0, [pc, #1844]	; e5cc <bt_compidtostr@@Base+0x5fac>
    de94:	add	r0, pc, r0
    de98:	bx	lr
    de9c:	ldr	r0, [pc, #1836]	; e5d0 <bt_compidtostr@@Base+0x5fb0>
    dea0:	add	r0, pc, r0
    dea4:	bx	lr
    dea8:	ldr	r0, [pc, #1828]	; e5d4 <bt_compidtostr@@Base+0x5fb4>
    deac:	add	r0, pc, r0
    deb0:	bx	lr
    deb4:	ldr	r0, [pc, #1820]	; e5d8 <bt_compidtostr@@Base+0x5fb8>
    deb8:	add	r0, pc, r0
    debc:	bx	lr
    dec0:	ldr	r0, [pc, #1812]	; e5dc <bt_compidtostr@@Base+0x5fbc>
    dec4:	add	r0, pc, r0
    dec8:	bx	lr
    decc:	ldr	r0, [pc, #1804]	; e5e0 <bt_compidtostr@@Base+0x5fc0>
    ded0:	add	r0, pc, r0
    ded4:	bx	lr
    ded8:	ldr	r0, [pc, #1796]	; e5e4 <bt_compidtostr@@Base+0x5fc4>
    dedc:	add	r0, pc, r0
    dee0:	bx	lr
    dee4:	ldr	r0, [pc, #1788]	; e5e8 <bt_compidtostr@@Base+0x5fc8>
    dee8:	add	r0, pc, r0
    deec:	bx	lr
    def0:	ldr	r0, [pc, #1780]	; e5ec <bt_compidtostr@@Base+0x5fcc>
    def4:	add	r0, pc, r0
    def8:	bx	lr
    defc:	ldr	r0, [pc, #1772]	; e5f0 <bt_compidtostr@@Base+0x5fd0>
    df00:	add	r0, pc, r0
    df04:	bx	lr
    df08:	ldr	r0, [pc, #1764]	; e5f4 <bt_compidtostr@@Base+0x5fd4>
    df0c:	add	r0, pc, r0
    df10:	bx	lr
    df14:	ldr	r0, [pc, #1756]	; e5f8 <bt_compidtostr@@Base+0x5fd8>
    df18:	add	r0, pc, r0
    df1c:	bx	lr
    df20:	ldr	r0, [pc, #1748]	; e5fc <bt_compidtostr@@Base+0x5fdc>
    df24:	add	r0, pc, r0
    df28:	bx	lr
    df2c:	ldr	r0, [pc, #1740]	; e600 <bt_compidtostr@@Base+0x5fe0>
    df30:	add	r0, pc, r0
    df34:	bx	lr
    df38:	ldr	r0, [pc, #1732]	; e604 <bt_compidtostr@@Base+0x5fe4>
    df3c:	add	r0, pc, r0
    df40:	bx	lr
    df44:	ldr	r0, [pc, #1724]	; e608 <bt_compidtostr@@Base+0x5fe8>
    df48:	add	r0, pc, r0
    df4c:	bx	lr
    df50:	ldr	r0, [pc, #1716]	; e60c <bt_compidtostr@@Base+0x5fec>
    df54:	add	r0, pc, r0
    df58:	bx	lr
    df5c:	ldr	r0, [pc, #1708]	; e610 <bt_compidtostr@@Base+0x5ff0>
    df60:	add	r0, pc, r0
    df64:	bx	lr
    df68:	ldr	r0, [pc, #1700]	; e614 <bt_compidtostr@@Base+0x5ff4>
    df6c:	add	r0, pc, r0
    df70:	bx	lr
    df74:	ldr	r0, [pc, #1692]	; e618 <bt_compidtostr@@Base+0x5ff8>
    df78:	add	r0, pc, r0
    df7c:	bx	lr
    df80:	ldr	r0, [pc, #1684]	; e61c <bt_compidtostr@@Base+0x5ffc>
    df84:	add	r0, pc, r0
    df88:	bx	lr
    df8c:	ldr	r0, [pc, #1676]	; e620 <bt_compidtostr@@Base+0x6000>
    df90:	add	r0, pc, r0
    df94:	bx	lr
    df98:	ldr	r0, [pc, #1668]	; e624 <bt_compidtostr@@Base+0x6004>
    df9c:	add	r0, pc, r0
    dfa0:	bx	lr
    dfa4:	ldr	r0, [pc, #1660]	; e628 <bt_compidtostr@@Base+0x6008>
    dfa8:	add	r0, pc, r0
    dfac:	bx	lr
    dfb0:	ldr	r0, [pc, #1652]	; e62c <bt_compidtostr@@Base+0x600c>
    dfb4:	add	r0, pc, r0
    dfb8:	bx	lr
    dfbc:	ldr	r0, [pc, #1644]	; e630 <bt_compidtostr@@Base+0x6010>
    dfc0:	add	r0, pc, r0
    dfc4:	bx	lr
    dfc8:	ldr	r0, [pc, #1636]	; e634 <bt_compidtostr@@Base+0x6014>
    dfcc:	add	r0, pc, r0
    dfd0:	bx	lr
    dfd4:	ldr	r0, [pc, #1628]	; e638 <bt_compidtostr@@Base+0x6018>
    dfd8:	add	r0, pc, r0
    dfdc:	bx	lr
    dfe0:	ldr	r0, [pc, #1620]	; e63c <bt_compidtostr@@Base+0x601c>
    dfe4:	add	r0, pc, r0
    dfe8:	bx	lr
    dfec:	ldr	r0, [pc, #1612]	; e640 <bt_compidtostr@@Base+0x6020>
    dff0:	add	r0, pc, r0
    dff4:	bx	lr
    dff8:	ldr	r0, [pc, #1604]	; e644 <bt_compidtostr@@Base+0x6024>
    dffc:	add	r0, pc, r0
    e000:	bx	lr
    e004:	ldr	r0, [pc, #1596]	; e648 <bt_compidtostr@@Base+0x6028>
    e008:	add	r0, pc, r0
    e00c:	bx	lr
    e010:	ldr	r0, [pc, #1588]	; e64c <bt_compidtostr@@Base+0x602c>
    e014:	add	r0, pc, r0
    e018:	bx	lr
    e01c:	ldr	r0, [pc, #1580]	; e650 <bt_compidtostr@@Base+0x6030>
    e020:	add	r0, pc, r0
    e024:	bx	lr
    e028:	ldr	r0, [pc, #1572]	; e654 <bt_compidtostr@@Base+0x6034>
    e02c:	add	r0, pc, r0
    e030:	bx	lr
    e034:	ldr	r0, [pc, #1564]	; e658 <bt_compidtostr@@Base+0x6038>
    e038:	add	r0, pc, r0
    e03c:	bx	lr
    e040:	ldr	r0, [pc, #1556]	; e65c <bt_compidtostr@@Base+0x603c>
    e044:	add	r0, pc, r0
    e048:	bx	lr
    e04c:	ldr	r0, [pc, #1548]	; e660 <bt_compidtostr@@Base+0x6040>
    e050:	add	r0, pc, r0
    e054:	bx	lr
    e058:	ldr	r0, [pc, #1540]	; e664 <bt_compidtostr@@Base+0x6044>
    e05c:	add	r0, pc, r0
    e060:	bx	lr
    e064:	ldr	r0, [pc, #1532]	; e668 <bt_compidtostr@@Base+0x6048>
    e068:	add	r0, pc, r0
    e06c:	bx	lr
    e070:	ldr	r0, [pc, #1524]	; e66c <bt_compidtostr@@Base+0x604c>
    e074:	add	r0, pc, r0
    e078:	bx	lr
    e07c:	ldr	r0, [pc, #1516]	; e670 <bt_compidtostr@@Base+0x6050>
    e080:	add	r0, pc, r0
    e084:	bx	lr
    e088:	ldr	r0, [pc, #1508]	; e674 <bt_compidtostr@@Base+0x6054>
    e08c:	add	r0, pc, r0
    e090:	bx	lr
    e094:	ldr	r0, [pc, #1500]	; e678 <bt_compidtostr@@Base+0x6058>
    e098:	add	r0, pc, r0
    e09c:	bx	lr
    e0a0:	ldr	r0, [pc, #1492]	; e67c <bt_compidtostr@@Base+0x605c>
    e0a4:	add	r0, pc, r0
    e0a8:	bx	lr
    e0ac:	ldr	r0, [pc, #1484]	; e680 <bt_compidtostr@@Base+0x6060>
    e0b0:	add	r0, pc, r0
    e0b4:	bx	lr
    e0b8:	ldr	r0, [pc, #1476]	; e684 <bt_compidtostr@@Base+0x6064>
    e0bc:	add	r0, pc, r0
    e0c0:	bx	lr
    e0c4:	ldr	r0, [pc, #1468]	; e688 <bt_compidtostr@@Base+0x6068>
    e0c8:	add	r0, pc, r0
    e0cc:	bx	lr
    e0d0:	ldr	r0, [pc, #1460]	; e68c <bt_compidtostr@@Base+0x606c>
    e0d4:	add	r0, pc, r0
    e0d8:	bx	lr
    e0dc:	ldr	r0, [pc, #1452]	; e690 <bt_compidtostr@@Base+0x6070>
    e0e0:	add	r0, pc, r0
    e0e4:	bx	lr
    e0e8:	ldr	r0, [pc, #1444]	; e694 <bt_compidtostr@@Base+0x6074>
    e0ec:	add	r0, pc, r0
    e0f0:	bx	lr
    e0f4:	ldr	r0, [pc, #1436]	; e698 <bt_compidtostr@@Base+0x6078>
    e0f8:	add	r0, pc, r0
    e0fc:	bx	lr
    e100:	ldr	r0, [pc, #1428]	; e69c <bt_compidtostr@@Base+0x607c>
    e104:	add	r0, pc, r0
    e108:	bx	lr
    e10c:	ldr	r0, [pc, #1420]	; e6a0 <bt_compidtostr@@Base+0x6080>
    e110:	add	r0, pc, r0
    e114:	bx	lr
    e118:	ldr	r0, [pc, #1412]	; e6a4 <bt_compidtostr@@Base+0x6084>
    e11c:	add	r0, pc, r0
    e120:	bx	lr
    e124:	ldr	r0, [pc, #1404]	; e6a8 <bt_compidtostr@@Base+0x6088>
    e128:	add	r0, pc, r0
    e12c:	bx	lr
    e130:	ldr	r0, [pc, #1396]	; e6ac <bt_compidtostr@@Base+0x608c>
    e134:	add	r0, pc, r0
    e138:	bx	lr
    e13c:	ldr	r0, [pc, #1388]	; e6b0 <bt_compidtostr@@Base+0x6090>
    e140:	add	r0, pc, r0
    e144:	bx	lr
    e148:	ldr	r0, [pc, #1380]	; e6b4 <bt_compidtostr@@Base+0x6094>
    e14c:	add	r0, pc, r0
    e150:	bx	lr
    e154:	ldr	r0, [pc, #1372]	; e6b8 <bt_compidtostr@@Base+0x6098>
    e158:	add	r0, pc, r0
    e15c:	bx	lr
    e160:	ldr	r0, [pc, #1364]	; e6bc <bt_compidtostr@@Base+0x609c>
    e164:	add	r0, pc, r0
    e168:	bx	lr
    e16c:	andeq	r9, r0, r4, lsl r3
    e170:	andeq	r9, r0, r8, ror #5
    e174:	andeq	r9, r0, r8, ror #5
    e178:	andeq	r9, r0, ip, lsr #6
    e17c:	andeq	r9, r0, r0, lsr r3
    e180:	andeq	r9, r0, r0, lsl #7
    e184:	andeq	r9, r0, ip, asr r3
    e188:	andeq	r9, r0, ip, asr r3
    e18c:	andeq	r9, r0, r4, ror r3
    e190:	andeq	r9, r0, ip, asr r3
    e194:	andeq	r9, r0, ip, ror #6
    e198:	andeq	r9, r0, ip, asr #12
    e19c:	ldrdeq	r9, [r0], -r8
    e1a0:	andeq	r9, r0, r0, lsr #8
    e1a4:	andeq	r9, r0, r8, lsr #7
    e1a8:	andeq	r9, r0, r4, lsl #7
    e1ac:	andeq	r9, r0, r4, lsl #7
    e1b0:			; <UNDEFINED> instruction: 0x000093b0
    e1b4:	andeq	r9, r0, r4, asr #7
    e1b8:	andeq	r9, r0, r4, lsr #8
    e1bc:	strdeq	r9, [r0], -r8
    e1c0:	andeq	r9, r0, r0, lsl #8
    e1c4:	andeq	r9, r0, ip, lsr #8
    e1c8:	andeq	r9, r0, r4, lsr r4
    e1cc:	andeq	r9, r0, r8, lsr #10
    e1d0:			; <UNDEFINED> instruction: 0x000094b0
    e1d4:	andeq	r9, r0, r4, asr #8
    e1d8:	andeq	r9, r0, r8, ror r4
    e1dc:	andeq	r9, r0, ip, asr #9
    e1e0:	ldrdeq	r9, [r0], -r4
    e1e4:	andeq	r9, r0, r0, lsr #10
    e1e8:	andeq	r9, r0, r8, ror #9
    e1ec:	strdeq	r9, [r0], -r8
    e1f0:	andeq	r9, r0, r8, lsl r5
    e1f4:	andeq	r9, r0, r8, lsr #10
    e1f8:	andeq	r9, r0, ip, asr #12
    e1fc:			; <UNDEFINED> instruction: 0x000095b8
    e200:	andeq	r9, r0, ip, asr r5
    e204:	andeq	r9, r0, r4, lsr #10
    e208:	andeq	r9, r0, r0, lsr #10
    e20c:	andeq	r9, r0, r4, ror #10
    e210:	andeq	r9, r0, r8, ror #10
    e214:			; <UNDEFINED> instruction: 0x000095b4
    e218:	andeq	r9, r0, r4, lsl #11
    e21c:	muleq	r0, r0, r5
    e220:	andeq	r9, r0, r8, lsr #11
    e224:			; <UNDEFINED> instruction: 0x000095bc
    e228:	andeq	r9, r0, r0, lsl #13
    e22c:	andeq	r9, r0, r4, lsl #12
    e230:	andeq	r9, r0, r0, ror #11
    e234:	andeq	r9, r0, r4, ror #11
    e238:	andeq	r9, r0, ip, lsr #12
    e23c:	andeq	r9, r0, r0, lsr r6
    e240:	andeq	r9, r0, r8, ror r6
    e244:	andeq	r9, r0, r8, asr #12
    e248:	andeq	r9, r0, r8, asr #12
    e24c:	andeq	r9, r0, r4, lsl #13
    e250:	andeq	r9, r0, ip, asr r6
    e254:	andeq	r9, r0, ip, ror r6
    e258:	strdeq	r9, [r0], -r4
    e25c:	strdeq	r9, [r0], -r4
    e260:	andeq	r9, r0, ip, ror #14
    e264:	strdeq	r9, [r0], -r4
    e268:	andeq	r9, r0, r8, lsr #13
    e26c:	andeq	r9, r0, ip, ror r6
    e270:	andeq	r9, r0, r0, lsl #13
    e274:	muleq	r0, ip, r6
    e278:	andeq	r9, r0, ip, lsr #13
    e27c:	andeq	r9, r0, r4, ror #13
    e280:	andeq	r9, r0, r0, asr #13
    e284:	andeq	r9, r0, r0, asr #13
    e288:	ldrdeq	r9, [r0], -r8
    e28c:	ldrdeq	r9, [r0], -ip
    e290:	muleq	r0, r4, r7
    e294:	andeq	r9, r0, r0, lsr r7
    e298:	strdeq	r9, [r0], -r0
    e29c:	strdeq	r9, [r0], -ip
    e2a0:	andeq	r9, r0, r4, lsr r7
    e2a4:	andeq	r9, r0, r0, asr #14
    e2a8:	muleq	r0, r0, r7
    e2ac:	andeq	r9, r0, r4, ror #14
    e2b0:	andeq	r9, r0, r0, ror #14
    e2b4:			; <UNDEFINED> instruction: 0x000097bc
    e2b8:	ldrdeq	r9, [r0], -r0
    e2bc:	andeq	r9, r0, r4, lsl r9
    e2c0:	andeq	r9, r0, ip, ror #16
    e2c4:	andeq	r9, r0, r4, lsl #16
    e2c8:	andeq	r9, r0, r8, asr #15
    e2cc:	andeq	r9, r0, ip, asr #15
    e2d0:	andeq	r9, r0, r8, lsl #16
    e2d4:	andeq	r9, r0, r4, lsl r8
    e2d8:	andeq	r9, r0, ip, asr r8
    e2dc:	andeq	r9, r0, r0, lsr r8
    e2e0:	andeq	r9, r0, r4, lsr r8
    e2e4:	andeq	r9, r0, r0, ror r8
    e2e8:	andeq	r9, r0, ip, ror r8
    e2ec:	andeq	r9, r0, r8, lsr #18
    e2f0:	andeq	r9, r0, r4, asr #17
    e2f4:	muleq	r0, ip, r8
    e2f8:	andeq	r9, r0, r0, lsr #17
    e2fc:	andeq	r9, r0, ip, asr #17
    e300:	ldrdeq	r9, [r0], -ip
    e304:	andeq	r9, r0, r0, asr r9
    e308:	andeq	r9, r0, r0, lsl #18
    e30c:	andeq	r9, r0, r0, lsr #18
    e310:	andeq	r9, r0, r4, ror r9
    e314:	andeq	r9, r0, r8, asr r9
    e318:	andeq	r9, r0, ip, ror r9
    e31c:	andeq	r9, r0, ip, ror ip
    e320:	ldrdeq	r9, [r0], -r0
    e324:	andeq	r9, r0, r0, lsr sl
    e328:	ldrdeq	r9, [r0], -r8
    e32c:	andeq	r9, r0, r0, lsr #19
    e330:	andeq	r9, r0, ip, lsr #19
    e334:	andeq	r9, r0, ip, ror #19
    e338:	andeq	r9, r0, r4, ror #19
    e33c:	andeq	r9, r0, ip, lsr #20
    e340:	andeq	r9, r0, r0, lsl #20
    e344:	andeq	r9, r0, r0, lsl #20
    e348:	andeq	r9, r0, r4, lsr sl
    e34c:	andeq	r9, r0, r0, lsr sl
    e350:	andeq	r9, r0, r8, lsl #22
    e354:	muleq	r0, ip, sl
    e358:	andeq	r9, r0, r0, asr sl
    e35c:	andeq	r9, r0, r0, ror #20
    e360:	andeq	r9, r0, ip, lsr #21
    e364:			; <UNDEFINED> instruction: 0x00009ab8
    e368:	andeq	r9, r0, ip, lsr fp
    e36c:	ldrdeq	r9, [r0], -ip
    e370:	andeq	r9, r0, r0, ror #21
    e374:	andeq	r9, r0, r8, lsr fp
    e378:	andeq	r9, r0, r8, asr #22
    e37c:	muleq	r0, r8, ip
    e380:	strdeq	r9, [r0], -r4
    e384:	andeq	r9, r0, ip, lsl #23
    e388:	andeq	r9, r0, ip, asr fp
    e38c:	andeq	r9, r0, r4, ror #22
    e390:	muleq	r0, ip, fp
    e394:	andeq	r9, r0, r4, lsr #23
    e398:	andeq	r9, r0, r8, ror #23
    e39c:			; <UNDEFINED> instruction: 0x00009bbc
    e3a0:			; <UNDEFINED> instruction: 0x00009bbc
    e3a4:	strdeq	r9, [r0], -r0
    e3a8:	strdeq	r9, [r0], -r4
    e3ac:	andeq	r9, r0, r0, ror #25
    e3b0:	andeq	r9, r0, r8, ror #24
    e3b4:	andeq	r9, r0, r0, lsr #24
    e3b8:	andeq	r9, r0, r0, asr #24
    e3bc:	andeq	r9, r0, r8, lsl #25
    e3c0:	andeq	r9, r0, ip, lsl #25
    e3c4:	ldrdeq	r9, [r0], -ip
    e3c8:			; <UNDEFINED> instruction: 0x00009cb4
    e3cc:			; <UNDEFINED> instruction: 0x00009cb8
    e3d0:	andeq	r9, r0, ip, ror #25
    e3d4:	andeq	r9, r0, r4, asr #25
    e3d8:	andeq	r9, r0, r4, ror #25
    e3dc:	andeq	sl, r0, r4, asr #13
    e3e0:	muleq	r0, r8, r1
    e3e4:	andeq	r9, r0, r4, asr pc
    e3e8:	andeq	r9, r0, r4, lsl lr
    e3ec:	andeq	r9, r0, r0, asr sp
    e3f0:	strdeq	r9, [r0], -r8
    e3f4:	ldrdeq	r9, [r0], -r0
    e3f8:	ldrdeq	r9, [r0], -r4
    e3fc:	strdeq	r9, [r0], -r8
    e400:	strdeq	r9, [r0], -r8
    e404:	andeq	r9, r0, r4, ror #26
    e408:	andeq	r9, r0, r0, lsr #26
    e40c:	andeq	r9, r0, r0, lsr sp
    e410:	andeq	r9, r0, r4, ror sp
    e414:	andeq	r9, r0, ip, ror sp
    e418:	andeq	r9, r0, r0, lsl lr
    e41c:			; <UNDEFINED> instruction: 0x00009db4
    e420:	andeq	r9, r0, ip, lsl #27
    e424:	muleq	r0, r0, sp
    e428:	andeq	r9, r0, r0, asr #27
    e42c:	andeq	r9, r0, r0, asr #27
    e430:	andeq	r9, r0, r8, lsr #28
    e434:	andeq	r9, r0, r0, ror #27
    e438:	andeq	r9, r0, r8, ror #27
    e43c:	andeq	r9, r0, r8, lsr #28
    e440:	andeq	r9, r0, r8, lsr #28
    e444:	andeq	r9, r0, r0, lsr pc
    e448:			; <UNDEFINED> instruction: 0x00009ebc
    e44c:	andeq	r9, r0, r8, asr lr
    e450:	andeq	r9, r0, ip, lsr #28
    e454:	andeq	r9, r0, r4, lsr lr
    e458:	andeq	r9, r0, r8, asr lr
    e45c:	andeq	r9, r0, r8, ror #28
    e460:	andeq	r9, r0, r8, lsr #29
    e464:	andeq	r9, r0, r4, lsl #29
    e468:	andeq	r9, r0, r8, lsl #29
    e46c:	andeq	r9, r0, ip, lsl #3
    e470:	muleq	r0, r8, lr
    e474:	andeq	r9, r0, r4, asr #30
    e478:	ldrdeq	r9, [r0], -ip
    e47c:	andeq	r9, r0, ip, lsr #29
    e480:			; <UNDEFINED> instruction: 0x00009eb8
    e484:	andeq	r9, r0, r4, ror #29
    e488:	strdeq	r9, [r0], -r4
    e48c:	andeq	r9, r0, r8, asr pc
    e490:	andeq	r9, r0, ip, lsl pc
    e494:	andeq	r9, r0, r4, lsr #30
    e498:	andeq	r9, r0, r0, asr pc
    e49c:	andeq	r9, r0, ip, lsr pc
    e4a0:	andeq	r9, r0, r0, asr #30
    e4a4:	andeq	sl, r0, r8, ror #3
    e4a8:	strheq	sl, [r0], -r0
    e4ac:	strdeq	r9, [r0], -r8
    e4b0:	andeq	r9, r0, r8, lsl #31
    e4b4:	andeq	r9, r0, r0, asr pc
    e4b8:	andeq	r9, r0, r4, asr pc
    e4bc:	andeq	r9, r0, r8, lsl #31
    e4c0:	andeq	r9, r0, r0, lsr #31
    e4c4:	andeq	sl, r0, r8
    e4c8:	ldrdeq	r9, [r0], -r0
    e4cc:	ldrdeq	r9, [r0], -ip
    e4d0:	andeq	sl, r0, ip
    e4d4:	andeq	sl, r0, r0, lsr #32
    e4d8:	muleq	r0, r8, r0
    e4dc:	andeq	sl, r0, r8, asr #32
    e4e0:	andeq	sl, r0, r0, lsr #32
    e4e4:	andeq	sl, r0, r8, lsr #32
    e4e8:	andeq	sl, r0, r8, asr #32
    e4ec:	andeq	sl, r0, r0, asr r0
    e4f0:	strheq	sl, [r0], -ip
    e4f4:	andeq	sl, r0, r0, ror r0
    e4f8:	muleq	r0, r0, r0
    e4fc:	strheq	sl, [r0], -r4
    e500:	strheq	sl, [r0], -ip
    e504:	andeq	sl, r0, ip, ror #3
    e508:	andeq	sl, r0, r0, lsr r1
    e50c:	andeq	sl, r0, r4, ror #1
    e510:	strheq	sl, [r0], -ip
    e514:	andeq	sl, r0, r0, asr #1
    e518:	ldrdeq	sl, [r0], -ip
    e51c:	andeq	sl, r0, r4, ror #1
    e520:	andeq	sl, r0, ip, lsr r1
    e524:	strdeq	sl, [r0], -ip
    e528:	andeq	sl, r0, r8, lsl r1
    e52c:	andeq	sl, r0, r8, asr r1
    e530:	andeq	sl, r0, r4, asr r1
    e534:	strdeq	sl, [r0], -r8
    e538:	muleq	r0, r4, r1
    e53c:	andeq	sl, r0, ip, ror #2
    e540:	andeq	sl, r0, r0, ror r1
    e544:	muleq	r0, ip, r1
    e548:	andeq	sl, r0, r8, lsr #3
    e54c:	andeq	sl, r0, ip, lsl r2
    e550:	andeq	sl, r0, ip, ror #3
    e554:	strdeq	sl, [r0], -r0
    e558:	andeq	sl, r0, r8, lsr #4
    e55c:	andeq	sl, r0, r4, lsl #4
    e560:	andeq	sl, r0, r4, lsr #4
    e564:	andeq	sl, r0, r4, asr #14
    e568:	andeq	sl, r0, r8, ror r4
    e56c:	andeq	sl, r0, r0, lsr #6
    e570:	andeq	sl, r0, r0, lsl #5
    e574:	andeq	sl, r0, r4, lsr r2
    e578:	andeq	sl, r0, ip, lsl #4
    e57c:	andeq	sl, r0, ip, lsl #4
    e580:	andeq	sl, r0, r4, lsr #4
    e584:	andeq	sl, r0, r8, lsr #4
    e588:	andeq	sl, r0, r4, ror r2
    e58c:	andeq	sl, r0, r4, asr #4
    e590:	andeq	sl, r0, r8, asr #4
    e594:	andeq	sl, r0, ip, ror #4
    e598:	andeq	sl, r0, r8, lsl #5
    e59c:	andeq	sl, r0, r4, asr #6
    e5a0:	andeq	sl, r0, r4, ror #5
    e5a4:	andeq	sl, r0, ip, lsr #5
    e5a8:			; <UNDEFINED> instruction: 0x0000a2b4
    e5ac:	andeq	sl, r0, r4, ror #5
    e5b0:	strdeq	sl, [r0], -r8
    e5b4:	andeq	sl, r0, ip, asr #6
    e5b8:	andeq	sl, r0, r4, lsr #6
    e5bc:	andeq	sl, r0, r4, lsr #6
    e5c0:	andeq	sl, r0, r8, asr #6
    e5c4:	andeq	sl, r0, r8, asr r3
    e5c8:	andeq	sl, r0, ip, lsr #9
    e5cc:	andeq	sl, r0, r0, lsl #8
    e5d0:	andeq	sl, r0, r4, lsl #7
    e5d4:	andeq	sl, r0, r8, asr #6
    e5d8:	andeq	sl, r0, ip, asr r3
    e5dc:	muleq	r0, ip, r3
    e5e0:			; <UNDEFINED> instruction: 0x0000a3b0
    e5e4:	andeq	sl, r0, ip, ror #7
    e5e8:	andeq	sl, r0, r4, asr #7
    e5ec:	andeq	sl, r0, r4, asr #7
    e5f0:	andeq	sl, r0, ip, lsl #8
    e5f4:	andeq	sl, r0, r8, lsl r4
    e5f8:	andeq	sl, r0, r4, asr #9
    e5fc:	andeq	sl, r0, ip, asr r4
    e600:	andeq	sl, r0, r4, lsr #8
    e604:	andeq	sl, r0, r0, lsr r4
    e608:	andeq	sl, r0, r4, ror #8
    e60c:	andeq	sl, r0, r0, ror r4
    e610:	ldrdeq	sl, [r0], -r4
    e614:	muleq	r0, r4, r4
    e618:	andeq	sl, r0, r8, lsr #9
    e61c:	andeq	sl, r0, r0, ror #9
    e620:			; <UNDEFINED> instruction: 0x0000a4b4
    e624:	ldrdeq	sl, [r0], -r4
    e628:	andeq	sl, r0, r0, lsl #15
    e62c:	andeq	sl, r0, r0, lsl r6
    e630:	andeq	sl, r0, r8, ror r5
    e634:	andeq	sl, r0, ip, lsl #10
    e638:	andeq	sl, r0, r4, ror #9
    e63c:	andeq	sl, r0, r4, ror #9
    e640:	andeq	sl, r0, r0, lsr #10
    e644:	andeq	sl, r0, r4, lsr #10
    e648:	andeq	sl, r0, r4, ror r5
    e64c:	andeq	sl, r0, r4, asr #10
    e650:	andeq	sl, r0, r8, asr #10
    e654:	andeq	sl, r0, r0, ror r5
    e658:	andeq	sl, r0, r0, ror r5
    e65c:	andeq	sl, r0, r8, lsr #12
    e660:	andeq	sl, r0, r8, ror #11
    e664:	muleq	r0, r4, r5
    e668:			; <UNDEFINED> instruction: 0x0000a5b4
    e66c:	andeq	sl, r0, r4, ror #11
    e670:	andeq	sl, r0, r4, ror #11
    e674:	andeq	sl, r0, r8, asr r6
    e678:	andeq	sl, r0, r0, lsl #12
    e67c:	andeq	sl, r0, r8, lsl r6
    e680:	andeq	sl, r0, r0, asr r6
    e684:	andeq	sl, r0, r4, asr r6
    e688:	muleq	r0, r8, r7
    e68c:	andeq	sl, r0, r8, ror #13
    e690:	muleq	r0, r4, r6
    e694:	andeq	sl, r0, r4, ror #12
    e698:	andeq	sl, r0, r0, ror #12
    e69c:	muleq	r0, r4, r6
    e6a0:	andeq	sl, r0, r0, lsr #13
    e6a4:	strdeq	sl, [r0], -r4
    e6a8:			; <UNDEFINED> instruction: 0x0000a6bc
    e6ac:	andeq	sl, r0, r0, asr #13
    e6b0:	strdeq	sl, [r0], -r8
    e6b4:	strdeq	sl, [r0], -ip
    e6b8:	andeq	sl, r0, r0, asr #15
    e6bc:	andeq	sl, r0, r4, asr r7
    e6c0:	andeq	sl, r0, ip, lsl #3
    e6c4:	muleq	r0, ip, r1
    e6c8:	andeq	sl, r0, r8, ror #3
    e6cc:	andeq	sl, r0, ip, ror #3
    e6d0:	andeq	sl, r0, ip, lsr #4
    e6d4:	andeq	sl, r0, r8, lsl #4
    e6d8:	andeq	sl, r0, ip, lsl #4
    e6dc:	andeq	sl, r0, r4, lsr #4
    e6e0:	andeq	sl, r0, r8, lsl #4
    e6e4:	andeq	sl, r0, r0, lsr #4
    e6e8:	ldr	r0, [pc, #-48]	; e6c0 <bt_compidtostr@@Base+0x60a0>
    e6ec:	add	r0, pc, r0
    e6f0:	bx	lr
    e6f4:	ldr	r0, [pc, #-56]	; e6c4 <bt_compidtostr@@Base+0x60a4>
    e6f8:	add	r0, pc, r0
    e6fc:	bx	lr
    e700:	ldr	r0, [pc, #-64]	; e6c8 <bt_compidtostr@@Base+0x60a8>
    e704:	add	r0, pc, r0
    e708:	bx	lr
    e70c:	ldr	r0, [pc, #-72]	; e6cc <bt_compidtostr@@Base+0x60ac>
    e710:	add	r0, pc, r0
    e714:	bx	lr
    e718:	ldr	r0, [pc, #-80]	; e6d0 <bt_compidtostr@@Base+0x60b0>
    e71c:	add	r0, pc, r0
    e720:	bx	lr
    e724:	ldr	r0, [pc, #-88]	; e6d4 <bt_compidtostr@@Base+0x60b4>
    e728:	add	r0, pc, r0
    e72c:	bx	lr
    e730:	ldr	r0, [pc, #-96]	; e6d8 <bt_compidtostr@@Base+0x60b8>
    e734:	add	r0, pc, r0
    e738:	bx	lr
    e73c:	ldr	r0, [pc, #-104]	; e6dc <bt_compidtostr@@Base+0x60bc>
    e740:	add	r0, pc, r0
    e744:	bx	lr
    e748:	ldr	r0, [pc, #-112]	; e6e0 <bt_compidtostr@@Base+0x60c0>
    e74c:	add	r0, pc, r0
    e750:	bx	lr
    e754:	ldr	r0, [pc, #-120]	; e6e4 <bt_compidtostr@@Base+0x60c4>
    e758:	add	r0, pc, r0
    e75c:	bx	lr

0000e760 <btbb_pcap_open@@Base>:
    e760:	str	r4, [sp, #-8]!
    e764:	str	lr, [sp, #4]
    e768:	sub	sp, sp, #24
    e76c:	movw	r3, #15437	; 0x3c4d
    e770:	movt	r3, #41394	; 0xa1b2
    e774:	str	r3, [sp]
    e778:	mov	r3, #2
    e77c:	strh	r3, [sp, #4]
    e780:	mov	r3, #4
    e784:	strh	r3, [sp, #6]
    e788:	mov	r3, #0
    e78c:	str	r3, [sp, #8]
    e790:	str	r3, [sp, #12]
    e794:	str	r2, [sp, #16]
    e798:	str	r1, [sp, #20]
    e79c:	ldr	r1, [pc, #52]	; e7d8 <btbb_pcap_open@@Base+0x78>
    e7a0:	add	r1, pc, r1
    e7a4:	bl	210c <fopen@plt>
    e7a8:	subs	r4, r0, #0
    e7ac:	beq	e7c4 <btbb_pcap_open@@Base+0x64>
    e7b0:	mov	r3, r4
    e7b4:	mov	r2, #1
    e7b8:	mov	r1, #24
    e7bc:	mov	r0, sp
    e7c0:	bl	225c <fwrite@plt>
    e7c4:	mov	r0, r4
    e7c8:	add	sp, sp, #24
    e7cc:	ldr	r4, [sp]
    e7d0:	add	sp, sp, #4
    e7d4:	pop	{pc}		; (ldr pc, [sp], #4)
    e7d8:	andeq	sl, r0, ip, lsl r2

0000e7dc <btbb_pcap_dump@@Base>:
    e7dc:	strd	r4, [sp, #-16]!
    e7e0:	str	r6, [sp, #8]
    e7e4:	str	lr, [sp, #12]
    e7e8:	mov	r4, r0
    e7ec:	mov	r5, r1
    e7f0:	mov	r6, r2
    e7f4:	mov	r3, r0
    e7f8:	mov	r2, #1
    e7fc:	mov	r1, #16
    e800:	mov	r0, r5
    e804:	bl	225c <fwrite@plt>
    e808:	mov	r3, r4
    e80c:	mov	r2, #1
    e810:	ldr	r1, [r5, #8]
    e814:	mov	r0, r6
    e818:	bl	225c <fwrite@plt>
    e81c:	mov	r0, r4
    e820:	bl	2124 <fflush@plt>
    e824:	ldrd	r4, [sp]
    e828:	ldr	r6, [sp, #8]
    e82c:	add	sp, sp, #12
    e830:	pop	{pc}		; (ldr pc, [sp], #4)

0000e834 <btbb_pcap_append_packet@@Base>:
    e834:	strd	r4, [sp, #-36]!	; 0xffffffdc
    e838:	strd	r6, [sp, #8]
    e83c:	strd	r8, [sp, #16]
    e840:	strd	sl, [sp, #24]
    e844:	str	lr, [sp, #32]
    e848:	add	fp, sp, #32
    e84c:	sub	sp, sp, #492	; 0x1ec
    e850:	ldrsb	r8, [fp, #4]
    e854:	ldrsb	r7, [fp, #8]
    e858:	ldrb	r6, [fp, #16]
    e85c:	cmp	r0, #0
    e860:	beq	ea20 <btbb_pcap_append_packet@@Base+0x1ec>
    e864:	ldr	r1, [r0]
    e868:	cmp	r1, #0
    e86c:	beq	ea28 <btbb_pcap_append_packet@@Base+0x1f4>
    e870:	str	r0, [fp, #-516]	; 0xfffffdfc
    e874:	sub	r1, fp, #484	; 0x1e4
    e878:	strd	r2, [r1]
    e87c:	str	sp, [fp, #-496]	; 0xfffffe10
    e880:	cmp	r7, r8
    e884:	movlt	r3, #7
    e888:	movge	r3, #3
    e88c:	ldr	r1, [fp, #12]
    e890:	cmn	r1, #1
    e894:	movne	r4, #16
    e898:	moveq	r4, #0
    e89c:	orr	r4, r4, r3
    e8a0:	cmp	r6, #255	; 0xff
    e8a4:	movne	r3, #128	; 0x80
    e8a8:	moveq	r3, #0
    e8ac:	orr	r4, r4, r3
    e8b0:	ldr	r0, [fp, #20]
    e8b4:	bl	2328 <btbb_packet_get_payload_length@plt>
    e8b8:	mov	r5, r0
    e8bc:	add	r3, r0, #7
    e8c0:	bic	r3, r3, #7
    e8c4:	sub	sp, sp, r3
    e8c8:	str	sp, [fp, #-520]	; 0xfffffdf8
    e8cc:	mov	r1, sp
    e8d0:	ldr	r0, [fp, #20]
    e8d4:	bl	20f4 <btbb_get_payload_packed@plt>
    e8d8:	cmp	r5, #400	; 0x190
    e8dc:	movcc	sl, r5
    e8e0:	movcs	sl, #400	; 0x190
    e8e4:	ldr	r0, [fp, #20]
    e8e8:	bl	246c <btbb_packet_get_channel@plt>
    e8ec:	str	r0, [fp, #-500]	; 0xfffffe0c
    e8f0:	ldr	r0, [fp, #20]
    e8f4:	bl	2160 <btbb_packet_get_ac_errors@plt>
    e8f8:	str	r0, [fp, #-504]	; 0xfffffe08
    e8fc:	ldr	r0, [fp, #20]
    e900:	bl	23a0 <btbb_packet_get_transport@plt>
    e904:	str	r0, [fp, #-508]	; 0xfffffe04
    e908:	ldr	r0, [fp, #20]
    e90c:	bl	2154 <btbb_packet_get_modulation@plt>
    e910:	str	r0, [fp, #-512]	; 0xfffffe00
    e914:	ldr	r0, [fp, #20]
    e918:	bl	23f4 <btbb_packet_get_lap@plt>
    e91c:	str	r0, [fp, #-488]	; 0xfffffe18
    e920:	ldr	r0, [fp, #20]
    e924:	bl	2358 <btbb_packet_get_header_packed@plt>
    e928:	str	r0, [fp, #-492]	; 0xfffffe14
    e92c:	add	r9, sl, #22
    e930:	add	r3, pc, #248	; 0xf8
    e934:	ldrd	r2, [r3]
    e938:	sub	r1, fp, #484	; 0x1e4
    e93c:	ldrd	r0, [r1]
    e940:	bl	fea0 <lell_pcapng_close@@Base+0x30>
    e944:	str	r0, [fp, #-476]	; 0xfffffe24
    e948:	add	r3, pc, #224	; 0xe0
    e94c:	ldrd	r2, [r3]
    e950:	sub	r1, fp, #484	; 0x1e4
    e954:	ldrd	r0, [r1]
    e958:	bl	fea0 <lell_pcapng_close@@Base+0x30>
    e95c:	str	r2, [fp, #-472]	; 0xfffffe28
    e960:	str	r9, [fp, #-468]	; 0xfffffe2c
    e964:	str	r9, [fp, #-464]	; 0xfffffe30
    e968:	ldr	r3, [fp, #-500]	; 0xfffffe0c
    e96c:	strb	r3, [fp, #-460]	; 0xfffffe34
    e970:	strb	r8, [fp, #-459]	; 0xfffffe35
    e974:	strb	r7, [fp, #-458]	; 0xfffffe36
    e978:	ldr	r3, [fp, #-504]	; 0xfffffe08
    e97c:	strb	r3, [fp, #-457]	; 0xfffffe37
    e980:	ldr	r3, [fp, #-512]	; 0xfffffe00
    e984:	ldr	r2, [fp, #-508]	; 0xfffffe04
    e988:	orr	r3, r3, r2, lsl #4
    e98c:	strb	r3, [fp, #-456]	; 0xfffffe38
    e990:	mov	r3, #0
    e994:	strb	r3, [fp, #-455]	; 0xfffffe39
    e998:	sub	r2, fp, #476	; 0x1dc
    e99c:	strh	r3, [r2, #22]
    e9a0:	ldr	r3, [fp, #-488]	; 0xfffffe18
    e9a4:	str	r3, [fp, #-452]	; 0xfffffe3c
    e9a8:	ldr	r3, [fp, #12]
    e9ac:	bic	r3, r3, #-16777216	; 0xff000000
    e9b0:	orr	r6, r3, r6, lsl #24
    e9b4:	str	r6, [fp, #-448]	; 0xfffffe40
    e9b8:	ldr	r3, [fp, #-492]	; 0xfffffe14
    e9bc:	str	r3, [fp, #-444]	; 0xfffffe44
    e9c0:	strh	r4, [r2, #36]	; 0x24
    e9c4:	cmp	r5, #0
    e9c8:	beq	e9e8 <btbb_pcap_append_packet@@Base+0x1b4>
    e9cc:	mov	r2, sl
    e9d0:	ldr	r1, [fp, #-520]	; 0xfffffdf8
    e9d4:	sub	r5, fp, #476	; 0x1dc
    e9d8:	add	r0, r5, #38	; 0x26
    e9dc:	bl	216c <memcpy@plt>
    e9e0:	orr	r4, r4, #32
    e9e4:	strh	r4, [r5, #36]	; 0x24
    e9e8:	sub	r2, fp, #460	; 0x1cc
    e9ec:	sub	r1, fp, #476	; 0x1dc
    e9f0:	ldr	r3, [fp, #-516]	; 0xfffffdfc
    e9f4:	ldr	r0, [r3]
    e9f8:	bl	22ec <btbb_pcap_dump@plt>
    e9fc:	ldr	sp, [fp, #-496]	; 0xfffffe10
    ea00:	mov	r0, #0
    ea04:	sub	sp, fp, #32
    ea08:	ldrd	r4, [sp]
    ea0c:	ldrd	r6, [sp, #8]
    ea10:	ldrd	r8, [sp, #16]
    ea14:	ldrd	sl, [sp, #24]
    ea18:	add	sp, sp, #32
    ea1c:	pop	{pc}		; (ldr pc, [sp], #4)
    ea20:	mvn	r0, #0
    ea24:	b	ea04 <btbb_pcap_append_packet@@Base+0x1d0>
    ea28:	mvn	r0, #0
    ea2c:	b	ea04 <btbb_pcap_append_packet@@Base+0x1d0>
    ea30:	blcc	fe6c1238 <perm_table@@Base+0xfe69807c>
    ea34:	andeq	r0, r0, r0

0000ea38 <btbb_pcap_close@@Base>:
    ea38:	str	r4, [sp, #-8]!
    ea3c:	str	lr, [sp, #4]
    ea40:	subs	r4, r0, #0
    ea44:	mvneq	r0, #0
    ea48:	beq	ea68 <btbb_pcap_close@@Base+0x30>
    ea4c:	ldr	r0, [r4]
    ea50:	cmp	r0, #0
    ea54:	beq	ea5c <btbb_pcap_close@@Base+0x24>
    ea58:	bl	243c <fclose@plt>
    ea5c:	mov	r0, r4
    ea60:	bl	2148 <free@plt>
    ea64:	mov	r0, #0
    ea68:	ldr	r4, [sp]
    ea6c:	add	sp, sp, #4
    ea70:	pop	{pc}		; (ldr pc, [sp], #4)

0000ea74 <btbb_pcap_create_file@@Base>:
    ea74:	strd	r4, [sp, #-16]!
    ea78:	str	r6, [sp, #8]
    ea7c:	str	lr, [sp, #12]
    ea80:	mov	r5, r0
    ea84:	mov	r6, r1
    ea88:	mov	r0, #4
    ea8c:	bl	22c8 <malloc@plt>
    ea90:	subs	r4, r0, #0
    ea94:	beq	eaec <btbb_pcap_create_file@@Base+0x78>
    ea98:	mov	r3, #0
    ea9c:	str	r3, [r4]
    eaa0:	mov	r2, #400	; 0x190
    eaa4:	mov	r1, #255	; 0xff
    eaa8:	mov	r0, r5
    eaac:	bl	21d8 <btbb_pcap_open@plt>
    eab0:	str	r0, [r4]
    eab4:	cmp	r0, #0
    eab8:	beq	ead8 <btbb_pcap_create_file@@Base+0x64>
    eabc:	str	r4, [r6]
    eac0:	mov	r5, #0
    eac4:	mov	r0, r5
    eac8:	ldrd	r4, [sp]
    eacc:	ldr	r6, [sp, #8]
    ead0:	add	sp, sp, #12
    ead4:	pop	{pc}		; (ldr pc, [sp], #4)
    ead8:	ldr	r0, [pc, #28]	; eafc <btbb_pcap_create_file@@Base+0x88>
    eadc:	add	r0, pc, r0
    eae0:	bl	222c <perror@plt>
    eae4:	mvn	r5, #1
    eae8:	b	eaf0 <btbb_pcap_create_file@@Base+0x7c>
    eaec:	mvn	r5, #2
    eaf0:	mov	r0, r4
    eaf4:	bl	2274 <btbb_pcap_close@plt>
    eaf8:	b	eac4 <btbb_pcap_create_file@@Base+0x50>
    eafc:	andeq	r9, r0, r4, ror #29

0000eb00 <lell_pcap_append_packet@@Base>:
    eb00:	strd	r4, [sp, #-36]!	; 0xffffffdc
    eb04:	strd	r6, [sp, #8]
    eb08:	strd	r8, [sp, #16]
    eb0c:	strd	sl, [sp, #24]
    eb10:	str	lr, [sp, #32]
    eb14:	sub	sp, sp, #308	; 0x134
    eb18:	add	r1, sp, #344	; 0x158
    eb1c:	ldrsb	r9, [r1]
    eb20:	add	r1, sp, #348	; 0x15c
    eb24:	ldrsb	r8, [r1]
    eb28:	ldr	r4, [sp, #356]	; 0x164
    eb2c:	cmp	r0, #0
    eb30:	beq	ec34 <lell_pcap_append_packet@@Base+0x134>
    eb34:	ldr	r1, [r0]
    eb38:	cmp	r1, #0
    eb3c:	beq	ec3c <lell_pcap_append_packet@@Base+0x13c>
    eb40:	ldr	r1, [r0, #4]
    eb44:	cmp	r1, #256	; 0x100
    eb48:	bne	ec44 <lell_pcap_append_packet@@Base+0x144>
    eb4c:	str	r0, [sp, #12]
    eb50:	strd	r2, [sp]
    eb54:	cmp	r8, r9
    eb58:	movlt	r7, #39	; 0x27
    eb5c:	movge	r7, #35	; 0x23
    eb60:	mov	r0, r4
    eb64:	bl	2118 <lell_packet_is_data@plt>
    eb68:	cmp	r0, #0
    eb6c:	movne	r3, #0
    eb70:	moveq	r3, #16
    eb74:	str	r3, [sp, #8]
    eb78:	ldr	r6, [r4, #72]	; 0x48
    eb7c:	ldrb	fp, [r4, #69]	; 0x45
    eb80:	ldrb	sl, [r4, #92]	; 0x5c
    eb84:	add	r5, r6, #9
    eb88:	cmp	r5, #255	; 0xff
    eb8c:	movcs	r5, #255	; 0xff
    eb90:	add	r3, pc, #184	; 0xb8
    eb94:	ldrd	r2, [r3]
    eb98:	ldrd	r0, [sp]
    eb9c:	bl	fea0 <lell_pcapng_close@@Base+0x30>
    eba0:	str	r0, [sp, #20]
    eba4:	add	r3, pc, #164	; 0xa4
    eba8:	ldrd	r2, [r3]
    ebac:	ldrd	r0, [sp]
    ebb0:	bl	fea0 <lell_pcapng_close@@Base+0x30>
    ebb4:	str	r2, [sp, #24]
    ebb8:	add	r6, r6, #19
    ebbc:	str	r6, [sp, #28]
    ebc0:	add	r3, r5, #10
    ebc4:	str	r3, [sp, #32]
    ebc8:	strb	fp, [sp, #36]	; 0x24
    ebcc:	strb	r9, [sp, #37]	; 0x25
    ebd0:	strb	r8, [sp, #38]	; 0x26
    ebd4:	strb	sl, [sp, #39]	; 0x27
    ebd8:	ldr	r3, [sp, #352]	; 0x160
    ebdc:	str	r3, [sp, #40]	; 0x28
    ebe0:	ldr	r3, [sp, #8]
    ebe4:	orr	r7, r7, r3
    ebe8:	add	r6, sp, #20
    ebec:	strh	r7, [sp, #44]	; 0x2c
    ebf0:	mov	r2, r5
    ebf4:	mov	r1, r4
    ebf8:	add	r0, sp, #46	; 0x2e
    ebfc:	bl	216c <memcpy@plt>
    ec00:	add	r2, sp, #36	; 0x24
    ec04:	mov	r1, r6
    ec08:	ldr	r3, [sp, #12]
    ec0c:	ldr	r0, [r3]
    ec10:	bl	22ec <btbb_pcap_dump@plt>
    ec14:	mov	r0, #0
    ec18:	add	sp, sp, #308	; 0x134
    ec1c:	ldrd	r4, [sp]
    ec20:	ldrd	r6, [sp, #8]
    ec24:	ldrd	r8, [sp, #16]
    ec28:	ldrd	sl, [sp, #24]
    ec2c:	add	sp, sp, #32
    ec30:	pop	{pc}		; (ldr pc, [sp], #4)
    ec34:	mvn	r0, #0
    ec38:	b	ec18 <lell_pcap_append_packet@@Base+0x118>
    ec3c:	mvn	r0, #0
    ec40:	b	ec18 <lell_pcap_append_packet@@Base+0x118>
    ec44:	mvn	r0, #0
    ec48:	b	ec18 <lell_pcap_append_packet@@Base+0x118>
    ec4c:	nop	{0}
    ec50:	blcc	fe6c1458 <perm_table@@Base+0xfe69829c>
    ec54:	andeq	r0, r0, r0

0000ec58 <lell_pcap_append_ppi_packet@@Base>:
    ec58:	strd	r4, [sp, #-32]!	; 0xffffffe0
    ec5c:	strd	r6, [sp, #8]
    ec60:	strd	r8, [sp, #16]
    ec64:	str	sl, [sp, #24]
    ec68:	str	lr, [sp, #28]
    ec6c:	sub	sp, sp, #296	; 0x128
    ec70:	ldr	sl, [sp, #348]	; 0x15c
    ec74:	subs	r6, r0, #0
    ec78:	beq	edc0 <lell_pcap_append_ppi_packet@@Base+0x168>
    ec7c:	ldr	r1, [r6]
    ec80:	cmp	r1, #0
    ec84:	beq	edc8 <lell_pcap_append_ppi_packet@@Base+0x170>
    ec88:	ldr	r1, [r6, #4]
    ec8c:	cmp	r1, #192	; 0xc0
    ec90:	mvnne	r0, #0
    ec94:	bne	eda4 <lell_pcap_append_ppi_packet@@Base+0x14c>
    ec98:	mov	r8, r2
    ec9c:	mov	r9, r3
    eca0:	mov	r0, sl
    eca4:	bl	2370 <lell_get_channel_k@plt>
    eca8:	mov	r5, r0
    ecac:	ldr	r4, [sl, #72]	; 0x48
    ecb0:	add	r7, r4, #9
    ecb4:	cmp	r7, #255	; 0xff
    ecb8:	movcs	r7, #255	; 0xff
    ecbc:	add	r3, pc, #268	; 0x10c
    ecc0:	ldrd	r2, [r3]
    ecc4:	mov	r0, r8
    ecc8:	mov	r1, r9
    eccc:	bl	fea0 <lell_pcapng_close@@Base+0x30>
    ecd0:	str	r0, [sp]
    ecd4:	add	r3, pc, #244	; 0xf4
    ecd8:	ldrd	r2, [r3]
    ecdc:	mov	r0, r8
    ece0:	mov	r1, r9
    ece4:	bl	fea0 <lell_pcapng_close@@Base+0x30>
    ece8:	str	r2, [sp, #4]
    ecec:	add	r3, r7, #24
    ecf0:	str	r3, [sp, #8]
    ecf4:	add	r4, r4, #33	; 0x21
    ecf8:	str	r4, [sp, #12]
    ecfc:	mov	r8, #0
    ed00:	strb	r8, [sp, #16]
    ed04:	strb	r8, [sp, #17]
    ed08:	mov	r3, #24
    ed0c:	mov	r4, sp
    ed10:	strh	r3, [r4, #18]
    ed14:	mov	r3, #147	; 0x93
    ed18:	str	r3, [sp, #20]
    ed1c:	movw	r3, #30006	; 0x7536
    ed20:	strh	r3, [r4, #24]
    ed24:	mov	r3, #12
    ed28:	strh	r3, [r4, #26]
    ed2c:	ldrb	r3, [r6, #8]
    ed30:	strb	r3, [sp, #28]
    ed34:	add	r3, r5, #1200	; 0x4b0
    ed38:	add	r3, r3, #1
    ed3c:	lsl	r3, r3, #1
    ed40:	strh	r3, [r4, #29]
    ed44:	ldrb	r3, [sp, #328]	; 0x148
    ed48:	strb	r3, [sp, #31]
    ed4c:	ldr	r3, [sl, #76]	; 0x4c
    ed50:	str	r3, [sp, #32]
    ed54:	add	r3, sp, #336	; 0x150
    ed58:	ldrsb	r3, [r3]
    ed5c:	strb	r3, [sp, #36]	; 0x24
    ed60:	add	r3, sp, #332	; 0x14c
    ed64:	ldrsb	r3, [r3]
    ed68:	strb	r3, [sp, #37]	; 0x25
    ed6c:	add	r3, sp, #340	; 0x154
    ed70:	ldrsb	r3, [r3]
    ed74:	strb	r3, [sp, #38]	; 0x26
    ed78:	ldrb	r3, [sp, #344]	; 0x158
    ed7c:	strb	r3, [sp, #39]	; 0x27
    ed80:	mov	r2, r7
    ed84:	mov	r1, sl
    ed88:	add	r0, sp, #40	; 0x28
    ed8c:	bl	216c <memcpy@plt>
    ed90:	add	r2, sp, #16
    ed94:	mov	r1, r4
    ed98:	ldr	r0, [r6]
    ed9c:	bl	22ec <btbb_pcap_dump@plt>
    eda0:	mov	r0, r8
    eda4:	add	sp, sp, #296	; 0x128
    eda8:	ldrd	r4, [sp]
    edac:	ldrd	r6, [sp, #8]
    edb0:	ldrd	r8, [sp, #16]
    edb4:	ldr	sl, [sp, #24]
    edb8:	add	sp, sp, #28
    edbc:	pop	{pc}		; (ldr pc, [sp], #4)
    edc0:	mvn	r0, #0
    edc4:	b	eda4 <lell_pcap_append_ppi_packet@@Base+0x14c>
    edc8:	mvn	r0, #0
    edcc:	b	eda4 <lell_pcap_append_ppi_packet@@Base+0x14c>
    edd0:	blcc	fe6c15d8 <perm_table@@Base+0xfe69841c>
    edd4:	andeq	r0, r0, r0

0000edd8 <lell_pcap_close@@Base>:
    edd8:	str	r4, [sp, #-8]!
    eddc:	str	lr, [sp, #4]
    ede0:	subs	r4, r0, #0
    ede4:	mvneq	r0, #0
    ede8:	beq	ee08 <lell_pcap_close@@Base+0x30>
    edec:	ldr	r0, [r4]
    edf0:	cmp	r0, #0
    edf4:	beq	edfc <lell_pcap_close@@Base+0x24>
    edf8:	bl	243c <fclose@plt>
    edfc:	mov	r0, r4
    ee00:	bl	2148 <free@plt>
    ee04:	mov	r0, #0
    ee08:	ldr	r4, [sp]
    ee0c:	add	sp, sp, #4
    ee10:	pop	{pc}		; (ldr pc, [sp], #4)
    ee14:	strd	r4, [sp, #-24]!	; 0xffffffe8
    ee18:	strd	r6, [sp, #8]
    ee1c:	str	r8, [sp, #16]
    ee20:	str	lr, [sp, #20]
    ee24:	mov	r6, r0
    ee28:	mov	r5, r1
    ee2c:	mov	r7, r2
    ee30:	mov	r0, #12
    ee34:	bl	22c8 <malloc@plt>
    ee38:	subs	r4, r0, #0
    ee3c:	beq	ee90 <lell_pcap_close@@Base+0xb8>
    ee40:	mov	r3, #0
    ee44:	str	r3, [r4]
    ee48:	str	r3, [r4, #4]
    ee4c:	str	r3, [r4, #8]
    ee50:	mov	r2, #400	; 0x190
    ee54:	mov	r1, r5
    ee58:	mov	r0, r6
    ee5c:	bl	21d8 <btbb_pcap_open@plt>
    ee60:	str	r0, [r4]
    ee64:	cmp	r0, #0
    ee68:	beq	eea0 <lell_pcap_close@@Base+0xc8>
    ee6c:	str	r5, [r4, #4]
    ee70:	str	r4, [r7]
    ee74:	mov	r5, #0
    ee78:	mov	r0, r5
    ee7c:	ldrd	r4, [sp]
    ee80:	ldrd	r6, [sp, #8]
    ee84:	ldr	r8, [sp, #16]
    ee88:	add	sp, sp, #20
    ee8c:	pop	{pc}		; (ldr pc, [sp], #4)
    ee90:	mvn	r5, #2
    ee94:	mov	r0, r4
    ee98:	bl	21c0 <lell_pcap_close@plt>
    ee9c:	b	ee78 <lell_pcap_close@@Base+0xa0>
    eea0:	mvn	r5, #1
    eea4:	b	ee94 <lell_pcap_close@@Base+0xbc>

0000eea8 <lell_pcap_create_file@@Base>:
    eea8:	str	r4, [sp, #-8]!
    eeac:	str	lr, [sp, #4]
    eeb0:	mov	r2, r1
    eeb4:	mov	r1, #256	; 0x100
    eeb8:	bl	ee14 <lell_pcap_close@@Base+0x3c>
    eebc:	ldr	r4, [sp]
    eec0:	add	sp, sp, #4
    eec4:	pop	{pc}		; (ldr pc, [sp], #4)

0000eec8 <lell_pcap_ppi_create_file@@Base>:
    eec8:	strd	r4, [sp, #-16]!
    eecc:	str	r6, [sp, #8]
    eed0:	str	lr, [sp, #12]
    eed4:	mov	r4, r1
    eed8:	mov	r5, r2
    eedc:	mov	r1, #192	; 0xc0
    eee0:	bl	ee14 <lell_pcap_close@@Base+0x3c>
    eee4:	cmp	r0, #0
    eee8:	ldreq	r3, [r5]
    eeec:	strbeq	r4, [r3, #8]
    eef0:	ldrd	r4, [sp]
    eef4:	ldr	r6, [sp, #8]
    eef8:	add	sp, sp, #12
    eefc:	pop	{pc}		; (ldr pc, [sp], #4)

0000ef00 <pcapng_append_section_option@@Base>:
    ef00:	strd	r4, [sp, #-16]!
    ef04:	str	r6, [sp, #8]
    ef08:	str	lr, [sp, #12]
    ef0c:	subs	r4, r0, #0
    ef10:	moveq	r0, #1
    ef14:	beq	ef50 <pcapng_append_section_option@@Base+0x50>
    ef18:	ldr	r3, [r4]
    ef1c:	cmn	r3, #1
    ef20:	moveq	r0, #1
    ef24:	beq	ef50 <pcapng_append_section_option@@Base+0x50>
    ef28:	ldr	r3, [r4, #4]
    ef2c:	sub	r2, r3, #1
    ef30:	cmn	r2, #3
    ef34:	movhi	r0, #5
    ef38:	bhi	ef50 <pcapng_append_section_option@@Base+0x50>
    ef3c:	ldr	ip, [r4, #12]
    ef40:	cmp	r1, #0
    ef44:	cmpne	ip, #0
    ef48:	moveq	r0, #5
    ef4c:	bne	ef60 <pcapng_append_section_option@@Base+0x60>
    ef50:	ldrd	r4, [sp]
    ef54:	ldr	r6, [sp, #8]
    ef58:	add	sp, sp, #12
    ef5c:	pop	{pc}		; (ldr pc, [sp], #4)
    ef60:	ldrh	r5, [r1, #2]
    ef64:	add	r2, r5, #4
    ef68:	add	r0, r3, ip
    ef6c:	bl	216c <memcpy@plt>
    ef70:	add	r3, r5, #7
    ef74:	bic	r3, r3, #3
    ef78:	ldr	r2, [r4, #12]
    ef7c:	add	r3, r3, r2
    ef80:	str	r3, [r4, #12]
    ef84:	ldr	r0, [r4, #4]
    ef88:	ldr	r1, [pc, #32]	; efb0 <pcapng_append_section_option@@Base+0xb0>
    ef8c:	add	r1, pc, r1
    ef90:	ldr	r2, [r4, #8]
    ef94:	sub	r2, r2, #12
    ef98:	sub	r2, r2, r3
    ef9c:	strh	r2, [r1, #2]
    efa0:	ldr	r2, [r1]
    efa4:	str	r2, [r0, r3]
    efa8:	mov	r0, #0
    efac:	b	ef50 <pcapng_append_section_option@@Base+0x50>
    efb0:	andeq	sl, r1, ip, lsl #4

0000efb4 <pcapng_append_interface_option@@Base>:
    efb4:	strd	r4, [sp, #-16]!
    efb8:	str	r6, [sp, #8]
    efbc:	str	lr, [sp, #12]
    efc0:	subs	r4, r0, #0
    efc4:	moveq	r0, #1
    efc8:	beq	f004 <pcapng_append_interface_option@@Base+0x50>
    efcc:	ldr	r3, [r4]
    efd0:	cmn	r3, #1
    efd4:	moveq	r0, #1
    efd8:	beq	f004 <pcapng_append_interface_option@@Base+0x50>
    efdc:	ldr	r3, [r4, #16]
    efe0:	sub	r2, r3, #1
    efe4:	cmn	r2, #3
    efe8:	movhi	r0, #5
    efec:	bhi	f004 <pcapng_append_interface_option@@Base+0x50>
    eff0:	ldr	ip, [r4, #24]
    eff4:	cmp	r1, #0
    eff8:	cmpne	ip, #0
    effc:	moveq	r0, #5
    f000:	bne	f014 <pcapng_append_interface_option@@Base+0x60>
    f004:	ldrd	r4, [sp]
    f008:	ldr	r6, [sp, #8]
    f00c:	add	sp, sp, #12
    f010:	pop	{pc}		; (ldr pc, [sp], #4)
    f014:	ldrh	r5, [r1, #2]
    f018:	add	r2, r5, #4
    f01c:	add	r0, r3, ip
    f020:	bl	216c <memcpy@plt>
    f024:	add	r3, r5, #7
    f028:	bic	r3, r3, #3
    f02c:	ldr	r2, [r4, #24]
    f030:	add	r3, r3, r2
    f034:	str	r3, [r4, #24]
    f038:	ldr	r0, [r4, #16]
    f03c:	ldr	r1, [pc, #32]	; f064 <pcapng_append_interface_option@@Base+0xb0>
    f040:	add	r1, pc, r1
    f044:	ldr	r2, [r4, #20]
    f048:	sub	r2, r2, #12
    f04c:	sub	r2, r2, r3
    f050:	strh	r2, [r1, #2]
    f054:	ldr	r2, [r1]
    f058:	str	r2, [r0, r3]
    f05c:	mov	r0, #0
    f060:	b	f004 <pcapng_append_interface_option@@Base+0x50>
    f064:	andeq	sl, r1, r8, asr r1

0000f068 <pcapng_append_packet@@Base>:
    f068:	strd	r4, [sp, #-24]!	; 0xffffffe8
    f06c:	strd	r6, [sp, #8]
    f070:	str	r8, [sp, #16]
    f074:	str	lr, [sp, #20]
    f078:	subs	r4, r0, #0
    f07c:	moveq	r0, #1
    f080:	beq	f094 <pcapng_append_packet@@Base+0x2c>
    f084:	ldr	r0, [r4]
    f088:	cmn	r0, #1
    f08c:	moveq	r0, #1
    f090:	bne	f0a8 <pcapng_append_packet@@Base+0x40>
    f094:	ldrd	r4, [sp]
    f098:	ldrd	r6, [sp, #8]
    f09c:	ldr	r8, [sp, #16]
    f0a0:	add	sp, sp, #20
    f0a4:	pop	{pc}		; (ldr pc, [sp], #4)
    f0a8:	ldr	r5, [r1, #4]
    f0ac:	mov	r2, r5
    f0b0:	bl	2418 <write@plt>
    f0b4:	cmn	r0, #1
    f0b8:	moveq	r0, #0
    f0bc:	beq	f094 <pcapng_append_packet@@Base+0x2c>
    f0c0:	ldr	r1, [r4, #4]
    f0c4:	ldr	r6, [r1, #16]
    f0c8:	ldr	r7, [r1, #20]
    f0cc:	adds	r2, r6, r5
    f0d0:	adc	r3, r7, #0
    f0d4:	str	r2, [r1, #16]
    f0d8:	str	r3, [r1, #20]
    f0dc:	mov	r0, #0
    f0e0:	b	f094 <pcapng_append_packet@@Base+0x2c>

0000f0e4 <pcapng_close@@Base>:
    f0e4:	str	r4, [sp, #-8]!
    f0e8:	str	lr, [sp, #4]
    f0ec:	mov	r4, r0
    f0f0:	ldr	r0, [r0, #16]
    f0f4:	sub	r3, r0, #1
    f0f8:	cmn	r3, #3
    f0fc:	bls	f12c <pcapng_close@@Base+0x48>
    f100:	ldr	r0, [r4, #4]
    f104:	sub	r3, r0, #1
    f108:	cmn	r3, #3
    f10c:	bls	f138 <pcapng_close@@Base+0x54>
    f110:	ldr	r0, [r4]
    f114:	cmn	r0, #1
    f118:	bne	f144 <pcapng_close@@Base+0x60>
    f11c:	mov	r0, #0
    f120:	ldr	r4, [sp]
    f124:	add	sp, sp, #4
    f128:	pop	{pc}		; (ldr pc, [sp], #4)
    f12c:	ldr	r1, [r4, #20]
    f130:	bl	2454 <munmap@plt>
    f134:	b	f100 <pcapng_close@@Base+0x1c>
    f138:	ldr	r1, [r4, #8]
    f13c:	bl	2454 <munmap@plt>
    f140:	b	f110 <pcapng_close@@Base+0x2c>
    f144:	bl	24e4 <close@plt>
    f148:	b	f11c <pcapng_close@@Base+0x38>

0000f14c <pcapng_create@@Base>:
    f14c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f150:	strd	r6, [sp, #8]
    f154:	strd	r8, [sp, #16]
    f158:	strd	sl, [sp, #24]
    f15c:	str	lr, [sp, #32]
    f160:	sub	sp, sp, #36	; 0x24
    f164:	mov	r5, r0
    f168:	mov	r0, r1
    f16c:	mov	r8, r2
    f170:	mov	fp, r3
    f174:	ldr	sl, [sp, #80]	; 0x50
    f178:	mov	r3, #0
    f17c:	str	r3, [r5, #4]
    f180:	str	r3, [r5, #16]
    f184:	str	r3, [r5, #24]
    f188:	str	r3, [r5, #20]
    f18c:	str	r3, [r5, #12]
    f190:	str	r3, [r5, #8]
    f194:	mov	r2, #432	; 0x1b0
    f198:	mov	r1, #194	; 0xc2
    f19c:	bl	2304 <open@plt>
    f1a0:	str	r0, [r5]
    f1a4:	cmn	r0, #1
    f1a8:	bne	f1d8 <pcapng_create@@Base+0x8c>
    f1ac:	mov	r4, #6
    f1b0:	mov	r0, r5
    f1b4:	bl	249c <pcapng_close@plt>
    f1b8:	mov	r0, r4
    f1bc:	add	sp, sp, #36	; 0x24
    f1c0:	ldrd	r4, [sp]
    f1c4:	ldrd	r6, [sp, #8]
    f1c8:	ldrd	r8, [sp, #16]
    f1cc:	ldrd	sl, [sp, #24]
    f1d0:	add	sp, sp, #32
    f1d4:	pop	{pc}		; (ldr pc, [sp], #4)
    f1d8:	ldr	ip, [pc, #1160]	; f668 <pcapng_create@@Base+0x51c>
    f1dc:	add	ip, pc, ip
    f1e0:	add	r1, sp, #8
    f1e4:	ldrd	r2, [ip]
    f1e8:	strd	r2, [sp, #8]
    f1ec:	ldrd	r2, [ip, #8]
    f1f0:	strd	r2, [r1, #8]
    f1f4:	ldrd	r2, [ip, #16]
    f1f8:	strd	r2, [r1, #16]
    f1fc:	mov	r2, #24
    f200:	str	r2, [r5, #8]
    f204:	bl	2418 <write@plt>
    f208:	cmp	r8, #0
    f20c:	cmnne	r0, #1
    f210:	beq	f2dc <pcapng_create@@Base+0x190>
    f214:	ldrh	r3, [r8]
    f218:	cmp	r3, #0
    f21c:	beq	f51c <pcapng_create@@Base+0x3d0>
    f220:	ldrh	r2, [r8, #2]
    f224:	cmp	r2, #0
    f228:	beq	f51c <pcapng_create@@Base+0x3d0>
    f22c:	ldr	r6, [pc, #1080]	; f66c <pcapng_create@@Base+0x520>
    f230:	add	r6, pc, r6
    f234:	add	r6, r6, #24
    f238:	mov	r7, #1
    f23c:	b	f284 <pcapng_create@@Base+0x138>
    f240:	add	r2, r9, #4
    f244:	ldr	r3, [r5, #8]
    f248:	add	r3, r3, #4
    f24c:	add	r9, r3, r9
    f250:	str	r9, [r5, #8]
    f254:	adds	r3, r0, #1
    f258:	movne	r3, #1
    f25c:	adds	r8, r8, r2
    f260:	moveq	r3, #0
    f264:	cmp	r3, #0
    f268:	beq	f2dc <pcapng_create@@Base+0x190>
    f26c:	ldrh	r3, [r8]
    f270:	cmp	r3, #0
    f274:	beq	f51c <pcapng_create@@Base+0x3d0>
    f278:	ldrh	r2, [r8, #2]
    f27c:	cmp	r2, #0
    f280:	beq	f51c <pcapng_create@@Base+0x3d0>
    f284:	add	r9, r2, #3
    f288:	bic	r9, r9, #3
    f28c:	sub	r4, r9, r2
    f290:	add	r2, r2, #4
    f294:	mov	r1, r8
    f298:	ldr	r0, [r5]
    f29c:	bl	2418 <write@plt>
    f2a0:	cmp	r4, #0
    f2a4:	cmnne	r0, #1
    f2a8:	beq	f240 <pcapng_create@@Base+0xf4>
    f2ac:	mov	r2, r7
    f2b0:	mov	r1, r6
    f2b4:	ldr	r0, [r5]
    f2b8:	bl	2418 <write@plt>
    f2bc:	subs	r4, r4, #1
    f2c0:	movne	r2, #1
    f2c4:	moveq	r2, #0
    f2c8:	adds	r3, r0, #1
    f2cc:	movne	r3, #1
    f2d0:	tst	r2, r3
    f2d4:	bne	f2ac <pcapng_create@@Base+0x160>
    f2d8:	b	f240 <pcapng_create@@Base+0xf4>
    f2dc:	ldr	r4, [r5, #8]
    f2e0:	str	r4, [r5, #12]
    f2e4:	cmn	r0, #1
    f2e8:	beq	f1ac <pcapng_create@@Base+0x60>
    f2ec:	b	f524 <pcapng_create@@Base+0x3d8>
    f2f0:	add	r2, r9, #4
    f2f4:	ldr	r3, [r5, #20]
    f2f8:	add	r3, r3, #4
    f2fc:	add	r9, r3, r9
    f300:	str	r9, [r5, #20]
    f304:	adds	r3, r0, #1
    f308:	movne	r3, #1
    f30c:	adds	sl, sl, r2
    f310:	moveq	r3, #0
    f314:	cmp	r3, #0
    f318:	beq	f38c <pcapng_create@@Base+0x240>
    f31c:	ldrh	r3, [sl]
    f320:	cmp	r3, #0
    f324:	beq	f65c <pcapng_create@@Base+0x510>
    f328:	ldrh	r2, [sl, #2]
    f32c:	cmp	r2, #0
    f330:	beq	f65c <pcapng_create@@Base+0x510>
    f334:	add	r9, r2, #3
    f338:	bic	r9, r9, #3
    f33c:	sub	r4, r9, r2
    f340:	add	r2, r2, #4
    f344:	mov	r1, sl
    f348:	ldr	r0, [r5]
    f34c:	bl	2418 <write@plt>
    f350:	cmp	r4, #0
    f354:	cmnne	r0, #1
    f358:	beq	f2f0 <pcapng_create@@Base+0x1a4>
    f35c:	mov	r2, r7
    f360:	mov	r1, r6
    f364:	ldr	r0, [r5]
    f368:	bl	2418 <write@plt>
    f36c:	subs	r4, r4, #1
    f370:	movne	r2, #1
    f374:	moveq	r2, #0
    f378:	adds	r3, r0, #1
    f37c:	movne	r3, #1
    f380:	tst	r2, r3
    f384:	bne	f35c <pcapng_create@@Base+0x210>
    f388:	b	f2f0 <pcapng_create@@Base+0x1a4>
    f38c:	ldr	r3, [r5, #20]
    f390:	str	r3, [r5, #24]
    f394:	cmn	r0, #1
    f398:	beq	f4e0 <pcapng_create@@Base+0x394>
    f39c:	ldr	r4, [sp, #84]	; 0x54
    f3a0:	add	r4, r4, #3
    f3a4:	add	r4, r4, r3
    f3a8:	add	r4, r4, r8
    f3ac:	udiv	r4, r4, r8
    f3b0:	mul	r4, r8, r4
    f3b4:	str	r4, [r5, #20]
    f3b8:	subs	r4, r4, r3
    f3bc:	beq	f630 <pcapng_create@@Base+0x4e4>
    f3c0:	ldr	r7, [pc, #680]	; f670 <pcapng_create@@Base+0x524>
    f3c4:	add	r7, pc, r7
    f3c8:	add	r7, r7, #24
    f3cc:	mov	r8, #1
    f3d0:	mov	r2, r8
    f3d4:	mov	r1, r7
    f3d8:	ldr	r0, [r5]
    f3dc:	bl	2418 <write@plt>
    f3e0:	mov	r6, r0
    f3e4:	subs	r4, r4, #1
    f3e8:	movne	r2, #1
    f3ec:	moveq	r2, #0
    f3f0:	adds	r3, r0, #1
    f3f4:	movne	r3, #1
    f3f8:	tst	r2, r3
    f3fc:	bne	f3d0 <pcapng_create@@Base+0x284>
    f400:	ldr	r3, [r5, #8]
    f404:	str	r3, [sp, #4]
    f408:	ldr	r3, [r5]
    f40c:	str	r3, [sp]
    f410:	mov	r3, #1
    f414:	mov	r2, #3
    f418:	ldr	r1, [r5, #20]
    f41c:	mov	r0, #0
    f420:	bl	234c <mmap@plt>
    f424:	str	r0, [r5, #16]
    f428:	cmn	r6, #1
    f42c:	beq	f4d0 <pcapng_create@@Base+0x384>
    f430:	cmn	r0, #1
    f434:	beq	f4d8 <pcapng_create@@Base+0x38c>
    f438:	ldr	r1, [r5, #12]
    f43c:	ldr	r0, [r5, #4]
    f440:	ldr	r2, [pc, #556]	; f674 <pcapng_create@@Base+0x528>
    f444:	add	r2, pc, r2
    f448:	ldr	r3, [r5, #8]
    f44c:	sub	r3, r3, #12
    f450:	sub	r3, r3, r1
    f454:	strh	r3, [r2, #2]
    f458:	ldr	r3, [r2]
    f45c:	str	r3, [r0, r1]
    f460:	ldr	r3, [r5, #4]
    f464:	ldr	r1, [r5, #8]
    f468:	str	r1, [r3, #4]
    f46c:	bic	r0, r1, #3
    f470:	ldr	r3, [r5, #4]
    f474:	add	r3, r3, r0
    f478:	str	r1, [r3, #-4]
    f47c:	ldr	r1, [r5, #24]
    f480:	ldr	r3, [r5, #20]
    f484:	sub	r3, r3, #12
    f488:	sub	r3, r3, r1
    f48c:	strh	r3, [r2, #2]
    f490:	ldr	r2, [r2]
    f494:	ldr	r3, [r5, #16]
    f498:	str	r2, [r3, r1]
    f49c:	ldr	r3, [r5, #16]
    f4a0:	ldr	r2, [r5, #20]
    f4a4:	str	r2, [r3, #4]
    f4a8:	bic	r1, r2, #3
    f4ac:	ldr	r3, [r5, #16]
    f4b0:	add	r3, r3, r1
    f4b4:	str	r2, [r3, #-4]
    f4b8:	ldr	r3, [r5, #4]
    f4bc:	ldr	r2, [r5, #20]
    f4c0:	mov	r4, #0
    f4c4:	str	r2, [r3, #16]
    f4c8:	str	r4, [r3, #20]
    f4cc:	b	f1b8 <pcapng_create@@Base+0x6c>
    f4d0:	mov	r4, #6
    f4d4:	b	f1b0 <pcapng_create@@Base+0x64>
    f4d8:	mov	r4, #7
    f4dc:	b	f1b0 <pcapng_create@@Base+0x64>
    f4e0:	mov	r4, #6
    f4e4:	b	f1b0 <pcapng_create@@Base+0x64>
    f4e8:	mov	r4, #6
    f4ec:	b	f1b0 <pcapng_create@@Base+0x64>
    f4f0:	mov	r4, #7
    f4f4:	b	f1b0 <pcapng_create@@Base+0x64>
    f4f8:	mov	r0, #0
    f4fc:	str	r0, [sp, #4]
    f500:	ldr	r3, [r5]
    f504:	str	r3, [sp]
    f508:	mov	r3, #1
    f50c:	mov	r2, #3
    f510:	bl	234c <mmap@plt>
    f514:	str	r0, [r5, #4]
    f518:	b	f5b8 <pcapng_create@@Base+0x46c>
    f51c:	ldr	r4, [r5, #8]
    f520:	str	r4, [r5, #12]
    f524:	bl	2388 <getpagesize@plt>
    f528:	mov	r8, r0
    f52c:	add	r1, fp, #3
    f530:	add	r1, r1, r4
    f534:	add	r1, r1, r0
    f538:	udiv	r1, r1, r0
    f53c:	mul	r1, r0, r1
    f540:	str	r1, [r5, #8]
    f544:	subs	r4, r1, r4
    f548:	beq	f4f8 <pcapng_create@@Base+0x3ac>
    f54c:	ldr	r7, [pc, #292]	; f678 <pcapng_create@@Base+0x52c>
    f550:	add	r7, pc, r7
    f554:	add	r7, r7, #24
    f558:	mov	r9, #1
    f55c:	mov	r2, r9
    f560:	mov	r1, r7
    f564:	ldr	r0, [r5]
    f568:	bl	2418 <write@plt>
    f56c:	mov	r6, r0
    f570:	subs	r4, r4, #1
    f574:	movne	r2, #1
    f578:	moveq	r2, #0
    f57c:	adds	r3, r0, #1
    f580:	movne	r3, #1
    f584:	tst	r2, r3
    f588:	bne	f55c <pcapng_create@@Base+0x410>
    f58c:	mov	r0, #0
    f590:	str	r0, [sp, #4]
    f594:	ldr	r3, [r5]
    f598:	str	r3, [sp]
    f59c:	mov	r3, #1
    f5a0:	mov	r2, #3
    f5a4:	ldr	r1, [r5, #8]
    f5a8:	bl	234c <mmap@plt>
    f5ac:	str	r0, [r5, #4]
    f5b0:	cmn	r6, #1
    f5b4:	beq	f4e8 <pcapng_create@@Base+0x39c>
    f5b8:	cmn	r0, #1
    f5bc:	beq	f4f0 <pcapng_create@@Base+0x3a4>
    f5c0:	mov	r2, #0
    f5c4:	mov	r3, #0
    f5c8:	strd	r2, [sp, #12]
    f5cc:	mov	r3, #1
    f5d0:	str	r3, [sp, #8]
    f5d4:	ldrh	r3, [sp, #72]	; 0x48
    f5d8:	strh	r3, [sp, #16]
    f5dc:	ldr	r3, [sp, #76]	; 0x4c
    f5e0:	str	r3, [sp, #20]
    f5e4:	mov	r2, #16
    f5e8:	str	r2, [r5, #20]
    f5ec:	add	r1, sp, #8
    f5f0:	ldr	r0, [r5]
    f5f4:	bl	2418 <write@plt>
    f5f8:	cmp	sl, #0
    f5fc:	cmnne	r0, #1
    f600:	beq	f38c <pcapng_create@@Base+0x240>
    f604:	ldrh	r3, [sl]
    f608:	cmp	r3, #0
    f60c:	beq	f65c <pcapng_create@@Base+0x510>
    f610:	ldrh	r2, [sl, #2]
    f614:	cmp	r2, #0
    f618:	beq	f65c <pcapng_create@@Base+0x510>
    f61c:	ldr	r6, [pc, #88]	; f67c <pcapng_create@@Base+0x530>
    f620:	add	r6, pc, r6
    f624:	add	r6, r6, #24
    f628:	mov	r7, #1
    f62c:	b	f334 <pcapng_create@@Base+0x1e8>
    f630:	ldr	r3, [r5, #8]
    f634:	str	r3, [sp, #4]
    f638:	ldr	r3, [r5]
    f63c:	str	r3, [sp]
    f640:	mov	r3, #1
    f644:	mov	r2, #3
    f648:	ldr	r1, [r5, #20]
    f64c:	mov	r0, #0
    f650:	bl	234c <mmap@plt>
    f654:	str	r0, [r5, #16]
    f658:	b	f430 <pcapng_create@@Base+0x2e4>
    f65c:	ldr	r3, [r5, #20]
    f660:	str	r3, [r5, #24]
    f664:	b	f39c <pcapng_create@@Base+0x250>
    f668:	strdeq	r9, [r0], -r0
    f66c:	muleq	r0, ip, r7
    f670:	andeq	r9, r0, r8, lsl #12
    f674:	andeq	r9, r1, r4, asr sp
    f678:	andeq	r9, r0, ip, ror r4
    f67c:	andeq	r9, r0, ip, lsr #7
    f680:	str	r4, [sp, #-8]!
    f684:	str	lr, [sp, #4]
    f688:	sub	sp, sp, #8
    f68c:	mov	r4, #0
    f690:	mov	lr, #1
    f694:	mov	r2, r4
    f698:	cmp	r1, #0
    f69c:	eorne	r3, r2, #1
    f6a0:	moveq	r3, #0
    f6a4:	cmp	r3, #0
    f6a8:	beq	f6e4 <pcapng_create@@Base+0x598>
    f6ac:	ldrh	r3, [r1]
    f6b0:	cmp	r3, #0
    f6b4:	beq	f700 <pcapng_create@@Base+0x5b4>
    f6b8:	ldrh	ip, [r1, #2]
    f6bc:	cmp	ip, #0
    f6c0:	beq	f700 <pcapng_create@@Base+0x5b4>
    f6c4:	mov	r2, lr
    f6c8:	cmp	r3, #9
    f6cc:	beq	f698 <pcapng_create@@Base+0x54c>
    f6d0:	add	r3, ip, #3
    f6d4:	bic	r3, r3, #3
    f6d8:	add	r3, r3, #4
    f6dc:	add	r1, r1, r3
    f6e0:	b	f694 <pcapng_create@@Base+0x548>
    f6e4:	cmp	r2, #0
    f6e8:	movne	r0, #0
    f6ec:	beq	f700 <pcapng_create@@Base+0x5b4>
    f6f0:	add	sp, sp, #8
    f6f4:	ldr	r4, [sp]
    f6f8:	add	sp, sp, #4
    f6fc:	pop	{pc}		; (ldr pc, [sp], #4)
    f700:	ldr	r3, [pc, #28]	; f724 <pcapng_create@@Base+0x5d8>
    f704:	add	r3, pc, r3
    f708:	ldr	r2, [r3]
    f70c:	str	r2, [sp]
    f710:	ldrb	r3, [r3, #4]
    f714:	mov	r1, sp
    f718:	strb	r3, [r1, #4]
    f71c:	bl	213c <pcapng_append_interface_option@plt>
    f720:	b	f6f0 <pcapng_create@@Base+0x5a4>
    f724:	andeq	r9, r0, r4, ror #5

0000f728 <btbb_pcapng_create_file@@Base>:
    f728:	strd	r4, [sp, #-28]!	; 0xffffffe4
    f72c:	strd	r6, [sp, #8]
    f730:	strd	r8, [sp, #16]
    f734:	str	lr, [sp, #24]
    f738:	sub	sp, sp, #292	; 0x124
    f73c:	mov	r9, r0
    f740:	mov	r5, r1
    f744:	mov	r8, r2
    f748:	ldr	r7, [pc, #256]	; f850 <btbb_pcapng_create_file@@Base+0x128>
    f74c:	add	r7, pc, r7
    f750:	mov	r0, #28
    f754:	bl	22c8 <malloc@plt>
    f758:	subs	r6, r0, #0
    f75c:	beq	f848 <btbb_pcapng_create_file@@Base+0x120>
    f760:	mov	r2, #260	; 0x104
    f764:	mov	r1, #0
    f768:	add	r4, sp, #28
    f76c:	mov	r0, r4
    f770:	bl	23c4 <memset@plt>
    f774:	mov	r3, #3
    f778:	strh	r3, [r4]
    f77c:	cmp	r5, #0
    f780:	beq	f7b0 <btbb_pcapng_create_file@@Base+0x88>
    f784:	mov	r2, #256	; 0x100
    f788:	mov	r1, r5
    f78c:	add	r4, sp, #32
    f790:	mov	r0, r4
    f794:	bl	23dc <strncpy@plt>
    f798:	mov	r3, #0
    f79c:	strb	r3, [sp, #287]	; 0x11f
    f7a0:	mov	r0, r4
    f7a4:	bl	2334 <strlen@plt>
    f7a8:	add	r5, sp, #28
    f7ac:	strh	r0, [sp, #30]
    f7b0:	bl	2388 <getpagesize@plt>
    f7b4:	mov	r3, r0
    f7b8:	ldr	r2, [pc, #148]	; f854 <btbb_pcapng_create_file@@Base+0x12c>
    f7bc:	ldr	r2, [r7, r2]
    f7c0:	str	r2, [sp, #20]
    f7c4:	str	r0, [sp, #12]
    f7c8:	str	r5, [sp, #8]
    f7cc:	mov	r2, #400	; 0x190
    f7d0:	str	r2, [sp, #4]
    f7d4:	mov	r2, #255	; 0xff
    f7d8:	str	r2, [sp]
    f7dc:	ldr	r2, [sp, #20]
    f7e0:	mov	r1, r9
    f7e4:	mov	r0, r6
    f7e8:	bl	21fc <pcapng_create@plt>
    f7ec:	cmp	r0, #0
    f7f0:	rsbne	r4, r0, #0
    f7f4:	beq	f81c <btbb_pcapng_create_file@@Base+0xf4>
    f7f8:	mov	r0, r6
    f7fc:	bl	2148 <free@plt>
    f800:	mov	r0, r4
    f804:	add	sp, sp, #292	; 0x124
    f808:	ldrd	r4, [sp]
    f80c:	ldrd	r6, [sp, #8]
    f810:	ldrd	r8, [sp, #16]
    f814:	add	sp, sp, #24
    f818:	pop	{pc}		; (ldr pc, [sp], #4)
    f81c:	mov	r1, r5
    f820:	mov	r0, r6
    f824:	bl	f680 <pcapng_create@@Base+0x534>
    f828:	subs	r4, r0, #0
    f82c:	streq	r6, [r8]
    f830:	moveq	r4, #0
    f834:	beq	f800 <btbb_pcapng_create_file@@Base+0xd8>
    f838:	mov	r0, r6
    f83c:	bl	249c <pcapng_close@plt>
    f840:	rsb	r4, r4, #0
    f844:	b	f7f8 <btbb_pcapng_create_file@@Base+0xd0>
    f848:	mvn	r4, #4
    f84c:	b	f800 <btbb_pcapng_create_file@@Base+0xd8>
    f850:	andeq	r9, r1, ip, lsr #17
    f854:	muleq	r0, r4, r1

0000f858 <btbb_pcapng_append_packet@@Base>:
    f858:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f85c:	strd	r6, [sp, #8]
    f860:	strd	r8, [sp, #16]
    f864:	strd	sl, [sp, #24]
    f868:	str	lr, [sp, #32]
    f86c:	add	fp, sp, #32
    f870:	sub	sp, sp, #492	; 0x1ec
    f874:	str	r0, [fp, #-520]	; 0xfffffdf8
    f878:	str	r2, [fp, #-512]	; 0xfffffe00
    f87c:	str	r3, [fp, #-516]	; 0xfffffdfc
    f880:	ldrsb	r9, [fp, #4]
    f884:	ldrsb	r8, [fp, #8]
    f888:	ldrb	r7, [fp, #16]
    f88c:	cmp	r8, r9
    f890:	movlt	r3, #7
    f894:	movge	r3, #3
    f898:	ldr	r1, [fp, #12]
    f89c:	cmn	r1, #1
    f8a0:	movne	r5, #16
    f8a4:	moveq	r5, #0
    f8a8:	orr	r5, r5, r3
    f8ac:	cmp	r7, #255	; 0xff
    f8b0:	movne	r3, #128	; 0x80
    f8b4:	moveq	r3, #0
    f8b8:	orr	r5, r5, r3
    f8bc:	ldr	r0, [fp, #20]
    f8c0:	bl	2328 <btbb_packet_get_payload_length@plt>
    f8c4:	mov	r4, r0
    f8c8:	add	r3, r0, #7
    f8cc:	bic	r3, r3, #7
    f8d0:	sub	sp, sp, r3
    f8d4:	str	sp, [fp, #-524]	; 0xfffffdf4
    f8d8:	mov	r1, sp
    f8dc:	ldr	r0, [fp, #20]
    f8e0:	bl	20f4 <btbb_get_payload_packed@plt>
    f8e4:	cmp	r4, #400	; 0x190
    f8e8:	movge	r4, #400	; 0x190
    f8ec:	ldr	r0, [fp, #20]
    f8f0:	bl	246c <btbb_packet_get_channel@plt>
    f8f4:	str	r0, [fp, #-496]	; 0xfffffe10
    f8f8:	ldr	r0, [fp, #20]
    f8fc:	bl	2160 <btbb_packet_get_ac_errors@plt>
    f900:	str	r0, [fp, #-500]	; 0xfffffe0c
    f904:	ldr	r0, [fp, #20]
    f908:	bl	23a0 <btbb_packet_get_transport@plt>
    f90c:	str	r0, [fp, #-504]	; 0xfffffe08
    f910:	ldr	r0, [fp, #20]
    f914:	bl	2154 <btbb_packet_get_modulation@plt>
    f918:	str	r0, [fp, #-508]	; 0xfffffe04
    f91c:	ldr	r0, [fp, #20]
    f920:	bl	23f4 <btbb_packet_get_lap@plt>
    f924:	mov	sl, r0
    f928:	ldr	r0, [fp, #20]
    f92c:	bl	2358 <btbb_packet_get_header_packed@plt>
    f930:	add	r2, r4, #22
    f934:	add	r6, r4, #61	; 0x3d
    f938:	bic	r6, r6, #3
    f93c:	mov	r3, #6
    f940:	str	r3, [fp, #-488]	; 0xfffffe18
    f944:	str	r6, [fp, #-484]	; 0xfffffe1c
    f948:	mov	r3, #0
    f94c:	str	r3, [fp, #-480]	; 0xfffffe20
    f950:	ldr	r1, [fp, #-516]	; 0xfffffdfc
    f954:	str	r1, [fp, #-476]	; 0xfffffe24
    f958:	ldr	r1, [fp, #-512]	; 0xfffffe00
    f95c:	str	r1, [fp, #-472]	; 0xfffffe28
    f960:	str	r2, [fp, #-468]	; 0xfffffe2c
    f964:	str	r2, [fp, #-464]	; 0xfffffe30
    f968:	ldr	r2, [fp, #-496]	; 0xfffffe10
    f96c:	strb	r2, [fp, #-460]	; 0xfffffe34
    f970:	strb	r9, [fp, #-459]	; 0xfffffe35
    f974:	strb	r8, [fp, #-458]	; 0xfffffe36
    f978:	ldr	r2, [fp, #-500]	; 0xfffffe0c
    f97c:	strb	r2, [fp, #-457]	; 0xfffffe37
    f980:	ldr	r2, [fp, #-508]	; 0xfffffe04
    f984:	ldr	r1, [fp, #-504]	; 0xfffffe08
    f988:	orr	r2, r2, r1, lsl #4
    f98c:	strb	r2, [fp, #-456]	; 0xfffffe38
    f990:	strb	r3, [fp, #-455]	; 0xfffffe39
    f994:	sub	r2, fp, #488	; 0x1e8
    f998:	strh	r3, [r2, #34]	; 0x22
    f99c:	str	sl, [fp, #-452]	; 0xfffffe3c
    f9a0:	ldr	r3, [fp, #12]
    f9a4:	bic	r3, r3, #-16777216	; 0xff000000
    f9a8:	orr	r7, r3, r7, lsl #24
    f9ac:	str	r7, [fp, #-448]	; 0xfffffe40
    f9b0:	str	r0, [fp, #-444]	; 0xfffffe44
    f9b4:	strh	r5, [r2, #48]	; 0x30
    f9b8:	cmp	r4, #0
    f9bc:	beq	f9e4 <btbb_pcapng_append_packet@@Base+0x18c>
    f9c0:	cmp	r4, #400	; 0x190
    f9c4:	bhi	fa24 <btbb_pcapng_append_packet@@Base+0x1cc>
    f9c8:	mov	r2, r4
    f9cc:	ldr	r1, [fp, #-524]	; 0xfffffdf4
    f9d0:	sub	r4, fp, #488	; 0x1e8
    f9d4:	add	r0, r4, #50	; 0x32
    f9d8:	bl	216c <memcpy@plt>
    f9dc:	orr	r5, r5, #32
    f9e0:	strh	r5, [r4, #48]	; 0x30
    f9e4:	sub	r3, fp, #36	; 0x24
    f9e8:	add	r3, r3, r6
    f9ec:	mov	r2, #0
    f9f0:	str	r2, [r3, #-460]	; 0xfffffe34
    f9f4:	str	r6, [r3, #-456]	; 0xfffffe38
    f9f8:	sub	r1, fp, #488	; 0x1e8
    f9fc:	ldr	r0, [fp, #-520]	; 0xfffffdf8
    fa00:	bl	2394 <pcapng_append_packet@plt>
    fa04:	rsb	r0, r0, #0
    fa08:	sub	sp, fp, #32
    fa0c:	ldrd	r4, [sp]
    fa10:	ldrd	r6, [sp, #8]
    fa14:	ldrd	r8, [sp, #16]
    fa18:	ldrd	sl, [sp, #24]
    fa1c:	add	sp, sp, #32
    fa20:	pop	{pc}		; (ldr pc, [sp], #4)
    fa24:	ldr	r3, [pc, #28]	; fa48 <btbb_pcapng_append_packet@@Base+0x1f0>
    fa28:	add	r3, pc, r3
    fa2c:	add	r3, r3, #8
    fa30:	mov	r2, #221	; 0xdd
    fa34:	ldr	r1, [pc, #16]	; fa4c <btbb_pcapng_append_packet@@Base+0x1f4>
    fa38:	add	r1, pc, r1
    fa3c:	ldr	r0, [pc, #12]	; fa50 <btbb_pcapng_append_packet@@Base+0x1f8>
    fa40:	add	r0, pc, r0
    fa44:	bl	24f0 <__assert_fail@plt>
    fa48:	andeq	r8, r0, r0, asr #31
    fa4c:	andeq	r9, r0, r4
    fa50:	andeq	r9, r0, ip, asr #32

0000fa54 <btbb_pcapng_record_bdaddr@@Base>:
    fa54:	push	{lr}		; (str lr, [sp, #-4]!)
    fa58:	sub	sp, sp, #20
    fa5c:	movw	r1, #54080	; 0xd340
    fa60:	movt	r1, #65535	; 0xffff
    fa64:	strh	r1, [sp, #4]
    fa68:	mov	r1, #12
    fa6c:	strh	r1, [sp, #6]
    fa70:	strb	r2, [sp, #8]
    fa74:	lsr	r1, r2, #8
    fa78:	strb	r1, [sp, #9]
    fa7c:	lsr	r1, r2, #16
    fa80:	strb	r1, [sp, #10]
    fa84:	lsr	r2, r2, #24
    fa88:	strb	r2, [sp, #11]
    fa8c:	strb	r3, [sp, #12]
    fa90:	lsr	r3, r3, #8
    fa94:	strb	r3, [sp, #13]
    fa98:	ldrb	r3, [sp, #24]
    fa9c:	strb	r3, [sp, #14]
    faa0:	ldrb	r3, [sp, #28]
    faa4:	strb	r3, [sp, #15]
    faa8:	add	r1, sp, #4
    faac:	bl	213c <pcapng_append_interface_option@plt>
    fab0:	rsb	r0, r0, #0
    fab4:	add	sp, sp, #20
    fab8:	pop	{pc}		; (ldr pc, [sp], #4)

0000fabc <btbb_pcapng_record_btclock@@Base>:
    fabc:	push	{lr}		; (str lr, [sp, #-4]!)
    fac0:	sub	sp, sp, #28
    fac4:	movw	r3, #54081	; 0xd341
    fac8:	movt	r3, #65535	; 0xffff
    facc:	strh	r3, [sp]
    fad0:	mov	r3, #24
    fad4:	strh	r3, [sp, #2]
    fad8:	ldr	r3, [sp, #32]
    fadc:	str	r3, [sp, #4]
    fae0:	ldr	r3, [sp, #36]	; 0x24
    fae4:	str	r3, [sp, #8]
    fae8:	str	r2, [sp, #12]
    faec:	ldr	r3, [sp, #40]	; 0x28
    faf0:	str	r3, [sp, #16]
    faf4:	ldr	r3, [sp, #44]	; 0x2c
    faf8:	str	r3, [sp, #20]
    fafc:	mov	r1, sp
    fb00:	bl	213c <pcapng_append_interface_option@plt>
    fb04:	rsb	r0, r0, #0
    fb08:	add	sp, sp, #28
    fb0c:	pop	{pc}		; (ldr pc, [sp], #4)

0000fb10 <btbb_pcapng_close@@Base>:
    fb10:	str	r4, [sp, #-8]!
    fb14:	str	lr, [sp, #4]
    fb18:	mov	r4, r0
    fb1c:	bl	249c <pcapng_close@plt>
    fb20:	cmp	r4, #0
    fb24:	beq	fb30 <btbb_pcapng_close@@Base+0x20>
    fb28:	mov	r0, r4
    fb2c:	bl	2148 <free@plt>
    fb30:	mvn	r0, #0
    fb34:	ldr	r4, [sp]
    fb38:	add	sp, sp, #4
    fb3c:	pop	{pc}		; (ldr pc, [sp], #4)

0000fb40 <lell_pcapng_create_file@@Base>:
    fb40:	strd	r4, [sp, #-28]!	; 0xffffffe4
    fb44:	strd	r6, [sp, #8]
    fb48:	strd	r8, [sp, #16]
    fb4c:	str	lr, [sp, #24]
    fb50:	sub	sp, sp, #292	; 0x124
    fb54:	mov	r9, r0
    fb58:	mov	r5, r1
    fb5c:	mov	r8, r2
    fb60:	ldr	r7, [pc, #256]	; fc68 <lell_pcapng_create_file@@Base+0x128>
    fb64:	add	r7, pc, r7
    fb68:	mov	r0, #28
    fb6c:	bl	22c8 <malloc@plt>
    fb70:	subs	r6, r0, #0
    fb74:	beq	fc60 <lell_pcapng_create_file@@Base+0x120>
    fb78:	mov	r2, #260	; 0x104
    fb7c:	mov	r1, #0
    fb80:	add	r4, sp, #28
    fb84:	mov	r0, r4
    fb88:	bl	23c4 <memset@plt>
    fb8c:	mov	r3, #3
    fb90:	strh	r3, [r4]
    fb94:	cmp	r5, #0
    fb98:	beq	fbc8 <lell_pcapng_create_file@@Base+0x88>
    fb9c:	mov	r2, #256	; 0x100
    fba0:	mov	r1, r5
    fba4:	add	r4, sp, #32
    fba8:	mov	r0, r4
    fbac:	bl	23dc <strncpy@plt>
    fbb0:	mov	r3, #0
    fbb4:	strb	r3, [sp, #287]	; 0x11f
    fbb8:	mov	r0, r4
    fbbc:	bl	2334 <strlen@plt>
    fbc0:	add	r5, sp, #28
    fbc4:	strh	r0, [sp, #30]
    fbc8:	bl	2388 <getpagesize@plt>
    fbcc:	mov	r3, r0
    fbd0:	ldr	r2, [pc, #148]	; fc6c <lell_pcapng_create_file@@Base+0x12c>
    fbd4:	ldr	r2, [r7, r2]
    fbd8:	str	r2, [sp, #20]
    fbdc:	str	r0, [sp, #12]
    fbe0:	str	r5, [sp, #8]
    fbe4:	mov	r2, #64	; 0x40
    fbe8:	str	r2, [sp, #4]
    fbec:	mov	r2, #256	; 0x100
    fbf0:	str	r2, [sp]
    fbf4:	ldr	r2, [sp, #20]
    fbf8:	mov	r1, r9
    fbfc:	mov	r0, r6
    fc00:	bl	21fc <pcapng_create@plt>
    fc04:	cmp	r0, #0
    fc08:	rsbne	r4, r0, #0
    fc0c:	beq	fc34 <lell_pcapng_create_file@@Base+0xf4>
    fc10:	mov	r0, r6
    fc14:	bl	2148 <free@plt>
    fc18:	mov	r0, r4
    fc1c:	add	sp, sp, #292	; 0x124
    fc20:	ldrd	r4, [sp]
    fc24:	ldrd	r6, [sp, #8]
    fc28:	ldrd	r8, [sp, #16]
    fc2c:	add	sp, sp, #24
    fc30:	pop	{pc}		; (ldr pc, [sp], #4)
    fc34:	mov	r1, r5
    fc38:	mov	r0, r6
    fc3c:	bl	f680 <pcapng_create@@Base+0x534>
    fc40:	subs	r4, r0, #0
    fc44:	streq	r6, [r8]
    fc48:	moveq	r4, #0
    fc4c:	beq	fc18 <lell_pcapng_create_file@@Base+0xd8>
    fc50:	mov	r0, r6
    fc54:	bl	249c <pcapng_close@plt>
    fc58:	rsb	r4, r4, #0
    fc5c:	b	fc10 <lell_pcapng_create_file@@Base+0xd0>
    fc60:	mvn	r4, #4
    fc64:	b	fc18 <lell_pcapng_create_file@@Base+0xd8>
    fc68:	muleq	r1, r4, r4
    fc6c:	muleq	r0, r4, r1

0000fc70 <lell_pcapng_record_connect_req@@Base>:
    fc70:	push	{lr}		; (str lr, [sp, #-4]!)
    fc74:	sub	sp, sp, #52	; 0x34
    fc78:	ldr	r1, [sp, #56]	; 0x38
    fc7c:	movw	ip, #54144	; 0xd380
    fc80:	movt	ip, #65535	; 0xffff
    fc84:	strh	ip, [sp]
    fc88:	mov	ip, #46	; 0x2e
    fc8c:	strh	ip, [sp, #2]
    fc90:	str	r2, [sp, #4]
    fc94:	str	r3, [sp, #8]
    fc98:	ldr	ip, [r1]
    fc9c:	ldr	r2, [r1, #4]
    fca0:	str	ip, [sp, #12]
    fca4:	str	r2, [sp, #16]
    fca8:	ldr	ip, [r1, #8]
    fcac:	ldr	r2, [r1, #12]
    fcb0:	str	ip, [sp, #20]
    fcb4:	str	r2, [sp, #24]
    fcb8:	ldr	ip, [r1, #16]
    fcbc:	ldr	r2, [r1, #20]
    fcc0:	str	ip, [sp, #28]
    fcc4:	str	r2, [sp, #32]
    fcc8:	ldr	ip, [r1, #24]
    fccc:	ldr	r2, [r1, #28]
    fcd0:	str	ip, [sp, #36]	; 0x24
    fcd4:	str	r2, [sp, #40]	; 0x28
    fcd8:	ldrh	r2, [r1, #32]
    fcdc:	strh	r2, [sp, #44]	; 0x2c
    fce0:	mov	r1, sp
    fce4:	bl	213c <pcapng_append_interface_option@plt>
    fce8:	rsb	r0, r0, #0
    fcec:	add	sp, sp, #52	; 0x34
    fcf0:	pop	{pc}		; (ldr pc, [sp], #4)

0000fcf4 <lell_pcapng_append_packet@@Base>:
    fcf4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    fcf8:	strd	r6, [sp, #8]
    fcfc:	strd	r8, [sp, #16]
    fd00:	strd	sl, [sp, #24]
    fd04:	str	lr, [sp, #32]
    fd08:	sub	sp, sp, #316	; 0x13c
    fd0c:	mov	r8, r0
    fd10:	mov	sl, r2
    fd14:	mov	r9, r3
    fd18:	add	r3, sp, #352	; 0x160
    fd1c:	ldrsb	r7, [r3]
    fd20:	add	r3, sp, #356	; 0x164
    fd24:	ldrsb	r6, [r3]
    fd28:	ldr	r5, [sp, #364]	; 0x16c
    fd2c:	cmp	r6, r7
    fd30:	movlt	r4, #39	; 0x27
    fd34:	movge	r4, #35	; 0x23
    fd38:	mov	r0, r5
    fd3c:	bl	2118 <lell_packet_is_data@plt>
    fd40:	cmp	r0, #0
    fd44:	movne	r1, #0
    fd48:	moveq	r1, #16
    fd4c:	orr	r1, r4, r1
    fd50:	ldr	r3, [r5, #72]	; 0x48
    fd54:	add	r2, r3, #9
    fd58:	ldrb	lr, [r5, #69]	; 0x45
    fd5c:	ldrb	ip, [r5, #92]	; 0x5c
    fd60:	cmp	r2, #255	; 0xff
    fd64:	bhi	fe0c <lell_pcapng_append_packet@@Base+0x118>
    fd68:	add	r0, r3, #19
    fd6c:	add	r3, r3, #58	; 0x3a
    fd70:	bic	r4, r3, #3
    fd74:	mov	r3, #6
    fd78:	str	r3, [sp, #8]
    fd7c:	str	r4, [sp, #12]
    fd80:	mov	fp, #0
    fd84:	str	fp, [sp, #16]
    fd88:	str	r9, [sp, #20]
    fd8c:	str	sl, [sp, #24]
    fd90:	str	r0, [sp, #28]
    fd94:	str	r0, [sp, #32]
    fd98:	strb	lr, [sp, #36]	; 0x24
    fd9c:	strb	r7, [sp, #37]	; 0x25
    fda0:	strb	r6, [sp, #38]	; 0x26
    fda4:	strb	ip, [sp, #39]	; 0x27
    fda8:	ldr	r3, [sp, #360]	; 0x168
    fdac:	str	r3, [sp, #40]	; 0x28
    fdb0:	add	r6, sp, #8
    fdb4:	strh	r1, [sp, #44]	; 0x2c
    fdb8:	mov	r1, r5
    fdbc:	add	r0, sp, #46	; 0x2e
    fdc0:	bl	216c <memcpy@plt>
    fdc4:	add	r3, sp, #312	; 0x138
    fdc8:	add	r3, r3, r4
    fdcc:	str	fp, [r3, #-312]	; 0xfffffec8
    fdd0:	str	r4, [r3, #-308]	; 0xfffffecc
    fdd4:	mov	r1, r6
    fdd8:	mov	r0, r8
    fddc:	bl	2394 <pcapng_append_packet@plt>
    fde0:	rsb	r4, r0, #0
    fde4:	cmp	r4, fp
    fde8:	beq	fe30 <lell_pcapng_append_packet@@Base+0x13c>
    fdec:	mov	r0, r4
    fdf0:	add	sp, sp, #316	; 0x13c
    fdf4:	ldrd	r4, [sp]
    fdf8:	ldrd	r6, [sp, #8]
    fdfc:	ldrd	r8, [sp, #16]
    fe00:	ldrd	sl, [sp, #24]
    fe04:	add	sp, sp, #32
    fe08:	pop	{pc}		; (ldr pc, [sp], #4)
    fe0c:	ldr	r3, [pc, #80]	; fe64 <lell_pcapng_append_packet@@Base+0x170>
    fe10:	add	r3, pc, r3
    fe14:	add	r3, r3, #40	; 0x28
    fe18:	movw	r2, #441	; 0x1b9
    fe1c:	ldr	r1, [pc, #68]	; fe68 <lell_pcapng_append_packet@@Base+0x174>
    fe20:	add	r1, pc, r1
    fe24:	ldr	r0, [pc, #64]	; fe6c <lell_pcapng_append_packet@@Base+0x178>
    fe28:	add	r0, pc, r0
    fe2c:	bl	24f0 <__assert_fail@plt>
    fe30:	mov	r0, r5
    fe34:	bl	2118 <lell_packet_is_data@plt>
    fe38:	cmp	r0, fp
    fe3c:	bne	fdec <lell_pcapng_append_packet@@Base+0xf8>
    fe40:	ldrb	r3, [r5, #80]	; 0x50
    fe44:	cmp	r3, #5
    fe48:	bne	fdec <lell_pcapng_append_packet@@Base+0xf8>
    fe4c:	str	r5, [sp]
    fe50:	mov	r2, sl
    fe54:	mov	r3, r9
    fe58:	mov	r0, r8
    fe5c:	bl	2364 <lell_pcapng_record_connect_req@plt>
    fe60:	b	fdec <lell_pcapng_append_packet@@Base+0xf8>
    fe64:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    fe68:	andeq	r8, r0, ip, lsl ip
    fe6c:	muleq	r0, ip, ip

0000fe70 <lell_pcapng_close@@Base>:
    fe70:	str	r4, [sp, #-8]!
    fe74:	str	lr, [sp, #4]
    fe78:	mov	r4, r0
    fe7c:	bl	249c <pcapng_close@plt>
    fe80:	cmp	r4, #0
    fe84:	beq	fe90 <lell_pcapng_close@@Base+0x20>
    fe88:	mov	r0, r4
    fe8c:	bl	2148 <free@plt>
    fe90:	mvn	r0, #0
    fe94:	ldr	r4, [sp]
    fe98:	add	sp, sp, #4
    fe9c:	pop	{pc}		; (ldr pc, [sp], #4)
    fea0:	cmp	r3, #0
    fea4:	cmpeq	r2, #0
    fea8:	bne	fec0 <lell_pcapng_close@@Base+0x50>
    feac:	cmp	r1, #0
    feb0:	cmpeq	r0, #0
    feb4:	mvnne	r1, #0
    feb8:	mvnne	r0, #0
    febc:	b	fedc <lell_pcapng_close@@Base+0x6c>
    fec0:	sub	sp, sp, #8
    fec4:	push	{sp, lr}
    fec8:	bl	ff50 <lell_pcapng_close@@Base+0xe0>
    fecc:	ldr	lr, [sp, #4]
    fed0:	add	sp, sp, #8
    fed4:	pop	{r2, r3}
    fed8:	bx	lr
    fedc:	push	{r1, lr}
    fee0:	mov	r0, #8
    fee4:	bl	20b8 <raise@plt>
    fee8:	pop	{r1, pc}
    feec:	ldr	ip, [pc, #80]	; ff44 <lell_pcapng_close@@Base+0xd4>
    fef0:	ldr	r2, [pc, #80]	; ff48 <lell_pcapng_close@@Base+0xd8>
    fef4:	and	r3, ip, r0, lsr #1
    fef8:	and	ip, ip, r1, lsr #1
    fefc:	sub	ip, r1, ip
    ff00:	sub	r0, r0, r3
    ff04:	and	r3, r0, r2
    ff08:	and	r1, ip, r2
    ff0c:	and	r0, r2, r0, lsr #2
    ff10:	and	r2, r2, ip, lsr #2
    ff14:	add	r3, r3, r0
    ff18:	add	r1, r1, r2
    ff1c:	ldr	r0, [pc, #40]	; ff4c <lell_pcapng_close@@Base+0xdc>
    ff20:	add	r1, r1, r1, lsr #4
    ff24:	add	r3, r3, r3, lsr #4
    ff28:	and	r3, r3, r0
    ff2c:	and	r0, r0, r1
    ff30:	add	r0, r0, r3
    ff34:	add	r0, r0, r0, lsl #8
    ff38:	add	r0, r0, r0, lsl #16
    ff3c:	lsr	r0, r0, #24
    ff40:	bx	lr
    ff44:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
    ff48:	teqcc	r3, #-872415232	; 0xcc000000
    ff4c:	svceq	0x000f0f0f
    ff50:	cmp	r1, r3
    ff54:	cmpeq	r0, r2
    ff58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ff5c:	mov	r4, r0
    ff60:	movcc	r0, #0
    ff64:	mov	r5, r1
    ff68:	ldr	lr, [sp, #36]	; 0x24
    ff6c:	movcc	r1, r0
    ff70:	bcc	1006c <lell_pcapng_close@@Base+0x1fc>
    ff74:	cmp	r3, #0
    ff78:	clzeq	ip, r2
    ff7c:	clzne	ip, r3
    ff80:	addeq	ip, ip, #32
    ff84:	cmp	r5, #0
    ff88:	clzeq	r1, r4
    ff8c:	addeq	r1, r1, #32
    ff90:	clzne	r1, r5
    ff94:	sub	ip, ip, r1
    ff98:	sub	sl, ip, #32
    ff9c:	lsl	r9, r3, ip
    ffa0:	rsb	fp, ip, #32
    ffa4:	orr	r9, r9, r2, lsl sl
    ffa8:	orr	r9, r9, r2, lsr fp
    ffac:	lsl	r8, r2, ip
    ffb0:	cmp	r5, r9
    ffb4:	cmpeq	r4, r8
    ffb8:	movcc	r0, #0
    ffbc:	movcc	r1, r0
    ffc0:	bcc	ffdc <lell_pcapng_close@@Base+0x16c>
    ffc4:	mov	r0, #1
    ffc8:	subs	r4, r4, r8
    ffcc:	lsl	r1, r0, sl
    ffd0:	orr	r1, r1, r0, lsr fp
    ffd4:	lsl	r0, r0, ip
    ffd8:	sbc	r5, r5, r9
    ffdc:	cmp	ip, #0
    ffe0:	beq	1006c <lell_pcapng_close@@Base+0x1fc>
    ffe4:	lsr	r6, r8, #1
    ffe8:	orr	r6, r6, r9, lsl #31
    ffec:	lsr	r7, r9, #1
    fff0:	mov	r2, ip
    fff4:	b	10018 <lell_pcapng_close@@Base+0x1a8>
    fff8:	subs	r3, r4, r6
    fffc:	sbc	r8, r5, r7
   10000:	adds	r3, r3, r3
   10004:	adc	r8, r8, r8
   10008:	adds	r4, r3, #1
   1000c:	adc	r5, r8, #0
   10010:	subs	r2, r2, #1
   10014:	beq	10034 <lell_pcapng_close@@Base+0x1c4>
   10018:	cmp	r5, r7
   1001c:	cmpeq	r4, r6
   10020:	bcs	fff8 <lell_pcapng_close@@Base+0x188>
   10024:	adds	r4, r4, r4
   10028:	adc	r5, r5, r5
   1002c:	subs	r2, r2, #1
   10030:	bne	10018 <lell_pcapng_close@@Base+0x1a8>
   10034:	lsr	r3, r4, ip
   10038:	orr	r3, r3, r5, lsl fp
   1003c:	lsr	r2, r5, ip
   10040:	orr	r3, r3, r5, lsr sl
   10044:	adds	r0, r0, r4
   10048:	mov	r4, r3
   1004c:	lsl	r3, r2, ip
   10050:	orr	r3, r3, r4, lsl sl
   10054:	lsl	ip, r4, ip
   10058:	orr	r3, r3, r4, lsr fp
   1005c:	adc	r1, r1, r5
   10060:	subs	r0, r0, ip
   10064:	mov	r5, r2
   10068:	sbc	r1, r1, r3
   1006c:	cmp	lr, #0
   10070:	strdne	r4, [lr]
   10074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00010078 <.fini>:
   10078:	push	{r3, lr}
   1007c:	pop	{r3, pc}
