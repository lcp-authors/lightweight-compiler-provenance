
../repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

000106b0 <.init>:
   106b0:	push	{r3, lr}
   106b4:	bl	108ec <_start@@Base+0x3c>
   106b8:	pop	{r3, pc}

Disassembly of section .plt:

000106bc <printf@plt-0x14>:
   106bc:	push	{lr}		; (str lr, [sp, #-4]!)
   106c0:	ldr	lr, [pc, #4]	; 106cc <printf@plt-0x4>
   106c4:	add	lr, pc, lr
   106c8:	ldr	pc, [lr, #8]!
   106cc:	andeq	r0, r1, r4, lsr r9

000106d0 <printf@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #16, 20	; 0x10000
   106d8:	ldr	pc, [ip, #2356]!	; 0x934

000106dc <free@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #16, 20	; 0x10000
   106e4:	ldr	pc, [ip, #2348]!	; 0x92c

000106e8 <fgets@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #16, 20	; 0x10000
   106f0:	ldr	pc, [ip, #2340]!	; 0x924

000106f4 <getchar@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #16, 20	; 0x10000
   106fc:	ldr	pc, [ip, #2332]!	; 0x91c

00010700 <realloc@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #16, 20	; 0x10000
   10708:	ldr	pc, [ip, #2324]!	; 0x914

0001070c <strcpy@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #16, 20	; 0x10000
   10714:	ldr	pc, [ip, #2316]!	; 0x90c

00010718 <puts@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #16, 20	; 0x10000
   10720:	ldr	pc, [ip, #2308]!	; 0x904

00010724 <malloc@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #16, 20	; 0x10000
   1072c:	ldr	pc, [ip, #2300]!	; 0x8fc

00010730 <__libc_start_main@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #16, 20	; 0x10000
   10738:	ldr	pc, [ip, #2292]!	; 0x8f4

0001073c <__gmon_start__@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #16, 20	; 0x10000
   10744:	ldr	pc, [ip, #2284]!	; 0x8ec

00010748 <strlen@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #16, 20	; 0x10000
   10750:	ldr	pc, [ip, #2276]!	; 0x8e4

00010754 <__isoc99_scanf@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2268]!	; 0x8dc

00010760 <abort@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2260]!	; 0x8d4

Disassembly of section .text:

0001076c <main@@Base>:
   1076c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10770:	mov	r0, #12
   10774:	sub	sp, sp, #92	; 0x5c
   10778:	ldr	r7, [pc, #280]	; 10898 <main@@Base+0x12c>
   1077c:	bl	10724 <malloc@plt>
   10780:	ldr	r8, [pc, #276]	; 1089c <main@@Base+0x130>
   10784:	mov	r3, #0
   10788:	mov	r4, r0
   1078c:	ldr	r6, [pc, #268]	; 108a0 <main@@Base+0x134>
   10790:	str	r3, [r0]
   10794:	str	r3, [r0, #4]
   10798:	str	r3, [r0, #8]
   1079c:	sub	r9, r4, #4
   107a0:	mov	r5, #0
   107a4:	add	r5, r5, #1
   107a8:	mov	r0, r7
   107ac:	mov	r1, r5
   107b0:	bl	106d0 <printf@plt>
   107b4:	ldr	r0, [r9, #4]!
   107b8:	cmp	r0, #0
   107bc:	moveq	r0, r8
   107c0:	bl	10718 <puts@plt>
   107c4:	cmp	r5, #3
   107c8:	bne	107a4 <main@@Base+0x38>
   107cc:	ldr	r9, [pc, #208]	; 108a4 <main@@Base+0x138>
   107d0:	mov	r1, #3
   107d4:	mov	r0, r6
   107d8:	bl	106d0 <printf@plt>
   107dc:	add	r1, sp, #4
   107e0:	mov	r0, r9
   107e4:	bl	10754 <__isoc99_scanf@plt>
   107e8:	bl	106f4 <getchar@plt>
   107ec:	ldr	r5, [sp, #4]
   107f0:	cmp	r5, #3
   107f4:	bhi	107d0 <main@@Base+0x64>
   107f8:	cmp	r5, #0
   107fc:	beq	1086c <main@@Base+0x100>
   10800:	ldr	r0, [pc, #160]	; 108a8 <main@@Base+0x13c>
   10804:	bl	106d0 <printf@plt>
   10808:	ldr	r3, [pc, #156]	; 108ac <main@@Base+0x140>
   1080c:	mov	r1, #80	; 0x50
   10810:	add	r0, sp, #8
   10814:	ldr	r2, [r3]
   10818:	bl	106e8 <fgets@plt>
   1081c:	add	r0, sp, #8
   10820:	bl	10748 <strlen@plt>
   10824:	ldr	r5, [sp, #4]
   10828:	add	r3, sp, #88	; 0x58
   1082c:	add	r0, r3, r0
   10830:	mov	r3, #0
   10834:	strb	r3, [r0, #-81]	; 0xffffffaf
   10838:	add	r0, sp, #8
   1083c:	bl	10748 <strlen@plt>
   10840:	sub	r5, r5, #-1073741823	; 0xc0000001
   10844:	add	r1, r0, #1
   10848:	ldr	r0, [r4, r5, lsl #2]
   1084c:	bl	10700 <realloc@plt>
   10850:	ldr	r3, [sp, #4]
   10854:	add	r1, sp, #8
   10858:	str	r0, [r4, r5, lsl #2]
   1085c:	sub	r3, r3, #-1073741823	; 0xc0000001
   10860:	ldr	r0, [r4, r3, lsl #2]
   10864:	bl	1070c <strcpy@plt>
   10868:	b	1079c <main@@Base+0x30>
   1086c:	ldr	r0, [r4]
   10870:	bl	106dc <free@plt>
   10874:	ldr	r0, [r4, #4]
   10878:	bl	106dc <free@plt>
   1087c:	ldr	r0, [r4, #8]
   10880:	bl	106dc <free@plt>
   10884:	mov	r0, r4
   10888:	bl	106dc <free@plt>
   1088c:	mov	r0, r5
   10890:	add	sp, sp, #92	; 0x5c
   10894:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10898:	andeq	r0, r1, r0, lsl sl
   1089c:	andeq	r0, r1, r6, lsl sl
   108a0:	andeq	r0, r1, lr, lsl sl
   108a4:	andeq	r0, r1, r2, asr #20
   108a8:	andeq	r0, r1, r5, asr #20
   108ac:	andeq	r1, r2, r0, asr r0

000108b0 <_start@@Base>:
   108b0:	mov	fp, #0
   108b4:	mov	lr, #0
   108b8:	pop	{r1}		; (ldr r1, [sp], #4)
   108bc:	mov	r2, sp
   108c0:	push	{r2}		; (str r2, [sp, #-4]!)
   108c4:	push	{r0}		; (str r0, [sp, #-4]!)
   108c8:	ldr	ip, [pc, #16]	; 108e0 <_start@@Base+0x30>
   108cc:	push	{ip}		; (str ip, [sp, #-4]!)
   108d0:	ldr	r0, [pc, #12]	; 108e4 <_start@@Base+0x34>
   108d4:	ldr	r3, [pc, #12]	; 108e8 <_start@@Base+0x38>
   108d8:	bl	10730 <__libc_start_main@plt>
   108dc:	bl	10760 <abort@plt>
   108e0:	andeq	r0, r1, r0, lsl #20
   108e4:	andeq	r0, r1, ip, ror #14
   108e8:	andeq	r0, r1, r0, lsr #19
   108ec:	ldr	r3, [pc, #20]	; 10908 <_start@@Base+0x58>
   108f0:	ldr	r2, [pc, #20]	; 1090c <_start@@Base+0x5c>
   108f4:	add	r3, pc, r3
   108f8:	ldr	r2, [r3, r2]
   108fc:	cmp	r2, #0
   10900:	bxeq	lr
   10904:	b	1073c <__gmon_start__@plt>
   10908:	andeq	r0, r1, r4, lsl #14
   1090c:	andeq	r0, r0, r0, asr #32
   10910:	ldr	r0, [pc, #24]	; 10930 <_start@@Base+0x80>
   10914:	ldr	r3, [pc, #24]	; 10934 <_start@@Base+0x84>
   10918:	cmp	r3, r0
   1091c:	bxeq	lr
   10920:	ldr	r3, [pc, #16]	; 10938 <_start@@Base+0x88>
   10924:	cmp	r3, #0
   10928:	bxeq	lr
   1092c:	bx	r3
   10930:	andeq	r1, r2, ip, asr #32
   10934:	andeq	r1, r2, ip, asr #32
   10938:	andeq	r0, r0, r0
   1093c:	ldr	r0, [pc, #36]	; 10968 <_start@@Base+0xb8>
   10940:	ldr	r1, [pc, #36]	; 1096c <_start@@Base+0xbc>
   10944:	sub	r1, r1, r0
   10948:	asr	r1, r1, #2
   1094c:	add	r1, r1, r1, lsr #31
   10950:	asrs	r1, r1, #1
   10954:	bxeq	lr
   10958:	ldr	r3, [pc, #16]	; 10970 <_start@@Base+0xc0>
   1095c:	cmp	r3, #0
   10960:	bxeq	lr
   10964:	bx	r3
   10968:	andeq	r1, r2, ip, asr #32
   1096c:	andeq	r1, r2, ip, asr #32
   10970:	andeq	r0, r0, r0
   10974:	push	{r4, lr}
   10978:	ldr	r4, [pc, #24]	; 10998 <_start@@Base+0xe8>
   1097c:	ldrb	r3, [r4]
   10980:	cmp	r3, #0
   10984:	popne	{r4, pc}
   10988:	bl	10910 <_start@@Base+0x60>
   1098c:	mov	r3, #1
   10990:	strb	r3, [r4]
   10994:	pop	{r4, pc}
   10998:	andeq	r1, r2, r4, asr r0
   1099c:	b	1093c <_start@@Base+0x8c>

000109a0 <__libc_csu_init@@Base>:
   109a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109a4:	mov	r7, r0
   109a8:	ldr	r6, [pc, #72]	; 109f8 <__libc_csu_init@@Base+0x58>
   109ac:	ldr	r5, [pc, #72]	; 109fc <__libc_csu_init@@Base+0x5c>
   109b0:	add	r6, pc, r6
   109b4:	add	r5, pc, r5
   109b8:	sub	r6, r6, r5
   109bc:	mov	r8, r1
   109c0:	mov	r9, r2
   109c4:	bl	106b0 <printf@plt-0x20>
   109c8:	asrs	r6, r6, #2
   109cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   109d0:	mov	r4, #0
   109d4:	add	r4, r4, #1
   109d8:	ldr	r3, [r5], #4
   109dc:	mov	r2, r9
   109e0:	mov	r1, r8
   109e4:	mov	r0, r7
   109e8:	blx	r3
   109ec:	cmp	r6, r4
   109f0:	bne	109d4 <__libc_csu_init@@Base+0x34>
   109f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109f8:	andeq	r0, r1, ip, asr r5
   109fc:	andeq	r0, r1, r4, asr r5

00010a00 <__libc_csu_fini@@Base>:
   10a00:	bx	lr

Disassembly of section .fini:

00010a04 <.fini>:
   10a04:	push	{r3, lr}
   10a08:	pop	{r3, pc}
