
../repos/coreutils/src/base32:     file format elf32-littlearm


Disassembly of section .init:

00010e4c <.init>:
   10e4c:	push	{r3, lr}
   10e50:	bl	11130 <__assert_fail@plt+0x48>
   10e54:	pop	{r3, pc}

Disassembly of section .plt:

00010e58 <calloc@plt-0x14>:
   10e58:	push	{lr}		; (str lr, [sp, #-4]!)
   10e5c:	ldr	lr, [pc, #4]	; 10e68 <calloc@plt-0x4>
   10e60:	add	lr, pc, lr
   10e64:	ldr	pc, [lr, #8]!
   10e68:	muleq	r1, r8, r1

00010e6c <calloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #126976	; 0x1f000
   10e74:	ldr	pc, [ip, #408]!	; 0x198

00010e78 <fputs_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #126976	; 0x1f000
   10e80:	ldr	pc, [ip, #400]!	; 0x190

00010e84 <raise@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #126976	; 0x1f000
   10e8c:	ldr	pc, [ip, #392]!	; 0x188

00010e90 <strcmp@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #126976	; 0x1f000
   10e98:	ldr	pc, [ip, #384]!	; 0x180

00010e9c <posix_fadvise64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #126976	; 0x1f000
   10ea4:	ldr	pc, [ip, #376]!	; 0x178

00010ea8 <printf@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #126976	; 0x1f000
   10eb0:	ldr	pc, [ip, #368]!	; 0x170

00010eb4 <fflush@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #126976	; 0x1f000
   10ebc:	ldr	pc, [ip, #360]!	; 0x168

00010ec0 <memmove@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #126976	; 0x1f000
   10ec8:	ldr	pc, [ip, #352]!	; 0x160

00010ecc <free@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #126976	; 0x1f000
   10ed4:	ldr	pc, [ip, #344]!	; 0x158

00010ed8 <_exit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #126976	; 0x1f000
   10ee0:	ldr	pc, [ip, #336]!	; 0x150

00010ee4 <memcpy@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #126976	; 0x1f000
   10eec:	ldr	pc, [ip, #328]!	; 0x148

00010ef0 <mbsinit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #126976	; 0x1f000
   10ef8:	ldr	pc, [ip, #320]!	; 0x140

00010efc <fwrite_unlocked@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #126976	; 0x1f000
   10f04:	ldr	pc, [ip, #312]!	; 0x138

00010f08 <memcmp@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #126976	; 0x1f000
   10f10:	ldr	pc, [ip, #304]!	; 0x130

00010f14 <fputc_unlocked@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #126976	; 0x1f000
   10f1c:	ldr	pc, [ip, #296]!	; 0x128

00010f20 <realloc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #126976	; 0x1f000
   10f28:	ldr	pc, [ip, #288]!	; 0x120

00010f2c <textdomain@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #126976	; 0x1f000
   10f34:	ldr	pc, [ip, #280]!	; 0x118

00010f38 <iswprint@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #126976	; 0x1f000
   10f40:	ldr	pc, [ip, #272]!	; 0x110

00010f44 <lseek64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #126976	; 0x1f000
   10f4c:	ldr	pc, [ip, #264]!	; 0x108

00010f50 <__ctype_get_mb_cur_max@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #126976	; 0x1f000
   10f58:	ldr	pc, [ip, #256]!	; 0x100

00010f5c <__fpending@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #126976	; 0x1f000
   10f64:	ldr	pc, [ip, #248]!	; 0xf8

00010f68 <ferror_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #126976	; 0x1f000
   10f70:	ldr	pc, [ip, #240]!	; 0xf0

00010f74 <mbrtowc@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #126976	; 0x1f000
   10f7c:	ldr	pc, [ip, #232]!	; 0xe8

00010f80 <error@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #126976	; 0x1f000
   10f88:	ldr	pc, [ip, #224]!	; 0xe0

00010f8c <malloc@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #126976	; 0x1f000
   10f94:	ldr	pc, [ip, #216]!	; 0xd8

00010f98 <__libc_start_main@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #126976	; 0x1f000
   10fa0:	ldr	pc, [ip, #208]!	; 0xd0

00010fa4 <__freading@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #126976	; 0x1f000
   10fac:	ldr	pc, [ip, #200]!	; 0xc8

00010fb0 <__gmon_start__@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #126976	; 0x1f000
   10fb8:	ldr	pc, [ip, #192]!	; 0xc0

00010fbc <getopt_long@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #126976	; 0x1f000
   10fc4:	ldr	pc, [ip, #184]!	; 0xb8

00010fc8 <__ctype_b_loc@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #126976	; 0x1f000
   10fd0:	ldr	pc, [ip, #176]!	; 0xb0

00010fd4 <exit@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #126976	; 0x1f000
   10fdc:	ldr	pc, [ip, #168]!	; 0xa8

00010fe0 <gettext@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #126976	; 0x1f000
   10fe8:	ldr	pc, [ip, #160]!	; 0xa0

00010fec <strlen@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #126976	; 0x1f000
   10ff4:	ldr	pc, [ip, #152]!	; 0x98

00010ff8 <strchr@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #126976	; 0x1f000
   11000:	ldr	pc, [ip, #144]!	; 0x90

00011004 <fprintf@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #126976	; 0x1f000
   1100c:	ldr	pc, [ip, #136]!	; 0x88

00011010 <__errno_location@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #126976	; 0x1f000
   11018:	ldr	pc, [ip, #128]!	; 0x80

0001101c <__cxa_atexit@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #126976	; 0x1f000
   11024:	ldr	pc, [ip, #120]!	; 0x78

00011028 <memset@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #126976	; 0x1f000
   11030:	ldr	pc, [ip, #112]!	; 0x70

00011034 <fileno@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #126976	; 0x1f000
   1103c:	ldr	pc, [ip, #104]!	; 0x68

00011040 <memchr@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #126976	; 0x1f000
   11048:	ldr	pc, [ip, #96]!	; 0x60

0001104c <strtoimax@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #126976	; 0x1f000
   11054:	ldr	pc, [ip, #88]!	; 0x58

00011058 <fclose@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #126976	; 0x1f000
   11060:	ldr	pc, [ip, #80]!	; 0x50

00011064 <fseeko64@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #126976	; 0x1f000
   1106c:	ldr	pc, [ip, #72]!	; 0x48

00011070 <setlocale@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #126976	; 0x1f000
   11078:	ldr	pc, [ip, #64]!	; 0x40

0001107c <strrchr@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #126976	; 0x1f000
   11084:	ldr	pc, [ip, #56]!	; 0x38

00011088 <nl_langinfo@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #126976	; 0x1f000
   11090:	ldr	pc, [ip, #48]!	; 0x30

00011094 <fopen64@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #126976	; 0x1f000
   1109c:	ldr	pc, [ip, #40]!	; 0x28

000110a0 <bindtextdomain@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #126976	; 0x1f000
   110a8:	ldr	pc, [ip, #32]!

000110ac <fread_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #126976	; 0x1f000
   110b4:	ldr	pc, [ip, #24]!

000110b8 <fputs@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #126976	; 0x1f000
   110c0:	ldr	pc, [ip, #16]!

000110c4 <strncmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #126976	; 0x1f000
   110cc:	ldr	pc, [ip, #8]!

000110d0 <abort@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #126976	; 0x1f000
   110d8:	ldr	pc, [ip, #0]!

000110dc <feof_unlocked@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #122880	; 0x1e000
   110e4:	ldr	pc, [ip, #4088]!	; 0xff8

000110e8 <__assert_fail@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #122880	; 0x1e000
   110f0:	ldr	pc, [ip, #4080]!	; 0xff0

Disassembly of section .text:

000110f4 <.text>:
   110f4:	mov	fp, #0
   110f8:	mov	lr, #0
   110fc:	pop	{r1}		; (ldr r1, [sp], #4)
   11100:	mov	r2, sp
   11104:	push	{r2}		; (str r2, [sp, #-4]!)
   11108:	push	{r0}		; (str r0, [sp, #-4]!)
   1110c:	ldr	ip, [pc, #16]	; 11124 <__assert_fail@plt+0x3c>
   11110:	push	{ip}		; (str ip, [sp, #-4]!)
   11114:	ldr	r0, [pc, #12]	; 11128 <__assert_fail@plt+0x40>
   11118:	ldr	r3, [pc, #12]	; 1112c <__assert_fail@plt+0x44>
   1111c:	bl	10f98 <__libc_start_main@plt>
   11120:	bl	110d0 <abort@plt>
   11124:	andeq	lr, r1, ip, lsl #14
   11128:	andeq	r1, r1, r0, lsr r5
   1112c:	andeq	lr, r1, ip, lsr #13
   11130:	ldr	r3, [pc, #20]	; 1114c <__assert_fail@plt+0x64>
   11134:	ldr	r2, [pc, #20]	; 11150 <__assert_fail@plt+0x68>
   11138:	add	r3, pc, r3
   1113c:	ldr	r2, [r3, r2]
   11140:	cmp	r2, #0
   11144:	bxeq	lr
   11148:	b	10fb0 <__gmon_start__@plt>
   1114c:	andeq	lr, r1, r0, asr #29
   11150:	andeq	r0, r0, r4, ror #1
   11154:	ldr	r0, [pc, #24]	; 11174 <__assert_fail@plt+0x8c>
   11158:	ldr	r3, [pc, #24]	; 11178 <__assert_fail@plt+0x90>
   1115c:	cmp	r3, r0
   11160:	bxeq	lr
   11164:	ldr	r3, [pc, #16]	; 1117c <__assert_fail@plt+0x94>
   11168:	cmp	r3, #0
   1116c:	bxeq	lr
   11170:	bx	r3
   11174:	andeq	r0, r3, r8, lsr r1
   11178:	andeq	r0, r3, r8, lsr r1
   1117c:	andeq	r0, r0, r0
   11180:	ldr	r0, [pc, #36]	; 111ac <__assert_fail@plt+0xc4>
   11184:	ldr	r1, [pc, #36]	; 111b0 <__assert_fail@plt+0xc8>
   11188:	sub	r1, r1, r0
   1118c:	asr	r1, r1, #2
   11190:	add	r1, r1, r1, lsr #31
   11194:	asrs	r1, r1, #1
   11198:	bxeq	lr
   1119c:	ldr	r3, [pc, #16]	; 111b4 <__assert_fail@plt+0xcc>
   111a0:	cmp	r3, #0
   111a4:	bxeq	lr
   111a8:	bx	r3
   111ac:	andeq	r0, r3, r8, lsr r1
   111b0:	andeq	r0, r3, r8, lsr r1
   111b4:	andeq	r0, r0, r0
   111b8:	push	{r4, lr}
   111bc:	ldr	r4, [pc, #24]	; 111dc <__assert_fail@plt+0xf4>
   111c0:	ldrb	r3, [r4]
   111c4:	cmp	r3, #0
   111c8:	popne	{r4, pc}
   111cc:	bl	11154 <__assert_fail@plt+0x6c>
   111d0:	mov	r3, #1
   111d4:	strb	r3, [r4]
   111d8:	pop	{r4, pc}
   111dc:	andeq	r0, r3, ip, asr r1
   111e0:	b	11180 <__assert_fail@plt+0x98>
   111e4:	push	{fp, lr}
   111e8:	mov	fp, sp
   111ec:	sub	sp, sp, #40	; 0x28
   111f0:	str	r0, [fp, #-4]
   111f4:	ldr	r0, [fp, #-4]
   111f8:	cmp	r0, #0
   111fc:	beq	11248 <__assert_fail@plt+0x160>
   11200:	b	11204 <__assert_fail@plt+0x11c>
   11204:	movw	r0, #328	; 0x148
   11208:	movt	r0, #3
   1120c:	ldr	r0, [r0]
   11210:	movw	r1, #59188	; 0xe734
   11214:	movt	r1, #1
   11218:	str	r0, [fp, #-8]
   1121c:	mov	r0, r1
   11220:	bl	10fe0 <gettext@plt>
   11224:	movw	r1, #360	; 0x168
   11228:	movt	r1, #3
   1122c:	ldr	r2, [r1]
   11230:	ldr	r1, [fp, #-8]
   11234:	str	r0, [fp, #-12]
   11238:	mov	r0, r1
   1123c:	ldr	r1, [fp, #-12]
   11240:	bl	11004 <fprintf@plt>
   11244:	b	1132c <__assert_fail@plt+0x244>
   11248:	movw	r0, #59227	; 0xe75b
   1124c:	movt	r0, #1
   11250:	bl	10fe0 <gettext@plt>
   11254:	movw	r1, #360	; 0x168
   11258:	movt	r1, #3
   1125c:	ldr	r1, [r1]
   11260:	bl	10ea8 <printf@plt>
   11264:	movw	r1, #59257	; 0xe779
   11268:	movt	r1, #1
   1126c:	str	r0, [fp, #-16]
   11270:	mov	r0, r1
   11274:	bl	10fe0 <gettext@plt>
   11278:	movw	r1, #32
   1127c:	bl	10ea8 <printf@plt>
   11280:	str	r0, [sp, #20]
   11284:	bl	11334 <__assert_fail@plt+0x24c>
   11288:	bl	1135c <__assert_fail@plt+0x274>
   1128c:	movw	r0, #59327	; 0xe7bf
   11290:	movt	r0, #1
   11294:	bl	10fe0 <gettext@plt>
   11298:	movw	r1, #340	; 0x154
   1129c:	movt	r1, #3
   112a0:	ldr	r1, [r1]
   112a4:	bl	10e78 <fputs_unlocked@plt>
   112a8:	movw	r1, #59569	; 0xe8b1
   112ac:	movt	r1, #1
   112b0:	str	r0, [sp, #16]
   112b4:	mov	r0, r1
   112b8:	bl	10fe0 <gettext@plt>
   112bc:	movw	r1, #340	; 0x154
   112c0:	movt	r1, #3
   112c4:	ldr	r1, [r1]
   112c8:	bl	10e78 <fputs_unlocked@plt>
   112cc:	movw	r1, #59614	; 0xe8de
   112d0:	movt	r1, #1
   112d4:	str	r0, [sp, #12]
   112d8:	mov	r0, r1
   112dc:	bl	10fe0 <gettext@plt>
   112e0:	movw	r1, #340	; 0x154
   112e4:	movt	r1, #3
   112e8:	ldr	r1, [r1]
   112ec:	bl	10e78 <fputs_unlocked@plt>
   112f0:	movw	r1, #59668	; 0xe914
   112f4:	movt	r1, #1
   112f8:	str	r0, [sp, #8]
   112fc:	mov	r0, r1
   11300:	bl	10fe0 <gettext@plt>
   11304:	movw	r1, #59936	; 0xea20
   11308:	movt	r1, #1
   1130c:	str	r1, [sp, #4]
   11310:	ldr	r2, [sp, #4]
   11314:	bl	10ea8 <printf@plt>
   11318:	movw	r1, #59936	; 0xea20
   1131c:	movt	r1, #1
   11320:	str	r0, [sp]
   11324:	mov	r0, r1
   11328:	bl	11384 <__assert_fail@plt+0x29c>
   1132c:	ldr	r0, [fp, #-4]
   11330:	bl	10fd4 <exit@plt>
   11334:	push	{fp, lr}
   11338:	mov	fp, sp
   1133c:	movw	r0, #60047	; 0xea8f
   11340:	movt	r0, #1
   11344:	bl	10fe0 <gettext@plt>
   11348:	movw	r1, #340	; 0x154
   1134c:	movt	r1, #3
   11350:	ldr	r1, [r1]
   11354:	bl	10e78 <fputs_unlocked@plt>
   11358:	pop	{fp, pc}
   1135c:	push	{fp, lr}
   11360:	mov	fp, sp
   11364:	movw	r0, #60103	; 0xeac7
   11368:	movt	r0, #1
   1136c:	bl	10fe0 <gettext@plt>
   11370:	movw	r1, #340	; 0x154
   11374:	movt	r1, #3
   11378:	ldr	r1, [r1]
   1137c:	bl	10e78 <fputs_unlocked@plt>
   11380:	pop	{fp, pc}
   11384:	push	{fp, lr}
   11388:	mov	fp, sp
   1138c:	sub	sp, sp, #88	; 0x58
   11390:	add	r1, sp, #28
   11394:	movw	r2, #60688	; 0xed10
   11398:	movt	r2, #1
   1139c:	str	r0, [fp, #-4]
   113a0:	mov	r0, r1
   113a4:	str	r1, [sp, #12]
   113a8:	mov	r1, r2
   113ac:	movw	r2, #56	; 0x38
   113b0:	bl	10ee4 <memcpy@plt>
   113b4:	ldr	r0, [fp, #-4]
   113b8:	str	r0, [sp, #24]
   113bc:	ldr	r0, [sp, #12]
   113c0:	str	r0, [sp, #20]
   113c4:	ldr	r0, [sp, #20]
   113c8:	ldr	r0, [r0]
   113cc:	movw	r1, #0
   113d0:	cmp	r0, r1
   113d4:	movw	r0, #0
   113d8:	str	r0, [sp, #8]
   113dc:	beq	11408 <__assert_fail@plt+0x320>
   113e0:	ldr	r0, [fp, #-4]
   113e4:	ldr	r1, [sp, #20]
   113e8:	ldr	r1, [r1]
   113ec:	bl	10e90 <strcmp@plt>
   113f0:	cmp	r0, #0
   113f4:	movw	r0, #0
   113f8:	moveq	r0, #1
   113fc:	mvn	r1, #0
   11400:	eor	r0, r0, r1
   11404:	str	r0, [sp, #8]
   11408:	ldr	r0, [sp, #8]
   1140c:	tst	r0, #1
   11410:	beq	11424 <__assert_fail@plt+0x33c>
   11414:	ldr	r0, [sp, #20]
   11418:	add	r0, r0, #8
   1141c:	str	r0, [sp, #20]
   11420:	b	113c4 <__assert_fail@plt+0x2dc>
   11424:	ldr	r0, [sp, #20]
   11428:	ldr	r0, [r0, #4]
   1142c:	movw	r1, #0
   11430:	cmp	r0, r1
   11434:	beq	11444 <__assert_fail@plt+0x35c>
   11438:	ldr	r0, [sp, #20]
   1143c:	ldr	r0, [r0, #4]
   11440:	str	r0, [sp, #24]
   11444:	movw	r0, #60273	; 0xeb71
   11448:	movt	r0, #1
   1144c:	bl	10fe0 <gettext@plt>
   11450:	movw	r1, #59997	; 0xea5d
   11454:	movt	r1, #1
   11458:	movw	r2, #60296	; 0xeb88
   1145c:	movt	r2, #1
   11460:	bl	10ea8 <printf@plt>
   11464:	movw	r1, #5
   11468:	str	r0, [sp, #4]
   1146c:	mov	r0, r1
   11470:	movw	r1, #0
   11474:	bl	11070 <setlocale@plt>
   11478:	str	r0, [sp, #16]
   1147c:	ldr	r0, [sp, #16]
   11480:	movw	r1, #0
   11484:	cmp	r0, r1
   11488:	beq	114c4 <__assert_fail@plt+0x3dc>
   1148c:	ldr	r0, [sp, #16]
   11490:	movw	r1, #60336	; 0xebb0
   11494:	movt	r1, #1
   11498:	movw	r2, #3
   1149c:	bl	110c4 <strncmp@plt>
   114a0:	cmp	r0, #0
   114a4:	beq	114c4 <__assert_fail@plt+0x3dc>
   114a8:	movw	r0, #60340	; 0xebb4
   114ac:	movt	r0, #1
   114b0:	bl	10fe0 <gettext@plt>
   114b4:	movw	r1, #340	; 0x154
   114b8:	movt	r1, #3
   114bc:	ldr	r1, [r1]
   114c0:	bl	10e78 <fputs_unlocked@plt>
   114c4:	movw	r0, #60411	; 0xebfb
   114c8:	movt	r0, #1
   114cc:	bl	10fe0 <gettext@plt>
   114d0:	ldr	r2, [fp, #-4]
   114d4:	movw	r1, #60296	; 0xeb88
   114d8:	movt	r1, #1
   114dc:	bl	10ea8 <printf@plt>
   114e0:	movw	r1, #60438	; 0xec16
   114e4:	movt	r1, #1
   114e8:	str	r0, [sp]
   114ec:	mov	r0, r1
   114f0:	bl	10fe0 <gettext@plt>
   114f4:	ldr	r1, [sp, #24]
   114f8:	ldr	r2, [sp, #24]
   114fc:	ldr	r3, [fp, #-4]
   11500:	cmp	r2, r3
   11504:	movw	r2, #0
   11508:	moveq	r2, #1
   1150c:	tst	r2, #1
   11510:	movw	r2, #60488	; 0xec48
   11514:	movt	r2, #1
   11518:	movw	r3, #60206	; 0xeb2e
   1151c:	movt	r3, #1
   11520:	movne	r2, r3
   11524:	bl	10ea8 <printf@plt>
   11528:	mov	sp, fp
   1152c:	pop	{fp, pc}
   11530:	push	{fp, lr}
   11534:	mov	fp, sp
   11538:	sub	sp, sp, #104	; 0x68
   1153c:	movw	r2, #0
   11540:	str	r2, [fp, #-4]
   11544:	str	r0, [fp, #-8]
   11548:	str	r1, [fp, #-12]
   1154c:	movw	r0, #0
   11550:	strb	r0, [fp, #-25]	; 0xffffffe7
   11554:	strb	r0, [fp, #-26]	; 0xffffffe6
   11558:	movw	r0, #76	; 0x4c
   1155c:	str	r0, [fp, #-32]	; 0xffffffe0
   11560:	ldr	r0, [fp, #-12]
   11564:	ldr	r0, [r0]
   11568:	bl	1463c <__assert_fail@plt+0x3554>
   1156c:	movw	r0, #6
   11570:	movw	r1, #60488	; 0xec48
   11574:	movt	r1, #1
   11578:	bl	11070 <setlocale@plt>
   1157c:	movw	r1, #60001	; 0xea61
   11580:	movt	r1, #1
   11584:	str	r0, [fp, #-48]	; 0xffffffd0
   11588:	mov	r0, r1
   1158c:	movw	r1, #59943	; 0xea27
   11590:	movt	r1, #1
   11594:	bl	110a0 <bindtextdomain@plt>
   11598:	movw	r1, #60001	; 0xea61
   1159c:	movt	r1, #1
   115a0:	str	r0, [sp, #52]	; 0x34
   115a4:	mov	r0, r1
   115a8:	bl	10f2c <textdomain@plt>
   115ac:	movw	r1, #16300	; 0x3fac
   115b0:	movt	r1, #1
   115b4:	str	r0, [sp, #48]	; 0x30
   115b8:	mov	r0, r1
   115bc:	bl	1e710 <__assert_fail@plt+0xd628>
   115c0:	ldr	r0, [fp, #-8]
   115c4:	ldr	r1, [fp, #-12]
   115c8:	movw	r2, #59967	; 0xea3f
   115cc:	movt	r2, #1
   115d0:	movw	r3, #60592	; 0xecb0
   115d4:	movt	r3, #1
   115d8:	movw	ip, #0
   115dc:	str	ip, [sp]
   115e0:	bl	10fbc <getopt_long@plt>
   115e4:	str	r0, [fp, #-16]
   115e8:	cmn	r0, #1
   115ec:	beq	117ac <__assert_fail@plt+0x6c4>
   115f0:	ldr	r0, [fp, #-16]
   115f4:	cmn	r0, #3
   115f8:	str	r0, [sp, #44]	; 0x2c
   115fc:	beq	11758 <__assert_fail@plt+0x670>
   11600:	b	11604 <__assert_fail@plt+0x51c>
   11604:	ldr	r0, [sp, #44]	; 0x2c
   11608:	cmn	r0, #2
   1160c:	beq	11750 <__assert_fail@plt+0x668>
   11610:	b	11614 <__assert_fail@plt+0x52c>
   11614:	ldr	r0, [sp, #44]	; 0x2c
   11618:	cmp	r0, #100	; 0x64
   1161c:	beq	11644 <__assert_fail@plt+0x55c>
   11620:	b	11624 <__assert_fail@plt+0x53c>
   11624:	ldr	r0, [sp, #44]	; 0x2c
   11628:	cmp	r0, #105	; 0x69
   1162c:	beq	11744 <__assert_fail@plt+0x65c>
   11630:	b	11634 <__assert_fail@plt+0x54c>
   11634:	ldr	r0, [sp, #44]	; 0x2c
   11638:	cmp	r0, #119	; 0x77
   1163c:	beq	11650 <__assert_fail@plt+0x568>
   11640:	b	117a0 <__assert_fail@plt+0x6b8>
   11644:	movw	r0, #1
   11648:	strb	r0, [fp, #-25]	; 0xffffffe7
   1164c:	b	117a8 <__assert_fail@plt+0x6c0>
   11650:	movw	r0, #344	; 0x158
   11654:	movt	r0, #3
   11658:	ldr	r0, [r0]
   1165c:	movw	r1, #0
   11660:	movw	r2, #10
   11664:	sub	r3, fp, #40	; 0x28
   11668:	movw	ip, #60488	; 0xec48
   1166c:	movt	ip, #1
   11670:	str	ip, [sp]
   11674:	bl	1b79c <__assert_fail@plt+0xa6b4>
   11678:	str	r0, [fp, #-44]	; 0xffffffd4
   1167c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11680:	movw	r1, #1
   11684:	cmp	r1, r0
   11688:	bcc	1169c <__assert_fail@plt+0x5b4>
   1168c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11690:	cmn	r0, #1
   11694:	bgt	116e8 <__assert_fail@plt+0x600>
   11698:	b	1169c <__assert_fail@plt+0x5b4>
   1169c:	movw	r0, #59979	; 0xea4b
   116a0:	movt	r0, #1
   116a4:	bl	10fe0 <gettext@plt>
   116a8:	movw	r1, #344	; 0x158
   116ac:	movt	r1, #3
   116b0:	ldr	r1, [r1]
   116b4:	str	r0, [sp, #40]	; 0x28
   116b8:	mov	r0, r1
   116bc:	bl	16c98 <__assert_fail@plt+0x5bb0>
   116c0:	movw	r1, #1
   116c4:	str	r0, [sp, #36]	; 0x24
   116c8:	mov	r0, r1
   116cc:	movw	r1, #0
   116d0:	movw	r2, #59972	; 0xea44
   116d4:	movt	r2, #1
   116d8:	ldr	r3, [sp, #40]	; 0x28
   116dc:	ldr	ip, [sp, #36]	; 0x24
   116e0:	str	ip, [sp]
   116e4:	bl	10f80 <error@plt>
   116e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   116ec:	cmp	r0, #1
   116f0:	beq	1170c <__assert_fail@plt+0x624>
   116f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   116f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   116fc:	subs	r0, r0, #-2147483648	; 0x80000000
   11700:	sbcs	r1, r1, #0
   11704:	blt	11720 <__assert_fail@plt+0x638>
   11708:	b	1170c <__assert_fail@plt+0x624>
   1170c:	mov	r0, #0
   11710:	mov	r1, r0
   11714:	str	r1, [sp, #32]
   11718:	str	r0, [sp, #28]
   1171c:	b	11734 <__assert_fail@plt+0x64c>
   11720:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11724:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11728:	str	r0, [sp, #32]
   1172c:	str	r1, [sp, #28]
   11730:	b	11734 <__assert_fail@plt+0x64c>
   11734:	ldr	r0, [sp, #28]
   11738:	ldr	r1, [sp, #32]
   1173c:	str	r1, [fp, #-32]	; 0xffffffe0
   11740:	b	117a8 <__assert_fail@plt+0x6c0>
   11744:	movw	r0, #1
   11748:	strb	r0, [fp, #-26]	; 0xffffffe6
   1174c:	b	117a8 <__assert_fail@plt+0x6c0>
   11750:	movw	r0, #0
   11754:	bl	111e4 <__assert_fail@plt+0xfc>
   11758:	movw	r0, #340	; 0x154
   1175c:	movt	r0, #3
   11760:	ldr	r0, [r0]
   11764:	movw	r1, #240	; 0xf0
   11768:	movt	r1, #3
   1176c:	ldr	r3, [r1]
   11770:	movw	r1, #59936	; 0xea20
   11774:	movt	r1, #1
   11778:	movw	r2, #59997	; 0xea5d
   1177c:	movt	r2, #1
   11780:	movw	ip, #60011	; 0xea6b
   11784:	movt	ip, #1
   11788:	str	ip, [sp]
   1178c:	movw	ip, #0
   11790:	str	ip, [sp, #4]
   11794:	bl	18854 <__assert_fail@plt+0x776c>
   11798:	movw	r0, #0
   1179c:	bl	10fd4 <exit@plt>
   117a0:	movw	r0, #1
   117a4:	bl	111e4 <__assert_fail@plt+0xfc>
   117a8:	b	115c0 <__assert_fail@plt+0x4d8>
   117ac:	ldr	r0, [fp, #-8]
   117b0:	movw	r1, #320	; 0x140
   117b4:	movt	r1, #3
   117b8:	ldr	r1, [r1]
   117bc:	sub	r0, r0, r1
   117c0:	cmp	r0, #1
   117c4:	ble	1181c <__assert_fail@plt+0x734>
   117c8:	movw	r0, #60027	; 0xea7b
   117cc:	movt	r0, #1
   117d0:	bl	10fe0 <gettext@plt>
   117d4:	ldr	r1, [fp, #-12]
   117d8:	movw	r2, #320	; 0x140
   117dc:	movt	r2, #3
   117e0:	ldr	r2, [r2]
   117e4:	add	r2, r2, #1
   117e8:	add	r1, r1, r2, lsl #2
   117ec:	ldr	r1, [r1]
   117f0:	str	r0, [sp, #24]
   117f4:	mov	r0, r1
   117f8:	bl	16c98 <__assert_fail@plt+0x5bb0>
   117fc:	movw	r1, #0
   11800:	str	r0, [sp, #20]
   11804:	mov	r0, r1
   11808:	ldr	r2, [sp, #24]
   1180c:	ldr	r3, [sp, #20]
   11810:	bl	10f80 <error@plt>
   11814:	movw	r0, #1
   11818:	bl	111e4 <__assert_fail@plt+0xfc>
   1181c:	movw	r0, #320	; 0x140
   11820:	movt	r0, #3
   11824:	ldr	r0, [r0]
   11828:	ldr	r1, [fp, #-8]
   1182c:	cmp	r0, r1
   11830:	bge	11854 <__assert_fail@plt+0x76c>
   11834:	ldr	r0, [fp, #-12]
   11838:	movw	r1, #320	; 0x140
   1183c:	movt	r1, #3
   11840:	ldr	r1, [r1]
   11844:	add	r0, r0, r1, lsl #2
   11848:	ldr	r0, [r0]
   1184c:	str	r0, [fp, #-24]	; 0xffffffe8
   11850:	b	11860 <__assert_fail@plt+0x778>
   11854:	movw	r0, #61113	; 0xeeb9
   11858:	movt	r0, #1
   1185c:	str	r0, [fp, #-24]	; 0xffffffe8
   11860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11864:	movw	r1, #61113	; 0xeeb9
   11868:	movt	r1, #1
   1186c:	bl	10e90 <strcmp@plt>
   11870:	cmp	r0, #0
   11874:	bne	1189c <__assert_fail@plt+0x7b4>
   11878:	movw	r0, #0
   1187c:	str	r0, [sp, #16]
   11880:	ldr	r1, [sp, #16]
   11884:	bl	1b768 <__assert_fail@plt+0xa680>
   11888:	movw	r0, #336	; 0x150
   1188c:	movt	r0, #3
   11890:	ldr	r0, [r0]
   11894:	str	r0, [fp, #-20]	; 0xffffffec
   11898:	b	11904 <__assert_fail@plt+0x81c>
   1189c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118a0:	movw	r1, #60044	; 0xea8c
   118a4:	movt	r1, #1
   118a8:	bl	11094 <fopen64@plt>
   118ac:	str	r0, [fp, #-20]	; 0xffffffec
   118b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   118b4:	movw	r1, #0
   118b8:	cmp	r0, r1
   118bc:	bne	11900 <__assert_fail@plt+0x818>
   118c0:	bl	11010 <__errno_location@plt>
   118c4:	ldr	r1, [r0]
   118c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   118cc:	movw	r0, #0
   118d0:	movw	r3, #3
   118d4:	str	r1, [sp, #12]
   118d8:	mov	r1, r3
   118dc:	bl	16a54 <__assert_fail@plt+0x596c>
   118e0:	movw	r1, #1
   118e4:	str	r0, [sp, #8]
   118e8:	mov	r0, r1
   118ec:	ldr	r1, [sp, #12]
   118f0:	movw	r2, #59976	; 0xea48
   118f4:	movt	r2, #1
   118f8:	ldr	r3, [sp, #8]
   118fc:	bl	10f80 <error@plt>
   11900:	b	11904 <__assert_fail@plt+0x81c>
   11904:	ldr	r0, [fp, #-20]	; 0xffffffec
   11908:	movw	r1, #2
   1190c:	bl	14130 <__assert_fail@plt+0x3048>
   11910:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11914:	tst	r0, #1
   11918:	beq	11940 <__assert_fail@plt+0x858>
   1191c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11924:	movw	r2, #340	; 0x154
   11928:	movt	r2, #3
   1192c:	ldr	r2, [r2]
   11930:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   11934:	and	r3, r3, #1
   11938:	bl	11968 <__assert_fail@plt+0x880>
   1193c:	b	1195c <__assert_fail@plt+0x874>
   11940:	ldr	r0, [fp, #-20]	; 0xffffffec
   11944:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11948:	movw	r2, #340	; 0x154
   1194c:	movt	r2, #3
   11950:	ldr	r2, [r2]
   11954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11958:	bl	11cf4 <__assert_fail@plt+0xc0c>
   1195c:	ldr	r0, [fp, #-4]
   11960:	mov	sp, fp
   11964:	pop	{fp, pc}
   11968:	push	{fp, lr}
   1196c:	mov	fp, sp
   11970:	sub	sp, sp, #112	; 0x70
   11974:	str	r0, [fp, #-4]
   11978:	str	r1, [fp, #-8]
   1197c:	str	r2, [fp, #-12]
   11980:	and	r0, r3, #1
   11984:	strb	r0, [fp, #-13]
   11988:	movw	r0, #8192	; 0x2000
   1198c:	bl	189dc <__assert_fail@plt+0x78f4>
   11990:	str	r0, [fp, #-20]	; 0xffffffec
   11994:	movw	r0, #5120	; 0x1400
   11998:	bl	189dc <__assert_fail@plt+0x78f4>
   1199c:	str	r0, [fp, #-24]	; 0xffffffe8
   119a0:	sub	r0, fp, #40	; 0x28
   119a4:	bl	13470 <__assert_fail@plt+0x2388>
   119a8:	movw	r0, #0
   119ac:	str	r0, [fp, #-28]	; 0xffffffe4
   119b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   119b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119b8:	add	r0, r0, r1
   119bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119c0:	movw	r2, #8192	; 0x2000
   119c4:	sub	r2, r2, r1
   119c8:	ldr	r3, [fp, #-4]
   119cc:	movw	r1, #1
   119d0:	bl	110ac <fread_unlocked@plt>
   119d4:	str	r0, [fp, #-48]	; 0xffffffd0
   119d8:	ldrb	r0, [fp, #-13]
   119dc:	tst	r0, #1
   119e0:	beq	11ac8 <__assert_fail@plt+0x9e0>
   119e4:	movw	r0, #0
   119e8:	str	r0, [fp, #-52]	; 0xffffffcc
   119ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   119f0:	cmp	r0, #0
   119f4:	movw	r0, #0
   119f8:	str	r0, [sp, #48]	; 0x30
   119fc:	ble	11a18 <__assert_fail@plt+0x930>
   11a00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11a04:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11a08:	cmp	r0, r1
   11a0c:	movw	r0, #0
   11a10:	movlt	r0, #1
   11a14:	str	r0, [sp, #48]	; 0x30
   11a18:	ldr	r0, [sp, #48]	; 0x30
   11a1c:	tst	r0, #1
   11a20:	beq	11ac4 <__assert_fail@plt+0x9dc>
   11a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a2c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11a30:	add	r1, r1, r2
   11a34:	add	r0, r0, r1
   11a38:	ldrb	r0, [r0]
   11a3c:	bl	13428 <__assert_fail@plt+0x2340>
   11a40:	tst	r0, #1
   11a44:	bne	11a68 <__assert_fail@plt+0x980>
   11a48:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11a54:	add	r1, r1, r2
   11a58:	add	r0, r0, r1
   11a5c:	ldrb	r0, [r0]
   11a60:	cmp	r0, #61	; 0x3d
   11a64:	bne	11a78 <__assert_fail@plt+0x990>
   11a68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11a6c:	add	r0, r0, #1
   11a70:	str	r0, [fp, #-52]	; 0xffffffcc
   11a74:	b	11ac0 <__assert_fail@plt+0x9d8>
   11a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a80:	add	r0, r0, r1
   11a84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11a88:	add	r0, r0, r1
   11a8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a94:	add	r1, r1, r2
   11a98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11a9c:	add	r1, r1, r2
   11aa0:	add	r1, r1, #1
   11aa4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11aa8:	mvn	r3, #0
   11aac:	add	r2, r2, r3
   11ab0:	str	r2, [fp, #-48]	; 0xffffffd0
   11ab4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11ab8:	sub	r2, r2, r3
   11abc:	bl	10ec0 <memmove@plt>
   11ac0:	b	119ec <__assert_fail@plt+0x904>
   11ac4:	b	11ac8 <__assert_fail@plt+0x9e0>
   11ac8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11ad0:	add	r0, r1, r0
   11ad4:	str	r0, [fp, #-28]	; 0xffffffe4
   11ad8:	ldr	r0, [fp, #-4]
   11adc:	bl	10f68 <ferror_unlocked@plt>
   11ae0:	cmp	r0, #0
   11ae4:	beq	11b18 <__assert_fail@plt+0xa30>
   11ae8:	bl	11010 <__errno_location@plt>
   11aec:	ldr	r1, [r0]
   11af0:	movw	r0, #60529	; 0xec71
   11af4:	movt	r0, #1
   11af8:	str	r1, [sp, #44]	; 0x2c
   11afc:	bl	10fe0 <gettext@plt>
   11b00:	movw	r1, #1
   11b04:	str	r0, [sp, #40]	; 0x28
   11b08:	mov	r0, r1
   11b0c:	ldr	r1, [sp, #44]	; 0x2c
   11b10:	ldr	r2, [sp, #40]	; 0x28
   11b14:	bl	10f80 <error@plt>
   11b18:	b	11b1c <__assert_fail@plt+0xa34>
   11b1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11b20:	cmp	r0, #8192	; 0x2000
   11b24:	movw	r0, #0
   11b28:	str	r0, [sp, #36]	; 0x24
   11b2c:	bge	11b50 <__assert_fail@plt+0xa68>
   11b30:	ldr	r0, [fp, #-4]
   11b34:	bl	110dc <feof_unlocked@plt>
   11b38:	cmp	r0, #0
   11b3c:	movw	r0, #0
   11b40:	movne	r0, #1
   11b44:	mvn	r1, #0
   11b48:	eor	r0, r0, r1
   11b4c:	str	r0, [sp, #36]	; 0x24
   11b50:	ldr	r0, [sp, #36]	; 0x24
   11b54:	tst	r0, #1
   11b58:	bne	119b0 <__assert_fail@plt+0x8c8>
   11b5c:	movw	r0, #0
   11b60:	str	r0, [sp, #56]	; 0x38
   11b64:	ldr	r0, [sp, #56]	; 0x38
   11b68:	ldr	r1, [fp, #-4]
   11b6c:	str	r0, [sp, #32]
   11b70:	mov	r0, r1
   11b74:	bl	110dc <feof_unlocked@plt>
   11b78:	cmp	r0, #0
   11b7c:	movw	r0, #0
   11b80:	movne	r0, #1
   11b84:	mvn	r1, #0
   11b88:	eor	r0, r0, r1
   11b8c:	eor	r0, r0, r1
   11b90:	and	r0, r0, #1
   11b94:	add	r0, r0, #1
   11b98:	ldr	r1, [sp, #32]
   11b9c:	cmp	r1, r0
   11ba0:	bge	11cb8 <__assert_fail@plt+0xbd0>
   11ba4:	ldr	r0, [sp, #56]	; 0x38
   11ba8:	cmp	r0, #1
   11bac:	bne	11bc0 <__assert_fail@plt+0xad8>
   11bb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11bb4:	cmp	r0, #0
   11bb8:	bne	11bc0 <__assert_fail@plt+0xad8>
   11bbc:	b	11cb8 <__assert_fail@plt+0xbd0>
   11bc0:	movw	r0, #5120	; 0x1400
   11bc4:	str	r0, [sp, #52]	; 0x34
   11bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   11bcc:	ldr	r0, [sp, #56]	; 0x38
   11bd0:	cmp	r0, #0
   11bd4:	str	r1, [sp, #28]
   11bd8:	bne	11be8 <__assert_fail@plt+0xb00>
   11bdc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11be0:	str	r0, [sp, #24]
   11be4:	b	11bf4 <__assert_fail@plt+0xb0c>
   11be8:	movw	r0, #0
   11bec:	str	r0, [sp, #24]
   11bf0:	b	11bf4 <__assert_fail@plt+0xb0c>
   11bf4:	ldr	r0, [sp, #24]
   11bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bfc:	sub	r1, fp, #40	; 0x28
   11c00:	str	r0, [sp, #20]
   11c04:	mov	r0, r1
   11c08:	ldr	r1, [sp, #28]
   11c0c:	ldr	r2, [sp, #20]
   11c10:	add	ip, sp, #52	; 0x34
   11c14:	str	ip, [sp]
   11c18:	bl	1348c <__assert_fail@plt+0x23a4>
   11c1c:	and	r0, r0, #1
   11c20:	strb	r0, [fp, #-41]	; 0xffffffd7
   11c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c28:	ldr	r2, [sp, #52]	; 0x34
   11c2c:	ldr	r3, [fp, #-12]
   11c30:	movw	r1, #1
   11c34:	bl	10efc <fwrite_unlocked@plt>
   11c38:	ldr	r1, [sp, #52]	; 0x34
   11c3c:	cmp	r0, r1
   11c40:	bcs	11c74 <__assert_fail@plt+0xb8c>
   11c44:	bl	11010 <__errno_location@plt>
   11c48:	ldr	r1, [r0]
   11c4c:	movw	r0, #60540	; 0xec7c
   11c50:	movt	r0, #1
   11c54:	str	r1, [sp, #16]
   11c58:	bl	10fe0 <gettext@plt>
   11c5c:	movw	r1, #1
   11c60:	str	r0, [sp, #12]
   11c64:	mov	r0, r1
   11c68:	ldr	r1, [sp, #16]
   11c6c:	ldr	r2, [sp, #12]
   11c70:	bl	10f80 <error@plt>
   11c74:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   11c78:	tst	r0, #1
   11c7c:	bne	11ca4 <__assert_fail@plt+0xbbc>
   11c80:	movw	r0, #60552	; 0xec88
   11c84:	movt	r0, #1
   11c88:	bl	10fe0 <gettext@plt>
   11c8c:	movw	r1, #1
   11c90:	str	r0, [sp, #8]
   11c94:	mov	r0, r1
   11c98:	movw	r1, #0
   11c9c:	ldr	r2, [sp, #8]
   11ca0:	bl	10f80 <error@plt>
   11ca4:	b	11ca8 <__assert_fail@plt+0xbc0>
   11ca8:	ldr	r0, [sp, #56]	; 0x38
   11cac:	add	r0, r0, #1
   11cb0:	str	r0, [sp, #56]	; 0x38
   11cb4:	b	11b64 <__assert_fail@plt+0xa7c>
   11cb8:	b	11cbc <__assert_fail@plt+0xbd4>
   11cbc:	ldr	r0, [fp, #-4]
   11cc0:	bl	110dc <feof_unlocked@plt>
   11cc4:	cmp	r0, #0
   11cc8:	movw	r0, #0
   11ccc:	movne	r0, #1
   11cd0:	mvn	r1, #0
   11cd4:	eor	r0, r0, r1
   11cd8:	tst	r0, #1
   11cdc:	bne	119a8 <__assert_fail@plt+0x8c0>
   11ce0:	ldr	r0, [fp, #-4]
   11ce4:	ldr	r1, [fp, #-8]
   11ce8:	bl	11f40 <__assert_fail@plt+0xe58>
   11cec:	mov	sp, fp
   11cf0:	pop	{fp, pc}
   11cf4:	push	{fp, lr}
   11cf8:	mov	fp, sp
   11cfc:	sub	sp, sp, #72	; 0x48
   11d00:	str	r0, [fp, #-4]
   11d04:	str	r1, [fp, #-8]
   11d08:	str	r2, [fp, #-12]
   11d0c:	str	r3, [fp, #-16]
   11d10:	movw	r0, #0
   11d14:	str	r0, [fp, #-20]	; 0xffffffec
   11d18:	movw	r0, #30720	; 0x7800
   11d1c:	bl	189dc <__assert_fail@plt+0x78f4>
   11d20:	str	r0, [fp, #-24]	; 0xffffffe8
   11d24:	movw	r0, #49152	; 0xc000
   11d28:	bl	189dc <__assert_fail@plt+0x78f4>
   11d2c:	str	r0, [fp, #-28]	; 0xffffffe4
   11d30:	movw	r0, #0
   11d34:	str	r0, [fp, #-32]	; 0xffffffe0
   11d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d40:	add	r0, r0, r1
   11d44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d48:	movw	r2, #30720	; 0x7800
   11d4c:	sub	r2, r2, r1
   11d50:	ldr	r3, [fp, #-4]
   11d54:	movw	r1, #1
   11d58:	bl	110ac <fread_unlocked@plt>
   11d5c:	str	r0, [sp, #36]	; 0x24
   11d60:	ldr	r0, [sp, #36]	; 0x24
   11d64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11d68:	add	r0, r1, r0
   11d6c:	str	r0, [fp, #-32]	; 0xffffffe0
   11d70:	ldr	r0, [fp, #-4]
   11d74:	bl	110dc <feof_unlocked@plt>
   11d78:	cmp	r0, #0
   11d7c:	movw	r0, #0
   11d80:	str	r0, [sp, #32]
   11d84:	bne	11db4 <__assert_fail@plt+0xccc>
   11d88:	ldr	r0, [fp, #-4]
   11d8c:	bl	10f68 <ferror_unlocked@plt>
   11d90:	cmp	r0, #0
   11d94:	movw	r0, #0
   11d98:	str	r0, [sp, #32]
   11d9c:	bne	11db4 <__assert_fail@plt+0xccc>
   11da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11da4:	cmp	r0, #30720	; 0x7800
   11da8:	movw	r0, #0
   11dac:	movlt	r0, #1
   11db0:	str	r0, [sp, #32]
   11db4:	ldr	r0, [sp, #32]
   11db8:	tst	r0, #1
   11dbc:	bne	11d38 <__assert_fail@plt+0xc50>
   11dc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dc4:	cmp	r0, #0
   11dc8:	ble	11e3c <__assert_fail@plt+0xd54>
   11dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11dd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11dd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11dd8:	add	r3, r1, #4
   11ddc:	movw	ip, #26215	; 0x6667
   11de0:	movt	ip, #26214	; 0x6666
   11de4:	smmul	r3, r3, ip
   11de8:	lsr	lr, r3, #1
   11dec:	add	r3, lr, r3, lsr #31
   11df0:	lsl	r3, r3, #3
   11df4:	str	ip, [sp, #28]
   11df8:	bl	121dc <__assert_fail@plt+0x10f4>
   11dfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11e04:	add	r1, r1, #4
   11e08:	ldr	r2, [sp, #28]
   11e0c:	smmul	r1, r1, r2
   11e10:	asr	r3, r1, #1
   11e14:	add	r1, r3, r1, lsr #31
   11e18:	lsl	r1, r1, #3
   11e1c:	ldr	r2, [fp, #-16]
   11e20:	ldr	r3, [fp, #-12]
   11e24:	sub	ip, fp, #20
   11e28:	str	r3, [sp, #24]
   11e2c:	mov	r3, ip
   11e30:	ldr	ip, [sp, #24]
   11e34:	str	ip, [sp]
   11e38:	bl	11ff4 <__assert_fail@plt+0xf0c>
   11e3c:	b	11e40 <__assert_fail@plt+0xd58>
   11e40:	ldr	r0, [fp, #-4]
   11e44:	bl	110dc <feof_unlocked@plt>
   11e48:	cmp	r0, #0
   11e4c:	movw	r0, #0
   11e50:	str	r0, [sp, #20]
   11e54:	bne	11e84 <__assert_fail@plt+0xd9c>
   11e58:	ldr	r0, [fp, #-4]
   11e5c:	bl	10f68 <ferror_unlocked@plt>
   11e60:	cmp	r0, #0
   11e64:	movw	r0, #0
   11e68:	str	r0, [sp, #20]
   11e6c:	bne	11e84 <__assert_fail@plt+0xd9c>
   11e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e74:	cmp	r0, #30720	; 0x7800
   11e78:	movw	r0, #0
   11e7c:	moveq	r0, #1
   11e80:	str	r0, [sp, #20]
   11e84:	ldr	r0, [sp, #20]
   11e88:	tst	r0, #1
   11e8c:	bne	11d30 <__assert_fail@plt+0xc48>
   11e90:	ldr	r0, [fp, #-16]
   11e94:	cmp	r0, #0
   11e98:	beq	11eec <__assert_fail@plt+0xe04>
   11e9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ea0:	cmp	r0, #0
   11ea4:	ble	11eec <__assert_fail@plt+0xe04>
   11ea8:	ldr	r1, [fp, #-12]
   11eac:	movw	r0, #10
   11eb0:	bl	10f14 <fputc_unlocked@plt>
   11eb4:	cmn	r0, #1
   11eb8:	bne	11eec <__assert_fail@plt+0xe04>
   11ebc:	bl	11010 <__errno_location@plt>
   11ec0:	ldr	r1, [r0]
   11ec4:	movw	r0, #60540	; 0xec7c
   11ec8:	movt	r0, #1
   11ecc:	str	r1, [sp, #16]
   11ed0:	bl	10fe0 <gettext@plt>
   11ed4:	movw	r1, #1
   11ed8:	str	r0, [sp, #12]
   11edc:	mov	r0, r1
   11ee0:	ldr	r1, [sp, #16]
   11ee4:	ldr	r2, [sp, #12]
   11ee8:	bl	10f80 <error@plt>
   11eec:	ldr	r0, [fp, #-4]
   11ef0:	bl	10f68 <ferror_unlocked@plt>
   11ef4:	cmp	r0, #0
   11ef8:	beq	11f2c <__assert_fail@plt+0xe44>
   11efc:	bl	11010 <__errno_location@plt>
   11f00:	ldr	r1, [r0]
   11f04:	movw	r0, #60529	; 0xec71
   11f08:	movt	r0, #1
   11f0c:	str	r1, [sp, #8]
   11f10:	bl	10fe0 <gettext@plt>
   11f14:	movw	r1, #1
   11f18:	str	r0, [sp, #4]
   11f1c:	mov	r0, r1
   11f20:	ldr	r1, [sp, #8]
   11f24:	ldr	r2, [sp, #4]
   11f28:	bl	10f80 <error@plt>
   11f2c:	ldr	r0, [fp, #-4]
   11f30:	ldr	r1, [fp, #-8]
   11f34:	bl	11f40 <__assert_fail@plt+0xe58>
   11f38:	mov	sp, fp
   11f3c:	pop	{fp, pc}
   11f40:	push	{fp, lr}
   11f44:	mov	fp, sp
   11f48:	sub	sp, sp, #24
   11f4c:	str	r0, [fp, #-4]
   11f50:	str	r1, [fp, #-8]
   11f54:	ldr	r0, [fp, #-4]
   11f58:	bl	14188 <__assert_fail@plt+0x30a0>
   11f5c:	cmp	r0, #0
   11f60:	beq	11fec <__assert_fail@plt+0xf04>
   11f64:	ldr	r0, [fp, #-8]
   11f68:	movw	r1, #61113	; 0xeeb9
   11f6c:	movt	r1, #1
   11f70:	bl	10e90 <strcmp@plt>
   11f74:	cmp	r0, #0
   11f78:	bne	11fac <__assert_fail@plt+0xec4>
   11f7c:	bl	11010 <__errno_location@plt>
   11f80:	ldr	r1, [r0]
   11f84:	movw	r0, #60566	; 0xec96
   11f88:	movt	r0, #1
   11f8c:	str	r1, [sp, #12]
   11f90:	bl	10fe0 <gettext@plt>
   11f94:	movw	r1, #1
   11f98:	str	r0, [sp, #8]
   11f9c:	mov	r0, r1
   11fa0:	ldr	r1, [sp, #12]
   11fa4:	ldr	r2, [sp, #8]
   11fa8:	bl	10f80 <error@plt>
   11fac:	bl	11010 <__errno_location@plt>
   11fb0:	ldr	r1, [r0]
   11fb4:	ldr	r2, [fp, #-8]
   11fb8:	movw	r0, #0
   11fbc:	movw	r3, #3
   11fc0:	str	r1, [sp, #4]
   11fc4:	mov	r1, r3
   11fc8:	bl	16a54 <__assert_fail@plt+0x596c>
   11fcc:	movw	r1, #1
   11fd0:	str	r0, [sp]
   11fd4:	mov	r0, r1
   11fd8:	ldr	r1, [sp, #4]
   11fdc:	movw	r2, #59976	; 0xea48
   11fe0:	movt	r2, #1
   11fe4:	ldr	r3, [sp]
   11fe8:	bl	10f80 <error@plt>
   11fec:	movw	r0, #0
   11ff0:	bl	10fd4 <exit@plt>
   11ff4:	push	{fp, lr}
   11ff8:	mov	fp, sp
   11ffc:	sub	sp, sp, #56	; 0x38
   12000:	ldr	ip, [fp, #8]
   12004:	str	r0, [fp, #-4]
   12008:	str	r1, [fp, #-8]
   1200c:	str	r2, [fp, #-12]
   12010:	str	r3, [fp, #-16]
   12014:	ldr	r0, [fp, #-12]
   12018:	cmp	r0, #0
   1201c:	bne	1207c <__assert_fail@plt+0xf94>
   12020:	ldr	r0, [fp, #-4]
   12024:	ldr	r2, [fp, #-8]
   12028:	movw	r1, #340	; 0x154
   1202c:	movt	r1, #3
   12030:	ldr	r3, [r1]
   12034:	movw	r1, #1
   12038:	bl	10efc <fwrite_unlocked@plt>
   1203c:	ldr	r1, [fp, #-8]
   12040:	cmp	r0, r1
   12044:	bcs	12078 <__assert_fail@plt+0xf90>
   12048:	bl	11010 <__errno_location@plt>
   1204c:	ldr	r1, [r0]
   12050:	movw	r0, #60540	; 0xec7c
   12054:	movt	r0, #1
   12058:	str	r1, [sp, #28]
   1205c:	bl	10fe0 <gettext@plt>
   12060:	movw	r1, #1
   12064:	str	r0, [sp, #24]
   12068:	mov	r0, r1
   1206c:	ldr	r1, [sp, #28]
   12070:	ldr	r2, [sp, #24]
   12074:	bl	10f80 <error@plt>
   12078:	b	121d4 <__assert_fail@plt+0x10ec>
   1207c:	movw	r0, #0
   12080:	str	r0, [fp, #-20]	; 0xffffffec
   12084:	ldr	r0, [fp, #-20]	; 0xffffffec
   12088:	ldr	r1, [fp, #-8]
   1208c:	cmp	r0, r1
   12090:	bge	121d0 <__assert_fail@plt+0x10e8>
   12094:	ldr	r0, [fp, #-12]
   12098:	ldr	r1, [fp, #-16]
   1209c:	ldr	r1, [r1]
   120a0:	sub	r0, r0, r1
   120a4:	ldr	r1, [fp, #-8]
   120a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   120ac:	sub	r1, r1, r2
   120b0:	cmp	r0, r1
   120b4:	bge	120d0 <__assert_fail@plt+0xfe8>
   120b8:	ldr	r0, [fp, #-12]
   120bc:	ldr	r1, [fp, #-16]
   120c0:	ldr	r1, [r1]
   120c4:	sub	r0, r0, r1
   120c8:	str	r0, [sp, #20]
   120cc:	b	120e0 <__assert_fail@plt+0xff8>
   120d0:	ldr	r0, [fp, #-8]
   120d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   120d8:	sub	r0, r0, r1
   120dc:	str	r0, [sp, #20]
   120e0:	ldr	r0, [sp, #20]
   120e4:	str	r0, [fp, #-24]	; 0xffffffe8
   120e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120ec:	cmp	r0, #0
   120f0:	bne	12148 <__assert_fail@plt+0x1060>
   120f4:	ldr	r1, [fp, #8]
   120f8:	movw	r0, #10
   120fc:	bl	10f14 <fputc_unlocked@plt>
   12100:	cmn	r0, #1
   12104:	bne	12138 <__assert_fail@plt+0x1050>
   12108:	bl	11010 <__errno_location@plt>
   1210c:	ldr	r1, [r0]
   12110:	movw	r0, #60540	; 0xec7c
   12114:	movt	r0, #1
   12118:	str	r1, [sp, #16]
   1211c:	bl	10fe0 <gettext@plt>
   12120:	movw	r1, #1
   12124:	str	r0, [sp, #12]
   12128:	mov	r0, r1
   1212c:	ldr	r1, [sp, #16]
   12130:	ldr	r2, [sp, #12]
   12134:	bl	10f80 <error@plt>
   12138:	ldr	r0, [fp, #-16]
   1213c:	movw	r1, #0
   12140:	str	r1, [r0]
   12144:	b	121cc <__assert_fail@plt+0x10e4>
   12148:	ldr	r0, [fp, #-4]
   1214c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12150:	add	r0, r0, r1
   12154:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12158:	movw	r1, #340	; 0x154
   1215c:	movt	r1, #3
   12160:	ldr	r3, [r1]
   12164:	movw	r1, #1
   12168:	bl	10efc <fwrite_unlocked@plt>
   1216c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12170:	cmp	r0, r1
   12174:	bcs	121a8 <__assert_fail@plt+0x10c0>
   12178:	bl	11010 <__errno_location@plt>
   1217c:	ldr	r1, [r0]
   12180:	movw	r0, #60540	; 0xec7c
   12184:	movt	r0, #1
   12188:	str	r1, [sp, #8]
   1218c:	bl	10fe0 <gettext@plt>
   12190:	movw	r1, #1
   12194:	str	r0, [sp, #4]
   12198:	mov	r0, r1
   1219c:	ldr	r1, [sp, #8]
   121a0:	ldr	r2, [sp, #4]
   121a4:	bl	10f80 <error@plt>
   121a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121ac:	ldr	r1, [fp, #-16]
   121b0:	ldr	r2, [r1]
   121b4:	add	r0, r2, r0
   121b8:	str	r0, [r1]
   121bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   121c4:	add	r0, r1, r0
   121c8:	str	r0, [fp, #-20]	; 0xffffffec
   121cc:	b	12084 <__assert_fail@plt+0xf9c>
   121d0:	b	121d4 <__assert_fail@plt+0x10ec>
   121d4:	mov	sp, fp
   121d8:	pop	{fp, pc}
   121dc:	push	{fp, lr}
   121e0:	mov	fp, sp
   121e4:	sub	sp, sp, #80	; 0x50
   121e8:	str	r0, [fp, #-4]
   121ec:	str	r1, [fp, #-8]
   121f0:	str	r2, [fp, #-12]
   121f4:	str	r3, [fp, #-16]
   121f8:	ldr	r0, [fp, #-8]
   121fc:	cmp	r0, #0
   12200:	movw	r0, #0
   12204:	str	r0, [fp, #-20]	; 0xffffffec
   12208:	beq	12220 <__assert_fail@plt+0x1138>
   1220c:	ldr	r0, [fp, #-16]
   12210:	cmp	r0, #0
   12214:	movw	r0, #0
   12218:	movne	r0, #1
   1221c:	str	r0, [fp, #-20]	; 0xffffffec
   12220:	ldr	r0, [fp, #-20]	; 0xffffffec
   12224:	tst	r0, #1
   12228:	beq	12718 <__assert_fail@plt+0x1630>
   1222c:	ldr	r0, [fp, #-4]
   12230:	ldrb	r0, [r0]
   12234:	bl	12738 <__assert_fail@plt+0x1650>
   12238:	and	r0, r0, #255	; 0xff
   1223c:	asr	r0, r0, #3
   12240:	and	r0, r0, #31
   12244:	movw	r1, #60759	; 0xed57
   12248:	movt	r1, #1
   1224c:	add	r0, r1, r0
   12250:	ldrb	r0, [r0]
   12254:	ldr	r1, [fp, #-12]
   12258:	add	r2, r1, #1
   1225c:	str	r2, [fp, #-12]
   12260:	strb	r0, [r1]
   12264:	ldr	r0, [fp, #-16]
   12268:	mvn	r1, #0
   1226c:	add	r0, r0, r1
   12270:	str	r0, [fp, #-16]
   12274:	cmp	r0, #0
   12278:	bne	12280 <__assert_fail@plt+0x1198>
   1227c:	b	12718 <__assert_fail@plt+0x1630>
   12280:	ldr	r0, [fp, #-4]
   12284:	ldrb	r0, [r0]
   12288:	bl	12738 <__assert_fail@plt+0x1650>
   1228c:	and	r0, r0, #255	; 0xff
   12290:	lsl	r0, r0, #2
   12294:	ldr	r1, [fp, #-8]
   12298:	mvn	r2, #0
   1229c:	add	r1, r1, r2
   122a0:	str	r1, [fp, #-8]
   122a4:	cmp	r1, #0
   122a8:	str	r0, [fp, #-24]	; 0xffffffe8
   122ac:	beq	122cc <__assert_fail@plt+0x11e4>
   122b0:	ldr	r0, [fp, #-4]
   122b4:	ldrb	r0, [r0, #1]
   122b8:	bl	12738 <__assert_fail@plt+0x1650>
   122bc:	and	r0, r0, #255	; 0xff
   122c0:	asr	r0, r0, #6
   122c4:	str	r0, [fp, #-28]	; 0xffffffe4
   122c8:	b	122d8 <__assert_fail@plt+0x11f0>
   122cc:	movw	r0, #0
   122d0:	str	r0, [fp, #-28]	; 0xffffffe4
   122d4:	b	122d8 <__assert_fail@plt+0x11f0>
   122d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   122dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   122e0:	add	r0, r1, r0
   122e4:	and	r0, r0, #31
   122e8:	movw	r2, #60759	; 0xed57
   122ec:	movt	r2, #1
   122f0:	add	r0, r2, r0
   122f4:	ldrb	r0, [r0]
   122f8:	ldr	r2, [fp, #-12]
   122fc:	add	r3, r2, #1
   12300:	str	r3, [fp, #-12]
   12304:	strb	r0, [r2]
   12308:	ldr	r0, [fp, #-16]
   1230c:	mvn	r2, #0
   12310:	add	r0, r0, r2
   12314:	str	r0, [fp, #-16]
   12318:	cmp	r0, #0
   1231c:	bne	12324 <__assert_fail@plt+0x123c>
   12320:	b	12718 <__assert_fail@plt+0x1630>
   12324:	ldr	r0, [fp, #-8]
   12328:	cmp	r0, #0
   1232c:	beq	12360 <__assert_fail@plt+0x1278>
   12330:	ldr	r0, [fp, #-4]
   12334:	ldrb	r0, [r0, #1]
   12338:	bl	12738 <__assert_fail@plt+0x1650>
   1233c:	and	r0, r0, #255	; 0xff
   12340:	asr	r0, r0, #1
   12344:	and	r0, r0, #31
   12348:	movw	r1, #60759	; 0xed57
   1234c:	movt	r1, #1
   12350:	add	r0, r1, r0
   12354:	ldrb	r0, [r0]
   12358:	str	r0, [fp, #-32]	; 0xffffffe0
   1235c:	b	1236c <__assert_fail@plt+0x1284>
   12360:	movw	r0, #61	; 0x3d
   12364:	str	r0, [fp, #-32]	; 0xffffffe0
   12368:	b	1236c <__assert_fail@plt+0x1284>
   1236c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12370:	ldr	r1, [fp, #-12]
   12374:	add	r2, r1, #1
   12378:	str	r2, [fp, #-12]
   1237c:	strb	r0, [r1]
   12380:	ldr	r0, [fp, #-16]
   12384:	mvn	r1, #0
   12388:	add	r0, r0, r1
   1238c:	str	r0, [fp, #-16]
   12390:	cmp	r0, #0
   12394:	bne	1239c <__assert_fail@plt+0x12b4>
   12398:	b	12718 <__assert_fail@plt+0x1630>
   1239c:	ldr	r0, [fp, #-8]
   123a0:	cmp	r0, #0
   123a4:	beq	12428 <__assert_fail@plt+0x1340>
   123a8:	ldr	r0, [fp, #-4]
   123ac:	ldrb	r0, [r0, #1]
   123b0:	bl	12738 <__assert_fail@plt+0x1650>
   123b4:	and	r0, r0, #255	; 0xff
   123b8:	lsl	r0, r0, #4
   123bc:	ldr	r1, [fp, #-8]
   123c0:	mvn	r2, #0
   123c4:	add	r1, r1, r2
   123c8:	str	r1, [fp, #-8]
   123cc:	cmp	r1, #0
   123d0:	str	r0, [fp, #-36]	; 0xffffffdc
   123d4:	beq	123f4 <__assert_fail@plt+0x130c>
   123d8:	ldr	r0, [fp, #-4]
   123dc:	ldrb	r0, [r0, #2]
   123e0:	bl	12738 <__assert_fail@plt+0x1650>
   123e4:	and	r0, r0, #255	; 0xff
   123e8:	asr	r0, r0, #4
   123ec:	str	r0, [sp, #40]	; 0x28
   123f0:	b	12400 <__assert_fail@plt+0x1318>
   123f4:	movw	r0, #0
   123f8:	str	r0, [sp, #40]	; 0x28
   123fc:	b	12400 <__assert_fail@plt+0x1318>
   12400:	ldr	r0, [sp, #40]	; 0x28
   12404:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12408:	add	r0, r1, r0
   1240c:	and	r0, r0, #31
   12410:	movw	r2, #60759	; 0xed57
   12414:	movt	r2, #1
   12418:	add	r0, r2, r0
   1241c:	ldrb	r0, [r0]
   12420:	str	r0, [sp, #36]	; 0x24
   12424:	b	12434 <__assert_fail@plt+0x134c>
   12428:	movw	r0, #61	; 0x3d
   1242c:	str	r0, [sp, #36]	; 0x24
   12430:	b	12434 <__assert_fail@plt+0x134c>
   12434:	ldr	r0, [sp, #36]	; 0x24
   12438:	ldr	r1, [fp, #-12]
   1243c:	add	r2, r1, #1
   12440:	str	r2, [fp, #-12]
   12444:	strb	r0, [r1]
   12448:	ldr	r0, [fp, #-16]
   1244c:	mvn	r1, #0
   12450:	add	r0, r0, r1
   12454:	str	r0, [fp, #-16]
   12458:	cmp	r0, #0
   1245c:	bne	12464 <__assert_fail@plt+0x137c>
   12460:	b	12718 <__assert_fail@plt+0x1630>
   12464:	ldr	r0, [fp, #-8]
   12468:	cmp	r0, #0
   1246c:	beq	124f0 <__assert_fail@plt+0x1408>
   12470:	ldr	r0, [fp, #-4]
   12474:	ldrb	r0, [r0, #2]
   12478:	bl	12738 <__assert_fail@plt+0x1650>
   1247c:	and	r0, r0, #255	; 0xff
   12480:	lsl	r0, r0, #1
   12484:	ldr	r1, [fp, #-8]
   12488:	mvn	r2, #0
   1248c:	add	r1, r1, r2
   12490:	str	r1, [fp, #-8]
   12494:	cmp	r1, #0
   12498:	str	r0, [sp, #32]
   1249c:	beq	124bc <__assert_fail@plt+0x13d4>
   124a0:	ldr	r0, [fp, #-4]
   124a4:	ldrb	r0, [r0, #3]
   124a8:	bl	12738 <__assert_fail@plt+0x1650>
   124ac:	and	r0, r0, #255	; 0xff
   124b0:	asr	r0, r0, #7
   124b4:	str	r0, [sp, #28]
   124b8:	b	124c8 <__assert_fail@plt+0x13e0>
   124bc:	movw	r0, #0
   124c0:	str	r0, [sp, #28]
   124c4:	b	124c8 <__assert_fail@plt+0x13e0>
   124c8:	ldr	r0, [sp, #28]
   124cc:	ldr	r1, [sp, #32]
   124d0:	add	r0, r1, r0
   124d4:	and	r0, r0, #31
   124d8:	movw	r2, #60759	; 0xed57
   124dc:	movt	r2, #1
   124e0:	add	r0, r2, r0
   124e4:	ldrb	r0, [r0]
   124e8:	str	r0, [sp, #24]
   124ec:	b	124fc <__assert_fail@plt+0x1414>
   124f0:	movw	r0, #61	; 0x3d
   124f4:	str	r0, [sp, #24]
   124f8:	b	124fc <__assert_fail@plt+0x1414>
   124fc:	ldr	r0, [sp, #24]
   12500:	ldr	r1, [fp, #-12]
   12504:	add	r2, r1, #1
   12508:	str	r2, [fp, #-12]
   1250c:	strb	r0, [r1]
   12510:	ldr	r0, [fp, #-16]
   12514:	mvn	r1, #0
   12518:	add	r0, r0, r1
   1251c:	str	r0, [fp, #-16]
   12520:	cmp	r0, #0
   12524:	bne	1252c <__assert_fail@plt+0x1444>
   12528:	b	12718 <__assert_fail@plt+0x1630>
   1252c:	ldr	r0, [fp, #-8]
   12530:	cmp	r0, #0
   12534:	beq	12568 <__assert_fail@plt+0x1480>
   12538:	ldr	r0, [fp, #-4]
   1253c:	ldrb	r0, [r0, #3]
   12540:	bl	12738 <__assert_fail@plt+0x1650>
   12544:	and	r0, r0, #255	; 0xff
   12548:	asr	r0, r0, #2
   1254c:	and	r0, r0, #31
   12550:	movw	r1, #60759	; 0xed57
   12554:	movt	r1, #1
   12558:	add	r0, r1, r0
   1255c:	ldrb	r0, [r0]
   12560:	str	r0, [sp, #20]
   12564:	b	12574 <__assert_fail@plt+0x148c>
   12568:	movw	r0, #61	; 0x3d
   1256c:	str	r0, [sp, #20]
   12570:	b	12574 <__assert_fail@plt+0x148c>
   12574:	ldr	r0, [sp, #20]
   12578:	ldr	r1, [fp, #-12]
   1257c:	add	r2, r1, #1
   12580:	str	r2, [fp, #-12]
   12584:	strb	r0, [r1]
   12588:	ldr	r0, [fp, #-16]
   1258c:	mvn	r1, #0
   12590:	add	r0, r0, r1
   12594:	str	r0, [fp, #-16]
   12598:	cmp	r0, #0
   1259c:	bne	125a4 <__assert_fail@plt+0x14bc>
   125a0:	b	12718 <__assert_fail@plt+0x1630>
   125a4:	ldr	r0, [fp, #-8]
   125a8:	cmp	r0, #0
   125ac:	beq	12630 <__assert_fail@plt+0x1548>
   125b0:	ldr	r0, [fp, #-4]
   125b4:	ldrb	r0, [r0, #3]
   125b8:	bl	12738 <__assert_fail@plt+0x1650>
   125bc:	and	r0, r0, #255	; 0xff
   125c0:	lsl	r0, r0, #3
   125c4:	ldr	r1, [fp, #-8]
   125c8:	mvn	r2, #0
   125cc:	add	r1, r1, r2
   125d0:	str	r1, [fp, #-8]
   125d4:	cmp	r1, #0
   125d8:	str	r0, [sp, #16]
   125dc:	beq	125fc <__assert_fail@plt+0x1514>
   125e0:	ldr	r0, [fp, #-4]
   125e4:	ldrb	r0, [r0, #4]
   125e8:	bl	12738 <__assert_fail@plt+0x1650>
   125ec:	and	r0, r0, #255	; 0xff
   125f0:	asr	r0, r0, #5
   125f4:	str	r0, [sp, #12]
   125f8:	b	12608 <__assert_fail@plt+0x1520>
   125fc:	movw	r0, #0
   12600:	str	r0, [sp, #12]
   12604:	b	12608 <__assert_fail@plt+0x1520>
   12608:	ldr	r0, [sp, #12]
   1260c:	ldr	r1, [sp, #16]
   12610:	add	r0, r1, r0
   12614:	and	r0, r0, #31
   12618:	movw	r2, #60759	; 0xed57
   1261c:	movt	r2, #1
   12620:	add	r0, r2, r0
   12624:	ldrb	r0, [r0]
   12628:	str	r0, [sp, #8]
   1262c:	b	1263c <__assert_fail@plt+0x1554>
   12630:	movw	r0, #61	; 0x3d
   12634:	str	r0, [sp, #8]
   12638:	b	1263c <__assert_fail@plt+0x1554>
   1263c:	ldr	r0, [sp, #8]
   12640:	ldr	r1, [fp, #-12]
   12644:	add	r2, r1, #1
   12648:	str	r2, [fp, #-12]
   1264c:	strb	r0, [r1]
   12650:	ldr	r0, [fp, #-16]
   12654:	mvn	r1, #0
   12658:	add	r0, r0, r1
   1265c:	str	r0, [fp, #-16]
   12660:	cmp	r0, #0
   12664:	bne	1266c <__assert_fail@plt+0x1584>
   12668:	b	12718 <__assert_fail@plt+0x1630>
   1266c:	ldr	r0, [fp, #-8]
   12670:	cmp	r0, #0
   12674:	beq	126a4 <__assert_fail@plt+0x15bc>
   12678:	ldr	r0, [fp, #-4]
   1267c:	ldrb	r0, [r0, #4]
   12680:	bl	12738 <__assert_fail@plt+0x1650>
   12684:	and	r0, r0, #255	; 0xff
   12688:	and	r0, r0, #31
   1268c:	movw	r1, #60759	; 0xed57
   12690:	movt	r1, #1
   12694:	add	r0, r1, r0
   12698:	ldrb	r0, [r0]
   1269c:	str	r0, [sp, #4]
   126a0:	b	126b0 <__assert_fail@plt+0x15c8>
   126a4:	movw	r0, #61	; 0x3d
   126a8:	str	r0, [sp, #4]
   126ac:	b	126b0 <__assert_fail@plt+0x15c8>
   126b0:	ldr	r0, [sp, #4]
   126b4:	ldr	r1, [fp, #-12]
   126b8:	add	r2, r1, #1
   126bc:	str	r2, [fp, #-12]
   126c0:	strb	r0, [r1]
   126c4:	ldr	r0, [fp, #-16]
   126c8:	mvn	r1, #0
   126cc:	add	r0, r0, r1
   126d0:	str	r0, [fp, #-16]
   126d4:	cmp	r0, #0
   126d8:	bne	126e0 <__assert_fail@plt+0x15f8>
   126dc:	b	12718 <__assert_fail@plt+0x1630>
   126e0:	ldr	r0, [fp, #-8]
   126e4:	cmp	r0, #0
   126e8:	beq	126fc <__assert_fail@plt+0x1614>
   126ec:	ldr	r0, [fp, #-8]
   126f0:	mvn	r1, #0
   126f4:	add	r0, r0, r1
   126f8:	str	r0, [fp, #-8]
   126fc:	ldr	r0, [fp, #-8]
   12700:	cmp	r0, #0
   12704:	beq	12714 <__assert_fail@plt+0x162c>
   12708:	ldr	r0, [fp, #-4]
   1270c:	add	r0, r0, #5
   12710:	str	r0, [fp, #-4]
   12714:	b	121f8 <__assert_fail@plt+0x1110>
   12718:	ldr	r0, [fp, #-16]
   1271c:	cmp	r0, #0
   12720:	beq	12730 <__assert_fail@plt+0x1648>
   12724:	ldr	r0, [fp, #-12]
   12728:	movw	r1, #0
   1272c:	strb	r1, [r0]
   12730:	mov	sp, fp
   12734:	pop	{fp, pc}
   12738:	sub	sp, sp, #4
   1273c:	strb	r0, [sp, #3]
   12740:	ldrb	r0, [sp, #3]
   12744:	add	sp, sp, #4
   12748:	bx	lr
   1274c:	push	{fp, lr}
   12750:	mov	fp, sp
   12754:	sub	sp, sp, #32
   12758:	str	r0, [fp, #-8]
   1275c:	str	r1, [fp, #-12]
   12760:	str	r2, [sp, #16]
   12764:	ldr	r0, [fp, #-12]
   12768:	movw	r1, #26215	; 0x6667
   1276c:	movt	r1, #26214	; 0x6666
   12770:	smmul	r1, r0, r1
   12774:	asr	r2, r1, #1
   12778:	add	r1, r2, r1, lsr #31
   1277c:	add	r2, r1, r1, lsl #2
   12780:	sub	r0, r0, r2
   12784:	cmp	r0, #0
   12788:	movw	r0, #0
   1278c:	movne	r0, #1
   12790:	and	r0, r0, #1
   12794:	add	r0, r1, r0
   12798:	str	r0, [sp, #12]
   1279c:	b	12a08 <__assert_fail@plt+0x1920>
   127a0:	b	127a4 <__assert_fail@plt+0x16bc>
   127a4:	b	12850 <__assert_fail@plt+0x1768>
   127a8:	ldr	r0, [sp, #12]
   127ac:	cmp	r0, #0
   127b0:	bge	127e4 <__assert_fail@plt+0x16fc>
   127b4:	b	127b8 <__assert_fail@plt+0x16d0>
   127b8:	ldr	r0, [sp, #12]
   127bc:	cmp	r0, #15
   127c0:	blt	128b0 <__assert_fail@plt+0x17c8>
   127c4:	b	128c4 <__assert_fail@plt+0x17dc>
   127c8:	ldr	r0, [sp, #12]
   127cc:	mvn	r1, #0
   127d0:	sub	r0, r1, r0
   127d4:	mvn	r1, #14
   127d8:	cmp	r1, r0
   127dc:	ble	128b0 <__assert_fail@plt+0x17c8>
   127e0:	b	128c4 <__assert_fail@plt+0x17dc>
   127e4:	b	127e8 <__assert_fail@plt+0x1700>
   127e8:	b	1283c <__assert_fail@plt+0x1754>
   127ec:	b	1283c <__assert_fail@plt+0x1754>
   127f0:	b	1283c <__assert_fail@plt+0x1754>
   127f4:	b	127f8 <__assert_fail@plt+0x1710>
   127f8:	ldr	r0, [sp, #12]
   127fc:	mvn	r1, #127	; 0x7f
   12800:	add	r0, r0, r1
   12804:	movw	r1, #0
   12808:	cmp	r1, r0
   1280c:	blt	128b0 <__assert_fail@plt+0x17c8>
   12810:	b	128c4 <__assert_fail@plt+0x17dc>
   12814:	ldr	r0, [sp, #12]
   12818:	movw	r1, #0
   1281c:	cmp	r1, r0
   12820:	bge	128c4 <__assert_fail@plt+0x17dc>
   12824:	ldr	r0, [sp, #12]
   12828:	sub	r0, r0, #1
   1282c:	movw	r1, #127	; 0x7f
   12830:	cmp	r1, r0
   12834:	blt	128b0 <__assert_fail@plt+0x17c8>
   12838:	b	128c4 <__assert_fail@plt+0x17dc>
   1283c:	ldr	r0, [sp, #12]
   12840:	mvn	r1, #15
   12844:	cmp	r1, r0
   12848:	blt	128b0 <__assert_fail@plt+0x17c8>
   1284c:	b	128c4 <__assert_fail@plt+0x17dc>
   12850:	b	12858 <__assert_fail@plt+0x1770>
   12854:	b	128c4 <__assert_fail@plt+0x17dc>
   12858:	ldr	r0, [sp, #12]
   1285c:	cmp	r0, #0
   12860:	bge	128a0 <__assert_fail@plt+0x17b8>
   12864:	b	12868 <__assert_fail@plt+0x1780>
   12868:	b	12888 <__assert_fail@plt+0x17a0>
   1286c:	b	12888 <__assert_fail@plt+0x17a0>
   12870:	ldr	r0, [sp, #12]
   12874:	cmn	r0, #1
   12878:	bne	12888 <__assert_fail@plt+0x17a0>
   1287c:	b	12880 <__assert_fail@plt+0x1798>
   12880:	b	128c4 <__assert_fail@plt+0x17dc>
   12884:	b	128c4 <__assert_fail@plt+0x17dc>
   12888:	ldr	r0, [sp, #12]
   1288c:	mvn	r1, #127	; 0x7f
   12890:	sdiv	r0, r1, r0
   12894:	cmp	r0, #8
   12898:	blt	128b0 <__assert_fail@plt+0x17c8>
   1289c:	b	128c4 <__assert_fail@plt+0x17dc>
   128a0:	ldr	r0, [sp, #12]
   128a4:	movw	r1, #15
   128a8:	cmp	r1, r0
   128ac:	bge	128c4 <__assert_fail@plt+0x17dc>
   128b0:	ldr	r0, [sp, #12]
   128b4:	lsl	r0, r0, #3
   128b8:	sxtb	r0, r0
   128bc:	str	r0, [sp, #8]
   128c0:	b	13380 <__assert_fail@plt+0x2298>
   128c4:	ldr	r0, [sp, #12]
   128c8:	lsl	r0, r0, #3
   128cc:	sxtb	r0, r0
   128d0:	str	r0, [sp, #8]
   128d4:	b	13374 <__assert_fail@plt+0x228c>
   128d8:	b	12980 <__assert_fail@plt+0x1898>
   128dc:	ldr	r0, [sp, #12]
   128e0:	cmp	r0, #0
   128e4:	bge	12918 <__assert_fail@plt+0x1830>
   128e8:	b	128ec <__assert_fail@plt+0x1804>
   128ec:	ldr	r0, [sp, #12]
   128f0:	cmp	r0, #31
   128f4:	blt	129e0 <__assert_fail@plt+0x18f8>
   128f8:	b	129f4 <__assert_fail@plt+0x190c>
   128fc:	ldr	r0, [sp, #12]
   12900:	mvn	r1, #0
   12904:	sub	r0, r1, r0
   12908:	mvn	r1, #30
   1290c:	cmp	r1, r0
   12910:	ble	129e0 <__assert_fail@plt+0x18f8>
   12914:	b	129f4 <__assert_fail@plt+0x190c>
   12918:	b	1291c <__assert_fail@plt+0x1834>
   1291c:	b	1296c <__assert_fail@plt+0x1884>
   12920:	b	1296c <__assert_fail@plt+0x1884>
   12924:	b	1296c <__assert_fail@plt+0x1884>
   12928:	b	1292c <__assert_fail@plt+0x1844>
   1292c:	ldr	r0, [sp, #12]
   12930:	add	r0, r0, #0
   12934:	movw	r1, #0
   12938:	cmp	r1, r0
   1293c:	blt	129e0 <__assert_fail@plt+0x18f8>
   12940:	b	129f4 <__assert_fail@plt+0x190c>
   12944:	ldr	r0, [sp, #12]
   12948:	movw	r1, #0
   1294c:	cmp	r1, r0
   12950:	bge	129f4 <__assert_fail@plt+0x190c>
   12954:	ldr	r0, [sp, #12]
   12958:	sub	r0, r0, #1
   1295c:	mvn	r1, #0
   12960:	cmp	r1, r0
   12964:	blt	129e0 <__assert_fail@plt+0x18f8>
   12968:	b	129f4 <__assert_fail@plt+0x190c>
   1296c:	ldr	r0, [sp, #12]
   12970:	movw	r1, #0
   12974:	cmp	r1, r0
   12978:	blt	129e0 <__assert_fail@plt+0x18f8>
   1297c:	b	129f4 <__assert_fail@plt+0x190c>
   12980:	b	12988 <__assert_fail@plt+0x18a0>
   12984:	b	129f4 <__assert_fail@plt+0x190c>
   12988:	ldr	r0, [sp, #12]
   1298c:	cmp	r0, #0
   12990:	bge	129d0 <__assert_fail@plt+0x18e8>
   12994:	b	12998 <__assert_fail@plt+0x18b0>
   12998:	b	129b8 <__assert_fail@plt+0x18d0>
   1299c:	b	129b8 <__assert_fail@plt+0x18d0>
   129a0:	ldr	r0, [sp, #12]
   129a4:	cmn	r0, #1
   129a8:	bne	129b8 <__assert_fail@plt+0x18d0>
   129ac:	b	129b0 <__assert_fail@plt+0x18c8>
   129b0:	b	129e0 <__assert_fail@plt+0x18f8>
   129b4:	b	129e0 <__assert_fail@plt+0x18f8>
   129b8:	ldr	r0, [sp, #12]
   129bc:	movw	r1, #0
   129c0:	sdiv	r0, r1, r0
   129c4:	cmp	r0, #8
   129c8:	blt	129e0 <__assert_fail@plt+0x18f8>
   129cc:	b	129f4 <__assert_fail@plt+0x190c>
   129d0:	ldr	r0, [sp, #12]
   129d4:	movw	r1, #31
   129d8:	cmp	r1, r0
   129dc:	bge	129f4 <__assert_fail@plt+0x190c>
   129e0:	ldr	r0, [sp, #12]
   129e4:	lsl	r0, r0, #3
   129e8:	and	r0, r0, #255	; 0xff
   129ec:	str	r0, [sp, #8]
   129f0:	b	13380 <__assert_fail@plt+0x2298>
   129f4:	ldr	r0, [sp, #12]
   129f8:	lsl	r0, r0, #3
   129fc:	and	r0, r0, #255	; 0xff
   12a00:	str	r0, [sp, #8]
   12a04:	b	13374 <__assert_fail@plt+0x228c>
   12a08:	b	12c7c <__assert_fail@plt+0x1b94>
   12a0c:	b	12a10 <__assert_fail@plt+0x1928>
   12a10:	b	12ac0 <__assert_fail@plt+0x19d8>
   12a14:	ldr	r0, [sp, #12]
   12a18:	cmp	r0, #0
   12a1c:	bge	12a54 <__assert_fail@plt+0x196c>
   12a20:	b	12a24 <__assert_fail@plt+0x193c>
   12a24:	ldr	r0, [sp, #12]
   12a28:	movw	r1, #4095	; 0xfff
   12a2c:	cmp	r0, r1
   12a30:	blt	12b20 <__assert_fail@plt+0x1a38>
   12a34:	b	12b34 <__assert_fail@plt+0x1a4c>
   12a38:	ldr	r0, [pc, #2528]	; 13420 <__assert_fail@plt+0x2338>
   12a3c:	ldr	r1, [sp, #12]
   12a40:	mvn	r2, #0
   12a44:	sub	r1, r2, r1
   12a48:	cmp	r0, r1
   12a4c:	ble	12b20 <__assert_fail@plt+0x1a38>
   12a50:	b	12b34 <__assert_fail@plt+0x1a4c>
   12a54:	b	12a58 <__assert_fail@plt+0x1970>
   12a58:	b	12aac <__assert_fail@plt+0x19c4>
   12a5c:	b	12aac <__assert_fail@plt+0x19c4>
   12a60:	b	12aac <__assert_fail@plt+0x19c4>
   12a64:	b	12a68 <__assert_fail@plt+0x1980>
   12a68:	ldr	r0, [pc, #2472]	; 13418 <__assert_fail@plt+0x2330>
   12a6c:	ldr	r1, [sp, #12]
   12a70:	add	r0, r1, r0
   12a74:	movw	r1, #0
   12a78:	cmp	r1, r0
   12a7c:	blt	12b20 <__assert_fail@plt+0x1a38>
   12a80:	b	12b34 <__assert_fail@plt+0x1a4c>
   12a84:	ldr	r0, [sp, #12]
   12a88:	movw	r1, #0
   12a8c:	cmp	r1, r0
   12a90:	bge	12b34 <__assert_fail@plt+0x1a4c>
   12a94:	ldr	r0, [sp, #12]
   12a98:	sub	r0, r0, #1
   12a9c:	movw	r1, #32767	; 0x7fff
   12aa0:	cmp	r1, r0
   12aa4:	blt	12b20 <__assert_fail@plt+0x1a38>
   12aa8:	b	12b34 <__assert_fail@plt+0x1a4c>
   12aac:	ldr	r0, [pc, #2408]	; 1341c <__assert_fail@plt+0x2334>
   12ab0:	ldr	r1, [sp, #12]
   12ab4:	cmp	r0, r1
   12ab8:	blt	12b20 <__assert_fail@plt+0x1a38>
   12abc:	b	12b34 <__assert_fail@plt+0x1a4c>
   12ac0:	b	12ac8 <__assert_fail@plt+0x19e0>
   12ac4:	b	12b34 <__assert_fail@plt+0x1a4c>
   12ac8:	ldr	r0, [sp, #12]
   12acc:	cmp	r0, #0
   12ad0:	bge	12b10 <__assert_fail@plt+0x1a28>
   12ad4:	b	12ad8 <__assert_fail@plt+0x19f0>
   12ad8:	b	12af8 <__assert_fail@plt+0x1a10>
   12adc:	b	12af8 <__assert_fail@plt+0x1a10>
   12ae0:	ldr	r0, [sp, #12]
   12ae4:	cmn	r0, #1
   12ae8:	bne	12af8 <__assert_fail@plt+0x1a10>
   12aec:	b	12af0 <__assert_fail@plt+0x1a08>
   12af0:	b	12b34 <__assert_fail@plt+0x1a4c>
   12af4:	b	12b34 <__assert_fail@plt+0x1a4c>
   12af8:	ldr	r0, [pc, #2328]	; 13418 <__assert_fail@plt+0x2330>
   12afc:	ldr	r1, [sp, #12]
   12b00:	sdiv	r0, r0, r1
   12b04:	cmp	r0, #8
   12b08:	blt	12b20 <__assert_fail@plt+0x1a38>
   12b0c:	b	12b34 <__assert_fail@plt+0x1a4c>
   12b10:	ldr	r0, [sp, #12]
   12b14:	movw	r1, #4095	; 0xfff
   12b18:	cmp	r1, r0
   12b1c:	bge	12b34 <__assert_fail@plt+0x1a4c>
   12b20:	ldr	r0, [sp, #12]
   12b24:	lsl	r0, r0, #3
   12b28:	sxth	r0, r0
   12b2c:	str	r0, [sp, #8]
   12b30:	b	13380 <__assert_fail@plt+0x2298>
   12b34:	ldr	r0, [sp, #12]
   12b38:	lsl	r0, r0, #3
   12b3c:	sxth	r0, r0
   12b40:	str	r0, [sp, #8]
   12b44:	b	13374 <__assert_fail@plt+0x228c>
   12b48:	b	12bf4 <__assert_fail@plt+0x1b0c>
   12b4c:	ldr	r0, [sp, #12]
   12b50:	cmp	r0, #0
   12b54:	bge	12b8c <__assert_fail@plt+0x1aa4>
   12b58:	b	12b5c <__assert_fail@plt+0x1a74>
   12b5c:	ldr	r0, [sp, #12]
   12b60:	movw	r1, #8191	; 0x1fff
   12b64:	cmp	r0, r1
   12b68:	blt	12c54 <__assert_fail@plt+0x1b6c>
   12b6c:	b	12c68 <__assert_fail@plt+0x1b80>
   12b70:	ldr	r0, [pc, #2220]	; 13424 <__assert_fail@plt+0x233c>
   12b74:	ldr	r1, [sp, #12]
   12b78:	mvn	r2, #0
   12b7c:	sub	r1, r2, r1
   12b80:	cmp	r0, r1
   12b84:	ble	12c54 <__assert_fail@plt+0x1b6c>
   12b88:	b	12c68 <__assert_fail@plt+0x1b80>
   12b8c:	b	12b90 <__assert_fail@plt+0x1aa8>
   12b90:	b	12be0 <__assert_fail@plt+0x1af8>
   12b94:	b	12be0 <__assert_fail@plt+0x1af8>
   12b98:	b	12be0 <__assert_fail@plt+0x1af8>
   12b9c:	b	12ba0 <__assert_fail@plt+0x1ab8>
   12ba0:	ldr	r0, [sp, #12]
   12ba4:	add	r0, r0, #0
   12ba8:	movw	r1, #0
   12bac:	cmp	r1, r0
   12bb0:	blt	12c54 <__assert_fail@plt+0x1b6c>
   12bb4:	b	12c68 <__assert_fail@plt+0x1b80>
   12bb8:	ldr	r0, [sp, #12]
   12bbc:	movw	r1, #0
   12bc0:	cmp	r1, r0
   12bc4:	bge	12c68 <__assert_fail@plt+0x1b80>
   12bc8:	ldr	r0, [sp, #12]
   12bcc:	sub	r0, r0, #1
   12bd0:	mvn	r1, #0
   12bd4:	cmp	r1, r0
   12bd8:	blt	12c54 <__assert_fail@plt+0x1b6c>
   12bdc:	b	12c68 <__assert_fail@plt+0x1b80>
   12be0:	ldr	r0, [sp, #12]
   12be4:	movw	r1, #0
   12be8:	cmp	r1, r0
   12bec:	blt	12c54 <__assert_fail@plt+0x1b6c>
   12bf0:	b	12c68 <__assert_fail@plt+0x1b80>
   12bf4:	b	12bfc <__assert_fail@plt+0x1b14>
   12bf8:	b	12c68 <__assert_fail@plt+0x1b80>
   12bfc:	ldr	r0, [sp, #12]
   12c00:	cmp	r0, #0
   12c04:	bge	12c44 <__assert_fail@plt+0x1b5c>
   12c08:	b	12c0c <__assert_fail@plt+0x1b24>
   12c0c:	b	12c2c <__assert_fail@plt+0x1b44>
   12c10:	b	12c2c <__assert_fail@plt+0x1b44>
   12c14:	ldr	r0, [sp, #12]
   12c18:	cmn	r0, #1
   12c1c:	bne	12c2c <__assert_fail@plt+0x1b44>
   12c20:	b	12c24 <__assert_fail@plt+0x1b3c>
   12c24:	b	12c54 <__assert_fail@plt+0x1b6c>
   12c28:	b	12c54 <__assert_fail@plt+0x1b6c>
   12c2c:	ldr	r0, [sp, #12]
   12c30:	movw	r1, #0
   12c34:	sdiv	r0, r1, r0
   12c38:	cmp	r0, #8
   12c3c:	blt	12c54 <__assert_fail@plt+0x1b6c>
   12c40:	b	12c68 <__assert_fail@plt+0x1b80>
   12c44:	ldr	r0, [sp, #12]
   12c48:	movw	r1, #8191	; 0x1fff
   12c4c:	cmp	r1, r0
   12c50:	bge	12c68 <__assert_fail@plt+0x1b80>
   12c54:	ldr	r0, [sp, #12]
   12c58:	lsl	r0, r0, #3
   12c5c:	uxth	r0, r0
   12c60:	str	r0, [sp, #8]
   12c64:	b	13380 <__assert_fail@plt+0x2298>
   12c68:	ldr	r0, [sp, #12]
   12c6c:	lsl	r0, r0, #3
   12c70:	uxth	r0, r0
   12c74:	str	r0, [sp, #8]
   12c78:	b	13374 <__assert_fail@plt+0x228c>
   12c7c:	b	12c80 <__assert_fail@plt+0x1b98>
   12c80:	b	12c84 <__assert_fail@plt+0x1b9c>
   12c84:	b	12d24 <__assert_fail@plt+0x1c3c>
   12c88:	ldr	r0, [sp, #12]
   12c8c:	cmp	r0, #0
   12c90:	bge	12cc8 <__assert_fail@plt+0x1be0>
   12c94:	b	12c98 <__assert_fail@plt+0x1bb0>
   12c98:	ldr	r0, [pc, #1892]	; 13404 <__assert_fail@plt+0x231c>
   12c9c:	ldr	r1, [sp, #12]
   12ca0:	cmp	r1, r0
   12ca4:	blt	12d78 <__assert_fail@plt+0x1c90>
   12ca8:	b	12d88 <__assert_fail@plt+0x1ca0>
   12cac:	ldr	r0, [pc, #1888]	; 13414 <__assert_fail@plt+0x232c>
   12cb0:	ldr	r1, [sp, #12]
   12cb4:	mvn	r2, #0
   12cb8:	sub	r1, r2, r1
   12cbc:	cmp	r0, r1
   12cc0:	ble	12d78 <__assert_fail@plt+0x1c90>
   12cc4:	b	12d88 <__assert_fail@plt+0x1ca0>
   12cc8:	b	12d10 <__assert_fail@plt+0x1c28>
   12ccc:	b	12cd0 <__assert_fail@plt+0x1be8>
   12cd0:	ldr	r0, [sp, #12]
   12cd4:	add	r0, r0, #-2147483648	; 0x80000000
   12cd8:	movw	r1, #0
   12cdc:	cmp	r1, r0
   12ce0:	blt	12d78 <__assert_fail@plt+0x1c90>
   12ce4:	b	12d88 <__assert_fail@plt+0x1ca0>
   12ce8:	ldr	r0, [sp, #12]
   12cec:	movw	r1, #0
   12cf0:	cmp	r1, r0
   12cf4:	bge	12d88 <__assert_fail@plt+0x1ca0>
   12cf8:	ldr	r0, [pc, #1808]	; 13410 <__assert_fail@plt+0x2328>
   12cfc:	ldr	r1, [sp, #12]
   12d00:	sub	r1, r1, #1
   12d04:	cmp	r0, r1
   12d08:	blt	12d78 <__assert_fail@plt+0x1c90>
   12d0c:	b	12d88 <__assert_fail@plt+0x1ca0>
   12d10:	ldr	r0, [pc, #1780]	; 1340c <__assert_fail@plt+0x2324>
   12d14:	ldr	r1, [sp, #12]
   12d18:	cmp	r0, r1
   12d1c:	blt	12d78 <__assert_fail@plt+0x1c90>
   12d20:	b	12d88 <__assert_fail@plt+0x1ca0>
   12d24:	b	12d2c <__assert_fail@plt+0x1c44>
   12d28:	b	12d88 <__assert_fail@plt+0x1ca0>
   12d2c:	ldr	r0, [sp, #12]
   12d30:	cmp	r0, #0
   12d34:	bge	12d68 <__assert_fail@plt+0x1c80>
   12d38:	ldr	r0, [sp, #12]
   12d3c:	cmn	r0, #1
   12d40:	bne	12d50 <__assert_fail@plt+0x1c68>
   12d44:	b	12d48 <__assert_fail@plt+0x1c60>
   12d48:	b	12d88 <__assert_fail@plt+0x1ca0>
   12d4c:	b	12d88 <__assert_fail@plt+0x1ca0>
   12d50:	ldr	r0, [pc, #1712]	; 13408 <__assert_fail@plt+0x2320>
   12d54:	ldr	r1, [sp, #12]
   12d58:	sdiv	r0, r0, r1
   12d5c:	cmp	r0, #8
   12d60:	blt	12d78 <__assert_fail@plt+0x1c90>
   12d64:	b	12d88 <__assert_fail@plt+0x1ca0>
   12d68:	ldr	r0, [pc, #1684]	; 13404 <__assert_fail@plt+0x231c>
   12d6c:	ldr	r1, [sp, #12]
   12d70:	cmp	r0, r1
   12d74:	bge	12d88 <__assert_fail@plt+0x1ca0>
   12d78:	ldr	r0, [sp, #12]
   12d7c:	lsl	r0, r0, #3
   12d80:	str	r0, [sp, #8]
   12d84:	b	13380 <__assert_fail@plt+0x2298>
   12d88:	ldr	r0, [sp, #12]
   12d8c:	lsl	r0, r0, #3
   12d90:	str	r0, [sp, #8]
   12d94:	b	13374 <__assert_fail@plt+0x228c>
   12d98:	b	12e44 <__assert_fail@plt+0x1d5c>
   12d9c:	ldr	r0, [sp, #12]
   12da0:	cmp	r0, #0
   12da4:	bge	12ddc <__assert_fail@plt+0x1cf4>
   12da8:	b	12dc0 <__assert_fail@plt+0x1cd8>
   12dac:	ldr	r0, [pc, #1612]	; 13400 <__assert_fail@plt+0x2318>
   12db0:	ldr	r1, [sp, #12]
   12db4:	cmp	r1, r0
   12db8:	bcc	12ea4 <__assert_fail@plt+0x1dbc>
   12dbc:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12dc0:	ldr	r0, [sp, #12]
   12dc4:	mvn	r1, #0
   12dc8:	sub	r0, r1, r0
   12dcc:	movw	r1, #1
   12dd0:	cmp	r1, r0
   12dd4:	bls	12ea4 <__assert_fail@plt+0x1dbc>
   12dd8:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12ddc:	b	12de0 <__assert_fail@plt+0x1cf8>
   12de0:	b	12e30 <__assert_fail@plt+0x1d48>
   12de4:	b	12e30 <__assert_fail@plt+0x1d48>
   12de8:	b	12e30 <__assert_fail@plt+0x1d48>
   12dec:	b	12df0 <__assert_fail@plt+0x1d08>
   12df0:	ldr	r0, [sp, #12]
   12df4:	add	r0, r0, #0
   12df8:	movw	r1, #0
   12dfc:	cmp	r1, r0
   12e00:	blt	12ea4 <__assert_fail@plt+0x1dbc>
   12e04:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12e08:	ldr	r0, [sp, #12]
   12e0c:	movw	r1, #0
   12e10:	cmp	r1, r0
   12e14:	bge	12eb4 <__assert_fail@plt+0x1dcc>
   12e18:	ldr	r0, [sp, #12]
   12e1c:	sub	r0, r0, #1
   12e20:	mvn	r1, #0
   12e24:	cmp	r1, r0
   12e28:	blt	12ea4 <__assert_fail@plt+0x1dbc>
   12e2c:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12e30:	ldr	r0, [sp, #12]
   12e34:	movw	r1, #0
   12e38:	cmp	r1, r0
   12e3c:	blt	12ea4 <__assert_fail@plt+0x1dbc>
   12e40:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12e44:	b	12e4c <__assert_fail@plt+0x1d64>
   12e48:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12e4c:	ldr	r0, [sp, #12]
   12e50:	cmp	r0, #0
   12e54:	bge	12e94 <__assert_fail@plt+0x1dac>
   12e58:	b	12e5c <__assert_fail@plt+0x1d74>
   12e5c:	b	12e7c <__assert_fail@plt+0x1d94>
   12e60:	b	12e7c <__assert_fail@plt+0x1d94>
   12e64:	ldr	r0, [sp, #12]
   12e68:	cmn	r0, #1
   12e6c:	bne	12e7c <__assert_fail@plt+0x1d94>
   12e70:	b	12e74 <__assert_fail@plt+0x1d8c>
   12e74:	b	12ea4 <__assert_fail@plt+0x1dbc>
   12e78:	b	12ea4 <__assert_fail@plt+0x1dbc>
   12e7c:	ldr	r0, [sp, #12]
   12e80:	movw	r1, #0
   12e84:	sdiv	r0, r1, r0
   12e88:	cmp	r0, #8
   12e8c:	blt	12ea4 <__assert_fail@plt+0x1dbc>
   12e90:	b	12eb4 <__assert_fail@plt+0x1dcc>
   12e94:	ldr	r0, [pc, #1380]	; 13400 <__assert_fail@plt+0x2318>
   12e98:	ldr	r1, [sp, #12]
   12e9c:	cmp	r0, r1
   12ea0:	bcs	12eb4 <__assert_fail@plt+0x1dcc>
   12ea4:	ldr	r0, [sp, #12]
   12ea8:	lsl	r0, r0, #3
   12eac:	str	r0, [sp, #8]
   12eb0:	b	13380 <__assert_fail@plt+0x2298>
   12eb4:	ldr	r0, [sp, #12]
   12eb8:	lsl	r0, r0, #3
   12ebc:	str	r0, [sp, #8]
   12ec0:	b	13374 <__assert_fail@plt+0x228c>
   12ec4:	b	12ec8 <__assert_fail@plt+0x1de0>
   12ec8:	b	12ecc <__assert_fail@plt+0x1de4>
   12ecc:	b	12f6c <__assert_fail@plt+0x1e84>
   12ed0:	ldr	r0, [sp, #12]
   12ed4:	cmp	r0, #0
   12ed8:	bge	12f10 <__assert_fail@plt+0x1e28>
   12edc:	b	12ee0 <__assert_fail@plt+0x1df8>
   12ee0:	ldr	r0, [pc, #1308]	; 13404 <__assert_fail@plt+0x231c>
   12ee4:	ldr	r1, [sp, #12]
   12ee8:	cmp	r1, r0
   12eec:	blt	12fc0 <__assert_fail@plt+0x1ed8>
   12ef0:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12ef4:	ldr	r0, [pc, #1304]	; 13414 <__assert_fail@plt+0x232c>
   12ef8:	ldr	r1, [sp, #12]
   12efc:	mvn	r2, #0
   12f00:	sub	r1, r2, r1
   12f04:	cmp	r0, r1
   12f08:	ble	12fc0 <__assert_fail@plt+0x1ed8>
   12f0c:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12f10:	b	12f58 <__assert_fail@plt+0x1e70>
   12f14:	b	12f18 <__assert_fail@plt+0x1e30>
   12f18:	ldr	r0, [sp, #12]
   12f1c:	add	r0, r0, #-2147483648	; 0x80000000
   12f20:	movw	r1, #0
   12f24:	cmp	r1, r0
   12f28:	blt	12fc0 <__assert_fail@plt+0x1ed8>
   12f2c:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12f30:	ldr	r0, [sp, #12]
   12f34:	movw	r1, #0
   12f38:	cmp	r1, r0
   12f3c:	bge	12fd0 <__assert_fail@plt+0x1ee8>
   12f40:	ldr	r0, [pc, #1224]	; 13410 <__assert_fail@plt+0x2328>
   12f44:	ldr	r1, [sp, #12]
   12f48:	sub	r1, r1, #1
   12f4c:	cmp	r0, r1
   12f50:	blt	12fc0 <__assert_fail@plt+0x1ed8>
   12f54:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12f58:	ldr	r0, [pc, #1196]	; 1340c <__assert_fail@plt+0x2324>
   12f5c:	ldr	r1, [sp, #12]
   12f60:	cmp	r0, r1
   12f64:	blt	12fc0 <__assert_fail@plt+0x1ed8>
   12f68:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12f6c:	b	12f74 <__assert_fail@plt+0x1e8c>
   12f70:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12f74:	ldr	r0, [sp, #12]
   12f78:	cmp	r0, #0
   12f7c:	bge	12fb0 <__assert_fail@plt+0x1ec8>
   12f80:	ldr	r0, [sp, #12]
   12f84:	cmn	r0, #1
   12f88:	bne	12f98 <__assert_fail@plt+0x1eb0>
   12f8c:	b	12f90 <__assert_fail@plt+0x1ea8>
   12f90:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12f94:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12f98:	ldr	r0, [pc, #1128]	; 13408 <__assert_fail@plt+0x2320>
   12f9c:	ldr	r1, [sp, #12]
   12fa0:	sdiv	r0, r0, r1
   12fa4:	cmp	r0, #8
   12fa8:	blt	12fc0 <__assert_fail@plt+0x1ed8>
   12fac:	b	12fd0 <__assert_fail@plt+0x1ee8>
   12fb0:	ldr	r0, [pc, #1100]	; 13404 <__assert_fail@plt+0x231c>
   12fb4:	ldr	r1, [sp, #12]
   12fb8:	cmp	r0, r1
   12fbc:	bge	12fd0 <__assert_fail@plt+0x1ee8>
   12fc0:	ldr	r0, [sp, #12]
   12fc4:	lsl	r0, r0, #3
   12fc8:	str	r0, [sp, #8]
   12fcc:	b	13380 <__assert_fail@plt+0x2298>
   12fd0:	ldr	r0, [sp, #12]
   12fd4:	lsl	r0, r0, #3
   12fd8:	str	r0, [sp, #8]
   12fdc:	b	13374 <__assert_fail@plt+0x228c>
   12fe0:	b	1308c <__assert_fail@plt+0x1fa4>
   12fe4:	ldr	r0, [sp, #12]
   12fe8:	cmp	r0, #0
   12fec:	bge	13024 <__assert_fail@plt+0x1f3c>
   12ff0:	b	13008 <__assert_fail@plt+0x1f20>
   12ff4:	ldr	r0, [pc, #1028]	; 13400 <__assert_fail@plt+0x2318>
   12ff8:	ldr	r1, [sp, #12]
   12ffc:	cmp	r1, r0
   13000:	bcc	130ec <__assert_fail@plt+0x2004>
   13004:	b	130fc <__assert_fail@plt+0x2014>
   13008:	ldr	r0, [sp, #12]
   1300c:	mvn	r1, #0
   13010:	sub	r0, r1, r0
   13014:	movw	r1, #1
   13018:	cmp	r1, r0
   1301c:	bls	130ec <__assert_fail@plt+0x2004>
   13020:	b	130fc <__assert_fail@plt+0x2014>
   13024:	b	13028 <__assert_fail@plt+0x1f40>
   13028:	b	13078 <__assert_fail@plt+0x1f90>
   1302c:	b	13078 <__assert_fail@plt+0x1f90>
   13030:	b	13078 <__assert_fail@plt+0x1f90>
   13034:	b	13038 <__assert_fail@plt+0x1f50>
   13038:	ldr	r0, [sp, #12]
   1303c:	add	r0, r0, #0
   13040:	movw	r1, #0
   13044:	cmp	r1, r0
   13048:	blt	130ec <__assert_fail@plt+0x2004>
   1304c:	b	130fc <__assert_fail@plt+0x2014>
   13050:	ldr	r0, [sp, #12]
   13054:	movw	r1, #0
   13058:	cmp	r1, r0
   1305c:	bge	130fc <__assert_fail@plt+0x2014>
   13060:	ldr	r0, [sp, #12]
   13064:	sub	r0, r0, #1
   13068:	mvn	r1, #0
   1306c:	cmp	r1, r0
   13070:	blt	130ec <__assert_fail@plt+0x2004>
   13074:	b	130fc <__assert_fail@plt+0x2014>
   13078:	ldr	r0, [sp, #12]
   1307c:	movw	r1, #0
   13080:	cmp	r1, r0
   13084:	blt	130ec <__assert_fail@plt+0x2004>
   13088:	b	130fc <__assert_fail@plt+0x2014>
   1308c:	b	13094 <__assert_fail@plt+0x1fac>
   13090:	b	130fc <__assert_fail@plt+0x2014>
   13094:	ldr	r0, [sp, #12]
   13098:	cmp	r0, #0
   1309c:	bge	130dc <__assert_fail@plt+0x1ff4>
   130a0:	b	130a4 <__assert_fail@plt+0x1fbc>
   130a4:	b	130c4 <__assert_fail@plt+0x1fdc>
   130a8:	b	130c4 <__assert_fail@plt+0x1fdc>
   130ac:	ldr	r0, [sp, #12]
   130b0:	cmn	r0, #1
   130b4:	bne	130c4 <__assert_fail@plt+0x1fdc>
   130b8:	b	130bc <__assert_fail@plt+0x1fd4>
   130bc:	b	130ec <__assert_fail@plt+0x2004>
   130c0:	b	130ec <__assert_fail@plt+0x2004>
   130c4:	ldr	r0, [sp, #12]
   130c8:	movw	r1, #0
   130cc:	sdiv	r0, r1, r0
   130d0:	cmp	r0, #8
   130d4:	blt	130ec <__assert_fail@plt+0x2004>
   130d8:	b	130fc <__assert_fail@plt+0x2014>
   130dc:	ldr	r0, [pc, #796]	; 13400 <__assert_fail@plt+0x2318>
   130e0:	ldr	r1, [sp, #12]
   130e4:	cmp	r0, r1
   130e8:	bcs	130fc <__assert_fail@plt+0x2014>
   130ec:	ldr	r0, [sp, #12]
   130f0:	lsl	r0, r0, #3
   130f4:	str	r0, [sp, #8]
   130f8:	b	13380 <__assert_fail@plt+0x2298>
   130fc:	ldr	r0, [sp, #12]
   13100:	lsl	r0, r0, #3
   13104:	str	r0, [sp, #8]
   13108:	b	13374 <__assert_fail@plt+0x228c>
   1310c:	b	13110 <__assert_fail@plt+0x2028>
   13110:	b	131b8 <__assert_fail@plt+0x20d0>
   13114:	ldr	r0, [sp, #12]
   13118:	cmp	r0, #0
   1311c:	bge	1315c <__assert_fail@plt+0x2074>
   13120:	b	13124 <__assert_fail@plt+0x203c>
   13124:	ldr	r0, [sp, #12]
   13128:	mvn	r1, #0
   1312c:	subs	r1, r0, r1
   13130:	mvn	r2, #-268435456	; 0xf0000000
   13134:	rscs	r0, r2, r0, asr #31
   13138:	blt	1322c <__assert_fail@plt+0x2144>
   1313c:	b	1323c <__assert_fail@plt+0x2154>
   13140:	ldr	r0, [sp, #12]
   13144:	mvn	r0, r0
   13148:	rsbs	r1, r0, #0
   1314c:	mov	r2, #-268435456	; 0xf0000000
   13150:	sbcs	r0, r2, r0, asr #31
   13154:	blt	1322c <__assert_fail@plt+0x2144>
   13158:	b	1323c <__assert_fail@plt+0x2154>
   1315c:	b	131a0 <__assert_fail@plt+0x20b8>
   13160:	b	13164 <__assert_fail@plt+0x207c>
   13164:	ldr	r0, [sp, #12]
   13168:	mov	r1, #-2147483648	; 0x80000000
   1316c:	add	r1, r1, r0, asr #31
   13170:	rsbs	r0, r0, #0
   13174:	rscs	r1, r1, #0
   13178:	blt	1322c <__assert_fail@plt+0x2144>
   1317c:	b	1323c <__assert_fail@plt+0x2154>
   13180:	ldr	r0, [sp, #12]
   13184:	movw	r1, #0
   13188:	cmp	r1, r0
   1318c:	bge	1323c <__assert_fail@plt+0x2154>
   13190:	mov	r0, #0
   13194:	cmp	r0, #0
   13198:	bne	1322c <__assert_fail@plt+0x2144>
   1319c:	b	1323c <__assert_fail@plt+0x2154>
   131a0:	ldr	r0, [sp, #12]
   131a4:	rsbs	r1, r0, #0
   131a8:	mov	r2, #-268435456	; 0xf0000000
   131ac:	sbcs	r0, r2, r0, asr #31
   131b0:	blt	1322c <__assert_fail@plt+0x2144>
   131b4:	b	1323c <__assert_fail@plt+0x2154>
   131b8:	b	131c0 <__assert_fail@plt+0x20d8>
   131bc:	b	1323c <__assert_fail@plt+0x2154>
   131c0:	ldr	r0, [sp, #12]
   131c4:	cmp	r0, #0
   131c8:	bge	13218 <__assert_fail@plt+0x2130>
   131cc:	ldr	r0, [sp, #12]
   131d0:	cmn	r0, #1
   131d4:	bne	131e4 <__assert_fail@plt+0x20fc>
   131d8:	b	131dc <__assert_fail@plt+0x20f4>
   131dc:	b	1323c <__assert_fail@plt+0x2154>
   131e0:	b	1323c <__assert_fail@plt+0x2154>
   131e4:	ldr	r0, [sp, #12]
   131e8:	asr	r3, r0, #31
   131ec:	mov	r1, #0
   131f0:	mov	r2, #-2147483648	; 0x80000000
   131f4:	str	r0, [sp, #4]
   131f8:	mov	r0, r1
   131fc:	mov	r1, r2
   13200:	ldr	r2, [sp, #4]
   13204:	bl	1e464 <__assert_fail@plt+0xd37c>
   13208:	subs	r0, r0, #8
   1320c:	sbcs	r1, r1, #0
   13210:	blt	1322c <__assert_fail@plt+0x2144>
   13214:	b	1323c <__assert_fail@plt+0x2154>
   13218:	ldr	r0, [sp, #12]
   1321c:	asr	r0, r0, #31
   13220:	cmp	r0, #268435456	; 0x10000000
   13224:	blt	1323c <__assert_fail@plt+0x2154>
   13228:	b	1322c <__assert_fail@plt+0x2144>
   1322c:	ldr	r0, [sp, #12]
   13230:	lsl	r0, r0, #3
   13234:	str	r0, [sp, #8]
   13238:	b	13380 <__assert_fail@plt+0x2298>
   1323c:	ldr	r0, [sp, #12]
   13240:	lsl	r0, r0, #3
   13244:	str	r0, [sp, #8]
   13248:	b	13374 <__assert_fail@plt+0x228c>
   1324c:	b	132f4 <__assert_fail@plt+0x220c>
   13250:	ldr	r0, [sp, #12]
   13254:	cmp	r0, #0
   13258:	bge	1328c <__assert_fail@plt+0x21a4>
   1325c:	b	1327c <__assert_fail@plt+0x2194>
   13260:	ldr	r0, [sp, #12]
   13264:	mvn	r1, #0
   13268:	subs	r1, r0, r1
   1326c:	mvn	r2, #-536870912	; 0xe0000000
   13270:	rscs	r0, r2, r0, asr #31
   13274:	bcc	13358 <__assert_fail@plt+0x2270>
   13278:	b	13368 <__assert_fail@plt+0x2280>
   1327c:	ldr	r0, [sp, #12]
   13280:	cmn	r0, #1
   13284:	bne	13358 <__assert_fail@plt+0x2270>
   13288:	b	13368 <__assert_fail@plt+0x2280>
   1328c:	b	13290 <__assert_fail@plt+0x21a8>
   13290:	b	132e0 <__assert_fail@plt+0x21f8>
   13294:	b	132e0 <__assert_fail@plt+0x21f8>
   13298:	b	132e0 <__assert_fail@plt+0x21f8>
   1329c:	b	132a0 <__assert_fail@plt+0x21b8>
   132a0:	ldr	r0, [sp, #12]
   132a4:	add	r0, r0, #0
   132a8:	movw	r1, #0
   132ac:	cmp	r1, r0
   132b0:	blt	13358 <__assert_fail@plt+0x2270>
   132b4:	b	13368 <__assert_fail@plt+0x2280>
   132b8:	ldr	r0, [sp, #12]
   132bc:	movw	r1, #0
   132c0:	cmp	r1, r0
   132c4:	bge	13368 <__assert_fail@plt+0x2280>
   132c8:	ldr	r0, [sp, #12]
   132cc:	sub	r0, r0, #1
   132d0:	mvn	r1, #0
   132d4:	cmp	r1, r0
   132d8:	blt	13358 <__assert_fail@plt+0x2270>
   132dc:	b	13368 <__assert_fail@plt+0x2280>
   132e0:	ldr	r0, [sp, #12]
   132e4:	movw	r1, #0
   132e8:	cmp	r1, r0
   132ec:	blt	13358 <__assert_fail@plt+0x2270>
   132f0:	b	13368 <__assert_fail@plt+0x2280>
   132f4:	b	132fc <__assert_fail@plt+0x2214>
   132f8:	b	13368 <__assert_fail@plt+0x2280>
   132fc:	ldr	r0, [sp, #12]
   13300:	cmp	r0, #0
   13304:	bge	13344 <__assert_fail@plt+0x225c>
   13308:	b	1330c <__assert_fail@plt+0x2224>
   1330c:	b	1332c <__assert_fail@plt+0x2244>
   13310:	b	1332c <__assert_fail@plt+0x2244>
   13314:	ldr	r0, [sp, #12]
   13318:	cmn	r0, #1
   1331c:	bne	1332c <__assert_fail@plt+0x2244>
   13320:	b	13324 <__assert_fail@plt+0x223c>
   13324:	b	13358 <__assert_fail@plt+0x2270>
   13328:	b	13358 <__assert_fail@plt+0x2270>
   1332c:	ldr	r0, [sp, #12]
   13330:	movw	r1, #0
   13334:	sdiv	r0, r1, r0
   13338:	cmp	r0, #8
   1333c:	blt	13358 <__assert_fail@plt+0x2270>
   13340:	b	13368 <__assert_fail@plt+0x2280>
   13344:	ldr	r0, [sp, #12]
   13348:	asr	r0, r0, #31
   1334c:	cmp	r0, #536870912	; 0x20000000
   13350:	bcc	13368 <__assert_fail@plt+0x2280>
   13354:	b	13358 <__assert_fail@plt+0x2270>
   13358:	ldr	r0, [sp, #12]
   1335c:	lsl	r0, r0, #3
   13360:	str	r0, [sp, #8]
   13364:	b	13380 <__assert_fail@plt+0x2298>
   13368:	ldr	r0, [sp, #12]
   1336c:	lsl	r0, r0, #3
   13370:	str	r0, [sp, #8]
   13374:	ldr	r0, [fp, #-12]
   13378:	cmp	r0, #0
   1337c:	bge	13394 <__assert_fail@plt+0x22ac>
   13380:	ldr	r0, [sp, #16]
   13384:	movw	r1, #0
   13388:	str	r1, [r0]
   1338c:	str	r1, [fp, #-4]
   13390:	b	133f4 <__assert_fail@plt+0x230c>
   13394:	ldr	r0, [sp, #8]
   13398:	add	r0, r0, #1
   1339c:	str	r0, [sp, #8]
   133a0:	ldr	r0, [sp, #8]
   133a4:	bl	14484 <__assert_fail@plt+0x339c>
   133a8:	ldr	r1, [sp, #16]
   133ac:	str	r0, [r1]
   133b0:	ldr	r0, [sp, #16]
   133b4:	ldr	r0, [r0]
   133b8:	movw	r1, #0
   133bc:	cmp	r0, r1
   133c0:	bne	133d0 <__assert_fail@plt+0x22e8>
   133c4:	ldr	r0, [sp, #8]
   133c8:	str	r0, [fp, #-4]
   133cc:	b	133f4 <__assert_fail@plt+0x230c>
   133d0:	ldr	r0, [fp, #-8]
   133d4:	ldr	r1, [fp, #-12]
   133d8:	ldr	r2, [sp, #16]
   133dc:	ldr	r2, [r2]
   133e0:	ldr	r3, [sp, #8]
   133e4:	bl	121dc <__assert_fail@plt+0x10f4>
   133e8:	ldr	r0, [sp, #8]
   133ec:	sub	r0, r0, #1
   133f0:	str	r0, [fp, #-4]
   133f4:	ldr	r0, [fp, #-4]
   133f8:	mov	sp, fp
   133fc:	pop	{fp, pc}
   13400:	svcne	0x00ffffff
   13404:	svceq	0x00ffffff
   13408:	andhi	r0, r0, r0
   1340c:			; <UNDEFINED> instruction: 0xf0000000
   13410:	svcvc	0x00ffffff
   13414:			; <UNDEFINED> instruction: 0xf0000001
   13418:			; <UNDEFINED> instruction: 0xffff8000
   1341c:			; <UNDEFINED> instruction: 0xfffff000
   13420:			; <UNDEFINED> instruction: 0xfffff001
   13424:			; <UNDEFINED> instruction: 0xffffe001
   13428:	push	{fp, lr}
   1342c:	mov	fp, sp
   13430:	sub	sp, sp, #8
   13434:	strb	r0, [fp, #-1]
   13438:	ldrb	r0, [fp, #-1]
   1343c:	bl	12738 <__assert_fail@plt+0x1650>
   13440:	and	r0, r0, #255	; 0xff
   13444:	movw	r1, #60791	; 0xed77
   13448:	movt	r1, #1
   1344c:	add	r0, r1, r0
   13450:	ldrsb	r0, [r0]
   13454:	movw	r1, #0
   13458:	cmp	r1, r0
   1345c:	movw	r0, #0
   13460:	movle	r0, #1
   13464:	and	r0, r0, #1
   13468:	mov	sp, fp
   1346c:	pop	{fp, pc}
   13470:	sub	sp, sp, #4
   13474:	str	r0, [sp]
   13478:	ldr	r0, [sp]
   1347c:	movw	r1, #0
   13480:	str	r1, [r0]
   13484:	add	sp, sp, #4
   13488:	bx	lr
   1348c:	push	{fp, lr}
   13490:	mov	fp, sp
   13494:	sub	sp, sp, #40	; 0x28
   13498:	ldr	ip, [fp, #8]
   1349c:	str	r0, [fp, #-4]
   134a0:	str	r1, [fp, #-8]
   134a4:	str	r2, [fp, #-12]
   134a8:	str	r3, [fp, #-16]
   134ac:	ldr	r0, [fp, #8]
   134b0:	ldr	r0, [r0]
   134b4:	str	r0, [sp, #20]
   134b8:	ldr	r0, [fp, #-4]
   134bc:	movw	r1, #0
   134c0:	cmp	r0, r1
   134c4:	movw	r0, #0
   134c8:	movne	r0, #1
   134cc:	and	r0, r0, #1
   134d0:	strb	r0, [sp, #19]
   134d4:	movw	r0, #0
   134d8:	strb	r0, [sp, #18]
   134dc:	str	r1, [sp, #12]
   134e0:	ldrb	r0, [sp, #19]
   134e4:	tst	r0, #1
   134e8:	beq	13510 <__assert_fail@plt+0x2428>
   134ec:	ldr	r0, [fp, #-4]
   134f0:	ldr	r0, [r0]
   134f4:	str	r0, [sp, #12]
   134f8:	ldr	r0, [fp, #-12]
   134fc:	cmp	r0, #0
   13500:	movw	r0, #0
   13504:	moveq	r0, #1
   13508:	and	r0, r0, #1
   1350c:	strb	r0, [sp, #18]
   13510:	b	13514 <__assert_fail@plt+0x242c>
   13514:	ldr	r0, [sp, #20]
   13518:	str	r0, [sp, #8]
   1351c:	ldr	r0, [sp, #12]
   13520:	cmp	r0, #0
   13524:	bne	13580 <__assert_fail@plt+0x2498>
   13528:	ldrb	r0, [sp, #18]
   1352c:	tst	r0, #1
   13530:	bne	13580 <__assert_fail@plt+0x2498>
   13534:	b	13538 <__assert_fail@plt+0x2450>
   13538:	ldr	r0, [sp, #20]
   1353c:	str	r0, [sp, #8]
   13540:	ldr	r0, [fp, #-8]
   13544:	ldr	r1, [fp, #-12]
   13548:	sub	r2, fp, #16
   1354c:	add	r3, sp, #20
   13550:	bl	136ec <__assert_fail@plt+0x2604>
   13554:	tst	r0, #1
   13558:	bne	13560 <__assert_fail@plt+0x2478>
   1355c:	b	1357c <__assert_fail@plt+0x2494>
   13560:	ldr	r0, [fp, #-8]
   13564:	add	r0, r0, #8
   13568:	str	r0, [fp, #-8]
   1356c:	ldr	r0, [fp, #-12]
   13570:	sub	r0, r0, #8
   13574:	str	r0, [fp, #-12]
   13578:	b	13538 <__assert_fail@plt+0x2450>
   1357c:	b	13580 <__assert_fail@plt+0x2498>
   13580:	ldr	r0, [fp, #-12]
   13584:	cmp	r0, #0
   13588:	bne	1359c <__assert_fail@plt+0x24b4>
   1358c:	ldrb	r0, [sp, #18]
   13590:	tst	r0, #1
   13594:	bne	1359c <__assert_fail@plt+0x24b4>
   13598:	b	136bc <__assert_fail@plt+0x25d4>
   1359c:	ldr	r0, [fp, #-12]
   135a0:	cmp	r0, #0
   135a4:	beq	135e4 <__assert_fail@plt+0x24fc>
   135a8:	ldr	r0, [fp, #-8]
   135ac:	ldrb	r0, [r0]
   135b0:	cmp	r0, #10
   135b4:	bne	135e4 <__assert_fail@plt+0x24fc>
   135b8:	ldrb	r0, [sp, #19]
   135bc:	tst	r0, #1
   135c0:	beq	135e4 <__assert_fail@plt+0x24fc>
   135c4:	ldr	r0, [fp, #-8]
   135c8:	add	r0, r0, #1
   135cc:	str	r0, [fp, #-8]
   135d0:	ldr	r0, [fp, #-12]
   135d4:	mvn	r1, #0
   135d8:	add	r0, r0, r1
   135dc:	str	r0, [fp, #-12]
   135e0:	b	13514 <__assert_fail@plt+0x242c>
   135e4:	ldr	r0, [sp, #8]
   135e8:	ldr	r1, [sp, #20]
   135ec:	sub	r0, r0, r1
   135f0:	ldr	r1, [fp, #-16]
   135f4:	movw	r2, #0
   135f8:	sub	r0, r2, r0
   135fc:	add	r0, r1, r0
   13600:	str	r0, [fp, #-16]
   13604:	ldr	r0, [sp, #8]
   13608:	str	r0, [sp, #20]
   1360c:	ldr	r0, [fp, #-8]
   13610:	ldr	r1, [fp, #-12]
   13614:	add	r0, r0, r1
   13618:	str	r0, [sp, #4]
   1361c:	ldrb	r0, [sp, #19]
   13620:	tst	r0, #1
   13624:	beq	13644 <__assert_fail@plt+0x255c>
   13628:	ldr	r0, [fp, #-4]
   1362c:	ldr	r2, [sp, #4]
   13630:	sub	r1, fp, #8
   13634:	sub	r3, fp, #12
   13638:	bl	13d04 <__assert_fail@plt+0x2c1c>
   1363c:	str	r0, [sp]
   13640:	b	1364c <__assert_fail@plt+0x2564>
   13644:	ldr	r0, [fp, #-8]
   13648:	str	r0, [sp]
   1364c:	ldr	r0, [fp, #-12]
   13650:	cmp	r0, #0
   13654:	beq	1367c <__assert_fail@plt+0x2594>
   13658:	ldr	r0, [fp, #-12]
   1365c:	cmp	r0, #8
   13660:	bge	13688 <__assert_fail@plt+0x25a0>
   13664:	ldrb	r0, [sp, #18]
   13668:	tst	r0, #1
   1366c:	bne	13688 <__assert_fail@plt+0x25a0>
   13670:	ldrb	r0, [sp, #19]
   13674:	tst	r0, #1
   13678:	beq	13688 <__assert_fail@plt+0x25a0>
   1367c:	movw	r0, #0
   13680:	str	r0, [fp, #-12]
   13684:	b	136bc <__assert_fail@plt+0x25d4>
   13688:	ldr	r0, [sp]
   1368c:	ldr	r1, [fp, #-12]
   13690:	sub	r2, fp, #16
   13694:	add	r3, sp, #20
   13698:	bl	136ec <__assert_fail@plt+0x2604>
   1369c:	tst	r0, #1
   136a0:	bne	136a8 <__assert_fail@plt+0x25c0>
   136a4:	b	136bc <__assert_fail@plt+0x25d4>
   136a8:	ldr	r0, [sp, #4]
   136ac:	ldr	r1, [fp, #-8]
   136b0:	sub	r0, r0, r1
   136b4:	str	r0, [fp, #-12]
   136b8:	b	13514 <__assert_fail@plt+0x242c>
   136bc:	ldr	r0, [sp, #20]
   136c0:	ldr	r1, [fp, #8]
   136c4:	ldr	r2, [r1]
   136c8:	sub	r0, r2, r0
   136cc:	str	r0, [r1]
   136d0:	ldr	r0, [fp, #-12]
   136d4:	cmp	r0, #0
   136d8:	movw	r0, #0
   136dc:	moveq	r0, #1
   136e0:	and	r0, r0, #1
   136e4:	mov	sp, fp
   136e8:	pop	{fp, pc}
   136ec:	push	{fp, lr}
   136f0:	mov	fp, sp
   136f4:	sub	sp, sp, #56	; 0x38
   136f8:	str	r0, [fp, #-8]
   136fc:	str	r1, [fp, #-12]
   13700:	str	r2, [fp, #-16]
   13704:	str	r3, [fp, #-20]	; 0xffffffec
   13708:	ldr	r0, [fp, #-16]
   1370c:	ldr	r0, [r0]
   13710:	str	r0, [fp, #-24]	; 0xffffffe8
   13714:	ldr	r0, [fp, #-12]
   13718:	cmp	r0, #8
   1371c:	bge	13730 <__assert_fail@plt+0x2648>
   13720:	movw	r0, #0
   13724:	and	r0, r0, #1
   13728:	strb	r0, [fp, #-1]
   1372c:	b	13cf4 <__assert_fail@plt+0x2c0c>
   13730:	ldr	r0, [fp, #-8]
   13734:	ldrb	r0, [r0]
   13738:	bl	13428 <__assert_fail@plt+0x2340>
   1373c:	tst	r0, #1
   13740:	beq	13758 <__assert_fail@plt+0x2670>
   13744:	ldr	r0, [fp, #-8]
   13748:	ldrb	r0, [r0, #1]
   1374c:	bl	13428 <__assert_fail@plt+0x2340>
   13750:	tst	r0, #1
   13754:	bne	13768 <__assert_fail@plt+0x2680>
   13758:	movw	r0, #0
   1375c:	and	r0, r0, #1
   13760:	strb	r0, [fp, #-1]
   13764:	b	13cf4 <__assert_fail@plt+0x2c0c>
   13768:	ldr	r0, [fp, #-20]	; 0xffffffec
   1376c:	ldr	r0, [r0]
   13770:	cmp	r0, #0
   13774:	beq	137f4 <__assert_fail@plt+0x270c>
   13778:	ldr	r0, [fp, #-8]
   1377c:	ldrb	r0, [r0]
   13780:	bl	12738 <__assert_fail@plt+0x1650>
   13784:	and	r0, r0, #255	; 0xff
   13788:	movw	r1, #60791	; 0xed77
   1378c:	movt	r1, #1
   13790:	add	r0, r1, r0
   13794:	ldrsb	r0, [r0]
   13798:	lsl	r0, r0, #3
   1379c:	ldr	r1, [fp, #-8]
   137a0:	ldrb	r1, [r1, #1]
   137a4:	str	r0, [sp, #28]
   137a8:	mov	r0, r1
   137ac:	bl	12738 <__assert_fail@plt+0x1650>
   137b0:	and	r0, r0, #255	; 0xff
   137b4:	movw	r1, #60791	; 0xed77
   137b8:	movt	r1, #1
   137bc:	add	r0, r1, r0
   137c0:	ldrsb	r0, [r0]
   137c4:	asr	r0, r0, #2
   137c8:	ldr	r1, [sp, #28]
   137cc:	orr	r0, r1, r0
   137d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137d4:	add	r2, r1, #1
   137d8:	str	r2, [fp, #-24]	; 0xffffffe8
   137dc:	strb	r0, [r1]
   137e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   137e4:	ldr	r1, [r0]
   137e8:	mvn	r2, #0
   137ec:	add	r1, r1, r2
   137f0:	str	r1, [r0]
   137f4:	ldr	r0, [fp, #-8]
   137f8:	ldrb	r0, [r0, #2]
   137fc:	cmp	r0, #61	; 0x3d
   13800:	bne	13878 <__assert_fail@plt+0x2790>
   13804:	ldr	r0, [fp, #-8]
   13808:	ldrb	r0, [r0, #3]
   1380c:	cmp	r0, #61	; 0x3d
   13810:	bne	13854 <__assert_fail@plt+0x276c>
   13814:	ldr	r0, [fp, #-8]
   13818:	ldrb	r0, [r0, #4]
   1381c:	cmp	r0, #61	; 0x3d
   13820:	bne	13854 <__assert_fail@plt+0x276c>
   13824:	ldr	r0, [fp, #-8]
   13828:	ldrb	r0, [r0, #5]
   1382c:	cmp	r0, #61	; 0x3d
   13830:	bne	13854 <__assert_fail@plt+0x276c>
   13834:	ldr	r0, [fp, #-8]
   13838:	ldrb	r0, [r0, #6]
   1383c:	cmp	r0, #61	; 0x3d
   13840:	bne	13854 <__assert_fail@plt+0x276c>
   13844:	ldr	r0, [fp, #-8]
   13848:	ldrb	r0, [r0, #7]
   1384c:	cmp	r0, #61	; 0x3d
   13850:	beq	13874 <__assert_fail@plt+0x278c>
   13854:	b	13858 <__assert_fail@plt+0x2770>
   13858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1385c:	ldr	r1, [fp, #-16]
   13860:	str	r0, [r1]
   13864:	movw	r0, #0
   13868:	and	r0, r0, #1
   1386c:	strb	r0, [fp, #-1]
   13870:	b	13cf4 <__assert_fail@plt+0x2c0c>
   13874:	b	13cdc <__assert_fail@plt+0x2bf4>
   13878:	ldr	r0, [fp, #-8]
   1387c:	ldrb	r0, [r0, #2]
   13880:	bl	13428 <__assert_fail@plt+0x2340>
   13884:	tst	r0, #1
   13888:	beq	138a0 <__assert_fail@plt+0x27b8>
   1388c:	ldr	r0, [fp, #-8]
   13890:	ldrb	r0, [r0, #3]
   13894:	bl	13428 <__assert_fail@plt+0x2340>
   13898:	tst	r0, #1
   1389c:	bne	138c0 <__assert_fail@plt+0x27d8>
   138a0:	b	138a4 <__assert_fail@plt+0x27bc>
   138a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138a8:	ldr	r1, [fp, #-16]
   138ac:	str	r0, [r1]
   138b0:	movw	r0, #0
   138b4:	and	r0, r0, #1
   138b8:	strb	r0, [fp, #-1]
   138bc:	b	13cf4 <__assert_fail@plt+0x2c0c>
   138c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   138c4:	ldr	r0, [r0]
   138c8:	cmp	r0, #0
   138cc:	beq	13980 <__assert_fail@plt+0x2898>
   138d0:	ldr	r0, [fp, #-8]
   138d4:	ldrb	r0, [r0, #1]
   138d8:	bl	12738 <__assert_fail@plt+0x1650>
   138dc:	and	r0, r0, #255	; 0xff
   138e0:	movw	r1, #60791	; 0xed77
   138e4:	movt	r1, #1
   138e8:	add	r0, r1, r0
   138ec:	ldrsb	r0, [r0]
   138f0:	lsl	r0, r0, #6
   138f4:	ldr	r1, [fp, #-8]
   138f8:	ldrb	r1, [r1, #2]
   138fc:	str	r0, [sp, #24]
   13900:	mov	r0, r1
   13904:	bl	12738 <__assert_fail@plt+0x1650>
   13908:	and	r0, r0, #255	; 0xff
   1390c:	movw	r1, #60791	; 0xed77
   13910:	movt	r1, #1
   13914:	add	r0, r1, r0
   13918:	ldrsb	r0, [r0]
   1391c:	lsl	r0, r0, #1
   13920:	ldr	r1, [sp, #24]
   13924:	orr	r0, r1, r0
   13928:	ldr	r1, [fp, #-8]
   1392c:	ldrb	r1, [r1, #3]
   13930:	str	r0, [sp, #20]
   13934:	mov	r0, r1
   13938:	bl	12738 <__assert_fail@plt+0x1650>
   1393c:	and	r0, r0, #255	; 0xff
   13940:	movw	r1, #60791	; 0xed77
   13944:	movt	r1, #1
   13948:	add	r0, r1, r0
   1394c:	ldrsb	r0, [r0]
   13950:	asr	r0, r0, #4
   13954:	ldr	r1, [sp, #20]
   13958:	orr	r0, r1, r0
   1395c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13960:	add	r2, r1, #1
   13964:	str	r2, [fp, #-24]	; 0xffffffe8
   13968:	strb	r0, [r1]
   1396c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13970:	ldr	r1, [r0]
   13974:	mvn	r2, #0
   13978:	add	r1, r1, r2
   1397c:	str	r1, [r0]
   13980:	ldr	r0, [fp, #-8]
   13984:	ldrb	r0, [r0, #4]
   13988:	cmp	r0, #61	; 0x3d
   1398c:	bne	139e4 <__assert_fail@plt+0x28fc>
   13990:	ldr	r0, [fp, #-8]
   13994:	ldrb	r0, [r0, #5]
   13998:	cmp	r0, #61	; 0x3d
   1399c:	bne	139c0 <__assert_fail@plt+0x28d8>
   139a0:	ldr	r0, [fp, #-8]
   139a4:	ldrb	r0, [r0, #6]
   139a8:	cmp	r0, #61	; 0x3d
   139ac:	bne	139c0 <__assert_fail@plt+0x28d8>
   139b0:	ldr	r0, [fp, #-8]
   139b4:	ldrb	r0, [r0, #7]
   139b8:	cmp	r0, #61	; 0x3d
   139bc:	beq	139e0 <__assert_fail@plt+0x28f8>
   139c0:	b	139c4 <__assert_fail@plt+0x28dc>
   139c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139c8:	ldr	r1, [fp, #-16]
   139cc:	str	r0, [r1]
   139d0:	movw	r0, #0
   139d4:	and	r0, r0, #1
   139d8:	strb	r0, [fp, #-1]
   139dc:	b	13cf4 <__assert_fail@plt+0x2c0c>
   139e0:	b	13cd8 <__assert_fail@plt+0x2bf0>
   139e4:	ldr	r0, [fp, #-8]
   139e8:	ldrb	r0, [r0, #4]
   139ec:	bl	13428 <__assert_fail@plt+0x2340>
   139f0:	tst	r0, #1
   139f4:	bne	13a18 <__assert_fail@plt+0x2930>
   139f8:	b	139fc <__assert_fail@plt+0x2914>
   139fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a00:	ldr	r1, [fp, #-16]
   13a04:	str	r0, [r1]
   13a08:	movw	r0, #0
   13a0c:	and	r0, r0, #1
   13a10:	strb	r0, [fp, #-1]
   13a14:	b	13cf4 <__assert_fail@plt+0x2c0c>
   13a18:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a1c:	ldr	r0, [r0]
   13a20:	cmp	r0, #0
   13a24:	beq	13aa4 <__assert_fail@plt+0x29bc>
   13a28:	ldr	r0, [fp, #-8]
   13a2c:	ldrb	r0, [r0, #3]
   13a30:	bl	12738 <__assert_fail@plt+0x1650>
   13a34:	and	r0, r0, #255	; 0xff
   13a38:	movw	r1, #60791	; 0xed77
   13a3c:	movt	r1, #1
   13a40:	add	r0, r1, r0
   13a44:	ldrsb	r0, [r0]
   13a48:	lsl	r0, r0, #4
   13a4c:	ldr	r1, [fp, #-8]
   13a50:	ldrb	r1, [r1, #4]
   13a54:	str	r0, [sp, #16]
   13a58:	mov	r0, r1
   13a5c:	bl	12738 <__assert_fail@plt+0x1650>
   13a60:	and	r0, r0, #255	; 0xff
   13a64:	movw	r1, #60791	; 0xed77
   13a68:	movt	r1, #1
   13a6c:	add	r0, r1, r0
   13a70:	ldrsb	r0, [r0]
   13a74:	asr	r0, r0, #1
   13a78:	ldr	r1, [sp, #16]
   13a7c:	orr	r0, r1, r0
   13a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13a84:	add	r2, r1, #1
   13a88:	str	r2, [fp, #-24]	; 0xffffffe8
   13a8c:	strb	r0, [r1]
   13a90:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a94:	ldr	r1, [r0]
   13a98:	mvn	r2, #0
   13a9c:	add	r1, r1, r2
   13aa0:	str	r1, [r0]
   13aa4:	ldr	r0, [fp, #-8]
   13aa8:	ldrb	r0, [r0, #5]
   13aac:	cmp	r0, #61	; 0x3d
   13ab0:	bne	13af8 <__assert_fail@plt+0x2a10>
   13ab4:	ldr	r0, [fp, #-8]
   13ab8:	ldrb	r0, [r0, #6]
   13abc:	cmp	r0, #61	; 0x3d
   13ac0:	bne	13ad4 <__assert_fail@plt+0x29ec>
   13ac4:	ldr	r0, [fp, #-8]
   13ac8:	ldrb	r0, [r0, #7]
   13acc:	cmp	r0, #61	; 0x3d
   13ad0:	beq	13af4 <__assert_fail@plt+0x2a0c>
   13ad4:	b	13ad8 <__assert_fail@plt+0x29f0>
   13ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13adc:	ldr	r1, [fp, #-16]
   13ae0:	str	r0, [r1]
   13ae4:	movw	r0, #0
   13ae8:	and	r0, r0, #1
   13aec:	strb	r0, [fp, #-1]
   13af0:	b	13cf4 <__assert_fail@plt+0x2c0c>
   13af4:	b	13cd4 <__assert_fail@plt+0x2bec>
   13af8:	ldr	r0, [fp, #-8]
   13afc:	ldrb	r0, [r0, #5]
   13b00:	bl	13428 <__assert_fail@plt+0x2340>
   13b04:	tst	r0, #1
   13b08:	beq	13b20 <__assert_fail@plt+0x2a38>
   13b0c:	ldr	r0, [fp, #-8]
   13b10:	ldrb	r0, [r0, #6]
   13b14:	bl	13428 <__assert_fail@plt+0x2340>
   13b18:	tst	r0, #1
   13b1c:	bne	13b40 <__assert_fail@plt+0x2a58>
   13b20:	b	13b24 <__assert_fail@plt+0x2a3c>
   13b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b28:	ldr	r1, [fp, #-16]
   13b2c:	str	r0, [r1]
   13b30:	movw	r0, #0
   13b34:	and	r0, r0, #1
   13b38:	strb	r0, [fp, #-1]
   13b3c:	b	13cf4 <__assert_fail@plt+0x2c0c>
   13b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b44:	ldr	r0, [r0]
   13b48:	cmp	r0, #0
   13b4c:	beq	13c00 <__assert_fail@plt+0x2b18>
   13b50:	ldr	r0, [fp, #-8]
   13b54:	ldrb	r0, [r0, #4]
   13b58:	bl	12738 <__assert_fail@plt+0x1650>
   13b5c:	and	r0, r0, #255	; 0xff
   13b60:	movw	r1, #60791	; 0xed77
   13b64:	movt	r1, #1
   13b68:	add	r0, r1, r0
   13b6c:	ldrsb	r0, [r0]
   13b70:	lsl	r0, r0, #7
   13b74:	ldr	r1, [fp, #-8]
   13b78:	ldrb	r1, [r1, #5]
   13b7c:	str	r0, [sp, #12]
   13b80:	mov	r0, r1
   13b84:	bl	12738 <__assert_fail@plt+0x1650>
   13b88:	and	r0, r0, #255	; 0xff
   13b8c:	movw	r1, #60791	; 0xed77
   13b90:	movt	r1, #1
   13b94:	add	r0, r1, r0
   13b98:	ldrsb	r0, [r0]
   13b9c:	lsl	r0, r0, #2
   13ba0:	ldr	r1, [sp, #12]
   13ba4:	orr	r0, r1, r0
   13ba8:	ldr	r1, [fp, #-8]
   13bac:	ldrb	r1, [r1, #6]
   13bb0:	str	r0, [sp, #8]
   13bb4:	mov	r0, r1
   13bb8:	bl	12738 <__assert_fail@plt+0x1650>
   13bbc:	and	r0, r0, #255	; 0xff
   13bc0:	movw	r1, #60791	; 0xed77
   13bc4:	movt	r1, #1
   13bc8:	add	r0, r1, r0
   13bcc:	ldrsb	r0, [r0]
   13bd0:	asr	r0, r0, #3
   13bd4:	ldr	r1, [sp, #8]
   13bd8:	orr	r0, r1, r0
   13bdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13be0:	add	r2, r1, #1
   13be4:	str	r2, [fp, #-24]	; 0xffffffe8
   13be8:	strb	r0, [r1]
   13bec:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bf0:	ldr	r1, [r0]
   13bf4:	mvn	r2, #0
   13bf8:	add	r1, r1, r2
   13bfc:	str	r1, [r0]
   13c00:	ldr	r0, [fp, #-8]
   13c04:	ldrb	r0, [r0, #7]
   13c08:	cmp	r0, #61	; 0x3d
   13c0c:	beq	13cd0 <__assert_fail@plt+0x2be8>
   13c10:	ldr	r0, [fp, #-8]
   13c14:	ldrb	r0, [r0, #7]
   13c18:	bl	13428 <__assert_fail@plt+0x2340>
   13c1c:	tst	r0, #1
   13c20:	bne	13c44 <__assert_fail@plt+0x2b5c>
   13c24:	b	13c28 <__assert_fail@plt+0x2b40>
   13c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c2c:	ldr	r1, [fp, #-16]
   13c30:	str	r0, [r1]
   13c34:	movw	r0, #0
   13c38:	and	r0, r0, #1
   13c3c:	strb	r0, [fp, #-1]
   13c40:	b	13cf4 <__assert_fail@plt+0x2c0c>
   13c44:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c48:	ldr	r0, [r0]
   13c4c:	cmp	r0, #0
   13c50:	beq	13ccc <__assert_fail@plt+0x2be4>
   13c54:	ldr	r0, [fp, #-8]
   13c58:	ldrb	r0, [r0, #6]
   13c5c:	bl	12738 <__assert_fail@plt+0x1650>
   13c60:	and	r0, r0, #255	; 0xff
   13c64:	movw	r1, #60791	; 0xed77
   13c68:	movt	r1, #1
   13c6c:	add	r0, r1, r0
   13c70:	ldrsb	r0, [r0]
   13c74:	lsl	r0, r0, #5
   13c78:	ldr	r1, [fp, #-8]
   13c7c:	ldrb	r1, [r1, #7]
   13c80:	str	r0, [sp, #4]
   13c84:	mov	r0, r1
   13c88:	bl	12738 <__assert_fail@plt+0x1650>
   13c8c:	and	r0, r0, #255	; 0xff
   13c90:	movw	r1, #60791	; 0xed77
   13c94:	movt	r1, #1
   13c98:	add	r0, r1, r0
   13c9c:	ldrsb	r0, [r0]
   13ca0:	ldr	r1, [sp, #4]
   13ca4:	orr	r0, r1, r0
   13ca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13cac:	add	r2, r1, #1
   13cb0:	str	r2, [fp, #-24]	; 0xffffffe8
   13cb4:	strb	r0, [r1]
   13cb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13cbc:	ldr	r1, [r0]
   13cc0:	mvn	r2, #0
   13cc4:	add	r1, r1, r2
   13cc8:	str	r1, [r0]
   13ccc:	b	13cd0 <__assert_fail@plt+0x2be8>
   13cd0:	b	13cd4 <__assert_fail@plt+0x2bec>
   13cd4:	b	13cd8 <__assert_fail@plt+0x2bf0>
   13cd8:	b	13cdc <__assert_fail@plt+0x2bf4>
   13cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ce0:	ldr	r1, [fp, #-16]
   13ce4:	str	r0, [r1]
   13ce8:	movw	r0, #1
   13cec:	and	r0, r0, #1
   13cf0:	strb	r0, [fp, #-1]
   13cf4:	ldrb	r0, [fp, #-1]
   13cf8:	and	r0, r0, #1
   13cfc:	mov	sp, fp
   13d00:	pop	{fp, pc}
   13d04:	push	{fp, lr}
   13d08:	mov	fp, sp
   13d0c:	sub	sp, sp, #32
   13d10:	str	r0, [fp, #-8]
   13d14:	str	r1, [fp, #-12]
   13d18:	str	r2, [sp, #16]
   13d1c:	str	r3, [sp, #12]
   13d20:	ldr	r0, [fp, #-8]
   13d24:	ldr	r0, [r0]
   13d28:	cmp	r0, #8
   13d2c:	bne	13d3c <__assert_fail@plt+0x2c54>
   13d30:	ldr	r0, [fp, #-8]
   13d34:	movw	r1, #0
   13d38:	str	r1, [r0]
   13d3c:	ldr	r0, [fp, #-8]
   13d40:	ldr	r0, [r0]
   13d44:	cmp	r0, #0
   13d48:	bne	13dbc <__assert_fail@plt+0x2cd4>
   13d4c:	ldr	r0, [fp, #-12]
   13d50:	ldr	r0, [r0]
   13d54:	str	r0, [sp, #8]
   13d58:	ldr	r0, [sp, #16]
   13d5c:	ldr	r1, [fp, #-12]
   13d60:	ldr	r1, [r1]
   13d64:	sub	r0, r0, r1
   13d68:	movw	r1, #8
   13d6c:	cmp	r1, r0
   13d70:	bgt	13db8 <__assert_fail@plt+0x2cd0>
   13d74:	ldr	r0, [sp, #8]
   13d78:	mov	r1, #10
   13d7c:	mov	r2, #8
   13d80:	bl	11040 <memchr@plt>
   13d84:	movw	r1, #0
   13d88:	cmp	r0, r1
   13d8c:	bne	13db8 <__assert_fail@plt+0x2cd0>
   13d90:	ldr	r0, [fp, #-12]
   13d94:	ldr	r1, [r0]
   13d98:	add	r1, r1, #8
   13d9c:	str	r1, [r0]
   13da0:	ldr	r0, [sp, #12]
   13da4:	movw	r1, #8
   13da8:	str	r1, [r0]
   13dac:	ldr	r0, [sp, #8]
   13db0:	str	r0, [fp, #-4]
   13db4:	b	13e60 <__assert_fail@plt+0x2d78>
   13db8:	b	13dbc <__assert_fail@plt+0x2cd4>
   13dbc:	ldr	r0, [fp, #-12]
   13dc0:	ldr	r0, [r0]
   13dc4:	str	r0, [sp, #4]
   13dc8:	ldr	r0, [sp, #4]
   13dcc:	ldr	r1, [sp, #16]
   13dd0:	cmp	r0, r1
   13dd4:	bcs	13e38 <__assert_fail@plt+0x2d50>
   13dd8:	ldr	r0, [sp, #4]
   13ddc:	add	r1, r0, #1
   13de0:	str	r1, [sp, #4]
   13de4:	ldrb	r0, [r0]
   13de8:	strb	r0, [sp, #3]
   13dec:	ldrb	r0, [sp, #3]
   13df0:	cmp	r0, #10
   13df4:	beq	13e34 <__assert_fail@plt+0x2d4c>
   13df8:	ldrb	r0, [sp, #3]
   13dfc:	ldr	r1, [fp, #-8]
   13e00:	add	r1, r1, #4
   13e04:	ldr	r2, [fp, #-8]
   13e08:	ldr	r3, [r2]
   13e0c:	add	ip, r3, #1
   13e10:	str	ip, [r2]
   13e14:	add	r1, r1, r3
   13e18:	strb	r0, [r1]
   13e1c:	ldr	r0, [fp, #-8]
   13e20:	ldr	r0, [r0]
   13e24:	cmp	r0, #8
   13e28:	bne	13e30 <__assert_fail@plt+0x2d48>
   13e2c:	b	13e38 <__assert_fail@plt+0x2d50>
   13e30:	b	13e34 <__assert_fail@plt+0x2d4c>
   13e34:	b	13dc8 <__assert_fail@plt+0x2ce0>
   13e38:	ldr	r0, [sp, #4]
   13e3c:	ldr	r1, [fp, #-12]
   13e40:	str	r0, [r1]
   13e44:	ldr	r0, [fp, #-8]
   13e48:	ldr	r0, [r0]
   13e4c:	ldr	r1, [sp, #12]
   13e50:	str	r0, [r1]
   13e54:	ldr	r0, [fp, #-8]
   13e58:	add	r0, r0, #4
   13e5c:	str	r0, [fp, #-4]
   13e60:	ldr	r0, [fp, #-4]
   13e64:	mov	sp, fp
   13e68:	pop	{fp, pc}
   13e6c:	push	{fp, lr}
   13e70:	mov	fp, sp
   13e74:	sub	sp, sp, #32
   13e78:	ldr	ip, [fp, #8]
   13e7c:	str	r0, [fp, #-8]
   13e80:	str	r1, [fp, #-12]
   13e84:	str	r2, [sp, #16]
   13e88:	str	r3, [sp, #12]
   13e8c:	ldr	r0, [sp, #16]
   13e90:	asr	r0, r0, #3
   13e94:	add	r0, r0, #1
   13e98:	movw	r1, #5
   13e9c:	mul	r0, r0, r1
   13ea0:	str	r0, [sp, #8]
   13ea4:	ldr	r0, [sp, #8]
   13ea8:	str	ip, [sp, #4]
   13eac:	bl	14484 <__assert_fail@plt+0x339c>
   13eb0:	ldr	r1, [sp, #12]
   13eb4:	str	r0, [r1]
   13eb8:	ldr	r0, [sp, #12]
   13ebc:	ldr	r0, [r0]
   13ec0:	movw	r1, #0
   13ec4:	cmp	r0, r1
   13ec8:	bne	13edc <__assert_fail@plt+0x2df4>
   13ecc:	movw	r0, #1
   13ed0:	and	r0, r0, #1
   13ed4:	strb	r0, [fp, #-1]
   13ed8:	b	13f54 <__assert_fail@plt+0x2e6c>
   13edc:	ldr	r0, [fp, #-8]
   13ee0:	ldr	r1, [fp, #-12]
   13ee4:	ldr	r2, [sp, #16]
   13ee8:	ldr	r3, [sp, #12]
   13eec:	ldr	r3, [r3]
   13ef0:	add	ip, sp, #8
   13ef4:	str	ip, [sp]
   13ef8:	bl	1348c <__assert_fail@plt+0x23a4>
   13efc:	tst	r0, #1
   13f00:	bne	13f2c <__assert_fail@plt+0x2e44>
   13f04:	ldr	r0, [sp, #12]
   13f08:	ldr	r0, [r0]
   13f0c:	bl	14320 <__assert_fail@plt+0x3238>
   13f10:	ldr	r0, [sp, #12]
   13f14:	movw	r1, #0
   13f18:	str	r1, [r0]
   13f1c:	movw	r0, #0
   13f20:	and	r0, r0, #1
   13f24:	strb	r0, [fp, #-1]
   13f28:	b	13f54 <__assert_fail@plt+0x2e6c>
   13f2c:	ldr	r0, [fp, #8]
   13f30:	movw	r1, #0
   13f34:	cmp	r0, r1
   13f38:	beq	13f48 <__assert_fail@plt+0x2e60>
   13f3c:	ldr	r0, [sp, #8]
   13f40:	ldr	r1, [fp, #8]
   13f44:	str	r0, [r1]
   13f48:	movw	r0, #1
   13f4c:	and	r0, r0, #1
   13f50:	strb	r0, [fp, #-1]
   13f54:	ldrb	r0, [fp, #-1]
   13f58:	and	r0, r0, #1
   13f5c:	mov	sp, fp
   13f60:	pop	{fp, pc}
   13f64:	sub	sp, sp, #4
   13f68:	str	r0, [sp]
   13f6c:	ldr	r0, [sp]
   13f70:	movw	r1, #352	; 0x160
   13f74:	movt	r1, #3
   13f78:	str	r0, [r1]
   13f7c:	add	sp, sp, #4
   13f80:	bx	lr
   13f84:	sub	sp, sp, #4
   13f88:	and	r0, r0, #1
   13f8c:	strb	r0, [sp, #3]
   13f90:	ldrb	r0, [sp, #3]
   13f94:	and	r0, r0, #1
   13f98:	movw	r1, #356	; 0x164
   13f9c:	movt	r1, #3
   13fa0:	strb	r0, [r1]
   13fa4:	add	sp, sp, #4
   13fa8:	bx	lr
   13fac:	push	{fp, lr}
   13fb0:	mov	fp, sp
   13fb4:	sub	sp, sp, #24
   13fb8:	movw	r0, #340	; 0x154
   13fbc:	movt	r0, #3
   13fc0:	ldr	r0, [r0]
   13fc4:	bl	1da50 <__assert_fail@plt+0xc968>
   13fc8:	cmp	r0, #0
   13fcc:	beq	1409c <__assert_fail@plt+0x2fb4>
   13fd0:	movw	r0, #356	; 0x164
   13fd4:	movt	r0, #3
   13fd8:	ldrb	r0, [r0]
   13fdc:	tst	r0, #1
   13fe0:	beq	13ff4 <__assert_fail@plt+0x2f0c>
   13fe4:	bl	11010 <__errno_location@plt>
   13fe8:	ldr	r0, [r0]
   13fec:	cmp	r0, #32
   13ff0:	beq	1409c <__assert_fail@plt+0x2fb4>
   13ff4:	movw	r0, #60540	; 0xec7c
   13ff8:	movt	r0, #1
   13ffc:	bl	10fe0 <gettext@plt>
   14000:	str	r0, [fp, #-4]
   14004:	movw	r0, #352	; 0x160
   14008:	movt	r0, #3
   1400c:	ldr	r0, [r0]
   14010:	movw	r1, #0
   14014:	cmp	r0, r1
   14018:	beq	14070 <__assert_fail@plt+0x2f88>
   1401c:	bl	11010 <__errno_location@plt>
   14020:	ldr	r1, [r0]
   14024:	movw	r0, #352	; 0x160
   14028:	movt	r0, #3
   1402c:	ldr	r0, [r0]
   14030:	str	r1, [fp, #-8]
   14034:	bl	169fc <__assert_fail@plt+0x5914>
   14038:	ldr	r1, [fp, #-4]
   1403c:	movw	r2, #0
   14040:	str	r0, [sp, #12]
   14044:	mov	r0, r2
   14048:	ldr	r2, [fp, #-8]
   1404c:	str	r1, [sp, #8]
   14050:	mov	r1, r2
   14054:	movw	r2, #59972	; 0xea44
   14058:	movt	r2, #1
   1405c:	ldr	r3, [sp, #12]
   14060:	ldr	ip, [sp, #8]
   14064:	str	ip, [sp]
   14068:	bl	10f80 <error@plt>
   1406c:	b	1408c <__assert_fail@plt+0x2fa4>
   14070:	bl	11010 <__errno_location@plt>
   14074:	ldr	r1, [r0]
   14078:	ldr	r3, [fp, #-4]
   1407c:	movw	r0, #0
   14080:	movw	r2, #59976	; 0xea48
   14084:	movt	r2, #1
   14088:	bl	10f80 <error@plt>
   1408c:	movw	r0, #244	; 0xf4
   14090:	movt	r0, #3
   14094:	ldr	r0, [r0]
   14098:	bl	10ed8 <_exit@plt>
   1409c:	movw	r0, #328	; 0x148
   140a0:	movt	r0, #3
   140a4:	ldr	r0, [r0]
   140a8:	bl	1da50 <__assert_fail@plt+0xc968>
   140ac:	cmp	r0, #0
   140b0:	beq	140c4 <__assert_fail@plt+0x2fdc>
   140b4:	movw	r0, #244	; 0xf4
   140b8:	movt	r0, #3
   140bc:	ldr	r0, [r0]
   140c0:	bl	10ed8 <_exit@plt>
   140c4:	mov	sp, fp
   140c8:	pop	{fp, pc}
   140cc:	push	{r4, r5, fp, lr}
   140d0:	add	fp, sp, #8
   140d4:	sub	sp, sp, #40	; 0x28
   140d8:	ldr	r1, [fp, #12]
   140dc:	ldr	ip, [fp, #8]
   140e0:	ldr	lr, [fp, #16]
   140e4:	str	r0, [fp, #-12]
   140e8:	str	r3, [sp, #28]
   140ec:	str	r2, [sp, #24]
   140f0:	str	r1, [sp, #20]
   140f4:	str	ip, [sp, #16]
   140f8:	ldr	r0, [fp, #-12]
   140fc:	ldr	r2, [sp, #24]
   14100:	ldr	r3, [sp, #28]
   14104:	ldr	r1, [sp, #16]
   14108:	ldr	ip, [sp, #20]
   1410c:	ldr	r4, [fp, #16]
   14110:	mov	r5, sp
   14114:	str	r4, [r5, #8]
   14118:	str	ip, [r5, #4]
   1411c:	str	r1, [r5]
   14120:	str	lr, [sp, #12]
   14124:	bl	10e9c <posix_fadvise64@plt>
   14128:	sub	sp, fp, #8
   1412c:	pop	{r4, r5, fp, pc}
   14130:	push	{fp, lr}
   14134:	mov	fp, sp
   14138:	sub	sp, sp, #24
   1413c:	str	r0, [fp, #-4]
   14140:	str	r1, [fp, #-8]
   14144:	ldr	r0, [fp, #-4]
   14148:	movw	r1, #0
   1414c:	cmp	r0, r1
   14150:	beq	14180 <__assert_fail@plt+0x3098>
   14154:	ldr	r0, [fp, #-4]
   14158:	bl	11034 <fileno@plt>
   1415c:	ldr	r1, [fp, #-8]
   14160:	mov	r2, sp
   14164:	str	r1, [r2, #8]
   14168:	mov	r1, #0
   1416c:	str	r1, [r2, #4]
   14170:	str	r1, [r2]
   14174:	mov	r2, r1
   14178:	mov	r3, r1
   1417c:	bl	140cc <__assert_fail@plt+0x2fe4>
   14180:	mov	sp, fp
   14184:	pop	{fp, pc}
   14188:	push	{fp, lr}
   1418c:	mov	fp, sp
   14190:	sub	sp, sp, #32
   14194:	str	r0, [fp, #-8]
   14198:	movw	r0, #0
   1419c:	str	r0, [fp, #-12]
   141a0:	str	r0, [sp, #12]
   141a4:	ldr	r0, [fp, #-8]
   141a8:	bl	11034 <fileno@plt>
   141ac:	str	r0, [sp, #16]
   141b0:	ldr	r0, [sp, #16]
   141b4:	cmp	r0, #0
   141b8:	bge	141cc <__assert_fail@plt+0x30e4>
   141bc:	ldr	r0, [fp, #-8]
   141c0:	bl	11058 <fclose@plt>
   141c4:	str	r0, [fp, #-4]
   141c8:	b	14268 <__assert_fail@plt+0x3180>
   141cc:	ldr	r0, [fp, #-8]
   141d0:	bl	10fa4 <__freading@plt>
   141d4:	cmp	r0, #0
   141d8:	beq	14210 <__assert_fail@plt+0x3128>
   141dc:	ldr	r0, [fp, #-8]
   141e0:	bl	11034 <fileno@plt>
   141e4:	mov	r1, sp
   141e8:	mov	r2, #1
   141ec:	str	r2, [r1]
   141f0:	mov	r1, #0
   141f4:	mov	r2, r1
   141f8:	mov	r3, r1
   141fc:	bl	10f44 <lseek64@plt>
   14200:	and	r0, r0, r1
   14204:	cmn	r0, #1
   14208:	beq	1422c <__assert_fail@plt+0x3144>
   1420c:	b	14210 <__assert_fail@plt+0x3128>
   14210:	ldr	r0, [fp, #-8]
   14214:	bl	14274 <__assert_fail@plt+0x318c>
   14218:	cmp	r0, #0
   1421c:	beq	1422c <__assert_fail@plt+0x3144>
   14220:	bl	11010 <__errno_location@plt>
   14224:	ldr	r0, [r0]
   14228:	str	r0, [fp, #-12]
   1422c:	ldr	r0, [fp, #-8]
   14230:	bl	11058 <fclose@plt>
   14234:	str	r0, [sp, #12]
   14238:	ldr	r0, [fp, #-12]
   1423c:	cmp	r0, #0
   14240:	beq	14260 <__assert_fail@plt+0x3178>
   14244:	ldr	r0, [fp, #-12]
   14248:	str	r0, [sp, #8]
   1424c:	bl	11010 <__errno_location@plt>
   14250:	ldr	r1, [sp, #8]
   14254:	str	r1, [r0]
   14258:	mvn	r0, #0
   1425c:	str	r0, [sp, #12]
   14260:	ldr	r0, [sp, #12]
   14264:	str	r0, [fp, #-4]
   14268:	ldr	r0, [fp, #-4]
   1426c:	mov	sp, fp
   14270:	pop	{fp, pc}
   14274:	push	{fp, lr}
   14278:	mov	fp, sp
   1427c:	sub	sp, sp, #8
   14280:	str	r0, [sp]
   14284:	ldr	r0, [sp]
   14288:	movw	r1, #0
   1428c:	cmp	r0, r1
   14290:	beq	142a4 <__assert_fail@plt+0x31bc>
   14294:	ldr	r0, [sp]
   14298:	bl	10fa4 <__freading@plt>
   1429c:	cmp	r0, #0
   142a0:	bne	142b4 <__assert_fail@plt+0x31cc>
   142a4:	ldr	r0, [sp]
   142a8:	bl	10eb4 <fflush@plt>
   142ac:	str	r0, [sp, #4]
   142b0:	b	142c8 <__assert_fail@plt+0x31e0>
   142b4:	ldr	r0, [sp]
   142b8:	bl	142d4 <__assert_fail@plt+0x31ec>
   142bc:	ldr	r0, [sp]
   142c0:	bl	10eb4 <fflush@plt>
   142c4:	str	r0, [sp, #4]
   142c8:	ldr	r0, [sp, #4]
   142cc:	mov	sp, fp
   142d0:	pop	{fp, pc}
   142d4:	push	{fp, lr}
   142d8:	mov	fp, sp
   142dc:	sub	sp, sp, #8
   142e0:	str	r0, [sp, #4]
   142e4:	ldr	r0, [sp, #4]
   142e8:	ldr	r0, [r0]
   142ec:	and	r0, r0, #256	; 0x100
   142f0:	cmp	r0, #0
   142f4:	beq	14318 <__assert_fail@plt+0x3230>
   142f8:	ldr	r0, [sp, #4]
   142fc:	mov	r1, sp
   14300:	mov	r2, #1
   14304:	str	r2, [r1]
   14308:	mov	r1, #0
   1430c:	mov	r2, r1
   14310:	mov	r3, r1
   14314:	bl	14360 <__assert_fail@plt+0x3278>
   14318:	mov	sp, fp
   1431c:	pop	{fp, pc}
   14320:	push	{fp, lr}
   14324:	mov	fp, sp
   14328:	sub	sp, sp, #16
   1432c:	str	r0, [fp, #-4]
   14330:	bl	11010 <__errno_location@plt>
   14334:	ldr	r0, [r0]
   14338:	str	r0, [sp, #8]
   1433c:	ldr	r0, [fp, #-4]
   14340:	bl	10ecc <free@plt>
   14344:	ldr	r0, [sp, #8]
   14348:	str	r0, [sp, #4]
   1434c:	bl	11010 <__errno_location@plt>
   14350:	ldr	r1, [sp, #4]
   14354:	str	r1, [r0]
   14358:	mov	sp, fp
   1435c:	pop	{fp, pc}
   14360:	push	{fp, lr}
   14364:	mov	fp, sp
   14368:	sub	sp, sp, #32
   1436c:	ldr	r1, [fp, #8]
   14370:	str	r0, [fp, #-8]
   14374:	str	r3, [sp, #20]
   14378:	str	r2, [sp, #16]
   1437c:	ldr	r0, [fp, #-8]
   14380:	ldr	r0, [r0, #8]
   14384:	ldr	r2, [fp, #-8]
   14388:	ldr	r2, [r2, #4]
   1438c:	cmp	r0, r2
   14390:	bne	1443c <__assert_fail@plt+0x3354>
   14394:	ldr	r0, [fp, #-8]
   14398:	ldr	r0, [r0, #20]
   1439c:	ldr	r1, [fp, #-8]
   143a0:	ldr	r1, [r1, #16]
   143a4:	cmp	r0, r1
   143a8:	bne	1443c <__assert_fail@plt+0x3354>
   143ac:	ldr	r0, [fp, #-8]
   143b0:	ldr	r0, [r0, #36]	; 0x24
   143b4:	movw	r1, #0
   143b8:	cmp	r0, r1
   143bc:	bne	1443c <__assert_fail@plt+0x3354>
   143c0:	ldr	r0, [fp, #-8]
   143c4:	bl	11034 <fileno@plt>
   143c8:	ldr	r2, [sp, #16]
   143cc:	ldr	r3, [sp, #20]
   143d0:	ldr	r1, [fp, #8]
   143d4:	mov	ip, sp
   143d8:	str	r1, [ip]
   143dc:	bl	10f44 <lseek64@plt>
   143e0:	str	r1, [sp, #12]
   143e4:	str	r0, [sp, #8]
   143e8:	ldr	r0, [sp, #8]
   143ec:	ldr	r1, [sp, #12]
   143f0:	and	r0, r0, r1
   143f4:	cmn	r0, #1
   143f8:	bne	1440c <__assert_fail@plt+0x3324>
   143fc:	b	14400 <__assert_fail@plt+0x3318>
   14400:	mvn	r0, #0
   14404:	str	r0, [fp, #-4]
   14408:	b	1445c <__assert_fail@plt+0x3374>
   1440c:	ldr	r0, [fp, #-8]
   14410:	ldr	r1, [r0]
   14414:	bic	r1, r1, #16
   14418:	str	r1, [r0]
   1441c:	ldr	r0, [sp, #8]
   14420:	ldr	r1, [sp, #12]
   14424:	ldr	r2, [fp, #-8]
   14428:	str	r1, [r2, #84]	; 0x54
   1442c:	str	r0, [r2, #80]	; 0x50
   14430:	movw	r0, #0
   14434:	str	r0, [fp, #-4]
   14438:	b	1445c <__assert_fail@plt+0x3374>
   1443c:	ldr	r0, [fp, #-8]
   14440:	ldr	r2, [sp, #16]
   14444:	ldr	r3, [sp, #20]
   14448:	ldr	r1, [fp, #8]
   1444c:	mov	ip, sp
   14450:	str	r1, [ip]
   14454:	bl	11064 <fseeko64@plt>
   14458:	str	r0, [fp, #-4]
   1445c:	ldr	r0, [fp, #-4]
   14460:	mov	sp, fp
   14464:	pop	{fp, pc}
   14468:	push	{fp, lr}
   1446c:	mov	fp, sp
   14470:	bl	11010 <__errno_location@plt>
   14474:	movw	r1, #12
   14478:	str	r1, [r0]
   1447c:	movw	r0, #0
   14480:	pop	{fp, pc}
   14484:	push	{fp, lr}
   14488:	mov	fp, sp
   1448c:	sub	sp, sp, #8
   14490:	str	r0, [sp, #4]
   14494:	ldr	r0, [sp, #4]
   14498:	cmn	r0, #1
   1449c:	bhi	144b0 <__assert_fail@plt+0x33c8>
   144a0:	ldr	r0, [sp, #4]
   144a4:	bl	1d844 <__assert_fail@plt+0xc75c>
   144a8:	str	r0, [sp]
   144ac:	b	144b8 <__assert_fail@plt+0x33d0>
   144b0:	bl	14468 <__assert_fail@plt+0x3380>
   144b4:	str	r0, [sp]
   144b8:	ldr	r0, [sp]
   144bc:	mov	sp, fp
   144c0:	pop	{fp, pc}
   144c4:	push	{fp, lr}
   144c8:	mov	fp, sp
   144cc:	sub	sp, sp, #16
   144d0:	str	r0, [fp, #-4]
   144d4:	str	r1, [sp, #8]
   144d8:	ldr	r0, [sp, #8]
   144dc:	cmn	r0, #1
   144e0:	bhi	14518 <__assert_fail@plt+0x3430>
   144e4:	ldr	r0, [fp, #-4]
   144e8:	ldr	r1, [sp, #8]
   144ec:	ldr	r2, [sp, #8]
   144f0:	cmp	r2, #0
   144f4:	movw	r2, #0
   144f8:	movne	r2, #1
   144fc:	mvn	r3, #0
   14500:	eor	r2, r2, r3
   14504:	and	r2, r2, #1
   14508:	orr	r1, r1, r2
   1450c:	bl	1d8b4 <__assert_fail@plt+0xc7cc>
   14510:	str	r0, [sp, #4]
   14514:	b	14520 <__assert_fail@plt+0x3438>
   14518:	bl	14468 <__assert_fail@plt+0x3380>
   1451c:	str	r0, [sp, #4]
   14520:	ldr	r0, [sp, #4]
   14524:	mov	sp, fp
   14528:	pop	{fp, pc}
   1452c:	push	{fp, lr}
   14530:	mov	fp, sp
   14534:	sub	sp, sp, #16
   14538:	str	r0, [sp, #8]
   1453c:	str	r1, [sp, #4]
   14540:	ldr	r0, [sp, #8]
   14544:	mvn	r1, #0
   14548:	cmp	r1, r0
   1454c:	bcs	14570 <__assert_fail@plt+0x3488>
   14550:	ldr	r0, [sp, #4]
   14554:	cmp	r0, #0
   14558:	beq	14568 <__assert_fail@plt+0x3480>
   1455c:	bl	14468 <__assert_fail@plt+0x3380>
   14560:	str	r0, [fp, #-4]
   14564:	b	145b0 <__assert_fail@plt+0x34c8>
   14568:	movw	r0, #0
   1456c:	str	r0, [sp, #8]
   14570:	ldr	r0, [sp, #4]
   14574:	mvn	r1, #0
   14578:	cmp	r1, r0
   1457c:	bcs	145a0 <__assert_fail@plt+0x34b8>
   14580:	ldr	r0, [sp, #8]
   14584:	cmp	r0, #0
   14588:	beq	14598 <__assert_fail@plt+0x34b0>
   1458c:	bl	14468 <__assert_fail@plt+0x3380>
   14590:	str	r0, [fp, #-4]
   14594:	b	145b0 <__assert_fail@plt+0x34c8>
   14598:	movw	r0, #0
   1459c:	str	r0, [sp, #4]
   145a0:	ldr	r0, [sp, #8]
   145a4:	ldr	r1, [sp, #4]
   145a8:	bl	1d7a8 <__assert_fail@plt+0xc6c0>
   145ac:	str	r0, [fp, #-4]
   145b0:	ldr	r0, [fp, #-4]
   145b4:	mov	sp, fp
   145b8:	pop	{fp, pc}
   145bc:	push	{fp, lr}
   145c0:	mov	fp, sp
   145c4:	sub	sp, sp, #16
   145c8:	str	r0, [fp, #-4]
   145cc:	str	r1, [sp, #8]
   145d0:	str	r2, [sp, #4]
   145d4:	ldr	r0, [sp, #8]
   145d8:	cmp	r0, #0
   145dc:	beq	145ec <__assert_fail@plt+0x3504>
   145e0:	ldr	r0, [sp, #4]
   145e4:	cmp	r0, #0
   145e8:	bne	145f8 <__assert_fail@plt+0x3510>
   145ec:	movw	r0, #1
   145f0:	str	r0, [sp, #4]
   145f4:	str	r0, [sp, #8]
   145f8:	ldr	r0, [sp, #8]
   145fc:	cmn	r0, #1
   14600:	bhi	14628 <__assert_fail@plt+0x3540>
   14604:	ldr	r0, [sp, #4]
   14608:	cmn	r0, #1
   1460c:	bhi	14628 <__assert_fail@plt+0x3540>
   14610:	ldr	r0, [fp, #-4]
   14614:	ldr	r1, [sp, #8]
   14618:	ldr	r2, [sp, #4]
   1461c:	bl	16dd0 <__assert_fail@plt+0x5ce8>
   14620:	str	r0, [sp]
   14624:	b	14630 <__assert_fail@plt+0x3548>
   14628:	bl	14468 <__assert_fail@plt+0x3380>
   1462c:	str	r0, [sp]
   14630:	ldr	r0, [sp]
   14634:	mov	sp, fp
   14638:	pop	{fp, pc}
   1463c:	push	{fp, lr}
   14640:	mov	fp, sp
   14644:	sub	sp, sp, #24
   14648:	str	r0, [fp, #-4]
   1464c:	ldr	r0, [fp, #-4]
   14650:	movw	r1, #0
   14654:	cmp	r0, r1
   14658:	bne	1467c <__assert_fail@plt+0x3594>
   1465c:	movw	r0, #328	; 0x148
   14660:	movt	r0, #3
   14664:	ldr	r1, [r0]
   14668:	movw	r0, #61047	; 0xee77
   1466c:	movt	r0, #1
   14670:	bl	110b8 <fputs@plt>
   14674:	str	r0, [sp, #8]
   14678:	bl	110d0 <abort@plt>
   1467c:	ldr	r0, [fp, #-4]
   14680:	movw	r1, #47	; 0x2f
   14684:	bl	1107c <strrchr@plt>
   14688:	str	r0, [fp, #-8]
   1468c:	ldr	r0, [fp, #-8]
   14690:	movw	r1, #0
   14694:	cmp	r0, r1
   14698:	beq	146ac <__assert_fail@plt+0x35c4>
   1469c:	ldr	r0, [fp, #-8]
   146a0:	add	r0, r0, #1
   146a4:	str	r0, [sp, #4]
   146a8:	b	146b4 <__assert_fail@plt+0x35cc>
   146ac:	ldr	r0, [fp, #-4]
   146b0:	str	r0, [sp, #4]
   146b4:	ldr	r0, [sp, #4]
   146b8:	str	r0, [sp, #12]
   146bc:	ldr	r0, [sp, #12]
   146c0:	ldr	r1, [fp, #-4]
   146c4:	sub	r0, r0, r1
   146c8:	cmp	r0, #7
   146cc:	blt	14738 <__assert_fail@plt+0x3650>
   146d0:	ldr	r0, [sp, #12]
   146d4:	mvn	r1, #6
   146d8:	add	r0, r0, r1
   146dc:	movw	r1, #61103	; 0xeeaf
   146e0:	movt	r1, #1
   146e4:	movw	r2, #7
   146e8:	bl	110c4 <strncmp@plt>
   146ec:	cmp	r0, #0
   146f0:	bne	14738 <__assert_fail@plt+0x3650>
   146f4:	ldr	r0, [sp, #12]
   146f8:	str	r0, [fp, #-4]
   146fc:	ldr	r0, [sp, #12]
   14700:	movw	r1, #61111	; 0xeeb7
   14704:	movt	r1, #1
   14708:	movw	r2, #3
   1470c:	bl	110c4 <strncmp@plt>
   14710:	cmp	r0, #0
   14714:	bne	14734 <__assert_fail@plt+0x364c>
   14718:	ldr	r0, [sp, #12]
   1471c:	add	r0, r0, #3
   14720:	str	r0, [fp, #-4]
   14724:	ldr	r0, [fp, #-4]
   14728:	movw	r1, #312	; 0x138
   1472c:	movt	r1, #3
   14730:	str	r0, [r1]
   14734:	b	14738 <__assert_fail@plt+0x3650>
   14738:	ldr	r0, [fp, #-4]
   1473c:	movw	r1, #360	; 0x168
   14740:	movt	r1, #3
   14744:	str	r0, [r1]
   14748:	ldr	r0, [fp, #-4]
   1474c:	movw	r1, #316	; 0x13c
   14750:	movt	r1, #3
   14754:	str	r0, [r1]
   14758:	mov	sp, fp
   1475c:	pop	{fp, pc}
   14760:	push	{fp, lr}
   14764:	mov	fp, sp
   14768:	sub	sp, sp, #24
   1476c:	str	r0, [fp, #-4]
   14770:	bl	11010 <__errno_location@plt>
   14774:	ldr	r0, [r0]
   14778:	str	r0, [fp, #-8]
   1477c:	ldr	r0, [fp, #-4]
   14780:	movw	r1, #0
   14784:	cmp	r0, r1
   14788:	beq	14798 <__assert_fail@plt+0x36b0>
   1478c:	ldr	r0, [fp, #-4]
   14790:	str	r0, [sp, #8]
   14794:	b	147a8 <__assert_fail@plt+0x36c0>
   14798:	movw	r0, #364	; 0x16c
   1479c:	movt	r0, #3
   147a0:	str	r0, [sp, #8]
   147a4:	b	147a8 <__assert_fail@plt+0x36c0>
   147a8:	ldr	r0, [sp, #8]
   147ac:	movw	r1, #48	; 0x30
   147b0:	bl	1b614 <__assert_fail@plt+0xa52c>
   147b4:	str	r0, [sp, #12]
   147b8:	ldr	r0, [fp, #-8]
   147bc:	str	r0, [sp, #4]
   147c0:	bl	11010 <__errno_location@plt>
   147c4:	ldr	r1, [sp, #4]
   147c8:	str	r1, [r0]
   147cc:	ldr	r0, [sp, #12]
   147d0:	mov	sp, fp
   147d4:	pop	{fp, pc}
   147d8:	sub	sp, sp, #8
   147dc:	str	r0, [sp, #4]
   147e0:	ldr	r0, [sp, #4]
   147e4:	movw	r1, #0
   147e8:	cmp	r0, r1
   147ec:	beq	147fc <__assert_fail@plt+0x3714>
   147f0:	ldr	r0, [sp, #4]
   147f4:	str	r0, [sp]
   147f8:	b	1480c <__assert_fail@plt+0x3724>
   147fc:	movw	r0, #364	; 0x16c
   14800:	movt	r0, #3
   14804:	str	r0, [sp]
   14808:	b	1480c <__assert_fail@plt+0x3724>
   1480c:	ldr	r0, [sp]
   14810:	ldr	r0, [r0]
   14814:	add	sp, sp, #8
   14818:	bx	lr
   1481c:	sub	sp, sp, #16
   14820:	str	r0, [sp, #12]
   14824:	str	r1, [sp, #8]
   14828:	ldr	r0, [sp, #8]
   1482c:	ldr	r1, [sp, #12]
   14830:	movw	r2, #0
   14834:	cmp	r1, r2
   14838:	str	r0, [sp, #4]
   1483c:	beq	1484c <__assert_fail@plt+0x3764>
   14840:	ldr	r0, [sp, #12]
   14844:	str	r0, [sp]
   14848:	b	1485c <__assert_fail@plt+0x3774>
   1484c:	movw	r0, #364	; 0x16c
   14850:	movt	r0, #3
   14854:	str	r0, [sp]
   14858:	b	1485c <__assert_fail@plt+0x3774>
   1485c:	ldr	r0, [sp]
   14860:	ldr	r1, [sp, #4]
   14864:	str	r1, [r0]
   14868:	add	sp, sp, #16
   1486c:	bx	lr
   14870:	sub	sp, sp, #32
   14874:	str	r0, [sp, #28]
   14878:	strb	r1, [sp, #27]
   1487c:	str	r2, [sp, #20]
   14880:	ldrb	r0, [sp, #27]
   14884:	strb	r0, [sp, #19]
   14888:	ldr	r0, [sp, #28]
   1488c:	movw	r1, #0
   14890:	cmp	r0, r1
   14894:	beq	148a4 <__assert_fail@plt+0x37bc>
   14898:	ldr	r0, [sp, #28]
   1489c:	str	r0, [sp]
   148a0:	b	148b4 <__assert_fail@plt+0x37cc>
   148a4:	movw	r0, #364	; 0x16c
   148a8:	movt	r0, #3
   148ac:	str	r0, [sp]
   148b0:	b	148b4 <__assert_fail@plt+0x37cc>
   148b4:	ldr	r0, [sp]
   148b8:	add	r0, r0, #8
   148bc:	ldrb	r1, [sp, #19]
   148c0:	lsr	r1, r1, #5
   148c4:	add	r0, r0, r1, lsl #2
   148c8:	str	r0, [sp, #12]
   148cc:	ldrb	r0, [sp, #19]
   148d0:	and	r0, r0, #31
   148d4:	str	r0, [sp, #8]
   148d8:	ldr	r0, [sp, #12]
   148dc:	ldr	r0, [r0]
   148e0:	ldr	r1, [sp, #8]
   148e4:	lsr	r0, r0, r1
   148e8:	and	r0, r0, #1
   148ec:	str	r0, [sp, #4]
   148f0:	ldr	r0, [sp, #20]
   148f4:	and	r0, r0, #1
   148f8:	ldr	r1, [sp, #4]
   148fc:	eor	r0, r0, r1
   14900:	ldr	r1, [sp, #8]
   14904:	lsl	r0, r0, r1
   14908:	ldr	r1, [sp, #12]
   1490c:	ldr	r2, [r1]
   14910:	eor	r0, r2, r0
   14914:	str	r0, [r1]
   14918:	ldr	r0, [sp, #4]
   1491c:	add	sp, sp, #32
   14920:	bx	lr
   14924:	sub	sp, sp, #12
   14928:	str	r0, [sp, #8]
   1492c:	str	r1, [sp, #4]
   14930:	ldr	r0, [sp, #8]
   14934:	movw	r1, #0
   14938:	cmp	r0, r1
   1493c:	bne	1494c <__assert_fail@plt+0x3864>
   14940:	movw	r0, #364	; 0x16c
   14944:	movt	r0, #3
   14948:	str	r0, [sp, #8]
   1494c:	ldr	r0, [sp, #8]
   14950:	ldr	r0, [r0, #4]
   14954:	str	r0, [sp]
   14958:	ldr	r0, [sp, #4]
   1495c:	ldr	r1, [sp, #8]
   14960:	str	r0, [r1, #4]
   14964:	ldr	r0, [sp]
   14968:	add	sp, sp, #12
   1496c:	bx	lr
   14970:	push	{fp, lr}
   14974:	mov	fp, sp
   14978:	sub	sp, sp, #16
   1497c:	str	r0, [fp, #-4]
   14980:	str	r1, [sp, #8]
   14984:	str	r2, [sp, #4]
   14988:	ldr	r0, [fp, #-4]
   1498c:	movw	r1, #0
   14990:	cmp	r0, r1
   14994:	bne	149a4 <__assert_fail@plt+0x38bc>
   14998:	movw	r0, #364	; 0x16c
   1499c:	movt	r0, #3
   149a0:	str	r0, [fp, #-4]
   149a4:	ldr	r0, [fp, #-4]
   149a8:	movw	r1, #10
   149ac:	str	r1, [r0]
   149b0:	ldr	r0, [sp, #8]
   149b4:	movw	r1, #0
   149b8:	cmp	r0, r1
   149bc:	beq	149d0 <__assert_fail@plt+0x38e8>
   149c0:	ldr	r0, [sp, #4]
   149c4:	movw	r1, #0
   149c8:	cmp	r0, r1
   149cc:	bne	149d4 <__assert_fail@plt+0x38ec>
   149d0:	bl	110d0 <abort@plt>
   149d4:	ldr	r0, [sp, #8]
   149d8:	ldr	r1, [fp, #-4]
   149dc:	str	r0, [r1, #40]	; 0x28
   149e0:	ldr	r0, [sp, #4]
   149e4:	ldr	r1, [fp, #-4]
   149e8:	str	r0, [r1, #44]	; 0x2c
   149ec:	mov	sp, fp
   149f0:	pop	{fp, pc}
   149f4:	push	{r4, r5, r6, sl, fp, lr}
   149f8:	add	fp, sp, #16
   149fc:	sub	sp, sp, #56	; 0x38
   14a00:	ldr	ip, [fp, #8]
   14a04:	str	r0, [fp, #-20]	; 0xffffffec
   14a08:	str	r1, [fp, #-24]	; 0xffffffe8
   14a0c:	str	r2, [fp, #-28]	; 0xffffffe4
   14a10:	str	r3, [fp, #-32]	; 0xffffffe0
   14a14:	ldr	r0, [fp, #8]
   14a18:	movw	r1, #0
   14a1c:	cmp	r0, r1
   14a20:	beq	14a30 <__assert_fail@plt+0x3948>
   14a24:	ldr	r0, [fp, #8]
   14a28:	str	r0, [sp, #24]
   14a2c:	b	14a40 <__assert_fail@plt+0x3958>
   14a30:	movw	r0, #364	; 0x16c
   14a34:	movt	r0, #3
   14a38:	str	r0, [sp, #24]
   14a3c:	b	14a40 <__assert_fail@plt+0x3958>
   14a40:	ldr	r0, [sp, #24]
   14a44:	str	r0, [sp, #36]	; 0x24
   14a48:	bl	11010 <__errno_location@plt>
   14a4c:	ldr	r0, [r0]
   14a50:	str	r0, [sp, #32]
   14a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14a5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14a60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14a64:	ldr	ip, [sp, #36]	; 0x24
   14a68:	ldr	ip, [ip]
   14a6c:	ldr	lr, [sp, #36]	; 0x24
   14a70:	ldr	lr, [lr, #4]
   14a74:	ldr	r4, [sp, #36]	; 0x24
   14a78:	add	r4, r4, #8
   14a7c:	ldr	r5, [sp, #36]	; 0x24
   14a80:	ldr	r5, [r5, #40]	; 0x28
   14a84:	ldr	r6, [sp, #36]	; 0x24
   14a88:	ldr	r6, [r6, #44]	; 0x2c
   14a8c:	str	ip, [sp]
   14a90:	str	lr, [sp, #4]
   14a94:	str	r4, [sp, #8]
   14a98:	str	r5, [sp, #12]
   14a9c:	str	r6, [sp, #16]
   14aa0:	bl	14ac8 <__assert_fail@plt+0x39e0>
   14aa4:	str	r0, [sp, #28]
   14aa8:	ldr	r0, [sp, #32]
   14aac:	str	r0, [sp, #20]
   14ab0:	bl	11010 <__errno_location@plt>
   14ab4:	ldr	r1, [sp, #20]
   14ab8:	str	r1, [r0]
   14abc:	ldr	r0, [sp, #28]
   14ac0:	sub	sp, fp, #16
   14ac4:	pop	{r4, r5, r6, sl, fp, pc}
   14ac8:	push	{r4, r5, r6, sl, fp, lr}
   14acc:	add	fp, sp, #16
   14ad0:	sub	sp, sp, #160	; 0xa0
   14ad4:	ldr	ip, [fp, #24]
   14ad8:	ldr	lr, [fp, #20]
   14adc:	ldr	r4, [fp, #16]
   14ae0:	ldr	r5, [fp, #12]
   14ae4:	ldr	r6, [fp, #8]
   14ae8:	str	r0, [fp, #-24]	; 0xffffffe8
   14aec:	str	r1, [fp, #-28]	; 0xffffffe4
   14af0:	str	r2, [fp, #-32]	; 0xffffffe0
   14af4:	str	r3, [fp, #-36]	; 0xffffffdc
   14af8:	movw	r0, #0
   14afc:	str	r0, [fp, #-44]	; 0xffffffd4
   14b00:	str	r0, [fp, #-48]	; 0xffffffd0
   14b04:	str	r0, [fp, #-52]	; 0xffffffcc
   14b08:	str	r0, [fp, #-56]	; 0xffffffc8
   14b0c:	movw	r0, #0
   14b10:	strb	r0, [fp, #-57]	; 0xffffffc7
   14b14:	str	ip, [sp, #72]	; 0x48
   14b18:	str	lr, [sp, #68]	; 0x44
   14b1c:	str	r4, [sp, #64]	; 0x40
   14b20:	str	r5, [sp, #60]	; 0x3c
   14b24:	str	r6, [sp, #56]	; 0x38
   14b28:	bl	10f50 <__ctype_get_mb_cur_max@plt>
   14b2c:	cmp	r0, #1
   14b30:	movw	r0, #0
   14b34:	moveq	r0, #1
   14b38:	and	r0, r0, #1
   14b3c:	strb	r0, [fp, #-58]	; 0xffffffc6
   14b40:	ldr	r0, [fp, #12]
   14b44:	and	r0, r0, #2
   14b48:	cmp	r0, #0
   14b4c:	movw	r0, #0
   14b50:	movne	r0, #1
   14b54:	and	r0, r0, #1
   14b58:	strb	r0, [fp, #-59]	; 0xffffffc5
   14b5c:	movw	r0, #0
   14b60:	strb	r0, [fp, #-60]	; 0xffffffc4
   14b64:	strb	r0, [fp, #-61]	; 0xffffffc3
   14b68:	movw	r0, #1
   14b6c:	strb	r0, [fp, #-62]	; 0xffffffc2
   14b70:	ldr	r0, [fp, #8]
   14b74:	cmp	r0, #10
   14b78:	str	r0, [sp, #52]	; 0x34
   14b7c:	bhi	14da4 <__assert_fail@plt+0x3cbc>
   14b80:	add	r0, pc, #8
   14b84:	ldr	r1, [sp, #52]	; 0x34
   14b88:	ldr	r0, [r0, r1, lsl #2]
   14b8c:	mov	pc, r0
   14b90:	muleq	r1, r8, sp
   14b94:	andeq	r4, r1, r4, lsl sp
   14b98:	andeq	r4, r1, r4, lsr sp
   14b9c:	andeq	r4, r1, ip, lsl #26
   14ba0:	andeq	r4, r1, ip, lsl sp
   14ba4:	andeq	r4, r1, ip, asr #23
   14ba8:			; <UNDEFINED> instruction: 0x00014bbc
   14bac:	andeq	r4, r1, r0, lsr ip
   14bb0:	andeq	r4, r1, r4, asr #24
   14bb4:	andeq	r4, r1, r4, asr #24
   14bb8:	andeq	r4, r1, r4, asr #24
   14bbc:	movw	r0, #5
   14bc0:	str	r0, [fp, #8]
   14bc4:	movw	r0, #1
   14bc8:	strb	r0, [fp, #-59]	; 0xffffffc5
   14bcc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14bd0:	tst	r0, #1
   14bd4:	bne	14c10 <__assert_fail@plt+0x3b28>
   14bd8:	b	14bdc <__assert_fail@plt+0x3af4>
   14bdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14be0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14be4:	cmp	r0, r1
   14be8:	bcs	14c00 <__assert_fail@plt+0x3b18>
   14bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bf0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14bf4:	add	r0, r0, r1
   14bf8:	movw	r1, #34	; 0x22
   14bfc:	strb	r1, [r0]
   14c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c04:	add	r0, r0, #1
   14c08:	str	r0, [fp, #-44]	; 0xffffffd4
   14c0c:	b	14c10 <__assert_fail@plt+0x3b28>
   14c10:	movw	r0, #1
   14c14:	strb	r0, [fp, #-57]	; 0xffffffc7
   14c18:	movw	r0, #61191	; 0xef07
   14c1c:	movt	r0, #1
   14c20:	str	r0, [fp, #-52]	; 0xffffffcc
   14c24:	movw	r0, #1
   14c28:	str	r0, [fp, #-56]	; 0xffffffc8
   14c2c:	b	14da8 <__assert_fail@plt+0x3cc0>
   14c30:	movw	r0, #1
   14c34:	strb	r0, [fp, #-57]	; 0xffffffc7
   14c38:	movw	r0, #0
   14c3c:	strb	r0, [fp, #-59]	; 0xffffffc5
   14c40:	b	14da8 <__assert_fail@plt+0x3cc0>
   14c44:	ldr	r0, [fp, #8]
   14c48:	cmp	r0, #10
   14c4c:	beq	14c78 <__assert_fail@plt+0x3b90>
   14c50:	ldr	r1, [fp, #8]
   14c54:	movw	r0, #61193	; 0xef09
   14c58:	movt	r0, #1
   14c5c:	bl	16cbc <__assert_fail@plt+0x5bd4>
   14c60:	str	r0, [fp, #20]
   14c64:	ldr	r1, [fp, #8]
   14c68:	movw	r0, #61195	; 0xef0b
   14c6c:	movt	r0, #1
   14c70:	bl	16cbc <__assert_fail@plt+0x5bd4>
   14c74:	str	r0, [fp, #24]
   14c78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c7c:	tst	r0, #1
   14c80:	bne	14cec <__assert_fail@plt+0x3c04>
   14c84:	ldr	r0, [fp, #20]
   14c88:	str	r0, [fp, #-52]	; 0xffffffcc
   14c8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c90:	ldrsb	r0, [r0]
   14c94:	cmp	r0, #0
   14c98:	beq	14ce8 <__assert_fail@plt+0x3c00>
   14c9c:	b	14ca0 <__assert_fail@plt+0x3bb8>
   14ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ca8:	cmp	r0, r1
   14cac:	bcs	14cc8 <__assert_fail@plt+0x3be0>
   14cb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14cb4:	ldrb	r0, [r0]
   14cb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14cbc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14cc0:	add	r1, r1, r2
   14cc4:	strb	r0, [r1]
   14cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ccc:	add	r0, r0, #1
   14cd0:	str	r0, [fp, #-44]	; 0xffffffd4
   14cd4:	b	14cd8 <__assert_fail@plt+0x3bf0>
   14cd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14cdc:	add	r0, r0, #1
   14ce0:	str	r0, [fp, #-52]	; 0xffffffcc
   14ce4:	b	14c8c <__assert_fail@plt+0x3ba4>
   14ce8:	b	14cec <__assert_fail@plt+0x3c04>
   14cec:	movw	r0, #1
   14cf0:	strb	r0, [fp, #-57]	; 0xffffffc7
   14cf4:	ldr	r0, [fp, #24]
   14cf8:	str	r0, [fp, #-52]	; 0xffffffcc
   14cfc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14d00:	bl	10fec <strlen@plt>
   14d04:	str	r0, [fp, #-56]	; 0xffffffc8
   14d08:	b	14da8 <__assert_fail@plt+0x3cc0>
   14d0c:	movw	r0, #1
   14d10:	strb	r0, [fp, #-57]	; 0xffffffc7
   14d14:	movw	r0, #1
   14d18:	strb	r0, [fp, #-59]	; 0xffffffc5
   14d1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d20:	tst	r0, #1
   14d24:	bne	14d30 <__assert_fail@plt+0x3c48>
   14d28:	movw	r0, #1
   14d2c:	strb	r0, [fp, #-57]	; 0xffffffc7
   14d30:	b	14d34 <__assert_fail@plt+0x3c4c>
   14d34:	movw	r0, #2
   14d38:	str	r0, [fp, #8]
   14d3c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d40:	tst	r0, #1
   14d44:	bne	14d80 <__assert_fail@plt+0x3c98>
   14d48:	b	14d4c <__assert_fail@plt+0x3c64>
   14d4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d54:	cmp	r0, r1
   14d58:	bcs	14d70 <__assert_fail@plt+0x3c88>
   14d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d64:	add	r0, r0, r1
   14d68:	movw	r1, #39	; 0x27
   14d6c:	strb	r1, [r0]
   14d70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d74:	add	r0, r0, #1
   14d78:	str	r0, [fp, #-44]	; 0xffffffd4
   14d7c:	b	14d80 <__assert_fail@plt+0x3c98>
   14d80:	movw	r0, #61195	; 0xef0b
   14d84:	movt	r0, #1
   14d88:	str	r0, [fp, #-52]	; 0xffffffcc
   14d8c:	movw	r0, #1
   14d90:	str	r0, [fp, #-56]	; 0xffffffc8
   14d94:	b	14da8 <__assert_fail@plt+0x3cc0>
   14d98:	movw	r0, #0
   14d9c:	strb	r0, [fp, #-59]	; 0xffffffc5
   14da0:	b	14da8 <__assert_fail@plt+0x3cc0>
   14da4:	bl	110d0 <abort@plt>
   14da8:	movw	r0, #0
   14dac:	str	r0, [fp, #-40]	; 0xffffffd8
   14db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14db4:	cmn	r0, #1
   14db8:	bne	14de4 <__assert_fail@plt+0x3cfc>
   14dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14dc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14dc4:	add	r0, r0, r1
   14dc8:	ldrb	r0, [r0]
   14dcc:	cmp	r0, #0
   14dd0:	movw	r0, #0
   14dd4:	moveq	r0, #1
   14dd8:	and	r0, r0, #1
   14ddc:	str	r0, [sp, #48]	; 0x30
   14de0:	b	14e00 <__assert_fail@plt+0x3d18>
   14de4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14de8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14dec:	cmp	r0, r1
   14df0:	movw	r0, #0
   14df4:	moveq	r0, #1
   14df8:	and	r0, r0, #1
   14dfc:	str	r0, [sp, #48]	; 0x30
   14e00:	ldr	r0, [sp, #48]	; 0x30
   14e04:	cmp	r0, #0
   14e08:	movw	r0, #0
   14e0c:	movne	r0, #1
   14e10:	mvn	r1, #0
   14e14:	eor	r0, r0, r1
   14e18:	tst	r0, #1
   14e1c:	beq	16008 <__assert_fail@plt+0x4f20>
   14e20:	movw	r0, #0
   14e24:	strb	r0, [fp, #-65]	; 0xffffffbf
   14e28:	strb	r0, [fp, #-66]	; 0xffffffbe
   14e2c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14e30:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14e34:	tst	r0, #1
   14e38:	beq	14ee4 <__assert_fail@plt+0x3dfc>
   14e3c:	ldr	r0, [fp, #8]
   14e40:	cmp	r0, #2
   14e44:	beq	14ee4 <__assert_fail@plt+0x3dfc>
   14e48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14e4c:	cmp	r0, #0
   14e50:	beq	14ee4 <__assert_fail@plt+0x3dfc>
   14e54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14e58:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14e5c:	add	r0, r0, r1
   14e60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14e64:	cmn	r1, #1
   14e68:	str	r0, [sp, #44]	; 0x2c
   14e6c:	bne	14e94 <__assert_fail@plt+0x3dac>
   14e70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14e74:	movw	r1, #1
   14e78:	cmp	r1, r0
   14e7c:	bcs	14e94 <__assert_fail@plt+0x3dac>
   14e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e84:	bl	10fec <strlen@plt>
   14e88:	str	r0, [fp, #-36]	; 0xffffffdc
   14e8c:	str	r0, [sp, #40]	; 0x28
   14e90:	b	14e9c <__assert_fail@plt+0x3db4>
   14e94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e98:	str	r0, [sp, #40]	; 0x28
   14e9c:	ldr	r0, [sp, #40]	; 0x28
   14ea0:	ldr	r1, [sp, #44]	; 0x2c
   14ea4:	cmp	r1, r0
   14ea8:	bhi	14ee4 <__assert_fail@plt+0x3dfc>
   14eac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14eb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14eb4:	add	r0, r0, r1
   14eb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14ebc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14ec0:	bl	10f08 <memcmp@plt>
   14ec4:	cmp	r0, #0
   14ec8:	bne	14ee4 <__assert_fail@plt+0x3dfc>
   14ecc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ed0:	tst	r0, #1
   14ed4:	beq	14edc <__assert_fail@plt+0x3df4>
   14ed8:	b	16188 <__assert_fail@plt+0x50a0>
   14edc:	movw	r0, #1
   14ee0:	strb	r0, [fp, #-65]	; 0xffffffbf
   14ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14ee8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14eec:	ldrb	r0, [r0, r1]
   14ef0:	strb	r0, [fp, #-63]	; 0xffffffc1
   14ef4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14ef8:	mov	r1, r0
   14efc:	cmp	r0, #126	; 0x7e
   14f00:	str	r1, [sp, #36]	; 0x24
   14f04:	bhi	15774 <__assert_fail@plt+0x468c>
   14f08:	add	r0, pc, #8
   14f0c:	ldr	r1, [sp, #36]	; 0x24
   14f10:	ldr	r0, [r0, r1, lsl #2]
   14f14:	mov	pc, r0
   14f18:	andeq	r5, r1, r4, lsl r1
   14f1c:	andeq	r5, r1, r4, ror r7
   14f20:	andeq	r5, r1, r4, ror r7
   14f24:	andeq	r5, r1, r4, ror r7
   14f28:	andeq	r5, r1, r4, ror r7
   14f2c:	andeq	r5, r1, r4, ror r7
   14f30:	andeq	r5, r1, r4, ror r7
   14f34:	andeq	r5, r1, ip, lsl r5
   14f38:	andeq	r5, r1, r8, lsr #10
   14f3c:	andeq	r5, r1, r8, asr r5
   14f40:	andeq	r5, r1, r0, asr #10
   14f44:	andeq	r5, r1, r4, ror #10
   14f48:	andeq	r5, r1, r4, lsr r5
   14f4c:	andeq	r5, r1, ip, asr #10
   14f50:	andeq	r5, r1, r4, ror r7
   14f54:	andeq	r5, r1, r4, ror r7
   14f58:	andeq	r5, r1, r4, ror r7
   14f5c:	andeq	r5, r1, r4, ror r7
   14f60:	andeq	r5, r1, r4, ror r7
   14f64:	andeq	r5, r1, r4, ror r7
   14f68:	andeq	r5, r1, r4, ror r7
   14f6c:	andeq	r5, r1, r4, ror r7
   14f70:	andeq	r5, r1, r4, ror r7
   14f74:	andeq	r5, r1, r4, ror r7
   14f78:	andeq	r5, r1, r4, ror r7
   14f7c:	andeq	r5, r1, r4, ror r7
   14f80:	andeq	r5, r1, r4, ror r7
   14f84:	andeq	r5, r1, r4, ror r7
   14f88:	andeq	r5, r1, r4, ror r7
   14f8c:	andeq	r5, r1, r4, ror r7
   14f90:	andeq	r5, r1, r4, ror r7
   14f94:	andeq	r5, r1, r4, ror r7
   14f98:	andeq	r5, r1, r8, asr #12
   14f9c:	andeq	r5, r1, r0, asr r6
   14fa0:	andeq	r5, r1, r0, asr r6
   14fa4:	andeq	r5, r1, r4, lsr r6
   14fa8:	andeq	r5, r1, r0, asr r6
   14fac:	andeq	r5, r1, r8, ror #14
   14fb0:	andeq	r5, r1, r0, asr r6
   14fb4:	andeq	r5, r1, r0, ror r6
   14fb8:	andeq	r5, r1, r0, asr r6
   14fbc:	andeq	r5, r1, r0, asr r6
   14fc0:	andeq	r5, r1, r0, asr r6
   14fc4:	andeq	r5, r1, r8, ror #14
   14fc8:	andeq	r5, r1, r8, ror #14
   14fcc:	andeq	r5, r1, r8, ror #14
   14fd0:	andeq	r5, r1, r8, ror #14
   14fd4:	andeq	r5, r1, r8, ror #14
   14fd8:	andeq	r5, r1, r8, ror #14
   14fdc:	andeq	r5, r1, r8, ror #14
   14fe0:	andeq	r5, r1, r8, ror #14
   14fe4:	andeq	r5, r1, r8, ror #14
   14fe8:	andeq	r5, r1, r8, ror #14
   14fec:	andeq	r5, r1, r8, ror #14
   14ff0:	andeq	r5, r1, r8, ror #14
   14ff4:	andeq	r5, r1, r8, ror #14
   14ff8:	andeq	r5, r1, r8, ror #14
   14ffc:	andeq	r5, r1, r8, ror #14
   15000:	andeq	r5, r1, r8, ror #14
   15004:	andeq	r5, r1, r0, asr r6
   15008:	andeq	r5, r1, r0, asr r6
   1500c:	andeq	r5, r1, r0, asr r6
   15010:	andeq	r5, r1, r0, asr r6
   15014:	andeq	r5, r1, r0, lsr #6
   15018:	andeq	r5, r1, r4, ror r7
   1501c:	andeq	r5, r1, r8, ror #14
   15020:	andeq	r5, r1, r8, ror #14
   15024:	andeq	r5, r1, r8, ror #14
   15028:	andeq	r5, r1, r8, ror #14
   1502c:	andeq	r5, r1, r8, ror #14
   15030:	andeq	r5, r1, r8, ror #14
   15034:	andeq	r5, r1, r8, ror #14
   15038:	andeq	r5, r1, r8, ror #14
   1503c:	andeq	r5, r1, r8, ror #14
   15040:	andeq	r5, r1, r8, ror #14
   15044:	andeq	r5, r1, r8, ror #14
   15048:	andeq	r5, r1, r8, ror #14
   1504c:	andeq	r5, r1, r8, ror #14
   15050:	andeq	r5, r1, r8, ror #14
   15054:	andeq	r5, r1, r8, ror #14
   15058:	andeq	r5, r1, r8, ror #14
   1505c:	andeq	r5, r1, r8, ror #14
   15060:	andeq	r5, r1, r8, ror #14
   15064:	andeq	r5, r1, r8, ror #14
   15068:	andeq	r5, r1, r8, ror #14
   1506c:	andeq	r5, r1, r8, ror #14
   15070:	andeq	r5, r1, r8, ror #14
   15074:	andeq	r5, r1, r8, ror #14
   15078:	andeq	r5, r1, r8, ror #14
   1507c:	andeq	r5, r1, r8, ror #14
   15080:	andeq	r5, r1, r8, ror #14
   15084:	andeq	r5, r1, r0, asr r6
   15088:	andeq	r5, r1, r0, ror r5
   1508c:	andeq	r5, r1, r8, ror #14
   15090:	andeq	r5, r1, r0, asr r6
   15094:	andeq	r5, r1, r8, ror #14
   15098:	andeq	r5, r1, r0, asr r6
   1509c:	andeq	r5, r1, r8, ror #14
   150a0:	andeq	r5, r1, r8, ror #14
   150a4:	andeq	r5, r1, r8, ror #14
   150a8:	andeq	r5, r1, r8, ror #14
   150ac:	andeq	r5, r1, r8, ror #14
   150b0:	andeq	r5, r1, r8, ror #14
   150b4:	andeq	r5, r1, r8, ror #14
   150b8:	andeq	r5, r1, r8, ror #14
   150bc:	andeq	r5, r1, r8, ror #14
   150c0:	andeq	r5, r1, r8, ror #14
   150c4:	andeq	r5, r1, r8, ror #14
   150c8:	andeq	r5, r1, r8, ror #14
   150cc:	andeq	r5, r1, r8, ror #14
   150d0:	andeq	r5, r1, r8, ror #14
   150d4:	andeq	r5, r1, r8, ror #14
   150d8:	andeq	r5, r1, r8, ror #14
   150dc:	andeq	r5, r1, r8, ror #14
   150e0:	andeq	r5, r1, r8, ror #14
   150e4:	andeq	r5, r1, r8, ror #14
   150e8:	andeq	r5, r1, r8, ror #14
   150ec:	andeq	r5, r1, r8, ror #14
   150f0:	andeq	r5, r1, r8, ror #14
   150f4:	andeq	r5, r1, r8, ror #14
   150f8:	andeq	r5, r1, r8, ror #14
   150fc:	andeq	r5, r1, r8, ror #14
   15100:	andeq	r5, r1, r8, ror #14
   15104:	andeq	r5, r1, r0, lsl #12
   15108:	andeq	r5, r1, r0, asr r6
   1510c:	andeq	r5, r1, r0, lsl #12
   15110:	andeq	r5, r1, r4, lsr r6
   15114:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15118:	tst	r0, #1
   1511c:	beq	15304 <__assert_fail@plt+0x421c>
   15120:	b	15124 <__assert_fail@plt+0x403c>
   15124:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15128:	tst	r0, #1
   1512c:	beq	15134 <__assert_fail@plt+0x404c>
   15130:	b	16188 <__assert_fail@plt+0x50a0>
   15134:	movw	r0, #1
   15138:	strb	r0, [fp, #-66]	; 0xffffffbe
   1513c:	ldr	r0, [fp, #8]
   15140:	cmp	r0, #2
   15144:	bne	151f8 <__assert_fail@plt+0x4110>
   15148:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1514c:	tst	r0, #1
   15150:	bne	151f8 <__assert_fail@plt+0x4110>
   15154:	b	15158 <__assert_fail@plt+0x4070>
   15158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1515c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15160:	cmp	r0, r1
   15164:	bcs	1517c <__assert_fail@plt+0x4094>
   15168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1516c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15170:	add	r0, r0, r1
   15174:	movw	r1, #39	; 0x27
   15178:	strb	r1, [r0]
   1517c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15180:	add	r0, r0, #1
   15184:	str	r0, [fp, #-44]	; 0xffffffd4
   15188:	b	1518c <__assert_fail@plt+0x40a4>
   1518c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15190:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15194:	cmp	r0, r1
   15198:	bcs	151b0 <__assert_fail@plt+0x40c8>
   1519c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151a4:	add	r0, r0, r1
   151a8:	movw	r1, #36	; 0x24
   151ac:	strb	r1, [r0]
   151b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151b4:	add	r0, r0, #1
   151b8:	str	r0, [fp, #-44]	; 0xffffffd4
   151bc:	b	151c0 <__assert_fail@plt+0x40d8>
   151c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151c8:	cmp	r0, r1
   151cc:	bcs	151e4 <__assert_fail@plt+0x40fc>
   151d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151d8:	add	r0, r0, r1
   151dc:	movw	r1, #39	; 0x27
   151e0:	strb	r1, [r0]
   151e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151e8:	add	r0, r0, #1
   151ec:	str	r0, [fp, #-44]	; 0xffffffd4
   151f0:	movw	r0, #1
   151f4:	strb	r0, [fp, #-60]	; 0xffffffc4
   151f8:	b	151fc <__assert_fail@plt+0x4114>
   151fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15200:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15204:	cmp	r0, r1
   15208:	bcs	15220 <__assert_fail@plt+0x4138>
   1520c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15210:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15214:	add	r0, r0, r1
   15218:	movw	r1, #92	; 0x5c
   1521c:	strb	r1, [r0]
   15220:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15224:	add	r0, r0, #1
   15228:	str	r0, [fp, #-44]	; 0xffffffd4
   1522c:	b	15230 <__assert_fail@plt+0x4148>
   15230:	ldr	r0, [fp, #8]
   15234:	cmp	r0, #2
   15238:	beq	152f8 <__assert_fail@plt+0x4210>
   1523c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15240:	add	r0, r0, #1
   15244:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15248:	cmp	r0, r1
   1524c:	bcs	152f8 <__assert_fail@plt+0x4210>
   15250:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15254:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15258:	add	r1, r1, #1
   1525c:	add	r0, r0, r1
   15260:	ldrb	r0, [r0]
   15264:	movw	r1, #48	; 0x30
   15268:	cmp	r1, r0
   1526c:	bgt	152f8 <__assert_fail@plt+0x4210>
   15270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15274:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15278:	add	r1, r1, #1
   1527c:	add	r0, r0, r1
   15280:	ldrb	r0, [r0]
   15284:	cmp	r0, #57	; 0x39
   15288:	bgt	152f8 <__assert_fail@plt+0x4210>
   1528c:	b	15290 <__assert_fail@plt+0x41a8>
   15290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15298:	cmp	r0, r1
   1529c:	bcs	152b4 <__assert_fail@plt+0x41cc>
   152a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152a8:	add	r0, r0, r1
   152ac:	movw	r1, #48	; 0x30
   152b0:	strb	r1, [r0]
   152b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152b8:	add	r0, r0, #1
   152bc:	str	r0, [fp, #-44]	; 0xffffffd4
   152c0:	b	152c4 <__assert_fail@plt+0x41dc>
   152c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152cc:	cmp	r0, r1
   152d0:	bcs	152e8 <__assert_fail@plt+0x4200>
   152d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152dc:	add	r0, r0, r1
   152e0:	movw	r1, #48	; 0x30
   152e4:	strb	r1, [r0]
   152e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152ec:	add	r0, r0, #1
   152f0:	str	r0, [fp, #-44]	; 0xffffffd4
   152f4:	b	152f8 <__assert_fail@plt+0x4210>
   152f8:	movw	r0, #48	; 0x30
   152fc:	strb	r0, [fp, #-63]	; 0xffffffc1
   15300:	b	1531c <__assert_fail@plt+0x4234>
   15304:	ldr	r0, [fp, #12]
   15308:	and	r0, r0, #1
   1530c:	cmp	r0, #0
   15310:	beq	15318 <__assert_fail@plt+0x4230>
   15314:	b	15ff8 <__assert_fail@plt+0x4f10>
   15318:	b	1531c <__assert_fail@plt+0x4234>
   1531c:	b	15d94 <__assert_fail@plt+0x4cac>
   15320:	ldr	r0, [fp, #8]
   15324:	cmp	r0, #2
   15328:	str	r0, [sp, #32]
   1532c:	beq	15344 <__assert_fail@plt+0x425c>
   15330:	b	15334 <__assert_fail@plt+0x424c>
   15334:	ldr	r0, [sp, #32]
   15338:	cmp	r0, #5
   1533c:	beq	15358 <__assert_fail@plt+0x4270>
   15340:	b	15514 <__assert_fail@plt+0x442c>
   15344:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15348:	tst	r0, #1
   1534c:	beq	15354 <__assert_fail@plt+0x426c>
   15350:	b	16188 <__assert_fail@plt+0x50a0>
   15354:	b	15518 <__assert_fail@plt+0x4430>
   15358:	ldr	r0, [fp, #12]
   1535c:	and	r0, r0, #4
   15360:	cmp	r0, #0
   15364:	beq	15510 <__assert_fail@plt+0x4428>
   15368:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1536c:	add	r0, r0, #2
   15370:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15374:	cmp	r0, r1
   15378:	bcs	15510 <__assert_fail@plt+0x4428>
   1537c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15380:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15384:	add	r1, r1, #1
   15388:	add	r0, r0, r1
   1538c:	ldrb	r0, [r0]
   15390:	cmp	r0, #63	; 0x3f
   15394:	bne	15510 <__assert_fail@plt+0x4428>
   15398:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1539c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   153a0:	add	r0, r1, r0
   153a4:	ldrb	r0, [r0, #2]
   153a8:	mov	r1, r0
   153ac:	cmp	r0, #33	; 0x21
   153b0:	str	r1, [sp, #28]
   153b4:	beq	15404 <__assert_fail@plt+0x431c>
   153b8:	b	153bc <__assert_fail@plt+0x42d4>
   153bc:	ldr	r0, [sp, #28]
   153c0:	sub	r1, r0, #39	; 0x27
   153c4:	cmp	r1, #3
   153c8:	bcc	15404 <__assert_fail@plt+0x431c>
   153cc:	b	153d0 <__assert_fail@plt+0x42e8>
   153d0:	ldr	r0, [sp, #28]
   153d4:	cmp	r0, #45	; 0x2d
   153d8:	beq	15404 <__assert_fail@plt+0x431c>
   153dc:	b	153e0 <__assert_fail@plt+0x42f8>
   153e0:	ldr	r0, [sp, #28]
   153e4:	cmp	r0, #47	; 0x2f
   153e8:	beq	15404 <__assert_fail@plt+0x431c>
   153ec:	b	153f0 <__assert_fail@plt+0x4308>
   153f0:	ldr	r0, [sp, #28]
   153f4:	sub	r1, r0, #60	; 0x3c
   153f8:	cmp	r1, #2
   153fc:	bhi	15508 <__assert_fail@plt+0x4420>
   15400:	b	15404 <__assert_fail@plt+0x431c>
   15404:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15408:	tst	r0, #1
   1540c:	beq	15414 <__assert_fail@plt+0x432c>
   15410:	b	16188 <__assert_fail@plt+0x50a0>
   15414:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15418:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1541c:	add	r1, r1, #2
   15420:	add	r0, r0, r1
   15424:	ldrb	r0, [r0]
   15428:	strb	r0, [fp, #-63]	; 0xffffffc1
   1542c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15430:	add	r0, r0, #2
   15434:	str	r0, [fp, #-40]	; 0xffffffd8
   15438:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1543c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15440:	cmp	r0, r1
   15444:	bcs	1545c <__assert_fail@plt+0x4374>
   15448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1544c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15450:	add	r0, r0, r1
   15454:	movw	r1, #63	; 0x3f
   15458:	strb	r1, [r0]
   1545c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15460:	add	r0, r0, #1
   15464:	str	r0, [fp, #-44]	; 0xffffffd4
   15468:	b	1546c <__assert_fail@plt+0x4384>
   1546c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15474:	cmp	r0, r1
   15478:	bcs	15490 <__assert_fail@plt+0x43a8>
   1547c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15480:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15484:	add	r0, r0, r1
   15488:	movw	r1, #34	; 0x22
   1548c:	strb	r1, [r0]
   15490:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15494:	add	r0, r0, #1
   15498:	str	r0, [fp, #-44]	; 0xffffffd4
   1549c:	b	154a0 <__assert_fail@plt+0x43b8>
   154a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154a8:	cmp	r0, r1
   154ac:	bcs	154c4 <__assert_fail@plt+0x43dc>
   154b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154b8:	add	r0, r0, r1
   154bc:	movw	r1, #34	; 0x22
   154c0:	strb	r1, [r0]
   154c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154c8:	add	r0, r0, #1
   154cc:	str	r0, [fp, #-44]	; 0xffffffd4
   154d0:	b	154d4 <__assert_fail@plt+0x43ec>
   154d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154dc:	cmp	r0, r1
   154e0:	bcs	154f8 <__assert_fail@plt+0x4410>
   154e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154ec:	add	r0, r0, r1
   154f0:	movw	r1, #63	; 0x3f
   154f4:	strb	r1, [r0]
   154f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154fc:	add	r0, r0, #1
   15500:	str	r0, [fp, #-44]	; 0xffffffd4
   15504:	b	1550c <__assert_fail@plt+0x4424>
   15508:	b	1550c <__assert_fail@plt+0x4424>
   1550c:	b	15510 <__assert_fail@plt+0x4428>
   15510:	b	15518 <__assert_fail@plt+0x4430>
   15514:	b	15518 <__assert_fail@plt+0x4430>
   15518:	b	15d94 <__assert_fail@plt+0x4cac>
   1551c:	movw	r0, #97	; 0x61
   15520:	strb	r0, [fp, #-64]	; 0xffffffc0
   15524:	b	155e4 <__assert_fail@plt+0x44fc>
   15528:	movw	r0, #98	; 0x62
   1552c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15530:	b	155e4 <__assert_fail@plt+0x44fc>
   15534:	movw	r0, #102	; 0x66
   15538:	strb	r0, [fp, #-64]	; 0xffffffc0
   1553c:	b	155e4 <__assert_fail@plt+0x44fc>
   15540:	movw	r0, #110	; 0x6e
   15544:	strb	r0, [fp, #-64]	; 0xffffffc0
   15548:	b	155c4 <__assert_fail@plt+0x44dc>
   1554c:	movw	r0, #114	; 0x72
   15550:	strb	r0, [fp, #-64]	; 0xffffffc0
   15554:	b	155c4 <__assert_fail@plt+0x44dc>
   15558:	movw	r0, #116	; 0x74
   1555c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15560:	b	155c4 <__assert_fail@plt+0x44dc>
   15564:	movw	r0, #118	; 0x76
   15568:	strb	r0, [fp, #-64]	; 0xffffffc0
   1556c:	b	155e4 <__assert_fail@plt+0x44fc>
   15570:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15574:	strb	r0, [fp, #-64]	; 0xffffffc0
   15578:	ldr	r0, [fp, #8]
   1557c:	cmp	r0, #2
   15580:	bne	15598 <__assert_fail@plt+0x44b0>
   15584:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15588:	tst	r0, #1
   1558c:	beq	15594 <__assert_fail@plt+0x44ac>
   15590:	b	16188 <__assert_fail@plt+0x50a0>
   15594:	b	15f1c <__assert_fail@plt+0x4e34>
   15598:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1559c:	tst	r0, #1
   155a0:	beq	155c0 <__assert_fail@plt+0x44d8>
   155a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   155a8:	tst	r0, #1
   155ac:	beq	155c0 <__assert_fail@plt+0x44d8>
   155b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155b4:	cmp	r0, #0
   155b8:	beq	155c0 <__assert_fail@plt+0x44d8>
   155bc:	b	15f1c <__assert_fail@plt+0x4e34>
   155c0:	b	155c4 <__assert_fail@plt+0x44dc>
   155c4:	ldr	r0, [fp, #8]
   155c8:	cmp	r0, #2
   155cc:	bne	155e0 <__assert_fail@plt+0x44f8>
   155d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   155d4:	tst	r0, #1
   155d8:	beq	155e0 <__assert_fail@plt+0x44f8>
   155dc:	b	16188 <__assert_fail@plt+0x50a0>
   155e0:	b	155e4 <__assert_fail@plt+0x44fc>
   155e4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   155e8:	tst	r0, #1
   155ec:	beq	155fc <__assert_fail@plt+0x4514>
   155f0:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   155f4:	strb	r0, [fp, #-63]	; 0xffffffc1
   155f8:	b	15e08 <__assert_fail@plt+0x4d20>
   155fc:	b	15d94 <__assert_fail@plt+0x4cac>
   15600:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15604:	cmn	r0, #1
   15608:	bne	15620 <__assert_fail@plt+0x4538>
   1560c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15610:	ldrb	r0, [r0, #1]
   15614:	cmp	r0, #0
   15618:	beq	15630 <__assert_fail@plt+0x4548>
   1561c:	b	1562c <__assert_fail@plt+0x4544>
   15620:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15624:	cmp	r0, #1
   15628:	beq	15630 <__assert_fail@plt+0x4548>
   1562c:	b	15d94 <__assert_fail@plt+0x4cac>
   15630:	b	15634 <__assert_fail@plt+0x454c>
   15634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15638:	cmp	r0, #0
   1563c:	beq	15644 <__assert_fail@plt+0x455c>
   15640:	b	15d94 <__assert_fail@plt+0x4cac>
   15644:	b	15648 <__assert_fail@plt+0x4560>
   15648:	movw	r0, #1
   1564c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15650:	ldr	r0, [fp, #8]
   15654:	cmp	r0, #2
   15658:	bne	1566c <__assert_fail@plt+0x4584>
   1565c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15660:	tst	r0, #1
   15664:	beq	1566c <__assert_fail@plt+0x4584>
   15668:	b	16188 <__assert_fail@plt+0x50a0>
   1566c:	b	15d94 <__assert_fail@plt+0x4cac>
   15670:	movw	r0, #1
   15674:	strb	r0, [fp, #-61]	; 0xffffffc3
   15678:	strb	r0, [fp, #-67]	; 0xffffffbd
   1567c:	ldr	r0, [fp, #8]
   15680:	cmp	r0, #2
   15684:	bne	15764 <__assert_fail@plt+0x467c>
   15688:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1568c:	tst	r0, #1
   15690:	beq	15698 <__assert_fail@plt+0x45b0>
   15694:	b	16188 <__assert_fail@plt+0x50a0>
   15698:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1569c:	cmp	r0, #0
   156a0:	beq	156c0 <__assert_fail@plt+0x45d8>
   156a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   156a8:	cmp	r0, #0
   156ac:	bne	156c0 <__assert_fail@plt+0x45d8>
   156b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   156b4:	str	r0, [fp, #-48]	; 0xffffffd0
   156b8:	movw	r0, #0
   156bc:	str	r0, [fp, #-28]	; 0xffffffe4
   156c0:	b	156c4 <__assert_fail@plt+0x45dc>
   156c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   156cc:	cmp	r0, r1
   156d0:	bcs	156e8 <__assert_fail@plt+0x4600>
   156d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156dc:	add	r0, r0, r1
   156e0:	movw	r1, #39	; 0x27
   156e4:	strb	r1, [r0]
   156e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156ec:	add	r0, r0, #1
   156f0:	str	r0, [fp, #-44]	; 0xffffffd4
   156f4:	b	156f8 <__assert_fail@plt+0x4610>
   156f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   156fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15700:	cmp	r0, r1
   15704:	bcs	1571c <__assert_fail@plt+0x4634>
   15708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1570c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15710:	add	r0, r0, r1
   15714:	movw	r1, #92	; 0x5c
   15718:	strb	r1, [r0]
   1571c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15720:	add	r0, r0, #1
   15724:	str	r0, [fp, #-44]	; 0xffffffd4
   15728:	b	1572c <__assert_fail@plt+0x4644>
   1572c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15730:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15734:	cmp	r0, r1
   15738:	bcs	15750 <__assert_fail@plt+0x4668>
   1573c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15740:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15744:	add	r0, r0, r1
   15748:	movw	r1, #39	; 0x27
   1574c:	strb	r1, [r0]
   15750:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15754:	add	r0, r0, #1
   15758:	str	r0, [fp, #-44]	; 0xffffffd4
   1575c:	movw	r0, #0
   15760:	strb	r0, [fp, #-60]	; 0xffffffc4
   15764:	b	15d94 <__assert_fail@plt+0x4cac>
   15768:	movw	r0, #1
   1576c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15770:	b	15d94 <__assert_fail@plt+0x4cac>
   15774:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15778:	tst	r0, #1
   1577c:	beq	157bc <__assert_fail@plt+0x46d4>
   15780:	mov	r0, #1
   15784:	str	r0, [fp, #-72]	; 0xffffffb8
   15788:	bl	10fc8 <__ctype_b_loc@plt>
   1578c:	ldr	r0, [r0]
   15790:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15794:	mov	r2, r1
   15798:	add	r0, r0, r1, lsl #1
   1579c:	ldrh	r0, [r0]
   157a0:	and	r0, r0, #16384	; 0x4000
   157a4:	cmp	r0, #0
   157a8:	movw	r0, #0
   157ac:	movne	r0, #1
   157b0:	and	r0, r0, #1
   157b4:	strb	r0, [fp, #-73]	; 0xffffffb7
   157b8:	b	15a48 <__assert_fail@plt+0x4960>
   157bc:	sub	r0, fp, #84	; 0x54
   157c0:	movw	r1, #0
   157c4:	and	r1, r1, #255	; 0xff
   157c8:	movw	r2, #8
   157cc:	bl	11028 <memset@plt>
   157d0:	movw	r0, #0
   157d4:	str	r0, [fp, #-72]	; 0xffffffb8
   157d8:	movw	r0, #1
   157dc:	strb	r0, [fp, #-73]	; 0xffffffb7
   157e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   157e4:	cmn	r0, #1
   157e8:	bne	157f8 <__assert_fail@plt+0x4710>
   157ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157f0:	bl	10fec <strlen@plt>
   157f4:	str	r0, [fp, #-36]	; 0xffffffdc
   157f8:	b	157fc <__assert_fail@plt+0x4714>
   157fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15800:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15804:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15808:	add	r1, r1, r2
   1580c:	add	r1, r0, r1
   15810:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15814:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15818:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1581c:	add	r2, r2, r3
   15820:	sub	r2, r0, r2
   15824:	add	r0, sp, #88	; 0x58
   15828:	sub	r3, fp, #84	; 0x54
   1582c:	bl	1db7c <__assert_fail@plt+0xca94>
   15830:	str	r0, [sp, #84]	; 0x54
   15834:	ldr	r0, [sp, #84]	; 0x54
   15838:	cmp	r0, #0
   1583c:	bne	15844 <__assert_fail@plt+0x475c>
   15840:	b	15a44 <__assert_fail@plt+0x495c>
   15844:	ldr	r0, [sp, #84]	; 0x54
   15848:	cmn	r0, #1
   1584c:	bne	1585c <__assert_fail@plt+0x4774>
   15850:	movw	r0, #0
   15854:	strb	r0, [fp, #-73]	; 0xffffffb7
   15858:	b	15a44 <__assert_fail@plt+0x495c>
   1585c:	ldr	r0, [sp, #84]	; 0x54
   15860:	cmn	r0, #2
   15864:	bne	158d8 <__assert_fail@plt+0x47f0>
   15868:	movw	r0, #0
   1586c:	strb	r0, [fp, #-73]	; 0xffffffb7
   15870:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15874:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15878:	add	r0, r0, r1
   1587c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15880:	cmp	r0, r1
   15884:	movw	r0, #0
   15888:	str	r0, [sp, #24]
   1588c:	bcs	158b8 <__assert_fail@plt+0x47d0>
   15890:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15894:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15898:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1589c:	add	r1, r1, r2
   158a0:	add	r0, r0, r1
   158a4:	ldrb	r0, [r0]
   158a8:	cmp	r0, #0
   158ac:	movw	r0, #0
   158b0:	movne	r0, #1
   158b4:	str	r0, [sp, #24]
   158b8:	ldr	r0, [sp, #24]
   158bc:	tst	r0, #1
   158c0:	beq	158d4 <__assert_fail@plt+0x47ec>
   158c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   158c8:	add	r0, r0, #1
   158cc:	str	r0, [fp, #-72]	; 0xffffffb8
   158d0:	b	15870 <__assert_fail@plt+0x4788>
   158d4:	b	15a44 <__assert_fail@plt+0x495c>
   158d8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   158dc:	tst	r0, #1
   158e0:	beq	159ec <__assert_fail@plt+0x4904>
   158e4:	ldr	r0, [fp, #8]
   158e8:	cmp	r0, #2
   158ec:	bne	159ec <__assert_fail@plt+0x4904>
   158f0:	movw	r0, #1
   158f4:	str	r0, [sp, #80]	; 0x50
   158f8:	ldr	r0, [sp, #80]	; 0x50
   158fc:	ldr	r1, [sp, #84]	; 0x54
   15900:	cmp	r0, r1
   15904:	bcs	159e8 <__assert_fail@plt+0x4900>
   15908:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1590c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15910:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15914:	add	r1, r1, r2
   15918:	ldr	r2, [sp, #80]	; 0x50
   1591c:	add	r1, r1, r2
   15920:	ldrb	r0, [r0, r1]
   15924:	sub	r0, r0, #91	; 0x5b
   15928:	cmp	r0, #33	; 0x21
   1592c:	str	r0, [sp, #20]
   15930:	bhi	159d0 <__assert_fail@plt+0x48e8>
   15934:	add	r0, pc, #8
   15938:	ldr	r1, [sp, #20]
   1593c:	ldr	r0, [r0, r1, lsl #2]
   15940:	mov	pc, r0
   15944:	andeq	r5, r1, ip, asr #19
   15948:	andeq	r5, r1, ip, asr #19
   1594c:	ldrdeq	r5, [r1], -r0
   15950:	andeq	r5, r1, ip, asr #19
   15954:	ldrdeq	r5, [r1], -r0
   15958:	andeq	r5, r1, ip, asr #19
   1595c:	ldrdeq	r5, [r1], -r0
   15960:	ldrdeq	r5, [r1], -r0
   15964:	ldrdeq	r5, [r1], -r0
   15968:	ldrdeq	r5, [r1], -r0
   1596c:	ldrdeq	r5, [r1], -r0
   15970:	ldrdeq	r5, [r1], -r0
   15974:	ldrdeq	r5, [r1], -r0
   15978:	ldrdeq	r5, [r1], -r0
   1597c:	ldrdeq	r5, [r1], -r0
   15980:	ldrdeq	r5, [r1], -r0
   15984:	ldrdeq	r5, [r1], -r0
   15988:	ldrdeq	r5, [r1], -r0
   1598c:	ldrdeq	r5, [r1], -r0
   15990:	ldrdeq	r5, [r1], -r0
   15994:	ldrdeq	r5, [r1], -r0
   15998:	ldrdeq	r5, [r1], -r0
   1599c:	ldrdeq	r5, [r1], -r0
   159a0:	ldrdeq	r5, [r1], -r0
   159a4:	ldrdeq	r5, [r1], -r0
   159a8:	ldrdeq	r5, [r1], -r0
   159ac:	ldrdeq	r5, [r1], -r0
   159b0:	ldrdeq	r5, [r1], -r0
   159b4:	ldrdeq	r5, [r1], -r0
   159b8:	ldrdeq	r5, [r1], -r0
   159bc:	ldrdeq	r5, [r1], -r0
   159c0:	ldrdeq	r5, [r1], -r0
   159c4:	ldrdeq	r5, [r1], -r0
   159c8:	andeq	r5, r1, ip, asr #19
   159cc:	b	16188 <__assert_fail@plt+0x50a0>
   159d0:	b	159d4 <__assert_fail@plt+0x48ec>
   159d4:	b	159d8 <__assert_fail@plt+0x48f0>
   159d8:	ldr	r0, [sp, #80]	; 0x50
   159dc:	add	r0, r0, #1
   159e0:	str	r0, [sp, #80]	; 0x50
   159e4:	b	158f8 <__assert_fail@plt+0x4810>
   159e8:	b	159ec <__assert_fail@plt+0x4904>
   159ec:	ldr	r0, [sp, #88]	; 0x58
   159f0:	bl	10f38 <iswprint@plt>
   159f4:	cmp	r0, #0
   159f8:	bne	15a04 <__assert_fail@plt+0x491c>
   159fc:	movw	r0, #0
   15a00:	strb	r0, [fp, #-73]	; 0xffffffb7
   15a04:	ldr	r0, [sp, #84]	; 0x54
   15a08:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15a0c:	add	r0, r1, r0
   15a10:	str	r0, [fp, #-72]	; 0xffffffb8
   15a14:	b	15a18 <__assert_fail@plt+0x4930>
   15a18:	b	15a1c <__assert_fail@plt+0x4934>
   15a1c:	b	15a20 <__assert_fail@plt+0x4938>
   15a20:	sub	r0, fp, #84	; 0x54
   15a24:	bl	10ef0 <mbsinit@plt>
   15a28:	cmp	r0, #0
   15a2c:	movw	r0, #0
   15a30:	movne	r0, #1
   15a34:	mvn	r1, #0
   15a38:	eor	r0, r0, r1
   15a3c:	tst	r0, #1
   15a40:	bne	157fc <__assert_fail@plt+0x4714>
   15a44:	b	15a48 <__assert_fail@plt+0x4960>
   15a48:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15a4c:	and	r0, r0, #1
   15a50:	strb	r0, [fp, #-67]	; 0xffffffbd
   15a54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15a58:	movw	r1, #1
   15a5c:	cmp	r1, r0
   15a60:	bcc	15a7c <__assert_fail@plt+0x4994>
   15a64:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15a68:	tst	r0, #1
   15a6c:	beq	15d90 <__assert_fail@plt+0x4ca8>
   15a70:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15a74:	tst	r0, #1
   15a78:	bne	15d90 <__assert_fail@plt+0x4ca8>
   15a7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15a80:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15a84:	add	r0, r0, r1
   15a88:	str	r0, [sp, #76]	; 0x4c
   15a8c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15a90:	tst	r0, #1
   15a94:	beq	15c44 <__assert_fail@plt+0x4b5c>
   15a98:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15a9c:	tst	r0, #1
   15aa0:	bne	15c44 <__assert_fail@plt+0x4b5c>
   15aa4:	b	15aa8 <__assert_fail@plt+0x49c0>
   15aa8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15aac:	tst	r0, #1
   15ab0:	beq	15ab8 <__assert_fail@plt+0x49d0>
   15ab4:	b	16188 <__assert_fail@plt+0x50a0>
   15ab8:	movw	r0, #1
   15abc:	strb	r0, [fp, #-66]	; 0xffffffbe
   15ac0:	ldr	r0, [fp, #8]
   15ac4:	cmp	r0, #2
   15ac8:	bne	15b7c <__assert_fail@plt+0x4a94>
   15acc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15ad0:	tst	r0, #1
   15ad4:	bne	15b7c <__assert_fail@plt+0x4a94>
   15ad8:	b	15adc <__assert_fail@plt+0x49f4>
   15adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ae0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ae4:	cmp	r0, r1
   15ae8:	bcs	15b00 <__assert_fail@plt+0x4a18>
   15aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15af4:	add	r0, r0, r1
   15af8:	movw	r1, #39	; 0x27
   15afc:	strb	r1, [r0]
   15b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b04:	add	r0, r0, #1
   15b08:	str	r0, [fp, #-44]	; 0xffffffd4
   15b0c:	b	15b10 <__assert_fail@plt+0x4a28>
   15b10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b14:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b18:	cmp	r0, r1
   15b1c:	bcs	15b34 <__assert_fail@plt+0x4a4c>
   15b20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b28:	add	r0, r0, r1
   15b2c:	movw	r1, #36	; 0x24
   15b30:	strb	r1, [r0]
   15b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b38:	add	r0, r0, #1
   15b3c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b40:	b	15b44 <__assert_fail@plt+0x4a5c>
   15b44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b4c:	cmp	r0, r1
   15b50:	bcs	15b68 <__assert_fail@plt+0x4a80>
   15b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b5c:	add	r0, r0, r1
   15b60:	movw	r1, #39	; 0x27
   15b64:	strb	r1, [r0]
   15b68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b6c:	add	r0, r0, #1
   15b70:	str	r0, [fp, #-44]	; 0xffffffd4
   15b74:	movw	r0, #1
   15b78:	strb	r0, [fp, #-60]	; 0xffffffc4
   15b7c:	b	15b80 <__assert_fail@plt+0x4a98>
   15b80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b88:	cmp	r0, r1
   15b8c:	bcs	15ba4 <__assert_fail@plt+0x4abc>
   15b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b98:	add	r0, r0, r1
   15b9c:	movw	r1, #92	; 0x5c
   15ba0:	strb	r1, [r0]
   15ba4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ba8:	add	r0, r0, #1
   15bac:	str	r0, [fp, #-44]	; 0xffffffd4
   15bb0:	b	15bb4 <__assert_fail@plt+0x4acc>
   15bb4:	b	15bb8 <__assert_fail@plt+0x4ad0>
   15bb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bc0:	cmp	r0, r1
   15bc4:	bcs	15be4 <__assert_fail@plt+0x4afc>
   15bc8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15bcc:	asr	r0, r0, #6
   15bd0:	add	r0, r0, #48	; 0x30
   15bd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15bd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15bdc:	add	r1, r1, r2
   15be0:	strb	r0, [r1]
   15be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15be8:	add	r0, r0, #1
   15bec:	str	r0, [fp, #-44]	; 0xffffffd4
   15bf0:	b	15bf4 <__assert_fail@plt+0x4b0c>
   15bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bfc:	cmp	r0, r1
   15c00:	bcs	15c24 <__assert_fail@plt+0x4b3c>
   15c04:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15c08:	asr	r0, r0, #3
   15c0c:	and	r0, r0, #7
   15c10:	add	r0, r0, #48	; 0x30
   15c14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15c1c:	add	r1, r1, r2
   15c20:	strb	r0, [r1]
   15c24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c28:	add	r0, r0, #1
   15c2c:	str	r0, [fp, #-44]	; 0xffffffd4
   15c30:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15c34:	and	r0, r0, #7
   15c38:	add	r0, r0, #48	; 0x30
   15c3c:	strb	r0, [fp, #-63]	; 0xffffffc1
   15c40:	b	15c90 <__assert_fail@plt+0x4ba8>
   15c44:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15c48:	tst	r0, #1
   15c4c:	beq	15c8c <__assert_fail@plt+0x4ba4>
   15c50:	b	15c54 <__assert_fail@plt+0x4b6c>
   15c54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c5c:	cmp	r0, r1
   15c60:	bcs	15c78 <__assert_fail@plt+0x4b90>
   15c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c6c:	add	r0, r0, r1
   15c70:	movw	r1, #92	; 0x5c
   15c74:	strb	r1, [r0]
   15c78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c7c:	add	r0, r0, #1
   15c80:	str	r0, [fp, #-44]	; 0xffffffd4
   15c84:	movw	r0, #0
   15c88:	strb	r0, [fp, #-65]	; 0xffffffbf
   15c8c:	b	15c90 <__assert_fail@plt+0x4ba8>
   15c90:	ldr	r0, [sp, #76]	; 0x4c
   15c94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15c98:	add	r1, r1, #1
   15c9c:	cmp	r0, r1
   15ca0:	bhi	15ca8 <__assert_fail@plt+0x4bc0>
   15ca4:	b	15d8c <__assert_fail@plt+0x4ca4>
   15ca8:	b	15cac <__assert_fail@plt+0x4bc4>
   15cac:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15cb0:	tst	r0, #1
   15cb4:	beq	15d34 <__assert_fail@plt+0x4c4c>
   15cb8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15cbc:	tst	r0, #1
   15cc0:	bne	15d34 <__assert_fail@plt+0x4c4c>
   15cc4:	b	15cc8 <__assert_fail@plt+0x4be0>
   15cc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ccc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cd0:	cmp	r0, r1
   15cd4:	bcs	15cec <__assert_fail@plt+0x4c04>
   15cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ce0:	add	r0, r0, r1
   15ce4:	movw	r1, #39	; 0x27
   15ce8:	strb	r1, [r0]
   15cec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cf0:	add	r0, r0, #1
   15cf4:	str	r0, [fp, #-44]	; 0xffffffd4
   15cf8:	b	15cfc <__assert_fail@plt+0x4c14>
   15cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d04:	cmp	r0, r1
   15d08:	bcs	15d20 <__assert_fail@plt+0x4c38>
   15d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d14:	add	r0, r0, r1
   15d18:	movw	r1, #39	; 0x27
   15d1c:	strb	r1, [r0]
   15d20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d24:	add	r0, r0, #1
   15d28:	str	r0, [fp, #-44]	; 0xffffffd4
   15d2c:	movw	r0, #0
   15d30:	strb	r0, [fp, #-60]	; 0xffffffc4
   15d34:	b	15d38 <__assert_fail@plt+0x4c50>
   15d38:	b	15d3c <__assert_fail@plt+0x4c54>
   15d3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d44:	cmp	r0, r1
   15d48:	bcs	15d60 <__assert_fail@plt+0x4c78>
   15d4c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15d50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d54:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15d58:	add	r1, r1, r2
   15d5c:	strb	r0, [r1]
   15d60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d64:	add	r0, r0, #1
   15d68:	str	r0, [fp, #-44]	; 0xffffffd4
   15d6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15d74:	add	r1, r1, #1
   15d78:	str	r1, [fp, #-40]	; 0xffffffd8
   15d7c:	add	r0, r0, r1
   15d80:	ldrb	r0, [r0]
   15d84:	strb	r0, [fp, #-63]	; 0xffffffc1
   15d88:	b	15a8c <__assert_fail@plt+0x49a4>
   15d8c:	b	15f1c <__assert_fail@plt+0x4e34>
   15d90:	b	15d94 <__assert_fail@plt+0x4cac>
   15d94:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15d98:	tst	r0, #1
   15d9c:	beq	15dac <__assert_fail@plt+0x4cc4>
   15da0:	ldr	r0, [fp, #8]
   15da4:	cmp	r0, #2
   15da8:	bne	15db8 <__assert_fail@plt+0x4cd0>
   15dac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15db0:	tst	r0, #1
   15db4:	beq	15df4 <__assert_fail@plt+0x4d0c>
   15db8:	ldr	r0, [fp, #16]
   15dbc:	movw	r1, #0
   15dc0:	cmp	r0, r1
   15dc4:	beq	15df4 <__assert_fail@plt+0x4d0c>
   15dc8:	ldr	r0, [fp, #16]
   15dcc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15dd0:	lsr	r1, r1, #5
   15dd4:	add	r0, r0, r1, lsl #2
   15dd8:	ldr	r0, [r0]
   15ddc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15de0:	and	r1, r1, #31
   15de4:	lsr	r0, r0, r1
   15de8:	and	r0, r0, #1
   15dec:	cmp	r0, #0
   15df0:	bne	15e04 <__assert_fail@plt+0x4d1c>
   15df4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15df8:	tst	r0, #1
   15dfc:	bne	15e04 <__assert_fail@plt+0x4d1c>
   15e00:	b	15f1c <__assert_fail@plt+0x4e34>
   15e04:	b	15e08 <__assert_fail@plt+0x4d20>
   15e08:	b	15e0c <__assert_fail@plt+0x4d24>
   15e0c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15e10:	tst	r0, #1
   15e14:	beq	15e1c <__assert_fail@plt+0x4d34>
   15e18:	b	16188 <__assert_fail@plt+0x50a0>
   15e1c:	movw	r0, #1
   15e20:	strb	r0, [fp, #-66]	; 0xffffffbe
   15e24:	ldr	r0, [fp, #8]
   15e28:	cmp	r0, #2
   15e2c:	bne	15ee0 <__assert_fail@plt+0x4df8>
   15e30:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15e34:	tst	r0, #1
   15e38:	bne	15ee0 <__assert_fail@plt+0x4df8>
   15e3c:	b	15e40 <__assert_fail@plt+0x4d58>
   15e40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e48:	cmp	r0, r1
   15e4c:	bcs	15e64 <__assert_fail@plt+0x4d7c>
   15e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e58:	add	r0, r0, r1
   15e5c:	movw	r1, #39	; 0x27
   15e60:	strb	r1, [r0]
   15e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e68:	add	r0, r0, #1
   15e6c:	str	r0, [fp, #-44]	; 0xffffffd4
   15e70:	b	15e74 <__assert_fail@plt+0x4d8c>
   15e74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e7c:	cmp	r0, r1
   15e80:	bcs	15e98 <__assert_fail@plt+0x4db0>
   15e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e8c:	add	r0, r0, r1
   15e90:	movw	r1, #36	; 0x24
   15e94:	strb	r1, [r0]
   15e98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e9c:	add	r0, r0, #1
   15ea0:	str	r0, [fp, #-44]	; 0xffffffd4
   15ea4:	b	15ea8 <__assert_fail@plt+0x4dc0>
   15ea8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15eac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15eb0:	cmp	r0, r1
   15eb4:	bcs	15ecc <__assert_fail@plt+0x4de4>
   15eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ebc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ec0:	add	r0, r0, r1
   15ec4:	movw	r1, #39	; 0x27
   15ec8:	strb	r1, [r0]
   15ecc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ed0:	add	r0, r0, #1
   15ed4:	str	r0, [fp, #-44]	; 0xffffffd4
   15ed8:	movw	r0, #1
   15edc:	strb	r0, [fp, #-60]	; 0xffffffc4
   15ee0:	b	15ee4 <__assert_fail@plt+0x4dfc>
   15ee4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ee8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15eec:	cmp	r0, r1
   15ef0:	bcs	15f08 <__assert_fail@plt+0x4e20>
   15ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ef8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15efc:	add	r0, r0, r1
   15f00:	movw	r1, #92	; 0x5c
   15f04:	strb	r1, [r0]
   15f08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f0c:	add	r0, r0, #1
   15f10:	str	r0, [fp, #-44]	; 0xffffffd4
   15f14:	b	15f18 <__assert_fail@plt+0x4e30>
   15f18:	b	15f1c <__assert_fail@plt+0x4e34>
   15f1c:	b	15f20 <__assert_fail@plt+0x4e38>
   15f20:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15f24:	tst	r0, #1
   15f28:	beq	15fa8 <__assert_fail@plt+0x4ec0>
   15f2c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15f30:	tst	r0, #1
   15f34:	bne	15fa8 <__assert_fail@plt+0x4ec0>
   15f38:	b	15f3c <__assert_fail@plt+0x4e54>
   15f3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f44:	cmp	r0, r1
   15f48:	bcs	15f60 <__assert_fail@plt+0x4e78>
   15f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f54:	add	r0, r0, r1
   15f58:	movw	r1, #39	; 0x27
   15f5c:	strb	r1, [r0]
   15f60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f64:	add	r0, r0, #1
   15f68:	str	r0, [fp, #-44]	; 0xffffffd4
   15f6c:	b	15f70 <__assert_fail@plt+0x4e88>
   15f70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f78:	cmp	r0, r1
   15f7c:	bcs	15f94 <__assert_fail@plt+0x4eac>
   15f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f88:	add	r0, r0, r1
   15f8c:	movw	r1, #39	; 0x27
   15f90:	strb	r1, [r0]
   15f94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f98:	add	r0, r0, #1
   15f9c:	str	r0, [fp, #-44]	; 0xffffffd4
   15fa0:	movw	r0, #0
   15fa4:	strb	r0, [fp, #-60]	; 0xffffffc4
   15fa8:	b	15fac <__assert_fail@plt+0x4ec4>
   15fac:	b	15fb0 <__assert_fail@plt+0x4ec8>
   15fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15fb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15fb8:	cmp	r0, r1
   15fbc:	bcs	15fd4 <__assert_fail@plt+0x4eec>
   15fc0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fc8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15fcc:	add	r1, r1, r2
   15fd0:	strb	r0, [r1]
   15fd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15fd8:	add	r0, r0, #1
   15fdc:	str	r0, [fp, #-44]	; 0xffffffd4
   15fe0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15fe4:	tst	r0, #1
   15fe8:	bne	15ff4 <__assert_fail@plt+0x4f0c>
   15fec:	movw	r0, #0
   15ff0:	strb	r0, [fp, #-62]	; 0xffffffc2
   15ff4:	b	15ff8 <__assert_fail@plt+0x4f10>
   15ff8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15ffc:	add	r0, r0, #1
   16000:	str	r0, [fp, #-40]	; 0xffffffd8
   16004:	b	14db0 <__assert_fail@plt+0x3cc8>
   16008:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1600c:	cmp	r0, #0
   16010:	bne	16030 <__assert_fail@plt+0x4f48>
   16014:	ldr	r0, [fp, #8]
   16018:	cmp	r0, #2
   1601c:	bne	16030 <__assert_fail@plt+0x4f48>
   16020:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16024:	tst	r0, #1
   16028:	beq	16030 <__assert_fail@plt+0x4f48>
   1602c:	b	16188 <__assert_fail@plt+0x50a0>
   16030:	ldr	r0, [fp, #8]
   16034:	cmp	r0, #2
   16038:	bne	160d8 <__assert_fail@plt+0x4ff0>
   1603c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16040:	tst	r0, #1
   16044:	bne	160d8 <__assert_fail@plt+0x4ff0>
   16048:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1604c:	tst	r0, #1
   16050:	beq	160d8 <__assert_fail@plt+0x4ff0>
   16054:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   16058:	tst	r0, #1
   1605c:	beq	160a4 <__assert_fail@plt+0x4fbc>
   16060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16064:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16068:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1606c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16070:	ldr	ip, [fp, #12]
   16074:	ldr	lr, [fp, #16]
   16078:	ldr	r4, [fp, #20]
   1607c:	ldr	r5, [fp, #24]
   16080:	movw	r6, #5
   16084:	str	r6, [sp]
   16088:	str	ip, [sp, #4]
   1608c:	str	lr, [sp, #8]
   16090:	str	r4, [sp, #12]
   16094:	str	r5, [sp, #16]
   16098:	bl	14ac8 <__assert_fail@plt+0x39e0>
   1609c:	str	r0, [fp, #-20]	; 0xffffffec
   160a0:	b	161f0 <__assert_fail@plt+0x5108>
   160a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   160a8:	cmp	r0, #0
   160ac:	bne	160d0 <__assert_fail@plt+0x4fe8>
   160b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160b4:	cmp	r0, #0
   160b8:	beq	160d0 <__assert_fail@plt+0x4fe8>
   160bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160c0:	str	r0, [fp, #-28]	; 0xffffffe4
   160c4:	movw	r0, #0
   160c8:	str	r0, [fp, #-44]	; 0xffffffd4
   160cc:	b	14b70 <__assert_fail@plt+0x3a88>
   160d0:	b	160d4 <__assert_fail@plt+0x4fec>
   160d4:	b	160d8 <__assert_fail@plt+0x4ff0>
   160d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   160dc:	movw	r1, #0
   160e0:	cmp	r0, r1
   160e4:	beq	16158 <__assert_fail@plt+0x5070>
   160e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   160ec:	tst	r0, #1
   160f0:	bne	16158 <__assert_fail@plt+0x5070>
   160f4:	b	160f8 <__assert_fail@plt+0x5010>
   160f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   160fc:	ldrsb	r0, [r0]
   16100:	cmp	r0, #0
   16104:	beq	16154 <__assert_fail@plt+0x506c>
   16108:	b	1610c <__assert_fail@plt+0x5024>
   1610c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16110:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16114:	cmp	r0, r1
   16118:	bcs	16134 <__assert_fail@plt+0x504c>
   1611c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16120:	ldrb	r0, [r0]
   16124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16128:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1612c:	add	r1, r1, r2
   16130:	strb	r0, [r1]
   16134:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16138:	add	r0, r0, #1
   1613c:	str	r0, [fp, #-44]	; 0xffffffd4
   16140:	b	16144 <__assert_fail@plt+0x505c>
   16144:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16148:	add	r0, r0, #1
   1614c:	str	r0, [fp, #-52]	; 0xffffffcc
   16150:	b	160f8 <__assert_fail@plt+0x5010>
   16154:	b	16158 <__assert_fail@plt+0x5070>
   16158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1615c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16160:	cmp	r0, r1
   16164:	bcs	1617c <__assert_fail@plt+0x5094>
   16168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1616c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16170:	add	r0, r0, r1
   16174:	movw	r1, #0
   16178:	strb	r1, [r0]
   1617c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16180:	str	r0, [fp, #-20]	; 0xffffffec
   16184:	b	161f0 <__assert_fail@plt+0x5108>
   16188:	ldr	r0, [fp, #8]
   1618c:	cmp	r0, #2
   16190:	bne	161a8 <__assert_fail@plt+0x50c0>
   16194:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16198:	tst	r0, #1
   1619c:	beq	161a8 <__assert_fail@plt+0x50c0>
   161a0:	movw	r0, #4
   161a4:	str	r0, [fp, #8]
   161a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   161b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161b8:	ldr	ip, [fp, #8]
   161bc:	ldr	lr, [fp, #12]
   161c0:	mvn	r4, #2
   161c4:	and	lr, lr, r4
   161c8:	ldr	r4, [fp, #20]
   161cc:	ldr	r5, [fp, #24]
   161d0:	str	ip, [sp]
   161d4:	str	lr, [sp, #4]
   161d8:	movw	ip, #0
   161dc:	str	ip, [sp, #8]
   161e0:	str	r4, [sp, #12]
   161e4:	str	r5, [sp, #16]
   161e8:	bl	14ac8 <__assert_fail@plt+0x39e0>
   161ec:	str	r0, [fp, #-20]	; 0xffffffec
   161f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   161f4:	sub	sp, fp, #16
   161f8:	pop	{r4, r5, r6, sl, fp, pc}
   161fc:	push	{fp, lr}
   16200:	mov	fp, sp
   16204:	sub	sp, sp, #16
   16208:	str	r0, [fp, #-4]
   1620c:	str	r1, [sp, #8]
   16210:	str	r2, [sp, #4]
   16214:	ldr	r0, [fp, #-4]
   16218:	ldr	r1, [sp, #8]
   1621c:	ldr	r3, [sp, #4]
   16220:	movw	r2, #0
   16224:	bl	16230 <__assert_fail@plt+0x5148>
   16228:	mov	sp, fp
   1622c:	pop	{fp, pc}
   16230:	push	{r4, r5, r6, sl, fp, lr}
   16234:	add	fp, sp, #16
   16238:	sub	sp, sp, #80	; 0x50
   1623c:	str	r0, [fp, #-20]	; 0xffffffec
   16240:	str	r1, [fp, #-24]	; 0xffffffe8
   16244:	str	r2, [fp, #-28]	; 0xffffffe4
   16248:	str	r3, [fp, #-32]	; 0xffffffe0
   1624c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16250:	movw	r1, #0
   16254:	cmp	r0, r1
   16258:	beq	16268 <__assert_fail@plt+0x5180>
   1625c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16260:	str	r0, [sp, #40]	; 0x28
   16264:	b	16278 <__assert_fail@plt+0x5190>
   16268:	movw	r0, #364	; 0x16c
   1626c:	movt	r0, #3
   16270:	str	r0, [sp, #40]	; 0x28
   16274:	b	16278 <__assert_fail@plt+0x5190>
   16278:	ldr	r0, [sp, #40]	; 0x28
   1627c:	str	r0, [fp, #-36]	; 0xffffffdc
   16280:	bl	11010 <__errno_location@plt>
   16284:	ldr	r0, [r0]
   16288:	str	r0, [fp, #-40]	; 0xffffffd8
   1628c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16290:	ldr	r0, [r0, #4]
   16294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16298:	movw	r2, #0
   1629c:	cmp	r1, r2
   162a0:	movw	r1, #0
   162a4:	movne	r1, #1
   162a8:	tst	r1, #1
   162ac:	mov	r1, r2
   162b0:	moveq	r1, #1
   162b4:	orr	r0, r0, r1
   162b8:	str	r0, [fp, #-44]	; 0xffffffd4
   162bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   162c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   162c8:	ldr	r1, [r1]
   162cc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   162d0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   162d4:	add	lr, lr, #8
   162d8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   162dc:	ldr	r4, [r4, #40]	; 0x28
   162e0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   162e4:	ldr	r5, [r5, #44]	; 0x2c
   162e8:	str	r0, [sp, #36]	; 0x24
   162ec:	mov	r0, r2
   162f0:	str	r1, [sp, #32]
   162f4:	mov	r1, r2
   162f8:	ldr	r2, [sp, #36]	; 0x24
   162fc:	ldr	r6, [sp, #32]
   16300:	str	r6, [sp]
   16304:	str	ip, [sp, #4]
   16308:	str	lr, [sp, #8]
   1630c:	str	r4, [sp, #12]
   16310:	str	r5, [sp, #16]
   16314:	bl	14ac8 <__assert_fail@plt+0x39e0>
   16318:	add	r0, r0, #1
   1631c:	str	r0, [sp, #48]	; 0x30
   16320:	ldr	r0, [sp, #48]	; 0x30
   16324:	bl	18a54 <__assert_fail@plt+0x796c>
   16328:	str	r0, [sp, #44]	; 0x2c
   1632c:	ldr	r0, [sp, #44]	; 0x2c
   16330:	ldr	r1, [sp, #48]	; 0x30
   16334:	ldr	r2, [fp, #-20]	; 0xffffffec
   16338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1633c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16340:	ldr	ip, [ip]
   16344:	ldr	lr, [fp, #-44]	; 0xffffffd4
   16348:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1634c:	add	r4, r4, #8
   16350:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16354:	ldr	r5, [r5, #40]	; 0x28
   16358:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1635c:	ldr	r6, [r6, #44]	; 0x2c
   16360:	str	ip, [sp]
   16364:	str	lr, [sp, #4]
   16368:	str	r4, [sp, #8]
   1636c:	str	r5, [sp, #12]
   16370:	str	r6, [sp, #16]
   16374:	bl	14ac8 <__assert_fail@plt+0x39e0>
   16378:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1637c:	str	r0, [sp, #28]
   16380:	str	r1, [sp, #24]
   16384:	bl	11010 <__errno_location@plt>
   16388:	ldr	r1, [sp, #24]
   1638c:	str	r1, [r0]
   16390:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16394:	movw	r2, #0
   16398:	cmp	r0, r2
   1639c:	beq	163b0 <__assert_fail@plt+0x52c8>
   163a0:	ldr	r0, [sp, #48]	; 0x30
   163a4:	sub	r0, r0, #1
   163a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   163ac:	str	r0, [r1]
   163b0:	ldr	r0, [sp, #44]	; 0x2c
   163b4:	sub	sp, fp, #16
   163b8:	pop	{r4, r5, r6, sl, fp, pc}
   163bc:	push	{fp, lr}
   163c0:	mov	fp, sp
   163c4:	sub	sp, sp, #8
   163c8:	movw	r0, #248	; 0xf8
   163cc:	movt	r0, #3
   163d0:	ldr	r0, [r0]
   163d4:	str	r0, [sp, #4]
   163d8:	movw	r0, #1
   163dc:	str	r0, [sp]
   163e0:	ldr	r0, [sp]
   163e4:	movw	r1, #252	; 0xfc
   163e8:	movt	r1, #3
   163ec:	ldr	r1, [r1]
   163f0:	cmp	r0, r1
   163f4:	bge	1641c <__assert_fail@plt+0x5334>
   163f8:	ldr	r0, [sp, #4]
   163fc:	ldr	r1, [sp]
   16400:	add	r0, r0, r1, lsl #3
   16404:	ldr	r0, [r0, #4]
   16408:	bl	14320 <__assert_fail@plt+0x3238>
   1640c:	ldr	r0, [sp]
   16410:	add	r0, r0, #1
   16414:	str	r0, [sp]
   16418:	b	163e0 <__assert_fail@plt+0x52f8>
   1641c:	ldr	r0, [sp, #4]
   16420:	ldr	r0, [r0, #4]
   16424:	movw	r1, #412	; 0x19c
   16428:	movt	r1, #3
   1642c:	cmp	r0, r1
   16430:	beq	1645c <__assert_fail@plt+0x5374>
   16434:	ldr	r0, [sp, #4]
   16438:	ldr	r0, [r0, #4]
   1643c:	bl	14320 <__assert_fail@plt+0x3238>
   16440:	movw	r0, #256	; 0x100
   16444:	movw	r1, #256	; 0x100
   16448:	movt	r1, #3
   1644c:	str	r0, [r1]
   16450:	movw	r0, #412	; 0x19c
   16454:	movt	r0, #3
   16458:	str	r0, [r1, #4]
   1645c:	ldr	r0, [sp, #4]
   16460:	movw	r1, #256	; 0x100
   16464:	movt	r1, #3
   16468:	cmp	r0, r1
   1646c:	beq	1648c <__assert_fail@plt+0x53a4>
   16470:	ldr	r0, [sp, #4]
   16474:	bl	14320 <__assert_fail@plt+0x3238>
   16478:	movw	r0, #248	; 0xf8
   1647c:	movt	r0, #3
   16480:	movw	r1, #256	; 0x100
   16484:	movt	r1, #3
   16488:	str	r1, [r0]
   1648c:	movw	r0, #252	; 0xfc
   16490:	movt	r0, #3
   16494:	movw	r1, #1
   16498:	str	r1, [r0]
   1649c:	mov	sp, fp
   164a0:	pop	{fp, pc}
   164a4:	push	{fp, lr}
   164a8:	mov	fp, sp
   164ac:	sub	sp, sp, #8
   164b0:	str	r0, [sp, #4]
   164b4:	str	r1, [sp]
   164b8:	ldr	r0, [sp, #4]
   164bc:	ldr	r1, [sp]
   164c0:	mvn	r2, #0
   164c4:	movw	r3, #364	; 0x16c
   164c8:	movt	r3, #3
   164cc:	bl	164d8 <__assert_fail@plt+0x53f0>
   164d0:	mov	sp, fp
   164d4:	pop	{fp, pc}
   164d8:	push	{r4, r5, r6, sl, fp, lr}
   164dc:	add	fp, sp, #16
   164e0:	sub	sp, sp, #80	; 0x50
   164e4:	str	r0, [fp, #-20]	; 0xffffffec
   164e8:	str	r1, [fp, #-24]	; 0xffffffe8
   164ec:	str	r2, [fp, #-28]	; 0xffffffe4
   164f0:	str	r3, [fp, #-32]	; 0xffffffe0
   164f4:	bl	11010 <__errno_location@plt>
   164f8:	ldr	r1, [pc, #672]	; 167a0 <__assert_fail@plt+0x56b8>
   164fc:	ldr	r0, [r0]
   16500:	str	r0, [fp, #-36]	; 0xffffffdc
   16504:	movw	r0, #248	; 0xf8
   16508:	movt	r0, #3
   1650c:	ldr	r0, [r0]
   16510:	str	r0, [fp, #-40]	; 0xffffffd8
   16514:	str	r1, [fp, #-44]	; 0xffffffd4
   16518:	ldr	r0, [fp, #-20]	; 0xffffffec
   1651c:	movw	r1, #0
   16520:	cmp	r1, r0
   16524:	bgt	16538 <__assert_fail@plt+0x5450>
   16528:	ldr	r0, [fp, #-20]	; 0xffffffec
   1652c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16530:	cmp	r0, r1
   16534:	blt	1653c <__assert_fail@plt+0x5454>
   16538:	bl	110d0 <abort@plt>
   1653c:	movw	r0, #252	; 0xfc
   16540:	movt	r0, #3
   16544:	ldr	r0, [r0]
   16548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1654c:	cmp	r0, r1
   16550:	bgt	16648 <__assert_fail@plt+0x5560>
   16554:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16558:	movw	r1, #256	; 0x100
   1655c:	movt	r1, #3
   16560:	cmp	r0, r1
   16564:	movw	r0, #0
   16568:	moveq	r0, #1
   1656c:	and	r0, r0, #1
   16570:	strb	r0, [fp, #-45]	; 0xffffffd3
   16574:	movw	r0, #252	; 0xfc
   16578:	movt	r0, #3
   1657c:	ldr	r0, [r0]
   16580:	str	r0, [sp, #44]	; 0x2c
   16584:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16588:	tst	r0, #1
   1658c:	beq	1659c <__assert_fail@plt+0x54b4>
   16590:	movw	r0, #0
   16594:	str	r0, [sp, #24]
   16598:	b	165a4 <__assert_fail@plt+0x54bc>
   1659c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165a0:	str	r0, [sp, #24]
   165a4:	ldr	r0, [sp, #24]
   165a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   165ac:	movw	r2, #252	; 0xfc
   165b0:	movt	r2, #3
   165b4:	ldr	r2, [r2]
   165b8:	sub	r1, r1, r2
   165bc:	add	r2, r1, #1
   165c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   165c4:	add	r1, sp, #44	; 0x2c
   165c8:	movw	ip, #8
   165cc:	str	ip, [sp]
   165d0:	bl	18c90 <__assert_fail@plt+0x7ba8>
   165d4:	str	r0, [fp, #-40]	; 0xffffffd8
   165d8:	movw	r1, #248	; 0xf8
   165dc:	movt	r1, #3
   165e0:	str	r0, [r1]
   165e4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   165e8:	tst	r0, #1
   165ec:	beq	1660c <__assert_fail@plt+0x5524>
   165f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165f4:	movw	r1, #256	; 0x100
   165f8:	movt	r1, #3
   165fc:	ldr	r2, [r1]
   16600:	str	r2, [r0]
   16604:	ldr	r1, [r1, #4]
   16608:	str	r1, [r0, #4]
   1660c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16610:	movw	r1, #252	; 0xfc
   16614:	movt	r1, #3
   16618:	ldr	r1, [r1]
   1661c:	add	r0, r0, r1, lsl #3
   16620:	ldr	r2, [sp, #44]	; 0x2c
   16624:	sub	r1, r2, r1
   16628:	lsl	r2, r1, #3
   1662c:	movw	r1, #0
   16630:	and	r1, r1, #255	; 0xff
   16634:	bl	11028 <memset@plt>
   16638:	ldr	r0, [sp, #44]	; 0x2c
   1663c:	movw	r1, #252	; 0xfc
   16640:	movt	r1, #3
   16644:	str	r0, [r1]
   16648:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1664c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16650:	ldr	r0, [r0, r1, lsl #3]
   16654:	str	r0, [sp, #40]	; 0x28
   16658:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1665c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16660:	add	r0, r0, r1, lsl #3
   16664:	ldr	r0, [r0, #4]
   16668:	str	r0, [sp, #36]	; 0x24
   1666c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16670:	ldr	r0, [r0, #4]
   16674:	orr	r0, r0, #1
   16678:	str	r0, [sp, #32]
   1667c:	ldr	r0, [sp, #36]	; 0x24
   16680:	ldr	r1, [sp, #40]	; 0x28
   16684:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1668c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16690:	ldr	ip, [ip]
   16694:	ldr	lr, [sp, #32]
   16698:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1669c:	add	r4, r4, #8
   166a0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   166a4:	ldr	r5, [r5, #40]	; 0x28
   166a8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   166ac:	ldr	r6, [r6, #44]	; 0x2c
   166b0:	str	ip, [sp]
   166b4:	str	lr, [sp, #4]
   166b8:	str	r4, [sp, #8]
   166bc:	str	r5, [sp, #12]
   166c0:	str	r6, [sp, #16]
   166c4:	bl	14ac8 <__assert_fail@plt+0x39e0>
   166c8:	str	r0, [sp, #28]
   166cc:	ldr	r0, [sp, #40]	; 0x28
   166d0:	ldr	r1, [sp, #28]
   166d4:	cmp	r0, r1
   166d8:	bhi	16780 <__assert_fail@plt+0x5698>
   166dc:	ldr	r0, [sp, #28]
   166e0:	add	r0, r0, #1
   166e4:	str	r0, [sp, #40]	; 0x28
   166e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   166ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   166f0:	add	r1, r1, r2, lsl #3
   166f4:	str	r0, [r1]
   166f8:	ldr	r0, [sp, #36]	; 0x24
   166fc:	movw	r1, #412	; 0x19c
   16700:	movt	r1, #3
   16704:	cmp	r0, r1
   16708:	beq	16714 <__assert_fail@plt+0x562c>
   1670c:	ldr	r0, [sp, #36]	; 0x24
   16710:	bl	14320 <__assert_fail@plt+0x3238>
   16714:	ldr	r0, [sp, #40]	; 0x28
   16718:	bl	18a54 <__assert_fail@plt+0x796c>
   1671c:	mov	r1, r0
   16720:	str	r0, [sp, #36]	; 0x24
   16724:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16728:	ldr	r2, [fp, #-20]	; 0xffffffec
   1672c:	add	r0, r0, r2, lsl #3
   16730:	str	r1, [r0, #4]
   16734:	ldr	r0, [sp, #36]	; 0x24
   16738:	ldr	r1, [sp, #40]	; 0x28
   1673c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16740:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16744:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16748:	ldr	ip, [ip]
   1674c:	ldr	lr, [sp, #32]
   16750:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16754:	add	r4, r4, #8
   16758:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1675c:	ldr	r5, [r5, #40]	; 0x28
   16760:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16764:	ldr	r6, [r6, #44]	; 0x2c
   16768:	str	ip, [sp]
   1676c:	str	lr, [sp, #4]
   16770:	str	r4, [sp, #8]
   16774:	str	r5, [sp, #12]
   16778:	str	r6, [sp, #16]
   1677c:	bl	14ac8 <__assert_fail@plt+0x39e0>
   16780:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16784:	str	r0, [sp, #20]
   16788:	bl	11010 <__errno_location@plt>
   1678c:	ldr	r1, [sp, #20]
   16790:	str	r1, [r0]
   16794:	ldr	r0, [sp, #36]	; 0x24
   16798:	sub	sp, fp, #16
   1679c:	pop	{r4, r5, r6, sl, fp, pc}
   167a0:	svcvc	0x00ffffff
   167a4:	push	{fp, lr}
   167a8:	mov	fp, sp
   167ac:	sub	sp, sp, #16
   167b0:	str	r0, [fp, #-4]
   167b4:	str	r1, [sp, #8]
   167b8:	str	r2, [sp, #4]
   167bc:	ldr	r0, [fp, #-4]
   167c0:	ldr	r1, [sp, #8]
   167c4:	ldr	r2, [sp, #4]
   167c8:	movw	r3, #364	; 0x16c
   167cc:	movt	r3, #3
   167d0:	bl	164d8 <__assert_fail@plt+0x53f0>
   167d4:	mov	sp, fp
   167d8:	pop	{fp, pc}
   167dc:	push	{fp, lr}
   167e0:	mov	fp, sp
   167e4:	sub	sp, sp, #8
   167e8:	str	r0, [sp, #4]
   167ec:	ldr	r1, [sp, #4]
   167f0:	movw	r0, #0
   167f4:	bl	164a4 <__assert_fail@plt+0x53bc>
   167f8:	mov	sp, fp
   167fc:	pop	{fp, pc}
   16800:	push	{fp, lr}
   16804:	mov	fp, sp
   16808:	sub	sp, sp, #8
   1680c:	str	r0, [sp, #4]
   16810:	str	r1, [sp]
   16814:	ldr	r1, [sp, #4]
   16818:	ldr	r2, [sp]
   1681c:	movw	r0, #0
   16820:	bl	167a4 <__assert_fail@plt+0x56bc>
   16824:	mov	sp, fp
   16828:	pop	{fp, pc}
   1682c:	push	{fp, lr}
   16830:	mov	fp, sp
   16834:	sub	sp, sp, #64	; 0x40
   16838:	str	r0, [fp, #-4]
   1683c:	str	r1, [fp, #-8]
   16840:	str	r2, [fp, #-12]
   16844:	ldr	r1, [fp, #-8]
   16848:	add	r0, sp, #4
   1684c:	bl	1686c <__assert_fail@plt+0x5784>
   16850:	ldr	r0, [fp, #-4]
   16854:	ldr	r1, [fp, #-12]
   16858:	mvn	r2, #0
   1685c:	add	r3, sp, #4
   16860:	bl	164d8 <__assert_fail@plt+0x53f0>
   16864:	mov	sp, fp
   16868:	pop	{fp, pc}
   1686c:	push	{fp, lr}
   16870:	mov	fp, sp
   16874:	sub	sp, sp, #8
   16878:	str	r1, [sp, #4]
   1687c:	mov	r1, r0
   16880:	str	r0, [sp]
   16884:	mov	r0, r1
   16888:	movw	r1, #0
   1688c:	and	r1, r1, #255	; 0xff
   16890:	movw	r2, #48	; 0x30
   16894:	bl	11028 <memset@plt>
   16898:	ldr	r0, [sp, #4]
   1689c:	cmp	r0, #10
   168a0:	bne	168a8 <__assert_fail@plt+0x57c0>
   168a4:	bl	110d0 <abort@plt>
   168a8:	ldr	r0, [sp, #4]
   168ac:	ldr	r1, [sp]
   168b0:	str	r0, [r1]
   168b4:	mov	sp, fp
   168b8:	pop	{fp, pc}
   168bc:	push	{fp, lr}
   168c0:	mov	fp, sp
   168c4:	sub	sp, sp, #64	; 0x40
   168c8:	str	r0, [fp, #-4]
   168cc:	str	r1, [fp, #-8]
   168d0:	str	r2, [fp, #-12]
   168d4:	str	r3, [fp, #-16]
   168d8:	ldr	r1, [fp, #-8]
   168dc:	mov	r0, sp
   168e0:	bl	1686c <__assert_fail@plt+0x5784>
   168e4:	ldr	r0, [fp, #-4]
   168e8:	ldr	r1, [fp, #-12]
   168ec:	ldr	r2, [fp, #-16]
   168f0:	mov	r3, sp
   168f4:	bl	164d8 <__assert_fail@plt+0x53f0>
   168f8:	mov	sp, fp
   168fc:	pop	{fp, pc}
   16900:	push	{fp, lr}
   16904:	mov	fp, sp
   16908:	sub	sp, sp, #8
   1690c:	str	r0, [sp, #4]
   16910:	str	r1, [sp]
   16914:	ldr	r1, [sp, #4]
   16918:	ldr	r2, [sp]
   1691c:	movw	r0, #0
   16920:	bl	1682c <__assert_fail@plt+0x5744>
   16924:	mov	sp, fp
   16928:	pop	{fp, pc}
   1692c:	push	{fp, lr}
   16930:	mov	fp, sp
   16934:	sub	sp, sp, #16
   16938:	str	r0, [fp, #-4]
   1693c:	str	r1, [sp, #8]
   16940:	str	r2, [sp, #4]
   16944:	ldr	r1, [fp, #-4]
   16948:	ldr	r2, [sp, #8]
   1694c:	ldr	r3, [sp, #4]
   16950:	movw	r0, #0
   16954:	bl	168bc <__assert_fail@plt+0x57d4>
   16958:	mov	sp, fp
   1695c:	pop	{fp, pc}
   16960:	push	{fp, lr}
   16964:	mov	fp, sp
   16968:	sub	sp, sp, #72	; 0x48
   1696c:	movw	r3, #364	; 0x16c
   16970:	movt	r3, #3
   16974:	str	r0, [fp, #-4]
   16978:	str	r1, [fp, #-8]
   1697c:	strb	r2, [fp, #-9]
   16980:	add	r0, sp, #12
   16984:	mov	r1, r0
   16988:	str	r0, [sp, #8]
   1698c:	mov	r0, r1
   16990:	mov	r1, r3
   16994:	movw	r2, #48	; 0x30
   16998:	bl	10ee4 <memcpy@plt>
   1699c:	ldr	r0, [sp, #8]
   169a0:	ldrb	r1, [fp, #-9]
   169a4:	movw	r2, #1
   169a8:	bl	14870 <__assert_fail@plt+0x3788>
   169ac:	ldr	r1, [fp, #-4]
   169b0:	ldr	r2, [fp, #-8]
   169b4:	movw	r3, #0
   169b8:	str	r0, [sp, #4]
   169bc:	mov	r0, r3
   169c0:	add	r3, sp, #12
   169c4:	bl	164d8 <__assert_fail@plt+0x53f0>
   169c8:	mov	sp, fp
   169cc:	pop	{fp, pc}
   169d0:	push	{fp, lr}
   169d4:	mov	fp, sp
   169d8:	sub	sp, sp, #8
   169dc:	str	r0, [sp, #4]
   169e0:	strb	r1, [sp, #3]
   169e4:	ldr	r0, [sp, #4]
   169e8:	mvn	r1, #0
   169ec:	ldrb	r2, [sp, #3]
   169f0:	bl	16960 <__assert_fail@plt+0x5878>
   169f4:	mov	sp, fp
   169f8:	pop	{fp, pc}
   169fc:	push	{fp, lr}
   16a00:	mov	fp, sp
   16a04:	sub	sp, sp, #8
   16a08:	str	r0, [sp, #4]
   16a0c:	ldr	r0, [sp, #4]
   16a10:	movw	r1, #58	; 0x3a
   16a14:	and	r1, r1, #255	; 0xff
   16a18:	bl	169d0 <__assert_fail@plt+0x58e8>
   16a1c:	mov	sp, fp
   16a20:	pop	{fp, pc}
   16a24:	push	{fp, lr}
   16a28:	mov	fp, sp
   16a2c:	sub	sp, sp, #8
   16a30:	str	r0, [sp, #4]
   16a34:	str	r1, [sp]
   16a38:	ldr	r0, [sp, #4]
   16a3c:	ldr	r1, [sp]
   16a40:	movw	r2, #58	; 0x3a
   16a44:	and	r2, r2, #255	; 0xff
   16a48:	bl	16960 <__assert_fail@plt+0x5878>
   16a4c:	mov	sp, fp
   16a50:	pop	{fp, pc}
   16a54:	push	{fp, lr}
   16a58:	mov	fp, sp
   16a5c:	sub	sp, sp, #120	; 0x78
   16a60:	str	r0, [fp, #-4]
   16a64:	str	r1, [fp, #-8]
   16a68:	str	r2, [fp, #-12]
   16a6c:	ldr	r1, [fp, #-8]
   16a70:	add	r0, sp, #12
   16a74:	bl	1686c <__assert_fail@plt+0x5784>
   16a78:	add	r0, sp, #60	; 0x3c
   16a7c:	mov	r1, r0
   16a80:	add	r2, sp, #12
   16a84:	str	r0, [sp, #8]
   16a88:	mov	r0, r1
   16a8c:	mov	r1, r2
   16a90:	movw	r2, #48	; 0x30
   16a94:	bl	10ee4 <memcpy@plt>
   16a98:	ldr	r0, [sp, #8]
   16a9c:	movw	r1, #58	; 0x3a
   16aa0:	and	r1, r1, #255	; 0xff
   16aa4:	movw	r2, #1
   16aa8:	bl	14870 <__assert_fail@plt+0x3788>
   16aac:	ldr	r1, [fp, #-4]
   16ab0:	ldr	r2, [fp, #-12]
   16ab4:	str	r0, [sp, #4]
   16ab8:	mov	r0, r1
   16abc:	mov	r1, r2
   16ac0:	mvn	r2, #0
   16ac4:	add	r3, sp, #60	; 0x3c
   16ac8:	bl	164d8 <__assert_fail@plt+0x53f0>
   16acc:	mov	sp, fp
   16ad0:	pop	{fp, pc}
   16ad4:	push	{fp, lr}
   16ad8:	mov	fp, sp
   16adc:	sub	sp, sp, #24
   16ae0:	str	r0, [fp, #-4]
   16ae4:	str	r1, [fp, #-8]
   16ae8:	str	r2, [sp, #12]
   16aec:	str	r3, [sp, #8]
   16af0:	ldr	r0, [fp, #-4]
   16af4:	ldr	r1, [fp, #-8]
   16af8:	ldr	r2, [sp, #12]
   16afc:	ldr	r3, [sp, #8]
   16b00:	mvn	ip, #0
   16b04:	str	ip, [sp]
   16b08:	bl	16b14 <__assert_fail@plt+0x5a2c>
   16b0c:	mov	sp, fp
   16b10:	pop	{fp, pc}
   16b14:	push	{fp, lr}
   16b18:	mov	fp, sp
   16b1c:	sub	sp, sp, #72	; 0x48
   16b20:	ldr	ip, [fp, #8]
   16b24:	movw	lr, #364	; 0x16c
   16b28:	movt	lr, #3
   16b2c:	str	r0, [fp, #-4]
   16b30:	str	r1, [fp, #-8]
   16b34:	str	r2, [fp, #-12]
   16b38:	str	r3, [fp, #-16]
   16b3c:	add	r0, sp, #8
   16b40:	mov	r1, r0
   16b44:	str	r0, [sp, #4]
   16b48:	mov	r0, r1
   16b4c:	mov	r1, lr
   16b50:	movw	r2, #48	; 0x30
   16b54:	str	ip, [sp]
   16b58:	bl	10ee4 <memcpy@plt>
   16b5c:	ldr	r1, [fp, #-8]
   16b60:	ldr	r2, [fp, #-12]
   16b64:	ldr	r0, [sp, #4]
   16b68:	bl	14970 <__assert_fail@plt+0x3888>
   16b6c:	ldr	r0, [fp, #-4]
   16b70:	ldr	r1, [fp, #-16]
   16b74:	ldr	r2, [fp, #8]
   16b78:	add	r3, sp, #8
   16b7c:	bl	164d8 <__assert_fail@plt+0x53f0>
   16b80:	mov	sp, fp
   16b84:	pop	{fp, pc}
   16b88:	push	{fp, lr}
   16b8c:	mov	fp, sp
   16b90:	sub	sp, sp, #16
   16b94:	str	r0, [fp, #-4]
   16b98:	str	r1, [sp, #8]
   16b9c:	str	r2, [sp, #4]
   16ba0:	ldr	r1, [fp, #-4]
   16ba4:	ldr	r2, [sp, #8]
   16ba8:	ldr	r3, [sp, #4]
   16bac:	movw	r0, #0
   16bb0:	bl	16ad4 <__assert_fail@plt+0x59ec>
   16bb4:	mov	sp, fp
   16bb8:	pop	{fp, pc}
   16bbc:	push	{fp, lr}
   16bc0:	mov	fp, sp
   16bc4:	sub	sp, sp, #24
   16bc8:	str	r0, [fp, #-4]
   16bcc:	str	r1, [fp, #-8]
   16bd0:	str	r2, [sp, #12]
   16bd4:	str	r3, [sp, #8]
   16bd8:	ldr	r1, [fp, #-4]
   16bdc:	ldr	r2, [fp, #-8]
   16be0:	ldr	r3, [sp, #12]
   16be4:	ldr	r0, [sp, #8]
   16be8:	movw	ip, #0
   16bec:	str	r0, [sp, #4]
   16bf0:	mov	r0, ip
   16bf4:	ldr	ip, [sp, #4]
   16bf8:	str	ip, [sp]
   16bfc:	bl	16b14 <__assert_fail@plt+0x5a2c>
   16c00:	mov	sp, fp
   16c04:	pop	{fp, pc}
   16c08:	push	{fp, lr}
   16c0c:	mov	fp, sp
   16c10:	sub	sp, sp, #16
   16c14:	str	r0, [fp, #-4]
   16c18:	str	r1, [sp, #8]
   16c1c:	str	r2, [sp, #4]
   16c20:	ldr	r0, [fp, #-4]
   16c24:	ldr	r1, [sp, #8]
   16c28:	ldr	r2, [sp, #4]
   16c2c:	movw	r3, #264	; 0x108
   16c30:	movt	r3, #3
   16c34:	bl	164d8 <__assert_fail@plt+0x53f0>
   16c38:	mov	sp, fp
   16c3c:	pop	{fp, pc}
   16c40:	push	{fp, lr}
   16c44:	mov	fp, sp
   16c48:	sub	sp, sp, #8
   16c4c:	str	r0, [sp, #4]
   16c50:	str	r1, [sp]
   16c54:	ldr	r1, [sp, #4]
   16c58:	ldr	r2, [sp]
   16c5c:	movw	r0, #0
   16c60:	bl	16c08 <__assert_fail@plt+0x5b20>
   16c64:	mov	sp, fp
   16c68:	pop	{fp, pc}
   16c6c:	push	{fp, lr}
   16c70:	mov	fp, sp
   16c74:	sub	sp, sp, #8
   16c78:	str	r0, [sp, #4]
   16c7c:	str	r1, [sp]
   16c80:	ldr	r0, [sp, #4]
   16c84:	ldr	r1, [sp]
   16c88:	mvn	r2, #0
   16c8c:	bl	16c08 <__assert_fail@plt+0x5b20>
   16c90:	mov	sp, fp
   16c94:	pop	{fp, pc}
   16c98:	push	{fp, lr}
   16c9c:	mov	fp, sp
   16ca0:	sub	sp, sp, #8
   16ca4:	str	r0, [sp, #4]
   16ca8:	ldr	r1, [sp, #4]
   16cac:	movw	r0, #0
   16cb0:	bl	16c6c <__assert_fail@plt+0x5b84>
   16cb4:	mov	sp, fp
   16cb8:	pop	{fp, pc}
   16cbc:	push	{fp, lr}
   16cc0:	mov	fp, sp
   16cc4:	sub	sp, sp, #24
   16cc8:	str	r0, [fp, #-8]
   16ccc:	str	r1, [sp, #12]
   16cd0:	ldr	r0, [fp, #-8]
   16cd4:	bl	10fe0 <gettext@plt>
   16cd8:	str	r0, [sp, #8]
   16cdc:	ldr	r0, [sp, #8]
   16ce0:	ldr	r1, [fp, #-8]
   16ce4:	cmp	r0, r1
   16ce8:	beq	16cf8 <__assert_fail@plt+0x5c10>
   16cec:	ldr	r0, [sp, #8]
   16cf0:	str	r0, [fp, #-4]
   16cf4:	b	16dc4 <__assert_fail@plt+0x5cdc>
   16cf8:	bl	1db20 <__assert_fail@plt+0xca38>
   16cfc:	str	r0, [sp, #4]
   16d00:	ldr	r0, [sp, #4]
   16d04:	movw	r1, #61197	; 0xef0d
   16d08:	movt	r1, #1
   16d0c:	bl	1d998 <__assert_fail@plt+0xc8b0>
   16d10:	cmp	r0, #0
   16d14:	bne	16d4c <__assert_fail@plt+0x5c64>
   16d18:	ldr	r0, [fp, #-8]
   16d1c:	ldrb	r0, [r0]
   16d20:	cmp	r0, #96	; 0x60
   16d24:	movw	r0, #0
   16d28:	moveq	r0, #1
   16d2c:	tst	r0, #1
   16d30:	movw	r0, #61207	; 0xef17
   16d34:	movt	r0, #1
   16d38:	movw	r1, #61203	; 0xef13
   16d3c:	movt	r1, #1
   16d40:	movne	r0, r1
   16d44:	str	r0, [fp, #-4]
   16d48:	b	16dc4 <__assert_fail@plt+0x5cdc>
   16d4c:	ldr	r0, [sp, #4]
   16d50:	movw	r1, #61211	; 0xef1b
   16d54:	movt	r1, #1
   16d58:	bl	1d998 <__assert_fail@plt+0xc8b0>
   16d5c:	cmp	r0, #0
   16d60:	bne	16d98 <__assert_fail@plt+0x5cb0>
   16d64:	ldr	r0, [fp, #-8]
   16d68:	ldrb	r0, [r0]
   16d6c:	cmp	r0, #96	; 0x60
   16d70:	movw	r0, #0
   16d74:	moveq	r0, #1
   16d78:	tst	r0, #1
   16d7c:	movw	r0, #61223	; 0xef27
   16d80:	movt	r0, #1
   16d84:	movw	r1, #61219	; 0xef23
   16d88:	movt	r1, #1
   16d8c:	movne	r0, r1
   16d90:	str	r0, [fp, #-4]
   16d94:	b	16dc4 <__assert_fail@plt+0x5cdc>
   16d98:	ldr	r0, [sp, #12]
   16d9c:	cmp	r0, #9
   16da0:	movw	r0, #0
   16da4:	moveq	r0, #1
   16da8:	tst	r0, #1
   16dac:	movw	r0, #61195	; 0xef0b
   16db0:	movt	r0, #1
   16db4:	movw	r1, #61191	; 0xef07
   16db8:	movt	r1, #1
   16dbc:	movne	r0, r1
   16dc0:	str	r0, [fp, #-4]
   16dc4:	ldr	r0, [fp, #-4]
   16dc8:	mov	sp, fp
   16dcc:	pop	{fp, pc}
   16dd0:	push	{fp, lr}
   16dd4:	mov	fp, sp
   16dd8:	sub	sp, sp, #96	; 0x60
   16ddc:	str	r0, [fp, #-8]
   16de0:	str	r1, [fp, #-12]
   16de4:	str	r2, [fp, #-16]
   16de8:	b	171a0 <__assert_fail@plt+0x60b8>
   16dec:	b	16fc0 <__assert_fail@plt+0x5ed8>
   16df0:	ldr	r0, [fp, #-16]
   16df4:	cmp	r0, #0
   16df8:	bcs	16efc <__assert_fail@plt+0x5e14>
   16dfc:	ldr	r0, [fp, #-12]
   16e00:	cmp	r0, #0
   16e04:	bcs	16e8c <__assert_fail@plt+0x5da4>
   16e08:	b	16e28 <__assert_fail@plt+0x5d40>
   16e0c:	ldr	r0, [fp, #-12]
   16e10:	ldr	r1, [fp, #-16]
   16e14:	movw	r2, #127	; 0x7f
   16e18:	udiv	r1, r2, r1
   16e1c:	cmp	r0, r1
   16e20:	bcc	16f90 <__assert_fail@plt+0x5ea8>
   16e24:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16e28:	b	16e3c <__assert_fail@plt+0x5d54>
   16e2c:	ldr	r0, [fp, #-16]
   16e30:	cmp	r0, #1
   16e34:	bcc	16e4c <__assert_fail@plt+0x5d64>
   16e38:	b	16e58 <__assert_fail@plt+0x5d70>
   16e3c:	ldr	r0, [fp, #-16]
   16e40:	movw	r1, #0
   16e44:	cmp	r1, r0
   16e48:	bcs	16e58 <__assert_fail@plt+0x5d70>
   16e4c:	movw	r0, #0
   16e50:	str	r0, [fp, #-24]	; 0xffffffe8
   16e54:	b	16e70 <__assert_fail@plt+0x5d88>
   16e58:	ldr	r0, [fp, #-16]
   16e5c:	movw	r1, #0
   16e60:	sub	r0, r1, r0
   16e64:	movw	r1, #127	; 0x7f
   16e68:	udiv	r0, r1, r0
   16e6c:	str	r0, [fp, #-24]	; 0xffffffe8
   16e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e74:	ldr	r1, [fp, #-12]
   16e78:	mvn	r2, #0
   16e7c:	sub	r1, r2, r1
   16e80:	cmp	r0, r1
   16e84:	bls	16f90 <__assert_fail@plt+0x5ea8>
   16e88:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16e8c:	ldr	r0, [fp, #-16]
   16e90:	cmn	r0, #1
   16e94:	bne	16ee0 <__assert_fail@plt+0x5df8>
   16e98:	b	16eb8 <__assert_fail@plt+0x5dd0>
   16e9c:	ldr	r0, [fp, #-12]
   16ea0:	mvn	r1, #127	; 0x7f
   16ea4:	add	r0, r0, r1
   16ea8:	movw	r1, #0
   16eac:	cmp	r1, r0
   16eb0:	bcc	16f90 <__assert_fail@plt+0x5ea8>
   16eb4:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16eb8:	ldr	r0, [fp, #-12]
   16ebc:	movw	r1, #0
   16ec0:	cmp	r1, r0
   16ec4:	bcs	16fa8 <__assert_fail@plt+0x5ec0>
   16ec8:	ldr	r0, [fp, #-12]
   16ecc:	sub	r0, r0, #1
   16ed0:	movw	r1, #127	; 0x7f
   16ed4:	cmp	r1, r0
   16ed8:	bcc	16f90 <__assert_fail@plt+0x5ea8>
   16edc:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16ee0:	ldr	r0, [fp, #-16]
   16ee4:	mvn	r1, #127	; 0x7f
   16ee8:	udiv	r0, r1, r0
   16eec:	ldr	r1, [fp, #-12]
   16ef0:	cmp	r0, r1
   16ef4:	bcc	16f90 <__assert_fail@plt+0x5ea8>
   16ef8:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16efc:	ldr	r0, [fp, #-16]
   16f00:	cmp	r0, #0
   16f04:	bne	16f0c <__assert_fail@plt+0x5e24>
   16f08:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16f0c:	ldr	r0, [fp, #-12]
   16f10:	cmp	r0, #0
   16f14:	bcs	16f78 <__assert_fail@plt+0x5e90>
   16f18:	ldr	r0, [fp, #-12]
   16f1c:	cmn	r0, #1
   16f20:	bne	16f5c <__assert_fail@plt+0x5e74>
   16f24:	b	16f44 <__assert_fail@plt+0x5e5c>
   16f28:	ldr	r0, [fp, #-16]
   16f2c:	mvn	r1, #127	; 0x7f
   16f30:	add	r0, r0, r1
   16f34:	movw	r1, #0
   16f38:	cmp	r1, r0
   16f3c:	bcc	16f90 <__assert_fail@plt+0x5ea8>
   16f40:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16f44:	ldr	r0, [fp, #-16]
   16f48:	sub	r0, r0, #1
   16f4c:	movw	r1, #127	; 0x7f
   16f50:	cmp	r1, r0
   16f54:	bcc	16f90 <__assert_fail@plt+0x5ea8>
   16f58:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16f5c:	ldr	r0, [fp, #-12]
   16f60:	mvn	r1, #127	; 0x7f
   16f64:	udiv	r0, r1, r0
   16f68:	ldr	r1, [fp, #-16]
   16f6c:	cmp	r0, r1
   16f70:	bcc	16f90 <__assert_fail@plt+0x5ea8>
   16f74:	b	16fa8 <__assert_fail@plt+0x5ec0>
   16f78:	ldr	r0, [fp, #-16]
   16f7c:	movw	r1, #127	; 0x7f
   16f80:	udiv	r0, r1, r0
   16f84:	ldr	r1, [fp, #-12]
   16f88:	cmp	r0, r1
   16f8c:	bcs	16fa8 <__assert_fail@plt+0x5ec0>
   16f90:	ldr	r0, [fp, #-12]
   16f94:	ldr	r1, [fp, #-16]
   16f98:	mul	r0, r0, r1
   16f9c:	sxtb	r0, r0
   16fa0:	str	r0, [fp, #-20]	; 0xffffffec
   16fa4:	b	180d0 <__assert_fail@plt+0x6fe8>
   16fa8:	ldr	r0, [fp, #-12]
   16fac:	ldr	r1, [fp, #-16]
   16fb0:	mul	r0, r0, r1
   16fb4:	sxtb	r0, r0
   16fb8:	str	r0, [fp, #-20]	; 0xffffffec
   16fbc:	b	180e8 <__assert_fail@plt+0x7000>
   16fc0:	ldr	r0, [fp, #-16]
   16fc4:	cmp	r0, #0
   16fc8:	bcs	170d4 <__assert_fail@plt+0x5fec>
   16fcc:	ldr	r0, [fp, #-12]
   16fd0:	cmp	r0, #0
   16fd4:	bcs	1705c <__assert_fail@plt+0x5f74>
   16fd8:	b	16ff8 <__assert_fail@plt+0x5f10>
   16fdc:	ldr	r0, [fp, #-12]
   16fe0:	ldr	r1, [fp, #-16]
   16fe4:	movw	r2, #255	; 0xff
   16fe8:	udiv	r1, r2, r1
   16fec:	cmp	r0, r1
   16ff0:	bcc	17170 <__assert_fail@plt+0x6088>
   16ff4:	b	17188 <__assert_fail@plt+0x60a0>
   16ff8:	b	1700c <__assert_fail@plt+0x5f24>
   16ffc:	ldr	r0, [fp, #-16]
   17000:	cmp	r0, #1
   17004:	bcc	1701c <__assert_fail@plt+0x5f34>
   17008:	b	17028 <__assert_fail@plt+0x5f40>
   1700c:	ldr	r0, [fp, #-16]
   17010:	movw	r1, #0
   17014:	cmp	r1, r0
   17018:	bcs	17028 <__assert_fail@plt+0x5f40>
   1701c:	movw	r0, #0
   17020:	str	r0, [fp, #-28]	; 0xffffffe4
   17024:	b	17040 <__assert_fail@plt+0x5f58>
   17028:	ldr	r0, [fp, #-16]
   1702c:	movw	r1, #0
   17030:	sub	r0, r1, r0
   17034:	movw	r1, #255	; 0xff
   17038:	udiv	r0, r1, r0
   1703c:	str	r0, [fp, #-28]	; 0xffffffe4
   17040:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17044:	ldr	r1, [fp, #-12]
   17048:	mvn	r2, #0
   1704c:	sub	r1, r2, r1
   17050:	cmp	r0, r1
   17054:	bls	17170 <__assert_fail@plt+0x6088>
   17058:	b	17188 <__assert_fail@plt+0x60a0>
   1705c:	b	17064 <__assert_fail@plt+0x5f7c>
   17060:	b	17068 <__assert_fail@plt+0x5f80>
   17064:	b	170b8 <__assert_fail@plt+0x5fd0>
   17068:	ldr	r0, [fp, #-16]
   1706c:	cmn	r0, #1
   17070:	bne	170b8 <__assert_fail@plt+0x5fd0>
   17074:	b	17090 <__assert_fail@plt+0x5fa8>
   17078:	ldr	r0, [fp, #-12]
   1707c:	add	r0, r0, #0
   17080:	movw	r1, #0
   17084:	cmp	r1, r0
   17088:	bcc	17170 <__assert_fail@plt+0x6088>
   1708c:	b	17188 <__assert_fail@plt+0x60a0>
   17090:	ldr	r0, [fp, #-12]
   17094:	movw	r1, #0
   17098:	cmp	r1, r0
   1709c:	bcs	17188 <__assert_fail@plt+0x60a0>
   170a0:	ldr	r0, [fp, #-12]
   170a4:	sub	r0, r0, #1
   170a8:	mvn	r1, #0
   170ac:	cmp	r1, r0
   170b0:	bcc	17170 <__assert_fail@plt+0x6088>
   170b4:	b	17188 <__assert_fail@plt+0x60a0>
   170b8:	ldr	r0, [fp, #-16]
   170bc:	movw	r1, #0
   170c0:	udiv	r0, r1, r0
   170c4:	ldr	r1, [fp, #-12]
   170c8:	cmp	r0, r1
   170cc:	bcc	17170 <__assert_fail@plt+0x6088>
   170d0:	b	17188 <__assert_fail@plt+0x60a0>
   170d4:	ldr	r0, [fp, #-16]
   170d8:	cmp	r0, #0
   170dc:	bne	170e4 <__assert_fail@plt+0x5ffc>
   170e0:	b	17188 <__assert_fail@plt+0x60a0>
   170e4:	ldr	r0, [fp, #-12]
   170e8:	cmp	r0, #0
   170ec:	bcs	17158 <__assert_fail@plt+0x6070>
   170f0:	b	170f8 <__assert_fail@plt+0x6010>
   170f4:	b	170fc <__assert_fail@plt+0x6014>
   170f8:	b	1713c <__assert_fail@plt+0x6054>
   170fc:	ldr	r0, [fp, #-12]
   17100:	cmn	r0, #1
   17104:	bne	1713c <__assert_fail@plt+0x6054>
   17108:	b	17124 <__assert_fail@plt+0x603c>
   1710c:	ldr	r0, [fp, #-16]
   17110:	add	r0, r0, #0
   17114:	movw	r1, #0
   17118:	cmp	r1, r0
   1711c:	bcc	17170 <__assert_fail@plt+0x6088>
   17120:	b	17188 <__assert_fail@plt+0x60a0>
   17124:	ldr	r0, [fp, #-16]
   17128:	sub	r0, r0, #1
   1712c:	mvn	r1, #0
   17130:	cmp	r1, r0
   17134:	bcc	17170 <__assert_fail@plt+0x6088>
   17138:	b	17188 <__assert_fail@plt+0x60a0>
   1713c:	ldr	r0, [fp, #-12]
   17140:	movw	r1, #0
   17144:	udiv	r0, r1, r0
   17148:	ldr	r1, [fp, #-16]
   1714c:	cmp	r0, r1
   17150:	bcc	17170 <__assert_fail@plt+0x6088>
   17154:	b	17188 <__assert_fail@plt+0x60a0>
   17158:	ldr	r0, [fp, #-16]
   1715c:	movw	r1, #255	; 0xff
   17160:	udiv	r0, r1, r0
   17164:	ldr	r1, [fp, #-12]
   17168:	cmp	r0, r1
   1716c:	bcs	17188 <__assert_fail@plt+0x60a0>
   17170:	ldr	r0, [fp, #-12]
   17174:	ldr	r1, [fp, #-16]
   17178:	mul	r0, r0, r1
   1717c:	and	r0, r0, #255	; 0xff
   17180:	str	r0, [fp, #-20]	; 0xffffffec
   17184:	b	180d0 <__assert_fail@plt+0x6fe8>
   17188:	ldr	r0, [fp, #-12]
   1718c:	ldr	r1, [fp, #-16]
   17190:	mul	r0, r0, r1
   17194:	and	r0, r0, #255	; 0xff
   17198:	str	r0, [fp, #-20]	; 0xffffffec
   1719c:	b	180e8 <__assert_fail@plt+0x7000>
   171a0:	b	17558 <__assert_fail@plt+0x6470>
   171a4:	b	17378 <__assert_fail@plt+0x6290>
   171a8:	ldr	r0, [fp, #-16]
   171ac:	cmp	r0, #0
   171b0:	bcs	172b4 <__assert_fail@plt+0x61cc>
   171b4:	ldr	r0, [fp, #-12]
   171b8:	cmp	r0, #0
   171bc:	bcs	17244 <__assert_fail@plt+0x615c>
   171c0:	b	171e0 <__assert_fail@plt+0x60f8>
   171c4:	ldr	r0, [fp, #-12]
   171c8:	ldr	r1, [fp, #-16]
   171cc:	movw	r2, #32767	; 0x7fff
   171d0:	udiv	r1, r2, r1
   171d4:	cmp	r0, r1
   171d8:	bcc	17348 <__assert_fail@plt+0x6260>
   171dc:	b	17360 <__assert_fail@plt+0x6278>
   171e0:	b	171f4 <__assert_fail@plt+0x610c>
   171e4:	ldr	r0, [fp, #-16]
   171e8:	cmp	r0, #1
   171ec:	bcc	17204 <__assert_fail@plt+0x611c>
   171f0:	b	17210 <__assert_fail@plt+0x6128>
   171f4:	ldr	r0, [fp, #-16]
   171f8:	movw	r1, #0
   171fc:	cmp	r1, r0
   17200:	bcs	17210 <__assert_fail@plt+0x6128>
   17204:	movw	r0, #0
   17208:	str	r0, [fp, #-32]	; 0xffffffe0
   1720c:	b	17228 <__assert_fail@plt+0x6140>
   17210:	ldr	r0, [fp, #-16]
   17214:	movw	r1, #0
   17218:	sub	r0, r1, r0
   1721c:	movw	r1, #32767	; 0x7fff
   17220:	udiv	r0, r1, r0
   17224:	str	r0, [fp, #-32]	; 0xffffffe0
   17228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1722c:	ldr	r1, [fp, #-12]
   17230:	mvn	r2, #0
   17234:	sub	r1, r2, r1
   17238:	cmp	r0, r1
   1723c:	bls	17348 <__assert_fail@plt+0x6260>
   17240:	b	17360 <__assert_fail@plt+0x6278>
   17244:	ldr	r0, [fp, #-16]
   17248:	cmn	r0, #1
   1724c:	bne	17298 <__assert_fail@plt+0x61b0>
   17250:	b	17270 <__assert_fail@plt+0x6188>
   17254:	ldr	r0, [pc, #3760]	; 1810c <__assert_fail@plt+0x7024>
   17258:	ldr	r1, [fp, #-12]
   1725c:	add	r0, r1, r0
   17260:	movw	r1, #0
   17264:	cmp	r1, r0
   17268:	bcc	17348 <__assert_fail@plt+0x6260>
   1726c:	b	17360 <__assert_fail@plt+0x6278>
   17270:	ldr	r0, [fp, #-12]
   17274:	movw	r1, #0
   17278:	cmp	r1, r0
   1727c:	bcs	17360 <__assert_fail@plt+0x6278>
   17280:	ldr	r0, [fp, #-12]
   17284:	sub	r0, r0, #1
   17288:	movw	r1, #32767	; 0x7fff
   1728c:	cmp	r1, r0
   17290:	bcc	17348 <__assert_fail@plt+0x6260>
   17294:	b	17360 <__assert_fail@plt+0x6278>
   17298:	ldr	r0, [pc, #3692]	; 1810c <__assert_fail@plt+0x7024>
   1729c:	ldr	r1, [fp, #-16]
   172a0:	udiv	r0, r0, r1
   172a4:	ldr	r1, [fp, #-12]
   172a8:	cmp	r0, r1
   172ac:	bcc	17348 <__assert_fail@plt+0x6260>
   172b0:	b	17360 <__assert_fail@plt+0x6278>
   172b4:	ldr	r0, [fp, #-16]
   172b8:	cmp	r0, #0
   172bc:	bne	172c4 <__assert_fail@plt+0x61dc>
   172c0:	b	17360 <__assert_fail@plt+0x6278>
   172c4:	ldr	r0, [fp, #-12]
   172c8:	cmp	r0, #0
   172cc:	bcs	17330 <__assert_fail@plt+0x6248>
   172d0:	ldr	r0, [fp, #-12]
   172d4:	cmn	r0, #1
   172d8:	bne	17314 <__assert_fail@plt+0x622c>
   172dc:	b	172fc <__assert_fail@plt+0x6214>
   172e0:	ldr	r0, [pc, #3620]	; 1810c <__assert_fail@plt+0x7024>
   172e4:	ldr	r1, [fp, #-16]
   172e8:	add	r0, r1, r0
   172ec:	movw	r1, #0
   172f0:	cmp	r1, r0
   172f4:	bcc	17348 <__assert_fail@plt+0x6260>
   172f8:	b	17360 <__assert_fail@plt+0x6278>
   172fc:	ldr	r0, [fp, #-16]
   17300:	sub	r0, r0, #1
   17304:	movw	r1, #32767	; 0x7fff
   17308:	cmp	r1, r0
   1730c:	bcc	17348 <__assert_fail@plt+0x6260>
   17310:	b	17360 <__assert_fail@plt+0x6278>
   17314:	ldr	r0, [pc, #3568]	; 1810c <__assert_fail@plt+0x7024>
   17318:	ldr	r1, [fp, #-12]
   1731c:	udiv	r0, r0, r1
   17320:	ldr	r1, [fp, #-16]
   17324:	cmp	r0, r1
   17328:	bcc	17348 <__assert_fail@plt+0x6260>
   1732c:	b	17360 <__assert_fail@plt+0x6278>
   17330:	ldr	r0, [fp, #-16]
   17334:	movw	r1, #32767	; 0x7fff
   17338:	udiv	r0, r1, r0
   1733c:	ldr	r1, [fp, #-12]
   17340:	cmp	r0, r1
   17344:	bcs	17360 <__assert_fail@plt+0x6278>
   17348:	ldr	r0, [fp, #-12]
   1734c:	ldr	r1, [fp, #-16]
   17350:	mul	r0, r0, r1
   17354:	sxth	r0, r0
   17358:	str	r0, [fp, #-20]	; 0xffffffec
   1735c:	b	180d0 <__assert_fail@plt+0x6fe8>
   17360:	ldr	r0, [fp, #-12]
   17364:	ldr	r1, [fp, #-16]
   17368:	mul	r0, r0, r1
   1736c:	sxth	r0, r0
   17370:	str	r0, [fp, #-20]	; 0xffffffec
   17374:	b	180e8 <__assert_fail@plt+0x7000>
   17378:	ldr	r0, [fp, #-16]
   1737c:	cmp	r0, #0
   17380:	bcs	1748c <__assert_fail@plt+0x63a4>
   17384:	ldr	r0, [fp, #-12]
   17388:	cmp	r0, #0
   1738c:	bcs	17414 <__assert_fail@plt+0x632c>
   17390:	b	173b0 <__assert_fail@plt+0x62c8>
   17394:	ldr	r0, [fp, #-12]
   17398:	ldr	r1, [fp, #-16]
   1739c:	movw	r2, #65535	; 0xffff
   173a0:	udiv	r1, r2, r1
   173a4:	cmp	r0, r1
   173a8:	bcc	17528 <__assert_fail@plt+0x6440>
   173ac:	b	17540 <__assert_fail@plt+0x6458>
   173b0:	b	173c4 <__assert_fail@plt+0x62dc>
   173b4:	ldr	r0, [fp, #-16]
   173b8:	cmp	r0, #1
   173bc:	bcc	173d4 <__assert_fail@plt+0x62ec>
   173c0:	b	173e0 <__assert_fail@plt+0x62f8>
   173c4:	ldr	r0, [fp, #-16]
   173c8:	movw	r1, #0
   173cc:	cmp	r1, r0
   173d0:	bcs	173e0 <__assert_fail@plt+0x62f8>
   173d4:	movw	r0, #0
   173d8:	str	r0, [fp, #-36]	; 0xffffffdc
   173dc:	b	173f8 <__assert_fail@plt+0x6310>
   173e0:	ldr	r0, [fp, #-16]
   173e4:	movw	r1, #0
   173e8:	sub	r0, r1, r0
   173ec:	movw	r1, #65535	; 0xffff
   173f0:	udiv	r0, r1, r0
   173f4:	str	r0, [fp, #-36]	; 0xffffffdc
   173f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   173fc:	ldr	r1, [fp, #-12]
   17400:	mvn	r2, #0
   17404:	sub	r1, r2, r1
   17408:	cmp	r0, r1
   1740c:	bls	17528 <__assert_fail@plt+0x6440>
   17410:	b	17540 <__assert_fail@plt+0x6458>
   17414:	b	1741c <__assert_fail@plt+0x6334>
   17418:	b	17420 <__assert_fail@plt+0x6338>
   1741c:	b	17470 <__assert_fail@plt+0x6388>
   17420:	ldr	r0, [fp, #-16]
   17424:	cmn	r0, #1
   17428:	bne	17470 <__assert_fail@plt+0x6388>
   1742c:	b	17448 <__assert_fail@plt+0x6360>
   17430:	ldr	r0, [fp, #-12]
   17434:	add	r0, r0, #0
   17438:	movw	r1, #0
   1743c:	cmp	r1, r0
   17440:	bcc	17528 <__assert_fail@plt+0x6440>
   17444:	b	17540 <__assert_fail@plt+0x6458>
   17448:	ldr	r0, [fp, #-12]
   1744c:	movw	r1, #0
   17450:	cmp	r1, r0
   17454:	bcs	17540 <__assert_fail@plt+0x6458>
   17458:	ldr	r0, [fp, #-12]
   1745c:	sub	r0, r0, #1
   17460:	mvn	r1, #0
   17464:	cmp	r1, r0
   17468:	bcc	17528 <__assert_fail@plt+0x6440>
   1746c:	b	17540 <__assert_fail@plt+0x6458>
   17470:	ldr	r0, [fp, #-16]
   17474:	movw	r1, #0
   17478:	udiv	r0, r1, r0
   1747c:	ldr	r1, [fp, #-12]
   17480:	cmp	r0, r1
   17484:	bcc	17528 <__assert_fail@plt+0x6440>
   17488:	b	17540 <__assert_fail@plt+0x6458>
   1748c:	ldr	r0, [fp, #-16]
   17490:	cmp	r0, #0
   17494:	bne	1749c <__assert_fail@plt+0x63b4>
   17498:	b	17540 <__assert_fail@plt+0x6458>
   1749c:	ldr	r0, [fp, #-12]
   174a0:	cmp	r0, #0
   174a4:	bcs	17510 <__assert_fail@plt+0x6428>
   174a8:	b	174b0 <__assert_fail@plt+0x63c8>
   174ac:	b	174b4 <__assert_fail@plt+0x63cc>
   174b0:	b	174f4 <__assert_fail@plt+0x640c>
   174b4:	ldr	r0, [fp, #-12]
   174b8:	cmn	r0, #1
   174bc:	bne	174f4 <__assert_fail@plt+0x640c>
   174c0:	b	174dc <__assert_fail@plt+0x63f4>
   174c4:	ldr	r0, [fp, #-16]
   174c8:	add	r0, r0, #0
   174cc:	movw	r1, #0
   174d0:	cmp	r1, r0
   174d4:	bcc	17528 <__assert_fail@plt+0x6440>
   174d8:	b	17540 <__assert_fail@plt+0x6458>
   174dc:	ldr	r0, [fp, #-16]
   174e0:	sub	r0, r0, #1
   174e4:	mvn	r1, #0
   174e8:	cmp	r1, r0
   174ec:	bcc	17528 <__assert_fail@plt+0x6440>
   174f0:	b	17540 <__assert_fail@plt+0x6458>
   174f4:	ldr	r0, [fp, #-12]
   174f8:	movw	r1, #0
   174fc:	udiv	r0, r1, r0
   17500:	ldr	r1, [fp, #-16]
   17504:	cmp	r0, r1
   17508:	bcc	17528 <__assert_fail@plt+0x6440>
   1750c:	b	17540 <__assert_fail@plt+0x6458>
   17510:	ldr	r0, [fp, #-16]
   17514:	movw	r1, #65535	; 0xffff
   17518:	udiv	r0, r1, r0
   1751c:	ldr	r1, [fp, #-12]
   17520:	cmp	r0, r1
   17524:	bcs	17540 <__assert_fail@plt+0x6458>
   17528:	ldr	r0, [fp, #-12]
   1752c:	ldr	r1, [fp, #-16]
   17530:	mul	r0, r0, r1
   17534:	uxth	r0, r0
   17538:	str	r0, [fp, #-20]	; 0xffffffec
   1753c:	b	180d0 <__assert_fail@plt+0x6fe8>
   17540:	ldr	r0, [fp, #-12]
   17544:	ldr	r1, [fp, #-16]
   17548:	mul	r0, r0, r1
   1754c:	uxth	r0, r0
   17550:	str	r0, [fp, #-20]	; 0xffffffec
   17554:	b	180e8 <__assert_fail@plt+0x7000>
   17558:	b	1755c <__assert_fail@plt+0x6474>
   1755c:	b	17720 <__assert_fail@plt+0x6638>
   17560:	ldr	r0, [fp, #-16]
   17564:	cmp	r0, #0
   17568:	bcs	17668 <__assert_fail@plt+0x6580>
   1756c:	ldr	r0, [fp, #-12]
   17570:	cmp	r0, #0
   17574:	bcs	175fc <__assert_fail@plt+0x6514>
   17578:	b	17598 <__assert_fail@plt+0x64b0>
   1757c:	ldr	r0, [pc, #2944]	; 18104 <__assert_fail@plt+0x701c>
   17580:	ldr	r1, [fp, #-12]
   17584:	ldr	r2, [fp, #-16]
   17588:	udiv	r0, r0, r2
   1758c:	cmp	r1, r0
   17590:	bcc	176f8 <__assert_fail@plt+0x6610>
   17594:	b	1770c <__assert_fail@plt+0x6624>
   17598:	b	175ac <__assert_fail@plt+0x64c4>
   1759c:	ldr	r0, [fp, #-16]
   175a0:	cmp	r0, #1
   175a4:	bcc	175bc <__assert_fail@plt+0x64d4>
   175a8:	b	175c8 <__assert_fail@plt+0x64e0>
   175ac:	ldr	r0, [fp, #-16]
   175b0:	movw	r1, #0
   175b4:	cmp	r1, r0
   175b8:	bcs	175c8 <__assert_fail@plt+0x64e0>
   175bc:	movw	r0, #0
   175c0:	str	r0, [fp, #-40]	; 0xffffffd8
   175c4:	b	175e0 <__assert_fail@plt+0x64f8>
   175c8:	ldr	r0, [pc, #2868]	; 18104 <__assert_fail@plt+0x701c>
   175cc:	ldr	r1, [fp, #-16]
   175d0:	movw	r2, #0
   175d4:	sub	r1, r2, r1
   175d8:	udiv	r0, r0, r1
   175dc:	str	r0, [fp, #-40]	; 0xffffffd8
   175e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175e4:	ldr	r1, [fp, #-12]
   175e8:	mvn	r2, #0
   175ec:	sub	r1, r2, r1
   175f0:	cmp	r0, r1
   175f4:	bls	176f8 <__assert_fail@plt+0x6610>
   175f8:	b	1770c <__assert_fail@plt+0x6624>
   175fc:	ldr	r0, [fp, #-16]
   17600:	cmn	r0, #1
   17604:	bne	1764c <__assert_fail@plt+0x6564>
   17608:	b	17624 <__assert_fail@plt+0x653c>
   1760c:	ldr	r0, [fp, #-12]
   17610:	add	r0, r0, #-2147483648	; 0x80000000
   17614:	movw	r1, #0
   17618:	cmp	r1, r0
   1761c:	bcc	176f8 <__assert_fail@plt+0x6610>
   17620:	b	1770c <__assert_fail@plt+0x6624>
   17624:	ldr	r0, [fp, #-12]
   17628:	movw	r1, #0
   1762c:	cmp	r1, r0
   17630:	bcs	1770c <__assert_fail@plt+0x6624>
   17634:	ldr	r0, [pc, #2760]	; 18104 <__assert_fail@plt+0x701c>
   17638:	ldr	r1, [fp, #-12]
   1763c:	sub	r1, r1, #1
   17640:	cmp	r0, r1
   17644:	bcc	176f8 <__assert_fail@plt+0x6610>
   17648:	b	1770c <__assert_fail@plt+0x6624>
   1764c:	ldr	r0, [pc, #2740]	; 18108 <__assert_fail@plt+0x7020>
   17650:	ldr	r1, [fp, #-16]
   17654:	udiv	r0, r0, r1
   17658:	ldr	r1, [fp, #-12]
   1765c:	cmp	r0, r1
   17660:	bcc	176f8 <__assert_fail@plt+0x6610>
   17664:	b	1770c <__assert_fail@plt+0x6624>
   17668:	ldr	r0, [fp, #-16]
   1766c:	cmp	r0, #0
   17670:	bne	17678 <__assert_fail@plt+0x6590>
   17674:	b	1770c <__assert_fail@plt+0x6624>
   17678:	ldr	r0, [fp, #-12]
   1767c:	cmp	r0, #0
   17680:	bcs	176e0 <__assert_fail@plt+0x65f8>
   17684:	ldr	r0, [fp, #-12]
   17688:	cmn	r0, #1
   1768c:	bne	176c4 <__assert_fail@plt+0x65dc>
   17690:	b	176ac <__assert_fail@plt+0x65c4>
   17694:	ldr	r0, [fp, #-16]
   17698:	add	r0, r0, #-2147483648	; 0x80000000
   1769c:	movw	r1, #0
   176a0:	cmp	r1, r0
   176a4:	bcc	176f8 <__assert_fail@plt+0x6610>
   176a8:	b	1770c <__assert_fail@plt+0x6624>
   176ac:	ldr	r0, [pc, #2640]	; 18104 <__assert_fail@plt+0x701c>
   176b0:	ldr	r1, [fp, #-16]
   176b4:	sub	r1, r1, #1
   176b8:	cmp	r0, r1
   176bc:	bcc	176f8 <__assert_fail@plt+0x6610>
   176c0:	b	1770c <__assert_fail@plt+0x6624>
   176c4:	ldr	r0, [pc, #2620]	; 18108 <__assert_fail@plt+0x7020>
   176c8:	ldr	r1, [fp, #-12]
   176cc:	udiv	r0, r0, r1
   176d0:	ldr	r1, [fp, #-16]
   176d4:	cmp	r0, r1
   176d8:	bcc	176f8 <__assert_fail@plt+0x6610>
   176dc:	b	1770c <__assert_fail@plt+0x6624>
   176e0:	ldr	r0, [pc, #2588]	; 18104 <__assert_fail@plt+0x701c>
   176e4:	ldr	r1, [fp, #-16]
   176e8:	udiv	r0, r0, r1
   176ec:	ldr	r1, [fp, #-12]
   176f0:	cmp	r0, r1
   176f4:	bcs	1770c <__assert_fail@plt+0x6624>
   176f8:	ldr	r0, [fp, #-12]
   176fc:	ldr	r1, [fp, #-16]
   17700:	mul	r0, r0, r1
   17704:	str	r0, [fp, #-20]	; 0xffffffec
   17708:	b	180d0 <__assert_fail@plt+0x6fe8>
   1770c:	ldr	r0, [fp, #-12]
   17710:	ldr	r1, [fp, #-16]
   17714:	mul	r0, r0, r1
   17718:	str	r0, [fp, #-20]	; 0xffffffec
   1771c:	b	180e8 <__assert_fail@plt+0x7000>
   17720:	ldr	r0, [fp, #-16]
   17724:	cmp	r0, #0
   17728:	bcs	17834 <__assert_fail@plt+0x674c>
   1772c:	ldr	r0, [fp, #-12]
   17730:	cmp	r0, #0
   17734:	bcs	177bc <__assert_fail@plt+0x66d4>
   17738:	b	17758 <__assert_fail@plt+0x6670>
   1773c:	ldr	r0, [fp, #-12]
   17740:	ldr	r1, [fp, #-16]
   17744:	mvn	r2, #0
   17748:	udiv	r1, r2, r1
   1774c:	cmp	r0, r1
   17750:	bcc	178d0 <__assert_fail@plt+0x67e8>
   17754:	b	178e4 <__assert_fail@plt+0x67fc>
   17758:	b	1776c <__assert_fail@plt+0x6684>
   1775c:	ldr	r0, [fp, #-16]
   17760:	cmp	r0, #1
   17764:	bcc	1777c <__assert_fail@plt+0x6694>
   17768:	b	17788 <__assert_fail@plt+0x66a0>
   1776c:	ldr	r0, [fp, #-16]
   17770:	movw	r1, #0
   17774:	cmp	r1, r0
   17778:	bcs	17788 <__assert_fail@plt+0x66a0>
   1777c:	movw	r0, #1
   17780:	str	r0, [fp, #-44]	; 0xffffffd4
   17784:	b	177a0 <__assert_fail@plt+0x66b8>
   17788:	ldr	r0, [fp, #-16]
   1778c:	movw	r1, #0
   17790:	sub	r0, r1, r0
   17794:	mvn	r1, #0
   17798:	udiv	r0, r1, r0
   1779c:	str	r0, [fp, #-44]	; 0xffffffd4
   177a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   177a4:	ldr	r1, [fp, #-12]
   177a8:	mvn	r2, #0
   177ac:	sub	r1, r2, r1
   177b0:	cmp	r0, r1
   177b4:	bls	178d0 <__assert_fail@plt+0x67e8>
   177b8:	b	178e4 <__assert_fail@plt+0x67fc>
   177bc:	b	177c4 <__assert_fail@plt+0x66dc>
   177c0:	b	177c8 <__assert_fail@plt+0x66e0>
   177c4:	b	17818 <__assert_fail@plt+0x6730>
   177c8:	ldr	r0, [fp, #-16]
   177cc:	cmn	r0, #1
   177d0:	bne	17818 <__assert_fail@plt+0x6730>
   177d4:	b	177f0 <__assert_fail@plt+0x6708>
   177d8:	ldr	r0, [fp, #-12]
   177dc:	add	r0, r0, #0
   177e0:	movw	r1, #0
   177e4:	cmp	r1, r0
   177e8:	bcc	178d0 <__assert_fail@plt+0x67e8>
   177ec:	b	178e4 <__assert_fail@plt+0x67fc>
   177f0:	ldr	r0, [fp, #-12]
   177f4:	movw	r1, #0
   177f8:	cmp	r1, r0
   177fc:	bcs	178e4 <__assert_fail@plt+0x67fc>
   17800:	ldr	r0, [fp, #-12]
   17804:	sub	r0, r0, #1
   17808:	mvn	r1, #0
   1780c:	cmp	r1, r0
   17810:	bcc	178d0 <__assert_fail@plt+0x67e8>
   17814:	b	178e4 <__assert_fail@plt+0x67fc>
   17818:	ldr	r0, [fp, #-16]
   1781c:	movw	r1, #0
   17820:	udiv	r0, r1, r0
   17824:	ldr	r1, [fp, #-12]
   17828:	cmp	r0, r1
   1782c:	bcc	178d0 <__assert_fail@plt+0x67e8>
   17830:	b	178e4 <__assert_fail@plt+0x67fc>
   17834:	ldr	r0, [fp, #-16]
   17838:	cmp	r0, #0
   1783c:	bne	17844 <__assert_fail@plt+0x675c>
   17840:	b	178e4 <__assert_fail@plt+0x67fc>
   17844:	ldr	r0, [fp, #-12]
   17848:	cmp	r0, #0
   1784c:	bcs	178b8 <__assert_fail@plt+0x67d0>
   17850:	b	17858 <__assert_fail@plt+0x6770>
   17854:	b	1785c <__assert_fail@plt+0x6774>
   17858:	b	1789c <__assert_fail@plt+0x67b4>
   1785c:	ldr	r0, [fp, #-12]
   17860:	cmn	r0, #1
   17864:	bne	1789c <__assert_fail@plt+0x67b4>
   17868:	b	17884 <__assert_fail@plt+0x679c>
   1786c:	ldr	r0, [fp, #-16]
   17870:	add	r0, r0, #0
   17874:	movw	r1, #0
   17878:	cmp	r1, r0
   1787c:	bcc	178d0 <__assert_fail@plt+0x67e8>
   17880:	b	178e4 <__assert_fail@plt+0x67fc>
   17884:	ldr	r0, [fp, #-16]
   17888:	sub	r0, r0, #1
   1788c:	mvn	r1, #0
   17890:	cmp	r1, r0
   17894:	bcc	178d0 <__assert_fail@plt+0x67e8>
   17898:	b	178e4 <__assert_fail@plt+0x67fc>
   1789c:	ldr	r0, [fp, #-12]
   178a0:	movw	r1, #0
   178a4:	udiv	r0, r1, r0
   178a8:	ldr	r1, [fp, #-16]
   178ac:	cmp	r0, r1
   178b0:	bcc	178d0 <__assert_fail@plt+0x67e8>
   178b4:	b	178e4 <__assert_fail@plt+0x67fc>
   178b8:	ldr	r0, [fp, #-16]
   178bc:	mvn	r1, #0
   178c0:	udiv	r0, r1, r0
   178c4:	ldr	r1, [fp, #-12]
   178c8:	cmp	r0, r1
   178cc:	bcs	178e4 <__assert_fail@plt+0x67fc>
   178d0:	ldr	r0, [fp, #-12]
   178d4:	ldr	r1, [fp, #-16]
   178d8:	mul	r0, r0, r1
   178dc:	str	r0, [fp, #-20]	; 0xffffffec
   178e0:	b	180d0 <__assert_fail@plt+0x6fe8>
   178e4:	ldr	r0, [fp, #-12]
   178e8:	ldr	r1, [fp, #-16]
   178ec:	mul	r0, r0, r1
   178f0:	str	r0, [fp, #-20]	; 0xffffffec
   178f4:	b	180e8 <__assert_fail@plt+0x7000>
   178f8:	b	178fc <__assert_fail@plt+0x6814>
   178fc:	b	17ac0 <__assert_fail@plt+0x69d8>
   17900:	ldr	r0, [fp, #-16]
   17904:	cmp	r0, #0
   17908:	bcs	17a08 <__assert_fail@plt+0x6920>
   1790c:	ldr	r0, [fp, #-12]
   17910:	cmp	r0, #0
   17914:	bcs	1799c <__assert_fail@plt+0x68b4>
   17918:	b	17938 <__assert_fail@plt+0x6850>
   1791c:	ldr	r0, [pc, #2016]	; 18104 <__assert_fail@plt+0x701c>
   17920:	ldr	r1, [fp, #-12]
   17924:	ldr	r2, [fp, #-16]
   17928:	udiv	r0, r0, r2
   1792c:	cmp	r1, r0
   17930:	bcc	17a98 <__assert_fail@plt+0x69b0>
   17934:	b	17aac <__assert_fail@plt+0x69c4>
   17938:	b	1794c <__assert_fail@plt+0x6864>
   1793c:	ldr	r0, [fp, #-16]
   17940:	cmp	r0, #1
   17944:	bcc	1795c <__assert_fail@plt+0x6874>
   17948:	b	17968 <__assert_fail@plt+0x6880>
   1794c:	ldr	r0, [fp, #-16]
   17950:	movw	r1, #0
   17954:	cmp	r1, r0
   17958:	bcs	17968 <__assert_fail@plt+0x6880>
   1795c:	movw	r0, #0
   17960:	str	r0, [sp, #48]	; 0x30
   17964:	b	17980 <__assert_fail@plt+0x6898>
   17968:	ldr	r0, [pc, #1940]	; 18104 <__assert_fail@plt+0x701c>
   1796c:	ldr	r1, [fp, #-16]
   17970:	movw	r2, #0
   17974:	sub	r1, r2, r1
   17978:	udiv	r0, r0, r1
   1797c:	str	r0, [sp, #48]	; 0x30
   17980:	ldr	r0, [sp, #48]	; 0x30
   17984:	ldr	r1, [fp, #-12]
   17988:	mvn	r2, #0
   1798c:	sub	r1, r2, r1
   17990:	cmp	r0, r1
   17994:	bls	17a98 <__assert_fail@plt+0x69b0>
   17998:	b	17aac <__assert_fail@plt+0x69c4>
   1799c:	ldr	r0, [fp, #-16]
   179a0:	cmn	r0, #1
   179a4:	bne	179ec <__assert_fail@plt+0x6904>
   179a8:	b	179c4 <__assert_fail@plt+0x68dc>
   179ac:	ldr	r0, [fp, #-12]
   179b0:	add	r0, r0, #-2147483648	; 0x80000000
   179b4:	movw	r1, #0
   179b8:	cmp	r1, r0
   179bc:	bcc	17a98 <__assert_fail@plt+0x69b0>
   179c0:	b	17aac <__assert_fail@plt+0x69c4>
   179c4:	ldr	r0, [fp, #-12]
   179c8:	movw	r1, #0
   179cc:	cmp	r1, r0
   179d0:	bcs	17aac <__assert_fail@plt+0x69c4>
   179d4:	ldr	r0, [pc, #1832]	; 18104 <__assert_fail@plt+0x701c>
   179d8:	ldr	r1, [fp, #-12]
   179dc:	sub	r1, r1, #1
   179e0:	cmp	r0, r1
   179e4:	bcc	17a98 <__assert_fail@plt+0x69b0>
   179e8:	b	17aac <__assert_fail@plt+0x69c4>
   179ec:	ldr	r0, [pc, #1812]	; 18108 <__assert_fail@plt+0x7020>
   179f0:	ldr	r1, [fp, #-16]
   179f4:	udiv	r0, r0, r1
   179f8:	ldr	r1, [fp, #-12]
   179fc:	cmp	r0, r1
   17a00:	bcc	17a98 <__assert_fail@plt+0x69b0>
   17a04:	b	17aac <__assert_fail@plt+0x69c4>
   17a08:	ldr	r0, [fp, #-16]
   17a0c:	cmp	r0, #0
   17a10:	bne	17a18 <__assert_fail@plt+0x6930>
   17a14:	b	17aac <__assert_fail@plt+0x69c4>
   17a18:	ldr	r0, [fp, #-12]
   17a1c:	cmp	r0, #0
   17a20:	bcs	17a80 <__assert_fail@plt+0x6998>
   17a24:	ldr	r0, [fp, #-12]
   17a28:	cmn	r0, #1
   17a2c:	bne	17a64 <__assert_fail@plt+0x697c>
   17a30:	b	17a4c <__assert_fail@plt+0x6964>
   17a34:	ldr	r0, [fp, #-16]
   17a38:	add	r0, r0, #-2147483648	; 0x80000000
   17a3c:	movw	r1, #0
   17a40:	cmp	r1, r0
   17a44:	bcc	17a98 <__assert_fail@plt+0x69b0>
   17a48:	b	17aac <__assert_fail@plt+0x69c4>
   17a4c:	ldr	r0, [pc, #1712]	; 18104 <__assert_fail@plt+0x701c>
   17a50:	ldr	r1, [fp, #-16]
   17a54:	sub	r1, r1, #1
   17a58:	cmp	r0, r1
   17a5c:	bcc	17a98 <__assert_fail@plt+0x69b0>
   17a60:	b	17aac <__assert_fail@plt+0x69c4>
   17a64:	ldr	r0, [pc, #1692]	; 18108 <__assert_fail@plt+0x7020>
   17a68:	ldr	r1, [fp, #-12]
   17a6c:	udiv	r0, r0, r1
   17a70:	ldr	r1, [fp, #-16]
   17a74:	cmp	r0, r1
   17a78:	bcc	17a98 <__assert_fail@plt+0x69b0>
   17a7c:	b	17aac <__assert_fail@plt+0x69c4>
   17a80:	ldr	r0, [pc, #1660]	; 18104 <__assert_fail@plt+0x701c>
   17a84:	ldr	r1, [fp, #-16]
   17a88:	udiv	r0, r0, r1
   17a8c:	ldr	r1, [fp, #-12]
   17a90:	cmp	r0, r1
   17a94:	bcs	17aac <__assert_fail@plt+0x69c4>
   17a98:	ldr	r0, [fp, #-12]
   17a9c:	ldr	r1, [fp, #-16]
   17aa0:	mul	r0, r0, r1
   17aa4:	str	r0, [fp, #-20]	; 0xffffffec
   17aa8:	b	180d0 <__assert_fail@plt+0x6fe8>
   17aac:	ldr	r0, [fp, #-12]
   17ab0:	ldr	r1, [fp, #-16]
   17ab4:	mul	r0, r0, r1
   17ab8:	str	r0, [fp, #-20]	; 0xffffffec
   17abc:	b	180e8 <__assert_fail@plt+0x7000>
   17ac0:	ldr	r0, [fp, #-16]
   17ac4:	cmp	r0, #0
   17ac8:	bcs	17bd4 <__assert_fail@plt+0x6aec>
   17acc:	ldr	r0, [fp, #-12]
   17ad0:	cmp	r0, #0
   17ad4:	bcs	17b5c <__assert_fail@plt+0x6a74>
   17ad8:	b	17af8 <__assert_fail@plt+0x6a10>
   17adc:	ldr	r0, [fp, #-12]
   17ae0:	ldr	r1, [fp, #-16]
   17ae4:	mvn	r2, #0
   17ae8:	udiv	r1, r2, r1
   17aec:	cmp	r0, r1
   17af0:	bcc	17c70 <__assert_fail@plt+0x6b88>
   17af4:	b	17c84 <__assert_fail@plt+0x6b9c>
   17af8:	b	17b0c <__assert_fail@plt+0x6a24>
   17afc:	ldr	r0, [fp, #-16]
   17b00:	cmp	r0, #1
   17b04:	bcc	17b1c <__assert_fail@plt+0x6a34>
   17b08:	b	17b28 <__assert_fail@plt+0x6a40>
   17b0c:	ldr	r0, [fp, #-16]
   17b10:	movw	r1, #0
   17b14:	cmp	r1, r0
   17b18:	bcs	17b28 <__assert_fail@plt+0x6a40>
   17b1c:	movw	r0, #1
   17b20:	str	r0, [sp, #44]	; 0x2c
   17b24:	b	17b40 <__assert_fail@plt+0x6a58>
   17b28:	ldr	r0, [fp, #-16]
   17b2c:	movw	r1, #0
   17b30:	sub	r0, r1, r0
   17b34:	mvn	r1, #0
   17b38:	udiv	r0, r1, r0
   17b3c:	str	r0, [sp, #44]	; 0x2c
   17b40:	ldr	r0, [sp, #44]	; 0x2c
   17b44:	ldr	r1, [fp, #-12]
   17b48:	mvn	r2, #0
   17b4c:	sub	r1, r2, r1
   17b50:	cmp	r0, r1
   17b54:	bls	17c70 <__assert_fail@plt+0x6b88>
   17b58:	b	17c84 <__assert_fail@plt+0x6b9c>
   17b5c:	b	17b64 <__assert_fail@plt+0x6a7c>
   17b60:	b	17b68 <__assert_fail@plt+0x6a80>
   17b64:	b	17bb8 <__assert_fail@plt+0x6ad0>
   17b68:	ldr	r0, [fp, #-16]
   17b6c:	cmn	r0, #1
   17b70:	bne	17bb8 <__assert_fail@plt+0x6ad0>
   17b74:	b	17b90 <__assert_fail@plt+0x6aa8>
   17b78:	ldr	r0, [fp, #-12]
   17b7c:	add	r0, r0, #0
   17b80:	movw	r1, #0
   17b84:	cmp	r1, r0
   17b88:	bcc	17c70 <__assert_fail@plt+0x6b88>
   17b8c:	b	17c84 <__assert_fail@plt+0x6b9c>
   17b90:	ldr	r0, [fp, #-12]
   17b94:	movw	r1, #0
   17b98:	cmp	r1, r0
   17b9c:	bcs	17c84 <__assert_fail@plt+0x6b9c>
   17ba0:	ldr	r0, [fp, #-12]
   17ba4:	sub	r0, r0, #1
   17ba8:	mvn	r1, #0
   17bac:	cmp	r1, r0
   17bb0:	bcc	17c70 <__assert_fail@plt+0x6b88>
   17bb4:	b	17c84 <__assert_fail@plt+0x6b9c>
   17bb8:	ldr	r0, [fp, #-16]
   17bbc:	movw	r1, #0
   17bc0:	udiv	r0, r1, r0
   17bc4:	ldr	r1, [fp, #-12]
   17bc8:	cmp	r0, r1
   17bcc:	bcc	17c70 <__assert_fail@plt+0x6b88>
   17bd0:	b	17c84 <__assert_fail@plt+0x6b9c>
   17bd4:	ldr	r0, [fp, #-16]
   17bd8:	cmp	r0, #0
   17bdc:	bne	17be4 <__assert_fail@plt+0x6afc>
   17be0:	b	17c84 <__assert_fail@plt+0x6b9c>
   17be4:	ldr	r0, [fp, #-12]
   17be8:	cmp	r0, #0
   17bec:	bcs	17c58 <__assert_fail@plt+0x6b70>
   17bf0:	b	17bf8 <__assert_fail@plt+0x6b10>
   17bf4:	b	17bfc <__assert_fail@plt+0x6b14>
   17bf8:	b	17c3c <__assert_fail@plt+0x6b54>
   17bfc:	ldr	r0, [fp, #-12]
   17c00:	cmn	r0, #1
   17c04:	bne	17c3c <__assert_fail@plt+0x6b54>
   17c08:	b	17c24 <__assert_fail@plt+0x6b3c>
   17c0c:	ldr	r0, [fp, #-16]
   17c10:	add	r0, r0, #0
   17c14:	movw	r1, #0
   17c18:	cmp	r1, r0
   17c1c:	bcc	17c70 <__assert_fail@plt+0x6b88>
   17c20:	b	17c84 <__assert_fail@plt+0x6b9c>
   17c24:	ldr	r0, [fp, #-16]
   17c28:	sub	r0, r0, #1
   17c2c:	mvn	r1, #0
   17c30:	cmp	r1, r0
   17c34:	bcc	17c70 <__assert_fail@plt+0x6b88>
   17c38:	b	17c84 <__assert_fail@plt+0x6b9c>
   17c3c:	ldr	r0, [fp, #-12]
   17c40:	movw	r1, #0
   17c44:	udiv	r0, r1, r0
   17c48:	ldr	r1, [fp, #-16]
   17c4c:	cmp	r0, r1
   17c50:	bcc	17c70 <__assert_fail@plt+0x6b88>
   17c54:	b	17c84 <__assert_fail@plt+0x6b9c>
   17c58:	ldr	r0, [fp, #-16]
   17c5c:	mvn	r1, #0
   17c60:	udiv	r0, r1, r0
   17c64:	ldr	r1, [fp, #-12]
   17c68:	cmp	r0, r1
   17c6c:	bcs	17c84 <__assert_fail@plt+0x6b9c>
   17c70:	ldr	r0, [fp, #-12]
   17c74:	ldr	r1, [fp, #-16]
   17c78:	mul	r0, r0, r1
   17c7c:	str	r0, [fp, #-20]	; 0xffffffec
   17c80:	b	180d0 <__assert_fail@plt+0x6fe8>
   17c84:	ldr	r0, [fp, #-12]
   17c88:	ldr	r1, [fp, #-16]
   17c8c:	mul	r0, r0, r1
   17c90:	str	r0, [fp, #-20]	; 0xffffffec
   17c94:	b	180e8 <__assert_fail@plt+0x7000>
   17c98:	b	17eb4 <__assert_fail@plt+0x6dcc>
   17c9c:	ldr	r0, [fp, #-16]
   17ca0:	cmp	r0, #0
   17ca4:	bcs	17de4 <__assert_fail@plt+0x6cfc>
   17ca8:	ldr	r0, [fp, #-12]
   17cac:	cmp	r0, #0
   17cb0:	bcs	17d70 <__assert_fail@plt+0x6c88>
   17cb4:	b	17cb8 <__assert_fail@plt+0x6bd0>
   17cb8:	ldr	r0, [fp, #-12]
   17cbc:	ldr	r2, [fp, #-16]
   17cc0:	mvn	r1, #0
   17cc4:	mvn	r3, #-2147483648	; 0x80000000
   17cc8:	mov	ip, #0
   17ccc:	str	r0, [sp, #40]	; 0x28
   17cd0:	mov	r0, r1
   17cd4:	mov	r1, r3
   17cd8:	mov	r3, ip
   17cdc:	bl	1e538 <__assert_fail@plt+0xd450>
   17ce0:	ldr	r2, [sp, #40]	; 0x28
   17ce4:	subs	r0, r2, r0
   17ce8:	rscs	r1, r1, #0
   17cec:	blt	17e8c <__assert_fail@plt+0x6da4>
   17cf0:	b	17ea0 <__assert_fail@plt+0x6db8>
   17cf4:	b	17d08 <__assert_fail@plt+0x6c20>
   17cf8:	ldr	r0, [fp, #-16]
   17cfc:	cmp	r0, #1
   17d00:	bcc	17d18 <__assert_fail@plt+0x6c30>
   17d04:	b	17d2c <__assert_fail@plt+0x6c44>
   17d08:	ldr	r0, [fp, #-16]
   17d0c:	movw	r1, #0
   17d10:	cmp	r1, r0
   17d14:	bcs	17d2c <__assert_fail@plt+0x6c44>
   17d18:	mov	r0, #0
   17d1c:	mvn	r1, #0
   17d20:	str	r1, [sp, #36]	; 0x24
   17d24:	str	r0, [sp, #32]
   17d28:	b	17d50 <__assert_fail@plt+0x6c68>
   17d2c:	ldr	r0, [fp, #-16]
   17d30:	rsb	r2, r0, #0
   17d34:	mvn	r0, #0
   17d38:	mvn	r1, #-2147483648	; 0x80000000
   17d3c:	mov	r3, #0
   17d40:	bl	1e538 <__assert_fail@plt+0xd450>
   17d44:	str	r0, [sp, #36]	; 0x24
   17d48:	str	r1, [sp, #32]
   17d4c:	b	17d50 <__assert_fail@plt+0x6c68>
   17d50:	ldr	r0, [sp, #32]
   17d54:	ldr	r1, [sp, #36]	; 0x24
   17d58:	ldr	r2, [fp, #-12]
   17d5c:	mvn	r2, r2
   17d60:	subs	r1, r2, r1
   17d64:	rscs	r0, r0, #0
   17d68:	bge	17e8c <__assert_fail@plt+0x6da4>
   17d6c:	b	17ea0 <__assert_fail@plt+0x6db8>
   17d70:	ldr	r0, [fp, #-16]
   17d74:	cmn	r0, #1
   17d78:	bne	17db8 <__assert_fail@plt+0x6cd0>
   17d7c:	b	17d98 <__assert_fail@plt+0x6cb0>
   17d80:	ldr	r0, [fp, #-12]
   17d84:	rsbs	r0, r0, #0
   17d88:	mov	r1, #0
   17d8c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   17d90:	blt	17e8c <__assert_fail@plt+0x6da4>
   17d94:	b	17ea0 <__assert_fail@plt+0x6db8>
   17d98:	ldr	r0, [fp, #-12]
   17d9c:	movw	r1, #0
   17da0:	cmp	r1, r0
   17da4:	bcs	17ea0 <__assert_fail@plt+0x6db8>
   17da8:	mov	r0, #0
   17dac:	cmp	r0, #0
   17db0:	bne	17e8c <__assert_fail@plt+0x6da4>
   17db4:	b	17ea0 <__assert_fail@plt+0x6db8>
   17db8:	ldr	r2, [fp, #-16]
   17dbc:	mov	r1, #-2147483648	; 0x80000000
   17dc0:	mov	r0, #0
   17dc4:	str	r0, [sp, #28]
   17dc8:	ldr	r3, [sp, #28]
   17dcc:	bl	1e464 <__assert_fail@plt+0xd37c>
   17dd0:	ldr	r2, [fp, #-12]
   17dd4:	subs	r0, r0, r2
   17dd8:	sbcs	r1, r1, #0
   17ddc:	blt	17e8c <__assert_fail@plt+0x6da4>
   17de0:	b	17ea0 <__assert_fail@plt+0x6db8>
   17de4:	ldr	r0, [fp, #-16]
   17de8:	cmp	r0, #0
   17dec:	bne	17df4 <__assert_fail@plt+0x6d0c>
   17df0:	b	17ea0 <__assert_fail@plt+0x6db8>
   17df4:	ldr	r0, [fp, #-12]
   17df8:	cmp	r0, #0
   17dfc:	bcs	17e64 <__assert_fail@plt+0x6d7c>
   17e00:	ldr	r0, [fp, #-12]
   17e04:	cmn	r0, #1
   17e08:	bne	17e38 <__assert_fail@plt+0x6d50>
   17e0c:	b	17e28 <__assert_fail@plt+0x6d40>
   17e10:	ldr	r0, [fp, #-16]
   17e14:	rsbs	r0, r0, #0
   17e18:	mov	r1, #0
   17e1c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   17e20:	blt	17e8c <__assert_fail@plt+0x6da4>
   17e24:	b	17ea0 <__assert_fail@plt+0x6db8>
   17e28:	mov	r0, #0
   17e2c:	cmp	r0, #0
   17e30:	bne	17e8c <__assert_fail@plt+0x6da4>
   17e34:	b	17ea0 <__assert_fail@plt+0x6db8>
   17e38:	ldr	r2, [fp, #-12]
   17e3c:	mov	r1, #-2147483648	; 0x80000000
   17e40:	mov	r0, #0
   17e44:	str	r0, [sp, #24]
   17e48:	ldr	r3, [sp, #24]
   17e4c:	bl	1e464 <__assert_fail@plt+0xd37c>
   17e50:	ldr	r2, [fp, #-16]
   17e54:	subs	r0, r0, r2
   17e58:	sbcs	r1, r1, #0
   17e5c:	blt	17e8c <__assert_fail@plt+0x6da4>
   17e60:	b	17ea0 <__assert_fail@plt+0x6db8>
   17e64:	ldr	r2, [fp, #-16]
   17e68:	mvn	r0, #0
   17e6c:	mvn	r1, #-2147483648	; 0x80000000
   17e70:	mov	r3, #0
   17e74:	bl	1e538 <__assert_fail@plt+0xd450>
   17e78:	ldr	r2, [fp, #-12]
   17e7c:	subs	r0, r0, r2
   17e80:	sbcs	r1, r1, #0
   17e84:	bge	17ea0 <__assert_fail@plt+0x6db8>
   17e88:	b	17e8c <__assert_fail@plt+0x6da4>
   17e8c:	ldr	r0, [fp, #-12]
   17e90:	ldr	r1, [fp, #-16]
   17e94:	mul	r0, r0, r1
   17e98:	str	r0, [fp, #-20]	; 0xffffffec
   17e9c:	b	180d0 <__assert_fail@plt+0x6fe8>
   17ea0:	ldr	r0, [fp, #-12]
   17ea4:	ldr	r1, [fp, #-16]
   17ea8:	mul	r0, r0, r1
   17eac:	str	r0, [fp, #-20]	; 0xffffffec
   17eb0:	b	180e8 <__assert_fail@plt+0x7000>
   17eb4:	ldr	r0, [fp, #-16]
   17eb8:	cmp	r0, #0
   17ebc:	bcs	17ff8 <__assert_fail@plt+0x6f10>
   17ec0:	ldr	r0, [fp, #-12]
   17ec4:	cmp	r0, #0
   17ec8:	bcs	17f80 <__assert_fail@plt+0x6e98>
   17ecc:	b	17f00 <__assert_fail@plt+0x6e18>
   17ed0:	ldr	r0, [fp, #-12]
   17ed4:	ldr	r2, [fp, #-16]
   17ed8:	mvn	r1, #0
   17edc:	mov	r3, #0
   17ee0:	str	r0, [sp, #20]
   17ee4:	mov	r0, r1
   17ee8:	bl	1e538 <__assert_fail@plt+0xd450>
   17eec:	ldr	r2, [sp, #20]
   17ef0:	subs	r0, r2, r0
   17ef4:	rscs	r1, r1, #0
   17ef8:	bcc	180a8 <__assert_fail@plt+0x6fc0>
   17efc:	b	180bc <__assert_fail@plt+0x6fd4>
   17f00:	b	17f14 <__assert_fail@plt+0x6e2c>
   17f04:	ldr	r0, [fp, #-16]
   17f08:	cmp	r0, #1
   17f0c:	bcc	17f24 <__assert_fail@plt+0x6e3c>
   17f10:	b	17f38 <__assert_fail@plt+0x6e50>
   17f14:	ldr	r0, [fp, #-16]
   17f18:	movw	r1, #0
   17f1c:	cmp	r1, r0
   17f20:	bcs	17f38 <__assert_fail@plt+0x6e50>
   17f24:	mov	r0, #1
   17f28:	mvn	r1, #0
   17f2c:	str	r1, [sp, #16]
   17f30:	str	r0, [sp, #12]
   17f34:	b	17f60 <__assert_fail@plt+0x6e78>
   17f38:	ldr	r0, [fp, #-16]
   17f3c:	rsb	r2, r0, #0
   17f40:	mvn	r0, #0
   17f44:	mov	r3, #0
   17f48:	str	r0, [sp, #8]
   17f4c:	ldr	r1, [sp, #8]
   17f50:	bl	1e538 <__assert_fail@plt+0xd450>
   17f54:	str	r0, [sp, #16]
   17f58:	str	r1, [sp, #12]
   17f5c:	b	17f60 <__assert_fail@plt+0x6e78>
   17f60:	ldr	r0, [sp, #12]
   17f64:	ldr	r1, [sp, #16]
   17f68:	ldr	r2, [fp, #-12]
   17f6c:	mvn	r2, r2
   17f70:	subs	r1, r2, r1
   17f74:	rscs	r0, r0, #0
   17f78:	bcs	180a8 <__assert_fail@plt+0x6fc0>
   17f7c:	b	180bc <__assert_fail@plt+0x6fd4>
   17f80:	b	17f88 <__assert_fail@plt+0x6ea0>
   17f84:	b	17f8c <__assert_fail@plt+0x6ea4>
   17f88:	b	17fdc <__assert_fail@plt+0x6ef4>
   17f8c:	ldr	r0, [fp, #-16]
   17f90:	cmn	r0, #1
   17f94:	bne	17fdc <__assert_fail@plt+0x6ef4>
   17f98:	b	17fb4 <__assert_fail@plt+0x6ecc>
   17f9c:	ldr	r0, [fp, #-12]
   17fa0:	add	r0, r0, #0
   17fa4:	movw	r1, #0
   17fa8:	cmp	r1, r0
   17fac:	bcc	180a8 <__assert_fail@plt+0x6fc0>
   17fb0:	b	180bc <__assert_fail@plt+0x6fd4>
   17fb4:	ldr	r0, [fp, #-12]
   17fb8:	movw	r1, #0
   17fbc:	cmp	r1, r0
   17fc0:	bcs	180bc <__assert_fail@plt+0x6fd4>
   17fc4:	ldr	r0, [fp, #-12]
   17fc8:	sub	r0, r0, #1
   17fcc:	mvn	r1, #0
   17fd0:	cmp	r1, r0
   17fd4:	bcc	180a8 <__assert_fail@plt+0x6fc0>
   17fd8:	b	180bc <__assert_fail@plt+0x6fd4>
   17fdc:	ldr	r0, [fp, #-16]
   17fe0:	movw	r1, #0
   17fe4:	udiv	r0, r1, r0
   17fe8:	ldr	r1, [fp, #-12]
   17fec:	cmp	r0, r1
   17ff0:	bcc	180a8 <__assert_fail@plt+0x6fc0>
   17ff4:	b	180bc <__assert_fail@plt+0x6fd4>
   17ff8:	ldr	r0, [fp, #-16]
   17ffc:	cmp	r0, #0
   18000:	bne	18008 <__assert_fail@plt+0x6f20>
   18004:	b	180bc <__assert_fail@plt+0x6fd4>
   18008:	ldr	r0, [fp, #-12]
   1800c:	cmp	r0, #0
   18010:	bcs	1807c <__assert_fail@plt+0x6f94>
   18014:	b	1801c <__assert_fail@plt+0x6f34>
   18018:	b	18020 <__assert_fail@plt+0x6f38>
   1801c:	b	18060 <__assert_fail@plt+0x6f78>
   18020:	ldr	r0, [fp, #-12]
   18024:	cmn	r0, #1
   18028:	bne	18060 <__assert_fail@plt+0x6f78>
   1802c:	b	18048 <__assert_fail@plt+0x6f60>
   18030:	ldr	r0, [fp, #-16]
   18034:	add	r0, r0, #0
   18038:	movw	r1, #0
   1803c:	cmp	r1, r0
   18040:	bcc	180a8 <__assert_fail@plt+0x6fc0>
   18044:	b	180bc <__assert_fail@plt+0x6fd4>
   18048:	ldr	r0, [fp, #-16]
   1804c:	sub	r0, r0, #1
   18050:	mvn	r1, #0
   18054:	cmp	r1, r0
   18058:	bcc	180a8 <__assert_fail@plt+0x6fc0>
   1805c:	b	180bc <__assert_fail@plt+0x6fd4>
   18060:	ldr	r0, [fp, #-12]
   18064:	movw	r1, #0
   18068:	udiv	r0, r1, r0
   1806c:	ldr	r1, [fp, #-16]
   18070:	cmp	r0, r1
   18074:	bcc	180a8 <__assert_fail@plt+0x6fc0>
   18078:	b	180bc <__assert_fail@plt+0x6fd4>
   1807c:	ldr	r2, [fp, #-16]
   18080:	mvn	r0, #0
   18084:	mov	r3, #0
   18088:	str	r0, [sp, #4]
   1808c:	ldr	r1, [sp, #4]
   18090:	bl	1e538 <__assert_fail@plt+0xd450>
   18094:	ldr	r2, [fp, #-12]
   18098:	subs	r0, r0, r2
   1809c:	sbcs	r1, r1, #0
   180a0:	bcs	180bc <__assert_fail@plt+0x6fd4>
   180a4:	b	180a8 <__assert_fail@plt+0x6fc0>
   180a8:	ldr	r0, [fp, #-12]
   180ac:	ldr	r1, [fp, #-16]
   180b0:	mul	r0, r0, r1
   180b4:	str	r0, [fp, #-20]	; 0xffffffec
   180b8:	b	180d0 <__assert_fail@plt+0x6fe8>
   180bc:	ldr	r0, [fp, #-12]
   180c0:	ldr	r1, [fp, #-16]
   180c4:	mul	r0, r0, r1
   180c8:	str	r0, [fp, #-20]	; 0xffffffec
   180cc:	b	180e8 <__assert_fail@plt+0x7000>
   180d0:	bl	11010 <__errno_location@plt>
   180d4:	movw	r1, #12
   180d8:	str	r1, [r0]
   180dc:	movw	r0, #0
   180e0:	str	r0, [fp, #-4]
   180e4:	b	180f8 <__assert_fail@plt+0x7010>
   180e8:	ldr	r0, [fp, #-8]
   180ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   180f0:	bl	1d8b4 <__assert_fail@plt+0xc7cc>
   180f4:	str	r0, [fp, #-4]
   180f8:	ldr	r0, [fp, #-4]
   180fc:	mov	sp, fp
   18100:	pop	{fp, pc}
   18104:	svcvc	0x00ffffff
   18108:	andhi	r0, r0, r0
   1810c:			; <UNDEFINED> instruction: 0xffff8000
   18110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18114:	add	fp, sp, #28
   18118:	sub	sp, sp, #196	; 0xc4
   1811c:	ldr	ip, [fp, #12]
   18120:	ldr	lr, [fp, #8]
   18124:	str	r0, [fp, #-32]	; 0xffffffe0
   18128:	str	r1, [fp, #-36]	; 0xffffffdc
   1812c:	str	r2, [fp, #-40]	; 0xffffffd8
   18130:	str	r3, [fp, #-44]	; 0xffffffd4
   18134:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18138:	movw	r1, #0
   1813c:	cmp	r0, r1
   18140:	beq	18174 <__assert_fail@plt+0x708c>
   18144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18148:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1814c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18150:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18154:	movw	ip, #61312	; 0xef80
   18158:	movt	ip, #1
   1815c:	str	r1, [fp, #-48]	; 0xffffffd0
   18160:	mov	r1, ip
   18164:	ldr	ip, [fp, #-48]	; 0xffffffd0
   18168:	str	ip, [sp]
   1816c:	bl	11004 <fprintf@plt>
   18170:	b	1818c <__assert_fail@plt+0x70a4>
   18174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18178:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1817c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18180:	movw	r1, #61324	; 0xef8c
   18184:	movt	r1, #1
   18188:	bl	11004 <fprintf@plt>
   1818c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18190:	movw	r1, #61331	; 0xef93
   18194:	movt	r1, #1
   18198:	str	r0, [fp, #-52]	; 0xffffffcc
   1819c:	mov	r0, r1
   181a0:	bl	10fe0 <gettext@plt>
   181a4:	movw	r1, #62049	; 0xf261
   181a8:	movt	r1, #1
   181ac:	movw	r3, #2022	; 0x7e6
   181b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   181b4:	str	r0, [fp, #-56]	; 0xffffffc8
   181b8:	mov	r0, r2
   181bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   181c0:	bl	11004 <fprintf@plt>
   181c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   181c8:	movw	r2, #60487	; 0xec47
   181cc:	movt	r2, #1
   181d0:	str	r0, [fp, #-60]	; 0xffffffc4
   181d4:	mov	r0, r2
   181d8:	str	r2, [fp, #-64]	; 0xffffffc0
   181dc:	bl	10e78 <fputs_unlocked@plt>
   181e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   181e4:	movw	r2, #61335	; 0xef97
   181e8:	movt	r2, #1
   181ec:	str	r0, [fp, #-68]	; 0xffffffbc
   181f0:	mov	r0, r2
   181f4:	str	r1, [fp, #-72]	; 0xffffffb8
   181f8:	bl	10fe0 <gettext@plt>
   181fc:	movw	r2, #61506	; 0xf042
   18200:	movt	r2, #1
   18204:	ldr	r1, [fp, #-72]	; 0xffffffb8
   18208:	str	r0, [fp, #-76]	; 0xffffffb4
   1820c:	mov	r0, r1
   18210:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18214:	bl	11004 <fprintf@plt>
   18218:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1821c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18220:	str	r0, [fp, #-80]	; 0xffffffb0
   18224:	mov	r0, r2
   18228:	bl	10e78 <fputs_unlocked@plt>
   1822c:	ldr	r1, [fp, #12]
   18230:	cmp	r1, #9
   18234:	str	r1, [fp, #-84]	; 0xffffffac
   18238:	bhi	18654 <__assert_fail@plt+0x756c>
   1823c:	add	r0, pc, #8
   18240:	ldr	r1, [fp, #-84]	; 0xffffffac
   18244:	ldr	r0, [r0, r1, lsl #2]
   18248:	mov	pc, r0
   1824c:	andeq	r8, r1, r4, ror r2
   18250:	andeq	r8, r1, r8, ror r2
   18254:			; <UNDEFINED> instruction: 0x000182b0
   18258:	strdeq	r8, [r1], -r0
   1825c:	andeq	r8, r1, r8, asr #6
   18260:	andeq	r8, r1, ip, lsr #7
   18264:	andeq	r8, r1, ip, lsl r4
   18268:	muleq	r1, r8, r4
   1826c:	andeq	r8, r1, r0, lsr #10
   18270:			; <UNDEFINED> instruction: 0x000185b4
   18274:	b	186f0 <__assert_fail@plt+0x7608>
   18278:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1827c:	movw	r1, #61540	; 0xf064
   18280:	movt	r1, #1
   18284:	str	r0, [fp, #-88]	; 0xffffffa8
   18288:	mov	r0, r1
   1828c:	bl	10fe0 <gettext@plt>
   18290:	ldr	r1, [fp, #8]
   18294:	ldr	r2, [r1]
   18298:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1829c:	str	r0, [fp, #-92]	; 0xffffffa4
   182a0:	mov	r0, r1
   182a4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   182a8:	bl	11004 <fprintf@plt>
   182ac:	b	186f0 <__assert_fail@plt+0x7608>
   182b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182b4:	movw	r1, #61556	; 0xf074
   182b8:	movt	r1, #1
   182bc:	str	r0, [fp, #-96]	; 0xffffffa0
   182c0:	mov	r0, r1
   182c4:	bl	10fe0 <gettext@plt>
   182c8:	ldr	r1, [fp, #8]
   182cc:	ldr	r2, [r1]
   182d0:	ldr	r1, [fp, #8]
   182d4:	ldr	r3, [r1, #4]
   182d8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   182dc:	str	r0, [fp, #-100]	; 0xffffff9c
   182e0:	mov	r0, r1
   182e4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   182e8:	bl	11004 <fprintf@plt>
   182ec:	b	186f0 <__assert_fail@plt+0x7608>
   182f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182f4:	movw	r1, #61579	; 0xf08b
   182f8:	movt	r1, #1
   182fc:	str	r0, [fp, #-104]	; 0xffffff98
   18300:	mov	r0, r1
   18304:	bl	10fe0 <gettext@plt>
   18308:	ldr	r1, [fp, #8]
   1830c:	ldr	r2, [r1]
   18310:	ldr	r1, [fp, #8]
   18314:	ldr	r3, [r1, #4]
   18318:	ldr	r1, [fp, #8]
   1831c:	ldr	r1, [r1, #8]
   18320:	ldr	ip, [fp, #-104]	; 0xffffff98
   18324:	str	r0, [fp, #-108]	; 0xffffff94
   18328:	mov	r0, ip
   1832c:	ldr	lr, [fp, #-108]	; 0xffffff94
   18330:	str	r1, [sp, #112]	; 0x70
   18334:	mov	r1, lr
   18338:	ldr	r4, [sp, #112]	; 0x70
   1833c:	str	r4, [sp]
   18340:	bl	11004 <fprintf@plt>
   18344:	b	186f0 <__assert_fail@plt+0x7608>
   18348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1834c:	movw	r1, #61607	; 0xf0a7
   18350:	movt	r1, #1
   18354:	str	r0, [sp, #108]	; 0x6c
   18358:	mov	r0, r1
   1835c:	bl	10fe0 <gettext@plt>
   18360:	ldr	r1, [fp, #8]
   18364:	ldr	r2, [r1]
   18368:	ldr	r1, [fp, #8]
   1836c:	ldr	r3, [r1, #4]
   18370:	ldr	r1, [fp, #8]
   18374:	ldr	r1, [r1, #8]
   18378:	ldr	ip, [fp, #8]
   1837c:	ldr	ip, [ip, #12]
   18380:	ldr	lr, [sp, #108]	; 0x6c
   18384:	str	r0, [sp, #104]	; 0x68
   18388:	mov	r0, lr
   1838c:	ldr	r4, [sp, #104]	; 0x68
   18390:	str	r1, [sp, #100]	; 0x64
   18394:	mov	r1, r4
   18398:	ldr	r5, [sp, #100]	; 0x64
   1839c:	str	r5, [sp]
   183a0:	str	ip, [sp, #4]
   183a4:	bl	11004 <fprintf@plt>
   183a8:	b	186f0 <__assert_fail@plt+0x7608>
   183ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183b0:	movw	r1, #61639	; 0xf0c7
   183b4:	movt	r1, #1
   183b8:	str	r0, [sp, #96]	; 0x60
   183bc:	mov	r0, r1
   183c0:	bl	10fe0 <gettext@plt>
   183c4:	ldr	r1, [fp, #8]
   183c8:	ldr	r2, [r1]
   183cc:	ldr	r1, [fp, #8]
   183d0:	ldr	r3, [r1, #4]
   183d4:	ldr	r1, [fp, #8]
   183d8:	ldr	r1, [r1, #8]
   183dc:	ldr	ip, [fp, #8]
   183e0:	ldr	ip, [ip, #12]
   183e4:	ldr	lr, [fp, #8]
   183e8:	ldr	lr, [lr, #16]
   183ec:	ldr	r4, [sp, #96]	; 0x60
   183f0:	str	r0, [sp, #92]	; 0x5c
   183f4:	mov	r0, r4
   183f8:	ldr	r5, [sp, #92]	; 0x5c
   183fc:	str	r1, [sp, #88]	; 0x58
   18400:	mov	r1, r5
   18404:	ldr	r6, [sp, #88]	; 0x58
   18408:	str	r6, [sp]
   1840c:	str	ip, [sp, #4]
   18410:	str	lr, [sp, #8]
   18414:	bl	11004 <fprintf@plt>
   18418:	b	186f0 <__assert_fail@plt+0x7608>
   1841c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18420:	movw	r1, #61675	; 0xf0eb
   18424:	movt	r1, #1
   18428:	str	r0, [sp, #84]	; 0x54
   1842c:	mov	r0, r1
   18430:	bl	10fe0 <gettext@plt>
   18434:	ldr	r1, [fp, #8]
   18438:	ldr	r2, [r1]
   1843c:	ldr	r1, [fp, #8]
   18440:	ldr	r3, [r1, #4]
   18444:	ldr	r1, [fp, #8]
   18448:	ldr	r1, [r1, #8]
   1844c:	ldr	ip, [fp, #8]
   18450:	ldr	ip, [ip, #12]
   18454:	ldr	lr, [fp, #8]
   18458:	ldr	lr, [lr, #16]
   1845c:	ldr	r4, [fp, #8]
   18460:	ldr	r4, [r4, #20]
   18464:	ldr	r5, [sp, #84]	; 0x54
   18468:	str	r0, [sp, #80]	; 0x50
   1846c:	mov	r0, r5
   18470:	ldr	r6, [sp, #80]	; 0x50
   18474:	str	r1, [sp, #76]	; 0x4c
   18478:	mov	r1, r6
   1847c:	ldr	r7, [sp, #76]	; 0x4c
   18480:	str	r7, [sp]
   18484:	str	ip, [sp, #4]
   18488:	str	lr, [sp, #8]
   1848c:	str	r4, [sp, #12]
   18490:	bl	11004 <fprintf@plt>
   18494:	b	186f0 <__assert_fail@plt+0x7608>
   18498:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1849c:	movw	r1, #61715	; 0xf113
   184a0:	movt	r1, #1
   184a4:	str	r0, [sp, #72]	; 0x48
   184a8:	mov	r0, r1
   184ac:	bl	10fe0 <gettext@plt>
   184b0:	ldr	r1, [fp, #8]
   184b4:	ldr	r2, [r1]
   184b8:	ldr	r1, [fp, #8]
   184bc:	ldr	r3, [r1, #4]
   184c0:	ldr	r1, [fp, #8]
   184c4:	ldr	r1, [r1, #8]
   184c8:	ldr	ip, [fp, #8]
   184cc:	ldr	ip, [ip, #12]
   184d0:	ldr	lr, [fp, #8]
   184d4:	ldr	lr, [lr, #16]
   184d8:	ldr	r4, [fp, #8]
   184dc:	ldr	r4, [r4, #20]
   184e0:	ldr	r5, [fp, #8]
   184e4:	ldr	r5, [r5, #24]
   184e8:	ldr	r6, [sp, #72]	; 0x48
   184ec:	str	r0, [sp, #68]	; 0x44
   184f0:	mov	r0, r6
   184f4:	ldr	r7, [sp, #68]	; 0x44
   184f8:	str	r1, [sp, #64]	; 0x40
   184fc:	mov	r1, r7
   18500:	ldr	r8, [sp, #64]	; 0x40
   18504:	str	r8, [sp]
   18508:	str	ip, [sp, #4]
   1850c:	str	lr, [sp, #8]
   18510:	str	r4, [sp, #12]
   18514:	str	r5, [sp, #16]
   18518:	bl	11004 <fprintf@plt>
   1851c:	b	186f0 <__assert_fail@plt+0x7608>
   18520:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18524:	movw	r1, #61759	; 0xf13f
   18528:	movt	r1, #1
   1852c:	str	r0, [sp, #60]	; 0x3c
   18530:	mov	r0, r1
   18534:	bl	10fe0 <gettext@plt>
   18538:	ldr	r1, [fp, #8]
   1853c:	ldr	r2, [r1]
   18540:	ldr	r1, [fp, #8]
   18544:	ldr	r3, [r1, #4]
   18548:	ldr	r1, [fp, #8]
   1854c:	ldr	r1, [r1, #8]
   18550:	ldr	ip, [fp, #8]
   18554:	ldr	ip, [ip, #12]
   18558:	ldr	lr, [fp, #8]
   1855c:	ldr	lr, [lr, #16]
   18560:	ldr	r4, [fp, #8]
   18564:	ldr	r4, [r4, #20]
   18568:	ldr	r5, [fp, #8]
   1856c:	ldr	r5, [r5, #24]
   18570:	ldr	r6, [fp, #8]
   18574:	ldr	r6, [r6, #28]
   18578:	ldr	r7, [sp, #60]	; 0x3c
   1857c:	str	r0, [sp, #56]	; 0x38
   18580:	mov	r0, r7
   18584:	ldr	r8, [sp, #56]	; 0x38
   18588:	str	r1, [sp, #52]	; 0x34
   1858c:	mov	r1, r8
   18590:	ldr	r9, [sp, #52]	; 0x34
   18594:	str	r9, [sp]
   18598:	str	ip, [sp, #4]
   1859c:	str	lr, [sp, #8]
   185a0:	str	r4, [sp, #12]
   185a4:	str	r5, [sp, #16]
   185a8:	str	r6, [sp, #20]
   185ac:	bl	11004 <fprintf@plt>
   185b0:	b	186f0 <__assert_fail@plt+0x7608>
   185b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185b8:	movw	r1, #61807	; 0xf16f
   185bc:	movt	r1, #1
   185c0:	str	r0, [sp, #48]	; 0x30
   185c4:	mov	r0, r1
   185c8:	bl	10fe0 <gettext@plt>
   185cc:	ldr	r1, [fp, #8]
   185d0:	ldr	r2, [r1]
   185d4:	ldr	r1, [fp, #8]
   185d8:	ldr	r3, [r1, #4]
   185dc:	ldr	r1, [fp, #8]
   185e0:	ldr	r1, [r1, #8]
   185e4:	ldr	ip, [fp, #8]
   185e8:	ldr	ip, [ip, #12]
   185ec:	ldr	lr, [fp, #8]
   185f0:	ldr	lr, [lr, #16]
   185f4:	ldr	r4, [fp, #8]
   185f8:	ldr	r4, [r4, #20]
   185fc:	ldr	r5, [fp, #8]
   18600:	ldr	r5, [r5, #24]
   18604:	ldr	r6, [fp, #8]
   18608:	ldr	r6, [r6, #28]
   1860c:	ldr	r7, [fp, #8]
   18610:	ldr	r7, [r7, #32]
   18614:	ldr	r8, [sp, #48]	; 0x30
   18618:	str	r0, [sp, #44]	; 0x2c
   1861c:	mov	r0, r8
   18620:	ldr	r9, [sp, #44]	; 0x2c
   18624:	str	r1, [sp, #40]	; 0x28
   18628:	mov	r1, r9
   1862c:	ldr	sl, [sp, #40]	; 0x28
   18630:	str	sl, [sp]
   18634:	str	ip, [sp, #4]
   18638:	str	lr, [sp, #8]
   1863c:	str	r4, [sp, #12]
   18640:	str	r5, [sp, #16]
   18644:	str	r6, [sp, #20]
   18648:	str	r7, [sp, #24]
   1864c:	bl	11004 <fprintf@plt>
   18650:	b	186f0 <__assert_fail@plt+0x7608>
   18654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18658:	movw	r1, #61859	; 0xf1a3
   1865c:	movt	r1, #1
   18660:	str	r0, [sp, #36]	; 0x24
   18664:	mov	r0, r1
   18668:	bl	10fe0 <gettext@plt>
   1866c:	ldr	r1, [fp, #8]
   18670:	ldr	r2, [r1]
   18674:	ldr	r1, [fp, #8]
   18678:	ldr	r3, [r1, #4]
   1867c:	ldr	r1, [fp, #8]
   18680:	ldr	r1, [r1, #8]
   18684:	ldr	ip, [fp, #8]
   18688:	ldr	ip, [ip, #12]
   1868c:	ldr	lr, [fp, #8]
   18690:	ldr	lr, [lr, #16]
   18694:	ldr	r4, [fp, #8]
   18698:	ldr	r4, [r4, #20]
   1869c:	ldr	r5, [fp, #8]
   186a0:	ldr	r5, [r5, #24]
   186a4:	ldr	r6, [fp, #8]
   186a8:	ldr	r6, [r6, #28]
   186ac:	ldr	r7, [fp, #8]
   186b0:	ldr	r7, [r7, #32]
   186b4:	ldr	r8, [sp, #36]	; 0x24
   186b8:	str	r0, [sp, #32]
   186bc:	mov	r0, r8
   186c0:	ldr	r9, [sp, #32]
   186c4:	str	r1, [sp, #28]
   186c8:	mov	r1, r9
   186cc:	ldr	sl, [sp, #28]
   186d0:	str	sl, [sp]
   186d4:	str	ip, [sp, #4]
   186d8:	str	lr, [sp, #8]
   186dc:	str	r4, [sp, #12]
   186e0:	str	r5, [sp, #16]
   186e4:	str	r6, [sp, #20]
   186e8:	str	r7, [sp, #24]
   186ec:	bl	11004 <fprintf@plt>
   186f0:	sub	sp, fp, #28
   186f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186f8:	push	{fp, lr}
   186fc:	mov	fp, sp
   18700:	sub	sp, sp, #32
   18704:	ldr	ip, [fp, #8]
   18708:	str	r0, [fp, #-4]
   1870c:	str	r1, [fp, #-8]
   18710:	str	r2, [fp, #-12]
   18714:	str	r3, [sp, #16]
   18718:	movw	r0, #0
   1871c:	str	r0, [sp, #12]
   18720:	ldr	r0, [fp, #8]
   18724:	ldr	r1, [sp, #12]
   18728:	add	r0, r0, r1, lsl #2
   1872c:	ldr	r0, [r0]
   18730:	movw	r1, #0
   18734:	cmp	r0, r1
   18738:	beq	18750 <__assert_fail@plt+0x7668>
   1873c:	b	18740 <__assert_fail@plt+0x7658>
   18740:	ldr	r0, [sp, #12]
   18744:	add	r0, r0, #1
   18748:	str	r0, [sp, #12]
   1874c:	b	18720 <__assert_fail@plt+0x7638>
   18750:	ldr	r0, [fp, #-4]
   18754:	ldr	r1, [fp, #-8]
   18758:	ldr	r2, [fp, #-12]
   1875c:	ldr	r3, [sp, #16]
   18760:	ldr	ip, [fp, #8]
   18764:	ldr	lr, [sp, #12]
   18768:	str	ip, [sp]
   1876c:	str	lr, [sp, #4]
   18770:	bl	18110 <__assert_fail@plt+0x7028>
   18774:	mov	sp, fp
   18778:	pop	{fp, pc}
   1877c:	push	{fp, lr}
   18780:	mov	fp, sp
   18784:	sub	sp, sp, #80	; 0x50
   18788:	ldr	ip, [fp, #8]
   1878c:	str	ip, [fp, #-4]
   18790:	str	r0, [fp, #-8]
   18794:	str	r1, [fp, #-12]
   18798:	str	r2, [fp, #-16]
   1879c:	str	r3, [fp, #-20]	; 0xffffffec
   187a0:	movw	r0, #0
   187a4:	str	r0, [fp, #-24]	; 0xffffffe8
   187a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187ac:	cmp	r0, #10
   187b0:	movw	r0, #0
   187b4:	str	r0, [sp, #12]
   187b8:	bcs	187f0 <__assert_fail@plt+0x7708>
   187bc:	ldr	r0, [fp, #-4]
   187c0:	add	r1, r0, #4
   187c4:	str	r1, [fp, #-4]
   187c8:	ldr	r0, [r0]
   187cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187d0:	add	r2, sp, #16
   187d4:	add	r1, r2, r1, lsl #2
   187d8:	str	r0, [r1]
   187dc:	movw	r1, #0
   187e0:	cmp	r0, r1
   187e4:	movw	r0, #0
   187e8:	movne	r0, #1
   187ec:	str	r0, [sp, #12]
   187f0:	ldr	r0, [sp, #12]
   187f4:	tst	r0, #1
   187f8:	beq	18810 <__assert_fail@plt+0x7728>
   187fc:	b	18800 <__assert_fail@plt+0x7718>
   18800:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18804:	add	r0, r0, #1
   18808:	str	r0, [fp, #-24]	; 0xffffffe8
   1880c:	b	187a8 <__assert_fail@plt+0x76c0>
   18810:	add	r0, sp, #16
   18814:	ldr	r1, [fp, #-8]
   18818:	ldr	r2, [fp, #-12]
   1881c:	ldr	r3, [fp, #-16]
   18820:	ldr	ip, [fp, #-20]	; 0xffffffec
   18824:	ldr	lr, [fp, #-24]	; 0xffffffe8
   18828:	str	r0, [sp, #8]
   1882c:	mov	r0, r1
   18830:	mov	r1, r2
   18834:	mov	r2, r3
   18838:	mov	r3, ip
   1883c:	ldr	ip, [sp, #8]
   18840:	str	ip, [sp]
   18844:	str	lr, [sp, #4]
   18848:	bl	18110 <__assert_fail@plt+0x7028>
   1884c:	mov	sp, fp
   18850:	pop	{fp, pc}
   18854:	push	{fp, lr}
   18858:	mov	fp, sp
   1885c:	sub	sp, sp, #24
   18860:	str	r0, [fp, #-4]
   18864:	str	r1, [fp, #-8]
   18868:	str	r2, [sp, #12]
   1886c:	str	r3, [sp, #8]
   18870:	add	r0, fp, #8
   18874:	str	r0, [sp, #4]
   18878:	ldr	r0, [fp, #-4]
   1887c:	ldr	r1, [fp, #-8]
   18880:	ldr	r2, [sp, #12]
   18884:	ldr	r3, [sp, #8]
   18888:	ldr	ip, [sp, #4]
   1888c:	mov	lr, sp
   18890:	str	ip, [lr]
   18894:	bl	1877c <__assert_fail@plt+0x7694>
   18898:	add	r0, sp, #4
   1889c:	mov	sp, fp
   188a0:	pop	{fp, pc}
   188a4:	push	{fp, lr}
   188a8:	mov	fp, sp
   188ac:	sub	sp, sp, #16
   188b0:	movw	r0, #340	; 0x154
   188b4:	movt	r0, #3
   188b8:	ldr	r1, [r0]
   188bc:	movw	r0, #60487	; 0xec47
   188c0:	movt	r0, #1
   188c4:	bl	10e78 <fputs_unlocked@plt>
   188c8:	movw	r1, #61919	; 0xf1df
   188cc:	movt	r1, #1
   188d0:	str	r0, [fp, #-4]
   188d4:	mov	r0, r1
   188d8:	bl	10fe0 <gettext@plt>
   188dc:	movw	r1, #61939	; 0xf1f3
   188e0:	movt	r1, #1
   188e4:	bl	10ea8 <printf@plt>
   188e8:	movw	r1, #61961	; 0xf209
   188ec:	movt	r1, #1
   188f0:	str	r0, [sp, #8]
   188f4:	mov	r0, r1
   188f8:	bl	10fe0 <gettext@plt>
   188fc:	movw	r1, #59997	; 0xea5d
   18900:	movt	r1, #1
   18904:	movw	r2, #60296	; 0xeb88
   18908:	movt	r2, #1
   1890c:	bl	10ea8 <printf@plt>
   18910:	movw	r1, #61981	; 0xf21d
   18914:	movt	r1, #1
   18918:	str	r0, [sp, #4]
   1891c:	mov	r0, r1
   18920:	bl	10fe0 <gettext@plt>
   18924:	movw	r1, #62020	; 0xf244
   18928:	movt	r1, #1
   1892c:	bl	10ea8 <printf@plt>
   18930:	mov	sp, fp
   18934:	pop	{fp, pc}
   18938:	push	{fp, lr}
   1893c:	mov	fp, sp
   18940:	sub	sp, sp, #16
   18944:	str	r0, [fp, #-4]
   18948:	str	r1, [sp, #8]
   1894c:	str	r2, [sp, #4]
   18950:	ldr	r0, [fp, #-4]
   18954:	ldr	r1, [sp, #8]
   18958:	ldr	r2, [sp, #4]
   1895c:	bl	18968 <__assert_fail@plt+0x7880>
   18960:	mov	sp, fp
   18964:	pop	{fp, pc}
   18968:	push	{fp, lr}
   1896c:	mov	fp, sp
   18970:	sub	sp, sp, #16
   18974:	str	r0, [fp, #-4]
   18978:	str	r1, [sp, #8]
   1897c:	str	r2, [sp, #4]
   18980:	ldr	r0, [fp, #-4]
   18984:	ldr	r1, [sp, #8]
   18988:	ldr	r2, [sp, #4]
   1898c:	bl	16dd0 <__assert_fail@plt+0x5ce8>
   18990:	str	r0, [sp]
   18994:	ldr	r0, [sp]
   18998:	movw	r1, #0
   1899c:	cmp	r0, r1
   189a0:	bne	189d0 <__assert_fail@plt+0x78e8>
   189a4:	ldr	r0, [fp, #-4]
   189a8:	movw	r1, #0
   189ac:	cmp	r0, r1
   189b0:	beq	189cc <__assert_fail@plt+0x78e4>
   189b4:	ldr	r0, [sp, #8]
   189b8:	cmp	r0, #0
   189bc:	beq	189d0 <__assert_fail@plt+0x78e8>
   189c0:	ldr	r0, [sp, #4]
   189c4:	cmp	r0, #0
   189c8:	beq	189d0 <__assert_fail@plt+0x78e8>
   189cc:	bl	1b714 <__assert_fail@plt+0xa62c>
   189d0:	ldr	r0, [sp]
   189d4:	mov	sp, fp
   189d8:	pop	{fp, pc}
   189dc:	push	{fp, lr}
   189e0:	mov	fp, sp
   189e4:	sub	sp, sp, #8
   189e8:	str	r0, [sp, #4]
   189ec:	ldr	r0, [sp, #4]
   189f0:	bl	1d844 <__assert_fail@plt+0xc75c>
   189f4:	bl	18a00 <__assert_fail@plt+0x7918>
   189f8:	mov	sp, fp
   189fc:	pop	{fp, pc}
   18a00:	push	{fp, lr}
   18a04:	mov	fp, sp
   18a08:	sub	sp, sp, #8
   18a0c:	str	r0, [sp, #4]
   18a10:	ldr	r0, [sp, #4]
   18a14:	movw	r1, #0
   18a18:	cmp	r0, r1
   18a1c:	bne	18a24 <__assert_fail@plt+0x793c>
   18a20:	bl	1b714 <__assert_fail@plt+0xa62c>
   18a24:	ldr	r0, [sp, #4]
   18a28:	mov	sp, fp
   18a2c:	pop	{fp, pc}
   18a30:	push	{fp, lr}
   18a34:	mov	fp, sp
   18a38:	sub	sp, sp, #8
   18a3c:	str	r0, [sp, #4]
   18a40:	ldr	r0, [sp, #4]
   18a44:	bl	14484 <__assert_fail@plt+0x339c>
   18a48:	bl	18a00 <__assert_fail@plt+0x7918>
   18a4c:	mov	sp, fp
   18a50:	pop	{fp, pc}
   18a54:	push	{fp, lr}
   18a58:	mov	fp, sp
   18a5c:	sub	sp, sp, #8
   18a60:	str	r0, [sp, #4]
   18a64:	ldr	r0, [sp, #4]
   18a68:	bl	189dc <__assert_fail@plt+0x78f4>
   18a6c:	mov	sp, fp
   18a70:	pop	{fp, pc}
   18a74:	push	{fp, lr}
   18a78:	mov	fp, sp
   18a7c:	sub	sp, sp, #16
   18a80:	str	r0, [fp, #-4]
   18a84:	str	r1, [sp, #8]
   18a88:	ldr	r0, [fp, #-4]
   18a8c:	ldr	r1, [sp, #8]
   18a90:	bl	1d8b4 <__assert_fail@plt+0xc7cc>
   18a94:	str	r0, [sp, #4]
   18a98:	ldr	r0, [sp, #4]
   18a9c:	movw	r1, #0
   18aa0:	cmp	r0, r1
   18aa4:	bne	18ac8 <__assert_fail@plt+0x79e0>
   18aa8:	ldr	r0, [fp, #-4]
   18aac:	movw	r1, #0
   18ab0:	cmp	r0, r1
   18ab4:	beq	18ac4 <__assert_fail@plt+0x79dc>
   18ab8:	ldr	r0, [sp, #8]
   18abc:	cmp	r0, #0
   18ac0:	beq	18ac8 <__assert_fail@plt+0x79e0>
   18ac4:	bl	1b714 <__assert_fail@plt+0xa62c>
   18ac8:	ldr	r0, [sp, #4]
   18acc:	mov	sp, fp
   18ad0:	pop	{fp, pc}
   18ad4:	push	{fp, lr}
   18ad8:	mov	fp, sp
   18adc:	sub	sp, sp, #8
   18ae0:	str	r0, [sp, #4]
   18ae4:	str	r1, [sp]
   18ae8:	ldr	r0, [sp, #4]
   18aec:	ldr	r1, [sp]
   18af0:	bl	144c4 <__assert_fail@plt+0x33dc>
   18af4:	bl	18a00 <__assert_fail@plt+0x7918>
   18af8:	mov	sp, fp
   18afc:	pop	{fp, pc}
   18b00:	push	{fp, lr}
   18b04:	mov	fp, sp
   18b08:	sub	sp, sp, #16
   18b0c:	str	r0, [fp, #-4]
   18b10:	str	r1, [sp, #8]
   18b14:	str	r2, [sp, #4]
   18b18:	ldr	r0, [fp, #-4]
   18b1c:	ldr	r1, [sp, #8]
   18b20:	ldr	r2, [sp, #4]
   18b24:	bl	145bc <__assert_fail@plt+0x34d4>
   18b28:	bl	18a00 <__assert_fail@plt+0x7918>
   18b2c:	mov	sp, fp
   18b30:	pop	{fp, pc}
   18b34:	push	{fp, lr}
   18b38:	mov	fp, sp
   18b3c:	sub	sp, sp, #8
   18b40:	str	r0, [sp, #4]
   18b44:	str	r1, [sp]
   18b48:	ldr	r1, [sp, #4]
   18b4c:	ldr	r2, [sp]
   18b50:	movw	r0, #0
   18b54:	bl	18968 <__assert_fail@plt+0x7880>
   18b58:	mov	sp, fp
   18b5c:	pop	{fp, pc}
   18b60:	push	{fp, lr}
   18b64:	mov	fp, sp
   18b68:	sub	sp, sp, #8
   18b6c:	str	r0, [sp, #4]
   18b70:	str	r1, [sp]
   18b74:	ldr	r1, [sp, #4]
   18b78:	ldr	r2, [sp]
   18b7c:	movw	r0, #0
   18b80:	bl	18b00 <__assert_fail@plt+0x7a18>
   18b84:	mov	sp, fp
   18b88:	pop	{fp, pc}
   18b8c:	push	{fp, lr}
   18b90:	mov	fp, sp
   18b94:	sub	sp, sp, #8
   18b98:	str	r0, [sp, #4]
   18b9c:	str	r1, [sp]
   18ba0:	ldr	r0, [sp, #4]
   18ba4:	ldr	r1, [sp]
   18ba8:	movw	r2, #1
   18bac:	bl	18bb8 <__assert_fail@plt+0x7ad0>
   18bb0:	mov	sp, fp
   18bb4:	pop	{fp, pc}
   18bb8:	push	{fp, lr}
   18bbc:	mov	fp, sp
   18bc0:	sub	sp, sp, #16
   18bc4:	str	r0, [fp, #-4]
   18bc8:	str	r1, [sp, #8]
   18bcc:	str	r2, [sp, #4]
   18bd0:	ldr	r0, [sp, #8]
   18bd4:	ldr	r0, [r0]
   18bd8:	str	r0, [sp]
   18bdc:	ldr	r0, [fp, #-4]
   18be0:	movw	r1, #0
   18be4:	cmp	r0, r1
   18be8:	bne	18c34 <__assert_fail@plt+0x7b4c>
   18bec:	ldr	r0, [sp]
   18bf0:	cmp	r0, #0
   18bf4:	bne	18c30 <__assert_fail@plt+0x7b48>
   18bf8:	ldr	r0, [sp, #4]
   18bfc:	movw	r1, #64	; 0x40
   18c00:	udiv	r0, r1, r0
   18c04:	str	r0, [sp]
   18c08:	ldr	r0, [sp]
   18c0c:	cmp	r0, #0
   18c10:	movw	r0, #0
   18c14:	movne	r0, #1
   18c18:	mvn	r1, #0
   18c1c:	eor	r0, r0, r1
   18c20:	and	r0, r0, #1
   18c24:	ldr	r1, [sp]
   18c28:	add	r0, r1, r0
   18c2c:	str	r0, [sp]
   18c30:	b	18c64 <__assert_fail@plt+0x7b7c>
   18c34:	ldr	r0, [sp]
   18c38:	ldr	r1, [sp]
   18c3c:	lsr	r1, r1, #1
   18c40:	add	r1, r1, #1
   18c44:	adds	r0, r0, r1
   18c48:	mov	r1, #0
   18c4c:	adc	r1, r1, #0
   18c50:	str	r0, [sp]
   18c54:	tst	r1, #1
   18c58:	beq	18c60 <__assert_fail@plt+0x7b78>
   18c5c:	bl	1b714 <__assert_fail@plt+0xa62c>
   18c60:	b	18c64 <__assert_fail@plt+0x7b7c>
   18c64:	ldr	r0, [fp, #-4]
   18c68:	ldr	r1, [sp]
   18c6c:	ldr	r2, [sp, #4]
   18c70:	bl	18968 <__assert_fail@plt+0x7880>
   18c74:	str	r0, [fp, #-4]
   18c78:	ldr	r0, [sp]
   18c7c:	ldr	r1, [sp, #8]
   18c80:	str	r0, [r1]
   18c84:	ldr	r0, [fp, #-4]
   18c88:	mov	sp, fp
   18c8c:	pop	{fp, pc}
   18c90:	push	{fp, lr}
   18c94:	mov	fp, sp
   18c98:	sub	sp, sp, #216	; 0xd8
   18c9c:	ldr	ip, [fp, #8]
   18ca0:	str	r0, [fp, #-4]
   18ca4:	str	r1, [fp, #-8]
   18ca8:	str	r2, [fp, #-12]
   18cac:	str	r3, [fp, #-16]
   18cb0:	ldr	r0, [fp, #-8]
   18cb4:	ldr	r0, [r0]
   18cb8:	str	r0, [fp, #-20]	; 0xffffffec
   18cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18cc4:	asr	r1, r1, #1
   18cc8:	add	r1, r0, r1
   18ccc:	mov	r2, #1
   18cd0:	cmp	r1, r0
   18cd4:	movwvc	r2, #0
   18cd8:	str	r1, [fp, #-24]	; 0xffffffe8
   18cdc:	tst	r2, #1
   18ce0:	beq	18cec <__assert_fail@plt+0x7c04>
   18ce4:	ldr	r0, [pc, #4036]	; 19cb0 <__assert_fail@plt+0x8bc8>
   18ce8:	str	r0, [fp, #-24]	; 0xffffffe8
   18cec:	ldr	r0, [fp, #-16]
   18cf0:	movw	r1, #0
   18cf4:	cmp	r1, r0
   18cf8:	bgt	18d14 <__assert_fail@plt+0x7c2c>
   18cfc:	ldr	r0, [fp, #-16]
   18d00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d04:	cmp	r0, r1
   18d08:	bge	18d14 <__assert_fail@plt+0x7c2c>
   18d0c:	ldr	r0, [fp, #-16]
   18d10:	str	r0, [fp, #-24]	; 0xffffffe8
   18d14:	b	190ec <__assert_fail@plt+0x8004>
   18d18:	b	18d1c <__assert_fail@plt+0x7c34>
   18d1c:	ldr	r0, [fp, #8]
   18d20:	cmp	r0, #0
   18d24:	bge	18e38 <__assert_fail@plt+0x7d50>
   18d28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d2c:	cmp	r0, #0
   18d30:	bge	18dbc <__assert_fail@plt+0x7cd4>
   18d34:	b	18d38 <__assert_fail@plt+0x7c50>
   18d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d3c:	ldr	r1, [fp, #8]
   18d40:	movw	r2, #127	; 0x7f
   18d44:	sdiv	r1, r2, r1
   18d48:	cmp	r0, r1
   18d4c:	blt	18ed8 <__assert_fail@plt+0x7df0>
   18d50:	b	18ef0 <__assert_fail@plt+0x7e08>
   18d54:	b	18d58 <__assert_fail@plt+0x7c70>
   18d58:	ldr	r0, [pc, #4084]	; 19d54 <__assert_fail@plt+0x8c6c>
   18d5c:	ldr	r1, [fp, #8]
   18d60:	cmp	r1, r0
   18d64:	blt	18d7c <__assert_fail@plt+0x7c94>
   18d68:	b	18d88 <__assert_fail@plt+0x7ca0>
   18d6c:	ldr	r0, [fp, #8]
   18d70:	movw	r1, #0
   18d74:	cmp	r1, r0
   18d78:	bge	18d88 <__assert_fail@plt+0x7ca0>
   18d7c:	movw	r0, #0
   18d80:	str	r0, [fp, #-36]	; 0xffffffdc
   18d84:	b	18da0 <__assert_fail@plt+0x7cb8>
   18d88:	ldr	r0, [fp, #8]
   18d8c:	movw	r1, #0
   18d90:	sub	r0, r1, r0
   18d94:	movw	r1, #127	; 0x7f
   18d98:	sdiv	r0, r1, r0
   18d9c:	str	r0, [fp, #-36]	; 0xffffffdc
   18da0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18da8:	mvn	r2, #0
   18dac:	sub	r1, r2, r1
   18db0:	cmp	r0, r1
   18db4:	ble	18ed8 <__assert_fail@plt+0x7df0>
   18db8:	b	18ef0 <__assert_fail@plt+0x7e08>
   18dbc:	b	18dc0 <__assert_fail@plt+0x7cd8>
   18dc0:	b	18e1c <__assert_fail@plt+0x7d34>
   18dc4:	b	18e1c <__assert_fail@plt+0x7d34>
   18dc8:	ldr	r0, [fp, #8]
   18dcc:	cmn	r0, #1
   18dd0:	bne	18e1c <__assert_fail@plt+0x7d34>
   18dd4:	b	18dd8 <__assert_fail@plt+0x7cf0>
   18dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ddc:	mvn	r1, #127	; 0x7f
   18de0:	add	r0, r0, r1
   18de4:	movw	r1, #0
   18de8:	cmp	r1, r0
   18dec:	blt	18ed8 <__assert_fail@plt+0x7df0>
   18df0:	b	18ef0 <__assert_fail@plt+0x7e08>
   18df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df8:	movw	r1, #0
   18dfc:	cmp	r1, r0
   18e00:	bge	18ef0 <__assert_fail@plt+0x7e08>
   18e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e08:	sub	r0, r0, #1
   18e0c:	movw	r1, #127	; 0x7f
   18e10:	cmp	r1, r0
   18e14:	blt	18ed8 <__assert_fail@plt+0x7df0>
   18e18:	b	18ef0 <__assert_fail@plt+0x7e08>
   18e1c:	ldr	r0, [fp, #8]
   18e20:	mvn	r1, #127	; 0x7f
   18e24:	sdiv	r0, r1, r0
   18e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e2c:	cmp	r0, r1
   18e30:	blt	18ed8 <__assert_fail@plt+0x7df0>
   18e34:	b	18ef0 <__assert_fail@plt+0x7e08>
   18e38:	ldr	r0, [fp, #8]
   18e3c:	cmp	r0, #0
   18e40:	bne	18e48 <__assert_fail@plt+0x7d60>
   18e44:	b	18ef0 <__assert_fail@plt+0x7e08>
   18e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e4c:	cmp	r0, #0
   18e50:	bge	18ec0 <__assert_fail@plt+0x7dd8>
   18e54:	b	18e58 <__assert_fail@plt+0x7d70>
   18e58:	b	18ea4 <__assert_fail@plt+0x7dbc>
   18e5c:	b	18ea4 <__assert_fail@plt+0x7dbc>
   18e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e64:	cmn	r0, #1
   18e68:	bne	18ea4 <__assert_fail@plt+0x7dbc>
   18e6c:	b	18e70 <__assert_fail@plt+0x7d88>
   18e70:	ldr	r0, [fp, #8]
   18e74:	mvn	r1, #127	; 0x7f
   18e78:	add	r0, r0, r1
   18e7c:	movw	r1, #0
   18e80:	cmp	r1, r0
   18e84:	blt	18ed8 <__assert_fail@plt+0x7df0>
   18e88:	b	18ef0 <__assert_fail@plt+0x7e08>
   18e8c:	ldr	r0, [fp, #8]
   18e90:	sub	r0, r0, #1
   18e94:	movw	r1, #127	; 0x7f
   18e98:	cmp	r1, r0
   18e9c:	blt	18ed8 <__assert_fail@plt+0x7df0>
   18ea0:	b	18ef0 <__assert_fail@plt+0x7e08>
   18ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ea8:	mvn	r1, #127	; 0x7f
   18eac:	sdiv	r0, r1, r0
   18eb0:	ldr	r1, [fp, #8]
   18eb4:	cmp	r0, r1
   18eb8:	blt	18ed8 <__assert_fail@plt+0x7df0>
   18ebc:	b	18ef0 <__assert_fail@plt+0x7e08>
   18ec0:	ldr	r0, [fp, #8]
   18ec4:	movw	r1, #127	; 0x7f
   18ec8:	sdiv	r0, r1, r0
   18ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ed0:	cmp	r0, r1
   18ed4:	bge	18ef0 <__assert_fail@plt+0x7e08>
   18ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18edc:	ldr	r1, [fp, #8]
   18ee0:	mul	r0, r0, r1
   18ee4:	sxtb	r0, r0
   18ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   18eec:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   18ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef4:	ldr	r1, [fp, #8]
   18ef8:	mul	r0, r0, r1
   18efc:	sxtb	r0, r0
   18f00:	str	r0, [fp, #-28]	; 0xffffffe4
   18f04:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   18f08:	ldr	r0, [fp, #8]
   18f0c:	cmp	r0, #0
   18f10:	bge	19020 <__assert_fail@plt+0x7f38>
   18f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f18:	cmp	r0, #0
   18f1c:	bge	18fa8 <__assert_fail@plt+0x7ec0>
   18f20:	b	18f24 <__assert_fail@plt+0x7e3c>
   18f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f28:	ldr	r1, [fp, #8]
   18f2c:	movw	r2, #255	; 0xff
   18f30:	sdiv	r1, r2, r1
   18f34:	cmp	r0, r1
   18f38:	blt	190bc <__assert_fail@plt+0x7fd4>
   18f3c:	b	190d4 <__assert_fail@plt+0x7fec>
   18f40:	b	18f44 <__assert_fail@plt+0x7e5c>
   18f44:	ldr	r0, [pc, #3592]	; 19d54 <__assert_fail@plt+0x8c6c>
   18f48:	ldr	r1, [fp, #8]
   18f4c:	cmp	r1, r0
   18f50:	blt	18f68 <__assert_fail@plt+0x7e80>
   18f54:	b	18f74 <__assert_fail@plt+0x7e8c>
   18f58:	ldr	r0, [fp, #8]
   18f5c:	movw	r1, #0
   18f60:	cmp	r1, r0
   18f64:	bge	18f74 <__assert_fail@plt+0x7e8c>
   18f68:	movw	r0, #0
   18f6c:	str	r0, [fp, #-40]	; 0xffffffd8
   18f70:	b	18f8c <__assert_fail@plt+0x7ea4>
   18f74:	ldr	r0, [fp, #8]
   18f78:	movw	r1, #0
   18f7c:	sub	r0, r1, r0
   18f80:	movw	r1, #255	; 0xff
   18f84:	sdiv	r0, r1, r0
   18f88:	str	r0, [fp, #-40]	; 0xffffffd8
   18f8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f94:	mvn	r2, #0
   18f98:	sub	r1, r2, r1
   18f9c:	cmp	r0, r1
   18fa0:	ble	190bc <__assert_fail@plt+0x7fd4>
   18fa4:	b	190d4 <__assert_fail@plt+0x7fec>
   18fa8:	b	18fac <__assert_fail@plt+0x7ec4>
   18fac:	b	19004 <__assert_fail@plt+0x7f1c>
   18fb0:	b	19004 <__assert_fail@plt+0x7f1c>
   18fb4:	ldr	r0, [fp, #8]
   18fb8:	cmn	r0, #1
   18fbc:	bne	19004 <__assert_fail@plt+0x7f1c>
   18fc0:	b	18fc4 <__assert_fail@plt+0x7edc>
   18fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc8:	add	r0, r0, #0
   18fcc:	movw	r1, #0
   18fd0:	cmp	r1, r0
   18fd4:	blt	190bc <__assert_fail@plt+0x7fd4>
   18fd8:	b	190d4 <__assert_fail@plt+0x7fec>
   18fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fe0:	movw	r1, #0
   18fe4:	cmp	r1, r0
   18fe8:	bge	190d4 <__assert_fail@plt+0x7fec>
   18fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff0:	sub	r0, r0, #1
   18ff4:	mvn	r1, #0
   18ff8:	cmp	r1, r0
   18ffc:	blt	190bc <__assert_fail@plt+0x7fd4>
   19000:	b	190d4 <__assert_fail@plt+0x7fec>
   19004:	ldr	r0, [fp, #8]
   19008:	movw	r1, #0
   1900c:	sdiv	r0, r1, r0
   19010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19014:	cmp	r0, r1
   19018:	blt	190bc <__assert_fail@plt+0x7fd4>
   1901c:	b	190d4 <__assert_fail@plt+0x7fec>
   19020:	ldr	r0, [fp, #8]
   19024:	cmp	r0, #0
   19028:	bne	19030 <__assert_fail@plt+0x7f48>
   1902c:	b	190d4 <__assert_fail@plt+0x7fec>
   19030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19034:	cmp	r0, #0
   19038:	bge	190a4 <__assert_fail@plt+0x7fbc>
   1903c:	b	19040 <__assert_fail@plt+0x7f58>
   19040:	b	19088 <__assert_fail@plt+0x7fa0>
   19044:	b	19088 <__assert_fail@plt+0x7fa0>
   19048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1904c:	cmn	r0, #1
   19050:	bne	19088 <__assert_fail@plt+0x7fa0>
   19054:	b	19058 <__assert_fail@plt+0x7f70>
   19058:	ldr	r0, [fp, #8]
   1905c:	add	r0, r0, #0
   19060:	movw	r1, #0
   19064:	cmp	r1, r0
   19068:	blt	190bc <__assert_fail@plt+0x7fd4>
   1906c:	b	190d4 <__assert_fail@plt+0x7fec>
   19070:	ldr	r0, [fp, #8]
   19074:	sub	r0, r0, #1
   19078:	mvn	r1, #0
   1907c:	cmp	r1, r0
   19080:	blt	190bc <__assert_fail@plt+0x7fd4>
   19084:	b	190d4 <__assert_fail@plt+0x7fec>
   19088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1908c:	movw	r1, #0
   19090:	sdiv	r0, r1, r0
   19094:	ldr	r1, [fp, #8]
   19098:	cmp	r0, r1
   1909c:	blt	190bc <__assert_fail@plt+0x7fd4>
   190a0:	b	190d4 <__assert_fail@plt+0x7fec>
   190a4:	ldr	r0, [fp, #8]
   190a8:	movw	r1, #255	; 0xff
   190ac:	sdiv	r0, r1, r0
   190b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190b4:	cmp	r0, r1
   190b8:	bge	190d4 <__assert_fail@plt+0x7fec>
   190bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190c0:	ldr	r1, [fp, #8]
   190c4:	mul	r0, r0, r1
   190c8:	and	r0, r0, #255	; 0xff
   190cc:	str	r0, [fp, #-28]	; 0xffffffe4
   190d0:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   190d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190d8:	ldr	r1, [fp, #8]
   190dc:	mul	r0, r0, r1
   190e0:	and	r0, r0, #255	; 0xff
   190e4:	str	r0, [fp, #-28]	; 0xffffffe4
   190e8:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   190ec:	b	194c4 <__assert_fail@plt+0x83dc>
   190f0:	b	190f4 <__assert_fail@plt+0x800c>
   190f4:	ldr	r0, [fp, #8]
   190f8:	cmp	r0, #0
   190fc:	bge	19210 <__assert_fail@plt+0x8128>
   19100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19104:	cmp	r0, #0
   19108:	bge	19194 <__assert_fail@plt+0x80ac>
   1910c:	b	19110 <__assert_fail@plt+0x8028>
   19110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19114:	ldr	r1, [fp, #8]
   19118:	movw	r2, #32767	; 0x7fff
   1911c:	sdiv	r1, r2, r1
   19120:	cmp	r0, r1
   19124:	blt	192b0 <__assert_fail@plt+0x81c8>
   19128:	b	192c8 <__assert_fail@plt+0x81e0>
   1912c:	b	19130 <__assert_fail@plt+0x8048>
   19130:	ldr	r0, [pc, #3100]	; 19d54 <__assert_fail@plt+0x8c6c>
   19134:	ldr	r1, [fp, #8]
   19138:	cmp	r1, r0
   1913c:	blt	19154 <__assert_fail@plt+0x806c>
   19140:	b	19160 <__assert_fail@plt+0x8078>
   19144:	ldr	r0, [fp, #8]
   19148:	movw	r1, #0
   1914c:	cmp	r1, r0
   19150:	bge	19160 <__assert_fail@plt+0x8078>
   19154:	movw	r0, #0
   19158:	str	r0, [fp, #-44]	; 0xffffffd4
   1915c:	b	19178 <__assert_fail@plt+0x8090>
   19160:	ldr	r0, [fp, #8]
   19164:	movw	r1, #0
   19168:	sub	r0, r1, r0
   1916c:	movw	r1, #32767	; 0x7fff
   19170:	sdiv	r0, r1, r0
   19174:	str	r0, [fp, #-44]	; 0xffffffd4
   19178:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1917c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19180:	mvn	r2, #0
   19184:	sub	r1, r2, r1
   19188:	cmp	r0, r1
   1918c:	ble	192b0 <__assert_fail@plt+0x81c8>
   19190:	b	192c8 <__assert_fail@plt+0x81e0>
   19194:	b	19198 <__assert_fail@plt+0x80b0>
   19198:	b	191f4 <__assert_fail@plt+0x810c>
   1919c:	b	191f4 <__assert_fail@plt+0x810c>
   191a0:	ldr	r0, [fp, #8]
   191a4:	cmn	r0, #1
   191a8:	bne	191f4 <__assert_fail@plt+0x810c>
   191ac:	b	191b0 <__assert_fail@plt+0x80c8>
   191b0:	ldr	r0, [pc, #4068]	; 1a19c <__assert_fail@plt+0x90b4>
   191b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191b8:	add	r0, r1, r0
   191bc:	movw	r1, #0
   191c0:	cmp	r1, r0
   191c4:	blt	192b0 <__assert_fail@plt+0x81c8>
   191c8:	b	192c8 <__assert_fail@plt+0x81e0>
   191cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d0:	movw	r1, #0
   191d4:	cmp	r1, r0
   191d8:	bge	192c8 <__assert_fail@plt+0x81e0>
   191dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191e0:	sub	r0, r0, #1
   191e4:	movw	r1, #32767	; 0x7fff
   191e8:	cmp	r1, r0
   191ec:	blt	192b0 <__assert_fail@plt+0x81c8>
   191f0:	b	192c8 <__assert_fail@plt+0x81e0>
   191f4:	ldr	r0, [pc, #4000]	; 1a19c <__assert_fail@plt+0x90b4>
   191f8:	ldr	r1, [fp, #8]
   191fc:	sdiv	r0, r0, r1
   19200:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19204:	cmp	r0, r1
   19208:	blt	192b0 <__assert_fail@plt+0x81c8>
   1920c:	b	192c8 <__assert_fail@plt+0x81e0>
   19210:	ldr	r0, [fp, #8]
   19214:	cmp	r0, #0
   19218:	bne	19220 <__assert_fail@plt+0x8138>
   1921c:	b	192c8 <__assert_fail@plt+0x81e0>
   19220:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19224:	cmp	r0, #0
   19228:	bge	19298 <__assert_fail@plt+0x81b0>
   1922c:	b	19230 <__assert_fail@plt+0x8148>
   19230:	b	1927c <__assert_fail@plt+0x8194>
   19234:	b	1927c <__assert_fail@plt+0x8194>
   19238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1923c:	cmn	r0, #1
   19240:	bne	1927c <__assert_fail@plt+0x8194>
   19244:	b	19248 <__assert_fail@plt+0x8160>
   19248:	ldr	r0, [pc, #3916]	; 1a19c <__assert_fail@plt+0x90b4>
   1924c:	ldr	r1, [fp, #8]
   19250:	add	r0, r1, r0
   19254:	movw	r1, #0
   19258:	cmp	r1, r0
   1925c:	blt	192b0 <__assert_fail@plt+0x81c8>
   19260:	b	192c8 <__assert_fail@plt+0x81e0>
   19264:	ldr	r0, [fp, #8]
   19268:	sub	r0, r0, #1
   1926c:	movw	r1, #32767	; 0x7fff
   19270:	cmp	r1, r0
   19274:	blt	192b0 <__assert_fail@plt+0x81c8>
   19278:	b	192c8 <__assert_fail@plt+0x81e0>
   1927c:	ldr	r0, [pc, #3864]	; 1a19c <__assert_fail@plt+0x90b4>
   19280:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19284:	sdiv	r0, r0, r1
   19288:	ldr	r1, [fp, #8]
   1928c:	cmp	r0, r1
   19290:	blt	192b0 <__assert_fail@plt+0x81c8>
   19294:	b	192c8 <__assert_fail@plt+0x81e0>
   19298:	ldr	r0, [fp, #8]
   1929c:	movw	r1, #32767	; 0x7fff
   192a0:	sdiv	r0, r1, r0
   192a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192a8:	cmp	r0, r1
   192ac:	bge	192c8 <__assert_fail@plt+0x81e0>
   192b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192b4:	ldr	r1, [fp, #8]
   192b8:	mul	r0, r0, r1
   192bc:	sxth	r0, r0
   192c0:	str	r0, [fp, #-28]	; 0xffffffe4
   192c4:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   192c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192cc:	ldr	r1, [fp, #8]
   192d0:	mul	r0, r0, r1
   192d4:	sxth	r0, r0
   192d8:	str	r0, [fp, #-28]	; 0xffffffe4
   192dc:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   192e0:	ldr	r0, [fp, #8]
   192e4:	cmp	r0, #0
   192e8:	bge	193f8 <__assert_fail@plt+0x8310>
   192ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192f0:	cmp	r0, #0
   192f4:	bge	19380 <__assert_fail@plt+0x8298>
   192f8:	b	192fc <__assert_fail@plt+0x8214>
   192fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19300:	ldr	r1, [fp, #8]
   19304:	movw	r2, #65535	; 0xffff
   19308:	sdiv	r1, r2, r1
   1930c:	cmp	r0, r1
   19310:	blt	19494 <__assert_fail@plt+0x83ac>
   19314:	b	194ac <__assert_fail@plt+0x83c4>
   19318:	b	1931c <__assert_fail@plt+0x8234>
   1931c:	ldr	r0, [pc, #2608]	; 19d54 <__assert_fail@plt+0x8c6c>
   19320:	ldr	r1, [fp, #8]
   19324:	cmp	r1, r0
   19328:	blt	19340 <__assert_fail@plt+0x8258>
   1932c:	b	1934c <__assert_fail@plt+0x8264>
   19330:	ldr	r0, [fp, #8]
   19334:	movw	r1, #0
   19338:	cmp	r1, r0
   1933c:	bge	1934c <__assert_fail@plt+0x8264>
   19340:	movw	r0, #0
   19344:	str	r0, [fp, #-48]	; 0xffffffd0
   19348:	b	19364 <__assert_fail@plt+0x827c>
   1934c:	ldr	r0, [fp, #8]
   19350:	movw	r1, #0
   19354:	sub	r0, r1, r0
   19358:	movw	r1, #65535	; 0xffff
   1935c:	sdiv	r0, r1, r0
   19360:	str	r0, [fp, #-48]	; 0xffffffd0
   19364:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19368:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1936c:	mvn	r2, #0
   19370:	sub	r1, r2, r1
   19374:	cmp	r0, r1
   19378:	ble	19494 <__assert_fail@plt+0x83ac>
   1937c:	b	194ac <__assert_fail@plt+0x83c4>
   19380:	b	19384 <__assert_fail@plt+0x829c>
   19384:	b	193dc <__assert_fail@plt+0x82f4>
   19388:	b	193dc <__assert_fail@plt+0x82f4>
   1938c:	ldr	r0, [fp, #8]
   19390:	cmn	r0, #1
   19394:	bne	193dc <__assert_fail@plt+0x82f4>
   19398:	b	1939c <__assert_fail@plt+0x82b4>
   1939c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193a0:	add	r0, r0, #0
   193a4:	movw	r1, #0
   193a8:	cmp	r1, r0
   193ac:	blt	19494 <__assert_fail@plt+0x83ac>
   193b0:	b	194ac <__assert_fail@plt+0x83c4>
   193b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193b8:	movw	r1, #0
   193bc:	cmp	r1, r0
   193c0:	bge	194ac <__assert_fail@plt+0x83c4>
   193c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193c8:	sub	r0, r0, #1
   193cc:	mvn	r1, #0
   193d0:	cmp	r1, r0
   193d4:	blt	19494 <__assert_fail@plt+0x83ac>
   193d8:	b	194ac <__assert_fail@plt+0x83c4>
   193dc:	ldr	r0, [fp, #8]
   193e0:	movw	r1, #0
   193e4:	sdiv	r0, r1, r0
   193e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193ec:	cmp	r0, r1
   193f0:	blt	19494 <__assert_fail@plt+0x83ac>
   193f4:	b	194ac <__assert_fail@plt+0x83c4>
   193f8:	ldr	r0, [fp, #8]
   193fc:	cmp	r0, #0
   19400:	bne	19408 <__assert_fail@plt+0x8320>
   19404:	b	194ac <__assert_fail@plt+0x83c4>
   19408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1940c:	cmp	r0, #0
   19410:	bge	1947c <__assert_fail@plt+0x8394>
   19414:	b	19418 <__assert_fail@plt+0x8330>
   19418:	b	19460 <__assert_fail@plt+0x8378>
   1941c:	b	19460 <__assert_fail@plt+0x8378>
   19420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19424:	cmn	r0, #1
   19428:	bne	19460 <__assert_fail@plt+0x8378>
   1942c:	b	19430 <__assert_fail@plt+0x8348>
   19430:	ldr	r0, [fp, #8]
   19434:	add	r0, r0, #0
   19438:	movw	r1, #0
   1943c:	cmp	r1, r0
   19440:	blt	19494 <__assert_fail@plt+0x83ac>
   19444:	b	194ac <__assert_fail@plt+0x83c4>
   19448:	ldr	r0, [fp, #8]
   1944c:	sub	r0, r0, #1
   19450:	mvn	r1, #0
   19454:	cmp	r1, r0
   19458:	blt	19494 <__assert_fail@plt+0x83ac>
   1945c:	b	194ac <__assert_fail@plt+0x83c4>
   19460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19464:	movw	r1, #0
   19468:	sdiv	r0, r1, r0
   1946c:	ldr	r1, [fp, #8]
   19470:	cmp	r0, r1
   19474:	blt	19494 <__assert_fail@plt+0x83ac>
   19478:	b	194ac <__assert_fail@plt+0x83c4>
   1947c:	ldr	r0, [fp, #8]
   19480:	movw	r1, #65535	; 0xffff
   19484:	sdiv	r0, r1, r0
   19488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1948c:	cmp	r0, r1
   19490:	bge	194ac <__assert_fail@plt+0x83c4>
   19494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19498:	ldr	r1, [fp, #8]
   1949c:	mul	r0, r0, r1
   194a0:	uxth	r0, r0
   194a4:	str	r0, [fp, #-28]	; 0xffffffe4
   194a8:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   194ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194b0:	ldr	r1, [fp, #8]
   194b4:	mul	r0, r0, r1
   194b8:	uxth	r0, r0
   194bc:	str	r0, [fp, #-28]	; 0xffffffe4
   194c0:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   194c4:	b	194c8 <__assert_fail@plt+0x83e0>
   194c8:	b	194cc <__assert_fail@plt+0x83e4>
   194cc:	ldr	r0, [fp, #8]
   194d0:	cmp	r0, #0
   194d4:	bge	195d8 <__assert_fail@plt+0x84f0>
   194d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194dc:	cmp	r0, #0
   194e0:	bge	1956c <__assert_fail@plt+0x8484>
   194e4:	b	194e8 <__assert_fail@plt+0x8400>
   194e8:	ldr	r0, [pc, #1984]	; 19cb0 <__assert_fail@plt+0x8bc8>
   194ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194f0:	ldr	r2, [fp, #8]
   194f4:	sdiv	r0, r0, r2
   194f8:	cmp	r1, r0
   194fc:	blt	19668 <__assert_fail@plt+0x8580>
   19500:	b	1967c <__assert_fail@plt+0x8594>
   19504:	b	19508 <__assert_fail@plt+0x8420>
   19508:	ldr	r0, [pc, #2116]	; 19d54 <__assert_fail@plt+0x8c6c>
   1950c:	ldr	r1, [fp, #8]
   19510:	cmp	r1, r0
   19514:	blt	1952c <__assert_fail@plt+0x8444>
   19518:	b	19538 <__assert_fail@plt+0x8450>
   1951c:	ldr	r0, [fp, #8]
   19520:	movw	r1, #0
   19524:	cmp	r1, r0
   19528:	bge	19538 <__assert_fail@plt+0x8450>
   1952c:	movw	r0, #0
   19530:	str	r0, [fp, #-52]	; 0xffffffcc
   19534:	b	19550 <__assert_fail@plt+0x8468>
   19538:	ldr	r0, [pc, #1904]	; 19cb0 <__assert_fail@plt+0x8bc8>
   1953c:	ldr	r1, [fp, #8]
   19540:	movw	r2, #0
   19544:	sub	r1, r2, r1
   19548:	sdiv	r0, r0, r1
   1954c:	str	r0, [fp, #-52]	; 0xffffffcc
   19550:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19558:	mvn	r2, #0
   1955c:	sub	r1, r2, r1
   19560:	cmp	r0, r1
   19564:	ble	19668 <__assert_fail@plt+0x8580>
   19568:	b	1967c <__assert_fail@plt+0x8594>
   1956c:	ldr	r0, [fp, #8]
   19570:	cmn	r0, #1
   19574:	bne	195bc <__assert_fail@plt+0x84d4>
   19578:	b	1957c <__assert_fail@plt+0x8494>
   1957c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19580:	add	r0, r0, #-2147483648	; 0x80000000
   19584:	movw	r1, #0
   19588:	cmp	r1, r0
   1958c:	blt	19668 <__assert_fail@plt+0x8580>
   19590:	b	1967c <__assert_fail@plt+0x8594>
   19594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19598:	movw	r1, #0
   1959c:	cmp	r1, r0
   195a0:	bge	1967c <__assert_fail@plt+0x8594>
   195a4:	ldr	r0, [pc, #1796]	; 19cb0 <__assert_fail@plt+0x8bc8>
   195a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195ac:	sub	r1, r1, #1
   195b0:	cmp	r0, r1
   195b4:	blt	19668 <__assert_fail@plt+0x8580>
   195b8:	b	1967c <__assert_fail@plt+0x8594>
   195bc:	ldr	r0, [pc, #4080]	; 1a5b4 <__assert_fail@plt+0x94cc>
   195c0:	ldr	r1, [fp, #8]
   195c4:	sdiv	r0, r0, r1
   195c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195cc:	cmp	r0, r1
   195d0:	blt	19668 <__assert_fail@plt+0x8580>
   195d4:	b	1967c <__assert_fail@plt+0x8594>
   195d8:	ldr	r0, [fp, #8]
   195dc:	cmp	r0, #0
   195e0:	bne	195e8 <__assert_fail@plt+0x8500>
   195e4:	b	1967c <__assert_fail@plt+0x8594>
   195e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195ec:	cmp	r0, #0
   195f0:	bge	19650 <__assert_fail@plt+0x8568>
   195f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195f8:	cmn	r0, #1
   195fc:	bne	19634 <__assert_fail@plt+0x854c>
   19600:	b	19604 <__assert_fail@plt+0x851c>
   19604:	ldr	r0, [fp, #8]
   19608:	add	r0, r0, #-2147483648	; 0x80000000
   1960c:	movw	r1, #0
   19610:	cmp	r1, r0
   19614:	blt	19668 <__assert_fail@plt+0x8580>
   19618:	b	1967c <__assert_fail@plt+0x8594>
   1961c:	ldr	r0, [pc, #1676]	; 19cb0 <__assert_fail@plt+0x8bc8>
   19620:	ldr	r1, [fp, #8]
   19624:	sub	r1, r1, #1
   19628:	cmp	r0, r1
   1962c:	blt	19668 <__assert_fail@plt+0x8580>
   19630:	b	1967c <__assert_fail@plt+0x8594>
   19634:	ldr	r0, [pc, #3960]	; 1a5b4 <__assert_fail@plt+0x94cc>
   19638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1963c:	sdiv	r0, r0, r1
   19640:	ldr	r1, [fp, #8]
   19644:	cmp	r0, r1
   19648:	blt	19668 <__assert_fail@plt+0x8580>
   1964c:	b	1967c <__assert_fail@plt+0x8594>
   19650:	ldr	r0, [pc, #1624]	; 19cb0 <__assert_fail@plt+0x8bc8>
   19654:	ldr	r1, [fp, #8]
   19658:	sdiv	r0, r0, r1
   1965c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19660:	cmp	r0, r1
   19664:	bge	1967c <__assert_fail@plt+0x8594>
   19668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1966c:	ldr	r1, [fp, #8]
   19670:	mul	r0, r0, r1
   19674:	str	r0, [fp, #-28]	; 0xffffffe4
   19678:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   1967c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19680:	ldr	r1, [fp, #8]
   19684:	mul	r0, r0, r1
   19688:	str	r0, [fp, #-28]	; 0xffffffe4
   1968c:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   19690:	ldr	r0, [fp, #8]
   19694:	cmp	r0, #0
   19698:	bge	197a8 <__assert_fail@plt+0x86c0>
   1969c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196a0:	cmp	r0, #0
   196a4:	bge	19730 <__assert_fail@plt+0x8648>
   196a8:	b	196c8 <__assert_fail@plt+0x85e0>
   196ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196b0:	ldr	r1, [fp, #8]
   196b4:	mvn	r2, #0
   196b8:	udiv	r1, r2, r1
   196bc:	cmp	r0, r1
   196c0:	bcc	19844 <__assert_fail@plt+0x875c>
   196c4:	b	19858 <__assert_fail@plt+0x8770>
   196c8:	b	196cc <__assert_fail@plt+0x85e4>
   196cc:	ldr	r0, [pc, #1664]	; 19d54 <__assert_fail@plt+0x8c6c>
   196d0:	ldr	r1, [fp, #8]
   196d4:	cmp	r1, r0
   196d8:	blt	196f0 <__assert_fail@plt+0x8608>
   196dc:	b	196fc <__assert_fail@plt+0x8614>
   196e0:	ldr	r0, [fp, #8]
   196e4:	movw	r1, #0
   196e8:	cmp	r1, r0
   196ec:	bge	196fc <__assert_fail@plt+0x8614>
   196f0:	movw	r0, #1
   196f4:	str	r0, [fp, #-56]	; 0xffffffc8
   196f8:	b	19714 <__assert_fail@plt+0x862c>
   196fc:	ldr	r0, [fp, #8]
   19700:	movw	r1, #0
   19704:	sub	r0, r1, r0
   19708:	mvn	r1, #0
   1970c:	udiv	r0, r1, r0
   19710:	str	r0, [fp, #-56]	; 0xffffffc8
   19714:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19718:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1971c:	mvn	r2, #0
   19720:	sub	r1, r2, r1
   19724:	cmp	r0, r1
   19728:	bls	19844 <__assert_fail@plt+0x875c>
   1972c:	b	19858 <__assert_fail@plt+0x8770>
   19730:	b	19734 <__assert_fail@plt+0x864c>
   19734:	b	1978c <__assert_fail@plt+0x86a4>
   19738:	b	1978c <__assert_fail@plt+0x86a4>
   1973c:	ldr	r0, [fp, #8]
   19740:	cmn	r0, #1
   19744:	bne	1978c <__assert_fail@plt+0x86a4>
   19748:	b	1974c <__assert_fail@plt+0x8664>
   1974c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19750:	add	r0, r0, #0
   19754:	movw	r1, #0
   19758:	cmp	r1, r0
   1975c:	blt	19844 <__assert_fail@plt+0x875c>
   19760:	b	19858 <__assert_fail@plt+0x8770>
   19764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19768:	movw	r1, #0
   1976c:	cmp	r1, r0
   19770:	bge	19858 <__assert_fail@plt+0x8770>
   19774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19778:	sub	r0, r0, #1
   1977c:	mvn	r1, #0
   19780:	cmp	r1, r0
   19784:	blt	19844 <__assert_fail@plt+0x875c>
   19788:	b	19858 <__assert_fail@plt+0x8770>
   1978c:	ldr	r0, [fp, #8]
   19790:	movw	r1, #0
   19794:	sdiv	r0, r1, r0
   19798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1979c:	cmp	r0, r1
   197a0:	blt	19844 <__assert_fail@plt+0x875c>
   197a4:	b	19858 <__assert_fail@plt+0x8770>
   197a8:	ldr	r0, [fp, #8]
   197ac:	cmp	r0, #0
   197b0:	bne	197b8 <__assert_fail@plt+0x86d0>
   197b4:	b	19858 <__assert_fail@plt+0x8770>
   197b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197bc:	cmp	r0, #0
   197c0:	bge	1982c <__assert_fail@plt+0x8744>
   197c4:	b	197c8 <__assert_fail@plt+0x86e0>
   197c8:	b	19810 <__assert_fail@plt+0x8728>
   197cc:	b	19810 <__assert_fail@plt+0x8728>
   197d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197d4:	cmn	r0, #1
   197d8:	bne	19810 <__assert_fail@plt+0x8728>
   197dc:	b	197e0 <__assert_fail@plt+0x86f8>
   197e0:	ldr	r0, [fp, #8]
   197e4:	add	r0, r0, #0
   197e8:	movw	r1, #0
   197ec:	cmp	r1, r0
   197f0:	blt	19844 <__assert_fail@plt+0x875c>
   197f4:	b	19858 <__assert_fail@plt+0x8770>
   197f8:	ldr	r0, [fp, #8]
   197fc:	sub	r0, r0, #1
   19800:	mvn	r1, #0
   19804:	cmp	r1, r0
   19808:	blt	19844 <__assert_fail@plt+0x875c>
   1980c:	b	19858 <__assert_fail@plt+0x8770>
   19810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19814:	movw	r1, #0
   19818:	sdiv	r0, r1, r0
   1981c:	ldr	r1, [fp, #8]
   19820:	cmp	r0, r1
   19824:	blt	19844 <__assert_fail@plt+0x875c>
   19828:	b	19858 <__assert_fail@plt+0x8770>
   1982c:	ldr	r0, [fp, #8]
   19830:	mvn	r1, #0
   19834:	udiv	r0, r1, r0
   19838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1983c:	cmp	r0, r1
   19840:	bcs	19858 <__assert_fail@plt+0x8770>
   19844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19848:	ldr	r1, [fp, #8]
   1984c:	mul	r0, r0, r1
   19850:	str	r0, [fp, #-28]	; 0xffffffe4
   19854:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   19858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1985c:	ldr	r1, [fp, #8]
   19860:	mul	r0, r0, r1
   19864:	str	r0, [fp, #-28]	; 0xffffffe4
   19868:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   1986c:	b	19870 <__assert_fail@plt+0x8788>
   19870:	b	19874 <__assert_fail@plt+0x878c>
   19874:	ldr	r0, [fp, #8]
   19878:	cmp	r0, #0
   1987c:	bge	19980 <__assert_fail@plt+0x8898>
   19880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19884:	cmp	r0, #0
   19888:	bge	19914 <__assert_fail@plt+0x882c>
   1988c:	b	19890 <__assert_fail@plt+0x87a8>
   19890:	ldr	r0, [pc, #1048]	; 19cb0 <__assert_fail@plt+0x8bc8>
   19894:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19898:	ldr	r2, [fp, #8]
   1989c:	sdiv	r0, r0, r2
   198a0:	cmp	r1, r0
   198a4:	blt	19a10 <__assert_fail@plt+0x8928>
   198a8:	b	19a24 <__assert_fail@plt+0x893c>
   198ac:	b	198b0 <__assert_fail@plt+0x87c8>
   198b0:	ldr	r0, [pc, #1180]	; 19d54 <__assert_fail@plt+0x8c6c>
   198b4:	ldr	r1, [fp, #8]
   198b8:	cmp	r1, r0
   198bc:	blt	198d4 <__assert_fail@plt+0x87ec>
   198c0:	b	198e0 <__assert_fail@plt+0x87f8>
   198c4:	ldr	r0, [fp, #8]
   198c8:	movw	r1, #0
   198cc:	cmp	r1, r0
   198d0:	bge	198e0 <__assert_fail@plt+0x87f8>
   198d4:	movw	r0, #0
   198d8:	str	r0, [fp, #-60]	; 0xffffffc4
   198dc:	b	198f8 <__assert_fail@plt+0x8810>
   198e0:	ldr	r0, [pc, #968]	; 19cb0 <__assert_fail@plt+0x8bc8>
   198e4:	ldr	r1, [fp, #8]
   198e8:	movw	r2, #0
   198ec:	sub	r1, r2, r1
   198f0:	sdiv	r0, r0, r1
   198f4:	str	r0, [fp, #-60]	; 0xffffffc4
   198f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   198fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19900:	mvn	r2, #0
   19904:	sub	r1, r2, r1
   19908:	cmp	r0, r1
   1990c:	ble	19a10 <__assert_fail@plt+0x8928>
   19910:	b	19a24 <__assert_fail@plt+0x893c>
   19914:	ldr	r0, [fp, #8]
   19918:	cmn	r0, #1
   1991c:	bne	19964 <__assert_fail@plt+0x887c>
   19920:	b	19924 <__assert_fail@plt+0x883c>
   19924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19928:	add	r0, r0, #-2147483648	; 0x80000000
   1992c:	movw	r1, #0
   19930:	cmp	r1, r0
   19934:	blt	19a10 <__assert_fail@plt+0x8928>
   19938:	b	19a24 <__assert_fail@plt+0x893c>
   1993c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19940:	movw	r1, #0
   19944:	cmp	r1, r0
   19948:	bge	19a24 <__assert_fail@plt+0x893c>
   1994c:	ldr	r0, [pc, #860]	; 19cb0 <__assert_fail@plt+0x8bc8>
   19950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19954:	sub	r1, r1, #1
   19958:	cmp	r0, r1
   1995c:	blt	19a10 <__assert_fail@plt+0x8928>
   19960:	b	19a24 <__assert_fail@plt+0x893c>
   19964:	ldr	r0, [pc, #3144]	; 1a5b4 <__assert_fail@plt+0x94cc>
   19968:	ldr	r1, [fp, #8]
   1996c:	sdiv	r0, r0, r1
   19970:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19974:	cmp	r0, r1
   19978:	blt	19a10 <__assert_fail@plt+0x8928>
   1997c:	b	19a24 <__assert_fail@plt+0x893c>
   19980:	ldr	r0, [fp, #8]
   19984:	cmp	r0, #0
   19988:	bne	19990 <__assert_fail@plt+0x88a8>
   1998c:	b	19a24 <__assert_fail@plt+0x893c>
   19990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19994:	cmp	r0, #0
   19998:	bge	199f8 <__assert_fail@plt+0x8910>
   1999c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199a0:	cmn	r0, #1
   199a4:	bne	199dc <__assert_fail@plt+0x88f4>
   199a8:	b	199ac <__assert_fail@plt+0x88c4>
   199ac:	ldr	r0, [fp, #8]
   199b0:	add	r0, r0, #-2147483648	; 0x80000000
   199b4:	movw	r1, #0
   199b8:	cmp	r1, r0
   199bc:	blt	19a10 <__assert_fail@plt+0x8928>
   199c0:	b	19a24 <__assert_fail@plt+0x893c>
   199c4:	ldr	r0, [pc, #740]	; 19cb0 <__assert_fail@plt+0x8bc8>
   199c8:	ldr	r1, [fp, #8]
   199cc:	sub	r1, r1, #1
   199d0:	cmp	r0, r1
   199d4:	blt	19a10 <__assert_fail@plt+0x8928>
   199d8:	b	19a24 <__assert_fail@plt+0x893c>
   199dc:	ldr	r0, [pc, #3024]	; 1a5b4 <__assert_fail@plt+0x94cc>
   199e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199e4:	sdiv	r0, r0, r1
   199e8:	ldr	r1, [fp, #8]
   199ec:	cmp	r0, r1
   199f0:	blt	19a10 <__assert_fail@plt+0x8928>
   199f4:	b	19a24 <__assert_fail@plt+0x893c>
   199f8:	ldr	r0, [pc, #688]	; 19cb0 <__assert_fail@plt+0x8bc8>
   199fc:	ldr	r1, [fp, #8]
   19a00:	sdiv	r0, r0, r1
   19a04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a08:	cmp	r0, r1
   19a0c:	bge	19a24 <__assert_fail@plt+0x893c>
   19a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a14:	ldr	r1, [fp, #8]
   19a18:	mul	r0, r0, r1
   19a1c:	str	r0, [fp, #-28]	; 0xffffffe4
   19a20:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   19a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a28:	ldr	r1, [fp, #8]
   19a2c:	mul	r0, r0, r1
   19a30:	str	r0, [fp, #-28]	; 0xffffffe4
   19a34:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   19a38:	ldr	r0, [fp, #8]
   19a3c:	cmp	r0, #0
   19a40:	bge	19b50 <__assert_fail@plt+0x8a68>
   19a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a48:	cmp	r0, #0
   19a4c:	bge	19ad8 <__assert_fail@plt+0x89f0>
   19a50:	b	19a70 <__assert_fail@plt+0x8988>
   19a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a58:	ldr	r1, [fp, #8]
   19a5c:	mvn	r2, #0
   19a60:	udiv	r1, r2, r1
   19a64:	cmp	r0, r1
   19a68:	bcc	19bec <__assert_fail@plt+0x8b04>
   19a6c:	b	19c00 <__assert_fail@plt+0x8b18>
   19a70:	b	19a74 <__assert_fail@plt+0x898c>
   19a74:	ldr	r0, [pc, #728]	; 19d54 <__assert_fail@plt+0x8c6c>
   19a78:	ldr	r1, [fp, #8]
   19a7c:	cmp	r1, r0
   19a80:	blt	19a98 <__assert_fail@plt+0x89b0>
   19a84:	b	19aa4 <__assert_fail@plt+0x89bc>
   19a88:	ldr	r0, [fp, #8]
   19a8c:	movw	r1, #0
   19a90:	cmp	r1, r0
   19a94:	bge	19aa4 <__assert_fail@plt+0x89bc>
   19a98:	movw	r0, #1
   19a9c:	str	r0, [fp, #-64]	; 0xffffffc0
   19aa0:	b	19abc <__assert_fail@plt+0x89d4>
   19aa4:	ldr	r0, [fp, #8]
   19aa8:	movw	r1, #0
   19aac:	sub	r0, r1, r0
   19ab0:	mvn	r1, #0
   19ab4:	udiv	r0, r1, r0
   19ab8:	str	r0, [fp, #-64]	; 0xffffffc0
   19abc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19ac0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ac4:	mvn	r2, #0
   19ac8:	sub	r1, r2, r1
   19acc:	cmp	r0, r1
   19ad0:	bls	19bec <__assert_fail@plt+0x8b04>
   19ad4:	b	19c00 <__assert_fail@plt+0x8b18>
   19ad8:	b	19adc <__assert_fail@plt+0x89f4>
   19adc:	b	19b34 <__assert_fail@plt+0x8a4c>
   19ae0:	b	19b34 <__assert_fail@plt+0x8a4c>
   19ae4:	ldr	r0, [fp, #8]
   19ae8:	cmn	r0, #1
   19aec:	bne	19b34 <__assert_fail@plt+0x8a4c>
   19af0:	b	19af4 <__assert_fail@plt+0x8a0c>
   19af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19af8:	add	r0, r0, #0
   19afc:	movw	r1, #0
   19b00:	cmp	r1, r0
   19b04:	blt	19bec <__assert_fail@plt+0x8b04>
   19b08:	b	19c00 <__assert_fail@plt+0x8b18>
   19b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b10:	movw	r1, #0
   19b14:	cmp	r1, r0
   19b18:	bge	19c00 <__assert_fail@plt+0x8b18>
   19b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b20:	sub	r0, r0, #1
   19b24:	mvn	r1, #0
   19b28:	cmp	r1, r0
   19b2c:	blt	19bec <__assert_fail@plt+0x8b04>
   19b30:	b	19c00 <__assert_fail@plt+0x8b18>
   19b34:	ldr	r0, [fp, #8]
   19b38:	movw	r1, #0
   19b3c:	sdiv	r0, r1, r0
   19b40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b44:	cmp	r0, r1
   19b48:	blt	19bec <__assert_fail@plt+0x8b04>
   19b4c:	b	19c00 <__assert_fail@plt+0x8b18>
   19b50:	ldr	r0, [fp, #8]
   19b54:	cmp	r0, #0
   19b58:	bne	19b60 <__assert_fail@plt+0x8a78>
   19b5c:	b	19c00 <__assert_fail@plt+0x8b18>
   19b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b64:	cmp	r0, #0
   19b68:	bge	19bd4 <__assert_fail@plt+0x8aec>
   19b6c:	b	19b70 <__assert_fail@plt+0x8a88>
   19b70:	b	19bb8 <__assert_fail@plt+0x8ad0>
   19b74:	b	19bb8 <__assert_fail@plt+0x8ad0>
   19b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b7c:	cmn	r0, #1
   19b80:	bne	19bb8 <__assert_fail@plt+0x8ad0>
   19b84:	b	19b88 <__assert_fail@plt+0x8aa0>
   19b88:	ldr	r0, [fp, #8]
   19b8c:	add	r0, r0, #0
   19b90:	movw	r1, #0
   19b94:	cmp	r1, r0
   19b98:	blt	19bec <__assert_fail@plt+0x8b04>
   19b9c:	b	19c00 <__assert_fail@plt+0x8b18>
   19ba0:	ldr	r0, [fp, #8]
   19ba4:	sub	r0, r0, #1
   19ba8:	mvn	r1, #0
   19bac:	cmp	r1, r0
   19bb0:	blt	19bec <__assert_fail@plt+0x8b04>
   19bb4:	b	19c00 <__assert_fail@plt+0x8b18>
   19bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bbc:	movw	r1, #0
   19bc0:	sdiv	r0, r1, r0
   19bc4:	ldr	r1, [fp, #8]
   19bc8:	cmp	r0, r1
   19bcc:	blt	19bec <__assert_fail@plt+0x8b04>
   19bd0:	b	19c00 <__assert_fail@plt+0x8b18>
   19bd4:	ldr	r0, [fp, #8]
   19bd8:	mvn	r1, #0
   19bdc:	udiv	r0, r1, r0
   19be0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19be4:	cmp	r0, r1
   19be8:	bcs	19c00 <__assert_fail@plt+0x8b18>
   19bec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bf0:	ldr	r1, [fp, #8]
   19bf4:	mul	r0, r0, r1
   19bf8:	str	r0, [fp, #-28]	; 0xffffffe4
   19bfc:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   19c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c04:	ldr	r1, [fp, #8]
   19c08:	mul	r0, r0, r1
   19c0c:	str	r0, [fp, #-28]	; 0xffffffe4
   19c10:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   19c14:	b	19c18 <__assert_fail@plt+0x8b30>
   19c18:	ldr	r0, [fp, #8]
   19c1c:	cmp	r0, #0
   19c20:	bge	19d90 <__assert_fail@plt+0x8ca8>
   19c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c28:	cmp	r0, #0
   19c2c:	bge	19d08 <__assert_fail@plt+0x8c20>
   19c30:	b	19c34 <__assert_fail@plt+0x8b4c>
   19c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c38:	ldr	r1, [fp, #8]
   19c3c:	asr	r3, r1, #31
   19c40:	mvn	r2, #0
   19c44:	mvn	ip, #-2147483648	; 0x80000000
   19c48:	str	r0, [fp, #-68]	; 0xffffffbc
   19c4c:	mov	r0, r2
   19c50:	str	r1, [fp, #-72]	; 0xffffffb8
   19c54:	mov	r1, ip
   19c58:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19c5c:	bl	1e464 <__assert_fail@plt+0xd37c>
   19c60:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19c64:	subs	r0, r2, r0
   19c68:	rscs	r1, r1, r2, asr #31
   19c6c:	blt	19e58 <__assert_fail@plt+0x8d70>
   19c70:	b	19e6c <__assert_fail@plt+0x8d84>
   19c74:	b	19c78 <__assert_fail@plt+0x8b90>
   19c78:	ldr	r0, [pc, #212]	; 19d54 <__assert_fail@plt+0x8c6c>
   19c7c:	ldr	r1, [fp, #8]
   19c80:	cmp	r1, r0
   19c84:	blt	19c9c <__assert_fail@plt+0x8bb4>
   19c88:	b	19cb4 <__assert_fail@plt+0x8bcc>
   19c8c:	ldr	r0, [fp, #8]
   19c90:	movw	r1, #0
   19c94:	cmp	r1, r0
   19c98:	bge	19cb4 <__assert_fail@plt+0x8bcc>
   19c9c:	mov	r0, #0
   19ca0:	mvn	r1, #0
   19ca4:	str	r1, [fp, #-76]	; 0xffffffb4
   19ca8:	str	r0, [fp, #-80]	; 0xffffffb0
   19cac:	b	19ce8 <__assert_fail@plt+0x8c00>
   19cb0:	svcvc	0x00ffffff
   19cb4:	ldr	r0, [fp, #8]
   19cb8:	rsb	r0, r0, #0
   19cbc:	asr	r3, r0, #31
   19cc0:	mvn	r1, #0
   19cc4:	mvn	r2, #-2147483648	; 0x80000000
   19cc8:	str	r0, [fp, #-84]	; 0xffffffac
   19ccc:	mov	r0, r1
   19cd0:	mov	r1, r2
   19cd4:	ldr	r2, [fp, #-84]	; 0xffffffac
   19cd8:	bl	1e464 <__assert_fail@plt+0xd37c>
   19cdc:	str	r0, [fp, #-76]	; 0xffffffb4
   19ce0:	str	r1, [fp, #-80]	; 0xffffffb0
   19ce4:	b	19ce8 <__assert_fail@plt+0x8c00>
   19ce8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   19cec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19cf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19cf4:	mvn	r2, r2
   19cf8:	subs	r1, r2, r1
   19cfc:	rscs	r0, r0, r2, asr #31
   19d00:	bge	19e58 <__assert_fail@plt+0x8d70>
   19d04:	b	19e6c <__assert_fail@plt+0x8d84>
   19d08:	ldr	r0, [fp, #8]
   19d0c:	cmn	r0, #1
   19d10:	bne	19d58 <__assert_fail@plt+0x8c70>
   19d14:	b	19d18 <__assert_fail@plt+0x8c30>
   19d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d1c:	mov	r1, #-2147483648	; 0x80000000
   19d20:	add	r1, r1, r0, asr #31
   19d24:	rsbs	r0, r0, #0
   19d28:	rscs	r1, r1, #0
   19d2c:	blt	19e58 <__assert_fail@plt+0x8d70>
   19d30:	b	19e6c <__assert_fail@plt+0x8d84>
   19d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d38:	movw	r1, #0
   19d3c:	cmp	r1, r0
   19d40:	bge	19e6c <__assert_fail@plt+0x8d84>
   19d44:	mov	r0, #0
   19d48:	cmp	r0, #0
   19d4c:	bne	19e58 <__assert_fail@plt+0x8d70>
   19d50:	b	19e6c <__assert_fail@plt+0x8d84>
   19d54:	andhi	r0, r0, r1
   19d58:	ldr	r0, [fp, #8]
   19d5c:	asr	r3, r0, #31
   19d60:	mov	r1, #0
   19d64:	mov	r2, #-2147483648	; 0x80000000
   19d68:	str	r0, [fp, #-88]	; 0xffffffa8
   19d6c:	mov	r0, r1
   19d70:	mov	r1, r2
   19d74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19d78:	bl	1e464 <__assert_fail@plt+0xd37c>
   19d7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d80:	subs	r0, r0, r2
   19d84:	sbcs	r1, r1, r2, asr #31
   19d88:	blt	19e58 <__assert_fail@plt+0x8d70>
   19d8c:	b	19e6c <__assert_fail@plt+0x8d84>
   19d90:	ldr	r0, [fp, #8]
   19d94:	cmp	r0, #0
   19d98:	bne	19da0 <__assert_fail@plt+0x8cb8>
   19d9c:	b	19e6c <__assert_fail@plt+0x8d84>
   19da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19da4:	cmp	r0, #0
   19da8:	bge	19e20 <__assert_fail@plt+0x8d38>
   19dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19db0:	cmn	r0, #1
   19db4:	bne	19de8 <__assert_fail@plt+0x8d00>
   19db8:	b	19dbc <__assert_fail@plt+0x8cd4>
   19dbc:	ldr	r0, [fp, #8]
   19dc0:	mov	r1, #-2147483648	; 0x80000000
   19dc4:	add	r1, r1, r0, asr #31
   19dc8:	rsbs	r0, r0, #0
   19dcc:	rscs	r1, r1, #0
   19dd0:	blt	19e58 <__assert_fail@plt+0x8d70>
   19dd4:	b	19e6c <__assert_fail@plt+0x8d84>
   19dd8:	mov	r0, #0
   19ddc:	cmp	r0, #0
   19de0:	bne	19e58 <__assert_fail@plt+0x8d70>
   19de4:	b	19e6c <__assert_fail@plt+0x8d84>
   19de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dec:	asr	r3, r0, #31
   19df0:	mov	r1, #0
   19df4:	mov	r2, #-2147483648	; 0x80000000
   19df8:	str	r0, [fp, #-92]	; 0xffffffa4
   19dfc:	mov	r0, r1
   19e00:	mov	r1, r2
   19e04:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19e08:	bl	1e464 <__assert_fail@plt+0xd37c>
   19e0c:	ldr	r2, [fp, #8]
   19e10:	subs	r0, r0, r2
   19e14:	sbcs	r1, r1, r2, asr #31
   19e18:	blt	19e58 <__assert_fail@plt+0x8d70>
   19e1c:	b	19e6c <__assert_fail@plt+0x8d84>
   19e20:	ldr	r0, [fp, #8]
   19e24:	asr	r3, r0, #31
   19e28:	mvn	r1, #0
   19e2c:	mvn	r2, #-2147483648	; 0x80000000
   19e30:	str	r0, [fp, #-96]	; 0xffffffa0
   19e34:	mov	r0, r1
   19e38:	mov	r1, r2
   19e3c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19e40:	bl	1e464 <__assert_fail@plt+0xd37c>
   19e44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e48:	subs	r0, r0, r2
   19e4c:	sbcs	r1, r1, r2, asr #31
   19e50:	bge	19e6c <__assert_fail@plt+0x8d84>
   19e54:	b	19e58 <__assert_fail@plt+0x8d70>
   19e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e5c:	ldr	r1, [fp, #8]
   19e60:	mul	r0, r0, r1
   19e64:	str	r0, [fp, #-28]	; 0xffffffe4
   19e68:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   19e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e70:	ldr	r1, [fp, #8]
   19e74:	mul	r0, r0, r1
   19e78:	str	r0, [fp, #-28]	; 0xffffffe4
   19e7c:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   19e80:	ldr	r0, [fp, #8]
   19e84:	cmp	r0, #0
   19e88:	bge	19fd8 <__assert_fail@plt+0x8ef0>
   19e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e90:	cmp	r0, #0
   19e94:	bge	19f60 <__assert_fail@plt+0x8e78>
   19e98:	b	19ed8 <__assert_fail@plt+0x8df0>
   19e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ea0:	ldr	r1, [fp, #8]
   19ea4:	asr	r3, r1, #31
   19ea8:	mvn	r2, #0
   19eac:	str	r0, [fp, #-100]	; 0xffffff9c
   19eb0:	mov	r0, r2
   19eb4:	str	r1, [fp, #-104]	; 0xffffff98
   19eb8:	mov	r1, r2
   19ebc:	ldr	r2, [fp, #-104]	; 0xffffff98
   19ec0:	bl	1e538 <__assert_fail@plt+0xd450>
   19ec4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19ec8:	subs	r0, r2, r0
   19ecc:	rscs	r1, r1, r2, asr #31
   19ed0:	bcc	1a08c <__assert_fail@plt+0x8fa4>
   19ed4:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   19ed8:	b	19edc <__assert_fail@plt+0x8df4>
   19edc:	ldr	r0, [pc, #-400]	; 19d54 <__assert_fail@plt+0x8c6c>
   19ee0:	ldr	r1, [fp, #8]
   19ee4:	cmp	r1, r0
   19ee8:	blt	19f00 <__assert_fail@plt+0x8e18>
   19eec:	b	19f14 <__assert_fail@plt+0x8e2c>
   19ef0:	ldr	r0, [fp, #8]
   19ef4:	movw	r1, #0
   19ef8:	cmp	r1, r0
   19efc:	bge	19f14 <__assert_fail@plt+0x8e2c>
   19f00:	mov	r0, #1
   19f04:	mvn	r1, #0
   19f08:	str	r1, [sp, #108]	; 0x6c
   19f0c:	str	r0, [sp, #104]	; 0x68
   19f10:	b	19f40 <__assert_fail@plt+0x8e58>
   19f14:	ldr	r0, [fp, #8]
   19f18:	rsb	r0, r0, #0
   19f1c:	asr	r3, r0, #31
   19f20:	mvn	r1, #0
   19f24:	str	r0, [sp, #100]	; 0x64
   19f28:	mov	r0, r1
   19f2c:	ldr	r2, [sp, #100]	; 0x64
   19f30:	bl	1e538 <__assert_fail@plt+0xd450>
   19f34:	str	r0, [sp, #108]	; 0x6c
   19f38:	str	r1, [sp, #104]	; 0x68
   19f3c:	b	19f40 <__assert_fail@plt+0x8e58>
   19f40:	ldr	r0, [sp, #104]	; 0x68
   19f44:	ldr	r1, [sp, #108]	; 0x6c
   19f48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19f4c:	mvn	r2, r2
   19f50:	subs	r1, r2, r1
   19f54:	rscs	r0, r0, r2, asr #31
   19f58:	bcs	1a08c <__assert_fail@plt+0x8fa4>
   19f5c:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   19f60:	b	19f64 <__assert_fail@plt+0x8e7c>
   19f64:	b	19fbc <__assert_fail@plt+0x8ed4>
   19f68:	b	19fbc <__assert_fail@plt+0x8ed4>
   19f6c:	ldr	r0, [fp, #8]
   19f70:	cmn	r0, #1
   19f74:	bne	19fbc <__assert_fail@plt+0x8ed4>
   19f78:	b	19f7c <__assert_fail@plt+0x8e94>
   19f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f80:	add	r0, r0, #0
   19f84:	movw	r1, #0
   19f88:	cmp	r1, r0
   19f8c:	blt	1a08c <__assert_fail@plt+0x8fa4>
   19f90:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   19f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f98:	movw	r1, #0
   19f9c:	cmp	r1, r0
   19fa0:	bge	1a0a0 <__assert_fail@plt+0x8fb8>
   19fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fa8:	sub	r0, r0, #1
   19fac:	mvn	r1, #0
   19fb0:	cmp	r1, r0
   19fb4:	blt	1a08c <__assert_fail@plt+0x8fa4>
   19fb8:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   19fbc:	ldr	r0, [fp, #8]
   19fc0:	movw	r1, #0
   19fc4:	sdiv	r0, r1, r0
   19fc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19fcc:	cmp	r0, r1
   19fd0:	blt	1a08c <__assert_fail@plt+0x8fa4>
   19fd4:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   19fd8:	ldr	r0, [fp, #8]
   19fdc:	cmp	r0, #0
   19fe0:	bne	19fe8 <__assert_fail@plt+0x8f00>
   19fe4:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   19fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fec:	cmp	r0, #0
   19ff0:	bge	1a05c <__assert_fail@plt+0x8f74>
   19ff4:	b	19ff8 <__assert_fail@plt+0x8f10>
   19ff8:	b	1a040 <__assert_fail@plt+0x8f58>
   19ffc:	b	1a040 <__assert_fail@plt+0x8f58>
   1a000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a004:	cmn	r0, #1
   1a008:	bne	1a040 <__assert_fail@plt+0x8f58>
   1a00c:	b	1a010 <__assert_fail@plt+0x8f28>
   1a010:	ldr	r0, [fp, #8]
   1a014:	add	r0, r0, #0
   1a018:	movw	r1, #0
   1a01c:	cmp	r1, r0
   1a020:	blt	1a08c <__assert_fail@plt+0x8fa4>
   1a024:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   1a028:	ldr	r0, [fp, #8]
   1a02c:	sub	r0, r0, #1
   1a030:	mvn	r1, #0
   1a034:	cmp	r1, r0
   1a038:	blt	1a08c <__assert_fail@plt+0x8fa4>
   1a03c:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   1a040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a044:	movw	r1, #0
   1a048:	sdiv	r0, r1, r0
   1a04c:	ldr	r1, [fp, #8]
   1a050:	cmp	r0, r1
   1a054:	blt	1a08c <__assert_fail@plt+0x8fa4>
   1a058:	b	1a0a0 <__assert_fail@plt+0x8fb8>
   1a05c:	ldr	r0, [fp, #8]
   1a060:	asr	r3, r0, #31
   1a064:	mvn	r1, #0
   1a068:	str	r0, [sp, #96]	; 0x60
   1a06c:	mov	r0, r1
   1a070:	ldr	r2, [sp, #96]	; 0x60
   1a074:	bl	1e538 <__assert_fail@plt+0xd450>
   1a078:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a07c:	subs	r0, r0, r2
   1a080:	sbcs	r1, r1, r2, asr #31
   1a084:	bcs	1a0a0 <__assert_fail@plt+0x8fb8>
   1a088:	b	1a08c <__assert_fail@plt+0x8fa4>
   1a08c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a090:	ldr	r1, [fp, #8]
   1a094:	mul	r0, r0, r1
   1a098:	str	r0, [fp, #-28]	; 0xffffffe4
   1a09c:	b	1a0b4 <__assert_fail@plt+0x8fcc>
   1a0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0a4:	ldr	r1, [fp, #8]
   1a0a8:	mul	r0, r0, r1
   1a0ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1a0b0:	b	1a0c0 <__assert_fail@plt+0x8fd8>
   1a0b4:	ldr	r0, [pc, #-1036]	; 19cb0 <__assert_fail@plt+0x8bc8>
   1a0b8:	str	r0, [sp, #92]	; 0x5c
   1a0bc:	b	1a0e0 <__assert_fail@plt+0x8ff8>
   1a0c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a0c4:	cmp	r0, #64	; 0x40
   1a0c8:	movw	r0, #0
   1a0cc:	movlt	r0, #1
   1a0d0:	tst	r0, #1
   1a0d4:	movw	r0, #64	; 0x40
   1a0d8:	moveq	r0, #0
   1a0dc:	str	r0, [sp, #92]	; 0x5c
   1a0e0:	ldr	r0, [sp, #92]	; 0x5c
   1a0e4:	str	r0, [fp, #-32]	; 0xffffffe0
   1a0e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0ec:	cmp	r0, #0
   1a0f0:	beq	1a120 <__assert_fail@plt+0x9038>
   1a0f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0f8:	ldr	r1, [fp, #8]
   1a0fc:	sdiv	r0, r0, r1
   1a100:	str	r0, [fp, #-24]	; 0xffffffe8
   1a104:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a108:	mov	r1, r0
   1a10c:	ldr	r2, [fp, #8]
   1a110:	sdiv	r3, r0, r2
   1a114:	mls	r0, r3, r2, r0
   1a118:	sub	r0, r1, r0
   1a11c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a120:	ldr	r0, [fp, #-4]
   1a124:	movw	r1, #0
   1a128:	cmp	r0, r1
   1a12c:	bne	1a13c <__assert_fail@plt+0x9054>
   1a130:	ldr	r0, [fp, #-8]
   1a134:	movw	r1, #0
   1a138:	str	r1, [r0]
   1a13c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a140:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a144:	sub	r0, r0, r1
   1a148:	ldr	r1, [fp, #-12]
   1a14c:	cmp	r0, r1
   1a150:	bge	1b53c <__assert_fail@plt+0xa454>
   1a154:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a158:	ldr	r1, [fp, #-12]
   1a15c:	add	r1, r0, r1
   1a160:	mov	r2, #1
   1a164:	cmp	r1, r0
   1a168:	movwvc	r2, #0
   1a16c:	str	r1, [fp, #-24]	; 0xffffffe8
   1a170:	tst	r2, #1
   1a174:	bne	1b538 <__assert_fail@plt+0xa450>
   1a178:	ldr	r0, [fp, #-16]
   1a17c:	movw	r1, #0
   1a180:	cmp	r1, r0
   1a184:	bgt	1a198 <__assert_fail@plt+0x90b0>
   1a188:	ldr	r0, [fp, #-16]
   1a18c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a190:	cmp	r0, r1
   1a194:	blt	1b538 <__assert_fail@plt+0xa450>
   1a198:	b	1a574 <__assert_fail@plt+0x948c>
   1a19c:			; <UNDEFINED> instruction: 0xffff8000
   1a1a0:	b	1a1a4 <__assert_fail@plt+0x90bc>
   1a1a4:	ldr	r0, [fp, #8]
   1a1a8:	cmp	r0, #0
   1a1ac:	bge	1a2c0 <__assert_fail@plt+0x91d8>
   1a1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1b4:	cmp	r0, #0
   1a1b8:	bge	1a244 <__assert_fail@plt+0x915c>
   1a1bc:	b	1a1c0 <__assert_fail@plt+0x90d8>
   1a1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1c4:	ldr	r1, [fp, #8]
   1a1c8:	movw	r2, #127	; 0x7f
   1a1cc:	sdiv	r1, r2, r1
   1a1d0:	cmp	r0, r1
   1a1d4:	blt	1a360 <__assert_fail@plt+0x9278>
   1a1d8:	b	1a378 <__assert_fail@plt+0x9290>
   1a1dc:	b	1a1e0 <__assert_fail@plt+0x90f8>
   1a1e0:	ldr	r0, [pc, #-1172]	; 19d54 <__assert_fail@plt+0x8c6c>
   1a1e4:	ldr	r1, [fp, #8]
   1a1e8:	cmp	r1, r0
   1a1ec:	blt	1a204 <__assert_fail@plt+0x911c>
   1a1f0:	b	1a210 <__assert_fail@plt+0x9128>
   1a1f4:	ldr	r0, [fp, #8]
   1a1f8:	movw	r1, #0
   1a1fc:	cmp	r1, r0
   1a200:	bge	1a210 <__assert_fail@plt+0x9128>
   1a204:	movw	r0, #0
   1a208:	str	r0, [sp, #88]	; 0x58
   1a20c:	b	1a228 <__assert_fail@plt+0x9140>
   1a210:	ldr	r0, [fp, #8]
   1a214:	movw	r1, #0
   1a218:	sub	r0, r1, r0
   1a21c:	movw	r1, #127	; 0x7f
   1a220:	sdiv	r0, r1, r0
   1a224:	str	r0, [sp, #88]	; 0x58
   1a228:	ldr	r0, [sp, #88]	; 0x58
   1a22c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a230:	mvn	r2, #0
   1a234:	sub	r1, r2, r1
   1a238:	cmp	r0, r1
   1a23c:	ble	1a360 <__assert_fail@plt+0x9278>
   1a240:	b	1a378 <__assert_fail@plt+0x9290>
   1a244:	b	1a248 <__assert_fail@plt+0x9160>
   1a248:	b	1a2a4 <__assert_fail@plt+0x91bc>
   1a24c:	b	1a2a4 <__assert_fail@plt+0x91bc>
   1a250:	ldr	r0, [fp, #8]
   1a254:	cmn	r0, #1
   1a258:	bne	1a2a4 <__assert_fail@plt+0x91bc>
   1a25c:	b	1a260 <__assert_fail@plt+0x9178>
   1a260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a264:	mvn	r1, #127	; 0x7f
   1a268:	add	r0, r0, r1
   1a26c:	movw	r1, #0
   1a270:	cmp	r1, r0
   1a274:	blt	1a360 <__assert_fail@plt+0x9278>
   1a278:	b	1a378 <__assert_fail@plt+0x9290>
   1a27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a280:	movw	r1, #0
   1a284:	cmp	r1, r0
   1a288:	bge	1a378 <__assert_fail@plt+0x9290>
   1a28c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a290:	sub	r0, r0, #1
   1a294:	movw	r1, #127	; 0x7f
   1a298:	cmp	r1, r0
   1a29c:	blt	1a360 <__assert_fail@plt+0x9278>
   1a2a0:	b	1a378 <__assert_fail@plt+0x9290>
   1a2a4:	ldr	r0, [fp, #8]
   1a2a8:	mvn	r1, #127	; 0x7f
   1a2ac:	sdiv	r0, r1, r0
   1a2b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2b4:	cmp	r0, r1
   1a2b8:	blt	1a360 <__assert_fail@plt+0x9278>
   1a2bc:	b	1a378 <__assert_fail@plt+0x9290>
   1a2c0:	ldr	r0, [fp, #8]
   1a2c4:	cmp	r0, #0
   1a2c8:	bne	1a2d0 <__assert_fail@plt+0x91e8>
   1a2cc:	b	1a378 <__assert_fail@plt+0x9290>
   1a2d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2d4:	cmp	r0, #0
   1a2d8:	bge	1a348 <__assert_fail@plt+0x9260>
   1a2dc:	b	1a2e0 <__assert_fail@plt+0x91f8>
   1a2e0:	b	1a32c <__assert_fail@plt+0x9244>
   1a2e4:	b	1a32c <__assert_fail@plt+0x9244>
   1a2e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2ec:	cmn	r0, #1
   1a2f0:	bne	1a32c <__assert_fail@plt+0x9244>
   1a2f4:	b	1a2f8 <__assert_fail@plt+0x9210>
   1a2f8:	ldr	r0, [fp, #8]
   1a2fc:	mvn	r1, #127	; 0x7f
   1a300:	add	r0, r0, r1
   1a304:	movw	r1, #0
   1a308:	cmp	r1, r0
   1a30c:	blt	1a360 <__assert_fail@plt+0x9278>
   1a310:	b	1a378 <__assert_fail@plt+0x9290>
   1a314:	ldr	r0, [fp, #8]
   1a318:	sub	r0, r0, #1
   1a31c:	movw	r1, #127	; 0x7f
   1a320:	cmp	r1, r0
   1a324:	blt	1a360 <__assert_fail@plt+0x9278>
   1a328:	b	1a378 <__assert_fail@plt+0x9290>
   1a32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a330:	mvn	r1, #127	; 0x7f
   1a334:	sdiv	r0, r1, r0
   1a338:	ldr	r1, [fp, #8]
   1a33c:	cmp	r0, r1
   1a340:	blt	1a360 <__assert_fail@plt+0x9278>
   1a344:	b	1a378 <__assert_fail@plt+0x9290>
   1a348:	ldr	r0, [fp, #8]
   1a34c:	movw	r1, #127	; 0x7f
   1a350:	sdiv	r0, r1, r0
   1a354:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a358:	cmp	r0, r1
   1a35c:	bge	1a378 <__assert_fail@plt+0x9290>
   1a360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a364:	ldr	r1, [fp, #8]
   1a368:	mul	r0, r0, r1
   1a36c:	sxtb	r0, r0
   1a370:	str	r0, [fp, #-28]	; 0xffffffe4
   1a374:	b	1b538 <__assert_fail@plt+0xa450>
   1a378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a37c:	ldr	r1, [fp, #8]
   1a380:	mul	r0, r0, r1
   1a384:	sxtb	r0, r0
   1a388:	str	r0, [fp, #-28]	; 0xffffffe4
   1a38c:	b	1b53c <__assert_fail@plt+0xa454>
   1a390:	ldr	r0, [fp, #8]
   1a394:	cmp	r0, #0
   1a398:	bge	1a4a8 <__assert_fail@plt+0x93c0>
   1a39c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3a0:	cmp	r0, #0
   1a3a4:	bge	1a430 <__assert_fail@plt+0x9348>
   1a3a8:	b	1a3ac <__assert_fail@plt+0x92c4>
   1a3ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3b0:	ldr	r1, [fp, #8]
   1a3b4:	movw	r2, #255	; 0xff
   1a3b8:	sdiv	r1, r2, r1
   1a3bc:	cmp	r0, r1
   1a3c0:	blt	1a544 <__assert_fail@plt+0x945c>
   1a3c4:	b	1a55c <__assert_fail@plt+0x9474>
   1a3c8:	b	1a3cc <__assert_fail@plt+0x92e4>
   1a3cc:	ldr	r0, [pc, #-1664]	; 19d54 <__assert_fail@plt+0x8c6c>
   1a3d0:	ldr	r1, [fp, #8]
   1a3d4:	cmp	r1, r0
   1a3d8:	blt	1a3f0 <__assert_fail@plt+0x9308>
   1a3dc:	b	1a3fc <__assert_fail@plt+0x9314>
   1a3e0:	ldr	r0, [fp, #8]
   1a3e4:	movw	r1, #0
   1a3e8:	cmp	r1, r0
   1a3ec:	bge	1a3fc <__assert_fail@plt+0x9314>
   1a3f0:	movw	r0, #0
   1a3f4:	str	r0, [sp, #84]	; 0x54
   1a3f8:	b	1a414 <__assert_fail@plt+0x932c>
   1a3fc:	ldr	r0, [fp, #8]
   1a400:	movw	r1, #0
   1a404:	sub	r0, r1, r0
   1a408:	movw	r1, #255	; 0xff
   1a40c:	sdiv	r0, r1, r0
   1a410:	str	r0, [sp, #84]	; 0x54
   1a414:	ldr	r0, [sp, #84]	; 0x54
   1a418:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a41c:	mvn	r2, #0
   1a420:	sub	r1, r2, r1
   1a424:	cmp	r0, r1
   1a428:	ble	1a544 <__assert_fail@plt+0x945c>
   1a42c:	b	1a55c <__assert_fail@plt+0x9474>
   1a430:	b	1a434 <__assert_fail@plt+0x934c>
   1a434:	b	1a48c <__assert_fail@plt+0x93a4>
   1a438:	b	1a48c <__assert_fail@plt+0x93a4>
   1a43c:	ldr	r0, [fp, #8]
   1a440:	cmn	r0, #1
   1a444:	bne	1a48c <__assert_fail@plt+0x93a4>
   1a448:	b	1a44c <__assert_fail@plt+0x9364>
   1a44c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a450:	add	r0, r0, #0
   1a454:	movw	r1, #0
   1a458:	cmp	r1, r0
   1a45c:	blt	1a544 <__assert_fail@plt+0x945c>
   1a460:	b	1a55c <__assert_fail@plt+0x9474>
   1a464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a468:	movw	r1, #0
   1a46c:	cmp	r1, r0
   1a470:	bge	1a55c <__assert_fail@plt+0x9474>
   1a474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a478:	sub	r0, r0, #1
   1a47c:	mvn	r1, #0
   1a480:	cmp	r1, r0
   1a484:	blt	1a544 <__assert_fail@plt+0x945c>
   1a488:	b	1a55c <__assert_fail@plt+0x9474>
   1a48c:	ldr	r0, [fp, #8]
   1a490:	movw	r1, #0
   1a494:	sdiv	r0, r1, r0
   1a498:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a49c:	cmp	r0, r1
   1a4a0:	blt	1a544 <__assert_fail@plt+0x945c>
   1a4a4:	b	1a55c <__assert_fail@plt+0x9474>
   1a4a8:	ldr	r0, [fp, #8]
   1a4ac:	cmp	r0, #0
   1a4b0:	bne	1a4b8 <__assert_fail@plt+0x93d0>
   1a4b4:	b	1a55c <__assert_fail@plt+0x9474>
   1a4b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4bc:	cmp	r0, #0
   1a4c0:	bge	1a52c <__assert_fail@plt+0x9444>
   1a4c4:	b	1a4c8 <__assert_fail@plt+0x93e0>
   1a4c8:	b	1a510 <__assert_fail@plt+0x9428>
   1a4cc:	b	1a510 <__assert_fail@plt+0x9428>
   1a4d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4d4:	cmn	r0, #1
   1a4d8:	bne	1a510 <__assert_fail@plt+0x9428>
   1a4dc:	b	1a4e0 <__assert_fail@plt+0x93f8>
   1a4e0:	ldr	r0, [fp, #8]
   1a4e4:	add	r0, r0, #0
   1a4e8:	movw	r1, #0
   1a4ec:	cmp	r1, r0
   1a4f0:	blt	1a544 <__assert_fail@plt+0x945c>
   1a4f4:	b	1a55c <__assert_fail@plt+0x9474>
   1a4f8:	ldr	r0, [fp, #8]
   1a4fc:	sub	r0, r0, #1
   1a500:	mvn	r1, #0
   1a504:	cmp	r1, r0
   1a508:	blt	1a544 <__assert_fail@plt+0x945c>
   1a50c:	b	1a55c <__assert_fail@plt+0x9474>
   1a510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a514:	movw	r1, #0
   1a518:	sdiv	r0, r1, r0
   1a51c:	ldr	r1, [fp, #8]
   1a520:	cmp	r0, r1
   1a524:	blt	1a544 <__assert_fail@plt+0x945c>
   1a528:	b	1a55c <__assert_fail@plt+0x9474>
   1a52c:	ldr	r0, [fp, #8]
   1a530:	movw	r1, #255	; 0xff
   1a534:	sdiv	r0, r1, r0
   1a538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a53c:	cmp	r0, r1
   1a540:	bge	1a55c <__assert_fail@plt+0x9474>
   1a544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a548:	ldr	r1, [fp, #8]
   1a54c:	mul	r0, r0, r1
   1a550:	and	r0, r0, #255	; 0xff
   1a554:	str	r0, [fp, #-28]	; 0xffffffe4
   1a558:	b	1b538 <__assert_fail@plt+0xa450>
   1a55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a560:	ldr	r1, [fp, #8]
   1a564:	mul	r0, r0, r1
   1a568:	and	r0, r0, #255	; 0xff
   1a56c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a570:	b	1b53c <__assert_fail@plt+0xa454>
   1a574:	b	1a950 <__assert_fail@plt+0x9868>
   1a578:	b	1a57c <__assert_fail@plt+0x9494>
   1a57c:	ldr	r0, [fp, #8]
   1a580:	cmp	r0, #0
   1a584:	bge	1a69c <__assert_fail@plt+0x95b4>
   1a588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a58c:	cmp	r0, #0
   1a590:	bge	1a620 <__assert_fail@plt+0x9538>
   1a594:	b	1a598 <__assert_fail@plt+0x94b0>
   1a598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a59c:	ldr	r1, [fp, #8]
   1a5a0:	movw	r2, #32767	; 0x7fff
   1a5a4:	sdiv	r1, r2, r1
   1a5a8:	cmp	r0, r1
   1a5ac:	blt	1a73c <__assert_fail@plt+0x9654>
   1a5b0:	b	1a754 <__assert_fail@plt+0x966c>
   1a5b4:	andhi	r0, r0, r0
   1a5b8:	b	1a5bc <__assert_fail@plt+0x94d4>
   1a5bc:	ldr	r0, [pc, #4004]	; 1b568 <__assert_fail@plt+0xa480>
   1a5c0:	ldr	r1, [fp, #8]
   1a5c4:	cmp	r1, r0
   1a5c8:	blt	1a5e0 <__assert_fail@plt+0x94f8>
   1a5cc:	b	1a5ec <__assert_fail@plt+0x9504>
   1a5d0:	ldr	r0, [fp, #8]
   1a5d4:	movw	r1, #0
   1a5d8:	cmp	r1, r0
   1a5dc:	bge	1a5ec <__assert_fail@plt+0x9504>
   1a5e0:	movw	r0, #0
   1a5e4:	str	r0, [sp, #80]	; 0x50
   1a5e8:	b	1a604 <__assert_fail@plt+0x951c>
   1a5ec:	ldr	r0, [fp, #8]
   1a5f0:	movw	r1, #0
   1a5f4:	sub	r0, r1, r0
   1a5f8:	movw	r1, #32767	; 0x7fff
   1a5fc:	sdiv	r0, r1, r0
   1a600:	str	r0, [sp, #80]	; 0x50
   1a604:	ldr	r0, [sp, #80]	; 0x50
   1a608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a60c:	mvn	r2, #0
   1a610:	sub	r1, r2, r1
   1a614:	cmp	r0, r1
   1a618:	ble	1a73c <__assert_fail@plt+0x9654>
   1a61c:	b	1a754 <__assert_fail@plt+0x966c>
   1a620:	b	1a624 <__assert_fail@plt+0x953c>
   1a624:	b	1a680 <__assert_fail@plt+0x9598>
   1a628:	b	1a680 <__assert_fail@plt+0x9598>
   1a62c:	ldr	r0, [fp, #8]
   1a630:	cmn	r0, #1
   1a634:	bne	1a680 <__assert_fail@plt+0x9598>
   1a638:	b	1a63c <__assert_fail@plt+0x9554>
   1a63c:	ldr	r0, [pc, #3884]	; 1b570 <__assert_fail@plt+0xa488>
   1a640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a644:	add	r0, r1, r0
   1a648:	movw	r1, #0
   1a64c:	cmp	r1, r0
   1a650:	blt	1a73c <__assert_fail@plt+0x9654>
   1a654:	b	1a754 <__assert_fail@plt+0x966c>
   1a658:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a65c:	movw	r1, #0
   1a660:	cmp	r1, r0
   1a664:	bge	1a754 <__assert_fail@plt+0x966c>
   1a668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a66c:	sub	r0, r0, #1
   1a670:	movw	r1, #32767	; 0x7fff
   1a674:	cmp	r1, r0
   1a678:	blt	1a73c <__assert_fail@plt+0x9654>
   1a67c:	b	1a754 <__assert_fail@plt+0x966c>
   1a680:	ldr	r0, [pc, #3816]	; 1b570 <__assert_fail@plt+0xa488>
   1a684:	ldr	r1, [fp, #8]
   1a688:	sdiv	r0, r0, r1
   1a68c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a690:	cmp	r0, r1
   1a694:	blt	1a73c <__assert_fail@plt+0x9654>
   1a698:	b	1a754 <__assert_fail@plt+0x966c>
   1a69c:	ldr	r0, [fp, #8]
   1a6a0:	cmp	r0, #0
   1a6a4:	bne	1a6ac <__assert_fail@plt+0x95c4>
   1a6a8:	b	1a754 <__assert_fail@plt+0x966c>
   1a6ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6b0:	cmp	r0, #0
   1a6b4:	bge	1a724 <__assert_fail@plt+0x963c>
   1a6b8:	b	1a6bc <__assert_fail@plt+0x95d4>
   1a6bc:	b	1a708 <__assert_fail@plt+0x9620>
   1a6c0:	b	1a708 <__assert_fail@plt+0x9620>
   1a6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6c8:	cmn	r0, #1
   1a6cc:	bne	1a708 <__assert_fail@plt+0x9620>
   1a6d0:	b	1a6d4 <__assert_fail@plt+0x95ec>
   1a6d4:	ldr	r0, [pc, #3732]	; 1b570 <__assert_fail@plt+0xa488>
   1a6d8:	ldr	r1, [fp, #8]
   1a6dc:	add	r0, r1, r0
   1a6e0:	movw	r1, #0
   1a6e4:	cmp	r1, r0
   1a6e8:	blt	1a73c <__assert_fail@plt+0x9654>
   1a6ec:	b	1a754 <__assert_fail@plt+0x966c>
   1a6f0:	ldr	r0, [fp, #8]
   1a6f4:	sub	r0, r0, #1
   1a6f8:	movw	r1, #32767	; 0x7fff
   1a6fc:	cmp	r1, r0
   1a700:	blt	1a73c <__assert_fail@plt+0x9654>
   1a704:	b	1a754 <__assert_fail@plt+0x966c>
   1a708:	ldr	r0, [pc, #3680]	; 1b570 <__assert_fail@plt+0xa488>
   1a70c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a710:	sdiv	r0, r0, r1
   1a714:	ldr	r1, [fp, #8]
   1a718:	cmp	r0, r1
   1a71c:	blt	1a73c <__assert_fail@plt+0x9654>
   1a720:	b	1a754 <__assert_fail@plt+0x966c>
   1a724:	ldr	r0, [fp, #8]
   1a728:	movw	r1, #32767	; 0x7fff
   1a72c:	sdiv	r0, r1, r0
   1a730:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a734:	cmp	r0, r1
   1a738:	bge	1a754 <__assert_fail@plt+0x966c>
   1a73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a740:	ldr	r1, [fp, #8]
   1a744:	mul	r0, r0, r1
   1a748:	sxth	r0, r0
   1a74c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a750:	b	1b538 <__assert_fail@plt+0xa450>
   1a754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a758:	ldr	r1, [fp, #8]
   1a75c:	mul	r0, r0, r1
   1a760:	sxth	r0, r0
   1a764:	str	r0, [fp, #-28]	; 0xffffffe4
   1a768:	b	1b53c <__assert_fail@plt+0xa454>
   1a76c:	ldr	r0, [fp, #8]
   1a770:	cmp	r0, #0
   1a774:	bge	1a884 <__assert_fail@plt+0x979c>
   1a778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a77c:	cmp	r0, #0
   1a780:	bge	1a80c <__assert_fail@plt+0x9724>
   1a784:	b	1a788 <__assert_fail@plt+0x96a0>
   1a788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a78c:	ldr	r1, [fp, #8]
   1a790:	movw	r2, #65535	; 0xffff
   1a794:	sdiv	r1, r2, r1
   1a798:	cmp	r0, r1
   1a79c:	blt	1a920 <__assert_fail@plt+0x9838>
   1a7a0:	b	1a938 <__assert_fail@plt+0x9850>
   1a7a4:	b	1a7a8 <__assert_fail@plt+0x96c0>
   1a7a8:	ldr	r0, [pc, #3512]	; 1b568 <__assert_fail@plt+0xa480>
   1a7ac:	ldr	r1, [fp, #8]
   1a7b0:	cmp	r1, r0
   1a7b4:	blt	1a7cc <__assert_fail@plt+0x96e4>
   1a7b8:	b	1a7d8 <__assert_fail@plt+0x96f0>
   1a7bc:	ldr	r0, [fp, #8]
   1a7c0:	movw	r1, #0
   1a7c4:	cmp	r1, r0
   1a7c8:	bge	1a7d8 <__assert_fail@plt+0x96f0>
   1a7cc:	movw	r0, #0
   1a7d0:	str	r0, [sp, #76]	; 0x4c
   1a7d4:	b	1a7f0 <__assert_fail@plt+0x9708>
   1a7d8:	ldr	r0, [fp, #8]
   1a7dc:	movw	r1, #0
   1a7e0:	sub	r0, r1, r0
   1a7e4:	movw	r1, #65535	; 0xffff
   1a7e8:	sdiv	r0, r1, r0
   1a7ec:	str	r0, [sp, #76]	; 0x4c
   1a7f0:	ldr	r0, [sp, #76]	; 0x4c
   1a7f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7f8:	mvn	r2, #0
   1a7fc:	sub	r1, r2, r1
   1a800:	cmp	r0, r1
   1a804:	ble	1a920 <__assert_fail@plt+0x9838>
   1a808:	b	1a938 <__assert_fail@plt+0x9850>
   1a80c:	b	1a810 <__assert_fail@plt+0x9728>
   1a810:	b	1a868 <__assert_fail@plt+0x9780>
   1a814:	b	1a868 <__assert_fail@plt+0x9780>
   1a818:	ldr	r0, [fp, #8]
   1a81c:	cmn	r0, #1
   1a820:	bne	1a868 <__assert_fail@plt+0x9780>
   1a824:	b	1a828 <__assert_fail@plt+0x9740>
   1a828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a82c:	add	r0, r0, #0
   1a830:	movw	r1, #0
   1a834:	cmp	r1, r0
   1a838:	blt	1a920 <__assert_fail@plt+0x9838>
   1a83c:	b	1a938 <__assert_fail@plt+0x9850>
   1a840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a844:	movw	r1, #0
   1a848:	cmp	r1, r0
   1a84c:	bge	1a938 <__assert_fail@plt+0x9850>
   1a850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a854:	sub	r0, r0, #1
   1a858:	mvn	r1, #0
   1a85c:	cmp	r1, r0
   1a860:	blt	1a920 <__assert_fail@plt+0x9838>
   1a864:	b	1a938 <__assert_fail@plt+0x9850>
   1a868:	ldr	r0, [fp, #8]
   1a86c:	movw	r1, #0
   1a870:	sdiv	r0, r1, r0
   1a874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a878:	cmp	r0, r1
   1a87c:	blt	1a920 <__assert_fail@plt+0x9838>
   1a880:	b	1a938 <__assert_fail@plt+0x9850>
   1a884:	ldr	r0, [fp, #8]
   1a888:	cmp	r0, #0
   1a88c:	bne	1a894 <__assert_fail@plt+0x97ac>
   1a890:	b	1a938 <__assert_fail@plt+0x9850>
   1a894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a898:	cmp	r0, #0
   1a89c:	bge	1a908 <__assert_fail@plt+0x9820>
   1a8a0:	b	1a8a4 <__assert_fail@plt+0x97bc>
   1a8a4:	b	1a8ec <__assert_fail@plt+0x9804>
   1a8a8:	b	1a8ec <__assert_fail@plt+0x9804>
   1a8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8b0:	cmn	r0, #1
   1a8b4:	bne	1a8ec <__assert_fail@plt+0x9804>
   1a8b8:	b	1a8bc <__assert_fail@plt+0x97d4>
   1a8bc:	ldr	r0, [fp, #8]
   1a8c0:	add	r0, r0, #0
   1a8c4:	movw	r1, #0
   1a8c8:	cmp	r1, r0
   1a8cc:	blt	1a920 <__assert_fail@plt+0x9838>
   1a8d0:	b	1a938 <__assert_fail@plt+0x9850>
   1a8d4:	ldr	r0, [fp, #8]
   1a8d8:	sub	r0, r0, #1
   1a8dc:	mvn	r1, #0
   1a8e0:	cmp	r1, r0
   1a8e4:	blt	1a920 <__assert_fail@plt+0x9838>
   1a8e8:	b	1a938 <__assert_fail@plt+0x9850>
   1a8ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8f0:	movw	r1, #0
   1a8f4:	sdiv	r0, r1, r0
   1a8f8:	ldr	r1, [fp, #8]
   1a8fc:	cmp	r0, r1
   1a900:	blt	1a920 <__assert_fail@plt+0x9838>
   1a904:	b	1a938 <__assert_fail@plt+0x9850>
   1a908:	ldr	r0, [fp, #8]
   1a90c:	movw	r1, #65535	; 0xffff
   1a910:	sdiv	r0, r1, r0
   1a914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a918:	cmp	r0, r1
   1a91c:	bge	1a938 <__assert_fail@plt+0x9850>
   1a920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a924:	ldr	r1, [fp, #8]
   1a928:	mul	r0, r0, r1
   1a92c:	uxth	r0, r0
   1a930:	str	r0, [fp, #-28]	; 0xffffffe4
   1a934:	b	1b538 <__assert_fail@plt+0xa450>
   1a938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a93c:	ldr	r1, [fp, #8]
   1a940:	mul	r0, r0, r1
   1a944:	uxth	r0, r0
   1a948:	str	r0, [fp, #-28]	; 0xffffffe4
   1a94c:	b	1b53c <__assert_fail@plt+0xa454>
   1a950:	b	1a954 <__assert_fail@plt+0x986c>
   1a954:	b	1a958 <__assert_fail@plt+0x9870>
   1a958:	ldr	r0, [fp, #8]
   1a95c:	cmp	r0, #0
   1a960:	bge	1aa64 <__assert_fail@plt+0x997c>
   1a964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a968:	cmp	r0, #0
   1a96c:	bge	1a9f8 <__assert_fail@plt+0x9910>
   1a970:	b	1a974 <__assert_fail@plt+0x988c>
   1a974:	ldr	r0, [pc, #3048]	; 1b564 <__assert_fail@plt+0xa47c>
   1a978:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a97c:	ldr	r2, [fp, #8]
   1a980:	sdiv	r0, r0, r2
   1a984:	cmp	r1, r0
   1a988:	blt	1aaf4 <__assert_fail@plt+0x9a0c>
   1a98c:	b	1ab08 <__assert_fail@plt+0x9a20>
   1a990:	b	1a994 <__assert_fail@plt+0x98ac>
   1a994:	ldr	r0, [pc, #3020]	; 1b568 <__assert_fail@plt+0xa480>
   1a998:	ldr	r1, [fp, #8]
   1a99c:	cmp	r1, r0
   1a9a0:	blt	1a9b8 <__assert_fail@plt+0x98d0>
   1a9a4:	b	1a9c4 <__assert_fail@plt+0x98dc>
   1a9a8:	ldr	r0, [fp, #8]
   1a9ac:	movw	r1, #0
   1a9b0:	cmp	r1, r0
   1a9b4:	bge	1a9c4 <__assert_fail@plt+0x98dc>
   1a9b8:	movw	r0, #0
   1a9bc:	str	r0, [sp, #72]	; 0x48
   1a9c0:	b	1a9dc <__assert_fail@plt+0x98f4>
   1a9c4:	ldr	r0, [pc, #2968]	; 1b564 <__assert_fail@plt+0xa47c>
   1a9c8:	ldr	r1, [fp, #8]
   1a9cc:	movw	r2, #0
   1a9d0:	sub	r1, r2, r1
   1a9d4:	sdiv	r0, r0, r1
   1a9d8:	str	r0, [sp, #72]	; 0x48
   1a9dc:	ldr	r0, [sp, #72]	; 0x48
   1a9e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9e4:	mvn	r2, #0
   1a9e8:	sub	r1, r2, r1
   1a9ec:	cmp	r0, r1
   1a9f0:	ble	1aaf4 <__assert_fail@plt+0x9a0c>
   1a9f4:	b	1ab08 <__assert_fail@plt+0x9a20>
   1a9f8:	ldr	r0, [fp, #8]
   1a9fc:	cmn	r0, #1
   1aa00:	bne	1aa48 <__assert_fail@plt+0x9960>
   1aa04:	b	1aa08 <__assert_fail@plt+0x9920>
   1aa08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa0c:	add	r0, r0, #-2147483648	; 0x80000000
   1aa10:	movw	r1, #0
   1aa14:	cmp	r1, r0
   1aa18:	blt	1aaf4 <__assert_fail@plt+0x9a0c>
   1aa1c:	b	1ab08 <__assert_fail@plt+0x9a20>
   1aa20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa24:	movw	r1, #0
   1aa28:	cmp	r1, r0
   1aa2c:	bge	1ab08 <__assert_fail@plt+0x9a20>
   1aa30:	ldr	r0, [pc, #2860]	; 1b564 <__assert_fail@plt+0xa47c>
   1aa34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa38:	sub	r1, r1, #1
   1aa3c:	cmp	r0, r1
   1aa40:	blt	1aaf4 <__assert_fail@plt+0x9a0c>
   1aa44:	b	1ab08 <__assert_fail@plt+0x9a20>
   1aa48:	ldr	r0, [pc, #2844]	; 1b56c <__assert_fail@plt+0xa484>
   1aa4c:	ldr	r1, [fp, #8]
   1aa50:	sdiv	r0, r0, r1
   1aa54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa58:	cmp	r0, r1
   1aa5c:	blt	1aaf4 <__assert_fail@plt+0x9a0c>
   1aa60:	b	1ab08 <__assert_fail@plt+0x9a20>
   1aa64:	ldr	r0, [fp, #8]
   1aa68:	cmp	r0, #0
   1aa6c:	bne	1aa74 <__assert_fail@plt+0x998c>
   1aa70:	b	1ab08 <__assert_fail@plt+0x9a20>
   1aa74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa78:	cmp	r0, #0
   1aa7c:	bge	1aadc <__assert_fail@plt+0x99f4>
   1aa80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa84:	cmn	r0, #1
   1aa88:	bne	1aac0 <__assert_fail@plt+0x99d8>
   1aa8c:	b	1aa90 <__assert_fail@plt+0x99a8>
   1aa90:	ldr	r0, [fp, #8]
   1aa94:	add	r0, r0, #-2147483648	; 0x80000000
   1aa98:	movw	r1, #0
   1aa9c:	cmp	r1, r0
   1aaa0:	blt	1aaf4 <__assert_fail@plt+0x9a0c>
   1aaa4:	b	1ab08 <__assert_fail@plt+0x9a20>
   1aaa8:	ldr	r0, [pc, #2740]	; 1b564 <__assert_fail@plt+0xa47c>
   1aaac:	ldr	r1, [fp, #8]
   1aab0:	sub	r1, r1, #1
   1aab4:	cmp	r0, r1
   1aab8:	blt	1aaf4 <__assert_fail@plt+0x9a0c>
   1aabc:	b	1ab08 <__assert_fail@plt+0x9a20>
   1aac0:	ldr	r0, [pc, #2724]	; 1b56c <__assert_fail@plt+0xa484>
   1aac4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aac8:	sdiv	r0, r0, r1
   1aacc:	ldr	r1, [fp, #8]
   1aad0:	cmp	r0, r1
   1aad4:	blt	1aaf4 <__assert_fail@plt+0x9a0c>
   1aad8:	b	1ab08 <__assert_fail@plt+0x9a20>
   1aadc:	ldr	r0, [pc, #2688]	; 1b564 <__assert_fail@plt+0xa47c>
   1aae0:	ldr	r1, [fp, #8]
   1aae4:	sdiv	r0, r0, r1
   1aae8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aaec:	cmp	r0, r1
   1aaf0:	bge	1ab08 <__assert_fail@plt+0x9a20>
   1aaf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aaf8:	ldr	r1, [fp, #8]
   1aafc:	mul	r0, r0, r1
   1ab00:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab04:	b	1b538 <__assert_fail@plt+0xa450>
   1ab08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab0c:	ldr	r1, [fp, #8]
   1ab10:	mul	r0, r0, r1
   1ab14:	str	r0, [fp, #-28]	; 0xffffffe4
   1ab18:	b	1b53c <__assert_fail@plt+0xa454>
   1ab1c:	ldr	r0, [fp, #8]
   1ab20:	cmp	r0, #0
   1ab24:	bge	1ac34 <__assert_fail@plt+0x9b4c>
   1ab28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab2c:	cmp	r0, #0
   1ab30:	bge	1abbc <__assert_fail@plt+0x9ad4>
   1ab34:	b	1ab54 <__assert_fail@plt+0x9a6c>
   1ab38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab3c:	ldr	r1, [fp, #8]
   1ab40:	mvn	r2, #0
   1ab44:	udiv	r1, r2, r1
   1ab48:	cmp	r0, r1
   1ab4c:	bcc	1acd0 <__assert_fail@plt+0x9be8>
   1ab50:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1ab54:	b	1ab58 <__assert_fail@plt+0x9a70>
   1ab58:	ldr	r0, [pc, #2568]	; 1b568 <__assert_fail@plt+0xa480>
   1ab5c:	ldr	r1, [fp, #8]
   1ab60:	cmp	r1, r0
   1ab64:	blt	1ab7c <__assert_fail@plt+0x9a94>
   1ab68:	b	1ab88 <__assert_fail@plt+0x9aa0>
   1ab6c:	ldr	r0, [fp, #8]
   1ab70:	movw	r1, #0
   1ab74:	cmp	r1, r0
   1ab78:	bge	1ab88 <__assert_fail@plt+0x9aa0>
   1ab7c:	movw	r0, #1
   1ab80:	str	r0, [sp, #68]	; 0x44
   1ab84:	b	1aba0 <__assert_fail@plt+0x9ab8>
   1ab88:	ldr	r0, [fp, #8]
   1ab8c:	movw	r1, #0
   1ab90:	sub	r0, r1, r0
   1ab94:	mvn	r1, #0
   1ab98:	udiv	r0, r1, r0
   1ab9c:	str	r0, [sp, #68]	; 0x44
   1aba0:	ldr	r0, [sp, #68]	; 0x44
   1aba4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aba8:	mvn	r2, #0
   1abac:	sub	r1, r2, r1
   1abb0:	cmp	r0, r1
   1abb4:	bls	1acd0 <__assert_fail@plt+0x9be8>
   1abb8:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1abbc:	b	1abc0 <__assert_fail@plt+0x9ad8>
   1abc0:	b	1ac18 <__assert_fail@plt+0x9b30>
   1abc4:	b	1ac18 <__assert_fail@plt+0x9b30>
   1abc8:	ldr	r0, [fp, #8]
   1abcc:	cmn	r0, #1
   1abd0:	bne	1ac18 <__assert_fail@plt+0x9b30>
   1abd4:	b	1abd8 <__assert_fail@plt+0x9af0>
   1abd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abdc:	add	r0, r0, #0
   1abe0:	movw	r1, #0
   1abe4:	cmp	r1, r0
   1abe8:	blt	1acd0 <__assert_fail@plt+0x9be8>
   1abec:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1abf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abf4:	movw	r1, #0
   1abf8:	cmp	r1, r0
   1abfc:	bge	1ace4 <__assert_fail@plt+0x9bfc>
   1ac00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac04:	sub	r0, r0, #1
   1ac08:	mvn	r1, #0
   1ac0c:	cmp	r1, r0
   1ac10:	blt	1acd0 <__assert_fail@plt+0x9be8>
   1ac14:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1ac18:	ldr	r0, [fp, #8]
   1ac1c:	movw	r1, #0
   1ac20:	sdiv	r0, r1, r0
   1ac24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac28:	cmp	r0, r1
   1ac2c:	blt	1acd0 <__assert_fail@plt+0x9be8>
   1ac30:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1ac34:	ldr	r0, [fp, #8]
   1ac38:	cmp	r0, #0
   1ac3c:	bne	1ac44 <__assert_fail@plt+0x9b5c>
   1ac40:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1ac44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac48:	cmp	r0, #0
   1ac4c:	bge	1acb8 <__assert_fail@plt+0x9bd0>
   1ac50:	b	1ac54 <__assert_fail@plt+0x9b6c>
   1ac54:	b	1ac9c <__assert_fail@plt+0x9bb4>
   1ac58:	b	1ac9c <__assert_fail@plt+0x9bb4>
   1ac5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac60:	cmn	r0, #1
   1ac64:	bne	1ac9c <__assert_fail@plt+0x9bb4>
   1ac68:	b	1ac6c <__assert_fail@plt+0x9b84>
   1ac6c:	ldr	r0, [fp, #8]
   1ac70:	add	r0, r0, #0
   1ac74:	movw	r1, #0
   1ac78:	cmp	r1, r0
   1ac7c:	blt	1acd0 <__assert_fail@plt+0x9be8>
   1ac80:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1ac84:	ldr	r0, [fp, #8]
   1ac88:	sub	r0, r0, #1
   1ac8c:	mvn	r1, #0
   1ac90:	cmp	r1, r0
   1ac94:	blt	1acd0 <__assert_fail@plt+0x9be8>
   1ac98:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1ac9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aca0:	movw	r1, #0
   1aca4:	sdiv	r0, r1, r0
   1aca8:	ldr	r1, [fp, #8]
   1acac:	cmp	r0, r1
   1acb0:	blt	1acd0 <__assert_fail@plt+0x9be8>
   1acb4:	b	1ace4 <__assert_fail@plt+0x9bfc>
   1acb8:	ldr	r0, [fp, #8]
   1acbc:	mvn	r1, #0
   1acc0:	udiv	r0, r1, r0
   1acc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1acc8:	cmp	r0, r1
   1accc:	bcs	1ace4 <__assert_fail@plt+0x9bfc>
   1acd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acd4:	ldr	r1, [fp, #8]
   1acd8:	mul	r0, r0, r1
   1acdc:	str	r0, [fp, #-28]	; 0xffffffe4
   1ace0:	b	1b538 <__assert_fail@plt+0xa450>
   1ace4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ace8:	ldr	r1, [fp, #8]
   1acec:	mul	r0, r0, r1
   1acf0:	str	r0, [fp, #-28]	; 0xffffffe4
   1acf4:	b	1b53c <__assert_fail@plt+0xa454>
   1acf8:	b	1acfc <__assert_fail@plt+0x9c14>
   1acfc:	b	1ad00 <__assert_fail@plt+0x9c18>
   1ad00:	ldr	r0, [fp, #8]
   1ad04:	cmp	r0, #0
   1ad08:	bge	1ae0c <__assert_fail@plt+0x9d24>
   1ad0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad10:	cmp	r0, #0
   1ad14:	bge	1ada0 <__assert_fail@plt+0x9cb8>
   1ad18:	b	1ad1c <__assert_fail@plt+0x9c34>
   1ad1c:	ldr	r0, [pc, #2112]	; 1b564 <__assert_fail@plt+0xa47c>
   1ad20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad24:	ldr	r2, [fp, #8]
   1ad28:	sdiv	r0, r0, r2
   1ad2c:	cmp	r1, r0
   1ad30:	blt	1ae9c <__assert_fail@plt+0x9db4>
   1ad34:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1ad38:	b	1ad3c <__assert_fail@plt+0x9c54>
   1ad3c:	ldr	r0, [pc, #2084]	; 1b568 <__assert_fail@plt+0xa480>
   1ad40:	ldr	r1, [fp, #8]
   1ad44:	cmp	r1, r0
   1ad48:	blt	1ad60 <__assert_fail@plt+0x9c78>
   1ad4c:	b	1ad6c <__assert_fail@plt+0x9c84>
   1ad50:	ldr	r0, [fp, #8]
   1ad54:	movw	r1, #0
   1ad58:	cmp	r1, r0
   1ad5c:	bge	1ad6c <__assert_fail@plt+0x9c84>
   1ad60:	movw	r0, #0
   1ad64:	str	r0, [sp, #64]	; 0x40
   1ad68:	b	1ad84 <__assert_fail@plt+0x9c9c>
   1ad6c:	ldr	r0, [pc, #2032]	; 1b564 <__assert_fail@plt+0xa47c>
   1ad70:	ldr	r1, [fp, #8]
   1ad74:	movw	r2, #0
   1ad78:	sub	r1, r2, r1
   1ad7c:	sdiv	r0, r0, r1
   1ad80:	str	r0, [sp, #64]	; 0x40
   1ad84:	ldr	r0, [sp, #64]	; 0x40
   1ad88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad8c:	mvn	r2, #0
   1ad90:	sub	r1, r2, r1
   1ad94:	cmp	r0, r1
   1ad98:	ble	1ae9c <__assert_fail@plt+0x9db4>
   1ad9c:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1ada0:	ldr	r0, [fp, #8]
   1ada4:	cmn	r0, #1
   1ada8:	bne	1adf0 <__assert_fail@plt+0x9d08>
   1adac:	b	1adb0 <__assert_fail@plt+0x9cc8>
   1adb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adb4:	add	r0, r0, #-2147483648	; 0x80000000
   1adb8:	movw	r1, #0
   1adbc:	cmp	r1, r0
   1adc0:	blt	1ae9c <__assert_fail@plt+0x9db4>
   1adc4:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1adc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adcc:	movw	r1, #0
   1add0:	cmp	r1, r0
   1add4:	bge	1aeb0 <__assert_fail@plt+0x9dc8>
   1add8:	ldr	r0, [pc, #1924]	; 1b564 <__assert_fail@plt+0xa47c>
   1addc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ade0:	sub	r1, r1, #1
   1ade4:	cmp	r0, r1
   1ade8:	blt	1ae9c <__assert_fail@plt+0x9db4>
   1adec:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1adf0:	ldr	r0, [pc, #1908]	; 1b56c <__assert_fail@plt+0xa484>
   1adf4:	ldr	r1, [fp, #8]
   1adf8:	sdiv	r0, r0, r1
   1adfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae00:	cmp	r0, r1
   1ae04:	blt	1ae9c <__assert_fail@plt+0x9db4>
   1ae08:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1ae0c:	ldr	r0, [fp, #8]
   1ae10:	cmp	r0, #0
   1ae14:	bne	1ae1c <__assert_fail@plt+0x9d34>
   1ae18:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1ae1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae20:	cmp	r0, #0
   1ae24:	bge	1ae84 <__assert_fail@plt+0x9d9c>
   1ae28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae2c:	cmn	r0, #1
   1ae30:	bne	1ae68 <__assert_fail@plt+0x9d80>
   1ae34:	b	1ae38 <__assert_fail@plt+0x9d50>
   1ae38:	ldr	r0, [fp, #8]
   1ae3c:	add	r0, r0, #-2147483648	; 0x80000000
   1ae40:	movw	r1, #0
   1ae44:	cmp	r1, r0
   1ae48:	blt	1ae9c <__assert_fail@plt+0x9db4>
   1ae4c:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1ae50:	ldr	r0, [pc, #1804]	; 1b564 <__assert_fail@plt+0xa47c>
   1ae54:	ldr	r1, [fp, #8]
   1ae58:	sub	r1, r1, #1
   1ae5c:	cmp	r0, r1
   1ae60:	blt	1ae9c <__assert_fail@plt+0x9db4>
   1ae64:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1ae68:	ldr	r0, [pc, #1788]	; 1b56c <__assert_fail@plt+0xa484>
   1ae6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae70:	sdiv	r0, r0, r1
   1ae74:	ldr	r1, [fp, #8]
   1ae78:	cmp	r0, r1
   1ae7c:	blt	1ae9c <__assert_fail@plt+0x9db4>
   1ae80:	b	1aeb0 <__assert_fail@plt+0x9dc8>
   1ae84:	ldr	r0, [pc, #1752]	; 1b564 <__assert_fail@plt+0xa47c>
   1ae88:	ldr	r1, [fp, #8]
   1ae8c:	sdiv	r0, r0, r1
   1ae90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae94:	cmp	r0, r1
   1ae98:	bge	1aeb0 <__assert_fail@plt+0x9dc8>
   1ae9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aea0:	ldr	r1, [fp, #8]
   1aea4:	mul	r0, r0, r1
   1aea8:	str	r0, [fp, #-28]	; 0xffffffe4
   1aeac:	b	1b538 <__assert_fail@plt+0xa450>
   1aeb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aeb4:	ldr	r1, [fp, #8]
   1aeb8:	mul	r0, r0, r1
   1aebc:	str	r0, [fp, #-28]	; 0xffffffe4
   1aec0:	b	1b53c <__assert_fail@plt+0xa454>
   1aec4:	ldr	r0, [fp, #8]
   1aec8:	cmp	r0, #0
   1aecc:	bge	1afdc <__assert_fail@plt+0x9ef4>
   1aed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aed4:	cmp	r0, #0
   1aed8:	bge	1af64 <__assert_fail@plt+0x9e7c>
   1aedc:	b	1aefc <__assert_fail@plt+0x9e14>
   1aee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aee4:	ldr	r1, [fp, #8]
   1aee8:	mvn	r2, #0
   1aeec:	udiv	r1, r2, r1
   1aef0:	cmp	r0, r1
   1aef4:	bcc	1b078 <__assert_fail@plt+0x9f90>
   1aef8:	b	1b08c <__assert_fail@plt+0x9fa4>
   1aefc:	b	1af00 <__assert_fail@plt+0x9e18>
   1af00:	ldr	r0, [pc, #1632]	; 1b568 <__assert_fail@plt+0xa480>
   1af04:	ldr	r1, [fp, #8]
   1af08:	cmp	r1, r0
   1af0c:	blt	1af24 <__assert_fail@plt+0x9e3c>
   1af10:	b	1af30 <__assert_fail@plt+0x9e48>
   1af14:	ldr	r0, [fp, #8]
   1af18:	movw	r1, #0
   1af1c:	cmp	r1, r0
   1af20:	bge	1af30 <__assert_fail@plt+0x9e48>
   1af24:	movw	r0, #1
   1af28:	str	r0, [sp, #60]	; 0x3c
   1af2c:	b	1af48 <__assert_fail@plt+0x9e60>
   1af30:	ldr	r0, [fp, #8]
   1af34:	movw	r1, #0
   1af38:	sub	r0, r1, r0
   1af3c:	mvn	r1, #0
   1af40:	udiv	r0, r1, r0
   1af44:	str	r0, [sp, #60]	; 0x3c
   1af48:	ldr	r0, [sp, #60]	; 0x3c
   1af4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1af50:	mvn	r2, #0
   1af54:	sub	r1, r2, r1
   1af58:	cmp	r0, r1
   1af5c:	bls	1b078 <__assert_fail@plt+0x9f90>
   1af60:	b	1b08c <__assert_fail@plt+0x9fa4>
   1af64:	b	1af68 <__assert_fail@plt+0x9e80>
   1af68:	b	1afc0 <__assert_fail@plt+0x9ed8>
   1af6c:	b	1afc0 <__assert_fail@plt+0x9ed8>
   1af70:	ldr	r0, [fp, #8]
   1af74:	cmn	r0, #1
   1af78:	bne	1afc0 <__assert_fail@plt+0x9ed8>
   1af7c:	b	1af80 <__assert_fail@plt+0x9e98>
   1af80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af84:	add	r0, r0, #0
   1af88:	movw	r1, #0
   1af8c:	cmp	r1, r0
   1af90:	blt	1b078 <__assert_fail@plt+0x9f90>
   1af94:	b	1b08c <__assert_fail@plt+0x9fa4>
   1af98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af9c:	movw	r1, #0
   1afa0:	cmp	r1, r0
   1afa4:	bge	1b08c <__assert_fail@plt+0x9fa4>
   1afa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afac:	sub	r0, r0, #1
   1afb0:	mvn	r1, #0
   1afb4:	cmp	r1, r0
   1afb8:	blt	1b078 <__assert_fail@plt+0x9f90>
   1afbc:	b	1b08c <__assert_fail@plt+0x9fa4>
   1afc0:	ldr	r0, [fp, #8]
   1afc4:	movw	r1, #0
   1afc8:	sdiv	r0, r1, r0
   1afcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1afd0:	cmp	r0, r1
   1afd4:	blt	1b078 <__assert_fail@plt+0x9f90>
   1afd8:	b	1b08c <__assert_fail@plt+0x9fa4>
   1afdc:	ldr	r0, [fp, #8]
   1afe0:	cmp	r0, #0
   1afe4:	bne	1afec <__assert_fail@plt+0x9f04>
   1afe8:	b	1b08c <__assert_fail@plt+0x9fa4>
   1afec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aff0:	cmp	r0, #0
   1aff4:	bge	1b060 <__assert_fail@plt+0x9f78>
   1aff8:	b	1affc <__assert_fail@plt+0x9f14>
   1affc:	b	1b044 <__assert_fail@plt+0x9f5c>
   1b000:	b	1b044 <__assert_fail@plt+0x9f5c>
   1b004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b008:	cmn	r0, #1
   1b00c:	bne	1b044 <__assert_fail@plt+0x9f5c>
   1b010:	b	1b014 <__assert_fail@plt+0x9f2c>
   1b014:	ldr	r0, [fp, #8]
   1b018:	add	r0, r0, #0
   1b01c:	movw	r1, #0
   1b020:	cmp	r1, r0
   1b024:	blt	1b078 <__assert_fail@plt+0x9f90>
   1b028:	b	1b08c <__assert_fail@plt+0x9fa4>
   1b02c:	ldr	r0, [fp, #8]
   1b030:	sub	r0, r0, #1
   1b034:	mvn	r1, #0
   1b038:	cmp	r1, r0
   1b03c:	blt	1b078 <__assert_fail@plt+0x9f90>
   1b040:	b	1b08c <__assert_fail@plt+0x9fa4>
   1b044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b048:	movw	r1, #0
   1b04c:	sdiv	r0, r1, r0
   1b050:	ldr	r1, [fp, #8]
   1b054:	cmp	r0, r1
   1b058:	blt	1b078 <__assert_fail@plt+0x9f90>
   1b05c:	b	1b08c <__assert_fail@plt+0x9fa4>
   1b060:	ldr	r0, [fp, #8]
   1b064:	mvn	r1, #0
   1b068:	udiv	r0, r1, r0
   1b06c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b070:	cmp	r0, r1
   1b074:	bcs	1b08c <__assert_fail@plt+0x9fa4>
   1b078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b07c:	ldr	r1, [fp, #8]
   1b080:	mul	r0, r0, r1
   1b084:	str	r0, [fp, #-28]	; 0xffffffe4
   1b088:	b	1b538 <__assert_fail@plt+0xa450>
   1b08c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b090:	ldr	r1, [fp, #8]
   1b094:	mul	r0, r0, r1
   1b098:	str	r0, [fp, #-28]	; 0xffffffe4
   1b09c:	b	1b53c <__assert_fail@plt+0xa454>
   1b0a0:	b	1b0a4 <__assert_fail@plt+0x9fbc>
   1b0a4:	ldr	r0, [fp, #8]
   1b0a8:	cmp	r0, #0
   1b0ac:	bge	1b214 <__assert_fail@plt+0xa12c>
   1b0b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0b4:	cmp	r0, #0
   1b0b8:	bge	1b190 <__assert_fail@plt+0xa0a8>
   1b0bc:	b	1b0c0 <__assert_fail@plt+0x9fd8>
   1b0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0c4:	ldr	r1, [fp, #8]
   1b0c8:	asr	r3, r1, #31
   1b0cc:	mvn	r2, #0
   1b0d0:	mvn	ip, #-2147483648	; 0x80000000
   1b0d4:	str	r0, [sp, #56]	; 0x38
   1b0d8:	mov	r0, r2
   1b0dc:	str	r1, [sp, #52]	; 0x34
   1b0e0:	mov	r1, ip
   1b0e4:	ldr	r2, [sp, #52]	; 0x34
   1b0e8:	bl	1e464 <__assert_fail@plt+0xd37c>
   1b0ec:	ldr	r2, [sp, #56]	; 0x38
   1b0f0:	subs	r0, r2, r0
   1b0f4:	rscs	r1, r1, r2, asr #31
   1b0f8:	blt	1b2dc <__assert_fail@plt+0xa1f4>
   1b0fc:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b100:	b	1b104 <__assert_fail@plt+0xa01c>
   1b104:	ldr	r0, [pc, #1116]	; 1b568 <__assert_fail@plt+0xa480>
   1b108:	ldr	r1, [fp, #8]
   1b10c:	cmp	r1, r0
   1b110:	blt	1b128 <__assert_fail@plt+0xa040>
   1b114:	b	1b13c <__assert_fail@plt+0xa054>
   1b118:	ldr	r0, [fp, #8]
   1b11c:	movw	r1, #0
   1b120:	cmp	r1, r0
   1b124:	bge	1b13c <__assert_fail@plt+0xa054>
   1b128:	mov	r0, #0
   1b12c:	mvn	r1, #0
   1b130:	str	r1, [sp, #48]	; 0x30
   1b134:	str	r0, [sp, #44]	; 0x2c
   1b138:	b	1b170 <__assert_fail@plt+0xa088>
   1b13c:	ldr	r0, [fp, #8]
   1b140:	rsb	r0, r0, #0
   1b144:	asr	r3, r0, #31
   1b148:	mvn	r1, #0
   1b14c:	mvn	r2, #-2147483648	; 0x80000000
   1b150:	str	r0, [sp, #40]	; 0x28
   1b154:	mov	r0, r1
   1b158:	mov	r1, r2
   1b15c:	ldr	r2, [sp, #40]	; 0x28
   1b160:	bl	1e464 <__assert_fail@plt+0xd37c>
   1b164:	str	r0, [sp, #48]	; 0x30
   1b168:	str	r1, [sp, #44]	; 0x2c
   1b16c:	b	1b170 <__assert_fail@plt+0xa088>
   1b170:	ldr	r0, [sp, #44]	; 0x2c
   1b174:	ldr	r1, [sp, #48]	; 0x30
   1b178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b17c:	mvn	r2, r2
   1b180:	subs	r1, r2, r1
   1b184:	rscs	r0, r0, r2, asr #31
   1b188:	bge	1b2dc <__assert_fail@plt+0xa1f4>
   1b18c:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b190:	ldr	r0, [fp, #8]
   1b194:	cmn	r0, #1
   1b198:	bne	1b1dc <__assert_fail@plt+0xa0f4>
   1b19c:	b	1b1a0 <__assert_fail@plt+0xa0b8>
   1b1a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1a4:	mov	r1, #-2147483648	; 0x80000000
   1b1a8:	add	r1, r1, r0, asr #31
   1b1ac:	rsbs	r0, r0, #0
   1b1b0:	rscs	r1, r1, #0
   1b1b4:	blt	1b2dc <__assert_fail@plt+0xa1f4>
   1b1b8:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1c0:	movw	r1, #0
   1b1c4:	cmp	r1, r0
   1b1c8:	bge	1b2f0 <__assert_fail@plt+0xa208>
   1b1cc:	mov	r0, #0
   1b1d0:	cmp	r0, #0
   1b1d4:	bne	1b2dc <__assert_fail@plt+0xa1f4>
   1b1d8:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b1dc:	ldr	r0, [fp, #8]
   1b1e0:	asr	r3, r0, #31
   1b1e4:	mov	r1, #0
   1b1e8:	mov	r2, #-2147483648	; 0x80000000
   1b1ec:	str	r0, [sp, #36]	; 0x24
   1b1f0:	mov	r0, r1
   1b1f4:	mov	r1, r2
   1b1f8:	ldr	r2, [sp, #36]	; 0x24
   1b1fc:	bl	1e464 <__assert_fail@plt+0xd37c>
   1b200:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b204:	subs	r0, r0, r2
   1b208:	sbcs	r1, r1, r2, asr #31
   1b20c:	blt	1b2dc <__assert_fail@plt+0xa1f4>
   1b210:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b214:	ldr	r0, [fp, #8]
   1b218:	cmp	r0, #0
   1b21c:	bne	1b224 <__assert_fail@plt+0xa13c>
   1b220:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b228:	cmp	r0, #0
   1b22c:	bge	1b2a4 <__assert_fail@plt+0xa1bc>
   1b230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b234:	cmn	r0, #1
   1b238:	bne	1b26c <__assert_fail@plt+0xa184>
   1b23c:	b	1b240 <__assert_fail@plt+0xa158>
   1b240:	ldr	r0, [fp, #8]
   1b244:	mov	r1, #-2147483648	; 0x80000000
   1b248:	add	r1, r1, r0, asr #31
   1b24c:	rsbs	r0, r0, #0
   1b250:	rscs	r1, r1, #0
   1b254:	blt	1b2dc <__assert_fail@plt+0xa1f4>
   1b258:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b25c:	mov	r0, #0
   1b260:	cmp	r0, #0
   1b264:	bne	1b2dc <__assert_fail@plt+0xa1f4>
   1b268:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b26c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b270:	asr	r3, r0, #31
   1b274:	mov	r1, #0
   1b278:	mov	r2, #-2147483648	; 0x80000000
   1b27c:	str	r0, [sp, #32]
   1b280:	mov	r0, r1
   1b284:	mov	r1, r2
   1b288:	ldr	r2, [sp, #32]
   1b28c:	bl	1e464 <__assert_fail@plt+0xd37c>
   1b290:	ldr	r2, [fp, #8]
   1b294:	subs	r0, r0, r2
   1b298:	sbcs	r1, r1, r2, asr #31
   1b29c:	blt	1b2dc <__assert_fail@plt+0xa1f4>
   1b2a0:	b	1b2f0 <__assert_fail@plt+0xa208>
   1b2a4:	ldr	r0, [fp, #8]
   1b2a8:	asr	r3, r0, #31
   1b2ac:	mvn	r1, #0
   1b2b0:	mvn	r2, #-2147483648	; 0x80000000
   1b2b4:	str	r0, [sp, #28]
   1b2b8:	mov	r0, r1
   1b2bc:	mov	r1, r2
   1b2c0:	ldr	r2, [sp, #28]
   1b2c4:	bl	1e464 <__assert_fail@plt+0xd37c>
   1b2c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b2cc:	subs	r0, r0, r2
   1b2d0:	sbcs	r1, r1, r2, asr #31
   1b2d4:	bge	1b2f0 <__assert_fail@plt+0xa208>
   1b2d8:	b	1b2dc <__assert_fail@plt+0xa1f4>
   1b2dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2e0:	ldr	r1, [fp, #8]
   1b2e4:	mul	r0, r0, r1
   1b2e8:	str	r0, [fp, #-28]	; 0xffffffe4
   1b2ec:	b	1b538 <__assert_fail@plt+0xa450>
   1b2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2f4:	ldr	r1, [fp, #8]
   1b2f8:	mul	r0, r0, r1
   1b2fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1b300:	b	1b53c <__assert_fail@plt+0xa454>
   1b304:	ldr	r0, [fp, #8]
   1b308:	cmp	r0, #0
   1b30c:	bge	1b45c <__assert_fail@plt+0xa374>
   1b310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b314:	cmp	r0, #0
   1b318:	bge	1b3e4 <__assert_fail@plt+0xa2fc>
   1b31c:	b	1b35c <__assert_fail@plt+0xa274>
   1b320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b324:	ldr	r1, [fp, #8]
   1b328:	asr	r3, r1, #31
   1b32c:	mvn	r2, #0
   1b330:	str	r0, [sp, #24]
   1b334:	mov	r0, r2
   1b338:	str	r1, [sp, #20]
   1b33c:	mov	r1, r2
   1b340:	ldr	r2, [sp, #20]
   1b344:	bl	1e538 <__assert_fail@plt+0xd450>
   1b348:	ldr	r2, [sp, #24]
   1b34c:	subs	r0, r2, r0
   1b350:	rscs	r1, r1, r2, asr #31
   1b354:	bcc	1b510 <__assert_fail@plt+0xa428>
   1b358:	b	1b524 <__assert_fail@plt+0xa43c>
   1b35c:	b	1b360 <__assert_fail@plt+0xa278>
   1b360:	ldr	r0, [pc, #512]	; 1b568 <__assert_fail@plt+0xa480>
   1b364:	ldr	r1, [fp, #8]
   1b368:	cmp	r1, r0
   1b36c:	blt	1b384 <__assert_fail@plt+0xa29c>
   1b370:	b	1b398 <__assert_fail@plt+0xa2b0>
   1b374:	ldr	r0, [fp, #8]
   1b378:	movw	r1, #0
   1b37c:	cmp	r1, r0
   1b380:	bge	1b398 <__assert_fail@plt+0xa2b0>
   1b384:	mov	r0, #1
   1b388:	mvn	r1, #0
   1b38c:	str	r1, [sp, #16]
   1b390:	str	r0, [sp, #12]
   1b394:	b	1b3c4 <__assert_fail@plt+0xa2dc>
   1b398:	ldr	r0, [fp, #8]
   1b39c:	rsb	r0, r0, #0
   1b3a0:	asr	r3, r0, #31
   1b3a4:	mvn	r1, #0
   1b3a8:	str	r0, [sp, #8]
   1b3ac:	mov	r0, r1
   1b3b0:	ldr	r2, [sp, #8]
   1b3b4:	bl	1e538 <__assert_fail@plt+0xd450>
   1b3b8:	str	r0, [sp, #16]
   1b3bc:	str	r1, [sp, #12]
   1b3c0:	b	1b3c4 <__assert_fail@plt+0xa2dc>
   1b3c4:	ldr	r0, [sp, #12]
   1b3c8:	ldr	r1, [sp, #16]
   1b3cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b3d0:	mvn	r2, r2
   1b3d4:	subs	r1, r2, r1
   1b3d8:	rscs	r0, r0, r2, asr #31
   1b3dc:	bcs	1b510 <__assert_fail@plt+0xa428>
   1b3e0:	b	1b524 <__assert_fail@plt+0xa43c>
   1b3e4:	b	1b3e8 <__assert_fail@plt+0xa300>
   1b3e8:	b	1b440 <__assert_fail@plt+0xa358>
   1b3ec:	b	1b440 <__assert_fail@plt+0xa358>
   1b3f0:	ldr	r0, [fp, #8]
   1b3f4:	cmn	r0, #1
   1b3f8:	bne	1b440 <__assert_fail@plt+0xa358>
   1b3fc:	b	1b400 <__assert_fail@plt+0xa318>
   1b400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b404:	add	r0, r0, #0
   1b408:	movw	r1, #0
   1b40c:	cmp	r1, r0
   1b410:	blt	1b510 <__assert_fail@plt+0xa428>
   1b414:	b	1b524 <__assert_fail@plt+0xa43c>
   1b418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b41c:	movw	r1, #0
   1b420:	cmp	r1, r0
   1b424:	bge	1b524 <__assert_fail@plt+0xa43c>
   1b428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b42c:	sub	r0, r0, #1
   1b430:	mvn	r1, #0
   1b434:	cmp	r1, r0
   1b438:	blt	1b510 <__assert_fail@plt+0xa428>
   1b43c:	b	1b524 <__assert_fail@plt+0xa43c>
   1b440:	ldr	r0, [fp, #8]
   1b444:	movw	r1, #0
   1b448:	sdiv	r0, r1, r0
   1b44c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b450:	cmp	r0, r1
   1b454:	blt	1b510 <__assert_fail@plt+0xa428>
   1b458:	b	1b524 <__assert_fail@plt+0xa43c>
   1b45c:	ldr	r0, [fp, #8]
   1b460:	cmp	r0, #0
   1b464:	bne	1b46c <__assert_fail@plt+0xa384>
   1b468:	b	1b524 <__assert_fail@plt+0xa43c>
   1b46c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b470:	cmp	r0, #0
   1b474:	bge	1b4e0 <__assert_fail@plt+0xa3f8>
   1b478:	b	1b47c <__assert_fail@plt+0xa394>
   1b47c:	b	1b4c4 <__assert_fail@plt+0xa3dc>
   1b480:	b	1b4c4 <__assert_fail@plt+0xa3dc>
   1b484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b488:	cmn	r0, #1
   1b48c:	bne	1b4c4 <__assert_fail@plt+0xa3dc>
   1b490:	b	1b494 <__assert_fail@plt+0xa3ac>
   1b494:	ldr	r0, [fp, #8]
   1b498:	add	r0, r0, #0
   1b49c:	movw	r1, #0
   1b4a0:	cmp	r1, r0
   1b4a4:	blt	1b510 <__assert_fail@plt+0xa428>
   1b4a8:	b	1b524 <__assert_fail@plt+0xa43c>
   1b4ac:	ldr	r0, [fp, #8]
   1b4b0:	sub	r0, r0, #1
   1b4b4:	mvn	r1, #0
   1b4b8:	cmp	r1, r0
   1b4bc:	blt	1b510 <__assert_fail@plt+0xa428>
   1b4c0:	b	1b524 <__assert_fail@plt+0xa43c>
   1b4c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b4c8:	movw	r1, #0
   1b4cc:	sdiv	r0, r1, r0
   1b4d0:	ldr	r1, [fp, #8]
   1b4d4:	cmp	r0, r1
   1b4d8:	blt	1b510 <__assert_fail@plt+0xa428>
   1b4dc:	b	1b524 <__assert_fail@plt+0xa43c>
   1b4e0:	ldr	r0, [fp, #8]
   1b4e4:	asr	r3, r0, #31
   1b4e8:	mvn	r1, #0
   1b4ec:	str	r0, [sp, #4]
   1b4f0:	mov	r0, r1
   1b4f4:	ldr	r2, [sp, #4]
   1b4f8:	bl	1e538 <__assert_fail@plt+0xd450>
   1b4fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b500:	subs	r0, r0, r2
   1b504:	sbcs	r1, r1, r2, asr #31
   1b508:	bcs	1b524 <__assert_fail@plt+0xa43c>
   1b50c:	b	1b510 <__assert_fail@plt+0xa428>
   1b510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b514:	ldr	r1, [fp, #8]
   1b518:	mul	r0, r0, r1
   1b51c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b520:	b	1b538 <__assert_fail@plt+0xa450>
   1b524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b528:	ldr	r1, [fp, #8]
   1b52c:	mul	r0, r0, r1
   1b530:	str	r0, [fp, #-28]	; 0xffffffe4
   1b534:	b	1b53c <__assert_fail@plt+0xa454>
   1b538:	bl	1b714 <__assert_fail@plt+0xa62c>
   1b53c:	ldr	r0, [fp, #-4]
   1b540:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b544:	bl	18a74 <__assert_fail@plt+0x798c>
   1b548:	str	r0, [fp, #-4]
   1b54c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b550:	ldr	r1, [fp, #-8]
   1b554:	str	r0, [r1]
   1b558:	ldr	r0, [fp, #-4]
   1b55c:	mov	sp, fp
   1b560:	pop	{fp, pc}
   1b564:	svcvc	0x00ffffff
   1b568:	andhi	r0, r0, r1
   1b56c:	andhi	r0, r0, r0
   1b570:			; <UNDEFINED> instruction: 0xffff8000
   1b574:	push	{fp, lr}
   1b578:	mov	fp, sp
   1b57c:	sub	sp, sp, #8
   1b580:	str	r0, [sp, #4]
   1b584:	ldr	r0, [sp, #4]
   1b588:	movw	r1, #1
   1b58c:	bl	1b598 <__assert_fail@plt+0xa4b0>
   1b590:	mov	sp, fp
   1b594:	pop	{fp, pc}
   1b598:	push	{fp, lr}
   1b59c:	mov	fp, sp
   1b5a0:	sub	sp, sp, #8
   1b5a4:	str	r0, [sp, #4]
   1b5a8:	str	r1, [sp]
   1b5ac:	ldr	r0, [sp, #4]
   1b5b0:	ldr	r1, [sp]
   1b5b4:	bl	1d7a8 <__assert_fail@plt+0xc6c0>
   1b5b8:	bl	18a00 <__assert_fail@plt+0x7918>
   1b5bc:	mov	sp, fp
   1b5c0:	pop	{fp, pc}
   1b5c4:	push	{fp, lr}
   1b5c8:	mov	fp, sp
   1b5cc:	sub	sp, sp, #8
   1b5d0:	str	r0, [sp, #4]
   1b5d4:	ldr	r0, [sp, #4]
   1b5d8:	movw	r1, #1
   1b5dc:	bl	1b5e8 <__assert_fail@plt+0xa500>
   1b5e0:	mov	sp, fp
   1b5e4:	pop	{fp, pc}
   1b5e8:	push	{fp, lr}
   1b5ec:	mov	fp, sp
   1b5f0:	sub	sp, sp, #8
   1b5f4:	str	r0, [sp, #4]
   1b5f8:	str	r1, [sp]
   1b5fc:	ldr	r0, [sp, #4]
   1b600:	ldr	r1, [sp]
   1b604:	bl	1452c <__assert_fail@plt+0x3444>
   1b608:	bl	18a00 <__assert_fail@plt+0x7918>
   1b60c:	mov	sp, fp
   1b610:	pop	{fp, pc}
   1b614:	push	{fp, lr}
   1b618:	mov	fp, sp
   1b61c:	sub	sp, sp, #16
   1b620:	str	r0, [fp, #-4]
   1b624:	str	r1, [sp, #8]
   1b628:	ldr	r0, [sp, #8]
   1b62c:	bl	189dc <__assert_fail@plt+0x78f4>
   1b630:	ldr	r1, [fp, #-4]
   1b634:	ldr	r2, [sp, #8]
   1b638:	str	r0, [sp, #4]
   1b63c:	bl	10ee4 <memcpy@plt>
   1b640:	ldr	r0, [sp, #4]
   1b644:	mov	sp, fp
   1b648:	pop	{fp, pc}
   1b64c:	push	{fp, lr}
   1b650:	mov	fp, sp
   1b654:	sub	sp, sp, #16
   1b658:	str	r0, [fp, #-4]
   1b65c:	str	r1, [sp, #8]
   1b660:	ldr	r0, [sp, #8]
   1b664:	bl	18a30 <__assert_fail@plt+0x7948>
   1b668:	ldr	r1, [fp, #-4]
   1b66c:	ldr	r2, [sp, #8]
   1b670:	str	r0, [sp, #4]
   1b674:	bl	10ee4 <memcpy@plt>
   1b678:	ldr	r0, [sp, #4]
   1b67c:	mov	sp, fp
   1b680:	pop	{fp, pc}
   1b684:	push	{fp, lr}
   1b688:	mov	fp, sp
   1b68c:	sub	sp, sp, #16
   1b690:	str	r0, [fp, #-4]
   1b694:	str	r1, [sp, #8]
   1b698:	ldr	r0, [sp, #8]
   1b69c:	add	r0, r0, #1
   1b6a0:	bl	18a30 <__assert_fail@plt+0x7948>
   1b6a4:	str	r0, [sp, #4]
   1b6a8:	ldr	r0, [sp, #4]
   1b6ac:	ldr	r1, [sp, #8]
   1b6b0:	add	r0, r0, r1
   1b6b4:	movw	r1, #0
   1b6b8:	strb	r1, [r0]
   1b6bc:	ldr	r0, [sp, #4]
   1b6c0:	ldr	r1, [fp, #-4]
   1b6c4:	ldr	r2, [sp, #8]
   1b6c8:	str	r0, [sp]
   1b6cc:	bl	10ee4 <memcpy@plt>
   1b6d0:	ldr	r0, [sp]
   1b6d4:	mov	sp, fp
   1b6d8:	pop	{fp, pc}
   1b6dc:	push	{fp, lr}
   1b6e0:	mov	fp, sp
   1b6e4:	sub	sp, sp, #8
   1b6e8:	str	r0, [sp, #4]
   1b6ec:	ldr	r0, [sp, #4]
   1b6f0:	ldr	r1, [sp, #4]
   1b6f4:	str	r0, [sp]
   1b6f8:	mov	r0, r1
   1b6fc:	bl	10fec <strlen@plt>
   1b700:	add	r1, r0, #1
   1b704:	ldr	r0, [sp]
   1b708:	bl	1b614 <__assert_fail@plt+0xa52c>
   1b70c:	mov	sp, fp
   1b710:	pop	{fp, pc}
   1b714:	push	{fp, lr}
   1b718:	mov	fp, sp
   1b71c:	sub	sp, sp, #8
   1b720:	movw	r0, #244	; 0xf4
   1b724:	movt	r0, #3
   1b728:	ldr	r0, [r0]
   1b72c:	movw	r1, #62096	; 0xf290
   1b730:	movt	r1, #1
   1b734:	str	r0, [sp, #4]
   1b738:	mov	r0, r1
   1b73c:	bl	10fe0 <gettext@plt>
   1b740:	ldr	r1, [sp, #4]
   1b744:	str	r0, [sp]
   1b748:	mov	r0, r1
   1b74c:	movw	r1, #0
   1b750:	movw	r2, #59976	; 0xea48
   1b754:	movt	r2, #1
   1b758:	ldr	r3, [sp]
   1b75c:	bl	10f80 <error@plt>
   1b760:	bl	110d0 <abort@plt>
   1b764:	bx	lr
   1b768:	push	{fp, lr}
   1b76c:	mov	fp, sp
   1b770:	sub	sp, sp, #8
   1b774:	str	r0, [sp, #4]
   1b778:	str	r1, [sp]
   1b77c:	ldr	r0, [sp, #4]
   1b780:	ldr	r1, [sp]
   1b784:	bl	1d970 <__assert_fail@plt+0xc888>
   1b788:	cmp	r0, #0
   1b78c:	bge	1b794 <__assert_fail@plt+0xa6ac>
   1b790:	bl	1b764 <__assert_fail@plt+0xa67c>
   1b794:	mov	sp, fp
   1b798:	pop	{fp, pc}
   1b79c:	push	{fp, lr}
   1b7a0:	mov	fp, sp
   1b7a4:	sub	sp, sp, #72	; 0x48
   1b7a8:	ldr	ip, [fp, #8]
   1b7ac:	str	r0, [fp, #-8]
   1b7b0:	str	r1, [fp, #-12]
   1b7b4:	str	r2, [fp, #-16]
   1b7b8:	str	r3, [fp, #-20]	; 0xffffffec
   1b7bc:	movw	r0, #0
   1b7c0:	str	r0, [sp, #28]
   1b7c4:	ldr	r1, [fp, #-16]
   1b7c8:	cmp	r0, r1
   1b7cc:	bgt	1b7e0 <__assert_fail@plt+0xa6f8>
   1b7d0:	ldr	r0, [fp, #-16]
   1b7d4:	cmp	r0, #36	; 0x24
   1b7d8:	bgt	1b7e0 <__assert_fail@plt+0xa6f8>
   1b7dc:	b	1b800 <__assert_fail@plt+0xa718>
   1b7e0:	movw	r0, #62113	; 0xf2a1
   1b7e4:	movt	r0, #1
   1b7e8:	movw	r1, #62151	; 0xf2c7
   1b7ec:	movt	r1, #1
   1b7f0:	movw	r2, #85	; 0x55
   1b7f4:	movw	r3, #62167	; 0xf2d7
   1b7f8:	movt	r3, #1
   1b7fc:	bl	110e8 <__assert_fail@plt>
   1b800:	ldr	r0, [fp, #-12]
   1b804:	movw	r1, #0
   1b808:	cmp	r0, r1
   1b80c:	beq	1b81c <__assert_fail@plt+0xa734>
   1b810:	ldr	r0, [fp, #-12]
   1b814:	str	r0, [sp, #12]
   1b818:	b	1b828 <__assert_fail@plt+0xa740>
   1b81c:	sub	r0, fp, #24
   1b820:	str	r0, [sp, #12]
   1b824:	b	1b828 <__assert_fail@plt+0xa740>
   1b828:	ldr	r0, [sp, #12]
   1b82c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b830:	bl	11010 <__errno_location@plt>
   1b834:	mov	r1, #0
   1b838:	str	r1, [r0]
   1b83c:	ldr	r0, [fp, #-8]
   1b840:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b844:	ldr	r2, [fp, #-16]
   1b848:	bl	1104c <strtoimax@plt>
   1b84c:	str	r1, [sp, #36]	; 0x24
   1b850:	str	r0, [sp, #32]
   1b854:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b858:	ldr	r0, [r0]
   1b85c:	ldr	r1, [fp, #-8]
   1b860:	cmp	r0, r1
   1b864:	bne	1b8d0 <__assert_fail@plt+0xa7e8>
   1b868:	ldr	r0, [fp, #8]
   1b86c:	movw	r1, #0
   1b870:	cmp	r0, r1
   1b874:	beq	1b8c0 <__assert_fail@plt+0xa7d8>
   1b878:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b87c:	ldr	r0, [r0]
   1b880:	ldrb	r0, [r0]
   1b884:	cmp	r0, #0
   1b888:	beq	1b8c0 <__assert_fail@plt+0xa7d8>
   1b88c:	ldr	r0, [fp, #8]
   1b890:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b894:	ldr	r1, [r1]
   1b898:	ldrb	r1, [r1]
   1b89c:	bl	10ff8 <strchr@plt>
   1b8a0:	movw	r1, #0
   1b8a4:	cmp	r0, r1
   1b8a8:	beq	1b8c0 <__assert_fail@plt+0xa7d8>
   1b8ac:	mov	r0, #0
   1b8b0:	str	r0, [sp, #36]	; 0x24
   1b8b4:	mov	r0, #1
   1b8b8:	str	r0, [sp, #32]
   1b8bc:	b	1b8cc <__assert_fail@plt+0xa7e4>
   1b8c0:	movw	r0, #4
   1b8c4:	str	r0, [fp, #-4]
   1b8c8:	b	1bdb8 <__assert_fail@plt+0xacd0>
   1b8cc:	b	1b908 <__assert_fail@plt+0xa820>
   1b8d0:	bl	11010 <__errno_location@plt>
   1b8d4:	ldr	r0, [r0]
   1b8d8:	cmp	r0, #0
   1b8dc:	beq	1b904 <__assert_fail@plt+0xa81c>
   1b8e0:	bl	11010 <__errno_location@plt>
   1b8e4:	ldr	r0, [r0]
   1b8e8:	cmp	r0, #34	; 0x22
   1b8ec:	beq	1b8fc <__assert_fail@plt+0xa814>
   1b8f0:	movw	r0, #4
   1b8f4:	str	r0, [fp, #-4]
   1b8f8:	b	1bdb8 <__assert_fail@plt+0xacd0>
   1b8fc:	movw	r0, #1
   1b900:	str	r0, [sp, #28]
   1b904:	b	1b908 <__assert_fail@plt+0xa820>
   1b908:	ldr	r0, [fp, #8]
   1b90c:	movw	r1, #0
   1b910:	cmp	r0, r1
   1b914:	bne	1b938 <__assert_fail@plt+0xa850>
   1b918:	ldr	r0, [sp, #32]
   1b91c:	ldr	r1, [sp, #36]	; 0x24
   1b920:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b924:	str	r1, [r2, #4]
   1b928:	str	r0, [r2]
   1b92c:	ldr	r0, [sp, #28]
   1b930:	str	r0, [fp, #-4]
   1b934:	b	1bdb8 <__assert_fail@plt+0xacd0>
   1b938:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b93c:	ldr	r0, [r0]
   1b940:	ldrb	r0, [r0]
   1b944:	cmp	r0, #0
   1b948:	beq	1bd9c <__assert_fail@plt+0xacb4>
   1b94c:	movw	r0, #1024	; 0x400
   1b950:	str	r0, [sp, #24]
   1b954:	movw	r0, #1
   1b958:	str	r0, [sp, #20]
   1b95c:	ldr	r0, [fp, #8]
   1b960:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b964:	ldr	r1, [r1]
   1b968:	ldrb	r1, [r1]
   1b96c:	bl	10ff8 <strchr@plt>
   1b970:	movw	r1, #0
   1b974:	cmp	r0, r1
   1b978:	bne	1b9a0 <__assert_fail@plt+0xa8b8>
   1b97c:	ldr	r0, [sp, #32]
   1b980:	ldr	r1, [sp, #36]	; 0x24
   1b984:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b988:	str	r1, [r2, #4]
   1b98c:	str	r0, [r2]
   1b990:	ldr	r0, [sp, #28]
   1b994:	orr	r0, r0, #2
   1b998:	str	r0, [fp, #-4]
   1b99c:	b	1bdb8 <__assert_fail@plt+0xacd0>
   1b9a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b9a4:	ldr	r0, [r0]
   1b9a8:	ldrb	r0, [r0]
   1b9ac:	sub	r0, r0, #69	; 0x45
   1b9b0:	cmp	r0, #47	; 0x2f
   1b9b4:	str	r0, [sp, #8]
   1b9b8:	bhi	1bb24 <__assert_fail@plt+0xaa3c>
   1b9bc:	add	r0, pc, #8
   1b9c0:	ldr	r1, [sp, #8]
   1b9c4:	ldr	r0, [r0, r1, lsl #2]
   1b9c8:	mov	pc, r0
   1b9cc:	andeq	fp, r1, ip, lsl #21
   1b9d0:	andeq	fp, r1, r4, lsr #22
   1b9d4:	andeq	fp, r1, ip, lsl #21
   1b9d8:	andeq	fp, r1, r4, lsr #22
   1b9dc:	andeq	fp, r1, r4, lsr #22
   1b9e0:	andeq	fp, r1, r4, lsr #22
   1b9e4:	andeq	fp, r1, ip, lsl #21
   1b9e8:	andeq	fp, r1, r4, lsr #22
   1b9ec:	andeq	fp, r1, ip, lsl #21
   1b9f0:	andeq	fp, r1, r4, lsr #22
   1b9f4:	andeq	fp, r1, r4, lsr #22
   1b9f8:	andeq	fp, r1, ip, lsl #21
   1b9fc:	andeq	fp, r1, r4, lsr #22
   1ba00:	andeq	fp, r1, r4, lsr #22
   1ba04:	andeq	fp, r1, r4, lsr #22
   1ba08:	andeq	fp, r1, ip, lsl #21
   1ba0c:	andeq	fp, r1, r4, lsr #22
   1ba10:	andeq	fp, r1, r4, lsr #22
   1ba14:	andeq	fp, r1, r4, lsr #22
   1ba18:	andeq	fp, r1, r4, lsr #22
   1ba1c:	andeq	fp, r1, ip, lsl #21
   1ba20:	andeq	fp, r1, ip, lsl #21
   1ba24:	andeq	fp, r1, r4, lsr #22
   1ba28:	andeq	fp, r1, r4, lsr #22
   1ba2c:	andeq	fp, r1, r4, lsr #22
   1ba30:	andeq	fp, r1, r4, lsr #22
   1ba34:	andeq	fp, r1, r4, lsr #22
   1ba38:	andeq	fp, r1, r4, lsr #22
   1ba3c:	andeq	fp, r1, r4, lsr #22
   1ba40:	andeq	fp, r1, r4, lsr #22
   1ba44:	andeq	fp, r1, r4, lsr #22
   1ba48:	andeq	fp, r1, r4, lsr #22
   1ba4c:	andeq	fp, r1, r4, lsr #22
   1ba50:	andeq	fp, r1, r4, lsr #22
   1ba54:	andeq	fp, r1, ip, lsl #21
   1ba58:	andeq	fp, r1, r4, lsr #22
   1ba5c:	andeq	fp, r1, r4, lsr #22
   1ba60:	andeq	fp, r1, r4, lsr #22
   1ba64:	andeq	fp, r1, ip, lsl #21
   1ba68:	andeq	fp, r1, r4, lsr #22
   1ba6c:	andeq	fp, r1, ip, lsl #21
   1ba70:	andeq	fp, r1, r4, lsr #22
   1ba74:	andeq	fp, r1, r4, lsr #22
   1ba78:	andeq	fp, r1, r4, lsr #22
   1ba7c:	andeq	fp, r1, r4, lsr #22
   1ba80:	andeq	fp, r1, r4, lsr #22
   1ba84:	andeq	fp, r1, r4, lsr #22
   1ba88:	andeq	fp, r1, ip, lsl #21
   1ba8c:	ldr	r0, [fp, #8]
   1ba90:	movw	r1, #48	; 0x30
   1ba94:	bl	10ff8 <strchr@plt>
   1ba98:	movw	r1, #0
   1ba9c:	cmp	r0, r1
   1baa0:	beq	1bb20 <__assert_fail@plt+0xaa38>
   1baa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1baa8:	ldr	r0, [r0]
   1baac:	ldrb	r0, [r0, #1]
   1bab0:	mov	r1, r0
   1bab4:	cmp	r0, #66	; 0x42
   1bab8:	str	r1, [sp, #4]
   1babc:	beq	1bb08 <__assert_fail@plt+0xaa20>
   1bac0:	b	1bac4 <__assert_fail@plt+0xa9dc>
   1bac4:	ldr	r0, [sp, #4]
   1bac8:	cmp	r0, #68	; 0x44
   1bacc:	beq	1bb08 <__assert_fail@plt+0xaa20>
   1bad0:	b	1bad4 <__assert_fail@plt+0xa9ec>
   1bad4:	ldr	r0, [sp, #4]
   1bad8:	cmp	r0, #105	; 0x69
   1badc:	bne	1bb1c <__assert_fail@plt+0xaa34>
   1bae0:	b	1bae4 <__assert_fail@plt+0xa9fc>
   1bae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bae8:	ldr	r0, [r0]
   1baec:	ldrb	r0, [r0, #2]
   1baf0:	cmp	r0, #66	; 0x42
   1baf4:	bne	1bb04 <__assert_fail@plt+0xaa1c>
   1baf8:	ldr	r0, [sp, #20]
   1bafc:	add	r0, r0, #2
   1bb00:	str	r0, [sp, #20]
   1bb04:	b	1bb1c <__assert_fail@plt+0xaa34>
   1bb08:	movw	r0, #1000	; 0x3e8
   1bb0c:	str	r0, [sp, #24]
   1bb10:	ldr	r0, [sp, #20]
   1bb14:	add	r0, r0, #1
   1bb18:	str	r0, [sp, #20]
   1bb1c:	b	1bb20 <__assert_fail@plt+0xaa38>
   1bb20:	b	1bb24 <__assert_fail@plt+0xaa3c>
   1bb24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb28:	ldr	r0, [r0]
   1bb2c:	ldrb	r0, [r0]
   1bb30:	sub	r0, r0, #66	; 0x42
   1bb34:	cmp	r0, #53	; 0x35
   1bb38:	str	r0, [sp]
   1bb3c:	bhi	1bd30 <__assert_fail@plt+0xac48>
   1bb40:	add	r0, pc, #8
   1bb44:	ldr	r1, [sp]
   1bb48:	ldr	r0, [r0, r1, lsl #2]
   1bb4c:	mov	pc, r0
   1bb50:	andeq	fp, r1, ip, lsr ip
   1bb54:	andeq	fp, r1, r0, lsr sp
   1bb58:	andeq	fp, r1, r0, lsr sp
   1bb5c:	andeq	fp, r1, ip, asr ip
   1bb60:	andeq	fp, r1, r0, lsr sp
   1bb64:	andeq	fp, r1, r4, ror ip
   1bb68:	andeq	fp, r1, r0, lsr sp
   1bb6c:	andeq	fp, r1, r0, lsr sp
   1bb70:	andeq	fp, r1, r0, lsr sp
   1bb74:	andeq	fp, r1, ip, lsl #25
   1bb78:	andeq	fp, r1, r0, lsr sp
   1bb7c:	andeq	fp, r1, r4, lsr #25
   1bb80:	andeq	fp, r1, r0, lsr sp
   1bb84:	andeq	fp, r1, r0, lsr sp
   1bb88:			; <UNDEFINED> instruction: 0x0001bcbc
   1bb8c:	andeq	fp, r1, r0, lsr sp
   1bb90:	andeq	fp, r1, r0, lsr sp
   1bb94:	andeq	fp, r1, r0, lsr sp
   1bb98:	ldrdeq	fp, [r1], -r4
   1bb9c:	andeq	fp, r1, r0, lsr sp
   1bba0:	andeq	fp, r1, r0, lsr sp
   1bba4:	andeq	fp, r1, r0, lsr sp
   1bba8:	andeq	fp, r1, r0, lsr sp
   1bbac:	andeq	fp, r1, r0, lsl #26
   1bbb0:	andeq	fp, r1, r8, lsl sp
   1bbb4:	andeq	fp, r1, r0, lsr sp
   1bbb8:	andeq	fp, r1, r0, lsr sp
   1bbbc:	andeq	fp, r1, r0, lsr sp
   1bbc0:	andeq	fp, r1, r0, lsr sp
   1bbc4:	andeq	fp, r1, r0, lsr sp
   1bbc8:	andeq	fp, r1, r0, lsr sp
   1bbcc:	andeq	fp, r1, r0, lsr sp
   1bbd0:	andeq	fp, r1, r8, lsr #24
   1bbd4:	andeq	fp, r1, r0, asr ip
   1bbd8:	andeq	fp, r1, r0, lsr sp
   1bbdc:	andeq	fp, r1, r0, lsr sp
   1bbe0:	andeq	fp, r1, r0, lsr sp
   1bbe4:	andeq	fp, r1, r4, ror ip
   1bbe8:	andeq	fp, r1, r0, lsr sp
   1bbec:	andeq	fp, r1, r0, lsr sp
   1bbf0:	andeq	fp, r1, r0, lsr sp
   1bbf4:	andeq	fp, r1, ip, lsl #25
   1bbf8:	andeq	fp, r1, r0, lsr sp
   1bbfc:	andeq	fp, r1, r4, lsr #25
   1bc00:	andeq	fp, r1, r0, lsr sp
   1bc04:	andeq	fp, r1, r0, lsr sp
   1bc08:	andeq	fp, r1, r0, lsr sp
   1bc0c:	andeq	fp, r1, r0, lsr sp
   1bc10:	andeq	fp, r1, r0, lsr sp
   1bc14:	andeq	fp, r1, r0, lsr sp
   1bc18:	ldrdeq	fp, [r1], -r4
   1bc1c:	andeq	fp, r1, r0, lsr sp
   1bc20:	andeq	fp, r1, r0, lsr sp
   1bc24:	andeq	fp, r1, ip, ror #25
   1bc28:	add	r0, sp, #32
   1bc2c:	movw	r1, #512	; 0x200
   1bc30:	bl	1bdc4 <__assert_fail@plt+0xacdc>
   1bc34:	str	r0, [sp, #16]
   1bc38:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bc3c:	add	r0, sp, #32
   1bc40:	movw	r1, #1024	; 0x400
   1bc44:	bl	1bdc4 <__assert_fail@plt+0xacdc>
   1bc48:	str	r0, [sp, #16]
   1bc4c:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bc50:	movw	r0, #0
   1bc54:	str	r0, [sp, #16]
   1bc58:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bc5c:	ldr	r1, [sp, #24]
   1bc60:	add	r0, sp, #32
   1bc64:	movw	r2, #6
   1bc68:	bl	1d748 <__assert_fail@plt+0xc660>
   1bc6c:	str	r0, [sp, #16]
   1bc70:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bc74:	ldr	r1, [sp, #24]
   1bc78:	add	r0, sp, #32
   1bc7c:	movw	r2, #3
   1bc80:	bl	1d748 <__assert_fail@plt+0xc660>
   1bc84:	str	r0, [sp, #16]
   1bc88:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bc8c:	ldr	r1, [sp, #24]
   1bc90:	add	r0, sp, #32
   1bc94:	movw	r2, #1
   1bc98:	bl	1d748 <__assert_fail@plt+0xc660>
   1bc9c:	str	r0, [sp, #16]
   1bca0:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bca4:	ldr	r1, [sp, #24]
   1bca8:	add	r0, sp, #32
   1bcac:	movw	r2, #2
   1bcb0:	bl	1d748 <__assert_fail@plt+0xc660>
   1bcb4:	str	r0, [sp, #16]
   1bcb8:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bcbc:	ldr	r1, [sp, #24]
   1bcc0:	add	r0, sp, #32
   1bcc4:	movw	r2, #5
   1bcc8:	bl	1d748 <__assert_fail@plt+0xc660>
   1bccc:	str	r0, [sp, #16]
   1bcd0:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bcd4:	ldr	r1, [sp, #24]
   1bcd8:	add	r0, sp, #32
   1bcdc:	movw	r2, #4
   1bce0:	bl	1d748 <__assert_fail@plt+0xc660>
   1bce4:	str	r0, [sp, #16]
   1bce8:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bcec:	add	r0, sp, #32
   1bcf0:	movw	r1, #2
   1bcf4:	bl	1bdc4 <__assert_fail@plt+0xacdc>
   1bcf8:	str	r0, [sp, #16]
   1bcfc:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bd00:	ldr	r1, [sp, #24]
   1bd04:	add	r0, sp, #32
   1bd08:	movw	r2, #8
   1bd0c:	bl	1d748 <__assert_fail@plt+0xc660>
   1bd10:	str	r0, [sp, #16]
   1bd14:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bd18:	ldr	r1, [sp, #24]
   1bd1c:	add	r0, sp, #32
   1bd20:	movw	r2, #7
   1bd24:	bl	1d748 <__assert_fail@plt+0xc660>
   1bd28:	str	r0, [sp, #16]
   1bd2c:	b	1bd54 <__assert_fail@plt+0xac6c>
   1bd30:	ldr	r0, [sp, #32]
   1bd34:	ldr	r1, [sp, #36]	; 0x24
   1bd38:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bd3c:	str	r1, [r2, #4]
   1bd40:	str	r0, [r2]
   1bd44:	ldr	r0, [sp, #28]
   1bd48:	orr	r0, r0, #2
   1bd4c:	str	r0, [fp, #-4]
   1bd50:	b	1bdb8 <__assert_fail@plt+0xacd0>
   1bd54:	ldr	r0, [sp, #16]
   1bd58:	ldr	r1, [sp, #28]
   1bd5c:	orr	r0, r1, r0
   1bd60:	str	r0, [sp, #28]
   1bd64:	ldr	r0, [sp, #20]
   1bd68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bd6c:	ldr	r2, [r1]
   1bd70:	add	r0, r2, r0
   1bd74:	str	r0, [r1]
   1bd78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bd7c:	ldr	r0, [r0]
   1bd80:	ldrsb	r0, [r0]
   1bd84:	cmp	r0, #0
   1bd88:	beq	1bd98 <__assert_fail@plt+0xacb0>
   1bd8c:	ldr	r0, [sp, #28]
   1bd90:	orr	r0, r0, #2
   1bd94:	str	r0, [sp, #28]
   1bd98:	b	1bd9c <__assert_fail@plt+0xacb4>
   1bd9c:	ldr	r0, [sp, #32]
   1bda0:	ldr	r1, [sp, #36]	; 0x24
   1bda4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bda8:	str	r1, [r2, #4]
   1bdac:	str	r0, [r2]
   1bdb0:	ldr	r0, [sp, #28]
   1bdb4:	str	r0, [fp, #-4]
   1bdb8:	ldr	r0, [fp, #-4]
   1bdbc:	mov	sp, fp
   1bdc0:	pop	{fp, pc}
   1bdc4:	push	{fp, lr}
   1bdc8:	mov	fp, sp
   1bdcc:	sub	sp, sp, #112	; 0x70
   1bdd0:	str	r0, [fp, #-8]
   1bdd4:	str	r1, [fp, #-12]
   1bdd8:	b	1c2c0 <__assert_fail@plt+0xb1d8>
   1bddc:	b	1bde0 <__assert_fail@plt+0xacf8>
   1bde0:	ldr	r0, [fp, #-12]
   1bde4:	cmp	r0, #0
   1bde8:	bge	1bf48 <__assert_fail@plt+0xae60>
   1bdec:	ldr	r0, [fp, #-8]
   1bdf0:	ldr	r0, [r0, #4]
   1bdf4:	cmn	r0, #1
   1bdf8:	bgt	1bea0 <__assert_fail@plt+0xadb8>
   1bdfc:	b	1be00 <__assert_fail@plt+0xad18>
   1be00:	b	1be04 <__assert_fail@plt+0xad1c>
   1be04:	ldr	r0, [fp, #-8]
   1be08:	ldr	r1, [r0]
   1be0c:	ldr	r0, [r0, #4]
   1be10:	ldr	r2, [fp, #-12]
   1be14:	mov	r3, #127	; 0x7f
   1be18:	sdiv	r2, r3, r2
   1be1c:	subs	r1, r1, r2
   1be20:	sbcs	r0, r0, r2, asr #31
   1be24:	blt	1c020 <__assert_fail@plt+0xaf38>
   1be28:	b	1c044 <__assert_fail@plt+0xaf5c>
   1be2c:	b	1be30 <__assert_fail@plt+0xad48>
   1be30:	ldr	r0, [pc, #4092]	; 1ce34 <__assert_fail@plt+0xbd4c>
   1be34:	ldr	r1, [fp, #-12]
   1be38:	cmp	r1, r0
   1be3c:	blt	1be54 <__assert_fail@plt+0xad6c>
   1be40:	b	1be60 <__assert_fail@plt+0xad78>
   1be44:	ldr	r0, [fp, #-12]
   1be48:	movw	r1, #0
   1be4c:	cmp	r1, r0
   1be50:	bge	1be60 <__assert_fail@plt+0xad78>
   1be54:	movw	r0, #0
   1be58:	str	r0, [fp, #-28]	; 0xffffffe4
   1be5c:	b	1be78 <__assert_fail@plt+0xad90>
   1be60:	ldr	r0, [fp, #-12]
   1be64:	movw	r1, #0
   1be68:	sub	r0, r1, r0
   1be6c:	movw	r1, #127	; 0x7f
   1be70:	sdiv	r0, r1, r0
   1be74:	str	r0, [fp, #-28]	; 0xffffffe4
   1be78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1be7c:	ldr	r1, [fp, #-8]
   1be80:	ldr	r2, [r1]
   1be84:	ldr	r1, [r1, #4]
   1be88:	mvn	r1, r1
   1be8c:	mvn	r2, r2
   1be90:	subs	r2, r2, r0
   1be94:	sbcs	r0, r1, r0, asr #31
   1be98:	bge	1c020 <__assert_fail@plt+0xaf38>
   1be9c:	b	1c044 <__assert_fail@plt+0xaf5c>
   1bea0:	b	1bea4 <__assert_fail@plt+0xadbc>
   1bea4:	b	1bf20 <__assert_fail@plt+0xae38>
   1bea8:	b	1bf20 <__assert_fail@plt+0xae38>
   1beac:	ldr	r0, [fp, #-12]
   1beb0:	cmn	r0, #1
   1beb4:	bne	1bf20 <__assert_fail@plt+0xae38>
   1beb8:	b	1bebc <__assert_fail@plt+0xadd4>
   1bebc:	ldr	r0, [fp, #-8]
   1bec0:	ldr	r1, [r0]
   1bec4:	ldr	r0, [r0, #4]
   1bec8:	subs	r1, r1, #128	; 0x80
   1becc:	sbc	r0, r0, #0
   1bed0:	rsbs	r1, r1, #0
   1bed4:	rscs	r0, r0, #0
   1bed8:	blt	1c020 <__assert_fail@plt+0xaf38>
   1bedc:	b	1c044 <__assert_fail@plt+0xaf5c>
   1bee0:	ldr	r0, [fp, #-8]
   1bee4:	ldr	r1, [r0]
   1bee8:	ldr	r0, [r0, #4]
   1beec:	subs	r1, r1, #1
   1bef0:	sbcs	r0, r0, #0
   1bef4:	blt	1c044 <__assert_fail@plt+0xaf5c>
   1bef8:	b	1befc <__assert_fail@plt+0xae14>
   1befc:	ldr	r0, [fp, #-8]
   1bf00:	ldr	r1, [r0]
   1bf04:	ldr	r0, [r0, #4]
   1bf08:	subs	r1, r1, #1
   1bf0c:	sbc	r0, r0, #0
   1bf10:	rsbs	r1, r1, #127	; 0x7f
   1bf14:	rscs	r0, r0, #0
   1bf18:	blt	1c020 <__assert_fail@plt+0xaf38>
   1bf1c:	b	1c044 <__assert_fail@plt+0xaf5c>
   1bf20:	ldr	r0, [fp, #-12]
   1bf24:	mvn	r1, #127	; 0x7f
   1bf28:	sdiv	r0, r1, r0
   1bf2c:	ldr	r1, [fp, #-8]
   1bf30:	ldr	r2, [r1]
   1bf34:	ldr	r1, [r1, #4]
   1bf38:	subs	r2, r0, r2
   1bf3c:	rscs	r0, r1, r0, asr #31
   1bf40:	blt	1c020 <__assert_fail@plt+0xaf38>
   1bf44:	b	1c044 <__assert_fail@plt+0xaf5c>
   1bf48:	ldr	r0, [fp, #-12]
   1bf4c:	cmp	r0, #0
   1bf50:	bne	1bf58 <__assert_fail@plt+0xae70>
   1bf54:	b	1c044 <__assert_fail@plt+0xaf5c>
   1bf58:	ldr	r0, [fp, #-8]
   1bf5c:	ldr	r0, [r0, #4]
   1bf60:	cmn	r0, #1
   1bf64:	bgt	1bff8 <__assert_fail@plt+0xaf10>
   1bf68:	b	1bf6c <__assert_fail@plt+0xae84>
   1bf6c:	b	1bf70 <__assert_fail@plt+0xae88>
   1bf70:	b	1bfcc <__assert_fail@plt+0xaee4>
   1bf74:	b	1bfcc <__assert_fail@plt+0xaee4>
   1bf78:	ldr	r0, [fp, #-8]
   1bf7c:	ldr	r1, [r0]
   1bf80:	ldr	r0, [r0, #4]
   1bf84:	and	r0, r1, r0
   1bf88:	cmn	r0, #1
   1bf8c:	bne	1bfcc <__assert_fail@plt+0xaee4>
   1bf90:	b	1bf94 <__assert_fail@plt+0xaeac>
   1bf94:	b	1bf98 <__assert_fail@plt+0xaeb0>
   1bf98:	ldr	r0, [fp, #-12]
   1bf9c:	mvn	r1, #127	; 0x7f
   1bfa0:	add	r0, r0, r1
   1bfa4:	movw	r1, #0
   1bfa8:	cmp	r1, r0
   1bfac:	blt	1c020 <__assert_fail@plt+0xaf38>
   1bfb0:	b	1c044 <__assert_fail@plt+0xaf5c>
   1bfb4:	ldr	r0, [fp, #-12]
   1bfb8:	sub	r0, r0, #1
   1bfbc:	movw	r1, #127	; 0x7f
   1bfc0:	cmp	r1, r0
   1bfc4:	blt	1c020 <__assert_fail@plt+0xaf38>
   1bfc8:	b	1c044 <__assert_fail@plt+0xaf5c>
   1bfcc:	ldr	r0, [fp, #-8]
   1bfd0:	ldr	r2, [r0]
   1bfd4:	ldr	r3, [r0, #4]
   1bfd8:	mvn	r0, #127	; 0x7f
   1bfdc:	mvn	r1, #0
   1bfe0:	bl	1e464 <__assert_fail@plt+0xd37c>
   1bfe4:	ldr	r2, [fp, #-12]
   1bfe8:	subs	r0, r0, r2
   1bfec:	sbcs	r1, r1, r2, asr #31
   1bff0:	blt	1c020 <__assert_fail@plt+0xaf38>
   1bff4:	b	1c044 <__assert_fail@plt+0xaf5c>
   1bff8:	ldr	r0, [fp, #-12]
   1bffc:	mov	r1, #127	; 0x7f
   1c000:	sdiv	r0, r1, r0
   1c004:	ldr	r1, [fp, #-8]
   1c008:	ldr	r2, [r1]
   1c00c:	ldr	r1, [r1, #4]
   1c010:	subs	r2, r0, r2
   1c014:	rscs	r0, r1, r0, asr #31
   1c018:	bge	1c044 <__assert_fail@plt+0xaf5c>
   1c01c:	b	1c020 <__assert_fail@plt+0xaf38>
   1c020:	ldr	r0, [fp, #-8]
   1c024:	ldr	r0, [r0]
   1c028:	ldr	r1, [fp, #-12]
   1c02c:	mul	r0, r0, r1
   1c030:	sxtb	r0, r0
   1c034:	asr	r1, r0, #31
   1c038:	str	r0, [fp, #-24]	; 0xffffffe8
   1c03c:	str	r1, [fp, #-20]	; 0xffffffec
   1c040:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1c044:	ldr	r0, [fp, #-8]
   1c048:	ldr	r0, [r0]
   1c04c:	ldr	r1, [fp, #-12]
   1c050:	mul	r0, r0, r1
   1c054:	sxtb	r0, r0
   1c058:	asr	r1, r0, #31
   1c05c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c060:	str	r1, [fp, #-20]	; 0xffffffec
   1c064:	b	1d718 <__assert_fail@plt+0xc630>
   1c068:	ldr	r0, [fp, #-12]
   1c06c:	cmp	r0, #0
   1c070:	bge	1c1b8 <__assert_fail@plt+0xb0d0>
   1c074:	ldr	r0, [fp, #-8]
   1c078:	ldr	r0, [r0, #4]
   1c07c:	cmn	r0, #1
   1c080:	bgt	1c128 <__assert_fail@plt+0xb040>
   1c084:	b	1c088 <__assert_fail@plt+0xafa0>
   1c088:	b	1c08c <__assert_fail@plt+0xafa4>
   1c08c:	ldr	r0, [fp, #-8]
   1c090:	ldr	r1, [r0]
   1c094:	ldr	r0, [r0, #4]
   1c098:	ldr	r2, [fp, #-12]
   1c09c:	mov	r3, #255	; 0xff
   1c0a0:	sdiv	r2, r3, r2
   1c0a4:	subs	r1, r1, r2
   1c0a8:	sbcs	r0, r0, r2, asr #31
   1c0ac:	blt	1c278 <__assert_fail@plt+0xb190>
   1c0b0:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c0b4:	b	1c0b8 <__assert_fail@plt+0xafd0>
   1c0b8:	ldr	r0, [pc, #3444]	; 1ce34 <__assert_fail@plt+0xbd4c>
   1c0bc:	ldr	r1, [fp, #-12]
   1c0c0:	cmp	r1, r0
   1c0c4:	blt	1c0dc <__assert_fail@plt+0xaff4>
   1c0c8:	b	1c0e8 <__assert_fail@plt+0xb000>
   1c0cc:	ldr	r0, [fp, #-12]
   1c0d0:	movw	r1, #0
   1c0d4:	cmp	r1, r0
   1c0d8:	bge	1c0e8 <__assert_fail@plt+0xb000>
   1c0dc:	movw	r0, #0
   1c0e0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c0e4:	b	1c100 <__assert_fail@plt+0xb018>
   1c0e8:	ldr	r0, [fp, #-12]
   1c0ec:	movw	r1, #0
   1c0f0:	sub	r0, r1, r0
   1c0f4:	movw	r1, #255	; 0xff
   1c0f8:	sdiv	r0, r1, r0
   1c0fc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c104:	ldr	r1, [fp, #-8]
   1c108:	ldr	r2, [r1]
   1c10c:	ldr	r1, [r1, #4]
   1c110:	mvn	r1, r1
   1c114:	mvn	r2, r2
   1c118:	subs	r2, r2, r0
   1c11c:	sbcs	r0, r1, r0, asr #31
   1c120:	bge	1c278 <__assert_fail@plt+0xb190>
   1c124:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c128:	b	1c12c <__assert_fail@plt+0xb044>
   1c12c:	b	1c19c <__assert_fail@plt+0xb0b4>
   1c130:	b	1c19c <__assert_fail@plt+0xb0b4>
   1c134:	ldr	r0, [fp, #-12]
   1c138:	cmn	r0, #1
   1c13c:	bne	1c19c <__assert_fail@plt+0xb0b4>
   1c140:	b	1c144 <__assert_fail@plt+0xb05c>
   1c144:	ldr	r0, [fp, #-8]
   1c148:	ldr	r1, [r0]
   1c14c:	ldr	r0, [r0, #4]
   1c150:	rsbs	r1, r1, #0
   1c154:	rscs	r0, r0, #0
   1c158:	blt	1c278 <__assert_fail@plt+0xb190>
   1c15c:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c160:	ldr	r0, [fp, #-8]
   1c164:	ldr	r1, [r0]
   1c168:	ldr	r0, [r0, #4]
   1c16c:	subs	r1, r1, #1
   1c170:	sbcs	r0, r0, #0
   1c174:	blt	1c29c <__assert_fail@plt+0xb1b4>
   1c178:	b	1c17c <__assert_fail@plt+0xb094>
   1c17c:	ldr	r0, [fp, #-8]
   1c180:	ldr	r1, [r0]
   1c184:	ldr	r0, [r0, #4]
   1c188:	subs	r1, r1, #1
   1c18c:	sbc	r0, r0, #0
   1c190:	cmn	r0, #1
   1c194:	bgt	1c278 <__assert_fail@plt+0xb190>
   1c198:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c19c:	ldr	r0, [fp, #-8]
   1c1a0:	ldr	r1, [r0]
   1c1a4:	ldr	r0, [r0, #4]
   1c1a8:	rsbs	r1, r1, #0
   1c1ac:	rscs	r0, r0, #0
   1c1b0:	blt	1c278 <__assert_fail@plt+0xb190>
   1c1b4:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c1b8:	ldr	r0, [fp, #-12]
   1c1bc:	cmp	r0, #0
   1c1c0:	bne	1c1c8 <__assert_fail@plt+0xb0e0>
   1c1c4:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c1c8:	ldr	r0, [fp, #-8]
   1c1cc:	ldr	r0, [r0, #4]
   1c1d0:	cmn	r0, #1
   1c1d4:	bgt	1c250 <__assert_fail@plt+0xb168>
   1c1d8:	b	1c1dc <__assert_fail@plt+0xb0f4>
   1c1dc:	b	1c1e0 <__assert_fail@plt+0xb0f8>
   1c1e0:	b	1c238 <__assert_fail@plt+0xb150>
   1c1e4:	b	1c238 <__assert_fail@plt+0xb150>
   1c1e8:	ldr	r0, [fp, #-8]
   1c1ec:	ldr	r1, [r0]
   1c1f0:	ldr	r0, [r0, #4]
   1c1f4:	and	r0, r1, r0
   1c1f8:	cmn	r0, #1
   1c1fc:	bne	1c238 <__assert_fail@plt+0xb150>
   1c200:	b	1c204 <__assert_fail@plt+0xb11c>
   1c204:	b	1c208 <__assert_fail@plt+0xb120>
   1c208:	ldr	r0, [fp, #-12]
   1c20c:	add	r0, r0, #0
   1c210:	movw	r1, #0
   1c214:	cmp	r1, r0
   1c218:	blt	1c278 <__assert_fail@plt+0xb190>
   1c21c:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c220:	ldr	r0, [fp, #-12]
   1c224:	sub	r0, r0, #1
   1c228:	mvn	r1, #0
   1c22c:	cmp	r1, r0
   1c230:	blt	1c278 <__assert_fail@plt+0xb190>
   1c234:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c238:	ldr	r0, [fp, #-12]
   1c23c:	rsbs	r1, r0, #0
   1c240:	mov	r2, #0
   1c244:	sbcs	r0, r2, r0, asr #31
   1c248:	blt	1c278 <__assert_fail@plt+0xb190>
   1c24c:	b	1c29c <__assert_fail@plt+0xb1b4>
   1c250:	ldr	r0, [fp, #-12]
   1c254:	mov	r1, #255	; 0xff
   1c258:	sdiv	r0, r1, r0
   1c25c:	ldr	r1, [fp, #-8]
   1c260:	ldr	r2, [r1]
   1c264:	ldr	r1, [r1, #4]
   1c268:	subs	r2, r0, r2
   1c26c:	rscs	r0, r1, r0, asr #31
   1c270:	bge	1c29c <__assert_fail@plt+0xb1b4>
   1c274:	b	1c278 <__assert_fail@plt+0xb190>
   1c278:	ldr	r0, [fp, #-8]
   1c27c:	ldr	r0, [r0]
   1c280:	ldr	r1, [fp, #-12]
   1c284:	mul	r0, r0, r1
   1c288:	uxtb	r0, r0
   1c28c:	mov	r1, #0
   1c290:	str	r1, [fp, #-20]	; 0xffffffec
   1c294:	str	r0, [fp, #-24]	; 0xffffffe8
   1c298:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1c29c:	ldr	r0, [fp, #-8]
   1c2a0:	ldr	r0, [r0]
   1c2a4:	ldr	r1, [fp, #-12]
   1c2a8:	mul	r0, r0, r1
   1c2ac:	uxtb	r0, r0
   1c2b0:	mov	r1, #0
   1c2b4:	str	r1, [fp, #-20]	; 0xffffffec
   1c2b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c2bc:	b	1d718 <__assert_fail@plt+0xc630>
   1c2c0:	b	1c7b4 <__assert_fail@plt+0xb6cc>
   1c2c4:	b	1c2c8 <__assert_fail@plt+0xb1e0>
   1c2c8:	ldr	r0, [fp, #-12]
   1c2cc:	cmp	r0, #0
   1c2d0:	bge	1c438 <__assert_fail@plt+0xb350>
   1c2d4:	ldr	r0, [fp, #-8]
   1c2d8:	ldr	r0, [r0, #4]
   1c2dc:	cmn	r0, #1
   1c2e0:	bgt	1c388 <__assert_fail@plt+0xb2a0>
   1c2e4:	b	1c2e8 <__assert_fail@plt+0xb200>
   1c2e8:	b	1c2ec <__assert_fail@plt+0xb204>
   1c2ec:	ldr	r0, [fp, #-8]
   1c2f0:	ldr	r1, [r0]
   1c2f4:	ldr	r0, [r0, #4]
   1c2f8:	ldr	r2, [fp, #-12]
   1c2fc:	movw	r3, #32767	; 0x7fff
   1c300:	sdiv	r2, r3, r2
   1c304:	subs	r1, r1, r2
   1c308:	sbcs	r0, r0, r2, asr #31
   1c30c:	blt	1c514 <__assert_fail@plt+0xb42c>
   1c310:	b	1c538 <__assert_fail@plt+0xb450>
   1c314:	b	1c318 <__assert_fail@plt+0xb230>
   1c318:	ldr	r0, [pc, #2836]	; 1ce34 <__assert_fail@plt+0xbd4c>
   1c31c:	ldr	r1, [fp, #-12]
   1c320:	cmp	r1, r0
   1c324:	blt	1c33c <__assert_fail@plt+0xb254>
   1c328:	b	1c348 <__assert_fail@plt+0xb260>
   1c32c:	ldr	r0, [fp, #-12]
   1c330:	movw	r1, #0
   1c334:	cmp	r1, r0
   1c338:	bge	1c348 <__assert_fail@plt+0xb260>
   1c33c:	movw	r0, #0
   1c340:	str	r0, [fp, #-36]	; 0xffffffdc
   1c344:	b	1c360 <__assert_fail@plt+0xb278>
   1c348:	ldr	r0, [fp, #-12]
   1c34c:	movw	r1, #0
   1c350:	sub	r0, r1, r0
   1c354:	movw	r1, #32767	; 0x7fff
   1c358:	sdiv	r0, r1, r0
   1c35c:	str	r0, [fp, #-36]	; 0xffffffdc
   1c360:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c364:	ldr	r1, [fp, #-8]
   1c368:	ldr	r2, [r1]
   1c36c:	ldr	r1, [r1, #4]
   1c370:	mvn	r1, r1
   1c374:	mvn	r2, r2
   1c378:	subs	r2, r2, r0
   1c37c:	sbcs	r0, r1, r0, asr #31
   1c380:	bge	1c514 <__assert_fail@plt+0xb42c>
   1c384:	b	1c538 <__assert_fail@plt+0xb450>
   1c388:	b	1c38c <__assert_fail@plt+0xb2a4>
   1c38c:	b	1c40c <__assert_fail@plt+0xb324>
   1c390:	b	1c40c <__assert_fail@plt+0xb324>
   1c394:	ldr	r0, [fp, #-12]
   1c398:	cmn	r0, #1
   1c39c:	bne	1c40c <__assert_fail@plt+0xb324>
   1c3a0:	b	1c3a4 <__assert_fail@plt+0xb2bc>
   1c3a4:	ldr	r0, [fp, #-8]
   1c3a8:	ldr	r1, [r0]
   1c3ac:	ldr	r0, [r0, #4]
   1c3b0:	subs	r1, r1, #32768	; 0x8000
   1c3b4:	sbc	r0, r0, #0
   1c3b8:	rsbs	r1, r1, #0
   1c3bc:	rscs	r0, r0, #0
   1c3c0:	blt	1c514 <__assert_fail@plt+0xb42c>
   1c3c4:	b	1c538 <__assert_fail@plt+0xb450>
   1c3c8:	ldr	r0, [fp, #-8]
   1c3cc:	ldr	r1, [r0]
   1c3d0:	ldr	r0, [r0, #4]
   1c3d4:	subs	r1, r1, #1
   1c3d8:	sbcs	r0, r0, #0
   1c3dc:	blt	1c538 <__assert_fail@plt+0xb450>
   1c3e0:	b	1c3e4 <__assert_fail@plt+0xb2fc>
   1c3e4:	ldr	r0, [fp, #-8]
   1c3e8:	ldr	r1, [r0]
   1c3ec:	ldr	r0, [r0, #4]
   1c3f0:	subs	r1, r1, #1
   1c3f4:	sbc	r0, r0, #0
   1c3f8:	movw	r2, #32767	; 0x7fff
   1c3fc:	subs	r1, r2, r1
   1c400:	rscs	r0, r0, #0
   1c404:	blt	1c514 <__assert_fail@plt+0xb42c>
   1c408:	b	1c538 <__assert_fail@plt+0xb450>
   1c40c:	ldr	r0, [fp, #-12]
   1c410:	movw	r1, #32768	; 0x8000
   1c414:	movt	r1, #65535	; 0xffff
   1c418:	sdiv	r0, r1, r0
   1c41c:	ldr	r1, [fp, #-8]
   1c420:	ldr	r2, [r1]
   1c424:	ldr	r1, [r1, #4]
   1c428:	subs	r2, r0, r2
   1c42c:	rscs	r0, r1, r0, asr #31
   1c430:	blt	1c514 <__assert_fail@plt+0xb42c>
   1c434:	b	1c538 <__assert_fail@plt+0xb450>
   1c438:	ldr	r0, [fp, #-12]
   1c43c:	cmp	r0, #0
   1c440:	bne	1c448 <__assert_fail@plt+0xb360>
   1c444:	b	1c538 <__assert_fail@plt+0xb450>
   1c448:	ldr	r0, [fp, #-8]
   1c44c:	ldr	r0, [r0, #4]
   1c450:	cmn	r0, #1
   1c454:	bgt	1c4ec <__assert_fail@plt+0xb404>
   1c458:	b	1c45c <__assert_fail@plt+0xb374>
   1c45c:	b	1c460 <__assert_fail@plt+0xb378>
   1c460:	b	1c4bc <__assert_fail@plt+0xb3d4>
   1c464:	b	1c4bc <__assert_fail@plt+0xb3d4>
   1c468:	ldr	r0, [fp, #-8]
   1c46c:	ldr	r1, [r0]
   1c470:	ldr	r0, [r0, #4]
   1c474:	and	r0, r1, r0
   1c478:	cmn	r0, #1
   1c47c:	bne	1c4bc <__assert_fail@plt+0xb3d4>
   1c480:	b	1c484 <__assert_fail@plt+0xb39c>
   1c484:	b	1c488 <__assert_fail@plt+0xb3a0>
   1c488:	ldr	r0, [pc, #4032]	; 1d450 <__assert_fail@plt+0xc368>
   1c48c:	ldr	r1, [fp, #-12]
   1c490:	add	r0, r1, r0
   1c494:	movw	r1, #0
   1c498:	cmp	r1, r0
   1c49c:	blt	1c514 <__assert_fail@plt+0xb42c>
   1c4a0:	b	1c538 <__assert_fail@plt+0xb450>
   1c4a4:	ldr	r0, [fp, #-12]
   1c4a8:	sub	r0, r0, #1
   1c4ac:	movw	r1, #32767	; 0x7fff
   1c4b0:	cmp	r1, r0
   1c4b4:	blt	1c514 <__assert_fail@plt+0xb42c>
   1c4b8:	b	1c538 <__assert_fail@plt+0xb450>
   1c4bc:	ldr	r0, [fp, #-8]
   1c4c0:	ldr	r2, [r0]
   1c4c4:	ldr	r3, [r0, #4]
   1c4c8:	movw	r0, #32768	; 0x8000
   1c4cc:	movt	r0, #65535	; 0xffff
   1c4d0:	mvn	r1, #0
   1c4d4:	bl	1e464 <__assert_fail@plt+0xd37c>
   1c4d8:	ldr	r2, [fp, #-12]
   1c4dc:	subs	r0, r0, r2
   1c4e0:	sbcs	r1, r1, r2, asr #31
   1c4e4:	blt	1c514 <__assert_fail@plt+0xb42c>
   1c4e8:	b	1c538 <__assert_fail@plt+0xb450>
   1c4ec:	ldr	r0, [fp, #-12]
   1c4f0:	movw	r1, #32767	; 0x7fff
   1c4f4:	sdiv	r0, r1, r0
   1c4f8:	ldr	r1, [fp, #-8]
   1c4fc:	ldr	r2, [r1]
   1c500:	ldr	r1, [r1, #4]
   1c504:	subs	r2, r0, r2
   1c508:	rscs	r0, r1, r0, asr #31
   1c50c:	bge	1c538 <__assert_fail@plt+0xb450>
   1c510:	b	1c514 <__assert_fail@plt+0xb42c>
   1c514:	ldr	r0, [fp, #-8]
   1c518:	ldr	r0, [r0]
   1c51c:	ldr	r1, [fp, #-12]
   1c520:	mul	r0, r0, r1
   1c524:	sxth	r0, r0
   1c528:	asr	r1, r0, #31
   1c52c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c530:	str	r1, [fp, #-20]	; 0xffffffec
   1c534:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1c538:	ldr	r0, [fp, #-8]
   1c53c:	ldr	r0, [r0]
   1c540:	ldr	r1, [fp, #-12]
   1c544:	mul	r0, r0, r1
   1c548:	sxth	r0, r0
   1c54c:	asr	r1, r0, #31
   1c550:	str	r0, [fp, #-24]	; 0xffffffe8
   1c554:	str	r1, [fp, #-20]	; 0xffffffec
   1c558:	b	1d718 <__assert_fail@plt+0xc630>
   1c55c:	ldr	r0, [fp, #-12]
   1c560:	cmp	r0, #0
   1c564:	bge	1c6ac <__assert_fail@plt+0xb5c4>
   1c568:	ldr	r0, [fp, #-8]
   1c56c:	ldr	r0, [r0, #4]
   1c570:	cmn	r0, #1
   1c574:	bgt	1c61c <__assert_fail@plt+0xb534>
   1c578:	b	1c57c <__assert_fail@plt+0xb494>
   1c57c:	b	1c580 <__assert_fail@plt+0xb498>
   1c580:	ldr	r0, [fp, #-8]
   1c584:	ldr	r1, [r0]
   1c588:	ldr	r0, [r0, #4]
   1c58c:	ldr	r2, [fp, #-12]
   1c590:	movw	r3, #65535	; 0xffff
   1c594:	sdiv	r2, r3, r2
   1c598:	subs	r1, r1, r2
   1c59c:	sbcs	r0, r0, r2, asr #31
   1c5a0:	blt	1c76c <__assert_fail@plt+0xb684>
   1c5a4:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c5a8:	b	1c5ac <__assert_fail@plt+0xb4c4>
   1c5ac:	ldr	r0, [pc, #2176]	; 1ce34 <__assert_fail@plt+0xbd4c>
   1c5b0:	ldr	r1, [fp, #-12]
   1c5b4:	cmp	r1, r0
   1c5b8:	blt	1c5d0 <__assert_fail@plt+0xb4e8>
   1c5bc:	b	1c5dc <__assert_fail@plt+0xb4f4>
   1c5c0:	ldr	r0, [fp, #-12]
   1c5c4:	movw	r1, #0
   1c5c8:	cmp	r1, r0
   1c5cc:	bge	1c5dc <__assert_fail@plt+0xb4f4>
   1c5d0:	movw	r0, #0
   1c5d4:	str	r0, [fp, #-40]	; 0xffffffd8
   1c5d8:	b	1c5f4 <__assert_fail@plt+0xb50c>
   1c5dc:	ldr	r0, [fp, #-12]
   1c5e0:	movw	r1, #0
   1c5e4:	sub	r0, r1, r0
   1c5e8:	movw	r1, #65535	; 0xffff
   1c5ec:	sdiv	r0, r1, r0
   1c5f0:	str	r0, [fp, #-40]	; 0xffffffd8
   1c5f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c5f8:	ldr	r1, [fp, #-8]
   1c5fc:	ldr	r2, [r1]
   1c600:	ldr	r1, [r1, #4]
   1c604:	mvn	r1, r1
   1c608:	mvn	r2, r2
   1c60c:	subs	r2, r2, r0
   1c610:	sbcs	r0, r1, r0, asr #31
   1c614:	bge	1c76c <__assert_fail@plt+0xb684>
   1c618:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c61c:	b	1c620 <__assert_fail@plt+0xb538>
   1c620:	b	1c690 <__assert_fail@plt+0xb5a8>
   1c624:	b	1c690 <__assert_fail@plt+0xb5a8>
   1c628:	ldr	r0, [fp, #-12]
   1c62c:	cmn	r0, #1
   1c630:	bne	1c690 <__assert_fail@plt+0xb5a8>
   1c634:	b	1c638 <__assert_fail@plt+0xb550>
   1c638:	ldr	r0, [fp, #-8]
   1c63c:	ldr	r1, [r0]
   1c640:	ldr	r0, [r0, #4]
   1c644:	rsbs	r1, r1, #0
   1c648:	rscs	r0, r0, #0
   1c64c:	blt	1c76c <__assert_fail@plt+0xb684>
   1c650:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c654:	ldr	r0, [fp, #-8]
   1c658:	ldr	r1, [r0]
   1c65c:	ldr	r0, [r0, #4]
   1c660:	subs	r1, r1, #1
   1c664:	sbcs	r0, r0, #0
   1c668:	blt	1c790 <__assert_fail@plt+0xb6a8>
   1c66c:	b	1c670 <__assert_fail@plt+0xb588>
   1c670:	ldr	r0, [fp, #-8]
   1c674:	ldr	r1, [r0]
   1c678:	ldr	r0, [r0, #4]
   1c67c:	subs	r1, r1, #1
   1c680:	sbc	r0, r0, #0
   1c684:	cmn	r0, #1
   1c688:	bgt	1c76c <__assert_fail@plt+0xb684>
   1c68c:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c690:	ldr	r0, [fp, #-8]
   1c694:	ldr	r1, [r0]
   1c698:	ldr	r0, [r0, #4]
   1c69c:	rsbs	r1, r1, #0
   1c6a0:	rscs	r0, r0, #0
   1c6a4:	blt	1c76c <__assert_fail@plt+0xb684>
   1c6a8:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c6ac:	ldr	r0, [fp, #-12]
   1c6b0:	cmp	r0, #0
   1c6b4:	bne	1c6bc <__assert_fail@plt+0xb5d4>
   1c6b8:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c6bc:	ldr	r0, [fp, #-8]
   1c6c0:	ldr	r0, [r0, #4]
   1c6c4:	cmn	r0, #1
   1c6c8:	bgt	1c744 <__assert_fail@plt+0xb65c>
   1c6cc:	b	1c6d0 <__assert_fail@plt+0xb5e8>
   1c6d0:	b	1c6d4 <__assert_fail@plt+0xb5ec>
   1c6d4:	b	1c72c <__assert_fail@plt+0xb644>
   1c6d8:	b	1c72c <__assert_fail@plt+0xb644>
   1c6dc:	ldr	r0, [fp, #-8]
   1c6e0:	ldr	r1, [r0]
   1c6e4:	ldr	r0, [r0, #4]
   1c6e8:	and	r0, r1, r0
   1c6ec:	cmn	r0, #1
   1c6f0:	bne	1c72c <__assert_fail@plt+0xb644>
   1c6f4:	b	1c6f8 <__assert_fail@plt+0xb610>
   1c6f8:	b	1c6fc <__assert_fail@plt+0xb614>
   1c6fc:	ldr	r0, [fp, #-12]
   1c700:	add	r0, r0, #0
   1c704:	movw	r1, #0
   1c708:	cmp	r1, r0
   1c70c:	blt	1c76c <__assert_fail@plt+0xb684>
   1c710:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c714:	ldr	r0, [fp, #-12]
   1c718:	sub	r0, r0, #1
   1c71c:	mvn	r1, #0
   1c720:	cmp	r1, r0
   1c724:	blt	1c76c <__assert_fail@plt+0xb684>
   1c728:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c72c:	ldr	r0, [fp, #-12]
   1c730:	rsbs	r1, r0, #0
   1c734:	mov	r2, #0
   1c738:	sbcs	r0, r2, r0, asr #31
   1c73c:	blt	1c76c <__assert_fail@plt+0xb684>
   1c740:	b	1c790 <__assert_fail@plt+0xb6a8>
   1c744:	ldr	r0, [fp, #-12]
   1c748:	movw	r1, #65535	; 0xffff
   1c74c:	sdiv	r0, r1, r0
   1c750:	ldr	r1, [fp, #-8]
   1c754:	ldr	r2, [r1]
   1c758:	ldr	r1, [r1, #4]
   1c75c:	subs	r2, r0, r2
   1c760:	rscs	r0, r1, r0, asr #31
   1c764:	bge	1c790 <__assert_fail@plt+0xb6a8>
   1c768:	b	1c76c <__assert_fail@plt+0xb684>
   1c76c:	ldr	r0, [fp, #-8]
   1c770:	ldr	r0, [r0]
   1c774:	ldr	r1, [fp, #-12]
   1c778:	mul	r0, r0, r1
   1c77c:	uxth	r0, r0
   1c780:	mov	r1, #0
   1c784:	str	r1, [fp, #-20]	; 0xffffffec
   1c788:	str	r0, [fp, #-24]	; 0xffffffe8
   1c78c:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1c790:	ldr	r0, [fp, #-8]
   1c794:	ldr	r0, [r0]
   1c798:	ldr	r1, [fp, #-12]
   1c79c:	mul	r0, r0, r1
   1c7a0:	uxth	r0, r0
   1c7a4:	mov	r1, #0
   1c7a8:	str	r1, [fp, #-20]	; 0xffffffec
   1c7ac:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7b0:	b	1d718 <__assert_fail@plt+0xc630>
   1c7b4:	b	1cc80 <__assert_fail@plt+0xbb98>
   1c7b8:	b	1c7bc <__assert_fail@plt+0xb6d4>
   1c7bc:	ldr	r0, [fp, #-12]
   1c7c0:	cmp	r0, #0
   1c7c4:	bge	1c91c <__assert_fail@plt+0xb834>
   1c7c8:	ldr	r0, [fp, #-8]
   1c7cc:	ldr	r0, [r0, #4]
   1c7d0:	cmn	r0, #1
   1c7d4:	bgt	1c87c <__assert_fail@plt+0xb794>
   1c7d8:	b	1c7dc <__assert_fail@plt+0xb6f4>
   1c7dc:	b	1c7e0 <__assert_fail@plt+0xb6f8>
   1c7e0:	ldr	r0, [fp, #-8]
   1c7e4:	ldr	r1, [r0]
   1c7e8:	ldr	r0, [r0, #4]
   1c7ec:	ldr	r2, [fp, #-12]
   1c7f0:	mvn	r3, #-2147483648	; 0x80000000
   1c7f4:	sdiv	r2, r3, r2
   1c7f8:	subs	r1, r1, r2
   1c7fc:	sbcs	r0, r0, r2, asr #31
   1c800:	blt	1c9f0 <__assert_fail@plt+0xb908>
   1c804:	b	1ca10 <__assert_fail@plt+0xb928>
   1c808:	b	1c80c <__assert_fail@plt+0xb724>
   1c80c:	ldr	r0, [pc, #3884]	; 1d740 <__assert_fail@plt+0xc658>
   1c810:	ldr	r1, [fp, #-12]
   1c814:	cmp	r1, r0
   1c818:	blt	1c830 <__assert_fail@plt+0xb748>
   1c81c:	b	1c83c <__assert_fail@plt+0xb754>
   1c820:	ldr	r0, [fp, #-12]
   1c824:	movw	r1, #0
   1c828:	cmp	r1, r0
   1c82c:	bge	1c83c <__assert_fail@plt+0xb754>
   1c830:	movw	r0, #0
   1c834:	str	r0, [fp, #-44]	; 0xffffffd4
   1c838:	b	1c854 <__assert_fail@plt+0xb76c>
   1c83c:	ldr	r0, [pc, #3840]	; 1d744 <__assert_fail@plt+0xc65c>
   1c840:	ldr	r1, [fp, #-12]
   1c844:	movw	r2, #0
   1c848:	sub	r1, r2, r1
   1c84c:	sdiv	r0, r0, r1
   1c850:	str	r0, [fp, #-44]	; 0xffffffd4
   1c854:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c858:	ldr	r1, [fp, #-8]
   1c85c:	ldr	r2, [r1]
   1c860:	ldr	r1, [r1, #4]
   1c864:	mvn	r1, r1
   1c868:	mvn	r2, r2
   1c86c:	subs	r2, r2, r0
   1c870:	sbcs	r0, r1, r0, asr #31
   1c874:	bge	1c9f0 <__assert_fail@plt+0xb908>
   1c878:	b	1ca10 <__assert_fail@plt+0xb928>
   1c87c:	ldr	r0, [fp, #-12]
   1c880:	cmn	r0, #1
   1c884:	bne	1c8f4 <__assert_fail@plt+0xb80c>
   1c888:	b	1c88c <__assert_fail@plt+0xb7a4>
   1c88c:	ldr	r0, [fp, #-8]
   1c890:	ldr	r1, [r0]
   1c894:	ldr	r0, [r0, #4]
   1c898:	adds	r1, r1, #-2147483648	; 0x80000000
   1c89c:	sbc	r0, r0, #0
   1c8a0:	rsbs	r1, r1, #0
   1c8a4:	rscs	r0, r0, #0
   1c8a8:	blt	1c9f0 <__assert_fail@plt+0xb908>
   1c8ac:	b	1ca10 <__assert_fail@plt+0xb928>
   1c8b0:	ldr	r0, [fp, #-8]
   1c8b4:	ldr	r1, [r0]
   1c8b8:	ldr	r0, [r0, #4]
   1c8bc:	subs	r1, r1, #1
   1c8c0:	sbcs	r0, r0, #0
   1c8c4:	blt	1ca10 <__assert_fail@plt+0xb928>
   1c8c8:	b	1c8cc <__assert_fail@plt+0xb7e4>
   1c8cc:	ldr	r0, [fp, #-8]
   1c8d0:	ldr	r1, [r0]
   1c8d4:	ldr	r0, [r0, #4]
   1c8d8:	subs	r1, r1, #1
   1c8dc:	sbc	r0, r0, #0
   1c8e0:	mvn	r2, #-2147483648	; 0x80000000
   1c8e4:	subs	r1, r2, r1
   1c8e8:	rscs	r0, r0, #0
   1c8ec:	blt	1c9f0 <__assert_fail@plt+0xb908>
   1c8f0:	b	1ca10 <__assert_fail@plt+0xb928>
   1c8f4:	ldr	r0, [fp, #-12]
   1c8f8:	mov	r1, #-2147483648	; 0x80000000
   1c8fc:	sdiv	r0, r1, r0
   1c900:	ldr	r1, [fp, #-8]
   1c904:	ldr	r2, [r1]
   1c908:	ldr	r1, [r1, #4]
   1c90c:	subs	r2, r0, r2
   1c910:	rscs	r0, r1, r0, asr #31
   1c914:	blt	1c9f0 <__assert_fail@plt+0xb908>
   1c918:	b	1ca10 <__assert_fail@plt+0xb928>
   1c91c:	ldr	r0, [fp, #-12]
   1c920:	cmp	r0, #0
   1c924:	bne	1c92c <__assert_fail@plt+0xb844>
   1c928:	b	1ca10 <__assert_fail@plt+0xb928>
   1c92c:	ldr	r0, [fp, #-8]
   1c930:	ldr	r0, [r0, #4]
   1c934:	cmn	r0, #1
   1c938:	bgt	1c9c8 <__assert_fail@plt+0xb8e0>
   1c93c:	b	1c940 <__assert_fail@plt+0xb858>
   1c940:	b	1c944 <__assert_fail@plt+0xb85c>
   1c944:	b	1c99c <__assert_fail@plt+0xb8b4>
   1c948:	b	1c99c <__assert_fail@plt+0xb8b4>
   1c94c:	ldr	r0, [fp, #-8]
   1c950:	ldr	r1, [r0]
   1c954:	ldr	r0, [r0, #4]
   1c958:	and	r0, r1, r0
   1c95c:	cmn	r0, #1
   1c960:	bne	1c99c <__assert_fail@plt+0xb8b4>
   1c964:	b	1c968 <__assert_fail@plt+0xb880>
   1c968:	b	1c96c <__assert_fail@plt+0xb884>
   1c96c:	ldr	r0, [fp, #-12]
   1c970:	add	r0, r0, #-2147483648	; 0x80000000
   1c974:	movw	r1, #0
   1c978:	cmp	r1, r0
   1c97c:	blt	1c9f0 <__assert_fail@plt+0xb908>
   1c980:	b	1ca10 <__assert_fail@plt+0xb928>
   1c984:	ldr	r0, [pc, #3512]	; 1d744 <__assert_fail@plt+0xc65c>
   1c988:	ldr	r1, [fp, #-12]
   1c98c:	sub	r1, r1, #1
   1c990:	cmp	r0, r1
   1c994:	blt	1c9f0 <__assert_fail@plt+0xb908>
   1c998:	b	1ca10 <__assert_fail@plt+0xb928>
   1c99c:	ldr	r0, [fp, #-8]
   1c9a0:	ldr	r2, [r0]
   1c9a4:	ldr	r3, [r0, #4]
   1c9a8:	mov	r0, #-2147483648	; 0x80000000
   1c9ac:	mvn	r1, #0
   1c9b0:	bl	1e464 <__assert_fail@plt+0xd37c>
   1c9b4:	ldr	r2, [fp, #-12]
   1c9b8:	subs	r0, r0, r2
   1c9bc:	sbcs	r1, r1, r2, asr #31
   1c9c0:	blt	1c9f0 <__assert_fail@plt+0xb908>
   1c9c4:	b	1ca10 <__assert_fail@plt+0xb928>
   1c9c8:	ldr	r0, [fp, #-12]
   1c9cc:	mvn	r1, #-2147483648	; 0x80000000
   1c9d0:	sdiv	r0, r1, r0
   1c9d4:	ldr	r1, [fp, #-8]
   1c9d8:	ldr	r2, [r1]
   1c9dc:	ldr	r1, [r1, #4]
   1c9e0:	subs	r2, r0, r2
   1c9e4:	rscs	r0, r1, r0, asr #31
   1c9e8:	bge	1ca10 <__assert_fail@plt+0xb928>
   1c9ec:	b	1c9f0 <__assert_fail@plt+0xb908>
   1c9f0:	ldr	r0, [fp, #-8]
   1c9f4:	ldr	r0, [r0]
   1c9f8:	ldr	r1, [fp, #-12]
   1c9fc:	mul	r0, r0, r1
   1ca00:	asr	r1, r0, #31
   1ca04:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca08:	str	r1, [fp, #-20]	; 0xffffffec
   1ca0c:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1ca10:	ldr	r0, [fp, #-8]
   1ca14:	ldr	r0, [r0]
   1ca18:	ldr	r1, [fp, #-12]
   1ca1c:	mul	r0, r0, r1
   1ca20:	asr	r1, r0, #31
   1ca24:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca28:	str	r1, [fp, #-20]	; 0xffffffec
   1ca2c:	b	1d718 <__assert_fail@plt+0xc630>
   1ca30:	ldr	r0, [fp, #-12]
   1ca34:	cmp	r0, #0
   1ca38:	bge	1cb80 <__assert_fail@plt+0xba98>
   1ca3c:	ldr	r0, [fp, #-8]
   1ca40:	ldr	r0, [r0, #4]
   1ca44:	cmn	r0, #1
   1ca48:	bgt	1caf0 <__assert_fail@plt+0xba08>
   1ca4c:	b	1ca50 <__assert_fail@plt+0xb968>
   1ca50:	b	1ca7c <__assert_fail@plt+0xb994>
   1ca54:	ldr	r0, [fp, #-8]
   1ca58:	ldr	r1, [r0]
   1ca5c:	ldr	r0, [r0, #4]
   1ca60:	ldr	r2, [fp, #-12]
   1ca64:	mvn	r3, #0
   1ca68:	udiv	r2, r3, r2
   1ca6c:	subs	r1, r1, r2
   1ca70:	sbcs	r0, r0, #0
   1ca74:	blt	1cc40 <__assert_fail@plt+0xbb58>
   1ca78:	b	1cc60 <__assert_fail@plt+0xbb78>
   1ca7c:	b	1ca80 <__assert_fail@plt+0xb998>
   1ca80:	ldr	r0, [pc, #3256]	; 1d740 <__assert_fail@plt+0xc658>
   1ca84:	ldr	r1, [fp, #-12]
   1ca88:	cmp	r1, r0
   1ca8c:	blt	1caa4 <__assert_fail@plt+0xb9bc>
   1ca90:	b	1cab0 <__assert_fail@plt+0xb9c8>
   1ca94:	ldr	r0, [fp, #-12]
   1ca98:	movw	r1, #0
   1ca9c:	cmp	r1, r0
   1caa0:	bge	1cab0 <__assert_fail@plt+0xb9c8>
   1caa4:	movw	r0, #1
   1caa8:	str	r0, [fp, #-48]	; 0xffffffd0
   1caac:	b	1cac8 <__assert_fail@plt+0xb9e0>
   1cab0:	ldr	r0, [fp, #-12]
   1cab4:	movw	r1, #0
   1cab8:	sub	r0, r1, r0
   1cabc:	mvn	r1, #0
   1cac0:	udiv	r0, r1, r0
   1cac4:	str	r0, [fp, #-48]	; 0xffffffd0
   1cac8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cacc:	ldr	r1, [fp, #-8]
   1cad0:	ldr	r2, [r1]
   1cad4:	ldr	r1, [r1, #4]
   1cad8:	mvn	r1, r1
   1cadc:	mvn	r2, r2
   1cae0:	subs	r0, r2, r0
   1cae4:	sbcs	r1, r1, #0
   1cae8:	bge	1cc40 <__assert_fail@plt+0xbb58>
   1caec:	b	1cc60 <__assert_fail@plt+0xbb78>
   1caf0:	b	1caf4 <__assert_fail@plt+0xba0c>
   1caf4:	b	1cb64 <__assert_fail@plt+0xba7c>
   1caf8:	b	1cb64 <__assert_fail@plt+0xba7c>
   1cafc:	ldr	r0, [fp, #-12]
   1cb00:	cmn	r0, #1
   1cb04:	bne	1cb64 <__assert_fail@plt+0xba7c>
   1cb08:	b	1cb0c <__assert_fail@plt+0xba24>
   1cb0c:	ldr	r0, [fp, #-8]
   1cb10:	ldr	r1, [r0]
   1cb14:	ldr	r0, [r0, #4]
   1cb18:	rsbs	r1, r1, #0
   1cb1c:	rscs	r0, r0, #0
   1cb20:	blt	1cc40 <__assert_fail@plt+0xbb58>
   1cb24:	b	1cc60 <__assert_fail@plt+0xbb78>
   1cb28:	ldr	r0, [fp, #-8]
   1cb2c:	ldr	r1, [r0]
   1cb30:	ldr	r0, [r0, #4]
   1cb34:	subs	r1, r1, #1
   1cb38:	sbcs	r0, r0, #0
   1cb3c:	blt	1cc60 <__assert_fail@plt+0xbb78>
   1cb40:	b	1cb44 <__assert_fail@plt+0xba5c>
   1cb44:	ldr	r0, [fp, #-8]
   1cb48:	ldr	r1, [r0]
   1cb4c:	ldr	r0, [r0, #4]
   1cb50:	subs	r1, r1, #1
   1cb54:	sbc	r0, r0, #0
   1cb58:	cmn	r0, #1
   1cb5c:	bgt	1cc40 <__assert_fail@plt+0xbb58>
   1cb60:	b	1cc60 <__assert_fail@plt+0xbb78>
   1cb64:	ldr	r0, [fp, #-8]
   1cb68:	ldr	r1, [r0]
   1cb6c:	ldr	r0, [r0, #4]
   1cb70:	rsbs	r1, r1, #0
   1cb74:	rscs	r0, r0, #0
   1cb78:	blt	1cc40 <__assert_fail@plt+0xbb58>
   1cb7c:	b	1cc60 <__assert_fail@plt+0xbb78>
   1cb80:	ldr	r0, [fp, #-12]
   1cb84:	cmp	r0, #0
   1cb88:	bne	1cb90 <__assert_fail@plt+0xbaa8>
   1cb8c:	b	1cc60 <__assert_fail@plt+0xbb78>
   1cb90:	ldr	r0, [fp, #-8]
   1cb94:	ldr	r0, [r0, #4]
   1cb98:	cmn	r0, #1
   1cb9c:	bgt	1cc18 <__assert_fail@plt+0xbb30>
   1cba0:	b	1cba4 <__assert_fail@plt+0xbabc>
   1cba4:	b	1cba8 <__assert_fail@plt+0xbac0>
   1cba8:	b	1cc00 <__assert_fail@plt+0xbb18>
   1cbac:	b	1cc00 <__assert_fail@plt+0xbb18>
   1cbb0:	ldr	r0, [fp, #-8]
   1cbb4:	ldr	r1, [r0]
   1cbb8:	ldr	r0, [r0, #4]
   1cbbc:	and	r0, r1, r0
   1cbc0:	cmn	r0, #1
   1cbc4:	bne	1cc00 <__assert_fail@plt+0xbb18>
   1cbc8:	b	1cbcc <__assert_fail@plt+0xbae4>
   1cbcc:	b	1cbd0 <__assert_fail@plt+0xbae8>
   1cbd0:	ldr	r0, [fp, #-12]
   1cbd4:	add	r0, r0, #0
   1cbd8:	movw	r1, #0
   1cbdc:	cmp	r1, r0
   1cbe0:	blt	1cc40 <__assert_fail@plt+0xbb58>
   1cbe4:	b	1cc60 <__assert_fail@plt+0xbb78>
   1cbe8:	ldr	r0, [fp, #-12]
   1cbec:	sub	r0, r0, #1
   1cbf0:	mvn	r1, #0
   1cbf4:	cmp	r1, r0
   1cbf8:	blt	1cc40 <__assert_fail@plt+0xbb58>
   1cbfc:	b	1cc60 <__assert_fail@plt+0xbb78>
   1cc00:	ldr	r0, [fp, #-12]
   1cc04:	rsbs	r1, r0, #0
   1cc08:	mov	r2, #0
   1cc0c:	sbcs	r0, r2, r0, asr #31
   1cc10:	blt	1cc40 <__assert_fail@plt+0xbb58>
   1cc14:	b	1cc60 <__assert_fail@plt+0xbb78>
   1cc18:	ldr	r0, [fp, #-12]
   1cc1c:	mvn	r1, #0
   1cc20:	udiv	r0, r1, r0
   1cc24:	ldr	r1, [fp, #-8]
   1cc28:	ldr	r2, [r1]
   1cc2c:	ldr	r1, [r1, #4]
   1cc30:	subs	r0, r0, r2
   1cc34:	rscs	r1, r1, #0
   1cc38:	bge	1cc60 <__assert_fail@plt+0xbb78>
   1cc3c:	b	1cc40 <__assert_fail@plt+0xbb58>
   1cc40:	ldr	r0, [fp, #-8]
   1cc44:	ldr	r0, [r0]
   1cc48:	ldr	r1, [fp, #-12]
   1cc4c:	mul	r0, r0, r1
   1cc50:	mov	r1, #0
   1cc54:	str	r1, [fp, #-20]	; 0xffffffec
   1cc58:	str	r0, [fp, #-24]	; 0xffffffe8
   1cc5c:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1cc60:	ldr	r0, [fp, #-8]
   1cc64:	ldr	r0, [r0]
   1cc68:	ldr	r1, [fp, #-12]
   1cc6c:	mul	r0, r0, r1
   1cc70:	mov	r1, #0
   1cc74:	str	r1, [fp, #-20]	; 0xffffffec
   1cc78:	str	r0, [fp, #-24]	; 0xffffffe8
   1cc7c:	b	1d718 <__assert_fail@plt+0xc630>
   1cc80:	b	1d150 <__assert_fail@plt+0xc068>
   1cc84:	b	1cc88 <__assert_fail@plt+0xbba0>
   1cc88:	ldr	r0, [fp, #-12]
   1cc8c:	cmp	r0, #0
   1cc90:	bge	1cde8 <__assert_fail@plt+0xbd00>
   1cc94:	ldr	r0, [fp, #-8]
   1cc98:	ldr	r0, [r0, #4]
   1cc9c:	cmn	r0, #1
   1cca0:	bgt	1cd48 <__assert_fail@plt+0xbc60>
   1cca4:	b	1cca8 <__assert_fail@plt+0xbbc0>
   1cca8:	b	1ccac <__assert_fail@plt+0xbbc4>
   1ccac:	ldr	r0, [fp, #-8]
   1ccb0:	ldr	r1, [r0]
   1ccb4:	ldr	r0, [r0, #4]
   1ccb8:	ldr	r2, [fp, #-12]
   1ccbc:	mvn	r3, #-2147483648	; 0x80000000
   1ccc0:	sdiv	r2, r3, r2
   1ccc4:	subs	r1, r1, r2
   1ccc8:	sbcs	r0, r0, r2, asr #31
   1cccc:	blt	1cec0 <__assert_fail@plt+0xbdd8>
   1ccd0:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1ccd4:	b	1ccd8 <__assert_fail@plt+0xbbf0>
   1ccd8:	ldr	r0, [pc, #2656]	; 1d740 <__assert_fail@plt+0xc658>
   1ccdc:	ldr	r1, [fp, #-12]
   1cce0:	cmp	r1, r0
   1cce4:	blt	1ccfc <__assert_fail@plt+0xbc14>
   1cce8:	b	1cd08 <__assert_fail@plt+0xbc20>
   1ccec:	ldr	r0, [fp, #-12]
   1ccf0:	movw	r1, #0
   1ccf4:	cmp	r1, r0
   1ccf8:	bge	1cd08 <__assert_fail@plt+0xbc20>
   1ccfc:	movw	r0, #0
   1cd00:	str	r0, [fp, #-52]	; 0xffffffcc
   1cd04:	b	1cd20 <__assert_fail@plt+0xbc38>
   1cd08:	ldr	r0, [pc, #2612]	; 1d744 <__assert_fail@plt+0xc65c>
   1cd0c:	ldr	r1, [fp, #-12]
   1cd10:	movw	r2, #0
   1cd14:	sub	r1, r2, r1
   1cd18:	sdiv	r0, r0, r1
   1cd1c:	str	r0, [fp, #-52]	; 0xffffffcc
   1cd20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cd24:	ldr	r1, [fp, #-8]
   1cd28:	ldr	r2, [r1]
   1cd2c:	ldr	r1, [r1, #4]
   1cd30:	mvn	r1, r1
   1cd34:	mvn	r2, r2
   1cd38:	subs	r2, r2, r0
   1cd3c:	sbcs	r0, r1, r0, asr #31
   1cd40:	bge	1cec0 <__assert_fail@plt+0xbdd8>
   1cd44:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1cd48:	ldr	r0, [fp, #-12]
   1cd4c:	cmn	r0, #1
   1cd50:	bne	1cdc0 <__assert_fail@plt+0xbcd8>
   1cd54:	b	1cd58 <__assert_fail@plt+0xbc70>
   1cd58:	ldr	r0, [fp, #-8]
   1cd5c:	ldr	r1, [r0]
   1cd60:	ldr	r0, [r0, #4]
   1cd64:	adds	r1, r1, #-2147483648	; 0x80000000
   1cd68:	sbc	r0, r0, #0
   1cd6c:	rsbs	r1, r1, #0
   1cd70:	rscs	r0, r0, #0
   1cd74:	blt	1cec0 <__assert_fail@plt+0xbdd8>
   1cd78:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1cd7c:	ldr	r0, [fp, #-8]
   1cd80:	ldr	r1, [r0]
   1cd84:	ldr	r0, [r0, #4]
   1cd88:	subs	r1, r1, #1
   1cd8c:	sbcs	r0, r0, #0
   1cd90:	blt	1cee0 <__assert_fail@plt+0xbdf8>
   1cd94:	b	1cd98 <__assert_fail@plt+0xbcb0>
   1cd98:	ldr	r0, [fp, #-8]
   1cd9c:	ldr	r1, [r0]
   1cda0:	ldr	r0, [r0, #4]
   1cda4:	subs	r1, r1, #1
   1cda8:	sbc	r0, r0, #0
   1cdac:	mvn	r2, #-2147483648	; 0x80000000
   1cdb0:	subs	r1, r2, r1
   1cdb4:	rscs	r0, r0, #0
   1cdb8:	blt	1cec0 <__assert_fail@plt+0xbdd8>
   1cdbc:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1cdc0:	ldr	r0, [fp, #-12]
   1cdc4:	mov	r1, #-2147483648	; 0x80000000
   1cdc8:	sdiv	r0, r1, r0
   1cdcc:	ldr	r1, [fp, #-8]
   1cdd0:	ldr	r2, [r1]
   1cdd4:	ldr	r1, [r1, #4]
   1cdd8:	subs	r2, r0, r2
   1cddc:	rscs	r0, r1, r0, asr #31
   1cde0:	blt	1cec0 <__assert_fail@plt+0xbdd8>
   1cde4:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1cde8:	ldr	r0, [fp, #-12]
   1cdec:	cmp	r0, #0
   1cdf0:	bne	1cdf8 <__assert_fail@plt+0xbd10>
   1cdf4:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1cdf8:	ldr	r0, [fp, #-8]
   1cdfc:	ldr	r0, [r0, #4]
   1ce00:	cmn	r0, #1
   1ce04:	bgt	1ce98 <__assert_fail@plt+0xbdb0>
   1ce08:	b	1ce0c <__assert_fail@plt+0xbd24>
   1ce0c:	b	1ce10 <__assert_fail@plt+0xbd28>
   1ce10:	b	1ce6c <__assert_fail@plt+0xbd84>
   1ce14:	b	1ce6c <__assert_fail@plt+0xbd84>
   1ce18:	ldr	r0, [fp, #-8]
   1ce1c:	ldr	r1, [r0]
   1ce20:	ldr	r0, [r0, #4]
   1ce24:	and	r0, r1, r0
   1ce28:	cmn	r0, #1
   1ce2c:	bne	1ce6c <__assert_fail@plt+0xbd84>
   1ce30:	b	1ce38 <__assert_fail@plt+0xbd50>
   1ce34:	andhi	r0, r0, r1
   1ce38:	b	1ce3c <__assert_fail@plt+0xbd54>
   1ce3c:	ldr	r0, [fp, #-12]
   1ce40:	add	r0, r0, #-2147483648	; 0x80000000
   1ce44:	movw	r1, #0
   1ce48:	cmp	r1, r0
   1ce4c:	blt	1cec0 <__assert_fail@plt+0xbdd8>
   1ce50:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1ce54:	ldr	r0, [pc, #2280]	; 1d744 <__assert_fail@plt+0xc65c>
   1ce58:	ldr	r1, [fp, #-12]
   1ce5c:	sub	r1, r1, #1
   1ce60:	cmp	r0, r1
   1ce64:	blt	1cec0 <__assert_fail@plt+0xbdd8>
   1ce68:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1ce6c:	ldr	r0, [fp, #-8]
   1ce70:	ldr	r2, [r0]
   1ce74:	ldr	r3, [r0, #4]
   1ce78:	mov	r0, #-2147483648	; 0x80000000
   1ce7c:	mvn	r1, #0
   1ce80:	bl	1e464 <__assert_fail@plt+0xd37c>
   1ce84:	ldr	r2, [fp, #-12]
   1ce88:	subs	r0, r0, r2
   1ce8c:	sbcs	r1, r1, r2, asr #31
   1ce90:	blt	1cec0 <__assert_fail@plt+0xbdd8>
   1ce94:	b	1cee0 <__assert_fail@plt+0xbdf8>
   1ce98:	ldr	r0, [fp, #-12]
   1ce9c:	mvn	r1, #-2147483648	; 0x80000000
   1cea0:	sdiv	r0, r1, r0
   1cea4:	ldr	r1, [fp, #-8]
   1cea8:	ldr	r2, [r1]
   1ceac:	ldr	r1, [r1, #4]
   1ceb0:	subs	r2, r0, r2
   1ceb4:	rscs	r0, r1, r0, asr #31
   1ceb8:	bge	1cee0 <__assert_fail@plt+0xbdf8>
   1cebc:	b	1cec0 <__assert_fail@plt+0xbdd8>
   1cec0:	ldr	r0, [fp, #-8]
   1cec4:	ldr	r0, [r0]
   1cec8:	ldr	r1, [fp, #-12]
   1cecc:	mul	r0, r0, r1
   1ced0:	asr	r1, r0, #31
   1ced4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ced8:	str	r1, [fp, #-20]	; 0xffffffec
   1cedc:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1cee0:	ldr	r0, [fp, #-8]
   1cee4:	ldr	r0, [r0]
   1cee8:	ldr	r1, [fp, #-12]
   1ceec:	mul	r0, r0, r1
   1cef0:	asr	r1, r0, #31
   1cef4:	str	r0, [fp, #-24]	; 0xffffffe8
   1cef8:	str	r1, [fp, #-20]	; 0xffffffec
   1cefc:	b	1d718 <__assert_fail@plt+0xc630>
   1cf00:	ldr	r0, [fp, #-12]
   1cf04:	cmp	r0, #0
   1cf08:	bge	1d050 <__assert_fail@plt+0xbf68>
   1cf0c:	ldr	r0, [fp, #-8]
   1cf10:	ldr	r0, [r0, #4]
   1cf14:	cmn	r0, #1
   1cf18:	bgt	1cfc0 <__assert_fail@plt+0xbed8>
   1cf1c:	b	1cf20 <__assert_fail@plt+0xbe38>
   1cf20:	b	1cf4c <__assert_fail@plt+0xbe64>
   1cf24:	ldr	r0, [fp, #-8]
   1cf28:	ldr	r1, [r0]
   1cf2c:	ldr	r0, [r0, #4]
   1cf30:	ldr	r2, [fp, #-12]
   1cf34:	mvn	r3, #0
   1cf38:	udiv	r2, r3, r2
   1cf3c:	subs	r1, r1, r2
   1cf40:	sbcs	r0, r0, #0
   1cf44:	blt	1d110 <__assert_fail@plt+0xc028>
   1cf48:	b	1d130 <__assert_fail@plt+0xc048>
   1cf4c:	b	1cf50 <__assert_fail@plt+0xbe68>
   1cf50:	ldr	r0, [pc, #2024]	; 1d740 <__assert_fail@plt+0xc658>
   1cf54:	ldr	r1, [fp, #-12]
   1cf58:	cmp	r1, r0
   1cf5c:	blt	1cf74 <__assert_fail@plt+0xbe8c>
   1cf60:	b	1cf80 <__assert_fail@plt+0xbe98>
   1cf64:	ldr	r0, [fp, #-12]
   1cf68:	movw	r1, #0
   1cf6c:	cmp	r1, r0
   1cf70:	bge	1cf80 <__assert_fail@plt+0xbe98>
   1cf74:	movw	r0, #1
   1cf78:	str	r0, [sp, #56]	; 0x38
   1cf7c:	b	1cf98 <__assert_fail@plt+0xbeb0>
   1cf80:	ldr	r0, [fp, #-12]
   1cf84:	movw	r1, #0
   1cf88:	sub	r0, r1, r0
   1cf8c:	mvn	r1, #0
   1cf90:	udiv	r0, r1, r0
   1cf94:	str	r0, [sp, #56]	; 0x38
   1cf98:	ldr	r0, [sp, #56]	; 0x38
   1cf9c:	ldr	r1, [fp, #-8]
   1cfa0:	ldr	r2, [r1]
   1cfa4:	ldr	r1, [r1, #4]
   1cfa8:	mvn	r1, r1
   1cfac:	mvn	r2, r2
   1cfb0:	subs	r0, r2, r0
   1cfb4:	sbcs	r1, r1, #0
   1cfb8:	bge	1d110 <__assert_fail@plt+0xc028>
   1cfbc:	b	1d130 <__assert_fail@plt+0xc048>
   1cfc0:	b	1cfc4 <__assert_fail@plt+0xbedc>
   1cfc4:	b	1d034 <__assert_fail@plt+0xbf4c>
   1cfc8:	b	1d034 <__assert_fail@plt+0xbf4c>
   1cfcc:	ldr	r0, [fp, #-12]
   1cfd0:	cmn	r0, #1
   1cfd4:	bne	1d034 <__assert_fail@plt+0xbf4c>
   1cfd8:	b	1cfdc <__assert_fail@plt+0xbef4>
   1cfdc:	ldr	r0, [fp, #-8]
   1cfe0:	ldr	r1, [r0]
   1cfe4:	ldr	r0, [r0, #4]
   1cfe8:	rsbs	r1, r1, #0
   1cfec:	rscs	r0, r0, #0
   1cff0:	blt	1d110 <__assert_fail@plt+0xc028>
   1cff4:	b	1d130 <__assert_fail@plt+0xc048>
   1cff8:	ldr	r0, [fp, #-8]
   1cffc:	ldr	r1, [r0]
   1d000:	ldr	r0, [r0, #4]
   1d004:	subs	r1, r1, #1
   1d008:	sbcs	r0, r0, #0
   1d00c:	blt	1d130 <__assert_fail@plt+0xc048>
   1d010:	b	1d014 <__assert_fail@plt+0xbf2c>
   1d014:	ldr	r0, [fp, #-8]
   1d018:	ldr	r1, [r0]
   1d01c:	ldr	r0, [r0, #4]
   1d020:	subs	r1, r1, #1
   1d024:	sbc	r0, r0, #0
   1d028:	cmn	r0, #1
   1d02c:	bgt	1d110 <__assert_fail@plt+0xc028>
   1d030:	b	1d130 <__assert_fail@plt+0xc048>
   1d034:	ldr	r0, [fp, #-8]
   1d038:	ldr	r1, [r0]
   1d03c:	ldr	r0, [r0, #4]
   1d040:	rsbs	r1, r1, #0
   1d044:	rscs	r0, r0, #0
   1d048:	blt	1d110 <__assert_fail@plt+0xc028>
   1d04c:	b	1d130 <__assert_fail@plt+0xc048>
   1d050:	ldr	r0, [fp, #-12]
   1d054:	cmp	r0, #0
   1d058:	bne	1d060 <__assert_fail@plt+0xbf78>
   1d05c:	b	1d130 <__assert_fail@plt+0xc048>
   1d060:	ldr	r0, [fp, #-8]
   1d064:	ldr	r0, [r0, #4]
   1d068:	cmn	r0, #1
   1d06c:	bgt	1d0e8 <__assert_fail@plt+0xc000>
   1d070:	b	1d074 <__assert_fail@plt+0xbf8c>
   1d074:	b	1d078 <__assert_fail@plt+0xbf90>
   1d078:	b	1d0d0 <__assert_fail@plt+0xbfe8>
   1d07c:	b	1d0d0 <__assert_fail@plt+0xbfe8>
   1d080:	ldr	r0, [fp, #-8]
   1d084:	ldr	r1, [r0]
   1d088:	ldr	r0, [r0, #4]
   1d08c:	and	r0, r1, r0
   1d090:	cmn	r0, #1
   1d094:	bne	1d0d0 <__assert_fail@plt+0xbfe8>
   1d098:	b	1d09c <__assert_fail@plt+0xbfb4>
   1d09c:	b	1d0a0 <__assert_fail@plt+0xbfb8>
   1d0a0:	ldr	r0, [fp, #-12]
   1d0a4:	add	r0, r0, #0
   1d0a8:	movw	r1, #0
   1d0ac:	cmp	r1, r0
   1d0b0:	blt	1d110 <__assert_fail@plt+0xc028>
   1d0b4:	b	1d130 <__assert_fail@plt+0xc048>
   1d0b8:	ldr	r0, [fp, #-12]
   1d0bc:	sub	r0, r0, #1
   1d0c0:	mvn	r1, #0
   1d0c4:	cmp	r1, r0
   1d0c8:	blt	1d110 <__assert_fail@plt+0xc028>
   1d0cc:	b	1d130 <__assert_fail@plt+0xc048>
   1d0d0:	ldr	r0, [fp, #-12]
   1d0d4:	rsbs	r1, r0, #0
   1d0d8:	mov	r2, #0
   1d0dc:	sbcs	r0, r2, r0, asr #31
   1d0e0:	blt	1d110 <__assert_fail@plt+0xc028>
   1d0e4:	b	1d130 <__assert_fail@plt+0xc048>
   1d0e8:	ldr	r0, [fp, #-12]
   1d0ec:	mvn	r1, #0
   1d0f0:	udiv	r0, r1, r0
   1d0f4:	ldr	r1, [fp, #-8]
   1d0f8:	ldr	r2, [r1]
   1d0fc:	ldr	r1, [r1, #4]
   1d100:	subs	r0, r0, r2
   1d104:	rscs	r1, r1, #0
   1d108:	bge	1d130 <__assert_fail@plt+0xc048>
   1d10c:	b	1d110 <__assert_fail@plt+0xc028>
   1d110:	ldr	r0, [fp, #-8]
   1d114:	ldr	r0, [r0]
   1d118:	ldr	r1, [fp, #-12]
   1d11c:	mul	r0, r0, r1
   1d120:	mov	r1, #0
   1d124:	str	r1, [fp, #-20]	; 0xffffffec
   1d128:	str	r0, [fp, #-24]	; 0xffffffe8
   1d12c:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1d130:	ldr	r0, [fp, #-8]
   1d134:	ldr	r0, [r0]
   1d138:	ldr	r1, [fp, #-12]
   1d13c:	mul	r0, r0, r1
   1d140:	mov	r1, #0
   1d144:	str	r1, [fp, #-20]	; 0xffffffec
   1d148:	str	r0, [fp, #-24]	; 0xffffffe8
   1d14c:	b	1d718 <__assert_fail@plt+0xc630>
   1d150:	b	1d154 <__assert_fail@plt+0xc06c>
   1d154:	ldr	r0, [fp, #-12]
   1d158:	cmp	r0, #0
   1d15c:	bge	1d2f8 <__assert_fail@plt+0xc210>
   1d160:	ldr	r0, [fp, #-8]
   1d164:	ldr	r0, [r0, #4]
   1d168:	cmn	r0, #1
   1d16c:	bgt	1d25c <__assert_fail@plt+0xc174>
   1d170:	b	1d174 <__assert_fail@plt+0xc08c>
   1d174:	b	1d178 <__assert_fail@plt+0xc090>
   1d178:	ldr	r0, [fp, #-8]
   1d17c:	ldr	r1, [r0]
   1d180:	ldr	r0, [r0, #4]
   1d184:	ldr	r2, [fp, #-12]
   1d188:	asr	r3, r2, #31
   1d18c:	mvn	ip, #0
   1d190:	mvn	lr, #-2147483648	; 0x80000000
   1d194:	str	r0, [sp, #52]	; 0x34
   1d198:	mov	r0, ip
   1d19c:	str	r1, [sp, #48]	; 0x30
   1d1a0:	mov	r1, lr
   1d1a4:	bl	1e464 <__assert_fail@plt+0xd37c>
   1d1a8:	ldr	r2, [sp, #48]	; 0x30
   1d1ac:	subs	r0, r2, r0
   1d1b0:	ldr	r2, [sp, #52]	; 0x34
   1d1b4:	sbcs	r1, r2, r1
   1d1b8:	blt	1d3d4 <__assert_fail@plt+0xc2ec>
   1d1bc:	b	1d400 <__assert_fail@plt+0xc318>
   1d1c0:	b	1d1c4 <__assert_fail@plt+0xc0dc>
   1d1c4:	ldr	r0, [pc, #1396]	; 1d740 <__assert_fail@plt+0xc658>
   1d1c8:	ldr	r1, [fp, #-12]
   1d1cc:	cmp	r1, r0
   1d1d0:	blt	1d1e8 <__assert_fail@plt+0xc100>
   1d1d4:	b	1d1fc <__assert_fail@plt+0xc114>
   1d1d8:	ldr	r0, [fp, #-12]
   1d1dc:	movw	r1, #0
   1d1e0:	cmp	r1, r0
   1d1e4:	bge	1d1fc <__assert_fail@plt+0xc114>
   1d1e8:	mov	r0, #0
   1d1ec:	mvn	r1, #0
   1d1f0:	str	r1, [sp, #44]	; 0x2c
   1d1f4:	str	r0, [sp, #40]	; 0x28
   1d1f8:	b	1d230 <__assert_fail@plt+0xc148>
   1d1fc:	ldr	r0, [fp, #-12]
   1d200:	rsb	r0, r0, #0
   1d204:	asr	r3, r0, #31
   1d208:	mvn	r1, #0
   1d20c:	mvn	r2, #-2147483648	; 0x80000000
   1d210:	str	r0, [sp, #36]	; 0x24
   1d214:	mov	r0, r1
   1d218:	mov	r1, r2
   1d21c:	ldr	r2, [sp, #36]	; 0x24
   1d220:	bl	1e464 <__assert_fail@plt+0xd37c>
   1d224:	str	r0, [sp, #44]	; 0x2c
   1d228:	str	r1, [sp, #40]	; 0x28
   1d22c:	b	1d230 <__assert_fail@plt+0xc148>
   1d230:	ldr	r0, [sp, #40]	; 0x28
   1d234:	ldr	r1, [sp, #44]	; 0x2c
   1d238:	ldr	r2, [fp, #-8]
   1d23c:	ldr	r3, [r2]
   1d240:	ldr	r2, [r2, #4]
   1d244:	mvn	r2, r2
   1d248:	mvn	r3, r3
   1d24c:	subs	r1, r3, r1
   1d250:	sbcs	r0, r2, r0
   1d254:	bge	1d3d4 <__assert_fail@plt+0xc2ec>
   1d258:	b	1d400 <__assert_fail@plt+0xc318>
   1d25c:	ldr	r0, [fp, #-12]
   1d260:	cmn	r0, #1
   1d264:	bne	1d2b8 <__assert_fail@plt+0xc1d0>
   1d268:	b	1d26c <__assert_fail@plt+0xc184>
   1d26c:	ldr	r0, [fp, #-8]
   1d270:	ldr	r1, [r0]
   1d274:	ldr	r0, [r0, #4]
   1d278:	add	r0, r0, #-2147483648	; 0x80000000
   1d27c:	rsbs	r1, r1, #0
   1d280:	rscs	r0, r0, #0
   1d284:	blt	1d3d4 <__assert_fail@plt+0xc2ec>
   1d288:	b	1d400 <__assert_fail@plt+0xc318>
   1d28c:	ldr	r0, [fp, #-8]
   1d290:	ldr	r1, [r0]
   1d294:	ldr	r0, [r0, #4]
   1d298:	subs	r1, r1, #1
   1d29c:	sbcs	r0, r0, #0
   1d2a0:	blt	1d400 <__assert_fail@plt+0xc318>
   1d2a4:	b	1d2a8 <__assert_fail@plt+0xc1c0>
   1d2a8:	mov	r0, #0
   1d2ac:	cmp	r0, #0
   1d2b0:	bne	1d3d4 <__assert_fail@plt+0xc2ec>
   1d2b4:	b	1d400 <__assert_fail@plt+0xc318>
   1d2b8:	ldr	r0, [fp, #-12]
   1d2bc:	asr	r3, r0, #31
   1d2c0:	mov	r1, #0
   1d2c4:	mov	r2, #-2147483648	; 0x80000000
   1d2c8:	str	r0, [sp, #32]
   1d2cc:	mov	r0, r1
   1d2d0:	mov	r1, r2
   1d2d4:	ldr	r2, [sp, #32]
   1d2d8:	bl	1e464 <__assert_fail@plt+0xd37c>
   1d2dc:	ldr	r2, [fp, #-8]
   1d2e0:	ldr	r3, [r2]
   1d2e4:	ldr	r2, [r2, #4]
   1d2e8:	subs	r0, r0, r3
   1d2ec:	sbcs	r1, r1, r2
   1d2f0:	blt	1d3d4 <__assert_fail@plt+0xc2ec>
   1d2f4:	b	1d400 <__assert_fail@plt+0xc318>
   1d2f8:	ldr	r0, [fp, #-12]
   1d2fc:	cmp	r0, #0
   1d300:	bne	1d308 <__assert_fail@plt+0xc220>
   1d304:	b	1d400 <__assert_fail@plt+0xc318>
   1d308:	ldr	r0, [fp, #-8]
   1d30c:	ldr	r0, [r0, #4]
   1d310:	cmn	r0, #1
   1d314:	bgt	1d394 <__assert_fail@plt+0xc2ac>
   1d318:	b	1d31c <__assert_fail@plt+0xc234>
   1d31c:	ldr	r0, [fp, #-8]
   1d320:	ldr	r1, [r0]
   1d324:	ldr	r0, [r0, #4]
   1d328:	and	r0, r1, r0
   1d32c:	cmn	r0, #1
   1d330:	bne	1d368 <__assert_fail@plt+0xc280>
   1d334:	b	1d338 <__assert_fail@plt+0xc250>
   1d338:	b	1d33c <__assert_fail@plt+0xc254>
   1d33c:	ldr	r0, [fp, #-12]
   1d340:	mov	r1, #-2147483648	; 0x80000000
   1d344:	add	r1, r1, r0, asr #31
   1d348:	rsbs	r0, r0, #0
   1d34c:	rscs	r1, r1, #0
   1d350:	blt	1d3d4 <__assert_fail@plt+0xc2ec>
   1d354:	b	1d400 <__assert_fail@plt+0xc318>
   1d358:	mov	r0, #0
   1d35c:	cmp	r0, #0
   1d360:	bne	1d3d4 <__assert_fail@plt+0xc2ec>
   1d364:	b	1d400 <__assert_fail@plt+0xc318>
   1d368:	ldr	r0, [fp, #-8]
   1d36c:	ldr	r2, [r0]
   1d370:	ldr	r3, [r0, #4]
   1d374:	mov	r0, #0
   1d378:	mov	r1, #-2147483648	; 0x80000000
   1d37c:	bl	1e464 <__assert_fail@plt+0xd37c>
   1d380:	ldr	r2, [fp, #-12]
   1d384:	subs	r0, r0, r2
   1d388:	sbcs	r1, r1, r2, asr #31
   1d38c:	blt	1d3d4 <__assert_fail@plt+0xc2ec>
   1d390:	b	1d400 <__assert_fail@plt+0xc318>
   1d394:	ldr	r0, [fp, #-12]
   1d398:	asr	r3, r0, #31
   1d39c:	mvn	r1, #0
   1d3a0:	mvn	r2, #-2147483648	; 0x80000000
   1d3a4:	str	r0, [sp, #28]
   1d3a8:	mov	r0, r1
   1d3ac:	mov	r1, r2
   1d3b0:	ldr	r2, [sp, #28]
   1d3b4:	bl	1e464 <__assert_fail@plt+0xd37c>
   1d3b8:	ldr	r2, [fp, #-8]
   1d3bc:	ldr	r3, [r2]
   1d3c0:	ldr	r2, [r2, #4]
   1d3c4:	subs	r0, r0, r3
   1d3c8:	sbcs	r1, r1, r2
   1d3cc:	bge	1d400 <__assert_fail@plt+0xc318>
   1d3d0:	b	1d3d4 <__assert_fail@plt+0xc2ec>
   1d3d4:	ldr	r0, [fp, #-8]
   1d3d8:	ldr	r1, [r0]
   1d3dc:	ldr	r0, [r0, #4]
   1d3e0:	ldr	r2, [fp, #-12]
   1d3e4:	asr	r3, r2, #31
   1d3e8:	umull	ip, lr, r1, r2
   1d3ec:	mla	r1, r1, r3, lr
   1d3f0:	mla	r0, r0, r2, r1
   1d3f4:	str	ip, [fp, #-24]	; 0xffffffe8
   1d3f8:	str	r0, [fp, #-20]	; 0xffffffec
   1d3fc:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1d400:	ldr	r0, [fp, #-8]
   1d404:	ldr	r1, [r0]
   1d408:	ldr	r0, [r0, #4]
   1d40c:	ldr	r2, [fp, #-12]
   1d410:	asr	r3, r2, #31
   1d414:	umull	ip, lr, r1, r2
   1d418:	mla	r1, r1, r3, lr
   1d41c:	mla	r0, r0, r2, r1
   1d420:	str	ip, [fp, #-24]	; 0xffffffe8
   1d424:	str	r0, [fp, #-20]	; 0xffffffec
   1d428:	b	1d718 <__assert_fail@plt+0xc630>
   1d42c:	ldr	r0, [fp, #-12]
   1d430:	cmp	r0, #0
   1d434:	bge	1d5bc <__assert_fail@plt+0xc4d4>
   1d438:	ldr	r0, [fp, #-8]
   1d43c:	ldr	r0, [r0, #4]
   1d440:	cmn	r0, #1
   1d444:	bgt	1d52c <__assert_fail@plt+0xc444>
   1d448:	b	1d44c <__assert_fail@plt+0xc364>
   1d44c:	b	1d498 <__assert_fail@plt+0xc3b0>
   1d450:			; <UNDEFINED> instruction: 0xffff8000
   1d454:	ldr	r0, [fp, #-8]
   1d458:	ldr	r1, [r0]
   1d45c:	ldr	r0, [r0, #4]
   1d460:	ldr	r2, [fp, #-12]
   1d464:	asr	r3, r2, #31
   1d468:	mvn	ip, #0
   1d46c:	str	r0, [sp, #24]
   1d470:	mov	r0, ip
   1d474:	str	r1, [sp, #20]
   1d478:	mov	r1, ip
   1d47c:	bl	1e538 <__assert_fail@plt+0xd450>
   1d480:	ldr	r2, [sp, #20]
   1d484:	subs	r0, r2, r0
   1d488:	ldr	r2, [sp, #24]
   1d48c:	sbcs	r1, r2, r1
   1d490:	bcc	1d68c <__assert_fail@plt+0xc5a4>
   1d494:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d498:	b	1d49c <__assert_fail@plt+0xc3b4>
   1d49c:	ldr	r0, [pc, #668]	; 1d740 <__assert_fail@plt+0xc658>
   1d4a0:	ldr	r1, [fp, #-12]
   1d4a4:	cmp	r1, r0
   1d4a8:	blt	1d4c0 <__assert_fail@plt+0xc3d8>
   1d4ac:	b	1d4d4 <__assert_fail@plt+0xc3ec>
   1d4b0:	ldr	r0, [fp, #-12]
   1d4b4:	movw	r1, #0
   1d4b8:	cmp	r1, r0
   1d4bc:	bge	1d4d4 <__assert_fail@plt+0xc3ec>
   1d4c0:	mov	r0, #1
   1d4c4:	mvn	r1, #0
   1d4c8:	str	r1, [sp, #16]
   1d4cc:	str	r0, [sp, #12]
   1d4d0:	b	1d500 <__assert_fail@plt+0xc418>
   1d4d4:	ldr	r0, [fp, #-12]
   1d4d8:	rsb	r0, r0, #0
   1d4dc:	asr	r3, r0, #31
   1d4e0:	mvn	r1, #0
   1d4e4:	str	r0, [sp, #8]
   1d4e8:	mov	r0, r1
   1d4ec:	ldr	r2, [sp, #8]
   1d4f0:	bl	1e538 <__assert_fail@plt+0xd450>
   1d4f4:	str	r0, [sp, #16]
   1d4f8:	str	r1, [sp, #12]
   1d4fc:	b	1d500 <__assert_fail@plt+0xc418>
   1d500:	ldr	r0, [sp, #12]
   1d504:	ldr	r1, [sp, #16]
   1d508:	ldr	r2, [fp, #-8]
   1d50c:	ldr	r3, [r2]
   1d510:	ldr	r2, [r2, #4]
   1d514:	mvn	r2, r2
   1d518:	mvn	r3, r3
   1d51c:	subs	r1, r3, r1
   1d520:	sbcs	r0, r2, r0
   1d524:	bcs	1d68c <__assert_fail@plt+0xc5a4>
   1d528:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d52c:	b	1d530 <__assert_fail@plt+0xc448>
   1d530:	b	1d5a0 <__assert_fail@plt+0xc4b8>
   1d534:	b	1d5a0 <__assert_fail@plt+0xc4b8>
   1d538:	ldr	r0, [fp, #-12]
   1d53c:	cmn	r0, #1
   1d540:	bne	1d5a0 <__assert_fail@plt+0xc4b8>
   1d544:	b	1d548 <__assert_fail@plt+0xc460>
   1d548:	ldr	r0, [fp, #-8]
   1d54c:	ldr	r1, [r0]
   1d550:	ldr	r0, [r0, #4]
   1d554:	rsbs	r1, r1, #0
   1d558:	rscs	r0, r0, #0
   1d55c:	blt	1d68c <__assert_fail@plt+0xc5a4>
   1d560:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d564:	ldr	r0, [fp, #-8]
   1d568:	ldr	r1, [r0]
   1d56c:	ldr	r0, [r0, #4]
   1d570:	subs	r1, r1, #1
   1d574:	sbcs	r0, r0, #0
   1d578:	blt	1d6b8 <__assert_fail@plt+0xc5d0>
   1d57c:	b	1d580 <__assert_fail@plt+0xc498>
   1d580:	ldr	r0, [fp, #-8]
   1d584:	ldr	r1, [r0]
   1d588:	ldr	r0, [r0, #4]
   1d58c:	subs	r1, r1, #1
   1d590:	sbc	r0, r0, #0
   1d594:	cmn	r0, #1
   1d598:	bgt	1d68c <__assert_fail@plt+0xc5a4>
   1d59c:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d5a0:	ldr	r0, [fp, #-8]
   1d5a4:	ldr	r1, [r0]
   1d5a8:	ldr	r0, [r0, #4]
   1d5ac:	rsbs	r1, r1, #0
   1d5b0:	rscs	r0, r0, #0
   1d5b4:	blt	1d68c <__assert_fail@plt+0xc5a4>
   1d5b8:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d5bc:	ldr	r0, [fp, #-12]
   1d5c0:	cmp	r0, #0
   1d5c4:	bne	1d5cc <__assert_fail@plt+0xc4e4>
   1d5c8:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d5cc:	ldr	r0, [fp, #-8]
   1d5d0:	ldr	r0, [r0, #4]
   1d5d4:	cmn	r0, #1
   1d5d8:	bgt	1d654 <__assert_fail@plt+0xc56c>
   1d5dc:	b	1d5e0 <__assert_fail@plt+0xc4f8>
   1d5e0:	b	1d5e4 <__assert_fail@plt+0xc4fc>
   1d5e4:	b	1d63c <__assert_fail@plt+0xc554>
   1d5e8:	b	1d63c <__assert_fail@plt+0xc554>
   1d5ec:	ldr	r0, [fp, #-8]
   1d5f0:	ldr	r1, [r0]
   1d5f4:	ldr	r0, [r0, #4]
   1d5f8:	and	r0, r1, r0
   1d5fc:	cmn	r0, #1
   1d600:	bne	1d63c <__assert_fail@plt+0xc554>
   1d604:	b	1d608 <__assert_fail@plt+0xc520>
   1d608:	b	1d60c <__assert_fail@plt+0xc524>
   1d60c:	ldr	r0, [fp, #-12]
   1d610:	add	r0, r0, #0
   1d614:	movw	r1, #0
   1d618:	cmp	r1, r0
   1d61c:	blt	1d68c <__assert_fail@plt+0xc5a4>
   1d620:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d624:	ldr	r0, [fp, #-12]
   1d628:	sub	r0, r0, #1
   1d62c:	mvn	r1, #0
   1d630:	cmp	r1, r0
   1d634:	blt	1d68c <__assert_fail@plt+0xc5a4>
   1d638:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d63c:	ldr	r0, [fp, #-12]
   1d640:	rsbs	r1, r0, #0
   1d644:	mov	r2, #0
   1d648:	sbcs	r0, r2, r0, asr #31
   1d64c:	blt	1d68c <__assert_fail@plt+0xc5a4>
   1d650:	b	1d6b8 <__assert_fail@plt+0xc5d0>
   1d654:	ldr	r0, [fp, #-12]
   1d658:	asr	r3, r0, #31
   1d65c:	mvn	r1, #0
   1d660:	str	r0, [sp, #4]
   1d664:	mov	r0, r1
   1d668:	ldr	r2, [sp, #4]
   1d66c:	bl	1e538 <__assert_fail@plt+0xd450>
   1d670:	ldr	r2, [fp, #-8]
   1d674:	ldr	r3, [r2]
   1d678:	ldr	r2, [r2, #4]
   1d67c:	subs	r0, r0, r3
   1d680:	sbcs	r1, r1, r2
   1d684:	bcs	1d6b8 <__assert_fail@plt+0xc5d0>
   1d688:	b	1d68c <__assert_fail@plt+0xc5a4>
   1d68c:	ldr	r0, [fp, #-8]
   1d690:	ldr	r1, [r0]
   1d694:	ldr	r0, [r0, #4]
   1d698:	ldr	r2, [fp, #-12]
   1d69c:	asr	r3, r2, #31
   1d6a0:	umull	ip, lr, r1, r2
   1d6a4:	mla	r1, r1, r3, lr
   1d6a8:	mla	r0, r0, r2, r1
   1d6ac:	str	ip, [fp, #-24]	; 0xffffffe8
   1d6b0:	str	r0, [fp, #-20]	; 0xffffffec
   1d6b4:	b	1d6e4 <__assert_fail@plt+0xc5fc>
   1d6b8:	ldr	r0, [fp, #-8]
   1d6bc:	ldr	r1, [r0]
   1d6c0:	ldr	r0, [r0, #4]
   1d6c4:	ldr	r2, [fp, #-12]
   1d6c8:	asr	r3, r2, #31
   1d6cc:	umull	ip, lr, r1, r2
   1d6d0:	mla	r1, r1, r3, lr
   1d6d4:	mla	r0, r0, r2, r1
   1d6d8:	str	ip, [fp, #-24]	; 0xffffffe8
   1d6dc:	str	r0, [fp, #-20]	; 0xffffffec
   1d6e0:	b	1d718 <__assert_fail@plt+0xc630>
   1d6e4:	ldr	r0, [fp, #-8]
   1d6e8:	ldr	r1, [r0, #4]
   1d6ec:	mvn	r2, #0
   1d6f0:	cmp	r1, #0
   1d6f4:	movwmi	r2, #0
   1d6f8:	mvn	r3, #-2147483648	; 0x80000000
   1d6fc:	cmp	r1, #0
   1d700:	movmi	r3, #-2147483648	; 0x80000000
   1d704:	str	r3, [r0, #4]
   1d708:	str	r2, [r0]
   1d70c:	movw	r0, #1
   1d710:	str	r0, [fp, #-4]
   1d714:	b	1d734 <__assert_fail@plt+0xc64c>
   1d718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d71c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d720:	ldr	r2, [fp, #-8]
   1d724:	str	r1, [r2, #4]
   1d728:	str	r0, [r2]
   1d72c:	movw	r0, #0
   1d730:	str	r0, [fp, #-4]
   1d734:	ldr	r0, [fp, #-4]
   1d738:	mov	sp, fp
   1d73c:	pop	{fp, pc}
   1d740:	andhi	r0, r0, r1
   1d744:	svcvc	0x00ffffff
   1d748:	push	{fp, lr}
   1d74c:	mov	fp, sp
   1d750:	sub	sp, sp, #16
   1d754:	str	r0, [fp, #-4]
   1d758:	str	r1, [sp, #8]
   1d75c:	str	r2, [sp, #4]
   1d760:	movw	r0, #0
   1d764:	str	r0, [sp]
   1d768:	ldr	r0, [sp, #4]
   1d76c:	mvn	r1, #0
   1d770:	add	r1, r0, r1
   1d774:	str	r1, [sp, #4]
   1d778:	cmp	r0, #0
   1d77c:	beq	1d79c <__assert_fail@plt+0xc6b4>
   1d780:	ldr	r0, [fp, #-4]
   1d784:	ldr	r1, [sp, #8]
   1d788:	bl	1bdc4 <__assert_fail@plt+0xacdc>
   1d78c:	ldr	r1, [sp]
   1d790:	orr	r0, r1, r0
   1d794:	str	r0, [sp]
   1d798:	b	1d768 <__assert_fail@plt+0xc680>
   1d79c:	ldr	r0, [sp]
   1d7a0:	mov	sp, fp
   1d7a4:	pop	{fp, pc}
   1d7a8:	push	{fp, lr}
   1d7ac:	mov	fp, sp
   1d7b0:	sub	sp, sp, #16
   1d7b4:	str	r0, [sp, #8]
   1d7b8:	str	r1, [sp, #4]
   1d7bc:	ldr	r0, [sp, #8]
   1d7c0:	cmp	r0, #0
   1d7c4:	beq	1d7d4 <__assert_fail@plt+0xc6ec>
   1d7c8:	ldr	r0, [sp, #4]
   1d7cc:	cmp	r0, #0
   1d7d0:	bne	1d7e0 <__assert_fail@plt+0xc6f8>
   1d7d4:	movw	r0, #1
   1d7d8:	str	r0, [sp, #4]
   1d7dc:	str	r0, [sp, #8]
   1d7e0:	ldr	r0, [sp, #4]
   1d7e4:	cmp	r0, #0
   1d7e8:	beq	1d81c <__assert_fail@plt+0xc734>
   1d7ec:	ldr	r0, [pc, #76]	; 1d840 <__assert_fail@plt+0xc758>
   1d7f0:	ldr	r1, [sp, #4]
   1d7f4:	udiv	r0, r0, r1
   1d7f8:	ldr	r1, [sp, #8]
   1d7fc:	cmp	r0, r1
   1d800:	bcs	1d81c <__assert_fail@plt+0xc734>
   1d804:	bl	11010 <__errno_location@plt>
   1d808:	movw	r1, #12
   1d80c:	str	r1, [r0]
   1d810:	movw	r0, #0
   1d814:	str	r0, [fp, #-4]
   1d818:	b	1d834 <__assert_fail@plt+0xc74c>
   1d81c:	ldr	r0, [sp, #8]
   1d820:	ldr	r1, [sp, #4]
   1d824:	bl	10e6c <calloc@plt>
   1d828:	str	r0, [sp]
   1d82c:	ldr	r0, [sp]
   1d830:	str	r0, [fp, #-4]
   1d834:	ldr	r0, [fp, #-4]
   1d838:	mov	sp, fp
   1d83c:	pop	{fp, pc}
   1d840:	svcvc	0x00ffffff
   1d844:	push	{fp, lr}
   1d848:	mov	fp, sp
   1d84c:	sub	sp, sp, #16
   1d850:	str	r0, [sp, #8]
   1d854:	ldr	r0, [sp, #8]
   1d858:	cmp	r0, #0
   1d85c:	bne	1d868 <__assert_fail@plt+0xc780>
   1d860:	movw	r0, #1
   1d864:	str	r0, [sp, #8]
   1d868:	ldr	r0, [pc, #64]	; 1d8b0 <__assert_fail@plt+0xc7c8>
   1d86c:	ldr	r1, [sp, #8]
   1d870:	cmp	r0, r1
   1d874:	bcs	1d890 <__assert_fail@plt+0xc7a8>
   1d878:	bl	11010 <__errno_location@plt>
   1d87c:	movw	r1, #12
   1d880:	str	r1, [r0]
   1d884:	movw	r0, #0
   1d888:	str	r0, [fp, #-4]
   1d88c:	b	1d8a4 <__assert_fail@plt+0xc7bc>
   1d890:	ldr	r0, [sp, #8]
   1d894:	bl	10f8c <malloc@plt>
   1d898:	str	r0, [sp, #4]
   1d89c:	ldr	r0, [sp, #4]
   1d8a0:	str	r0, [fp, #-4]
   1d8a4:	ldr	r0, [fp, #-4]
   1d8a8:	mov	sp, fp
   1d8ac:	pop	{fp, pc}
   1d8b0:	svcvc	0x00ffffff
   1d8b4:	push	{fp, lr}
   1d8b8:	mov	fp, sp
   1d8bc:	sub	sp, sp, #16
   1d8c0:	str	r0, [sp, #8]
   1d8c4:	str	r1, [sp, #4]
   1d8c8:	ldr	r0, [sp, #8]
   1d8cc:	movw	r1, #0
   1d8d0:	cmp	r0, r1
   1d8d4:	bne	1d8e8 <__assert_fail@plt+0xc800>
   1d8d8:	ldr	r0, [sp, #4]
   1d8dc:	bl	1d844 <__assert_fail@plt+0xc75c>
   1d8e0:	str	r0, [fp, #-4]
   1d8e4:	b	1d948 <__assert_fail@plt+0xc860>
   1d8e8:	ldr	r0, [sp, #4]
   1d8ec:	cmp	r0, #0
   1d8f0:	bne	1d908 <__assert_fail@plt+0xc820>
   1d8f4:	ldr	r0, [sp, #8]
   1d8f8:	bl	14320 <__assert_fail@plt+0x3238>
   1d8fc:	movw	r0, #0
   1d900:	str	r0, [fp, #-4]
   1d904:	b	1d948 <__assert_fail@plt+0xc860>
   1d908:	ldr	r0, [pc, #68]	; 1d954 <__assert_fail@plt+0xc86c>
   1d90c:	ldr	r1, [sp, #4]
   1d910:	cmp	r0, r1
   1d914:	bcs	1d930 <__assert_fail@plt+0xc848>
   1d918:	bl	11010 <__errno_location@plt>
   1d91c:	movw	r1, #12
   1d920:	str	r1, [r0]
   1d924:	movw	r0, #0
   1d928:	str	r0, [fp, #-4]
   1d92c:	b	1d948 <__assert_fail@plt+0xc860>
   1d930:	ldr	r0, [sp, #8]
   1d934:	ldr	r1, [sp, #4]
   1d938:	bl	10f20 <realloc@plt>
   1d93c:	str	r0, [sp]
   1d940:	ldr	r0, [sp]
   1d944:	str	r0, [fp, #-4]
   1d948:	ldr	r0, [fp, #-4]
   1d94c:	mov	sp, fp
   1d950:	pop	{fp, pc}
   1d954:	svcvc	0x00ffffff
   1d958:	sub	sp, sp, #8
   1d95c:	str	r0, [sp, #4]
   1d960:	str	r1, [sp]
   1d964:	movw	r0, #0
   1d968:	add	sp, sp, #8
   1d96c:	bx	lr
   1d970:	push	{fp, lr}
   1d974:	mov	fp, sp
   1d978:	sub	sp, sp, #8
   1d97c:	str	r0, [sp, #4]
   1d980:	str	r1, [sp]
   1d984:	ldr	r0, [sp, #4]
   1d988:	ldr	r1, [sp]
   1d98c:	bl	1d958 <__assert_fail@plt+0xc870>
   1d990:	mov	sp, fp
   1d994:	pop	{fp, pc}
   1d998:	push	{fp, lr}
   1d99c:	mov	fp, sp
   1d9a0:	sub	sp, sp, #24
   1d9a4:	str	r0, [fp, #-8]
   1d9a8:	str	r1, [sp, #12]
   1d9ac:	ldr	r0, [fp, #-8]
   1d9b0:	str	r0, [sp, #8]
   1d9b4:	ldr	r0, [sp, #12]
   1d9b8:	str	r0, [sp, #4]
   1d9bc:	ldr	r0, [sp, #8]
   1d9c0:	ldr	r1, [sp, #4]
   1d9c4:	cmp	r0, r1
   1d9c8:	bne	1d9d8 <__assert_fail@plt+0xc8f0>
   1d9cc:	movw	r0, #0
   1d9d0:	str	r0, [fp, #-4]
   1d9d4:	b	1da44 <__assert_fail@plt+0xc95c>
   1d9d8:	b	1d9dc <__assert_fail@plt+0xc8f4>
   1d9dc:	ldr	r0, [sp, #8]
   1d9e0:	ldrb	r0, [r0]
   1d9e4:	bl	1e1e4 <__assert_fail@plt+0xd0fc>
   1d9e8:	strb	r0, [sp, #3]
   1d9ec:	ldr	r0, [sp, #4]
   1d9f0:	ldrb	r0, [r0]
   1d9f4:	bl	1e1e4 <__assert_fail@plt+0xd0fc>
   1d9f8:	strb	r0, [sp, #2]
   1d9fc:	ldrb	r0, [sp, #3]
   1da00:	cmp	r0, #0
   1da04:	bne	1da0c <__assert_fail@plt+0xc924>
   1da08:	b	1da34 <__assert_fail@plt+0xc94c>
   1da0c:	ldr	r0, [sp, #8]
   1da10:	add	r0, r0, #1
   1da14:	str	r0, [sp, #8]
   1da18:	ldr	r0, [sp, #4]
   1da1c:	add	r0, r0, #1
   1da20:	str	r0, [sp, #4]
   1da24:	ldrb	r0, [sp, #3]
   1da28:	ldrb	r1, [sp, #2]
   1da2c:	cmp	r0, r1
   1da30:	beq	1d9dc <__assert_fail@plt+0xc8f4>
   1da34:	ldrb	r0, [sp, #3]
   1da38:	ldrb	r1, [sp, #2]
   1da3c:	sub	r0, r0, r1
   1da40:	str	r0, [fp, #-4]
   1da44:	ldr	r0, [fp, #-4]
   1da48:	mov	sp, fp
   1da4c:	pop	{fp, pc}
   1da50:	push	{fp, lr}
   1da54:	mov	fp, sp
   1da58:	sub	sp, sp, #16
   1da5c:	str	r0, [sp, #8]
   1da60:	ldr	r0, [sp, #8]
   1da64:	bl	10f5c <__fpending@plt>
   1da68:	cmp	r0, #0
   1da6c:	movw	r0, #0
   1da70:	movne	r0, #1
   1da74:	and	r0, r0, #1
   1da78:	strb	r0, [sp, #7]
   1da7c:	ldr	r0, [sp, #8]
   1da80:	bl	10f68 <ferror_unlocked@plt>
   1da84:	cmp	r0, #0
   1da88:	movw	r0, #0
   1da8c:	movne	r0, #1
   1da90:	and	r0, r0, #1
   1da94:	strb	r0, [sp, #6]
   1da98:	ldr	r0, [sp, #8]
   1da9c:	bl	14188 <__assert_fail@plt+0x30a0>
   1daa0:	cmp	r0, #0
   1daa4:	movw	r0, #0
   1daa8:	movne	r0, #1
   1daac:	and	r0, r0, #1
   1dab0:	strb	r0, [sp, #5]
   1dab4:	ldrb	r0, [sp, #6]
   1dab8:	tst	r0, #1
   1dabc:	bne	1dae8 <__assert_fail@plt+0xca00>
   1dac0:	ldrb	r0, [sp, #5]
   1dac4:	tst	r0, #1
   1dac8:	beq	1db0c <__assert_fail@plt+0xca24>
   1dacc:	ldrb	r0, [sp, #7]
   1dad0:	tst	r0, #1
   1dad4:	bne	1dae8 <__assert_fail@plt+0xca00>
   1dad8:	bl	11010 <__errno_location@plt>
   1dadc:	ldr	r0, [r0]
   1dae0:	cmp	r0, #9
   1dae4:	beq	1db0c <__assert_fail@plt+0xca24>
   1dae8:	ldrb	r0, [sp, #5]
   1daec:	tst	r0, #1
   1daf0:	bne	1db00 <__assert_fail@plt+0xca18>
   1daf4:	bl	11010 <__errno_location@plt>
   1daf8:	movw	r1, #0
   1dafc:	str	r1, [r0]
   1db00:	mvn	r0, #0
   1db04:	str	r0, [fp, #-4]
   1db08:	b	1db14 <__assert_fail@plt+0xca2c>
   1db0c:	movw	r0, #0
   1db10:	str	r0, [fp, #-4]
   1db14:	ldr	r0, [fp, #-4]
   1db18:	mov	sp, fp
   1db1c:	pop	{fp, pc}
   1db20:	push	{fp, lr}
   1db24:	mov	fp, sp
   1db28:	sub	sp, sp, #8
   1db2c:	movw	r0, #14
   1db30:	bl	11088 <nl_langinfo@plt>
   1db34:	str	r0, [sp, #4]
   1db38:	ldr	r0, [sp, #4]
   1db3c:	movw	r1, #0
   1db40:	cmp	r0, r1
   1db44:	bne	1db54 <__assert_fail@plt+0xca6c>
   1db48:	movw	r0, #60488	; 0xec48
   1db4c:	movt	r0, #1
   1db50:	str	r0, [sp, #4]
   1db54:	ldr	r0, [sp, #4]
   1db58:	ldrb	r0, [r0]
   1db5c:	cmp	r0, #0
   1db60:	bne	1db70 <__assert_fail@plt+0xca88>
   1db64:	movw	r0, #62245	; 0xf325
   1db68:	movt	r0, #1
   1db6c:	str	r0, [sp, #4]
   1db70:	ldr	r0, [sp, #4]
   1db74:	mov	sp, fp
   1db78:	pop	{fp, pc}
   1db7c:	push	{fp, lr}
   1db80:	mov	fp, sp
   1db84:	sub	sp, sp, #32
   1db88:	str	r0, [fp, #-8]
   1db8c:	str	r1, [fp, #-12]
   1db90:	str	r2, [sp, #16]
   1db94:	str	r3, [sp, #12]
   1db98:	ldr	r0, [fp, #-8]
   1db9c:	movw	r1, #0
   1dba0:	cmp	r0, r1
   1dba4:	bne	1dbb0 <__assert_fail@plt+0xcac8>
   1dba8:	add	r0, sp, #4
   1dbac:	str	r0, [fp, #-8]
   1dbb0:	ldr	r0, [fp, #-8]
   1dbb4:	ldr	r1, [fp, #-12]
   1dbb8:	ldr	r2, [sp, #16]
   1dbbc:	ldr	r3, [sp, #12]
   1dbc0:	bl	10f74 <mbrtowc@plt>
   1dbc4:	str	r0, [sp, #8]
   1dbc8:	ldr	r0, [sp, #8]
   1dbcc:	mvn	r1, #1
   1dbd0:	cmp	r1, r0
   1dbd4:	bhi	1dc18 <__assert_fail@plt+0xcb30>
   1dbd8:	ldr	r0, [sp, #16]
   1dbdc:	cmp	r0, #0
   1dbe0:	beq	1dc18 <__assert_fail@plt+0xcb30>
   1dbe4:	movw	r0, #0
   1dbe8:	bl	1e26c <__assert_fail@plt+0xd184>
   1dbec:	tst	r0, #1
   1dbf0:	bne	1dc18 <__assert_fail@plt+0xcb30>
   1dbf4:	ldr	r0, [fp, #-12]
   1dbf8:	ldrb	r0, [r0]
   1dbfc:	strb	r0, [sp, #3]
   1dc00:	ldrb	r0, [sp, #3]
   1dc04:	ldr	r1, [fp, #-8]
   1dc08:	str	r0, [r1]
   1dc0c:	movw	r0, #1
   1dc10:	str	r0, [fp, #-4]
   1dc14:	b	1dc20 <__assert_fail@plt+0xcb38>
   1dc18:	ldr	r0, [sp, #8]
   1dc1c:	str	r0, [fp, #-4]
   1dc20:	ldr	r0, [fp, #-4]
   1dc24:	mov	sp, fp
   1dc28:	pop	{fp, pc}
   1dc2c:	sub	sp, sp, #12
   1dc30:	str	r0, [sp, #4]
   1dc34:	ldr	r0, [sp, #4]
   1dc38:	sub	r1, r0, #48	; 0x30
   1dc3c:	cmp	r1, #10
   1dc40:	str	r0, [sp]
   1dc44:	bcc	1dc74 <__assert_fail@plt+0xcb8c>
   1dc48:	b	1dc4c <__assert_fail@plt+0xcb64>
   1dc4c:	ldr	r0, [sp]
   1dc50:	sub	r1, r0, #65	; 0x41
   1dc54:	cmp	r1, #26
   1dc58:	bcc	1dc74 <__assert_fail@plt+0xcb8c>
   1dc5c:	b	1dc60 <__assert_fail@plt+0xcb78>
   1dc60:	ldr	r0, [sp]
   1dc64:	sub	r1, r0, #97	; 0x61
   1dc68:	cmp	r1, #25
   1dc6c:	bhi	1dc84 <__assert_fail@plt+0xcb9c>
   1dc70:	b	1dc74 <__assert_fail@plt+0xcb8c>
   1dc74:	movw	r0, #1
   1dc78:	and	r0, r0, #1
   1dc7c:	strb	r0, [sp, #11]
   1dc80:	b	1dc90 <__assert_fail@plt+0xcba8>
   1dc84:	movw	r0, #0
   1dc88:	and	r0, r0, #1
   1dc8c:	strb	r0, [sp, #11]
   1dc90:	ldrb	r0, [sp, #11]
   1dc94:	and	r0, r0, #1
   1dc98:	add	sp, sp, #12
   1dc9c:	bx	lr
   1dca0:	sub	sp, sp, #12
   1dca4:	str	r0, [sp, #4]
   1dca8:	ldr	r0, [sp, #4]
   1dcac:	sub	r1, r0, #65	; 0x41
   1dcb0:	cmp	r1, #26
   1dcb4:	str	r0, [sp]
   1dcb8:	bcc	1dcd4 <__assert_fail@plt+0xcbec>
   1dcbc:	b	1dcc0 <__assert_fail@plt+0xcbd8>
   1dcc0:	ldr	r0, [sp]
   1dcc4:	sub	r1, r0, #97	; 0x61
   1dcc8:	cmp	r1, #25
   1dccc:	bhi	1dce4 <__assert_fail@plt+0xcbfc>
   1dcd0:	b	1dcd4 <__assert_fail@plt+0xcbec>
   1dcd4:	movw	r0, #1
   1dcd8:	and	r0, r0, #1
   1dcdc:	strb	r0, [sp, #11]
   1dce0:	b	1dcf0 <__assert_fail@plt+0xcc08>
   1dce4:	movw	r0, #0
   1dce8:	and	r0, r0, #1
   1dcec:	strb	r0, [sp, #11]
   1dcf0:	ldrb	r0, [sp, #11]
   1dcf4:	and	r0, r0, #1
   1dcf8:	add	sp, sp, #12
   1dcfc:	bx	lr
   1dd00:	sub	sp, sp, #8
   1dd04:	str	r0, [sp]
   1dd08:	ldr	r0, [sp]
   1dd0c:	cmp	r0, #127	; 0x7f
   1dd10:	bhi	1dd28 <__assert_fail@plt+0xcc40>
   1dd14:	b	1dd18 <__assert_fail@plt+0xcc30>
   1dd18:	movw	r0, #1
   1dd1c:	and	r0, r0, #1
   1dd20:	strb	r0, [sp, #7]
   1dd24:	b	1dd34 <__assert_fail@plt+0xcc4c>
   1dd28:	movw	r0, #0
   1dd2c:	and	r0, r0, #1
   1dd30:	strb	r0, [sp, #7]
   1dd34:	ldrb	r0, [sp, #7]
   1dd38:	and	r0, r0, #1
   1dd3c:	add	sp, sp, #8
   1dd40:	bx	lr
   1dd44:	sub	sp, sp, #8
   1dd48:	str	r0, [sp, #4]
   1dd4c:	ldr	r0, [sp, #4]
   1dd50:	cmp	r0, #32
   1dd54:	movw	r0, #1
   1dd58:	str	r0, [sp]
   1dd5c:	beq	1dd74 <__assert_fail@plt+0xcc8c>
   1dd60:	ldr	r0, [sp, #4]
   1dd64:	cmp	r0, #9
   1dd68:	movw	r0, #0
   1dd6c:	moveq	r0, #1
   1dd70:	str	r0, [sp]
   1dd74:	ldr	r0, [sp]
   1dd78:	and	r0, r0, #1
   1dd7c:	add	sp, sp, #8
   1dd80:	bx	lr
   1dd84:	sub	sp, sp, #12
   1dd88:	str	r0, [sp, #4]
   1dd8c:	ldr	r0, [sp, #4]
   1dd90:	cmp	r0, #32
   1dd94:	str	r0, [sp]
   1dd98:	bcc	1ddb0 <__assert_fail@plt+0xccc8>
   1dd9c:	b	1dda0 <__assert_fail@plt+0xccb8>
   1dda0:	ldr	r0, [sp]
   1dda4:	cmp	r0, #127	; 0x7f
   1dda8:	bne	1ddc0 <__assert_fail@plt+0xccd8>
   1ddac:	b	1ddb0 <__assert_fail@plt+0xccc8>
   1ddb0:	movw	r0, #1
   1ddb4:	and	r0, r0, #1
   1ddb8:	strb	r0, [sp, #11]
   1ddbc:	b	1ddcc <__assert_fail@plt+0xcce4>
   1ddc0:	movw	r0, #0
   1ddc4:	and	r0, r0, #1
   1ddc8:	strb	r0, [sp, #11]
   1ddcc:	ldrb	r0, [sp, #11]
   1ddd0:	and	r0, r0, #1
   1ddd4:	add	sp, sp, #12
   1ddd8:	bx	lr
   1dddc:	sub	sp, sp, #8
   1dde0:	str	r0, [sp]
   1dde4:	ldr	r0, [sp]
   1dde8:	sub	r0, r0, #48	; 0x30
   1ddec:	cmp	r0, #9
   1ddf0:	bhi	1de08 <__assert_fail@plt+0xcd20>
   1ddf4:	b	1ddf8 <__assert_fail@plt+0xcd10>
   1ddf8:	movw	r0, #1
   1ddfc:	and	r0, r0, #1
   1de00:	strb	r0, [sp, #7]
   1de04:	b	1de14 <__assert_fail@plt+0xcd2c>
   1de08:	movw	r0, #0
   1de0c:	and	r0, r0, #1
   1de10:	strb	r0, [sp, #7]
   1de14:	ldrb	r0, [sp, #7]
   1de18:	and	r0, r0, #1
   1de1c:	add	sp, sp, #8
   1de20:	bx	lr
   1de24:	sub	sp, sp, #8
   1de28:	str	r0, [sp]
   1de2c:	ldr	r0, [sp]
   1de30:	sub	r0, r0, #33	; 0x21
   1de34:	cmp	r0, #93	; 0x5d
   1de38:	bhi	1de50 <__assert_fail@plt+0xcd68>
   1de3c:	b	1de40 <__assert_fail@plt+0xcd58>
   1de40:	movw	r0, #1
   1de44:	and	r0, r0, #1
   1de48:	strb	r0, [sp, #7]
   1de4c:	b	1de5c <__assert_fail@plt+0xcd74>
   1de50:	movw	r0, #0
   1de54:	and	r0, r0, #1
   1de58:	strb	r0, [sp, #7]
   1de5c:	ldrb	r0, [sp, #7]
   1de60:	and	r0, r0, #1
   1de64:	add	sp, sp, #8
   1de68:	bx	lr
   1de6c:	sub	sp, sp, #8
   1de70:	str	r0, [sp]
   1de74:	ldr	r0, [sp]
   1de78:	sub	r0, r0, #97	; 0x61
   1de7c:	cmp	r0, #25
   1de80:	bhi	1de98 <__assert_fail@plt+0xcdb0>
   1de84:	b	1de88 <__assert_fail@plt+0xcda0>
   1de88:	movw	r0, #1
   1de8c:	and	r0, r0, #1
   1de90:	strb	r0, [sp, #7]
   1de94:	b	1dea4 <__assert_fail@plt+0xcdbc>
   1de98:	movw	r0, #0
   1de9c:	and	r0, r0, #1
   1dea0:	strb	r0, [sp, #7]
   1dea4:	ldrb	r0, [sp, #7]
   1dea8:	and	r0, r0, #1
   1deac:	add	sp, sp, #8
   1deb0:	bx	lr
   1deb4:	sub	sp, sp, #8
   1deb8:	str	r0, [sp]
   1debc:	ldr	r0, [sp]
   1dec0:	sub	r0, r0, #32
   1dec4:	cmp	r0, #94	; 0x5e
   1dec8:	bhi	1dee0 <__assert_fail@plt+0xcdf8>
   1decc:	b	1ded0 <__assert_fail@plt+0xcde8>
   1ded0:	movw	r0, #1
   1ded4:	and	r0, r0, #1
   1ded8:	strb	r0, [sp, #7]
   1dedc:	b	1deec <__assert_fail@plt+0xce04>
   1dee0:	movw	r0, #0
   1dee4:	and	r0, r0, #1
   1dee8:	strb	r0, [sp, #7]
   1deec:	ldrb	r0, [sp, #7]
   1def0:	and	r0, r0, #1
   1def4:	add	sp, sp, #8
   1def8:	bx	lr
   1defc:	sub	sp, sp, #12
   1df00:	str	r0, [sp, #4]
   1df04:	ldr	r0, [sp, #4]
   1df08:	sub	r0, r0, #33	; 0x21
   1df0c:	cmp	r0, #93	; 0x5d
   1df10:	str	r0, [sp]
   1df14:	bhi	1e0b0 <__assert_fail@plt+0xcfc8>
   1df18:	add	r0, pc, #8
   1df1c:	ldr	r1, [sp]
   1df20:	ldr	r0, [r0, r1, lsl #2]
   1df24:	mov	pc, r0
   1df28:	andeq	lr, r1, r0, lsr #1
   1df2c:	andeq	lr, r1, r0, lsr #1
   1df30:	andeq	lr, r1, r0, lsr #1
   1df34:	andeq	lr, r1, r0, lsr #1
   1df38:	andeq	lr, r1, r0, lsr #1
   1df3c:	andeq	lr, r1, r0, lsr #1
   1df40:	andeq	lr, r1, r0, lsr #1
   1df44:	andeq	lr, r1, r0, lsr #1
   1df48:	andeq	lr, r1, r0, lsr #1
   1df4c:	andeq	lr, r1, r0, lsr #1
   1df50:	andeq	lr, r1, r0, lsr #1
   1df54:	andeq	lr, r1, r0, lsr #1
   1df58:	andeq	lr, r1, r0, lsr #1
   1df5c:	andeq	lr, r1, r0, lsr #1
   1df60:	andeq	lr, r1, r0, lsr #1
   1df64:	strheq	lr, [r1], -r0
   1df68:	strheq	lr, [r1], -r0
   1df6c:	strheq	lr, [r1], -r0
   1df70:	strheq	lr, [r1], -r0
   1df74:	strheq	lr, [r1], -r0
   1df78:	strheq	lr, [r1], -r0
   1df7c:	strheq	lr, [r1], -r0
   1df80:	strheq	lr, [r1], -r0
   1df84:	strheq	lr, [r1], -r0
   1df88:	strheq	lr, [r1], -r0
   1df8c:	andeq	lr, r1, r0, lsr #1
   1df90:	andeq	lr, r1, r0, lsr #1
   1df94:	andeq	lr, r1, r0, lsr #1
   1df98:	andeq	lr, r1, r0, lsr #1
   1df9c:	andeq	lr, r1, r0, lsr #1
   1dfa0:	andeq	lr, r1, r0, lsr #1
   1dfa4:	andeq	lr, r1, r0, lsr #1
   1dfa8:	strheq	lr, [r1], -r0
   1dfac:	strheq	lr, [r1], -r0
   1dfb0:	strheq	lr, [r1], -r0
   1dfb4:	strheq	lr, [r1], -r0
   1dfb8:	strheq	lr, [r1], -r0
   1dfbc:	strheq	lr, [r1], -r0
   1dfc0:	strheq	lr, [r1], -r0
   1dfc4:	strheq	lr, [r1], -r0
   1dfc8:	strheq	lr, [r1], -r0
   1dfcc:	strheq	lr, [r1], -r0
   1dfd0:	strheq	lr, [r1], -r0
   1dfd4:	strheq	lr, [r1], -r0
   1dfd8:	strheq	lr, [r1], -r0
   1dfdc:	strheq	lr, [r1], -r0
   1dfe0:	strheq	lr, [r1], -r0
   1dfe4:	strheq	lr, [r1], -r0
   1dfe8:	strheq	lr, [r1], -r0
   1dfec:	strheq	lr, [r1], -r0
   1dff0:	strheq	lr, [r1], -r0
   1dff4:	strheq	lr, [r1], -r0
   1dff8:	strheq	lr, [r1], -r0
   1dffc:	strheq	lr, [r1], -r0
   1e000:	strheq	lr, [r1], -r0
   1e004:	strheq	lr, [r1], -r0
   1e008:	strheq	lr, [r1], -r0
   1e00c:	strheq	lr, [r1], -r0
   1e010:	andeq	lr, r1, r0, lsr #1
   1e014:	andeq	lr, r1, r0, lsr #1
   1e018:	andeq	lr, r1, r0, lsr #1
   1e01c:	andeq	lr, r1, r0, lsr #1
   1e020:	andeq	lr, r1, r0, lsr #1
   1e024:	andeq	lr, r1, r0, lsr #1
   1e028:	strheq	lr, [r1], -r0
   1e02c:	strheq	lr, [r1], -r0
   1e030:	strheq	lr, [r1], -r0
   1e034:	strheq	lr, [r1], -r0
   1e038:	strheq	lr, [r1], -r0
   1e03c:	strheq	lr, [r1], -r0
   1e040:	strheq	lr, [r1], -r0
   1e044:	strheq	lr, [r1], -r0
   1e048:	strheq	lr, [r1], -r0
   1e04c:	strheq	lr, [r1], -r0
   1e050:	strheq	lr, [r1], -r0
   1e054:	strheq	lr, [r1], -r0
   1e058:	strheq	lr, [r1], -r0
   1e05c:	strheq	lr, [r1], -r0
   1e060:	strheq	lr, [r1], -r0
   1e064:	strheq	lr, [r1], -r0
   1e068:	strheq	lr, [r1], -r0
   1e06c:	strheq	lr, [r1], -r0
   1e070:	strheq	lr, [r1], -r0
   1e074:	strheq	lr, [r1], -r0
   1e078:	strheq	lr, [r1], -r0
   1e07c:	strheq	lr, [r1], -r0
   1e080:	strheq	lr, [r1], -r0
   1e084:	strheq	lr, [r1], -r0
   1e088:	strheq	lr, [r1], -r0
   1e08c:	strheq	lr, [r1], -r0
   1e090:	andeq	lr, r1, r0, lsr #1
   1e094:	andeq	lr, r1, r0, lsr #1
   1e098:	andeq	lr, r1, r0, lsr #1
   1e09c:	andeq	lr, r1, r0, lsr #1
   1e0a0:	movw	r0, #1
   1e0a4:	and	r0, r0, #1
   1e0a8:	strb	r0, [sp, #11]
   1e0ac:	b	1e0bc <__assert_fail@plt+0xcfd4>
   1e0b0:	movw	r0, #0
   1e0b4:	and	r0, r0, #1
   1e0b8:	strb	r0, [sp, #11]
   1e0bc:	ldrb	r0, [sp, #11]
   1e0c0:	and	r0, r0, #1
   1e0c4:	add	sp, sp, #12
   1e0c8:	bx	lr
   1e0cc:	sub	sp, sp, #12
   1e0d0:	str	r0, [sp, #4]
   1e0d4:	ldr	r0, [sp, #4]
   1e0d8:	sub	r1, r0, #9
   1e0dc:	cmp	r1, #5
   1e0e0:	str	r0, [sp]
   1e0e4:	bcc	1e0fc <__assert_fail@plt+0xd014>
   1e0e8:	b	1e0ec <__assert_fail@plt+0xd004>
   1e0ec:	ldr	r0, [sp]
   1e0f0:	cmp	r0, #32
   1e0f4:	bne	1e10c <__assert_fail@plt+0xd024>
   1e0f8:	b	1e0fc <__assert_fail@plt+0xd014>
   1e0fc:	movw	r0, #1
   1e100:	and	r0, r0, #1
   1e104:	strb	r0, [sp, #11]
   1e108:	b	1e118 <__assert_fail@plt+0xd030>
   1e10c:	movw	r0, #0
   1e110:	and	r0, r0, #1
   1e114:	strb	r0, [sp, #11]
   1e118:	ldrb	r0, [sp, #11]
   1e11c:	and	r0, r0, #1
   1e120:	add	sp, sp, #12
   1e124:	bx	lr
   1e128:	sub	sp, sp, #8
   1e12c:	str	r0, [sp]
   1e130:	ldr	r0, [sp]
   1e134:	sub	r0, r0, #65	; 0x41
   1e138:	cmp	r0, #25
   1e13c:	bhi	1e154 <__assert_fail@plt+0xd06c>
   1e140:	b	1e144 <__assert_fail@plt+0xd05c>
   1e144:	movw	r0, #1
   1e148:	and	r0, r0, #1
   1e14c:	strb	r0, [sp, #7]
   1e150:	b	1e160 <__assert_fail@plt+0xd078>
   1e154:	movw	r0, #0
   1e158:	and	r0, r0, #1
   1e15c:	strb	r0, [sp, #7]
   1e160:	ldrb	r0, [sp, #7]
   1e164:	and	r0, r0, #1
   1e168:	add	sp, sp, #8
   1e16c:	bx	lr
   1e170:	sub	sp, sp, #12
   1e174:	str	r0, [sp, #4]
   1e178:	ldr	r0, [sp, #4]
   1e17c:	sub	r1, r0, #48	; 0x30
   1e180:	cmp	r1, #10
   1e184:	str	r0, [sp]
   1e188:	bcc	1e1b8 <__assert_fail@plt+0xd0d0>
   1e18c:	b	1e190 <__assert_fail@plt+0xd0a8>
   1e190:	ldr	r0, [sp]
   1e194:	sub	r1, r0, #65	; 0x41
   1e198:	cmp	r1, #6
   1e19c:	bcc	1e1b8 <__assert_fail@plt+0xd0d0>
   1e1a0:	b	1e1a4 <__assert_fail@plt+0xd0bc>
   1e1a4:	ldr	r0, [sp]
   1e1a8:	sub	r1, r0, #97	; 0x61
   1e1ac:	cmp	r1, #5
   1e1b0:	bhi	1e1c8 <__assert_fail@plt+0xd0e0>
   1e1b4:	b	1e1b8 <__assert_fail@plt+0xd0d0>
   1e1b8:	movw	r0, #1
   1e1bc:	and	r0, r0, #1
   1e1c0:	strb	r0, [sp, #11]
   1e1c4:	b	1e1d4 <__assert_fail@plt+0xd0ec>
   1e1c8:	movw	r0, #0
   1e1cc:	and	r0, r0, #1
   1e1d0:	strb	r0, [sp, #11]
   1e1d4:	ldrb	r0, [sp, #11]
   1e1d8:	and	r0, r0, #1
   1e1dc:	add	sp, sp, #12
   1e1e0:	bx	lr
   1e1e4:	sub	sp, sp, #8
   1e1e8:	str	r0, [sp]
   1e1ec:	ldr	r0, [sp]
   1e1f0:	sub	r0, r0, #65	; 0x41
   1e1f4:	cmp	r0, #25
   1e1f8:	bhi	1e214 <__assert_fail@plt+0xd12c>
   1e1fc:	b	1e200 <__assert_fail@plt+0xd118>
   1e200:	ldr	r0, [sp]
   1e204:	sub	r0, r0, #65	; 0x41
   1e208:	add	r0, r0, #97	; 0x61
   1e20c:	str	r0, [sp, #4]
   1e210:	b	1e21c <__assert_fail@plt+0xd134>
   1e214:	ldr	r0, [sp]
   1e218:	str	r0, [sp, #4]
   1e21c:	ldr	r0, [sp, #4]
   1e220:	add	sp, sp, #8
   1e224:	bx	lr
   1e228:	sub	sp, sp, #8
   1e22c:	str	r0, [sp]
   1e230:	ldr	r0, [sp]
   1e234:	sub	r0, r0, #97	; 0x61
   1e238:	cmp	r0, #25
   1e23c:	bhi	1e258 <__assert_fail@plt+0xd170>
   1e240:	b	1e244 <__assert_fail@plt+0xd15c>
   1e244:	ldr	r0, [sp]
   1e248:	sub	r0, r0, #97	; 0x61
   1e24c:	add	r0, r0, #65	; 0x41
   1e250:	str	r0, [sp, #4]
   1e254:	b	1e260 <__assert_fail@plt+0xd178>
   1e258:	ldr	r0, [sp]
   1e25c:	str	r0, [sp, #4]
   1e260:	ldr	r0, [sp, #4]
   1e264:	add	sp, sp, #8
   1e268:	bx	lr
   1e26c:	push	{r4, r5, fp, lr}
   1e270:	add	fp, sp, #8
   1e274:	sub	sp, sp, #272	; 0x110
   1e278:	add	r1, sp, #7
   1e27c:	str	r0, [fp, #-16]
   1e280:	ldr	r0, [fp, #-16]
   1e284:	movw	r2, #257	; 0x101
   1e288:	bl	1e308 <__assert_fail@plt+0xd220>
   1e28c:	cmp	r0, #0
   1e290:	beq	1e2a4 <__assert_fail@plt+0xd1bc>
   1e294:	movw	r0, #0
   1e298:	and	r0, r0, #1
   1e29c:	strb	r0, [fp, #-9]
   1e2a0:	b	1e2f8 <__assert_fail@plt+0xd210>
   1e2a4:	add	r0, sp, #7
   1e2a8:	movw	r1, #62251	; 0xf32b
   1e2ac:	movt	r1, #1
   1e2b0:	bl	10e90 <strcmp@plt>
   1e2b4:	cmp	r0, #0
   1e2b8:	movw	r0, #1
   1e2bc:	str	r0, [sp]
   1e2c0:	beq	1e2e4 <__assert_fail@plt+0xd1fc>
   1e2c4:	add	r0, sp, #7
   1e2c8:	movw	r1, #62253	; 0xf32d
   1e2cc:	movt	r1, #1
   1e2d0:	bl	10e90 <strcmp@plt>
   1e2d4:	cmp	r0, #0
   1e2d8:	movw	r0, #0
   1e2dc:	moveq	r0, #1
   1e2e0:	str	r0, [sp]
   1e2e4:	ldr	r0, [sp]
   1e2e8:	mvn	r1, #0
   1e2ec:	eor	r0, r0, r1
   1e2f0:	and	r0, r0, #1
   1e2f4:	strb	r0, [fp, #-9]
   1e2f8:	ldrb	r0, [fp, #-9]
   1e2fc:	and	r0, r0, #1
   1e300:	sub	sp, fp, #8
   1e304:	pop	{r4, r5, fp, pc}
   1e308:	push	{fp, lr}
   1e30c:	mov	fp, sp
   1e310:	sub	sp, sp, #16
   1e314:	str	r0, [fp, #-4]
   1e318:	str	r1, [sp, #8]
   1e31c:	str	r2, [sp, #4]
   1e320:	ldr	r0, [fp, #-4]
   1e324:	ldr	r1, [sp, #8]
   1e328:	ldr	r2, [sp, #4]
   1e32c:	bl	1e338 <__assert_fail@plt+0xd250>
   1e330:	mov	sp, fp
   1e334:	pop	{fp, pc}
   1e338:	push	{fp, lr}
   1e33c:	mov	fp, sp
   1e340:	sub	sp, sp, #24
   1e344:	str	r0, [fp, #-8]
   1e348:	str	r1, [sp, #12]
   1e34c:	str	r2, [sp, #8]
   1e350:	ldr	r0, [fp, #-8]
   1e354:	bl	1e438 <__assert_fail@plt+0xd350>
   1e358:	str	r0, [sp, #4]
   1e35c:	ldr	r0, [sp, #4]
   1e360:	movw	r1, #0
   1e364:	cmp	r0, r1
   1e368:	bne	1e390 <__assert_fail@plt+0xd2a8>
   1e36c:	ldr	r0, [sp, #8]
   1e370:	cmp	r0, #0
   1e374:	bls	1e384 <__assert_fail@plt+0xd29c>
   1e378:	ldr	r0, [sp, #12]
   1e37c:	movw	r1, #0
   1e380:	strb	r1, [r0]
   1e384:	movw	r0, #22
   1e388:	str	r0, [fp, #-4]
   1e38c:	b	1e40c <__assert_fail@plt+0xd324>
   1e390:	ldr	r0, [sp, #4]
   1e394:	bl	10fec <strlen@plt>
   1e398:	str	r0, [sp]
   1e39c:	ldr	r0, [sp]
   1e3a0:	ldr	r1, [sp, #8]
   1e3a4:	cmp	r0, r1
   1e3a8:	bcs	1e3cc <__assert_fail@plt+0xd2e4>
   1e3ac:	ldr	r0, [sp, #12]
   1e3b0:	ldr	r1, [sp, #4]
   1e3b4:	ldr	r2, [sp]
   1e3b8:	add	r2, r2, #1
   1e3bc:	bl	10ee4 <memcpy@plt>
   1e3c0:	movw	r0, #0
   1e3c4:	str	r0, [fp, #-4]
   1e3c8:	b	1e40c <__assert_fail@plt+0xd324>
   1e3cc:	ldr	r0, [sp, #8]
   1e3d0:	cmp	r0, #0
   1e3d4:	bls	1e404 <__assert_fail@plt+0xd31c>
   1e3d8:	ldr	r0, [sp, #12]
   1e3dc:	ldr	r1, [sp, #4]
   1e3e0:	ldr	r2, [sp, #8]
   1e3e4:	sub	r2, r2, #1
   1e3e8:	bl	10ee4 <memcpy@plt>
   1e3ec:	ldr	r0, [sp, #12]
   1e3f0:	ldr	r1, [sp, #8]
   1e3f4:	sub	r1, r1, #1
   1e3f8:	add	r0, r0, r1
   1e3fc:	movw	r1, #0
   1e400:	strb	r1, [r0]
   1e404:	movw	r0, #34	; 0x22
   1e408:	str	r0, [fp, #-4]
   1e40c:	ldr	r0, [fp, #-4]
   1e410:	mov	sp, fp
   1e414:	pop	{fp, pc}
   1e418:	push	{fp, lr}
   1e41c:	mov	fp, sp
   1e420:	sub	sp, sp, #8
   1e424:	str	r0, [sp, #4]
   1e428:	ldr	r0, [sp, #4]
   1e42c:	bl	1e438 <__assert_fail@plt+0xd350>
   1e430:	mov	sp, fp
   1e434:	pop	{fp, pc}
   1e438:	push	{fp, lr}
   1e43c:	mov	fp, sp
   1e440:	sub	sp, sp, #8
   1e444:	str	r0, [sp, #4]
   1e448:	ldr	r0, [sp, #4]
   1e44c:	movw	r1, #0
   1e450:	bl	11070 <setlocale@plt>
   1e454:	str	r0, [sp]
   1e458:	ldr	r0, [sp]
   1e45c:	mov	sp, fp
   1e460:	pop	{fp, pc}
   1e464:	cmp	r3, #0
   1e468:	cmpeq	r2, #0
   1e46c:	bne	1e490 <__assert_fail@plt+0xd3a8>
   1e470:	cmp	r1, #0
   1e474:	movlt	r1, #-2147483648	; 0x80000000
   1e478:	movlt	r0, #0
   1e47c:	blt	1e48c <__assert_fail@plt+0xd3a4>
   1e480:	cmpeq	r0, #0
   1e484:	mvnne	r1, #-2147483648	; 0x80000000
   1e488:	mvnne	r0, #0
   1e48c:	b	1e574 <__assert_fail@plt+0xd48c>
   1e490:	sub	sp, sp, #8
   1e494:	push	{sp, lr}
   1e498:	cmp	r1, #0
   1e49c:	blt	1e4bc <__assert_fail@plt+0xd3d4>
   1e4a0:	cmp	r3, #0
   1e4a4:	blt	1e4f0 <__assert_fail@plt+0xd408>
   1e4a8:	bl	1e584 <__assert_fail@plt+0xd49c>
   1e4ac:	ldr	lr, [sp, #4]
   1e4b0:	add	sp, sp, #8
   1e4b4:	pop	{r2, r3}
   1e4b8:	bx	lr
   1e4bc:	rsbs	r0, r0, #0
   1e4c0:	sbc	r1, r1, r1, lsl #1
   1e4c4:	cmp	r3, #0
   1e4c8:	blt	1e514 <__assert_fail@plt+0xd42c>
   1e4cc:	bl	1e584 <__assert_fail@plt+0xd49c>
   1e4d0:	ldr	lr, [sp, #4]
   1e4d4:	add	sp, sp, #8
   1e4d8:	pop	{r2, r3}
   1e4dc:	rsbs	r0, r0, #0
   1e4e0:	sbc	r1, r1, r1, lsl #1
   1e4e4:	rsbs	r2, r2, #0
   1e4e8:	sbc	r3, r3, r3, lsl #1
   1e4ec:	bx	lr
   1e4f0:	rsbs	r2, r2, #0
   1e4f4:	sbc	r3, r3, r3, lsl #1
   1e4f8:	bl	1e584 <__assert_fail@plt+0xd49c>
   1e4fc:	ldr	lr, [sp, #4]
   1e500:	add	sp, sp, #8
   1e504:	pop	{r2, r3}
   1e508:	rsbs	r0, r0, #0
   1e50c:	sbc	r1, r1, r1, lsl #1
   1e510:	bx	lr
   1e514:	rsbs	r2, r2, #0
   1e518:	sbc	r3, r3, r3, lsl #1
   1e51c:	bl	1e584 <__assert_fail@plt+0xd49c>
   1e520:	ldr	lr, [sp, #4]
   1e524:	add	sp, sp, #8
   1e528:	pop	{r2, r3}
   1e52c:	rsbs	r2, r2, #0
   1e530:	sbc	r3, r3, r3, lsl #1
   1e534:	bx	lr
   1e538:	cmp	r3, #0
   1e53c:	cmpeq	r2, #0
   1e540:	bne	1e558 <__assert_fail@plt+0xd470>
   1e544:	cmp	r1, #0
   1e548:	cmpeq	r0, #0
   1e54c:	mvnne	r1, #0
   1e550:	mvnne	r0, #0
   1e554:	b	1e574 <__assert_fail@plt+0xd48c>
   1e558:	sub	sp, sp, #8
   1e55c:	push	{sp, lr}
   1e560:	bl	1e584 <__assert_fail@plt+0xd49c>
   1e564:	ldr	lr, [sp, #4]
   1e568:	add	sp, sp, #8
   1e56c:	pop	{r2, r3}
   1e570:	bx	lr
   1e574:	push	{r1, lr}
   1e578:	mov	r0, #8
   1e57c:	bl	10e84 <raise@plt>
   1e580:	pop	{r1, pc}
   1e584:	cmp	r1, r3
   1e588:	cmpeq	r0, r2
   1e58c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e590:	mov	r4, r0
   1e594:	movcc	r0, #0
   1e598:	mov	r5, r1
   1e59c:	ldr	lr, [sp, #36]	; 0x24
   1e5a0:	movcc	r1, r0
   1e5a4:	bcc	1e6a0 <__assert_fail@plt+0xd5b8>
   1e5a8:	cmp	r3, #0
   1e5ac:	clzeq	ip, r2
   1e5b0:	clzne	ip, r3
   1e5b4:	addeq	ip, ip, #32
   1e5b8:	cmp	r5, #0
   1e5bc:	clzeq	r1, r4
   1e5c0:	addeq	r1, r1, #32
   1e5c4:	clzne	r1, r5
   1e5c8:	sub	ip, ip, r1
   1e5cc:	sub	sl, ip, #32
   1e5d0:	lsl	r9, r3, ip
   1e5d4:	rsb	fp, ip, #32
   1e5d8:	orr	r9, r9, r2, lsl sl
   1e5dc:	orr	r9, r9, r2, lsr fp
   1e5e0:	lsl	r8, r2, ip
   1e5e4:	cmp	r5, r9
   1e5e8:	cmpeq	r4, r8
   1e5ec:	movcc	r0, #0
   1e5f0:	movcc	r1, r0
   1e5f4:	bcc	1e610 <__assert_fail@plt+0xd528>
   1e5f8:	mov	r0, #1
   1e5fc:	subs	r4, r4, r8
   1e600:	lsl	r1, r0, sl
   1e604:	orr	r1, r1, r0, lsr fp
   1e608:	lsl	r0, r0, ip
   1e60c:	sbc	r5, r5, r9
   1e610:	cmp	ip, #0
   1e614:	beq	1e6a0 <__assert_fail@plt+0xd5b8>
   1e618:	lsr	r6, r8, #1
   1e61c:	orr	r6, r6, r9, lsl #31
   1e620:	lsr	r7, r9, #1
   1e624:	mov	r2, ip
   1e628:	b	1e64c <__assert_fail@plt+0xd564>
   1e62c:	subs	r3, r4, r6
   1e630:	sbc	r8, r5, r7
   1e634:	adds	r3, r3, r3
   1e638:	adc	r8, r8, r8
   1e63c:	adds	r4, r3, #1
   1e640:	adc	r5, r8, #0
   1e644:	subs	r2, r2, #1
   1e648:	beq	1e668 <__assert_fail@plt+0xd580>
   1e64c:	cmp	r5, r7
   1e650:	cmpeq	r4, r6
   1e654:	bcs	1e62c <__assert_fail@plt+0xd544>
   1e658:	adds	r4, r4, r4
   1e65c:	adc	r5, r5, r5
   1e660:	subs	r2, r2, #1
   1e664:	bne	1e64c <__assert_fail@plt+0xd564>
   1e668:	lsr	r3, r4, ip
   1e66c:	orr	r3, r3, r5, lsl fp
   1e670:	lsr	r2, r5, ip
   1e674:	orr	r3, r3, r5, lsr sl
   1e678:	adds	r0, r0, r4
   1e67c:	mov	r4, r3
   1e680:	lsl	r3, r2, ip
   1e684:	orr	r3, r3, r4, lsl sl
   1e688:	lsl	ip, r4, ip
   1e68c:	orr	r3, r3, r4, lsr fp
   1e690:	adc	r1, r1, r5
   1e694:	subs	r0, r0, ip
   1e698:	mov	r5, r2
   1e69c:	sbc	r1, r1, r3
   1e6a0:	cmp	lr, #0
   1e6a4:	strdne	r4, [lr]
   1e6a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e6b0:	mov	r7, r0
   1e6b4:	ldr	r6, [pc, #72]	; 1e704 <__assert_fail@plt+0xd61c>
   1e6b8:	ldr	r5, [pc, #72]	; 1e708 <__assert_fail@plt+0xd620>
   1e6bc:	add	r6, pc, r6
   1e6c0:	add	r5, pc, r5
   1e6c4:	sub	r6, r6, r5
   1e6c8:	mov	r8, r1
   1e6cc:	mov	r9, r2
   1e6d0:	bl	10e4c <calloc@plt-0x20>
   1e6d4:	asrs	r6, r6, #2
   1e6d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e6dc:	mov	r4, #0
   1e6e0:	add	r4, r4, #1
   1e6e4:	ldr	r3, [r5], #4
   1e6e8:	mov	r2, r9
   1e6ec:	mov	r1, r8
   1e6f0:	mov	r0, r7
   1e6f4:	blx	r3
   1e6f8:	cmp	r6, r4
   1e6fc:	bne	1e6e0 <__assert_fail@plt+0xd5f8>
   1e700:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e704:	andeq	r1, r1, r8, asr #16
   1e708:	andeq	r1, r1, r0, asr #16
   1e70c:	bx	lr
   1e710:	ldr	r3, [pc, #12]	; 1e724 <__assert_fail@plt+0xd63c>
   1e714:	mov	r1, #0
   1e718:	add	r3, pc, r3
   1e71c:	ldr	r2, [r3]
   1e720:	b	1101c <__cxa_atexit@plt>
   1e724:	andeq	r1, r1, ip, asr #19

Disassembly of section .fini:

0001e728 <.fini>:
   1e728:	push	{r3, lr}
   1e72c:	pop	{r3, pc}
