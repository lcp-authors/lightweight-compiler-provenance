
../repos/sgerbino-table-2fdd8d0/bin/table_row_test:     file format elf32-littlearm


Disassembly of section .init:

00011ad8 <.init>:
   11ad8:	push	{r3, lr}
   11adc:	bl	11c78 <_start@@Base+0x3c>
   11ae0:	pop	{r3, pc}

Disassembly of section .plt:

00011ae4 <raise@plt-0x14>:
   11ae4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ae8:	ldr	lr, [pc, #4]	; 11af4 <raise@plt-0x4>
   11aec:	add	lr, pc, lr
   11af0:	ldr	pc, [lr, #8]!
   11af4:	andeq	r3, r1, ip, lsl #10

00011af8 <raise@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #77824	; 0x13000
   11b00:	ldr	pc, [ip, #1292]!	; 0x50c

00011b04 <strcmp@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #77824	; 0x13000
   11b0c:	ldr	pc, [ip, #1284]!	; 0x504

00011b10 <printf@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #77824	; 0x13000
   11b18:	ldr	pc, [ip, #1276]!	; 0x4fc

00011b1c <free@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #77824	; 0x13000
   11b24:	ldr	pc, [ip, #1268]!	; 0x4f4

00011b28 <time@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #77824	; 0x13000
   11b30:	ldr	pc, [ip, #1260]!	; 0x4ec

00011b34 <realloc@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #77824	; 0x13000
   11b3c:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b40 <strcpy@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #77824	; 0x13000
   11b48:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b4c <malloc@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #77824	; 0x13000
   11b54:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b58 <__libc_start_main@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #77824	; 0x13000
   11b60:	ldr	pc, [ip, #1228]!	; 0x4cc

00011b64 <__gmon_start__@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #77824	; 0x13000
   11b6c:	ldr	pc, [ip, #1220]!	; 0x4c4

00011b70 <strlen@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #77824	; 0x13000
   11b78:	ldr	pc, [ip, #1212]!	; 0x4bc

00011b7c <srand@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #77824	; 0x13000
   11b84:	ldr	pc, [ip, #1204]!	; 0x4b4

00011b88 <snprintf@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #77824	; 0x13000
   11b90:	ldr	pc, [ip, #1196]!	; 0x4ac

00011b94 <__isoc99_sscanf@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #77824	; 0x13000
   11b9c:	ldr	pc, [ip, #1188]!	; 0x4a4

00011ba0 <rand@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #77824	; 0x13000
   11ba8:	ldr	pc, [ip, #1180]!	; 0x49c

00011bac <abort@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #77824	; 0x13000
   11bb4:	ldr	pc, [ip, #1172]!	; 0x494

Disassembly of section .text:

00011bb8 <main@@Base>:
   11bb8:	push	{r4, r5, lr}
   11bbc:	sub	sp, sp, #68	; 0x44
   11bc0:	add	r0, sp, #4
   11bc4:	bl	11b28 <time@plt>
   11bc8:	bl	11b7c <srand@plt>
   11bcc:	bl	11ba0 <rand@plt>
   11bd0:	mov	r1, #100	; 0x64
   11bd4:	bl	14214 <table_cell_nullify@@Base+0x218>
   11bd8:	add	r0, sp, #8
   11bdc:	mov	r5, #0
   11be0:	add	r4, r1, #100	; 0x64
   11be4:	bl	11d64 <table_init@@Base>
   11be8:	add	r0, sp, #8
   11bec:	add	r5, r5, #1
   11bf0:	bl	12f58 <table_add_row@@Base>
   11bf4:	cmp	r4, r5
   11bf8:	bgt	11be8 <main@@Base+0x30>
   11bfc:	add	r0, sp, #8
   11c00:	bl	12f50 <table_get_row_length@@Base>
   11c04:	cmp	r4, r0
   11c08:	mov	r2, r0
   11c0c:	moveq	r4, #0
   11c10:	beq	11c24 <main@@Base+0x6c>
   11c14:	mov	r1, r4
   11c18:	ldr	r0, [pc, #24]	; 11c38 <main@@Base+0x80>
   11c1c:	bl	11b10 <printf@plt>
   11c20:	mvn	r4, #0
   11c24:	add	r0, sp, #8
   11c28:	bl	11dc4 <table_destroy@@Base>
   11c2c:	mov	r0, r4
   11c30:	add	sp, sp, #68	; 0x44
   11c34:	pop	{r4, r5, pc}
   11c38:			; <UNDEFINED> instruction: 0x000142b4

00011c3c <_start@@Base>:
   11c3c:	mov	fp, #0
   11c40:	mov	lr, #0
   11c44:	pop	{r1}		; (ldr r1, [sp], #4)
   11c48:	mov	r2, sp
   11c4c:	push	{r2}		; (str r2, [sp, #-4]!)
   11c50:	push	{r0}		; (str r0, [sp, #-4]!)
   11c54:	ldr	ip, [pc, #16]	; 11c6c <_start@@Base+0x30>
   11c58:	push	{ip}		; (str ip, [sp, #-4]!)
   11c5c:	ldr	r0, [pc, #12]	; 11c70 <_start@@Base+0x34>
   11c60:	ldr	r3, [pc, #12]	; 11c74 <_start@@Base+0x38>
   11c64:	bl	11b58 <__libc_start_main@plt>
   11c68:	bl	11bac <abort@plt>
   11c6c:	andeq	r4, r1, r4, lsr #5
   11c70:			; <UNDEFINED> instruction: 0x00011bb8
   11c74:	andeq	r4, r1, r4, asr #4
   11c78:	ldr	r3, [pc, #20]	; 11c94 <_start@@Base+0x58>
   11c7c:	ldr	r2, [pc, #20]	; 11c98 <_start@@Base+0x5c>
   11c80:	add	r3, pc, r3
   11c84:	ldr	r2, [r3, r2]
   11c88:	cmp	r2, #0
   11c8c:	bxeq	lr
   11c90:	b	11b64 <__gmon_start__@plt>
   11c94:	andeq	r3, r1, r8, ror r3
   11c98:	andeq	r0, r0, ip, asr #32
   11c9c:	ldr	r3, [pc, #28]	; 11cc0 <_start@@Base+0x84>
   11ca0:	ldr	r0, [pc, #28]	; 11cc4 <_start@@Base+0x88>
   11ca4:	sub	r3, r3, r0
   11ca8:	cmp	r3, #6
   11cac:	bxls	lr
   11cb0:	ldr	r3, [pc, #16]	; 11cc8 <_start@@Base+0x8c>
   11cb4:	cmp	r3, #0
   11cb8:	bxeq	lr
   11cbc:	bx	r3
   11cc0:	andeq	r5, r2, fp, asr r0
   11cc4:	andeq	r5, r2, r8, asr r0
   11cc8:	andeq	r0, r0, r0
   11ccc:	ldr	r1, [pc, #36]	; 11cf8 <_start@@Base+0xbc>
   11cd0:	ldr	r0, [pc, #36]	; 11cfc <_start@@Base+0xc0>
   11cd4:	sub	r1, r1, r0
   11cd8:	asr	r1, r1, #2
   11cdc:	add	r1, r1, r1, lsr #31
   11ce0:	asrs	r1, r1, #1
   11ce4:	bxeq	lr
   11ce8:	ldr	r3, [pc, #16]	; 11d00 <_start@@Base+0xc4>
   11cec:	cmp	r3, #0
   11cf0:	bxeq	lr
   11cf4:	bx	r3
   11cf8:	andeq	r5, r2, r8, asr r0
   11cfc:	andeq	r5, r2, r8, asr r0
   11d00:	andeq	r0, r0, r0
   11d04:	push	{r4, lr}
   11d08:	ldr	r4, [pc, #24]	; 11d28 <_start@@Base+0xec>
   11d0c:	ldrb	r3, [r4]
   11d10:	cmp	r3, #0
   11d14:	popne	{r4, pc}
   11d18:	bl	11c9c <_start@@Base+0x60>
   11d1c:	mov	r3, #1
   11d20:	strb	r3, [r4]
   11d24:	pop	{r4, pc}
   11d28:	andeq	r5, r2, r8, asr r0
   11d2c:	ldr	r0, [pc, #40]	; 11d5c <_start@@Base+0x120>
   11d30:	ldr	r3, [r0]
   11d34:	cmp	r3, #0
   11d38:	bne	11d40 <_start@@Base+0x104>
   11d3c:	b	11ccc <_start@@Base+0x90>
   11d40:	ldr	r3, [pc, #24]	; 11d60 <_start@@Base+0x124>
   11d44:	cmp	r3, #0
   11d48:	beq	11d3c <_start@@Base+0x100>
   11d4c:	push	{r4, lr}
   11d50:	blx	r3
   11d54:	pop	{r4, lr}
   11d58:	b	11ccc <_start@@Base+0x90>
   11d5c:	andeq	r4, r2, r4, lsl pc
   11d60:	andeq	r0, r0, r0

00011d64 <table_init@@Base>:
   11d64:	mov	r3, #0
   11d68:	mov	r2, #10
   11d6c:	mov	r1, #20
   11d70:	str	r3, [r0]
   11d74:	str	r3, [r0, #4]
   11d78:	str	r3, [r0, #12]
   11d7c:	str	r2, [r0, #8]
   11d80:	str	r3, [r0, #16]
   11d84:	str	r3, [r0, #20]
   11d88:	str	r3, [r0, #28]
   11d8c:	str	r1, [r0, #24]
   11d90:	str	r3, [r0, #36]	; 0x24
   11d94:	str	r3, [r0, #40]	; 0x28
   11d98:	str	r3, [r0, #44]	; 0x2c
   11d9c:	str	r3, [r0, #32]
   11da0:	str	r3, [r0, #52]	; 0x34
   11da4:	str	r2, [r0, #48]	; 0x30
   11da8:	bx	lr

00011dac <table_new@@Base>:
   11dac:	push	{r4, lr}
   11db0:	mov	r0, #56	; 0x38
   11db4:	bl	11b4c <malloc@plt>
   11db8:	mov	r4, r0
   11dbc:	bl	11d64 <table_init@@Base>
   11dc0:	pop	{r4, pc}

00011dc4 <table_destroy@@Base>:
   11dc4:	push	{r4, r5, r6, lr}
   11dc8:	subs	r4, r0, #0
   11dcc:	popeq	{r4, r5, r6, pc}
   11dd0:	mvn	r2, #0
   11dd4:	mov	r3, #64	; 0x40
   11dd8:	mov	r1, r2
   11ddc:	bl	125a0 <table_notify@@Base>
   11de0:	mov	r0, r4
   11de4:	bl	12f50 <table_get_row_length@@Base>
   11de8:	mov	r5, #0
   11dec:	mov	r6, r0
   11df0:	cmp	r6, r5
   11df4:	bgt	11e64 <table_destroy@@Base+0xa0>
   11df8:	ldr	r0, [r4, #16]
   11dfc:	cmp	r0, #0
   11e00:	beq	11e08 <table_destroy@@Base+0x44>
   11e04:	bl	11b1c <free@plt>
   11e08:	mov	r0, r4
   11e0c:	bl	12678 <table_get_column_length@@Base>
   11e10:	mov	r5, #0
   11e14:	mov	r6, r0
   11e18:	cmp	r6, r5
   11e1c:	bgt	11e78 <table_destroy@@Base+0xb4>
   11e20:	ldr	r0, [r4]
   11e24:	cmp	r0, #0
   11e28:	beq	11e30 <table_destroy@@Base+0x6c>
   11e2c:	bl	11b1c <free@plt>
   11e30:	ldr	r0, [r4, #36]	; 0x24
   11e34:	cmp	r0, #0
   11e38:	beq	11e40 <table_destroy@@Base+0x7c>
   11e3c:	bl	11b1c <free@plt>
   11e40:	ldr	r0, [r4, #40]	; 0x28
   11e44:	cmp	r0, #0
   11e48:	beq	11e50 <table_destroy@@Base+0x8c>
   11e4c:	bl	11b1c <free@plt>
   11e50:	ldr	r0, [r4, #44]	; 0x2c
   11e54:	cmp	r0, #0
   11e58:	popeq	{r4, r5, r6, pc}
   11e5c:	pop	{r4, r5, r6, lr}
   11e60:	b	11b1c <free@plt>
   11e64:	mov	r1, r5
   11e68:	mov	r0, r4
   11e6c:	bl	12f00 <table_row_destroy@@Base>
   11e70:	add	r5, r5, #1
   11e74:	b	11df0 <table_destroy@@Base+0x2c>
   11e78:	mov	r1, r5
   11e7c:	mov	r0, r4
   11e80:	bl	1265c <table_column_destroy@@Base>
   11e84:	add	r5, r5, #1
   11e88:	b	11e18 <table_destroy@@Base+0x54>

00011e8c <table_delete@@Base>:
   11e8c:	push	{r4, lr}
   11e90:	mov	r4, r0
   11e94:	bl	11dc4 <table_destroy@@Base>
   11e98:	mov	r0, r4
   11e9c:	pop	{r4, lr}
   11ea0:	b	11b1c <free@plt>

00011ea4 <table_dupe@@Base>:
   11ea4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11ea8:	sub	sp, sp, #20
   11eac:	mov	r6, r0
   11eb0:	bl	12f50 <table_get_row_length@@Base>
   11eb4:	mov	r4, #0
   11eb8:	mov	r9, r0
   11ebc:	mov	r0, r6
   11ec0:	bl	12678 <table_get_column_length@@Base>
   11ec4:	mov	r8, r0
   11ec8:	bl	11dac <table_new@@Base>
   11ecc:	mov	r7, r0
   11ed0:	cmp	r4, r8
   11ed4:	blt	11ef0 <table_dupe@@Base+0x4c>
   11ed8:	mov	r5, #0
   11edc:	cmp	r5, r9
   11ee0:	mov	r0, r7
   11ee4:	blt	11f24 <table_dupe@@Base+0x80>
   11ee8:	add	sp, sp, #20
   11eec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ef0:	mov	r1, r4
   11ef4:	mov	r0, r6
   11ef8:	bl	1294c <table_get_column_name@@Base>
   11efc:	mov	r1, r4
   11f00:	add	r4, r4, #1
   11f04:	mov	r5, r0
   11f08:	mov	r0, r6
   11f0c:	bl	126d0 <table_get_column_data_type@@Base>
   11f10:	mov	r1, r5
   11f14:	mov	r2, r0
   11f18:	mov	r0, r7
   11f1c:	bl	126e4 <table_add_column@@Base>
   11f20:	b	11ed0 <table_dupe@@Base+0x2c>
   11f24:	bl	12f58 <table_add_row@@Base>
   11f28:	mov	r4, #0
   11f2c:	cmp	r4, r8
   11f30:	addge	r5, r5, #1
   11f34:	bge	11edc <table_dupe@@Base+0x38>
   11f38:	mov	r1, r4
   11f3c:	mov	r0, r6
   11f40:	bl	126d0 <table_get_column_data_type@@Base>
   11f44:	cmp	r0, #23
   11f48:	ldrls	pc, [pc, r0, lsl #2]
   11f4c:	b	11fd4 <table_dupe@@Base+0x130>
   11f50:			; <UNDEFINED> instruction: 0x00011fb0
   11f54:	ldrdeq	r1, [r1], -ip
   11f58:	andeq	r2, r1, r4
   11f5c:	andeq	r2, r1, ip, lsr #32
   11f60:	andeq	r2, r1, r4, asr r0
   11f64:	andeq	r2, r1, ip, ror r0
   11f68:	andeq	r2, r1, r4, lsr #1
   11f6c:	andeq	r2, r1, ip, asr #1
   11f70:	strdeq	r2, [r1], -r4
   11f74:	andeq	r2, r1, ip, lsl r1
   11f78:	andeq	r2, r1, r4, asr #2
   11f7c:	andeq	r2, r1, ip, ror #2
   11f80:	muleq	r1, r4, r1
   11f84:			; <UNDEFINED> instruction: 0x000121bc
   11f88:	andeq	r2, r1, r4, ror #3
   11f8c:	andeq	r2, r1, ip, lsl #4
   11f90:	andeq	r2, r1, ip, asr r2
   11f94:	andeq	r2, r1, r0, lsl #5
   11f98:	andeq	r2, r1, r4, lsr #5
   11f9c:	strdeq	r2, [r1], -r0
   11fa0:	andeq	r2, r1, r8, lsl r3
   11fa4:	andeq	r2, r1, r4, lsr r2
   11fa8:	andeq	r2, r1, r8, asr #5
   11fac:	andeq	r2, r1, r0, asr #6
   11fb0:	mov	r2, r4
   11fb4:	mov	r1, r5
   11fb8:	mov	r0, r6
   11fbc:	bl	12e08 <table_get_int@@Base>
   11fc0:	mov	r2, r4
   11fc4:	mov	r1, r5
   11fc8:	mov	r3, r0
   11fcc:	mov	r0, r7
   11fd0:	bl	13414 <table_set_int@@Base>
   11fd4:	add	r4, r4, #1
   11fd8:	b	11f2c <table_dupe@@Base+0x88>
   11fdc:	mov	r2, r4
   11fe0:	mov	r1, r5
   11fe4:	mov	r0, r6
   11fe8:	bl	12e1c <table_get_uint@@Base>
   11fec:	mov	r2, r4
   11ff0:	mov	r1, r5
   11ff4:	mov	r3, r0
   11ff8:	mov	r0, r7
   11ffc:	bl	13438 <table_set_uint@@Base>
   12000:	b	11fd4 <table_dupe@@Base+0x130>
   12004:	mov	r2, r4
   12008:	mov	r1, r5
   1200c:	mov	r0, r6
   12010:	bl	12de8 <table_get_int8@@Base>
   12014:	mov	r2, r4
   12018:	mov	r1, r5
   1201c:	mov	r3, r0
   12020:	mov	r0, r7
   12024:	bl	1345c <table_set_int8@@Base>
   12028:	b	11fd4 <table_dupe@@Base+0x130>
   1202c:	mov	r2, r4
   12030:	mov	r1, r5
   12034:	mov	r0, r6
   12038:	bl	12ed4 <table_get_uint8@@Base>
   1203c:	mov	r2, r4
   12040:	mov	r1, r5
   12044:	mov	r3, r0
   12048:	mov	r0, r7
   1204c:	bl	13480 <table_set_uint8@@Base>
   12050:	b	11fd4 <table_dupe@@Base+0x130>
   12054:	mov	r2, r4
   12058:	mov	r1, r5
   1205c:	mov	r0, r6
   12060:	bl	12e30 <table_get_int16@@Base>
   12064:	mov	r2, r4
   12068:	mov	r1, r5
   1206c:	mov	r3, r0
   12070:	mov	r0, r7
   12074:	bl	134a4 <table_set_int16@@Base>
   12078:	b	11fd4 <table_dupe@@Base+0x130>
   1207c:	mov	r2, r4
   12080:	mov	r1, r5
   12084:	mov	r0, r6
   12088:	bl	12e44 <table_get_uint16@@Base>
   1208c:	mov	r2, r4
   12090:	mov	r1, r5
   12094:	mov	r3, r0
   12098:	mov	r0, r7
   1209c:	bl	134c8 <table_set_uint16@@Base>
   120a0:	b	11fd4 <table_dupe@@Base+0x130>
   120a4:	mov	r2, r4
   120a8:	mov	r1, r5
   120ac:	mov	r0, r6
   120b0:	bl	12df8 <table_get_int32@@Base>
   120b4:	mov	r2, r4
   120b8:	mov	r1, r5
   120bc:	mov	r3, r0
   120c0:	mov	r0, r7
   120c4:	bl	134ec <table_set_int32@@Base>
   120c8:	b	11fd4 <table_dupe@@Base+0x130>
   120cc:	mov	r2, r4
   120d0:	mov	r1, r5
   120d4:	mov	r0, r6
   120d8:	bl	12e0c <table_get_uint32@@Base>
   120dc:	mov	r2, r4
   120e0:	mov	r1, r5
   120e4:	mov	r3, r0
   120e8:	mov	r0, r7
   120ec:	bl	13510 <table_set_uint32@@Base>
   120f0:	b	11fd4 <table_dupe@@Base+0x130>
   120f4:	mov	r2, r4
   120f8:	mov	r1, r5
   120fc:	mov	r0, r6
   12100:	bl	12e78 <table_get_int64@@Base>
   12104:	mov	r2, r4
   12108:	strd	r0, [sp]
   1210c:	mov	r1, r5
   12110:	mov	r0, r7
   12114:	bl	13534 <table_set_int64@@Base>
   12118:	b	11fd4 <table_dupe@@Base+0x130>
   1211c:	mov	r2, r4
   12120:	mov	r1, r5
   12124:	mov	r0, r6
   12128:	bl	12e8c <table_get_uint64@@Base>
   1212c:	mov	r2, r4
   12130:	strd	r0, [sp]
   12134:	mov	r1, r5
   12138:	mov	r0, r7
   1213c:	bl	13550 <table_set_uint64@@Base>
   12140:	b	11fd4 <table_dupe@@Base+0x130>
   12144:	mov	r2, r4
   12148:	mov	r1, r5
   1214c:	mov	r0, r6
   12150:	bl	12e20 <table_get_short@@Base>
   12154:	mov	r2, r4
   12158:	mov	r1, r5
   1215c:	mov	r3, r0
   12160:	mov	r0, r7
   12164:	bl	1356c <table_set_short@@Base>
   12168:	b	11fd4 <table_dupe@@Base+0x130>
   1216c:	mov	r2, r4
   12170:	mov	r1, r5
   12174:	mov	r0, r6
   12178:	bl	12e34 <table_get_ushort@@Base>
   1217c:	mov	r2, r4
   12180:	mov	r1, r5
   12184:	mov	r3, r0
   12188:	mov	r0, r7
   1218c:	bl	13590 <table_set_ushort@@Base>
   12190:	b	11fd4 <table_dupe@@Base+0x130>
   12194:	mov	r2, r4
   12198:	mov	r1, r5
   1219c:	mov	r0, r6
   121a0:	bl	12e48 <table_get_long@@Base>
   121a4:	mov	r2, r4
   121a8:	mov	r1, r5
   121ac:	mov	r3, r0
   121b0:	mov	r0, r7
   121b4:	bl	135b4 <table_set_long@@Base>
   121b8:	b	11fd4 <table_dupe@@Base+0x130>
   121bc:	mov	r2, r4
   121c0:	mov	r1, r5
   121c4:	mov	r0, r6
   121c8:	bl	12e58 <table_get_ulong@@Base>
   121cc:	mov	r2, r4
   121d0:	mov	r1, r5
   121d4:	mov	r3, r0
   121d8:	mov	r0, r7
   121dc:	bl	135d8 <table_set_ulong@@Base>
   121e0:	b	11fd4 <table_dupe@@Base+0x130>
   121e4:	mov	r2, r4
   121e8:	mov	r1, r5
   121ec:	mov	r0, r6
   121f0:	bl	12e68 <table_get_llong@@Base>
   121f4:	mov	r2, r4
   121f8:	strd	r0, [sp]
   121fc:	mov	r1, r5
   12200:	mov	r0, r7
   12204:	bl	135fc <table_set_llong@@Base>
   12208:	b	11fd4 <table_dupe@@Base+0x130>
   1220c:	mov	r2, r4
   12210:	mov	r1, r5
   12214:	mov	r0, r6
   12218:	bl	12e7c <table_get_ullong@@Base>
   1221c:	mov	r2, r4
   12220:	strd	r0, [sp]
   12224:	mov	r1, r5
   12228:	mov	r0, r7
   1222c:	bl	13618 <table_set_ullong@@Base>
   12230:	b	11fd4 <table_dupe@@Base+0x130>
   12234:	mov	r2, r4
   12238:	mov	r1, r5
   1223c:	mov	r0, r6
   12240:	bl	12ed8 <table_get_string@@Base>
   12244:	mov	r2, r4
   12248:	mov	r1, r5
   1224c:	mov	r3, r0
   12250:	mov	r0, r7
   12254:	bl	13694 <table_set_string@@Base>
   12258:	b	11fd4 <table_dupe@@Base+0x130>
   1225c:	mov	r2, r4
   12260:	mov	r1, r5
   12264:	mov	r0, r6
   12268:	bl	12e90 <table_get_float@@Base>
   1226c:	mov	r2, r4
   12270:	mov	r1, r5
   12274:	mov	r0, r7
   12278:	bl	13634 <table_set_float@@Base>
   1227c:	b	11fd4 <table_dupe@@Base+0x130>
   12280:	mov	r2, r4
   12284:	mov	r1, r5
   12288:	mov	r0, r6
   1228c:	bl	12ea0 <table_get_double@@Base>
   12290:	mov	r2, r4
   12294:	mov	r1, r5
   12298:	mov	r0, r7
   1229c:	bl	13654 <table_set_double@@Base>
   122a0:	b	11fd4 <table_dupe@@Base+0x130>
   122a4:	mov	r2, r4
   122a8:	mov	r1, r5
   122ac:	mov	r0, r6
   122b0:	bl	12eb0 <table_get_ldouble@@Base>
   122b4:	mov	r2, r4
   122b8:	mov	r1, r5
   122bc:	mov	r0, r7
   122c0:	bl	13674 <table_set_ldouble@@Base>
   122c4:	b	11fd4 <table_dupe@@Base+0x130>
   122c8:	mov	r2, r4
   122cc:	mov	r1, r5
   122d0:	mov	r0, r6
   122d4:	bl	12dd8 <table_get_bool@@Base>
   122d8:	mov	r2, r4
   122dc:	mov	r1, r5
   122e0:	mov	r3, r0
   122e4:	mov	r0, r7
   122e8:	bl	133f0 <table_set_bool@@Base>
   122ec:	b	11fd4 <table_dupe@@Base+0x130>
   122f0:	mov	r2, r4
   122f4:	mov	r1, r5
   122f8:	mov	r0, r6
   122fc:	bl	12ed0 <table_get_char@@Base>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r3, r0
   1230c:	mov	r0, r7
   12310:	bl	136ac <table_set_char@@Base>
   12314:	b	11fd4 <table_dupe@@Base+0x130>
   12318:	mov	r2, r4
   1231c:	mov	r1, r5
   12320:	mov	r0, r6
   12324:	bl	12ec0 <table_get_uchar@@Base>
   12328:	mov	r2, r4
   1232c:	mov	r1, r5
   12330:	mov	r3, r0
   12334:	mov	r0, r7
   12338:	bl	136d0 <table_set_uchar@@Base>
   1233c:	b	11fd4 <table_dupe@@Base+0x130>
   12340:	mov	r2, r4
   12344:	mov	r1, r5
   12348:	mov	r0, r6
   1234c:	bl	12edc <table_get_ptr@@Base>
   12350:	add	r3, sp, #12
   12354:	mov	r2, r4
   12358:	mov	r1, r5
   1235c:	str	r0, [sp, #12]
   12360:	mov	r0, r7
   12364:	bl	136f4 <table_set_ptr@@Base>
   12368:	b	11fd4 <table_dupe@@Base+0x130>

0001236c <table_get_major_version@@Base>:
   1236c:	mov	r0, #0
   12370:	bx	lr

00012374 <table_get_minor_version@@Base>:
   12374:	mov	r0, #0
   12378:	bx	lr

0001237c <table_get_patch_version@@Base>:
   1237c:	mov	r0, #0
   12380:	bx	lr

00012384 <table_get_version@@Base>:
   12384:	ldr	r0, [pc]	; 1238c <table_get_version@@Base+0x8>
   12388:	bx	lr
   1238c:	andeq	r4, r1, sp, ror r3

00012390 <table_get_callback_length@@Base>:
   12390:	ldr	r0, [r0, #32]
   12394:	bx	lr

00012398 <table_register_callback@@Base>:
   12398:	push	{r4, r5, r6, r7, r8, lr}
   1239c:	mov	r4, r0
   123a0:	ldr	r0, [r0, #32]
   123a4:	mov	ip, #0
   123a8:	cmp	ip, r0
   123ac:	blt	12440 <table_register_callback@@Base+0xa8>
   123b0:	ldr	r5, [r4, #48]	; 0x30
   123b4:	mov	r8, r1
   123b8:	mov	r1, r5
   123bc:	mov	r6, r3
   123c0:	mov	r7, r2
   123c4:	bl	14214 <table_cell_nullify@@Base+0x218>
   123c8:	cmp	r1, #0
   123cc:	bne	12414 <table_register_callback@@Base+0x7c>
   123d0:	ldr	r1, [r4, #52]	; 0x34
   123d4:	ldr	r0, [r4, #36]	; 0x24
   123d8:	add	r1, r5, r1
   123dc:	str	r1, [r4, #52]	; 0x34
   123e0:	lsl	r1, r1, #2
   123e4:	bl	11b34 <realloc@plt>
   123e8:	ldr	r1, [r4, #52]	; 0x34
   123ec:	lsl	r1, r1, #2
   123f0:	str	r0, [r4, #36]	; 0x24
   123f4:	ldr	r0, [r4, #40]	; 0x28
   123f8:	bl	11b34 <realloc@plt>
   123fc:	ldr	r1, [r4, #52]	; 0x34
   12400:	lsl	r1, r1, #2
   12404:	str	r0, [r4, #40]	; 0x28
   12408:	ldr	r0, [r4, #44]	; 0x2c
   1240c:	bl	11b34 <realloc@plt>
   12410:	str	r0, [r4, #44]	; 0x2c
   12414:	ldr	r3, [r4, #32]
   12418:	ldr	r2, [r4, #36]	; 0x24
   1241c:	str	r8, [r2, r3, lsl #2]
   12420:	ldr	r2, [r4, #40]	; 0x28
   12424:	str	r7, [r2, r3, lsl #2]
   12428:	ldr	r2, [r4, #44]	; 0x2c
   1242c:	str	r6, [r2, r3, lsl #2]
   12430:	ldr	r3, [r4, #32]
   12434:	add	r3, r3, #1
   12438:	str	r3, [r4, #32]
   1243c:	pop	{r4, r5, r6, r7, r8, pc}
   12440:	ldr	r5, [r4, #36]	; 0x24
   12444:	lsl	lr, ip, #2
   12448:	ldr	r5, [r5, ip, lsl #2]
   1244c:	cmp	r1, r5
   12450:	bne	12464 <table_register_callback@@Base+0xcc>
   12454:	ldr	r5, [r4, #40]	; 0x28
   12458:	ldr	r5, [r5, ip, lsl #2]
   1245c:	cmp	r2, r5
   12460:	beq	1246c <table_register_callback@@Base+0xd4>
   12464:	add	ip, ip, #1
   12468:	b	123a8 <table_register_callback@@Base+0x10>
   1246c:	cmp	ip, #0
   12470:	ble	123b0 <table_register_callback@@Base+0x18>
   12474:	ldr	r1, [r4, #44]	; 0x2c
   12478:	ldr	r2, [r1, lr]
   1247c:	orr	r3, r2, r3
   12480:	str	r3, [r1, lr]
   12484:	pop	{r4, r5, r6, r7, r8, pc}

00012488 <table_unregister_callback@@Base>:
   12488:	push	{r4, r5, r6, lr}
   1248c:	mov	r4, r0
   12490:	ldr	r0, [r0, #32]
   12494:	mov	r3, #0
   12498:	cmp	r3, r0
   1249c:	blt	124a4 <table_unregister_callback@@Base+0x1c>
   124a0:	pop	{r4, r5, r6, pc}
   124a4:	ldr	lr, [r4, #36]	; 0x24
   124a8:	lsl	ip, r3, #2
   124ac:	ldr	lr, [lr, r3, lsl #2]
   124b0:	cmp	r1, lr
   124b4:	bne	124c8 <table_unregister_callback@@Base+0x40>
   124b8:	ldr	lr, [r4, #40]	; 0x28
   124bc:	ldr	lr, [lr, r3, lsl #2]
   124c0:	cmp	r2, lr
   124c4:	beq	124fc <table_unregister_callback@@Base+0x74>
   124c8:	add	r3, r3, #1
   124cc:	b	12498 <table_unregister_callback@@Base+0x10>
   124d0:	ldr	r1, [r4, #36]	; 0x24
   124d4:	add	r3, r3, #1
   124d8:	ldr	r0, [r1, r2]
   124dc:	str	r0, [r1, ip]
   124e0:	ldr	r1, [r4, #40]	; 0x28
   124e4:	ldr	r0, [r1, r2]
   124e8:	str	r0, [r1, ip]
   124ec:	ldr	r1, [r4, #44]	; 0x2c
   124f0:	ldr	r0, [r1, r2]
   124f4:	str	r0, [r1, ip]
   124f8:	mov	ip, r2
   124fc:	ldr	r0, [r4, #32]
   12500:	add	r2, ip, #4
   12504:	sub	r0, r0, #1
   12508:	cmp	r3, r0
   1250c:	blt	124d0 <table_unregister_callback@@Base+0x48>
   12510:	ldr	r6, [r4, #48]	; 0x30
   12514:	str	r0, [r4, #32]
   12518:	mov	r1, r6
   1251c:	bl	14214 <table_cell_nullify@@Base+0x218>
   12520:	cmp	r1, #0
   12524:	popne	{r4, r5, r6, pc}
   12528:	ldr	r5, [r4, #52]	; 0x34
   1252c:	sub	r5, r5, r6
   12530:	cmp	r5, #0
   12534:	str	r5, [r4, #52]	; 0x34
   12538:	beq	12578 <table_unregister_callback@@Base+0xf0>
   1253c:	lsl	r1, r5, #2
   12540:	ldr	r0, [r4, #36]	; 0x24
   12544:	bl	11b34 <realloc@plt>
   12548:	ldr	r1, [r4, #52]	; 0x34
   1254c:	lsl	r1, r1, #2
   12550:	str	r0, [r4, #36]	; 0x24
   12554:	ldr	r0, [r4, #40]	; 0x28
   12558:	bl	11b34 <realloc@plt>
   1255c:	ldr	r1, [r4, #52]	; 0x34
   12560:	lsl	r1, r1, #2
   12564:	str	r0, [r4, #40]	; 0x28
   12568:	ldr	r0, [r4, #44]	; 0x2c
   1256c:	bl	11b34 <realloc@plt>
   12570:	str	r0, [r4, #44]	; 0x2c
   12574:	pop	{r4, r5, r6, pc}
   12578:	ldr	r0, [r4, #36]	; 0x24
   1257c:	bl	11b1c <free@plt>
   12580:	ldr	r0, [r4, #40]	; 0x28
   12584:	bl	11b1c <free@plt>
   12588:	ldr	r0, [r4, #44]	; 0x2c
   1258c:	bl	11b1c <free@plt>
   12590:	str	r5, [r4, #36]	; 0x24
   12594:	str	r5, [r4, #40]	; 0x28
   12598:	str	r5, [r4, #44]	; 0x2c
   1259c:	pop	{r4, r5, r6, pc}

000125a0 <table_notify@@Base>:
   125a0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   125a4:	mov	r5, r0
   125a8:	mov	r7, r1
   125ac:	mov	r8, r2
   125b0:	mov	r6, r3
   125b4:	mov	r4, #0
   125b8:	ldr	r3, [r5, #32]
   125bc:	cmp	r4, r3
   125c0:	blt	125cc <table_notify@@Base+0x2c>
   125c4:	add	sp, sp, #12
   125c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   125cc:	ldr	r3, [r5, #44]	; 0x2c
   125d0:	ldr	r3, [r3, r4, lsl #2]
   125d4:	tst	r6, r3
   125d8:	beq	12604 <table_notify@@Base+0x64>
   125dc:	ldr	r2, [r5, #40]	; 0x28
   125e0:	ldr	r3, [r5, #36]	; 0x24
   125e4:	mov	r1, r7
   125e8:	ldr	r2, [r2, r4, lsl #2]
   125ec:	mov	r0, r5
   125f0:	str	r2, [sp]
   125f4:	mov	r2, r8
   125f8:	ldr	r9, [r3, r4, lsl #2]
   125fc:	mov	r3, r6
   12600:	blx	r9
   12604:	add	r4, r4, #1
   12608:	b	125b8 <table_notify@@Base+0x18>

0001260c <table_column_init@@Base>:
   1260c:	push	{r4, r5, r6, r7, r8, lr}
   12610:	mov	r4, #12
   12614:	ldr	r7, [r0]
   12618:	mov	r0, r2
   1261c:	mul	r4, r4, r1
   12620:	mov	r6, r2
   12624:	mov	r8, r3
   12628:	bl	11b70 <strlen@plt>
   1262c:	add	r5, r7, r4
   12630:	add	r0, r0, #1
   12634:	bl	11b4c <malloc@plt>
   12638:	cmp	r0, #0
   1263c:	str	r0, [r7, r4]
   12640:	beq	1264c <table_column_init@@Base+0x40>
   12644:	mov	r1, r6
   12648:	bl	11b40 <strcpy@plt>
   1264c:	ldr	r3, [sp, #24]
   12650:	str	r8, [r5, #4]
   12654:	str	r3, [r5, #8]
   12658:	pop	{r4, r5, r6, r7, r8, pc}

0001265c <table_column_destroy@@Base>:
   1265c:	mov	r3, #12
   12660:	ldr	r2, [r0]
   12664:	mul	r1, r3, r1
   12668:	ldr	r0, [r2, r1]
   1266c:	cmp	r0, #0
   12670:	bxeq	lr
   12674:	b	11b1c <free@plt>

00012678 <table_get_column_length@@Base>:
   12678:	ldr	r0, [r0, #4]
   1267c:	bx	lr

00012680 <table_get_column@@Base>:
   12680:	push	{r4, r5, r6, r7, r8, lr}
   12684:	mov	r5, r0
   12688:	ldr	r6, [r0, #4]
   1268c:	mov	r7, r1
   12690:	mov	r4, #0
   12694:	mov	r8, #12
   12698:	cmp	r4, r6
   1269c:	blt	126ac <table_get_column@@Base+0x2c>
   126a0:	mvneq	r4, #0
   126a4:	mov	r0, r4
   126a8:	pop	{r4, r5, r6, r7, r8, pc}
   126ac:	mul	r3, r8, r4
   126b0:	ldr	r2, [r5]
   126b4:	mov	r1, r7
   126b8:	ldr	r0, [r2, r3]
   126bc:	bl	11b04 <strcmp@plt>
   126c0:	cmp	r0, #0
   126c4:	beq	126a4 <table_get_column@@Base+0x24>
   126c8:	add	r4, r4, #1
   126cc:	b	12698 <table_get_column@@Base+0x18>

000126d0 <table_get_column_data_type@@Base>:
   126d0:	ldr	r2, [r0]
   126d4:	mov	r3, #12
   126d8:	mla	r1, r3, r1, r2
   126dc:	ldr	r0, [r1, #4]
   126e0:	bx	lr

000126e4 <table_add_column@@Base>:
   126e4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   126e8:	mov	r4, r0
   126ec:	ldr	r6, [r0, #8]
   126f0:	mov	r8, r1
   126f4:	ldr	r0, [r0, #4]
   126f8:	mov	r1, r6
   126fc:	mov	r7, r2
   12700:	bl	14214 <table_cell_nullify@@Base+0x218>
   12704:	subs	r5, r1, #0
   12708:	beq	12770 <table_add_column@@Base+0x8c>
   1270c:	mov	r0, r4
   12710:	bl	12f50 <table_get_row_length@@Base>
   12714:	ldr	r6, [r4, #4]
   12718:	mov	r5, #0
   1271c:	mov	r9, r0
   12720:	mov	r0, r7
   12724:	bl	12db0 <table_get_default_compare_function_for_data_type@@Base>
   12728:	mov	r3, r7
   1272c:	mov	r2, r8
   12730:	mov	r1, r6
   12734:	str	r0, [sp]
   12738:	mov	r0, r4
   1273c:	bl	1260c <table_column_init@@Base>
   12740:	cmp	r9, r5
   12744:	bgt	127d0 <table_add_column@@Base+0xec>
   12748:	mov	r0, r4
   1274c:	mov	r3, #8
   12750:	ldr	r2, [r4, #4]
   12754:	mvn	r1, #0
   12758:	bl	125a0 <table_notify@@Base>
   1275c:	ldr	r0, [r4, #4]
   12760:	add	r3, r0, #1
   12764:	str	r3, [r4, #4]
   12768:	add	sp, sp, #12
   1276c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12770:	ldr	r1, [r4, #12]
   12774:	ldr	r0, [r4]
   12778:	add	r6, r6, r1
   1277c:	mov	r1, #12
   12780:	str	r6, [r4, #12]
   12784:	mul	r1, r1, r6
   12788:	bl	11b34 <realloc@plt>
   1278c:	str	r0, [r4]
   12790:	mov	r0, r4
   12794:	bl	12f50 <table_get_row_length@@Base>
   12798:	mov	r9, r0
   1279c:	cmp	r9, r5
   127a0:	ble	1270c <table_add_column@@Base+0x28>
   127a4:	mov	r1, r5
   127a8:	mov	r0, r4
   127ac:	bl	130f4 <table_get_row_ptr@@Base>
   127b0:	ldr	r1, [r4, #12]
   127b4:	add	r5, r5, #1
   127b8:	lsl	r1, r1, #2
   127bc:	mov	r6, r0
   127c0:	ldr	r0, [r0]
   127c4:	bl	11b34 <realloc@plt>
   127c8:	str	r0, [r6]
   127cc:	b	1279c <table_add_column@@Base+0xb8>
   127d0:	mov	r1, r5
   127d4:	mov	r2, r6
   127d8:	mov	r0, r4
   127dc:	bl	13fa4 <table_cell_init@@Base>
   127e0:	add	r5, r5, #1
   127e4:	b	12740 <table_add_column@@Base+0x5c>

000127e8 <table_remove_column@@Base>:
   127e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127ec:	mov	r5, r1
   127f0:	mov	r4, r0
   127f4:	bl	1265c <table_column_destroy@@Base>
   127f8:	mov	r3, #12
   127fc:	ldr	r7, [r4, #4]
   12800:	mul	r3, r3, r5
   12804:	mov	r1, r5
   12808:	sub	r7, r7, #1
   1280c:	cmp	r1, r7
   12810:	add	lr, r3, #12
   12814:	blt	128a4 <table_remove_column@@Base+0xbc>
   12818:	mov	r0, r4
   1281c:	bl	12f50 <table_get_row_length@@Base>
   12820:	lsl	r9, r5, #2
   12824:	mov	r6, #0
   12828:	mov	r8, r0
   1282c:	cmp	r8, r6
   12830:	bgt	128d4 <table_remove_column@@Base+0xec>
   12834:	ldr	r0, [r4, #4]
   12838:	ldr	r7, [r4, #8]
   1283c:	sub	r0, r0, #1
   12840:	str	r0, [r4, #4]
   12844:	mov	r1, r7
   12848:	bl	14214 <table_cell_nullify@@Base+0x218>
   1284c:	subs	r6, r1, #0
   12850:	bne	12888 <table_remove_column@@Base+0xa0>
   12854:	ldr	r1, [r4, #12]
   12858:	mov	r3, #12
   1285c:	sub	r1, r1, r7
   12860:	str	r1, [r4, #12]
   12864:	ldr	r0, [r4]
   12868:	mul	r1, r3, r1
   1286c:	bl	11b34 <realloc@plt>
   12870:	str	r0, [r4]
   12874:	mov	r0, r4
   12878:	bl	12f50 <table_get_row_length@@Base>
   1287c:	mov	r8, r0
   12880:	cmp	r8, r6
   12884:	bgt	12920 <table_remove_column@@Base+0x138>
   12888:	mov	r0, r4
   1288c:	mov	r3, #16
   12890:	mov	r2, r5
   12894:	mvn	r1, #0
   12898:	bl	125a0 <table_notify@@Base>
   1289c:	mov	r0, #0
   128a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128a4:	ldr	ip, [r4]
   128a8:	add	r1, r1, #1
   128ac:	add	r0, ip, lr
   128b0:	add	r6, ip, r3
   128b4:	ldr	r2, [r0]
   128b8:	str	r2, [ip, r3]
   128bc:	ldr	r2, [r0, #4]
   128c0:	mov	r3, lr
   128c4:	str	r2, [r6, #4]
   128c8:	ldr	r2, [r0, #8]
   128cc:	str	r2, [r6, #8]
   128d0:	b	1280c <table_remove_column@@Base+0x24>
   128d4:	mov	r2, r5
   128d8:	mov	r1, r6
   128dc:	mov	r0, r4
   128e0:	bl	13fb8 <table_cell_destroy@@Base>
   128e4:	mov	r1, r6
   128e8:	mov	r0, r4
   128ec:	bl	130f4 <table_get_row_ptr@@Base>
   128f0:	mov	r2, r9
   128f4:	mov	r3, r5
   128f8:	cmp	r7, r3
   128fc:	add	r1, r2, #4
   12900:	addle	r6, r6, #1
   12904:	ble	1282c <table_remove_column@@Base+0x44>
   12908:	ldr	ip, [r0]
   1290c:	add	r3, r3, #1
   12910:	ldr	lr, [ip, r1]
   12914:	str	lr, [ip, r2]
   12918:	mov	r2, r1
   1291c:	b	128f8 <table_remove_column@@Base+0x110>
   12920:	mov	r1, r6
   12924:	mov	r0, r4
   12928:	bl	130f4 <table_get_row_ptr@@Base>
   1292c:	ldr	r1, [r4, #12]
   12930:	add	r6, r6, #1
   12934:	lsl	r1, r1, #2
   12938:	mov	r7, r0
   1293c:	ldr	r0, [r0]
   12940:	bl	11b34 <realloc@plt>
   12944:	str	r0, [r7]
   12948:	b	12880 <table_remove_column@@Base+0x98>

0001294c <table_get_column_name@@Base>:
   1294c:	mov	r3, #12
   12950:	ldr	r2, [r0]
   12954:	mul	r1, r3, r1
   12958:	ldr	r0, [r2, r1]
   1295c:	bx	lr

00012960 <table_get_col_ptr@@Base>:
   12960:	ldr	r3, [r0]
   12964:	mov	r0, #12
   12968:	mla	r0, r0, r1, r3
   1296c:	bx	lr

00012970 <table_get_column_compare_function@@Base>:
   12970:	ldr	r2, [r0]
   12974:	mov	r3, #12
   12978:	mla	r1, r3, r1, r2
   1297c:	ldr	r0, [r1, #8]
   12980:	bx	lr

00012984 <table_set_column_compare_function@@Base>:
   12984:	ldr	r0, [r0]
   12988:	mov	r3, #12
   1298c:	mla	r1, r3, r1, r0
   12990:	str	r2, [r1, #8]
   12994:	bx	lr

00012998 <table_compare_bool@@Base>:
   12998:	cmp	r0, #0
   1299c:	bne	129ac <table_compare_bool@@Base+0x14>
   129a0:	adds	r0, r1, #0
   129a4:	mvnne	r0, #0
   129a8:	bx	lr
   129ac:	cmp	r1, #0
   129b0:	beq	129d0 <table_compare_bool@@Base+0x38>
   129b4:	ldrb	r2, [r0]
   129b8:	ldrb	r3, [r1]
   129bc:	cmp	r2, r3
   129c0:	bgt	129d0 <table_compare_bool@@Base+0x38>
   129c4:	mvnlt	r0, #0
   129c8:	movge	r0, #0
   129cc:	bx	lr
   129d0:	mov	r0, #1
   129d4:	bx	lr

000129d8 <table_compare_int8@@Base>:
   129d8:	cmp	r0, #0
   129dc:	bne	129ec <table_compare_int8@@Base+0x14>
   129e0:	adds	r0, r1, #0
   129e4:	mvnne	r0, #0
   129e8:	bx	lr
   129ec:	cmp	r1, #0
   129f0:	beq	12a10 <table_compare_int8@@Base+0x38>
   129f4:	ldrsb	r2, [r0]
   129f8:	ldrsb	r3, [r1]
   129fc:	cmp	r2, r3
   12a00:	bgt	12a10 <table_compare_int8@@Base+0x38>
   12a04:	mvnlt	r0, #0
   12a08:	movge	r0, #0
   12a0c:	bx	lr
   12a10:	mov	r0, #1
   12a14:	bx	lr

00012a18 <table_compare_int32@@Base>:
   12a18:	cmp	r0, #0
   12a1c:	bne	12a2c <table_compare_int32@@Base+0x14>
   12a20:	adds	r0, r1, #0
   12a24:	mvnne	r0, #0
   12a28:	bx	lr
   12a2c:	cmp	r1, #0
   12a30:	beq	12a50 <table_compare_int32@@Base+0x38>
   12a34:	ldr	r2, [r0]
   12a38:	ldr	r3, [r1]
   12a3c:	cmp	r2, r3
   12a40:	bgt	12a50 <table_compare_int32@@Base+0x38>
   12a44:	mvnlt	r0, #0
   12a48:	movge	r0, #0
   12a4c:	bx	lr
   12a50:	mov	r0, #1
   12a54:	bx	lr

00012a58 <table_compare_int@@Base>:
   12a58:	b	12a18 <table_compare_int32@@Base>

00012a5c <table_compare_uint32@@Base>:
   12a5c:	cmp	r0, #0
   12a60:	bne	12a70 <table_compare_uint32@@Base+0x14>
   12a64:	adds	r0, r1, #0
   12a68:	mvnne	r0, #0
   12a6c:	bx	lr
   12a70:	cmp	r1, #0
   12a74:	beq	12a94 <table_compare_uint32@@Base+0x38>
   12a78:	ldr	r2, [r0]
   12a7c:	ldr	r3, [r1]
   12a80:	cmp	r2, r3
   12a84:	bhi	12a94 <table_compare_uint32@@Base+0x38>
   12a88:	mvncc	r0, #0
   12a8c:	movcs	r0, #0
   12a90:	bx	lr
   12a94:	mov	r0, #1
   12a98:	bx	lr

00012a9c <table_compare_uint@@Base>:
   12a9c:	b	12a5c <table_compare_uint32@@Base>

00012aa0 <table_compare_uint64@@Base>:
   12aa0:	cmp	r0, #0
   12aa4:	bne	12ab4 <table_compare_uint64@@Base+0x14>
   12aa8:	adds	r0, r1, #0
   12aac:	mvnne	r0, #0
   12ab0:	bx	lr
   12ab4:	cmp	r1, #0
   12ab8:	beq	12ae0 <table_compare_uint64@@Base+0x40>
   12abc:	ldrd	r2, [r1]
   12ac0:	push	{r4, r5, lr}
   12ac4:	ldrd	r4, [r0]
   12ac8:	cmp	r5, r3
   12acc:	cmpeq	r4, r2
   12ad0:	bhi	12ae8 <table_compare_uint64@@Base+0x48>
   12ad4:	mvncc	r0, #0
   12ad8:	movcs	r0, #0
   12adc:	pop	{r4, r5, pc}
   12ae0:	mov	r0, #1
   12ae4:	bx	lr
   12ae8:	mov	r0, #1
   12aec:	pop	{r4, r5, pc}

00012af0 <table_compare_short@@Base>:
   12af0:	cmp	r0, #0
   12af4:	bne	12b04 <table_compare_short@@Base+0x14>
   12af8:	adds	r0, r1, #0
   12afc:	mvnne	r0, #0
   12b00:	bx	lr
   12b04:	cmp	r1, #0
   12b08:	beq	12b28 <table_compare_short@@Base+0x38>
   12b0c:	ldrsh	r2, [r0]
   12b10:	ldrsh	r3, [r1]
   12b14:	cmp	r2, r3
   12b18:	bgt	12b28 <table_compare_short@@Base+0x38>
   12b1c:	mvnlt	r0, #0
   12b20:	movge	r0, #0
   12b24:	bx	lr
   12b28:	mov	r0, #1
   12b2c:	bx	lr

00012b30 <table_compare_int16@@Base>:
   12b30:	b	12af0 <table_compare_short@@Base>

00012b34 <table_compare_ushort@@Base>:
   12b34:	cmp	r0, #0
   12b38:	bne	12b48 <table_compare_ushort@@Base+0x14>
   12b3c:	adds	r0, r1, #0
   12b40:	mvnne	r0, #0
   12b44:	bx	lr
   12b48:	cmp	r1, #0
   12b4c:	beq	12b6c <table_compare_ushort@@Base+0x38>
   12b50:	ldrh	r2, [r0]
   12b54:	ldrh	r3, [r1]
   12b58:	cmp	r2, r3
   12b5c:	bhi	12b6c <table_compare_ushort@@Base+0x38>
   12b60:	mvncc	r0, #0
   12b64:	movcs	r0, #0
   12b68:	bx	lr
   12b6c:	mov	r0, #1
   12b70:	bx	lr

00012b74 <table_compare_uint16@@Base>:
   12b74:	b	12b34 <table_compare_ushort@@Base>

00012b78 <table_compare_long@@Base>:
   12b78:	cmp	r0, #0
   12b7c:	bne	12b8c <table_compare_long@@Base+0x14>
   12b80:	adds	r0, r1, #0
   12b84:	mvnne	r0, #0
   12b88:	bx	lr
   12b8c:	cmp	r1, #0
   12b90:	beq	12bb0 <table_compare_long@@Base+0x38>
   12b94:	ldr	r2, [r0]
   12b98:	ldr	r3, [r1]
   12b9c:	cmp	r2, r3
   12ba0:	bgt	12bb0 <table_compare_long@@Base+0x38>
   12ba4:	mvnlt	r0, #0
   12ba8:	movge	r0, #0
   12bac:	bx	lr
   12bb0:	mov	r0, #1
   12bb4:	bx	lr

00012bb8 <table_compare_llong@@Base>:
   12bb8:	cmp	r0, #0
   12bbc:	bne	12bcc <table_compare_llong@@Base+0x14>
   12bc0:	adds	r0, r1, #0
   12bc4:	mvnne	r0, #0
   12bc8:	bx	lr
   12bcc:	cmp	r1, #0
   12bd0:	beq	12c00 <table_compare_llong@@Base+0x48>
   12bd4:	ldrd	r2, [r1]
   12bd8:	push	{r4, r5, lr}
   12bdc:	ldrd	r4, [r0]
   12be0:	cmp	r2, r4
   12be4:	sbcs	r1, r3, r5
   12be8:	blt	12c08 <table_compare_llong@@Base+0x50>
   12bec:	cmp	r4, r2
   12bf0:	sbcs	r3, r5, r3
   12bf4:	mvnlt	r0, #0
   12bf8:	movge	r0, #0
   12bfc:	pop	{r4, r5, pc}
   12c00:	mov	r0, #1
   12c04:	bx	lr
   12c08:	mov	r0, #1
   12c0c:	pop	{r4, r5, pc}

00012c10 <table_compare_int64@@Base>:
   12c10:	b	12bb8 <table_compare_llong@@Base>

00012c14 <table_compare_ullong@@Base>:
   12c14:	cmp	r0, #0
   12c18:	bne	12c28 <table_compare_ullong@@Base+0x14>
   12c1c:	adds	r0, r1, #0
   12c20:	mvnne	r0, #0
   12c24:	bx	lr
   12c28:	cmp	r1, #0
   12c2c:	beq	12c4c <table_compare_ullong@@Base+0x38>
   12c30:	ldr	r2, [r0]
   12c34:	ldr	r3, [r1]
   12c38:	cmp	r2, r3
   12c3c:	bhi	12c4c <table_compare_ullong@@Base+0x38>
   12c40:	mvncc	r0, #0
   12c44:	movcs	r0, #0
   12c48:	bx	lr
   12c4c:	mov	r0, #1
   12c50:	bx	lr

00012c54 <table_compare_ulong@@Base>:
   12c54:	b	12c14 <table_compare_ullong@@Base>

00012c58 <table_compare_float@@Base>:
   12c58:	cmp	r0, #0
   12c5c:	bne	12c6c <table_compare_float@@Base+0x14>
   12c60:	adds	r0, r1, #0
   12c64:	mvnne	r0, #0
   12c68:	bx	lr
   12c6c:	cmp	r1, #0
   12c70:	beq	12c94 <table_compare_float@@Base+0x3c>
   12c74:	vldr	s14, [r0]
   12c78:	vldr	s15, [r1]
   12c7c:	vcmpe.f32	s14, s15
   12c80:	vmrs	APSR_nzcv, fpscr
   12c84:	bgt	12c94 <table_compare_float@@Base+0x3c>
   12c88:	mvnmi	r0, #0
   12c8c:	movpl	r0, #0
   12c90:	bx	lr
   12c94:	mov	r0, #1
   12c98:	bx	lr

00012c9c <table_compare_double@@Base>:
   12c9c:	cmp	r0, #0
   12ca0:	bne	12cb0 <table_compare_double@@Base+0x14>
   12ca4:	adds	r0, r1, #0
   12ca8:	mvnne	r0, #0
   12cac:	bx	lr
   12cb0:	cmp	r1, #0
   12cb4:	beq	12cd8 <table_compare_double@@Base+0x3c>
   12cb8:	vldr	d6, [r0]
   12cbc:	vldr	d7, [r1]
   12cc0:	vcmpe.f64	d6, d7
   12cc4:	vmrs	APSR_nzcv, fpscr
   12cc8:	bgt	12cd8 <table_compare_double@@Base+0x3c>
   12ccc:	mvnmi	r0, #0
   12cd0:	movpl	r0, #0
   12cd4:	bx	lr
   12cd8:	mov	r0, #1
   12cdc:	bx	lr

00012ce0 <table_compare_ldouble@@Base>:
   12ce0:	cmp	r0, #0
   12ce4:	bne	12cf4 <table_compare_ldouble@@Base+0x14>
   12ce8:	adds	r0, r1, #0
   12cec:	mvnne	r0, #0
   12cf0:	bx	lr
   12cf4:	cmp	r1, #0
   12cf8:	beq	12d1c <table_compare_ldouble@@Base+0x3c>
   12cfc:	vldr	d6, [r0]
   12d00:	vldr	d7, [r1]
   12d04:	vcmpe.f64	d6, d7
   12d08:	vmrs	APSR_nzcv, fpscr
   12d0c:	bgt	12d1c <table_compare_ldouble@@Base+0x3c>
   12d10:	mvnmi	r0, #0
   12d14:	movpl	r0, #0
   12d18:	bx	lr
   12d1c:	mov	r0, #1
   12d20:	bx	lr

00012d24 <table_compare_uchar@@Base>:
   12d24:	cmp	r0, #0
   12d28:	bne	12d38 <table_compare_uchar@@Base+0x14>
   12d2c:	adds	r0, r1, #0
   12d30:	mvnne	r0, #0
   12d34:	bx	lr
   12d38:	cmp	r1, #0
   12d3c:	beq	12d5c <table_compare_uchar@@Base+0x38>
   12d40:	ldrb	r2, [r0]
   12d44:	ldrb	r3, [r1]
   12d48:	cmp	r2, r3
   12d4c:	bhi	12d5c <table_compare_uchar@@Base+0x38>
   12d50:	mvncc	r0, #0
   12d54:	movcs	r0, #0
   12d58:	bx	lr
   12d5c:	mov	r0, #1
   12d60:	bx	lr

00012d64 <table_compare_char@@Base>:
   12d64:	b	12d24 <table_compare_uchar@@Base>

00012d68 <table_compare_uint8@@Base>:
   12d68:	b	12d24 <table_compare_uchar@@Base>

00012d6c <table_compare_ptr@@Base>:
   12d6c:	cmp	r0, r1
   12d70:	bhi	12d80 <table_compare_ptr@@Base+0x14>
   12d74:	mvncc	r0, #0
   12d78:	movcs	r0, #0
   12d7c:	bx	lr
   12d80:	mov	r0, #1
   12d84:	bx	lr

00012d88 <table_compare_string@@Base>:
   12d88:	cmp	r0, #0
   12d8c:	bne	12d9c <table_compare_string@@Base+0x14>
   12d90:	adds	r0, r1, #0
   12d94:	mvnne	r0, #0
   12d98:	bx	lr
   12d9c:	cmp	r1, #0
   12da0:	beq	12da8 <table_compare_string@@Base+0x20>
   12da4:	b	11b04 <strcmp@plt>
   12da8:	mov	r0, #1
   12dac:	bx	lr

00012db0 <table_get_default_compare_function_for_data_type@@Base>:
   12db0:	cmp	r0, #23
   12db4:	ldrls	r3, [pc, #8]	; 12dc4 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12db8:	ldrls	r0, [r3, r0, lsl #2]
   12dbc:	movhi	r0, #0
   12dc0:	bx	lr
   12dc4:	strdeq	r4, [r1], -r0

00012dc8 <table_get@@Base>:
   12dc8:	push	{r4, lr}
   12dcc:	bl	13f8c <table_get_cell_ptr@@Base>
   12dd0:	ldr	r0, [r0]
   12dd4:	pop	{r4, pc}

00012dd8 <table_get_bool@@Base>:
   12dd8:	push	{r4, lr}
   12ddc:	bl	12dc8 <table_get@@Base>
   12de0:	ldrb	r0, [r0]
   12de4:	pop	{r4, pc}

00012de8 <table_get_int8@@Base>:
   12de8:	push	{r4, lr}
   12dec:	bl	12dc8 <table_get@@Base>
   12df0:	ldrsb	r0, [r0]
   12df4:	pop	{r4, pc}

00012df8 <table_get_int32@@Base>:
   12df8:	push	{r4, lr}
   12dfc:	bl	12dc8 <table_get@@Base>
   12e00:	ldr	r0, [r0]
   12e04:	pop	{r4, pc}

00012e08 <table_get_int@@Base>:
   12e08:	b	12df8 <table_get_int32@@Base>

00012e0c <table_get_uint32@@Base>:
   12e0c:	push	{r4, lr}
   12e10:	bl	12dc8 <table_get@@Base>
   12e14:	ldr	r0, [r0]
   12e18:	pop	{r4, pc}

00012e1c <table_get_uint@@Base>:
   12e1c:	b	12e0c <table_get_uint32@@Base>

00012e20 <table_get_short@@Base>:
   12e20:	push	{r4, lr}
   12e24:	bl	12dc8 <table_get@@Base>
   12e28:	ldrsh	r0, [r0]
   12e2c:	pop	{r4, pc}

00012e30 <table_get_int16@@Base>:
   12e30:	b	12e20 <table_get_short@@Base>

00012e34 <table_get_ushort@@Base>:
   12e34:	push	{r4, lr}
   12e38:	bl	12dc8 <table_get@@Base>
   12e3c:	ldrh	r0, [r0]
   12e40:	pop	{r4, pc}

00012e44 <table_get_uint16@@Base>:
   12e44:	b	12e34 <table_get_ushort@@Base>

00012e48 <table_get_long@@Base>:
   12e48:	push	{r4, lr}
   12e4c:	bl	12dc8 <table_get@@Base>
   12e50:	ldr	r0, [r0]
   12e54:	pop	{r4, pc}

00012e58 <table_get_ulong@@Base>:
   12e58:	push	{r4, lr}
   12e5c:	bl	12dc8 <table_get@@Base>
   12e60:	ldr	r0, [r0]
   12e64:	pop	{r4, pc}

00012e68 <table_get_llong@@Base>:
   12e68:	push	{r4, lr}
   12e6c:	bl	12dc8 <table_get@@Base>
   12e70:	ldrd	r0, [r0]
   12e74:	pop	{r4, pc}

00012e78 <table_get_int64@@Base>:
   12e78:	b	12e68 <table_get_llong@@Base>

00012e7c <table_get_ullong@@Base>:
   12e7c:	push	{r4, lr}
   12e80:	bl	12dc8 <table_get@@Base>
   12e84:	ldrd	r0, [r0]
   12e88:	pop	{r4, pc}

00012e8c <table_get_uint64@@Base>:
   12e8c:	b	12e7c <table_get_ullong@@Base>

00012e90 <table_get_float@@Base>:
   12e90:	push	{r4, lr}
   12e94:	bl	12dc8 <table_get@@Base>
   12e98:	vldr	s0, [r0]
   12e9c:	pop	{r4, pc}

00012ea0 <table_get_double@@Base>:
   12ea0:	push	{r4, lr}
   12ea4:	bl	12dc8 <table_get@@Base>
   12ea8:	vldr	d0, [r0]
   12eac:	pop	{r4, pc}

00012eb0 <table_get_ldouble@@Base>:
   12eb0:	push	{r4, lr}
   12eb4:	bl	12dc8 <table_get@@Base>
   12eb8:	vldr	d0, [r0]
   12ebc:	pop	{r4, pc}

00012ec0 <table_get_uchar@@Base>:
   12ec0:	push	{r4, lr}
   12ec4:	bl	12dc8 <table_get@@Base>
   12ec8:	ldrb	r0, [r0]
   12ecc:	pop	{r4, pc}

00012ed0 <table_get_char@@Base>:
   12ed0:	b	12ec0 <table_get_uchar@@Base>

00012ed4 <table_get_uint8@@Base>:
   12ed4:	b	12ec0 <table_get_uchar@@Base>

00012ed8 <table_get_string@@Base>:
   12ed8:	b	12dc8 <table_get@@Base>

00012edc <table_get_ptr@@Base>:
   12edc:	b	12dc8 <table_get@@Base>

00012ee0 <table_row_init@@Base>:
   12ee0:	push	{r4, r5, r6, lr}
   12ee4:	mov	r5, r1
   12ee8:	ldr	r4, [r0, #16]
   12eec:	ldr	r0, [r0, #12]
   12ef0:	lsl	r0, r0, #2
   12ef4:	bl	11b4c <malloc@plt>
   12ef8:	str	r0, [r4, r5, lsl #2]
   12efc:	pop	{r4, r5, r6, pc}

00012f00 <table_row_destroy@@Base>:
   12f00:	push	{r4, r5, r6, r7, r8, lr}
   12f04:	mov	r6, r0
   12f08:	mov	r5, r1
   12f0c:	bl	12678 <table_get_column_length@@Base>
   12f10:	ldr	r7, [r6, #16]
   12f14:	mov	r4, #0
   12f18:	mov	r8, r0
   12f1c:	cmp	r4, r8
   12f20:	blt	12f38 <table_row_destroy@@Base+0x38>
   12f24:	ldr	r0, [r7, r5, lsl #2]
   12f28:	cmp	r0, #0
   12f2c:	popeq	{r4, r5, r6, r7, r8, pc}
   12f30:	pop	{r4, r5, r6, r7, r8, lr}
   12f34:	b	11b1c <free@plt>
   12f38:	mov	r2, r4
   12f3c:	mov	r1, r5
   12f40:	mov	r0, r6
   12f44:	bl	13fb8 <table_cell_destroy@@Base>
   12f48:	add	r4, r4, #1
   12f4c:	b	12f1c <table_row_destroy@@Base+0x1c>

00012f50 <table_get_row_length@@Base>:
   12f50:	ldr	r0, [r0, #20]
   12f54:	bx	lr

00012f58 <table_add_row@@Base>:
   12f58:	push	{r4, r5, r6, r7, r8, lr}
   12f5c:	mov	r4, r0
   12f60:	ldr	r5, [r0, #24]
   12f64:	ldr	r0, [r0, #20]
   12f68:	mov	r1, r5
   12f6c:	bl	14214 <table_cell_nullify@@Base+0x218>
   12f70:	cmp	r1, #0
   12f74:	bne	12f94 <table_add_row@@Base+0x3c>
   12f78:	ldr	r1, [r4, #28]
   12f7c:	ldr	r0, [r4, #16]
   12f80:	add	r1, r5, r1
   12f84:	str	r1, [r4, #28]
   12f88:	lsl	r1, r1, #2
   12f8c:	bl	11b34 <realloc@plt>
   12f90:	str	r0, [r4, #16]
   12f94:	mov	r0, r4
   12f98:	ldr	r6, [r4, #20]
   12f9c:	bl	12678 <table_get_column_length@@Base>
   12fa0:	mov	r1, r6
   12fa4:	mov	r5, #0
   12fa8:	mov	r7, r0
   12fac:	mov	r0, r4
   12fb0:	bl	12ee0 <table_row_init@@Base>
   12fb4:	cmp	r7, r5
   12fb8:	bgt	12fe0 <table_add_row@@Base+0x88>
   12fbc:	mov	r0, r4
   12fc0:	mov	r3, #2
   12fc4:	mvn	r2, #0
   12fc8:	ldr	r1, [r4, #20]
   12fcc:	bl	125a0 <table_notify@@Base>
   12fd0:	ldr	r0, [r4, #20]
   12fd4:	add	r3, r0, #1
   12fd8:	str	r3, [r4, #20]
   12fdc:	pop	{r4, r5, r6, r7, r8, pc}
   12fe0:	mov	r2, r5
   12fe4:	mov	r1, r6
   12fe8:	mov	r0, r4
   12fec:	bl	13fa4 <table_cell_init@@Base>
   12ff0:	add	r5, r5, #1
   12ff4:	b	12fb4 <table_add_row@@Base+0x5c>

00012ff8 <table_remove_row@@Base>:
   12ff8:	push	{r4, r5, r6, r7, r8, lr}
   12ffc:	mov	r4, r0
   13000:	mov	r5, r1
   13004:	ldr	r7, [r0, #20]
   13008:	bl	12678 <table_get_column_length@@Base>
   1300c:	mov	r6, #0
   13010:	mov	r8, r0
   13014:	cmp	r8, r6
   13018:	bgt	130a0 <table_remove_row@@Base+0xa8>
   1301c:	ldr	r3, [r4, #16]
   13020:	lsl	r6, r5, #2
   13024:	ldr	r0, [r3, r5, lsl #2]
   13028:	cmp	r0, #0
   1302c:	beq	13034 <table_remove_row@@Base+0x3c>
   13030:	bl	11b1c <free@plt>
   13034:	mov	r3, r5
   13038:	sub	r7, r7, #1
   1303c:	cmp	r3, r7
   13040:	add	r2, r6, #4
   13044:	blt	130dc <table_remove_row@@Base+0xe4>
   13048:	ldr	r0, [r4, #20]
   1304c:	ldr	r6, [r4, #24]
   13050:	sub	r0, r0, #1
   13054:	str	r0, [r4, #20]
   13058:	mov	r1, r6
   1305c:	bl	14214 <table_cell_nullify@@Base+0x218>
   13060:	cmp	r1, #0
   13064:	bne	13084 <table_remove_row@@Base+0x8c>
   13068:	ldr	r1, [r4, #28]
   1306c:	ldr	r0, [r4, #16]
   13070:	sub	r1, r1, r6
   13074:	str	r1, [r4, #28]
   13078:	lsl	r1, r1, #2
   1307c:	bl	11b34 <realloc@plt>
   13080:	str	r0, [r4, #16]
   13084:	mov	r0, r4
   13088:	mov	r3, #4
   1308c:	mvn	r2, #0
   13090:	mov	r1, r5
   13094:	bl	125a0 <table_notify@@Base>
   13098:	mov	r0, #0
   1309c:	pop	{r4, r5, r6, r7, r8, pc}
   130a0:	mov	r1, r6
   130a4:	mov	r0, r4
   130a8:	bl	126d0 <table_get_column_data_type@@Base>
   130ac:	cmp	r0, #23
   130b0:	beq	130d4 <table_remove_row@@Base+0xdc>
   130b4:	mov	r2, r6
   130b8:	mov	r1, r5
   130bc:	mov	r0, r4
   130c0:	bl	13f8c <table_get_cell_ptr@@Base>
   130c4:	ldr	r0, [r0]
   130c8:	cmp	r0, #0
   130cc:	beq	130d4 <table_remove_row@@Base+0xdc>
   130d0:	bl	11b1c <free@plt>
   130d4:	add	r6, r6, #1
   130d8:	b	13014 <table_remove_row@@Base+0x1c>
   130dc:	ldr	r1, [r4, #16]
   130e0:	add	r3, r3, #1
   130e4:	ldr	r0, [r1, r2]
   130e8:	str	r0, [r1, r6]
   130ec:	mov	r6, r2
   130f0:	b	1303c <table_remove_row@@Base+0x44>

000130f4 <table_get_row_ptr@@Base>:
   130f4:	ldr	r0, [r0, #16]
   130f8:	add	r0, r0, r1, lsl #2
   130fc:	bx	lr

00013100 <table_set_row_ptr@@Base>:
   13100:	ldr	r3, [r0, #16]
   13104:	ldr	r2, [r2]
   13108:	str	r2, [r3, r1, lsl #2]
   1310c:	bx	lr

00013110 <table_set@@Base>:
   13110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13114:	mov	r6, r0
   13118:	mov	r8, r1
   1311c:	mov	r7, r2
   13120:	ldr	r9, [sp, #32]
   13124:	mov	r5, r3
   13128:	bl	13f8c <table_get_cell_ptr@@Base>
   1312c:	mov	r1, r7
   13130:	mov	r4, r0
   13134:	mov	r0, r6
   13138:	bl	12960 <table_get_col_ptr@@Base>
   1313c:	cmp	r9, #23
   13140:	ldrls	pc, [pc, r9, lsl #2]
   13144:	b	1321c <table_set@@Base+0x10c>
   13148:	andeq	r3, r1, r4, ror #3
   1314c:	andeq	r3, r1, r4, lsr #4
   13150:	andeq	r3, r1, r0, lsr r2
   13154:	andeq	r3, r1, ip, lsr r2
   13158:	andeq	r3, r1, r8, asr #4
   1315c:	muleq	r1, ip, r2
   13160:	andeq	r3, r1, r8, lsr #5
   13164:			; <UNDEFINED> instruction: 0x000132b4
   13168:	andeq	r3, r1, r0, asr #5
   1316c:	andeq	r3, r1, r0, lsl #6
   13170:	andeq	r3, r1, r0, lsr #6
   13174:	andeq	r3, r1, ip, lsr #6
   13178:	andeq	r3, r1, r8, lsr r3
   1317c:	andeq	r3, r1, r4, asr #6
   13180:	andeq	r3, r1, r0, asr r3
   13184:	andeq	r3, r1, ip, asr r3
   13188:	andeq	r3, r1, r8, ror #6
   1318c:	andeq	r3, r1, r4, ror r3
   13190:	andeq	r3, r1, r0, lsl #7
   13194:	andeq	r3, r1, r4, asr #7
   13198:	ldrdeq	r3, [r1], -r0
   1319c:	andeq	r3, r1, ip, lsl #7
   131a0:	andeq	r3, r1, r8, lsr #3
   131a4:	ldrdeq	r3, [r1], -ip
   131a8:	ldr	r3, [r0, #4]
   131ac:	cmp	r3, #22
   131b0:	bne	1321c <table_set@@Base+0x10c>
   131b4:	ldr	r3, [r4]
   131b8:	cmp	r3, #0
   131bc:	bne	131cc <table_set@@Base+0xbc>
   131c0:	mov	r0, #1
   131c4:	bl	11b4c <malloc@plt>
   131c8:	str	r0, [r4]
   131cc:	ldr	r3, [r4]
   131d0:	cmp	r3, #0
   131d4:	ldrbne	r2, [r5]
   131d8:	strbne	r2, [r3]
   131dc:	bne	13280 <table_set@@Base+0x170>
   131e0:	b	1321c <table_set@@Base+0x10c>
   131e4:	ldr	r3, [r0, #4]
   131e8:	cmp	r3, #0
   131ec:	bne	1321c <table_set@@Base+0x10c>
   131f0:	ldr	r3, [r4]
   131f4:	cmp	r3, #0
   131f8:	bne	13208 <table_set@@Base+0xf8>
   131fc:	mov	r0, #4
   13200:	bl	11b4c <malloc@plt>
   13204:	str	r0, [r4]
   13208:	ldr	r3, [r4]
   1320c:	cmp	r3, #0
   13210:	ldrne	r2, [r5]
   13214:	strne	r2, [r3]
   13218:	bne	13280 <table_set@@Base+0x170>
   1321c:	mvn	r0, #0
   13220:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13224:	ldr	r3, [r0, #4]
   13228:	cmp	r3, #1
   1322c:	b	131ec <table_set@@Base+0xdc>
   13230:	ldr	r3, [r0, #4]
   13234:	cmp	r3, #2
   13238:	b	131b0 <table_set@@Base+0xa0>
   1323c:	ldr	r3, [r0, #4]
   13240:	cmp	r3, #3
   13244:	b	131b0 <table_set@@Base+0xa0>
   13248:	ldr	r3, [r0, #4]
   1324c:	cmp	r3, #4
   13250:	bne	1321c <table_set@@Base+0x10c>
   13254:	ldr	r3, [r4]
   13258:	cmp	r3, #0
   1325c:	bne	1326c <table_set@@Base+0x15c>
   13260:	mov	r0, #2
   13264:	bl	11b4c <malloc@plt>
   13268:	str	r0, [r4]
   1326c:	ldr	r3, [r4]
   13270:	cmp	r3, #0
   13274:	beq	1321c <table_set@@Base+0x10c>
   13278:	ldrh	r2, [r5]
   1327c:	strh	r2, [r3]
   13280:	mov	r0, r6
   13284:	mov	r3, #1
   13288:	mov	r2, r7
   1328c:	mov	r1, r8
   13290:	bl	125a0 <table_notify@@Base>
   13294:	mov	r0, #0
   13298:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1329c:	ldr	r3, [r0, #4]
   132a0:	cmp	r3, #5
   132a4:	b	13250 <table_set@@Base+0x140>
   132a8:	ldr	r3, [r0, #4]
   132ac:	cmp	r3, #6
   132b0:	b	131ec <table_set@@Base+0xdc>
   132b4:	ldr	r3, [r0, #4]
   132b8:	cmp	r3, #7
   132bc:	b	131ec <table_set@@Base+0xdc>
   132c0:	ldr	r0, [r0, #4]
   132c4:	cmp	r0, #8
   132c8:	bne	1321c <table_set@@Base+0x10c>
   132cc:	ldr	r3, [r4]
   132d0:	cmp	r3, #0
   132d4:	bne	132e0 <table_set@@Base+0x1d0>
   132d8:	bl	11b4c <malloc@plt>
   132dc:	str	r0, [r4]
   132e0:	ldr	r3, [r4]
   132e4:	cmp	r3, #0
   132e8:	beq	1321c <table_set@@Base+0x10c>
   132ec:	ldr	r2, [r5]
   132f0:	str	r2, [r3]
   132f4:	ldr	r2, [r5, #4]
   132f8:	str	r2, [r3, #4]
   132fc:	b	13280 <table_set@@Base+0x170>
   13300:	ldr	r3, [r0, #4]
   13304:	cmp	r3, #9
   13308:	bne	1321c <table_set@@Base+0x10c>
   1330c:	ldr	r3, [r4]
   13310:	cmp	r3, #0
   13314:	bne	132e0 <table_set@@Base+0x1d0>
   13318:	mov	r0, #8
   1331c:	b	132d8 <table_set@@Base+0x1c8>
   13320:	ldr	r3, [r0, #4]
   13324:	cmp	r3, #10
   13328:	b	13250 <table_set@@Base+0x140>
   1332c:	ldr	r3, [r0, #4]
   13330:	cmp	r3, #11
   13334:	b	13250 <table_set@@Base+0x140>
   13338:	ldr	r3, [r0, #4]
   1333c:	cmp	r3, #12
   13340:	b	131ec <table_set@@Base+0xdc>
   13344:	ldr	r3, [r0, #4]
   13348:	cmp	r3, #13
   1334c:	b	131ec <table_set@@Base+0xdc>
   13350:	ldr	r3, [r0, #4]
   13354:	cmp	r3, #14
   13358:	b	13308 <table_set@@Base+0x1f8>
   1335c:	ldr	r3, [r0, #4]
   13360:	cmp	r3, #15
   13364:	b	13308 <table_set@@Base+0x1f8>
   13368:	ldr	r3, [r0, #4]
   1336c:	cmp	r3, #16
   13370:	b	131ec <table_set@@Base+0xdc>
   13374:	ldr	r3, [r0, #4]
   13378:	cmp	r3, #17
   1337c:	b	13308 <table_set@@Base+0x1f8>
   13380:	ldr	r3, [r0, #4]
   13384:	cmp	r3, #18
   13388:	b	13308 <table_set@@Base+0x1f8>
   1338c:	ldr	r3, [r0, #4]
   13390:	cmp	r3, #21
   13394:	bne	1321c <table_set@@Base+0x10c>
   13398:	mov	r0, r5
   1339c:	bl	11b70 <strlen@plt>
   133a0:	add	r1, r0, #1
   133a4:	ldr	r0, [r4]
   133a8:	bl	11b34 <realloc@plt>
   133ac:	cmp	r0, #0
   133b0:	str	r0, [r4]
   133b4:	beq	1321c <table_set@@Base+0x10c>
   133b8:	mov	r1, r5
   133bc:	bl	11b40 <strcpy@plt>
   133c0:	b	13280 <table_set@@Base+0x170>
   133c4:	ldr	r3, [r0, #4]
   133c8:	cmp	r3, #19
   133cc:	b	131b0 <table_set@@Base+0xa0>
   133d0:	ldr	r3, [r0, #4]
   133d4:	cmp	r3, #20
   133d8:	b	131b0 <table_set@@Base+0xa0>
   133dc:	ldr	r3, [r0, #4]
   133e0:	cmp	r3, #23
   133e4:	streq	r5, [r4]
   133e8:	beq	13280 <table_set@@Base+0x170>
   133ec:	b	1321c <table_set@@Base+0x10c>

000133f0 <table_set_bool@@Base>:
   133f0:	push	{r0, r1, r2, r3, r4, lr}
   133f4:	add	ip, sp, #16
   133f8:	strb	r3, [ip, #-1]!
   133fc:	mov	r3, #22
   13400:	str	r3, [sp]
   13404:	mov	r3, ip
   13408:	bl	13110 <table_set@@Base>
   1340c:	add	sp, sp, #20
   13410:	pop	{pc}		; (ldr pc, [sp], #4)

00013414 <table_set_int@@Base>:
   13414:	push	{r0, r1, r2, r3, r4, lr}
   13418:	add	ip, sp, #16
   1341c:	str	r3, [ip, #-4]!
   13420:	mov	r3, #0
   13424:	str	r3, [sp]
   13428:	mov	r3, ip
   1342c:	bl	13110 <table_set@@Base>
   13430:	add	sp, sp, #20
   13434:	pop	{pc}		; (ldr pc, [sp], #4)

00013438 <table_set_uint@@Base>:
   13438:	push	{r0, r1, r2, r3, r4, lr}
   1343c:	add	ip, sp, #16
   13440:	str	r3, [ip, #-4]!
   13444:	mov	r3, #1
   13448:	str	r3, [sp]
   1344c:	mov	r3, ip
   13450:	bl	13110 <table_set@@Base>
   13454:	add	sp, sp, #20
   13458:	pop	{pc}		; (ldr pc, [sp], #4)

0001345c <table_set_int8@@Base>:
   1345c:	push	{r0, r1, r2, r3, r4, lr}
   13460:	add	ip, sp, #16
   13464:	strb	r3, [ip, #-1]!
   13468:	mov	r3, #2
   1346c:	str	r3, [sp]
   13470:	mov	r3, ip
   13474:	bl	13110 <table_set@@Base>
   13478:	add	sp, sp, #20
   1347c:	pop	{pc}		; (ldr pc, [sp], #4)

00013480 <table_set_uint8@@Base>:
   13480:	push	{r0, r1, r2, r3, r4, lr}
   13484:	add	ip, sp, #16
   13488:	strb	r3, [ip, #-1]!
   1348c:	mov	r3, #3
   13490:	str	r3, [sp]
   13494:	mov	r3, ip
   13498:	bl	13110 <table_set@@Base>
   1349c:	add	sp, sp, #20
   134a0:	pop	{pc}		; (ldr pc, [sp], #4)

000134a4 <table_set_int16@@Base>:
   134a4:	push	{r0, r1, r2, r3, r4, lr}
   134a8:	add	ip, sp, #16
   134ac:	strh	r3, [ip, #-2]!
   134b0:	mov	r3, #4
   134b4:	str	r3, [sp]
   134b8:	mov	r3, ip
   134bc:	bl	13110 <table_set@@Base>
   134c0:	add	sp, sp, #20
   134c4:	pop	{pc}		; (ldr pc, [sp], #4)

000134c8 <table_set_uint16@@Base>:
   134c8:	push	{r0, r1, r2, r3, r4, lr}
   134cc:	add	ip, sp, #16
   134d0:	strh	r3, [ip, #-2]!
   134d4:	mov	r3, #5
   134d8:	str	r3, [sp]
   134dc:	mov	r3, ip
   134e0:	bl	13110 <table_set@@Base>
   134e4:	add	sp, sp, #20
   134e8:	pop	{pc}		; (ldr pc, [sp], #4)

000134ec <table_set_int32@@Base>:
   134ec:	push	{r0, r1, r2, r3, r4, lr}
   134f0:	add	ip, sp, #16
   134f4:	str	r3, [ip, #-4]!
   134f8:	mov	r3, #6
   134fc:	str	r3, [sp]
   13500:	mov	r3, ip
   13504:	bl	13110 <table_set@@Base>
   13508:	add	sp, sp, #20
   1350c:	pop	{pc}		; (ldr pc, [sp], #4)

00013510 <table_set_uint32@@Base>:
   13510:	push	{r0, r1, r2, r3, r4, lr}
   13514:	add	ip, sp, #16
   13518:	str	r3, [ip, #-4]!
   1351c:	mov	r3, #7
   13520:	str	r3, [sp]
   13524:	mov	r3, ip
   13528:	bl	13110 <table_set@@Base>
   1352c:	add	sp, sp, #20
   13530:	pop	{pc}		; (ldr pc, [sp], #4)

00013534 <table_set_int64@@Base>:
   13534:	mov	r3, #8
   13538:	push	{r0, r1, r2, lr}
   1353c:	str	r3, [sp]
   13540:	add	r3, sp, #16
   13544:	bl	13110 <table_set@@Base>
   13548:	add	sp, sp, #12
   1354c:	pop	{pc}		; (ldr pc, [sp], #4)

00013550 <table_set_uint64@@Base>:
   13550:	mov	r3, #9
   13554:	push	{r0, r1, r2, lr}
   13558:	str	r3, [sp]
   1355c:	add	r3, sp, #16
   13560:	bl	13110 <table_set@@Base>
   13564:	add	sp, sp, #12
   13568:	pop	{pc}		; (ldr pc, [sp], #4)

0001356c <table_set_short@@Base>:
   1356c:	push	{r0, r1, r2, r3, r4, lr}
   13570:	add	ip, sp, #16
   13574:	strh	r3, [ip, #-2]!
   13578:	mov	r3, #10
   1357c:	str	r3, [sp]
   13580:	mov	r3, ip
   13584:	bl	13110 <table_set@@Base>
   13588:	add	sp, sp, #20
   1358c:	pop	{pc}		; (ldr pc, [sp], #4)

00013590 <table_set_ushort@@Base>:
   13590:	push	{r0, r1, r2, r3, r4, lr}
   13594:	add	ip, sp, #16
   13598:	strh	r3, [ip, #-2]!
   1359c:	mov	r3, #11
   135a0:	str	r3, [sp]
   135a4:	mov	r3, ip
   135a8:	bl	13110 <table_set@@Base>
   135ac:	add	sp, sp, #20
   135b0:	pop	{pc}		; (ldr pc, [sp], #4)

000135b4 <table_set_long@@Base>:
   135b4:	push	{r0, r1, r2, r3, r4, lr}
   135b8:	add	ip, sp, #16
   135bc:	str	r3, [ip, #-4]!
   135c0:	mov	r3, #12
   135c4:	str	r3, [sp]
   135c8:	mov	r3, ip
   135cc:	bl	13110 <table_set@@Base>
   135d0:	add	sp, sp, #20
   135d4:	pop	{pc}		; (ldr pc, [sp], #4)

000135d8 <table_set_ulong@@Base>:
   135d8:	push	{r0, r1, r2, r3, r4, lr}
   135dc:	add	ip, sp, #16
   135e0:	str	r3, [ip, #-4]!
   135e4:	mov	r3, #13
   135e8:	str	r3, [sp]
   135ec:	mov	r3, ip
   135f0:	bl	13110 <table_set@@Base>
   135f4:	add	sp, sp, #20
   135f8:	pop	{pc}		; (ldr pc, [sp], #4)

000135fc <table_set_llong@@Base>:
   135fc:	mov	r3, #14
   13600:	push	{r0, r1, r2, lr}
   13604:	str	r3, [sp]
   13608:	add	r3, sp, #16
   1360c:	bl	13110 <table_set@@Base>
   13610:	add	sp, sp, #12
   13614:	pop	{pc}		; (ldr pc, [sp], #4)

00013618 <table_set_ullong@@Base>:
   13618:	mov	r3, #15
   1361c:	push	{r0, r1, r2, lr}
   13620:	str	r3, [sp]
   13624:	add	r3, sp, #16
   13628:	bl	13110 <table_set@@Base>
   1362c:	add	sp, sp, #12
   13630:	pop	{pc}		; (ldr pc, [sp], #4)

00013634 <table_set_float@@Base>:
   13634:	push	{r0, r1, r2, r3, r4, lr}
   13638:	add	r3, sp, #16
   1363c:	mov	ip, #16
   13640:	vstmdb	r3!, {s0}
   13644:	str	ip, [sp]
   13648:	bl	13110 <table_set@@Base>
   1364c:	add	sp, sp, #20
   13650:	pop	{pc}		; (ldr pc, [sp], #4)

00013654 <table_set_double@@Base>:
   13654:	push	{r0, r1, r2, r3, r4, lr}
   13658:	add	r3, sp, #16
   1365c:	mov	ip, #17
   13660:	vstmdb	r3!, {d0}
   13664:	str	ip, [sp]
   13668:	bl	13110 <table_set@@Base>
   1366c:	add	sp, sp, #20
   13670:	pop	{pc}		; (ldr pc, [sp], #4)

00013674 <table_set_ldouble@@Base>:
   13674:	push	{r0, r1, r2, r3, r4, lr}
   13678:	add	r3, sp, #16
   1367c:	mov	ip, #18
   13680:	vstmdb	r3!, {d0}
   13684:	str	ip, [sp]
   13688:	bl	13110 <table_set@@Base>
   1368c:	add	sp, sp, #20
   13690:	pop	{pc}		; (ldr pc, [sp], #4)

00013694 <table_set_string@@Base>:
   13694:	mov	ip, #21
   13698:	push	{r0, r1, r2, lr}
   1369c:	str	ip, [sp]
   136a0:	bl	13110 <table_set@@Base>
   136a4:	add	sp, sp, #12
   136a8:	pop	{pc}		; (ldr pc, [sp], #4)

000136ac <table_set_char@@Base>:
   136ac:	push	{r0, r1, r2, r3, r4, lr}
   136b0:	add	ip, sp, #16
   136b4:	strb	r3, [ip, #-1]!
   136b8:	mov	r3, #19
   136bc:	str	r3, [sp]
   136c0:	mov	r3, ip
   136c4:	bl	13110 <table_set@@Base>
   136c8:	add	sp, sp, #20
   136cc:	pop	{pc}		; (ldr pc, [sp], #4)

000136d0 <table_set_uchar@@Base>:
   136d0:	push	{r0, r1, r2, r3, r4, lr}
   136d4:	add	ip, sp, #16
   136d8:	strb	r3, [ip, #-1]!
   136dc:	mov	r3, #20
   136e0:	str	r3, [sp]
   136e4:	mov	r3, ip
   136e8:	bl	13110 <table_set@@Base>
   136ec:	add	sp, sp, #20
   136f0:	pop	{pc}		; (ldr pc, [sp], #4)

000136f4 <table_set_ptr@@Base>:
   136f4:	mov	ip, #23
   136f8:	push	{r0, r1, r2, lr}
   136fc:	str	ip, [sp]
   13700:	bl	13110 <table_set@@Base>
   13704:	add	sp, sp, #12
   13708:	pop	{pc}		; (ldr pc, [sp], #4)

0001370c <table_cell_to_buffer@@Base>:
   1370c:	push	{r4, r5, r6, r7, lr}
   13710:	sub	sp, sp, #20
   13714:	mov	r7, r1
   13718:	mov	r1, r2
   1371c:	str	r2, [sp, #12]
   13720:	mov	r6, r0
   13724:	mov	r4, r3
   13728:	ldr	r5, [sp, #40]	; 0x28
   1372c:	bl	126d0 <table_get_column_data_type@@Base>
   13730:	ldr	r2, [sp, #12]
   13734:	cmp	r0, #23
   13738:	ldrls	pc, [pc, r0, lsl #2]
   1373c:	b	1385c <table_cell_to_buffer@@Base+0x150>
   13740:	andeq	r3, r1, r0, lsr #15
   13744:			; <UNDEFINED> instruction: 0x000137b8
   13748:	ldrdeq	r3, [r1], -ip
   1374c:	andeq	r3, r1, ip, ror #15
   13750:	strdeq	r3, [r1], -ip
   13754:	andeq	r3, r1, ip, lsl #16
   13758:	andeq	r3, r1, ip, lsl r8
   1375c:	andeq	r3, r1, ip, lsr #16
   13760:	andeq	r3, r1, ip, lsr r8
   13764:	andeq	r3, r1, r8, ror #16
   13768:	andeq	r3, r1, r0, lsl #17
   1376c:	muleq	r1, r8, r8
   13770:			; <UNDEFINED> instruction: 0x000138b0
   13774:	andeq	r3, r1, r8, asr #17
   13778:	andeq	r3, r1, r0, ror #17
   1377c:	strdeq	r3, [r1], -r0
   13780:	andeq	r3, r1, r8, lsl r9
   13784:	andeq	r3, r1, r0, asr #18
   13788:	andeq	r3, r1, r8, asr r9
   1378c:	andeq	r3, r1, r0, lsl #19
   13790:	muleq	r1, r8, r9
   13794:	andeq	r3, r1, r0, lsl #18
   13798:	andeq	r3, r1, r0, ror r9
   1379c:	andeq	r3, r1, r8, lsr #19
   137a0:	mov	r1, r7
   137a4:	mov	r0, r6
   137a8:	bl	12e08 <table_get_int@@Base>
   137ac:	mov	r3, r0
   137b0:	ldr	r2, [pc, #520]	; 139c0 <table_cell_to_buffer@@Base+0x2b4>
   137b4:	b	137cc <table_cell_to_buffer@@Base+0xc0>
   137b8:	mov	r1, r7
   137bc:	mov	r0, r6
   137c0:	bl	12e1c <table_get_uint@@Base>
   137c4:	ldr	r2, [pc, #504]	; 139c4 <table_cell_to_buffer@@Base+0x2b8>
   137c8:	mov	r3, r0
   137cc:	mov	r1, r5
   137d0:	mov	r0, r4
   137d4:	bl	11b88 <snprintf@plt>
   137d8:	b	1385c <table_cell_to_buffer@@Base+0x150>
   137dc:	mov	r1, r7
   137e0:	mov	r0, r6
   137e4:	bl	12de8 <table_get_int8@@Base>
   137e8:	b	137ac <table_cell_to_buffer@@Base+0xa0>
   137ec:	mov	r1, r7
   137f0:	mov	r0, r6
   137f4:	bl	12ed4 <table_get_uint8@@Base>
   137f8:	b	137c4 <table_cell_to_buffer@@Base+0xb8>
   137fc:	mov	r1, r7
   13800:	mov	r0, r6
   13804:	bl	12e30 <table_get_int16@@Base>
   13808:	b	137ac <table_cell_to_buffer@@Base+0xa0>
   1380c:	mov	r1, r7
   13810:	mov	r0, r6
   13814:	bl	12e44 <table_get_uint16@@Base>
   13818:	b	137c4 <table_cell_to_buffer@@Base+0xb8>
   1381c:	mov	r1, r7
   13820:	mov	r0, r6
   13824:	bl	12df8 <table_get_int32@@Base>
   13828:	b	137ac <table_cell_to_buffer@@Base+0xa0>
   1382c:	mov	r1, r7
   13830:	mov	r0, r6
   13834:	bl	12e0c <table_get_uint32@@Base>
   13838:	b	137c4 <table_cell_to_buffer@@Base+0xb8>
   1383c:	mov	r1, r7
   13840:	mov	r0, r6
   13844:	bl	12e78 <table_get_int64@@Base>
   13848:	ldr	r2, [pc, #376]	; 139c8 <table_cell_to_buffer@@Base+0x2bc>
   1384c:	strd	r0, [sp]
   13850:	mov	r1, r5
   13854:	mov	r0, r4
   13858:	bl	11b88 <snprintf@plt>
   1385c:	mov	r0, #0
   13860:	add	sp, sp, #20
   13864:	pop	{r4, r5, r6, r7, pc}
   13868:	mov	r1, r7
   1386c:	mov	r0, r6
   13870:	bl	12e8c <table_get_uint64@@Base>
   13874:	strd	r0, [sp]
   13878:	ldr	r2, [pc, #332]	; 139cc <table_cell_to_buffer@@Base+0x2c0>
   1387c:	b	13850 <table_cell_to_buffer@@Base+0x144>
   13880:	mov	r1, r7
   13884:	mov	r0, r6
   13888:	bl	12e20 <table_get_short@@Base>
   1388c:	ldr	r2, [pc, #316]	; 139d0 <table_cell_to_buffer@@Base+0x2c4>
   13890:	mov	r3, r0
   13894:	b	137cc <table_cell_to_buffer@@Base+0xc0>
   13898:	mov	r1, r7
   1389c:	mov	r0, r6
   138a0:	bl	12e34 <table_get_ushort@@Base>
   138a4:	ldr	r2, [pc, #296]	; 139d4 <table_cell_to_buffer@@Base+0x2c8>
   138a8:	mov	r3, r0
   138ac:	b	137cc <table_cell_to_buffer@@Base+0xc0>
   138b0:	mov	r1, r7
   138b4:	mov	r0, r6
   138b8:	bl	12e48 <table_get_long@@Base>
   138bc:	ldr	r2, [pc, #276]	; 139d8 <table_cell_to_buffer@@Base+0x2cc>
   138c0:	mov	r3, r0
   138c4:	b	137cc <table_cell_to_buffer@@Base+0xc0>
   138c8:	mov	r1, r7
   138cc:	mov	r0, r6
   138d0:	bl	12e58 <table_get_ulong@@Base>
   138d4:	ldr	r2, [pc, #256]	; 139dc <table_cell_to_buffer@@Base+0x2d0>
   138d8:	mov	r3, r0
   138dc:	b	137cc <table_cell_to_buffer@@Base+0xc0>
   138e0:	mov	r1, r7
   138e4:	mov	r0, r6
   138e8:	bl	12e68 <table_get_llong@@Base>
   138ec:	b	13848 <table_cell_to_buffer@@Base+0x13c>
   138f0:	mov	r1, r7
   138f4:	mov	r0, r6
   138f8:	bl	12e7c <table_get_ullong@@Base>
   138fc:	b	13874 <table_cell_to_buffer@@Base+0x168>
   13900:	mov	r1, r7
   13904:	mov	r0, r6
   13908:	bl	12ed8 <table_get_string@@Base>
   1390c:	ldr	r2, [pc, #204]	; 139e0 <table_cell_to_buffer@@Base+0x2d4>
   13910:	mov	r3, r0
   13914:	b	137cc <table_cell_to_buffer@@Base+0xc0>
   13918:	mov	r1, r7
   1391c:	mov	r0, r6
   13920:	bl	12e90 <table_get_float@@Base>
   13924:	ldr	r2, [pc, #184]	; 139e4 <table_cell_to_buffer@@Base+0x2d8>
   13928:	vcvt.f64.f32	d0, s0
   1392c:	vstr	d0, [sp]
   13930:	mov	r1, r5
   13934:	mov	r0, r4
   13938:	bl	11b88 <snprintf@plt>
   1393c:	b	1385c <table_cell_to_buffer@@Base+0x150>
   13940:	mov	r1, r7
   13944:	mov	r0, r6
   13948:	bl	12ea0 <table_get_double@@Base>
   1394c:	ldr	r2, [pc, #148]	; 139e8 <table_cell_to_buffer@@Base+0x2dc>
   13950:	vstr	d0, [sp]
   13954:	b	13930 <table_cell_to_buffer@@Base+0x224>
   13958:	mov	r1, r7
   1395c:	mov	r0, r6
   13960:	bl	12eb0 <table_get_ldouble@@Base>
   13964:	ldr	r2, [pc, #128]	; 139ec <table_cell_to_buffer@@Base+0x2e0>
   13968:	vstr	d0, [sp]
   1396c:	b	13930 <table_cell_to_buffer@@Base+0x224>
   13970:	mov	r1, r7
   13974:	mov	r0, r6
   13978:	bl	12dd8 <table_get_bool@@Base>
   1397c:	b	137ac <table_cell_to_buffer@@Base+0xa0>
   13980:	mov	r1, r7
   13984:	mov	r0, r6
   13988:	bl	12ed0 <table_get_char@@Base>
   1398c:	mov	r3, r0
   13990:	ldr	r2, [pc, #88]	; 139f0 <table_cell_to_buffer@@Base+0x2e4>
   13994:	b	137cc <table_cell_to_buffer@@Base+0xc0>
   13998:	mov	r1, r7
   1399c:	mov	r0, r6
   139a0:	bl	12ec0 <table_get_uchar@@Base>
   139a4:	b	1398c <table_cell_to_buffer@@Base+0x280>
   139a8:	mov	r1, r7
   139ac:	mov	r0, r6
   139b0:	bl	12edc <table_get_ptr@@Base>
   139b4:	ldr	r2, [pc, #56]	; 139f4 <table_cell_to_buffer@@Base+0x2e8>
   139b8:	mov	r3, r0
   139bc:	b	137cc <table_cell_to_buffer@@Base+0xc0>
   139c0:	andeq	r4, r1, ip, ror #5
   139c4:	andeq	r4, r1, r0, asr r3
   139c8:	andeq	r4, r1, r3, asr r3
   139cc:	andeq	r4, r1, r8, asr r3
   139d0:	andeq	r4, r1, sp, asr r3
   139d4:	andeq	r4, r1, r1, ror #6
   139d8:	andeq	r4, r1, r5, ror #6
   139dc:	andeq	r4, r1, r9, ror #6
   139e0:	andeq	r4, r1, sp, ror #6
   139e4:	andeq	r4, r1, r0, ror r3
   139e8:	andeq	r4, r1, r3, ror r3
   139ec:	andeq	r4, r1, r7, ror r3
   139f0:	andeq	r4, r1, fp, ror r3
   139f4:	andeq	r4, r1, lr, ror r3

000139f8 <table_cell_from_buffer@@Base>:
   139f8:	push	{r4, r5, r6, r7, lr}
   139fc:	mov	r7, r1
   13a00:	sub	sp, sp, #268	; 0x10c
   13a04:	mov	r1, r2
   13a08:	mov	r6, r0
   13a0c:	mov	r5, r2
   13a10:	mov	r4, r3
   13a14:	bl	126d0 <table_get_column_data_type@@Base>
   13a18:	cmp	r0, #23
   13a1c:	ldrls	pc, [pc, r0, lsl #2]
   13a20:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13a24:	andeq	r3, r1, r4, lsl #21
   13a28:			; <UNDEFINED> instruction: 0x00013ab8
   13a2c:	andeq	r3, r1, r8, ror #21
   13a30:	andeq	r3, r1, r8, lsl fp
   13a34:	andeq	r3, r1, r8, asr #22
   13a38:	andeq	r3, r1, r8, ror fp
   13a3c:	andeq	r3, r1, r8, lsr #23
   13a40:	ldrdeq	r3, [r1], -r8
   13a44:	andeq	r3, r1, r8, lsl #24
   13a48:	andeq	r3, r1, ip, lsr ip
   13a4c:	andeq	r3, r1, r0, ror ip
   13a50:	andeq	r3, r1, r0, lsr #25
   13a54:	ldrdeq	r3, [r1], -r0
   13a58:	andeq	r3, r1, r0, lsl #26
   13a5c:	andeq	r3, r1, r0, lsr sp
   13a60:	andeq	r3, r1, r4, ror #26
   13a64:	andeq	r3, r1, r8, asr #27
   13a68:	strdeq	r3, [r1], -r8
   13a6c:	andeq	r3, r1, r8, lsr #28
   13a70:			; <UNDEFINED> instruction: 0x00013eb4
   13a74:	andeq	r3, r1, r4, ror #29
   13a78:	muleq	r1, r8, sp
   13a7c:	andeq	r3, r1, r8, asr lr
   13a80:	andeq	r3, r1, r4, lsl pc
   13a84:	add	r2, sp, #8
   13a88:	ldr	r1, [pc, #1212]	; 13f4c <table_cell_from_buffer@@Base+0x554>
   13a8c:	mov	r0, r4
   13a90:	bl	11b94 <__isoc99_sscanf@plt>
   13a94:	cmp	r0, #1
   13a98:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13a9c:	ldr	r3, [sp, #8]
   13aa0:	mov	r2, r5
   13aa4:	mov	r1, r7
   13aa8:	mov	r0, r6
   13aac:	bl	13414 <table_set_int@@Base>
   13ab0:	mov	r4, #0
   13ab4:	b	13ea8 <table_cell_from_buffer@@Base+0x4b0>
   13ab8:	add	r2, sp, #8
   13abc:	ldr	r1, [pc, #1164]	; 13f50 <table_cell_from_buffer@@Base+0x558>
   13ac0:	mov	r0, r4
   13ac4:	bl	11b94 <__isoc99_sscanf@plt>
   13ac8:	cmp	r0, #1
   13acc:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13ad0:	ldr	r3, [sp, #8]
   13ad4:	mov	r2, r5
   13ad8:	mov	r1, r7
   13adc:	mov	r0, r6
   13ae0:	bl	13438 <table_set_uint@@Base>
   13ae4:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13ae8:	add	r2, sp, #8
   13aec:	ldr	r1, [pc, #1120]	; 13f54 <table_cell_from_buffer@@Base+0x55c>
   13af0:	mov	r0, r4
   13af4:	bl	11b94 <__isoc99_sscanf@plt>
   13af8:	cmp	r0, #1
   13afc:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13b00:	ldrsb	r3, [sp, #8]
   13b04:	mov	r2, r5
   13b08:	mov	r1, r7
   13b0c:	mov	r0, r6
   13b10:	bl	1345c <table_set_int8@@Base>
   13b14:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13b18:	add	r2, sp, #8
   13b1c:	ldr	r1, [pc, #1076]	; 13f58 <table_cell_from_buffer@@Base+0x560>
   13b20:	mov	r0, r4
   13b24:	bl	11b94 <__isoc99_sscanf@plt>
   13b28:	cmp	r0, #1
   13b2c:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13b30:	ldrb	r3, [sp, #8]
   13b34:	mov	r2, r5
   13b38:	mov	r1, r7
   13b3c:	mov	r0, r6
   13b40:	bl	13480 <table_set_uint8@@Base>
   13b44:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13b48:	add	r2, sp, #8
   13b4c:	ldr	r1, [pc, #1032]	; 13f5c <table_cell_from_buffer@@Base+0x564>
   13b50:	mov	r0, r4
   13b54:	bl	11b94 <__isoc99_sscanf@plt>
   13b58:	cmp	r0, #1
   13b5c:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13b60:	ldrsh	r3, [sp, #8]
   13b64:	mov	r2, r5
   13b68:	mov	r1, r7
   13b6c:	mov	r0, r6
   13b70:	bl	134a4 <table_set_int16@@Base>
   13b74:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13b78:	add	r2, sp, #8
   13b7c:	ldr	r1, [pc, #988]	; 13f60 <table_cell_from_buffer@@Base+0x568>
   13b80:	mov	r0, r4
   13b84:	bl	11b94 <__isoc99_sscanf@plt>
   13b88:	cmp	r0, #1
   13b8c:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13b90:	ldrh	r3, [sp, #8]
   13b94:	mov	r2, r5
   13b98:	mov	r1, r7
   13b9c:	mov	r0, r6
   13ba0:	bl	134c8 <table_set_uint16@@Base>
   13ba4:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13ba8:	add	r2, sp, #8
   13bac:	ldr	r1, [pc, #920]	; 13f4c <table_cell_from_buffer@@Base+0x554>
   13bb0:	mov	r0, r4
   13bb4:	bl	11b94 <__isoc99_sscanf@plt>
   13bb8:	cmp	r0, #1
   13bbc:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13bc0:	ldr	r3, [sp, #8]
   13bc4:	mov	r2, r5
   13bc8:	mov	r1, r7
   13bcc:	mov	r0, r6
   13bd0:	bl	134ec <table_set_int32@@Base>
   13bd4:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13bd8:	add	r2, sp, #8
   13bdc:	ldr	r1, [pc, #876]	; 13f50 <table_cell_from_buffer@@Base+0x558>
   13be0:	mov	r0, r4
   13be4:	bl	11b94 <__isoc99_sscanf@plt>
   13be8:	cmp	r0, #1
   13bec:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13bf0:	ldr	r3, [sp, #8]
   13bf4:	mov	r2, r5
   13bf8:	mov	r1, r7
   13bfc:	mov	r0, r6
   13c00:	bl	13510 <table_set_uint32@@Base>
   13c04:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13c08:	add	r2, sp, #8
   13c0c:	ldr	r1, [pc, #848]	; 13f64 <table_cell_from_buffer@@Base+0x56c>
   13c10:	mov	r0, r4
   13c14:	bl	11b94 <__isoc99_sscanf@plt>
   13c18:	cmp	r0, #1
   13c1c:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13c20:	ldrd	r2, [sp, #8]
   13c24:	mov	r1, r7
   13c28:	mov	r0, r6
   13c2c:	strd	r2, [sp]
   13c30:	mov	r2, r5
   13c34:	bl	13534 <table_set_int64@@Base>
   13c38:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13c3c:	add	r2, sp, #8
   13c40:	ldr	r1, [pc, #800]	; 13f68 <table_cell_from_buffer@@Base+0x570>
   13c44:	mov	r0, r4
   13c48:	bl	11b94 <__isoc99_sscanf@plt>
   13c4c:	cmp	r0, #1
   13c50:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13c54:	ldrd	r2, [sp, #8]
   13c58:	mov	r1, r7
   13c5c:	mov	r0, r6
   13c60:	strd	r2, [sp]
   13c64:	mov	r2, r5
   13c68:	bl	13550 <table_set_uint64@@Base>
   13c6c:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13c70:	add	r2, sp, #8
   13c74:	ldr	r1, [pc, #736]	; 13f5c <table_cell_from_buffer@@Base+0x564>
   13c78:	mov	r0, r4
   13c7c:	bl	11b94 <__isoc99_sscanf@plt>
   13c80:	cmp	r0, #1
   13c84:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13c88:	ldrsh	r3, [sp, #8]
   13c8c:	mov	r2, r5
   13c90:	mov	r1, r7
   13c94:	mov	r0, r6
   13c98:	bl	1356c <table_set_short@@Base>
   13c9c:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13ca0:	add	r2, sp, #8
   13ca4:	ldr	r1, [pc, #692]	; 13f60 <table_cell_from_buffer@@Base+0x568>
   13ca8:	mov	r0, r4
   13cac:	bl	11b94 <__isoc99_sscanf@plt>
   13cb0:	cmp	r0, #1
   13cb4:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13cb8:	ldrh	r3, [sp, #8]
   13cbc:	mov	r2, r5
   13cc0:	mov	r1, r7
   13cc4:	mov	r0, r6
   13cc8:	bl	13590 <table_set_ushort@@Base>
   13ccc:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13cd0:	add	r2, sp, #8
   13cd4:	ldr	r1, [pc, #656]	; 13f6c <table_cell_from_buffer@@Base+0x574>
   13cd8:	mov	r0, r4
   13cdc:	bl	11b94 <__isoc99_sscanf@plt>
   13ce0:	cmp	r0, #1
   13ce4:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13ce8:	ldr	r3, [sp, #8]
   13cec:	mov	r2, r5
   13cf0:	mov	r1, r7
   13cf4:	mov	r0, r6
   13cf8:	bl	135b4 <table_set_long@@Base>
   13cfc:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13d00:	add	r2, sp, #8
   13d04:	ldr	r1, [pc, #612]	; 13f70 <table_cell_from_buffer@@Base+0x578>
   13d08:	mov	r0, r4
   13d0c:	bl	11b94 <__isoc99_sscanf@plt>
   13d10:	cmp	r0, #1
   13d14:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13d18:	ldr	r3, [sp, #8]
   13d1c:	mov	r2, r5
   13d20:	mov	r1, r7
   13d24:	mov	r0, r6
   13d28:	bl	135d8 <table_set_ulong@@Base>
   13d2c:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13d30:	add	r2, sp, #8
   13d34:	ldr	r1, [pc, #552]	; 13f64 <table_cell_from_buffer@@Base+0x56c>
   13d38:	mov	r0, r4
   13d3c:	bl	11b94 <__isoc99_sscanf@plt>
   13d40:	cmp	r0, #1
   13d44:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13d48:	ldrd	r2, [sp, #8]
   13d4c:	mov	r1, r7
   13d50:	mov	r0, r6
   13d54:	strd	r2, [sp]
   13d58:	mov	r2, r5
   13d5c:	bl	135fc <table_set_llong@@Base>
   13d60:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13d64:	add	r2, sp, #8
   13d68:	ldr	r1, [pc, #504]	; 13f68 <table_cell_from_buffer@@Base+0x570>
   13d6c:	mov	r0, r4
   13d70:	bl	11b94 <__isoc99_sscanf@plt>
   13d74:	cmp	r0, #1
   13d78:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13d7c:	ldrd	r2, [sp, #8]
   13d80:	mov	r1, r7
   13d84:	mov	r0, r6
   13d88:	strd	r2, [sp]
   13d8c:	mov	r2, r5
   13d90:	bl	13618 <table_set_ullong@@Base>
   13d94:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13d98:	add	r2, sp, #8
   13d9c:	ldr	r1, [pc, #464]	; 13f74 <table_cell_from_buffer@@Base+0x57c>
   13da0:	mov	r0, r4
   13da4:	bl	11b94 <__isoc99_sscanf@plt>
   13da8:	cmp	r0, #1
   13dac:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13db0:	add	r3, sp, #8
   13db4:	mov	r2, r5
   13db8:	mov	r1, r7
   13dbc:	mov	r0, r6
   13dc0:	bl	13694 <table_set_string@@Base>
   13dc4:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13dc8:	add	r2, sp, #8
   13dcc:	ldr	r1, [pc, #420]	; 13f78 <table_cell_from_buffer@@Base+0x580>
   13dd0:	mov	r0, r4
   13dd4:	bl	11b94 <__isoc99_sscanf@plt>
   13dd8:	cmp	r0, #1
   13ddc:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13de0:	vldr	s0, [sp, #8]
   13de4:	mov	r2, r5
   13de8:	mov	r1, r7
   13dec:	mov	r0, r6
   13df0:	bl	13634 <table_set_float@@Base>
   13df4:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13df8:	add	r2, sp, #8
   13dfc:	ldr	r1, [pc, #376]	; 13f7c <table_cell_from_buffer@@Base+0x584>
   13e00:	mov	r0, r4
   13e04:	bl	11b94 <__isoc99_sscanf@plt>
   13e08:	cmp	r0, #1
   13e0c:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13e10:	vldr	d0, [sp, #8]
   13e14:	mov	r2, r5
   13e18:	mov	r1, r7
   13e1c:	mov	r0, r6
   13e20:	bl	13654 <table_set_double@@Base>
   13e24:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13e28:	add	r2, sp, #8
   13e2c:	ldr	r1, [pc, #332]	; 13f80 <table_cell_from_buffer@@Base+0x588>
   13e30:	mov	r0, r4
   13e34:	bl	11b94 <__isoc99_sscanf@plt>
   13e38:	cmp	r0, #1
   13e3c:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13e40:	vldr	d0, [sp, #8]
   13e44:	mov	r2, r5
   13e48:	mov	r1, r7
   13e4c:	mov	r0, r6
   13e50:	bl	13674 <table_set_ldouble@@Base>
   13e54:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13e58:	add	r2, sp, #8
   13e5c:	ldr	r1, [pc, #232]	; 13f4c <table_cell_from_buffer@@Base+0x554>
   13e60:	mov	r0, r4
   13e64:	bl	11b94 <__isoc99_sscanf@plt>
   13e68:	cmp	r0, #1
   13e6c:	mov	r3, r0
   13e70:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13e74:	ldr	r4, [sp, #8]
   13e78:	cmp	r4, #0
   13e7c:	beq	13e94 <table_cell_from_buffer@@Base+0x49c>
   13e80:	mov	r2, r5
   13e84:	mov	r1, r7
   13e88:	mov	r0, r6
   13e8c:	bl	133f0 <table_set_bool@@Base>
   13e90:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13e94:	mov	r3, r4
   13e98:	mov	r2, r5
   13e9c:	mov	r1, r7
   13ea0:	mov	r0, r6
   13ea4:	bl	133f0 <table_set_bool@@Base>
   13ea8:	mov	r0, r4
   13eac:	add	sp, sp, #268	; 0x10c
   13eb0:	pop	{r4, r5, r6, r7, pc}
   13eb4:	add	r2, sp, #8
   13eb8:	ldr	r1, [pc, #196]	; 13f84 <table_cell_from_buffer@@Base+0x58c>
   13ebc:	mov	r0, r4
   13ec0:	bl	11b94 <__isoc99_sscanf@plt>
   13ec4:	cmp	r0, #1
   13ec8:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13ecc:	ldrb	r3, [sp, #8]
   13ed0:	mov	r2, r5
   13ed4:	mov	r1, r7
   13ed8:	mov	r0, r6
   13edc:	bl	136ac <table_set_char@@Base>
   13ee0:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13ee4:	add	r2, sp, #8
   13ee8:	ldr	r1, [pc, #148]	; 13f84 <table_cell_from_buffer@@Base+0x58c>
   13eec:	mov	r0, r4
   13ef0:	bl	11b94 <__isoc99_sscanf@plt>
   13ef4:	cmp	r0, #1
   13ef8:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13efc:	ldrb	r3, [sp, #8]
   13f00:	mov	r2, r5
   13f04:	mov	r1, r7
   13f08:	mov	r0, r6
   13f0c:	bl	136d0 <table_set_uchar@@Base>
   13f10:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13f14:	add	r2, sp, #8
   13f18:	ldr	r1, [pc, #104]	; 13f88 <table_cell_from_buffer@@Base+0x590>
   13f1c:	mov	r0, r4
   13f20:	bl	11b94 <__isoc99_sscanf@plt>
   13f24:	cmp	r0, #1
   13f28:	bne	13f44 <table_cell_from_buffer@@Base+0x54c>
   13f2c:	ldr	r3, [sp, #8]
   13f30:	mov	r2, r5
   13f34:	mov	r1, r7
   13f38:	mov	r0, r6
   13f3c:	bl	136f4 <table_set_ptr@@Base>
   13f40:	b	13ab0 <table_cell_from_buffer@@Base+0xb8>
   13f44:	mvn	r4, #0
   13f48:	b	13ea8 <table_cell_from_buffer@@Base+0x4b0>
   13f4c:	andeq	r4, r1, ip, ror #5
   13f50:	andeq	r4, r1, r0, asr r3
   13f54:	andeq	r4, r1, r1, lsl #7
   13f58:	andeq	r4, r1, r6, lsl #7
   13f5c:	andeq	r4, r1, sp, asr r3
   13f60:	andeq	r4, r1, r1, ror #6
   13f64:	andeq	r4, r1, r3, asr r3
   13f68:	andeq	r4, r1, r8, asr r3
   13f6c:	andeq	r4, r1, r5, ror #6
   13f70:	andeq	r4, r1, r9, ror #6
   13f74:	andeq	r4, r1, sp, ror #6
   13f78:	andeq	r4, r1, r0, ror r3
   13f7c:	andeq	r4, r1, r3, ror r3
   13f80:	andeq	r4, r1, r7, ror r3
   13f84:	andeq	r4, r1, fp, ror r3
   13f88:	andeq	r4, r1, lr, ror r3

00013f8c <table_get_cell_ptr@@Base>:
   13f8c:	push	{r4, lr}
   13f90:	mov	r4, r2
   13f94:	bl	130f4 <table_get_row_ptr@@Base>
   13f98:	ldr	r0, [r0]
   13f9c:	add	r0, r0, r4, lsl #2
   13fa0:	pop	{r4, pc}

00013fa4 <table_cell_init@@Base>:
   13fa4:	push	{r4, lr}
   13fa8:	bl	13f8c <table_get_cell_ptr@@Base>
   13fac:	mov	r3, #0
   13fb0:	str	r3, [r0]
   13fb4:	pop	{r4, pc}

00013fb8 <table_cell_destroy@@Base>:
   13fb8:	push	{r4, r5, r6, lr}
   13fbc:	mov	r6, r1
   13fc0:	mov	r1, r2
   13fc4:	mov	r5, r0
   13fc8:	mov	r4, r2
   13fcc:	bl	126d0 <table_get_column_data_type@@Base>
   13fd0:	cmp	r0, #23
   13fd4:	popeq	{r4, r5, r6, pc}
   13fd8:	mov	r2, r4
   13fdc:	mov	r1, r6
   13fe0:	mov	r0, r5
   13fe4:	bl	13f8c <table_get_cell_ptr@@Base>
   13fe8:	ldr	r0, [r0]
   13fec:	cmp	r0, #0
   13ff0:	popeq	{r4, r5, r6, pc}
   13ff4:	pop	{r4, r5, r6, lr}
   13ff8:	b	11b1c <free@plt>

00013ffc <table_cell_nullify@@Base>:
   13ffc:	push	{r4, lr}
   14000:	bl	13f8c <table_get_cell_ptr@@Base>
   14004:	mov	r4, r0
   14008:	ldr	r0, [r0]
   1400c:	cmp	r0, #0
   14010:	beq	14020 <table_cell_nullify@@Base+0x24>
   14014:	bl	11b1c <free@plt>
   14018:	mov	r3, #0
   1401c:	str	r3, [r4]
   14020:	mov	r0, #0
   14024:	pop	{r4, pc}
   14028:	subs	r2, r1, #1
   1402c:	bxeq	lr
   14030:	bcc	14208 <table_cell_nullify@@Base+0x20c>
   14034:	cmp	r0, r1
   14038:	bls	141ec <table_cell_nullify@@Base+0x1f0>
   1403c:	tst	r1, r2
   14040:	beq	141f8 <table_cell_nullify@@Base+0x1fc>
   14044:	clz	r3, r0
   14048:	clz	r2, r1
   1404c:	sub	r3, r2, r3
   14050:	rsbs	r3, r3, #31
   14054:	addne	r3, r3, r3, lsl #1
   14058:	mov	r2, #0
   1405c:	addne	pc, pc, r3, lsl #2
   14060:	nop			; (mov r0, r0)
   14064:	cmp	r0, r1, lsl #31
   14068:	adc	r2, r2, r2
   1406c:	subcs	r0, r0, r1, lsl #31
   14070:	cmp	r0, r1, lsl #30
   14074:	adc	r2, r2, r2
   14078:	subcs	r0, r0, r1, lsl #30
   1407c:	cmp	r0, r1, lsl #29
   14080:	adc	r2, r2, r2
   14084:	subcs	r0, r0, r1, lsl #29
   14088:	cmp	r0, r1, lsl #28
   1408c:	adc	r2, r2, r2
   14090:	subcs	r0, r0, r1, lsl #28
   14094:	cmp	r0, r1, lsl #27
   14098:	adc	r2, r2, r2
   1409c:	subcs	r0, r0, r1, lsl #27
   140a0:	cmp	r0, r1, lsl #26
   140a4:	adc	r2, r2, r2
   140a8:	subcs	r0, r0, r1, lsl #26
   140ac:	cmp	r0, r1, lsl #25
   140b0:	adc	r2, r2, r2
   140b4:	subcs	r0, r0, r1, lsl #25
   140b8:	cmp	r0, r1, lsl #24
   140bc:	adc	r2, r2, r2
   140c0:	subcs	r0, r0, r1, lsl #24
   140c4:	cmp	r0, r1, lsl #23
   140c8:	adc	r2, r2, r2
   140cc:	subcs	r0, r0, r1, lsl #23
   140d0:	cmp	r0, r1, lsl #22
   140d4:	adc	r2, r2, r2
   140d8:	subcs	r0, r0, r1, lsl #22
   140dc:	cmp	r0, r1, lsl #21
   140e0:	adc	r2, r2, r2
   140e4:	subcs	r0, r0, r1, lsl #21
   140e8:	cmp	r0, r1, lsl #20
   140ec:	adc	r2, r2, r2
   140f0:	subcs	r0, r0, r1, lsl #20
   140f4:	cmp	r0, r1, lsl #19
   140f8:	adc	r2, r2, r2
   140fc:	subcs	r0, r0, r1, lsl #19
   14100:	cmp	r0, r1, lsl #18
   14104:	adc	r2, r2, r2
   14108:	subcs	r0, r0, r1, lsl #18
   1410c:	cmp	r0, r1, lsl #17
   14110:	adc	r2, r2, r2
   14114:	subcs	r0, r0, r1, lsl #17
   14118:	cmp	r0, r1, lsl #16
   1411c:	adc	r2, r2, r2
   14120:	subcs	r0, r0, r1, lsl #16
   14124:	cmp	r0, r1, lsl #15
   14128:	adc	r2, r2, r2
   1412c:	subcs	r0, r0, r1, lsl #15
   14130:	cmp	r0, r1, lsl #14
   14134:	adc	r2, r2, r2
   14138:	subcs	r0, r0, r1, lsl #14
   1413c:	cmp	r0, r1, lsl #13
   14140:	adc	r2, r2, r2
   14144:	subcs	r0, r0, r1, lsl #13
   14148:	cmp	r0, r1, lsl #12
   1414c:	adc	r2, r2, r2
   14150:	subcs	r0, r0, r1, lsl #12
   14154:	cmp	r0, r1, lsl #11
   14158:	adc	r2, r2, r2
   1415c:	subcs	r0, r0, r1, lsl #11
   14160:	cmp	r0, r1, lsl #10
   14164:	adc	r2, r2, r2
   14168:	subcs	r0, r0, r1, lsl #10
   1416c:	cmp	r0, r1, lsl #9
   14170:	adc	r2, r2, r2
   14174:	subcs	r0, r0, r1, lsl #9
   14178:	cmp	r0, r1, lsl #8
   1417c:	adc	r2, r2, r2
   14180:	subcs	r0, r0, r1, lsl #8
   14184:	cmp	r0, r1, lsl #7
   14188:	adc	r2, r2, r2
   1418c:	subcs	r0, r0, r1, lsl #7
   14190:	cmp	r0, r1, lsl #6
   14194:	adc	r2, r2, r2
   14198:	subcs	r0, r0, r1, lsl #6
   1419c:	cmp	r0, r1, lsl #5
   141a0:	adc	r2, r2, r2
   141a4:	subcs	r0, r0, r1, lsl #5
   141a8:	cmp	r0, r1, lsl #4
   141ac:	adc	r2, r2, r2
   141b0:	subcs	r0, r0, r1, lsl #4
   141b4:	cmp	r0, r1, lsl #3
   141b8:	adc	r2, r2, r2
   141bc:	subcs	r0, r0, r1, lsl #3
   141c0:	cmp	r0, r1, lsl #2
   141c4:	adc	r2, r2, r2
   141c8:	subcs	r0, r0, r1, lsl #2
   141cc:	cmp	r0, r1, lsl #1
   141d0:	adc	r2, r2, r2
   141d4:	subcs	r0, r0, r1, lsl #1
   141d8:	cmp	r0, r1
   141dc:	adc	r2, r2, r2
   141e0:	subcs	r0, r0, r1
   141e4:	mov	r0, r2
   141e8:	bx	lr
   141ec:	moveq	r0, #1
   141f0:	movne	r0, #0
   141f4:	bx	lr
   141f8:	clz	r2, r1
   141fc:	rsb	r2, r2, #31
   14200:	lsr	r0, r0, r2
   14204:	bx	lr
   14208:	cmp	r0, #0
   1420c:	mvnne	r0, #0
   14210:	b	14234 <table_cell_nullify@@Base+0x238>
   14214:	cmp	r1, #0
   14218:	beq	14208 <table_cell_nullify@@Base+0x20c>
   1421c:	push	{r0, r1, lr}
   14220:	bl	14028 <table_cell_nullify@@Base+0x2c>
   14224:	pop	{r1, r2, lr}
   14228:	mul	r3, r2, r0
   1422c:	sub	r1, r1, r3
   14230:	bx	lr
   14234:	push	{r1, lr}
   14238:	mov	r0, #8
   1423c:	bl	11af8 <raise@plt>
   14240:	pop	{r1, pc}

00014244 <__libc_csu_init@@Base>:
   14244:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14248:	mov	r7, r0
   1424c:	ldr	r6, [pc, #72]	; 1429c <__libc_csu_init@@Base+0x58>
   14250:	ldr	r5, [pc, #72]	; 142a0 <__libc_csu_init@@Base+0x5c>
   14254:	add	r6, pc, r6
   14258:	add	r5, pc, r5
   1425c:	sub	r6, r6, r5
   14260:	mov	r8, r1
   14264:	mov	r9, r2
   14268:	bl	11ad8 <raise@plt-0x20>
   1426c:	asrs	r6, r6, #2
   14270:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14274:	mov	r4, #0
   14278:	add	r4, r4, #1
   1427c:	ldr	r3, [r5], #4
   14280:	mov	r2, r9
   14284:	mov	r1, r8
   14288:	mov	r0, r7
   1428c:	blx	r3
   14290:	cmp	r6, r4
   14294:	bne	14278 <__libc_csu_init@@Base+0x34>
   14298:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1429c:			; <UNDEFINED> instruction: 0x00010cb4
   142a0:	andeq	r0, r1, ip, lsr #25

000142a4 <__libc_csu_fini@@Base>:
   142a4:	bx	lr

Disassembly of section .fini:

000142a8 <.fini>:
   142a8:	push	{r3, lr}
   142ac:	pop	{r3, pc}
