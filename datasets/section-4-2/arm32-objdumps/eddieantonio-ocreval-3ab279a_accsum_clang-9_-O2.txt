
../repos/eddieantonio-ocreval-3ab279a/accsum/accsum:     file format elf32-littlearm


Disassembly of section .init:

000109e8 <.init>:
   109e8:	push	{r3, lr}
   109ec:	bl	10bc4 <getc@plt+0x48>
   109f0:	pop	{r3, pc}

Disassembly of section .plt:

000109f4 <calloc@plt-0x14>:
   109f4:	push	{lr}		; (str lr, [sp, #-4]!)
   109f8:	ldr	lr, [pc, #4]	; 10a04 <calloc@plt-0x4>
   109fc:	add	lr, pc, lr
   10a00:	ldr	pc, [lr, #8]!
   10a04:	strdeq	r4, [r1], -ip

00010a08 <calloc@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a14 <strcmp@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a20 <fopen@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a2c <free@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a38 <utf8proc_get_property@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a44 <fgets@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a50 <utf8proc_encode_char@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a5c <strdup@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a68 <rewind@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a74 <unlink@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a80 <utf8proc_tolower@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a8c <__xstat@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a98 <fwrite@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1436]!	; 0x59c

00010aa4 <fread@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1428]!	; 0x594

00010ab0 <utf8proc_iterate@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1420]!	; 0x58c

00010abc <__libc_start_main@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1412]!	; 0x584

00010ac8 <__sysv_signal@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1404]!	; 0x57c

00010ad4 <__gmon_start__@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1396]!	; 0x574

00010ae0 <getpid@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1388]!	; 0x56c

00010aec <exit@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1380]!	; 0x564

00010af8 <bcmp@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #20, 20	; 0x14000
   10b00:	ldr	pc, [ip, #1372]!	; 0x55c

00010b04 <utf8proc_category@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #20, 20	; 0x14000
   10b0c:	ldr	pc, [ip, #1364]!	; 0x554

00010b10 <strlen@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #20, 20	; 0x14000
   10b18:	ldr	pc, [ip, #1356]!	; 0x54c

00010b1c <fprintf@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1348]!	; 0x544

00010b28 <__isoc99_sscanf@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1340]!	; 0x53c

00010b34 <fclose@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1332]!	; 0x534

00010b40 <sprintf@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1324]!	; 0x52c

00010b4c <utf8proc_errmsg@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1316]!	; 0x524

00010b58 <fputs@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #20, 20	; 0x14000
   10b60:	ldr	pc, [ip, #1308]!	; 0x51c

00010b64 <strncmp@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #20, 20	; 0x14000
   10b6c:	ldr	pc, [ip, #1300]!	; 0x514

00010b70 <abort@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #20, 20	; 0x14000
   10b78:	ldr	pc, [ip, #1292]!	; 0x50c

00010b7c <getc@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #20, 20	; 0x14000
   10b84:	ldr	pc, [ip, #1284]!	; 0x504

Disassembly of section .text:

00010b88 <error@@Base-0x1d28>:
   10b88:	mov	fp, #0
   10b8c:	mov	lr, #0
   10b90:	pop	{r1}		; (ldr r1, [sp], #4)
   10b94:	mov	r2, sp
   10b98:	push	{r2}		; (str r2, [sp, #-4]!)
   10b9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba0:	ldr	ip, [pc, #16]	; 10bb8 <getc@plt+0x3c>
   10ba4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ba8:	ldr	r0, [pc, #12]	; 10bbc <getc@plt+0x40>
   10bac:	ldr	r3, [pc, #12]	; 10bc0 <getc@plt+0x44>
   10bb0:	bl	10abc <__libc_start_main@plt>
   10bb4:	bl	10b70 <abort@plt>
   10bb8:	muleq	r1, r0, r4
   10bbc:	andeq	r0, r1, r8, ror ip
   10bc0:	andeq	r3, r1, r0, lsr r4
   10bc4:	ldr	r3, [pc, #20]	; 10be0 <getc@plt+0x64>
   10bc8:	ldr	r2, [pc, #20]	; 10be4 <getc@plt+0x68>
   10bcc:	add	r3, pc, r3
   10bd0:	ldr	r2, [r3, r2]
   10bd4:	cmp	r2, #0
   10bd8:	bxeq	lr
   10bdc:	b	10ad4 <__gmon_start__@plt>
   10be0:	andeq	r4, r1, ip, lsr #8
   10be4:	muleq	r0, ip, r0
   10be8:	ldr	r0, [pc, #24]	; 10c08 <getc@plt+0x8c>
   10bec:	ldr	r3, [pc, #24]	; 10c0c <getc@plt+0x90>
   10bf0:	cmp	r3, r0
   10bf4:	bxeq	lr
   10bf8:	ldr	r3, [pc, #16]	; 10c10 <getc@plt+0x94>
   10bfc:	cmp	r3, #0
   10c00:	bxeq	lr
   10c04:	bx	r3
   10c08:	andeq	r5, r2, r8, asr #1
   10c0c:	andeq	r5, r2, r8, asr #1
   10c10:	andeq	r0, r0, r0
   10c14:	ldr	r0, [pc, #36]	; 10c40 <getc@plt+0xc4>
   10c18:	ldr	r1, [pc, #36]	; 10c44 <getc@plt+0xc8>
   10c1c:	sub	r1, r1, r0
   10c20:	asr	r1, r1, #2
   10c24:	add	r1, r1, r1, lsr #31
   10c28:	asrs	r1, r1, #1
   10c2c:	bxeq	lr
   10c30:	ldr	r3, [pc, #16]	; 10c48 <getc@plt+0xcc>
   10c34:	cmp	r3, #0
   10c38:	bxeq	lr
   10c3c:	bx	r3
   10c40:	andeq	r5, r2, r8, asr #1
   10c44:	andeq	r5, r2, r8, asr #1
   10c48:	andeq	r0, r0, r0
   10c4c:	push	{r4, lr}
   10c50:	ldr	r4, [pc, #24]	; 10c70 <getc@plt+0xf4>
   10c54:	ldrb	r3, [r4]
   10c58:	cmp	r3, #0
   10c5c:	popne	{r4, pc}
   10c60:	bl	10be8 <getc@plt+0x6c>
   10c64:	mov	r3, #1
   10c68:	strb	r3, [r4]
   10c6c:	pop	{r4, pc}
   10c70:	andeq	r5, r2, r8, asr #1
   10c74:	b	10c14 <getc@plt+0x98>
   10c78:	push	{fp, lr}
   10c7c:	mov	fp, sp
   10c80:	sub	sp, sp, #8
   10c84:	str	r0, [sp, #4]
   10c88:	add	r0, sp, #4
   10c8c:	mov	r3, #0
   10c90:	mov	r4, r1
   10c94:	mov	r6, #0
   10c98:	ldr	r2, [pc, #84]	; 10cf4 <getc@plt+0x178>
   10c9c:	add	r2, pc, r2
   10ca0:	bl	12628 <getc@plt+0x1aac>
   10ca4:	ldr	r0, [sp, #4]
   10ca8:	cmp	r0, #2
   10cac:	blt	10ce8 <getc@plt+0x16c>
   10cb0:	ldr	r5, [pc, #64]	; 10cf8 <getc@plt+0x17c>
   10cb4:	ldr	r5, [pc, r5]
   10cb8:	ldr	r1, [r4, r6, lsl #2]
   10cbc:	mov	r0, r5
   10cc0:	bl	10dfc <getc@plt+0x280>
   10cc4:	ldr	r0, [sp, #4]
   10cc8:	add	r6, r6, #1
   10ccc:	cmp	r6, r0
   10cd0:	blt	10cb8 <getc@plt+0x13c>
   10cd4:	ldr	r0, [pc, #32]	; 10cfc <getc@plt+0x180>
   10cd8:	mov	r1, #0
   10cdc:	ldr	r0, [pc, r0]
   10ce0:	bl	11568 <getc@plt+0x9ec>
   10ce4:	bl	1286c <getc@plt+0x1cf0>
   10ce8:	ldr	r0, [pc, #16]	; 10d00 <getc@plt+0x184>
   10cec:	add	r0, pc, r0
   10cf0:	bl	128b0 <error@@Base>
   10cf4:	strdeq	r2, [r0], -ip
   10cf8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10cfc:	andeq	r4, r1, ip, lsr #7
   10d00:	andeq	r2, r0, r3, ror #15
   10d04:	andeq	r0, r0, r0
   10d08:	push	{r4, r5, r6, r7, fp, lr}
   10d0c:	add	fp, sp, #16
   10d10:	mov	r7, r0
   10d14:	mov	r0, r1
   10d18:	mov	r4, r3
   10d1c:	mov	r5, r2
   10d20:	mov	r6, r1
   10d24:	bl	120ac <getc@plt+0x1530>
   10d28:	add	r0, r7, r0, lsl #3
   10d2c:	ldr	r1, [r0, #68]	; 0x44
   10d30:	ldr	r2, [r0, #72]	; 0x48
   10d34:	add	r1, r1, r5
   10d38:	add	r2, r2, r4
   10d3c:	str	r1, [r0, #68]	; 0x44
   10d40:	str	r2, [r0, #72]	; 0x48
   10d44:	ldr	r0, [r7, #2116]	; 0x844
   10d48:	ldr	r1, [r7, #2120]	; 0x848
   10d4c:	add	r0, r0, r5
   10d50:	add	r1, r1, r4
   10d54:	str	r0, [r7, #2116]	; 0x844
   10d58:	add	r0, r7, r6, lsl #3
   10d5c:	str	r1, [r7, #2120]	; 0x848
   10d60:	movw	r1, #10180	; 0x27c4
   10d64:	ldr	r1, [r0, r1]!
   10d68:	add	r1, r1, r5
   10d6c:	str	r1, [r0]
   10d70:	ldr	r1, [r0, #4]
   10d74:	add	r1, r1, r4
   10d78:	str	r1, [r0, #4]
   10d7c:	pop	{r4, r5, r6, r7, fp, pc}
   10d80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10d84:	add	fp, sp, #24
   10d88:	mov	r7, r1
   10d8c:	movw	r1, #2124	; 0x84c
   10d90:	mov	r8, r3
   10d94:	mov	r5, r2
   10d98:	add	r6, r0, r1
   10d9c:	mov	r1, r7
   10da0:	mov	r0, r6
   10da4:	bl	11e34 <getc@plt+0x12b8>
   10da8:	cmp	r0, #0
   10dac:	beq	10dcc <getc@plt+0x250>
   10db0:	ldr	r1, [r0, #12]
   10db4:	ldr	r2, [r0, #16]
   10db8:	add	r1, r1, r5
   10dbc:	add	r2, r2, r8
   10dc0:	str	r1, [r0, #12]
   10dc4:	str	r2, [r0, #16]
   10dc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10dcc:	mov	r0, #1
   10dd0:	mov	r1, #20
   10dd4:	bl	123e0 <getc@plt+0x1864>
   10dd8:	mov	r4, r0
   10ddc:	mov	r0, r7
   10de0:	bl	10a5c <strdup@plt>
   10de4:	add	r1, r4, #8
   10de8:	stm	r1, {r0, r5, r8}
   10dec:	mov	r0, r6
   10df0:	mov	r1, r4
   10df4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10df8:	b	11ec4 <getc@plt+0x1348>
   10dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e00:	add	fp, sp, #28
   10e04:	sub	sp, sp, #76	; 0x4c
   10e08:	bfc	sp, #0, #4
   10e0c:	mov	r2, r1
   10e10:	ldr	r1, [pc, #1680]	; 114a8 <getc@plt+0x92c>
   10e14:	mov	r4, r0
   10e18:	mov	r0, r2
   10e1c:	str	r2, [sp, #28]
   10e20:	add	r1, pc, r1
   10e24:	bl	12488 <getc@plt+0x190c>
   10e28:	mov	r7, r0
   10e2c:	ldr	r0, [pc, #1656]	; 114ac <getc@plt+0x930>
   10e30:	mov	r1, #99	; 0x63
   10e34:	mov	r2, r7
   10e38:	add	r0, pc, r0
   10e3c:	bl	10a44 <fgets@plt>
   10e40:	cmp	r0, #0
   10e44:	beq	11488 <getc@plt+0x90c>
   10e48:	ldr	r0, [pc, #1632]	; 114b0 <getc@plt+0x934>
   10e4c:	ldr	r1, [pc, #1632]	; 114b4 <getc@plt+0x938>
   10e50:	mov	r2, #40	; 0x28
   10e54:	add	r0, pc, r0
   10e58:	add	r1, pc, r1
   10e5c:	bl	10af8 <bcmp@plt>
   10e60:	cmp	r0, #0
   10e64:	bne	11488 <getc@plt+0x90c>
   10e68:	ldr	r0, [pc, #1608]	; 114b8 <getc@plt+0x93c>
   10e6c:	mov	r1, #99	; 0x63
   10e70:	mov	r2, r7
   10e74:	add	r0, pc, r0
   10e78:	bl	10a44 <fgets@plt>
   10e7c:	cmp	r0, #0
   10e80:	beq	11488 <getc@plt+0x90c>
   10e84:	ldr	r0, [pc, #1584]	; 114bc <getc@plt+0x940>
   10e88:	ldr	r1, [pc, #1584]	; 114c0 <getc@plt+0x944>
   10e8c:	mov	r2, #43	; 0x2b
   10e90:	add	r0, pc, r0
   10e94:	add	r1, pc, r1
   10e98:	bl	10af8 <bcmp@plt>
   10e9c:	cmp	r0, #0
   10ea0:	bne	11488 <getc@plt+0x90c>
   10ea4:	ldr	r0, [pc, #1560]	; 114c4 <getc@plt+0x948>
   10ea8:	mov	r1, #99	; 0x63
   10eac:	mov	r2, r7
   10eb0:	add	r0, pc, r0
   10eb4:	bl	10a44 <fgets@plt>
   10eb8:	cmp	r0, #0
   10ebc:	beq	11488 <getc@plt+0x90c>
   10ec0:	ldr	r0, [pc, #1536]	; 114c8 <getc@plt+0x94c>
   10ec4:	ldr	r1, [pc, #1536]	; 114cc <getc@plt+0x950>
   10ec8:	add	r2, sp, #44	; 0x2c
   10ecc:	add	r0, pc, r0
   10ed0:	add	r1, pc, r1
   10ed4:	bl	10b28 <__isoc99_sscanf@plt>
   10ed8:	cmp	r0, #1
   10edc:	bne	11488 <getc@plt+0x90c>
   10ee0:	ldr	r0, [r4]
   10ee4:	ldr	r1, [sp, #44]	; 0x2c
   10ee8:	mov	r2, r7
   10eec:	add	r0, r0, r1
   10ef0:	mov	r1, #99	; 0x63
   10ef4:	str	r0, [r4]
   10ef8:	ldr	r0, [pc, #1488]	; 114d0 <getc@plt+0x954>
   10efc:	add	r0, pc, r0
   10f00:	bl	10a44 <fgets@plt>
   10f04:	cmp	r0, #0
   10f08:	beq	11488 <getc@plt+0x90c>
   10f0c:	ldr	r0, [pc, #1472]	; 114d4 <getc@plt+0x958>
   10f10:	ldr	r1, [pc, #1472]	; 114d8 <getc@plt+0x95c>
   10f14:	add	r2, sp, #40	; 0x28
   10f18:	add	r0, pc, r0
   10f1c:	add	r1, pc, r1
   10f20:	bl	10b28 <__isoc99_sscanf@plt>
   10f24:	cmp	r0, #1
   10f28:	bne	11488 <getc@plt+0x90c>
   10f2c:	ldr	r0, [r4, #4]
   10f30:	ldr	r1, [sp, #40]	; 0x28
   10f34:	mov	r2, r7
   10f38:	add	r0, r0, r1
   10f3c:	mov	r1, #99	; 0x63
   10f40:	str	r0, [r4, #4]
   10f44:	ldr	r0, [pc, #1424]	; 114dc <getc@plt+0x960>
   10f48:	add	r0, pc, r0
   10f4c:	bl	10a44 <fgets@plt>
   10f50:	cmp	r0, #0
   10f54:	beq	11488 <getc@plt+0x90c>
   10f58:	ldr	r0, [pc, #1408]	; 114e0 <getc@plt+0x964>
   10f5c:	mov	r1, #99	; 0x63
   10f60:	mov	r2, r7
   10f64:	add	r0, pc, r0
   10f68:	bl	10a44 <fgets@plt>
   10f6c:	cmp	r0, #0
   10f70:	beq	11488 <getc@plt+0x90c>
   10f74:	ldr	r0, [pc, #1384]	; 114e4 <getc@plt+0x968>
   10f78:	mov	r1, #99	; 0x63
   10f7c:	mov	r2, r7
   10f80:	add	r0, pc, r0
   10f84:	bl	10a44 <fgets@plt>
   10f88:	cmp	r0, #0
   10f8c:	beq	11488 <getc@plt+0x90c>
   10f90:	ldr	r0, [pc, #1360]	; 114e8 <getc@plt+0x96c>
   10f94:	ldr	r1, [pc, #1360]	; 114ec <getc@plt+0x970>
   10f98:	add	r2, sp, #36	; 0x24
   10f9c:	add	r0, pc, r0
   10fa0:	add	r1, pc, r1
   10fa4:	bl	10b28 <__isoc99_sscanf@plt>
   10fa8:	cmp	r0, #1
   10fac:	bne	11488 <getc@plt+0x90c>
   10fb0:	ldr	r0, [r4, #8]
   10fb4:	ldr	r1, [sp, #36]	; 0x24
   10fb8:	mov	r2, r7
   10fbc:	add	r0, r0, r1
   10fc0:	mov	r1, #99	; 0x63
   10fc4:	str	r0, [r4, #8]
   10fc8:	ldr	r0, [pc, #1312]	; 114f0 <getc@plt+0x974>
   10fcc:	add	r0, pc, r0
   10fd0:	bl	10a44 <fgets@plt>
   10fd4:	cmp	r0, #0
   10fd8:	beq	11488 <getc@plt+0x90c>
   10fdc:	ldr	r0, [pc, #1296]	; 114f4 <getc@plt+0x978>
   10fe0:	ldr	r1, [pc, #1296]	; 114f8 <getc@plt+0x97c>
   10fe4:	add	r2, sp, #36	; 0x24
   10fe8:	add	r0, pc, r0
   10fec:	add	r1, pc, r1
   10ff0:	bl	10b28 <__isoc99_sscanf@plt>
   10ff4:	cmp	r0, #1
   10ff8:	bne	11488 <getc@plt+0x90c>
   10ffc:	ldr	r0, [r4, #12]
   11000:	ldr	r1, [sp, #36]	; 0x24
   11004:	mov	r2, r7
   11008:	add	r0, r0, r1
   1100c:	mov	r1, #99	; 0x63
   11010:	str	r0, [r4, #12]
   11014:	ldr	r0, [pc, #1248]	; 114fc <getc@plt+0x980>
   11018:	add	r0, pc, r0
   1101c:	bl	10a44 <fgets@plt>
   11020:	cmp	r0, #0
   11024:	beq	11488 <getc@plt+0x90c>
   11028:	ldr	r0, [pc, #1232]	; 11500 <getc@plt+0x984>
   1102c:	ldr	r1, [pc, #1232]	; 11504 <getc@plt+0x988>
   11030:	add	r2, sp, #36	; 0x24
   11034:	add	r0, pc, r0
   11038:	add	r1, pc, r1
   1103c:	bl	10b28 <__isoc99_sscanf@plt>
   11040:	cmp	r0, #1
   11044:	bne	11488 <getc@plt+0x90c>
   11048:	ldr	r0, [r4, #16]
   1104c:	ldr	r1, [sp, #36]	; 0x24
   11050:	mov	r2, r7
   11054:	add	r0, r0, r1
   11058:	mov	r1, #99	; 0x63
   1105c:	str	r0, [r4, #16]
   11060:	ldr	r0, [pc, #1184]	; 11508 <getc@plt+0x98c>
   11064:	add	r0, pc, r0
   11068:	bl	10a44 <fgets@plt>
   1106c:	cmp	r0, #0
   11070:	beq	11488 <getc@plt+0x90c>
   11074:	ldr	r0, [pc, #1168]	; 1150c <getc@plt+0x990>
   11078:	mov	r1, #99	; 0x63
   1107c:	mov	r2, r7
   11080:	add	r0, pc, r0
   11084:	bl	10a44 <fgets@plt>
   11088:	cmp	r0, #0
   1108c:	beq	11488 <getc@plt+0x90c>
   11090:	ldr	r0, [pc, #1144]	; 11510 <getc@plt+0x994>
   11094:	mov	r1, #99	; 0x63
   11098:	mov	r2, r7
   1109c:	add	r0, pc, r0
   110a0:	bl	10a44 <fgets@plt>
   110a4:	cmp	r0, #0
   110a8:	beq	11488 <getc@plt+0x90c>
   110ac:	ldr	r0, [pc, #1120]	; 11514 <getc@plt+0x998>
   110b0:	mov	r1, #99	; 0x63
   110b4:	mov	r2, r7
   110b8:	add	r0, pc, r0
   110bc:	bl	10a44 <fgets@plt>
   110c0:	cmp	r0, #0
   110c4:	beq	11488 <getc@plt+0x90c>
   110c8:	ldr	r0, [pc, #1096]	; 11518 <getc@plt+0x99c>
   110cc:	mov	r1, #99	; 0x63
   110d0:	mov	r2, r7
   110d4:	add	r0, pc, r0
   110d8:	bl	10a44 <fgets@plt>
   110dc:	cmp	r0, #0
   110e0:	beq	11488 <getc@plt+0x90c>
   110e4:	add	r5, sp, #48	; 0x30
   110e8:	orr	r6, r5, #8
   110ec:	orr	r9, r5, #12
   110f0:	orr	sl, r5, #4
   110f4:	mov	r2, r5
   110f8:	stm	sp, {r6, r9}
   110fc:	mov	r3, sl
   11100:	ldr	r0, [pc, #1044]	; 1151c <getc@plt+0x9a0>
   11104:	ldr	r1, [pc, #1044]	; 11520 <getc@plt+0x9a4>
   11108:	add	r0, pc, r0
   1110c:	add	r1, pc, r1
   11110:	bl	10b28 <__isoc99_sscanf@plt>
   11114:	cmp	r0, #4
   11118:	bne	11488 <getc@plt+0x90c>
   1111c:	add	r8, r4, #20
   11120:	vld1.64	{d16-d17}, [r5 :128]
   11124:	mov	r1, #99	; 0x63
   11128:	mov	r2, r7
   1112c:	vld1.32	{d18-d19}, [r8]
   11130:	vadd.i32	q8, q9, q8
   11134:	vst1.32	{d16-d17}, [r8]
   11138:	ldr	r0, [pc, #996]	; 11524 <getc@plt+0x9a8>
   1113c:	add	r0, pc, r0
   11140:	bl	10a44 <fgets@plt>
   11144:	cmp	r0, #0
   11148:	beq	11488 <getc@plt+0x90c>
   1114c:	stm	sp, {r6, r9}
   11150:	mov	r2, r5
   11154:	mov	r3, sl
   11158:	ldr	r0, [pc, #968]	; 11528 <getc@plt+0x9ac>
   1115c:	ldr	r1, [pc, #968]	; 1152c <getc@plt+0x9b0>
   11160:	add	r0, pc, r0
   11164:	add	r1, pc, r1
   11168:	bl	10b28 <__isoc99_sscanf@plt>
   1116c:	cmp	r0, #4
   11170:	bne	11488 <getc@plt+0x90c>
   11174:	add	r0, r8, #16
   11178:	vld1.64	{d16-d17}, [r5 :128]
   1117c:	mov	r1, #99	; 0x63
   11180:	mov	r2, r7
   11184:	vld1.32	{d18-d19}, [r0]
   11188:	vadd.i32	q8, q9, q8
   1118c:	vst1.32	{d16-d17}, [r0]
   11190:	ldr	r0, [pc, #920]	; 11530 <getc@plt+0x9b4>
   11194:	add	r0, pc, r0
   11198:	bl	10a44 <fgets@plt>
   1119c:	cmp	r0, #0
   111a0:	beq	11488 <getc@plt+0x90c>
   111a4:	stm	sp, {r6, r9}
   111a8:	mov	r2, r5
   111ac:	mov	r3, sl
   111b0:	ldr	r0, [pc, #892]	; 11534 <getc@plt+0x9b8>
   111b4:	ldr	r1, [pc, #892]	; 11538 <getc@plt+0x9bc>
   111b8:	add	r0, pc, r0
   111bc:	add	r1, pc, r1
   111c0:	bl	10b28 <__isoc99_sscanf@plt>
   111c4:	cmp	r0, #4
   111c8:	bne	11488 <getc@plt+0x90c>
   111cc:	add	r0, r8, #32
   111d0:	vld1.64	{d16-d17}, [r5 :128]
   111d4:	mov	r1, #99	; 0x63
   111d8:	mov	r2, r7
   111dc:	vld1.32	{d18-d19}, [r0]
   111e0:	vadd.i32	q8, q9, q8
   111e4:	vst1.32	{d16-d17}, [r0]
   111e8:	ldr	r6, [pc, #844]	; 1153c <getc@plt+0x9c0>
   111ec:	add	r6, pc, r6
   111f0:	mov	r0, r6
   111f4:	bl	10a44 <fgets@plt>
   111f8:	cmp	r0, #0
   111fc:	beq	11488 <getc@plt+0x90c>
   11200:	str	r4, [sp, #20]
   11204:	mov	r0, r6
   11208:	mov	r1, #99	; 0x63
   1120c:	mov	r2, r7
   11210:	bl	10a44 <fgets@plt>
   11214:	cmp	r0, #0
   11218:	ldrbne	r0, [r6]
   1121c:	cmpne	r0, #10
   11220:	bne	11204 <getc@plt+0x688>
   11224:	ldr	r0, [sp, #40]	; 0x28
   11228:	cmp	r0, #1
   1122c:	blt	11340 <getc@plt+0x7c4>
   11230:	ldr	r0, [pc, #776]	; 11540 <getc@plt+0x9c4>
   11234:	mov	r1, #99	; 0x63
   11238:	mov	r2, r7
   1123c:	add	r0, pc, r0
   11240:	bl	10a44 <fgets@plt>
   11244:	cmp	r0, #0
   11248:	beq	11340 <getc@plt+0x7c4>
   1124c:	ldr	r4, [pc, #752]	; 11544 <getc@plt+0x9c8>
   11250:	mov	r1, #99	; 0x63
   11254:	mov	r2, r7
   11258:	add	r4, pc, r4
   1125c:	mov	r0, r4
   11260:	bl	10a44 <fgets@plt>
   11264:	cmp	r0, #0
   11268:	beq	11340 <getc@plt+0x7c4>
   1126c:	ldr	r1, [sp, #20]
   11270:	movw	r0, #2124	; 0x84c
   11274:	add	r8, sp, #36	; 0x24
   11278:	add	r0, r1, r0
   1127c:	str	r0, [sp, #28]
   11280:	add	r0, r4, #20
   11284:	ldr	r9, [pc, #700]	; 11548 <getc@plt+0x9cc>
   11288:	str	r0, [sp, #24]
   1128c:	ldr	r5, [sp, #24]
   11290:	add	r9, pc, r9
   11294:	b	112ec <getc@plt+0x770>
   11298:	mov	r0, #1
   1129c:	mov	r1, #20
   112a0:	bl	123e0 <getc@plt+0x1864>
   112a4:	mov	r4, r9
   112a8:	mov	r9, r0
   112ac:	mov	r0, r5
   112b0:	bl	10a5c <strdup@plt>
   112b4:	add	r1, r9, #8
   112b8:	stm	r1, {r0, r6, sl}
   112bc:	mov	r1, r9
   112c0:	mov	r9, r4
   112c4:	ldr	r0, [sp, #28]
   112c8:	ldr	r4, [pc, #636]	; 1154c <getc@plt+0x9d0>
   112cc:	add	r4, pc, r4
   112d0:	bl	11ec4 <getc@plt+0x1348>
   112d4:	mov	r0, r4
   112d8:	mov	r1, #99	; 0x63
   112dc:	mov	r2, r7
   112e0:	bl	10a44 <fgets@plt>
   112e4:	cmp	r0, #0
   112e8:	beq	11340 <getc@plt+0x7c4>
   112ec:	mov	r0, r4
   112f0:	mov	r1, r9
   112f4:	mov	r2, r8
   112f8:	add	r3, sp, #48	; 0x30
   112fc:	bl	10b28 <__isoc99_sscanf@plt>
   11300:	cmp	r0, #2
   11304:	bne	11340 <getc@plt+0x7c4>
   11308:	ldr	r0, [sp, #28]
   1130c:	ldr	sl, [sp, #48]	; 0x30
   11310:	ldr	r6, [sp, #36]	; 0x24
   11314:	mov	r1, r5
   11318:	bl	11e34 <getc@plt+0x12b8>
   1131c:	cmp	r0, #0
   11320:	beq	11298 <getc@plt+0x71c>
   11324:	ldr	r1, [r0, #12]
   11328:	ldr	r2, [r0, #16]
   1132c:	add	r1, r1, r6
   11330:	add	r2, r2, sl
   11334:	str	r1, [r0, #12]
   11338:	str	r2, [r0, #16]
   1133c:	b	112d4 <getc@plt+0x758>
   11340:	ldr	r0, [sp, #44]	; 0x2c
   11344:	ldr	r4, [sp, #20]
   11348:	cmp	r0, #1
   1134c:	blt	11478 <getc@plt+0x8fc>
   11350:	ldr	r0, [pc, #504]	; 11550 <getc@plt+0x9d4>
   11354:	mov	r1, #99	; 0x63
   11358:	mov	r2, r7
   1135c:	add	r0, pc, r0
   11360:	bl	10a44 <fgets@plt>
   11364:	cmp	r0, #0
   11368:	beq	11478 <getc@plt+0x8fc>
   1136c:	ldr	r6, [pc, #480]	; 11554 <getc@plt+0x9d8>
   11370:	mov	r1, #99	; 0x63
   11374:	mov	r2, r7
   11378:	add	r6, pc, r6
   1137c:	mov	r0, r6
   11380:	bl	10a44 <fgets@plt>
   11384:	cmp	r0, #0
   11388:	beq	11478 <getc@plt+0x8fc>
   1138c:	add	r5, sp, #48	; 0x30
   11390:	add	r0, r6, #31
   11394:	str	r0, [sp, #28]
   11398:	b	11420 <getc@plt+0x8a4>
   1139c:	mov	sl, #10
   113a0:	str	sl, [sp, #32]
   113a4:	ldr	r8, [sp, #48]	; 0x30
   113a8:	ldr	r9, [sp, #36]	; 0x24
   113ac:	mov	r0, sl
   113b0:	bl	120ac <getc@plt+0x1530>
   113b4:	add	r0, r4, r0, lsl #3
   113b8:	ldr	r1, [r0, #68]	; 0x44
   113bc:	ldr	r2, [r0, #72]	; 0x48
   113c0:	add	r1, r1, r9
   113c4:	add	r2, r2, r8
   113c8:	str	r1, [r0, #68]	; 0x44
   113cc:	str	r2, [r0, #72]	; 0x48
   113d0:	mov	r2, r7
   113d4:	ldr	r0, [r4, #2116]	; 0x844
   113d8:	ldr	r1, [r4, #2120]	; 0x848
   113dc:	add	r0, r0, r9
   113e0:	add	r1, r1, r8
   113e4:	str	r0, [r4, #2116]	; 0x844
   113e8:	add	r0, r4, sl, lsl #3
   113ec:	str	r1, [r4, #2120]	; 0x848
   113f0:	movw	r1, #10180	; 0x27c4
   113f4:	ldr	r1, [r0, r1]!
   113f8:	add	r1, r1, r9
   113fc:	str	r1, [r0]
   11400:	ldr	r1, [r0, #4]
   11404:	add	r1, r1, r8
   11408:	str	r1, [r0, #4]
   1140c:	mov	r0, r6
   11410:	mov	r1, #99	; 0x63
   11414:	bl	10a44 <fgets@plt>
   11418:	cmp	r0, #0
   1141c:	beq	11478 <getc@plt+0x8fc>
   11420:	ldr	r1, [pc, #304]	; 11558 <getc@plt+0x9dc>
   11424:	mov	r0, r6
   11428:	add	r2, sp, #36	; 0x24
   1142c:	mov	r3, r5
   11430:	add	r1, pc, r1
   11434:	bl	10b28 <__isoc99_sscanf@plt>
   11438:	cmp	r0, #2
   1143c:	bne	11478 <getc@plt+0x8fc>
   11440:	ldrb	r0, [r6, #31]
   11444:	cmp	r0, #92	; 0x5c
   11448:	beq	1139c <getc@plt+0x820>
   1144c:	cmp	r0, #125	; 0x7d
   11450:	bne	1145c <getc@plt+0x8e0>
   11454:	ldrb	sl, [r6, #30]
   11458:	b	113a0 <getc@plt+0x824>
   1145c:	ldr	r0, [sp, #28]
   11460:	ldr	r1, [pc, #244]	; 1155c <getc@plt+0x9e0>
   11464:	add	r2, sp, #32
   11468:	add	r1, pc, r1
   1146c:	bl	10b28 <__isoc99_sscanf@plt>
   11470:	ldr	sl, [sp, #32]
   11474:	b	113a4 <getc@plt+0x828>
   11478:	mov	r0, r7
   1147c:	bl	12510 <getc@plt+0x1994>
   11480:	sub	sp, fp, #28
   11484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11488:	ldr	r1, [pc, #208]	; 11560 <getc@plt+0x9e4>
   1148c:	ldr	r0, [sp, #28]
   11490:	cmp	r0, #0
   11494:	add	r1, pc, r1
   11498:	movne	r1, r0
   1149c:	ldr	r0, [pc, #192]	; 11564 <getc@plt+0x9e8>
   114a0:	add	r0, pc, r0
   114a4:	bl	12900 <error@@Base+0x50>
   114a8:	andeq	r2, r0, r5, asr #31
   114ac:	andeq	r4, r1, r9, lsl #5
   114b0:	andeq	r4, r1, sp, ror #4
   114b4:	andeq	r2, r0, lr, lsl #13
   114b8:	andeq	r4, r1, sp, asr #4
   114bc:	andeq	r4, r1, r1, lsr r2
   114c0:	andeq	r2, r0, r0, lsl pc
   114c4:	andeq	r4, r1, r1, lsl r2
   114c8:	strdeq	r4, [r1], -r5
   114cc:	andeq	r2, r0, sl, ror #14
   114d0:	andeq	r4, r1, r5, asr #3
   114d4:	andeq	r4, r1, r9, lsr #3
   114d8:	andeq	r2, r0, lr, lsl r7
   114dc:	andeq	r4, r1, r9, ror r1
   114e0:	andeq	r4, r1, sp, asr r1
   114e4:	andeq	r4, r1, r1, asr #2
   114e8:	andeq	r4, r1, r5, lsr #2
   114ec:	muleq	r0, sl, r6
   114f0:	strdeq	r4, [r1], -r5
   114f4:	ldrdeq	r4, [r1], -r9
   114f8:	andeq	r2, r0, lr, asr #12
   114fc:	andeq	r4, r1, r9, lsr #1
   11500:	andeq	r4, r1, sp, lsl #1
   11504:	andeq	r2, r0, r2, lsl #12
   11508:	andeq	r4, r1, sp, asr r0
   1150c:	andeq	r4, r1, r1, asr #32
   11510:	andeq	r4, r1, r5, lsr #32
   11514:	andeq	r4, r1, r9
   11518:	andeq	r3, r1, sp, ror #31
   1151c:			; <UNDEFINED> instruction: 0x00013fb9
   11520:	andeq	r2, r0, r2, lsr #10
   11524:	andeq	r3, r1, r5, lsl #31
   11528:	andeq	r3, r1, r1, ror #30
   1152c:	andeq	r2, r0, sl, asr #9
   11530:	andeq	r3, r1, sp, lsr #30
   11534:	andeq	r3, r1, r9, lsl #30
   11538:	andeq	r2, r0, r2, ror r4
   1153c:	ldrdeq	r3, [r1], -r5
   11540:	andeq	r3, r1, r5, lsl #29
   11544:	andeq	r3, r1, r9, ror #28
   11548:	andeq	r2, r0, r6, lsr #7
   1154c:	strdeq	r3, [r1], -r5
   11550:	andeq	r3, r1, r5, ror #26
   11554:	andeq	r3, r1, r9, asr #26
   11558:	andeq	r2, r0, r6, lsl #4
   1155c:	andeq	r2, r0, r9, lsr #1
   11560:	muleq	r0, r3, r0
   11564:	andeq	r2, r0, r5, ror r0
   11568:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1156c:	add	fp, sp, #28
   11570:	sub	sp, sp, #4
   11574:	vpush	{d8}
   11578:	sub	sp, sp, #32
   1157c:	mov	r2, r1
   11580:	ldr	r1, [pc, #1536]	; 11b88 <getc@plt+0x100c>
   11584:	mov	sl, r0
   11588:	mov	r0, r2
   1158c:	add	r1, pc, r1
   11590:	bl	12488 <getc@plt+0x190c>
   11594:	ldr	r1, [pc, #1520]	; 11b8c <getc@plt+0x1010>
   11598:	ldr	r2, [pc, #1520]	; 11b90 <getc@plt+0x1014>
   1159c:	ldr	r3, [pc, #1520]	; 11b94 <getc@plt+0x1018>
   115a0:	mov	r4, r0
   115a4:	add	r1, pc, r1
   115a8:	add	r2, pc, r2
   115ac:	add	r3, pc, r3
   115b0:	bl	10b1c <fprintf@plt>
   115b4:	ldr	r2, [sl]
   115b8:	ldr	r6, [pc, #1496]	; 11b98 <getc@plt+0x101c>
   115bc:	ldr	r3, [pc, #1496]	; 11b9c <getc@plt+0x1020>
   115c0:	mov	r0, r4
   115c4:	add	r6, pc, r6
   115c8:	add	r3, pc, r3
   115cc:	mov	r1, r6
   115d0:	bl	10b1c <fprintf@plt>
   115d4:	ldr	r2, [sl, #4]
   115d8:	ldr	r3, [pc, #1472]	; 11ba0 <getc@plt+0x1024>
   115dc:	mov	r0, r4
   115e0:	mov	r1, r6
   115e4:	add	r3, pc, r3
   115e8:	bl	10b1c <fprintf@plt>
   115ec:	ldr	r0, [sl]
   115f0:	cmp	r0, #0
   115f4:	beq	11634 <getc@plt+0xab8>
   115f8:	ldr	r1, [sl, #4]
   115fc:	vldr	d16, [pc, #932]	; 119a8 <getc@plt+0xe2c>
   11600:	vmov	s2, r0
   11604:	sub	r1, r0, r1
   11608:	mov	r0, r4
   1160c:	vmov	s0, r1
   11610:	vcvt.f64.s32	d17, s0
   11614:	vcvt.f64.s32	d18, s2
   11618:	ldr	r1, [pc, #1416]	; 11ba8 <getc@plt+0x102c>
   1161c:	add	r1, pc, r1
   11620:	vmul.f64	d16, d17, d16
   11624:	vdiv.f64	d16, d16, d18
   11628:	vmov	r2, r3, d16
   1162c:	bl	10b1c <fprintf@plt>
   11630:	b	1164c <getc@plt+0xad0>
   11634:	ldr	r0, [pc, #1384]	; 11ba4 <getc@plt+0x1028>
   11638:	mov	r1, #8
   1163c:	mov	r2, #1
   11640:	mov	r3, r4
   11644:	add	r0, pc, r0
   11648:	bl	10a98 <fwrite@plt>
   1164c:	ldr	r1, [pc, #1368]	; 11bac <getc@plt+0x1030>
   11650:	mov	r0, r4
   11654:	add	r1, pc, r1
   11658:	bl	10b1c <fprintf@plt>
   1165c:	ldr	r2, [sl, #8]
   11660:	ldr	r6, [pc, #1352]	; 11bb0 <getc@plt+0x1034>
   11664:	ldr	r3, [pc, #1352]	; 11bb4 <getc@plt+0x1038>
   11668:	mov	r0, r4
   1166c:	add	r6, pc, r6
   11670:	add	r3, pc, r3
   11674:	mov	r1, r6
   11678:	bl	10b1c <fprintf@plt>
   1167c:	ldr	r2, [sl, #12]
   11680:	ldr	r3, [pc, #1328]	; 11bb8 <getc@plt+0x103c>
   11684:	mov	r0, r4
   11688:	mov	r1, r6
   1168c:	add	r3, pc, r3
   11690:	bl	10b1c <fprintf@plt>
   11694:	ldr	r2, [sl, #16]
   11698:	ldr	r3, [pc, #1308]	; 11bbc <getc@plt+0x1040>
   1169c:	mov	r0, r4
   116a0:	mov	r1, r6
   116a4:	add	r3, pc, r3
   116a8:	bl	10b1c <fprintf@plt>
   116ac:	ldr	r0, [sl]
   116b0:	cmp	r0, #0
   116b4:	beq	116f8 <getc@plt+0xb7c>
   116b8:	ldr	r1, [sl, #8]
   116bc:	ldr	r2, [sl, #12]
   116c0:	vmov	s2, r0
   116c4:	vldr	d16, [pc, #732]	; 119a8 <getc@plt+0xe2c>
   116c8:	mov	r0, r4
   116cc:	add	r1, r2, r1
   116d0:	vmov	s0, r1
   116d4:	vcvt.f64.s32	d17, s0
   116d8:	vcvt.f64.s32	d18, s2
   116dc:	ldr	r1, [pc, #1248]	; 11bc4 <getc@plt+0x1048>
   116e0:	add	r1, pc, r1
   116e4:	vmul.f64	d16, d17, d16
   116e8:	vdiv.f64	d16, d16, d18
   116ec:	vmov	r2, r3, d16
   116f0:	bl	10b1c <fprintf@plt>
   116f4:	b	11710 <getc@plt+0xb94>
   116f8:	ldr	r0, [pc, #1216]	; 11bc0 <getc@plt+0x1044>
   116fc:	mov	r1, #8
   11700:	mov	r2, #1
   11704:	mov	r3, r4
   11708:	add	r0, pc, r0
   1170c:	bl	10a98 <fwrite@plt>
   11710:	ldr	r1, [pc, #1200]	; 11bc8 <getc@plt+0x104c>
   11714:	mov	r0, r4
   11718:	movw	r6, #10172	; 0x27bc
   1171c:	add	r1, pc, r1
   11720:	bl	10b1c <fprintf@plt>
   11724:	ldr	r0, [sl]
   11728:	cmp	r0, #0
   1172c:	beq	1176c <getc@plt+0xbf0>
   11730:	ldr	r1, [sl, #48]	; 0x30
   11734:	vldr	d16, [pc, #620]	; 119a8 <getc@plt+0xe2c>
   11738:	vmov	s2, r0
   1173c:	sub	r1, r0, r1
   11740:	mov	r0, r4
   11744:	vmov	s0, r1
   11748:	vcvt.f64.s32	d17, s0
   1174c:	vcvt.f64.s32	d18, s2
   11750:	ldr	r1, [pc, #1144]	; 11bd0 <getc@plt+0x1054>
   11754:	add	r1, pc, r1
   11758:	vmul.f64	d16, d17, d16
   1175c:	vdiv.f64	d16, d16, d18
   11760:	vmov	r2, r3, d16
   11764:	bl	10b1c <fprintf@plt>
   11768:	b	11784 <getc@plt+0xc08>
   1176c:	ldr	r0, [pc, #1112]	; 11bcc <getc@plt+0x1050>
   11770:	mov	r1, #8
   11774:	mov	r2, #1
   11778:	mov	r3, r4
   1177c:	add	r0, pc, r0
   11780:	bl	10a98 <fwrite@plt>
   11784:	add	r0, sl, r6
   11788:	str	r0, [sp, #16]
   1178c:	mov	r0, r4
   11790:	ldr	r1, [pc, #1084]	; 11bd4 <getc@plt+0x1058>
   11794:	add	r1, pc, r1
   11798:	bl	10b1c <fprintf@plt>
   1179c:	ldr	r0, [pc, #1076]	; 11bd8 <getc@plt+0x105c>
   117a0:	mov	r1, #37	; 0x25
   117a4:	mov	r2, #1
   117a8:	mov	r3, r4
   117ac:	add	r0, pc, r0
   117b0:	bl	10a98 <fwrite@plt>
   117b4:	ldr	r2, [sl, #20]
   117b8:	ldr	r3, [sl, #24]
   117bc:	ldr	r0, [sl, #28]
   117c0:	ldr	r1, [sl, #32]
   117c4:	ldr	r7, [pc, #1040]	; 11bdc <getc@plt+0x1060>
   117c8:	add	r7, pc, r7
   117cc:	stm	sp, {r0, r1, r7}
   117d0:	mov	r0, r4
   117d4:	ldr	r6, [pc, #1028]	; 11be0 <getc@plt+0x1064>
   117d8:	add	r6, pc, r6
   117dc:	mov	r1, r6
   117e0:	bl	10b1c <fprintf@plt>
   117e4:	ldr	r2, [sl, #36]	; 0x24
   117e8:	ldr	r3, [sl, #40]	; 0x28
   117ec:	ldr	r0, [sl, #44]	; 0x2c
   117f0:	ldr	r1, [sl, #48]	; 0x30
   117f4:	ldr	r7, [pc, #1000]	; 11be4 <getc@plt+0x1068>
   117f8:	add	r7, pc, r7
   117fc:	stm	sp, {r0, r1, r7}
   11800:	mov	r0, r4
   11804:	mov	r1, r6
   11808:	bl	10b1c <fprintf@plt>
   1180c:	ldr	r2, [sl, #52]	; 0x34
   11810:	ldr	r3, [sl, #56]	; 0x38
   11814:	ldr	r0, [sl, #60]	; 0x3c
   11818:	ldr	r1, [sl, #64]	; 0x40
   1181c:	ldr	r7, [pc, #964]	; 11be8 <getc@plt+0x106c>
   11820:	add	r7, pc, r7
   11824:	stm	sp, {r0, r1, r7}
   11828:	mov	r0, r4
   1182c:	mov	r1, r6
   11830:	bl	10b1c <fprintf@plt>
   11834:	ldr	r1, [pc, #944]	; 11bec <getc@plt+0x1070>
   11838:	mov	r0, r4
   1183c:	add	r1, pc, r1
   11840:	bl	10b1c <fprintf@plt>
   11844:	ldr	r7, [pc, #932]	; 11bf0 <getc@plt+0x1074>
   11848:	vldr	d8, [pc, #816]	; 11b80 <getc@plt+0x1004>
   1184c:	mov	r6, #0
   11850:	add	r7, pc, r7
   11854:	b	11898 <getc@plt+0xd1c>
   11858:	mov	r5, r7
   1185c:	add	r7, sp, #23
   11860:	mov	r0, #0
   11864:	mov	r1, #0
   11868:	mov	r3, #1
   1186c:	mov	r2, r7
   11870:	bl	12ed8 <error@@Base+0x628>
   11874:	ldr	r1, [pc, #900]	; 11c00 <getc@plt+0x1084>
   11878:	mov	r2, r7
   1187c:	mov	r0, r4
   11880:	mov	r7, r5
   11884:	add	r1, pc, r1
   11888:	bl	10b1c <fprintf@plt>
   1188c:	add	r6, r6, #1
   11890:	cmp	r6, #256	; 0x100
   11894:	beq	11948 <getc@plt+0xdcc>
   11898:	add	r9, sl, r6, lsl #3
   1189c:	ldr	r0, [r9, #68]	; 0x44
   118a0:	cmp	r0, #1
   118a4:	blt	1188c <getc@plt+0xd10>
   118a8:	mov	r0, r6
   118ac:	bl	12234 <getc@plt+0x16b8>
   118b0:	ldr	r2, [r9, #68]	; 0x44
   118b4:	ldr	r3, [r9, #72]	; 0x48
   118b8:	mov	r8, r0
   118bc:	mov	r0, r4
   118c0:	mov	r1, r7
   118c4:	bl	10b1c <fprintf@plt>
   118c8:	ldr	r0, [r9, #68]	; 0x44
   118cc:	cmp	r0, #0
   118d0:	beq	11914 <getc@plt+0xd98>
   118d4:	ldr	r1, [r9, #72]	; 0x48
   118d8:	vmov	s2, r0
   118dc:	sub	r1, r0, r1
   118e0:	mov	r0, r4
   118e4:	vmov	s0, r1
   118e8:	vcvt.f64.s32	d16, s0
   118ec:	vcvt.f64.s32	d17, s2
   118f0:	ldr	r1, [pc, #768]	; 11bf8 <getc@plt+0x107c>
   118f4:	add	r1, pc, r1
   118f8:	vmul.f64	d16, d16, d8
   118fc:	vdiv.f64	d16, d16, d17
   11900:	vmov	r2, r3, d16
   11904:	bl	10b1c <fprintf@plt>
   11908:	cmp	r8, #0
   1190c:	bne	11934 <getc@plt+0xdb8>
   11910:	b	11858 <getc@plt+0xcdc>
   11914:	ldr	r0, [pc, #728]	; 11bf4 <getc@plt+0x1078>
   11918:	mov	r1, #8
   1191c:	mov	r2, #1
   11920:	mov	r3, r4
   11924:	add	r0, pc, r0
   11928:	bl	10a98 <fwrite@plt>
   1192c:	cmp	r8, #0
   11930:	beq	11858 <getc@plt+0xcdc>
   11934:	ldr	r1, [pc, #704]	; 11bfc <getc@plt+0x1080>
   11938:	mov	r0, r4
   1193c:	mov	r2, r8
   11940:	add	r1, pc, r1
   11944:	b	11888 <getc@plt+0xd0c>
   11948:	ldr	r2, [sl, #2116]	; 0x844
   1194c:	ldr	r3, [sl, #2120]	; 0x848
   11950:	ldr	r1, [pc, #684]	; 11c04 <getc@plt+0x1088>
   11954:	mov	r0, r4
   11958:	add	r1, pc, r1
   1195c:	bl	10b1c <fprintf@plt>
   11960:	ldr	r0, [sl, #2116]	; 0x844
   11964:	cmp	r0, #0
   11968:	beq	119b0 <getc@plt+0xe34>
   1196c:	ldr	r1, [sl, #2120]	; 0x848
   11970:	vmov	s2, r0
   11974:	sub	r1, r0, r1
   11978:	mov	r0, r4
   1197c:	vmov	s0, r1
   11980:	vcvt.f64.s32	d16, s0
   11984:	vcvt.f64.s32	d17, s2
   11988:	ldr	r1, [pc, #636]	; 11c0c <getc@plt+0x1090>
   1198c:	add	r1, pc, r1
   11990:	vmul.f64	d16, d16, d8
   11994:	vdiv.f64	d16, d16, d17
   11998:	vmov	r2, r3, d16
   1199c:	bl	10b1c <fprintf@plt>
   119a0:	b	119c8 <getc@plt+0xe4c>
   119a4:	nop	{0}
   119a8:	andeq	r0, r0, r0
   119ac:	subsmi	r0, r9, r0
   119b0:	ldr	r0, [pc, #592]	; 11c08 <getc@plt+0x108c>
   119b4:	mov	r1, #8
   119b8:	mov	r2, #1
   119bc:	mov	r3, r4
   119c0:	add	r0, pc, r0
   119c4:	bl	10a98 <fwrite@plt>
   119c8:	ldr	r1, [pc, #576]	; 11c10 <getc@plt+0x1094>
   119cc:	ldr	r2, [pc, #576]	; 11c14 <getc@plt+0x1098>
   119d0:	mov	r0, r4
   119d4:	add	r1, pc, r1
   119d8:	add	r2, pc, r2
   119dc:	bl	10b1c <fprintf@plt>
   119e0:	ldr	r0, [sl, #4]
   119e4:	ldr	r5, [sp, #16]
   119e8:	cmp	r0, #1
   119ec:	blt	11a70 <getc@plt+0xef4>
   119f0:	movw	r0, #2124	; 0x84c
   119f4:	add	r0, sl, r0
   119f8:	bl	11fd4 <getc@plt+0x1458>
   119fc:	ldr	r1, [r5]
   11a00:	ldr	r0, [r5, #4]
   11a04:	ldr	r2, [pc, #524]	; 11c18 <getc@plt+0x109c>
   11a08:	add	r2, pc, r2
   11a0c:	bl	11c6c <getc@plt+0x10f0>
   11a10:	ldr	r0, [pc, #516]	; 11c1c <getc@plt+0x10a0>
   11a14:	mov	r1, #39	; 0x27
   11a18:	mov	r2, #1
   11a1c:	mov	r3, r4
   11a20:	add	r0, pc, r0
   11a24:	bl	10a98 <fwrite@plt>
   11a28:	ldr	r0, [r5, #4]
   11a2c:	cmp	r0, #1
   11a30:	blt	11a70 <getc@plt+0xef4>
   11a34:	ldr	r6, [pc, #484]	; 11c20 <getc@plt+0x10a4>
   11a38:	mov	r7, #0
   11a3c:	add	r6, pc, r6
   11a40:	ldr	r0, [r5]
   11a44:	ldr	r0, [r0, r7, lsl #2]
   11a48:	add	r3, r0, #8
   11a4c:	mov	r0, r4
   11a50:	ldm	r3, {r1, r2, r3}
   11a54:	str	r1, [sp]
   11a58:	mov	r1, r6
   11a5c:	bl	10b1c <fprintf@plt>
   11a60:	ldr	r0, [r5, #4]
   11a64:	add	r7, r7, #1
   11a68:	cmp	r7, r0
   11a6c:	blt	11a40 <getc@plt+0xec4>
   11a70:	ldr	r0, [sl]
   11a74:	cmp	r0, #1
   11a78:	blt	11b68 <getc@plt+0xfec>
   11a7c:	ldr	r1, [pc, #416]	; 11c24 <getc@plt+0x10a8>
   11a80:	mov	r0, r4
   11a84:	add	r1, pc, r1
   11a88:	bl	10b1c <fprintf@plt>
   11a8c:	ldr	r6, [pc, #404]	; 11c28 <getc@plt+0x10ac>
   11a90:	movw	r9, #65535	; 0xffff
   11a94:	movw	r0, #10180	; 0x27c4
   11a98:	mov	r5, #0
   11a9c:	add	r7, sp, #23
   11aa0:	add	r8, sl, r0
   11aa4:	movw	r0, #10184	; 0x27c8
   11aa8:	movt	r9, #16
   11aac:	add	sl, sl, r0
   11ab0:	add	r6, pc, r6
   11ab4:	b	11b20 <getc@plt+0xfa4>
   11ab8:	lsl	r1, r5, #1
   11abc:	vmov	s2, r0
   11ac0:	ldr	r1, [sl, r1, lsl #2]
   11ac4:	sub	r1, r0, r1
   11ac8:	mov	r0, r4
   11acc:	vmov	s0, r1
   11ad0:	vcvt.f64.s32	d16, s0
   11ad4:	vcvt.f64.s32	d17, s2
   11ad8:	ldr	r1, [pc, #340]	; 11c34 <getc@plt+0x10b8>
   11adc:	add	r1, pc, r1
   11ae0:	vmul.f64	d16, d16, d8
   11ae4:	vdiv.f64	d16, d16, d17
   11ae8:	vmov	r2, r3, d16
   11aec:	bl	10b1c <fprintf@plt>
   11af0:	mov	r0, #0
   11af4:	mov	r1, r5
   11af8:	mov	r2, r7
   11afc:	mov	r3, #1
   11b00:	bl	12ed8 <error@@Base+0x628>
   11b04:	mov	r0, r4
   11b08:	mov	r1, r6
   11b0c:	mov	r2, r7
   11b10:	bl	10b1c <fprintf@plt>
   11b14:	add	r5, r5, #1
   11b18:	cmp	r5, r9
   11b1c:	beq	11b68 <getc@plt+0xfec>
   11b20:	ldr	r2, [r8, r5, lsl #3]
   11b24:	cmp	r2, #1
   11b28:	blt	11b14 <getc@plt+0xf98>
   11b2c:	ldr	r3, [sl, r5, lsl #3]
   11b30:	ldr	r1, [pc, #244]	; 11c2c <getc@plt+0x10b0>
   11b34:	mov	r0, r4
   11b38:	add	r1, pc, r1
   11b3c:	bl	10b1c <fprintf@plt>
   11b40:	ldr	r0, [r8, r5, lsl #3]
   11b44:	cmp	r0, #0
   11b48:	bne	11ab8 <getc@plt+0xf3c>
   11b4c:	ldr	r0, [pc, #220]	; 11c30 <getc@plt+0x10b4>
   11b50:	mov	r1, #8
   11b54:	mov	r2, #1
   11b58:	mov	r3, r4
   11b5c:	add	r0, pc, r0
   11b60:	bl	10a98 <fwrite@plt>
   11b64:	b	11af0 <getc@plt+0xf74>
   11b68:	mov	r0, r4
   11b6c:	bl	12510 <getc@plt+0x1994>
   11b70:	sub	sp, fp, #40	; 0x28
   11b74:	vpop	{d8}
   11b78:	add	sp, sp, #4
   11b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b80:	andeq	r0, r0, r0
   11b84:	subsmi	r0, r9, r0
   11b88:	andeq	r2, r0, lr, ror #5
   11b8c:	andeq	r1, r0, r9, lsl #31
   11b90:	andeq	r1, r0, lr, lsr pc
   11b94:	strdeq	r2, [r0], -r8
   11b98:	muleq	r0, r8, r0
   11b9c:	andeq	r2, r0, r4, lsr #3
   11ba0:	andeq	r1, r0, lr, asr #30
   11ba4:	strdeq	r1, [r0], -sl
   11ba8:	andeq	r2, r0, fp, lsr #32
   11bac:	andeq	r1, r0, r5, ror #29
   11bb0:	strdeq	r1, [r0], -r0
   11bb4:	ldrdeq	r1, [r0], -r8
   11bb8:	andeq	r1, r0, lr, asr #29
   11bbc:	andeq	r1, r0, r6, asr #29
   11bc0:	andeq	r1, r0, r6, lsr pc
   11bc4:	andeq	r1, r0, r7, ror #30
   11bc8:	andeq	r1, r0, sl, asr lr
   11bcc:	andeq	r1, r0, r2, asr #29
   11bd0:	strdeq	r1, [r0], -r3
   11bd4:	strdeq	r1, [r0], -r9
   11bd8:	andeq	r1, r0, r0, lsl #28
   11bdc:	andeq	r1, r0, sl, lsl #28
   11be0:	andeq	r1, r0, r5, ror lr
   11be4:	andeq	r1, r0, r1, ror #27
   11be8:	andeq	r1, r0, r2, asr #27
   11bec:	andeq	r1, r0, ip, lsr #27
   11bf0:	andeq	r1, r0, r7, lsl lr
   11bf4:	andeq	r1, r0, sl, lsl sp
   11bf8:	andeq	r1, r0, r3, asr sp
   11bfc:	andeq	r1, r0, r0, lsr #26
   11c00:	andeq	r1, r0, lr, ror #27
   11c04:	andeq	r1, r0, pc, lsl #26
   11c08:	andeq	r1, r0, lr, ror ip
   11c0c:			; <UNDEFINED> instruction: 0x00001cbb
   11c10:	andeq	r1, r0, ip, lsl #25
   11c14:	andeq	r1, r0, sl, lsl #24
   11c18:	andeq	r0, r0, r8, lsr #4
   11c1c:	andeq	r1, r0, r6, ror #23
   11c20:	andeq	r1, r0, pc, lsr ip
   11c24:	andeq	r1, r0, r4, ror #22
   11c28:	andeq	r1, r0, r2, asr #23
   11c2c:	andeq	r1, r0, pc, lsr #22
   11c30:	andeq	r1, r0, r2, ror #21
   11c34:	andeq	r1, r0, fp, ror #22
   11c38:	ldr	r2, [r1, #12]
   11c3c:	ldr	r3, [r0, #12]
   11c40:	cmp	r2, r3
   11c44:	bne	11c64 <getc@plt+0x10e8>
   11c48:	ldr	r2, [r1, #16]
   11c4c:	ldr	r3, [r0, #16]
   11c50:	cmp	r2, r3
   11c54:	bne	11c64 <getc@plt+0x10e8>
   11c58:	ldr	r1, [r1, #8]
   11c5c:	ldr	r0, [r0, #8]
   11c60:	b	12404 <getc@plt+0x1888>
   11c64:	sub	r0, r2, r3
   11c68:	bx	lr
   11c6c:	cmp	r0, #2
   11c70:	bxlt	lr
   11c74:	ldr	r3, [pc, #28]	; 11c98 <getc@plt+0x111c>
   11c78:	add	r3, pc, r3
   11c7c:	str	r2, [r3]
   11c80:	ldr	r2, [pc, #20]	; 11c9c <getc@plt+0x1120>
   11c84:	add	r2, pc, r2
   11c88:	str	r1, [r2]
   11c8c:	sub	r1, r0, #1
   11c90:	mov	r0, #0
   11c94:	b	11ca0 <getc@plt+0x1124>
   11c98:			; <UNDEFINED> instruction: 0x000134b4
   11c9c:	andeq	r3, r1, r4, lsr #9
   11ca0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11ca4:	add	fp, sp, #24
   11ca8:	mov	r8, r1
   11cac:	mov	r5, r0
   11cb0:	b	11ce0 <getc@plt+0x1164>
   11cb4:	mov	r7, r4
   11cb8:	ldr	r0, [pc, #308]	; 11df4 <getc@plt+0x1278>
   11cbc:	ldr	r0, [pc, r0]
   11cc0:	sub	r1, r4, #1
   11cc4:	str	r6, [r0, r4, lsl #2]
   11cc8:	cmp	r1, r5
   11ccc:	movgt	r0, r5
   11cd0:	blgt	11ca0 <getc@plt+0x1124>
   11cd4:	add	r5, r7, #1
   11cd8:	cmp	r5, r8
   11cdc:	bge	11dd4 <getc@plt+0x1258>
   11ce0:	ldr	r0, [pc, #240]	; 11dd8 <getc@plt+0x125c>
   11ce4:	cmp	r5, r8
   11ce8:	mov	r4, r8
   11cec:	mov	r7, r5
   11cf0:	ldr	r0, [pc, r0]
   11cf4:	ldr	r6, [r0, r5, lsl #2]
   11cf8:	bge	11cc0 <getc@plt+0x1144>
   11cfc:	mov	r7, r5
   11d00:	mov	r4, r8
   11d04:	cmp	r7, r4
   11d08:	blt	11d20 <getc@plt+0x11a4>
   11d0c:	b	11d50 <getc@plt+0x11d4>
   11d10:	cmp	r7, r4
   11d14:	bge	11cb8 <getc@plt+0x113c>
   11d18:	cmp	r7, r4
   11d1c:	bge	11d50 <getc@plt+0x11d4>
   11d20:	ldr	r0, [pc, #180]	; 11ddc <getc@plt+0x1260>
   11d24:	ldr	r0, [pc, r0]
   11d28:	ldr	r1, [r0, r4, lsl #2]
   11d2c:	ldr	r2, [pc, #172]	; 11de0 <getc@plt+0x1264>
   11d30:	mov	r0, r6
   11d34:	ldr	r2, [pc, r2]
   11d38:	blx	r2
   11d3c:	cmn	r0, #1
   11d40:	bgt	11d50 <getc@plt+0x11d4>
   11d44:	sub	r4, r4, #1
   11d48:	cmp	r7, r4
   11d4c:	blt	11d20 <getc@plt+0x11a4>
   11d50:	cmp	r7, r4
   11d54:	bne	11d64 <getc@plt+0x11e8>
   11d58:	cmp	r7, r4
   11d5c:	blt	11d80 <getc@plt+0x1204>
   11d60:	b	11db4 <getc@plt+0x1238>
   11d64:	ldr	r0, [pc, #120]	; 11de4 <getc@plt+0x1268>
   11d68:	ldr	r0, [pc, r0]
   11d6c:	ldr	r1, [r0, r4, lsl #2]
   11d70:	str	r1, [r0, r7, lsl #2]
   11d74:	add	r7, r7, #1
   11d78:	cmp	r7, r4
   11d7c:	bge	11db4 <getc@plt+0x1238>
   11d80:	ldr	r0, [pc, #96]	; 11de8 <getc@plt+0x126c>
   11d84:	ldr	r0, [pc, r0]
   11d88:	ldr	r1, [r0, r7, lsl #2]
   11d8c:	ldr	r2, [pc, #88]	; 11dec <getc@plt+0x1270>
   11d90:	mov	r0, r6
   11d94:	ldr	r2, [pc, r2]
   11d98:	blx	r2
   11d9c:	cmp	r0, #1
   11da0:	blt	11db4 <getc@plt+0x1238>
   11da4:	add	r7, r7, #1
   11da8:	cmp	r4, r7
   11dac:	bne	11d80 <getc@plt+0x1204>
   11db0:	b	11cb4 <getc@plt+0x1138>
   11db4:	cmp	r7, r4
   11db8:	beq	11d10 <getc@plt+0x1194>
   11dbc:	ldr	r0, [pc, #44]	; 11df0 <getc@plt+0x1274>
   11dc0:	ldr	r0, [pc, r0]
   11dc4:	ldr	r1, [r0, r7, lsl #2]
   11dc8:	str	r1, [r0, r4, lsl #2]
   11dcc:	sub	r4, r4, #1
   11dd0:	b	11d10 <getc@plt+0x1194>
   11dd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11dd8:	andeq	r3, r1, r8, lsr r4
   11ddc:	andeq	r3, r1, r4, lsl #8
   11de0:	strdeq	r3, [r1], -r8
   11de4:	andeq	r3, r1, r0, asr #7
   11de8:	andeq	r3, r1, r4, lsr #7
   11dec:	muleq	r1, r8, r3
   11df0:	andeq	r3, r1, r8, ror #6
   11df4:	andeq	r3, r1, ip, ror #8
   11df8:	push	{r4, r5, r6, sl, fp, lr}
   11dfc:	add	fp, sp, #16
   11e00:	mov	r4, r0
   11e04:	movw	r0, #8048	; 0x1f70
   11e08:	movw	r6, #503	; 0x1f7
   11e0c:	add	r5, r4, r0
   11e10:	mov	r0, r4
   11e14:	bl	13178 <error@@Base+0x8c8>
   11e18:	subs	r6, r6, #1
   11e1c:	add	r4, r4, #16
   11e20:	bne	11e10 <getc@plt+0x1294>
   11e24:	mov	r0, #0
   11e28:	str	r0, [r5]
   11e2c:	str	r0, [r5, #4]
   11e30:	pop	{r4, r5, r6, sl, fp, pc}
   11e34:	push	{r4, r5, r6, sl, fp, lr}
   11e38:	add	fp, sp, #16
   11e3c:	mov	r5, r1
   11e40:	ldrb	r1, [r1]
   11e44:	mov	r4, #0
   11e48:	mov	r2, #0
   11e4c:	cmp	r1, #0
   11e50:	beq	11e84 <getc@plt+0x1308>
   11e54:	add	r3, r5, #1
   11e58:	mov	r2, #0
   11e5c:	uxtab	r2, r2, r1
   11e60:	ldrb	r1, [r3], #1
   11e64:	cmp	r1, #0
   11e68:	bne	11e5c <getc@plt+0x12e0>
   11e6c:	movw	r1, #20065	; 0x4e61
   11e70:	movt	r1, #33354	; 0x824a
   11e74:	umull	r1, r3, r2, r1
   11e78:	lsr	r1, r3, #8
   11e7c:	movw	r3, #503	; 0x1f7
   11e80:	mls	r2, r1, r3, r2
   11e84:	ldr	r6, [r0, r2, lsl #4]
   11e88:	cmp	r6, #0
   11e8c:	beq	11eb0 <getc@plt+0x1334>
   11e90:	ldr	r1, [r6, #8]
   11e94:	mov	r0, r5
   11e98:	bl	10a14 <strcmp@plt>
   11e9c:	cmp	r0, #0
   11ea0:	beq	11eb8 <getc@plt+0x133c>
   11ea4:	ldr	r6, [r6, #4]
   11ea8:	cmp	r6, #0
   11eac:	bne	11e90 <getc@plt+0x1314>
   11eb0:	mov	r0, r4
   11eb4:	pop	{r4, r5, r6, sl, fp, pc}
   11eb8:	mov	r4, r6
   11ebc:	mov	r0, r4
   11ec0:	pop	{r4, r5, r6, sl, fp, pc}
   11ec4:	push	{r4, r5, fp, lr}
   11ec8:	add	fp, sp, #8
   11ecc:	movw	r2, #8048	; 0x1f70
   11ed0:	add	r5, r0, r2
   11ed4:	ldr	r2, [r1, #8]
   11ed8:	ldrb	r3, [r2]
   11edc:	cmp	r3, #0
   11ee0:	beq	11f18 <getc@plt+0x139c>
   11ee4:	add	r4, r2, #1
   11ee8:	mov	r2, #0
   11eec:	uxtab	r2, r2, r3
   11ef0:	ldrb	r3, [r4], #1
   11ef4:	cmp	r3, #0
   11ef8:	bne	11eec <getc@plt+0x1370>
   11efc:	movw	r3, #20065	; 0x4e61
   11f00:	movt	r3, #33354	; 0x824a
   11f04:	umull	r3, r4, r2, r3
   11f08:	lsr	r3, r4, #8
   11f0c:	movw	r4, #503	; 0x1f7
   11f10:	mls	r2, r3, r4, r2
   11f14:	b	11f1c <getc@plt+0x13a0>
   11f18:	mov	r2, #0
   11f1c:	add	r0, r0, r2, lsl #4
   11f20:	bl	13184 <error@@Base+0x8d4>
   11f24:	ldr	r0, [r5]
   11f28:	cmp	r0, #0
   11f2c:	beq	11f3c <getc@plt+0x13c0>
   11f30:	bl	10a2c <free@plt>
   11f34:	mov	r0, #0
   11f38:	str	r0, [r5]
   11f3c:	ldr	r0, [r5, #4]
   11f40:	add	r0, r0, #1
   11f44:	str	r0, [r5, #4]
   11f48:	pop	{r4, r5, fp, pc}
   11f4c:	push	{r4, r5, fp, lr}
   11f50:	add	fp, sp, #8
   11f54:	movw	r2, #8048	; 0x1f70
   11f58:	add	r5, r0, r2
   11f5c:	ldr	r2, [r1, #8]
   11f60:	ldrb	r3, [r2]
   11f64:	cmp	r3, #0
   11f68:	beq	11fa0 <getc@plt+0x1424>
   11f6c:	add	r4, r2, #1
   11f70:	mov	r2, #0
   11f74:	uxtab	r2, r2, r3
   11f78:	ldrb	r3, [r4], #1
   11f7c:	cmp	r3, #0
   11f80:	bne	11f74 <getc@plt+0x13f8>
   11f84:	movw	r3, #20065	; 0x4e61
   11f88:	movt	r3, #33354	; 0x824a
   11f8c:	umull	r3, r4, r2, r3
   11f90:	lsr	r3, r4, #8
   11f94:	movw	r4, #503	; 0x1f7
   11f98:	mls	r2, r3, r4, r2
   11f9c:	b	11fa4 <getc@plt+0x1428>
   11fa0:	mov	r2, #0
   11fa4:	add	r0, r0, r2, lsl #4
   11fa8:	bl	132cc <error@@Base+0xa1c>
   11fac:	ldr	r0, [r5]
   11fb0:	cmp	r0, #0
   11fb4:	beq	11fc4 <getc@plt+0x1448>
   11fb8:	bl	10a2c <free@plt>
   11fbc:	mov	r0, #0
   11fc0:	str	r0, [r5]
   11fc4:	ldr	r0, [r5, #4]
   11fc8:	sub	r0, r0, #1
   11fcc:	str	r0, [r5, #4]
   11fd0:	pop	{r4, r5, fp, pc}
   11fd4:	push	{r4, r5, fp, lr}
   11fd8:	add	fp, sp, #8
   11fdc:	mov	r4, r0
   11fe0:	movw	r0, #8048	; 0x1f70
   11fe4:	mov	r5, r4
   11fe8:	ldr	r0, [r5, r0]!
   11fec:	cmp	r0, #0
   11ff0:	bne	12050 <getc@plt+0x14d4>
   11ff4:	ldr	r0, [r5, #4]
   11ff8:	cmp	r0, #0
   11ffc:	popeq	{r4, r5, fp, pc}
   12000:	mov	r1, #4
   12004:	bl	123e0 <getc@plt+0x1864>
   12008:	str	r0, [r5]
   1200c:	mov	r0, #0
   12010:	movw	ip, #503	; 0x1f7
   12014:	mov	r2, #0
   12018:	b	12028 <getc@plt+0x14ac>
   1201c:	add	r2, r2, #1
   12020:	cmp	r2, ip
   12024:	beq	12050 <getc@plt+0x14d4>
   12028:	ldr	r3, [r4, r2, lsl #4]
   1202c:	cmp	r3, #0
   12030:	beq	1201c <getc@plt+0x14a0>
   12034:	ldr	r1, [r5]
   12038:	str	r3, [r1, r0, lsl #2]
   1203c:	add	r0, r0, #1
   12040:	ldr	r3, [r3, #4]
   12044:	cmp	r3, #0
   12048:	bne	12034 <getc@plt+0x14b8>
   1204c:	b	1201c <getc@plt+0x14a0>
   12050:	pop	{r4, r5, fp, pc}
   12054:	push	{r4, r5, r6, r7, fp, lr}
   12058:	add	fp, sp, #16
   1205c:	mov	r5, r0
   12060:	movw	r0, #8048	; 0x1f70
   12064:	mov	r4, r1
   12068:	movw	r7, #503	; 0x1f7
   1206c:	add	r6, r5, r0
   12070:	mov	r0, r5
   12074:	mov	r1, r4
   12078:	bl	133a0 <error@@Base+0xaf0>
   1207c:	subs	r7, r7, #1
   12080:	add	r5, r5, #16
   12084:	bne	12070 <getc@plt+0x14f4>
   12088:	ldr	r0, [r6]
   1208c:	cmp	r0, #0
   12090:	beq	120a0 <getc@plt+0x1524>
   12094:	bl	10a2c <free@plt>
   12098:	mov	r0, #0
   1209c:	str	r0, [r6]
   120a0:	mov	r0, #0
   120a4:	str	r0, [r6, #4]
   120a8:	pop	{r4, r5, r6, r7, fp, pc}
   120ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b0:	add	fp, sp, #28
   120b4:	push	{r0}		; (str r0, [sp, #-4]!)
   120b8:	ldr	r0, [pc, #336]	; 12210 <getc@plt+0x1694>
   120bc:	add	r0, pc, r0
   120c0:	ldrh	r0, [r0]
   120c4:	ldr	r7, [pc, #328]	; 12214 <getc@plt+0x1698>
   120c8:	cmp	r0, #0
   120cc:	add	r7, pc, r7
   120d0:	bne	121f4 <getc@plt+0x1678>
   120d4:	ldr	r3, [pc, #316]	; 12218 <getc@plt+0x169c>
   120d8:	mov	r6, #0
   120dc:	mov	r8, #0
   120e0:	mov	r4, #0
   120e4:	add	r3, pc, r3
   120e8:	b	120fc <getc@plt+0x1580>
   120ec:	add	r4, r4, #1
   120f0:	mov	r8, r0
   120f4:	cmp	r4, #91	; 0x5b
   120f8:	beq	121f4 <getc@plt+0x1678>
   120fc:	sxth	sl, r8
   12100:	cmp	sl, #1
   12104:	blt	12178 <getc@plt+0x15fc>
   12108:	add	r0, r4, r4, lsl #1
   1210c:	ldr	r1, [pc, #264]	; 1221c <getc@plt+0x16a0>
   12110:	add	r0, r3, r0, lsl #2
   12114:	ldr	r5, [r0, #8]
   12118:	ldr	r1, [pc, r1]
   1211c:	mov	r0, r5
   12120:	bl	10a14 <strcmp@plt>
   12124:	cmp	r0, #0
   12128:	mov	r0, r6
   1212c:	mov	r9, #0
   12130:	beq	12180 <getc@plt+0x1604>
   12134:	mov	r8, r6
   12138:	sxth	sl, r6
   1213c:	ldr	r6, [pc, #220]	; 12220 <getc@plt+0x16a4>
   12140:	mov	r1, #1
   12144:	add	r6, pc, r6
   12148:	mov	r9, r1
   1214c:	cmp	r1, sl
   12150:	bge	1216c <getc@plt+0x15f0>
   12154:	ldr	r1, [r6, r9, lsl #2]
   12158:	mov	r0, r5
   1215c:	bl	10a14 <strcmp@plt>
   12160:	add	r1, r9, #1
   12164:	cmp	r0, #0
   12168:	bne	12148 <getc@plt+0x15cc>
   1216c:	mov	r6, r8
   12170:	mov	r0, r8
   12174:	b	12180 <getc@plt+0x1604>
   12178:	mov	r0, r8
   1217c:	mov	r9, #0
   12180:	ldr	r3, [pc, #156]	; 12224 <getc@plt+0x16a8>
   12184:	cmp	r9, sl
   12188:	add	r3, pc, r3
   1218c:	bne	121c8 <getc@plt+0x164c>
   12190:	uxth	r0, r8
   12194:	cmp	r0, #256	; 0x100
   12198:	beq	12204 <getc@plt+0x1688>
   1219c:	ldr	r0, [pc, #132]	; 12228 <getc@plt+0x16ac>
   121a0:	add	r6, r8, #1
   121a4:	add	r0, pc, r0
   121a8:	strh	r6, [r0]
   121ac:	add	r0, r4, r4, lsl #1
   121b0:	ldr	r1, [pc, #116]	; 1222c <getc@plt+0x16b0>
   121b4:	add	r0, r3, r0, lsl #2
   121b8:	ldr	r0, [r0, #8]
   121bc:	add	r1, pc, r1
   121c0:	str	r0, [r1, r9, lsl #2]
   121c4:	mov	r0, r6
   121c8:	add	r1, r4, r4, lsl #1
   121cc:	mov	r2, r3
   121d0:	ldr	r1, [r2, r1, lsl #2]!
   121d4:	ldr	r2, [r2, #4]
   121d8:	cmp	r1, r2
   121dc:	bhi	120ec <getc@plt+0x1570>
   121e0:	strb	r9, [r7, r1]
   121e4:	add	r1, r1, #1
   121e8:	cmp	r1, r2
   121ec:	bls	121e0 <getc@plt+0x1664>
   121f0:	b	120ec <getc@plt+0x1570>
   121f4:	ldr	r0, [sp]
   121f8:	ldrb	r0, [r7, r0]
   121fc:	sub	sp, fp, #28
   12200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12204:	ldr	r0, [pc, #36]	; 12230 <getc@plt+0x16b4>
   12208:	add	r0, pc, r0
   1220c:	bl	128b0 <error@@Base>
   12210:	andeq	r3, r1, r4, ror r0
   12214:	andeq	r3, r1, r6, rrx
   12218:	ldrdeq	r2, [r1], -r0
   1221c:	andseq	r3, r2, ip, lsl r0
   12220:			; <UNDEFINED> instruction: 0x00122ff0
   12224:	andeq	r2, r1, ip, lsr #18
   12228:	andeq	r2, r1, ip, lsl #31
   1222c:	andseq	r2, r2, r8, ror pc
   12230:	muleq	r0, sl, r4
   12234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12238:	add	fp, sp, #28
   1223c:	push	{r0}		; (str r0, [sp, #-4]!)
   12240:	ldr	r0, [pc, #364]	; 123b4 <getc@plt+0x1838>
   12244:	add	r0, pc, r0
   12248:	ldrh	r6, [r0]
   1224c:	cmp	r6, #0
   12250:	bne	12378 <getc@plt+0x17fc>
   12254:	ldr	r3, [pc, #348]	; 123b8 <getc@plt+0x183c>
   12258:	ldr	r7, [pc, #348]	; 123bc <getc@plt+0x1840>
   1225c:	mov	r6, #0
   12260:	mov	r4, #0
   12264:	mov	r8, #0
   12268:	add	r3, pc, r3
   1226c:	add	r7, pc, r7
   12270:	b	12284 <getc@plt+0x1708>
   12274:	add	r8, r8, #1
   12278:	mov	r4, r0
   1227c:	cmp	r8, #91	; 0x5b
   12280:	beq	12378 <getc@plt+0x17fc>
   12284:	sxth	sl, r4
   12288:	cmp	sl, #1
   1228c:	blt	122fc <getc@plt+0x1780>
   12290:	add	r0, r8, r8, lsl #1
   12294:	ldr	r1, [pc, #292]	; 123c0 <getc@plt+0x1844>
   12298:	add	r0, r3, r0, lsl #2
   1229c:	ldr	r5, [r0, #8]
   122a0:	ldr	r1, [pc, r1]
   122a4:	mov	r0, r5
   122a8:	bl	10a14 <strcmp@plt>
   122ac:	cmp	r0, #0
   122b0:	mov	r0, r6
   122b4:	mov	r9, #0
   122b8:	beq	12304 <getc@plt+0x1788>
   122bc:	ldr	r4, [pc, #256]	; 123c4 <getc@plt+0x1848>
   122c0:	sxth	sl, r6
   122c4:	mov	r1, #1
   122c8:	add	r4, pc, r4
   122cc:	mov	r9, r1
   122d0:	cmp	r1, sl
   122d4:	bge	122f0 <getc@plt+0x1774>
   122d8:	ldr	r1, [r4, r9, lsl #2]
   122dc:	mov	r0, r5
   122e0:	bl	10a14 <strcmp@plt>
   122e4:	add	r1, r9, #1
   122e8:	cmp	r0, #0
   122ec:	bne	122cc <getc@plt+0x1750>
   122f0:	mov	r0, r6
   122f4:	mov	r4, r6
   122f8:	b	12304 <getc@plt+0x1788>
   122fc:	mov	r0, r4
   12300:	mov	r9, #0
   12304:	ldr	r3, [pc, #188]	; 123c8 <getc@plt+0x184c>
   12308:	cmp	r9, sl
   1230c:	add	r3, pc, r3
   12310:	bne	1234c <getc@plt+0x17d0>
   12314:	uxth	r0, r4
   12318:	cmp	r0, #256	; 0x100
   1231c:	beq	123a8 <getc@plt+0x182c>
   12320:	ldr	r0, [pc, #164]	; 123cc <getc@plt+0x1850>
   12324:	add	r6, r4, #1
   12328:	add	r0, pc, r0
   1232c:	strh	r6, [r0]
   12330:	add	r0, r8, r8, lsl #1
   12334:	ldr	r1, [pc, #148]	; 123d0 <getc@plt+0x1854>
   12338:	add	r0, r3, r0, lsl #2
   1233c:	ldr	r0, [r0, #8]
   12340:	add	r1, pc, r1
   12344:	str	r0, [r1, r9, lsl #2]
   12348:	mov	r0, r6
   1234c:	add	r1, r8, r8, lsl #1
   12350:	mov	r2, r3
   12354:	ldr	r1, [r2, r1, lsl #2]!
   12358:	ldr	r2, [r2, #4]
   1235c:	cmp	r1, r2
   12360:	bhi	12274 <getc@plt+0x16f8>
   12364:	strb	r9, [r7, r1]
   12368:	add	r1, r1, #1
   1236c:	cmp	r1, r2
   12370:	bls	12364 <getc@plt+0x17e8>
   12374:	b	12274 <getc@plt+0x16f8>
   12378:	ldr	r0, [sp]
   1237c:	sxth	r1, r6
   12380:	uxtb	r0, r0
   12384:	cmp	r0, r1
   12388:	ldrlt	r1, [pc, #68]	; 123d4 <getc@plt+0x1858>
   1238c:	addlt	r1, pc, r1
   12390:	ldrlt	r0, [r1, r0, lsl #2]
   12394:	sublt	sp, fp, #28
   12398:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1239c:	ldr	r0, [pc, #56]	; 123dc <getc@plt+0x1860>
   123a0:	add	r0, pc, r0
   123a4:	bl	128b0 <error@@Base>
   123a8:	ldr	r0, [pc, #40]	; 123d8 <getc@plt+0x185c>
   123ac:	add	r0, pc, r0
   123b0:	bl	128b0 <error@@Base>
   123b4:	andeq	r2, r1, ip, ror #29
   123b8:	andeq	r2, r1, ip, asr #16
   123bc:	andeq	r2, r1, r6, asr #29
   123c0:	mulseq	r2, r4, lr
   123c4:	andseq	r2, r2, ip, ror #28
   123c8:	andeq	r2, r1, r8, lsr #15
   123cc:	andeq	r2, r1, r8, lsl #28
   123d0:			; <UNDEFINED> instruction: 0x00122df4
   123d4:	andseq	r2, r2, r8, lsr #27
   123d8:	strdeq	r1, [r0], -r6
   123dc:	andeq	r1, r0, sl, ror #5
   123e0:	push	{fp, lr}
   123e4:	mov	fp, sp
   123e8:	bl	10a08 <calloc@plt>
   123ec:	cmp	r0, #0
   123f0:	popne	{fp, pc}
   123f4:	ldr	r0, [pc, #4]	; 12400 <getc@plt+0x1884>
   123f8:	add	r0, pc, r0
   123fc:	bl	128b0 <error@@Base>
   12400:	andeq	r1, r0, r8, ror r8
   12404:	push	{r4, r5, r6, sl, fp, lr}
   12408:	add	fp, sp, #16
   1240c:	ldrb	r3, [r0]
   12410:	ldrb	ip, [r1]
   12414:	mov	r2, r0
   12418:	mov	r0, #0
   1241c:	cmp	r3, #0
   12420:	beq	12460 <getc@plt+0x18e4>
   12424:	add	r6, r2, #1
   12428:	add	lr, r1, #1
   1242c:	mov	r2, #0
   12430:	uxtb	r4, ip
   12434:	uxtb	r5, r3
   12438:	cmp	r5, r4
   1243c:	bne	12470 <getc@plt+0x18f4>
   12440:	ldrb	r3, [r6, r2]
   12444:	ldrb	ip, [lr, r2]
   12448:	add	r2, r2, #1
   1244c:	cmp	r3, #0
   12450:	bne	12430 <getc@plt+0x18b4>
   12454:	cmp	ip, #0
   12458:	bne	1246c <getc@plt+0x18f0>
   1245c:	pop	{r4, r5, r6, sl, fp, pc}
   12460:	mov	r2, #0
   12464:	cmp	ip, #0
   12468:	beq	1245c <getc@plt+0x18e0>
   1246c:	mov	r3, #0
   12470:	ldrb	r1, [r1, r2]
   12474:	uxtb	r2, r3
   12478:	mov	r0, #1
   1247c:	cmp	r2, r1
   12480:	mvncc	r0, #0
   12484:	pop	{r4, r5, r6, sl, fp, pc}
   12488:	push	{r4, r5, fp, lr}
   1248c:	add	fp, sp, #8
   12490:	mov	r5, r1
   12494:	cmp	r0, #0
   12498:	beq	124cc <getc@plt+0x1950>
   1249c:	mov	r1, r5
   124a0:	mov	r4, r0
   124a4:	bl	10a20 <fopen@plt>
   124a8:	cmp	r0, #0
   124ac:	popne	{r4, r5, fp, pc}
   124b0:	ldrb	r0, [r5]
   124b4:	cmp	r0, #119	; 0x77
   124b8:	bne	124f0 <getc@plt+0x1974>
   124bc:	ldr	r0, [pc, #72]	; 1250c <getc@plt+0x1990>
   124c0:	mov	r1, r4
   124c4:	add	r0, pc, r0
   124c8:	bl	12900 <error@@Base+0x50>
   124cc:	ldrb	r0, [r5]
   124d0:	ldr	r1, [pc, #40]	; 12500 <getc@plt+0x1984>
   124d4:	ldr	r1, [pc, r1]
   124d8:	ldr	r2, [pc, #36]	; 12504 <getc@plt+0x1988>
   124dc:	cmp	r0, #114	; 0x72
   124e0:	ldr	r2, [pc, r2]
   124e4:	moveq	r2, r1
   124e8:	ldr	r0, [r2]
   124ec:	pop	{r4, r5, fp, pc}
   124f0:	ldr	r0, [pc, #16]	; 12508 <getc@plt+0x198c>
   124f4:	mov	r1, r4
   124f8:	add	r0, pc, r0
   124fc:	bl	12900 <error@@Base+0x50>
   12500:	ldrdeq	r2, [r1], -r0
   12504:	andeq	r2, r1, r8, asr #23
   12508:	andeq	r1, r0, r8, lsr #15
   1250c:	andeq	r1, r0, r6, asr #15
   12510:	ldr	r1, [pc, #40]	; 12540 <getc@plt+0x19c4>
   12514:	ldr	r1, [pc, r1]
   12518:	ldr	r1, [r1]
   1251c:	cmp	r1, r0
   12520:	bxeq	lr
   12524:	ldr	r1, [pc, #24]	; 12544 <getc@plt+0x19c8>
   12528:	ldr	r1, [pc, r1]
   1252c:	ldr	r1, [r1]
   12530:	cmp	r1, r0
   12534:	beq	1253c <getc@plt+0x19c0>
   12538:	b	10b34 <fclose@plt>
   1253c:	bx	lr
   12540:	muleq	r1, r0, fp
   12544:	andeq	r2, r1, r0, lsl #23
   12548:	push	{fp, lr}
   1254c:	mov	fp, sp
   12550:	sub	sp, sp, #88	; 0x58
   12554:	mov	r1, r0
   12558:	mov	r2, sp
   1255c:	mov	r0, #3
   12560:	bl	10a8c <__xstat@plt>
   12564:	clz	r0, r0
   12568:	lsr	r0, r0, #5
   1256c:	mov	sp, fp
   12570:	pop	{fp, pc}
   12574:	push	{r4, r5, fp, lr}
   12578:	add	fp, sp, #8
   1257c:	sub	sp, sp, #104	; 0x68
   12580:	ldr	r0, [pc, #92]	; 125e4 <getc@plt+0x1a68>
   12584:	add	r0, pc, r0
   12588:	ldrh	r1, [r0]
   1258c:	add	r5, r1, #1
   12590:	strh	r5, [r0]
   12594:	ldr	r0, [pc, #76]	; 125e8 <getc@plt+0x1a6c>
   12598:	ldr	r0, [pc, r0]
   1259c:	ldr	r4, [r0]
   125a0:	bl	10ae0 <getpid@plt>
   125a4:	mov	r3, r0
   125a8:	sxth	r0, r5
   125ac:	add	r5, sp, #4
   125b0:	mov	r2, r4
   125b4:	str	r0, [sp]
   125b8:	mov	r0, r5
   125bc:	ldr	r1, [pc, #40]	; 125ec <getc@plt+0x1a70>
   125c0:	add	r1, pc, r1
   125c4:	bl	10b40 <sprintf@plt>
   125c8:	mov	r0, r5
   125cc:	bl	10a5c <strdup@plt>
   125d0:	mov	r4, r0
   125d4:	bl	10a74 <unlink@plt>
   125d8:	mov	r0, r4
   125dc:	sub	sp, fp, #8
   125e0:	pop	{r4, r5, fp, pc}
   125e4:			; <UNDEFINED> instruction: 0x00122fb0
   125e8:	andeq	r2, r1, r0, lsl #22
   125ec:	andeq	r1, r0, r9, lsl #14
   125f0:	push	{r4, sl, fp, lr}
   125f4:	add	fp, sp, #8
   125f8:	mov	r4, r0
   125fc:	bl	10b10 <strlen@plt>
   12600:	sub	r0, r0, #1
   12604:	sxth	r0, r0
   12608:	cmp	r0, #0
   1260c:	bmi	1261c <getc@plt+0x1aa0>
   12610:	ldrb	r1, [r4, r0]
   12614:	cmp	r1, #47	; 0x2f
   12618:	bne	12600 <getc@plt+0x1a84>
   1261c:	add	r0, r0, r4
   12620:	add	r0, r0, #1
   12624:	pop	{r4, sl, fp, pc}
   12628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1262c:	add	fp, sp, #28
   12630:	sub	sp, sp, #12
   12634:	stmib	sp, {r0, r1}
   12638:	mov	r6, r3
   1263c:	str	r2, [sp]
   12640:	ldr	r4, [r1]
   12644:	mov	r0, r4
   12648:	bl	10b10 <strlen@plt>
   1264c:	sub	r0, r0, #1
   12650:	sxth	r0, r0
   12654:	cmp	r0, #0
   12658:	bmi	12668 <getc@plt+0x1aec>
   1265c:	ldrb	r1, [r4, r0]
   12660:	cmp	r1, #47	; 0x2f
   12664:	bne	1264c <getc@plt+0x1ad0>
   12668:	ldr	r1, [pc, #484]	; 12854 <getc@plt+0x1cd8>
   1266c:	add	r0, r0, r4
   12670:	add	r0, r0, #1
   12674:	ldr	r1, [pc, r1]
   12678:	str	r0, [r1]
   1267c:	mov	r0, #2
   12680:	ldr	r4, [pc, #464]	; 12858 <getc@plt+0x1cdc>
   12684:	add	r4, pc, r4
   12688:	mov	r1, r4
   1268c:	bl	10ac8 <__sysv_signal@plt>
   12690:	mov	r0, #15
   12694:	mov	r1, r4
   12698:	bl	10ac8 <__sysv_signal@plt>
   1269c:	ldr	r0, [sp, #4]
   126a0:	ldr	r5, [r0]
   126a4:	cmp	r5, #1
   126a8:	bne	126c0 <getc@plt+0x1b44>
   126ac:	ldr	r0, [pc, #424]	; 1285c <getc@plt+0x1ce0>
   126b0:	ldr	r0, [pc, r0]
   126b4:	ldrb	r0, [r0]
   126b8:	cmp	r0, #0
   126bc:	bne	1283c <getc@plt+0x1cc0>
   126c0:	ldr	ip, [sp, #8]
   126c4:	mov	r8, #0
   126c8:	cmp	r5, #2
   126cc:	blt	12818 <getc@plt+0x1c9c>
   126d0:	mov	r8, #0
   126d4:	mov	r7, #1
   126d8:	mov	r9, #1
   126dc:	ldr	r4, [ip, r7, lsl #2]
   126e0:	ldrb	r0, [r4]
   126e4:	cmp	r0, #45	; 0x2d
   126e8:	bne	127c0 <getc@plt+0x1c44>
   126ec:	ldrb	sl, [r4, #1]
   126f0:	cmp	sl, #0
   126f4:	beq	127c0 <getc@plt+0x1c44>
   126f8:	mov	r0, r4
   126fc:	bl	10b10 <strlen@plt>
   12700:	mov	r2, r0
   12704:	ldr	r0, [pc, #340]	; 12860 <getc@plt+0x1ce4>
   12708:	mov	r1, r4
   1270c:	add	r0, pc, r0
   12710:	bl	10b64 <strncmp@plt>
   12714:	cmp	r0, #0
   12718:	beq	1283c <getc@plt+0x1cc0>
   1271c:	ldr	ip, [sp, #8]
   12720:	add	r1, r7, #1
   12724:	mov	r0, #0
   12728:	cmp	r1, r5
   1272c:	ldrlt	r0, [ip, r1, lsl #2]
   12730:	cmp	r6, #0
   12734:	ldrbne	r2, [r6]
   12738:	cmpne	r2, #0
   1273c:	beq	1282c <getc@plt+0x1cb0>
   12740:	mov	r1, #0
   12744:	cmp	sl, r2
   12748:	beq	12770 <getc@plt+0x1bf4>
   1274c:	mov	r2, #1
   12750:	sxth	r1, r2
   12754:	add	r3, r1, r1, lsl #1
   12758:	ldrb	r3, [r6, r3, lsl #2]
   1275c:	cmp	r3, #0
   12760:	beq	1282c <getc@plt+0x1cb0>
   12764:	add	r2, r2, #1
   12768:	cmp	sl, r3
   1276c:	bne	12750 <getc@plt+0x1bd4>
   12770:	add	r1, r1, r1, lsl #1
   12774:	add	r3, r6, r1, lsl #2
   12778:	ldr	r1, [r3, #4]
   1277c:	cmp	r1, #0
   12780:	beq	127e0 <getc@plt+0x1c64>
   12784:	mov	r2, r4
   12788:	cmp	r0, #0
   1278c:	ldrb	r7, [r2, #2]!
   12790:	cmpeq	r7, #0
   12794:	beq	127e0 <getc@plt+0x1c64>
   12798:	ldr	r3, [r1]
   1279c:	cmp	r3, #0
   127a0:	bne	12844 <getc@plt+0x1cc8>
   127a4:	cmp	r7, #0
   127a8:	movne	r0, r2
   127ac:	str	r0, [r1]
   127b0:	ldrb	r0, [r2]
   127b4:	cmp	r0, #0
   127b8:	addeq	r9, r9, #1
   127bc:	b	127cc <getc@plt+0x1c50>
   127c0:	sxth	r0, r8
   127c4:	add	r8, r8, #1
   127c8:	str	r4, [ip, r0, lsl #2]
   127cc:	add	r9, r9, #1
   127d0:	sxth	r7, r9
   127d4:	cmp	r5, r7
   127d8:	bgt	126dc <getc@plt+0x1b60>
   127dc:	b	12818 <getc@plt+0x1c9c>
   127e0:	ldr	r0, [r3, #8]
   127e4:	cmp	r0, #0
   127e8:	beq	1282c <getc@plt+0x1cb0>
   127ec:	ldrb	r1, [r4, #2]
   127f0:	cmp	r1, #0
   127f4:	bne	1282c <getc@plt+0x1cb0>
   127f8:	ldrb	r1, [r0]
   127fc:	cmp	r1, #0
   12800:	bne	12844 <getc@plt+0x1cc8>
   12804:	mov	r1, #1
   12808:	strb	r1, [r0]
   1280c:	ldr	r0, [sp, #4]
   12810:	ldr	r5, [r0]
   12814:	b	127cc <getc@plt+0x1c50>
   12818:	ldr	r1, [sp, #4]
   1281c:	sxth	r0, r8
   12820:	str	r0, [r1]
   12824:	sub	sp, fp, #28
   12828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1282c:	ldr	r0, [pc, #52]	; 12868 <getc@plt+0x1cec>
   12830:	mov	r1, r4
   12834:	add	r0, pc, r0
   12838:	bl	12900 <error@@Base+0x50>
   1283c:	ldr	r0, [sp]
   12840:	bl	129dc <error@@Base+0x12c>
   12844:	ldr	r0, [pc, #24]	; 12864 <getc@plt+0x1ce8>
   12848:	mov	r1, r4
   1284c:	add	r0, pc, r0
   12850:	bl	12900 <error@@Base+0x50>
   12854:	andeq	r2, r1, r4, lsr #20
   12858:	andeq	r0, r0, r8, lsl r3
   1285c:	ldrdeq	r2, [r1], -r4
   12860:	ldrdeq	r1, [r0], -sl
   12864:			; <UNDEFINED> instruction: 0x000014be
   12868:	andeq	r1, r0, r7, asr #9
   1286c:	push	{fp, lr}
   12870:	mov	fp, sp
   12874:	mov	r0, #0
   12878:	bl	1287c <getc@plt+0x1d00>
   1287c:	push	{fp, lr}
   12880:	mov	fp, sp
   12884:	mov	r4, r0
   12888:	ldr	r0, [pc, #28]	; 128ac <getc@plt+0x1d30>
   1288c:	ldr	r0, [pc, r0]
   12890:	ldr	r0, [r0]
   12894:	cmp	r0, #0
   12898:	beq	128a0 <getc@plt+0x1d24>
   1289c:	blx	r0
   128a0:	bl	12a3c <error@@Base+0x18c>
   128a4:	mov	r0, r4
   128a8:	bl	10aec <exit@plt>
   128ac:	andeq	r2, r1, r0, lsl r8

000128b0 <error@@Base>:
   128b0:	push	{fp, lr}
   128b4:	mov	fp, sp
   128b8:	mov	r3, r0
   128bc:	ldr	r0, [pc, #44]	; 128f0 <error@@Base+0x40>
   128c0:	ldr	r0, [pc, r0]
   128c4:	ldr	r2, [r0]
   128c8:	ldr	r0, [pc, #36]	; 128f4 <error@@Base+0x44>
   128cc:	ldr	r0, [pc, r0]
   128d0:	ldr	r0, [r0]
   128d4:	ldr	r1, [pc, #28]	; 128f8 <error@@Base+0x48>
   128d8:	add	r1, pc, r1
   128dc:	bl	10b1c <fprintf@plt>
   128e0:	ldr	r0, [pc, #20]	; 128fc <error@@Base+0x4c>
   128e4:	ldr	r0, [pc, r0]
   128e8:	ldr	r0, [r0]
   128ec:	bl	1287c <getc@plt+0x1d00>
   128f0:	ldrdeq	r2, [r1], -r8
   128f4:	andeq	r2, r1, r4, asr #15
   128f8:	ldrdeq	r1, [r0], -ip
   128fc:	andeq	r2, r1, r8, asr #15
   12900:	push	{fp, lr}
   12904:	mov	fp, sp
   12908:	sub	sp, sp, #8
   1290c:	mov	r3, r0
   12910:	ldr	r0, [pc, #48]	; 12948 <error@@Base+0x98>
   12914:	ldr	r0, [pc, r0]
   12918:	ldr	r2, [r0]
   1291c:	ldr	r0, [pc, #40]	; 1294c <error@@Base+0x9c>
   12920:	ldr	r0, [pc, r0]
   12924:	str	r1, [sp]
   12928:	ldr	r0, [r0]
   1292c:	ldr	r1, [pc, #28]	; 12950 <error@@Base+0xa0>
   12930:	add	r1, pc, r1
   12934:	bl	10b1c <fprintf@plt>
   12938:	ldr	r0, [pc, #20]	; 12954 <error@@Base+0xa4>
   1293c:	ldr	r0, [pc, r0]
   12940:	ldr	r0, [r0]
   12944:	bl	1287c <getc@plt+0x1d00>
   12948:	andeq	r2, r1, r4, lsl #15
   1294c:	andeq	r2, r1, r0, ror r7
   12950:	andeq	r1, r0, ip, lsl #7
   12954:	andeq	r2, r1, r0, ror r7
   12958:	push	{fp, lr}
   1295c:	mov	fp, sp
   12960:	sub	sp, sp, #8
   12964:	mov	r3, r0
   12968:	ldr	r0, [pc, #40]	; 12998 <error@@Base+0xe8>
   1296c:	ldr	r0, [pc, r0]
   12970:	ldr	r2, [r0]
   12974:	ldr	r0, [pc, #32]	; 1299c <error@@Base+0xec>
   12978:	ldr	r0, [pc, r0]
   1297c:	str	r1, [sp]
   12980:	ldr	r0, [r0]
   12984:	ldr	r1, [pc, #20]	; 129a0 <error@@Base+0xf0>
   12988:	add	r1, pc, r1
   1298c:	bl	10b1c <fprintf@plt>
   12990:	mov	sp, fp
   12994:	pop	{fp, pc}
   12998:	andeq	r2, r1, ip, lsr #14
   1299c:	andeq	r2, r1, r8, lsl r7
   129a0:	andeq	r1, r0, r4, lsr r3
   129a4:	push	{fp, lr}
   129a8:	mov	fp, sp
   129ac:	ldr	r0, [pc, #32]	; 129d4 <error@@Base+0x124>
   129b0:	add	r0, pc, r0
   129b4:	ldrb	r1, [r0]
   129b8:	cmp	r1, #1
   129bc:	popeq	{fp, pc}
   129c0:	mov	r1, #1
   129c4:	strb	r1, [r0]
   129c8:	ldr	r0, [pc, #8]	; 129d8 <error@@Base+0x128>
   129cc:	add	r0, pc, r0
   129d0:	bl	128b0 <error@@Base>
   129d4:	andseq	r2, r2, r6, lsl #23
   129d8:	andeq	r1, r0, fp, lsl #6
   129dc:	push	{fp, lr}
   129e0:	mov	fp, sp
   129e4:	mov	r3, r0
   129e8:	ldr	r0, [pc, #60]	; 12a2c <error@@Base+0x17c>
   129ec:	ldr	r0, [pc, r0]
   129f0:	ldr	r0, [r0]
   129f4:	cmp	r0, #0
   129f8:	bne	12a24 <error@@Base+0x174>
   129fc:	ldr	r0, [pc, #44]	; 12a30 <error@@Base+0x180>
   12a00:	ldr	r0, [pc, r0]
   12a04:	ldr	r2, [r0]
   12a08:	ldr	r0, [pc, #36]	; 12a34 <error@@Base+0x184>
   12a0c:	ldr	r0, [pc, r0]
   12a10:	ldr	r0, [r0]
   12a14:	ldr	r1, [pc, #28]	; 12a38 <error@@Base+0x188>
   12a18:	add	r1, pc, r1
   12a1c:	bl	10b1c <fprintf@plt>
   12a20:	bl	1286c <getc@plt+0x1cf0>
   12a24:	blx	r0
   12a28:	bl	1286c <getc@plt+0x1cf0>
   12a2c:	andeq	r2, r1, r0, lsr #13
   12a30:	muleq	r1, r8, r6
   12a34:	andeq	r2, r1, r4, lsl #13
   12a38:	ldrdeq	r1, [r0], -r4
   12a3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a40:	add	fp, sp, #24
   12a44:	sub	sp, sp, #104	; 0x68
   12a48:	ldr	r8, [pc, #124]	; 12acc <error@@Base+0x21c>
   12a4c:	add	r8, pc, r8
   12a50:	ldrsh	r0, [r8]
   12a54:	cmp	r0, #1
   12a58:	blt	12ac4 <error@@Base+0x214>
   12a5c:	ldr	r9, [pc, #108]	; 12ad0 <error@@Base+0x220>
   12a60:	mov	r7, #1
   12a64:	add	r4, sp, #4
   12a68:	ldr	r9, [pc, r9]
   12a6c:	ldr	r5, [pc, #96]	; 12ad4 <error@@Base+0x224>
   12a70:	add	r5, pc, r5
   12a74:	ldr	r6, [r9]
   12a78:	bl	10ae0 <getpid@plt>
   12a7c:	mov	r3, r0
   12a80:	sxth	r0, r7
   12a84:	mov	r1, r5
   12a88:	mov	r2, r6
   12a8c:	str	r0, [sp]
   12a90:	mov	r0, r4
   12a94:	bl	10b40 <sprintf@plt>
   12a98:	mov	r0, r4
   12a9c:	bl	10a5c <strdup@plt>
   12aa0:	mov	r6, r0
   12aa4:	bl	10a74 <unlink@plt>
   12aa8:	mov	r0, r6
   12aac:	bl	10a2c <free@plt>
   12ab0:	add	r0, r7, #1
   12ab4:	sxth	r7, r0
   12ab8:	ldrsh	r0, [r8]
   12abc:	cmp	r7, r0
   12ac0:	ble	12a74 <error@@Base+0x1c4>
   12ac4:	sub	sp, fp, #24
   12ac8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12acc:	andseq	r2, r2, r8, ror #21
   12ad0:	andeq	r2, r1, r0, lsr r6
   12ad4:	andeq	r1, r0, r9, asr r2
   12ad8:	push	{r4, r5, r6, sl, fp, lr}
   12adc:	add	fp, sp, #16
   12ae0:	mov	r5, r1
   12ae4:	mov	r6, r0
   12ae8:	mov	r0, #1
   12aec:	mov	r1, #16
   12af0:	mov	r4, r2
   12af4:	bl	123e0 <getc@plt+0x1864>
   12af8:	str	r4, [r0, #12]
   12afc:	mov	r1, r0
   12b00:	strb	r5, [r0, #8]
   12b04:	mov	r0, r6
   12b08:	pop	{r4, r5, r6, sl, fp, lr}
   12b0c:	b	131d4 <error@@Base+0x924>
   12b10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b14:	add	fp, sp, #28
   12b18:	sub	sp, sp, #124	; 0x7c
   12b1c:	mov	r4, r2
   12b20:	mov	r2, r1
   12b24:	cmp	r1, #0
   12b28:	str	r0, [sp, #16]
   12b2c:	bne	12b3c <error@@Base+0x28c>
   12b30:	ldrb	r0, [r4]
   12b34:	cmp	r0, #0
   12b38:	bne	12e7c <error@@Base+0x5cc>
   12b3c:	ldr	r0, [sp, #16]
   12b40:	ldr	r0, [r0, #4]
   12b44:	str	r0, [sp, #4]
   12b48:	mov	r0, r2
   12b4c:	ldr	r1, [pc, #828]	; 12e90 <error@@Base+0x5e0>
   12b50:	add	r1, pc, r1
   12b54:	bl	12488 <getc@plt+0x190c>
   12b58:	mov	r6, r0
   12b5c:	ldrb	r0, [r4]
   12b60:	cmp	r0, #0
   12b64:	beq	12bac <error@@Base+0x2fc>
   12b68:	add	r0, sp, #20
   12b6c:	mov	r1, #99	; 0x63
   12b70:	mov	r2, r6
   12b74:	bl	10a44 <fgets@plt>
   12b78:	cmp	r0, #0
   12b7c:	beq	12b9c <error@@Base+0x2ec>
   12b80:	ldr	r1, [pc, #780]	; 12e94 <error@@Base+0x5e4>
   12b84:	add	r0, sp, #20
   12b88:	mov	r2, #51	; 0x33
   12b8c:	add	r1, pc, r1
   12b90:	bl	10af8 <bcmp@plt>
   12b94:	cmp	r0, #0
   12b98:	beq	12e08 <error@@Base+0x558>
   12b9c:	mov	r0, r6
   12ba0:	bl	10a68 <rewind@plt>
   12ba4:	mov	r5, #0
   12ba8:	strb	r5, [r4, #11]
   12bac:	ldr	r9, [r4, #4]
   12bb0:	ldrb	r8, [r4, #1]
   12bb4:	mov	r0, r6
   12bb8:	str	r4, [sp, #8]
   12bbc:	cmp	r9, #0
   12bc0:	movweq	r9, #94	; 0x5e
   12bc4:	bl	10b7c <getc@plt>
   12bc8:	cmn	r0, #1
   12bcc:	beq	12c98 <error@@Base+0x3e8>
   12bd0:	add	r1, sp, #20
   12bd4:	mov	sl, #0
   12bd8:	sub	r4, fp, #32
   12bdc:	add	r1, r1, #1
   12be0:	str	r1, [sp, #12]
   12be4:	b	12c20 <error@@Base+0x370>
   12be8:	mov	r0, #1
   12bec:	mov	r1, #16
   12bf0:	bl	123e0 <getc@plt+0x1864>
   12bf4:	str	r5, [r0, #12]
   12bf8:	mov	r1, r0
   12bfc:	strb	sl, [r0, #8]
   12c00:	ldr	r0, [sp, #16]
   12c04:	bl	131d4 <error@@Base+0x924>
   12c08:	mov	r7, #0
   12c0c:	mov	r0, r6
   12c10:	bl	10b7c <getc@plt>
   12c14:	cmn	r0, #1
   12c18:	mov	sl, r7
   12c1c:	beq	12c98 <error@@Base+0x3e8>
   12c20:	ldr	r1, [pc, #628]	; 12e9c <error@@Base+0x5ec>
   12c24:	ldr	r1, [pc, r1]
   12c28:	add	r1, r1, r0
   12c2c:	ldrsb	r5, [r1]
   12c30:	cmp	r5, #0
   12c34:	ble	12e5c <error@@Base+0x5ac>
   12c38:	cmp	r5, #1
   12c3c:	strb	r0, [sp, #20]
   12c40:	beq	12c64 <error@@Base+0x3b4>
   12c44:	ldr	r0, [sp, #12]
   12c48:	sub	r7, r5, #1
   12c4c:	mov	r1, #1
   12c50:	mov	r3, r6
   12c54:	mov	r2, r7
   12c58:	bl	10aa4 <fread@plt>
   12c5c:	cmp	r0, r7
   12c60:	bne	12e70 <error@@Base+0x5c0>
   12c64:	add	r0, sp, #20
   12c68:	mov	r1, #4
   12c6c:	mov	r2, r4
   12c70:	bl	10ab0 <utf8proc_iterate@plt>
   12c74:	cmp	r0, r5
   12c78:	bne	12e68 <error@@Base+0x5b8>
   12c7c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12c80:	cmp	r8, #0
   12c84:	beq	12be8 <error@@Base+0x338>
   12c88:	mov	r7, #1
   12c8c:	cmp	r5, r9
   12c90:	beq	12c0c <error@@Base+0x35c>
   12c94:	b	12be8 <error@@Base+0x338>
   12c98:	mov	r0, r6
   12c9c:	bl	12510 <getc@plt+0x1994>
   12ca0:	ldr	r8, [sp, #8]
   12ca4:	ldr	r9, [sp, #4]
   12ca8:	ldrb	r0, [r8, #9]
   12cac:	cmp	r0, #0
   12cb0:	beq	12dc4 <error@@Base+0x514>
   12cb4:	cmp	r9, #0
   12cb8:	ldr	r0, [sp, #16]
   12cbc:	addne	r0, r9, #4
   12cc0:	ldr	r6, [r0]
   12cc4:	cmp	r6, #0
   12cc8:	beq	12dc4 <error@@Base+0x514>
   12ccc:	mov	r5, #32
   12cd0:	mov	r7, r6
   12cd4:	b	12ce8 <error@@Base+0x438>
   12cd8:	str	r5, [r7, #12]
   12cdc:	ldr	r7, [r7, #4]
   12ce0:	cmp	r7, #0
   12ce4:	beq	12d38 <error@@Base+0x488>
   12ce8:	ldr	r4, [r7, #12]
   12cec:	mov	r0, r4
   12cf0:	bl	10a38 <utf8proc_get_property@plt>
   12cf4:	cmp	r4, #10
   12cf8:	ble	12d14 <error@@Base+0x464>
   12cfc:	sub	r1, r4, #11
   12d00:	cmp	r1, #3
   12d04:	bcc	12cd8 <error@@Base+0x428>
   12d08:	cmp	r4, #160	; 0xa0
   12d0c:	beq	12cd8 <error@@Base+0x428>
   12d10:	b	12d24 <error@@Base+0x474>
   12d14:	cmp	r4, #9
   12d18:	beq	12cd8 <error@@Base+0x428>
   12d1c:	cmp	r4, #10
   12d20:	beq	12cdc <error@@Base+0x42c>
   12d24:	ldrsh	r0, [r0]
   12d28:	sub	r0, r0, #23
   12d2c:	cmp	r0, #2
   12d30:	strls	r5, [r7, #12]
   12d34:	b	12cdc <error@@Base+0x42c>
   12d38:	mov	r4, #0
   12d3c:	b	12d6c <error@@Base+0x4bc>
   12d40:	tst	r4, #255	; 0xff
   12d44:	cmpne	r5, #0
   12d48:	bne	12d98 <error@@Base+0x4e8>
   12d4c:	ldr	r0, [sp, #16]
   12d50:	mov	r1, r6
   12d54:	bl	132cc <error@@Base+0xa1c>
   12d58:	mov	r0, r6
   12d5c:	bl	10a2c <free@plt>
   12d60:	cmp	r5, #0
   12d64:	mov	r6, r5
   12d68:	beq	12dc4 <error@@Base+0x514>
   12d6c:	ldr	r1, [r6, #12]
   12d70:	ldr	r5, [r6, #4]
   12d74:	cmp	r1, #32
   12d78:	beq	12d40 <error@@Base+0x490>
   12d7c:	subs	r0, r1, #10
   12d80:	movwne	r0, #1
   12d84:	tst	r4, #255	; 0xff
   12d88:	cmpeq	r1, #10
   12d8c:	beq	12d4c <error@@Base+0x49c>
   12d90:	mov	r4, r0
   12d94:	b	12d60 <error@@Base+0x4b0>
   12d98:	ldr	r1, [r5, #12]
   12d9c:	cmp	r1, #10
   12da0:	beq	12d4c <error@@Base+0x49c>
   12da4:	mov	r0, #1
   12da8:	cmp	r1, #32
   12dac:	bne	12d90 <error@@Base+0x4e0>
   12db0:	ldrb	r0, [r6, #8]
   12db4:	ldrb	r1, [r5, #8]
   12db8:	orr	r0, r1, r0
   12dbc:	strb	r0, [r5, #8]
   12dc0:	b	12d4c <error@@Base+0x49c>
   12dc4:	ldrb	r0, [r8, #10]
   12dc8:	cmp	r0, #0
   12dcc:	beq	12e00 <error@@Base+0x550>
   12dd0:	cmp	r9, #0
   12dd4:	ldr	r0, [sp, #16]
   12dd8:	addne	r0, r9, #4
   12ddc:	ldr	r4, [r0]
   12de0:	cmp	r4, #0
   12de4:	beq	12e00 <error@@Base+0x550>
   12de8:	ldr	r0, [r4, #12]
   12dec:	bl	10a80 <utf8proc_tolower@plt>
   12df0:	str	r0, [r4, #12]
   12df4:	ldr	r4, [r4, #4]
   12df8:	cmp	r4, #0
   12dfc:	bne	12de8 <error@@Base+0x538>
   12e00:	sub	sp, fp, #28
   12e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e08:	ldr	r8, [pc, #136]	; 12e98 <error@@Base+0x5e8>
   12e0c:	mov	r7, #0
   12e10:	add	r9, sp, #20
   12e14:	mov	r5, #1
   12e18:	add	r8, pc, r8
   12e1c:	mov	r0, r9
   12e20:	mov	r1, #99	; 0x63
   12e24:	mov	r2, r6
   12e28:	bl	10a44 <fgets@plt>
   12e2c:	cmp	r0, #0
   12e30:	beq	12ba8 <error@@Base+0x2f8>
   12e34:	mov	r0, r9
   12e38:	mov	r1, r8
   12e3c:	mov	r2, #56	; 0x38
   12e40:	bl	10af8 <bcmp@plt>
   12e44:	cmp	r0, #0
   12e48:	addeq	r7, r7, #1
   12e4c:	uxth	r0, r7
   12e50:	cmp	r0, #2
   12e54:	bcc	12e1c <error@@Base+0x56c>
   12e58:	b	12ba8 <error@@Base+0x2f8>
   12e5c:	ldr	r0, [pc, #68]	; 12ea8 <error@@Base+0x5f8>
   12e60:	add	r0, pc, r0
   12e64:	bl	128b0 <error@@Base>
   12e68:	bl	10b4c <utf8proc_errmsg@plt>
   12e6c:	bl	128b0 <error@@Base>
   12e70:	ldr	r0, [pc, #52]	; 12eac <error@@Base+0x5fc>
   12e74:	add	r0, pc, r0
   12e78:	bl	128b0 <error@@Base>
   12e7c:	ldr	r0, [pc, #28]	; 12ea0 <error@@Base+0x5f0>
   12e80:	ldr	r1, [pc, #28]	; 12ea4 <error@@Base+0x5f4>
   12e84:	add	r0, pc, r0
   12e88:	add	r1, pc, r1
   12e8c:	bl	12900 <error@@Base+0x50>
   12e90:	muleq	r0, r5, r2
   12e94:	ldrdeq	r1, [r0], -r3
   12e98:	andeq	r0, r0, pc, ror pc
   12e9c:	andeq	r2, r1, ip, ror r4
   12ea0:	muleq	r0, r7, lr
   12ea4:	andeq	r0, r0, r3, lsr #29
   12ea8:	andeq	r0, r0, pc, ror #30
   12eac:	andeq	r0, r0, r3, ror pc
   12eb0:	push	{fp, lr}
   12eb4:	mov	fp, sp
   12eb8:	bl	10a50 <utf8proc_encode_char@plt>
   12ebc:	cmp	r0, #0
   12ec0:	sxtbgt	r0, r0
   12ec4:	popgt	{fp, pc}
   12ec8:	ldr	r0, [pc, #4]	; 12ed4 <error@@Base+0x624>
   12ecc:	add	r0, pc, r0
   12ed0:	bl	128b0 <error@@Base>
   12ed4:	andeq	r0, r0, r9, ror #28
   12ed8:	push	{r4, r5, r6, r7, fp, lr}
   12edc:	add	fp, sp, #16
   12ee0:	mov	r6, r3
   12ee4:	mov	r4, r2
   12ee8:	mov	r5, r1
   12eec:	tst	r0, #255	; 0xff
   12ef0:	beq	12f38 <error@@Base+0x688>
   12ef4:	mov	r0, #94	; 0x5e
   12ef8:	mov	r1, r4
   12efc:	bl	10a50 <utf8proc_encode_char@plt>
   12f00:	cmp	r0, #0
   12f04:	ble	12fb0 <error@@Base+0x700>
   12f08:	sxtb	r7, r0
   12f0c:	cmp	r5, #10
   12f10:	bne	12f44 <error@@Base+0x694>
   12f14:	ldr	r0, [pc, #224]	; 12ffc <error@@Base+0x74c>
   12f18:	ldr	r1, [pc, #224]	; 13000 <error@@Base+0x750>
   12f1c:	tst	r6, #255	; 0xff
   12f20:	add	r0, pc, r0
   12f24:	add	r1, pc, r1
   12f28:	moveq	r1, r0
   12f2c:	add	r0, r4, r7
   12f30:	pop	{r4, r5, r6, r7, fp, lr}
   12f34:	b	10b40 <sprintf@plt>
   12f38:	mov	r7, #0
   12f3c:	cmp	r5, #10
   12f40:	beq	12f14 <error@@Base+0x664>
   12f44:	mov	r0, r5
   12f48:	bl	10a38 <utf8proc_get_property@plt>
   12f4c:	cmp	r5, #32
   12f50:	beq	12f64 <error@@Base+0x6b4>
   12f54:	ldrsh	r0, [r0]
   12f58:	sub	r1, r0, #1
   12f5c:	cmp	r1, #22
   12f60:	bcs	12fbc <error@@Base+0x70c>
   12f64:	mov	r0, r5
   12f68:	bl	10b04 <utf8proc_category@plt>
   12f6c:	sub	r0, r0, #6
   12f70:	cmp	r0, #2
   12f74:	bhi	12f90 <error@@Base+0x6e0>
   12f78:	add	r1, r4, r7
   12f7c:	movw	r0, #9676	; 0x25cc
   12f80:	bl	10a50 <utf8proc_encode_char@plt>
   12f84:	cmp	r0, #0
   12f88:	ble	12fb0 <error@@Base+0x700>
   12f8c:	sxtab	r7, r7, r0
   12f90:	add	r1, r4, r7
   12f94:	mov	r0, r5
   12f98:	bl	10a50 <utf8proc_encode_char@plt>
   12f9c:	cmp	r0, #0
   12fa0:	sxtabgt	r0, r7, r0
   12fa4:	movgt	r1, #0
   12fa8:	strbgt	r1, [r4, r0]
   12fac:	popgt	{r4, r5, r6, r7, fp, pc}
   12fb0:	ldr	r0, [pc, #64]	; 12ff8 <error@@Base+0x748>
   12fb4:	add	r0, pc, r0
   12fb8:	bl	128b0 <error@@Base>
   12fbc:	cmp	r0, #29
   12fc0:	beq	12f64 <error@@Base+0x6b4>
   12fc4:	add	r0, r4, r7
   12fc8:	cmp	r5, #255	; 0xff
   12fcc:	bhi	12fdc <error@@Base+0x72c>
   12fd0:	ldr	r1, [pc, #24]	; 12ff0 <error@@Base+0x740>
   12fd4:	add	r1, pc, r1
   12fd8:	b	12fe4 <error@@Base+0x734>
   12fdc:	ldr	r1, [pc, #16]	; 12ff4 <error@@Base+0x744>
   12fe0:	add	r1, pc, r1
   12fe4:	mov	r2, r5
   12fe8:	pop	{r4, r5, r6, r7, fp, lr}
   12fec:	b	10b40 <sprintf@plt>
   12ff0:	andeq	r0, r0, sp, ror sp
   12ff4:	andeq	r0, r0, r8, ror sp
   12ff8:	andeq	r0, r0, r1, lsl #27
   12ffc:	andeq	r0, r0, r6, lsr #12
   13000:	andeq	r0, r0, r8, lsr #28
   13004:	push	{r4, r5, r6, r7, fp, lr}
   13008:	add	fp, sp, #16
   1300c:	sub	sp, sp, #16
   13010:	mov	r6, r2
   13014:	mov	r2, r1
   13018:	ldr	r1, [pc, #180]	; 130d4 <error@@Base+0x824>
   1301c:	mov	r5, r0
   13020:	mov	r0, r2
   13024:	add	r1, pc, r1
   13028:	bl	12488 <getc@plt+0x190c>
   1302c:	mov	r4, r0
   13030:	cmp	r6, #0
   13034:	beq	13088 <error@@Base+0x7d8>
   13038:	ldr	r0, [pc, #152]	; 130d8 <error@@Base+0x828>
   1303c:	mov	r1, #55	; 0x37
   13040:	mov	r2, #1
   13044:	mov	r3, r4
   13048:	add	r0, pc, r0
   1304c:	bl	10a98 <fwrite@plt>
   13050:	ldr	r7, [pc, #132]	; 130dc <error@@Base+0x82c>
   13054:	mov	r1, #55	; 0x37
   13058:	mov	r2, #1
   1305c:	mov	r3, r4
   13060:	add	r7, pc, r7
   13064:	mov	r0, r7
   13068:	bl	10a98 <fwrite@plt>
   1306c:	mov	r0, r4
   13070:	blx	r6
   13074:	mov	r0, r7
   13078:	mov	r1, #55	; 0x37
   1307c:	mov	r2, #1
   13080:	mov	r3, r4
   13084:	bl	10a98 <fwrite@plt>
   13088:	ldr	r6, [r5]
   1308c:	cmp	r6, #0
   13090:	beq	130c4 <error@@Base+0x814>
   13094:	add	r5, sp, #7
   13098:	ldr	r1, [r6, #12]
   1309c:	ldrb	r0, [r6, #8]
   130a0:	mov	r2, r5
   130a4:	mov	r3, #0
   130a8:	bl	12ed8 <error@@Base+0x628>
   130ac:	mov	r0, r5
   130b0:	mov	r1, r4
   130b4:	bl	10b58 <fputs@plt>
   130b8:	ldr	r6, [r6, #4]
   130bc:	cmp	r6, #0
   130c0:	bne	13098 <error@@Base+0x7e8>
   130c4:	mov	r0, r4
   130c8:	bl	12510 <getc@plt+0x1994>
   130cc:	sub	sp, fp, #16
   130d0:	pop	{r4, r5, r6, r7, fp, pc}
   130d4:	andeq	r0, r0, r6, asr r8
   130d8:	andeq	r0, r0, r7, lsl sp
   130dc:	andeq	r0, r0, r7, lsr sp
   130e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130e4:	add	fp, sp, #28
   130e8:	sub	sp, sp, #4
   130ec:	mov	r9, #0
   130f0:	mov	sl, r0
   130f4:	str	r9, [sp]
   130f8:	ldrb	r0, [r1]
   130fc:	cmp	r0, #0
   13100:	beq	13160 <error@@Base+0x8b0>
   13104:	mov	r4, r1
   13108:	mov	r8, sp
   1310c:	mov	r7, #1
   13110:	mov	r0, r4
   13114:	mvn	r1, #0
   13118:	mov	r2, r8
   1311c:	bl	10ab0 <utf8proc_iterate@plt>
   13120:	cmp	r0, #1
   13124:	blt	13168 <error@@Base+0x8b8>
   13128:	ldr	r5, [sp]
   1312c:	mov	r6, r0
   13130:	mov	r0, #1
   13134:	mov	r1, #16
   13138:	bl	123e0 <getc@plt+0x1864>
   1313c:	str	r5, [r0, #12]
   13140:	mov	r1, r0
   13144:	strb	r9, [r0, #8]
   13148:	mov	r0, sl
   1314c:	bl	131d4 <error@@Base+0x924>
   13150:	ldrb	r0, [r4, r6]!
   13154:	cmp	r0, #0
   13158:	bne	13110 <error@@Base+0x860>
   1315c:	b	1316c <error@@Base+0x8bc>
   13160:	mov	r7, #1
   13164:	b	1316c <error@@Base+0x8bc>
   13168:	mov	r7, #0
   1316c:	mov	r0, r7
   13170:	sub	sp, fp, #28
   13174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13178:	vmov.i32	q8, #0	; 0x00000000
   1317c:	vst1.32	{d16-d17}, [r0]
   13180:	bx	lr
   13184:	push	{r4, r5, fp, lr}
   13188:	add	fp, sp, #8
   1318c:	mov	r4, r0
   13190:	ldr	r0, [r0]
   13194:	mov	r5, #0
   13198:	str	r5, [r1]
   1319c:	cmp	r0, #0
   131a0:	str	r0, [r1, #4]
   131a4:	str	r1, [r4]
   131a8:	addeq	r0, r4, #4
   131ac:	str	r1, [r0]
   131b0:	ldr	r0, [r4, #8]
   131b4:	cmp	r0, #0
   131b8:	beq	131c4 <error@@Base+0x914>
   131bc:	bl	10a2c <free@plt>
   131c0:	str	r5, [r4, #8]
   131c4:	ldr	r0, [r4, #12]
   131c8:	add	r0, r0, #1
   131cc:	str	r0, [r4, #12]
   131d0:	pop	{r4, r5, fp, pc}
   131d4:	push	{r4, r5, fp, lr}
   131d8:	add	fp, sp, #8
   131dc:	mov	r4, r0
   131e0:	ldr	r0, [r0, #4]
   131e4:	mov	r5, #0
   131e8:	mov	r2, r4
   131ec:	cmp	r0, #0
   131f0:	stm	r1, {r0, r5}
   131f4:	addne	r2, r0, #4
   131f8:	str	r1, [r2]
   131fc:	str	r1, [r4, #4]
   13200:	ldr	r0, [r4, #8]
   13204:	cmp	r0, #0
   13208:	beq	13214 <error@@Base+0x964>
   1320c:	bl	10a2c <free@plt>
   13210:	str	r5, [r4, #8]
   13214:	ldr	r0, [r4, #12]
   13218:	add	r0, r0, #1
   1321c:	str	r0, [r4, #12]
   13220:	pop	{r4, r5, fp, pc}
   13224:	push	{r4, sl, fp, lr}
   13228:	add	fp, sp, #8
   1322c:	mov	r4, r0
   13230:	ldr	r0, [r2]
   13234:	mov	r3, r4
   13238:	cmp	r0, #0
   1323c:	stm	r1, {r0, r2}
   13240:	addne	r3, r0, #4
   13244:	str	r1, [r3]
   13248:	str	r1, [r2]
   1324c:	ldr	r0, [r4, #8]
   13250:	cmp	r0, #0
   13254:	beq	13264 <error@@Base+0x9b4>
   13258:	bl	10a2c <free@plt>
   1325c:	mov	r0, #0
   13260:	str	r0, [r4, #8]
   13264:	ldr	r0, [r4, #12]
   13268:	add	r0, r0, #1
   1326c:	str	r0, [r4, #12]
   13270:	pop	{r4, sl, fp, pc}
   13274:	push	{r4, sl, fp, lr}
   13278:	add	fp, sp, #8
   1327c:	mov	r4, r0
   13280:	mov	r0, r1
   13284:	cmp	r1, #0
   13288:	ldr	r3, [r0, #4]!
   1328c:	moveq	r0, r4
   13290:	stm	r2, {r1, r3}
   13294:	str	r2, [r0]
   13298:	cmp	r3, #0
   1329c:	addeq	r3, r4, #4
   132a0:	str	r2, [r3]
   132a4:	ldr	r0, [r4, #8]
   132a8:	cmp	r0, #0
   132ac:	beq	132bc <error@@Base+0xa0c>
   132b0:	bl	10a2c <free@plt>
   132b4:	mov	r0, #0
   132b8:	str	r0, [r4, #8]
   132bc:	ldr	r0, [r4, #12]
   132c0:	add	r0, r0, #1
   132c4:	str	r0, [r4, #12]
   132c8:	pop	{r4, sl, fp, pc}
   132cc:	push	{r4, r5, fp, lr}
   132d0:	add	fp, sp, #8
   132d4:	mov	r4, r0
   132d8:	ldm	r1, {r0, r2}
   132dc:	cmp	r0, #0
   132e0:	beq	132f0 <error@@Base+0xa40>
   132e4:	str	r2, [r0, #4]
   132e8:	ldr	r2, [r1, #4]
   132ec:	b	132f4 <error@@Base+0xa44>
   132f0:	str	r2, [r4]
   132f4:	cmp	r2, #0
   132f8:	mov	r5, #0
   132fc:	addeq	r2, r4, #4
   13300:	str	r0, [r2]
   13304:	str	r5, [r1]
   13308:	str	r5, [r1, #4]
   1330c:	ldr	r0, [r4, #8]
   13310:	cmp	r0, #0
   13314:	beq	13320 <error@@Base+0xa70>
   13318:	bl	10a2c <free@plt>
   1331c:	str	r5, [r4, #8]
   13320:	ldr	r0, [r4, #12]
   13324:	sub	r0, r0, #1
   13328:	str	r0, [r4, #12]
   1332c:	pop	{r4, r5, fp, pc}
   13330:	push	{r4, sl, fp, lr}
   13334:	add	fp, sp, #8
   13338:	mov	r4, r0
   1333c:	ldr	r0, [r0, #8]
   13340:	cmp	r0, #0
   13344:	beq	1334c <error@@Base+0xa9c>
   13348:	pop	{r4, sl, fp, pc}
   1334c:	ldr	r0, [r4, #12]
   13350:	cmp	r0, #0
   13354:	beq	13348 <error@@Base+0xa98>
   13358:	mov	r1, #4
   1335c:	bl	123e0 <getc@plt+0x1864>
   13360:	str	r0, [r4, #8]
   13364:	ldr	r1, [r4]
   13368:	cmp	r1, #0
   1336c:	beq	13348 <error@@Base+0xa98>
   13370:	str	r1, [r0]
   13374:	ldr	r0, [r1, #4]
   13378:	cmp	r0, #0
   1337c:	popeq	{r4, sl, fp, pc}
   13380:	mov	r1, #4
   13384:	ldr	r2, [r4, #8]
   13388:	str	r0, [r2, r1]
   1338c:	add	r1, r1, #4
   13390:	ldr	r0, [r0, #4]
   13394:	cmp	r0, #0
   13398:	bne	13384 <error@@Base+0xad4>
   1339c:	b	13348 <error@@Base+0xa98>
   133a0:	push	{r4, r5, r6, r7, fp, lr}
   133a4:	add	fp, sp, #16
   133a8:	ldr	r6, [r0]
   133ac:	cmp	r6, #0
   133b0:	beq	1342c <error@@Base+0xb7c>
   133b4:	mov	r4, r1
   133b8:	mov	r5, r0
   133bc:	mov	r7, #0
   133c0:	b	133e4 <error@@Base+0xb34>
   133c4:	ldr	r0, [r5, #12]
   133c8:	sub	r0, r0, #1
   133cc:	str	r0, [r5, #12]
   133d0:	mov	r0, r6
   133d4:	blx	r4
   133d8:	ldr	r6, [r5]
   133dc:	cmp	r6, #0
   133e0:	beq	1342c <error@@Base+0xb7c>
   133e4:	ldm	r6, {r0, r1}
   133e8:	cmp	r0, #0
   133ec:	beq	133fc <error@@Base+0xb4c>
   133f0:	str	r1, [r0, #4]
   133f4:	ldr	r1, [r6, #4]
   133f8:	b	13400 <error@@Base+0xb50>
   133fc:	str	r1, [r5]
   13400:	cmp	r1, #0
   13404:	addeq	r1, r5, #4
   13408:	str	r0, [r1]
   1340c:	str	r7, [r6]
   13410:	str	r7, [r6, #4]
   13414:	ldr	r0, [r5, #8]
   13418:	cmp	r0, #0
   1341c:	beq	133c4 <error@@Base+0xb14>
   13420:	bl	10a2c <free@plt>
   13424:	str	r7, [r5, #8]
   13428:	b	133c4 <error@@Base+0xb14>
   1342c:	pop	{r4, r5, r6, r7, fp, pc}
   13430:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13434:	mov	r7, r0
   13438:	ldr	r6, [pc, #72]	; 13488 <error@@Base+0xbd8>
   1343c:	ldr	r5, [pc, #72]	; 1348c <error@@Base+0xbdc>
   13440:	add	r6, pc, r6
   13444:	add	r5, pc, r5
   13448:	sub	r6, r6, r5
   1344c:	mov	r8, r1
   13450:	mov	r9, r2
   13454:	bl	109e8 <calloc@plt-0x20>
   13458:	asrs	r6, r6, #2
   1345c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13460:	mov	r4, #0
   13464:	add	r4, r4, #1
   13468:	ldr	r3, [r5], #4
   1346c:	mov	r2, r9
   13470:	mov	r1, r8
   13474:	mov	r0, r7
   13478:	blx	r3
   1347c:	cmp	r6, r4
   13480:	bne	13464 <error@@Base+0xbb4>
   13484:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13488:	andeq	r1, r1, r0, ror r6
   1348c:	andeq	r1, r1, r8, ror #12
   13490:	bx	lr

Disassembly of section .fini:

00013494 <.fini>:
   13494:	push	{r3, lr}
   13498:	pop	{r3, pc}
