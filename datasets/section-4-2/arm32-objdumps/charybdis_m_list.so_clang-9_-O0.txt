
../repos/charybdis/modules/.libs/m_list.so:     file format elf32-littlearm


Disassembly of section .init:

00000a7c <_init>:
 a7c:	push	{r3, lr}
 a80:	bl	c04 <call_weak_fn>
 a84:	pop	{r3, pc}

Disassembly of section .plt:

00000a88 <.plt>:
 a88:	push	{lr}		; (str lr, [sp, #-4]!)
 a8c:	ldr	lr, [pc, #4]	; a98 <.plt+0x10>
 a90:	add	lr, pc, lr
 a94:	ldr	pc, [lr, #8]!
 a98:	.word	0x00012568

00000a9c <calloc@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1384]!	; 0x568

00000aa8 <delete_isupport@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1376]!	; 0x560

00000ab4 <rb_current_time@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1368]!	; 0x558

00000ac0 <rb_event_add@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1360]!	; 0x550

00000acc <__cxa_finalize@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1352]!	; 0x548

00000ad8 <sendto_one@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1344]!	; 0x540

00000ae4 <rb_event_delete@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1336]!	; 0x538

00000af0 <free@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1328]!	; 0x530

00000afc <rb_radixtree_foreach_start_from@plt>:
 afc:	add	ip, pc, #0, 12
 b00:	add	ip, ip, #73728	; 0x12000
 b04:	ldr	pc, [ip, #1320]!	; 0x528

00000b08 <rb_outofmemory@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #73728	; 0x12000
 b10:	ldr	pc, [ip, #1312]!	; 0x520

00000b14 <rb_radixtree_foreach_next@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #73728	; 0x12000
 b1c:	ldr	pc, [ip, #1304]!	; 0x518

00000b20 <find_channel@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #73728	; 0x12000
 b28:	ldr	pc, [ip, #1296]!	; 0x510

00000b2c <rb_free_rb_dlink_node@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #73728	; 0x12000
 b34:	ldr	pc, [ip, #1288]!	; 0x508

00000b38 <strcpy@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1280]!	; 0x500

00000b44 <find_channel_membership@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1272]!	; 0x4f8

00000b50 <malloc@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1264]!	; 0x4f0

00000b5c <__gmon_start__@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1256]!	; 0x4e8

00000b68 <rb_make_rb_dlink_node@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #1248]!	; 0x4e0

00000b74 <get_sendq@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #1240]!	; 0x4d8

00000b80 <sendto_one_numeric@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #1232]!	; 0x4d0

00000b8c <strlen@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #1224]!	; 0x4c8

00000b98 <strchr@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #1216]!	; 0x4c0

00000ba4 <report_operspy@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #1208]!	; 0x4b8

00000bb0 <rb_radixtree_foreach_cur@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #1200]!	; 0x4b0

00000bbc <sendto_one_notice@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #1192]!	; 0x4a8

00000bc8 <atoi@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #1184]!	; 0x4a0

00000bd4 <add_isupport@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #1176]!	; 0x498

00000be0 <rb_strlcpy@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #1168]!	; 0x490

00000bec <privilegeset_in_set@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #1160]!	; 0x488

00000bf8 <__assert_fail@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #73728	; 0x12000
 c00:	ldr	pc, [ip, #1152]!	; 0x480

Disassembly of section .text:

00000c04 <call_weak_fn>:
     c04:	ldr	r3, [pc, #20]	; c20 <call_weak_fn+0x1c>
     c08:	ldr	r2, [pc, #20]	; c24 <call_weak_fn+0x20>
     c0c:	add	r3, pc, r3
     c10:	ldr	r2, [r3, r2]
     c14:	cmp	r2, #0
     c18:	bxeq	lr
     c1c:	b	b5c <__gmon_start__@plt>
     c20:	.word	0x000123ec
     c24:	.word	0x0000008c

00000c28 <deregister_tm_clones>:
     c28:	ldr	r0, [pc, #44]	; c5c <deregister_tm_clones+0x34>
     c2c:	ldr	r3, [pc, #44]	; c60 <deregister_tm_clones+0x38>
     c30:	add	r0, pc, r0
     c34:	add	r3, pc, r3
     c38:	cmp	r3, r0
     c3c:	ldr	r3, [pc, #32]	; c64 <deregister_tm_clones+0x3c>
     c40:	add	r3, pc, r3
     c44:	bxeq	lr
     c48:	ldr	r2, [pc, #24]	; c68 <deregister_tm_clones+0x40>
     c4c:	ldr	r3, [r3, r2]
     c50:	cmp	r3, #0
     c54:	bxeq	lr
     c58:	bx	r3
     c5c:	.word	0x00012504
     c60:	.word	0x00012500
     c64:	.word	0x000123b8
     c68:	.word	0x00000088

00000c6c <register_tm_clones>:
     c6c:	ldr	r0, [pc, #56]	; cac <register_tm_clones+0x40>
     c70:	ldr	r3, [pc, #56]	; cb0 <register_tm_clones+0x44>
     c74:	add	r0, pc, r0
     c78:	add	r3, pc, r3
     c7c:	sub	r1, r3, r0
     c80:	ldr	r3, [pc, #44]	; cb4 <register_tm_clones+0x48>
     c84:	asr	r1, r1, #2
     c88:	add	r3, pc, r3
     c8c:	add	r1, r1, r1, lsr #31
     c90:	asrs	r1, r1, #1
     c94:	bxeq	lr
     c98:	ldr	r2, [pc, #24]	; cb8 <register_tm_clones+0x4c>
     c9c:	ldr	r3, [r3, r2]
     ca0:	cmp	r3, #0
     ca4:	bxeq	lr
     ca8:	bx	r3
     cac:	.word	0x000124c0
     cb0:	.word	0x000124bc
     cb4:	.word	0x00012370
     cb8:	.word	0x000000a0

00000cbc <__do_global_dtors_aux>:
     cbc:	ldr	r3, [pc, #76]	; d10 <__do_global_dtors_aux+0x54>
     cc0:	ldr	r2, [pc, #76]	; d14 <__do_global_dtors_aux+0x58>
     cc4:	add	r3, pc, r3
     cc8:	add	r2, pc, r2
     ccc:	ldrb	r3, [r3]
     cd0:	cmp	r3, #0
     cd4:	bxne	lr
     cd8:	ldr	r3, [pc, #56]	; d18 <__do_global_dtors_aux+0x5c>
     cdc:	push	{r4, lr}
     ce0:	ldr	r3, [r2, r3]
     ce4:	cmp	r3, #0
     ce8:	beq	cf8 <__do_global_dtors_aux+0x3c>
     cec:	ldr	r3, [pc, #40]	; d1c <__do_global_dtors_aux+0x60>
     cf0:	ldr	r0, [pc, r3]
     cf4:	bl	acc <__cxa_finalize@plt>
     cf8:	bl	c28 <deregister_tm_clones>
     cfc:	ldr	r3, [pc, #28]	; d20 <__do_global_dtors_aux+0x64>
     d00:	mov	r2, #1
     d04:	add	r3, pc, r3
     d08:	strb	r2, [r3]
     d0c:	pop	{r4, pc}
     d10:	.word	0x00012470
     d14:	.word	0x00012330
     d18:	.word	0x00000084
     d1c:	.word	0x000123b4
     d20:	.word	0x00012430

00000d24 <frame_dummy>:
     d24:	b	c6c <register_tm_clones>

00000d28 <m_list>:
     d28:	push	{fp, lr}
     d2c:	mov	fp, sp
     d30:	sub	sp, sp, #32
     d34:	ldr	ip, [fp, #8]
     d38:	str	r0, [fp, #-4]
     d3c:	str	r1, [fp, #-8]
     d40:	str	r2, [fp, #-12]
     d44:	str	r3, [sp, #16]
     d48:	ldr	r0, [fp, #-12]
     d4c:	ldr	r0, [r0, #432]	; 0x1b0
     d50:	ldr	r0, [r0, #428]	; 0x1ac
     d54:	movw	r1, #0
     d58:	cmp	r0, r1
     d5c:	beq	d7c <m_list+0x54>
     d60:	ldr	r0, [pc, #348]	; ec4 <m_list+0x19c>
     d64:	add	r1, pc, r0
     d68:	ldr	r0, [fp, #-12]
     d6c:	bl	bbc <sendto_one_notice@plt>
     d70:	ldr	r0, [fp, #-12]
     d74:	bl	1b4c <safelist_client_release>
     d78:	b	e98 <m_list+0x170>
     d7c:	ldr	r0, [sp, #16]
     d80:	cmp	r0, #2
     d84:	blt	dd0 <m_list+0xa8>
     d88:	ldr	r0, [fp, #8]
     d8c:	ldr	r0, [r0, #4]
     d90:	movw	r1, #0
     d94:	cmp	r0, r1
     d98:	beq	dd0 <m_list+0xa8>
     d9c:	ldr	r0, [pc, #252]	; ea0 <m_list+0x178>
     da0:	ldr	r0, [pc, r0]
     da4:	ldr	r1, [fp, #8]
     da8:	ldr	r1, [r1, #4]
     dac:	ldrb	r1, [r1]
     db0:	mov	r2, r1
     db4:	ldr	r3, [pc, #268]	; ec8 <m_list+0x1a0>
     db8:	ldr	r3, [pc, r3]
     dbc:	add	r1, r3, r1, lsl #2
     dc0:	ldr	r1, [r1]
     dc4:	and	r1, r1, #512	; 0x200
     dc8:	cmp	r1, #0
     dcc:	bne	e7c <m_list+0x154>
     dd0:	ldr	r0, [pc, #204]	; ea4 <m_list+0x17c>
     dd4:	ldr	r0, [pc, r0]
     dd8:	ldr	r1, [pc, #200]	; ea8 <m_list+0x180>
     ddc:	add	r1, pc, r1
     de0:	ldr	r1, [r1]
     de4:	ldr	r0, [r0, #184]	; 0xb8
     de8:	add	r0, r1, r0
     dec:	str	r0, [sp, #12]
     df0:	bl	ab4 <rb_current_time@plt>
     df4:	ldr	r1, [sp, #12]
     df8:	cmp	r1, r0
     dfc:	ble	e68 <m_list+0x140>
     e00:	ldr	r0, [pc, #176]	; eb8 <m_list+0x190>
     e04:	add	r1, pc, r0
     e08:	ldr	r0, [pc, #172]	; ebc <m_list+0x194>
     e0c:	ldr	r0, [pc, r0]
     e10:	add	r2, r0, #88	; 0x58
     e14:	ldr	r0, [pc, #164]	; ec0 <m_list+0x198>
     e18:	add	r0, pc, r0
     e1c:	ldr	r3, [fp, #-12]
     e20:	ldr	ip, [fp, #-12]
     e24:	add	ip, ip, #88	; 0x58
     e28:	str	r0, [sp, #8]
     e2c:	mov	r0, r3
     e30:	mov	r3, ip
     e34:	ldr	ip, [sp, #8]
     e38:	str	ip, [sp]
     e3c:	bl	ad8 <sendto_one@plt>
     e40:	ldr	r0, [pc, #104]	; eb0 <m_list+0x188>
     e44:	add	r1, pc, r0
     e48:	ldr	r0, [pc, #100]	; eb4 <m_list+0x18c>
     e4c:	ldr	r0, [pc, r0]
     e50:	add	r2, r0, #88	; 0x58
     e54:	ldr	r0, [fp, #-12]
     e58:	ldr	r3, [fp, #-12]
     e5c:	add	r3, r3, #88	; 0x58
     e60:	bl	ad8 <sendto_one@plt>
     e64:	b	e98 <m_list+0x170>
     e68:	bl	ab4 <rb_current_time@plt>
     e6c:	ldr	r1, [pc, #56]	; eac <m_list+0x184>
     e70:	add	r1, pc, r1
     e74:	str	r0, [r1]
     e78:	b	e7c <m_list+0x154>
     e7c:	ldr	r0, [fp, #-4]
     e80:	ldr	r1, [fp, #-8]
     e84:	ldr	r2, [fp, #-12]
     e88:	ldr	r3, [sp, #16]
     e8c:	ldr	ip, [fp, #8]
     e90:	str	ip, [sp]
     e94:	bl	ecc <mo_list>
     e98:	mov	sp, fp
     e9c:	pop	{fp, pc}
     ea0:	.word	0x000122e8
     ea4:	.word	0x000122cc
     ea8:	.word	0x0001236c
     eac:	.word	0x000122d8
     eb0:	.word	0x000018e8
     eb4:	.word	0x00012250
     eb8:	.word	0x000019f2
     ebc:	.word	0x00012290
     ec0:	.word	0x00001928
     ec4:	.word	0x00001a83
     ec8:	.word	0x000122d0

00000ecc <mo_list>:
     ecc:	push	{r4, r5, fp, lr}
     ed0:	add	fp, sp, #8
     ed4:	sub	sp, sp, #64	; 0x40
     ed8:	ldr	ip, [fp, #8]
     edc:	str	r0, [fp, #-12]
     ee0:	str	r1, [fp, #-16]
     ee4:	str	r2, [fp, #-20]	; 0xffffffec
     ee8:	str	r3, [fp, #-24]	; 0xffffffe8
     eec:	movw	r0, #0
     ef0:	str	r0, [fp, #-36]	; 0xffffffdc
     ef4:	str	r0, [fp, #-44]	; 0xffffffd4
     ef8:	ldr	r1, [fp, #-20]	; 0xffffffec
     efc:	ldr	r1, [r1, #432]	; 0x1b0
     f00:	ldr	r1, [r1, #428]	; 0x1ac
     f04:	cmp	r1, r0
     f08:	beq	f28 <mo_list+0x5c>
     f0c:	ldr	r0, [pc, #1572]	; 1538 <mo_list+0x66c>
     f10:	add	r1, pc, r0
     f14:	ldr	r0, [fp, #-20]	; 0xffffffec
     f18:	bl	bbc <sendto_one_notice@plt>
     f1c:	ldr	r0, [fp, #-20]	; 0xffffffec
     f20:	bl	1b4c <safelist_client_release>
     f24:	b	1504 <mo_list+0x638>
     f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
     f2c:	cmp	r0, #1
     f30:	ble	f78 <mo_list+0xac>
     f34:	ldr	r0, [fp, #8]
     f38:	ldr	r0, [r0, #4]
     f3c:	bl	b8c <strlen@plt>
     f40:	add	r0, r0, #8
     f44:	bic	r0, r0, #7
     f48:	mov	r1, sp
     f4c:	sub	r0, r1, r0
     f50:	mov	sp, r0
     f54:	str	r0, [fp, #-48]	; 0xffffffd0
     f58:	ldr	r0, [fp, #-48]	; 0xffffffd0
     f5c:	ldr	r1, [fp, #8]
     f60:	ldr	r1, [r1, #4]
     f64:	bl	b38 <strcpy@plt>
     f68:	ldr	r1, [fp, #-48]	; 0xffffffd0
     f6c:	str	r1, [fp, #-52]	; 0xffffffcc
     f70:	ldr	r1, [fp, #-52]	; 0xffffffcc
     f74:	str	r1, [fp, #-36]	; 0xffffffdc
     f78:	ldr	r0, [fp, #-36]	; 0xffffffdc
     f7c:	movw	r1, #0
     f80:	cmp	r0, r1
     f84:	beq	100c <mo_list+0x140>
     f88:	ldr	r0, [fp, #-36]	; 0xffffffdc
     f8c:	ldrb	r0, [r0]
     f90:	cmp	r0, #33	; 0x21
     f94:	bne	100c <mo_list+0x140>
     f98:	ldr	r0, [fp, #-20]	; 0xffffffec
     f9c:	ldr	r0, [r0, #24]
     fa0:	movw	r1, #0
     fa4:	cmp	r0, r1
     fa8:	beq	100c <mo_list+0x140>
     fac:	ldr	r0, [fp, #-20]	; 0xffffffec
     fb0:	ldr	r0, [r0, #24]
     fb4:	ldr	r0, [r0, #36]	; 0x24
     fb8:	movw	r1, #0
     fbc:	cmp	r0, r1
     fc0:	beq	100c <mo_list+0x140>
     fc4:	ldr	r0, [pc, #1344]	; 150c <mo_list+0x640>
     fc8:	add	r1, pc, r0
     fcc:	ldr	r0, [fp, #-20]	; 0xffffffec
     fd0:	ldr	r0, [r0, #24]
     fd4:	ldr	r0, [r0, #36]	; 0x24
     fd8:	bl	bec <privilegeset_in_set@plt>
     fdc:	cmp	r0, #0
     fe0:	beq	100c <mo_list+0x140>
     fe4:	ldr	r0, [pc, #1316]	; 1510 <mo_list+0x644>
     fe8:	add	r1, pc, r0
     fec:	ldr	r0, [fp, #-36]	; 0xffffffdc
     ff0:	add	r0, r0, #1
     ff4:	str	r0, [fp, #-36]	; 0xffffffdc
     ff8:	ldr	r0, [fp, #-20]	; 0xffffffec
     ffc:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1000:	bl	ba4 <report_operspy@plt>
    1004:	movw	r0, #1
    1008:	str	r0, [fp, #-44]	; 0xffffffd4
    100c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1010:	movw	r1, #0
    1014:	cmp	r0, r1
    1018:	beq	1070 <mo_list+0x1a4>
    101c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1020:	movw	r1, #0
    1024:	cmp	r0, r1
    1028:	beq	1070 <mo_list+0x1a4>
    102c:	ldr	r0, [pc, #1248]	; 1514 <mo_list+0x648>
    1030:	ldr	r0, [pc, r0]
    1034:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1038:	ldrb	r1, [r1]
    103c:	mov	r2, r1
    1040:	ldr	r3, [pc, #1268]	; 153c <mo_list+0x670>
    1044:	ldr	r3, [pc, r3]
    1048:	add	r1, r3, r1, lsl #2
    104c:	ldr	r1, [r1]
    1050:	and	r1, r1, #512	; 0x200
    1054:	cmp	r1, #0
    1058:	beq	1070 <mo_list+0x1a4>
    105c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1060:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1064:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1068:	bl	2230 <safelist_channel_named>
    106c:	b	1504 <mo_list+0x638>
    1070:	movw	r0, #32
    1074:	bl	2480 <rb_malloc>
    1078:	ldr	r1, [pc, #1176]	; 1518 <mo_list+0x64c>
    107c:	ldr	r2, [pc, #1176]	; 151c <mo_list+0x650>
    1080:	ldr	r2, [pc, r2]
    1084:	str	r0, [fp, #-28]	; 0xffffffe4
    1088:	ldr	r0, [r2, #84]	; 0x54
    108c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1090:	str	r0, [r2, #4]
    1094:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1098:	str	r1, [r0, #8]
    109c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    10a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    10a4:	str	r0, [r1, #28]
    10a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10ac:	movw	r1, #0
    10b0:	str	r1, [r0, #24]
    10b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10b8:	str	r1, [r0, #16]
    10bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10c0:	str	r1, [r0, #20]
    10c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10c8:	str	r1, [r0, #12]
    10cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    10d0:	cmp	r0, r1
    10d4:	beq	14f8 <mo_list+0x62c>
    10d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    10dc:	movw	r1, #0
    10e0:	cmp	r0, r1
    10e4:	beq	14f8 <mo_list+0x62c>
    10e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    10ec:	ldrb	r0, [r0]
    10f0:	cmp	r0, #0
    10f4:	beq	14f8 <mo_list+0x62c>
    10f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    10fc:	movw	r1, #0
    1100:	str	r1, [r0, #4]
    1104:	str	r1, [fp, #-40]	; 0xffffffd8
    1108:	ldr	r0, [fp, #-40]	; 0xffffffd8
    110c:	cmp	r0, #7
    1110:	bge	14f4 <mo_list+0x628>
    1114:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1118:	movw	r1, #44	; 0x2c
    111c:	bl	b98 <strchr@plt>
    1120:	str	r0, [fp, #-32]	; 0xffffffe0
    1124:	movw	r1, #0
    1128:	cmp	r0, r1
    112c:	beq	1144 <mo_list+0x278>
    1130:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1134:	add	r1, r0, #1
    1138:	str	r1, [fp, #-32]	; 0xffffffe0
    113c:	movw	r1, #0
    1140:	strb	r1, [r0]
    1144:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1148:	ldrb	r0, [r0]
    114c:	cmp	r0, #60	; 0x3c
    1150:	bne	11dc <mo_list+0x310>
    1154:	ldr	r0, [pc, #984]	; 1534 <mo_list+0x668>
    1158:	ldr	r0, [pc, r0]
    115c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1160:	add	r1, r1, #1
    1164:	str	r1, [fp, #-36]	; 0xffffffdc
    1168:	ldr	r1, [fp, #-36]	; 0xffffffdc
    116c:	ldrb	r1, [r1]
    1170:	mov	r2, r1
    1174:	ldr	r3, [pc, #964]	; 1540 <mo_list+0x674>
    1178:	ldr	r3, [pc, r3]
    117c:	add	r1, r3, r1, lsl #2
    1180:	ldr	r1, [r1]
    1184:	and	r1, r1, #16
    1188:	cmp	r1, #0
    118c:	beq	11d8 <mo_list+0x30c>
    1190:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1194:	bl	bc8 <atoi@plt>
    1198:	ldr	r1, [fp, #-28]	; 0xffffffe4
    119c:	str	r0, [r1, #8]
    11a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11a4:	ldr	r0, [r0, #8]
    11a8:	cmp	r0, #0
    11ac:	bne	11c0 <mo_list+0x2f4>
    11b0:	ldr	r0, [pc, #864]	; 1518 <mo_list+0x64c>
    11b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    11b8:	str	r0, [r1, #8]
    11bc:	b	11d4 <mo_list+0x308>
    11c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    11c4:	ldr	r1, [r0, #8]
    11c8:	mvn	r2, #0
    11cc:	add	r1, r1, r2
    11d0:	str	r1, [r0, #8]
    11d4:	b	11d8 <mo_list+0x30c>
    11d8:	b	14b4 <mo_list+0x5e8>
    11dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
    11e0:	ldrb	r0, [r0]
    11e4:	cmp	r0, #62	; 0x3e
    11e8:	bne	1250 <mo_list+0x384>
    11ec:	ldr	r0, [pc, #828]	; 1530 <mo_list+0x664>
    11f0:	ldr	r0, [pc, r0]
    11f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
    11f8:	add	r1, r1, #1
    11fc:	str	r1, [fp, #-36]	; 0xffffffdc
    1200:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1204:	ldrb	r1, [r1]
    1208:	mov	r2, r1
    120c:	ldr	r3, [pc, #816]	; 1544 <mo_list+0x678>
    1210:	ldr	r3, [pc, r3]
    1214:	add	r1, r3, r1, lsl #2
    1218:	ldr	r1, [r1]
    121c:	and	r1, r1, #16
    1220:	cmp	r1, #0
    1224:	beq	1240 <mo_list+0x374>
    1228:	ldr	r0, [fp, #-36]	; 0xffffffdc
    122c:	bl	bc8 <atoi@plt>
    1230:	add	r0, r0, #1
    1234:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1238:	str	r0, [r1, #4]
    123c:	b	124c <mo_list+0x380>
    1240:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1244:	movw	r1, #0
    1248:	str	r1, [r0, #4]
    124c:	b	14b0 <mo_list+0x5e4>
    1250:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1254:	ldrb	r0, [r0]
    1258:	cmp	r0, #67	; 0x43
    125c:	beq	1270 <mo_list+0x3a4>
    1260:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1264:	ldrb	r0, [r0]
    1268:	cmp	r0, #99	; 0x63
    126c:	bne	137c <mo_list+0x4b0>
    1270:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1274:	add	r0, r0, #1
    1278:	str	r0, [fp, #-36]	; 0xffffffdc
    127c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1280:	ldrb	r0, [r0]
    1284:	cmp	r0, #62	; 0x3e
    1288:	bne	12f8 <mo_list+0x42c>
    128c:	ldr	r0, [pc, #664]	; 152c <mo_list+0x660>
    1290:	ldr	r0, [pc, r0]
    1294:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1298:	add	r1, r1, #1
    129c:	str	r1, [fp, #-36]	; 0xffffffdc
    12a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    12a4:	ldrb	r1, [r1]
    12a8:	mov	r2, r1
    12ac:	ldr	r3, [pc, #660]	; 1548 <mo_list+0x67c>
    12b0:	ldr	r3, [pc, r3]
    12b4:	add	r1, r3, r1, lsl #2
    12b8:	ldr	r1, [r1]
    12bc:	and	r1, r1, #16
    12c0:	cmp	r1, #0
    12c4:	beq	12f4 <mo_list+0x428>
    12c8:	bl	ab4 <rb_current_time@plt>
    12cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    12d0:	str	r0, [fp, #-56]	; 0xffffffc8
    12d4:	mov	r0, r1
    12d8:	bl	bc8 <atoi@plt>
    12dc:	movw	r1, #60	; 0x3c
    12e0:	mul	r0, r0, r1
    12e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
    12e8:	sub	r0, r1, r0
    12ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    12f0:	str	r0, [r1, #16]
    12f4:	b	1378 <mo_list+0x4ac>
    12f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    12fc:	ldrb	r0, [r0]
    1300:	cmp	r0, #60	; 0x3c
    1304:	bne	1374 <mo_list+0x4a8>
    1308:	ldr	r0, [pc, #536]	; 1528 <mo_list+0x65c>
    130c:	ldr	r0, [pc, r0]
    1310:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1314:	add	r1, r1, #1
    1318:	str	r1, [fp, #-36]	; 0xffffffdc
    131c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1320:	ldrb	r1, [r1]
    1324:	mov	r2, r1
    1328:	ldr	r3, [pc, #540]	; 154c <mo_list+0x680>
    132c:	ldr	r3, [pc, r3]
    1330:	add	r1, r3, r1, lsl #2
    1334:	ldr	r1, [r1]
    1338:	and	r1, r1, #16
    133c:	cmp	r1, #0
    1340:	beq	1370 <mo_list+0x4a4>
    1344:	bl	ab4 <rb_current_time@plt>
    1348:	ldr	r1, [fp, #-36]	; 0xffffffdc
    134c:	str	r0, [fp, #-60]	; 0xffffffc4
    1350:	mov	r0, r1
    1354:	bl	bc8 <atoi@plt>
    1358:	movw	r1, #60	; 0x3c
    135c:	mul	r0, r0, r1
    1360:	ldr	r1, [fp, #-60]	; 0xffffffc4
    1364:	sub	r0, r1, r0
    1368:	ldr	r1, [fp, #-28]	; 0xffffffe4
    136c:	str	r0, [r1, #12]
    1370:	b	1374 <mo_list+0x4a8>
    1374:	b	1378 <mo_list+0x4ac>
    1378:	b	14ac <mo_list+0x5e0>
    137c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1380:	ldrb	r0, [r0]
    1384:	cmp	r0, #84	; 0x54
    1388:	beq	139c <mo_list+0x4d0>
    138c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1390:	ldrb	r0, [r0]
    1394:	cmp	r0, #116	; 0x74
    1398:	bne	14a8 <mo_list+0x5dc>
    139c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    13a0:	add	r0, r0, #1
    13a4:	str	r0, [fp, #-36]	; 0xffffffdc
    13a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    13ac:	ldrb	r0, [r0]
    13b0:	cmp	r0, #62	; 0x3e
    13b4:	bne	1424 <mo_list+0x558>
    13b8:	ldr	r0, [pc, #356]	; 1524 <mo_list+0x658>
    13bc:	ldr	r0, [pc, r0]
    13c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
    13c4:	add	r1, r1, #1
    13c8:	str	r1, [fp, #-36]	; 0xffffffdc
    13cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
    13d0:	ldrb	r1, [r1]
    13d4:	mov	r2, r1
    13d8:	ldr	r3, [pc, #368]	; 1550 <mo_list+0x684>
    13dc:	ldr	r3, [pc, r3]
    13e0:	add	r1, r3, r1, lsl #2
    13e4:	ldr	r1, [r1]
    13e8:	and	r1, r1, #16
    13ec:	cmp	r1, #0
    13f0:	beq	1420 <mo_list+0x554>
    13f4:	bl	ab4 <rb_current_time@plt>
    13f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
    13fc:	str	r0, [fp, #-64]	; 0xffffffc0
    1400:	mov	r0, r1
    1404:	bl	bc8 <atoi@plt>
    1408:	movw	r1, #60	; 0x3c
    140c:	mul	r0, r0, r1
    1410:	ldr	r1, [fp, #-64]	; 0xffffffc0
    1414:	sub	r0, r1, r0
    1418:	ldr	r1, [fp, #-28]	; 0xffffffe4
    141c:	str	r0, [r1, #24]
    1420:	b	14a4 <mo_list+0x5d8>
    1424:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1428:	ldrb	r0, [r0]
    142c:	cmp	r0, #60	; 0x3c
    1430:	bne	14a0 <mo_list+0x5d4>
    1434:	ldr	r0, [pc, #228]	; 1520 <mo_list+0x654>
    1438:	ldr	r0, [pc, r0]
    143c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1440:	add	r1, r1, #1
    1444:	str	r1, [fp, #-36]	; 0xffffffdc
    1448:	ldr	r1, [fp, #-36]	; 0xffffffdc
    144c:	ldrb	r1, [r1]
    1450:	mov	r2, r1
    1454:	ldr	r3, [pc, #248]	; 1554 <mo_list+0x688>
    1458:	ldr	r3, [pc, r3]
    145c:	add	r1, r3, r1, lsl #2
    1460:	ldr	r1, [r1]
    1464:	and	r1, r1, #16
    1468:	cmp	r1, #0
    146c:	beq	149c <mo_list+0x5d0>
    1470:	bl	ab4 <rb_current_time@plt>
    1474:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1478:	str	r0, [fp, #-68]	; 0xffffffbc
    147c:	mov	r0, r1
    1480:	bl	bc8 <atoi@plt>
    1484:	movw	r1, #60	; 0x3c
    1488:	mul	r0, r0, r1
    148c:	ldr	r1, [fp, #-68]	; 0xffffffbc
    1490:	sub	r0, r1, r0
    1494:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1498:	str	r0, [r1, #20]
    149c:	b	14a0 <mo_list+0x5d4>
    14a0:	b	14a4 <mo_list+0x5d8>
    14a4:	b	14a8 <mo_list+0x5dc>
    14a8:	b	14ac <mo_list+0x5e0>
    14ac:	b	14b0 <mo_list+0x5e4>
    14b0:	b	14b4 <mo_list+0x5e8>
    14b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    14b8:	movw	r1, #0
    14bc:	cmp	r0, r1
    14c0:	beq	14d4 <mo_list+0x608>
    14c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    14c8:	ldrb	r0, [r0]
    14cc:	cmp	r0, #0
    14d0:	bne	14d8 <mo_list+0x60c>
    14d4:	b	14f4 <mo_list+0x628>
    14d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    14dc:	str	r0, [fp, #-36]	; 0xffffffdc
    14e0:	b	14e4 <mo_list+0x618>
    14e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    14e8:	add	r0, r0, #1
    14ec:	str	r0, [fp, #-40]	; 0xffffffd8
    14f0:	b	1108 <mo_list+0x23c>
    14f4:	b	14f8 <mo_list+0x62c>
    14f8:	ldr	r0, [fp, #-20]	; 0xffffffec
    14fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1500:	bl	24d8 <safelist_client_instantiate>
    1504:	sub	sp, fp, #8
    1508:	pop	{r4, r5, fp, pc}
    150c:	.word	0x00001899
    1510:	.word	0x00001758
    1514:	.word	0x00012058
    1518:	.word	0x7fffffff
    151c:	.word	0x00012014
    1520:	.word	0x00011c50
    1524:	.word	0x00011ccc
    1528:	.word	0x00011d7c
    152c:	.word	0x00011df8
    1530:	.word	0x00011e98
    1534:	.word	0x00011f30
    1538:	.word	0x000018d7
    153c:	.word	0x00012044
    1540:	.word	0x00011f10
    1544:	.word	0x00011e78
    1548:	.word	0x00011dd8
    154c:	.word	0x00011d5c
    1550:	.word	0x00011cac
    1554:	.word	0x00011c30

00001558 <safelist_check_cliexit>:
    1558:	push	{fp, lr}
    155c:	mov	fp, sp
    1560:	sub	sp, sp, #8
    1564:	str	r0, [sp, #4]
    1568:	ldr	r0, [sp, #4]
    156c:	ldr	r0, [r0, #4]
    1570:	ldrb	r0, [r0, #65]	; 0x41
    1574:	tst	r0, #32
    1578:	beq	15bc <safelist_check_cliexit+0x64>
    157c:	b	1580 <safelist_check_cliexit+0x28>
    1580:	ldr	r0, [sp, #4]
    1584:	ldr	r0, [r0, #4]
    1588:	ldrh	r0, [r0, #80]	; 0x50
    158c:	cmp	r0, #64	; 0x40
    1590:	bne	15bc <safelist_check_cliexit+0x64>
    1594:	ldr	r0, [sp, #4]
    1598:	ldr	r0, [r0, #4]
    159c:	ldr	r0, [r0, #432]	; 0x1b0
    15a0:	ldr	r0, [r0, #428]	; 0x1ac
    15a4:	movw	r1, #0
    15a8:	cmp	r0, r1
    15ac:	beq	15bc <safelist_check_cliexit+0x64>
    15b0:	ldr	r0, [sp, #4]
    15b4:	ldr	r0, [r0, #4]
    15b8:	bl	1b4c <safelist_client_release>
    15bc:	mov	sp, fp
    15c0:	pop	{fp, pc}

000015c4 <_modinit>:
    15c4:	push	{fp, lr}
    15c8:	mov	fp, sp
    15cc:	ldr	r0, [pc, #136]	; 165c <_modinit+0x98>
    15d0:	add	r0, pc, r0
    15d4:	ldr	r1, [pc, #132]	; 1660 <_modinit+0x9c>
    15d8:	add	r1, pc, r1
    15dc:	movw	r2, #0
    15e0:	movw	r3, #3
    15e4:	bl	ac0 <rb_event_add@plt>
    15e8:	ldr	r1, [pc, #92]	; 164c <_modinit+0x88>
    15ec:	add	r1, pc, r1
    15f0:	ldr	r2, [pc, #88]	; 1650 <_modinit+0x8c>
    15f4:	ldr	r2, [pc, r2]
    15f8:	ldr	r3, [pc, #84]	; 1654 <_modinit+0x90>
    15fc:	add	r3, pc, r3
    1600:	ldr	ip, [pc, #80]	; 1658 <_modinit+0x94>
    1604:	add	ip, pc, ip
    1608:	str	r0, [ip]
    160c:	mov	r0, r1
    1610:	mov	r1, r2
    1614:	mov	r2, r3
    1618:	bl	bd4 <add_isupport@plt>
    161c:	ldr	r0, [pc, #28]	; 1640 <_modinit+0x7c>
    1620:	add	r0, pc, r0
    1624:	ldr	r1, [pc, #24]	; 1644 <_modinit+0x80>
    1628:	ldr	r1, [pc, r1]
    162c:	ldr	r2, [pc, #20]	; 1648 <_modinit+0x84>
    1630:	add	r2, pc, r2
    1634:	bl	bd4 <add_isupport@plt>
    1638:	movw	r0, #0
    163c:	pop	{fp, pc}
    1640:	.word	0x000010e8
    1644:	.word	0x00011a68
    1648:	.word	0x000010de
    164c:	.word	0x00001119
    1650:	.word	0x00011a9c
    1654:	.word	0x0000112f
    1658:	.word	0x00011b34
    165c:	.word	0x0000111c
    1660:	.word	0x000000c4

00001664 <_moddeinit>:
    1664:	push	{fp, lr}
    1668:	mov	fp, sp
    166c:	ldr	r0, [pc, #44]	; 16a0 <_moddeinit+0x3c>
    1670:	add	r0, pc, r0
    1674:	ldr	r0, [r0]
    1678:	bl	ae4 <rb_event_delete@plt>
    167c:	ldr	r0, [pc, #24]	; 169c <_moddeinit+0x38>
    1680:	add	r0, pc, r0
    1684:	bl	aa8 <delete_isupport@plt>
    1688:	ldr	r0, [pc, #8]	; 1698 <_moddeinit+0x34>
    168c:	add	r0, pc, r0
    1690:	bl	aa8 <delete_isupport@plt>
    1694:	pop	{fp, pc}
    1698:	.word	0x0000107c
    169c:	.word	0x00001085
    16a0:	.word	0x00011ac8

000016a4 <safelist_iterate_clients>:
    16a4:	push	{fp, lr}
    16a8:	mov	fp, sp
    16ac:	sub	sp, sp, #24
    16b0:	ldr	r1, [pc, #164]	; 175c <safelist_iterate_clients+0xb8>
    16b4:	add	r1, pc, r1
    16b8:	str	r0, [fp, #-4]
    16bc:	ldr	r0, [r1]
    16c0:	str	r0, [fp, #-8]
    16c4:	ldr	r0, [fp, #-8]
    16c8:	movw	r1, #0
    16cc:	cmp	r0, r1
    16d0:	beq	16e4 <safelist_iterate_clients+0x40>
    16d4:	ldr	r0, [fp, #-8]
    16d8:	ldr	r0, [r0, #8]
    16dc:	str	r0, [sp, #8]
    16e0:	b	16f0 <safelist_iterate_clients+0x4c>
    16e4:	movw	r0, #0
    16e8:	str	r0, [sp, #8]
    16ec:	b	16f0 <safelist_iterate_clients+0x4c>
    16f0:	ldr	r0, [sp, #8]
    16f4:	str	r0, [sp, #12]
    16f8:	ldr	r0, [fp, #-8]
    16fc:	movw	r1, #0
    1700:	cmp	r0, r1
    1704:	beq	1754 <safelist_iterate_clients+0xb0>
    1708:	ldr	r0, [fp, #-8]
    170c:	ldr	r0, [r0]
    1710:	bl	1760 <safelist_iterate_client>
    1714:	ldr	r0, [sp, #12]
    1718:	str	r0, [fp, #-8]
    171c:	ldr	r0, [fp, #-8]
    1720:	movw	r1, #0
    1724:	cmp	r0, r1
    1728:	beq	173c <safelist_iterate_clients+0x98>
    172c:	ldr	r0, [fp, #-8]
    1730:	ldr	r0, [r0, #8]
    1734:	str	r0, [sp, #4]
    1738:	b	1748 <safelist_iterate_clients+0xa4>
    173c:	movw	r0, #0
    1740:	str	r0, [sp, #4]
    1744:	b	1748 <safelist_iterate_clients+0xa4>
    1748:	ldr	r0, [sp, #4]
    174c:	str	r0, [sp, #12]
    1750:	b	16f8 <safelist_iterate_clients+0x54>
    1754:	mov	sp, fp
    1758:	pop	{fp, pc}
    175c:	.word	0x00011a88

00001760 <safelist_iterate_client>:
    1760:	push	{fp, lr}
    1764:	mov	fp, sp
    1768:	sub	sp, sp, #48	; 0x30
    176c:	ldr	r1, [pc, #204]	; 1840 <safelist_iterate_client+0xe0>
    1770:	ldr	r1, [pc, r1]
    1774:	str	r0, [fp, #-4]
    1778:	ldr	r0, [r1]
    177c:	ldr	r1, [fp, #-4]
    1780:	ldr	r1, [r1, #432]	; 0x1b0
    1784:	ldr	r1, [r1, #428]	; 0x1ac
    1788:	ldr	r2, [r1]
    178c:	mov	r1, sp
    1790:	bl	afc <rb_radixtree_foreach_start_from@plt>
    1794:	ldr	r0, [pc, #168]	; 1844 <safelist_iterate_client+0xe4>
    1798:	ldr	r0, [pc, r0]
    179c:	ldr	r0, [r0]
    17a0:	mov	r1, sp
    17a4:	bl	bb0 <rb_radixtree_foreach_cur@plt>
    17a8:	str	r0, [fp, #-8]
    17ac:	movw	r1, #0
    17b0:	cmp	r0, r1
    17b4:	beq	1830 <safelist_iterate_client+0xd0>
    17b8:	ldr	r0, [fp, #-4]
    17bc:	ldr	r0, [r0, #36]	; 0x24
    17c0:	bl	184c <safelist_sendq_exceeded>
    17c4:	tst	r0, #1
    17c8:	beq	1800 <safelist_iterate_client+0xa0>
    17cc:	ldr	r0, [fp, #-4]
    17d0:	ldr	r0, [r0, #432]	; 0x1b0
    17d4:	ldr	r0, [r0, #428]	; 0x1ac
    17d8:	ldr	r0, [r0]
    17dc:	bl	189c <rb_free>
    17e0:	ldr	r0, [fp, #-8]
    17e4:	ldr	r0, [r0, #236]	; 0xec
    17e8:	bl	18e4 <rb_strdup>
    17ec:	ldr	r1, [fp, #-4]
    17f0:	ldr	r1, [r1, #432]	; 0x1b0
    17f4:	ldr	r1, [r1, #428]	; 0x1ac
    17f8:	str	r0, [r1]
    17fc:	b	1838 <safelist_iterate_client+0xd8>
    1800:	ldr	r0, [fp, #-4]
    1804:	ldr	r1, [fp, #-8]
    1808:	ldr	r2, [fp, #-4]
    180c:	ldr	r2, [r2, #432]	; 0x1b0
    1810:	ldr	r2, [r2, #428]	; 0x1ac
    1814:	bl	1954 <safelist_one_channel>
    1818:	ldr	r0, [pc, #40]	; 1848 <safelist_iterate_client+0xe8>
    181c:	ldr	r0, [pc, r0]
    1820:	ldr	r0, [r0]
    1824:	mov	r1, sp
    1828:	bl	b14 <rb_radixtree_foreach_next@plt>
    182c:	b	1794 <safelist_iterate_client+0x34>
    1830:	ldr	r0, [fp, #-4]
    1834:	bl	1b4c <safelist_client_release>
    1838:	mov	sp, fp
    183c:	pop	{fp, pc}
    1840:	.word	0x0001191c
    1844:	.word	0x000118f4
    1848:	.word	0x00011870

0000184c <safelist_sendq_exceeded>:
    184c:	push	{fp, lr}
    1850:	mov	fp, sp
    1854:	sub	sp, sp, #8
    1858:	str	r0, [sp, #4]
    185c:	ldr	r0, [sp, #4]
    1860:	ldr	r0, [r0, #432]	; 0x1b0
    1864:	ldr	r0, [r0, #64]	; 0x40
    1868:	ldr	r1, [sp, #4]
    186c:	str	r0, [sp]
    1870:	mov	r0, r1
    1874:	bl	b74 <get_sendq@plt>
    1878:	movw	r1, #2
    187c:	sdiv	r0, r0, r1
    1880:	ldr	r1, [sp]
    1884:	cmp	r1, r0
    1888:	movw	r0, #0
    188c:	movgt	r0, #1
    1890:	and	r0, r0, #1
    1894:	mov	sp, fp
    1898:	pop	{fp, pc}

0000189c <rb_free>:
    189c:	push	{fp, lr}
    18a0:	mov	fp, sp
    18a4:	sub	sp, sp, #8
    18a8:	str	r0, [sp, #4]
    18ac:	ldr	r0, [sp, #4]
    18b0:	movw	r1, #0
    18b4:	cmp	r0, r1
    18b8:	movw	r0, #0
    18bc:	movne	r0, #1
    18c0:	mvn	r1, #0
    18c4:	eor	r0, r0, r1
    18c8:	eor	r0, r0, r1
    18cc:	tst	r0, #1
    18d0:	beq	18dc <rb_free+0x40>
    18d4:	ldr	r0, [sp, #4]
    18d8:	bl	af0 <free@plt>
    18dc:	mov	sp, fp
    18e0:	pop	{fp, pc}

000018e4 <rb_strdup>:
    18e4:	push	{fp, lr}
    18e8:	mov	fp, sp
    18ec:	sub	sp, sp, #16
    18f0:	str	r0, [fp, #-4]
    18f4:	ldr	r0, [fp, #-4]
    18f8:	bl	b8c <strlen@plt>
    18fc:	add	r0, r0, #1
    1900:	bl	b50 <malloc@plt>
    1904:	str	r0, [sp, #8]
    1908:	ldr	r0, [sp, #8]
    190c:	movw	r1, #0
    1910:	cmp	r0, r1
    1914:	movw	r0, #0
    1918:	moveq	r0, #1
    191c:	mvn	r1, #0
    1920:	eor	r0, r0, r1
    1924:	eor	r0, r0, r1
    1928:	tst	r0, #1
    192c:	beq	1934 <rb_strdup+0x50>
    1930:	bl	b08 <rb_outofmemory@plt>
    1934:	ldr	r0, [sp, #8]
    1938:	ldr	r1, [fp, #-4]
    193c:	bl	b38 <strcpy@plt>
    1940:	ldr	r1, [sp, #8]
    1944:	str	r0, [sp, #4]
    1948:	mov	r0, r1
    194c:	mov	sp, fp
    1950:	pop	{fp, pc}

00001954 <safelist_one_channel>:
    1954:	push	{fp, lr}
    1958:	mov	fp, sp
    195c:	sub	sp, sp, #24
    1960:	str	r0, [fp, #-4]
    1964:	str	r1, [fp, #-8]
    1968:	str	r2, [sp, #12]
    196c:	ldr	r0, [fp, #-8]
    1970:	movw	r1, #0
    1974:	cmp	r0, r1
    1978:	movw	r0, #1
    197c:	str	r0, [sp, #4]
    1980:	beq	1a14 <safelist_one_channel+0xc0>
    1984:	ldr	r0, [fp, #-8]
    1988:	ldr	r0, [r0, #12]
    198c:	and	r0, r0, #2
    1990:	cmp	r0, #0
    1994:	movw	r0, #1
    1998:	str	r0, [sp, #4]
    199c:	beq	1a14 <safelist_one_channel+0xc0>
    19a0:	ldr	r0, [fp, #-4]
    19a4:	movw	r1, #0
    19a8:	cmp	r0, r1
    19ac:	movw	r0, #0
    19b0:	str	r0, [sp]
    19b4:	beq	19f4 <safelist_one_channel+0xa0>
    19b8:	ldr	r0, [fp, #-4]
    19bc:	ldr	r0, [r0, #24]
    19c0:	movw	r1, #0
    19c4:	cmp	r0, r1
    19c8:	movw	r0, #0
    19cc:	str	r0, [sp]
    19d0:	beq	19f4 <safelist_one_channel+0xa0>
    19d4:	ldr	r0, [fp, #-8]
    19d8:	ldr	r1, [fp, #-4]
    19dc:	bl	b44 <find_channel_membership@plt>
    19e0:	movw	r1, #0
    19e4:	cmp	r0, r1
    19e8:	movw	r0, #0
    19ec:	movne	r0, #1
    19f0:	str	r0, [sp]
    19f4:	ldr	r0, [sp]
    19f8:	tst	r0, #1
    19fc:	movw	r0, #1
    1a00:	moveq	r0, #0
    1a04:	cmp	r0, #0
    1a08:	movw	r0, #0
    1a0c:	movne	r0, #1
    1a10:	str	r0, [sp, #4]
    1a14:	ldr	r0, [sp, #4]
    1a18:	and	r0, r0, #1
    1a1c:	str	r0, [sp, #8]
    1a20:	ldr	r0, [sp, #8]
    1a24:	cmp	r0, #0
    1a28:	bne	1a40 <safelist_one_channel+0xec>
    1a2c:	ldr	r0, [sp, #12]
    1a30:	ldr	r0, [r0, #28]
    1a34:	cmp	r0, #0
    1a38:	bne	1a40 <safelist_one_channel+0xec>
    1a3c:	b	1b44 <safelist_one_channel+0x1f0>
    1a40:	ldr	r0, [fp, #-8]
    1a44:	ldr	r0, [r0, #132]	; 0x84
    1a48:	ldr	r1, [sp, #12]
    1a4c:	ldr	r1, [r1, #4]
    1a50:	cmp	r0, r1
    1a54:	bcc	1a70 <safelist_one_channel+0x11c>
    1a58:	ldr	r0, [fp, #-8]
    1a5c:	ldr	r0, [r0, #132]	; 0x84
    1a60:	ldr	r1, [sp, #12]
    1a64:	ldr	r1, [r1, #8]
    1a68:	cmp	r0, r1
    1a6c:	bls	1a74 <safelist_one_channel+0x120>
    1a70:	b	1b44 <safelist_one_channel+0x1f0>
    1a74:	ldr	r0, [sp, #12]
    1a78:	ldr	r0, [r0, #20]
    1a7c:	cmp	r0, #0
    1a80:	beq	1aa0 <safelist_one_channel+0x14c>
    1a84:	ldr	r0, [fp, #-8]
    1a88:	ldr	r0, [r0, #116]	; 0x74
    1a8c:	ldr	r1, [sp, #12]
    1a90:	ldr	r1, [r1, #20]
    1a94:	cmp	r0, r1
    1a98:	bge	1aa0 <safelist_one_channel+0x14c>
    1a9c:	b	1b44 <safelist_one_channel+0x1f0>
    1aa0:	ldr	r0, [sp, #12]
    1aa4:	ldr	r0, [r0, #24]
    1aa8:	cmp	r0, #0
    1aac:	beq	1adc <safelist_one_channel+0x188>
    1ab0:	ldr	r0, [fp, #-8]
    1ab4:	ldr	r0, [r0, #116]	; 0x74
    1ab8:	ldr	r1, [sp, #12]
    1abc:	ldr	r1, [r1, #24]
    1ac0:	cmp	r0, r1
    1ac4:	bgt	1ad8 <safelist_one_channel+0x184>
    1ac8:	ldr	r0, [fp, #-8]
    1acc:	ldr	r0, [r0, #116]	; 0x74
    1ad0:	cmp	r0, #0
    1ad4:	bne	1adc <safelist_one_channel+0x188>
    1ad8:	b	1b44 <safelist_one_channel+0x1f0>
    1adc:	ldr	r0, [sp, #12]
    1ae0:	ldr	r0, [r0, #12]
    1ae4:	cmp	r0, #0
    1ae8:	beq	1b08 <safelist_one_channel+0x1b4>
    1aec:	ldr	r0, [fp, #-8]
    1af0:	ldr	r0, [r0, #232]	; 0xe8
    1af4:	ldr	r1, [sp, #12]
    1af8:	ldr	r1, [r1, #12]
    1afc:	cmp	r0, r1
    1b00:	bge	1b08 <safelist_one_channel+0x1b4>
    1b04:	b	1b44 <safelist_one_channel+0x1f0>
    1b08:	ldr	r0, [sp, #12]
    1b0c:	ldr	r0, [r0, #16]
    1b10:	cmp	r0, #0
    1b14:	beq	1b34 <safelist_one_channel+0x1e0>
    1b18:	ldr	r0, [fp, #-8]
    1b1c:	ldr	r0, [r0, #232]	; 0xe8
    1b20:	ldr	r1, [sp, #12]
    1b24:	ldr	r1, [r1, #16]
    1b28:	cmp	r0, r1
    1b2c:	ble	1b34 <safelist_one_channel+0x1e0>
    1b30:	b	1b44 <safelist_one_channel+0x1f0>
    1b34:	ldr	r0, [fp, #-4]
    1b38:	ldr	r1, [fp, #-8]
    1b3c:	ldr	r2, [sp, #8]
    1b40:	bl	1c08 <list_one_channel>
    1b44:	mov	sp, fp
    1b48:	pop	{fp, pc}

00001b4c <safelist_client_release>:
    1b4c:	push	{fp, lr}
    1b50:	mov	fp, sp
    1b54:	sub	sp, sp, #8
    1b58:	str	r0, [sp, #4]
    1b5c:	ldr	r0, [sp, #4]
    1b60:	ldrb	r0, [r0, #65]	; 0x41
    1b64:	tst	r0, #32
    1b68:	beq	1b80 <safelist_client_release+0x34>
    1b6c:	b	1b70 <safelist_client_release+0x24>
    1b70:	ldr	r0, [sp, #4]
    1b74:	ldrh	r0, [r0, #80]	; 0x50
    1b78:	cmp	r0, #64	; 0x40
    1b7c:	beq	1b84 <safelist_client_release+0x38>
    1b80:	b	1bf4 <safelist_client_release+0xa8>
    1b84:	ldr	r0, [pc, #120]	; 1c04 <safelist_client_release+0xb8>
    1b88:	add	r1, pc, r0
    1b8c:	ldr	r0, [sp, #4]
    1b90:	bl	1fbc <rb_dlinkFindDestroy>
    1b94:	ldr	r1, [sp, #4]
    1b98:	ldr	r1, [r1, #432]	; 0x1b0
    1b9c:	ldr	r1, [r1, #428]	; 0x1ac
    1ba0:	ldr	r1, [r1]
    1ba4:	str	r0, [sp]
    1ba8:	mov	r0, r1
    1bac:	bl	189c <rb_free>
    1bb0:	ldr	r0, [sp, #4]
    1bb4:	ldr	r0, [r0, #432]	; 0x1b0
    1bb8:	ldr	r0, [r0, #428]	; 0x1ac
    1bbc:	bl	189c <rb_free>
    1bc0:	ldr	r0, [pc, #52]	; 1bfc <safelist_client_release+0xb0>
    1bc4:	add	r1, pc, r0
    1bc8:	ldr	r0, [pc, #48]	; 1c00 <safelist_client_release+0xb4>
    1bcc:	ldr	r0, [pc, r0]
    1bd0:	add	r2, r0, #88	; 0x58
    1bd4:	ldr	r0, [sp, #4]
    1bd8:	ldr	r0, [r0, #432]	; 0x1b0
    1bdc:	movw	r3, #0
    1be0:	str	r3, [r0, #428]	; 0x1ac
    1be4:	ldr	r0, [sp, #4]
    1be8:	ldr	r3, [sp, #4]
    1bec:	add	r3, r3, #88	; 0x58
    1bf0:	bl	ad8 <sendto_one@plt>
    1bf4:	mov	sp, fp
    1bf8:	pop	{fp, pc}
    1bfc:	.word	0x00000b68
    1c00:	.word	0x000114d0
    1c04:	.word	0x000115b4

00001c08 <list_one_channel>:
    1c08:	push	{r4, r5, r6, sl, fp, lr}
    1c0c:	add	fp, sp, #16
    1c10:	sub	sp, sp, #432	; 0x1b0
    1c14:	str	r0, [fp, #-20]	; 0xffffffec
    1c18:	str	r1, [fp, #-24]	; 0xffffffe8
    1c1c:	str	r2, [fp, #-28]	; 0xffffffe4
    1c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c24:	ldr	r0, [r0, #108]	; 0x6c
    1c28:	movw	r1, #0
    1c2c:	cmp	r0, r1
    1c30:	beq	1c4c <list_one_channel+0x44>
    1c34:	add	r0, sp, #29
    1c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1c3c:	ldr	r1, [r1, #108]	; 0x6c
    1c40:	movw	r2, #391	; 0x187
    1c44:	bl	be0 <rb_strlcpy@plt>
    1c48:	b	1c54 <list_one_channel+0x4c>
    1c4c:	movw	r0, #0
    1c50:	strb	r0, [sp, #29]
    1c54:	add	r0, sp, #29
    1c58:	bl	1cf8 <strip_colour>
    1c5c:	ldr	r1, [pc, #132]	; 1ce8 <list_one_channel+0xe0>
    1c60:	add	r1, pc, r1
    1c64:	ldr	r2, [pc, #128]	; 1cec <list_one_channel+0xe4>
    1c68:	ldr	r2, [pc, r2]
    1c6c:	add	r2, r2, #88	; 0x58
    1c70:	add	r3, sp, #29
    1c74:	ldr	ip, [pc, #116]	; 1cf0 <list_one_channel+0xe8>
    1c78:	add	ip, pc, ip
    1c7c:	ldr	lr, [pc, #112]	; 1cf4 <list_one_channel+0xec>
    1c80:	add	lr, pc, lr
    1c84:	ldr	r4, [fp, #-20]	; 0xffffffec
    1c88:	ldr	r5, [fp, #-20]	; 0xffffffec
    1c8c:	add	r5, r5, #88	; 0x58
    1c90:	ldr	r6, [fp, #-28]	; 0xffffffe4
    1c94:	cmp	r6, #0
    1c98:	movw	r6, #0
    1c9c:	movne	r6, #1
    1ca0:	tst	r6, #1
    1ca4:	movne	lr, ip
    1ca8:	ldr	ip, [fp, #-24]	; 0xffffffe8
    1cac:	ldr	ip, [ip, #236]	; 0xec
    1cb0:	ldr	r6, [fp, #-24]	; 0xffffffe8
    1cb4:	ldr	r6, [r6, #132]	; 0x84
    1cb8:	str	r0, [sp, #24]
    1cbc:	mov	r0, r4
    1cc0:	str	r3, [sp, #20]
    1cc4:	mov	r3, r5
    1cc8:	str	lr, [sp]
    1ccc:	str	ip, [sp, #4]
    1cd0:	str	r6, [sp, #8]
    1cd4:	ldr	ip, [sp, #20]
    1cd8:	str	ip, [sp, #12]
    1cdc:	bl	ad8 <sendto_one@plt>
    1ce0:	sub	sp, fp, #16
    1ce4:	pop	{r4, r5, r6, sl, fp, pc}
    1ce8:	.word	0x00000ab2
    1cec:	.word	0x00011434
    1cf0:	.word	0x00000ab3
    1cf4:	.word	0x00000aaa

00001cf8 <strip_colour>:
    1cf8:	sub	sp, sp, #24
    1cfc:	str	r0, [sp, #20]
    1d00:	ldr	r0, [sp, #20]
    1d04:	str	r0, [sp, #16]
    1d08:	ldr	r0, [sp, #20]
    1d0c:	str	r0, [sp, #12]
    1d10:	movw	r0, #0
    1d14:	str	r0, [sp, #8]
    1d18:	ldr	r0, [sp, #16]
    1d1c:	movw	r1, #0
    1d20:	cmp	r0, r1
    1d24:	movw	r0, #0
    1d28:	str	r0, [sp, #4]
    1d2c:	beq	1d48 <strip_colour+0x50>
    1d30:	ldr	r0, [sp, #16]
    1d34:	ldrb	r0, [r0]
    1d38:	cmp	r0, #0
    1d3c:	movw	r0, #0
    1d40:	movne	r0, #1
    1d44:	str	r0, [sp, #4]
    1d48:	ldr	r0, [sp, #4]
    1d4c:	tst	r0, #1
    1d50:	beq	1f68 <strip_colour+0x270>
    1d54:	ldr	r0, [sp, #16]
    1d58:	ldrb	r0, [r0]
    1d5c:	mov	r1, r0
    1d60:	cmp	r0, #2
    1d64:	str	r1, [sp]
    1d68:	beq	1f14 <strip_colour+0x21c>
    1d6c:	b	1d70 <strip_colour+0x78>
    1d70:	ldr	r0, [sp]
    1d74:	cmp	r0, #3
    1d78:	beq	1e08 <strip_colour+0x110>
    1d7c:	b	1d80 <strip_colour+0x88>
    1d80:	ldr	r0, [sp]
    1d84:	cmp	r0, #4
    1d88:	beq	1f14 <strip_colour+0x21c>
    1d8c:	b	1d90 <strip_colour+0x98>
    1d90:	ldr	r0, [sp]
    1d94:	sub	r1, r0, #6
    1d98:	cmp	r1, #2
    1d9c:	bcc	1f14 <strip_colour+0x21c>
    1da0:	b	1da4 <strip_colour+0xac>
    1da4:	ldr	r0, [sp]
    1da8:	cmp	r0, #15
    1dac:	beq	1f14 <strip_colour+0x21c>
    1db0:	b	1db4 <strip_colour+0xbc>
    1db4:	ldr	r0, [sp]
    1db8:	sub	r1, r0, #22
    1dbc:	cmp	r1, #2
    1dc0:	bcc	1f14 <strip_colour+0x21c>
    1dc4:	b	1dc8 <strip_colour+0xd0>
    1dc8:	ldr	r0, [sp]
    1dcc:	cmp	r0, #27
    1dd0:	beq	1f14 <strip_colour+0x21c>
    1dd4:	b	1dd8 <strip_colour+0xe0>
    1dd8:	ldr	r0, [sp]
    1ddc:	cmp	r0, #29
    1de0:	beq	1f14 <strip_colour+0x21c>
    1de4:	b	1de8 <strip_colour+0xf0>
    1de8:	ldr	r0, [sp]
    1dec:	cmp	r0, #31
    1df0:	beq	1f14 <strip_colour+0x21c>
    1df4:	b	1df8 <strip_colour+0x100>
    1df8:	ldr	r0, [sp]
    1dfc:	cmp	r0, #32
    1e00:	beq	1f18 <strip_colour+0x220>
    1e04:	b	1f34 <strip_colour+0x23c>
    1e08:	ldr	r0, [pc, #396]	; 1f9c <strip_colour+0x2a4>
    1e0c:	ldr	r0, [pc, r0]
    1e10:	ldr	r1, [sp, #16]
    1e14:	ldrb	r1, [r1, #1]
    1e18:	mov	r2, r1
    1e1c:	ldr	r3, [pc, #392]	; 1fac <strip_colour+0x2b4>
    1e20:	ldr	r3, [pc, r3]
    1e24:	add	r1, r3, r1, lsl #2
    1e28:	ldr	r1, [r1]
    1e2c:	and	r1, r1, #16
    1e30:	cmp	r1, #0
    1e34:	beq	1f10 <strip_colour+0x218>
    1e38:	ldr	r0, [pc, #352]	; 1fa0 <strip_colour+0x2a8>
    1e3c:	ldr	r0, [pc, r0]
    1e40:	ldr	r1, [sp, #16]
    1e44:	add	r1, r1, #1
    1e48:	str	r1, [sp, #16]
    1e4c:	ldr	r1, [sp, #16]
    1e50:	ldrb	r1, [r1, #1]
    1e54:	mov	r2, r1
    1e58:	ldr	r3, [pc, #336]	; 1fb0 <strip_colour+0x2b8>
    1e5c:	ldr	r3, [pc, r3]
    1e60:	add	r1, r3, r1, lsl #2
    1e64:	ldr	r1, [r1]
    1e68:	and	r1, r1, #16
    1e6c:	cmp	r1, #0
    1e70:	beq	1e80 <strip_colour+0x188>
    1e74:	ldr	r0, [sp, #16]
    1e78:	add	r0, r0, #1
    1e7c:	str	r0, [sp, #16]
    1e80:	ldr	r0, [sp, #16]
    1e84:	ldrb	r0, [r0, #1]
    1e88:	cmp	r0, #44	; 0x2c
    1e8c:	bne	1f0c <strip_colour+0x214>
    1e90:	ldr	r0, [pc, #268]	; 1fa4 <strip_colour+0x2ac>
    1e94:	ldr	r0, [pc, r0]
    1e98:	ldr	r1, [sp, #16]
    1e9c:	ldrb	r1, [r1, #2]
    1ea0:	mov	r2, r1
    1ea4:	ldr	r3, [pc, #264]	; 1fb4 <strip_colour+0x2bc>
    1ea8:	ldr	r3, [pc, r3]
    1eac:	add	r1, r3, r1, lsl #2
    1eb0:	ldr	r1, [r1]
    1eb4:	and	r1, r1, #16
    1eb8:	cmp	r1, #0
    1ebc:	beq	1f0c <strip_colour+0x214>
    1ec0:	ldr	r0, [pc, #224]	; 1fa8 <strip_colour+0x2b0>
    1ec4:	ldr	r0, [pc, r0]
    1ec8:	ldr	r1, [sp, #16]
    1ecc:	add	r1, r1, #2
    1ed0:	str	r1, [sp, #16]
    1ed4:	ldr	r1, [sp, #16]
    1ed8:	ldrb	r1, [r1, #1]
    1edc:	mov	r2, r1
    1ee0:	ldr	r3, [pc, #208]	; 1fb8 <strip_colour+0x2c0>
    1ee4:	ldr	r3, [pc, r3]
    1ee8:	add	r1, r3, r1, lsl #2
    1eec:	ldr	r1, [r1]
    1ef0:	and	r1, r1, #16
    1ef4:	cmp	r1, #0
    1ef8:	beq	1f08 <strip_colour+0x210>
    1efc:	ldr	r0, [sp, #16]
    1f00:	add	r0, r0, #1
    1f04:	str	r0, [sp, #16]
    1f08:	b	1f0c <strip_colour+0x214>
    1f0c:	b	1f10 <strip_colour+0x218>
    1f10:	b	1f54 <strip_colour+0x25c>
    1f14:	b	1f54 <strip_colour+0x25c>
    1f18:	ldr	r0, [sp, #16]
    1f1c:	ldrb	r0, [r0]
    1f20:	ldr	r1, [sp, #12]
    1f24:	add	r2, r1, #1
    1f28:	str	r2, [sp, #12]
    1f2c:	strb	r0, [r1]
    1f30:	b	1f54 <strip_colour+0x25c>
    1f34:	ldr	r0, [sp, #16]
    1f38:	ldrb	r0, [r0]
    1f3c:	ldr	r1, [sp, #12]
    1f40:	add	r2, r1, #1
    1f44:	str	r2, [sp, #12]
    1f48:	strb	r0, [r1]
    1f4c:	ldr	r0, [sp, #12]
    1f50:	str	r0, [sp, #8]
    1f54:	b	1f58 <strip_colour+0x260>
    1f58:	ldr	r0, [sp, #16]
    1f5c:	add	r0, r0, #1
    1f60:	str	r0, [sp, #16]
    1f64:	b	1d18 <strip_colour+0x20>
    1f68:	ldr	r0, [sp, #12]
    1f6c:	movw	r1, #0
    1f70:	strb	r1, [r0]
    1f74:	ldr	r0, [sp, #8]
    1f78:	movw	r1, #0
    1f7c:	cmp	r0, r1
    1f80:	beq	1f90 <strip_colour+0x298>
    1f84:	ldr	r0, [sp, #8]
    1f88:	movw	r1, #0
    1f8c:	strb	r1, [r0]
    1f90:	ldr	r0, [sp, #20]
    1f94:	add	sp, sp, #24
    1f98:	bx	lr
    1f9c:	.word	0x0001127c
    1fa0:	.word	0x0001124c
    1fa4:	.word	0x000111f4
    1fa8:	.word	0x000111c4
    1fac:	.word	0x00011268
    1fb0:	.word	0x0001122c
    1fb4:	.word	0x000111e0
    1fb8:	.word	0x000111a4

00001fbc <rb_dlinkFindDestroy>:
    1fbc:	push	{fp, lr}
    1fc0:	mov	fp, sp
    1fc4:	sub	sp, sp, #16
    1fc8:	str	r0, [sp, #8]
    1fcc:	str	r1, [sp, #4]
    1fd0:	ldr	r0, [sp, #4]
    1fd4:	movw	r1, #0
    1fd8:	cmp	r0, r1
    1fdc:	beq	1fe4 <rb_dlinkFindDestroy+0x28>
    1fe0:	b	2004 <rb_dlinkFindDestroy+0x48>
    1fe4:	ldr	r0, [pc, #148]	; 2080 <rb_dlinkFindDestroy+0xc4>
    1fe8:	add	r0, pc, r0
    1fec:	ldr	r1, [pc, #144]	; 2084 <rb_dlinkFindDestroy+0xc8>
    1ff0:	add	r1, pc, r1
    1ff4:	ldr	r2, [pc, #140]	; 2088 <rb_dlinkFindDestroy+0xcc>
    1ff8:	add	r3, pc, r2
    1ffc:	movw	r2, #287	; 0x11f
    2000:	bl	bf8 <__assert_fail@plt>
    2004:	ldr	r0, [sp, #8]
    2008:	movw	r1, #0
    200c:	cmp	r0, r1
    2010:	beq	2018 <rb_dlinkFindDestroy+0x5c>
    2014:	b	2038 <rb_dlinkFindDestroy+0x7c>
    2018:	ldr	r0, [pc, #108]	; 208c <rb_dlinkFindDestroy+0xd0>
    201c:	add	r0, pc, r0
    2020:	ldr	r1, [pc, #104]	; 2090 <rb_dlinkFindDestroy+0xd4>
    2024:	add	r1, pc, r1
    2028:	ldr	r2, [pc, #100]	; 2094 <rb_dlinkFindDestroy+0xd8>
    202c:	add	r3, pc, r2
    2030:	movw	r2, #288	; 0x120
    2034:	bl	bf8 <__assert_fail@plt>
    2038:	ldr	r0, [sp, #8]
    203c:	ldr	r1, [sp, #4]
    2040:	bl	2098 <rb_dlinkFindDelete>
    2044:	str	r0, [sp]
    2048:	ldr	r0, [sp]
    204c:	movw	r1, #0
    2050:	cmp	r0, r1
    2054:	beq	206c <rb_dlinkFindDestroy+0xb0>
    2058:	ldr	r0, [sp]
    205c:	bl	b2c <rb_free_rb_dlink_node@plt>
    2060:	movw	r0, #1
    2064:	str	r0, [fp, #-4]
    2068:	b	2074 <rb_dlinkFindDestroy+0xb8>
    206c:	movw	r0, #0
    2070:	str	r0, [fp, #-4]
    2074:	ldr	r0, [fp, #-4]
    2078:	mov	sp, fp
    207c:	pop	{fp, pc}
    2080:	.word	0x0000075d
    2084:	.word	0x00000762
    2088:	.word	0x00000776
    208c:	.word	0x00000783
    2090:	.word	0x0000072e
    2094:	.word	0x00000742

00002098 <rb_dlinkFindDelete>:
    2098:	push	{fp, lr}
    209c:	mov	fp, sp
    20a0:	sub	sp, sp, #16
    20a4:	str	r0, [sp, #8]
    20a8:	str	r1, [sp, #4]
    20ac:	ldr	r0, [sp, #4]
    20b0:	movw	r1, #0
    20b4:	cmp	r0, r1
    20b8:	beq	20c0 <rb_dlinkFindDelete+0x28>
    20bc:	b	20e0 <rb_dlinkFindDelete+0x48>
    20c0:	ldr	r0, [pc, #336]	; 2218 <rb_dlinkFindDelete+0x180>
    20c4:	add	r0, pc, r0
    20c8:	ldr	r1, [pc, #332]	; 221c <rb_dlinkFindDelete+0x184>
    20cc:	add	r1, pc, r1
    20d0:	ldr	r2, [pc, #328]	; 2220 <rb_dlinkFindDelete+0x188>
    20d4:	add	r3, pc, r2
    20d8:	movw	r2, #258	; 0x102
    20dc:	bl	bf8 <__assert_fail@plt>
    20e0:	ldr	r0, [sp, #8]
    20e4:	movw	r1, #0
    20e8:	cmp	r0, r1
    20ec:	beq	20f4 <rb_dlinkFindDelete+0x5c>
    20f0:	b	2114 <rb_dlinkFindDelete+0x7c>
    20f4:	ldr	r0, [pc, #296]	; 2224 <rb_dlinkFindDelete+0x18c>
    20f8:	add	r0, pc, r0
    20fc:	ldr	r1, [pc, #292]	; 2228 <rb_dlinkFindDelete+0x190>
    2100:	add	r1, pc, r1
    2104:	ldr	r2, [pc, #288]	; 222c <rb_dlinkFindDelete+0x194>
    2108:	add	r3, pc, r2
    210c:	movw	r2, #259	; 0x103
    2110:	bl	bf8 <__assert_fail@plt>
    2114:	ldr	r0, [sp, #4]
    2118:	ldr	r0, [r0]
    211c:	str	r0, [sp]
    2120:	ldr	r0, [sp]
    2124:	movw	r1, #0
    2128:	cmp	r0, r1
    212c:	beq	2204 <rb_dlinkFindDelete+0x16c>
    2130:	ldr	r0, [sp]
    2134:	ldr	r0, [r0]
    2138:	ldr	r1, [sp, #8]
    213c:	cmp	r0, r1
    2140:	beq	2148 <rb_dlinkFindDelete+0xb0>
    2144:	b	21f4 <rb_dlinkFindDelete+0x15c>
    2148:	ldr	r0, [sp]
    214c:	ldr	r0, [r0, #8]
    2150:	movw	r1, #0
    2154:	cmp	r0, r1
    2158:	beq	2174 <rb_dlinkFindDelete+0xdc>
    215c:	ldr	r0, [sp]
    2160:	ldr	r0, [r0, #4]
    2164:	ldr	r1, [sp]
    2168:	ldr	r1, [r1, #8]
    216c:	str	r0, [r1, #4]
    2170:	b	2184 <rb_dlinkFindDelete+0xec>
    2174:	ldr	r0, [sp]
    2178:	ldr	r0, [r0, #4]
    217c:	ldr	r1, [sp, #4]
    2180:	str	r0, [r1, #4]
    2184:	ldr	r0, [sp]
    2188:	ldr	r0, [r0, #4]
    218c:	movw	r1, #0
    2190:	cmp	r0, r1
    2194:	beq	21b0 <rb_dlinkFindDelete+0x118>
    2198:	ldr	r0, [sp]
    219c:	ldr	r0, [r0, #8]
    21a0:	ldr	r1, [sp]
    21a4:	ldr	r1, [r1, #4]
    21a8:	str	r0, [r1, #8]
    21ac:	b	21c0 <rb_dlinkFindDelete+0x128>
    21b0:	ldr	r0, [sp]
    21b4:	ldr	r0, [r0, #8]
    21b8:	ldr	r1, [sp, #4]
    21bc:	str	r0, [r1]
    21c0:	ldr	r0, [sp]
    21c4:	movw	r1, #0
    21c8:	str	r1, [r0, #4]
    21cc:	ldr	r0, [sp]
    21d0:	str	r1, [r0, #8]
    21d4:	ldr	r0, [sp, #4]
    21d8:	ldr	r1, [r0, #8]
    21dc:	mvn	r2, #0
    21e0:	add	r1, r1, r2
    21e4:	str	r1, [r0, #8]
    21e8:	ldr	r0, [sp]
    21ec:	str	r0, [fp, #-4]
    21f0:	b	220c <rb_dlinkFindDelete+0x174>
    21f4:	ldr	r0, [sp]
    21f8:	ldr	r0, [r0, #8]
    21fc:	str	r0, [sp]
    2200:	b	2120 <rb_dlinkFindDelete+0x88>
    2204:	movw	r0, #0
    2208:	str	r0, [fp, #-4]
    220c:	ldr	r0, [fp, #-4]
    2210:	mov	sp, fp
    2214:	pop	{fp, pc}
    2218:	.word	0x00000681
    221c:	.word	0x00000686
    2220:	.word	0x000006d8
    2224:	.word	0x000006a7
    2228:	.word	0x00000652
    222c:	.word	0x000006a4

00002230 <safelist_channel_named>:
    2230:	push	{fp, lr}
    2234:	mov	fp, sp
    2238:	sub	sp, sp, #40	; 0x28
    223c:	ldr	r3, [pc, #532]	; 2458 <safelist_channel_named+0x228>
    2240:	add	r3, pc, r3
    2244:	ldr	ip, [pc, #528]	; 245c <safelist_channel_named+0x22c>
    2248:	ldr	ip, [pc, ip]
    224c:	add	ip, ip, #88	; 0x58
    2250:	str	r0, [fp, #-4]
    2254:	str	r1, [fp, #-8]
    2258:	str	r2, [fp, #-12]
    225c:	ldr	r0, [fp, #-4]
    2260:	ldr	r1, [fp, #-4]
    2264:	add	r1, r1, #88	; 0x58
    2268:	str	r1, [sp, #12]
    226c:	mov	r1, r3
    2270:	mov	r2, ip
    2274:	ldr	r3, [sp, #12]
    2278:	bl	ad8 <sendto_one@plt>
    227c:	ldr	r0, [fp, #-8]
    2280:	movw	r1, #44	; 0x2c
    2284:	bl	b98 <strchr@plt>
    2288:	str	r0, [sp, #20]
    228c:	movw	r1, #0
    2290:	cmp	r0, r1
    2294:	beq	22a4 <safelist_channel_named+0x74>
    2298:	ldr	r0, [sp, #20]
    229c:	movw	r1, #0
    22a0:	strb	r1, [r0]
    22a4:	ldr	r0, [fp, #-8]
    22a8:	ldrb	r0, [r0]
    22ac:	cmp	r0, #0
    22b0:	bne	22f4 <safelist_channel_named+0xc4>
    22b4:	ldr	r0, [pc, #448]	; 247c <safelist_channel_named+0x24c>
    22b8:	add	r2, pc, r0
    22bc:	ldr	r0, [fp, #-4]
    22c0:	ldr	r3, [fp, #-8]
    22c4:	movw	r1, #401	; 0x191
    22c8:	bl	b80 <sendto_one_numeric@plt>
    22cc:	ldr	r0, [pc, #416]	; 2474 <safelist_channel_named+0x244>
    22d0:	add	r1, pc, r0
    22d4:	ldr	r0, [pc, #412]	; 2478 <safelist_channel_named+0x248>
    22d8:	ldr	r0, [pc, r0]
    22dc:	add	r2, r0, #88	; 0x58
    22e0:	ldr	r0, [fp, #-4]
    22e4:	ldr	r3, [fp, #-4]
    22e8:	add	r3, r3, #88	; 0x58
    22ec:	bl	ad8 <sendto_one@plt>
    22f0:	b	2450 <safelist_channel_named+0x220>
    22f4:	ldr	r0, [fp, #-8]
    22f8:	bl	b20 <find_channel@plt>
    22fc:	str	r0, [fp, #-16]
    2300:	ldr	r0, [fp, #-16]
    2304:	movw	r1, #0
    2308:	cmp	r0, r1
    230c:	bne	2350 <safelist_channel_named+0x120>
    2310:	ldr	r0, [pc, #344]	; 2470 <safelist_channel_named+0x240>
    2314:	add	r2, pc, r0
    2318:	ldr	r0, [fp, #-4]
    231c:	ldr	r3, [fp, #-8]
    2320:	movw	r1, #401	; 0x191
    2324:	bl	b80 <sendto_one_numeric@plt>
    2328:	ldr	r0, [pc, #312]	; 2468 <safelist_channel_named+0x238>
    232c:	add	r1, pc, r0
    2330:	ldr	r0, [pc, #308]	; 246c <safelist_channel_named+0x23c>
    2334:	ldr	r0, [pc, r0]
    2338:	add	r2, r0, #88	; 0x58
    233c:	ldr	r0, [fp, #-4]
    2340:	ldr	r3, [fp, #-4]
    2344:	add	r3, r3, #88	; 0x58
    2348:	bl	ad8 <sendto_one@plt>
    234c:	b	2450 <safelist_channel_named+0x220>
    2350:	ldr	r0, [fp, #-16]
    2354:	movw	r1, #0
    2358:	cmp	r0, r1
    235c:	movw	r0, #1
    2360:	str	r0, [sp, #8]
    2364:	beq	23f8 <safelist_channel_named+0x1c8>
    2368:	ldr	r0, [fp, #-16]
    236c:	ldr	r0, [r0, #12]
    2370:	and	r0, r0, #2
    2374:	cmp	r0, #0
    2378:	movw	r0, #1
    237c:	str	r0, [sp, #8]
    2380:	beq	23f8 <safelist_channel_named+0x1c8>
    2384:	ldr	r0, [fp, #-4]
    2388:	movw	r1, #0
    238c:	cmp	r0, r1
    2390:	movw	r0, #0
    2394:	str	r0, [sp, #4]
    2398:	beq	23d8 <safelist_channel_named+0x1a8>
    239c:	ldr	r0, [fp, #-4]
    23a0:	ldr	r0, [r0, #24]
    23a4:	movw	r1, #0
    23a8:	cmp	r0, r1
    23ac:	movw	r0, #0
    23b0:	str	r0, [sp, #4]
    23b4:	beq	23d8 <safelist_channel_named+0x1a8>
    23b8:	ldr	r0, [fp, #-16]
    23bc:	ldr	r1, [fp, #-4]
    23c0:	bl	b44 <find_channel_membership@plt>
    23c4:	movw	r1, #0
    23c8:	cmp	r0, r1
    23cc:	movw	r0, #0
    23d0:	movne	r0, #1
    23d4:	str	r0, [sp, #4]
    23d8:	ldr	r0, [sp, #4]
    23dc:	tst	r0, #1
    23e0:	movw	r0, #1
    23e4:	moveq	r0, #0
    23e8:	cmp	r0, #0
    23ec:	movw	r0, #0
    23f0:	movne	r0, #1
    23f4:	str	r0, [sp, #8]
    23f8:	ldr	r0, [sp, #8]
    23fc:	and	r0, r0, #1
    2400:	str	r0, [sp, #16]
    2404:	ldr	r0, [sp, #16]
    2408:	cmp	r0, #0
    240c:	bne	241c <safelist_channel_named+0x1ec>
    2410:	ldr	r0, [fp, #-12]
    2414:	cmp	r0, #0
    2418:	beq	242c <safelist_channel_named+0x1fc>
    241c:	ldr	r0, [fp, #-4]
    2420:	ldr	r1, [fp, #-16]
    2424:	ldr	r2, [sp, #16]
    2428:	bl	1c08 <list_one_channel>
    242c:	ldr	r0, [pc, #44]	; 2460 <safelist_channel_named+0x230>
    2430:	add	r1, pc, r0
    2434:	ldr	r0, [pc, #40]	; 2464 <safelist_channel_named+0x234>
    2438:	ldr	r0, [pc, r0]
    243c:	add	r2, r0, #88	; 0x58
    2440:	ldr	r0, [fp, #-4]
    2444:	ldr	r3, [fp, #-4]
    2448:	add	r3, r3, #88	; 0x58
    244c:	bl	ad8 <sendto_one@plt>
    2450:	mov	sp, fp
    2454:	pop	{fp, pc}
    2458:	.word	0x0000062a
    245c:	.word	0x00010e54
    2460:	.word	0x000002fc
    2464:	.word	0x00010c64
    2468:	.word	0x00000400
    246c:	.word	0x00010d68
    2470:	.word	0x00000576
    2474:	.word	0x0000045c
    2478:	.word	0x00010dc4
    247c:	.word	0x000005d2

00002480 <rb_malloc>:
    2480:	push	{fp, lr}
    2484:	mov	fp, sp
    2488:	sub	sp, sp, #8
    248c:	str	r0, [sp, #4]
    2490:	ldr	r1, [sp, #4]
    2494:	movw	r0, #1
    2498:	bl	a9c <calloc@plt>
    249c:	str	r0, [sp]
    24a0:	ldr	r0, [sp]
    24a4:	movw	r1, #0
    24a8:	cmp	r0, r1
    24ac:	movw	r0, #0
    24b0:	moveq	r0, #1
    24b4:	mvn	r1, #0
    24b8:	eor	r0, r0, r1
    24bc:	eor	r0, r0, r1
    24c0:	tst	r0, #1
    24c4:	beq	24cc <rb_malloc+0x4c>
    24c8:	bl	b08 <rb_outofmemory@plt>
    24cc:	ldr	r0, [sp]
    24d0:	mov	sp, fp
    24d4:	pop	{fp, pc}

000024d8 <safelist_client_instantiate>:
    24d8:	push	{fp, lr}
    24dc:	mov	fp, sp
    24e0:	sub	sp, sp, #24
    24e4:	ldr	r2, [pc, #128]	; 256c <safelist_client_instantiate+0x94>
    24e8:	add	r2, pc, r2
    24ec:	ldr	r3, [pc, #124]	; 2570 <safelist_client_instantiate+0x98>
    24f0:	ldr	r3, [pc, r3]
    24f4:	add	r3, r3, #88	; 0x58
    24f8:	str	r0, [fp, #-4]
    24fc:	str	r1, [fp, #-8]
    2500:	ldr	r0, [fp, #-8]
    2504:	ldr	r1, [fp, #-4]
    2508:	ldr	r1, [r1, #432]	; 0x1b0
    250c:	str	r0, [r1, #428]	; 0x1ac
    2510:	ldr	r0, [fp, #-4]
    2514:	ldr	r1, [fp, #-4]
    2518:	add	r1, r1, #88	; 0x58
    251c:	str	r1, [sp, #12]
    2520:	mov	r1, r2
    2524:	mov	r2, r3
    2528:	ldr	r3, [sp, #12]
    252c:	bl	ad8 <sendto_one@plt>
    2530:	ldr	r0, [fp, #-4]
    2534:	str	r0, [sp, #8]
    2538:	bl	b68 <rb_make_rb_dlink_node@plt>
    253c:	ldr	r1, [pc, #36]	; 2568 <safelist_client_instantiate+0x90>
    2540:	add	r2, pc, r1
    2544:	ldr	r1, [sp, #8]
    2548:	str	r0, [sp, #4]
    254c:	mov	r0, r1
    2550:	ldr	r1, [sp, #4]
    2554:	bl	2574 <rb_dlinkAdd>
    2558:	ldr	r0, [fp, #-4]
    255c:	bl	1760 <safelist_iterate_client>
    2560:	mov	sp, fp
    2564:	pop	{fp, pc}
    2568:	.word	0x00010bfc
    256c:	.word	0x00000382
    2570:	.word	0x00010bac

00002574 <rb_dlinkAdd>:
    2574:	push	{fp, lr}
    2578:	mov	fp, sp
    257c:	sub	sp, sp, #16
    2580:	str	r0, [fp, #-4]
    2584:	str	r1, [sp, #8]
    2588:	str	r2, [sp, #4]
    258c:	ldr	r0, [fp, #-4]
    2590:	movw	r1, #0
    2594:	cmp	r0, r1
    2598:	beq	25a0 <rb_dlinkAdd+0x2c>
    259c:	b	25c0 <rb_dlinkAdd+0x4c>
    25a0:	ldr	r0, [pc, #276]	; 26bc <rb_dlinkAdd+0x148>
    25a4:	add	r0, pc, r0
    25a8:	ldr	r1, [pc, #272]	; 26c0 <rb_dlinkAdd+0x14c>
    25ac:	add	r1, pc, r1
    25b0:	ldr	r2, [pc, #268]	; 26c4 <rb_dlinkAdd+0x150>
    25b4:	add	r3, pc, r2
    25b8:	movw	r2, #143	; 0x8f
    25bc:	bl	bf8 <__assert_fail@plt>
    25c0:	ldr	r0, [sp, #8]
    25c4:	movw	r1, #0
    25c8:	cmp	r0, r1
    25cc:	beq	25d4 <rb_dlinkAdd+0x60>
    25d0:	b	25f4 <rb_dlinkAdd+0x80>
    25d4:	ldr	r0, [pc, #236]	; 26c8 <rb_dlinkAdd+0x154>
    25d8:	add	r0, pc, r0
    25dc:	ldr	r1, [pc, #232]	; 26cc <rb_dlinkAdd+0x158>
    25e0:	add	r1, pc, r1
    25e4:	ldr	r2, [pc, #228]	; 26d0 <rb_dlinkAdd+0x15c>
    25e8:	add	r3, pc, r2
    25ec:	movw	r2, #144	; 0x90
    25f0:	bl	bf8 <__assert_fail@plt>
    25f4:	ldr	r0, [sp, #4]
    25f8:	movw	r1, #0
    25fc:	cmp	r0, r1
    2600:	beq	2608 <rb_dlinkAdd+0x94>
    2604:	b	2628 <rb_dlinkAdd+0xb4>
    2608:	ldr	r0, [pc, #196]	; 26d4 <rb_dlinkAdd+0x160>
    260c:	add	r0, pc, r0
    2610:	ldr	r1, [pc, #192]	; 26d8 <rb_dlinkAdd+0x164>
    2614:	add	r1, pc, r1
    2618:	ldr	r2, [pc, #188]	; 26dc <rb_dlinkAdd+0x168>
    261c:	add	r3, pc, r2
    2620:	movw	r2, #145	; 0x91
    2624:	bl	bf8 <__assert_fail@plt>
    2628:	ldr	r0, [fp, #-4]
    262c:	ldr	r1, [sp, #8]
    2630:	str	r0, [r1]
    2634:	ldr	r0, [sp, #8]
    2638:	movw	r1, #0
    263c:	str	r1, [r0, #4]
    2640:	ldr	r0, [sp, #4]
    2644:	ldr	r0, [r0]
    2648:	ldr	r2, [sp, #8]
    264c:	str	r0, [r2, #8]
    2650:	ldr	r0, [sp, #4]
    2654:	ldr	r0, [r0]
    2658:	cmp	r0, r1
    265c:	beq	2674 <rb_dlinkAdd+0x100>
    2660:	ldr	r0, [sp, #8]
    2664:	ldr	r1, [sp, #4]
    2668:	ldr	r1, [r1]
    266c:	str	r0, [r1, #4]
    2670:	b	2698 <rb_dlinkAdd+0x124>
    2674:	ldr	r0, [sp, #4]
    2678:	ldr	r0, [r0, #4]
    267c:	movw	r1, #0
    2680:	cmp	r0, r1
    2684:	bne	2694 <rb_dlinkAdd+0x120>
    2688:	ldr	r0, [sp, #8]
    268c:	ldr	r1, [sp, #4]
    2690:	str	r0, [r1, #4]
    2694:	b	2698 <rb_dlinkAdd+0x124>
    2698:	ldr	r0, [sp, #8]
    269c:	ldr	r1, [sp, #4]
    26a0:	str	r0, [r1]
    26a4:	ldr	r0, [sp, #4]
    26a8:	ldr	r1, [r0, #8]
    26ac:	add	r1, r1, #1
    26b0:	str	r1, [r0, #8]
    26b4:	mov	sp, fp
    26b8:	pop	{fp, pc}
    26bc:	.word	0x000001fb
    26c0:	.word	0x000001a6
    26c4:	.word	0x000002ef
    26c8:	.word	0x00000306
    26cc:	.word	0x00000172
    26d0:	.word	0x000002bb
    26d4:	.word	0x00000139
    26d8:	.word	0x0000013e
    26dc:	.word	0x00000287

Disassembly of section .fini:

000026e0 <_fini>:
    26e0:	push	{r3, lr}
    26e4:	pop	{r3, pc}
